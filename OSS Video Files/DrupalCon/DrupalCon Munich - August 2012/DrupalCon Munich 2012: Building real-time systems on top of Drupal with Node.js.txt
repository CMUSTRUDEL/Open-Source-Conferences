Title: DrupalCon Munich 2012: Building real-time systems on top of Drupal with Node.js
Publication date: 2013-03-29
Playlist: DrupalCon Munich - August 2012
Description: 
	The creator of the Drupal package for Node.js goes over how to leverage the strengths of Node.js to compensate for some of the Drupal stack's weaknesses, especially when creating real-time system with chat and queue systems as examples.
Captions: 
	                              I                               the right help for you to do your                               homework you can log on to this side and                               some volunteers will be available for                               you to to get help with whatever you                               need and for this we build AQ AQ system                               and a chat system where you can talk to                               some advisors and originally we built                               this on Table six and it worked fine for                                a for a while but as we got more and                                more users we were seeing in really                                intense load on the database and I I'd                                like you to walk or through a bit of why                                oh right I'm supposed to speak into that                                now there are some situations where                                where PHP and the model its execution                                model is really not a good fit Drupal is                                slow that's hardly a controversial                                statement here as anyone who who's been                                a who's needed to have a large-scale                                Google side has known there are                                performance challenging aspects of all                                the nice stuff that Google does for you                                it's another Drupal is bad it's just                                that all the advanced functionality you                                get from Drupal concert at a cost and                                and PHP doesn't scale for certain things                                because and I'm going to go go up it                                into like computer science linger here                                so but I'm going to try and to explain                                what it all means but basically PHP is                                synchronous it is single threaded and it                                has a shared nothing mode of operation                                and synchronous single-threaded is like                                you could say the word the worst of both                                both worlds it is a very simple way to                                do things but it also tends to eat a lot                                of server performance any modern                                computer is like a four-way four-lane                                highway you can see each car is like                                something being done on the server                                and it's it's not really it's very                                common to see your your your highway                                looking something that lit that like                                this it's actually just you know                                standing around doing nothing it's not                                really using all its capacity and the                                same goes for for PHP actually this is                                what you might see if you inspect what a                                PHP process is doing at any one time the                                blue the the the dark blue areas is                                where PHP is actually doing anything and                                all the other stuff is where PHP is not                                actually doing anything and it spends                                time you know waiting for databases                                waiting for web services waiting for you                                know waiting for the request to come                                from the Apache server and all the while                                it actually the PHP process is running                                and it's eating your memory doing                                nothing and so the main thing that                                nodejs does is actually to to try and                                fill in the spots where one part of your                                program is not doing anything with and                                allowing another part of your program to                                do something in the same time so it's                                trying to use your resources more                                efficiently and hopefully that also                                means that your server will run faster                                this is a picture of another large                                website website we are running this is                                what the server is spending its time on                                and you can see the large green areas is                                we're waiting for external web services                                and I don't know if you can read the                                bottom text but basically out enemy an                                enemy given Monday we have like a                                hundred and hundred and fifty Apache a                                processes standing around and using                                   gigabytes of memory and most of the time                                they're actually just twiddling their                                thumbs like a third of the time they're                                actually not being used because they're                                waiting for something else to happen and                                that's you know that's a huge waste of                                resources anyone could tell you that and                                and it the picture is about the same if                                you look at the CPU we're not really                                using the resources we have to                                and conversely to run the side we have                                to use a humongous server to have all                                the RAM we need for doing this she had                                nothing and that's that's a PHP way of                                doing things it's like your server is                                completely everything every                                time you ask it ask you the question                                it's like give me a page                                               page it starts all over again asking hey                                who are you where are you coming from                                 what's the site name I'm on what                                 database am I supposed to talk to okay                                 let me go talk to that database and all                                 this happen every single time anything                                 happens on the page a whole lot of work                                 and and yes yeah yeah and that that can                                 be a good thing yes they're trying to                                 ask a question no she's just counting                                 sorry all right well yes that is that is                                 not a specific to PHP but it is a                                 problem of the way PHP works and its                                 many in many ways a good thing but                                 because you don't have to worry when                                 writing PHP programs about memory                                 leaking or anything like that because                                 whenever your request is done the PHP                                 apache server froze everything you've                                 done away all the hard work you had of                                 asking you the database for something or                                 whatever you're done it's like it's like                                 you know some offices they have like                                 shared disks so every time every day                                 every time you leave you have to clean                                 up all your stuff and put it in your bag                                 and go away it's a bit like that and                                 it's a very simple model but it also                                 brings a lot of overhead and and the                                 reason it was made this way was that PHP                                 was originally not intended to have all                                 that much going on on one on a single                                 page so you didn't need to keep all                                 sorts of state and logic                                 but when you're building something like                                 a chat service you actually need to have                                 a lot of stores state about what what                                 you're going to induce what users are                                 online and where where they are in the                                 queue and you know what's going on and                                 what chat messages are waiting for                                 someone else to pick them up and and for                                 that you have to you know stick stuff in                                 the database and get it back out again                                 and at the chat side in example it was                                 peeking around                                                      second when we had like a normal evening                                 with homework help and that's about the                                 the pain point for mysql is it's hard to                                 scale it much further than that without                                 you know and at the same time we were                                 actually getting complaints that this                                 the updates were slow because we are                                 only polling back to the to the PHP                                 server every five seconds to see whether                                 there were any any new messages so you                                 actually if someone wrote to you you                                 could it could take up to five seconds                                 before you actually saw what they wrote                                 to you and when you're chatting less                                 that's that can be kind of inconvenient                                 and they and of course if we decrease                                 our port the polling time we would just                                 increase the server load so that wasn't                                 really a good way to go and PHP was                                 never designed for this sum of one of                                 the more exciting new developments                                 that's been on the web is something                                 called WebSockets where your browser                                 makes a persistent connection to the                                 server and and the server can then send                                 stuff back to your clients without have                                 your client having to ask it again                                 anyone who's built anything like a chat                                 service and PHP knows that you have to                                 continually ask the server hey what's                                 going on hey what's going on hey hey                                 what's going on but with WebSockets you                                 can actually do the other way around and                                 actually just you know open a socket and                                 wait for the server to tell you hey                                 something new has happened                                 I think that that's that stands to                                 reason that that that is much more                                 efficient it's like you know taking a                                 drive with with your car and having your                                 kids screaming all the while in the back                                 hey I we are we are we there yet that is                                 actually very rare for you to answer you                                 yes to that question so it wouldn't it                                 be nice if you could just make the the                                 kids be quiet and then just tell them                                 when you're when you're your there that                                 basically is what we're doing with                                 WebSockets right another point in favor                                 of doing stuff will note jason this is                                 very specific for no TS because node.js                                 is written in javascript so imagine                                 anyone of you have has probably dealt                                 with having a form on a website and                                 having to validate the input to that                                 form and as we are getting more and more                                 dynamic and age actually and stuff like                                 that you actually need to have                                 validation on the client because it's                                 annoying to have to fill out the whole                                 form and click submit and wait just to                                 have it tell you back hey you did you                                 miss this field or you know the address                                 must contain a number or whatever                                 whatever so more and more we're starting                                 to implement validation on the clients                                 but we actually still need validation on                                 the server because when you're doing                                 your validation in javascript anyone                                 with just a little bit of knowledge                                 about javascript can actually cheat that                                 so you want your validation to iran both                                 on the server and the client and with no                                 GS you can actually do that you can use                                 the same exact code on both sides and                                 and everything just works as its                                 supposed to boot and you can do the red                                 do this with all the all your business                                 logic basically so it's also when you                                 are having you know performance problems                                 you can look into stay you know look                                 into what what kind of work your server                                 is doing and if you know if you're doing                                 a lot of string                                 crossing or you know juggling XML or                                 whatever you can actually push some of                                 that work to the client and say and you                                 know send some more roll that that data                                 back to the client and make make the                                 client to all the hard work for you you                                 know that that's actually free free                                 resources in your server center right                                 there so that can be pretty sneaky they                                 are and that's that's all very nice you                                 know but but how do you get get it to                                 talk talk to Drupal you know having just                                 a separate you know server Abby thingy                                 is not really all that helpful and so                                 we've we've actually helped build some                                 tools tools for that the simple way of                                 course is to you know just communicate                                 with with an OTA server via the rest                                 protocol and that that use case is it's                                 actually also kind of common imagine you                                 have like a third party web service that                                 you are neat your site to integrate with                                 you need to provide some data from a                                 third party source so you can actually                                 just load that over to node and make                                 note do all the hard work with that                                 because PHP really has a lot of overhead                                 for doing stuff like that imagine if you                                 just you're just taking the incoming                                 parameters from the client side and                                 passing them on to a server somewhere                                 else and if you do that with we're                                 within Drupal you will actually have                                 like a                                                            starting up and a lot of waiting while                                 the web server responds and a lot of you                                 know and it's all using memory at the                                 same time so that's that's the yeah                                 that's the smallest the same case as in                                 the beginning I explained using your                                 resources more efficiently but if you                                 want your note installation to actually                                 interact with Drupal you need some way                                 of                                 of actually checking that the juicer                                 you're looking at is actually the one I                                 don't know can you read this more or                                 less well the gist of it is that we've                                 we've made it a node.js module that                                 actually is able to interact with some                                 parts of the google database mostly the                                 simple paths we don't get into you know                                 fields and content types and stuff like                                 that but looking at users and                                 permissions in our experience actually                                 gets us what we need because most of the                                 time we're just interested in finding                                 out who is the Deuter and is he allowed                                 to do whatever it is that what we're                                 actually doing in this page and this is                                 some example code that just that does                                 just that and if you want I can dig into                                 the the node.js module for Drupal in a                                 bit a bit later and a demo of that right                                 it was my curse                                 well basically you can see the website                                 here                                 just a moment                                 sorry I'm passwords a great thing this                                 is not very exciting in many ways but                                 but the thing you can actually see                                 behind the scenes if we look what's                                 going on down here it contacts our no TS                                 instance and here we have our true pool                                 session ID and that is actually used to                                 to authenticate the user and because I                                 in this lots of fun because in this                                 instance I'm logged in as an admin user                                 I get this interface that you can see                                 here that's a list of help us online and                                 a list of users waiting for help and                                 this is actually not very exciting                                 without without any actual users users                                 online but that's the basic gist of it                                 and and we have the same code here                                 yeah down basically here we use the is                                 admin flag to grant the user more                                 permissions and this is this is the node                                 code that actually runs this side a more                                 complex example is actually a product                                 we've been working on the in the last                                 few months basically it's a it's a DNS                                 control panel powered by drupal and                                 imagine let's bring up the network                                 control panel so we can see what's                                 actually going on here and you can see                                 this is this is not a this is not a joke                                 we are not not fooling you anything here                                 this is actually the the actual response                                 time of how no das servers from this                                 very location we're going out on the                                 internet to a server here in Germany and                                 asking for something and actually                                 getting a response back in                                    milliseconds that's more or less you                                 know                                                                     would have taken if we were using it                                 inside rupal that's the main you know                                 the main interesting point about it                                 actually and let's try something a bit                                 fun here                                 oh it makes TC                                 so if changes and you can see                                 consistently across these these requests                                 to our API server which is running note                                 yes they all take like less than                                     milliseconds and the maze the main the                                 most of that time is actually talking to                                 the database itself and you know that                                 that's a that's beyond the scope of this                                 demonstration at you tuning that and you                                 can see oh yeah wrong domain fun like                                 that at any moment now linds net here is                                 a bit flaky but you can see actually a                                 few actions i does just do then it in                                 there are updated real-time across our                                 network of DNS servers and oh and all                                 this is actually powered by noches and                                 node.js is really powerful for doing all                                 sorts of small small simple tasks we                                 have like three or four different                                 node.js apps one that handles sinking to                                 the web servers one app that handles                                 rendering the sonne files and all kinds                                 of stuff like that                                 so that's that's what we're we're I'm                                 very excited about you know being able                                 to provide my users with an interface                                 that's so responsive that you don't                                 actually have to wait you know if you                                 can get beyond get below like                                     milliseconds it'll feel instant to your                                 users another exciting thing that we                                 actually haven't done much in practice                                 is what they call RPC you might think                                 that is a very nasty word and some RPC                                 systems in the past have actually been                                 really nasty and complex but when doing                                 our PC with node you're basically just                                 creating a small server that is prepared                                 to you know provides some some functions                                 you can call from the other side so if                                 in this case we are creating a transform                                 function that you know replaces all the                                 vowels with a double oh I don't know for                                 what purposes but but you can imagine                                 doing something on your server that is a                                 lot more complex than this and you want                                 to you wanting to expose that to another                                 server because doing it this way will                                 actually save you from having to write                                 an API on the one side and I having to                                 ride a client on the other side so this                                 is a way a way of sidestepping all all                                 that hard work and you can see the                                 results of doing it in p calling the                                 same and a function in PHP it's it's                                 pretty simple you just connect to the in                                 this case we're using a library called                                 denote and it has language bindings                                 available for besides its native node.js                                 it has bindings available for Python and                                 PHP and Ruby and Java I think and                                 although obscure languages and that                                 actually means that you can build some                                 functionality and on one                                 thing and and have other machines using                                 it without having to make it do a whole                                 lot of work around it basically and you                                 can pass arrows back and it's it's say                                 when you were in you might not have have                                 done all that much of this kind of stuff                                 but when you have like five servers that                                 need to do something together in concert                                 this is actually pretty powerful because                                 it goes both ways as so when you are                                 when PHP connects to to the denote                                 server the denote server can actually                                 call back to the PHP server and tell it                                 hey what's going on you know I just                                 updated the whatever record so for                                 distributed systems this is awesome                                 still see how much time I have left                                 there are other implementations of this                                 kind of this kind of thing in the                                 example I showed you before we actually                                 using something called now Jas which is                                 the precursor to what is now called                                 bridge and you can see the basic logic                                 of all the stuff is here we are signing                                 we have a you know let's need to be                                 larger I can see that                                 you see we are creating groups we can                                 assign users to and then we saying that                                 everyone in that that group has the                                 function clear queue available and don't                                 know if you notice before this is this                                 this button it says clear queue and                                 Danish and so we with a little bit of                                 JavaScript on the front end we have                                 wired up this function to this button                                 and the this function is running on the                                 server and it cleans out you know the                                 database table and the state we have                                 about who's in who's in line for for                                 help and that is really a powerful way                                 of doing stuff like that Wallace yeah                                 that is basically the gist of it and                                 i've put aside a lot of time for                                 questions because i think this is a                                 really interesting subject and if if you                                 want I can dig into more or more                                 examples of how to to do simple stuff                                 with no GS anyone yes yeah that could be                                 a you know anything where you're doing                                 well I should repeat the question that's                                 right your question was that if you have                                 like a web app where you have like a                                 continually scrolling content like on                                 Twitter where you scroll down and more                                 content appears if node.js we would be a                                 good way to fish that content and yes I                                 think almost any any you any place on                                 your website where you're doing                                 something simple by a javascript ajax to                                 call back that to do something that                                 simply fetches stuff from the database                                 and returns the back as Jason or                                 whatever is a really good candidate for                                 replacing stuff with no TS because doing                                 so in PHP risk is really in fish                                 inefficient yes                                 i well it is closer i'd say but it                                 depends heavily on your use case of                                 course but but in the case with our chat                                 system we really needed to get to do at                                 least four or five cures to determine                                 who is this user does he has access to                                 this page and what messages are waiting                                 for him what is his spot in the queue is                                 he actually banned from the system and                                 those you know those Furies need to                                 happen no matter if you have the Drupal                                 bootstrap or not but but you can keep                                 that state around if you have like a                                 user persistent connection like a web                                 socket you can just attach that that                                 info to that so you don't have to do the                                 lookup for every little thing that                                 happens yes                                 well thats of course true well your                                 argument is that that no das is mainly                                 faster because it has to do less work                                 and that is that is completely true and                                 but the many of the ways it notjust has                                 to do less work is actually not really                                 possible to do with if you want to work                                 inside Drupal and the example I showed                                 from our own web app we actually not                                 just you know transforming a string we                                 are actually doing a couple of lookups                                 several lookups in the database and                                 updating a table and you know formatting                                 the data that is response in back to the                                 user but yeah that's true javascript the                                 node.js runtime is a bit faster than                                 PHP's simply because google the Google                                 engineers that are working on v                                      spent so incredibly much time tuning and                                 tweaking and doing all sorts of magic                                 stuff on the run time yes                                 yes the question was aren't we missing                                 all the hooks yes this is not something                                 you can build a module off this is well                                 you can't build extensible stuff in no                                 tears but but doing so is very much                                 different than you would do it in Drupal                                 so you wouldn't use hooks or anything                                 like that so this is mainly for you know                                 the the end line scenario I need to                                 build something finished thing you is                                 hard there is actually at a node GS                                 module for Drupal it's not I didn't                                 write it myself so I I won't say too                                 much about it because what I've I'm                                 saying might easily be wrong but the                                 basic thing they're doing with that                                 module is that they're they're providing                                 a way for for your PHP code to push                                 notifications to any user who's online                                 on the Drupal side and for that they                                 have a separate note at node.js                                 application that listens for connections                                 from Drupal and passes those messages                                 down down to the clients yes yeah                                 yeah yeah well the main point is                                 actually what you call stateful                                 interaction like you're connected to a                                 chat room you're talking to Michael you                                 just need to know what what's changed                                 since I was last here but you need to                                 keep all that state of what's going on                                 at the moment in memory so you don't                                 have to you know look up into the                                 database and and another thing is you                                 know actually much of what Drupal does                                 is just acting like a proxy for the for                                 the database you know fetching stuff                                 from the database and let's just                                 slightly transform it transforming it                                 and sending it back and that's usually                                 what you're doing if you're building an                                 and HX powered interface yes                                 well it depends a bit on how or how                                 comfortable you are with javascript in                                 the first place if you if you've worked                                 a little bit with javascript you know                                 that that everything is it's a bit                                 different it's more like function                                 oriented programming at you and you have                                 like callbacks that get back to you                                 later it's a bit like when you're                                 calling at an AJAX request in your                                 front-end JavaScript code you have to                                 you know you get a function that is                                 called later when the responses is ready                                 and that's how almost everything happens                                 in node.js you know if you call your                                 database you pass a function along and                                 when the database responses back that                                 function is called so it's it so no tas                                 code maint looks more like like this                                 where we have deeply wrapped stuff well                                 the session not a very good example                                 like it like this you have functions                                 wrapped in functions wrapped in                                 functions because they're called at at                                 different times throughout the execution                                 this is actually some testing code we've                                 we've written for fluid dns service but                                 but that's the basic gist of it and on                                 top of that you have to you know setting                                 up node.js on a web servers is really                                 not all that complex and you can no tas                                 runs as its own process and you can                                 either you know use Apaches mod proxy or                                 nginx proxy support to have it on the                                 same IP address as your main website or                                 you could use it you can run it out on                                 its own IP address or a different port                                 number and but it runs as a standalone                                 web server and you just have to to keep                                 that running as long as the Drupal                                 application is running and getting                                 getting to learn all that I think                                 depending on what what you need to do                                 but but it's you know the hello world of                                 Drupal no notice is actually starting a                                 server here is this is how much code you                                 need to to to make your own web server                                 web service with node.js so the simple                                 stuff you can learn in a day or two I                                 would say yes you                                 well into the extent that you're                                 actually accessing drupal's database                                 from within note yes you have to take                                 the same precautions as you do in Drupal                                 you know use parameterize curious and                                 you know a check who the user is before                                 you know allowing allowing him to change                                 roles of Drupal users or you know but                                 that I don't think there's anything                                 surprising security-wise yeah if you                                 want if you want to you're curious to to                                 do any support in any of the stuff that                                 happens in Drupal with who query alter                                 you would have to do that manually                                 yourself yes                                 yeah I think in this instance we're                                 actually not using backbone we are using                                 something similar a different framework                                 called mas and and the Drupal for this                                 application Drupal is simply a shell                                 that we used to you know we load a bit                                 of markup and all the magic all the data                                 pooling is actually happens through the                                 node instance so so they aren't really                                 two streams here Drupal is mainly                                 passive it just helps load this page                                 helps authenticate the user helps us                                 check access you know                                                  the stuff you know for a system like                                 this is pretty important that the users                                 can change is each other's data and can                                 can only see the data that they own                                 themselves so that's that's that's why                                 we use Drupal for this down there                                 um it depends a bit on what what kind of                                 loan load balancer you well the question                                 was persistent connections to know des                                 is that troublesome with a load balancer                                 and it depends heavily on if you're not                                 if you load balancer actually supports                                 it we've used it with a simple varnish                                 banished load balancing and that that                                 works great because then when one is                                 detects that it doesn't support whatever                                 magic is going on in the HTTP                                 transaction that is going on for example                                 when you do a website circuit upgrade                                 money's just say okay you guys talk to                                 each other I'll keep out of this and it                                 actually works as as as expected but if                                 you have some kind of some kind of old                                 old system or anything like that you                                 have well it depends but the thing is                                 with when we're using for for the for                                 the chat side we actually using                                 something called socket i/o which is the                                 library you can use for node.js that                                 handles fallbacks for these things                                 because not all browsers actually                                 support WebSocket yet and and if you're                                 behind a proxy at home or whatever if                                 you are sitting at your school or                                 anything you might not be able to get                                 web sockets going at all actually so                                 this library actually helps us fall back                                 on on different stuff it can use flash                                 flash targets you know the flash with                                 the you know all the nasty graphics you                                 see on the website that jumps around it                                 can actually be used for something                                 useful and that is for for providing                                 full back support for web sockets                                 because flash in the flash runtime is                                 something similar to web sockets and if                                 you use a library light socket i/o it                                 helps you fall back on                                 that and if all else fails it'll use ATX                                 polling so it'll just pull the server                                 every few seconds and and then you're                                 you know then we're back to to how it                                 used to work with this site but we are                                 still not back to the awful performance                                 of the old side because nodejs when it                                 when you use polling for that it still                                 has the state in memory when you poll so                                 it doesn't have to ask the database                                 about everything it can just you know                                 look up into an array and say him now                                 that's nothing new for you sorry anyone                                 else you                                 and well the node module for Drupal                                 right yes it's a bit confusing ah well                                 we've we've int we've implemented some                                 parts of the Drupal API mainly to do                                 with the DB and you know DB query and                                 user dot whatever this is kind of slow                                 but basically we provide we provide the                                 similar functions to like a user access                                 in Drupal and so you can call if you                                 have a user object loaded from the tubal                                 database in odious you can actually call                                 you to access on it to find out does                                 this user has have a specific Drupal                                 permission and similarly you can call                                 user loads to load the jute load the                                 user and yeah stuff like that basically                                 if we use a node library to connect with                                 the jewel database yes depending on the                                 database we use the node library called                                 MySQL for connecting to mysql database                                 or a node library called p.p.g for                                 connecting to postgresql databases it                                 doesn't support all them the new magic                                 in Drupal                                                           stuff like that so it's a it's a very                                 simple curation text and lets me see if                                 I can actually find it here modules topo                                 see this is some of the code this is you                                 to load and it it's simply you know                                 selects selects the role from the jew                                 from the drupal database and as as the                                 roles the specific user has and makes a                                 call back yes                                 what are the differences between bridge                                 and denote well I think the main the                                 main difference is that they're just                                 competing products you know what are the                                 differences between two or three and and                                 Drupal that more or less you know the                                 same same thing kind of things but they                                 have different designs design decisions                                 bridge tries to do a bit more but is                                 it's a little harder to understand what                                 is going on because it's it's more magic                                 in a way and but but you could do more                                 or less the same thing with both well                                 yeah yeah the reason we're considering                                 switching away from bridge or on now                                 Jays as it used to be called is mainly                                 that is it's run by a start-up and they                                 are no other developers on the code so                                 we are a bit you know careful about that                                 because you never know when they might                                 actually go away down there                                 yeah the question was how do we keep our                                 node.js servers running even if there is                                 an error or it crashes or something and                                 it depends a bit on what operating                                 system you're using but all mo                                        can use something called upstart that is                                 a system for keeping track of what                                 services your system is running and                                 restarting them if they fail we using we                                 use something called supervisor which is                                 the Python program which does the same                                 thing it monitors processes and reached                                 ask them if they're crashed that I think                                 there are hundreds of small scripts like                                 that so you can use whatever you wish                                 more less there's also an odious powered                                 one that is called forever and so if you                                 want to run note you run your note                                 script with another note script you can                                 actually do that yes                                 well the question was is no J's running                                 Multi multi threaded or does it handle                                 their process does it branch of                                 processes like Apache and multi threaded                                 no well well yes it's a bit complex                                 actually because the node.js program                                 itself contains several threads one                                 which one javascript and a few others                                 who handle stuff like talking to the                                 network and reading file from disks and                                 so in its so the node.js program itself                                 is it multi-threaded but you can't or                                 you really rather you shouldn't use                                 threats inside your node.js JavaScript                                 code because javascript is a dynamic                                 language so only one thread can actually                                 run it run the JavaScript environment at                                 a time because otherwise your variables                                 might change you know from                                           next and that leads to really                                 unpredictable code so what you what you                                 do if you want your note is to take                                 advantage of all your all the many CPUs                                 on your servers you can either spawn you                                 know for four copies of your know th                                 program and then they'll just you know                                 she had she had the resources available                                 or if you need shared state between them                                 you can actually you can spawn you can                                 spawn processes in notice like you can                                 in Apache and then you you are                                 responsible for communicating between                                 the processes yourself of course that's                                 actually one of the main use cases for                                 denote if you have several instances of                                 the same program that's running on the                                 same server and you need them to you                                 need them to talk to each other and you                                 can use denote for that yes and there                                 you                                 and well if I understand your question                                 correctly if you have like a single p                                 single resources resource that is being                                 requested by                                                          one time how is no tia is going to                                 handle that and no it's not going to                                 take the same well it has to respond to                                 each each of the ten ten thousand                                 requests in turn but depending on what                                 what code you're actually running to                                 generate that response it'll do one of                                 several different different things as                                 soon as you do a database call or                                 anything asynchronous in node.js it'll                                 use the opportunity while it's waiting                                 for something else to happen it'll take                                 another requests incoming requests and                                 answer that if it can so if you have                                 like an example like the hello world we                                 had where was it like this well then                                 this will take a picosecond or something                                 like that for the node.js server to                                 actually process this part of the code                                 for this case most of the time is spent                                 actually passing the HTTP request and                                 putting together the right package is on                                 the network and start like that and that                                 actually handled is is run on threats so                                 well it's it's it's kind of hard to                                 answer a giver a short answer to this                                 and but no Jess will handle a lot of                                 concurrent connections and it won't take                                                                                                                                                                                 actually spend on the network going back                                 and forth and going back and forth with                                 the database so it might take one                                 millisecond per request so if you have                                                                                                                                                                                  it might easily be shorter than that                                 you'd have to run a benchmark to get                                 some get a decent answer to that I think                                 anyone is down there yeah well there are                                 a metric ton of reddish clients from                                 phone OTS the node.js community is                                 really excited about radius so use I                                 don't really have a recommendation of                                 which one is good but use any of the                                 reddish clients and you know you just                                 give it the IP address and the number                                 and then it has in JavaScript it                                 provides the methods that you can use on                                 your reddit server to run and run them                                 the assembly that's telling me to shut                                 up well to simply answer how we're using                                 that in our application we can use it                                 for storing and storing Drupal sessions                                 and stuff like that any kind of data so                                 you need to keep keep in sync between                                 multiple servers where this can be a                                 really good solution for that yeah                                 aren't we supposed to finish that                                 quarter past or so we have five five                                 more minutes if anyone                                 we have our own web server so we run it                                 there currently we're renting it from                                 hetzner which is actually a german                                 company now but any wii PS or an almost                                 any kind of server will run nodejs we                                 actually use nginx for all our                                 applications but most of the time we try                                 to either put notice on a on a different                                 port number so it doesn't have to be                                 proxied via engine X or run it on a                                 different IP address that's actually                                 what we're doing with our application                                 here you can see the the requests to                                 know TS goes to api that aft                                        which is a different IP address so in                                 this case we're not proc seeing anyone                                 else well thank you for coming                                 that one that is from New Relic actually                                 yes                                 there's actually something pretty cool                                 called note inspector that allows you to                                 run the basically this this inspector                                 the same as runs in in the Chrome                                 browser you can run that on your no                                 trace program and instead breakpoints                                 and inspect variables to all the stuff                                 like this this tool can do that's pretty                                 neat actually so I think you should                                 probably look into that it's called node                                 inspector instruction where should I                                 look for well it depends you know we've                                 seen some really strange is used like                                 people using mobile phones and switching                                 cell towers and they can be all sorts of                                 weird risks why you using disconnects so                                 it's hard to give a general answer for                                 it but Miss configure proxy could do it                                 easily of course no dnd next proxy will                                 not work if you're trying to do stuff                                 with web service for example it doesn't                                 support that yes                                 yeah that's what we're doing with our                                 app to ya                                 yeah I don't think that's actually much                                 you know much much to learn there it's                                 basically you know changing the oil of                                 your Ajax request to point to the other                                 server and let me demonstrate                                 yeah yeah basically we're doing it in                                 JavaScript you can see on this our                                 application here having that mix
YouTube URL: https://www.youtube.com/watch?v=bc3aPsjvqP8


