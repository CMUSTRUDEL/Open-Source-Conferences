Title: DrupalCon Munich 2012: Drupal 8: What you need to know
Publication date: 2013-03-29
Playlist: DrupalCon Munich - August 2012
Description: 
	Since March 2011, the community has been hard at work on Drupal 8, which is currently undergoing active development. This revolutionary new release sports tons of improvements, and Angela Byron, Drupal core committer and long-time core developer, will lead you through the most important ones and how they'll impact your future site building endeavors.

Get answers to your frequently asked questions, learn about the changes are coming down the pipe for clients, site builders, designers, and developers, find out more about the core development process, and take away some action items for what you can do to help make Drupal 8 the most awesome release of Drupal yet!
Captions: 
	                              hi everybody can you hear me okay thank                               you for that really nice introduction I                               appreciate that that was very well so he                               ready made me sound very much more                               awesome than actually I'm so skip past                               that well just briefly i work with                               juries and a doc we at the office of the                               CTO and my role in the Drupal project as                               both a Drupal                                                       committer so I helped lead development                                efforts of the new version of Drupal I                                help keep the old version of Drupal                                stable and I'm a drupal association                                board member and I wrote the using                                Drupal book with with a couple of                                co-authors Eddie Barry and Bruno de bont                                so today I wanted to talk to you a                                little bit about Drupal                                                 stuff like the timeline for Drupal                                  what's planned in Drupal                                                site builders designers and Famers and                                developers and then the most important                                topic is how you can help and I know a                                lot of you out here sitting there going                                what why are you talking to me about                                Drupal                                                             Drupal                                                               why are you sitting here talking to me                                about stuff that's like at least a year                                down the road I'm not going to use it                                anymore and this this is why so if we                                look at the Drupal                                                   see that back in January of                                           we shipped Drupal                                                      when the development cycle of Jubal                                  ended and then we had a little bit of a                                gap we began development of Drupal                                     March of                                                                was because we migrated to get as well                                on drupal.org which yay get we love good                                right so we began development in March                                of                                                                                                                                    deadline coming up in December which is                                called feature freeze at that point all                                of the things that we're going to put                                into Drupal                                                          means if we do any cool new features if                                we do cool API changes to make things                                easier if we throw in a new UI for all                                these kinds of things these kind of                                major things that are going to define                                what Drupal                                                        December first then we have a code                                freeze in February and the code freeze                                is when we stop you know                                changing stuff around we really try and                                make the api's stable so contributed                                modules can be importing and then in                                august ish whenever jus book on europe                                                                                                     ship drupal                                                            time next year our hope is to be able to                                ship everything so the reason we're                                talking about this now is that that date                                is not very far away because this is                                where we are right now and you can see                                that there's a very very small gap there                                and so we really need everybody's help                                to just power through this last little                                bit because this is really it whatever                                we can get done between now and december                                that's going to define what Drupal                                     so in short it's really time to kick ass                                with Drupal                                                            show you a few things I have to have a                                disclaimer that all of this stuff is                                under construction and not all of it is                                guaranteed to make it into Drupal                                       is all just stuff that people are                                working on but it's all going to depend                                on who helps so remember we can't do it                                without you so here are the major                                initiatives we have at the moment                                configuration management web services                                layouts multilingual and mobile and you                                can see that for the most part we're                                done with the analysis phase we figured                                out what we want to do we're heading                                into the design phase and a lot of cases                                are finished with that which is how                                we're going to do it but there's a whole                                lot left in terms of implementation on a                                lot of this stuff so we do need help so                                let's go ahead and run through the                                changes so for proposed changes for end                                users and clients we have things like                                mobile mobile is intended to go after                                this opportunity so there you can see                                 there's a little blue planet there for                                 all Drupal sites in the whole entire                                 universe now there's a little bigger red                                 planet behind there which is all CMS                                 site so drupal's only a tiny portion of                                 all of those sites out there powering by                                 CMS but then when you look at all sites                                 in the whole world very few of those are                                 powered by CMS at all they're using a                                 lot of static HTML and things like that                                 but then if you look at the device                                 explosion on mobile you know it's huge                                 and they're there in fact countries that                                 don't even really use desktop devices                                 anymore they just power it all through                                 mobile phones because they're cheap                                 they're available anywhere that kind of                                 thing so we need to be ready for this                                 because the next five years is going to                                 cover when Drupal                                                   some of the problems that we're trying                                 to solve is have you ever looked at                                 Drupal                                                                   of the box it's kind of not very                                 good-looking you have little scroll bars                                 going back and forth when you go into                                 the admin screen it gets all jumbled up                                 because you know the toolbar wasn't                                 designed for sort of mobile first and so                                 you know in Drupal                                                     trying to do is is streamline things                                 we're trying to put responsive themes we                                 actually have a responsive Bartik theme                                 and a responsive stark theme in core and                                 then we're working on seven and the                                 toolbars and stuff like that one area                                 where we need help is brainstorming                                 around what that toolbar should look                                 like you know because we're we're in the                                 middle of implementing this thing on the                                 spark distribution which is a Drupal                                   distribution attempting to prototype                                 Drupal                                                                but we really need a spec so if you know                                 stuff about that there's a code sprint                                 happening on friday that would be great                                 for you at a                                                             mobile though is from performance so                                 this is a graph I stole from the                                 internet somewhere but what it shows is                                 that you know we spent all this time                                 optimizing the backend making sure that                                 you know we're using a PC on our PHP                                 installation that we have really well                                 you know tuned databases and all this                                 kind of stuff but the fact is that on a                                 typical request the back end portion of                                 that is extremely small compared to all                                 of the stuff that happens after the                                 pages sir which is rendering all of the                                 HTML and the into the Dom it's grabbing                                 the external javascript and images and                                 all this kind of stuff in factoring that                                 and that's really what takes the most                                 time and so we need a big push on people                                 to try and optimize that whole front end                                 performance because of course it's                                 extremely important with mobile devices                                 which are less capable than desktop                                 devices and have crappier bandwidth as                                 well so John elbin is the is the                                 initiative lead for the mobile                                 initiative he'll be there on Friday                                 running mobile Sprint's if this is an                                 area that sounds interesting to you you                                 should completely come and check it out                                 if you're not here on Friday that's too                                 bad but if you're not here on Friday                                 they also meet on IRC every other                                 Wednesday and you can find more about it                                 they're altering experience improvements                                 is the next major area so these these                                 people are representing the victims of                                 Drupal right because we we create our                                 nice Drupal sites and we you know use                                 all these mom                                 Jules me put them together and then we                                 hand them off to people who have to then                                 use those sites                                                         of their job and so all they do is they                                 create content they administer content                                 they ban people whatever they do but                                 they have to work with Drupal's                                 administrative interface and out of the                                 box that's extremely poor and even if                                 you use best-of-breed contributed                                 modules it also isn't that great                                 compared to other solutions so trees                                 laid out this timeline for authoring                                 experience that we do it kind of                                 analysis in April and May design and                                 June and July and then an implementation                                 phase which is basically now we would                                 start taking some of those ideas from                                 the community and start getting them                                 into Drupal                                                             out of the box so one major initiative                                 coming out of the community is a                                 restyled content creation page and what                                 it's essentially done is taken the the                                 all the settings that are at the bottom                                 of the form and kind of move them out of                                 the sidebar and given them obvious                                 styling that it's like this is stuff you                                 don't really need to worry about unless                                 you think you need to go in there and                                 then they sort of cleaned up the form                                 that the content editors use to fill out                                 their content so that it's not quite so                                 overwhelming with all the choices and                                 things like that and then in a mobile                                 device what'll happen is when this                                 squishes down the the column will just                                 slip underneath as or sorry the column                                 will collapse into the main column and                                 so you'll just see kind of one big                                 scrolling thing like you do on Drupal                                   but for the you know desktop experience                                 that should be pretty good we also have                                 the spark distribution which I mentioned                                 this is a project that aqua is heading                                 up but we definitely want community                                 involvement in this because what we're                                 trying to do is really go after big                                 proprietary CMS's and make Drupal kick                                 their ass and authoring experience and                                 you know we've been doing a lot of buffs                                 and a lot of sessions this week and so                                 far community reception seems to be                                 pretty good so that's exciting for us                                 but you know we we're trying to shift                                 efforts you know shortly into really                                 going into jubilate and sort of lending                                 some power behind other initiatives so                                 some of the features in in sparker in                                 place editing so the ability to instead                                 of having to hit edit and go to a                                 separate page that doesn't look like                                 your page and then you hit preview and                                 then you get the same content twice                                 because that's helpful somehow yay                                 instead of that what we have is the                                 ability to actually edit the VIS                                 full contents of the page right in place                                 right as you see it so if you see a typo                                 click into it make your changes click                                 Save done and then of course the you                                 know that the content editing page will                                 still be there in case you need to edit                                 something that's not visible like the                                 workflow state or URL alias or something                                 like that how can you help boy Ann                                 Sommers is he here oh not he kind of                                 knows all this stuff but he's our he's                                 our usability team lead in the community                                 he's heading this stuff up as well as                                 Roy scholten they meet if you're                                 interested in usability these are great                                 guys to talk to they meet on IRC every                                 other Monday I'm sure they'll be                                 Sprint's on Friday for this stuff as                                 well all right site builders how many                                 people consider them some site builders                                 in the audience quite a few okay so                                 here's some stuff that of impacts you                                 one is multilingual and the goal there                                 is to try and add all the api's required                                 to have stuff like internationalization                                 of configuration of content you know of                                 everything at the interface translation                                 but without the need to install like all                                 of these modules right they ever try to                                 build a multilingual site especially in                                 Drupal                                                                   ass eh yeah it's like you know you know                                 this and this and this and this and then                                 God forbid that you decided to translate                                 some of your stuff as nose as opposed to                                 as field and then those two are                                 incompatible and it's sort of like so                                 the plan for Drupal                                                   have just you know some basic                                 streamlined stuff so you have your                                 interface translation which is                                 essentially locale module right now you                                 have your content translation so the                                 ability can't translate nodes and user                                 well probably not users well maybe use                                 your profiles and stuff like that                                 anything that's an entity more or less                                 as well as the you know sort of your                                 language support and they sort of like                                 there's language stuff all over the                                 place and so they're sort of                                 consolidating that into a couple of                                 streamlined modules and the goal is even                                 to pull in stuff like you know currently                                 when you need an updated translation for                                 your site you have to go to localize                                 that drupal org and then there's like a                                 thousand of these little p                                             have to put into various places they're                                 trying to build that stuff in out of the                                 box so that when you update your                                 translations just like you can update                                 your modules in Drupal                                                  all in                                 if anyone is around saturday and sunday                                 gabor hi she is leading a multilingual                                 sprint there also be one on friday with                                 the rest of the sprints but go meet with                                 him he'd love to have your help on                                 making this stuff a reality and that's                                 gay boys information here blocks and                                 layouts or the Scotch initiative is                                 another one that heavily impact site                                 builders some of the problems that we're                                 trying to solve with this are that                                 currently we have sort of this weird                                 situation where you know and you when                                 you're building out your page you're                                 building at your theme you know you have                                 a lot of things on that on that page are                                 blocks right you have the left sidebar                                 the right side or the content area                                 everything is in those things is blocks                                 but then not everything right you got                                 this site name which is this weird thing                                 you have these primary links or I forget                                 what they call them an main menu                                 variable in Drupal                                                    that are not blocks and you can't do                                 things with them and it's a different                                 pipeline to theme them and it's all very                                 confusing there's also not really the                                 concept of multiple layouts in core                                 there's the concept of one layout that's                                 been d so in other words if you don't                                 have a left sidebar it'll fill it in so                                 that you don't have a gap there but the                                 rendering pipeline is still like just                                 shove everything through one thing and                                 then you know like get it all integrated                                 like that and and the really tough part                                 with that is that when you when you                                 build one of these blocks that block is                                 rendered in isolation it doesn't know                                 anything about the page within it which                                 it's being shown so it's like hi I'm a                                 block sitting out here but I don't know                                 that oh I'm actually a block on a node                                 page and therefore I should pull in some                                 you know node reference information into                                 this block you have to kind of fake it                                 with a block because they don't have                                 that context of that concept of context                                 and then another annoying thing is you                                 can't reuse a block in multiple                                 instances so if you want your user login                                 block to appear on the left sidebar                                 everywhere else on your site except for                                 this one part you want on the right                                 sidebar you can't because you use that                                 one user login block already one time so                                 you need contributed modules for this                                 you need to duplicate the block for this                                 and it's very annoying and confusing so                                 in Drupal                                                              of flip the rendering model inside out                                 and you basically want or I'm sorry                                 outside in so essentially you start by                                 building the page and then fill out the                                 page with this                                 up inside of it and that accomplishes a                                 few different things one is that you can                                 actually have real layouts similar to                                 what panels does without being panels                                 necessarily but you know the ability                                 they here's my page this is my layout                                 here are my regions and then everything                                 within that has context of the request                                 all the way up and that's really really                                 useful for being able to build blocks                                 that are reusable across multiple                                 layouts and the nice thing about                                 rendering the blocks independently from                                 each other is that it supports things                                 like edge side include caching so you                                 know the way firearms out there with                                 Facebook scales is that you know you                                 have this page with all of this stuff                                 going on but it's only to like little                                 parts of the page that actually update                                 all the time the rest of the page just                                 static it doesn't bother rendering that                                 out every time you hit Facebook and so                                 this would allow things like saying you                                 know everything on my homepage can be                                 just like cash for an hour or two hours                                 who cares that kind of thing but this                                 one block that's a stock ticker I need                                 that to update every                                                   can do things like that and it's                                 extremely flexible we're still                                 prototyping the UI for all of this stuff                                 so boy enters from the usability team is                                 doing a lot of that work within the                                 spark team we've also built this                                 responsive layout designer which                                 currently is layered on top of panels                                 but essentially what it does is it                                 allows you to set up different                                 breakpoints so you say I want a                                       and a                                                                   can set up custom layouts / breakpoint                                 size that sort of follow the Dom model                                 and it when it does is it generates                                 extremely clean markup because a lot of                                 people hate panels because it's like div                                 div div span span span tip did to submit                                 and this way it would just be one sort                                 of cohesive thing so that's the stuff                                 that we're working on you know we need                                 things like panels in core more or less                                 page manager in core sort of we also                                 need the plug-in system which we                                 actually have now in Drupal                                             nice plug-in system so that these things                                 are all swappable and then there's a                                 bunch of other stuff that we need you                                 know in terms of like building access                                 controls around these things and stuff                                 like that it's a low level initiative                                 like that we need development help on                                 but it'll have tremendous benefits for                                 site builders if we can pull it off so                                 if this sounds interesting to you please                                 contact chris van der water                                 he's the leader of the Scotch initiative                                 all right this one's pretty exciting                                 views and mother bleeping core yay so                                 the problem this is trying to solve is                                 that mmm um yeah I mess up the slide so                                 basically Drupal                                                      released in january twenty eleven people                                 actually started using it and about July                                 of                                                                    Drupal                                                            basically there's a year gap right                                 between when we work so hard to get a                                 you know something out the door for                                 release yay between when people could                                 actually start using it in production                                 websites so with views being available                                 in core it allows us to shorten that                                 time frame because a lot of these                                 modules are waiting on these sort of                                 infrastructure modules like views to be                                 available so it's sort of like everybody                                 that depends on views is sort of held up                                 until views is ported then they can                                 start porting and then it sort of leads                                 to this cascading effect and of course                                 nobody updates their Drupal websites                                 until all the contributed modules are                                 available another problem we're trying                                 to solve this is has anyone here heard                                 of the snowman initiative it's kind of a                                 little okay a couple people snowman is                                 an initiative to to solve the problem of                                 you know how when you install Drupal and                                 it's big you know welcome to Drupal                                 thing is a blank page that says you                                 don't have any content yet that's                                 awesome you know like I feel so welcome                                 now thank you drew Pillai have no                                 content yet bad okay so the thing is                                 trying to solve is like what if we had a                                 nicer experience out of the box what if                                 we had some demo content what if we                                 actually set up a Drupal site you know                                 that was you know you could turn it off                                 or whatever but we set it up that                                 actually expressed what Drupal could do                                 and have things like photo galleries and                                 things like you know event listing pages                                 or anything like that and the problem is                                 to do any of those kinds of things like                                 a user login block or an event listing                                 you need views you can't really do any                                 of that with just the stuff that comes                                 out of the box in core because the only                                 thing that comes out of the box and core                                 is a crappy front page listing and                                 taxonomy term listings and that's about                                 it so we're trying to solve this issue                                 so one thing that's really                                 was right now as I speak it you can                                 download the Drupal                                                    and it actually works so the goal is to                                 try and move a lot of elements at the                                 sea tools module into core so things                                 like the there's an object cache thing                                 which allows you know abused to do its                                 preview stuff there's a bunch of UI                                 elements that we're going to want to                                 reuse across multiple places in core and                                 then you know the big advantage of                                 something like views and core also is                                 that some of these other initiatives                                 that we're doing it really helps to                                 validate that our approach is correct                                 and we'll be able to make changes to the                                 API is where they're not in time so that                                 we can fix these things before release                                 as opposed to finding out three months                                 after release that when views tried to                                 port oh whoops we forgot about this                                 major chunk of the API so it's really                                 really helpful um the views and core                                 initiative is is currently trying to get                                 funding to fund their team so if if                                 using course sounds interesting to you                                 if the ability to have cord or something                                 useful out of the box instead of                                 something crappy out of the box sounds                                 interesting to you go to angry donuts                                 calm or it's also on the views homepage                                 or project page and please donate to the                                 cause because we've got a really narrow                                 timeline they're doing a bunch of great                                 work and it would be great to get those                                 guys funded all right changes for                                 designers and front-end developers is                                 the next topic how many people consider                                 some steamers or front-end developers                                 okay cool the first thing you might be                                 excited about is html                                                    the page templates all pretty much all                                 of the templates except for a small                                 handful of them are all html                                             using you know doctype they're using                                 different types of elements like that we                                 also have html                                                         if you caught Jesus keynote he kind of                                 already covered this but you can do                                 things like say use a telephone element                                 in your form and then it will restrict                                 the it will restrict the the dial pad                                 your assert the keyboard to only showing                                 the dial pad instead of showing all of                                 the letters and numbers what allows a                                 smoother you know sort of operation on                                 mobile here's a before and after which                                 doesn't come out very well here but                                 before and after HTML TPL dot PHP                                 between Drupal                                                    basically what you can see is we've                                 gotten rid of XHTML we've gotten rid of                                 RTF                                 a stuff specifically printed there and                                 instead it's moved to like a much more                                 streamlined generic there are attributes                                 that you can print out and it just takes                                 care of everything we also have a few                                 tags to optimize the output from mobile                                 we're also trying to do a bunch of                                 markup cleanup i mentioned that dos                                 pants pants and a problem because right                                 now our our markup makes Jefferies                                 Altman cry oh so there's a bunch of                                 people working on this problem they're                                 there they're doing things like creating                                 standard components so J seen the the                                 former html                                                           she she went ahead and sort of created                                 these patterns of like when I actually                                 display an image this is what I'd like                                 the HTML source to look like and this is                                 what I'd like the PHP output to look                                 like and I understand there's going to                                 be people sprinting on this on Friday so                                 if you're sick and tired of div soup                                 that would be a great place for you to                                 jump in and help um twig is another                                 major initiative around front-end                                 development so in Drupal                                               have these template files that are sort                                 of kind of mostly HTML but there's also                                 a lot of PHP code thrown in there you                                 know and there's a lot of weird you know                                 functions like render and hide and show                                 and it's not clear when you use those                                 and when you don't the way twig works is                                 it kind of does it based on these little                                 token replacements almost and twig is                                 actually extremely powerful because one                                 it enforces separation between your                                 front end in your back-end logic so you                                 can't just Chuck you know fifteen                                 hundred lines of sequel in your page TPL                                 dot PHP or so you have to maintain that                                 separation but the second thing is is                                 this this is much more secure because in                                 Drupal                                                                  know whether that variable coming in has                                 been sanitized or not and if it has it                                 you need to know all the security                                 functions you need to call on that twig                                 is going to take care of all of that and                                 make it really really streamlined so                                 there's people working on that on Friday                                 as well and then finally I have to end                                 on the sad note we ended up killing IE                                 six and seven ah                                 so not only can you work with some of                                 the best and brightest people that                                 drupal has to offer but you don't have                                 to care about ie                                                        work on core right ok now we're going to                                 do changes for coders and I have to warn                                 you that things are about to get geeky                                 so how many people are geeks yeah ok                                 we're obvious that's cool alright so the                                 first geeky initiative is web services                                 which is sort of like services in core                                 only better and the problem that we're                                 trying to solve with web services is                                 that right now drupal assumes that every                                 single request that it serves is going                                 to be a fully rendered themed HTML page                                 sent to a desktop browser and the                                 problem is that if you if you want to do                                 something other than that like let's say                                 no I'm just having a little JSON a you                                 know callback that just gives me the                                 autocomplete of the usernames or                                 something like that it still runs                                 through the whole pipeline it loads the                                 theme system the form API everything                                 else and then a very end you have to                                 kill this part so that it doesn't                                 actually push the content through the                                 theme layer you know and that's a not                                 very performance at all because you're                                 sort of loading way more stuff than you                                 need and be it's just a false assumption                                 because these days you know you would                                 have no idea what's on the other side of                                 that request it could be an HTML you                                 know compliant Deb you know browser                                 thing on a desktop it could be a mobile                                 device it could be a flash application                                 well nobody uses flash anymore but you                                 know so this kind of thing and so in                                 Drupal                                                                 into this thing that just takes requests                                 and returns responses and the default                                 response is HTML page so for you know                                 people who are site builders they won't                                 notice any difference but if you are a                                 developer who needs to work with one of                                 these other technologies do you                                 integrate with other systems or you need                                 to you know build a kiosk application or                                 whatever you can totally do that because                                 Drupal can feed you out the stuff that                                 you need so the plan for Drupal                                      we're actually moving huge components of                                 the symphony project into Drupal                                        gabion content CA the the symphony team                                 lead spoke earlier today about about                                 some of that stuff and this is really                                 interesting                                 because Drupal in the past has kind of                                 gotten criticized for like a not                                 invented here syndrome and that we will                                 go out of our way to invent things that                                 already exist because we think we can do                                 it better you know we kind of have that                                 there's that there's that idea that that                                 exists but you know this stuff was                                 really like we knew we wanted to switch                                 to this this model of where drupal is a                                 central content repository that's                                 publishing out to multiple devices and                                 we are like okay well we can build this                                 ourselves but let's actually take a look                                 out there and see what else does then                                 and we found that Symphony is actually                                 really well architect in it it does this                                 already so if we can integrate their                                 stuff in not only will we solve our                                 immediate problem but will also solve                                 the problem we're like developers coming                                 into Drupal from other technologies and                                 frameworks that are object-oriented that                                 have clean separation between things and                                 don't have things like arrays of a raise                                 of a raise of a raise as much as I love                                 a raise of a raise of a raise they'll                                 find it easier to get into Drupal even                                 if some of us who have more legacy                                 knowledge are going to find it a little                                 bit harder to get into Drupal                                          whole I think is best for the ecosystem                                 and sort of inviting more people to come                                 and play with us so um Larry Garfield is                                 the web services initiative lead and                                 he'll also be sprinting on Friday so                                 that would be a great thing to help out                                 with if you've ever worked with services                                 module if you have experience with some                                 of the stuff going in and out or if you                                 have symphony experience particularly                                 one of the things are trying to do right                                 now is sort of integrate Symphony into                                 our menu routing system so that you have                                 the ability to pass in an NH sorry I'm                                 gonna get this wrong like a mime type of                                 the type of content you're trying to get                                 and get that back and then also what                                 type of requested is that a get or a                                 post we want to store some of this                                 information so that menu router items                                 know how they should respond based on                                 the incoming data configuration                                 management is another geeky feature                                 we're doing today buddy run into this                                 problem you have no tidy for over here                                 on their dev server and you have no ID                                 for over here and your production server                                 and you try and move it over and it just                                 explodes everywhere so these are some of                                 the problems that we're trying to solve                                 so you know a lot of like a best                                 practice is definitely to have a dev and                                 a live environment separately because                                 that way you can mess around in your dev                                 environment do funny things and do                                 whatever you need to do well the live                                 environment stay                                 running and Drupal is great because you                                 know anybody even without programming                                 experience can use it they just open up                                 a web form and they start changing                                 settings and they click Save and it                                 changes instantly and that's lovely                                 until you get to the point where you                                 want to move it to your production                                 website because all of those things are                                 in the same database your contents in                                 the same database as your configuration                                 as your users and everything else so you                                 can't just Chuck the whole database over                                 right because then you're going to miss                                 all of the content that got posted                                 between the last time you updated                                 production and while you were fussing                                 with your development site so you know                                 there are many different ways that                                 people have thought to solve this                                 problem you know there are things like X                                 portables there's things like features                                 there's things like variables set or                                 variable get using update hooks I think                                 most people employ the napkin approach                                 which is where you take out at napkin                                 and you write down I went to administer                                 content types blah blah blah you know                                 and you write down the steps and then                                 you do them again I'm production right                                 like that's also a valid thing but it's                                 a complete pain in the butt right it's                                 like there's there's many different ways                                 all of these things are not always                                 compatible with each other and it's a                                 little bit cumbersome to manage so the                                 plan for Drupal                                                         instead where you know as you're                                 clicking and around in your interface                                 and you're saving settings what it's                                 actually doing is this writing through                                 to both a database as a cache of that                                 information but also to files so these                                 little yamo files they are like just                                 little yeah Mel is just like they look a                                 lot like info files honestly they're                                 just like text colon and then value so                                 that when it comes                                                    your live environment how you do it is                                 you move it over with version control                                 like if you're heavier stuff in get or                                 even ftp if you are old school and you                                 really enjoy insecure protocols yeah you                                 can prove it over that way and then on                                 the production website you do an                                 explicit import operation which will                                 take the stuff from the file server and                                 then search from the file system and                                 move it up into the caching system so                                 that then uses this instead the other                                 thing that we're doing to solve the                                 content staging problem is adding you                                 you IDs which are big like                                              you need                                 identifiers to the two different                                 entities in course so users and nodes                                 and things like that because that way                                 even if both of those are called node                                 for it can look at the iu ids of both of                                 them and see that they're different and                                 no oh this doesn't actually exist over                                 here so let's move it over and just give                                 it a different ID so some really awesome                                 things happening there's a lot of energy                                 around this but they always need help                                 particularly what needs help right now                                 is is converting all of the old systems                                 we have that are still using variable                                 gadget and variables set over to this                                 new configuration system so Greg hey                                 rocker dunlap is the the person leading                                 that and I don't know that he's formally                                 running a sprint on us on friday but                                 he's definitely around and so talk to                                 him he'd love to have more help in his                                 initiative there's also a whole bunch of                                 other stuff development wise um you know                                 in general this proudly found elsewhere                                 thing we're really looking for common                                 patterns we're looking for libraries we                                 can incorporate in to sort of take some                                 of the base framework stuff that we're                                 responsible and Drupal and sort of like                                 pull it in as other components of other                                 projects that can then take care of that                                 what we're trying to do is essentially J                                 you know what we did with jquery when we                                 chose that for their JavaScript                                 framework in Drupal                                                      Drupal                                                                   our core developers to have to know all                                 of that stuff you know now we don't have                                 to design our own JavaScript framework                                 we just use this one instead and it                                 already conforms the best practices and                                 billions of other people are using it so                                 we get to get their benefit from their                                 upstream improvements it's a similar                                 thing that we're trying to do with                                 various components of our framework                                 we're also like a lot of people have                                 criticized Drupal                                                       the past for not being object-oriented                                 it's sort of this procedural thing and                                 and i'll let you know a lot of mott                                 people who've learned PHP since about I                                 don't know                                                            learned object oriented PHP it's just a                                 factor of Drupal's age is the legacy                                 platform that it's so procedural because                                 back when drupal started we were on it                                 like PHP                                                            maybe even two was a long time ago so                                 you'll notice when you check out Drupal                                                                                                      code a lot more classes a lot more                                 hierarchies and it looks a lot more like                                 other applications that you might have                                 used before in the past there's also a                                 much better entity                                 yeah I much better it's got full crud                                 operations meaning create really create                                 read update and delete so you no longer                                 have to download the stupid NCT API                                 module that's separate from core for                                 some reason to get all the rest of the                                 stuff it's all integrated in which is                                 great the test spot and the automated                                 tests in Drupal                                                    Daniel coud vine or son has spent an                                 enormous amount of time trying to get                                 that working we also have file and media                                 improvements being related by Dave Reed                                 and the media initiative there's all                                 kinds of stuff that's happening that's                                 not part of the initiatives that still                                 really moves your blade forward if you                                 want to list of all of those you can                                 find them at Jupiter org slash list                                 hyphen changes this is sort of the new                                 version of our Drupal                                                 page and so this this catalogs                                 everything that we've done and it's a                                 good page to get familiar with because                                 eventually when Drupal                                                  job becomes porting all of your modules                                 to juba late this is going to be a                                 really handy resource for you to know                                 about so I'd like to pause and give a                                 huge round of applause to over                                     contributors who contributed Drupal so                                 far                                 these guys are really been working their                                 butts off and they're amazing people and                                 they're both a lot of them are here so                                 you know go to them introduce yourself                                 buy them a beer do that okay but most                                 importantly we really need you to join                                 us on this list of names and here is                                 where I put my obligatory picture of                                 scary clouds and dire warnings because                                 you know jury showed this awesome                                 looking video and it had all this cool                                 stuff in it everyone was like wow                                 jubilate is going to be amazing and what                                 people forget is like yeah it's going to                                 be amazing if we get all of that done                                 and right now I don't know that we're                                 gonna get all of that done you know and                                 we see a lot of the initiative leads                                 starting to feel the pressure of the                                 deadline they're really starting to burn                                 themselves out because they feel like                                 they're trying their hardest to get this                                 stuff in but people oftentimes look at                                 what they're doing and they say oh                                 that's great but they don't actually                                 help with the stuff that needs to get                                 done patch reviews they don't help with                                 stuff like you know just sitting down                                 and hammering out code they don't help                                 with entering into discussions that have                                 important architecture impacts and                                 things like that and so it you know it's                                 sort of one of those things where it's                                 like we really need more people to help                                 or we're going to suffer a huge burn up                                 problem like sort of like we did last                                 year in London if people remember that                                 so so please if you have the abilities                                 and you don't need to be a coder                                 necessarily to do this stuff if your                                 front-end developers many of you are the                                 mobile initiative always needs your help                                 I'm sure spark would really love to have                                 some people working on it as well when                                 we move to Drupal                                                      any skill level can find something to do                                 to help you bleed so I wanted to do a                                 couple of Mythbusters things to help                                 with this because um a lot of people                                 think that this is true that you really                                 need to be Albert Einstein to contribute                                 to open source right I also thought this                                 believe it or not I i first installed                                 linux in                                                                 when debian linux fit on                                                and these days it fits on                                                high or whatever dvds better tape to                                 like two gigabyte hard drives I don't                                 know it's huge but back then it was very                                 small and that was the first version of                                 Linux i installed and i was really into                                 open source i thought oh this is cool                                 Firefox yay and stuff like that but I                                 always thought that you know                                 you had to be Linus Torvalds or you had                                 to be trees by tart or something like                                 that some really smart person with a PhD                                 and all this kind of stuff in order to                                 actually contribute to open source but                                 the fact is that's not true at all what                                 is a contributor a cuter is someone who                                 has these three attributes okay they see                                 something and they say well that's dumb                                 you know it's like it's stupid that                                 there's div div div span span span that                                 kind of thing they also see it and they                                 say well I want to fix that right III                                 see that that's dumb and I want to fix                                 that and then the third portion of that                                 is I can do something about it and that                                 doesn't necessarily mean code that could                                 mean I'm gonna I have an office building                                 and I could hold the sprint in my office                                 building and I could I could sponsor an                                 event where people could have you know                                 help I could create some mock-ups for                                  how this auto look you know I could do                                  user testing with my my content editors                                  because they're obviously not in the                                  Drupal core queue but it would be really                                  great to get their feedback to the                                  developers the people who intersect at                                  these three things those are the people                                  that power open source and you don't                                  need to be Einstein you don't need to be                                  you know you don't even need to have a                                  lot of experience a lot of our key core                                  developers or people who didn't even                                  know PHP when they came to Drupal they                                  learned it by reading other people's                                  patches and they learned it just from                                  talking to people and trying things out                                  in experimenting and you know that kind                                  of thing another another another admit                                  that a lot of people have is that this                                  is how improvements are made in Drupal                                  so you have Gina the genius over here                                  right and she's a genius so she has a                                  huge head right she's a genius and she's                                  just sitting there you know thinking to                                  herself one day you know I have this                                  amazing idea just popped to the top of                                  my head so what I'm going to do is I'm                                  going to whip out my text editor which                                  you know which is probably Emacs right I                                  just kidding I oh I know okay um and                                  everyone around her goes wow that's                                  amazing that is your best work yet okay                                  how many people think that's how core                                  contribution or open-source contribution                                  happens okay that is not what happens at                                  all and that is total BS now this is                                  what actually happens so you have like                                  Edwina the end user okay and she's mad                                  because she just found a bug                                  and so she goes to the issue queue and                                  she searches she doesn't find anything                                  in there so she files a bug report and                                  I'm just going to pause here if the only                                  thing that you ever contribute to an                                  open source project is a book report                                  that makes sense then that is an                                  incredibly valuable contribution and you                                  should pat yourself on the back because                                  so many people are like it's broke                                  really okay how is it broke it doesn't                                  work well so you know having a bug                                  report that's like this is what happened                                  and this is what I tried to do in all                                  this and there's really important then                                  Paula the programmer wanders in and you                                  know she's also angry because she hit                                  the same bug she searches he issue queue                                  and she goes oh hey there's already a                                  bug report about this that's great ok                                  I'm going to try and fix it because my                                  clients having this problem I need to                                  fix it anyway why don't I go ahead and                                  give that fixed everybody else so she                                  codes it up and she depicts is her                                  problem then she posted to the issue                                  queue and she marks it needs review and                                  then tatiana the tester comes along and                                  tatiana tester has big coke bottle                                  glasses because all she does is look at                                  bugs all day so you know so she looks at                                  Paula's code and she's like ah ok but                                  what she does is she posed feedback on                                  that so she says well you know your                                  coding standards are bit off also you                                  know maybe instead of doing                                        queries you may be just want to do one                                  query and then iterate through the                                  results should whatever they know the                                  things are but you'll she will review                                  the code and she'll sort of like map it                                  against their standards and stuff like                                  that and chill market needs work a lot                                  of people are scared to do what Tatiana                                  just did here right they're scared to                                  say oh I don't want to I don't want to                                  criticize other people right I don't                                  want to make them feel bad so I'm not                                  going to actually tell them it needs                                  work I'm just going to use the passion                                  move on with my day but the lack of                                  Tatiana's is actually a total morale                                  destroyer because the worst thing to                                  happen to Paolo is she poster thing as                                  needs review and nobody cares right                                  that's just that destroys you it's like                                  I worked really hard on this patch and I                                  want people to use it I want them to                                  give me feedback so when this needs work                                  thing happens and there's really                                  constructive feedback in there that's                                  the best thing you can do for Paula                                  because she gets to learn from that she                                  also feels that somebody gives a crap                                  about what she's working on so please if                                  you if you have the technical chops to                                  be able to do patch reviews and you                                  don't you don't even have to know all                                  the technical stuff even if you                                  say all I did was run through this as an                                  end user and here's what I did I click                                  this this this and it worked for me                                  that's great you know but but getting                                  Paula feedback is a critical piece of                                  the process because that's how she knows                                  her work is appreciated so you market                                  needs work she says oh that's awesome                                  thnx here's another shot at it major                                  view again and then you have Wendy the                                  poor soul stuck on Windows XP and do you                                  know what she's going to say you totally                                  know what she's gonna say she's gonna                                  say it breaks in ie                                                    reason she's on ie                                                        she has this really old version of word                                  because she's a book author so she says                                  also mind your spelling so she found                                  some spelling error in the comments or                                  something marks it needs work again and                                  so finally call is like alright one last                                  time now it's more better spelling and                                  it's got all the bugs fix let's try this                                  again and Tatiana filters back in there                                  and she goes oh oh sorry needs review                                  Tatiana comes back she says oh hey that                                  is much better than before look at that                                  that's really great and so she marks it                                  reviewed and tested and then once it's                                  reviewed and tested it goes to someone                                  like me or someone like trees someone                                  who has the ability to actually                                  integrate those changes into core at                                  which point it might get mark needs work                                  again or whatever but the point the key                                  point to take away from this is there's                                  none of these people that had the full                                  answer to this problem right Edwina                                  found the bug she posted the bug report                                  and had it made sense Paula actually did                                  the work on coding the patch but not by                                  herself because she needed the guidance                                  of Tatiana and the spelling corrections                                  of Wendy to know that the solution was                                  solid and so any of these things that                                  you can do you can help push an issue                                  forward to our TBC and that's really how                                  we get changes made in Drupal and we                                  really do need more people to                                  participate because on the subject of                                  burnout you know these are all of the                                  people who have ever downloaded our                                  software of that there's a tiny red                                  portion you can see here that are the                                  people who bothered to register an                                  account even if that was the spam asst                                  about shoes they register an account so                                  at least they cared that much and then                                  the people who actually did something                                  with their account is like half of a                                  percent of people                                  not only registered an account with                                  triple adore but they actually did                                  something they answered to support                                  request they posted a patch they you                                  know did some triage on an issue queue                                  some time and they closed duplicate                                  support requests or whatever it is very                                  very few people are helping and so the                                  really that the Drupal that we all make                                  our living from that we all love is                                  really built by just a fraction of the                                  community and they do get burnt out when                                  they feel like people aren't helping so                                  to recap time to kick ass with Drupal                                    if you want to start here's a couple of                                  really good tips there's the Drupal core                                  mentoring hours that happen twice a week                                  on IRC every week and this is dedicated                                  time so if you are kind of like the                                  kitten under the stairs you feel like I                                  want to help when she said you're not                                  scary but Earl Boyles yelled at me in an                                  issue queue one time and I don't know                                  okay so that's fine but basically these                                  people are mentors they're there to help                                  you they specifically are there as                                  friendly people to help you with any                                  questions if you don't know what get is                                  yet come here they'll help you out if                                  you are trying to get a development                                  environment setup and it's not working                                  for some reason come they'll help you                                  out if you're like I'm actually kind of                                  a badass coder but I have no idea what                                  needs help with Drupal                                                   can help you out and the great thing                                  about these people is that they're                                  actually holding an actual in-person                                  mentoring hours sprint on Friday so if                                  you can be here on Friday and you want                                  to get started with this stuff please                                  come because they will help you with                                  whatever you need they've got a lot of                                  issues prefabricated that are already                                  ready to go for new people new                                  contributors coming in and they're there                                  to help you out with whatever you need                                  we also have if you are one of those                                  like badass coders who wants to know                                  what what you can do to help to push                                  these things along we also have a page                                  under community initiatives at the                                  Drupal core page and this is basically                                  all of the initiatives with who you                                  contact when they're meeting where                                  they're meeting and here's the five                                  things right now at this moment that                                  would help push this initiative forward                                  so if any of those things look like                                  things you can help with you can jump in                                  and you can help push those things and                                  so that's pretty much it I wanted to                                  give a little bit of slide credits                                  there's a bunch of people who helped me                                  develop these things over time because                                  this is you know Drupal                                               moving piece of software so there's a                                  lot of stuff going on and I just want to                                  say thank you and just ask                                  you had any questions so thank you                                  all right does anybody have any                                  questions I don't know how the mic thing                                  works so you might need to yell yell at                                  and I'll talk it in and Mike really I                                  answered all your questions yes                                  sure so the question was um it's already                                  clear that Drupal                                                       backwards compatible with Drupal                                          is true and then the question was what                                  is going to be done to help that problem                                  oh Jesus core conversation is starting                                  in                                                                       sorry Google okay and the question was                                  what's going to be done to make that a                                  little bit better in Drupal                                               great question so the first thing I just                                  want to cover is like you're right it is                                  not backwards compatible Drupal has a                                  philosophy which says we break your code                                  and not your data what that means is                                  that there will always be an upgrade                                  path provided for you between major                                  versions of Drupal but as we find more                                  performant ways of doing things or                                  optimized way of doing things more                                  flexible ways of doing things the core                                  developers are free to actually rip                                  things out and replace them with better                                  sick technologies than we had before                                  because this is what makes Drupal agile                                  and this is what makes Drupal able to                                  keep up with the stuff that's going on                                  the world and then in terms of Drupal                                    the big barrier to backwards                                  compatibility is honestly a lot of                                  Drupal's current architecture which is                                  all procedural based there's a lot of                                  stuff like and you know a function will                                  get an argument that's an array                                  formatted exactly in this way and as                                  soon as you start changing that array to                                  something else or you even invent the                                  you know you add another top-level index                                  there or something you break api's which                                  is why we're very constrained in Drupal                                                                                                         object orientation this move to things                                  like Symphony components and dependency                                  injection and some of these other                                  patterns is what's going to allow us to                                  break API is far less often because when                                  we move to this pattern what you can do                                  is if you don't like the way something                                  does something you use the dependency                                  injection container you swap it out with                                  something else entirely and then you're                                  able to move with it currently there's                                  no plans for backwards compatibility of                                  Drupal                                                                   is kind of sailed it's not going to                                  happen so there will be an upgrade                                  process that's about the same as the                                  Drupal                                                                  like a pain in the butt however there                                  are people very interested in doing                                  something in the future like preserving                                  backwards compatibility for two releases                                  or something like that but it really                                  requires a sort of like under the hood                                  architects                                  refactoring that we're doing right now                                  in order to support that better because                                  you can't you literally can't have both                                  a HTML centered desktop renderer engine                                  and a you know rest-based a pc you know                                  a Tanya rest-based API centralized                                  content server coexisting at the same                                  time unless the code base is completely                                  unintelligible or unless it's really                                  crappy performance so you know that's                                  that's one of the things that we're                                  struggling with right now is how to                                  emerge both of those things but there is                                  talk in Drupal                                                  preserving backwards compatible longer                                  it has to get buy-in from the core                                  development team who honestly doesn't                                  see the value in that right at this                                  moment but i think i think as more                                  people help with core development it                                  allows us to let those guys below huh ok                                  i'm not quite as stressed out as I was                                  before so maybe we could take this on                                  this backwards compatibility thing but                                  the the the the short version of that is                                  we'll probably reopen that discussion                                  when Drupal                                                              for now it is not backwards compatible                                  and if someone wants to create a                                  backwards compatibility library and                                  contribute for it so another question I                                  don't know how much time I have actually                                  do I have until three two i meant three                                  ah you poor suckers no i'm not going to                                  give it yeah                                  yeah yeah good question so the question                                  was well as we move to symphony are                                  there going to be changes to the way it                                  hooks work and function and stuff like                                  that which is a great question because                                  symphony has its own version of hooks                                  they're called I'm going to get this                                  wrong they're called like event                                  subscribers I think and it's basically                                  like that you instead of the way Drupal                                  works which is like you say hey everyone                                  I'm you know saving and no does anyone I                                  want to do anything about that it goes                                  through all of the modules and checks                                  for module underscore save and then                                  da-da-da-da-da-da-da and then individual                                  modules can create event listeners or                                  whatever to sort of listen for those                                  events firing currently the plan around                                  using that Symphony event registration                                  system is to use it for sort of hooks                                  that need to fire before the module                                  system is ready so in other words um                                  there was one that just came out the                                  other day actually i think it was to                                  load the configuration system the                                  configuration system needs to exist                                  before the system module is available                                  for example because the fig                                  configuration system might have things                                  like your database credentials or                                  whatever so in that respect we are going                                  to be using the the symphony event                                  management system in order to basically                                  replicate like hook boot and and                                  possibly hooks like butta hook and it                                  there are some people that are trying to                                  go balls-out crazy replace all of the                                  hooks with symphony stuff but I don't                                  think that that's going to happen I                                  think that would be too much of a change                                  and I think that the hook system that we                                  have in Drupal is actually really clever                                  and it's very easy to explain in new                                  people it's like you know once they                                  understand what the hell of means but                                  you basically tell them it's like name                                  of the hook you know module name                                  underscore name of hook and it's a                                  really simple naming convention people                                  can understand the symphony version is                                  very clever but it definitely requires                                  more knowledge of object-oriented                                  programming to really get it so the plan                                  in general is to reduce the the symphony                                  hooks that we use to those that we need                                  before the module system is loaded or                                  just after the you know it's kind of                                  like the edge cases and possibly in the                                  installer and things like that but to                                  generally not use them core wide and                                  less                                  the sentiment in the cork you changes                                  dramatically over the next couple of                                  months in Drupal nine though that might                                  end up happening all right I have                                  t-shirts that say that basically say                                  this if anyone would like some go ahead                                  and raise your hand whoa okay oh we need                                  somebody who can throw a lot farther                                  than I can to do this okay yes yeah I                                  spend a lot of time behind a computer so                                  I could use some help on this Thanks um                                  so I'm sorry Kathy could you say that                                  again some and i think i lost my mic so                                  there is a buff after right after this                                  session that you can go to to get your                                  development environment setup and that's                                  in the Montreal room what do you know                                  where that's located on this floor                                  somewhere follow Kathy she's going to be                                  walking there but yeah if you need help                                  getting your development environment                                  setup right after this session they can                                  get you hooked up with ma'am or whatever                                  you want so awesome uh one more question                                  yes Morton is asking for five dedicated                                  front-end developers for tomorrow to                                  sprint on the twig stuff do I have any                                  volunteers I see one two three come on                                  two more two in the back yes so can you                                  go find Morton the king of the north                                  once I'm done talking and he would love                                  to get you set up to help with that                                  stuff awesome okay thanks
YouTube URL: https://www.youtube.com/watch?v=olcTaYUNmVQ


