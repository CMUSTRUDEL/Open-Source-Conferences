Title: DrupalCon Munich 2012: Use datacenter tools to make your dev life easier
Publication date: 2013-03-29
Playlist: DrupalCon Munich - August 2012
Description: 
	Maintaining a big IT infrastructure can only be done efficiently with automation tools. For our DrupalCONCEPT hosting, we run a steadily growing number of servers (currently more than 120). And thanks to Chef and other datacenter tools, we do it with only 2 full-time sysadmins.

But even if you only have to set up a few development VMs now and again, you can use those tools to make your work much more efficient. And there isn't even a big upfront effort to get them running!

In this talk, I'll explain how you can deploy a consistent Drupal development and testing environment with minimal effort by adding IT automation applications like Chef to your toolbox.
Captions: 
	                              what Alice good                               good morning to third day of rubicon                               track                               ways                               Thank You Garrett good morning                               so third or fourth day of drupalcon i                               hope the coffee starts to kick in and I                               try to be as entertaining as possible at                               that time of day so let's start and get                                the less important things out of the way                                in that case that's me my name is Johan                                delish I'm from Germany and as one                                starts with rounds like this hello my                                name is Johan and I'm a sysadmin and                                this is where you say hella Johan um I                                ferd found Linux in about nineteen                                ninety three during my studies of                                computer science and instantly fell in                                love with it started doing system                                administration started my own first                                business already during my studies and                                in consequence nearly failing my                                graduation then I were to say souza                                certified Linux trainer for some time                                became an IT manager at web de which is                                one of the biggest web portals in                                Germany then one and one acquired web de                                so I changed to one and one and became                                head of IT core services they're leading                                at three teams with ten persons each                                doing system administration providing                                basic IT services like backup systems                                for                                                                   all kinds of automation so that's when I                                started to specialize in topics like I'm                                presenting today                                and in                                                                business and started early                                             company fry still IT and the product                                that I presented first at the drupal                                developer days in munich in                                           is called drupal concept at fra CIT we                                have the motto ops for deaths so we do                                IT stuff that helps developers be more                                productive be more efficient and our                                main product is named drupal concept                                which is a platform as a service or                                infrastructure as a service that's                                completely optimized for drupal we do                                the management of the whole                                infrastructure the infrastructure is                                completely automated and so our                                customers which mostly our development                                shops and agencies can concentrate and                                focus on developing websites building                                websites consulting their clients but                                they don't have to get up early in the                                night because some hard disk has failed                                and the lessons we learned the building                                trooper concept and the complete                                infrastructure are mostly about                                automating IT systems we are running now                                more than                                                              team and when I started thinking about                                what to present here at drupalcon it                                didn't take long to to get to the topic                                ok how can I use this automation                                knowledge in a development set up when                                we're talking about development setups                                there are a few challenges having a                                local development setup makes you free                                to work wherever you are you have if you                                have a development setup on your laptop                                you can work at the office as well as on                                the train on the plane and                                so you can use your development                                environment wherever you are that's                                handy but it requires a lot of effort                                installing and maintaining so sometimes                                you lose a lot of time by installing a                                new development set up at the beginning                                of project maintaining it doing software                                upgrades and all those all those things                                another problem is the well it worked on                                my machine student Rome when launching a                                website on a production environment and                                finding out that something doesn't work                                as it expected to do because there was a                                mismatch in software versions another                                version of a PHP extension for example                                and other things that have to be as                                equal as possible between the                                development environment you're staging                                environment and your production                                environment there are software versions                                there are dependencies between software                                components there are updates that                                require you to update your software on                                every environment and this takes a lot                                 of time if you're doing it manually I'm                                 happy to say that there are now tools                                 that help you to minimize the time you                                 spend maintaining your development                                 environment that help you to make sure                                 that your development environment is set                                 up similarly thus than the production                                 environment and that help you to                                 reproduce a setup every time you need it                                 so you won't have to fear that the                                 development setup you use with your new                                 project the differ in any way from the                                 one you are used to from the previous                                 project                                 there are mainly two tools I want to                                 introduce you to today at the first is                                 named vagrant who have you already heard                                 of vagrant hands up okay so i won't step                                 won't waste much time explaining what                                 vagrant is vagrant is a ruby gem so a                                 package that uses virtual box to build                                 VMS from a central configuration it                                 makes setup of vm is very very easy you                                 just need a few commands to get a new vm                                 up and running the first step you do is                                 to install vagrant which you usually do                                 we are the gem command with gem install                                 vagrant you will download the vagrant                                 package download all dependencies and                                 install them the commands that follow                                 are the usual commands of a vagrant                                 cycle first you need something that's                                 called a base box which is an image of a                                 pre-installed operating system in this                                 case I use vagrant box add to download                                 and install a Linux VM image that's                                 based on ubuntu                                                                                                                            command will now download the image from                                 the URL that's on the command line store                                 it on a central location on your                                 computer and from then on you can reuse                                 it to set up as much as many VMS you'd                                 like to                                 if you want to start up a new vm it's                                 easy you just create a directory where                                 all the necessary configuration files                                 will be put then you do a vagrant in it                                 precise                                                             you've downloaded before and with                                 vagrant up you'll have a running vm                                 after about a minute or so finally to                                 use your box you can ssh into the box                                 just by issuing the command vagrant SSH                                 so you don't have to deal with local IP                                 addresses or things like that vagrant                                 gives you an efficient command-line                                 interface to do to do everything you                                 need before I'll show you how that works                                 just a few words about the boxes those                                 vagrant boxes are pre-configured with                                 mostly a minimal setup and you can                                 download them from files dot vagrant                                 opcom where there's a community                                 repository of predefined VirtualBox                                 images you can use of course you will                                 also be able to build your own boxes                                 these commands help you with that you                                 can use vagrant box and different                                 options and vagrant package to build                                 your own radiant images and there's                                 another tool that will make that process                                 even more easy that's called VV it's                                 created by a patrick DeGraw which                                 everyone in the divorce world should                                 already have heard of                                 all you need to spin up a new vagrant vm                                 is the vagrant file which is a small                                 file containing configuration commands                                 basically it's Ruby but it's a                                 domain-specific language so you don't                                 need to be able to code in Ruby to                                 configure vagrant you'll see that in a                                 minute and that vagrant file can be                                 replicated to all the way ms you need to                                 spin up by using a common vm                                 configuration vagrant file you can make                                 sure your VMs are set up equally that's                                 how such an way current file looks like                                 it's just a block wave in conflict do                                 example I of three basic configuration                                 lines it's what base image is the box                                 based upon should it run in invisible                                 mode which just spins up the vm in the                                 background and you can ssh into it or                                 should it use the GUI mode which                                 VirtualBox uses if you are using                                 VirtualBox directly and a very practical                                 thing is vagrant will set up port                                 forwarding forwarding automatically so                                 if you have a vm running a web server                                 it'll map that web servers port                                       your host systems your to your laptop's                                 system in that case if you access                                 localhost colon                                                       web server running inside the vm so you                                 don't have again to deal with the IP                                 address of the vm or doing your port                                 forwarding yourself vagrant will take                                 care of that so let's see how that works                                 oh here we go so I just do a vagrant in                                 it precise                                    it tells me that it has created a ray                                 grant file with a default configuration                                 that I can use let's see how that looks                                 so most of these lines are comments here                                 is the bass box I've used in the init                                 command here I can activate the GUI mode                                 if I prefer that here i can define how                                 the networking should be done with this                                 vm / default the vm has a local private                                 IP address but you can connect the                                 network of the vm to your host computers                                 network or even your local network so                                 the vm will be reachable from from your                                 office network for example and here's                                 the port forwarding and there are many                                 different additional config options I                                 won't get into down so all I have to do                                 is to do a great round up to start the                                 vm                                 starting it for the first time will take                                 a bit of time because it needs to import                                 the bass box all subsequent startups                                 will be more quickly quickly                                 right                                 okay it's almost done                                 here we go                                 and with vagrant SSH I can login into                                 the vm                                 and I'm ready to go                                 you could argue that that's not very                                 impressive because you can do that with                                 vm imaging tools provided by vmware are                                 the virtual environments as well so i                                 spice it up a bit by introducing the                                 second tool which is far more important                                 to be able to automate your development                                 set up completely it's name is chef and                                 it's built by Opscode chef it will                                 enable you to automate all system                                 administration tasks and by defining how                                 your setup should look like you'll be                                 able to run machines that are configured                                 completely equal it's also better Ruby                                 based has a domain-specific language to                                 describe your administration tasks and                                 it works in a way that you define which                                 packages you want to have installed                                 which configuration files with which                                 contents you need and chef make sure                                 that your box looks like you described                                 it with every chef run on the box it'll                                 check our the packages installed that                                 should be installed are all the                                 configuration files configured as they                                 should be and so on and it makes all the                                 necessary changes so the first chef run                                 probably will be the most long and all                                 subsequent Geoff runs probably will be                                 very short because everything is already                                 in the state it should be in set                                 replaces manual system administration                                 tasks by describing how your system                                 should look like which in the DevOps                                 world is called infrastructure as code                                 to that goal chef uses different parts                                 mostly cookbooks which describe                                 difference of software components you                                 want to install for example there is a                                 Apache cookbook that contains all the                                 details how Apache should be installed                                 how it should be configured and gives                                 you the opportunity to change specific                                 configuration options cookbooks consist                                 of different components for example                                 recipes recipes are a kind of high-level                                 script that say ok for example for                                 Apache first install Apache then start                                 the Apache server then write a                                 configuration file from a template that                                 is predefined in the cookbook and then                                 every time the configuration file has                                 changed do a restart off the service all                                 the system components you can administer                                 with chef are called resources I come to                                 it on the next slide and all your                                 servers all your boxes are nodes in chef                                 speak every node has attributes for                                 example and attribute could be which                                 port should Apache respond on and to                                 make defining how a web server node for                                 example should look like as easy as                                 possible there are roles where you can                                 say ok the Apache role means that I need                                 the Apache cookbook I need the my sequel                                 cookbook I need the PHP cookbook                                 the predefined certain attributes so if                                 you once you have those roles defined                                 you just say ok that's an development                                 machine and in the role development                                 machine everything is defined what in                                 development machine means chef can                                 maintain all kinds of system components                                 you can install packages it can start or                                 stop services it can create files or                                 directories it can create configuration                                 files from templates it can run single                                 commands or complete scripts it can                                 install cron jobs it can clone git                                 repositories and many more things for                                 example that could be part of the Apache                                 recipe which means take the package                                 apache                                                                  install a package depends on the                                 operating system you use on redhead                                 based linux this it will be it will use                                 RPM to install the Apache package on                                 debian based Linux's it will use the app                                 system that's all behind the chef                                 abstraction layer you don't need to                                 define the actual commands to install                                 the package you just say install the                                 package then chef takes care of that                                 then you can say start the Apache                                 service again our service is started or                                 stopped depends on the operating system                                 you use chef of course knows on which                                 operating system is running currently so                                 it can take care of that without you                                 knowing exactly what OS you are using at                                 the moment this could for example change                                 over time and then we have a template                                 definition which writes the Apache click                                 on file you define which source                                 templates in the cookbook should be used                                 and a few options that                                 define the permissions and ownership of                                 the file and the last line in flux chef                                 to restart or reload the service if the                                 configuration file has changed you can                                 find out more about chef on the                                 different community websites mainly the                                 obstacle wiki on the obstacle community                                 website you'll find a huge library of                                 cookbooks people have provided as open                                 source for example the Apache cookbooks                                 there's a mile sequel cookbook an                                 engineer's cookbook and many many more                                 and on github there's also a huge                                 ecosystem of chef cookbooks for example                                 opscode themselves provide their own                                 cookbook switch Damon T maintained under                                 the third URL here ok the real magic                                 happens when we combine those two                                 vagrant on the one side enables to                                 enable you to easily spin up a vm based                                 on a predefined image and chef then will                                 enable you to configure that VM in                                 exactly that way you want it to be                                 there's not much you need mostly you                                 need the chef cookbooks you can down                                 load them manually for example from the                                 opscode community website all cookbooks                                 are provided as tar balls you up to you                                 download them then you unzip them put                                 them in a directory and use them to                                 provision of a grant vm that's a small                                 tool that makes the task very easy it's                                 called chef librarian it's another new                                 vision that is simply installed with gem                                 install librarian                                 you do a librarian chef in it which                                 creates a basic chef file where you                                 describe what cookbooks exactly you will                                 need and with librarian chef install                                 it'll download those cookbooks you need                                 and put them into your vm directory                                 let's do that                                 so at the moment I'm in the PM okay                                 let's get out of here at the moment all                                 that is in my directory here is the                                 vagrant file so I do a librarian chef in                                 it                                 now it's created a chef file that looks                                 like that it basically defines where to                                 get the cookbooks you order it to                                 install and then you just define the                                 crew poops for example here's the Apache                                 cookbook I don't need that for Drupal                                 development vm then we'll need the PHP                                 cookbook and the my sequel cookbook                                 those cookbooks contain one or more                                 recipes for example the my sequel cook                                 book contains a recipe to install the my                                 secret client and another recipe to                                 install to my sequel server so you can                                 decide which components exactly you want                                 to install that's all and then i'll do a                                 librarian chef install                                 if grab those three cookbooks                                 put them inside a directory so it's very                                 very easy to get those cookbooks and                                 update them that's how that looks and if                                 we take a look into the cookbook                                 directory you'll see that we have the                                 Apache to put the mighty poo poo poo the                                 PHP cookbook and since those cookbooks                                 also define which other cookbooks they                                 are dependent upon it already downloaded                                 the build essential which are needed by                                 one of the first three now we are able                                 to go                                 here's the                                 next step will have to define what of                                 those cookbooks will want to use the                                 best way to do that is to define a role                                 which you can reuse and reuse and reuse                                 that movie again but as I said it's a                                 domain-specific language so it's                                 basically the same text art works that                                 are special to check you define the name                                 of the role and a description and then                                 the main thing is the run list which                                 defines which recipes should be run in a                                 provisioning cycle we need the Apache to                                 recipe to do the basic Apache                                 installation then there are three                                 additional recipes that install special                                 patching modules I'll have the recipe to                                 install PHP I'll add the MySQL extension                                 to that and since i want to run mysql                                 locally in the WebM i also use my client                                 the my sequel server cookbook recipe                                 pardon                                 with that definition you can spin up VMs                                 that look the same every time you do a                                 fresh install and all you need to do to                                 connect chef and vagrant is to add a few                                 lines to the vagrant file that's                                 certainly awesome I just add a vm                                 provision block that uses chef find                                 where to find the coop i define find                                 your own files and I say which role that                                 vm should be and that's all I need to do                                 after that I can just do a vagrant                                 provision and vagrant will run chef I'll                                 show you that in a minute with that you                                 have a vm that has all the software                                 packages you need that has all the                                 configuration files you need and that's                                 that's a great way to spin up VMs that                                 look the same every time you run them or                                 in a team set up that look the same on                                 every development workstation gun is the                                 problem that your development                                 environment looks totally different from                                 your colleagues gone is the problem that                                 introducing a new team member to setting                                 up workstations takes a lot of time and                                 errors so with those tools you can now                                 do some really awesome stuff and if                                 you're done for example if your project                                 is finished you just do a vagrant                                 destroy which we completely erase your                                 vm completely delete the VM image you                                 have built and for a change that won't                                 be a problem every time you need another                                 version of that vm you should just do a                                 vagrant in it vagrant up and you're at                                 the same                                 point as you were previously                                 that's basically it just a few tips to                                 speed up the process process of                                 provisioning and installing VMs keep                                 your building blocks local use a HTTP                                 cache for example to cache packages so                                 every time the provisioning installs for                                 example the MySQL package it won't have                                 to download that from the internet store                                 your base boxes at a central place so                                 all your team members can use the same                                 box image and that don't have to                                 download the base box onto their                                 workstation with SSD based laptops disk                                 space is valuable again store your base                                 boxes at one a central location and do                                 do the same for the cookbooks so don't                                 download the cookbooks every time you                                 install a new development work station                                 but put them in a central repository put                                 them in a git repository for example so                                 you can see what what's changed or with                                 the cookbooks over time                                 I start my demonstration at the end of                                 my talk because of the take a bit of                                 time so I'll already come to my                                 conclusion by combining ray granted chef                                 you have the opportunity to set up                                 dedicated the development servers that                                 don't have to be shared between                                 developers they are configured                                 consistently and they are completely                                 disposable you can get rid of them every                                 time you want because you can spin them                                 up every time you want and you can be                                 sure that they look the same all the                                 time and it takes a lot of time out of                                 getting new team members into the                                 project because all you have to get them                                 is access to your vagrant files your                                 chef files and your cookbook repository                                 and you're done okay let's see how that                                 works I already have my cookbooks I                                 already have my chef file and I already                                 have my vagrant vm running in the                                 background so all I have to do is                                 vagrant provision                                 that's now running inside the vm so i                                 just do a vagrant SSH                                 hmm                                 ready running                                 no it isn't so                                 let's do the most easy easy thing and                                 just restocked ur p.m.                                 oh ok                                 that's a step missing anyone noticed                                 what I've forgot to do                                 yeah I didn't connect the Reagan                                 configuration with the chef                                 configuration everything's in place now                                 I just have to connect those two in the                                 way grant file so let's go down to the                                 chef configuration there's a puppet                                 installation as well for those of you                                 who already use puppet so here we go or                                 just need those                                 modify them a bit                                 since the cookbooks and rolls                                 directories are in the same directory I                                 just need that and then i define that vm                                 as I Drupal vm I just have to add the                                 roles directory                                 that's the                                 key role let's take a look at that again                                 here's the role that defines which                                 cookbook sandwich recipes I'd like to                                 use I could add attributes here as well                                 so if i run my apache web server on port                                                                                                        or if i have special configurations that                                 regard the PHP extensions for example if                                 i want to define how much memory the APC                                 cash is supposed to use i can add that                                 here as well without defining them chef                                 will always use the default settings                                 defined in the cookbook and now I'll do                                 a vagrant up which will start the vm                                 again should take less time now and it                                 will also see that I have a provisioning                                 block in place and after booting the vm                                 it'll immediate immediate lee start the                                 chef run which should be visible to us                                 now                                 yo                                 they are included yep                                 here we go it uses the chef directories                                 as share folders and now the chef                                 process has started                                 processing the package apache                                         which means use apt in that case to                                 download and install the magic since all                                 those downloads take a lot of time on                                 the Wi-Fi here I decided to put that                                 thing on to the end of my talk and it'll                                 go on installing packages creating                                 configuration files starting up services                                 and if the chevron has finished                                 successfully I'll have a basic setup                                 running Apache PHP and my sequel of                                 course to get a development em you'll                                 also add configurations you may want to                                 create document root directories maybe                                 even download you may even want to                                 download additional duper packages                                 installed rush and keep things like that                                 but that's only variations of that error                                 is quite common with the new ubuntu                                 version and I'm quite used to that now                                 all you need to do is update the package                                 repositories                                 vagrant takes care of that it will use                                 your ssh key by default and also do a                                 port forwarding from the vm sports                                       your local port                                                          that so that's what happens if you do in                                 ssh you could do a ssh minus p                                         IP as well but that's a lot more effort                                 than just do a regular ssh ok so we now                                 need to start another provisioning run                                 should work now for the second time                                 and since the apache package for example                                 is already installed it's                                 you to do all everything that's defined                                 inside the cookbooks we'll take a look                                 at that in a minute                                 so how did I get here                                 let's do a step back                                 here's the drupal roll file again and                                 here's the step i missed at the first                                 time to integrate chef with fragrant in                                 the way current file                                 okay and that's basically it from then                                 on you'll be able to create your own VMS                                 without much effort all the effort goes                                 into define your basic environment one                                 time share that definition with all your                                 colleagues and project members and then                                 just use that handful of commands                                 vagrant up way current provision to get                                 your VMS running that's all days to do                                 and so you can focus again on building                                 awesome super websites thank you                                 the question was how do I handle the                                 subtle differences between those nodes                                 between those VMs you do that using the                                 chef's attributes every chef node so                                 every chef every server you deploy with                                 chef has its own attributes and you can                                 define those attributes either on a note                                 by note basis so you can say okay on                                 this note Apache runs on port                                       another note Apache runs on port                                       all your VMs are equal in that way so if                                 you say my Apache always runs on port                                    for example which is the default so                                 let's say Apache ones and port                                        put that attribute into the role so by                                 assigning that role to your vm you not                                 only assigning it the list of recipes to                                 as execute but also the those special                                 attributes that most of the time land                                 somewhere in your configuration files                                 that's what the note attributes are for                                 there are many ways to do that and that                                 depends on your development cycle the                                 question was how now if I spin up that                                 we am how do we do I work with that do I                                 have to SSH into the VM and edit PHP                                 files there or how do I do that that                                 depends on how you are used to doing                                 your development the most                                 straightforward way of course is doing                                 an ssh into the vm doing or your changes                                 checking them we are the web server and                                 seeing if the result is what you want                                 that's a bit tedious I think so you                                 could as well use the shared folder                                 option of virtual box where you can                                 define a folder inside the uvm to be                                 accessible on your host system on your                                 laptop for example and if you so you can                                 use for example the tools that are                                 installed on your laptop to edit files                                 to change files and that way you may                                 only have to log into the machine to                                 restart the web server or those things                                 like that                                 yeah that's for example how vagrant made                                 the cookbooks I have installed locally                                 on my laptop to the vm it just created a                                 virtual folder so the chef running                                 inside the vm could access the cookbooks                                 i had installed on my laptop here                                 mmm so the question is if I understood                                 you correctly how do I get a quick start                                 with an existing development environment                                 and make that rep able to replicate                                 between for VMS most of the time you                                 have to put in the effort of defining                                 all the these parameters for one time we                                 are planning for example to provide our                                 customers with special cookbooks that                                 are based on the cookbooks we are using                                 to deploy our production system so these                                 cookbooks are simplified versions of                                 what we are using on our infrastructure                                 and our customers will be able to use                                 these cookbooks to spin up a development                                 environment that's in many parts is                                 completely equal to what we are running                                 in production so if you take the effort                                 of defining that for one time you'll                                 have a lot of productivity afterwards                                 we                                 great                                 you                                 you                                 yeah blueprint is a kind of                                 re-engineering your existing system                                 looking which packages are already                                 installed but that's already if I think                                 it through where the problem starts oh                                 it can't just use the complete package                                 lists and create a recipe for that for                                 example if i install apache the apache                                 package all the dependencies will be                                 automatically be taken care of and i                                 don't want to have a huge list of                                 dependencies explicitly listed in my                                 role file i think it could be a quick                                 start you will have to clean out the the                                 result of that and i don't actually know                                 which is more effort starting from                                 scratch or starting from such a                                 blueprint                                 just come come forward to the mic so we                                 can hear you                                 oh let's take a look at some                                 okay we are almost done by the way                                 the question was well if I've if I'm                                 done with developing how do I get the                                 results I've achieved on my development                                 vm up to the production environment the                                 answer the short answer is that depends                                 it again depends on how you do your                                 deployment for example you could use                                 brush locked in locally to the vm to do                                 a sink db                                                              on to your production server in our case                                 our complete deployment is get based so                                 you will access the git repository used                                 on the development machine and shaz to a                                 git push to the production environment                                 there are all kinds of ways to achieve                                 that result and it really depends on                                 what environment you use in production                                 who's your provider if you are running                                 it yourselves or if this some kind of                                 paas as ours for example and basically                                 you have all the tools at your disposal                                 you can rush the installed rush on your                                 vm here you can use ftp outside the vm                                 if your vm is connected to your local                                 network you can use just ftp to to                                 upload your files to a production system                                 there are all kinds of ways ah okay how                                 do I make sure my development                                 environment looks like the production                                 environment the best way to do that is                                 of course use the same cookbooks that                                 you are using here locally on your                                 machine using the chef server and client                                 system which is a bit more complex to                                 run the your infrastructure on the same                                 code base so we are back to the                                 infrastructure as code for example the                                 same cookbook I used to spin up Apache                                 here is used in our production                                 environment to run apache there by                                 making sure we are using the same                                 cookbooks and the same cookbook versions                                 on both the development and the                                 production environments we can be                                 completely sure that they are at                                 identical                                 nope we don't you can use just the                                 chef's we are running a dedicated chef                                 server which has a huge database of all                                 our nodes all the attributes those nodes                                 have and so on and on every server we                                 are running our infrastructure on bare                                 metal servers not on some kind of VMs                                 yeah yeah we just do a chef client run                                 which connects to the chef server gets                                 all the cookbooks gets all the                                 attributes and all the things we've                                 defined over time and then it'll run the                                 same installation process you can see                                 here                                 yeah basically if you are using that                                 tool chain here for example you would                                 just add another cookbook or another                                 recipes to the roll file and if your                                 convention is to use that role file all                                 the time by updating the roll file and                                 running vagrant provision on the                                 different VMs it'll install your new                                 package do your new configuration files                                 or things like that you know you just                                 share those basic coded definitions like                                 the role file and chef and ray grant                                 will take care of that so let's just the                                 chevron has finished by the way just                                 check back with that this year is the                                 central part the role file which defines                                 which recipes to run making it also                                 which attributes to use when considering                                 those services by maintaining that file                                 and sharing it between your developers                                 you can make sure that every development                                 work station every development vm looks                                 the same                                 what's happening here                                 here we go                                 that's what I would suggest you just                                 create a central repository on a file                                 server order on a central git repository                                 and maintain your vagrant files and                                 especially those role and recipe files                                 on the git repository and tell your                                 colleagues to do a git pull from time to                                 time and do a vagrant provision from                                 time to time a provisioning run by the                                 way is also done every time you vagrant                                 up so when you're you're restarting a vm                                 it will also do a provisioning run so if                                 you make sure that cookbooks and roles                                 are up to date all the time you can be                                 sure that your VMS are too                                 no it doesn't it's completely based on                                 virtualbox                                 you'll basically do the same as we are                                 doing in production you just run chef                                 directly on your VMware provision to VMS                                 you just skip the first half of my                                 presentation and go directly to the chef                                 configuration since VMware already                                 provides you with VMs based on a central                                 image most of the time you'll just do                                 the configuration management then                                 any more questions                                 that's an interesting thought and I                                 think it comes down to DevOps culture I                                 can't speak for a corporate IT                                 department but I can talk about                                 opportunities here using a tool like                                 shape that that focuses system                                 management down to maintaining text                                 files at least enables you to                                 participate in this system management so                                 far for example you could really provide                                 your IT department with a such a role                                 file for example telling them okay look                                 we need to download and install Apache                                 we need my sequel and we'll need PHP PHP                                 should be configured that APC                                    megabytes of RAM at least things like                                 that which you as a developer can define                                 better than the IT department that                                 doesn't know about your application day                                 as well can then define other things                                 like buffer sizes in my seat                                 or some I'm leaning down to the metal                                 things that's the IP IT department is                                 concerned with not you as a developer as                                 much and you can throw your know-how                                 together in those files so we don't the                                 IT department doesn't need to give us SH                                 access to do your configuration which                                 will they will never do it also enables                                 you to give your recommendations for the                                 environment in a more IT like way than                                 just making them so I think tools like                                 chef at least enable you to do dev ops                                 together instead of you doing your def                                 stuff and they doing the upstart                                 he                                 they they are solutions for the same                                 problem so you can just replace the chef                                 configuration in your vagrant file up it                                 wasn't it I'm inside the vm if you look                                 closely you'll find that before the                                 shift configuration block there is a                                 puppet configuration block so you can                                 just use that block and define a puppet                                 you define your puppet configuration for                                 example the address of your central a                                 puppet server and use that to spin up                                 your VMs yeah yeah yeahs the default                                 configuration as well with properties to                                 run a local puppet binary that's not                                 dependent on any outside servers as was                                 my chef configuration as well you didn't                                 see me configuring some kind of chef                                 server or something like that but you                                 can do that if you have a puppet server                                 or a chef infrastructure in place you                                 just point vagrant to that and it will                                 take care of it                                 basically you're not thinking in terms                                 of commands you have to execute and                                 files you have to edit you that point                                 everything boils down to maintaining                                 those text files like the role file and                                 you can use all the tools you have at                                 your disposal to share those files                                 create central pd repository sent them                                 via email work on them in a distributed                                 team everything that's possible with a                                 text file you can use to your advantage                                 anything else that prevents us from                                 going to lunch                                 okay Moses uh we can do that afterwards                                 thank you
YouTube URL: https://www.youtube.com/watch?v=1dWx0970V7A


