Title: DrupalCon Nashville 2018: Composer 101
Publication date: 2018-04-11
Playlist: DrupalCon Nashville - April 2018
Description: 
	Composer is a php package manager that alleviates the complexity of dependencies in PHP based projects (such as Drupal 8). This session provides an introduction to the core concepts behind package management and Composer.  No previous knowledge of Composer required. 


Using practical examples as guidelines attendees will learn the basics of Composer, including:

What composer is and the concepts of how it works.
How to add composer to a project and packages to a project.
Semantic versioning patterns for packages.
General Do's and Don'ts when using Composer.
Attendees will leave this session with insights and basic knowledge of Composer. Including knowledge of how it works, the value it provides to projects and how to use it on any PHP project.
Captions: 
	00:00:00,030 --> 00:00:06,180
it's great all right as long as you made

00:00:02,250 --> 00:00:07,470
it to the coffee break it's awesome one

00:00:06,180 --> 00:00:10,050
I apologize for my voice I'm just

00:00:07,470 --> 00:00:13,620
getting over a cold so hopefully you can

00:00:10,050 --> 00:00:16,529
hear me okay and I don't go like this on

00:00:13,620 --> 00:00:19,770
the recording too much Holi the only

00:00:16,529 --> 00:00:20,670
time just show you what it was great

00:00:19,770 --> 00:00:23,430
thank you for coming to my session

00:00:20,670 --> 00:00:26,250
composer 101 you know as you heard in

00:00:23,430 --> 00:00:28,439
Reese's keynote that composer is part of

00:00:26,250 --> 00:00:29,939
Drupal and if you're just new to it it's

00:00:28,439 --> 00:00:31,230
going to be a great introduction to the

00:00:29,939 --> 00:00:35,130
basics you need to get going with

00:00:31,230 --> 00:00:36,210
composer not really focus on the Drupal

00:00:35,130 --> 00:00:37,739
side of it that's little more complex

00:00:36,210 --> 00:00:39,719
but I have some follow-ups for everybody

00:00:37,739 --> 00:00:41,670
here so by the end of this you should be

00:00:39,719 --> 00:00:43,730
able to use composer though in your PHP

00:00:41,670 --> 00:00:46,800
projects and in your Drupal projects

00:00:43,730 --> 00:00:50,190
before I get going raise your hands how

00:00:46,800 --> 00:00:54,030
many people here like live demos okay I

00:00:50,190 --> 00:00:55,770
too like to live dangerously so we'll

00:00:54,030 --> 00:00:57,480
see how the internet does if it craps

00:00:55,770 --> 00:00:59,280
out I have a pre-recorded demos and I'll

00:00:57,480 --> 00:01:01,320
switch that but if not we're gonna do

00:00:59,280 --> 00:01:03,600
some live demo to show you how simple

00:01:01,320 --> 00:01:05,610
composer can be so before we get started

00:01:03,600 --> 00:01:07,049
a little bit about myself hello my name

00:01:05,610 --> 00:01:08,700
is Mike miles I'm from Boston

00:01:07,049 --> 00:01:11,340
Massachusetts

00:01:08,700 --> 00:01:13,140
and I work as the senior technical

00:01:11,340 --> 00:01:17,189
solutions manager at a digital marketing

00:01:13,140 --> 00:01:19,770
agency called genuine genuine we help we

00:01:17,189 --> 00:01:22,170
make agile brands we help brands be fun

00:01:19,770 --> 00:01:25,220
and innovative across all the

00:01:22,170 --> 00:01:26,909
technologies that we in full-service

00:01:25,220 --> 00:01:29,700
capabilities that we have we're not a

00:01:26,909 --> 00:01:30,869
Drupal shop but we have digital

00:01:29,700 --> 00:01:33,570
strategists and video production

00:01:30,869 --> 00:01:35,460
designers and wax and development across

00:01:33,570 --> 00:01:37,530
a whole bunch of technologies Drupal

00:01:35,460 --> 00:01:39,540
just being one of them that's what I do

00:01:37,530 --> 00:01:41,400
during the day and night I run a podcast

00:01:39,540 --> 00:01:42,689
called developing up which is focused on

00:01:41,400 --> 00:01:44,460
the non technical side of being a

00:01:42,689 --> 00:01:45,689
developer so anything that has to do

00:01:44,460 --> 00:01:48,000
with your development career but not

00:01:45,689 --> 00:01:50,220
anything to do with coding so how to

00:01:48,000 --> 00:01:52,259
work on a team how to negotiate how to

00:01:50,220 --> 00:01:54,570
say no to your boss or your clients

00:01:52,259 --> 00:01:56,250
stuff like that a new episode it's

00:01:54,570 --> 00:01:59,130
actually coming out in 15 minutes on

00:01:56,250 --> 00:02:00,780
leadership so check that out after the

00:01:59,130 --> 00:02:01,860
session I mean you can listen to it

00:02:00,780 --> 00:02:03,659
during the session but I prefer you

00:02:01,860 --> 00:02:05,850
don't you wanna know any more about me

00:02:03,659 --> 00:02:07,829
you can find me online at Mike -86 I've

00:02:05,850 --> 00:02:10,229
been working with Drupal for almost 10

00:02:07,829 --> 00:02:12,270
years now doing everything you can think

00:02:10,229 --> 00:02:13,590
of with Drupal I helped lead the Boston

00:02:12,270 --> 00:02:15,630
Drupal meetup and

00:02:13,590 --> 00:02:16,739
the New England rupal camp so if you're

00:02:15,630 --> 00:02:18,630
ever in New England you should come

00:02:16,739 --> 00:02:20,250
check out the Drupal scene their design

00:02:18,630 --> 00:02:21,780
for Drupal which is in the summer we

00:02:20,250 --> 00:02:23,430
have Driss keynoting which is an

00:02:21,780 --> 00:02:28,580
exciting reason to come so you should

00:02:23,430 --> 00:02:30,900
check that out so your typical developer

00:02:28,580 --> 00:02:34,230
happy person that we have really cool

00:02:30,900 --> 00:02:37,470
people in PHP projects it's easy for

00:02:34,230 --> 00:02:38,940
them to manage a piece of PHP code you

00:02:37,470 --> 00:02:41,580
know file that they control that they

00:02:38,940 --> 00:02:45,690
own that they write developers are happy

00:02:41,580 --> 00:02:48,060
to do that multiple files no problem but

00:02:45,690 --> 00:02:50,580
what happens is if you are writing PHP

00:02:48,060 --> 00:02:53,130
code or using you want to use other

00:02:50,580 --> 00:02:55,650
libraries you have to start pulling in

00:02:53,130 --> 00:02:56,970
people's code that you don't control so

00:02:55,650 --> 00:02:58,410
this could be for logging this could be

00:02:56,970 --> 00:02:59,370
for sending emails you know you don't

00:02:58,410 --> 00:03:01,380
want to reinvent the wheel and

00:02:59,370 --> 00:03:03,959
developers they can do this they're not

00:03:01,380 --> 00:03:06,060
so happy about it because in the

00:03:03,959 --> 00:03:07,620
repositories they have to add code that

00:03:06,060 --> 00:03:09,569
they don't control that they can't

00:03:07,620 --> 00:03:11,519
change this is the case if you're using

00:03:09,569 --> 00:03:13,709
you know Drupal Drupal core you're never

00:03:11,519 --> 00:03:15,150
supposed to hack core so they're not

00:03:13,709 --> 00:03:18,090
that thrilled about doing that and

00:03:15,150 --> 00:03:19,109
especially if you have third-party

00:03:18,090 --> 00:03:21,390
dependencies that have third-party

00:03:19,109 --> 00:03:24,090
dependencies or you have two

00:03:21,390 --> 00:03:26,040
dependencies that share dependency on

00:03:24,090 --> 00:03:28,290
another library all of a sudden this

00:03:26,040 --> 00:03:30,150
starts to get complicated and developers

00:03:28,290 --> 00:03:31,859
really don't like that because now it's

00:03:30,150 --> 00:03:33,359
you're spending a lot more time managing

00:03:31,859 --> 00:03:36,090
the code than writing the code and

00:03:33,359 --> 00:03:37,769
differentiating your project to building

00:03:36,090 --> 00:03:39,180
cool things and don't even get me

00:03:37,769 --> 00:03:41,340
started on if there's a security update

00:03:39,180 --> 00:03:44,010
like there was two weeks ago for Drupal

00:03:41,340 --> 00:03:46,260
core then Z oh my god

00:03:44,010 --> 00:03:47,730
developers hate that well what

00:03:46,260 --> 00:03:49,470
developers as developer I can say what

00:03:47,730 --> 00:03:50,910
we don't like is having spend most of

00:03:49,470 --> 00:03:55,380
our time maintaining something we don't

00:03:50,910 --> 00:03:56,819
control that we can't change and it's a

00:03:55,380 --> 00:03:59,489
fundamental truth no matter what your

00:03:56,819 --> 00:04:00,989
role is you everyone here probably knows

00:03:59,489 --> 00:04:04,200
this that every project has a limited

00:04:00,989 --> 00:04:05,579
time and budget right so a amount of

00:04:04,200 --> 00:04:07,290
time when it has to be delivered to the

00:04:05,579 --> 00:04:08,430
client to your to your marketing

00:04:07,290 --> 00:04:11,400
department whoever your building project

00:04:08,430 --> 00:04:12,569
for and Drupal it has to be delivered

00:04:11,400 --> 00:04:14,459
our certain time that means you only

00:04:12,569 --> 00:04:16,169
have so much time to build it and focus

00:04:14,459 --> 00:04:17,549
on what you need to accomplish you only

00:04:16,169 --> 00:04:20,840
have so much money to hire people to do

00:04:17,549 --> 00:04:22,830
that what this means is if you are

00:04:20,840 --> 00:04:24,330
having your developers if you're a

00:04:22,830 --> 00:04:26,340
developer and you have to maintain all

00:04:24,330 --> 00:04:26,850
this you're spending much of that time

00:04:26,340 --> 00:04:28,890
much the

00:04:26,850 --> 00:04:31,200
budget making sure everything is in sync

00:04:28,890 --> 00:04:33,510
everything is working that you're really

00:04:31,200 --> 00:04:36,480
control trying to wrangle other people's

00:04:33,510 --> 00:04:37,890
code to build something amazing when

00:04:36,480 --> 00:04:39,840
what you want to spend most your time on

00:04:37,890 --> 00:04:41,370
is building what differentiates your

00:04:39,840 --> 00:04:43,590
product building what you control and

00:04:41,370 --> 00:04:46,040
focusing your time and energy on that to

00:04:43,590 --> 00:04:48,470
build as great of a product as you can

00:04:46,040 --> 00:04:51,750
this where composure comes into place

00:04:48,470 --> 00:04:54,780
composure is a dependency manager for

00:04:51,750 --> 00:04:58,550
PHP it's a per project dependency

00:04:54,780 --> 00:05:03,030
manager I hope them being recorded

00:04:58,550 --> 00:05:04,890
everything's good great there are some

00:05:03,030 --> 00:05:07,400
seats available please move in fill in

00:05:04,890 --> 00:05:10,920
I'll make me feel good about myself

00:05:07,400 --> 00:05:14,580
so composure is a dependency manager for

00:05:10,920 --> 00:05:16,200
PHP like Driss mention is trees note

00:05:14,580 --> 00:05:19,650
there are other technologies that have

00:05:16,200 --> 00:05:23,460
dependency managers like node or

00:05:19,650 --> 00:05:26,370
JavaScript as NPM ruby has I forget the

00:05:23,460 --> 00:05:28,290
name of it but what they allow you to do

00:05:26,370 --> 00:05:29,490
is take that maintenance out of your

00:05:28,290 --> 00:05:33,030
developers hands and give it to a

00:05:29,490 --> 00:05:35,370
computer that can do it reliably and can

00:05:33,030 --> 00:05:37,500
can constantly do it and it handles all

00:05:35,370 --> 00:05:40,680
that things for you that you don't want

00:05:37,500 --> 00:05:41,940
your developers have to worry about so

00:05:40,680 --> 00:05:44,370
what I want to talk about today is

00:05:41,940 --> 00:05:46,200
basically three buckets of things one

00:05:44,370 --> 00:05:48,480
explain the benefits of using composer

00:05:46,200 --> 00:05:50,460
and dependency manager on your projects

00:05:48,480 --> 00:05:52,320
how it frees up your developers how it

00:05:50,460 --> 00:05:55,380
frees up your project how allows you to

00:05:52,320 --> 00:05:56,940
build really amazing products without

00:05:55,380 --> 00:05:59,460
worrying about the tools you want to use

00:05:56,940 --> 00:06:01,980
to do it I'm gonna outline the basic

00:05:59,460 --> 00:06:03,750
composer project structure and set up

00:06:01,980 --> 00:06:05,790
how you get composer going and started

00:06:03,750 --> 00:06:07,890
so you can start using on any project

00:06:05,790 --> 00:06:09,690
and the typical file structure that you

00:06:07,890 --> 00:06:12,150
may use and you may see in composer

00:06:09,690 --> 00:06:14,040
projects and then demonstrate the basic

00:06:12,150 --> 00:06:15,540
the five basic composer commands that

00:06:14,040 --> 00:06:16,890
you need to know to get up and running

00:06:15,540 --> 00:06:18,570
with composer so by the end of this

00:06:16,890 --> 00:06:20,190
conference conference well yeah by the

00:06:18,570 --> 00:06:22,620
end of conference by the end of this

00:06:20,190 --> 00:06:24,630
talk you should be able to set up a

00:06:22,620 --> 00:06:26,490
composer project know the commands to

00:06:24,630 --> 00:06:28,050
get third-party dependencies and know

00:06:26,490 --> 00:06:29,550
the commands to have composer manages

00:06:28,050 --> 00:06:32,250
appendices for you so you don't have to

00:06:29,550 --> 00:06:35,510
worry about them sound like a plan for

00:06:32,250 --> 00:06:35,510
everybody I see some head nods great

00:06:35,750 --> 00:06:40,680
alright so just to illustrate what

00:06:38,580 --> 00:06:43,530
composer does we again have our hat

00:06:40,680 --> 00:06:45,060
cool developer who is happy to maintain

00:06:43,530 --> 00:06:46,860
their code but they don't want to

00:06:45,060 --> 00:06:48,979
maintain other people's code so instead

00:06:46,860 --> 00:06:51,150
of worrying about all those dependencies

00:06:48,979 --> 00:06:53,759
the developer just talks to a composer

00:06:51,150 --> 00:06:55,860
and says hey composer these are the

00:06:53,759 --> 00:06:58,919
libraries my project requires these are

00:06:55,860 --> 00:07:00,060
the versions these are what I want to

00:06:58,919 --> 00:07:02,130
use to make things work

00:07:00,060 --> 00:07:03,990
composer says great I'm gonna get those

00:07:02,130 --> 00:07:05,160
I'm gonna organize them I'm gonna see if

00:07:03,990 --> 00:07:06,479
they have dependencies I'm gonna get

00:07:05,160 --> 00:07:08,130
those dependencies I'm gonna see if

00:07:06,479 --> 00:07:09,479
those dependencies have dependencies and

00:07:08,130 --> 00:07:12,690
I'm gonna get those for you I'm gonna

00:07:09,479 --> 00:07:14,759
handle it buddy all good the developer

00:07:12,690 --> 00:07:16,020
can also say hey composer I want to

00:07:14,759 --> 00:07:18,810
update these there's been a security

00:07:16,020 --> 00:07:21,000
update can you update these packages and

00:07:18,810 --> 00:07:23,610
composer will say no problem I got you

00:07:21,000 --> 00:07:25,470
I'll update them I will update their

00:07:23,610 --> 00:07:26,780
updates I will update their dependencies

00:07:25,470 --> 00:07:29,699
it'll be all good

00:07:26,780 --> 00:07:31,139
so composer abstracts all this

00:07:29,699 --> 00:07:32,550
maintenance and frees up all this

00:07:31,139 --> 00:07:33,690
maintenance time from your development

00:07:32,550 --> 00:07:38,280
teams so they just have to worry about

00:07:33,690 --> 00:07:40,289
the code they're gonna write now every

00:07:38,280 --> 00:07:43,220
composer project has this basic

00:07:40,289 --> 00:07:45,900
structure there's the project route and

00:07:43,220 --> 00:07:47,280
then there might be a composer too far

00:07:45,900 --> 00:07:50,220
file which I'll explain in a moment

00:07:47,280 --> 00:07:52,860
there's a closer JSON file which is

00:07:50,220 --> 00:07:54,539
basically the file your developers used

00:07:52,860 --> 00:07:56,729
to tell composer what your project

00:07:54,539 --> 00:07:59,880
requires there's the composer down lock

00:07:56,729 --> 00:08:02,930
file is what composer uses to keep track

00:07:59,880 --> 00:08:05,550
of all the projects or the packages it's

00:08:02,930 --> 00:08:07,320
maintaining for you I like to think of

00:08:05,550 --> 00:08:09,449
it outside composers database even

00:08:07,320 --> 00:08:10,949
though it's just a file and then there's

00:08:09,449 --> 00:08:13,500
the vendor directory where composer

00:08:10,949 --> 00:08:14,940
stores all that third-party code so you

00:08:13,500 --> 00:08:16,560
you never have to touch it you never to

00:08:14,940 --> 00:08:18,539
see it and then there's everything else

00:08:16,560 --> 00:08:20,639
that has to go into a project so that

00:08:18,539 --> 00:08:23,099
could be you know your your custom

00:08:20,639 --> 00:08:24,360
modules your themes whatever type of PHP

00:08:23,099 --> 00:08:26,849
project you're working on if it's true

00:08:24,360 --> 00:08:27,960
or not everything else goes in your

00:08:26,849 --> 00:08:32,370
project we're not gonna worry about that

00:08:27,960 --> 00:08:35,880
stuff now for security purposes when you

00:08:32,370 --> 00:08:38,130
are working on a composer project it's

00:08:35,880 --> 00:08:40,469
ideal that you keep everything related

00:08:38,130 --> 00:08:42,180
to composer above your web route so your

00:08:40,469 --> 00:08:45,209
adjacent file your composed it out lock

00:08:42,180 --> 00:08:46,350
file in your vendor directory the reason

00:08:45,209 --> 00:08:48,450
for this is you don't want those

00:08:46,350 --> 00:08:51,150
web-accessible since it's code you don't

00:08:48,450 --> 00:08:52,680
control so if you have a third party

00:08:51,150 --> 00:08:54,750
library you're using let's let's just

00:08:52,680 --> 00:08:57,060
say example I know of PHP unit

00:08:54,750 --> 00:08:58,620
if you're writing PHP unit tests and

00:08:57,060 --> 00:09:00,779
you're using poser to manage the PHP

00:08:58,620 --> 00:09:02,970
unit library if that's in your web route

00:09:00,779 --> 00:09:05,430
if someone's clever enough they can find

00:09:02,970 --> 00:09:06,930
a path to execute PHP unit tests which

00:09:05,430 --> 00:09:08,579
may not seem like a big deal but if

00:09:06,930 --> 00:09:10,350
someone's really smart they can use that

00:09:08,579 --> 00:09:12,060
to do some sort of injection into your

00:09:10,350 --> 00:09:14,579
database or really get some details

00:09:12,060 --> 00:09:18,810
they're not supposed to so keeping all

00:09:14,579 --> 00:09:21,060
your composer project files above your

00:09:18,810 --> 00:09:22,350
web root is a secure way to make sure

00:09:21,060 --> 00:09:26,610
that the only thing that's web

00:09:22,350 --> 00:09:28,529
accessible is the code you control now

00:09:26,610 --> 00:09:30,600
obviously to work with composer you need

00:09:28,529 --> 00:09:31,860
composer installed on your machine this

00:09:30,600 --> 00:09:33,959
is where the composer doubtfire file

00:09:31,860 --> 00:09:37,310
comes into place composer dot far is a

00:09:33,959 --> 00:09:41,730
PHP archive file it's like an executable

00:09:37,310 --> 00:09:45,810
pozer itself is PHP based and you can

00:09:41,730 --> 00:09:47,550
install composer one of two ways well

00:09:45,810 --> 00:09:50,009
first you can install on Windows they

00:09:47,550 --> 00:09:51,899
have a composer setup file executable

00:09:50,009 --> 00:09:53,639
they'll help you set it up then you

00:09:51,899 --> 00:09:55,529
install it on Linux they have a download

00:09:53,639 --> 00:09:58,050
page that will explain the steps to

00:09:55,529 --> 00:10:03,870
download it so I click there is the

00:09:58,050 --> 00:10:05,279
internet working Oh we'll see but like I

00:10:03,870 --> 00:10:07,110
said there's two ways you can stall

00:10:05,279 --> 00:10:09,680
composer globally on your machine or

00:10:07,110 --> 00:10:11,670
locally if you're installing globally

00:10:09,680 --> 00:10:13,769
the benefit of that you only have to

00:10:11,670 --> 00:10:15,300
install it once you install composer on

00:10:13,769 --> 00:10:17,189
your machine you can use it across any

00:10:15,300 --> 00:10:21,990
projects you have locally you're good to

00:10:17,189 --> 00:10:23,730
go the the caviar that is that anyone on

00:10:21,990 --> 00:10:26,069
your team you have to make sure they've

00:10:23,730 --> 00:10:26,939
installed composer and because people

00:10:26,069 --> 00:10:28,529
are going to install compose are

00:10:26,939 --> 00:10:30,480
different times they may have different

00:10:28,529 --> 00:10:32,009
versions of composer you're introducing

00:10:30,480 --> 00:10:33,990
that variable well it works on my

00:10:32,009 --> 00:10:36,449
machine and you don't want to do that

00:10:33,990 --> 00:10:39,059
but you can do it globally if that works

00:10:36,449 --> 00:10:40,620
for you you can install it per project

00:10:39,059 --> 00:10:43,800
and this is where with the project

00:10:40,620 --> 00:10:47,370
structure I showed we have the composer

00:10:43,800 --> 00:10:50,339
not far in your project route if you do

00:10:47,370 --> 00:10:51,870
that then you can run composer kind of

00:10:50,339 --> 00:10:54,000
like drush where it's recommended you

00:10:51,870 --> 00:10:55,559
have drush per project you can have

00:10:54,000 --> 00:10:58,139
composer per project you can run

00:10:55,559 --> 00:10:59,639
composer in that project and what you

00:10:58,139 --> 00:11:01,589
know there is that everyone who

00:10:59,639 --> 00:11:04,230
downloads the project from like git or

00:11:01,589 --> 00:11:05,279
wherever they have composer already you

00:11:04,230 --> 00:11:06,040
know everyone's using the same version

00:11:05,279 --> 00:11:08,830
of come

00:11:06,040 --> 00:11:10,090
and that levy eights that the caveat is

00:11:08,830 --> 00:11:11,620
the way you have to run the command is

00:11:10,090 --> 00:11:14,140
you have to type PHP first in the

00:11:11,620 --> 00:11:16,600
command line and then composer so it's a

00:11:14,140 --> 00:11:18,520
little annoying but let's see what it's

00:11:16,600 --> 00:11:22,390
like to install composer on your machine

00:11:18,520 --> 00:11:24,100
and this will be our test to see if the

00:11:22,390 --> 00:11:26,410
Wi-Fi is good enough so this is the

00:11:24,100 --> 00:11:30,280
download page on composer on get

00:11:26,410 --> 00:11:33,010
composer org it has three for PHP lines

00:11:30,280 --> 00:11:34,810
to run in your command line they

00:11:33,010 --> 00:11:36,850
recommend you come here every time you

00:11:34,810 --> 00:11:38,350
want install composer because the the

00:11:36,850 --> 00:11:40,150
version of composer changes so does the

00:11:38,350 --> 00:11:42,760
hash check so what I'm simply going to

00:11:40,150 --> 00:11:45,130
do is I'm going to copy this PHP line go

00:11:42,760 --> 00:11:47,380
on my handy-dandy terminal which I have

00:11:45,130 --> 00:11:50,890
an empty project and I'm gonna just

00:11:47,380 --> 00:11:52,150
paste it there and so what the fan lines

00:11:50,890 --> 00:11:54,550
going to do it's going to go get

00:11:52,150 --> 00:12:00,820
closerto our installer download that

00:11:54,550 --> 00:12:03,280
code into composer - set up PHP and

00:12:00,820 --> 00:12:04,060
alright I'm already bored of this so

00:12:03,280 --> 00:12:06,540
we're gonna go to the pre-recorded

00:12:04,060 --> 00:12:06,540
version

00:12:11,060 --> 00:12:15,400
skip skip skip skip skip skip skip

00:12:16,690 --> 00:12:23,259
all right so I put in the copy command

00:12:20,379 --> 00:12:26,079
it downloads it on my machine and then

00:12:23,259 --> 00:12:27,670
what I do is I copy the other PHP code

00:12:26,079 --> 00:12:29,019
which is going to do a hash check on

00:12:27,670 --> 00:12:32,470
that file I downloaded make sure it

00:12:29,019 --> 00:12:35,230
works it's verified then you run PHP

00:12:32,470 --> 00:12:36,490
composer setup dot PHP this is the file

00:12:35,230 --> 00:12:38,170
you just downloaded and this is going to

00:12:36,490 --> 00:12:40,720
check on your machine if your PHP

00:12:38,170 --> 00:12:43,540
settings validate for what composer

00:12:40,720 --> 00:12:45,759
needs and then you can send a file name

00:12:43,540 --> 00:12:47,889
so you just call composer if everything

00:12:45,759 --> 00:12:51,430
works its gonna say great composer is

00:12:47,889 --> 00:12:51,910
there then you can delete the file and

00:12:51,430 --> 00:12:54,009
you're good to go

00:12:51,910 --> 00:12:57,670
so that was quick so what just happened

00:12:54,009 --> 00:13:00,430
was I downloaded the PHP file from get

00:12:57,670 --> 00:13:02,199
composer org I did a hash check to make

00:13:00,430 --> 00:13:05,410
sure I got the file I was expecting and

00:13:02,199 --> 00:13:08,410
it's verified that Iran composer setup

00:13:05,410 --> 00:13:10,209
dot PHP so that it can check my system

00:13:08,410 --> 00:13:12,370
to make sure my system has the right

00:13:10,209 --> 00:13:14,139
requirements and then it installs

00:13:12,370 --> 00:13:16,149
composer which is the composer top bar

00:13:14,139 --> 00:13:17,620
file and then I removed the setup file

00:13:16,149 --> 00:13:18,939
from my project directory because I no

00:13:17,620 --> 00:13:23,410
longer need it because I have composer

00:13:18,939 --> 00:13:24,880
setup so that was locally after doing

00:13:23,410 --> 00:13:27,009
that mall set I have composed enough our

00:13:24,880 --> 00:13:29,709
my project we can do the same thing for

00:13:27,009 --> 00:13:31,779
the global install is the same couple

00:13:29,709 --> 00:13:33,670
steps the only difference is once

00:13:31,779 --> 00:13:36,670
composer dot bar is added to your

00:13:33,670 --> 00:13:39,130
project you're gonna move it into a

00:13:36,670 --> 00:13:41,769
directory that is relative to your path

00:13:39,130 --> 00:13:48,449
variable for your machine so here I'm

00:13:41,769 --> 00:13:51,850
moving it to user local bin composer and

00:13:48,449 --> 00:13:53,800
I forgot to type where I want to move it

00:13:51,850 --> 00:13:57,790
to great I want to move composer that

00:13:53,800 --> 00:14:01,449
far to a global path variable and doing

00:13:57,790 --> 00:14:03,550
that now I can just run composer from

00:14:01,449 --> 00:14:04,569
anywhere so if I actually show this for

00:14:03,550 --> 00:14:06,939
my terminal because I don't need

00:14:04,569 --> 00:14:09,579
composer to do that I already have

00:14:06,939 --> 00:14:12,069
composer installed surprise surprise if

00:14:09,579 --> 00:14:13,930
I type composer I have composer on my

00:14:12,069 --> 00:14:16,870
machine I can run it from anywhere so

00:14:13,930 --> 00:14:19,420
globally I can type composer because

00:14:16,870 --> 00:14:21,790
it's in a variable it's in a path that's

00:14:19,420 --> 00:14:24,069
in my path variable without it I have to

00:14:21,790 --> 00:14:27,490
type let me clear this for you I would

00:14:24,069 --> 00:14:29,730
have to type PHP composer dot far to run

00:14:27,490 --> 00:14:29,730
compose

00:14:31,770 --> 00:14:36,010
so now that you have composer installed

00:14:33,910 --> 00:14:38,440
really it's running these four commands

00:14:36,010 --> 00:14:41,550
and then moving it either into a global

00:14:38,440 --> 00:14:45,130
location or keeping it prettier project

00:14:41,550 --> 00:14:48,010
then what I can do this is the recorded

00:14:45,130 --> 00:14:50,560
one if we want to start using composer

00:14:48,010 --> 00:14:53,140
to tell composer what we need

00:14:50,560 --> 00:14:55,030
so composer like I said it uses a JSON

00:14:53,140 --> 00:14:57,070
file this is how you interface with

00:14:55,030 --> 00:14:59,230
composer and say composer these are the

00:14:57,070 --> 00:15:00,490
dependencies my project has now if

00:14:59,230 --> 00:15:02,830
you're good with Jason you can write it

00:15:00,490 --> 00:15:04,960
yourself it's just a JSON schema file

00:15:02,830 --> 00:15:07,750
you give your project information like

00:15:04,960 --> 00:15:10,300
your name the description the type which

00:15:07,750 --> 00:15:11,890
for our case is project you provide

00:15:10,300 --> 00:15:13,240
license information if you want that for

00:15:11,890 --> 00:15:15,580
your project like I'm using the MIT

00:15:13,240 --> 00:15:17,400
license with their GPL license any

00:15:15,580 --> 00:15:20,380
author information an array of authors

00:15:17,400 --> 00:15:21,940
the stability of the packages you want

00:15:20,380 --> 00:15:23,290
to use if you leave that out it's gonna

00:15:21,940 --> 00:15:24,400
assume you only want to use stable code

00:15:23,290 --> 00:15:28,120
so I recommend you leave that out

00:15:24,400 --> 00:15:30,160
especially for production work the

00:15:28,120 --> 00:15:32,230
require array which is what we'll get

00:15:30,160 --> 00:15:33,820
into which is where you list all the

00:15:32,230 --> 00:15:35,920
third-party packages you want to use for

00:15:33,820 --> 00:15:37,720
your project the required dev which is

00:15:35,920 --> 00:15:39,910
another array of packages which you can

00:15:37,720 --> 00:15:41,830
tell composer only install this in my

00:15:39,910 --> 00:15:45,280
dev environment so you can do things

00:15:41,830 --> 00:15:48,640
such as like the coder module or drush

00:15:45,280 --> 00:15:49,540
you can put in there or other tools but

00:15:48,640 --> 00:15:51,550
you don't have to write this yourself

00:15:49,540 --> 00:15:53,260
you can have composer to it and I can

00:15:51,550 --> 00:15:55,450
actually show this live because I have

00:15:53,260 --> 00:15:58,540
composer installed so you can run the

00:15:55,450 --> 00:16:01,270
composer init command and what composer

00:15:58,540 --> 00:16:03,910
a Nick does is it it brings up an

00:16:01,270 --> 00:16:06,310
interactive guide to generate that

00:16:03,910 --> 00:16:07,630
composer a JSON file so by default it's

00:16:06,310 --> 00:16:09,280
going to ask for your package name which

00:16:07,630 --> 00:16:10,720
is your project name it'll be your

00:16:09,280 --> 00:16:13,000
logged in a name in the directory you're

00:16:10,720 --> 00:16:17,580
in I recommend like they say vendor name

00:16:13,000 --> 00:16:17,580
client name so I'll do Drupal con

00:16:17,910 --> 00:16:23,470
composer 101 it's in ask for a

00:16:21,460 --> 00:16:25,900
description this is just metadata that's

00:16:23,470 --> 00:16:29,530
good for you and your team my demo

00:16:25,900 --> 00:16:30,760
composer project it's gonna ask for any

00:16:29,530 --> 00:16:32,500
author information this could be your

00:16:30,760 --> 00:16:35,140
team members will leave a default for

00:16:32,500 --> 00:16:39,520
now minimum stability and we leave that

00:16:35,140 --> 00:16:41,320
default I only want stable code it's 11

00:16:39,520 --> 00:16:44,530
o'clock

00:16:41,320 --> 00:16:47,200
I want a tight project is what I'm going

00:16:44,530 --> 00:16:49,180
to be doing don't care about licenses

00:16:47,200 --> 00:16:50,590
for now now it asks you for an

00:16:49,180 --> 00:16:53,800
interactive would you like to declare

00:16:50,590 --> 00:16:55,270
any dependencies right now do you want

00:16:53,800 --> 00:16:56,380
to search for any third-party code you

00:16:55,270 --> 00:16:57,460
want to use in your project for right

00:16:56,380 --> 00:17:00,070
now I'm going to say no so we're going

00:16:57,460 --> 00:17:01,900
to get into that more in-depth and then

00:17:00,070 --> 00:17:05,020
when it shows me is Jason it's going to

00:17:01,900 --> 00:17:07,120
generate so I can validate it yes as my

00:17:05,020 --> 00:17:09,100
project name my project description my

00:17:07,120 --> 00:17:10,570
author information and I have empty

00:17:09,100 --> 00:17:14,290
requirements so I'm going to say yes

00:17:10,570 --> 00:17:18,790
composer generate that for me so now in

00:17:14,290 --> 00:17:22,030
my project directory I have composer doc

00:17:18,790 --> 00:17:25,390
Jason and if I open that we're gonna see

00:17:22,030 --> 00:17:27,190
that's really big we're gonna see it's

00:17:25,390 --> 00:17:28,840
the JSON file that it showed me it was

00:17:27,190 --> 00:17:38,290
going to generate all the information it

00:17:28,840 --> 00:17:39,610
listed now I have it available so once

00:17:38,290 --> 00:17:42,310
you have composed our Jason you can

00:17:39,610 --> 00:17:43,840
start searching for packages but the

00:17:42,310 --> 00:17:46,270
question is well where do I find

00:17:43,840 --> 00:17:49,900
packages where do I find PHP code and

00:17:46,270 --> 00:17:52,120
third-party libraries if you're using

00:17:49,900 --> 00:17:54,310
composer and you don't do anything extra

00:17:52,120 --> 00:17:57,580
composer is going to look at packages

00:17:54,310 --> 00:17:59,350
org this is the official repository for

00:17:57,580 --> 00:18:01,420
PHP packages that are install both

00:17:59,350 --> 00:18:02,020
composer painting search for anything

00:18:01,420 --> 00:18:04,200
here

00:18:02,020 --> 00:18:06,490
search for packages comes up a big list

00:18:04,200 --> 00:18:09,130
you can find Drupal here but you can't

00:18:06,490 --> 00:18:10,570
find Drupal modules so if you want

00:18:09,130 --> 00:18:13,180
things for say Drupal

00:18:10,570 --> 00:18:15,580
there are specific you can say in your

00:18:13,180 --> 00:18:20,320
composer that JSON file where else to

00:18:15,580 --> 00:18:22,030
look for files you can add a

00:18:20,320 --> 00:18:24,120
repositories array to your composer

00:18:22,030 --> 00:18:26,200
adjacent file and there's two types of

00:18:24,120 --> 00:18:28,900
repositories you can add one that is a

00:18:26,200 --> 00:18:30,460
composer one and one that is just for

00:18:28,900 --> 00:18:32,590
version control systems for example

00:18:30,460 --> 00:18:35,320
Drupal has its own composer packages

00:18:32,590 --> 00:18:39,070
library which is available at shizuoka

00:18:35,320 --> 00:18:42,430
org slash 8 or slash 7 for tuple 7 if

00:18:39,070 --> 00:18:44,500
you want to install Drupal themes Drupal

00:18:42,430 --> 00:18:47,380
modules you know you have to add this to

00:18:44,500 --> 00:18:49,210
your composer dot JSON file and this

00:18:47,380 --> 00:18:51,430
will tell composer when it starts

00:18:49,210 --> 00:18:53,680
looking for packages look on packages

00:18:51,430 --> 00:18:54,040
also look here to see if you can find

00:18:53,680 --> 00:18:57,580
any

00:18:54,040 --> 00:18:59,650
party code you can also add any version

00:18:57,580 --> 00:19:01,600
control system like any github repo any

00:18:59,650 --> 00:19:05,800
bitbucket repository doesn't even have

00:19:01,600 --> 00:19:07,210
to be get any any repository that has

00:19:05,800 --> 00:19:08,980
code that you want to use as a library

00:19:07,210 --> 00:19:11,470
you can add it to your repositories

00:19:08,980 --> 00:19:14,350
array with type VCS for version control

00:19:11,470 --> 00:19:16,600
system doing this if you have private

00:19:14,350 --> 00:19:18,310
packages private repositories that you

00:19:16,600 --> 00:19:20,140
want to use for your projects you can

00:19:18,310 --> 00:19:22,740
add it here there's more advanced tips

00:19:20,140 --> 00:19:26,440
on get composer on Oregon how to do

00:19:22,740 --> 00:19:28,870
private repositories and add your hash

00:19:26,440 --> 00:19:30,910
key or your your keys to access it and

00:19:28,870 --> 00:19:32,650
whatnot but this way you can just link

00:19:30,910 --> 00:19:37,500
to any project and include it without

00:19:32,650 --> 00:19:37,500
having to download the code manually

00:19:37,620 --> 00:19:42,940
once you have packages that or

00:19:41,620 --> 00:19:44,620
repositories where you want to look for

00:19:42,940 --> 00:19:47,980
packages it's time to use composer

00:19:44,620 --> 00:19:50,410
require this is the command that will

00:19:47,980 --> 00:19:52,810
tell composer my project requires this

00:19:50,410 --> 00:19:56,200
library my project requires this third

00:19:52,810 --> 00:19:57,760
party code for it to work and when you

00:19:56,200 --> 00:19:59,410
run composer require it's going to touch

00:19:57,760 --> 00:20:01,660
three things the composer dot JSON file

00:19:59,410 --> 00:20:05,440
the composer lock file in the vendor

00:20:01,660 --> 00:20:08,500
directory now the required command can

00:20:05,440 --> 00:20:10,300
be run one of three ways if you just run

00:20:08,500 --> 00:20:11,620
composer require that's going to bring

00:20:10,300 --> 00:20:13,750
up an interactive search in your

00:20:11,620 --> 00:20:15,880
terminal to help you find packages based

00:20:13,750 --> 00:20:18,490
on a keyword if you want composer

00:20:15,880 --> 00:20:20,350
require with a vendor package name it's

00:20:18,490 --> 00:20:22,270
going to search all your repositories

00:20:20,350 --> 00:20:24,760
for something that matches that package

00:20:22,270 --> 00:20:26,470
name and then get the latest version and

00:20:24,760 --> 00:20:28,030
if you run composer require with the

00:20:26,470 --> 00:20:30,280
package name in a version constraint

00:20:28,030 --> 00:20:32,350
which I'll get into in a little bit it's

00:20:30,280 --> 00:20:35,340
going to get that explicit version of

00:20:32,350 --> 00:20:39,310
that package for your project

00:20:35,340 --> 00:20:40,540
so let's try the live internet again if

00:20:39,310 --> 00:20:45,100
I run composer

00:20:40,540 --> 00:20:46,840
require it's gonna say hey search for a

00:20:45,100 --> 00:20:48,880
package tell me a package you want to

00:20:46,840 --> 00:20:50,410
look for let's say log right having

00:20:48,880 --> 00:20:52,420
logging on your packages or in your

00:20:50,410 --> 00:20:54,670
projects is a really good thing it's

00:20:52,420 --> 00:20:56,530
gonna go in this case it's only going to

00:20:54,670 --> 00:20:58,800
look at packages it's gonna find any

00:20:56,530 --> 00:21:02,020
projects that have the keyword log in it

00:20:58,800 --> 00:21:06,480
and then it's gonna return an array of

00:21:02,020 --> 00:21:06,480
those alright this is boring again

00:21:07,660 --> 00:21:11,900
so it's going to search and then it's

00:21:10,010 --> 00:21:14,450
going to pull up a list then it found

00:21:11,900 --> 00:21:16,309
and then it's going to give you a chance

00:21:14,450 --> 00:21:18,710
to say which from this list do you want

00:21:16,309 --> 00:21:22,309
to use give me the number to show up yet

00:21:18,710 --> 00:21:24,350
that's all right and once you select it

00:21:22,309 --> 00:21:26,870
and then it's going to go back to

00:21:24,350 --> 00:21:28,490
packages or the repository found that

00:21:26,870 --> 00:21:29,930
package get the additional information

00:21:28,490 --> 00:21:31,570
about that package such as the

00:21:29,930 --> 00:21:33,410
versioning find the latest version

00:21:31,570 --> 00:21:35,420
download it and download any

00:21:33,410 --> 00:21:37,460
requirements that package has so you see

00:21:35,420 --> 00:21:39,950
here in this recording that I select

00:21:37,460 --> 00:21:45,050
monologue I skip the version constraints

00:21:39,950 --> 00:21:46,910
it downloads version 1.2 3 and then it

00:21:45,050 --> 00:21:53,600
downloads monologue and a library

00:21:46,910 --> 00:21:55,790
requires PSR log now one of the things

00:21:53,600 --> 00:21:58,280
you also notice here in the fourth

00:21:55,790 --> 00:21:59,380
bucket I have composer doc Jason has

00:21:58,280 --> 00:22:02,660
been updated

00:21:59,380 --> 00:22:05,030
what composer does when it downloads a

00:22:02,660 --> 00:22:06,590
package first it updates your composer

00:22:05,030 --> 00:22:10,210
top JSON file with that package

00:22:06,590 --> 00:22:14,960
information which I'll show in a moment

00:22:10,210 --> 00:22:17,360
right and then it also at the bottom it

00:22:14,960 --> 00:22:20,030
says writing lock files the lock file is

00:22:17,360 --> 00:22:21,559
the composer dot lock this is how

00:22:20,030 --> 00:22:24,860
composer keeps track of all your

00:22:21,559 --> 00:22:26,870
packages it has a bunch of information

00:22:24,860 --> 00:22:28,700
about all the packages you've installed

00:22:26,870 --> 00:22:30,800
for example with the monologue package

00:22:28,700 --> 00:22:32,660
and as this packages of rain it says

00:22:30,800 --> 00:22:36,620
I've installed monologue I've installed

00:22:32,660 --> 00:22:38,360
this exact version 1.2 3.0 it has source

00:22:36,620 --> 00:22:40,580
information like the get repository it

00:22:38,360 --> 00:22:43,490
pulled it from any requirements this

00:22:40,580 --> 00:22:45,980
package has so this package requires PHP

00:22:43,490 --> 00:22:49,070
version 5.3 point oh and it requires

00:22:45,980 --> 00:22:51,320
that PSR log package version 1.0 are

00:22:49,070 --> 00:22:52,490
higher so when composer installs one

00:22:51,320 --> 00:22:53,750
it's going to check my system to make

00:22:52,490 --> 00:22:55,820
sure I have the right version of PHP and

00:22:53,750 --> 00:23:00,020
it's going to download this third-party

00:22:55,820 --> 00:23:04,220
library PSR log and add that to my

00:23:00,020 --> 00:23:06,800
vendor directory now know about the lock

00:23:04,220 --> 00:23:08,179
file is you do not edit it think of it

00:23:06,800 --> 00:23:10,220
as something you cannot touch is

00:23:08,179 --> 00:23:12,710
generated by composer for composer it's

00:23:10,220 --> 00:23:15,640
not meant for human consumption look at

00:23:12,710 --> 00:23:18,230
it all you want peruse window shop but

00:23:15,640 --> 00:23:18,930
don't edit it if you do then you're

00:23:18,230 --> 00:23:21,060
going to screw

00:23:18,930 --> 00:23:22,500
composure and you it's easy enough to

00:23:21,060 --> 00:23:24,890
start over with composure but you don't

00:23:22,500 --> 00:23:27,690
want to do that

00:23:24,890 --> 00:23:30,360
now when composure downloads packages or

00:23:27,690 --> 00:23:32,250
package dependencies third-party code it

00:23:30,360 --> 00:23:34,080
puts it in the vendor directory and the

00:23:32,250 --> 00:23:37,110
way it organizes the vendor directory is

00:23:34,080 --> 00:23:40,110
based on vendor name and then package

00:23:37,110 --> 00:23:41,850
name so for example in the ven directory

00:23:40,110 --> 00:23:44,490
it would have a composer directory for

00:23:41,850 --> 00:23:46,500
itself it has monologue because we

00:23:44,490 --> 00:23:47,820
downloaded monologue and in monologue

00:23:46,500 --> 00:23:49,740
vender it has the monologue package

00:23:47,820 --> 00:23:52,710
inside that directory would have all

00:23:49,740 --> 00:23:55,560
that PHP code that that package has now

00:23:52,710 --> 00:23:57,990
you see it also has the PSR directory

00:23:55,560 --> 00:24:00,000
and inside that is the log directory the

00:23:57,990 --> 00:24:01,470
more packages I download when I look in

00:24:00,000 --> 00:24:02,820
vendor the bigger vendor is going to get

00:24:01,470 --> 00:24:04,500
this is where all my third-party code

00:24:02,820 --> 00:24:07,260
goes so I don't have to worry about it

00:24:04,500 --> 00:24:11,490
which means you don't commit it to your

00:24:07,260 --> 00:24:14,010
repository the reason why you don't

00:24:11,490 --> 00:24:15,870
commit vendor to your repository is

00:24:14,010 --> 00:24:17,550
because again it's code you don't

00:24:15,870 --> 00:24:18,780
control code you don't own you don't

00:24:17,550 --> 00:24:20,670
want to have it in your repo because

00:24:18,780 --> 00:24:23,550
then you're maintaining it what you want

00:24:20,670 --> 00:24:25,980
to do instead is in all your team's

00:24:23,550 --> 00:24:28,260
environments you have them run composer

00:24:25,980 --> 00:24:30,750
install which we're going to get to in

00:24:28,260 --> 00:24:33,360
the next section and on your

00:24:30,750 --> 00:24:34,620
environments like your dev or stage you

00:24:33,360 --> 00:24:36,180
want to try to generate we're known as

00:24:34,620 --> 00:24:38,040
build artifacts that will run composer

00:24:36,180 --> 00:24:39,840
install for you and download all that

00:24:38,040 --> 00:24:41,040
code but keep it out of your repo the

00:24:39,840 --> 00:24:46,050
only thing you want your repos the code

00:24:41,040 --> 00:24:48,450
you control so now we can run composer

00:24:46,050 --> 00:24:50,340
require with a package name let's say we

00:24:48,450 --> 00:24:51,920
want download PHP unit I give it the

00:24:50,340 --> 00:24:54,180
vendor of the package name PHP unit

00:24:51,920 --> 00:24:56,460
composer finds the latest version of

00:24:54,180 --> 00:24:57,690
that on packages downloads it and you

00:24:56,460 --> 00:24:59,930
see it's downloaded a whole bunch of

00:24:57,690 --> 00:25:02,540
other packages that PHP unit requires

00:24:59,930 --> 00:25:05,700
let me get into what just happened here

00:25:02,540 --> 00:25:07,830
so I ran supposed to require a PHP unit

00:25:05,700 --> 00:25:10,590
it went to packages it found information

00:25:07,830 --> 00:25:12,750
about PHP unit and it got version 5.7

00:25:10,590 --> 00:25:14,700
which is the latest version it updated

00:25:12,750 --> 00:25:16,520
my composer not JSON file with PHP unit

00:25:14,700 --> 00:25:18,900
information in that version constraint

00:25:16,520 --> 00:25:21,210
they downloaded a whole bunch of

00:25:18,900 --> 00:25:23,550
packages in my vendor directory so

00:25:21,210 --> 00:25:25,860
downloaded PHP unit but it looked at PHP

00:25:23,550 --> 00:25:27,150
units composer dot JSON file downloaded

00:25:25,860 --> 00:25:29,160
all the requirements it had any

00:25:27,150 --> 00:25:30,320
requirements they have downloads all

00:25:29,160 --> 00:25:32,549
those

00:25:30,320 --> 00:25:34,529
then there's actually this interesting

00:25:32,549 --> 00:25:35,729
thing where packages in composer can say

00:25:34,529 --> 00:25:37,409
hey you might want to think about

00:25:35,729 --> 00:25:39,269
installing these other packages they're

00:25:37,409 --> 00:25:40,979
not required but they'll help you out so

00:25:39,269 --> 00:25:43,200
it provides suggestions and command line

00:25:40,979 --> 00:25:45,209
to say install these other packages and

00:25:43,200 --> 00:25:46,769
then finally it writes the LOC file it

00:25:45,209 --> 00:25:49,649
updates the composer that lock with all

00:25:46,769 --> 00:25:55,109
the explicit versions of the packages

00:25:49,649 --> 00:25:58,619
that downloaded the third way to run

00:25:55,109 --> 00:26:00,149
composer require is with the package

00:25:58,619 --> 00:26:03,059
name and a version constraint now

00:26:00,149 --> 00:26:05,489
versions in composer are comparable to

00:26:03,059 --> 00:26:08,039
tags and get actually they're very

00:26:05,489 --> 00:26:10,009
one-to-one related so if you say

00:26:08,039 --> 00:26:12,989
explicitly I want to download version

00:26:10,009 --> 00:26:15,419
1.0.1 of this package you're telling

00:26:12,989 --> 00:26:17,459
composer look at the repository for this

00:26:15,419 --> 00:26:19,229
package find me the git branch that

00:26:17,459 --> 00:26:20,879
matches this number you can have a V

00:26:19,229 --> 00:26:23,369
before composer will figure that out and

00:26:20,879 --> 00:26:25,889
it gets that exact version but version

00:26:23,369 --> 00:26:28,859
constraints can be arranges so you can

00:26:25,889 --> 00:26:31,799
say I want a version of this package

00:26:28,859 --> 00:26:33,450
that is at least version 1.0 but it's

00:26:31,799 --> 00:26:36,629
less than version 2.0 I don't want to

00:26:33,450 --> 00:26:39,899
break any of my functionality with a

00:26:36,629 --> 00:26:42,479
major update so this command here

00:26:39,899 --> 00:26:44,639
greater than or equal to 1.0 the space

00:26:42,479 --> 00:26:46,859
is equal to an and statement so greater

00:26:44,639 --> 00:26:48,929
than and equal to 1.0 and less than

00:26:46,859 --> 00:26:50,669
version 2.0 will tell composer for that

00:26:48,929 --> 00:26:55,200
package by me the latest version that

00:26:50,669 --> 00:26:58,109
matches that constraint we can use a

00:26:55,200 --> 00:26:59,820
star operator it's a wild-card so I can

00:26:58,109 --> 00:27:00,989
say I want a virgin this package the

00:26:59,820 --> 00:27:03,719
latest version that matches the

00:27:00,989 --> 00:27:05,909
constraint of version 1.0 point one so I

00:27:03,719 --> 00:27:09,419
only want patch updates this follows

00:27:05,909 --> 00:27:12,239
semantics mark semantic versioning which

00:27:09,419 --> 00:27:14,459
is major minor patch that Drupal follows

00:27:12,239 --> 00:27:16,559
as well so this will give me anything

00:27:14,459 --> 00:27:20,639
that matches version 1.0 point whatever

00:27:16,559 --> 00:27:23,369
the highest number is you can also use

00:27:20,639 --> 00:27:26,219
the tilde which will signify to composer

00:27:23,369 --> 00:27:29,129
get me the version that matches below

00:27:26,219 --> 00:27:30,719
the next major release so this tilde is

00:27:29,129 --> 00:27:32,519
actually equal to that version

00:27:30,719 --> 00:27:35,309
constraint the second one I listed

00:27:32,519 --> 00:27:38,070
greater than or equal to 1.0 less than

00:27:35,309 --> 00:27:43,139
2.0 so it's a shorthand way to write it

00:27:38,070 --> 00:27:43,920
and you can use stability flag if you

00:27:43,139 --> 00:27:45,750
want

00:27:43,920 --> 00:27:47,820
you get things that are not stable code

00:27:45,750 --> 00:27:50,460
so if you're composing our JSON file

00:27:47,820 --> 00:27:51,720
doesn't list ability requirement

00:27:50,460 --> 00:27:55,890
composer is going to assume you only

00:27:51,720 --> 00:27:57,570
want stable working code sometimes that

00:27:55,890 --> 00:27:59,430
won't work for specific packages in

00:27:57,570 --> 00:28:01,950
Drupal 8 this is true because a lot of

00:27:59,430 --> 00:28:03,930
modules are still in beta and alpha so

00:28:01,950 --> 00:28:05,820
you may have to add a stability flag and

00:28:03,930 --> 00:28:07,890
say look I know I told you I only want

00:28:05,820 --> 00:28:10,320
stable code but for this package I want

00:28:07,890 --> 00:28:14,610
an exception gave me the dev version for

00:28:10,320 --> 00:28:15,810
2.0 point dev for this package so this

00:28:14,610 --> 00:28:17,730
may look like this in your command line

00:28:15,810 --> 00:28:20,520
you write composer require let's say we

00:28:17,730 --> 00:28:22,740
want be B hat because we like to do all

00:28:20,520 --> 00:28:26,610
our testing and we want version 3.3.4

00:28:22,740 --> 00:28:29,070
now so just here just hide some output

00:28:26,610 --> 00:28:31,350
in the in the demo so whether this is

00:28:29,070 --> 00:28:33,570
gonna do is composer is going to look at

00:28:31,350 --> 00:28:35,400
packages find me a version of B hat that

00:28:33,570 --> 00:28:38,310
matches this constraint so basically

00:28:35,400 --> 00:28:40,050
anything that's lower than 3.4 and then

00:28:38,310 --> 00:28:43,350
it's going to download B hat and all its

00:28:40,050 --> 00:28:47,130
dependencies as well so what happened

00:28:43,350 --> 00:28:48,360
here is it didn't even tell me what

00:28:47,130 --> 00:28:49,860
version is going to install because I

00:28:48,360 --> 00:28:51,840
told it the version so the first line

00:28:49,860 --> 00:28:53,460
was I've updated your composer not jason

00:28:51,840 --> 00:28:54,960
file with that package in that version

00:28:53,460 --> 00:28:57,000
constraint well look at the composer not

00:28:54,960 --> 00:28:59,550
Jason in a moment installed all the

00:28:57,000 --> 00:29:01,860
libraries or the third-party code that I

00:28:59,550 --> 00:29:05,640
need to run B hat and then updated my

00:29:01,860 --> 00:29:08,040
lock and vendor directory so now my

00:29:05,640 --> 00:29:09,810
composer now Jason looks like this we

00:29:08,040 --> 00:29:14,910
have our monologue package which is a

00:29:09,810 --> 00:29:16,680
specific version 1.2 0.3 unit was 5.7

00:29:14,910 --> 00:29:20,100
and then B hat has that version

00:29:16,680 --> 00:29:21,960
constraint with a star 3.3 dot star so

00:29:20,100 --> 00:29:24,030
this is great I have my packages

00:29:21,960 --> 00:29:25,290
installed and downloaded composer is

00:29:24,030 --> 00:29:27,150
maintaining the versions for me

00:29:25,290 --> 00:29:28,380
maintaining their dependencies I don't

00:29:27,150 --> 00:29:32,550
have to worry about I under that I can

00:29:28,380 --> 00:29:34,530
write my fun code now if you're running

00:29:32,550 --> 00:29:36,300
the composer require command on your

00:29:34,530 --> 00:29:37,740
machine that's all you need to do

00:29:36,300 --> 00:29:39,180
because it's going to download the code

00:29:37,740 --> 00:29:40,680
locally but again you don't commit your

00:29:39,180 --> 00:29:42,480
vendor directory so how do your other

00:29:40,680 --> 00:29:44,070
team members get that third-party code

00:29:42,480 --> 00:29:45,750
to work with it this is where the

00:29:44,070 --> 00:29:48,960
composer install command comes into play

00:29:45,750 --> 00:29:50,820
so the composer install command works

00:29:48,960 --> 00:29:52,980
with your closure dot log file in your

00:29:50,820 --> 00:29:54,600
vendor directory when you're on composer

00:29:52,980 --> 00:29:57,000
install it's going to go and download

00:29:54,600 --> 00:29:58,679
all that third-party code for you

00:29:57,000 --> 00:30:00,059
if you've set up the project and then

00:29:58,679 --> 00:30:01,890
you give it to your team member they get

00:30:00,059 --> 00:30:03,179
your get repository they just have to

00:30:01,890 --> 00:30:05,039
write composer install and their

00:30:03,179 --> 00:30:10,409
terminal and they get all their code

00:30:05,039 --> 00:30:12,690
downloaded now your composer out lock

00:30:10,409 --> 00:30:14,700
file you should commit it to your git

00:30:12,690 --> 00:30:16,950
repo but you don't have to if you don't

00:30:14,700 --> 00:30:19,770
what's gonna happen when you run

00:30:16,950 --> 00:30:21,030
composure composure install composers

00:30:19,770 --> 00:30:23,640
gonna look at your composer tot JSON

00:30:21,030 --> 00:30:26,070
file and use your version constraints to

00:30:23,640 --> 00:30:27,809
download the packages with this can lead

00:30:26,070 --> 00:30:29,610
to it's depending when people run that

00:30:27,809 --> 00:30:31,080
command they can get different versions

00:30:29,610 --> 00:30:32,640
depending on your version constraints if

00:30:31,080 --> 00:30:36,990
you have a dot star someone could have

00:30:32,640 --> 00:30:39,600
version 3.3.4 e dot one if you have your

00:30:36,990 --> 00:30:41,400
lock file your lock file explicitly

00:30:39,600 --> 00:30:45,000
states what version to download it's

00:30:41,400 --> 00:30:46,980
always major minor patch 3.3.5 your lock

00:30:45,000 --> 00:30:49,230
file everyone who runs composer install

00:30:46,980 --> 00:30:51,299
it's going to get that version so I

00:30:49,230 --> 00:30:53,610
recommend you add your composer on lock

00:30:51,299 --> 00:30:55,559
file to your repository so that you know

00:30:53,610 --> 00:30:57,030
everyone in your team every environment

00:30:55,559 --> 00:30:58,799
you run your project on is going to have

00:30:57,030 --> 00:31:02,850
the same exact versions of code you

00:30:58,799 --> 00:31:05,309
don't control so when you run composer

00:31:02,850 --> 00:31:08,970
install it's going to look at your lock

00:31:05,309 --> 00:31:10,980
file and it's going to then download

00:31:08,970 --> 00:31:12,450
it's gonna go to your repositories it's

00:31:10,980 --> 00:31:14,520
going to download all those packages and

00:31:12,450 --> 00:31:16,200
it's going to install all of them and

00:31:14,520 --> 00:31:21,690
all their dependencies and you're good

00:31:16,200 --> 00:31:23,700
to go you're ready to start running so

00:31:21,690 --> 00:31:26,250
composer install looks at what

00:31:23,700 --> 00:31:27,929
repositories you're depending on it

00:31:26,250 --> 00:31:29,789
downloads them all from the lock file

00:31:27,929 --> 00:31:35,610
adds them all to your vendor directory

00:31:29,789 --> 00:31:39,210
updates lock file if it doesn't exist so

00:31:35,610 --> 00:31:41,850
that's great so composer in it creates

00:31:39,210 --> 00:31:43,530
your composer adjacent file composer

00:31:41,850 --> 00:31:45,720
requires how you tell it what packages

00:31:43,530 --> 00:31:47,220
you want composer install is how you get

00:31:45,720 --> 00:31:49,230
everyone else on your team to have those

00:31:47,220 --> 00:31:51,330
packages what happens when there's an

00:31:49,230 --> 00:31:54,210
update well instead of having to

00:31:51,330 --> 00:31:55,679
manually have to update a third party

00:31:54,210 --> 00:31:57,510
piece of code even if it's a dependency

00:31:55,679 --> 00:31:59,070
of a dependency you can have composer do

00:31:57,510 --> 00:32:03,059
it for you with your close about update

00:31:59,070 --> 00:32:05,490
file or command sorry so composer update

00:32:03,059 --> 00:32:07,650
will update your composer Jason your

00:32:05,490 --> 00:32:10,270
close our lock in your vendor directory

00:32:07,650 --> 00:32:12,490
it can we run one of two ways

00:32:10,270 --> 00:32:14,710
composer update without any other

00:32:12,490 --> 00:32:16,809
parameters we'll look in your composer

00:32:14,710 --> 00:32:19,000
type JSON file for all your require and

00:32:16,809 --> 00:32:20,290
all your dev require packages it's gonna

00:32:19,000 --> 00:32:22,270
use the version constraints to find the

00:32:20,290 --> 00:32:24,070
latest version of all those packages and

00:32:22,270 --> 00:32:25,720
then it's going to go ahead and download

00:32:24,070 --> 00:32:27,610
them it's gonna upgrade to the latest

00:32:25,720 --> 00:32:31,390
version if it doesn't have it remove the

00:32:27,610 --> 00:32:32,980
old code replace with new code if you

00:32:31,390 --> 00:32:34,210
run it with a vendor package name it's

00:32:32,980 --> 00:32:36,400
only going to update that specific

00:32:34,210 --> 00:32:38,710
package for example composer update

00:32:36,400 --> 00:32:40,570
Drupal core will only update Drupal core

00:32:38,710 --> 00:32:42,130
and its dependencies it won't update any

00:32:40,570 --> 00:32:47,230
of your core module or any of your

00:32:42,130 --> 00:32:49,179
third-party modules so for example if we

00:32:47,230 --> 00:32:51,220
run composer update for our b-hat

00:32:49,179 --> 00:32:53,080
package so where you say be happy hat

00:32:51,220 --> 00:32:54,700
it's gonna use our version constraints

00:32:53,080 --> 00:32:56,200
and our composer taught Jason to find

00:32:54,700 --> 00:32:58,270
out if there's latest version from

00:32:56,200 --> 00:33:02,740
packages in this case it's gonna update

00:32:58,270 --> 00:33:04,120
it to version 3.4 and then it's going to

00:33:02,740 --> 00:33:05,740
update our lock file

00:33:04,120 --> 00:33:07,330
it's got data our vendor directory with

00:33:05,740 --> 00:33:10,960
the latest version that code and any

00:33:07,330 --> 00:33:17,050
dependencies it may have so we see here

00:33:10,960 --> 00:33:19,750
it updated from 3.1 to 4.3 but if you

00:33:17,050 --> 00:33:22,960
run composer just update on its own with

00:33:19,750 --> 00:33:24,160
no other commands it's going to find all

00:33:22,960 --> 00:33:26,410
your packages that need to be updated

00:33:24,160 --> 00:33:28,420
and update them all in this case monolog

00:33:26,410 --> 00:33:36,940
had to be updated from one point two oh

00:33:28,420 --> 00:33:38,950
two one point two three so you can

00:33:36,940 --> 00:33:40,690
update your your packages pretty simply

00:33:38,950 --> 00:33:42,610
by running composer update following

00:33:40,690 --> 00:33:44,320
your version constraints composers gonna

00:33:42,610 --> 00:33:45,880
update them what happens if you want to

00:33:44,320 --> 00:33:48,400
remove the package I find this happens

00:33:45,880 --> 00:33:49,870
to me a lot when I am starting a new

00:33:48,400 --> 00:33:52,030
project I'm building it I'm testing

00:33:49,870 --> 00:33:54,190
modules for example I use composer and

00:33:52,030 --> 00:33:59,380
so my module is running composer install

00:33:54,190 --> 00:34:01,230
you know Drupal / pathauto and if it

00:33:59,380 --> 00:34:03,760
seems like actually I don't need that

00:34:01,230 --> 00:34:06,220
project that module on my project

00:34:03,760 --> 00:34:07,540
anymore big news composer remove - get

00:34:06,220 --> 00:34:09,609
rid of it and get rid of any third-party

00:34:07,540 --> 00:34:12,129
code that it required so you don't have

00:34:09,609 --> 00:34:13,600
to manually do that composer remove

00:34:12,129 --> 00:34:15,520
command is going to update your JSON

00:34:13,600 --> 00:34:16,270
file your dot lock file and your vendor

00:34:15,520 --> 00:34:19,450
directory

00:34:16,270 --> 00:34:23,080
so for example so pay suppose we want to

00:34:19,450 --> 00:34:24,700
remove the PHP unit library from our

00:34:23,080 --> 00:34:27,429
project you shouldn't do this you should

00:34:24,700 --> 00:34:29,200
keep your unit tests but it's going to

00:34:27,429 --> 00:34:31,169
remove PHP unit it's going to look at

00:34:29,200 --> 00:34:33,220
all the dependencies that PHP unit has

00:34:31,169 --> 00:34:35,200
cross-check them against all my other

00:34:33,220 --> 00:34:36,879
third-party code and get rid of any of

00:34:35,200 --> 00:34:38,740
the ones that aren't dependencies of

00:34:36,879 --> 00:34:39,820
another package so it's gonna remove a

00:34:38,740 --> 00:34:41,200
whole bunch of thanks for my vendor

00:34:39,820 --> 00:34:43,169
directory for me so I don't have to

00:34:41,200 --> 00:34:45,730
worry about it

00:34:43,169 --> 00:34:47,440
so when you type compose and remove

00:34:45,730 --> 00:34:49,060
package and that's the only run way to

00:34:47,440 --> 00:34:51,159
run composer remove is with a package

00:34:49,060 --> 00:34:53,800
name it's gonna get information about

00:34:51,159 --> 00:34:56,260
that package find its dependencies check

00:34:53,800 --> 00:34:57,940
them in in your vendor directory get rid

00:34:56,260 --> 00:34:59,890
of them if they're not cross dependent

00:34:57,940 --> 00:35:02,020
for anything else delete all those that

00:34:59,890 --> 00:35:03,640
code from your repository remove it from

00:35:02,020 --> 00:35:12,720
your JSON file and remove it from the

00:35:03,640 --> 00:35:14,380
lock file so if you run composer install

00:35:12,720 --> 00:35:15,970
downloads your vendor directories

00:35:14,380 --> 00:35:18,310
composer update updates them composer

00:35:15,970 --> 00:35:20,859
remove for packages you don't need now

00:35:18,310 --> 00:35:22,240
what do you do now you do everything

00:35:20,859 --> 00:35:25,030
else everything that you need to do on

00:35:22,240 --> 00:35:28,119
your project and you don't want to worry

00:35:25,030 --> 00:35:30,220
about third party code but the question

00:35:28,119 --> 00:35:31,840
is all right I have all the third party

00:35:30,220 --> 00:35:33,430
code I don't know much about because

00:35:31,840 --> 00:35:35,350
composers doing it for me how do I use

00:35:33,430 --> 00:35:36,490
it I'm not allowed to touch the vendor

00:35:35,350 --> 00:35:39,670
directory I'm not allowed to touch lock

00:35:36,490 --> 00:35:42,460
file how can I use PHP unit how can I

00:35:39,670 --> 00:35:45,760
use be at tests how can I use these

00:35:42,460 --> 00:35:47,590
modules well composer everytime it

00:35:45,760 --> 00:35:50,680
downloads a package it updates an auto

00:35:47,590 --> 00:35:53,650
load PHP file which uses psr-4

00:35:50,680 --> 00:35:55,990
Auto loading to help you load that class

00:35:53,650 --> 00:35:58,420
file in those objects without having to

00:35:55,990 --> 00:36:01,630
know exactly where they are so all you

00:35:58,420 --> 00:36:03,930
have to do in your PHP code is you and

00:36:01,630 --> 00:36:07,930
you make a require statement to the

00:36:03,930 --> 00:36:10,240
composer auto load PHP file now here for

00:36:07,930 --> 00:36:12,310
example this PHP file is in my project

00:36:10,240 --> 00:36:14,440
route or my web route so I go to a

00:36:12,310 --> 00:36:16,780
directory above that because everything

00:36:14,440 --> 00:36:18,730
composer is above my web route I go to

00:36:16,780 --> 00:36:20,890
vendor and then auto load PHP that

00:36:18,730 --> 00:36:24,070
compose are generated for me and from

00:36:20,890 --> 00:36:25,960
here I can start just calling classes

00:36:24,070 --> 00:36:28,270
and Stan shading objects and composer

00:36:25,960 --> 00:36:29,750
because the auto load file has handled

00:36:28,270 --> 00:36:31,070
where that's located had a little

00:36:29,750 --> 00:36:33,020
those files I don't have to know it I

00:36:31,070 --> 00:36:35,360
don't want to put path passed anywhere

00:36:33,020 --> 00:36:37,070
in my code so so I can do the autoloader

00:36:35,360 --> 00:36:39,980
that I call monologue and create a

00:36:37,070 --> 00:36:41,060
logging tool that's great for me I don't

00:36:39,980 --> 00:36:42,830
have to know anything about this third

00:36:41,060 --> 00:36:43,970
party code except that the autoloader is

00:36:42,830 --> 00:36:48,880
there and then I installed it with

00:36:43,970 --> 00:36:51,470
composer so to recap

00:36:48,880 --> 00:36:53,690
composer manages projects dependencies

00:36:51,470 --> 00:36:56,030
for you it saves you time your

00:36:53,690 --> 00:36:57,590
developers time your project time so

00:36:56,030 --> 00:36:59,690
that you can focus on what's important

00:36:57,590 --> 00:37:02,150
and what differentiates your product is

00:36:59,690 --> 00:37:04,310
the code that you control the code that

00:37:02,150 --> 00:37:05,990
you have to write and maintain it takes

00:37:04,310 --> 00:37:07,730
out maintaining those third-party

00:37:05,990 --> 00:37:09,110
libraries that you have no control over

00:37:07,730 --> 00:37:11,990
and that you shouldn't add to your

00:37:09,110 --> 00:37:14,600
repository you can install composer

00:37:11,990 --> 00:37:16,040
locally by keeping composer that far

00:37:14,600 --> 00:37:18,830
that you download running the clothes

00:37:16,040 --> 00:37:21,260
are set up in your project directory or

00:37:18,830 --> 00:37:23,150
globally by moving that to a directory

00:37:21,260 --> 00:37:25,160
that's accessible by your path there's

00:37:23,150 --> 00:37:27,010
benefits of caveat to that it's to your

00:37:25,160 --> 00:37:29,330
team's discretion what you want to do

00:37:27,010 --> 00:37:31,610
composer is composed of three main parts

00:37:29,330 --> 00:37:33,680
proposed Rock Jason which has the

00:37:31,610 --> 00:37:35,930
project and dependency information for

00:37:33,680 --> 00:37:37,700
your project composer not lock which has

00:37:35,930 --> 00:37:39,500
the specifics of all your dependencies

00:37:37,700 --> 00:37:41,090
that composer uses to maintain them and

00:37:39,500 --> 00:37:42,860
you're in vendor directory which holds

00:37:41,090 --> 00:37:46,070
all that third-party code which you do

00:37:42,860 --> 00:37:48,500
not add to your game repository then

00:37:46,070 --> 00:37:51,130
your basic commands composer an it helps

00:37:48,500 --> 00:37:54,110
you generate that composer Jason file

00:37:51,130 --> 00:37:56,870
require helps you find packages and adds

00:37:54,110 --> 00:37:58,220
them to your project install allows your

00:37:56,870 --> 00:38:01,550
team members to download that

00:37:58,220 --> 00:38:03,380
third-party code update updates your

00:38:01,550 --> 00:38:05,900
packages to a version that matches your

00:38:03,380 --> 00:38:07,880
version constraints and then remove gets

00:38:05,900 --> 00:38:10,940
rid of any packages you no longer want

00:38:07,880 --> 00:38:12,980
and their dependencies and then you use

00:38:10,940 --> 00:38:14,960
the auto load file created by composer

00:38:12,980 --> 00:38:16,760
to load those pendants ease into your

00:38:14,960 --> 00:38:20,840
projects so that you can stand she ate

00:38:16,760 --> 00:38:25,880
them so I have a couple of resources for

00:38:20,840 --> 00:38:28,430
everybody here the first link bitly /d

00:38:25,880 --> 00:38:30,680
con 18 composer this is an annotated

00:38:28,430 --> 00:38:34,130
version of this presentation since you

00:38:30,680 --> 00:38:36,260
can't hear my lovely raspy voice you can

00:38:34,130 --> 00:38:37,670
watch it and peruse through it and read

00:38:36,260 --> 00:38:38,230
all the comments and see all the code I

00:38:37,670 --> 00:38:42,190
ran through

00:38:38,230 --> 00:38:43,690
get composure org is the place for

00:38:42,190 --> 00:38:45,910
composure they have tons of

00:38:43,690 --> 00:38:48,040
documentation to get you going further

00:38:45,910 --> 00:38:49,680
than these basics I recommend reading

00:38:48,040 --> 00:38:52,570
their documentation it's really helpful

00:38:49,680 --> 00:38:56,109
packages org is a place to find composer

00:38:52,570 --> 00:38:57,820
packages PHP packages you can access it

00:38:56,109 --> 00:39:00,420
from the web and do a search there or

00:38:57,820 --> 00:39:02,920
you can use it from your command line

00:39:00,420 --> 00:39:05,109
now that everyone here knows the basics

00:39:02,920 --> 00:39:07,780
you should be able to start going with

00:39:05,109 --> 00:39:09,760
composer on any PHP project but I assume

00:39:07,780 --> 00:39:11,170
some of you want to know the more

00:39:09,760 --> 00:39:13,810
difficult leads that have to do with

00:39:11,170 --> 00:39:16,810
composer and Drupal because it gets a

00:39:13,810 --> 00:39:18,730
little more complex there's a great

00:39:16,810 --> 00:39:20,920
session tomorrow it's two hours long

00:39:18,730 --> 00:39:22,990
it's how to build a Drupal site with

00:39:20,920 --> 00:39:24,880
composer and keep all of your hair by

00:39:22,990 --> 00:39:27,010
Matthew Grasmick and Jeff Garlin that's

00:39:24,880 --> 00:39:29,829
tomorrow it from 3:45 to 6:00 p.m. in

00:39:27,010 --> 00:39:31,540
room 103 be everyone here has the tools

00:39:29,829 --> 00:39:33,220
they need now to be prepared to go into

00:39:31,540 --> 00:39:35,740
that session and learn the more advanced

00:39:33,220 --> 00:39:37,990
topics of what you need to do to manage

00:39:35,740 --> 00:39:39,609
Drupal projects with composer so I

00:39:37,990 --> 00:39:42,490
recommend you check it out

00:39:39,609 --> 00:39:44,530
both these people are really smart and I

00:39:42,490 --> 00:39:45,640
think you'll get a lot away from it you

00:39:44,530 --> 00:39:47,890
can also start using your composer

00:39:45,640 --> 00:39:50,410
skills if you're here on Friday and join

00:39:47,890 --> 00:39:52,630
us for the the Sprint's we use composer

00:39:50,410 --> 00:39:54,160
in Drupal you don't have to but it's a

00:39:52,630 --> 00:39:56,109
great tool to speed up your development

00:39:54,160 --> 00:39:58,960
and you can help out with the sprints

00:39:56,109 --> 00:40:00,609
that way if you have any questions or

00:39:58,960 --> 00:40:03,400
feedback for this presentation for

00:40:00,609 --> 00:40:05,319
myself I greatly appreciate it I require

00:40:03,400 --> 00:40:09,609
it if I was composer I'd say I require

00:40:05,319 --> 00:40:11,349
feedback so please if you have any

00:40:09,609 --> 00:40:13,030
feedback let me know I'm here for the

00:40:11,349 --> 00:40:14,530
rest of the conference happy to chat you

00:40:13,030 --> 00:40:16,329
can find me on Twitter I'm Mike miles 86

00:40:14,530 --> 00:40:18,040
you can check out my podcast which just

00:40:16,329 --> 00:40:20,079
released a new episode on leadership a

00:40:18,040 --> 00:40:21,670
half hour ago as I as magically here

00:40:20,079 --> 00:40:24,369
presenting to you all Thank You

00:40:21,670 --> 00:40:25,599
automation with that that's the end of

00:40:24,369 --> 00:40:28,240
the presentation I have time for

00:40:25,599 --> 00:40:29,500
questions so I'll put up the resources

00:40:28,240 --> 00:40:33,030
link and if you have a question please

00:40:29,500 --> 00:40:33,030
raise your hand after applause

00:40:36,790 --> 00:40:42,440
that's our question here yes the

00:40:41,000 --> 00:40:44,110
question was how do you update composer

00:40:42,440 --> 00:40:46,400
great question

00:40:44,110 --> 00:40:50,110
composer itself has an update command

00:40:46,400 --> 00:40:50,110
let me see if I can list it here

00:40:51,700 --> 00:40:58,880
composer you type composer it will list

00:40:55,610 --> 00:41:03,040
all the commands you have available and

00:40:58,880 --> 00:41:07,640
I believe there's a self update command

00:41:03,040 --> 00:41:09,740
do I scroll pass it self update up at

00:41:07,640 --> 00:41:11,360
the top here so if you write compose our

00:41:09,740 --> 00:41:13,550
self update that'll update your compose

00:41:11,360 --> 00:41:15,800
enough our file to the latest version of

00:41:13,550 --> 00:41:19,520
composer great question I should have

00:41:15,800 --> 00:41:22,670
covered that sure yeah self update

00:41:19,520 --> 00:41:33,620
composer self update would be the

00:41:22,670 --> 00:41:35,570
command yes the question was is there a

00:41:33,620 --> 00:41:39,800
tool that can generate your composer dot

00:41:35,570 --> 00:41:42,980
JSON file from a existing sites I think

00:41:39,800 --> 00:41:45,200
there is I know especially in Drupal

00:41:42,980 --> 00:41:47,990
there's ad rush command that will help

00:41:45,200 --> 00:41:49,850
you do that I don't know what the

00:41:47,990 --> 00:41:52,250
command is off top my head by - no one

00:41:49,850 --> 00:41:56,600
exists for other projects I'm not sure

00:41:52,250 --> 00:41:59,690
if there is one I know there is at least

00:41:56,600 --> 00:42:00,860
one GUI tool for composer I also don't

00:41:59,690 --> 00:42:02,960
know the name of that on top of my head

00:42:00,860 --> 00:42:07,480
unfortunately but there should be some

00:42:02,960 --> 00:42:07,480
so at least brush has has you covered

00:42:12,100 --> 00:42:16,100
can you install the trip can you

00:42:14,420 --> 00:42:18,680
transfer the Installer profile to other

00:42:16,100 --> 00:42:20,570
team members yes you can so the great

00:42:18,680 --> 00:42:22,850
thing with composer what you want to add

00:42:20,570 --> 00:42:26,210
to your repository is your dot JSON file

00:42:22,850 --> 00:42:28,610
and your dot lock file with that anytime

00:42:26,210 --> 00:42:30,170
someone runs composer install they're

00:42:28,610 --> 00:42:32,060
getting the install from the dot lock

00:42:30,170 --> 00:42:34,580
file but that means anyone here and your

00:42:32,060 --> 00:42:37,310
team can run composer update anyone your

00:42:34,580 --> 00:42:39,020
team can assume command because they

00:42:37,310 --> 00:42:41,000
have that JSON file which is like how

00:42:39,020 --> 00:42:42,950
you interface with composer so yeah you

00:42:41,000 --> 00:42:45,530
don't have to transfer anything anybody

00:42:42,950 --> 00:42:47,890
can do it does that answer great in the

00:42:45,530 --> 00:42:47,890
back there

00:42:57,519 --> 00:43:07,640
yep my argument would be that the

00:43:06,019 --> 00:43:11,269
composer documentation says to follow

00:43:07,640 --> 00:43:13,730
their guide like I know you can install

00:43:11,269 --> 00:43:17,059
composer with like homebrew on Mac or

00:43:13,730 --> 00:43:19,339
you know with apt-get I don't know if

00:43:17,059 --> 00:43:20,660
there's a benefit or not to doing it

00:43:19,339 --> 00:43:23,950
that way so I will say using the

00:43:20,660 --> 00:43:27,859
composer commands here then you're

00:43:23,950 --> 00:43:29,000
checking the hash value to make sure

00:43:27,859 --> 00:43:30,349
that you're getting is that going what

00:43:29,000 --> 00:43:33,230
you want so there's a little security

00:43:30,349 --> 00:43:34,730
there but whatever works for you I mean

00:43:33,230 --> 00:43:36,319
you can also use like double you get to

00:43:34,730 --> 00:43:38,420
to just get composer if you wanted to

00:43:36,319 --> 00:43:44,480
but I'd recommend following their their

00:43:38,420 --> 00:43:46,759
guides is it typical to check and

00:43:44,480 --> 00:43:48,380
composer luck yes it is and the reason

00:43:46,759 --> 00:43:50,509
for that is because if you don't then

00:43:48,380 --> 00:43:52,220
anytime you're on composer install is

00:43:50,509 --> 00:43:54,109
going to read from your composer dot

00:43:52,220 --> 00:43:55,430
JSON file and people are going to end up

00:43:54,109 --> 00:43:57,170
having different versions based on your

00:43:55,430 --> 00:43:58,789
various constraints so unless and

00:43:57,170 --> 00:44:02,150
composer not Jason you say explicit

00:43:58,789 --> 00:44:04,730
package versions like X dot X dot X 1

00:44:02,150 --> 00:44:05,930
dot 0 dot 1 then people are gonna have

00:44:04,730 --> 00:44:07,069
different versions of packages they're

00:44:05,930 --> 00:44:08,720
gonna have different dependencies and

00:44:07,069 --> 00:44:10,009
that could you again it could be like

00:44:08,720 --> 00:44:11,180
well it works on my machine I don't know

00:44:10,009 --> 00:44:13,549
why it doesn't work on the server when

00:44:11,180 --> 00:44:15,349
we installed it a year ago so if you

00:44:13,549 --> 00:44:17,720
keep your lock file in there the lock

00:44:15,349 --> 00:44:21,160
file has the specific versions so I'd

00:44:17,720 --> 00:44:21,160
recommend it in the back

00:44:28,360 --> 00:44:33,800
so the question was in in terms of like

00:44:31,610 --> 00:44:36,110
automation and running scripts to have

00:44:33,800 --> 00:44:38,750
it run install and update should you do

00:44:36,110 --> 00:44:41,720
both I would recommend just install and

00:44:38,750 --> 00:44:44,960
you have a human run update because you

00:44:41,720 --> 00:44:46,460
want if you run update again your your

00:44:44,960 --> 00:44:48,290
environments are gonna be updating

00:44:46,460 --> 00:44:50,600
packages to a different version that

00:44:48,290 --> 00:44:51,950
then your team members may not be using

00:44:50,600 --> 00:44:54,440
because it's gonna update the lock file

00:44:51,950 --> 00:44:56,630
and you only want your environments to

00:44:54,440 --> 00:44:58,640
be using what you tell it to use so only

00:44:56,630 --> 00:45:00,440
run update locally ideally have one

00:44:58,640 --> 00:45:02,330
person do that like I like to do it

00:45:00,440 --> 00:45:04,970
either right before release or right

00:45:02,330 --> 00:45:07,750
after a release update and then only

00:45:04,970 --> 00:45:10,750
have your environments run the install

00:45:07,750 --> 00:45:10,750
yes

00:45:27,430 --> 00:45:32,150
yeah so the question was in terms of

00:45:30,859 --> 00:45:33,890
when do you turn it on and off again

00:45:32,150 --> 00:45:37,310
with composure by deleting your vendor

00:45:33,890 --> 00:45:39,440
directory in your lock file I would say

00:45:37,310 --> 00:45:42,320
at any time you can delete your vendor

00:45:39,440 --> 00:45:44,420
directory it doesn't matter because then

00:45:42,320 --> 00:45:46,760
as soon as you run compose or install

00:45:44,420 --> 00:45:50,780
it's going to recreate it for the lock

00:45:46,760 --> 00:45:57,020
file that that's a tricky question I

00:45:50,780 --> 00:45:59,570
would say if hmm I would I delete it

00:45:57,020 --> 00:46:01,099
when I know I want to like update or

00:45:59,570 --> 00:46:02,510
change the version constraint I tend to

00:46:01,099 --> 00:46:05,990
just delete it if I want update

00:46:02,510 --> 00:46:09,140
everything because the problem is once

00:46:05,990 --> 00:46:10,490
you delete it it uh it again when you

00:46:09,140 --> 00:46:11,660
run composer install people gonna have

00:46:10,490 --> 00:46:13,250
different versions or you're gonna have

00:46:11,660 --> 00:46:16,210
a different version than everyone unless

00:46:13,250 --> 00:46:19,310
you tell everyone delete your lock file

00:46:16,210 --> 00:46:21,970
so I would only delete my lock file if

00:46:19,310 --> 00:46:24,380
someone accidentally edited it and

00:46:21,970 --> 00:46:25,730
you're like well composers not working

00:46:24,380 --> 00:46:26,599
at all I'm not getting in the code then

00:46:25,730 --> 00:46:28,250
you're like all right let's see what

00:46:26,599 --> 00:46:29,480
happens we get rid of it because you're

00:46:28,250 --> 00:46:30,619
da chasin file does have all the

00:46:29,480 --> 00:46:32,270
information you need to recreate the

00:46:30,619 --> 00:46:33,920
project had the internet been good

00:46:32,270 --> 00:46:34,940
enough you would have seen me delete the

00:46:33,920 --> 00:46:37,490
lock file in the vendor director like

00:46:34,940 --> 00:46:38,900
four times or in this talk but everyone

00:46:37,490 --> 00:46:42,830
here was using their computers during my

00:46:38,900 --> 00:46:45,190
presentation no what's the everyone here

00:46:42,830 --> 00:46:49,060
it's great any other questions

00:46:45,190 --> 00:46:49,060
no oh yes in the back

00:46:57,150 --> 00:47:01,350
if you the question was if you run

00:46:59,190 --> 00:47:03,120
composer update on a specific package do

00:47:01,350 --> 00:47:06,270
you can you tell it a version to update

00:47:03,120 --> 00:47:09,690
to I don't think so I think what it will

00:47:06,270 --> 00:47:11,970
do is follow your version constraints so

00:47:09,690 --> 00:47:13,830
if you're careful with how you limit how

00:47:11,970 --> 00:47:15,210
you list out your constraints then you

00:47:13,830 --> 00:47:18,180
should be ok when you're grown composer

00:47:15,210 --> 00:47:20,790
update so example if your constraint is

00:47:18,180 --> 00:47:21,780
a specific version 10.1 and your run

00:47:20,790 --> 00:47:23,400
composers are updated on that package

00:47:21,780 --> 00:47:25,470
it's not gonna do anything because it's

00:47:23,400 --> 00:47:27,840
like well it's 1.1 point 1 but if you

00:47:25,470 --> 00:47:29,580
say 1.0 dot star you want composer

00:47:27,840 --> 00:47:33,450
update its gonna do one point zero dot

00:47:29,580 --> 00:47:35,190
4.5 whatever the latest version is so

00:47:33,450 --> 00:47:37,020
instead you'd want to do composer remove

00:47:35,190 --> 00:47:38,310
and close or require that you want to

00:47:37,020 --> 00:47:46,740
give it a specific different version

00:47:38,310 --> 00:47:49,080
straight correct if you run composer

00:47:46,740 --> 00:47:50,490
update and it does update packages it's

00:47:49,080 --> 00:47:52,170
gonna update your lock file because it's

00:47:50,490 --> 00:47:54,090
getting a different version of those

00:47:52,170 --> 00:47:56,460
packages which it keeps listed in that

00:47:54,090 --> 00:47:58,590
lock file so if you're doing that in

00:47:56,460 --> 00:48:00,870
your git repository you run composer

00:47:58,590 --> 00:48:02,430
update it does update packages and you

00:48:00,870 --> 00:48:04,080
go to make it commit you're gonna see

00:48:02,430 --> 00:48:05,400
that your dot lock file has changed and

00:48:04,080 --> 00:48:06,780
you're gonna commit those changes and

00:48:05,400 --> 00:48:08,640
everyone your team's gonna pull them in

00:48:06,780 --> 00:48:11,030
and then they were on composer install

00:48:08,640 --> 00:48:14,510
and it's gonna see oh we have to update

00:48:11,030 --> 00:48:14,510
good question yes

00:48:29,180 --> 00:48:33,109
so the question was composer works great

00:48:31,400 --> 00:48:37,460
for Drupal 8 how do you integrate it to

00:48:33,109 --> 00:48:38,690
an existing tuple 7 project I can I can

00:48:37,460 --> 00:48:42,380
hand you up and say go to this education

00:48:38,690 --> 00:48:44,599
tomorrow based on my knowledge there's a

00:48:42,380 --> 00:48:45,859
bunch of step you have to do even though

00:48:44,599 --> 00:48:47,569
composer works great with Drupal 8

00:48:45,859 --> 00:48:49,309
there's a lot of subtleties that you

00:48:47,569 --> 00:48:51,109
have to get a place one of the advanced

00:48:49,309 --> 00:48:52,609
things you can do and that you'll learn

00:48:51,109 --> 00:48:54,140
tomorrow I'm sure is you can tell

00:48:52,609 --> 00:48:55,760
composer when you install a package of

00:48:54,140 --> 00:48:57,680
this type install it in a certain

00:48:55,760 --> 00:48:59,210
directory in the set of vendor this is a

00:48:57,680 --> 00:49:02,589
great way to handle modules you can say

00:48:59,210 --> 00:49:05,210
install your modules into core

00:49:02,589 --> 00:49:06,890
contribute in I assume you'd have to set

00:49:05,210 --> 00:49:10,549
up something similar and then you can

00:49:06,890 --> 00:49:11,900
still pull your your your modules in and

00:49:10,549 --> 00:49:13,819
just make sure the path directories is

00:49:11,900 --> 00:49:15,829
correct where they're where they're

00:49:13,819 --> 00:49:18,200
going where your themes are going beyond

00:49:15,829 --> 00:49:25,900
that I think it should work pretty

00:49:18,200 --> 00:49:25,900
pretty well but I haven't tried it yes

00:49:28,200 --> 00:49:33,569
ooh is there any way to tell if there's

00:49:31,049 --> 00:49:40,460
any packages you have that are no longer

00:49:33,569 --> 00:49:51,030
being used I think there is a command

00:49:40,460 --> 00:49:53,329
that I'm reading live here I should have

00:49:51,030 --> 00:49:53,329
done it

00:49:53,930 --> 00:49:58,829
outdated we'll show you the version to

00:49:56,130 --> 00:50:01,589
see if your package is outdated I know

00:49:58,829 --> 00:50:05,040
if you do composers show you'll show

00:50:01,589 --> 00:50:06,559
information about that package or info I

00:50:05,040 --> 00:50:09,210
don't know if there's one that will say

00:50:06,559 --> 00:50:10,710
no thank you timer I don't know if

00:50:09,210 --> 00:50:12,030
there's one that'll split say hey these

00:50:10,710 --> 00:50:14,160
packages aren't being used anymore you

00:50:12,030 --> 00:50:15,540
should get rid of them but if you're

00:50:14,160 --> 00:50:16,920
using composer and manage all your

00:50:15,540 --> 00:50:18,510
dependencies you shouldn't have any

00:50:16,920 --> 00:50:19,859
abandoned ones left so if you use

00:50:18,510 --> 00:50:21,720
composer to remove it's going to get rid

00:50:19,859 --> 00:50:24,930
of any dependencies that aren't cross

00:50:21,720 --> 00:50:28,290
dependent so I don't know how you would

00:50:24,930 --> 00:50:31,260
end up with what what would abandoned

00:50:28,290 --> 00:50:35,040
the dependencies good question though

00:50:31,260 --> 00:50:36,839
that's I'd be helpful any more questions

00:50:35,040 --> 00:50:48,809
or another round of applause either way

00:50:36,839 --> 00:50:52,410
works for me oh and I have stickers too

00:50:48,809 --> 00:50:54,589
if anyone wants stickers always forget

00:50:52,410 --> 00:50:54,589
to mention

00:51:06,840 --> 00:51:13,000
yes I thought for recorded demos you

00:51:10,510 --> 00:51:16,800
have to have that so those are the

00:51:13,000 --> 00:51:16,800
annotated versions you'll find those are

00:51:19,020 --> 00:51:30,240
thank you yes

00:51:23,950 --> 00:51:30,240
yes no problem happy thank you

00:51:35,530 --> 00:51:50,300
for the latest updated you would have to

00:51:48,140 --> 00:51:54,680
if you want to revert you would have to

00:51:50,300 --> 00:51:56,000
do like a composer remove oh yeah those

00:51:54,680 --> 00:51:57,710
are removed here that package they

00:51:56,000 --> 00:52:00,349
require with a verse restraint that

00:51:57,710 --> 00:52:03,290
matches the previous version so if you

00:52:00,349 --> 00:52:05,780
wanted say say you had updated to

00:52:03,290 --> 00:52:08,690
version 3.4 well you're like I want to

00:52:05,780 --> 00:52:12,740
go back to 3.3 you don't say composer

00:52:08,690 --> 00:52:16,760
remove package then composer require

00:52:12,740 --> 00:52:19,490
package 3.3 dot star and that will get

00:52:16,760 --> 00:52:40,190
that version of it so you can't say like

00:52:19,490 --> 00:52:42,680
revert but you can say no like in Drupal

00:52:40,190 --> 00:52:44,839
if you have like a module enabled you

00:52:42,680 --> 00:52:45,920
could still run composer remove was it's

00:52:44,839 --> 00:52:50,140
gonna because it's just gonna delete the

00:52:45,920 --> 00:52:54,260
code yeah you know nothing about Drupal

00:52:50,140 --> 00:52:55,520
yeah yes yeah so then if you go to your

00:52:54,260 --> 00:52:56,500
Drupal site drupes no be like oh there's

00:52:55,520 --> 00:52:59,089
something wrong here

00:52:56,500 --> 00:53:00,560
but yeah so composer won't uninstall for

00:52:59,089 --> 00:53:01,820
you it won't go that's on this dog it

00:53:00,560 --> 00:53:06,050
just knows you want to get rid of that

00:53:01,820 --> 00:53:08,060
third-party code yes yes just make sure

00:53:06,050 --> 00:53:10,160
you have rules of place like how to

00:53:08,060 --> 00:53:20,150
remove packages or modules like

00:53:10,160 --> 00:53:21,140
uninstall then delete the code so if

00:53:20,150 --> 00:53:25,130
your web host that's all you're gonna

00:53:21,140 --> 00:53:27,320
install composer for example on Acquia

00:53:25,130 --> 00:53:28,849
say right you have to have them you have

00:53:27,320 --> 00:53:31,339
to you have to have the vendor directory

00:53:28,849 --> 00:53:33,440
there what you can do is in an

00:53:31,339 --> 00:53:37,220
intermediary step like you can either

00:53:33,440 --> 00:53:40,670
use we use like internally Lee's Jenkins

00:53:37,220 --> 00:53:42,800
or you can use like circle CI like a CI

00:53:40,670 --> 00:53:44,420
tool that will build that and you build

00:53:42,800 --> 00:53:47,660
in your build script to run composer

00:53:44,420 --> 00:53:51,500
install and then you have that reading

00:53:47,660 --> 00:53:53,089
to check in to your aqua repository so

00:53:51,500 --> 00:53:54,140
like you have like say like a bucket or

00:53:53,089 --> 00:53:55,849
a github repository

00:53:54,140 --> 00:53:58,730
it's intermediary tool and then your

00:53:55,849 --> 00:54:00,770
aqua repository gets what's you it gets

00:53:58,730 --> 00:54:03,950
a little complicated but really you just

00:54:00,770 --> 00:54:06,080
have to be make it commit you run you

00:54:03,950 --> 00:54:08,270
tell the tool that hey I made a commit

00:54:06,080 --> 00:54:09,890
it runs an install as that code and then

00:54:08,270 --> 00:54:12,320
pushes is up once you have it set up it

00:54:09,890 --> 00:54:14,450
works awesome but getting that stuff

00:54:12,320 --> 00:54:17,270
yeah slow confusing or you have a

00:54:14,450 --> 00:54:21,160
separate pepo on your machine that you

00:54:17,270 --> 00:54:21,160
then attitude where a separate branch

00:54:24,930 --> 00:54:31,290
well we can do a knock way that's cool

00:54:28,730 --> 00:54:34,319
well you know you can do is they have

00:54:31,290 --> 00:54:35,940
occupy plans which is an automation

00:54:34,319 --> 00:54:38,730
script that you can say alright

00:54:35,940 --> 00:54:40,680
pipelines I've pushed code up run

00:54:38,730 --> 00:54:45,150
composer install it install the vendor

00:54:40,680 --> 00:54:47,609
directory depending on like your cloud

00:54:45,150 --> 00:54:50,670
subscription it is it's totally worth it

00:54:47,609 --> 00:54:53,099
I think we're signed it could be like

00:54:50,670 --> 00:54:56,069
really like 5 to 9 grand depending on

00:54:53,099 --> 00:54:57,329
but some of them like if you're like

00:54:56,069 --> 00:54:59,609
enterprise level you have it included

00:54:57,329 --> 00:55:01,530
you'd like turn it on then you it's a

00:54:59,609 --> 00:55:03,510
simple Yambol file or you list here the

00:55:01,530 --> 00:55:11,369
commands to run when I push code to

00:55:03,510 --> 00:55:13,319
player repository check out but if you

00:55:11,369 --> 00:55:16,710
use bit bucket if bucket has pipelines

00:55:13,319 --> 00:55:18,450
that you can turn on github obviously I

00:55:16,710 --> 00:55:26,240
was like Travis or circle that you can

00:55:18,450 --> 00:55:26,240
use to handle that for you yes

00:55:32,670 --> 00:55:37,240
so one to be honest I haven't used

00:55:35,710 --> 00:55:40,240
windows veneers but I would recommend

00:55:37,240 --> 00:55:42,100
the Exe they handle a lot of things for

00:55:40,240 --> 00:55:43,870
you the only thing with the exe is it

00:55:42,100 --> 00:55:45,670
solves it globally so if you wanted a

00:55:43,870 --> 00:55:48,100
pair projects you can still follow the

00:55:45,670 --> 00:55:50,370
like the PHP commands about it they list

00:55:48,100 --> 00:55:52,600
all this information on their website

00:55:50,370 --> 00:55:58,480
but I think you know Windows could be a

00:55:52,600 --> 00:56:07,810
little trickier right so they recommend

00:55:58,480 --> 00:56:10,000
the dot exe I mean all composer needs to

00:56:07,810 --> 00:56:11,620
run this PHP so like those commands are

00:56:10,000 --> 00:56:14,580
just PHP commands so if you can run PHP

00:56:11,620 --> 00:56:14,580
from terminal

00:56:34,089 --> 00:56:39,049
yeah what I'll do so when you when you

00:56:37,160 --> 00:56:41,420
download when you get the composer set

00:56:39,049 --> 00:56:43,759
up can you run that what it does it

00:56:41,420 --> 00:56:45,950
checks the HP settings check your PHP

00:56:43,759 --> 00:56:47,539
version checks some iodine settings if

00:56:45,950 --> 00:56:48,979
they don't well if you don't have what

00:56:47,539 --> 00:56:50,660
you need to run composer it's gonna tell

00:56:48,979 --> 00:56:53,180
you hey these things are broken is it

00:56:50,660 --> 00:56:54,469
fix these if they work they'll say great

00:56:53,180 --> 00:56:56,119
I'm gonna get the fire file if it works

00:56:54,469 --> 00:57:00,589
but he'll tell you if you're trying to

00:56:56,119 --> 00:57:03,200
stop think five six yeah they what stars

00:57:00,589 --> 00:57:05,359
our website he'll tell you it won't work

00:57:03,200 --> 00:57:11,719
it's good thank you for coming

00:57:05,359 --> 00:57:14,499
appreciate it thank you thank you for

00:57:11,719 --> 00:57:14,499
coming I appreciate it

00:57:37,749 --> 00:57:44,240
this bird for composer files are for

00:57:40,579 --> 00:57:46,069
Drupal files for vendor right now so

00:57:44,240 --> 00:57:55,910
that's where I recommend you don't have

00:57:46,069 --> 00:57:57,829
your vendor directory in your repo yes

00:57:55,910 --> 00:58:00,529
because that's it will cause problems so

00:57:57,829 --> 00:58:02,900
that's where yeah you can do pipelines

00:58:00,529 --> 00:58:05,089
or some engineer intermediary build

00:58:02,900 --> 00:58:06,710
system then you then you can let that

00:58:05,089 --> 00:58:09,710
handle it for you and you don't worry

00:58:06,710 --> 00:58:13,390
about it it's lower you should go to the

00:58:09,710 --> 00:58:13,390

YouTube URL: https://www.youtube.com/watch?v=GlkvEn3MjTI


