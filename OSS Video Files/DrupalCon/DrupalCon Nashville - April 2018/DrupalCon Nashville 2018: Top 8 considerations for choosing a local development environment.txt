Title: DrupalCon Nashville 2018: Top 8 considerations for choosing a local development environment
Publication date: 2018-04-11
Playlist: DrupalCon Nashville - April 2018
Description: 
	There has been a proliferation of local development environment options as the ubiquity of docker has removed much of the complexity of dependancies and performance problems. I will break down the top 8 considerations when choosing a framework, application or technology to enable local development and testing of Drupal:

Architecture - To Docker or not to Docker
Composer/DrupalConsole/Drush support
Configurability of environments and tests
Support for other languages
Toolset vs application
Open-Sourciness 
Implications of popularity
Options for commercial support
I will take the audience through a detailed analysis of the importance of these considerations with real world Drupal examples and then a feature matrix of current solutions / approaches.

This will be particularly useful for technical leads wishing to standardise their team on a common local development environment to accelerate onboarding and improve code testing processes.
Captions: 
	00:00:01,610 --> 00:00:07,770
hello everybody its 10:45 so I'm gonna

00:00:04,650 --> 00:00:09,450
get started on time but as people

00:00:07,770 --> 00:00:12,750
meander and I'm gonna do the unimportant

00:00:09,450 --> 00:00:14,610
part which is to introduce myself so I'm

00:00:12,750 --> 00:00:16,590
John Kennedy Twitter I'm commerce John

00:00:14,610 --> 00:00:20,279
feel free to tweet the hell out with the

00:00:16,590 --> 00:00:21,960
presentation just from my benefit I'm a

00:00:20,279 --> 00:00:26,580
product director at Acquia I've been in

00:00:21,960 --> 00:00:28,140
Drupal just over 10 years and she didn't

00:00:26,580 --> 00:00:29,970
see me earlier I was waving my cowboy

00:00:28,140 --> 00:00:33,090
hat around the pre note everyone should

00:00:29,970 --> 00:00:36,420
come to pre note it's early but fun and

00:00:33,090 --> 00:00:38,219
I've actually been I've had my own

00:00:36,420 --> 00:00:42,540
Drupal shop you know I've worked for

00:00:38,219 --> 00:00:45,059
other Drupal startups and I've a long

00:00:42,540 --> 00:00:48,000
time ago developed modules and developed

00:00:45,059 --> 00:00:51,000
lots of sites and sold Drupal a ton

00:00:48,000 --> 00:00:52,829
actually and you know the local

00:00:51,000 --> 00:00:54,480
development experience is really

00:00:52,829 --> 00:00:57,809
important in all of those situations and

00:00:54,480 --> 00:01:03,210
I use a variety of local development

00:00:57,809 --> 00:01:04,979
tools today so I'm going to go through

00:01:03,210 --> 00:01:06,890
the top eight considerations for

00:01:04,979 --> 00:01:10,350
choosing a local development environment

00:01:06,890 --> 00:01:11,820
but the kind of the theme of this is

00:01:10,350 --> 00:01:14,159
that what I think is most important

00:01:11,820 --> 00:01:16,020
especially for teams is composability

00:01:14,159 --> 00:01:20,040
and encapsulation and we'll kind of get

00:01:16,020 --> 00:01:21,990
into that so this is not a demo I have

00:01:20,040 --> 00:01:24,509
done plenty of demos but I am NOT going

00:01:21,990 --> 00:01:26,220
to show you install processes for local

00:01:24,509 --> 00:01:28,650
development environments you can do that

00:01:26,220 --> 00:01:30,329
there's plenty of documentation for this

00:01:28,650 --> 00:01:33,780
for the products that I'm going to talk

00:01:30,329 --> 00:01:35,640
about but if you really want a demo then

00:01:33,780 --> 00:01:37,290
I have plenty of them here and you can

00:01:35,640 --> 00:01:37,770
ask me questions and find me later and I

00:01:37,290 --> 00:01:39,900
can show you

00:01:37,770 --> 00:01:43,799
you know Lando and dev desktop and whole

00:01:39,900 --> 00:01:46,290
range of other things so what I'm really

00:01:43,799 --> 00:01:48,659
gonna dive into here and I hope this is

00:01:46,290 --> 00:01:51,180
the value you get is what questions

00:01:48,659 --> 00:01:53,689
should I ask when choosing a local

00:01:51,180 --> 00:01:55,500
development environment as a tech lead

00:01:53,689 --> 00:01:57,240
because this is actually quite a

00:01:55,500 --> 00:01:58,979
different requirement I'm going to talk

00:01:57,240 --> 00:02:00,329
about plenty of local development

00:01:58,979 --> 00:02:02,219
environments and you know plenty of

00:02:00,329 --> 00:02:04,649
products that suit you know a variety of

00:02:02,219 --> 00:02:07,020
different people but I think this is one

00:02:04,649 --> 00:02:08,630
of the really kind of key pieces of

00:02:07,020 --> 00:02:10,369
value you can get here

00:02:08,630 --> 00:02:12,200
you know probably a lot of you in the

00:02:10,369 --> 00:02:14,120
room are tech leads and those who aren't

00:02:12,200 --> 00:02:15,680
will probably be if you're a developer

00:02:14,120 --> 00:02:18,320
you'll probably be this at one point in

00:02:15,680 --> 00:02:20,450
your career and booting up your team on

00:02:18,320 --> 00:02:23,450
a standard local development environment

00:02:20,450 --> 00:02:25,100
is challenging and very beneficial if

00:02:23,450 --> 00:02:26,960
you get it right so I hope this is what

00:02:25,100 --> 00:02:29,480
it's kind of one of the key things you

00:02:26,960 --> 00:02:30,050
get out of this talk I want to say

00:02:29,480 --> 00:02:31,670
thanks

00:02:30,050 --> 00:02:34,160
it's Jeff Niemann and Chris urban

00:02:31,670 --> 00:02:39,230
because recently they ran the Drupal

00:02:34,160 --> 00:02:42,440
local development survey and that you

00:02:39,230 --> 00:02:44,180
know they've got 789 responses and that

00:02:42,440 --> 00:02:48,170
really measured a whole range of metrics

00:02:44,180 --> 00:02:51,380
around usage of local development

00:02:48,170 --> 00:02:53,300
environments and you should check that

00:02:51,380 --> 00:02:56,270
out I haven't got a link here but it's

00:02:53,300 --> 00:02:58,760
really easy to find and you know that's

00:02:56,270 --> 00:03:00,770
a wealth of information on what people

00:02:58,760 --> 00:03:03,290
use now so that's that's really

00:03:00,770 --> 00:03:06,260
interesting so here are the top eight

00:03:03,290 --> 00:03:08,720
considerations it was on the it was in

00:03:06,260 --> 00:03:09,800
the the talk notes so you know maybe you

00:03:08,720 --> 00:03:12,080
know these already but I'm gonna go

00:03:09,800 --> 00:03:14,390
through architecture command line tool

00:03:12,080 --> 00:03:16,850
support composability of environments

00:03:14,390 --> 00:03:17,890
configurability ativ tests support for

00:03:16,850 --> 00:03:21,680
other runtimes

00:03:17,890 --> 00:03:24,080
tool sets tool set versus application

00:03:21,680 --> 00:03:25,580
open source unis popularity and options

00:03:24,080 --> 00:03:27,260
for commercial support these are the

00:03:25,580 --> 00:03:29,390
things that I think are most important

00:03:27,260 --> 00:03:30,290
for choosing local development

00:03:29,390 --> 00:03:32,420
environments so let's talk about

00:03:30,290 --> 00:03:35,480
architectures to begin with and actually

00:03:32,420 --> 00:03:37,030
the whole talk is going to set around

00:03:35,480 --> 00:03:39,519
the idea that there are these different

00:03:37,030 --> 00:03:41,510
architectures you can take different

00:03:39,519 --> 00:03:42,440
categories of local development

00:03:41,510 --> 00:03:44,540
experience we're actually going to go

00:03:42,440 --> 00:03:46,459
through all of the other questions with

00:03:44,540 --> 00:03:48,830
the architecture in mind so this is kind

00:03:46,459 --> 00:03:50,720
of a keystone of my presentation is

00:03:48,830 --> 00:03:55,489
explaining what I mean when I talk about

00:03:50,720 --> 00:03:58,400
architectures so it's really five as I

00:03:55,489 --> 00:03:59,930
see it there's docker just like straight

00:03:58,400 --> 00:04:02,330
docker I've installed docker and then I

00:03:59,930 --> 00:04:03,709
use you know docker compose files I use

00:04:02,330 --> 00:04:05,930
a whole range of other configuration

00:04:03,709 --> 00:04:08,780
mechanisms for docker and there's docker

00:04:05,930 --> 00:04:10,549
plus so someone really awesome has built

00:04:08,780 --> 00:04:13,010
her me something on top of docker that

00:04:10,549 --> 00:04:14,510
makes docker a lot easier and we have

00:04:13,010 --> 00:04:16,940
plenty of these in the community Lando D

00:04:14,510 --> 00:04:18,770
day of talks all at Riga then there's a

00:04:16,940 --> 00:04:20,329
native stack and that means there is

00:04:18,770 --> 00:04:22,639
some kind of

00:04:20,329 --> 00:04:24,199
install you know installable program

00:04:22,639 --> 00:04:26,810
that will run all of these things for me

00:04:24,199 --> 00:04:28,280
on my on my machine they're probably

00:04:26,810 --> 00:04:30,740
running natively so they're running you

00:04:28,280 --> 00:04:32,599
know PHP is in is if you're on Windows

00:04:30,740 --> 00:04:34,789
as an XC or you know it's basically an

00:04:32,599 --> 00:04:36,680
executable so as MySQL the whole land

00:04:34,789 --> 00:04:38,270
stack is there running native on which

00:04:36,680 --> 00:04:40,009
mean machine and someone else has

00:04:38,270 --> 00:04:42,349
managed that install process so it could

00:04:40,009 --> 00:04:48,259
be meant for a creative desktop and

00:04:42,349 --> 00:04:50,509
there's native DIY DIY and this is when

00:04:48,259 --> 00:04:52,550
someone goes and actually uses if you're

00:04:50,509 --> 00:04:55,009
on Mac uses something like brew if

00:04:52,550 --> 00:04:58,699
you're on a bun to you yet to install

00:04:55,009 --> 00:05:00,680
all of these individually then VMs you

00:04:58,699 --> 00:05:03,770
know virtual machines there's a few

00:05:00,680 --> 00:05:05,210
examples triple vm virtualbox box etc so

00:05:03,770 --> 00:05:07,610
we're gonna kind of view all of these

00:05:05,210 --> 00:05:10,430
considerations through the lens of these

00:05:07,610 --> 00:05:12,650
architectures so just to kind of get a

00:05:10,430 --> 00:05:14,300
little clarification on one of the one

00:05:12,650 --> 00:05:16,819
you know I'm sure most of people in the

00:05:14,300 --> 00:05:20,360
room know this but kind of the the the

00:05:16,819 --> 00:05:23,090
big difference between docker and VM is

00:05:20,360 --> 00:05:24,830
about where the weather separation lies

00:05:23,090 --> 00:05:26,840
or where the encapsulation lies and I'll

00:05:24,830 --> 00:05:28,759
hop on a cat encapsulation I think a

00:05:26,840 --> 00:05:30,650
capsulation is great but I think Dockers

00:05:28,759 --> 00:05:34,759
actually has actually done a better job

00:05:30,650 --> 00:05:38,180
of this and what what docker is a much

00:05:34,759 --> 00:05:41,599
lighter way I thank you a minute ago but

00:05:38,180 --> 00:05:44,569
anyway so doc is a much lighter way to

00:05:41,599 --> 00:05:48,949
encapsulate these environments and and

00:05:44,569 --> 00:05:50,060
actually what what happens with VMs if

00:05:48,949 --> 00:05:52,190
you have many of them running is they

00:05:50,060 --> 00:05:57,560
can be very heavy on your machine in

00:05:52,190 --> 00:06:01,069
terms of memory so RAM and also storage

00:05:57,560 --> 00:06:02,719
space versus docker which you know it's

00:06:01,069 --> 00:06:04,310
like it's got one VM running and then a

00:06:02,719 --> 00:06:06,740
lot of these environments on top that

00:06:04,310 --> 00:06:09,199
can be imagined as' and that means you

00:06:06,740 --> 00:06:10,880
can have a lot a lot of a lot of things

00:06:09,199 --> 00:06:13,729
running at once this has really made

00:06:10,880 --> 00:06:15,050
docker ubiquitous install though for for

00:06:13,729 --> 00:06:18,740
open source in the way I think about is

00:06:15,050 --> 00:06:20,419
you know if you're installing things in

00:06:18,740 --> 00:06:21,979
the early 2000s or 90s you would have

00:06:20,419 --> 00:06:24,409
probably you're on Windows and probably

00:06:21,979 --> 00:06:26,180
used a Windows installer every piece of

00:06:24,409 --> 00:06:27,860
software had a Windows installer now

00:06:26,180 --> 00:06:28,670
every piece of open-source software has

00:06:27,860 --> 00:06:31,130
a docker

00:06:28,670 --> 00:06:33,380
you know a dacha file and this is

00:06:31,130 --> 00:06:35,540
actually it's kind of is a measure of

00:06:33,380 --> 00:06:40,730
the success of docker and the success of

00:06:35,540 --> 00:06:42,830
its architecture so actually the tech

00:06:40,730 --> 00:06:45,470
lead for lightning the Drupal Tino doc

00:06:42,830 --> 00:06:47,300
we Adam balsam talked to me about some

00:06:45,470 --> 00:06:49,340
of the reasons he doesn't like docker

00:06:47,300 --> 00:06:50,420
and he actually uses a native stack so I

00:06:49,340 --> 00:06:53,180
thought this is worth kind of giving the

00:06:50,420 --> 00:06:55,670
comparison but getting into the machine

00:06:53,180 --> 00:06:59,120
to do a task running command line

00:06:55,670 --> 00:07:01,760
commands running builds so you know

00:06:59,120 --> 00:07:04,280
using a using composer so to do a build

00:07:01,760 --> 00:07:05,960
running tests whether you use using be

00:07:04,280 --> 00:07:07,430
hat or something like this the file

00:07:05,960 --> 00:07:09,200
system performance and the file system

00:07:07,430 --> 00:07:13,670
permissions and I think actually docker

00:07:09,200 --> 00:07:15,500
plus fixes a lot of these but you know I

00:07:13,670 --> 00:07:17,090
went out and talked to plenty of people

00:07:15,500 --> 00:07:19,730
about this and it and this is kind of

00:07:17,090 --> 00:07:21,800
typical docker issues I've heard in the

00:07:19,730 --> 00:07:23,870
past that I think if you're still

00:07:21,800 --> 00:07:25,790
talking about these things you should

00:07:23,870 --> 00:07:29,270
have a look at some of the the kind of

00:07:25,790 --> 00:07:34,040
docker plus tools out there so other

00:07:29,270 --> 00:07:37,400
docker issues with Windows you want to

00:07:34,040 --> 00:07:39,530
be on the latest version of the dock and

00:07:37,400 --> 00:07:43,630
native for Windows but that really only

00:07:39,530 --> 00:07:46,070
runs on Windows 10 Pro sadface because

00:07:43,630 --> 00:07:47,560
because it has hyper-v in hyper-v is

00:07:46,070 --> 00:07:50,750
technology that means you can speed up

00:07:47,560 --> 00:07:52,580
virtualization it's really awesome and

00:07:50,750 --> 00:07:54,050
that's how now you can kind of run a bun

00:07:52,580 --> 00:07:56,270
to in a whole range of other oh s is on

00:07:54,050 --> 00:07:57,260
top of Windows what used to be there was

00:07:56,270 --> 00:07:59,090
dr. toolbox

00:07:57,260 --> 00:08:01,880
which is legacy and terrible and slow

00:07:59,090 --> 00:08:03,620
and blog but you can only run this if

00:08:01,880 --> 00:08:05,870
you have Windows 10 clothes Pro the good

00:08:03,620 --> 00:08:08,690
news is that Windows 10

00:08:05,870 --> 00:08:10,310
it's just surpassed Windows 7 in market

00:08:08,690 --> 00:08:12,530
shares so most of you hopefully will be

00:08:10,310 --> 00:08:14,120
using Windows 10 and you know if you're

00:08:12,530 --> 00:08:15,830
a professional developer hopefully

00:08:14,120 --> 00:08:17,630
Windows 10 Pro and the better news is

00:08:15,830 --> 00:08:21,500
that not many people use Windows anymore

00:08:17,630 --> 00:08:24,550
yay so this came from the local dev

00:08:21,500 --> 00:08:26,780
survey and this is this is you know

00:08:24,550 --> 00:08:28,700
heavily biased towards drupe list

00:08:26,780 --> 00:08:33,590
obviously because those guys you know

00:08:28,700 --> 00:08:35,300
they they know Drupal ists but within

00:08:33,590 --> 00:08:39,349
Drupal this is probably what we use is

00:08:35,300 --> 00:08:39,979
pretty good representation so yeah so

00:08:39,349 --> 00:08:42,409
dr+

00:08:39,979 --> 00:08:43,639
just a summary is out I see it

00:08:42,409 --> 00:08:45,079
the things that Daka does which is

00:08:43,639 --> 00:08:47,480
standardized environments and tooling

00:08:45,079 --> 00:08:49,639
across multiple OSS encapsulate s--

00:08:47,480 --> 00:08:51,259
multiple configurations in your machine

00:08:49,639 --> 00:08:53,509
but it also does these other things on

00:08:51,259 --> 00:08:55,040
top of Dhaka which is it still higher

00:08:53,509 --> 00:08:57,019
level configuration in a version

00:08:55,040 --> 00:08:59,329
controlled file this is brilliant I'll

00:08:57,019 --> 00:09:01,490
talk about this a little bit later it's

00:08:59,329 --> 00:09:02,959
easily customized and extendable and it

00:09:01,490 --> 00:09:04,399
works almost out of the box

00:09:02,959 --> 00:09:07,579
actually when juries today was showing

00:09:04,399 --> 00:09:09,259
in his keynote you know the tons of

00:09:07,579 --> 00:09:11,060
steps the lando team very cleverly

00:09:09,259 --> 00:09:12,410
tweeted out hey guess what it's one

00:09:11,060 --> 00:09:14,449
click if you do it online dark and

00:09:12,410 --> 00:09:16,579
that's true actually it's pretty easy to

00:09:14,449 --> 00:09:19,370
install and oh you know as an install or

00:09:16,579 --> 00:09:20,689
a type one command have a Drupal so if

00:09:19,370 --> 00:09:23,480
you haven't checked that out check it

00:09:20,689 --> 00:09:25,129
out so I'm gonna talk about come online

00:09:23,480 --> 00:09:26,930
tools and now more than ever there are a

00:09:25,129 --> 00:09:28,420
ton of come online tools that you want

00:09:26,930 --> 00:09:31,040
to use with Drupal that have just become

00:09:28,420 --> 00:09:33,819
necessity here are some of the logos and

00:09:31,040 --> 00:09:36,290
here's some of the details so drush nine

00:09:33,819 --> 00:09:37,850
drupal console there's a lot of

00:09:36,290 --> 00:09:40,519
crossover there but still kind of

00:09:37,850 --> 00:09:42,110
Russia's Morris aside mini type CLI and

00:09:40,519 --> 00:09:45,139
Drupal console is more focused on

00:09:42,110 --> 00:09:46,880
developers and then there's composer

00:09:45,139 --> 00:09:50,000
which now you pretty much have to use

00:09:46,880 --> 00:09:52,699
with Drupal 8 to do to run build to

00:09:50,000 --> 00:09:54,980
bring in external libraries PHP unit for

00:09:52,699 --> 00:09:56,389
for unit testing and then be half

00:09:54,980 --> 00:09:57,769
behavioral testing goes down the line

00:09:56,389 --> 00:10:00,319
actually if it if no one has heard of

00:09:57,769 --> 00:10:02,180
thing in Robo that's ok but if you are

00:10:00,319 --> 00:10:03,470
building a distribution or you're

00:10:02,180 --> 00:10:05,540
building a Drupal product these are

00:10:03,470 --> 00:10:06,459
really useful tools for automation you

00:10:05,540 --> 00:10:09,019
know obviously

00:10:06,459 --> 00:10:11,509
dravot javascript is becoming more and

00:10:09,019 --> 00:10:13,459
more part of Drupal and as we do things

00:10:11,509 --> 00:10:15,709
like bring your react components into

00:10:13,459 --> 00:10:17,569
the admin theme you know prob'ly NPM is

00:10:15,709 --> 00:10:20,180
gonna become a lot more important called

00:10:17,569 --> 00:10:21,589
grunt for the front-end people here and

00:10:20,180 --> 00:10:25,009
not one of you I've heard these are

00:10:21,589 --> 00:10:26,420
important and BLT the LTI put here as a

00:10:25,009 --> 00:10:29,029
placeholder because I know about it but

00:10:26,420 --> 00:10:31,819
pretty much every every kind of cloud

00:10:29,029 --> 00:10:34,819
provider has her own CLI tool BLTs the

00:10:31,819 --> 00:10:36,290
good one for Acquia and it actually it

00:10:34,819 --> 00:10:38,209
does build launching tests which means

00:10:36,290 --> 00:10:40,790
it will run your Drupal build it'll you

00:10:38,209 --> 00:10:42,829
know do a whole bunch of stuff I'm gonna

00:10:40,790 --> 00:10:48,199
not do this justice but find that guy

00:10:42,829 --> 00:10:51,290
later anyway so here's our score school

00:10:48,199 --> 00:10:53,209
kind so ease of CLI tool execution

00:10:51,290 --> 00:10:54,800
docker is pretty good I can run a

00:10:53,209 --> 00:10:57,470
command in a docking container

00:10:54,800 --> 00:10:59,210
with one line there are simply bowls but

00:10:57,470 --> 00:11:00,980
it works pretty well dr. plus is awesome

00:10:59,210 --> 00:11:03,860
and the reason is that you can actually

00:11:00,980 --> 00:11:07,130
encapsulate some configuration against

00:11:03,860 --> 00:11:10,280
those CLI tools within that abstracted

00:11:07,130 --> 00:11:12,560
configuration file so you know if I go

00:11:10,280 --> 00:11:13,970
into Lando I can actually you know put

00:11:12,560 --> 00:11:16,040
in configurations for drush and things

00:11:13,970 --> 00:11:18,350
like this native stack is horrible

00:11:16,040 --> 00:11:20,810
because if I'm using map then I've got

00:11:18,350 --> 00:11:22,340
then it kind of breaks my whole process

00:11:20,810 --> 00:11:24,230
because I've had this easy install for

00:11:22,340 --> 00:11:25,430
my double-click II and stoli thing and

00:11:24,230 --> 00:11:26,630
then I have to go and install a

00:11:25,430 --> 00:11:27,890
command-line tool which gets really

00:11:26,630 --> 00:11:30,770
complicated and there's versions of that

00:11:27,890 --> 00:11:32,210
I'm gonna maintain it it's horrible DOI

00:11:30,770 --> 00:11:34,250
natives okay if you're doing a brew

00:11:32,210 --> 00:11:36,230
install on Mac OS then you know Bruins

00:11:34,250 --> 00:11:38,240
told rush is also pretty easy and it'll

00:11:36,230 --> 00:11:39,890
run but you've still got to maintain it

00:11:38,240 --> 00:11:41,390
yourself and there's no encapsulation it

00:11:39,890 --> 00:11:45,340
just runs kind of on your machine so

00:11:41,390 --> 00:11:48,520
it's okay and VMs similar deal

00:11:45,340 --> 00:11:51,020
environment configuration and testing

00:11:48,520 --> 00:11:54,590
more and more important really important

00:11:51,020 --> 00:11:56,990
in a team so how long and this is where

00:11:54,590 --> 00:11:58,940
we get to the questions so as I said the

00:11:56,990 --> 00:12:00,860
value before the value here they're big

00:11:58,940 --> 00:12:02,540
values if you're a tech lead and you

00:12:00,860 --> 00:12:04,460
want to know the questions to ask

00:12:02,540 --> 00:12:06,830
because these could lead to different

00:12:04,460 --> 00:12:08,690
answers you know and not I like I like

00:12:06,830 --> 00:12:10,490
Daka plus you know so I like and I

00:12:08,690 --> 00:12:13,370
particularly been using Lando a lot it's

00:12:10,490 --> 00:12:16,280
been pretty awesome but there are other

00:12:13,370 --> 00:12:17,270
other better options if you're you know

00:12:16,280 --> 00:12:18,950
depending on your team and these are the

00:12:17,270 --> 00:12:20,870
questions to ask so how long does it

00:12:18,950 --> 00:12:23,420
take for a developer to be onboarding is

00:12:20,870 --> 00:12:24,650
a big one you know if developers sits

00:12:23,420 --> 00:12:26,330
down tomorrow and they're a drupe list

00:12:24,650 --> 00:12:27,380
how long does it take to get my

00:12:26,330 --> 00:12:29,690
environments they're going to be working

00:12:27,380 --> 00:12:31,660
on you maybe there's multiple projects

00:12:29,690 --> 00:12:34,160
if I'm an agency you know if I'm a

00:12:31,660 --> 00:12:35,810
Drupal corporate user maybe there's you

00:12:34,160 --> 00:12:37,460
know a secure environment or compliance

00:12:35,810 --> 00:12:40,010
around it you know I've got to get them

00:12:37,460 --> 00:12:42,140
productive does it is it going to work

00:12:40,010 --> 00:12:43,610
easily with the IDE you know do I have

00:12:42,140 --> 00:12:47,420
access to those files that are within

00:12:43,610 --> 00:12:48,920
that virtual machine can I access the

00:12:47,420 --> 00:12:51,620
codebase is it all going to work

00:12:48,920 --> 00:12:53,840
together can I match versions of

00:12:51,620 --> 00:12:55,370
surfaces with what I have in the cloud

00:12:53,840 --> 00:12:57,620
can I easily configure something like

00:12:55,370 --> 00:12:59,630
solar you know with a with a solar

00:12:57,620 --> 00:13:01,190
configuration file so that matches what

00:12:59,630 --> 00:13:04,670
I've got in my production environment

00:13:01,190 --> 00:13:06,650
that can be really hot and can I write

00:13:04,670 --> 00:13:08,390
configurations in code and commit

00:13:06,650 --> 00:13:10,640
so that that configuration file for

00:13:08,390 --> 00:13:11,990
Drupal you know with the kind of

00:13:10,640 --> 00:13:14,900
environment setup and everything is just

00:13:11,990 --> 00:13:17,000
accessible with a git pull these are

00:13:14,900 --> 00:13:18,140
really important questions so this is

00:13:17,000 --> 00:13:20,620
this is how we want to illustrate the

00:13:18,140 --> 00:13:23,570
difference between I can add an

00:13:20,620 --> 00:13:28,130
abstracted configuration file on the

00:13:23,570 --> 00:13:29,780
Left Lando and very in the weeds have to

00:13:28,130 --> 00:13:31,780
be a Sitwell probably want to be a

00:13:29,780 --> 00:13:34,310
systems administrator to configure it

00:13:31,780 --> 00:13:36,140
configuration file for vagrant on the

00:13:34,310 --> 00:13:37,580
right so vagrant is an excellent system

00:13:36,140 --> 00:13:40,010
there are lots of good reasons to use it

00:13:37,580 --> 00:13:42,650
but Lando does a great job of

00:13:40,010 --> 00:13:45,110
abstracting all of the the mess of

00:13:42,650 --> 00:13:47,180
configuring and it's it's a you know

00:13:45,110 --> 00:13:49,610
it's running a docker and not in and not

00:13:47,180 --> 00:13:51,740
as a VM as you know not on VirtualBox as

00:13:49,610 --> 00:13:53,240
vagrant is but it's just a really good

00:13:51,740 --> 00:13:55,970
comparison to understand that the

00:13:53,240 --> 00:13:57,800
configuration files for for for Lando

00:13:55,970 --> 00:13:59,390
and D dev and other kind of dhaka plus

00:13:57,800 --> 00:14:01,190
solutions tend to abstract a lot of the

00:13:59,390 --> 00:14:03,020
mess so you can configure solar easily

00:14:01,190 --> 00:14:06,140
you can figure you know whole range of

00:14:03,020 --> 00:14:09,440
you know PHP etc really easily within

00:14:06,140 --> 00:14:11,870
within the configuration file and this

00:14:09,440 --> 00:14:15,170
is what I called composability so I can

00:14:11,870 --> 00:14:17,600
compose my environment easily share it

00:14:15,170 --> 00:14:20,030
with my team have everyone on board

00:14:17,600 --> 00:14:21,560
alter that in a you know in a source

00:14:20,030 --> 00:14:27,590
controlled manner so I can have versions

00:14:21,560 --> 00:14:31,550
of my environments yeah so does your

00:14:27,590 --> 00:14:33,230
team care about testing everyone you

00:14:31,550 --> 00:14:34,880
know should be doing everyone should be

00:14:33,230 --> 00:14:36,020
doing automated testing and in a perfect

00:14:34,880 --> 00:14:37,520
world we'd all also have a ton of

00:14:36,020 --> 00:14:40,310
behavioral tests not everyone does this

00:14:37,520 --> 00:14:42,320
but when you do run tests they tend to

00:14:40,310 --> 00:14:43,910
be you know really critical that you can

00:14:42,320 --> 00:14:45,740
run them easily and if they're not easy

00:14:43,910 --> 00:14:47,000
to run then people don't run them which

00:14:45,740 --> 00:14:49,970
is really defeats the purpose

00:14:47,000 --> 00:14:52,040
so can I run my B hat test can I run my

00:14:49,970 --> 00:14:54,110
PHP you know tests within an environment

00:14:52,040 --> 00:14:56,090
is actually really critical to your team

00:14:54,110 --> 00:14:59,060
you want them running your tests and

00:14:56,090 --> 00:15:00,890
building tests easily so it's important

00:14:59,060 --> 00:15:03,950
to ask these questions is it important

00:15:00,890 --> 00:15:06,140
for an everyday dev to run tests have

00:15:03,950 --> 00:15:08,900
Aled and my local tests today but

00:15:06,140 --> 00:15:11,330
actually going to test the validity in

00:15:08,900 --> 00:15:13,910
my production environment can i test the

00:15:11,330 --> 00:15:14,499
other services that are being used in my

00:15:13,910 --> 00:15:18,129
production of

00:15:14,499 --> 00:15:23,069
like solar etc and I can't integrate

00:15:18,129 --> 00:15:25,299
that with my build pipeline so scorecard

00:15:23,069 --> 00:15:28,809
configuration and testing dock is pretty

00:15:25,299 --> 00:15:29,679
good Danka plus is amazing the native

00:15:28,809 --> 00:15:34,119
stack like MAMP

00:15:29,679 --> 00:15:36,579
is pretty horrible for trying to share

00:15:34,119 --> 00:15:38,649
configurations probably the tech lead

00:15:36,579 --> 00:15:41,129
has to walk around to your desk

00:15:38,649 --> 00:15:42,939
similarly with do yourself native

00:15:41,129 --> 00:15:45,399
technically probably has to walk around

00:15:42,939 --> 00:15:47,139
to your desk which is a challenge you

00:15:45,399 --> 00:15:48,279
know you could have the the team members

00:15:47,139 --> 00:15:50,139
just kind of setting this up on their

00:15:48,279 --> 00:15:51,549
own and having it go and using their

00:15:50,139 --> 00:15:53,679
versions of PHP and doing all of this

00:15:51,549 --> 00:15:55,749
but you can end up in some pretty bad

00:15:53,679 --> 00:15:57,669
places down the track when they've run

00:15:55,749 --> 00:15:59,199
tests and they're not valid or valid but

00:15:57,669 --> 00:16:01,059
you know valid in production or the rest

00:15:59,199 --> 00:16:02,859
of the team has trouble collaborating

00:16:01,059 --> 00:16:04,539
VMS are pretty good at this as well

00:16:02,859 --> 00:16:07,689
because you can have a configuration

00:16:04,539 --> 00:16:10,329
file for them so run times on them in

00:16:07,689 --> 00:16:15,459
PHP in Drupal now there's a lot of talks

00:16:10,329 --> 00:16:18,669
going on here about should Drupal be a

00:16:15,459 --> 00:16:22,629
back-end you know what if I want to run

00:16:18,669 --> 00:16:25,449
an angular or react front-end and maybe

00:16:22,629 --> 00:16:27,339
you have a non-standard back-end that

00:16:25,449 --> 00:16:28,569
Drupal relies on you can think of solar

00:16:27,339 --> 00:16:31,659
as a back-end but there's a whole range

00:16:28,569 --> 00:16:34,479
of custom services that companies build

00:16:31,659 --> 00:16:36,519
that are integrated with Drupal you know

00:16:34,479 --> 00:16:38,289
that you might need to test for in your

00:16:36,519 --> 00:16:40,659
environment so these become really

00:16:38,289 --> 00:16:42,549
important questions do I need to boot up

00:16:40,659 --> 00:16:44,739
some kind of parallel environment that

00:16:42,549 --> 00:16:45,849
is going to run node so that I can

00:16:44,739 --> 00:16:49,629
actually show my whole application

00:16:45,849 --> 00:16:51,419
running in one place and so that's

00:16:49,629 --> 00:16:55,479
that's pretty important considerations

00:16:51,419 --> 00:16:57,279
and you know and beyond that in that

00:16:55,479 --> 00:16:59,649
environment so if I'm thinking about

00:16:57,279 --> 00:17:02,139
node what protections do I have against

00:16:59,649 --> 00:17:03,879
dependency conflicts how will I update

00:17:02,139 --> 00:17:06,429
it can I run NPM in that environment as

00:17:03,879 --> 00:17:08,439
well can I snapshot the state of that

00:17:06,429 --> 00:17:10,240
non Drupal environment can I bring these

00:17:08,439 --> 00:17:13,269
services up quickly as in kind of can I

00:17:10,240 --> 00:17:16,990
turn them on quickly how easy to get

00:17:13,269 --> 00:17:20,439
install how do I configure versions the

00:17:16,990 --> 00:17:22,990
the scorecard is let me see there we go

00:17:20,439 --> 00:17:24,459
scorecard is pretty self-explanatory if

00:17:22,990 --> 00:17:26,549
you doing it doing this on a native

00:17:24,459 --> 00:17:28,360
stack it's not impossible

00:17:26,549 --> 00:17:30,130
you never

00:17:28,360 --> 00:17:32,200
to have like a double-click install for

00:17:30,130 --> 00:17:33,790
map and there's gonna be no kind of good

00:17:32,200 --> 00:17:36,299
corresponding double thing and stole for

00:17:33,790 --> 00:17:40,660
NPM you can do it with brew

00:17:36,299 --> 00:17:42,880
do-it-yourself and you know but it gets

00:17:40,660 --> 00:17:45,910
messy and the problem with VMs here is

00:17:42,880 --> 00:17:47,530
that people end up using multiple VMs

00:17:45,910 --> 00:17:49,840
for this then you have a really heavy

00:17:47,530 --> 00:17:51,250
system so especially if you start doing

00:17:49,840 --> 00:17:54,040
multiple projects and then I've got

00:17:51,250 --> 00:17:56,350
multiple Drupal's and nodes running and

00:17:54,040 --> 00:17:58,870
they're all vm's it gets really heavy on

00:17:56,350 --> 00:18:01,690
my machine even with a really kind of

00:17:58,870 --> 00:18:03,580
fast machine but darker and darker Plus

00:18:01,690 --> 00:18:05,650
sort this out pretty well you know you

00:18:03,580 --> 00:18:07,600
can run just with docker native if you

00:18:05,650 --> 00:18:09,760
can run lots of you know docker

00:18:07,600 --> 00:18:13,480
containers pretty easily and darker

00:18:09,760 --> 00:18:15,940
clusters as well pretty too well as well

00:18:13,480 --> 00:18:17,530
as well ok out of the box in case you

00:18:15,940 --> 00:18:22,030
didn't know this acronym I think pretty

00:18:17,530 --> 00:18:24,220
much everyone does number five so this

00:18:22,030 --> 00:18:26,500
is really important think about for your

00:18:24,220 --> 00:18:28,210
site builders or maybe your front

00:18:26,500 --> 00:18:31,540
front-end devs from are kind of in the

00:18:28,210 --> 00:18:33,460
in the development code maybe team

00:18:31,540 --> 00:18:36,429
members that are onboarding or a new or

00:18:33,460 --> 00:18:38,740
junior is there a UI you know can I kind

00:18:36,429 --> 00:18:39,880
of see my environments this gets really

00:18:38,740 --> 00:18:41,440
important too if you have lots of

00:18:39,880 --> 00:18:43,720
projects running it's good to be able to

00:18:41,440 --> 00:18:44,559
see all of your environments where

00:18:43,720 --> 00:18:46,540
that's with you're building multiple

00:18:44,559 --> 00:18:48,220
projects so you're demoing or you know

00:18:46,540 --> 00:18:50,080
there's a range of use cases where you

00:18:48,220 --> 00:18:52,360
guys become pretty good

00:18:50,080 --> 00:18:53,440
is there an installer so I can just

00:18:52,360 --> 00:18:57,640
download something and double click on

00:18:53,440 --> 00:18:59,559
it cloud synchronization is big so for

00:18:57,640 --> 00:19:01,390
instance lando is published I think now

00:18:59,559 --> 00:19:04,570
documentation for all three big clouds

00:19:01,390 --> 00:19:06,429
whether you're on a queer or Pantheon or

00:19:04,570 --> 00:19:09,700
platform Sh it's pretty easy way to

00:19:06,429 --> 00:19:11,260
synchronize Landor with your cloud

00:19:09,700 --> 00:19:15,280
environments which is pretty amazing

00:19:11,260 --> 00:19:17,770
thank you to that team and then CLI

00:19:15,280 --> 00:19:19,570
tools they come with the CLI tools is in

00:19:17,770 --> 00:19:22,059
do they packaged up drush or they

00:19:19,570 --> 00:19:25,419
packaged up drupal console or composer

00:19:22,059 --> 00:19:29,049
or one of these so it depends because

00:19:25,419 --> 00:19:32,080
early on it feels like a native stack

00:19:29,049 --> 00:19:33,640
like mam it's you actually it was in the

00:19:32,080 --> 00:19:36,640
DRI's no it even or you know there was

00:19:33,640 --> 00:19:38,710
an someone installing with map the trees

00:19:36,640 --> 00:19:40,400
was showing only on it feels pretty good

00:19:38,710 --> 00:19:42,170
like early on

00:19:40,400 --> 00:19:44,090
I can install it gets up and running

00:19:42,170 --> 00:19:47,960
pretty quickly I can see my environments

00:19:44,090 --> 00:19:50,840
that's pretty great but if you start to

00:19:47,960 --> 00:19:53,600
need multiple environments this and you

00:19:50,840 --> 00:19:56,840
need to update versions of PHP or other

00:19:53,600 --> 00:19:59,780
other systems it gets hot and actually

00:19:56,840 --> 00:20:02,210
the kind of process to keep up-to-date

00:19:59,780 --> 00:20:04,040
with all those CLI tools and you know

00:20:02,210 --> 00:20:07,970
all of the other things you need becomes

00:20:04,040 --> 00:20:09,740
a lot easier with docker plus because

00:20:07,970 --> 00:20:10,970
that kind of that system will maintain

00:20:09,740 --> 00:20:12,350
all of your containers the dual of

00:20:10,970 --> 00:20:14,900
things that you need and it becomes just

00:20:12,350 --> 00:20:19,100
kind of one command for a lot of the

00:20:14,900 --> 00:20:20,660
updates open-source enos so this is an

00:20:19,100 --> 00:20:23,060
interesting one I think the reason you

00:20:20,660 --> 00:20:25,520
want your local dev environment to be

00:20:23,060 --> 00:20:28,010
particularly open-source II is because

00:20:25,520 --> 00:20:29,300
then you can potentially extend it you

00:20:28,010 --> 00:20:30,980
can potentially contribute to it if

00:20:29,300 --> 00:20:34,430
there's bugs that you particularly need

00:20:30,980 --> 00:20:35,930
solved you know it may not be tied to a

00:20:34,430 --> 00:20:37,130
cloud vendor then so if you're an agency

00:20:35,930 --> 00:20:39,110
and you need to go out and have

00:20:37,130 --> 00:20:40,460
environments and all three clouds it's

00:20:39,110 --> 00:20:43,130
gonna be easy to work with all of them

00:20:40,460 --> 00:20:46,190
and will it persist this is a big one if

00:20:43,130 --> 00:20:48,440
there's proprietary you know local dev

00:20:46,190 --> 00:20:50,450
software they may not put versions out

00:20:48,440 --> 00:20:52,640
very frequently they may miss versions

00:20:50,450 --> 00:20:54,020
of PHP they may there's a whole range of

00:20:52,640 --> 00:20:55,760
issues you know you can encounter and

00:20:54,020 --> 00:20:57,740
they may just disappear so I think

00:20:55,760 --> 00:21:03,260
actually open-source eNOS is actually

00:20:57,740 --> 00:21:06,290
really important so the scorecard here

00:21:03,260 --> 00:21:08,480
native stacks bad everything else is

00:21:06,290 --> 00:21:10,520
fine pretty much all the tools

00:21:08,480 --> 00:21:11,180
everywhere else they're gonna be pretty

00:21:10,520 --> 00:21:13,100
good

00:21:11,180 --> 00:21:14,690
they're gonna be pretty open-source but

00:21:13,100 --> 00:21:18,920
that's one of the big reasons to stay

00:21:14,690 --> 00:21:22,220
away from native stacks popularity so I

00:21:18,920 --> 00:21:24,590
I read a lot of tweets and a lot of

00:21:22,220 --> 00:21:25,970
blogs before I made the first version of

00:21:24,590 --> 00:21:27,980
this presentation was actually for

00:21:25,970 --> 00:21:29,480
Drupal Camp New Jersey I gave this

00:21:27,980 --> 00:21:31,940
presentation for the first time and

00:21:29,480 --> 00:21:34,550
there's a lot of people saying things

00:21:31,940 --> 00:21:37,850
that were not valid anymore

00:21:34,550 --> 00:21:41,000
there were judging architectures on

00:21:37,850 --> 00:21:42,560
experiences that had years ago and it

00:21:41,000 --> 00:21:43,910
was kind of ridiculous so there's kind

00:21:42,560 --> 00:21:45,320
of one of the reasons I put the talk

00:21:43,910 --> 00:21:47,360
together is because I wanted a an

00:21:45,320 --> 00:21:50,360
evaluation of the mole on a level you

00:21:47,360 --> 00:21:52,250
know and I tried everything out so it's

00:21:50,360 --> 00:21:53,710
not always productive to go to Twitter

00:21:52,250 --> 00:21:56,730
or blogs to kind of understand

00:21:53,710 --> 00:21:59,530
and what is the best environment to use

00:21:56,730 --> 00:22:01,930
but there is an exception ultimate

00:21:59,530 --> 00:22:04,360
recently put together a great little

00:22:01,930 --> 00:22:06,700
blog post and I created a bitly link so

00:22:04,360 --> 00:22:07,870
that you could copy it down today he's

00:22:06,700 --> 00:22:10,150
gone for a much more technical

00:22:07,870 --> 00:22:12,550
evaluation of some local development

00:22:10,150 --> 00:22:14,140
environments and so that's pretty good

00:22:12,550 --> 00:22:15,730
other than that it's always useful to

00:22:14,140 --> 00:22:17,650
look on github not just startups but

00:22:15,730 --> 00:22:22,300
also activity and you should queue

00:22:17,650 --> 00:22:25,170
responsiveness of contributors to see to

00:22:22,300 --> 00:22:28,060
see how quickly they respond to issues

00:22:25,170 --> 00:22:34,000
how many people in the room have been

00:22:28,060 --> 00:22:38,560
using Drupal for under a year one two

00:22:34,000 --> 00:22:42,900
three okay right that somewhat

00:22:38,560 --> 00:22:46,600
corresponds to the survey and you know

00:22:42,900 --> 00:22:48,970
there's lots of community knowledge that

00:22:46,600 --> 00:22:50,740
takes a while and Drupal at the moment

00:22:48,970 --> 00:22:53,020
to kind of twig on to it's like how to

00:22:50,740 --> 00:22:55,840
use Drupal dot all properly and I would

00:22:53,020 --> 00:22:56,380
work out where the modules they're

00:22:55,840 --> 00:22:57,940
immature

00:22:56,380 --> 00:23:01,710
similarly with local development

00:22:57,940 --> 00:23:04,380
environments you know I would say that

00:23:01,710 --> 00:23:06,640
it's good to evaluate all these factors

00:23:04,380 --> 00:23:09,910
and you know I hope this presentation

00:23:06,640 --> 00:23:11,890
gives you a leg up but it's really what

00:23:09,910 --> 00:23:13,090
talking to your P is and talking to

00:23:11,890 --> 00:23:15,730
everyone here because everyone has a

00:23:13,090 --> 00:23:18,100
different experience with with local

00:23:15,730 --> 00:23:19,780
development environments and that's a

00:23:18,100 --> 00:23:21,370
good way I mean popularity is important

00:23:19,780 --> 00:23:23,500
because it means that once again the

00:23:21,370 --> 00:23:25,660
solution will persist and you know

00:23:23,500 --> 00:23:27,250
probably gets updates quickly so these

00:23:25,660 --> 00:23:28,870
are good some good ways to judge that

00:23:27,250 --> 00:23:32,440
but also talk to your peers here

00:23:28,870 --> 00:23:35,020
especially if you're new in Drupal so

00:23:32,440 --> 00:23:36,400
this is what the survey says at the

00:23:35,020 --> 00:23:38,950
moment we have a ton of people using

00:23:36,400 --> 00:23:43,420
Drupal VM and that's great excellent

00:23:38,950 --> 00:23:46,210
solution and it it you know is a really

00:23:43,420 --> 00:23:49,510
great out-of-the-box Drupal environment

00:23:46,210 --> 00:23:52,230
I can turn this on and it will run my

00:23:49,510 --> 00:23:55,000
Drupal which is brilliant I think that

00:23:52,230 --> 00:23:56,470
of all the solutions out of the box if

00:23:55,000 --> 00:23:59,110
you just want a really simple one

00:23:56,470 --> 00:24:01,810
instead of going to map or something

00:23:59,110 --> 00:24:04,390
like that I would suggest just really

00:24:01,810 --> 00:24:06,130
simple solution VM is Drupal VM is great

00:24:04,390 --> 00:24:07,180
it's worth having it's worth checking it

00:24:06,130 --> 00:24:10,570
out

00:24:07,180 --> 00:24:13,630
and that's why it's so popular and you

00:24:10,570 --> 00:24:16,000
can kind of see down the line custom

00:24:13,630 --> 00:24:18,610
Dockers pretty big as well Lando's got a

00:24:16,000 --> 00:24:20,950
lot of traction Knapp has great traction

00:24:18,610 --> 00:24:25,300
I think what we'll see is a migration

00:24:20,950 --> 00:24:27,700
into into darker plus and you know still

00:24:25,300 --> 00:24:28,630
persisting with Drupal VM going forward

00:24:27,700 --> 00:24:31,180
but it's really interesting to see what

00:24:28,630 --> 00:24:34,060
people are using now as I said once

00:24:31,180 --> 00:24:35,530
again surveys quite bias because the set

00:24:34,060 --> 00:24:37,300
of people that would have answered it

00:24:35,530 --> 00:24:39,400
probably advanced Drupal devs in that

00:24:37,300 --> 00:24:40,960
little community but it's kind of it

00:24:39,400 --> 00:24:43,420
shows you the way forward because those

00:24:40,960 --> 00:24:44,830
guys using it then then you know it's

00:24:43,420 --> 00:24:50,650
probably they're probably onto the right

00:24:44,830 --> 00:24:54,250
thing commercial support so there are

00:24:50,650 --> 00:24:56,530
situations large large companies may

00:24:54,250 --> 00:24:59,440
need support for compliance and security

00:24:56,530 --> 00:25:01,930
reasons this becomes really important if

00:24:59,440 --> 00:25:05,770
you have big offshore teams of projects

00:25:01,930 --> 00:25:07,150
with companies that require compliance

00:25:05,770 --> 00:25:10,390
and security could be in healthcare or

00:25:07,150 --> 00:25:11,620
government or other sectors and so it

00:25:10,390 --> 00:25:14,860
can be really important to get quick

00:25:11,620 --> 00:25:16,840
answers to questions quick bug fixes and

00:25:14,860 --> 00:25:19,660
also kind of some assurance around the

00:25:16,840 --> 00:25:22,060
security and this is often provided by a

00:25:19,660 --> 00:25:22,960
cloud vendor but what you may not all

00:25:22,060 --> 00:25:25,510
know is that

00:25:22,960 --> 00:25:27,640
lando and other teams will do this as

00:25:25,510 --> 00:25:30,070
well if you go to them you know have a

00:25:27,640 --> 00:25:30,820
chat if you're a big corporate user of

00:25:30,070 --> 00:25:33,670
Drupal

00:25:30,820 --> 00:25:35,920
they can actually provide you with a

00:25:33,670 --> 00:25:38,050
support contract they'll do that they'll

00:25:35,920 --> 00:25:40,450
be on the line for you and kind of you

00:25:38,050 --> 00:25:43,060
know vie chat and this is really useful

00:25:40,450 --> 00:25:45,270
to get over some hurdles when you're

00:25:43,060 --> 00:25:47,220
worrying about is you know is my

00:25:45,270 --> 00:25:49,960
development environments can be used by

00:25:47,220 --> 00:25:54,310
maybe hundreds of developers going to be

00:25:49,960 --> 00:25:56,500
able to be supported so report card on

00:25:54,310 --> 00:25:58,600
that dock is not great at this there's

00:25:56,500 --> 00:25:59,890
no kind of sentence it's hard to get

00:25:58,600 --> 00:26:02,080
support around it cuz docker is the

00:25:59,890 --> 00:26:03,880
general use case so getting the support

00:26:02,080 --> 00:26:07,080
for Drupal on docker is not really a

00:26:03,880 --> 00:26:09,520
thing and you know do yourself native

00:26:07,080 --> 00:26:11,680
not so much either because you know brew

00:26:09,520 --> 00:26:13,090
once again it's everything it's not just

00:26:11,680 --> 00:26:18,970
Drupal so getting Drupal support for

00:26:13,090 --> 00:26:22,550
that i think you know drupal vm the

00:26:18,970 --> 00:26:25,220
Jeff's really responsive but it's not

00:26:22,550 --> 00:26:27,680
commercial support so really what you're

00:26:25,220 --> 00:26:29,780
left with is going with something like

00:26:27,680 --> 00:26:32,420
Acquia dev desktop just a native stack

00:26:29,780 --> 00:26:33,710
or doc + environment because a lot of

00:26:32,420 --> 00:26:37,450
these companies as I said before will

00:26:33,710 --> 00:26:39,710
actually support it for you bonus round

00:26:37,450 --> 00:26:40,670
and then you know I'll talk about a

00:26:39,710 --> 00:26:46,910
couple of things and we can have some

00:26:40,670 --> 00:26:48,110
questions so Drupal dev team size this

00:26:46,910 --> 00:26:49,370
is interesting and the top line is

00:26:48,110 --> 00:26:50,630
probably you know it's the whole world

00:26:49,370 --> 00:26:51,860
so look at that first if you're

00:26:50,630 --> 00:26:54,770
interested in regions it's below that

00:26:51,860 --> 00:26:56,750
but the top line says that you know

00:26:54,770 --> 00:26:59,410
there's a huge chunk of teams that are

00:26:56,750 --> 00:27:02,510
just ones - people maybe you don't need

00:26:59,410 --> 00:27:04,580
composability and an encapsulation so

00:27:02,510 --> 00:27:06,650
much if you want to - people maybe it's

00:27:04,580 --> 00:27:08,690
not as big deal but if you get to 3 to 5

00:27:06,650 --> 00:27:11,060
if you're in a team of 3 to 5 then

00:27:08,690 --> 00:27:13,220
onboarding capsulation composability or

00:27:11,060 --> 00:27:15,380
a massive and beyond that - just you

00:27:13,220 --> 00:27:18,620
can't live without it so that's a that's

00:27:15,380 --> 00:27:20,710
a beak kind of thought of Drupal so you

00:27:18,620 --> 00:27:24,050
know if you're in those categories which

00:27:20,710 --> 00:27:26,600
probably most people are I think those

00:27:24,050 --> 00:27:28,580
those things are absolutely critical to

00:27:26,600 --> 00:27:32,770
keep your onboarding time low are you

00:27:28,580 --> 00:27:37,940
consistency high and so you can test etc

00:27:32,770 --> 00:27:39,530
so this is one by role you know systems

00:27:37,940 --> 00:27:42,140
administrators who used configuring

00:27:39,530 --> 00:27:43,850
infrastructure they can use you know all

00:27:42,140 --> 00:27:45,800
of these pretty well but they're going

00:27:43,850 --> 00:27:48,020
to prefer solutions like darker and

00:27:45,800 --> 00:27:49,340
darker plus and VM that feel like a

00:27:48,020 --> 00:27:50,860
server you know feel like they can

00:27:49,340 --> 00:27:53,480
configure it down to the nuts and bolts

00:27:50,860 --> 00:27:55,850
they don't like native stacks because is

00:27:53,480 --> 00:27:59,210
hard to control them whereas developers

00:27:55,850 --> 00:28:02,270
might tend towards you know using brew

00:27:59,210 --> 00:28:03,620
or using using a doctor plus it's a

00:28:02,270 --> 00:28:08,450
little bit faster and easier to get

00:28:03,620 --> 00:28:10,970
running site builders that's that's

00:28:08,450 --> 00:28:13,970
where a native stack becomes really a

00:28:10,970 --> 00:28:15,920
lot easier but you know I know that the

00:28:13,970 --> 00:28:17,780
Lando team a whole previously built Cala

00:28:15,920 --> 00:28:19,970
box for instance they intend to

00:28:17,780 --> 00:28:21,440
eventually build a UI and other you know

00:28:19,970 --> 00:28:23,330
command line docker plus tools I think

00:28:21,440 --> 00:28:26,240
will build the UI as well and as soon as

00:28:23,330 --> 00:28:27,740
that drops it's going to shift and even

00:28:26,240 --> 00:28:29,860
for your site builders it's just going

00:28:27,740 --> 00:28:32,080
to be easier to install this

00:28:29,860 --> 00:28:36,039
kind of UI that's based on top of a

00:28:32,080 --> 00:28:37,960
docker + stack and then development team

00:28:36,039 --> 00:28:39,190
leads you know and this is kind of what

00:28:37,960 --> 00:28:41,169
I said it's worth coming to this

00:28:39,190 --> 00:28:42,909
presentation for let's talk a plus all

00:28:41,169 --> 00:28:45,039
the way like it's there's just way too

00:28:42,909 --> 00:28:47,309
many reasons kind of as I've gone

00:28:45,039 --> 00:28:50,470
through with these these eight

00:28:47,309 --> 00:28:51,789
considerations that a team lead should

00:28:50,470 --> 00:28:53,139
be really getting onto one of those

00:28:51,789 --> 00:28:54,399
docker plus solutions

00:28:53,139 --> 00:28:56,799
they're brilliant they've had some

00:28:54,399 --> 00:28:58,330
problems in the past and some bugs but I

00:28:56,799 --> 00:29:00,340
feel like right now is a great time to

00:28:58,330 --> 00:29:05,289
try them again if you haven't in the

00:29:00,340 --> 00:29:07,509
past comparison by company type so

00:29:05,289 --> 00:29:09,129
Drupal agencies dev shops integrators

00:29:07,509 --> 00:29:12,759
tend to have a lot of Drupal projects

00:29:09,129 --> 00:29:14,139
you know they you know a particular team

00:29:12,759 --> 00:29:16,149
member might have three running at once

00:29:14,139 --> 00:29:17,850
but they probably got you know ten

00:29:16,149 --> 00:29:20,889
they've used in the past couple of years

00:29:17,850 --> 00:29:22,059
it might be important to jump back to

00:29:20,889 --> 00:29:23,739
one of those at some point they're

00:29:22,059 --> 00:29:25,899
probably homogeneous stacks they've got

00:29:23,739 --> 00:29:28,600
different technology within them and

00:29:25,899 --> 00:29:29,919
being able to still have these on the

00:29:28,600 --> 00:29:32,259
machine so I can boot them up quickly

00:29:29,919 --> 00:29:33,519
and spending is down up and have

00:29:32,259 --> 00:29:36,789
multiple ones running without really

00:29:33,519 --> 00:29:38,859
weighing my waymarsh machine down is

00:29:36,789 --> 00:29:41,799
really important for those teams and

00:29:38,859 --> 00:29:43,509
that's kind of why of everyone using

00:29:41,799 --> 00:29:44,619
local dev solutions docker plus is the

00:29:43,509 --> 00:29:46,659
absolute best for them

00:29:44,619 --> 00:29:49,720
because because they're not weighed down

00:29:46,659 --> 00:29:53,139
by many VMs there's a composability and

00:29:49,720 --> 00:29:54,399
in the capsulation etc the kind of

00:29:53,139 --> 00:29:56,730
exception to this rule so for instance

00:29:54,399 --> 00:29:59,019
Adam parson who develops lightning

00:29:56,730 --> 00:30:00,220
really likes a native stack and that's

00:29:59,019 --> 00:30:02,259
really because he's developing something

00:30:00,220 --> 00:30:04,840
that's not Drupal sites he's developing

00:30:02,259 --> 00:30:06,789
a Drupal product he's creating something

00:30:04,840 --> 00:30:09,999
you know a distribution that will be

00:30:06,789 --> 00:30:11,980
used to build lots of Drupal sites but

00:30:09,999 --> 00:30:14,080
he's really thinking about one code base

00:30:11,980 --> 00:30:15,519
and so it doesn't require a lot of

00:30:14,080 --> 00:30:17,320
environments to be spun up he's really

00:30:15,519 --> 00:30:19,570
thinking about one environments pretty

00:30:17,320 --> 00:30:22,029
easy to manage and then a corporate

00:30:19,570 --> 00:30:23,080
dribble team like the Drupal agency

00:30:22,029 --> 00:30:24,309
probably has a couple of different

00:30:23,080 --> 00:30:26,710
experiences but they also have probably

00:30:24,309 --> 00:30:28,690
lots of different technologies they need

00:30:26,710 --> 00:30:30,879
to integrate there may be other services

00:30:28,690 --> 00:30:33,009
in other languages and so once again it

00:30:30,879 --> 00:30:35,859
comes really important for them to use

00:30:33,009 --> 00:30:37,929
something you know at least docker or

00:30:35,859 --> 00:30:39,789
docker plus to be able to configure and

00:30:37,929 --> 00:30:42,400
build those services within the same

00:30:39,789 --> 00:30:43,930
environment so that's about

00:30:42,400 --> 00:30:46,360
my presentation and I'd like to take

00:30:43,930 --> 00:30:48,850
questions now so we have tons and tons

00:30:46,360 --> 00:30:50,290
of time that was a lot faster than the

00:30:48,850 --> 00:31:07,990
last time anyway

00:30:50,290 --> 00:31:17,790
questions from the audience yes yes this

00:31:07,990 --> 00:31:19,690
one or earlier this this list right yes

00:31:17,790 --> 00:31:22,330
yes okay

00:31:19,690 --> 00:31:23,860
there's probably an important one is

00:31:22,330 --> 00:31:24,640
that that's like the whole question that

00:31:23,860 --> 00:31:32,190
was easy

00:31:24,640 --> 00:31:32,190
okay thank you next question

00:32:10,020 --> 00:32:35,010
which section they all have emoji every

00:32:19,929 --> 00:32:35,010
every consideration has emoji yes yes

00:32:36,900 --> 00:32:51,940
yes definitely has to do with team size

00:32:49,440 --> 00:32:53,919
so if you little team you know you like

00:32:51,940 --> 00:32:55,419
one to two people then great

00:32:53,919 --> 00:32:57,399
I'm going to install my thing and that's

00:32:55,419 --> 00:32:59,020
pretty good and you know once again for

00:32:57,399 --> 00:33:00,220
those who went if you're for the right

00:32:59,020 --> 00:33:03,730
for the beginning which is kind of a

00:33:00,220 --> 00:33:07,360
keystone it's kind of native stack is

00:33:03,730 --> 00:33:08,919
really an install a like map versus

00:33:07,360 --> 00:33:10,720
do-it-yourself native which is something

00:33:08,919 --> 00:33:12,820
like brew on the command line or I'm

00:33:10,720 --> 00:33:18,070
kind of installing everything manually

00:33:12,820 --> 00:33:20,049
myself so corporate team doesn't like

00:33:18,070 --> 00:33:21,730
the installer because they may have

00:33:20,049 --> 00:33:23,080
services running so might have a

00:33:21,730 --> 00:33:25,600
JavaScript application they might have a

00:33:23,080 --> 00:33:27,130
back-end service those are going to be

00:33:25,600 --> 00:33:28,750
then separate things I have to install

00:33:27,130 --> 00:33:30,340
and maintain separately and I can't

00:33:28,750 --> 00:33:31,990
bring that all into an environment and

00:33:30,340 --> 00:33:34,450
then I and I can't certainly kind of run

00:33:31,990 --> 00:33:36,640
a branch of an environment and over here

00:33:34,450 --> 00:33:38,409
on my machine and see the effect of that

00:33:36,640 --> 00:33:42,070
code branch in context of all those

00:33:38,409 --> 00:33:43,600
services you know often corporate

00:33:42,070 --> 00:33:45,340
environments are homogeneous set of

00:33:43,600 --> 00:33:47,289
services and that's kind of I think the

00:33:45,340 --> 00:33:49,750
big deal as I said on one of the other

00:33:47,289 --> 00:33:51,070
slides it seems easy earlier on like

00:33:49,750 --> 00:33:52,929
early on yeah I could install something

00:33:51,070 --> 00:33:54,490
drupal's running but that's not really

00:33:52,929 --> 00:33:56,169
the development process you know getting

00:33:54,490 --> 00:33:58,210
Drupal to an admin screen is not the

00:33:56,169 --> 00:34:00,190
development process you know installing

00:33:58,210 --> 00:34:01,750
modules having branches at my code you

00:34:00,190 --> 00:34:03,730
know through updates really easily kind

00:34:01,750 --> 00:34:05,380
of dude doing hot fixes and having that

00:34:03,730 --> 00:34:07,360
in his environment that tends to be or

00:34:05,380 --> 00:34:10,389
the Drupal development process looks

00:34:07,360 --> 00:34:15,990
like and that gets really messy with the

00:34:10,389 --> 00:34:15,990
native stack or or DIY native yes

00:34:26,220 --> 00:34:34,599
yeah so if you if you have a drupe list

00:34:30,520 --> 00:34:39,309
and they know their IDE then you know

00:34:34,599 --> 00:34:43,119
I've I've setup Lando you know in 15

00:34:39,309 --> 00:34:45,010
minutes and had people productive if you

00:34:43,119 --> 00:34:50,049
go one of the other solutions like

00:34:45,010 --> 00:34:53,379
docker there's a set-up time you as a

00:34:50,049 --> 00:34:55,510
team can have a docker compose file that

00:34:53,379 --> 00:34:57,430
you run and that can make you pretty

00:34:55,510 --> 00:35:00,309
productive because they're not in my git

00:34:57,430 --> 00:35:01,780
repo I download it I run kind of you

00:35:00,309 --> 00:35:04,089
know I run docker it brings up all the

00:35:01,780 --> 00:35:06,039
containers you just have to do more work

00:35:04,089 --> 00:35:08,079
you're maintaining all of those services

00:35:06,039 --> 00:35:10,089
and all those versions and knowing what

00:35:08,079 --> 00:35:11,950
all the containers do so there's some

00:35:10,089 --> 00:35:14,859
extra work that the team lead has to do

00:35:11,950 --> 00:35:19,329
to kind of maintain that that docker

00:35:14,859 --> 00:35:21,640
compose file onboarding is not

00:35:19,329 --> 00:35:23,770
onboarding because for a native stack I

00:35:21,640 --> 00:35:26,410
double click once again I have something

00:35:23,770 --> 00:35:28,599
in 15 minutes but I'm maybe not on board

00:35:26,410 --> 00:35:30,099
to how to do a branched environment or

00:35:28,599 --> 00:35:31,299
do something that I'm probably gonna

00:35:30,099 --> 00:35:32,950
have to do in a couple of weeks so

00:35:31,299 --> 00:35:34,660
onboarding tends to run then for a long

00:35:32,950 --> 00:35:36,010
time and it's really kind of being the

00:35:34,660 --> 00:35:38,230
default option of people to install

00:35:36,010 --> 00:35:39,730
something like mint

00:35:38,230 --> 00:35:42,460
and the problem is that then onboarding

00:35:39,730 --> 00:35:43,839
you kind of it just keeps going the

00:35:42,460 --> 00:35:47,109
questions keep coming you know how do we

00:35:43,839 --> 00:35:49,240
do this and you know so that's so if you

00:35:47,109 --> 00:35:51,849
talk about onboarding specifically like

00:35:49,240 --> 00:35:55,020
to getting Drupal running or are you

00:35:51,849 --> 00:35:55,020
talking about kind of training

00:36:07,300 --> 00:36:14,630
yeah so um if I was gonna set up a

00:36:12,140 --> 00:36:17,390
machine for a developer typical

00:36:14,630 --> 00:36:20,210
developer I would have to have an IDE I

00:36:17,390 --> 00:36:22,640
would have to have the PHP environment

00:36:20,210 --> 00:36:24,290
MySQL environment I maybe have to have

00:36:22,640 --> 00:36:26,420
solar or search environment some other

00:36:24,290 --> 00:36:28,130
things running I probably got to have

00:36:26,420 --> 00:36:30,020
composer or probably gonna have you know

00:36:28,130 --> 00:36:32,720
all those CLI tools I talked about a

00:36:30,020 --> 00:36:36,710
minute ago a minute ago right it'll give

00:36:32,720 --> 00:36:38,540
me a presentation there we are you know

00:36:36,710 --> 00:36:43,580
all these tools installed on that

00:36:38,540 --> 00:36:45,710
machine so maybe as maybe as a shop or a

00:36:43,580 --> 00:36:48,110
corporate I put together some kind of

00:36:45,710 --> 00:36:49,850
build script for this but I'm just here

00:36:48,110 --> 00:36:52,850
to tell you that someone's done it for

00:36:49,850 --> 00:36:55,370
you you know you can go out use a kind

00:36:52,850 --> 00:36:56,780
of a docker plus stack and they've if

00:36:55,370 --> 00:36:58,790
they haven't included these tools are

00:36:56,780 --> 00:37:01,070
made they're really easy to use and

00:36:58,790 --> 00:37:04,640
they've made their configurable so I

00:37:01,070 --> 00:37:07,760
guess onboarding for a developer if you

00:37:04,640 --> 00:37:09,590
have all of that setup configured for

00:37:07,760 --> 00:37:11,330
your environment you know your corporate

00:37:09,590 --> 00:37:12,620
IT might be able to do that for you and

00:37:11,330 --> 00:37:14,060
it might be just turn it on and I'm

00:37:12,620 --> 00:37:15,200
going to show them some things and if

00:37:14,060 --> 00:37:16,550
they're a drip list they'll understand

00:37:15,200 --> 00:37:18,560
how to use all these command line tools

00:37:16,550 --> 00:37:20,900
but then there's a ton of maintenance

00:37:18,560 --> 00:37:23,000
you have to do around that stack it's

00:37:20,900 --> 00:37:24,140
really heavy like configuration and

00:37:23,000 --> 00:37:26,360
these kinds of things you have to keep

00:37:24,140 --> 00:37:27,710
maintained whereas if I use one of these

00:37:26,360 --> 00:37:30,500
solutions that's a little bit abstract

00:37:27,710 --> 00:37:32,930
'add you know d-dave lender

00:37:30,500 --> 00:37:34,940
it's a docker plus solution there's

00:37:32,930 --> 00:37:36,590
someone else who's maintaining all most

00:37:34,940 --> 00:37:39,320
of the kind of heavy lifting of that

00:37:36,590 --> 00:37:41,390
broad configuration then I can just do

00:37:39,320 --> 00:37:44,360
very minor strokes like I want to use

00:37:41,390 --> 00:37:46,850
PHP 7.2 where I want to use kind of this

00:37:44,360 --> 00:37:51,260
version of MySQL or I want to use this

00:37:46,850 --> 00:37:54,099
version in solar etcetera yeah hope

00:37:51,260 --> 00:37:56,589
that's a better insight yes

00:37:54,099 --> 00:37:58,269
they'll actually have the UI for Lando

00:37:56,589 --> 00:38:00,640
set up because that's kind of a barrier

00:37:58,269 --> 00:38:09,239
for a lot of our clients like that kind

00:38:00,640 --> 00:38:11,380
of interesting

00:38:09,239 --> 00:38:13,599
there are various timelines you probably

00:38:11,380 --> 00:38:15,279
have to speak to Alec that's changed a

00:38:13,599 --> 00:38:17,170
little bit they're prioritized a lot of

00:38:15,279 --> 00:38:19,390
the features in the backend and I think

00:38:17,170 --> 00:38:20,739
that works for a lot of Deb shops but as

00:38:19,390 --> 00:38:24,609
I said before if your site builds it's

00:38:20,739 --> 00:38:26,170
really important to have a UI for lando

00:38:24,609 --> 00:38:28,299
speak to Alec you know the other teams

00:38:26,170 --> 00:38:31,690
I've got on that screen they probably

00:38:28,299 --> 00:38:33,369
got different answers to this I would

00:38:31,690 --> 00:38:37,829
expect to land out a bit later this year

00:38:33,369 --> 00:38:37,829
but probably best out to ask them

00:38:45,869 --> 00:38:52,000
yeah I don't see any big performance

00:38:50,680 --> 00:38:54,339
differences they've solved some of the

00:38:52,000 --> 00:39:00,099
problems so for instance if you use fire

00:38:54,339 --> 00:39:04,420
if you use docker then you have to work

00:39:00,099 --> 00:39:06,460
out how you're doing how you're seeing

00:39:04,420 --> 00:39:07,570
files locally so I've got my IDE running

00:39:06,460 --> 00:39:09,460
locally it's just running on my machine

00:39:07,570 --> 00:39:11,260
and it needs to help you access the

00:39:09,460 --> 00:39:12,880
codebase and needs to be able to you

00:39:11,260 --> 00:39:15,210
need to be able to use it like a user so

00:39:12,880 --> 00:39:18,160
it uses upload files right and so I need

00:39:15,210 --> 00:39:20,560
so that performance can get drags down

00:39:18,160 --> 00:39:23,200
if you don't implement dr. the right way

00:39:20,560 --> 00:39:24,849
whereas lando and others tend to have

00:39:23,200 --> 00:39:26,380
just sorted that out

00:39:24,849 --> 00:39:27,760
it's just docker you know they've

00:39:26,380 --> 00:39:29,859
created a command-line tool that does a

00:39:27,760 --> 00:39:32,079
lot of doc configuration for you and

00:39:29,859 --> 00:39:33,070
that's great but essentially it's just

00:39:32,079 --> 00:39:34,359
running on top of the native docker

00:39:33,070 --> 00:39:35,740
stack so it's called the same

00:39:34,359 --> 00:39:37,630
performance characteristics they've done

00:39:35,740 --> 00:39:39,070
a better job at configuration so

00:39:37,630 --> 00:39:41,230
sometimes that helps you with

00:39:39,070 --> 00:39:44,829
performance but there's no there's no

00:39:41,230 --> 00:39:46,510
kind of what's it called there's no

00:39:44,829 --> 00:39:49,950
heaviness in the solution it's not kind

00:39:46,510 --> 00:39:49,950
of giving you any X and extra overhead

00:39:57,000 --> 00:40:02,109
definitely I think you know I said this

00:40:00,010 --> 00:40:03,970
before but if you haven't used docker in

00:40:02,109 --> 00:40:05,140
a while especially if you're using

00:40:03,970 --> 00:40:08,050
docker toolbox

00:40:05,140 --> 00:40:10,270
on top of Windows or Mac try it again

00:40:08,050 --> 00:40:12,640
it's very different with the native

00:40:10,270 --> 00:40:14,140
solution Mac I can't remember what it

00:40:12,640 --> 00:40:17,710
was released I mean last year the year

00:40:14,140 --> 00:40:18,700
before mm-hmm they they really stand

00:40:17,710 --> 00:40:22,030
native solution

00:40:18,700 --> 00:40:23,230
Windows 10 Pro as I said before has a

00:40:22,030 --> 00:40:24,339
native solution performance

00:40:23,230 --> 00:40:26,440
characteristics are very different

00:40:24,339 --> 00:40:28,780
obviously with Linux it was always very

00:40:26,440 --> 00:40:31,869
fast but if you're on you know as we saw

00:40:28,780 --> 00:40:34,060
before most people using Mac OS and

00:40:31,869 --> 00:40:36,660
getting to the native installer for

00:40:34,060 --> 00:40:39,660
docker is very important for performance

00:40:36,660 --> 00:40:39,660
yes

00:42:27,339 --> 00:42:34,009
so just to repeat the question as I

00:42:30,019 --> 00:42:42,019
understand it are there good solutions

00:42:34,009 --> 00:42:43,430
to bring developers into DevOps okay so

00:42:42,019 --> 00:42:45,650
I think the Lando documentation got a

00:42:43,430 --> 00:42:50,509
lot better I think lots of people are

00:42:45,650 --> 00:42:55,759
working on documentation I think

00:42:50,509 --> 00:42:56,989
ultimately though the important this is

00:42:55,759 --> 00:42:58,609
always going to be a you know a tech

00:42:56,989 --> 00:43:01,130
lead on the team who's going to be kind

00:42:58,609 --> 00:43:05,269
of enabling a solution but I've seen a

00:43:01,130 --> 00:43:06,529
lot fewer errors a lot fewer times when

00:43:05,269 --> 00:43:08,749
a developer has to reach out to someone

00:43:06,529 --> 00:43:10,759
on one of those docker plus stacks

00:43:08,749 --> 00:43:12,349
because it solves a lot of problems and

00:43:10,759 --> 00:43:15,200
they're working on all the bugs around

00:43:12,349 --> 00:43:17,749
rupal not just getting an environment

00:43:15,200 --> 00:43:19,670
running but around Drupal so you know

00:43:17,749 --> 00:43:21,410
Drupal is installed why that will be

00:43:19,670 --> 00:43:24,200
fixed by the Llano team in the

00:43:21,410 --> 00:43:27,589
configuration rather than your team with

00:43:24,200 --> 00:43:29,779
your docker compose file so it tends to

00:43:27,589 --> 00:43:31,910
lead to less helplessness going with

00:43:29,779 --> 00:43:33,289
something like docker plus and if you

00:43:31,910 --> 00:43:34,819
haven't tried it recently you know they

00:43:33,289 --> 00:43:38,299
went through alphas and betas there were

00:43:34,819 --> 00:43:41,809
problems try again that's my that's my

00:43:38,299 --> 00:43:46,549
advice in terms of DevOps in general I

00:43:41,809 --> 00:43:49,729
don't know the best resources to bring

00:43:46,549 --> 00:43:51,890
developers over I think there's been a

00:43:49,729 --> 00:43:58,009
big move towards DevOps recently but

00:43:51,890 --> 00:44:01,910
yeah I post a blog on that later it was

00:43:58,009 --> 00:44:04,420
a guy that I missed because I'm going

00:44:01,910 --> 00:44:04,420
with you first

00:44:12,420 --> 00:44:18,039
so I think Drupal VM has been around a

00:44:16,059 --> 00:44:20,410
while that's wrong one of the reasons

00:44:18,039 --> 00:44:22,209
it's so popular because for a long time

00:44:20,410 --> 00:44:26,469
I just been able to install this you

00:44:22,209 --> 00:44:29,079
know VirtualBox vagrant based system

00:44:26,469 --> 00:44:31,569
from a failure file that will bring up a

00:44:29,079 --> 00:44:32,979
web page that shows me my Drupal

00:44:31,569 --> 00:44:35,319
environment with my you know other

00:44:32,979 --> 00:44:36,789
environment variables my skew etc so I

00:44:35,319 --> 00:44:38,619
understand it because it looks something

00:44:36,789 --> 00:44:41,289
like mint it's got all of my stuff there

00:44:38,619 --> 00:44:43,150
so it was a good it's a great solution

00:44:41,289 --> 00:44:47,249
you know I don't want to knock Drupal VM

00:44:43,150 --> 00:44:50,410
it's brilliant I think that it lacks as

00:44:47,249 --> 00:44:52,660
I said before because if you start

00:44:50,410 --> 00:44:54,819
running multiple VMs it gets very heavy

00:44:52,660 --> 00:44:56,969
I also don't think the configuration

00:44:54,819 --> 00:45:00,219
settings are as friendly for developers

00:44:56,969 --> 00:45:02,499
specifically as as some of the newer doc

00:45:00,219 --> 00:45:03,880
plus based stacks like I'm down in the

00:45:02,499 --> 00:45:08,019
details I think it was one of these

00:45:03,880 --> 00:45:10,839
slides I had there that one like on the

00:45:08,019 --> 00:45:13,029
right is vagrants configuration this is

00:45:10,839 --> 00:45:14,559
what you have to deal with you know if

00:45:13,029 --> 00:45:16,359
you're kind of running one of those

00:45:14,559 --> 00:45:18,489
stacks whereas on the left is kind of an

00:45:16,359 --> 00:45:20,979
abstract 'add configuration that

00:45:18,489 --> 00:45:22,809
understands Drupal somewhat understands

00:45:20,979 --> 00:45:25,029
understands the other services so I

00:45:22,809 --> 00:45:26,559
think it's really about performance if

00:45:25,029 --> 00:45:27,699
you're running multiple environments if

00:45:26,559 --> 00:45:29,499
you're running if you're a dev shop

00:45:27,699 --> 00:45:31,479
you've got lots of projects or you've

00:45:29,499 --> 00:45:33,609
got lots of reasons to what run lots of

00:45:31,479 --> 00:45:35,799
Drupal's or other services and then also

00:45:33,609 --> 00:45:40,420
configurability that's it's where i

00:45:35,799 --> 00:45:43,739
would see the difference and just like

00:45:40,420 --> 00:45:43,739
getting back to that slide yes

00:45:49,200 --> 00:46:08,380
yes yeah

00:46:05,430 --> 00:46:12,070
coming from Acquia I would say that it's

00:46:08,380 --> 00:46:14,080
not it's not crystal clear as to how I

00:46:12,070 --> 00:46:17,110
would make a Lando configuration exactly

00:46:14,080 --> 00:46:19,420
like black Acquia but the thing is that

00:46:17,110 --> 00:46:21,160
Lando is so easy to configure like isn't

00:46:19,420 --> 00:46:23,410
change them to my versions but I can

00:46:21,160 --> 00:46:25,450
match the versions in cloud pretty

00:46:23,410 --> 00:46:27,280
easily so I haven't got a magic button

00:46:25,450 --> 00:46:29,470
yet even though there is actually a

00:46:27,280 --> 00:46:31,240
really good blog post on how to kind of

00:46:29,470 --> 00:46:34,630
bring environments down from Okwe that's

00:46:31,240 --> 00:46:35,830
a part of it sorry but but the

00:46:34,630 --> 00:46:37,450
configuration is so easy that it's

00:46:35,830 --> 00:46:39,130
actually pretty easy to match my cloud

00:46:37,450 --> 00:46:41,980
environment there's going to be some

00:46:39,130 --> 00:46:44,770
gotchas and that could be in the the

00:46:41,980 --> 00:46:48,700
building tests or it could be it could

00:46:44,770 --> 00:46:50,830
be in kind of settings that are very

00:46:48,700 --> 00:46:52,300
particular to your environment but I'd

00:46:50,830 --> 00:46:54,640
say most of the things that you can do

00:46:52,300 --> 00:46:55,900
those cloud solutions can be mirrored

00:46:54,640 --> 00:46:59,490
pretty quickly because of the

00:46:55,900 --> 00:46:59,490
abstraction of those configuration files

00:46:59,880 --> 00:47:05,050
there will be better ways in the future

00:47:02,460 --> 00:47:07,570
deb-deb desktop attacker is actually

00:47:05,050 --> 00:47:09,940
pretty good at this but it's not going

00:47:07,570 --> 00:47:11,950
to be the solution in the future so yeah

00:47:09,940 --> 00:47:14,250
you stacks and architectures all that

00:47:11,950 --> 00:47:14,250
yes

00:47:56,290 --> 00:48:02,390
yeah so I guess developers usually like

00:47:59,450 --> 00:48:03,770
to have their code local for latency and

00:48:02,390 --> 00:48:04,910
for refresh because then once you've got

00:48:03,770 --> 00:48:07,040
a remote server

00:48:04,910 --> 00:48:08,240
there's probably caching on it and

00:48:07,040 --> 00:48:10,310
you've probably got em you know upload

00:48:08,240 --> 00:48:12,260
your hit save and then it's got to click

00:48:10,310 --> 00:48:15,440
over and then you and if you're doing so

00:48:12,260 --> 00:48:18,290
I guess philosophically like moving from

00:48:15,440 --> 00:48:19,610
Java we've got to compile it to PHP one

00:48:18,290 --> 00:48:21,590
of the big advantages was hey I can

00:48:19,610 --> 00:48:23,240
change this : and o or the semicolon hey

00:48:21,590 --> 00:48:25,190
everything works you know instantly so

00:48:23,240 --> 00:48:26,780
it's about that really quick kind of

00:48:25,190 --> 00:48:28,130
agile cycle of development or if you

00:48:26,780 --> 00:48:30,100
know microcycle

00:48:28,130 --> 00:48:33,440
where I'm just changing particular

00:48:30,100 --> 00:48:35,360
characters and that tends to make people

00:48:33,440 --> 00:48:36,980
want to use something local that said

00:48:35,360 --> 00:48:39,290
there are lots of really interesting new

00:48:36,980 --> 00:48:41,660
web IDs coming out like cloud 9

00:48:39,290 --> 00:48:43,760
that kind of try to make that possible

00:48:41,660 --> 00:48:45,230
by putting the IDE in the browser as

00:48:43,760 --> 00:48:46,970
well and then it's really close because

00:48:45,230 --> 00:48:48,890
like you change something my IDE in the

00:48:46,970 --> 00:48:50,480
browser and then it's instantly the same

00:48:48,890 --> 00:48:52,520
on the cloud anyway

00:48:50,480 --> 00:48:55,220
I would say though the problem you're

00:48:52,520 --> 00:48:57,500
having I would think is solved by the

00:48:55,220 --> 00:48:59,810
composability of something like lindo

00:48:57,500 --> 00:49:02,330
because it is really about taking all of

00:48:59,810 --> 00:49:05,000
those configurations that you've got and

00:49:02,330 --> 00:49:07,340
putting them in a in a configuration

00:49:05,000 --> 00:49:09,680
file it's in your git repo so when I do

00:49:07,340 --> 00:49:12,080
a git pull and then I can go to docker

00:49:09,680 --> 00:49:13,760
so I can Orlando start suddenly I have

00:49:12,080 --> 00:49:15,710
an environment that's exactly the same

00:49:13,760 --> 00:49:17,810
as the rest of my development team with

00:49:15,710 --> 00:49:18,950
all the services configured exactly the

00:49:17,810 --> 00:49:21,020
same as the rest of my development team

00:49:18,950 --> 00:49:23,450
so hopefully like that's the solution

00:49:21,020 --> 00:49:25,400
you use to get around that problem I

00:49:23,450 --> 00:49:27,290
have had experience running a dev server

00:49:25,400 --> 00:49:29,210
remote but

00:49:27,290 --> 00:49:31,550
yeah for the reasons I said before I

00:49:29,210 --> 00:49:33,260
don't think it's a great you might be

00:49:31,550 --> 00:49:39,520
right for you but you know it tends to

00:49:33,260 --> 00:49:39,520
be not what developers want yeah yep

00:49:41,800 --> 00:49:47,260
yeah it's my silly naming convention I

00:49:54,880 --> 00:49:58,700
did a lot of work with Lando I'm always

00:49:57,140 --> 00:50:00,290
gonna have a bias because I picked that

00:49:58,700 --> 00:50:01,820
up a long time ago and kind of have been

00:50:00,290 --> 00:50:04,340
following it along its development path

00:50:01,820 --> 00:50:05,330
I think the other guys have some great

00:50:04,340 --> 00:50:08,270
things going for them but when I

00:50:05,330 --> 00:50:10,400
recently tried out do dev and Doxil and

00:50:08,270 --> 00:50:12,140
Outrigger I couldn't find necessarily

00:50:10,400 --> 00:50:13,310
any big advantages to using different

00:50:12,140 --> 00:50:14,900
ones so I'm just going to use Lando as

00:50:13,310 --> 00:50:18,140
my example but pretty much all of these

00:50:14,900 --> 00:50:20,090
have the same set of advantages about

00:50:18,140 --> 00:50:21,620
composability encapsulation and kind of

00:50:20,090 --> 00:50:26,540
abstracting all the stuff that you have

00:50:21,620 --> 00:50:34,300
to deal with in docker or or vm files so

00:50:26,540 --> 00:50:34,300
yeah Lando is my good example I like it

00:50:34,360 --> 00:50:40,970
but yeah I think I would choose this

00:50:38,660 --> 00:50:42,620
category that's my message here I would

00:50:40,970 --> 00:50:44,030
choose dock a plus for a variety of

00:50:42,620 --> 00:50:45,440
reasons as I mentioned the presentation

00:50:44,030 --> 00:50:47,300
you should probably done do your own

00:50:45,440 --> 00:50:49,640
research on what each of these do better

00:50:47,300 --> 00:50:52,790
or worse or you know and then kind of

00:50:49,640 --> 00:51:04,220
try them out I did but I just used Lando

00:50:52,790 --> 00:51:05,570
a lot more cool yes no and this is

00:51:04,220 --> 00:51:07,070
actually like this question we had over

00:51:05,570 --> 00:51:08,900
here it's like how do I match my

00:51:07,070 --> 00:51:11,180
configuration on my server versus

00:51:08,900 --> 00:51:12,650
locally I think there's a big push so

00:51:11,180 --> 00:51:14,450
one of the reasons people love docker is

00:51:12,650 --> 00:51:17,090
theoretically you can do that like I can

00:51:14,450 --> 00:51:19,760
push my container and that's been a kind

00:51:17,090 --> 00:51:21,080
of a development development move also

00:51:19,760 --> 00:51:23,210
developers want to push their container

00:51:21,080 --> 00:51:25,190
because then they really know that it's

00:51:23,210 --> 00:51:26,840
just the same in production as it is

00:51:25,190 --> 00:51:29,240
locally but that's not always practical

00:51:26,840 --> 00:51:32,150
because the way that production systems

00:51:29,240 --> 00:51:35,600
are set up certainly so what Acquia you

00:51:32,150 --> 00:51:36,480
know we run massive sites like NBC

00:51:35,600 --> 00:51:39,510
Olympics that have

00:51:36,480 --> 00:51:40,920
of millions of hits to them and we're

00:51:39,510 --> 00:51:43,740
not going to use the dockerfile

00:51:40,920 --> 00:51:46,950
that we use locally in that instance it

00:51:43,740 --> 00:51:49,200
just isn't practical and most of the

00:51:46,950 --> 00:51:51,150
reasons that your code will execute

00:51:49,200 --> 00:51:53,220
differently aren't affected by those

00:51:51,150 --> 00:51:57,660
differences so you know how we've done

00:51:53,220 --> 00:51:59,400
it is you know saying before there's a

00:51:57,660 --> 00:52:02,190
number of configurations and versions

00:51:59,400 --> 00:52:04,260
for those services so I have got you

00:52:02,190 --> 00:52:06,750
know my solar configuration file I might

00:52:04,260 --> 00:52:09,290
have my PHP in e for peach for PHP I

00:52:06,750 --> 00:52:11,880
might have you know my not confer my

00:52:09,290 --> 00:52:15,810
MySQL and those things you can pretty

00:52:11,880 --> 00:52:18,900
easily bring down and have within within

00:52:15,810 --> 00:52:20,369
a docker plus configuration it's really

00:52:18,900 --> 00:52:21,840
about matching your cloud environment I

00:52:20,369 --> 00:52:23,310
think in the future clouds will do a

00:52:21,840 --> 00:52:25,500
better job of giving you those

00:52:23,310 --> 00:52:25,950
configurations directly into something

00:52:25,500 --> 00:52:29,490
like this

00:52:25,950 --> 00:52:31,050
I don't think Drupal I don't think that

00:52:29,490 --> 00:52:33,690
we'll get to the point where these with

00:52:31,050 --> 00:52:35,820
the clouds or allowing you to push your

00:52:33,690 --> 00:52:36,930
containers from one of these development

00:52:35,820 --> 00:52:40,940
environments to production because

00:52:36,930 --> 00:52:42,869
that's kind of backwards you know these

00:52:40,940 --> 00:52:45,330
the people in these teams are

00:52:42,869 --> 00:52:48,090
maintaining these document owners and

00:52:45,330 --> 00:52:49,950
images for the purpose of local dev and

00:52:48,090 --> 00:52:51,630
if anything they should be you know

00:52:49,950 --> 00:52:53,490
getting an open source container that

00:52:51,630 --> 00:52:55,230
you know Acquia panthino platform

00:52:53,490 --> 00:52:57,960
specifies is their production container

00:52:55,230 --> 00:52:59,040
and bring you down that may happen but

00:52:57,960 --> 00:53:00,420
this just seems like there's different

00:52:59,040 --> 00:53:01,890
goals so I don't think you do going to

00:53:00,420 --> 00:53:08,660
be pushing containers to production

00:53:01,890 --> 00:53:08,660
anytime soon anyone yes

00:53:13,869 --> 00:53:18,579
yeah I think I sell it based on the

00:53:17,049 --> 00:53:20,529
abstraction and based on the less work

00:53:18,579 --> 00:53:22,000
to get to security and also if I'm going

00:53:20,529 --> 00:53:24,119
to go different but like if I need to

00:53:22,000 --> 00:53:27,099
update a version of of one of these

00:53:24,119 --> 00:53:29,079
packages just a lot faster bringing all

00:53:27,099 --> 00:53:30,400
my whole dev team C so is really

00:53:29,079 --> 00:53:34,329
concerned with production there so

00:53:30,400 --> 00:53:36,130
probably not as big a concern locally my

00:53:34,329 --> 00:53:37,720
experience but if they are really

00:53:36,130 --> 00:53:39,640
concerned about local then it's on the

00:53:37,720 --> 00:53:42,130
versioning you can quickly get to the

00:53:39,640 --> 00:53:42,940
next version you know you don't have to

00:53:42,130 --> 00:53:44,470
think about it as much of the

00:53:42,940 --> 00:53:47,289
configuration so there's lots of less

00:53:44,470 --> 00:53:49,059
things you can do wrong which is good I

00:53:47,289 --> 00:53:50,890
mean all of these should be behind your

00:53:49,059 --> 00:53:52,569
like local firewall anyway so no one

00:53:50,890 --> 00:53:54,819
should there's not many times you've got

00:53:52,569 --> 00:53:58,720
a local dev environment that has open I

00:53:54,819 --> 00:54:00,579
say that people doing it you shouldn't

00:53:58,720 --> 00:54:03,369
have open ports on your Mac I'm sure

00:54:00,579 --> 00:54:10,960
this probably has but anyway yeah is

00:54:03,369 --> 00:54:12,490
there any more on that or a yeah have

00:54:10,960 --> 00:54:14,520
you have you had particular questions

00:54:12,490 --> 00:54:25,270
from the sea so around that locally or

00:54:14,520 --> 00:54:28,510
okay maybe later yes yes they are that

00:54:25,270 --> 00:54:30,910
is a good point I didn't say that but

00:54:28,510 --> 00:54:33,250
for everyone in the room all of the

00:54:30,910 --> 00:54:35,529
docker plus you know teams here are

00:54:33,250 --> 00:54:37,180
actually on the show floor so don't take

00:54:35,529 --> 00:54:39,609
my word for it go and ask them questions

00:54:37,180 --> 00:54:42,990
they're great teams and I respect all of

00:54:39,609 --> 00:54:42,990
them so yes

00:55:13,010 --> 00:55:17,720
you can even use your images I think

00:55:15,410 --> 00:55:19,550
within Dhaka plus if you have custom

00:55:17,720 --> 00:55:21,410
images that you want to use so if you've

00:55:19,550 --> 00:55:23,030
got some kind of absolute requirement to

00:55:21,410 --> 00:55:24,650
use that particular image you can I

00:55:23,030 --> 00:55:25,820
think their configuration files will

00:55:24,650 --> 00:55:27,500
still benefit you and I think the way

00:55:25,820 --> 00:55:29,450
that their CLI tool works will still

00:55:27,500 --> 00:55:32,000
benefit you but probably a better

00:55:29,450 --> 00:55:34,160
question to actually go and ask them and

00:55:32,000 --> 00:55:37,190
they'll have a better answer about your

00:55:34,160 --> 00:55:38,210
custom docker container there are lots

00:55:37,190 --> 00:55:40,010
of reasons that can be great especially

00:55:38,210 --> 00:55:41,480
for custom services I guess that's

00:55:40,010 --> 00:55:42,710
probably the use case you have is you're

00:55:41,480 --> 00:55:45,020
building a container for a custom

00:55:42,710 --> 00:55:46,760
service and that's that's probably a

00:55:45,020 --> 00:55:48,500
good reason to use your own container

00:55:46,760 --> 00:55:50,810
because you have it in production you

00:55:48,500 --> 00:55:53,870
have it here and it's some micro service

00:55:50,810 --> 00:55:56,890
or some JavaScript application yeah but

00:55:53,870 --> 00:55:56,890
have a chat to them about that

00:55:56,950 --> 00:56:01,370
all right we've probably got time for

00:55:59,960 --> 00:56:04,310
one more question you have three minutes

00:56:01,370 --> 00:56:06,050
left is there anyone else or can I just

00:56:04,310 --> 00:56:27,560
bow and you can clap oh wait we've got

00:56:06,050 --> 00:56:29,480
one more yes yeah yeah absolutely the

00:56:27,560 --> 00:56:31,670
land oh the land Oh team have actually

00:56:29,480 --> 00:56:34,250
done an integration with us and we're

00:56:31,670 --> 00:56:36,110
just behind and I you know I think we're

00:56:34,250 --> 00:56:39,140
going to be doing a lot of documentation

00:56:36,110 --> 00:56:40,520
around that fairly soon we've got a new

00:56:39,140 --> 00:56:42,020
team who's just working on that local

00:56:40,520 --> 00:56:43,010
development experience right now a new

00:56:42,020 --> 00:56:44,630
product manager coming in as well

00:56:43,010 --> 00:56:51,610
actually on my team for that

00:56:44,630 --> 00:56:55,950
specifically and yeah so soon to come

00:56:51,610 --> 00:57:03,250
great okay thank you all for coming

00:56:55,950 --> 00:57:03,250

YouTube URL: https://www.youtube.com/watch?v=G9kz0MPpq4o


