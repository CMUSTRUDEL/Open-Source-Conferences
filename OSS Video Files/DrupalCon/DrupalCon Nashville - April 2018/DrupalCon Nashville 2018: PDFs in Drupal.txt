Title: DrupalCon Nashville 2018: PDFs in Drupal
Publication date: 2018-04-11
Playlist: DrupalCon Nashville - April 2018
Description: 
	Portable Document Files (PDFs) are one of the most common file formats in use. They have a reputation as a nearly immutable document rendering compared to regular text or a Word file and appear almost identical across all platforms. Because of this perceived stability, PDFs have thousands of uses, from getting that pixel-perfect print layout to sending secure documents. Itâ€™s a vital format to be able to work with, but making use of PDFs, particularly on the web, can be tricky.

Drupal 8 has the tools to make PDF creation easy and useful to your users, and with the use of Composer alongside Drupal even more tools become available. This session is designed to demonstrate and explore real world solutions to the challenges of PDFs at all levels. Topics covered include:



Browser Print-to-PDF styling
PDF print modules like Entity Print and Printable
Implementing DOMPDF, TCPDF, and other PDF rendering libraries
Utilizing PDF templates for less rendering overhead
Combining PDFs into single documents with tools like FPDI


Attendees should expect that while some examples will be purely based in the admin menus of Drupal, most examples will demonstrate Composer usage as well as some significant PHP coding.
Captions: 
	00:00:05,509 --> 00:00:10,440
all right this is pdfs in Drupal I am

00:00:09,240 --> 00:00:12,660
excited about how many people have

00:00:10,440 --> 00:00:14,549
turned out for this this is something

00:00:12,660 --> 00:00:16,410
I've tried to be teaching for a while

00:00:14,549 --> 00:00:20,100
now trying to get a session for Drupal

00:00:16,410 --> 00:00:21,779
con for a couple years and just the fact

00:00:20,100 --> 00:00:24,060
that this room filled up the way it did

00:00:21,779 --> 00:00:25,500
represents that a lot of other people

00:00:24,060 --> 00:00:28,910
are passionate about this or at least

00:00:25,500 --> 00:00:28,910
have to work with this all the time

00:00:29,910 --> 00:00:36,059
Who am I my name is Dan Hanson I'm a

00:00:34,260 --> 00:00:38,100
lead developer at Spa Group Inc we do

00:00:36,059 --> 00:00:40,829
beta services we do hosting we do

00:00:38,100 --> 00:00:42,570
development obviously mostly Drupal but

00:00:40,829 --> 00:00:44,399
we don't really pigeonhole ourselves we

00:00:42,570 --> 00:00:48,500
all saw our WordPress shop we also are

00:00:44,399 --> 00:00:52,910
generic PHP shop we do everything from

00:00:48,500 --> 00:00:56,579
code development to reports creation

00:00:52,910 --> 00:00:59,070
there are still handful seats around if

00:00:56,579 --> 00:01:04,680
you guys are filtering in not a lot but

00:00:59,070 --> 00:01:08,430
a few work personally with Drupal for

00:01:04,680 --> 00:01:12,000
seven years and I'm an aqua certified

00:01:08,430 --> 00:01:14,400
developer I think it was the t7 test I'm

00:01:12,000 --> 00:01:18,450
working on the d8 ones and I'm jeanna

00:01:14,400 --> 00:01:20,250
pretty cool in my own opinion I was

00:01:18,450 --> 00:01:22,020
always gonna throw in a bat Dan picture

00:01:20,250 --> 00:01:26,970
I'm usually hairier than this I tripped

00:01:22,020 --> 00:01:28,409
out for you guys so but you didn't come

00:01:26,970 --> 00:01:30,810
here to hear about me came here to hear

00:01:28,409 --> 00:01:36,090
about PDFs Drupal so why is that

00:01:30,810 --> 00:01:38,579
important PDFs are used by a large as a

00:01:36,090 --> 00:01:41,640
universal document format you can send

00:01:38,579 --> 00:01:43,320
somebody a doc or docx or an excel file

00:01:41,640 --> 00:01:45,780
but there's never any guarantee it's

00:01:43,320 --> 00:01:47,610
gonna be opened or look the same might

00:01:45,780 --> 00:01:49,649
not have the same fonts might I have the

00:01:47,610 --> 00:01:51,869
same images there could be relatively

00:01:49,649 --> 00:01:55,320
leaked files which is also the case

00:01:51,869 --> 00:01:57,000
occasionally in PDFs but PDFs are used

00:01:55,320 --> 00:01:59,640
to sort of stabilize the document and

00:01:57,000 --> 00:02:03,960
send it in a way that everybody can look

00:01:59,640 --> 00:02:07,200
at it in the same way it was previously

00:02:03,960 --> 00:02:09,660
a closed form at something that Adobe

00:02:07,200 --> 00:02:11,370
created and it was previously an

00:02:09,660 --> 00:02:13,380
expensive format because it took very

00:02:11,370 --> 00:02:15,750
pricey Adobe software or

00:02:13,380 --> 00:02:19,970
third-party software to try to create

00:02:15,750 --> 00:02:23,490
and manage PDFs in any reasonable way

00:02:19,970 --> 00:02:25,260
but the goal of this talk is to sort of

00:02:23,490 --> 00:02:28,560
get a foot in the door in trying to make

00:02:25,260 --> 00:02:31,500
PDF handling as ubiquitous or well

00:02:28,560 --> 00:02:36,870
supported as on the web and particularly

00:02:31,500 --> 00:02:40,350
a Drupal as image handling is and PDFs

00:02:36,870 --> 00:02:44,250
in core we've got these great image

00:02:40,350 --> 00:02:47,640
libraries all throughout Drupal core or

00:02:44,250 --> 00:02:49,290
at least being leveraged in Drupal core

00:02:47,640 --> 00:02:50,880
it would be lovely to see some of these

00:02:49,290 --> 00:02:54,120
PDF libraries sort of join the fray

00:02:50,880 --> 00:02:56,040
maybe not something as large as PDF but

00:02:54,120 --> 00:03:00,450
you know something small that could

00:02:56,040 --> 00:03:01,920
manage different pages PDF TK some sort

00:03:00,450 --> 00:03:05,160
of expansion of that would be lovely

00:03:01,920 --> 00:03:10,320
in fact so let's talk a little bit about

00:03:05,160 --> 00:03:12,690
PDFs PDFs are based on a post grouped if

00:03:10,320 --> 00:03:14,490
you have ever worked with old printer

00:03:12,690 --> 00:03:18,450
drivers and you'll recognise the dot PS

00:03:14,490 --> 00:03:21,150
format which is how your computer would

00:03:18,450 --> 00:03:25,530
send files to printers in that post

00:03:21,150 --> 00:03:29,760
group format it was a private area

00:03:25,530 --> 00:03:32,190
format from Adobe Chris back in 1993 but

00:03:29,760 --> 00:03:35,370
nowadays as recently as 2008 it's

00:03:32,190 --> 00:03:38,760
actually a recognized ISO standard and

00:03:35,370 --> 00:03:39,990
having said that there's also a PDF 2.0

00:03:38,760 --> 00:03:43,470
standard that's actually even more

00:03:39,990 --> 00:03:49,620
recent I think it's 2017 same ISO code

00:03:43,470 --> 00:03:55,590
just I think it's 32,000 - - so easy to

00:03:49,620 --> 00:03:57,540
remember the idea behind PDFs was to

00:03:55,590 --> 00:04:00,720
bring together that PostScript based

00:03:57,540 --> 00:04:03,240
document layout format with font

00:04:00,720 --> 00:04:06,120
embedding and data storage that would

00:04:03,240 --> 00:04:08,250
allow it to be compressible make it easy

00:04:06,120 --> 00:04:10,520
to pass and docume round so it really is

00:04:08,250 --> 00:04:12,690
designed to be a layout tool we're not

00:04:10,520 --> 00:04:14,580
repurposing you know an old file format

00:04:12,690 --> 00:04:16,040
for something that's not meant for it's

00:04:14,580 --> 00:04:17,910
really designed to make it so that

00:04:16,040 --> 00:04:21,479
everybody can see the same thing at the

00:04:17,910 --> 00:04:24,300
same time but there are three key things

00:04:21,479 --> 00:04:27,210
to make PDFs special first and foremost

00:04:24,300 --> 00:04:29,900
is rich media when you look at PDF

00:04:27,210 --> 00:04:34,110
you couldn't see images you could see

00:04:29,900 --> 00:04:36,479
SVG's pngs JPEGs if you're working with

00:04:34,110 --> 00:04:41,580
really specialized PDFs sometimes I've

00:04:36,479 --> 00:04:44,039
seen videos at least linked in PDFs but

00:04:41,580 --> 00:04:47,250
the idea is that you could bring in this

00:04:44,039 --> 00:04:50,039
sort of rich media and have you know at

00:04:47,250 --> 00:04:53,190
least some exciting graphics to look at

00:04:50,039 --> 00:04:55,710
the stead of just text another thing

00:04:53,190 --> 00:04:58,530
that makes PDO special is security it's

00:04:55,710 --> 00:05:00,630
possible to encrypt a PDF make it

00:04:58,530 --> 00:05:05,389
password-protected make it so that only

00:05:00,630 --> 00:05:07,710
people you want to see it can see it I

00:05:05,389 --> 00:05:09,960
wouldn't lean on any sort of PDF

00:05:07,710 --> 00:05:11,639
encryption there's always ways to break

00:05:09,960 --> 00:05:14,190
encryption and as long as this format is

00:05:11,639 --> 00:05:17,370
I'm sure somebody's found a way to snap

00:05:14,190 --> 00:05:20,570
it in half at their whim but it is

00:05:17,370 --> 00:05:22,169
possible to 70 secure document and

00:05:20,570 --> 00:05:24,330
finally and most importantly

00:05:22,169 --> 00:05:25,979
standardization like I said everybody

00:05:24,330 --> 00:05:29,550
could see the same document it's got the

00:05:25,979 --> 00:05:31,650
same layout it's got the same pictures

00:05:29,550 --> 00:05:36,870
it's got the same fonts that's sort of

00:05:31,650 --> 00:05:39,270
the key so knowing what we know about

00:05:36,870 --> 00:05:41,580
PDFs let's move headlong into PDF

00:05:39,270 --> 00:05:43,289
rendering libraries and let me know if I

00:05:41,580 --> 00:05:44,340
tend to dance around the podium so let

00:05:43,289 --> 00:05:47,849
me know if I get too far for the bike

00:05:44,340 --> 00:05:51,090
and you can't hear me PDF fernery

00:05:47,849 --> 00:05:54,090
libraries print to PDF this is not

00:05:51,090 --> 00:05:55,620
actually a library this is really an

00:05:54,090 --> 00:05:58,650
important consideration you want to make

00:05:55,620 --> 00:06:00,210
before you start trying to make PDFs on

00:05:58,650 --> 00:06:02,669
a webpage or website that you're

00:06:00,210 --> 00:06:04,830
creating do you actually need to

00:06:02,669 --> 00:06:09,419
generate these PDFs in code chances are

00:06:04,830 --> 00:06:12,120
you don't specifically the example I'm

00:06:09,419 --> 00:06:14,639
thinking of is the content pages on a

00:06:12,120 --> 00:06:16,229
site if you were backing if you're

00:06:14,639 --> 00:06:18,930
creating PDFs on the back end of the pit

00:06:16,229 --> 00:06:22,770
of the site it's really unnecessary most

00:06:18,930 --> 00:06:24,570
modern browsers have print drivers I

00:06:22,770 --> 00:06:28,469
don't know if you'd contra at this point

00:06:24,570 --> 00:06:32,190
but methods of printing to PDF that do a

00:06:28,469 --> 00:06:35,550
an excellent job of taking care of that

00:06:32,190 --> 00:06:38,310
sort of output it's also very easy to

00:06:35,550 --> 00:06:39,930
control using print style sheets so if

00:06:38,310 --> 00:06:40,940
you have the option if you don't have a

00:06:39,930 --> 00:06:43,970
need to actually

00:06:40,940 --> 00:06:46,640
in a PDF I highly recommend just letting

00:06:43,970 --> 00:06:49,540
the the user print the PDF with Brit

00:06:46,640 --> 00:06:53,740
stylesheet so how do you determine

00:06:49,540 --> 00:06:55,910
whether you do need to generate PDFs you

00:06:53,740 --> 00:06:59,120
generate PDFs if you require precision

00:06:55,910 --> 00:07:00,830
layouts by this I generally mean forms

00:06:59,120 --> 00:07:01,940
but it could be something simpler like

00:07:00,830 --> 00:07:03,440
maybe you're trying to create a

00:07:01,940 --> 00:07:05,030
certificate and you've got all this

00:07:03,440 --> 00:07:07,280
great art but you just want to make sure

00:07:05,030 --> 00:07:13,280
that there's a name in place in the

00:07:07,280 --> 00:07:15,530
right spot you generate PDFs if you need

00:07:13,280 --> 00:07:18,800
to implement a template this is also

00:07:15,530 --> 00:07:20,980
kind of a form thing but if you've got

00:07:18,800 --> 00:07:23,330
you know a stylized tenor or something

00:07:20,980 --> 00:07:25,250
instead of an entire page where the form

00:07:23,330 --> 00:07:28,580
then you could maybe use a template for

00:07:25,250 --> 00:07:30,650
them and then finally if you need to

00:07:28,580 --> 00:07:32,750
implement security features this is

00:07:30,650 --> 00:07:35,120
again not something I would particularly

00:07:32,750 --> 00:07:37,310
rely on but is definitely something that

00:07:35,120 --> 00:07:41,270
would be available if you are generating

00:07:37,310 --> 00:07:44,950
these PDFs alright let's talk about some

00:07:41,270 --> 00:07:47,360
proper libraries now first is J's PDF

00:07:44,950 --> 00:07:49,510
it's client-side rendering library as

00:07:47,360 --> 00:07:51,800
implied by the jeaious and from the PDF

00:07:49,510 --> 00:07:53,480
I'm not gonna spend a lot of time on it

00:07:51,800 --> 00:07:55,880
because this is a back-end dev target

00:07:53,480 --> 00:07:57,290
not a front-end dev talk but it can be

00:07:55,880 --> 00:08:00,590
used to render HTML with the addition of

00:07:57,290 --> 00:08:04,370
html2canvas a rasterized HTML which are

00:08:00,590 --> 00:08:09,860
also component javascript libraries i've

00:08:04,370 --> 00:08:13,130
not used this exclusively that's I'm not

00:08:09,860 --> 00:08:16,850
used as myself but from what I could

00:08:13,130 --> 00:08:19,130
tell of the library commands it reads a

00:08:16,850 --> 00:08:23,990
lot like what you'll see on some of

00:08:19,130 --> 00:08:26,630
these other other sort of PDF generation

00:08:23,990 --> 00:08:28,850
libraries you get the basics you could

00:08:26,630 --> 00:08:31,100
create squares round of rectangles text

00:08:28,850 --> 00:08:33,919
boxes those sort of things lines across

00:08:31,100 --> 00:08:36,500
a page and then you've got the option to

00:08:33,919 --> 00:08:40,550
create HTML with these other libraries

00:08:36,500 --> 00:08:43,480
as part of them you can find that line

00:08:40,550 --> 00:08:46,340
right there I will try to post these

00:08:43,480 --> 00:08:47,840
these slides online

00:08:46,340 --> 00:08:49,460
I've got a Twitter handle Danette

00:08:47,840 --> 00:08:53,680
survive you'll probably be able to find

00:08:49,460 --> 00:08:56,480
those those slides there after the talk

00:08:53,680 --> 00:08:59,150
so rendering library is F PDF

00:08:56,480 --> 00:09:03,920
this one's an oldie it's a server-side

00:08:59,150 --> 00:09:06,980
100% PHP based rendering library that's

00:09:03,920 --> 00:09:10,520
the web address but it's not been

00:09:06,980 --> 00:09:14,110
updated since 2015 and there are a lot

00:09:10,520 --> 00:09:19,640
of things that have come after it

00:09:14,110 --> 00:09:22,880
particularly libraries like M PDF again

00:09:19,640 --> 00:09:26,210
another server-side hundred percent PHP

00:09:22,880 --> 00:09:32,360
based library but it's based pretty

00:09:26,210 --> 00:09:34,250
closely off F PDF and HTML to F PDF the

00:09:32,360 --> 00:09:37,490
big difference between the old version

00:09:34,250 --> 00:09:40,279
of F PDF and M PDF is that M PDF offers

00:09:37,490 --> 00:09:41,900
approved language at utf-8 handling so

00:09:40,279 --> 00:09:47,420
you're gonna have a lot less times where

00:09:41,900 --> 00:09:48,560
it crashes because a lot the problem

00:09:47,420 --> 00:09:50,000
with this library particular is that

00:09:48,560 --> 00:09:52,430
it's known in the documentation as

00:09:50,000 --> 00:09:54,910
lowers of the original tools and that

00:09:52,430 --> 00:09:57,080
comes kind of part parcel with the

00:09:54,910 --> 00:10:00,380
expanded feature handling and language

00:09:57,080 --> 00:10:02,390
abilities but it's not a bad tool it's

00:10:00,380 --> 00:10:05,360
pretty lightweight you could stick it on

00:10:02,390 --> 00:10:09,370
a site and really get you know some

00:10:05,360 --> 00:10:09,370
basic PDF generation done pretty quickly

00:10:09,430 --> 00:10:15,350
there's a site for that TC PDF is

00:10:13,760 --> 00:10:17,720
another one that's very close to F PDF

00:10:15,350 --> 00:10:20,690
and probably got a lot of its motivation

00:10:17,720 --> 00:10:23,690
and inspiration from F PDF it's also

00:10:20,690 --> 00:10:29,180
service server-side generation and 9%

00:10:23,690 --> 00:10:31,310
PHP based the biggest issue with TC PDF

00:10:29,180 --> 00:10:33,410
right now is that there's a new version

00:10:31,310 --> 00:10:35,440
being worked on which means that the

00:10:33,410 --> 00:10:38,000
current functional version is obsolete

00:10:35,440 --> 00:10:41,240
and no longer receives actual feature

00:10:38,000 --> 00:10:42,770
updates that being said it's still a

00:10:41,240 --> 00:10:47,240
powerful library does a great job of

00:10:42,770 --> 00:10:48,920
doing HTML to PDF not my highest

00:10:47,240 --> 00:10:51,470
recommendation but definitely something

00:10:48,920 --> 00:10:55,180
that you could put in place if you want

00:10:51,470 --> 00:10:55,180
some basic PDF generation

00:10:55,370 --> 00:11:01,560
another caveat the old version of this

00:10:58,199 --> 00:11:03,600
doesn't work with PHP 7.2 again sort of

00:11:01,560 --> 00:11:05,880
a function of it being older and not

00:11:03,600 --> 00:11:07,769
getting any updates but it can be

00:11:05,880 --> 00:11:09,630
patched to fix that and I'm sure people

00:11:07,769 --> 00:11:11,579
keep coming out with patches as long as

00:11:09,630 --> 00:11:20,000
the new version is sort of coming down

00:11:11,579 --> 00:11:20,000
the pipeline rendering libraries FPD I

00:11:20,449 --> 00:11:26,010
this is a server-side library as well

00:11:23,399 --> 00:11:28,680
but it's sort of a bonus library works

00:11:26,010 --> 00:11:32,490
for F PDF it also has capability to work

00:11:28,680 --> 00:11:35,639
with TC PDF offers you a lot of extra

00:11:32,490 --> 00:11:38,370
features one of which is allowing the

00:11:35,639 --> 00:11:40,589
use of PDF files as templates which is

00:11:38,370 --> 00:11:44,010
to say you can pull a single file a

00:11:40,589 --> 00:11:47,899
single page from a large PDF and then

00:11:44,010 --> 00:11:51,060
just use that to create a new PDF

00:11:47,899 --> 00:11:53,790
there's also some FP di Extension

00:11:51,060 --> 00:11:56,540
libraries that are very handy the one

00:11:53,790 --> 00:11:59,459
that I would single out would be F PDI

00:11:56,540 --> 00:12:02,279
protection I believe it's called that

00:11:59,459 --> 00:12:04,290
can be used to encrypt PDFs and attach

00:12:02,279 --> 00:12:08,190
passwords and those security features we

00:12:04,290 --> 00:12:12,120
were talking about before you can see

00:12:08,190 --> 00:12:16,290
that information there one big caveat on

00:12:12,120 --> 00:12:19,709
this is that if you were trying to do a

00:12:16,290 --> 00:12:20,970
PDF that's above version 1.4 I'm trying

00:12:19,709 --> 00:12:25,620
to I I don't know exactly where that

00:12:20,970 --> 00:12:27,240
feature set lies but there will be a

00:12:25,620 --> 00:12:29,100
paid ad on that you'll have to get to

00:12:27,240 --> 00:12:33,209
actually use features with those types

00:12:29,100 --> 00:12:35,040
of PDFs it's not incredibly expensive

00:12:33,209 --> 00:12:38,010
licensing is a little confusing but

00:12:35,040 --> 00:12:40,649
we've used it in the past as very very

00:12:38,010 --> 00:12:45,300
successful on more recent versions of F

00:12:40,649 --> 00:12:46,050
PDI but that's something you really only

00:12:45,300 --> 00:12:48,600
need to worry about if you're not

00:12:46,050 --> 00:12:49,860
actually generating your own chances are

00:12:48,600 --> 00:12:52,399
that all in come into play if you're

00:12:49,860 --> 00:12:54,959
getting files from third parties and

00:12:52,399 --> 00:12:56,760
they don't have control over versions or

00:12:54,959 --> 00:13:02,670
feature sets and you're trying to use

00:12:56,760 --> 00:13:05,010
those the one you've probably heard of

00:13:02,670 --> 00:13:06,290
if you've been in this sector is domme

00:13:05,010 --> 00:13:09,779
PDF

00:13:06,290 --> 00:13:11,220
server-side 100% php-based I didn't mean

00:13:09,779 --> 00:13:13,320
to do dramatic fades here just kind of

00:13:11,220 --> 00:13:16,260
happened

00:13:13,320 --> 00:13:18,630
this is a was stuck for a very long time

00:13:16,260 --> 00:13:20,640
on version zero six zero if I remember

00:13:18,630 --> 00:13:22,200
correctly but it's back to active

00:13:20,640 --> 00:13:26,070
development after a long static stint

00:13:22,200 --> 00:13:29,100
didn't do Google code it also cooperates

00:13:26,070 --> 00:13:32,010
pretty well with composer now which is

00:13:29,100 --> 00:13:35,880
super handy because before it was pretty

00:13:32,010 --> 00:13:40,020
rough going that's powerful that's

00:13:35,880 --> 00:13:42,810
widely used there are some large issues

00:13:40,020 --> 00:13:44,520
with it but they are well-documented and

00:13:42,810 --> 00:13:46,830
there are a lot of places I could teach

00:13:44,520 --> 00:13:49,560
you how to get around them the one I

00:13:46,830 --> 00:13:51,770
tend to run into most of all is that if

00:13:49,560 --> 00:13:55,410
I am using any sort of tables for layout

00:13:51,770 --> 00:13:56,850
and have a page that or have a table

00:13:55,410 --> 00:14:00,600
rather that goes longer than the length

00:13:56,850 --> 00:14:02,160
of a single page it will run into a very

00:14:00,600 --> 00:14:05,190
large render loop and probably eat up

00:14:02,160 --> 00:14:08,790
all your RAM and generally probably

00:14:05,190 --> 00:14:13,230
crash eventually there's also no float

00:14:08,790 --> 00:14:17,310
support officially actually it only

00:14:13,230 --> 00:14:18,930
supports CSS 2.1 and html5 so you're not

00:14:17,310 --> 00:14:21,779
going to get the fun things like CSS

00:14:18,930 --> 00:14:25,020
grid or anything like that but that's

00:14:21,779 --> 00:14:27,240
that's pretty common in these HTML to

00:14:25,020 --> 00:14:30,150
PDF libraries it's pretty rare you'll

00:14:27,240 --> 00:14:32,760
see anything that can actually take more

00:14:30,150 --> 00:14:40,880
modern CSS and implement it in a way

00:14:32,760 --> 00:14:44,400
that's going to be useful wk HTML PDF

00:14:40,880 --> 00:14:47,220
this is a server-side

00:14:44,400 --> 00:14:52,230
library as well but is actually not PHP

00:14:47,220 --> 00:14:55,110
based it's a software binary it's

00:14:52,230 --> 00:14:58,020
actually one of the better ones that you

00:14:55,110 --> 00:15:00,959
can use the wk in wkh came out a PDF

00:14:58,020 --> 00:15:03,540
actually stands for WebKit so if you're

00:15:00,959 --> 00:15:06,750
used to building sites and operating

00:15:03,540 --> 00:15:10,470
browsers that use WebKit then you will

00:15:06,750 --> 00:15:12,540
have a better time you'll you'll get

00:15:10,470 --> 00:15:17,839
what you expect when you go to render a

00:15:12,540 --> 00:15:17,839
PDF to HTML or an HTML file to PDF

00:15:18,040 --> 00:15:22,030
because it is a software binary you have

00:15:19,570 --> 00:15:24,940
to use an interface like PHP WK HTML to

00:15:22,030 --> 00:15:28,450
PDF to get it to work with Drupal or

00:15:24,940 --> 00:15:29,890
other PHP applications not a huge issue

00:15:28,450 --> 00:15:32,440
with composer but something you do need

00:15:29,890 --> 00:15:34,600
to be aware of as I said before it's

00:15:32,440 --> 00:15:38,590
predictable rendering use the WebKit

00:15:34,600 --> 00:15:42,700
engine then this is definitely your best

00:15:38,590 --> 00:15:45,400
option if you can get it to work it's

00:15:42,700 --> 00:15:46,840
it's not hard to get the binary but if

00:15:45,400 --> 00:15:49,810
you get the binary and you get the wrong

00:15:46,840 --> 00:15:52,390
version and you don't have an X server

00:15:49,810 --> 00:15:54,160
running then you either have to have

00:15:52,390 --> 00:15:59,740
that X erver or have an X server

00:15:54,160 --> 00:16:02,830
simulator x VfB I think is the one that

00:15:59,740 --> 00:16:04,330
comes to mind but I did recently find

00:16:02,830 --> 00:16:07,180
that there is actually a pair of

00:16:04,330 --> 00:16:08,830
composer based libraries that you could

00:16:07,180 --> 00:16:10,660
just drop in place Drupal 8 in

00:16:08,830 --> 00:16:17,170
particular season work pretty well with

00:16:10,660 --> 00:16:19,930
these there's a I 386 version and an AMD

00:16:17,170 --> 00:16:20,620
64 bit version I haven't seen much

00:16:19,930 --> 00:16:23,170
difference

00:16:20,620 --> 00:16:28,360
I'm sure the 64-bit version will use

00:16:23,170 --> 00:16:29,950
more computing and processing but they

00:16:28,360 --> 00:16:32,440
they seem to be able to drop in pretty

00:16:29,950 --> 00:16:34,960
pretty rate readily and as long as you

00:16:32,440 --> 00:16:37,480
can figure correctly do the job quite

00:16:34,960 --> 00:16:39,910
well so no longer do you have to worry

00:16:37,480 --> 00:16:41,770
about the binaries being working or

00:16:39,910 --> 00:16:45,780
functional or given installed you should

00:16:41,770 --> 00:16:45,780
be able to grab this through composer

00:16:46,290 --> 00:16:57,070
PDF TK this is another server-side one

00:16:51,130 --> 00:16:59,470
that is a software binary it's more of a

00:16:57,070 --> 00:17:02,350
PDF manipulation tool but it's

00:16:59,470 --> 00:17:05,880
incredibly useful offers things like the

00:17:02,350 --> 00:17:14,500
ability to easily add and remove pages

00:17:05,880 --> 00:17:17,560
combine PDFs you can the word it escapes

00:17:14,500 --> 00:17:21,070
me abbreviated cat somebody shout it out

00:17:17,560 --> 00:17:22,690
I could catenate thank you you can't

00:17:21,070 --> 00:17:24,220
make PDFs in such a way that you could

00:17:22,690 --> 00:17:26,910
pull pages from the beginning middle end

00:17:24,220 --> 00:17:29,950
of a particular PDF pull pages from

00:17:26,910 --> 00:17:30,820
different PDF and just stick them all

00:17:29,950 --> 00:17:33,370
together in

00:17:30,820 --> 00:17:37,750
order that you want very cleanly doesn't

00:17:33,370 --> 00:17:39,690
use a lot of RAM this also offers the

00:17:37,750 --> 00:17:42,940
ability to fill PDF templates with data

00:17:39,690 --> 00:17:46,120
so if you have a form that's been built

00:17:42,940 --> 00:17:48,340
out to PDF and you want to either offer

00:17:46,120 --> 00:17:50,200
that form for available for download for

00:17:48,340 --> 00:17:51,460
somebody to fill out manually or if you

00:17:50,200 --> 00:17:53,919
have their information you could pre

00:17:51,460 --> 00:17:58,240
fill those fields this is capable of

00:17:53,919 --> 00:18:01,110
doing that lightning round

00:17:58,240 --> 00:18:03,279
there's a lot of other libraries and I'm

00:18:01,110 --> 00:18:05,980
I'm probably not even scratching the

00:18:03,279 --> 00:18:07,330
surface but these are you know just a

00:18:05,980 --> 00:18:09,340
handful you can look into if you're

00:18:07,330 --> 00:18:12,669
interested in doing server-side

00:18:09,340 --> 00:18:14,590
rendering of PDFs most if not all of

00:18:12,669 --> 00:18:19,269
these in particular will not have

00:18:14,590 --> 00:18:23,620
extensions related in Drupal and or will

00:18:19,269 --> 00:18:26,320
not have easy a PDF or I'm sorry easy

00:18:23,620 --> 00:18:29,259
PHP implementations but they're out

00:18:26,320 --> 00:18:30,610
there it could be a point of you guys to

00:18:29,259 --> 00:18:32,610
write a wrapper class for something like

00:18:30,610 --> 00:18:35,799
Zen the PDF to get that to work a Drupal

00:18:32,610 --> 00:18:38,500
the more options we have the better but

00:18:35,799 --> 00:18:42,639
these are just not really ready for for

00:18:38,500 --> 00:18:45,129
Drupal Hugh's just now speaking of

00:18:42,639 --> 00:18:46,600
Drupal let's talk a little bit about

00:18:45,129 --> 00:18:50,440
some of the PDF models that are out

00:18:46,600 --> 00:18:53,769
there for Drupal 8 right now I specify

00:18:50,440 --> 00:18:56,320
Drupal 8 because there are a lot of PDF

00:18:53,769 --> 00:18:59,049
modules in the Drupal 7 environment that

00:18:56,320 --> 00:19:02,799
have just not been updated or upgraded

00:18:59,049 --> 00:19:04,929
to Drupal 8 some of them are leaving

00:19:02,799 --> 00:19:08,049
some gaps in ecosystems but some of them

00:19:04,929 --> 00:19:12,580
were superfluous to begin with so it's

00:19:08,049 --> 00:19:13,570
really up to the person controlling of

00:19:12,580 --> 00:19:17,440
module West and whether or not they're

00:19:13,570 --> 00:19:19,899
gonna come over ever but we have a

00:19:17,440 --> 00:19:23,860
couple modules now that do the job quite

00:19:19,899 --> 00:19:25,509
well for what most people need if you

00:19:23,860 --> 00:19:28,029
worked with Drupal 7 PDFs you'll

00:19:25,509 --> 00:19:30,610
remember printer email and PDF versions

00:19:28,029 --> 00:19:35,289
well there's a Drupal 8 version now they

00:19:30,610 --> 00:19:37,779
call printable it is more or less the

00:19:35,289 --> 00:19:40,510
same thing but is not my top

00:19:37,779 --> 00:19:43,320
recommendation it just got stable as the

00:19:40,510 --> 00:19:43,320
end of last year

00:19:45,660 --> 00:19:50,970
it also relies on sub-model the PDF API

00:19:48,690 --> 00:19:52,200
module which unfortunately is not yet

00:19:50,970 --> 00:19:56,180
stable it's actually still in

00:19:52,200 --> 00:20:00,120
development the big issue with that is

00:19:56,180 --> 00:20:03,690
that PDF API does not install without

00:20:00,120 --> 00:20:05,070
the older version of dot PDF so you can

00:20:03,690 --> 00:20:07,950
use this if you're comfortable with

00:20:05,070 --> 00:20:10,170
using the feature set of Dom PDF zero

00:20:07,950 --> 00:20:12,030
six zero you won't be able to use that

00:20:10,170 --> 00:20:16,920
newer zero eight zero that's a little

00:20:12,030 --> 00:20:19,410
more stable my recommendation for

00:20:16,920 --> 00:20:22,740
actually rendering PDFs right now is in

00:20:19,410 --> 00:20:25,830
2d print it's got a flexible library

00:20:22,740 --> 00:20:30,180
selection very similar to the printable

00:20:25,830 --> 00:20:31,440
module there's no version issues you

00:20:30,180 --> 00:20:33,470
could call current branches for all of

00:20:31,440 --> 00:20:35,910
those libraries as far as I could tell

00:20:33,470 --> 00:20:38,640
it doesn't seem to have any upper cap on

00:20:35,910 --> 00:20:42,660
anything so there may be bugs but it

00:20:38,640 --> 00:20:44,340
should be good moving for for now and

00:20:42,660 --> 00:20:47,630
it's uh in my opinion the best

00:20:44,340 --> 00:20:47,630
replacement for the old module

00:20:53,110 --> 00:21:00,020
yes but one of the examples we're going

00:20:57,679 --> 00:21:03,140
to go over a little bit is really just

00:21:00,020 --> 00:21:04,880
how to render outside of an empty it'll

00:21:03,140 --> 00:21:11,780
be the same libraries and it's actually

00:21:04,880 --> 00:21:14,659
usually pretty simple to do but the the

00:21:11,780 --> 00:21:17,299
M&E print module is actually going to be

00:21:14,659 --> 00:21:19,340
the only way is going to be only

00:21:17,299 --> 00:21:21,200
printing entities which fortunately you

00:21:19,340 --> 00:21:23,360
know Drupal 8 made everything kind of in

00:21:21,200 --> 00:21:25,220
two entities so you should be pretty

00:21:23,360 --> 00:21:27,530
able to print everything I think this

00:21:25,220 --> 00:21:32,030
also includes extension module that

00:21:27,530 --> 00:21:33,679
allows you to print views but you're

00:21:32,030 --> 00:21:42,350
right in saying that it's it's focused

00:21:33,679 --> 00:21:44,360
on entities another useful PDF Drupal

00:21:42,350 --> 00:21:47,179
module is fill PDF this has been around

00:21:44,360 --> 00:21:48,620
for a while and it's pretty handy but it

00:21:47,179 --> 00:21:51,850
doesn't exactly what it sets off at in

00:21:48,620 --> 00:21:54,559
it fills PDF templates with data

00:21:51,850 --> 00:21:56,030
basically the the form methodology I was

00:21:54,559 --> 00:21:57,830
talking about talking about before where

00:21:56,030 --> 00:21:59,960
you build a format a PDF and then you

00:21:57,830 --> 00:22:05,559
can actually take that PDF pre fill

00:21:59,960 --> 00:22:09,380
those fields uses that PDF TK module for

00:22:05,559 --> 00:22:11,510
software or you can actually use it to

00:22:09,380 --> 00:22:14,240
leverage a third-party service if you

00:22:11,510 --> 00:22:17,270
don't have the ability to install PDF TK

00:22:14,240 --> 00:22:20,299
on that system a third party service is

00:22:17,270 --> 00:22:21,950
paid but again it's one of those things

00:22:20,299 --> 00:22:30,159
that's you know probably gonna be a

00:22:21,950 --> 00:22:33,980
monthly fee for however long because of

00:22:30,159 --> 00:22:37,010
it using PDFs as templates and because

00:22:33,980 --> 00:22:39,830
you can actually opt out and have it be

00:22:37,010 --> 00:22:41,270
rendered sort of alpha off-site it'll

00:22:39,830 --> 00:22:45,020
greatly reduce the overhead of creating

00:22:41,270 --> 00:22:47,330
PDFs if you could use this module but

00:22:45,020 --> 00:22:52,220
again not everything is gonna be able to

00:22:47,330 --> 00:22:56,590
be templatized so now let's go to some

00:22:52,220 --> 00:22:56,590
examples stupid PDF tricks

00:22:58,070 --> 00:23:06,950
we'll see how many of these work so you

00:23:02,780 --> 00:23:10,750
want to make a PDF from HTML use any

00:23:06,950 --> 00:23:13,820
print with WK HTML the PDF or down PDF

00:23:10,750 --> 00:23:16,270
you know that's what it's built for but

00:23:13,820 --> 00:23:18,140
of course what if you want to build it

00:23:16,270 --> 00:23:20,330
something based on something that's not

00:23:18,140 --> 00:23:21,590
an entity well let's take a quick look

00:23:20,330 --> 00:23:31,430
at a demo as to what that might look

00:23:21,590 --> 00:23:35,510
like actually so I've got these demos

00:23:31,430 --> 00:23:40,550
I'm running a Drupal 8 instance fully

00:23:35,510 --> 00:23:43,070
upgraded on Doxil if anybody's not using

00:23:40,550 --> 00:23:45,020
Doxil or D dev or something similar like

00:23:43,070 --> 00:23:47,360
that for containerized level development

00:23:45,020 --> 00:23:50,240
I highly recommend it

00:23:47,360 --> 00:23:53,960
this is also completely based off of a

00:23:50,240 --> 00:23:55,280
composer which I will crack that up in a

00:23:53,960 --> 00:23:58,730
little bit then we'll take a look at

00:23:55,280 --> 00:24:02,300
what else being included there but very

00:23:58,730 --> 00:24:05,530
straightforward here demo one will make

00:24:02,300 --> 00:24:08,960
a PDF from HTML source click here

00:24:05,530 --> 00:24:12,500
generates PDF for us very basic using

00:24:08,960 --> 00:24:18,110
the HTML that we just saw we can also

00:24:12,500 --> 00:24:20,330
use an image in our PDFs the sites

00:24:18,110 --> 00:24:21,770
actually supposed to be a work in

00:24:20,330 --> 00:24:22,820
progress fansite for this game called

00:24:21,770 --> 00:24:27,290
drop mix if you haven't played it very

00:24:22,820 --> 00:24:33,650
fun so let's take a look at the code

00:24:27,290 --> 00:24:38,000
behind that this is just the I have a

00:24:33,650 --> 00:24:40,930
basic module here you know just a little

00:24:38,000 --> 00:24:43,610
bit of routing to do pages Drupal 8

00:24:40,930 --> 00:24:45,890
nothing in the module a a little bit in

00:24:43,610 --> 00:24:49,250
the info but most everything here is

00:24:45,890 --> 00:24:54,500
based on these controllers take a look

00:24:49,250 --> 00:24:58,300
at this first controller key points to

00:24:54,500 --> 00:25:01,130
look at here we're including the Dom PDF

00:24:58,300 --> 00:25:03,800
library here so then we can use it

00:25:01,130 --> 00:25:05,600
within the controller I've got just a

00:25:03,800 --> 00:25:09,440
quick bit of markup here that's all

00:25:05,600 --> 00:25:11,330
stuck into a string you can see this

00:25:09,440 --> 00:25:13,159
you could see this example and I'll

00:25:11,330 --> 00:25:17,629
actually post this code alongside the

00:25:13,159 --> 00:25:19,070
slide so once I get it online but this

00:25:17,629 --> 00:25:22,279
example was pulled directly from the Dom

00:25:19,070 --> 00:25:24,620
PDF documentation page it's very basic

00:25:22,279 --> 00:25:27,879
the Dom PDF you create a new one you

00:25:24,620 --> 00:25:30,049
load the HTML that we defined up here

00:25:27,879 --> 00:25:34,159
come down you can set options like the

00:25:30,049 --> 00:25:36,620
paper size letter and orientation

00:25:34,159 --> 00:25:42,009
landscape then you just render it and

00:25:36,620 --> 00:25:45,110
you stream it back to the user the other

00:25:42,009 --> 00:25:47,600
one the second one that actually used an

00:25:45,110 --> 00:25:50,809
image is not too different the biggest

00:25:47,600 --> 00:25:51,860
difference is actually trying to

00:25:50,809 --> 00:25:57,320
retrieve the image you'll have to use

00:25:51,860 --> 00:26:00,350
the internal path within the actual

00:25:57,320 --> 00:26:02,600
server as opposed to trying to you know

00:26:00,350 --> 00:26:04,190
reference it from outside I believe

00:26:02,600 --> 00:26:06,429
there are Dom PDF settings that you

00:26:04,190 --> 00:26:08,809
could use to reference files externally

00:26:06,429 --> 00:26:14,509
but this was the fastest way to get

00:26:08,809 --> 00:26:16,779
together an example in time for this so

00:26:14,509 --> 00:26:21,080
that's basically how you put together

00:26:16,779 --> 00:26:24,529
you know your basic HTML to PDF outside

00:26:21,080 --> 00:26:27,080
of identity it's gonna be basically the

00:26:24,529 --> 00:26:29,750
same for anything else that renders HTML

00:26:27,080 --> 00:26:30,409
to PDF obviously the function names will

00:26:29,750 --> 00:26:32,389
be a little different

00:26:30,409 --> 00:26:34,340
but everything's got everything that

00:26:32,389 --> 00:26:39,559
I've listed in the presentation so far

00:26:34,340 --> 00:26:40,549
has different information about what

00:26:39,559 --> 00:26:42,980
those functions are called

00:26:40,549 --> 00:26:44,000
and how to access them their

00:26:42,980 --> 00:26:47,659
documentation is gonna be pretty

00:26:44,000 --> 00:26:50,500
complete when you look it up so let's

00:26:47,659 --> 00:26:50,500
take a look at

00:26:56,830 --> 00:27:03,110
our second example here combining two

00:26:59,299 --> 00:27:05,419
PDFs the best way to go about that is

00:27:03,110 --> 00:27:07,880
actually to use that PDF TK library and

00:27:05,419 --> 00:27:13,429
a wrapper that makes it accessible to

00:27:07,880 --> 00:27:15,169
PHP such as this one this is actually

00:27:13,429 --> 00:27:16,970
available through composer as most of

00:27:15,169 --> 00:27:21,250
these libraries are so that's pretty

00:27:16,970 --> 00:27:21,250
handy we'll take a look at the demo here

00:27:28,029 --> 00:27:33,799
so demo to combine two PDFs

00:27:31,580 --> 00:27:35,990
we'll look at this real quick basically

00:27:33,799 --> 00:27:38,570
have copies of those original PDFs that

00:27:35,990 --> 00:27:40,700
I generated back on the back end here I

00:27:38,570 --> 00:27:42,140
think it's either not any different than

00:27:40,700 --> 00:27:44,570
the ones that were generated before but

00:27:42,140 --> 00:27:48,320
now we're going to combine them

00:27:44,570 --> 00:27:50,029
click link outputs PDF and you can see

00:27:48,320 --> 00:27:53,960
both those PDFs are together in here

00:27:50,029 --> 00:27:59,299
using PDF TK let's crack open the code

00:27:53,960 --> 00:28:01,700
on that one so this is really

00:27:59,299 --> 00:28:06,020
straightforward with PDF TK you'll

00:28:01,700 --> 00:28:10,039
include the PDF TK wrapper and the PDF

00:28:06,020 --> 00:28:14,510
class and then you just define this new

00:28:10,039 --> 00:28:15,770
PDF you give it an A and a B and however

00:28:14,510 --> 00:28:18,980
many documents you want to attach

00:28:15,770 --> 00:28:21,080
together at the same time one thing I

00:28:18,980 --> 00:28:23,330
have run into in the past on this is if

00:28:21,080 --> 00:28:25,520
you're trying to do you know a dozen

00:28:23,330 --> 00:28:27,020
PDFs and combining them together much

00:28:25,520 --> 00:28:30,380
better idea to do them all at the same

00:28:27,020 --> 00:28:32,690
time instead of sticking on one saving

00:28:30,380 --> 00:28:35,270
sinking on one saving you will crash

00:28:32,690 --> 00:28:36,440
your site that way so if you've got all

00:28:35,270 --> 00:28:40,220
the documents put them all together at

00:28:36,440 --> 00:28:42,320
the same time again you'll see we're

00:28:40,220 --> 00:28:44,600
attaching through this document root

00:28:42,320 --> 00:28:46,909
base path and that's just gonna be here

00:28:44,600 --> 00:28:49,820
your best default way to sort of access

00:28:46,909 --> 00:28:56,419
any file in the system if you are able

00:28:49,820 --> 00:28:59,240
to do that let me actually go to the

00:28:56,419 --> 00:29:02,240
example set I have listed here because

00:28:59,240 --> 00:29:03,500
that's got a bit more see how it's

00:29:02,240 --> 00:29:05,259
pulling gifts until the last minute here

00:29:03,500 --> 00:29:07,970
nice

00:29:05,259 --> 00:29:11,919
that's got a bit more bust example that

00:29:07,970 --> 00:29:11,919
we can take a look at specifically

00:29:12,729 --> 00:29:19,129
looking at the cat you can see here

00:29:15,950 --> 00:29:22,190
you've got a PDF with multiple pages and

00:29:19,129 --> 00:29:24,350
you're able to pull you know pages one

00:29:22,190 --> 00:29:25,970
through five and then if you want to set

00:29:24,350 --> 00:29:29,989
an array of pages to pull you post seven

00:29:25,970 --> 00:29:31,429
four nine and if you needed to in that

00:29:29,989 --> 00:29:33,649
way you could actually just take a

00:29:31,429 --> 00:29:37,159
regular PDF and cut down the amount of

00:29:33,649 --> 00:29:38,720
pages you had on it you also have the

00:29:37,159 --> 00:29:43,549
ability to specify password if you need

00:29:38,720 --> 00:29:45,619
to a lot of different documents that you

00:29:43,549 --> 00:29:47,389
could specify so if you have things

00:29:45,619 --> 00:29:50,929
defined as a and B you could actually

00:29:47,389 --> 00:29:53,210
pull from a from B so on and so forth a

00:29:50,929 --> 00:29:57,970
lot of a lot of functionality in this

00:29:53,210 --> 00:29:57,970
PDF DK library that's very handy

00:30:03,669 --> 00:30:09,109
not sure why I made slides for each of

00:30:05,869 --> 00:30:10,690
these slows down things so we want to

00:30:09,109 --> 00:30:13,609
dump a generator PDF into a file field

00:30:10,690 --> 00:30:23,019
very easy to do with true plates entity

00:30:13,609 --> 00:30:23,019
handling so secondly the demo

00:30:29,769 --> 00:30:35,779
so dumb PDF in the file field so I've

00:30:33,950 --> 00:30:39,620
actually created a note the note has a

00:30:35,779 --> 00:30:41,779
single field field PDF field and now

00:30:39,620 --> 00:30:46,490
this file has been dumped into it and

00:30:41,779 --> 00:30:51,279
it's very familiar so we'll take a look

00:30:46,490 --> 00:30:51,279
at the example 3 controller here

00:30:52,399 --> 00:30:58,159
I think we've added a couple libraries

00:30:55,580 --> 00:31:01,639
here notably the node library so that we

00:30:58,159 --> 00:31:04,940
can generate the node excuse me the file

00:31:01,639 --> 00:31:06,350
library so we generate the file the PDF

00:31:04,940 --> 00:31:09,649
DK library that was something we already

00:31:06,350 --> 00:31:11,480
had handy URL and redirect response our

00:31:09,649 --> 00:31:13,779
two libraries that we're just eating to

00:31:11,480 --> 00:31:17,179
redirect to that node after the fact

00:31:13,779 --> 00:31:19,279
most of this at the top seems familiar

00:31:17,179 --> 00:31:21,019
we're just concatenated these two PDFs

00:31:19,279 --> 00:31:23,600
and then we'll execute that so the

00:31:21,019 --> 00:31:25,130
concatenation is actually complete and

00:31:23,600 --> 00:31:29,510
then we'll grab the contents of that

00:31:25,130 --> 00:31:32,570
file using this get Tempe get temp file

00:31:29,510 --> 00:31:35,090
here and foggy contents so that we have

00:31:32,570 --> 00:31:37,279
that 'no string and then everything from

00:31:35,090 --> 00:31:39,559
there it's all drupal-based so we'll

00:31:37,279 --> 00:31:44,090
save that string using file save data I

00:31:39,559 --> 00:31:46,269
give it a destination set it up in the

00:31:44,090 --> 00:31:50,120
the public file directory add name to it

00:31:46,269 --> 00:31:52,370
rename if there's more than one and then

00:31:50,120 --> 00:31:55,309
we'll create the node like normal note

00:31:52,370 --> 00:31:56,929
create type title and then in the field

00:31:55,309 --> 00:31:58,880
in particular we'll have the target ID

00:31:56,929 --> 00:32:01,309
of the file we have an alt text we have

00:31:58,880 --> 00:32:03,620
title text and once that's all wrapped

00:32:01,309 --> 00:32:05,389
up we'll just save the code and from

00:32:03,620 --> 00:32:11,419
there we'll just redirect so we can

00:32:05,389 --> 00:32:13,720
actually look at it once it's saved all

00:32:11,419 --> 00:32:13,720
right

00:32:16,409 --> 00:32:19,960
now I've talked a little bit about

00:32:18,159 --> 00:32:23,409
templates now we're gonna see how to

00:32:19,960 --> 00:32:24,940
actually fill one out if you can use

00:32:23,409 --> 00:32:27,879
fill PDF for it

00:32:24,940 --> 00:32:28,840
it's obviously when it's built for but

00:32:27,879 --> 00:32:32,259
sometimes you want to do it

00:32:28,840 --> 00:32:44,769
programmatically so we'll use PDF TK and

00:32:32,259 --> 00:32:46,509
have its wrapper again to do that so

00:32:44,769 --> 00:32:49,570
we'll take a look at the original

00:32:46,509 --> 00:32:53,850
template first I've got a PDF here that

00:32:49,570 --> 00:32:56,110
I created in Adobe Acrobat very basic

00:32:53,850 --> 00:32:58,840
literally just this text and then

00:32:56,110 --> 00:33:04,779
there's a text field down here that

00:32:58,840 --> 00:33:05,919
you're able to fill in the the key to

00:33:04,779 --> 00:33:07,090
this is that you have to remember the

00:33:05,919 --> 00:33:09,730
names of those fields so in particular

00:33:07,090 --> 00:33:12,759
this one is called text with a capital T

00:33:09,730 --> 00:33:15,549
one if we don't have those names

00:33:12,759 --> 00:33:16,769
I believe PDF TK has specific functions

00:33:15,549 --> 00:33:19,749
that allow you to retrieve those names

00:33:16,769 --> 00:33:25,720
but it's much faster obviously just to

00:33:19,749 --> 00:33:30,149
remember them if you're able so we saw

00:33:25,720 --> 00:33:30,149
that we'll see the generated one here

00:33:31,379 --> 00:33:38,490
let's just got because we're excited

00:33:35,200 --> 00:33:40,480
right yeah excited we filled it out

00:33:38,490 --> 00:33:44,529
we're as good as someone with the

00:33:40,480 --> 00:33:50,200
keyboard take a look at the code behind

00:33:44,529 --> 00:33:53,980
that the libraries again just a PDF TK

00:33:50,200 --> 00:33:56,230
wrapper library here we're just calling

00:33:53,980 --> 00:34:01,119
it in the way that we know how and then

00:33:56,230 --> 00:34:03,940
there's a specific full form actual

00:34:01,119 --> 00:34:06,299
function here that lets you specify the

00:34:03,940 --> 00:34:07,960
name of the field the value of the field

00:34:06,299 --> 00:34:10,179
obviously that's gonna be a little bit

00:34:07,960 --> 00:34:13,329
different for things like radio buttons

00:34:10,179 --> 00:34:15,879
text button radio buttons checkboxes

00:34:13,329 --> 00:34:17,319
things like that select boxes I think

00:34:15,879 --> 00:34:18,700
I'm a little weird too

00:34:17,319 --> 00:34:22,409
they're definitely more complete

00:34:18,700 --> 00:34:25,330
examples on the PDF TK wrapper

00:34:22,409 --> 00:34:30,679
demonstration site

00:34:25,330 --> 00:34:32,330
and I had a fifth example but I don't

00:34:30,679 --> 00:34:37,970
think that actually got wrapped up so I

00:34:32,330 --> 00:34:41,629
think that might actually be it so

00:34:37,970 --> 00:34:43,609
questions anybody has any feel free to

00:34:41,629 --> 00:34:54,349
line up to the microphone we want to get

00:34:43,609 --> 00:34:55,790
that captured on the recording do you

00:34:54,349 --> 00:34:58,970
happen to know if any of these libraries

00:34:55,790 --> 00:35:02,330
work with some of the modern print CSS

00:34:58,970 --> 00:35:06,080
features like chapter headings and page

00:35:02,330 --> 00:35:07,490
numbers page offset for printing

00:35:06,080 --> 00:35:09,590
I'm not sure if anybody could hear him

00:35:07,490 --> 00:35:12,920
can anybody hear him okay the question

00:35:09,590 --> 00:35:15,500
was do any of these libraries work with

00:35:12,920 --> 00:35:19,390
some of the more modern print settings

00:35:15,500 --> 00:35:22,450
print CSS settings like page breaks and

00:35:19,390 --> 00:35:25,820
things like that and I can honestly say

00:35:22,450 --> 00:35:30,890
sometimes I think your best bet is going

00:35:25,820 --> 00:35:32,869
to be with W key w k HT not a PDF just

00:35:30,890 --> 00:35:34,880
because it's got the webcam library

00:35:32,869 --> 00:35:37,040
backing it I know there's limited

00:35:34,880 --> 00:35:39,740
support as well within don PDF but I

00:35:37,040 --> 00:35:41,660
wouldn't lean very heavily on it your

00:35:39,740 --> 00:35:44,839
best bet for those sorts of CSS is going

00:35:41,660 --> 00:35:47,720
to be printed PDF that's where you'll

00:35:44,839 --> 00:35:49,099
see both success but even the browsers

00:35:47,720 --> 00:35:54,530
are sort of hazy about which ones

00:35:49,099 --> 00:35:56,660
support which the by and large stone my

00:35:54,530 --> 00:35:58,970
solutions we usually include something

00:35:56,660 --> 00:36:01,160
that like looks at the length of the

00:35:58,970 --> 00:36:03,560
page and it's like oh hey I'm not sure

00:36:01,160 --> 00:36:05,270
if this is all going to fit and will

00:36:03,560 --> 00:36:06,710
break down to individual pages so you

00:36:05,270 --> 00:36:10,040
may end up having to create a solution

00:36:06,710 --> 00:36:12,770
like that as well yes do any of those

00:36:10,040 --> 00:36:17,450
engines create tagged PDFs for

00:36:12,770 --> 00:36:20,150
accessibility I don't know off the top

00:36:17,450 --> 00:36:23,900
of my head even if it brought in like

00:36:20,150 --> 00:36:26,800
the HTML tags could potentially could

00:36:23,900 --> 00:36:28,680
could the temp could we use the valid

00:36:26,800 --> 00:36:30,599
PDF

00:36:28,680 --> 00:36:33,089
instead in the template instead of HTML

00:36:30,599 --> 00:36:35,039
tags I I admittedly don't know very much

00:36:33,089 --> 00:36:36,660
about accessibility tags and how they

00:36:35,039 --> 00:36:39,779
work within PDFs

00:36:36,660 --> 00:36:40,799
I would say some of the older libraries

00:36:39,779 --> 00:36:42,510
you're not gonna stand much of a chance

00:36:40,799 --> 00:36:44,789
of seeing a lot that in there because

00:36:42,510 --> 00:36:46,380
most of what they do is just render

00:36:44,789 --> 00:36:48,329
lines and boxes and things that

00:36:46,380 --> 00:36:50,279
correspond to what the Pete what the

00:36:48,329 --> 00:36:52,170
HTML actually shows it won't actually

00:36:50,279 --> 00:36:54,650
bring over any sort of accessibility

00:36:52,170 --> 00:36:57,420
features or classes things like that

00:36:54,650 --> 00:36:59,369
again that's another situation where you

00:36:57,420 --> 00:37:02,789
may have more luck on something like wk

00:36:59,369 --> 00:37:07,200
HTML to PDF but I'm not sure even on

00:37:02,789 --> 00:37:09,119
that that was actually my question so I

00:37:07,200 --> 00:37:11,369
can just say what we've found so far is

00:37:09,119 --> 00:37:14,700
none of the PDF libraries that you've

00:37:11,369 --> 00:37:17,059
talked about support tagged PDFs the

00:37:14,700 --> 00:37:21,930
closest we've been able to get is to use

00:37:17,059 --> 00:37:24,299
pre tagged PDFs and fill in boxes that

00:37:21,930 --> 00:37:27,029
works the tags the HTML tags don't

00:37:24,299 --> 00:37:29,900
translate to accessibility tags so that

00:37:27,029 --> 00:37:32,250
doesn't work but if your content is

00:37:29,900 --> 00:37:34,440
structured enough that you can just fill

00:37:32,250 --> 00:37:38,150
it in then that works but if you have

00:37:34,440 --> 00:37:40,349
like dynamic tables or dynamic box sizes

00:37:38,150 --> 00:37:43,109
yeah that's an excellent recommendation

00:37:40,349 --> 00:37:44,400
any anytime you can use a template PDF

00:37:43,109 --> 00:37:46,109
as the basis for something you're

00:37:44,400 --> 00:37:48,480
actually able to generate then that's

00:37:46,109 --> 00:37:50,700
gonna be a lot faster because you've got

00:37:48,480 --> 00:37:55,049
a lot less information actually to

00:37:50,700 --> 00:37:56,279
render or complete and be as he said

00:37:55,049 --> 00:37:57,539
you're going to have those accessibility

00:37:56,279 --> 00:37:59,369
functions available to you when you

00:37:57,539 --> 00:38:03,990
generate the initial PDF and those will

00:37:59,369 --> 00:38:07,770
carry over once that's filled out one of

00:38:03,990 --> 00:38:12,029
the issues I had with PDF generation is

00:38:07,770 --> 00:38:16,680
like performance like and the other one

00:38:12,029 --> 00:38:18,750
being with HTML like rendering HTML that

00:38:16,680 --> 00:38:22,500
being said what would you say is the

00:38:18,750 --> 00:38:26,190
most well-rounded PDF generation tool

00:38:22,500 --> 00:38:28,829
meaning it like it's fast and it

00:38:26,190 --> 00:38:32,279
basically renders everything the way

00:38:28,829 --> 00:38:36,359
you'd expect again I'm gonna go back to

00:38:32,279 --> 00:38:38,190
wh you know in a PDF the the best part

00:38:36,359 --> 00:38:39,779
of that as it is a software binary so

00:38:38,190 --> 00:38:41,859
it's gonna run outside your PHP process

00:38:39,779 --> 00:38:44,739
in the first place which means it's not

00:38:41,859 --> 00:38:46,989
the website even if it is you know run

00:38:44,739 --> 00:38:48,640
slower it may sucks up resources from it

00:38:46,989 --> 00:38:52,450
but it's not going to kill you know

00:38:48,640 --> 00:38:54,279
rendering the rest of the site obviously

00:38:52,450 --> 00:38:56,829
there are some libraries you can run

00:38:54,279 --> 00:38:58,589
separately and distinctly particularly

00:38:56,829 --> 00:39:04,569
for writing containerized environments

00:38:58,589 --> 00:39:06,630
Dom PDF most notably is a thief and scum

00:39:04,569 --> 00:39:09,489
when it comes to holding on to resources

00:39:06,630 --> 00:39:14,319
and also is known to crash in the ways

00:39:09,489 --> 00:39:16,150
that I described earlier but it's as far

00:39:14,319 --> 00:39:19,829
as a drop-in solution it's one of the

00:39:16,150 --> 00:39:22,539
better ones for rendering a happy medium

00:39:19,829 --> 00:39:25,239
is probably somewhere along the lines of

00:39:22,539 --> 00:39:26,410
M PDF it's gonna be an allure library

00:39:25,239 --> 00:39:31,959
it's not gonna handle nearly as much

00:39:26,410 --> 00:39:34,059
stuff but it is or sorry M PDF or TC PDF

00:39:31,959 --> 00:39:37,410
but those those seem to be pretty

00:39:34,059 --> 00:39:37,410
lightweight when it comes to rendering

00:39:53,670 --> 00:39:59,109
anything past F PDF is going to have

00:39:56,259 --> 00:40:03,609
more success there's there's better

00:39:59,109 --> 00:40:05,979
language support but as far as going as

00:40:03,609 --> 00:40:07,839
far as like even write the left

00:40:05,979 --> 00:40:13,829
I can't guarantee any of those libraries

00:40:07,839 --> 00:40:13,829
are gonna be great yeah

00:40:14,259 --> 00:40:19,390
have you tried WH you know to the PDF

00:40:16,890 --> 00:40:23,469
okay I'd recommend trying that

00:40:19,390 --> 00:40:25,989
but again that's gonna be sort of a gray

00:40:23,469 --> 00:40:29,650
area honestly until you actually get

00:40:25,989 --> 00:40:31,299
Penda coated paper basically but that's

00:40:29,650 --> 00:40:32,680
because it's operating based on the

00:40:31,299 --> 00:40:34,420
WebKit engine you're gonna see probably

00:40:32,680 --> 00:40:35,949
more success just because the web

00:40:34,420 --> 00:40:38,130
content and will support something like

00:40:35,949 --> 00:40:38,130
that

00:40:39,349 --> 00:40:45,300
it's probably a quick question for you

00:40:41,670 --> 00:40:47,970
but using the fill PDF and having a

00:40:45,300 --> 00:40:49,770
template base mmm is there a way from

00:40:47,970 --> 00:40:53,480
using that library that you can actually

00:40:49,770 --> 00:40:55,470
hard code in coordinates on the page

00:40:53,480 --> 00:40:56,790
that's a good question

00:40:55,470 --> 00:40:59,160
like say if you were trying to place an

00:40:56,790 --> 00:41:01,950
image well it's more or less for like a

00:40:59,160 --> 00:41:04,770
name like we put the name of the person

00:41:01,950 --> 00:41:07,740
that's using these forms on the bottom

00:41:04,770 --> 00:41:09,119
of every page of the form okay we have a

00:41:07,740 --> 00:41:11,220
library right now they'll do that in

00:41:09,119 --> 00:41:12,530
WordPress but we're gonna be converting

00:41:11,220 --> 00:41:14,880
over to Drupal so I was just curious

00:41:12,530 --> 00:41:17,369
honestly the best way if you're planning

00:41:14,880 --> 00:41:18,750
on using fill PDF which means you're

00:41:17,369 --> 00:41:20,760
basically coming in with a template I

00:41:18,750 --> 00:41:22,920
would just have another field at the

00:41:20,760 --> 00:41:24,930
bottom of that template that says you

00:41:22,920 --> 00:41:27,150
know call it name or something and if

00:41:24,930 --> 00:41:36,030
you use the same field as in the same

00:41:27,150 --> 00:41:37,740
thing yeah it's it should just fill in a

00:41:36,030 --> 00:41:40,320
question someone asked about entity

00:41:37,740 --> 00:41:42,300
print and you can definitely print the

00:41:40,320 --> 00:41:44,400
views like with contextual filters and

00:41:42,300 --> 00:41:46,230
everything so we're doing that with web

00:41:44,400 --> 00:41:48,690
form submissions to create certificates

00:41:46,230 --> 00:41:50,490
excellent I was wondering if you had any

00:41:48,690 --> 00:41:56,940
recommendations about printing something

00:41:50,490 --> 00:41:58,830
like you know Drupal book um I honestly

00:41:56,940 --> 00:41:59,910
haven't tinkered much with you're

00:41:58,830 --> 00:42:03,089
talking about the book module in

00:41:59,910 --> 00:42:04,619
particular out of like is that still

00:42:03,089 --> 00:42:07,530
around and honest and interpolate

00:42:04,619 --> 00:42:10,950
honestly I I I don't have much

00:42:07,530 --> 00:42:12,810
experience with it and I can't say it

00:42:10,950 --> 00:42:14,190
will render perfectly because I don't

00:42:12,810 --> 00:42:17,070
think it's abuse based and I don't think

00:42:14,190 --> 00:42:21,330
it's 70 based it really is kind of its

00:42:17,070 --> 00:42:22,680
own thing but I'm sure with some

00:42:21,330 --> 00:42:23,640
experimentation you could probably get

00:42:22,680 --> 00:42:26,310
it to render

00:42:23,640 --> 00:42:30,300
basically a lot of times what I end up

00:42:26,310 --> 00:42:32,130
doing is I'll make you know a render

00:42:30,300 --> 00:42:34,080
array out of everything that I want

00:42:32,130 --> 00:42:38,310
similar to how you would do a form or a

00:42:34,080 --> 00:42:42,390
page and then dump that into the Dom PDF

00:42:38,310 --> 00:42:44,310
so if you can get a render array of of

00:42:42,390 --> 00:42:46,140
the book which should be relatively

00:42:44,310 --> 00:42:48,119
simple I think that's that's probably in

00:42:46,140 --> 00:42:49,500
the module then you should be able to

00:42:48,119 --> 00:42:51,510
render that and then spit it out into

00:42:49,500 --> 00:42:57,030
Dom PDF creation

00:42:51,510 --> 00:42:59,250
something along those lines maybe my

00:42:57,030 --> 00:43:02,520
question is a little misdirected but I

00:42:59,250 --> 00:43:05,760
actually have more of a reciprocity or

00:43:02,520 --> 00:43:08,130
like a file-sharing type set up and we

00:43:05,760 --> 00:43:10,500
want to take the PDFs that are there and

00:43:08,130 --> 00:43:12,810
create images so that you know they can

00:43:10,500 --> 00:43:15,330
have those thumbnails and stuff and we

00:43:12,810 --> 00:43:20,870
have that as the basic module except it

00:43:15,330 --> 00:43:24,480
messes up our tracking and sort of

00:43:20,870 --> 00:43:29,820
saving sort of structure did you have

00:43:24,480 --> 00:43:31,500
any recommendations that will then was

00:43:29,820 --> 00:43:34,370
honestly going to end up being my sixth

00:43:31,500 --> 00:43:37,230
example if I got to finish the fifth one

00:43:34,370 --> 00:43:39,030
I don't have a specific recommendation I

00:43:37,230 --> 00:43:40,590
know some of the libraries are pretty

00:43:39,030 --> 00:43:43,890
handy for generating those thumbnails

00:43:40,590 --> 00:43:45,720
but beyond that there was a question in

00:43:43,890 --> 00:43:46,910
my mind at least about where those

00:43:45,720 --> 00:43:48,990
thumbnails were going to be stored

00:43:46,910 --> 00:43:51,120
because there's obviously going to be

00:43:48,990 --> 00:43:52,710
now a second file corresponding that

00:43:51,120 --> 00:43:53,850
first one unless you're generating it on

00:43:52,710 --> 00:43:57,990
the fly which is going to be very

00:43:53,850 --> 00:44:00,330
expensive performance wise so short of

00:43:57,990 --> 00:44:02,190
coming up with a new field that

00:44:00,330 --> 00:44:04,170
basically tracks two files instead of

00:44:02,190 --> 00:44:07,410
one I don't really have any

00:44:04,170 --> 00:44:12,930
recommendations for that but I think FPD

00:44:07,410 --> 00:44:14,790
I does I know it does thumbnailing for

00:44:12,930 --> 00:44:16,260
like an entire PDF where it will list

00:44:14,790 --> 00:44:18,390
the thumbnails like one of the examples

00:44:16,260 --> 00:44:22,170
they have there's that it'll it'll list

00:44:18,390 --> 00:44:24,360
the templates I'm sorry it'll list all

00:44:22,170 --> 00:44:26,190
of the thumbnails for the entire PDF yet

00:44:24,360 --> 00:44:27,450
a single PDF for you

00:44:26,190 --> 00:44:29,970
and as a component of that it actually

00:44:27,450 --> 00:44:31,470
is generating those thumbnails so that's

00:44:29,970 --> 00:44:32,730
probably the library enter into for the

00:44:31,470 --> 00:44:36,600
thumbnails if you're not using that

00:44:32,730 --> 00:44:38,550
already but outside of that like what to

00:44:36,600 --> 00:44:39,600
do with those thumbnails not really sure

00:44:38,550 --> 00:44:42,740
you probably have to come up with the

00:44:39,600 --> 00:44:42,740
cost of field implementation

00:44:46,150 --> 00:44:50,330
recession but I have a question

00:44:47,960 --> 00:44:54,530
regarding styling of PDFs sure there are

00:44:50,330 --> 00:44:56,359
times when floors are not working and I

00:44:54,530 --> 00:44:58,780
have personally to use non-breaking

00:44:56,359 --> 00:45:01,490
spaces there and then there are times

00:44:58,780 --> 00:45:03,560
when margins are not working what's the

00:45:01,490 --> 00:45:06,170
best approach see if you have to column

00:45:03,560 --> 00:45:08,960
or three column layout in the PDF so how

00:45:06,170 --> 00:45:14,780
will we do it should we use tables or

00:45:08,960 --> 00:45:16,820
divs or the non vedo the best way I view

00:45:14,780 --> 00:45:18,590
well not the best way honestly the the

00:45:16,820 --> 00:45:21,020
way I've usually approached it is to go

00:45:18,590 --> 00:45:23,630
with tables particularly if I'm using

00:45:21,020 --> 00:45:25,369
something like Dom PDF just because that

00:45:23,630 --> 00:45:27,380
is guaranteed to work

00:45:25,369 --> 00:45:31,550
even though dumb PDF uses an older

00:45:27,380 --> 00:45:33,950
version HTML offers a CSS if you're

00:45:31,550 --> 00:45:34,940
using something like WK HTML the PDF

00:45:33,950 --> 00:45:37,609
you'll probably have more options

00:45:34,940 --> 00:45:40,010
available CSS wise as to how to organize

00:45:37,609 --> 00:45:42,770
that you'll get floats you'll get maybe

00:45:40,010 --> 00:45:44,630
even grid I'm Hana so that sure but

00:45:42,770 --> 00:45:48,470
you'll definitely get floats I'd be able

00:45:44,630 --> 00:45:51,170
to arrange content that way so I'd

00:45:48,470 --> 00:45:53,780
recommend probably that library and try

00:45:51,170 --> 00:46:00,560
to use as modern CSS as you think you

00:45:53,780 --> 00:46:01,580
need any other questions all right well

00:46:00,560 --> 00:46:03,020
thank you guys for joining me like I

00:46:01,580 --> 00:46:04,000
said very excited on this technology

00:46:03,020 --> 00:46:10,669
we're glad you could make it

00:46:04,000 --> 00:46:10,669

YouTube URL: https://www.youtube.com/watch?v=TAVGWAvTMqs


