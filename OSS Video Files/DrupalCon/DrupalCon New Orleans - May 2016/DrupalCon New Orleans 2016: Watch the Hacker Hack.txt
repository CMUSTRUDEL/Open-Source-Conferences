Title: DrupalCon New Orleans 2016: Watch the Hacker Hack
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	This interactive presentation, by members of the Drupal Security Team, will cover the setup of multiple vulnerable Drupal 7 and 8 sites.  You will watch security team members try to hack these sites and talk about their processes they are doing it while they do it.  We will use this to look at the major vulnerabilities that happen in Drupal.

This a good way to think about how an attacker might try to compromise your site.

Finally you will learn about the Drupal Security Team.

After the presentation you will be aware of the major security issues in Drupal. You will also learn about countermeasures and best practices to take on your site.
Captions: 
	00:00:00,000 --> 00:00:07,109
good afternoon everybody I know it's

00:00:05,460 --> 00:00:13,889
after lunch but really good afternoon

00:00:07,109 --> 00:00:15,420
everybody okay right you are in watch

00:00:13,889 --> 00:00:17,100
the hacker hack a Drupal con

00:00:15,420 --> 00:00:18,359
presentation if you don't think you're

00:00:17,100 --> 00:00:23,730
in the right place you should probably

00:00:18,359 --> 00:00:26,789
leave now so the three of us up here I

00:00:23,730 --> 00:00:30,630
am Michael Hess I am mlh 407 on Twitter

00:00:26,789 --> 00:00:33,270
and MLS on drupal.org this is on board I

00:00:30,630 --> 00:00:36,899
don't know it's not Angevins coltrane on

00:00:33,270 --> 00:00:39,780
drupal.org and greg conedison greggles

00:00:36,899 --> 00:00:41,129
on twitter Andrew Clark and I work for

00:00:39,780 --> 00:00:43,500
the University of Michigan these two

00:00:41,129 --> 00:00:46,670
guys work for card com who happens to be

00:00:43,500 --> 00:00:52,379
hiring and they're awesome to work with

00:00:46,670 --> 00:01:00,870
so who's secure raise your hand really

00:00:52,379 --> 00:01:14,159
no one a one person okay who has a site

00:01:00,870 --> 00:01:15,659
on the Internet who's secure so problem

00:01:14,159 --> 00:01:18,299
is that you're safe on the site on the

00:01:15,659 --> 00:01:21,659
Internet probably isn't secure in fact

00:01:18,299 --> 00:01:23,189
pretty sure it's not it is a target for

00:01:21,659 --> 00:01:24,509
people to attack in fact it's probably

00:01:23,189 --> 00:01:26,330
being attacked how many people think

00:01:24,509 --> 00:01:29,210
they've ever been attacked in their life

00:01:26,330 --> 00:01:31,890
how many people think they haven't been

00:01:29,210 --> 00:01:34,680
so not all the hands are up on the first

00:01:31,890 --> 00:01:37,610
time but on the second time seems to be

00:01:34,680 --> 00:01:37,610
a little problem here

00:01:43,429 --> 00:01:49,140
so the only way to really make sure that

00:01:46,409 --> 00:01:50,700
you are secure is to remove yourself

00:01:49,140 --> 00:01:52,770
from the internet and even then you're

00:01:50,700 --> 00:01:54,539
not really secure like unless you're

00:01:52,770 --> 00:01:56,850
going to like solder closed all your USB

00:01:54,539 --> 00:01:58,709
ports and all sorts of other things but

00:01:56,850 --> 00:02:01,950
now that you've been given this great

00:01:58,709 --> 00:02:06,000
advice by three great people how many

00:02:01,950 --> 00:02:12,060
people just disabled wireless or you

00:02:06,000 --> 00:02:13,410
know powered off their servers when we

00:02:12,060 --> 00:02:16,049
talk about security breaches we often

00:02:13,410 --> 00:02:17,280
like think about big sites right so a

00:02:16,049 --> 00:02:19,170
lot of big sites are in the news when

00:02:17,280 --> 00:02:22,470
they're broken into so this is a graphic

00:02:19,170 --> 00:02:24,709
of breaches by I think a user a counter

00:02:22,470 --> 00:02:26,489
or records lost in those data breaches

00:02:24,709 --> 00:02:29,190
these are the ones that we hear about in

00:02:26,489 --> 00:02:31,769
the news targeted or Sony or Panama

00:02:29,190 --> 00:02:34,440
papers or you know these sort of big

00:02:31,769 --> 00:02:36,930
companies big groups but it actually

00:02:34,440 --> 00:02:39,030
also happens to small companies verizon

00:02:36,930 --> 00:02:41,010
did a research study in their data

00:02:39,030 --> 00:02:42,989
breaches report and seventy percent of

00:02:41,010 --> 00:02:45,090
data breaches were organizations under

00:02:42,989 --> 00:02:46,410
100 people so it's happening to the

00:02:45,090 --> 00:02:49,709
large companies to top into small

00:02:46,410 --> 00:02:51,720
companies it's happening everybody it

00:02:49,709 --> 00:02:53,790
was a survey I don't remember where

00:02:51,720 --> 00:02:55,109
where I'm citing this from and maybe I'm

00:02:53,790 --> 00:02:57,200
making it up but because something like

00:02:55,109 --> 00:02:59,790
seventy percent of businesses reported

00:02:57,200 --> 00:03:01,859
security breaches or security attempts

00:02:59,790 --> 00:03:03,419
against them which would imply that

00:03:01,859 --> 00:03:04,919
thirty percent didn't have them and

00:03:03,419 --> 00:03:10,380
really the thirty percent just didn't

00:03:04,919 --> 00:03:13,440
know so why would you be a target great

00:03:10,380 --> 00:03:15,359
why would people be a target well you

00:03:13,440 --> 00:03:16,950
know speaking as card calm we have a lot

00:03:15,359 --> 00:03:19,769
of information about our customers let

00:03:16,950 --> 00:03:21,150
me have financial information yeah their

00:03:19,769 --> 00:03:23,970
debit card numbers so that's you know

00:03:21,150 --> 00:03:25,169
certainly an obvious target is an

00:03:23,970 --> 00:03:28,109
organization that has that kind of

00:03:25,169 --> 00:03:31,620
sensitive information but I think you

00:03:28,109 --> 00:03:34,019
know with the sequel injection issue

00:03:31,620 --> 00:03:37,590
that we saw with Drupal year and a half

00:03:34,019 --> 00:03:39,450
ago that you know a large number of

00:03:37,590 --> 00:03:41,280
sites got attacked and so every site

00:03:39,450 --> 00:03:42,629
that's connected to the Internet is you

00:03:41,280 --> 00:03:44,250
know some sort of a resource that can be

00:03:42,629 --> 00:03:46,440
used for attacking other sites or to

00:03:44,250 --> 00:03:48,389
harvest information out of it so whether

00:03:46,440 --> 00:03:50,639
you think your site is a target or not

00:03:48,389 --> 00:03:53,280
the answer is that it is a target the

00:03:50,639 --> 00:03:54,930
only question is how easy will it be too

00:03:53,280 --> 00:03:57,000
into the site so in the case of the

00:03:54,930 --> 00:03:58,980
sequel injection issue that was fairly

00:03:57,000 --> 00:04:00,450
easy to break into a lot of sites all at

00:03:58,980 --> 00:04:01,920
once and so that made every site a

00:04:00,450 --> 00:04:03,990
worthwhile target right there's a

00:04:01,920 --> 00:04:05,550
trade-off between the level of effort to

00:04:03,990 --> 00:04:07,800
get in and the the value of the

00:04:05,550 --> 00:04:09,569
resources inside and eventually at some

00:04:07,800 --> 00:04:12,540
level of effort every site becomes a

00:04:09,569 --> 00:04:17,010
target everybody know what we're talking

00:04:12,540 --> 00:04:18,600
about with the sequel injection issue so

00:04:17,010 --> 00:04:21,660
we've heard a lot of things about this

00:04:18,600 --> 00:04:24,930
like no one cares about my small site

00:04:21,660 --> 00:04:27,360
and I store medical records but not

00:04:24,930 --> 00:04:31,169
people's names seriously this was in an

00:04:27,360 --> 00:04:33,270
email so no one would attack me or I'm

00:04:31,169 --> 00:04:36,000
in some industry and no one really cares

00:04:33,270 --> 00:04:39,240
about our data and all of these are

00:04:36,000 --> 00:04:41,340
false as Greg indicated if you're on the

00:04:39,240 --> 00:04:43,169
internet you are being attacked look at

00:04:41,340 --> 00:04:45,180
your apache logs you'll see people

00:04:43,169 --> 00:04:47,669
attacking you how do people work for a

00:04:45,180 --> 00:04:49,380
hosting company in this room how many

00:04:47,669 --> 00:04:51,180
people have seen attacks on sites in

00:04:49,380 --> 00:04:53,910
their logs from a hosting company or

00:04:51,180 --> 00:04:56,060
from not from a hosting company how many

00:04:53,910 --> 00:04:59,370
people have ever looked at their logs

00:04:56,060 --> 00:05:06,180
who has never looked at their logs okay

00:04:59,370 --> 00:05:07,470
we're going to wait 30 seconds seriously

00:05:06,180 --> 00:05:10,979
we're gonna wait 30 seconds when you to

00:05:07,470 --> 00:05:12,840
go look at your logs so we also need to

00:05:10,979 --> 00:05:14,610
be aware that it's not just Drupal

00:05:12,840 --> 00:05:17,130
that's at risk like we this is a

00:05:14,610 --> 00:05:18,840
drupalcon we talk about Drupal a lot but

00:05:17,130 --> 00:05:21,510
there's other things that are running

00:05:18,840 --> 00:05:24,090
that are attackable so how many people

00:05:21,510 --> 00:05:25,470
run a web server and hard to run Drupal

00:05:24,090 --> 00:05:27,570
without a web server how many people

00:05:25,470 --> 00:05:31,050
like know if that web server is

00:05:27,570 --> 00:05:32,700
vulnerable what about my sequel or post

00:05:31,050 --> 00:05:35,580
grads are some other database lenox

00:05:32,700 --> 00:05:39,750
itself memcache are Retta solar anybody

00:05:35,580 --> 00:05:41,490
update imagemagick this week like how

00:05:39,750 --> 00:05:43,710
many people imagemagick is a library

00:05:41,490 --> 00:05:45,660
that deals with resizing of images it's

00:05:43,710 --> 00:05:47,210
not the default library used in Drupal

00:05:45,660 --> 00:05:49,640
but it had a pretty serious

00:05:47,210 --> 00:05:53,070
vulnerability that is actively being

00:05:49,640 --> 00:05:55,229
exploited where you could basically run

00:05:53,070 --> 00:05:58,669
code on the server so if i can run code

00:05:55,229 --> 00:06:01,050
on a server what can I do Greg or bad

00:05:58,669 --> 00:06:03,750
whatever whatever the web server can do

00:06:01,050 --> 00:06:04,890
and so anything amazes yeah access the

00:06:03,750 --> 00:06:05,789
database web servers going to be talking

00:06:04,890 --> 00:06:07,350
to the database it's going to be

00:06:05,789 --> 00:06:09,600
uploading files maybe to the prime

00:06:07,350 --> 00:06:12,000
file system so somebody who can upload

00:06:09,600 --> 00:06:14,280
an image with this malicious payload in

00:06:12,000 --> 00:06:16,380
it could access all of those files I

00:06:14,280 --> 00:06:17,820
think the the most interesting exploit

00:06:16,380 --> 00:06:19,710
that I saw related to imagemagick was

00:06:17,820 --> 00:06:21,960
opening a reverse shell so that somebody

00:06:19,710 --> 00:06:24,780
could get in interactive control to that

00:06:21,960 --> 00:06:26,970
server and run just arbitrary commands

00:06:24,780 --> 00:06:30,030
from their own servers so they can you

00:06:26,970 --> 00:06:32,580
know probe it and get us a nice tight

00:06:30,030 --> 00:06:35,160
feedback loop to be able to probe the

00:06:32,580 --> 00:06:36,900
server and execute additional things so

00:06:35,160 --> 00:06:39,890
as this is a drupalcon we're going to

00:06:36,900 --> 00:06:47,250
focus mostly almost entirely on Drupal

00:06:39,890 --> 00:06:50,850
so let's actually get started what what

00:06:47,250 --> 00:06:52,350
what is this i'm running a Mac here I

00:06:50,850 --> 00:06:54,750
don't know how I've got a windows error

00:06:52,350 --> 00:06:58,080
message will take questions afterwards

00:06:54,750 --> 00:06:59,990
yet this is my work additionally what do

00:06:58,080 --> 00:07:02,880
you mean it's your work I mean this is

00:06:59,990 --> 00:07:08,130
this is my work you hacked my

00:07:02,880 --> 00:07:13,650
presentation yeah and why would you hack

00:07:08,130 --> 00:07:14,850
my presentation oh why not like what do

00:07:13,650 --> 00:07:16,050
you have to gain by hacking my

00:07:14,850 --> 00:07:19,310
presentation disturbing all these

00:07:16,050 --> 00:07:25,840
wonderful people we have eyeballs I mean

00:07:19,310 --> 00:07:29,980
publicity publicity for what volunteer

00:07:25,840 --> 00:07:33,340
why palantir because I'm going to work

00:07:29,980 --> 00:07:34,780
for them oh so like you I should too so

00:07:33,340 --> 00:07:37,090
you should just take a look at our logo

00:07:34,780 --> 00:07:41,110
for for the five minutes that I have

00:07:37,090 --> 00:07:43,150
here I've captured your attention so you

00:07:41,110 --> 00:07:46,419
hacked my presentation for the purpose

00:07:43,150 --> 00:07:50,740
of putting a logo on my slides I mean

00:07:46,419 --> 00:07:52,270
the attention is on us right how many

00:07:50,740 --> 00:07:54,130
people have been happened like someone

00:07:52,270 --> 00:07:55,590
else put like links to like spam or

00:07:54,130 --> 00:08:00,870
viagra or anything of that nature

00:07:55,590 --> 00:08:08,020
similar here so okay thank you thank you

00:08:00,870 --> 00:08:13,660
can we continue are we allowed to

00:08:08,020 --> 00:08:16,780
continue yeah you're my permission so

00:08:13,660 --> 00:08:19,360
we're all hackers like this term yeah

00:08:16,780 --> 00:08:21,610
exactly like this term is get gets

00:08:19,360 --> 00:08:23,350
misused a lot anybody coming to sprint

00:08:21,610 --> 00:08:26,050
days at the end of the week you're all

00:08:23,350 --> 00:08:28,150
hacking your hacking encore some cases

00:08:26,050 --> 00:08:29,650
you might actually hack encore but

00:08:28,150 --> 00:08:30,940
that's okay in that instance when we're

00:08:29,650 --> 00:08:32,800
talking about hacking here we're

00:08:30,940 --> 00:08:34,870
referring to the traditional or the

00:08:32,800 --> 00:08:36,789
non-traditional depending on what where

00:08:34,870 --> 00:08:38,289
you stand of someone who is attempting

00:08:36,789 --> 00:08:41,770
to break into a system in which they

00:08:38,289 --> 00:08:43,479
should not have access to and we have to

00:08:41,770 --> 00:08:46,420
talk a little bit about the types of

00:08:43,479 --> 00:08:49,540
hackers so people do this for different

00:08:46,420 --> 00:08:51,760
reasons there are people out there who

00:08:49,540 --> 00:08:53,620
actually hack for good and that's kind

00:08:51,760 --> 00:08:55,089
of what happened today the presentations

00:08:53,620 --> 00:08:57,700
we're about to show or people hacking

00:08:55,089 --> 00:08:59,500
for good you have people who just run

00:08:57,700 --> 00:09:01,360
shell scripts and just don't really know

00:08:59,500 --> 00:09:03,250
what they're doing so like sa 05 was

00:09:01,360 --> 00:09:05,560
mostly exploited by this you downloaded

00:09:03,250 --> 00:09:07,690
a script you ran it you gave it a URL

00:09:05,560 --> 00:09:08,709
and it gave you an account on the site

00:09:07,690 --> 00:09:10,060
you didn't have to understand how it

00:09:08,709 --> 00:09:11,680
worked you didn't really have to have a

00:09:10,060 --> 00:09:13,690
good set of skills or understanding of

00:09:11,680 --> 00:09:15,459
what sequel even was you just knew that

00:09:13,690 --> 00:09:18,430
if you ran this Python script and handed

00:09:15,459 --> 00:09:20,110
the URL you could login as admin there

00:09:18,430 --> 00:09:21,970
are different colors of hats which I'm

00:09:20,110 --> 00:09:23,740
not going to get into but people hack

00:09:21,970 --> 00:09:25,570
for different reasons and we kind of

00:09:23,740 --> 00:09:26,950
like assign colors to them but it seems

00:09:25,570 --> 00:09:29,730
that you know the only ones that are

00:09:26,950 --> 00:09:33,070
agreed on our black and white and

00:09:29,730 --> 00:09:34,990
there's like other colors in there we

00:09:33,070 --> 00:09:36,640
have like unfortunately these state

00:09:34,990 --> 00:09:38,590
sponsored hackers people who are paid to

00:09:36,640 --> 00:09:44,050
hack sometimes by a government

00:09:38,590 --> 00:09:46,420
sometimes by corporations FBI CIA we

00:09:44,050 --> 00:09:49,540
have people like Michelle who hacked for

00:09:46,420 --> 00:09:51,790
personal gain uh they want you know they

00:09:49,540 --> 00:09:53,380
have monetary interest to be gained by

00:09:51,790 --> 00:10:01,810
hacking and then there's some other

00:09:53,380 --> 00:10:03,850
groups that fall into other thank you so

00:10:01,810 --> 00:10:07,180
we happen to have this new site that was

00:10:03,850 --> 00:10:08,920
put up recently and this is the site

00:10:07,180 --> 00:10:11,920
that was given to our hackers to attack

00:10:08,920 --> 00:10:14,590
and it was a clone of an actual real

00:10:11,920 --> 00:10:16,930
site and we thought we followed best

00:10:14,590 --> 00:10:18,370
practices when we built it so it has

00:10:16,930 --> 00:10:20,230
things like two factor authentication

00:10:18,370 --> 00:10:21,880
speaking of which if you're not running

00:10:20,230 --> 00:10:23,680
two-factor authentication on your site

00:10:21,880 --> 00:10:25,150
that's another thing we should stop wait

00:10:23,680 --> 00:10:27,670
the 30 seconds you can download the

00:10:25,150 --> 00:10:29,800
module and install it someone on this

00:10:27,670 --> 00:10:33,280
stage up here wrote that module for

00:10:29,800 --> 00:10:37,090
Drupal I'm looking at them and you check

00:10:33,280 --> 00:10:40,180
it out ah it's a multi-site site it has

00:10:37,090 --> 00:10:41,320
two separate databases and once the site

00:10:40,180 --> 00:10:43,480
was cloned and moved over to another

00:10:41,320 --> 00:10:45,490
server I went through it and I injected

00:10:43,480 --> 00:10:48,220
common security mistakes that people

00:10:45,490 --> 00:10:49,900
make and then I handed it over to our to

00:10:48,220 --> 00:10:52,510
hackers and I didn't tell them what they

00:10:49,900 --> 00:10:55,270
were so just as if I had put up a site

00:10:52,510 --> 00:10:56,680
and actually made these mistakes they

00:10:55,270 --> 00:10:59,770
had to discover them and try to figure

00:10:56,680 --> 00:11:01,980
out what to do on their own here's the

00:10:59,770 --> 00:11:05,040
you know warning don't try this at home

00:11:01,980 --> 00:11:07,720
the actions taken here would be legal

00:11:05,040 --> 00:11:10,230
you could go to jail for doing this so

00:11:07,720 --> 00:11:14,260
we like all of you don't end up in jail

00:11:10,230 --> 00:11:16,240
and then in a little side note here if

00:11:14,260 --> 00:11:18,550
we were to actually watch a hacker hack

00:11:16,240 --> 00:11:20,410
against a complex target it's not

00:11:18,550 --> 00:11:22,030
something you do in an hour it's

00:11:20,410 --> 00:11:24,580
something that might take hours weeks

00:11:22,030 --> 00:11:26,800
maybe even years if their social

00:11:24,580 --> 00:11:28,750
engineering involved if there's a lot of

00:11:26,800 --> 00:11:32,260
probing involved it's not something that

00:11:28,750 --> 00:11:34,180
happens quickly so for our first little

00:11:32,260 --> 00:11:38,910
subset here we have a hacker and they're

00:11:34,180 --> 00:11:42,010
going to look around the site and so I

00:11:38,910 --> 00:11:46,960
think that's working yeah there we go

00:11:42,010 --> 00:11:48,580
yes so then sure so this in this case

00:11:46,960 --> 00:11:50,200
the hacker is looking for weaknesses in

00:11:48,580 --> 00:11:51,529
the site sort of probing things about

00:11:50,200 --> 00:11:54,050
the Drupal site

00:11:51,529 --> 00:11:55,850
might be exploitable so risks that exist

00:11:54,050 --> 00:11:58,009
in all Drupal sites or maybe in

00:11:55,850 --> 00:11:59,449
particular this one if it's using custom

00:11:58,009 --> 00:12:01,189
modules or custom themes so one of the

00:11:59,449 --> 00:12:04,040
first things was looking to see if the

00:12:01,189 --> 00:12:06,319
site has full HTML available or PHP

00:12:04,040 --> 00:12:08,569
filter available to anonymous users so

00:12:06,319 --> 00:12:10,370
filter tips is a place you can visit on

00:12:08,569 --> 00:12:12,860
all Drupal sites it shows you what input

00:12:10,370 --> 00:12:15,470
formats or available for anonymous users

00:12:12,860 --> 00:12:17,480
and then the attacker is looking around

00:12:15,470 --> 00:12:19,759
for you know other things maybe there's

00:12:17,480 --> 00:12:23,180
someplace where content can be injected

00:12:19,759 --> 00:12:24,529
comments or nodes or any other forms

00:12:23,180 --> 00:12:28,490
that are accessible to the anonymous

00:12:24,529 --> 00:12:30,470
user and it's interesting i think when

00:12:28,490 --> 00:12:31,490
looking around at this site you may

00:12:30,470 --> 00:12:33,019
notice that it's giving a couple of

00:12:31,490 --> 00:12:34,550
different kinds of errors so some of

00:12:33,019 --> 00:12:36,800
them are page not found that are being

00:12:34,550 --> 00:12:39,170
developed but that are being produced by

00:12:36,800 --> 00:12:41,449
drupal some of them are access denied

00:12:39,170 --> 00:12:43,490
being generated by apache it looks like

00:12:41,449 --> 00:12:45,230
and then also page not found being

00:12:43,490 --> 00:12:47,509
generated by apache and those different

00:12:45,230 --> 00:12:50,990
errors happen for different kinds of

00:12:47,509 --> 00:12:53,389
files as you can see in this case like

00:12:50,990 --> 00:12:55,730
the attacker founds something called the

00:12:53,389 --> 00:12:58,610
add this module add this is a social

00:12:55,730 --> 00:13:00,230
widgets sort of plugin went to drew

00:12:58,610 --> 00:13:02,569
blood or to read about that module and

00:13:00,230 --> 00:13:05,360
discover if maybe that module has a

00:13:02,569 --> 00:13:06,620
public security issue maybe the site is

00:13:05,360 --> 00:13:08,209
running an out-of-date version of that

00:13:06,620 --> 00:13:10,430
module so you know sort of probing for

00:13:08,209 --> 00:13:11,689
weaknesses either very low hanging fruit

00:13:10,430 --> 00:13:13,550
in a sense weaknesses that can just be

00:13:11,689 --> 00:13:15,259
publicly exploited or easily exploited

00:13:13,550 --> 00:13:17,089
and sort of this isn't referred to as

00:13:15,259 --> 00:13:18,170
fingerprinting or sort of doing an

00:13:17,089 --> 00:13:21,819
analysis on the site to sort of

00:13:18,170 --> 00:13:25,160
understand what those weaknesses are and

00:13:21,819 --> 00:13:26,959
so in this case how do you finger prints

00:13:25,160 --> 00:13:28,779
like a particular version of a drupal

00:13:26,959 --> 00:13:31,399
module well you look for public

00:13:28,779 --> 00:13:32,930
artifacts of that module like a CSS file

00:13:31,399 --> 00:13:34,610
or a javascript file that might you

00:13:32,930 --> 00:13:38,779
might be able to then use to distinguish

00:13:34,610 --> 00:13:40,699
what particular version so you know drew

00:13:38,779 --> 00:13:42,649
blood or gives the source of this module

00:13:40,699 --> 00:13:45,800
so you can get identifier is like the

00:13:42,649 --> 00:13:47,360
md5 hash of that of a CSS or jas file

00:13:45,800 --> 00:13:48,679
and then you can get that for what's

00:13:47,360 --> 00:13:51,110
running on the site and you can compare

00:13:48,679 --> 00:13:52,819
them to sort of try to identify which

00:13:51,110 --> 00:13:54,920
particular version of the module this is

00:13:52,819 --> 00:13:56,269
used by the blind elephant tool it's a

00:13:54,920 --> 00:13:58,639
general open-source tool for

00:13:56,269 --> 00:14:00,740
fingerprinting lots of different types

00:13:58,639 --> 00:14:01,379
of web applications in this case you

00:14:00,740 --> 00:14:03,209
know they

00:14:01,379 --> 00:14:08,849
actors doing it manually just by doing

00:14:03,209 --> 00:14:10,410
md5 hashes of these files like this is

00:14:08,849 --> 00:14:12,389
in my mind some of the good news is that

00:14:10,410 --> 00:14:14,009
Ben's not super efficient at this

00:14:12,389 --> 00:14:16,049
because he doesn't attack sites all the

00:14:14,009 --> 00:14:17,909
time right I think if you're attacking

00:14:16,049 --> 00:14:20,849
sites all the time then he would

00:14:17,909 --> 00:14:23,399
probably have more automation yeah so

00:14:20,849 --> 00:14:25,169
once the attackers done some anonymous

00:14:23,399 --> 00:14:26,639
fingerprinting the attacker attempts to

00:14:25,169 --> 00:14:30,029
create an account to see what they're

00:14:26,639 --> 00:14:31,379
capable of doing so along with

00:14:30,029 --> 00:14:32,939
fingerprinting like for particular

00:14:31,379 --> 00:14:35,069
vulnerabilities you know you want to try

00:14:32,939 --> 00:14:37,349
to an attacker will want to try to get

00:14:35,069 --> 00:14:39,149
access you know elevation elevated

00:14:37,349 --> 00:14:41,459
access you know administrator access if

00:14:39,149 --> 00:14:42,809
they can or anything beyond an anonymous

00:14:41,459 --> 00:14:44,909
user you're assuming that there's not a

00:14:42,809 --> 00:14:47,399
vulnerability immediately exploitable as

00:14:44,909 --> 00:14:49,169
an anonymous user so just what happens

00:14:47,399 --> 00:14:51,029
on this Drupal site was able to register

00:14:49,169 --> 00:14:52,949
for an account so the drupal site

00:14:51,029 --> 00:14:54,479
allowed me to create an account on the

00:14:52,949 --> 00:15:00,779
site so ok well now that I have an

00:14:54,479 --> 00:15:03,239
account what can I do and I think I

00:15:00,779 --> 00:15:04,649
think where it's at now it's it's before

00:15:03,239 --> 00:15:07,199
having created council still sort of

00:15:04,649 --> 00:15:09,019
here and get your Lord so logged in

00:15:07,199 --> 00:15:11,429
looking what can happen as an

00:15:09,019 --> 00:15:14,850
authenticated user so again checking

00:15:11,429 --> 00:15:16,439
input formats or tax floor mats for if

00:15:14,850 --> 00:15:17,789
anything beyond filtered HTML is

00:15:16,439 --> 00:15:20,549
available specifically looking for like

00:15:17,789 --> 00:15:23,100
if javascript or PHP can be executed and

00:15:20,549 --> 00:15:26,519
so we see our hacker create a comment

00:15:23,100 --> 00:15:29,279
and inject some set the format to full

00:15:26,519 --> 00:15:31,979
HTML and sex of an injection evil

00:15:29,279 --> 00:15:33,720
JavaScript but it doesn't work it

00:15:31,979 --> 00:15:36,089
doesn't work because the hacker actually

00:15:33,720 --> 00:15:38,909
made a mistake there posting their evil

00:15:36,089 --> 00:15:42,539
JavaScript into a WYSIWYG editor that's

00:15:38,909 --> 00:15:45,059
actually converting it to uh is

00:15:42,539 --> 00:15:47,159
basically escaping it so our hacker is

00:15:45,059 --> 00:15:49,289
going to let confirm yes full HTML is

00:15:47,159 --> 00:15:51,479
available on here and oh they just

00:15:49,289 --> 00:15:59,999
figured out that they can dissuade no

00:15:51,479 --> 00:16:02,789
click it or not and so the JavaScript

00:15:59,999 --> 00:16:05,189
being injected here is an attempt to

00:16:02,789 --> 00:16:07,409
steal access from somebody who has

00:16:05,189 --> 00:16:09,359
elevated or administrative access on the

00:16:07,409 --> 00:16:11,819
site so it's a it's a quickie theft

00:16:09,359 --> 00:16:13,979
attack basically the JavaScript when if

00:16:11,819 --> 00:16:14,630
executed by somebody with elevated

00:16:13,979 --> 00:16:17,390
permissions

00:16:14,630 --> 00:16:19,580
I will steal their cookie which you can

00:16:17,390 --> 00:16:22,010
then fake and get authenticated access

00:16:19,580 --> 00:16:23,390
on the site as that person how many

00:16:22,010 --> 00:16:25,160
people have seen like a security demo

00:16:23,390 --> 00:16:27,260
and like it ends with the person who's

00:16:25,160 --> 00:16:29,450
demoing it like get really happy that

00:16:27,260 --> 00:16:31,790
they made hello world or hello pop up in

00:16:29,450 --> 00:16:33,350
a javascript dialogue so that's

00:16:31,790 --> 00:16:36,770
basically the way to test to see if

00:16:33,350 --> 00:16:38,690
javascript gets executed and if it does

00:16:36,770 --> 00:16:41,440
you can do all sorts of fun things like

00:16:38,690 --> 00:16:43,610
steal a cookie what else can you do

00:16:41,440 --> 00:16:45,320
anything anything that you can do in

00:16:43,610 --> 00:16:47,240
your browser cross-site scripting can do

00:16:45,320 --> 00:16:49,280
on your behalf so if you're logged in as

00:16:47,240 --> 00:16:50,450
an admin and you can enable or disable a

00:16:49,280 --> 00:16:52,370
module disable the two-factor

00:16:50,450 --> 00:16:56,330
authentication module javascript in your

00:16:52,370 --> 00:16:57,920
browser can do that for you I actually

00:16:56,330 --> 00:17:00,020
had a question on this one shown I

00:16:57,920 --> 00:17:04,520
thought that the cookies were HTTP only

00:17:00,020 --> 00:17:05,720
so does this attack work on that I don't

00:17:04,520 --> 00:17:08,530
know did you test that did you actually

00:17:05,720 --> 00:17:11,449
try stealing a cookie you know okay Wow

00:17:08,530 --> 00:17:13,250
but but I think in the attacker like

00:17:11,449 --> 00:17:14,630
attacking the site you know what you

00:17:13,250 --> 00:17:16,400
know yeah it would have discovered that

00:17:14,630 --> 00:17:18,829
the particular thing about the cookies

00:17:16,400 --> 00:17:21,439
were mitigating against so it's that's

00:17:18,829 --> 00:17:23,959
mitigated in Drupal 7 & 8 I guess but

00:17:21,439 --> 00:17:26,420
not so much in Drupal 6 yeah which

00:17:23,959 --> 00:17:28,820
Drupal 6 is now end of life so we're

00:17:26,420 --> 00:17:30,950
running a Drupal 6 mod site you should

00:17:28,820 --> 00:17:34,460
update it or find a long-term service

00:17:30,950 --> 00:17:35,900
apport vendor to help you out so our

00:17:34,460 --> 00:17:38,350
hackers going to find a huge miss

00:17:35,900 --> 00:17:41,720
configuration and as i said earlier i

00:17:38,350 --> 00:17:43,370
injected some common mistakes into the

00:17:41,720 --> 00:17:46,430
site and i actually didn't mean to

00:17:43,370 --> 00:17:48,970
inject this i did it by mistake but what

00:17:46,430 --> 00:17:51,770
you can see is it's pretty pretty bad

00:17:48,970 --> 00:17:53,390
our hackers actually able to edit their

00:17:51,770 --> 00:17:55,850
own user account and elevate their

00:17:53,390 --> 00:17:58,790
permissions to administrator now I

00:17:55,850 --> 00:18:00,500
honestly did not mean to do this but

00:17:58,790 --> 00:18:01,610
what's interesting to me is not that the

00:18:00,500 --> 00:18:03,320
hacker was able to do that because

00:18:01,610 --> 00:18:06,290
there's other ways to do that it's what

00:18:03,320 --> 00:18:08,270
the hacker does after they get that so

00:18:06,290 --> 00:18:09,980
whether or not they click to check box

00:18:08,270 --> 00:18:11,690
and gave themselves admin or they stole

00:18:09,980 --> 00:18:13,490
a cookie and then logged in as the admin

00:18:11,690 --> 00:18:16,070
or they password sniff to the admin

00:18:13,490 --> 00:18:17,630
account what do they do next they've got

00:18:16,070 --> 00:18:20,210
admin on your site what are they going

00:18:17,630 --> 00:18:22,520
to do and so it looks like our attacker

00:18:20,210 --> 00:18:26,890
has enabled the devel- land is now

00:18:22,520 --> 00:18:31,240
writing PHP code wait

00:18:26,890 --> 00:18:32,860
yeah sorry I'm and so they're writing

00:18:31,240 --> 00:18:35,170
some PHP code and they're looking at

00:18:32,860 --> 00:18:37,480
settings dot PHP so they've got the

00:18:35,170 --> 00:18:39,640
entire contents of settings at PHP on

00:18:37,480 --> 00:18:43,360
the browser that includes your database

00:18:39,640 --> 00:18:44,860
credential strings so what are they

00:18:43,360 --> 00:18:46,510
going to do now but of course there's a

00:18:44,860 --> 00:18:51,880
file world protecting the database right

00:18:46,510 --> 00:18:53,950
o course not so they've now dumped

00:18:51,880 --> 00:18:55,480
settings dot PHP to a text file so they

00:18:53,950 --> 00:19:00,010
can download it to their local machine

00:18:55,480 --> 00:19:03,130
and read it and they're calling it files

00:19:00,010 --> 00:19:05,080
CSS CSS that's the name of the file so

00:19:03,130 --> 00:19:06,460
if you were looking at your file system

00:19:05,080 --> 00:19:09,310
you wouldn't even know it didn't belong

00:19:06,460 --> 00:19:11,350
necessarily well CSS is a strange file

00:19:09,310 --> 00:19:12,730
name but so now they've got a copy of

00:19:11,350 --> 00:19:13,870
settings that PHP and they're going

00:19:12,730 --> 00:19:16,810
through and trying to find something

00:19:13,870 --> 00:19:19,090
interesting from it and you can see

00:19:16,810 --> 00:19:21,400
they're just writing PHP here so this is

00:19:19,090 --> 00:19:24,700
referred to as code execution or code

00:19:21,400 --> 00:19:27,340
injection it's injecting malicious PHP

00:19:24,700 --> 00:19:29,140
coding to the application and it's made

00:19:27,340 --> 00:19:30,730
available by the dev module so make sure

00:19:29,140 --> 00:19:32,710
your permissions for the dev module are

00:19:30,730 --> 00:19:35,920
configured correctly or better yet don't

00:19:32,710 --> 00:19:37,390
run dev on a live site just remove it

00:19:35,920 --> 00:19:40,210
from the code base when you push it to

00:19:37,390 --> 00:19:42,400
the production server I also really

00:19:40,210 --> 00:19:43,750
appreciate that the hacker in this case

00:19:42,400 --> 00:19:46,660
cleaned up after themselves right

00:19:43,750 --> 00:19:50,640
they're very very tidy which is which is

00:19:46,660 --> 00:19:53,830
always nice when you have a guest but it

00:19:50,640 --> 00:19:55,210
but it's interesting how like you know

00:19:53,830 --> 00:19:56,680
you have to think about what is the

00:19:55,210 --> 00:19:58,090
motivation of the attacker if the

00:19:56,680 --> 00:19:59,620
motivation of the attacker is to control

00:19:58,090 --> 00:20:01,270
the site for a long time then they are

00:19:59,620 --> 00:20:02,560
going to want to clean up clean up after

00:20:01,270 --> 00:20:04,660
themselves so it's hard to find them and

00:20:02,560 --> 00:20:06,310
and when the attacker created their

00:20:04,660 --> 00:20:08,530
account they didn't just say well I'm an

00:20:06,310 --> 00:20:10,870
evil attacker is my username it was

00:20:08,530 --> 00:20:12,250
admin one right which probably a lot of

00:20:10,870 --> 00:20:16,300
sites have an account called admin one

00:20:12,250 --> 00:20:17,680
or at least it wouldn't be noticed so

00:20:16,300 --> 00:20:19,270
they've now finding the username and

00:20:17,680 --> 00:20:20,890
password for the database out of

00:20:19,270 --> 00:20:22,540
settings debt PHP and they're just

00:20:20,890 --> 00:20:26,770
running the my sequel dump command to

00:20:22,540 --> 00:20:28,840
dump a copy of the database and in an

00:20:26,770 --> 00:20:31,060
effort to still also hide their tracks

00:20:28,840 --> 00:20:33,640
they're dumping the file as you know

00:20:31,060 --> 00:20:35,590
naught dot sequel but as dot CSS and

00:20:33,640 --> 00:20:37,300
trying to hide it in the drupal's files

00:20:35,590 --> 00:20:40,230
directory and they were able to do that

00:20:37,300 --> 00:20:42,550
and they're now downloading the several

00:20:40,230 --> 00:20:45,190
very large database but it's too large

00:20:42,550 --> 00:20:46,780
for them to download like it's it's

00:20:45,190 --> 00:20:48,040
probably a 100 Meg's and that's taking

00:20:46,780 --> 00:20:53,230
too long so now they're gzip in the

00:20:48,040 --> 00:20:54,640
database and you can see like this is

00:20:53,230 --> 00:20:57,100
taking a little bit to run because it's

00:20:54,640 --> 00:21:00,190
got a gzip the database Oh much faster

00:20:57,100 --> 00:21:04,930
look at that go so it went from 13

00:21:00,190 --> 00:21:06,820
minutes to half of that over to a minute

00:21:04,930 --> 00:21:08,830
basically and so now they can just suck

00:21:06,820 --> 00:21:09,820
down the entire database and of course

00:21:08,830 --> 00:21:11,290
when they're done they're going to

00:21:09,820 --> 00:21:12,640
remove the database because they don't

00:21:11,290 --> 00:21:21,070
want the administrator to come back and

00:21:12,640 --> 00:21:26,380
find it later and so there's the

00:21:21,070 --> 00:21:28,060
database they see it they're going to

00:21:26,380 --> 00:21:29,530
rename it to something that makes sense

00:21:28,060 --> 00:21:31,000
now they're going to read through the

00:21:29,530 --> 00:21:32,890
database they've got the whole database

00:21:31,000 --> 00:21:36,220
there and now they're going to delete

00:21:32,890 --> 00:21:37,780
the database deleting the database copy

00:21:36,220 --> 00:21:39,100
on there lots of server yes not

00:21:37,780 --> 00:21:40,390
believing the actual database because

00:21:39,100 --> 00:21:42,340
that would break the thing and now you

00:21:40,390 --> 00:21:45,670
can see that they've actually removed

00:21:42,340 --> 00:21:48,130
the database so you know while they

00:21:45,670 --> 00:21:51,630
elevated themselves through a bug that I

00:21:48,130 --> 00:21:55,720
really didn't mean to introduce they

00:21:51,630 --> 00:21:57,670
they got themselves the database pretty

00:21:55,720 --> 00:21:58,690
easily once they had access to run PHP

00:21:57,670 --> 00:22:02,620
code

00:21:58,690 --> 00:22:04,270
and so that's that's kind of scary so

00:22:02,620 --> 00:22:11,230
we've got another miss configuration

00:22:04,270 --> 00:22:13,380
here so in another way of probing is you

00:22:11,230 --> 00:22:14,980
know checking for static files you know

00:22:13,380 --> 00:22:18,040
fingerprinting this I you might check

00:22:14,980 --> 00:22:19,930
the changelog txt to see which version

00:22:18,040 --> 00:22:21,760
Drupal is in this piece they found a

00:22:19,930 --> 00:22:24,640
readme.txt that happen to have a

00:22:21,760 --> 00:22:27,280
plaintext password for an admin accounts

00:22:24,640 --> 00:22:29,350
so one of the issues with like github

00:22:27,280 --> 00:22:31,210
and bitbucket is they prompt you to

00:22:29,350 --> 00:22:33,340
create a readme file Drupal doesn't have

00:22:31,210 --> 00:22:36,550
one by default and it prompts you to

00:22:33,340 --> 00:22:38,530
create one and so this person created

00:22:36,550 --> 00:22:40,750
one with the sequel credentials to the

00:22:38,530 --> 00:22:42,310
database in it that happened to work so

00:22:40,750 --> 00:22:44,920
now we can see that our hacker found

00:22:42,310 --> 00:22:46,480
this readme file and is now actually

00:22:44,920 --> 00:22:48,880
going through the database for another

00:22:46,480 --> 00:22:52,210
site and what they do is actually going

00:22:48,880 --> 00:22:53,590
to be interesting also this was actually

00:22:52,210 --> 00:22:56,560
I take that back this is not the

00:22:53,590 --> 00:22:59,830
database credentials this is the login

00:22:56,560 --> 00:23:01,960
for admin to the actual site itself so

00:22:59,830 --> 00:23:04,240
the database server was configured to

00:23:01,960 --> 00:23:05,200
listen on a port and properly and so

00:23:04,240 --> 00:23:06,820
they were able to connect to it as

00:23:05,200 --> 00:23:08,620
anonymous and have read access the camp

00:23:06,820 --> 00:23:11,200
right so they can't change anything but

00:23:08,620 --> 00:23:13,840
you can see that our user or our hacker

00:23:11,200 --> 00:23:15,850
not our user is actually running the TFA

00:23:13,840 --> 00:23:17,650
module so their database has to factor

00:23:15,850 --> 00:23:19,510
in it so even with the admin and testing

00:23:17,650 --> 00:23:22,360
123 password they couldn't actually log

00:23:19,510 --> 00:23:24,070
in but with database access they're

00:23:22,360 --> 00:23:25,420
going to do something else and so we

00:23:24,070 --> 00:23:29,020
actually see our hacker writing code

00:23:25,420 --> 00:23:31,630
here yeah we move through this kind of

00:23:29,020 --> 00:23:33,520
fast but the the attacker having you ID

00:23:31,630 --> 00:23:35,290
1 access where they were blocked by the

00:23:33,520 --> 00:23:37,390
TFA module two factor authentication

00:23:35,290 --> 00:23:40,030
it's an additional two item that you

00:23:37,390 --> 00:23:42,820
need to log into the site so in this

00:23:40,030 --> 00:23:44,920
case having both the UID one password as

00:23:42,820 --> 00:23:46,450
well as the database dump the attacker

00:23:44,920 --> 00:23:49,120
is going to sort of reverse engineer

00:23:46,450 --> 00:23:52,930
that two-factor authentication security

00:23:49,120 --> 00:23:55,630
control and get access so with the with

00:23:52,930 --> 00:23:57,430
the database comes the Drupal private

00:23:55,630 --> 00:23:59,200
key if the Drupal private key is stored

00:23:57,430 --> 00:24:01,810
there and the Drupal private key is used

00:23:59,200 --> 00:24:05,950
for generating tokens and other security

00:24:01,810 --> 00:24:09,070
hatch secure hatches on the site so the

00:24:05,950 --> 00:24:10,720
TFA module by default you know will rely

00:24:09,070 --> 00:24:11,380
on that token if it's not configured

00:24:10,720 --> 00:24:14,590
otherwise

00:24:11,380 --> 00:24:15,970
and so but by being able to have a read

00:24:14,590 --> 00:24:18,460
access to the database we can get

00:24:15,970 --> 00:24:23,650
something for that particular uid one

00:24:18,460 --> 00:24:26,650
user we can get the hashed data for that

00:24:23,650 --> 00:24:28,150
second token and now the now having that

00:24:26,650 --> 00:24:30,430
we just need to use the private key to

00:24:28,150 --> 00:24:33,700
like recreate the what's referred to as

00:24:30,430 --> 00:24:35,440
the seed for that token and a lot of

00:24:33,700 --> 00:24:40,000
that's very specific to the TFA module

00:24:35,440 --> 00:24:41,770
so basically we're just seeing a scene

00:24:40,000 --> 00:24:47,710
somebody get access by reverse

00:24:41,770 --> 00:24:49,390
engineering a security control okay well

00:24:47,710 --> 00:24:51,340
I just gonna say another you know this

00:24:49,390 --> 00:24:54,160
is a good reason to sanitize database

00:24:51,340 --> 00:24:55,810
backups you know if if some of your

00:24:54,160 --> 00:24:58,450
information like the Drupal private key

00:24:55,810 --> 00:25:00,640
gets into your into your database and

00:24:58,450 --> 00:25:02,020
then you have a backup copy of your

00:25:00,640 --> 00:25:04,990
database on your laptop and you leave

00:25:02,020 --> 00:25:06,370
your laptop and then at TSA now whoever

00:25:04,990 --> 00:25:07,660
picks it up has access to that

00:25:06,370 --> 00:25:10,570
information that can be used to attack

00:25:07,660 --> 00:25:12,460
your site so you know before you put

00:25:10,570 --> 00:25:13,750
your database outside of the production

00:25:12,460 --> 00:25:17,350
environment it's good to clean out all

00:25:13,750 --> 00:25:19,660
of that secret information and I think

00:25:17,350 --> 00:25:21,280
there's a nice tool by default isn't

00:25:19,660 --> 00:25:22,870
there Greg there there are many nice

00:25:21,280 --> 00:25:25,300
tools for doing that Josh Tickell

00:25:22,870 --> 00:25:26,680
sanitize is a good tool that most people

00:25:25,300 --> 00:25:28,780
have installed because it's just

00:25:26,680 --> 00:25:30,820
available with Josh but yeah within the

00:25:28,780 --> 00:25:33,700
paranoia module there's a tool called

00:25:30,820 --> 00:25:35,590
sequel sanitized whitelist which is much

00:25:33,700 --> 00:25:38,890
more aggressive and thorough about how

00:25:35,590 --> 00:25:40,600
it cleans out tables and so what we're

00:25:38,890 --> 00:25:42,910
going to see is oh here's our two-factor

00:25:40,600 --> 00:25:46,770
authentication and we basically use the

00:25:42,910 --> 00:25:46,770
script and we're now logged in as admin

00:25:51,360 --> 00:25:57,940
so what we did here is we basically set

00:25:55,390 --> 00:26:00,010
up several sites for the purpose of

00:25:57,940 --> 00:26:01,270
being hacked and you know when I was

00:26:00,010 --> 00:26:03,880
doing these I was kind of going through

00:26:01,270 --> 00:26:05,830
my mind okay how should I set this up in

00:26:03,880 --> 00:26:07,660
a manner that can be attacked it is it

00:26:05,830 --> 00:26:09,880
going to take you know my hackers you

00:26:07,660 --> 00:26:11,530
know multiple hours to do this because

00:26:09,880 --> 00:26:12,790
you know I knew they were in a rush

00:26:11,530 --> 00:26:14,890
tonight you know they know the common

00:26:12,790 --> 00:26:16,270
configuration mistakes and I obviously

00:26:14,890 --> 00:26:17,290
made a mistake in there but what was

00:26:16,270 --> 00:26:18,370
interesting to me is they didn't

00:26:17,290 --> 00:26:20,530
approach it the way I thought they'd

00:26:18,370 --> 00:26:21,450
approach it so this was somewhat of a

00:26:20,530 --> 00:26:23,130
learning thing

00:26:21,450 --> 00:26:24,570
that you know and it's a learning thing

00:26:23,130 --> 00:26:26,610
for everybody out there because when

00:26:24,570 --> 00:26:29,340
your sights get hacked not if when your

00:26:26,610 --> 00:26:31,139
sights get hacked you know how the

00:26:29,340 --> 00:26:32,130
attacker can elevate their privileges is

00:26:31,139 --> 00:26:34,110
actually the more important question

00:26:32,130 --> 00:26:36,779
it's not if they get hacked it's when

00:26:34,110 --> 00:26:39,210
and what can they do when they do so

00:26:36,779 --> 00:26:43,049
dumping my database getting access to

00:26:39,210 --> 00:26:44,399
those keys that's all really bad so now

00:26:43,049 --> 00:26:48,750
let's let's kind of think about that

00:26:44,399 --> 00:26:51,330
you're at risk your sites are at risk so

00:26:48,750 --> 00:26:53,850
you know this model that you know I've

00:26:51,330 --> 00:26:56,370
checked my check box off on security I

00:26:53,850 --> 00:26:58,380
ran my end map you know i'm good i got

00:26:56,370 --> 00:26:59,610
TFA installed i've done with security

00:26:58,380 --> 00:27:02,880
i'm not going to get hacked that's a

00:26:59,610 --> 00:27:04,440
myth your your sites are at risk so the

00:27:02,880 --> 00:27:08,519
question becomes how do you defend

00:27:04,440 --> 00:27:10,409
yourself and since everyone is at risk

00:27:08,519 --> 00:27:13,159
the really the real question becomes

00:27:10,409 --> 00:27:15,929
what do you do to reduce that risk so

00:27:13,159 --> 00:27:18,360
you're at risk you have a risk you know

00:27:15,929 --> 00:27:19,679
in the same way that you're you know

00:27:18,360 --> 00:27:21,120
could be at risk for having a heart

00:27:19,679 --> 00:27:22,980
attack what do you do to reduce that

00:27:21,120 --> 00:27:27,649
risk well you don't exercise one time a

00:27:22,980 --> 00:27:30,750
year you exercise daily maybe weekly you

00:27:27,649 --> 00:27:34,519
eat good food you don't eat fried food

00:27:30,750 --> 00:27:34,519
fried food is less sure in New Orleans

00:27:34,820 --> 00:27:41,519
so you you follow these daily best

00:27:38,429 --> 00:27:43,950
practices and just like you know with

00:27:41,519 --> 00:27:48,029
your risk for a heart attack drupal has

00:27:43,950 --> 00:27:49,529
best practices one of those is to follow

00:27:48,029 --> 00:27:52,250
the Drupal security team if you're on

00:27:49,529 --> 00:28:00,300
the Drupal security team please stand up

00:27:52,250 --> 00:28:01,890
how many people in here three so

00:28:00,300 --> 00:28:04,170
and I guess the three of us should be

00:28:01,890 --> 00:28:05,910
standing up but so please don't ask any

00:28:04,170 --> 00:28:08,250
of these people in this room to remove

00:28:05,910 --> 00:28:13,740
their shirt you might see like a portal

00:28:08,250 --> 00:28:17,160
to the Internet we follow the security

00:28:13,740 --> 00:28:21,450
team follows responsible disclosure to

00:28:17,160 --> 00:28:24,090
help keep your site secure and kind of

00:28:21,450 --> 00:28:25,950
that process is basically we we take in

00:28:24,090 --> 00:28:28,260
cummings reports about security

00:28:25,950 --> 00:28:30,900
vulnerabilities we verify that they're

00:28:28,260 --> 00:28:32,340
accurate we then work with the

00:28:30,900 --> 00:28:34,710
maintainer 'he's to get those issues

00:28:32,340 --> 00:28:36,870
fixed and then we release security

00:28:34,710 --> 00:28:39,480
advisories and whatever the updated

00:28:36,870 --> 00:28:41,880
version of the code is on a wednesday in

00:28:39,480 --> 00:28:43,950
a coordinated release fashion and we

00:28:41,880 --> 00:28:45,300
provide advice on best practices for

00:28:43,950 --> 00:28:48,360
maintainer ziff they have a question

00:28:45,300 --> 00:28:50,610
about how to handle something the

00:28:48,360 --> 00:28:52,650
security team doesn't actively scan all

00:28:50,610 --> 00:28:54,810
Drupal modules so there's no sort of

00:28:52,650 --> 00:28:56,610
active process in that regard it's more

00:28:54,810 --> 00:28:58,260
reactive as if they security

00:28:56,610 --> 00:28:59,460
vulnerability is found there are members

00:28:58,260 --> 00:29:02,280
of the team on their own time who do

00:28:59,460 --> 00:29:08,310
some of that analysis but it's not a not

00:29:02,280 --> 00:29:10,590
an active and as I said we release

00:29:08,310 --> 00:29:15,180
updates on Wednesdays typically between

00:29:10,590 --> 00:29:17,910
noon and five PM eastern time kind of

00:29:15,180 --> 00:29:19,470
trending more towards like noon 31

00:29:17,910 --> 00:29:22,800
o'clock somewhere in that range but

00:29:19,470 --> 00:29:24,630
sometimes it gets spread out so what

00:29:22,800 --> 00:29:27,690
does that mean on Wednesdays you you

00:29:24,630 --> 00:29:29,010
should have a little bit of time set

00:29:27,690 --> 00:29:30,270
aside to see if there's any release

00:29:29,010 --> 00:29:32,790
announcements you can follow us on

00:29:30,270 --> 00:29:34,620
Twitter we have RSS feeds we send out

00:29:32,790 --> 00:29:37,020
emails which you can subscribe to if you

00:29:34,620 --> 00:29:39,180
have a drupal.org account edit your

00:29:37,020 --> 00:29:40,110
profile I it's moved around a bunch of

00:29:39,180 --> 00:29:42,660
times but I think there's something

00:29:40,110 --> 00:29:44,730
called my newsletters and there's a box

00:29:42,660 --> 00:29:46,830
in there to check to see if you can

00:29:44,730 --> 00:29:48,450
subscribe having said that we just

00:29:46,830 --> 00:29:50,280
updated our list infrastructure and I

00:29:48,450 --> 00:29:52,530
don't think we checked that today and

00:29:50,280 --> 00:29:54,840
I'm looking at Rudy to to actually see

00:29:52,530 --> 00:29:58,250
if that I don't think we did that so if

00:29:54,840 --> 00:29:58,250
it doesn't work we'll have it fixed soon

00:29:58,340 --> 00:30:03,930
but do set a time the Sun is a time on

00:30:01,500 --> 00:30:06,420
Wednesdays it's important to do it's the

00:30:03,930 --> 00:30:09,090
number one easiest thing you can do to

00:30:06,420 --> 00:30:10,560
keep your site secure is just keep it

00:30:09,090 --> 00:30:12,690
updated and that doesn't just go for

00:30:10,560 --> 00:30:14,970
your site that goes for every

00:30:12,690 --> 00:30:18,150
you're running in your stack so whether

00:30:14,970 --> 00:30:21,780
it's Drupal or Lennox or my sequel or

00:30:18,150 --> 00:30:24,090
your firewall there was a cisco AAS a

00:30:21,780 --> 00:30:26,400
firewall issue that came out about three

00:30:24,090 --> 00:30:28,740
months ago where someone can get root on

00:30:26,400 --> 00:30:30,660
your firewall so keep all your

00:30:28,740 --> 00:30:32,790
components in your stack up to date it's

00:30:30,660 --> 00:30:35,160
the easiest defense you can have against

00:30:32,790 --> 00:30:38,010
hackers it doesn't require much extra

00:30:35,160 --> 00:30:39,150
work it's really simple to do and I

00:30:38,010 --> 00:30:40,740
think one thing that goes along with

00:30:39,150 --> 00:30:42,360
that is that not only should you set

00:30:40,740 --> 00:30:44,490
aside time but you should also make it

00:30:42,360 --> 00:30:46,680
as easy as of a process as possible and

00:30:44,490 --> 00:30:49,890
make it easy to recover if there's a

00:30:46,680 --> 00:30:52,290
problem so you know you want to make the

00:30:49,890 --> 00:30:54,060
deployment as automated as possible make

00:30:52,290 --> 00:30:55,890
the integration of new code is automated

00:30:54,060 --> 00:30:57,390
as possible have automated tests if you

00:30:55,890 --> 00:30:59,160
can have a QA process that you're

00:30:57,390 --> 00:31:00,300
confident in you know just make that as

00:30:59,160 --> 00:31:01,650
easy as possible so then as you're

00:31:00,300 --> 00:31:03,420
looking at these new releases and you

00:31:01,650 --> 00:31:04,860
say wow that's a lot instead you're

00:31:03,420 --> 00:31:07,110
saying oh no problem I'll just push the

00:31:04,860 --> 00:31:08,550
button and it'll happen hopefully how

00:31:07,110 --> 00:31:11,190
many people have an automated deployment

00:31:08,550 --> 00:31:14,160
workflow okay how many people have

00:31:11,190 --> 00:31:15,990
backups how many people ever destroyed

00:31:14,160 --> 00:31:18,140
the production environment and recreated

00:31:15,990 --> 00:31:20,550
it from backup in a testing environment

00:31:18,140 --> 00:31:22,260
so for everybody's whose hands were up

00:31:20,550 --> 00:31:24,650
earlier who said the head backups your

00:31:22,260 --> 00:31:28,050
backups are useless if they don't work

00:31:24,650 --> 00:31:30,150
so it's not enough just to back up the

00:31:28,050 --> 00:31:32,880
things actually try restoring is if your

00:31:30,150 --> 00:31:34,440
production environment got destroyed we

00:31:32,880 --> 00:31:36,330
run a drill typically where we take

00:31:34,440 --> 00:31:39,300
those backups throw them on a drive and

00:31:36,330 --> 00:31:41,250
restore them to a different provider so

00:31:39,300 --> 00:31:44,430
we test to make sure that if you know

00:31:41,250 --> 00:31:46,710
provider a what belly-up it is gone and

00:31:44,430 --> 00:31:48,450
all the data they had is gone could we

00:31:46,710 --> 00:31:50,520
get up and running and how long does

00:31:48,450 --> 00:31:52,610
that take and then from a business side

00:31:50,520 --> 00:31:55,680
is that okay with the business you know

00:31:52,610 --> 00:31:58,170
folks is a 20-hour restore time

00:31:55,680 --> 00:32:00,180
acceptable and if not what do we do to

00:31:58,170 --> 00:32:02,580
speed that up you know I said keep your

00:32:00,180 --> 00:32:05,130
stack up to date you know I want to also

00:32:02,580 --> 00:32:07,200
bring up you guys all have laptops use

00:32:05,130 --> 00:32:13,680
to connect your sites make sure your

00:32:07,200 --> 00:32:15,600
laptops are up to date the CVE 2016 2315

00:32:13,680 --> 00:32:17,940
is a get vulnerability in which if you

00:32:15,600 --> 00:32:19,980
check out a repository with malicious

00:32:17,940 --> 00:32:22,260
code in it run shell shell scripts on

00:32:19,980 --> 00:32:24,300
your local machine as you so it could

00:32:22,260 --> 00:32:25,530
take your ssh keys and send them to a

00:32:24,300 --> 00:32:27,390
third party

00:32:25,530 --> 00:32:31,110
I've got a repo for people to check out

00:32:27,390 --> 00:32:32,970
after this um but the point is is that

00:32:31,110 --> 00:32:35,510
every component you're using in your

00:32:32,970 --> 00:32:38,610
stack including your local machine

00:32:35,510 --> 00:32:40,530
potentially is vulnerable the image

00:32:38,610 --> 00:32:42,030
magic one is a great one it's not Drupal

00:32:40,530 --> 00:32:44,600
specific but if you're running

00:32:42,030 --> 00:32:47,010
imagemagick you need to mitigate that

00:32:44,600 --> 00:32:48,540
and there's directions online how to do

00:32:47,010 --> 00:32:50,340
so if you're running with a hosting

00:32:48,540 --> 00:32:54,420
provider well we'll talk about that in a

00:32:50,340 --> 00:32:55,590
second so that kind of goes to process

00:32:54,420 --> 00:32:58,050
how many people have like checked off

00:32:55,590 --> 00:33:00,270
the security check box before nobody's

00:32:58,050 --> 00:33:03,660
willing to commit this so like you'll

00:33:00,270 --> 00:33:05,730
see I won't name names you know these

00:33:03,660 --> 00:33:07,530
proposals that come from Drupal vendors

00:33:05,730 --> 00:33:09,630
where they actually have a line item for

00:33:07,530 --> 00:33:11,700
security and it's a checkbox it's a

00:33:09,630 --> 00:33:13,800
sprint basically where they're going to

00:33:11,700 --> 00:33:16,620
go through and secure the site normally

00:33:13,800 --> 00:33:19,890
after it's built that doesn't really

00:33:16,620 --> 00:33:21,630
work security should be embedded into

00:33:19,890 --> 00:33:22,770
every sprint when you're asked when

00:33:21,630 --> 00:33:24,840
you're installing a module you should

00:33:22,770 --> 00:33:26,280
sit there and ask yourself hey what is

00:33:24,840 --> 00:33:27,930
the impact from me installing this

00:33:26,280 --> 00:33:30,000
module on the security of my sight and

00:33:27,930 --> 00:33:31,320
you should be also be asking what's the

00:33:30,000 --> 00:33:33,030
performance impact not that thats

00:33:31,320 --> 00:33:34,920
related to security but when you're

00:33:33,030 --> 00:33:36,240
making decisions regarding your site

00:33:34,920 --> 00:33:43,800
there's all these different questions

00:33:36,240 --> 00:33:46,560
that come into mind okay you know this

00:33:43,800 --> 00:33:48,630
is I put this up because I made this

00:33:46,560 --> 00:33:50,550
mistake drupal has a lot of these check

00:33:48,630 --> 00:33:52,440
boxes in it and these drop-down things

00:33:50,550 --> 00:33:53,730
and they're really cool UI widgets

00:33:52,440 --> 00:33:55,710
because we don't have to write code to

00:33:53,730 --> 00:33:57,990
do things but you have to be aware of

00:33:55,710 --> 00:34:03,420
the check box I accidentally clicked

00:33:57,990 --> 00:34:05,340
administer permissions oops I've seen

00:34:03,420 --> 00:34:08,640
other sites where people have checked

00:34:05,340 --> 00:34:11,929
other things like use administration

00:34:08,640 --> 00:34:16,080
system and you know what's the other one

00:34:11,929 --> 00:34:18,030
administer taxonomy will administer

00:34:16,080 --> 00:34:18,840
taxonomy is not a security issue people

00:34:18,030 --> 00:34:21,000
need to be able to add and remove

00:34:18,840 --> 00:34:23,190
taxonomy but administering taxonomy lets

00:34:21,000 --> 00:34:28,830
you administer fields which kind of

00:34:23,190 --> 00:34:30,390
makes it a security issue ah your users

00:34:28,830 --> 00:34:32,640
are probably your biggest security issue

00:34:30,390 --> 00:34:34,050
sorry about that but they're probably

00:34:32,640 --> 00:34:37,320
you're like single point of weakness

00:34:34,050 --> 00:34:38,550
unfortunately your configuration never

00:34:37,320 --> 00:34:41,910
give anyone you

00:34:38,550 --> 00:34:44,340
a hundred percent trustful HTML side

00:34:41,910 --> 00:34:46,080
story on this you know you've got

00:34:44,340 --> 00:34:47,760
content editors who work on your site

00:34:46,080 --> 00:34:50,400
they're trusted their employees you give

00:34:47,760 --> 00:34:53,040
them full HTML I've seen people copy and

00:34:50,400 --> 00:34:54,630
paste JavaScript code off the internet

00:34:53,040 --> 00:34:57,450
into a site because they were trying to

00:34:54,630 --> 00:34:59,190
accomplish something that's bad

00:34:57,450 --> 00:35:02,760
especially because they don't understand

00:34:59,190 --> 00:35:04,410
the code they're copying and anything

00:35:02,760 --> 00:35:06,420
that has admin star has the little

00:35:04,410 --> 00:35:09,000
italicized text under it you know give

00:35:06,420 --> 00:35:11,190
this to trusted users only really

00:35:09,000 --> 00:35:12,990
trusted users is almost a synonym for

00:35:11,190 --> 00:35:14,370
site builders and administrators like I

00:35:12,990 --> 00:35:17,790
know we all can't follow that all the

00:35:14,370 --> 00:35:19,680
time but we should try to and i would

00:35:17,790 --> 00:35:21,330
say these are this list is the root of a

00:35:19,680 --> 00:35:24,390
lot of the vulnerabilities shown in

00:35:21,330 --> 00:35:26,490
those videos because the my sequel

00:35:24,390 --> 00:35:28,200
database had read access available to

00:35:26,490 --> 00:35:29,940
anonymous people you could like connect

00:35:28,200 --> 00:35:34,140
to it from anywhere on the internet

00:35:29,940 --> 00:35:36,720
that's a configuration issue the Drupal

00:35:34,140 --> 00:35:39,660
site had was allowed to just like grants

00:35:36,720 --> 00:35:40,590
administrative role to that after

00:35:39,660 --> 00:35:41,790
creating the account that's also a

00:35:40,590 --> 00:35:43,890
configuration issue so it's sort of

00:35:41,790 --> 00:35:45,150
these things pile up you know getting a

00:35:43,890 --> 00:35:47,130
little bit of access you find some more

00:35:45,150 --> 00:35:49,050
access the like so there's that there's

00:35:47,130 --> 00:35:51,450
a term of defense and defense in depth

00:35:49,050 --> 00:35:53,160
about life you know auditing

00:35:51,450 --> 00:35:54,720
configuration but also putting in

00:35:53,160 --> 00:35:56,040
security controls behind that and sort

00:35:54,720 --> 00:35:58,710
of think you know holistically about

00:35:56,040 --> 00:36:02,250
this and not just a check boxes Michael

00:35:58,710 --> 00:36:04,380
said most attacks aren't the result of

00:36:02,250 --> 00:36:06,330
one vulnerability sao five was kind of

00:36:04,380 --> 00:36:08,850
the exception there but most attacks are

00:36:06,330 --> 00:36:10,230
I use a little one little vulnerability

00:36:08,850 --> 00:36:14,520
which then I use another vulnerability

00:36:10,230 --> 00:36:16,830
and now I've got root everywhere so keep

00:36:14,520 --> 00:36:19,590
that in mind also there are modules out

00:36:16,830 --> 00:36:22,020
there whose sole purpose is to increase

00:36:19,590 --> 00:36:23,340
your security like that's all they're

00:36:22,020 --> 00:36:25,530
designed to do is to increase your

00:36:23,340 --> 00:36:28,590
security this is not an exhaustive list

00:36:25,530 --> 00:36:31,020
but we'll go through these two factor

00:36:28,590 --> 00:36:33,900
authentication really easy to run on

00:36:31,020 --> 00:36:36,210
your site it's really really easy to run

00:36:33,900 --> 00:36:38,730
on your site it doesn't require anything

00:36:36,210 --> 00:36:41,640
special just install it set it up it

00:36:38,730 --> 00:36:43,260
provides an enormous second layer of

00:36:41,640 --> 00:36:45,630
authentication or second layer of

00:36:43,260 --> 00:36:47,109
security for your users it's sometimes a

00:36:45,630 --> 00:36:49,210
pain to use

00:36:47,109 --> 00:36:51,339
but the security out you know security

00:36:49,210 --> 00:36:52,809
is never easy the the security

00:36:51,339 --> 00:36:55,059
protections you get the risk you

00:36:52,809 --> 00:36:57,130
mitigate by using it is worth it and

00:36:55,059 --> 00:36:58,989
despite the video you unless you have a

00:36:57,130 --> 00:37:00,460
configuration issue that gives people

00:36:58,989 --> 00:37:03,489
access to the private key you can't just

00:37:00,460 --> 00:37:05,440
like hack GF a module that way yeah it's

00:37:03,489 --> 00:37:08,049
it's difficult to act actually we ran a

00:37:05,440 --> 00:37:10,660
bounty on it where we basically threw it

00:37:08,049 --> 00:37:12,160
up on a hosting provider and gave out

00:37:10,660 --> 00:37:13,599
the username and password i think it was

00:37:12,160 --> 00:37:16,239
admin admin and said if you can get

00:37:13,599 --> 00:37:18,099
access to this site and create a note on

00:37:16,239 --> 00:37:20,680
the site or modify a node we will give

00:37:18,099 --> 00:37:23,049
you money and ran that for three months

00:37:20,680 --> 00:37:24,579
i think yeah it was it was five hundred

00:37:23,049 --> 00:37:26,109
dollars so like not not an extreme

00:37:24,579 --> 00:37:28,960
amount but also not a trivial amount of

00:37:26,109 --> 00:37:30,069
money and there were I think we counted

00:37:28,960 --> 00:37:31,960
something like forty different IP

00:37:30,069 --> 00:37:33,759
addresses who tried to attack it a

00:37:31,960 --> 00:37:35,049
couple of people tried brute force

00:37:33,759 --> 00:37:36,970
attacks on it which is like a

00:37:35,049 --> 00:37:39,940
theoretical possibility with a six digit

00:37:36,970 --> 00:37:41,289
number but you know even after hitting

00:37:39,940 --> 00:37:42,849
the mathematical number where they

00:37:41,289 --> 00:37:45,700
should have been able to break it that

00:37:42,849 --> 00:37:47,200
person was still not able to break it so

00:37:45,700 --> 00:37:48,910
you know we had said the brute force

00:37:47,200 --> 00:37:50,619
attacks were out of scope because you

00:37:48,910 --> 00:37:52,299
know one of the things that I think it's

00:37:50,619 --> 00:37:53,739
important with security is that you know

00:37:52,299 --> 00:37:57,009
you know you're going to get attacked so

00:37:53,739 --> 00:37:59,049
as somebody is is attacking you want you

00:37:57,009 --> 00:38:00,549
want that to be noisy if especially if

00:37:59,049 --> 00:38:03,069
they've like move from one place to

00:38:00,549 --> 00:38:04,569
another so you want to have detection in

00:38:03,069 --> 00:38:06,249
place that will make it noisy for them

00:38:04,569 --> 00:38:08,680
to do that and a brute force attack on a

00:38:06,249 --> 00:38:10,210
totp code is going to be a pretty noisy

00:38:08,680 --> 00:38:11,559
thing because it's going to take you

00:38:10,210 --> 00:38:14,920
know hundreds of thousands of visits to

00:38:11,559 --> 00:38:16,839
your site from one IP and actually TFA

00:38:14,920 --> 00:38:18,460
now no longer allows brute force attacks

00:38:16,839 --> 00:38:20,380
that's right using flood it has flood

00:38:18,460 --> 00:38:22,180
protection that's right so hot it's

00:38:20,380 --> 00:38:23,950
harder and if I take a lot long it take

00:38:22,180 --> 00:38:27,430
a lot would take a lot longer so

00:38:23,950 --> 00:38:30,430
paranoia is a really cool module it

00:38:27,430 --> 00:38:31,779
mitigates an enormous amount of risk it

00:38:30,430 --> 00:38:33,730
is the type of thing that you probably

00:38:31,779 --> 00:38:35,170
want to start on a dev site or a staging

00:38:33,730 --> 00:38:38,650
site I would not roll it out to your

00:38:35,170 --> 00:38:40,359
production site it does make things it

00:38:38,650 --> 00:38:42,039
takes the best practices that you should

00:38:40,359 --> 00:38:44,049
be following and makes you follow them

00:38:42,039 --> 00:38:45,640
for a lack of Oh basically it's the best

00:38:44,049 --> 00:38:47,589
way to describe it so if you're using

00:38:45,640 --> 00:38:49,809
PHP code anywhere on your site and you

00:38:47,589 --> 00:38:52,779
install paranoia you're not using PHP

00:38:49,809 --> 00:38:54,099
code anywhere on your site owner so

00:38:52,779 --> 00:38:56,529
that's the type of thing you want to

00:38:54,099 --> 00:38:58,809
install a password policy module there's

00:38:56,529 --> 00:38:59,800
a lot of these but basically if people

00:38:58,809 --> 00:39:02,790
are using a password

00:38:59,800 --> 00:39:05,050
one character that's bad just stops that

00:39:02,790 --> 00:39:06,190
security review is a module that

00:39:05,050 --> 00:39:09,580
basically goes through your

00:39:06,190 --> 00:39:12,460
configuration and sees if you're doing

00:39:09,580 --> 00:39:14,080
some known common mistakes so all it

00:39:12,460 --> 00:39:15,820
does is generate a report it doesn't

00:39:14,080 --> 00:39:17,290
change anything but it's the type of

00:39:15,820 --> 00:39:18,880
thing you can automate so there's a

00:39:17,290 --> 00:39:20,830
dress script for and you can run it on

00:39:18,880 --> 00:39:22,330
your site with every deployment and see

00:39:20,830 --> 00:39:24,100
if people are you know have done things

00:39:22,330 --> 00:39:27,370
that they shouldn't be doing an account

00:39:24,100 --> 00:39:30,400
Sentinel yeah accountant Sentinel is a

00:39:27,370 --> 00:39:32,890
relatively new module it basically takes

00:39:30,400 --> 00:39:35,170
a look at the accounts on your site so

00:39:32,890 --> 00:39:36,880
it helps to protect against the instance

00:39:35,170 --> 00:39:38,680
that we saw earlier of an attacker

00:39:36,880 --> 00:39:41,050
create an account called admin one and

00:39:38,680 --> 00:39:43,060
then granting it the admin role account

00:39:41,050 --> 00:39:45,220
Sentinel knows everybody who is an admin

00:39:43,060 --> 00:39:47,650
and it stores that fact in a database

00:39:45,220 --> 00:39:49,150
table with a hash the hash is hopefully

00:39:47,650 --> 00:39:52,300
stored in the settings that Pete are

00:39:49,150 --> 00:39:53,620
based on a a salt that's stored in the

00:39:52,300 --> 00:39:54,760
settings about PHP so that the hash

00:39:53,620 --> 00:39:56,920
can't be tampered in the database

00:39:54,760 --> 00:39:58,780
directly so account Sentinel really

00:39:56,920 --> 00:40:00,010
really knows if there are any new

00:39:58,780 --> 00:40:01,690
accounts added to your site with

00:40:00,010 --> 00:40:03,310
different roles different permissions on

00:40:01,690 --> 00:40:04,720
them a couple different things like that

00:40:03,310 --> 00:40:06,960
and it will send you an email whenever

00:40:04,720 --> 00:40:09,880
that happens it sends an email whenever

00:40:06,960 --> 00:40:11,260
a password has changed if you're using

00:40:09,880 --> 00:40:12,850
the password strength module it will

00:40:11,260 --> 00:40:15,880
also tell you how strong that person's

00:40:12,850 --> 00:40:17,830
password was has a handful of other

00:40:15,880 --> 00:40:19,900
features like that so that you can

00:40:17,830 --> 00:40:21,850
understand you know gives you makes that

00:40:19,900 --> 00:40:23,530
attack noisy right as I was saying

00:40:21,850 --> 00:40:27,540
earlier it helps you to know if you've

00:40:23,530 --> 00:40:31,170
got an attack going on so hosting

00:40:27,540 --> 00:40:33,820
basically pay for good hosting don't use

00:40:31,170 --> 00:40:35,290
$10 shared hosting or fifty dollar

00:40:33,820 --> 00:40:36,970
shared hosting on the

00:40:35,290 --> 00:40:40,360
hundred-thousand-dollar sites you just

00:40:36,970 --> 00:40:41,710
bond shared hosting isn't secure it's

00:40:40,360 --> 00:40:43,390
cheap if you're going to spend the money

00:40:41,710 --> 00:40:45,940
to build a good site don't host it on

00:40:43,390 --> 00:40:47,440
the cheap should say don't don't spend

00:40:45,940 --> 00:40:51,340
money then oh yeah I boarded it

00:40:47,440 --> 00:40:53,890
correctly so host your sights on I'm not

00:40:51,340 --> 00:40:55,780
naming company names but you know if

00:40:53,890 --> 00:40:57,790
you've spent spend the appropriate money

00:40:55,780 --> 00:41:01,000
for where your site lives it is your

00:40:57,790 --> 00:41:02,490
site's home don't put your site in with

00:41:01,000 --> 00:41:07,480
a bunch of other sites it won't be happy

00:41:02,490 --> 00:41:09,100
for all sorts of reasons https so we

00:41:07,480 --> 00:41:11,050
have this wonderful new project out

00:41:09,100 --> 00:41:11,700
called let's encrypt it generates free

00:41:11,050 --> 00:41:16,170
SS

00:41:11,700 --> 00:41:19,770
certs there is never a reason to host a

00:41:16,170 --> 00:41:22,500
site that isn't under SSL if you're not

00:41:19,770 --> 00:41:24,660
serving your site over SSL do it now and

00:41:22,500 --> 00:41:26,730
there's a module out there that lets you

00:41:24,660 --> 00:41:28,140
like login over SSL and then like

00:41:26,730 --> 00:41:30,839
transfers you back to a non-secure

00:41:28,140 --> 00:41:34,320
domain don't use that it exposes cookies

00:41:30,839 --> 00:41:36,300
and all sorts of other things there's no

00:41:34,320 --> 00:41:39,359
server costs to running SSL nowadays

00:41:36,300 --> 00:41:41,490
just just host your site under SSL every

00:41:39,359 --> 00:41:43,109
major hosting company allows this and if

00:41:41,490 --> 00:41:48,390
your hosting company doesn't find a

00:41:43,109 --> 00:41:49,619
different one and then you know getting

00:41:48,390 --> 00:41:51,359
close to the end here because I want to

00:41:49,619 --> 00:41:54,240
take questions repeat this on your own

00:41:51,359 --> 00:41:55,560
sites so pretend to be a hacker and find

00:41:54,240 --> 00:41:58,890
out what you can explore on your own

00:41:55,560 --> 00:42:02,579
sites or have / pay someone else to do

00:41:58,890 --> 00:42:04,440
it for you it's really illuminating what

00:42:02,579 --> 00:42:09,329
you discover when you go through this on

00:42:04,440 --> 00:42:11,369
your own site I will be posting more

00:42:09,329 --> 00:42:13,079
videos online there were more video we

00:42:11,369 --> 00:42:15,240
cut the videos down also the videos were

00:42:13,079 --> 00:42:16,260
sped up significantly so that we weren't

00:42:15,240 --> 00:42:19,290
sitting here for an hour and a half

00:42:16,260 --> 00:42:20,940
watching videos i will put the videos

00:42:19,290 --> 00:42:22,380
online probably the end of the day

00:42:20,940 --> 00:42:24,619
tomorrow depending on how fast the

00:42:22,380 --> 00:42:28,980
campus there the Wi-Fi connection is ah

00:42:24,619 --> 00:42:30,089
may take a few days and so we'll get the

00:42:28,980 --> 00:42:32,099
videos online you'll be able to watch

00:42:30,089 --> 00:42:33,810
them all there's ones that are narrated

00:42:32,099 --> 00:42:37,859
so you kind of see what's going on in

00:42:33,810 --> 00:42:43,170
real time thank you Greg ah and let's

00:42:37,859 --> 00:42:45,650
take some questions yeah come on up to

00:42:43,170 --> 00:42:45,650
the mic please

00:42:49,320 --> 00:42:53,260
I kind of missed the beginning of you

00:42:51,790 --> 00:42:56,830
talk so forgive me if you already went

00:42:53,260 --> 00:42:59,500
over this but in recent days we've gone

00:42:56,830 --> 00:43:01,060
through dozens dozens of hacked sites

00:42:59,500 --> 00:43:03,190
that happens more and more freaking all

00:43:01,060 --> 00:43:05,619
the time and for the most part people

00:43:03,190 --> 00:43:07,359
don't have backups or at least they

00:43:05,619 --> 00:43:09,190
don't have a backup procedure that

00:43:07,359 --> 00:43:14,800
yields in with a backup that's not also

00:43:09,190 --> 00:43:17,650
hacked so what are your methods of going

00:43:14,800 --> 00:43:19,350
into Anna site and going through its

00:43:17,650 --> 00:43:23,470
files and looking for that information

00:43:19,350 --> 00:43:25,150
so backups sorry so you know I I

00:43:23,470 --> 00:43:26,830
typically you know there's the hardline

00:43:25,150 --> 00:43:29,320
approach that says that once the site's

00:43:26,830 --> 00:43:30,880
been hacked there is no one hundred

00:43:29,320 --> 00:43:33,220
percent sure fire way to make sure that

00:43:30,880 --> 00:43:35,410
it's secure again you know the

00:43:33,220 --> 00:43:36,700
presentation that I think we did last

00:43:35,410 --> 00:43:38,080
year basically tells the story of

00:43:36,700 --> 00:43:39,190
someone who got hacked they put they

00:43:38,080 --> 00:43:40,930
clean it up they put their site back

00:43:39,190 --> 00:43:42,070
online and it continually gets hacked

00:43:40,930 --> 00:43:44,470
again because they didn't find anything

00:43:42,070 --> 00:43:46,090
there is the hacked module which

00:43:44,470 --> 00:43:49,240
basically goes through and tries to find

00:43:46,090 --> 00:43:52,750
what's been done a lot of manual review

00:43:49,240 --> 00:43:54,940
of user accounts there's there's a page

00:43:52,750 --> 00:43:59,170
in the handbook that's a triple dot org

00:43:54,940 --> 00:44:00,820
node 2 3 6 5 5 47 I've read it I'm are

00:43:59,170 --> 00:44:02,410
you ready okay well I've done a lot of

00:44:00,820 --> 00:44:03,790
the things I'm saying I was curious if

00:44:02,410 --> 00:44:05,560
they mirrored something you would do

00:44:03,790 --> 00:44:07,030
beside actually just rebuilding the

00:44:05,560 --> 00:44:08,980
whole site which typically is not in

00:44:07,030 --> 00:44:11,410
their budget you know you got to go a

00:44:08,980 --> 00:44:13,720
lot of its just manual right yeah it's

00:44:11,410 --> 00:44:20,050
manual it's never guaranteed right yeah

00:44:13,720 --> 00:44:21,910
okay thanks thank you so in my question

00:44:20,050 --> 00:44:23,950
is about the modules like new modules

00:44:21,910 --> 00:44:25,960
own how long does it take before you

00:44:23,950 --> 00:44:29,050
guys bless them to say it's okay that

00:44:25,960 --> 00:44:32,200
they're able to be used for the rest of

00:44:29,050 --> 00:44:34,420
us using modules on on Drupal sites so

00:44:32,200 --> 00:44:35,710
that's a good question actually at the

00:44:34,420 --> 00:44:38,410
moment the maintainer is make that

00:44:35,710 --> 00:44:40,450
decision we have a proposal that will be

00:44:38,410 --> 00:44:41,950
looking at that may change the way that

00:44:40,450 --> 00:44:44,020
works but for now the maintainer is

00:44:41,950 --> 00:44:46,030
basically say this is a stable module

00:44:44,020 --> 00:44:47,800
and as soon as they do that it gets

00:44:46,030 --> 00:44:49,270
security team coverage and if it's

00:44:47,800 --> 00:44:52,780
reported as a vulnerability we follow

00:44:49,270 --> 00:44:54,760
our processes and that's why we have the

00:44:52,780 --> 00:44:56,710
sandbox and the project applications to

00:44:54,760 --> 00:44:57,900
help make sure that people aren't just

00:44:56,710 --> 00:45:00,460
throwing up code on the

00:44:57,900 --> 00:45:02,650
thank you and just do it stand on that

00:45:00,460 --> 00:45:05,320
the as a security team to say this

00:45:02,650 --> 00:45:06,670
module is okay to you know be run that's

00:45:05,320 --> 00:45:08,110
a sort of hard thing to say for

00:45:06,670 --> 00:45:09,640
everybody who's building Drupal modules

00:45:08,110 --> 00:45:11,020
and running triple sites so the way that

00:45:09,640 --> 00:45:13,180
the security team has decided to

00:45:11,020 --> 00:45:15,070
communicate that is to say security

00:45:13,180 --> 00:45:16,840
advisories which is a you know

00:45:15,070 --> 00:45:18,460
vulnerability report and an upgrade path

00:45:16,840 --> 00:45:21,550
that's going to come out for stable

00:45:18,460 --> 00:45:23,410
modules only so dev modules or alpha

00:45:21,550 --> 00:45:25,510
beta modules right now those don't go

00:45:23,410 --> 00:45:28,030
don't get security advisors that's just

00:45:25,510 --> 00:45:30,670
a way to communicate from the team but

00:45:28,030 --> 00:45:32,560
obviously that's a impediment for some

00:45:30,670 --> 00:45:34,300
light module development process so

00:45:32,560 --> 00:45:37,300
that's the proposal that Michael is

00:45:34,300 --> 00:45:39,640
elaborating on let's say you know in my

00:45:37,300 --> 00:45:41,860
experience like basically every site

00:45:39,640 --> 00:45:43,810
that I've seen that was exploited they

00:45:41,860 --> 00:45:45,460
were exploited with vulnerabilities you

00:45:43,810 --> 00:45:48,040
know unless you're unless you're like

00:45:45,460 --> 00:45:51,370
Stuxnet or something like that like very

00:45:48,040 --> 00:45:52,930
few resources are compromised by

00:45:51,370 --> 00:45:54,880
something that's a true zero day that

00:45:52,930 --> 00:45:57,610
has not been disclosed yet and so having

00:45:54,880 --> 00:45:59,410
a healthy functioning coordinated

00:45:57,610 --> 00:46:01,000
disclosure program is the best thing

00:45:59,410 --> 00:46:03,220
that a software project can do to ensure

00:46:01,000 --> 00:46:04,450
the safety of their users and then of

00:46:03,220 --> 00:46:05,710
the site builders and its

00:46:04,450 --> 00:46:08,320
responsibilities the site builders then

00:46:05,710 --> 00:46:11,020
to upgrade quickly so I would say you

00:46:08,320 --> 00:46:13,990
know favor modules that have a stable

00:46:11,020 --> 00:46:15,340
you know one dotto release when you can

00:46:13,990 --> 00:46:16,600
and if you can't encourage the

00:46:15,340 --> 00:46:18,220
maintainer to do that work with them to

00:46:16,600 --> 00:46:20,260
get that done maybe you pay them to get

00:46:18,220 --> 00:46:21,670
that done and then follow updates as

00:46:20,260 --> 00:46:23,890
quickly as possible those are you know

00:46:21,670 --> 00:46:28,180
really the two keys in my mind to have a

00:46:23,890 --> 00:46:30,430
safe site can you discuss a little bit

00:46:28,180 --> 00:46:33,490
about sort of a drive-by or automated

00:46:30,430 --> 00:46:35,560
scans or attacks where it's not so

00:46:33,490 --> 00:46:36,790
tailored or individual but it just are

00:46:35,560 --> 00:46:38,890
out there kind of those sucking up the

00:46:36,790 --> 00:46:46,030
data if you can discuss some simple

00:46:38,890 --> 00:46:48,280
mitigation measures so you if you look

00:46:46,030 --> 00:46:49,960
at your access log or whatever your web

00:46:48,280 --> 00:46:51,970
server happens to call it you will see

00:46:49,960 --> 00:46:53,530
these and what what normally is

00:46:51,970 --> 00:46:56,200
happening is there's been a publicly

00:46:53,530 --> 00:46:59,500
disclosed vulnerability in a project and

00:46:56,200 --> 00:47:01,780
a attacker is basically scanning the

00:46:59,500 --> 00:47:03,430
internet trying to find servers that are

00:47:01,780 --> 00:47:05,680
running that particular version of that

00:47:03,430 --> 00:47:07,570
project or just running that project so

00:47:05,680 --> 00:47:09,920
you know this happens in everything

00:47:07,570 --> 00:47:12,770
wordpress drupal PHP myadmin had

00:47:09,920 --> 00:47:14,569
one for ages and here you'll see

00:47:12,770 --> 00:47:15,920
attackers going through and just seeing

00:47:14,569 --> 00:47:17,510
you know does this path exists is this

00:47:15,920 --> 00:47:20,240
path exists does this path exists is

00:47:17,510 --> 00:47:21,619
this map this excuse me and so when they

00:47:20,240 --> 00:47:25,099
find it they know they can attempt to

00:47:21,619 --> 00:47:27,440
exploit that vulnerability yeah I mean I

00:47:25,099 --> 00:47:30,650
think one good solution to that there's

00:47:27,440 --> 00:47:32,180
a lot of cloud web application firewall

00:47:30,650 --> 00:47:33,530
providers or there are some web

00:47:32,180 --> 00:47:35,869
application firewalls you can install

00:47:33,530 --> 00:47:37,700
yourself and run yourself that have sort

00:47:35,869 --> 00:47:40,700
of default rule sets to block that kind

00:47:37,700 --> 00:47:42,260
of traffic and that's helpful to reduce

00:47:40,700 --> 00:47:44,450
the resources that are wasted on those

00:47:42,260 --> 00:47:46,520
requests it's helpful to get that noise

00:47:44,450 --> 00:47:49,190
out of your logs so that log analysis

00:47:46,520 --> 00:47:52,369
and log review will be more valuable so

00:47:49,190 --> 00:47:54,890
that seems like a good solution I mostly

00:47:52,369 --> 00:47:57,319
just ignore it honestly which is

00:47:54,890 --> 00:48:01,099
probably not the best solution so you

00:47:57,319 --> 00:48:03,049
heard it here card calm I mean my

00:48:01,099 --> 00:48:05,450
personal say oh your personal site okay

00:48:03,049 --> 00:48:07,910
so fail the ban is a really cool tool

00:48:05,450 --> 00:48:10,339
used for ssh so if you're attempting to

00:48:07,910 --> 00:48:12,020
brute force an ssh password then it

00:48:10,339 --> 00:48:13,670
basically gives you like five tries by

00:48:12,020 --> 00:48:15,950
default and blocks your IP for a certain

00:48:13,670 --> 00:48:17,780
amount of time I've seen people who run

00:48:15,950 --> 00:48:20,089
just Drupal sites can figure that if

00:48:17,780 --> 00:48:22,190
someone goes to like WP admin on a

00:48:20,089 --> 00:48:25,010
Drupal site just block the IP they're up

00:48:22,190 --> 00:48:26,359
to no good like WP admin is not a URL

00:48:25,010 --> 00:48:30,349
that exists on a Drupal site unless

00:48:26,359 --> 00:48:32,780
you've done something very strange then

00:48:30,349 --> 00:48:34,220
you know so you can install fail to ban

00:48:32,780 --> 00:48:35,930
or other modules that basically say oh

00:48:34,220 --> 00:48:39,140
you're trying to access this URL that

00:48:35,930 --> 00:48:41,299
you shouldn't go to block you got to be

00:48:39,140 --> 00:48:43,160
a little careful with that because not

00:48:41,299 --> 00:48:45,950
everyone has a dedicated IP address so

00:48:43,160 --> 00:48:49,040
I'll you know you may be blocking a good

00:48:45,950 --> 00:48:50,780
portion of users drupal.org tried doing

00:48:49,040 --> 00:48:54,049
this for a while and ended up blocking I

00:48:50,780 --> 00:48:57,940
think a small country am i right on that

00:48:54,049 --> 00:49:02,359
I think there was some like we I'm sorry

00:48:57,940 --> 00:49:05,359
okay it's had a small kitchen so we

00:49:02,359 --> 00:49:06,920
blocked a large chunk of users by you

00:49:05,359 --> 00:49:10,150
know because one user was behaving as a

00:49:06,920 --> 00:49:10,150
bad actor yeah

00:49:11,880 --> 00:49:17,430
I have a site that we're migrating to

00:49:14,549 --> 00:49:19,650
Drupal over the next 12 months but we

00:49:17,430 --> 00:49:22,289
have more users over the age of 90 than

00:49:19,650 --> 00:49:24,630
we do under the age of 40 and so I have

00:49:22,289 --> 00:49:27,690
stakeholders who are very loath to put

00:49:24,630 --> 00:49:30,809
forth any sort of strong password policy

00:49:27,690 --> 00:49:33,599
or two factor authentication is there

00:49:30,809 --> 00:49:36,809
anything I can do other than cross my

00:49:33,599 --> 00:49:39,119
arms on the CEOs desk to to harden my

00:49:36,809 --> 00:49:42,150
site despite those sorts of limitations

00:49:39,119 --> 00:49:44,789
do they have to have user accounts they

00:49:42,150 --> 00:49:46,859
do yes do they need privileges on those

00:49:44,789 --> 00:49:50,009
user accounts like full HTML oh

00:49:46,859 --> 00:49:51,900
absolutely not so that I mean that's

00:49:50,009 --> 00:49:53,519
that's a huge mitigation there is that

00:49:51,900 --> 00:49:55,109
you know just because a user I mean take

00:49:53,519 --> 00:49:57,420
drupal.org for example everyone in this

00:49:55,109 --> 00:50:00,950
room can log into drupal.org we don't

00:49:57,420 --> 00:50:03,599
enforce strong passwords on drupal.org

00:50:00,950 --> 00:50:05,789
so now what we do do is if you have

00:50:03,599 --> 00:50:08,940
admin rights on drupal.org you must go

00:50:05,789 --> 00:50:11,210
through TFA but anyone can log into

00:50:08,940 --> 00:50:13,380
drupal.org and you know we also do a up

00:50:11,210 --> 00:50:15,450
it's been called many things over the

00:50:13,380 --> 00:50:17,730
years but we put you in a penalty box or

00:50:15,450 --> 00:50:19,650
a penalty box is the wrong term but we

00:50:17,730 --> 00:50:21,180
put you in a little waiting period to

00:50:19,650 --> 00:50:23,069
make sure you're not a spammer before we

00:50:21,180 --> 00:50:26,640
give you privileges to create anything

00:50:23,069 --> 00:50:28,769
anywhere unwrapped on-ramp there against

00:50:26,640 --> 00:50:30,329
the welcoming process I penalty box i

00:50:28,769 --> 00:50:31,859
call it penalty box because i'm thinking

00:50:30,329 --> 00:50:34,440
of post array which was a mail server

00:50:31,859 --> 00:50:36,710
implementation of the same concept i

00:50:34,440 --> 00:50:38,640
think one other thing you can do is

00:50:36,710 --> 00:50:39,930
analysis of the machines that they're

00:50:38,640 --> 00:50:42,180
coming from you can do like browser

00:50:39,930 --> 00:50:43,740
fingerprinting i mean if i guess it sort

00:50:42,180 --> 00:50:44,970
of depends upon the accounts like if

00:50:43,740 --> 00:50:46,500
they if they don't have administrator

00:50:44,970 --> 00:50:48,089
rights they're not they're not accessing

00:50:46,500 --> 00:50:50,819
sensitive information about themselves

00:50:48,089 --> 00:50:52,109
or other people then you know maybe it's

00:50:50,819 --> 00:50:53,400
not a big deal maybe they can have a bad

00:50:52,109 --> 00:50:56,039
password and that's okay you can just

00:50:53,400 --> 00:50:57,450
accept that as a risk for some levels of

00:50:56,039 --> 00:50:59,730
accounts but but there are other tools

00:50:57,450 --> 00:51:01,440
that you can use to fingerprint the

00:50:59,730 --> 00:51:03,839
browser looking at the user agent the

00:51:01,440 --> 00:51:05,190
language looking at how quickly the

00:51:03,839 --> 00:51:07,109
people type looking at the IP address

00:51:05,190 --> 00:51:09,450
that they come from the IP address or

00:51:07,109 --> 00:51:10,680
the the geolocation like html5

00:51:09,450 --> 00:51:12,119
geolocation that they're coming from

00:51:10,680 --> 00:51:13,500
there's a lot of things like that that

00:51:12,119 --> 00:51:16,079
you can use to create a fingerprint of

00:51:13,500 --> 00:51:17,519
visitors to your site and if you see all

00:51:16,079 --> 00:51:20,009
of a sudden that they're logging in from

00:51:17,519 --> 00:51:22,319
somewhere faster than you know jet

00:51:20,009 --> 00:51:23,700
travel would allow then you can like it

00:51:22,319 --> 00:51:24,640
you know look into the accountancy is

00:51:23,700 --> 00:51:28,359
this okay or not

00:51:24,640 --> 00:51:30,549
anybody wants to build that module so

00:51:28,359 --> 00:51:32,650
just a reminder please join us for our

00:51:30,549 --> 00:51:34,720
hacking sprints yes i modified the

00:51:32,650 --> 00:51:37,599
default slide and we've got some people

00:51:34,720 --> 00:51:39,609
we want to thank as well as take the

00:51:37,599 --> 00:51:41,260
survey evaluating this session we did

00:51:39,609 --> 00:51:43,000
things a little differently as you might

00:51:41,260 --> 00:51:44,170
be able to notice so we'd like to get

00:51:43,000 --> 00:51:47,470
some feedback from you on what you

00:51:44,170 --> 00:51:49,150
thought of it we have the node ID on on

00:51:47,470 --> 00:51:53,049
the slide which we got by viewing the

00:51:49,150 --> 00:51:57,700
source code on the page are there any

00:51:53,049 --> 00:52:03,420
other questions if you're logged in with

00:51:57,700 --> 00:52:03,420
edit privileges sure any other questions

00:52:04,140 --> 00:52:07,559
thank you everybody

00:52:13,580 --> 00:52:16,580

YouTube URL: https://www.youtube.com/watch?v=ek8FswgBvW4


