Title: DrupalCon New Orleans 2016: Configuration Management for Developers in Drupal 8
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	Is the configuration system your favorite feature of Drupal 8? Are you interested in doing continuous integration? Do you want to easily export all of your Drupal configuration to code? Interested in building a best practice continuous integration and deployment solution? This session, hosted by co-maintainers of the configuration system, will focus on how Drupal 8's configuration management system works, how to integrate it with a continuous integration system, and what developers can do to extend its power through contributed modules and custom code. Come with your questions and learn more about this magical part of Drupal 8.
Captions: 
	00:00:00,060 --> 00:00:09,679
I have young daughters so I can start

00:00:04,470 --> 00:00:13,950
off by asking if anyone knows why why

00:00:09,679 --> 00:00:19,350
why people like bananas it's because

00:00:13,950 --> 00:00:23,340
they have a peel yeah I could do this

00:00:19,350 --> 00:00:29,090
all day long I I want but I want it's

00:00:23,340 --> 00:00:31,470
2:15 so that segment ways into I guess

00:00:29,090 --> 00:00:34,020
me introducing myself we should probably

00:00:31,470 --> 00:00:36,450
do that we don't have any slides for

00:00:34,020 --> 00:00:41,219
that i my name is matthew Tift and I

00:00:36,450 --> 00:00:42,329
work at law lebot and I am one of the co

00:00:41,219 --> 00:00:46,140
maintainer x' of the drupal 8

00:00:42,329 --> 00:00:48,690
configuration system and this an I'm

00:00:46,140 --> 00:00:50,989
Alex but I'm one of the Drupal 8 call

00:00:48,690 --> 00:00:53,460
maintenance I'm also a maintainer for

00:00:50,989 --> 00:00:54,210
configuration management and most of it

00:00:53,460 --> 00:00:56,050
is my fault

00:00:54,210 --> 00:00:59,220
so

00:00:56,050 --> 00:01:02,379
feel free to apportion credit and blame

00:00:59,220 --> 00:01:05,050
she feels free I'm really lucky the

00:01:02,379 --> 00:01:08,380
chapter 3 pays for me basically to spend

00:01:05,050 --> 00:01:15,430
99% of my time working on core because

00:01:08,380 --> 00:01:16,479
they believe in Drupal 8 cool so we're

00:01:15,430 --> 00:01:19,180
here to talk about the configuration

00:01:16,479 --> 00:01:20,950
system and we can start off by saying

00:01:19,180 --> 00:01:23,140
that you may have heard this referred to

00:01:20,950 --> 00:01:26,740
as CMI the configuration management

00:01:23,140 --> 00:01:29,560
initiative and that was a thing but now

00:01:26,740 --> 00:01:31,930
that initiative is over and now we have

00:01:29,560 --> 00:01:33,820
the configuration system so if you want

00:01:31,930 --> 00:01:36,039
to be you know all technical about it

00:01:33,820 --> 00:01:37,570
we're not here to talk about CMI we're

00:01:36,039 --> 00:01:40,690
here to talk about the configuration

00:01:37,570 --> 00:01:43,210
system and in Drupal 8 and we're gonna

00:01:40,690 --> 00:01:46,560
just talk today briefly about what it is

00:01:43,210 --> 00:01:52,780
some of the benefits how it works and

00:01:46,560 --> 00:01:55,360
some some continuous integration so what

00:01:52,780 --> 00:01:57,460
what we're here today is to get into a

00:01:55,360 --> 00:01:59,800
little bit of the technical details we

00:01:57,460 --> 00:02:03,940
build this as an advanced session for

00:01:59,800 --> 00:02:06,940
developers so we will get into some of

00:02:03,940 --> 00:02:09,310
the meteor aspects of the configuration

00:02:06,940 --> 00:02:10,869
system but we are going to start off

00:02:09,310 --> 00:02:12,880
with talking about some of the main sort

00:02:10,869 --> 00:02:14,890
of principles because a lot of the

00:02:12,880 --> 00:02:16,150
people I've been talking with that have

00:02:14,890 --> 00:02:18,220
been trying to do things with the

00:02:16,150 --> 00:02:21,760
configuration system sometimes it helps

00:02:18,220 --> 00:02:24,849
just to sort of conceptualize what it is

00:02:21,760 --> 00:02:26,730
for what why we built it what was the

00:02:24,849 --> 00:02:29,770
problem we're trying to solve

00:02:26,730 --> 00:02:33,459
so in general configuration management

00:02:29,770 --> 00:02:36,910
is a way to try and manage consistency

00:02:33,459 --> 00:02:40,599
to have control over your codebase to be

00:02:36,910 --> 00:02:43,540
able to move your metadata around and

00:02:40,599 --> 00:02:46,390
have a way to deploy to your production

00:02:43,540 --> 00:02:48,390
server so these are some of the key

00:02:46,390 --> 00:02:52,239
aspects of configuration management

00:02:48,390 --> 00:02:54,670
generally speaking but really the use

00:02:52,239 --> 00:02:57,280
case that we tried to solve in Drupal 8

00:02:54,670 --> 00:02:59,950
was this one so if you remember nothing

00:02:57,280 --> 00:03:02,890
else from today think about the

00:02:59,950 --> 00:03:04,660
configuration management as a system

00:03:02,890 --> 00:03:06,340
that moves configuration from your

00:03:04,660 --> 00:03:08,950
development server to your production

00:03:06,340 --> 00:03:09,610
server we're not trying to be able to

00:03:08,950 --> 00:03:12,130
say

00:03:09,610 --> 00:03:13,690
hey I'm working on whitehouse.gov and

00:03:12,130 --> 00:03:15,250
I'm going to go and export my

00:03:13,690 --> 00:03:18,010
configuration and then I'm gonna go over

00:03:15,250 --> 00:03:19,800
to nbc.com and import it and have it

00:03:18,010 --> 00:03:22,510
look just like whitehouse.gov

00:03:19,800 --> 00:03:24,940
it doesn't work that way the idea is

00:03:22,510 --> 00:03:28,630
that we're moving between same instances

00:03:24,940 --> 00:03:31,390
of the same site or different instances

00:03:28,630 --> 00:03:35,650
of the same site now the way we built

00:03:31,390 --> 00:03:37,480
the system we allow you to do that but

00:03:35,650 --> 00:03:39,670
actually that's just some random drawing

00:03:37,480 --> 00:03:41,860
of configuration management and the

00:03:39,670 --> 00:03:43,510
point here is that you can do all kinds

00:03:41,860 --> 00:03:46,720
of crazy stuff we tried to make this

00:03:43,510 --> 00:03:48,580
really flexible but the main use case

00:03:46,720 --> 00:03:51,160
that we're solving in core is

00:03:48,580 --> 00:03:53,410
development to production yeah and so

00:03:51,160 --> 00:03:57,280
the main way that we made it flexible is

00:03:53,410 --> 00:03:59,620
by having absolutely no opinion about

00:03:57,280 --> 00:04:02,290
how you manage your configuration once

00:03:59,620 --> 00:04:05,530
you've exported it from Drupal it's up

00:04:02,290 --> 00:04:08,230
to you to design your own processes but

00:04:05,530 --> 00:04:10,420
that said we all want to be able to

00:04:08,230 --> 00:04:12,910
build sites and deploy that

00:04:10,420 --> 00:04:14,410
configuration in a reliable way so at

00:04:12,910 --> 00:04:17,530
the end of this presentation I'm going

00:04:14,410 --> 00:04:19,870
to recommend a way in Drupal 8 of just

00:04:17,530 --> 00:04:21,760
simply building at a site and managing

00:04:19,870 --> 00:04:24,000
its configuration and I'll show you how

00:04:21,760 --> 00:04:27,580
to do that

00:04:24,000 --> 00:04:29,590
so if you wanted to have like a one

00:04:27,580 --> 00:04:31,600
sentence definition of what

00:04:29,590 --> 00:04:34,240
configuration management is this is how

00:04:31,600 --> 00:04:38,350
this is one way I think of reducing it

00:04:34,240 --> 00:04:40,720
to one sentence so we do have our own

00:04:38,350 --> 00:04:42,370
sort of unique approach for Drupal 8 and

00:04:40,720 --> 00:04:44,380
how we're handling configuration

00:04:42,370 --> 00:04:48,490
management so I'm gonna say a little bit

00:04:44,380 --> 00:04:50,800
about how that works and this is gonna

00:04:48,490 --> 00:04:52,780
go from sort of simple to slightly more

00:04:50,800 --> 00:04:56,050
complex but at the very basic

00:04:52,780 --> 00:05:00,100
configuration in Drupal 8 is types of

00:04:56,050 --> 00:05:01,840
things so these are some of the types of

00:05:00,100 --> 00:05:05,229
things that configuration management is

00:05:01,840 --> 00:05:07,720
a view is configuration a user role is

00:05:05,229 --> 00:05:12,580
configuration and these are different

00:05:07,720 --> 00:05:15,550
from the things so the things in Drupal

00:05:12,580 --> 00:05:17,530
8 would be the article something like a

00:05:15,550 --> 00:05:19,990
user these are the things that you

00:05:17,530 --> 00:05:23,080
create so the configuration is in a way

00:05:19,990 --> 00:05:26,800
is like the the mold and then

00:05:23,080 --> 00:05:30,400
the content is the the what you get from

00:05:26,800 --> 00:05:32,020
that mold and another way that you can

00:05:30,400 --> 00:05:34,120
think about it that sort of maps these

00:05:32,020 --> 00:05:37,599
two ideas of things and type of things

00:05:34,120 --> 00:05:39,250
as site builder vs. site editor so the

00:05:37,599 --> 00:05:42,039
person who is building the site is

00:05:39,250 --> 00:05:44,770
creating configuration and then the site

00:05:42,039 --> 00:05:47,220
editor is creating the content so that

00:05:44,770 --> 00:05:49,720
is one of the things that can become

00:05:47,220 --> 00:05:52,300
tricky right now in Drupal seven is that

00:05:49,720 --> 00:05:54,970
configuration and content coexist in the

00:05:52,300 --> 00:05:57,490
database and they exist in lots of

00:05:54,970 --> 00:06:01,110
different places but we try and make a

00:05:57,490 --> 00:06:03,490
clear distinction between these two so

00:06:01,110 --> 00:06:05,530
getting slightly more complicated though

00:06:03,490 --> 00:06:07,780
is that there are really two kinds of

00:06:05,530 --> 00:06:10,930
configuration in Drupal 8 one is simple

00:06:07,780 --> 00:06:14,500
configuration and one is the other is

00:06:10,930 --> 00:06:16,270
configuration entities so a

00:06:14,500 --> 00:06:17,830
configuration entity you when you're

00:06:16,270 --> 00:06:20,280
building a site and you're trying to

00:06:17,830 --> 00:06:23,889
figure out how I should develop a

00:06:20,280 --> 00:06:26,289
particular thing if you need exactly one

00:06:23,889 --> 00:06:28,479
copy or one version that is simple

00:06:26,289 --> 00:06:30,210
configuration so an example of this

00:06:28,479 --> 00:06:34,360
would be something like your site name

00:06:30,210 --> 00:06:37,389
you probably don't need 13 or 14 site

00:06:34,360 --> 00:06:41,080
names you just need one and that is

00:06:37,389 --> 00:06:43,990
stored and as a simple key value pair so

00:06:41,080 --> 00:06:47,349
that's what a simple configuration is

00:06:43,990 --> 00:06:49,240
the configuration entity again sort of a

00:06:47,349 --> 00:06:52,479
general concept to keep in mind is that

00:06:49,240 --> 00:06:55,779
this is 0 or more so if you're creating

00:06:52,479 --> 00:06:57,699
a view you might have lots of views or

00:06:55,779 --> 00:06:59,469
you might create a view but it doesn't

00:06:57,699 --> 00:07:01,870
have anything you might like having a

00:06:59,469 --> 00:07:02,800
sequel query that returns no results so

00:07:01,870 --> 00:07:06,090
that's what I mean when I say a

00:07:02,800 --> 00:07:08,949
configuration entity is 0 or more items

00:07:06,090 --> 00:07:13,900
so there are other types of data in

00:07:08,949 --> 00:07:15,849
Drupal 8 and these aren't part of the

00:07:13,900 --> 00:07:19,199
purview of the configuration system so

00:07:15,849 --> 00:07:21,819
for example the last time you ran cron

00:07:19,199 --> 00:07:24,580
that's not really configuration it's

00:07:21,819 --> 00:07:26,139
also not really content so that is

00:07:24,580 --> 00:07:29,500
something that we store in the state

00:07:26,139 --> 00:07:32,080
system and another example would be like

00:07:29,500 --> 00:07:33,820
session management information where

00:07:32,080 --> 00:07:35,800
that two is not really configuration

00:07:33,820 --> 00:07:39,039
it's not really content

00:07:35,800 --> 00:07:40,720
for the sake of understanding the

00:07:39,039 --> 00:07:42,789
configuration system it's often helpful

00:07:40,720 --> 00:07:46,120
to think about that in terms of your

00:07:42,789 --> 00:07:49,990
site builder site editor content lots of

00:07:46,120 --> 00:07:52,060
sort of ways to divide that into two now

00:07:49,990 --> 00:07:54,250
the benefits of having a configuration

00:07:52,060 --> 00:07:56,409
system are many but let me just touch on

00:07:54,250 --> 00:07:59,830
a few of them the first is that between

00:07:56,409 --> 00:08:03,190
from Drupal 7 to Drupal 8 we have 50

00:07:59,830 --> 00:08:06,159
fewer database tables and that's because

00:08:03,190 --> 00:08:07,750
in Drupal 7 storing configuration you

00:08:06,159 --> 00:08:10,150
could do it in lots of different ways so

00:08:07,750 --> 00:08:12,550
lots of modules implemented their own

00:08:10,150 --> 00:08:15,099
ways to manage configuration because

00:08:12,550 --> 00:08:17,860
there wasn't a single API for developers

00:08:15,099 --> 00:08:19,870
in Drupal 8 now that's what the

00:08:17,860 --> 00:08:22,000
configuration provides is a single way

00:08:19,870 --> 00:08:24,880
to access so whether you're trying to

00:08:22,000 --> 00:08:26,380
access something in the field system or

00:08:24,880 --> 00:08:29,699
something through views or something in

00:08:26,380 --> 00:08:32,050
your module use the same API to store

00:08:29,699 --> 00:08:33,880
configurations save configuration delete

00:08:32,050 --> 00:08:37,240
configuration and that's what the

00:08:33,880 --> 00:08:40,479
configuration system provides it reduces

00:08:37,240 --> 00:08:43,270
the need for modules like features in

00:08:40,479 --> 00:08:45,760
strongarm it doesn't eliminate them and

00:08:43,270 --> 00:08:48,700
that's kind of a different use case but

00:08:45,760 --> 00:08:49,959
that is one of the benefits that a lot

00:08:48,700 --> 00:08:53,589
of people think about with the

00:08:49,959 --> 00:08:55,060
configuration system it's a I mean might

00:08:53,589 --> 00:08:56,860
put is at the back and he will add more

00:08:55,060 --> 00:08:59,800
in in a buff that will follow this

00:08:56,860 --> 00:09:02,140
session but but features now in in

00:08:59,800 --> 00:09:04,209
Drupal 8 is is about packaging

00:09:02,140 --> 00:09:07,240
configuration to to share between

00:09:04,209 --> 00:09:09,550
different sites it's not about a

00:09:07,240 --> 00:09:11,829
deployment mechanism for a single site

00:09:09,550 --> 00:09:14,740
instance so it's really focusing on its

00:09:11,829 --> 00:09:16,660
original use case and the use case that

00:09:14,740 --> 00:09:19,180
a lot of us used it for in Drupal 7 to

00:09:16,660 --> 00:09:21,550
manage deployment between dev and prod

00:09:19,180 --> 00:09:26,190
it's it's not trying to solve anymore

00:09:21,550 --> 00:09:26,190
that's all by the configuration system

00:09:26,820 --> 00:09:31,530
another key benefit of the configuration

00:09:29,520 --> 00:09:34,820
system it's something that we dealt with

00:09:31,530 --> 00:09:39,300
a lot while building it was making it

00:09:34,820 --> 00:09:43,260
translatable so I have a little quick

00:09:39,300 --> 00:09:46,410
example here of translating something in

00:09:43,260 --> 00:09:48,720
Drupal 8 so for example what I mean by

00:09:46,410 --> 00:09:50,640
that is like say you have this form with

00:09:48,720 --> 00:09:52,200
your site details and you have your site

00:09:50,640 --> 00:09:55,140
name and your slogan in your email

00:09:52,200 --> 00:09:58,080
address the configuration system allows

00:09:55,140 --> 00:10:00,630
us to keep to track what kind of data

00:09:58,080 --> 00:10:04,110
goes in each of those fields so we know

00:10:00,630 --> 00:10:05,970
that when you go to translate them what

00:10:04,110 --> 00:10:07,650
the email address is not something you

00:10:05,970 --> 00:10:09,360
need translated so this is the type of

00:10:07,650 --> 00:10:12,360
problem that the configuration system

00:10:09,360 --> 00:10:14,130
izzle is solving and it's allowing to

00:10:12,360 --> 00:10:17,190
have a site that can be translated

00:10:14,130 --> 00:10:19,140
fairly easy and and we know that an

00:10:17,190 --> 00:10:23,480
email address for example is not

00:10:19,140 --> 00:10:25,680
translated another key benefit of the

00:10:23,480 --> 00:10:27,780
configuration system is that it's highly

00:10:25,680 --> 00:10:29,850
swappable that if you want to use

00:10:27,780 --> 00:10:32,070
MongoDB or if you want to use sequel

00:10:29,850 --> 00:10:33,990
server or if you want to use files we

00:10:32,070 --> 00:10:37,020
tried to make it very flexible and I

00:10:33,990 --> 00:10:39,330
know that that causes that's a question

00:10:37,020 --> 00:10:42,180
I get a lot is people say well what's

00:10:39,330 --> 00:10:44,400
the best way to do this well there are

00:10:42,180 --> 00:10:45,720
lots of different use cases depending on

00:10:44,400 --> 00:10:52,590
that kind of sites you're building and

00:10:45,720 --> 00:10:55,290
it is highly swappable but it is a sort

00:10:52,590 --> 00:10:57,270
of a feature that a lot of people can

00:10:55,290 --> 00:10:59,850
take advantage of but maybe not lots of

00:10:57,270 --> 00:11:03,450
sites will need to and I will say even

00:10:59,850 --> 00:11:05,520
some sites some smaller sites or basic

00:11:03,450 --> 00:11:08,640
sites you know like if you're just

00:11:05,520 --> 00:11:11,610
building a site where you don't really

00:11:08,640 --> 00:11:13,290
even need to have a development server

00:11:11,610 --> 00:11:15,570
you don't even need to use the

00:11:13,290 --> 00:11:18,060
configuration system it's really set up

00:11:15,570 --> 00:11:20,100
so it can even just you know work on its

00:11:18,060 --> 00:11:22,110
own in the in the background without

00:11:20,100 --> 00:11:23,760
needing to swap it or even know it's

00:11:22,110 --> 00:11:29,460
there but that's not why you people are

00:11:23,760 --> 00:11:31,950
here so a big sort of mental change in

00:11:29,460 --> 00:11:34,550
my opinion between Drupal 7 and Drupal 8

00:11:31,950 --> 00:11:37,710
is that the configuration system now

00:11:34,550 --> 00:11:39,880
assumes that the site owns its

00:11:37,710 --> 00:11:41,590
configuration into

00:11:39,880 --> 00:11:43,480
this seems different from how I thought

00:11:41,590 --> 00:11:45,730
about Drupal 7 where I thought about it

00:11:43,480 --> 00:11:48,370
as a module on owning its configuration

00:11:45,730 --> 00:11:50,080
so when the module maintainer changed

00:11:48,370 --> 00:11:52,780
something with the module I sort of kind

00:11:50,080 --> 00:11:54,700
of expected that sometimes that might

00:11:52,780 --> 00:11:56,860
change with my site one of the

00:11:54,700 --> 00:11:58,900
assumptions we made building the Drupal

00:11:56,860 --> 00:12:02,590
8 configuration system is that the site

00:11:58,900 --> 00:12:04,510
owns the data or the configuration so

00:12:02,590 --> 00:12:06,430
that's something else to keep in mind as

00:12:04,510 --> 00:12:08,350
you're building sites as you're thinking

00:12:06,430 --> 00:12:13,240
about the different more complicated use

00:12:08,350 --> 00:12:15,370
cases and the reason we did that is is

00:12:13,240 --> 00:12:17,680
we're focusing on the idea that you're

00:12:15,370 --> 00:12:20,380
going to want to deploy from development

00:12:17,680 --> 00:12:22,390
to production so that you've got to move

00:12:20,380 --> 00:12:24,640
your configuration there the modules

00:12:22,390 --> 00:12:28,570
don't play any part in that move so at

00:12:24,640 --> 00:12:30,160
what point so if you go in a module

00:12:28,570 --> 00:12:32,110
makes a change to a view that you've

00:12:30,160 --> 00:12:33,640
already Qaid and you like that old name

00:12:32,110 --> 00:12:36,040
and they change the name of that view on

00:12:33,640 --> 00:12:38,080
you like well you've curate that that's

00:12:36,040 --> 00:12:40,090
not the purview of the module yes if the

00:12:38,080 --> 00:12:41,830
module like changes our plugin and needs

00:12:40,090 --> 00:12:43,480
to change the configuration then it's

00:12:41,830 --> 00:12:45,880
going to go and update the view to make

00:12:43,480 --> 00:12:48,970
it work but the cosmetic things should

00:12:45,880 --> 00:12:50,380
be and you should have you should have

00:12:48,970 --> 00:12:54,580
full control and the module should just

00:12:50,380 --> 00:12:56,760
get out of your way so we're gonna talk

00:12:54,580 --> 00:13:01,600
a little bit briefly about how it works

00:12:56,760 --> 00:13:04,660
Before we jump into a demo but in

00:13:01,600 --> 00:13:08,460
general the sort of lifecycle of

00:13:04,660 --> 00:13:11,380
configuration in Drupal 8 is that

00:13:08,460 --> 00:13:14,670
frequently it will start with a module

00:13:11,380 --> 00:13:17,350
providing configuration in a file and

00:13:14,670 --> 00:13:19,900
when that module is installed the

00:13:17,350 --> 00:13:22,540
configuration goes from is read from the

00:13:19,900 --> 00:13:23,860
file and goes into the database and then

00:13:22,540 --> 00:13:26,620
when you need to deploy that

00:13:23,860 --> 00:13:29,710
configuration from one instance of the

00:13:26,620 --> 00:13:32,350
site to another you export it as a file

00:13:29,710 --> 00:13:34,750
and then you import it on your

00:13:32,350 --> 00:13:37,120
production server so in my mind I have

00:13:34,750 --> 00:13:40,750
this mental image of going from files to

00:13:37,120 --> 00:13:42,640
database to files and the other way you

00:13:40,750 --> 00:13:44,740
can of course get configuration in your

00:13:42,640 --> 00:13:47,200
site is if you allow your site editors

00:13:44,740 --> 00:13:49,110
the change configuration in the UI that

00:13:47,200 --> 00:13:51,250
of course is another way to put

00:13:49,110 --> 00:13:54,060
configuration into the database which

00:13:51,250 --> 00:13:58,269
then can be exported as files

00:13:54,060 --> 00:14:00,759
so what's an example of that well let's

00:13:58,269 --> 00:14:02,829
talk about JPEG quality something that

00:14:00,759 --> 00:14:04,750
I'm sure many of you are concerned very

00:14:02,829 --> 00:14:06,279
much with on your Drupal sites it's

00:14:04,750 --> 00:14:08,019
usually the first thing I check is to

00:14:06,279 --> 00:14:12,810
see what we have that set

00:14:08,019 --> 00:14:17,920
well the default number for that is 75%

00:14:12,810 --> 00:14:21,069
so that is provided in the system module

00:14:17,920 --> 00:14:23,319
in system image GTMO

00:14:21,069 --> 00:14:26,920
and that's what this file looks like and

00:14:23,319 --> 00:14:29,769
when you install Drupal it imports that

00:14:26,920 --> 00:14:34,569
and here you have that same number on

00:14:29,769 --> 00:14:36,250
your in your UI the JPEG quality so what

00:14:34,569 --> 00:14:40,660
happens when that module is installed

00:14:36,250 --> 00:14:43,540
then is that number and that that key

00:14:40,660 --> 00:14:47,079
get imported into the database ins here

00:14:43,540 --> 00:14:49,689
I've selected everything from the config

00:14:47,079 --> 00:14:53,170
table or the name is system that image

00:14:49,689 --> 00:14:55,779
Gd and that's where it exists so this is

00:14:53,170 --> 00:14:59,380
the going from files the database and

00:14:55,779 --> 00:15:01,810
then when I export my configuration one

00:14:59,380 --> 00:15:05,439
of the files that I'm exporting is

00:15:01,810 --> 00:15:09,040
system image Gd amal and that has the

00:15:05,439 --> 00:15:11,199
JPEG quality again so this is like the

00:15:09,040 --> 00:15:13,329
most basic example and I haven't changed

00:15:11,199 --> 00:15:15,100
it now if we did change in the UI to 85

00:15:13,329 --> 00:15:16,329
or something like that then of course

00:15:15,100 --> 00:15:18,850
that would be reflected in your files

00:15:16,329 --> 00:15:20,649
but this is this is the mindset that I

00:15:18,850 --> 00:15:22,740
think helps some people understand the

00:15:20,649 --> 00:15:25,569
configuration is going from the files

00:15:22,740 --> 00:15:29,170
that the module installs to the database

00:15:25,569 --> 00:15:30,250
to files so so I had this conversation

00:15:29,170 --> 00:15:33,850
all the time

00:15:30,250 --> 00:15:35,860
yes files now a couple years we were

00:15:33,850 --> 00:15:38,860
going around saying configuration is

00:15:35,860 --> 00:15:40,630
stored in files and for a while that's

00:15:38,860 --> 00:15:42,550
how it was working where it wasn't in

00:15:40,630 --> 00:15:44,410
the database by default now I did say

00:15:42,550 --> 00:15:46,420
it's swappable so there are all kinds of

00:15:44,410 --> 00:15:48,910
ways to do this but we chose to switch

00:15:46,420 --> 00:15:49,509
back to using the database for a number

00:15:48,910 --> 00:15:53,009
of reasons

00:15:49,509 --> 00:15:56,379
one was we felt it was more concealed

00:15:53,009 --> 00:15:58,329
but we were using a sort of security by

00:15:56,379 --> 00:16:00,309
obscurity principle so when you would

00:15:58,329 --> 00:16:04,870
import your configuration it would go

00:16:00,309 --> 00:16:06,819
from that module file into your active

00:16:04,870 --> 00:16:07,240
directory and then the Drupal site would

00:16:06,819 --> 00:16:11,170
read for

00:16:07,240 --> 00:16:13,089
that but then people were worried that

00:16:11,170 --> 00:16:14,770
you could somehow hack that that you

00:16:13,089 --> 00:16:16,930
could find that file and you could go in

00:16:14,770 --> 00:16:19,720
and you could you know hack a site that

00:16:16,930 --> 00:16:22,060
way but so we think it's more secure to

00:16:19,720 --> 00:16:25,690
have that configuration in the database

00:16:22,060 --> 00:16:27,430
it's also faster in many cases again I'm

00:16:25,690 --> 00:16:30,459
sort of generalizing but in many cases

00:16:27,430 --> 00:16:34,899
it's faster to read and write to the

00:16:30,459 --> 00:16:38,080
database than it is to files this also

00:16:34,899 --> 00:16:41,130
eliminates the temptation to hack your

00:16:38,080 --> 00:16:43,830
active config which if if you're storing

00:16:41,130 --> 00:16:46,180
configuration and files what you can do

00:16:43,830 --> 00:16:48,490
it's tempting just to go in there and

00:16:46,180 --> 00:16:52,120
change that but you shouldn't do that

00:16:48,490 --> 00:16:53,620
and by storing in the database it makes

00:16:52,120 --> 00:16:55,209
it so you can't just go into the files

00:16:53,620 --> 00:16:57,220
and change that yeah I mean obviously

00:16:55,209 --> 00:16:59,020
for something like the JPEG quality if

00:16:57,220 --> 00:17:00,670
you went in and changed it in the file

00:16:59,020 --> 00:17:03,100
it was being read immediately into site

00:17:00,670 --> 00:17:05,170
285 it's not kind of matter but say you

00:17:03,100 --> 00:17:07,089
went and actually which modules are

00:17:05,170 --> 00:17:08,650
installed on your site is stored in a

00:17:07,089 --> 00:17:10,030
file called court it's stored in the

00:17:08,650 --> 00:17:11,800
configuration object called core dot

00:17:10,030 --> 00:17:13,660
extension if you just went in there and

00:17:11,800 --> 00:17:15,579
added a module then suddenly that

00:17:13,660 --> 00:17:18,370
modules code would be would be loaded

00:17:15,579 --> 00:17:20,079
during during the request and the module

00:17:18,370 --> 00:17:22,240
has not actually been installed probably

00:17:20,079 --> 00:17:26,140
is there been no ability to react to it

00:17:22,240 --> 00:17:27,910
whereas if if if you don't store you

00:17:26,140 --> 00:17:29,800
don't make it easy to change those those

00:17:27,910 --> 00:17:31,510
configuration objects but you you make

00:17:29,800 --> 00:17:33,520
it so that people have to like export

00:17:31,510 --> 00:17:35,110
the files and make changes to them by

00:17:33,520 --> 00:17:37,030
hand and then run the importing and then

00:17:35,110 --> 00:17:38,410
we can do validation and check that the

00:17:37,030 --> 00:17:41,050
modules there we can then go and install

00:17:38,410 --> 00:17:42,760
the module for you and react to

00:17:41,050 --> 00:17:44,170
configuration change so that's what one

00:17:42,760 --> 00:17:48,480
of the main reasons to be moved it out

00:17:44,170 --> 00:17:48,480
of the active configuration out of files

00:17:48,780 --> 00:17:54,130
another benefit is that for some sites

00:17:52,450 --> 00:17:55,900
again like the ones that might not even

00:17:54,130 --> 00:17:58,360
need the configuration it can be

00:17:55,900 --> 00:18:00,970
convenient if the database basically

00:17:58,360 --> 00:18:04,450
contains everything that's our main

00:18:00,970 --> 00:18:06,700
model now with Drupal 7 you take your

00:18:04,450 --> 00:18:08,679
code you take your database in some

00:18:06,700 --> 00:18:12,220
cases you also take a big files

00:18:08,679 --> 00:18:14,170
directory and from there you can work on

00:18:12,220 --> 00:18:18,100
your own site and do your development

00:18:14,170 --> 00:18:21,100
that way and by storing configurations

00:18:18,100 --> 00:18:23,590
separately that did

00:18:21,100 --> 00:18:26,980
create a sort of extra thing that you

00:18:23,590 --> 00:18:30,100
needed to become useful as a developer

00:18:26,980 --> 00:18:32,410
right away so by having that still in

00:18:30,100 --> 00:18:36,100
the database it does allow in certain

00:18:32,410 --> 00:18:38,679
instances to make it so you can be more

00:18:36,100 --> 00:18:40,929
productive quickly or more you can again

00:18:38,679 --> 00:18:43,620
do those those simpler use cases where

00:18:40,929 --> 00:18:45,880
you don't you might not have a complex

00:18:43,620 --> 00:18:50,380
configured continuous integration or

00:18:45,880 --> 00:18:51,940
something like that so if we compare how

00:18:50,380 --> 00:18:54,549
we're doing things in Drupal 8 then

00:18:51,940 --> 00:18:57,940
where I talked about files to database

00:18:54,549 --> 00:19:00,970
to files in Drupal 7 sometimes

00:18:57,940 --> 00:19:03,309
configuration was provided by files and

00:19:00,970 --> 00:19:05,860
sometimes the one in the database but

00:19:03,309 --> 00:19:08,289
then getting the configuration out of

00:19:05,860 --> 00:19:10,330
your site was not always a consistent

00:19:08,289 --> 00:19:12,610
process so I have a question mark there

00:19:10,330 --> 00:19:16,360
to represent that so what do I mean by

00:19:12,610 --> 00:19:18,730
that so for example in this this form

00:19:16,360 --> 00:19:22,720
array here we have the variable get and

00:19:18,730 --> 00:19:25,659
that is grabbing JPEG quality so in this

00:19:22,720 --> 00:19:27,940
particular instance we have that it's

00:19:25,659 --> 00:19:30,850
kind of it's it's kind of mixed in there

00:19:27,940 --> 00:19:36,549
with the other information about the the

00:19:30,850 --> 00:19:38,320
form so this is one way to store the

00:19:36,549 --> 00:19:40,630
information and something again like as

00:19:38,320 --> 00:19:43,210
simple as JPEG quality we can we can

00:19:40,630 --> 00:19:45,850
find ways around but as many of us who

00:19:43,210 --> 00:19:48,280
know that it's a tricky thing in Drupal

00:19:45,850 --> 00:19:50,799
7 to consistently pull your

00:19:48,280 --> 00:19:52,919
configuration information out so this is

00:19:50,799 --> 00:19:56,500
again the problem we're trying to solve

00:19:52,919 --> 00:19:58,210
so and another really big advantage that

00:19:56,500 --> 00:20:00,880
Drupal 8 has there is that you only

00:19:58,210 --> 00:20:02,559
define your default in one place so in

00:20:00,880 --> 00:20:06,429
Drupal 7 every time you did your

00:20:02,559 --> 00:20:09,940
variable get for your image quality you

00:20:06,429 --> 00:20:12,010
would have to say if it's not set use 75

00:20:09,940 --> 00:20:13,600
and so if you if you may have changed

00:20:12,010 --> 00:20:15,610
and maybe change the default in one

00:20:13,600 --> 00:20:17,049
place like in the forum to 85 but you

00:20:15,610 --> 00:20:19,900
forgot to change it where it actually

00:20:17,049 --> 00:20:21,760
was was being used then it would still

00:20:19,900 --> 00:20:23,230
be 75 others he as a module maintained

00:20:21,760 --> 00:20:24,730
you had to always go okay I'm going to

00:20:23,230 --> 00:20:26,470
change the default and then I have to

00:20:24,730 --> 00:20:28,630
change it every where not not miss it

00:20:26,470 --> 00:20:29,919
and then if another module was depending

00:20:28,630 --> 00:20:32,049
on you they would have to know you

00:20:29,919 --> 00:20:34,150
change the default as well but now you

00:20:32,049 --> 00:20:34,690
know because it's only ever said in one

00:20:34,150 --> 00:20:36,910
place

00:20:34,690 --> 00:20:41,080
but it's the default is gonna be the

00:20:36,910 --> 00:20:43,060
same for everyone but this actually it's

00:20:41,080 --> 00:20:47,800
a stupidly small thing but it is so much

00:20:43,060 --> 00:20:49,300
easier this one guys excited it's been

00:20:47,800 --> 00:20:51,750
bitten by the pain once you've been

00:20:49,300 --> 00:20:54,760
bitten by the pain once you never forget

00:20:51,750 --> 00:20:57,340
so it doesn't take you don't have to be

00:20:54,760 --> 00:21:01,690
an advanced developer to tell that this

00:20:57,340 --> 00:21:03,940
is more complicated than this so that's

00:21:01,690 --> 00:21:07,600
the difference sort of in a nutshell how

00:21:03,940 --> 00:21:10,420
I like to explain the difference so in

00:21:07,600 --> 00:21:13,960
Drupal 7 we have the variable table well

00:21:10,420 --> 00:21:15,880
that is gone in Drupal 8 if we still

00:21:13,960 --> 00:21:17,620
have a similar sort of thing you know we

00:21:15,880 --> 00:21:19,300
still have our key value pairs stored in

00:21:17,620 --> 00:21:23,530
here with our JPEG quality that we're

00:21:19,300 --> 00:21:25,800
very concerned about but the difference

00:21:23,530 --> 00:21:28,150
is when we want to take that number

00:21:25,800 --> 00:21:31,960
whether you change it in the universe or

00:21:28,150 --> 00:21:34,390
interface or you want to change all your

00:21:31,960 --> 00:21:37,420
other configuration from your site it's

00:21:34,390 --> 00:21:42,430
difficult to consistently export that to

00:21:37,420 --> 00:21:44,740
identify problems and this is I mean no

00:21:42,430 --> 00:21:46,540
offense Mike but this is the thing so

00:21:44,740 --> 00:21:50,080
many of us struggle with is making

00:21:46,540 --> 00:21:53,160
features do this awesome work it in a

00:21:50,080 --> 00:21:56,080
way that maybe it wasn't designed to do

00:21:53,160 --> 00:21:58,600
but it it's the thing we've been using

00:21:56,080 --> 00:22:00,700
so it developed so this is a developer

00:21:58,600 --> 00:22:02,560
session we know that this is using

00:22:00,700 --> 00:22:05,500
features is the way to handle your

00:22:02,560 --> 00:22:08,530
configuration in Drupal 8 but it does

00:22:05,500 --> 00:22:13,060
make some of these issues more difficult

00:22:08,530 --> 00:22:14,770
to handle now how do I use this fancy

00:22:13,060 --> 00:22:19,150
new configuration system you're

00:22:14,770 --> 00:22:21,280
wondering here's another key thing if

00:22:19,150 --> 00:22:22,930
there are two things you remember from

00:22:21,280 --> 00:22:24,970
this session this is the second one is

00:22:22,930 --> 00:22:27,430
that you can only synchronize

00:22:24,970 --> 00:22:29,620
configuration between cloned instances

00:22:27,430 --> 00:22:31,750
of a site I mentioned that before I'll

00:22:29,620 --> 00:22:35,740
mention it again but this has to do

00:22:31,750 --> 00:22:38,170
going back with dev to prod because when

00:22:35,740 --> 00:22:39,850
you try to export configuration from one

00:22:38,170 --> 00:22:42,670
site and import it into another site

00:22:39,850 --> 00:22:45,940
that has a different UUID then it won't

00:22:42,670 --> 00:22:47,980
work just won't work because that's not

00:22:45,940 --> 00:22:50,260
the use case we're trying to solve

00:22:47,980 --> 00:22:52,210
so how do you use it we make sure first

00:22:50,260 --> 00:22:55,210
that you have cloned instances of the

00:22:52,210 --> 00:22:57,549
same site and then you use this new

00:22:55,210 --> 00:22:59,980
module this configuration manager module

00:22:57,549 --> 00:23:04,020
which we'll see and it's a new little

00:22:59,980 --> 00:23:07,299
section on configuration management and

00:23:04,020 --> 00:23:11,650
we have the ability now to import and

00:23:07,299 --> 00:23:15,250
export do full imports and exports and I

00:23:11,650 --> 00:23:17,620
will say that in general we recommend

00:23:15,250 --> 00:23:21,130
that you'll be much safer doing full

00:23:17,620 --> 00:23:24,460
imports and exports because that is how

00:23:21,130 --> 00:23:26,350
the configuration system can best do its

00:23:24,460 --> 00:23:27,910
work to check for dependencies when

00:23:26,350 --> 00:23:29,919
you're moving from one instance of the

00:23:27,910 --> 00:23:34,120
site to another is by doing a full

00:23:29,919 --> 00:23:35,919
import and a full export I thought you

00:23:34,120 --> 00:23:40,120
were gonna say something

00:23:35,919 --> 00:23:42,429
you want to say something so one of the

00:23:40,120 --> 00:23:48,730
another big change in in Drupal 8 is

00:23:42,429 --> 00:23:52,570
that we know types are often depended on

00:23:48,730 --> 00:23:53,950
by lots of things so so the simple

00:23:52,570 --> 00:23:56,230
example would be a field if you add a

00:23:53,950 --> 00:23:58,030
field to it or to a node then obviously

00:23:56,230 --> 00:24:01,210
if you remove that and no type you

00:23:58,030 --> 00:24:03,760
expect it to to clean up the fields and

00:24:01,210 --> 00:24:05,440
it does in Drupal 7 it has special code

00:24:03,760 --> 00:24:07,630
and it goes it goes and deletes the

00:24:05,440 --> 00:24:10,240
fields but actually when you build out a

00:24:07,630 --> 00:24:12,190
Drupal Drupal site you're building up a

00:24:10,240 --> 00:24:14,590
weather dependencies amounts all your

00:24:12,190 --> 00:24:17,410
configuration you might add a view that

00:24:14,590 --> 00:24:19,960
filters on that node type and then if

00:24:17,410 --> 00:24:22,390
you delete that no type in Drupal 7 that

00:24:19,960 --> 00:24:24,040
view is just broken in Drupal 8 because

00:24:22,390 --> 00:24:25,360
we have an understanding of the

00:24:24,040 --> 00:24:28,360
dependencies between everything like

00:24:25,360 --> 00:24:30,429
when you add that that the filter to the

00:24:28,360 --> 00:24:32,110
view on the node type it goes okay that

00:24:30,429 --> 00:24:33,809
means this view is dependent on that

00:24:32,110 --> 00:24:36,400
know type and we store that information

00:24:33,809 --> 00:24:37,720
in the configuration entity so when you

00:24:36,400 --> 00:24:39,490
delete the know type it goes actually

00:24:37,720 --> 00:24:40,840
we're also going to have to do something

00:24:39,490 --> 00:24:43,030
about this view and that's really

00:24:40,840 --> 00:24:44,830
powerful it's much harder to break your

00:24:43,030 --> 00:24:46,929
site just by clicking around the UI and

00:24:44,830 --> 00:24:48,429
deleting things which which are related

00:24:46,929 --> 00:24:51,450
but you've forgotten about because you

00:24:48,429 --> 00:24:51,450
did that six months ago

00:24:53,350 --> 00:24:58,789
one of the nice things is when you are

00:24:57,230 --> 00:25:01,880
exporting and importing your

00:24:58,789 --> 00:25:04,130
configuration we do in the UI give you a

00:25:01,880 --> 00:25:07,070
way to view differences and here's a

00:25:04,130 --> 00:25:09,860
simple example of changing the name from

00:25:07,070 --> 00:25:13,730
site install to new site which is

00:25:09,860 --> 00:25:15,940
probably something you do a lot but this

00:25:13,730 --> 00:25:20,210
is the example we always show up here

00:25:15,940 --> 00:25:23,000
but when you go to develop your first

00:25:20,210 --> 00:25:26,809
module then well there is a new paradigm

00:25:23,000 --> 00:25:29,389
with the configuration system and there

00:25:26,809 --> 00:25:32,120
are at least three directories that you

00:25:29,389 --> 00:25:36,080
want to be aware of and understand how

00:25:32,120 --> 00:25:38,149
they work so the first one that you

00:25:36,080 --> 00:25:43,370
should know about is config slash

00:25:38,149 --> 00:25:46,399
install so we we at one point change the

00:25:43,370 --> 00:25:49,279
name of this to config dot install to

00:25:46,399 --> 00:25:51,970
make it very obvious that when you

00:25:49,279 --> 00:25:54,320
install a module that has a

00:25:51,970 --> 00:25:56,510
configuration in its directory that's

00:25:54,320 --> 00:26:01,940
config slash install that this happens

00:25:56,510 --> 00:26:03,590
at install time so that means don't try

00:26:01,940 --> 00:26:06,080
and go in and change the configuration

00:26:03,590 --> 00:26:08,059
in your module that's already been

00:26:06,080 --> 00:26:10,070
installed that has configuration in the

00:26:08,059 --> 00:26:15,440
install directory because it's only read

00:26:10,070 --> 00:26:19,130
at install time the other directory is

00:26:15,440 --> 00:26:20,960
config slash optional now this one is a

00:26:19,130 --> 00:26:23,809
little bit more complex it solves a

00:26:20,960 --> 00:26:27,830
number of problems but for example if

00:26:23,809 --> 00:26:30,769
you are creating a module and then you

00:26:27,830 --> 00:26:33,230
install it you're working along locally

00:26:30,769 --> 00:26:35,840
but then you uninstall it the

00:26:33,230 --> 00:26:38,659
configuration stays with the site

00:26:35,840 --> 00:26:42,080
because as we said the site owns the

00:26:38,659 --> 00:26:44,899
configuration so we've had some we had

00:26:42,080 --> 00:26:46,760
some you know lots of discussions about

00:26:44,899 --> 00:26:49,279
how we can handle this but basically we

00:26:46,760 --> 00:26:50,929
said well we should assume that if

00:26:49,279 --> 00:26:52,639
someone uninstalls a module that we

00:26:50,929 --> 00:26:55,250
should leave the configuration there in

00:26:52,639 --> 00:26:59,059
some cases and that's why we created the

00:26:55,250 --> 00:27:01,730
config dot optional directory so you can

00:26:59,059 --> 00:27:03,889
reinstall a module and it will simply

00:27:01,730 --> 00:27:05,419
say oh that's that file already exists

00:27:03,889 --> 00:27:09,309
I'm not going to reinstall it

00:27:05,419 --> 00:27:11,509
and then the other problem it fixes is

00:27:09,309 --> 00:27:18,379
you wanted to say it didn't you all they

00:27:11,509 --> 00:27:20,269
say it has integration with views but

00:27:18,379 --> 00:27:21,709
the node module doesn't want to depend

00:27:20,269 --> 00:27:27,339
on views you don't want to have to have

00:27:21,709 --> 00:27:30,259
used to use no so any any like optional

00:27:27,339 --> 00:27:34,219
integration like like a front page view

00:27:30,259 --> 00:27:35,899
where isn't required by that module you

00:27:34,219 --> 00:27:38,179
can put in config slash optional which

00:27:35,899 --> 00:27:39,829
means that when you install note it goes

00:27:38,179 --> 00:27:42,079
okay is views installed not it's going

00:27:39,829 --> 00:27:43,669
to ignore it but the flip side of that

00:27:42,079 --> 00:27:45,079
is when views is installed it looks

00:27:43,669 --> 00:27:46,909
through all the installed modules

00:27:45,079 --> 00:27:48,559
optional directories and goes hey did

00:27:46,909 --> 00:27:50,989
any of these have any views for me and

00:27:48,559 --> 00:27:52,579
can those all those views dependencies

00:27:50,989 --> 00:27:55,279
be satisfied and it will create them so

00:27:52,579 --> 00:27:58,849
it's it's it's a really nice way of like

00:27:55,279 --> 00:28:00,169
providing optional integration with your

00:27:58,849 --> 00:28:02,419
module without actually having a

00:28:00,169 --> 00:28:04,729
dependency on that so say you want to

00:28:02,419 --> 00:28:06,409
provide a very simple UI in your module

00:28:04,729 --> 00:28:09,709
but you want to be you want to also

00:28:06,409 --> 00:28:11,059
provide a richer UI built with views but

00:28:09,709 --> 00:28:12,499
you don't want to have a dependency just

00:28:11,059 --> 00:28:13,969
stick it in there and then if the site

00:28:12,499 --> 00:28:15,619
installs use then they'll get you the

00:28:13,969 --> 00:28:17,049
nice rich UI or if they don't it will

00:28:15,619 --> 00:28:20,179
fall back to yourself

00:28:17,049 --> 00:28:21,889
so you'll have to decide then again in

00:28:20,179 --> 00:28:23,839
your particular use case with your

00:28:21,889 --> 00:28:25,879
particular module you opted to say is

00:28:23,839 --> 00:28:27,559
this configuration absolutely necessary

00:28:25,879 --> 00:28:29,089
for the module to function and so you

00:28:27,559 --> 00:28:31,399
should put it in your install directory

00:28:29,089 --> 00:28:33,950
and then you should also perhaps clean

00:28:31,399 --> 00:28:36,229
it up after you uninstall otherwise

00:28:33,950 --> 00:28:37,519
you'll have problems reinstalling or you

00:28:36,229 --> 00:28:39,440
should say oh I want to put this

00:28:37,519 --> 00:28:42,799
configuration in my optional directory

00:28:39,440 --> 00:28:45,019
because it's not necessary for the

00:28:42,799 --> 00:28:46,669
module the function and when I reinstall

00:28:45,019 --> 00:28:49,429
it I just want that configuration to

00:28:46,669 --> 00:28:51,859
stay there now we also have to you know

00:28:49,429 --> 00:28:53,629
get into this issue of you know if you

00:28:51,859 --> 00:28:55,269
were the kind of person that was you

00:28:53,629 --> 00:28:59,079
know frequently doing something like

00:28:55,269 --> 00:29:02,869
disabling a module in Drupal 7 just

00:28:59,079 --> 00:29:04,909
temporarily you wouldn't we don't have

00:29:02,869 --> 00:29:08,299
disabling in Drupal 8 now or it's only

00:29:04,909 --> 00:29:10,639
installing and uninstalling so this

00:29:08,299 --> 00:29:12,619
provides another mechanism of solving

00:29:10,639 --> 00:29:14,929
some of those issues where before we

00:29:12,619 --> 00:29:16,840
might have disabled the module now we

00:29:14,929 --> 00:29:18,279
can say oh well I'm gonna onions

00:29:16,840 --> 00:29:20,140
all it but I want the configuration to

00:29:18,279 --> 00:29:23,020
stay there put it in the optional

00:29:20,140 --> 00:29:24,400
directory and then finally the third

00:29:23,020 --> 00:29:26,529
directory that you want to be aware of

00:29:24,400 --> 00:29:28,450
is the schema directory or the config

00:29:26,529 --> 00:29:31,000
slash schema directory and this one is

00:29:28,450 --> 00:29:33,520
also very important because it describes

00:29:31,000 --> 00:29:36,309
your configuration so earlier when I

00:29:33,520 --> 00:29:38,140
showed that the in the translation

00:29:36,309 --> 00:29:40,600
system we want to identify something

00:29:38,140 --> 00:29:44,010
like email as not being translated

00:29:40,600 --> 00:29:46,960
we do that in a schema file so you have

00:29:44,010 --> 00:29:49,000
schema files in your module that

00:29:46,960 --> 00:29:50,830
describe the configuration and they will

00:29:49,000 --> 00:29:53,409
say things like does is this

00:29:50,830 --> 00:29:55,840
translatable yes or no is this a string

00:29:53,409 --> 00:29:57,640
yes or no do you want this to be stored

00:29:55,840 --> 00:30:01,419
as an integer and not force everything

00:29:57,640 --> 00:30:02,860
to be stored as a string so that those

00:30:01,419 --> 00:30:04,809
are three directories that you'll want

00:30:02,860 --> 00:30:07,120
to make sure you're very aware of when

00:30:04,809 --> 00:30:09,100
you're doing module development just a

00:30:07,120 --> 00:30:10,390
little bit more on schema and we can

00:30:09,100 --> 00:30:12,549
actually talk about the image quality

00:30:10,390 --> 00:30:13,899
example that we have one of the things

00:30:12,549 --> 00:30:16,169
that people used to do in Drupal 7 is

00:30:13,899 --> 00:30:19,240
set variables from the command line to

00:30:16,169 --> 00:30:21,370
rush variable set you might set that to

00:30:19,240 --> 00:30:23,679
like whatever 85 but when you do that

00:30:21,370 --> 00:30:26,440
from the command line in Drupal 7 it

00:30:23,679 --> 00:30:27,970
can't know what the module expected that

00:30:26,440 --> 00:30:30,490
variable type to be set every single

00:30:27,970 --> 00:30:32,380
variable set will be a string what

00:30:30,490 --> 00:30:34,510
Drupal 8 does is it's able to enforce

00:30:32,380 --> 00:30:37,450
the type so it knows that if you go and

00:30:34,510 --> 00:30:45,340
change that in through the similar

00:30:37,450 --> 00:30:47,080
command in context that actually gives

00:30:45,340 --> 00:30:49,750
us a strictness and robustness that

00:30:47,080 --> 00:30:51,640
means it's much more difficult to get

00:30:49,750 --> 00:30:54,549
weird errors when you set something to

00:30:51,640 --> 00:30:56,260
like zero or an empty string but it will

00:30:54,549 --> 00:30:59,020
all behave in a predictable way because

00:30:56,260 --> 00:31:00,490
the actual variable type is strict so

00:30:59,020 --> 00:31:01,659
the module can depend on the fact that

00:31:00,490 --> 00:31:03,580
it knows that it's configuration is

00:31:01,659 --> 00:31:06,370
going to be an integer a float or a

00:31:03,580 --> 00:31:08,710
string which is kind of souls like those

00:31:06,370 --> 00:31:10,029
really hard to repeat bugs that someone

00:31:08,710 --> 00:31:11,919
comes into your module issue queue it

00:31:10,029 --> 00:31:13,419
goes I've done something weird and it's

00:31:11,919 --> 00:31:15,340
broken like this and you're like how did

00:31:13,419 --> 00:31:17,470
you ever do that and yet what and the

00:31:15,340 --> 00:31:20,559
reason is like hp's like kind of duck

00:31:17,470 --> 00:31:22,280
typing is like well weird now that

00:31:20,559 --> 00:31:25,370
doesn't matter

00:31:22,280 --> 00:31:27,260
and that's awesome so we have now

00:31:25,370 --> 00:31:39,200
reached the demo portion of their show

00:31:27,260 --> 00:31:40,550
and up next is Alex pop so before I

00:31:39,200 --> 00:31:42,820
start I was just wondering how many

00:31:40,550 --> 00:31:46,880
people in the room have actually used

00:31:42,820 --> 00:31:53,600
the Drupal 8 configuration export import

00:31:46,880 --> 00:31:57,260
in anger that's cool right so I'm going

00:31:53,600 --> 00:32:01,850
to show you something that I've been

00:31:57,260 --> 00:32:04,700
working on um since before Drupal 8 was

00:32:01,850 --> 00:32:06,440
was was launched and I'm now working at

00:32:04,700 --> 00:32:08,420
getting into into core and hopefully

00:32:06,440 --> 00:32:11,420
will be available 8.2 but it's a kind of

00:32:08,420 --> 00:32:12,800
recommended way of working to solve the

00:32:11,420 --> 00:32:14,930
simple case of like I want to build a

00:32:12,800 --> 00:32:17,390
site for a client and I'm one of n

00:32:14,930 --> 00:32:19,370
developers who are working on it we want

00:32:17,390 --> 00:32:21,050
to manage our configuration and deploy

00:32:19,370 --> 00:32:23,300
it to that site when it's in production

00:32:21,050 --> 00:32:25,820
so build in local environments and

00:32:23,300 --> 00:32:28,010
deploy on some production server I just

00:32:25,820 --> 00:32:29,870
would like to emphasize that what he's

00:32:28,010 --> 00:32:31,760
showing you now I don't think any of you

00:32:29,870 --> 00:32:35,870
have ever seen before it seemed pretty

00:32:31,760 --> 00:32:41,590
clever to me so this is new this is like

00:32:35,870 --> 00:32:44,980
news reporters in the room pay attention

00:32:41,590 --> 00:32:49,430
so so here I just have a site which I've

00:32:44,980 --> 00:32:50,990
installed standard and I've done I've

00:32:49,430 --> 00:32:54,590
been uninstalled a few things like node

00:32:50,990 --> 00:32:57,530
and I've changed it to use my own

00:32:54,590 --> 00:32:59,030
install profile I've basically just said

00:32:57,530 --> 00:33:01,550
ok I'm gonna create an install profile

00:32:59,030 --> 00:33:04,160
of my profile and I've dumped all the

00:33:01,550 --> 00:33:08,360
configuration into that install profile

00:33:04,160 --> 00:33:11,200
so quite simply here I have like I'm

00:33:08,360 --> 00:33:11,200
gonna have to move this

00:33:23,570 --> 00:33:29,130
so so this is this is like my own

00:33:27,150 --> 00:33:31,380
install profile all it contains it's

00:33:29,130 --> 00:33:33,540
like an info llamo if I was saying its

00:33:31,380 --> 00:33:36,030
install profile a very tiny install file

00:33:33,540 --> 00:33:37,140
and it contains a lot of configuration

00:33:36,030 --> 00:33:38,640
but it's not in one of those three

00:33:37,140 --> 00:33:40,290
directories that we were talking about

00:33:38,640 --> 00:33:42,060
it's in a different directory which I've

00:33:40,290 --> 00:33:45,120
just called sync and that's like

00:33:42,060 --> 00:33:46,560
containing the whole site and this the

00:33:45,120 --> 00:33:48,330
way that this works is basically I'm

00:33:46,560 --> 00:33:49,920
going to work on my site I'm going to

00:33:48,330 --> 00:33:53,070
install some stuff and then I'm going to

00:33:49,920 --> 00:33:54,810
export my configuration so here I am I'm

00:33:53,070 --> 00:34:10,190
gonna go okay what I really want is a

00:33:54,810 --> 00:34:10,190
better site name and I want to extend it

00:34:19,100 --> 00:34:27,020
have use let's say let's go for views

00:34:21,450 --> 00:34:27,020
that's if you thank you

00:34:30,169 --> 00:34:41,389
and how quickly come in here and you

00:34:38,700 --> 00:34:43,710
haha whatever

00:34:41,389 --> 00:34:46,739
yeah I'll create a view I'll create an

00:34:43,710 --> 00:34:50,839
o-type that's what with it because they

00:34:46,739 --> 00:34:50,839
already simple how many just create

00:34:52,789 --> 00:35:00,140
fields so I can now come here and used

00:34:57,839 --> 00:35:03,380
rushed rushes got some nice config

00:35:00,140 --> 00:35:11,640
integration and as come on we have Rush

00:35:03,380 --> 00:35:14,039
config xx and and what that's telling me

00:35:11,640 --> 00:35:15,450
is is going to create these these these

00:35:14,039 --> 00:35:18,180
views it's going to create the view

00:35:15,450 --> 00:35:21,660
settings file it's going to create some

00:35:18,180 --> 00:35:23,700
display modes for my new content type

00:35:21,660 --> 00:35:25,440
that's gonna create a body field for it

00:35:23,700 --> 00:35:26,729
and it's going to actually the core

00:35:25,440 --> 00:35:29,430
extension stuff that's going on here

00:35:26,729 --> 00:35:31,349
it's going to install views and it's

00:35:29,430 --> 00:35:33,930
going to change my site name and that's

00:35:31,349 --> 00:35:38,339
just going to put that in my profile

00:35:33,930 --> 00:35:41,460
config syncro G which is great so I've

00:35:38,339 --> 00:35:43,739
done that and now it's files and it's a

00:35:41,460 --> 00:35:47,789
module so I just manage it like a module

00:35:43,739 --> 00:35:51,749
because it is so I can just add it to

00:35:47,789 --> 00:35:56,869
get I can have a yeah nice it's changing

00:35:51,749 --> 00:35:56,869
all that there's my site name great

00:35:57,740 --> 00:36:10,830
so I'll commit that and then I can come

00:36:07,590 --> 00:36:16,830
to my other site which was the previous

00:36:10,830 --> 00:36:20,370
version and I can see your kind of

00:36:16,830 --> 00:36:22,050
structure and go okay good science tool

00:36:20,370 --> 00:36:24,480
does it have any content types

00:36:22,050 --> 00:36:26,730
so he doesn't doesn't move use we can't

00:36:24,480 --> 00:36:29,000
see that cuz enable views UI and I can

00:36:26,730 --> 00:36:29,000
just pull

00:36:33,530 --> 00:36:49,170
and no I'd only to it's not it's just so

00:36:47,490 --> 00:36:50,700
yeah and so I can pull in my changes I

00:36:49,170 --> 00:36:54,150
can review them before I do anything

00:36:50,700 --> 00:36:56,070
that all looks good and then I can come

00:36:54,150 --> 00:37:00,660
to my site and I can just come into

00:36:56,070 --> 00:37:03,150
configuration and go to config sync and

00:37:00,660 --> 00:37:05,160
as Matt showed you before like his here

00:37:03,150 --> 00:37:06,720
is everything's going on I can see what

00:37:05,160 --> 00:37:08,670
it's what it's creating I can see what

00:37:06,720 --> 00:37:09,840
it's changing coming here into a diff

00:37:08,670 --> 00:37:12,240
and go oh yeah a fuse is gonna be

00:37:09,840 --> 00:37:16,920
enabled nice and then I can just click

00:37:12,240 --> 00:37:21,240
import so what's cool about that is that

00:37:16,920 --> 00:37:23,580
gives us a way to manage the whole the

00:37:21,240 --> 00:37:26,130
site configuration as an install profile

00:37:23,580 --> 00:37:27,750
so we all know how to manage module

00:37:26,130 --> 00:37:29,400
versions you know how to push modules to

00:37:27,750 --> 00:37:34,619
production it's just just the same way

00:37:29,400 --> 00:37:36,450
but what's really great is this new

00:37:34,619 --> 00:37:39,030
developer comes and they just get the

00:37:36,450 --> 00:37:41,270
code and they don't have the database

00:37:39,030 --> 00:37:41,270
setup

00:37:51,089 --> 00:37:59,589
and come from the society now at the

00:37:58,299 --> 00:38:01,779
moment this doesn't work as well as it

00:37:59,589 --> 00:38:03,640
could but once certain stuff moves into

00:38:01,779 --> 00:38:05,170
court this will be seamless but I can

00:38:03,640 --> 00:38:07,509
come here I can just choose that that

00:38:05,170 --> 00:38:26,529
profile because it is just an insult

00:38:07,509 --> 00:38:28,660
over I go okay and what this does at the

00:38:26,529 --> 00:38:29,950
moment is it just all it does is install

00:38:28,660 --> 00:38:32,769
the required modules and the

00:38:29,950 --> 00:38:37,529
configuration manager this doesn't

00:38:32,769 --> 00:38:40,029
matter it's gonna change obviously in

00:38:37,529 --> 00:38:41,769
ideal world we wouldn't be fitting in

00:38:40,029 --> 00:38:42,940
only we don't need to be creating the

00:38:41,769 --> 00:38:46,630
user because all of this stuff is

00:38:42,940 --> 00:38:52,029
already decided by the profile that

00:38:46,630 --> 00:38:53,589
looks terrible but quite simply I just

00:38:52,029 --> 00:38:57,369
count a configuration there is

00:38:53,589 --> 00:39:00,400
everything to synchronize I import

00:38:57,369 --> 00:39:01,869
everything and as a developer I'm ready

00:39:00,400 --> 00:39:03,940
to go I can now make changes on this

00:39:01,869 --> 00:39:10,269
site export them back to my install

00:39:03,940 --> 00:39:13,710
profile commit someone does it pull and

00:39:10,269 --> 00:39:13,710
they'd said so what's happening now

00:39:15,220 --> 00:39:19,270
what's happening now is it's installing

00:39:16,780 --> 00:39:22,119
all the modules and then it goes through

00:39:19,270 --> 00:39:25,869
and it creates all the all the config

00:39:22,119 --> 00:39:27,930
entities then it it's finished and now

00:39:25,869 --> 00:39:37,710
we're here we have the same stuff

00:39:27,930 --> 00:39:43,359
structure and it just works

00:39:37,710 --> 00:39:44,650
so yeah and the code that is necessary

00:39:43,359 --> 00:39:50,859
just to make that work just to show you

00:39:44,650 --> 00:39:52,809
like kind of how how simple this is so I

00:39:50,859 --> 00:39:55,170
just wanted to add that when I first saw

00:39:52,809 --> 00:39:58,299
this what I realized is that this system

00:39:55,170 --> 00:40:01,359
workflow kind of allows that directory

00:39:58,299 --> 00:40:04,980
to do double duty one it's the install

00:40:01,359 --> 00:40:09,789
profile but two it's also your your

00:40:04,980 --> 00:40:12,250
staging directory so it allows it allows

00:40:09,789 --> 00:40:14,349
you to you know have fewer steps in the

00:40:12,250 --> 00:40:16,839
process when you're starting up on a new

00:40:14,349 --> 00:40:18,730
site it allows you to not have to worry

00:40:16,839 --> 00:40:20,890
about making sure you're getting all

00:40:18,730 --> 00:40:22,990
your uu IDs and whatnot correct when you

00:40:20,890 --> 00:40:25,900
do same instances of the same site which

00:40:22,990 --> 00:40:27,910
is something that trips people up and it

00:40:25,900 --> 00:40:29,829
to me it reminds me a little bit of like

00:40:27,910 --> 00:40:32,170
I'm working on a site and yaws often

00:40:29,829 --> 00:40:33,880
have like site underscore accustomed but

00:40:32,170 --> 00:40:35,559
all your custom code in and that's kind

00:40:33,880 --> 00:40:38,319
of the function that this is serving as

00:40:35,559 --> 00:40:41,230
this one place where you're gonna put

00:40:38,319 --> 00:40:44,380
most of your your custom configuration

00:40:41,230 --> 00:40:45,819
for the site so I think based on having

00:40:44,380 --> 00:40:48,630
thought about this for a few hours that

00:40:45,819 --> 00:40:50,859
this could be a good recommended

00:40:48,630 --> 00:40:53,650
workflow that's slightly different from

00:40:50,859 --> 00:40:59,529
what one a couple of the other workflows

00:40:53,650 --> 00:41:01,839
that we've mentioned in the past is just

00:40:59,529 --> 00:41:04,450
change the UUID that it generates during

00:41:01,839 --> 00:41:06,369
install to be the one that's in your in

00:41:04,450 --> 00:41:08,650
your config sink directory and it just

00:41:06,369 --> 00:41:10,119
sets the the the directory where it's

00:41:08,650 --> 00:41:11,890
gonna get configuration from to the

00:41:10,119 --> 00:41:14,470
profile summary and that is it and it

00:41:11,890 --> 00:41:17,109
just works and so you look actually

00:41:14,470 --> 00:41:19,930
those two steps will go away and in in

00:41:17,109 --> 00:41:29,099
in in in the future and all all that

00:41:19,930 --> 00:41:31,990
should happen what I want to see is just

00:41:29,099 --> 00:41:34,990
people having to write config and store

00:41:31,990 --> 00:41:37,029
true in their profile and then there'll

00:41:34,990 --> 00:41:38,289
be a tool so you going create your site

00:41:37,029 --> 00:41:40,240
the first time and you're going to dress

00:41:38,289 --> 00:41:41,920
rush make me a profile and I'll just

00:41:40,240 --> 00:41:43,480
create this for you just this and dump

00:41:41,920 --> 00:41:44,529
your confi to that directory and share

00:41:43,480 --> 00:41:46,089
it with the other developers and

00:41:44,529 --> 00:41:47,829
everyone can just work on the same site

00:41:46,089 --> 00:41:51,190
and production use the same install

00:41:47,829 --> 00:41:53,619
profile make changes sync where you go

00:41:51,190 --> 00:41:55,390
those things don't currently exist by

00:41:53,619 --> 00:42:04,390
the way yeah that's not a thing right

00:41:55,390 --> 00:42:06,549
now yeah yeah exactly

00:42:04,390 --> 00:42:09,130
and so right now what you can do that

00:42:06,549 --> 00:42:13,150
the easiest way of working around it is

00:42:09,130 --> 00:42:16,359
to use something called the config

00:42:13,150 --> 00:42:18,460
installer module which is another

00:42:16,359 --> 00:42:22,960
install profile that allows you to take

00:42:18,460 --> 00:42:24,970
a tarball or a directory and do that but

00:42:22,960 --> 00:42:26,950
there's already an issue like to try and

00:42:24,970 --> 00:42:29,829
bring that work into core and this is

00:42:26,950 --> 00:42:31,829
just like a little addition to that work

00:42:29,829 --> 00:42:37,710
that will that will actually make it

00:42:31,829 --> 00:42:37,710
completely simple it just works

00:42:52,840 --> 00:42:57,440
there's a mic up here if you get if you

00:42:55,280 --> 00:43:02,780
have questions come on up so we can have

00:42:57,440 --> 00:43:07,340
those four should I go now yeah good

00:43:02,780 --> 00:43:09,260
friend so in terms of managing like

00:43:07,340 --> 00:43:11,450
modules that are enabled I've been

00:43:09,260 --> 00:43:13,400
running the issues with having like

00:43:11,450 --> 00:43:15,140
views UI turned on on dev and then turn

00:43:13,400 --> 00:43:19,640
off and prod do you have recommendation

00:43:15,140 --> 00:43:22,460
workflows for that so there there is

00:43:19,640 --> 00:43:25,370
there is something in rush that can that

00:43:22,460 --> 00:43:27,230
can help like remove modules during the

00:43:25,370 --> 00:43:29,330
export but we don't have a solution for

00:43:27,230 --> 00:43:31,340
that at this moment not not a

00:43:29,330 --> 00:43:34,280
recommended one other than just having

00:43:31,340 --> 00:43:36,680
some process that that when you do your

00:43:34,280 --> 00:43:38,360
your config export like actually just

00:43:36,680 --> 00:43:40,670
manipulating the configuration on that

00:43:38,360 --> 00:43:42,710
what would be nice is if like some some

00:43:40,670 --> 00:43:44,060
hook fighter that you or identified that

00:43:42,710 --> 00:43:44,960
you could then go and just manipulate

00:43:44,060 --> 00:43:46,010
and say I should I don't want that

00:43:44,960 --> 00:43:48,050
module yeah

00:43:46,010 --> 00:43:49,370
but it's it's not hard it's just it just

00:43:48,050 --> 00:43:50,870
hasn't been written yeah yeah it's very

00:43:49,370 --> 00:43:57,590
now it's no more time consuming to make

00:43:50,870 --> 00:43:59,840
sure you yeah okay thank you you

00:43:57,590 --> 00:44:02,180
mentioned the MongoDB

00:43:59,840 --> 00:44:04,570
that that would be an option or altering

00:44:02,180 --> 00:44:07,700
option is that built-in or is that just

00:44:04,570 --> 00:44:09,650
available if you write it all it's

00:44:07,700 --> 00:44:12,530
available if you write it like the the

00:44:09,650 --> 00:44:14,300
MongoDB driver got got quite far for

00:44:12,530 --> 00:44:16,940
Drupal 8 but then I think funding dried

00:44:14,300 --> 00:44:18,770
up but I'm pretty sure that the conflict

00:44:16,940 --> 00:44:21,290
table was already handled because it's

00:44:18,770 --> 00:44:24,140
just a key value store there there are

00:44:21,290 --> 00:44:26,150
no it behaves exactly like a key value

00:44:24,140 --> 00:44:28,400
store see it's not difficult for

00:44:26,150 --> 00:44:30,110
it's not difficult to put it in any key

00:44:28,400 --> 00:44:34,270
value store that you like okay it's

00:44:30,110 --> 00:44:34,270
simple it's one of the easier things

00:44:34,330 --> 00:44:38,810
louder

00:44:36,370 --> 00:44:40,760
sorry

00:44:38,810 --> 00:44:43,760
so know one of the things in progress is

00:44:40,760 --> 00:44:45,260
like content deployment tools yeah the

00:44:43,760 --> 00:44:48,800
other side have run into things where

00:44:45,260 --> 00:44:50,690
it's parts of the site that the end user

00:44:48,800 --> 00:44:51,770
might want to change like contact forms

00:44:50,690 --> 00:44:53,430
where they might want to create a new

00:44:51,770 --> 00:44:57,270
contact form on the production side

00:44:53,430 --> 00:44:58,980
is there anything that would help to

00:44:57,270 --> 00:45:01,650
make sure that when we're developing and

00:44:58,980 --> 00:45:03,510
we're deploying our development changes

00:45:01,650 --> 00:45:04,950
to the production site that we can avoid

00:45:03,510 --> 00:45:07,950
overwriting some of those things that we

00:45:04,950 --> 00:45:12,410
might want to make available so yes so

00:45:07,950 --> 00:45:14,369
the question was like our site

00:45:12,410 --> 00:45:16,410
administrators are creating contact

00:45:14,369 --> 00:45:20,280
forms on the live site how do we manage

00:45:16,410 --> 00:45:22,890
like live change so the simple answer to

00:45:20,280 --> 00:45:26,220
that is actually when you when you do an

00:45:22,890 --> 00:45:27,839
import if there's been differences since

00:45:26,220 --> 00:45:29,220
the last import so if there's been

00:45:27,839 --> 00:45:30,869
changes to the ActiveX configuration

00:45:29,220 --> 00:45:33,000
there's a warning there so it tells you

00:45:30,869 --> 00:45:35,010
you might overwrite changes so if you

00:45:33,000 --> 00:45:36,720
see that warning venue then the thing to

00:45:35,010 --> 00:45:39,540
do is is to export the configuration

00:45:36,720 --> 00:45:41,339
from live and merge it into your install

00:45:39,540 --> 00:45:43,380
profile and in this or into wherever

00:45:41,339 --> 00:45:45,540
you're storing your your shared config

00:45:43,380 --> 00:45:46,890
and then review those changes and go we

00:45:45,540 --> 00:45:49,170
want those or we don't want this we're

00:45:46,890 --> 00:45:50,970
happy to get rid of that but but that's

00:45:49,170 --> 00:45:52,680
you have to manage if you allow people

00:45:50,970 --> 00:45:54,450
to make changes on life you have to

00:45:52,680 --> 00:45:55,530
manage the process of bringing those

00:45:54,450 --> 00:46:01,290
changes back into your development

00:45:55,530 --> 00:46:03,960
workflow I'll just add to that some

00:46:01,290 --> 00:46:07,410
people now in Drupal 8 are configuring

00:46:03,960 --> 00:46:10,170
their sites so that nobody is making

00:46:07,410 --> 00:46:13,799
changes in the UI to configuration that

00:46:10,170 --> 00:46:17,970
it's only done by developers in code and

00:46:13,799 --> 00:46:20,460
pushed up so that is another workflow

00:46:17,970 --> 00:46:22,109
that could that will probably work for a

00:46:20,460 --> 00:46:24,480
lot of sites where you actually don't

00:46:22,109 --> 00:46:27,119
ever want people to change configuration

00:46:24,480 --> 00:46:28,890
on the site in the UI only have it done

00:46:27,119 --> 00:46:31,319
in code so you can manage it you can do

00:46:28,890 --> 00:46:33,690
your QA that way and there are there's a

00:46:31,319 --> 00:46:37,410
config read-only module that that does

00:46:33,690 --> 00:46:40,049
that yeah my questions related to that I

00:46:37,410 --> 00:46:42,000
mean we have use cases the performance

00:46:40,049 --> 00:46:44,730
config as I could at use case but we

00:46:42,000 --> 00:46:47,210
come across it with module config where

00:46:44,730 --> 00:46:50,280
we need to change it per environment and

00:46:47,210 --> 00:46:52,799
we're having constant issues where oshu

00:46:50,280 --> 00:46:54,390
we want caching enabled we need to

00:46:52,799 --> 00:46:57,390
deploy it so we update the config and

00:46:54,390 --> 00:46:59,069
now caching his name in abled on dev but

00:46:57,390 --> 00:47:02,220
we don't want it enable undef and so

00:46:59,069 --> 00:47:04,530
we're we're having problems with that so

00:47:02,220 --> 00:47:06,940
the traditional way of trying to manage

00:47:04,530 --> 00:47:09,970
that is to make your active can

00:47:06,940 --> 00:47:12,250
what you expect in alive and then do

00:47:09,970 --> 00:47:14,530
overrides in your in your settings PHP

00:47:12,250 --> 00:47:15,789
for for your development because you

00:47:14,530 --> 00:47:19,780
don't generally move you at your

00:47:15,789 --> 00:47:22,450
settings PHP that that's the way of

00:47:19,780 --> 00:47:24,280
doing it and so and one of another

00:47:22,450 --> 00:47:26,770
another big advantage of Drupal 8 is

00:47:24,280 --> 00:47:28,539
that we've made sure that when you

00:47:26,770 --> 00:47:31,150
actually edit configuration in the UI

00:47:28,539 --> 00:47:33,910
those overrides from your settings PHP

00:47:31,150 --> 00:47:36,339
don't don't get into the form so that so

00:47:33,910 --> 00:47:38,440
that you don't bleed your development

00:47:36,339 --> 00:47:41,020
overrides up into your production by

00:47:38,440 --> 00:47:45,190
mistakenly saving as some form that has

00:47:41,020 --> 00:47:46,809
one of those overrides in it's a bit of

00:47:45,190 --> 00:47:48,549
a hell it's good but it's a bit of a

00:47:46,809 --> 00:47:50,710
headache I mean it's because it because

00:47:48,549 --> 00:47:51,940
you're sometimes you see you're looking

00:47:50,710 --> 00:47:54,010
and saying oh this is saying like

00:47:51,940 --> 00:47:55,869
caching is on but it's actually off but

00:47:54,010 --> 00:47:58,030
it's it's hard to have what we had

00:47:55,869 --> 00:47:59,980
before was difficult what we have now is

00:47:58,030 --> 00:48:02,020
difficult in a different way but it's in

00:47:59,980 --> 00:48:04,329
a way that's probably better for people

00:48:02,020 --> 00:48:06,490
we've tried to discuss about how we

00:48:04,329 --> 00:48:08,829
could actually tell people that there's

00:48:06,490 --> 00:48:10,660
an override that that is in selling to

00:48:08,829 --> 00:48:13,089
PHP but we haven't yet come to an

00:48:10,660 --> 00:48:16,720
agreement because because of the dynamic

00:48:13,089 --> 00:48:18,279
nature of how overrides can apply hey

00:48:16,720 --> 00:48:20,529
thank you for a session I have a

00:48:18,279 --> 00:48:22,839
question in case we have a distribution

00:48:20,529 --> 00:48:26,020
that needs to be installed on the

00:48:22,839 --> 00:48:31,839
multiple instances what is the best way

00:48:26,020 --> 00:48:35,049
to approach you you ad each year so the

00:48:31,839 --> 00:48:39,940
question was I've got a distribution how

00:48:35,049 --> 00:48:41,859
am I going to manage you you IDs I think

00:48:39,940 --> 00:48:43,869
best practices there are being worked

00:48:41,859 --> 00:48:45,849
out it really depends on on the nature

00:48:43,869 --> 00:48:48,190
of your distribution if your

00:48:45,849 --> 00:48:50,890
distribution and you've created like a

00:48:48,190 --> 00:48:53,260
blog and it is actually the same blog on

00:48:50,890 --> 00:48:54,910
all these different sites then you want

00:48:53,260 --> 00:48:55,930
them to have the same UID but if you're

00:48:54,910 --> 00:48:59,140
creating something like commerce

00:48:55,930 --> 00:49:00,369
kickstart and and every every science or

00:48:59,140 --> 00:49:02,890
is actually a really different thing

00:49:00,369 --> 00:49:04,420
it's a proper distribution then you

00:49:02,890 --> 00:49:08,589
don't want them to have the same you IDs

00:49:04,420 --> 00:49:10,240
and yeah it's tricky it's up to the

00:49:08,589 --> 00:49:11,829
distribution to decide so like if it's

00:49:10,240 --> 00:49:14,950
an internal distribution that's built to

00:49:11,829 --> 00:49:16,569
like power like I don't know different

00:49:14,950 --> 00:49:18,760
faculties of the university you might

00:49:16,569 --> 00:49:20,440
choose to have the same EU IDs because

00:49:18,760 --> 00:49:21,790
then it makes it really simple to know

00:49:20,440 --> 00:49:23,230
that's actually the one that you've

00:49:21,790 --> 00:49:24,250
deployed with your distribution but if

00:49:23,230 --> 00:49:26,589
you're creating something for like

00:49:24,250 --> 00:49:28,210
general global usage then like everyone

00:49:26,589 --> 00:49:29,319
having exactly the same blog even after

00:49:28,210 --> 00:49:31,359
they've gone on customers if that

00:49:29,319 --> 00:49:33,670
doesn't really make sense that's the

00:49:31,359 --> 00:49:35,650
first hour is the first case so is it

00:49:33,670 --> 00:49:40,540
something done in install profile where

00:49:35,650 --> 00:49:42,579
you said the UUID for all sites I mean

00:49:40,540 --> 00:49:45,490
is it something said your installation

00:49:42,579 --> 00:49:47,859
like the same UUID for all sides or it's

00:49:45,490 --> 00:49:49,810
done so in your in your instance if if

00:49:47,859 --> 00:49:51,760
you want by it actually to be the same

00:49:49,810 --> 00:49:54,250
configuration everywhere but you want a

00:49:51,760 --> 00:49:56,589
different site UUID on each different

00:49:54,250 --> 00:49:59,290
install then what you could do is you

00:49:56,589 --> 00:50:02,050
could you could generate that UUID on

00:49:59,290 --> 00:50:03,460
install for just the system site okay so

00:50:02,050 --> 00:50:04,780
do the opposite of what I was doing all

00:50:03,460 --> 00:50:06,520
right okay so that would stop them

00:50:04,780 --> 00:50:08,140
syncing to each other but it would allow

00:50:06,520 --> 00:50:12,310
you to push configuration change to your

00:50:08,140 --> 00:50:15,280
distribution all right thank you that

00:50:12,310 --> 00:50:17,349
reminded me to that we should at 3:45

00:50:15,280 --> 00:50:19,359
there's gonna be a Boff where we're

00:50:17,349 --> 00:50:22,329
gonna talk Mike Potter's here and we're

00:50:19,359 --> 00:50:24,339
gonna talk about ways where you can use

00:50:22,329 --> 00:50:26,890
the configuration system with features

00:50:24,339 --> 00:50:27,310
and what the features module has to

00:50:26,890 --> 00:50:30,220
offer

00:50:27,310 --> 00:50:32,440
and cases where you actually do want to

00:50:30,220 --> 00:50:33,940
package up individual configuration

00:50:32,440 --> 00:50:35,140
which is not quite what you're talking

00:50:33,940 --> 00:50:37,390
about but that's something that the

00:50:35,140 --> 00:50:40,510
features modules have happy hour

00:50:37,390 --> 00:50:42,190
handling but I think Alex and I are both

00:50:40,510 --> 00:50:44,980
I'm gonna be there we're gonna both be

00:50:42,190 --> 00:50:46,780
there too and tell us what you think

00:50:44,980 --> 00:50:51,430
about the session - I should say then so

00:50:46,780 --> 00:50:56,069
which which room is that buffin I've got

00:50:51,430 --> 00:51:08,530
it here okay it is in two eight nine

00:50:56,069 --> 00:51:10,359
next questions address is this like I've

00:51:08,530 --> 00:51:12,819
looked for documentation on the

00:51:10,359 --> 00:51:16,119
configuration I've never seen optional

00:51:12,819 --> 00:51:18,990
schema or sync anywhere documented is

00:51:16,119 --> 00:51:18,990
this documented anywhere

00:51:19,900 --> 00:51:30,580
I think so I'm hoping that'll be helpful

00:51:26,250 --> 00:51:33,369
let's see we have we have a site that we

00:51:30,580 --> 00:51:34,869
were using trip though it's not

00:51:33,369 --> 00:51:38,230
documented that it's gonna be talking me

00:51:34,869 --> 00:51:51,490
down no I know but I have links that

00:51:38,230 --> 00:51:55,470
might be down yeah we come trying we can

00:51:51,490 --> 00:51:58,960
try and look that great second question

00:51:55,470 --> 00:52:03,990
seem to he mentioned preventing people

00:51:58,960 --> 00:52:06,580
from hacking active configuration I'm a

00:52:03,990 --> 00:52:12,130
Drupal 8 module developer I don't have

00:52:06,580 --> 00:52:13,930
any experience in seven so but I've been

00:52:12,130 --> 00:52:18,160
having found it pretty much impossible

00:52:13,930 --> 00:52:21,510
to edit the configuration yeah if

00:52:18,160 --> 00:52:24,670
there's an active configuration the only

00:52:21,510 --> 00:52:28,150
not not just the Remo files but the

00:52:24,670 --> 00:52:30,660
import any sort of single thing this

00:52:28,150 --> 00:52:35,080
configuration is already an active big

00:52:30,660 --> 00:52:37,210
so so there's a module for you okay

00:52:35,080 --> 00:52:39,400
the config devel module allows you to

00:52:37,210 --> 00:52:40,869
basically always sync between your

00:52:39,400 --> 00:52:43,330
module and the active configuration

00:52:40,869 --> 00:52:49,600
whilst you're in development okay thank

00:52:43,330 --> 00:52:53,109
you a lot of my questions were actually

00:52:49,600 --> 00:52:56,369
already answered thanks guys we're

00:52:53,109 --> 00:53:05,280
really trying to work out kind of a a

00:52:56,369 --> 00:53:07,840
multi-site sort of thing so updating one

00:53:05,280 --> 00:53:10,180
but one thing that we're kind of leaning

00:53:07,840 --> 00:53:13,510
towards is you know we have something

00:53:10,180 --> 00:53:17,380
some certain things that might be shared

00:53:13,510 --> 00:53:20,349
amongst multiple multiple modules might

00:53:17,380 --> 00:53:23,690
rely on say one

00:53:20,349 --> 00:53:27,469
entity bundle so we're kind of going the

00:53:23,690 --> 00:53:29,869
route of creating really specific like

00:53:27,469 --> 00:53:33,140
this module will only install this one

00:53:29,869 --> 00:53:34,459
thing and it's starting to feel like it

00:53:33,140 --> 00:53:36,079
looked like it might be overkill like

00:53:34,459 --> 00:53:38,660
we're making you know these all these

00:53:36,079 --> 00:53:44,359
things depend on one thing is that is

00:53:38,660 --> 00:53:46,219
there any sort of alternative not really

00:53:44,359 --> 00:53:48,529
I mean the way in which you make your

00:53:46,219 --> 00:53:50,089
packages and so that they can be like

00:53:48,529 --> 00:53:51,140
ships around the different bits of

00:53:50,089 --> 00:53:52,489
functionality you want

00:53:51,140 --> 00:53:55,489
that's what features is trying to help

00:53:52,489 --> 00:53:57,019
you do and work out the features at the

00:53:55,489 --> 00:53:59,209
moment tries to use the dependency graph

00:53:57,019 --> 00:54:00,650
to make some sensible suggestions around

00:53:59,209 --> 00:54:02,329
those packages because basically in

00:54:00,650 --> 00:54:04,729
Drupal 8 features as a module builder

00:54:02,329 --> 00:54:06,019
and and in building modules what it's

00:54:04,729 --> 00:54:07,279
trying to do is like group bits of

00:54:06,019 --> 00:54:08,930
related configuration and put them

00:54:07,279 --> 00:54:10,519
together and then let those modules

00:54:08,930 --> 00:54:15,440
depend on each other in a way that makes

00:54:10,519 --> 00:54:17,809
sense so so it depends on like you have

00:54:15,440 --> 00:54:19,640
to do some design there and sit down and

00:54:17,809 --> 00:54:21,259
go okay well what really makes sense

00:54:19,640 --> 00:54:22,999
right what functionality is common for

00:54:21,259 --> 00:54:24,979
everything shall we build like a common

00:54:22,999 --> 00:54:27,559
module for the these specific things to

00:54:24,979 --> 00:54:29,029
fall off and then and if you find that

00:54:27,559 --> 00:54:30,739
you've got in getting like one module

00:54:29,029 --> 00:54:33,199
per per Yama file that's you've probably

00:54:30,739 --> 00:54:35,059
this probably something that's like a

00:54:33,199 --> 00:54:43,630
little bit weird about how you're trying

00:54:35,059 --> 00:54:43,630
to deploy those features thank you

00:54:45,039 --> 00:54:49,989
project we were working on we found that

00:54:47,359 --> 00:54:52,999
occasionally we'd have issues with

00:54:49,989 --> 00:54:55,839
conflicts where multiple developers were

00:54:52,999 --> 00:54:58,160
working on the same project where

00:54:55,839 --> 00:55:01,130
configurations would get overridden if

00:54:58,160 --> 00:55:05,599
you affected the same like configuration

00:55:01,130 --> 00:55:07,699
file or like say a developer did a full

00:55:05,599 --> 00:55:09,619
configuration export and accidentally

00:55:07,699 --> 00:55:11,779
committed things to like the sink folder

00:55:09,619 --> 00:55:13,339
that weren't necessary you have like any

00:55:11,779 --> 00:55:15,859
workflow recommendations for like

00:55:13,339 --> 00:55:20,989
minimizing those conflicts we've got

00:55:15,859 --> 00:55:23,420
multiple developers yep yep I do too

00:55:20,989 --> 00:55:25,249
two recommendations one use get because

00:55:23,420 --> 00:55:26,539
it will detect conflicts when things

00:55:25,249 --> 00:55:28,549
have been changed by two different

00:55:26,539 --> 00:55:31,489
people so treating your configuration

00:55:28,549 --> 00:55:33,180
like code and extending from using git

00:55:31,489 --> 00:55:36,950
as the way

00:55:33,180 --> 00:55:39,119
store and manage like conflict is a

00:55:36,950 --> 00:55:41,099
proper code review treat your

00:55:39,119 --> 00:55:43,859
configuration like code and and have

00:55:41,099 --> 00:55:46,140
people review it so that the the reason

00:55:43,859 --> 00:55:48,150
we chose Yama is that it's very easy for

00:55:46,140 --> 00:55:50,249
humans to read and work out what that's

00:55:48,150 --> 00:55:51,930
doing so you should be able to look at

00:55:50,249 --> 00:55:54,630
the change setting ago that has the

00:55:51,930 --> 00:55:56,730
expected changes or that doesn't because

00:55:54,630 --> 00:56:01,170
that you know that's the whole point so

00:55:56,730 --> 00:56:02,759
it's it's about taking taking the the

00:56:01,170 --> 00:56:05,519
care of the quality that you would over

00:56:02,759 --> 00:56:09,599
code and treating it the same way thank

00:56:05,519 --> 00:56:11,490
you alright

00:56:09,599 --> 00:56:14,039
we're currently building a Drupal 8

00:56:11,490 --> 00:56:16,950
install Pro profile for university

00:56:14,039 --> 00:56:19,499
installation so basically it's sort of

00:56:16,950 --> 00:56:22,559
distribution all sites will will will

00:56:19,499 --> 00:56:24,630
start from the same footprint and

00:56:22,559 --> 00:56:26,849
they'll evolve you know into the future

00:56:24,630 --> 00:56:29,759
the question I have as many sites won't

00:56:26,849 --> 00:56:32,549
need to use config management or the

00:56:29,759 --> 00:56:34,140
configuration system as far as workflow

00:56:32,549 --> 00:56:36,089
goes you know they'll be in dev they'll

00:56:34,140 --> 00:56:37,769
go live and then their site will

00:56:36,089 --> 00:56:39,599
continue to evolve there but we will

00:56:37,769 --> 00:56:41,509
have some custom ones that will want to

00:56:39,599 --> 00:56:43,140
use a git workflow to deploy

00:56:41,509 --> 00:56:44,730
configuration I'm just wondering if

00:56:43,140 --> 00:56:46,140
there's any recommendations on how to do

00:56:44,730 --> 00:56:49,079
that is it a custom module that's

00:56:46,140 --> 00:56:51,299
particularly that for each site that

00:56:49,079 --> 00:56:55,640
loads its own configuration or what

00:56:51,299 --> 00:56:59,069
would be our best way to tackle that

00:56:55,640 --> 00:57:00,739
well it depends on whether you want to

00:56:59,069 --> 00:57:03,150
share that that feature between

00:57:00,739 --> 00:57:05,400
differents different sites if you do

00:57:03,150 --> 00:57:06,599
then maybe like the features module and

00:57:05,400 --> 00:57:08,279
using that to package up the

00:57:06,599 --> 00:57:09,749
configuration is one option for you or

00:57:08,279 --> 00:57:12,960
another option is just in those

00:57:09,749 --> 00:57:15,089
instances like those sites have their

00:57:12,960 --> 00:57:17,009
own install profile and manage it the

00:57:15,089 --> 00:57:18,539
way that I demoed demoed here today and

00:57:17,009 --> 00:57:20,309
just like have a specific install

00:57:18,539 --> 00:57:22,380
profile for that for those sites which

00:57:20,309 --> 00:57:25,710
are custom and have a generic one for

00:57:22,380 --> 00:57:28,640
that for the common use case that's is

00:57:25,710 --> 00:57:30,930
it possible to have them just have a

00:57:28,640 --> 00:57:32,819
Magus it's the same thing just a custom

00:57:30,930 --> 00:57:34,499
module that also contains other site

00:57:32,819 --> 00:57:37,650
over rising figurations and code that

00:57:34,499 --> 00:57:39,660
also loads their own you know overridden

00:57:37,650 --> 00:57:42,450
configuration or override configuration

00:57:39,660 --> 00:57:44,470
it's it's possible yeah all right thank

00:57:42,450 --> 00:57:49,420
you

00:57:44,470 --> 00:57:52,280
yes I was wondering if the CM management

00:57:49,420 --> 00:57:56,900
uses drush make his dress make still a

00:57:52,280 --> 00:57:59,000
thing in Drupal 8 Josh make is solving a

00:57:56,900 --> 00:58:01,550
different problem it's like it's

00:57:59,000 --> 00:58:03,110
composing your code and the kind of the

00:58:01,550 --> 00:58:06,080
hint in the answer I'm about to give is

00:58:03,110 --> 00:58:08,540
in the word that I just chose basically

00:58:06,080 --> 00:58:10,940
in Drupal 8 brush makers it will be

00:58:08,540 --> 00:58:14,090
replaced by composer so you will create

00:58:10,940 --> 00:58:15,770
a composer Jason father like says that I

00:58:14,090 --> 00:58:17,240
want Drupal and I want these modules and

00:58:15,770 --> 00:58:18,350
then you can run like composer install

00:58:17,240 --> 00:58:22,310
and that will go and get all the code

00:58:18,350 --> 00:58:23,990
for you and then you run run I know

00:58:22,310 --> 00:58:26,000
people have mentioned using different

00:58:23,990 --> 00:58:28,850
modules and different instances so

00:58:26,000 --> 00:58:30,770
composer can say grab certain things and

00:58:28,850 --> 00:58:31,910
modules in certain instances and other

00:58:30,770 --> 00:58:34,340
things are not and that the

00:58:31,910 --> 00:58:35,900
configuration can be on top of that

00:58:34,340 --> 00:58:38,150
yeah well that's yeah that's just the

00:58:35,900 --> 00:58:39,560
standard like code management so yeah

00:58:38,150 --> 00:58:41,360
you could do it that way if you wanted

00:58:39,560 --> 00:58:42,920
to have a different composer file for

00:58:41,360 --> 00:58:44,150
all your different projects but that's

00:58:42,920 --> 00:58:45,560
getting into the but then then

00:58:44,150 --> 00:58:48,200
everything is just a custom build right

00:58:45,560 --> 00:58:50,840
so yeah because I heard you mentioned

00:58:48,200 --> 00:58:53,420
build but this is sort of configuration

00:58:50,840 --> 00:58:59,090
not actually configurations for builds

00:58:53,420 --> 00:59:02,630
no yeah that's how this could thank you

00:58:59,090 --> 00:59:04,910
I just wanted to answer a previous

00:59:02,630 --> 00:59:06,350
question about finding documentation for

00:59:04,910 --> 00:59:08,870
this all this

00:59:06,350 --> 00:59:12,740
I'll put I'll put a little plug in here

00:59:08,870 --> 00:59:17,270
for a website called drupal.org or with

00:59:12,740 --> 00:59:19,490
a webpage slash list - changes and this

00:59:17,270 --> 00:59:21,140
is not documentation per se but it's

00:59:19,490 --> 00:59:23,270
where we have doc tried to always

00:59:21,140 --> 00:59:26,960
document things that have changed from

00:59:23,270 --> 00:59:30,290
Drupal 7 to Drupal 8 so I just looked up

00:59:26,960 --> 00:59:32,090
config slash install on organ config

00:59:30,290 --> 00:59:35,570
slash optional and I found information

00:59:32,090 --> 00:59:37,400
here where like here is where a change

00:59:35,570 --> 00:59:39,470
record for when we added config slash

00:59:37,400 --> 00:59:41,900
optional which links to the issue where

00:59:39,470 --> 00:59:43,430
we added it that's not the best place to

00:59:41,900 --> 00:59:46,970
look but right now that is one of the

00:59:43,430 --> 00:59:49,070
best places to get documentation so if

00:59:46,970 --> 00:59:51,920
that's one place to look but we do have

00:59:49,070 --> 00:59:54,430
information on the configuration API

00:59:51,920 --> 00:59:56,250
page so API dead drupal.org

00:59:54,430 --> 00:59:59,190
configuration and a toxic

00:59:56,250 --> 01:00:00,540
the like the optional module in the

00:59:59,190 --> 01:00:03,540
folder structure and that kind of thing

01:00:00,540 --> 01:00:06,420
here so if you find missing

01:00:03,540 --> 01:00:08,220
documentation all Docs pages on

01:00:06,420 --> 01:00:17,880
drupal.org are editable if you're logged

01:00:08,220 --> 01:00:20,849
in please feel free to contribute thing

01:00:17,880 --> 01:00:22,770
that i've been been kind of trying to

01:00:20,849 --> 01:00:25,710
work out is when the line between

01:00:22,770 --> 01:00:28,430
content and config is a little blurred

01:00:25,710 --> 01:00:31,830
you know we saw like the modules or

01:00:28,430 --> 01:00:34,859
being able to import content but there

01:00:31,830 --> 01:00:37,590
are benefits to an example as taxonomy

01:00:34,859 --> 01:00:40,380
where traditionally a lot of times terms

01:00:37,590 --> 01:00:43,770
would be a lot closer to configuration

01:00:40,380 --> 01:00:45,420
than content and you know we're looking

01:00:43,770 --> 01:00:47,910
at it and it's like well this would

01:00:45,420 --> 01:00:50,490
actually benefit a lot from being

01:00:47,910 --> 01:00:52,500
considered configuration rather than

01:00:50,490 --> 01:00:57,869
being used in this content ways that we

01:00:52,500 --> 01:00:59,940
can nice stuff the whole configuration

01:00:57,869 --> 01:01:04,230
system

01:00:59,940 --> 01:01:07,830
I guess should we just try to say okay

01:01:04,230 --> 01:01:09,390
if it's as content in Drupal then we

01:01:07,830 --> 01:01:11,760
should treat that as content and try to

01:01:09,390 --> 01:01:15,780
figure out some different way to manage

01:01:11,760 --> 01:01:21,270
that the more configurate e taxonomy

01:01:15,780 --> 01:01:22,980
terms I mean it's it's hard because like

01:01:21,270 --> 01:01:25,290
once you start to let go okay we're

01:01:22,980 --> 01:01:27,710
gonna swap out taxonomy x' and try and

01:01:25,290 --> 01:01:30,180
like back them onto config entities

01:01:27,710 --> 01:01:32,190
you're you're going kind of off-piste

01:01:30,180 --> 01:01:34,230
with the way that the taxonomy czar

01:01:32,190 --> 01:01:36,330
designed to work so you might break like

01:01:34,230 --> 01:01:37,950
so you might say in six one time I want

01:01:36,330 --> 01:01:39,180
to use this a nice text on the access

01:01:37,950 --> 01:01:40,740
module and suddenly that's broken

01:01:39,180 --> 01:01:42,810
because it makes assumptions about

01:01:40,740 --> 01:01:45,089
taxonomy is that it can no longer make

01:01:42,810 --> 01:01:47,220
you've you've changed how they work so

01:01:45,089 --> 01:01:49,589
generally already devised trying to not

01:01:47,220 --> 01:01:51,210
do that so either consider like it is it

01:01:49,589 --> 01:01:52,650
really a taxonomy you want or is it just

01:01:51,210 --> 01:01:55,109
like a field with a list of options and

01:01:52,650 --> 01:01:56,280
then that's all configurable but if you

01:01:55,109 --> 01:01:57,780
really do want to act on this and you

01:01:56,280 --> 01:02:00,270
want to deploy it then it's like look at

01:01:57,780 --> 01:02:03,359
like modules like default content and

01:02:00,270 --> 01:02:05,339
and use that to like deploy to create

01:02:03,359 --> 01:02:07,050
create taxonomy terms when you're doing

01:02:05,339 --> 01:02:07,990
like module install or in your in your

01:02:07,050 --> 01:02:10,450
own sort over

01:02:07,990 --> 01:02:12,390
so yeah try and and hopefully in in

01:02:10,450 --> 01:02:15,940
Drupal 8 sometime we will get to explore

01:02:12,390 --> 01:02:18,610
the the the possibility of adding like

01:02:15,940 --> 01:02:21,640
content deployment or default content 2

01:02:18,610 --> 01:02:23,500
to 2 core because it's needed so it's a

01:02:21,640 --> 01:02:25,510
common problem I feel your pain and we

01:02:23,500 --> 01:02:27,130
haven't answered that question apart

01:02:25,510 --> 01:02:29,020
from the fact the only answer we've had

01:02:27,130 --> 01:02:31,420
is that our taxonomy is our content for

01:02:29,020 --> 01:02:33,310
for the use case that we've decided to

01:02:31,420 --> 01:02:36,220
solve in core I mean one thing that I've

01:02:33,310 --> 01:02:40,990
kind of thought up was just having in my

01:02:36,220 --> 01:02:45,570
own kind of taxonomy or term config

01:02:40,990 --> 01:02:45,570
entity what do you think about that

01:02:53,250 --> 01:02:57,520
seems like you're losing a lot at that

01:02:55,510 --> 01:02:59,860
yeah that's exactly what I was trying to

01:02:57,520 --> 01:03:01,630
say is like you then like block yourself

01:02:59,860 --> 01:03:03,160
from being able to use like taxonomy

01:03:01,630 --> 01:03:04,810
based modules in the future to solve

01:03:03,160 --> 01:03:05,920
that new use case that's like your

01:03:04,810 --> 01:03:08,470
highest priority because your clients

01:03:05,920 --> 01:03:09,640
going like I want this and and and

01:03:08,470 --> 01:03:11,020
you've got them country module that

01:03:09,640 --> 01:03:11,980
would solve it if you just not made that

01:03:11,020 --> 01:03:15,820
decision six months ago

01:03:11,980 --> 01:03:17,850
thank you okay well thank you all for

01:03:15,820 --> 01:03:17,850

YouTube URL: https://www.youtube.com/watch?v=F9E0jPwwu54


