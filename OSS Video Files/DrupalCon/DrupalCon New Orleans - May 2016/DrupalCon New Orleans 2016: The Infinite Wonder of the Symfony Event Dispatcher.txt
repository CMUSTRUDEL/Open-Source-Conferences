Title: DrupalCon New Orleans 2016: The Infinite Wonder of the Symfony Event Dispatcher
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	Drupla 8, and its Symfony core, open the doors to a wonderous world of options when it comes to customizing Drupal. Long dead are the copy and modify days of the Drupal of old. This is the time of the event dispatcher.

In this session, you will learn about the Symfony event dispatcher and how Drupal utilizes the event dispatcher in its request processing. The main focus will be on utilizing event subscribers to affect the behavior of Drupal with a small footprint and minimal development. Drupal 8 provides some amazing opportunities to inject customization into its core processes with minimal risk and side effects. The core of this ability lies with the Synfony event dispatcher. This session is intended for intermediate to advanced users wishing to modify the behavior of Drupal 8.
Captions: 
	00:10:46,860 --> 00:10:51,030
the microphone is very sensitive

00:10:54,040 --> 00:10:58,699
yeah I did that already I saw the the

00:10:56,839 --> 00:11:01,130
last guy came up here tried to use the

00:10:58,699 --> 00:11:06,709
Wi-Fi so I was like oh I will preload

00:11:01,130 --> 00:11:10,819
every page I am already there all right

00:11:06,709 --> 00:11:12,620
so it is officially 215 hi everybody I'm

00:11:10,819 --> 00:11:14,089
Adam Englander and i'm here to talk to

00:11:12,620 --> 00:11:15,550
you believe it or not about the infinite

00:11:14,089 --> 00:11:19,660
wonder of the symphony event dispatcher

00:11:15,550 --> 00:11:23,420
and it may sound like a flowery title

00:11:19,660 --> 00:11:26,240
but if your if your drupal are getting

00:11:23,420 --> 00:11:27,500
used to the symphony stuff i got used to

00:11:26,240 --> 00:11:28,819
symphony stuff the symphony to stuff

00:11:27,500 --> 00:11:31,910
when it first came out and it was really

00:11:28,819 --> 00:11:35,630
hard and really difficult but once i got

00:11:31,910 --> 00:11:39,529
it potential is endless on what you

00:11:35,630 --> 00:11:40,459
could do with it so so the first thing I

00:11:39,529 --> 00:11:42,889
want to try and figure out from

00:11:40,459 --> 00:11:44,180
everybody is why you're here so how many

00:11:42,889 --> 00:11:49,209
are dripper developers try to learn

00:11:44,180 --> 00:11:51,050
about the symphony nonsense right

00:11:49,209 --> 00:11:56,209
symphony developer trying to learn about

00:11:51,050 --> 00:12:00,290
Drupal okay okay PHP developer trying to

00:11:56,209 --> 00:12:03,579
learn about Drupal okay and you just saw

00:12:00,290 --> 00:12:07,189
vertical presentation title all right

00:12:03,579 --> 00:12:09,680
okay anybody here for none of the above

00:12:07,189 --> 00:12:14,720
all right all right honest man I

00:12:09,680 --> 00:12:20,480
appreciate that so this should be

00:12:14,720 --> 00:12:24,800
interesting for you dotnet C sharp or

00:12:20,480 --> 00:12:29,350
okay so it's not so terrible so how do

00:12:24,800 --> 00:12:33,230
we get here so how I got here is that I

00:12:29,350 --> 00:12:34,279
started PHP with PHP 3 didn't do a whole

00:12:33,230 --> 00:12:38,300
lot in it because you couldn't do a

00:12:34,279 --> 00:12:40,459
whole lot in it but then found Drupal

00:12:38,300 --> 00:12:42,829
I've been building web pages and

00:12:40,459 --> 00:12:46,130
websites for myself and my four people

00:12:42,829 --> 00:12:48,680
and I'm a terrible designer and I was

00:12:46,130 --> 00:12:50,509
terrible at HTML and I got sick and

00:12:48,680 --> 00:12:53,449
tired of constantly changing content for

00:12:50,509 --> 00:12:54,709
people and I found someone hooked me up

00:12:53,449 --> 00:12:56,000
with Drupal I was like this is amazing

00:12:54,709 --> 00:12:58,009
this is the most amazing thing I've ever

00:12:56,000 --> 00:12:59,569
seen I can stop doing content for these

00:12:58,009 --> 00:13:02,149
idiots who changed every 10 minutes all

00:12:59,569 --> 00:13:03,649
right I can put in a database put in the

00:13:02,149 --> 00:13:05,720
website not have to write a whole lot of

00:13:03,649 --> 00:13:06,529
code and customize a little bit all

00:13:05,720 --> 00:13:08,300
right

00:13:06,529 --> 00:13:10,850
so the way that you would customize

00:13:08,300 --> 00:13:13,160
Drupal in the long long ago alright as

00:13:10,850 --> 00:13:15,709
you would copy core or template code to

00:13:13,160 --> 00:13:18,199
your site code pack around it for what

00:13:15,709 --> 00:13:20,689
you needed beam with the pleasure of

00:13:18,199 --> 00:13:23,180
customizing Drupal break things

00:13:20,689 --> 00:13:25,279
unknowingly and only passion required

00:13:23,180 --> 00:13:29,180
because you change core code alright

00:13:25,279 --> 00:13:35,449
this is before time how many people

00:13:29,180 --> 00:13:38,019
remember those times quite a few then

00:13:35,449 --> 00:13:41,629
came Drupal five through seven right and

00:13:38,019 --> 00:13:44,389
you still kind of copy core to customize

00:13:41,629 --> 00:13:46,279
true core functionality but then hooks

00:13:44,389 --> 00:13:47,870
Kim about right it hooks are kind of

00:13:46,279 --> 00:13:49,430
cool so you can do things without having

00:13:47,870 --> 00:13:52,959
to go modify core code and you can make

00:13:49,430 --> 00:13:52,959
modules and all this kind of fun stuff

00:13:53,019 --> 00:13:59,360
use global functions to access

00:13:55,069 --> 00:14:02,180
everything and upgrade was fairly simple

00:13:59,360 --> 00:14:03,740
as long as the hooks or global functions

00:14:02,180 --> 00:14:05,509
didn't really change right so they

00:14:03,740 --> 00:14:07,850
didn't change how hook work to you were

00:14:05,509 --> 00:14:10,309
still cool but if they did then you had

00:14:07,850 --> 00:14:12,050
problems right how many people are in

00:14:10,309 --> 00:14:19,209
this boat probably most of you write

00:14:12,050 --> 00:14:19,209
Drupal 7 it must have it and unit tests

00:14:20,180 --> 00:14:26,610
you can kind of do it not too many boos

00:14:24,660 --> 00:14:30,030
but I actually also write wordpress

00:14:26,610 --> 00:14:31,410
plugins because I have to and it's all

00:14:30,030 --> 00:14:33,120
the same thing as global functions and

00:14:31,410 --> 00:14:34,500
you have to write like there's a way you

00:14:33,120 --> 00:14:35,850
can write unit tests and it's a terrible

00:14:34,500 --> 00:14:39,930
way to go about it but I did it I'm not

00:14:35,850 --> 00:14:42,750
proud of it but it works so Drupal 8

00:14:39,930 --> 00:14:46,140
with symphony how many people have used

00:14:42,750 --> 00:14:48,330
Drupal 8 and actual project okay okay

00:14:46,140 --> 00:14:49,890
that's not bad how many people would

00:14:48,330 --> 00:14:55,080
love to but it's too hard to figure out

00:14:49,890 --> 00:14:57,930
at this point okay so it's not a whole

00:14:55,080 --> 00:14:59,280
lot different but it uses event

00:14:57,930 --> 00:15:02,940
subscribers for hooks which is what this

00:14:59,280 --> 00:15:04,710
whole talk is about right it uses

00:15:02,940 --> 00:15:06,330
dependency injection four core services

00:15:04,710 --> 00:15:10,740
so you're not using those global

00:15:06,330 --> 00:15:13,380
functions anymore it uses portable code

00:15:10,740 --> 00:15:15,450
in an open ecosystem all right it allows

00:15:13,380 --> 00:15:16,740
you through all the composer stuff the

00:15:15,450 --> 00:15:21,420
dependency injection talk from the last

00:15:16,740 --> 00:15:22,620
guy I Sweeney is that you can use code

00:15:21,420 --> 00:15:24,780
from somewhere else you don't have to

00:15:22,620 --> 00:15:26,280
write everything yourself one of the

00:15:24,780 --> 00:15:28,920
hardest problems that I have with PHP

00:15:26,280 --> 00:15:30,600
before the Revolution started with

00:15:28,920 --> 00:15:32,280
composer is that you had to write

00:15:30,600 --> 00:15:34,050
everything yourself because people were

00:15:32,280 --> 00:15:35,340
not writing good portable code because I

00:15:34,050 --> 00:15:37,320
didn't need to because nobody else used

00:15:35,340 --> 00:15:40,710
it right you would use pear and it was

00:15:37,320 --> 00:15:42,930
terrible it was horrible but that's

00:15:40,710 --> 00:15:43,950
changed right and Drupal has changed for

00:15:42,930 --> 00:15:45,150
it and what you're going to be able to

00:15:43,950 --> 00:15:46,500
do is you're gonna be able to oh I don't

00:15:45,150 --> 00:15:47,880
have to go write a male model use

00:15:46,500 --> 00:15:49,770
somebody's terrible male module I can

00:15:47,880 --> 00:15:51,060
just go use somebody else's stuff stick

00:15:49,770 --> 00:15:53,100
it in there with a dependency injection

00:15:51,060 --> 00:15:56,610
container and get it running which is

00:15:53,100 --> 00:15:59,550
awesome and the other big thing is that

00:15:56,610 --> 00:16:01,710
it is fully unit testable fully unit

00:15:59,550 --> 00:16:03,300
testable all right if you use the

00:16:01,710 --> 00:16:08,130
dependency injection stuff from the last

00:16:03,300 --> 00:16:09,720
talked you'll be able to understand how

00:16:08,130 --> 00:16:13,280
easy it is to test how many people write

00:16:09,720 --> 00:16:16,440
unit tests all right all right all right

00:16:13,280 --> 00:16:18,000
and those of you who don't is probably

00:16:16,440 --> 00:16:19,800
because it's hard and doesn't make a lot

00:16:18,000 --> 00:16:21,240
of sense because it's really hard if

00:16:19,800 --> 00:16:24,180
your module developers any module

00:16:21,240 --> 00:16:25,680
developers okay so in writing your

00:16:24,180 --> 00:16:27,390
modules right it's super hard to find

00:16:25,680 --> 00:16:29,280
out when stuff breaks because everything

00:16:27,390 --> 00:16:30,520
is a global function and how do you mock

00:16:29,280 --> 00:16:32,770
the little function

00:16:30,520 --> 00:16:36,760
tell it's a bad person but that doesn't

00:16:32,770 --> 00:16:38,230
help so when you're actually using

00:16:36,760 --> 00:16:40,240
dependency injection and you're using

00:16:38,230 --> 00:16:42,070
all this stuff it allows for full unit

00:16:40,240 --> 00:16:45,100
testable and one of the nice things

00:16:42,070 --> 00:16:46,180
about its as you can also upgrade it

00:16:45,100 --> 00:16:48,280
will because you know things aren't

00:16:46,180 --> 00:16:51,640
going to break right when you're hooking

00:16:48,280 --> 00:16:53,410
into with the dependency injection

00:16:51,640 --> 00:16:55,930
container you're just kind of grabbing

00:16:53,410 --> 00:16:58,900
stuff that's in there and using it and

00:16:55,930 --> 00:17:00,910
since Drupal is using interfaces now

00:16:58,900 --> 00:17:02,560
they can't really change that right they

00:17:00,910 --> 00:17:03,850
can't change how that works just kind of

00:17:02,560 --> 00:17:05,770
willy nilly because it's a function they

00:17:03,850 --> 00:17:07,030
can do whatever they want right now it's

00:17:05,770 --> 00:17:08,350
an interface and there's a contract

00:17:07,030 --> 00:17:09,640
there that says this is what it is and

00:17:08,350 --> 00:17:12,880
this is what it does and this is how you

00:17:09,640 --> 00:17:13,959
call it so you'll know very quickly when

00:17:12,880 --> 00:17:15,339
stuff doesn't work because you'll try to

00:17:13,959 --> 00:17:18,520
access a function that doesn't exist not

00:17:15,339 --> 00:17:20,709
why isn't it calling my callback why is

00:17:18,520 --> 00:17:27,040
my hook not running why is my hook

00:17:20,709 --> 00:17:30,850
broken it's a big difference so why do

00:17:27,040 --> 00:17:33,610
you want to use an event dispatcher is

00:17:30,850 --> 00:17:37,270
anyone here familiar with the concept of

00:17:33,610 --> 00:17:46,240
a design pattern called pubzone few be

00:17:37,270 --> 00:17:47,800
ok done that guy really ok so when you

00:17:46,240 --> 00:17:49,690
want to use an event subscriber you want

00:17:47,800 --> 00:17:56,490
to use it because it creates highly

00:17:49,690 --> 00:17:58,600
modular code bilji modules this type of

00:17:56,490 --> 00:18:03,310
build models and templates like building

00:17:58,600 --> 00:18:05,860
blocks all right once again reusable

00:18:03,310 --> 00:18:07,480
code and open e pin ecosystem and probe

00:18:05,860 --> 00:18:10,210
in libraries inside the Drupal ecosystem

00:18:07,480 --> 00:18:13,390
and so what you're doing here is you're

00:18:10,210 --> 00:18:14,890
actually listening for event so the old

00:18:13,390 --> 00:18:16,660
world was a hook right you get a hook it

00:18:14,890 --> 00:18:19,720
does something you do a couple things

00:18:16,660 --> 00:18:22,030
Nick oh yeah it goes out the one thing

00:18:19,720 --> 00:18:24,160
that you really didn't do and I mean I

00:18:22,030 --> 00:18:26,530
haven't seen a whole lot of it is nobody

00:18:24,160 --> 00:18:28,480
really hooks into the hook system right

00:18:26,530 --> 00:18:31,600
from your own module to call your own

00:18:28,480 --> 00:18:32,650
hook how does someone knows they can do

00:18:31,600 --> 00:18:36,060
that right how does someone know where

00:18:32,650 --> 00:18:38,770
to do that to hook into your stuff and

00:18:36,060 --> 00:18:39,950
modular code creates highly testable

00:18:38,770 --> 00:18:41,750
code at the unit level

00:18:39,950 --> 00:18:44,389
I think it's kind of just repeat what we

00:18:41,750 --> 00:18:46,940
talked about it's going to allow you to

00:18:44,389 --> 00:18:49,960
do decouple code and highly the couple

00:18:46,940 --> 00:18:53,090
code is part of an event manager right

00:18:49,960 --> 00:18:56,480
in the Drupal stuff you're injecting

00:18:53,090 --> 00:18:58,070
services in the connection container and

00:18:56,480 --> 00:18:59,539
it doesn't require you to no knowledge

00:18:58,070 --> 00:19:02,330
of the core systems you don't have to

00:18:59,539 --> 00:19:04,639
instantiate an object right you don't

00:19:02,330 --> 00:19:06,049
have to do use the new keyword right to

00:19:04,639 --> 00:19:07,399
build something and know how to build it

00:19:06,049 --> 00:19:10,610
you don't have to you just have to know

00:19:07,399 --> 00:19:13,789
oh it's got this function i need so i

00:19:10,610 --> 00:19:15,409
need to call it and it allows for a

00:19:13,789 --> 00:19:17,779
mix-and-match of components providing

00:19:15,409 --> 00:19:21,529
services based on events and that's the

00:19:17,779 --> 00:19:23,269
big thing events so if there's something

00:19:21,529 --> 00:19:26,659
that you wanted to jam at a Drupal core

00:19:23,269 --> 00:19:28,399
how would you know where to do it right

00:19:26,659 --> 00:19:31,220
the example of liberal i'm going to show

00:19:28,399 --> 00:19:35,659
you in a bit actually stops it before it

00:19:31,220 --> 00:19:37,010
processes anything all right and i don't

00:19:35,659 --> 00:19:38,840
have to know where that's going on a

00:19:37,010 --> 00:19:40,610
Drupal core or I don't have to know what

00:19:38,840 --> 00:19:42,620
piece I have to copy out and change and

00:19:40,610 --> 00:19:44,510
replace inside of Drupal core to do this

00:19:42,620 --> 00:19:48,200
what i can do is i can listen for an

00:19:44,510 --> 00:19:49,820
event all you need to know is that event

00:19:48,200 --> 00:19:52,399
and what i can do with the structure

00:19:49,820 --> 00:19:55,730
that event and so that's the huge power

00:19:52,399 --> 00:19:58,190
there and that i can register an event

00:19:55,730 --> 00:20:01,010
i'm going to get an object back similar

00:19:58,190 --> 00:20:02,029
to a hook but the difference when the

00:20:01,010 --> 00:20:04,429
hook is is that i'm going to actually

00:20:02,029 --> 00:20:06,769
get an object that i can deal with it's

00:20:04,429 --> 00:20:08,630
very very specific about what it can do

00:20:06,769 --> 00:20:11,059
i'm gonna be able to make changes or

00:20:08,630 --> 00:20:13,399
pull data out so one of the big things

00:20:11,059 --> 00:20:14,510
is a lot of the events in there are the

00:20:13,399 --> 00:20:16,100
same thing with the hooks with the node

00:20:14,510 --> 00:20:18,230
events and things like that or you're

00:20:16,100 --> 00:20:20,000
going to be able to modify a note as it

00:20:18,230 --> 00:20:22,370
comes through that's a little powerful

00:20:20,000 --> 00:20:25,580
but the other thing that you can do that

00:20:22,370 --> 00:20:28,970
i do inside of my modules is that you

00:20:25,580 --> 00:20:33,440
can now trigger events so i can put that

00:20:28,970 --> 00:20:34,490
event handler inside of my module and i

00:20:33,440 --> 00:20:36,409
can trigger an event that i did

00:20:34,490 --> 00:20:38,779
something and so if you care about it

00:20:36,409 --> 00:20:40,490
you could do something about that too so

00:20:38,779 --> 00:20:41,960
it allows you to have all these

00:20:40,490 --> 00:20:43,850
different modules that can talk to each

00:20:41,960 --> 00:20:44,840
other through kind of a single standard

00:20:43,850 --> 00:20:46,039
interface without having to know

00:20:44,840 --> 00:20:47,630
anything about each other or whether

00:20:46,039 --> 00:20:50,570
they're installed or not is you're

00:20:47,630 --> 00:20:52,980
basically just saying hey I'm module a I

00:20:50,570 --> 00:20:54,750
did this you might care

00:20:52,980 --> 00:20:56,280
you might not but I'm going to like I'm

00:20:54,750 --> 00:20:57,419
going to tell the world that I did it so

00:20:56,280 --> 00:20:59,669
they can do something about if they want

00:20:57,419 --> 00:21:02,360
to which is allowing you to act like

00:20:59,669 --> 00:21:05,580
Drupal core right you can go and just

00:21:02,360 --> 00:21:07,950
make your make your themes extensible so

00:21:05,580 --> 00:21:09,330
if you have a very popular module people

00:21:07,950 --> 00:21:11,340
don't have to contribute all into your

00:21:09,330 --> 00:21:13,020
module and add functionality they can

00:21:11,340 --> 00:21:14,940
just make a module that uses your module

00:21:13,020 --> 00:21:16,290
and says oh I'm going to listen to your

00:21:14,940 --> 00:21:17,850
modules event and I'm going to do this

00:21:16,290 --> 00:21:19,559
other super special thing that you know

00:21:17,850 --> 00:21:21,330
one tenth of the population cares about

00:21:19,559 --> 00:21:24,000
instead of having to slam it all into

00:21:21,330 --> 00:21:25,710
one giant monolithic module it allows

00:21:24,000 --> 00:21:27,600
you to build modules like building

00:21:25,710 --> 00:21:29,130
blocks so you can say I don't care about

00:21:27,600 --> 00:21:30,450
that functionality I won't know I don't

00:21:29,130 --> 00:21:31,770
want all that extra junk I don't want

00:21:30,450 --> 00:21:34,230
the database hits I don't want the

00:21:31,770 --> 00:21:36,059
external calls all I really want is the

00:21:34,230 --> 00:21:38,309
core piece but I might want this other

00:21:36,059 --> 00:21:39,900
thing so you can install one module and

00:21:38,309 --> 00:21:41,490
install a module based on that module

00:21:39,900 --> 00:21:43,679
that's going to listen for events and

00:21:41,490 --> 00:21:45,750
basically you're creating your own cook

00:21:43,679 --> 00:21:47,549
system but you're using the embedded

00:21:45,750 --> 00:21:50,850
internal system to do that which is

00:21:47,549 --> 00:21:52,760
pretty sweet and that's how you do like

00:21:50,850 --> 00:21:56,070
the mixing and matching of components

00:21:52,760 --> 00:21:59,549
and it allows for highly extensible code

00:21:56,070 --> 00:22:02,730
so like I was just talking about you can

00:21:59,549 --> 00:22:04,919
take something very core a very simple

00:22:02,730 --> 00:22:06,960
module that is listening to very

00:22:04,919 --> 00:22:09,630
specific events and doing something and

00:22:06,960 --> 00:22:11,669
saying hey I've done this do you care if

00:22:09,630 --> 00:22:13,950
you do do something about it and so you

00:22:11,669 --> 00:22:17,280
can just build on top of each other

00:22:13,950 --> 00:22:19,410
without having to basically extend

00:22:17,280 --> 00:22:20,490
somebody else's module all right it's

00:22:19,410 --> 00:22:22,260
the way you do it now is you kind of

00:22:20,490 --> 00:22:24,419
extend their module or just copy their

00:22:22,260 --> 00:22:26,669
stuff into your stuff or do whatever you

00:22:24,419 --> 00:22:29,850
do to as somebody's functionality to

00:22:26,669 --> 00:22:31,530
your code and with the way that you do

00:22:29,850 --> 00:22:33,929
with events and event-driven development

00:22:31,530 --> 00:22:37,350
is you don't have to do that if someone

00:22:33,929 --> 00:22:38,910
writes their their module well they can

00:22:37,350 --> 00:22:40,950
just trigger an event and hopefully

00:22:38,910 --> 00:22:42,419
you're always triggering events right

00:22:40,950 --> 00:22:44,730
the two things that you can do super

00:22:42,419 --> 00:22:47,730
easy doesn't cost you anything but gives

00:22:44,730 --> 00:22:50,940
you a lot is to log everything and turn

00:22:47,730 --> 00:22:52,710
our event for everything one of things i

00:22:50,940 --> 00:22:53,970
do constantly is I'm doing I have debug

00:22:52,710 --> 00:22:56,610
logs right you can inject the logger

00:22:53,970 --> 00:22:58,910
super easy and just debug log debug log

00:22:56,610 --> 00:23:01,020
do the log debug log so I don't have to

00:22:58,910 --> 00:23:02,490
write print statements when something's

00:23:01,020 --> 00:23:05,070
going wrong I can go look at the Drupal

00:23:02,490 --> 00:23:06,360
logs and say hey what happened which I

00:23:05,070 --> 00:23:06,750
actually had to do for my test thing

00:23:06,360 --> 00:23:07,980
because I could

00:23:06,750 --> 00:23:11,750
figure out was wrong because I had a bug

00:23:07,980 --> 00:23:15,990
in my code that i missed in the tests

00:23:11,750 --> 00:23:19,340
logic can be extracted to services so in

00:23:15,990 --> 00:23:24,360
a hook everything exists in that hook

00:23:19,340 --> 00:23:25,920
and it's a function and it has access to

00:23:24,360 --> 00:23:28,830
what it has in the function right so

00:23:25,920 --> 00:23:31,380
it's this big kind of junk chunk that

00:23:28,830 --> 00:23:33,300
has to do everything by itself when

00:23:31,380 --> 00:23:34,680
you're using the event manager you're

00:23:33,300 --> 00:23:36,120
getting an event that's being called and

00:23:34,680 --> 00:23:38,790
it's calling a service as registered

00:23:36,120 --> 00:23:40,080
inside the injection container so I've

00:23:38,790 --> 00:23:41,970
got all the things that I need that are

00:23:40,080 --> 00:23:44,490
inside of there and I've got it already

00:23:41,970 --> 00:23:46,770
pre-built and it's pre cached it's super

00:23:44,490 --> 00:23:50,490
fast and I can do whatever I need to do

00:23:46,770 --> 00:23:52,560
as well as using things that other

00:23:50,490 --> 00:23:54,720
people wrote right I can inject the

00:23:52,560 --> 00:23:55,710
logger I didn't have to write a logger I

00:23:54,720 --> 00:23:58,260
don't have to know if it's going to work

00:23:55,710 --> 00:24:00,000
if I do error log or if I do a print

00:23:58,260 --> 00:24:02,130
statement what's going to happen I don't

00:24:00,000 --> 00:24:03,390
have to figure that stuff out I can

00:24:02,130 --> 00:24:05,070
inject all that stuff and I know it

00:24:03,390 --> 00:24:09,360
works and I can test I'm actually doing

00:24:05,070 --> 00:24:10,740
the longer they should be doing and your

00:24:09,360 --> 00:24:11,760
logic can be extracted outside the

00:24:10,740 --> 00:24:15,180
Drupal environment if you write

00:24:11,760 --> 00:24:17,580
something super cool for Drupal nobody

00:24:15,180 --> 00:24:19,560
else can use it right because it kind of

00:24:17,580 --> 00:24:23,160
works inside of Drupal that's really all

00:24:19,560 --> 00:24:24,660
that it does what you can do now is you

00:24:23,160 --> 00:24:26,400
can go o people really like this

00:24:24,660 --> 00:24:28,800
functionality the Drupal world really

00:24:26,400 --> 00:24:31,050
loves it and I'm I'm making some money

00:24:28,800 --> 00:24:32,580
off of this or some notoriety why don't

00:24:31,050 --> 00:24:35,100
I take it and I poured it to WordPress

00:24:32,580 --> 00:24:38,340
or I part it to symphony or I poured it

00:24:35,100 --> 00:24:39,840
too laravel or cake or whatever you

00:24:38,340 --> 00:24:42,000
might want to do some other framework

00:24:39,840 --> 00:24:44,910
that might use it magento all right

00:24:42,000 --> 00:24:46,320
anything that's using the symphony core

00:24:44,910 --> 00:24:49,680
you can throw cake out because it

00:24:46,320 --> 00:24:52,200
doesn't do that but you can use that

00:24:49,680 --> 00:24:53,460
same event model or you can package up

00:24:52,200 --> 00:24:54,900
your code and split it out so that

00:24:53,460 --> 00:24:59,190
you're using it inside of your things

00:24:54,900 --> 00:25:02,430
that are doing the hooks right sorry

00:24:59,190 --> 00:25:03,630
Holly's have to check time services can

00:25:02,430 --> 00:25:05,340
register and trigger their own

00:25:03,630 --> 00:25:06,450
investment extensibility right that's

00:25:05,340 --> 00:25:08,370
we're talking about is you got this

00:25:06,450 --> 00:25:10,350
service it's listening two hooks it's

00:25:08,370 --> 00:25:12,170
doing things it's got these events it's

00:25:10,350 --> 00:25:14,520
interacting student whatever it does

00:25:12,170 --> 00:25:16,410
interacting with the core but it's also

00:25:14,520 --> 00:25:18,050
allowing other modules to interact with

00:25:16,410 --> 00:25:20,150
it or other custom cut

00:25:18,050 --> 00:25:21,620
to interact with that so that you might

00:25:20,150 --> 00:25:23,420
want to send an email every time this

00:25:21,620 --> 00:25:25,040
thing happens or pop up something on an

00:25:23,420 --> 00:25:26,210
admin or stick it in a log or do

00:25:25,040 --> 00:25:28,220
whatever you know whatever you feel like

00:25:26,210 --> 00:25:33,770
create a custom note or do something

00:25:28,220 --> 00:25:35,960
crazy so up to this point are there any

00:25:33,770 --> 00:25:43,190
questions before we get into the crazy

00:25:35,960 --> 00:25:45,170
stuff yeah yes so you can create cut so

00:25:43,190 --> 00:25:46,520
the question is can you create custom

00:25:45,170 --> 00:25:49,450
events can you trigger your own events

00:25:46,520 --> 00:25:53,540
absolutely so in the event dispatcher

00:25:49,450 --> 00:25:55,610
all you do is you give it an event name

00:25:53,540 --> 00:25:57,590
you say trigger event and you give it a

00:25:55,610 --> 00:25:58,850
name and that needs to be unique

00:25:57,590 --> 00:26:00,290
otherwise people are listening the wrong

00:25:58,850 --> 00:26:03,560
stuff but usually you prepend it with

00:26:00,290 --> 00:26:05,570
your your module name dot something so

00:26:03,560 --> 00:26:06,770
you know what type of end of this a lot

00:26:05,570 --> 00:26:08,210
of times you'll see using class

00:26:06,770 --> 00:26:09,740
constants for that so that other people

00:26:08,210 --> 00:26:12,890
can know what it is without having to

00:26:09,740 --> 00:26:15,230
look at your dogs and then you just pass

00:26:12,890 --> 00:26:16,400
something that implements the event so

00:26:15,230 --> 00:26:18,830
if you need to pass along another object

00:26:16,400 --> 00:26:21,110
you extend event with another object and

00:26:18,830 --> 00:26:23,090
it has accessors for these other pieces

00:26:21,110 --> 00:26:24,590
I'll have a there's a demonstration that

00:26:23,090 --> 00:26:26,530
will show you how you do that to some

00:26:24,590 --> 00:26:30,380
extent at least access the other pieces

00:26:26,530 --> 00:26:31,220
that's your question yeah so and the

00:26:30,380 --> 00:26:33,560
whole thing is is you can do whatever

00:26:31,220 --> 00:26:35,420
you want right all you have to do is

00:26:33,560 --> 00:26:38,240
call the event dispatcher with a name

00:26:35,420 --> 00:26:41,900
that's unique and an object that extends

00:26:38,240 --> 00:26:44,860
event that's it any other questions

00:26:41,900 --> 00:26:44,860
source yeah

00:26:49,370 --> 00:26:54,960
yes it's nearly identical yeah as

00:26:52,470 --> 00:26:56,279
pub/sub its standard pub/sub what you'll

00:26:54,960 --> 00:27:00,029
find if you're a Java developer you'll

00:26:56,279 --> 00:27:02,070
find that symphony is a lot like Java so

00:27:00,029 --> 00:27:04,309
the symphony dependency injection

00:27:02,070 --> 00:27:08,460
container is very similar to spring

00:27:04,309 --> 00:27:09,960
spring dependency injection and so like

00:27:08,460 --> 00:27:11,640
I was a Java developer for a while

00:27:09,960 --> 00:27:13,020
before I came in to symphony and I was

00:27:11,640 --> 00:27:15,600
it made us like wow this makes so much

00:27:13,020 --> 00:27:19,590
sense I told to get this PHP developers

00:27:15,600 --> 00:27:22,440
like whoa huh it is very different it is

00:27:19,590 --> 00:27:24,179
very different right it's using some of

00:27:22,440 --> 00:27:25,799
the one of the things I really like

00:27:24,179 --> 00:27:29,640
about symphony is that they took a lot

00:27:25,799 --> 00:27:32,010
of things from a lot of languages that

00:27:29,640 --> 00:27:35,760
aren't PHP and said this is really

00:27:32,010 --> 00:27:37,590
popular let's port it to PHP all right

00:27:35,760 --> 00:27:39,240
dependency injection container was

00:27:37,590 --> 00:27:42,059
probably the first one I'd ever seen in

00:27:39,240 --> 00:27:45,210
PHP before that everything was using

00:27:42,059 --> 00:27:48,899
static methods right then use their

00:27:45,210 --> 00:27:50,760
static methods for their repository

00:27:48,899 --> 00:27:52,440
pattern and all this kind of crazy stuff

00:27:50,760 --> 00:27:54,120
for this is literally kind of building

00:27:52,440 --> 00:27:55,500
at all and it even does a compiler pass

00:27:54,120 --> 00:27:57,720
where it actually takes all of these

00:27:55,500 --> 00:27:59,159
things which is by the way when you do

00:27:57,720 --> 00:28:02,299
this development always remember to run

00:27:59,159 --> 00:28:04,140
up a PHP or whatever you're using to

00:28:02,299 --> 00:28:06,720
basically reload your whole system

00:28:04,140 --> 00:28:08,940
because it compiles it all down to one

00:28:06,720 --> 00:28:11,789
giant file your dependency injection

00:28:08,940 --> 00:28:13,200
container becomes one giant file that

00:28:11,789 --> 00:28:14,580
has all of your classes in it and all

00:28:13,200 --> 00:28:16,950
that stuff so it just slows one page

00:28:14,580 --> 00:28:18,539
gets cached one time so that's what

00:28:16,950 --> 00:28:19,890
makes it super fast but it also means

00:28:18,539 --> 00:28:21,779
that you have to reload it when you make

00:28:19,890 --> 00:28:25,320
changes I discovered that when I was

00:28:21,779 --> 00:28:26,549
developing I know how to do it in

00:28:25,320 --> 00:28:28,890
symphony I didn't know how to do it

00:28:26,549 --> 00:28:30,960
inside of Drupal and update PHP does

00:28:28,890 --> 00:28:32,909
that it also does it whenever you

00:28:30,960 --> 00:28:34,590
install a module it reloads all that

00:28:32,909 --> 00:28:35,940
which kind of makes sense because your

00:28:34,590 --> 00:28:39,210
modules are using the container and it's

00:28:35,940 --> 00:28:43,289
got to rebuild everything so how to use

00:28:39,210 --> 00:28:45,750
the event dispatcher so here's an

00:28:43,289 --> 00:28:48,720
oversimplified overview on how to use

00:28:45,750 --> 00:28:52,140
the event dispatcher you create a

00:28:48,720 --> 00:28:55,139
service in your module that implements

00:28:52,140 --> 00:28:57,210
the event subscriber interface there's

00:28:55,139 --> 00:29:00,029
all the Drupal docs have this it's

00:28:57,210 --> 00:29:01,830
nothing super super surprising

00:29:00,029 --> 00:29:08,159
the event subscriber interface basically

00:29:01,830 --> 00:29:10,549
is just one method that is get

00:29:08,159 --> 00:29:12,960
subscribed events any return an array

00:29:10,549 --> 00:29:14,549
you write handlers for those events in

00:29:12,960 --> 00:29:17,519
your service so the way that event

00:29:14,549 --> 00:29:20,009
subscribers work is that it's going to

00:29:17,519 --> 00:29:21,809
be the object that you're going to use

00:29:20,009 --> 00:29:27,389
needs to have the methods and you just

00:29:21,809 --> 00:29:29,099
tell it what method it is and then to

00:29:27,389 --> 00:29:31,289
get subscribed events method you return

00:29:29,099 --> 00:29:35,070
a list of handled events right so it's

00:29:31,289 --> 00:29:37,169
an array key value the value can just be

00:29:35,070 --> 00:29:39,299
a string or the value can be an array if

00:29:37,169 --> 00:29:41,309
you want to basically tell it what order

00:29:39,299 --> 00:29:44,279
you want it to be in because you can

00:29:41,309 --> 00:29:45,869
specify priority for events that oh I

00:29:44,279 --> 00:29:51,029
need to fire before this other things so

00:29:45,869 --> 00:29:54,059
give me a higher priority and then

00:29:51,029 --> 00:29:56,129
register the service with a tag event

00:29:54,059 --> 00:29:59,690
subscriber in your services yeah mph or

00:29:56,129 --> 00:30:02,580
your module that's it it's all it takes

00:29:59,690 --> 00:30:03,809
and you are listening to events that

00:30:02,580 --> 00:30:05,460
you've registered for and it's going to

00:30:03,809 --> 00:30:08,450
call a function just like registering

00:30:05,460 --> 00:30:12,179
for the hooks right same process

00:30:08,450 --> 00:30:13,649
although it's not in code right some of

00:30:12,179 --> 00:30:15,299
its in code but it's not just I'm going

00:30:13,649 --> 00:30:17,009
to on the load you know when I'm

00:30:15,299 --> 00:30:19,200
bootstrapping my module I'm telling it

00:30:17,009 --> 00:30:20,789
here's the events I care about call

00:30:19,200 --> 00:30:24,719
these functions for these hooks right

00:30:20,789 --> 00:30:29,070
it's very similar but it's a little

00:30:24,719 --> 00:30:31,080
cleaner and it's a lot easier to test so

00:30:29,070 --> 00:30:34,529
in my opinion example is worth a

00:30:31,080 --> 00:30:40,619
thousand slides there's an example that

00:30:34,529 --> 00:30:44,239
I have up on github which I have here so

00:30:40,619 --> 00:30:44,239
i created a drupal module

00:30:45,120 --> 00:30:51,380
that basically what it does is it goes

00:30:48,390 --> 00:30:55,410
and gets an event it registers for the

00:30:51,380 --> 00:30:56,550
get response event on the colonel and if

00:30:55,410 --> 00:30:59,910
you don't know what the colonel is that

00:30:56,550 --> 00:31:02,610
is the very core of symphony that says

00:30:59,910 --> 00:31:04,770
oh I got an HTTP request I'm going to

00:31:02,610 --> 00:31:06,510
turn it into an object and then i'm

00:31:04,770 --> 00:31:09,240
going to call an event that says get me

00:31:06,510 --> 00:31:11,700
a response to this request and that's

00:31:09,240 --> 00:31:13,650
how all of symphony is event-based right

00:31:11,700 --> 00:31:15,630
every piece of it is event base from the

00:31:13,650 --> 00:31:16,890
colonel down i can say every piece of

00:31:15,630 --> 00:31:20,100
symphony cuz symphony is bigger than

00:31:16,890 --> 00:31:22,350
just the colonel but inside of drupal

00:31:20,100 --> 00:31:24,780
it's going to basically say you have the

00:31:22,350 --> 00:31:27,179
the colonel it's going to say hey i need

00:31:24,780 --> 00:31:30,450
a response to this request get me a

00:31:27,179 --> 00:31:34,080
response here's the request and it goes

00:31:30,450 --> 00:31:36,330
on and it's basically a blacklist right

00:31:34,080 --> 00:31:38,490
so it says is the IP and the whitelist

00:31:36,330 --> 00:31:42,210
no tell them they can't they're

00:31:38,490 --> 00:31:43,770
unauthorized right I have no idea how

00:31:42,210 --> 00:31:46,590
you would do that Drupal core I figure

00:31:43,770 --> 00:31:51,540
out how to do it using the event manager

00:31:46,590 --> 00:31:52,860
in like ten minutes and I know that

00:31:51,540 --> 00:31:54,480
there are a lot of security plugins

00:31:52,860 --> 00:31:57,179
right so you can jack right at

00:31:54,480 --> 00:31:59,850
everything and be fairly safe that

00:31:57,179 --> 00:32:01,290
you're not rewriting a bunch of core to

00:31:59,850 --> 00:32:03,150
write a security plug-in you can

00:32:01,290 --> 00:32:04,559
actually just get the request before

00:32:03,150 --> 00:32:07,530
everything else and do what you want to

00:32:04,559 --> 00:32:09,679
do with it and there's basically four

00:32:07,530 --> 00:32:13,440
files coming to read that by the way

00:32:09,679 --> 00:32:15,420
yeah yeah okay and there's four files so

00:32:13,440 --> 00:32:17,520
i have a black list service and this is

00:32:15,420 --> 00:32:20,010
my separate service that performs all of

00:32:17,520 --> 00:32:23,520
the functionality i have an event

00:32:20,010 --> 00:32:28,559
subscriber which is the piece that is

00:32:23,520 --> 00:32:30,809
going to tell drupal symphony i want to

00:32:28,559 --> 00:32:32,370
listen to this event it's going to get

00:32:30,809 --> 00:32:34,530
the request and then it's going to call

00:32:32,370 --> 00:32:37,230
the service and see if it's one of the

00:32:34,530 --> 00:32:41,700
the pieces are there and it's separating

00:32:37,230 --> 00:32:43,230
the functionality in that the the event

00:32:41,700 --> 00:32:44,940
subscriber is handling all the drupal

00:32:43,230 --> 00:32:46,110
type stuff like get me there or Drupal

00:32:44,940 --> 00:32:48,780
or symphony type stuff get me the

00:32:46,110 --> 00:32:50,160
request get me the IP address then it

00:32:48,780 --> 00:32:52,380
calls the service and says hey is this

00:32:50,160 --> 00:32:55,740
IP address blocked all right so it's

00:32:52,380 --> 00:32:57,210
abstract analogies it's not specific to

00:32:55,740 --> 00:32:57,980
determine what the blacklist is to

00:32:57,210 --> 00:32:59,360
another service

00:32:57,980 --> 00:33:02,720
instead of how to do that all in one

00:32:59,360 --> 00:33:11,960
giant function or other global functions

00:33:02,720 --> 00:33:14,120
inside of a hook and so it also has it

00:33:11,960 --> 00:33:16,130
also has the services yellow file which

00:33:14,120 --> 00:33:17,900
if you're doing Drupal 8 you'll module

00:33:16,130 --> 00:33:20,470
building you'll get very familiar with

00:33:17,900 --> 00:33:25,040
it it's a little overwhelming at first

00:33:20,470 --> 00:33:27,470
having to write all this nonsense but

00:33:25,040 --> 00:33:29,750
once you understand it it's a little

00:33:27,470 --> 00:33:32,059
easier and if you use the symphony

00:33:29,750 --> 00:33:35,480
documentation it's there's a lot of

00:33:32,059 --> 00:33:38,450
documentation right Ryan who may or may

00:33:35,480 --> 00:33:40,490
not be here but he's speaking next he

00:33:38,450 --> 00:33:42,559
wrote most of documentation for symphony

00:33:40,490 --> 00:33:44,630
and it's fantastic there's a lot of

00:33:42,559 --> 00:33:46,429
documentation for symphony and its

00:33:44,630 --> 00:33:48,860
really good examples on how to do this

00:33:46,429 --> 00:33:52,390
examples on how to do that it makes a

00:33:48,860 --> 00:33:55,760
lot of sense and then there's the

00:33:52,390 --> 00:33:58,280
ever-popular info demo for the the file

00:33:55,760 --> 00:34:02,240
right so we all know the info de animal

00:33:58,280 --> 00:34:06,020
has basically nothing in it it just says

00:34:02,240 --> 00:34:08,840
hi this is my module it's a custom

00:34:06,020 --> 00:34:11,750
package and it needs you know core eight

00:34:08,840 --> 00:34:17,600
or better and order my configuration

00:34:11,750 --> 00:34:20,260
settings this is the services file this

00:34:17,600 --> 00:34:25,700
can be confusing can everybody see that

00:34:20,260 --> 00:34:27,830
now bigger better okay now so basically

00:34:25,700 --> 00:34:29,030
for this talk I couldn't figure out how

00:34:27,830 --> 00:34:32,060
to get the configuration stuff to work

00:34:29,030 --> 00:34:33,500
inside the container so I'm setting a

00:34:32,060 --> 00:34:37,210
parameter which is hard coding the

00:34:33,500 --> 00:34:39,950
addresses that are white listed and then

00:34:37,210 --> 00:34:43,550
I'm setting up my services so I have a

00:34:39,950 --> 00:34:44,780
blacklist service that is the thing

00:34:43,550 --> 00:34:48,859
that's determining if you're blacklisted

00:34:44,780 --> 00:34:52,460
and it gets the whitelist right so it's

00:34:48,859 --> 00:34:55,159
just saying hang build this build this

00:34:52,460 --> 00:34:56,840
service here's the pieces that it needs

00:34:55,159 --> 00:35:00,740
which is the number of the IPS or white

00:34:56,840 --> 00:35:02,180
listed and then we have I wanted to like

00:35:00,740 --> 00:35:03,410
I said I log everything so I can Farrah

00:35:02,180 --> 00:35:05,240
what's going on instead of having to

00:35:03,410 --> 00:35:08,720
like check print statements and code and

00:35:05,240 --> 00:35:10,890
nonsense like that so I created a logger

00:35:08,720 --> 00:35:16,200
channel for the Drupal

00:35:10,890 --> 00:35:18,450
dispatcher example and then i injected

00:35:16,200 --> 00:35:20,039
that blogger channel into my event

00:35:18,450 --> 00:35:22,619
subscriber alright so I've got the

00:35:20,039 --> 00:35:26,160
subscriber I got the service the really

00:35:22,619 --> 00:35:28,829
super important part here is that that

00:35:26,160 --> 00:35:31,049
is what tells the container this thing

00:35:28,829 --> 00:35:35,220
wants to subscribe to events all right

00:35:31,049 --> 00:35:37,559
it's tags and tags are just a way for

00:35:35,220 --> 00:35:39,980
you to find things that you care about

00:35:37,559 --> 00:35:43,220
that are identifying themselves to you

00:35:39,980 --> 00:35:45,180
for another service in the container

00:35:43,220 --> 00:35:47,190
basically it's what's called a compiler

00:35:45,180 --> 00:35:49,200
pass and it goes through and it says oh

00:35:47,190 --> 00:35:50,970
I want to add a compiler pass because I

00:35:49,200 --> 00:35:52,140
care about tags like this and I want to

00:35:50,970 --> 00:35:55,109
do something special for them because

00:35:52,140 --> 00:35:57,630
we're awesome and so that's really

00:35:55,109 --> 00:35:59,160
what's kind of happening there is it's

00:35:57,630 --> 00:36:01,440
got a tag looking for event dispatcher

00:35:59,160 --> 00:36:03,089
and says oh great I need to know what

00:36:01,440 --> 00:36:04,380
these service names are and I need to

00:36:03,089 --> 00:36:05,279
know what the functions are I want to

00:36:04,380 --> 00:36:08,730
call this thing and figure out what

00:36:05,279 --> 00:36:13,319
events that i have to trigger any

00:36:08,730 --> 00:36:19,650
questions about that no are we too

00:36:13,319 --> 00:36:23,190
confused yet yeah so event subscriber

00:36:19,650 --> 00:36:25,049
again this right here my object has to

00:36:23,190 --> 00:36:27,299
implement the event subscriber interface

00:36:25,049 --> 00:36:29,430
which has a function called get

00:36:27,299 --> 00:36:32,009
subscribed events so it's going to go oh

00:36:29,430 --> 00:36:34,079
and it's a it's also it's a static class

00:36:32,009 --> 00:36:39,950
it's a static method on the class so

00:36:34,079 --> 00:36:43,369
actually let me just just it yes so

00:36:39,950 --> 00:36:46,559
anybody see that take a little bigger

00:36:43,369 --> 00:36:48,569
okay so get subscribed events right this

00:36:46,559 --> 00:36:52,529
is the actual thing that I have to

00:36:48,569 --> 00:36:56,099
implement in order to implement the

00:36:52,529 --> 00:36:59,549
interface event subscriber and so I'm

00:36:56,099 --> 00:37:03,990
returning Colonel event request right so

00:36:59,549 --> 00:37:06,509
static class attributes are awesome when

00:37:03,990 --> 00:37:07,769
you're using event names because I don't

00:37:06,509 --> 00:37:09,869
have to remember what your event name is

00:37:07,769 --> 00:37:12,839
I just know that I'm looking for

00:37:09,869 --> 00:37:15,720
something on Colonel events and looking

00:37:12,839 --> 00:37:19,259
for the request and if you change that

00:37:15,720 --> 00:37:20,309
my co doesn't break right because my

00:37:19,259 --> 00:37:22,380
codes still using whatever you're

00:37:20,309 --> 00:37:24,130
calling it behind that that static thing

00:37:22,380 --> 00:37:25,990
and then so

00:37:24,130 --> 00:37:31,270
I just have a super awesome named on

00:37:25,990 --> 00:37:33,790
Colonel quest event alright and so on

00:37:31,270 --> 00:37:35,140
corn request event one thing that you

00:37:33,790 --> 00:37:37,750
have to know is that you're going to

00:37:35,140 --> 00:37:42,000
whatever objects or other method that

00:37:37,750 --> 00:37:44,410
you register it's going to get an event

00:37:42,000 --> 00:37:46,570
it's guaranteed to get something that

00:37:44,410 --> 00:37:48,040
implements the event interface beyond

00:37:46,570 --> 00:37:50,860
that is dependent on the particular

00:37:48,040 --> 00:37:52,960
event that you're listening for and if

00:37:50,860 --> 00:37:56,080
you're listening to multiple events the

00:37:52,960 --> 00:37:57,910
same function you have too few can kind

00:37:56,080 --> 00:38:00,010
of figure it out once you get it but I

00:37:57,910 --> 00:38:03,480
happen to know because i looked at the

00:38:00,010 --> 00:38:06,760
documentation that on Colonel request

00:38:03,480 --> 00:38:12,400
returns a get response event alright and

00:38:06,760 --> 00:38:14,140
so I'm doing some logic here that I know

00:38:12,400 --> 00:38:16,180
about because I'm a symphony guy and you

00:38:14,140 --> 00:38:18,490
might not know about because you're not

00:38:16,180 --> 00:38:19,540
Symphony people is there there's two

00:38:18,490 --> 00:38:21,640
types of requests there are mass

00:38:19,540 --> 00:38:24,070
requests in there are sub requests all

00:38:21,640 --> 00:38:25,270
right which means and you're both good

00:38:24,070 --> 00:38:26,620
both me of the same data but all I

00:38:25,270 --> 00:38:28,360
really care about is the mass requests

00:38:26,620 --> 00:38:30,010
which is the income or question going

00:38:28,360 --> 00:38:31,180
out you can do sub requests as it does

00:38:30,010 --> 00:38:33,370
the sub routes and all this kind of

00:38:31,180 --> 00:38:35,110
nonsense and your routing scheme and all

00:38:33,370 --> 00:38:36,880
that kind of junk that I don't care

00:38:35,110 --> 00:38:40,360
about right all i care about is I want

00:38:36,880 --> 00:38:41,970
the master request so basically it

00:38:40,360 --> 00:38:45,310
checks to see if it's and master request

00:38:41,970 --> 00:38:47,080
logs that it's checking that or which it

00:38:45,310 --> 00:38:50,670
is that it's not mastered not processing

00:38:47,080 --> 00:38:53,110
right so if I'm not a master just log in

00:38:50,670 --> 00:38:54,700
the other thing I want to do that you

00:38:53,110 --> 00:38:57,430
probably would do the opposite most

00:38:54,700 --> 00:38:58,930
times with a security plugin I'm

00:38:57,430 --> 00:39:00,040
checking make sure it's not admin so

00:38:58,930 --> 00:39:02,350
that it works out really well for my

00:39:00,040 --> 00:39:04,500
demo because when you get an

00:39:02,350 --> 00:39:08,260
unauthorized you have to actually

00:39:04,500 --> 00:39:10,870
uninstall it manually and reload upload

00:39:08,260 --> 00:39:13,480
to get it to be able to uninstall it and

00:39:10,870 --> 00:39:17,500
turn it off so on this one it basically

00:39:13,480 --> 00:39:19,270
says hey the event the get requests or

00:39:17,500 --> 00:39:20,800
get response event has a method all

00:39:19,270 --> 00:39:23,380
night called get requests which is the

00:39:20,800 --> 00:39:27,010
incoming requests and get path info

00:39:23,380 --> 00:39:28,480
tells me what the path is and so if it's

00:39:27,010 --> 00:39:33,040
admin I'm not going to process it

00:39:28,480 --> 00:39:34,120
because the path is admin so I'm not

00:39:33,040 --> 00:39:35,260
going to process for the black list

00:39:34,120 --> 00:39:37,340
because it doesn't work werewolf right

00:39:35,260 --> 00:39:42,810
down

00:39:37,340 --> 00:39:44,670
then otherwise it's not an admin and

00:39:42,810 --> 00:39:45,840
it's the master request so I actually

00:39:44,670 --> 00:39:50,820
want to see if this is supposed to be

00:39:45,840 --> 00:39:53,520
blacklisted so I log that that's what

00:39:50,820 --> 00:39:56,820
I'm doing i get the client IP from the

00:39:53,520 --> 00:39:59,480
request alright there's a one of the

00:39:56,820 --> 00:40:01,800
things that is super awesome for

00:39:59,480 --> 00:40:05,700
old-school object-oriented programmers

00:40:01,800 --> 00:40:09,450
like myself in Drupal 8 is that

00:40:05,700 --> 00:40:13,770
everything is objects all right drupal 7

00:40:09,450 --> 00:40:14,880
and almost every PHP based content

00:40:13,770 --> 00:40:17,370
management system out there nowadays

00:40:14,880 --> 00:40:19,430
you're using either standard class for

00:40:17,370 --> 00:40:21,750
the most part or using some sort of

00:40:19,430 --> 00:40:23,250
multi-dimensional array to get all of

00:40:21,750 --> 00:40:26,070
your data and you've always got to check

00:40:23,250 --> 00:40:28,760
to make sure stuff is there so if you're

00:40:26,070 --> 00:40:31,700
not flipping off warnings everywhere

00:40:28,760 --> 00:40:34,260
that to me is just a little annoying

00:40:31,700 --> 00:40:35,880
because they also change what is up in

00:40:34,260 --> 00:40:39,510
that object from time to time there's no

00:40:35,880 --> 00:40:41,880
way to know what's going on in the

00:40:39,510 --> 00:40:44,820
Drupal 8 world as far as I've seen so

00:40:41,880 --> 00:40:46,380
far everything is an object and it's a

00:40:44,820 --> 00:40:48,030
defined object and it's going to have a

00:40:46,380 --> 00:40:49,680
defined interface they may add stuff

00:40:48,030 --> 00:40:52,760
later but the stuff that you was

00:40:49,680 --> 00:40:55,080
supposed to be there is always there and

00:40:52,760 --> 00:40:57,330
even on the symphony side they have

00:40:55,080 --> 00:40:59,970
probably the best migration thing I've

00:40:57,330 --> 00:41:01,470
ever seen I've actually a a company i

00:40:59,970 --> 00:41:04,310
work at we're actually implementing that

00:41:01,470 --> 00:41:08,310
as well is that you deprecated it and

00:41:04,310 --> 00:41:09,930
then up to the next major release you

00:41:08,310 --> 00:41:11,460
put in deprecation notices and once you

00:41:09,930 --> 00:41:12,810
fix the deprecation notices you can move

00:41:11,460 --> 00:41:15,930
the next major release with no problems

00:41:12,810 --> 00:41:17,250
right so the symphony stuff is going to

00:41:15,930 --> 00:41:19,770
lease your problems with Drupal upgrades

00:41:17,250 --> 00:41:23,070
I promise you it is super super super

00:41:19,770 --> 00:41:25,500
stable so basically i get the client IP

00:41:23,070 --> 00:41:29,300
from the request i call my blacklist

00:41:25,500 --> 00:41:34,740
service and i ask is this IP blacklisted

00:41:29,300 --> 00:41:37,140
if it is then i log on notice not a

00:41:34,740 --> 00:41:38,670
debug because sometimes people want to

00:41:37,140 --> 00:41:40,170
know why i can't access your system and

00:41:38,670 --> 00:41:41,580
if you're not looking it if you're

00:41:40,170 --> 00:41:44,420
looking if you if you're not reporting

00:41:41,580 --> 00:41:44,420
debug logs you don't know

00:41:44,500 --> 00:41:48,850
and then I throw an access denied HTTP

00:41:46,870 --> 00:41:50,530
exception now the one thing that I'm not

00:41:48,850 --> 00:41:52,720
doing here which I should be doing here

00:41:50,530 --> 00:41:56,140
is I should have been trigger another

00:41:52,720 --> 00:41:58,120
event to make this extensible because I

00:41:56,140 --> 00:42:00,130
could have said that oh I p blacklisted

00:41:58,120 --> 00:42:02,770
event alright and you could do something

00:42:00,130 --> 00:42:04,030
about that if you really care to but I

00:42:02,770 --> 00:42:08,110
did not have time to do that for this

00:42:04,030 --> 00:42:10,690
particular piece here and then more

00:42:08,110 --> 00:42:12,160
debug logging so in honesty right the

00:42:10,690 --> 00:42:14,380
size all the debug log E and all this

00:42:12,160 --> 00:42:19,210
kind of nonsense right I have one

00:42:14,380 --> 00:42:20,650
function with one line I could at the

00:42:19,210 --> 00:42:24,160
beginning this was all like three lines

00:42:20,650 --> 00:42:25,810
of code to say if it's the mass requests

00:42:24,160 --> 00:42:28,390
and it's not the admin path and it's

00:42:25,810 --> 00:42:30,520
blacklisted or turn tonight right it's

00:42:28,390 --> 00:42:33,520
not the income request there's a bunch

00:42:30,520 --> 00:42:37,780
of other stuff in there and then the

00:42:33,520 --> 00:42:39,370
last piece is the actual blacksmith

00:42:37,780 --> 00:42:42,040
service which basically gets an array of

00:42:39,370 --> 00:42:43,300
white listed and just returns if it's in

00:42:42,040 --> 00:42:46,380
the white list Roy all right there's no

00:42:43,300 --> 00:42:48,670
functionality really in there either so

00:42:46,380 --> 00:42:51,420
but the thing that this actually does do

00:42:48,670 --> 00:42:54,130
is it shows some really core concepts

00:42:51,420 --> 00:42:57,130
specific to Symphony which is dependency

00:42:54,130 --> 00:42:59,500
injection right building a modular

00:42:57,130 --> 00:43:00,730
module all right you're not just

00:42:59,500 --> 00:43:02,800
building a modular Drupal you're

00:43:00,730 --> 00:43:04,720
building a modular module that you're

00:43:02,800 --> 00:43:07,540
going to in theory if you want to define

00:43:04,720 --> 00:43:08,860
some other really cool library out there

00:43:07,540 --> 00:43:11,080
that did blacklisting way more

00:43:08,860 --> 00:43:13,240
sophisticated than I have you could just

00:43:11,080 --> 00:43:15,700
pull that library in and you could use

00:43:13,240 --> 00:43:18,910
that in your module and you could inject

00:43:15,700 --> 00:43:21,010
it into your event subscriber and you

00:43:18,910 --> 00:43:24,600
could just use that all right instead of

00:43:21,010 --> 00:43:26,740
having to write everything all right I

00:43:24,600 --> 00:43:29,140
worked with a company for six years

00:43:26,740 --> 00:43:31,570
writing big PHP apps and we wrote

00:43:29,140 --> 00:43:34,450
everything and it was tiring and

00:43:31,570 --> 00:43:36,820
exhausting to have to be amazing at

00:43:34,450 --> 00:43:39,340
everything all right I have to write a

00:43:36,820 --> 00:43:40,450
really good logger otherwise my logs get

00:43:39,340 --> 00:43:41,800
filled up with crap I don't care about

00:43:40,450 --> 00:43:44,440
and I've got to write a request

00:43:41,800 --> 00:43:46,810
processor and a response to kasher and a

00:43:44,440 --> 00:43:48,400
database access ER because the ones that

00:43:46,810 --> 00:43:51,250
are out there are so great and they

00:43:48,400 --> 00:43:54,040
don't do what I need them to do and you

00:43:51,250 --> 00:43:55,840
wrote everything right and there are so

00:43:54,040 --> 00:43:57,100
our Drupal modules out there that do a

00:43:55,840 --> 00:43:57,580
lot of very cool things but they're

00:43:57,100 --> 00:43:59,950
missing one

00:43:57,580 --> 00:44:01,590
peace here or one piece there because

00:43:59,950 --> 00:44:04,510
they're trying to be everything and

00:44:01,590 --> 00:44:07,120
what's happened a lot in the general PHP

00:44:04,510 --> 00:44:12,130
community how many people here are

00:44:07,120 --> 00:44:13,120
familiar with packages ok before pack

00:44:12,130 --> 00:44:18,810
how many people were here before

00:44:13,120 --> 00:44:23,530
packages ok before packages life sucked

00:44:18,810 --> 00:44:25,840
it sucked if you wanted to get your kota

00:44:23,530 --> 00:44:27,250
if you had a really cool library the

00:44:25,840 --> 00:44:29,020
only way that I could use your library

00:44:27,250 --> 00:44:31,120
is I would have to go know who you were

00:44:29,020 --> 00:44:33,730
I'd have to go find where you put your

00:44:31,120 --> 00:44:36,160
code download a zip file our at our ball

00:44:33,730 --> 00:44:37,570
and stick it inside my coat now if you

00:44:36,160 --> 00:44:39,550
made any fixes to that I would have to

00:44:37,570 --> 00:44:41,770
somehow magically know that and update

00:44:39,550 --> 00:44:45,220
the code in my code because you made a

00:44:41,770 --> 00:44:51,160
change in yours or you could use pear

00:44:45,220 --> 00:44:53,110
and pear I understand why they did it

00:44:51,160 --> 00:44:54,610
but basically you would submit your code

00:44:53,110 --> 00:44:57,790
to pair they would decide if it was good

00:44:54,610 --> 00:45:03,220
enough to be put in there and most stuff

00:44:57,790 --> 00:45:05,440
wasn't and then I don't know which came

00:45:03,220 --> 00:45:08,400
first I've never asked Jordi or Fabian I

00:45:05,440 --> 00:45:10,900
which came first symphony or composer

00:45:08,400 --> 00:45:13,480
but when symphony came out there's so

00:45:10,900 --> 00:45:15,010
many modules that it used you needed

00:45:13,480 --> 00:45:17,890
something to install all that stuff and

00:45:15,010 --> 00:45:21,730
they had their own crazy little module

00:45:17,890 --> 00:45:23,200
builder thing and all of a sudden this

00:45:21,730 --> 00:45:26,190
thing called composer showed up and it

00:45:23,200 --> 00:45:28,360
was the most amazing thing ever because

00:45:26,190 --> 00:45:30,880
packages didn't exist yet but you could

00:45:28,360 --> 00:45:33,040
basically say oh this git repository I

00:45:30,880 --> 00:45:34,690
want this tag version it was amazing

00:45:33,040 --> 00:45:37,930
that's amazing it changed my life

00:45:34,690 --> 00:45:40,420
forever and then packages came out and

00:45:37,930 --> 00:45:42,760
now I can publish my library there and

00:45:40,420 --> 00:45:44,980
you can use it and know what it requires

00:45:42,760 --> 00:45:46,780
and it will resolve all that stuff

00:45:44,980 --> 00:45:48,610
magically for you so that you can start

00:45:46,780 --> 00:45:52,120
including libraries and what ended up

00:45:48,610 --> 00:45:55,390
happening is is now there are tens of

00:45:52,120 --> 00:45:56,850
thousands of good libraries out there to

00:45:55,390 --> 00:46:00,520
do stuff that I don't want to write

00:45:56,850 --> 00:46:03,490
right I work for a security company we

00:46:00,520 --> 00:46:07,090
write security software we don't write

00:46:03,490 --> 00:46:10,170
logs we don't write HTTP parsers right

00:46:07,090 --> 00:46:13,590
we write super secure

00:46:10,170 --> 00:46:16,110
with a lot of encryption SDK is to

00:46:13,590 --> 00:46:17,730
access our security API I don't want to

00:46:16,110 --> 00:46:20,100
have to write the rest and I don't have

00:46:17,730 --> 00:46:22,380
to write because i use a ton of

00:46:20,100 --> 00:46:23,820
libraries i use PHP cyclin even though i

00:46:22,380 --> 00:46:25,110
know a lot about crypto i'm not an

00:46:23,820 --> 00:46:26,580
expert of crypto but there are people

00:46:25,110 --> 00:46:28,920
that are mathematicians that write PHP

00:46:26,580 --> 00:46:29,760
sec lives that I don't have to all right

00:46:28,920 --> 00:46:32,130
and there are people that write

00:46:29,760 --> 00:46:33,180
monologue so I don't have to and there

00:46:32,130 --> 00:46:36,090
are people that bright the symphony

00:46:33,180 --> 00:46:41,640
event dispatcher so I don't have to and

00:46:36,090 --> 00:46:43,530
that's my soapbox sorry but I think that

00:46:41,640 --> 00:46:45,060
one thing to take away about and I know

00:46:43,530 --> 00:46:47,660
that it's actually to be talked about a

00:46:45,060 --> 00:46:53,040
lot by Ryan in the next talk is that

00:46:47,660 --> 00:46:55,140
Drupal 8 opens up the world for Drupal

00:46:53,040 --> 00:47:00,120
developers right you can include

00:46:55,140 --> 00:47:01,320
anything from anywhere of the tens money

00:47:00,120 --> 00:47:04,740
we have to hundreds of thousands of

00:47:01,320 --> 00:47:06,030
packages on packages right into your

00:47:04,740 --> 00:47:07,110
code it's a little kind of weird how you

00:47:06,030 --> 00:47:09,390
have to do it but you can still do it

00:47:07,110 --> 00:47:11,160
your module right so you can build these

00:47:09,390 --> 00:47:12,780
super awesome modules that do this super

00:47:11,160 --> 00:47:14,700
cool stuff that is super secure and

00:47:12,780 --> 00:47:16,440
super safe and you didn't have to write

00:47:14,700 --> 00:47:18,000
it all right you just had to put the

00:47:16,440 --> 00:47:20,310
pieces together so it could be done and

00:47:18,000 --> 00:47:22,950
then you can make it extensible because

00:47:20,310 --> 00:47:24,600
you can use the event manager so that

00:47:22,950 --> 00:47:26,730
people can build on top of yours without

00:47:24,600 --> 00:47:27,780
having to commit to your project right

00:47:26,730 --> 00:47:29,220
because there's some stuff for someone

00:47:27,780 --> 00:47:30,570
says they have this you know bizarre

00:47:29,220 --> 00:47:32,180
thing and they're like oh I want to add

00:47:30,570 --> 00:47:34,770
this to your module and you're like no

00:47:32,180 --> 00:47:38,970
that's not really what my modules for

00:47:34,770 --> 00:47:41,790
and no it's not cool but what they can

00:47:38,970 --> 00:47:43,560
do now if you trigger events is that

00:47:41,790 --> 00:47:45,000
they can build their own module that

00:47:43,560 --> 00:47:46,440
listens to the events from your module

00:47:45,000 --> 00:47:48,330
and does the crazy whack out stuff you

00:47:46,440 --> 00:47:51,360
don't want your core stuff makes it

00:47:48,330 --> 00:47:55,130
super awesome any questions about the

00:47:51,360 --> 00:47:55,130
example yeah

00:48:02,599 --> 00:48:08,930
so in my example is there a way for me

00:48:05,969 --> 00:48:12,299
to set priority for the event and no

00:48:08,930 --> 00:48:15,119
it's not doing that right now so where

00:48:12,299 --> 00:48:19,489
you would do that is right here this

00:48:15,119 --> 00:48:22,559
would just be an array and it would have

00:48:19,489 --> 00:48:26,609
two attributes or two items in the array

00:48:22,559 --> 00:48:31,819
and it would be the name and you would

00:48:26,609 --> 00:48:34,259
give it the priority list integer yeah

00:48:31,819 --> 00:48:36,329
yep and offhand I don't remember if

00:48:34,259 --> 00:48:37,979
higher or lower is better because

00:48:36,329 --> 00:48:39,150
there's so many of these things that

00:48:37,979 --> 00:48:42,239
some of them higher is better so I'm

00:48:39,150 --> 00:48:45,450
lower is better but the documentation is

00:48:42,239 --> 00:48:46,920
in the symphony event dispatcher and how

00:48:45,450 --> 00:48:48,029
to do all that crazy stuff there's a few

00:48:46,920 --> 00:48:49,769
other things you can do like you can

00:48:48,029 --> 00:48:51,779
actually tell it to call multiple

00:48:49,769 --> 00:48:57,779
functions and you can give it an array

00:48:51,779 --> 00:49:01,140
of an array of yeah it so it's it allows

00:48:57,779 --> 00:49:04,019
you to some fairly complex stuff but

00:49:01,140 --> 00:49:06,259
that's basically what it does and you

00:49:04,019 --> 00:49:06,259
have a question

00:49:16,960 --> 00:49:22,520
so what you would do is you would inside

00:49:20,240 --> 00:49:25,730
of whatever service you wanted you

00:49:22,520 --> 00:49:27,680
wouldn't you would inject the event

00:49:25,730 --> 00:49:29,120
dispatcher all right it's another

00:49:27,680 --> 00:49:30,500
service it's in the container and I

00:49:29,120 --> 00:49:33,410
believe it's actually event underscore

00:49:30,500 --> 00:49:36,320
dispatcher and so you would go into your

00:49:33,410 --> 00:49:39,800
services yellow file and you would

00:49:36,320 --> 00:49:44,180
inject it there and then in here when

00:49:39,800 --> 00:49:45,740
you got done you would just say you

00:49:44,180 --> 00:49:48,590
would trigger a new event dispatcher

00:49:45,740 --> 00:49:51,230
trigger event give it a name go to an

00:49:48,590 --> 00:49:53,270
event object that's it it's all there is

00:49:51,230 --> 00:49:55,430
to it because that's all of the core is

00:49:53,270 --> 00:49:57,260
doing underneath right that's all the

00:49:55,430 --> 00:49:59,750
deed the symphony kernel is doing its

00:49:57,260 --> 00:50:01,520
going oh I got a request in i parse the

00:49:59,750 --> 00:50:03,800
request and turn it into this request

00:50:01,520 --> 00:50:06,410
object I'm going to tell the world I

00:50:03,800 --> 00:50:08,030
need a need a response right because

00:50:06,410 --> 00:50:09,860
what i'm doing here is I could actually

00:50:08,030 --> 00:50:11,930
set a response but it actually works a

00:50:09,860 --> 00:50:14,210
whole lot better I set the response it

00:50:11,930 --> 00:50:19,940
actually just returns a blank page that

00:50:14,210 --> 00:50:21,560
just has a 404 01 response right if I do

00:50:19,940 --> 00:50:24,890
the access denied exception it actually

00:50:21,560 --> 00:50:27,620
this nice Drupal page right so and what

00:50:24,890 --> 00:50:29,900
that actually looks like in an example

00:50:27,620 --> 00:50:32,510
all right make sure it's working all

00:50:29,900 --> 00:50:34,040
right so I have this nice little Drupal

00:50:32,510 --> 00:50:39,230
paid disturb will cite running a little

00:50:34,040 --> 00:50:40,520
dock around my box and the instructions

00:50:39,230 --> 00:50:42,460
are actually on the thing on how to do

00:50:40,520 --> 00:50:46,960
this that basically you just go into

00:50:42,460 --> 00:50:46,960
extends sorry for the tapping noises

00:50:48,550 --> 00:50:54,920
Drupal event dispatcher example install

00:50:52,630 --> 00:50:57,800
it's going to rebuild a container it's

00:50:54,920 --> 00:51:00,650
all done and so now if I go the site it

00:50:57,800 --> 00:51:02,330
access tonight all right I've completely

00:51:00,650 --> 00:51:05,390
circumvented everything except for the

00:51:02,330 --> 00:51:07,340
template layer and I'm just saying you

00:51:05,390 --> 00:51:09,380
cannot access this site all right

00:51:07,340 --> 00:51:10,430
because i'm actually and you are saying

00:51:09,380 --> 00:51:12,860
but wait a minute you're on localhost

00:51:10,430 --> 00:51:15,050
why can't you access it and the actual

00:51:12,860 --> 00:51:20,770
reason for that is is because i'm not a

00:51:15,050 --> 00:51:25,180
local host my address is 172 1701

00:51:20,770 --> 00:51:27,400
so if you use this locally you'll

00:51:25,180 --> 00:51:28,510
probably find and try next or somewhere

00:51:27,400 --> 00:51:33,850
else will be there but because i'm in

00:51:28,510 --> 00:51:36,100
i'm using docker thank you because i'm

00:51:33,850 --> 00:51:38,830
using docker it decides picks its own IP

00:51:36,100 --> 00:51:41,980
addresses everything's all happy and

00:51:38,830 --> 00:51:45,220
here's all the logs right so I real real

00:51:41,980 --> 00:51:46,390
big believer in logging for people that

00:51:45,220 --> 00:51:47,710
aren't you they don't know how your code

00:51:46,390 --> 00:51:51,550
works to find out what's going on and

00:51:47,710 --> 00:51:52,450
why things are terrible because you know

00:51:51,550 --> 00:51:53,710
sometimes stuff just doesn't work

00:51:52,450 --> 00:51:55,060
there's the things you don't think of

00:51:53,710 --> 00:51:56,650
the things you don't expect when you

00:51:55,060 --> 00:51:58,750
build a module and it's used out there

00:51:56,650 --> 00:52:01,570
by a million people that speak 12

00:51:58,750 --> 00:52:03,790
different languages sometimes you didn't

00:52:01,570 --> 00:52:08,800
think of everything so logging is always

00:52:03,790 --> 00:52:12,190
really good so any more questions about

00:52:08,800 --> 00:52:15,660
the example and I'll have a thing at the

00:52:12,190 --> 00:52:18,190
end if you want to take a look at it and

00:52:15,660 --> 00:52:19,900
so and the last little bit of talk I

00:52:18,190 --> 00:52:22,930
want to talk about how this is only the

00:52:19,900 --> 00:52:26,380
beginning right drupal 8 is the

00:52:22,930 --> 00:52:31,120
beginning right I promise you it's just

00:52:26,380 --> 00:52:34,330
the beginning it is such a change from

00:52:31,120 --> 00:52:35,410
Drupal 7 all right I mean if you're if

00:52:34,330 --> 00:52:37,090
you're an old Rupe ability like whoa

00:52:35,410 --> 00:52:38,170
this is blowing my mind I don't

00:52:37,090 --> 00:52:39,730
understand it I don't want to figure it

00:52:38,170 --> 00:52:44,170
out I just want to make money using

00:52:39,730 --> 00:52:47,260
dribble and I totally get it but if

00:52:44,170 --> 00:52:49,060
you're a module developer it's going to

00:52:47,260 --> 00:52:50,740
make your life a lot easier you're going

00:52:49,060 --> 00:52:52,390
to write better modules you're going to

00:52:50,740 --> 00:52:53,590
write them faster you're going to be

00:52:52,390 --> 00:52:55,330
able to test them you're gonna be able

00:52:53,590 --> 00:52:57,490
to put them under continuous integration

00:52:55,330 --> 00:52:59,350
to make sure that if somebody else

00:52:57,490 --> 00:53:02,020
commits to your module that they don't

00:52:59,350 --> 00:53:04,000
break your stuff because you can just

00:53:02,020 --> 00:53:05,170
write tests around it and that was the

00:53:04,000 --> 00:53:06,670
other thing that I didn't show is that I

00:53:05,170 --> 00:53:09,520
actually have unit tests around every

00:53:06,670 --> 00:53:11,140
one of those things because I can it's

00:53:09,520 --> 00:53:12,760
just an object right it's not some

00:53:11,140 --> 00:53:15,160
global method calling another global

00:53:12,760 --> 00:53:19,380
method using a static method on a global

00:53:15,160 --> 00:53:22,150
object like that is really hard to test

00:53:19,380 --> 00:53:26,290
and if you love unit tests like I love

00:53:22,150 --> 00:53:27,130
unit tests your you be excited but like

00:53:26,290 --> 00:53:28,660
I said it's gonna help you build a

00:53:27,130 --> 00:53:31,150
better model bonsall right you're going

00:53:28,660 --> 00:53:34,140
to have modular modules i knows making a

00:53:31,150 --> 00:53:35,309
lot of sense but it allows you to just

00:53:34,140 --> 00:53:38,190
build on top of what someone else is

00:53:35,309 --> 00:53:39,779
done right instead of worrying about you

00:53:38,190 --> 00:53:41,400
know oh can I get this accepted by this

00:53:39,779 --> 00:53:43,109
thing or do I have to fork it and write

00:53:41,400 --> 00:53:44,460
it myself and make all the changes right

00:53:43,109 --> 00:53:46,170
that's old-school Drupal just take what

00:53:44,460 --> 00:53:48,480
they wrote steal it copy it change a

00:53:46,170 --> 00:53:50,369
couple things I got your own module but

00:53:48,480 --> 00:53:51,720
you don't get their bug fixes right when

00:53:50,369 --> 00:53:53,700
you do it that way when they make up and

00:53:51,720 --> 00:53:55,529
they finds on the broken and they fix it

00:53:53,700 --> 00:53:59,789
you don't get it because you copy their

00:53:55,529 --> 00:54:01,500
stuff loosely coupled right so you can

00:53:59,789 --> 00:54:03,000
build modules that aren't dependent that

00:54:01,500 --> 00:54:04,349
can work with other modules but all they

00:54:03,000 --> 00:54:06,539
know about is that you there's an event

00:54:04,349 --> 00:54:07,980
dispatcher and an event they have no

00:54:06,539 --> 00:54:10,740
idea how your module works and they

00:54:07,980 --> 00:54:12,990
don't need to all right you don't have

00:54:10,740 --> 00:54:15,599
to know how anything else works to build

00:54:12,990 --> 00:54:17,579
on top of it and that's an amazing bit

00:54:15,599 --> 00:54:18,750
of power all right I don't have to I

00:54:17,579 --> 00:54:22,410
didn't have to know anything about

00:54:18,750 --> 00:54:26,940
symphony or Drupal to intercept the

00:54:22,410 --> 00:54:30,210
request and given given unauthorized

00:54:26,940 --> 00:54:32,640
response I just had to know that the

00:54:30,210 --> 00:54:35,910
first thing it does is it fires off a

00:54:32,640 --> 00:54:38,369
get response event and that event has a

00:54:35,910 --> 00:54:41,039
request and I can throw an exception and

00:54:38,369 --> 00:54:42,329
it's done right I didn't have to learn

00:54:41,039 --> 00:54:44,190
anything about Drupal for that I'd have

00:54:42,329 --> 00:54:45,869
to learn anything about 74 that I just

00:54:44,190 --> 00:54:50,190
had to know about the events right

00:54:45,869 --> 00:54:52,920
that's really powerful highly extensible

00:54:50,190 --> 00:54:56,960
because it's loosely coupled highly

00:54:52,920 --> 00:54:59,309
configurable as you're building things

00:54:56,960 --> 00:55:00,839
for the events you can configure it

00:54:59,309 --> 00:55:02,190
based on events you can trigger you can

00:55:00,839 --> 00:55:03,539
basically have things oh I've got this

00:55:02,190 --> 00:55:05,339
event this event this event so now I

00:55:03,539 --> 00:55:07,890
know as I'm trying to process my piece I

00:55:05,339 --> 00:55:10,140
know the state that's going on from the

00:55:07,890 --> 00:55:13,799
other events now I can react in a way

00:55:10,140 --> 00:55:15,960
that I care about and it you can make it

00:55:13,799 --> 00:55:18,960
bulletproof right when you can test

00:55:15,960 --> 00:55:22,380
everything when you can have reliable

00:55:18,960 --> 00:55:23,789
tests using mocked objects inside of

00:55:22,380 --> 00:55:26,549
your modules you can make them

00:55:23,789 --> 00:55:28,259
bulletproof all right you can make you

00:55:26,549 --> 00:55:29,730
can find all the bugs you can find all

00:55:28,259 --> 00:55:32,130
the edge cases right you can write

00:55:29,730 --> 00:55:34,019
really good code that people will look

00:55:32,130 --> 00:55:36,660
at in a while it's pretty cool I like

00:55:34,019 --> 00:55:38,039
what you did there it that's rare in a

00:55:36,660 --> 00:55:39,599
CMS right that someone's gonna look at

00:55:38,039 --> 00:55:41,579
your code from something you build for

00:55:39,599 --> 00:55:43,470
CMS and white that's a really good

00:55:41,579 --> 00:55:45,870
instance of object-oriented code that's

00:55:43,470 --> 00:55:49,440
pretty cool stuff you can do that now

00:55:45,870 --> 00:55:51,660
right drupal 8 allows that and external

00:55:49,440 --> 00:55:54,210
libraries right not having to write

00:55:51,660 --> 00:55:57,810
everything let you concentrate on what

00:55:54,210 --> 00:56:00,930
you're doing right and you can build a

00:55:57,810 --> 00:56:01,950
better Drupal so my hope is that there

00:56:00,930 --> 00:56:03,540
are a limited number of events that are

00:56:01,950 --> 00:56:04,740
out there all right there's stuff from

00:56:03,540 --> 00:56:08,310
the symphony world that's already been

00:56:04,740 --> 00:56:09,450
sent and there's a few things but or for

00:56:08,310 --> 00:56:12,960
security company I'm trying to write a

00:56:09,450 --> 00:56:16,740
drupal module I can't there's no event

00:56:12,960 --> 00:56:19,410
that says someone has submitted a login

00:56:16,740 --> 00:56:23,250
request all right I have to go write my

00:56:19,410 --> 00:56:25,230
own login form and process that and

00:56:23,250 --> 00:56:26,400
replace the existing login form alright

00:56:25,230 --> 00:56:28,620
so I still have to go do the stuff that

00:56:26,400 --> 00:56:30,660
I've always done in Drupal which is copy

00:56:28,620 --> 00:56:32,820
it from core change the piece I need

00:56:30,660 --> 00:56:36,530
registered for my module and replace the

00:56:32,820 --> 00:56:39,960
existing one that's used by drupal but

00:56:36,530 --> 00:56:42,920
not too many boos but on wordpress it's

00:56:39,960 --> 00:56:45,900
actually triggers right I get a callback

00:56:42,920 --> 00:56:47,790
which is a hook that says someone's

00:56:45,900 --> 00:56:49,710
trying to login if you return me a user

00:56:47,790 --> 00:56:54,360
object that I'll assume they're logged

00:56:49,710 --> 00:56:55,980
in I hopefully Drupal gets their right

00:56:54,360 --> 00:56:58,620
to get away from the copy core and

00:56:55,980 --> 00:57:00,960
modify and be able to utilize more non

00:56:58,620 --> 00:57:02,970
Drupal stuff right inside of Drupal

00:57:00,960 --> 00:57:05,190
there's probably a lot of a lot more

00:57:02,970 --> 00:57:06,900
code in there that is what doing your

00:57:05,190 --> 00:57:08,370
own thing which you're not you know

00:57:06,900 --> 00:57:11,970
depending on how important that is to

00:57:08,370 --> 00:57:14,330
that specific that specific maintainer

00:57:11,970 --> 00:57:16,740
you may get new stuff you may not and

00:57:14,330 --> 00:57:20,700
accelerate platform growth when you

00:57:16,740 --> 00:57:22,590
don't have to write everything and you

00:57:20,700 --> 00:57:26,370
don't have to have intimate knowledge of

00:57:22,590 --> 00:57:28,530
the system to extend it you can build

00:57:26,370 --> 00:57:30,540
things very quickly and when they're

00:57:28,530 --> 00:57:31,800
under test you can have a lot of people

00:57:30,540 --> 00:57:36,240
working on it and no it's not going to

00:57:31,800 --> 00:57:38,570
break so this is my contact information

00:57:36,240 --> 00:57:40,950
if you have any further questions I

00:57:38,570 --> 00:57:44,880
think we actually have three minutes for

00:57:40,950 --> 00:57:47,870
questions or 30 minutes okay just want

00:57:44,880 --> 00:57:50,070
to put that up there twitter email

00:57:47,870 --> 00:57:51,990
please rate my talk will be another one

00:57:50,070 --> 00:57:54,840
up here and then the example is already

00:57:51,990 --> 00:57:57,180
up there this lives are at the speaker

00:57:54,840 --> 00:57:59,310
rate address so if you want to get it

00:57:57,180 --> 00:58:02,370
there which is

00:57:59,310 --> 00:58:04,730
there I really really appreciate any

00:58:02,370 --> 00:58:06,870
input people give me on these talks I

00:58:04,730 --> 00:58:08,160
think I'm halfway decent madam some

00:58:06,870 --> 00:58:09,540
people say I sock some people say I'm

00:58:08,160 --> 00:58:10,500
great I would like to know what you

00:58:09,540 --> 00:58:13,800
think and what you'd like to see

00:58:10,500 --> 00:58:17,700
different this is my first talk to

00:58:13,800 --> 00:58:21,080
drupal folks so we dice to know how you

00:58:17,700 --> 00:58:31,140
guys feel about it any questions

00:58:21,080 --> 00:58:33,210
question anyway so you were talking

00:58:31,140 --> 00:58:34,650
about okay like if you have a if you

00:58:33,210 --> 00:58:37,110
want to have a login event right that's

00:58:34,650 --> 00:58:41,280
a event that's handled by core out of

00:58:37,110 --> 00:58:43,800
the box what is your philosophy about

00:58:41,280 --> 00:58:46,320
okay well if I wanted to do that the

00:58:43,800 --> 00:58:48,720
right way maybe I'll do a forum altar

00:58:46,320 --> 00:58:51,570
right I can hook in using the existing

00:58:48,720 --> 00:58:55,350
hooks right and create a place for me to

00:58:51,570 --> 00:58:57,060
shove in an event listener right I can

00:58:55,350 --> 00:59:00,410
fire off an event and then do it that

00:58:57,060 --> 00:59:04,680
way what's your philosophy on sort of

00:59:00,410 --> 00:59:06,510
creating those event listeners for core

00:59:04,680 --> 00:59:08,610
right so the event listeners are

00:59:06,510 --> 00:59:09,930
therefore forum actions right but I

00:59:08,610 --> 00:59:12,330
don't have a form actually what I want

00:59:09,930 --> 00:59:14,070
to do is I want to hook into the login

00:59:12,330 --> 00:59:16,560
system right I want to hook into the

00:59:14,070 --> 00:59:18,390
office system not the form I don't want

00:59:16,560 --> 00:59:21,900
to change your form I just want to add

00:59:18,390 --> 00:59:24,570
my service as a secondary factor to log

00:59:21,900 --> 00:59:27,000
in to protect Drupal sites from hackers

00:59:24,570 --> 00:59:28,560
with multi-factor authentication right

00:59:27,000 --> 00:59:30,300
so what I have to do is I have to

00:59:28,560 --> 00:59:34,980
actually replace that form handler

00:59:30,300 --> 00:59:36,180
entirely so that I can do the login so

00:59:34,980 --> 00:59:38,010
basically it's like I have to replace

00:59:36,180 --> 00:59:39,930
the form because that's what generates

00:59:38,010 --> 00:59:41,970
the form and listen to the form so that

00:59:39,930 --> 00:59:43,680
I can call the existing functionality

00:59:41,970 --> 00:59:47,550
and then do that what I would prefer to

00:59:43,680 --> 00:59:51,330
have is is you have prioritized events

00:59:47,550 --> 00:59:53,610
that is pre off post off like in the

00:59:51,330 --> 00:59:57,000
best world you have a pre and post of

00:59:53,610 --> 00:59:58,650
everything right so that I can pre this

00:59:57,000 --> 01:00:00,450
if I want to change the data that you're

00:59:58,650 --> 01:00:03,210
working with I will affect it on a

01:00:00,450 --> 01:00:06,560
pre-event and if I want to know what you

01:00:03,210 --> 01:00:09,390
did I can deal with that on a post event

01:00:06,560 --> 01:00:11,900
but being able to just kind of slide

01:00:09,390 --> 01:00:13,369
yourself in there on a chain

01:00:11,900 --> 01:00:16,119
is a whole lot simpler than having to

01:00:13,369 --> 01:00:18,890
inject yourself in the middle because

01:00:16,119 --> 01:00:20,809
what happens when somebody else wants to

01:00:18,890 --> 01:00:22,520
do something with the form as well right

01:00:20,809 --> 01:00:24,349
so now they're replacing so I've got to

01:00:22,520 --> 01:00:27,289
get in there first or last depending on

01:00:24,349 --> 01:00:29,900
how it works because with they replaced

01:00:27,289 --> 01:00:32,329
the form that my stuff is gone all right

01:00:29,900 --> 01:00:34,069
so there's no way you can't you can't

01:00:32,329 --> 01:00:35,900
have like two people interacting with an

01:00:34,069 --> 01:00:37,400
override on the same form because you

01:00:35,900 --> 01:00:39,260
have to replace the form the form at

01:00:37,400 --> 01:00:42,049
large so are you aware of an initiative

01:00:39,260 --> 01:00:44,569
to get rid of hooks and replace all of

01:00:42,049 --> 01:00:46,400
them for Drupal nine with event is that

01:00:44,569 --> 01:00:47,930
where this is going then well drupal 8 I

01:00:46,400 --> 01:00:49,220
don't know if the hooks are there I know

01:00:47,930 --> 01:00:51,230
that the hooks have been in all the

01:00:49,220 --> 01:00:53,359
hooks are available as events I don't

01:00:51,230 --> 01:00:56,420
know if the hooks are actually there are

01:00:53,359 --> 01:01:01,609
they some are still there right right

01:00:56,420 --> 01:01:04,339
right and I think a lot of is because

01:01:01,609 --> 01:01:06,200
you take a look at how many Drupal

01:01:04,339 --> 01:01:07,819
modules are we going to destroy right

01:01:06,200 --> 01:01:09,920
that people use at every single Drupal

01:01:07,819 --> 01:01:12,619
site like this is a massive change but I

01:01:09,920 --> 01:01:15,529
can imagine that there is a lot of how

01:01:12,619 --> 01:01:20,059
do we not just piss everybody off all

01:01:15,529 --> 01:01:21,380
right well I know but but you guys are

01:01:20,059 --> 01:01:25,460
still here all right they didn't piss

01:01:21,380 --> 01:01:26,690
everybody off like if you took a look at

01:01:25,460 --> 01:01:29,150
the difference between Symphony one and

01:01:26,690 --> 01:01:32,869
symfony2 they are not even similar all

01:01:29,150 --> 01:01:34,460
right I'm grateful all right because i

01:01:32,869 --> 01:01:36,470
never used simply one but i gladly you

01:01:34,460 --> 01:01:39,380
simply too so sometimes you need this

01:01:36,470 --> 01:01:40,460
massive change but I imagine some of the

01:01:39,380 --> 01:01:42,529
stuff just still need to be there was

01:01:40,460 --> 01:01:43,549
just too much code to change and they

01:01:42,529 --> 01:01:45,349
said I don't know if there's a movement

01:01:43,549 --> 01:01:47,510
or not like I'm not super into the

01:01:45,349 --> 01:01:50,059
Drupal community that's just my hope all

01:01:47,510 --> 01:01:52,339
right is that you start exposing more of

01:01:50,059 --> 01:01:54,260
this so that you can extend the platform

01:01:52,339 --> 01:01:57,039
more you can extend it quicker you've

01:01:54,260 --> 01:02:00,039
got a better opportunity to do so

01:01:57,039 --> 01:02:00,039
question

01:02:06,950 --> 01:02:14,340
right so what you do is you extend the

01:02:12,240 --> 01:02:17,270
event object or you implement the event

01:02:14,340 --> 01:02:20,520
interface with another object and you

01:02:17,270 --> 01:02:22,470
put in setters or ghetto getter so that

01:02:20,520 --> 01:02:23,730
data you inject in the constructor then

01:02:22,470 --> 01:02:25,500
you have getters to go get the things

01:02:23,730 --> 01:02:32,160
that you need and it's past with that

01:02:25,500 --> 01:02:33,510
event so in the actual in here see I

01:02:32,160 --> 01:02:36,900
take the event i'm getting the request

01:02:33,510 --> 01:02:39,330
type right so the event itself has

01:02:36,900 --> 01:02:42,780
whether or not this is a very specific

01:02:39,330 --> 01:02:45,660
data to that event all right all the

01:02:42,780 --> 01:02:48,210
event actually has the only methods that

01:02:45,660 --> 01:02:50,970
implements is is propagation stopped and

01:02:48,210 --> 01:02:52,560
stop propagation right there's some

01:02:50,970 --> 01:02:54,840
other methods that are deprecated but

01:02:52,560 --> 01:02:56,220
that's the only thing left an event all

01:02:54,840 --> 01:02:57,450
right that's the only thing that's part

01:02:56,220 --> 01:02:59,390
of the actual event itself everything

01:02:57,450 --> 01:03:01,380
else has been added on afterwards and

01:02:59,390 --> 01:03:03,150
that's how you put it in there as you

01:03:01,380 --> 01:03:06,170
extend it with your own object that

01:03:03,150 --> 01:03:06,170
allows you to get the data

01:03:14,640 --> 01:03:19,089
correct you're going to pass an event

01:03:16,720 --> 01:03:20,859
object when you when you when it gets

01:03:19,089 --> 01:03:22,270
triggered you're going to trigger it and

01:03:20,859 --> 01:03:24,570
pass your event object that's going to

01:03:22,270 --> 01:03:27,160
implement the event interface and then

01:03:24,570 --> 01:03:28,750
give those people who are listening that

01:03:27,160 --> 01:03:32,800
event access to the data they need to

01:03:28,750 --> 01:03:34,690
react appropriately usually it's done

01:03:32,800 --> 01:03:39,869
with getters not so much properties like

01:03:34,690 --> 01:03:39,869
global or public public properties yeah

01:03:43,109 --> 01:03:50,020
it depends so when you trigger your

01:03:46,630 --> 01:03:52,150
event you may have passed it an object

01:03:50,020 --> 01:03:55,000
that you already have or reference to

01:03:52,150 --> 01:03:57,160
that it's going to change so like I

01:03:55,000 --> 01:03:59,290
could set the response to that event and

01:03:57,160 --> 01:04:01,869
then it would actually use that response

01:03:59,290 --> 01:04:03,520
that i gave it in the event handler so

01:04:01,869 --> 01:04:04,960
it's going to trigger the event and then

01:04:03,520 --> 01:04:11,859
get the data back from the event and it

01:04:04,960 --> 01:04:14,260
uses that response actually that's not

01:04:11,859 --> 01:04:16,089
correct it's going to be the try

01:04:14,260 --> 01:04:18,609
remember how the colonel request works

01:04:16,089 --> 01:04:20,020
there's one of the very bottom that gets

01:04:18,609 --> 01:04:22,210
the response out and if it doesn't have

01:04:20,020 --> 01:04:23,800
anything it builds its own unhandled

01:04:22,210 --> 01:04:24,849
response right because nothing nothing

01:04:23,800 --> 01:04:27,099
took care of this so I'm just going to

01:04:24,849 --> 01:04:28,240
tell you nothing took care of it so

01:04:27,099 --> 01:04:29,650
there's a there's an event the very

01:04:28,240 --> 01:04:31,329
bottom that gets all the data passed

01:04:29,650 --> 01:04:37,630
along in the event and says oh I need to

01:04:31,329 --> 01:04:39,190
do something with it but you also if it

01:04:37,630 --> 01:04:41,290
passed in a response you could get the

01:04:39,190 --> 01:04:48,089
response object modify and it would have

01:04:41,290 --> 01:04:48,089
that object if it passed it in question

01:04:50,959 --> 01:04:58,319
yeah I'm sorry can you code the event

01:04:52,949 --> 01:05:03,569
from what can you coat it me can you

01:04:58,319 --> 01:05:06,329
trigger it I mean you could build if you

01:05:03,569 --> 01:05:10,259
have the event manager and an event

01:05:06,329 --> 01:05:12,509
subscriber inside of like Symphony

01:05:10,259 --> 01:05:14,939
commands you could I mean it's not

01:05:12,509 --> 01:05:17,519
something where so if you want to

01:05:14,939 --> 01:05:18,959
trigger it manually you would have

01:05:17,519 --> 01:05:20,939
something listening to the request that

01:05:18,959 --> 01:05:22,649
says oh this URL wants me to trigger

01:05:20,939 --> 01:05:24,749
something and you could do that in

01:05:22,649 --> 01:05:27,209
theory like I'm listening for things

01:05:24,749 --> 01:05:28,979
that aren't admin that are the mass

01:05:27,209 --> 01:05:31,169
requests and trigger and dealing with

01:05:28,979 --> 01:05:32,999
that so you could do that if you wanted

01:05:31,169 --> 01:05:35,219
to it's not you couldn't really do it

01:05:32,999 --> 01:05:38,729
from the command line unless you access

01:05:35,219 --> 01:05:39,869
the the Drupal app right I mean theory

01:05:38,729 --> 01:05:42,329
there our command line stuff we could

01:05:39,869 --> 01:05:44,459
hook into Drupal right and do that but

01:05:42,329 --> 01:05:47,489
it's not so much where you can just

01:05:44,459 --> 01:05:52,829
magically make it trigger for the

01:05:47,489 --> 01:05:55,609
command line any other questions all

01:05:52,829 --> 01:05:55,609
right thank you for your time

01:05:58,660 --> 01:06:00,720

YouTube URL: https://www.youtube.com/watch?v=tEMom4kP39w


