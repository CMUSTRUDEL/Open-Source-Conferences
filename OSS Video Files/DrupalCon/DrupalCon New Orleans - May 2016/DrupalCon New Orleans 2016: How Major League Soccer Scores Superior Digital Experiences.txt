Title: DrupalCon New Orleans 2016: How Major League Soccer Scores Superior Digital Experiences
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	Representing the sport’s highest level of professional soccer in the US and Canada, the Major League Soccer’s Digital division maintains a platform comprised of multiple sites and applications responsible for delivering information, news, videos, and stats to eager MLS fans.

In today’s digital landscape, a sports fan’s digital experience is paramount to successful promotion and brand loyalty. In this case study session, you will learn how MLS and Phase2 migrated 25 club sites onto a high performance Drupal platform while maintaining their existing legacy sites to deliver the best experience for site visitors. In addition, we will discuss the performance strategy developed to ensure that the millions of MLS soccer fans can seamlessly access their favorite team's news and stats without interruption.

In this session you will learn :

How MLS planned and developed a long term digital strategy with Phase2 for sustainable and high performance management of their digital platform

Techniques to implement sophisticated customization options into multiple sites while managing them on the same platform code base

Best practices to execute autoscaling to save money and automatically handle traffic spikes

How to apply technical and governance changes to make on-demand shifts less burdensome to prevent developer burnout

The steps you need to take to implement microservices alongside a Drupal platform
Captions: 
	00:00:00,000 --> 00:00:04,650
all right good morning everyone it's

00:00:02,449 --> 00:00:06,319
officially eleven o'clock so i think

00:00:04,650 --> 00:00:09,570
we're going to go ahead and get started

00:00:06,319 --> 00:00:12,030
so hey welcome welcome to the first

00:00:09,570 --> 00:00:14,009
session of drupalcon new orleans 2016

00:00:12,030 --> 00:00:17,430
and we're here for score superior

00:00:14,009 --> 00:00:19,529
digital experiences with MLS and I'd

00:00:17,430 --> 00:00:23,310
like to first throw the mic to Brian to

00:00:19,529 --> 00:00:24,930
introduce himself hello i am brian evan

00:00:23,310 --> 00:00:27,810
our director of engineering at major

00:00:24,930 --> 00:00:29,939
league soccer and hey I'm Stephen

00:00:27,810 --> 00:00:33,149
Merrill I'm the director of phase twos

00:00:29,939 --> 00:00:36,570
DevOps engineering practice so to start

00:00:33,149 --> 00:00:38,790
off how many people here know of Major

00:00:36,570 --> 00:00:40,950
League Soccer all right how many people

00:00:38,790 --> 00:00:45,840
here have been to a major league soccer

00:00:40,950 --> 00:00:47,039
game or watched one all right so yeah so

00:00:45,840 --> 00:00:50,340
I guess maybe then I'll go on how many

00:00:47,039 --> 00:00:51,719
will have been to an MLS game so we have

00:00:50,340 --> 00:00:57,000
some Evans here like this is a pretty

00:00:51,719 --> 00:01:00,870
good distribution of fans oh hey red

00:00:57,000 --> 00:01:02,520
bulls yes I have to you know what I have

00:01:00,870 --> 00:01:04,470
to actually admit this is maybe a bit of

00:01:02,520 --> 00:01:06,030
a shameful thing I've lived in New York

00:01:04,470 --> 00:01:07,890
City for eight years and the first time

00:01:06,030 --> 00:01:09,330
I ever went to Yankee Stadium was to go

00:01:07,890 --> 00:01:11,970
to a new york city football club game

00:01:09,330 --> 00:01:15,960
not to go to yankees game yeah I know I

00:01:11,970 --> 00:01:18,150
know yeah alright cool so you know this

00:01:15,960 --> 00:01:19,860
session score superior digital

00:01:18,150 --> 00:01:21,990
experiences and what we really want to

00:01:19,860 --> 00:01:23,970
talk about is just sort of some work

00:01:21,990 --> 00:01:26,540
that we have been doing together over

00:01:23,970 --> 00:01:28,170
the past year so to start out with

00:01:26,540 --> 00:01:29,579
Brian's going to give you some

00:01:28,170 --> 00:01:30,960
information about the league and kind of

00:01:29,579 --> 00:01:36,090
about the group that he works with

00:01:30,960 --> 00:01:39,150
inside of the league specifically yeah

00:01:36,090 --> 00:01:41,880
so a real top-level on the state of the

00:01:39,150 --> 00:01:48,119
league we've got 20 teams with plans to

00:01:41,880 --> 00:01:50,630
expand to 24 by 2020 along the way we're

00:01:48,119 --> 00:01:55,170
adding state-of-the-art soccer-specific

00:01:50,630 --> 00:01:57,060
stadiums around the US and it's

00:01:55,170 --> 00:02:01,460
noteworthy that our average stadium

00:01:57,060 --> 00:02:04,649
attendance actually exceeds NHL and NBA

00:02:01,460 --> 00:02:07,170
we're expanding our reach in the US and

00:02:04,649 --> 00:02:11,160
around the world with the great new TV

00:02:07,170 --> 00:02:13,520
distribution deals and one of the really

00:02:11,160 --> 00:02:15,770
interesting aspects of

00:02:13,520 --> 00:02:20,050
of our of our league is that our fan

00:02:15,770 --> 00:02:24,170
base is very young and multicultural and

00:02:20,050 --> 00:02:26,030
very digital hungry a good a good line

00:02:24,170 --> 00:02:28,430
share of our traffic is actually not

00:02:26,030 --> 00:02:30,350
coming from desktop web sites so we're

00:02:28,430 --> 00:02:32,600
really focused on building out our

00:02:30,350 --> 00:02:36,860
digital products whether they be web

00:02:32,600 --> 00:02:40,640
mobile app tablet CTV whatever it may be

00:02:36,860 --> 00:02:46,100
and the services that power them is is

00:02:40,640 --> 00:02:48,170
very important to us so in terms of our

00:02:46,100 --> 00:02:51,320
fan base we really bucket them into two

00:02:48,170 --> 00:02:54,560
categories we've got avid's and casuals

00:02:51,320 --> 00:02:56,660
we define avid's as fans that are

00:02:54,560 --> 00:02:59,780
regularly watching and attending MLS

00:02:56,660 --> 00:03:02,360
matches we've got these these fans are

00:02:59,780 --> 00:03:05,360
also regularly consuming soccer rated

00:03:02,360 --> 00:03:07,100
related content and the regularly

00:03:05,360 --> 00:03:09,680
visiting our properties whether they be

00:03:07,100 --> 00:03:13,490
Li the league site mlssoccer.com the

00:03:09,680 --> 00:03:15,890
individual club sites or any other

00:03:13,490 --> 00:03:18,760
soccer specific sites our casuals we

00:03:15,890 --> 00:03:21,320
define as those that are watching and

00:03:18,760 --> 00:03:25,070
attending matches less frequently

00:03:21,320 --> 00:03:28,040
occasionally basically and and you know

00:03:25,070 --> 00:03:31,280
one of our objectives is to grow bill so

00:03:28,040 --> 00:03:33,590
turn convert non casuals to casuals and

00:03:31,280 --> 00:03:35,080
also get casuals to become more avid

00:03:33,590 --> 00:03:38,900
that's this is like our operating

00:03:35,080 --> 00:03:43,400
principles in terms of our ecosystem

00:03:38,900 --> 00:03:46,610
we've got 20 club sites each each Club

00:03:43,400 --> 00:03:49,250
has a website and one league site all

00:03:46,610 --> 00:03:51,260
running on Drupal 7 in a multi tented

00:03:49,250 --> 00:03:53,270
environments that one Drupal instance

00:03:51,260 --> 00:03:55,970
many sites Steven will talk more about

00:03:53,270 --> 00:03:59,660
that we've got mobile apps iOS and

00:03:55,970 --> 00:04:01,940
Android for mobile sorry for her phone

00:03:59,660 --> 00:04:05,120
and for tablet we've got connected

00:04:01,940 --> 00:04:08,030
television devices Roku chromecast and

00:04:05,120 --> 00:04:11,500
Apple TV and then we've got services

00:04:08,030 --> 00:04:11,500
which power everything the content API

00:04:11,739 --> 00:04:18,410
we've a series of micro services that

00:04:15,470 --> 00:04:20,959
are that are powering our video and

00:04:18,410 --> 00:04:22,790
stats and Jess cheon's our video and

00:04:20,959 --> 00:04:24,740
stats comes from third-party providers

00:04:22,790 --> 00:04:26,580
and we have a series of

00:04:24,740 --> 00:04:28,560
services which which pull this

00:04:26,580 --> 00:04:30,300
information and send them a process and

00:04:28,560 --> 00:04:32,430
process them through a pipeline and then

00:04:30,300 --> 00:04:38,240
they eventually end up in our drupal CMS

00:04:32,430 --> 00:04:38,240
and all of this is running within AWS

00:04:39,770 --> 00:04:45,030
all right so a lot of what we want to

00:04:42,450 --> 00:04:46,440
talk about is that as well say we've

00:04:45,030 --> 00:04:49,530
actually been working together for a

00:04:46,440 --> 00:04:52,620
while but for the year from March of

00:04:49,530 --> 00:04:54,210
2015 to march of 2016 MLS digital and

00:04:52,620 --> 00:04:56,700
phase two have worked quite closely

00:04:54,210 --> 00:04:58,260
together on a pretty large project we

00:04:56,700 --> 00:05:00,630
want to tell you about and it actually

00:04:58,260 --> 00:05:03,180
bridges a lot of different areas from

00:05:00,630 --> 00:05:05,430
infrastructure and DevOps to the actual

00:05:03,180 --> 00:05:08,790
platform itself to even some kind of

00:05:05,430 --> 00:05:14,040
management and delegation challenges

00:05:08,790 --> 00:05:16,320
that were there so we had one goal in

00:05:14,040 --> 00:05:19,200
2015 and that was really to modernize

00:05:16,320 --> 00:05:21,870
and stabilize the mls web platform both

00:05:19,200 --> 00:05:24,000
the back end and the front end and this

00:05:21,870 --> 00:05:29,240
really meant in practicality

00:05:24,000 --> 00:05:33,900
successfully migrating 21 sites from our

00:05:29,240 --> 00:05:35,370
Colo and drupal 6 to AWS and drupal 7 so

00:05:33,900 --> 00:05:38,730
a lot of things were happening at once

00:05:35,370 --> 00:05:40,830
and also you know part of this is also a

00:05:38,730 --> 00:05:45,060
redesign so we were accomplishing a lot

00:05:40,830 --> 00:05:47,190
at once yeah so and obviously you know

00:05:45,060 --> 00:05:48,990
as Brian said migrating 21 different

00:05:47,190 --> 00:05:50,880
sites with 21 different sets of

00:05:48,990 --> 00:05:53,820
stakeholders required a large

00:05:50,880 --> 00:05:55,410
multidisciplinary team so in terms of

00:05:53,820 --> 00:05:57,330
the folks who work together to

00:05:55,410 --> 00:05:59,580
accomplish the goals of this migration

00:05:57,330 --> 00:06:02,729
and stabilization from about March of

00:05:59,580 --> 00:06:04,580
2015 to march of 2016 I work for phase

00:06:02,729 --> 00:06:07,950
two obviously phase two was founded in

00:06:04,580 --> 00:06:09,750
2001 we have major offices in DC New

00:06:07,950 --> 00:06:11,070
York San Francisco in Portland and then

00:06:09,750 --> 00:06:13,440
we also have a bunch of distributed

00:06:11,070 --> 00:06:15,270
folks throughout North America so we

00:06:13,440 --> 00:06:17,970
also have a very remote friendly culture

00:06:15,270 --> 00:06:19,590
as well you know you you are at

00:06:17,970 --> 00:06:21,210
drupalcon you've probably heard of us in

00:06:19,590 --> 00:06:22,890
terms of some of the large Drupal sites

00:06:21,210 --> 00:06:25,290
triple contributions that we've made

00:06:22,890 --> 00:06:28,110
things like atrium our collaboration

00:06:25,290 --> 00:06:29,700
focus distro and product and so we are

00:06:28,110 --> 00:06:31,410
very committed to open source technology

00:06:29,700 --> 00:06:33,570
we do so much work in the open source

00:06:31,410 --> 00:06:36,960
space and we use open technology to help

00:06:33,570 --> 00:06:38,560
our clients succeed and you know I say

00:06:36,960 --> 00:06:40,000
you're a triple con you know us as a

00:06:38,560 --> 00:06:41,650
herbal shop but we're always moving

00:06:40,000 --> 00:06:42,730
beyond that like as you'll see quite a

00:06:41,650 --> 00:06:44,650
bit of the work that we're talking about

00:06:42,730 --> 00:06:47,080
with brian is about infrastructure and

00:06:44,650 --> 00:06:49,150
scaling and DevOps you know we also have

00:06:47,080 --> 00:06:52,169
a rapidly expanding experienced team of

00:06:49,150 --> 00:06:54,460
content strategists UX and UI folks so

00:06:52,169 --> 00:06:55,660
you know in addition to doing large

00:06:54,460 --> 00:06:57,130
drupal platform builds were always

00:06:55,660 --> 00:07:00,550
expanding kind of our capabilities

00:06:57,130 --> 00:07:02,260
around the edges so in terms of phase

00:07:00,550 --> 00:07:03,760
two and mls we've actually worked

00:07:02,260 --> 00:07:05,050
together for a while we've been working

00:07:03,760 --> 00:07:08,980
together for a little over three years

00:07:05,050 --> 00:07:11,800
at this point brian had mentioned that

00:07:08,980 --> 00:07:14,290
there was a legacy Drupal 6 site and

00:07:11,800 --> 00:07:15,580
platform and a new Drupal 7 1 we

00:07:14,290 --> 00:07:17,620
actually helped to build out the Drupal

00:07:15,580 --> 00:07:19,570
7 platform originally the Drupal 7

00:07:17,620 --> 00:07:22,419
platform is going to be used for a

00:07:19,570 --> 00:07:24,940
series of Mexican soccer leagues there

00:07:22,419 --> 00:07:27,310
is a property called medio tiempo which

00:07:24,940 --> 00:07:29,650
actually can report on soccer news in

00:07:27,310 --> 00:07:31,960
Latin America and we originally built

00:07:29,650 --> 00:07:34,690
out the d7 platform to be the home for

00:07:31,960 --> 00:07:36,760
that to actually just be home for soccer

00:07:34,690 --> 00:07:39,700
news and not necessarily for the league

00:07:36,760 --> 00:07:41,020
itself over time though as the d6

00:07:39,700 --> 00:07:42,610
platform stagnated and we'll talk about

00:07:41,020 --> 00:07:44,289
some of the challenges with the d6

00:07:42,610 --> 00:07:46,000
platform we said well let's actually

00:07:44,289 --> 00:07:48,220
just use what we've built here and make

00:07:46,000 --> 00:07:51,100
it the home for the club sites and the

00:07:48,220 --> 00:07:53,740
league site so yeah as I said March 2015

00:07:51,100 --> 00:07:56,530
we actually kicked off this effort to do

00:07:53,740 --> 00:07:58,930
the migration to what we called mp7 in

00:07:56,530 --> 00:08:03,820
other words the Drupal 7 platform and to

00:07:58,930 --> 00:08:07,570
move into AWS so a bit on the team for

00:08:03,820 --> 00:08:10,330
2015 we had in terms of capabilities and

00:08:07,570 --> 00:08:13,539
practices we had a we had Drupal

00:08:10,330 --> 00:08:14,710
developers we had full stock full stack

00:08:13,539 --> 00:08:16,990
JavaScript developers they were

00:08:14,710 --> 00:08:22,720
developing and react backbone no Jas and

00:08:16,990 --> 00:08:25,300
go we had DevOps and the process we

00:08:22,720 --> 00:08:27,340
followed was scrum bond which for those

00:08:25,300 --> 00:08:28,900
that don't know is it's it's a mer it's

00:08:27,340 --> 00:08:30,820
kind of like the best of both worlds

00:08:28,900 --> 00:08:32,860
from the scrum and the common bond

00:08:30,820 --> 00:08:35,500
methodology we pick this specifically

00:08:32,860 --> 00:08:38,010
because we felt it really maximized our

00:08:35,500 --> 00:08:41,820
development velocity and our ability to

00:08:38,010 --> 00:08:46,120
be responsive to to business needs and

00:08:41,820 --> 00:08:49,240
it 2015 also marked the the beginning of

00:08:46,120 --> 00:08:51,930
a plan to centralize our development

00:08:49,240 --> 00:08:54,510
team and which is what this mean

00:08:51,930 --> 00:08:57,120
is that we were moving from separate

00:08:54,510 --> 00:08:59,430
teams 14 Drupal's platform development

00:08:57,120 --> 00:09:03,029
and not you know the other four other

00:08:59,430 --> 00:09:05,190
technologies and we're trying to start

00:09:03,029 --> 00:09:08,700
to consolidate we start we started with

00:09:05,190 --> 00:09:10,589
DevOps because the first point in

00:09:08,700 --> 00:09:13,740
consolidation is to get our deployments

00:09:10,589 --> 00:09:16,740
are our management of the of our of our

00:09:13,740 --> 00:09:19,260
stack as unified as possible so one way

00:09:16,740 --> 00:09:21,990
to one way to start and stop things one

00:09:19,260 --> 00:09:25,080
way to triage from from the high level

00:09:21,990 --> 00:09:27,510
and this kind of is starting our process

00:09:25,080 --> 00:09:28,950
to to try to get as much centralization

00:09:27,510 --> 00:09:31,470
as possible so everyone knows as much

00:09:28,950 --> 00:09:38,040
about about the infrastructure as

00:09:31,470 --> 00:09:45,709
everyone else so the challenges and

00:09:38,040 --> 00:09:49,080
solutions for 2015 we had an outdated UX

00:09:45,709 --> 00:09:51,540
originally our sites were built for

00:09:49,080 --> 00:09:55,230
desktop viewing only we had a and we had

00:09:51,540 --> 00:09:58,320
an adaptive site m dot sight that did

00:09:55,230 --> 00:10:02,279
not share the same functionality for the

00:09:58,320 --> 00:10:05,220
most part different experiences we we

00:10:02,279 --> 00:10:09,180
had inflexible authoring the authoring

00:10:05,220 --> 00:10:11,310
as sort of it relates to how the the

00:10:09,180 --> 00:10:14,700
pages would be rendered on mobile and

00:10:11,310 --> 00:10:19,020
desktop we have wasted server capacity

00:10:14,700 --> 00:10:21,420
so our because of our high variability

00:10:19,020 --> 00:10:24,060
in traffic it's very spiky based on

00:10:21,420 --> 00:10:27,839
games and events we needed to plan for

00:10:24,060 --> 00:10:29,459
the worst so that goes to our fourth

00:10:27,839 --> 00:10:33,990
challenge which was high fixed

00:10:29,459 --> 00:10:35,579
infrastructure costs al while there was

00:10:33,990 --> 00:10:38,250
some their poor performance or

00:10:35,579 --> 00:10:39,510
performing modules code and you know we

00:10:38,250 --> 00:10:42,900
all know that the scalability issues

00:10:39,510 --> 00:10:44,760
that could be challenging with a with a

00:10:42,900 --> 00:10:49,140
Drupal site and so we were looking to

00:10:44,760 --> 00:10:52,050
address ad and Technology soup this is

00:10:49,140 --> 00:10:54,420
more of a just the nature of the

00:10:52,050 --> 00:10:56,399
environment which makes things hard it's

00:10:54,420 --> 00:10:58,770
not necessarily that we kind of address

00:10:56,399 --> 00:10:59,940
that in 2015 but we took steps towards

00:10:58,770 --> 00:11:02,010
that and this is going to be an ongoing

00:10:59,940 --> 00:11:05,640
challenge and that we're always

00:11:02,010 --> 00:11:07,110
addressing as we move forward and

00:11:05,640 --> 00:11:11,670
but not least we had an aggressive

00:11:07,110 --> 00:11:15,210
migration 21 sites no downtime each of

00:11:11,670 --> 00:11:17,190
each Club and the league has Syria have

00:11:15,210 --> 00:11:20,160
major tentpole events throughout the

00:11:17,190 --> 00:11:24,120
year and the we had to migrate and and

00:11:20,160 --> 00:11:29,280
have no effect to the users of fans and

00:11:24,120 --> 00:11:31,560
the stakeholders all right so you know

00:11:29,280 --> 00:11:33,060
now I'd like to kind of dig in one by

00:11:31,560 --> 00:11:35,010
one into these challenges that we were

00:11:33,060 --> 00:11:38,370
talking about and talk about how we kind

00:11:35,010 --> 00:11:39,840
of looked to avoid those so the first

00:11:38,370 --> 00:11:42,300
one that Brian talked about was sort of

00:11:39,840 --> 00:11:44,610
an inflexible you i like when when the

00:11:42,300 --> 00:11:46,290
initial drupal 6 platform was built

00:11:44,610 --> 00:11:48,570
there was just the desktop site there

00:11:46,290 --> 00:11:50,010
was an actual different adaptive m dot

00:11:48,570 --> 00:11:51,810
sight that really had like stripped-down

00:11:50,010 --> 00:11:54,510
content so it was a very different

00:11:51,810 --> 00:11:56,400
experience even for a while there was an

00:11:54,510 --> 00:11:58,740
even like lower grade mobile site to at

00:11:56,400 --> 00:12:00,900
one point which was turned off so the

00:11:58,740 --> 00:12:03,120
whole idea behind the the d7 platforms

00:12:00,900 --> 00:12:06,120
is just kind of baked responsive in like

00:12:03,120 --> 00:12:07,620
in the and so I'll talk more when we

00:12:06,120 --> 00:12:10,320
talk about how the actual drupal site is

00:12:07,620 --> 00:12:12,810
laid out but there was one common mp7

00:12:10,320 --> 00:12:14,460
base theme and that base theme had all

00:12:12,810 --> 00:12:16,680
of the responsive break points already

00:12:14,460 --> 00:12:18,180
built in so he basically said you know

00:12:16,680 --> 00:12:19,170
in order to make this easier and in

00:12:18,180 --> 00:12:22,140
order to make it easy to have a

00:12:19,170 --> 00:12:23,820
consistent visual theme between all the

00:12:22,140 --> 00:12:25,230
different clubs and the league and in

00:12:23,820 --> 00:12:27,900
order to make sure that the response of

00:12:25,230 --> 00:12:29,370
stuff worked and this actually happened

00:12:27,900 --> 00:12:31,230
before we got there but Hans who worked

00:12:29,370 --> 00:12:32,660
in MLS was the front-end lead and

00:12:31,230 --> 00:12:35,370
actually said hey we're going to make a

00:12:32,660 --> 00:12:37,800
MP 7 theme that just works at the break

00:12:35,370 --> 00:12:39,240
points that we want and so you know we

00:12:37,800 --> 00:12:40,590
had to make sure that all new features

00:12:39,240 --> 00:12:42,570
were designed for that but then kind of

00:12:40,590 --> 00:12:44,280
out of the box we got to the point where

00:12:42,570 --> 00:12:47,910
all of the club's just have a sub-theme

00:12:44,280 --> 00:12:49,770
off of the mp7 theme and as a result you

00:12:47,910 --> 00:12:51,210
know the colors change for each Club the

00:12:49,770 --> 00:12:53,040
logos change for each Club it that way

00:12:51,210 --> 00:12:55,290
you're not reinventing the wheel right

00:12:53,040 --> 00:12:57,680
you've got this you got this theme that

00:12:55,290 --> 00:12:59,790
you know works there was actually also a

00:12:57,680 --> 00:13:01,830
kind of internal test club called

00:12:59,790 --> 00:13:03,840
digital FC that we use is like the

00:13:01,830 --> 00:13:05,520
testing ground for this as a way to have

00:13:03,840 --> 00:13:07,290
a club but yeah this way like kind of

00:13:05,520 --> 00:13:08,670
out of the box you had a theme that was

00:13:07,290 --> 00:13:10,080
responsive that worked at multiple

00:13:08,670 --> 00:13:11,520
breakpoint so you didn't need an m dot

00:13:10,080 --> 00:13:13,800
you didn't need like a different tablets

00:13:11,520 --> 00:13:16,020
aight you just had the same content that

00:13:13,800 --> 00:13:17,850
was being served up and then the layout

00:13:16,020 --> 00:13:19,130
optimized for all three of the

00:13:17,850 --> 00:13:21,210
breakpoints that you worked

00:13:19,130 --> 00:13:24,480
another big one was editorial

00:13:21,210 --> 00:13:26,730
flexibility so the way that we built

00:13:24,480 --> 00:13:29,220
this was designed to give editors the

00:13:26,730 --> 00:13:31,380
maximum amount of flexibility while

00:13:29,220 --> 00:13:32,640
still making sure that they didn't do

00:13:31,380 --> 00:13:34,560
anything that would jeopardize the

00:13:32,640 --> 00:13:36,570
responsive nature of the sites right as

00:13:34,560 --> 00:13:39,330
Brian mentioned you know the majority of

00:13:36,570 --> 00:13:40,740
MLS's traffic does not come from desktop

00:13:39,330 --> 00:13:41,970
browsers at this point so it is very

00:13:40,740 --> 00:13:44,190
important that everything that is

00:13:41,970 --> 00:13:46,080
available you know the experience is

00:13:44,190 --> 00:13:47,970
appropriate no matter what device you

00:13:46,080 --> 00:13:49,320
happen to be viewing it on so yeah like

00:13:47,970 --> 00:13:51,750
all the building blocks that we put

00:13:49,320 --> 00:13:54,390
together the grid of articles on a

00:13:51,750 --> 00:13:55,260
section landing page the videos lists

00:13:54,390 --> 00:13:57,420
all these things we had to make sure

00:13:55,260 --> 00:13:59,700
that they were you know building blocks

00:13:57,420 --> 00:14:01,920
of editors could go in and put content

00:13:59,700 --> 00:14:03,210
into and that there wasn't a way to like

00:14:01,920 --> 00:14:07,200
break out and make something that wasn't

00:14:03,210 --> 00:14:08,900
going to work in a responsive fashion so

00:14:07,200 --> 00:14:12,000
you know and another big thing about

00:14:08,900 --> 00:14:14,370
MLS's platform the the Drupal 6 platform

00:14:12,000 --> 00:14:16,380
was pretty monolithic like everything

00:14:14,370 --> 00:14:18,810
revolved around Drupal but as Brian said

00:14:16,380 --> 00:14:21,300
MLS has got a ton of different services

00:14:18,810 --> 00:14:22,980
now and really the MLS tech team builds

00:14:21,300 --> 00:14:25,110
a lot of the stuff that is more

00:14:22,980 --> 00:14:27,120
real-time that deals with things like

00:14:25,110 --> 00:14:29,760
streaming stats things that you want to

00:14:27,120 --> 00:14:32,220
have live updates for using nodejs and

00:14:29,760 --> 00:14:35,040
so really you know Drupal is the CMS it

00:14:32,220 --> 00:14:36,960
is the core lynchpin of where all the

00:14:35,040 --> 00:14:38,730
content is created and where it's

00:14:36,960 --> 00:14:40,770
distributed but again you know this

00:14:38,730 --> 00:14:42,570
build was started probably like four

00:14:40,770 --> 00:14:45,570
years ago and so Drupal 8 was still

00:14:42,570 --> 00:14:48,450
really really in early stages so MLS has

00:14:45,570 --> 00:14:51,630
a content API that uses drupal's

00:14:48,450 --> 00:14:54,480
database but is itself a note app for

00:14:51,630 --> 00:14:56,670
example or there is a live match centre

00:14:54,480 --> 00:14:58,080
experience where avid fans can go and

00:14:56,670 --> 00:15:00,300
keep track of stuff that's going on

00:14:58,080 --> 00:15:02,430
during a game and so that stuff you know

00:15:00,300 --> 00:15:04,110
that itself is written in note it uses

00:15:02,430 --> 00:15:07,740
web socket so that you can get updates

00:15:04,110 --> 00:15:09,180
on everything as it happens using web

00:15:07,740 --> 00:15:12,270
sockets but still everything goes

00:15:09,180 --> 00:15:14,840
through Drupal as the CMS like Drupal is

00:15:12,270 --> 00:15:17,730
the canonical place where editors will

00:15:14,840 --> 00:15:19,230
will make articles or they will see that

00:15:17,730 --> 00:15:21,840
the video system has delivered a video

00:15:19,230 --> 00:15:23,790
right up some content around it and then

00:15:21,840 --> 00:15:25,890
publish it so Drupal's kind of the you

00:15:23,790 --> 00:15:28,470
know the digital hub in all of this and

00:15:25,890 --> 00:15:30,660
then it feeds out into the connected TV

00:15:28,470 --> 00:15:32,220
platforms via the API it's really kind

00:15:30,660 --> 00:15:32,819
of the gatekeeper so some of the other

00:15:32,220 --> 00:15:34,199
specific to

00:15:32,819 --> 00:15:36,600
in addition to just being able to work

00:15:34,199 --> 00:15:38,579
with all of these content entities that

00:15:36,600 --> 00:15:40,289
are being fed in through their pipeline

00:15:38,579 --> 00:15:42,269
also includes just you know the ability

00:15:40,289 --> 00:15:43,410
to do really nice image cropping because

00:15:42,269 --> 00:15:44,699
of the response of nature you want to

00:15:43,410 --> 00:15:46,889
make sure that if you have an image that

00:15:44,699 --> 00:15:48,359
it looks good in all the different

00:15:46,889 --> 00:15:51,259
breakpoints that you're going to put in

00:15:48,359 --> 00:15:54,119
the site and certainly something that

00:15:51,259 --> 00:15:56,850
MLS is perhaps looking forward to in the

00:15:54,119 --> 00:15:58,350
future might be to look at taking

00:15:56,850 --> 00:16:01,379
advantage of some of the better

00:15:58,350 --> 00:16:03,569
editorial you I in Drupal 8 like I think

00:16:01,379 --> 00:16:04,979
in some cases you know editors would

00:16:03,569 --> 00:16:07,229
like to be able to use the quick edit

00:16:04,979 --> 00:16:09,419
feature for example and just be able to

00:16:07,229 --> 00:16:11,039
change a field or two certainly there's

00:16:09,419 --> 00:16:12,089
there's there's pros and cons so that's

00:16:11,039 --> 00:16:15,149
something that's you know maybe being

00:16:12,089 --> 00:16:17,639
thought of for down the road so Brian

00:16:15,149 --> 00:16:19,319
mentioned spiky traffic I think MLS

00:16:17,639 --> 00:16:21,629
definitely gets very very spiky traffic

00:16:19,319 --> 00:16:23,129
so there are big traffic spikes whenever

00:16:21,629 --> 00:16:25,139
big events happen when news about

00:16:23,129 --> 00:16:26,749
players comes out honestly when games

00:16:25,139 --> 00:16:29,039
happen you know when games are going on

00:16:26,749 --> 00:16:31,529
usually the league site itself as well

00:16:29,039 --> 00:16:35,189
as the club sites for the games that are

00:16:31,529 --> 00:16:37,109
going on get a big influx of traffic the

00:16:35,189 --> 00:16:38,909
league site itself represents about half

00:16:37,109 --> 00:16:41,159
the traffic on the platform so at any

00:16:38,909 --> 00:16:42,979
given time like that's one that will be

00:16:41,159 --> 00:16:46,229
getting a good majority of the traffic

00:16:42,979 --> 00:16:49,859
and so as a result this actually MLS is

00:16:46,229 --> 00:16:51,539
a great candidate for auto scaling so

00:16:49,859 --> 00:16:52,769
this also ties into the problem that

00:16:51,539 --> 00:16:55,859
Brian was talking about of having high

00:16:52,769 --> 00:16:57,749
infrastructure costs so when we got to

00:16:55,859 --> 00:16:59,129
MLS I really like this term that behind

00:16:57,749 --> 00:17:01,350
used they were they kind of had one foot

00:16:59,129 --> 00:17:04,649
in the cloud right there there Drupal 6

00:17:01,350 --> 00:17:06,389
platform was in rackspace on physical

00:17:04,649 --> 00:17:08,669
servers you know no real burstable

00:17:06,389 --> 00:17:10,470
capacity because again when the Drupal 6

00:17:08,669 --> 00:17:12,329
platform was started Rackspace was a

00:17:10,470 --> 00:17:14,519
great option and certainly you know they

00:17:12,329 --> 00:17:17,339
offer 24 x seven support there are some

00:17:14,519 --> 00:17:19,110
really nice perks to using them so

00:17:17,339 --> 00:17:21,360
drupal was over in Rackspace and then

00:17:19,110 --> 00:17:23,339
the new services that MLS was building

00:17:21,360 --> 00:17:25,740
the content API the stats ingestion

00:17:23,339 --> 00:17:28,620
pipeline all these things were being

00:17:25,740 --> 00:17:30,600
deployed to Amazon Web Services so yet

00:17:28,620 --> 00:17:33,120
Drupal was running in this big fixed set

00:17:30,600 --> 00:17:35,100
of servers that were configured and set

00:17:33,120 --> 00:17:36,480
up so they could handle the high end of

00:17:35,100 --> 00:17:38,129
that spiky traffic amount because

00:17:36,480 --> 00:17:39,480
obviously like with rackspace they can't

00:17:38,129 --> 00:17:42,000
like really rack servers for you quickly

00:17:39,480 --> 00:17:43,110
if you say oh man we're you know every

00:17:42,000 --> 00:17:44,549
team in the league is going to play next

00:17:43,110 --> 00:17:46,110
Sunday could you have a servers in a

00:17:44,549 --> 00:17:47,640
week they might be like that

00:17:46,110 --> 00:17:49,260
be a lot of money to get that set up you

00:17:47,640 --> 00:17:51,030
know they're they're not exactly as

00:17:49,260 --> 00:17:52,980
agile as you might like them to be in

00:17:51,030 --> 00:17:54,390
that case and for the physical

00:17:52,980 --> 00:17:56,370
infrastructure and rackspace you also

00:17:54,390 --> 00:17:59,670
had things like redundant firewalls

00:17:56,370 --> 00:18:01,770
redundant f5 load balancers netapp

00:17:59,670 --> 00:18:04,049
physical storage servers to handle the

00:18:01,770 --> 00:18:06,090
the files directory so basically it was

00:18:04,049 --> 00:18:09,179
a large infrastructure that really had a

00:18:06,090 --> 00:18:10,890
fixed amount of capacity in it so that

00:18:09,179 --> 00:18:13,230
really led to paying for all this

00:18:10,890 --> 00:18:15,179
capacity even when there wasn't a game

00:18:13,230 --> 00:18:16,500
going on or even worse when the season

00:18:15,179 --> 00:18:20,370
wasn't going on certainly mlssoccer.com

00:18:16,500 --> 00:18:22,200
is a great hub for news but you have you

00:18:20,370 --> 00:18:25,169
know less visits to the club sites when

00:18:22,200 --> 00:18:28,049
it's the offseason so you know this was

00:18:25,169 --> 00:18:29,910
a big driver for moving to AWS to be

00:18:28,049 --> 00:18:33,330
able to have everything in a single

00:18:29,910 --> 00:18:35,340
scalable cloud infrastructure you know

00:18:33,330 --> 00:18:37,140
one of the big benefits is autoscale

00:18:35,340 --> 00:18:39,600
instances and we'll talk about that in a

00:18:37,140 --> 00:18:41,130
second but honestly you know there are a

00:18:39,600 --> 00:18:44,040
lot of different providers these days

00:18:41,130 --> 00:18:46,080
that will give you linux servers at the

00:18:44,040 --> 00:18:47,190
click of a button right and certainly

00:18:46,080 --> 00:18:49,049
they're great for some purposes but like

00:18:47,190 --> 00:18:50,280
yeah you could go to digital ocean you

00:18:49,049 --> 00:18:53,040
could go to linode you could go to these

00:18:50,280 --> 00:18:55,380
places and get linux servers that you

00:18:53,040 --> 00:18:57,540
scale up and down the real operational

00:18:55,380 --> 00:18:59,250
benefits to your business through using

00:18:57,540 --> 00:19:01,260
something like AWS come in their

00:18:59,250 --> 00:19:05,190
ancillary services like how many people

00:19:01,260 --> 00:19:10,200
here manage MySQL servers on your own

00:19:05,190 --> 00:19:12,870
okay not a ton which I mean I I

00:19:10,200 --> 00:19:15,120
certainly don't want to and so you have

00:19:12,870 --> 00:19:17,010
things like Amazon RDS right so Amazon

00:19:15,120 --> 00:19:18,840
is not just will give you a bunch of

00:19:17,010 --> 00:19:20,669
disks will give you a bunch of instances

00:19:18,840 --> 00:19:24,120
they also have things like Amazon RDS

00:19:20,669 --> 00:19:26,850
which will save your bacon I have had

00:19:24,120 --> 00:19:28,770
Amazon RDS save me pretty handily

00:19:26,850 --> 00:19:30,570
because they will just handle like point

00:19:28,770 --> 00:19:31,980
in time restores I mean I know how to do

00:19:30,570 --> 00:19:34,380
that in a physical data center but to

00:19:31,980 --> 00:19:36,210
just have Amazon manage it and some you

00:19:34,380 --> 00:19:38,730
know somebody accidentally deletes 500

00:19:36,210 --> 00:19:40,830
articles you can restore to an hour ago

00:19:38,730 --> 00:19:42,780
you know that's all just built in so in

00:19:40,830 --> 00:19:44,700
addition to being a great platform for

00:19:42,780 --> 00:19:46,500
auto scaling and running Linux instances

00:19:44,700 --> 00:19:49,950
there are these other things that offer

00:19:46,500 --> 00:19:52,470
you a huge cost and time reduction to be

00:19:49,950 --> 00:19:55,890
able to run your business like Amazon

00:19:52,470 --> 00:19:58,770
RDS Amazon Elastic cash amazon s3 to

00:19:55,890 --> 00:19:59,610
store your files and all right so auto

00:19:58,770 --> 00:20:01,350
scaling

00:19:59,610 --> 00:20:02,940
how many people have ever like sat on

00:20:01,350 --> 00:20:05,070
the phone and just looked at a server

00:20:02,940 --> 00:20:07,110
graph when something was going on and

00:20:05,070 --> 00:20:08,880
been really stressed out about it okay

00:20:07,110 --> 00:20:10,950
that's not a place that you want to be

00:20:08,880 --> 00:20:12,870
right so auto-scaling has some awesome

00:20:10,950 --> 00:20:14,970
technical benefits but I think the

00:20:12,870 --> 00:20:17,790
number one benefit to auto scaling done

00:20:14,970 --> 00:20:19,980
well is reducing stress like we actually

00:20:17,790 --> 00:20:21,840
did get to the point where we could come

00:20:19,980 --> 00:20:23,820
in on a Monday morning and look at our

00:20:21,840 --> 00:20:25,470
monitoring system and say oh hey look we

00:20:23,820 --> 00:20:27,299
had some games on Sunday we auto scaled

00:20:25,470 --> 00:20:28,620
up to five instances and then it like

00:20:27,299 --> 00:20:30,000
ten o'clock at night the traffic had

00:20:28,620 --> 00:20:32,010
dropped off and we were back down to two

00:20:30,000 --> 00:20:34,710
instances so I really think that like

00:20:32,010 --> 00:20:36,780
the peace of mind for you for your

00:20:34,710 --> 00:20:38,130
engineers for your ops team is one of

00:20:36,780 --> 00:20:41,100
the biggest reasons to go to auto

00:20:38,130 --> 00:20:43,230
scaling another benefit even before we

00:20:41,100 --> 00:20:45,330
talk about kind of the scaling part of

00:20:43,230 --> 00:20:47,250
it is the automatic healing if you have

00:20:45,330 --> 00:20:49,320
two servers at least in an auto scaling

00:20:47,250 --> 00:20:51,540
group and one of them just dies for

00:20:49,320 --> 00:20:54,240
whatever reason AWS will bring it back

00:20:51,540 --> 00:20:56,250
up so you know I mean certainly stuff

00:20:54,240 --> 00:20:57,390
happens in data centers you know you

00:20:56,250 --> 00:20:58,799
might get a notice that your host is

00:20:57,390 --> 00:21:00,570
going to go away where what I serve is

00:20:58,799 --> 00:21:02,910
running once you get to the point that

00:21:00,570 --> 00:21:04,740
you have your set up so that you can do

00:21:02,910 --> 00:21:05,669
auto scaling it is a fantastic way to

00:21:04,740 --> 00:21:08,309
also make your infrastructure

00:21:05,669 --> 00:21:09,419
self-healing so then the reason that

00:21:08,309 --> 00:21:11,250
most people use it though is for the

00:21:09,419 --> 00:21:13,860
performance the fact that you can scale

00:21:11,250 --> 00:21:15,600
up and down and you can automatically

00:21:13,860 --> 00:21:16,890
scale based on certain criteria and

00:21:15,600 --> 00:21:18,240
that's mostly what we did at mls we

00:21:16,890 --> 00:21:20,190
would say based on a certain CPU

00:21:18,240 --> 00:21:22,110
threshold if the average goes over this

00:21:20,190 --> 00:21:24,900
amount add a new instance into the pool

00:21:22,110 --> 00:21:26,070
for Drupal sites CPUs a pretty good

00:21:24,900 --> 00:21:28,350
indicator but you can actually use

00:21:26,070 --> 00:21:29,610
anything that Amazon can monitor another

00:21:28,350 --> 00:21:32,010
great thing though is that you can also

00:21:29,610 --> 00:21:34,860
do manual scaling right like if you know

00:21:32,010 --> 00:21:37,260
we have five games going on with the

00:21:34,860 --> 00:21:39,000
five biggest teams in the league you can

00:21:37,260 --> 00:21:41,370
also be like let's just scale up to six

00:21:39,000 --> 00:21:42,960
ahead of time pay Amazon an extra 30

00:21:41,370 --> 00:21:45,090
bucks this month and then scale it back

00:21:42,960 --> 00:21:46,620
down in four hours so again that kind of

00:21:45,090 --> 00:21:48,870
goes back to the peace of mind you can

00:21:46,620 --> 00:21:51,030
preemptively and proactively scale in

00:21:48,870 --> 00:21:53,070
addition to doing it in response to

00:21:51,030 --> 00:21:54,840
monitoring events and of course this all

00:21:53,070 --> 00:21:56,490
leads to cost benefits if you're only

00:21:54,840 --> 00:21:58,110
running like two small instances and

00:21:56,490 --> 00:21:59,640
then you can burst up to say six small

00:21:58,110 --> 00:22:04,500
instances when you need it you're going

00:21:59,640 --> 00:22:05,910
to pay a lot less on average so a way

00:22:04,500 --> 00:22:08,790
that people like to use is to talk about

00:22:05,910 --> 00:22:10,950
cattle and not pets that you should

00:22:08,790 --> 00:22:13,350
build cattle and not pets and the reason

00:22:10,950 --> 00:22:14,789
behind this is that it is a shift in how

00:22:13,350 --> 00:22:17,460
you think how many people here have ever

00:22:14,789 --> 00:22:20,340
had a pet you really love and you

00:22:17,460 --> 00:22:22,140
lavished attention on okay you if you're

00:22:20,340 --> 00:22:24,000
going to use auto scaling you don't want

00:22:22,140 --> 00:22:25,230
your servers to be pets because of that

00:22:24,000 --> 00:22:27,299
connection like you have a server that's

00:22:25,230 --> 00:22:29,400
a pet probably has a name you're really

00:22:27,299 --> 00:22:30,780
attached to it if it went away you'd be

00:22:29,400 --> 00:22:32,730
really sad like your primary database

00:22:30,780 --> 00:22:34,320
server is probably a pet and that's okay

00:22:32,730 --> 00:22:36,690
like you don't want that to go away but

00:22:34,320 --> 00:22:39,120
your web servers should be cattle right

00:22:36,690 --> 00:22:41,669
they should be ready to be shipped off

00:22:39,120 --> 00:22:44,820
for processing when their time has come

00:22:41,669 --> 00:22:46,590
but this is a real term that's used I

00:22:44,820 --> 00:22:48,090
didn't make this up but if you ever read

00:22:46,590 --> 00:22:50,730
something about cattle not pet basically

00:22:48,090 --> 00:22:53,220
ideas is that it's a mind shift that for

00:22:50,730 --> 00:22:54,659
at least like the application servers in

00:22:53,220 --> 00:22:56,940
the case of Drupal like the servers

00:22:54,659 --> 00:22:58,440
where your lamp stack or lamp stack is

00:22:56,940 --> 00:22:59,880
running you have to know that they're

00:22:58,440 --> 00:23:01,289
ephemeral right because the thing about

00:22:59,880 --> 00:23:02,909
auto scaling is that at any time a new

00:23:01,289 --> 00:23:04,440
instance could come up or an instance

00:23:02,909 --> 00:23:07,530
that came up in response to a traffic

00:23:04,440 --> 00:23:09,600
spike could just go away so it really

00:23:07,530 --> 00:23:12,270
does change how you have to think about

00:23:09,600 --> 00:23:14,549
like doing your builds so when we got to

00:23:12,270 --> 00:23:17,880
MLS MLS because they were looking at

00:23:14,549 --> 00:23:18,990
moving to AWS had already kind of you

00:23:17,880 --> 00:23:21,390
know gotten to a point where they had an

00:23:18,990 --> 00:23:24,510
auto scaling setup but it was not

00:23:21,390 --> 00:23:25,770
necessarily working all that well one of

00:23:24,510 --> 00:23:27,840
the big problems with the setup that was

00:23:25,770 --> 00:23:29,820
there was that it would take a new

00:23:27,840 --> 00:23:32,010
Amazon instance from completely scratch

00:23:29,820 --> 00:23:33,690
like nothing installed on it and install

00:23:32,010 --> 00:23:35,130
everything using its config manager and

00:23:33,690 --> 00:23:36,659
then put the build of Drupal on there

00:23:35,130 --> 00:23:38,370
and at that point you'd be ready to go

00:23:36,659 --> 00:23:39,750
the problem was that sometimes under

00:23:38,370 --> 00:23:41,549
load you would take more than like five

00:23:39,750 --> 00:23:43,620
minutes to do that and if you really

00:23:41,549 --> 00:23:45,720
need new traffic you know right now you

00:23:43,620 --> 00:23:47,730
need new servers to handle that that

00:23:45,720 --> 00:23:48,840
just you know that isn't enough time so

00:23:47,730 --> 00:23:51,210
phase two came in and said hey let's

00:23:48,840 --> 00:23:53,640
move to a fat build where we build in

00:23:51,210 --> 00:23:55,770
all the software the Drupal code itself

00:23:53,640 --> 00:23:57,809
and we do that every time that we have a

00:23:55,770 --> 00:24:00,539
build you know ready to go to master and

00:23:57,809 --> 00:24:02,159
that way an am I can come up even if

00:24:00,539 --> 00:24:03,929
everything else is down like if the

00:24:02,159 --> 00:24:05,400
config management servers down doesn't

00:24:03,929 --> 00:24:08,340
matter we have an ami that has all their

00:24:05,400 --> 00:24:09,960
dependencies if we can't get access to

00:24:08,340 --> 00:24:11,220
hard Drupal source code repo doesn't

00:24:09,960 --> 00:24:13,140
matter because we've already built it

00:24:11,220 --> 00:24:14,460
into the am I basically if anything else

00:24:13,140 --> 00:24:17,100
is down or there's some kind of problem

00:24:14,460 --> 00:24:18,720
it won't matter and you'll be able to

00:24:17,100 --> 00:24:20,820
access it so I am actually giving us

00:24:18,720 --> 00:24:22,260
talk tomorrow that is about immutable

00:24:20,820 --> 00:24:24,630
infrastructure and how you can run

00:24:22,260 --> 00:24:26,460
Drupal using Amazon auto scaling or

00:24:24,630 --> 00:24:27,210
using docker and a scheduler so if you'd

00:24:26,460 --> 00:24:28,260
like to

00:24:27,210 --> 00:24:31,470
see some more about that I'm presenting

00:24:28,260 --> 00:24:33,090
tomorrow so here's some examples of what

00:24:31,470 --> 00:24:35,789
we're looking at we turned auto scaling

00:24:33,090 --> 00:24:38,850
on for MLS the top line on this graph is

00:24:35,789 --> 00:24:40,500
the load average so that's basically the

00:24:38,850 --> 00:24:42,750
number of processes that running at any

00:24:40,500 --> 00:24:45,929
given time and the bottom line is the

00:24:42,750 --> 00:24:47,940
number of auto scaling instances so you

00:24:45,929 --> 00:24:49,890
can see that the bottom line for the

00:24:47,940 --> 00:24:53,580
number of auto scaling instances is too

00:24:49,890 --> 00:24:54,570
and it sometimes tix up to four when

00:24:53,580 --> 00:24:55,710
there's traffic you can see that

00:24:54,570 --> 00:24:58,289
actually like for the first couple days

00:24:55,710 --> 00:24:59,909
in this graph there's basically an

00:24:58,289 --> 00:25:01,350
average of two auto scaling instances

00:24:59,909 --> 00:25:03,149
then for a little while it jumps up to

00:25:01,350 --> 00:25:04,950
needing three to handle the traffic then

00:25:03,149 --> 00:25:06,270
it goes back down at a couple points

00:25:04,950 --> 00:25:07,710
those are probably weekends when there's

00:25:06,270 --> 00:25:09,779
like games going on it has to go up to

00:25:07,710 --> 00:25:11,279
four instances but again this all just

00:25:09,779 --> 00:25:12,899
happens automatically we could come in

00:25:11,279 --> 00:25:14,669
on a Monday morning and say oh cool you

00:25:12,899 --> 00:25:16,230
know we went up to for the average on

00:25:14,669 --> 00:25:18,779
this graph it's kind of hard to see but

00:25:16,230 --> 00:25:20,580
is like 2.3 so this means that you know

00:25:18,779 --> 00:25:22,710
MLS on average is paying for like two

00:25:20,580 --> 00:25:24,929
point three instances and not four of

00:25:22,710 --> 00:25:26,429
them which is what they had before then

00:25:24,929 --> 00:25:27,929
we later did some other performance

00:25:26,429 --> 00:25:29,279
tweaks and we got it to the point where

00:25:27,929 --> 00:25:30,450
you can maybe guess where the

00:25:29,279 --> 00:25:31,890
performance tweaks rolled out because

00:25:30,450 --> 00:25:34,020
the number of instances just goes to 2

00:25:31,890 --> 00:25:35,340
and so generally even for some pretty

00:25:34,020 --> 00:25:36,870
spiky traffic like that's a whole week

00:25:35,340 --> 00:25:38,700
at the end of the graph we could handle

00:25:36,870 --> 00:25:40,770
it with just two so this is some really

00:25:38,700 --> 00:25:42,360
great peace of mind all right poor

00:25:40,770 --> 00:25:45,210
performance how many people have ever

00:25:42,360 --> 00:25:47,940
had an editor come to you and say Drupal

00:25:45,210 --> 00:25:51,690
is doggin it is so slow when I hit

00:25:47,940 --> 00:25:53,580
submit on this page okay it's a thing

00:25:51,690 --> 00:25:55,289
that happens sometimes right and we

00:25:53,580 --> 00:25:57,480
certainly had that too you know we

00:25:55,289 --> 00:25:59,429
gotten to the point where our

00:25:57,480 --> 00:26:00,870
performance was pretty good for visitors

00:25:59,429 --> 00:26:02,940
to the site but editors had some

00:26:00,870 --> 00:26:04,740
problems and i will say another thing

00:26:02,940 --> 00:26:07,380
that mls toyed with and i say this just

00:26:04,740 --> 00:26:08,640
kind of as a cautionary tale at one

00:26:07,380 --> 00:26:10,890
point and you can still read the blog

00:26:08,640 --> 00:26:12,029
post about this on MLS was actually

00:26:10,890 --> 00:26:13,559
serving traffic out of two different

00:26:12,029 --> 00:26:17,029
regions they said hey let's serve stuff

00:26:13,559 --> 00:26:19,080
out of Virginia and out of Oregon that

00:26:17,029 --> 00:26:20,520
eventually ended up having some problems

00:26:19,080 --> 00:26:21,870
just mainly due to cash's right like

00:26:20,520 --> 00:26:23,070
dribbles full of caches and then if you

00:26:21,870 --> 00:26:24,539
have like a whole setup over here in

00:26:23,070 --> 00:26:27,390
Oregon and a whole set up over here in

00:26:24,539 --> 00:26:29,940
Virginia so that actually resulted in

00:26:27,390 --> 00:26:31,770
some extra like cash clearing stuff

00:26:29,940 --> 00:26:34,080
being put into the code base which later

00:26:31,770 --> 00:26:35,250
came back to cause some of the slow

00:26:34,080 --> 00:26:37,500
performance so we actually found one

00:26:35,250 --> 00:26:39,090
case where like when an editor hit save

00:26:37,500 --> 00:26:41,070
it was clearing all of Drupal's caches

00:26:39,090 --> 00:26:43,080
three times I was taken like 10 second

00:26:41,070 --> 00:26:45,149
and we managed to get that out of there

00:26:43,080 --> 00:26:47,070
and we actually at the time when you

00:26:45,149 --> 00:26:48,570
came in some Drupal pages were taking

00:26:47,070 --> 00:26:50,549
more than a second to load if you didn't

00:26:48,570 --> 00:26:53,669
like and we managed to track that down

00:26:50,549 --> 00:26:55,230
so a couple of quick things that we did

00:26:53,669 --> 00:26:57,029
when we first started working with MLS's

00:26:55,230 --> 00:27:00,059
we just wanted to say hey are we using

00:26:57,029 --> 00:27:02,159
the right AWS instances Emma less was

00:27:00,059 --> 00:27:04,380
using em for instance types which are

00:27:02,159 --> 00:27:07,980
kind of a good balance of memory and

00:27:04,380 --> 00:27:09,659
network and CPU drupal loves cpu in

00:27:07,980 --> 00:27:11,970
general though so we said hey let's use

00:27:09,659 --> 00:27:14,340
the cpu optimize the c-4 class of

00:27:11,970 --> 00:27:17,669
instances combining that and upgrading

00:27:14,340 --> 00:27:19,799
to PHP 55 from 53 actually got a forty

00:27:17,669 --> 00:27:21,299
percent increase in performance with a

00:27:19,799 --> 00:27:22,590
slightly lower hosting bill because the

00:27:21,299 --> 00:27:25,019
see instances are just a little bit

00:27:22,590 --> 00:27:26,970
cheaper and we also did a couple things

00:27:25,019 --> 00:27:28,230
like ripped out one of the for caching

00:27:26,970 --> 00:27:30,000
layers that was there because it really

00:27:28,230 --> 00:27:32,129
wasn't helping out so this is really

00:27:30,000 --> 00:27:33,539
just to say that you know it's possible

00:27:32,129 --> 00:27:34,710
to spell like upgrading a PHP version

00:27:33,539 --> 00:27:36,330
then you could get a pretty decent

00:27:34,710 --> 00:27:39,600
increase in performance for your

00:27:36,330 --> 00:27:41,519
platform so don't count that out we also

00:27:39,600 --> 00:27:44,639
did a lot of load testing and using

00:27:41,519 --> 00:27:46,769
application monitoring tools we had at

00:27:44,639 --> 00:27:48,870
one point enable the thing that was

00:27:46,769 --> 00:27:50,279
trying to do DB read/write splits was

00:27:48,870 --> 00:27:52,230
actually help hurting more than it was

00:27:50,279 --> 00:27:54,269
helping we looked at increasing the size

00:27:52,230 --> 00:27:55,799
of their memcache pool and killing off

00:27:54,269 --> 00:27:57,059
some that legacy code that I was talking

00:27:55,799 --> 00:28:00,120
about and so at one point we were able

00:27:57,059 --> 00:28:02,879
to reduce the instant sizes by half and

00:28:00,120 --> 00:28:04,799
also in decrease the page render times

00:28:02,879 --> 00:28:06,480
by a pretty big amount so here's

00:28:04,799 --> 00:28:08,429
actually some stuff that Brian put

00:28:06,480 --> 00:28:13,559
together for MLS management to talk

00:28:08,429 --> 00:28:16,950
about the work that we did so this chart

00:28:13,559 --> 00:28:23,610
it's from our application monitoring

00:28:16,950 --> 00:28:27,419
tool New Relic and it kind of summarizes

00:28:23,610 --> 00:28:30,899
our our efforts towards optimization and

00:28:27,419 --> 00:28:32,730
performance and performance increase so

00:28:30,899 --> 00:28:35,279
this arrow here represents when he

00:28:32,730 --> 00:28:37,889
actually installed a monitoring tool we

00:28:35,279 --> 00:28:39,509
did not have one that mounted actual

00:28:37,889 --> 00:28:42,059
real time application performance like

00:28:39,509 --> 00:28:46,230
how the health of the server is doing at

00:28:42,059 --> 00:28:47,129
any moment currently in the past so once

00:28:46,230 --> 00:28:49,889
we installed that we had great

00:28:47,129 --> 00:28:51,240
visibility into how poorly our

00:28:49,889 --> 00:28:53,429
application was performing but

00:28:51,240 --> 00:28:54,840
specifically what was slow inside of

00:28:53,429 --> 00:28:58,120
your

00:28:54,840 --> 00:29:00,340
during this time period we were doing

00:28:58,120 --> 00:29:04,390
our analysis these red bands represent

00:29:00,340 --> 00:29:05,980
degraded server performance that that

00:29:04,390 --> 00:29:08,230
may or may not correlate to UX

00:29:05,980 --> 00:29:10,330
experience so these red bands are

00:29:08,230 --> 00:29:11,980
indicators that something's wrong and as

00:29:10,330 --> 00:29:15,970
you can see we really were hovering

00:29:11,980 --> 00:29:18,309
between like a one to two seconds

00:29:15,970 --> 00:29:19,990
basically so at the end of this during

00:29:18,309 --> 00:29:21,789
this process we are we were doing our

00:29:19,990 --> 00:29:24,130
analysis and we came up with it at the

00:29:21,789 --> 00:29:27,309
end here with three root causes these

00:29:24,130 --> 00:29:31,630
root causes can kind of be summed up

00:29:27,309 --> 00:29:35,279
this as follows we had AWS cloud caching

00:29:31,630 --> 00:29:38,110
configuration that was suboptimal we had

00:29:35,279 --> 00:29:40,779
and in that actually just equated to our

00:29:38,110 --> 00:29:43,419
memcache settings basically and in

00:29:40,779 --> 00:29:46,289
Amazon that's elastic ish we had we saw

00:29:43,419 --> 00:29:49,179
that there was a there was inefficient

00:29:46,289 --> 00:29:55,990
database access happening through our

00:29:49,179 --> 00:29:58,600
application database libraries and third

00:29:55,990 --> 00:30:01,390
was there was a handful of top

00:29:58,600 --> 00:30:03,640
destination sites that were responsible

00:30:01,390 --> 00:30:05,679
for the overall slowdown of the entire

00:30:03,640 --> 00:30:07,210
site and so these were pages that were

00:30:05,679 --> 00:30:10,870
frequently accessed things like our

00:30:07,210 --> 00:30:14,649
schedule page or things like our stats

00:30:10,870 --> 00:30:17,110
page so by addressing and focusing and

00:30:14,649 --> 00:30:20,049
prioritizing our optimization efforts

00:30:17,110 --> 00:30:23,890
towards those top worst performing pages

00:30:20,049 --> 00:30:25,720
we ended up create lee reducing a

00:30:23,890 --> 00:30:28,299
response time so each one of these

00:30:25,720 --> 00:30:30,870
arrows represents a build that had a fix

00:30:28,299 --> 00:30:34,929
for the aforementioned root causes and

00:30:30,870 --> 00:30:37,899
the net net is that we were at between

00:30:34,929 --> 00:30:40,570
250 milliseconds to 500 milliseconds of

00:30:37,899 --> 00:30:42,279
server response time that's not the

00:30:40,570 --> 00:30:44,220
greatest you know I've worked on sites

00:30:42,279 --> 00:30:47,590
that were much faster but this is a fact

00:30:44,220 --> 00:30:52,090
to fold and you know decrease and it was

00:30:47,590 --> 00:30:54,159
pretty um it was pretty a pivotal in

00:30:52,090 --> 00:30:56,730
getting us into the direction that we

00:30:54,159 --> 00:30:56,730
wanted to go

00:31:00,179 --> 00:31:06,730
cool so yeah as Brian mentioned you know

00:31:04,210 --> 00:31:08,409
MLS has a lot of awesome tech going on

00:31:06,730 --> 00:31:09,909
and as Brian mentioned this is still

00:31:08,409 --> 00:31:11,890
something that MLS is kind of working to

00:31:09,909 --> 00:31:13,390
alleviate is the complexity but really I

00:31:11,890 --> 00:31:15,100
think you know the biggest thing and one

00:31:13,390 --> 00:31:17,440
of the things that MLS is working on now

00:31:15,100 --> 00:31:20,500
is that you've got like you know Drupal

00:31:17,440 --> 00:31:25,299
world over here which is Drupal 6 and 7

00:31:20,500 --> 00:31:27,880
PHP 51 or 55 now using Jenkins for build

00:31:25,299 --> 00:31:30,010
salt for deployment building amazon am

00:31:27,880 --> 00:31:31,510
is for doing that auto scaling then on

00:31:30,010 --> 00:31:34,090
the other side you got like the services

00:31:31,510 --> 00:31:35,529
side which are go and node based those

00:31:34,090 --> 00:31:37,870
were already set up using docker and

00:31:35,529 --> 00:31:39,100
using core OS and fleet so basically you

00:31:37,870 --> 00:31:40,809
know one of the problems was that like

00:31:39,100 --> 00:31:43,980
in order to be able to fully understand

00:31:40,809 --> 00:31:47,679
the platform you had to know salt and

00:31:43,980 --> 00:31:48,519
Jenkins and team City and docker and am

00:31:47,679 --> 00:31:50,110
eyes like there was a lot of different

00:31:48,519 --> 00:31:51,820
stuff on different sides of the stack so

00:31:50,110 --> 00:31:54,070
although we didn't finish you know

00:31:51,820 --> 00:31:55,059
getting that addressed in this year

00:31:54,070 --> 00:31:58,269
that's something that I'm alas is

00:31:55,059 --> 00:32:01,210
working on quite a bit so the biggest

00:31:58,269 --> 00:32:03,340
challenge I think was migration when we

00:32:01,210 --> 00:32:05,230
got to MLS there were actually three

00:32:03,340 --> 00:32:07,059
clubs that were already in AWS even

00:32:05,230 --> 00:32:08,830
without auto scaling that were on the

00:32:07,059 --> 00:32:11,590
Drupal 7 platform and editors were using

00:32:08,830 --> 00:32:13,269
them Seattle actually had originally

00:32:11,590 --> 00:32:14,559
been running their own website up to

00:32:13,269 --> 00:32:16,720
this point so they actually were the

00:32:14,559 --> 00:32:18,279
first to be migrated and then orlando

00:32:16,720 --> 00:32:20,139
and New York City Football Club were new

00:32:18,279 --> 00:32:23,049
to the league so they actually were on

00:32:20,139 --> 00:32:25,659
mp7 there was not a legacy Drupal 6 site

00:32:23,049 --> 00:32:29,080
to migrate from but figuring out how to

00:32:25,659 --> 00:32:31,149
do this migration was really quite a big

00:32:29,080 --> 00:32:32,470
project management lift Bob you know we

00:32:31,149 --> 00:32:34,690
had to talk with the stakeholders from

00:32:32,470 --> 00:32:36,279
the clubs from the league we ended up

00:32:34,690 --> 00:32:39,190
actually deciding that we would try to

00:32:36,279 --> 00:32:41,289
have four different groups of sites to

00:32:39,190 --> 00:32:42,610
be migrated and that you know basically

00:32:41,289 --> 00:32:45,789
for each of the groups we'd get a

00:32:42,610 --> 00:32:47,529
timeline where we would do overnight

00:32:45,789 --> 00:32:48,940
migrations whenever a site was in

00:32:47,529 --> 00:32:51,370
migration we would continually migrate

00:32:48,940 --> 00:32:52,510
from Drupal 6 to Drupal 7 using a

00:32:51,370 --> 00:32:53,980
migrate that was built on top of the

00:32:52,510 --> 00:32:55,450
migrate module that kicked off using

00:32:53,980 --> 00:32:57,580
Jenkins and that way we could

00:32:55,450 --> 00:32:59,139
continually be putting the new data into

00:32:57,580 --> 00:33:01,179
the Drupal 7 site so that editors would

00:32:59,139 --> 00:33:03,220
have the stuff that they had in their

00:33:01,179 --> 00:33:04,659
old platform in the new one and then

00:33:03,220 --> 00:33:08,740
they would get training on how to use

00:33:04,659 --> 00:33:09,850
the new site and the new system another

00:33:08,740 --> 00:33:11,529
thing we had to figure out like with

00:33:09,850 --> 00:33:12,010
this group of four different sets of

00:33:11,529 --> 00:33:13,720
migration

00:33:12,010 --> 00:33:15,190
was how to work around Club schedules

00:33:13,720 --> 00:33:16,690
because certain like you've got big

00:33:15,190 --> 00:33:18,130
games you've got big events for each one

00:33:16,690 --> 00:33:20,040
of the clubs so that actually took a lot

00:33:18,130 --> 00:33:23,320
of work to do in that case as well a

00:33:20,040 --> 00:33:27,970
really huge part of this too was that

00:33:23,320 --> 00:33:30,490
MLS has a a fairly small tech team in

00:33:27,970 --> 00:33:33,640
terms of developers but then MLS also

00:33:30,490 --> 00:33:36,310
has a group called digital club services

00:33:33,640 --> 00:33:38,500
and really digital club services was a

00:33:36,310 --> 00:33:39,880
fantastic help and their group during

00:33:38,500 --> 00:33:42,160
the course of this actually doubled in

00:33:39,880 --> 00:33:44,260
size just because they were such an

00:33:42,160 --> 00:33:45,970
important asset so that you know they

00:33:44,260 --> 00:33:48,940
were not Drupal developers but they were

00:33:45,970 --> 00:33:52,060
really you know they knew the CMS and

00:33:48,940 --> 00:33:54,040
know the CMS inside and out so you know

00:33:52,060 --> 00:33:55,330
they were the ones who did training for

00:33:54,040 --> 00:33:56,320
the clubs like when we had a group of

00:33:55,330 --> 00:33:58,300
three clubs we knew were going to

00:33:56,320 --> 00:34:00,370
migrate we said hey okay digital club

00:33:58,300 --> 00:34:02,500
services is going to help you by giving

00:34:00,370 --> 00:34:04,240
you training by showing you how to set

00:34:02,500 --> 00:34:05,560
up your you know your schedule page your

00:34:04,240 --> 00:34:07,270
tickets page all the you know the

00:34:05,560 --> 00:34:09,550
standard pages the club's wanted to come

00:34:07,270 --> 00:34:11,740
in in addition they're also really

00:34:09,550 --> 00:34:13,090
deeply integrated into the like

00:34:11,740 --> 00:34:14,800
development team in the development

00:34:13,090 --> 00:34:16,899
workflow so the thing is like that they

00:34:14,800 --> 00:34:20,110
kind of act as a tier one support desk

00:34:16,899 --> 00:34:21,850
like if an editor in Vancouver Houston

00:34:20,110 --> 00:34:23,050
has a problem they don't actually like

00:34:21,850 --> 00:34:24,490
go right to the developers they will

00:34:23,050 --> 00:34:26,620
actually go to digital club services and

00:34:24,490 --> 00:34:29,200
say hey I'm having trouble doing this

00:34:26,620 --> 00:34:30,909
thing what should I do and the really

00:34:29,200 --> 00:34:32,320
great thing about like as Brian said of

00:34:30,909 --> 00:34:34,750
like building the centralized team

00:34:32,320 --> 00:34:36,610
inside of MLS digital is that usually if

00:34:34,750 --> 00:34:38,830
someone has a problem you know an editor

00:34:36,610 --> 00:34:40,270
has a problem that digital Club services

00:34:38,830 --> 00:34:42,129
going to say one of three things one

00:34:40,270 --> 00:34:44,530
will be oh here's how you do that and

00:34:42,129 --> 00:34:47,860
then it solved which is great the second

00:34:44,530 --> 00:34:49,300
one but might be oh that's a bug will

00:34:47,860 --> 00:34:50,649
help you work around that and then we

00:34:49,300 --> 00:34:53,139
will make sure that this gets addressed

00:34:50,649 --> 00:34:54,129
as soon as possible you know so if it's

00:34:53,139 --> 00:34:56,020
a known issue they might have a

00:34:54,129 --> 00:34:59,650
workaround or then yeah they might just

00:34:56,020 --> 00:35:02,260
say okay you know that is a bug but it's

00:34:59,650 --> 00:35:04,270
planned to be released next week or next

00:35:02,260 --> 00:35:06,550
month so you know they were the ones who

00:35:04,270 --> 00:35:07,900
actually helped us to kind of figure out

00:35:06,550 --> 00:35:09,940
what were the pressing issues that

00:35:07,900 --> 00:35:12,340
editors were facing which is important

00:35:09,940 --> 00:35:14,590
when you have 21 different like editor

00:35:12,340 --> 00:35:18,100
communities that are using this digital

00:35:14,590 --> 00:35:20,110
platform another big thing about this

00:35:18,100 --> 00:35:24,160
how many people here know about Drupal

00:35:20,110 --> 00:35:25,460
multi-site all right and how many

00:35:24,160 --> 00:35:27,020
wheeler have heard have her

00:35:25,460 --> 00:35:29,900
word to both good and bad things about

00:35:27,020 --> 00:35:32,180
Drupal multi-site yeah it's kind of a

00:35:29,900 --> 00:35:35,420
polarizing thing and there's good

00:35:32,180 --> 00:35:37,849
reasons for that so MLS the Drupal 7

00:35:35,420 --> 00:35:39,560
platform was not originally a Drupal

00:35:37,849 --> 00:35:40,609
multi-site when we got there and again

00:35:39,560 --> 00:35:43,190
when we got there there were really only

00:35:40,609 --> 00:35:45,680
three clubs on it and the league site

00:35:43,190 --> 00:35:47,030
was in beta but we knew that we had to

00:35:45,680 --> 00:35:48,530
like get it a little more stable before

00:35:47,030 --> 00:35:52,670
we actually flipped the switch on the

00:35:48,530 --> 00:35:55,070
league website so we took a look at the

00:35:52,670 --> 00:35:56,990
site itself and said you know what this

00:35:55,070 --> 00:35:58,880
actually would make sense as a Drupal

00:35:56,990 --> 00:36:01,339
multi-site so when you're considering

00:35:58,880 --> 00:36:04,339
drupal multi-site you do have to think

00:36:01,339 --> 00:36:07,280
about your audience about what level of

00:36:04,339 --> 00:36:09,170
you know differentiation your different

00:36:07,280 --> 00:36:10,670
stakeholders will have in terms of like

00:36:09,170 --> 00:36:11,990
do they need different versions of

00:36:10,670 --> 00:36:14,869
modules are they going to want to have

00:36:11,990 --> 00:36:17,210
very different themes but honestly given

00:36:14,869 --> 00:36:19,940
that mls digital basically runs this as

00:36:17,210 --> 00:36:21,830
a service to their clubs right none of

00:36:19,940 --> 00:36:23,990
the club's have web development

00:36:21,830 --> 00:36:26,510
resources like it's not like Seattle's

00:36:23,990 --> 00:36:27,619
like I want panels 5 in context for and

00:36:26,510 --> 00:36:28,730
I want to do this like those are the

00:36:27,619 --> 00:36:30,410
kinds of things that make Drupal

00:36:28,730 --> 00:36:32,150
multi-site hard when it's like every

00:36:30,410 --> 00:36:34,790
site wants like a different module or

00:36:32,150 --> 00:36:36,920
different versions of contribs but in

00:36:34,790 --> 00:36:38,660
the case of MLS like MLS digital really

00:36:36,920 --> 00:36:40,490
is a service provider to the clubs and

00:36:38,660 --> 00:36:43,369
so we said hey this actually makes

00:36:40,490 --> 00:36:45,470
perfect sense as a multi-site because

00:36:43,369 --> 00:36:48,410
you know we even talked before there's

00:36:45,470 --> 00:36:50,300
like a MP 7 theme that everyone inherits

00:36:48,410 --> 00:36:53,240
from and that makes sure that you are on

00:36:50,300 --> 00:36:54,589
brand that your stuff works to all these

00:36:53,240 --> 00:36:56,930
responsive break points that have been

00:36:54,589 --> 00:36:58,640
defined so with that we said okay will

00:36:56,930 --> 00:36:59,960
migrate the first couple sites will do

00:36:58,640 --> 00:37:01,430
them not as a multi-site but down the

00:36:59,960 --> 00:37:04,040
road it's actually going to make sense

00:37:01,430 --> 00:37:06,890
to run as a multi-site and by going to a

00:37:04,040 --> 00:37:08,560
multi-site you got a couple things it

00:37:06,890 --> 00:37:11,420
helps save server resources for one

00:37:08,560 --> 00:37:13,609
Drupal caches all of its well PHP caches

00:37:11,420 --> 00:37:15,020
all of the Drupal code into memory and

00:37:13,609 --> 00:37:16,220
so if we were gonna have like 21

00:37:15,020 --> 00:37:17,570
different sites that we figure there's

00:37:16,220 --> 00:37:19,250
going to be like a gig of memory that we

00:37:17,570 --> 00:37:21,020
could otherwise get back if we used a

00:37:19,250 --> 00:37:23,119
multi-site it also just made the

00:37:21,020 --> 00:37:25,070
deployed smaller like certainly all

00:37:23,119 --> 00:37:26,480
these different themes with different

00:37:25,070 --> 00:37:28,070
node modules folders and things and then

00:37:26,480 --> 00:37:30,710
different copies of the Drupal code base

00:37:28,070 --> 00:37:33,260
and the same contribs if you repeat

00:37:30,710 --> 00:37:35,210
those like 21 times you know I think our

00:37:33,260 --> 00:37:36,349
builds were like 400 Meg's when we got

00:37:35,210 --> 00:37:38,099
started and then when we rolled out a

00:37:36,349 --> 00:37:40,940
multi-site like a builder's like 30 meg

00:37:38,099 --> 00:37:44,069
so it just really made a ton of sense

00:37:40,940 --> 00:37:45,720
yeah and as I said that is because there

00:37:44,069 --> 00:37:47,519
is no bespoke development in each Club

00:37:45,720 --> 00:37:49,890
and it really helped like centralized

00:37:47,519 --> 00:37:53,400
future development and another huge

00:37:49,890 --> 00:37:56,640
thing about this is that so the MLS site

00:37:53,400 --> 00:37:58,680
platform has 21 different Club sorry 20

00:37:56,640 --> 00:38:00,599
clubs and the league and honestly just

00:37:58,680 --> 00:38:03,509
six people support it like there are

00:38:00,599 --> 00:38:05,249
four digital Club services folks who are

00:38:03,509 --> 00:38:06,960
tier one who work with the editors who

00:38:05,249 --> 00:38:08,160
work to help prioritize development and

00:38:06,960 --> 00:38:10,589
at this point there's two drupal

00:38:08,160 --> 00:38:12,989
developers that are supporting like a 21

00:38:10,589 --> 00:38:15,059
site platform for a major sports league

00:38:12,989 --> 00:38:17,759
in America so I think this

00:38:15,059 --> 00:38:19,289
centralization both of the code and as

00:38:17,759 --> 00:38:20,970
Brian said of the teams that are working

00:38:19,289 --> 00:38:22,710
together has really made it so that you

00:38:20,970 --> 00:38:25,470
know the day-to-day operations and the

00:38:22,710 --> 00:38:26,910
work on the platform itself can really

00:38:25,470 --> 00:38:29,880
just be done by six people which is

00:38:26,910 --> 00:38:32,640
pretty great so a quick overview of our

00:38:29,880 --> 00:38:34,380
our milestones we started in march in

00:38:32,640 --> 00:38:37,289
april we launched the new york red bulls

00:38:34,380 --> 00:38:39,359
site they were the first one to be the

00:38:37,289 --> 00:38:41,160
ones that we migrated in july we turned

00:38:39,359 --> 00:38:42,719
on auto scaling we worked from April and

00:38:41,160 --> 00:38:45,420
remember to actually migrate the sites

00:38:42,719 --> 00:38:48,869
over to the mp7 platform in October the

00:38:45,420 --> 00:38:51,719
lead mlssoccer.com site launched on d7

00:38:48,869 --> 00:38:55,890
and an AWS there was also a huge high

00:38:51,719 --> 00:38:57,749
traffic hi fan impact event that was new

00:38:55,890 --> 00:38:59,190
for 2015 called decision day that

00:38:57,749 --> 00:39:01,829
happened in October that the platform

00:38:59,190 --> 00:39:04,079
stood through in December we managed to

00:39:01,829 --> 00:39:07,140
turn off the legacy hosting provider in

00:39:04,079 --> 00:39:09,239
January of 2016 I'm actually very happy

00:39:07,140 --> 00:39:11,880
that we Brian and I work together to

00:39:09,239 --> 00:39:14,670
help hire an engineer who had DevOps

00:39:11,880 --> 00:39:16,680
skills into the mls organization so we

00:39:14,670 --> 00:39:18,749
actually did kind of help hire our own

00:39:16,680 --> 00:39:20,369
replacement on the infrastructure and

00:39:18,749 --> 00:39:22,950
DevOps ID and we're still working with

00:39:20,369 --> 00:39:25,619
MLS on like the Drupal platform side and

00:39:22,950 --> 00:39:27,660
then this March we all sat in a

00:39:25,619 --> 00:39:28,920
conference room at mls sigils

00:39:27,660 --> 00:39:32,400
headquarters and we had a successful

00:39:28,920 --> 00:39:34,499
launch to the 2016 season with all of

00:39:32,400 --> 00:39:40,680
the infrastructure in AWS and completely

00:39:34,499 --> 00:39:42,479
on the new mp7 platform so a slight step

00:39:40,680 --> 00:39:44,789
back and just to go over the tooling

00:39:42,479 --> 00:39:46,769
that we use to accomplish a lot of the

00:39:44,789 --> 00:39:48,779
performance optimization with without

00:39:46,769 --> 00:39:50,400
which none of them we really could not

00:39:48,779 --> 00:39:52,700
have gotten the site to perform the way

00:39:50,400 --> 00:39:52,700
it

00:39:53,320 --> 00:39:58,640
basically three tools New Relic for

00:39:56,540 --> 00:40:00,380
application performance management I've

00:39:58,640 --> 00:40:01,730
mentioned as before I'll go a little bit

00:40:00,380 --> 00:40:05,330
more into depth about what that looks

00:40:01,730 --> 00:40:08,960
like and how it helped us blaze meter

00:40:05,330 --> 00:40:11,000
for load testing and data dog for our

00:40:08,960 --> 00:40:12,740
infrastructure metrics essentially the

00:40:11,000 --> 00:40:15,110
you don't have to have these exact tools

00:40:12,740 --> 00:40:17,300
but in my opinion you need is something

00:40:15,110 --> 00:40:19,190
that is it that that accomplishes what

00:40:17,300 --> 00:40:20,990
these tools to do so something that is

00:40:19,190 --> 00:40:23,890
look that is able to report on how the

00:40:20,990 --> 00:40:26,890
health of your application in real time

00:40:23,890 --> 00:40:28,700
and if you make changes to address

00:40:26,890 --> 00:40:30,560
performance you need to test those

00:40:28,700 --> 00:40:33,730
changes with some sort of load testing

00:40:30,560 --> 00:40:36,050
tool and then you need some kind of

00:40:33,730 --> 00:40:38,510
monitoring of your infrastructure in

00:40:36,050 --> 00:40:42,080
totality to see how it's doing with

00:40:38,510 --> 00:40:48,500
regards to things like disk reads cpu

00:40:42,080 --> 00:40:52,040
utilization server health so New Relic

00:40:48,500 --> 00:40:53,750
I'm kind of breaking this down a little

00:40:52,040 --> 00:40:57,230
bit more just because of how crucial it

00:40:53,750 --> 00:41:01,510
was in in our operations so what it is

00:40:57,230 --> 00:41:04,520
in my opinion is in it is table stakes

00:41:01,510 --> 00:41:06,800
tooling for the modern technology team

00:41:04,520 --> 00:41:11,360
so whether using New Relic or one of

00:41:06,800 --> 00:41:12,860
their or a similar APM tool like I think

00:41:11,360 --> 00:41:15,190
I believe appdynamics is another one

00:41:12,860 --> 00:41:18,620
it's absolutely essential to understand

00:41:15,190 --> 00:41:20,780
how your site is performing at any given

00:41:18,620 --> 00:41:25,340
time and also how your site might have

00:41:20,780 --> 00:41:28,670
not performed in the in the past what it

00:41:25,340 --> 00:41:31,220
is is it provides real-time end and

00:41:28,670 --> 00:41:34,100
client and server metrics and

00:41:31,220 --> 00:41:37,310
performance measurement so this is

00:41:34,100 --> 00:41:39,440
really the ability to look into

00:41:37,310 --> 00:41:41,660
everything from how your code is

00:41:39,440 --> 00:41:44,690
performing in a user's browser to how

00:41:41,660 --> 00:41:47,360
the Drupal modules are performing in the

00:41:44,690 --> 00:41:50,750
server to even how the database is

00:41:47,360 --> 00:41:54,980
responding to to queries and the slope

00:41:50,750 --> 00:41:56,600
performing queries so a good example of

00:41:54,980 --> 00:41:59,840
really like what we get out of in terms

00:41:56,600 --> 00:42:02,090
of like a user story is we can use a new

00:41:59,840 --> 00:42:04,110
relic to show us that an article page

00:42:02,090 --> 00:42:08,070
was slow

00:42:04,110 --> 00:42:11,130
yesterday for a user in California using

00:42:08,070 --> 00:42:13,740
the Chrome browser at 9pm we can also

00:42:11,130 --> 00:42:15,540
find out that the slowness of that

00:42:13,740 --> 00:42:17,010
particular user was seventy percent on

00:42:15,540 --> 00:42:20,400
their browser so it was JavaScript that

00:42:17,010 --> 00:42:22,260
was slowing down that users experience

00:42:20,400 --> 00:42:25,230
or the opposite we could saleable you

00:42:22,260 --> 00:42:29,040
know it was actually server lag that was

00:42:25,230 --> 00:42:31,760
responsible for that slowness and that

00:42:29,040 --> 00:42:34,020
kind of visibility is crucial to really

00:42:31,760 --> 00:42:40,440
figuring out what your application

00:42:34,020 --> 00:42:41,640
problems are I'm going to go over just

00:42:40,440 --> 00:42:43,080
some kind of things you can get out of

00:42:41,640 --> 00:42:45,030
New Relic so right what we're looking at

00:42:43,080 --> 00:42:47,190
now out of the box after you install new

00:42:45,030 --> 00:42:50,400
relic was minimal configuration I might

00:42:47,190 --> 00:42:55,110
add you can get a pair of view of your

00:42:50,400 --> 00:42:59,340
entire stack application server I'm

00:42:55,110 --> 00:43:01,170
sorry claw your client code the middle

00:42:59,340 --> 00:43:04,710
tier there is a server and on the right

00:43:01,170 --> 00:43:08,070
there that is the repository so that

00:43:04,710 --> 00:43:10,260
would be the memcache instance the EOS

00:43:08,070 --> 00:43:12,420
API that's our API our web or web

00:43:10,260 --> 00:43:14,940
service which have our Drupal sites

00:43:12,420 --> 00:43:16,680
reliant on web services and then on the

00:43:14,940 --> 00:43:20,510
bottom there that's the the database

00:43:16,680 --> 00:43:23,550
instance now you can also drill down and

00:43:20,510 --> 00:43:25,890
so if you expand each one of those i can

00:43:23,550 --> 00:43:27,600
see oh look here's how my browser how is

00:43:25,890 --> 00:43:29,370
here's now the average performance of my

00:43:27,600 --> 00:43:32,160
code is running on a browser here's how

00:43:29,370 --> 00:43:34,890
that relates to the server and here's

00:43:32,160 --> 00:43:36,690
how that relates to its external web

00:43:34,890 --> 00:43:38,880
service calls or the database or the

00:43:36,690 --> 00:43:41,400
what have you now this is this is an

00:43:38,880 --> 00:43:43,500
example of when we had a performance hit

00:43:41,400 --> 00:43:48,210
on our server so as you can see there

00:43:43,500 --> 00:43:49,560
are the middle server module is red and

00:43:48,210 --> 00:43:51,600
that's signifying that there's a problem

00:43:49,560 --> 00:43:53,130
there not on the browser not in the

00:43:51,600 --> 00:43:56,760
database but on the server code and that

00:43:53,130 --> 00:44:00,300
will happen wherever New Relic locates

00:43:56,760 --> 00:44:01,980
bottlenecks here's another view this new

00:44:00,300 --> 00:44:03,930
relics also self aware of the

00:44:01,980 --> 00:44:06,060
application that it is insert that it is

00:44:03,930 --> 00:44:08,610
introspecting so New Relic knows oh this

00:44:06,060 --> 00:44:10,530
is a Drupal up immediately it gives you

00:44:08,610 --> 00:44:13,710
a section called Drupal with a breakdown

00:44:10,530 --> 00:44:15,690
of modules hooks and views so from here

00:44:13,710 --> 00:44:17,010
you can see I can see what's my slowest

00:44:15,690 --> 00:44:22,110
module that's performing or

00:44:17,010 --> 00:44:24,030
or what is the slowest running module so

00:44:22,110 --> 00:44:25,620
one is you could have a module that's

00:44:24,030 --> 00:44:28,980
called by everybody and so therefore

00:44:25,620 --> 00:44:30,120
that will be slow another scenario is

00:44:28,980 --> 00:44:31,650
you might just have a module that's not

00:44:30,120 --> 00:44:36,690
called a lot but when it's called it is

00:44:31,650 --> 00:44:41,400
dog slow and you can do you can look at

00:44:36,690 --> 00:44:43,520
this with modules hooks and views no

00:44:41,400 --> 00:44:47,630
configuration was done to get that

00:44:43,520 --> 00:44:50,760
here's an example of what the high level

00:44:47,630 --> 00:44:52,440
metrics from our multi-site look like so

00:44:50,760 --> 00:44:54,240
this is an aggregate of all of the clubs

00:44:52,440 --> 00:44:56,480
in the site so we can look at our

00:44:54,240 --> 00:44:59,250
aggregate of all of our editorial

00:44:56,480 --> 00:45:04,020
instances our Adventist is in a rollup

00:44:59,250 --> 00:45:06,600
of our 20 21 sites in our energy our

00:45:04,020 --> 00:45:09,090
production instance and we can see the

00:45:06,600 --> 00:45:11,250
average is about 5.6 seconds on the

00:45:09,090 --> 00:45:14,550
end-user experience the average is about

00:45:11,250 --> 00:45:16,620
four you know a little below 500 sorry

00:45:14,550 --> 00:45:19,680
around oh actually we're in a bad

00:45:16,620 --> 00:45:22,380
situation right now it's at 1.4 so it

00:45:19,680 --> 00:45:24,330
really does work so we're you don't

00:45:22,380 --> 00:45:27,510
worry about like above a second on or on

00:45:24,330 --> 00:45:29,250
our app server you can also then look at

00:45:27,510 --> 00:45:31,620
individual sites within your multi-site

00:45:29,250 --> 00:45:33,720
so here this is the red bulls and NYC FC

00:45:31,620 --> 00:45:35,850
and I can see specifically how that code

00:45:33,720 --> 00:45:41,730
is operating with the the NYC FC in the

00:45:35,850 --> 00:45:43,740
red bull traffic all right yeah so in

00:45:41,730 --> 00:45:47,610
summary just to go back and kind of what

00:45:43,740 --> 00:45:49,200
we talked about by the end of our year

00:45:47,610 --> 00:45:50,880
which was basically from March 2015 to

00:45:49,200 --> 00:45:53,430
march 2016 we had gotten to the point

00:45:50,880 --> 00:45:56,430
where all of MLS digital services were

00:45:53,430 --> 00:45:58,560
mired fully into AWS and this in turn

00:45:56,430 --> 00:46:00,030
helped to significantly lower the

00:45:58,560 --> 00:46:02,730
hosting costs just mainly because you

00:46:00,030 --> 00:46:04,950
know Rackspace or any like legacy host

00:46:02,730 --> 00:46:07,530
is pretty inflexible so both by using

00:46:04,950 --> 00:46:09,540
amazon services that took less money

00:46:07,530 --> 00:46:12,720
like auto scaling in the average case or

00:46:09,540 --> 00:46:14,340
less time to maintain like RDS that

00:46:12,720 --> 00:46:16,320
helped actually free up mls to like

00:46:14,340 --> 00:46:18,720
actually build new features for their

00:46:16,320 --> 00:46:20,010
dribble platform or build new digital

00:46:18,720 --> 00:46:21,180
products like build new things into the

00:46:20,010 --> 00:46:24,270
match centre experience into the

00:46:21,180 --> 00:46:26,250
connected TV experience we also really

00:46:24,270 --> 00:46:27,960
help to reduce support load so as Brian

00:46:26,250 --> 00:46:29,640
said like kind of a big part that was

00:46:27,960 --> 00:46:30,850
happening not even related technology

00:46:29,640 --> 00:46:32,620
but still a very important

00:46:30,850 --> 00:46:34,690
art was the growth of that centralized

00:46:32,620 --> 00:46:37,840
digital Club services team and

00:46:34,690 --> 00:46:39,490
integrating them very deeply into one

00:46:37,840 --> 00:46:41,140
combined development organization so

00:46:39,490 --> 00:46:42,430
that you know you've got stakeholders at

00:46:41,140 --> 00:46:44,110
mls that are driving new future

00:46:42,430 --> 00:46:45,550
development you've got the digital club

00:46:44,110 --> 00:46:48,280
services group who are really kind of

00:46:45,550 --> 00:46:50,140
like tier 1 of supporting the editors in

00:46:48,280 --> 00:46:52,210
all 21 of the different you know

00:46:50,140 --> 00:46:53,770
instances of the site and then they help

00:46:52,210 --> 00:46:55,300
to actually like drive development to

00:46:53,770 --> 00:46:57,460
say like hey we need this bug fixed

00:46:55,300 --> 00:46:59,080
before we migrate or then like this club

00:46:57,460 --> 00:47:01,000
really wants this feature and so yeah

00:46:59,080 --> 00:47:02,860
like not every change is technical

00:47:01,000 --> 00:47:04,480
certainly quite a few changes that will

00:47:02,860 --> 00:47:06,370
help your organization be more efficient

00:47:04,480 --> 00:47:08,380
can completely be about governance and

00:47:06,370 --> 00:47:09,820
about policy and again I'll plug that

00:47:08,380 --> 00:47:11,530
tomorrow I'm talking a little more in

00:47:09,820 --> 00:47:13,960
depth about immutable infrastructure and

00:47:11,530 --> 00:47:17,070
how you could make your Drupal instance

00:47:13,960 --> 00:47:21,700
suitable for running in AWS or in docker

00:47:17,070 --> 00:47:23,620
so yeah more specifically MLS addressed

00:47:21,700 --> 00:47:25,750
the outdated front and UI by having a

00:47:23,620 --> 00:47:27,280
consistent MP 7 theme that was sub-theme

00:47:25,750 --> 00:47:28,990
by all the different clubs and skin to

00:47:27,280 --> 00:47:32,350
keep a consistent design language and to

00:47:28,990 --> 00:47:33,910
work in responsive giving Club editorial

00:47:32,350 --> 00:47:35,290
teams kind of a couple more tools to

00:47:33,910 --> 00:47:36,760
work with but still very carefully

00:47:35,290 --> 00:47:39,910
making sure that that all still fits

00:47:36,760 --> 00:47:41,920
into that responsive platform getting to

00:47:39,910 --> 00:47:43,390
the point where MLS was doing auto

00:47:41,920 --> 00:47:44,800
scaling so that they could automatically

00:47:43,390 --> 00:47:46,750
scale up and not worry so much about

00:47:44,800 --> 00:47:48,640
spiky traffic and also help to lower

00:47:46,750 --> 00:47:51,250
their overall hosting bill by using

00:47:48,640 --> 00:47:53,200
those kinds of services still in process

00:47:51,250 --> 00:47:55,240
but trying to get to a point where there

00:47:53,200 --> 00:47:56,770
is really kind of just one technology

00:47:55,240 --> 00:47:58,660
stack like there's always going to be I

00:47:56,770 --> 00:48:00,780
think at least in the near term there's

00:47:58,660 --> 00:48:03,820
going to be Drupal as the main CMS and

00:48:00,780 --> 00:48:05,710
JavaScript whether in the browser or on

00:48:03,820 --> 00:48:08,260
the server as the main component to all

00:48:05,710 --> 00:48:10,210
the other services part of the platform

00:48:08,260 --> 00:48:13,320
but trying to move towards a kind of

00:48:10,210 --> 00:48:15,880
coming together of deployment strategies

00:48:13,320 --> 00:48:17,200
yeah and you know in the end we actually

00:48:15,880 --> 00:48:19,630
managed to get all 21 of those websites

00:48:17,200 --> 00:48:24,670
live on Drupal and in Amazon Web

00:48:19,630 --> 00:48:28,810
Services so what the future looks like

00:48:24,670 --> 00:48:31,090
for us 2015 is really just about getting

00:48:28,810 --> 00:48:34,780
to d7 and getting in the cloud and we

00:48:31,090 --> 00:48:36,250
did it 2016 it's about making early

00:48:34,780 --> 00:48:38,620
performance is always going to be a goal

00:48:36,250 --> 00:48:41,170
in my opinion but yes increasing

00:48:38,620 --> 00:48:43,079
performance but now focusing on the

00:48:41,170 --> 00:48:45,180
editorial usability of the

00:48:43,079 --> 00:48:47,910
you know of that migration and really

00:48:45,180 --> 00:48:50,219
looking at all the modules forms the

00:48:47,910 --> 00:48:52,170
editorial experience and and how we can

00:48:50,219 --> 00:48:55,380
facilitate them to tell the stories they

00:48:52,170 --> 00:48:57,660
want to tell and not feel so confined by

00:48:55,380 --> 00:49:00,719
the tools that are at their disposal so

00:48:57,660 --> 00:49:02,670
that this is a major focus and you know

00:49:00,719 --> 00:49:04,589
as I keep mentioning the consolidation

00:49:02,670 --> 00:49:06,900
and simplification of the tech stack is

00:49:04,589 --> 00:49:09,559
is is important to me now just to

00:49:06,900 --> 00:49:12,599
clarify what what I mean is by this is

00:49:09,559 --> 00:49:15,029
every problem has a that's a tool that

00:49:12,599 --> 00:49:16,079
is that is best suited for it and by no

00:49:15,029 --> 00:49:18,180
means do we want to have like one

00:49:16,079 --> 00:49:20,999
language in one platform but we do want

00:49:18,180 --> 00:49:22,380
to see what it you know use the right

00:49:20,999 --> 00:49:23,819
tool for the right problem so in terms

00:49:22,380 --> 00:49:28,829
of content management Drupal is a right

00:49:23,819 --> 00:49:32,190
tool in terms of video ingestion and

00:49:28,829 --> 00:49:35,940
data ingestion we we were happy with

00:49:32,190 --> 00:49:38,190
with both node and go but in terms of

00:49:35,940 --> 00:49:41,359
deployment there's really should be only

00:49:38,190 --> 00:49:43,469
one technology for that in terms of

00:49:41,359 --> 00:49:45,839
configuration management the same thing

00:49:43,469 --> 00:49:49,489
and consolidating here is where we

00:49:45,839 --> 00:49:52,259
started and we're continuing to to to

00:49:49,489 --> 00:49:55,529
you know work on and this is going to

00:49:52,259 --> 00:49:57,449
have pretty big organizational impact as

00:49:55,529 --> 00:50:01,319
it allows us to be continued to be light

00:49:57,449 --> 00:50:05,219
nimble and get a lot done with with very

00:50:01,319 --> 00:50:07,829
little and fine and actually docker as a

00:50:05,219 --> 00:50:10,199
sub as a sub note there is kind of one

00:50:07,829 --> 00:50:14,400
of the the crucial technologies that's

00:50:10,199 --> 00:50:16,319
enabling that and finally preparing for

00:50:14,400 --> 00:50:18,569
amelie omni-channel omni-channel is

00:50:16,319 --> 00:50:20,519
major for us like I mentioned before we

00:50:18,569 --> 00:50:22,199
the desktop is one of the many products

00:50:20,519 --> 00:50:24,499
that bit our users consumer content on

00:50:22,199 --> 00:50:27,890
so we have to make sure that that

00:50:24,499 --> 00:50:30,809
everything from our content model to our

00:50:27,890 --> 00:50:33,719
distribution of that content is really

00:50:30,809 --> 00:50:36,209
optimized for comfort for the

00:50:33,719 --> 00:50:39,979
consumption on any form factor whether

00:50:36,209 --> 00:50:43,529
it be connected television or or a

00:50:39,979 --> 00:50:45,809
chatbot whatever it is we want to make

00:50:43,529 --> 00:50:48,209
sure that we have us we have the ability

00:50:45,809 --> 00:50:50,430
to get our content to that to that

00:50:48,209 --> 00:50:52,229
device to that to the right channel at

00:50:50,430 --> 00:50:54,650
the right time the right moment for that

00:50:52,229 --> 00:50:54,650
user

00:50:55,180 --> 00:51:00,700
and you can check us out that we've got

00:50:58,690 --> 00:51:02,920
a got a technology blog where we

00:51:00,700 --> 00:51:04,660
constantly talk about the new tools

00:51:02,920 --> 00:51:08,829
we're using what's working for as a labs

00:51:04,660 --> 00:51:10,750
that mlssoccer.com the leak site and you

00:51:08,829 --> 00:51:26,530
can visit phase 2 at phase 2 technology

00:51:10,750 --> 00:51:28,210
com thank you questions none so if you

00:51:26,530 --> 00:51:30,250
have a question please go that Mike and

00:51:28,210 --> 00:51:31,660
turn it on you just want to walk up to

00:51:30,250 --> 00:51:38,260
the mic and ask the question yeah you

00:51:31,660 --> 00:51:39,520
might have to turn on T if it's not

00:51:38,260 --> 00:51:41,559
working I can just repeat it for the

00:51:39,520 --> 00:51:43,960
recording here about that is that coming

00:51:41,559 --> 00:51:45,010
through yeah I think so yeah well as

00:51:43,960 --> 00:51:51,760
just curious as you talk about the

00:51:45,010 --> 00:51:53,800
future and omni-channel devices Internet

00:51:51,760 --> 00:51:56,050
of Things you got stadiums like I was

00:51:53,800 --> 00:51:56,859
out of abaya Stadium last unit trying to

00:51:56,050 --> 00:52:00,720
make it like this whole digital

00:51:56,859 --> 00:52:03,880
experience and interaction talked about

00:52:00,720 --> 00:52:06,730
hyper localization and stuff real time

00:52:03,880 --> 00:52:09,700
delivering two different not kiosks and

00:52:06,730 --> 00:52:13,390
make Jumbotron whatever tracking player

00:52:09,700 --> 00:52:15,130
face well definitely play are tracking

00:52:13,390 --> 00:52:16,780
definitely fan tracking would probably

00:52:15,130 --> 00:52:19,990
be the high priority of all of what you

00:52:16,780 --> 00:52:21,579
mentioned in terms of IOT I think that's

00:52:19,990 --> 00:52:23,680
something that's that is that's that's

00:52:21,579 --> 00:52:25,270
very interesting to us however before we

00:52:23,680 --> 00:52:26,710
can even get there it's you know you

00:52:25,270 --> 00:52:30,010
definitely have to have the foundation

00:52:26,710 --> 00:52:33,460
and the pipeline to the two to transmit

00:52:30,010 --> 00:52:37,030
information to set devices reflect to

00:52:33,460 --> 00:52:38,109
the stadium Z our product director is in

00:52:37,030 --> 00:52:39,880
the back there you can speak more to

00:52:38,109 --> 00:52:42,400
that but really each club and each

00:52:39,880 --> 00:52:43,420
stadium kind of has its own little world

00:52:42,400 --> 00:52:45,339
and they have their own sort of

00:52:43,420 --> 00:52:48,670
technologies it that they're using and

00:52:45,339 --> 00:52:52,089
so back to the omni-channel I mean if we

00:52:48,670 --> 00:52:53,859
can provide a consistent and consistent

00:52:52,089 --> 00:52:55,809
access to our content then that would

00:52:53,859 --> 00:52:58,420
enable any button whether it be the

00:52:55,809 --> 00:53:00,730
stadium or a partner or content partner

00:52:58,420 --> 00:53:01,990
to get our content and there have been

00:53:00,730 --> 00:53:04,359
talks here and there to sort of

00:53:01,990 --> 00:53:06,069
integrate and augment the stadium

00:53:04,359 --> 00:53:06,849
experience with nothing specific and we

00:53:06,069 --> 00:53:07,990
don't have anything in the immediate

00:53:06,849 --> 00:53:10,150
plans but I in

00:53:07,990 --> 00:53:12,220
my opinion it's really about getting our

00:53:10,150 --> 00:53:15,040
services to be quite performant and be

00:53:12,220 --> 00:53:17,500
fully robust and expose every kind of

00:53:15,040 --> 00:53:19,390
content we created through an API and

00:53:17,500 --> 00:53:26,890
that will I think will set us up for

00:53:19,390 --> 00:53:29,260
things like that hey of the 21 teams

00:53:26,890 --> 00:53:31,390
were there any that were kind of special

00:53:29,260 --> 00:53:33,040
snowflakes you know and they had their

00:53:31,390 --> 00:53:34,930
own ideas about the creative direction

00:53:33,040 --> 00:53:36,760
and the platform and weren't really on

00:53:34,930 --> 00:53:39,520
board you had to kind of navigate that a

00:53:36,760 --> 00:53:42,430
little bit and bring them along or were

00:53:39,520 --> 00:53:50,290
they everyone was sort of on the same

00:53:42,430 --> 00:53:53,050
page wade in the back no no haha I will

00:53:50,290 --> 00:53:55,030
say this so so because so I I think a

00:53:53,050 --> 00:53:57,460
consequence of having a difficult

00:53:55,030 --> 00:53:59,860
request for service that you're

00:53:57,460 --> 00:54:02,080
providing is what is what are what are

00:53:59,860 --> 00:54:03,510
the capabilities in the said customer

00:54:02,080 --> 00:54:05,530
right so if you if they have technology

00:54:03,510 --> 00:54:08,410
staff they're going to want things that

00:54:05,530 --> 00:54:10,240
are going to be difficult right as it

00:54:08,410 --> 00:54:12,040
happens there there is no real

00:54:10,240 --> 00:54:15,010
technology staff at any of our at any of

00:54:12,040 --> 00:54:17,950
our clubs currently at the moment other

00:54:15,010 --> 00:54:21,060
than mobile some mobile competency to

00:54:17,950 --> 00:54:23,710
create ancillary a bat web apps for said

00:54:21,060 --> 00:54:25,690
club like Seattle has its own web app

00:54:23,710 --> 00:54:27,910
it's kind of its own thing I'll be it

00:54:25,690 --> 00:54:31,030
does use our API to consume its content

00:54:27,910 --> 00:54:33,400
but because so because of this because

00:54:31,030 --> 00:54:35,859
of that situation we didn't actually we

00:54:33,400 --> 00:54:37,560
were able to move it lockstep and kind

00:54:35,859 --> 00:54:40,150
of roll out changes and everyone kind of

00:54:37,560 --> 00:54:41,859
accepted it you know I'll reiterate what

00:54:40,150 --> 00:54:44,530
Steven mentioned having a centralized

00:54:41,859 --> 00:54:46,090
group we call it dcs or digital club

00:54:44,530 --> 00:54:47,890
services but essential as a group of

00:54:46,090 --> 00:54:50,380
power users that are really the face of

00:54:47,890 --> 00:54:52,000
Drupal and really the tier 1 to

00:54:50,380 --> 00:54:54,070
technology is kind of crucial because

00:54:52,000 --> 00:54:55,290
the whole time they're managing these

00:54:54,070 --> 00:54:58,600
changes and they're kind of

00:54:55,290 --> 00:55:00,520
communicating and to the to their to our

00:54:58,600 --> 00:55:02,380
clubs in and making them feel at ease

00:55:00,520 --> 00:55:05,560
about the changes one way or another and

00:55:02,380 --> 00:55:08,260
that really does set us up to to move in

00:55:05,560 --> 00:55:09,340
an in a multi-tenant environment which i

00:55:08,260 --> 00:55:10,480
think is kind of what you're getting too

00:55:09,340 --> 00:55:15,190
because that's a--that's a problem with

00:55:10,480 --> 00:55:16,840
multi-tenant i know anything else thanks

00:55:15,190 --> 00:55:18,910
for the presentation and definitely

00:55:16,840 --> 00:55:20,500
thanks to mls for sharing you guys have

00:55:18,910 --> 00:55:22,450
seen you before other

00:55:20,500 --> 00:55:25,360
drupalcon Drupal events and it's been

00:55:22,450 --> 00:55:28,120
really a very useful for great um so my

00:55:25,360 --> 00:55:30,130
question is about multi-site so when you

00:55:28,120 --> 00:55:31,960
push out a release and you have 20 sites

00:55:30,130 --> 00:55:33,220
running the same code base let's say

00:55:31,960 --> 00:55:35,560
there's a schema change do you do

00:55:33,220 --> 00:55:37,180
anything special to handle the up dps in

00:55:35,560 --> 00:55:40,810
the future of herbs that brings them all

00:55:37,180 --> 00:55:42,520
down stevens babe yes this is the may be

00:55:40,810 --> 00:55:46,110
hidden or not so hidden downside of

00:55:42,520 --> 00:55:46,110
multi sites is what happens when the

00:55:48,720 --> 00:55:53,350
controlled code like old code before the

00:55:51,730 --> 00:55:54,760
scheme update happens will work and the

00:55:53,350 --> 00:55:57,040
new code will be like this fields not in

00:55:54,760 --> 00:55:58,270
the database crash then the same thing

00:55:57,040 --> 00:55:59,680
happens when you update the scheme and

00:55:58,270 --> 00:56:02,350
then the old code base would be like oh

00:55:59,680 --> 00:56:04,360
the old fields on the database crash so

00:56:02,350 --> 00:56:06,340
what do you do so when we initially

00:56:04,360 --> 00:56:08,470
designed this I was a little bit lying

00:56:06,340 --> 00:56:10,120
we didn't we didn't do this as a

00:56:08,470 --> 00:56:11,920
straight-up multi-site out of the bat we

00:56:10,120 --> 00:56:13,750
we had one extra thing in place where

00:56:11,920 --> 00:56:16,120
during a deployment we would deploy the

00:56:13,750 --> 00:56:17,440
old code base the new code base then we

00:56:16,120 --> 00:56:19,990
would do the scheme update and flip

00:56:17,440 --> 00:56:21,850
symlinks one by one so that we could

00:56:19,990 --> 00:56:24,520
like essentially we're still doing that

00:56:21,850 --> 00:56:26,410
deployment we said okay and we do that

00:56:24,520 --> 00:56:28,330
on the editorial tier of servers which

00:56:26,410 --> 00:56:29,500
are kind of pets they're not autoscale

00:56:28,330 --> 00:56:31,180
there a separate group because they're

00:56:29,500 --> 00:56:32,830
like you know behind a more strict to

00:56:31,180 --> 00:56:34,240
firewall only accessible to club so in

00:56:32,830 --> 00:56:36,250
that case we could actually do that like

00:56:34,240 --> 00:56:37,990
flip the symlink run this game update go

00:56:36,250 --> 00:56:40,060
flip flip flip flip flip flip and then

00:56:37,990 --> 00:56:41,290
actually make that live so that

00:56:40,060 --> 00:56:44,830
certainly is a problem though and you

00:56:41,290 --> 00:56:46,360
know it would be nice if contribs what's

00:56:44,830 --> 00:56:47,680
not just like rename a field let's

00:56:46,360 --> 00:56:49,390
instead you know like change the

00:56:47,680 --> 00:56:51,580
semantics and maybe like provide a more

00:56:49,390 --> 00:56:52,630
graceful path but you will occasionally

00:56:51,580 --> 00:56:54,790
still that's probably the biggest

00:56:52,630 --> 00:56:55,840
downside of multi-site is that you'd

00:56:54,790 --> 00:56:56,980
have to look at your scheme updates

00:56:55,840 --> 00:56:58,330
carefully because yeah there's nothing

00:56:56,980 --> 00:56:59,950
that could stop a mod from just been

00:56:58,330 --> 00:57:02,230
like I'm going to delete this field and

00:56:59,950 --> 00:57:04,360
then the code hope you like I have a PDO

00:57:02,230 --> 00:57:05,980
error because I can't find this so it is

00:57:04,360 --> 00:57:07,750
not perfect i will say that like we have

00:57:05,980 --> 00:57:09,790
our stopgap solution there of being able

00:57:07,750 --> 00:57:11,290
to at least for the big scheme updates

00:57:09,790 --> 00:57:12,430
like to run them and then like flip the

00:57:11,290 --> 00:57:15,160
new code base and run it on a

00:57:12,430 --> 00:57:17,500
site-by-site basis and then like kind of

00:57:15,160 --> 00:57:19,540
let that you know catch up as we deploy

00:57:17,500 --> 00:57:21,340
the new am eyes out but yeah that's

00:57:19,540 --> 00:57:22,480
definitely the biggest thing and I think

00:57:21,340 --> 00:57:25,150
that that's probably the thing we have

00:57:22,480 --> 00:57:26,740
to kind of be the most careful

00:57:25,150 --> 00:57:28,059
one other question if you mentioned

00:57:26,740 --> 00:57:29,770
doctor but it wasn't clear to me whether

00:57:28,059 --> 00:57:31,359
you're actually using an hour that's

00:57:29,770 --> 00:57:34,990
something you're moving towards you talk

00:57:31,359 --> 00:57:37,000
about that yeah I yeah so yes and yes

00:57:34,990 --> 00:57:38,890
we're using it now any new technology

00:57:37,000 --> 00:57:41,440
that we introduced to our stack is fully

00:57:38,890 --> 00:57:43,510
dark eyes we the only thing that is

00:57:41,440 --> 00:57:45,670
right now not doctor as in production is

00:57:43,510 --> 00:57:47,829
Drupal and we already have a darker

00:57:45,670 --> 00:57:49,480
darker eyes Drupal version ready and

00:57:47,829 --> 00:57:53,680
we're just waiting to release it during

00:57:49,480 --> 00:57:58,630
some downtime so but everything like are

00:57:53,680 --> 00:58:01,089
the apps that run our apple TV or API

00:57:58,630 --> 00:58:02,619
are ancillary websites which provide

00:58:01,089 --> 00:58:04,900
stats everything is authorized and

00:58:02,619 --> 00:58:06,400
Drupal will be Delacroix's very soon and

00:58:04,900 --> 00:58:09,549
that will will have everything Doug

00:58:06,400 --> 00:58:12,609
arised by the end of the year actually

00:58:09,549 --> 00:58:14,410
I'll throw a plug out for my favorite

00:58:12,609 --> 00:58:16,900
container scheduler which is Cooper

00:58:14,410 --> 00:58:18,069
Nettie's MLS is using Cooper Nettie's we

00:58:16,900 --> 00:58:19,599
did quite a bit of work to cut it a sign

00:58:18,069 --> 00:58:21,339
on that and one of the biggest reasons

00:58:19,599 --> 00:58:23,440
for that is that MLS has a bunch of no

00:58:21,339 --> 00:58:25,420
taps and no taps are great except they

00:58:23,440 --> 00:58:26,799
only use one cpu core right because

00:58:25,420 --> 00:58:29,410
notice single threaded so there were

00:58:26,799 --> 00:58:31,059
several cases where note where MLS had

00:58:29,410 --> 00:58:32,529
services that would take very high

00:58:31,059 --> 00:58:34,690
traffic and eventually just at some

00:58:32,529 --> 00:58:36,250
traffic threshold like one process would

00:58:34,690 --> 00:58:37,660
not be able to handle it the cool thing

00:58:36,250 --> 00:58:39,369
with Cooper Nettie's is that it has

00:58:37,660 --> 00:58:40,599
built-in kind of service discovery so

00:58:39,369 --> 00:58:42,910
you can say like spin up a service that

00:58:40,599 --> 00:58:44,740
handles our web socket traffic and then

00:58:42,910 --> 00:58:46,210
you can literally scale just that

00:58:44,740 --> 00:58:49,059
service you can be like oh hey we need

00:58:46,210 --> 00:58:51,039
to go from five pods to 20 pods and that

00:58:49,059 --> 00:58:53,020
way you can on the same physical machine

00:58:51,039 --> 00:58:54,819
be running like 20 copies of a node app

00:58:53,020 --> 00:58:56,799
that can you say 20 cores of the machine

00:58:54,819 --> 00:58:58,299
as opposed to like having to build in

00:58:56,799 --> 00:58:59,529
the node cluster module and do all this

00:58:58,299 --> 00:59:02,109
extra stuff so it actually has an

00:58:59,529 --> 00:59:04,299
additional huge benefit for a lot of the

00:59:02,109 --> 00:59:05,950
node based apps that MLS runs kind of

00:59:04,299 --> 00:59:07,270
that Cooper Nettie's like has service

00:59:05,950 --> 00:59:09,010
discovery built and it has load

00:59:07,270 --> 00:59:10,869
balancing based in which then also means

00:59:09,010 --> 00:59:12,970
you have horizontal scaling bait bill it

00:59:10,869 --> 00:59:14,260
baked it like you can just say hey we

00:59:12,970 --> 00:59:16,359
know it's going to be a high traffic day

00:59:14,260 --> 00:59:17,980
let's go ahead and just go up to 20 of

00:59:16,359 --> 00:59:19,619
our web socket instances and there is

00:59:17,980 --> 00:59:22,809
even in cuban aries 12 like an

00:59:19,619 --> 00:59:24,160
experimental autoscaler for pods like

00:59:22,809 --> 00:59:25,329
four containers themselves you can say

00:59:24,160 --> 00:59:27,490
like if the average CPU of these

00:59:25,329 --> 00:59:28,809
containers is high add a new one in so

00:59:27,490 --> 00:59:30,160
that actually I think if it's really

00:59:28,809 --> 00:59:34,079
nicely with some of the node based

00:59:30,160 --> 00:59:34,079
services that MLS is running

00:59:34,320 --> 00:59:37,110
to know if you could tell us a little

00:59:35,400 --> 00:59:38,250
bit more about the video ingestion you

00:59:37,110 --> 00:59:40,920
mentioned some of the tools you're using

00:59:38,250 --> 00:59:42,540
what were the sources for the video did

00:59:40,920 --> 00:59:44,790
you to come from the editors you have

00:59:42,540 --> 00:59:48,570
outside feeds could you allow fans to

00:59:44,790 --> 00:59:50,790
upload photos or video great question

00:59:48,570 --> 00:59:52,670
okay so we have two main sources of

00:59:50,790 --> 00:59:56,160
video one is our live videos provide

00:59:52,670 --> 00:59:59,640
provided by a vendor new lion are our

00:59:56,160 --> 01:00:02,820
encoding in our vaad video is housed in

00:59:59,640 --> 01:00:04,320
a video CMS and a service with Allah so

01:00:02,820 --> 01:00:06,360
we don't use brightly the alternative to

01:00:04,320 --> 01:00:08,490
Brightcove so that's the two points

01:00:06,360 --> 01:00:10,650
where video assets would be introduced

01:00:08,490 --> 01:00:12,180
into the system the way that the ingest

01:00:10,650 --> 01:00:13,740
works in a nutshell is we've got a

01:00:12,180 --> 01:00:15,480
series of micro services which is

01:00:13,740 --> 01:00:17,580
constantly pulling these systems and

01:00:15,480 --> 01:00:19,590
syncing them down the drupal and then

01:00:17,580 --> 01:00:22,080
also by direct releasing them back and

01:00:19,590 --> 01:00:24,360
it sees its this pipeline of micro

01:00:22,080 --> 01:00:27,320
services which which allow us the

01:00:24,360 --> 01:00:29,580
ability to to focus on in you know on

01:00:27,320 --> 01:00:31,770
getting things from one system to

01:00:29,580 --> 01:00:34,310
another in in localized way so that if

01:00:31,770 --> 01:00:36,480
one thing breaks not everything Briggs

01:00:34,310 --> 01:00:37,920
so the transcoding the conversion is

01:00:36,480 --> 01:00:39,300
done with our video provider so i know

01:00:37,920 --> 01:00:40,770
that there's a lot of be a lot of people

01:00:39,300 --> 01:00:43,370
deal with their own and they do their

01:00:40,770 --> 01:00:45,960
own encoding we were we kind of go with

01:00:43,370 --> 01:00:47,160
you know in terms of build vers by if

01:00:45,960 --> 01:00:48,660
the vendor can do it and they do a

01:00:47,160 --> 01:00:50,760
decent job at doing it let them keep

01:00:48,660 --> 01:00:51,780
doing it until there comes to a point in

01:00:50,760 --> 01:00:53,790
time where we do have to take it on

01:00:51,780 --> 01:00:55,260
ourselves and at this point we're not so

01:00:53,790 --> 01:00:59,460
yeah the encoding happens with it we all

01:00:55,260 --> 01:01:02,700
oh and then in terms of ugc we we have

01:00:59,460 --> 01:01:03,990
integration with our twitter vine like

01:01:02,700 --> 01:01:06,600
everything instagram and that is

01:01:03,990 --> 01:01:08,760
integrated into our match experience our

01:01:06,600 --> 01:01:11,100
match site called match offender mls

01:01:08,760 --> 01:01:12,600
calm and that that is primarily where

01:01:11,100 --> 01:01:14,850
users are uploading content so we don't

01:01:12,600 --> 01:01:21,170
we use drupal for ugc we use social

01:01:14,850 --> 01:01:24,620
platforms all right anything else

01:01:21,170 --> 01:01:24,620
alright thanks guys

01:01:27,440 --> 01:01:32,849
alright and then I think I'm

01:01:29,249 --> 01:01:34,049
contractually obligated to say that if

01:01:32,849 --> 01:01:35,640
you go to the session page you can leave

01:01:34,049 --> 01:01:37,829
comments or questions and let us know

01:01:35,640 --> 01:01:40,249
how we did and again thanks for coming

01:01:37,829 --> 01:01:40,249

YouTube URL: https://www.youtube.com/watch?v=CUIUH5YeK8U


