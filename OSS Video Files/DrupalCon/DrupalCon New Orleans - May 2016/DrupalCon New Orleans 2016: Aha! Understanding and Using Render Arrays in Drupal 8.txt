Title: DrupalCon New Orleans 2016: Aha! Understanding and Using Render Arrays in Drupal 8
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	theme() has been a popular function used by Drupal developers since Drupal 4.7. Drupal 7 core calls theme() over 200 times alone. But theme() no longer exists in Drupal 8 and there is no object-oriented equivalent. If we can’t call theme(), how do we render our data with the Twig templates that we’re all so excited about?

Render arrays. Every use of a Drupal 8 template starts with a render array and many variables within a template are render arrays themselves. While they did exist before Drupal 8, render arrays weren’t used as often as they should have been. They’re everywhere now, and for good reason. They provide many advantages over their deprecated counterpart.

Unfortunately render arrays are a bit confusing and intimidating until that wonderful “aha moment” hits. This session aims to provide that moment. It will cover:

what render arrays are and how to use them
how render arrays become rendered markup
why render arrays provide advantages over theme()
best practices for using render arrays in a sustainable way
other goodies, such as attaching assets and caching
Because render arrays bridge the gap between the back and front ends, it’s important for developers on both sides to understand them. Previous experience with theme(), hook_theme(), preprocess functions, and/or templates in Drupal 7 will make this session easier to follow and understand.
Captions: 
	00:00:00,000 --> 00:00:04,560
all right can everyone hear me cool

00:00:03,480 --> 00:00:09,030
we're gonna go ahead and get started

00:00:04,560 --> 00:00:11,250
then thank you for coming and welcome to

00:00:09,030 --> 00:00:11,910
Drupal con New Orleans and welcome to

00:00:11,250 --> 00:00:14,790
this session

00:00:11,910 --> 00:00:18,270
AHA understanding and using render

00:00:14,790 --> 00:00:20,130
arrays in Drupal 8 I'm Gus childs and I

00:00:18,270 --> 00:00:22,560
live in Golden Colorado but I'm

00:00:20,130 --> 00:00:26,880
originally from st. Louis Missouri so go

00:00:22,560 --> 00:00:28,410
blues but but Gus child's is my handle

00:00:26,880 --> 00:00:30,179
basically everywhere

00:00:28,410 --> 00:00:32,219
so feel free to track me down on Twitter

00:00:30,179 --> 00:00:35,850
or drupal.org if you end up with a

00:00:32,219 --> 00:00:38,700
question and don't get to ask and I work

00:00:35,850 --> 00:00:39,300
for chromatic you can find chromatic on

00:00:38,700 --> 00:00:41,700
the web's

00:00:39,300 --> 00:00:44,579
at chromatic HQ comm or on twitter at

00:00:41,700 --> 00:00:46,379
chromatic HQ as well so chromatic is a

00:00:44,579 --> 00:00:48,960
completely distributed company that

00:00:46,379 --> 00:00:50,789
works primarily with Drupal we've got

00:00:48,960 --> 00:00:52,590
team members all over the US and a

00:00:50,789 --> 00:00:53,969
couple in Europe and we work on a lot of

00:00:52,590 --> 00:00:56,190
really interesting projects with some

00:00:53,969 --> 00:00:57,930
pretty big-name clients we've actually I

00:00:56,190 --> 00:00:59,670
think got a couple positions open so if

00:00:57,930 --> 00:01:02,430
you might be interested in joining a

00:00:59,670 --> 00:01:03,690
unique team find someone wearing one of

00:01:02,430 --> 00:01:05,939
these shirts I'll give you a hint

00:01:03,690 --> 00:01:07,409
there's a lot of them right here and

00:01:05,939 --> 00:01:08,700
we've actually also got a number of

00:01:07,409 --> 00:01:11,220
these shirts that we'd like to give away

00:01:08,700 --> 00:01:13,380
so Trek one of us down if you want to

00:01:11,220 --> 00:01:14,720
figure out how to get your hands on one

00:01:13,380 --> 00:01:17,460
of those as well

00:01:14,720 --> 00:01:20,100
but anyway as you might have guessed I'm

00:01:17,460 --> 00:01:22,830
primarily a front-end developer but I

00:01:20,100 --> 00:01:24,509
say primarily because it's front-end

00:01:22,830 --> 00:01:26,520
developer that works with Drupal it's

00:01:24,509 --> 00:01:28,140
pretty easy to stray into territory that

00:01:26,520 --> 00:01:30,360
no longer feels like front-end

00:01:28,140 --> 00:01:32,220
development it's pretty easy to find

00:01:30,360 --> 00:01:35,310
yourself away from the world of HTML and

00:01:32,220 --> 00:01:39,180
CSS and JavaScript and find yourself in

00:01:35,310 --> 00:01:41,070
a fight to the death with PHP but that's

00:01:39,180 --> 00:01:43,409
often life as a front-end Drupal

00:01:41,070 --> 00:01:45,299
developer or a themer you could say but

00:01:43,409 --> 00:01:48,600
that's what this session is about there

00:01:45,299 --> 00:01:50,460
will be quite a bit of PHP but hopefully

00:01:48,600 --> 00:01:52,229
you are going to leave this session more

00:01:50,460 --> 00:01:54,170
comfortable with what's going on back

00:01:52,229 --> 00:01:57,930
there what's what's happening before the

00:01:54,170 --> 00:02:00,420
template so let's talk about render

00:01:57,930 --> 00:02:03,299
arrays but why do I care so much about

00:02:00,420 --> 00:02:05,369
render raise well I've been working with

00:02:03,299 --> 00:02:07,530
the same client for the last year and

00:02:05,369 --> 00:02:09,179
they're a very large a media company

00:02:07,530 --> 00:02:10,860
that manages a lot of Drupal sites

00:02:09,179 --> 00:02:13,050
they've got a few multi-site

00:02:10,860 --> 00:02:13,590
repositories and they've been doing one

00:02:13,050 --> 00:02:15,420
rebuild

00:02:13,590 --> 00:02:17,370
redesign after another and their

00:02:15,420 --> 00:02:19,650
requirements for each site often look a

00:02:17,370 --> 00:02:21,269
lot like this we want to build this

00:02:19,650 --> 00:02:24,239
feature just like we built it on the

00:02:21,269 --> 00:02:27,120
last site but it needs to be slightly

00:02:24,239 --> 00:02:28,140
different on this site so as a developer

00:02:27,120 --> 00:02:30,870
you think okay how are we gonna

00:02:28,140 --> 00:02:32,670
accomplish this well we could copy and

00:02:30,870 --> 00:02:34,590
paste all of that code that we that we

00:02:32,670 --> 00:02:36,360
wrote for the last site paste it into

00:02:34,590 --> 00:02:38,640
the new site change the little bits that

00:02:36,360 --> 00:02:40,890
need to be different for this site and

00:02:38,640 --> 00:02:42,959
that would work but this should

00:02:40,890 --> 00:02:45,630
definitely invoke visions of this

00:02:42,959 --> 00:02:47,760
popular acronym dry or dr why don't

00:02:45,630 --> 00:02:49,349
repeat yourself we don't want to copy

00:02:47,760 --> 00:02:50,459
and paste a ton of code because that's

00:02:49,349 --> 00:02:52,079
twice the amount of code we're gonna

00:02:50,459 --> 00:02:53,730
have to maintain twice the bug so we're

00:02:52,079 --> 00:02:57,390
gonna have to fix and this organization

00:02:53,730 --> 00:03:00,840
has a ton of sites not just two so that

00:02:57,390 --> 00:03:02,730
is not scalable but we work with Drupal

00:03:00,840 --> 00:03:05,459
so we know the better answer is

00:03:02,730 --> 00:03:08,069
abstraction I mean after all that's how

00:03:05,459 --> 00:03:10,349
the Drupal ecosystem of contributed

00:03:08,069 --> 00:03:12,209
modules is able to work everything is

00:03:10,349 --> 00:03:14,310
done in a very general way that can be

00:03:12,209 --> 00:03:16,379
configured for site-specific needs and

00:03:14,310 --> 00:03:18,299
so any custom code that we're writing

00:03:16,379 --> 00:03:20,459
for our clients can and should be built

00:03:18,299 --> 00:03:22,829
with the same goal so while building

00:03:20,459 --> 00:03:25,319
themes for this client I quickly began

00:03:22,829 --> 00:03:28,170
to realize that render arrays are

00:03:25,319 --> 00:03:29,609
definitely abstract they're both they're

00:03:28,170 --> 00:03:31,160
abstract both in the sense that they're

00:03:29,609 --> 00:03:33,269
very difficult to understand at times

00:03:31,160 --> 00:03:35,549
but they're abstract in the sense that

00:03:33,269 --> 00:03:37,709
they allow us to write code that all the

00:03:35,549 --> 00:03:39,540
sites can use in a way that each site

00:03:37,709 --> 00:03:42,030
can still accomplish its unique goals at

00:03:39,540 --> 00:03:44,069
the same time which is much better than

00:03:42,030 --> 00:03:46,290
copying and pasting a lot of code

00:03:44,069 --> 00:03:49,290
because again we're trying to not repeat

00:03:46,290 --> 00:03:51,239
ourselves another reason I like to speak

00:03:49,290 --> 00:03:52,919
about render Ray's is because once I

00:03:51,239 --> 00:03:54,900
really started understanding them while

00:03:52,919 --> 00:03:56,519
working with this client I realized just

00:03:54,900 --> 00:03:58,260
how big of a role they play

00:03:56,519 --> 00:04:00,810
rendering the entire page the page

00:03:58,260 --> 00:04:03,090
itself and everything on it I also

00:04:00,810 --> 00:04:04,260
realized I definitely wasn't alone in

00:04:03,090 --> 00:04:06,060
not understanding them

00:04:04,260 --> 00:04:08,970
I don't know that really that many

00:04:06,060 --> 00:04:11,220
people do so everyone jokes about Drupal

00:04:08,970 --> 00:04:12,810
arrays of doom but it seems like few can

00:04:11,220 --> 00:04:15,090
kind of really dive into them get what

00:04:12,810 --> 00:04:16,169
they need and come out alive so that's

00:04:15,090 --> 00:04:18,359
why we're talking about render race

00:04:16,169 --> 00:04:22,019
today and hopefully we're going to

00:04:18,359 --> 00:04:24,120
change that but you might have one more

00:04:22,019 --> 00:04:26,130
question arrays in Drupal 8 what I

00:04:24,120 --> 00:04:27,470
thought Drupal 8 was object-oriented

00:04:26,130 --> 00:04:29,780
well it

00:04:27,470 --> 00:04:32,480
most of it but a lot of the render API

00:04:29,780 --> 00:04:35,390
is still still array based and a lot of

00:04:32,480 --> 00:04:36,860
the themed system is still procedural it

00:04:35,390 --> 00:04:38,930
seems that this is because most of the

00:04:36,860 --> 00:04:41,390
attention given into the theme system

00:04:38,930 --> 00:04:42,830
between Drupal 7 and Drupal 8 went to

00:04:41,390 --> 00:04:45,350
something else you've probably heard a

00:04:42,830 --> 00:04:47,630
little bit about which is twig the new

00:04:45,350 --> 00:04:49,190
templating engine and that's for a good

00:04:47,630 --> 00:04:51,500
reason it's a huge improvement there's

00:04:49,190 --> 00:04:53,690
plenty to be excited about but from what

00:04:51,500 --> 00:04:55,730
I can tell in the issue cues twig took

00:04:53,690 --> 00:04:57,110
so much time and energy to implement

00:04:55,730 --> 00:04:58,880
that there wasn't enough left to

00:04:57,110 --> 00:05:01,670
drastically alter the rest of the theme

00:04:58,880 --> 00:05:02,470
system before Drupal 8's code an API

00:05:01,670 --> 00:05:05,260
freeze

00:05:02,470 --> 00:05:07,970
so render arrays remain in Drupal 8 I

00:05:05,260 --> 00:05:09,230
think it's safe to say also that those

00:05:07,970 --> 00:05:11,510
that are very familiar with them

00:05:09,230 --> 00:05:12,890
sometimes love to hate them and there's

00:05:11,510 --> 00:05:14,870
plenty of great ideas floating around

00:05:12,890 --> 00:05:16,310
about where to go next I'll talk a

00:05:14,870 --> 00:05:18,680
little bit more about that at the end

00:05:16,310 --> 00:05:20,419
but the fact is render arrays currently

00:05:18,680 --> 00:05:22,730
play a bigger role in Drupal 8 and

00:05:20,419 --> 00:05:24,050
Drupal than they did in Drupal 7 so

00:05:22,730 --> 00:05:26,840
we're gonna accept and learn their ways

00:05:24,050 --> 00:05:28,730
here today and we're gonna be learning

00:05:26,840 --> 00:05:31,040
their ways with a lot of small code

00:05:28,730 --> 00:05:33,290
samples and I'm gonna be doing my best

00:05:31,040 --> 00:05:35,419
to mark which code samples are Drupal 7

00:05:33,290 --> 00:05:37,220
verse Drupal 8 but as I mentioned

00:05:35,419 --> 00:05:39,680
they're gonna look pretty similar in

00:05:37,220 --> 00:05:42,230
most situations so this means it's never

00:05:39,680 --> 00:05:43,810
too late to start using this knowledge

00:05:42,230 --> 00:05:47,300
in Drupal 7 too

00:05:43,810 --> 00:05:49,490
so let's get started I'm gonna speak

00:05:47,300 --> 00:05:52,190
specifically about what a render array

00:05:49,490 --> 00:05:54,169
looks like how render arrays work why

00:05:52,190 --> 00:05:56,780
they're useful a little bit about the

00:05:54,169 --> 00:06:00,260
render API as a whole and the future of

00:05:56,780 --> 00:06:04,340
render arrays so what do render arrays

00:06:00,260 --> 00:06:06,080
look like so as the session description

00:06:04,340 --> 00:06:08,570
mentions there are two ways to turn data

00:06:06,080 --> 00:06:11,330
into markup in Drupal 7 the theme

00:06:08,570 --> 00:06:12,950
function and render race when we're

00:06:11,330 --> 00:06:15,650
using either one at a very basic level

00:06:12,950 --> 00:06:17,510
they actually look very similar in all

00:06:15,650 --> 00:06:19,550
of the core and country of and custom

00:06:17,510 --> 00:06:22,430
code I've seen written for Drupal 7 I

00:06:19,550 --> 00:06:24,890
see theme being called a lot more often

00:06:22,430 --> 00:06:26,060
than I see render arrays being used so

00:06:24,890 --> 00:06:27,800
I'm going to assume we're a little more

00:06:26,060 --> 00:06:30,919
familiar with that let's start there

00:06:27,800 --> 00:06:32,450
with the theme function so here's what

00:06:30,919 --> 00:06:34,850
using the theme function looks like in

00:06:32,450 --> 00:06:37,220
Drupal 7 here we're rendering an image

00:06:34,850 --> 00:06:40,550
with a given path in an ultra alt

00:06:37,220 --> 00:06:41,360
attribute variable so the first argument

00:06:40,550 --> 00:06:43,400
is the

00:06:41,360 --> 00:06:46,099
hook to use and I'm gonna get more into

00:06:43,400 --> 00:06:48,139
what that means exactly later but that's

00:06:46,099 --> 00:06:51,530
how we tell ripple that we're rendering

00:06:48,139 --> 00:06:53,509
an image the second argument is an array

00:06:51,530 --> 00:06:55,669
of variables and in this case we're

00:06:53,509 --> 00:06:58,210
providing the path to our logo and the

00:06:55,669 --> 00:07:01,009
text we want to print in the alt tag

00:06:58,210 --> 00:07:02,599
I'll also discuss later what determines

00:07:01,009 --> 00:07:04,639
what variables we can use here when

00:07:02,599 --> 00:07:06,800
we're calling this function but for

00:07:04,639 --> 00:07:09,919
images these are two of the few that we

00:07:06,800 --> 00:07:12,560
can use so this is what the equivalent

00:07:09,919 --> 00:07:16,310
render array looks like as I said before

00:07:12,560 --> 00:07:17,780
it actually looks very similar just like

00:07:16,310 --> 00:07:19,759
with the theme function we're passing

00:07:17,780 --> 00:07:21,469
which theme hook we want to use but

00:07:19,759 --> 00:07:23,719
instead of passing it as an argument

00:07:21,469 --> 00:07:27,349
we're passing it as an item in the same

00:07:23,719 --> 00:07:29,750
array that is keyed by theme by hash

00:07:27,349 --> 00:07:31,879
theme and I'll explain more about how

00:07:29,750 --> 00:07:33,080
that works later also but right now

00:07:31,879 --> 00:07:35,870
we're just getting familiar with what

00:07:33,080 --> 00:07:37,340
they look like and we're also passing

00:07:35,870 --> 00:07:39,439
the path and alt variables that we'd

00:07:37,340 --> 00:07:41,779
like to pull to use when we're rendering

00:07:39,439 --> 00:07:44,629
our image the same data that we pass

00:07:41,779 --> 00:07:46,099
through the theme function so there you

00:07:44,629 --> 00:07:49,639
have it that's what a render array looks

00:07:46,099 --> 00:07:51,500
like but what's the difference so let's

00:07:49,639 --> 00:07:53,360
go back to using the theme function so

00:07:51,500 --> 00:07:55,699
this is actually calling a function and

00:07:53,360 --> 00:07:57,650
functions return something so what the

00:07:55,699 --> 00:08:00,620
theme function returns is rendered

00:07:57,650 --> 00:08:02,569
markup so after this code is executed

00:08:00,620 --> 00:08:05,389
and the result is assigned to that logo

00:08:02,569 --> 00:08:08,449
variable if we go ahead and print that

00:08:05,389 --> 00:08:10,069
string say in a template we will get the

00:08:08,449 --> 00:08:14,060
image tag with the source and alt

00:08:10,069 --> 00:08:15,949
attributes that we passed along but our

00:08:14,060 --> 00:08:17,779
render array is just an array it's not

00:08:15,949 --> 00:08:20,539
markup yet and we haven't called any

00:08:17,779 --> 00:08:23,110
functions to do anything with it so how

00:08:20,539 --> 00:08:25,370
do we get from our array to our markup

00:08:23,110 --> 00:08:27,650
well if we try and print that variable

00:08:25,370 --> 00:08:30,139
in the same way in our template it's

00:08:27,650 --> 00:08:31,460
gonna print the word array I've had this

00:08:30,139 --> 00:08:34,099
happen to me a million times while

00:08:31,460 --> 00:08:36,800
working with Drupal 7 and if you have to

00:08:34,099 --> 00:08:39,620
this is likely the reason you have to

00:08:36,800 --> 00:08:41,390
act on that array before you print it so

00:08:39,620 --> 00:08:44,029
we do that instead of just printing our

00:08:41,390 --> 00:08:45,890
array variable we run it through the

00:08:44,029 --> 00:08:50,000
render function and again this is Drupal

00:08:45,890 --> 00:08:52,399
7 still and so we normally try and avoid

00:08:50,000 --> 00:08:54,769
calling functions in Drupal 7 templates

00:08:52,399 --> 00:08:56,779
but the the render functions kind of

00:08:54,769 --> 00:08:58,519
an exception and it's totally expected

00:08:56,779 --> 00:09:00,499
and recommended to call it from there

00:08:58,519 --> 00:09:03,339
but what it's going to do is it's going

00:09:00,499 --> 00:09:06,649
to turn that array into the right markup

00:09:03,339 --> 00:09:09,559
which is our image tag the same markup

00:09:06,649 --> 00:09:11,660
that we got from the theme function in a

00:09:09,559 --> 00:09:13,879
twig template in Drupal 8 rendering our

00:09:11,660 --> 00:09:15,679
render array is as easy as printing any

00:09:13,879 --> 00:09:17,839
other variable this is going to

00:09:15,679 --> 00:09:18,980
recognize that the variable is a render

00:09:17,839 --> 00:09:21,829
array and it's going to turn it into

00:09:18,980 --> 00:09:24,649
markup basically a little some of the

00:09:21,829 --> 00:09:26,059
many pieces of magic and twig and I'm

00:09:24,649 --> 00:09:27,769
not going to go too deep into twig

00:09:26,059 --> 00:09:29,449
there's plenty of great sessions about

00:09:27,769 --> 00:09:31,759
it I think the last one in this room was

00:09:29,449 --> 00:09:32,899
about twig but just know that you don't

00:09:31,759 --> 00:09:35,689
have to worry about the render function

00:09:32,899 --> 00:09:39,559
in Drupal 8 or the equivalent at least

00:09:35,689 --> 00:09:41,209
from within a template so regardless of

00:09:39,559 --> 00:09:43,040
which version of Drupal we're working

00:09:41,209 --> 00:09:45,079
with the fact that our variable is still

00:09:43,040 --> 00:09:47,569
an array until this point is why render

00:09:45,079 --> 00:09:49,339
arrays are superior to using the same

00:09:47,569 --> 00:09:51,589
function which immediately creates

00:09:49,339 --> 00:09:54,170
markup it makes very little difference

00:09:51,589 --> 00:09:55,759
with this simple example so far but it's

00:09:54,170 --> 00:09:59,389
gonna make a big difference when things

00:09:55,759 --> 00:10:02,059
get a lot more complex the other thing

00:09:59,389 --> 00:10:03,619
to know about what render arrays look

00:10:02,059 --> 00:10:06,499
like is that you're often going to see

00:10:03,619 --> 00:10:10,220
them nested inside of other arrays so

00:10:06,499 --> 00:10:12,559
for example Drupal 8 sorry Drupal builds

00:10:10,220 --> 00:10:14,119
the page with deeply nested arrays it

00:10:12,559 --> 00:10:16,399
looks something like this this is very

00:10:14,119 --> 00:10:18,170
simplified but you've got your your

00:10:16,399 --> 00:10:19,759
regions essentially here on the the

00:10:18,170 --> 00:10:22,160
first level your header your content

00:10:19,759 --> 00:10:23,749
sidebar and footer and inside of each of

00:10:22,160 --> 00:10:26,209
those regions are going to be even more

00:10:23,749 --> 00:10:27,889
arrays containing the content that

00:10:26,209 --> 00:10:32,600
should be printed when the page is

00:10:27,889 --> 00:10:34,819
rendered so printing a portion of that

00:10:32,600 --> 00:10:37,129
array such as the content region it's

00:10:34,819 --> 00:10:39,379
going to look like this in Drupal 7 page

00:10:37,129 --> 00:10:42,939
template and it looks like this in the

00:10:39,379 --> 00:10:45,259
page template of Drupal 8 stable theme

00:10:42,939 --> 00:10:47,209
so what Drupal is gonna do when it's

00:10:45,259 --> 00:10:49,819
told to render a nested array like this

00:10:47,209 --> 00:10:51,769
is it's gonna go it's gonna dig into

00:10:49,819 --> 00:10:53,239
every item it's just gonna keep going

00:10:51,769 --> 00:10:55,879
down drilling inside of it it's gonna

00:10:53,239 --> 00:10:57,709
find the arrays with hashed keys and

00:10:55,879 --> 00:10:59,540
it's gonna see those as render arrays

00:10:57,709 --> 00:11:02,720
and it's gonna attempt to render them as

00:10:59,540 --> 00:11:04,850
such in any array key without the hash

00:11:02,720 --> 00:11:07,160
it's gonna continue digging into to try

00:11:04,850 --> 00:11:09,600
and find more things to render

00:11:07,160 --> 00:11:12,060
so that's why render Reiki start with a

00:11:09,600 --> 00:11:14,910
hash to differentiate them from arrays

00:11:12,060 --> 00:11:17,880
that are used to organize render arrays

00:11:14,910 --> 00:11:19,800
or data or anything else and Drupal

00:11:17,880 --> 00:11:22,530
doesn't actually care what the non

00:11:19,800 --> 00:11:24,720
hashed array Keys are there more for

00:11:22,530 --> 00:11:26,220
organization or in this case just to

00:11:24,720 --> 00:11:28,260
match the names of your regions and

00:11:26,220 --> 00:11:30,690
things like that but when it gets to a

00:11:28,260 --> 00:11:32,550
render array the actual names of those

00:11:30,690 --> 00:11:36,090
properties become a lot more important

00:11:32,550 --> 00:11:37,770
and they need to be specific so that's

00:11:36,090 --> 00:11:41,970
what they look like how do you render

00:11:37,770 --> 00:11:44,730
arrays work how does Drupal sevens

00:11:41,970 --> 00:11:47,810
render function or Drupal 8 swig engine

00:11:44,730 --> 00:11:52,200
know how to take our render array and

00:11:47,810 --> 00:11:54,030
turn it into markup so to understand

00:11:52,200 --> 00:11:56,640
that we're gonna take a bit of a deep

00:11:54,030 --> 00:11:58,020
dive into the theme system the session

00:11:56,640 --> 00:11:59,880
description doesn't really mention that

00:11:58,020 --> 00:12:02,520
we would do this but it's kind of hard

00:11:59,880 --> 00:12:04,440
to understand render raise and their

00:12:02,520 --> 00:12:08,130
benefits without understanding the

00:12:04,440 --> 00:12:09,690
basics of the theme set theme system so

00:12:08,130 --> 00:12:11,670
this could definitely easily be a

00:12:09,690 --> 00:12:16,320
session of its own but we're gonna aim

00:12:11,670 --> 00:12:17,640
for the quickest version that we can so

00:12:16,320 --> 00:12:19,950
it's all going to start in the theme

00:12:17,640 --> 00:12:21,690
system with hook theme hook theme is

00:12:19,950 --> 00:12:24,690
where most everything that gets rendered

00:12:21,690 --> 00:12:26,880
is initially defined and this is a very

00:12:24,690 --> 00:12:29,670
simplified and kind of change to round

00:12:26,880 --> 00:12:31,740
version of it but this is what hook

00:12:29,670 --> 00:12:34,620
theme kind of looks like within cores

00:12:31,740 --> 00:12:36,000
system module and that's where a lot of

00:12:34,620 --> 00:12:39,750
the common elements that we're probably

00:12:36,000 --> 00:12:41,790
used to are initially defined so what we

00:12:39,750 --> 00:12:43,590
have here are HTML and page it's

00:12:41,790 --> 00:12:45,660
probably likely that a number of us in

00:12:43,590 --> 00:12:48,300
this room have worked with the HTML and

00:12:45,660 --> 00:12:51,390
page templates before and that's where

00:12:48,300 --> 00:12:53,700
they're initially defined so that was

00:12:51,390 --> 00:12:56,220
Drupal 7 this is Drupal 8 and once again

00:12:53,700 --> 00:12:58,140
they look almost identical except you

00:12:56,220 --> 00:13:00,510
don't have to explicitly name what the

00:12:58,140 --> 00:13:02,100
what the name of the template is I'll

00:13:00,510 --> 00:13:03,780
explain a bit more about that in a

00:13:02,100 --> 00:13:06,330
little bit and also what a render

00:13:03,780 --> 00:13:07,650
element is a little bit later but for

00:13:06,330 --> 00:13:09,360
now just understand that anything

00:13:07,650 --> 00:13:11,700
rendered through the theme function in

00:13:09,360 --> 00:13:14,130
Drupal 7 or through a render array in

00:13:11,700 --> 00:13:18,450
Drupal 7 or 8 is going to be initially

00:13:14,130 --> 00:13:20,040
defined with hook theme now in that same

00:13:18,450 --> 00:13:22,350
implementation of hook the

00:13:20,040 --> 00:13:25,170
within the system module our image theme

00:13:22,350 --> 00:13:27,690
hook use in our previous examples is

00:13:25,170 --> 00:13:29,820
also defined but this looks a little bit

00:13:27,690 --> 00:13:32,579
different it looks a little different

00:13:29,820 --> 00:13:34,649
than the HTML and page examples because

00:13:32,579 --> 00:13:36,480
here we're defining a list of variables

00:13:34,649 --> 00:13:38,130
that can be used with this theme hook

00:13:36,480 --> 00:13:40,410
and the default values they're going to

00:13:38,130 --> 00:13:43,620
use if we don't give them an explicit

00:13:40,410 --> 00:13:47,009
value ourselves two of those variables

00:13:43,620 --> 00:13:48,990
are the path and the alt variables which

00:13:47,009 --> 00:13:51,060
are what we use in our previous examples

00:13:48,990 --> 00:13:53,819
so we're starting to connect the dots

00:13:51,060 --> 00:13:55,889
here when we're rendering our render

00:13:53,819 --> 00:13:58,620
array the theme property is the theme

00:13:55,889 --> 00:14:01,500
hook to use which is defined in hook

00:13:58,620 --> 00:14:04,199
theme somewhere and the other properties

00:14:01,500 --> 00:14:06,930
are the variables to use when rendering

00:14:04,199 --> 00:14:08,579
that theme hook and in this example in

00:14:06,930 --> 00:14:10,829
addition to path and alt we could have

00:14:08,579 --> 00:14:12,449
used any of the other variables the

00:14:10,829 --> 00:14:15,029
dimensions variables the width and the

00:14:12,449 --> 00:14:16,529
height or pass the title attribute or

00:14:15,029 --> 00:14:19,110
any other attribute we wanted through

00:14:16,529 --> 00:14:22,800
the attributes array and if they're

00:14:19,110 --> 00:14:24,720
given a value by a render array then

00:14:22,800 --> 00:14:29,010
when rendering the mark-up Drupal is

00:14:24,720 --> 00:14:31,319
going to use those but what we've been

00:14:29,010 --> 00:14:33,000
looking at here is Drupal 7 the

00:14:31,319 --> 00:14:34,949
definition of the image theme hook in

00:14:33,000 --> 00:14:39,920
Drupal 7 so let's take a look at what

00:14:34,949 --> 00:14:43,260
that looks like in Drupal 8 very similar

00:14:39,920 --> 00:14:46,709
the only difference is here between 7 &

00:14:43,260 --> 00:14:48,480
8 images image name hook are instead of

00:14:46,709 --> 00:14:51,630
passing a path we're now going to pass a

00:14:48,480 --> 00:14:53,639
URI and there are a few new variables as

00:14:51,630 --> 00:14:55,050
well the sizes and source set variables

00:14:53,639 --> 00:14:57,300
are going to help us build responsive

00:14:55,050 --> 00:15:01,620
images and we can also pass the name of

00:14:57,300 --> 00:15:03,660
an image style so if this was our render

00:15:01,620 --> 00:15:05,760
array and Drupal 7 and we needed to port

00:15:03,660 --> 00:15:09,060
it to Drupal 8 it might look something

00:15:05,760 --> 00:15:12,300
like this all we had to do is update our

00:15:09,060 --> 00:15:15,930
path to a URI and aside from that it's

00:15:12,300 --> 00:15:17,610
gonna look just the same but let's say

00:15:15,930 --> 00:15:19,410
we wanted to take advantage of those new

00:15:17,610 --> 00:15:22,290
variables and we want to render a

00:15:19,410 --> 00:15:24,630
responsive image and we don't

00:15:22,290 --> 00:15:27,029
necessarily need to go too far into how

00:15:24,630 --> 00:15:29,610
responsive images work but that might

00:15:27,029 --> 00:15:30,959
look something like this our example got

00:15:29,610 --> 00:15:33,480
quite a bit more complicated pretty

00:15:30,959 --> 00:15:33,690
quickly but as you can see we're passing

00:15:33,480 --> 00:15:36,000
on

00:15:33,690 --> 00:15:38,430
values for the sizes and source set

00:15:36,000 --> 00:15:39,810
attribute we're saying that our image is

00:15:38,430 --> 00:15:43,350
going to be a hundred percent of the

00:15:39,810 --> 00:15:46,170
viewport width and we are saying we are

00:15:43,350 --> 00:15:48,720
telling the browser to pick between one

00:15:46,170 --> 00:15:51,480
of two images either our thumbnail which

00:15:48,720 --> 00:15:55,920
is 250 pixels wide or the large image

00:15:51,480 --> 00:15:58,460
style derivative which is 750 wide so

00:15:55,920 --> 00:16:00,300
when when we render this render array

00:15:58,460 --> 00:16:02,280
Drupal is going to take that additional

00:16:00,300 --> 00:16:05,310
information and it's going to use it to

00:16:02,280 --> 00:16:07,710
construct our markup once again so if we

00:16:05,310 --> 00:16:09,630
ran this new render array our markup is

00:16:07,710 --> 00:16:12,770
going to end up looking something like

00:16:09,630 --> 00:16:15,150
this so the source and the alt

00:16:12,770 --> 00:16:16,800
attributes look the same but you can see

00:16:15,150 --> 00:16:19,980
that the data we passed along for the

00:16:16,800 --> 00:16:22,050
sizes and the source set attributes have

00:16:19,980 --> 00:16:27,150
been taken - taken into account and

00:16:22,050 --> 00:16:29,040
added to our image tag as well but even

00:16:27,150 --> 00:16:30,960
though we know what initially defines

00:16:29,040 --> 00:16:33,360
our image theme hook and the variables

00:16:30,960 --> 00:16:37,080
that we can use with it how do we get

00:16:33,360 --> 00:16:38,390
from this crazy array to our complex

00:16:37,080 --> 00:16:40,560
image tag markup

00:16:38,390 --> 00:16:43,530
there's obviously got to be steps in

00:16:40,560 --> 00:16:46,080
between there what's Drupal doing so to

00:16:43,530 --> 00:16:49,110
jump back to our hook theme example in

00:16:46,080 --> 00:16:51,890
Drupal 7 in Drupal 7 a theme hook is

00:16:49,110 --> 00:16:54,480
going to be rendered in one of two ways

00:16:51,890 --> 00:16:56,100
the first way is a template and like I

00:16:54,480 --> 00:16:58,680
said before we've probably worked with

00:16:56,100 --> 00:17:02,670
the HTML and page templates or seen them

00:16:58,680 --> 00:17:04,650
in our themes but our image example only

00:17:02,670 --> 00:17:06,450
defined variables and never defined a

00:17:04,650 --> 00:17:09,540
template name and you've probably never

00:17:06,450 --> 00:17:12,090
worked with a template named image TPL

00:17:09,540 --> 00:17:15,960
dot PHP so if it's not rendered through

00:17:12,090 --> 00:17:18,000
a template how is it rendered with and

00:17:15,960 --> 00:17:20,160
again this is all Drupal 7 for right now

00:17:18,000 --> 00:17:22,110
with something called a theme function

00:17:20,160 --> 00:17:23,670
theme functions are named theme

00:17:22,110 --> 00:17:27,120
underscore and then the name of our

00:17:23,670 --> 00:17:29,130
theme hook and as you can see here what

00:17:27,120 --> 00:17:31,950
theme what the theme image function is

00:17:29,130 --> 00:17:33,780
doing is it's taking the path that we

00:17:31,950 --> 00:17:36,720
pass along and it's assigning that to

00:17:33,780 --> 00:17:38,370
our source attribute and then it's going

00:17:36,720 --> 00:17:40,350
to take any other variables that we pass

00:17:38,370 --> 00:17:42,300
along and assign those two attributes as

00:17:40,350 --> 00:17:43,890
well and then there at the bottom it's

00:17:42,300 --> 00:17:45,140
gonna flatten them into a string and

00:17:43,890 --> 00:17:48,920
print them within our

00:17:45,140 --> 00:17:49,880
which tag that's a theme function but

00:17:48,920 --> 00:17:52,250
you don't need to worry about those

00:17:49,880 --> 00:17:54,950
anymore because all theme functions were

00:17:52,250 --> 00:17:57,770
removed from Drupal 8 last year and they

00:17:54,950 --> 00:17:59,150
were all replaced with templates and you

00:17:57,770 --> 00:18:00,950
can hug your local theme system

00:17:59,150 --> 00:18:03,620
maintainer for killing all theme

00:18:00,950 --> 00:18:05,000
functions because they got really ugly

00:18:03,620 --> 00:18:07,970
really fast

00:18:05,000 --> 00:18:10,250
this is themed item list which in Drupal

00:18:07,970 --> 00:18:12,710
7 is used to render a simple item list

00:18:10,250 --> 00:18:14,780
an unordered list and ordered list now

00:18:12,710 --> 00:18:16,490
if I wanted to make any changes to the

00:18:14,780 --> 00:18:18,260
mark-up that this outputs I'm gonna have

00:18:16,490 --> 00:18:21,470
to copy and paste the entire thing to

00:18:18,260 --> 00:18:23,810
override it and make make changes from

00:18:21,470 --> 00:18:24,890
there but we don't want to be repeating

00:18:23,810 --> 00:18:28,210
ourselves we don't want to be

00:18:24,890 --> 00:18:31,220
constructing markup in PHP like that

00:18:28,210 --> 00:18:34,220
so theme functions are dead again that's

00:18:31,220 --> 00:18:35,810
why you no longer have to name the

00:18:34,220 --> 00:18:37,850
template from within hook theme and

00:18:35,810 --> 00:18:41,750
Drupal 8 because core is going to assume

00:18:37,850 --> 00:18:43,550
that you're working with the template so

00:18:41,750 --> 00:18:47,480
instead of theme image living on in

00:18:43,550 --> 00:18:52,070
Drupal 8 we have our image HTML that

00:18:47,480 --> 00:18:53,690
twig file instead but that only prints

00:18:52,070 --> 00:18:57,050
the attributes object inside of the

00:18:53,690 --> 00:18:59,030
image tag what happened to all the logic

00:18:57,050 --> 00:19:01,160
at the top that took our variables and

00:18:59,030 --> 00:19:03,250
kind of prepared them into attributes

00:19:01,160 --> 00:19:05,750
that got printed in that image tag

00:19:03,250 --> 00:19:08,350
what's going to take the value of our

00:19:05,750 --> 00:19:11,540
source set and sizes and URI and alt and

00:19:08,350 --> 00:19:14,660
turn those into strings that the

00:19:11,540 --> 00:19:18,050
template can print the answer that is

00:19:14,660 --> 00:19:20,000
pre process functions and this is course

00:19:18,050 --> 00:19:23,870
pre process function for the image theme

00:19:20,000 --> 00:19:25,490
hook so pre process functions are named

00:19:23,870 --> 00:19:28,640
with a prefix of either the word

00:19:25,490 --> 00:19:30,260
template the name of mod and module or

00:19:28,640 --> 00:19:31,700
the name of the theme and they're gonna

00:19:30,260 --> 00:19:34,190
get called in that order template

00:19:31,700 --> 00:19:36,740
underscore whatever any that are defined

00:19:34,190 --> 00:19:38,210
in modules and any defining themes and

00:19:36,740 --> 00:19:40,880
then you have the word pre process and

00:19:38,210 --> 00:19:43,520
then the name of the theme hook so for

00:19:40,880 --> 00:19:45,290
this specific pre process function you

00:19:43,520 --> 00:19:47,360
can see that cor is taking the value of

00:19:45,290 --> 00:19:49,490
our URI variable and assigning it to the

00:19:47,360 --> 00:19:51,230
source attribute then there's a lot of

00:19:49,490 --> 00:19:53,450
code that I commented out so I could fit

00:19:51,230 --> 00:19:55,820
the rest on this slide but it takes all

00:19:53,450 --> 00:19:58,820
of the data that you pass in the source

00:19:55,820 --> 00:19:59,240
set array and turns it into flattened

00:19:58,820 --> 00:20:03,230
story

00:19:59,240 --> 00:20:04,310
for that attribute and then finally it

00:20:03,230 --> 00:20:06,530
takes the rest of whatever other

00:20:04,310 --> 00:20:08,090
variables you've passed along which are

00:20:06,530 --> 00:20:11,210
a lot more simple and assigns them to

00:20:08,090 --> 00:20:14,270
the attributes array as well and that's

00:20:11,210 --> 00:20:15,890
what gets printed in the template while

00:20:14,270 --> 00:20:18,080
I'm talking about pre process functions

00:20:15,890 --> 00:20:20,420
you might have also heard of process

00:20:18,080 --> 00:20:22,670
functions in Drupal 7 those no longer

00:20:20,420 --> 00:20:24,470
live on in Drupal 8

00:20:22,670 --> 00:20:26,540
because process functions were typically

00:20:24,470 --> 00:20:28,340
used to do the flattening of an array to

00:20:26,540 --> 00:20:30,860
a string like calling the Drupal

00:20:28,340 --> 00:20:32,480
attributes function twig is magical you

00:20:30,860 --> 00:20:34,400
don't need to do that so process

00:20:32,480 --> 00:20:35,840
functions are dead they do not exist in

00:20:34,400 --> 00:20:39,620
Drupal 8 just thought I should mention

00:20:35,840 --> 00:20:41,960
that and actually a lot of folks are

00:20:39,620 --> 00:20:44,200
moving their markup logic from pre

00:20:41,960 --> 00:20:47,170
process functions back into the template

00:20:44,200 --> 00:20:49,610
and there's actually even a core issue

00:20:47,170 --> 00:20:51,020
to do this with the image template and

00:20:49,610 --> 00:20:53,020
with the pre process function that we

00:20:51,020 --> 00:20:56,330
just looked at for the image theme hook

00:20:53,020 --> 00:20:59,420
and this is the node template within the

00:20:56,330 --> 00:21:00,860
classy theme within course so with this

00:20:59,420 --> 00:21:02,810
approach some folks would even argue

00:21:00,860 --> 00:21:04,910
that there's no need for pre process

00:21:02,810 --> 00:21:07,820
functions anymore but that's a different

00:21:04,910 --> 00:21:09,530
discussion for a different day but

00:21:07,820 --> 00:21:11,090
that's a big portion of the theme system

00:21:09,530 --> 00:21:14,480
in a nutshell hopefully I didn't lose

00:21:11,090 --> 00:21:16,760
you there to recap a tiny bit on that

00:21:14,480 --> 00:21:19,580
our initial definition of a theme hook

00:21:16,760 --> 00:21:21,170
is going to be is going to live within

00:21:19,580 --> 00:21:24,260
hook theme and that's going to tell us

00:21:21,170 --> 00:21:28,130
what variables we can use from within

00:21:24,260 --> 00:21:30,980
our render array and when we render that

00:21:28,130 --> 00:21:32,390
render array from within a template its

00:21:30,980 --> 00:21:34,100
variables you're going to be ran through

00:21:32,390 --> 00:21:36,980
any pre process functions that may exist

00:21:34,100 --> 00:21:38,240
and again modules and themes can define

00:21:36,980 --> 00:21:40,340
these two and we'll get into that later

00:21:38,240 --> 00:21:43,640
but it's gonna run any pre process

00:21:40,340 --> 00:21:45,530
functions to prepare variables that are

00:21:43,640 --> 00:21:48,260
going to be printed in the template and

00:21:45,530 --> 00:21:53,360
that's how we get the resulting markup

00:21:48,260 --> 00:21:55,250
that we wanted array so hopefully now

00:21:53,360 --> 00:21:57,580
you have a better understanding of the

00:21:55,250 --> 00:22:01,370
theme system and how render arrays work

00:21:57,580 --> 00:22:03,740
which is great now but why are render

00:22:01,370 --> 00:22:05,690
arrays useful kind of the whole point of

00:22:03,740 --> 00:22:07,550
this session why should I go through all

00:22:05,690 --> 00:22:10,160
of that trouble just to render an image

00:22:07,550 --> 00:22:11,840
tag why can't I kind of hard code most

00:22:10,160 --> 00:22:12,860
of the mark-up myself and put maybe

00:22:11,840 --> 00:22:16,070
variables in the die

00:22:12,860 --> 00:22:18,230
mimic bits so why should I use render

00:22:16,070 --> 00:22:22,250
rays and why is the theme function why

00:22:18,230 --> 00:22:23,660
does that no longer exist in Drupal 8 so

00:22:22,250 --> 00:22:26,090
I've used the word theme about a

00:22:23,660 --> 00:22:28,460
thousand times so far and I apologize

00:22:26,090 --> 00:22:30,410
that's Drupal but in the theme system

00:22:28,460 --> 00:22:32,570
rundown I mentioned that there are no

00:22:30,410 --> 00:22:35,320
more theme functions like theme image in

00:22:32,570 --> 00:22:38,120
core anymore done talking about that I

00:22:35,320 --> 00:22:40,220
also discuss hook theme is what

00:22:38,120 --> 00:22:42,350
initially defines theme hooks to use

00:22:40,220 --> 00:22:45,020
with our render arrays done talking

00:22:42,350 --> 00:22:47,780
about that too so let's talk about the

00:22:45,020 --> 00:22:49,580
theme function after all again the

00:22:47,780 --> 00:22:52,850
session description mentions it quite a

00:22:49,580 --> 00:22:54,880
bit so here is our example once again

00:22:52,850 --> 00:22:57,559
from the beginning of the session so

00:22:54,880 --> 00:23:00,410
this is how the theme function is used

00:22:57,559 --> 00:23:03,830
and it was called a lot in Drupal 7 I

00:23:00,410 --> 00:23:06,080
think over 200 times in core and it was

00:23:03,830 --> 00:23:07,820
used all throughout controls as well a

00:23:06,080 --> 00:23:09,730
lot of the custom code I've worked with

00:23:07,820 --> 00:23:13,610
a lot of custom code I used to write

00:23:09,730 --> 00:23:15,410
littered with the theme function and as

00:23:13,610 --> 00:23:17,299
we can see on the documentation page on

00:23:15,410 --> 00:23:20,390
troop org for it it's been around since

00:23:17,299 --> 00:23:23,260
Drupal 4.6 so it's definitely not new

00:23:20,390 --> 00:23:25,429
but it's not listed for Drupal 8 which

00:23:23,260 --> 00:23:27,260
normally what that means is you need to

00:23:25,429 --> 00:23:28,700
go find the object-oriented equivalent

00:23:27,260 --> 00:23:30,770
maybe dig through the comments on that

00:23:28,700 --> 00:23:33,710
page or do some googling but there's no

00:23:30,770 --> 00:23:37,010
direct object-oriented equivalent for

00:23:33,710 --> 00:23:39,440
this either it's just not there and in

00:23:37,010 --> 00:23:41,830
fact the same page has this comment a

00:23:39,440 --> 00:23:44,200
little further down in the documentation

00:23:41,830 --> 00:23:47,000
avoid calling this function directly

00:23:44,200 --> 00:23:48,710
it's preferable to replace direct calls

00:23:47,000 --> 00:23:51,200
to the theme function with calls to

00:23:48,710 --> 00:23:52,370
Drupal render which is the render

00:23:51,200 --> 00:23:54,620
function I've been showing you is a

00:23:52,370 --> 00:23:56,720
wrapper for Drupal renders so almost the

00:23:54,620 --> 00:23:58,940
same thing with calls to Drupal render

00:23:56,720 --> 00:24:01,040
by passing a render array with the theme

00:23:58,940 --> 00:24:03,020
key to Drupal render which in turn calls

00:24:01,040 --> 00:24:07,640
theme so it's not going to turn it into

00:24:03,020 --> 00:24:09,980
mark up until what we call a render so

00:24:07,640 --> 00:24:11,450
to understand why we're not fans of the

00:24:09,980 --> 00:24:15,260
theme function and why it's no longer

00:24:11,450 --> 00:24:16,940
let's use this as our example so this is

00:24:15,260 --> 00:24:20,179
a portion of the page template within

00:24:16,940 --> 00:24:22,160
Drupal 7 that prints the site logo on

00:24:20,179 --> 00:24:24,620
the page this is in the the system

00:24:22,160 --> 00:24:26,240
module of Drupal 7 to print the site

00:24:24,620 --> 00:24:28,610
logo on the page

00:24:26,240 --> 00:24:31,820
specifically here's our line that prints

00:24:28,610 --> 00:24:33,470
the actual image tag which this isn't

00:24:31,820 --> 00:24:35,210
using the theme function or a render

00:24:33,470 --> 00:24:37,430
array so this is kind of the question I

00:24:35,210 --> 00:24:39,470
asked a minute or two ago why should I

00:24:37,430 --> 00:24:41,570
bother with a confusing render array for

00:24:39,470 --> 00:24:43,550
an image tag when I could just create

00:24:41,570 --> 00:24:45,050
simpler variables for the dynamic bits

00:24:43,550 --> 00:24:47,810
like in this situation the source

00:24:45,050 --> 00:24:50,690
attribute when I could just create

00:24:47,810 --> 00:24:54,860
variables for those so let's think about

00:24:50,690 --> 00:24:58,190
that logo a variable though so and this

00:24:54,860 --> 00:25:01,730
is drastically simplified but the logo

00:24:58,190 --> 00:25:04,850
variable is built within cores template

00:25:01,730 --> 00:25:07,100
pre process page function and when I say

00:25:04,850 --> 00:25:08,390
simplified I mean I basically remove the

00:25:07,100 --> 00:25:10,730
rest of the function so we could focus

00:25:08,390 --> 00:25:12,980
on this but this is how that logo

00:25:10,730 --> 00:25:14,810
variables created so as you can see here

00:25:12,980 --> 00:25:16,820
it's using the logo theme setting to

00:25:14,810 --> 00:25:18,380
figure out what the source attributes

00:25:16,820 --> 00:25:20,600
gonna be so if you go to your appearance

00:25:18,380 --> 00:25:22,910
page on your theme and there's a place

00:25:20,600 --> 00:25:24,770
to put in the path of your logo that's

00:25:22,910 --> 00:25:27,740
where that's how that's how this that

00:25:24,770 --> 00:25:29,510
gets used but what if it's not that

00:25:27,740 --> 00:25:32,840
simple what if we need a different logo

00:25:29,510 --> 00:25:35,330
on the homepage so as I mentioned before

00:25:32,840 --> 00:25:38,060
any modules or themes can implement the

00:25:35,330 --> 00:25:39,770
same pre process functions so what if we

00:25:38,060 --> 00:25:42,740
implemented this pre process function

00:25:39,770 --> 00:25:44,630
from within our theme and we sit and we

00:25:42,740 --> 00:25:46,850
use Drupal is front page to figure out

00:25:44,630 --> 00:25:49,340
if it's a home page and if it is we

00:25:46,850 --> 00:25:52,460
change the path of our logo variable and

00:25:49,340 --> 00:25:54,320
so now if we're on the home page our

00:25:52,460 --> 00:25:56,990
logo variable is gonna print our home

00:25:54,320 --> 00:26:00,350
pages logo and the page template so that

00:25:56,990 --> 00:26:02,420
works still but what if it's not that

00:26:00,350 --> 00:26:04,730
simple what if we wanted to do something

00:26:02,420 --> 00:26:07,130
as simple as add a class to this image

00:26:04,730 --> 00:26:09,170
tag because maybe with our CSS or

00:26:07,130 --> 00:26:11,120
JavaScript we don't want to target you

00:26:09,170 --> 00:26:13,220
know the image directly we want to

00:26:11,120 --> 00:26:15,470
target something with a class so we want

00:26:13,220 --> 00:26:20,060
to add a class but that's gonna become

00:26:15,470 --> 00:26:21,830
pretty silly pretty pretty fast because

00:26:20,060 --> 00:26:24,380
we're gonna have to override the entire

00:26:21,830 --> 00:26:26,090
page template just to alter this image

00:26:24,380 --> 00:26:27,530
tags markups is so if you're familiar

00:26:26,090 --> 00:26:30,020
with templates you'd know you'd have to

00:26:27,530 --> 00:26:32,810
copy and paste this into your theme the

00:26:30,020 --> 00:26:35,510
entire thing just adds a class to your

00:26:32,810 --> 00:26:39,840
logo that's a lot of copied and pasted

00:26:35,510 --> 00:26:43,049
code not very dry so let's pretend

00:26:39,840 --> 00:26:46,530
the Drupal 7 Drupal 7 cores page

00:26:43,049 --> 00:26:49,169
template was a little more sane let's

00:26:46,530 --> 00:26:51,299
pretend that it prints a logo variable

00:26:49,169 --> 00:26:54,240
instead that prints the entire image tag

00:26:51,299 --> 00:26:56,490
and that logo and the construction of

00:26:54,240 --> 00:26:59,970
that tag has been moved into a pre

00:26:56,490 --> 00:27:02,299
process function so here would be doing

00:26:59,970 --> 00:27:04,650
that with the theme function and

00:27:02,299 --> 00:27:06,450
something like this is going to print

00:27:04,650 --> 00:27:08,760
the exact same markup we're going to get

00:27:06,450 --> 00:27:10,289
the path we want from our theme setting

00:27:08,760 --> 00:27:12,900
and we're gonna get the same alt

00:27:10,289 --> 00:27:16,020
attribute value so again this is the

00:27:12,900 --> 00:27:18,570
theme function not a render array but so

00:27:16,020 --> 00:27:21,809
now we want to add a class from within

00:27:18,570 --> 00:27:25,039
our pre process function to to what this

00:27:21,809 --> 00:27:27,480
is started for us with the logo variable

00:27:25,039 --> 00:27:29,429
so we create our pre process function

00:27:27,480 --> 00:27:31,679
within our theme and we used eval and we

00:27:29,429 --> 00:27:33,330
go to DPM the logo variable to see what

00:27:31,679 --> 00:27:36,539
it is at this time to see how we're

00:27:33,330 --> 00:27:38,460
gonna add our class but the theme

00:27:36,539 --> 00:27:40,230
function is going to return something

00:27:38,460 --> 00:27:42,659
and it's gonna return rendered mark up

00:27:40,230 --> 00:27:46,380
so how are we supposed to add a class to

00:27:42,659 --> 00:27:52,799
this markup that's already rendered well

00:27:46,380 --> 00:27:55,440
this will work okay so judging by the

00:27:52,799 --> 00:27:58,260
reaction I don't need to tell you that

00:27:55,440 --> 00:28:00,270
this is not ideal and in situations with

00:27:58,260 --> 00:28:01,830
more complex markup this is obviously

00:28:00,270 --> 00:28:03,539
not going to be an option we don't want

00:28:01,830 --> 00:28:07,230
to start writing regular expressions to

00:28:03,539 --> 00:28:09,480
do insane things so instead instead of

00:28:07,230 --> 00:28:12,150
using the theme function to initially

00:28:09,480 --> 00:28:14,419
create that logo variable and again this

00:28:12,150 --> 00:28:16,950
is theoretical cord doing its work

00:28:14,419 --> 00:28:20,429
instead we're going to construct that

00:28:16,950 --> 00:28:22,020
logo variable using a render array and

00:28:20,429 --> 00:28:23,520
this is going to produce the same markup

00:28:22,020 --> 00:28:25,020
that was hard-coded into the template

00:28:23,520 --> 00:28:28,710
and this is going to reproduce the same

00:28:25,020 --> 00:28:31,140
markup that was returned by the previous

00:28:28,710 --> 00:28:33,120
example of the theme function once again

00:28:31,140 --> 00:28:35,370
we go to DPM that variable from within

00:28:33,120 --> 00:28:37,559
our themes free process function to see

00:28:35,370 --> 00:28:39,720
what we're working with and it's still

00:28:37,559 --> 00:28:43,020
an array so we could totally work with

00:28:39,720 --> 00:28:45,480
this we can add our class to the

00:28:43,020 --> 00:28:48,840
attributes property in our render array

00:28:45,480 --> 00:28:50,250
and now this is what our the current

00:28:48,840 --> 00:28:51,780
state of the logo variable looks like

00:28:50,250 --> 00:28:52,400
this is what our render array looks like

00:28:51,780 --> 00:28:55,760
it has

00:28:52,400 --> 00:28:58,000
the class that we just added and and

00:28:55,760 --> 00:29:00,260
it's going to remain an array an array

00:28:58,000 --> 00:29:02,390
until the template calls the render

00:29:00,260 --> 00:29:03,860
function on that variable and we'll get

00:29:02,390 --> 00:29:05,570
the mark-up that we're looking for

00:29:03,860 --> 00:29:08,150
without altering the page template at

00:29:05,570 --> 00:29:11,810
all without repeating any code just one

00:29:08,150 --> 00:29:14,180
line from a pre-process function so this

00:29:11,810 --> 00:29:16,370
accomplishes our original goal and helps

00:29:14,180 --> 00:29:18,260
us solve our original problem whether

00:29:16,370 --> 00:29:20,420
it's a control that we're maintaining

00:29:18,260 --> 00:29:22,940
and it's being used in ways we can't

00:29:20,420 --> 00:29:24,950
even imagine or a theme based in perhaps

00:29:22,940 --> 00:29:27,380
or a custom modular theme that we're

00:29:24,950 --> 00:29:30,380
building that's used by multiple sites

00:29:27,380 --> 00:29:32,630
the render arrays that we built are

00:29:30,380 --> 00:29:35,600
gonna make it really easy for other

00:29:32,630 --> 00:29:38,360
modules or child themes or future us on

00:29:35,600 --> 00:29:40,360
another project to use pre process

00:29:38,360 --> 00:29:42,770
functions to make small alterations

00:29:40,360 --> 00:29:45,320
needed to accomplish the specific

00:29:42,770 --> 00:29:47,510
requirements of that site with without

00:29:45,320 --> 00:29:51,620
changing the code that all of our other

00:29:47,510 --> 00:29:53,540
sites are sharing no copy and paste just

00:29:51,620 --> 00:29:55,580
override something and we're not

00:29:53,540 --> 00:30:00,830
repeating ourselves I'm repeating myself

00:29:55,580 --> 00:30:02,630
but not in code or you know if someone

00:30:00,830 --> 00:30:04,280
wanted to alter those variables from

00:30:02,630 --> 00:30:05,870
within the template itself before

00:30:04,280 --> 00:30:07,490
they're printed they can totally do that

00:30:05,870 --> 00:30:09,770
to doesn't have to be a pre process

00:30:07,490 --> 00:30:12,350
function either way we've successfully

00:30:09,770 --> 00:30:14,540
abstracted everything and we've made the

00:30:12,350 --> 00:30:17,360
lives of anyone trying to extend or

00:30:14,540 --> 00:30:19,400
alter our code easier so that is why

00:30:17,360 --> 00:30:23,150
render arrays exist and that's why we

00:30:19,400 --> 00:30:25,040
should use them so now that we've seen

00:30:23,150 --> 00:30:27,350
them we've seen some examples we've been

00:30:25,040 --> 00:30:29,480
all around the theme system let's take

00:30:27,350 --> 00:30:31,820
another step back and let's look at a

00:30:29,480 --> 00:30:34,070
few other important pieces of the render

00:30:31,820 --> 00:30:36,050
API that we're probably going to

00:30:34,070 --> 00:30:40,610
interact with when we're working with

00:30:36,050 --> 00:30:42,860
render arrays but more definitions what

00:30:40,610 --> 00:30:44,320
do I even mean by the render API we've

00:30:42,860 --> 00:30:46,460
already learned about the theme system

00:30:44,320 --> 00:30:49,130
what what's the difference between that

00:30:46,460 --> 00:30:51,140
and the render API which is a question I

00:30:49,130 --> 00:30:53,060
asked myself a bunch that's why I felt

00:30:51,140 --> 00:30:54,440
it was important enough to put in here

00:30:53,060 --> 00:30:55,840
so I'm going to do my best to sort that

00:30:54,440 --> 00:30:58,610
out

00:30:55,840 --> 00:31:00,200
so the theme system includes the hop the

00:30:58,610 --> 00:31:02,780
hooks we've talked about earlier we've

00:31:00,200 --> 00:31:05,050
got hook theme pre-process hooks we

00:31:02,780 --> 00:31:06,850
didn't talk about theme suggestion hooks

00:31:05,050 --> 00:31:09,280
kind of new in Drupal 8 and very useful

00:31:06,850 --> 00:31:12,910
and then we've got the twig templating

00:31:09,280 --> 00:31:14,710
engine then the render API is an API

00:31:12,910 --> 00:31:18,910
used by the theme system when you're

00:31:14,710 --> 00:31:20,230
taking data and turning into markup so

00:31:18,910 --> 00:31:21,550
there's more to it than this but these

00:31:20,230 --> 00:31:22,360
are the bigger pieces I'm going to touch

00:31:21,550 --> 00:31:24,850
on really quick

00:31:22,360 --> 00:31:28,060
we've got render arrays render elements

00:31:24,850 --> 00:31:30,670
caching attachments and placeholders so

00:31:28,060 --> 00:31:32,170
to dig a little deeper into these how

00:31:30,670 --> 00:31:35,650
you're often going to interact with the

00:31:32,170 --> 00:31:38,290
render api is is through the reserved

00:31:35,650 --> 00:31:40,900
properties that you can use within your

00:31:38,290 --> 00:31:42,130
render erase again these aren't all of

00:31:40,900 --> 00:31:46,180
them but these are some of the more

00:31:42,130 --> 00:31:48,100
commonly used ones so up until now our

00:31:46,180 --> 00:31:49,930
examples have used the theme property

00:31:48,100 --> 00:31:52,600
and properties named after our variables

00:31:49,930 --> 00:31:54,670
to build our render arrays and just to

00:31:52,600 --> 00:31:58,390
kind of put a lid on render raise and

00:31:54,670 --> 00:32:01,200
and understand their their role in the

00:31:58,390 --> 00:32:04,200
overall render api we've got this quote

00:32:01,200 --> 00:32:06,610
render arrays are the core structure

00:32:04,200 --> 00:32:09,430
sorry the core structure of the render

00:32:06,610 --> 00:32:10,960
api is the render array which is a

00:32:09,430 --> 00:32:12,340
hierarchical associative array

00:32:10,960 --> 00:32:13,780
containing data to be rendered in

00:32:12,340 --> 00:32:15,550
properties describing how the data

00:32:13,780 --> 00:32:17,890
should be rendered but it's the core

00:32:15,550 --> 00:32:19,480
structure of the render api so we get

00:32:17,890 --> 00:32:22,510
that now we've talked enough about

00:32:19,480 --> 00:32:24,940
render arrays so we're gonna move on to

00:32:22,510 --> 00:32:28,150
render elements which for a long time

00:32:24,940 --> 00:32:30,940
we're very confusing to me still are

00:32:28,150 --> 00:32:32,920
sometimes but the most helpful way of

00:32:30,940 --> 00:32:36,130
thinking about render elements that I've

00:32:32,920 --> 00:32:37,690
found reads modules have the capability

00:32:36,130 --> 00:32:39,970
of defining elements which are

00:32:37,690 --> 00:32:42,100
essentially prepackaged default render

00:32:39,970 --> 00:32:44,170
arrays so I've highlighted the important

00:32:42,100 --> 00:32:48,280
part prepackaged default render arrays

00:32:44,170 --> 00:32:51,070
so let's take a look at an example of

00:32:48,280 --> 00:32:54,340
the definition of a render element in

00:32:51,070 --> 00:32:56,620
Drupal 8 so here's the check box render

00:32:54,340 --> 00:32:58,300
element in Drupal 8 and there's a few

00:32:56,620 --> 00:33:01,240
things to notice here first off it's

00:32:58,300 --> 00:33:04,150
actually object oriented this is because

00:33:01,240 --> 00:33:07,090
render elements have been moved to the

00:33:04,150 --> 00:33:10,240
plug-in system in Drupal 8 and Drupal 7

00:33:07,090 --> 00:33:12,310
you you would use hook element info most

00:33:10,240 --> 00:33:15,730
info hooks were moved to the plug-in

00:33:12,310 --> 00:33:18,610
system so here is the check box render

00:33:15,730 --> 00:33:20,840
element build the plug-in system

00:33:18,610 --> 00:33:22,820
the other thing that we'll see is that

00:33:20,840 --> 00:33:24,170
the render elements get info and this

00:33:22,820 --> 00:33:25,430
isn't the whole class but the other

00:33:24,170 --> 00:33:27,140
thing we'll see is that the render

00:33:25,430 --> 00:33:28,730
elements get info method returns

00:33:27,140 --> 00:33:30,410
something that looks a lot like the

00:33:28,730 --> 00:33:32,030
render race we've been looking at so

00:33:30,410 --> 00:33:34,100
this is where the previous definition

00:33:32,030 --> 00:33:36,680
comes into play a render element is a

00:33:34,100 --> 00:33:38,480
prepackaged default render array so a

00:33:36,680 --> 00:33:40,430
render element defines all of these

00:33:38,480 --> 00:33:43,550
defaults so that we don't have to

00:33:40,430 --> 00:33:46,580
instead to make our checkbox all we have

00:33:43,550 --> 00:33:49,160
to do is this and this looks a lot like

00:33:46,580 --> 00:33:51,380
a render arrays instead of our theme

00:33:49,160 --> 00:33:53,060
property we have type and we're using

00:33:51,380 --> 00:33:55,430
that to specify that we want to check

00:33:53,060 --> 00:33:57,140
box and then we can pass along other

00:33:55,430 --> 00:33:59,710
variables that we want to use such as

00:33:57,140 --> 00:34:01,880
the title for the label of that checkbox

00:33:59,710 --> 00:34:03,230
the rest of the information for our

00:34:01,880 --> 00:34:06,200
checkbox is going to come from the

00:34:03,230 --> 00:34:08,149
defaults defined in the rel render

00:34:06,200 --> 00:34:10,760
elements class which can of course be

00:34:08,149 --> 00:34:12,860
altered or extended if you need and

00:34:10,760 --> 00:34:14,419
you'll even see that in this render

00:34:12,860 --> 00:34:17,000
array we've got the theme property

00:34:14,419 --> 00:34:18,710
specifying the theme hook that this

00:34:17,000 --> 00:34:21,080
render element is gonna be rendered with

00:34:18,710 --> 00:34:23,419
so when our checkboxes markup is being

00:34:21,080 --> 00:34:25,340
built that's the theme hook word that

00:34:23,419 --> 00:34:28,610
that Drupal is gonna use deep down

00:34:25,340 --> 00:34:30,260
behind the scenes so as I said these

00:34:28,610 --> 00:34:33,470
look a lot like a renderer API our

00:34:30,260 --> 00:34:35,990
render array but it also looks like a

00:34:33,470 --> 00:34:38,389
form API element and that's because it

00:34:35,990 --> 00:34:39,860
is a form API element which you're

00:34:38,389 --> 00:34:42,010
likely a little more familiar with the

00:34:39,860 --> 00:34:45,230
form API then say the render API

00:34:42,010 --> 00:34:47,450
interestingly enough the checkbox class

00:34:45,230 --> 00:34:50,629
extends the form element class which

00:34:47,450 --> 00:34:54,020
extends the render element class which

00:34:50,629 --> 00:34:59,060
means the form API is a subset of the

00:34:54,020 --> 00:35:01,490
render API mind kind of blown but

00:34:59,060 --> 00:35:02,870
hopefully since I'm assuming we're a

00:35:01,490 --> 00:35:05,450
little more familiar with the form API

00:35:02,870 --> 00:35:07,580
this kind of helps us understand render

00:35:05,450 --> 00:35:09,110
elements and also to get back to the

00:35:07,580 --> 00:35:10,520
point of why render razor useful I

00:35:09,110 --> 00:35:13,100
thought of this last night when I

00:35:10,520 --> 00:35:17,060
couldn't sleep everyone's used you see

00:35:13,100 --> 00:35:18,500
you used to using hook form alter and in

00:35:17,060 --> 00:35:20,750
that you can do whatever you want with

00:35:18,500 --> 00:35:21,950
your form elements erase and that's

00:35:20,750 --> 00:35:24,380
because they haven't been turned into

00:35:21,950 --> 00:35:26,980
markup yet so that's the whole point

00:35:24,380 --> 00:35:30,260
here that's why we're using render erase

00:35:26,980 --> 00:35:31,580
in elements so that's what a render

00:35:30,260 --> 00:35:32,110
element looks like that's what they're

00:35:31,580 --> 00:35:35,420
useful

00:35:32,110 --> 00:35:36,860
we want to reduce repetition once again

00:35:35,420 --> 00:35:40,910
when we're building a lot of very

00:35:36,860 --> 00:35:42,640
similar render arrays so let's talk

00:35:40,910 --> 00:35:46,420
about the last three on this list

00:35:42,640 --> 00:35:48,950
cashing attachments and placeholders so

00:35:46,420 --> 00:35:51,860
like the theme property on our render

00:35:48,950 --> 00:35:54,260
raise and type for render elements this

00:35:51,860 --> 00:35:56,690
is an example of what the cache property

00:35:54,260 --> 00:35:58,610
of a render array might look like how it

00:35:56,690 --> 00:36:00,980
might be used so this allows you to

00:35:58,610 --> 00:36:03,890
cache the output of a given render array

00:36:00,980 --> 00:36:05,360
or element using the cache API and it's

00:36:03,890 --> 00:36:08,450
probably good practice really to start

00:36:05,360 --> 00:36:10,100
thinking about caching for every render

00:36:08,450 --> 00:36:12,860
array you build I'll get more into that

00:36:10,100 --> 00:36:15,800
in a second I'm not gonna go too far

00:36:12,860 --> 00:36:18,340
into the actual contents of how this is

00:36:15,800 --> 00:36:21,290
structured for the sake of time but

00:36:18,340 --> 00:36:22,940
there is a great page on drupal.org I

00:36:21,290 --> 00:36:24,350
don't know how easy that is to read but

00:36:22,940 --> 00:36:26,840
these slides will be available online

00:36:24,350 --> 00:36:28,610
also this page goes into great detail

00:36:26,840 --> 00:36:30,020
about it you could also just Google

00:36:28,610 --> 00:36:33,470
cache ability of render arrays and

00:36:30,020 --> 00:36:36,200
Drupal goes into great detail about how

00:36:33,470 --> 00:36:38,810
you can cache your render rays using

00:36:36,200 --> 00:36:41,030
that cache property so that's caching

00:36:38,810 --> 00:36:43,040
and then we've got the attached property

00:36:41,030 --> 00:36:45,920
that allows you to attach a given

00:36:43,040 --> 00:36:47,870
library to a render array that way every

00:36:45,920 --> 00:36:49,880
time the render array is rendered on the

00:36:47,870 --> 00:36:52,040
page Drupal is gonna make sure that

00:36:49,880 --> 00:36:53,720
whatever CSS or JavaScript or whatever

00:36:52,040 --> 00:36:55,940
is in your library it's gonna make sure

00:36:53,720 --> 00:36:58,550
that's on the page so that your markup

00:36:55,940 --> 00:37:02,540
is gonna look and work how you expect it

00:36:58,550 --> 00:37:03,980
to you can also attach JavaScript

00:37:02,540 --> 00:37:06,170
settings like that second line there

00:37:03,980 --> 00:37:08,270
it's a little different than seven it's

00:37:06,170 --> 00:37:10,880
not Drupal dat settings Drupal settings

00:37:08,270 --> 00:37:14,210
you can attach individual JavaScript or

00:37:10,880 --> 00:37:17,060
CSS files in Drupal 7 you probably saw a

00:37:14,210 --> 00:37:19,880
lot of drupal a.j s true Polad CSS those

00:37:17,060 --> 00:37:21,310
two functions Drupal 8 you're probably

00:37:19,880 --> 00:37:24,440
gonna see a lot more of this hopefully

00:37:21,310 --> 00:37:28,250
attaching our libraries on to render

00:37:24,440 --> 00:37:32,780
raise and with that same key the attach

00:37:28,250 --> 00:37:35,390
key or property name you can also use

00:37:32,780 --> 00:37:36,980
placeholders this is a really simple

00:37:35,390 --> 00:37:39,620
example I just kind of pulled from a

00:37:36,980 --> 00:37:41,840
documentation page exact actually I

00:37:39,620 --> 00:37:44,450
don't have much experience using them

00:37:41,840 --> 00:37:45,500
but from my understanding they become

00:37:44,450 --> 00:37:48,830
very important way

00:37:45,500 --> 00:37:50,900
something like big pipe my understanding

00:37:48,830 --> 00:37:52,430
a big pipe is when Drupal goes to render

00:37:50,900 --> 00:37:55,160
the page it's going to use that cache

00:37:52,430 --> 00:37:57,200
information figure out what needs to be

00:37:55,160 --> 00:37:59,510
pretty unique on the page replace that

00:37:57,200 --> 00:38:01,460
with a placeholder render the initial

00:37:59,510 --> 00:38:03,230
page and then come back with the dynamic

00:38:01,460 --> 00:38:05,330
bits later so that's why placeholder is

00:38:03,230 --> 00:38:07,760
important that's why caching is also

00:38:05,330 --> 00:38:09,140
important among other reasons could be a

00:38:07,760 --> 00:38:09,830
little wrong about that but that's my

00:38:09,140 --> 00:38:14,060
understanding

00:38:09,830 --> 00:38:16,460
and that's placeholders in this example

00:38:14,060 --> 00:38:19,520
also shows another reserved property for

00:38:16,460 --> 00:38:23,540
render arrays which is markup you might

00:38:19,520 --> 00:38:25,100
see this quite often when when we kind

00:38:23,540 --> 00:38:26,540
of are forced to build a render array

00:38:25,100 --> 00:38:28,130
but really we don't want to run it

00:38:26,540 --> 00:38:29,960
through a given theme hook or render

00:38:28,130 --> 00:38:32,060
element we just want to return some

00:38:29,960 --> 00:38:36,350
simple markup and that's what you do

00:38:32,060 --> 00:38:39,350
with markup so that's cash attached and

00:38:36,350 --> 00:38:41,330
markup to breeze through the the last

00:38:39,350 --> 00:38:44,330
three weight would be you've probably

00:38:41,330 --> 00:38:46,610
seen it and the hook form alter weight

00:38:44,330 --> 00:38:48,590
would be if you're trying to tell your

00:38:46,610 --> 00:38:51,920
tell Drupal what order you want your

00:38:48,590 --> 00:38:54,890
render race to print in so you give that

00:38:51,920 --> 00:38:57,080
an integer or float or whatever and then

00:38:54,890 --> 00:39:00,290
prefix and suffix can be used to print

00:38:57,080 --> 00:39:02,960
plain markup before and after the

00:39:00,290 --> 00:39:06,200
resulting markup of your rendered render

00:39:02,960 --> 00:39:09,130
array again there's more but those are

00:39:06,200 --> 00:39:11,750
the some of the more commonly used and

00:39:09,130 --> 00:39:14,870
that's my crash course on the rest of

00:39:11,750 --> 00:39:16,850
the render API which only leaves one

00:39:14,870 --> 00:39:19,490
thing left to talk about and that is the

00:39:16,850 --> 00:39:21,320
future of render race but I'm not going

00:39:19,490 --> 00:39:24,230
to go too into too much detail about

00:39:21,320 --> 00:39:26,360
this because if I did my information

00:39:24,230 --> 00:39:28,940
would probably be out of date as soon as

00:39:26,360 --> 00:39:31,220
I wrote a slide for it but what I do

00:39:28,940 --> 00:39:34,490
know is we can kind of start with

00:39:31,220 --> 00:39:36,080
looking at this old core issue queue to

00:39:34,490 --> 00:39:38,540
refactor the render API to be

00:39:36,080 --> 00:39:39,890
object-oriented if this was the case

00:39:38,540 --> 00:39:41,890
we'd probably be talking maybe about

00:39:39,890 --> 00:39:44,690
render objects rather than render erase

00:39:41,890 --> 00:39:46,550
but as of recently that there's been a

00:39:44,690 --> 00:39:47,690
lot of discussion happening that makes

00:39:46,550 --> 00:39:48,920
it sound like it's not going to be

00:39:47,690 --> 00:39:52,850
one-to-one it's not going to be that

00:39:48,920 --> 00:39:55,220
simple and the issue here to read on

00:39:52,850 --> 00:39:57,380
this topic is this one which again

00:39:55,220 --> 00:39:58,820
that's pretty dark blue but if you

00:39:57,380 --> 00:40:00,200
google those words

00:39:58,820 --> 00:40:02,570
it'll show up or again my slides will be

00:40:00,200 --> 00:40:06,230
available but this topic was opened by

00:40:02,570 --> 00:40:07,790
wim liers and jerries kind of touched on

00:40:06,230 --> 00:40:09,590
it today actually in histories note when

00:40:07,790 --> 00:40:11,240
he was talking about the theme component

00:40:09,590 --> 00:40:14,840
library I think it's called initiative

00:40:11,240 --> 00:40:16,700
that may or may not happen that's kind

00:40:14,840 --> 00:40:20,180
of started from here and the idea is to

00:40:16,700 --> 00:40:22,880
basically drastically alter or change or

00:40:20,180 --> 00:40:24,830
replace and simplify the theme and

00:40:22,880 --> 00:40:26,870
render system to a more of a component

00:40:24,830 --> 00:40:29,480
based approach being as a component

00:40:26,870 --> 00:40:31,310
based approach is a lot of is is how a

00:40:29,480 --> 00:40:33,740
lot of the front-end world wants to work

00:40:31,310 --> 00:40:35,960
these days you can kind of accomplish

00:40:33,740 --> 00:40:39,380
that with defining components with hook

00:40:35,960 --> 00:40:41,990
theme but it often falls short doesn't

00:40:39,380 --> 00:40:43,550
really accomplish what we want but

00:40:41,990 --> 00:40:45,920
there's a lot of really interesting

00:40:43,550 --> 00:40:47,210
insights on this issue not only from win

00:40:45,920 --> 00:40:49,790
but a lot of big players in the Drupal

00:40:47,210 --> 00:40:52,430
community and theme system maintainer x'

00:40:49,790 --> 00:40:54,800
and the decisions of course are complex

00:40:52,430 --> 00:40:56,270
they're far from being made but it does

00:40:54,800 --> 00:40:58,460
look like the theme system will end up

00:40:56,270 --> 00:41:00,680
being drastically different which is for

00:40:58,460 --> 00:41:02,510
the it will be for the better but that

00:41:00,680 --> 00:41:04,010
also means that render rate of render

00:41:02,510 --> 00:41:05,780
arrays the current theme system the

00:41:04,010 --> 00:41:08,300
current renderer API basically

00:41:05,780 --> 00:41:12,710
everything we've learned about today may

00:41:08,300 --> 00:41:14,660
be removed from Drupal 9 and their

00:41:12,710 --> 00:41:16,640
descendant that the theme component

00:41:14,660 --> 00:41:19,190
library initiative could even be merged

00:41:16,640 --> 00:41:20,840
into Drupal core in a minor release or

00:41:19,190 --> 00:41:23,210
Drupal 8 I should say in a minor release

00:41:20,840 --> 00:41:25,910
but backwards compatibility can't be

00:41:23,210 --> 00:41:27,890
removed until Drupal 9 and as we all

00:41:25,910 --> 00:41:30,200
know Drupal 9 is probably not going to

00:41:27,890 --> 00:41:31,610
be around for a while and a seismic

00:41:30,200 --> 00:41:32,780
change really in the theme system is

00:41:31,610 --> 00:41:35,420
gonna take a long time to make a

00:41:32,780 --> 00:41:37,780
decision on a long time to implement so

00:41:35,420 --> 00:41:40,160
I didn't just waste an hour of your time

00:41:37,780 --> 00:41:42,260
render arrays will still play an

00:41:40,160 --> 00:41:46,760
important role in Drupal 8 for years to

00:41:42,260 --> 00:41:48,770
come until they're replaced and that

00:41:46,760 --> 00:41:51,920
wraps up what I've got for you on render

00:41:48,770 --> 00:41:54,230
arrays once again I like to not repeat

00:41:51,920 --> 00:41:56,750
my code but repeat what I say so for a

00:41:54,230 --> 00:41:59,060
quick recap this is what our render

00:41:56,750 --> 00:42:00,620
array looks like we've talked about how

00:41:59,060 --> 00:42:02,090
they work where the theme key says what

00:42:00,620 --> 00:42:03,950
theme hook we want to use and the rest

00:42:02,090 --> 00:42:05,690
are the variables or if we're using

00:42:03,950 --> 00:42:08,630
light cache or attach those kinds of

00:42:05,690 --> 00:42:11,210
things to that theme hook is initially

00:42:08,630 --> 00:42:12,470
defined by hook theme somewhere and that

00:42:11,210 --> 00:42:15,230
includes what

00:42:12,470 --> 00:42:16,730
variables we can use and when we go to

00:42:15,230 --> 00:42:18,920
render our render array from within a

00:42:16,730 --> 00:42:20,630
template the variables we've passed

00:42:18,920 --> 00:42:23,630
along are going to be manipulated by

00:42:20,630 --> 00:42:26,270
whatever pre process functions are have

00:42:23,630 --> 00:42:28,490
been created for that theme hook until

00:42:26,270 --> 00:42:30,230
the resulting variables from those pre

00:42:28,490 --> 00:42:32,210
process functions are printed in the

00:42:30,230 --> 00:42:33,950
template for that theme hook and we're

00:42:32,210 --> 00:42:35,990
gonna get the mark-up that we want and

00:42:33,950 --> 00:42:38,180
they're useful because they're abstract

00:42:35,990 --> 00:42:40,190
other modules and themes can implement

00:42:38,180 --> 00:42:42,109
their pre process hooks to alter the

00:42:40,190 --> 00:42:43,910
render arrays before they become markup

00:42:42,109 --> 00:42:47,300
couldn't happen if you use the theme

00:42:43,910 --> 00:42:48,800
function they could alter it even in the

00:42:47,300 --> 00:42:52,790
template twig template if they wanted to

00:42:48,800 --> 00:42:55,130
hook form alter as I said before we can

00:42:52,790 --> 00:42:57,410
also do fancy things like prepackaged

00:42:55,130 --> 00:43:00,890
render ray variables into render

00:42:57,410 --> 00:43:02,810
elements we can use a number of other

00:43:00,890 --> 00:43:05,960
reserved property keys to do other fancy

00:43:02,810 --> 00:43:09,290
things like caching our render race with

00:43:05,960 --> 00:43:13,670
the cache API attach assets to them or

00:43:09,290 --> 00:43:16,010
add placeholders in them so there you

00:43:13,670 --> 00:43:18,619
have it hopefully now we understand

00:43:16,010 --> 00:43:23,710
render raise to go forth and use them in

00:43:18,619 --> 00:43:23,710
our projects if thank you

00:43:30,280 --> 00:43:36,320
if you want to read more about any of

00:43:33,080 --> 00:43:38,180
this a few links the first two though

00:43:36,320 --> 00:43:40,910
are generated from the theme that API

00:43:38,180 --> 00:43:42,770
that PHP let's deepen Drupal core I'd

00:43:40,910 --> 00:43:44,800
recommend just opening up that file in a

00:43:42,770 --> 00:43:47,210
text editor and reading the whole thing

00:43:44,800 --> 00:43:48,800
that's pretty much my presentation and

00:43:47,210 --> 00:43:50,510
the third ones for Drupal 8 again I

00:43:48,800 --> 00:43:52,580
mentioned these things are very similar

00:43:50,510 --> 00:43:54,560
if you're kind of like me and still

00:43:52,580 --> 00:43:56,450
working with Drupal 7 on your client

00:43:54,560 --> 00:43:58,370
work start building around arrays anyway

00:43:56,450 --> 00:44:01,640
it'll make you reporting to Drupal 8

00:43:58,370 --> 00:44:03,740
easier and all the other good reasons

00:44:01,640 --> 00:44:14,180
that I mentioned multiple times so

00:44:03,740 --> 00:44:16,130
thanks again and I think we've got a 10

00:44:14,180 --> 00:44:17,750
or 15 minutes for questions if you want

00:44:16,130 --> 00:44:20,750
to ask them I believe that would be what

00:44:17,750 --> 00:44:22,310
the mic is for oh and again to plug the

00:44:20,750 --> 00:44:27,820
shirts if you want to shirt come talk to

00:44:22,310 --> 00:44:27,820
someone in the shirts yeah questions

00:44:40,090 --> 00:44:46,980
Tom York top New York of Radiohead he

00:44:43,960 --> 00:44:46,980
just looks very puzzled

00:45:02,380 --> 00:45:05,380
yep

00:45:16,700 --> 00:45:21,930
turning off the renderer a Drupal 7

00:45:19,590 --> 00:45:24,990
using the entity arrays and maybe

00:45:21,930 --> 00:45:26,340
pushing the stuff into tweak now that's

00:45:24,990 --> 00:45:29,220
a good question I think people are

00:45:26,340 --> 00:45:31,230
trying to do that I've your Oh something

00:45:29,220 --> 00:45:34,650
I guess I could plug the drupal twig

00:45:31,230 --> 00:45:36,030
slack channel like a group I guess you'd

00:45:34,650 --> 00:45:37,380
call it is a great place to stay up to

00:45:36,030 --> 00:45:39,240
date with this kind of stuff and in that

00:45:37,380 --> 00:45:41,550
I think people have talked about doing

00:45:39,240 --> 00:45:43,470
like kind of a hackish implementation of

00:45:41,550 --> 00:45:45,869
twig in Drupal 7 I don't know if

00:45:43,470 --> 00:45:48,480
anyone's done it super well yet it's

00:45:45,869 --> 00:45:51,510
definitely a welcome approach knowing

00:45:48,480 --> 00:45:54,270
that now for headless blocks yeah I just

00:45:51,510 --> 00:45:57,119
like I just completely turned off render

00:45:54,270 --> 00:46:00,960
go to the entity arrayed jamming into it

00:45:57,119 --> 00:46:03,510
the Jason settings okay and I pull it

00:46:00,960 --> 00:46:05,160
out there and just yeah that's injured

00:46:03,510 --> 00:46:06,900
that's definitely an interesting

00:46:05,160 --> 00:46:09,210
approach I think you're getting closer

00:46:06,900 --> 00:46:10,470
to what the theme and I'm not repeating

00:46:09,210 --> 00:46:11,820
the question that's bad for the

00:46:10,470 --> 00:46:13,170
recording so I'll repeat it after this

00:46:11,820 --> 00:46:15,330
but I think you're getting close to what

00:46:13,170 --> 00:46:17,340
Drupal 8 will eventually have in its

00:46:15,330 --> 00:46:18,600
theme system so I think you're just

00:46:17,340 --> 00:46:21,150
ahead of the curve there and it makes a

00:46:18,600 --> 00:46:23,190
lot of sense and and the question was

00:46:21,150 --> 00:46:24,930
what are the thoughts about removing or

00:46:23,190 --> 00:46:26,520
turning off and not using render arrays

00:46:24,930 --> 00:46:34,670
but instead kind of pulling twig into

00:46:26,520 --> 00:46:36,630
tuple 7 and and like twig okay yeah

00:46:34,670 --> 00:46:38,010
sorry your mic doesn't go into the

00:46:36,630 --> 00:46:41,150
recording and I'm trying to pair for it

00:46:38,010 --> 00:46:41,150

YouTube URL: https://www.youtube.com/watch?v=_bJsCD-tIdM


