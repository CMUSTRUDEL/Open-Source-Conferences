Title: DrupalCon New Orleans 2016 Writing Command Line Tools for Drupal 8 Modules
Publication date: 2016-05-10
Playlist: DrupalCon New Orleans - May 2016
Description: 
	The Drush and Drupal Console maintainers have launched a new collaborative effort to unify the way that command line tools should be written for Drupal 8 modules. This session will walk through the process of writing a scripting interface for your Drupal 8 modules code using an object-oriented API built on top of Symfony Console components. Once your command is finished and working, it can be used from either Drupal Console or Drush.

Going beyond the implementation of the CLI tool, this session will also provide guidance on best practices for decoupled module development. Breaking functionality into loosely coupled components facilitates the implementation of the command line interfaces and web services, and will additionally keep your code more maintainable, and easier to read and understand.

The presenters will also describe the latest progress and future plans for collaborative efforts between the teams to use common implementations for some of the more complex common functions, such as site installation, configuration management, and bootstrapping, and what you can do to help make the future of commandline tools easier for everyone to manage.
Captions: 
	00:00:00,140 --> 00:00:07,620
okay I think we can get started welcome

00:00:05,069 --> 00:00:10,290
everyone this is writing command line

00:00:07,620 --> 00:00:14,040
tools for Drupal 8 modules thanks for

00:00:10,290 --> 00:00:18,000
coming just want to introduce our

00:00:14,040 --> 00:00:20,609
speakers today Greg Anderson from

00:00:18,000 --> 00:00:24,990
pantheon he's the open-source developer

00:00:20,609 --> 00:00:27,960
there hey-soos Manuela leave us drupal 8

00:00:24,990 --> 00:00:29,970
solutions engineer at ffw myself and

00:00:27,960 --> 00:00:32,730
open source developer mosh weitzman

00:00:29,970 --> 00:00:34,410
longtime drupal contributor and Darrell

00:00:32,730 --> 00:00:42,300
Norse a Drupal engineer with Hewlett

00:00:34,410 --> 00:00:45,329
Packard Enterprise here okay we're

00:00:42,300 --> 00:00:47,219
talking about command-line tools and how

00:00:45,329 --> 00:00:51,989
you write your commands for your Drupal

00:00:47,219 --> 00:00:54,600
8 modules the goal of us has command

00:00:51,989 --> 00:00:57,239
line developers or command line

00:00:54,600 --> 00:00:59,010
framework developers is that it should

00:00:57,239 --> 00:01:00,960
be easy for you to write your commands

00:00:59,010 --> 00:01:03,660
they should be brief they should be

00:01:00,960 --> 00:01:05,760
simple and you should have access to the

00:01:03,660 --> 00:01:08,400
parts of Drupal in the parts of the

00:01:05,760 --> 00:01:12,290
command line runner easy and familiar

00:01:08,400 --> 00:01:15,869
access to those parts of the system a

00:01:12,290 --> 00:01:17,340
little bit about the agenda today you're

00:01:15,869 --> 00:01:21,630
going to learn about Symphony console

00:01:17,340 --> 00:01:25,229
commands and about new innovations rush

00:01:21,630 --> 00:01:27,570
called annotated commands which is new

00:01:25,229 --> 00:01:31,259
Ford rush eight and rush nine policy

00:01:27,570 --> 00:01:34,200
files for ways you can adapt other

00:01:31,259 --> 00:01:37,200
people's commands output formatting

00:01:34,200 --> 00:01:39,450
command discovery and configuration of

00:01:37,200 --> 00:01:41,600
commands and generation of different

00:01:39,450 --> 00:01:47,100
parts of your Drupal modules and

00:01:41,600 --> 00:01:51,930
commands when I just briefly summarize

00:01:47,100 --> 00:01:54,720
some really recent changes in rush we

00:01:51,930 --> 00:01:57,840
started in the brush 8 and rush nine

00:01:54,720 --> 00:02:01,040
branches to support Symphony console

00:01:57,840 --> 00:02:03,780
commands okay so you can write straight

00:02:01,040 --> 00:02:06,240
console commands and run them via drush

00:02:03,780 --> 00:02:07,330
will show up and rush help and all of

00:02:06,240 --> 00:02:08,979
the arguments and options

00:02:07,330 --> 00:02:13,660
will be shown there and will be passed

00:02:08,979 --> 00:02:15,640
through okay as a layer on top of that

00:02:13,660 --> 00:02:18,580
you can run you can write annotated

00:02:15,640 --> 00:02:21,910
commands for your modules and we'll show

00:02:18,580 --> 00:02:25,530
you more about that later and finally

00:02:21,910 --> 00:02:29,350
the very familiar drush ink files

00:02:25,530 --> 00:02:31,440
command files are still possible with

00:02:29,350 --> 00:02:34,930
drush 8 but we have deprecated and won't

00:02:31,440 --> 00:02:37,390
run them for much longer and rush 9 ok

00:02:34,930 --> 00:02:40,900
so that's that's where the dress system

00:02:37,390 --> 00:02:43,960
is right now we have representatives

00:02:40,900 --> 00:02:47,050
from both the console project and the

00:02:43,960 --> 00:02:49,150
dress project here and just want to kind

00:02:47,050 --> 00:02:50,800
of give people an orientation about some

00:02:49,150 --> 00:02:53,410
of the differences between our two

00:02:50,800 --> 00:02:56,650
projects on the dress side on the left

00:02:53,410 --> 00:02:58,810
hand side we're working with annotated

00:02:56,650 --> 00:03:01,890
commands show that they're short and

00:02:58,810 --> 00:03:04,690
readable and optimized for those things

00:03:01,890 --> 00:03:07,300
the Drupal console systems optimizing

00:03:04,690 --> 00:03:10,810
for straight Symphony console command

00:03:07,300 --> 00:03:13,840
class usage and so everything you learn

00:03:10,810 --> 00:03:16,170
from the symphony documentation will

00:03:13,840 --> 00:03:19,170
work fine for drupal console commands

00:03:16,170 --> 00:03:19,170
okay

00:03:20,230 --> 00:03:25,170
I think I'll hand this over now hey soos

00:03:27,450 --> 00:03:33,400
well the symphony console provides a

00:03:30,580 --> 00:03:34,989
life cycle flow for mental execution so

00:03:33,400 --> 00:03:37,599
you can have configure method you can

00:03:34,989 --> 00:03:39,129
have initialize you can have interact

00:03:37,599 --> 00:03:40,690
and execute interactions in place which

00:03:39,129 --> 00:03:42,430
you'll ask questions to the users or

00:03:40,690 --> 00:03:45,040
when you are it's a place where you have

00:03:42,430 --> 00:03:47,110
to play for you know this is you want to

00:03:45,040 --> 00:03:49,239
do this you went to this other you want

00:03:47,110 --> 00:03:51,190
to do something else and the execute

00:03:49,239 --> 00:03:53,560
part is the method where you put your

00:03:51,190 --> 00:03:56,379
logic well we should execute your logic

00:03:53,560 --> 00:03:59,079
but I mean the best practice to do this

00:03:56,379 --> 00:04:00,640
is to take all that logic and put into a

00:03:59,079 --> 00:04:02,170
service and get the service into your

00:04:00,640 --> 00:04:03,989
command just with a couple components

00:04:02,170 --> 00:04:06,700
and make easier to update in Monte and

00:04:03,989 --> 00:04:08,650
those commands are registering to

00:04:06,700 --> 00:04:09,879
application object and this is the one

00:04:08,650 --> 00:04:20,100
who takes care of executing those

00:04:09,879 --> 00:04:20,100
commands Oh tinks your time Rick yep

00:04:23,470 --> 00:04:28,640
alright so this slide shows a simply

00:04:26,720 --> 00:04:31,460
console command command that has

00:04:28,640 --> 00:04:34,610
configure executed and demo as hey sue

00:04:31,460 --> 00:04:37,550
said and all of this works equally well

00:04:34,610 --> 00:04:39,770
in drush and drupal console now as of

00:04:37,550 --> 00:04:43,760
the recent changes we've made on the

00:04:39,770 --> 00:04:46,330
dress branches but we've also started

00:04:43,760 --> 00:04:49,190
experimenting with a new way to

00:04:46,330 --> 00:04:52,790
configure your commands called annotated

00:04:49,190 --> 00:04:57,110
commands and this style actually started

00:04:52,790 --> 00:04:59,960
in WP CLI where they used annotations to

00:04:57,110 --> 00:05:03,010
describe the parameters and the help

00:04:59,960 --> 00:05:05,810
text and it all came together as one

00:05:03,010 --> 00:05:07,760
easy-to-read unit was really nice

00:05:05,810 --> 00:05:09,710
development experience so that was

00:05:07,760 --> 00:05:12,260
adopted by terminus and there's also

00:05:09,710 --> 00:05:14,750
something called the Robo PHP task

00:05:12,260 --> 00:05:18,800
runner that's adopted this and now we're

00:05:14,750 --> 00:05:21,080
also bringing this into drush so as an

00:05:18,800 --> 00:05:23,480
experimental feature that's all I'll

00:05:21,080 --> 00:05:25,790
emphasize that for Drupal 8 module

00:05:23,480 --> 00:05:28,220
writers we're recommending that you

00:05:25,790 --> 00:05:29,750
stick with straight Symphony console

00:05:28,220 --> 00:05:31,330
commands but if you'd like to experiment

00:05:29,750 --> 00:05:36,560
with this or if you'd like to make

00:05:31,330 --> 00:05:39,440
internal commands then go ahead and use

00:05:36,560 --> 00:05:43,310
the annotated feature so that this first

00:05:39,440 --> 00:05:46,010
slide shows an example of an annotated

00:05:43,310 --> 00:05:50,090
symphony console command annotated

00:05:46,010 --> 00:05:53,450
command is a new class and extends the

00:05:50,090 --> 00:05:55,790
symphony console command so everything

00:05:53,450 --> 00:05:57,350
you see here is exactly like the

00:05:55,790 --> 00:06:00,170
symphony console commands you're used to

00:05:57,350 --> 00:06:04,670
using except that we have replaced the

00:06:00,170 --> 00:06:07,100
configure method with a dock a PHP dot

00:06:04,670 --> 00:06:09,500
block comment that shows you what the

00:06:07,100 --> 00:06:11,210
command name is what the arguments are

00:06:09,500 --> 00:06:13,010
and the defaults and things of that

00:06:11,210 --> 00:06:17,460
nature and this is all used to generate

00:06:13,010 --> 00:06:20,230
the help text so it now has shortened

00:06:17,460 --> 00:06:22,330
your command a little bit you can

00:06:20,230 --> 00:06:24,340
actually take this one step further and

00:06:22,330 --> 00:06:26,200
rather than using a symphony console

00:06:24,340 --> 00:06:29,260
command you can use what we call a

00:06:26,200 --> 00:06:31,690
command handler a command handler is

00:06:29,260 --> 00:06:35,170
just a plain old class it doesn't have

00:06:31,690 --> 00:06:36,700
to extend from anything but it is a

00:06:35,170 --> 00:06:38,140
class so it can participate in

00:06:36,700 --> 00:06:42,040
dependency injection as we'll see later

00:06:38,140 --> 00:06:44,740
and the methods of this class can be

00:06:42,040 --> 00:06:46,570
annotated with a command annotation that

00:06:44,740 --> 00:06:50,380
names what the command should be and

00:06:46,570 --> 00:06:54,130
then the command runner drush takes care

00:06:50,380 --> 00:06:56,380
of processing the inputs from the

00:06:54,130 --> 00:06:58,210
command line and passing them into the

00:06:56,380 --> 00:07:00,520
parameters of your function and once

00:06:58,210 --> 00:07:03,270
again the help text is all generated for

00:07:00,520 --> 00:07:06,940
you so you just have this really short

00:07:03,270 --> 00:07:09,190
canonical easy to read file we're

00:07:06,940 --> 00:07:11,620
certainly going to be evangelizing this

00:07:09,190 --> 00:07:16,470
upstream and symphony we don't really

00:07:11,620 --> 00:07:16,470
know whether they like it or not but

00:07:20,000 --> 00:07:27,110
the other thing that we have here that

00:07:24,320 --> 00:07:30,920
interacts or integrates with annotated

00:07:27,110 --> 00:07:33,470
commands is the command processing

00:07:30,920 --> 00:07:35,990
pipeline this is something that has been

00:07:33,470 --> 00:07:38,540
in brush for a while but we're bringing

00:07:35,990 --> 00:07:43,630
it forward to the object-oriented world

00:07:38,540 --> 00:07:46,630
again we're in experimental feature

00:07:43,630 --> 00:07:46,630
space

00:08:00,280 --> 00:08:03,280
decided

00:08:09,880 --> 00:08:18,770
advanced hey we now return you to your

00:08:15,140 --> 00:08:21,020
regularly scheduled programming so the

00:08:18,770 --> 00:08:23,740
processing pipeline starts with a ballad

00:08:21,020 --> 00:08:26,480
eight step then your command is executed

00:08:23,740 --> 00:08:28,430
and after your command execution happens

00:08:26,480 --> 00:08:31,010
the results for the command goes through

00:08:28,430 --> 00:08:33,560
the processing pipeline I'm not going to

00:08:31,010 --> 00:08:36,230
talk a lot about Robo PHP here but i

00:08:33,560 --> 00:08:40,370
will mention that in rush nine we are

00:08:36,230 --> 00:08:43,940
basing a runner on robo so if you return

00:08:40,370 --> 00:08:46,130
a robo collection of tasks than those

00:08:43,940 --> 00:08:48,110
tasks will all be run as part of the

00:08:46,130 --> 00:08:50,450
private pipeline and the reason that's

00:08:48,110 --> 00:08:54,170
cool and interesting is that each stage

00:08:50,450 --> 00:08:56,930
of the processing pipeline can be

00:08:54,170 --> 00:08:59,440
affected by hooks that you add with

00:08:56,930 --> 00:09:02,810
annotated methods i'll show you next

00:08:59,440 --> 00:09:05,150
also in the process phase you can add

00:09:02,810 --> 00:09:08,560
additional tasks that run whenever

00:09:05,150 --> 00:09:12,860
someone else to command runs such as SQL

00:09:08,560 --> 00:09:15,800
singur or whatever and robo provides a

00:09:12,860 --> 00:09:17,960
rollback mechanism so if one of the

00:09:15,800 --> 00:09:19,430
tasks fails and all of the tasks that

00:09:17,960 --> 00:09:21,880
were added have a chance to roll back

00:09:19,430 --> 00:09:23,680
and that just keeps everything really

00:09:21,880 --> 00:09:26,170
nice and clean

00:09:23,680 --> 00:09:28,330
and then once everything is a process

00:09:26,170 --> 00:09:32,080
altered it goes through a formatting

00:09:28,330 --> 00:09:36,430
engine will also discuss so here's a

00:09:32,080 --> 00:09:38,320
quick example of a hook once again you

00:09:36,430 --> 00:09:40,720
just put this in any command file that's

00:09:38,320 --> 00:09:43,240
located anywhere the dress lines command

00:09:40,720 --> 00:09:46,120
files you put a hook annotation on it

00:09:43,240 --> 00:09:48,790
and in this particular example I'm

00:09:46,120 --> 00:09:53,010
showing you the command hook which is

00:09:48,790 --> 00:09:57,220
the name for an ordinary symphony

00:09:53,010 --> 00:09:59,800
command and event listener so if you tag

00:09:57,220 --> 00:10:03,070
it with this hook your method will be

00:09:59,800 --> 00:10:06,070
called with the console command event

00:10:03,070 --> 00:10:09,490
parameter and you can manipulate it any

00:10:06,070 --> 00:10:11,200
way that you would in a normal command

00:10:09,490 --> 00:10:13,570
event listener for those of you who

00:10:11,200 --> 00:10:15,010
aren't familiar with this interface it

00:10:13,570 --> 00:10:17,410
gives you methods that allow you to

00:10:15,010 --> 00:10:20,140
change the options or select a different

00:10:17,410 --> 00:10:22,330
command that's going to run or just stop

00:10:20,140 --> 00:10:24,550
the command from running all together or

00:10:22,330 --> 00:10:26,560
whatever you need to do and of course

00:10:24,550 --> 00:10:28,029
this feature being part of symphony

00:10:26,560 --> 00:10:30,339
there are other ways you can inject this

00:10:28,029 --> 00:10:33,279
interface using the symphony AP is but

00:10:30,339 --> 00:10:37,959
this is a much cleaner and simpler thing

00:10:33,279 --> 00:10:40,150
in drush a lot of people have made use

00:10:37,959 --> 00:10:41,770
of what we call a policy file we have an

00:10:40,150 --> 00:10:43,150
example folder that shows you how to do

00:10:41,770 --> 00:10:45,279
something with a policy you just take

00:10:43,150 --> 00:10:48,520
that policy you copy it to your home

00:10:45,279 --> 00:10:50,589
dress folder add whatever code you want

00:10:48,520 --> 00:10:52,660
and then you can do things like stop

00:10:50,589 --> 00:10:54,670
people from shooting themselves when

00:10:52,660 --> 00:10:57,490
they try to SQL sink to their production

00:10:54,670 --> 00:10:59,260
database or just whatever policy

00:10:57,490 --> 00:11:02,709
controls you want to put in we're trying

00:10:59,260 --> 00:11:05,110
to keep that equally simple but also

00:11:02,709 --> 00:11:07,510
make it possible to integrate with any

00:11:05,110 --> 00:11:09,720
symphony command that can be run by that

00:11:07,510 --> 00:11:09,720
runner

00:11:09,779 --> 00:11:17,019
output formats it's wonderful to have a

00:11:14,200 --> 00:11:18,610
command-line tool that gives you lots of

00:11:17,019 --> 00:11:21,880
information about the deep in terms of

00:11:18,610 --> 00:11:24,190
your Drupal site but if you're using a

00:11:21,880 --> 00:11:25,480
command line tool chances are really

00:11:24,190 --> 00:11:27,279
good you might be sending that data

00:11:25,480 --> 00:11:29,170
somewhere else you might be in bash you

00:11:27,279 --> 00:11:33,750
might be piping it to something else it

00:11:29,170 --> 00:11:35,829
might be her said or split or whatever

00:11:33,750 --> 00:11:40,750
different tools take different formats

00:11:35,829 --> 00:11:42,910
so since drush five we've had an output

00:11:40,750 --> 00:11:46,600
format system where makes it really easy

00:11:42,910 --> 00:11:50,649
for command authors to support different

00:11:46,600 --> 00:11:52,990
fields we're bringing that forward and

00:11:50,649 --> 00:11:58,540
rush eighth and rush nine with

00:11:52,990 --> 00:12:02,140
annotations so this is an example of a

00:11:58,540 --> 00:12:05,230
command and I'm only showing the field

00:12:02,140 --> 00:12:07,149
output annotations here in addition to

00:12:05,230 --> 00:12:08,649
your other command annotations you can

00:12:07,149 --> 00:12:10,899
just add annotations and say what the

00:12:08,649 --> 00:12:13,510
field labels are and the neat thing is

00:12:10,899 --> 00:12:18,760
down at the bottom you have a regular

00:12:13,510 --> 00:12:20,950
PHP returns annotation so the whole

00:12:18,760 --> 00:12:23,800
system looks at this return annotation

00:12:20,950 --> 00:12:26,260
it knows what data type your command is

00:12:23,800 --> 00:12:28,480
returning and from that it can infer

00:12:26,260 --> 00:12:30,880
which output formats are available so

00:12:28,480 --> 00:12:33,820
when you run the help command it'll say

00:12:30,880 --> 00:12:35,620
AHA you are doing a row of feels and I

00:12:33,820 --> 00:12:38,579
know how to take row feels and turn that

00:12:35,620 --> 00:12:42,250
into a table so I'm going to do table as

00:12:38,579 --> 00:12:46,570
one of your options as an output floor

00:12:42,250 --> 00:12:48,520
matter if you look at the method body

00:12:46,570 --> 00:12:52,990
here you can see that the output data

00:12:48,520 --> 00:12:55,620
then is just a simple array each element

00:12:52,990 --> 00:12:58,540
of the array is a row and each row has

00:12:55,620 --> 00:13:01,149
elements that are the various cells on

00:12:58,540 --> 00:13:02,590
that row and then down at the bottom we

00:13:01,149 --> 00:13:06,220
wrap it in a row

00:13:02,590 --> 00:13:09,880
feels object which is nothing more than

00:13:06,220 --> 00:13:11,950
a class that extends a PHP array object

00:13:09,880 --> 00:13:14,950
so it behaves like the array that it

00:13:11,950 --> 00:13:17,320
wraps but now it can be used in type

00:13:14,950 --> 00:13:20,680
hunting in the formatting system so we

00:13:17,320 --> 00:13:23,710
know what's going on so what can we do

00:13:20,680 --> 00:13:26,530
with that so on the left you can see an

00:13:23,710 --> 00:13:29,610
example of what format table looks like

00:13:26,530 --> 00:13:33,280
this is just a normal symphony table

00:13:29,610 --> 00:13:36,390
object that formats the data and on the

00:13:33,280 --> 00:13:38,950
right I've shown you the same output

00:13:36,390 --> 00:13:42,250
formatted in yamhill so it looks just

00:13:38,950 --> 00:13:44,620
like the array that the function was

00:13:42,250 --> 00:13:47,320
returning it gets even cooler than that

00:13:44,620 --> 00:13:49,930
though because it's also possible when

00:13:47,320 --> 00:13:51,940
you're doing table formatting to select

00:13:49,930 --> 00:13:54,310
which fields you want so here the

00:13:51,940 --> 00:13:57,070
example it's using the human visible

00:13:54,310 --> 00:13:59,080
labels 3 and lock and put them in the

00:13:57,070 --> 00:14:01,330
reverse order so it selects and reorders

00:13:59,080 --> 00:14:04,330
the tables and whatever order you want

00:14:01,330 --> 00:14:06,430
to show them in some commands and rush

00:14:04,330 --> 00:14:08,440
have very very long tables with lots of

00:14:06,430 --> 00:14:10,870
deals and only a few of those are showed

00:14:08,440 --> 00:14:13,930
by default but you can select which ones

00:14:10,870 --> 00:14:16,360
you want to see on the right we just

00:14:13,930 --> 00:14:17,680
made it one step for a better now Indra

00:14:16,360 --> 00:14:20,050
shade and rush knives never worked

00:14:17,680 --> 00:14:22,480
before but you can now mix your table

00:14:20,050 --> 00:14:24,790
selections and your output for matter so

00:14:22,480 --> 00:14:29,410
first you select fields three and one

00:14:24,790 --> 00:14:31,900
then you format it as Jason and you see

00:14:29,410 --> 00:14:34,840
only the deals you selected in the JSON

00:14:31,900 --> 00:14:37,000
format we've a whole pile of output for

00:14:34,840 --> 00:14:38,890
matters just available for your use so

00:14:37,000 --> 00:14:41,290
as a command writer you don't have to

00:14:38,890 --> 00:14:44,700
think about formats at all you just get

00:14:41,290 --> 00:14:46,710
them all for free

00:14:44,700 --> 00:14:49,830
the other thing I'll mention about this

00:14:46,710 --> 00:14:52,560
finally is that even though I showed you

00:14:49,830 --> 00:14:54,510
this as an attachment annotation

00:14:52,560 --> 00:14:57,300
commands obviously all of these

00:14:54,510 --> 00:15:00,600
functionalities have a you know classes

00:14:57,300 --> 00:15:02,610
and methods as a normal API and we're

00:15:00,600 --> 00:15:05,280
going to be working after this session

00:15:02,610 --> 00:15:06,990
to roll this feature into Drupal console

00:15:05,280 --> 00:15:10,620
so that you'll be able to take advantage

00:15:06,990 --> 00:15:16,410
of output formats in your console

00:15:10,620 --> 00:15:18,180
commands as well so it's important

00:15:16,410 --> 00:15:20,670
console they have this thing called the

00:15:18,180 --> 00:15:22,770
symphony style which is very simple

00:15:20,670 --> 00:15:25,680
words talking about which is the other

00:15:22,770 --> 00:15:31,200
format which are logically will provide

00:15:25,680 --> 00:15:38,280
you a way to input and output input data

00:15:31,200 --> 00:15:40,290
and output messages and I ask you to ask

00:15:38,280 --> 00:15:43,260
questions and you can also provide

00:15:40,290 --> 00:15:46,140
default values for example yes or no you

00:15:43,260 --> 00:15:48,060
can also provide an array which is going

00:15:46,140 --> 00:15:52,380
to provide you different type of choices

00:15:48,060 --> 00:15:57,540
organ user can choose and also they can

00:15:52,380 --> 00:16:00,450
select it by pressing the arrow key you

00:15:57,540 --> 00:16:03,030
can also displays this data very similar

00:16:00,450 --> 00:16:04,440
or what he show but the different thing

00:16:03,030 --> 00:16:06,960
here is going to be that you don't have

00:16:04,440 --> 00:16:11,520
to erase one for the header and one for

00:16:06,960 --> 00:16:16,680
the rose you can you can also take

00:16:11,520 --> 00:16:19,110
advantage of this sin freestyle bye-bye

00:16:16,680 --> 00:16:21,600
outputting a verbose way to explain

00:16:19,110 --> 00:16:24,690
messages you can display warnings men

00:16:21,600 --> 00:16:29,450
say yes success messages listing and

00:16:24,690 --> 00:16:29,450
errors i am with different colors so

00:16:30,120 --> 00:16:35,860
it's me know oh I think it would slow

00:16:32,740 --> 00:16:43,630
yeah its glory skory discovery yep

00:16:35,860 --> 00:16:46,149
looked at my title slide so another new

00:16:43,630 --> 00:16:48,070
innovation that is very new and most of

00:16:46,149 --> 00:16:49,810
you probably haven't seen yet because

00:16:48,070 --> 00:16:52,450
this is literally only within the past

00:16:49,810 --> 00:16:55,149
couple of weeks is we're changing the

00:16:52,450 --> 00:16:59,190
way the command discovery is done for

00:16:55,149 --> 00:17:03,760
modules commands in both brush and

00:16:59,190 --> 00:17:05,530
drupal console so our friend learner

00:17:03,760 --> 00:17:07,299
Garfield says outside of a factory

00:17:05,530 --> 00:17:09,669
access to the dependency injection

00:17:07,299 --> 00:17:11,860
container is almost always a bug now you

00:17:09,669 --> 00:17:14,230
see this all over the place where

00:17:11,860 --> 00:17:16,839
someone will go just to deepen some

00:17:14,230 --> 00:17:18,429
field and it'll grab the container from

00:17:16,839 --> 00:17:19,750
a static method and that's often

00:17:18,429 --> 00:17:21,939
necessary because you're dealing with

00:17:19,750 --> 00:17:24,689
legacy code but you'd rather not do that

00:17:21,939 --> 00:17:28,209
whenever possible you would like to have

00:17:24,689 --> 00:17:30,669
your dependencies Cleveland jected from

00:17:28,209 --> 00:17:34,210
the container at construction time and

00:17:30,669 --> 00:17:35,620
Drupal 8 has a whole system designed to

00:17:34,210 --> 00:17:36,850
make this cool and awesome and would it

00:17:35,620 --> 00:17:39,850
be cool and awesome if you could take

00:17:36,850 --> 00:17:41,710
advantage of that in your commands to so

00:17:39,850 --> 00:17:45,010
that your commands didn't have to go and

00:17:41,710 --> 00:17:46,059
route through the Drupal system to pull

00:17:45,010 --> 00:17:49,090
out all of the different dependencies

00:17:46,059 --> 00:17:53,860
you need and the answer is that now you

00:17:49,090 --> 00:17:57,340
can if you go into your modules services

00:17:53,860 --> 00:18:00,520
amo file you can now declare all of your

00:17:57,340 --> 00:18:03,520
command classes as services and since

00:18:00,520 --> 00:18:06,580
these are services they can take part in

00:18:03,520 --> 00:18:08,620
the regular symphony dependency

00:18:06,580 --> 00:18:10,809
injection and get all of the different

00:18:08,620 --> 00:18:14,110
pieces they need injected into their

00:18:10,809 --> 00:18:18,100
constructor in this example I'm showing

00:18:14,110 --> 00:18:20,650
you the services amo from a patch that I

00:18:18,100 --> 00:18:22,880
submitted to the default content module

00:18:20,650 --> 00:18:27,050
and this patch runs on

00:18:22,880 --> 00:18:30,260
full symphony console and rush and what

00:18:27,050 --> 00:18:31,850
it does is the default content has

00:18:30,260 --> 00:18:33,710
defined its own service you can see at

00:18:31,850 --> 00:18:35,450
the top of default content manager where

00:18:33,710 --> 00:18:37,520
they do all of their work and then we

00:18:35,450 --> 00:18:39,560
have three commands three command line

00:18:37,520 --> 00:18:43,240
commands and each of those take that

00:18:39,560 --> 00:18:45,350
content manager manager object as a

00:18:43,240 --> 00:18:51,860
parameter that's injected into their

00:18:45,350 --> 00:18:53,900
constructor and then you can see down at

00:18:51,860 --> 00:18:58,120
the bottom it says tags as a tag this is

00:18:53,900 --> 00:19:00,740
named console command and from that tag

00:18:58,120 --> 00:19:02,480
we will search for all of the services

00:19:00,740 --> 00:19:04,070
that are tagged as console commands we

00:19:02,480 --> 00:19:05,720
instantiate those and when we

00:19:04,070 --> 00:19:08,150
instantiate them they get injected

00:19:05,720 --> 00:19:10,430
properly so it's all clean and modern

00:19:08,150 --> 00:19:13,580
and this is where how we're recommending

00:19:10,430 --> 00:19:20,380
that you implement your commands here

00:19:13,580 --> 00:19:20,380
out next we'll go next

00:19:25,590 --> 00:19:30,190
while working invest and advantage of

00:19:28,420 --> 00:19:32,140
doing something like this is squeezed we

00:19:30,190 --> 00:19:33,610
save a lot of I mean we improve that

00:19:32,140 --> 00:19:35,620
discovery meta to instead of file

00:19:33,610 --> 00:19:38,080
insertion for the file system for

00:19:35,620 --> 00:19:40,030
commands we use the digital tag that you

00:19:38,080 --> 00:19:42,520
can see here make something like console

00:19:40,030 --> 00:19:45,280
command this we find by the attack on

00:19:42,520 --> 00:19:47,650
the container we discover those commands

00:19:45,280 --> 00:19:49,390
on this register on the system so any

00:19:47,650 --> 00:19:50,950
new module adding new commands register

00:19:49,390 --> 00:20:00,330
on services will be automatically

00:19:50,950 --> 00:20:00,330
discovered by the tool it's not working

00:20:11,160 --> 00:20:16,640
apologize for this this is working a

00:20:14,220 --> 00:20:16,640
pixel

00:20:18,990 --> 00:20:22,929
fortunately we're ahead on times we can

00:20:21,280 --> 00:20:25,330
afford a little bit of a break the

00:20:22,929 --> 00:20:35,080
internet doesn't as your community is

00:20:25,330 --> 00:20:39,760
yours working it's not % yeah there you

00:20:35,080 --> 00:20:42,419
go the site can't be reached oh here it

00:20:39,760 --> 00:20:42,419
is it's coming

00:20:51,010 --> 00:20:53,070
you

00:20:57,580 --> 00:21:04,020
I only have them

00:21:10,930 --> 00:21:12,930
I

00:21:23,270 --> 00:21:38,450
you get rid of that one event always

00:21:32,480 --> 00:21:45,470
happen at this its back there's only a

00:21:38,450 --> 00:21:49,510
couple flights left it's not oh oh it

00:21:45,470 --> 00:21:49,510
was bad ninety percent

00:21:59,640 --> 00:22:04,769
Oh

00:22:01,539 --> 00:22:04,769
come back

00:23:17,990 --> 00:23:25,049
yeah it works I'm finalizing what Revis

00:23:22,110 --> 00:23:26,970
mention the same discovery method is

00:23:25,049 --> 00:23:29,669
using in involved projects that's

00:23:26,970 --> 00:23:33,059
jumping today in some configuration

00:23:29,669 --> 00:23:35,030
generation and now same as a triple

00:23:33,059 --> 00:23:37,320
eight triple console provides a

00:23:35,030 --> 00:23:39,960
possibility for subscribe to certain

00:23:37,320 --> 00:23:42,210
events we have events for running before

00:23:39,960 --> 00:23:43,770
the command gets executed while the

00:23:42,210 --> 00:23:45,360
commands experience or attending variant

00:23:43,770 --> 00:23:47,700
so we can use those methods for

00:23:45,360 --> 00:23:50,789
different things in this particular case

00:23:47,700 --> 00:23:53,130
we can use before the command execution

00:23:50,789 --> 00:23:54,750
so we can ask for our configurations we

00:23:53,130 --> 00:23:57,900
provide configuration files that you can

00:23:54,750 --> 00:24:00,360
put in different places and based on the

00:23:57,900 --> 00:24:02,039
file is stored it will take them you

00:24:00,360 --> 00:24:03,659
will gain based on that so you have can

00:24:02,039 --> 00:24:04,980
have configuration files globally in

00:24:03,659 --> 00:24:08,070
your home directory this is one place

00:24:04,980 --> 00:24:10,020
you can have configurations file set in

00:24:08,070 --> 00:24:17,580
the root of your drupal site so you can

00:24:10,020 --> 00:24:21,870
have some boom there goes back as far as

00:24:17,580 --> 00:24:24,179
bad as this guy's messing go wherever it

00:24:21,870 --> 00:24:26,000
makes some that confusion you can set

00:24:24,179 --> 00:24:28,559
you can stop commands to be executed

00:24:26,000 --> 00:24:30,210
let's say we have a command for to have

00:24:28,559 --> 00:24:32,010
a lot of generators in triple console

00:24:30,210 --> 00:24:33,480
and you don't want you don't want to run

00:24:32,010 --> 00:24:36,210
those generators in production so you

00:24:33,480 --> 00:24:38,669
can stop for loading those commands just

00:24:36,210 --> 00:24:40,799
by changing the configuration let's say

00:24:38,669 --> 00:24:42,690
we might we have we are handling a

00:24:40,799 --> 00:24:45,450
project using composer which is the way

00:24:42,690 --> 00:24:47,640
to go so you can set default options in

00:24:45,450 --> 00:24:50,460
that configuration to force all of your

00:24:47,640 --> 00:24:53,340
download commands and download add a

00:24:50,460 --> 00:24:54,929
module zone for to use composer instead

00:24:53,340 --> 00:24:56,669
of going to drop out an org and download

00:24:54,929 --> 00:24:58,890
that for you if you pass that option

00:24:56,669 --> 00:25:00,539
that console composer in that

00:24:58,890 --> 00:25:02,970
configuration will force to lose

00:25:00,539 --> 00:25:05,429
composure and eventually will download

00:25:02,970 --> 00:25:07,710
for it there from the packages and also

00:25:05,429 --> 00:25:10,620
will update your composure JSON file and

00:25:07,710 --> 00:25:12,600
you can do more things with that like

00:25:10,620 --> 00:25:16,190
probably before command execution you

00:25:12,600 --> 00:25:18,590
can add messages for

00:25:16,190 --> 00:25:20,330
for the user output we use that a lot of

00:25:18,590 --> 00:25:24,740
the generators to tell you which files

00:25:20,330 --> 00:25:28,370
were generated let's jump into automated

00:25:24,740 --> 00:25:30,649
command execution as I mean we as well

00:25:28,370 --> 00:25:32,360
as as you can them in the event

00:25:30,649 --> 00:25:34,669
listeners or humanities you should come

00:25:32,360 --> 00:25:37,009
in distribution Drupal console provide a

00:25:34,669 --> 00:25:40,730
chain command this chain command allows

00:25:37,009 --> 00:25:42,440
you to reap a jam on file definition as

00:25:40,730 --> 00:25:44,750
you can see here or you can set

00:25:42,440 --> 00:25:46,370
different commands to be executed you

00:25:44,750 --> 00:25:48,139
can set those commands and you can also

00:25:46,370 --> 00:25:49,129
say the options you want to use so

00:25:48,139 --> 00:25:51,529
basically you can create your own

00:25:49,129 --> 00:25:53,539
recipes of commands to automate your

00:25:51,529 --> 00:25:55,700
plot all of your process you can have

00:25:53,539 --> 00:25:57,830
something like I want up in this case

00:25:55,700 --> 00:25:59,269
what is happening is I want to run site

00:25:57,830 --> 00:26:01,789
near which is basically will download

00:25:59,269 --> 00:26:03,639
available for you then it's i'm setting

00:26:01,789 --> 00:26:06,590
the argument in this case and this

00:26:03,639 --> 00:26:09,590
backdrop of a dutch death which it means

00:26:06,590 --> 00:26:12,620
i want to use this directory to download

00:26:09,590 --> 00:26:14,269
my project and instead of passing a

00:26:12,620 --> 00:26:15,710
version so you have to force this to a

00:26:14,269 --> 00:26:18,080
specific version you can say something

00:26:15,710 --> 00:26:19,700
like latest equals to true which it

00:26:18,080 --> 00:26:21,950
means all will get download the latest

00:26:19,700 --> 00:26:24,289
version for you and you can do this for

00:26:21,950 --> 00:26:26,960
every single man i'm in triple sec

00:26:24,289 --> 00:26:29,570
 councilman and as well and the

00:26:26,960 --> 00:26:31,490
final section you can see where we are

00:26:29,570 --> 00:26:32,750
running the site install the man in this

00:26:31,490 --> 00:26:34,580
case you can see through this little or

00:26:32,750 --> 00:26:37,190
I mean strange science there like where

00:26:34,580 --> 00:26:39,289
the DB type in TV host is so those are

00:26:37,190 --> 00:26:41,360
placeholders you can set placeholders

00:26:39,289 --> 00:26:43,190
and you can either say default values

00:26:41,360 --> 00:26:45,110
for those placeholders for passing in

00:26:43,190 --> 00:26:46,940
line we have two different types of

00:26:45,110 --> 00:26:48,860
placeholders they want to see with the

00:26:46,940 --> 00:26:52,309
person sign it means that could be

00:26:48,860 --> 00:26:55,039
passed on line or use a default value if

00:26:52,309 --> 00:26:58,009
you don't set a unicast a value via in

00:26:55,039 --> 00:26:59,960
line command execution it will throw an

00:26:58,009 --> 00:27:01,340
interaction question for you what's the

00:26:59,960 --> 00:27:03,740
value you want to assign to this

00:27:01,340 --> 00:27:05,570
specific place holder and once you set

00:27:03,740 --> 00:27:07,370
up that value for the place caller you

00:27:05,570 --> 00:27:10,039
will say to the command option or

00:27:07,370 --> 00:27:12,080
argument which is linked to and their

00:27:10,039 --> 00:27:14,000
last one who's in the dollar sign in

00:27:12,080 --> 00:27:15,830
this case as you can see is a different

00:27:14,000 --> 00:27:18,559
it's different so this is a dollar sign

00:27:15,830 --> 00:27:20,870
not person site that one will allow you

00:27:18,559 --> 00:27:22,159
to read environment variables you might

00:27:20,870 --> 00:27:23,960
beat you maybe don't want to put your

00:27:22,159 --> 00:27:26,310
potentials in your configuration in the

00:27:23,960 --> 00:27:28,380
system so you can put those values on

00:27:26,310 --> 00:27:30,630
environment system and you can use a

00:27:28,380 --> 00:27:32,700
chain come and make it takes care of the

00:27:30,630 --> 00:27:35,370
automation of installing Drupal and ring

00:27:32,700 --> 00:27:37,170
those values for the system and from the

00:27:35,370 --> 00:27:40,500
right side we can see the differences so

00:27:37,170 --> 00:27:41,880
again the person sign it means it is you

00:27:40,500 --> 00:27:43,860
can provide a default you can set in

00:27:41,880 --> 00:27:45,840
line or if it's not we will ask you for

00:27:43,860 --> 00:27:47,310
you the other one the value is always

00:27:45,840 --> 00:27:50,310
required if not we'll throw an exception

00:27:47,310 --> 00:27:52,650
and the valuables must've reset via the

00:27:50,310 --> 00:27:54,480
environment bar and you might be asking

00:27:52,650 --> 00:27:56,910
when you can start writing I mean Marcia

00:27:54,480 --> 00:28:00,240
I commands with triple console you can

00:27:56,910 --> 00:28:02,280
do it now you can do it by using this

00:28:00,240 --> 00:28:04,020
generate command command so we basically

00:28:02,280 --> 00:28:06,360
provide you with a command generic

00:28:04,020 --> 00:28:07,860
commands this is an an example of how

00:28:06,360 --> 00:28:10,560
this command should run something like

00:28:07,860 --> 00:28:13,530
drupal generate command and you can

00:28:10,560 --> 00:28:14,730
either let this command run an inner

00:28:13,530 --> 00:28:16,200
interactive mode and asking you a

00:28:14,730 --> 00:28:17,850
question all you want to save time

00:28:16,200 --> 00:28:19,560
because I mean this tool this kind of do

00:28:17,850 --> 00:28:21,300
it for doing something like that to save

00:28:19,560 --> 00:28:22,830
you time so you can pops in what your

00:28:21,300 --> 00:28:24,990
what's really important for you for you

00:28:22,830 --> 00:28:26,820
for your project or your organization

00:28:24,990 --> 00:28:28,650
you can set all the ballots in line

00:28:26,820 --> 00:28:31,500
something like in this case module

00:28:28,650 --> 00:28:32,580
example I want to make the class they

00:28:31,500 --> 00:28:35,370
come in class called something like

00:28:32,580 --> 00:28:37,830
awesome command and I want to this

00:28:35,370 --> 00:28:39,900
comment to be awesome it means the class

00:28:37,830 --> 00:28:42,300
name this is what we have as awesome

00:28:39,900 --> 00:28:45,240
command but the commanding how will be

00:28:42,300 --> 00:28:46,920
listed in your in your system when you

00:28:45,240 --> 00:28:48,120
do something like drupal less for

00:28:46,920 --> 00:28:50,640
listing the comments this is the name

00:28:48,120 --> 00:28:53,340
that will show that awesome and you can

00:28:50,640 --> 00:28:55,130
take advantage of the injected services

00:28:53,340 --> 00:28:59,220
remember what greg was mentioning about

00:28:55,130 --> 00:29:01,530
how about or commands or both system

00:28:59,220 --> 00:29:03,120
system register those comments and

00:29:01,530 --> 00:29:05,040
services is going to take advantage of

00:29:03,120 --> 00:29:07,320
the injecting services from the

00:29:05,040 --> 00:29:09,900
container so this is the option you will

00:29:07,320 --> 00:29:12,210
use to inject those services so you can

00:29:09,900 --> 00:29:14,250
pass the services name here on The

00:29:12,210 --> 00:29:16,230
Bachelor service of action to injectors

00:29:14,250 --> 00:29:18,810
in this generator will take care of

00:29:16,230 --> 00:29:20,820
getting those those for you and inject

00:29:18,810 --> 00:29:23,460
it in your command if you run this from

00:29:20,820 --> 00:29:26,040
interactive mode what it happens it will

00:29:23,460 --> 00:29:28,320
get it will discover all those all those

00:29:26,040 --> 00:29:30,150
services from the Drupal site that you

00:29:28,320 --> 00:29:33,300
are working with and we'll list it for

00:29:30,150 --> 00:29:34,830
you using this Symphony style that Daryl

00:29:33,300 --> 00:29:36,130
was mentioning and you will be able to

00:29:34,830 --> 00:29:38,020
use arrow keys to select

00:29:36,130 --> 00:29:41,050
from the system you will select one or

00:29:38,020 --> 00:29:43,480
many as you want and finally you see the

00:29:41,050 --> 00:29:45,040
no interaction mean option it means I

00:29:43,480 --> 00:29:46,840
don't want this command to do any niraj

00:29:45,040 --> 00:29:48,130
in this particular case you can do

00:29:46,840 --> 00:29:50,740
either no interaction or inner

00:29:48,130 --> 00:29:52,420
interactive and I he'll recommend you if

00:29:50,740 --> 00:29:55,330
you don't know which options to pass

00:29:52,420 --> 00:29:58,210
when running commands instead of instead

00:29:55,330 --> 00:30:00,280
of doing a title I mean trying to guess

00:29:58,210 --> 00:30:02,380
which options are you can either go dash

00:30:00,280 --> 00:30:04,060
dash help or you can run the command

00:30:02,380 --> 00:30:07,240
impasse pass the auction bash Dash

00:30:04,060 --> 00:30:08,800
generate in line and that will be output

00:30:07,240 --> 00:30:11,080
at the very end of the command execution

00:30:08,800 --> 00:30:14,290
the inner representation of that command

00:30:11,080 --> 00:30:16,510
for you if you want to add a command to

00:30:14,290 --> 00:30:18,250
a jumbo file in order to use the chain

00:30:16,510 --> 00:30:19,840
command you can do the same thing

00:30:18,250 --> 00:30:22,540
executing a man and do something like

00:30:19,840 --> 00:30:26,170
dash dash generate touch chain and that

00:30:22,540 --> 00:30:28,360
would but I will output for you the you

00:30:26,170 --> 00:30:32,350
know the the GMO definition that we can

00:30:28,360 --> 00:30:33,580
see here for your command and finally in

00:30:32,350 --> 00:30:35,260
order to those commands you have to

00:30:33,580 --> 00:30:37,300
worry about where those comments are if

00:30:35,260 --> 00:30:38,860
you run the chain to man the system

00:30:37,300 --> 00:30:40,480
automatically will discover those for

00:30:38,860 --> 00:30:43,000
you we have specific places like a home

00:30:40,480 --> 00:30:45,340
directory to module the module directory

00:30:43,000 --> 00:30:47,260
in the system that defaults item in root

00:30:45,340 --> 00:30:51,690
directory and dot com and we will be

00:30:47,260 --> 00:30:51,690
discovered for them nothing LOL

00:30:56,230 --> 00:31:00,860
so in closing I just like to say that

00:30:59,000 --> 00:31:03,260
you know the dress team and the Drupal

00:31:00,860 --> 00:31:06,740
console team have been working together

00:31:03,260 --> 00:31:09,170
trying to unify our efforts and reduce

00:31:06,740 --> 00:31:12,350
the amount of duplicate maintenance we

00:31:09,170 --> 00:31:15,200
need to do and try to figure out where

00:31:12,350 --> 00:31:17,900
we can share functionality as best we

00:31:15,200 --> 00:31:20,390
can so immediately after the session in

00:31:17,900 --> 00:31:22,460
Rome 292 we're going to have a ball on

00:31:20,390 --> 00:31:26,240
command lines where we invite you all to

00:31:22,460 --> 00:31:30,290
come and ask all of your questions and

00:31:26,240 --> 00:31:34,549
provide suggestions or feature requests

00:31:30,290 --> 00:31:36,710
for the future and of course don't

00:31:34,549 --> 00:31:39,950
forget the general sprints that are

00:31:36,710 --> 00:31:42,440
going on all weekend and finally if you

00:31:39,950 --> 00:31:44,690
have any technical questions about

00:31:42,440 --> 00:31:46,669
things that you were that you've seen

00:31:44,690 --> 00:31:49,400
today in this presentation going to be

00:31:46,669 --> 00:31:52,070
opening up the mic right now but leave

00:31:49,400 --> 00:31:53,720
any of your questions about you know the

00:31:52,070 --> 00:31:55,309
future or what we've decided for the

00:31:53,720 --> 00:31:58,190
ball because you know we're still

00:31:55,309 --> 00:31:59,480
working on that and so the answers to

00:31:58,190 --> 00:32:00,740
those types of questions are going to be

00:31:59,480 --> 00:32:03,290
more complicated and we'll need more

00:32:00,740 --> 00:32:05,530
time with that you have any questions

00:32:03,290 --> 00:32:05,530
please

00:32:13,710 --> 00:32:18,549
please go ahead take if you have a

00:32:15,730 --> 00:32:20,789
question slap you that might gets behind

00:32:18,549 --> 00:32:20,789
you

00:32:25,180 --> 00:32:29,570
nope now we're for your question there

00:32:28,490 --> 00:32:34,670
might be a switch on there that you can

00:32:29,570 --> 00:32:37,310
turn on that's helped yeah I was curious

00:32:34,670 --> 00:32:40,340
what's this time is right now of the 9x

00:32:37,310 --> 00:32:42,530
branch of Josh like it it for develop

00:32:40,340 --> 00:32:47,320
for developers now can you use it on a

00:32:42,530 --> 00:32:50,150
site the 9x branch is in development and

00:32:47,320 --> 00:32:53,930
typically the drudge maintained errs use

00:32:50,150 --> 00:32:56,720
master every day for their work the way

00:32:53,930 --> 00:32:59,900
it's working right now is the 9x branch

00:32:56,720 --> 00:33:03,880
is using all of the whole legacy drush

00:32:59,900 --> 00:33:06,380
inc commands unless you specifically

00:33:03,880 --> 00:33:08,360
address one of the newer commands and

00:33:06,380 --> 00:33:10,940
the newer commands have colin's in them

00:33:08,360 --> 00:33:12,440
instead of minus signs there's only a

00:33:10,940 --> 00:33:15,350
few of the newer command so it's very

00:33:12,440 --> 00:33:16,880
very new branch you know it's basically

00:33:15,350 --> 00:33:20,480
usable but you're going to have a much

00:33:16,880 --> 00:33:23,900
rockier ride on the 9x / master branch

00:33:20,480 --> 00:33:26,060
we are maintaining the 8x branch and so

00:33:23,900 --> 00:33:27,500
you know only stable bug fixes and

00:33:26,060 --> 00:33:29,810
things that that nature will go back

00:33:27,500 --> 00:33:34,460
there so we really recommend most people

00:33:29,810 --> 00:33:36,620
check out a dex or a stable tag right so

00:33:34,460 --> 00:33:39,110
related with that my second question is

00:33:36,620 --> 00:33:41,930
that the goal is to get rid of the trash

00:33:39,110 --> 00:33:44,330
thought Inc support in 9x Koretz right

00:33:41,930 --> 00:33:48,320
ok so you have a lot of time with ax

00:33:44,330 --> 00:33:50,090
because you know Drupal 7 is going to be

00:33:48,320 --> 00:33:52,820
around for a long time because with the

00:33:50,090 --> 00:33:55,190
new architecture of Drupal 8 it's going

00:33:52,820 --> 00:33:56,960
to be a while before drupal needs to go

00:33:55,190 --> 00:33:58,370
to drupal ngayon and so the fact that

00:33:56,960 --> 00:34:00,310
your blades went to last a long time

00:33:58,370 --> 00:34:03,130
means the triple seven is going to last

00:34:00,310 --> 00:34:06,130
time so Drupal 8 will be around to

00:34:03,130 --> 00:34:08,580
support Drupal 7 so this gives you a lot

00:34:06,130 --> 00:34:11,110
of time to work in the 8x branch and

00:34:08,580 --> 00:34:14,260
convert your module commands for Drupal

00:34:11,110 --> 00:34:17,290
8 into Symphony console commands so that

00:34:14,260 --> 00:34:20,340
by the time we actually be welded rush

00:34:17,290 --> 00:34:23,340
eight branch you should all be over to

00:34:20,340 --> 00:34:23,340
console

00:34:28,070 --> 00:34:32,160
all right we'll hopefully see a lot of

00:34:30,030 --> 00:34:39,240
you in the ball after this thank you

00:34:32,160 --> 00:34:41,570
very much for coming so we have a few

00:34:39,240 --> 00:34:46,370
stickers if you want to save yourself

00:34:41,570 --> 00:34:46,370

YouTube URL: https://www.youtube.com/watch?v=xWg3cIbJcs4


