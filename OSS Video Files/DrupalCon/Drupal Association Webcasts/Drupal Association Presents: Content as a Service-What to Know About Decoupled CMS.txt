Title: Drupal Association Presents: Content as a Service-What to Know About Decoupled CMS
Publication date: 2015-07-21
Playlist: Drupal Association Webcasts
Description: 
	In this webcast you will learn about the latest developments with decoupled CMS, including:

- How decoupled architecture can help future-proof a website

- How decoupled architecture leverages a wider set of experts by clearly delineating front and back-end

- How to use modules and patterns to build decoupled websites using Drupal 7

- What to expect from Drupal 8

For anyone embarking on a fresh new build, or with dynamic use-cases in mind, a decoupled architecture is worth serious consideration. Review the webinar and find out why.
Captions: 
	00:00:04,450 --> 00:00:09,549
I'm from it's somewhere in like the ten

00:00:07,000 --> 00:00:11,410
thousand lines of code and I need to be

00:00:09,549 --> 00:00:13,179
able to actually have I need software to

00:00:11,410 --> 00:00:14,440
write my software because otherwise I

00:00:13,179 --> 00:00:16,390
can't keep track of all the things that

00:00:14,440 --> 00:00:18,570
are coming and going and then that's

00:00:16,390 --> 00:00:22,149
contrasted with this decoupled approach

00:00:18,570 --> 00:00:23,919
which in the the general software

00:00:22,149 --> 00:00:27,189
industry is now often termed

00:00:23,919 --> 00:00:29,320
microservices but in the CMS space you

00:00:27,189 --> 00:00:30,790
know if the idea of decoupling your CMS

00:00:29,320 --> 00:00:34,960
so that you don't have everything

00:00:30,790 --> 00:00:36,810
happening in one application and and we

00:00:34,960 --> 00:00:39,820
can talk about why this provides

00:00:36,810 --> 00:00:41,470
specific benefits and why people are

00:00:39,820 --> 00:00:43,570
interested also some of the caveats and

00:00:41,470 --> 00:00:45,160
things you should be aware of if you

00:00:43,570 --> 00:00:48,070
find this an interest in are considering

00:00:45,160 --> 00:00:50,260
it but it's important to note that this

00:00:48,070 --> 00:00:52,930
isn't something that's just a Drupal ism

00:00:50,260 --> 00:00:54,280
the the moniker quote-unquote headless

00:00:52,930 --> 00:00:57,010
is sort of a Drupal community thing

00:00:54,280 --> 00:00:58,660
because it sounds cool and like I bear

00:00:57,010 --> 00:01:01,210
some responsibility for that like I made

00:00:58,660 --> 00:01:02,800
a neat mashup graphic of like headless

00:01:01,210 --> 00:01:05,939
horseman holding a Drupal instead of a

00:01:02,800 --> 00:01:08,889
pumpkin but but that's sort of like a

00:01:05,939 --> 00:01:10,929
fun thing that we came up with in our

00:01:08,889 --> 00:01:12,939
own world more broadly in the world of

00:01:10,929 --> 00:01:15,729
websites and web site makers the notion

00:01:12,939 --> 00:01:17,859
of decoupling your CMS from some of its

00:01:15,729 --> 00:01:19,630
other components particularly decoupling

00:01:17,859 --> 00:01:22,090
the content management from content

00:01:19,630 --> 00:01:24,369
display has actually been around since

00:01:22,090 --> 00:01:25,719
the very beginning and this is an

00:01:24,369 --> 00:01:27,909
architecture that actually has a lot of

00:01:25,719 --> 00:01:31,780
legacy in the web and a lot of things

00:01:27,909 --> 00:01:33,789
going for it so um mana lifts uh you

00:01:31,780 --> 00:01:35,859
know try to think of the you know

00:01:33,789 --> 00:01:37,630
they're they're big blocks of stuff and

00:01:35,859 --> 00:01:39,310
they have everything in them you can

00:01:37,630 --> 00:01:41,560
kind of think of the the model at the

00:01:39,310 --> 00:01:44,020
beginning of 2001 it's just like it's

00:01:41,560 --> 00:01:46,749
all there and it can idea it is it's a

00:01:44,020 --> 00:01:50,200
totality and it contains everything in

00:01:46,749 --> 00:01:51,549
the in the Drupal world you might say

00:01:50,200 --> 00:01:53,139
well we do have these different

00:01:51,549 --> 00:01:55,779
functionalities and in fact we have a

00:01:53,139 --> 00:01:57,549
separation of concerns it's not actually

00:01:55,779 --> 00:01:59,799
really monolithic because there's the

00:01:57,549 --> 00:02:01,209
theme layer which is you know there's a

00:01:59,799 --> 00:02:03,490
different directory where that code

00:02:01,209 --> 00:02:05,079
lives and themes are invoked in a

00:02:03,490 --> 00:02:06,130
different way than modules and their

00:02:05,079 --> 00:02:09,039
invoke their different than it's

00:02:06,130 --> 00:02:11,110
different the core for sure and that's

00:02:09,039 --> 00:02:13,540
true but the the thing is that that's

00:02:11,110 --> 00:02:15,790
more of an internal convention rather

00:02:13,540 --> 00:02:17,400
than a strong separation of concerns the

00:02:15,790 --> 00:02:19,590
boundary between what half

00:02:17,400 --> 00:02:22,349
at the theme layer and what happens with

00:02:19,590 --> 00:02:24,540
in Drupal core is very permeable that

00:02:22,349 --> 00:02:26,310
that gets a bit better with Drupal 8 and

00:02:24,540 --> 00:02:28,200
twig where there's actually maybe a

00:02:26,310 --> 00:02:30,659
stronger separation of concerns between

00:02:28,200 --> 00:02:33,150
literally the templates themselves and

00:02:30,659 --> 00:02:34,920
the theme but you still have all of the

00:02:33,150 --> 00:02:37,409
logic that's in the theme that bounds

00:02:34,920 --> 00:02:39,450
how they are how layouts are constructed

00:02:37,409 --> 00:02:41,310
and when they're utilized it's sort of

00:02:39,450 --> 00:02:45,420
like what content is present for each

00:02:41,310 --> 00:02:47,569
template that that software that code

00:02:45,420 --> 00:02:50,670
that's programmed to do that is

00:02:47,569 --> 00:02:52,200
essentially has an unmitigated access to

00:02:50,670 --> 00:02:54,030
the rest of the system and vice versa

00:02:52,200 --> 00:02:56,459
and so what happens when you have that

00:02:54,030 --> 00:02:57,989
permeable boundary is even with the best

00:02:56,459 --> 00:03:00,209
of intentions and following best

00:02:57,989 --> 00:03:02,489
practices there's usually some and

00:03:00,209 --> 00:03:05,099
sometimes there's a lot of spillover

00:03:02,489 --> 00:03:07,170
between the two areas and so it's sort

00:03:05,099 --> 00:03:09,599
of like you're playing twister with your

00:03:07,170 --> 00:03:13,829
code and twister is like an exciting and

00:03:09,599 --> 00:03:15,959
yet awkward game of chance and and for

00:03:13,829 --> 00:03:17,819
the projects that you're building this

00:03:15,959 --> 00:03:20,159
is why for instance you know you may

00:03:17,819 --> 00:03:21,599
think hey we have a we just need a new

00:03:20,159 --> 00:03:23,609
theme I don't want to do really anything

00:03:21,599 --> 00:03:25,019
big to my website I just want to do a

00:03:23,609 --> 00:03:26,940
little bit of a redesigned can we build

00:03:25,019 --> 00:03:29,250
a new theme and suddenly you discover

00:03:26,940 --> 00:03:31,560
that actually that's gonna require you

00:03:29,250 --> 00:03:33,150
to refactor a great many things and the

00:03:31,560 --> 00:03:36,659
reason is that things are all twisted up

00:03:33,150 --> 00:03:38,549
this is also a frustration to front-end

00:03:36,659 --> 00:03:40,919
developers people who don't have a lot

00:03:38,549 --> 00:03:43,260
of Drupal specific expertise but have a

00:03:40,919 --> 00:03:46,169
lot of experience building pages for the

00:03:43,260 --> 00:03:48,569
web because what happens is our Drupal

00:03:46,169 --> 00:03:50,940
isms the things that really only exists

00:03:48,569 --> 00:03:52,859
in Drupal or are only familiar to people

00:03:50,940 --> 00:03:55,560
who have years of experience with Drupal

00:03:52,859 --> 00:03:57,780
end up leaking out to the front end

00:03:55,560 --> 00:03:59,299
where general web developers who maybe

00:03:57,780 --> 00:04:01,349
have years of experience building

00:03:59,299 --> 00:04:03,359
amazing web pages and doing awesome

00:04:01,349 --> 00:04:05,129
stuff on the front end are kind of like

00:04:03,359 --> 00:04:08,669
scratching their heads and mean like

00:04:05,129 --> 00:04:11,579
what is this stuff and why is it here it

00:04:08,669 --> 00:04:14,430
feels really like foreign to me and it

00:04:11,579 --> 00:04:17,010
gets in my way so the the monolithic

00:04:14,430 --> 00:04:19,620
architecture has these drawbacks in that

00:04:17,010 --> 00:04:20,970
it creates confusion for the front-end

00:04:19,620 --> 00:04:23,610
developers they have a harder time

00:04:20,970 --> 00:04:25,229
latching on and working with Drupal

00:04:23,610 --> 00:04:27,389
because there are so many Drupal isms

00:04:25,229 --> 00:04:29,639
that leaked out and then internally even

00:04:27,389 --> 00:04:31,080
the Drupal savvy developers because of

00:04:29,639 --> 00:04:32,879
all the twisting up of things

00:04:31,080 --> 00:04:35,250
can sometimes end up in a position where

00:04:32,879 --> 00:04:37,220
you know they're not able to move as

00:04:35,250 --> 00:04:40,500
quickly as they want or they're being

00:04:37,220 --> 00:04:42,300
frustrated by unintended side effects or

00:04:40,500 --> 00:04:44,009
they just find that it's actually very

00:04:42,300 --> 00:04:46,650
difficult to meet the needs of the

00:04:44,009 --> 00:04:48,659
business and if you remember for the

00:04:46,650 --> 00:04:51,419
beginning of 2001 and when that Monell

00:04:48,659 --> 00:04:53,639
if came down the result was that the pre

00:04:51,419 --> 00:04:55,379
human primates that were down there they

00:04:53,639 --> 00:04:59,009
got pretty Reggie and they ended up

00:04:55,379 --> 00:05:01,949
smashing things up so the the in in the

00:04:59,009 --> 00:05:05,300
worst-case scenario the kind of a kludgy

00:05:01,949 --> 00:05:07,889
monolith actually leads to a lot of

00:05:05,300 --> 00:05:10,289
unproductive work for developers a lot

00:05:07,889 --> 00:05:12,930
of you know unnecessary refactoring a

00:05:10,289 --> 00:05:14,909
lot of you know having to roll things

00:05:12,930 --> 00:05:16,979
back because an unintended consequence

00:05:14,909 --> 00:05:18,659
occurred and and these are the reasons

00:05:16,979 --> 00:05:23,729
why from the developer side people are

00:05:18,659 --> 00:05:26,909
definitely definitely excited about a

00:05:23,729 --> 00:05:27,949
different way of building websites the

00:05:26,909 --> 00:05:30,330
different way of building websites

00:05:27,949 --> 00:05:32,819
involves a strong separation of concerns

00:05:30,330 --> 00:05:34,800
and and in general although this

00:05:32,819 --> 00:05:36,240
actually virgins out within that with a

00:05:34,800 --> 00:05:38,310
whole idea of micro services and I'll

00:05:36,240 --> 00:05:40,139
talk a lotta that at the end in general

00:05:38,310 --> 00:05:42,690
what people are talking about here is

00:05:40,139 --> 00:05:46,020
they're saying hey I want Drupal to be

00:05:42,690 --> 00:05:48,449
the repository of my content I want it

00:05:46,020 --> 00:05:50,430
to like handle the editing of content

00:05:48,449 --> 00:05:52,469
and some administrative stuff and then I

00:05:50,430 --> 00:05:54,419
want something else hand wave hand wave

00:05:52,469 --> 00:05:57,449
we'll get into that later something else

00:05:54,419 --> 00:06:00,839
to handle the display of that content to

00:05:57,449 --> 00:06:03,120
my users and the the difference is that

00:06:00,839 --> 00:06:05,460
we're going to communicate over an HTTP

00:06:03,120 --> 00:06:07,110
API between the drupal backend and

00:06:05,460 --> 00:06:09,120
that's something else on the front end

00:06:07,110 --> 00:06:11,099
that creates a strong separation of

00:06:09,120 --> 00:06:13,650
concerns because the only thing that can

00:06:11,099 --> 00:06:15,389
be passed for that API is data these

00:06:13,650 --> 00:06:17,250
days most folks use a rest api may use

00:06:15,389 --> 00:06:19,770
json data that's the most kind of widely

00:06:17,250 --> 00:06:22,500
that's the lingua franca of the of the

00:06:19,770 --> 00:06:24,870
distributed web and what that means is

00:06:22,500 --> 00:06:27,180
that the on the front end that client

00:06:24,870 --> 00:06:29,550
can be ignorant of almost all things

00:06:27,180 --> 00:06:31,560
Drupal it can just consumes these you

00:06:29,550 --> 00:06:33,479
know objects in Jason and then does

00:06:31,560 --> 00:06:36,020
whatever it thinks are necessary and

00:06:33,479 --> 00:06:38,819
that means that if you can agree upon

00:06:36,020 --> 00:06:40,580
what will be passed back and forth over

00:06:38,819 --> 00:06:42,590
this API that's an

00:06:40,580 --> 00:06:45,259
point to note one of the key things from

00:06:42,590 --> 00:06:47,960
a practical standpoint of building with

00:06:45,259 --> 00:06:49,490
a decoupled architecture is having a lot

00:06:47,960 --> 00:06:51,770
of this stuff mapped out ahead of time

00:06:49,490 --> 00:06:53,840
and even kind of prototypes so that

00:06:51,770 --> 00:06:55,430
there's a speck of what there's a

00:06:53,840 --> 00:06:57,020
contract even that's the way the

00:06:55,430 --> 00:06:58,490
developers often talk about it there's a

00:06:57,020 --> 00:07:01,250
contract between the front end in the

00:06:58,490 --> 00:07:03,349
back end of I will ask for this and you

00:07:01,250 --> 00:07:06,110
will send me that and that creates like

00:07:03,349 --> 00:07:07,849
a good solid foundation on which you can

00:07:06,110 --> 00:07:09,229
execute and one of the nice things about

00:07:07,849 --> 00:07:10,879
this is that people can actually execute

00:07:09,229 --> 00:07:13,069
in parallel once we have that foundation

00:07:10,879 --> 00:07:16,039
and it kind of makes people happy and

00:07:13,069 --> 00:07:19,460
everybody wins um the reason why

00:07:16,039 --> 00:07:22,000
everybody wins is that the folks are

00:07:19,460 --> 00:07:25,310
able to use the tools that they prefer

00:07:22,000 --> 00:07:27,199
so a Drupal back-end developer doesn't

00:07:25,310 --> 00:07:28,699
need to worry about theming and the

00:07:27,199 --> 00:07:30,590
front-end developer who may or may not

00:07:28,699 --> 00:07:32,599
know that much about Drupal at all is

00:07:30,590 --> 00:07:35,000
able to use whatever tool chain they

00:07:32,599 --> 00:07:37,279
like because all they're doing is you

00:07:35,000 --> 00:07:40,069
know getting some some JSON files of

00:07:37,279 --> 00:07:41,629
this API and then rendering them as you

00:07:40,069 --> 00:07:43,610
know / the spec so that they can have

00:07:41,629 --> 00:07:44,840
things work for the client and there's

00:07:43,610 --> 00:07:47,900
an enormous amount of innovation

00:07:44,840 --> 00:07:50,449
happening online in that front end space

00:07:47,900 --> 00:07:52,759
with the you know kind of html5 become a

00:07:50,449 --> 00:07:55,520
leading standard flash is finally dining

00:07:52,759 --> 00:07:57,919
out thank goodness and and we're just

00:07:55,520 --> 00:07:59,539
seeing like the the rate of progress in

00:07:57,919 --> 00:08:03,800
that front end development space is

00:07:59,539 --> 00:08:05,539
really really rapid and for us as drupal

00:08:03,800 --> 00:08:07,849
lists i think it's really important that

00:08:05,539 --> 00:08:09,650
we be we are a part of that i think we

00:08:07,849 --> 00:08:11,599
can actually play a really important

00:08:09,650 --> 00:08:15,229
role there i was recently at a

00:08:11,599 --> 00:08:17,180
conference that had a whole angular

00:08:15,229 --> 00:08:18,919
conference with angular as a javascript

00:08:17,180 --> 00:08:20,990
front end so it's a it's a JavaScript

00:08:18,919 --> 00:08:22,789
framework for building rich front end

00:08:20,990 --> 00:08:24,729
applications and they're doing like

00:08:22,789 --> 00:08:26,839
really cool stuff like you know

00:08:24,729 --> 00:08:28,460
interactive applications that if you're

00:08:26,839 --> 00:08:30,650
not on the internet will save your data

00:08:28,460 --> 00:08:32,089
locally and then sync up with you know

00:08:30,650 --> 00:08:33,589
the mothership whenever the internet

00:08:32,089 --> 00:08:34,969
access comes back and figure it out like

00:08:33,589 --> 00:08:39,380
really advanced stuff like that that's

00:08:34,969 --> 00:08:40,729
just great but they are sort of not that

00:08:39,380 --> 00:08:42,199
they don't have a lot of sophistication

00:08:40,729 --> 00:08:44,000
when it comes to what their angular

00:08:42,199 --> 00:08:45,140
front end applications are talking to

00:08:44,000 --> 00:08:46,910
and I think there's a really amazing

00:08:45,140 --> 00:08:49,640
opportunity for us in the Drupal space

00:08:46,910 --> 00:08:51,829
to show how these pieces can fit

00:08:49,640 --> 00:08:53,300
together here we have a robust content

00:08:51,829 --> 00:08:53,960
management system it has all those

00:08:53,300 --> 00:08:55,940
wonderful

00:08:53,960 --> 00:08:58,070
their capabilities it's got great

00:08:55,940 --> 00:09:00,050
editorial capabilities it has access

00:08:58,070 --> 00:09:01,700
controls and users and permissions these

00:09:00,050 --> 00:09:03,290
are all things that you really are hard

00:09:01,700 --> 00:09:04,760
and on some of them you don't want to

00:09:03,290 --> 00:09:06,770
implement in the front end because

00:09:04,760 --> 00:09:07,970
they're easily then that you know you're

00:09:06,770 --> 00:09:10,010
putting that code in the hand of the

00:09:07,970 --> 00:09:12,680
user a malicious user could have used

00:09:10,010 --> 00:09:14,630
that code coupling these things together

00:09:12,680 --> 00:09:16,220
and showing in or suttin I shouldn't say

00:09:14,630 --> 00:09:18,620
coupling since we're talking be coupled

00:09:16,220 --> 00:09:20,750
connecting these things together in a

00:09:18,620 --> 00:09:22,430
structured way creates a lot of

00:09:20,750 --> 00:09:25,430
opportunity and it's a chance for Drupal

00:09:22,430 --> 00:09:27,950
to sort of connect itself to one of the

00:09:25,430 --> 00:09:30,590
most vibrant and active parts of web

00:09:27,950 --> 00:09:32,570
development today like I mentioned

00:09:30,590 --> 00:09:34,490
before another reason this is really

00:09:32,570 --> 00:09:37,610
exciting to people is that it allows you

00:09:34,490 --> 00:09:39,440
to parallel track your work this is

00:09:37,610 --> 00:09:41,300
something that's been the bane of almost

00:09:39,440 --> 00:09:43,580
every Drupal project that I've heard of

00:09:41,300 --> 00:09:45,680
to some degree or another that you have

00:09:43,580 --> 00:09:48,380
this chicken and the egg problem of well

00:09:45,680 --> 00:09:50,600
we need our content models be set up

00:09:48,380 --> 00:09:52,250
before we can do our design and then

00:09:50,600 --> 00:09:54,350
once we started implementing our design

00:09:52,250 --> 00:09:56,840
we discovered that the content model was

00:09:54,350 --> 00:09:58,460
in some ways not you know we missed

00:09:56,840 --> 00:10:00,710
something and then we had to go back and

00:09:58,460 --> 00:10:02,510
when we change that down some parts of

00:10:00,710 --> 00:10:03,950
the design were not implemented

00:10:02,510 --> 00:10:07,070
correctly and there's this kind of

00:10:03,950 --> 00:10:09,560
ping-ponging that can happen on a more

00:10:07,070 --> 00:10:12,380
complex project especially between the

00:10:09,560 --> 00:10:14,690
the developers who are creating the core

00:10:12,380 --> 00:10:16,910
backend for the system how the content

00:10:14,690 --> 00:10:18,770
is is stored what the business logic is

00:10:16,910 --> 00:10:21,140
and the femurs who are working on the

00:10:18,770 --> 00:10:22,430
front end and oftentimes the dynamic

00:10:21,140 --> 00:10:24,860
between those two different teams can

00:10:22,430 --> 00:10:28,100
become kind of a little bit you know

00:10:24,860 --> 00:10:30,080
staticky which is not great um with a

00:10:28,100 --> 00:10:31,970
with and that can certainly happen in

00:10:30,080 --> 00:10:33,350
any project this is no weapon by no

00:10:31,970 --> 00:10:35,060
means do I mean to recommend that like

00:10:33,350 --> 00:10:37,160
decoupling is a silver bullet that

00:10:35,060 --> 00:10:39,320
prevents you from ever having developers

00:10:37,160 --> 00:10:42,230
at odds than another but if you are able

00:10:39,320 --> 00:10:44,240
to create a contract between and then

00:10:42,230 --> 00:10:46,730
you start with that as a spec really you

00:10:44,240 --> 00:10:48,110
start with the API spec and there's

00:10:46,730 --> 00:10:50,690
really tools out there for an

00:10:48,110 --> 00:10:53,360
processings out there for for creating

00:10:50,690 --> 00:10:56,690
and managing API specs you start with

00:10:53,360 --> 00:10:59,450
that then the front-end developers can

00:10:56,690 --> 00:11:00,890
just go because they have a spec to work

00:10:59,450 --> 00:11:02,840
against and they can kind of you know

00:11:00,890 --> 00:11:04,460
they can have something that mocks that

00:11:02,840 --> 00:11:06,560
spec that just provides the basic

00:11:04,460 --> 00:11:07,820
responses and they can just be off and

00:11:06,560 --> 00:11:12,050
running on as soon as that

00:11:07,820 --> 00:11:14,240
is done while the the back end

00:11:12,050 --> 00:11:17,210
developers are implementing the real

00:11:14,240 --> 00:11:18,710
world version of that spec and then you

00:11:17,210 --> 00:11:20,000
know once you start to actually connect

00:11:18,710 --> 00:11:21,650
the two there will be a little bit of a

00:11:20,000 --> 00:11:24,140
back and forth but that's done by

00:11:21,650 --> 00:11:26,420
figuring out changes to the spec

00:11:24,140 --> 00:11:28,730
amendments to the contract if you will

00:11:26,420 --> 00:11:31,310
and that creates a structured mechanism

00:11:28,730 --> 00:11:32,840
for figuring out how these pieces end up

00:11:31,310 --> 00:11:36,800
connecting and because what they're

00:11:32,840 --> 00:11:39,680
connecting over is a REST API that there

00:11:36,800 --> 00:11:42,410
is a is bounded right that the impacts

00:11:39,680 --> 00:11:44,510
of changes are knowable and and can be

00:11:42,410 --> 00:11:46,370
understood and planned for in advance

00:11:44,510 --> 00:11:49,190
you're not going to suddenly discover

00:11:46,370 --> 00:11:51,230
that there was another piece of code

00:11:49,190 --> 00:11:53,510
somewhere else that avoided some hook

00:11:51,230 --> 00:11:55,580
that was now being invoked and you know

00:11:53,510 --> 00:11:57,560
your user profile pages blew up

00:11:55,580 --> 00:12:00,650
unexpectedly that those sorts of

00:11:57,560 --> 00:12:03,230
unintended side effects the result of

00:12:00,650 --> 00:12:05,720
the game of Twister are no longer as

00:12:03,230 --> 00:12:07,070
they're far far less likely to occur and

00:12:05,720 --> 00:12:09,650
you have a good structured way for doing

00:12:07,070 --> 00:12:11,060
this and people can work in parallel in

00:12:09,650 --> 00:12:13,550
the last real reason that I think people

00:12:11,060 --> 00:12:15,530
are extremely interested in this is that

00:12:13,550 --> 00:12:18,470
it creates some notion of future

00:12:15,530 --> 00:12:20,660
proofing I think there's really two

00:12:18,470 --> 00:12:23,780
aspects to future proofing when it comes

00:12:20,660 --> 00:12:26,780
to be coupled the first aspect is if you

00:12:23,780 --> 00:12:28,880
have a decoupled back end and a contract

00:12:26,780 --> 00:12:30,950
for what the front end should you know

00:12:28,880 --> 00:12:32,570
is going to expect to receive and you

00:12:30,950 --> 00:12:35,060
know the and then the front end its own

00:12:32,570 --> 00:12:36,590
business how that ends up looking it

00:12:35,060 --> 00:12:38,540
becomes a relatively straightforward

00:12:36,590 --> 00:12:42,050
proposition to say i would like a

00:12:38,540 --> 00:12:43,730
different front end because you can you

00:12:42,050 --> 00:12:46,100
can sort of pop one off and put another

00:12:43,730 --> 00:12:48,920
one on you can run to in parallel

00:12:46,100 --> 00:12:50,870
relatively easily you can change the

00:12:48,920 --> 00:12:53,240
front end without necessarily having to

00:12:50,870 --> 00:12:54,830
change anything at all on the back end

00:12:53,240 --> 00:12:56,090
now you might find that your new front

00:12:54,830 --> 00:12:57,410
end you want to do some design things

00:12:56,090 --> 00:12:59,060
that involves capabilities it didn't

00:12:57,410 --> 00:13:00,380
exist before and then you have to like

00:12:59,060 --> 00:13:04,040
look at how you need to amend your

00:13:00,380 --> 00:13:07,370
contract but in the simplest case if you

00:13:04,040 --> 00:13:09,470
just want to say go for you know go from

00:13:07,370 --> 00:13:12,320
your existing design to a completely

00:13:09,470 --> 00:13:13,970
mobile first design or if you want to

00:13:12,320 --> 00:13:16,430
have the option of like totally

00:13:13,970 --> 00:13:20,090
different designs for desktop versus

00:13:16,430 --> 00:13:21,500
tablet or if you want to have a design

00:13:20,090 --> 00:13:23,750
for your site

00:13:21,500 --> 00:13:25,640
variants of your site's content that's

00:13:23,750 --> 00:13:27,680
totally different for a certain type of

00:13:25,640 --> 00:13:29,300
user or so totally different for a

00:13:27,680 --> 00:13:31,340
certain type of use case you can

00:13:29,300 --> 00:13:33,590
actually run that as a separate

00:13:31,340 --> 00:13:36,170
front-end using the same contract in the

00:13:33,590 --> 00:13:39,980
same API talking to the same backend and

00:13:36,170 --> 00:13:42,230
that's a very powerful capability so the

00:13:39,980 --> 00:13:45,760
idea that you can future-proof yourself

00:13:42,230 --> 00:13:48,650
from like you know having the ability to

00:13:45,760 --> 00:13:51,140
iterate on your user experience without

00:13:48,650 --> 00:13:52,840
having to overhaul your whole CMS that's

00:13:51,140 --> 00:13:55,520
a that's a powerful and attractive idea

00:13:52,840 --> 00:14:00,350
the other future proofing aspect to this

00:13:55,520 --> 00:14:03,380
is the macro trend for the web is this

00:14:00,350 --> 00:14:05,930
notion of services that interconnect

00:14:03,380 --> 00:14:09,190
with one another the notion of the

00:14:05,930 --> 00:14:13,790
Internet of Things the proliferation of

00:14:09,190 --> 00:14:15,680
things that consume the web is is you

00:14:13,790 --> 00:14:17,540
know there's we're not in some kind of

00:14:15,680 --> 00:14:20,060
weird future like you would see in an

00:14:17,540 --> 00:14:21,920
IBM ed but they're not wrong that that's

00:14:20,060 --> 00:14:24,710
the way that things are headed right the

00:14:21,920 --> 00:14:26,690
notion that a person looking at a web

00:14:24,710 --> 00:14:29,120
browser whether that's on their desktop

00:14:26,690 --> 00:14:31,760
on a mobile device is how the web is

00:14:29,120 --> 00:14:33,350
consumed that's you know not really true

00:14:31,760 --> 00:14:36,890
anymore and it's only going to get less

00:14:33,350 --> 00:14:39,080
true over time so you have the the the

00:14:36,890 --> 00:14:42,080
very obvious and actually quite present

00:14:39,080 --> 00:14:44,360
a case of mobile native applications

00:14:42,080 --> 00:14:46,790
that want to consume things from the web

00:14:44,360 --> 00:14:48,650
from CMS's decouple is a way to serve

00:14:46,790 --> 00:14:51,200
that use case you also have the notion

00:14:48,650 --> 00:14:53,000
that maybe there's other sites you know

00:14:51,200 --> 00:14:56,570
maybe your content is being aggregated

00:14:53,000 --> 00:14:58,820
by other systems and and you want to be

00:14:56,570 --> 00:15:00,260
able to give it to them in a rather than

00:14:58,820 --> 00:15:02,180
having them scrape your website you know

00:15:00,260 --> 00:15:05,330
it's it's kind of ironic that the

00:15:02,180 --> 00:15:08,330
lengths that Google goes to to determine

00:15:05,330 --> 00:15:09,770
semantic data out of just web pages you

00:15:08,330 --> 00:15:11,120
know they have these little tags you can

00:15:09,770 --> 00:15:12,680
throw around stuff which is awesome and

00:15:11,120 --> 00:15:14,510
then so that you get like event listings

00:15:12,680 --> 00:15:17,150
or other cool things when people search

00:15:14,510 --> 00:15:20,450
for your stuff but there are many many

00:15:17,150 --> 00:15:23,030
many many other web sites that aren't

00:15:20,450 --> 00:15:25,280
just scraping the the you know scraping

00:15:23,030 --> 00:15:27,500
the HTML off your web page they'd like

00:15:25,280 --> 00:15:28,790
to interact with you on an API level and

00:15:27,500 --> 00:15:30,950
that might really be of interest to you

00:15:28,790 --> 00:15:33,709
or vice versa maybe you want to consume

00:15:30,950 --> 00:15:35,329
data from some other API and you don't

00:15:33,709 --> 00:15:37,129
want to have it all kind of being

00:15:35,329 --> 00:15:39,589
forced to go through Drupal's database

00:15:37,129 --> 00:15:41,929
with a decoupled front end you could say

00:15:39,589 --> 00:15:43,910
that front end gets some of its data

00:15:41,929 --> 00:15:46,279
from Drupal and some of its data from

00:15:43,910 --> 00:15:47,839
another source maybe there's multiple

00:15:46,279 --> 00:15:49,730
sources that are involved and that's an

00:15:47,839 --> 00:15:52,850
exciting use case that's becoming more

00:15:49,730 --> 00:15:55,279
and more realistic for more and more

00:15:52,850 --> 00:15:57,499
people so the idea of decoupling now as

00:15:55,279 --> 00:15:59,869
a way of being better positioned to take

00:15:57,499 --> 00:16:03,499
advantage of future internet use cases

00:15:59,869 --> 00:16:05,449
is another aspect of future proofing so

00:16:03,499 --> 00:16:07,549
I want to talk a little bit now about

00:16:05,449 --> 00:16:09,949
caveats because that was a lot of

00:16:07,549 --> 00:16:12,319
exciting stuff about decoupling but

00:16:09,949 --> 00:16:14,299
there is as with anything where there's

00:16:12,319 --> 00:16:17,839
excitement there's also maybe a little

00:16:14,299 --> 00:16:19,790
bit of over excitement or I wouldn't say

00:16:17,839 --> 00:16:22,519
hype but generally you know people

00:16:19,790 --> 00:16:24,139
people developers in particular get

00:16:22,519 --> 00:16:25,549
really enthusiastic about this stuff

00:16:24,139 --> 00:16:28,879
because it's really cool and it's really

00:16:25,549 --> 00:16:31,699
fun but there are definitely drawbacks

00:16:28,879 --> 00:16:34,579
and risks to doing it this way there is

00:16:31,699 --> 00:16:36,739
a interesting blog post just was just

00:16:34,579 --> 00:16:38,149
titled the cake is a lie that talked

00:16:36,739 --> 00:16:41,389
about all the ways in which people might

00:16:38,149 --> 00:16:43,549
misunderstand what is going on with with

00:16:41,389 --> 00:16:46,220
the coupled and a couple Drupal in

00:16:43,549 --> 00:16:50,389
particular so one of the first things to

00:16:46,220 --> 00:16:54,709
point out is that all of this is serious

00:16:50,389 --> 00:16:57,110
work to build there is no even with like

00:16:54,709 --> 00:16:58,189
the coolest proof-of-concept examples

00:16:57,110 --> 00:17:01,970
that are out there and there are some

00:16:58,189 --> 00:17:04,010
really cool ones there is no turnkey way

00:17:01,970 --> 00:17:07,189
to build a de coupled website that

00:17:04,010 --> 00:17:09,380
serves any particular use case there are

00:17:07,189 --> 00:17:12,529
just you know as far as we've gotten our

00:17:09,380 --> 00:17:14,929
basic patterns for connecting some of

00:17:12,529 --> 00:17:18,409
the new frameworks since new front ends

00:17:14,929 --> 00:17:21,199
with a Drupal drupal's data exposed over

00:17:18,409 --> 00:17:23,149
a REST API actually building your

00:17:21,199 --> 00:17:26,510
website using these techniques will

00:17:23,149 --> 00:17:29,960
require significant amounts of custom

00:17:26,510 --> 00:17:32,000
code significant amounts of soft you

00:17:29,960 --> 00:17:34,600
know software development and a lot of

00:17:32,000 --> 00:17:37,100
planning and iteration so you should not

00:17:34,600 --> 00:17:38,960
if there's people out there who seem to

00:17:37,100 --> 00:17:40,850
think that yeah deployed just has this

00:17:38,960 --> 00:17:42,110
rest api in core and there's this thing

00:17:40,850 --> 00:17:43,639
called angular and you just turn them

00:17:42,110 --> 00:17:45,440
both on and suddenly you have an

00:17:43,639 --> 00:17:48,080
interactive single page application

00:17:45,440 --> 00:17:48,929
website for drupal that is very very far

00:17:48,080 --> 00:17:52,139
from the truth

00:17:48,929 --> 00:17:54,149
this is uh this is no longer like you

00:17:52,139 --> 00:17:57,570
know sort of Sputnik moonshot stuff that

00:17:54,149 --> 00:18:00,629
only the few developers are working on

00:17:57,570 --> 00:18:02,610
but it's far from being a like thing

00:18:00,629 --> 00:18:04,619
that you just turn on and because what

00:18:02,610 --> 00:18:07,350
we're talking about really is comes down

00:18:04,619 --> 00:18:09,869
a lot of times to the user experience

00:18:07,350 --> 00:18:12,179
and the implementation of the front end

00:18:09,869 --> 00:18:14,190
I don't think that will actually ever

00:18:12,179 --> 00:18:15,990
get to a place where you just like turn

00:18:14,190 --> 00:18:18,059
on the coupled mode or something like

00:18:15,990 --> 00:18:20,519
that because ultimately just like most

00:18:18,059 --> 00:18:23,639
websites built with Drupal have a custom

00:18:20,519 --> 00:18:25,710
theme there will be at most websites

00:18:23,639 --> 00:18:27,690
build with Drupal in fact almost all of

00:18:25,710 --> 00:18:29,970
them I think that are decoupled will

00:18:27,690 --> 00:18:32,399
have some customization to the front end

00:18:29,970 --> 00:18:33,990
some customization to that contract

00:18:32,399 --> 00:18:36,330
between the front end in the back end

00:18:33,990 --> 00:18:37,830
and that's that's a lot of work it's not

00:18:36,330 --> 00:18:39,629
necessarily going to save you money up

00:18:37,830 --> 00:18:42,600
front in fact it will probably make your

00:18:39,629 --> 00:18:44,279
project more complicated if you know

00:18:42,600 --> 00:18:46,499
from a cost standpoint it only makes

00:18:44,279 --> 00:18:48,090
sense is a long-term investment and from

00:18:46,499 --> 00:18:49,619
that standpoint if you want to do this

00:18:48,090 --> 00:18:52,259
you have to really get buy-in from

00:18:49,619 --> 00:18:53,759
everybody on your project all the

00:18:52,259 --> 00:18:56,070
stakeholders have to really think about

00:18:53,759 --> 00:18:58,559
this and want to do it before it makes

00:18:56,070 --> 00:19:00,059
sense to do unless you're simply just

00:18:58,559 --> 00:19:01,379
doing a prototype right there's there's

00:19:00,059 --> 00:19:03,389
some cool things you might be able to do

00:19:01,379 --> 00:19:05,039
by prototyping where it's like you know

00:19:03,389 --> 00:19:06,119
you have your running website and

00:19:05,039 --> 00:19:08,759
actually changing that you're just

00:19:06,119 --> 00:19:10,350
setting up a little rest api and trying

00:19:08,759 --> 00:19:12,539
something out on the side that's kind of

00:19:10,350 --> 00:19:14,639
fun but if you are looking to do this

00:19:12,539 --> 00:19:16,919
for your you know for your primary

00:19:14,639 --> 00:19:19,619
website it is a big project it requires

00:19:16,919 --> 00:19:21,480
a lot of work the other thing is as we

00:19:19,619 --> 00:19:23,549
all know Drupal does all these wonderful

00:19:21,480 --> 00:19:25,230
things for us this is a great the

00:19:23,549 --> 00:19:28,769
periodic table of modules from amazing

00:19:25,230 --> 00:19:32,220
labs it's a neat wonderful case of

00:19:28,769 --> 00:19:33,450
infographic and and research so look

00:19:32,220 --> 00:19:35,490
there's all these modules there's a

00:19:33,450 --> 00:19:38,009
hundred of modules that are in use by

00:19:35,490 --> 00:19:39,470
hundreds of thousands of sites and the

00:19:38,009 --> 00:19:42,509
thing is that a lot of Drupal modules

00:19:39,470 --> 00:19:45,600
have to do with how stuff is displayed

00:19:42,509 --> 00:19:47,549
to the user and once you're no longer

00:19:45,600 --> 00:19:50,220
using Drupal to display stuff to the

00:19:47,549 --> 00:19:52,259
user most of these modules or a lot of

00:19:50,220 --> 00:19:54,330
them anyway have come off the table as

00:19:52,259 --> 00:19:56,249
things that you can utilize and what

00:19:54,330 --> 00:19:58,919
that means is anything that they were

00:19:56,249 --> 00:20:01,499
doing for you you're now doing some

00:19:58,919 --> 00:20:02,429
other way and that some other way

00:20:01,499 --> 00:20:05,129
probably in

00:20:02,429 --> 00:20:06,720
all's you building it yourself in your

00:20:05,129 --> 00:20:07,860
own manner or you know there's there

00:20:06,720 --> 00:20:09,240
some stuff you could take advantage of

00:20:07,860 --> 00:20:11,549
on the front end there are some good

00:20:09,240 --> 00:20:14,940
plug-and-play JavaScript tools to be

00:20:11,549 --> 00:20:16,980
able to use but in toto you're you're

00:20:14,940 --> 00:20:20,580
giving up a lot of the stuff you get for

00:20:16,980 --> 00:20:22,470
free with Drupal when you go in in to

00:20:20,580 --> 00:20:24,690
add a couple of architecture and you

00:20:22,470 --> 00:20:26,789
should really evaluate what you'll be

00:20:24,690 --> 00:20:30,210
giving up whether you can afford to just

00:20:26,789 --> 00:20:32,460
let it go or how much work and cost it

00:20:30,210 --> 00:20:35,399
will be to implement that in a different

00:20:32,460 --> 00:20:39,899
manner so everything from content

00:20:35,399 --> 00:20:41,279
translation to previewing to you know

00:20:39,899 --> 00:20:42,629
there are there there are lots and lots

00:20:41,279 --> 00:20:43,799
of cases where things you know that

00:20:42,629 --> 00:20:47,549
you're just used to being able to do in

00:20:43,799 --> 00:20:49,499
Drupal they're no longer present in a

00:20:47,549 --> 00:20:53,220
decoupled architecture because it's it's

00:20:49,499 --> 00:20:55,409
customized um ok so now I want to get

00:20:53,220 --> 00:20:57,840
into some specifics which is to talk

00:20:55,409 --> 00:20:59,909
about five different ways in which

00:20:57,840 --> 00:21:02,580
people go about the coupling sort of

00:20:59,909 --> 00:21:05,369
five different decoupled architectures I

00:21:02,580 --> 00:21:08,369
will and I'll talk through their various

00:21:05,369 --> 00:21:11,360
use cases and applications and then

00:21:08,369 --> 00:21:14,789
we'll take some questions from the crowd

00:21:11,360 --> 00:21:19,110
so the first and probably most popular

00:21:14,789 --> 00:21:22,649
method for doing decoupled entation with

00:21:19,110 --> 00:21:26,009
Drupal is to have some sort of static

00:21:22,649 --> 00:21:27,720
site generator or static renderer and in

00:21:26,009 --> 00:21:29,309
this case it's sort of you have drupal

00:21:27,720 --> 00:21:30,720
as your CMS and administrators who are

00:21:29,309 --> 00:21:32,940
using that your content editors who are

00:21:30,720 --> 00:21:34,919
using that as per normal and then

00:21:32,940 --> 00:21:36,749
something else whether that's a

00:21:34,919 --> 00:21:38,190
something that's run once when you're

00:21:36,749 --> 00:21:41,519
ready to publish or something that can

00:21:38,190 --> 00:21:45,480
pull from the drupal a back-end in real

00:21:41,519 --> 00:21:48,749
time generates static HTML pages out of

00:21:45,480 --> 00:21:50,429
the data in Drupal and the benefits here

00:21:48,749 --> 00:21:53,580
really are that you can just separate

00:21:50,429 --> 00:21:56,159
the concerns there's some great case

00:21:53,580 --> 00:21:58,169
studies out there I saw at the devs

00:21:56,159 --> 00:22:01,499
einer conference in portland phase 2 has

00:21:58,169 --> 00:22:03,509
a wonderful case study about using a

00:22:01,499 --> 00:22:07,470
front-end library called pattern lab

00:22:03,509 --> 00:22:10,080
which helps you build with atomic design

00:22:07,470 --> 00:22:12,179
this principle of building up design

00:22:10,080 --> 00:22:13,590
libraries and design languages and

00:22:12,179 --> 00:22:15,299
that's it say there's a big huge

00:22:13,590 --> 00:22:15,750
front-end tool chain for using pattern

00:22:15,299 --> 00:22:16,950
library

00:22:15,750 --> 00:22:18,630
you know you install all these node

00:22:16,950 --> 00:22:20,430
modules everything else on your laptop

00:22:18,630 --> 00:22:21,720
and you're just pattern labbing your way

00:22:20,430 --> 00:22:25,490
different things and what you end up

00:22:21,720 --> 00:22:29,670
with is this really really clean elegant

00:22:25,490 --> 00:22:31,980
minimal beautiful imitation of of your

00:22:29,670 --> 00:22:35,100
design that is much much more robust and

00:22:31,980 --> 00:22:36,330
flexible than most rupal themes from

00:22:35,100 --> 00:22:39,780
especially from our developer standpoint

00:22:36,330 --> 00:22:42,480
and then you sort of take your clean

00:22:39,780 --> 00:22:46,050
elegant minimal implementation design

00:22:42,480 --> 00:22:48,930
and you can generate just that HTML with

00:22:46,050 --> 00:22:51,480
your generator there's other tools out

00:22:48,930 --> 00:22:53,970
there that do this for kitchens has a an

00:22:51,480 --> 00:22:56,940
open source project called saucier that

00:22:53,970 --> 00:23:00,450
uh keeping with their chef theme that's

00:22:56,940 --> 00:23:03,570
a nodejs framework for doing some of the

00:23:00,450 --> 00:23:05,550
static site generation and so what this

00:23:03,570 --> 00:23:07,380
does is it allows front-end developers

00:23:05,550 --> 00:23:10,830
to be unleashed it allows you to have

00:23:07,380 --> 00:23:12,830
that parallel track statically generated

00:23:10,830 --> 00:23:14,520
front sights are by definition

00:23:12,830 --> 00:23:16,680
high-performance I mean they're well

00:23:14,520 --> 00:23:18,930
they they are much there because there's

00:23:16,680 --> 00:23:21,750
no database queries to be made they're

00:23:18,930 --> 00:23:23,520
going to be fast they're read-only right

00:23:21,750 --> 00:23:25,230
it's a static site but it also means

00:23:23,520 --> 00:23:27,150
it's totally secure right there's no way

00:23:25,230 --> 00:23:28,880
there's no real way if all you have

00:23:27,150 --> 00:23:31,770
access to is something that's serving

00:23:28,880 --> 00:23:34,020
HTML documents for you to hack that and

00:23:31,770 --> 00:23:35,670
this is actually the oldest architecture

00:23:34,020 --> 00:23:36,780
in the book when it comes to the web

00:23:35,670 --> 00:23:38,940
there were people that were doing this

00:23:36,780 --> 00:23:40,620
in like nineteen ninety-five because

00:23:38,940 --> 00:23:42,270
they got tired of writing web pages by

00:23:40,620 --> 00:23:44,910
hand which was how everyone was doing it

00:23:42,270 --> 00:23:47,130
and they said I'll have a script that

00:23:44,910 --> 00:23:49,140
takes my you know content from over here

00:23:47,130 --> 00:23:51,900
in a database and makes the web pages

00:23:49,140 --> 00:23:53,970
for me haha I've one and so static site

00:23:51,900 --> 00:23:56,880
generation has been around for a long

00:23:53,970 --> 00:23:59,850
long time and and it's one of the most

00:23:56,880 --> 00:24:02,910
popular and straightforward ways that

00:23:59,850 --> 00:24:06,660
people are two coupling another way is

00:24:02,910 --> 00:24:08,670
to have a hybrid approach to decoupling

00:24:06,660 --> 00:24:11,370
and what this really means is that you

00:24:08,670 --> 00:24:15,600
are building on top of your existing

00:24:11,370 --> 00:24:18,210
website a REST API and that's uh this is

00:24:15,600 --> 00:24:20,060
a way to you can also prototype so you

00:24:18,210 --> 00:24:21,900
have your website it's working great

00:24:20,060 --> 00:24:23,130
maybe there's things you'd like to

00:24:21,900 --> 00:24:25,770
change about it but for the most part

00:24:23,130 --> 00:24:27,960
it's doing its job and what you do is

00:24:25,770 --> 00:24:28,760
you essentially build as an extension to

00:24:27,960 --> 00:24:31,280
that website

00:24:28,760 --> 00:24:33,260
the rest api and then you can start to

00:24:31,280 --> 00:24:36,110
do things with it so you could have a

00:24:33,260 --> 00:24:38,420
portion of your website be a rich

00:24:36,110 --> 00:24:40,880
javascript application that talked to

00:24:38,420 --> 00:24:43,550
this api it's not just like doing the

00:24:40,880 --> 00:24:45,710
normal drupal call and response kind of

00:24:43,550 --> 00:24:48,140
page building four full pages it could

00:24:45,710 --> 00:24:50,300
be talking to this API to generate early

00:24:48,140 --> 00:24:52,190
dynamic dashboard for instance or to

00:24:50,300 --> 00:24:54,230
have a really rich content editing

00:24:52,190 --> 00:24:55,640
experience or to have you know some

00:24:54,230 --> 00:24:58,070
other kind of highly interactive

00:24:55,640 --> 00:25:01,010
capability or it could be that you have

00:24:58,070 --> 00:25:03,800
this API and it's you know it's serving

00:25:01,010 --> 00:25:05,360
to power a section of the website that

00:25:03,800 --> 00:25:06,710
is being built with one of these static

00:25:05,360 --> 00:25:11,090
site generators or something else like

00:25:06,710 --> 00:25:12,380
that and this allows you to to sort of

00:25:11,090 --> 00:25:14,270
get a little bit of the best of both

00:25:12,380 --> 00:25:15,500
worlds to start because you don't have

00:25:14,270 --> 00:25:17,420
to think about redoing your whole

00:25:15,500 --> 00:25:19,880
website you just think about where a

00:25:17,420 --> 00:25:23,170
decoupled functionality or decoupled

00:25:19,880 --> 00:25:27,290
capability would be of use to you and

00:25:23,170 --> 00:25:29,000
and focus on that the the risk here is

00:25:27,290 --> 00:25:33,260
that you know your sort of like building

00:25:29,000 --> 00:25:35,270
a half-breed monolith / AP I thing and

00:25:33,260 --> 00:25:36,680
and if you go very far down this road

00:25:35,270 --> 00:25:38,090
you may find that you need to refactor

00:25:36,680 --> 00:25:39,980
more and more but it's an interesting

00:25:38,090 --> 00:25:42,080
way to get started and certainly there

00:25:39,980 --> 00:25:43,880
are websites that are built with this in

00:25:42,080 --> 00:25:48,110
mind from the start so for instance

00:25:43,880 --> 00:25:50,990
websites where there's a really

00:25:48,110 --> 00:25:53,570
beautiful kind of interactive of normal

00:25:50,990 --> 00:25:55,310
user experience but like all the logins

00:25:53,570 --> 00:25:57,080
stuff and user profile stuff those are

00:25:55,310 --> 00:25:59,240
just served directly by drupal so you're

00:25:57,080 --> 00:26:01,250
you're saying I want to use a decoupled

00:25:59,240 --> 00:26:03,200
architecture for a certain set of

00:26:01,250 --> 00:26:04,850
components but then I want to actually

00:26:03,200 --> 00:26:06,680
rely on Drupal for another set of

00:26:04,850 --> 00:26:07,850
components may be particularly where I'm

00:26:06,680 --> 00:26:10,520
more concerned with security or

00:26:07,850 --> 00:26:13,120
something else that's a certainly a

00:26:10,520 --> 00:26:15,560
valid approach to this architecture

00:26:13,120 --> 00:26:17,000
another architecture that can be used in

00:26:15,560 --> 00:26:19,070
conjunction with the hybrid is this

00:26:17,000 --> 00:26:22,090
notion of the quote unquote single page

00:26:19,070 --> 00:26:25,580
app and this is where a lot of the the

00:26:22,090 --> 00:26:27,230
not just design development on the front

00:26:25,580 --> 00:26:29,450
end but the functional develop on the

00:26:27,230 --> 00:26:32,270
front end gets very exciting so this is

00:26:29,450 --> 00:26:35,300
where you have these frameworks that are

00:26:32,270 --> 00:26:37,430
coming up like angular backbone react

00:26:35,300 --> 00:26:40,760
and ember and more

00:26:37,430 --> 00:26:42,980
for building interactive applications on

00:26:40,760 --> 00:26:45,230
in the front end so you basically are

00:26:42,980 --> 00:26:48,110
delivering software that's written in

00:26:45,230 --> 00:26:50,480
JavaScript to the browser it runs in the

00:26:48,110 --> 00:26:51,860
browser and it does really great stuff

00:26:50,480 --> 00:26:53,450
and you can do things with this this

00:26:51,860 --> 00:26:55,070
type of architecture you know requires

00:26:53,450 --> 00:26:57,470
advanced JavaScript development skills

00:26:55,070 --> 00:26:59,630
but you can do things this way that just

00:26:57,470 --> 00:27:01,580
you can't do any other way you can't

00:26:59,630 --> 00:27:04,340
create a real-time application

00:27:01,580 --> 00:27:06,110
experience if every time an interaction

00:27:04,340 --> 00:27:07,790
occurs you have to do a round trip back

00:27:06,110 --> 00:27:10,130
to the web server this is a way to build

00:27:07,790 --> 00:27:12,470
real time application experiences in the

00:27:10,130 --> 00:27:14,540
browser and typically good real-time

00:27:12,470 --> 00:27:16,220
application experiences there's a back

00:27:14,540 --> 00:27:18,590
end right there's a place where stuff is

00:27:16,220 --> 00:27:20,120
gets saved and loaded from Drupal

00:27:18,590 --> 00:27:23,390
actually makes a wonderful backend for

00:27:20,120 --> 00:27:25,910
these sorts of things and and this was

00:27:23,390 --> 00:27:27,860
actually for at Pantheon one of the the

00:27:25,910 --> 00:27:29,860
first few iterations of our dashboard

00:27:27,860 --> 00:27:34,490
actually worked this way we had a Drupal

00:27:29,860 --> 00:27:36,680
website that was fronting for a core API

00:27:34,490 --> 00:27:39,560
but that Drupal website was mostly just

00:27:36,680 --> 00:27:41,180
pushing data to a javascript application

00:27:39,560 --> 00:27:42,560
that was driving all the user interface

00:27:41,180 --> 00:27:46,310
and interactions that's how you create

00:27:42,560 --> 00:27:47,540
good real time experiences as I

00:27:46,310 --> 00:27:50,330
mentioned before there's the whole

00:27:47,540 --> 00:27:53,180
native mobile app or potentially future

00:27:50,330 --> 00:27:57,980
Internet of Things and this is the idea

00:27:53,180 --> 00:28:00,230
of having your website talk to some

00:27:57,980 --> 00:28:01,820
embedded application right so an

00:28:00,230 --> 00:28:05,390
application that's not running in a web

00:28:01,820 --> 00:28:09,140
browser it's a android app it's an iOS

00:28:05,390 --> 00:28:10,850
app it's a smart device in a home it

00:28:09,140 --> 00:28:12,290
could be sending data to that

00:28:10,850 --> 00:28:15,920
application it could be receiving data

00:28:12,290 --> 00:28:17,210
from that application and and that's a

00:28:15,920 --> 00:28:18,440
great way to interact with all those

00:28:17,210 --> 00:28:19,760
things because you know they're not

00:28:18,440 --> 00:28:21,710
gonna like you know you're not going to

00:28:19,760 --> 00:28:23,600
mock a user and fake web page

00:28:21,710 --> 00:28:24,710
submissions and stuff like that to do

00:28:23,600 --> 00:28:26,810
those interactions you're going to need

00:28:24,710 --> 00:28:28,550
an API especially if you want to have

00:28:26,810 --> 00:28:30,440
multiple different things that are going

00:28:28,550 --> 00:28:32,060
on one of the things I'll point out to

00:28:30,440 --> 00:28:33,740
is that like you can you can there

00:28:32,060 --> 00:28:35,900
there's these architectures that i'm

00:28:33,740 --> 00:28:38,090
showing you are just examples of the

00:28:35,900 --> 00:28:41,570
major themes that emerge so for instance

00:28:38,090 --> 00:28:44,270
there are cases for kitchens did a case

00:28:41,570 --> 00:28:48,560
study on that i saw where they built a

00:28:44,270 --> 00:28:51,320
static site for twit TV it's this week

00:28:48,560 --> 00:28:53,210
in tech it's very popular podcast so the

00:28:51,320 --> 00:28:56,210
they built it they built a decoupled

00:28:53,210 --> 00:28:59,600
they used their saucier library and they

00:28:56,210 --> 00:29:01,640
built a static site for the for desktop

00:28:59,600 --> 00:29:03,890
and mobile web and tablet and so forth

00:29:01,640 --> 00:29:06,200
but they also with the client are

00:29:03,890 --> 00:29:09,410
working on documented and exposing the

00:29:06,200 --> 00:29:10,930
API so that the community around the

00:29:09,410 --> 00:29:13,220
site can try to build their own

00:29:10,930 --> 00:29:14,780
applications on top of it which is

00:29:13,220 --> 00:29:16,730
really interesting it's the idea of well

00:29:14,780 --> 00:29:19,100
now that we have this API that we are

00:29:16,730 --> 00:29:21,380
using to drive our website what if we

00:29:19,100 --> 00:29:23,960
could safely expose this API or some

00:29:21,380 --> 00:29:26,540
portion of it to our users and see what

00:29:23,960 --> 00:29:28,190
they want to do with this innovation and

00:29:26,540 --> 00:29:30,320
that's kind of gets to this like more

00:29:28,190 --> 00:29:32,060
connected and integrated world where

00:29:30,320 --> 00:29:33,710
it's not just about delivering web pages

00:29:32,060 --> 00:29:36,620
it's about building you know kind of

00:29:33,710 --> 00:29:39,530
integrated systems and certainly the the

00:29:36,620 --> 00:29:41,000
native mobile app universe is one of

00:29:39,530 --> 00:29:44,300
those particularly because a lot of

00:29:41,000 --> 00:29:46,780
times um when you see people building a

00:29:44,300 --> 00:29:50,600
website that drives a native mobile app

00:29:46,780 --> 00:29:52,760
there's also a website for that app and

00:29:50,600 --> 00:29:54,760
that website is one that people can just

00:29:52,760 --> 00:29:57,860
come and log into and you might utilize

00:29:54,760 --> 00:30:01,040
Drupal's capabilities directly to handle

00:29:57,860 --> 00:30:02,450
like user account management and for the

00:30:01,040 --> 00:30:05,810
people who are administering the server

00:30:02,450 --> 00:30:07,520
its service to go in and say oh like let

00:30:05,810 --> 00:30:09,290
me make some new content in Drupal and

00:30:07,520 --> 00:30:11,240
that gets pushed down to all the mobile

00:30:09,290 --> 00:30:13,220
apps as the latest update those sorts of

00:30:11,240 --> 00:30:16,370
interactions and tools work quite well

00:30:13,220 --> 00:30:19,070
where you have actually multiple ways of

00:30:16,370 --> 00:30:20,180
interacting with the core CMS system

00:30:19,070 --> 00:30:22,360
whether that's directly for the website

00:30:20,180 --> 00:30:26,540
or through a native mobile app and

00:30:22,360 --> 00:30:31,220
finally the last a implementation that

00:30:26,540 --> 00:30:33,100
I'll talk to is the CMS on CMS or to

00:30:31,220 --> 00:30:35,780
stick with our headless horseman a

00:30:33,100 --> 00:30:38,150
language what i like to call zombie

00:30:35,780 --> 00:30:40,190
drupal and so this is where you've

00:30:38,150 --> 00:30:42,440
decoupled drupal and the new thing on

00:30:40,190 --> 00:30:45,530
top of Drupal is more Drupal and that

00:30:42,440 --> 00:30:47,690
sounds this sounds a little crazy and

00:30:45,530 --> 00:30:49,430
maybe like your overheads but and maybe

00:30:47,690 --> 00:30:50,900
we're going a little bit too into Drupal

00:30:49,430 --> 00:30:53,540
land with this but it's actually a

00:30:50,900 --> 00:30:55,190
highly valid architecture and the reason

00:30:53,540 --> 00:30:59,870
is that you can create a separation of

00:30:55,190 --> 00:31:01,790
concerns between your your your layers

00:30:59,870 --> 00:31:03,620
but you don't necessarily need to

00:31:01,790 --> 00:31:04,519
implement separate technologies so it

00:31:03,620 --> 00:31:06,409
may be the case

00:31:04,519 --> 00:31:08,869
you actually have a lot of drupal

00:31:06,409 --> 00:31:10,609
developers and not a lot of front-end

00:31:08,869 --> 00:31:13,039
developers who are not familiar with

00:31:10,609 --> 00:31:14,899
Drupal and in fact you can parallel

00:31:13,039 --> 00:31:16,879
track multiple teams of Drupal

00:31:14,899 --> 00:31:19,369
developers by again creating the same

00:31:16,879 --> 00:31:21,919
API contract and it basically maybe even

00:31:19,369 --> 00:31:23,629
created usable reusable code that's a

00:31:21,919 --> 00:31:24,979
standard way that your instances will

00:31:23,629 --> 00:31:27,169
send and receive data from one another

00:31:24,979 --> 00:31:30,109
but because you're able to build with a

00:31:27,169 --> 00:31:31,879
separation of concerns the tech team can

00:31:30,109 --> 00:31:34,009
can implement across both paths

00:31:31,879 --> 00:31:36,320
simultaneously and one of the nice

00:31:34,009 --> 00:31:39,249
things about having a CMS as the front

00:31:36,320 --> 00:31:42,049
as the front end is that the CMS has

00:31:39,249 --> 00:31:45,999
capabilities right the CMS is is by

00:31:42,049 --> 00:31:45,999
nature configurable so you have

00:31:46,029 --> 00:31:51,619
instances where we have actually a very

00:31:49,159 --> 00:31:54,289
very high traffic site on pantheon it's

00:31:51,619 --> 00:31:55,519
like a top 200 site on the internet and

00:31:54,289 --> 00:31:57,679
it's built with this type of

00:31:55,519 --> 00:32:00,079
configuration so it does millions of

00:31:57,679 --> 00:32:03,739
pageviews day and they have a back-end a

00:32:00,079 --> 00:32:05,089
CMS that has like their huge repository

00:32:03,739 --> 00:32:07,629
of content it's just like a ginormous

00:32:05,089 --> 00:32:09,709
reported content could it's like it's

00:32:07,629 --> 00:32:11,749
just like millions and millions and

00:32:09,709 --> 00:32:13,820
millions of articles and nodes and

00:32:11,749 --> 00:32:15,469
because they have so much content

00:32:13,820 --> 00:32:16,909
therefore be really careful of what they

00:32:15,469 --> 00:32:18,559
do it they can't just create random

00:32:16,909 --> 00:32:20,029
views and hope it all works out for the

00:32:18,559 --> 00:32:22,519
best because once you're scanning over

00:32:20,029 --> 00:32:24,469
like 10 plus million pieces of content

00:32:22,519 --> 00:32:25,639
you can create queries of death that

00:32:24,469 --> 00:32:28,219
will bring your site down so easily

00:32:25,639 --> 00:32:30,320
that's a common fear for people with

00:32:28,219 --> 00:32:33,619
large-scale websites so what they do is

00:32:30,320 --> 00:32:35,659
they build a highly efficient Drupal

00:32:33,619 --> 00:32:39,079
application that is just about exposing

00:32:35,659 --> 00:32:41,029
that content over a REST API and then

00:32:39,079 --> 00:32:43,279
they build another Drupal application

00:32:41,029 --> 00:32:45,709
that is a consumer of that API and it

00:32:43,279 --> 00:32:48,229
handles the display and it handles some

00:32:45,709 --> 00:32:49,700
caching and it allows them to like try

00:32:48,229 --> 00:32:51,409
out different things like they can

00:32:49,700 --> 00:32:53,329
adjust on the front end site oh let me

00:32:51,409 --> 00:32:54,799
just do a different layout or he'll let

00:32:53,329 --> 00:32:56,839
me like reconfigure this so I'm showing

00:32:54,799 --> 00:32:59,809
10 pieces of content instead of 20 or

00:32:56,839 --> 00:33:03,289
let's go try setting up a new section we

00:32:59,809 --> 00:33:06,259
do it here and our ability are we are

00:33:03,289 --> 00:33:08,149
essentially you know foolproof right we

00:33:06,259 --> 00:33:10,309
can never only hurt the back end because

00:33:08,149 --> 00:33:12,589
the back end only speaks over an API

00:33:10,309 --> 00:33:15,469
which the backend knows it can serve in

00:33:12,589 --> 00:33:18,080
a scalable sustainable performance and

00:33:15,469 --> 00:33:21,159
secure manner and this is

00:33:18,080 --> 00:33:23,690
the beginning of moving towards a truly

00:33:21,159 --> 00:33:25,730
distributed microservices kind of

00:33:23,690 --> 00:33:27,649
architecture where you don't just have a

00:33:25,730 --> 00:33:29,840
friend in a back-end you might have

00:33:27,649 --> 00:33:31,880
again multiple front ends so you could

00:33:29,840 --> 00:33:35,059
have your back end CMS your front end

00:33:31,880 --> 00:33:37,730
CMS your mobile app you could have

00:33:35,059 --> 00:33:39,860
another another back-end service that

00:33:37,730 --> 00:33:41,690
handles a specialized type of data maybe

00:33:39,860 --> 00:33:43,580
one that doesn't work so well with your

00:33:41,690 --> 00:33:46,100
primary type of data you could have

00:33:43,580 --> 00:33:48,860
another instance that just handles

00:33:46,100 --> 00:33:50,510
things like authenticated traffic you

00:33:48,860 --> 00:33:51,649
can integrate third-party services so a

00:33:50,510 --> 00:33:54,169
lot of people integrate third-party

00:33:51,649 --> 00:33:57,289
services for comments now as you start

00:33:54,169 --> 00:33:59,600
to build this type of decoupled services

00:33:57,289 --> 00:34:01,940
oriented architecture rather than a it's

00:33:59,600 --> 00:34:04,190
all in one website architecture more

00:34:01,940 --> 00:34:06,529
possibilities on the internet open up to

00:34:04,190 --> 00:34:08,659
you now certainly it's quite complex and

00:34:06,529 --> 00:34:10,429
it takes a lot of work to do but there's

00:34:08,659 --> 00:34:12,109
a lot of wind to be had in there and

00:34:10,429 --> 00:34:14,899
that's the reason why everyone is so

00:34:12,109 --> 00:34:17,389
super excited about it right now and I

00:34:14,899 --> 00:34:21,230
believe that at this point I'm ready oh

00:34:17,389 --> 00:34:22,669
that's not quite ready ah the one of the

00:34:21,230 --> 00:34:25,129
things to reiterate before we conclude

00:34:22,669 --> 00:34:28,490
is that this is nothing all that new

00:34:25,129 --> 00:34:29,960
here as I mentioned with static site

00:34:28,490 --> 00:34:32,030
generation that's an architecture that's

00:34:29,960 --> 00:34:34,730
been around since the beginning of the

00:34:32,030 --> 00:34:36,859
web a lot of the service-oriented

00:34:34,730 --> 00:34:38,540
architecture stuff has been around it's

00:34:36,859 --> 00:34:41,210
just been something that only larger

00:34:38,540 --> 00:34:43,040
very large companies would do so

00:34:41,210 --> 00:34:46,190
service-oriented architecture is is not

00:34:43,040 --> 00:34:48,800
really new it's just knew that people

00:34:46,190 --> 00:34:50,540
more of the internet public is thinking

00:34:48,800 --> 00:34:53,510
in these ways and is it being empowered

00:34:50,540 --> 00:34:55,220
to build in these ways and certainly you

00:34:53,510 --> 00:34:57,619
know a lot of what we're looking at with

00:34:55,220 --> 00:35:00,200
the native native mobile apps that's

00:34:57,619 --> 00:35:02,359
relatively new but the idea of you know

00:35:00,200 --> 00:35:04,339
building an interface to a site that was

00:35:02,359 --> 00:35:06,680
consumed by something very different you

00:35:04,339 --> 00:35:09,470
know I'm glad that flash is really going

00:35:06,680 --> 00:35:11,750
by the wayside but there are plenty of

00:35:09,470 --> 00:35:14,359
people from the heyday of flash you know

00:35:11,750 --> 00:35:16,460
like the mid-aughts who built websites

00:35:14,359 --> 00:35:19,160
where there was a flash front end and

00:35:16,460 --> 00:35:21,619
some kind of CMS back end possibly even

00:35:19,160 --> 00:35:25,010
an early versions of Drupal Drupal 4.5

00:35:21,619 --> 00:35:26,480
maybe and so these are all architectures

00:35:25,010 --> 00:35:28,940
that have been with us for a long time

00:35:26,480 --> 00:35:31,070
what's changing now is that they're

00:35:28,940 --> 00:35:33,170
becoming more and more Stan

00:35:31,070 --> 00:35:35,060
or dies we're getting more and more best

00:35:33,170 --> 00:35:37,820
practices and they're me the tools to

00:35:35,060 --> 00:35:40,000
build them are really rapidly evolving

00:35:37,820 --> 00:35:43,280
and becoming more and more accessible so

00:35:40,000 --> 00:35:45,380
while this is exciting stuff it's not

00:35:43,280 --> 00:35:48,680
really new it's more that it's moving

00:35:45,380 --> 00:35:50,900
from the like vanguard state to the

00:35:48,680 --> 00:35:52,340
broad early adopter state and that's

00:35:50,900 --> 00:35:54,260
exciting because that's really been

00:35:52,340 --> 00:35:55,700
always look to me a core of what the

00:35:54,260 --> 00:35:58,190
Drupal community is we are early

00:35:55,700 --> 00:35:59,630
adopters of new technologies on the web

00:35:58,190 --> 00:36:00,950
that's one of the things that makes the

00:35:59,630 --> 00:36:02,600
project awesome that's one of the things

00:36:00,950 --> 00:36:06,130
that keeps us relevant that's one of the

00:36:02,600 --> 00:36:09,020
things that keeps it fun for us to do so

00:36:06,130 --> 00:36:10,610
really excited to help you know spread

00:36:09,020 --> 00:36:11,930
the word about this stuff and hopefully

00:36:10,610 --> 00:36:14,420
get more people interested in engaging

00:36:11,930 --> 00:36:15,920
and helping us further develop best

00:36:14,420 --> 00:36:18,130
practices further developed tools

00:36:15,920 --> 00:36:21,140
further create more case studies and

00:36:18,130 --> 00:36:24,080
awareness around the the joys of

00:36:21,140 --> 00:36:27,800
decoupled CMS and at that point now I'm

00:36:24,080 --> 00:36:30,580
ready to take some questions Josh that

00:36:27,800 --> 00:36:30,580

YouTube URL: https://www.youtube.com/watch?v=DGc65o8JRvI


