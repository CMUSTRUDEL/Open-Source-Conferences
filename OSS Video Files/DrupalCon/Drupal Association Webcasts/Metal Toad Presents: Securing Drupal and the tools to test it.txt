Title: Metal Toad Presents: Securing Drupal and the tools to test it
Publication date: 2014-08-06
Playlist: Drupal Association Webcasts
Description: 
	Metal Toad Presents: Securing Drupal and the tools to test it
Captions: 
	00:00:01,460 --> 00:00:07,820
hi everyone thanks for joining us today

00:00:04,580 --> 00:00:11,250
we're talking today with metal toad

00:00:07,820 --> 00:00:14,849
Nathan Wilkerson about securing Drupal

00:00:11,250 --> 00:00:18,439
and the tools to test it just a little

00:00:14,849 --> 00:00:20,910
bit about the drupal association and the

00:00:18,439 --> 00:00:23,640
gerbil associations mission is to foster

00:00:20,910 --> 00:00:25,920
and support the Drupal community so we

00:00:23,640 --> 00:00:28,019
can collaborate together as we innovate

00:00:25,920 --> 00:00:30,359
the project there are so many ways to

00:00:28,019 --> 00:00:32,550
help the community we host drupal.org

00:00:30,359 --> 00:00:35,130
and are building a tech team to improve

00:00:32,550 --> 00:00:36,809
the site we provide grants for community

00:00:35,130 --> 00:00:39,800
members to fund ways to grow their

00:00:36,809 --> 00:00:42,450
community in the future of the project

00:00:39,800 --> 00:00:46,050
some of these grants are used for camps

00:00:42,450 --> 00:00:47,460
some of them are using a multi using the

00:00:46,050 --> 00:00:50,910
grant for a multi-city Roadshow

00:00:47,460 --> 00:00:52,860
evangelizing gerbil we also hosts your

00:00:50,910 --> 00:00:55,260
pecan we just had one in Austin which

00:00:52,860 --> 00:00:57,690
brings thousands together to work on the

00:00:55,260 --> 00:00:59,789
project and bond as a community we also

00:00:57,690 --> 00:01:01,260
provide scholarships to help community

00:00:59,789 --> 00:01:04,019
members from around the globe attend the

00:01:01,260 --> 00:01:05,670
event and all of this is thrown funded

00:01:04,019 --> 00:01:09,290
through our membership are jus pecans

00:01:05,670 --> 00:01:13,650
and our partners just like metal toad

00:01:09,290 --> 00:01:16,530
next slide please just some upcoming

00:01:13,650 --> 00:01:19,439
events we have our next drupalcon in

00:01:16,530 --> 00:01:22,409
Europe coming up at the end of September

00:01:19,439 --> 00:01:24,180
beginning of October we also have global

00:01:22,409 --> 00:01:27,210
training days which is a really

00:01:24,180 --> 00:01:28,829
fantastic program for training companies

00:01:27,210 --> 00:01:32,540
or community members that are interested

00:01:28,829 --> 00:01:37,290
in providing training to brand new

00:01:32,540 --> 00:01:39,150
Drupal Drupal students so an

00:01:37,290 --> 00:01:42,180
introduction to Drupal just growing the

00:01:39,150 --> 00:01:45,899
community globally and locally and

00:01:42,180 --> 00:01:48,360
providing low-cost or free Drupal

00:01:45,899 --> 00:01:49,829
training to our community members you

00:01:48,360 --> 00:01:53,250
can find more information on the link

00:01:49,829 --> 00:01:55,740
below and then our next webinar is July

00:01:53,250 --> 00:01:58,110
fifteenth magic logic presents different

00:01:55,740 --> 00:02:00,659
approaches to developing Drupal websites

00:01:58,110 --> 00:02:05,399
you can also see at the bottom for our

00:02:00,659 --> 00:02:08,190
webinars link that we are always putting

00:02:05,399 --> 00:02:09,810
on new webinars as well as recording all

00:02:08,190 --> 00:02:11,310
of our old webinars so it's a great

00:02:09,810 --> 00:02:12,660
resource for you or any of your

00:02:11,310 --> 00:02:13,230
colleagues that are interested in

00:02:12,660 --> 00:02:15,510
learning more

00:02:13,230 --> 00:02:21,599
about Drupal from our supporting

00:02:15,510 --> 00:02:23,849
partners next slide great thank you and

00:02:21,599 --> 00:02:26,010
of course we have to mention our

00:02:23,849 --> 00:02:30,000
supporting partner program metal tote is

00:02:26,010 --> 00:02:33,150
a supporting partner and they they help

00:02:30,000 --> 00:02:35,129
us do things for the community and help

00:02:33,150 --> 00:02:37,349
foster the project as well so big thank

00:02:35,129 --> 00:02:40,319
you to our supporting partners

00:02:37,349 --> 00:02:43,670
especially metal toad and for doing our

00:02:40,319 --> 00:02:48,780
presentation today on Drupal security

00:02:43,670 --> 00:02:51,900
next slide great without further ado

00:02:48,780 --> 00:02:54,329
this is Nathan for metal toad he will be

00:02:51,900 --> 00:02:55,980
taking over the reins like I said if you

00:02:54,329 --> 00:02:59,760
have any questions for Nathan please use

00:02:55,980 --> 00:03:05,340
the Q&A window and I will interject as I

00:02:59,760 --> 00:03:06,900
can Nathan it's all you now thank you

00:03:05,340 --> 00:03:09,900
very much good morning to everyone who's

00:03:06,900 --> 00:03:12,319
joining us today I'm Nathan Wilkerson a

00:03:09,900 --> 00:03:17,549
little bit of background before we go on

00:03:12,319 --> 00:03:20,099
to today's presentation prior to my

00:03:17,549 --> 00:03:23,340
tenure here at metal toad I was a

00:03:20,099 --> 00:03:24,859
network administrator where my tasks

00:03:23,340 --> 00:03:26,910
included numerous things including

00:03:24,859 --> 00:03:30,810
hardware security network security

00:03:26,910 --> 00:03:34,650
server security pc and wireless network

00:03:30,810 --> 00:03:37,349
security um i started here and not long

00:03:34,650 --> 00:03:39,919
after we moved into from web hosting to

00:03:37,349 --> 00:03:42,780
designing custom cloud environments and

00:03:39,919 --> 00:03:47,040
we brought up doing a security test

00:03:42,780 --> 00:03:49,919
package here and that led me into

00:03:47,040 --> 00:03:51,660
application security and i just don't do

00:03:49,919 --> 00:03:59,790
it and it's been a passion of mine ever

00:03:51,660 --> 00:04:02,340
since the basic security stack has three

00:03:59,790 --> 00:04:04,290
different groups your physical security

00:04:02,340 --> 00:04:06,810
is protecting your IT infrastructure

00:04:04,290 --> 00:04:08,489
locations this is relatively simple to

00:04:06,810 --> 00:04:10,949
do it's as easy as putting a lock on the

00:04:08,489 --> 00:04:15,269
door either with a key or biometric or

00:04:10,949 --> 00:04:18,870
key card network security includes

00:04:15,269 --> 00:04:20,639
everything coming over the network most

00:04:18,870 --> 00:04:23,820
common practices involved firewalls

00:04:20,639 --> 00:04:27,169
access control lists encryption for

00:04:23,820 --> 00:04:29,400
wireless networks and that type of stuff

00:04:27,169 --> 00:04:30,690
those security threats are pretty

00:04:29,400 --> 00:04:32,310
straightforward and easy to do because

00:04:30,690 --> 00:04:36,320
they involve keeping people out of

00:04:32,310 --> 00:04:38,370
restricted parts of your infrastructure

00:04:36,320 --> 00:04:39,900
application security I find is always a

00:04:38,370 --> 00:04:41,520
little trickier because you can't just

00:04:39,900 --> 00:04:43,260
keep people out of the application they

00:04:41,520 --> 00:04:45,540
actually have to be able to use it and

00:04:43,260 --> 00:04:47,430
this makes finding the specific threats

00:04:45,540 --> 00:04:53,550
and vulnerabilities in your application

00:04:47,430 --> 00:04:55,380
much more important Drupal has a great

00:04:53,550 --> 00:04:57,419
security team and they work to

00:04:55,380 --> 00:05:00,300
coordinate security issues and

00:04:57,419 --> 00:05:02,460
advisories they produce documents on how

00:05:00,300 --> 00:05:04,500
to write secure code and documentation

00:05:02,460 --> 00:05:08,340
but as you can see on this quote from

00:05:04,500 --> 00:05:09,900
their website they generally don't check

00:05:08,340 --> 00:05:12,210
for security vulnerabilities in code

00:05:09,900 --> 00:05:16,800
that is contributed they just coordinate

00:05:12,210 --> 00:05:26,490
the reports of bugs with the module

00:05:16,800 --> 00:05:27,780
developers to fix them here's a list of

00:05:26,490 --> 00:05:30,840
some of the common security threats

00:05:27,780 --> 00:05:34,280
found in Drupal it's kind of hard to

00:05:30,840 --> 00:05:36,000
find a list of them because they're not

00:05:34,280 --> 00:05:38,700
well-publicized she's about to list

00:05:36,000 --> 00:05:40,740
you'll find online the main ones are

00:05:38,700 --> 00:05:43,460
cross-site scripting attacks SQL

00:05:40,740 --> 00:05:45,270
injection and cross-site request forgery

00:05:43,460 --> 00:05:46,500
we're not going to go into it too much

00:05:45,270 --> 00:05:47,849
about them right now I just want you to

00:05:46,500 --> 00:05:51,139
see them and know what they are and

00:05:47,849 --> 00:05:51,139
we'll compare them to another list later

00:05:53,060 --> 00:05:58,770
the other security organization I wanted

00:05:55,740 --> 00:06:01,910
to make sure to introduce is the open

00:05:58,770 --> 00:06:04,470
web application security project or wasp

00:06:01,910 --> 00:06:05,970
it's an organization that is devoted to

00:06:04,470 --> 00:06:08,490
promoting best practice in web

00:06:05,970 --> 00:06:10,440
applications to reach their goal they

00:06:08,490 --> 00:06:14,280
are promoting several tools training

00:06:10,440 --> 00:06:19,289
best practices that go along with their

00:06:14,280 --> 00:06:23,970
security one of the great things they do

00:06:19,289 --> 00:06:30,180
is they publish a top ten threats facing

00:06:23,970 --> 00:06:34,940
the internet every year the list shown

00:06:30,180 --> 00:06:34,940
now is the 2013 top 10 threats

00:06:36,909 --> 00:06:41,749
when we compare them to threats facing

00:06:39,319 --> 00:06:46,579
Drupal we see overlapping results in red

00:06:41,749 --> 00:06:47,839
as you can see these are threats and

00:06:46,579 --> 00:06:49,939
don't face Jubal they face a lot of

00:06:47,839 --> 00:06:51,769
different web applications and so it's

00:06:49,939 --> 00:07:00,709
very good to be able to know how to

00:06:51,769 --> 00:07:04,069
detect them and how to fix them luckily

00:07:00,709 --> 00:07:05,329
joopa provides some great functions that

00:07:04,069 --> 00:07:07,039
if we use them correctly with best

00:07:05,329 --> 00:07:09,829
practice can prevent most of these

00:07:07,039 --> 00:07:12,199
threats these functions will take a

00:07:09,829 --> 00:07:16,029
user's input sanitize check it before

00:07:12,199 --> 00:07:16,029
passing it on to the server to be used

00:07:16,569 --> 00:07:22,729
so we all know now Jubal can fix these

00:07:19,610 --> 00:07:23,809
problems if we follow the best practice

00:07:22,729 --> 00:07:25,189
we just need to be able to find the

00:07:23,809 --> 00:07:32,779
vulnerabilities so that we can get them

00:07:25,189 --> 00:07:34,129
fixed patched and out to the user so

00:07:32,779 --> 00:07:36,199
there are three tools that I found very

00:07:34,129 --> 00:07:39,169
helpful while starting to do some

00:07:36,199 --> 00:07:43,399
research into security the first one

00:07:39,169 --> 00:07:46,189
here is Kali Linux distribution it's a

00:07:43,399 --> 00:07:50,239
distribution that comes with dozens of

00:07:46,189 --> 00:07:51,919
security testing tools including the

00:07:50,239 --> 00:07:55,369
other two I have listed here a wasp zap

00:07:51,919 --> 00:07:58,579
and metasploit it can come on a boot

00:07:55,369 --> 00:08:00,739
disk or if you install along the USB it

00:07:58,579 --> 00:08:02,809
also has an ec2 am I so you can spin up

00:08:00,739 --> 00:08:07,279
test servers quickly if you wanted to

00:08:02,809 --> 00:08:09,289
test out a bunch of tools metasploit is

00:08:07,279 --> 00:08:11,749
a tool that allows you to test servers

00:08:09,289 --> 00:08:13,669
for vulnerabilities known

00:08:11,749 --> 00:08:15,349
vulnerabilities are submitted and can be

00:08:13,669 --> 00:08:18,499
run against a server to see if there are

00:08:15,349 --> 00:08:19,699
the server has the vulnerabilities the

00:08:18,499 --> 00:08:22,939
application works best for testing

00:08:19,699 --> 00:08:25,069
server OS patches and applications like

00:08:22,939 --> 00:08:29,419
apache and mysql patches to make sure

00:08:25,069 --> 00:08:34,939
they're present the final tool is a wasp

00:08:29,419 --> 00:08:37,669
zap it's a zet attack proxy that can be

00:08:34,939 --> 00:08:41,029
used to launch attacks manually check

00:08:37,669 --> 00:08:44,839
sites debug applications and use for

00:08:41,029 --> 00:08:46,819
continuous integration testing it also

00:08:44,839 --> 00:08:49,070
has other great features that can be

00:08:46,819 --> 00:08:51,620
used in this like

00:08:49,070 --> 00:08:54,710
scripting automated reports stuff like

00:08:51,620 --> 00:08:57,530
that there are a lot of great videos out

00:08:54,710 --> 00:08:59,720
there on zap just search for YouTube or

00:08:57,530 --> 00:09:02,270
their website but I want to show you

00:08:59,720 --> 00:09:05,240
some of the basic features you can use

00:09:02,270 --> 00:09:08,950
now to start testing then you can go out

00:09:05,240 --> 00:09:08,950
and find more information if you need it

00:09:13,360 --> 00:09:19,550
one thing that I found hard to find was

00:09:16,220 --> 00:09:21,950
the settings by default the scanner sets

00:09:19,550 --> 00:09:25,310
only find 5 request to a server at a

00:09:21,950 --> 00:09:30,500
time this is very slow from 0 setups and

00:09:25,310 --> 00:09:31,880
can lead to extend a testing times you

00:09:30,500 --> 00:09:33,560
would simply click the gear as you see

00:09:31,880 --> 00:09:37,420
on the toolbar right there it's the same

00:09:33,560 --> 00:09:37,420
that's now on most Google applications

00:09:39,130 --> 00:09:43,100
then under the active scan you can

00:09:41,210 --> 00:09:48,050
increase the bar to whatever fits your

00:09:43,100 --> 00:09:49,940
environment it's not very heavy I ran 20

00:09:48,050 --> 00:09:51,620
connections against the local server

00:09:49,940 --> 00:09:54,290
with no problems I've timed out requests

00:09:51,620 --> 00:09:57,500
or anything take some time to look at

00:09:54,290 --> 00:10:00,200
the other settings on the left spider

00:09:57,500 --> 00:10:01,940
and fuzzer have similar settings and I

00:10:00,200 --> 00:10:03,230
believe there might have been others as

00:10:01,940 --> 00:10:14,090
well but those are the three main ones

00:10:03,230 --> 00:10:15,980
you'll want to check the most basic

00:10:14,090 --> 00:10:19,250
attack you'll need to do with this is an

00:10:15,980 --> 00:10:23,150
active scan it's quick to start but can

00:10:19,250 --> 00:10:24,460
take quite a while to finish when you

00:10:23,150 --> 00:10:27,050
open the program you'll see this

00:10:24,460 --> 00:10:30,110
welcomed as that attacked proxy screen

00:10:27,050 --> 00:10:33,700
all you need to do is enter the URL you

00:10:30,110 --> 00:10:33,700
would like to attack and press attack

00:10:35,530 --> 00:10:38,780
you can see some of the results on the

00:10:37,760 --> 00:10:40,610
bottom of the screen starting to

00:10:38,780 --> 00:10:44,780
populate because it crawls your site

00:10:40,610 --> 00:10:47,900
finding all possible URLs before it runs

00:10:44,780 --> 00:10:49,730
the attack the other good thing to note

00:10:47,900 --> 00:10:52,460
about the automated attack is it only

00:10:49,730 --> 00:10:55,070
stays in the domain you've specified by

00:10:52,460 --> 00:10:58,550
default so if you have links to

00:10:55,070 --> 00:10:59,870
advertisements or your site redirects

00:10:58,550 --> 00:11:02,150
and it might redirect a production

00:10:59,870 --> 00:11:02,899
environment it will recognize the domain

00:11:02,150 --> 00:11:06,339
change it

00:11:02,899 --> 00:11:15,619
we'll just flag it as an out of scope

00:11:06,339 --> 00:11:18,079
URL and not check it once the spider is

00:11:15,619 --> 00:11:22,339
done you can go to the active scan tab

00:11:18,079 --> 00:11:24,019
and see the requested is using the

00:11:22,339 --> 00:11:27,139
tables great it gives you the URLs it's

00:11:24,019 --> 00:11:28,639
checking speed size and it there'll be a

00:11:27,139 --> 00:11:33,470
flag on the right hand side if there's

00:11:28,639 --> 00:11:35,600
any problems not only that but you can

00:11:33,470 --> 00:11:38,149
click on a request that's been flagged

00:11:35,600 --> 00:11:41,149
here see the HTTP request that was

00:11:38,149 --> 00:11:42,829
actually since and the response then you

00:11:41,149 --> 00:11:49,309
can manually inspect it and see what

00:11:42,829 --> 00:11:51,079
exactly happened as I first mentioned

00:11:49,309 --> 00:11:54,079
the performing a full attack can take

00:11:51,079 --> 00:11:56,329
several hours or days depending on the

00:11:54,079 --> 00:11:58,850
size of the environment in one instance

00:11:56,329 --> 00:12:00,170
I ran it on a local dev for over 16

00:11:58,850 --> 00:12:04,610
hours and it was still on the first

00:12:00,170 --> 00:12:07,040
phase of the attack if you want to run a

00:12:04,610 --> 00:12:09,439
site a test on a slider specific feature

00:12:07,040 --> 00:12:11,809
you can simply right-click on any one of

00:12:09,439 --> 00:12:13,429
the scan sites under the spider and to

00:12:11,809 --> 00:12:15,110
attack just on that one it greatly

00:12:13,429 --> 00:12:21,829
increases it will allow you to target

00:12:15,110 --> 00:12:23,360
specific aspects of your site active

00:12:21,829 --> 00:12:25,059
attacks are great but they don't let you

00:12:23,360 --> 00:12:28,429
target the specific stuff you want to

00:12:25,059 --> 00:12:31,249
the target for this deleting is a

00:12:28,429 --> 00:12:34,449
passive scan it's very simple to set up

00:12:31,249 --> 00:12:38,899
all you need to do is set up your

00:12:34,449 --> 00:12:41,629
browser as a proxy so for a Mac you just

00:12:38,899 --> 00:12:46,670
go to your settings set up your proxy to

00:12:41,629 --> 00:12:48,920
localhost on port 8080 as soon as you do

00:12:46,670 --> 00:12:52,639
that you'll start seeing other sites up

00:12:48,920 --> 00:12:56,029
here in a wasp because it picks up all

00:12:52,639 --> 00:12:59,299
web traffic it's best to turn off all

00:12:56,029 --> 00:13:02,089
unneeded tabs and web browsers well this

00:12:59,299 --> 00:13:03,410
is going on otherwise your reports will

00:13:02,089 --> 00:13:05,980
get very cluttered and it'll be harder

00:13:03,410 --> 00:13:05,980
to find stuff

00:13:11,690 --> 00:13:14,810
one of the best aspects of the passive

00:13:13,580 --> 00:13:19,280
attack is it allows you to set

00:13:14,810 --> 00:13:22,730
breakpoints in the proxy if you simply

00:13:19,280 --> 00:13:26,840
press the red X you can enter a string

00:13:22,730 --> 00:13:30,380
based on URL headers or other criteria

00:13:26,840 --> 00:13:34,160
and whenever the OWASP zap sees that

00:13:30,380 --> 00:13:39,170
it'll freeze the response or the request

00:13:34,160 --> 00:13:41,450
before it get sent to the server you can

00:13:39,170 --> 00:13:43,940
then click on it look at all the content

00:13:41,450 --> 00:13:47,120
being sent to the server evaluated or

00:13:43,940 --> 00:13:50,030
change it then you can press the next

00:13:47,120 --> 00:13:59,720
button or play button to step through or

00:13:50,030 --> 00:14:01,280
submit the request automatically the

00:13:59,720 --> 00:14:03,710
other really nice thing this allows you

00:14:01,280 --> 00:14:05,660
to do is to fuzz a certain field to test

00:14:03,710 --> 00:14:09,140
for cross-site scripting attacks in SQL

00:14:05,660 --> 00:14:10,790
injection the active attack does this

00:14:09,140 --> 00:14:12,950
automatically as a detective field as

00:14:10,790 --> 00:14:14,780
part of its attack but like I said that

00:14:12,950 --> 00:14:16,910
takes a while and fuzzing specific

00:14:14,780 --> 00:14:20,210
fields that are new to a forum is often

00:14:16,910 --> 00:14:21,590
better to test that function instead of

00:14:20,210 --> 00:14:23,860
spending days testing everything over

00:14:21,590 --> 00:14:23,860
again

00:14:32,920 --> 00:14:38,240
so to perform a fuss attack against a

00:14:35,180 --> 00:14:41,120
specific field all you need to do is

00:14:38,240 --> 00:14:43,250
look at any request you have sent or you

00:14:41,120 --> 00:14:47,000
can start a new request by clicking on

00:14:43,250 --> 00:14:49,029
it with a breakpoint right click on any

00:14:47,000 --> 00:14:53,420
of the fields you saw in the request

00:14:49,029 --> 00:14:55,339
select the fuzz option select the fuzz

00:14:53,420 --> 00:14:57,800
category or type of attack you want to

00:14:55,339 --> 00:15:01,160
perform in here you see I'm doing an SQL

00:14:57,800 --> 00:15:02,810
injection and then you pick the fuzzer

00:15:01,160 --> 00:15:04,129
attack and these are a predefined list

00:15:02,810 --> 00:15:05,720
of attacks there's a lot of different

00:15:04,129 --> 00:15:09,649
options you can find out there for

00:15:05,720 --> 00:15:13,759
different new ones then you click fuzz

00:15:09,649 --> 00:15:15,620
and your fuzzer tab will automatically

00:15:13,759 --> 00:15:17,870
start populating with its attacks and

00:15:15,620 --> 00:15:25,670
the results of the attacks and what it

00:15:17,870 --> 00:15:29,089
was sent in the string after you've been

00:15:25,670 --> 00:15:30,740
doing some passive or active attacks you

00:15:29,089 --> 00:15:33,259
will start seeing alerts a lot of them

00:15:30,740 --> 00:15:35,629
are header problems that they recommend

00:15:33,259 --> 00:15:36,889
fixing that are pretty low but it's

00:15:35,629 --> 00:15:43,250
always good to be able to see what

00:15:36,889 --> 00:15:44,990
you're looking at when you see one so

00:15:43,250 --> 00:15:46,790
you can click on the alerts tab there's

00:15:44,990 --> 00:15:48,559
also flags in the bottom left corner of

00:15:46,790 --> 00:15:49,579
the screen showing you the rough counts

00:15:48,559 --> 00:15:52,910
so you know if there's anything critical

00:15:49,579 --> 00:15:54,860
popping up this allows you to dig into a

00:15:52,910 --> 00:15:57,019
request as you can see here on the

00:15:54,860 --> 00:15:59,629
screen there's the description solution

00:15:57,019 --> 00:16:00,949
and reference tabs that gives you a firm

00:15:59,629 --> 00:16:03,649
ation but if you actually clicked on it

00:16:00,949 --> 00:16:06,350
you could actually see the Act the

00:16:03,649 --> 00:16:08,089
request that went and the response it

00:16:06,350 --> 00:16:10,639
got so once again you can dig into it

00:16:08,089 --> 00:16:13,430
see what's causing the problem know if

00:16:10,639 --> 00:16:16,180
it's a false positive and then correct

00:16:13,430 --> 00:16:16,180
the problem if it's not

00:16:29,189 --> 00:16:33,759
so scheduling these can be very time

00:16:32,199 --> 00:16:37,569
consuming and they can fall by the

00:16:33,759 --> 00:16:39,160
wayside if you're doing them on a tight

00:16:37,569 --> 00:16:43,240
timeline because of the time they take

00:16:39,160 --> 00:16:45,670
to do this in part one of the best ways

00:16:43,240 --> 00:16:47,170
I found to avoid that is to try to

00:16:45,670 --> 00:16:51,819
integrate it into a continuous

00:16:47,170 --> 00:16:54,699
integration plan not the best way to do

00:16:51,819 --> 00:16:56,800
this is if you already have one Settings

00:16:54,699 --> 00:17:00,879
app as a proxy while you're testing will

00:16:56,800 --> 00:17:02,319
allow you to see the results as they

00:17:00,879 --> 00:17:07,020
come through your tests it'll check for

00:17:02,319 --> 00:17:10,899
the headers and bad fields and other

00:17:07,020 --> 00:17:12,730
problems like that here at metal told we

00:17:10,899 --> 00:17:14,350
use B hat test and this works great with

00:17:12,730 --> 00:17:16,990
it it just intercepts all the data and

00:17:14,350 --> 00:17:19,120
checks it it also allows you then to see

00:17:16,990 --> 00:17:22,750
what is found important on your site and

00:17:19,120 --> 00:17:23,980
check those specific URLs for the

00:17:22,750 --> 00:17:27,370
problems as opposed to scanning the

00:17:23,980 --> 00:17:29,200
whole site over and over again with the

00:17:27,370 --> 00:17:31,270
reporting and saving options this also

00:17:29,200 --> 00:17:33,610
allows you to see the changes over time

00:17:31,270 --> 00:17:35,710
on your site so you can see the URLs

00:17:33,610 --> 00:17:39,000
grow or change in the fields grow and

00:17:35,710 --> 00:17:43,679
change and the security of your site as

00:17:39,000 --> 00:17:43,679
you make changes to it over time I

00:17:54,659 --> 00:17:57,410
started

00:17:56,300 --> 00:17:59,690
came the security because was an

00:17:57,410 --> 00:18:02,750
important new service we were offering

00:17:59,690 --> 00:18:05,000
at metal toad but the more I looked into

00:18:02,750 --> 00:18:06,650
it the more it becomes apparent that

00:18:05,000 --> 00:18:10,550
everyone on a project should be

00:18:06,650 --> 00:18:12,560
concerned with security developers

00:18:10,550 --> 00:18:14,180
should not only write secure code but

00:18:12,560 --> 00:18:16,250
these tools allow them to debug their

00:18:14,180 --> 00:18:18,590
code more efficiently by seeing what's

00:18:16,250 --> 00:18:21,200
being sent and not having to put in code

00:18:18,590 --> 00:18:27,170
into their code to check for variables

00:18:21,200 --> 00:18:31,730
and stuff for QA it allows you to script

00:18:27,170 --> 00:18:33,590
in many languages on the back side it

00:18:31,730 --> 00:18:35,240
even has its own language for writing

00:18:33,590 --> 00:18:38,030
your own automated tests if you don't

00:18:35,240 --> 00:18:39,200
have a system already set up these tests

00:18:38,030 --> 00:18:41,210
are great for being able to reproduce

00:18:39,200 --> 00:18:42,530
errors two hands your developers so they

00:18:41,210 --> 00:18:45,410
can see the problems that are actually

00:18:42,530 --> 00:18:46,940
happening see the bad headers see the

00:18:45,410 --> 00:18:50,270
cross-site scripting vulnerabilities

00:18:46,940 --> 00:18:52,570
that type of stuff for DevOps that

00:18:50,270 --> 00:18:55,130
allows security analysis and testing

00:18:52,570 --> 00:18:58,130
finding vulnerabilities before an

00:18:55,130 --> 00:19:01,340
attacker does so that you can secure

00:18:58,130 --> 00:19:03,890
your sites for your clients it also

00:19:01,340 --> 00:19:06,280
allows us to quickly debug sites when

00:19:03,890 --> 00:19:08,360
clients are having problems we're seeing

00:19:06,280 --> 00:19:17,090
different headers and you would expect

00:19:08,360 --> 00:19:18,590
to see it's because of this then we

00:19:17,090 --> 00:19:21,350
should have adopted more security

00:19:18,590 --> 00:19:23,930
oriented culture what we develop code

00:19:21,350 --> 00:19:29,030
either open source or otherwise for your

00:19:23,930 --> 00:19:34,490
companies it's a great way to the old

00:19:29,030 --> 00:19:35,810
enters culture sorry the security

00:19:34,490 --> 00:19:38,270
culture is a great way to promote

00:19:35,810 --> 00:19:40,070
security on the web as a whole so that

00:19:38,270 --> 00:19:42,050
we don't have things like heart lead

00:19:40,070 --> 00:19:43,520
coming up all the time we don't have to

00:19:42,050 --> 00:19:45,200
worry about the NSA just making sure

00:19:43,520 --> 00:19:48,070
everything's out there secure and other

00:19:45,200 --> 00:19:48,070
people can't see it

00:19:56,220 --> 00:20:12,340
anyone have any questions that we

00:19:58,360 --> 00:20:15,640
haven't covered so so far Nathan how do

00:20:12,340 --> 00:20:17,440
you feel like that the security process

00:20:15,640 --> 00:20:21,070
works what kind of timeline are you're

00:20:17,440 --> 00:20:25,900
looking at for a developer to to use

00:20:21,070 --> 00:20:29,580
some of these tools for the developer

00:20:25,900 --> 00:20:32,080
would be more of a line of not

00:20:29,580 --> 00:20:33,400
specifically testing your product but if

00:20:32,080 --> 00:20:34,750
you left it on as a proxy in the

00:20:33,400 --> 00:20:36,520
background while you're going through

00:20:34,750 --> 00:20:39,429
and doing your development work it would

00:20:36,520 --> 00:20:40,570
pull red flags to the surface and it

00:20:39,429 --> 00:20:42,309
would also allow you to debug it a

00:20:40,570 --> 00:20:44,050
little faster so there's an obvious

00:20:42,309 --> 00:20:45,670
problem it'll detect it and let you know

00:20:44,050 --> 00:20:49,210
right away as opposed to having to go

00:20:45,670 --> 00:20:51,520
back and retest it later and where can

00:20:49,210 --> 00:20:56,110
you do some further research on how to

00:20:51,520 --> 00:20:59,110
enable these tools the OWASP zap website

00:20:56,110 --> 00:21:01,990
is a great source there is also dozens

00:20:59,110 --> 00:21:07,710
and dozens of YouTube videos about how

00:21:01,990 --> 00:21:10,059
to use their program Kali's linux has

00:21:07,710 --> 00:21:14,350
YouTube videos and so does metasploit as

00:21:10,059 --> 00:21:16,830
well perfect I do have a question when

00:21:14,350 --> 00:21:23,140
used as a CI function to zap add a

00:21:16,830 --> 00:21:25,270
significant time lag no it does not

00:21:23,140 --> 00:21:26,950
we've tested here on a couple of sites

00:21:25,270 --> 00:21:30,460
we haven't integrated to our process a

00:21:26,950 --> 00:21:32,470
hundred percent yet it took a few more

00:21:30,460 --> 00:21:33,970
seconds to run tests that take a half

00:21:32,470 --> 00:21:38,800
hour so so you might look at another

00:21:33,970 --> 00:21:43,960
minute or so on the testing great thank

00:21:38,800 --> 00:21:47,380
you any other questions we have another

00:21:43,960 --> 00:21:49,150
one when running Zack will it affect the

00:21:47,380 --> 00:21:53,890
overall performance of the site or

00:21:49,150 --> 00:21:55,840
server if you're running it on the same

00:21:53,890 --> 00:21:59,740
server you're testing it can cause a

00:21:55,840 --> 00:22:01,210
significant load on the CPUs at that

00:21:59,740 --> 00:22:02,770
point if you're running on a different

00:22:01,210 --> 00:22:04,810
server it depends on how many active

00:22:02,770 --> 00:22:06,720
connections you're running obviously if

00:22:04,810 --> 00:22:09,480
you're running 40 or 50 active can

00:22:06,720 --> 00:22:10,950
against the server that only has 20 or

00:22:09,480 --> 00:22:12,419
30 processes available it's going to

00:22:10,950 --> 00:22:14,730
start tying up all your processes and

00:22:12,419 --> 00:22:16,980
cause a performance problem but if it's

00:22:14,730 --> 00:22:19,110
on a server with a lot of available

00:22:16,980 --> 00:22:21,510
processes it might slow it down a little

00:22:19,110 --> 00:22:26,539
as it processes more intensive CPU

00:22:21,510 --> 00:22:26,539
request but nothing significant great

00:22:30,830 --> 00:22:34,940
any other questions from our audience

00:22:39,710 --> 00:22:44,820
well you answered everything Nathan we

00:22:43,260 --> 00:22:51,150
don't even have any questions that's

00:22:44,820 --> 00:22:52,799
awesome ah everyone seems to have liked

00:22:51,150 --> 00:22:55,740
it in our comments so great thank you

00:22:52,799 --> 00:22:59,820
guys for listening today um next slide

00:22:55,740 --> 00:23:01,679
Nathan please just a reminder of some of

00:22:59,820 --> 00:23:04,650
our upcoming events we mentioned at the

00:23:01,679 --> 00:23:08,580
beginning of the webinar we have triple

00:23:04,650 --> 00:23:12,570
con Amsterdam coming up we have that

00:23:08,580 --> 00:23:17,309
information listed below on our website

00:23:12,570 --> 00:23:19,260
Amsterdam 2014 drupal.org and we look

00:23:17,309 --> 00:23:21,990
forward to a lot of really great

00:23:19,260 --> 00:23:24,080
conversation birds and information

00:23:21,990 --> 00:23:26,940
coming your way about the latest rupal

00:23:24,080 --> 00:23:29,610
things we also have triple global

00:23:26,940 --> 00:23:32,450
training days coming up you can learn

00:23:29,610 --> 00:23:35,429
more about that we've had a wonderful

00:23:32,450 --> 00:23:38,309
overwhelming group of participants this

00:23:35,429 --> 00:23:42,080
year and I know that will continue to

00:23:38,309 --> 00:23:46,080
grow our Drupal community by providing

00:23:42,080 --> 00:23:48,270
Drupal intro classes for our local

00:23:46,080 --> 00:23:50,250
communities and global community and our

00:23:48,270 --> 00:23:52,980
next webinar as a reminder is July

00:23:50,250 --> 00:23:54,870
fifteenth magic logic is presenting

00:23:52,980 --> 00:23:56,940
different approaches to developing Jubal

00:23:54,870 --> 00:23:59,100
websites and you can see all of that

00:23:56,940 --> 00:24:03,409
information on association des triple

00:23:59,100 --> 00:24:05,940
org and we have also will have a list of

00:24:03,409 --> 00:24:08,789
previously recorded webinars including

00:24:05,940 --> 00:24:15,539
this one in a couple days next ball

00:24:08,789 --> 00:24:18,179
please great and just as a reminder look

00:24:15,539 --> 00:24:20,190
at our tuple Association organization

00:24:18,179 --> 00:24:22,620
and individual memberships

00:24:20,190 --> 00:24:24,690
they really helped us as well as

00:24:22,620 --> 00:24:28,440
supporting partners and technology

00:24:24,690 --> 00:24:30,120
partners to foster the project help us

00:24:28,440 --> 00:24:33,720
fund more scholarship and grants and

00:24:30,120 --> 00:24:37,139
servers and of course you know add back

00:24:33,720 --> 00:24:39,840
to the community and really really Grove

00:24:37,139 --> 00:24:41,309
a Drupal project so take a look at that

00:24:39,840 --> 00:24:43,350
and see if that's something that you

00:24:41,309 --> 00:24:46,950
interested in or your organization is

00:24:43,350 --> 00:24:49,399
interested in as well so it looks like

00:24:46,950 --> 00:24:49,399

YouTube URL: https://www.youtube.com/watch?v=ty920QAUAd4


