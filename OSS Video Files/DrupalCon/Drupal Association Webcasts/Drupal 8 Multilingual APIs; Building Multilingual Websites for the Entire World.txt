Title: Drupal 8 Multilingual APIs; Building Multilingual Websites for the Entire World
Publication date: 2017-05-12
Playlist: Drupal Association Webcasts
Description: 
	
Captions: 
	00:00:02,080 --> 00:00:06,950
all right welcome everyone I'm very

00:00:05,240 --> 00:00:09,650
pleased to have everybody here today for

00:00:06,950 --> 00:00:11,509
the next in our webinar series today

00:00:09,650 --> 00:00:14,660
we're going to be talking about Drupal 8

00:00:11,509 --> 00:00:16,550
multilingual api's and building

00:00:14,660 --> 00:00:18,039
multilingual sites for the or building

00:00:16,550 --> 00:00:21,890
web sites in general for the whole world

00:00:18,039 --> 00:00:25,609
this is a joint presentation between the

00:00:21,890 --> 00:00:28,759
Drupal Association and lingotek a one of

00:00:25,609 --> 00:00:30,679
our major supporting partners and we're

00:00:28,759 --> 00:00:33,320
really happy to have them with us today

00:00:30,679 --> 00:00:37,390
on the call the hosts today will be

00:00:33,320 --> 00:00:39,410
Gabor and Christian Lopez and we'll be

00:00:37,390 --> 00:00:41,860
going ahead and getting started so I'll

00:00:39,410 --> 00:00:44,690
let them introduce themselves and we'll

00:00:41,860 --> 00:00:49,340
we'll start talking about the Drupal 8

00:00:44,690 --> 00:00:52,129
multilingual hi I'm Gabrielle Aichi I

00:00:49,340 --> 00:00:56,270
work for Acquia in the office of the CTO

00:00:52,129 --> 00:00:58,879
and I also was the multilingual

00:00:56,270 --> 00:01:04,640
initiative lead for Drupal 8 for four

00:00:58,879 --> 00:01:06,260
and a half years hi I'm Christian Lopez

00:01:04,640 --> 00:01:08,990
Dennis Keaton drupal.org

00:01:06,260 --> 00:01:11,420
and I work for lingotek and I've been

00:01:08,990 --> 00:01:13,340
working with Gabor and other up some

00:01:11,420 --> 00:01:17,630
people in the triple-eight multilingual

00:01:13,340 --> 00:01:19,070
initiative yeah so although this is a

00:01:17,630 --> 00:01:20,840
joint webinar between the Drupal

00:01:19,070 --> 00:01:24,050
Association and lingotek what we are

00:01:20,840 --> 00:01:27,350
actually presenting is the work of more

00:01:24,050 --> 00:01:28,760
than a thousand six hundred people who

00:01:27,350 --> 00:01:31,160
contributed to the multilingual

00:01:28,760 --> 00:01:33,170
initiative so we'd like to start with

00:01:31,160 --> 00:01:35,810
the thanks to everyone who contributed

00:01:33,170 --> 00:01:37,610
and made all these great features

00:01:35,810 --> 00:01:40,040
possible throughout the several years

00:01:37,610 --> 00:01:42,980
that we worked on this initiative and

00:01:40,040 --> 00:01:46,250
the reason we started working on this is

00:01:42,980 --> 00:01:48,380
because people have been building

00:01:46,250 --> 00:01:51,800
multilingual sites for quite a while on

00:01:48,380 --> 00:01:54,890
Drupal but the experience was very far

00:01:51,800 --> 00:01:57,410
from perfect so if you start off with a

00:01:54,890 --> 00:01:59,750
Drupal seven sites to make it

00:01:57,410 --> 00:02:02,510
multilingual there's a lot of components

00:01:59,750 --> 00:02:04,640
to consider first of all you need to be

00:02:02,510 --> 00:02:06,830
able to set up languages on the site

00:02:04,640 --> 00:02:10,430
which is managed by the locale module

00:02:06,830 --> 00:02:12,530
and that allows you to have a list of

00:02:10,430 --> 00:02:15,500
languages and also do some interface

00:02:12,530 --> 00:02:17,570
translation on the site however

00:02:15,500 --> 00:02:19,760
the interface translation itself works

00:02:17,570 --> 00:02:22,160
with files uploaded from your computer

00:02:19,760 --> 00:02:24,230
it's very tedious if you have a hundred

00:02:22,160 --> 00:02:28,070
modules and five languages you need to

00:02:24,230 --> 00:02:29,990
manually locate 500 files download to

00:02:28,070 --> 00:02:32,990
your computer and upload them to your

00:02:29,990 --> 00:02:35,290
website it's very inefficient so we

00:02:32,990 --> 00:02:38,480
built the localization update module

00:02:35,290 --> 00:02:41,000
that allows you to automatically

00:02:38,480 --> 00:02:42,740
identify what to download it downloads

00:02:41,000 --> 00:02:46,640
them and makes them available for you

00:02:42,740 --> 00:02:48,110
and imports them it works quite well but

00:02:46,640 --> 00:02:51,170
that's a contributing module that you

00:02:48,110 --> 00:02:54,410
need to add and this doesn't really go

00:02:51,170 --> 00:02:56,840
anywhere else it just ultimates your

00:02:54,410 --> 00:02:59,420
interface translations so if you want to

00:02:56,840 --> 00:03:01,430
also translate content on the site you

00:02:59,420 --> 00:03:03,740
need to enable the content translation

00:03:01,430 --> 00:03:05,090
module and the kind of translation

00:03:03,740 --> 00:03:07,640
module works with notes

00:03:05,090 --> 00:03:10,280
it creates copies of your different

00:03:07,640 --> 00:03:13,400
notes and as it translates them so you

00:03:10,280 --> 00:03:14,990
can translate your content but your menu

00:03:13,400 --> 00:03:16,730
items for your content and your

00:03:14,990 --> 00:03:19,130
categories for your present

00:03:16,730 --> 00:03:20,930
will still not be translatable so when

00:03:19,130 --> 00:03:25,100
your editors translation you will not be

00:03:20,930 --> 00:03:27,950
able to translate the menu item so you

00:03:25,100 --> 00:03:30,370
also download and enable the i18n module

00:03:27,950 --> 00:03:33,080
suite which comes with several modules

00:03:30,370 --> 00:03:36,620
including features for menu translation

00:03:33,080 --> 00:03:40,130
taxonomy term translation etc so that

00:03:36,620 --> 00:03:43,190
that can that sort of gives you a lot

00:03:40,130 --> 00:03:45,019
more flexibility but still all the

00:03:43,190 --> 00:03:46,880
emails that are sent out to your users

00:03:45,019 --> 00:03:48,860
will be in the site language they are

00:03:46,880 --> 00:03:51,739
not possible to translate with either of

00:03:48,860 --> 00:03:54,709
these modules so you also download the

00:03:51,739 --> 00:03:56,799
variable module suite which is also

00:03:54,709 --> 00:04:00,500
several modules that deal with the

00:03:56,799 --> 00:04:02,330
configuration on Drupal and then that

00:04:00,500 --> 00:04:04,400
lets you actually translate the emails

00:04:02,330 --> 00:04:08,480
that are sent as users and the site name

00:04:04,400 --> 00:04:10,790
slogan etc but then you also have a

00:04:08,480 --> 00:04:12,830
store on your website or you use the

00:04:10,790 --> 00:04:15,680
rules module or some other module that

00:04:12,830 --> 00:04:19,459
that is not using notes for maintaining

00:04:15,680 --> 00:04:22,400
its content so then you need to enable

00:04:19,459 --> 00:04:25,039
the NPD translation module which also

00:04:22,400 --> 00:04:27,140
comes with several additional modules

00:04:25,039 --> 00:04:28,230
like title modules that are required for

00:04:27,140 --> 00:04:30,960
it to work

00:04:28,230 --> 00:04:35,400
and then you have views installed on the

00:04:30,960 --> 00:04:37,890
site and now you need to have the inv

00:04:35,400 --> 00:04:39,660
use glue module and now you have webform

00:04:37,890 --> 00:04:42,690
installed on the site and you need to

00:04:39,660 --> 00:04:44,400
have the webform itn and glue modules

00:04:42,690 --> 00:04:48,210
installed on the site as well so it's

00:04:44,400 --> 00:04:50,220
compatible so each component that you

00:04:48,210 --> 00:04:53,100
want to have on the site may need to

00:04:50,220 --> 00:04:55,260
have its own Google module or mapping

00:04:53,100 --> 00:04:57,960
module to support multilingual features

00:04:55,260 --> 00:05:00,600
and that very quickly becomes a

00:04:57,960 --> 00:05:04,200
maintenance burden there's a lot of

00:05:00,600 --> 00:05:07,560
components to drugs to juggle with to

00:05:04,200 --> 00:05:09,900
figure out how to configure so one of

00:05:07,560 --> 00:05:13,100
the very key things in the Drupal 7

00:05:09,900 --> 00:05:15,570
lingotek module is actually making you

00:05:13,100 --> 00:05:17,280
making you able to locate these

00:05:15,570 --> 00:05:20,010
components and making it easier to

00:05:17,280 --> 00:05:21,180
configure the modules on the site in a

00:05:20,010 --> 00:05:22,830
way that makes sense

00:05:21,180 --> 00:05:24,890
because all the settings that you have

00:05:22,830 --> 00:05:27,450
here will be very hard to navigate

00:05:24,890 --> 00:05:29,400
especially once you have these modules

00:05:27,450 --> 00:05:32,280
installed you have two ways to translate

00:05:29,400 --> 00:05:34,890
notes both EDD translation and content

00:05:32,280 --> 00:05:36,390
translation can translate notes and you

00:05:34,890 --> 00:05:38,580
also have two ways to translate the

00:05:36,390 --> 00:05:42,500
economy terms both NDB translation and

00:05:38,580 --> 00:05:45,690
i18n translates taxonomy terms so

00:05:42,500 --> 00:05:48,480
there's a lot of possible problems that

00:05:45,690 --> 00:05:51,420
can arise from this scenario so now we

00:05:48,480 --> 00:05:53,610
wanted to do in Drupal 8 instead is to

00:05:51,420 --> 00:05:56,640
make triple natively multilingual and

00:05:53,610 --> 00:05:58,350
support multilingual out-of-the-box so

00:05:56,640 --> 00:06:01,170
every other modules that you add on top

00:05:58,350 --> 00:06:04,290
whether its commerce or rules or views

00:06:01,170 --> 00:06:07,260
or web forms will already work in a

00:06:04,290 --> 00:06:10,260
multilingual system so we built that

00:06:07,260 --> 00:06:12,000
using four pillars and these are four

00:06:10,260 --> 00:06:15,180
modules that you can enable in Drupal

00:06:12,000 --> 00:06:17,160
core so we have the language module that

00:06:15,180 --> 00:06:19,650
maintains the list of languages on the

00:06:17,160 --> 00:06:21,960
site it's what they service for all

00:06:19,650 --> 00:06:24,180
modules to deal with language and it

00:06:21,960 --> 00:06:26,610
also supports everything to store

00:06:24,180 --> 00:06:28,650
language information so your views with

00:06:26,610 --> 00:06:30,990
know their language your menu items with

00:06:28,650 --> 00:06:33,900
know their language your user profiles

00:06:30,990 --> 00:06:36,570
would know their specific language your

00:06:33,900 --> 00:06:38,130
email text will know their specific

00:06:36,570 --> 00:06:40,990
language so when you need to translate

00:06:38,130 --> 00:06:43,030
them you know what's the source language

00:06:40,990 --> 00:06:45,069
it's not just useful for our most

00:06:43,030 --> 00:06:47,620
lingual sites it's also useful if you

00:06:45,069 --> 00:06:49,479
just want to do with data that's

00:06:47,620 --> 00:06:53,800
multiple Ingle but they certainly have

00:06:49,479 --> 00:06:55,599
the site interface as multilingual also

00:06:53,800 --> 00:06:59,860
we have the interface translation module

00:06:55,599 --> 00:07:02,440
as a separate module now which has

00:06:59,860 --> 00:07:05,500
automated translation downloads and the

00:07:02,440 --> 00:07:07,210
built-in user interface is much nicer so

00:07:05,500 --> 00:07:11,139
it's much easier to touch upon

00:07:07,210 --> 00:07:13,630
translations and deal with customized

00:07:11,139 --> 00:07:16,770
translation strings we also have a

00:07:13,630 --> 00:07:19,419
content translation module which only

00:07:16,770 --> 00:07:22,090
resembles the Drupal 7 version by its

00:07:19,419 --> 00:07:24,610
name because it now uses a field

00:07:22,090 --> 00:07:26,710
translation based system so it's

00:07:24,610 --> 00:07:29,320
configurable on the field level and in

00:07:26,710 --> 00:07:33,130
some cases the subfield level as we will

00:07:29,320 --> 00:07:35,500
see under the special glade one and it

00:07:33,130 --> 00:07:38,669
supports any kind of content including

00:07:35,500 --> 00:07:42,069
user profiles rules ecommerce whatever

00:07:38,669 --> 00:07:44,050
you have on the site so it's very

00:07:42,069 --> 00:07:46,840
forward compatible in terms of content

00:07:44,050 --> 00:07:48,849
entities in Drupal 8 and then we have

00:07:46,840 --> 00:07:51,250
the configuration translation web stone

00:07:48,849 --> 00:07:53,650
which provides a user interface on top

00:07:51,250 --> 00:07:56,139
of course configuration language and

00:07:53,650 --> 00:07:58,180
translation management capabilities so

00:07:56,139 --> 00:08:00,550
we have built in functionality in course

00:07:58,180 --> 00:08:03,430
to manage language on configuration and

00:08:00,550 --> 00:08:07,000
to translate any configuration in the

00:08:03,430 --> 00:08:10,449
system email text views field labeled

00:08:07,000 --> 00:08:12,520
cetera et cetera in the same way this is

00:08:10,449 --> 00:08:15,820
also forward compatible for whatever you

00:08:12,520 --> 00:08:19,330
have in your contributed modules so

00:08:15,820 --> 00:08:22,360
let's start with language management the

00:08:19,330 --> 00:08:24,820
API is that we have four these are what

00:08:22,360 --> 00:08:27,250
are going to come up in the sessions so

00:08:24,820 --> 00:08:29,800
for language management we have the

00:08:27,250 --> 00:08:31,780
language manager's service in Drupal

00:08:29,800 --> 00:08:34,209
core which you can probably excess with

00:08:31,780 --> 00:08:36,190
slash drupal language manager but you

00:08:34,209 --> 00:08:38,200
can also just get it from the service

00:08:36,190 --> 00:08:40,419
container so with the language measures

00:08:38,200 --> 00:08:43,270
service by default is implemented by the

00:08:40,419 --> 00:08:46,420
language manager class which is provided

00:08:43,270 --> 00:08:48,940
by the system if you also enable the

00:08:46,420 --> 00:08:51,339
language module then this is replaced

00:08:48,940 --> 00:08:53,890
with the configurable language manager

00:08:51,339 --> 00:08:54,760
but basically regardless of whether the

00:08:53,890 --> 00:08:56,769
site has

00:08:54,760 --> 00:08:58,899
language modular neighbors or not you

00:08:56,769 --> 00:09:02,050
have a language management that can deal

00:08:58,899 --> 00:09:04,120
with language and even if you don't have

00:09:02,050 --> 00:09:06,160
the language module enabled it triple

00:09:04,120 --> 00:09:09,190
comes with three languages

00:09:06,160 --> 00:09:11,589
the und not specified language that is

00:09:09,190 --> 00:09:13,389
used for cases where you could specify

00:09:11,589 --> 00:09:16,209
language but you have no idea what to

00:09:13,389 --> 00:09:18,399
set the not applicable language which

00:09:16,209 --> 00:09:20,350
should be used for cases where it does

00:09:18,399 --> 00:09:22,990
not make sense to assign the language if

00:09:20,350 --> 00:09:25,240
you have a photo of some scenery does

00:09:22,990 --> 00:09:27,010
not have any text on it couldn't be not

00:09:25,240 --> 00:09:30,880
applicable in terms of language and

00:09:27,010 --> 00:09:33,820
English is built in two core if you

00:09:30,880 --> 00:09:37,300
enable the language module then you can

00:09:33,820 --> 00:09:39,310
be least English and it can also add any

00:09:37,300 --> 00:09:42,970
number of configurable languages in this

00:09:39,310 --> 00:09:45,130
example I've added Hungarian Italian and

00:09:42,970 --> 00:09:47,380
these show up in your configuration

00:09:45,130 --> 00:09:49,029
system so when you export your

00:09:47,380 --> 00:09:52,120
configuration on the site you will see

00:09:49,029 --> 00:09:54,670
all of these as language does entity

00:09:52,120 --> 00:09:57,279
that the language code that mo and the

00:09:54,670 --> 00:09:59,860
only difference between them is the ones

00:09:57,279 --> 00:10:02,380
on the Left will be locked meaning you

00:09:59,860 --> 00:10:04,300
cannot edit or delete them and the ones

00:10:02,380 --> 00:10:07,000
on the right will not be locked so you

00:10:04,300 --> 00:10:09,790
can delete them edit them etc however

00:10:07,000 --> 00:10:13,209
you want you can also use the API to

00:10:09,790 --> 00:10:15,760
create these languages um so you can use

00:10:13,209 --> 00:10:17,949
the configurable language class and

00:10:15,760 --> 00:10:21,010
there's heavy helper methods on the

00:10:17,949 --> 00:10:23,680
configurable language to make it easy to

00:10:21,010 --> 00:10:26,620
create new languages to say you create

00:10:23,680 --> 00:10:29,410
from language code fr it will pull some

00:10:26,620 --> 00:10:31,569
default data from our list of common

00:10:29,410 --> 00:10:33,630
languages and we'll set up the French

00:10:31,569 --> 00:10:36,940
language for you and you can save that

00:10:33,630 --> 00:10:38,680
and later on you can use the same path

00:10:36,940 --> 00:10:40,420
to those the French language and delete

00:10:38,680 --> 00:10:44,079
it if you want to make whatever changes

00:10:40,420 --> 00:10:45,819
you want to that language so if you need

00:10:44,079 --> 00:10:49,569
a specific language you can load that

00:10:45,819 --> 00:10:51,459
specific language and use it but if you

00:10:49,569 --> 00:10:54,790
want to use the language that was used

00:10:51,459 --> 00:10:58,720
for the request then you need to go to

00:10:54,790 --> 00:11:01,540
the language manager which lets you get

00:10:58,720 --> 00:11:04,720
the current language that was negotiated

00:11:01,540 --> 00:11:06,490
for the request so this runs through all

00:11:04,720 --> 00:11:08,590
the settings that you have on the site

00:11:06,490 --> 00:11:10,390
whether it uses the browser set

00:11:08,590 --> 00:11:13,510
for language detection or whether it

00:11:10,390 --> 00:11:15,700
uses the domain or the path whatever and

00:11:13,510 --> 00:11:17,590
gets you the language that should be

00:11:15,700 --> 00:11:20,830
used for this request based on those

00:11:17,590 --> 00:11:25,150
settings and you can use this in your

00:11:20,830 --> 00:11:28,810
code to display data based on whatever

00:11:25,150 --> 00:11:30,490
language I was selected for the page so

00:11:28,810 --> 00:11:32,710
that's the basics of how you deal with

00:11:30,490 --> 00:11:35,140
language but of course the language

00:11:32,710 --> 00:11:37,839
module does some other things that will

00:11:35,140 --> 00:11:40,240
not go into that are more complicated

00:11:37,839 --> 00:11:43,750
let's go on to the interface translation

00:11:40,240 --> 00:11:45,910
system so now that we can create our

00:11:43,750 --> 00:11:48,430
languages and load our languages and

00:11:45,910 --> 00:11:50,500
make any operation on them and we can

00:11:48,430 --> 00:11:53,380
also know the negotiated language for

00:11:50,500 --> 00:11:57,820
the current page we may need to

00:11:53,380 --> 00:12:02,230
translate or or string for user

00:11:57,820 --> 00:12:04,000
interface so for that if you're familiar

00:12:02,230 --> 00:12:07,270
with Drupal failing we have the T

00:12:04,000 --> 00:12:10,020
function that we can pass a string and

00:12:07,270 --> 00:12:14,589
it will get translated to the negotiated

00:12:10,020 --> 00:12:18,700
language and interpolate we have the

00:12:14,589 --> 00:12:22,480
same but we actually should avoid it in

00:12:18,700 --> 00:12:24,700
most cases internally there are a lot of

00:12:22,480 --> 00:12:28,720
difference and we are going to see some

00:12:24,700 --> 00:12:31,240
of them so before that we need to

00:12:28,720 --> 00:12:35,320
introduce a concept called dependency

00:12:31,240 --> 00:12:39,160
injection so if for example we want to

00:12:35,320 --> 00:12:42,430
to send an email to our users from our

00:12:39,160 --> 00:12:45,330
administration interface our logic

00:12:42,430 --> 00:12:49,120
should load the users we want to email

00:12:45,330 --> 00:12:51,280
we need to load the configuration and

00:12:49,120 --> 00:12:54,880
the preferred language of this user and

00:12:51,280 --> 00:12:58,740
then we we need to call the translation

00:12:54,880 --> 00:13:01,660
subsystem for translating this thing and

00:12:58,740 --> 00:13:04,330
for that like we need to know a lot

00:13:01,660 --> 00:13:08,920
about the global context or code is

00:13:04,330 --> 00:13:14,980
running so instead in Drupal 8 we are

00:13:08,920 --> 00:13:18,160
reversing the road we will inject all

00:13:14,980 --> 00:13:20,830
the services that we need all the

00:13:18,160 --> 00:13:22,510
classes that have the logic that we need

00:13:20,830 --> 00:13:24,970
to call like the you

00:13:22,510 --> 00:13:28,540
subsystem computation and calculation

00:13:24,970 --> 00:13:31,300
services and we will call the method

00:13:28,540 --> 00:13:33,820
from them this way we can swap them out

00:13:31,300 --> 00:13:36,820
as we saw before with the language

00:13:33,820 --> 00:13:39,040
manager we can swap the default core

00:13:36,820 --> 00:13:42,940
language manager and the language model

00:13:39,040 --> 00:13:46,589
language manager and this also makes

00:13:42,940 --> 00:13:52,360
your code more testable which is a nice

00:13:46,589 --> 00:13:55,329
side effect so instead of calling T what

00:13:52,360 --> 00:13:58,870
we are going to call it these three

00:13:55,329 --> 00:14:03,430
functions with the same arguments that

00:13:58,870 --> 00:14:06,010
you used to and we don't really need to

00:14:03,430 --> 00:14:10,690
define the T function in every class we

00:14:06,010 --> 00:14:13,180
are creating but still we can use the

00:14:10,690 --> 00:14:15,760
string translation place and this will

00:14:13,180 --> 00:14:19,839
include the sinc translation service in

00:14:15,760 --> 00:14:23,680
a class and the T function so we will

00:14:19,839 --> 00:14:26,170
call this T and said yeah most space

00:14:23,680 --> 00:14:28,810
classes like forum base and other

00:14:26,170 --> 00:14:31,269
interface classes already used the

00:14:28,810 --> 00:14:32,920
synchronization trade so a lot of these

00:14:31,269 --> 00:14:34,420
classes if you extend from them will

00:14:32,920 --> 00:14:36,880
already have this available and you

00:14:34,420 --> 00:14:38,709
don't need to care for it in case you

00:14:36,880 --> 00:14:41,620
need to define your own class for

00:14:38,709 --> 00:14:44,410
something and you have the string

00:14:41,620 --> 00:14:48,060
translation trade you can easily add the

00:14:44,410 --> 00:14:48,060
transportation services the twist

00:14:49,300 --> 00:14:53,570
we say

00:14:50,770 --> 00:14:56,480
internally is quite different so calling

00:14:53,570 --> 00:15:00,320
t doesn't return a string anymore we get

00:14:56,480 --> 00:15:03,860
a particular table marker object and we

00:15:00,320 --> 00:15:06,020
can call method from that like get

00:15:03,860 --> 00:15:09,200
option for knowing which lang code which

00:15:06,020 --> 00:15:12,410
we call this function with and these

00:15:09,200 --> 00:15:16,850
things will be only translated when the

00:15:12,410 --> 00:15:22,090
rendering is actually happening so if we

00:15:16,850 --> 00:15:25,730
are telling forms in our Hooper mounter

00:15:22,090 --> 00:15:28,400
changing removing strings rather they

00:15:25,730 --> 00:15:30,530
they won't be actually translated if

00:15:28,400 --> 00:15:33,310
they are not really with it so it's like

00:15:30,530 --> 00:15:35,750
a nice performance improvement to have

00:15:33,310 --> 00:15:40,220
if they are not going to end in the

00:15:35,750 --> 00:15:43,790
final HTML or the final page four format

00:15:40,220 --> 00:15:46,220
plural it's the same but in this case it

00:15:43,790 --> 00:15:48,230
shouldn't we move from double core so

00:15:46,220 --> 00:15:51,410
now we need to call this format plural

00:15:48,230 --> 00:15:54,740
is pet and this is included in the

00:15:51,410 --> 00:15:58,850
string translation trip too so it we are

00:15:54,740 --> 00:16:00,470
standing for form base or we are using

00:15:58,850 --> 00:16:06,250
this in translation trade we don't

00:16:00,470 --> 00:16:09,410
really need to define it again and from

00:16:06,250 --> 00:16:11,870
JavaScript point of view as in Tupac 7

00:16:09,410 --> 00:16:15,910
we will have TT Andrew performance tool

00:16:11,870 --> 00:16:15,910
and they work in the same way

00:16:17,540 --> 00:16:23,209
for our complaints we have two different

00:16:20,300 --> 00:16:26,089
methods for translating duple sudden we

00:16:23,209 --> 00:16:29,449
have pitch pitting plate engine so we

00:16:26,089 --> 00:16:32,509
were actually including PHP code in our

00:16:29,449 --> 00:16:34,839
template now we don't do that anymore

00:16:32,509 --> 00:16:38,300
we have the TWiT templating system and

00:16:34,839 --> 00:16:40,850
we don't we cannot call any PHP code

00:16:38,300 --> 00:16:43,550
anymore so we have two different methods

00:16:40,850 --> 00:16:48,230
for translating our strings the first

00:16:43,550 --> 00:16:51,589
one on the top is a filter so we can use

00:16:48,230 --> 00:16:55,759
the tank filter after a string and this

00:16:51,589 --> 00:16:59,690
will call the P function if we want to

00:16:55,759 --> 00:17:04,610
have placeholders in our string or we

00:16:59,690 --> 00:17:07,760
are using context it's not really

00:17:04,610 --> 00:17:11,540
visible so we have a better option which

00:17:07,760 --> 00:17:13,600
is the advanced tack in the bottom and

00:17:11,540 --> 00:17:16,010
this way we we include or or

00:17:13,600 --> 00:17:19,730
placeholders and we can include any

00:17:16,010 --> 00:17:21,939
context that we will be passed to the T

00:17:19,730 --> 00:17:21,939
function

00:17:25,439 --> 00:17:30,970
yeah these will be parsed by on

00:17:28,449 --> 00:17:33,309
localized octopus in Oregon by the PHP X

00:17:30,970 --> 00:17:36,330
module and they will be these will be

00:17:33,309 --> 00:17:38,950
replaced by the place the placeholder

00:17:36,330 --> 00:17:41,919
items that you are probably or maybe

00:17:38,950 --> 00:17:45,190
used to from Drupal 7 so they will end

00:17:41,919 --> 00:17:47,679
up in a very similar way as they were in

00:17:45,190 --> 00:17:50,039
Drupal 7 but they too weak site api is

00:17:47,679 --> 00:17:50,039
different

00:17:50,390 --> 00:17:52,420
I

00:17:52,750 --> 00:17:57,820
other difference between Drupal 7 in

00:17:54,730 --> 00:18:00,910
Drupal 8 is a hook menu zone so now for

00:17:57,820 --> 00:18:04,690
defining our route and our menu links we

00:18:00,910 --> 00:18:08,170
have demo files in hook menu we have to

00:18:04,690 --> 00:18:12,180
to define the title in English and

00:18:08,170 --> 00:18:16,390
Google eight will translate them for you

00:18:12,180 --> 00:18:20,320
and we shouldn't used either because

00:18:16,390 --> 00:18:22,480
they won't be cash properly interpolate

00:18:20,320 --> 00:18:27,340
we have the demo files we cannot include

00:18:22,480 --> 00:18:31,360
coder so to palade will know this ml

00:18:27,340 --> 00:18:33,970
file which properties we need to

00:18:31,360 --> 00:18:36,010
translate with your specialty we will

00:18:33,970 --> 00:18:38,830
need to translate so we have the title

00:18:36,010 --> 00:18:43,030
here and the description for our menu

00:18:38,830 --> 00:18:47,140
links and people will call the pin

00:18:43,030 --> 00:18:49,870
function for us and in the same way the

00:18:47,140 --> 00:18:53,110
PIO TX model will take care of price

00:18:49,870 --> 00:18:55,710
kindles and if we are downloading our

00:18:53,110 --> 00:18:59,040
translations from localized episode or

00:18:55,710 --> 00:19:01,990
its use the same method for extracting

00:18:59,040 --> 00:19:04,210
these strings for making them available

00:19:01,990 --> 00:19:12,040
to the community to translate for

00:19:04,210 --> 00:19:15,430
translation so we said we saw in how we

00:19:12,040 --> 00:19:19,330
can translate our strings in our model

00:19:15,430 --> 00:19:21,100
we can make our models available for the

00:19:19,330 --> 00:19:24,070
interface translation model for

00:19:21,100 --> 00:19:28,000
translating and as we saw we have to

00:19:24,070 --> 00:19:29,620
define our strings in English still and

00:19:28,000 --> 00:19:31,630
we can translate the interface

00:19:29,620 --> 00:19:36,130
translation from English to any other

00:19:31,630 --> 00:19:39,400
language and the next pillar is the

00:19:36,130 --> 00:19:42,640
content translation model we saw it's

00:19:39,400 --> 00:19:46,810
not based on having copies of our notes

00:19:42,640 --> 00:19:49,450
for each language but instead we will

00:19:46,810 --> 00:19:52,990
have a field-based

00:19:49,450 --> 00:19:55,410
translation approach so any any

00:19:52,990 --> 00:19:58,990
translation will be in the same entity

00:19:55,410 --> 00:20:02,380
if we are creating all round entities

00:19:58,990 --> 00:20:04,899
we will be probably spending for from

00:20:02,380 --> 00:20:08,830
continental debase and we need to define

00:20:04,899 --> 00:20:13,480
a new notation where we define their

00:20:08,830 --> 00:20:16,630
metadata or entity we can say the idea

00:20:13,480 --> 00:20:20,470
of defense key we provide a label and we

00:20:16,630 --> 00:20:22,240
can be fine if we want that or size

00:20:20,470 --> 00:20:24,190
builders can define this entity is

00:20:22,240 --> 00:20:29,559
translatable for that we have the color

00:20:24,190 --> 00:20:35,409
table key on the annotation and this

00:20:29,559 --> 00:20:37,539
will make that administrators can make

00:20:35,409 --> 00:20:39,610
this entity such as a table they are not

00:20:37,539 --> 00:20:42,750
translatable by default but this is an

00:20:39,610 --> 00:20:46,299
option that our customers can use and

00:20:42,750 --> 00:20:48,250
for making entities for a table and

00:20:46,299 --> 00:20:51,880
tracking the language of these entities

00:20:48,250 --> 00:20:54,190
we need a LAN code entity so we need to

00:20:51,880 --> 00:20:56,620
define a in the entity east arrived we

00:20:54,190 --> 00:21:03,490
need to define a rank identity with a

00:20:56,620 --> 00:21:06,760
field that will host the language if we

00:21:03,490 --> 00:21:09,340
define our or base field in the base

00:21:06,760 --> 00:21:11,350
field definitions method and if we use

00:21:09,340 --> 00:21:12,669
this LAN code and we ensure that we call

00:21:11,350 --> 00:21:16,929
that they still definition from

00:21:12,669 --> 00:21:19,690
continent city base this field will be

00:21:16,929 --> 00:21:22,590
created for us so we don't really need

00:21:19,690 --> 00:21:22,590
to do anything else

00:21:25,370 --> 00:21:29,630
an example in note PHP basically

00:21:27,500 --> 00:21:31,640
definitions called the pattern based

00:21:29,630 --> 00:21:35,990
field definitions so this will create

00:21:31,640 --> 00:21:39,230
the language for our notes and for any

00:21:35,990 --> 00:21:42,230
field that we have there we can call it

00:21:39,230 --> 00:21:46,420
set translatable method setting them to

00:21:42,230 --> 00:21:49,490
pool and this will make a title

00:21:46,420 --> 00:21:53,720
translatable field by default so when we

00:21:49,490 --> 00:21:57,440
enable translation for notes in our

00:21:53,720 --> 00:21:59,660
content translation settings page title

00:21:57,440 --> 00:22:04,040
will be defined a special table by

00:21:59,660 --> 00:22:07,990
default but or sidon builders can still

00:22:04,040 --> 00:22:07,990
change last if they want to

00:22:10,840 --> 00:22:16,149
so far feel

00:22:12,610 --> 00:22:19,000
if we are coding around feel there are

00:22:16,149 --> 00:22:22,210
good news sometimes they will be

00:22:19,000 --> 00:22:23,769
translatable by default so we don't

00:22:22,210 --> 00:22:26,500
really need to do anything for

00:22:23,769 --> 00:22:30,519
integrating or fields with the

00:22:26,500 --> 00:22:32,590
translation mechanism in core yeah this

00:22:30,519 --> 00:22:34,779
is for I've configurable field so

00:22:32,590 --> 00:22:37,779
whatever additional fields that you put

00:22:34,779 --> 00:22:39,820
on entities would support translate

00:22:37,779 --> 00:22:42,460
ability automatically and also the other

00:22:39,820 --> 00:22:44,860
side of the previous slide where we've

00:22:42,460 --> 00:22:46,539
seen the title field the title field

00:22:44,860 --> 00:22:48,639
itself does not need to do anything

00:22:46,539 --> 00:22:50,559
special for it to support translation

00:22:48,639 --> 00:22:52,419
only when it's defined as a base field

00:22:50,559 --> 00:22:55,720
we can define its default translate

00:22:52,419 --> 00:22:58,600
ability so if you have a single value

00:22:55,720 --> 00:23:01,299
field you don't need to you define a new

00:22:58,600 --> 00:23:04,240
type of field that is single valued in

00:23:01,299 --> 00:23:06,399
your module they need only to think

00:23:04,240 --> 00:23:08,139
about the translate ability consequences

00:23:06,399 --> 00:23:11,940
and all that's a lot to decide builder

00:23:08,139 --> 00:23:11,940
however if you have a moment

00:23:12,559 --> 00:23:14,620
you

00:23:15,670 --> 00:23:23,200
you have multiple values in your field

00:23:19,500 --> 00:23:25,450
you may have you may define your column

00:23:23,200 --> 00:23:28,300
groups so you can have like in this

00:23:25,450 --> 00:23:31,120
example we have an image field where we

00:23:28,300 --> 00:23:34,180
have a different columns the target ID

00:23:31,120 --> 00:23:37,050
which identifies the file that we have a

00:23:34,180 --> 00:23:40,120
semi match the width and the height of

00:23:37,050 --> 00:23:43,870
this image and the alternative text and

00:23:40,120 --> 00:23:46,960
the title so here we are grouping or

00:23:43,870 --> 00:23:50,830
tablet ID or with an or our head and

00:23:46,960 --> 00:23:54,180
there are C file a group and then we

00:23:50,830 --> 00:23:57,820
have the alternative text as another

00:23:54,180 --> 00:24:00,160
group so if we want to make a or

00:23:57,820 --> 00:24:02,950
alternative text at the table by default

00:24:00,160 --> 00:24:09,460
we have to set the table

00:24:02,950 --> 00:24:14,530
e to two and this way when we enabled or

00:24:09,460 --> 00:24:16,690
or field or image field for translation

00:24:14,530 --> 00:24:20,500
in a content translation settings page

00:24:16,690 --> 00:24:25,330
there are 74 text and the title will be

00:24:20,500 --> 00:24:29,260
enabled by default and not the file but

00:24:25,330 --> 00:24:33,370
still the head builders can configure

00:24:29,260 --> 00:24:36,100
that yeah so in this case this is a

00:24:33,370 --> 00:24:38,800
subfield syllable readers I was talking

00:24:36,100 --> 00:24:40,900
about earlier in this case the counter

00:24:38,800 --> 00:24:44,500
translation module exposes these groups

00:24:40,900 --> 00:24:46,780
as settings for clear translation so

00:24:44,500 --> 00:24:49,630
under the field you can configure the

00:24:46,780 --> 00:24:51,730
file as a thing in itself to be

00:24:49,630 --> 00:24:53,350
translatable or not and the alt text of

00:24:51,730 --> 00:24:55,810
the thing is itself to be translatable

00:24:53,350 --> 00:24:58,060
or not even though this is under a field

00:24:55,810 --> 00:25:00,850
and then the content translation module

00:24:58,060 --> 00:25:03,130
maintains the cup the right values for

00:25:00,850 --> 00:25:05,950
different translations based on the

00:25:03,130 --> 00:25:07,960
configuration of the groups so there's

00:25:05,950 --> 00:25:10,300
nothing else need to be done for the

00:25:07,960 --> 00:25:16,090
groups to be able to operate just

00:25:10,300 --> 00:25:19,090
defining them in an annotation so now we

00:25:16,090 --> 00:25:23,320
can use the entity API for loading or

00:25:19,090 --> 00:25:26,100
content or content entities and we have

00:25:23,320 --> 00:25:29,200
helpful operations for managing

00:25:26,100 --> 00:25:29,620
translations here so we can call node

00:25:29,200 --> 00:25:33,550
load

00:25:29,620 --> 00:25:36,010
or loading a note object and then we can

00:25:33,550 --> 00:25:38,559
call on this object we can call

00:25:36,010 --> 00:25:42,270
different methods like get translation

00:25:38,559 --> 00:25:46,780
and passing a long code we get this

00:25:42,270 --> 00:25:49,240
translation from for Hungarian or if we

00:25:46,780 --> 00:25:53,020
don't need a concrete language but we

00:25:49,240 --> 00:25:55,120
want to load the negotiated language for

00:25:53,020 --> 00:25:57,400
the page we can use the entity

00:25:55,120 --> 00:26:00,220
repository get translation from context

00:25:57,400 --> 00:26:05,200
method and it will use the negotiated

00:26:00,220 --> 00:26:07,540
language for load in this node in the

00:26:05,200 --> 00:26:10,210
same way we have several other methods

00:26:07,540 --> 00:26:12,040
on our continent it is like getting

00:26:10,210 --> 00:26:14,200
translated for getting the source node

00:26:12,040 --> 00:26:19,000
the language method for getting the

00:26:14,200 --> 00:26:20,980
language object the this noticing or get

00:26:19,000 --> 00:26:23,440
translation languages for getting the

00:26:20,980 --> 00:26:27,340
list of available translations that we

00:26:23,440 --> 00:26:31,179
have or have translation for checking if

00:26:27,340 --> 00:26:34,660
a given translation exists and we can

00:26:31,179 --> 00:26:37,660
add translation remove translation any

00:26:34,660 --> 00:26:41,500
other clues operations on translation

00:26:37,660 --> 00:26:44,860
themselves and when you call get and

00:26:41,500 --> 00:26:46,960
translated all you Korell called get

00:26:44,860 --> 00:26:49,330
translation with the language code you

00:26:46,960 --> 00:26:52,450
get an object that could be identically

00:26:49,330 --> 00:26:54,429
used like you have the nude before so

00:26:52,450 --> 00:26:55,990
you do have the same methods and

00:26:54,429 --> 00:26:59,050
everything so you can navigate around

00:26:55,990 --> 00:27:02,110
different translations and treat them as

00:26:59,050 --> 00:27:03,820
the same entity and we are using known

00:27:02,110 --> 00:27:11,900
as an example here but any other entity

00:27:03,820 --> 00:27:15,230
works users menu items etc so we fold

00:27:11,900 --> 00:27:18,470
the API is quite powerful but we may

00:27:15,230 --> 00:27:23,180
even not need it we have building core

00:27:18,470 --> 00:27:24,320
in Drupal 8 language is also integrated

00:27:23,180 --> 00:27:29,720
into use

00:27:24,320 --> 00:27:31,970
so for beings have two main operations

00:27:29,720 --> 00:27:35,330
which is requesting data from the system

00:27:31,970 --> 00:27:38,420
and then rendering that data so we have

00:27:35,330 --> 00:27:41,390
language integrated in both sides so on

00:27:38,420 --> 00:27:44,240
the Left we can define which data we are

00:27:41,390 --> 00:27:46,550
going into we are filtering in the

00:27:44,240 --> 00:27:52,460
system and we can use the translation

00:27:46,550 --> 00:27:54,950
language we can filter by having an even

00:27:52,460 --> 00:27:57,530
translation language and then for the

00:27:54,950 --> 00:28:00,650
rendering we we can specify the language

00:27:57,530 --> 00:28:03,860
we want to render or content in so we

00:28:00,650 --> 00:28:06,860
can filter or the content that has a

00:28:03,860 --> 00:28:11,870
hungarian translation and then displayed

00:28:06,860 --> 00:28:15,290
in german as an example so we we may not

00:28:11,870 --> 00:28:18,679
be really to use the api's we may use we

00:28:15,290 --> 00:28:25,170
may use these for building or or or

00:28:18,679 --> 00:28:27,750
pages here so

00:28:25,170 --> 00:28:29,490
so we can travel with the content

00:28:27,750 --> 00:28:31,470
translation model we can translate from

00:28:29,490 --> 00:28:34,980
any language to any other language and

00:28:31,470 --> 00:28:40,160
what we are using here are intelligent

00:28:34,980 --> 00:28:42,660
objects that we can call or methods find

00:28:40,160 --> 00:28:48,870
an operation for getting all the

00:28:42,660 --> 00:28:50,910
translations alright so the next step is

00:28:48,870 --> 00:28:53,790
the configuration language and

00:28:50,910 --> 00:28:56,310
translation support and as I've said

00:28:53,790 --> 00:28:58,380
before this is also all built into

00:28:56,310 --> 00:29:02,010
Drupal core much like all the things

00:28:58,380 --> 00:29:04,680
that we talked about earlier and the way

00:29:02,010 --> 00:29:06,840
this works is we maintain language

00:29:04,680 --> 00:29:09,080
information on every piece of

00:29:06,840 --> 00:29:11,730
configuration that we have on the system

00:29:09,080 --> 00:29:14,280
so when you look at the system

00:29:11,730 --> 00:29:17,760
maintenance configuration file for

00:29:14,280 --> 00:29:20,580
example this is the file in its entirety

00:29:17,760 --> 00:29:23,760
so you have system maintenance yamo it

00:29:20,580 --> 00:29:25,920
has a message key that contains the text

00:29:23,760 --> 00:29:29,430
for what message should be printed when

00:29:25,920 --> 00:29:32,550
the site is set to maintenance mode and

00:29:29,430 --> 00:29:35,250
it also has a length code key that says

00:29:32,550 --> 00:29:38,610
what language is the file Ian all this

00:29:35,250 --> 00:29:41,300
stuff that is in the file so this way we

00:29:38,610 --> 00:29:44,100
know that this setting is in English and

00:29:41,300 --> 00:29:45,870
then different configuration files could

00:29:44,100 --> 00:29:48,030
be in different languages so maybe the

00:29:45,870 --> 00:29:50,940
email text that you sent up to users may

00:29:48,030 --> 00:29:53,730
be configured in Spanish and the view

00:29:50,940 --> 00:29:55,110
may be configured in French whatever now

00:29:53,730 --> 00:29:58,290
you have set up on your site

00:29:55,110 --> 00:30:00,030
so then Drupal knows what source

00:29:58,290 --> 00:30:03,540
language it deals with and translate

00:30:00,030 --> 00:30:08,760
from there and the translation is that

00:30:03,540 --> 00:30:11,670
is maintained in a way that we we are

00:30:08,760 --> 00:30:13,140
replacing textual keys in the

00:30:11,670 --> 00:30:16,260
configuration files with their

00:30:13,140 --> 00:30:18,330
translations so we needed to have a way

00:30:16,260 --> 00:30:20,430
to define which parts of the

00:30:18,330 --> 00:30:22,770
configuration files are translatable

00:30:20,430 --> 00:30:24,750
because there are a lot of there's a lot

00:30:22,770 --> 00:30:26,340
of other data in the files that are not

00:30:24,750 --> 00:30:28,050
translatable and we need to avoid

00:30:26,340 --> 00:30:31,350
messing with them when we are doing the

00:30:28,050 --> 00:30:35,580
translation so we have the configuration

00:30:31,350 --> 00:30:38,340
a schema system to define the structure

00:30:35,580 --> 00:30:38,860
of configuration so we can look up what

00:30:38,340 --> 00:30:41,230
stress

00:30:38,860 --> 00:30:43,799
available and the configuration schema

00:30:41,230 --> 00:30:47,080
system uses data types that are

00:30:43,799 --> 00:30:49,450
dependent on each other so at the bottom

00:30:47,080 --> 00:30:52,929
here for example we have the text type

00:30:49,450 --> 00:30:56,440
that is based on the straight pipe which

00:30:52,929 --> 00:30:59,920
is a built in type and is also

00:30:56,440 --> 00:31:03,040
translatable so use the text type for

00:30:59,920 --> 00:31:04,900
whatever is translatable and we have the

00:31:03,040 --> 00:31:08,410
config object type which is an

00:31:04,900 --> 00:31:11,230
associative mapping and has one key

00:31:08,410 --> 00:31:14,700
that's defined as nine code which is a

00:31:11,230 --> 00:31:18,040
type string so we are using these type

00:31:14,700 --> 00:31:20,049
type pieces these typing information to

00:31:18,040 --> 00:31:22,480
define the structure of our

00:31:20,049 --> 00:31:24,760
configuration files and we are going to

00:31:22,480 --> 00:31:27,669
use the config object type and the text

00:31:24,760 --> 00:31:31,120
type to define the structure of system

00:31:27,669 --> 00:31:33,970
maintenance so when we define the system

00:31:31,120 --> 00:31:37,030
maintenance file structure we say this

00:31:33,970 --> 00:31:39,130
is a comfy object type so it's a message

00:31:37,030 --> 00:31:42,070
stated mapping that has keys and values

00:31:39,130 --> 00:31:44,140
and one of the keys that are defining

00:31:42,070 --> 00:31:47,470
config object is the line code so that's

00:31:44,140 --> 00:31:50,169
already defined for us and we add

00:31:47,470 --> 00:31:53,049
additional mapping keys to this mapping

00:31:50,169 --> 00:31:57,130
and that is the message key that we want

00:31:53,049 --> 00:31:59,080
to add which is of type text and we also

00:31:57,130 --> 00:32:02,940
provide labels for the translation user

00:31:59,080 --> 00:32:05,830
interface for this structure information

00:32:02,940 --> 00:32:08,770
basically the type text carries forward

00:32:05,830 --> 00:32:11,620
the translate ability characteristic of

00:32:08,770 --> 00:32:13,390
the string and the config object carries

00:32:11,620 --> 00:32:16,600
forward the language code key that we

00:32:13,390 --> 00:32:18,280
defined in the associating array so when

00:32:16,600 --> 00:32:20,650
the configuration translation system

00:32:18,280 --> 00:32:22,510
looks at this file it knows that the

00:32:20,650 --> 00:32:25,929
system maintenance is an Associated

00:32:22,510 --> 00:32:27,880
mapping it knows where to take the

00:32:25,929 --> 00:32:29,919
language code from and it knows which

00:32:27,880 --> 00:32:32,799
keys are translatable in this case the

00:32:29,919 --> 00:32:35,590
message key so we can store the

00:32:32,799 --> 00:32:39,429
translations for them the way we store

00:32:35,590 --> 00:32:41,799
these transitions is we have the base

00:32:39,429 --> 00:32:43,390
file in the configuration system as

00:32:41,799 --> 00:32:46,900
system dot maintenance

00:32:43,390 --> 00:32:49,809
demo and then we have languages slash

00:32:46,900 --> 00:32:52,790
language code slash system a tenant demo

00:32:49,809 --> 00:32:55,100
which is storing the

00:32:52,790 --> 00:32:57,380
isolation for the keys that are

00:32:55,100 --> 00:32:59,840
translatable and have translations for

00:32:57,380 --> 00:33:02,210
themselves so in this case the message

00:32:59,840 --> 00:33:05,150
key is translated as whatever the

00:33:02,210 --> 00:33:07,310
Hungarian equivalent of the message in

00:33:05,150 --> 00:33:09,500
English and then the same applies for

00:33:07,310 --> 00:33:12,730
Italian as well we store it under the

00:33:09,500 --> 00:33:16,130
directory languages /id / - red cetera

00:33:12,730 --> 00:33:17,690
so when you export your configuration

00:33:16,130 --> 00:33:20,300
you get all of your base configuration

00:33:17,690 --> 00:33:22,760
and also all of the translations all at

00:33:20,300 --> 00:33:27,370
once the translations will be in sub

00:33:22,760 --> 00:33:30,170
directories that you can identify and

00:33:27,370 --> 00:33:33,410
the configuration translation module is

00:33:30,170 --> 00:33:35,360
basically built to provide forms and

00:33:33,410 --> 00:33:38,330
pages to translate the main

00:33:35,360 --> 00:33:41,480
configuration files based on the schema

00:33:38,330 --> 00:33:43,160
information that we have custom uses the

00:33:41,480 --> 00:33:45,290
labels from the schema and then it

00:33:43,160 --> 00:33:47,660
generates these files in the

00:33:45,290 --> 00:33:50,510
configuration system and then we use

00:33:47,660 --> 00:33:52,490
these files as overrides on top of the

00:33:50,510 --> 00:33:54,950
configurations so when a hungarian

00:33:52,490 --> 00:33:57,620
version of system maintenance is needed

00:33:54,950 --> 00:33:59,990
we load the original configuration and

00:33:57,620 --> 00:34:02,090
load the hungarian file on top and merge

00:33:59,990 --> 00:34:04,820
them together and then we have the

00:34:02,090 --> 00:34:07,490
Hungarian translation of system

00:34:04,820 --> 00:34:11,960
maintenance and what's special about the

00:34:07,490 --> 00:34:14,929
configuration system is language is not

00:34:11,960 --> 00:34:18,080
just one way that overrides may happen

00:34:14,929 --> 00:34:20,660
it's also possible that there are other

00:34:18,080 --> 00:34:23,780
types of overrides on the system there's

00:34:20,660 --> 00:34:26,750
there may be global settings page P

00:34:23,780 --> 00:34:29,450
overrides there may be domain based over

00:34:26,750 --> 00:34:31,490
eyes there may be time of state-based

00:34:29,450 --> 00:34:33,560
overrides or organic groups based

00:34:31,490 --> 00:34:36,830
overrides or whatever other system you

00:34:33,560 --> 00:34:39,590
have on the site that that could use

00:34:36,830 --> 00:34:42,080
configuration overwrite so when you load

00:34:39,590 --> 00:34:44,419
the configuration from Drupal using that

00:34:42,080 --> 00:34:47,240
either the context factory or the Drupal

00:34:44,419 --> 00:34:49,820
config method that all of the overrides

00:34:47,240 --> 00:34:51,490
will apply as appropriate for that point

00:34:49,820 --> 00:34:53,349
in time

00:34:51,490 --> 00:34:56,260
and when you get the message from that

00:34:53,349 --> 00:34:58,900
configuration object it will be the

00:34:56,260 --> 00:35:03,300
message of the override that win the

00:34:58,900 --> 00:35:07,770
race of being applied in priority order

00:35:03,300 --> 00:35:10,809
if you want to have a specific language

00:35:07,770 --> 00:35:14,260
version of your configuration that's

00:35:10,809 --> 00:35:16,869
maintained by the language manager so

00:35:14,260 --> 00:35:19,990
this is unfortunately much harder to do

00:35:16,869 --> 00:35:21,940
than with the contest entity API because

00:35:19,990 --> 00:35:23,650
the language is maintained other

00:35:21,940 --> 00:35:27,040
language overrides are maintained on the

00:35:23,650 --> 00:35:29,980
language manager so you ask the language

00:35:27,040 --> 00:35:32,170
manager for the override language as the

00:35:29,980 --> 00:35:33,790
store for later and then you set your

00:35:32,170 --> 00:35:37,270
own override language in this case

00:35:33,790 --> 00:35:39,369
Hungarian and then you do something with

00:35:37,270 --> 00:35:42,819
the configuration like send emails as

00:35:39,369 --> 00:35:44,619
Luke seen before and then you set the

00:35:42,819 --> 00:35:48,220
Coptic override language back to what it

00:35:44,619 --> 00:35:50,500
was before and to restore the state it's

00:35:48,220 --> 00:35:54,670
not very nice to have global states like

00:35:50,500 --> 00:35:56,589
this but because arbitrary overrides are

00:35:54,670 --> 00:35:59,349
possible in configuration there is no

00:35:56,589 --> 00:36:01,329
way the configuration system with no of

00:35:59,349 --> 00:36:03,880
all the possible variants of all the

00:36:01,329 --> 00:36:06,069
rights that may exist on the system this

00:36:03,880 --> 00:36:09,369
is basically rooted from Drupal history

00:36:06,069 --> 00:36:12,940
of allowing all kinds of configuration

00:36:09,369 --> 00:36:17,049
changes based on groups or rules or our

00:36:12,940 --> 00:36:19,299
domains or other things so if you want

00:36:17,049 --> 00:36:22,359
to specifically dealing with these

00:36:19,299 --> 00:36:24,760
overrides or certain kind of overrides

00:36:22,359 --> 00:36:26,380
then as I've said when you just pull up

00:36:24,760 --> 00:36:29,740
the configuration object these will

00:36:26,380 --> 00:36:32,859
apply all the overrides and strongest

00:36:29,740 --> 00:36:34,839
will win if you want to have the

00:36:32,859 --> 00:36:37,990
configuration object in its original

00:36:34,839 --> 00:36:40,059
version without over right then the

00:36:37,990 --> 00:36:42,400
config factory service has a get

00:36:40,059 --> 00:36:46,720
editable method that loads you the raw

00:36:42,400 --> 00:36:48,849
original configuration has no rights

00:36:46,720 --> 00:36:50,890
whatsoever it's also possible to save

00:36:48,849 --> 00:36:53,020
back to that configuration object

00:36:50,890 --> 00:36:54,849
because it does not have randomly

00:36:53,020 --> 00:36:57,400
applied over rights from across the

00:36:54,849 --> 00:36:59,920
system if you want to deal with the

00:36:57,400 --> 00:37:01,780
language overrides specifically once

00:36:59,920 --> 00:37:04,480
again you reach back to the language

00:37:01,780 --> 00:37:04,990
manager and the language manager has a

00:37:04,480 --> 00:37:07,690
gift

00:37:04,990 --> 00:37:10,630
language Celtic override method that you

00:37:07,690 --> 00:37:12,880
give the language code and concrete key

00:37:10,630 --> 00:37:14,680
and then you can do whatever you want

00:37:12,880 --> 00:37:17,020
with that language override in this case

00:37:14,680 --> 00:37:19,480
set a different value for the message

00:37:17,020 --> 00:37:21,580
and then you can save it so it's very

00:37:19,480 --> 00:37:24,880
similar to deal with as a configuration

00:37:21,580 --> 00:37:28,690
object it's just sort of different place

00:37:24,880 --> 00:37:30,850
in the configuration system so the

00:37:28,690 --> 00:37:34,810
configuration API is not at night and

00:37:30,850 --> 00:37:37,630
the content API because configuration is

00:37:34,810 --> 00:37:39,820
mostly just dump arrays they don't

00:37:37,630 --> 00:37:41,940
really know where they came from how are

00:37:39,820 --> 00:37:45,160
they merged etc because the whole

00:37:41,940 --> 00:37:48,280
override process is is not transparent

00:37:45,160 --> 00:37:50,320
to the configuration object however this

00:37:48,280 --> 00:37:51,850
also allows you to translate from

00:37:50,320 --> 00:37:53,770
whatever language to another other

00:37:51,850 --> 00:37:55,810
language and it's a lot more flexible

00:37:53,770 --> 00:37:59,820
than content because you can have

00:37:55,810 --> 00:38:03,160
variants based on whatever else you want

00:37:59,820 --> 00:38:05,380
one more thing to note is that we have

00:38:03,160 --> 00:38:07,270
all of these features in core so you can

00:38:05,380 --> 00:38:10,510
have your languages manage your

00:38:07,270 --> 00:38:12,430
interface translated your content and

00:38:10,510 --> 00:38:16,000
your configuration translators but these

00:38:12,430 --> 00:38:17,740
use separate user interfaces and there

00:38:16,000 --> 00:38:20,770
is no integration built-in with

00:38:17,740 --> 00:38:24,580
translation memories or no integration

00:38:20,770 --> 00:38:28,390
with translation service providers so

00:38:24,580 --> 00:38:30,730
that's that feature is that contributed

00:38:28,390 --> 00:38:33,040
modules like lingotek provides very well

00:38:30,730 --> 00:38:34,990
where you don't need to care for whether

00:38:33,040 --> 00:38:36,670
something comes from content or currency

00:38:34,990 --> 00:38:39,510
or interface that makes it much easier

00:38:36,670 --> 00:38:44,440
to deal with the transmitted ability of

00:38:39,510 --> 00:38:48,119
your site so once again all the features

00:38:44,440 --> 00:38:51,310
that we present it are thanks to these

00:38:48,119 --> 00:38:52,990
1,600 people who worked on these

00:38:51,310 --> 00:38:55,720
features for more than four and a half

00:38:52,990 --> 00:38:59,080
years and made all of these possible to

00:38:55,720 --> 00:39:03,130
work in Drupal core so thanks to them

00:38:59,080 --> 00:39:06,340
for their contributions that's indeed I

00:39:03,130 --> 00:39:11,410
also like to thank Gabor and Christian

00:39:06,340 --> 00:39:13,390
for presenting today and we'll do a

00:39:11,410 --> 00:39:14,920
little bit of time for Q&A as well if

00:39:13,390 --> 00:39:17,020
anyone has any questions they'd like

00:39:14,920 --> 00:39:18,970
asked about Drupal 8 multilingual API is

00:39:17,020 --> 00:39:20,710
about Translate ability

00:39:18,970 --> 00:39:23,350
please feel free to use the Q&A button

00:39:20,710 --> 00:39:25,960
in the webinar client or use the chat

00:39:23,350 --> 00:39:27,990
we'll take a look there in the meantime

00:39:25,960 --> 00:39:30,820
Christian would you like to talk about

00:39:27,990 --> 00:39:33,220
the ebooks that's available while we're

00:39:30,820 --> 00:39:38,530
waiting for questions yeah so we have a

00:39:33,220 --> 00:39:42,280
new book covering all of what we talk in

00:39:38,530 --> 00:39:44,350
this webinar it's free to load the

00:39:42,280 --> 00:39:48,340
lingotek dot-com side we will be also

00:39:44,350 --> 00:39:53,860
sending the link to every attendee with

00:39:48,340 --> 00:39:56,800
the recording URL so if there's

00:39:53,860 --> 00:40:02,490
something we didn't cover please in to

00:39:56,800 --> 00:40:02,490
reach out or use the Q&A section

00:40:06,260 --> 00:40:13,140
okay it looks like we don't have

00:40:11,160 --> 00:40:14,490
questions at this time so I just want to

00:40:13,140 --> 00:40:16,890
go ahead and say thank you one more time

00:40:14,490 --> 00:40:18,330
to all of our attendees who joined us on

00:40:16,890 --> 00:40:21,630
this next webinar in the Drupal

00:40:18,330 --> 00:40:23,520
Association series I want to thank our

00:40:21,630 --> 00:40:26,570
Christian and Gabor again for presenting

00:40:23,520 --> 00:40:28,620
with us and I would love to thank

00:40:26,570 --> 00:40:31,290
lingotek for supporting the Drupal

00:40:28,620 --> 00:40:33,750
Association and for being just one of

00:40:31,290 --> 00:40:36,930
the most important supporters in our

00:40:33,750 --> 00:40:39,180
program their leaders in the translation

00:40:36,930 --> 00:40:40,860
system and the cloud-based language

00:40:39,180 --> 00:40:42,450
management so to encourage any of the

00:40:40,860 --> 00:40:46,410
viewers who have translation needs to

00:40:42,450 --> 00:40:49,350
check them out oh and we actually do

00:40:46,410 --> 00:40:51,330
have a question or two coming in so

00:40:49,350 --> 00:40:57,180
let's go ahead and run through a few of

00:40:51,330 --> 00:40:58,860
those the first one from Rogie question

00:40:57,180 --> 00:41:06,210
about interface is there a way to set up

00:40:58,860 --> 00:41:08,610
different language for interface let's

00:41:06,210 --> 00:41:10,280
see that's that's that's most of the

00:41:08,610 --> 00:41:13,310
question here let me take a quick look

00:41:10,280 --> 00:41:15,690
different different than language for I

00:41:13,310 --> 00:41:18,810
think in I was led far different than

00:41:15,690 --> 00:41:21,510
language for content though so yes so

00:41:18,810 --> 00:41:24,510
triple-core has a built-in way is

00:41:21,510 --> 00:41:27,360
similar to what every transition had to

00:41:24,510 --> 00:41:29,700
have separate language negotiation for

00:41:27,360 --> 00:41:33,360
interface transition and content

00:41:29,700 --> 00:41:37,470
translation so you can configure them

00:41:33,360 --> 00:41:39,540
separately then you can display some

00:41:37,470 --> 00:41:43,370
content to different language from the

00:41:39,540 --> 00:41:46,410
interface if you have that requirement

00:41:43,370 --> 00:41:48,570
the next question is it possible to have

00:41:46,410 --> 00:41:52,940
this is from Patricio Cardo is it

00:41:48,570 --> 00:41:52,940
possible to have contextual translations

00:41:56,750 --> 00:42:01,580
so I think we would need some

00:41:59,160 --> 00:42:04,890
clarification on that but if it means

00:42:01,580 --> 00:42:08,490
for a short text that needs context like

00:42:04,890 --> 00:42:11,240
if you say view what what word does that

00:42:08,490 --> 00:42:13,680
mean or the kind of system that is

00:42:11,240 --> 00:42:16,619
possible the same way as it was in

00:42:13,680 --> 00:42:21,000
Drupal 7 so it's possible to provide in

00:42:16,619 --> 00:42:25,109
the form of tool and the tapi context

00:42:21,000 --> 00:42:27,599
information for the string we also built

00:42:25,109 --> 00:42:30,090
in context information so that it's also

00:42:27,599 --> 00:42:32,970
in the JavaScript API and we also built

00:42:30,090 --> 00:42:35,940
in that possibility to the routing

00:42:32,970 --> 00:42:37,650
yellow files and the plug-in name old

00:42:35,940 --> 00:42:39,450
files etc and I believe it's also

00:42:37,650 --> 00:42:42,630
possible to do in the configuration

00:42:39,450 --> 00:42:44,520
schema so I think all of the ways we're

00:42:42,630 --> 00:42:49,230
in the first translation is involved we

00:42:44,520 --> 00:42:52,680
try to make sure that the contextual the

00:42:49,230 --> 00:43:00,690
context is possible to define so I think

00:42:52,680 --> 00:43:02,730
the answer is yes what's the next

00:43:00,690 --> 00:43:05,790
question our entities saved that the new

00:43:02,730 --> 00:43:09,530
entity when translated so I can a

00:43:05,790 --> 00:43:13,290
missile I will answer that one No so

00:43:09,530 --> 00:43:15,960
each of translation is host under the

00:43:13,290 --> 00:43:19,020
same entity so if you have a content

00:43:15,960 --> 00:43:21,690
like a node in English and differently

00:43:19,020 --> 00:43:25,140
to French you end up having one node

00:43:21,690 --> 00:43:29,040
which has both translation so feels are

00:43:25,140 --> 00:43:32,400
translated but we still have only one

00:43:29,040 --> 00:43:34,460
entity with all the shared values

00:43:32,400 --> 00:43:38,569
between them

00:43:34,460 --> 00:43:40,220
okay um the next question is are there

00:43:38,569 --> 00:43:47,270
any issues with translation and

00:43:40,220 --> 00:43:49,250
translation comments so it says the

00:43:47,270 --> 00:43:53,000
the same entity the comments are stored

00:43:49,250 --> 00:43:54,770
on the on the entity and they are

00:43:53,000 --> 00:43:57,740
filtered for a language when you display

00:43:54,770 --> 00:44:00,920
them in a language but it's either

00:43:57,740 --> 00:44:03,890
configurable on the comment field

00:44:00,920 --> 00:44:05,630
display or it could be configured if you

00:44:03,890 --> 00:44:10,070
swap out the fields of ways or something

00:44:05,630 --> 00:44:12,650
else so I think I don't not aware that

00:44:10,070 --> 00:44:15,050
there are problems it is also possible

00:44:12,650 --> 00:44:17,300
to translate comments themselves by the

00:44:15,050 --> 00:44:19,670
way because there's also sales entities

00:44:17,300 --> 00:44:21,740
so if somebody has that requirements

00:44:19,670 --> 00:44:23,840
we've heard that requirement from a

00:44:21,740 --> 00:44:26,500
photo site where people were posting

00:44:23,840 --> 00:44:30,230
comments is a multilingual photo

00:44:26,500 --> 00:44:32,300
portfolio site somebody was had a

00:44:30,230 --> 00:44:35,150
requirement to translate the comments

00:44:32,300 --> 00:44:36,710
because they wanted to show activity in

00:44:35,150 --> 00:44:38,480
all the languages that they've had on

00:44:36,710 --> 00:44:40,850
the site so they wanted to have the

00:44:38,480 --> 00:44:44,450
genuine original comments dresses to

00:44:40,850 --> 00:44:51,800
other languages and that was interesting

00:44:44,450 --> 00:44:55,040
so some people read that too ok let's

00:44:51,800 --> 00:44:56,450
see one more question here I believe

00:44:55,040 --> 00:44:57,890
this is our last question but I

00:44:56,450 --> 00:44:59,720
encourage our remaining viewers to

00:44:57,890 --> 00:45:02,000
please go ahead and ask their questions

00:44:59,720 --> 00:45:03,650
if they have them but this question is

00:45:02,000 --> 00:45:05,600
what is the situation with multilingual

00:45:03,650 --> 00:45:10,060
and paragraphs module in the past there

00:45:05,600 --> 00:45:13,550
have been some issues so paragraphs are

00:45:10,060 --> 00:45:16,300
internally fatah's entities so you can

00:45:13,550 --> 00:45:20,660
translate your progress and they are

00:45:16,300 --> 00:45:23,060
referencing the principle of think

00:45:20,660 --> 00:45:25,730
intensity so you can translate your

00:45:23,060 --> 00:45:28,070
paragraphs but you can kind of translate

00:45:25,730 --> 00:45:32,600
the reference to this paragraph so you

00:45:28,070 --> 00:45:35,119
can have a note which have three

00:45:32,600 --> 00:45:38,210
paragraphs and you can translate each of

00:45:35,119 --> 00:45:41,090
them but you cannot reference like three

00:45:38,210 --> 00:45:43,490
different paragraphs I think there's an

00:45:41,090 --> 00:45:46,670
issue on Drupal the power for that less

00:45:43,490 --> 00:45:51,400
people working on that but it help has

00:45:46,670 --> 00:45:51,400
not been committed yet okay

00:45:52,260 --> 00:45:55,170
alright I'll give it one more minute

00:45:54,119 --> 00:45:56,550
because I don't want to cut anyone off

00:45:55,170 --> 00:45:58,890
who might still have another question

00:45:56,550 --> 00:46:05,180
sorry about that earlier but if you have

00:45:58,890 --> 00:46:05,180
any final questions please let us know

00:46:10,760 --> 00:46:14,180
alright it sounds

00:46:12,380 --> 00:46:15,559
like we're good to go so again I want to

00:46:14,180 --> 00:46:16,970
thank our viewers I want to thank our

00:46:15,559 --> 00:46:18,740
presenters Christian and Gabor

00:46:16,970 --> 00:46:20,269
I want to thank lingotek for supporting

00:46:18,740 --> 00:46:23,900
the Association and supporting the

00:46:20,269 --> 00:46:28,910
community and if you have further

00:46:23,900 --> 00:46:30,259
questions again you can learn about the

00:46:28,910 --> 00:46:32,059
multilingual initiative and the

00:46:30,259 --> 00:46:33,769
multilingual api's entrepreneur gimmick

00:46:32,059 --> 00:46:35,119
documentation you can reach out to

00:46:33,769 --> 00:46:37,910
lingotek to learn about their

00:46:35,119 --> 00:46:39,410
cloud-based language solutions or if you

00:46:37,910 --> 00:46:40,759
have questions about particular issues

00:46:39,410 --> 00:46:42,769
I'm sure the issue queue is for example

00:46:40,759 --> 00:46:44,859
the paragraph issue 2 will have some

00:46:42,769 --> 00:46:48,349
information about that paragraphs issue

00:46:44,859 --> 00:46:49,309
and at that time at this time I think

00:46:48,349 --> 00:46:51,940
we're going to go ahead and wrap up

00:46:49,309 --> 00:46:56,710
thank you again everyone

00:46:51,940 --> 00:46:56,710

YouTube URL: https://www.youtube.com/watch?v=29Bub5w9Q9g


