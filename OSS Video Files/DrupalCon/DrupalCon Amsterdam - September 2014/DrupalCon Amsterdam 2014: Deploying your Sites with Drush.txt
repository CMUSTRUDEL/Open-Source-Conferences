Title: DrupalCon Amsterdam 2014: Deploying your Sites with Drush
Publication date: 2014-09-30
Playlist: DrupalCon Amsterdam - September 2014
Description: 
	Speakers: dasrecht
Drush is not only awesome for managing your local Drupal site, with site aliases you can manage Drupal sites on remote servers without logging in via SSH!

With Drush Deploy you even can deploy sites on multiple servers completely automated with one tool we all aready know at heart: Drush, no other additional library like Capistrano needed!

In this Session we will present how to setup Drush to work with remote sites, what is possible and what we use in our daily business.

Then we will dig deeper into Drush Deploy: how it works, what it does and show how to set it up to deploy a drupal site on multiple servers with a single command, with automated backups, database updates, cache clears and even rollback functionalities.

We will cover all the different parts which need to be aligned before we can start using drush to deploy your site. We will also cover the problems we had and how we solved it and give you a outlook to Drupal 8 to show you that establishing a good deployment does not mean it will break with the next Drupal release.
Captions: 
	00:00:00,860 --> 00:00:07,680
so good afternoon everybody and welcome

00:00:05,370 --> 00:00:11,969
to my session about manage and deploy

00:00:07,680 --> 00:00:16,020
your site with thrush let us first begin

00:00:11,969 --> 00:00:19,770
when I my name is Bastion I work with

00:00:16,020 --> 00:00:22,590
emoji labs in Zurich you find me on

00:00:19,770 --> 00:00:25,490
drupal org and the dust read it also on

00:00:22,590 --> 00:00:30,480
Twitter and on Facebook and everything

00:00:25,490 --> 00:00:33,750
i'm also the devops share the trek chair

00:00:30,480 --> 00:00:36,989
so I organized all the talks you hear

00:00:33,750 --> 00:00:40,020
during this super calm in the DevOps

00:00:36,989 --> 00:00:42,660
track and as job description I'd like to

00:00:40,020 --> 00:00:45,239
point out I'm from the we do it

00:00:42,660 --> 00:00:50,550
live operations so there's no DevOps we

00:00:45,239 --> 00:00:53,039
do that so for this afternoon I give you

00:00:50,550 --> 00:00:55,530
a small introduction into the rush

00:00:53,039 --> 00:00:58,289
deploy where are we today where do we

00:00:55,530 --> 00:01:01,920
want to go with thrush deploy I will

00:00:58,289 --> 00:01:03,449
cover everything that you need to put

00:01:01,920 --> 00:01:06,630
the things together because it's not

00:01:03,449 --> 00:01:10,010
just drop a module in flip a switch and

00:01:06,630 --> 00:01:14,100
then get going and I will also cover

00:01:10,010 --> 00:01:19,740
some parts on Drupal 8 how it does work

00:01:14,100 --> 00:01:22,650
what currently broken what not so where

00:01:19,740 --> 00:01:25,320
are we today so currently a lot of

00:01:22,650 --> 00:01:28,229
people are using third-party frameworks

00:01:25,320 --> 00:01:30,119
like Capistrano or either fix you

00:01:28,229 --> 00:01:34,619
probably know them so who uses

00:01:30,119 --> 00:01:40,259
Capistrano by show of hands some who use

00:01:34,619 --> 00:01:42,270
something different okay good so there

00:01:40,259 --> 00:01:45,119
are currently a lot of deployment

00:01:42,270 --> 00:01:47,070
strategies like we deploy on one server

00:01:45,119 --> 00:01:49,649
then we are seing to all other servers

00:01:47,070 --> 00:01:52,320
and hope nothing breaks there are some

00:01:49,649 --> 00:01:55,470
who use custom bash scripts by which I

00:01:52,320 --> 00:01:58,530
usually relate to duct tape deployment

00:01:55,470 --> 00:02:01,860
because it could break in some points it

00:01:58,530 --> 00:02:05,070
will not break not a perfect way there

00:02:01,860 --> 00:02:07,979
are also deployment strategy which you

00:02:05,070 --> 00:02:12,390
probably know off from years ago which

00:02:07,979 --> 00:02:13,830
was ftp upload yes that still exists we

00:02:12,390 --> 00:02:15,450
still have customers which

00:02:13,830 --> 00:02:17,640
yeah we want to host an hour server it's

00:02:15,450 --> 00:02:21,000
really fancy it's fast and you get an

00:02:17,640 --> 00:02:25,070
FTP accounts like okay that works you

00:02:21,000 --> 00:02:28,110
can do it but now and there's also just

00:02:25,070 --> 00:02:29,790
checking it out on the live servers do a

00:02:28,110 --> 00:02:32,850
git pull and pray that everything runs

00:02:29,790 --> 00:02:38,130
through yeah can you please close the

00:02:32,850 --> 00:02:41,130
door thank you so some words about josh

00:02:38,130 --> 00:02:44,220
deploy the main maintainer is marks on a

00:02:41,130 --> 00:02:47,640
bomb i don't know if he is here yet yell

00:02:44,220 --> 00:02:52,940
if you give a nice hand to that guy and

00:02:47,640 --> 00:02:56,130
he back he did a great work on this so

00:02:52,940 --> 00:02:59,490
the whole rush deploy is in heavily

00:02:56,130 --> 00:03:02,760
inspired by Capistrano and there hasn't

00:02:59,490 --> 00:03:05,060
been much movement since the whole

00:03:02,760 --> 00:03:08,070
garage deploy has finished because it

00:03:05,060 --> 00:03:10,770
has any functionality we currently need

00:03:08,070 --> 00:03:14,160
so there is not a lot things we just

00:03:10,770 --> 00:03:17,010
need to add so it supports just get

00:03:14,160 --> 00:03:19,590
which is okay for what we use and it

00:03:17,010 --> 00:03:22,380
needs PHP 53 at least so there will be

00:03:19,590 --> 00:03:24,330
some changes for making it php5 for

00:03:22,380 --> 00:03:27,800
ready that's also in the making

00:03:24,330 --> 00:03:32,300
currently so something else to deploy

00:03:27,800 --> 00:03:36,570
who knows about cluster SSH who loves it

00:03:32,300 --> 00:03:39,120
okay so I refer to that one sets the

00:03:36,570 --> 00:03:41,489
DevOps way to kill 5 service with one

00:03:39,120 --> 00:03:43,800
keystroke because you run one comment on

00:03:41,489 --> 00:03:45,959
several servers and you're doing remove

00:03:43,800 --> 00:03:48,900
directory and you find out oh that was

00:03:45,959 --> 00:03:51,360
the wrong directory and you successfully

00:03:48,900 --> 00:03:57,350
trashed your life environment doesn't

00:03:51,360 --> 00:04:01,620
happen yeah where do you want to go so

00:03:57,350 --> 00:04:04,440
the idea behind rush deploy is to use a

00:04:01,620 --> 00:04:08,130
tool we own all know by heart which is

00:04:04,440 --> 00:04:12,090
brush so we also want to do multi server

00:04:08,130 --> 00:04:14,280
deployments so not any site is deployed

00:04:12,090 --> 00:04:17,070
on just one server for amazing labs we

00:04:14,280 --> 00:04:19,380
have around five web servers and not all

00:04:17,070 --> 00:04:22,400
sides are running on the same servers so

00:04:19,380 --> 00:04:26,160
we don't want to deal with the burden to

00:04:22,400 --> 00:04:29,730
make everyone everywhere everybody else

00:04:26,160 --> 00:04:31,950
aware that yeah on which server are

00:04:29,730 --> 00:04:35,190
those clients deployed we just want to

00:04:31,950 --> 00:04:38,460
do at rush deploy at life and it should

00:04:35,190 --> 00:04:41,460
know automatically what's done we also

00:04:38,460 --> 00:04:43,890
want to run tasks like updating db's

00:04:41,460 --> 00:04:46,050
running custom scripts and doing

00:04:43,890 --> 00:04:49,080
monitoring things like automating

00:04:46,050 --> 00:04:53,730
everything that you could probably miss

00:04:49,080 --> 00:04:56,160
out we also want to remote cash all the

00:04:53,730 --> 00:04:58,320
gates things so we want to have a speedy

00:04:56,160 --> 00:05:03,300
deployment without needing to check out

00:04:58,320 --> 00:05:05,760
a 150 megabyte get rip repository

00:05:03,300 --> 00:05:08,670
multiple times and trying something like

00:05:05,760 --> 00:05:11,520
that and we will also have the

00:05:08,670 --> 00:05:14,040
possibility to roll back a release so if

00:05:11,520 --> 00:05:17,490
something fails you want to go back one

00:05:14,040 --> 00:05:20,970
step we use this sometimes when you try

00:05:17,490 --> 00:05:22,740
to enable HTTPS for example you do some

00:05:20,970 --> 00:05:26,070
changes and then something is missing

00:05:22,740 --> 00:05:27,930
and you see oh there is one side which

00:05:26,070 --> 00:05:29,430
on the customer side which behaves a

00:05:27,930 --> 00:05:32,730
little bit differently and we need to

00:05:29,430 --> 00:05:35,730
roll back now and you just can roll back

00:05:32,730 --> 00:05:38,640
then with rashi play so as a small

00:05:35,730 --> 00:05:41,400
conclusions we try to sneak in a little

00:05:38,640 --> 00:05:46,890
bit more automation which leaves then

00:05:41,400 --> 00:05:52,100
less room for human error so look at

00:05:46,890 --> 00:05:52,100
your future deployment guess like this

00:05:53,600 --> 00:06:00,750
we run brush deploy at life and hit

00:05:57,360 --> 00:06:02,610
enter and actually that's a pre-recorded

00:06:00,750 --> 00:06:04,560
yesterday because I didn't want to do it

00:06:02,610 --> 00:06:06,810
live now because when I need to fix the

00:06:04,560 --> 00:06:09,450
site during a talk with a packed room I

00:06:06,810 --> 00:06:12,419
don't like it and it adds a little bit

00:06:09,450 --> 00:06:14,820
of stress so what do you see it first

00:06:12,419 --> 00:06:18,360
loads all the Elias web servers then it

00:06:14,820 --> 00:06:20,970
starts to deploy and then it checks out

00:06:18,360 --> 00:06:22,740
all get some o'douls it does magic to

00:06:20,970 --> 00:06:26,970
the sub modules and some seconds

00:06:22,740 --> 00:06:30,990
afterwards we have deployed easy isn't

00:06:26,970 --> 00:06:34,770
it we also have a nice little message on

00:06:30,990 --> 00:06:37,099
the hip chat which says hey I deployed

00:06:34,770 --> 00:06:42,720
aside for a customer

00:06:37,099 --> 00:06:47,159
so that said I try to enable all team

00:06:42,720 --> 00:06:49,470
members to deploy to life there is no

00:06:47,159 --> 00:06:53,280
need for me to do to do a deployment

00:06:49,470 --> 00:06:54,690
because when I get sick no deployment is

00:06:53,280 --> 00:06:57,569
happening so everybody should be able

00:06:54,690 --> 00:07:00,210
and you should really strive to the way

00:06:57,569 --> 00:07:05,280
that you can enable all team members to

00:07:00,210 --> 00:07:07,530
deploy so that happened I told two

00:07:05,280 --> 00:07:11,690
people from our sister company amazing

00:07:07,530 --> 00:07:11,690
metrics how to deploy with brush deploy

00:07:12,319 --> 00:07:21,180
they did it and five minutes afterwards

00:07:17,250 --> 00:07:23,250
the CEO came to my desk and asks yeah

00:07:21,180 --> 00:07:26,909
that's really nice and we like that you

00:07:23,250 --> 00:07:29,219
do that but but if they break it at all

00:07:26,909 --> 00:07:33,330
yeah they can break it but we can also

00:07:29,219 --> 00:07:37,310
fix it because we can roll back so you

00:07:33,330 --> 00:07:40,229
need to calm down some people sometimes

00:07:37,310 --> 00:07:42,690
so now back to me should we put all

00:07:40,229 --> 00:07:47,099
parts together to see what's needed to

00:07:42,690 --> 00:07:49,770
do a drazi ploy of course so we start

00:07:47,099 --> 00:07:52,409
with installing rush deploy we then

00:07:49,770 --> 00:07:56,340
cover a bit of the drudge aliases so

00:07:52,409 --> 00:08:00,120
actually who uses thrush aliases good

00:07:56,340 --> 00:08:01,740
very good so afterwards we will then

00:08:00,120 --> 00:08:05,729
cover the drudge deployed configuration

00:08:01,740 --> 00:08:08,909
and we will do or force deployment like

00:08:05,729 --> 00:08:11,330
running through what it would do so

00:08:08,909 --> 00:08:14,610
installing brush deploy is rather easy

00:08:11,330 --> 00:08:16,229
we just won we just go to the rush

00:08:14,610 --> 00:08:19,379
directory which is in your home

00:08:16,229 --> 00:08:22,129
directory you get cloned the actual

00:08:19,379 --> 00:08:25,560
branch and you run a draug cc'd rush

00:08:22,129 --> 00:08:27,180
after running then at rush command

00:08:25,560 --> 00:08:29,159
without any arguments you should see

00:08:27,180 --> 00:08:37,349
that there are now the drudge deploy

00:08:29,159 --> 00:08:39,990
actions so that's quite easy now we need

00:08:37,349 --> 00:08:42,930
to get the Drupal sites ready which is a

00:08:39,990 --> 00:08:45,750
task when you have more than one side

00:08:42,930 --> 00:08:48,990
could be a little bit tedious in the end

00:08:45,750 --> 00:08:50,520
in the beginning so we need to do some

00:08:48,990 --> 00:08:52,620
standardization

00:08:50,520 --> 00:08:55,050
we need to clean up all our environments

00:08:52,620 --> 00:08:57,840
you need to establish some standards for

00:08:55,050 --> 00:09:00,900
let's say configuration you need to have

00:08:57,840 --> 00:09:02,850
like a settings local that PHP s roopa

00:09:00,900 --> 00:09:05,610
late does it you can also incorporate

00:09:02,850 --> 00:09:07,950
this in Drupal 7 I will have some code

00:09:05,610 --> 00:09:10,890
snippets afterwards you need to stand up

00:09:07,950 --> 00:09:13,910
besides your file pass your web root

00:09:10,890 --> 00:09:16,470
pass so actually you need to have a

00:09:13,910 --> 00:09:19,920
setup that every customer sites look

00:09:16,470 --> 00:09:22,740
almost the same why because it eases

00:09:19,920 --> 00:09:26,430
your workload when you need to change

00:09:22,740 --> 00:09:29,490
something over all customers you host so

00:09:26,430 --> 00:09:35,180
what we do we have the settings PHP

00:09:29,490 --> 00:09:38,250
committed to two or get repository and

00:09:35,180 --> 00:09:40,920
in the end we just check if there is a

00:09:38,250 --> 00:09:43,560
settings local that PHP and if it's

00:09:40,920 --> 00:09:47,640
there we just load that when you load

00:09:43,560 --> 00:09:50,250
the side so that eases us a little bit

00:09:47,640 --> 00:09:53,040
that we just have the site related

00:09:50,250 --> 00:09:55,070
settings in the settings local it gives

00:09:53,040 --> 00:09:58,320
you a better overview and all

00:09:55,070 --> 00:10:00,330
configurations you will have in your

00:09:58,320 --> 00:10:02,280
standard setup are committed to the

00:10:00,330 --> 00:10:06,750
repository so you don't need to change

00:10:02,280 --> 00:10:09,420
anything there what we also do we do we

00:10:06,750 --> 00:10:11,580
move the settings local that PHP to a

00:10:09,420 --> 00:10:14,130
directory which is accessible from every

00:10:11,580 --> 00:10:16,470
server so you just change it once and

00:10:14,130 --> 00:10:19,860
you run a deployment and it's deployed

00:10:16,470 --> 00:10:23,040
on every server but we still copied the

00:10:19,860 --> 00:10:25,470
file to have like in every revision in

00:10:23,040 --> 00:10:27,630
every deployment you do there is the

00:10:25,470 --> 00:10:30,300
settings that local that PHP which is

00:10:27,630 --> 00:10:32,910
exactly from that revision that you know

00:10:30,300 --> 00:10:37,500
that you can go back and you have the

00:10:32,910 --> 00:10:40,080
old file again so that's nice but we

00:10:37,500 --> 00:10:42,780
also need the aliases so some of you

00:10:40,080 --> 00:10:47,040
know the alias is already aliases is a

00:10:42,780 --> 00:10:50,610
way to tell the rush how your

00:10:47,040 --> 00:10:53,490
environment looks like you can say that

00:10:50,610 --> 00:10:55,980
there is a web server one you can give a

00:10:53,490 --> 00:10:58,830
web root a remote user and the remote

00:10:55,980 --> 00:11:02,970
hosts of drush automatically knows by

00:10:58,830 --> 00:11:04,259
running a comment at web one on which

00:11:02,970 --> 00:11:07,379
server should connect

00:11:04,259 --> 00:11:09,839
you can also say web 2 is the same as

00:11:07,379 --> 00:11:12,299
web one but the remote host is web to

00:11:09,839 --> 00:11:16,470
that example to come which is really

00:11:12,299 --> 00:11:21,209
easy so what does this enable us we can

00:11:16,470 --> 00:11:23,850
run drush at web one user login will

00:11:21,209 --> 00:11:28,109
take some time drush makes an ssh

00:11:23,850 --> 00:11:31,499
comment to the server it runs in Uli and

00:11:28,109 --> 00:11:35,519
it gets back to one time user login URL

00:11:31,499 --> 00:11:38,309
to your shell so that's nice you can

00:11:35,519 --> 00:11:40,679
also run ad rush SQL Singh from web one

00:11:38,309 --> 00:11:43,139
to your devo default environment and you

00:11:40,679 --> 00:11:47,429
get back to data that's also something

00:11:43,139 --> 00:11:49,350
we use regularly because it eases the

00:11:47,429 --> 00:11:51,329
way you can move data around you don't

00:11:49,350 --> 00:11:53,759
need to dump it and copy the file you

00:11:51,329 --> 00:11:56,309
just SQL sync it and you need to know on

00:11:53,759 --> 00:11:59,759
which server but usually we use the web

00:11:56,309 --> 00:12:02,069
server one for connecting to the mysql

00:11:59,759 --> 00:12:04,829
server and getting the data back so

00:12:02,069 --> 00:12:08,119
that's about aliases I will go a little

00:12:04,829 --> 00:12:12,689
bit deeper analysis afterwards because

00:12:08,119 --> 00:12:15,600
we evolved the setup which we use for

00:12:12,689 --> 00:12:19,499
drush deploy a little bit over the last

00:12:15,600 --> 00:12:21,959
two months so i will have this somehow

00:12:19,499 --> 00:12:25,529
split into parts is the part which i

00:12:21,959 --> 00:12:29,269
described how to set up easily and how

00:12:25,529 --> 00:12:33,019
we do currently the deployment stuff so

00:12:29,269 --> 00:12:37,649
rush deployed configuration there is

00:12:33,019 --> 00:12:41,039
thrush deployed rush or c dot PHP which

00:12:37,649 --> 00:12:45,899
has a lot of information in it how traj

00:12:41,039 --> 00:12:48,149
deploy knows what you do so first you

00:12:45,899 --> 00:12:50,939
need to know brush apply needs to know

00:12:48,149 --> 00:12:53,609
where the deploy repository is so you

00:12:50,939 --> 00:12:56,100
just fill in your deployment repository

00:12:53,609 --> 00:13:00,689
and you say which branch it should

00:12:56,100 --> 00:13:05,489
deploy I personally strongly suggest

00:13:00,689 --> 00:13:10,249
that you adopt somehow a git workflow we

00:13:05,489 --> 00:13:13,589
add amazing labs use get flow which has

00:13:10,249 --> 00:13:15,929
it started out that we just wanted to do

00:13:13,589 --> 00:13:17,820
it and then we try to incorporate rush

00:13:15,929 --> 00:13:20,580
deploy and say okay now we need to

00:13:17,820 --> 00:13:24,630
do it so what brings get flow to the

00:13:20,580 --> 00:13:26,700
table it's one of many branching model

00:13:24,630 --> 00:13:29,580
so I don't say it's the right branching

00:13:26,700 --> 00:13:32,130
model but it works fine for us so we

00:13:29,580 --> 00:13:35,880
have a life and the deaf branch the life

00:13:32,130 --> 00:13:40,560
branch nobody ever commits directly into

00:13:35,880 --> 00:13:43,650
the life branch so all mergers to the

00:13:40,560 --> 00:13:47,370
life branch are done by pull requests or

00:13:43,650 --> 00:13:50,160
manual merging there is also the way to

00:13:47,370 --> 00:13:54,780
run to use future feature branches that

00:13:50,160 --> 00:13:56,790
you create a from life from life you

00:13:54,780 --> 00:13:59,220
create a branch which has the feature

00:13:56,790 --> 00:14:02,970
number you develop on it and you merge

00:13:59,220 --> 00:14:05,370
back to the life there's also hotfix

00:14:02,970 --> 00:14:08,160
branches which I personally use quite

00:14:05,370 --> 00:14:10,860
often if I need to fix something fast so

00:14:08,160 --> 00:14:13,770
i go from life do the hotfix and get

00:14:10,860 --> 00:14:16,190
back to life so that's what I and one

00:14:13,770 --> 00:14:19,710
important thing life is always

00:14:16,190 --> 00:14:22,170
deployable there is nothing like oh yeah

00:14:19,710 --> 00:14:24,750
we shouldn't deploy life because it will

00:14:22,170 --> 00:14:27,390
break some small things that's not going

00:14:24,750 --> 00:14:30,390
to happen because if you have that you

00:14:27,390 --> 00:14:32,160
will not be able to automate it because

00:14:30,390 --> 00:14:34,800
when you have a life branch which you

00:14:32,160 --> 00:14:37,590
can put your hand down and say ok we can

00:14:34,800 --> 00:14:39,930
deploy it at any given time you gain

00:14:37,590 --> 00:14:42,270
some confidence to just run rush deploy

00:14:39,930 --> 00:14:44,250
at life and it will run through and the

00:14:42,270 --> 00:14:46,710
site will not go down so that's

00:14:44,250 --> 00:14:51,240
something you need to do there's

00:14:46,710 --> 00:14:54,630
something else in the deployed rush or C

00:14:51,240 --> 00:14:58,140
dot PHP the keep releases keep releases

00:14:54,630 --> 00:15:02,160
tells rush deploy how many release

00:14:58,140 --> 00:15:06,810
directories it should keep so that's the

00:15:02,160 --> 00:15:08,910
steps you can go to roll back like when

00:15:06,810 --> 00:15:11,880
you have ten you can go back ten steps

00:15:08,910 --> 00:15:16,200
in deployments if you have just one you

00:15:11,880 --> 00:15:19,530
can just go back one actually it's not

00:15:16,200 --> 00:15:21,900
cleaning up automatically so when you

00:15:19,530 --> 00:15:24,150
run the cleanup there is Josh deploy

00:15:21,900 --> 00:15:26,900
cleanup it will remove everything that's

00:15:24,150 --> 00:15:29,260
over that threshold so that's something

00:15:26,900 --> 00:15:32,890
also worth mentioning

00:15:29,260 --> 00:15:35,200
and if you use git submodules for having

00:15:32,890 --> 00:15:37,630
the modules you need to tell it get

00:15:35,200 --> 00:15:41,020
enabled some modules to true that it

00:15:37,630 --> 00:15:44,860
knows that it needs to check out your

00:15:41,020 --> 00:15:48,910
submodels unless you will have a Drupal

00:15:44,860 --> 00:15:51,730
site without subtitles the next thing is

00:15:48,910 --> 00:15:54,910
the file system structure which is quite

00:15:51,730 --> 00:15:58,270
a bit different to what you usually do

00:15:54,910 --> 00:16:01,150
for deployment so you can prepare your

00:15:58,270 --> 00:16:04,020
server by running drush deploy set up at

00:16:01,150 --> 00:16:07,720
web one and this will create you

00:16:04,020 --> 00:16:10,780
different directories it will create

00:16:07,720 --> 00:16:14,140
exactly that directory structure without

00:16:10,780 --> 00:16:16,780
the public HTML the public HTML is what

00:16:14,140 --> 00:16:19,660
we use so we have for every website a

00:16:16,780 --> 00:16:22,660
user and a public HTML directory which

00:16:19,660 --> 00:16:24,850
is either the folder or a symlink so

00:16:22,660 --> 00:16:27,400
puppet when it runs through and it sees

00:16:24,850 --> 00:16:29,500
its not there it creates a folder and if

00:16:27,400 --> 00:16:34,240
there is a symlink or already forward it

00:16:29,500 --> 00:16:36,940
does nothing so in the current directory

00:16:34,240 --> 00:16:40,270
that's a symlink to the latest release

00:16:36,940 --> 00:16:45,640
so the current directory always links to

00:16:40,270 --> 00:16:48,340
a release folder and we have two

00:16:45,640 --> 00:16:50,260
releases which is a folder which is

00:16:48,340 --> 00:16:52,480
created for every time you run rush

00:16:50,260 --> 00:16:54,550
deploy so your entourage deploy it

00:16:52,480 --> 00:16:56,530
starts to create one of those folders

00:16:54,550 --> 00:16:59,860
after it's done it will link to public

00:16:56,530 --> 00:17:02,260
HTML now it will link to current

00:16:59,860 --> 00:17:05,860
directory to the release directory and

00:17:02,260 --> 00:17:09,400
then the deployment is done we also have

00:17:05,860 --> 00:17:13,720
a shared directory which has a cached

00:17:09,400 --> 00:17:16,270
copy of your whole code so it does get

00:17:13,720 --> 00:17:19,750
check out a get poll is all always down

00:17:16,270 --> 00:17:23,140
there and then from there we copy it

00:17:19,750 --> 00:17:27,579
over I will cover it later and we have

00:17:23,140 --> 00:17:29,530
the public HTML which always links to

00:17:27,579 --> 00:17:31,180
the current directory and the current

00:17:29,530 --> 00:17:33,880
directory always links to the latest

00:17:31,180 --> 00:17:37,360
release so you see that's a chain of

00:17:33,880 --> 00:17:40,450
symlinks which is probably not optimal

00:17:37,360 --> 00:17:41,820
but it's currently the way we go so what

00:17:40,450 --> 00:17:44,970
exactly happens

00:17:41,820 --> 00:17:48,360
when we run rush deploy at web one it

00:17:44,970 --> 00:17:50,760
goes to every web server it updates your

00:17:48,360 --> 00:17:54,210
remote cash like the shared directory I

00:17:50,760 --> 00:17:56,700
told you it initializes and updates to

00:17:54,210 --> 00:17:59,070
sub modules so you have always the same

00:17:56,700 --> 00:18:02,300
the right version in it so and they do

00:17:59,070 --> 00:18:06,030
sit it does it in a harsh way so it just

00:18:02,300 --> 00:18:08,160
trashes everything that's not as its

00:18:06,030 --> 00:18:11,370
described in gate so you are sure that

00:18:08,160 --> 00:18:13,350
you have the right versions it creates a

00:18:11,370 --> 00:18:16,370
new release directory and copies over

00:18:13,350 --> 00:18:20,700
your codebase to the release directory

00:18:16,370 --> 00:18:24,540
it den links the current directory to

00:18:20,700 --> 00:18:28,800
your current deploy code and execute the

00:18:24,540 --> 00:18:32,060
tasks we define if something goes wrong

00:18:28,800 --> 00:18:35,660
you can run ad rush deploy roll back and

00:18:32,060 --> 00:18:38,250
you will get back to the web to the

00:18:35,660 --> 00:18:42,030
lightest release so it will just switch

00:18:38,250 --> 00:18:45,570
the symlink as it does for Capistrano

00:18:42,030 --> 00:18:48,330
for example so you now tell me yeah

00:18:45,570 --> 00:18:53,040
that's nice but what's about rush deploy

00:18:48,330 --> 00:18:58,830
at life so for multi server deployments

00:18:53,040 --> 00:19:02,150
there is Elias lists who uses them yeah

00:18:58,830 --> 00:19:09,200
you of course you invented it somehow

00:19:02,150 --> 00:19:14,130
well drush enables you to tell rush

00:19:09,200 --> 00:19:17,070
there is an alias life and you can give

00:19:14,130 --> 00:19:20,040
it more servers as we just define them

00:19:17,070 --> 00:19:24,420
at web one at web two and rush then now

00:19:20,040 --> 00:19:26,490
is that it's a group of servers so you

00:19:24,420 --> 00:19:28,770
cannot do every command with it you

00:19:26,490 --> 00:19:30,780
could do a rush you a lie and it will go

00:19:28,770 --> 00:19:32,640
to every server and give you a one-time

00:19:30,780 --> 00:19:35,790
login link for every server which is

00:19:32,640 --> 00:19:40,560
pointless but for deploying you can

00:19:35,790 --> 00:19:43,500
group the service together so that's

00:19:40,560 --> 00:19:46,950
nice but I told about standardization

00:19:43,500 --> 00:19:50,880
keeping the things together we cover

00:19:46,950 --> 00:19:54,180
that so if you don't know about add rush

00:19:50,880 --> 00:19:54,780
aliases thing go to that URL read

00:19:54,180 --> 00:19:57,930
through

00:19:54,780 --> 00:20:02,400
being lighted because there are a lot of

00:19:57,930 --> 00:20:05,010
things you can have parent aliases which

00:20:02,400 --> 00:20:07,140
take the same data as the parent ask

00:20:05,010 --> 00:20:10,530
there are a lot of things which are not

00:20:07,140 --> 00:20:14,870
widely used but they are there since

00:20:10,530 --> 00:20:19,110
years so let's cover automated earliest

00:20:14,870 --> 00:20:24,540
what we do currently as we create alias

00:20:19,110 --> 00:20:27,450
files on the fly so we have file which

00:20:24,540 --> 00:20:30,150
stores how our servers are set up and

00:20:27,450 --> 00:20:33,780
that's a JSON file which is really easy

00:20:30,150 --> 00:20:36,150
to see like it's even open to the wild

00:20:33,780 --> 00:20:38,610
it's on our github account so there is

00:20:36,150 --> 00:20:43,170
life is web server one web server to a

00:20:38,610 --> 00:20:46,050
web server Lee with the IPS and we try

00:20:43,170 --> 00:20:49,920
to build the server groups automatically

00:20:46,050 --> 00:20:53,820
so or our aliases five currently looks

00:20:49,920 --> 00:20:58,080
like this we have a site name which is

00:20:53,820 --> 00:21:01,920
the unique identifier to decides and

00:20:58,080 --> 00:21:03,540
from there we can find out how the site

00:21:01,920 --> 00:21:06,090
should look like and we also can

00:21:03,540 --> 00:21:08,760
override it in case of you want to

00:21:06,090 --> 00:21:10,410
overwrite something if some site is

00:21:08,760 --> 00:21:12,810
currently just deployed on one server

00:21:10,410 --> 00:21:14,610
which has changed a JSON file for one

00:21:12,810 --> 00:21:18,210
customer which then overrides the

00:21:14,610 --> 00:21:22,080
standard configuration you ask about the

00:21:18,210 --> 00:21:26,520
time to implement this it was about one

00:21:22,080 --> 00:21:28,380
evening we did it last year at drupalcon

00:21:26,520 --> 00:21:31,470
proc the whole team set together for one

00:21:28,380 --> 00:21:34,230
evening we went through all customer

00:21:31,470 --> 00:21:38,310
sites and move to rush deploy in one

00:21:34,230 --> 00:21:43,340
evening what's around I guess 40 clients

00:21:38,310 --> 00:21:48,300
50 clients so you can do that quite fast

00:21:43,340 --> 00:21:51,420
deployment asks you can run deployment

00:21:48,300 --> 00:21:55,320
tasks before or after moving to a new

00:21:51,420 --> 00:21:58,290
version and you can also say if you want

00:21:55,320 --> 00:22:00,300
to do it on one or all servers so a

00:21:58,290 --> 00:22:03,000
drazi see all you just want to run it on

00:22:00,300 --> 00:22:05,370
all service because you will have quite

00:22:03,000 --> 00:22:08,440
a lot of time wasted when you run it on

00:22:05,370 --> 00:22:11,630
five servers and it does the same

00:22:08,440 --> 00:22:15,590
also something that's important to say

00:22:11,630 --> 00:22:17,840
don't link settings files copy them we

00:22:15,590 --> 00:22:19,670
first linked the settings files all the

00:22:17,840 --> 00:22:23,059
time and then found out that it's

00:22:19,670 --> 00:22:25,130
probably not the best idea okay we came

00:22:23,059 --> 00:22:27,620
across that idea at two o'clock in the

00:22:25,130 --> 00:22:30,049
morning so linking the settings file was

00:22:27,620 --> 00:22:31,460
perfect but when you try to roll back

00:22:30,049 --> 00:22:33,559
and you did a change to your settings

00:22:31,460 --> 00:22:36,590
file you cannot roll back because it's a

00:22:33,559 --> 00:22:41,660
link so don't do that copy settings

00:22:36,590 --> 00:22:46,070
files what are we doing with deployment

00:22:41,660 --> 00:22:49,040
tasks we update and Link settings local

00:22:46,070 --> 00:22:52,370
files because we can we will copy it

00:22:49,040 --> 00:22:55,400
with any revision and Link it inside the

00:22:52,370 --> 00:22:59,270
revision so every deployment will be

00:22:55,400 --> 00:23:02,630
linked but we have it copied so it's

00:22:59,270 --> 00:23:04,990
also version we will link the site's

00:23:02,630 --> 00:23:07,669
default files because we have it

00:23:04,990 --> 00:23:10,790
centrally stored on one of our NFS

00:23:07,669 --> 00:23:13,040
servers we will run ad rush up t be just

00:23:10,790 --> 00:23:16,040
on one server we've already run a drazi

00:23:13,040 --> 00:23:18,169
Co both on one server and in the end we

00:23:16,040 --> 00:23:20,150
notify New Relic about the deployment

00:23:18,169 --> 00:23:21,860
which then goes back to hipchat and

00:23:20,150 --> 00:23:25,669
informs the team that the deployment

00:23:21,860 --> 00:23:28,160
happened that said having New Relic

00:23:25,669 --> 00:23:31,580
integrated with HipChat is a really cool

00:23:28,160 --> 00:23:33,679
thing because every every one is kept in

00:23:31,580 --> 00:23:36,650
the loop what's happening because any

00:23:33,679 --> 00:23:38,540
way anyone from the team knows that a

00:23:36,650 --> 00:23:40,730
deployment happens so if you see a

00:23:38,540 --> 00:23:43,549
deployment coming in and New Relic no

00:23:40,730 --> 00:23:44,990
picture duty afterwards calling you that

00:23:43,549 --> 00:23:47,750
there is something wrong with the site

00:23:44,990 --> 00:23:51,580
you know who to tell and you know who to

00:23:47,750 --> 00:23:56,870
set on fire afterwards so that's easy

00:23:51,580 --> 00:24:00,140
but we talked about it and said okay we

00:23:56,870 --> 00:24:03,799
want to just have one aliases file we

00:24:00,140 --> 00:24:08,600
sat down one weekend of work and it's

00:24:03,799 --> 00:24:11,809
currently not all rolled out yet but we

00:24:08,600 --> 00:24:15,110
change the way how we deal with the

00:24:11,809 --> 00:24:19,100
settings file add aliases file excuse me

00:24:15,110 --> 00:24:21,049
so we have just one file which has the

00:24:19,100 --> 00:24:24,139
site identifier in it

00:24:21,049 --> 00:24:27,470
and we have a set of chasing files files

00:24:24,139 --> 00:24:30,110
which define how life that life server

00:24:27,470 --> 00:24:32,239
environment should look how for example

00:24:30,110 --> 00:24:36,259
as staging environment should look like

00:24:32,239 --> 00:24:39,070
and we can define per customer how it

00:24:36,259 --> 00:24:42,649
should be it Griff it gives you complete

00:24:39,070 --> 00:24:45,950
flexibility but it adds also a lot of

00:24:42,649 --> 00:24:48,889
complexity so you need to think through

00:24:45,950 --> 00:24:51,860
it quite a lot until you get there and

00:24:48,889 --> 00:24:53,659
you know what to do if you're interested

00:24:51,860 --> 00:24:56,359
in it and if you're interested in seeing

00:24:53,659 --> 00:24:58,999
it come to me afterwards I can show you

00:24:56,359 --> 00:25:00,710
it's currently not completely rolled out

00:24:58,999 --> 00:25:04,220
because we are dealing with some

00:25:00,710 --> 00:25:08,929
problems with over writing environments

00:25:04,220 --> 00:25:11,419
because we started to have for some if

00:25:08,929 --> 00:25:14,389
you have like a feature release we have

00:25:11,419 --> 00:25:16,460
feature servers which like a dev server

00:25:14,389 --> 00:25:18,799
which just has this feature on it and

00:25:16,460 --> 00:25:23,570
people can like brush deploy this

00:25:18,799 --> 00:25:26,239
feature so it's not perfect yet let's

00:25:23,570 --> 00:25:28,820
talk about missing things so currently

00:25:26,239 --> 00:25:30,980
we also have the thing that we just want

00:25:28,820 --> 00:25:32,720
to update code we don't want to run an

00:25:30,980 --> 00:25:37,340
up day be we don't want to run something

00:25:32,720 --> 00:25:40,879
else so there is a way to override the

00:25:37,340 --> 00:25:43,789
deployment tasks but if you automate it

00:25:40,879 --> 00:25:46,999
in the way we did it it's not that easy

00:25:43,789 --> 00:25:49,940
to just say I don't want to do it so my

00:25:46,999 --> 00:25:52,850
idea is that we have somehow an

00:25:49,940 --> 00:25:54,950
identifier on the deployment tasks to

00:25:52,850 --> 00:25:56,749
say I don't want to do this set of

00:25:54,950 --> 00:26:00,049
deployment tasks currently there are

00:25:56,749 --> 00:26:01,970
mandatory tasks but I want to do

00:26:00,049 --> 00:26:04,039
something like I want to do just the

00:26:01,970 --> 00:26:06,679
linking tasks or that you have groups

00:26:04,039 --> 00:26:08,720
something like that also something if

00:26:06,679 --> 00:26:11,269
you work the way we do it and you have a

00:26:08,720 --> 00:26:13,730
new user a completely new created user

00:26:11,269 --> 00:26:17,269
and you do the rush deployed first time

00:26:13,730 --> 00:26:20,090
it will fail because trying to connect

00:26:17,269 --> 00:26:22,340
to github forces you to type yes and

00:26:20,090 --> 00:26:25,279
enter and because rush deploy is

00:26:22,340 --> 00:26:28,359
automated it will fail there is a patch

00:26:25,279 --> 00:26:31,580
I wrote which is not very nice it just

00:26:28,359 --> 00:26:33,740
runs the command and does it but it's

00:26:31,580 --> 00:26:34,820
not working for every so is for everyone

00:26:33,740 --> 00:26:38,929
so I want to do it

00:26:34,820 --> 00:26:42,500
a little bit more generically there are

00:26:38,929 --> 00:26:46,190
also breaking things so thrush changed

00:26:42,500 --> 00:26:49,100
in the recent weeks so the discovery of

00:26:46,190 --> 00:26:51,769
thrush RC files changed which leaves you

00:26:49,100 --> 00:26:54,019
behind with your entourage deploy and

00:26:51,769 --> 00:26:56,330
get a lot of errors and it is not

00:26:54,019 --> 00:26:58,820
working so that's something I'm working

00:26:56,330 --> 00:27:02,299
currently on to make this work again

00:26:58,820 --> 00:27:06,950
because it's I don't know that the exact

00:27:02,299 --> 00:27:09,559
issue queue number but thrush change

00:27:06,950 --> 00:27:12,440
because Drupal changed a little bit they

00:27:09,559 --> 00:27:15,110
want to discover the files which are for

00:27:12,440 --> 00:27:19,669
Josh just incites rush and not insights

00:27:15,110 --> 00:27:23,419
default so that the also gates give gave

00:27:19,669 --> 00:27:27,620
us some headaches drupal 8 changed but

00:27:23,419 --> 00:27:30,889
less than beginning of the year so the

00:27:27,620 --> 00:27:35,200
rush deploy should work fine with Drupal

00:27:30,889 --> 00:27:37,970
8 now because we have the the

00:27:35,200 --> 00:27:40,940
configuration files which are on life

00:27:37,970 --> 00:27:43,129
and imported are not in the files in the

00:27:40,940 --> 00:27:47,029
files anymore they are in the database

00:27:43,129 --> 00:27:51,529
so that was a bit easier there is also

00:27:47,029 --> 00:27:53,600
one park about per local warnings they

00:27:51,529 --> 00:27:55,159
can ruin your day or break the

00:27:53,600 --> 00:27:58,190
deployment so the deployment just

00:27:55,159 --> 00:28:00,350
stopped I spend around four to five

00:27:58,190 --> 00:28:02,419
hours debugging this because you just

00:28:00,350 --> 00:28:05,360
run the drudge deploy and it stops and

00:28:02,419 --> 00:28:07,639
you don't give get any error back and it

00:28:05,360 --> 00:28:10,429
was I can run it all the time my

00:28:07,639 --> 00:28:13,820
colleagues can run it sometimes and it's

00:28:10,429 --> 00:28:16,820
just because some error passing isn't

00:28:13,820 --> 00:28:18,889
done the right way and Russia ploy isn't

00:28:16,820 --> 00:28:25,600
expecting it and you are not expecting

00:28:18,889 --> 00:28:28,669
it either so yeah and who uses a pc okay

00:28:25,600 --> 00:28:32,570
the rush deploy is not nice to a PC

00:28:28,669 --> 00:28:36,049
because every time you change the

00:28:32,570 --> 00:28:39,830
symlink a PCCs oh there is new code and

00:28:36,049 --> 00:28:43,539
starts to keep depth in memory so you

00:28:39,830 --> 00:28:47,580
end up in having you a pc having old

00:28:43,539 --> 00:28:51,450
code which is not used anymore

00:28:47,580 --> 00:28:54,300
in memory that sucks it sucks that much

00:28:51,450 --> 00:28:58,970
that you sometimes kill your production

00:28:54,300 --> 00:29:02,250
environment we found out about this like

00:28:58,970 --> 00:29:04,520
rolled out rush deploy on many sites we

00:29:02,250 --> 00:29:08,070
did some deployments and then suddenly

00:29:04,520 --> 00:29:10,560
things got worse like you had problems

00:29:08,070 --> 00:29:14,310
that sites got slow you had sites that

00:29:10,560 --> 00:29:16,650
just on one server we had 500 errors and

00:29:14,310 --> 00:29:18,480
something like that and after seeing

00:29:16,650 --> 00:29:27,290
that we found out that we should

00:29:18,480 --> 00:29:40,050
probably clear a PC from time to time um

00:29:27,290 --> 00:29:45,240
yeah no I want to go bigger it should

00:29:40,050 --> 00:29:48,030
actually yeah thank you for pointing

00:29:45,240 --> 00:29:52,110
this out yeah as you told a PC should

00:29:48,030 --> 00:29:54,930
find out that oh my god I'm like share

00:29:52,110 --> 00:29:56,820
memories running full but on that

00:29:54,930 --> 00:29:59,040
version we are running there is some

00:29:56,820 --> 00:30:01,770
weird bug that if you hit like five

00:29:59,040 --> 00:30:03,930
megabytes of free space it just starts

00:30:01,770 --> 00:30:06,170
going haywire and not cleaning itself

00:30:03,930 --> 00:30:15,870
out it should but it doesn't oh yeah

00:30:06,170 --> 00:30:19,680
keep that in mind yeah the thing is on

00:30:15,870 --> 00:30:22,040
our servers we are bound to ubuntu a

00:30:19,680 --> 00:30:24,570
long-term service so we can't just

00:30:22,040 --> 00:30:29,160
exchange things so we are working on

00:30:24,570 --> 00:30:31,220
that too drupal 8 there's the

00:30:29,160 --> 00:30:34,470
configuration management initiative and

00:30:31,220 --> 00:30:36,450
as i told you beginning of the year

00:30:34,470 --> 00:30:39,360
there were two directories storing all

00:30:36,450 --> 00:30:41,820
your configuration so you had either the

00:30:39,360 --> 00:30:44,040
life configuration which is the

00:30:41,820 --> 00:30:45,870
configuration you currently use and you

00:30:44,040 --> 00:30:48,240
had the staging configuration if you

00:30:45,870 --> 00:30:50,700
change something to roll it out they

00:30:48,240 --> 00:30:55,080
found out that the idea of having that

00:30:50,700 --> 00:30:58,650
is a good idea but somehow it wasn't

00:30:55,080 --> 00:31:00,780
practical because you needed to copy

00:30:58,650 --> 00:31:01,290
files over and you couldn't version it

00:31:00,780 --> 00:31:04,050
because

00:31:01,290 --> 00:31:07,170
someone works on the same view and

00:31:04,050 --> 00:31:10,730
commits it the Chasen edmo file gots

00:31:07,170 --> 00:31:13,230
somehow corrupted and your site broke so

00:31:10,730 --> 00:31:15,480
the live configuration is now in

00:31:13,230 --> 00:31:18,060
database which eases the deployment a

00:31:15,480 --> 00:31:20,370
little bit the dealing with

00:31:18,060 --> 00:31:22,440
configuration files is also a little bit

00:31:20,370 --> 00:31:26,490
different but as I told you in the talk

00:31:22,440 --> 00:31:30,990
when you incorporate a local file you're

00:31:26,490 --> 00:31:33,330
safe head is also moving quite fast not

00:31:30,990 --> 00:31:36,030
as beginning of this year it gets stable

00:31:33,330 --> 00:31:40,650
it's more stable and doesn't break that

00:31:36,030 --> 00:31:43,110
much it should be a trashy ploy should

00:31:40,650 --> 00:31:44,880
work with Drupal 8 I did press it

00:31:43,110 --> 00:31:50,880
yesterday evening and it worked on our

00:31:44,880 --> 00:31:57,420
site so you should be fine yeah that's

00:31:50,880 --> 00:32:00,870
it some title messages we started the

00:31:57,420 --> 00:32:06,680
drudge deploy adventure around one year

00:32:00,870 --> 00:32:06,680
ago you don't need to do anything

00:32:07,310 --> 00:32:12,180
automation at once you can do little

00:32:09,600 --> 00:32:15,000
steps go with the aliases file first

00:32:12,180 --> 00:32:16,650
then clean up the settings clean up your

00:32:15,000 --> 00:32:18,510
environments go to rush deploy

00:32:16,650 --> 00:32:20,700
afterwards you don't need to do anything

00:32:18,510 --> 00:32:24,660
at once because if you try to do this

00:32:20,700 --> 00:32:27,270
it's al a little bit too much automatic

00:32:24,660 --> 00:32:30,540
alias files are awesome because you

00:32:27,270 --> 00:32:34,500
change you move aside to another server

00:32:30,540 --> 00:32:37,260
view just change in adjacent file okay

00:32:34,500 --> 00:32:39,660
it's now in server too and you don't

00:32:37,260 --> 00:32:42,810
need to tell anyone because they run

00:32:39,660 --> 00:32:46,140
just rush deploy and they rush deploy

00:32:42,810 --> 00:32:47,730
knows that it's there you also need to

00:32:46,140 --> 00:32:50,550
clean up your environments that's

00:32:47,730 --> 00:32:53,520
something I do regularly or I try to do

00:32:50,550 --> 00:32:55,890
it regularly because things mess up

00:32:53,520 --> 00:32:58,170
sometimes you just deploy a patch

00:32:55,890 --> 00:33:01,080
somewhere and you do something and rush

00:32:58,170 --> 00:33:03,240
deploy really forces you to do at least

00:33:01,080 --> 00:33:06,330
in the life environments nice work that

00:33:03,240 --> 00:33:08,610
you don't deploy something just on life

00:33:06,330 --> 00:33:11,070
so because on the next deployment when

00:33:08,610 --> 00:33:14,800
somebody does the right process you just

00:33:11,070 --> 00:33:18,370
trash their changes standardization safe

00:33:14,800 --> 00:33:20,800
time that's I can leave that without

00:33:18,370 --> 00:33:25,510
saying something it's just the way it is

00:33:20,800 --> 00:33:27,910
and deployments are fun when you run

00:33:25,510 --> 00:33:32,800
them with brush deploy because anybody

00:33:27,910 --> 00:33:35,110
can do it in the company so yeah if you

00:33:32,800 --> 00:33:38,800
want to download the slides you can go

00:33:35,110 --> 00:33:43,000
to s nerdy th / Josh deploy Amsterdam

00:33:38,800 --> 00:33:48,100
and yeah that's it I'll be here for a

00:33:43,000 --> 00:33:51,100
quick Q&A if you have some questions can

00:33:48,100 --> 00:33:53,020
you probably pass the mic somehow

00:33:51,100 --> 00:34:02,110
because it's all recorded and it's

00:33:53,020 --> 00:34:05,830
easier when people have it there can you

00:34:02,110 --> 00:34:10,870
specify extra commands to execute their

00:34:05,830 --> 00:34:14,950
targets so just executing comments on

00:34:10,870 --> 00:34:17,080
one target when you when you deploy to

00:34:14,950 --> 00:34:19,750
staging environment I want to execute

00:34:17,080 --> 00:34:24,190
extra commands like enable the mail

00:34:19,750 --> 00:34:29,230
rewrite module etc currently not that's

00:34:24,190 --> 00:34:32,679
also something you could try to do or is

00:34:29,230 --> 00:34:38,560
something we also want to do that module

00:34:32,679 --> 00:34:40,000
enabling disabling thanks probably he

00:34:38,560 --> 00:34:44,250
can answer that question a little better

00:34:40,000 --> 00:34:46,540
yeah so and that's a very very common

00:34:44,250 --> 00:34:49,060
like sort of feature request that ended

00:34:46,540 --> 00:34:51,580
up in the queue for nurse deploy and yes

00:34:49,060 --> 00:34:54,190
like there could be a lot of Drupal

00:34:51,580 --> 00:34:57,190
specific tasks that you could ask you it

00:34:54,190 --> 00:35:00,670
to do things like that but you can still

00:34:57,190 --> 00:35:02,560
do all of it by just creating an after

00:35:00,670 --> 00:35:04,660
task like a creating a task like he

00:35:02,560 --> 00:35:07,360
showed and then run it or set it to run

00:35:04,660 --> 00:35:12,430
before or after the deploy but I would

00:35:07,360 --> 00:35:14,620
run for every deployment if he asks

00:35:12,430 --> 00:35:17,920
specifically about like if I have a

00:35:14,620 --> 00:35:21,460
stage alias and I just deploy on stage

00:35:17,920 --> 00:35:24,580
he just wants to run it for the stage

00:35:21,460 --> 00:35:25,600
also life and it's common I mean I used

00:35:24,580 --> 00:35:27,040
to do some cups around all the time

00:35:25,600 --> 00:35:28,240
where you have I mean you have your

00:35:27,040 --> 00:35:30,460
things that you're going to run on every

00:35:28,240 --> 00:35:33,220
deploy but not every deploy needs the

00:35:30,460 --> 00:35:34,570
same tasks like say like rebuilding node

00:35:33,220 --> 00:35:35,710
access permissions you definitely don't

00:35:34,570 --> 00:35:37,510
want to run that but sometimes you need

00:35:35,710 --> 00:35:39,400
to do it once I don't think there's

00:35:37,510 --> 00:35:42,280
anything wrong with just make putting

00:35:39,400 --> 00:35:44,200
that in your file maybe committed it

00:35:42,280 --> 00:35:45,790
running it and then taking it out yet

00:35:44,200 --> 00:35:47,350
because then you're documenting I needed

00:35:45,790 --> 00:35:50,620
that for this deploy and I don't need it

00:35:47,350 --> 00:36:06,390
anymore yeah that's also a way a lot of

00:35:50,620 --> 00:36:06,390
questions no yeah I can rephrase it yeah

00:36:09,270 --> 00:36:17,680
um yes no so he was asking if the path

00:36:15,520 --> 00:36:20,650
to the files directory needs to be set

00:36:17,680 --> 00:36:25,060
consists Lee yes but it's a perseid

00:36:20,650 --> 00:36:27,550
consistently yeah because every every

00:36:25,060 --> 00:36:30,760
side has a different configuration so

00:36:27,550 --> 00:36:32,530
you can have it on every on every side a

00:36:30,760 --> 00:36:43,570
little bit set a little bit different

00:36:32,530 --> 00:36:48,180
that should work good question um no

00:36:43,570 --> 00:36:51,760
unless you do a rush SQL dump before so

00:36:48,180 --> 00:36:54,130
what we are doing when we we have two

00:36:51,760 --> 00:36:56,650
types of deployments currently one is

00:36:54,130 --> 00:36:58,900
when we can agree with the customer that

00:36:56,650 --> 00:37:00,460
they will have a staging server created

00:36:58,900 --> 00:37:03,280
to two hours before and they have

00:37:00,460 --> 00:37:06,190
accountant freeze so we can just prepare

00:37:03,280 --> 00:37:08,800
everything on the staging and then move

00:37:06,190 --> 00:37:11,080
to databases and if something is not all

00:37:08,800 --> 00:37:15,130
right they will spot in on the staging

00:37:11,080 --> 00:37:17,230
but rolling back if you have a lot of

00:37:15,130 --> 00:37:21,850
user-generated content that will create

00:37:17,230 --> 00:37:24,310
some pain for you so no not yet but you

00:37:21,850 --> 00:37:27,180
could run a task to dump the database

00:37:24,310 --> 00:37:31,450
and then for the rollback unit just to

00:37:27,180 --> 00:37:34,030
keep it in there one related thing about

00:37:31,450 --> 00:37:36,190
that because you showed the you can put

00:37:34,030 --> 00:37:37,720
tasks before and after yeah that's

00:37:36,190 --> 00:37:40,539
actually very much related to roll back

00:37:37,720 --> 00:37:42,489
and so any task that's before

00:37:40,539 --> 00:37:45,549
if it fails that automatically triggers

00:37:42,489 --> 00:37:49,029
a rollback so in the case where you

00:37:45,549 --> 00:37:50,739
deploy it's already live things are

00:37:49,029 --> 00:37:54,369
happening and you need to roll back then

00:37:50,739 --> 00:37:55,569
you're you're in pain but if you if you

00:37:54,369 --> 00:37:57,039
have a bunch of tasks that are running

00:37:55,569 --> 00:38:00,160
in the database and they're all in

00:37:57,039 --> 00:38:02,619
before hooks as long as you in the at

00:38:00,160 --> 00:38:05,799
the start of it say dump the database

00:38:02,619 --> 00:38:08,169
first any of those can fail and then you

00:38:05,799 --> 00:38:11,499
can still restore that and then flip

00:38:08,169 --> 00:38:13,119
back so the the tooling is there for it

00:38:11,499 --> 00:38:15,459
you just have to set that up yourself

00:38:13,119 --> 00:38:18,089
depending on how you need it done yeah

00:38:15,459 --> 00:38:18,089
that's right

00:38:29,519 --> 00:38:36,880
he was asking about if we wanted to do

00:38:33,099 --> 00:38:40,059
stage deployment and using features yes

00:38:36,880 --> 00:38:42,789
we thought about that and we are using

00:38:40,059 --> 00:38:47,169
it for some sites that we run we use

00:38:42,789 --> 00:38:49,059
features but it heavily depends on the

00:38:47,169 --> 00:38:52,150
side sometimes if you just need to push

00:38:49,059 --> 00:38:55,719
out some code or some CSS changes it's

00:38:52,150 --> 00:38:58,689
easier to just do it that way we also

00:38:55,719 --> 00:39:01,179
have something where our developers are

00:38:58,689 --> 00:39:04,779
working on which is kind of like

00:39:01,179 --> 00:39:07,650
features but it's for it's easier to

00:39:04,779 --> 00:39:13,349
just code things and do the changes in

00:39:07,650 --> 00:39:17,880
up DB hook so we partially use that yes

00:39:13,349 --> 00:39:17,880
does that answer you catch question

00:39:20,939 --> 00:39:29,410
conversation right no so everything that

00:39:27,189 --> 00:39:32,140
needs to run stage so we have one

00:39:29,410 --> 00:39:35,349
customer which has like publishing of

00:39:32,140 --> 00:39:39,489
yearly results so we prepare everything

00:39:35,349 --> 00:39:43,209
on a staging environment and then copy

00:39:39,489 --> 00:39:49,529
it over to have a consistent state of

00:39:43,209 --> 00:39:49,529
everything so we don't use it yet yes

00:39:57,109 --> 00:40:06,090
hmm that's not related to to draw see

00:40:02,609 --> 00:40:09,030
ploy and because Russia ploy just does

00:40:06,090 --> 00:40:11,520
the code site the SQL sink is done still

00:40:09,030 --> 00:40:14,310
manually currently but you could also do

00:40:11,520 --> 00:40:21,750
it I guess there is a way to exclude

00:40:14,310 --> 00:40:24,450
tables from sing yeah SQL sink is not

00:40:21,750 --> 00:40:25,890
part of the game so you can you don't

00:40:24,450 --> 00:40:27,900
need to ask you think that's not

00:40:25,890 --> 00:40:36,680
mandatory you can script it but it's not

00:40:27,900 --> 00:40:40,440
mandatory all the questions not okay

00:40:36,680 --> 00:40:41,880
please rate my talk I'm happy to have

00:40:40,440 --> 00:40:44,880
some feedback and if there are questions

00:40:41,880 --> 00:40:48,410
or you want to see something just come

00:40:44,880 --> 00:40:48,410

YouTube URL: https://www.youtube.com/watch?v=AY_1N4jkyrA


