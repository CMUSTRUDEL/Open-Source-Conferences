Title: DrupalCon Amsterdam 2014: New Wave PHP
Publication date: 2014-10-01
Playlist: DrupalCon Amsterdam - September 2014
Description: 
	Speakers: lornajane
With new PHP versions being released more often, and projects including Drupal increasing their minimum requirements for PHP versions, it's clear that things are changing rapidly. This session is all about the changes introduced in newer versions of PHP (5.3 onwards), and what that means for PHP projects everywhere. There will be practical examples of the shiny new features, advice on finding hosting and safely upgrading existing projects, and news about the performance improvements you can expect as you move between the versions. The way PHP is evolving is truly exciting so come and join in on the fun!
Captions: 
	00:00:00,000 --> 00:00:05,430
well good afternoon hello thank you very

00:00:03,360 --> 00:00:09,900
much for coming to this talk about new

00:00:05,430 --> 00:00:12,059
wave PHP if you are fat all the way in

00:00:09,900 --> 00:00:14,639
the back would you mind coming a bit

00:00:12,059 --> 00:00:16,650
closer there's lots of seeds down the

00:00:14,639 --> 00:00:18,510
front and it's a bit weird to have

00:00:16,650 --> 00:00:20,970
people sitting at such a very safe

00:00:18,510 --> 00:00:22,380
distance so while I introduced just

00:00:20,970 --> 00:00:24,539
please get out of your chairs and come

00:00:22,380 --> 00:00:30,210
down a little bit and join the rest of

00:00:24,539 --> 00:00:35,399
the group my name is Lorna and I come to

00:00:30,210 --> 00:00:37,350
you from the island we call PHP I keep

00:00:35,399 --> 00:00:39,719
saying to people when they say or how do

00:00:37,350 --> 00:00:42,450
you work with Drupal I keep saying I

00:00:39,719 --> 00:00:43,710
have a naturally install Drupal it's

00:00:42,450 --> 00:00:45,450
becoming my catchphrase so I'm

00:00:43,710 --> 00:00:47,309
definitely going to at least install

00:00:45,450 --> 00:00:51,539
Drupal they call before I come to my

00:00:47,309 --> 00:00:54,000
next drupalcon but that means that

00:00:51,539 --> 00:00:55,590
there's no Drupal context in my talks

00:00:54,000 --> 00:00:58,050
I'm just here to tell you what's

00:00:55,590 --> 00:01:00,690
happened in PHP and then I'm going to

00:00:58,050 --> 00:01:07,080
stand back and watch as you build great

00:01:00,690 --> 00:01:12,030
things based on that before we talk

00:01:07,080 --> 00:01:14,549
about new PHP I want to first of all

00:01:12,030 --> 00:01:19,380
sort of set the scene described the

00:01:14,549 --> 00:01:22,560
landscape of PHP and its story that

00:01:19,380 --> 00:01:27,930
brings us to hear so the landscape looks

00:01:22,560 --> 00:01:31,710
something like this with PHP 5.2 over on

00:01:27,930 --> 00:01:36,150
this side released in 2006 really solid

00:01:31,710 --> 00:01:38,670
version 5.2 something was the minimum

00:01:36,150 --> 00:01:40,770
requirements of Drupal 7 so a bunch of

00:01:38,670 --> 00:01:43,590
you are running either on a 5.2 platform

00:01:40,770 --> 00:01:49,220
or just using the 5.2 features because

00:01:43,590 --> 00:01:53,939
that's the agreed minimum platform 5.3

00:01:49,220 --> 00:01:59,070
2009 5.3 was a landmark release in the

00:01:53,939 --> 00:02:01,469
world of PHP it has so much good stuff

00:01:59,070 --> 00:02:04,290
you're about to see a lot of it there is

00:02:01,469 --> 00:02:06,060
so much good stuff it's only some kind

00:02:04,290 --> 00:02:09,800
of technicality that I don't understand

00:02:06,060 --> 00:02:13,230
which means that PHP 5.3 was not a major

00:02:09,800 --> 00:02:13,770
version release for PHP we didn't break

00:02:13,230 --> 00:02:15,630
a lot

00:02:13,770 --> 00:02:19,700
quits compatibility but we certainly

00:02:15,630 --> 00:02:19,700
introduced a good chunk of new features

00:02:20,570 --> 00:02:27,750
5 for 2012 54 is really interesting

00:02:25,530 --> 00:02:30,330
release because you can see that this

00:02:27,750 --> 00:02:35,000
point the release is start to get closer

00:02:30,330 --> 00:02:39,660
together PHP adopted its RFC process and

00:02:35,000 --> 00:02:41,850
aspires to an annual release cycle we

00:02:39,660 --> 00:02:44,160
actually run at about 14 15 months

00:02:41,850 --> 00:02:45,840
between releases at the moment in PHP I

00:02:44,160 --> 00:02:50,460
still think that's much better than

00:02:45,840 --> 00:02:56,580
three years so it's all good from 5.4 to

00:02:50,460 --> 00:03:00,030
5.5 25.6 smaller intervals this means

00:02:56,580 --> 00:03:02,760
fewer features to upgrade between these

00:03:00,030 --> 00:03:04,710
systems is much much less of a big deal

00:03:02,760 --> 00:03:10,050
because the difference between the

00:03:04,710 --> 00:03:20,220
systems is much reduced 5.6 is current

00:03:10,050 --> 00:03:23,840
stable PHP 5.5 is stable PHP 5.5 5.4 is

00:03:20,220 --> 00:03:26,730
now in 12 months of security fixes only

00:03:23,840 --> 00:03:29,970
which I expect will mean that we roll a

00:03:26,730 --> 00:03:31,820
single final five point for release in

00:03:29,970 --> 00:03:35,180
September next year and that's your lot

00:03:31,820 --> 00:03:38,850
know that nothing else will get fixed

00:03:35,180 --> 00:03:40,770
then there's this fog of unknown there

00:03:38,850 --> 00:03:43,500
is a great unknown in the future of PHP

00:03:40,770 --> 00:03:46,709
and at some point on the other side of

00:03:43,500 --> 00:03:48,420
the fog will be PHP 7 i'm not going to

00:03:46,709 --> 00:03:50,520
talk about PHP seven today because i

00:03:48,420 --> 00:03:53,700
think the double community is pragmatic

00:03:50,520 --> 00:03:56,040
and we deal with real things so this is

00:03:53,700 --> 00:04:02,000
where we are right now this is today and

00:03:56,040 --> 00:04:08,610
we're on PHP 5.6 the bad news is drupal

00:04:02,000 --> 00:04:10,680
you are here 2006 the good news is that

00:04:08,610 --> 00:04:13,830
means there's loads of good stuff ahead

00:04:10,680 --> 00:04:16,080
of you in PHP which already exists which

00:04:13,830 --> 00:04:18,510
everyone has already written about which

00:04:16,080 --> 00:04:22,080
is ready for you to use so let me show

00:04:18,510 --> 00:04:26,100
you the best bits of the new shiny the

00:04:22,080 --> 00:04:28,740
first feature i want to cover seems like

00:04:26,100 --> 00:04:31,410
such a small thing but it'll be in every

00:04:28,740 --> 00:04:35,190
project you use and everyone can

00:04:31,410 --> 00:04:37,130
understand it this very familiar dura

00:04:35,190 --> 00:04:41,070
name underscore underscore file

00:04:37,130 --> 00:04:43,500
incantation in PHP 5.3 we introduced

00:04:41,070 --> 00:04:45,570
another of those magic constants so

00:04:43,500 --> 00:04:49,080
underscore underscore der underscore

00:04:45,570 --> 00:04:51,690
underscore now works in PHP 5.3 onwards

00:04:49,080 --> 00:04:55,140
to get the directory name of your

00:04:51,690 --> 00:04:59,790
currently running script it's the little

00:04:55,140 --> 00:05:01,790
things that make all the difference also

00:04:59,790 --> 00:05:06,360
in 5.3 we introduced a feature called

00:05:01,790 --> 00:05:09,090
anonymous functions I know that most of

00:05:06,360 --> 00:05:12,900
you are full stack developers so you've

00:05:09,090 --> 00:05:15,960
probably seen these in JavaScript for me

00:05:12,900 --> 00:05:19,050
from where I'm standing now it's really

00:05:15,960 --> 00:05:23,610
difficult to imagine that anonymous

00:05:19,050 --> 00:05:25,200
functions wasn't always part of PHP 5.3

00:05:23,610 --> 00:05:27,450
has been out for five years so I guess I

00:05:25,200 --> 00:05:30,560
just have a really short term memory but

00:05:27,450 --> 00:05:33,000
having this ability in your platform

00:05:30,560 --> 00:05:36,300
opens the door to all kinds of really

00:05:33,000 --> 00:05:38,310
neat and elegant ways of expressing the

00:05:36,300 --> 00:05:41,700
functionality that you are building in

00:05:38,310 --> 00:05:43,530
your applications so where once we would

00:05:41,700 --> 00:05:46,980
have had code that looks like this I'm

00:05:43,530 --> 00:05:49,710
declaring an array I'm declaring a

00:05:46,980 --> 00:05:53,360
function the function accepts two

00:05:49,710 --> 00:05:57,270
parameters and i use it for array walk

00:05:53,360 --> 00:06:00,840
this function here but formats my array

00:05:57,270 --> 00:06:06,000
when called by a ray walk is a used ones

00:06:00,840 --> 00:06:07,910
function I don't want to discover when I

00:06:06,000 --> 00:06:12,690
come back and need to change my function

00:06:07,910 --> 00:06:13,920
that some clown has reused my function

00:06:12,690 --> 00:06:16,200
somewhere else in the application

00:06:13,920 --> 00:06:18,270
completely because by coincidence he

00:06:16,200 --> 00:06:21,450
needed to print the same array structure

00:06:18,270 --> 00:06:24,600
out and now if I change it where I

00:06:21,450 --> 00:06:25,650
originally intended it to be used it's

00:06:24,600 --> 00:06:28,460
going to have a knock-on effect

00:06:25,650 --> 00:06:32,330
somewhere else anonymous functions are

00:06:28,460 --> 00:06:34,710
perfect for this single-use

00:06:32,330 --> 00:06:38,720
functionality so today the code would

00:06:34,710 --> 00:06:42,350
look like this the array is the same

00:06:38,720 --> 00:06:44,600
when a call or a walk instead of passing

00:06:42,350 --> 00:06:48,200
the name of the function or another

00:06:44,600 --> 00:06:49,700
callable thing I can just declare in the

00:06:48,200 --> 00:06:52,970
place where it's going to be used a

00:06:49,700 --> 00:06:58,520
function that applies here so it allows

00:06:52,970 --> 00:07:00,560
us to do very neat one-off pieces of

00:06:58,520 --> 00:07:03,140
functionality just in the place where

00:07:00,560 --> 00:07:04,730
they need they are needed without having

00:07:03,140 --> 00:07:09,020
to give them names and kind of polluting

00:07:04,730 --> 00:07:11,090
our namespace we can also declare these

00:07:09,020 --> 00:07:15,700
anonymous functions and assign them to

00:07:11,090 --> 00:07:17,900
variables we can pass them as arguments

00:07:15,700 --> 00:07:20,240
we can take this little piece of

00:07:17,900 --> 00:07:23,480
functionality and inject it as a

00:07:20,240 --> 00:07:25,580
dependency to some other code you might

00:07:23,480 --> 00:07:28,070
have a class that has an array walk and

00:07:25,580 --> 00:07:29,750
you can give a different set of

00:07:28,070 --> 00:07:32,930
functionality each time you call it

00:07:29,750 --> 00:07:37,570
since some really neat sorting solutions

00:07:32,930 --> 00:07:37,570
which do something much like this

00:07:39,460 --> 00:07:44,210
namespaces are a game changer you've

00:07:42,770 --> 00:07:47,780
probably been hearing quite a lot about

00:07:44,210 --> 00:07:52,190
them this week namespaces really changed

00:07:47,780 --> 00:07:55,370
the world of PHP they changed the way

00:07:52,190 --> 00:07:57,500
that we organize our code they change

00:07:55,370 --> 00:07:59,530
the way that we package our code and the

00:07:57,500 --> 00:08:04,970
way that we share our code as a

00:07:59,530 --> 00:08:08,090
community Drupal 8 building on Symphony

00:08:04,970 --> 00:08:14,180
components it's namespaces that makes

00:08:08,090 --> 00:08:17,000
this possible when you write code you

00:08:14,180 --> 00:08:19,250
will put it in a namespace or perhaps a

00:08:17,000 --> 00:08:23,540
nested namespaces that relate to what

00:08:19,250 --> 00:08:26,270
that code does the problem with

00:08:23,540 --> 00:08:28,880
combining frameworks CMS's and other

00:08:26,270 --> 00:08:34,130
libraries is that everybody's got a log

00:08:28,880 --> 00:08:36,430
class and a user class we can't declare

00:08:34,130 --> 00:08:39,409
two of those in PHP and the world ends

00:08:36,430 --> 00:08:42,169
prior to 5.3 we sort of prefixed with

00:08:39,409 --> 00:08:43,370
lots of long-winded class names on the

00:08:42,169 --> 00:08:47,510
beginning zend framework was

00:08:43,370 --> 00:08:51,500
particularly bad at this now we have

00:08:47,510 --> 00:08:52,340
namespaces we can combine those two

00:08:51,500 --> 00:08:54,410
things

00:08:52,340 --> 00:08:58,370
we can give our classes short and snappy

00:08:54,410 --> 00:09:00,080
names they have a full name we can give

00:08:58,370 --> 00:09:02,810
them a nickname to keep our code very

00:09:00,080 --> 00:09:05,060
readable and yet still be specific about

00:09:02,810 --> 00:09:12,500
which log class it was that we wanted to

00:09:05,060 --> 00:09:15,410
use Drupal has adopted the PSR for

00:09:12,500 --> 00:09:17,330
standard which so here's our PHP

00:09:15,410 --> 00:09:19,610
standards recommendations we agree on

00:09:17,330 --> 00:09:21,410
how to do stuff and that allows us to

00:09:19,610 --> 00:09:23,890
interoperate between different

00:09:21,410 --> 00:09:26,690
frameworks and different applications

00:09:23,890 --> 00:09:29,570
BSR for specifically is about

00:09:26,690 --> 00:09:32,780
autoloading it lays out the rules for

00:09:29,570 --> 00:09:35,240
how to name your code your classes your

00:09:32,780 --> 00:09:37,070
name spaces how that should map to where

00:09:35,240 --> 00:09:38,450
the files are in which directory they

00:09:37,070 --> 00:09:41,480
should go in and how everything should

00:09:38,450 --> 00:09:43,640
be named when you follow these rules now

00:09:41,480 --> 00:09:47,980
I can load your code just as easily as

00:09:43,640 --> 00:09:47,980
his code just as easily as her library

00:09:48,280 --> 00:09:55,790
it opens up the possibility of tools

00:09:51,800 --> 00:09:59,930
like composer that can be literate to

00:09:55,790 --> 00:10:02,060
understand the changes that we make and

00:09:59,930 --> 00:10:05,600
the way that we want to collaborate and

00:10:02,060 --> 00:10:07,250
use the tools built by one person to

00:10:05,600 --> 00:10:10,310
build upon them stand on their shoulders

00:10:07,250 --> 00:10:15,170
and Bing build the next thing namespace

00:10:10,310 --> 00:10:17,960
is open the door to composer this is a

00:10:15,170 --> 00:10:21,230
big change in a PHP community we are no

00:10:17,960 --> 00:10:23,240
longer are you as end developer are you

00:10:21,230 --> 00:10:28,940
a symphony developer are you a cake

00:10:23,240 --> 00:10:33,260
developer those lines are blurring I was

00:10:28,940 --> 00:10:35,960
a conference in 2009 HP 5.3 was probably

00:10:33,260 --> 00:10:41,300
just released or newly released a bunch

00:10:35,960 --> 00:10:45,650
of framework leads sat down in the same

00:10:41,300 --> 00:10:47,060
room as one another and agreed how they

00:10:45,650 --> 00:10:49,670
would implement namespaces in their own

00:10:47,060 --> 00:10:52,940
projects so that everybody else could

00:10:49,670 --> 00:10:57,860
you start to cross pick a mix all the

00:10:52,940 --> 00:11:01,820
different modules at the time that was

00:10:57,860 --> 00:11:05,279
unheard of the frameworks were at war

00:11:01,820 --> 00:11:06,829
they had contempt for one another

00:11:05,279 --> 00:11:09,360
the rest of us stood in the corridor

00:11:06,829 --> 00:11:12,329
this thing at the door to make sure

00:11:09,360 --> 00:11:14,939
everyone was okay and out of that

00:11:12,329 --> 00:11:16,529
meeting came the PSR standards and now

00:11:14,939 --> 00:11:20,519
we have composure we can build on that

00:11:16,529 --> 00:11:24,120
and I think namespaces open the door for

00:11:20,519 --> 00:11:26,730
this the actual implementation of

00:11:24,120 --> 00:11:29,339
namespaces is trivial at the top of your

00:11:26,730 --> 00:11:31,860
class file declare which namespace you

00:11:29,339 --> 00:11:34,529
want this class to be in you will have

00:11:31,860 --> 00:11:37,470
many classes in each namespace and they

00:11:34,529 --> 00:11:39,449
will probably map where namespaces match

00:11:37,470 --> 00:11:42,300
directory names and the class names are

00:11:39,449 --> 00:11:45,029
within that I've declared a non sense

00:11:42,300 --> 00:11:49,519
class it has one property and one method

00:11:45,029 --> 00:11:52,620
I love writing example code for slides

00:11:49,519 --> 00:11:55,980
must be no more than 11 lines long 58

00:11:52,620 --> 00:11:58,949
characters wide go when you call this

00:11:55,980 --> 00:12:01,829
I've required the file have included the

00:11:58,949 --> 00:12:04,949
file there and I can just use that name

00:12:01,829 --> 00:12:08,699
space to say the nonsense class I mean

00:12:04,949 --> 00:12:12,720
Lorna's nonsense then I just instantiate

00:12:08,699 --> 00:12:14,610
the class call the method when you're

00:12:12,720 --> 00:12:16,800
using namespaces if you do want to use a

00:12:14,610 --> 00:12:19,230
class name that's in the global

00:12:16,800 --> 00:12:20,759
namespace like standard class you just

00:12:19,230 --> 00:12:23,490
need to prefix with the namespace

00:12:20,759 --> 00:12:27,899
operator so PHP knows go back to the top

00:12:23,490 --> 00:12:28,949
of the tree for this I totally forgot to

00:12:27,899 --> 00:12:31,529
mention this at the start but if you

00:12:28,949 --> 00:12:33,839
want to ask any questions just come down

00:12:31,529 --> 00:12:36,089
to one of the mics and then i'll

00:12:33,839 --> 00:12:37,709
immediately just call on you so you can

00:12:36,089 --> 00:12:42,139
wave if you like but I needed to come to

00:12:37,709 --> 00:12:42,139
the mic to ask a question come anytime

00:12:48,819 --> 00:12:54,729
let me show you a feature from PHP 5.4 I

00:12:52,869 --> 00:12:56,799
know that you're moving to 5.4 for

00:12:54,729 --> 00:13:00,399
Drupal 8 with a minimum version this is

00:12:56,799 --> 00:13:02,859
good news there's good stuff here p

00:13:00,399 --> 00:13:05,769
r2bees own web server okay so PHP needs

00:13:02,859 --> 00:13:09,249
a web server this is the feature that

00:13:05,769 --> 00:13:11,079
made me go really because I've been

00:13:09,249 --> 00:13:12,699
setting up virtual hosts for 10 years

00:13:11,079 --> 00:13:15,129
and they work really well and let me

00:13:12,699 --> 00:13:18,819
know you are solving a problem that does

00:13:15,129 --> 00:13:20,649
not exist then actually started using

00:13:18,819 --> 00:13:24,189
PHP zone web server and I now cannot

00:13:20,649 --> 00:13:26,589
imagine life without it at all so it

00:13:24,189 --> 00:13:29,529
just turns out that I know nothing and

00:13:26,589 --> 00:13:32,259
this is a really cool feature it's part

00:13:29,529 --> 00:13:36,189
of a command blind PHP set up so you run

00:13:32,259 --> 00:13:38,979
PHP with this dash capital s local host

00:13:36,189 --> 00:13:42,729
port number now if you visit localhost

00:13:38,979 --> 00:13:44,799
colon 8080 in your browser the files

00:13:42,729 --> 00:13:48,039
that were in this directory become your

00:13:44,799 --> 00:13:50,169
web root you don't set up a virtual host

00:13:48,039 --> 00:13:51,970
you don't need to reconfigure things if

00:13:50,169 --> 00:13:53,919
you're using subversion and you have

00:13:51,970 --> 00:13:55,329
multiple branches check tiles are

00:13:53,919 --> 00:13:58,209
different directories you don't need to

00:13:55,329 --> 00:13:59,559
reconfigure your routing you just spin

00:13:58,209 --> 00:14:01,179
up the web server in the directory that

00:13:59,559 --> 00:14:04,059
you're interested in and you work with

00:14:01,179 --> 00:14:06,369
it from there I'm a consultant I work

00:14:04,059 --> 00:14:08,369
with lots and lots of different projects

00:14:06,369 --> 00:14:10,479
and I also write books and talks and

00:14:08,369 --> 00:14:13,539
example code for all kinds of things

00:14:10,479 --> 00:14:16,929
there's having any entries in my virtual

00:14:13,539 --> 00:14:18,729
hosts directory now everything Hera

00:14:16,929 --> 00:14:20,769
things just spin at the web server and

00:14:18,729 --> 00:14:23,409
have a play when you do this is a

00:14:20,769 --> 00:14:25,239
screenshot of what happens so I started

00:14:23,409 --> 00:14:27,639
the web server from the command prompt

00:14:25,239 --> 00:14:30,669
and it kind of says yes hello I'm

00:14:27,639 --> 00:14:33,249
working then it starts to show you the

00:14:30,669 --> 00:14:36,129
web logs so you can see your access logs

00:14:33,249 --> 00:14:39,339
as they go past if an error occurs

00:14:36,129 --> 00:14:41,589
you'll see that here as well and I find

00:14:39,339 --> 00:14:43,269
it really convenient way to develop just

00:14:41,589 --> 00:14:45,309
to fire this up have it running in my

00:14:43,269 --> 00:14:48,059
terminal and see oh wait there's a lot

00:14:45,309 --> 00:14:51,009
of red there I think I broke something

00:14:48,059 --> 00:14:54,220
it's very very instant I see a lot of

00:14:51,009 --> 00:14:56,139
red generally I break stuff it's very

00:14:54,220 --> 00:14:59,949
instant and it's very it's very real i

00:14:56,139 --> 00:15:01,029
find it really easy to work with some

00:14:59,949 --> 00:15:01,810
things you need to know about the web

00:15:01,029 --> 00:15:05,830
server

00:15:01,810 --> 00:15:07,380
it's written in PHP so if your PHP fatal

00:15:05,830 --> 00:15:11,279
errors you just lost your web server

00:15:07,380 --> 00:15:15,550
like one crushes the other one just went

00:15:11,279 --> 00:15:18,960
it's also not at all intended for

00:15:15,550 --> 00:15:23,830
production use it serves requests

00:15:18,960 --> 00:15:26,410
sequentially think about that whenever

00:15:23,830 --> 00:15:29,020
anyone hits your site that request has

00:15:26,410 --> 00:15:30,220
to complete before the next request can

00:15:29,020 --> 00:15:32,320
begin to be said you're not going to run

00:15:30,220 --> 00:15:34,390
this in production someone always comes

00:15:32,320 --> 00:15:36,790
and tells me that they do it's awesome

00:15:34,390 --> 00:15:38,860
for things like admin tools running

00:15:36,790 --> 00:15:41,050
internal services in the office web

00:15:38,860 --> 00:15:42,279
server for the bug tracker anything

00:15:41,050 --> 00:15:44,380
which isn't going to be high traffic

00:15:42,279 --> 00:15:49,660
it's perfect but for a client facing

00:15:44,380 --> 00:15:51,400
site probably not there's a load of

00:15:49,660 --> 00:15:54,610
things you can do with the web server so

00:15:51,400 --> 00:15:57,220
let me just give you a quick rundown you

00:15:54,610 --> 00:15:59,170
can instead of localhost specify a

00:15:57,220 --> 00:16:02,290
domain name it's long sucks in your

00:15:59,170 --> 00:16:04,870
hosts file it'll work if it's in someone

00:16:02,290 --> 00:16:05,890
else's host file and the IP points to

00:16:04,870 --> 00:16:08,230
your machine and they're on the same

00:16:05,890 --> 00:16:09,790
network then they can access it too so

00:16:08,230 --> 00:16:14,410
it's a very easy way to put up a test

00:16:09,790 --> 00:16:16,360
site in the office the dash t is to

00:16:14,410 --> 00:16:18,130
specify where the web root is I

00:16:16,360 --> 00:16:19,600
mentioned it's quite easy to crash this

00:16:18,130 --> 00:16:21,910
web server especially if you're using

00:16:19,600 --> 00:16:25,390
slightly flaky PHP projects that'll be

00:16:21,910 --> 00:16:28,000
me so you'll probably run it under a

00:16:25,390 --> 00:16:29,950
tools such as supervisor d where if it

00:16:28,000 --> 00:16:32,440
crashes supervisor will say oops and

00:16:29,950 --> 00:16:33,970
bring it back up again you don't

00:16:32,440 --> 00:16:37,810
typically run that from the directory

00:16:33,970 --> 00:16:40,150
where index PHP lives so dashti just

00:16:37,810 --> 00:16:44,520
lets you say this is the webroot run it

00:16:40,150 --> 00:16:48,810
from here the dash c is to supply a

00:16:44,520 --> 00:16:51,610
configuration file PHP ships with

00:16:48,810 --> 00:16:53,709
recommended ini configs for development

00:16:51,610 --> 00:16:55,990
and production I would recommend that

00:16:53,709 --> 00:17:00,550
when you when you use PHP built-in web

00:16:55,990 --> 00:17:02,350
server that you do use a config file by

00:17:00,550 --> 00:17:05,220
default it doesn't it doesn't use a

00:17:02,350 --> 00:17:08,140
default config file or anything it just

00:17:05,220 --> 00:17:11,949
uses PHP's built-in language defaults

00:17:08,140 --> 00:17:13,810
and they're a bit odd some of them have

00:17:11,949 --> 00:17:15,030
just been there for a long time and the

00:17:13,810 --> 00:17:17,280
memory limits really low and

00:17:15,030 --> 00:17:19,680
strange things happen so I would

00:17:17,280 --> 00:17:22,440
recommend that you use some kind of

00:17:19,680 --> 00:17:24,900
default config file as any PHP dot ini

00:17:22,440 --> 00:17:28,710
is better than what PHP itself has as

00:17:24,900 --> 00:17:32,220
defaults the very last thing here is

00:17:28,710 --> 00:17:34,710
routing PHP and that handles things like

00:17:32,220 --> 00:17:37,260
rewrites so if you are using pretty urls

00:17:34,710 --> 00:17:39,720
you're using Apaches mod rewrite or one

00:17:37,260 --> 00:17:41,850
of the equivalents you can do that by

00:17:39,720 --> 00:17:45,810
re-express in those rules in PHP and

00:17:41,850 --> 00:17:47,670
then adding that kind of prepend if you

00:17:45,810 --> 00:17:49,110
like file to the command line when you

00:17:47,670 --> 00:17:52,260
run the web server so you can still have

00:17:49,110 --> 00:17:54,060
your pretty urls very very nice like I

00:17:52,260 --> 00:17:55,950
say this is the feature that made me go

00:17:54,060 --> 00:17:59,040
well really did we need do we need a web

00:17:55,950 --> 00:18:02,870
server is there a problem I now love it

00:17:59,040 --> 00:18:05,400
I use it all the time give it a go oh

00:18:02,870 --> 00:18:07,740
speaking of features that we I've never

00:18:05,400 --> 00:18:11,880
knew we needed short array notation I

00:18:07,740 --> 00:18:14,310
teach PHP to beginners believe me we

00:18:11,880 --> 00:18:17,970
have enough ways of expressing array

00:18:14,310 --> 00:18:19,590
notation already that's that again this

00:18:17,970 --> 00:18:22,650
is a feature which has grown on me and

00:18:19,590 --> 00:18:24,450
which I use myself now 5.4 enables you

00:18:22,650 --> 00:18:27,060
to know that it's always going to be

00:18:24,450 --> 00:18:31,710
there so these three blocks of code on

00:18:27,060 --> 00:18:34,530
the screen behind me are equivalent the

00:18:31,710 --> 00:18:39,660
first one just keyword array round

00:18:34,530 --> 00:18:43,020
bracket give key and value pairs the

00:18:39,660 --> 00:18:50,160
second block declaring each index on its

00:18:43,020 --> 00:18:52,740
own line and finally the new short array

00:18:50,160 --> 00:18:55,890
syntax that comes in with PHP 5.4 it's

00:18:52,740 --> 00:18:59,070
not JSON it's still got PHP's array

00:18:55,890 --> 00:19:01,710
arrow notation there what's the name of

00:18:59,070 --> 00:19:05,940
that operator anyway it has those array

00:19:01,710 --> 00:19:08,520
pointed bracket things in it but all you

00:19:05,940 --> 00:19:11,790
do is replace this array with round

00:19:08,520 --> 00:19:13,620
bracket closing round bracket with a

00:19:11,790 --> 00:19:16,490
pair of square brackets so it does make

00:19:13,620 --> 00:19:19,140
things quite tidy quite easy to read I

00:19:16,490 --> 00:19:22,280
think you might well see this in your

00:19:19,140 --> 00:19:25,070
code base so I wanted to mention it

00:19:22,280 --> 00:19:30,140
another thing I think you might see is

00:19:25,070 --> 00:19:33,780
the array dereference

00:19:30,140 --> 00:19:36,750
this is a feature where when you call a

00:19:33,780 --> 00:19:40,170
function and it returns you an array you

00:19:36,750 --> 00:19:43,200
can just immediately say I only wanted

00:19:40,170 --> 00:19:45,840
this element can immediately refer to

00:19:43,200 --> 00:19:48,290
the key you don't have to assign the

00:19:45,840 --> 00:19:51,870
result of the function call and then

00:19:48,290 --> 00:19:54,720
access the array element that you

00:19:51,870 --> 00:19:57,300
actually wanted so in this example have

00:19:54,720 --> 00:20:00,630
a function that returns a list of

00:19:57,300 --> 00:20:05,340
dwarves as many as will fit with this

00:20:00,630 --> 00:20:07,350
many characters when I called get list

00:20:05,340 --> 00:20:10,620
it returns me four elements but I only

00:20:07,350 --> 00:20:12,030
want the first one and so I can call the

00:20:10,620 --> 00:20:14,250
function after the round brackets

00:20:12,030 --> 00:20:16,410
immediately a pen the square brackets to

00:20:14,250 --> 00:20:20,630
access the array element so you can

00:20:16,410 --> 00:20:23,340
dereference the array all in one line I

00:20:20,630 --> 00:20:24,600
would contend that if you have a

00:20:23,340 --> 00:20:26,130
function that doesn't return what you

00:20:24,600 --> 00:20:28,080
actually wanted from it then you might

00:20:26,130 --> 00:20:30,380
have come with your function however

00:20:28,080 --> 00:20:33,960
this is a pretty common use case for

00:20:30,380 --> 00:20:35,100
situations where you're getting maybe

00:20:33,960 --> 00:20:36,840
you're searching for something but

00:20:35,100 --> 00:20:38,730
you're searching by ID so you're going

00:20:36,840 --> 00:20:41,820
to get a collection of results but you

00:20:38,730 --> 00:20:44,060
know that you only want one you can just

00:20:41,820 --> 00:20:48,240
very quickly dereference it again it's a

00:20:44,060 --> 00:20:52,530
5.4 feature but you're all moving 25.4

00:20:48,240 --> 00:20:53,880
imminently soon hopefully so you'll see

00:20:52,530 --> 00:20:59,610
this and you'll be able to use it in

00:20:53,880 --> 00:21:02,550
your own code as well this echo shortcut

00:20:59,610 --> 00:21:05,160
I think is a bit of a gotcha so let me

00:21:02,550 --> 00:21:06,930
mention it I'm not sure if you're going

00:21:05,160 --> 00:21:11,490
to see this in Drupal 8 or not perhaps

00:21:06,930 --> 00:21:13,110
someone can tell me PHP 5.4 actually

00:21:11,490 --> 00:21:16,170
removed all kinds of ridiculous things

00:21:13,110 --> 00:21:21,630
from the language but it also removed

00:21:16,170 --> 00:21:23,760
the short open tag config setting yes

00:21:21,630 --> 00:21:25,650
you see so you guys have seen the light

00:21:23,760 --> 00:21:28,140
because Drupal projects never use the

00:21:25,650 --> 00:21:29,670
short open tag and therefore stuff

00:21:28,140 --> 00:21:32,750
basically will work wherever you put it

00:21:29,670 --> 00:21:35,040
which is perfect awesome well done

00:21:32,750 --> 00:21:36,900
however the rest of the world did use

00:21:35,040 --> 00:21:38,280
the short open tag and we've been

00:21:36,900 --> 00:21:42,960
discouraging it for years and years and

00:21:38,280 --> 00:21:43,240
years however most projects in this sort

00:21:42,960 --> 00:21:46,990
of

00:21:43,240 --> 00:21:48,670
p mainstream world don't use the classic

00:21:46,990 --> 00:21:52,000
sort of short open tag in place of

00:21:48,670 --> 00:21:56,920
opening PHP tag but they do use this

00:21:52,000 --> 00:21:59,260
echo shortcut as our 5.4 the short open

00:21:56,920 --> 00:22:02,500
tag is not available ever and you can't

00:21:59,260 --> 00:22:04,410
turn it on and the echo shortcut is

00:22:02,500 --> 00:22:08,380
always available you can't turn it off

00:22:04,410 --> 00:22:13,020
so this pointy bracket the second option

00:22:08,380 --> 00:22:17,800
above me pointy bracket ? equal sign is

00:22:13,020 --> 00:22:22,330
equivalent to an opening PHP tag and the

00:22:17,800 --> 00:22:24,190
echo keyword so those two code samples

00:22:22,330 --> 00:22:27,429
on the screen now are completely

00:22:24,190 --> 00:22:29,800
equivalent we often use the echo

00:22:27,429 --> 00:22:33,040
shortcut in PHP project that we're not

00:22:29,800 --> 00:22:35,080
using a templating language to just put

00:22:33,040 --> 00:22:37,750
placeholders into HTML so you have good

00:22:35,080 --> 00:22:39,070
front-end layout everything good where

00:22:37,750 --> 00:22:41,410
you need to drop in the dynamic

00:22:39,070 --> 00:22:43,929
placeholders you will commonly see this

00:22:41,410 --> 00:22:45,790
echo shortcut I don't know if you'll

00:22:43,929 --> 00:22:48,880
start to use it in Drupal with Drupal 8

00:22:45,790 --> 00:22:50,710
but if you want to it's here and it

00:22:48,880 --> 00:22:52,780
doesn't mean enabling the short open

00:22:50,710 --> 00:23:02,020
tags which you're quite correct was

00:22:52,780 --> 00:23:03,600
always a bad thing PHP 5.4 brought in a

00:23:02,020 --> 00:23:07,120
feature called session upload progress

00:23:03,600 --> 00:23:09,130
you know when you ask a user to upload a

00:23:07,120 --> 00:23:11,770
file and maybe it's quite a big file and

00:23:09,130 --> 00:23:15,610
maybe they're on fairly severely slow

00:23:11,770 --> 00:23:17,260
connection they just don't know if

00:23:15,610 --> 00:23:19,660
they're nearly there or not and you can

00:23:17,260 --> 00:23:21,429
do some kind of flash client-side stuff

00:23:19,660 --> 00:23:24,820
that sort of tries to track it but

00:23:21,429 --> 00:23:26,920
doesn't work for everybody PHP 5.4

00:23:24,820 --> 00:23:30,130
introduced a feature called session

00:23:26,920 --> 00:23:33,460
upload progress which allows you to get

00:23:30,130 --> 00:23:34,900
some as the upload is taking place PHP

00:23:33,460 --> 00:23:37,480
tracks how the upload is doing and

00:23:34,900 --> 00:23:40,420
writes an update into the users session

00:23:37,480 --> 00:23:42,750
repeatedly so you can keep serving

00:23:40,420 --> 00:23:45,610
information as like a regular poll

00:23:42,750 --> 00:23:48,280
update showing them how their upload is

00:23:45,610 --> 00:23:50,679
going so hopefully if you are dealing

00:23:48,280 --> 00:23:52,540
with a site which allows users to upload

00:23:50,679 --> 00:23:55,120
media or documents they can be quite

00:23:52,540 --> 00:23:56,590
large this lets you let them know

00:23:55,120 --> 00:23:59,860
they're nearly there please

00:23:56,590 --> 00:24:01,029
give up now or you are never going to

00:23:59,860 --> 00:24:03,940
get this file uploaded over this

00:24:01,029 --> 00:24:05,650
connection you should quit now so that

00:24:03,940 --> 00:24:07,659
session upload progress is pretty cute

00:24:05,650 --> 00:24:11,760
and I've seen some nice implementations

00:24:07,659 --> 00:24:15,429
would be html5 progress bars as well it

00:24:11,760 --> 00:24:17,470
looks like this so you have your form

00:24:15,429 --> 00:24:18,909
and your form you know how to write

00:24:17,470 --> 00:24:21,549
forms all of you know how to write

00:24:18,909 --> 00:24:25,650
better forms that I do and then you have

00:24:21,549 --> 00:24:28,090
a hidden field on the form which uses a

00:24:25,650 --> 00:24:31,419
predetermined configure session upload

00:24:28,090 --> 00:24:34,539
progress field name and you give it a

00:24:31,419 --> 00:24:36,970
value so you just need to give the

00:24:34,539 --> 00:24:38,649
upload a unique value so that it's a bit

00:24:36,970 --> 00:24:40,809
like a CSRF token right just a values

00:24:38,649 --> 00:24:42,909
that we can then link it back to later

00:24:40,809 --> 00:24:45,610
so you put this hidden field on your

00:24:42,909 --> 00:24:48,640
form the user chooses which file to

00:24:45,610 --> 00:24:51,039
upload they submit the form and in their

00:24:48,640 --> 00:24:52,419
session you get this upload underscore

00:24:51,039 --> 00:24:55,480
progress underscore whatever the

00:24:52,419 --> 00:24:57,669
identifier is and all this information

00:24:55,480 --> 00:24:59,440
about how long it's been going and how

00:24:57,669 --> 00:25:01,750
big it is and how far we've got through

00:24:59,440 --> 00:25:03,970
whether we've finished or not yet and so

00:25:01,750 --> 00:25:06,399
on so you can then have some kind of

00:25:03,970 --> 00:25:08,679
probably a jack c feedback to your user

00:25:06,399 --> 00:25:12,340
that shows them how far they are through

00:25:08,679 --> 00:25:14,440
this upload process I think this is

00:25:12,340 --> 00:25:16,029
really important it's something which we

00:25:14,440 --> 00:25:20,020
haven't really shouted about in the PHP

00:25:16,029 --> 00:25:23,799
community but I think for Drupal people

00:25:20,020 --> 00:25:26,500
you make websites you give good feedback

00:25:23,799 --> 00:25:28,179
to users this is a key feature i think

00:25:26,500 --> 00:25:32,070
you'll see it showing up and i think it

00:25:28,179 --> 00:25:32,070
would be really really valuable and

00:25:34,470 --> 00:25:39,850
mentioned about the short open tag I

00:25:36,809 --> 00:25:42,159
want I once gave a talk about PHP 5.4

00:25:39,850 --> 00:25:47,049
where I said we've removed banana sins

00:25:42,159 --> 00:25:52,450
and somebody said all of it no good

00:25:47,049 --> 00:25:54,039
point not all of it but in PHP 5.4 we

00:25:52,450 --> 00:25:58,750
did remove a bunch of things that made

00:25:54,039 --> 00:26:06,039
absolutely no sense this is part of a

00:25:58,750 --> 00:26:10,240
wider story in PHP PHP 5.3 shipped with

00:26:06,039 --> 00:26:10,720
a new error reporting level on five

00:26:10,240 --> 00:26:13,360
points

00:26:10,720 --> 00:26:15,340
or later platforms you can enable an

00:26:13,360 --> 00:26:19,240
error reporting level called eid

00:26:15,340 --> 00:26:22,630
applicated and that will put an entry in

00:26:19,240 --> 00:26:24,159
your logs for everything you do which

00:26:22,630 --> 00:26:29,950
isn't going to be available on the next

00:26:24,159 --> 00:26:31,270
version so we launched PHP 5.3 which I

00:26:29,950 --> 00:26:35,919
accused of being in a dim and distant

00:26:31,270 --> 00:26:39,010
past really not that long ago and with

00:26:35,919 --> 00:26:43,030
PHP 5.3 we introduced the e deprecated

00:26:39,010 --> 00:26:46,710
flag so at the moment the five-point 3.0

00:26:43,030 --> 00:26:51,909
was released we had already specified

00:26:46,710 --> 00:26:55,900
what would be removed in 5.4 so this

00:26:51,909 --> 00:26:59,799
marks the sea change for PHP stuff will

00:26:55,900 --> 00:27:02,140
not just vanish if you happen to upgrade

00:26:59,799 --> 00:27:08,020
PHP or run on a slightly newer install

00:27:02,140 --> 00:27:10,659
stuff will not just go away on you we

00:27:08,020 --> 00:27:12,760
have a deprecated so five point three

00:27:10,659 --> 00:27:14,260
point zero has he deprecated and a list

00:27:12,760 --> 00:27:19,000
of stuff that's going to be gone in PHP

00:27:14,260 --> 00:27:20,320
5.4 so when we got to 5.4 awesome now we

00:27:19,000 --> 00:27:22,390
can take away all the stuff that was

00:27:20,320 --> 00:27:24,460
known for ages that we shouldn't have we

00:27:22,390 --> 00:27:26,590
didn't have a way of safely removing it

00:27:24,460 --> 00:27:29,289
without breaking your installs so things

00:27:26,590 --> 00:27:34,690
that have gone in PHP 5.4 register

00:27:29,289 --> 00:27:36,250
globals Bay finally I know it's been off

00:27:34,690 --> 00:27:40,330
by default for something like 15 years

00:27:36,250 --> 00:27:42,220
that's okay really let's not use it so

00:27:40,330 --> 00:27:46,419
that is gone you cannot turn it on your

00:27:42,220 --> 00:27:49,270
page b3 code is finally is dead register

00:27:46,419 --> 00:27:50,980
long arrays is gone at safe mode is gone

00:27:49,270 --> 00:27:54,340
because it's not safe and magic quotes

00:27:50,980 --> 00:27:56,289
are gone because they're not magic we've

00:27:54,340 --> 00:27:59,020
disabled allow call time pass by

00:27:56,289 --> 00:28:01,929
reference completely this is something

00:27:59,020 --> 00:28:04,390
which you could turn it back on it's

00:28:01,929 --> 00:28:05,679
never get been good practice and I very

00:28:04,390 --> 00:28:07,900
much doubt if it will affect you guys

00:28:05,679 --> 00:28:09,549
but it is gone so do I just want you to

00:28:07,900 --> 00:28:14,169
mention i did want to mention that to

00:28:09,549 --> 00:28:17,049
you I'm so sorry we've removed the y2k

00:28:14,169 --> 00:28:19,450
compliance flag so if anyone is

00:28:17,049 --> 00:28:22,620
concerned about the millennium bug we no

00:28:19,450 --> 00:28:22,620
longer support that

00:28:23,050 --> 00:28:29,600
quite why it took us till 2012 I don't

00:28:27,230 --> 00:28:32,360
know but there we are because we didn't

00:28:29,600 --> 00:28:34,910
have a safe way of taking out right we

00:28:32,360 --> 00:28:37,880
remove the e reg functions this is

00:28:34,910 --> 00:28:39,440
something that might hit you depending

00:28:37,880 --> 00:28:43,040
what's going on down in your modules

00:28:39,440 --> 00:28:45,410
iffy reg functions have been have been

00:28:43,040 --> 00:28:47,000
used somewhere there's another set of

00:28:45,410 --> 00:28:49,820
regular expression functions in PHP

00:28:47,000 --> 00:28:51,980
called the peerage functions we just

00:28:49,820 --> 00:28:54,110
standardize on those so if you have ear

00:28:51,980 --> 00:28:56,330
edge stuff buried somewhere in your

00:28:54,110 --> 00:29:00,140
application you just need to revisit

00:28:56,330 --> 00:29:02,330
that and replace it with the p reg 45.4

00:29:00,140 --> 00:29:04,550
or later that is a little bit of a

00:29:02,330 --> 00:29:06,640
gotcha if you do have that code in but

00:29:04,550 --> 00:29:11,270
it shouldn't be horrible to replace

00:29:06,640 --> 00:29:13,610
shouldn't be horrible hopefully ok here

00:29:11,270 --> 00:29:16,520
is a 5.5 feature but bear with me

00:29:13,610 --> 00:29:20,210
because it is relevant to you even on

00:29:16,520 --> 00:29:21,650
earlier versions again I'm not sure why

00:29:20,210 --> 00:29:23,300
it took us this long to realize that

00:29:21,650 --> 00:29:25,040
every PHP website in the world has a

00:29:23,300 --> 00:29:27,440
login we probably need to agree on a

00:29:25,040 --> 00:29:29,780
good way to store passwords here's a

00:29:27,440 --> 00:29:35,270
clue nd5 in the password is not a good

00:29:29,780 --> 00:29:38,720
way to store it so with 5.5 shipped new

00:29:35,270 --> 00:29:41,000
password hashing features the user

00:29:38,720 --> 00:29:43,240
registers for your site and they set

00:29:41,000 --> 00:29:45,140
their password a secret password I

00:29:43,240 --> 00:29:49,550
shouldn't use my own passwords and

00:29:45,140 --> 00:29:52,520
examples must take that out to store

00:29:49,550 --> 00:29:55,100
this password you use the password hash

00:29:52,520 --> 00:29:58,550
function and you say please hatch this

00:29:55,100 --> 00:30:01,180
password it takes a second argument

00:29:58,550 --> 00:30:03,320
which is how you'd like to hash it

00:30:01,180 --> 00:30:07,610
currently the recommended method is

00:30:03,320 --> 00:30:12,500
bcrypt the password default flag will

00:30:07,610 --> 00:30:15,020
always hatch it in the good way so if in

00:30:12,500 --> 00:30:17,480
two releases time there's a better good

00:30:15,020 --> 00:30:19,340
way to do this the password default will

00:30:17,480 --> 00:30:23,630
start using the new way instead so you

00:30:19,340 --> 00:30:27,730
put this in here you forget about it if

00:30:23,630 --> 00:30:29,720
you look at what happens you get this

00:30:27,730 --> 00:30:31,850
garbled e nonsense which is kind of

00:30:29,720 --> 00:30:34,010
dropped off the screen so you need to

00:30:31,850 --> 00:30:36,100
make your password columns wider I just

00:30:34,010 --> 00:30:41,330
made that mistake this week

00:30:36,100 --> 00:30:44,600
stored in this string is the algorithm

00:30:41,330 --> 00:30:46,730
that was used to hash this password the

00:30:44,600 --> 00:30:51,380
salt that was used to hash this password

00:30:46,730 --> 00:30:54,890
and the hash of the password what this

00:30:51,380 --> 00:30:57,380
means is in contrast to a table of just

00:30:54,890 --> 00:31:02,570
md5 passwords where you can very easily

00:30:57,380 --> 00:31:04,610
look up the values even if every single

00:31:02,570 --> 00:31:08,960
user on your system has a password of

00:31:04,610 --> 00:31:11,630
QWERTY anybody who manages to get your

00:31:08,960 --> 00:31:15,260
password database still has to look at

00:31:11,630 --> 00:31:17,120
each individually hashed password look

00:31:15,260 --> 00:31:19,789
at the algorithm look at the soul and

00:31:17,120 --> 00:31:22,640
then generate a table of all the likely

00:31:19,789 --> 00:31:26,690
values and look up if you're in it so it

00:31:22,640 --> 00:31:28,520
makes the cost-benefit return on

00:31:26,690 --> 00:31:32,240
stealing password databases and trying

00:31:28,520 --> 00:31:35,899
to crack them much much much vanishingly

00:31:32,240 --> 00:31:39,649
much lower it's built into PHP there are

00:31:35,899 --> 00:31:41,210
no excuses because some of the

00:31:39,649 --> 00:31:44,690
information about the password is stored

00:31:41,210 --> 00:31:46,429
in the password hash the way that we

00:31:44,690 --> 00:31:49,549
check if we've got the right one is a

00:31:46,429 --> 00:31:51,049
little bit different so to check if it's

00:31:49,549 --> 00:31:53,120
back what we need to do is we need to

00:31:51,049 --> 00:31:54,770
take the value that we stored in the

00:31:53,120 --> 00:31:57,440
database which is the existing hash

00:31:54,770 --> 00:31:59,870
variable here and whatever the users

00:31:57,440 --> 00:32:03,380
trying to login as which is the secret

00:31:59,870 --> 00:32:05,330
password and we call path a function

00:32:03,380 --> 00:32:08,419
called password verify so you can't

00:32:05,330 --> 00:32:10,250
rehash the new password and compare them

00:32:08,419 --> 00:32:11,659
because you need some information from

00:32:10,250 --> 00:32:14,659
the previous hash to make the right

00:32:11,659 --> 00:32:17,390
forward hash I feel like I'm making

00:32:14,659 --> 00:32:18,860
sense so you do password verify whatever

00:32:17,390 --> 00:32:20,510
they just try to login with and a hash

00:32:18,860 --> 00:32:25,010
you're aiming for to check if they're

00:32:20,510 --> 00:32:27,799
equivalent if you are not on PHP 5.5 yet

00:32:25,010 --> 00:32:29,330
that's fine we implementing this in user

00:32:27,799 --> 00:32:31,220
land for you when I say we I mean

00:32:29,330 --> 00:32:34,820
Anthony who also fitted this feature to

00:32:31,220 --> 00:32:38,630
call so forget to be less than 5.5 go

00:32:34,820 --> 00:32:40,760
here install this library put at the top

00:32:38,630 --> 00:32:43,580
in next PHP with a comment that says to

00:32:40,760 --> 00:32:46,220
do when you install PHP 5.5 remove this

00:32:43,580 --> 00:32:47,840
include line because you'll be declaring

00:32:46,220 --> 00:32:49,020
it twice courses in the language so just

00:32:47,840 --> 00:32:51,210
include this

00:32:49,020 --> 00:32:52,860
use it and if you upgrade this

00:32:51,210 --> 00:32:54,210
application later take being take the

00:32:52,860 --> 00:32:56,430
required light out and it will all just

00:32:54,210 --> 00:32:57,930
work there is a minimum version on this

00:32:56,430 --> 00:33:00,990
and I think it's five point three point

00:32:57,930 --> 00:33:03,660
nine because bcrypt was broken before

00:33:00,990 --> 00:33:05,730
that something there is a minimum

00:33:03,660 --> 00:33:08,070
version but please please please look

00:33:05,730 --> 00:33:11,280
into this and certainly for all your new

00:33:08,070 --> 00:33:16,800
sites hash passwords this way this this

00:33:11,280 --> 00:33:21,030
if there's one true way it's this way up

00:33:16,800 --> 00:33:23,310
caches let's talk about rock caches the

00:33:21,030 --> 00:33:25,710
days of making websites which are viewed

00:33:23,310 --> 00:33:27,390
by your mom and two other people are

00:33:25,710 --> 00:33:28,920
kind of gone we do care about

00:33:27,390 --> 00:33:32,280
performance and I think that's

00:33:28,920 --> 00:33:33,690
especially relevant for Drupal building

00:33:32,280 --> 00:33:38,820
some really big and impressive sights

00:33:33,690 --> 00:33:42,720
these days in versions of PHP 5.3 and

00:33:38,820 --> 00:33:45,060
earlier you will install a PC you know

00:33:42,720 --> 00:33:50,010
this you set up a server you install a

00:33:45,060 --> 00:33:55,290
PC all is good we had a problem with a

00:33:50,010 --> 00:33:57,420
PC in PHP 5.4 I can't tell you any more

00:33:55,290 --> 00:33:59,880
about that because I don't understand it

00:33:57,420 --> 00:34:04,950
just doesn't work it does work but

00:33:59,880 --> 00:34:06,840
sometimes it doesn't so no a pc i think

00:34:04,950 --> 00:34:10,520
this really affected the adoption rates

00:34:06,840 --> 00:34:14,520
of PHP 5.4 the adoption rates of PHP 5.4

00:34:10,520 --> 00:34:16,080
actually still pretty low 5.5 is growing

00:34:14,520 --> 00:34:20,730
much faster I expect everybody to go

00:34:16,080 --> 00:34:26,580
direct to 55 now and so that was related

00:34:20,730 --> 00:34:31,080
to the APC from PHP 5.5 onwards no APC

00:34:26,580 --> 00:34:33,980
however op cash does exactly the same

00:34:31,080 --> 00:34:36,990
thing to thus far as I understand it and

00:34:33,980 --> 00:34:42,000
is built into the language so this is

00:34:36,990 --> 00:34:44,060
what used to be zens cash extension they

00:34:42,000 --> 00:34:47,780
open sourced it and put it into core

00:34:44,060 --> 00:34:51,000
45.4 you can install up cash from pekel

00:34:47,780 --> 00:34:55,409
45.5 it's in the language except for one

00:34:51,000 --> 00:34:57,450
tiny detail it's disabled and so we

00:34:55,409 --> 00:34:59,460
fitted the opcode kasia standard but

00:34:57,450 --> 00:35:03,050
it's not turned on so just set these up

00:34:59,460 --> 00:35:06,030
cash enable and cash enables CLI set

00:35:03,050 --> 00:35:09,859
when you have creative PHP 5.5 and then

00:35:06,030 --> 00:35:12,030
you've got an OP cash entirely enabled

00:35:09,859 --> 00:35:15,329
I've run through a bunch of features

00:35:12,030 --> 00:35:17,160
there does anyone want to ask me any

00:35:15,329 --> 00:35:25,950
questions before I move on to the next

00:35:17,160 --> 00:35:31,020
section making life nice and easy for me

00:35:25,950 --> 00:35:34,710
today okay let's talk about your

00:35:31,020 --> 00:35:36,450
existing systems you're all running

00:35:34,710 --> 00:35:39,660
existing systems I assume they're not

00:35:36,450 --> 00:35:43,020
all 15.6 let's talk about upgrading an

00:35:39,660 --> 00:35:47,250
existing system this might seem like a

00:35:43,020 --> 00:35:50,640
weird and scary idea but now look at the

00:35:47,250 --> 00:35:52,500
performance graphs and and at 50 and 51

00:35:50,640 --> 00:35:57,020
and things are like I would have to

00:35:52,500 --> 00:36:05,310
rescale whole graph they're slow this is

00:35:57,020 --> 00:36:08,369
5.2 5.3 5.4 by 556 running a benchmark

00:36:05,310 --> 00:36:12,420
so what I'm graphing here is how long it

00:36:08,369 --> 00:36:16,260
takes PHP to run exactly equivalent code

00:36:12,420 --> 00:36:18,240
on different versions of PHP it's

00:36:16,260 --> 00:36:20,730
totally unscientific because I did it on

00:36:18,240 --> 00:36:23,280
my laptop but you get the idea i think

00:36:20,730 --> 00:36:25,020
the relative numbers are true and this

00:36:23,280 --> 00:36:26,940
is repeatable i see this pattern every

00:36:25,020 --> 00:36:31,440
time I run the benchmarks been doing

00:36:26,940 --> 00:36:36,300
this for a while if you're currently on

00:36:31,440 --> 00:36:41,190
PHP 5.2 and you were to upgrade your

00:36:36,300 --> 00:36:46,589
platform with no code changes to let's

00:36:41,190 --> 00:36:48,839
say 545 5 you would have something you

00:36:46,589 --> 00:36:51,960
would see you would see a massive

00:36:48,839 --> 00:36:54,510
increase in performance I had a really

00:36:51,960 --> 00:36:56,280
good story from my good friends I cause

00:36:54,510 --> 00:36:57,390
they did this they saw me give an early

00:36:56,280 --> 00:37:00,089
version of this talk a few months ago

00:36:57,390 --> 00:37:02,430
and they upgraded one of their sites

00:37:00,089 --> 00:37:04,410
from a 5 free platform to 55 platform

00:37:02,430 --> 00:37:08,119
and sent me very excited tweet saying

00:37:04,410 --> 00:37:11,069
it's fifty percent faster that's a lot

00:37:08,119 --> 00:37:14,400
it's a lot less hardware for either you

00:37:11,069 --> 00:37:15,579
or your clients to pay for and it's for

00:37:14,400 --> 00:37:18,519
free

00:37:15,579 --> 00:37:21,099
you don't pay for the upgrade you pay

00:37:18,519 --> 00:37:22,509
the time and the the mental stress of

00:37:21,099 --> 00:37:25,059
worrying what's going to happen when you

00:37:22,509 --> 00:37:26,739
go live yeah yep you're not paying for

00:37:25,059 --> 00:37:28,630
the upgrade you're not investing the

00:37:26,739 --> 00:37:31,930
time and improving the performance it

00:37:28,630 --> 00:37:33,430
just runs faster kind of why I like free

00:37:31,930 --> 00:37:37,779
software it sort of upgrades itself when

00:37:33,430 --> 00:37:42,249
you're not looking that said the upgrade

00:37:37,779 --> 00:37:44,529
process does not always run smooth and I

00:37:42,249 --> 00:37:46,690
want to make some recommendations for

00:37:44,529 --> 00:37:49,539
how this could look there are lots of

00:37:46,690 --> 00:37:52,450
reasons to upgrade but how do you

00:37:49,539 --> 00:37:55,359
actually do it first of all turn on e

00:37:52,450 --> 00:37:57,549
deprecated on your current platform if

00:37:55,359 --> 00:38:01,150
you are still on 5.2 you have the

00:37:57,549 --> 00:38:04,209
hardest job of all there's no e

00:38:01,150 --> 00:38:07,299
deprecated and there's some big changes

00:38:04,209 --> 00:38:09,670
in PHP ahead of you coming on to 5.3 if

00:38:07,299 --> 00:38:13,539
you're not there already that's the last

00:38:09,670 --> 00:38:16,959
of the tricky migrations in PHP like

00:38:13,539 --> 00:38:18,430
it's not quite five for 255 because

00:38:16,959 --> 00:38:22,299
there's not as many backwards

00:38:18,430 --> 00:38:25,029
compatibility breaks but 52 253 that's a

00:38:22,299 --> 00:38:26,799
non-trivial upgrade I'm still in favor

00:38:25,029 --> 00:38:28,239
of doing it but please don't think that

00:38:26,799 --> 00:38:30,099
I just said you should run your code and

00:38:28,239 --> 00:38:33,369
53 it's going to be fine you're still on

00:38:30,099 --> 00:38:35,940
5.2 you're not in a great position if

00:38:33,369 --> 00:38:38,140
you can get to 5.3 turn on e deprecated

00:38:35,940 --> 00:38:40,630
telling deprecation our lives server

00:38:38,140 --> 00:38:42,789
watch the logs give you a really good

00:38:40,630 --> 00:38:46,109
idea of what is there which might cause

00:38:42,789 --> 00:38:48,759
you a problem in a future version

00:38:46,109 --> 00:38:52,209
compile the version of PHP you want to

00:38:48,759 --> 00:38:53,769
go to and run whatever tests you have so

00:38:52,209 --> 00:38:57,009
if you have simple tests if you have

00:38:53,769 --> 00:38:59,589
phpunit if you just want to spin up with

00:38:57,009 --> 00:39:00,819
the web server and then go through

00:38:59,589 --> 00:39:04,299
whatever use the testing you would

00:39:00,819 --> 00:39:05,680
normally do do that you don't need to

00:39:04,299 --> 00:39:07,989
completely change your system and

00:39:05,680 --> 00:39:09,819
install a whole new version of PHP you

00:39:07,989 --> 00:39:12,940
can just compile one or if you're using

00:39:09,819 --> 00:39:15,219
like a lamp lamp lamp those things you

00:39:12,940 --> 00:39:18,339
can usually change click to change the

00:39:15,219 --> 00:39:19,829
versions in it you can tell this as an

00:39:18,339 --> 00:39:22,059
area have a lots of experience with

00:39:19,829 --> 00:39:23,259
click there's a there's a thing you

00:39:22,059 --> 00:39:25,760
people who have things to click on you

00:39:23,259 --> 00:39:28,500
probably click on a thing

00:39:25,760 --> 00:39:30,660
when you think you're ready try

00:39:28,500 --> 00:39:33,450
upgrading a staging platform or one of

00:39:30,660 --> 00:39:34,980
your testing platforms go through your

00:39:33,450 --> 00:39:37,320
full rigorous we're doing a major

00:39:34,980 --> 00:39:40,140
release type testing and see what

00:39:37,320 --> 00:39:42,900
happens you may be surprised at this

00:39:40,140 --> 00:39:46,410
point how few pieces of the sky have

00:39:42,900 --> 00:39:48,060
broken and fallen on your head I have

00:39:46,410 --> 00:39:49,710
had good experiences of doing upgrades

00:39:48,060 --> 00:39:51,210
and it's something that I do if I

00:39:49,710 --> 00:39:54,660
consultancy business or do a bunch of

00:39:51,210 --> 00:39:58,050
migration I have seen some some good

00:39:54,660 --> 00:40:00,840
upgrades and somewhere I think you

00:39:58,050 --> 00:40:03,570
upgrade the server a lot of errors come

00:40:00,840 --> 00:40:05,730
out but it's mostly the same problem in

00:40:03,570 --> 00:40:08,280
lots of places so it boils down to

00:40:05,730 --> 00:40:10,440
actually only being four or five big

00:40:08,280 --> 00:40:15,360
problems and some little problems so I

00:40:10,440 --> 00:40:16,890
think it is possible to upgrade there

00:40:15,360 --> 00:40:18,900
are lots of reasons why you might want

00:40:16,890 --> 00:40:21,990
to I mentioned the performance one

00:40:18,900 --> 00:40:23,460
already and if it was always simple that

00:40:21,990 --> 00:40:29,610
would be a no brainer right you'd all be

00:40:23,460 --> 00:40:32,490
running 55 you may want to upgrade over

00:40:29,610 --> 00:40:35,010
the next 12 to 18 months to avoid

00:40:32,490 --> 00:40:39,090
needing multiple hosting platforms as

00:40:35,010 --> 00:40:41,730
your new projects move to Drupal 8 yes

00:40:39,090 --> 00:40:43,140
you'll need a 5.4 minimum platform but

00:40:41,730 --> 00:40:45,060
there's no reason why what you have

00:40:43,140 --> 00:40:46,560
already if you're running a VPS whatever

00:40:45,060 --> 00:40:49,560
there's no reason why what you have

00:40:46,560 --> 00:40:51,420
already shouldn't share that new

00:40:49,560 --> 00:40:54,930
platform you don't necessarily need to

00:40:51,420 --> 00:40:56,940
shell out for extra hosting and I think

00:40:54,930 --> 00:40:59,520
especially for the small businesses that

00:40:56,940 --> 00:41:02,930
do so well on Drupal that's quite an

00:40:59,520 --> 00:41:05,310
important point to make the new hosting

00:41:02,930 --> 00:41:11,270
doesn't need to be as well as what you

00:41:05,310 --> 00:41:16,320
have finding hosts that are any good

00:41:11,270 --> 00:41:18,150
that's a really hard problem PHP ID I

00:41:16,320 --> 00:41:21,260
don't really know why it's so acceptable

00:41:18,150 --> 00:41:26,910
to run really really out of date

00:41:21,260 --> 00:41:28,530
versions of PHP on on hosting it's just

00:41:26,910 --> 00:41:30,900
like a lot of the hosts don't know very

00:41:28,530 --> 00:41:33,240
much about PHP so how can you pick a

00:41:30,900 --> 00:41:36,150
really good host well you can ask around

00:41:33,240 --> 00:41:37,590
and see what people will recommend I

00:41:36,150 --> 00:41:38,500
have done this for you so the next slide

00:41:37,590 --> 00:41:40,240
is a list of possible

00:41:38,500 --> 00:41:45,580
hosts that i got from asking twitter

00:41:40,240 --> 00:41:48,520
very scientific new projects today

00:41:45,580 --> 00:41:50,320
shipping on to new platforms so you are

00:41:48,520 --> 00:41:52,660
commissioning a platform specifically

00:41:50,320 --> 00:41:55,000
for a new project or if you're buying

00:41:52,660 --> 00:41:59,170
new hosting for any other reason those

00:41:55,000 --> 00:42:01,360
platforms should be 5.5 or later there

00:41:59,170 --> 00:42:06,000
is no reason to ship on an earlier

00:42:01,360 --> 00:42:08,860
platform right now 5.5 or later 5.4

00:42:06,000 --> 00:42:10,360
major security fixes only all kinds of

00:42:08,860 --> 00:42:14,590
things could be wrong with 5.4 if we

00:42:10,360 --> 00:42:18,520
find it now no one cares 5.5 minimum

00:42:14,590 --> 00:42:22,720
version the hosts are out there and I

00:42:18,520 --> 00:42:24,760
want us to vote with our feet PHP has

00:42:22,720 --> 00:42:25,960
some wonderful new features not to

00:42:24,760 --> 00:42:27,250
mention the excellent performance

00:42:25,960 --> 00:42:29,440
improvements why shouldn't you have

00:42:27,250 --> 00:42:31,930
those as standard why shouldn't

00:42:29,440 --> 00:42:35,170
everybody have those are standard why

00:42:31,930 --> 00:42:36,910
shouldn't the Drupal hobbyists just

00:42:35,170 --> 00:42:39,370
trying things out in their spare time of

00:42:36,910 --> 00:42:41,620
the weekend that's a common background

00:42:39,370 --> 00:42:44,590
for lots of us why should they be seeing

00:42:41,620 --> 00:42:47,770
PHP 5.5 is standard when they buy shared

00:42:44,590 --> 00:42:49,630
hosting so we have to educate the hosts

00:42:47,770 --> 00:42:53,710
and we do that with our wallets and we

00:42:49,630 --> 00:42:57,400
choose hosts that understand what the

00:42:53,710 --> 00:42:58,810
current version of PHP is so some

00:42:57,400 --> 00:43:01,510
questions I would like you to ask your

00:42:58,810 --> 00:43:08,010
hosts what versions of PHP are available

00:43:01,510 --> 00:43:11,260
the correct answers here are 5.5 or 5.6

00:43:08,010 --> 00:43:13,540
if you come anyhow 5.4 and there is a

00:43:11,260 --> 00:43:17,350
5.5 option available if you ask nicely

00:43:13,540 --> 00:43:20,080
or whatever fine good enough anyone who

00:43:17,350 --> 00:43:21,970
tells you 5.3 is standard doesn't get

00:43:20,080 --> 00:43:24,460
your business this is not going to

00:43:21,970 --> 00:43:26,140
support your organization moving forward

00:43:24,460 --> 00:43:29,440
whether you are a one person doing this

00:43:26,140 --> 00:43:33,580
is a hobby or a big agency making really

00:43:29,440 --> 00:43:36,970
excellent big complicated projects our

00:43:33,580 --> 00:43:39,370
backups included this isn't really

00:43:36,970 --> 00:43:42,810
related to versions of PHP it's just a

00:43:39,370 --> 00:43:46,630
really good quality measure of hosts

00:43:42,810 --> 00:43:48,190
hosts that care will if not require that

00:43:46,630 --> 00:43:50,980
you take their backup service at least

00:43:48,190 --> 00:43:52,150
offer it so that you have some

00:43:50,980 --> 00:43:52,450
confidence that you could get everything

00:43:52,150 --> 00:43:57,400
back

00:43:52,450 --> 00:43:59,829
quickly if needs be this question which

00:43:57,400 --> 00:44:03,310
extensions are available and which

00:43:59,829 --> 00:44:07,480
extensions can i install if if the

00:44:03,310 --> 00:44:11,380
answers are none and none then again

00:44:07,480 --> 00:44:14,619
maybe these are not PHP specialists even

00:44:11,380 --> 00:44:16,900
if you don't need extensions supporting

00:44:14,619 --> 00:44:20,109
them gives shows the organization has a

00:44:16,900 --> 00:44:22,240
good understanding of PHP there are lots

00:44:20,109 --> 00:44:25,320
of things which I like to install in

00:44:22,240 --> 00:44:27,820
extensions all my platforms for example

00:44:25,320 --> 00:44:31,599
XH prof is a performance tool that I use

00:44:27,820 --> 00:44:33,250
to it's safe to use on a live system it

00:44:31,599 --> 00:44:35,490
just measures a small percentage of all

00:44:33,250 --> 00:44:39,339
the traffic issue great overall

00:44:35,490 --> 00:44:41,740
information it's a pack of extension you

00:44:39,339 --> 00:44:43,450
need to be able to install extensions to

00:44:41,740 --> 00:44:45,579
use those kinds of tools and I think

00:44:43,450 --> 00:44:47,829
we'll see more of them I'm seeing

00:44:45,579 --> 00:44:50,079
templating languages which are written

00:44:47,829 --> 00:44:51,970
both in PHP or the option to have them

00:44:50,079 --> 00:44:55,540
run faster because you're running them

00:44:51,970 --> 00:44:59,770
as a see extension you need to ask this

00:44:55,540 --> 00:45:03,099
question when you buy hosting can I get

00:44:59,770 --> 00:45:05,560
support with my PHP setup had a great

00:45:03,099 --> 00:45:07,510
meeting with a very local hosting

00:45:05,560 --> 00:45:09,730
company with me went to a business

00:45:07,510 --> 00:45:12,099
meeting where both suppliers same client

00:45:09,730 --> 00:45:14,170
to see and they said and the clients are

00:45:12,099 --> 00:45:15,730
said and what help can we get without

00:45:14,170 --> 00:45:17,079
with our PHP application now manage

00:45:15,730 --> 00:45:18,490
application service and the guy said oh

00:45:17,079 --> 00:45:20,589
yes we can certainly help you with that

00:45:18,490 --> 00:45:23,500
I'm thinking I drink with these people

00:45:20,589 --> 00:45:25,119
there Ruby people not sure how you're

00:45:23,500 --> 00:45:28,030
going to support my PHP actually they've

00:45:25,119 --> 00:45:29,770
been fabulous and really really helpful

00:45:28,030 --> 00:45:32,530
we haven't we haven't had any particular

00:45:29,770 --> 00:45:34,869
PHP problems but ask this question can I

00:45:32,530 --> 00:45:36,970
get support my PHP setup is something

00:45:34,869 --> 00:45:40,480
strange and you in a position to look at

00:45:36,970 --> 00:45:42,910
my config settings and advise me or am I

00:45:40,480 --> 00:45:45,130
completely on my own there's a lot of

00:45:42,910 --> 00:45:49,119
competition in the hosting market and

00:45:45,130 --> 00:45:50,770
I'm quite interested to see how we find

00:45:49,119 --> 00:45:52,960
the good ones and is not related on

00:45:50,770 --> 00:45:55,660
price at all the best ones are not the

00:45:52,960 --> 00:45:58,359
most expensive so here is what Twitter

00:45:55,660 --> 00:46:00,339
gave me I am sure there are people

00:45:58,359 --> 00:46:02,349
missing from this list but absolutely

00:46:00,339 --> 00:46:04,930
deserve to be here so please tweet them

00:46:02,349 --> 00:46:06,500
at me i am at lorna jane and i will just

00:46:04,930 --> 00:46:11,620
keep adding slides to this day

00:46:06,500 --> 00:46:15,080
re uploading and then you can look up a

00:46:11,620 --> 00:46:17,620
crowd-sourced better list from my

00:46:15,080 --> 00:46:21,580
Twitter account my Twitter followers

00:46:17,620 --> 00:46:27,440
requiring 5.5 minimum this is what I got

00:46:21,580 --> 00:46:31,160
sir the Grove server Grove I know Pablo

00:46:27,440 --> 00:46:33,440
personally he is an absolutely very

00:46:31,160 --> 00:46:34,520
geeky person and he's Symphony nut so he

00:46:33,440 --> 00:46:38,750
can help you with all of your Drupal

00:46:34,520 --> 00:46:42,620
stuff as well lion owed our great 5.5

00:46:38,750 --> 00:46:44,660
available I host with lino digital ocean

00:46:42,620 --> 00:46:46,460
got recommended siteground Rackspace

00:46:44,660 --> 00:46:47,870
Rackspace are here perhaps you should go

00:46:46,460 --> 00:46:50,330
and ask them if they have any special

00:46:47,870 --> 00:46:52,640
offers so this is a very unofficial list

00:46:50,330 --> 00:46:54,920
if you would like to add anything to it

00:46:52,640 --> 00:46:57,440
that would be awesome a while just make

00:46:54,920 --> 00:46:58,880
a bigger unofficial list and either put

00:46:57,440 --> 00:47:01,670
in my slide deck or maybe blog it for

00:46:58,880 --> 00:47:05,270
you or something they are out there

00:47:01,670 --> 00:47:08,090
they're affordable they're real running

00:47:05,270 --> 00:47:10,160
5.5 a standard they understand your your

00:47:08,090 --> 00:47:12,650
needs and they can support you there is

00:47:10,160 --> 00:47:14,690
no need to set off a second class

00:47:12,650 --> 00:47:16,240
hosting for your first class

00:47:14,690 --> 00:47:24,770
applications because I'm sure at all

00:47:16,240 --> 00:47:28,180
fantastic this slide says Drupal 8 and

00:47:24,770 --> 00:47:28,180
the future

00:47:30,290 --> 00:47:37,350
drupal 8 is the future not just your

00:47:34,140 --> 00:47:40,680
future but the future of all of your

00:47:37,350 --> 00:47:42,150
future clients and the future of people

00:47:40,680 --> 00:47:44,730
who haven't even installed Drupal don't

00:47:42,150 --> 00:47:47,250
know yet the future for many people

00:47:44,730 --> 00:47:50,220
coming over from PHP as you've become a

00:47:47,250 --> 00:47:52,890
bit more programmer oriented perhaps in

00:47:50,220 --> 00:47:57,270
your back-end and particularly as Drupal

00:47:52,890 --> 00:48:01,230
8 is developed PHP has evolved hugely I

00:47:57,270 --> 00:48:03,930
know it's a pain to have the minimum

00:48:01,230 --> 00:48:06,180
version increase just to run the newest

00:48:03,930 --> 00:48:08,190
version of Drupal i know i know i know

00:48:06,180 --> 00:48:10,530
you have service that set up and run

00:48:08,190 --> 00:48:13,670
perfectly well no one's going to pay you

00:48:10,530 --> 00:48:16,020
to install a new platform I understand

00:48:13,670 --> 00:48:20,850
but really good things have happened in

00:48:16,020 --> 00:48:24,480
PHP your minimum version increase gives

00:48:20,850 --> 00:48:27,570
you a load of fabulous new tools for the

00:48:24,480 --> 00:48:31,110
people building Drupal as well as for

00:48:27,570 --> 00:48:34,290
the people using Drupal the increased

00:48:31,110 --> 00:48:35,940
frequency of PHP releases means that

00:48:34,290 --> 00:48:38,580
especially if you can get to five point

00:48:35,940 --> 00:48:43,200
four or five point five your upgrade

00:48:38,580 --> 00:48:46,590
paths will not be painful and a server

00:48:43,200 --> 00:48:48,180
which launched on by four because there

00:48:46,590 --> 00:48:50,250
wasn't a 55 package available for the

00:48:48,180 --> 00:48:53,480
distro at the Times about 18 months ago

00:48:50,250 --> 00:48:56,760
and when the package became available

00:48:53,480 --> 00:48:58,560
because it's in ubuntu LTS my sis admins

00:48:56,760 --> 00:49:00,150
a super keen for me to upgrade and they

00:48:58,560 --> 00:49:01,110
were like okay right when should we do

00:49:00,150 --> 00:49:03,630
it when should we take the site out

00:49:01,110 --> 00:49:05,610
watch me and I was like well I'm

00:49:03,630 --> 00:49:10,050
actually out of the office but you just

00:49:05,610 --> 00:49:13,350
upgrade at any time 54 55 whatever it'll

00:49:10,050 --> 00:49:15,150
work it did that's how the upgrades are

00:49:13,350 --> 00:49:16,950
and that's how they should be and that's

00:49:15,150 --> 00:49:20,430
where we are when will PHP get easier to

00:49:16,950 --> 00:49:24,950
upgrade it did we're there the future is

00:49:20,430 --> 00:49:27,060
here your future is based upon it I'm

00:49:24,950 --> 00:49:29,340
kind of excited I don't know if you're

00:49:27,060 --> 00:49:30,840
excited I think maybe you're not yet I'm

00:49:29,340 --> 00:49:34,430
quite excited there's some new features

00:49:30,840 --> 00:49:38,610
here I hope that you'll like them and

00:49:34,430 --> 00:49:41,420
come here come to the future good

00:49:38,610 --> 00:49:43,740
features good performance free software

00:49:41,420 --> 00:49:48,119
supported security fixes loads

00:49:43,740 --> 00:49:51,180
stuff and drupal 8 as it gets beyond

00:49:48,119 --> 00:49:54,260
betta hopefully a great rapid pace and

00:49:51,180 --> 00:49:56,369
you will be using it in no time at all

00:49:54,260 --> 00:49:59,030
that's what I'm hoping that's that's why

00:49:56,369 --> 00:50:02,010
that's my utopian vision for the future

00:49:59,030 --> 00:50:05,369
better features great tools and I'm

00:50:02,010 --> 00:50:07,380
thinking of composure and all of the

00:50:05,369 --> 00:50:09,510
kind of using different pick and mix

00:50:07,380 --> 00:50:12,240
libraries you've drush rapping composer

00:50:09,510 --> 00:50:14,250
so you have this already the improved

00:50:12,240 --> 00:50:19,080
performance and the stuff that we can

00:50:14,250 --> 00:50:21,300
build on features like this right who

00:50:19,080 --> 00:50:22,710
has questions for me please come to the

00:50:21,300 --> 00:50:27,000
microphone if you would like to ask me

00:50:22,710 --> 00:50:29,750
anything at all while you are all

00:50:27,000 --> 00:50:32,160
rushing out of your chairs to do that

00:50:29,750 --> 00:50:35,190
then I just wanted to mention this

00:50:32,160 --> 00:50:37,680
intermediate PHP video if you've got the

00:50:35,190 --> 00:50:40,619
email this morning saying o.o Riley are

00:50:37,680 --> 00:50:42,960
offering you a free e-book click on the

00:50:40,619 --> 00:50:45,510
link because as well as the free ebooks

00:50:42,960 --> 00:50:47,490
are giving away my free videos one of

00:50:45,510 --> 00:50:49,830
them is intermediate PHP so it covers

00:50:47,490 --> 00:50:52,710
new features in PHP object-oriented

00:50:49,830 --> 00:50:54,540
programming composer the command line

00:50:52,710 --> 00:50:57,570
stuff the web server stuff it's really

00:50:54,540 --> 00:50:59,130
just intended as a kind of people who

00:50:57,570 --> 00:51:01,310
are competent that PHP and want to be

00:50:59,130 --> 00:51:04,020
more awesome it's in the video so

00:51:01,310 --> 00:51:06,480
they've given you a free ebook but it's

00:51:04,020 --> 00:51:09,060
not even an e-book it's a video so

00:51:06,480 --> 00:51:10,890
that's a shameless plug for that nobody

00:51:09,060 --> 00:51:12,240
got out the chest so I'm going to get to

00:51:10,890 --> 00:51:14,130
my cup of coffee even sooner than I

00:51:12,240 --> 00:51:17,400
thought if you want to get in touch

00:51:14,130 --> 00:51:19,470
tweet at me I'm Lorna Jane I blog

00:51:17,400 --> 00:51:20,609
regularly on Lana Jane dotnet find me

00:51:19,470 --> 00:51:24,930
I'm around until about this time

00:51:20,609 --> 00:51:26,670
tomorrow and thank you thank you so much

00:51:24,930 --> 00:51:29,710
for coming please rate the session and

00:51:26,670 --> 00:51:31,770
enjoy PHP

00:51:29,710 --> 00:51:31,770

YouTube URL: https://www.youtube.com/watch?v=XJ5x0IwuxsM


