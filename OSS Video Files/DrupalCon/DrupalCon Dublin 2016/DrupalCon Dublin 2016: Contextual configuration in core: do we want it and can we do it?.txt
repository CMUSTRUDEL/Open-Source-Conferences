Title: DrupalCon Dublin 2016: Contextual configuration in core: do we want it and can we do it?
Publication date: 2016-09-27
Playlist: DrupalCon Dublin 2016
Description: 
	Problem/Motivation

Working on the contextual override of configuration objects (in the context of Domains), and I want to build a user interface (UI). I had intended to use Config Translation as a model, but ran into a few issues:

* Config Translation shows us that schema mapping is critical to build a UI for config overrides. Building the form requires the schema.

* Schema has some of the required metadata for building this form. The rest (access control, for instance) is stored in the route.

* Config Translation handles config entities, config objects, and field config. The required metadata for routes and access control (used to build the list of translatable strings) can be derived for config entities and field config, but not for config objects.

* Config objects, therefore, have their own special mappers (*.config_translation.yml), whose sole purpose is to map Routes (and therefore paths and access control) to Schemas, which allows the Config Translation UI to work.

* The support for config objects in those *.config_translation.yml files is limited to string data types, because that's what Config Translation cares about.

Suppose, however, the following use-case for a site:

* When Hungarian is the default language context, timezone should be CEST (UTC + 1:00); when Japanese is the default language context, timezone should be JT (UTC + 9:00).

Right now, you cannot discover the proper data to use to recreate:

* A route to the default configuration form for settings.date.

* The schema used by that form -- though that is potentially addressed in https://drupal.org/node/2095289.

* Access control rules that should be applied to that form.

* A way to discover config objects that are not strings (like timezone).

So the question for core is: Do we can about the ability to do these things? If so, what changes are necessary to enable them?
Captions: 
	00:00:00,680 --> 00:00:03,870
I've been I've been doing this for a

00:00:02,700 --> 00:00:05,520
long time so I always like to put the

00:00:03,870 --> 00:00:07,649
title slide up first so everyone can see

00:00:05,520 --> 00:00:10,290
like you are in the right place let's

00:00:07,649 --> 00:00:12,809
hope I was joking that 10 people would

00:00:10,290 --> 00:00:14,519
show up just like you know droop was

00:00:12,809 --> 00:00:15,719
sort of a nerdy little hobby thing for a

00:00:14,519 --> 00:00:17,460
lot of people and this is like the

00:00:15,719 --> 00:00:20,520
nerdiest little corner of that nerdy

00:00:17,460 --> 00:00:22,260
little hobby and so either this is a

00:00:20,520 --> 00:00:24,390
real pain point for you or you will have

00:00:22,260 --> 00:00:27,779
no idea what I'm talking about or why it

00:00:24,390 --> 00:00:29,880
matters but that's fun so we have an

00:00:27,779 --> 00:00:32,669
agenda I put an agenda together I'm

00:00:29,880 --> 00:00:35,070
going to explain Who I am some issue

00:00:32,669 --> 00:00:37,050
background and some use cases because

00:00:35,070 --> 00:00:38,190
use cases are important i'm going to

00:00:37,050 --> 00:00:40,320
show you what we've done it in the past

00:00:38,190 --> 00:00:42,210
i'm going to show you what's up in

00:00:40,320 --> 00:00:44,730
drupal 8 i'm going to make a modest

00:00:42,210 --> 00:00:45,690
proposal for what we do in core and

00:00:44,730 --> 00:00:48,980
we're going to talk about things that

00:00:45,690 --> 00:00:53,370
block this from actually happening I Wow

00:00:48,980 --> 00:00:54,920
25 people two and a half two hundred and

00:00:53,370 --> 00:00:59,100
fifty percent more than I expected

00:00:54,920 --> 00:01:01,430
that's awesome I'm Ken record i work for

00:00:59,100 --> 00:01:03,989
palantir net which is a chicago-based

00:01:01,430 --> 00:01:06,420
Drupal strategy design and development

00:01:03,989 --> 00:01:11,580
firm I've been around Drupal since for

00:01:06,420 --> 00:01:14,369
dot five I think 12 years now I'm the

00:01:11,580 --> 00:01:17,340
domain access maintainer will show you

00:01:14,369 --> 00:01:19,110
some slides of that domain access

00:01:17,340 --> 00:01:21,570
actually goes back to Drupal 5 i'm

00:01:19,110 --> 00:01:23,549
working on the drupal 8 port right now i

00:01:21,570 --> 00:01:25,439
was one of the co-authors of pro drupal

00:01:23,549 --> 00:01:28,259
development someone was asking me at

00:01:25,439 --> 00:01:30,270
lunch if if like that palin sure we know

00:01:28,259 --> 00:01:33,270
Drupal I'm like yeah yeah I've kind of

00:01:30,270 --> 00:01:35,570
laughed at him like yeah we know what's

00:01:33,270 --> 00:01:37,320
really interesting to me a lot of the

00:01:35,570 --> 00:01:39,840
foundational work that we're going to be

00:01:37,320 --> 00:01:43,439
talking about I did the last time I was

00:01:39,840 --> 00:01:47,490
in Dublin for dev days in 2013 and I got

00:01:43,439 --> 00:01:48,780
to work with gabor and Alex pot who were

00:01:47,490 --> 00:01:50,850
doing the configuration management

00:01:48,780 --> 00:01:52,170
initiative I'm going to talk a lot about

00:01:50,850 --> 00:01:55,350
the work that they've done particularly

00:01:52,170 --> 00:01:56,399
around translation the other thing that

00:01:55,350 --> 00:01:58,799
I think is a little interesting that I

00:01:56,399 --> 00:02:02,009
just came out of the I just came out of

00:01:58,799 --> 00:02:03,990
the impostor syndrome session and it's

00:02:02,009 --> 00:02:07,079
funny this is my 20th drupalcon and

00:02:03,990 --> 00:02:08,849
probably like my 30th presentation but

00:02:07,079 --> 00:02:10,379
my first core conversation just the last

00:02:08,849 --> 00:02:12,750
time i was on the schedule to do a core

00:02:10,379 --> 00:02:13,410
conversation i got bumped because the

00:02:12,750 --> 00:02:14,700
the one

00:02:13,410 --> 00:02:16,020
front of me went long and they thought

00:02:14,700 --> 00:02:19,470
it was more important than mine so

00:02:16,020 --> 00:02:21,270
there's some imposter syndrome for to be

00:02:19,470 --> 00:02:23,550
fair that was Greg Dunlap talking about

00:02:21,270 --> 00:02:29,610
configuration management back in like

00:02:23,550 --> 00:02:32,460
twenty thirteen I think okay issue

00:02:29,610 --> 00:02:33,840
background funny issue Baccarin so I'm

00:02:32,460 --> 00:02:37,320
the domain access maintainer how many

00:02:33,840 --> 00:02:40,650
people know what that is whoa see I have

00:02:37,320 --> 00:02:43,410
groupies this real fun I met one at

00:02:40,650 --> 00:02:45,630
lunch she was like you do that oh it's

00:02:43,410 --> 00:02:47,370
great so yeah it comes from Drupal 5 I

00:02:45,630 --> 00:02:49,440
will tell you for a minute word where

00:02:47,370 --> 00:02:50,880
some of gym domain access comes from

00:02:49,440 --> 00:02:53,160
just so you know it lets you run a group

00:02:50,880 --> 00:02:55,590
of sites of course and one of the things

00:02:53,160 --> 00:02:58,050
we realized very quickly we were trying

00:02:55,590 --> 00:03:01,470
to build a bunch of city-based magazine

00:02:58,050 --> 00:03:02,910
websites we were based in Georgia and

00:03:01,470 --> 00:03:04,800
the sales team wanted to be able to go

00:03:02,910 --> 00:03:06,360
out and sell in other cities and they

00:03:04,800 --> 00:03:08,490
immediately said well we want to sell

00:03:06,360 --> 00:03:09,900
this in Los Angeles and we had worked it

00:03:08,490 --> 00:03:12,000
out so that you could change the theme

00:03:09,900 --> 00:03:13,650
and present the right content for those

00:03:12,000 --> 00:03:15,780
markets but then one of the other

00:03:13,650 --> 00:03:20,220
developers went wait Los Angeles is in a

00:03:15,780 --> 00:03:22,590
different time zone what do we do about

00:03:20,220 --> 00:03:24,750
that and it turns out that settings dot

00:03:22,590 --> 00:03:26,310
PHP is a PHP file so you can do whatever

00:03:24,750 --> 00:03:29,760
you want to in there including run lots

00:03:26,310 --> 00:03:31,860
of code to run configuration overrides

00:03:29,760 --> 00:03:33,630
which we used to do raw in settings dot

00:03:31,860 --> 00:03:36,300
PHP and everyone's good friend the conf

00:03:33,630 --> 00:03:39,360
array so i will show you some stuff

00:03:36,300 --> 00:03:41,370
these are screenshots that I took from

00:03:39,360 --> 00:03:43,709
Drupal 6 the other day but here's the

00:03:41,370 --> 00:03:45,300
use case right so if Hungarian is a

00:03:43,709 --> 00:03:47,430
default language context we want the

00:03:45,300 --> 00:03:48,720
timezone to be a certain thing and if

00:03:47,430 --> 00:03:50,400
it's Japanese we want it to be another

00:03:48,720 --> 00:03:52,050
thing perfectly legitimate use case for

00:03:50,400 --> 00:03:53,610
what i would consider when I talk about

00:03:52,050 --> 00:03:55,860
contextual configuration this is what I

00:03:53,610 --> 00:03:59,670
mean changing some core value in

00:03:55,860 --> 00:04:01,920
drupal's under layer so that things are

00:03:59,670 --> 00:04:04,050
presented differently depending on the

00:04:01,920 --> 00:04:06,660
context you come to i use domain as my

00:04:04,050 --> 00:04:08,810
proper my normal context languages of

00:04:06,660 --> 00:04:12,300
context we'll talk about some others

00:04:08,810 --> 00:04:14,700
groups are contexts right that's another

00:04:12,300 --> 00:04:16,980
common use case and so yeah the Gujarat

00:04:14,700 --> 00:04:18,060
group on groups to a drupal org might

00:04:16,980 --> 00:04:21,239
want to have a different time zone

00:04:18,060 --> 00:04:25,440
presented right that's a contextual

00:04:21,239 --> 00:04:26,700
configuration can you do it I already

00:04:25,440 --> 00:04:28,710
answered that whoops

00:04:26,700 --> 00:04:32,130
yeah you can this is how we did it in

00:04:28,710 --> 00:04:35,340
Drupal five six and seven actually is we

00:04:32,130 --> 00:04:39,840
create a giant arrays of forms that let

00:04:35,340 --> 00:04:42,810
you override selected variables that

00:04:39,840 --> 00:04:44,850
were popular actually that's not true in

00:04:42,810 --> 00:04:46,920
five and six and i think in seven i

00:04:44,850 --> 00:04:50,670
provided default support for every

00:04:46,920 --> 00:04:54,660
configuration for mid-core and then if

00:04:50,670 --> 00:04:58,200
it was in contribute module to use the

00:04:54,660 --> 00:05:01,560
hook here to add their own array of doom

00:04:58,200 --> 00:05:02,850
this worked it gave you this lovely page

00:05:01,560 --> 00:05:05,370
that shows you all the things that were

00:05:02,850 --> 00:05:06,420
configurable which gave you this lovely

00:05:05,370 --> 00:05:08,400
form that showed you all the

00:05:06,420 --> 00:05:10,800
configurations and you could change them

00:05:08,400 --> 00:05:13,650
all at once right any work this is this

00:05:10,800 --> 00:05:16,620
is actual Drupal 6 to do so hey

00:05:13,650 --> 00:05:19,200
different site different site very

00:05:16,620 --> 00:05:21,840
exciting we actually realized in the

00:05:19,200 --> 00:05:23,820
Drupal lateness Drupal 6 cycle there was

00:05:21,840 --> 00:05:26,880
an easier way to do this and I wrote a

00:05:23,820 --> 00:05:29,010
domain settings form in Drupal for those

00:05:26,880 --> 00:05:31,340
of you who don't remember Drupal 6 & 7

00:05:29,010 --> 00:05:33,840
there's a system settings form function

00:05:31,340 --> 00:05:35,400
that was used any time you wanted to

00:05:33,840 --> 00:05:37,200
build a system settings for and you can

00:05:35,400 --> 00:05:39,000
actually in a hook for malter you could

00:05:37,200 --> 00:05:40,770
read in and say oh this is using system

00:05:39,000 --> 00:05:43,050
settings form it must be a config form

00:05:40,770 --> 00:05:45,750
and then we just overlay our own stuff

00:05:43,050 --> 00:05:47,610
so you got this which said hey this is a

00:05:45,750 --> 00:05:51,030
domain sensitive form you're going to

00:05:47,610 --> 00:05:54,330
set a contextual variable oh isn't this

00:05:51,030 --> 00:05:58,530
nice and I have you know here's an

00:05:54,330 --> 00:06:01,080
example this is the lovely blue marine

00:05:58,530 --> 00:06:05,040
theme used for admin on one of my sites

00:06:01,080 --> 00:06:08,520
so this is all really cool it's really

00:06:05,040 --> 00:06:10,890
nice it's been expected functionality in

00:06:08,520 --> 00:06:12,510
some small segments like a like I said

00:06:10,890 --> 00:06:15,330
the people who really use this are in

00:06:12,510 --> 00:06:18,120
the domain world and in the OG world I

00:06:15,330 --> 00:06:21,240
don't know if anyone else has contexts

00:06:18,120 --> 00:06:22,590
that they care about but what I wanted

00:06:21,240 --> 00:06:24,360
to do is so there's the background then

00:06:22,590 --> 00:06:27,330
I want to talk about what's going on in

00:06:24,360 --> 00:06:29,970
Drupal 8 why you can't do this in Drupal

00:06:27,330 --> 00:06:33,870
8 and why we should or should not be

00:06:29,970 --> 00:06:35,820
able to do this in Drupal 8 and it's a

00:06:33,870 --> 00:06:38,550
little bit unfair I said it was here in

00:06:35,820 --> 00:06:40,080
2013 working on this stuff and and I

00:06:38,550 --> 00:06:41,550
remember gabor and Alex

00:06:40,080 --> 00:06:44,550
both thrilled because I can do

00:06:41,550 --> 00:06:47,400
contextual overrides in Drupal 8 right

00:06:44,550 --> 00:06:50,879
now and I'll show you how and then

00:06:47,400 --> 00:06:52,500
you'll cry because they work which is

00:06:50,879 --> 00:06:56,330
great which means the underlying code

00:06:52,500 --> 00:07:00,659
system works but I can't do this right

00:06:56,330 --> 00:07:03,360
and I'll show you why and what do we do

00:07:00,659 --> 00:07:06,240
in core so core configuration as

00:07:03,360 --> 00:07:09,599
everyone knows is giant stacks of yamo

00:07:06,240 --> 00:07:11,520
files ray then there are a couple things

00:07:09,599 --> 00:07:12,840
you can do you configure overrides you

00:07:11,520 --> 00:07:14,460
have config schema and config

00:07:12,840 --> 00:07:16,530
translation or all different parts of

00:07:14,460 --> 00:07:18,479
the system will touch a little bit and

00:07:16,530 --> 00:07:21,740
this is what a config file looks like

00:07:18,479 --> 00:07:25,199
everyone's seen these before right and

00:07:21,740 --> 00:07:30,680
you can using the domain config module

00:07:25,199 --> 00:07:34,610
import all or part of a config schemas

00:07:30,680 --> 00:07:38,039
config schemas are so broad and so

00:07:34,610 --> 00:07:40,650
complex in in my world I don't bother

00:07:38,039 --> 00:07:43,439
trying to force you to clone the schema

00:07:40,650 --> 00:07:45,509
and I don't keep up with that domain

00:07:43,439 --> 00:07:48,330
config will actually just recursively

00:07:45,509 --> 00:07:51,060
load as much config as you care to

00:07:48,330 --> 00:07:52,770
override for a specific context by

00:07:51,060 --> 00:07:55,139
default it actually supports both domain

00:07:52,770 --> 00:07:56,759
and language which is really cool but if

00:07:55,139 --> 00:07:59,270
you want to change like the site name

00:07:56,759 --> 00:08:02,330
you have to upload a llamo file

00:07:59,270 --> 00:08:04,379
following a naming convention right

00:08:02,330 --> 00:08:06,180
what's nice is you can act the naming

00:08:04,379 --> 00:08:09,000
confection actually also supports a dot

00:08:06,180 --> 00:08:10,110
language element in the string for those

00:08:09,000 --> 00:08:12,930
of you who really care about this stuff

00:08:10,110 --> 00:08:14,550
if you have a dot language domain it'll

00:08:12,930 --> 00:08:15,930
look for that first and then if it

00:08:14,550 --> 00:08:17,490
doesn't find the dot language it'll fall

00:08:15,930 --> 00:08:19,830
back to the doctor may which is really

00:08:17,490 --> 00:08:22,169
awesome and does show the power of what

00:08:19,830 --> 00:08:26,270
we have in config management configure

00:08:22,169 --> 00:08:30,449
over right and look it works drupal 8

00:08:26,270 --> 00:08:33,089
like one yeah I made a change now my

00:08:30,449 --> 00:08:34,829
assumption had always been the stuff

00:08:33,089 --> 00:08:38,070
that they're doing in in config

00:08:34,829 --> 00:08:40,110
translation once that's done all have to

00:08:38,070 --> 00:08:43,229
do is clone their user interfaces and

00:08:40,110 --> 00:08:45,660
boom I'll have forms for all this stuff

00:08:43,229 --> 00:08:50,130
and the rest of the presentation is

00:08:45,660 --> 00:08:51,959
about why that doesn't work gray so this

00:08:50,130 --> 00:08:53,069
is what you get again with languages

00:08:51,959 --> 00:08:53,990
right and I went ahead and installed

00:08:53,069 --> 00:08:55,250
Irish on my

00:08:53,990 --> 00:08:59,029
site because that's the proper thing to

00:08:55,250 --> 00:09:00,740
do and you get this config translation

00:08:59,029 --> 00:09:02,330
screen which actually looks a lot like

00:09:00,740 --> 00:09:04,339
the domain access screen we saw from

00:09:02,330 --> 00:09:07,690
Drupal 6 here's a list of all the things

00:09:04,339 --> 00:09:09,740
you can translate right that's awesome

00:09:07,690 --> 00:09:12,279
what I want to show you I mean how many

00:09:09,740 --> 00:09:15,680
of you actually ever poked at this code

00:09:12,279 --> 00:09:19,630
that's one person sheepishly in the

00:09:15,680 --> 00:09:24,110
front that doesn't surprise me this is

00:09:19,630 --> 00:09:25,610
really complicated stuff I actually

00:09:24,110 --> 00:09:26,600
figured this stuff out about nine months

00:09:25,610 --> 00:09:28,459
ago and then when writing the

00:09:26,600 --> 00:09:31,300
presentation had to spend an hour and a

00:09:28,459 --> 00:09:33,529
half refreshing my understanding of it

00:09:31,300 --> 00:09:35,899
so what happens to make all this work

00:09:33,529 --> 00:09:39,170
there are three things that we're

00:09:35,899 --> 00:09:43,640
looking for in the translation space and

00:09:39,170 --> 00:09:49,810
these are all eligible to be

00:09:43,640 --> 00:09:52,220
contextually configured config entities

00:09:49,810 --> 00:09:53,870
language translation the config

00:09:52,220 --> 00:09:57,589
translation understands how to read

00:09:53,870 --> 00:10:00,230
those just perfectly fields it can

00:09:57,589 --> 00:10:01,760
handle those perfectly to config objects

00:10:00,230 --> 00:10:03,980
config objects are the things that

00:10:01,760 --> 00:10:06,850
actually store like your site name and

00:10:03,980 --> 00:10:10,579
your email address things like that

00:10:06,850 --> 00:10:12,829
config objects core doesn't actually

00:10:10,579 --> 00:10:14,450
know how to handle those you have to

00:10:12,829 --> 00:10:16,760
register them either through a hook or

00:10:14,450 --> 00:10:18,500
through a custom yamo file and we'll get

00:10:16,760 --> 00:10:20,510
to that in a minute and I can already

00:10:18,500 --> 00:10:23,060
see people nodding about why this is a

00:10:20,510 --> 00:10:28,279
bad thing or problematic if you're in

00:10:23,060 --> 00:10:32,660
contribs it produces these nice lists of

00:10:28,279 --> 00:10:34,399
things you can translate what's what's

00:10:32,660 --> 00:10:36,560
really interesting here it's this is

00:10:34,399 --> 00:10:38,540
selective the first thing I noticed is

00:10:36,560 --> 00:10:40,550
this is very selective handling number

00:10:38,540 --> 00:10:42,110
one it yes it reads config entities in

00:10:40,550 --> 00:10:43,399
fields automatically the reason it reads

00:10:42,110 --> 00:10:46,490
fields by the way that fields are in

00:10:43,399 --> 00:10:47,870
fact config entities talking about them

00:10:46,490 --> 00:10:50,690
as if they're different things may be

00:10:47,870 --> 00:10:52,670
wrong only if they're typed label or

00:10:50,690 --> 00:10:55,220
type text and I think figured this out

00:10:52,670 --> 00:10:57,380
because I had a thing that was type

00:10:55,220 --> 00:10:58,790
string I think and it wasn't showing up

00:10:57,380 --> 00:10:59,899
in the translation interface I'm like

00:10:58,790 --> 00:11:01,610
why is this not do the translation

00:10:59,899 --> 00:11:05,120
interface because it has to be type

00:11:01,610 --> 00:11:07,920
label more text not string or whatever I

00:11:05,120 --> 00:11:09,570
had it is config objects again

00:11:07,920 --> 00:11:12,120
there's I think there's only two

00:11:09,570 --> 00:11:15,560
instances of instances of these in core

00:11:12,120 --> 00:11:19,579
module config translation or ya know

00:11:15,560 --> 00:11:22,740
those things that's how it registers

00:11:19,579 --> 00:11:24,899
config objects and those also have to be

00:11:22,740 --> 00:11:26,639
typed label or type text there's a

00:11:24,899 --> 00:11:29,760
really good logical reason for that can

00:11:26,639 --> 00:11:32,399
anyone guess what it is it translate

00:11:29,760 --> 00:11:35,070
ability only cares about strings we'll

00:11:32,399 --> 00:11:36,810
talk about that in a minute to so date

00:11:35,070 --> 00:11:40,079
and time formats are in fact strings

00:11:36,810 --> 00:11:42,060
that's great what's really really

00:11:40,079 --> 00:11:45,510
interesting also though is that this

00:11:42,060 --> 00:11:49,139
form doesn't look like this this is the

00:11:45,510 --> 00:11:53,459
config translation form right this is

00:11:49,139 --> 00:11:56,459
the regular form and translate shows up

00:11:53,459 --> 00:11:58,230
as an operation here but this

00:11:56,459 --> 00:12:01,740
information about the pattern doesn't

00:11:58,230 --> 00:12:03,510
show up here so the user interface is

00:12:01,740 --> 00:12:07,500
actually not replicated we'll talk a

00:12:03,510 --> 00:12:09,510
little bit about why that is too but

00:12:07,500 --> 00:12:11,250
it's fine it's great the the sort of

00:12:09,510 --> 00:12:13,589
fundamental things you need to build an

00:12:11,250 --> 00:12:15,660
interface like this are what's the URL

00:12:13,589 --> 00:12:19,019
to the translation going to be what's

00:12:15,660 --> 00:12:21,180
the URL to the the base form and it

00:12:19,019 --> 00:12:22,680
would be nice to be able to read the

00:12:21,180 --> 00:12:25,980
base form itself so you can replicate

00:12:22,680 --> 00:12:29,640
that base form and what actually happens

00:12:25,980 --> 00:12:31,470
is when we're translating something they

00:12:29,640 --> 00:12:35,420
have to do a couple of really weird

00:12:31,470 --> 00:12:38,399
things in the config translation module

00:12:35,420 --> 00:12:40,410
they have to do some route mapping to

00:12:38,399 --> 00:12:43,079
understand where the configs are so that

00:12:40,410 --> 00:12:44,190
you can provide those links and they

00:12:43,079 --> 00:12:46,140
have to create some local actions

00:12:44,190 --> 00:12:51,930
there's a lot of dynamic route handling

00:12:46,140 --> 00:12:56,190
that I can see a puzzled look it's it's

00:12:51,930 --> 00:13:00,230
weird this is where things get to me

00:12:56,190 --> 00:13:02,430
really strange this is the normal form

00:13:00,230 --> 00:13:07,589
this is the normal form if you're

00:13:02,430 --> 00:13:09,690
editing a date format but this is the

00:13:07,589 --> 00:13:13,889
form if you're editing a translation of

00:13:09,690 --> 00:13:16,589
a date format you'll notice these are

00:13:13,889 --> 00:13:19,500
not the same thing why are they not the

00:13:16,589 --> 00:13:21,300
same thing and I can show you the secret

00:13:19,500 --> 00:13:23,970
answer is I jump ahead is be

00:13:21,300 --> 00:13:27,149
the code that makes up this form is not

00:13:23,970 --> 00:13:31,740
readable to anything except the class or

00:13:27,149 --> 00:13:34,890
a class that extends the class that

00:13:31,740 --> 00:13:36,660
generates this form so back in Drupal 6

00:13:34,890 --> 00:13:39,000
& 7 when I'm just reading Oh this form

00:13:36,660 --> 00:13:41,579
uses system settings for my can assume

00:13:39,000 --> 00:13:43,410
it's a system settings form array that

00:13:41,579 --> 00:13:47,490
doesn't even happen anymore you can't

00:13:43,410 --> 00:13:49,320
even go in and say find me all instances

00:13:47,490 --> 00:13:55,370
of things that look like they're saving

00:13:49,320 --> 00:13:58,950
config there's no way to do it so that's

00:13:55,370 --> 00:14:00,390
interesting as we find out you exchange

00:13:58,950 --> 00:14:02,250
is hard to there are a couple of things

00:14:00,390 --> 00:14:04,980
that are happening happening in config

00:14:02,250 --> 00:14:06,600
translation that they have to do again

00:14:04,980 --> 00:14:08,790
the forms are all just raw formatting

00:14:06,600 --> 00:14:10,980
and then they have these five custom

00:14:08,790 --> 00:14:13,829
form element handlers that basically

00:14:10,980 --> 00:14:16,890
replicate form elements based on the

00:14:13,829 --> 00:14:20,100
type of string they're translating this

00:14:16,890 --> 00:14:22,890
is very weird one-off code that makes me

00:14:20,100 --> 00:14:25,589
cry a little bit because it's one off

00:14:22,890 --> 00:14:28,140
code and you couldn't use these either

00:14:25,589 --> 00:14:30,720
even if I could read the elements that

00:14:28,140 --> 00:14:32,190
were configurable in my module I can't I

00:14:30,720 --> 00:14:38,160
don't have any access to these classes

00:14:32,190 --> 00:14:39,360
either so they're useless to me so that

00:14:38,160 --> 00:14:41,670
brings me to the big question what about

00:14:39,360 --> 00:14:44,100
non string data so setting a time zone

00:14:41,670 --> 00:14:46,079
is not a string data that's not a string

00:14:44,100 --> 00:14:48,029
thing so config translation doesn't do

00:14:46,079 --> 00:14:49,920
it right so here's the problem as I see

00:14:48,029 --> 00:14:52,190
it we have no support for non string

00:14:49,920 --> 00:14:54,720
values we do not have abstracted code

00:14:52,190 --> 00:14:58,950
it's all hard coded to languages use

00:14:54,720 --> 00:15:02,640
case which makes me cry and they only do

00:14:58,950 --> 00:15:05,339
schema discovery which is interesting

00:15:02,640 --> 00:15:07,770
and when I say schema discovery they can

00:15:05,339 --> 00:15:11,370
discover config entities but again not

00:15:07,770 --> 00:15:13,199
config objects and if you want to say oh

00:15:11,370 --> 00:15:14,970
this is a config object that cares you

00:15:13,199 --> 00:15:19,050
again have to write extra code for that

00:15:14,970 --> 00:15:20,339
so why is this a problem this is so

00:15:19,050 --> 00:15:23,610
here's now we're getting to the argument

00:15:20,339 --> 00:15:25,890
part why is this a problem as me the

00:15:23,610 --> 00:15:27,540
domain access maintainer if I want to

00:15:25,890 --> 00:15:29,339
build a user interface so that you can

00:15:27,540 --> 00:15:31,350
change the time zone I have a couple of

00:15:29,339 --> 00:15:33,779
options right I can certainly just build

00:15:31,350 --> 00:15:34,920
it and I'd have to build like a one-off

00:15:33,779 --> 00:15:36,810
implementation for

00:15:34,920 --> 00:15:41,550
every variable I want you to be able to

00:15:36,810 --> 00:15:43,829
edit no I'm not going to do that I've

00:15:41,550 --> 00:15:45,810
done that before I could do that for all

00:15:43,829 --> 00:15:48,690
of core I would actually be willing to

00:15:45,810 --> 00:15:51,329
do that and then immediately people will

00:15:48,690 --> 00:15:54,480
come into my issue queue and say but

00:15:51,329 --> 00:15:57,420
what about the classic for me is always

00:15:54,480 --> 00:15:58,829
google analytics module well you'd have

00:15:57,420 --> 00:16:02,220
to take that up with a google analytics

00:15:58,829 --> 00:16:05,850
module maintainer you can't support

00:16:02,220 --> 00:16:08,220
something like this in contribute a main

00:16:05,850 --> 00:16:10,860
axis saw this in the d7 cycle when the

00:16:08,220 --> 00:16:12,750
variable API module came in there was a

00:16:10,860 --> 00:16:15,120
fork and how do you handle contextual

00:16:12,750 --> 00:16:18,570
configuration and domain access and you

00:16:15,120 --> 00:16:20,970
use my my way or jose's way which are

00:16:18,570 --> 00:16:23,250
both equally valid and that's fine but

00:16:20,970 --> 00:16:24,870
you have this competing solution problem

00:16:23,250 --> 00:16:27,360
which might be good at getting the best

00:16:24,870 --> 00:16:29,550
solution but is also a huge waste of

00:16:27,360 --> 00:16:31,620
time and effort which George was talking

00:16:29,550 --> 00:16:34,670
about it his session earlier today so I

00:16:31,620 --> 00:16:36,690
have no real impetus to do that either

00:16:34,670 --> 00:16:38,100
they're the pieces we have a lot of

00:16:36,690 --> 00:16:42,000
single-use code we have a chance to

00:16:38,100 --> 00:16:45,860
remove so contribs really not an option

00:16:42,000 --> 00:16:48,690
for fixing this stuff so modest proposal

00:16:45,860 --> 00:16:50,459
so this is actually what you'll see in

00:16:48,690 --> 00:16:52,709
one of those config translation yamo

00:16:50,459 --> 00:16:55,470
files this is the config translation

00:16:52,709 --> 00:17:01,019
llamo file for the system module oh look

00:16:55,470 --> 00:17:06,179
it's Alan you got to the the proposal

00:17:01,019 --> 00:17:09,329
portion so I spent the last half an hour

00:17:06,179 --> 00:17:11,220
ranting and setting up why I want to

00:17:09,329 --> 00:17:14,669
make these changes to be happy to talk

00:17:11,220 --> 00:17:17,459
to you about later so these config

00:17:14,669 --> 00:17:20,280
config translation llamo files do the

00:17:17,459 --> 00:17:23,370
following things well they do one thing

00:17:20,280 --> 00:17:27,630
they map config objects to routes that's

00:17:23,370 --> 00:17:29,490
all they really do they don't help with

00:17:27,630 --> 00:17:30,720
these other three things that we need we

00:17:29,490 --> 00:17:32,640
need to be able to abstract the form

00:17:30,720 --> 00:17:35,070
handling if we want to replicate forms

00:17:32,640 --> 00:17:37,890
we eatin keep to be able to link a

00:17:35,070 --> 00:17:41,400
schema for configuration to a specific

00:17:37,890 --> 00:17:43,230
route and we need the way I see it need

00:17:41,400 --> 00:17:45,480
to let module select data I said with

00:17:43,230 --> 00:17:47,940
config translation it throws out

00:17:45,480 --> 00:17:51,899
anything that's not typed label or 10

00:17:47,940 --> 00:17:53,580
next well that's fine and for its use

00:17:51,899 --> 00:17:55,080
case it should what we need is an API

00:17:53,580 --> 00:17:57,509
that actually says here's all the things

00:17:55,080 --> 00:17:59,610
you can configure which ones do you care

00:17:57,509 --> 00:18:01,470
about like you could write one that just

00:17:59,610 --> 00:18:03,570
cares about dates right so this is a

00:18:01,470 --> 00:18:07,139
date or just cares about bullion's or

00:18:03,570 --> 00:18:09,870
something like that so what's again kind

00:18:07,139 --> 00:18:11,639
of weird about this one again in the in

00:18:09,870 --> 00:18:13,889
the llamo file for config translation

00:18:11,639 --> 00:18:17,159
all that's really saying is well this is

00:18:13,889 --> 00:18:19,409
a this is a configuration thing it has a

00:18:17,159 --> 00:18:21,929
title here's the base route if you want

00:18:19,409 --> 00:18:23,549
to go to its settings form and this is

00:18:21,929 --> 00:18:26,580
the name of the config schema that it

00:18:23,549 --> 00:18:29,070
pulls it's a very weird piece of mapping

00:18:26,580 --> 00:18:32,990
and so of course my my dumb brain says

00:18:29,070 --> 00:18:35,909
number one why is this not on the route

00:18:32,990 --> 00:18:40,110
why why don't we just add the schema to

00:18:35,909 --> 00:18:42,690
the route Alex probably have a good

00:18:40,110 --> 00:18:44,549
reason why but maybe not so this is

00:18:42,690 --> 00:18:47,039
option number one that I recommend we do

00:18:44,549 --> 00:18:50,509
immediately let's add schemas two routes

00:18:47,039 --> 00:18:52,559
when it's appropriate option number two

00:18:50,509 --> 00:18:56,399
okay you don't like that let's add

00:18:52,559 --> 00:18:59,879
routes to schemas I don't want another

00:18:56,399 --> 00:19:02,340
yeah mille filed it and yeah just one

00:18:59,879 --> 00:19:04,529
one or the other either one is fine this

00:19:02,340 --> 00:19:06,960
one actually might be better now that I

00:19:04,529 --> 00:19:15,720
think about it no you want schemas on

00:19:06,960 --> 00:19:17,490
rounds okay yeah it's an interesting the

00:19:15,720 --> 00:19:25,590
only interesting challenge here to me is

00:19:17,490 --> 00:19:31,590
that routes are alterable right the

00:19:25,590 --> 00:19:32,879
schema if if necessary yet all right

00:19:31,590 --> 00:19:35,360
decision number one we're going to put

00:19:32,879 --> 00:19:35,360
it on the route

00:19:35,900 --> 00:19:40,040
that's that's awesome so that actually

00:19:37,970 --> 00:19:41,690
gets us sort of halfway there because

00:19:40,040 --> 00:19:43,640
once i have the schema on the route that

00:19:41,690 --> 00:19:47,090
means i can now build a user interface

00:19:43,640 --> 00:19:49,610
that says okay here the default settings

00:19:47,090 --> 00:19:52,910
for this thing and here are my links to

00:19:49,610 --> 00:19:59,990
contextual overrides for that thing okay

00:19:52,910 --> 00:20:01,340
yeah you you you could potentially put

00:19:59,990 --> 00:20:04,180
the schema on the class i'm not sure how

00:20:01,340 --> 00:20:14,030
you would do discovery of the of that

00:20:04,180 --> 00:20:15,650
without plugins that might be available

00:20:14,030 --> 00:20:28,640
and i'll show you why we don't do that

00:20:15,650 --> 00:20:31,700
now so this is you could put the route

00:20:28,640 --> 00:20:33,050
here on this is this is the base config

00:20:31,700 --> 00:20:34,940
form that you're talking about i think

00:20:33,050 --> 00:20:36,980
this is the base class the the actual

00:20:34,940 --> 00:20:39,680
blocker here the reason we cannot

00:20:36,980 --> 00:20:41,720
replicate even config translation can't

00:20:39,680 --> 00:20:46,010
replicate the date string forms is

00:20:41,720 --> 00:20:48,680
because the of this actually of that

00:20:46,010 --> 00:20:50,510
right there right it tells you this is

00:20:48,680 --> 00:20:52,490
the config that goes with this form oh

00:20:50,510 --> 00:20:56,390
but it's a protected function because we

00:20:52,490 --> 00:20:58,640
don't want you to read that so yes you

00:20:56,390 --> 00:21:00,080
probably could put the route on here and

00:20:58,640 --> 00:21:01,850
that would be a question of what

00:21:00,080 --> 00:21:07,780
collecting all implementations of the

00:21:01,850 --> 00:21:07,780
config form base I don't know I'm hoping

00:21:22,130 --> 00:21:28,900
yeah they're there already is an issue

00:21:27,140 --> 00:21:34,720
and it's been out there for like a year

00:21:28,900 --> 00:21:38,900
so I have a list of issues I have issues

00:21:34,720 --> 00:21:41,030
yeah this one is actually a little more

00:21:38,900 --> 00:21:43,490
challenging custom form submit handlers

00:21:41,030 --> 00:21:46,880
need to be accounted for in the in the

00:21:43,490 --> 00:21:50,000
old olden days when we had systems

00:21:46,880 --> 00:21:51,650
system form submit what I used to do is

00:21:50,000 --> 00:21:53,810
read whether or not that was the only

00:21:51,650 --> 00:21:55,400
submit handler on the form and if it had

00:21:53,810 --> 00:21:57,740
more than one submit handler I would

00:21:55,400 --> 00:21:59,600
ignore it and say I'm sorry this form is

00:21:57,740 --> 00:22:02,300
too complex for me to handle because I

00:21:59,600 --> 00:22:05,630
can't like date the date stuff in Drupal

00:22:02,300 --> 00:22:08,030
7 has like complex handling of form

00:22:05,630 --> 00:22:10,790
submissions that I couldn't replicate so

00:22:08,030 --> 00:22:12,800
this is an interesting question and you

00:22:10,790 --> 00:22:14,420
do have to answer the question of can

00:22:12,800 --> 00:22:17,390
you should you actually be able to

00:22:14,420 --> 00:22:19,580
contextually override any setting via

00:22:17,390 --> 00:22:21,110
the user interface yeah and alex is like

00:22:19,580 --> 00:22:23,540
know there are certain things we should

00:22:21,110 --> 00:22:24,740
ban we should bar right and I can tell

00:22:23,540 --> 00:22:27,800
you this cuz I've worked on in the

00:22:24,740 --> 00:22:29,960
schema API not the schema API the config

00:22:27,800 --> 00:22:31,820
override API one thing that you cannot

00:22:29,960 --> 00:22:34,310
contextual e configure is a domain

00:22:31,820 --> 00:22:36,470
record because if you try to do that it

00:22:34,310 --> 00:22:38,330
creates an infinite loop because the

00:22:36,470 --> 00:22:41,090
domain records are looking for the meds

00:22:38,330 --> 00:22:43,190
don't even so yes there are possible

00:22:41,090 --> 00:22:45,500
exclusions two things where we would say

00:22:43,190 --> 00:22:49,030
this should never be over rideable I

00:22:45,500 --> 00:22:49,030
don't know that's

00:22:56,720 --> 00:23:04,619
yeah what so what Alex pot the D you

00:23:02,039 --> 00:23:06,809
still the cmi maintainer so Alex bought

00:23:04,619 --> 00:23:12,090
the cmi lead is saying please no you

00:23:06,809 --> 00:23:13,950
cannot put the it's yeah chordata

00:23:12,090 --> 00:23:16,139
extension ya moul should never be

00:23:13,950 --> 00:23:17,730
contextually available and that's

00:23:16,139 --> 00:23:21,389
perfectly legit there's probably three

00:23:17,730 --> 00:23:24,840
or four other cases right but a good one

00:23:21,389 --> 00:23:27,960
a nice one to test is I like time zones

00:23:24,840 --> 00:23:30,629
great test I also love maintenance mode

00:23:27,960 --> 00:23:32,340
I love to contextually configure

00:23:30,629 --> 00:23:39,179
maintenance mode for that that's a lot

00:23:32,340 --> 00:23:43,289
of fun huh maintenance mode is not in

00:23:39,179 --> 00:23:44,549
config it's in state oh my I haven't

00:23:43,289 --> 00:23:46,830
even thought about the issue of

00:23:44,549 --> 00:23:50,570
contextual state changes and let's not

00:23:46,830 --> 00:23:55,109
go there I'm really only concerned with

00:23:50,570 --> 00:23:57,179
time zones keep it separate types of my

00:23:55,109 --> 00:24:01,019
two use cases time zones and Google

00:23:57,179 --> 00:24:02,879
Analytics codes which might actually

00:24:01,019 --> 00:24:07,710
well there text so they might actually

00:24:02,879 --> 00:24:09,269
be any way here so here the blockers if

00:24:07,710 --> 00:24:11,009
done correctly it actually is going to

00:24:09,269 --> 00:24:12,989
cause a major rewrite of config

00:24:11,009 --> 00:24:14,850
translation because what you'd want to

00:24:12,989 --> 00:24:16,980
do is rip out all of its custom code

00:24:14,850 --> 00:24:19,559
abstract it so that everybody could use

00:24:16,980 --> 00:24:21,720
it as a baseline API I was pointing out

00:24:19,559 --> 00:24:24,359
Alex that like there's five or six

00:24:21,720 --> 00:24:26,369
custom form element handlers that are

00:24:24,359 --> 00:24:28,169
single purpose in config translation

00:24:26,369 --> 00:24:30,840
moving them out would be a good thing

00:24:28,169 --> 00:24:34,649
the whole discovery process that it uses

00:24:30,840 --> 00:24:36,749
could all be moved out I don't know um

00:24:34,649 --> 00:24:37,980
so there's the big blocker test cases

00:24:36,749 --> 00:24:39,570
this is the other big question does

00:24:37,980 --> 00:24:41,279
anyone else actually have use cases for

00:24:39,570 --> 00:24:42,840
this let me ask this question since

00:24:41,279 --> 00:24:47,460
everyone SAT through this way how many

00:24:42,840 --> 00:24:49,139
people care about this issue okay what's

00:24:47,460 --> 00:24:50,940
funny was funny when I asked how many

00:24:49,139 --> 00:24:52,799
people knew what domain access was like

00:24:50,940 --> 00:24:54,239
ninety percent of the hands went up and

00:24:52,799 --> 00:24:56,250
when I just asked how many people care

00:24:54,239 --> 00:24:58,380
about forty percent of the hands went up

00:24:56,250 --> 00:25:00,690
so I told you this is like the nerdy

00:24:58,380 --> 00:25:04,320
quarter of the nerdy corner this is like

00:25:00,690 --> 00:25:05,610
very much out there so that goes to the

00:25:04,320 --> 00:25:07,530
title of the session right number one

00:25:05,610 --> 00:25:10,020
can we do it well kinda and the other

00:25:07,530 --> 00:25:14,850
issues really do we care do we actually

00:25:10,020 --> 00:25:17,010
care enough to get this done because

00:25:14,850 --> 00:25:19,680
otherwise my op my statement to people

00:25:17,010 --> 00:25:21,570
right now is well yes you can you can

00:25:19,680 --> 00:25:23,700
override variables on a per domain basis

00:25:21,570 --> 00:25:25,950
by editing a yellow file here's

00:25:23,700 --> 00:25:28,050
instruction on how to do that and I'm

00:25:25,950 --> 00:25:30,000
okay with telling people that I'm

00:25:28,050 --> 00:25:34,350
perfectly fine with that if that's what

00:25:30,000 --> 00:25:36,780
we decide to do yeah so my ears my

00:25:34,350 --> 00:25:38,280
related issues allow discovery of

00:25:36,780 --> 00:25:40,800
configuration you I that's the issue

00:25:38,280 --> 00:25:43,230
that I file that's the big rant

00:25:40,800 --> 00:25:45,570
basically that has all the details in it

00:25:43,230 --> 00:25:48,330
yeah make get editable config names

00:25:45,570 --> 00:25:49,770
public that's been out for a while the

00:25:48,330 --> 00:25:51,360
other one that's that's there that I

00:25:49,770 --> 00:25:54,180
don't think we've cracked is this one

00:25:51,360 --> 00:25:55,800
which is actually kind of nasty the no

00:25:54,180 --> 00:25:57,500
indication of config on configuration

00:25:55,800 --> 00:26:00,980
forms if there are overwritten values

00:25:57,500 --> 00:26:04,440
which is a really nice UX piece and

00:26:00,980 --> 00:26:06,000
really important and I'm not quite sure

00:26:04,440 --> 00:26:09,390
what to do about it but those are the

00:26:06,000 --> 00:26:13,760
three big issues here and that's all I

00:26:09,390 --> 00:26:16,020
have prepared so questions solutions

00:26:13,760 --> 00:26:18,600
people want to take free time I'm not

00:26:16,020 --> 00:26:20,220
going to be offended it's ten after four

00:26:18,600 --> 00:26:23,100
which means we finished very quickly

00:26:20,220 --> 00:26:25,080
which is great are there questions if so

00:26:23,100 --> 00:26:27,420
there is a mic might be better if

00:26:25,080 --> 00:26:32,010
somebody could pass it around getting up

00:26:27,420 --> 00:26:34,280
might be hard to this tiny room about

00:26:32,010 --> 00:26:38,190
your question there about the last

00:26:34,280 --> 00:26:40,050
question I wasn't this session before

00:26:38,190 --> 00:26:43,890
this about configuration and it talks

00:26:40,050 --> 00:26:47,430
about you have two different modes of

00:26:43,890 --> 00:26:51,240
touching configuration either by mutable

00:26:47,430 --> 00:26:53,340
or non mutable so you can see you either

00:26:51,240 --> 00:26:55,140
fetch it as a read-only value or a

00:26:53,340 --> 00:26:56,730
read/write value so in that case you

00:26:55,140 --> 00:27:02,450
should be able to deck if it's

00:26:56,730 --> 00:27:02,450
overridden yeah I don't know yeah

00:27:29,360 --> 00:27:34,139
yeah alex you want to come up so you can

00:27:31,889 --> 00:27:38,880
like share the mic and be recorded you

00:27:34,139 --> 00:27:40,789
don't have to again you I only know

00:27:38,880 --> 00:27:43,350
enough to solve the problem that I have

00:27:40,789 --> 00:27:44,760
and so I could be totally wrong about

00:27:43,350 --> 00:27:46,320
most of this stuff but these are the

00:27:44,760 --> 00:27:48,269
again the blockers that I ran into so

00:27:46,320 --> 00:27:49,440
the let's repeat the question and you

00:27:48,269 --> 00:27:51,450
can repeat your answer it might be

00:27:49,440 --> 00:27:58,830
helpful because they're recording all

00:27:51,450 --> 00:28:00,360
right the question was about immutable

00:27:58,830 --> 00:28:02,700
versus non immutable configuration and

00:28:00,360 --> 00:28:05,519
doesn't that help you in the UX yeah and

00:28:02,700 --> 00:28:07,320
and so if you look at the final issue

00:28:05,519 --> 00:28:11,610
here there's a lot of discussion about

00:28:07,320 --> 00:28:13,080
when when do you want to tell the user

00:28:11,610 --> 00:28:14,190
that it's over in or when do they just

00:28:13,080 --> 00:28:16,769
know it so if you're looking at a

00:28:14,190 --> 00:28:18,389
translated configuration form telling

00:28:16,769 --> 00:28:20,250
them about overwritten is the whole

00:28:18,389 --> 00:28:22,380
point it is over in your editing the

00:28:20,250 --> 00:28:25,350
override or are you just looking at the

00:28:22,380 --> 00:28:27,330
the first part the normal form the

00:28:25,350 --> 00:28:29,250
untranslated a bit and if that bits over

00:28:27,330 --> 00:28:31,049
over in selling this PHP what does that

00:28:29,250 --> 00:28:33,210
mean and how can you identify the actual

00:28:31,049 --> 00:28:35,700
form element thats related to the thing

00:28:33,210 --> 00:28:36,809
that's over in we could never make it

00:28:35,700 --> 00:28:39,809
work so that's why there's been no

00:28:36,809 --> 00:28:42,240
programs but ideally if you have an

00:28:39,809 --> 00:28:43,769
override in settings PHP the the form

00:28:42,240 --> 00:28:46,769
element would actually be disabled

00:28:43,769 --> 00:28:50,760
because you can't actually change it and

00:28:46,769 --> 00:28:53,909
so what happens well not not disabled

00:28:50,760 --> 00:28:55,919
what happens now in we change we swap

00:28:53,909 --> 00:28:57,899
the head behavior between two or 700

00:28:55,919 --> 00:29:01,250
plate in Drupal 7 if you override

00:28:57,899 --> 00:29:03,659
something and you go and edit the form

00:29:01,250 --> 00:29:04,950
the override will be set to the value

00:29:03,659 --> 00:29:06,480
and then you save and then we'll

00:29:04,950 --> 00:29:08,460
actually get saved to the database in

00:29:06,480 --> 00:29:10,110
Drupal 8 we get the UH Nova ridden value

00:29:08,460 --> 00:29:11,789
and we put it in the form so that you

00:29:10,110 --> 00:29:13,830
can deploy changes which aren't from

00:29:11,789 --> 00:29:17,299
your settings PHP / oath which is a

00:29:13,830 --> 00:29:20,129
better way but it's hidden from the

00:29:17,299 --> 00:29:22,350
yeah but it's but it's also very

00:29:20,129 --> 00:29:23,850
confusing a dribble 7 when you go in you

00:29:22,350 --> 00:29:25,019
at you press edit on a form and you

00:29:23,850 --> 00:29:27,480
change your value and your press save

00:29:25,019 --> 00:29:28,619
and it doesn't change Franco press save

00:29:27,480 --> 00:29:29,580
again why not why not and then

00:29:28,619 --> 00:29:31,230
eventually you gonna look in settings

00:29:29,580 --> 00:29:32,940
PHP and then maybe there's another

00:29:31,230 --> 00:29:34,679
include in their to an environmental

00:29:32,940 --> 00:29:36,389
file to include to include including you

00:29:34,679 --> 00:29:38,549
eventually get to why it was over in the

00:29:36,389 --> 00:29:40,109
first place and it's probably worth

00:29:38,549 --> 00:29:41,669
noting right there at least two

00:29:40,109 --> 00:29:44,009
different ways to override config in

00:29:41,669 --> 00:29:45,749
core now alright you can still hard code

00:29:44,009 --> 00:29:48,059
things in settings at PHP or you can use

00:29:45,749 --> 00:29:53,039
like I'm doing I actually load schema

00:29:48,059 --> 00:29:55,289
files well partial schema files and

00:29:53,039 --> 00:29:57,200
knowing which is which like in Drupal 7

00:29:55,289 --> 00:30:00,690
i'm always editing the confrèrie

00:29:57,200 --> 00:30:02,249
dynamically and an eight I want I eat as

00:30:00,690 --> 00:30:04,889
a module maintainer I want everything in

00:30:02,249 --> 00:30:07,289
config I want everything in llamo and

00:30:04,889 --> 00:30:09,509
that would cause me problems to actually

00:30:07,289 --> 00:30:12,179
now they think about it like so we need

00:30:09,509 --> 00:30:14,999
that we need a way to identify oh this

00:30:12,179 --> 00:30:17,100
came from settings dot PHP which would

00:30:14,999 --> 00:30:19,169
basically mean oh joy probably setting

00:30:17,100 --> 00:30:24,809
some global thing that you could read

00:30:19,169 --> 00:30:27,059
and say oh yeah okay slightly related

00:30:24,809 --> 00:30:30,269
question are you aware of any modules

00:30:27,059 --> 00:30:33,059
then provide environments specific all

00:30:30,269 --> 00:30:36,019
the rights how to deal with it because

00:30:33,059 --> 00:30:39,269
sometimes because of the reason that

00:30:36,019 --> 00:30:41,340
state is not reflected in the forum you

00:30:39,269 --> 00:30:43,619
can't configure anything like if you

00:30:41,340 --> 00:30:46,169
have your overwritten Search API and it

00:30:43,619 --> 00:30:49,350
validates unsafe or imagemagick path or

00:30:46,169 --> 00:30:51,210
a No view module if you overwrite some

00:30:49,350 --> 00:30:54,570
part of the configuration you actually

00:30:51,210 --> 00:30:56,700
can't use it in a second because can't

00:30:54,570 --> 00:31:01,429
save it all the other settings because

00:30:56,700 --> 00:31:01,429
it's in one form it doesn't validate

00:31:08,090 --> 00:31:13,919
am i aware that there are issues with

00:31:10,440 --> 00:31:15,419
environmental overrides like first day

00:31:13,919 --> 00:31:16,980
off is there a solution to the

00:31:15,419 --> 00:31:19,619
environmentalist not to write product

00:31:16,980 --> 00:31:22,470
because it's related because remain is

00:31:19,619 --> 00:31:25,379
somehow only and environment he could

00:31:22,470 --> 00:31:28,019
its expand the use case that you have

00:31:25,379 --> 00:31:32,009
like there are many sites which require

00:31:28,019 --> 00:31:33,419
different you know that's actually

00:31:32,009 --> 00:31:36,749
probably a good way to get it this

00:31:33,419 --> 00:31:37,980
problem instead of look if the problem

00:31:36,749 --> 00:31:39,690
that i'm laying out is we need an

00:31:37,980 --> 00:31:41,460
abstract api for doing configuration

00:31:39,690 --> 00:31:43,190
overrides probably the use case that we

00:31:41,460 --> 00:31:46,019
could actually get into core is

00:31:43,190 --> 00:31:50,159
development environment right and so you

00:31:46,019 --> 00:31:53,759
could have I'm just remembering the pain

00:31:50,159 --> 00:31:55,740
I never totally shoes I two years of

00:31:53,759 --> 00:31:57,929
arguments about like how many like types

00:31:55,740 --> 00:32:00,659
of environments you want right well you

00:31:57,929 --> 00:32:04,080
just that's that's actually solvable

00:32:00,659 --> 00:32:07,740
right again like again my codes naive

00:32:04,080 --> 00:32:12,330
but it lets you do partial overrides of

00:32:07,740 --> 00:32:20,159
any schema you want to oh that's awesome

00:32:12,330 --> 00:32:23,039
I don't even seem so right i can i can

00:32:20,159 --> 00:32:25,139
create a domain-specific config file i

00:32:23,039 --> 00:32:26,759
can even create language specific domain

00:32:25,139 --> 00:32:28,440
specific config files that contain

00:32:26,759 --> 00:32:31,019
partial configure for us we could

00:32:28,440 --> 00:32:33,019
certainly do that and it would give us a

00:32:31,019 --> 00:32:36,509
use case that everyone could agree on

00:32:33,019 --> 00:32:40,259
and you'd end up with a file it was

00:32:36,509 --> 00:32:42,749
something like environment dot name of

00:32:40,259 --> 00:32:47,460
environment dot name of config and boom

00:32:42,749 --> 00:32:49,110
I can see it the problem is the problem

00:32:47,460 --> 00:32:50,369
that I have it without that you missed

00:32:49,110 --> 00:32:53,039
was I don't think you can write that

00:32:50,369 --> 00:32:54,090
module and contribute that you can write

00:32:53,039 --> 00:32:56,279
that you could write the management

00:32:54,090 --> 00:32:57,929
piece but then there'd be no UI for to

00:32:56,279 --> 00:33:00,210
be just like you get with domain config

00:32:57,929 --> 00:33:02,730
which is well here's a way to load

00:33:00,210 --> 00:33:04,259
environment specific you wanted to

00:33:02,730 --> 00:33:06,450
modulate load environment environment

00:33:04,259 --> 00:33:07,740
specific config files I could show you

00:33:06,450 --> 00:33:11,129
code i have now you could have it done

00:33:07,740 --> 00:33:12,990
in two days so like from my perspective

00:33:11,129 --> 00:33:14,100
what you're saying is like I've been

00:33:12,990 --> 00:33:16,440
waiting for someone

00:33:14,100 --> 00:33:18,630
like take the over like the base work

00:33:16,440 --> 00:33:19,980
that we did with overwrites and then

00:33:18,630 --> 00:33:23,100
generalize it and it's like complete

00:33:19,980 --> 00:33:25,429
music to my ears so Wow at last someone

00:33:23,100 --> 00:33:27,840
who's taking I do visit getting

00:33:25,429 --> 00:33:31,320
configuration scheming to call we wrote

00:33:27,840 --> 00:33:32,940
it three times and then after getting at

00:33:31,320 --> 00:33:34,710
the idea of schemer and building the

00:33:32,940 --> 00:33:37,710
conflict translation on top of it took a

00:33:34,710 --> 00:33:40,380
lot of time so it's not a surprise that

00:33:37,710 --> 00:33:42,120
there are bits which are less reusable

00:33:40,380 --> 00:33:43,590
than others right and and the stuff

00:33:42,120 --> 00:33:46,020
you're saying about trying to get more

00:33:43,590 --> 00:33:47,880
information into a bit to be

00:33:46,020 --> 00:33:49,260
discoverable it makes a lot of sense I

00:33:47,880 --> 00:33:51,720
want to see things like being able to

00:33:49,260 --> 00:33:53,909
control the list of allowed values or

00:33:51,720 --> 00:33:56,070
reg ex is on the schema so you can you

00:33:53,909 --> 00:33:57,809
can validate configuration much more

00:33:56,070 --> 00:33:59,580
just using the schemer and build Hall

00:33:57,809 --> 00:34:02,419
forms from the schema so you don't need

00:33:59,580 --> 00:34:02,419
to know anything about

00:34:17,110 --> 00:34:21,310
so you're saying you for again the

00:34:19,300 --> 00:34:23,110
recording someone is actually building

00:34:21,310 --> 00:34:24,940
forms for typed data but not for type

00:34:23,110 --> 00:34:26,200
config and the point I was making I

00:34:24,940 --> 00:34:28,420
don't want to build forms for type

00:34:26,200 --> 00:34:31,540
config I just want to steal the forms it

00:34:28,420 --> 00:34:48,310
already exists and piggyback on them and

00:34:31,540 --> 00:35:05,770
that's what i wanted to the differences

00:34:48,310 --> 00:35:07,780
between the form yeah but those are all

00:35:05,770 --> 00:35:09,370
developer tools right they're great for

00:35:07,780 --> 00:35:12,280
developers they're not they're not

00:35:09,370 --> 00:35:18,750
interfaces I would want non-developers

00:35:12,280 --> 00:35:21,910
to look at essentially my opinion are

00:35:18,750 --> 00:35:25,450
there other questions whether people

00:35:21,910 --> 00:35:27,490
eager to take on this challenge you

00:35:25,450 --> 00:35:28,810
don't necessarily have to rewrite config

00:35:27,490 --> 00:35:30,670
translation what you can do is actually

00:35:28,810 --> 00:35:32,320
just write it so they config current

00:35:30,670 --> 00:35:34,480
translation then can start taking bits

00:35:32,320 --> 00:35:35,770
and pieces but I would unless you have a

00:35:34,480 --> 00:35:40,660
better idea i would start from the use

00:35:35,770 --> 00:35:43,180
case of environmental overrides it's

00:35:40,660 --> 00:35:46,720
it's one that's required and most people

00:35:43,180 --> 00:35:49,840
have a use case for and then if we can

00:35:46,720 --> 00:35:52,450
build it so that we have is the

00:35:49,840 --> 00:35:56,440
discovery when you discovery when you

00:35:52,450 --> 00:35:58,750
form handling we need the sort of what

00:35:56,440 --> 00:36:01,810
the blacklist the these are things you

00:35:58,750 --> 00:36:04,030
cannot alter of course funnily enough

00:36:01,810 --> 00:36:06,370
one of the primary concerns that people

00:36:04,030 --> 00:36:09,670
have with environmental overrides is to

00:36:06,370 --> 00:36:12,160
be able to have modules installed in the

00:36:09,670 --> 00:36:14,070
rain like devel and stuff so they want

00:36:12,160 --> 00:36:16,240
to overwrite the core extension stuff

00:36:14,070 --> 00:36:17,950
maybe maybe there's a way to say this

00:36:16,240 --> 00:36:19,600
module actually doesn't have an install

00:36:17,950 --> 00:36:25,230
hook and therefore is safe to just turn

00:36:19,600 --> 00:36:25,230
on on often yeah

00:36:25,880 --> 00:36:30,390
baby steps yeah small steps if anyone

00:36:29,220 --> 00:36:31,950
wants to talk about it more I'm happy to

00:36:30,390 --> 00:36:33,420
stick around otherwise there's plenty of

00:36:31,950 --> 00:36:34,830
things to do in lovely Dublin and at the

00:36:33,420 --> 00:36:44,730
conference and I give you some time to

00:36:34,830 --> 00:36:46,260
yours thank you Miss was me saying oh we

00:36:44,730 --> 00:36:49,040
work all this out in 2013 when we were

00:36:46,260 --> 00:36:49,040

YouTube URL: https://www.youtube.com/watch?v=FEBHHTQilqY


