Title: DrupalCon Dublin 2016: Entity validation: The kick-ass road to data integrity
Publication date: 2016-09-27
Playlist: DrupalCon Dublin 2016
Description: 
	In Drupal 7 there was only one viable solution to ensure that your entities had all the right data: Make it go through the form system one way or the other. Drupal 8 fixes this and I'm going to show you how.

This session will not focus on all the complex structures behind the entity validation system (e.g.: Typed Data API), but on how you as a developer can leverage entity validation to improve your module or site's data integrity.

We will mainly look at constraints (read: validators) and how they most commonly apply to entities. Then we will focus on how the Entity API uses the validation system and learn from it.

By the end of this session you should have learned what constraints are, how you can add them to your custom entity types and how you can leverage the validation system to make sure your entities have valid data.



Attendees should have some basic knowledge of the entity or field API in Drupal 8 and have preferably tried to write their own entity or field type, although the latter is not a requirement.
Captions: 
	00:00:00,000 --> 00:00:12,630
right hi oh this session is about entity

00:00:09,000 --> 00:00:18,090
validation or the API for entity

00:00:12,630 --> 00:00:19,740
validation so if that's not something

00:00:18,090 --> 00:00:21,240
you want to see you're in the wrong room

00:00:19,740 --> 00:00:24,859
and you still have time to go to a

00:00:21,240 --> 00:00:28,710
different one so let's get started I

00:00:24,859 --> 00:00:31,320
usually start off my sessions with a

00:00:28,710 --> 00:00:34,469
couple of questions for the audience so

00:00:31,320 --> 00:00:40,200
how many of you have worked with plugins

00:00:34,469 --> 00:00:42,690
in Drupal 8 before excellent awesome how

00:00:40,200 --> 00:00:47,399
many of you have written a custom field

00:00:42,690 --> 00:00:51,570
or entity type wow that's quite a lot

00:00:47,399 --> 00:00:54,030
awesome so what most of what I'm gonna

00:00:51,570 --> 00:00:56,280
tell you guys is going to make a lot of

00:00:54,030 --> 00:00:58,140
sense so that's perfect I've given this

00:00:56,280 --> 00:00:59,670
talk once before a couple of weeks ago

00:00:58,140 --> 00:01:03,570
for a mixed audience and have the rooms

00:00:59,670 --> 00:01:06,330
like what's he talking about so awesome

00:01:03,570 --> 00:01:08,909
great audience then so let's get started

00:01:06,330 --> 00:01:11,369
i am christine van ananda i'm a drupal

00:01:08,909 --> 00:01:13,619
developer i work at decent in the UK but

00:01:11,369 --> 00:01:15,720
i work remotely so I just live in

00:01:13,619 --> 00:01:17,850
Antwerp Belgium well close to it at

00:01:15,720 --> 00:01:20,460
least I'm happily married to my wife

00:01:17,850 --> 00:01:22,890
Sylvie and I always mention it just in

00:01:20,460 --> 00:01:24,270
case I'm a highly sensitive person which

00:01:22,890 --> 00:01:26,159
means that at any point in time

00:01:24,270 --> 00:01:28,530
something in my body may trigger a panic

00:01:26,159 --> 00:01:31,259
attack or stuff like that so if

00:01:28,530 --> 00:01:38,180
something does go wrong it's that don't

00:01:31,259 --> 00:01:41,640
worry too much it's usually fine so yeah

00:01:38,180 --> 00:01:44,759
so let's get started so what is entity

00:01:41,640 --> 00:01:46,850
validation before i go into my session i

00:01:44,759 --> 00:01:50,399
just want to mention how I came about

00:01:46,850 --> 00:01:52,740
creation of this session it's um i'm the

00:01:50,399 --> 00:01:54,720
author of the group module and it's a

00:01:52,740 --> 00:01:57,030
really complex module so basically i had

00:01:54,720 --> 00:02:00,509
to touch like every API in Drupal core

00:01:57,030 --> 00:02:02,430
in order to be able to create it and one

00:02:00,509 --> 00:02:05,549
of the API is that wasn't really

00:02:02,430 --> 00:02:08,280
documented and I actually really amazed

00:02:05,549 --> 00:02:10,500
me was the API to validate your entities

00:02:08,280 --> 00:02:12,540
with it's pretty obscure there are like

00:02:10,500 --> 00:02:16,049
hints left and writing in the

00:02:12,540 --> 00:02:18,989
oats in core but in order to really get

00:02:16,049 --> 00:02:22,290
it I had to like dig through the code

00:02:18,989 --> 00:02:24,299
google a lot it really was hard to wrap

00:02:22,290 --> 00:02:27,060
your head around so my idea was that i

00:02:24,299 --> 00:02:29,159
would create a session and tell you

00:02:27,060 --> 00:02:31,019
about my findings so that you don't need

00:02:29,159 --> 00:02:33,900
to go through all that pain and efforts

00:02:31,019 --> 00:02:36,560
so here goes so entity validation is

00:02:33,900 --> 00:02:42,209
basically what you need to prevent this

00:02:36,560 --> 00:02:45,239
we've all seen it a lot it's really

00:02:42,209 --> 00:02:47,099
annoying but we can all be thankful that

00:02:45,239 --> 00:02:49,950
we get these guides because if we

00:02:47,099 --> 00:02:52,230
wouldn't then we would have invalid data

00:02:49,950 --> 00:02:54,900
or code that could be crushing somewhere

00:02:52,230 --> 00:02:57,810
and we wouldn't know what's up because

00:02:54,900 --> 00:02:59,579
it was already too late so thankfully we

00:02:57,810 --> 00:03:02,669
have exceptions except this little guy

00:02:59,579 --> 00:03:05,639
shows up way too often so you want to

00:03:02,669 --> 00:03:08,189
prevent that so what the API in Drupal 8

00:03:05,639 --> 00:03:11,189
does is it validates your content

00:03:08,189 --> 00:03:13,200
entities so I'm guessing given the

00:03:11,189 --> 00:03:15,120
showing of hands before that most of you

00:03:13,200 --> 00:03:18,359
know what content entities are it's like

00:03:15,120 --> 00:03:20,609
notes you know stuff that your users can

00:03:18,359 --> 00:03:23,359
create so it validates those and it

00:03:20,609 --> 00:03:26,099
validates those on multiple levels and

00:03:23,359 --> 00:03:29,340
when it does that it returns a list of

00:03:26,099 --> 00:03:31,889
violations it always returns that list

00:03:29,340 --> 00:03:34,590
it can be empty meaning there were no

00:03:31,889 --> 00:03:38,129
violations or it can have violations in

00:03:34,590 --> 00:03:41,069
them meaning validation fields it

00:03:38,129 --> 00:03:45,599
happens automatically in the entity form

00:03:41,069 --> 00:03:47,579
so when when you fill out the note form

00:03:45,599 --> 00:03:49,409
and you're doing something wrong you get

00:03:47,579 --> 00:03:52,109
this error and it highlights the fields

00:03:49,409 --> 00:03:54,449
that you know had invalid data that's

00:03:52,109 --> 00:03:56,760
actually entity validation at work it's

00:03:54,449 --> 00:04:00,510
the only place in core where you can

00:03:56,760 --> 00:04:02,849
really see it as an end user however

00:04:00,510 --> 00:04:05,129
it's not a part of the form system so

00:04:02,849 --> 00:04:07,349
it's being used in the forum system and

00:04:05,129 --> 00:04:10,709
this is the cool difference with Drupal

00:04:07,349 --> 00:04:12,359
7 in Drupal 7 entity validation happened

00:04:10,709 --> 00:04:14,069
in the forum system because it was the

00:04:12,359 --> 00:04:16,889
forum system there was nothing else it

00:04:14,069 --> 00:04:18,959
was a validation handler of a forum so

00:04:16,889 --> 00:04:21,299
if you wanted to validate your entity

00:04:18,959 --> 00:04:22,830
outside of that well good luck there

00:04:21,299 --> 00:04:24,900
were a few ways but they were all really

00:04:22,830 --> 00:04:26,220
painful to implement in Drupal 8 that's

00:04:24,900 --> 00:04:28,440
no longer the case they

00:04:26,220 --> 00:04:30,990
separated it so now it's a different API

00:04:28,440 --> 00:04:34,680
but it's just been implemented in the

00:04:30,990 --> 00:04:36,450
content and deform so and it guarantees

00:04:34,680 --> 00:04:39,210
the data integrity of your entities

00:04:36,450 --> 00:04:41,010
because well if you ask for your entity

00:04:39,210 --> 00:04:44,580
to be validated before it's being saved

00:04:41,010 --> 00:04:47,520
then it will not save until it's valid

00:04:44,580 --> 00:04:50,390
it's up to you by the way to handle

00:04:47,520 --> 00:04:52,920
those violations but more on that later

00:04:50,390 --> 00:04:54,930
so when do you want to use this and

00:04:52,920 --> 00:04:56,640
that's actually pretty simple it's

00:04:54,930 --> 00:04:59,040
basically whenever you manipulate an

00:04:56,640 --> 00:05:01,860
entity so there are a couple of examples

00:04:59,040 --> 00:05:05,400
and one of which is rests which is the

00:05:01,860 --> 00:05:07,170
most common one so imagine this you're

00:05:05,400 --> 00:05:08,850
not using that form that has that

00:05:07,170 --> 00:05:10,830
validation built in but you're allowing

00:05:08,850 --> 00:05:13,500
people to create or update or delete

00:05:10,830 --> 00:05:17,150
well not necessarily delete entities

00:05:13,500 --> 00:05:20,790
through an API then how will you

00:05:17,150 --> 00:05:23,910
validate what they have sent to your API

00:05:20,790 --> 00:05:25,830
it's it's really hard to do that in

00:05:23,910 --> 00:05:29,000
Drupal 7 but in Drupal 8 it's really

00:05:25,830 --> 00:05:31,470
easy because we have that separated API

00:05:29,000 --> 00:05:34,350
also when you have custom entity

00:05:31,470 --> 00:05:37,050
generation at generating codes so when

00:05:34,350 --> 00:05:38,640
you generate an entity yourself so for

00:05:37,050 --> 00:05:40,800
instance you have some code that needs

00:05:38,640 --> 00:05:42,419
to generate a few default nodes and then

00:05:40,800 --> 00:05:46,620
you want to set those as the front page

00:05:42,419 --> 00:05:48,870
or whatever you can't always know for

00:05:46,620 --> 00:05:50,820
sure what field someone may have

00:05:48,870 --> 00:05:52,650
attached to that nodes so if you call

00:05:50,820 --> 00:05:54,270
validation on that nodes and it gives

00:05:52,650 --> 00:05:56,040
you any violations you know that you

00:05:54,270 --> 00:05:58,860
didn't provide enough data to have a

00:05:56,040 --> 00:06:01,050
fully populated nodes same goes for

00:05:58,860 --> 00:06:02,760
migrations stuff like that whatever you

00:06:01,050 --> 00:06:04,650
can come up with if it involves

00:06:02,760 --> 00:06:08,190
manipulating entities you probably want

00:06:04,650 --> 00:06:10,260
to implement entity validation and it's

00:06:08,190 --> 00:06:13,979
actually really simple to use so how do

00:06:10,260 --> 00:06:18,110
you invoke it that's it just call

00:06:13,979 --> 00:06:20,370
validates on an entity and that's its or

00:06:18,110 --> 00:06:22,860
entities have fields if you want to

00:06:20,370 --> 00:06:25,440
validate just one field you get that

00:06:22,860 --> 00:06:26,940
field and you validate that or if you

00:06:25,440 --> 00:06:29,130
want to go even deeper and you want to

00:06:26,940 --> 00:06:32,610
validate one entry in that field one

00:06:29,130 --> 00:06:35,640
Delta just grab it it's really that

00:06:32,610 --> 00:06:38,190
simple although you need to do something

00:06:35,640 --> 00:06:39,300
with that list of violations so that you

00:06:38,190 --> 00:06:41,909
don't just call it

00:06:39,300 --> 00:06:43,590
well then you have drupal telling you

00:06:41,909 --> 00:06:45,720
yeah there's some stuff wrong here and

00:06:43,590 --> 00:06:47,699
then you're just ignoring it so ideally

00:06:45,720 --> 00:06:51,150
you want to save that in a variable and

00:06:47,699 --> 00:06:55,139
then do stuff to it so how do you work

00:06:51,150 --> 00:06:57,270
with these violations well first of all

00:06:55,139 --> 00:06:59,819
checking whether there are any is easy

00:06:57,270 --> 00:07:02,550
you just get that list and you call

00:06:59,819 --> 00:07:05,639
count on it because it's a countable

00:07:02,550 --> 00:07:07,919
object so it fits 0 then you know you

00:07:05,639 --> 00:07:10,169
pass with flying colors if it's not then

00:07:07,919 --> 00:07:12,210
you need to do something but it extends

00:07:10,169 --> 00:07:17,009
iterator aggregate so you can loop over

00:07:12,210 --> 00:07:18,569
it and get all of the violations there

00:07:17,009 --> 00:07:20,370
are some more funky methods you can use

00:07:18,569 --> 00:07:22,199
you can get all of the violations that

00:07:20,370 --> 00:07:23,520
occurred just on the entity level or you

00:07:22,199 --> 00:07:25,590
can get all of the violations that

00:07:23,520 --> 00:07:27,180
occurred on a single fields if you want

00:07:25,590 --> 00:07:28,889
to read more about that you know slides

00:07:27,180 --> 00:07:32,789
will be available later on you can check

00:07:28,889 --> 00:07:34,710
out that interface if you want to use a

00:07:32,789 --> 00:07:36,270
single violation you know in a loop or

00:07:34,710 --> 00:07:37,860
something you can get the message from

00:07:36,270 --> 00:07:39,360
it and that's just the human readable

00:07:37,860 --> 00:07:43,229
message that tells you what went wrong

00:07:39,360 --> 00:07:46,259
so it can be something like the username

00:07:43,229 --> 00:07:49,620
is not unique something like that and

00:07:46,259 --> 00:07:51,870
then that message will show up there's

00:07:49,620 --> 00:07:53,909
other methods to like getting the

00:07:51,870 --> 00:07:56,669
property path more on that later because

00:07:53,909 --> 00:07:58,919
that's pretty complex or you know

00:07:56,669 --> 00:08:00,509
getting the value that was invalid to

00:07:58,919 --> 00:08:01,979
get a better message to yourself or

00:08:00,509 --> 00:08:05,159
something if you want to read more about

00:08:01,979 --> 00:08:08,060
the single violation it has an interface

00:08:05,159 --> 00:08:11,580
it well as well just check that one out

00:08:08,060 --> 00:08:13,500
so where do these guys come from so

00:08:11,580 --> 00:08:16,440
there are four levels of entity

00:08:13,500 --> 00:08:18,569
validation you can validate entity as a

00:08:16,440 --> 00:08:22,020
whole and in order to demonstrate this

00:08:18,569 --> 00:08:24,690
properly let me first sketch situation

00:08:22,020 --> 00:08:26,159
so imagine there's four people standing

00:08:24,690 --> 00:08:28,259
in a queue there's a lot of

00:08:26,159 --> 00:08:29,819
psychological quizzes like this that

00:08:28,259 --> 00:08:32,219
start like this but imagine there's four

00:08:29,819 --> 00:08:36,060
people in a queue and they can only see

00:08:32,219 --> 00:08:37,949
the people in front of them if you ask a

00:08:36,060 --> 00:08:40,760
question to the last one in the queue it

00:08:37,949 --> 00:08:43,019
can tell it can give you an answer about

00:08:40,760 --> 00:08:44,880
themselves or the people in front of

00:08:43,019 --> 00:08:47,220
them if you ask you to the second to

00:08:44,880 --> 00:08:48,690
last in the queue again the people in

00:08:47,220 --> 00:08:50,100
front of them or themselves but they

00:08:48,690 --> 00:08:53,020
don't know anything about the guy behind

00:08:50,100 --> 00:08:54,760
them so that's how you need to imagine

00:08:53,020 --> 00:08:57,220
this the higher level you invoke

00:08:54,760 --> 00:08:58,720
validation on the more it can tell you

00:08:57,220 --> 00:09:00,790
because it knows more about what's

00:08:58,720 --> 00:09:02,440
coming next if you invoke it at the

00:09:00,790 --> 00:09:05,740
deepest level it only can tell you

00:09:02,440 --> 00:09:07,720
something about itself so you can

00:09:05,740 --> 00:09:09,760
validate the entity as a whole you can

00:09:07,720 --> 00:09:13,480
also validate a field on an entity now a

00:09:09,760 --> 00:09:16,180
field on an entity is you know the human

00:09:13,480 --> 00:09:17,770
readable expert the human readable or

00:09:16,180 --> 00:09:20,020
you an understandable way of expressing

00:09:17,770 --> 00:09:21,880
this but for Drupal a field is actually

00:09:20,020 --> 00:09:24,700
a list of entries like you know all the

00:09:21,880 --> 00:09:27,460
deltas but you'll see that in a second

00:09:24,700 --> 00:09:29,590
so you can also grab a single entry of a

00:09:27,460 --> 00:09:31,360
field on an entity and validate that or

00:09:29,590 --> 00:09:35,830
you can go even deeper and validate a

00:09:31,360 --> 00:09:37,750
property of that single entry so in an

00:09:35,830 --> 00:09:39,430
obligatory car analogy that would look

00:09:37,750 --> 00:09:41,890
something like this you either validate

00:09:39,430 --> 00:09:44,470
a car entity you validate the field

00:09:41,890 --> 00:09:46,930
wheels you validate a single wheel in

00:09:44,470 --> 00:09:49,360
that field in in that field or you

00:09:46,930 --> 00:09:52,630
validate a property like tire size of a

00:09:49,360 --> 00:09:55,030
single entry in that field in Drupal

00:09:52,630 --> 00:09:56,980
speak it looks like this so if you want

00:09:55,030 --> 00:09:59,890
to validate an entity you're validating

00:09:56,980 --> 00:10:01,540
the content enter the interface actually

00:09:59,890 --> 00:10:03,640
the field wall and the interface that's

00:10:01,540 --> 00:10:06,400
where the validate methodism but

00:10:03,640 --> 00:10:07,960
ninety-nine percent of the time you're

00:10:06,400 --> 00:10:09,460
using the content into the interface

00:10:07,960 --> 00:10:13,060
which extends the field well into the

00:10:09,460 --> 00:10:15,790
interface on the second level you have

00:10:13,060 --> 00:10:18,550
the field item list interface which is

00:10:15,790 --> 00:10:20,740
the the full fields one entry of that

00:10:18,550 --> 00:10:23,320
field is a field item interface and then

00:10:20,740 --> 00:10:25,390
all of the properties below that are

00:10:23,320 --> 00:10:26,980
just type data interfaces now there's a

00:10:25,390 --> 00:10:29,530
small lie in this slide which you'll

00:10:26,980 --> 00:10:31,870
probably have spotted if you went to the

00:10:29,530 --> 00:10:37,360
session about type data all of the above

00:10:31,870 --> 00:10:40,660
are also typed data interface it's just

00:10:37,360 --> 00:10:42,430
easier to remember it like this so the

00:10:40,660 --> 00:10:45,010
four levels in detail I'm quickly going

00:10:42,430 --> 00:10:48,010
to skips through this because it's just

00:10:45,010 --> 00:10:50,980
examples and I've got a feeling that is

00:10:48,010 --> 00:10:53,110
the audience understands it already so

00:10:50,980 --> 00:10:55,480
when you're validating an entity as a

00:10:53,110 --> 00:10:57,970
whole you're actually because you know

00:10:55,480 --> 00:11:01,030
all of what's going on on itself and

00:10:57,970 --> 00:11:03,070
everything below you you're you can

00:11:01,030 --> 00:11:04,540
validate across multiple fields on that

00:11:03,070 --> 00:11:05,660
entity that's why you want to validate

00:11:04,540 --> 00:11:07,310
on that level

00:11:05,660 --> 00:11:09,350
so for instance if you want to add a

00:11:07,310 --> 00:11:10,940
fuel tank and an electric engine to a

00:11:09,350 --> 00:11:13,430
car entity you're gonna have a bad time

00:11:10,940 --> 00:11:15,650
so that's where entity validation is a

00:11:13,430 --> 00:11:18,200
good place to you know throw a violation

00:11:15,650 --> 00:11:19,670
because it can tell what fields it has

00:11:18,200 --> 00:11:23,240
and then compare the values of those

00:11:19,670 --> 00:11:25,160
fields and tell you what's wrong you can

00:11:23,240 --> 00:11:27,320
also do a field independent validation

00:11:25,160 --> 00:11:29,090
on the entity level because you don't

00:11:27,320 --> 00:11:30,770
necessarily need to look at your fields

00:11:29,090 --> 00:11:33,200
for instance if you're trying to save a

00:11:30,770 --> 00:11:35,240
third car entity when you're flat broke

00:11:33,200 --> 00:11:38,240
you should get a violation saying you're

00:11:35,240 --> 00:11:41,510
flat broke please don't buy this car so

00:11:38,240 --> 00:11:42,710
that's all of the types of validation

00:11:41,510 --> 00:11:48,800
that you should do on the entity level

00:11:42,710 --> 00:11:50,990
you can also do it on a field and that's

00:11:48,800 --> 00:11:53,840
wrong it's supposed to say multiple

00:11:50,990 --> 00:11:57,860
field entries so whoever just pimped my

00:11:53,840 --> 00:12:00,140
slides mistyped that so it's validation

00:11:57,860 --> 00:12:01,850
across multiple field entries so for

00:12:00,140 --> 00:12:03,860
instance imagine that filled with the

00:12:01,850 --> 00:12:05,900
wheels if you want to add to a monster

00:12:03,860 --> 00:12:07,820
truck wheels and to mini bike wheels to

00:12:05,900 --> 00:12:09,860
the same car it's probably not going to

00:12:07,820 --> 00:12:13,730
run so that's where you throw that

00:12:09,860 --> 00:12:16,400
violation when you are validating a

00:12:13,730 --> 00:12:18,290
single entry you can validate across

00:12:16,400 --> 00:12:21,680
multiple property so again the lower

00:12:18,290 --> 00:12:24,110
level so for instance if you have a

00:12:21,680 --> 00:12:26,060
wheel and it has a different rim size

00:12:24,110 --> 00:12:28,970
than a tire size probably not going to

00:12:26,060 --> 00:12:31,900
work and then finally at the deepest

00:12:28,970 --> 00:12:34,280
level you can validate a property so

00:12:31,900 --> 00:12:35,750
basically if you have a tire made out of

00:12:34,280 --> 00:12:39,110
woods you want to throw a violation

00:12:35,750 --> 00:12:40,910
saying select a different material so

00:12:39,110 --> 00:12:44,450
how do you define your own validation um

00:12:40,910 --> 00:12:47,090
it actually needs two classes but it's

00:12:44,450 --> 00:12:49,730
not that hard so one of them is a

00:12:47,090 --> 00:12:52,340
constraint plugin and this is where I

00:12:49,730 --> 00:12:55,970
asked you about the plug-in system so

00:12:52,340 --> 00:12:57,860
it's basically quite easy to define you

00:12:55,970 --> 00:13:00,110
just need these guys like a unique ID

00:12:57,860 --> 00:13:02,750
every plugin needs it you need a human

00:13:00,110 --> 00:13:04,880
readable label not necessarily but I

00:13:02,750 --> 00:13:06,680
prefer it if people add that because

00:13:04,880 --> 00:13:10,100
then you have an easy way of telling

00:13:06,680 --> 00:13:12,290
what it is it Rick Mel it doesn't really

00:13:10,100 --> 00:13:14,990
require a type more on that new seconds

00:13:12,290 --> 00:13:17,500
or a list of types that it supports and

00:13:14,990 --> 00:13:19,240
well like any plugin you put it in my

00:13:17,500 --> 00:13:21,640
module source plugin validation

00:13:19,240 --> 00:13:25,570
constraints that's where you should put

00:13:21,640 --> 00:13:27,930
it so it looks kind of like this so as

00:13:25,570 --> 00:13:30,280
you can see it's it's pretty empty

00:13:27,930 --> 00:13:32,280
there's just a couple of messages there

00:13:30,280 --> 00:13:34,810
those are being used by the validator

00:13:32,280 --> 00:13:38,950
and you'll see that the type key is

00:13:34,810 --> 00:13:40,930
missing so what about it well it's

00:13:38,950 --> 00:13:44,260
missing because score actually doesn't

00:13:40,930 --> 00:13:47,910
use it it used it in one place and

00:13:44,260 --> 00:13:51,850
that's the plugin manager and that one

00:13:47,910 --> 00:13:53,980
that one actually just allows you to

00:13:51,850 --> 00:13:56,650
filter the available plugins on a type

00:13:53,980 --> 00:13:58,930
like this plug-in supports entities this

00:13:56,650 --> 00:14:00,700
plug-in supports field items this

00:13:58,930 --> 00:14:04,110
plug-in support strings or whatever it

00:14:00,700 --> 00:14:06,850
just allows you to filter nothing more

00:14:04,110 --> 00:14:09,160
so if you want to apply one of your

00:14:06,850 --> 00:14:11,700
constraints there's nothing stopping you

00:14:09,160 --> 00:14:14,770
from applying it to the wrong place

00:14:11,700 --> 00:14:17,740
because Drupal doesn't seem to use it so

00:14:14,770 --> 00:14:20,800
if you still want to provide a type if

00:14:17,740 --> 00:14:22,630
you don't it defaults to an empty array

00:14:20,800 --> 00:14:23,920
which means you can apply this to

00:14:22,630 --> 00:14:28,030
nothing which doesn't really make sense

00:14:23,920 --> 00:14:30,580
if you provide false you tell Drupal

00:14:28,030 --> 00:14:32,440
that you can apply to everything you can

00:14:30,580 --> 00:14:37,720
also be specific and say this constraint

00:14:32,440 --> 00:14:39,580
can only be used for a B C or D I'm

00:14:37,720 --> 00:14:43,390
going to shake my legs for a seconds and

00:14:39,580 --> 00:14:46,960
just feeling a little flushed so this is

00:14:43,390 --> 00:14:48,280
what it looks like so you've got entity

00:14:46,960 --> 00:14:50,050
and entity reference here which

00:14:48,280 --> 00:14:53,320
basically means this constraint can be

00:14:50,050 --> 00:14:55,600
applied to an entity or a property of

00:14:53,320 --> 00:14:59,080
the entity reference field that actually

00:14:55,600 --> 00:15:01,089
references an entity so they can also

00:14:59,080 --> 00:15:03,070
take options which are completely

00:15:01,089 --> 00:15:05,850
optional a lot of constraints don't take

00:15:03,070 --> 00:15:08,440
any but if you want to to have you know

00:15:05,850 --> 00:15:10,330
options like if you have a constraints

00:15:08,440 --> 00:15:13,270
for length you don't want to create a

00:15:10,330 --> 00:15:16,330
constraint that says well length 30 32

00:15:13,270 --> 00:15:17,800
length 31 you just create one and you

00:15:16,330 --> 00:15:21,610
allow it to accept an option that says

00:15:17,800 --> 00:15:23,710
how long can this field value be you

00:15:21,610 --> 00:15:26,620
simply define them as object properties

00:15:23,710 --> 00:15:28,990
on your constraints that's it and you

00:15:26,620 --> 00:15:30,769
can accept any number of options as an

00:15:28,990 --> 00:15:33,350
array whenever

00:15:30,769 --> 00:15:36,410
ads your constraints how to pass those

00:15:33,350 --> 00:15:39,019
options discovered later so accepting

00:15:36,410 --> 00:15:43,069
options so as you can see there's this

00:15:39,019 --> 00:15:46,489
one option here it's called type and if

00:15:43,069 --> 00:15:49,339
you if if people add your constraint and

00:15:46,489 --> 00:15:52,040
they just give a flat-out value Drupal

00:15:49,339 --> 00:15:54,470
will look for a default option so you

00:15:52,040 --> 00:15:56,869
could add that constraint with nine then

00:15:54,470 --> 00:15:58,670
it would map nine to type it's just that

00:15:56,869 --> 00:16:00,920
as soon as you start accepting multiple

00:15:58,670 --> 00:16:02,839
options well then people will need to

00:16:00,920 --> 00:16:04,639
provide an array where the keys are the

00:16:02,839 --> 00:16:08,839
names of the options and the values are

00:16:04,639 --> 00:16:11,480
obviously the values so now we get to

00:16:08,839 --> 00:16:15,519
the validator class this is the harder

00:16:11,480 --> 00:16:18,860
part and this is coming from symphony so

00:16:15,519 --> 00:16:20,299
they have a magic class name so by

00:16:18,860 --> 00:16:23,269
default whatever you name your

00:16:20,299 --> 00:16:25,639
constraints add validator to that and

00:16:23,269 --> 00:16:27,470
that's the name of the class you need to

00:16:25,639 --> 00:16:29,569
have for your validator that's the class

00:16:27,470 --> 00:16:32,449
name you need to have but you can change

00:16:29,569 --> 00:16:33,829
it you can change it in the validated by

00:16:32,449 --> 00:16:35,809
method that you can add to your

00:16:33,829 --> 00:16:38,360
constraints and the reason you can

00:16:35,809 --> 00:16:43,220
change it is because there are good use

00:16:38,360 --> 00:16:45,980
cases for reusing a validator um suppose

00:16:43,220 --> 00:16:48,040
we had that length validator and the

00:16:45,980 --> 00:16:51,019
constraint that was implementing it

00:16:48,040 --> 00:16:53,449
actually had pretty non-descriptive

00:16:51,019 --> 00:16:55,519
messages it's perfectly fine to create

00:16:53,449 --> 00:16:57,290
your own constraint with better messages

00:16:55,519 --> 00:17:00,079
that are better suited to your use case

00:16:57,290 --> 00:17:01,819
and just reuse that validator then all

00:17:00,079 --> 00:17:04,959
you had to do was write the same

00:17:01,819 --> 00:17:07,309
constraints and just change the messages

00:17:04,959 --> 00:17:08,929
the value it receives and this is

00:17:07,309 --> 00:17:11,059
important because earlier I said you

00:17:08,929 --> 00:17:13,370
know all of them are typed data but this

00:17:11,059 --> 00:17:15,949
is why I split them up because at this

00:17:13,370 --> 00:17:17,240
point Drupal the some magic I can

00:17:15,949 --> 00:17:19,730
explain that if anyone has questions

00:17:17,240 --> 00:17:22,610
about it but it's too deep in the core

00:17:19,730 --> 00:17:24,649
to dedicate session time to it so

00:17:22,610 --> 00:17:26,929
basically when you can't validate on the

00:17:24,649 --> 00:17:30,350
top level on the entity the validator

00:17:26,929 --> 00:17:32,750
receives and full entity if you call it

00:17:30,350 --> 00:17:35,240
on the field item lists the validator

00:17:32,750 --> 00:17:37,159
receives a feel item list so and it goes

00:17:35,240 --> 00:17:42,130
on like that so it's really important to

00:17:37,159 --> 00:17:44,230
know where validation was calls from or

00:17:42,130 --> 00:17:47,510
initiated from

00:17:44,230 --> 00:17:50,330
and one of those things why it's really

00:17:47,510 --> 00:17:53,030
important to know that is because if you

00:17:50,330 --> 00:17:54,590
did specify a type for your constraints

00:17:53,030 --> 00:17:56,900
you can be pretty sure what you're

00:17:54,590 --> 00:17:59,690
receiving if you specify that it can

00:17:56,900 --> 00:18:02,810
only have entities well your validator

00:17:59,690 --> 00:18:05,030
can assume that it will get entities if

00:18:02,810 --> 00:18:07,040
you didn't specify a type or it's a

00:18:05,030 --> 00:18:08,990
generic validator then well you need to

00:18:07,040 --> 00:18:12,340
double check what you're getting like

00:18:08,990 --> 00:18:15,890
check for interfaces or something

00:18:12,340 --> 00:18:18,140
there's one different there's one small

00:18:15,890 --> 00:18:20,510
exception though if you're validating

00:18:18,140 --> 00:18:22,700
properties you're getting the raw value

00:18:20,510 --> 00:18:24,050
of that property you're not getting the

00:18:22,700 --> 00:18:27,170
type data you're just getting the wrong

00:18:24,050 --> 00:18:29,360
value so if you had a property target's

00:18:27,170 --> 00:18:30,680
type for an entity reference field it

00:18:29,360 --> 00:18:38,210
would just give you the name of the

00:18:30,680 --> 00:18:41,570
entity type so in an earlier like

00:18:38,210 --> 00:18:44,690
earlier slide we saw the username

00:18:41,570 --> 00:18:46,700
constraints so as you can see we just

00:18:44,690 --> 00:18:49,130
added validator to the name it's

00:18:46,700 --> 00:18:52,070
automatically picked up and the username

00:18:49,130 --> 00:18:55,760
constraints is applied to a field item

00:18:52,070 --> 00:18:58,340
list to a full field so as you can see

00:18:55,760 --> 00:19:01,760
it receives items because there's

00:18:58,340 --> 00:19:04,670
multiple entries possible in a field yet

00:19:01,760 --> 00:19:06,800
the username fields only has one entry

00:19:04,670 --> 00:19:08,450
so further down the code they just

00:19:06,800 --> 00:19:11,180
grabbed the first item and they start

00:19:08,450 --> 00:19:13,580
validating that why didn't they apply it

00:19:11,180 --> 00:19:15,590
to the first Delta well because it's

00:19:13,580 --> 00:19:17,300
easier to apply your constraints to a

00:19:15,590 --> 00:19:22,190
field item list than it is to a field

00:19:17,300 --> 00:19:23,750
item you'll see that too so I'm

00:19:22,190 --> 00:19:26,930
mentioning the next part for

00:19:23,750 --> 00:19:30,440
completeness it's a property path so it

00:19:26,930 --> 00:19:33,230
tells you so suppose there's an error it

00:19:30,440 --> 00:19:36,650
tells you where it occurred so follow me

00:19:33,230 --> 00:19:39,440
on this one so the property path

00:19:36,650 --> 00:19:41,900
defaults to the item being validated so

00:19:39,440 --> 00:19:44,360
if you just want to throw an error from

00:19:41,900 --> 00:19:47,000
your validator for the thing that is

00:19:44,360 --> 00:19:48,830
being validated don't do anything just

00:19:47,000 --> 00:19:52,160
throw that error you don't need to worry

00:19:48,830 --> 00:19:54,050
about the property path but you can be

00:19:52,160 --> 00:19:57,230
more specific

00:19:54,050 --> 00:20:00,320
suppose we started validation on the

00:19:57,230 --> 00:20:02,660
entity and at one point it went over a

00:20:00,320 --> 00:20:06,050
couple of fields and then it went into a

00:20:02,660 --> 00:20:09,040
field where there was an error at that

00:20:06,050 --> 00:20:11,450
point the property path has already been

00:20:09,040 --> 00:20:13,910
populated with the name of the fields

00:20:11,450 --> 00:20:16,370
because you started it at the entity the

00:20:13,910 --> 00:20:18,230
last guy in the line he said well I'm

00:20:16,370 --> 00:20:19,730
trying to validate a person in front of

00:20:18,230 --> 00:20:21,560
me and that person is you know making

00:20:19,730 --> 00:20:24,020
noise so something is going on so that

00:20:21,560 --> 00:20:25,970
is already one part of the path the

00:20:24,020 --> 00:20:27,860
person in front of you and then that

00:20:25,970 --> 00:20:29,630
person can just you know say that well

00:20:27,860 --> 00:20:31,610
yeah it's me that's doing something

00:20:29,630 --> 00:20:33,530
wrong so it doesn't provide the path or

00:20:31,610 --> 00:20:35,630
well actually it's the guy in front of

00:20:33,530 --> 00:20:39,380
me so he provides a path to the guy in

00:20:35,630 --> 00:20:42,140
front of him there is an example of that

00:20:39,380 --> 00:20:44,270
in a very complex validator there's few

00:20:42,140 --> 00:20:45,830
examples in core but this is one of them

00:20:44,270 --> 00:20:48,230
so if you want to check that out in

00:20:45,830 --> 00:20:51,200
detail check out that class but it

00:20:48,230 --> 00:20:53,450
basically basically looks like this so

00:20:51,200 --> 00:20:55,190
when you started validating from the top

00:20:53,450 --> 00:20:59,030
level and something is wrong with the

00:20:55,190 --> 00:21:02,000
first value of field foo then it would

00:20:59,030 --> 00:21:03,740
give the fone path to that value but if

00:21:02,000 --> 00:21:06,080
you started validating from the field

00:21:03,740 --> 00:21:08,000
level it would give you know the Delta

00:21:06,080 --> 00:21:09,800
and the property but no longer the name

00:21:08,000 --> 00:21:13,190
of the field because it's already

00:21:09,800 --> 00:21:15,950
happening on the field validation is

00:21:13,190 --> 00:21:19,930
being invoked on the field so the lower

00:21:15,950 --> 00:21:25,490
in scope you invoke validation the

00:21:19,930 --> 00:21:27,140
shorter property path will be again you

00:21:25,490 --> 00:21:28,760
probably won't need this I'm just

00:21:27,140 --> 00:21:30,230
mentioning it for completeness if you

00:21:28,760 --> 00:21:32,240
write your own validator that's really

00:21:30,230 --> 00:21:34,820
complex you're gonna thank me for having

00:21:32,240 --> 00:21:37,730
mentioned this because it can be a real

00:21:34,820 --> 00:21:39,350
pain to discover that part so how to

00:21:37,730 --> 00:21:40,970
apply validators and this is the most

00:21:39,350 --> 00:21:42,770
important part we've seen what it is

00:21:40,970 --> 00:21:46,850
we've seen why you should use it so how

00:21:42,770 --> 00:21:49,340
do you apply it there are several ways

00:21:46,850 --> 00:21:50,960
to do it one is in annotations when

00:21:49,340 --> 00:21:53,560
writing something that requires an

00:21:50,960 --> 00:21:56,240
annotation the other way is by invoking

00:21:53,560 --> 00:21:58,040
the or calling the ads constraint

00:21:56,240 --> 00:22:00,190
methods and then finally there's one

00:21:58,040 --> 00:22:03,770
tiny exception because well it's Drupal

00:22:00,190 --> 00:22:06,290
so if you define your own content entity

00:22:03,770 --> 00:22:07,610
type all you need to do is provide a

00:22:06,290 --> 00:22:10,570
constraint array

00:22:07,610 --> 00:22:13,010
and you'll notice that after the

00:22:10,570 --> 00:22:14,690
equation there's an empty array in the

00:22:13,010 --> 00:22:16,700
annotation that's because I'm not

00:22:14,690 --> 00:22:18,559
providing any options if you were to

00:22:16,700 --> 00:22:20,840
provide options that's where you would

00:22:18,559 --> 00:22:23,150
do it if you were to add a string it

00:22:20,840 --> 00:22:24,559
would use that one option scenario it

00:22:23,150 --> 00:22:27,860
would just map that string to that one

00:22:24,559 --> 00:22:30,890
property if your constraint has multiple

00:22:27,860 --> 00:22:35,000
properties it would require an array

00:22:30,890 --> 00:22:38,450
with keys and values so every comment

00:22:35,000 --> 00:22:41,900
entity is that is being validated will

00:22:38,450 --> 00:22:45,799
always call that constraint along with

00:22:41,900 --> 00:22:48,290
all of the constraints on its fields you

00:22:45,799 --> 00:22:50,780
can also alter someone else's entity

00:22:48,290 --> 00:22:52,850
type because well if you create them you

00:22:50,780 --> 00:22:56,120
can manipulate the annotation if you

00:22:52,850 --> 00:22:59,240
didn't create them you can't so how do

00:22:56,120 --> 00:23:01,250
you add it to someone else's entity type

00:22:59,240 --> 00:23:04,549
well you just can't add constraint and

00:23:01,250 --> 00:23:06,980
it's like that for most of the following

00:23:04,549 --> 00:23:09,380
use cases usually you just can't add

00:23:06,980 --> 00:23:11,390
constraints you type in the name of the

00:23:09,380 --> 00:23:15,160
name of the constraints and then you add

00:23:11,390 --> 00:23:18,169
an array of options if they are required

00:23:15,160 --> 00:23:20,900
so on the field level so the field item

00:23:18,169 --> 00:23:23,780
lists it's the same so when you are

00:23:20,900 --> 00:23:25,790
defining a Content entity you usually

00:23:23,780 --> 00:23:27,320
have what used to be called properties

00:23:25,790 --> 00:23:29,690
in Drupal 7 now they're called base

00:23:27,320 --> 00:23:32,480
fields so you just add a base field and

00:23:29,690 --> 00:23:34,100
you can't add constraints and it it's a

00:23:32,480 --> 00:23:36,890
constraint that applies to a field item

00:23:34,100 --> 00:23:39,440
list well they don't work if you want to

00:23:36,890 --> 00:23:41,929
do it to someone else's base fields or

00:23:39,440 --> 00:23:50,960
even bundle fields again you just alter

00:23:41,929 --> 00:23:53,780
them right the field entry level so one

00:23:50,960 --> 00:23:57,830
Delta within a field item this is a

00:23:53,780 --> 00:24:01,070
special news case so a single Delta

00:23:57,830 --> 00:24:04,160
within a field item list is actually the

00:24:01,070 --> 00:24:06,200
thing that you define as a field type so

00:24:04,160 --> 00:24:08,540
an entity reference field a date field

00:24:06,200 --> 00:24:11,600
all of them have this plug-in for a

00:24:08,540 --> 00:24:13,340
field type and if you want to have a

00:24:11,600 --> 00:24:15,590
constraint that applies to every single

00:24:13,340 --> 00:24:18,500
Delta of a field this is where you would

00:24:15,590 --> 00:24:20,160
apply it if you create your own field

00:24:18,500 --> 00:24:23,640
type if not

00:24:20,160 --> 00:24:25,440
guess what there's there's a hook field

00:24:23,640 --> 00:24:27,510
info altar to alter someone else's field

00:24:25,440 --> 00:24:30,690
type and then finally we have that

00:24:27,510 --> 00:24:32,570
special little snowflake there's the

00:24:30,690 --> 00:24:35,580
field property level the deepest level

00:24:32,570 --> 00:24:38,070
the most common place where you will use

00:24:35,580 --> 00:24:40,440
this is not actually on the property but

00:24:38,070 --> 00:24:42,870
it's on the field item lists which

00:24:40,440 --> 00:24:44,760
sounds weird but it actually makes sense

00:24:42,870 --> 00:24:47,730
because this is the thing you use the

00:24:44,760 --> 00:24:52,200
most defining base fields on your entity

00:24:47,730 --> 00:24:54,180
type so Drupal made it easy by creating

00:24:52,200 --> 00:24:56,430
a method add property constraints and

00:24:54,180 --> 00:24:59,780
then you can provide a full array of

00:24:56,430 --> 00:25:02,430
constraints each of them with their

00:24:59,780 --> 00:25:04,950
configuration that will apply to a

00:25:02,430 --> 00:25:07,140
specific property now most fields have a

00:25:04,950 --> 00:25:09,030
value property but there are more

00:25:07,140 --> 00:25:11,340
complex fields like entity reference

00:25:09,030 --> 00:25:13,710
fields they have this target ID entity

00:25:11,340 --> 00:25:16,230
target type all sorts of properties if

00:25:13,710 --> 00:25:18,240
for some reason you want to validate any

00:25:16,230 --> 00:25:20,460
of those you can by adding a property

00:25:18,240 --> 00:25:23,160
constraint that's where you'll use them

00:25:20,460 --> 00:25:25,110
the most so which is why again we have

00:25:23,160 --> 00:25:27,090
hooked entity base field info router and

00:25:25,110 --> 00:25:29,220
hook entity bundle field info outer if

00:25:27,090 --> 00:25:32,550
you want to alter someone else's entity

00:25:29,220 --> 00:25:35,460
type space fields but if you want to

00:25:32,550 --> 00:25:37,770
apply to the property itself so if you

00:25:35,460 --> 00:25:39,600
are defining your field type and you are

00:25:37,770 --> 00:25:41,880
defining the properties of your own

00:25:39,600 --> 00:25:44,220
field type then again it's just add

00:25:41,880 --> 00:25:46,080
constraints so this is that special

00:25:44,220 --> 00:25:48,150
snowflake if you want to do it on the

00:25:46,080 --> 00:25:50,340
base field level you add the property

00:25:48,150 --> 00:25:51,870
constraints if you are defining your own

00:25:50,340 --> 00:25:54,480
field type or altering someone else's

00:25:51,870 --> 00:25:55,680
field types property definitions you can

00:25:54,480 --> 00:25:57,480
do it there and then it's just add

00:25:55,680 --> 00:26:00,630
constraints because then you're just

00:25:57,480 --> 00:26:02,820
adding constraints to a typed data

00:26:00,630 --> 00:26:07,200
thingy as you can see by you know the

00:26:02,820 --> 00:26:13,490
data definition create column fair so um

00:26:07,200 --> 00:26:16,230
that's it I hope that made sense I I

00:26:13,490 --> 00:26:18,510
before I go to questions I'm gonna

00:26:16,230 --> 00:26:20,070
repeat a question that was asked when I

00:26:18,510 --> 00:26:23,640
was dry running this session in games

00:26:20,070 --> 00:26:26,370
which is actually a very good one people

00:26:23,640 --> 00:26:28,890
asked me like so we have this API and

00:26:26,370 --> 00:26:32,850
it's being invoked from the forum system

00:26:28,890 --> 00:26:33,720
so why isn't it on by default why if I

00:26:32,850 --> 00:26:36,000
call it I still

00:26:33,720 --> 00:26:38,190
to work with the violations and I was a

00:26:36,000 --> 00:26:41,490
really good question the reason it's not

00:26:38,190 --> 00:26:43,950
on by default is because Drupal can't

00:26:41,490 --> 00:26:47,180
possibly know what to do with violations

00:26:43,950 --> 00:26:50,250
whoever decided to create a constraints

00:26:47,180 --> 00:26:51,900
had specific specific reason in mines

00:26:50,250 --> 00:26:57,420
and Drupal can't guess all of those

00:26:51,900 --> 00:26:59,850
reasons so the way it uses that is it

00:26:57,420 --> 00:27:02,070
just says well we need to have

00:26:59,850 --> 00:27:03,930
validation in the forum system but

00:27:02,070 --> 00:27:05,910
outside of that it's perfectly fine to

00:27:03,930 --> 00:27:09,450
save an entity without it being

00:27:05,910 --> 00:27:11,040
validated if I have time left after

00:27:09,450 --> 00:27:13,740
questions I'll show you the code that's

00:27:11,040 --> 00:27:15,390
doing that because well to most people

00:27:13,740 --> 00:27:17,880
it doesn't make sense that you can save

00:27:15,390 --> 00:27:19,500
entities without them being validated so

00:27:17,880 --> 00:27:20,640
you really need to call it yourself

00:27:19,500 --> 00:27:22,440
that's the message I want to bring

00:27:20,640 --> 00:27:27,090
across don't expect it to happen

00:27:22,440 --> 00:27:28,830
automatically do it yourself so before

00:27:27,090 --> 00:27:31,080
we hit the questions join us this friday

00:27:28,830 --> 00:27:33,690
i'll be there so if you have any more

00:27:31,080 --> 00:27:35,370
questions about this talk if you have

00:27:33,690 --> 00:27:38,430
any more questions about the group

00:27:35,370 --> 00:27:41,880
module about dicen just you know find me

00:27:38,430 --> 00:27:45,030
and i'll be happy to answer them so now

00:27:41,880 --> 00:27:52,440
does anyone have any questions the mics

00:27:45,030 --> 00:27:54,210
up there by the way yes just do me a

00:27:52,440 --> 00:27:57,600
favor and walk up to the mic because

00:27:54,210 --> 00:27:59,130
then I can hear you better and I don't

00:27:57,600 --> 00:28:04,050
have to repeat the question then I think

00:27:59,130 --> 00:28:06,290
that guy has vanished so what is the

00:28:04,050 --> 00:28:10,710
solution for novice codes and

00:28:06,290 --> 00:28:13,170
specifically for for our REST API if you

00:28:10,710 --> 00:28:15,300
want to detect the error but if you

00:28:13,170 --> 00:28:19,410
don't want to parse the text the text of

00:28:15,300 --> 00:28:21,720
fun here sir did you get that yeah so

00:28:19,410 --> 00:28:26,010
the question is what do you do for

00:28:21,720 --> 00:28:28,860
status codes well basically that is not

00:28:26,010 --> 00:28:30,810
up to the entity validation API because

00:28:28,860 --> 00:28:32,730
the entity validation API just validates

00:28:30,810 --> 00:28:34,560
the entity and it should always be the

00:28:32,730 --> 00:28:37,140
same status code when validation fails

00:28:34,560 --> 00:28:39,660
but it's up to you to provide a good

00:28:37,140 --> 00:28:41,850
message so you have a status codes when

00:28:39,660 --> 00:28:45,830
you do a puts or an update puts or

00:28:41,850 --> 00:28:48,679
create put it I'm sorry

00:28:45,830 --> 00:28:51,710
I'm not that familiar with HTTP codes so

00:28:48,679 --> 00:28:53,750
but what you do have is when you return

00:28:51,710 --> 00:28:55,730
that status code that says invalid data

00:28:53,750 --> 00:28:58,549
provided you can specify your own

00:28:55,730 --> 00:29:00,559
message and that is where you just grab

00:28:58,549 --> 00:29:02,210
that violation you call the get message

00:29:00,559 --> 00:29:04,429
method and that's what you ship off and

00:29:02,210 --> 00:29:07,120
then it's up to them to deal with it but

00:29:04,429 --> 00:29:11,269
specifically with the recipe FBI record

00:29:07,120 --> 00:29:14,120
the entity validation at the air that

00:29:11,269 --> 00:29:15,470
big pass is really it's not necessarily

00:29:14,120 --> 00:29:17,840
message that you want to show to the

00:29:15,470 --> 00:29:22,309
users but you have a mobile app or

00:29:17,840 --> 00:29:24,950
something that yeah okay in that case I

00:29:22,309 --> 00:29:29,480
would recommend the thing I said at the

00:29:24,950 --> 00:29:30,980
start of the session it requires you to

00:29:29,480 --> 00:29:32,539
swap out a constraint but if you really

00:29:30,980 --> 00:29:35,600
want those messages to make more sense

00:29:32,539 --> 00:29:37,549
for a user just add your own constraint

00:29:35,600 --> 00:29:39,980
that uses the exact same validator and

00:29:37,549 --> 00:29:42,380
swap them out just replace the original

00:29:39,980 --> 00:29:46,549
with your version that has better error

00:29:42,380 --> 00:29:50,720
messages well if you have like different

00:29:46,549 --> 00:29:52,700
kinds of error validations that you want

00:29:50,720 --> 00:29:56,779
to detect specifically which type of

00:29:52,700 --> 00:29:58,940
error it was yeah it just gives you the

00:29:56,779 --> 00:30:02,809
list of all of them but seeing as you

00:29:58,940 --> 00:30:04,760
get that list there's more methods on a

00:30:02,809 --> 00:30:07,100
violation by the way you can see what it

00:30:04,760 --> 00:30:08,600
was that failed what constraints you

00:30:07,100 --> 00:30:10,519
could probably call one of those methods

00:30:08,600 --> 00:30:12,529
methods and check for the constraint

00:30:10,519 --> 00:30:15,019
that failed so you could do that in your

00:30:12,529 --> 00:30:16,760
code I just showed the most common use

00:30:15,019 --> 00:30:18,769
cases which is just getting the human

00:30:16,760 --> 00:30:20,960
readable error messages but there's more

00:30:18,769 --> 00:30:22,130
you can get from a violation to and then

00:30:20,960 --> 00:30:24,440
you don't have to compare the error

00:30:22,130 --> 00:30:26,149
messages you can compare other stuff

00:30:24,440 --> 00:30:29,120
that's that makes more sense from a

00:30:26,149 --> 00:30:33,260
developer's point of view thank you all

00:30:29,120 --> 00:30:36,429
right anyone else yeah walk up to the

00:30:33,260 --> 00:30:36,429
mic please awesome

00:30:39,100 --> 00:30:46,280
can you also remove constraint yeah yeah

00:30:44,059 --> 00:30:48,320
you can I only showed the add

00:30:46,280 --> 00:30:52,640
constraints but I'm pretty sure there's

00:30:48,320 --> 00:30:56,030
also a remove constraint methods I would

00:30:52,640 --> 00:30:58,870
advise against it because there's almost

00:30:56,030 --> 00:31:02,230
always a good reason why they are there

00:30:58,870 --> 00:31:05,180
but if you want yeah you can remove them

00:31:02,230 --> 00:31:07,340
the sessions go though was to ensure

00:31:05,180 --> 00:31:08,900
that after you leave this session and

00:31:07,340 --> 00:31:10,580
start implementing this it would

00:31:08,900 --> 00:31:12,050
guarantee your data integrity and what

00:31:10,580 --> 00:31:15,740
you just asked me is actually you know

00:31:12,050 --> 00:31:18,559
the other way around so if you alter the

00:31:15,740 --> 00:31:20,510
behavior of an entity it makes sense to

00:31:18,559 --> 00:31:23,540
remove constraint yeah in that case you

00:31:20,510 --> 00:31:25,610
can remove it yes it's perfectly

00:31:23,540 --> 00:31:27,679
possible you can remove it because when

00:31:25,610 --> 00:31:30,590
you call add constraints it just

00:31:27,679 --> 00:31:32,540
actually adds it to a protected array

00:31:30,590 --> 00:31:34,340
inside that class so I can't imagine

00:31:32,540 --> 00:31:42,830
they're not being a method to remove it

00:31:34,340 --> 00:31:44,720
it should definitely be possible oh yeah

00:31:42,830 --> 00:31:46,700
so you can get the whole list and then

00:31:44,720 --> 00:31:49,309
remove it from the list and then set the

00:31:46,700 --> 00:31:50,840
list minus that one item again maybe the

00:31:49,309 --> 00:31:52,880
reason there's another remove constraint

00:31:50,840 --> 00:31:55,160
is because it doesn't well it's like you

00:31:52,880 --> 00:31:58,250
know it should have this big assed label

00:31:55,160 --> 00:31:59,929
saying be careful when you go down this

00:31:58,250 --> 00:32:02,540
path so maybe that's the reason they

00:31:59,929 --> 00:32:04,520
didn't add it to discourage people from

00:32:02,540 --> 00:32:07,309
doing it but there are valid use cases

00:32:04,520 --> 00:32:09,830
and as you know the friendly person at

00:32:07,309 --> 00:32:11,600
the upfront just mentioned you can grab

00:32:09,830 --> 00:32:14,030
the whole list remove an item and just

00:32:11,600 --> 00:32:16,520
at least back but then you need to have

00:32:14,030 --> 00:32:20,420
access to the code that it's fun that's

00:32:16,520 --> 00:32:23,540
valid know so did it no sorry they need

00:32:20,420 --> 00:32:28,700
to have access to the codes that cause

00:32:23,540 --> 00:32:31,880
the fella diagonal well yeah you always

00:32:28,700 --> 00:32:33,679
so you always need to be at a point

00:32:31,880 --> 00:32:35,450
where you can add a constraint in order

00:32:33,679 --> 00:32:37,880
to remove a constraint but you can do

00:32:35,450 --> 00:32:39,410
that to anything as we've seen because

00:32:37,880 --> 00:32:41,240
if you're defining your own stuff then

00:32:39,410 --> 00:32:44,320
it's really easy but you can alter an

00:32:41,240 --> 00:32:47,660
entity type you can alter a field type

00:32:44,320 --> 00:32:50,240
you can alter an entity's base fields so

00:32:47,660 --> 00:32:51,500
you should be able to get to that point

00:32:50,240 --> 00:32:53,990
where you would normally call add

00:32:51,500 --> 00:32:57,020
constraints but in your case removal

00:32:53,990 --> 00:32:59,540
constraints stereo methods remove

00:32:57,020 --> 00:33:02,630
constraint now so there's no method to

00:32:59,540 --> 00:33:04,640
remove it as this person has just looked

00:33:02,630 --> 00:33:06,620
up but there is a way to get the full

00:33:04,640 --> 00:33:08,120
list which will give you all of the

00:33:06,620 --> 00:33:11,330
constraints that are currently on that

00:33:08,120 --> 00:33:14,179
item and then you can manipulate that

00:33:11,330 --> 00:33:15,860
list but there is a method to also set

00:33:14,179 --> 00:33:18,410
all of the constraints so you're

00:33:15,860 --> 00:33:20,270
basically overriding the original list

00:33:18,410 --> 00:33:23,870
with your version of that list that has

00:33:20,270 --> 00:33:27,050
one fewer I Tamina okay I think I get it

00:33:23,870 --> 00:33:30,679
now okay if you want um you know come up

00:33:27,050 --> 00:33:36,830
to me after and i'll show it okay so

00:33:30,679 --> 00:33:40,550
anyone else I when you create a

00:33:36,830 --> 00:33:42,410
constraint validator them you call add

00:33:40,550 --> 00:33:45,140
fat so if there's something that's

00:33:42,410 --> 00:33:47,600
failed you would call add violation yeah

00:33:45,140 --> 00:33:48,890
but that applies to context do you know

00:33:47,600 --> 00:33:51,710
or would you be able to explain what the

00:33:48,890 --> 00:33:55,610
context is is ever used in Drupal yeah

00:33:51,710 --> 00:33:58,190
so that context I didn't mention it but

00:33:55,610 --> 00:34:01,220
I did implicitly it's basically what i

00:33:58,190 --> 00:34:03,740
said when every validator already knows

00:34:01,220 --> 00:34:05,240
where it's at so when you're validating

00:34:03,740 --> 00:34:07,550
a field item list it already knows that

00:34:05,240 --> 00:34:10,190
it's at that field item list so which is

00:34:07,550 --> 00:34:12,649
why I mentioned you don't need to you

00:34:10,190 --> 00:34:15,080
don't need to populate that property

00:34:12,649 --> 00:34:20,300
path yourself in most of you know most

00:34:15,080 --> 00:34:22,310
of the use cases so yeah it's it's it's

00:34:20,300 --> 00:34:24,649
the context is basically the thing that

00:34:22,310 --> 00:34:27,109
tells your validator where it's at if

00:34:24,649 --> 00:34:29,750
you want to specify your own property

00:34:27,109 --> 00:34:31,250
path for some reason you can also use

00:34:29,750 --> 00:34:33,560
that context and then go from there

00:34:31,250 --> 00:34:36,500
instead of add violation you can't build

00:34:33,560 --> 00:34:39,159
violation but then you need to specify a

00:34:36,500 --> 00:34:42,230
lot more info you need to invoke the ads

00:34:39,159 --> 00:34:44,149
at path method to tell you know very

00:34:42,230 --> 00:34:46,760
very telling it's more complex but there

00:34:44,149 --> 00:34:49,310
are examples in core but generally you

00:34:46,760 --> 00:34:56,950
just call add violation and it does all

00:34:49,310 --> 00:34:59,840
the rest for you anyone else nope okay

00:34:56,950 --> 00:35:02,300
so I'm going to be honest I never

00:34:59,840 --> 00:35:03,720
evaluate evaluated the session before so

00:35:02,300 --> 00:35:06,869
if I have zero evaluation

00:35:03,720 --> 00:35:09,420
I'm not going to be mad at you but if

00:35:06,869 --> 00:35:11,160
you do feel generous and kind please

00:35:09,420 --> 00:35:13,200
validate it it's my first time speaking

00:35:11,160 --> 00:35:19,680
at drupalcon so I was actually really

00:35:13,200 --> 00:35:25,580
stoked insight and nervous but yeah let

00:35:19,680 --> 00:35:25,580
me know what you thought so thank you

00:35:30,800 --> 00:35:39,150
and now a very shameless plug we're

00:35:36,690 --> 00:35:42,390
hiring but also we have these cool

00:35:39,150 --> 00:35:43,980
t-shirts now and my colleague ash up

00:35:42,390 --> 00:35:45,540
front has a couple of them so if you

00:35:43,980 --> 00:35:47,730
want one of these t-shirts with that

00:35:45,540 --> 00:35:51,540
little rocket on it for the future of

00:35:47,730 --> 00:35:55,680
work concept just contact him you know

00:35:51,540 --> 00:35:59,280
first one gets one I guess so if you're

00:35:55,680 --> 00:36:01,680
interested in working remotely for a

00:35:59,280 --> 00:36:04,140
uk-based agency or working from the UK

00:36:01,680 --> 00:36:06,510
if you're interested in a mandatory five

00:36:04,140 --> 00:36:08,520
week sabbatical or as I was just telling

00:36:06,510 --> 00:36:10,290
my colleague I took a nap before this

00:36:08,520 --> 00:36:13,260
session if you're interested in being

00:36:10,290 --> 00:36:15,410
paid to take a nap come talk to me all

00:36:13,260 --> 00:36:15,410

YouTube URL: https://www.youtube.com/watch?v=FI_eDzmd0-o


