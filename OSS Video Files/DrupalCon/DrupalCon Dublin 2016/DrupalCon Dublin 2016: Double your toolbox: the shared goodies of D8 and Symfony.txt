Title: DrupalCon Dublin 2016: Double your toolbox: the shared goodies of D8 and Symfony
Publication date: 2016-09-27
Playlist: DrupalCon Dublin 2016
Description: 
	You already know that Symfony and Drupal share a lot of things, but you might not know what that means... or how dangerous it's about to make you!

In this talk, we'll look at the fundamental principles behind Drupal 8, which happen to be the same things that drive Symfony behind the scenes. These include routes and controllers, events and the all-important service, service container and (queue dramatic sound-effect)Â dependency injection. If these concepts are still fairly new to you, this talk is for you: master them all at once and unlock a world where one skillset will empower you to use D8 or the Symfony framework should that need arise. It's a wonderful, new shared world: let's make something amazing, together.

https://speakerdeck.com/nicolasgrekas/double-your-toolbox-the-shared-goodies-of-d8-and-symfony
Captions: 
	00:00:00,000 --> 00:00:09,059
hello everyone good to see you have the

00:00:05,370 --> 00:00:11,219
room full thank you for coming today or

00:00:09,059 --> 00:00:13,320
yesterday and is a special day because

00:00:11,219 --> 00:00:15,509
we have this vanity metric you know five

00:00:13,320 --> 00:00:17,609
hundred thousand downloads for all

00:00:15,509 --> 00:00:19,350
Symphony components so that's a huge

00:00:17,609 --> 00:00:24,330
number we are very happy to share that

00:00:19,350 --> 00:00:34,680
with you and a drupalcon um let's

00:00:24,330 --> 00:00:38,870
proceed it's the symphony trike so we're

00:00:34,680 --> 00:00:43,980
talking about Symphony things and Drupal

00:00:38,870 --> 00:00:47,670
okay um let's go it's noisy but Sookie

00:00:43,980 --> 00:00:49,950
and today the No okay talk about a

00:00:47,670 --> 00:00:52,230
symphony inside drupal because as you

00:00:49,950 --> 00:00:56,129
know Drupal 8 has Symphony many symphony

00:00:52,230 --> 00:01:01,109
components inside and uses them to do so

00:00:56,129 --> 00:01:03,570
many things and core things quickly so

00:01:01,109 --> 00:01:06,689
my name is nicola grekes I'm from Paris

00:01:03,570 --> 00:01:10,979
a half Greek you may have wondered with

00:01:06,689 --> 00:01:13,409
my name I'm the currently second

00:01:10,979 --> 00:01:16,950
contributor on Symphony so I have a lot

00:01:13,409 --> 00:01:19,229
of time working at century labs to also

00:01:16,950 --> 00:01:22,409
hack and do think some symphony so I'm

00:01:19,229 --> 00:01:25,670
very happy to work there I also work for

00:01:22,409 --> 00:01:28,290
black fire and black for the profiler so

00:01:25,670 --> 00:01:29,460
if you want to know how you caught

00:01:28,290 --> 00:01:31,590
behaves in terms of performance

00:01:29,460 --> 00:01:35,850
consuming resources memory things like

00:01:31,590 --> 00:01:38,100
that it's a nice tool for that and I

00:01:35,850 --> 00:01:40,320
worked on these slides and this

00:01:38,100 --> 00:01:42,930
presentation with the Ryan Ryan Weaver

00:01:40,320 --> 00:01:46,009
is the symphony documentation project

00:01:42,930 --> 00:01:48,570
leader so really important guide for all

00:01:46,009 --> 00:01:51,600
newcomers to Symphony and advanced

00:01:48,570 --> 00:01:54,180
people because he owns the Nemean owning

00:01:51,600 --> 00:01:58,799
he leads the documentation project and

00:01:54,180 --> 00:02:03,180
this is a huge task um that's it for me

00:01:58,799 --> 00:02:05,159
um okay so we're going to talk a bit

00:02:03,180 --> 00:02:09,300
about the fundamentals of every

00:02:05,159 --> 00:02:11,790
framework not anymore except Drupal so

00:02:09,300 --> 00:02:12,360
now Drupal as the same kind of you know

00:02:11,790 --> 00:02:17,120
lifestyle

00:02:12,360 --> 00:02:21,300
web request handling than almost all

00:02:17,120 --> 00:02:25,610
current frameworks um so that's the kind

00:02:21,300 --> 00:02:30,380
of code you used to write with Drupal 7

00:02:25,610 --> 00:02:33,150
so some convention a naming function

00:02:30,380 --> 00:02:34,800
like you had to do to make it work in

00:02:33,150 --> 00:02:37,560
Drupal and what that was magic and

00:02:34,800 --> 00:02:40,740
working fine and so that's not the kind

00:02:37,560 --> 00:02:43,790
the kind of things you do anymore in

00:02:40,740 --> 00:02:47,420
symphony in silex now you have roots

00:02:43,790 --> 00:02:49,950
controllers request responses and

00:02:47,420 --> 00:02:52,520
service container so we're going to talk

00:02:49,950 --> 00:02:55,920
about all of them in this presentation

00:02:52,520 --> 00:02:58,520
and of course now it's also a Drupal 8

00:02:55,920 --> 00:03:07,530
thing so all of this concept apply to

00:02:58,520 --> 00:03:10,410
Drupal 8 um salix who knows silex okay

00:03:07,530 --> 00:03:12,570
great so selects is micro framework a

00:03:10,410 --> 00:03:15,360
micro framework is something that works

00:03:12,570 --> 00:03:18,870
in a single file so as you can see this

00:03:15,360 --> 00:03:21,600
is a single script with a requiring

00:03:18,870 --> 00:03:23,880
requiring the autoloader first line and

00:03:21,600 --> 00:03:27,450
then we have the selects application at

00:03:23,880 --> 00:03:35,190
our disposal and we can program a road

00:03:27,450 --> 00:03:39,540
uh no controller so this is amazing them

00:03:35,190 --> 00:03:42,780
to run this and you may use em genex or

00:03:39,540 --> 00:03:49,489
a peachy so who is doing this daily for

00:03:42,780 --> 00:03:57,170
development using apache or nginx okay

00:03:49,489 --> 00:04:00,870
so and who is that PHP dash s okay so

00:03:57,170 --> 00:04:02,880
it's a developer's best friend so you

00:04:00,870 --> 00:04:05,430
just need to know about let me talk a

00:04:02,880 --> 00:04:08,850
little bit about that so PHP comes with

00:04:05,430 --> 00:04:11,190
this PHP server embedded and you started

00:04:08,850 --> 00:04:13,350
in the folder where you are the current

00:04:11,190 --> 00:04:16,169
moment on the command line and this just

00:04:13,350 --> 00:04:18,150
opens web server that listens on the

00:04:16,169 --> 00:04:19,919
local host on some pot you have to

00:04:18,150 --> 00:04:23,849
provide it so a thousands in this case

00:04:19,919 --> 00:04:25,810
and its really the quick and not that

00:04:23,849 --> 00:04:30,550
dirty quick and dirty quick and develop

00:04:25,810 --> 00:04:32,800
way to you know start an application it

00:04:30,550 --> 00:04:35,020
looks for the index dot PHP file in the

00:04:32,800 --> 00:04:37,060
current folder and that's it that's

00:04:35,020 --> 00:04:39,639
enough to boot a full application and it

00:04:37,060 --> 00:04:41,080
works with Drupal which means that if

00:04:39,639 --> 00:04:43,030
you're in the Drupal folder it just

00:04:41,080 --> 00:04:45,610
starts PHP dash S localhost and you

00:04:43,030 --> 00:04:48,820
don't have to configure any virtual host

00:04:45,610 --> 00:04:50,650
any web server or you know although

00:04:48,820 --> 00:04:52,630
something that can be complicated to

00:04:50,650 --> 00:04:53,860
configure and to get right just start

00:04:52,630 --> 00:04:56,110
that in the folder where you are and

00:04:53,860 --> 00:04:59,290
open your web browser to this your

00:04:56,110 --> 00:05:01,630
errand it should work so that's the kind

00:04:59,290 --> 00:05:04,510
of experience you have with that so and

00:05:01,630 --> 00:05:06,729
that's running the script on the Silex

00:05:04,510 --> 00:05:09,750
application so in this case will be PHP

00:05:06,729 --> 00:05:12,520
dash S localhost a thousand one and then

00:05:09,750 --> 00:05:15,400
it's listening we open this URL on the

00:05:12,520 --> 00:05:19,060
browser and we get the feedback from the

00:05:15,400 --> 00:05:21,280
application so it's really a trainers

00:05:19,060 --> 00:05:23,530
also best friend because when we have I

00:05:21,280 --> 00:05:25,479
do a few trainings and sometimes when

00:05:23,530 --> 00:05:28,990
okay it's complicated to have everyone

00:05:25,479 --> 00:05:32,080
on board with the same setup and PHP s

00:05:28,990 --> 00:05:33,669
is really the common way and I use it

00:05:32,080 --> 00:05:37,870
almost every day to just hack on

00:05:33,669 --> 00:05:40,930
something and try it quickly um let's

00:05:37,870 --> 00:05:44,880
see the general workflow of the request

00:05:40,930 --> 00:05:47,500
response of that framework deal with so

00:05:44,880 --> 00:05:51,539
the request comes from the browser

00:05:47,500 --> 00:05:55,810
usually or some client web client and

00:05:51,539 --> 00:05:59,410
then the routing are maps and reads the

00:05:55,810 --> 00:06:01,240
URL really to map it to some controller

00:05:59,410 --> 00:06:03,280
so the controller is the actual function

00:06:01,240 --> 00:06:06,310
and the code that should be run for this

00:06:03,280 --> 00:06:08,380
route that the Rooter I matched and then

00:06:06,310 --> 00:06:10,900
the controllers is responsible for

00:06:08,380 --> 00:06:13,090
returning your response so creating your

00:06:10,900 --> 00:06:15,340
response and give that back to the

00:06:13,090 --> 00:06:17,020
browser so that's typical workflow and

00:06:15,340 --> 00:06:21,300
we're going to see this slide a few

00:06:17,020 --> 00:06:23,919
times again because it's really the core

00:06:21,300 --> 00:06:27,760
the hot part of every frame work

00:06:23,919 --> 00:06:30,789
nowadays so back to this this is the

00:06:27,760 --> 00:06:33,970
route so silex comes with the router

00:06:30,789 --> 00:06:39,400
embedded and this is the route so /

00:06:33,970 --> 00:06:45,370
hello / name so name is a wild card

00:06:39,400 --> 00:06:49,330
we just named when the URL matches it

00:06:45,370 --> 00:06:51,720
the function should be called so with a

00:06:49,330 --> 00:06:56,020
parameter so the ritual looks for this

00:06:51,720 --> 00:06:58,270
bracket name and gives it to the

00:06:56,020 --> 00:07:01,110
controller release so this function has

00:06:58,270 --> 00:07:05,380
an agreement and then record is run and

00:07:01,110 --> 00:07:08,910
that's it we have our response our hello

00:07:05,380 --> 00:07:12,250
world silex application and basically

00:07:08,910 --> 00:07:15,430
this is the kind of thing or also that

00:07:12,250 --> 00:07:18,550
Drupal does internally catching the

00:07:15,430 --> 00:07:22,260
request getting it creating a request

00:07:18,550 --> 00:07:24,699
object and dealing with life cycles so

00:07:22,260 --> 00:07:26,680
rooting with the router so it's Symphony

00:07:24,699 --> 00:07:29,530
brutal it's not a recruiter but anyway

00:07:26,680 --> 00:07:33,639
I'm calling the action so the controller

00:07:29,530 --> 00:07:36,280
class and providing a response HTML

00:07:33,639 --> 00:07:43,949
usually JSON if you do api's things like

00:07:36,280 --> 00:07:48,210
that okay so let's try with symphony um

00:07:43,949 --> 00:07:52,449
who knows josh everyone okay of course

00:07:48,210 --> 00:07:54,789
who knows Drupal console ok so it's

00:07:52,449 --> 00:07:59,889
Drupal 8 way of doing drugs like your

00:07:54,789 --> 00:08:02,320
comments in Symphony we have the kind of

00:07:59,889 --> 00:08:05,110
some kind of console and the drupal

00:08:02,320 --> 00:08:07,060
console is using the symphony concert

00:08:05,110 --> 00:08:08,770
component to build the experience and

00:08:07,060 --> 00:08:10,690
the subcomm instincts and all of that

00:08:08,770 --> 00:08:13,300
and symphony is doing exactly the same

00:08:10,690 --> 00:08:15,550
to build the symphony installer so the

00:08:13,300 --> 00:08:19,930
symphony installer is just some glue

00:08:15,550 --> 00:08:22,810
some helper to download the code so the

00:08:19,930 --> 00:08:24,580
code is on github and the helpers this

00:08:22,810 --> 00:08:26,830
installer is common line that downloads

00:08:24,580 --> 00:08:28,510
because for you checks that everything

00:08:26,830 --> 00:08:32,409
is okay in terms of PHP version

00:08:28,510 --> 00:08:34,990
extension things like that and it really

00:08:32,409 --> 00:08:37,539
makes the installation process easier

00:08:34,990 --> 00:08:39,520
even to you don't really need it

00:08:37,539 --> 00:08:43,180
technically to have a symphony

00:08:39,520 --> 00:08:46,150
application working so you could use it

00:08:43,180 --> 00:08:49,990
to create a new project so symphony you

00:08:46,150 --> 00:08:51,990
my genome so my project really and this

00:08:49,990 --> 00:08:55,770
donors the

00:08:51,990 --> 00:09:00,570
symphony application and show you some

00:08:55,770 --> 00:09:04,950
you know nice greeting welcoming message

00:09:00,570 --> 00:09:07,170
to onboard people easily if you look at

00:09:04,950 --> 00:09:11,339
the downloaded code you'll see this kind

00:09:07,170 --> 00:09:14,610
of directory structure so the app folder

00:09:11,339 --> 00:09:20,870
is where all the configuration and

00:09:14,610 --> 00:09:25,950
templates and not code related files are

00:09:20,870 --> 00:09:29,760
so config the channel twig files all of

00:09:25,950 --> 00:09:33,540
that then this other very important

00:09:29,760 --> 00:09:37,040
folder is the SRC so the source folder

00:09:33,540 --> 00:09:39,570
and this is where you put your classes

00:09:37,040 --> 00:09:41,910
just following you know the PS or four

00:09:39,570 --> 00:09:44,910
pairs of zero naming convention so the

00:09:41,910 --> 00:09:47,070
class up bundle is in the herb bundle

00:09:44,910 --> 00:09:50,310
namespace and this maps to the directory

00:09:47,070 --> 00:09:53,459
structure and so we have directory for

00:09:50,310 --> 00:09:57,000
namespaces and file for the class the

00:09:53,459 --> 00:09:59,370
last part of the class name so this

00:09:57,000 --> 00:10:01,410
comes empty of course except maybe with

00:09:59,370 --> 00:10:06,120
the AB bundle which is the you know the

00:10:01,410 --> 00:10:08,459
module file in routine symphony then you

00:10:06,120 --> 00:10:12,300
have ok to test folder it's up to you to

00:10:08,459 --> 00:10:15,980
fill it and the VAR folder where we put

00:10:12,300 --> 00:10:19,680
like cash information generated files

00:10:15,980 --> 00:10:21,870
logs and things like that so technical

00:10:19,680 --> 00:10:26,329
things that are managed by Symphony

00:10:21,870 --> 00:10:29,490
itself usually and we have the vendor

00:10:26,329 --> 00:10:32,240
directory which is for libraries

00:10:29,490 --> 00:10:35,190
third-party code you have the same in

00:10:32,240 --> 00:10:37,440
Drupal 8 so you will find the vendor

00:10:35,190 --> 00:10:40,500
directory in Drupal 8 and this is

00:10:37,440 --> 00:10:43,709
created by composer which is used to

00:10:40,500 --> 00:10:46,529
manage dependencies in symphony and in

00:10:43,709 --> 00:10:49,670
Drupal 8 and in i guess most PHP

00:10:46,529 --> 00:10:52,670
application notice who uses composer

00:10:49,670 --> 00:10:52,670
okay

00:10:54,000 --> 00:11:02,170
okay drupalcon soul symphony console

00:10:59,850 --> 00:11:04,330
when you install the application there

00:11:02,170 --> 00:11:06,760
is also the bin folder and in the bin

00:11:04,330 --> 00:11:08,380
folder you have a local squid local PHP

00:11:06,760 --> 00:11:11,320
script so this is a PHP script and it

00:11:08,380 --> 00:11:15,040
runs from the command line so you can

00:11:11,320 --> 00:11:18,190
run the PHP dash S sever and just using

00:11:15,040 --> 00:11:20,830
being console server run this is just a

00:11:18,190 --> 00:11:23,980
helper wrapper around you know PHP dash

00:11:20,830 --> 00:11:26,320
S I was talking about previously so you

00:11:23,980 --> 00:11:28,210
could start PHP dash S with a few common

00:11:26,320 --> 00:11:29,710
options on the command line and do

00:11:28,210 --> 00:11:32,770
exactly the same this is just a helper

00:11:29,710 --> 00:11:34,690
but yet this is really helpful to you

00:11:32,770 --> 00:11:36,970
know you get into this folder your

00:11:34,690 --> 00:11:38,980
projects you start the server and you

00:11:36,970 --> 00:11:41,350
work on it it's ready nothing else to

00:11:38,980 --> 00:11:43,420
configure on add a PG & lenox things

00:11:41,350 --> 00:11:45,840
like that and in the same with drupal

00:11:43,420 --> 00:11:48,640
console with drupal console you can say

00:11:45,840 --> 00:11:50,650
drupal server that's the name of the

00:11:48,640 --> 00:11:53,380
common on drupal console and it boots

00:11:50,650 --> 00:11:55,780
just the PHP dash S server and you can

00:11:53,380 --> 00:11:58,230
hack on your Drupal installation and

00:11:55,780 --> 00:12:03,430
unbroken models and things like that

00:11:58,230 --> 00:12:08,100
everything you need to do really um so

00:12:03,430 --> 00:12:13,000
that's the Welcome page of the symphony

00:12:08,100 --> 00:12:14,890
default installation application so

00:12:13,000 --> 00:12:18,190
dress was talking about you know

00:12:14,890 --> 00:12:20,200
welcoming people with a note that empty

00:12:18,190 --> 00:12:21,910
applications at the beginning the same

00:12:20,200 --> 00:12:24,610
for drupal and next version of Drupal

00:12:21,910 --> 00:12:29,650
and not providing only empty pages so it

00:12:24,610 --> 00:12:31,330
so that people can feel a bit more how

00:12:29,650 --> 00:12:33,670
it works and what they can do and that

00:12:31,330 --> 00:12:38,140
at least that it worked so here we are

00:12:33,670 --> 00:12:41,680
this is the welcoming page if you go to

00:12:38,140 --> 00:12:45,430
something some other URL so / nothing

00:12:41,680 --> 00:12:49,780
flash to see / hear you'll get this kind

00:12:45,430 --> 00:12:51,790
of exception page this is just the page

00:12:49,780 --> 00:12:54,190
that is displayed when something went

00:12:51,790 --> 00:12:56,080
wrong not in terms of symphony not

00:12:54,190 --> 00:12:58,150
working because this is Symphony working

00:12:56,080 --> 00:13:00,810
on behind so this is an exception page

00:12:58,150 --> 00:13:04,060
and it means that simple into is working

00:13:00,810 --> 00:13:06,950
but there's no page here so that the you

00:13:04,060 --> 00:13:09,890
know error page for nothing there

00:13:06,950 --> 00:13:12,230
so okay that's basically what this means

00:13:09,890 --> 00:13:14,780
hello hand the pacman ghosts look the

00:13:12,230 --> 00:13:18,880
things are working this page does not

00:13:14,780 --> 00:13:21,740
exist yet in symphony and in Drupal so

00:13:18,880 --> 00:13:24,350
everything is hackable so you you may

00:13:21,740 --> 00:13:26,780
may I have to you may find some fancy

00:13:24,350 --> 00:13:29,330
bundles and this is one I wanted to

00:13:26,780 --> 00:13:33,980
share with you so if you want to replace

00:13:29,330 --> 00:13:35,870
the ghost you can do that actually quite

00:13:33,980 --> 00:13:39,590
gif exception bundle it takes a random

00:13:35,870 --> 00:13:45,380
bundle from a website random gift from a

00:13:39,590 --> 00:13:49,210
certain that's it okay so now we

00:13:45,380 --> 00:13:53,150
installed symphony let's mean the page

00:13:49,210 --> 00:13:56,930
and so the first thing one of the first

00:13:53,150 --> 00:13:59,090
thing you can do is creating a road to

00:13:56,930 --> 00:14:02,060
the new page you want to add to your

00:13:59,090 --> 00:14:05,450
application so do that you put the

00:14:02,060 --> 00:14:08,420
routing yeah Mel file and in drupal

00:14:05,450 --> 00:14:11,540
module it's called my model dot routing

00:14:08,420 --> 00:14:14,650
dot yemen and the content is the same so

00:14:11,540 --> 00:14:22,010
the content is this kind of Yemen who

00:14:14,650 --> 00:14:24,920
uses yaman ok so you know how it works

00:14:22,010 --> 00:14:30,710
so the hello world is the name of the

00:14:24,920 --> 00:14:32,990
root path is the URL pattern you know

00:14:30,710 --> 00:14:35,360
because we have the bracket name thing

00:14:32,990 --> 00:14:38,480
that is not exactly the URL but the

00:14:35,360 --> 00:14:40,940
placeholder for it and we have defaults

00:14:38,480 --> 00:14:44,150
and in default we define this underscore

00:14:40,940 --> 00:14:47,990
controller and a class name so the class

00:14:44,150 --> 00:14:50,420
name is the full fully qualified class

00:14:47,990 --> 00:14:54,230
name and the method that should be cold

00:14:50,420 --> 00:14:57,680
whenever this route is hit buzz by an

00:14:54,230 --> 00:15:02,000
HTTP client the route has a name hello

00:14:57,680 --> 00:15:05,210
world because we uses we use root both

00:15:02,000 --> 00:15:08,000
to match from the brother from browser

00:15:05,210 --> 00:15:11,720
to the controller and we use this also

00:15:08,000 --> 00:15:14,870
this we use also this configuration to

00:15:11,720 --> 00:15:19,910
generate URLs so you can set to the URL

00:15:14,870 --> 00:15:20,750
generator give me a full URL for the

00:15:19,910 --> 00:15:24,380
hello world

00:15:20,750 --> 00:15:28,160
root with the name Nicholas and you will

00:15:24,380 --> 00:15:32,540
get HTTP / localhost / my application /

00:15:28,160 --> 00:15:38,510
hello / Nicholas so that's why roads

00:15:32,540 --> 00:15:41,630
have names on the controller side we

00:15:38,510 --> 00:15:45,590
have this function this kind of code so

00:15:41,630 --> 00:15:48,980
this is really playing PHP code as you

00:15:45,590 --> 00:15:51,470
can see there's no no much dependencies

00:15:48,980 --> 00:15:54,740
so we have just plain class no external

00:15:51,470 --> 00:15:56,930
no implementation of an interface and a

00:15:54,740 --> 00:15:59,240
public function say hello action for the

00:15:56,930 --> 00:16:00,880
name and that's the job of the

00:15:59,240 --> 00:16:05,990
controller returning your response

00:16:00,880 --> 00:16:08,480
saying in this case hello name this

00:16:05,990 --> 00:16:12,530
class the response class is the same

00:16:08,480 --> 00:16:14,300
that drupal hate duper 8 uses inside so

00:16:12,530 --> 00:16:16,730
you can do exactly the same in your own

00:16:14,300 --> 00:16:18,500
controllers returning a new response and

00:16:16,730 --> 00:16:20,960
you will take control of the full page

00:16:18,500 --> 00:16:25,040
if you do that so if you return you know

00:16:20,960 --> 00:16:27,380
the sharp mark-up array and sharp

00:16:25,040 --> 00:16:29,450
marketing firm with valuable HTML

00:16:27,380 --> 00:16:33,290
content at this one in Drupal will be

00:16:29,450 --> 00:16:35,420
included inside the default layout so

00:16:33,290 --> 00:16:37,490
you will have the Drupal layout and in

00:16:35,420 --> 00:16:39,500
your blog you will have the output of

00:16:37,490 --> 00:16:41,870
the controller but if you return a

00:16:39,500 --> 00:16:44,210
response you will take control of the

00:16:41,870 --> 00:16:46,220
full page from the beginning HTML tag to

00:16:44,210 --> 00:16:48,850
the M HTML tag and you can do whatever

00:16:46,220 --> 00:16:58,390
you do there even root unknown as not

00:16:48,850 --> 00:17:01,850
HTML content so here we are it works

00:16:58,390 --> 00:17:03,800
also back to this that's the same

00:17:01,850 --> 00:17:06,980
exactly the same workflow life cycle

00:17:03,800 --> 00:17:09,740
that we did with Silex but now we just

00:17:06,980 --> 00:17:11,720
did it with symphony and also Drupal 8

00:17:09,740 --> 00:17:15,560
because it's exactly the same so the

00:17:11,720 --> 00:17:17,120
request came in broaching did a job to

00:17:15,560 --> 00:17:19,400
map it to the controller the controller

00:17:17,120 --> 00:17:26,750
created the response and the response

00:17:19,400 --> 00:17:28,040
was sent back to browser what about the

00:17:26,750 --> 00:17:30,710
debugging experience you know it's

00:17:28,040 --> 00:17:32,490
something really important in terms of

00:17:30,710 --> 00:17:35,280
you know

00:17:32,490 --> 00:17:37,470
doing with dealing with code and having

00:17:35,280 --> 00:17:40,140
things working all the time is not the

00:17:37,470 --> 00:17:45,120
case and we are used to you know have

00:17:40,140 --> 00:17:47,010
things not working yet and two we need

00:17:45,120 --> 00:17:50,700
to be able to reflect the state of the

00:17:47,010 --> 00:17:53,670
application and to get insights on what

00:17:50,700 --> 00:17:56,580
happens on how this application is

00:17:53,670 --> 00:18:00,330
configured so with symphony we are the

00:17:56,580 --> 00:18:02,190
debug rotor commands on the console

00:18:00,330 --> 00:18:05,100
application and this displays all the

00:18:02,190 --> 00:18:07,080
routes that are available for this

00:18:05,100 --> 00:18:08,760
application for the current state of the

00:18:07,080 --> 00:18:11,970
application so as you can see the last

00:18:08,760 --> 00:18:18,500
line there is our hello world road with

00:18:11,970 --> 00:18:21,990
a / hello / name path it matches all the

00:18:18,500 --> 00:18:23,960
method so HTTP method get post put deal

00:18:21,990 --> 00:18:30,150
it so we could have restriction they're

00:18:23,960 --> 00:18:31,679
all schemes HTTPS or not and all hosts

00:18:30,150 --> 00:18:34,790
because you could have different

00:18:31,679 --> 00:18:38,850
controllers based on the on the host

00:18:34,790 --> 00:18:42,390
localhost or so so on and you have also

00:18:38,850 --> 00:18:45,840
all the underscore profiler routes which

00:18:42,390 --> 00:18:48,990
are just the routes that are required to

00:18:45,840 --> 00:18:50,820
make you this work so at the bottom of

00:18:48,990 --> 00:18:54,150
the screen it's the web profile

00:18:50,820 --> 00:18:57,570
o-thul-ba you have exactly the same it's

00:18:54,150 --> 00:19:01,590
white and a black okay and with the

00:18:57,570 --> 00:19:03,840
devil devil module in Drupal 8 and so

00:19:01,590 --> 00:19:07,410
you have to and you should in fact if

00:19:03,840 --> 00:19:11,100
you not doing it already so install the

00:19:07,410 --> 00:19:13,290
devil model and install also the enable

00:19:11,100 --> 00:19:15,210
it the web profile your model and this

00:19:13,290 --> 00:19:17,790
will provide you exactly the same

00:19:15,210 --> 00:19:19,890
experience having everything at hand in

00:19:17,790 --> 00:19:23,970
the bottom of the screen so as you can

00:19:19,890 --> 00:19:26,450
see the total generation time so 87

00:19:23,970 --> 00:19:30,440
milliseconds for something megabytes and

00:19:26,450 --> 00:19:34,110
a few other information so for example

00:19:30,440 --> 00:19:36,390
it's a bit cut there but we have a 200

00:19:34,110 --> 00:19:39,030
which is the response code HTTP response

00:19:36,390 --> 00:19:42,480
code then the controller so we know that

00:19:39,030 --> 00:19:44,940
okay that's not unexpected but it's our

00:19:42,480 --> 00:19:46,290
say hello action and the polite

00:19:44,940 --> 00:19:50,190
controller

00:19:46,290 --> 00:19:55,200
the controller class root name do we

00:19:50,190 --> 00:19:57,690
have a session yes or not we also have

00:19:55,200 --> 00:19:59,460
you know security tokens security

00:19:57,690 --> 00:20:01,650
authentication authorization so we can

00:19:59,460 --> 00:20:04,230
check their who we are for the

00:20:01,650 --> 00:20:06,290
application and we can see did we login

00:20:04,230 --> 00:20:08,280
to get this page is the application

00:20:06,290 --> 00:20:12,050
knowing us so in this case we have a

00:20:08,280 --> 00:20:16,500
session and we are some anonymous user

00:20:12,050 --> 00:20:18,270
browsing the application if you click on

00:20:16,500 --> 00:20:21,630
anything on the toolbar you will get

00:20:18,270 --> 00:20:23,820
this profiler pages so underscore

00:20:21,630 --> 00:20:26,970
profiler if you remember the rods and

00:20:23,820 --> 00:20:28,500
the previous screen so this will show

00:20:26,970 --> 00:20:31,920
you for the current request the one that

00:20:28,500 --> 00:20:34,710
was just displayed before the render

00:20:31,920 --> 00:20:38,280
time the number of template calls of

00:20:34,710 --> 00:20:39,960
blood calls and the details on the

00:20:38,280 --> 00:20:44,850
renderer template so in this case we

00:20:39,960 --> 00:20:47,310
have this full tweak files that were you

00:20:44,850 --> 00:20:49,620
know loaded past bandwidth and you can

00:20:47,310 --> 00:20:53,160
click on the other tab and to get

00:20:49,620 --> 00:20:56,970
request response details performance log

00:20:53,160 --> 00:21:01,200
so all the logs can be considered from

00:20:56,970 --> 00:21:03,660
this the event watching security twig so

00:21:01,200 --> 00:21:08,220
this is for example the view for the

00:21:03,660 --> 00:21:10,650
profiler panel and it's really an

00:21:08,220 --> 00:21:13,470
interesting view when you want to

00:21:10,650 --> 00:21:17,160
understand and figure out what happened

00:21:13,470 --> 00:21:19,920
during this page rendering because you

00:21:17,160 --> 00:21:23,070
know sometimes it's a bit magic to have

00:21:19,920 --> 00:21:25,710
a response and you know that Drupal did

00:21:23,070 --> 00:21:27,390
things but you don't know what and in

00:21:25,710 --> 00:21:29,430
this case you can just look at this and

00:21:27,390 --> 00:21:31,110
have a quick review what happened so

00:21:29,430 --> 00:21:34,020
what happened there at the beginning

00:21:31,110 --> 00:21:36,000
there were some section it's black

00:21:34,020 --> 00:21:38,790
section so it's Colonel Dutch request

00:21:36,000 --> 00:21:41,340
and in fact that's an event I will talk

00:21:38,790 --> 00:21:44,880
about that later so it's Drupal and

00:21:41,340 --> 00:21:46,770
Symphony work with Evans so this is the

00:21:44,880 --> 00:21:49,770
first event that is triggered when a

00:21:46,770 --> 00:21:51,870
request comes in there is an event that

00:21:49,770 --> 00:21:54,360
is dispatched and it's called candidate

00:21:51,870 --> 00:21:56,460
request and this does call some

00:21:54,360 --> 00:21:59,130
listeners so as you can see in blue we

00:21:56,460 --> 00:22:00,090
have several listeners that did

00:21:59,130 --> 00:22:02,640
something on the

00:22:00,090 --> 00:22:04,350
request so we have the debug hundreds

00:22:02,640 --> 00:22:05,640
the dump listener the session listener

00:22:04,350 --> 00:22:07,770
the fragment listener the router

00:22:05,640 --> 00:22:10,500
listener as you can see this one did

00:22:07,770 --> 00:22:14,419
most of the job looking at the time it

00:22:10,500 --> 00:22:17,850
took so that's really the listener

00:22:14,419 --> 00:22:21,809
executing the rotor reading the URL and

00:22:17,850 --> 00:22:24,059
figuring out which method and which

00:22:21,809 --> 00:22:28,860
class should be executed for this

00:22:24,059 --> 00:22:32,279
particular route / hello / name then the

00:22:28,860 --> 00:22:35,090
firewall and the local insular the

00:22:32,279 --> 00:22:37,289
listener of the terms later as so

00:22:35,090 --> 00:22:41,460
security also is hooked and the colonel

00:22:37,289 --> 00:22:43,260
does request event and so on so we have

00:22:41,460 --> 00:22:46,140
the kind of controller and you can ok

00:22:43,260 --> 00:22:48,270
understand and get an overview that's

00:22:46,140 --> 00:22:50,850
really helpful not looking at the number

00:22:48,270 --> 00:22:52,409
because performance this is maybe not

00:22:50,850 --> 00:22:57,919
the best tool to deal with performance

00:22:52,409 --> 00:23:01,590
but just to understand things better um

00:22:57,919 --> 00:23:04,289
ok can we do even less work just a back

00:23:01,590 --> 00:23:06,390
to our rods and our control definition

00:23:04,289 --> 00:23:10,250
in symphony because you can use

00:23:06,390 --> 00:23:13,140
annotation to define rods so instead of

00:23:10,250 --> 00:23:17,190
creating this routing the channel file

00:23:13,140 --> 00:23:20,909
in symphony you can put configuration

00:23:17,190 --> 00:23:26,490
and code at the same place using this at

00:23:20,909 --> 00:23:28,500
route annotation and using ok we / the

00:23:26,490 --> 00:23:31,350
bath in fact as first argument of this

00:23:28,500 --> 00:23:33,149
annotation and this is configuration and

00:23:31,350 --> 00:23:35,730
this is really useful because you know

00:23:33,149 --> 00:23:39,299
you have everything in one place and you

00:23:35,730 --> 00:23:41,700
know just by looking at single file that

00:23:39,299 --> 00:23:50,190
the say hello action is mapped on the /

00:23:41,700 --> 00:23:55,909
hello / pathname URL next topic services

00:23:50,190 --> 00:24:00,960
and the container um so service is

00:23:55,909 --> 00:24:03,950
service a Drupal 8 symphony have a

00:24:00,960 --> 00:24:07,070
container and the container holds

00:24:03,950 --> 00:24:11,730
services services are you know useful

00:24:07,070 --> 00:24:13,860
objects that do things so not all

00:24:11,730 --> 00:24:17,520
objects in your application

00:24:13,860 --> 00:24:20,250
are or should be services only some of

00:24:17,520 --> 00:24:22,950
them are services so we are talking

00:24:20,250 --> 00:24:28,740
about playing PHP object so you create

00:24:22,950 --> 00:24:31,290
new instance of my thing so anything it

00:24:28,740 --> 00:24:34,679
could be the URL generator the rotating

00:24:31,290 --> 00:24:38,240
it could be twig it could be so anything

00:24:34,679 --> 00:24:41,130
you have in Drupal is a service and

00:24:38,240 --> 00:24:44,340
services are objects that do things

00:24:41,130 --> 00:24:47,040
which means that they process content

00:24:44,340 --> 00:24:50,120
but they do not change state which means

00:24:47,040 --> 00:24:52,919
that you can call them twice three times

00:24:50,120 --> 00:24:55,650
four times anytime you want and you will

00:24:52,919 --> 00:24:58,500
get the same result at each time which

00:24:55,650 --> 00:25:00,360
is very different from an object that

00:24:58,500 --> 00:25:02,630
can mutate state for some with us from

00:25:00,360 --> 00:25:05,880
painter so I'm the object that paints

00:25:02,630 --> 00:25:09,809
some drawing then you can have a set

00:25:05,880 --> 00:25:11,460
background a method on it and if you use

00:25:09,809 --> 00:25:13,650
that other service it would be mistake

00:25:11,460 --> 00:25:15,059
because you could have some first part a

00:25:13,650 --> 00:25:17,730
new application saying set background

00:25:15,059 --> 00:25:19,350
red and then the other part of the

00:25:17,730 --> 00:25:21,570
application using that but red

00:25:19,350 --> 00:25:23,429
background whether when they may expect

00:25:21,570 --> 00:25:27,590
it to be white at the beginning when

00:25:23,429 --> 00:25:30,360
they start doing the painting so

00:25:27,590 --> 00:25:33,210
services are object that only do things

00:25:30,360 --> 00:25:36,090
and on the other side you have data

00:25:33,210 --> 00:25:40,760
objects and data object is the opposite

00:25:36,090 --> 00:25:43,770
of services data object are you know

00:25:40,760 --> 00:25:46,230
daytime so things that have almost no

00:25:43,770 --> 00:25:49,410
methadone on them but that they just

00:25:46,230 --> 00:25:52,080
hold some value and collection values of

00:25:49,410 --> 00:25:55,380
properties and they get mutate and they

00:25:52,080 --> 00:25:57,360
can I just hold the state and by

00:25:55,380 --> 00:26:01,710
splitting your application in you know

00:25:57,360 --> 00:26:03,780
services on one hand on data object on

00:26:01,710 --> 00:26:06,780
the other one it's a really good design

00:26:03,780 --> 00:26:11,240
pattern and best practice to have clear

00:26:06,780 --> 00:26:15,600
and clean code them splitting them

00:26:11,240 --> 00:26:18,090
that's it so now the container so the

00:26:15,600 --> 00:26:21,559
container is logically some associative

00:26:18,090 --> 00:26:24,870
array that hold that holds the services

00:26:21,559 --> 00:26:26,990
which means that services are object

00:26:24,870 --> 00:26:30,679
actually PHP instances

00:26:26,990 --> 00:26:32,870
and we give them just a nickname so they

00:26:30,679 --> 00:26:34,970
have an identity and the identity is

00:26:32,870 --> 00:26:37,970
this nickname so logger in this case

00:26:34,970 --> 00:26:40,640
it's a string logger is the string the

00:26:37,970 --> 00:26:43,700
nickname of the Logar object so at some

00:26:40,640 --> 00:26:47,720
point add some bootstrapping step in

00:26:43,700 --> 00:26:51,230
Drupal 8 or symphony we created a new

00:26:47,720 --> 00:26:53,750
logo we don't know how but that's not

00:26:51,230 --> 00:26:57,110
our business so there is a logger and

00:26:53,750 --> 00:26:59,210
Drupal knows how to instantiate it and

00:26:57,110 --> 00:27:02,720
this object that it created this new

00:26:59,210 --> 00:27:05,300
logger has been stored in the container

00:27:02,720 --> 00:27:08,450
under the logger you know nickname

00:27:05,300 --> 00:27:10,550
Sookie in the array okay so really now

00:27:08,450 --> 00:27:13,280
this is not an array of course this is

00:27:10,550 --> 00:27:16,910
just logical and technically the

00:27:13,280 --> 00:27:19,610
container is an object so the object has

00:27:16,910 --> 00:27:22,250
a method which is almost the only one

00:27:19,610 --> 00:27:24,770
yet that you should use which is get so

00:27:22,250 --> 00:27:28,520
container get logger which means give me

00:27:24,770 --> 00:27:33,980
little girl please okay and then you get

00:27:28,520 --> 00:27:36,800
the logger ah so in silex there is a

00:27:33,980 --> 00:27:39,830
container which is not the symphony

00:27:36,800 --> 00:27:41,840
dependency injection container but which

00:27:39,830 --> 00:27:45,500
is called pimple which is another

00:27:41,840 --> 00:27:47,690
project then in symphony and in Drupal 8

00:27:45,500 --> 00:27:52,040
there is the dependency injection

00:27:47,690 --> 00:27:56,030
component from Symphony that is used and

00:27:52,040 --> 00:28:00,620
key if you have it at hand you can get

00:27:56,030 --> 00:28:03,730
any service from it so it's yes really

00:28:00,620 --> 00:28:09,170
pre-loaded with many useful features

00:28:03,730 --> 00:28:13,220
really on symphony we have been console

00:28:09,170 --> 00:28:15,590
debug container this shows a map and a

00:28:13,220 --> 00:28:18,500
red table really of all the services

00:28:15,590 --> 00:28:20,420
that are defined in the application in

00:28:18,500 --> 00:28:23,000
Drupal console it's just Drupal

00:28:20,420 --> 00:28:26,630
container debug and we'll get the same

00:28:23,000 --> 00:28:31,250
output or almost the same in symphony we

00:28:26,630 --> 00:28:35,030
have 220 built-in services maybe more it

00:28:31,250 --> 00:28:39,559
changes a lot in Drupal I think you have

00:28:35,030 --> 00:28:42,169
way more so

00:28:39,559 --> 00:28:47,659
if you want to dig and inspect a one

00:28:42,169 --> 00:28:49,929
specific service you can ask I give it a

00:28:47,659 --> 00:28:53,450
name the name of the service you want to

00:28:49,929 --> 00:28:56,570
get more therefore and get the detail so

00:28:53,450 --> 00:28:59,330
in this case we have we're displaying

00:28:56,570 --> 00:29:02,899
the service configuration for the 3g

00:28:59,330 --> 00:29:07,940
service so when service ID its nickname

00:29:02,899 --> 00:29:10,580
is twing the class of the object is a

00:29:07,940 --> 00:29:15,019
twig environment so that's the actual

00:29:10,580 --> 00:29:16,970
PHP class of the twig service the tags

00:29:15,019 --> 00:29:20,090
is something we're going to talk about

00:29:16,970 --> 00:29:22,549
in the next torque in the afternoon is

00:29:20,090 --> 00:29:25,279
it public or not so can you fetch it by

00:29:22,549 --> 00:29:28,059
using yet or not private services can't

00:29:25,279 --> 00:29:30,830
be fetch it from the container a

00:29:28,059 --> 00:29:33,049
synthetic lazy shared abstract or two

00:29:30,830 --> 00:29:35,029
word and things like that we'll see that

00:29:33,049 --> 00:29:40,070
in the dependency injection talk in the

00:29:35,029 --> 00:29:44,149
afternoon um okay now we know that there

00:29:40,070 --> 00:29:47,240
is a container somewhere how do I get it

00:29:44,149 --> 00:29:52,009
in my own code because i want the

00:29:47,240 --> 00:29:55,669
features and in symfony varies property

00:29:52,009 --> 00:29:58,129
on controller and if our polite

00:29:55,669 --> 00:30:00,200
controller extends from some base

00:29:58,129 --> 00:30:02,929
controller that is provided by Symphony

00:30:00,200 --> 00:30:05,029
framework then you get a property

00:30:02,929 --> 00:30:08,090
protected one so from the parent class

00:30:05,029 --> 00:30:11,090
that is called container and that

00:30:08,090 --> 00:30:14,059
contains the container so you can use it

00:30:11,090 --> 00:30:16,700
to you know get twig and this is also

00:30:14,059 --> 00:30:18,860
working example so in this case we are

00:30:16,700 --> 00:30:22,159
making our control better and using twig

00:30:18,860 --> 00:30:25,100
for rendering HTML around our hello

00:30:22,159 --> 00:30:27,710
message so we say container give me the

00:30:25,100 --> 00:30:30,320
twig service and we know by looking at

00:30:27,710 --> 00:30:32,149
the twig template class that there is

00:30:30,320 --> 00:30:34,460
all the documentation really that there

00:30:32,149 --> 00:30:37,549
is a rundal method there and the first

00:30:34,460 --> 00:30:40,190
argument is a twig file so that's the

00:30:37,549 --> 00:30:42,320
template and the second argument is the

00:30:40,190 --> 00:30:44,600
associative array of variables and

00:30:42,320 --> 00:30:47,059
values that should be you know used to

00:30:44,600 --> 00:30:49,340
replace the placeholders in the twig 5

00:30:47,059 --> 00:30:51,649
and then every return the new response

00:30:49,340 --> 00:30:53,110
with HTML we just generated this way

00:30:51,649 --> 00:30:55,179
okay

00:30:53,110 --> 00:30:56,920
but the same kind of things drupal does

00:30:55,179 --> 00:30:58,360
internally when using Twitter to run

00:30:56,920 --> 00:31:02,910
their things and blogs and things like

00:30:58,360 --> 00:31:07,750
that that's the kind of twig file here

00:31:02,910 --> 00:31:11,010
you can use and so my name placeholder

00:31:07,750 --> 00:31:14,470
replaced with the name from the URL

00:31:11,010 --> 00:31:18,130
there is no you know security issues are

00:31:14,470 --> 00:31:19,780
there because twig auto escapes the

00:31:18,130 --> 00:31:22,780
content so whenever there is some you

00:31:19,780 --> 00:31:25,240
know TWiki name with HTML content there

00:31:22,780 --> 00:31:27,250
this won't be displayed as ash the HTML

00:31:25,240 --> 00:31:31,270
it will be just escaped with the proper

00:31:27,250 --> 00:31:35,640
you know cross-site scripting photo

00:31:31,270 --> 00:31:39,130
thing like that not cross sexy excessive

00:31:35,640 --> 00:31:41,110
so back to this and where the request

00:31:39,130 --> 00:31:43,929
relative the controller and now the

00:31:41,110 --> 00:31:48,010
controller is really you a place to

00:31:43,929 --> 00:31:50,440
bootstrap and to wire so which means

00:31:48,010 --> 00:31:52,600
using all the services you need to just

00:31:50,440 --> 00:31:54,460
build this page so you have a controller

00:31:52,600 --> 00:31:57,040
in the controller you have the container

00:31:54,460 --> 00:31:59,559
and the container has all the features

00:31:57,040 --> 00:32:01,150
that Drupal 8 provides that Symphony

00:31:59,559 --> 00:32:03,160
provides so we just saw that we were

00:32:01,150 --> 00:32:05,559
using twig you can use the you're a

00:32:03,160 --> 00:32:09,030
generator you can use the container

00:32:05,559 --> 00:32:12,880
factory in Drupal 8 to fetch you know

00:32:09,030 --> 00:32:14,740
default or user configurate values from

00:32:12,880 --> 00:32:18,760
the admin and this administration page

00:32:14,740 --> 00:32:21,040
and Drupal 8 and use that to just craft

00:32:18,760 --> 00:32:25,120
your HTML and run with the response and

00:32:21,040 --> 00:32:27,610
get back to the browser okay so the

00:32:25,120 --> 00:32:32,049
question is what else does symphony do

00:32:27,610 --> 00:32:34,450
or what else does drupal 8 do the answer

00:32:32,049 --> 00:32:36,820
is not the question should be wet leaks

00:32:34,450 --> 00:32:38,650
in the symphony container what lives in

00:32:36,820 --> 00:32:41,350
the Drupal 8 container because this is

00:32:38,650 --> 00:32:42,669
really where features are the container

00:32:41,350 --> 00:32:46,179
strong you should be something quite

00:32:42,669 --> 00:32:50,919
abstract but yet it has a registry of

00:32:46,179 --> 00:32:54,580
features really so at some examples um

00:32:50,919 --> 00:32:58,120
the doctrine or M we use it a lot in

00:32:54,580 --> 00:32:59,919
symphony so we can get the entity

00:32:58,120 --> 00:33:01,780
manager from the container it's ready

00:32:59,919 --> 00:33:04,630
most of the time so dr. not around the

00:33:01,780 --> 00:33:05,950
20 team manager and this will provide

00:33:04,630 --> 00:33:08,860
you the entity manager

00:33:05,950 --> 00:33:11,590
and you can get a repository for it and

00:33:08,860 --> 00:33:15,100
you know use that repository to fetch

00:33:11,590 --> 00:33:17,470
your entities and persist modify your

00:33:15,100 --> 00:33:21,669
blog post and flush to you know save and

00:33:17,470 --> 00:33:24,700
update the database there you can use it

00:33:21,669 --> 00:33:26,440
also to get the database connection so

00:33:24,700 --> 00:33:29,309
container give me the database

00:33:26,440 --> 00:33:33,730
connection and then we are going to roll

00:33:29,309 --> 00:33:36,070
a sequel requests with the connection in

00:33:33,730 --> 00:33:37,929
Drupal it rather than the same services

00:33:36,070 --> 00:33:39,760
just called database so it's not

00:33:37,929 --> 00:33:41,710
database connection just database and

00:33:39,760 --> 00:33:48,909
there are few differences like that

00:33:41,710 --> 00:33:50,700
nothing another service more complex one

00:33:48,909 --> 00:33:54,460
we won't get into the details there

00:33:50,700 --> 00:33:57,399
there is a powerful yet complex form

00:33:54,460 --> 00:33:59,710
system in symphony so everything starts

00:33:57,399 --> 00:34:02,230
with a form factory service and with

00:33:59,710 --> 00:34:04,600
this from factory I will create you know

00:34:02,230 --> 00:34:09,129
fields email username gender with a

00:34:04,600 --> 00:34:10,810
choice male female and if the form is

00:34:09,129 --> 00:34:13,990
able to handle the request has been

00:34:10,810 --> 00:34:16,480
submitted and the data is valid and then

00:34:13,990 --> 00:34:18,550
we get the data we save it we update our

00:34:16,480 --> 00:34:22,540
entities so and so on and then at the

00:34:18,550 --> 00:34:25,780
end we can render you know the twig

00:34:22,540 --> 00:34:27,790
template which can display the form and

00:34:25,780 --> 00:34:30,970
there are some form helpers so in this

00:34:27,790 --> 00:34:34,270
case from start for the HTML form start

00:34:30,970 --> 00:34:37,629
tag from end and some helpers to render

00:34:34,270 --> 00:34:40,210
the input tags and then let their labels

00:34:37,629 --> 00:34:44,829
and all the difference and fancy things

00:34:40,210 --> 00:34:46,690
to generate forms easy um you can also

00:34:44,829 --> 00:34:49,060
of course do everything yourself so you

00:34:46,690 --> 00:34:50,859
have a request at hand and you can get

00:34:49,060 --> 00:34:53,500
the email from the request give the user

00:34:50,859 --> 00:35:00,369
name for Lucas general and do anything

00:34:53,500 --> 00:35:02,319
you want with that yeah so with

00:35:00,369 --> 00:35:05,950
community bundles and with community

00:35:02,319 --> 00:35:09,579
modules Andrew polite so basically a

00:35:05,950 --> 00:35:12,910
model in Drupal 8 a bundle in Symphony

00:35:09,579 --> 00:35:16,480
is just a way to you know define new

00:35:12,910 --> 00:35:19,240
services as so models provide services

00:35:16,480 --> 00:35:22,360
and also create a few controllers

00:35:19,240 --> 00:35:24,700
Rhodes that's basically what model is

00:35:22,360 --> 00:35:28,990
what a bundle is you know services

00:35:24,700 --> 00:35:33,480
features and wrote which means pages a

00:35:28,990 --> 00:35:37,570
few pages to you know you weeks you I to

00:35:33,480 --> 00:35:39,460
buy the module so how do you create now

00:35:37,570 --> 00:35:43,380
your own services because that's what

00:35:39,460 --> 00:35:48,220
models do and that's what you also

00:35:43,380 --> 00:35:52,600
should may have to do at some point so

00:35:48,220 --> 00:35:55,180
let's do this exercise so let's say we

00:35:52,600 --> 00:35:57,940
want to create some random greeting

00:35:55,180 --> 00:36:01,060
feature so this one should be able to

00:35:57,940 --> 00:36:04,990
say hello or hey you or holla or cattle

00:36:01,060 --> 00:36:08,980
or anything else you want so that that's

00:36:04,990 --> 00:36:10,720
the specification so where should we put

00:36:08,980 --> 00:36:14,170
this logic you know selecting a random

00:36:10,720 --> 00:36:17,140
greeting sentence put it in the

00:36:14,170 --> 00:36:20,410
controller or put it you know in some

00:36:17,140 --> 00:36:23,760
business logic class and so it can be

00:36:20,410 --> 00:36:28,960
reused or flat function but maybe not

00:36:23,760 --> 00:36:30,880
let's do it in the decoupled way so

00:36:28,960 --> 00:36:33,280
let's create a class whose

00:36:30,880 --> 00:36:37,630
responsibility should be just to you

00:36:33,280 --> 00:36:40,570
know randomly grid some name so here is

00:36:37,630 --> 00:36:43,000
the class so we have a list of greetings

00:36:40,570 --> 00:36:46,000
that it knows about and then we have a

00:36:43,000 --> 00:36:52,810
function there and which returns the

00:36:46,000 --> 00:36:57,880
string which is halle John or hello John

00:36:52,810 --> 00:36:59,950
or get Blair high knew it was John so

00:36:57,880 --> 00:37:03,160
any greeting really so and then the

00:36:59,950 --> 00:37:06,070
content is easy everyone to get a random

00:37:03,160 --> 00:37:09,700
value there and you know concatenate the

00:37:06,070 --> 00:37:13,660
name with the sentence business logic

00:37:09,700 --> 00:37:17,650
really the way to use that in your

00:37:13,660 --> 00:37:19,660
controller could be this one so in the

00:37:17,650 --> 00:37:22,950
controller you instantiate a new greater

00:37:19,660 --> 00:37:26,080
and you get a random greeting from it

00:37:22,950 --> 00:37:29,980
you use twig or the templating service

00:37:26,080 --> 00:37:32,730
which is the same in true generate the

00:37:29,980 --> 00:37:34,500
HTML as so

00:37:32,730 --> 00:37:38,970
that's it and you get the greeting and

00:37:34,500 --> 00:37:43,320
you display to page next step now let's

00:37:38,970 --> 00:37:46,050
say we'd like to log which greeting was

00:37:43,320 --> 00:37:48,000
chosen so we displayed it and we want to

00:37:46,050 --> 00:37:50,850
be log file with all the greetings that

00:37:48,000 --> 00:37:53,760
were generated over time how do you do

00:37:50,850 --> 00:37:56,370
that we have a logger at hand in Drupal

00:37:53,760 --> 00:37:58,740
it's called logo dot factory and on the

00:37:56,370 --> 00:38:01,710
factory you have a get method where you

00:37:58,740 --> 00:38:03,500
specify and it's your job to tell I want

00:38:01,710 --> 00:38:08,250
to log to the database and there is

00:38:03,500 --> 00:38:10,800
logger get database way to get a real

00:38:08,250 --> 00:38:13,290
logger something which on which you can

00:38:10,800 --> 00:38:15,570
call the info or the log method to you

00:38:13,290 --> 00:38:17,490
know put messages in the database in

00:38:15,570 --> 00:38:19,590
this case so in symfony we just have a

00:38:17,490 --> 00:38:23,790
logo and the logger is configured

00:38:19,590 --> 00:38:26,250
somewhere else and the logo provides you

00:38:23,790 --> 00:38:30,030
know a psl log loader interface which is

00:38:26,250 --> 00:38:32,310
a stone that way to log messages in PHP

00:38:30,030 --> 00:38:38,490
and not only Drupal not only symphony

00:38:32,310 --> 00:38:41,940
really and let's use it so we asked to

00:38:38,490 --> 00:38:44,610
the container give me the logger and log

00:38:41,940 --> 00:38:48,900
this info message and we create the

00:38:44,610 --> 00:38:53,460
greeting quitting ok so we just use the

00:38:48,900 --> 00:38:54,870
container in Drupal in Symphony to you

00:38:53,460 --> 00:38:59,280
know get the service and get the feature

00:38:54,870 --> 00:39:01,080
and load things in Drupal 8 you don't

00:38:59,280 --> 00:39:04,740
have a property like that so in roopa

00:39:01,080 --> 00:39:07,380
leg if you want the container you have

00:39:04,740 --> 00:39:09,000
several ways one and the most low level

00:39:07,380 --> 00:39:11,880
if you can if you can see that is to

00:39:09,000 --> 00:39:14,430
implement its container injection

00:39:11,880 --> 00:39:16,560
interface so it's a special Corps

00:39:14,430 --> 00:39:19,080
interface so you implement this

00:39:16,560 --> 00:39:22,350
interface and implementing it it means

00:39:19,080 --> 00:39:25,590
creating a public static function that

00:39:22,350 --> 00:39:27,330
is called create and then this one will

00:39:25,590 --> 00:39:30,870
be called with the container so the

00:39:27,330 --> 00:39:33,150
actual object and in soy to factory and

00:39:30,870 --> 00:39:35,130
you can return a new instance of our

00:39:33,150 --> 00:39:38,790
control out there with everything

00:39:35,130 --> 00:39:43,880
injected in the constructor I don't have

00:39:38,790 --> 00:39:43,880
an example I can show you later if you

00:39:45,150 --> 00:39:52,210
okay so now our controller is doing

00:39:49,080 --> 00:39:54,369
logging but what if we'd like to have

00:39:52,210 --> 00:39:56,589
the random greeter itself log maybe it's

00:39:54,369 --> 00:39:59,020
not the beach the control business to

00:39:56,589 --> 00:40:02,710
you know log things maybe we'd like the

00:39:59,020 --> 00:40:05,290
random greater to log what it did so how

00:40:02,710 --> 00:40:07,359
do you do that so just copy passing the

00:40:05,290 --> 00:40:09,780
line we used in the controller this is

00:40:07,359 --> 00:40:13,390
taking the disk container gate line and

00:40:09,780 --> 00:40:16,330
creating you know this info message of

00:40:13,390 --> 00:40:18,790
course this won't work because there's

00:40:16,330 --> 00:40:20,589
no container this is a plain PHP class

00:40:18,790 --> 00:40:23,410
there is no context there is no parent

00:40:20,589 --> 00:40:25,540
there is no container property so of

00:40:23,410 --> 00:40:33,270
course it won't work so the way to do

00:40:25,540 --> 00:40:33,270
that is to use dependency injection so

00:40:33,450 --> 00:40:40,200
we add a constructor on our random

00:40:36,700 --> 00:40:44,080
Twitter and in the constructor we

00:40:40,200 --> 00:40:47,470
require a logger argument and we store

00:40:44,080 --> 00:40:50,230
that logger into the property okay and

00:40:47,470 --> 00:40:52,570
that's it now we know and it's not our

00:40:50,230 --> 00:40:54,849
job there in this class to know how to

00:40:52,570 --> 00:40:57,010
instantiate this but we know that by

00:40:54,849 --> 00:41:01,119
contract by definition of this class we

00:40:57,010 --> 00:41:03,130
need a logger so then okay if you want

00:41:01,119 --> 00:41:05,980
to be a bit more strict you can add the

00:41:03,130 --> 00:41:10,450
interface on the construct method so

00:41:05,980 --> 00:41:12,609
that you are sure that someone no one

00:41:10,450 --> 00:41:14,740
will provide you with an array or with

00:41:12,609 --> 00:41:16,450
some you know request-response any

00:41:14,740 --> 00:41:18,880
object that is not a logger so in this

00:41:16,450 --> 00:41:21,010
case now we are sure that we have a

00:41:18,880 --> 00:41:28,180
logger real one that we know how to use

00:41:21,010 --> 00:41:30,250
and in back in our controller we can

00:41:28,180 --> 00:41:33,520
know not back in in the random region we

00:41:30,250 --> 00:41:35,140
can just use this logo and info because

00:41:33,520 --> 00:41:38,500
we have the logger and now we have a

00:41:35,140 --> 00:41:42,339
property and then in the controller now

00:41:38,500 --> 00:41:45,670
we can just instantiate our Twitter and

00:41:42,339 --> 00:41:48,790
providing the you know symphony logo as

00:41:45,670 --> 00:41:52,930
a constructor and everything is you know

00:41:48,790 --> 00:41:54,550
wired now and it will basically okay so

00:41:52,930 --> 00:41:57,730
this is dependency injection we just

00:41:54,550 --> 00:42:02,800
injected the logo dependency in

00:41:57,730 --> 00:42:06,430
to the random greeter now you can also

00:42:02,800 --> 00:42:08,380
tell symphony and Drupal 8 add to do

00:42:06,430 --> 00:42:11,770
this job you know creating the services

00:42:08,380 --> 00:42:15,850
injecting a logger there by providing it

00:42:11,770 --> 00:42:18,910
with recipes so this is a recipe for

00:42:15,850 --> 00:42:22,150
instance eating let's say my random

00:42:18,910 --> 00:42:24,700
greeter service so this is in service

00:42:22,150 --> 00:42:28,660
EML find up config and in Drupal 8

00:42:24,700 --> 00:42:31,510
you'll find it in the you know my module

00:42:28,660 --> 00:42:34,660
dot service domick file which you know

00:42:31,510 --> 00:42:38,290
is there's just the Drupal way to Drupal

00:42:34,660 --> 00:42:41,080
place to put this configuration so this

00:42:38,290 --> 00:42:43,630
configuration creates a new service my

00:42:41,080 --> 00:42:48,790
random Twitter and it says to the

00:42:43,630 --> 00:42:50,800
container builder that this is this

00:42:48,790 --> 00:42:53,470
object this service is an instance of

00:42:50,800 --> 00:42:55,060
the apt bundle it with grid random

00:42:53,470 --> 00:42:57,670
greeter class so that the fully

00:42:55,060 --> 00:42:59,710
qualified class name of our rent on

00:42:57,670 --> 00:43:03,100
Twitter and it takes one argument which

00:42:59,710 --> 00:43:05,380
is with an at symbol which is the logger

00:43:03,100 --> 00:43:08,260
service that the containers the

00:43:05,380 --> 00:43:10,420
container knows about already because of

00:43:08,260 --> 00:43:13,600
previous definition that we loaded and

00:43:10,420 --> 00:43:15,670
Drupal symphony added there so that's

00:43:13,600 --> 00:43:19,390
enough for the continued to create and

00:43:15,670 --> 00:43:22,480
to generate the code to create do by

00:43:19,390 --> 00:43:26,740
itself the new random Twitter and give

00:43:22,480 --> 00:43:29,020
it the logger as argument so if we use

00:43:26,740 --> 00:43:31,600
the console der we can see that it

00:43:29,020 --> 00:43:34,450
worked and it gives us reflection in

00:43:31,600 --> 00:43:36,400
debug information so our service ID

00:43:34,450 --> 00:43:37,990
class tags scope container that's

00:43:36,400 --> 00:43:42,190
something that doesn't exist anymore

00:43:37,990 --> 00:43:45,310
anyway and this is the way to use it so

00:43:42,190 --> 00:43:48,010
increments the old way and now the new

00:43:45,310 --> 00:43:50,619
way is to call this container get my

00:43:48,010 --> 00:43:53,650
grundle return which basically does

00:43:50,619 --> 00:43:56,200
exactly what the commented lines do but

00:43:53,650 --> 00:43:58,450
now it's the containers job to instance

00:43:56,200 --> 00:44:00,490
yet and do the wiring and then we have

00:43:58,450 --> 00:44:03,550
our greater and we can use it as a

00:44:00,490 --> 00:44:09,760
feature in your service to randomly grid

00:44:03,550 --> 00:44:11,559
someone okay in the talk in the

00:44:09,760 --> 00:44:16,449
afternoon I'll

00:44:11,559 --> 00:44:20,049
show you many ways to you know configure

00:44:16,449 --> 00:44:22,449
in sensation so the previous slide this

00:44:20,049 --> 00:44:27,099
one is just a simple one and there are

00:44:22,449 --> 00:44:30,279
so many ways to add definition recipes

00:44:27,099 --> 00:44:35,229
for instance eating things so you can

00:44:30,279 --> 00:44:38,949
learn more grafton about that okay now

00:44:35,229 --> 00:44:42,009
under the topic Evans and so Evans is

00:44:38,949 --> 00:44:44,469
really as you saw it's the first thing

00:44:42,009 --> 00:44:47,259
that happens in the symphony in Drupal

00:44:44,469 --> 00:44:51,009
life cycle so Carol don't request there

00:44:47,259 --> 00:44:54,119
are more Evans it's the hook system

00:44:51,009 --> 00:45:01,630
really in Drupal 8 so we have Evans

00:44:54,119 --> 00:45:04,059
hooks in the same so Evans provide you a

00:45:01,630 --> 00:45:07,630
way to say hey when this event happen so

00:45:04,059 --> 00:45:12,299
candidates request you execute this

00:45:07,630 --> 00:45:15,430
function whatever it is so let's do one

00:45:12,299 --> 00:45:16,630
some Evans when the request comes so we

00:45:15,430 --> 00:45:19,719
thought that there is a kernel dash

00:45:16,630 --> 00:45:21,400
request event then on the colonel docks

00:45:19,719 --> 00:45:23,380
requests we saw that there is a listener

00:45:21,400 --> 00:45:27,939
there the Rohtang listener so this one

00:45:23,380 --> 00:45:29,589
is doing routing then and where the

00:45:27,939 --> 00:45:31,890
colonel dot controller event which is

00:45:29,589 --> 00:45:35,259
triggered to resolve the controller and

00:45:31,890 --> 00:45:38,289
then the control it triggered which uses

00:45:35,259 --> 00:45:41,380
containers the container services when

00:45:38,289 --> 00:45:42,969
the controller is done there is the

00:45:41,380 --> 00:45:46,479
kernel that view even that is triggered

00:45:42,969 --> 00:45:49,599
we just will next let's slicer about the

00:45:46,479 --> 00:45:52,239
control of view when the response is

00:45:49,599 --> 00:45:56,890
ready we trigger the caramel that

00:45:52,239 --> 00:45:59,019
restaurants event and that's it for a

00:45:56,890 --> 00:46:02,229
minute down more but that the main even

00:45:59,019 --> 00:46:06,640
so you have the possibility to hook on

00:46:02,229 --> 00:46:08,259
each of them and do things at the

00:46:06,640 --> 00:46:12,400
beginning of the request at the end of

00:46:08,259 --> 00:46:15,609
the request at any time you need to so

00:46:12,400 --> 00:46:19,900
for example what if the controller

00:46:15,609 --> 00:46:24,459
didn't return the response let's right

00:46:19,900 --> 00:46:25,329
so um let's return an array so let's say

00:46:24,459 --> 00:46:30,759
this eraser

00:46:25,329 --> 00:46:34,150
template and variables so what will

00:46:30,759 --> 00:46:36,279
happen there up you will get the okay

00:46:34,150 --> 00:46:38,709
this is the actual error message you can

00:46:36,279 --> 00:46:45,150
see so the controller must return the

00:46:38,709 --> 00:46:48,039
response ah or it face you blew it and

00:46:45,150 --> 00:46:49,959
actually you can do things with a

00:46:48,039 --> 00:46:52,029
written value of the controller and you

00:46:49,959 --> 00:46:55,930
can hook on the kernel that view event

00:46:52,029 --> 00:46:57,940
and you can have a listener that can you

00:46:55,930 --> 00:46:59,920
know listen for the return value of the

00:46:57,940 --> 00:47:04,180
controller and say okay I know how to

00:46:59,920 --> 00:47:08,170
deal with that array and I know how to

00:47:04,180 --> 00:47:10,119
be the response from it so at the bottom

00:47:08,170 --> 00:47:12,609
of the screen we have this public static

00:47:10,119 --> 00:47:15,609
function get subscribe it Evans and this

00:47:12,609 --> 00:47:17,079
is what is required by the interface on

00:47:15,609 --> 00:47:21,459
the top so they even subscriber

00:47:17,079 --> 00:47:23,589
interface so this is the first step to

00:47:21,459 --> 00:47:25,749
wire an event listener ever even

00:47:23,589 --> 00:47:28,420
subscriber in Drupal 8 and in symphony

00:47:25,749 --> 00:47:30,940
so returning an array which maps you

00:47:28,420 --> 00:47:33,219
know calendars view and method there

00:47:30,940 --> 00:47:35,890
which means just basically when the

00:47:33,219 --> 00:47:38,259
candidate view event is fired please

00:47:35,890 --> 00:47:42,999
call the on view method on this very

00:47:38,259 --> 00:47:45,130
class ok so now ok we are the only 11

00:47:42,999 --> 00:47:47,739
that is not yet wired because we have

00:47:45,130 --> 00:47:49,660
some definition to tell Drupal 8 and

00:47:47,739 --> 00:47:53,680
symphony that this should be registered

00:47:49,660 --> 00:47:55,749
in the container but let's continue so

00:47:53,680 --> 00:47:58,239
how do we reduce do that let's create a

00:47:55,749 --> 00:48:02,199
listener give it a name render a review

00:47:58,239 --> 00:48:09,400
listener it's a class of just the class

00:48:02,199 --> 00:48:12,309
who created and it takes a twig the twig

00:48:09,400 --> 00:48:14,529
service as argument why that because we

00:48:12,309 --> 00:48:16,959
know that our array is going to be

00:48:14,529 --> 00:48:18,819
rendered by three so we need twig there

00:48:16,959 --> 00:48:22,119
to turn the array into an actual

00:48:18,819 --> 00:48:25,509
response using trig and what's missing

00:48:22,119 --> 00:48:28,359
there is this configuration so by adding

00:48:25,509 --> 00:48:30,670
a tag in this case the event subscriber

00:48:28,359 --> 00:48:33,849
tag you just basically telling the

00:48:30,670 --> 00:48:36,369
container this is an event subscriber

00:48:33,849 --> 00:48:38,410
and you should give it to the event

00:48:36,369 --> 00:48:38,890
dispatcher service which is something

00:48:38,410 --> 00:48:40,420
that

00:48:38,890 --> 00:48:45,039
they exist in group relate and in

00:48:40,420 --> 00:48:47,170
symphony and the container at

00:48:45,039 --> 00:48:50,650
bootstrapping stage which cell will tell

00:48:47,170 --> 00:48:54,549
okay please give me all the definition

00:48:50,650 --> 00:48:56,170
that have this tag and wire them in the

00:48:54,549 --> 00:48:59,529
event dispatcher so that the event

00:48:56,170 --> 00:49:01,569
dispatcher knows about them and can fire

00:48:59,529 --> 00:49:06,160
the listeners and the subscribe there

00:49:01,569 --> 00:49:08,890
okay so doing so you can create the on

00:49:06,160 --> 00:49:11,019
view method so we won't get into the

00:49:08,890 --> 00:49:14,349
intense basically this is checking that

00:49:11,019 --> 00:49:18,910
this is the result from the controller

00:49:14,349 --> 00:49:21,430
is the array we are needing there and if

00:49:18,910 --> 00:49:25,029
yes we get the damn play the variables

00:49:21,430 --> 00:49:27,519
we recreate render on the twig service

00:49:25,029 --> 00:49:30,010
and will return the response they are so

00:49:27,519 --> 00:49:33,789
basically we just you know turned the

00:49:30,010 --> 00:49:41,109
array into an HTML response doing it our

00:49:33,789 --> 00:49:42,849
way okay let's build something building

00:49:41,109 --> 00:49:44,799
something is okay nice when you have

00:49:42,849 --> 00:49:47,470
already a skeleton something that you

00:49:44,799 --> 00:49:49,319
can look at and that's what Symphony

00:49:47,470 --> 00:49:53,049
provides so we have a symphony demo

00:49:49,319 --> 00:49:55,089
application so you can create a demo

00:49:53,049 --> 00:49:57,670
application using just symphony demo if

00:49:55,089 --> 00:50:00,279
you are going store at hand so this will

00:49:57,670 --> 00:50:04,450
download the code and create this kind

00:50:00,279 --> 00:50:06,009
of directory structure so a bundle you

00:50:04,450 --> 00:50:08,349
know with common controllers that I

00:50:06,009 --> 00:50:10,720
fixture because there is some model

00:50:08,349 --> 00:50:13,029
there it's a blog application entities

00:50:10,720 --> 00:50:15,609
for blog post comments event listener we

00:50:13,029 --> 00:50:20,140
just talked about them forms repository

00:50:15,609 --> 00:50:23,950
for you know set of datas twig and some

00:50:20,140 --> 00:50:27,069
interesting so it shows lot many

00:50:23,950 --> 00:50:30,069
features of basic symphony application

00:50:27,069 --> 00:50:35,099
but not that basic at all really and

00:50:30,069 --> 00:50:38,140
this is a kind of view you will get so

00:50:35,099 --> 00:50:40,329
this is the login page for the back end

00:50:38,140 --> 00:50:44,740
and there is a show source code so you

00:50:40,329 --> 00:50:50,289
can keep reading the code in the demo

00:50:44,740 --> 00:50:53,140
application I'm almost done so a few

00:50:50,289 --> 00:50:56,950
tricks arm and this may be the most

00:50:53,140 --> 00:51:00,630
important one use phpstorm I'm not

00:50:56,950 --> 00:51:03,819
phpstorm restaura yet it's really great

00:51:00,630 --> 00:51:06,640
it provides if you enable the simple

00:51:03,819 --> 00:51:09,190
plug-in it will provide you with you

00:51:06,640 --> 00:51:12,099
know auto completion auto-discovery for

00:51:09,190 --> 00:51:14,920
so many things it knows how services are

00:51:12,099 --> 00:51:18,400
defined so it's able to you know if you

00:51:14,920 --> 00:51:20,589
do container get and it will provide you

00:51:18,400 --> 00:51:23,529
and auto completion for the list of

00:51:20,589 --> 00:51:26,109
existing services and if you select twig

00:51:23,529 --> 00:51:28,029
it knows by looking at the you know all

00:51:26,109 --> 00:51:30,640
the configuration there that this twig

00:51:28,029 --> 00:51:33,250
service has a render method so it's so

00:51:30,640 --> 00:51:35,700
helpful you don't have to you know

00:51:33,250 --> 00:51:40,630
brother code to figure out how it's

00:51:35,700 --> 00:51:43,900
coded there there is this URL which

00:51:40,630 --> 00:51:47,950
provides a few introduction you know

00:51:43,900 --> 00:51:54,069
tutorial had to have more details on how

00:51:47,950 --> 00:51:57,039
to use that ok so summary use select sub

00:51:54,069 --> 00:52:00,910
two servers youths Alex how to do simple

00:51:57,039 --> 00:52:04,390
applications really silly easy use

00:52:00,910 --> 00:52:07,690
Drupal 8 use silex and Drupal 8 and

00:52:04,390 --> 00:52:13,750
symphony altogether you come and what

00:52:07,690 --> 00:52:17,799
did we saw at least talk so what was all

00:52:13,750 --> 00:52:20,079
that belt so terms to repeat in your

00:52:17,799 --> 00:52:22,809
head root controller responds that's the

00:52:20,079 --> 00:52:24,460
life cycle we have services and services

00:52:22,809 --> 00:52:27,069
are provided by the container and we

00:52:24,460 --> 00:52:30,099
have evan's and listeners listening for

00:52:27,069 --> 00:52:34,240
them that's really the core of you know

00:52:30,099 --> 00:52:37,000
Drupal 8 and simply what symphony and

00:52:34,240 --> 00:52:39,339
Drupal HR they share the request and the

00:52:37,000 --> 00:52:41,019
response objects which mean also the

00:52:39,339 --> 00:52:43,509
definition of the class that's exactly

00:52:41,019 --> 00:52:46,480
the same code for roots controller

00:52:43,509 --> 00:52:48,910
responds same again so same route or

00:52:46,480 --> 00:52:50,950
same response and the control system is

00:52:48,910 --> 00:52:53,430
the same event listener system is the

00:52:50,950 --> 00:52:57,599
same so this is the event dispatcher

00:52:53,430 --> 00:53:00,309
from Symphony the dependency injection

00:52:57,599 --> 00:53:02,740
component is used for container and so

00:53:00,309 --> 00:53:06,549
the definition of services is the same

00:53:02,740 --> 00:53:06,970
really the list of services so you can

00:53:06,549 --> 00:53:08,920
have

00:53:06,970 --> 00:53:11,650
the console and called debug container

00:53:08,920 --> 00:53:14,980
or container debug and Drupal same thing

00:53:11,650 --> 00:53:18,790
for roots so ruto debug and the web

00:53:14,980 --> 00:53:21,910
developer toolbar is also Drupal 18 if

00:53:18,790 --> 00:53:23,350
you enable the devil and the web profile

00:53:21,910 --> 00:53:25,810
of models which you should if you're

00:53:23,350 --> 00:53:29,200
developing and doing things like we just

00:53:25,810 --> 00:53:32,320
try to do okay you can use silex to do

00:53:29,200 --> 00:53:34,240
on Drupal you can use salix to use a

00:53:32,320 --> 00:53:37,440
tool on symphony you can use symphony to

00:53:34,240 --> 00:53:41,800
learn drupal you can use okay node and

00:53:37,440 --> 00:53:54,700
finally we have modules two subproblems

00:53:41,800 --> 00:53:56,710
that's a point thank you don't know if

00:53:54,700 --> 00:54:08,410
we have time for question I almost know

00:53:56,710 --> 00:54:10,240
if you have depression yeah and no they

00:54:08,410 --> 00:54:12,730
don't need to in fact the container is

00:54:10,240 --> 00:54:17,470
able to you know instance here the

00:54:12,730 --> 00:54:26,890
container when you need it yes it's lazy

00:54:17,470 --> 00:54:28,600
loading yeah just use this subset and

00:54:26,890 --> 00:54:30,730
the container will instantiate this

00:54:28,600 --> 00:54:33,210
subset only that's it that's lazy

00:54:30,730 --> 00:54:33,210
loading yet

00:54:38,960 --> 00:54:41,800

YouTube URL: https://www.youtube.com/watch?v=mUToEr6CBJY


