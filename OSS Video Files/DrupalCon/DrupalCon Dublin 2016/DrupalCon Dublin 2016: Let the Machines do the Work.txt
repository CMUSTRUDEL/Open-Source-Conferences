Title: DrupalCon Dublin 2016: Let the Machines do the Work
Publication date: 2016-09-27
Playlist: DrupalCon Dublin 2016
Description: 
	When developing a Drupal site there is so many things that developers have to remember. Developers like all humans are error prone. Computers don't make mistakes, they don't get bored, they do what they're told. Instead of relying on error prone developers, workflows should rely on automation.

Today there is a lot of hype about how startups X and Y do DevOps. These "celebrity" implementations can be intimidating for developers struggling with manual deployments and poor workflows. Many of these examples can be difficult to map to how Drupal works.

Most sites today are built using iterative development and incremental change. Development workflows should evolve the same way. Generally turning everything on its head doesn't end well. During this session Dave will present how incremental improvements to a Drupal development workflow can help prevent errors.

Dave will identify processes that can be automated along with suggestions and examples on how to make it happen. This session will provide a good mix of theory and practical examples for users wanting to improve their delivery pipeline. The examples will include:

git pre commit hooks for ensuring coding standards compliance
using a chat bot to provide developers sanitised production databases
flagging deployments in other systems
automated testing against a cloned version of production on each commit
automatic deployment after merging a pull request
Automation helps reduce errors while freeing up developer time. Your team can use this extra time to think.

Audience Level

This session is for developers and sys admins who don't mind getting there hands dirty on the command line. There will be some bash and possibly PHP and Python used in the session. The code will be annotated and available on github so most developers should be able to copy, paste, hack and deploy.

About Dave Hall

Dave is the Managing Director of Dave Hall Consulting. When he isn't working with clients to build high quality web applications, he is helping them improve their infrastructure and business processes. In the last 6 years Dave has been responsible for building, launching and maintaining over 2500 production Drupal sites and maintaining sites for clients including Pfizer, Insurance Australia Group, Al Jazeera and CNN. Dave's focus is Drupal deployments and automation.
Captions: 
	00:00:00,890 --> 00:00:10,170
so yeah I I know how annoying it is for

00:00:08,760 --> 00:00:15,210
the audience to rock up for a session

00:00:10,170 --> 00:00:16,650
and you know where what seven minutes in

00:00:15,210 --> 00:00:22,250
and i'm still stuffing around with the

00:00:16,650 --> 00:00:22,250
AV but it looked like it was working out

00:00:27,650 --> 00:00:31,590
no I thought it was the only people on

00:00:29,789 --> 00:00:49,559
linux desktops presenting you had issues

00:00:31,590 --> 00:00:51,120
with AV yeah yeah so yeah I could just

00:00:49,559 --> 00:00:53,550
jump to the end to the right my session

00:00:51,120 --> 00:01:00,660
and you can all just write the session

00:00:53,550 --> 00:01:02,609
and we can be done with it well even

00:01:00,660 --> 00:01:05,880
though this is truncated you can see the

00:01:02,609 --> 00:01:08,130
key piece of this slide so I can I can

00:01:05,880 --> 00:01:12,270
do this bit of the presentation while we

00:01:08,130 --> 00:01:13,890
wait so I am Dave hole I'm a drupal

00:01:12,270 --> 00:01:20,130
developer who's been stuffing around

00:01:13,890 --> 00:01:26,610
with Drupal since the days of 4.6 I also

00:01:20,130 --> 00:01:30,150
do a fair bit of sysadmin work and so

00:01:26,610 --> 00:01:32,579
and I've been trying to automate myself

00:01:30,150 --> 00:01:36,000
out of a job for about a decade but I

00:01:32,579 --> 00:01:38,820
haven't been successful at that I i

00:01:36,000 --> 00:01:40,729
could go on more about myself but you

00:01:38,820 --> 00:01:43,680
know you're here to learn about

00:01:40,729 --> 00:01:46,770
automation rather than about me and if

00:01:43,680 --> 00:01:49,860
the AV was working i would start to show

00:01:46,770 --> 00:01:52,259
you that but i've also got a couple of

00:01:49,860 --> 00:01:54,840
legal disclaimers and I know how much

00:01:52,259 --> 00:01:57,180
people love presentations where the

00:01:54,840 --> 00:01:59,399
presenter just reads off the slides so

00:01:57,180 --> 00:02:01,380
so that's what I've got to do for the

00:01:59,399 --> 00:02:03,990
next couple of slides so this

00:02:01,380 --> 00:02:06,149
presentation allegedly contains material

00:02:03,990 --> 00:02:09,390
which the jim henson company disney

00:02:06,149 --> 00:02:13,770
disney anyone here from disney oh good

00:02:09,390 --> 00:02:15,570
um Sesame Workshop and others

00:02:13,770 --> 00:02:18,930
may be able to claim copyright over

00:02:15,570 --> 00:02:21,390
these small pieces of alleged allegedly

00:02:18,930 --> 00:02:23,670
copied material are used in this

00:02:21,390 --> 00:02:25,650
non-commercial educational presentation

00:02:23,670 --> 00:02:28,350
for the purpose of review and or comic

00:02:25,650 --> 00:02:30,090
relief this is protected by fair use

00:02:28,350 --> 00:02:32,610
and/or fair dealing provisions under

00:02:30,090 --> 00:02:36,900
Irish European and/or us copyright law

00:02:32,610 --> 00:02:38,360
before issuing a dmca takedown notice or

00:02:36,900 --> 00:02:41,240
other claim of copyright infringement

00:02:38,360 --> 00:02:44,550
please search for the Streisand effect

00:02:41,240 --> 00:02:47,040
and now this is the one that my clients

00:02:44,550 --> 00:02:49,170
need me to keep in here the material

00:02:47,040 --> 00:02:51,060
used in this presentation may or may not

00:02:49,170 --> 00:02:53,970
include software services and/or

00:02:51,060 --> 00:02:55,980
methodologies used by my clients even if

00:02:53,970 --> 00:02:58,200
my clients are using such things at this

00:02:55,980 --> 00:03:01,050
very second they may not continue to do

00:02:58,200 --> 00:03:02,910
so into the future my and/or their use

00:03:01,050 --> 00:03:05,340
of anything shown in this presentation

00:03:02,910 --> 00:03:08,070
should not be considered an endorsement

00:03:05,340 --> 00:03:11,160
my clients family and dog disown my

00:03:08,070 --> 00:03:13,230
views opinions or words expressed by me

00:03:11,160 --> 00:03:16,200
or any other participant in this

00:03:13,230 --> 00:03:17,850
presentation if you attempt to implement

00:03:16,200 --> 00:03:20,820
anything shown during this presentation

00:03:17,850 --> 00:03:26,700
you're on your own don't try to see me

00:03:20,820 --> 00:03:30,630
I'm a man of straw um so today I'm going

00:03:26,700 --> 00:03:34,260
to be talking about F ups is it it's

00:03:30,630 --> 00:03:36,480
just great new thing that I'm it as

00:03:34,260 --> 00:03:39,030
sweeping the world it's like a new

00:03:36,480 --> 00:03:41,550
iteration on DevOps like it's way more

00:03:39,030 --> 00:03:48,420
efficient if you're doing DevOps you're

00:03:41,550 --> 00:03:50,490
so 2015 so that there's a few things

00:03:48,420 --> 00:03:53,610
that I need to talk about because this

00:03:50,490 --> 00:03:56,040
is a DevOps presentation no that's not

00:03:53,610 --> 00:03:58,590
dick olson he's not here this week

00:03:56,040 --> 00:04:00,959
that's chef and puppet so we got that

00:03:58,590 --> 00:04:03,360
one out the way we've got google like

00:04:00,959 --> 00:04:05,280
google has say one big repo they have

00:04:03,360 --> 00:04:09,980
all this automation in place it's

00:04:05,280 --> 00:04:12,720
fantastic etsy have their CODIS craft

00:04:09,980 --> 00:04:15,630
you know they have some really good

00:04:12,720 --> 00:04:18,320
stuff Netflix they've got the chaos

00:04:15,630 --> 00:04:22,290
monkey they can just you know shut down

00:04:18,320 --> 00:04:27,360
bits of their infrastructure and see if

00:04:22,290 --> 00:04:28,919
stuff keeps on running Facebook does all

00:04:27,360 --> 00:04:31,379
it's a crazy stuff they even wrote their

00:04:28,919 --> 00:04:34,319
own pet well they've written multiple

00:04:31,379 --> 00:04:36,500
PHP compilers maybe it'll be a case the

00:04:34,319 --> 00:04:38,969
third time lucky with for them though

00:04:36,500 --> 00:04:43,370
Airbnb another startup they must be

00:04:38,969 --> 00:04:47,310
doing some great dev up stuff and github

00:04:43,370 --> 00:04:50,090
yet hub does a whole bunch of DevOps

00:04:47,310 --> 00:04:53,930
stuff and they support a whole bunch of

00:04:50,090 --> 00:04:57,780
DevOps things now github is the only

00:04:53,930 --> 00:04:59,729
company in that quick run-through I did

00:04:57,780 --> 00:05:02,159
that I'm going to mention again during

00:04:59,729 --> 00:05:05,460
my presentation today there's a lot of

00:05:02,159 --> 00:05:07,259
people who they look at Google they look

00:05:05,460 --> 00:05:10,529
at etsy they look at netflix and they're

00:05:07,259 --> 00:05:12,870
like oh well that's so cool but the the

00:05:10,529 --> 00:05:14,729
company I work for is like five people

00:05:12,870 --> 00:05:17,759
or something how are we ever going to

00:05:14,729 --> 00:05:22,650
implement something like chaos monkey

00:05:17,759 --> 00:05:25,229
and so my presentation today is to try

00:05:22,650 --> 00:05:30,960
to give you some ideas about how to

00:05:25,229 --> 00:05:38,099
start small with automation and I I'll

00:05:30,960 --> 00:05:44,120
start to talk about hi automate so I'm

00:05:38,099 --> 00:05:50,490
puters don't make its takes the AV do um

00:05:44,120 --> 00:05:57,560
so or as I prefer to say I'm puters

00:05:50,490 --> 00:06:01,370
don't make mistakes developers do so um

00:05:57,560 --> 00:06:05,279
like that there's always issues with

00:06:01,370 --> 00:06:08,219
developers making mistakes like as

00:06:05,279 --> 00:06:11,099
greatest we all think we are we're

00:06:08,219 --> 00:06:14,310
pretty forward Steve McConnell who wrote

00:06:11,099 --> 00:06:19,469
code complete estimates that developers

00:06:14,310 --> 00:06:23,639
make dash 250 defects oh yeah minus 50

00:06:19,469 --> 00:06:25,830
t4x hundred lines of code and is

00:06:23,639 --> 00:06:28,349
actually changed his name is V McConnell

00:06:25,830 --> 00:06:30,870
now he has got into this f of

00:06:28,349 --> 00:06:35,850
sufficiency thing as well

00:06:30,870 --> 00:06:39,570
so so you know here's one of our

00:06:35,850 --> 00:06:43,860
developers at work now a lot of small

00:06:39,570 --> 00:06:46,220
companies they have beaker writing code

00:06:43,860 --> 00:06:49,950
and then it's also because job to do

00:06:46,220 --> 00:06:53,850
deployments and stuff like that I don't

00:06:49,950 --> 00:06:55,950
think that that's the best idea like I

00:06:53,850 --> 00:07:00,810
actually think that this is a better

00:06:55,950 --> 00:07:03,720
approach IBM machines can do the work so

00:07:00,810 --> 00:07:06,030
that people have time to think machines

00:07:03,720 --> 00:07:08,430
should do the work that's what they're

00:07:06,030 --> 00:07:11,130
best at people should do the thinking

00:07:08,430 --> 00:07:14,840
that's what they're best at machines

00:07:11,130 --> 00:07:24,300
should work the people should think

00:07:14,840 --> 00:07:28,430
should work home machine so I don't do

00:07:24,300 --> 00:07:32,760
much work anymore I'm too busy thinking

00:07:28,430 --> 00:07:35,430
so so now you know where the title for

00:07:32,760 --> 00:07:39,840
my talk came from this is an IBM

00:07:35,430 --> 00:07:42,540
promotional video from the 1960s for

00:07:39,840 --> 00:07:46,020
their word processing systems it was

00:07:42,540 --> 00:07:47,820
actually made by Henson associates which

00:07:46,020 --> 00:07:50,790
went on to become the jim henson company

00:07:47,820 --> 00:07:53,250
so there's lots of Henson references in

00:07:50,790 --> 00:07:55,020
my presentation today if you're not into

00:07:53,250 --> 00:08:04,370
the Muppets and Sesame Street the doors

00:07:55,020 --> 00:08:07,560
over there so let X think about the

00:08:04,370 --> 00:08:11,460
about what what we can do in terms of

00:08:07,560 --> 00:08:14,520
automation and like well we'll pick

00:08:11,460 --> 00:08:18,830
something small to start off with we're

00:08:14,520 --> 00:08:23,100
going to have a read to recommit who

00:08:18,830 --> 00:08:25,590
formerly known as I pre-commit hook so

00:08:23,100 --> 00:08:30,750
all of us I think have worked with

00:08:25,590 --> 00:08:33,150
developers who have let's say not

00:08:30,750 --> 00:08:37,980
written the highest quality code that

00:08:33,150 --> 00:08:41,310
I'm as possible so I tend to think of

00:08:37,980 --> 00:08:42,840
them as like that the Oscar developers I

00:08:41,310 --> 00:08:46,550
have a clock

00:08:42,840 --> 00:08:50,670
work and then those telephone a broken

00:08:46,550 --> 00:08:54,480
umbrella a rusty trombone and I am

00:08:50,670 --> 00:08:58,920
delighted the stall of my own I love

00:08:54,480 --> 00:09:01,260
them because they're trash and Oscar

00:08:58,920 --> 00:09:04,500
developers puts all that trash into

00:09:01,260 --> 00:09:09,740
their code and it's badly formatted and

00:09:04,500 --> 00:09:15,960
everything else so by having a simple

00:09:09,740 --> 00:09:18,210
recommit who we can we can be checking

00:09:15,960 --> 00:09:19,860
our code before it actually gets

00:09:18,210 --> 00:09:22,920
committed because once codes been

00:09:19,860 --> 00:09:26,340
committed it's harder to fix and that

00:09:22,920 --> 00:09:28,710
the higher up there the the further it

00:09:26,340 --> 00:09:30,660
goes through the delivery pipeline the

00:09:28,710 --> 00:09:32,730
harder it is to actually get rid of it

00:09:30,660 --> 00:09:35,370
because we all know as soon as a

00:09:32,730 --> 00:09:37,230
business person sees it and it's working

00:09:35,370 --> 00:09:40,110
it's like great that's going into

00:09:37,230 --> 00:09:45,780
production so if we can deal with issues

00:09:40,110 --> 00:09:47,730
early that's a lot better so yeah I'm

00:09:45,780 --> 00:09:50,550
gonna give up on trying to talk through

00:09:47,730 --> 00:09:53,010
this code snapple because um that

00:09:50,550 --> 00:09:55,200
there's a few compiler issues with the

00:09:53,010 --> 00:10:02,850
the current environment that's running

00:09:55,200 --> 00:10:04,770
in but basically we'll do a lint check

00:10:02,850 --> 00:10:07,710
PHP link check to make sure that the

00:10:04,770 --> 00:10:11,570
code will actually compile because one

00:10:07,710 --> 00:10:13,860
of the things I see quite often with

00:10:11,570 --> 00:10:17,700
developers who are less experience with

00:10:13,860 --> 00:10:19,890
get is that they get a merge conflict in

00:10:17,700 --> 00:10:22,560
a file they go through they find the

00:10:19,890 --> 00:10:24,660
first merge conflict they fix that one

00:10:22,560 --> 00:10:27,240
up and then commit the code and there's

00:10:24,660 --> 00:10:29,730
like six others in the file and then

00:10:27,240 --> 00:10:32,820
like you know the environment is blowing

00:10:29,730 --> 00:10:35,910
up and they don't only merge right

00:10:32,820 --> 00:10:38,130
before they're about to push so they

00:10:35,910 --> 00:10:41,040
they fix that one they push the code and

00:10:38,130 --> 00:10:43,800
you're stuck with them the mess so that

00:10:41,040 --> 00:10:48,600
that stops that part of it and then we

00:10:43,800 --> 00:10:51,650
also so if it fails the link check you

00:10:48,600 --> 00:10:54,810
can't kind of see cuz it's kind of here

00:10:51,650 --> 00:10:56,700
that it it will actually buy a layout if

00:10:54,810 --> 00:10:59,010
that part passes

00:10:56,700 --> 00:11:01,170
then we run PHP code sniffer with the

00:10:59,010 --> 00:11:05,040
Drupal coding standards just so we've

00:11:01,170 --> 00:11:07,530
got consistently formatted code now this

00:11:05,040 --> 00:11:09,720
is where stuff gets interesting oh it's

00:11:07,530 --> 00:11:11,880
not going to truncate too much of the

00:11:09,720 --> 00:11:15,090
videos so fingers crossed will actually

00:11:11,880 --> 00:11:21,240
be able to see how this pre-commit hook

00:11:15,090 --> 00:11:23,930
our works so we can see here that we've

00:11:21,240 --> 00:11:26,310
got the pre-commit hook in our get hooks

00:11:23,930 --> 00:11:28,310
pre-commit and it's set to be well you

00:11:26,310 --> 00:11:31,770
can't see that's set to be executable

00:11:28,310 --> 00:11:34,970
and we can see here that the code

00:11:31,770 --> 00:11:38,130
matches what i showed you before roughly

00:11:34,970 --> 00:11:41,370
and we've got a single commit in our

00:11:38,130 --> 00:11:44,670
repo at the moment now this is the form

00:11:41,370 --> 00:11:48,800
API example from the examples repo on d

00:11:44,670 --> 00:11:56,010
dodo and so I've added my changes and

00:11:48,800 --> 00:11:57,960
now I'm going to try to commit them you

00:11:56,010 --> 00:12:01,800
know code from triple dog it should pass

00:11:57,960 --> 00:12:04,200
up but it doesn't so here we've got a

00:12:01,800 --> 00:12:10,350
whole bunch of problems that PHP code

00:12:04,200 --> 00:12:12,300
sniffer has found with this code so how

00:12:10,350 --> 00:12:16,110
do we fix that there's a great tool

00:12:12,300 --> 00:12:21,570
called HC BF we've just renamed it today

00:12:16,110 --> 00:12:24,930
it was formerly known as PHP CBF and now

00:12:21,570 --> 00:12:28,320
you're probably PHP CBF is great for

00:12:24,930 --> 00:12:31,350
lazy developers it's for people who

00:12:28,320 --> 00:12:38,370
can't be well actually no this G

00:12:31,350 --> 00:12:44,100
programming so it's um it's if the auto

00:12:38,370 --> 00:12:47,160
fer are matter it actually stands for

00:12:44,100 --> 00:12:51,030
PHP code beautifier and formatter which

00:12:47,160 --> 00:12:53,220
I love something to beautify in format

00:12:51,030 --> 00:12:56,490
my slides properly if anyone's got these

00:12:53,220 --> 00:13:00,180
suggestions let me know so what we do we

00:12:56,490 --> 00:13:02,670
can run PHP CBF to clean up most of the

00:13:00,180 --> 00:13:05,040
errors in this code so you're not having

00:13:02,670 --> 00:13:06,840
developers sitting there reformatting

00:13:05,040 --> 00:13:08,310
code all the time like you know you

00:13:06,840 --> 00:13:09,960
think if they can figure the radio

00:13:08,310 --> 00:13:10,350
properly this wouldn't be an issue but

00:13:09,960 --> 00:13:14,610
you

00:13:10,350 --> 00:13:18,330
be surprised so now we'll we'll run this

00:13:14,610 --> 00:13:25,500
so we run PHP CBF we tell it the

00:13:18,330 --> 00:13:28,470
standard that we're going to use with

00:13:25,500 --> 00:13:30,300
the Drupal coding standards I made

00:13:28,470 --> 00:13:32,970
showing my demo videos that there was a

00:13:30,300 --> 00:13:36,030
few typos so it's just like a real-life

00:13:32,970 --> 00:13:37,830
demo now we've run PHP code sniffer

00:13:36,030 --> 00:13:40,500
we've still got a couple of areas that

00:13:37,830 --> 00:13:43,860
we need to fix up manually but rather

00:13:40,500 --> 00:13:46,650
than having the the 30 or 40 arrows we

00:13:43,860 --> 00:13:49,430
had before we've got 230 human actually

00:13:46,650 --> 00:13:52,260
has to read the text then clean up so

00:13:49,430 --> 00:13:54,990
you know wouldn't be a real demo without

00:13:52,260 --> 00:14:00,210
a bit of live coding here so we'll we'll

00:13:54,990 --> 00:14:03,120
do some coding just double check the

00:14:00,210 --> 00:14:06,060
file name to get it right and yeah you

00:14:03,120 --> 00:14:10,590
know live coding demo with truncated

00:14:06,060 --> 00:14:12,930
codes even better than oh yeah it's

00:14:10,590 --> 00:14:18,300
awesome I think we should have a whole

00:14:12,930 --> 00:14:20,220
track for it add in Baltimore hope the

00:14:18,300 --> 00:14:23,880
ice watching the video so they can make

00:14:20,220 --> 00:14:34,470
a note of that suggestion so now we'll

00:14:23,880 --> 00:14:37,650
fix up their stock block save that and

00:14:34,470 --> 00:14:40,190
now we'll well we'll check that file now

00:14:37,650 --> 00:14:43,410
I still got one more that will fix up

00:14:40,190 --> 00:14:44,760
Mitchell just takes a second of course

00:14:43,410 --> 00:14:53,540
we've got to look up what the file name

00:14:44,760 --> 00:14:57,140
is get that we fix it up it's quite a

00:14:53,540 --> 00:14:57,140
quick fix this one

00:15:00,649 --> 00:15:08,269
oh yeah that's right this is where I

00:15:06,470 --> 00:15:10,939
just hacked it to get it to pass the

00:15:08,269 --> 00:15:15,529
test I think we've all done that from

00:15:10,939 --> 00:15:24,319
time to time so well well we'll just

00:15:15,529 --> 00:15:29,600
hack in a comment here come on I had to

00:15:24,319 --> 00:15:33,110
think about what to put in here so come

00:15:29,600 --> 00:15:35,179
on yeah there we go check the test run

00:15:33,110 --> 00:15:37,579
there we go put that in we've got the

00:15:35,179 --> 00:15:41,119
single line comment everyone's happy so

00:15:37,579 --> 00:15:46,519
now we can run the code sniffer on this

00:15:41,119 --> 00:15:49,009
one to confirm that it's good and now

00:15:46,519 --> 00:15:53,540
we'll we'll push those will be able to

00:15:49,009 --> 00:15:56,119
commit those changes so rather than so

00:15:53,540 --> 00:15:58,970
at the the cleaned-up file so here we

00:15:56,119 --> 00:16:04,249
cleaned up to 46 files and we only had

00:15:58,970 --> 00:16:06,290
to manually update a couple of lines so

00:16:04,249 --> 00:16:09,170
super exciting someone doing it commit

00:16:06,290 --> 00:16:11,929
on a projector all right so now we've

00:16:09,170 --> 00:16:13,939
actually got that that code was able to

00:16:11,929 --> 00:16:19,069
be committed and we didn't end up with

00:16:13,939 --> 00:16:21,740
garbage in our repository again so the

00:16:19,069 --> 00:16:27,319
the next automation i'm going to show

00:16:21,740 --> 00:16:30,709
you is i debase an atty zation so also

00:16:27,319 --> 00:16:33,639
known as database sanitization there's

00:16:30,709 --> 00:16:36,079
some people who work with drupal and

00:16:33,639 --> 00:16:41,089
highly regulated industries like

00:16:36,079 --> 00:16:44,269
financial services pharmaceuticals like

00:16:41,089 --> 00:16:46,790
that there's a bunch of them and also in

00:16:44,269 --> 00:16:50,480
Europe you've got all the the privacy

00:16:46,790 --> 00:16:52,459
regulations where you've got people's

00:16:50,480 --> 00:16:54,860
data being captured in your Drupal site

00:16:52,459 --> 00:16:57,079
you don't want to be just giving that

00:16:54,860 --> 00:17:00,290
wholesale to your developers that going

00:16:57,079 --> 00:17:05,120
oh this person inquired about this thing

00:17:00,290 --> 00:17:10,539
or someone bought some product so what

00:17:05,120 --> 00:17:14,430
we like to do is we have a hat bot which

00:17:10,539 --> 00:17:17,730
you know we need to go back so we have a

00:17:14,430 --> 00:17:20,760
that but that fires a web hook that

00:17:17,730 --> 00:17:23,190
calls our task runner the task runner

00:17:20,760 --> 00:17:26,640
copies the database to a dedicated

00:17:23,190 --> 00:17:28,890
environment runs thrush SQL sanitize on

00:17:26,640 --> 00:17:32,220
it to scrub the database and you can

00:17:28,890 --> 00:17:37,280
implement your own drush sanitize hooks

00:17:32,220 --> 00:17:39,780
to drop data or put random data in the

00:17:37,280 --> 00:17:43,020
database truncate tables whatever you

00:17:39,780 --> 00:17:45,630
want let's just SQL commands and then

00:17:43,020 --> 00:17:48,300
we're going to copy the the sanitized

00:17:45,630 --> 00:17:51,750
database thumb into an s3 bucket and

00:17:48,300 --> 00:17:54,570
then send the link back to slack so we

00:17:51,750 --> 00:18:02,030
actually can download the the sanitized

00:17:54,570 --> 00:18:05,850
database dump so here we go well I'm

00:18:02,030 --> 00:18:09,810
will run out command say / DB will give

00:18:05,850 --> 00:18:13,290
it the name of the the site that we want

00:18:09,810 --> 00:18:16,290
and the environment and so this is run

00:18:13,290 --> 00:18:19,410
off to iron do which were using is our

00:18:16,290 --> 00:18:23,490
task runner iron dot IO basically

00:18:19,410 --> 00:18:25,710
provides a hosted docker instance that

00:18:23,490 --> 00:18:27,900
will run commands and look at how fast

00:18:25,710 --> 00:18:30,990
it runs when you speed the video up it's

00:18:27,900 --> 00:18:33,990
awesome I wish you'd do this during the

00:18:30,990 --> 00:18:36,390
day but you know this is going to run

00:18:33,990 --> 00:18:38,490
for seven or eight minutes while it's

00:18:36,390 --> 00:18:40,260
doing that I'll just quickly run you

00:18:38,490 --> 00:18:43,320
through the UI so it shows us the basics

00:18:40,260 --> 00:18:45,870
of our request because our payload is a

00:18:43,320 --> 00:18:48,810
form rather than JSON it doesn't render

00:18:45,870 --> 00:18:51,930
the the payload down the bottom so now

00:18:48,810 --> 00:18:54,290
this is running for us we're going to

00:18:51,930 --> 00:18:57,290
watch it run for seven or eight minutes

00:18:54,290 --> 00:18:57,290
manamana

00:18:59,150 --> 00:19:15,030
phenomena we can have seven or eight

00:19:10,559 --> 00:19:18,390
minutes and this if you like no no okay

00:19:15,030 --> 00:19:20,700
maybe we won't okay so now this is

00:19:18,390 --> 00:19:23,160
finished running it took about 12

00:19:20,700 --> 00:19:25,700
minutes this time it's given us a log of

00:19:23,160 --> 00:19:30,360
the the Python script that ran to

00:19:25,700 --> 00:19:33,510
generate this for us there is a copy of

00:19:30,360 --> 00:19:36,360
this script available at the end of the

00:19:33,510 --> 00:19:39,539
talk so don't leave early and now we've

00:19:36,360 --> 00:19:44,220
got the link to download it so we

00:19:39,539 --> 00:19:52,320
download the link download the dump open

00:19:44,220 --> 00:19:55,740
it up and give it a second and super

00:19:52,320 --> 00:19:59,490
exciting an SQL dump file but this one's

00:19:55,740 --> 00:20:04,020
actually been scrubbed of all sensitive

00:19:59,490 --> 00:20:06,210
data so that the user column all the

00:20:04,020 --> 00:20:09,990
usernames is just user and whatever the

00:20:06,210 --> 00:20:14,370
UID is and the email addresses has just

00:20:09,990 --> 00:20:17,130
use a UID at example com or whatever so

00:20:14,370 --> 00:20:18,929
you can still use that data based on but

00:20:17,130 --> 00:20:24,720
that the sensitive information has been

00:20:18,929 --> 00:20:29,280
removed so the next demo I've got is

00:20:24,720 --> 00:20:32,490
employment notifications also known as

00:20:29,280 --> 00:20:36,000
deployment notifications so when you

00:20:32,490 --> 00:20:38,789
have a deployment you may want to notify

00:20:36,000 --> 00:20:45,120
another system that a deployments happen

00:20:38,789 --> 00:20:50,250
so for example New Relic is really good

00:20:45,120 --> 00:20:53,880
for keeping track of of the metrics for

00:20:50,250 --> 00:20:57,030
your site but one of the issues with new

00:20:53,880 --> 00:20:59,700
relic is that sometimes you go in there

00:20:57,030 --> 00:21:02,039
and there's been a recent deployment and

00:20:59,700 --> 00:21:04,860
if that information is recorded in

00:21:02,039 --> 00:21:09,630
another system you're kind of trying to

00:21:04,860 --> 00:21:12,000
find out why that you know that the site

00:21:09,630 --> 00:21:14,850
has had a

00:21:12,000 --> 00:21:15,990
a spike in load for example and that's

00:21:14,850 --> 00:21:19,170
because all the patients are being

00:21:15,990 --> 00:21:21,750
rebuilt not because as an increase in

00:21:19,170 --> 00:21:25,170
traffic or something like that so being

00:21:21,750 --> 00:21:28,110
able to record the deployments in New

00:21:25,170 --> 00:21:30,600
Relic allows you to see that data in the

00:21:28,110 --> 00:21:37,680
same place so I've got a quick little

00:21:30,600 --> 00:21:42,420
demo of how that works on pantheon so if

00:21:37,680 --> 00:21:46,730
we give it a sec you don't advance the

00:21:42,420 --> 00:21:51,720
slide and it should work here we go so

00:21:46,730 --> 00:21:55,520
what we've got here is where we'll tell

00:21:51,720 --> 00:21:55,520
Pantheon to deploy the changes

00:22:05,150 --> 00:22:12,750
and so we hit the button and it does so

00:22:10,530 --> 00:22:14,850
deployment and look at how fast Pantheon

00:22:12,750 --> 00:22:16,710
deploys these days that their recent

00:22:14,850 --> 00:22:19,710
improvements it's just I'm really

00:22:16,710 --> 00:22:23,970
impressive so now we've we've deployed

00:22:19,710 --> 00:22:26,130
the changes our site still works because

00:22:23,970 --> 00:22:28,230
we just upgraded for a patch level

00:22:26,130 --> 00:22:30,750
release of Drupal nothing's changed on

00:22:28,230 --> 00:22:35,700
outside if we had behat test we'd be

00:22:30,750 --> 00:22:39,390
able to confirm that and now we we

00:22:35,700 --> 00:22:41,130
refresh our charts and we can see down

00:22:39,390 --> 00:22:42,990
the side here it's showing us the

00:22:41,130 --> 00:22:45,480
automation in a couple of minutes it'll

00:22:42,990 --> 00:22:48,870
give us a nice gray bar in the in the

00:22:45,480 --> 00:22:50,190
chart so we can actually see along with

00:22:48,870 --> 00:22:53,010
the rest of the metrics when that

00:22:50,190 --> 00:22:56,010
deployment occurred so it's just a

00:22:53,010 --> 00:22:57,840
little thing that helps you understand a

00:22:56,010 --> 00:23:00,780
bit more about what's going on with your

00:22:57,840 --> 00:23:03,690
site for those of you who do have access

00:23:00,780 --> 00:23:06,090
to a new relic I recommend going into

00:23:03,690 --> 00:23:09,090
New Relic on a regular basis probably

00:23:06,090 --> 00:23:12,120
daily and just understand what the

00:23:09,090 --> 00:23:14,970
graphs look like for your site I've seen

00:23:12,120 --> 00:23:17,250
too many people who go into New Relic

00:23:14,970 --> 00:23:20,130
when there's a problem and they just

00:23:17,250 --> 00:23:22,020
look for the peaks in the graph and they

00:23:20,130 --> 00:23:23,970
assume that the peaks is where the

00:23:22,020 --> 00:23:27,270
problem is maybe it's a batch process

00:23:23,970 --> 00:23:30,180
that's running you know at 2am every day

00:23:27,270 --> 00:23:33,480
that we know is going to generate a lot

00:23:30,180 --> 00:23:35,760
of load and take a long time but if you

00:23:33,480 --> 00:23:38,850
know your graphs and understand that

00:23:35,760 --> 00:23:41,760
data then you're able to drill into

00:23:38,850 --> 00:23:46,950
where the real problems are when issues

00:23:41,760 --> 00:23:49,980
arise so this is just that the web hook

00:23:46,950 --> 00:23:52,680
I was going to try to and give a quick

00:23:49,980 --> 00:23:56,670
run through of this but given our

00:23:52,680 --> 00:24:01,440
awesome IV we'll just skip it um now

00:23:56,670 --> 00:24:03,390
repo deployment this is so cool it was

00:24:01,440 --> 00:24:06,720
going to be two repoed deployments but

00:24:03,390 --> 00:24:10,980
you know economically we've got to cut

00:24:06,720 --> 00:24:15,840
things back a bit there is actually a

00:24:10,980 --> 00:24:18,470
shortcut in this so the process is that

00:24:15,840 --> 00:24:21,780
you have to

00:24:18,470 --> 00:24:25,250
repositories in this case we've got one

00:24:21,780 --> 00:24:27,990
on github and one on platform SH and

00:24:25,250 --> 00:24:31,620
don't tell the anyone here from platform

00:24:27,990 --> 00:24:34,140
SH good I can tell you a secret um it

00:24:31,620 --> 00:24:37,110
don't buy the extra seats on platform SH

00:24:34,140 --> 00:24:44,580
just use github and only have one user

00:24:37,110 --> 00:24:46,140
on platform Sh um Stoke so they might

00:24:44,580 --> 00:24:50,370
ask for their little space man back off

00:24:46,140 --> 00:24:52,950
me now so we commit our changes we push

00:24:50,370 --> 00:24:56,310
the changes to github we'd normally

00:24:52,950 --> 00:24:59,910
submit a pull request and we'd run the

00:24:56,310 --> 00:25:03,240
tests against a pull request but I i did

00:24:59,910 --> 00:25:05,850
a copy of the video and it was really

00:25:03,240 --> 00:25:08,310
boring watching someone actually review

00:25:05,850 --> 00:25:10,200
a pull request and merge it so i'm just

00:25:08,310 --> 00:25:11,550
making the changes straight on master to

00:25:10,200 --> 00:25:14,580
make it a bit faster and a bit more

00:25:11,550 --> 00:25:18,300
interesting the tests will still run and

00:25:14,580 --> 00:25:22,650
then there's a deployment step in in

00:25:18,300 --> 00:25:25,860
there so once it passes it commits to

00:25:22,650 --> 00:25:27,690
the the platform SH repo and platform SH

00:25:25,860 --> 00:25:30,330
has got there auto deployment stuff

00:25:27,690 --> 00:25:33,860
it'll import the configuration changes

00:25:30,330 --> 00:25:33,860
and stuff so let's have a look at that

00:25:33,890 --> 00:25:41,460
so here's my drupalcon demo site which

00:25:38,460 --> 00:25:44,610
is running on platform sh and i'm using

00:25:41,460 --> 00:25:53,550
circle see I because I didn't want to

00:25:44,610 --> 00:25:57,030
pay Travis so this video playing yes

00:25:53,550 --> 00:25:59,910
here we go so once again live coding

00:25:57,030 --> 00:26:03,660
well recorded coding with typos of

00:25:59,910 --> 00:26:05,700
course so now we'll we'll let it the the

00:26:03,660 --> 00:26:07,950
site title because that's become like

00:26:05,700 --> 00:26:10,830
the hello world for Drupal 8 demos

00:26:07,950 --> 00:26:13,320
because it's so easy so i will change it

00:26:10,830 --> 00:26:15,150
from drupalcon demo to drupalcon dublin

00:26:13,320 --> 00:26:20,910
demo so you know I'm not recycling it

00:26:15,150 --> 00:26:22,890
from another event and I can tell you

00:26:20,910 --> 00:26:27,180
this was done this morning so it hasn't

00:26:22,890 --> 00:26:30,600
been used before ah so now where we've

00:26:27,180 --> 00:26:31,650
updated our site title and we're going

00:26:30,600 --> 00:26:33,840
to push that

00:26:31,650 --> 00:26:40,110
and we'll see here that it's going to

00:26:33,840 --> 00:26:42,180
get up and that but because we've had I

00:26:40,110 --> 00:26:52,830
worked on that makes us very happy oh

00:26:42,180 --> 00:26:54,450
boy hahaha ba-ba-ba-ba who feels like

00:26:52,830 --> 00:26:59,970
that after you commit some really good

00:26:54,450 --> 00:27:05,790
code yep all right so now we're going to

00:26:59,970 --> 00:27:09,120
watch this run in circles CI and circle

00:27:05,790 --> 00:27:11,580
CI it's amazingly fast as we can see

00:27:09,120 --> 00:27:13,790
here it's just flying through setting up

00:27:11,580 --> 00:27:18,270
the the environment composer installed

00:27:13,790 --> 00:27:21,660
so fast and now it's running our tests

00:27:18,270 --> 00:27:26,310
and I cheated a bit it's only giving us

00:27:21,660 --> 00:27:29,460
a couple of tests here but it's always

00:27:26,310 --> 00:27:33,390
great when the tests to pass and then

00:27:29,460 --> 00:27:40,680
it's doing our deployment on to platform

00:27:33,390 --> 00:27:44,160
SH for us and so it it takes a little

00:27:40,680 --> 00:27:49,080
bit for that to run again through the

00:27:44,160 --> 00:27:54,840
magic of TV it only takes seconds and so

00:27:49,080 --> 00:27:58,740
now that has deployed our changes over

00:27:54,840 --> 00:28:02,840
onto platform SH and we can see up the

00:27:58,740 --> 00:28:07,370
top here that our tests passed and

00:28:02,840 --> 00:28:12,890
generally this is me when my tests pass

00:28:07,370 --> 00:28:15,870
come on I'm missing one of my things

00:28:12,890 --> 00:28:17,760
damn okay um there was meant to be the

00:28:15,870 --> 00:28:22,440
two-headed monster being surprised there

00:28:17,760 --> 00:28:24,480
I don't know why that didn't play um but

00:28:22,440 --> 00:28:29,610
it seems bad day for it so now we'll

00:28:24,480 --> 00:28:34,650
we'll have a look here at our our update

00:28:29,610 --> 00:28:36,780
actually landing there we go so it's

00:28:34,650 --> 00:28:40,220
gone from drupalcon dripped on dublin if

00:28:36,780 --> 00:28:40,220
you think you've probably missed it

00:28:44,140 --> 00:28:53,360
[ __ ] buddy you two lived it haha

00:28:47,390 --> 00:28:54,830
you're wonderful ah see so that that's

00:28:53,360 --> 00:29:00,520
how you should feel when your code lands

00:28:54,830 --> 00:29:04,930
in production so um before I wrap up i

00:29:00,520 --> 00:29:10,460
want to encourage all of you to a right

00:29:04,930 --> 00:29:13,760
so um with with a lot of this stuff it's

00:29:10,460 --> 00:29:16,640
not like I've talked to people who they

00:29:13,760 --> 00:29:19,580
want to have like this awesome see I set

00:29:16,640 --> 00:29:23,780
up they want to get into continuous

00:29:19,580 --> 00:29:25,700
delivery continuous deployment and they

00:29:23,780 --> 00:29:29,300
they find it overwhelming because

00:29:25,700 --> 00:29:32,660
there's just so much that that they

00:29:29,300 --> 00:29:34,910
think they need to to get done but with

00:29:32,660 --> 00:29:37,490
code we iterate on our code we make

00:29:34,910 --> 00:29:41,000
small changes we improve it over time we

00:29:37,490 --> 00:29:43,430
make things better and so we we should

00:29:41,000 --> 00:29:46,910
adopt the same approach with our

00:29:43,430 --> 00:29:49,310
automation so pick some of the small

00:29:46,910 --> 00:29:51,290
things from my examples today there is

00:29:49,310 --> 00:29:54,860
actually going to be code available

00:29:51,290 --> 00:29:58,550
online we'll get to that slide in a

00:29:54,860 --> 00:29:59,870
minute and you'll you'll be able to do

00:29:58,550 --> 00:30:01,970
this stuff and there's loads of

00:29:59,870 --> 00:30:05,390
resources online so just start with

00:30:01,970 --> 00:30:08,740
small things in iterate and once you get

00:30:05,390 --> 00:30:12,260
that iteration right you you end up

00:30:08,740 --> 00:30:16,880
building things slowly and you end up

00:30:12,260 --> 00:30:19,130
with an interconnected system to manage

00:30:16,880 --> 00:30:20,960
everything and it looks like this which

00:30:19,130 --> 00:30:23,830
is pretty impressive once you get to

00:30:20,960 --> 00:30:23,830
that point

00:30:26,529 --> 00:30:36,169
not only that crystal also by Henson

00:30:30,669 --> 00:30:41,449
yeah I've watched so many hours of Jim

00:30:36,169 --> 00:30:47,149
Henson footage to prepare this topic so

00:30:41,449 --> 00:30:53,299
yeah thank hanks everyone and I've

00:30:47,149 --> 00:30:56,209
enjoyed the session so um was very

00:30:53,299 --> 00:30:57,979
strange it was very weird Julia I was

00:30:56,209 --> 00:31:05,629
kind of amusing yes it was rather funny

00:30:57,979 --> 00:31:10,429
it was incredibly funny I loved it thank

00:31:05,629 --> 00:31:12,919
you now um but for those of you who

00:31:10,429 --> 00:31:14,329
didn't like my talk I suggest you go

00:31:12,919 --> 00:31:18,649
watch meet the Feebles you'll probably

00:31:14,329 --> 00:31:21,199
enjoy and if you did enjoy it please go

00:31:18,649 --> 00:31:22,789
fill out the the survey again if you

00:31:21,199 --> 00:31:28,999
didn't enjoy it just go watch meet the

00:31:22,789 --> 00:31:36,319
Feebles so as anything he questions for

00:31:28,999 --> 00:31:40,369
me uh and bugger its cut off my url ok

00:31:36,319 --> 00:31:42,139
so well while I'm answering questions go

00:31:40,369 --> 00:31:45,639
follow me on twitter if you want to

00:31:42,139 --> 00:31:49,879
learn more about me go to opal developer

00:31:45,639 --> 00:31:53,359
dot-com dot half a night it should be a

00:31:49,879 --> 00:31:56,389
you and the resources from today's

00:31:53,359 --> 00:31:59,179
session available at that very easy to

00:31:56,389 --> 00:32:01,789
remember URL i was a lot shorter than

00:31:59,179 --> 00:32:09,469
the the gist URL that there's a couple

00:32:01,789 --> 00:32:11,929
of sorry oh yeah well the the one of the

00:32:09,469 --> 00:32:13,609
the tube repo deployment there's a

00:32:11,929 --> 00:32:16,399
couple of tokens that i need to strip

00:32:13,609 --> 00:32:18,949
out and just throw that up but that will

00:32:16,399 --> 00:32:21,649
be up later today but everything else

00:32:18,949 --> 00:32:32,270
i've i've run through is available

00:32:21,649 --> 00:32:40,290
online so any questions yep

00:32:32,270 --> 00:32:42,300
maybe missed it but did you explain so

00:32:40,290 --> 00:32:45,330
maybe i missed it but the pre-commit

00:32:42,300 --> 00:32:47,550
hook one of the key things in there is

00:32:45,330 --> 00:32:50,700
it only checks changed files which means

00:32:47,550 --> 00:32:52,260
it's really fast and yeah I have used a

00:32:50,700 --> 00:32:54,540
version of that there's one on github

00:32:52,260 --> 00:32:56,640
that's like a PHP we could hook that

00:32:54,540 --> 00:32:58,050
similar and that that saved me many

00:32:56,640 --> 00:33:01,470
times I work projects from pushing

00:32:58,050 --> 00:33:03,570
broken code okay um yeah I did actually

00:33:01,470 --> 00:33:07,110
forget to mention that that it does

00:33:03,570 --> 00:33:09,390
check only the files that have changed

00:33:07,110 --> 00:33:11,580
so if you've got a project that's an

00:33:09,390 --> 00:33:14,100
absolute mess you can use the the

00:33:11,580 --> 00:33:17,310
pre-commit hook to just clean up file by

00:33:14,100 --> 00:33:21,860
file as you go so over time you're

00:33:17,310 --> 00:33:21,860
improving the quality of the code base

00:33:25,400 --> 00:33:32,610
two questions long is your only allowed

00:33:28,290 --> 00:33:34,710
one I'm sorry okay then then is there is

00:33:32,610 --> 00:33:39,000
some that you think demo day acha cloud

00:33:34,710 --> 00:33:40,830
yeah yes what is the reason um because I

00:33:39,000 --> 00:33:44,970
used all three of the big hosting

00:33:40,830 --> 00:33:46,680
companies in my demo because I I think

00:33:44,970 --> 00:33:48,990
that I should be fair to all of them so

00:33:46,680 --> 00:33:50,880
I used a career because I've written a

00:33:48,990 --> 00:33:53,070
library to interact with the cloud API

00:33:50,880 --> 00:33:55,490
which makes it easy to copy database

00:33:53,070 --> 00:33:58,200
from one environment to another

00:33:55,490 --> 00:34:01,440
sanitization i use platform sh because

00:33:58,200 --> 00:34:05,160
they're automation stuff is brilliant it

00:34:01,440 --> 00:34:07,470
makes it so easy to have composer based

00:34:05,160 --> 00:34:09,990
workflows and all of that stuff out of

00:34:07,470 --> 00:34:12,570
the box and pantheons good because of

00:34:09,990 --> 00:34:15,650
the the new relic is included free so

00:34:12,570 --> 00:34:19,350
that's why i used all three of them good

00:34:15,650 --> 00:34:23,730
take another one yeah all right okay the

00:34:19,350 --> 00:34:27,630
first one was so good so there's not a

00:34:23,730 --> 00:34:30,570
silver bullet here but I mean and the

00:34:27,630 --> 00:34:32,840
the set of tools that they just show do

00:34:30,570 --> 00:34:37,170
you think that the for a big corporation

00:34:32,840 --> 00:34:40,320
in enterprise world egg works I think it

00:34:37,170 --> 00:34:42,750
does some of the dacoit I demoed he was

00:34:40,320 --> 00:34:45,240
copy and pasted from a large enterprise

00:34:42,750 --> 00:34:46,060
client of mine with with some

00:34:45,240 --> 00:34:49,990
alterations

00:34:46,060 --> 00:34:53,320
and their support and me doing that but

00:34:49,990 --> 00:34:56,050
the general thing with large

00:34:53,320 --> 00:35:00,130
organizations running Drupal is that

00:34:56,050 --> 00:35:02,560
they they need to be able to manage many

00:35:00,130 --> 00:35:05,950
Drupal sites in a consistent way so

00:35:02,560 --> 00:35:15,340
having automation is key to making that

00:35:05,950 --> 00:35:19,780
happen yep they get cool yeah up at the

00:35:15,340 --> 00:35:21,190
mic yeah get some exercise actually just

00:35:19,780 --> 00:35:23,650
gonna ask you you can close your rings

00:35:21,190 --> 00:35:25,870
bike getting up and yes yes yeah queer

00:35:23,650 --> 00:35:27,430
library you mentioned these yep open

00:35:25,870 --> 00:35:31,120
source hours it's private yeah you know

00:35:27,430 --> 00:35:33,850
it's open source and it's got full test

00:35:31,120 --> 00:35:36,040
coverage and it's on github so get

00:35:33,850 --> 00:35:38,530
patches welcome if you've got

00:35:36,040 --> 00:35:44,770
suggestions for it Thanks yep don't

00:35:38,530 --> 00:35:47,470
worries actually I'm sorry for the

00:35:44,770 --> 00:35:50,170
screen try to fix it out so it's all

00:35:47,470 --> 00:35:52,830
your fault no it's not every money if

00:35:50,170 --> 00:35:57,360
you didn't like the screen find this guy

00:35:52,830 --> 00:35:59,980
yeah yeah he's free Mac we are yeah so

00:35:57,360 --> 00:36:02,530
it's a very it's a very good thing that

00:35:59,980 --> 00:36:06,280
we are we're trying to clean up things

00:36:02,530 --> 00:36:08,650
before actually we commit which which

00:36:06,280 --> 00:36:12,700
leads us to one one of the things that

00:36:08,650 --> 00:36:15,160
we're trying to do which is trying to

00:36:12,700 --> 00:36:17,770
have the developers not interfere too

00:36:15,160 --> 00:36:20,770
much with the downtime that we're going

00:36:17,770 --> 00:36:22,090
to have it's it's it's a little bit the

00:36:20,770 --> 00:36:24,880
presentation I'm going to give

00:36:22,090 --> 00:36:29,800
afterwards also in this room and I hope

00:36:24,880 --> 00:36:31,360
the screen is fixed but but this really

00:36:29,800 --> 00:36:33,880
helps this is really helpful because

00:36:31,360 --> 00:36:37,000
then all the problems that you have like

00:36:33,880 --> 00:36:39,400
when they commit stuff and they don't

00:36:37,000 --> 00:36:41,980
check it and goes live and the site is

00:36:39,400 --> 00:36:46,030
down it doesn't actually interfere it

00:36:41,980 --> 00:36:51,120
doesn't create more alerts more toil and

00:36:46,030 --> 00:36:53,830
stuff that we want to remove on sre so

00:36:51,120 --> 00:36:57,220
this you are already mentioned it's open

00:36:53,830 --> 00:36:59,800
source everybody can use it and it works

00:36:57,220 --> 00:37:01,570
we can just modify it any word

00:36:59,800 --> 00:37:05,020
on other providers yeah that's correct

00:37:01,570 --> 00:37:07,960
yep that that's exactly right and in the

00:37:05,020 --> 00:37:10,750
the resources links I've provided I've

00:37:07,960 --> 00:37:13,840
also linked to how I'm running this

00:37:10,750 --> 00:37:16,120
server side on Travis CI for one of my

00:37:13,840 --> 00:37:19,570
drupal module so you can't actually

00:37:16,120 --> 00:37:26,440
merge a pull request into that module

00:37:19,570 --> 00:37:34,330
without it passing on Travis any more

00:37:26,440 --> 00:37:40,510
questions all right okay well thank you

00:37:34,330 --> 00:37:44,230
all for coming and yeah i hope i hope

00:37:40,510 --> 00:37:46,180
you enjoyed learning about F ups and go

00:37:44,230 --> 00:37:49,560
go back to work and talk to management

00:37:46,180 --> 00:37:49,560

YouTube URL: https://www.youtube.com/watch?v=f6v3fqrKV6Q


