Title: DrupalCon Dublin 2016: Agile Your Agile: Changing process one step at a time
Publication date: 2016-09-27
Playlist: DrupalCon Dublin 2016
Description: 
	Agile project management emphasizes working in small, manageable chunks. Teams should identify their goals and then constantly re-evaluate their progress and direction. Oddly, many agencies attempt one giant leap to switch themselves to processes that are all about baby steps. This session will suggest that web agencies think of their own project teams as the product on which they are iterating. What is the Minimum Viable Product for a team at your agency using Agile techniques? Answering that question requires thinking about the purpose of each Agile practice and how it would fit into your agency. This session will include:

An overview of different Agile practices, including daily stand ups, retrospectives, task boards, demos, backlog grooming and Behavior-Driven Development.
An explanation of the benefits each of these practices is intended to provide.
Practical examples for how to start using just a bit more Agile in your workplace.
Discussion of the pitfalls agencies often find when adopting Agile.
Captions: 
	00:00:00,000 --> 00:00:06,060
welcome to drupalcon dublin and agile

00:00:03,030 --> 00:00:07,440
your agile changing process one step at

00:00:06,060 --> 00:00:10,710
a time did everyone have a good lunch

00:00:07,440 --> 00:00:12,660
yeah all right great so my name is Steve

00:00:10,710 --> 00:00:15,360
Kirsh I'm an agency and community

00:00:12,660 --> 00:00:18,690
engineer at Pantheon you can find me on

00:00:15,360 --> 00:00:21,150
Twitter github drupal.org as Steve

00:00:18,690 --> 00:00:25,830
vector you can also find me on Twitter

00:00:21,150 --> 00:00:28,560
as Drupal haikus so what I am NOT I am

00:00:25,830 --> 00:00:31,019
NOT a project manager I'm not a

00:00:28,560 --> 00:00:32,669
certified scrum master so I want to make

00:00:31,019 --> 00:00:35,820
it clear that what I'm presenting our

00:00:32,669 --> 00:00:38,520
are the opinions of someone who has

00:00:35,820 --> 00:00:41,550
worked as a developer as a team lead on

00:00:38,520 --> 00:00:43,770
a number of projects and I've I felt the

00:00:41,550 --> 00:00:46,230
difference between projects where the

00:00:43,770 --> 00:00:48,539
process works it works for the team it

00:00:46,230 --> 00:00:50,129
works for the client it works for the

00:00:48,539 --> 00:00:52,800
work being done and I've I've felt

00:00:50,129 --> 00:00:55,199
projects where where that's not the case

00:00:52,800 --> 00:00:57,870
or the processes and practices being

00:00:55,199 --> 00:00:59,879
used either don't fit the team or don't

00:00:57,870 --> 00:01:03,030
fit the client or don't fit the budget

00:00:59,879 --> 00:01:04,949
so my interest in this is largely coming

00:01:03,030 --> 00:01:06,930
first and foremost from my experience as

00:01:04,949 --> 00:01:08,670
a developer on a number of teams as a

00:01:06,930 --> 00:01:13,229
freelancer working on small teams

00:01:08,670 --> 00:01:15,360
working on scrum teams as large as 15

00:01:13,229 --> 00:01:18,450
which I found out in in doing my

00:01:15,360 --> 00:01:20,670
research was too big hand and against

00:01:18,450 --> 00:01:23,250
the advice of a lot of the scrum

00:01:20,670 --> 00:01:25,020
community so I'm also interested in

00:01:23,250 --> 00:01:27,060
these conversations around agile

00:01:25,020 --> 00:01:29,130
methodologies because they really remind

00:01:27,060 --> 00:01:31,409
me of all the conversations I've had in

00:01:29,130 --> 00:01:33,570
the improv comedy community I started

00:01:31,409 --> 00:01:36,030
doing improv comedy when I was 15 years

00:01:33,570 --> 00:01:38,220
old in high school and improvisers love

00:01:36,030 --> 00:01:40,259
to talk about the different forms of

00:01:38,220 --> 00:01:42,509
improv comedy that they use some

00:01:40,259 --> 00:01:44,159
improvisers use really strict forms of

00:01:42,509 --> 00:01:46,740
improv comedy where there are clear

00:01:44,159 --> 00:01:48,630
rules as to how many people should be in

00:01:46,740 --> 00:01:50,520
a given scene how many people should be

00:01:48,630 --> 00:01:52,170
in the next scene when you bring out all

00:01:50,520 --> 00:01:53,280
the performers for a group scene and

00:01:52,170 --> 00:01:55,110
there are very clear rules and

00:01:53,280 --> 00:01:56,820
procedures for when you do which things

00:01:55,110 --> 00:01:58,829
there are also forms where it's much

00:01:56,820 --> 00:02:00,509
looser where you have guidelines and

00:01:58,829 --> 00:02:02,610
suggestions and you try and feel it out

00:02:00,509 --> 00:02:04,530
as you go and as I heard more and more

00:02:02,610 --> 00:02:06,659
about the agile community starting about

00:02:04,530 --> 00:02:08,459
five years ago all the conversations and

00:02:06,659 --> 00:02:11,430
ideas i heard reminded me of things I

00:02:08,459 --> 00:02:13,379
heard an improv comedy and a bunch of

00:02:11,430 --> 00:02:13,890
other communities I'm also here because

00:02:13,379 --> 00:02:16,080
I

00:02:13,890 --> 00:02:18,959
for pantheon and pantheons long-term

00:02:16,080 --> 00:02:21,330
success is tied to our ability to enable

00:02:18,959 --> 00:02:23,459
developers and development teams to work

00:02:21,330 --> 00:02:26,250
the way they want to work we think we

00:02:23,459 --> 00:02:29,010
have a strong technological advantage we

00:02:26,250 --> 00:02:30,750
think our technology is pretty great we

00:02:29,010 --> 00:02:32,700
now have well over a hundred thousand

00:02:30,750 --> 00:02:34,800
websites running on our platform we're

00:02:32,700 --> 00:02:37,050
serving over a billion page views every

00:02:34,800 --> 00:02:39,420
month thousands of developers are using

00:02:37,050 --> 00:02:42,000
our platform and we think the key to our

00:02:39,420 --> 00:02:44,280
success so far has been standardizing

00:02:42,000 --> 00:02:45,750
the right things we don't standardize

00:02:44,280 --> 00:02:47,820
everything but we standardize things

00:02:45,750 --> 00:02:49,709
like engine X configuration we

00:02:47,820 --> 00:02:51,750
standardize things like get branch names

00:02:49,709 --> 00:02:53,910
and and we think we've made a lot of

00:02:51,750 --> 00:02:56,519
good decisions pantheon comes from an

00:02:53,910 --> 00:02:58,769
agency background our founders were

00:02:56,519 --> 00:03:00,239
running agencies so they were working

00:02:58,769 --> 00:03:03,300
with different hosting environments like

00:03:00,239 --> 00:03:04,650
shared hosting like single VMs they made

00:03:03,300 --> 00:03:06,000
a name for themselves in the Drupal

00:03:04,650 --> 00:03:09,269
community by getting really good at

00:03:06,000 --> 00:03:11,340
setting up custom hosting clusters that

00:03:09,269 --> 00:03:13,050
could handle really large traffic

00:03:11,340 --> 00:03:15,450
situations eventually they started

00:03:13,050 --> 00:03:16,680
pantheon because they felt that they

00:03:15,450 --> 00:03:18,000
were in a situation like this where

00:03:16,680 --> 00:03:20,040
there are too many different things

00:03:18,000 --> 00:03:22,049
going on too many different release

00:03:20,040 --> 00:03:24,060
procedures to many different workflows

00:03:22,049 --> 00:03:26,489
being used by different teams and these

00:03:24,060 --> 00:03:28,410
workflows were varying not necessarily

00:03:26,489 --> 00:03:30,000
for intentional reasons but just because

00:03:28,410 --> 00:03:31,860
different decisions got made on

00:03:30,000 --> 00:03:33,090
different projects so Pantheon works a

00:03:31,860 --> 00:03:35,340
little bit more like this whether or not

00:03:33,090 --> 00:03:36,989
it's a a large site or a small site

00:03:35,340 --> 00:03:39,660
developers can think about the

00:03:36,989 --> 00:03:42,390
technological architecture in basically

00:03:39,660 --> 00:03:44,250
the same way so we feel pretty good

00:03:42,390 --> 00:03:46,650
about this however long term we know we

00:03:44,250 --> 00:03:49,860
really need to enable agencies to work

00:03:46,650 --> 00:03:52,950
they work the way they want to work so

00:03:49,860 --> 00:03:56,130
the too long didn't read version of my

00:03:52,950 --> 00:03:58,769
my presentation i think is summed up in

00:03:56,130 --> 00:04:00,269
this quote from dan north dan north is

00:03:58,769 --> 00:04:02,130
the guy who coined the term behavior

00:04:00,269 --> 00:04:03,180
driven development i'll talk a little

00:04:02,130 --> 00:04:06,150
bit more about behavior driven

00:04:03,180 --> 00:04:08,519
development a little bit later in a blog

00:04:06,150 --> 00:04:10,170
post from from july even after i

00:04:08,519 --> 00:04:12,690
submitted this this session but i found

00:04:10,170 --> 00:04:15,090
out this really summed it up so the

00:04:12,690 --> 00:04:16,620
original motto of scrum is inspect and

00:04:15,090 --> 00:04:19,590
adapt and that's an idea i'll be talking

00:04:16,620 --> 00:04:21,570
about a lot we want to inspect and adapt

00:04:19,590 --> 00:04:23,640
both the work that we're doing like the

00:04:21,570 --> 00:04:25,740
actual product we're producing we want

00:04:23,640 --> 00:04:27,720
to inspect it make sure it does what

00:04:25,740 --> 00:04:29,070
it's supposed to do and if not we adapt

00:04:27,720 --> 00:04:31,410
product we're also supposed to do that

00:04:29,070 --> 00:04:34,770
with ourselves inspect and adapt

00:04:31,410 --> 00:04:36,720
ourselves our team revise our team as we

00:04:34,770 --> 00:04:39,210
go so Dan North is suggesting that we do

00:04:36,720 --> 00:04:41,640
that for the methodologies that we use

00:04:39,210 --> 00:04:43,530
we should look at each of our processes

00:04:41,640 --> 00:04:45,720
if we're having morning stand-up

00:04:43,530 --> 00:04:47,610
meetings we should ask ourselves what do

00:04:45,720 --> 00:04:49,710
we really want from that daily scrum

00:04:47,610 --> 00:04:53,610
meeting and are we getting it if not

00:04:49,710 --> 00:04:56,010
perhaps we we change so a lot of agile

00:04:53,610 --> 00:04:58,980
methodologies really emphasize first

00:04:56,010 --> 00:05:01,340
identifying where you are right now so I

00:04:58,980 --> 00:05:03,990
want to identify the assumptions about

00:05:01,340 --> 00:05:05,910
this group of people the assumptions I'm

00:05:03,990 --> 00:05:08,460
making about the people who come to the

00:05:05,910 --> 00:05:10,410
project management track sessions at at

00:05:08,460 --> 00:05:13,080
drupalcon so I'm assuming that you're a

00:05:10,410 --> 00:05:15,480
part of a team that makes websites may

00:05:13,080 --> 00:05:17,550
be that that can feel like a team of one

00:05:15,480 --> 00:05:20,130
at sometimes I'm assuming that your team

00:05:17,550 --> 00:05:22,830
makes new websites i'm also assuming

00:05:20,130 --> 00:05:25,560
that some of your work is maintaining

00:05:22,830 --> 00:05:27,270
old or pre-existing websites and then

00:05:25,560 --> 00:05:29,460
i'm also assuming that you do other

00:05:27,270 --> 00:05:31,950
things if you're an agency i'm assuming

00:05:29,460 --> 00:05:33,510
you're your agency perhaps has a blog

00:05:31,950 --> 00:05:35,820
and part of your responsibilities are

00:05:33,510 --> 00:05:38,730
writing blog posts perhaps your agency

00:05:35,820 --> 00:05:40,620
maintains some open source modules if if

00:05:38,730 --> 00:05:42,780
your in-house at a large company perhaps

00:05:40,620 --> 00:05:44,430
you're a part of a marketing team that

00:05:42,780 --> 00:05:46,650
in addition to the website baby you're

00:05:44,430 --> 00:05:48,479
responsible for videos print materials

00:05:46,650 --> 00:05:50,400
things other than the website I'm

00:05:48,479 --> 00:05:52,979
assuming that you have some separation

00:05:50,400 --> 00:05:56,550
between your stakeholders and the team

00:05:52,979 --> 00:05:58,620
working on the websites and I'm assuming

00:05:56,550 --> 00:06:01,590
that the making of new web sites

00:05:58,620 --> 00:06:03,660
especially Drupal 8 websites feels like

00:06:01,590 --> 00:06:06,210
one of the most complex things if not

00:06:03,660 --> 00:06:08,100
the most complex time-consuming thing

00:06:06,210 --> 00:06:10,860
that you're doing and I'm also assuming

00:06:08,100 --> 00:06:13,169
that it's the thing you want to agile if

00:06:10,860 --> 00:06:15,479
I it seems like the most complex thing

00:06:13,169 --> 00:06:16,979
with the most moving pieces so that's

00:06:15,479 --> 00:06:19,610
the thing we should be focusing on

00:06:16,979 --> 00:06:22,110
because it's it's the highest value a

00:06:19,610 --> 00:06:23,580
piece of work that that you're doing so

00:06:22,110 --> 00:06:25,410
I'm assuming you've then felt some pain

00:06:23,580 --> 00:06:28,020
points especially around the making of

00:06:25,410 --> 00:06:30,270
new websites I'm assuming that at some

00:06:28,020 --> 00:06:32,430
point you've tried to produce a detailed

00:06:30,270 --> 00:06:34,050
plan early on in a project that

00:06:32,430 --> 00:06:36,630
identifies all the work that you're

00:06:34,050 --> 00:06:39,090
going to do for for this new website and

00:06:36,630 --> 00:06:41,030
I'm assuming that that has been painful

00:06:39,090 --> 00:06:43,430
at times that at times you

00:06:41,030 --> 00:06:45,860
confusion between your developers trying

00:06:43,430 --> 00:06:48,110
to work with that detailed plan and the

00:06:45,860 --> 00:06:50,690
person who made the plan up front maybe

00:06:48,110 --> 00:06:52,340
someone decides very early on in a

00:06:50,690 --> 00:06:54,290
project we're going to use field

00:06:52,340 --> 00:06:56,090
collection the person who gets that

00:06:54,290 --> 00:06:59,060
detailed plan maybe three months later

00:06:56,090 --> 00:07:01,250
sees that may not know why why field

00:06:59,060 --> 00:07:03,050
collection is that a suggestion do we

00:07:01,250 --> 00:07:06,170
really need field collection instead of

00:07:03,050 --> 00:07:09,080
paragraphs a module or in line entity

00:07:06,170 --> 00:07:12,470
form I'm also assuming that in addition

00:07:09,080 --> 00:07:13,700
to confusion among your team you may not

00:07:12,470 --> 00:07:16,010
be getting feedback from your

00:07:13,700 --> 00:07:18,020
stakeholders early enough maybe if a

00:07:16,010 --> 00:07:19,730
stakeholder sees a detailed plan they

00:07:18,020 --> 00:07:22,400
may not know exactly what to do with it

00:07:19,730 --> 00:07:24,320
they may think this looks like a solid

00:07:22,400 --> 00:07:25,700
plan i'm working with professionals i'm

00:07:24,320 --> 00:07:27,500
just going to wait until i see the

00:07:25,700 --> 00:07:29,960
finished product and then i'll give

00:07:27,500 --> 00:07:31,280
feedback and and that often doesn't work

00:07:29,960 --> 00:07:33,170
out very well because often that's

00:07:31,280 --> 00:07:36,500
that's simply too late so your client

00:07:33,170 --> 00:07:39,470
may ask too late for a change and in

00:07:36,500 --> 00:07:41,120
that moment as a caring professional

00:07:39,470 --> 00:07:43,270
I've certainly been in this position I

00:07:41,120 --> 00:07:45,380
want to do what my client is asking me

00:07:43,270 --> 00:07:47,330
three months four months six months

00:07:45,380 --> 00:07:48,890
after the project has started and I

00:07:47,330 --> 00:07:52,070
don't always know if I can give that to

00:07:48,890 --> 00:07:54,140
them so feeling those pain points I I

00:07:52,070 --> 00:07:56,900
think maybe you think we're currently

00:07:54,140 --> 00:07:59,510
working with too much rigidity we need

00:07:56,900 --> 00:08:01,670
more agility they've probably never said

00:07:59,510 --> 00:08:04,880
it quite like that but I've certainly

00:08:01,670 --> 00:08:06,770
felt that in some way shape or form so a

00:08:04,880 --> 00:08:10,820
number of other people in the software

00:08:06,770 --> 00:08:13,160
community have felt that pain and about

00:08:10,820 --> 00:08:15,170
15 years ago now a number of prominent

00:08:13,160 --> 00:08:17,300
thinkers in the software development

00:08:15,170 --> 00:08:19,010
community representatives from the scrum

00:08:17,300 --> 00:08:21,710
community which predates the agile

00:08:19,010 --> 00:08:23,630
manifesto representatives from extreme

00:08:21,710 --> 00:08:25,880
programming came together and they wrote

00:08:23,630 --> 00:08:28,760
the manifesto for agile software

00:08:25,880 --> 00:08:30,200
development and and some of them are a

00:08:28,760 --> 00:08:32,060
little bit sore about it now just

00:08:30,200 --> 00:08:34,460
getting called the agile manifesto they

00:08:32,060 --> 00:08:37,130
really emphasize size it is agile

00:08:34,460 --> 00:08:38,990
software development that the key here

00:08:37,130 --> 00:08:41,140
is the software development part so the

00:08:38,990 --> 00:08:43,670
manifesto gives us these these

00:08:41,140 --> 00:08:45,800
suggestions these guidelines that

00:08:43,670 --> 00:08:48,080
individuals and interactions are more

00:08:45,800 --> 00:08:50,060
important than processes and tools we

00:08:48,080 --> 00:08:51,590
still have processes and tools of course

00:08:50,060 --> 00:08:53,480
but when faced with the choice between

00:08:51,590 --> 00:08:54,830
the two we should be prioritizing our

00:08:53,480 --> 00:08:57,020
individuals and our

00:08:54,830 --> 00:08:58,730
interactions over processes and tools we

00:08:57,020 --> 00:09:00,370
should be prioritizing working software

00:08:58,730 --> 00:09:02,720
over comprehensive documentation

00:09:00,370 --> 00:09:04,100
documentation is great but if the

00:09:02,720 --> 00:09:05,900
software doesn't work in the first place

00:09:04,100 --> 00:09:07,790
the documentation isn't going to do us

00:09:05,900 --> 00:09:09,940
any good we should be focusing on

00:09:07,790 --> 00:09:12,860
customer collaboration rather than

00:09:09,940 --> 00:09:15,200
focusing on on contracts and we should

00:09:12,860 --> 00:09:17,890
measure our success by our ability to

00:09:15,200 --> 00:09:20,300
respond to changes rather than

00:09:17,890 --> 00:09:23,570
successfully executing a plan that was

00:09:20,300 --> 00:09:25,250
set months ago so how do you do that so

00:09:23,570 --> 00:09:27,560
that those are those are some big ideas

00:09:25,250 --> 00:09:30,860
how do we actually do that so one

00:09:27,560 --> 00:09:32,960
suggestion from a person who is there

00:09:30,860 --> 00:09:35,300
how do you work with more agility you

00:09:32,960 --> 00:09:38,030
can find out where you are you take a

00:09:35,300 --> 00:09:40,610
small step towards your goal you adjust

00:09:38,030 --> 00:09:42,560
based on on your your understanding you

00:09:40,610 --> 00:09:44,240
adjust based on what you learned and

00:09:42,560 --> 00:09:47,030
then you repeat so this comes from a

00:09:44,240 --> 00:09:49,730
blog post from Dave Thomas the blog post

00:09:47,030 --> 00:09:52,040
was titled agile is dead long live

00:09:49,730 --> 00:09:54,980
agility he is responding to what he saw

00:09:52,040 --> 00:09:57,110
as too much prescriptive pneus in indy

00:09:54,980 --> 00:10:00,170
agile community so he suggests this

00:09:57,110 --> 00:10:02,030
loser framework this is still a fairly

00:10:00,170 --> 00:10:05,540
loose framework this doesn't tell you

00:10:02,030 --> 00:10:07,190
what do you do on Monday this is a this

00:10:05,540 --> 00:10:08,510
is more specific than the agile

00:10:07,190 --> 00:10:11,840
manifesto but it doesn't tell you

00:10:08,510 --> 00:10:13,190
exactly what you do monday at at eight

00:10:11,840 --> 00:10:17,090
a.m. in the morning when you're getting

00:10:13,190 --> 00:10:20,030
started this is this is a one example of

00:10:17,090 --> 00:10:22,580
this dichotomy between a manifesto and a

00:10:20,030 --> 00:10:24,620
manifestation humans have been talking

00:10:22,580 --> 00:10:27,110
about this separation for literally

00:10:24,620 --> 00:10:29,150
millenia going back to at least the the

00:10:27,110 --> 00:10:30,970
allegory of the cave we've had this idea

00:10:29,150 --> 00:10:33,470
that there's a separation between

00:10:30,970 --> 00:10:35,780
abstract ideas and there are more

00:10:33,470 --> 00:10:37,730
visible manifestations we see this all

00:10:35,780 --> 00:10:40,370
over human experience I certainly saw it

00:10:37,730 --> 00:10:43,040
in improv comedy you see it in in sports

00:10:40,370 --> 00:10:44,990
in basketball a basketball team may

00:10:43,040 --> 00:10:46,280
think the way we win well first we have

00:10:44,990 --> 00:10:47,780
to get the ball in the hoop the way we

00:10:46,280 --> 00:10:49,400
do that is by getting it to our best

00:10:47,780 --> 00:10:51,350
shooters the way we do that is by

00:10:49,400 --> 00:10:53,210
passing the ball we need open passing

00:10:51,350 --> 00:10:55,220
lanes how do we get open passing lanes

00:10:53,210 --> 00:10:57,530
we use the triangle offense all right

00:10:55,220 --> 00:10:59,420
that is a very specific manifestation

00:10:57,530 --> 00:11:01,910
that's a prescriptive set of guidelines

00:10:59,420 --> 00:11:04,820
the triangle offense that can get you to

00:11:01,910 --> 00:11:06,260
this bigger idea of a basketball team or

00:11:04,820 --> 00:11:08,450
a soccer team are really just about any

00:11:06,260 --> 00:11:11,810
sport trying to control the open space

00:11:08,450 --> 00:11:13,490
allow them to score so we have this this

00:11:11,810 --> 00:11:15,590
tension here between we're trying to

00:11:13,490 --> 00:11:18,800
fulfill this big idea and we're also

00:11:15,590 --> 00:11:20,300
getting really specific recommendations

00:11:18,800 --> 00:11:22,370
for how to do that and sometimes those

00:11:20,300 --> 00:11:23,870
specific recommendations can end up

00:11:22,370 --> 00:11:25,820
being counterproductive they can get in

00:11:23,870 --> 00:11:28,670
the way so again from that Dan north

00:11:25,820 --> 00:11:31,460
blog post scrum has become the dominant

00:11:28,670 --> 00:11:34,280
form of of agile a lot of people just

00:11:31,460 --> 00:11:37,700
use them interchangeably I should say a

00:11:34,280 --> 00:11:39,770
Gillette so if you've been using agile

00:11:37,700 --> 00:11:43,160
techniques in the last 15 years you've

00:11:39,770 --> 00:11:45,170
probably heard of of scrum and and Dan

00:11:43,160 --> 00:11:46,220
north and a lot of these thinkers think

00:11:45,170 --> 00:11:48,770
that they should not be used

00:11:46,220 --> 00:11:50,810
interchangeably so if I'm going to talk

00:11:48,770 --> 00:11:53,960
about scrum I'm I'm setting it up here

00:11:50,810 --> 00:11:56,090
as a prescriptive foil to to compare

00:11:53,960 --> 00:11:58,730
against let's talk about what scrum

00:11:56,090 --> 00:12:01,550
suggests so the heart of a scrum here is

00:11:58,730 --> 00:12:02,830
the sprint and forgive me for reading

00:12:01,550 --> 00:12:05,270
some notes but I want to get this

00:12:02,830 --> 00:12:07,850
exactly right because scrum is is very

00:12:05,270 --> 00:12:09,830
particular about getting the rules

00:12:07,850 --> 00:12:12,350
exactly right so the first concept that

00:12:09,830 --> 00:12:13,880
we have here is the product backlog so

00:12:12,350 --> 00:12:15,980
the product backlog is an ordered list

00:12:13,880 --> 00:12:17,810
of everything that might be needed and

00:12:15,980 --> 00:12:20,540
the product and it's the single source

00:12:17,810 --> 00:12:22,670
of requirements for anything to be any

00:12:20,540 --> 00:12:24,890
changes to be made to the product the

00:12:22,670 --> 00:12:26,950
product owner is responsible for the

00:12:24,890 --> 00:12:29,120
product backlog including its contents

00:12:26,950 --> 00:12:31,430
availability and ordering so this brings

00:12:29,120 --> 00:12:33,620
us to the concept of the product owner

00:12:31,430 --> 00:12:35,630
if you're a web agency or product owner

00:12:33,620 --> 00:12:37,910
I think ideally is someone at your

00:12:35,630 --> 00:12:39,860
client company someone who best

00:12:37,910 --> 00:12:41,720
understands the needs of the project

00:12:39,860 --> 00:12:44,450
someone who best understands the work

00:12:41,720 --> 00:12:46,190
that is needed and that product owner is

00:12:44,450 --> 00:12:48,800
then responsible for maximizing the

00:12:46,190 --> 00:12:50,000
value of the product and the the value

00:12:48,800 --> 00:12:52,130
of the work done by the development team

00:12:50,000 --> 00:12:54,290
so that brings us to the development

00:12:52,130 --> 00:12:56,200
team the development team consists of

00:12:54,290 --> 00:12:58,760
professionals who do the work of

00:12:56,200 --> 00:13:01,700
delivering a potentially releasable

00:12:58,760 --> 00:13:03,770
increment of done product at the end of

00:13:01,700 --> 00:13:06,290
each sprint that's kind of a mouthful a

00:13:03,770 --> 00:13:08,690
potentially releasable increment of done

00:13:06,290 --> 00:13:10,010
product at the end of each sprint the

00:13:08,690 --> 00:13:12,290
product owner and the development team

00:13:10,010 --> 00:13:16,760
meet at the beginning of each sprint in

00:13:12,290 --> 00:13:18,800
the indie sprint planning meeting so the

00:13:16,760 --> 00:13:21,620
sprint planning meeting is there to

00:13:18,800 --> 00:13:22,790
answer at least two questions what can

00:13:21,620 --> 00:13:24,320
be delivered in the

00:13:22,790 --> 00:13:26,900
increment resulting from the upcoming

00:13:24,320 --> 00:13:30,410
sprint and how will the work needed to

00:13:26,900 --> 00:13:33,410
deliver the increment be achieved that

00:13:30,410 --> 00:13:36,080
set of questions is guided by the scrum

00:13:33,410 --> 00:13:38,930
master the scrum master is the person

00:13:36,080 --> 00:13:42,020
responsible for ensuring that a scrum is

00:13:38,930 --> 00:13:43,490
understood by the team and enacted scrum

00:13:42,020 --> 00:13:46,340
masters do this by ensuring that the

00:13:43,490 --> 00:13:49,640
scrum team adheres to the scrum theories

00:13:46,340 --> 00:13:52,670
principles practices and rules again

00:13:49,640 --> 00:13:54,440
scrum is big on theory practices and end

00:13:52,670 --> 00:13:56,330
rule so the scrum master is guiding all

00:13:54,440 --> 00:13:58,220
of these meetings guiding each of these

00:13:56,330 --> 00:14:01,190
ceremonies making sure that the rules of

00:13:58,220 --> 00:14:03,530
scrum are followed this then brings us

00:14:01,190 --> 00:14:06,170
to the daily scrum after we have agreed

00:14:03,530 --> 00:14:08,240
in our sprint sprint planning meeting on

00:14:06,170 --> 00:14:10,730
a sprint backlog all the work we're

00:14:08,240 --> 00:14:12,770
going to do in our our sprint we then

00:14:10,730 --> 00:14:14,660
have our daily sprint meetings every

00:14:12,770 --> 00:14:17,300
morning we have a 15 minute meeting

00:14:14,660 --> 00:14:18,920
capped at 15 minutes by the scrum master

00:14:17,300 --> 00:14:21,230
we answer at least these three questions

00:14:18,920 --> 00:14:23,480
what did i do yesterday that help the

00:14:21,230 --> 00:14:25,670
development team meet the Sprint goal

00:14:23,480 --> 00:14:27,770
what will I do today to help the

00:14:25,670 --> 00:14:29,660
development team meet the Sprint goal

00:14:27,770 --> 00:14:32,120
and do I see any impediments that

00:14:29,660 --> 00:14:33,920
prevent me or the development team from

00:14:32,120 --> 00:14:36,350
meeting the Sprint goal so the

00:14:33,920 --> 00:14:39,020
development team uses the daily scrum to

00:14:36,350 --> 00:14:40,670
inspect the progress towards the Sprint

00:14:39,020 --> 00:14:43,130
goal against crumb is really big on

00:14:40,670 --> 00:14:44,930
inspecting and adapting you inspect the

00:14:43,130 --> 00:14:48,110
work that you're doing and and you

00:14:44,930 --> 00:14:49,430
inspect the team itself so at the end of

00:14:48,110 --> 00:14:51,560
the Sprint we come to the sprint review

00:14:49,430 --> 00:14:53,510
meeting the Sprint review is held at the

00:14:51,560 --> 00:14:55,850
end of the sprint to inspect the

00:14:53,510 --> 00:14:58,220
increment and adapt the product backlog

00:14:55,850 --> 00:15:00,830
if needed so we're really moving in a

00:14:58,220 --> 00:15:02,930
circle here so the result of the Sprint

00:15:00,830 --> 00:15:05,780
review is a revised product backlog that

00:15:02,930 --> 00:15:07,880
defines the probable backlog items for

00:15:05,780 --> 00:15:09,680
the next sprint so by the end of one

00:15:07,880 --> 00:15:11,900
sprint we should know roughly what we're

00:15:09,680 --> 00:15:13,580
going to work on in the next sprint

00:15:11,900 --> 00:15:15,980
before we do so we have the sprint

00:15:13,580 --> 00:15:17,930
retrospective meeting the Sprint

00:15:15,980 --> 00:15:20,840
retrospective is an opportunity for the

00:15:17,930 --> 00:15:23,360
scrum team to inspect itself and create

00:15:20,840 --> 00:15:25,400
a plan for improvements to be enacted

00:15:23,360 --> 00:15:27,560
during the next sprint and and this

00:15:25,400 --> 00:15:31,010
really is the idea that I grabbed on to

00:15:27,560 --> 00:15:34,880
hear that i'm setting scrum up as a as a

00:15:31,010 --> 00:15:36,470
really prescriptive rigid foil for for

00:15:34,880 --> 00:15:38,660
what i'm suggesting here and yet

00:15:36,470 --> 00:15:40,610
in scrum itself is this suggestion that

00:15:38,660 --> 00:15:42,740
the team is always inspecting and

00:15:40,610 --> 00:15:45,860
adapting itself the team is always

00:15:42,740 --> 00:15:49,580
evolving and that's really the heart of

00:15:45,860 --> 00:15:51,320
the suggestion that I'm giving here the

00:15:49,580 --> 00:15:53,810
cover of the scrum guide so the thing

00:15:51,320 --> 00:15:56,840
that I've been quoting from you can find

00:15:53,810 --> 00:15:59,000
this on and scrum door scrum org I think

00:15:56,840 --> 00:16:01,280
it is so the title of this document is

00:15:59,000 --> 00:16:05,030
the scrum guide the definitive guide to

00:16:01,280 --> 00:16:07,310
scrum the rules of the game and I like

00:16:05,030 --> 00:16:10,340
to think in in metaphors sometimes and

00:16:07,310 --> 00:16:13,550
scrum presents itself as the game being

00:16:10,340 --> 00:16:17,300
played so this here is the the set of

00:16:13,550 --> 00:16:19,160
rules for the game of scrum I don't like

00:16:17,300 --> 00:16:21,470
that metaphor all that much I don't like

00:16:19,160 --> 00:16:24,350
to think that the thing I'm doing is

00:16:21,470 --> 00:16:25,520
scrum I like to think that the thing I'm

00:16:24,350 --> 00:16:27,560
doing is building a website or

00:16:25,520 --> 00:16:31,160
delivering value to my client and scrum

00:16:27,560 --> 00:16:32,990
is more the strategy that i'm using yet

00:16:31,160 --> 00:16:36,590
scrum tells us that scrums rules

00:16:32,990 --> 00:16:38,720
artifacts events are immutable so you

00:16:36,590 --> 00:16:41,810
can implement parts of scrum but when

00:16:38,720 --> 00:16:44,150
you do so the result is not scrum scrum

00:16:41,810 --> 00:16:46,430
is big on defining what is and is not

00:16:44,150 --> 00:16:49,820
scrum you're either inside or you're

00:16:46,430 --> 00:16:52,190
outside so scrum is making some

00:16:49,820 --> 00:16:54,290
assumptions and these assumptions affect

00:16:52,190 --> 00:16:57,110
the way people do it and especially web

00:16:54,290 --> 00:16:59,090
agencies scrum comes from a world where

00:16:57,110 --> 00:17:01,250
where it's a reality that projects can

00:16:59,090 --> 00:17:02,840
be cancelled at any moment and when you

00:17:01,250 --> 00:17:05,210
have that baseline assumption it's

00:17:02,840 --> 00:17:07,550
extremely important that you do the most

00:17:05,210 --> 00:17:08,980
valuable thing first that's why scrum

00:17:07,550 --> 00:17:11,510
makes such a big deal out of

00:17:08,980 --> 00:17:13,220
prioritizing that backlog because if

00:17:11,510 --> 00:17:15,140
your project could be cancelled at any

00:17:13,220 --> 00:17:17,060
moment or if you could be thrown on to

00:17:15,140 --> 00:17:18,830
if your whole team could be taken off of

00:17:17,060 --> 00:17:20,180
that project put on to something else

00:17:18,830 --> 00:17:22,100
you don't get to come back to this

00:17:20,180 --> 00:17:23,360
project for a year it's really important

00:17:22,100 --> 00:17:25,310
that you do the most valuable thing

00:17:23,360 --> 00:17:27,680
first because if you don't then then

00:17:25,310 --> 00:17:29,630
you're wasting your time I don't think

00:17:27,680 --> 00:17:31,580
that that works very well for for web

00:17:29,630 --> 00:17:34,610
agencies were often the project being

00:17:31,580 --> 00:17:37,100
done is the replacement of a client's

00:17:34,610 --> 00:17:38,570
whole site that project probably isn't

00:17:37,100 --> 00:17:40,460
going to get cancelled they their

00:17:38,570 --> 00:17:43,550
website is five years old they need a

00:17:40,460 --> 00:17:45,890
new website cancellation isn't a huge

00:17:43,550 --> 00:17:48,410
risk so there's less of a need to

00:17:45,890 --> 00:17:49,440
carefully rank every single story

00:17:48,410 --> 00:17:52,500
against

00:17:49,440 --> 00:17:55,259
the other story scrum also assumes team

00:17:52,500 --> 00:17:57,509
continuity it assumes that there's going

00:17:55,259 --> 00:17:59,399
to build up kind of a in oral history

00:17:57,509 --> 00:18:01,769
within the team the team will have a

00:17:59,399 --> 00:18:03,509
collective knowledge base that's one of

00:18:01,769 --> 00:18:05,549
the reasons you can d prioritize

00:18:03,509 --> 00:18:07,200
documentation because everyone working

00:18:05,549 --> 00:18:08,850
on the project has been there since the

00:18:07,200 --> 00:18:10,080
beginning of the project is going to

00:18:08,850 --> 00:18:12,360
stay on until the end of the project

00:18:10,080 --> 00:18:14,850
that's not a reality that many web

00:18:12,360 --> 00:18:17,250
agencies can work inside of for a lot of

00:18:14,850 --> 00:18:20,100
web agencies team members are going to

00:18:17,250 --> 00:18:22,679
get shuffled around and as much as a web

00:18:20,100 --> 00:18:25,649
agency may try and work around that or

00:18:22,679 --> 00:18:27,990
avoid that it's it's just reality that

00:18:25,649 --> 00:18:31,710
team members get shift around vacation

00:18:27,990 --> 00:18:34,080
schedules can can throw things a for

00:18:31,710 --> 00:18:36,750
loop scrum is also assuming a high level

00:18:34,080 --> 00:18:39,059
of expertise expertise not only among

00:18:36,750 --> 00:18:40,710
the development team which which can be

00:18:39,059 --> 00:18:43,049
a pain point especially as you adopt a

00:18:40,710 --> 00:18:45,870
new technology the first Drupal 8 site

00:18:43,049 --> 00:18:47,940
your team builds you probably won't be

00:18:45,870 --> 00:18:50,370
at that expert level that you just left

00:18:47,940 --> 00:18:52,980
with Drupal 7 it's also assuming an

00:18:50,370 --> 00:18:55,470
expertise in the scrum master and the

00:18:52,980 --> 00:18:58,049
product owner role and it may not be

00:18:55,470 --> 00:19:00,210
reality that your client is an expert

00:18:58,049 --> 00:19:01,860
product owner you may want them to be an

00:19:00,210 --> 00:19:03,929
expert product owner capable of

00:19:01,860 --> 00:19:05,970
understanding all the dynamics of the

00:19:03,929 --> 00:19:08,850
project but that may not be a reality

00:19:05,970 --> 00:19:10,679
it's also assuming a certain starting

00:19:08,850 --> 00:19:15,509
point it's assuming a starting point

00:19:10,679 --> 00:19:17,100
that that is ripe for for scrum a great

00:19:15,509 --> 00:19:19,019
point that I think summed up this idea

00:19:17,100 --> 00:19:21,769
is that scrum starts with the right

00:19:19,019 --> 00:19:24,659
context and more flexible agile

00:19:21,769 --> 00:19:29,039
methodologies like konban improve the

00:19:24,659 --> 00:19:31,169
existing context so in a project at

00:19:29,039 --> 00:19:33,240
least as I found at scrum or has the

00:19:31,169 --> 00:19:36,029
attitude that if it's not working then

00:19:33,240 --> 00:19:37,620
it's the fault of the situation scrum is

00:19:36,029 --> 00:19:39,629
correct and something about the

00:19:37,620 --> 00:19:42,059
situation must be changed where as a

00:19:39,629 --> 00:19:44,309
philosophy like konban is more likely to

00:19:42,059 --> 00:19:46,830
assume that the given situation doesn't

00:19:44,309 --> 00:19:48,509
need to be judged you except where you

00:19:46,830 --> 00:19:50,250
are and you take a step in the right

00:19:48,509 --> 00:19:53,700
direction so there are still some

00:19:50,250 --> 00:19:55,379
advantages to strict scrum you're going

00:19:53,700 --> 00:19:57,960
to have volumes of literature that you

00:19:55,379 --> 00:19:59,129
can read that will answer questions for

00:19:57,960 --> 00:20:01,080
you you don't have to answer every

00:19:59,129 --> 00:20:03,020
single question for yourself there's a

00:20:01,080 --> 00:20:05,460
community of people that you can hire

00:20:03,020 --> 00:20:07,799
scrum practitioners really do suggest

00:20:05,460 --> 00:20:10,289
that you hire someone who's a certified

00:20:07,799 --> 00:20:12,330
scrum master who can be present at all

00:20:10,289 --> 00:20:14,250
of these meetings and guide your team so

00:20:12,330 --> 00:20:16,260
that when a question comes up how should

00:20:14,250 --> 00:20:18,210
we handle this situation this sprint

00:20:16,260 --> 00:20:19,980
seems to be going off the rails what do

00:20:18,210 --> 00:20:22,140
what do you do well you ask your

00:20:19,980 --> 00:20:25,140
certified scrum master what you do and

00:20:22,140 --> 00:20:27,120
and then come to an answer more quickly

00:20:25,140 --> 00:20:28,650
you also have the advantage of internal

00:20:27,120 --> 00:20:30,419
consistency if you're working at an

00:20:28,650 --> 00:20:33,330
agency that has multiple teams and

00:20:30,419 --> 00:20:35,460
everyone is doing strict scrum not only

00:20:33,330 --> 00:20:37,799
are you internal amongst yourselves

00:20:35,460 --> 00:20:39,090
you're also a consistent amongst

00:20:37,799 --> 00:20:41,070
yourselves internally you're also

00:20:39,090 --> 00:20:43,530
consistent with what the outside world

00:20:41,070 --> 00:20:46,200
and even your client possibly may be

00:20:43,530 --> 00:20:48,840
familiar with strict scrum practices and

00:20:46,200 --> 00:20:50,280
may even see that as a value and and a

00:20:48,840 --> 00:20:52,440
selling point that you can use for the

00:20:50,280 --> 00:20:56,580
outside world I still think this is is

00:20:52,440 --> 00:21:00,630
somewhat odd that agencies try to do one

00:20:56,580 --> 00:21:02,880
giant leap to a a specific practice or a

00:21:00,630 --> 00:21:06,900
philosophy that's all about baby steps

00:21:02,880 --> 00:21:09,240
so in in preparing for this presentation

00:21:06,900 --> 00:21:12,750
I looked at suggestions for how does a

00:21:09,240 --> 00:21:15,000
team adopt scrum and I found two main

00:21:12,750 --> 00:21:17,429
lines of suggestion either you do a big

00:21:15,000 --> 00:21:19,110
bang transition as it's called in a lot

00:21:17,429 --> 00:21:21,900
of the blog posts where your entire

00:21:19,110 --> 00:21:24,270
company switches overnight and this has

00:21:21,900 --> 00:21:27,990
some advantages you can reduce

00:21:24,270 --> 00:21:29,370
resistance if the messages were we're

00:21:27,990 --> 00:21:31,559
doing it we're doing it all at once

00:21:29,370 --> 00:21:33,750
we're leaving the old world behind you

00:21:31,559 --> 00:21:36,120
don't have different teams doing things

00:21:33,750 --> 00:21:38,190
in different ways and and creating

00:21:36,120 --> 00:21:40,470
friction amongst the teams internally

00:21:38,190 --> 00:21:42,570
and it'll be over more quickly is

00:21:40,470 --> 00:21:45,240
another point all these points come from

00:21:42,570 --> 00:21:47,070
a blog post from mountain goat software

00:21:45,240 --> 00:21:49,559
a great source of information really for

00:21:47,070 --> 00:21:52,440
all things scrum and and agile included

00:21:49,559 --> 00:21:53,970
the the other way of doing things that

00:21:52,440 --> 00:21:56,159
I've found other than a big bang

00:21:53,970 --> 00:21:59,429
transition was switching individual

00:21:56,159 --> 00:22:01,919
teams yep switching each team all at

00:21:59,429 --> 00:22:04,140
once so you may go team by team but for

00:22:01,919 --> 00:22:06,330
any one team it is a hard switch from

00:22:04,140 --> 00:22:09,360
the old way whatever the old way is to

00:22:06,330 --> 00:22:12,000
strict scrum so again this can be

00:22:09,360 --> 00:22:14,250
painful for a lot of agencies your

00:22:12,000 --> 00:22:15,750
client may not know enough to be the

00:22:14,250 --> 00:22:17,010
product owner you may not have a

00:22:15,750 --> 00:22:19,770
certified scrum mass

00:22:17,010 --> 00:22:22,320
on staff and it may not be realistic for

00:22:19,770 --> 00:22:24,630
for your agency or your company to hire

00:22:22,320 --> 00:22:28,230
a new person who's a certified scrum

00:22:24,630 --> 00:22:29,760
master just to play this role the person

00:22:28,230 --> 00:22:31,830
playing this role can do other things

00:22:29,760 --> 00:22:33,960
you don't need someone who is only the

00:22:31,830 --> 00:22:36,510
scrum master yet this still can be a

00:22:33,960 --> 00:22:39,840
blocker your internal teams may may be

00:22:36,510 --> 00:22:42,620
shifting you also may not have someone

00:22:39,840 --> 00:22:45,120
dedicated to a continuous integration

00:22:42,620 --> 00:22:48,360
process this is the pain point that I

00:22:45,120 --> 00:22:49,710
hear a lot in my role at Pantheon people

00:22:48,360 --> 00:22:51,540
come to us because they're making a

00:22:49,710 --> 00:22:54,210
technological shift or what at first

00:22:51,540 --> 00:22:55,440
feels like a technological shift from

00:22:54,210 --> 00:22:57,780
whatever they're they're hosting

00:22:55,440 --> 00:22:59,940
solution is and their development

00:22:57,780 --> 00:23:01,860
workflow solution has before pantheon to

00:22:59,940 --> 00:23:04,710
pantheon so we start with conversations

00:23:01,860 --> 00:23:06,990
like what branch what branching strategy

00:23:04,710 --> 00:23:09,840
do you use how do you do deployments and

00:23:06,990 --> 00:23:12,540
very quickly we uncover deeper problems

00:23:09,840 --> 00:23:14,940
and again to that point that scrum is

00:23:12,540 --> 00:23:17,460
assuming expertise scrum and agile

00:23:14,940 --> 00:23:20,580
methodologies as a whole work best when

00:23:17,460 --> 00:23:22,410
you when your tools are solid especially

00:23:20,580 --> 00:23:24,840
your continuous integration tools all

00:23:22,410 --> 00:23:26,880
these agile methodologies and

00:23:24,840 --> 00:23:29,190
philosophies emphasize the importance of

00:23:26,880 --> 00:23:30,830
knowing exactly where you are now so you

00:23:29,190 --> 00:23:33,420
can take a step in the right direction

00:23:30,830 --> 00:23:35,460
continuous integration is the way you

00:23:33,420 --> 00:23:37,020
validate on a technical level that you

00:23:35,460 --> 00:23:38,550
are where you think you are I've

00:23:37,020 --> 00:23:39,900
certainly been on projects that didn't

00:23:38,550 --> 00:23:42,510
have continuous integration where I

00:23:39,900 --> 00:23:44,900
closed a ticket saying it was done and

00:23:42,510 --> 00:23:47,310
we didn't really know that it was done

00:23:44,900 --> 00:23:49,830
until the project got further along

00:23:47,310 --> 00:23:52,140
because we didn't have environments that

00:23:49,830 --> 00:23:54,000
continuously tested our code I could

00:23:52,140 --> 00:23:56,760
close a ticket and not really know that

00:23:54,000 --> 00:23:59,670
it was done another pain point is the

00:23:56,760 --> 00:24:02,280
the philosophy of MVP Minimum Viable

00:23:59,670 --> 00:24:04,260
Product the idea here is that the work

00:24:02,280 --> 00:24:07,350
that you're doing is the creation of a

00:24:04,260 --> 00:24:09,450
product and that you want to create an

00:24:07,350 --> 00:24:12,210
early iteration of the product that can

00:24:09,450 --> 00:24:14,520
be released to the world can be usable

00:24:12,210 --> 00:24:16,350
by the general world and after you get

00:24:14,520 --> 00:24:18,510
to that point then you can prioritize

00:24:16,350 --> 00:24:20,610
the next most valuable thing at the next

00:24:18,510 --> 00:24:22,620
most valuable thing after that this can

00:24:20,610 --> 00:24:25,560
be very difficult when the thing you're

00:24:22,620 --> 00:24:27,930
building is not a new minimum viable

00:24:25,560 --> 00:24:30,480
product but a replacement for a mature

00:24:27,930 --> 00:24:31,980
website if you're building a replacement

00:24:30,480 --> 00:24:33,600
for a website that has stood for five

00:24:31,980 --> 00:24:35,490
years you're going to have a hard time

00:24:33,600 --> 00:24:38,100
with Minimum Viable Product thinking

00:24:35,490 --> 00:24:40,140
because your client is used to a website

00:24:38,100 --> 00:24:42,000
that's five years old that's very mature

00:24:40,140 --> 00:24:43,890
it has a mature feature set you'll have

00:24:42,000 --> 00:24:45,570
a hard time telling your client oh we

00:24:43,890 --> 00:24:47,700
don't need these features anymore we can

00:24:45,570 --> 00:24:50,400
launch this new Drupal 8 site that has

00:24:47,700 --> 00:24:54,419
fifty percent of the features of the old

00:24:50,400 --> 00:24:57,059
site MVP then may just be the the end of

00:24:54,419 --> 00:24:59,100
the project and if your MVP is when your

00:24:57,059 --> 00:25:01,350
budget runs out then it seems totally

00:24:59,100 --> 00:25:03,510
counterintuitive to me it's just the end

00:25:01,350 --> 00:25:05,340
of the the project also a lot of the

00:25:03,510 --> 00:25:09,470
scrum guidance I think best applies to

00:25:05,340 --> 00:25:12,660
that post MVP stage especially backlog

00:25:09,470 --> 00:25:15,059
prioritization if if you have 50 stories

00:25:12,660 --> 00:25:16,770
that are required to even launch the

00:25:15,059 --> 00:25:19,110
site then I think it's less critical to

00:25:16,770 --> 00:25:21,270
order those by highest value because

00:25:19,110 --> 00:25:24,360
they all have to be done before the site

00:25:21,270 --> 00:25:26,309
can be launched uh and and there's also

00:25:24,360 --> 00:25:28,260
a natural tension between this product

00:25:26,309 --> 00:25:31,860
mindset and if you're in a web agency

00:25:28,260 --> 00:25:34,410
your your core offering is a service not

00:25:31,860 --> 00:25:37,980
necessarily the the product of the

00:25:34,410 --> 00:25:39,570
website being built so you may be trying

00:25:37,980 --> 00:25:42,059
to use all the aspects of scrum but do

00:25:39,570 --> 00:25:44,010
you have control over the strategy the

00:25:42,059 --> 00:25:46,830
scope the structure the skeleton the

00:25:44,010 --> 00:25:48,870
surface these these five levels of a

00:25:46,830 --> 00:25:50,580
digital project come from this book I

00:25:48,870 --> 00:25:53,340
read a few years ago called the elements

00:25:50,580 --> 00:25:57,049
of user experience ona when I read this

00:25:53,340 --> 00:25:59,790
book that said nearly all digital

00:25:57,049 --> 00:26:00,990
projects have these five layers a light

00:25:59,790 --> 00:26:02,610
ball basically went off in my head

00:26:00,990 --> 00:26:04,799
because I realized for a lot of the

00:26:02,610 --> 00:26:07,380
projects that I was working on Drupal

00:26:04,799 --> 00:26:09,660
site builds we didn't have control over

00:26:07,380 --> 00:26:12,000
all five of these layers we didn't have

00:26:09,660 --> 00:26:14,370
control over strategy or scope at least

00:26:12,000 --> 00:26:16,620
the team implementing the site we got to

00:26:14,370 --> 00:26:18,840
make structural decisions about content

00:26:16,620 --> 00:26:21,840
types and modules and and skeletal

00:26:18,840 --> 00:26:23,700
decisions about you know even even more

00:26:21,840 --> 00:26:24,960
fine-grained implementation details and

00:26:23,700 --> 00:26:27,419
we can make decisions about the surface

00:26:24,960 --> 00:26:29,730
layer like like CSS but a lot of the

00:26:27,419 --> 00:26:32,549
scrum tools like user stories are really

00:26:29,730 --> 00:26:35,040
meant to I address these first two

00:26:32,549 --> 00:26:37,770
layers of strategy and scope and if your

00:26:35,040 --> 00:26:39,659
team doesn't have control over strategy

00:26:37,770 --> 00:26:41,280
and scope if your client doesn't want

00:26:39,659 --> 00:26:43,710
your input if they just want you to

00:26:41,280 --> 00:26:44,039
build the website then using tools meant

00:26:43,710 --> 00:26:46,109
to a

00:26:44,039 --> 00:26:48,359
dress those top two layers won't be all

00:26:46,109 --> 00:26:50,039
that helpful for you because if all they

00:26:48,359 --> 00:26:52,470
want is the site to be built and you're

00:26:50,039 --> 00:26:54,869
trying to address strategy and scope

00:26:52,470 --> 00:26:58,769
questions you may just be spinning your

00:26:54,869 --> 00:27:01,019
wheels so I talked to a lot of agencies

00:26:58,769 --> 00:27:04,109
in my job and I hear a lot of well we

00:27:01,019 --> 00:27:07,289
don't do scrum we do waggle a mix of

00:27:04,109 --> 00:27:09,450
waterfall and agile or its scrum but

00:27:07,289 --> 00:27:11,070
it's it's not quite scrum it's a little

00:27:09,450 --> 00:27:13,019
bit different it's or its scrum Kanban

00:27:11,070 --> 00:27:15,090
at scrum bonnets scrum ashore we do a

00:27:13,019 --> 00:27:17,009
customer-centric process that bends the

00:27:15,090 --> 00:27:21,450
best of waterfall scrum extreme

00:27:17,009 --> 00:27:23,159
programming and NB DD and I think this

00:27:21,450 --> 00:27:25,289
sums it up really well we need to let go

00:27:23,159 --> 00:27:28,590
of the process guilt that's plaguing us

00:27:25,289 --> 00:27:31,169
there is no gold star for achieving a

00:27:28,590 --> 00:27:32,849
one hundred percent agile process I

00:27:31,169 --> 00:27:35,279
think this gets back to that idea of

00:27:32,849 --> 00:27:38,519
what is what is the game you're playing

00:27:35,279 --> 00:27:41,009
if the game is scrum then okay you are

00:27:38,519 --> 00:27:43,109
trying to get scrum points and do

00:27:41,009 --> 00:27:45,239
everything correctly because you're

00:27:43,109 --> 00:27:47,940
trying to get the perfect scrum score

00:27:45,239 --> 00:27:50,519
but most of the clients i worked with

00:27:47,940 --> 00:27:53,519
didn't care if we got the perfect scrum

00:27:50,519 --> 00:27:55,619
score they they cared if the website did

00:27:53,519 --> 00:27:57,029
what they wanted it to do they cared if

00:27:55,619 --> 00:27:59,460
if there are expectations about the

00:27:57,029 --> 00:28:02,340
website we're met so are you are you

00:27:59,460 --> 00:28:04,710
doing agile or are you auditing your

00:28:02,340 --> 00:28:08,039
clients content are you creating a brand

00:28:04,710 --> 00:28:10,139
strategy making a website what is the

00:28:08,039 --> 00:28:13,289
thing that you're doing are you

00:28:10,139 --> 00:28:17,789
delivering value or are you doing all of

00:28:13,289 --> 00:28:21,679
the the things of a scrum so agile is

00:28:17,789 --> 00:28:24,330
not what you do agility is how you do it

00:28:21,679 --> 00:28:27,330
Dave Thomas again that the guy who wrote

00:28:24,330 --> 00:28:29,809
that blog post about agile is dead long

00:28:27,330 --> 00:28:32,309
live agility he really emphasizes that

00:28:29,809 --> 00:28:37,049
agility is is what you should be

00:28:32,309 --> 00:28:43,470
focusing on agility as a descriptor not

00:28:37,049 --> 00:28:45,269
agile as a noun so what what now how how

00:28:43,470 --> 00:28:47,669
do you how do you do what I'm talking

00:28:45,269 --> 00:28:49,830
about so again from that Dan north blog

00:28:47,669 --> 00:28:51,720
post the idea here is that for each of

00:28:49,830 --> 00:28:53,849
these scrum practices we should be

00:28:51,720 --> 00:28:56,070
asking ourselves what value do we really

00:28:53,849 --> 00:28:57,820
want from this what benefit is this

00:28:56,070 --> 00:29:00,250
practice really supposed to give

00:28:57,820 --> 00:29:03,000
as a team and if it's not giving us that

00:29:00,250 --> 00:29:06,640
value should we be doing it at all so

00:29:03,000 --> 00:29:08,710
user stories as an author of the agile

00:29:06,640 --> 00:29:11,170
manifesto I want that stupid story

00:29:08,710 --> 00:29:14,350
format to go away so that people can get

00:29:11,170 --> 00:29:17,110
to the essence of user stories so who

00:29:14,350 --> 00:29:19,750
here works off of user stories I worked

00:29:17,110 --> 00:29:22,840
off of user stories for quite a long

00:29:19,750 --> 00:29:26,320
time and writing good user stories is

00:29:22,840 --> 00:29:28,630
really really hard as I found I fell

00:29:26,320 --> 00:29:31,660
into I think each of these pitfalls I

00:29:28,630 --> 00:29:34,060
jumped to detailed solutions I wrote

00:29:31,660 --> 00:29:35,980
stories like as of something I want a

00:29:34,060 --> 00:29:38,020
list of five related news articles I

00:29:35,980 --> 00:29:42,100
don't think anyone using a website has

00:29:38,020 --> 00:29:44,320
ever said that mismatched personas you

00:29:42,100 --> 00:29:46,630
might write a story like as a shopper I

00:29:44,320 --> 00:29:49,300
want a fast checkout experience so that

00:29:46,630 --> 00:29:51,030
I don't abandon the cart shoppers don't

00:29:49,300 --> 00:29:54,070
care about shopping cart abandonment

00:29:51,030 --> 00:29:56,100
your stakeholders might care about that

00:29:54,070 --> 00:29:58,720
metric shopping cart abandonment is

00:29:56,100 --> 00:30:00,850
someone on the inside someone on the

00:29:58,720 --> 00:30:02,860
inside cares about that your shopper may

00:30:00,850 --> 00:30:05,620
want a fast check out for some reason

00:30:02,860 --> 00:30:07,420
other than protecting your metrics you

00:30:05,620 --> 00:30:09,190
also have the Goldilocks problem of user

00:30:07,420 --> 00:30:12,940
stories that are either too big or too

00:30:09,190 --> 00:30:16,840
small to be actionable in a single

00:30:12,940 --> 00:30:20,230
sprint dependencies in the idealized

00:30:16,840 --> 00:30:22,500
forum user stories should not depend on

00:30:20,230 --> 00:30:24,730
one another they should each be

00:30:22,500 --> 00:30:26,950
independently prioritize abul so that

00:30:24,730 --> 00:30:28,690
anyone could be pulled in based on its

00:30:26,950 --> 00:30:31,930
value not based on the order in which

00:30:28,690 --> 00:30:34,300
things need to get done and I think a

00:30:31,930 --> 00:30:36,940
really big risk is getting into the

00:30:34,300 --> 00:30:39,700
mentality that user story writing is the

00:30:36,940 --> 00:30:42,010
thing that you're doing I think what

00:30:39,700 --> 00:30:45,160
that that tweet from ron was emphasizing

00:30:42,010 --> 00:30:46,810
was that user stories are a tool to do

00:30:45,160 --> 00:30:48,760
something else the thing that you're

00:30:46,810 --> 00:30:51,130
doing is talking with your stakeholders

00:30:48,760 --> 00:30:53,950
trying to discover what they really need

00:30:51,130 --> 00:30:55,990
and user stories are just a way to do

00:30:53,950 --> 00:30:58,840
that however I certainly got into the

00:30:55,990 --> 00:31:01,120
mentality that what I'm doing is writing

00:30:58,840 --> 00:31:04,750
user stories rather than what i'm doing

00:31:01,120 --> 00:31:06,340
is talking to my stakeholders finding

00:31:04,750 --> 00:31:08,170
out what they really need finding out

00:31:06,340 --> 00:31:09,400
what the the website needs to do and

00:31:08,170 --> 00:31:11,320
then i'll capture that in the best

00:31:09,400 --> 00:31:11,730
format and maybe user stories are the

00:31:11,320 --> 00:31:14,130
best

00:31:11,730 --> 00:31:16,830
or maps for doing that but user stories

00:31:14,130 --> 00:31:19,290
are not the thing itself so right user

00:31:16,830 --> 00:31:21,060
stories where you are the user right

00:31:19,290 --> 00:31:23,280
user stories where you are the the

00:31:21,060 --> 00:31:25,170
person trying to get the benefit make a

00:31:23,280 --> 00:31:29,390
backlog for improvements to your

00:31:25,170 --> 00:31:33,690
physical office as a developer I want a

00:31:29,390 --> 00:31:36,260
foosball table because I don't know I I

00:31:33,690 --> 00:31:38,820
don't actually want a foosball table

00:31:36,260 --> 00:31:42,570
right users choice for things other than

00:31:38,820 --> 00:31:45,720
then websites practice the art of

00:31:42,570 --> 00:31:47,910
writing good user stories and and then

00:31:45,720 --> 00:31:50,070
form them into a backlog if you're

00:31:47,910 --> 00:31:52,340
moving offices or if you've got an

00:31:50,070 --> 00:31:54,630
office that just needs improvement a

00:31:52,340 --> 00:31:56,550
backlog is a great way to show what's

00:31:54,630 --> 00:31:58,680
not being work done if you have that

00:31:56,550 --> 00:32:01,080
user story that says as a team member I

00:31:58,680 --> 00:32:05,010
want a foosball table so that I can

00:32:01,080 --> 00:32:06,540
relax at lunch that user story might be

00:32:05,010 --> 00:32:08,820
at the bottom of the backlog and it's a

00:32:06,540 --> 00:32:10,800
great way to just identify not a

00:32:08,820 --> 00:32:12,930
priority this year we are not getting a

00:32:10,800 --> 00:32:15,660
foosball table this year anyone can look

00:32:12,930 --> 00:32:17,820
at your all company office backlog and

00:32:15,660 --> 00:32:19,380
see foosball table is at the bottom of

00:32:17,820 --> 00:32:22,290
the list or maybe it's at the top of the

00:32:19,380 --> 00:32:26,040
list and it can then be clear the next

00:32:22,290 --> 00:32:28,200
time we land a project foosball tables

00:32:26,040 --> 00:32:30,900
the next thing we're pulling in it's a

00:32:28,200 --> 00:32:33,240
way to prioritize future work and it's a

00:32:30,900 --> 00:32:36,000
way to have conversation and definition

00:32:33,240 --> 00:32:37,890
prior to action if other people on your

00:32:36,000 --> 00:32:39,540
team don't want a foosball table they

00:32:37,890 --> 00:32:41,400
can jump into that ticket or that issue

00:32:39,540 --> 00:32:43,290
and explain why they don't want it and

00:32:41,400 --> 00:32:45,270
that argument can be had out in the

00:32:43,290 --> 00:32:47,790
bottom of the backlog before pulling it

00:32:45,270 --> 00:32:49,650
into the top so another suggestion

00:32:47,790 --> 00:32:52,200
appoint a product owner for your

00:32:49,650 --> 00:32:54,360
company's own website and the reason I

00:32:52,200 --> 00:32:56,580
suggest this is because being a product

00:32:54,360 --> 00:32:58,830
owner is hard especially if you're

00:32:56,580 --> 00:33:01,020
expecting your clients to product own

00:32:58,830 --> 00:33:02,700
their own projects they're going to have

00:33:01,020 --> 00:33:03,920
a difficult time with that because they

00:33:02,700 --> 00:33:06,510
probably have a bunch of other

00:33:03,920 --> 00:33:09,000
responsibilities they probably have to

00:33:06,510 --> 00:33:10,560
maintain something about that Drupal 7

00:33:09,000 --> 00:33:12,720
site while you're building the Drupal 8

00:33:10,560 --> 00:33:14,730
site this could feel like extra work

00:33:12,720 --> 00:33:16,440
that you're asking them to do and that's

00:33:14,730 --> 00:33:18,630
going to be painful and there'll be all

00:33:16,440 --> 00:33:20,730
kinds of ways that can go wrong so I

00:33:18,630 --> 00:33:24,420
suggest that your company feel that pain

00:33:20,730 --> 00:33:25,630
first appoint the the owner of the web

00:33:24,420 --> 00:33:27,610
agency or your mark

00:33:25,630 --> 00:33:30,550
director as the product owner of your

00:33:27,610 --> 00:33:33,220
own website have them rank user stories

00:33:30,550 --> 00:33:35,410
find out how difficult it is to do and

00:33:33,220 --> 00:33:37,540
then through that you can learn

00:33:35,410 --> 00:33:39,100
suggestions to give to your own clients

00:33:37,540 --> 00:33:41,050
about how they can do the difficult job

00:33:39,100 --> 00:33:43,120
of being a product owner and then what

00:33:41,050 --> 00:33:45,370
value do you really expect from that

00:33:43,120 --> 00:33:47,950
product owner I think a great value is

00:33:45,370 --> 00:33:50,380
just a clear ranking of priority you can

00:33:47,950 --> 00:33:53,020
have one person who is responsible for

00:33:50,380 --> 00:33:56,310
ordering the priority of things for your

00:33:53,020 --> 00:33:59,560
own company website you've got a clear

00:33:56,310 --> 00:34:02,830
responsibility for who is defining done

00:33:59,560 --> 00:34:05,050
what does done really mean for our new

00:34:02,830 --> 00:34:07,450
social marketing campaign for our own

00:34:05,050 --> 00:34:10,300
company's blog same thing with

00:34:07,450 --> 00:34:12,790
continuous integration I talked to a ton

00:34:10,300 --> 00:34:14,980
of agencies who are excited about

00:34:12,790 --> 00:34:17,200
continuous integration who want to do

00:34:14,980 --> 00:34:19,060
all kinds of things in response to pull

00:34:17,200 --> 00:34:21,940
requests they want to run a million

00:34:19,060 --> 00:34:24,100
tests they want to install composure and

00:34:21,940 --> 00:34:25,870
they don't necessarily know where to

00:34:24,100 --> 00:34:28,690
start I think it's a risky proposition

00:34:25,870 --> 00:34:31,149
to figure out all things continuous

00:34:28,690 --> 00:34:33,940
integration related on billable client

00:34:31,149 --> 00:34:35,740
time if you're working on your own site

00:34:33,940 --> 00:34:37,990
in between client projects I think it's

00:34:35,740 --> 00:34:40,090
a great a great place to experiment with

00:34:37,990 --> 00:34:41,889
continuous integration find out which

00:34:40,090 --> 00:34:44,050
pieces of continuous integration are

00:34:41,889 --> 00:34:46,780
highest value for for you and your

00:34:44,050 --> 00:34:49,540
developers same thing for the concept of

00:34:46,780 --> 00:34:51,909
a Minimum Viable Product what really is

00:34:49,540 --> 00:34:53,649
the minimum viable product for for your

00:34:51,909 --> 00:34:55,810
new physical office what's the minimum

00:34:53,649 --> 00:34:58,420
viable product maybe for the open source

00:34:55,810 --> 00:35:00,400
modules that your company maintains if

00:34:58,420 --> 00:35:03,880
if you're writing new modules for Drupal

00:35:00,400 --> 00:35:06,220
8 as a company there's a lot of tension

00:35:03,880 --> 00:35:08,320
between are we just porting the Drupal 7

00:35:06,220 --> 00:35:10,360
basic functionality are we trying to do

00:35:08,320 --> 00:35:13,600
all the bells and whistles that Drupal 8

00:35:10,360 --> 00:35:15,220
makes possible answering the question of

00:35:13,600 --> 00:35:17,890
what is the minimum viable product for

00:35:15,220 --> 00:35:19,600
our our open source module well then get

00:35:17,890 --> 00:35:21,880
you in a better practice of defining

00:35:19,600 --> 00:35:24,430
Minimum Viable products for for your

00:35:21,880 --> 00:35:26,230
client projects your company is blogging

00:35:24,430 --> 00:35:28,510
practice are you making a training

00:35:26,230 --> 00:35:31,600
series even even your holiday card and

00:35:28,510 --> 00:35:34,150
and I want to should have added here the

00:35:31,600 --> 00:35:37,420
Minimum Viable Product for scrum itself

00:35:34,150 --> 00:35:39,100
at your agency if as a company you're

00:35:37,420 --> 00:35:42,300
adopting scrum

00:35:39,100 --> 00:35:45,190
I'd what what does success look like for

00:35:42,300 --> 00:35:48,970
adopting scrum at your agency how will

00:35:45,190 --> 00:35:51,160
you know when you're done a lot of scrum

00:35:48,970 --> 00:35:54,760
and other methodologies really emphasize

00:35:51,160 --> 00:35:57,040
defining done are you ever done adopting

00:35:54,760 --> 00:36:00,160
scrum probably not because scrum is

00:35:57,040 --> 00:36:03,460
encouraging you to continuously adapt

00:36:00,160 --> 00:36:05,110
and inspect yet I think there's probably

00:36:03,460 --> 00:36:07,090
a point where you can say we're at least

00:36:05,110 --> 00:36:09,760
satisfied we've reached a minimum viable

00:36:07,090 --> 00:36:12,340
product of agile methodologies

00:36:09,760 --> 00:36:13,540
themselves at our company when you do

00:36:12,340 --> 00:36:16,360
that when you define a Minimum Viable

00:36:13,540 --> 00:36:19,000
Product you're lowering risk it can be

00:36:16,360 --> 00:36:22,150
risky to just aim for the what seems

00:36:19,000 --> 00:36:23,950
like the final end point of a product if

00:36:22,150 --> 00:36:26,200
you get to a minimum minimum viable

00:36:23,950 --> 00:36:29,560
product you can then pivot or evolve

00:36:26,200 --> 00:36:32,890
your project more easily it also forces

00:36:29,560 --> 00:36:36,750
clarity what's the real purpose of our

00:36:32,890 --> 00:36:39,880
our new office or our open source module

00:36:36,750 --> 00:36:42,600
and that can inspire and guide the work

00:36:39,880 --> 00:36:45,460
that you're doing those three questions

00:36:42,600 --> 00:36:47,530
what did you do today what did you do

00:36:45,460 --> 00:36:49,780
yesterday what is is blocking you I

00:36:47,530 --> 00:36:52,210
think it's worth asking what value do

00:36:49,780 --> 00:36:54,760
you really expect to get from those

00:36:52,210 --> 00:36:57,040
questions I've been on on projects where

00:36:54,760 --> 00:36:59,290
that scrum that daily scrum meeting

00:36:57,040 --> 00:37:01,600
starts to feel a little robotic where we

00:36:59,290 --> 00:37:03,940
just wait for everyone to go through and

00:37:01,600 --> 00:37:05,860
not not everyone is necessarily even

00:37:03,940 --> 00:37:07,540
listening to one another so what's the

00:37:05,860 --> 00:37:09,250
purpose of that meeting if you're an all

00:37:07,540 --> 00:37:10,960
remote team is the purpose of that

00:37:09,250 --> 00:37:12,910
meeting really answering those questions

00:37:10,960 --> 00:37:14,710
or is the purpose of that meeting just

00:37:12,910 --> 00:37:16,600
getting face-to-face interaction with

00:37:14,710 --> 00:37:19,180
people who otherwise don't share in

00:37:16,600 --> 00:37:20,860
office I think that's okay if the the

00:37:19,180 --> 00:37:22,900
real value you're trying to get out of

00:37:20,860 --> 00:37:24,940
that daily stand-up is just a human

00:37:22,900 --> 00:37:27,220
connection with your teammates that's

00:37:24,940 --> 00:37:30,280
totally fine ideally you have tools like

00:37:27,220 --> 00:37:33,370
JIRA or github that are already answered

00:37:30,280 --> 00:37:35,830
those first two questions I think an

00:37:33,370 --> 00:37:38,050
abuse of this meeting is when team

00:37:35,830 --> 00:37:39,610
members assume I can just tell people at

00:37:38,050 --> 00:37:41,800
the meeting what I did yesterday I don't

00:37:39,610 --> 00:37:43,210
have to update my tickets your tickets

00:37:41,800 --> 00:37:45,670
should show to answer that first

00:37:43,210 --> 00:37:48,040
question what is blocking you that's

00:37:45,670 --> 00:37:50,350
probably worth we're talking about no

00:37:48,040 --> 00:37:52,930
matter what although identify that in a

00:37:50,350 --> 00:37:55,089
ticket to the bi-weekly demo

00:37:52,930 --> 00:37:57,220
or that sprint review meeting what do

00:37:55,089 --> 00:37:59,319
you really expect to get out of that

00:37:57,220 --> 00:38:00,819
meeting of course you want to review the

00:37:59,319 --> 00:38:04,290
work that you've done but maybe there

00:38:00,819 --> 00:38:06,309
are some some byproducts are you

00:38:04,290 --> 00:38:09,550
reinforcing for your developers that the

00:38:06,309 --> 00:38:12,460
work is real when I shifted from having

00:38:09,550 --> 00:38:16,089
kind of vague monthly milestones too

00:38:12,460 --> 00:38:18,640
hard every two week demonstrations that

00:38:16,089 --> 00:38:22,089
that got me more serious about my work

00:38:18,640 --> 00:38:23,950
and helped me make sure that I was

00:38:22,089 --> 00:38:28,540
calling things done that were actually

00:38:23,950 --> 00:38:30,910
done I also found this concept of demo

00:38:28,540 --> 00:38:32,950
driven development as I was leading

00:38:30,910 --> 00:38:35,260
teams and talking with more junior

00:38:32,950 --> 00:38:37,270
developers having a hard time grasping

00:38:35,260 --> 00:38:39,160
how am I going to do this ticket I've

00:38:37,270 --> 00:38:41,319
got I've got a ticket that tells me I

00:38:39,160 --> 00:38:43,270
have to do this photo gallery how will I

00:38:41,319 --> 00:38:45,339
know what I'm done what I would ask is

00:38:43,270 --> 00:38:47,500
well how are you going to demonstrate it

00:38:45,339 --> 00:38:50,710
to the client and we would talk through

00:38:47,500 --> 00:38:51,730
how we would demonstrate demonstrate it

00:38:50,710 --> 00:38:55,720
and that would guide the development

00:38:51,730 --> 00:38:57,730
work itself so we would clarify when

00:38:55,720 --> 00:38:58,869
when we're really done and this can also

00:38:57,730 --> 00:39:01,030
just be an excuse for other

00:38:58,869 --> 00:39:03,309
conversations if you've got a whole team

00:39:01,030 --> 00:39:05,680
of stakeholders who will show up every

00:39:03,309 --> 00:39:07,960
two weeks but won't answer email and

00:39:05,680 --> 00:39:10,390
won't answer your tickets this bi-weekly

00:39:07,960 --> 00:39:12,849
meeting could just be an excuse to talk

00:39:10,390 --> 00:39:14,829
to your stakeholders and get answers to

00:39:12,849 --> 00:39:16,990
questions that their otherwise ignoring

00:39:14,829 --> 00:39:19,270
and I think no one is stopping you from

00:39:16,990 --> 00:39:22,030
doing a biweekly demo on a waterfall

00:39:19,270 --> 00:39:24,099
project I think any project management

00:39:22,030 --> 00:39:26,410
philosophy you're using you can do a

00:39:24,099 --> 00:39:30,099
demo at any time and just show your

00:39:26,410 --> 00:39:32,500
stakeholders this is how far we are and

00:39:30,099 --> 00:39:34,540
and probably no one is stopping you from

00:39:32,500 --> 00:39:38,020
breaking down even a waterfall project

00:39:34,540 --> 00:39:39,549
into two-week increments the first

00:39:38,020 --> 00:39:41,890
project that I worked on that I called

00:39:39,549 --> 00:39:44,440
agile was really just a just a waterfall

00:39:41,890 --> 00:39:47,680
project in two week increments we we had

00:39:44,440 --> 00:39:50,559
a daily scrum we had user stories but it

00:39:47,680 --> 00:39:53,140
was it was a set scope broken into two

00:39:50,559 --> 00:39:56,859
week chunks we had demos I worked pretty

00:39:53,140 --> 00:39:59,020
well so there by products as well of a

00:39:56,859 --> 00:40:01,240
retrospective is that that meeting that

00:39:59,020 --> 00:40:02,980
your team is having maybe you just need

00:40:01,240 --> 00:40:04,930
to blow off steam about your client

00:40:02,980 --> 00:40:06,520
maybe the client is is really difficult

00:40:04,930 --> 00:40:08,920
to work with

00:40:06,520 --> 00:40:11,500
and and it's helpful just to have 10

00:40:08,920 --> 00:40:13,510
minutes of discussing what's happened

00:40:11,500 --> 00:40:15,490
maybe your team likes to bike shed

00:40:13,510 --> 00:40:17,560
details and if they don't have a

00:40:15,490 --> 00:40:19,690
scheduled argument with one another than

00:40:17,560 --> 00:40:22,810
in every pull request in every issue

00:40:19,690 --> 00:40:24,760
they'll they'll debate minutiae and the

00:40:22,810 --> 00:40:26,410
the bi-weekly retrospective can be a

00:40:24,760 --> 00:40:28,180
good time to catch up on those things

00:40:26,410 --> 00:40:30,340
can also be a good time to catch up on

00:40:28,180 --> 00:40:32,590
implementation details especially if

00:40:30,340 --> 00:40:34,150
you're just starting to adopt Drupal 8

00:40:32,590 --> 00:40:35,950
there's a good chance different people

00:40:34,150 --> 00:40:37,900
are figuring out different things at

00:40:35,950 --> 00:40:39,670
different times it can be hard to

00:40:37,900 --> 00:40:41,740
squeeze that knowledge sharing into your

00:40:39,670 --> 00:40:44,650
daily scrum fit it into the the

00:40:41,740 --> 00:40:46,930
bi-weekly retrospective meeting we also

00:40:44,650 --> 00:40:48,400
have this concept of different driven

00:40:46,930 --> 00:40:51,940
development we've got demo driven

00:40:48,400 --> 00:40:55,270
development which is not a real term is

00:40:51,940 --> 00:40:57,130
just something I came up with a test

00:40:55,270 --> 00:40:58,600
driven development and behavior driven

00:40:57,130 --> 00:41:00,250
development the idea here is that

00:40:58,600 --> 00:41:04,240
somehow we're trying to guide our

00:41:00,250 --> 00:41:06,520
development by by some visible goal

00:41:04,240 --> 00:41:08,650
test-driven development can be as as

00:41:06,520 --> 00:41:11,080
simple as just writing unit tests or

00:41:08,650 --> 00:41:13,060
writing some kind of automated tests as

00:41:11,080 --> 00:41:15,460
your coding behavior driven development

00:41:13,060 --> 00:41:16,990
is is a relatively new community

00:41:15,460 --> 00:41:19,150
compared to some of these these other

00:41:16,990 --> 00:41:21,310
communities that really emphasizes those

00:41:19,150 --> 00:41:23,140
conversations that you have with your

00:41:21,310 --> 00:41:25,000
clients really emphasizes the importance

00:41:23,140 --> 00:41:27,100
of finding out what your clients really

00:41:25,000 --> 00:41:29,790
need capturing those needs and

00:41:27,100 --> 00:41:32,380
conversations and then as a byproduct

00:41:29,790 --> 00:41:34,840
writing automated tests that really

00:41:32,380 --> 00:41:35,980
capture those those conversations and I

00:41:34,840 --> 00:41:37,780
really like the behavior driven

00:41:35,980 --> 00:41:39,730
development community because they have

00:41:37,780 --> 00:41:42,070
a philosophy of community that I think

00:41:39,730 --> 00:41:44,140
is really helpful they see themselves as

00:41:42,070 --> 00:41:46,900
a centered community rather than a

00:41:44,140 --> 00:41:49,000
bounded community this is a separation

00:41:46,900 --> 00:41:52,480
and ideas of community that really comes

00:41:49,000 --> 00:41:54,580
from the theological world so they point

00:41:52,480 --> 00:41:56,770
to scrum as a bounded community that

00:41:54,580 --> 00:41:58,630
really emphasizes those rules and

00:41:56,770 --> 00:42:01,300
practices really emphasizes that you are

00:41:58,630 --> 00:42:03,760
either inside or outside scrum there's a

00:42:01,300 --> 00:42:06,040
hard boundary they see that as different

00:42:03,760 --> 00:42:08,370
from the way they identify the behavior

00:42:06,040 --> 00:42:11,110
driven development community which

00:42:08,370 --> 00:42:12,610
Orient's itself around a center and they

00:42:11,110 --> 00:42:14,380
think the key question is are you moving

00:42:12,610 --> 00:42:16,930
towards the center are you moving

00:42:14,380 --> 00:42:19,120
towards the manifesto for agile software

00:42:16,930 --> 00:42:19,730
development or are you moving away from

00:42:19,120 --> 00:42:20,660
it

00:42:19,730 --> 00:42:22,940
that's really what you should be

00:42:20,660 --> 00:42:25,369
focusing on moving towards the center

00:42:22,940 --> 00:42:28,070
rather than trying to be inside or

00:42:25,369 --> 00:42:29,990
outside a hard boundary because when you

00:42:28,070 --> 00:42:32,960
focus on the boundary then there can be

00:42:29,990 --> 00:42:34,640
this by-product on focusing on excluding

00:42:32,960 --> 00:42:36,770
people excluding the people who are

00:42:34,640 --> 00:42:38,060
outside the boundary the behavior driven

00:42:36,770 --> 00:42:39,920
development thinks it's much more

00:42:38,060 --> 00:42:42,920
important to pull people towards the

00:42:39,920 --> 00:42:44,869
center wherever they are so I think

00:42:42,920 --> 00:42:47,240
you're moving towards the center when

00:42:44,869 --> 00:42:50,180
your team knows the benefit of each

00:42:47,240 --> 00:42:51,920
process being done if your team doesn't

00:42:50,180 --> 00:42:53,990
know why they're answering those three

00:42:51,920 --> 00:42:55,910
questions then they're not going to

00:42:53,990 --> 00:42:58,640
really be adding value those questions

00:42:55,910 --> 00:43:00,109
are away at getting at a deeper concept

00:42:58,640 --> 00:43:02,000
and if your team isn't familiar with

00:43:00,109 --> 00:43:03,470
what the values that each process is

00:43:02,000 --> 00:43:06,140
bringing then they're not going to get

00:43:03,470 --> 00:43:08,390
that value if you can safely experiment

00:43:06,140 --> 00:43:10,400
with new processes the agile community

00:43:08,390 --> 00:43:12,560
is evolving all the time coming up with

00:43:10,400 --> 00:43:14,570
new ways of doing things flipping the

00:43:12,560 --> 00:43:18,500
user story so that the value is first

00:43:14,570 --> 00:43:20,090
whoa experiment with that find out is

00:43:18,500 --> 00:43:24,800
that going to help you if you put the

00:43:20,090 --> 00:43:26,990
value before the the persona can you

00:43:24,800 --> 00:43:29,390
drop practices that that just aren't

00:43:26,990 --> 00:43:32,000
working for you anymore can you talk and

00:43:29,390 --> 00:43:34,850
disagree about your practices without it

00:43:32,000 --> 00:43:37,310
completely stalling your team there's a

00:43:34,850 --> 00:43:39,260
risk here I think especially with scrum

00:43:37,310 --> 00:43:41,750
when there is that hard boundary and a

00:43:39,260 --> 00:43:44,810
desire to be on the right side of the

00:43:41,750 --> 00:43:46,640
boundary that it can lead to argument

00:43:44,810 --> 00:43:48,770
and it can lead to teams stalling out

00:43:46,640 --> 00:43:51,260
arguing about the rules of the game

00:43:48,770 --> 00:43:53,570
scrum and not focusing on on what their

00:43:51,260 --> 00:43:56,030
clients really need and I hope you feel

00:43:53,570 --> 00:43:58,940
a little bit less scrum guilt as a

00:43:56,030 --> 00:44:01,180
result of of this talk so thanks

00:43:58,940 --> 00:44:01,180
everyone

00:44:06,609 --> 00:44:11,030
and I think we've got about 15 minutes

00:44:09,170 --> 00:44:12,380
for her questions anyone who has a

00:44:11,030 --> 00:44:14,390
question please come up to the

00:44:12,380 --> 00:44:21,770
microphone so that it gets added to the

00:44:14,390 --> 00:44:29,119
recording here any questions at all no

00:44:21,770 --> 00:44:42,680
questions I don't believe it I got one

00:44:29,119 --> 00:44:45,200
here yeah hi I work in a small company

00:44:42,680 --> 00:44:47,960
and we have three developers mm-hmm to

00:44:45,200 --> 00:44:50,030
developers and one designer and the

00:44:47,960 --> 00:44:52,000
problem is that most we also work with

00:44:50,030 --> 00:44:55,609
scrum but most of the time our clients

00:44:52,000 --> 00:44:57,380
give feedback or really late yeah or

00:44:55,609 --> 00:45:00,770
really fast and then we have to adapt

00:44:57,380 --> 00:45:02,960
right directly hmm how can we use that

00:45:00,770 --> 00:45:04,220
in the scrum methodology because if we

00:45:02,960 --> 00:45:05,780
have to work with two weeks I have to

00:45:04,220 --> 00:45:07,630
tell my client every time don't have

00:45:05,780 --> 00:45:10,099
time for you now come back in two weeks

00:45:07,630 --> 00:45:11,750
right so you're talking about the

00:45:10,099 --> 00:45:13,670
problem of the client gives feedback

00:45:11,750 --> 00:45:15,770
maybe mid sprint and you have to tell

00:45:13,670 --> 00:45:18,290
them sorry we already locked our sprint

00:45:15,770 --> 00:45:20,390
yeah I can't listen to your feedback

00:45:18,290 --> 00:45:21,710
until two weeks from now where I can't

00:45:20,390 --> 00:45:23,480
do anything about your feedback until

00:45:21,710 --> 00:45:25,550
two weeks from now yeah that really

00:45:23,480 --> 00:45:27,770
reminds me of I've certainly felt that

00:45:25,550 --> 00:45:30,200
same pain point where I was in a

00:45:27,770 --> 00:45:31,910
situation where it was nearly the end of

00:45:30,200 --> 00:45:33,829
the project like the site was launching

00:45:31,910 --> 00:45:36,410
literally next week and one of my

00:45:33,829 --> 00:45:39,530
co-workers wanted to say that same thing

00:45:36,410 --> 00:45:42,290
to our client sorry we can't fix that

00:45:39,530 --> 00:45:45,050
bug because the sprint doesn't end until

00:45:42,290 --> 00:45:46,369
you know that next Friday and our client

00:45:45,050 --> 00:45:48,980
is saying yeah but we're launching on

00:45:46,369 --> 00:45:51,380
Tuesday and this is a bug and it's the

00:45:48,980 --> 00:45:54,710
most important thing and my reaction was

00:45:51,380 --> 00:45:56,089
well we we need to fix that bug and and

00:45:54,710 --> 00:45:58,520
that from you really highlighted that

00:45:56,089 --> 00:46:00,650
the difference in thinking between my

00:45:58,520 --> 00:46:03,619
thinking that scrum is the strategy that

00:46:00,650 --> 00:46:06,950
I'm using to play this game this game of

00:46:03,619 --> 00:46:08,690
serving my client and when when my

00:46:06,950 --> 00:46:11,390
strategy doesn't suit me when my

00:46:08,690 --> 00:46:13,400
strategy tells me to do things that

00:46:11,390 --> 00:46:15,230
contradict what my clients need then

00:46:13,400 --> 00:46:16,670
I'll drop the strategy whereas my

00:46:15,230 --> 00:46:18,980
coworker was thinking more

00:46:16,670 --> 00:46:21,530
the game that we were playing was scrum

00:46:18,980 --> 00:46:24,109
and we need to play by the rules so we

00:46:21,530 --> 00:46:28,670
can't we can't fix that bug until the

00:46:24,109 --> 00:46:33,980
next Monday and I I don't think that

00:46:28,670 --> 00:46:37,099
makes any sense so I think there's

00:46:33,980 --> 00:46:39,440
there's certainly value to setting clear

00:46:37,099 --> 00:46:41,630
boundaries for your clients because if

00:46:39,440 --> 00:46:44,630
you don't then they won't pay any

00:46:41,630 --> 00:46:46,130
attention at all to the two-week concept

00:46:44,630 --> 00:46:47,900
of us rent and they'll expect that you

00:46:46,130 --> 00:46:50,569
can can do anything at the drop of a hat

00:46:47,900 --> 00:46:53,359
and that that's where it gets to a gray

00:46:50,569 --> 00:46:54,980
area and you just have to decide is it

00:46:53,359 --> 00:46:58,880
worth it for us to deviate from our

00:46:54,980 --> 00:47:01,819
process here for this request and that's

00:46:58,880 --> 00:47:03,799
that's a taxing question to be asking

00:47:01,819 --> 00:47:07,220
over and over again which is I think why

00:47:03,799 --> 00:47:08,930
why scrum suggest follow the hard rules

00:47:07,220 --> 00:47:11,960
because then the answers are clear and

00:47:08,930 --> 00:47:13,670
you don't have to spend so much time

00:47:11,960 --> 00:47:15,200
thinking about the answer to each

00:47:13,670 --> 00:47:18,079
question as it comes up the answer is

00:47:15,200 --> 00:47:20,839
already there the thing we sometimes do

00:47:18,079 --> 00:47:22,790
is we have time blocks and we said for

00:47:20,839 --> 00:47:26,049
that client two hours and two hours for

00:47:22,790 --> 00:47:28,790
that sure but then or you have too much

00:47:26,049 --> 00:47:31,190
too much time in your sprint it's for

00:47:28,790 --> 00:47:33,710
three-week work if all the clients would

00:47:31,190 --> 00:47:35,690
react right and and that that's all

00:47:33,710 --> 00:47:39,559
we're also very difficult to priority

00:47:35,690 --> 00:47:43,490
your eyes yeah yeah and that's why I

00:47:39,559 --> 00:47:45,980
think konban is a good entryway into

00:47:43,490 --> 00:47:49,250
these kinds of methodologies and I think

00:47:45,980 --> 00:47:52,940
con bond is is a better way for for some

00:47:49,250 --> 00:47:54,530
teams entirely where it particularly if

00:47:52,940 --> 00:47:58,430
what you're talking about is a support

00:47:54,530 --> 00:48:00,349
model where where your clients may ask

00:47:58,430 --> 00:48:02,210
for something and expect it to be done

00:48:00,349 --> 00:48:04,490
as soon as possible then I think con

00:48:02,210 --> 00:48:06,710
bond which gives you that bored of these

00:48:04,490 --> 00:48:08,750
are the tasks that should be done these

00:48:06,710 --> 00:48:10,069
are the tasks that are in progress and

00:48:08,750 --> 00:48:12,049
these are the tasks that are done and

00:48:10,069 --> 00:48:13,549
you may have you know different broken

00:48:12,049 --> 00:48:15,680
out stages in between but it's basically

00:48:13,549 --> 00:48:17,960
stuff we haven't started stuff being

00:48:15,680 --> 00:48:20,540
worked on and stuff done I think that's

00:48:17,960 --> 00:48:22,280
just a better starting point for a lot

00:48:20,540 --> 00:48:24,020
of projects and and it may even be a

00:48:22,280 --> 00:48:26,599
better ending point for a lot of

00:48:24,020 --> 00:48:29,809
projects that the value you need for

00:48:26,599 --> 00:48:30,550
your team is clarifying how much stuff

00:48:29,809 --> 00:48:33,250
are we trying to

00:48:30,550 --> 00:48:35,470
you right now because I think a problem

00:48:33,250 --> 00:48:37,090
really across the board for for just

00:48:35,470 --> 00:48:38,260
about any company or any group of people

00:48:37,090 --> 00:48:40,270
is that they're trying to do too many

00:48:38,260 --> 00:48:43,240
things at once and a conv on board is a

00:48:40,270 --> 00:48:45,780
really good way to identify oh we really

00:48:43,240 --> 00:48:47,980
do think we're doing 12 things at once

00:48:45,780 --> 00:48:49,570
maybe maybe you're not actually making

00:48:47,980 --> 00:48:51,460
progress on 12 things that once but

00:48:49,570 --> 00:48:53,110
there are 12 things identified as in

00:48:51,460 --> 00:48:55,690
progress that gives us a clear

00:48:53,110 --> 00:48:56,980
indication that we we can't pull in this

00:48:55,690 --> 00:49:05,560
new request unless it's absolutely

00:48:56,980 --> 00:49:07,030
critical thank you sure yeah yeah maybe

00:49:05,560 --> 00:49:08,200
just a quick comment on this kind of

00:49:07,030 --> 00:49:09,880
situation where you have a client and

00:49:08,200 --> 00:49:11,950
you cannot rely that the client will

00:49:09,880 --> 00:49:14,380
answer every two weeks right which is

00:49:11,950 --> 00:49:17,020
when I'm working on for client just for

00:49:14,380 --> 00:49:18,700
myself which sometimes happens then it

00:49:17,020 --> 00:49:20,710
doesn't make sense to say to make this

00:49:18,700 --> 00:49:22,240
metronome of two weeks and that I a

00:49:20,710 --> 00:49:24,430
client becomes the metronome of

00:49:22,240 --> 00:49:26,980
everything then the client sends an

00:49:24,430 --> 00:49:28,630
email either one month and then one was

00:49:26,980 --> 00:49:31,000
later and then one week later and then

00:49:28,630 --> 00:49:32,380
two months later right and and so

00:49:31,000 --> 00:49:35,950
there's some communication and this

00:49:32,380 --> 00:49:39,370
dictates the rhythm how you do things

00:49:35,950 --> 00:49:41,470
right and i think that gets back to like

00:49:39,370 --> 00:49:43,150
what it what is your organizing metaphor

00:49:41,470 --> 00:49:44,650
or what idea do you have in your head

00:49:43,150 --> 00:49:46,390
about your relationship with your client

00:49:44,650 --> 00:49:49,120
and what what picture does your client

00:49:46,390 --> 00:49:51,520
have it in their head I think these

00:49:49,120 --> 00:49:53,290
processes work best when everyone has

00:49:51,520 --> 00:49:55,750
the the mental model we're all on the

00:49:53,290 --> 00:49:58,330
same team together there's no opponent

00:49:55,750 --> 00:50:01,060
we're all trying to do something as a

00:49:58,330 --> 00:50:02,380
cooperative entity that's not the

00:50:01,060 --> 00:50:05,440
picture all clients have in their head

00:50:02,380 --> 00:50:07,750
some clients have in their head I pay

00:50:05,440 --> 00:50:10,240
you I tell you to do stuff and you do it

00:50:07,750 --> 00:50:13,750
and if that's the if that's what your

00:50:10,240 --> 00:50:15,610
clients think then I think most of these

00:50:13,750 --> 00:50:17,130
methodologies aren't going to be helpful

00:50:15,610 --> 00:50:22,420
because most of these methodologies

00:50:17,130 --> 00:50:23,920
assume everyone sees themselves as equal

00:50:22,420 --> 00:50:25,990
members of a team and we're all working

00:50:23,920 --> 00:50:28,390
towards a common goal and if your client

00:50:25,990 --> 00:50:33,400
the person paying your bills sees you as

00:50:28,390 --> 00:50:35,950
as someone who who's just there to serve

00:50:33,400 --> 00:50:38,380
their whims and and do what is asked

00:50:35,950 --> 00:50:39,550
then then it's not going to work yeah I

00:50:38,380 --> 00:50:41,170
mean they're still want to have some

00:50:39,550 --> 00:50:42,820
interactivity but then someone for

00:50:41,170 --> 00:50:43,859
insights right I said okay let's make

00:50:42,820 --> 00:50:46,710
some issue

00:50:43,859 --> 00:50:49,410
uq but then i found that it doesn't

00:50:46,710 --> 00:50:51,450
really have a future with right right so

00:50:49,410 --> 00:50:52,739
and then we just have like emails and I

00:50:51,450 --> 00:50:54,450
say okay I finished this and this and

00:50:52,739 --> 00:50:56,970
this can you review this and then I

00:50:54,450 --> 00:50:59,670
hadn't got reply and so one important

00:50:56,970 --> 00:51:01,170
thing to organize is that you you need

00:50:59,670 --> 00:51:02,819
to prepare that you're not working full

00:51:01,170 --> 00:51:03,779
time for this because there will be

00:51:02,819 --> 00:51:05,819
times when you have to wait for the

00:51:03,779 --> 00:51:07,349
client and so you have to fill this with

00:51:05,819 --> 00:51:08,609
other work yeah then you also you need

00:51:07,349 --> 00:51:10,440
to tell the client that sometimes you

00:51:08,609 --> 00:51:12,720
will do other work and they have to wait

00:51:10,440 --> 00:51:15,150
for you yeah yeah I certainly found

00:51:12,720 --> 00:51:17,549
pandey's methodologies most successful

00:51:15,150 --> 00:51:19,289
when everyone on the team was full time

00:51:17,549 --> 00:51:21,059
and there was a large enough budget that

00:51:19,289 --> 00:51:23,730
we could could decide all right we have

00:51:21,059 --> 00:51:25,470
four people we have six people and we're

00:51:23,730 --> 00:51:27,269
going for this amount of time and we're

00:51:25,470 --> 00:51:31,200
all full time we're all focused on it

00:51:27,269 --> 00:51:34,230
there's there's a a cost of inefficiency

00:51:31,200 --> 00:51:36,059
to be paid when when your client isn't

00:51:34,230 --> 00:51:37,739
giving you enough work for full time and

00:51:36,059 --> 00:51:39,450
and that's I think is something just

00:51:37,739 --> 00:51:43,200
worth communicating to your clients that

00:51:39,450 --> 00:51:45,390
if if they don't have the bandwidth to

00:51:43,200 --> 00:51:47,940
do the project at full speed and full

00:51:45,390 --> 00:51:49,710
time then you're just going to have to

00:51:47,940 --> 00:51:51,599
split their work with someone else's

00:51:49,710 --> 00:51:54,630
work and your work is going to be more

00:51:51,599 --> 00:51:55,799
inefficient as a result says I think

00:51:54,630 --> 00:51:58,769
sometimes they're there is a cost

00:51:55,799 --> 00:52:00,869
savings to be had by by convincing your

00:51:58,769 --> 00:52:03,180
client that this project is important

00:52:00,869 --> 00:52:05,489
enough for their full-time attention for

00:52:03,180 --> 00:52:08,880
a month or two months or whatever amount

00:52:05,489 --> 00:52:10,440
of time it is because someone has to pay

00:52:08,880 --> 00:52:13,529
that attention and if you can talk about

00:52:10,440 --> 00:52:16,499
it attention attention as a right as a

00:52:13,529 --> 00:52:19,079
thing that has to be paid either they

00:52:16,499 --> 00:52:22,589
can pay the attention or they can pay

00:52:19,079 --> 00:52:24,539
you in dollars or euros for a project

00:52:22,589 --> 00:52:26,670
manager or a product owner to be

00:52:24,539 --> 00:52:29,700
appointed internally within your agency

00:52:26,670 --> 00:52:31,410
to pay that attention yeah yeah maybe

00:52:29,700 --> 00:52:33,440
the last point I was making its that

00:52:31,410 --> 00:52:36,509
internally even if you have the client

00:52:33,440 --> 00:52:37,980
irregular rhythm then you can make still

00:52:36,509 --> 00:52:40,769
use some of these techniques oh sure

00:52:37,980 --> 00:52:43,380
yeah and and you you're not completely

00:52:40,769 --> 00:52:45,450
off the trail but you just shouldn't be

00:52:43,380 --> 00:52:47,450
too close-minded about it right right i

00:52:45,450 --> 00:52:51,809
think there are plenty of clients that

00:52:47,450 --> 00:52:53,609
that can't can't move it at that speed

00:52:51,809 --> 00:52:54,930
and i think that's where con bond boards

00:52:53,609 --> 00:52:57,150
are really helpful they're just a great

00:52:54,930 --> 00:52:57,349
way to identify for your clients these

00:52:57,150 --> 00:52:59,359
are

00:52:57,349 --> 00:53:03,249
the things in progress we're just going

00:52:59,359 --> 00:53:07,160
to to work as many as we can when we can

00:53:03,249 --> 00:53:11,089
review them at your leisure I guess and

00:53:07,160 --> 00:53:12,979
then and then we'll keep going all right

00:53:11,089 --> 00:53:14,299
well we're just about our time I'd love

00:53:12,979 --> 00:53:15,859
to talk with with anyone else who's

00:53:14,299 --> 00:53:18,339
who's interested but thank you for

00:53:15,859 --> 00:53:18,339

YouTube URL: https://www.youtube.com/watch?v=cgoo7-WipTI


