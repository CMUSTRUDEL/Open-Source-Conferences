Title: DrupalCon Vienna 2017: Component Driven Frontend Development
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	Pages are dead - long live components.

Do you recognise any of the following problems:

Designers design pages which then need to be broken up by frontend developers
Elements of a page are poorly named or misunderstood
Static HTML prototypes and style guides produced early in the project can't be easily ported into the backend CMS
The static prototype and real site begin to drift away from each other as the project goes on, there is no longer a clear representation of the frontend
The Drupal theme becomes complicated and confused.
The design has become lost in translation and walls of indirection have sprung up between design and development teams.
This talk describes a component based approach to web design and development.
Rather than having the designers design some key pages of a site, get them to design components instead. Breaking things down into small and easily identifiable pieces or 'componentisation' is a practice used by developers and designers alike to help them solve complex problems.

With a component based approach your development team can maintain a catalogue of templates independent of the backend CMS.

When the backend work starts, these components will then be integrated into Drupal. This talk will describe a method for doing this which does not cause complex themes or copying pieces of template code out of the frontend prototypes.

This talk will cover:

The general approach to component based development
A method for developing components independent of the backend system which will be used
How to integrate the components with Drupal 8
An overview of the advantages of this approach
Captions: 
	00:00:01,820 --> 00:00:07,529
okay so a component driven front-end

00:00:04,080 --> 00:00:09,540
development and so Who am I I'm John and

00:00:07,529 --> 00:00:11,910
you I work for dicen the digital agency

00:00:09,540 --> 00:00:14,130
in the UK and we provide full design

00:00:11,910 --> 00:00:16,410
build services and deliver reasonably

00:00:14,130 --> 00:00:19,619
large websites our typical projects are

00:00:16,410 --> 00:00:22,020
about six to nine months and our primary

00:00:19,619 --> 00:00:24,210
primary technology stack is is Drupal 8

00:00:22,020 --> 00:00:25,890
but we also work with a number of

00:00:24,210 --> 00:00:28,890
front-end technologies like angular

00:00:25,890 --> 00:00:30,599
react and we do development using

00:00:28,890 --> 00:00:34,590
applications such as Symphony react and

00:00:30,599 --> 00:00:36,180
as well so what's this talk about I'm

00:00:34,590 --> 00:00:38,040
gonna be describing the journey that

00:00:36,180 --> 00:00:40,110
decent gone through over the last three

00:00:38,040 --> 00:00:43,320
years where we've gone from a very

00:00:40,110 --> 00:00:46,260
waterfall design process and development

00:00:43,320 --> 00:00:48,480
to to take on these ideas of component

00:00:46,260 --> 00:00:50,610
driven development which I believe

00:00:48,480 --> 00:00:52,129
requires a very agile approach the way

00:00:50,610 --> 00:00:54,420
that you actually run your projects and

00:00:52,129 --> 00:00:55,440
so maybe you'll see some parallels from

00:00:54,420 --> 00:00:57,870
your own experiences and your own

00:00:55,440 --> 00:00:59,850
businesses and I'm not suggesting

00:00:57,870 --> 00:01:01,590
anything in here that it's the monetary

00:00:59,850 --> 00:01:03,449
way some of our approaches will work for

00:01:01,590 --> 00:01:06,409
you and others depending on your

00:01:03,449 --> 00:01:08,729
business and your team and everything

00:01:06,409 --> 00:01:10,439
probably you will disagree with some of

00:01:08,729 --> 00:01:12,710
the things I have to say and there's

00:01:10,439 --> 00:01:12,710
nothing

00:01:19,150 --> 00:01:26,440
okay so there's nothing revolutionary in

00:01:23,860 --> 00:01:30,190
this talk I'm going to summarize a

00:01:26,440 --> 00:01:32,080
series of ideas by others and our

00:01:30,190 --> 00:01:35,290
reference then where appropriate to give

00:01:32,080 --> 00:01:36,640
you our favorite reading material and

00:01:35,290 --> 00:01:41,980
where you can find the best descriptions

00:01:36,640 --> 00:01:45,250
of some of these concepts so the format

00:01:41,980 --> 00:01:46,360
of this talk is this for the approach to

00:01:45,250 --> 00:01:49,510
work I firmly believe you need to

00:01:46,360 --> 00:01:51,690
embrace agile with a big a and break

00:01:49,510 --> 00:01:54,160
yourself of a waterfall design process

00:01:51,690 --> 00:01:55,600
in developing design systems I'll

00:01:54,160 --> 00:01:57,880
describe the move from designing full

00:01:55,600 --> 00:02:00,310
pages to producing a design system which

00:01:57,880 --> 00:02:02,350
is component library and a style guide

00:02:00,310 --> 00:02:04,450
and finally we'll look at how you can

00:02:02,350 --> 00:02:06,460
make that style guide a living style

00:02:04,450 --> 00:02:12,130
guide so the design system itself as a

00:02:06,460 --> 00:02:13,360
part of your Drupal web sites so first

00:02:12,130 --> 00:02:15,520
and foremost web sites are built by

00:02:13,360 --> 00:02:16,750
people and projects succeed or fail

00:02:15,520 --> 00:02:18,070
primarily on the quality of the

00:02:16,750 --> 00:02:19,180
communication and the decision making

00:02:18,070 --> 00:02:23,950
that comes about through collaborative

00:02:19,180 --> 00:02:25,720
work the agile manifesto values in

00:02:23,950 --> 00:02:28,600
individuals interactions over processes

00:02:25,720 --> 00:02:30,760
and tools so the more collaboration on a

00:02:28,600 --> 00:02:32,380
project and more engaged all the team

00:02:30,760 --> 00:02:39,160
members are and the more likely it is to

00:02:32,380 --> 00:02:40,600
succeed so you might recognize this kind

00:02:39,160 --> 00:02:42,400
of waterfall approach to delivery and

00:02:40,600 --> 00:02:45,459
this is certainly what we were doing two

00:02:42,400 --> 00:02:47,050
or three years ago and each discipline

00:02:45,459 --> 00:02:50,410
only gets involved with their phase of

00:02:47,050 --> 00:02:51,550
the project and we thought we were being

00:02:50,410 --> 00:02:53,019
very efficient with this and with

00:02:51,550 --> 00:02:55,090
people's times but this is a false

00:02:53,019 --> 00:02:56,680
economy value is lost for members of

00:02:55,090 --> 00:02:59,830
each discipline fail to inform the stage

00:02:56,680 --> 00:03:03,010
before so he tended to have a very large

00:02:59,830 --> 00:03:04,900
design phase upfront and designed the

00:03:03,010 --> 00:03:06,610
key pages where we design the key pages

00:03:04,900 --> 00:03:09,010
of the sites in fact we'd often design

00:03:06,610 --> 00:03:11,290
all the pages of the site and then give

00:03:09,010 --> 00:03:15,940
clients free range to waste their budget

00:03:11,290 --> 00:03:18,459
endlessly discussing those Brad Frost

00:03:15,940 --> 00:03:20,430
who I mentioned a bit later on as well

00:03:18,459 --> 00:03:22,690
who's got some of the ideas in this talk

00:03:20,430 --> 00:03:25,180
he describes this process well with a

00:03:22,690 --> 00:03:27,040
little story about the idea of producing

00:03:25,180 --> 00:03:28,490
these beautifully completed designs and

00:03:27,040 --> 00:03:31,310
they're being delivered deliver

00:03:28,490 --> 00:03:32,510
it to the front-end team who might be an

00:03:31,310 --> 00:03:34,940
addition part the building or in a

00:03:32,510 --> 00:03:37,160
different country or constants and they

00:03:34,940 --> 00:03:39,110
these design package gets pushed under

00:03:37,160 --> 00:03:40,610
the door with a note on it saying it's

00:03:39,110 --> 00:03:42,110
all signed off so nothing can change

00:03:40,610 --> 00:03:45,110
oh and by the way we've only got three

00:03:42,110 --> 00:03:46,750
weeks of budget left then everyone kills

00:03:45,110 --> 00:03:48,980
themselves to get it delivered in a rush

00:03:46,750 --> 00:03:52,430
but no one is ultimately pleased with

00:03:48,980 --> 00:03:56,750
the end result so we need you to stop

00:03:52,430 --> 00:03:59,000
doing this and so what we wanted to do

00:03:56,750 --> 00:04:00,830
is move to a processes look more like

00:03:59,000 --> 00:04:02,750
this collaborative workflow involving a

00:04:00,830 --> 00:04:04,300
continuous cross-disciplinary team

00:04:02,750 --> 00:04:06,710
working throughout the entire process

00:04:04,300 --> 00:04:07,970
all the amounts of active work might

00:04:06,710 --> 00:04:09,320
change for each discipline they're

00:04:07,970 --> 00:04:11,510
always consulted in order their

00:04:09,320 --> 00:04:13,280
knowledge is always present in every

00:04:11,510 --> 00:04:16,459
piece of work that's produced from start

00:04:13,280 --> 00:04:18,290
to finish this is hard to start doing

00:04:16,459 --> 00:04:19,640
and often the project hopefully the

00:04:18,290 --> 00:04:21,500
start of a project new clients will

00:04:19,640 --> 00:04:24,860
still want to work in the old waterfall

00:04:21,500 --> 00:04:27,260
way they see a safety nets in the

00:04:24,860 --> 00:04:29,060
sign-off process and it is difficult to

00:04:27,260 --> 00:04:30,820
break through of this and start them

00:04:29,060 --> 00:04:33,290
trusting you to work collaboratively

00:04:30,820 --> 00:04:34,210
our creative director usually give us a

00:04:33,290 --> 00:04:37,400
little speech now at the beginning

00:04:34,210 --> 00:04:38,600
saying that they need to be brave and

00:04:37,400 --> 00:04:42,190
they will get an award winning websites

00:04:38,600 --> 00:04:42,190
but they do have to trust us to deliver

00:04:43,870 --> 00:04:52,130
so in part to talk about developing

00:04:46,640 --> 00:04:53,540
design systems so when when our clients

00:04:52,130 --> 00:04:54,530
came to us thinking about websites what

00:04:53,540 --> 00:04:57,020
they were really thinking about was a

00:04:54,530 --> 00:04:59,060
collection of pages and that concept of

00:04:57,020 --> 00:05:01,580
a page is very key in the language of

00:04:59,060 --> 00:05:04,520
the web and the way that the web has

00:05:01,580 --> 00:05:06,440
evolved so typically those questions

00:05:04,520 --> 00:05:08,090
around well how long will a page take to

00:05:06,440 --> 00:05:11,870
build or how many pages will this

00:05:08,090 --> 00:05:13,130
website have in it and the problem with

00:05:11,870 --> 00:05:14,600
this is the design level is that each

00:05:13,130 --> 00:05:19,700
page develop becomes a unique collection

00:05:14,600 --> 00:05:20,930
of things and of course it's those

00:05:19,700 --> 00:05:22,190
things on the page that are actually

00:05:20,930 --> 00:05:23,570
going to be built and are actually going

00:05:22,190 --> 00:05:25,160
to affect the cost of development the

00:05:23,570 --> 00:05:26,750
more things that are defined by a

00:05:25,160 --> 00:05:28,880
designer the greater the size of the

00:05:26,750 --> 00:05:30,500
project so that our project with only a

00:05:28,880 --> 00:05:32,780
handful of page designs and can be much

00:05:30,500 --> 00:05:36,220
more complex and projects with many page

00:05:32,780 --> 00:05:36,220
designs which are much simpler

00:05:37,980 --> 00:05:41,950
so fundamentally we need to stop

00:05:40,030 --> 00:05:43,960
designing pages and stop sharing those

00:05:41,950 --> 00:05:45,250
pages with clients a page designs a

00:05:43,960 --> 00:05:47,260
static and they don't actually

00:05:45,250 --> 00:05:48,550
accurately represent how the design is

00:05:47,260 --> 00:05:52,120
going to present on the huge number of

00:05:48,550 --> 00:05:53,560
devices that the page will end up on I

00:05:52,120 --> 00:05:54,820
think it was Steven hey you said

00:05:53,560 --> 00:05:56,410
something like presenting fully form

00:05:54,820 --> 00:05:57,700
photo shop page designs to the clients

00:05:56,410 --> 00:05:59,380
is the most effective way to show your

00:05:57,700 --> 00:06:05,320
client what the website will never look

00:05:59,380 --> 00:06:06,370
like so we're not designing systems of

00:06:05,320 --> 00:06:08,230
pages instead we're going to be

00:06:06,370 --> 00:06:09,870
designing a system of components and

00:06:08,230 --> 00:06:12,310
this is a key concept to teach your team

00:06:09,870 --> 00:06:15,100
all the disciplines need to understand

00:06:12,310 --> 00:06:16,540
this from UX to design to front-end to

00:06:15,100 --> 00:06:18,970
back-end we're looking for the

00:06:16,540 --> 00:06:21,490
individual components used throughout

00:06:18,970 --> 00:06:23,440
the design modularity is the key to

00:06:21,490 --> 00:06:26,650
successful design and a successful

00:06:23,440 --> 00:06:28,030
project in the waterfall approach laid

00:06:26,650 --> 00:06:29,380
out earlier the front-end developer does

00:06:28,030 --> 00:06:33,010
not have a chance to import their wisdom

00:06:29,380 --> 00:06:34,570
into the design process indeed when your

00:06:33,010 --> 00:06:36,880
design team is completely separate from

00:06:34,570 --> 00:06:38,440
your front-end and development teams it

00:06:36,880 --> 00:06:40,360
becomes increasingly difficult to evolve

00:06:38,440 --> 00:06:41,590
the design as the technology and the

00:06:40,360 --> 00:06:44,820
results of the implementation of an

00:06:41,590 --> 00:06:49,480
implementation are seen and understood

00:06:44,820 --> 00:06:51,040
so what exactly is a component component

00:06:49,480 --> 00:06:53,200
is a concept it's hard to give it an

00:06:51,040 --> 00:06:54,940
exact definition a simple one might be a

00:06:53,200 --> 00:06:56,500
small collection of things on the page

00:06:54,940 --> 00:06:58,660
or a single feature that the site is

00:06:56,500 --> 00:06:59,950
going to produce the important thing is

00:06:58,660 --> 00:07:02,650
that the team agrees on what the

00:06:59,950 --> 00:07:04,330
components are what their names are in

00:07:02,650 --> 00:07:06,250
such a way that their purpose is is

00:07:04,330 --> 00:07:11,200
truly understood and this has to be a

00:07:06,250 --> 00:07:12,970
collaborative effort so here are some

00:07:11,200 --> 00:07:14,890
examples from a recent project we've

00:07:12,970 --> 00:07:16,690
done so perhaps you consider the head of

00:07:14,890 --> 00:07:21,460
the size of components content listing

00:07:16,690 --> 00:07:23,740
or the footer on a chap called Brad

00:07:21,460 --> 00:07:26,560
Frost did a lot of the work on coming up

00:07:23,740 --> 00:07:28,300
with this idea of atomic design three or

00:07:26,560 --> 00:07:30,250
four years ago which puts additional

00:07:28,300 --> 00:07:32,830
rigor around the component way of

00:07:30,250 --> 00:07:34,540
thinking and it defines an approach to

00:07:32,830 --> 00:07:36,970
produce a design system and a way of

00:07:34,540 --> 00:07:39,280
thinking about design systems I highly

00:07:36,970 --> 00:07:41,910
recommend that blog post and the book

00:07:39,280 --> 00:07:45,780
that he's written as well

00:07:41,910 --> 00:07:49,260
so in his in his idea we break a design

00:07:45,780 --> 00:07:52,290
down into smaller and smaller pieces he

00:07:49,260 --> 00:07:54,000
has the idea of atoms to the base type

00:07:52,290 --> 00:07:56,730
of graphical elements such as headings

00:07:54,000 --> 00:07:58,260
and buttons on the page and then from

00:07:56,730 --> 00:08:00,450
those base parts you can then combine

00:07:58,260 --> 00:08:02,160
them to produce molecules which may be

00:08:00,450 --> 00:08:05,520
slightly larger elements such as search

00:08:02,160 --> 00:08:07,500
form and then finally up to organisms

00:08:05,520 --> 00:08:09,330
and so forth where the heading might be

00:08:07,500 --> 00:08:11,960
an organism on the page or some

00:08:09,330 --> 00:08:13,980
component the page which is then reused

00:08:11,960 --> 00:08:15,090
adopting the atomic design principle

00:08:13,980 --> 00:08:17,010
system gives you a consistent approach

00:08:15,090 --> 00:08:19,560
to how you go about setting up a design

00:08:17,010 --> 00:08:21,030
system for your web project and there's

00:08:19,560 --> 00:08:23,760
a tool that goes alongside this called

00:08:21,030 --> 00:08:25,500
pattern lab which I'll go into in this

00:08:23,760 --> 00:08:28,950
talk but so you can find out more from

00:08:25,500 --> 00:08:31,290
brad frost website so the end product of

00:08:28,950 --> 00:08:32,789
this approach is a style guide a good

00:08:31,290 --> 00:08:34,140
style guide isn't something that just

00:08:32,789 --> 00:08:35,849
shows off the various aspects of the

00:08:34,140 --> 00:08:38,099
design used properly they are a

00:08:35,849 --> 00:08:40,469
collaboration tool bringing the design

00:08:38,099 --> 00:08:42,719
and the development teams together and

00:08:40,469 --> 00:08:43,979
at them and bridging those two teams and

00:08:42,719 --> 00:08:46,860
acting as the focal point of your

00:08:43,979 --> 00:08:48,870
collaborations it's a tool to break down

00:08:46,860 --> 00:08:50,460
the user interface into its component

00:08:48,870 --> 00:08:54,540
parts rather than thinking about it as a

00:08:50,460 --> 00:08:56,370
whole or as a series of pages the client

00:08:54,540 --> 00:08:57,690
can browse through it and see it working

00:08:56,370 --> 00:08:59,430
and because it is an ax browser we can

00:08:57,690 --> 00:09:02,190
see how the components will react on

00:08:59,430 --> 00:09:03,330
every device they also serve as a

00:09:02,190 --> 00:09:04,680
resource for new designers and

00:09:03,330 --> 00:09:07,800
developers to get an understanding of

00:09:04,680 --> 00:09:09,630
the entire system in one place and it

00:09:07,800 --> 00:09:11,910
helps folk Peter work where the team can

00:09:09,630 --> 00:09:13,890
locate existing patterns and combine the

00:09:11,910 --> 00:09:15,630
smaller elements to create new larger

00:09:13,890 --> 00:09:17,280
sized elements this helps lock the

00:09:15,630 --> 00:09:18,510
design system in place and prevents the

00:09:17,280 --> 00:09:20,250
creation of large numbers and new

00:09:18,510 --> 00:09:25,290
stylistic elements every time a new

00:09:20,250 --> 00:09:27,000
feature on the site is commissioned so

00:09:25,290 --> 00:09:30,680
what's the point of developing a neat a

00:09:27,000 --> 00:09:36,080
neat design system I like this image

00:09:30,680 --> 00:09:36,080
system from one of our process pages but

00:09:36,380 --> 00:09:41,460
without a design system the bits of your

00:09:38,670 --> 00:09:43,920
design end up being not the scatter pile

00:09:41,460 --> 00:09:45,960
of LEGO bricks all the bits are there

00:09:43,920 --> 00:09:49,230
but you have to rummage around to find

00:09:45,960 --> 00:09:52,260
the right parts if you can't find it we

00:09:49,230 --> 00:09:53,580
don't know a bit actually exists you

00:09:52,260 --> 00:09:55,170
might be tempted to bring in a new piece

00:09:53,580 --> 00:09:57,710
to complete your project further

00:09:55,170 --> 00:10:01,470
enlarging and complicating that pile I

00:09:57,710 --> 00:10:03,810
think if you looked at any older Drupal

00:10:01,470 --> 00:10:05,100
themes then working away through there

00:10:03,810 --> 00:10:08,550
might feel a bit like shifting through

00:10:05,100 --> 00:10:10,170
part of LEGO bricks so taking the time

00:10:08,550 --> 00:10:11,340
to organize your pieces allows you to

00:10:10,170 --> 00:10:12,660
approach the development of new

00:10:11,340 --> 00:10:15,000
components and a consistent and

00:10:12,660 --> 00:10:16,620
efficient manner certainly there's a

00:10:15,000 --> 00:10:18,210
time involved in doing this but it's

00:10:16,620 --> 00:10:20,430
it's time that pays off in the long run

00:10:18,210 --> 00:10:21,690
now the new feature builder can see

00:10:20,430 --> 00:10:24,030
exactly what is available for them to

00:10:21,690 --> 00:10:25,830
use and now the changes to the design

00:10:24,030 --> 00:10:28,020
system can flow through to all the

00:10:25,830 --> 00:10:30,510
backend systems and I made use of it the

00:10:28,020 --> 00:10:35,970
development of new features is much

00:10:30,510 --> 00:10:38,490
simpler so here are some real examples

00:10:35,970 --> 00:10:40,560
from the projects here we see a single

00:10:38,490 --> 00:10:43,860
Assam being an example of a button and

00:10:40,560 --> 00:10:46,440
molecule it is a piece of teaser and

00:10:43,860 --> 00:10:52,920
then an organism which maybe the panel

00:10:46,440 --> 00:10:56,070
listing so we start thinking about what

00:10:52,920 --> 00:10:58,530
would be a good process for your team in

00:10:56,070 --> 00:11:00,630
order to abuse this and first start for

00:10:58,530 --> 00:11:03,120
us this starts at the UX phase where the

00:11:00,630 --> 00:11:06,060
UX analyst has identified a pattern in

00:11:03,120 --> 00:11:08,850
the emerging project they name it and

00:11:06,060 --> 00:11:09,930
they define its purpose and this is the

00:11:08,850 --> 00:11:12,030
point where the team then gathers

00:11:09,930 --> 00:11:13,350
together to work on these patterns to

00:11:12,030 --> 00:11:15,600
understand them and truly understand

00:11:13,350 --> 00:11:17,220
them at this point the team will get

00:11:15,600 --> 00:11:19,260
involved to annotate the data attributes

00:11:17,220 --> 00:11:20,730
and their types and in theory this is

00:11:19,260 --> 00:11:22,380
sufficient for the entire rest of the

00:11:20,730 --> 00:11:27,300
team to work on a components in a single

00:11:22,380 --> 00:11:28,620
sprint the designer will then design the

00:11:27,300 --> 00:11:30,720
components in collaboration with the

00:11:28,620 --> 00:11:33,900
front-end er who is building it out in

00:11:30,720 --> 00:11:35,460
our component front-end tool system this

00:11:33,900 --> 00:11:38,250
may be patterned lab or maybe another

00:11:35,460 --> 00:11:40,200
tool once the backend is building the

00:11:38,250 --> 00:11:43,080
content types and views necessary to

00:11:40,200 --> 00:11:44,190
support it in Drupal it's possible that

00:11:43,080 --> 00:11:45,780
when you get good at this you'll find

00:11:44,190 --> 00:11:47,880
that the designer doesn't even need to

00:11:45,780 --> 00:11:48,540
share Photoshop designs or sketch

00:11:47,880 --> 00:11:51,210
designs with

00:11:48,540 --> 00:11:52,620
applying for sign-off at all even just

00:11:51,210 --> 00:11:53,910
the component level and the component

00:11:52,620 --> 00:12:00,000
library itself for all that needs to be

00:11:53,910 --> 00:12:01,110
shared and so you can get to a point

00:12:00,000 --> 00:12:03,360
where you're actually developing an

00:12:01,110 --> 00:12:05,610
evolving solution where the front ender

00:12:03,360 --> 00:12:07,380
can start by producing placeholder

00:12:05,610 --> 00:12:08,580
elements given that they know what's

00:12:07,380 --> 00:12:09,570
involved in creating those elements

00:12:08,580 --> 00:12:11,700
because there is the collaboration

00:12:09,570 --> 00:12:13,200
beforehand and as the design becomes

00:12:11,700 --> 00:12:19,100
available they can then start filling in

00:12:13,200 --> 00:12:19,100
the gaps and refining the output

00:12:20,910 --> 00:12:24,790
and so that's all grated there you've

00:12:23,140 --> 00:12:27,310
built a neat design system we've used a

00:12:24,790 --> 00:12:29,650
tool like patent lab and we have a fancy

00:12:27,310 --> 00:12:32,200
style guide to show guys showcase what's

00:12:29,650 --> 00:12:35,860
been designed but how but what happens

00:12:32,200 --> 00:12:38,170
we try and bring this into Drupal so

00:12:35,860 --> 00:12:42,160
Drupal uses a template based theming

00:12:38,170 --> 00:12:43,960
system here on the board we can see that

00:12:42,160 --> 00:12:46,900
the templates folder of one of the core

00:12:43,960 --> 00:12:48,550
Drupal themes markup is organized in the

00:12:46,900 --> 00:12:52,150
theme based on the conventions of the

00:12:48,550 --> 00:12:54,070
CMS so we have things in there that you

00:12:52,150 --> 00:12:57,520
have to know all about Drupal in order

00:12:54,070 --> 00:13:00,250
to work with this blocks content views

00:12:57,520 --> 00:13:01,960
for example our code is duplicated

00:13:00,250 --> 00:13:05,020
across these templates it's not uncommon

00:13:01,960 --> 00:13:07,480
to find for example a Content template

00:13:05,020 --> 00:13:09,340
file for each content type in a Drupal

00:13:07,480 --> 00:13:12,070
website and much of the markup in each

00:13:09,340 --> 00:13:14,710
of these content files is is repeated

00:13:12,070 --> 00:13:16,150
from one content type to the next or you

00:13:14,710 --> 00:13:17,860
have single templates which have an

00:13:16,150 --> 00:13:21,490
awful lot of switches or nested ifs

00:13:17,860 --> 00:13:25,180
inside and so in this case the mark-up

00:13:21,490 --> 00:13:27,970
isn't dry which is an acronym for do not

00:13:25,180 --> 00:13:29,770
repeat yourself the code isn't modular

00:13:27,970 --> 00:13:34,330
in the way that's the code in our style

00:13:29,770 --> 00:13:35,770
guide will will be now if we want to

00:13:34,330 --> 00:13:38,590
make a change when to choose a new

00:13:35,770 --> 00:13:39,970
template to your Drupal theme I start to

00:13:38,590 --> 00:13:41,800
see some of these problems for a new

00:13:39,970 --> 00:13:44,110
content type we have to build a new

00:13:41,800 --> 00:13:48,250
template and copy and paste the markup

00:13:44,110 --> 00:13:49,900
from one template to another and if we

00:13:48,250 --> 00:13:51,220
make a change to the base styling we

00:13:49,900 --> 00:13:52,810
don't want to go searching for every

00:13:51,220 --> 00:13:56,410
instance of a pattern through all the

00:13:52,810 --> 00:13:58,600
templates also if we have a design

00:13:56,410 --> 00:14:00,370
system and a style guide then we are

00:13:58,600 --> 00:14:02,500
copying and pasting markup from the

00:14:00,370 --> 00:14:05,440
style guide into the CMS system and

00:14:02,500 --> 00:14:08,290
there's code duplication again then

00:14:05,440 --> 00:14:09,790
finally changes made as the project

00:14:08,290 --> 00:14:12,490
evolves are unlikely to find their way

00:14:09,790 --> 00:14:13,810
back into that style guide usual project

00:14:12,490 --> 00:14:15,160
strains and time constraints are

00:14:13,810 --> 00:14:17,140
naturally going to mean that changes get

00:14:15,160 --> 00:14:19,210
applied directly to the CMS and the

00:14:17,140 --> 00:14:20,500
Drupal theme and the style guide will

00:14:19,210 --> 00:14:21,790
slowly drift out of sync with the

00:14:20,500 --> 00:14:24,400
systems that it's supposed to be

00:14:21,790 --> 00:14:26,020
supporting when this happens the style

00:14:24,400 --> 00:14:27,730
guide ceases to be useful and in fact

00:14:26,020 --> 00:14:28,930
can be a cause of misdirection and

00:14:27,730 --> 00:14:31,160
confusion between the project team

00:14:28,930 --> 00:14:32,300
members as they

00:14:31,160 --> 00:14:35,019
reference different versions of the

00:14:32,300 --> 00:14:37,279
truth that's stored in different places

00:14:35,019 --> 00:14:39,620
what we need is the style guide

00:14:37,279 --> 00:14:42,529
templates and CSS we pulled into the

00:14:39,620 --> 00:14:45,519
right points of the Drupal theme so that

00:14:42,529 --> 00:14:45,519
it's sharing the same code

00:14:46,459 --> 00:14:53,240
here's another theme in core this is the

00:14:49,160 --> 00:14:55,399
7 theme separation of concerns relates

00:14:53,240 --> 00:14:57,529
to the ability to put similar bits of

00:14:55,399 --> 00:15:02,300
code together so that it's easy easy to

00:14:57,529 --> 00:15:04,699
reason about them the concern should be

00:15:02,300 --> 00:15:06,319
around a concept or something that the

00:15:04,699 --> 00:15:08,329
developer knows that their only work on

00:15:06,319 --> 00:15:11,300
one thing the approach taken by this

00:15:08,329 --> 00:15:12,769
theme which is a fairly standard Drupal

00:15:11,300 --> 00:15:15,170
theme part and is to organize the

00:15:12,769 --> 00:15:17,089
elements of a theme by file extension so

00:15:15,170 --> 00:15:19,490
will the CSS isn't a folder together all

00:15:17,089 --> 00:15:21,170
the JavaScript is in a GIS folder and

00:15:19,490 --> 00:15:24,949
all the HTML markup is in the templates

00:15:21,170 --> 00:15:28,790
folder and so this is separation by file

00:15:24,949 --> 00:15:30,139
type not by concept when developing a

00:15:28,790 --> 00:15:31,399
component we want everything about that

00:15:30,139 --> 00:15:33,259
component to be contained together is

00:15:31,399 --> 00:15:35,660
markup in the form of tweak templates

00:15:33,259 --> 00:15:37,670
its CSS and it's Java scripts and any

00:15:35,660 --> 00:15:38,600
JavaScript associated with it the

00:15:37,670 --> 00:15:40,939
problem of this approach is that

00:15:38,600 --> 00:15:42,949
developer must jump around to make

00:15:40,939 --> 00:15:45,230
changes to any specific elements it's

00:15:42,949 --> 00:15:47,209
likely that they will work on the HTML

00:15:45,230 --> 00:15:49,160
and the CSS concerning a single page

00:15:47,209 --> 00:15:50,329
elements at the same time but must hunt

00:15:49,160 --> 00:15:54,709
down the bits they need in order to

00:15:50,329 --> 00:15:56,180
change with a component based approach

00:15:54,709 --> 00:15:58,699
all the aspects of the component should

00:15:56,180 --> 00:16:02,180
be stored together the folder should be

00:15:58,699 --> 00:16:03,290
named after the component and and in it

00:16:02,180 --> 00:16:05,959
we should find everything we need to

00:16:03,290 --> 00:16:08,360
work on its markup and took 4 CSS and

00:16:05,959 --> 00:16:12,560
then a Java Script to further modulized

00:16:08,360 --> 00:16:14,809
the CSS we use sass and the block

00:16:12,560 --> 00:16:17,029
element modifier or BEM approach to

00:16:14,809 --> 00:16:18,620
ensure that the CSF defined in the

00:16:17,029 --> 00:16:20,750
component only affects that component

00:16:18,620 --> 00:16:22,189
this avoids problems we're changing CSS

00:16:20,750 --> 00:16:25,189
can have unexpected consequences on

00:16:22,189 --> 00:16:26,540
other parts of the codebase if you're

00:16:25,189 --> 00:16:29,980
not familiar with the BEM standard then

00:16:26,540 --> 00:16:29,980
I recommend looking up

00:16:30,430 --> 00:16:35,830
so here's a trivial code example of

00:16:32,899 --> 00:16:38,450
what's a the components might look like

00:16:35,830 --> 00:16:40,459
this is the template code for a button

00:16:38,450 --> 00:16:41,750
on a page so we've defined the variables

00:16:40,459 --> 00:16:45,850
that can be passed into this template

00:16:41,750 --> 00:16:45,850
URL and the text of a button

00:16:54,550 --> 00:17:01,880
sorry and then what we want to be able

00:16:58,850 --> 00:17:03,740
to do then is to use that that template

00:17:01,880 --> 00:17:05,990
that was built for our style guide first

00:17:03,740 --> 00:17:08,329
our styling system we want to be able to

00:17:05,990 --> 00:17:10,390
use it in Drupal and I'm gonna just

00:17:08,329 --> 00:17:13,730
describe two approaches to doing that

00:17:10,390 --> 00:17:15,470
and this is well we've we've used a

00:17:13,730 --> 00:17:19,220
small amount of and then there's another

00:17:15,470 --> 00:17:20,750
one that's slightly more more often this

00:17:19,220 --> 00:17:23,930
uses some libraries that we built for

00:17:20,750 --> 00:17:25,550
our front-end process and they're the

00:17:23,930 --> 00:17:26,959
link at the bottom there will give you

00:17:25,550 --> 00:17:29,090
more information about exactly how this

00:17:26,959 --> 00:17:32,120
works but we're using a modern build

00:17:29,090 --> 00:17:34,880
build tool setup so web pack docker etc

00:17:32,120 --> 00:17:36,650
and we've got an integration library and

00:17:34,880 --> 00:17:39,020
each component that gets created inside

00:17:36,650 --> 00:17:41,420
of our front-end system it gets its own

00:17:39,020 --> 00:17:43,010
theme function inside of Drupal and this

00:17:41,420 --> 00:17:44,630
is autumn auto-generated code that we

00:17:43,010 --> 00:17:47,030
include there inside of that hook theme

00:17:44,630 --> 00:17:48,770
implementation so that when within

00:17:47,030 --> 00:17:52,030
Drupal the Drupal developer can then use

00:17:48,770 --> 00:17:54,560
any of those components that got created

00:17:52,030 --> 00:17:58,220
inside the style guide as they wish

00:17:54,560 --> 00:18:00,860
within the Drupal beautiful thing and

00:17:58,220 --> 00:18:02,780
the other approach is to include the

00:18:00,860 --> 00:18:05,870
design system templates directly inside

00:18:02,780 --> 00:18:09,140
of Drupal templates so Drupal was acting

00:18:05,870 --> 00:18:11,240
as a bridge well the true port theme is

00:18:09,140 --> 00:18:13,970
acting as a bridge between Drupal itself

00:18:11,240 --> 00:18:15,560
and our design system and this requires

00:18:13,970 --> 00:18:18,140
the use of components module for Drupal

00:18:15,560 --> 00:18:21,710
8 and the instructions for this are on

00:18:18,140 --> 00:18:23,150
the components module page so with this

00:18:21,710 --> 00:18:25,130
approach you need to specify where your

00:18:23,150 --> 00:18:27,650
additional twig templates are stored in

00:18:25,130 --> 00:18:30,140
relation to your theme inside the themes

00:18:27,650 --> 00:18:31,340
info Yama file and then you can include

00:18:30,140 --> 00:18:33,020
those templates as I've done here with

00:18:31,340 --> 00:18:35,840
another trivial example and this is the

00:18:33,020 --> 00:18:37,940
page title HTML to exemplify which

00:18:35,840 --> 00:18:41,120
normally just contains the fixed markup

00:18:37,940 --> 00:18:42,440
of ah-1 elements for a page and all

00:18:41,120 --> 00:18:44,690
we've done here is passed through the

00:18:42,440 --> 00:18:45,950
variable supplied in a drupal way to the

00:18:44,690 --> 00:18:48,140
variables that we defined would be

00:18:45,950 --> 00:18:50,120
needed for our component so the

00:18:48,140 --> 00:18:52,790
component itself doesn't include any

00:18:50,120 --> 00:18:54,890
specific Drupal isms within it makes no

00:18:52,790 --> 00:18:56,420
assumption about the the names of the

00:18:54,890 --> 00:19:00,410
naming scheme used for the individual

00:18:56,420 --> 00:19:01,970
variables the idea with both methods

00:19:00,410 --> 00:19:03,350
that I've described there is that you're

00:19:01,970 --> 00:19:05,270
not creating markup inside of your

00:19:03,350 --> 00:19:08,110
Drupal theme markup is pulled from your

00:19:05,270 --> 00:19:08,110
design system

00:19:12,029 --> 00:19:14,960
sorry

00:19:22,080 --> 00:19:26,250
so hopefully with these examples you can

00:19:24,060 --> 00:19:28,110
see the power of the the options that

00:19:26,250 --> 00:19:29,580
are available by using includes or

00:19:28,110 --> 00:19:31,920
custom theme functions the Drupal theme

00:19:29,580 --> 00:19:34,740
can be used as a bridge between the

00:19:31,920 --> 00:19:36,480
design system which was specifically

00:19:34,740 --> 00:19:37,980
designed for a client and the clients

00:19:36,480 --> 00:19:40,920
domain language and the clients project

00:19:37,980 --> 00:19:42,600
and the Drupal CMS we've removed the

00:19:40,920 --> 00:19:44,580
need to introduce Drupal naming

00:19:42,600 --> 00:19:47,910
conventions and standards to the design

00:19:44,580 --> 00:19:49,890
system or static style guides we've also

00:19:47,910 --> 00:19:52,620
removed the need for the front Enders to

00:19:49,890 --> 00:19:54,480
know Drupal at all so it's possible to

00:19:52,620 --> 00:19:56,160
have very specialized front-end

00:19:54,480 --> 00:19:59,130
developers who work you can work

00:19:56,160 --> 00:20:01,020
entirely inside the design system

00:19:59,130 --> 00:20:05,430
concentrating their energies on the

00:20:01,020 --> 00:20:06,780
development of awesome front-end the

00:20:05,430 --> 00:20:07,920
Drupal developers are also freed from

00:20:06,780 --> 00:20:09,540
the complexities of implement in their

00:20:07,920 --> 00:20:11,760
design and only need to work on bridging

00:20:09,540 --> 00:20:14,130
of the two systems and finally we've

00:20:11,760 --> 00:20:16,050
created a living style guide as opposed

00:20:14,130 --> 00:20:17,730
to a static style guide as Drupal is

00:20:16,050 --> 00:20:20,160
using the same templates as the style

00:20:17,730 --> 00:20:22,410
guide itself so any change from one what

00:20:20,160 --> 00:20:27,120
we carried into the other and the two

00:20:22,410 --> 00:20:29,400
don't fall out of sync let's briefly

00:20:27,120 --> 00:20:30,810
include in conclusion and decoupling

00:20:29,400 --> 00:20:35,790
your UI elements in your application

00:20:30,810 --> 00:20:37,560
development process is beneficial using

00:20:35,790 --> 00:20:39,510
component design process to focus on

00:20:37,560 --> 00:20:44,130
reducing complexity and increasing

00:20:39,510 --> 00:20:45,420
reusability and most importantly I think

00:20:44,130 --> 00:20:48,540
move away from a waterfall design

00:20:45,420 --> 00:20:53,040
process into one that is truly agile and

00:20:48,540 --> 00:20:59,070
encompasses the entire team so this is

00:20:53,040 --> 00:21:00,420
my reading list as I'm sure number of

00:20:59,070 --> 00:21:02,510
you've seen quite three of these things

00:21:00,420 --> 00:21:05,190
before but if you have an estimate good

00:21:02,510 --> 00:21:07,860
examples there from Brad Frost's Bob

00:21:05,190 --> 00:21:09,360
post and then the part video where he

00:21:07,860 --> 00:21:13,410
describes you Tom excelent approach and

00:21:09,360 --> 00:21:15,120
and pattern lab the Lonely Planet guide

00:21:13,410 --> 00:21:16,470
there talks about the creation of a

00:21:15,120 --> 00:21:21,090
maintainable style guide and why that's

00:21:16,470 --> 00:21:23,400
important for kitchens did a drupal

00:21:21,090 --> 00:21:25,920
tutorial search for tutorial videos

00:21:23,400 --> 00:21:28,170
which cover many of the things I've

00:21:25,920 --> 00:21:29,350
described here today as well and then

00:21:28,170 --> 00:21:30,789
finally

00:21:29,350 --> 00:21:32,860
at the bottom there we've got decent

00:21:30,789 --> 00:21:35,400
approach to front-end development which

00:21:32,860 --> 00:21:39,039
includes some of the libraries that I

00:21:35,400 --> 00:21:43,090
described when integrating the templates

00:21:39,039 --> 00:21:44,760
into your Drupal thing so thank you very

00:21:43,090 --> 00:21:47,920
much

00:21:44,760 --> 00:21:47,920
[Applause]

00:21:51,860 --> 00:21:56,630
we've got two minutes if anyone wants to

00:21:54,240 --> 00:21:56,630
ask some questions

00:21:59,030 --> 00:22:02,300
it's a mic

00:22:09,530 --> 00:22:19,330
hi um so how do you present the modular

00:22:14,930 --> 00:22:22,670
based kind of aspects to your clients

00:22:19,330 --> 00:22:26,450
if you don't present them a whole page

00:22:22,670 --> 00:22:29,660
for example so yeah you know do they

00:22:26,450 --> 00:22:31,400
cope with that yeah it's difficult and

00:22:29,660 --> 00:22:33,110
it's a process that you have to go

00:22:31,400 --> 00:22:36,260
through I think to to be able to get to

00:22:33,110 --> 00:22:38,420
that level of trust early early in a

00:22:36,260 --> 00:22:40,910
project cycle we run something called a

00:22:38,420 --> 00:22:43,310
feasibility workshop very early on and

00:22:40,910 --> 00:22:45,020
as part of that we we sit down with the

00:22:43,310 --> 00:22:46,880
client to describe both the approaching

00:22:45,020 --> 00:22:48,860
quite some detail but also to understand

00:22:46,880 --> 00:22:50,360
the feasibility of their project both

00:22:48,860 --> 00:22:51,980
from a cost perspective a technology

00:22:50,360 --> 00:22:53,840
perspective a brand perspective but also

00:22:51,980 --> 00:22:55,610
from the team perspective so we have to

00:22:53,840 --> 00:22:57,530
understand from them is your team ready

00:22:55,610 --> 00:22:59,150
for an agile project yeah and in the

00:22:57,530 --> 00:23:00,380
case and what comes out at the end of

00:22:59,150 --> 00:23:02,630
the feasibility workshop will be a

00:23:00,380 --> 00:23:03,980
report that says your team likes the

00:23:02,630 --> 00:23:06,740
ideas but they're not quite there yet

00:23:03,980 --> 00:23:09,950
and so we'll provide training in order

00:23:06,740 --> 00:23:13,310
to get to that point even at that point

00:23:09,950 --> 00:23:14,630
there's certainly an element of yeah but

00:23:13,310 --> 00:23:15,980
we still need to see some designs we

00:23:14,630 --> 00:23:18,290
need to sign off on something at some

00:23:15,980 --> 00:23:19,670
point so through the foundation stages

00:23:18,290 --> 00:23:21,010
of a project which we won't we wouldn't

00:23:19,670 --> 00:23:23,450
want to last more than two to four weeks

00:23:21,010 --> 00:23:25,850
we develop something called the design

00:23:23,450 --> 00:23:27,140
direction which is essentially focused

00:23:25,850 --> 00:23:29,120
on those lower level building block

00:23:27,140 --> 00:23:30,860
elements so it's kind of this is the

00:23:29,120 --> 00:23:32,720
feel for where you're going but it's not

00:23:30,860 --> 00:23:34,010
it's not the entirety and it's certainly

00:23:32,720 --> 00:23:35,150
not the finished product so don't look

00:23:34,010 --> 00:23:36,650
at this and think this is what you're

00:23:35,150 --> 00:23:37,520
going to get because it won't go that

00:23:36,650 --> 00:23:39,380
way okay

00:23:37,520 --> 00:23:41,240
and it's that continuous conversation

00:23:39,380 --> 00:23:42,980
that builds that trust and builds that

00:23:41,240 --> 00:23:44,540
understanding how it works I find people

00:23:42,980 --> 00:23:45,890
are easier to talk to about our job

00:23:44,540 --> 00:23:47,870
these days anyway because it's kind of

00:23:45,890 --> 00:23:52,670
in a lot of people's minds certainly

00:23:47,870 --> 00:23:55,420
isn't university true hi I'm just

00:23:52,670 --> 00:23:59,890
curious to know your thoughts on

00:23:55,420 --> 00:24:01,480
a component based approach with twig

00:23:59,890 --> 00:24:03,070
where you're having to try and couple

00:24:01,480 --> 00:24:04,450
things together and try and structure

00:24:03,070 --> 00:24:08,410
your filesystem together to get

00:24:04,450 --> 00:24:10,390
everything you know closer decoupled bit

00:24:08,410 --> 00:24:13,210
coupled compared to something like view

00:24:10,390 --> 00:24:16,330
where you have a view file where your

00:24:13,210 --> 00:24:20,410
markup your Jas and your styling

00:24:16,330 --> 00:24:23,050
language is and your thoughts on like

00:24:20,410 --> 00:24:26,890
how Drupal could possibly move forwards

00:24:23,050 --> 00:24:28,360
in this area yeah so it's a good

00:24:26,890 --> 00:24:30,280
question and I think when you get into

00:24:28,360 --> 00:24:32,440
this and the examples in here are pretty

00:24:30,280 --> 00:24:35,020
trivial and there you'll certainly come

00:24:32,440 --> 00:24:36,310
up with some some blocks along the way

00:24:35,020 --> 00:24:38,200
of things like how do we actually

00:24:36,310 --> 00:24:40,930
implement this inside of Drupal in four

00:24:38,200 --> 00:24:43,300
kitchens have got some good that there

00:24:40,930 --> 00:24:45,520
video tutorial system series goes into

00:24:43,300 --> 00:24:47,260
this in more detail got the time to go

00:24:45,520 --> 00:24:48,850
into now but yeah it's certainly there

00:24:47,260 --> 00:24:50,680
are approaches that you can take in in

00:24:48,850 --> 00:24:52,090
all these things I think the key thing

00:24:50,680 --> 00:24:57,340
is to be quite flexible with your

00:24:52,090 --> 00:24:58,390
approach so again the as with any

00:24:57,340 --> 00:24:59,650
project you're going to hit roadblocks

00:24:58,390 --> 00:25:00,910
along the way there's going to be things

00:24:59,650 --> 00:25:02,170
that going to be difficult to do but

00:25:00,910 --> 00:25:03,340
that good conversation between your

00:25:02,170 --> 00:25:05,320
Drupal developer and your front-end

00:25:03,340 --> 00:25:06,910
developer rather than sticking to a very

00:25:05,320 --> 00:25:08,380
rigid well our front-end is only going

00:25:06,910 --> 00:25:09,790
to look like this and being able to be

00:25:08,380 --> 00:25:11,470
flexible in the way that they work as

00:25:09,790 --> 00:25:13,900
well so the two things can work together

00:25:11,470 --> 00:25:15,130
is the most important thing so keeping

00:25:13,900 --> 00:25:17,040
conversations open and being

00:25:15,130 --> 00:25:20,170
collaborative

00:25:17,040 --> 00:25:23,470
do you find it hindering though to stick

00:25:20,170 --> 00:25:26,140
within the Drupal front-end system of

00:25:23,470 --> 00:25:29,170
using something like twig whereas like

00:25:26,140 --> 00:25:30,880
you know I recently tried to take on a

00:25:29,170 --> 00:25:33,370
project where I combined

00:25:30,880 --> 00:25:36,400
I kept within Drupal as the front-end

00:25:33,370 --> 00:25:41,020
layer and tried to combine view into it

00:25:36,400 --> 00:25:43,000
and I just felt that it was far too much

00:25:41,020 --> 00:25:45,460
of a struggle to still try and work

00:25:43,000 --> 00:25:47,080
within Drupal whereas if I just go

00:25:45,460 --> 00:25:48,490
headless which seems to be the theme of

00:25:47,080 --> 00:25:52,060
the estroux pecan

00:25:48,490 --> 00:25:55,270
it was a lot simpler to get a component

00:25:52,060 --> 00:25:57,070
driven design yeah I think when we build

00:25:55,270 --> 00:25:58,630
headless systems as well so I think

00:25:57,070 --> 00:26:01,970
there's there's there's pros and cons to

00:25:58,630 --> 00:26:04,530
both approaches but yeah I told you

00:26:01,970 --> 00:26:07,080
have you thought about implementing

00:26:04,530 --> 00:26:09,180
these Stargate components as plugins of

00:26:07,080 --> 00:26:12,420
some sort like for matters of use

00:26:09,180 --> 00:26:14,070
plugins and or does it not does it do

00:26:12,420 --> 00:26:16,590
you see that much there do you think

00:26:14,070 --> 00:26:18,000
that's some should be separate yeah I

00:26:16,590 --> 00:26:20,790
mean there's there's elements of things

00:26:18,000 --> 00:26:21,990
you can do there but the the need to

00:26:20,790 --> 00:26:25,020
separate the two I think is quite

00:26:21,990 --> 00:26:26,970
important so we have some if you have a

00:26:25,020 --> 00:26:28,830
look at our demo site if you follow that

00:26:26,970 --> 00:26:30,570
bottom link and start to have a look and

00:26:28,830 --> 00:26:33,450
explore what we've done you'll start to

00:26:30,570 --> 00:26:34,410
see some of the examples of the way that

00:26:33,450 --> 00:26:37,800
we've got have thought about some of

00:26:34,410 --> 00:26:39,780
these things but yeah I don't think

00:26:37,800 --> 00:26:42,960
there's any specifics around how we're

00:26:39,780 --> 00:26:45,120
gonna do that if you would be interested

00:26:42,960 --> 00:26:47,700
in that I have the module called render

00:26:45,120 --> 00:26:49,710
kid which is aimed to have more smaller

00:26:47,700 --> 00:26:52,530
fine grained components which would be

00:26:49,710 --> 00:26:54,810
could more easily be mapped to this kind

00:26:52,530 --> 00:26:57,420
of style guide components when renders

00:26:54,810 --> 00:26:58,950
indicates yeah every chapter thanks we

00:26:57,420 --> 00:27:01,230
have to stay idea will make it both

00:26:58,950 --> 00:27:02,460
about that mode we've run out of time so

00:27:01,230 --> 00:27:03,990
and I've to take some questions

00:27:02,460 --> 00:27:06,230
afterwards but it's a yeah thank you

00:27:03,990 --> 00:27:06,230
very much

00:27:06,260 --> 00:27:10,490
[Applause]

00:27:17,830 --> 00:27:20,830
yeah

00:27:20,880 --> 00:27:22,940

YouTube URL: https://www.youtube.com/watch?v=hyrQ7slI_3s


