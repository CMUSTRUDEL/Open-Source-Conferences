Title: DrupalCon Vienna 2017: Introducing the UI Patterns module: use atomic UI components
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	In this session we will show how the UI Patterns module allows you to define and expose self-contained UI patterns as Drupal 8 plugins and to use them as drop-in templates for panels, field groups, views, Display Suite view modes, field templates, etc.

Over the past years projects like PatternLab or the Component Libraries module aimed at lowering the cost of maintaining and re-using UI patterns in your projects. But, as we all know, when it comes to presenting content the Drupal 8 landscape is quite diverse: you can layout your pages using Panels or Views, style your entities using Display Suite view modes, group your fields with Field group, etc. Such a diversification can surely present some challenges when it comes at reusing a well-designed and consistent UI library. The UI Patterns module makes it possible to seamlessly use UI patterns with views, layouts, field formatters, etc.

The session will also feature a brief live-demo of the following functionalities:

Define and preview patterns using YAML via the built-in Pattern Library module
Organise patterns into self-contained bundles of JavaScript, CSS and TWIG templates
Expose PatternLab and Fractal patterns to Drupal
Use patterns as layouts with Paragraphs, Panels and Display Suite
Use patterns as field group templates with the Fieldgroup module
Use patterns as Views row templates
Use patterns as entity field templates
Use patterns with the Bricks module
Advanced topic: a closer look to UI Patterns internals
Captions: 
	00:00:00,650 --> 00:00:06,810
all right so welcome everybody thank you

00:00:03,780 --> 00:00:09,870
for coming and this session are gonna

00:00:06,810 --> 00:00:14,370
introduce the UI pattern model it's a

00:00:09,870 --> 00:00:15,960
way to organize and use UI atomic

00:00:14,370 --> 00:00:20,699
components basically in Drupal 8

00:00:15,960 --> 00:00:24,779
so first couple of slides about about us

00:00:20,699 --> 00:00:27,420
so we are luolan it's a distributed web

00:00:24,779 --> 00:00:29,279
the development company a present in

00:00:27,420 --> 00:00:31,289
these three countries in Italy in

00:00:29,279 --> 00:00:33,630
Belgium Czech Republic I live in Belgium

00:00:31,289 --> 00:00:35,809
and the fiber near in front is leaves in

00:00:33,630 --> 00:00:39,270
Czech Republic being from Switzerland so

00:00:35,809 --> 00:00:42,030
our clients are usually international

00:00:39,270 --> 00:00:46,230
organizations and why is this relevant

00:00:42,030 --> 00:00:48,510
to these presentations because well some

00:00:46,230 --> 00:00:49,860
of the big iteration organization we

00:00:48,510 --> 00:00:54,239
work with they like to have like a

00:00:49,860 --> 00:00:55,980
different like part of their team

00:00:54,239 --> 00:00:57,770
working only on the presentation layer

00:00:55,980 --> 00:01:00,180
right so they don't care that much about

00:00:57,770 --> 00:01:02,280
which the terms we are gonna use at the

00:01:00,180 --> 00:01:05,010
end to implement the site or feed or

00:01:02,280 --> 00:01:07,890
deploy any sides I just want to deliver

00:01:05,010 --> 00:01:10,320
a consistent UI language for the

00:01:07,890 --> 00:01:12,570
organization so often we find ourself

00:01:10,320 --> 00:01:16,170
working with this kind of team that just

00:01:12,570 --> 00:01:17,970
produce just a beautiful front end piece

00:01:16,170 --> 00:01:20,759
of work and we just did just ask us to

00:01:17,970 --> 00:01:22,740
integrate it so here a good cooperation

00:01:20,759 --> 00:01:25,259
between a back and a front end is really

00:01:22,740 --> 00:01:28,409
really essential and this good

00:01:25,259 --> 00:01:30,930
cooperation also passes through like an

00:01:28,409 --> 00:01:32,159
optimized war for UI patterns helps a

00:01:30,930 --> 00:01:34,920
bit in this as well

00:01:32,159 --> 00:01:35,759
so atomic design and Drupal why atomic

00:01:34,920 --> 00:01:37,740
design well

00:01:35,759 --> 00:01:40,250
atomic the Sun is really sets up a very

00:01:37,740 --> 00:01:43,200
good work for integrating external

00:01:40,250 --> 00:01:47,640
libraries into into any application

00:01:43,200 --> 00:01:50,430
which it allows to build a consistent

00:01:47,640 --> 00:01:51,960
maintainer user interface language by

00:01:50,430 --> 00:01:54,180
doing that you also create like a living

00:01:51,960 --> 00:01:56,490
style guide or documentation at the ends

00:01:54,180 --> 00:01:59,640
that editors content editors can use

00:01:56,490 --> 00:02:00,930
when they edit their content and the

00:01:59,640 --> 00:02:03,030
streamlines of course the workflow

00:02:00,930 --> 00:02:06,180
between front and back and developers

00:02:03,030 --> 00:02:08,340
and it makes the UI components reusable

00:02:06,180 --> 00:02:09,990
so that's why tonic design is gate is

00:02:08,340 --> 00:02:12,450
gaining momentum and it's

00:02:09,990 --> 00:02:18,240
as a way to work between front end and

00:02:12,450 --> 00:02:20,360
back end so over time some popular

00:02:18,240 --> 00:02:23,460
component levels has been establishing

00:02:20,360 --> 00:02:25,740
for example factor is one of those it's

00:02:23,460 --> 00:02:29,660
a totally front end there is nothing

00:02:25,740 --> 00:02:33,810
cage P here you might have heard use it

00:02:29,660 --> 00:02:36,900
it's just good component library that it

00:02:33,810 --> 00:02:40,530
helps organize the components present

00:02:36,900 --> 00:02:42,210
them into like an overview section and

00:02:40,530 --> 00:02:44,940
stuff like that and the second one is

00:02:42,210 --> 00:02:47,640
pattern lab butter lab is more like PHP

00:02:44,940 --> 00:02:50,130
friendly thanks to its extensions this

00:02:47,640 --> 00:02:52,830
is what most of us in the Drupal

00:02:50,130 --> 00:02:54,690
environment I believe work with so we

00:02:52,830 --> 00:02:57,600
have like it's the most important of

00:02:54,690 --> 00:02:59,970
them all and there is pretty much offer

00:02:57,600 --> 00:03:04,680
the same kind of same kind of services

00:02:59,970 --> 00:03:07,710
like like factor one all right so what

00:03:04,680 --> 00:03:09,570
is atomic design well that we can use we

00:03:07,710 --> 00:03:11,400
can borrow this one from pattern lab

00:03:09,570 --> 00:03:13,320
website it's basically a way to organize

00:03:11,400 --> 00:03:17,070
your interface right so you start from

00:03:13,320 --> 00:03:20,190
the most atomic component the atoms as

00:03:17,070 --> 00:03:22,830
they like to call them so for example

00:03:20,190 --> 00:03:24,660
the button the search box everything

00:03:22,830 --> 00:03:26,610
that is really atomic and then you

00:03:24,660 --> 00:03:28,770
compose it out of these atoms in

00:03:26,610 --> 00:03:31,110
something that are like molecules right

00:03:28,770 --> 00:03:33,180
so different atoms together to bid for a

00:03:31,110 --> 00:03:35,700
sample search box and this search box

00:03:33,180 --> 00:03:39,060
that finds its place into something more

00:03:35,700 --> 00:03:41,070
complex organism so you go on until era

00:03:39,060 --> 00:03:43,020
you're arriving at a template level and

00:03:41,070 --> 00:03:46,560
the page is level at the end so you

00:03:43,020 --> 00:03:50,430
really build your your UI language in

00:03:46,560 --> 00:03:52,890
this way now what's the status of this

00:03:50,430 --> 00:03:56,340
in Drupal 8 so we have several options

00:03:52,890 --> 00:03:59,850
at the moment very valid one one is

00:03:56,340 --> 00:04:04,710
component libraries components module it

00:03:59,850 --> 00:04:06,240
allows you to expose components in in a

00:04:04,710 --> 00:04:09,900
way that Drupal knows about that them

00:04:06,240 --> 00:04:11,910
and you can easily load them into your

00:04:09,900 --> 00:04:14,400
twig templates using them spacing

00:04:11,910 --> 00:04:16,200
basically yeah Twiggy namespace they

00:04:14,400 --> 00:04:17,790
need more complex solution more

00:04:16,200 --> 00:04:19,950
comprehensive solution if you if you

00:04:17,790 --> 00:04:22,560
will like a Musa Phi for example or

00:04:19,950 --> 00:04:23,830
starter kit or pattern lab starter they

00:04:22,560 --> 00:04:26,310
all like

00:04:23,830 --> 00:04:29,860
work with pattern lab and they try to

00:04:26,310 --> 00:04:32,020
integrate pattern lab with with Drupal

00:04:29,860 --> 00:04:34,050
to streamline stimuli on your workflow

00:04:32,020 --> 00:04:37,840
and they do a pretty good job at that

00:04:34,050 --> 00:04:41,139
so what twig is about like what's what

00:04:37,840 --> 00:04:44,110
stick state then when we talk about

00:04:41,139 --> 00:04:47,259
atomic design well tweak aims at

00:04:44,110 --> 00:04:49,690
advancing reusability already so you

00:04:47,259 --> 00:04:51,880
already have stuff like include extend

00:04:49,690 --> 00:04:55,270
or embed all this statement allows you

00:04:51,880 --> 00:04:57,490
any way to structure your your workspace

00:04:55,270 --> 00:05:00,250
in a proper way so you can do stuff like

00:04:57,490 --> 00:05:03,100
that include template or tweak with foo

00:05:00,250 --> 00:05:05,889
bar so you can render it and play the

00:05:03,100 --> 00:05:08,410
tweak passing the value bar to the

00:05:05,889 --> 00:05:10,449
variable foo inside the template or

00:05:08,410 --> 00:05:13,240
tweak this is already very good for

00:05:10,449 --> 00:05:15,099
usability you can also extend other

00:05:13,240 --> 00:05:16,539
templates for example if you have blocks

00:05:15,099 --> 00:05:18,340
in one template you can extend that

00:05:16,539 --> 00:05:20,320
template and just change one of the box

00:05:18,340 --> 00:05:22,030
so you have a sort of inheritance that's

00:05:20,320 --> 00:05:24,699
very powerful too as well the trick

00:05:22,030 --> 00:05:26,199
already gives us or they embed one which

00:05:24,699 --> 00:05:29,050
is like a kind of combination of the two

00:05:26,199 --> 00:05:33,550
of them so it's really good tool for for

00:05:29,050 --> 00:05:36,820
reusability but how then the usability

00:05:33,550 --> 00:05:39,699
would look than or looks in Drupal let's

00:05:36,820 --> 00:05:43,449
say for example we want to style an

00:05:39,699 --> 00:05:45,789
article from a view I want to start it

00:05:43,449 --> 00:05:48,610
as a card so we have this card component

00:05:45,789 --> 00:05:51,130
right in our in our pattern lab library

00:05:48,610 --> 00:05:53,409
let's say I want to use it to style an

00:05:51,130 --> 00:05:54,190
article from from our view so we would

00:05:53,409 --> 00:05:57,880
do something like that

00:05:54,190 --> 00:06:01,349
inside the twig template that is exposed

00:05:57,880 --> 00:06:05,289
by views we would import or include the

00:06:01,349 --> 00:06:07,060
card trick template the add molecules is

00:06:05,289 --> 00:06:10,419
what patil abuses so it's a way of

00:06:07,060 --> 00:06:13,539
loading it's a namespace loading for

00:06:10,419 --> 00:06:15,820
trick so it just goes and if you if you

00:06:13,539 --> 00:06:19,479
have like at molecules then you tell to

00:06:15,820 --> 00:06:21,430
where to get this this template and

00:06:19,479 --> 00:06:23,349
unload it and then you would pass just

00:06:21,430 --> 00:06:26,050
we would basically map the variables

00:06:23,349 --> 00:06:28,389
that are available in the parent

00:06:26,050 --> 00:06:29,580
template so the one of yous you would

00:06:28,389 --> 00:06:34,380
map them

00:06:29,580 --> 00:06:37,590
into the tweak template variables pretty

00:06:34,380 --> 00:06:40,080
easy to adjust to a simple mapping now

00:06:37,590 --> 00:06:43,620
what are the issues here so several

00:06:40,080 --> 00:06:45,810
issues well first thing the card a

00:06:43,620 --> 00:06:47,970
component itself cannot be pre-processed

00:06:45,810 --> 00:06:49,830
so Drupa does not have any knowledge

00:06:47,970 --> 00:06:52,110
about the card component right because

00:06:49,830 --> 00:06:54,900
it's embedded inside a tweak template

00:06:52,110 --> 00:06:57,360
duper knows about the views template he

00:06:54,900 --> 00:06:58,590
knows very well how to handle that but

00:06:57,360 --> 00:07:00,180
it doesn't know anything about the cart

00:06:58,590 --> 00:07:01,650
and predator eventually using it to spy

00:07:00,180 --> 00:07:04,560
the trick template so you kind of

00:07:01,650 --> 00:07:07,860
separate it two things right you can you

00:07:04,560 --> 00:07:11,370
are kind of hard coding the component

00:07:07,860 --> 00:07:14,280
the UI component into Drupal you can

00:07:11,370 --> 00:07:17,640
load assets that are necessary for the

00:07:14,280 --> 00:07:19,230
car template to render correctly by

00:07:17,640 --> 00:07:21,540
using an attached library function which

00:07:19,230 --> 00:07:24,360
is a Drupal 8 way of doing it but then

00:07:21,540 --> 00:07:26,640
you are using Drupal inside your your

00:07:24,360 --> 00:07:29,010
trick template and imagine if you if you

00:07:26,640 --> 00:07:30,810
have like an external library building

00:07:29,010 --> 00:07:32,070
tweak but not necessarily for Drupal

00:07:30,810 --> 00:07:33,870
then you cannot really do that so you

00:07:32,070 --> 00:07:35,640
need to find other ways because that

00:07:33,870 --> 00:07:37,500
external area does not know about the

00:07:35,640 --> 00:07:42,470
Drupal specific function attached

00:07:37,500 --> 00:07:44,610
library that we are used to use so and

00:07:42,470 --> 00:07:46,290
there is also a problem very important

00:07:44,610 --> 00:07:47,790
problems operated sketching validation

00:07:46,290 --> 00:07:50,100
so when you do that you would have

00:07:47,790 --> 00:07:52,740
probably cache you might have for only

00:07:50,100 --> 00:07:55,140
cache because the card itself does not

00:07:52,740 --> 00:07:57,810
know about trouble object is not a pass

00:07:55,140 --> 00:07:59,520
cache invalidation there's no bubble

00:07:57,810 --> 00:08:01,920
application validation and so you might

00:07:59,520 --> 00:08:04,890
have also issues about this all these

00:08:01,920 --> 00:08:06,390
issues are because duple is not aware

00:08:04,890 --> 00:08:08,820
that you're using the card template

00:08:06,390 --> 00:08:11,090
inside that parent used and play it

00:08:08,820 --> 00:08:15,120
right so you just start coding it there

00:08:11,090 --> 00:08:17,160
so your patterns aims at addressing

00:08:15,120 --> 00:08:18,720
these issues and a bit more as well so

00:08:17,160 --> 00:08:21,420
it allows developers to define and

00:08:18,720 --> 00:08:25,170
expose self-contained UI components but

00:08:21,420 --> 00:08:28,140
as Rupali plugins so it's very really to

00:08:25,170 --> 00:08:30,830
make drupal aware of your UI components

00:08:28,140 --> 00:08:34,020
and exposing them as Drupal 8 plugins

00:08:30,830 --> 00:08:36,660
then it allows a bidders reuse the

00:08:34,020 --> 00:08:39,000
components as drop-in templates for

00:08:36,660 --> 00:08:41,510
panels few groups use display suite so

00:08:39,000 --> 00:08:44,630
you think about the map unity so earlier

00:08:41,510 --> 00:08:46,580
it will give you it will give side

00:08:44,630 --> 00:08:48,050
business a UI to make this mapping much

00:08:46,580 --> 00:08:49,700
more much easier so at a layer

00:08:48,050 --> 00:08:51,830
configuration level and not fiddling

00:08:49,700 --> 00:08:53,960
with with the trick they'll play these

00:08:51,830 --> 00:08:55,220
will reduce a lot of teak templates that

00:08:53,960 --> 00:08:56,720
you need to use in order to integrate

00:08:55,220 --> 00:08:58,610
these components of course because it it

00:08:56,720 --> 00:09:00,440
happens at a configuration level at site

00:08:58,610 --> 00:09:04,700
builders and developers can can work

00:09:00,440 --> 00:09:06,920
with then since part that since

00:09:04,700 --> 00:09:08,630
components are exposed to Drupal 8 then

00:09:06,920 --> 00:09:10,370
do bite knows about them and knows to

00:09:08,630 --> 00:09:12,410
treat them properly so we can

00:09:10,370 --> 00:09:15,530
pre-process them we can have theme

00:09:12,410 --> 00:09:17,840
suggestions we can have pre processes

00:09:15,530 --> 00:09:20,270
per context and stuff like that and then

00:09:17,840 --> 00:09:23,110
most importantly maybe UI patterns does

00:09:20,270 --> 00:09:26,240
not really is not met does not mean to

00:09:23,110 --> 00:09:30,080
to replace the system solutions but he

00:09:26,240 --> 00:09:31,460
wants to be an a complimentary tool to

00:09:30,080 --> 00:09:34,070
those solutions so it does not really

00:09:31,460 --> 00:09:35,840
replace if you use component libraries

00:09:34,070 --> 00:09:37,970
for example it works with component

00:09:35,840 --> 00:09:40,580
levels actually so you can use namespace

00:09:37,970 --> 00:09:42,320
that are provided you by component

00:09:40,580 --> 00:09:46,160
library inside your pattern definition

00:09:42,320 --> 00:09:48,680
and it works pretty well with that so

00:09:46,160 --> 00:09:52,070
what's the architectural value of the of

00:09:48,680 --> 00:09:53,570
the of the module so basically here it

00:09:52,070 --> 00:09:56,540
is basically you have like on the top

00:09:53,570 --> 00:09:59,180
the first layer are the UI components

00:09:56,540 --> 00:10:04,160
themselves right so this real components

00:09:59,180 --> 00:10:06,320
are managed by your pattern library of

00:10:04,160 --> 00:10:08,270
choice it can be fractal it can be

00:10:06,320 --> 00:10:10,970
pattern lab it can be anything can be

00:10:08,270 --> 00:10:15,260
the llamó UI pattern one which we'll see

00:10:10,970 --> 00:10:20,240
in a moment then this the UI patterns

00:10:15,260 --> 00:10:23,240
then reads the the pattern definition

00:10:20,240 --> 00:10:25,370
from this template libraries and pass

00:10:23,240 --> 00:10:28,160
them to Drupal so it makes it turns

00:10:25,370 --> 00:10:30,590
basically that the UI components that

00:10:28,160 --> 00:10:33,590
are Drupal agnostic into Drupal plugins

00:10:30,590 --> 00:10:36,980
so a Drupal knows them and knows how to

00:10:33,590 --> 00:10:39,140
process them ok and then we pass that to

00:10:36,980 --> 00:10:42,080
the true path in layer so it's it really

00:10:39,140 --> 00:10:44,060
is just a bridge between any kind of

00:10:42,080 --> 00:10:46,550
components that we might want to use and

00:10:44,060 --> 00:10:49,040
the Drupal world that's what the main

00:10:46,550 --> 00:10:51,140
idea is so here you have the different

00:10:49,040 --> 00:10:52,490
components again this one is what is

00:10:51,140 --> 00:10:55,450
already bundled in with

00:10:52,490 --> 00:10:57,580
in a minute you can have several

00:10:55,450 --> 00:10:59,810
component libraries that provides

00:10:57,580 --> 00:11:01,070
components to UI patterns interesting

00:10:59,810 --> 00:11:03,020
enough you can have more than one at the

00:11:01,070 --> 00:11:05,029
same time so you don't have to choose

00:11:03,020 --> 00:11:07,550
one but you can have several for example

00:11:05,029 --> 00:11:09,980
if you have fractal as your main

00:11:07,550 --> 00:11:14,029
component library but you still want to

00:11:09,980 --> 00:11:15,890
use atomic design for your site specific

00:11:14,029 --> 00:11:17,300
things you can still use another one

00:11:15,890 --> 00:11:18,890
that you maintain so you can have both

00:11:17,300 --> 00:11:20,630
so you have like the main one that is

00:11:18,890 --> 00:11:22,250
maintained by another team and another

00:11:20,630 --> 00:11:24,080
one that is pretty specific is

00:11:22,250 --> 00:11:27,050
maintained by you so it allows you to do

00:11:24,080 --> 00:11:29,600
that as well and then yeah basically it

00:11:27,050 --> 00:11:31,850
takes all this information and makes it

00:11:29,600 --> 00:11:34,760
consistent turning it into plugins and

00:11:31,850 --> 00:11:37,040
pass it to Drupal so how you define

00:11:34,760 --> 00:11:38,839
patters so buttons can be defined by

00:11:37,040 --> 00:11:40,310
uyama this is one way of defining

00:11:38,839 --> 00:11:42,680
patterns for the Mount is the only one

00:11:40,310 --> 00:11:43,970
but the collection of the plug-in

00:11:42,680 --> 00:11:46,459
architecture of the iPad a structure

00:11:43,970 --> 00:11:48,110
allows this to be changeable I mean we

00:11:46,459 --> 00:11:49,880
can change it that you can define

00:11:48,110 --> 00:11:51,260
patterns pretty much in whichever

00:11:49,880 --> 00:11:53,630
language you want but for the moment

00:11:51,260 --> 00:11:56,360
it's yeah more definition can be placed

00:11:53,630 --> 00:11:58,520
in in in files that are name of the

00:11:56,360 --> 00:12:01,010
pattern or name of the module or name of

00:11:58,520 --> 00:12:02,899
the theme dot UI patterns of Tiamo this

00:12:01,010 --> 00:12:04,730
can also be changed right so you can

00:12:02,899 --> 00:12:06,170
choose if you don't if you don't feel

00:12:04,730 --> 00:12:07,730
comfortable having you i underscore

00:12:06,170 --> 00:12:10,880
patterns you can choose you can you can

00:12:07,730 --> 00:12:12,680
change that where the patterns are

00:12:10,880 --> 00:12:14,570
depends from your discovery methods so

00:12:12,680 --> 00:12:16,850
you're gonna you're gonna need you're

00:12:14,570 --> 00:12:19,970
gonna you have a lot of options that the

00:12:16,850 --> 00:12:21,770
patters are converted into into standard

00:12:19,970 --> 00:12:24,260
the Drupal 8 render elements this is

00:12:21,770 --> 00:12:26,959
pretty powerful so when you when you

00:12:24,260 --> 00:12:29,329
expose a component to UI patterns these

00:12:26,959 --> 00:12:32,000
spatters becomes a render element for

00:12:29,329 --> 00:12:33,860
Drupal so you can render the pattern by

00:12:32,000 --> 00:12:36,320
just using the standard render array

00:12:33,860 --> 00:12:38,600
type pattern then there you would pass

00:12:36,320 --> 00:12:40,610
ID of the pattern the fields and all the

00:12:38,600 --> 00:12:42,110
mapping and this becomes really really

00:12:40,610 --> 00:12:43,700
powerful because this makes it

00:12:42,110 --> 00:12:47,690
consistent with all the tuple basically

00:12:43,700 --> 00:12:49,760
core and it exposed and patterns in the

00:12:47,690 --> 00:12:54,800
Drupal theme system in the following way

00:12:49,760 --> 00:12:58,670
so basically given given the media

00:12:54,800 --> 00:13:01,250
pattern ID for example right you would

00:12:58,670 --> 00:13:02,930
have the UI patterns will will will will

00:13:01,250 --> 00:13:03,770
make me that we will make available a

00:13:02,930 --> 00:13:06,560
pattern media

00:13:03,770 --> 00:13:08,780
function theme function and it would

00:13:06,560 --> 00:13:11,000
expect the pattern media twig file to be

00:13:08,780 --> 00:13:12,350
there to be rendered of course we are in

00:13:11,000 --> 00:13:14,480
ruble so all this is completely

00:13:12,350 --> 00:13:16,040
customizable we don't want to impose a

00:13:14,480 --> 00:13:18,050
specific naming convention or a specific

00:13:16,040 --> 00:13:21,200
way of doing things that's that's the

00:13:18,050 --> 00:13:23,810
point of it so pattern definitions are

00:13:21,200 --> 00:13:25,820
kind of flexible as well I mean they can

00:13:23,810 --> 00:13:27,290
be become complex depending from your

00:13:25,820 --> 00:13:29,300
use case if you just want to expose a

00:13:27,290 --> 00:13:31,250
pattern to do to the UI pattern system

00:13:29,300 --> 00:13:33,230
then you may be just centered interested

00:13:31,250 --> 00:13:35,390
in saying okay he's the hero pattern and

00:13:33,230 --> 00:13:37,040
these are its fields so the image the

00:13:35,390 --> 00:13:39,200
title the subtitle and the rest I don't

00:13:37,040 --> 00:13:40,850
care or maybe you want to be a bit more

00:13:39,200 --> 00:13:43,760
verbose because maybe you want also to

00:13:40,850 --> 00:13:46,640
use those metadata as documentation so

00:13:43,760 --> 00:13:48,560
you can say okay the image pattern as an

00:13:46,640 --> 00:13:50,360
image label label called image

00:13:48,560 --> 00:13:52,880
description maybe so you can also have

00:13:50,360 --> 00:13:54,320
this kind of more elaborate pattern

00:13:52,880 --> 00:13:56,870
definition there are compatible discs

00:13:54,320 --> 00:13:58,940
all right they're all in your one

00:13:56,870 --> 00:14:03,950
pattern definition file can contain one

00:13:58,940 --> 00:14:05,420
or multiple definitions as well and the

00:14:03,950 --> 00:14:08,390
definition engine will understand which

00:14:05,420 --> 00:14:10,760
one you are using then a pattern

00:14:08,390 --> 00:14:13,340
template is the most common thing that

00:14:10,760 --> 00:14:15,290
that you ever seen so far is just a

00:14:13,340 --> 00:14:17,630
normal twig template so you just have

00:14:15,290 --> 00:14:19,940
the fields that you see here above pass

00:14:17,630 --> 00:14:22,400
through to the final template and then

00:14:19,940 --> 00:14:25,940
finally rendered alright so this is for

00:14:22,400 --> 00:14:27,290
example a hero pattern now so the

00:14:25,940 --> 00:14:29,090
question is now how is this better than

00:14:27,290 --> 00:14:31,030
simply using fig right because we didn't

00:14:29,090 --> 00:14:33,470
introduce anything new at this point

00:14:31,030 --> 00:14:35,660
this is pretty much what we can do

00:14:33,470 --> 00:14:37,490
already the answer is really the Drupal

00:14:35,660 --> 00:14:39,080
theme layer so since patterns allows to

00:14:37,490 --> 00:14:42,170
attach the metadata to trick templates

00:14:39,080 --> 00:14:44,870
then it passes this metadata information

00:14:42,170 --> 00:14:47,840
to Drupal dream layer and do patil eric

00:14:44,870 --> 00:14:50,150
and then do a lot of things with this

00:14:47,840 --> 00:14:52,160
metadata so really button is the

00:14:50,150 --> 00:14:52,790
metadata engine one of his functions

00:14:52,160 --> 00:14:54,710
really that

00:14:52,790 --> 00:14:57,230
attaching metadata information to

00:14:54,710 --> 00:15:00,440
template which do not have such a thing

00:14:57,230 --> 00:15:02,330
at the moment for example just exposing

00:15:00,440 --> 00:15:04,340
which fields are the fields that the

00:15:02,330 --> 00:15:06,560
template is rendering this is already a

00:15:04,340 --> 00:15:07,790
very important information and if this

00:15:06,560 --> 00:15:09,710
is structured in a formal way

00:15:07,790 --> 00:15:11,810
then the Drupal theme system can do

00:15:09,710 --> 00:15:13,970
something with it right so that's what

00:15:11,810 --> 00:15:16,000
pattern is based this is the first layer

00:15:13,970 --> 00:15:18,100
first thing now

00:15:16,000 --> 00:15:19,870
as I told you earlier we are in rupal

00:15:18,100 --> 00:15:22,180
world so we have to be fully

00:15:19,870 --> 00:15:24,610
customizable because every workflow is

00:15:22,180 --> 00:15:26,470
different every organization is

00:15:24,610 --> 00:15:29,350
different so you can customize the

00:15:26,470 --> 00:15:31,420
definition by having extra ID keys so

00:15:29,350 --> 00:15:32,890
you can change the theme hook if you are

00:15:31,420 --> 00:15:36,370
not comfortable having pattern

00:15:32,890 --> 00:15:38,170
underscore ID you can change that you

00:15:36,370 --> 00:15:39,820
can change the template of course if

00:15:38,170 --> 00:15:41,980
you're not comfortable having pattern -

00:15:39,820 --> 00:15:43,720
name of the like idea of the pattern you

00:15:41,980 --> 00:15:46,360
can change that as well or this is the

00:15:43,720 --> 00:15:48,610
most powerful thing you can use the use

00:15:46,360 --> 00:15:51,940
property when we define your patters

00:15:48,610 --> 00:15:55,720
this use property allows tweak to load

00:15:51,940 --> 00:15:59,170
whichever pattern it's exposed to tweak

00:15:55,720 --> 00:16:01,750
and this uses tweak name spacing right

00:15:59,170 --> 00:16:03,190
so the add molecules or the admin module

00:16:01,750 --> 00:16:05,380
these are like tweak loading loading

00:16:03,190 --> 00:16:09,400
mechanisms that are in core interpolate

00:16:05,380 --> 00:16:11,320
and here is where it gets for example

00:16:09,400 --> 00:16:12,550
complementor - component admin module

00:16:11,320 --> 00:16:15,430
because the component library module

00:16:12,550 --> 00:16:18,040
allows you to define this and in spacing

00:16:15,430 --> 00:16:20,380
right so by doing that you just we can

00:16:18,040 --> 00:16:21,940
have both we can have your own namespace

00:16:20,380 --> 00:16:23,290
for your own components and then you can

00:16:21,940 --> 00:16:25,300
pass this to pattern so you can tell

00:16:23,290 --> 00:16:29,530
instead of instead of going and looking

00:16:25,300 --> 00:16:32,680
for the pattern - hero dot HTML dot we

00:16:29,530 --> 00:16:35,530
please use this template instead which

00:16:32,680 --> 00:16:38,770
leaves my pattern lab library so this is

00:16:35,530 --> 00:16:42,100
a way to integrate external libraries

00:16:38,770 --> 00:16:43,180
using the Yamal definition people

00:16:42,100 --> 00:16:45,580
already done that so I've already

00:16:43,180 --> 00:16:47,230
working then libraries can also be

00:16:45,580 --> 00:16:48,580
defined locally so one one of the things

00:16:47,230 --> 00:16:51,190
that we saw earlier one of the

00:16:48,580 --> 00:16:53,890
limitation was that you had to kind of

00:16:51,190 --> 00:16:55,839
code the library loading inside a

00:16:53,890 --> 00:16:57,250
template file and you cannot always do

00:16:55,839 --> 00:16:58,900
that easily because maybe the template

00:16:57,250 --> 00:17:01,540
file is maintained not by your team but

00:16:58,900 --> 00:17:04,060
not by Drupal team but by a fractal team

00:17:01,540 --> 00:17:05,980
which is outside your team so you cannot

00:17:04,060 --> 00:17:08,079
do that so by doing this you can

00:17:05,980 --> 00:17:10,180
actually attach libraries to your

00:17:08,079 --> 00:17:12,040
pattern but not only that we can define

00:17:10,180 --> 00:17:13,449
them also inside your pattern definition

00:17:12,040 --> 00:17:15,010
so you don't have to maintain libraries

00:17:13,449 --> 00:17:16,900
in two places you don't have to maintain

00:17:15,010 --> 00:17:20,709
libraries in the library dot younger

00:17:16,900 --> 00:17:22,810
thing file you can just have an atomic

00:17:20,709 --> 00:17:24,160
approach to define libraries as well by

00:17:22,810 --> 00:17:25,839
defining them where you define the

00:17:24,160 --> 00:17:27,910
pattern rights so you bundle all

00:17:25,839 --> 00:17:29,470
together in read an atomic fashion

00:17:27,910 --> 00:17:33,230
inside that

00:17:29,470 --> 00:17:34,910
then the assets that the library's

00:17:33,230 --> 00:17:36,650
refers to can also be bundled in the

00:17:34,910 --> 00:17:38,900
same directory where the pattern is so

00:17:36,650 --> 00:17:42,350
if you see there down below you have the

00:17:38,900 --> 00:17:43,820
media one dot CSS it's in the same

00:17:42,350 --> 00:17:46,850
subdirectory where the pattern is so you

00:17:43,820 --> 00:17:50,350
can really glue them together and really

00:17:46,850 --> 00:17:53,090
have like an atomic approach to this

00:17:50,350 --> 00:17:55,610
then since patterns are exposed as

00:17:53,090 --> 00:17:58,070
render array and render objects

00:17:55,610 --> 00:18:00,020
basically render elements you can render

00:17:58,070 --> 00:18:02,870
them easily like that right so you can

00:18:00,020 --> 00:18:05,720
just say type butter ID value of the

00:18:02,870 --> 00:18:07,220
pattern fields you just map your fields

00:18:05,720 --> 00:18:08,840
there of course you can pass whatever

00:18:07,220 --> 00:18:11,960
renderable thing you want there right

00:18:08,840 --> 00:18:14,000
because a field can accept a render

00:18:11,960 --> 00:18:15,410
array so you can pass anything in pass

00:18:14,000 --> 00:18:19,010
blocks you can pass anything you want

00:18:15,410 --> 00:18:22,270
you are in the render array here what

00:18:19,010 --> 00:18:25,750
happens here is that the at render time

00:18:22,270 --> 00:18:28,370
the render element objects will load

00:18:25,750 --> 00:18:30,020
while we last the plug-in system give me

00:18:28,370 --> 00:18:32,330
the information about the Black Codes

00:18:30,020 --> 00:18:34,970
pattern and then you will know which

00:18:32,330 --> 00:18:37,940
fields to use and then a bitmap diffuser

00:18:34,970 --> 00:18:39,920
will finally render it then from here

00:18:37,940 --> 00:18:41,900
the natural evolution is this one right

00:18:39,920 --> 00:18:44,480
so we want also to be able to do that

00:18:41,900 --> 00:18:46,430
inside your ticket our trick third place

00:18:44,480 --> 00:18:47,990
Reynolds that's really easy at this

00:18:46,430 --> 00:18:51,410
point because once it surrender

00:18:47,990 --> 00:18:53,150
surrender element so I just did we

00:18:51,410 --> 00:18:54,890
render erase then I can I can have this

00:18:53,150 --> 00:18:58,070
so this is also supported so inside your

00:18:54,890 --> 00:18:59,840
tweak templates you can actually render

00:18:58,070 --> 00:19:03,100
the dock quote or whatever pattern you

00:18:59,840 --> 00:19:06,020
want by just mapping by just mapping

00:19:03,100 --> 00:19:07,400
fields there we use it also to for

00:19:06,020 --> 00:19:08,890
layout in for example if you are very

00:19:07,400 --> 00:19:11,000
complex layout you want to reuse

00:19:08,890 --> 00:19:13,190
sometimes we put this in the page dot

00:19:11,000 --> 00:19:16,370
HTML for example just mapping stuff so

00:19:13,190 --> 00:19:19,610
we can have you know reuse parts of the

00:19:16,370 --> 00:19:21,590
layout as given by the external

00:19:19,610 --> 00:19:23,330
libraries for example the fractal team

00:19:21,590 --> 00:19:25,310
is working on a header we just include a

00:19:23,330 --> 00:19:28,580
header and expose it as a pattern and

00:19:25,310 --> 00:19:31,100
then do this and then of course is

00:19:28,580 --> 00:19:34,640
Drupal theme knows about it

00:19:31,100 --> 00:19:37,070
then you can have pattern suggestions

00:19:34,640 --> 00:19:41,300
right this depends from the context to

00:19:37,070 --> 00:19:43,180
use the pathogen so it's I mean it we

00:19:41,300 --> 00:19:44,650
will come to it a bit later but

00:19:43,180 --> 00:19:46,210
this is just to say that you can either

00:19:44,650 --> 00:19:49,809
like different processes depending on

00:19:46,210 --> 00:19:51,190
where the pattern is it's rendered so if

00:19:49,809 --> 00:19:53,320
you render a pattern into a view you

00:19:51,190 --> 00:19:54,460
will have one per process function that

00:19:53,320 --> 00:19:57,160
you can call if you're under the same

00:19:54,460 --> 00:19:59,140
pattern into a note then there will be

00:19:57,160 --> 00:20:00,910
offered to you another purposes function

00:19:59,140 --> 00:20:02,920
so you can massage the data properly

00:20:00,910 --> 00:20:05,080
depending on where the pattern is is

00:20:02,920 --> 00:20:08,070
used basically that's that's it's very

00:20:05,080 --> 00:20:11,080
easy to do it with this architecture now

00:20:08,070 --> 00:20:13,210
so far we have just seen how the eye

00:20:11,080 --> 00:20:15,490
pattern works so it just to recap

00:20:13,210 --> 00:20:17,200
provides it turns every component it's a

00:20:15,490 --> 00:20:19,270
Drupal plugin by doing that allows

00:20:17,200 --> 00:20:21,340
Drupal to to use that as a render

00:20:19,270 --> 00:20:23,500
element so you can use a render array

00:20:21,340 --> 00:20:25,510
three generations very easy everything

00:20:23,500 --> 00:20:30,730
is cache aware of course because it's a

00:20:25,510 --> 00:20:31,990
render array and all that now the point

00:20:30,730 --> 00:20:33,610
is that your iPad has really need a

00:20:31,990 --> 00:20:35,740
partner library in order to function so

00:20:33,610 --> 00:20:38,440
you need to have your pattern somewhere

00:20:35,740 --> 00:20:40,600
but maybe you cannot I don't want to use

00:20:38,440 --> 00:20:44,470
complex pattern solutions like pattern

00:20:40,600 --> 00:20:47,170
lab or fractal for any reason so because

00:20:44,470 --> 00:20:50,980
of this the pattern UI pattern mode is

00:20:47,170 --> 00:20:54,160
actually ships with a component module

00:20:50,980 --> 00:20:58,240
called UI patterns library which is this

00:20:54,160 --> 00:21:00,190
block here so it's a bundled inside the

00:20:58,240 --> 00:21:02,320
UI patterns module and expose your

00:21:00,190 --> 00:21:04,990
pattern patterns from your modules and

00:21:02,320 --> 00:21:06,720
teams it gives you an overview page

00:21:04,990 --> 00:21:10,150
where you can just clean your patterns

00:21:06,720 --> 00:21:12,309
and showcase them and it's really like a

00:21:10,150 --> 00:21:14,559
postman fractal pattern lab so it's very

00:21:12,309 --> 00:21:16,960
simple solution for having like a

00:21:14,559 --> 00:21:21,730
pattern library if you don't have or

00:21:16,960 --> 00:21:25,450
want to can use factor of battery lab so

00:21:21,730 --> 00:21:27,640
how does he it integrates with with with

00:21:25,450 --> 00:21:32,440
your patters very easily it just

00:21:27,640 --> 00:21:34,450
provides an extra an extra property on

00:21:32,440 --> 00:21:36,670
the pattern definition object which is a

00:21:34,450 --> 00:21:39,309
preview right so this preview is

00:21:36,670 --> 00:21:41,950
basically tells you it has the UI patter

00:21:39,309 --> 00:21:44,860
system what content to use when you

00:21:41,950 --> 00:21:46,630
preview the pattern so for example here

00:21:44,860 --> 00:21:48,880
we are having like a blog post pattern

00:21:46,630 --> 00:21:51,190
so I want to have like the preview of

00:21:48,880 --> 00:21:52,390
the quote is like this this text here at

00:21:51,190 --> 00:21:55,330
the preview of the attribution is

00:21:52,390 --> 00:21:56,190
understand style for yourself then

00:21:55,330 --> 00:21:57,870
that's the

00:21:56,190 --> 00:22:00,659
but an object and this is what you see

00:21:57,870 --> 00:22:02,639
busy on your UI pattern overview page

00:22:00,659 --> 00:22:05,179
this is tied of course I mean when you

00:22:02,639 --> 00:22:08,309
start the module just see a very basic

00:22:05,179 --> 00:22:09,899
you know little thing but then if you

00:22:08,309 --> 00:22:11,850
start you can get to that kind of thing

00:22:09,899 --> 00:22:13,830
very pretty easily so you see all the

00:22:11,850 --> 00:22:15,210
information is presented to you they

00:22:13,830 --> 00:22:16,950
have the title you of the description

00:22:15,210 --> 00:22:18,600
you have the fields that the pattern

00:22:16,950 --> 00:22:21,629
accepts so it's pretty much a bit like

00:22:18,600 --> 00:22:23,700
what a fractal or pattern lab do but

00:22:21,629 --> 00:22:25,950
it's like just a simpler way just have

00:22:23,700 --> 00:22:27,389
something running right and then you

00:22:25,950 --> 00:22:29,669
also have a preview of the pattern

00:22:27,389 --> 00:22:32,129
itself using those content that you

00:22:29,669 --> 00:22:34,200
defined here in the inner definition so

00:22:32,129 --> 00:22:37,889
if you have a preview is that then it

00:22:34,200 --> 00:22:40,080
uses this in the preview here now the

00:22:37,889 --> 00:22:42,000
preview property it can be anything can

00:22:40,080 --> 00:22:42,480
be anything renderable so it can be a

00:22:42,000 --> 00:22:45,570
string

00:22:42,480 --> 00:22:47,639
or it can be itself around the element

00:22:45,570 --> 00:22:49,590
right which means that we can pass

00:22:47,639 --> 00:22:51,690
patterns inside the preview as well so

00:22:49,590 --> 00:22:53,639
if you have a pattern that is an image

00:22:51,690 --> 00:22:55,799
and you won't use that pattern as a

00:22:53,639 --> 00:22:57,299
preview for another pattern then there

00:22:55,799 --> 00:22:59,490
is another render element array which is

00:22:57,299 --> 00:23:01,289
called pattern preview which is very

00:22:59,490 --> 00:23:03,509
obvious what it does just take the

00:23:01,289 --> 00:23:06,210
preview pattern and then runs it right

00:23:03,509 --> 00:23:07,710
so if you have an image as a pattern

00:23:06,210 --> 00:23:09,570
then you can use the same pattern as a

00:23:07,710 --> 00:23:11,399
preview of the other another element so

00:23:09,570 --> 00:23:13,490
you really kind of compose them same way

00:23:11,399 --> 00:23:16,889
really wise you do with with factor or

00:23:13,490 --> 00:23:18,720
pattern mode for that matters so I you

00:23:16,889 --> 00:23:21,360
see the two example you can have either

00:23:18,720 --> 00:23:22,590
like yeah an image theme image that's

00:23:21,360 --> 00:23:24,929
totally acceptable because it's a

00:23:22,590 --> 00:23:26,970
calendar element or can be typed

00:23:24,929 --> 00:23:28,500
patterned preview ID image and then it

00:23:26,970 --> 00:23:31,080
just renders the image so it goes and

00:23:28,500 --> 00:23:34,379
fish the fishes the image definition

00:23:31,080 --> 00:23:35,759
takes out the data and renders it now

00:23:34,379 --> 00:23:37,649
you can also connect Patterson

00:23:35,759 --> 00:23:41,629
subfolders with the UI pattern libraries

00:23:37,649 --> 00:23:46,350
so this is this apps you to to keep your

00:23:41,629 --> 00:23:48,450
pattern level like a clean and nice yeah

00:23:46,350 --> 00:23:51,480
so here it is for example you have like

00:23:48,450 --> 00:23:53,250
the theme oti patter study amorous here

00:23:51,480 --> 00:23:55,200
is where you define all your patterns or

00:23:53,250 --> 00:23:57,779
you can also have definition per

00:23:55,200 --> 00:24:00,539
directory so it both stuff works or

00:23:57,779 --> 00:24:03,019
desist we just screen all the directory

00:24:00,539 --> 00:24:05,820
scan all of them then just take the

00:24:03,019 --> 00:24:08,279
definitional to it so let's have a

00:24:05,820 --> 00:24:09,380
little demonstration now just just a see

00:24:08,279 --> 00:24:13,130
a bit out this one

00:24:09,380 --> 00:24:17,890
in real life alright so let's go here

00:24:13,130 --> 00:24:21,140
this is a site that I have set up yeah

00:24:17,890 --> 00:24:23,539
okay so actually if you go on the model

00:24:21,140 --> 00:24:26,150
page on the get up there is a readme and

00:24:23,539 --> 00:24:27,740
to do that is pretty easy you just have

00:24:26,150 --> 00:24:31,789
to do composer install and we beat the

00:24:27,740 --> 00:24:34,160
site for you this site decided by myself

00:24:31,789 --> 00:24:38,299
used for developing the model itself so

00:24:34,160 --> 00:24:40,880
it's really easy to have this so this is

00:24:38,299 --> 00:24:42,500
the the pattern library page already

00:24:40,880 --> 00:24:44,690
styled of course so I use bootstrap

00:24:42,500 --> 00:24:46,700
because it's very easy to manipulate so

00:24:44,690 --> 00:24:49,789
I just styled it just to be a bit nicer

00:24:46,700 --> 00:24:52,070
for the presentation and then basically

00:24:49,789 --> 00:24:54,020
you can see in the demo theme this is

00:24:52,070 --> 00:24:56,690
how the UI patterns document looks like

00:24:54,020 --> 00:24:59,419
so I have all my patterns defined here

00:24:56,690 --> 00:25:01,280
for example the world blockquote is a

00:24:59,419 --> 00:25:04,549
blockquote with this description the

00:25:01,280 --> 00:25:06,200
fields are the following so if the type

00:25:04,549 --> 00:25:09,080
the label the description the preview

00:25:06,200 --> 00:25:10,789
Axela the only mandatory field here is

00:25:09,080 --> 00:25:12,679
the label the rest you can also skip

00:25:10,789 --> 00:25:15,620
this is just for documentation you type

00:25:12,679 --> 00:25:18,049
I mean so for example a blockquote is

00:25:15,620 --> 00:25:22,010
this one here you see so we have the

00:25:18,049 --> 00:25:23,900
information here now patterns can also

00:25:22,010 --> 00:25:26,750
be well yeah so then the block code

00:25:23,900 --> 00:25:30,620
pattern for example as this template

00:25:26,750 --> 00:25:33,200
here very easy so yeah simple as that

00:25:30,620 --> 00:25:35,480
then patterns can also be defined inside

00:25:33,200 --> 00:25:37,990
subdirectories as as I said earlier so

00:25:35,480 --> 00:25:41,059
for example a button pattern can be

00:25:37,990 --> 00:25:43,280
defined inside the subdirectory next to

00:25:41,059 --> 00:25:44,750
the trick template itself so you can

00:25:43,280 --> 00:25:47,210
have a button like this description then

00:25:44,750 --> 00:25:48,559
the fields title URL and then that's

00:25:47,210 --> 00:25:51,890
basically there the template for the

00:25:48,559 --> 00:25:55,640
button or the media immediate component

00:25:51,890 --> 00:25:57,500
the same thing so you can have the media

00:25:55,640 --> 00:26:00,110
component defined into the yamuna file

00:25:57,500 --> 00:26:02,360
next to the midweek file you can attach

00:26:00,110 --> 00:26:03,740
libraries as you can see here these

00:26:02,360 --> 00:26:06,640
libraries are like fictional libraries

00:26:03,740 --> 00:26:09,320
are not actual libraries they will be

00:26:06,640 --> 00:26:11,480
exposed by by UI patterns so you can

00:26:09,320 --> 00:26:13,039
bundle them all together here and then

00:26:11,480 --> 00:26:14,870
of course the assets are also next to

00:26:13,039 --> 00:26:18,230
the template itself so you can really

00:26:14,870 --> 00:26:21,680
keep it well structured

00:26:18,230 --> 00:26:25,520
yeah that's pretty much it I think

00:26:21,680 --> 00:26:28,390
I forgot something what you can do also

00:26:25,520 --> 00:26:31,610
is of course to style the pattern page

00:26:28,390 --> 00:26:33,530
itself so the overview page so if you go

00:26:31,610 --> 00:26:36,260
here then it's very easy to override

00:26:33,530 --> 00:26:39,800
this so you have a meta information here

00:26:36,260 --> 00:26:41,300
and that's pretty much it so you can

00:26:39,800 --> 00:26:44,000
style this kind of thing you can adapt

00:26:41,300 --> 00:26:48,410
it to your theme of course and you can

00:26:44,000 --> 00:26:50,890
override the default now sorry jumping a

00:26:48,410 --> 00:26:53,540
bit now let's continue

00:26:50,890 --> 00:26:55,490
so here gets interesting how you expose

00:26:53,540 --> 00:26:57,860
your pattern via third-party library so

00:26:55,490 --> 00:27:01,040
let's have a look like I have fact alors

00:26:57,860 --> 00:27:03,320
Patti LaBelle can I just use them so

00:27:01,040 --> 00:27:06,530
this is the situation here we want to

00:27:03,320 --> 00:27:07,700
integrate external libraries this is

00:27:06,530 --> 00:27:10,430
pretty easy to do there are a lot of

00:27:07,700 --> 00:27:14,930
people doing it already now you just

00:27:10,430 --> 00:27:16,700
have to basically include inside the

00:27:14,930 --> 00:27:20,690
directory of your patterns a AMA file

00:27:16,700 --> 00:27:22,160
and this will then place this the

00:27:20,690 --> 00:27:24,470
directory of your of your of your

00:27:22,160 --> 00:27:27,710
library inside your theme and this will

00:27:24,470 --> 00:27:31,520
work so pattern will will will will

00:27:27,710 --> 00:27:35,600
basically detect them and expose you to

00:27:31,520 --> 00:27:38,900
you this kind of patterns but we can

00:27:35,600 --> 00:27:40,730
also have that like a more advanced way

00:27:38,900 --> 00:27:43,580
of doing this imagine if you don't want

00:27:40,730 --> 00:27:45,650
to expose patterns with your files for

00:27:43,580 --> 00:27:47,480
yourself right or you want to use a

00:27:45,650 --> 00:27:49,340
different format maybe you have JSON so

00:27:47,480 --> 00:27:50,720
all your metadata is already there but

00:27:49,340 --> 00:27:53,390
it's in JSON so you don't want to use

00:27:50,720 --> 00:27:54,980
your file you want to convert that you

00:27:53,390 --> 00:27:56,630
already have a place where your fields

00:27:54,980 --> 00:27:59,450
are defined but is in JSON below using

00:27:56,630 --> 00:28:01,340
fractal you can do that and you can do

00:27:59,450 --> 00:28:03,170
that because at the end what pattern

00:28:01,340 --> 00:28:05,570
really are I'll just plug in so each

00:28:03,170 --> 00:28:08,780
pattern each component is a plug-in so

00:28:05,570 --> 00:28:11,270
you can you could define each component

00:28:08,780 --> 00:28:15,070
manually by creating actually creating

00:28:11,270 --> 00:28:17,960
classes one class per per pattern or

00:28:15,070 --> 00:28:20,000
better you can ask a derive a class to

00:28:17,960 --> 00:28:24,080
do that for you that's how Drupal 8

00:28:20,000 --> 00:28:26,030
begin system works so how it works so

00:28:24,080 --> 00:28:28,790
first of all you need to provide a new

00:28:26,030 --> 00:28:30,500
custom pattern plug-in and it's very

00:28:28,790 --> 00:28:32,000
easy just this class you don't have to

00:28:30,500 --> 00:28:34,760
do anything just extend the pattern

00:28:32,000 --> 00:28:38,720
brace class other notation with the ID

00:28:34,760 --> 00:28:40,910
of the pattern and then derive er the

00:28:38,720 --> 00:28:43,160
the class which you won't use as a

00:28:40,910 --> 00:28:44,870
driver so just an empty glass for the

00:28:43,160 --> 00:28:48,080
moment you can of course override metals

00:28:44,870 --> 00:28:50,900
from the base class then you have to

00:28:48,080 --> 00:28:52,490
provide a custom derived class and the

00:28:50,900 --> 00:28:54,260
derived class just has to implement two

00:28:52,490 --> 00:28:56,090
meadows basically get patterns and get

00:28:54,260 --> 00:28:57,950
four extensions so imagine if you don't

00:28:56,090 --> 00:28:59,270
want to have the Yamal files or you want

00:28:57,950 --> 00:29:01,040
to have another you want json for

00:28:59,270 --> 00:29:03,110
example you want another extension you

00:29:01,040 --> 00:29:04,970
can do that there this will scan

00:29:03,110 --> 00:29:07,760
directories for the Mount really we are

00:29:04,970 --> 00:29:10,220
just extending the abstract Yambol

00:29:07,760 --> 00:29:12,320
pattern driver which is the same derive

00:29:10,220 --> 00:29:15,049
earth at the pattern library model uses

00:29:12,320 --> 00:29:16,940
right but that's just as a as an example

00:29:15,049 --> 00:29:19,520
you could also remove that class make

00:29:16,940 --> 00:29:21,980
your own driver and just really provide

00:29:19,520 --> 00:29:23,510
your own parsing metals and stuff and

00:29:21,980 --> 00:29:26,690
then get patterns get patterns we'll

00:29:23,510 --> 00:29:29,929
need to build pattern definition objects

00:29:26,690 --> 00:29:31,850
so as as soon as you return from the get

00:29:29,929 --> 00:29:34,940
pattern metals an array of pattern

00:29:31,850 --> 00:29:36,740
definition objects then all the patterns

00:29:34,940 --> 00:29:43,010
system can take over and in it will all

00:29:36,740 --> 00:29:46,429
work so let's have a look at this yeah I

00:29:43,010 --> 00:29:47,690
have it on the other side here for

00:29:46,429 --> 00:29:50,360
example have a look at this one

00:29:47,690 --> 00:29:51,919
this does not look like anything trooper

00:29:50,360 --> 00:29:55,610
I guess so you have just a big file

00:29:51,919 --> 00:29:58,490
right it just a small twig file here

00:29:55,610 --> 00:30:01,730
then you have your assets here the CSS

00:29:58,490 --> 00:30:04,520
and J's the buttons same and then you

00:30:01,730 --> 00:30:06,620
want to just use the amyl so not no UI

00:30:04,520 --> 00:30:08,809
pattern not just the AMA file to

00:30:06,620 --> 00:30:12,049
describe your your your components you

00:30:08,809 --> 00:30:13,610
can do that this thing it's pretty

00:30:12,049 --> 00:30:17,090
Drupal pretty much Drupal independent

00:30:13,610 --> 00:30:19,640
apart from this that of course is Drupal

00:30:17,090 --> 00:30:20,660
dependent if I had more time before the

00:30:19,640 --> 00:30:22,820
presentation I would have done also

00:30:20,660 --> 00:30:24,260
death but you don't have time so you can

00:30:22,820 --> 00:30:27,559
actually swap that as well they remove

00:30:24,260 --> 00:30:29,630
they use and be the full de Rivel that

00:30:27,559 --> 00:30:31,669
actually parses whatever location in the

00:30:29,630 --> 00:30:33,830
disk you have or anything for the mantra

00:30:31,669 --> 00:30:35,660
just to for a quick example just reuse

00:30:33,830 --> 00:30:37,040
the yeah mall driver so that's one is

00:30:35,660 --> 00:30:39,559
necessary but you can also remove it

00:30:37,040 --> 00:30:40,190
right you can have that seen any in any

00:30:39,559 --> 00:30:42,650
way we want

00:30:40,190 --> 00:30:45,679
then they all the only thing you have to

00:30:42,650 --> 00:30:47,630
do is the custom pattern here so that's

00:30:45,679 --> 00:30:50,150
how you implement a new cut

00:30:47,630 --> 00:30:52,640
plug in and then that's where the magic

00:30:50,150 --> 00:30:54,890
happens the driver so for the moment is

00:30:52,640 --> 00:30:56,470
the rival just counts this directory

00:30:54,890 --> 00:30:58,970
templates where the patterns are and

00:30:56,470 --> 00:31:01,580
creates this object here pattern

00:30:58,970 --> 00:31:03,590
definition from that moment on the

00:31:01,580 --> 00:31:05,300
pattern UI patterns system takes over

00:31:03,590 --> 00:31:07,040
and you can have everything from now on

00:31:05,300 --> 00:31:10,010
grab the map pink and of the rendering

00:31:07,040 --> 00:31:12,620
as a render element excel and then ya

00:31:10,010 --> 00:31:14,770
get fire station it tells you which well

00:31:12,620 --> 00:31:17,710
which attention you want to use okay

00:31:14,770 --> 00:31:22,150
that's pretty much pretty much it

00:31:17,710 --> 00:31:25,850
alright so yeah so then once you do that

00:31:22,150 --> 00:31:28,370
then you have this kind of thing so you

00:31:25,850 --> 00:31:30,200
can really go on your content for

00:31:28,370 --> 00:31:33,020
example the title here it's an article

00:31:30,200 --> 00:31:36,110
if you don't manage to display yeah

00:31:33,020 --> 00:31:38,120
that's you can see your patterns here as

00:31:36,110 --> 00:31:40,970
a layout these are three brings us to

00:31:38,120 --> 00:31:43,760
the next topic which is how you actually

00:31:40,970 --> 00:31:46,610
use this with Drupal right because until

00:31:43,760 --> 00:31:49,580
now we just been defining patterns but

00:31:46,610 --> 00:31:54,020
apart from being able of being able to

00:31:49,580 --> 00:31:55,970
render them into tweak templates or

00:31:54,020 --> 00:31:58,520
render elements we didn't do much with

00:31:55,970 --> 00:32:00,440
that but we're actually it's getting

00:31:58,520 --> 00:32:03,890
interesting then is this part here so

00:32:00,440 --> 00:32:07,850
once these once patters are plugins so

00:32:03,890 --> 00:32:10,220
they are Drupal is aware of them then we

00:32:07,850 --> 00:32:12,140
can have integration modules and this is

00:32:10,220 --> 00:32:15,170
the interesting part because then you

00:32:12,140 --> 00:32:17,330
can now turn patterns into layouts into

00:32:15,170 --> 00:32:20,660
view style plug-in into this place which

00:32:17,330 --> 00:32:22,910
plugins feel groups anything right and

00:32:20,660 --> 00:32:25,370
from this point on is just about mapping

00:32:22,910 --> 00:32:28,520
the only thing that we have to do here

00:32:25,370 --> 00:32:32,660
they just bought mapping source data to

00:32:28,520 --> 00:32:34,460
destination fields in the pattern so we

00:32:32,660 --> 00:32:36,680
have for the moment four modules that

00:32:34,460 --> 00:32:39,200
are bundled inside the UI patterns

00:32:36,680 --> 00:32:41,030
module which will probably change in the

00:32:39,200 --> 00:32:43,460
future because I would like to explode

00:32:41,030 --> 00:32:45,110
that and have one project per per module

00:32:43,460 --> 00:32:47,480
but for the moments like this so if you

00:32:45,110 --> 00:32:50,900
download the UI patterns mode you find

00:32:47,480 --> 00:32:53,300
all of them bundled together and how

00:32:50,900 --> 00:32:55,550
does this work we have another plugin

00:32:53,300 --> 00:32:57,800
that the iPad has modern exposes is

00:32:55,550 --> 00:32:59,660
called the source field plugin so the

00:32:57,800 --> 00:33:01,400
source will plug in what it does is that

00:32:59,660 --> 00:33:03,860
is an it understands

00:33:01,400 --> 00:33:06,080
context where the pattern is used and it

00:33:03,860 --> 00:33:07,940
provides you with source fields for

00:33:06,080 --> 00:33:09,890
example if you use a pattern in views it

00:33:07,940 --> 00:33:13,280
would understand in which view you are

00:33:09,890 --> 00:33:16,550
using this pattern get the fields of

00:33:13,280 --> 00:33:18,560
that view and probably provide those

00:33:16,550 --> 00:33:22,730
fields to you for just an easy mapping

00:33:18,560 --> 00:33:24,380
to the destination fields same for for

00:33:22,730 --> 00:33:27,650
con for display streets or any other

00:33:24,380 --> 00:33:28,970
things so basically the source field can

00:33:27,650 --> 00:33:30,770
be mapped through pattern destination

00:33:28,970 --> 00:33:32,480
fees they are context-dependent so they

00:33:30,770 --> 00:33:35,180
really are aware of a context they are

00:33:32,480 --> 00:33:36,710
executed in and they have they are

00:33:35,180 --> 00:33:38,990
extensible because there is just another

00:33:36,710 --> 00:33:41,420
plug-in types so you can provide your

00:33:38,990 --> 00:33:44,120
own source field plugins to have like

00:33:41,420 --> 00:33:46,430
your own map field sources if you want

00:33:44,120 --> 00:33:48,410
to expose blocks for example to patterns

00:33:46,430 --> 00:33:52,970
you can do that very easy then you can

00:33:48,410 --> 00:33:55,250
just implement such problem for example

00:33:52,970 --> 00:33:57,680
this is how the view source plug-in

00:33:55,250 --> 00:34:00,830
works so you just have again about in

00:33:57,680 --> 00:34:02,930
definition euro some information there

00:34:00,830 --> 00:34:05,240
and then they only met that the plug-in

00:34:02,930 --> 00:34:08,330
and currency just get source fields all

00:34:05,240 --> 00:34:12,590
right so let's have a look now how this

00:34:08,330 --> 00:34:15,130
actually works we go back on this side

00:34:12,590 --> 00:34:19,100
here yeah

00:34:15,130 --> 00:34:20,899
then we check that so we're gonna see

00:34:19,100 --> 00:34:24,440
the different things so first of all

00:34:20,899 --> 00:34:26,149
we're gonna see well we want to style

00:34:24,440 --> 00:34:27,740
the an article with some metadata

00:34:26,149 --> 00:34:31,070
information for example the out there

00:34:27,740 --> 00:34:33,500
Hotel creation time to update time and

00:34:31,070 --> 00:34:37,220
then some tags and for that we want to

00:34:33,500 --> 00:34:40,340
use we want to use this pattern here

00:34:37,220 --> 00:34:41,899
let's go and check it out the metadata

00:34:40,340 --> 00:34:43,610
pattern we won't use this pattern here

00:34:41,899 --> 00:34:45,980
right so we want to use this one we'll

00:34:43,610 --> 00:34:49,159
just use this template dropped in our

00:34:45,980 --> 00:34:51,290
our nodes rendering thing and just use

00:34:49,159 --> 00:34:53,000
the author just meet publication date

00:34:51,290 --> 00:34:56,510
and then categories that's all we want

00:34:53,000 --> 00:35:01,430
to do okay so to do that pretty easy

00:34:56,510 --> 00:35:05,600
because of the UI patterns the des

00:35:01,430 --> 00:35:08,480
module it exposes the source fields

00:35:05,600 --> 00:35:12,030
begin for display sweet so we can do the

00:35:08,480 --> 00:35:14,470
following thing in gone manage display

00:35:12,030 --> 00:35:15,850
okay so you see here metadata this is

00:35:14,470 --> 00:35:18,760
actually a feel group so it's another

00:35:15,850 --> 00:35:23,859
model SE group module if you click on

00:35:18,760 --> 00:35:26,230
the settings here you have the metadata

00:35:23,859 --> 00:35:27,490
here these are these are basically the

00:35:26,230 --> 00:35:29,950
patterns that are exposed to the eye

00:35:27,490 --> 00:35:31,210
patterns you can see here the plugins

00:35:29,950 --> 00:35:33,100
the fish sauce packaging that are

00:35:31,210 --> 00:35:35,290
available in that context in the context

00:35:33,100 --> 00:35:36,580
of a feel group there are fields plug-in

00:35:35,290 --> 00:35:38,740
display suite plugins so this one a

00:35:36,580 --> 00:35:41,800
display field space with field this one

00:35:38,740 --> 00:35:44,530
are the actual node fields and you can

00:35:41,800 --> 00:35:47,859
just have a simple mapping so I want the

00:35:44,530 --> 00:35:50,200
tag to become to be injecting to my

00:35:47,859 --> 00:35:52,000
categories you want the post date to go

00:35:50,200 --> 00:35:53,980
in publication date the last modified

00:35:52,000 --> 00:35:56,140
date also publication date and the

00:35:53,980 --> 00:35:59,170
author in the author field so this

00:35:56,140 --> 00:36:04,540
becomes basically the following thing

00:35:59,170 --> 00:36:06,070
here right see if we change so the full

00:36:04,540 --> 00:36:07,450
rendered field is really injected into

00:36:06,070 --> 00:36:09,910
the into the pattern directory so you

00:36:07,450 --> 00:36:13,540
didn't have to touch any template you

00:36:09,910 --> 00:36:15,640
just use this pattern and it's done we

00:36:13,540 --> 00:36:17,530
can also for example add the labels to

00:36:15,640 --> 00:36:18,940
the last modified fields for example the

00:36:17,530 --> 00:36:22,540
post date or the last modified

00:36:18,940 --> 00:36:23,830
we are the labels here feel fresh you

00:36:22,540 --> 00:36:25,690
can see the labels appearing there as

00:36:23,830 --> 00:36:27,790
well so the field is really rendered

00:36:25,690 --> 00:36:29,920
with all this for matter what we want to

00:36:27,790 --> 00:36:33,369
do now the next iteration of the model

00:36:29,920 --> 00:36:36,340
is having having settings per mapping so

00:36:33,369 --> 00:36:38,800
per source field plug-in so when I so

00:36:36,340 --> 00:36:40,480
that when I go here each one of them

00:36:38,800 --> 00:36:42,100
will have settings here so a little gear

00:36:40,480 --> 00:36:43,900
icon that you can really set what you

00:36:42,100 --> 00:36:46,210
are gonna map these settings will be

00:36:43,900 --> 00:36:48,130
depending from the from the source

00:36:46,210 --> 00:36:51,880
plug-in system despite powerful because

00:36:48,130 --> 00:36:54,520
for example imagine about having a token

00:36:51,880 --> 00:36:56,859
source field plug-in so you can like

00:36:54,520 --> 00:36:58,600
inject tokens inside the pattern areas

00:36:56,859 --> 00:37:00,880
pattern fields so you can get pretty

00:36:58,600 --> 00:37:02,700
pretty advanced of or blocks or anything

00:37:00,880 --> 00:37:05,560
like that

00:37:02,700 --> 00:37:07,960
so this is one thing then we also have

00:37:05,560 --> 00:37:10,359
other parts of the nodes are actually

00:37:07,960 --> 00:37:12,310
styled using patterns for example this

00:37:10,359 --> 00:37:15,340
is a this is a this is a paragraph

00:37:12,310 --> 00:37:16,570
factory right so if you go here we did

00:37:15,340 --> 00:37:19,900
the node you can see here a little

00:37:16,570 --> 00:37:22,420
paragraph see the jumbotron paragraph so

00:37:19,900 --> 00:37:25,809
I study this with a Jumbotron

00:37:22,420 --> 00:37:28,869
component and where I did I did that so

00:37:25,809 --> 00:37:31,690
if you go on paragraph type and then you

00:37:28,869 --> 00:37:34,270
check the mesh display here you see that

00:37:31,690 --> 00:37:35,559
patterns are also supposed as layouts so

00:37:34,270 --> 00:37:38,079
you can use them as a layout for your

00:37:35,559 --> 00:37:40,089
panel pages for your anything that

00:37:38,079 --> 00:37:43,540
supports the layout discovery module is

00:37:40,089 --> 00:37:45,490
also working with patterns see here

00:37:43,540 --> 00:37:47,890
select a layout all your patterns are

00:37:45,490 --> 00:37:49,390
available as layouts as well so it just

00:37:47,890 --> 00:37:51,040
mapped the fields to put the title into

00:37:49,390 --> 00:37:53,290
the title field of the pattern it

00:37:51,040 --> 00:37:54,910
Buddhist the subtitle of the of the

00:37:53,290 --> 00:37:57,520
paragraph into the subtitle field of the

00:37:54,910 --> 00:37:58,349
pattern and the result this is just what

00:37:57,520 --> 00:38:01,690
you expect

00:37:58,349 --> 00:38:03,190
basically this and the same is for

00:38:01,690 --> 00:38:05,890
buttons for example right so imagine

00:38:03,190 --> 00:38:09,069
this typical example is I want a link

00:38:05,890 --> 00:38:13,630
field to become a button right so how do

00:38:09,069 --> 00:38:17,290
I do that well again since we can just

00:38:13,630 --> 00:38:19,480
go here on the links fields and then we

00:38:17,290 --> 00:38:21,040
choose a pattern fill template and you

00:38:19,480 --> 00:38:23,559
get the same interface you can map

00:38:21,040 --> 00:38:26,079
components of the field the link field

00:38:23,559 --> 00:38:28,329
to destinations since this is at the

00:38:26,079 --> 00:38:31,329
link field level so the field level we

00:38:28,329 --> 00:38:32,859
get other sources here so I came up the

00:38:31,329 --> 00:38:34,750
links URL into the URL and the title

00:38:32,859 --> 00:38:37,569
into the label and then you get

00:38:34,750 --> 00:38:40,359
basically the the pattern your Styles

00:38:37,569 --> 00:38:44,109
nicely here same you can do for views of

00:38:40,359 --> 00:38:46,180
course so if you go on the articles you

00:38:44,109 --> 00:38:50,260
can get this view and this one again is

00:38:46,180 --> 00:38:54,460
yet another that is integration so you

00:38:50,260 --> 00:38:55,900
have like the pattern row display begin

00:38:54,460 --> 00:38:57,520
and deal is the same thing so media

00:38:55,900 --> 00:38:59,530
object you just get the same stuff so

00:38:57,520 --> 00:39:02,230
you can map fields of the view into the

00:38:59,530 --> 00:39:03,790
pattern thing right and then you have it

00:39:02,230 --> 00:39:04,390
just starts tied everything everything

00:39:03,790 --> 00:39:06,400
is loaded

00:39:04,390 --> 00:39:07,660
similarly when that happened so all the

00:39:06,400 --> 00:39:09,160
libraries that you define the role are

00:39:07,660 --> 00:39:10,450
loaded everything is like bundled

00:39:09,160 --> 00:39:12,339
together and you are sure that you're

00:39:10,450 --> 00:39:19,349
really rendering that without any extra

00:39:12,339 --> 00:39:23,410
markup basically alright so that's it

00:39:19,349 --> 00:39:25,510
everything alright so what's the future

00:39:23,410 --> 00:39:27,339
of UI patterns so basically we had some

00:39:25,510 --> 00:39:28,630
very courageous early adopters and I

00:39:27,339 --> 00:39:30,130
want to thank them because they were

00:39:28,630 --> 00:39:33,130
really really great in testing the

00:39:30,130 --> 00:39:35,079
module we got a lot of feedback people

00:39:33,130 --> 00:39:35,830
start to use the module in really crazy

00:39:35,079 --> 00:39:37,720
way which is very

00:39:35,830 --> 00:39:39,430
the sign I think but it's also calls

00:39:37,720 --> 00:39:42,040
from my responsibiiity from our side is

00:39:39,430 --> 00:39:45,030
maintainer to make the core smaller and

00:39:42,040 --> 00:39:47,590
more flexible than than possible because

00:39:45,030 --> 00:39:50,830
I want to make it like really really

00:39:47,590 --> 00:39:52,570
smaller core so that our own

00:39:50,830 --> 00:39:56,230
responsibility would be to just have the

00:39:52,570 --> 00:39:58,530
the patterns working as a plug-in system

00:39:56,230 --> 00:40:03,160
basically and then all the rest is then

00:39:58,530 --> 00:40:05,830
delegated to to contribute to explode

00:40:03,160 --> 00:40:08,740
the main the main module in two separate

00:40:05,830 --> 00:40:10,600
sub modules because this also will

00:40:08,740 --> 00:40:11,650
include increased maintainability for

00:40:10,600 --> 00:40:14,350
example if you have an issue with a

00:40:11,650 --> 00:40:16,720
field group module that blocks only the

00:40:14,350 --> 00:40:18,880
UI pattern fin group module then it does

00:40:16,720 --> 00:40:21,880
not is not a problem for all the project

00:40:18,880 --> 00:40:23,830
but adjust for that sub project we want

00:40:21,880 --> 00:40:26,200
us to have a more extendable pattern

00:40:23,830 --> 00:40:27,550
definition so to make puttered efficient

00:40:26,200 --> 00:40:29,770
more flexible so that you can add your

00:40:27,550 --> 00:40:32,560
own values in the pattern definition so

00:40:29,770 --> 00:40:34,630
you can have I don't know an extra field

00:40:32,560 --> 00:40:37,540
extra information that you need for your

00:40:34,630 --> 00:40:39,790
own business domain field mapping

00:40:37,540 --> 00:40:42,160
settings as well so as I told you

00:40:39,790 --> 00:40:45,040
earlier when we map we want to have

00:40:42,160 --> 00:40:47,110
their settings for each mapping so that

00:40:45,040 --> 00:40:48,790
things like various subfields multiple

00:40:47,110 --> 00:40:52,030
fields can be provided separate modules

00:40:48,790 --> 00:40:54,070
so we don't need to take care of that so

00:40:52,030 --> 00:40:55,450
that's the direction that that we are

00:40:54,070 --> 00:41:01,540
giving to the module demolished current

00:40:55,450 --> 00:41:04,720
in RC one so we want to tag 1.0 soon

00:41:01,540 --> 00:41:06,580
enough then we see if we do that before

00:41:04,720 --> 00:41:09,280
or after the explosion with the hot

00:41:06,580 --> 00:41:11,190
moles we will see but anyway one last

00:41:09,280 --> 00:41:14,500
thing so this is just food for thoughts

00:41:11,190 --> 00:41:18,640
basically what we have been doing until

00:41:14,500 --> 00:41:20,800
now is just like creating a metadata

00:41:18,640 --> 00:41:24,580
system so describing a way of formally

00:41:20,800 --> 00:41:26,710
describing our templates that's that's

00:41:24,580 --> 00:41:29,200
all it is really all the effort that we

00:41:26,710 --> 00:41:32,590
do in in distraction so component

00:41:29,200 --> 00:41:35,080
libraries like factor pattern lab the

00:41:32,590 --> 00:41:37,000
components library module our module

00:41:35,080 --> 00:41:40,450
they all aim at the same direction of

00:41:37,000 --> 00:41:43,150
describing what piece of presentation

00:41:40,450 --> 00:41:45,550
logic does that's all there is to it so

00:41:43,150 --> 00:41:47,500
we were wondering if not to have done

00:41:45,550 --> 00:41:49,600
just a separate component that is

00:41:47,500 --> 00:41:53,500
even a Drupal component which would be

00:41:49,600 --> 00:41:55,600
called for example a twig annotation so

00:41:53,500 --> 00:41:58,240
why don't we use a notation tweak and

00:41:55,600 --> 00:42:01,360
then we describe what the twig template

00:41:58,240 --> 00:42:03,850
does and then the UI patterns can just

00:42:01,360 --> 00:42:06,790
load this information from within the

00:42:03,850 --> 00:42:08,470
template itself and then just to

00:42:06,790 --> 00:42:10,570
whatever it wants to do and then of

00:42:08,470 --> 00:42:13,020
course from here the next natural step

00:42:10,570 --> 00:42:16,120
is why do we still need the hook theme

00:42:13,020 --> 00:42:19,090
function if we can do this right if

00:42:16,120 --> 00:42:21,310
every template can describe itself then

00:42:19,090 --> 00:42:23,530
we don't need a hook theme anymore we

00:42:21,310 --> 00:42:25,480
just can do that but they just is just

00:42:23,530 --> 00:42:27,070
like food for toss will you want to play

00:42:25,480 --> 00:42:28,870
a bit with this stuff maybe having just

00:42:27,070 --> 00:42:30,520
like completely independent component

00:42:28,870 --> 00:42:33,070
they just past week and the returns a

00:42:30,520 --> 00:42:34,690
notation I just use the annotation

00:42:33,070 --> 00:42:37,180
format that we are all familiar with of

00:42:34,690 --> 00:42:38,920
course I mean there are two levels of

00:42:37,180 --> 00:42:40,300
comments there of course but that's just

00:42:38,920 --> 00:42:42,250
because we are favorites' of seeing

00:42:40,300 --> 00:42:44,410
those annotations on top of classes but

00:42:42,250 --> 00:42:46,300
that doesn't have to be that format of

00:42:44,410 --> 00:42:48,520
course when we do it for twig we can

00:42:46,300 --> 00:42:50,920
also use a mole or anything no it will

00:42:48,520 --> 00:42:52,870
also sell purposes of documentation of

00:42:50,920 --> 00:42:55,870
the of the template so maybe it's also

00:42:52,870 --> 00:42:59,320
this will increase the adoption from non

00:42:55,870 --> 00:43:01,210
Drupal ecosystems as well why not so

00:42:59,320 --> 00:43:02,890
that's really just you know think about

00:43:01,210 --> 00:43:04,750
it I think it can be a nice direction

00:43:02,890 --> 00:43:08,860
also for the future and so we get rid of

00:43:04,750 --> 00:43:10,420
the hook theme finally now you had a

00:43:08,860 --> 00:43:12,640
psycho system I want to thank all this

00:43:10,420 --> 00:43:14,380
incredible contributors that just use

00:43:12,640 --> 00:43:17,140
the modules and I got really excited

00:43:14,380 --> 00:43:19,210
about it and then just set the creating

00:43:17,140 --> 00:43:21,370
foundation patterns that interested suit

00:43:19,210 --> 00:43:24,700
foundation with UI patterns so you just

00:43:21,370 --> 00:43:27,240
get upper running we were suffer those

00:43:24,700 --> 00:43:30,370
little theme that does it with bootstrap

00:43:27,240 --> 00:43:33,490
component combo the Sheila Drupal theme

00:43:30,370 --> 00:43:35,260
it was one of the first adopters so big

00:43:33,490 --> 00:43:37,690
thanks to all these guys really great

00:43:35,260 --> 00:43:40,990
community so how to contribute to the

00:43:37,690 --> 00:43:43,030
module basically yeah well first of all

00:43:40,990 --> 00:43:45,280
read the docs so we are putting our

00:43:43,030 --> 00:43:47,440
effort of maintaining Doc's it's very

00:43:45,280 --> 00:43:51,280
painful but okay so please read a dog

00:43:47,440 --> 00:43:52,660
first then if the issue is still there

00:43:51,280 --> 00:43:56,680
if you cannot solve it open an issue

00:43:52,660 --> 00:43:58,240
clone from the repository just run

00:43:56,680 --> 00:44:01,120
composer instead this will create for

00:43:58,240 --> 00:44:06,100
you the build site that you can just use

00:44:01,120 --> 00:44:07,990
and failure pull request and on the git

00:44:06,100 --> 00:44:12,250
repository then we also have to spend

00:44:07,990 --> 00:44:14,500
like real time conversation spaces one

00:44:12,250 --> 00:44:15,940
is a deters or if you go on the github

00:44:14,500 --> 00:44:16,270
page just click on get through yeah you

00:44:15,940 --> 00:44:20,050
get it

00:44:16,270 --> 00:44:22,960
another one is luck Drupal tix luck we

00:44:20,050 --> 00:44:26,850
have a channel UI patterns here older so

00:44:22,960 --> 00:44:28,000
if you want to join please do that there

00:44:26,850 --> 00:44:31,230
yeah

00:44:28,000 --> 00:44:35,680
so these are like organizational

00:44:31,230 --> 00:44:39,610
information from Rubicon and that's it

00:44:35,680 --> 00:44:39,950
remember to leave your feedback thank

00:44:39,610 --> 00:44:49,910
you

00:44:39,950 --> 00:44:52,430
[Applause]

00:44:49,910 --> 00:44:54,350
Thanks if you have any questions just

00:44:52,430 --> 00:44:58,850
please use the microphone so that we can

00:44:54,350 --> 00:45:01,400
record them yeah this look really

00:44:58,850 --> 00:45:03,350
awesome so one question do you have

00:45:01,400 --> 00:45:04,610
these fields and so far what I

00:45:03,350 --> 00:45:08,090
understand is that every field is like

00:45:04,610 --> 00:45:09,830
like a markup a piece of markup so what

00:45:08,090 --> 00:45:12,260
if you want to one feel like an array or

00:45:09,830 --> 00:45:14,690
something or maybe just to CSS class or

00:45:12,260 --> 00:45:17,780
something like that so yeah I mean it's

00:45:14,690 --> 00:45:20,240
so at the septum moment so I will use

00:45:17,780 --> 00:45:21,710
this we do map with the UI but then

00:45:20,240 --> 00:45:23,180
there is always the moment where we go

00:45:21,710 --> 00:45:25,010
with the play process and we just

00:45:23,180 --> 00:45:27,200
massage the data before it's served to

00:45:25,010 --> 00:45:29,240
the to the UI pattern you see so in case

00:45:27,200 --> 00:45:31,550
of those kind of thing you can let you

00:45:29,240 --> 00:45:33,260
have to use pre-processing the

00:45:31,550 --> 00:45:35,210
pre-processing are quite nice because as

00:45:33,260 --> 00:45:36,860
each pattern is aware of the context

00:45:35,210 --> 00:45:38,480
where it's rendered so if I render a

00:45:36,860 --> 00:45:41,060
pattern the same pattern I render it

00:45:38,480 --> 00:45:44,180
into a view or into an entity display

00:45:41,060 --> 00:45:46,730
mode display then we get different kind

00:45:44,180 --> 00:45:48,110
of play process function that I run so

00:45:46,730 --> 00:45:49,700
you can massage date and then and then

00:45:48,110 --> 00:45:50,960
provide so you can pre-process so this

00:45:49,700 --> 00:45:51,740
kind of data but it does not do it

00:45:50,960 --> 00:45:52,670
automatically yes

00:45:51,740 --> 00:45:54,470
I mean if you have a pattern that

00:45:52,670 --> 00:45:56,270
displays a list of something and the

00:45:54,470 --> 00:45:58,310
list item should be maybe filled items

00:45:56,270 --> 00:45:59,930
or the last rows of review then this

00:45:58,310 --> 00:46:02,750
would be maybe a field but the field

00:45:59,930 --> 00:46:04,430
would require like an arid yes so if

00:46:02,750 --> 00:46:05,780
it's renderable if he's something

00:46:04,430 --> 00:46:07,940
renderable then you can pass it directly

00:46:05,780 --> 00:46:09,800
but if it requires some manipulation

00:46:07,940 --> 00:46:12,980
then you need to do it in a pre process

00:46:09,800 --> 00:46:18,650
manually okay yeah I can even have a

00:46:12,980 --> 00:46:20,450
look at it later yeah I I just want to

00:46:18,650 --> 00:46:21,590
say I was I'm really excited to see

00:46:20,450 --> 00:46:24,680
solutions like this come up in the

00:46:21,590 --> 00:46:27,370
Drupal 8 and I have ton of questions but

00:46:24,680 --> 00:46:32,840
I'm gonna limit myself to just one and

00:46:27,370 --> 00:46:37,280
that is you showed examples of taking a

00:46:32,840 --> 00:46:41,210
field and then putting into a spot in

00:46:37,280 --> 00:46:44,240
the pattern is there a way that you can

00:46:41,210 --> 00:46:46,370
handle like multi value fields where you

00:46:44,240 --> 00:46:51,560
can then have like wrappers around each

00:46:46,370 --> 00:46:54,590
yes each field individual field yes so

00:46:51,560 --> 00:46:56,210
that's that's exactly so we we don't

00:46:54,590 --> 00:46:59,540
support it now so the UI does not

00:46:56,210 --> 00:47:01,280
support him now but the architecture has

00:46:59,540 --> 00:47:03,200
always supported it so we always thought

00:47:01,280 --> 00:47:05,299
about this that would be the final

00:47:03,200 --> 00:47:07,099
and finally use case so the way the

00:47:05,299 --> 00:47:09,410
configuration is saved allows for this

00:47:07,099 --> 00:47:10,609
to happen at the moment you can do it

00:47:09,410 --> 00:47:13,369
like for example here you see we have

00:47:10,609 --> 00:47:15,319
like two sources to the same destination

00:47:13,369 --> 00:47:16,579
field so you have both the post date and

00:47:15,319 --> 00:47:18,290
the last modified date that goes

00:47:16,579 --> 00:47:19,970
together in the publication date and

00:47:18,290 --> 00:47:22,190
then you have one after the other right

00:47:19,970 --> 00:47:23,630
and you can actually you know swap them

00:47:22,190 --> 00:47:26,089
you can put one after the other so you

00:47:23,630 --> 00:47:29,000
can do a little manipulation already but

00:47:26,089 --> 00:47:30,710
we want to improve this thing here but

00:47:29,000 --> 00:47:31,880
this is just the UI effort I mean once

00:47:30,710 --> 00:47:33,559
you have the architecture this is really

00:47:31,880 --> 00:47:34,910
a effort what you want to do is that

00:47:33,559 --> 00:47:37,010
instead of having like the predefined

00:47:34,910 --> 00:47:38,540
dump there with all the thing you can do

00:47:37,010 --> 00:47:40,069
you can just choose you know like okay I

00:47:38,540 --> 00:47:41,329
want this source then from this source I

00:47:40,069 --> 00:47:43,069
want use this source plug-in and then

00:47:41,329 --> 00:47:44,900
this destination and then you have

00:47:43,069 --> 00:47:47,329
finally the settings on the mapping

00:47:44,900 --> 00:47:49,940
itself which are missing now but the at

00:47:47,329 --> 00:47:52,309
the configuration schema allows for that

00:47:49,940 --> 00:47:54,200
so it's fine but yeah it's just I know a

00:47:52,309 --> 00:47:56,240
lot of UI work which we didn't have time

00:47:54,200 --> 00:47:58,040
to do but we have to do it but that's

00:47:56,240 --> 00:48:00,920
totally possible assets is where we want

00:47:58,040 --> 00:48:05,240
to go that's fantastic thank you thank

00:48:00,920 --> 00:48:06,619
you yeah thank you very much for his

00:48:05,240 --> 00:48:09,410
approach it's really useful for

00:48:06,619 --> 00:48:12,920
consuming component libraries my

00:48:09,410 --> 00:48:15,829
question is about API so when you

00:48:12,920 --> 00:48:17,780
thought about mapping think that

00:48:15,829 --> 00:48:20,540
patterns is kind of a mapping between

00:48:17,780 --> 00:48:24,559
adjacent data yes yes it's pretty the

00:48:20,540 --> 00:48:27,619
same as layout API working now so that

00:48:24,559 --> 00:48:30,740
could be to use layout API instead of

00:48:27,619 --> 00:48:33,170
custom pattern API because it's pretty

00:48:30,740 --> 00:48:35,180
the same yes there is a lot of overlap

00:48:33,170 --> 00:48:36,710
that's why that's why we see really the

00:48:35,180 --> 00:48:37,940
you know like we are all going towards

00:48:36,710 --> 00:48:42,799
the same direction which is basically

00:48:37,940 --> 00:48:44,780
describing templates for a in some sort

00:48:42,799 --> 00:48:47,599
of formal form that that then the layout

00:48:44,780 --> 00:48:50,180
system can pick up or we can do that but

00:48:47,599 --> 00:48:53,660
not all context are this exactly the

00:48:50,180 --> 00:48:55,040
same so we still need some tweaks so you

00:48:53,660 --> 00:48:59,390
cannot really apply that to everything

00:48:55,040 --> 00:49:00,680
you see but yeah I mean we we have to be

00:48:59,390 --> 00:49:02,240
careful not to overlap with that I

00:49:00,680 --> 00:49:04,849
totally agree with you it's it's

00:49:02,240 --> 00:49:06,740
something we need to watch closely the

00:49:04,849 --> 00:49:09,049
recent module about v templating field I

00:49:06,740 --> 00:49:10,520
out I think it's an experimental module

00:49:09,049 --> 00:49:12,589
and that's an it works out because

00:49:10,520 --> 00:49:14,540
probably sauce overlapping here but yeah

00:49:12,589 --> 00:49:16,580
if we arrive at the point that so that

00:49:14,540 --> 00:49:17,600
we can take out the mapping system and

00:49:16,580 --> 00:49:20,030
place it through the layout on you know

00:49:17,600 --> 00:49:21,050
or an all in favor for space yeah it's

00:49:20,030 --> 00:49:23,120
like well we should go

00:49:21,050 --> 00:49:25,850
you ready it actually when we hit the

00:49:23,120 --> 00:49:27,710
layout discovery thing we are also like

00:49:25,850 --> 00:49:31,880
this kind of operation of removing stuff

00:49:27,710 --> 00:49:35,020
from my patterns okay other questions

00:49:31,880 --> 00:49:35,020
thank you guys

00:49:38,150 --> 00:49:44,900

YouTube URL: https://www.youtube.com/watch?v=6BdyXYkY3Wg


