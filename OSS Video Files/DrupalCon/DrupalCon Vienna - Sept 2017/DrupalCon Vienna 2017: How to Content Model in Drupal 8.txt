Title: DrupalCon Vienna 2017: How to Content Model in Drupal 8
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	This session is the third one in the series, following the Drupal 8 Hidden Power at DrupalCon Dublin 2016 and Drupal Architectures for Flexible Content at DrupalCon Barcelona 2015. But unlike the previous two, this time we will focus on practical application and demos, exclusively for Drupal 8.

Atomic Design gives us a good vision on how to design the systems of components. But when it comes to the real project, things become more complicated and it can be really hard to implement.

Why?

Because it covers the design patterns, not the content building blocks. These two things are closely interrelated but have completely different meaning: first is a view, second is a model. And don't worry: we are not going to re-implement the atom (wheel)!

Let's try to create a big picture of content building process, review what we have in Drupal 8 and see how we can benefit from its core features keeping in mind Atomic Design principles.

Finally we will stop talking and go through a nifty Drupal 8 setup giving you desired flexibility.


The following topics will be highlighted:

How to structure a page? In which independent components to split and how granularly?
What is a difference between content items, building blocks and patterns/components?
How to re-use content throughout website? How to render the same content differently depending on the context?
How to organize the nesting of components?
Where is a border between content and layout?
Can layout be treated as a content?
Why Paragraphs module doesn't work well in all cases?
The following modules will be covered:

Content storage:
Node
Custom Block
Entity Construction Kit
Paragraphs
Fields
Entity Translation
Building blocks:
Block Layout
Field Layout
Bricks
View Modes
Entity Reference
Entity Reference Revisions
Dynamic Entity Reference
Layout Discovery
Webform
Views
Content editing:
Inline Entity Form
Entity Browser
Entity Reference Live Preview
Entity Reference Integrity
Contextual Links
Quick Edit
Patterns and components:
UI Patterns
Fractal
Pattern Lab
In this session I want to share a real experience when designing a content architecture of large multi-lingual and multi-layout websites for enterprise, academics and digital.

These very simple but extremely flexible techniques can be used for ANY Entity type and in almost ANY project. Re-understand your content today and create your own site buidling experience on top of Entity Reference, Layout API, Bricks and their wide contrib ecosystem!
Captions: 
	00:00:00,060 --> 00:00:06,480
welcome everyone it looks like we are

00:00:02,700 --> 00:00:08,639
almost ready first of all welcome to the

00:00:06,480 --> 00:00:12,360
air this is amazing city and I wish you

00:00:08,639 --> 00:00:14,940
a good time here let's start for the

00:00:12,360 --> 00:00:16,590
session today we will talk about about

00:00:14,940 --> 00:00:21,660
content modeling in Drupal and

00:00:16,590 --> 00:00:23,970
particularly in Drupal 8 first of all

00:00:21,660 --> 00:00:27,240
let me to briefly present myself my name

00:00:23,970 --> 00:00:35,190
is Anton and from October 9 I will work

00:00:27,240 --> 00:00:38,129
for closer ok and from October 9 I will

00:00:35,190 --> 00:00:41,160
work for wondrous digital agency which

00:00:38,129 --> 00:00:44,600
is based in Basel and I will work as

00:00:41,160 --> 00:00:48,649
design System Architect for them exactly

00:00:44,600 --> 00:00:52,140
what we will talk about today

00:00:48,649 --> 00:00:55,620
wondrous team located in Basel as I said

00:00:52,140 --> 00:00:57,660
and we do corporate platforms service

00:00:55,620 --> 00:00:59,820
experiences and mobile web app

00:00:57,660 --> 00:01:02,640
attentional continuation of previous

00:00:59,820 --> 00:01:06,119
talks which were made in Drupal con

00:01:02,640 --> 00:01:08,659
Barcelona Drupal con Dublin and design

00:01:06,119 --> 00:01:12,890
for Drupal bustin earlier this summer

00:01:08,659 --> 00:01:16,640
today we will talk more about Drupal 8

00:01:12,890 --> 00:01:19,860
application of these things and about

00:01:16,640 --> 00:01:25,340
practical implementation of these

00:01:19,860 --> 00:01:28,470
concepts first of all let's talk about

00:01:25,340 --> 00:01:33,890
what we have today in Drupal and around

00:01:28,470 --> 00:01:39,110
it let's briefly review what we have and

00:01:33,890 --> 00:01:39,110
what opportunities do we have right now

00:01:39,259 --> 00:01:46,259
of course we have parents Paris is

00:01:42,720 --> 00:01:52,740
really popular module we've asked for a

00:01:46,259 --> 00:01:55,409
number of years but what about panels

00:01:52,740 --> 00:01:58,079
first of all panels is not a quantit

00:01:55,409 --> 00:02:00,689
entity that means that it's tricky to

00:01:58,079 --> 00:02:05,070
revision it's tricky to translate and

00:02:00,689 --> 00:02:07,890
it's tricky to work for etc etc all of

00:02:05,070 --> 00:02:11,120
these because of panel is a special

00:02:07,890 --> 00:02:12,880
thing not just a continent 'ti and

00:02:11,120 --> 00:02:17,800
another

00:02:12,880 --> 00:02:20,530
important point here is nesting it's

00:02:17,800 --> 00:02:23,860
really complicated to put panel inside

00:02:20,530 --> 00:02:26,830
panel and control the overall layout it

00:02:23,860 --> 00:02:30,250
increases complexity of the whole thing

00:02:26,830 --> 00:02:34,300
and it also breaks the relation between

00:02:30,250 --> 00:02:42,690
inner data and the host layout like a

00:02:34,300 --> 00:02:47,110
page you can say sorry sorry bout it

00:02:42,690 --> 00:02:48,850
something leave the cable okay let me to

00:02:47,110 --> 00:02:50,460
briefly repeat the pros and cons of

00:02:48,850 --> 00:02:53,080
panels

00:02:50,460 --> 00:02:55,360
first of all panels is not a Content

00:02:53,080 --> 00:02:57,880
entity which means we don't have a

00:02:55,360 --> 00:03:01,380
standard functionality like provisioning

00:02:57,880 --> 00:03:05,110
translation work force and so on and

00:03:01,380 --> 00:03:07,810
panels are really poor with nesting so

00:03:05,110 --> 00:03:10,000
Putin panels inside panels becomes hard

00:03:07,810 --> 00:03:13,900
it breaks relation between content

00:03:10,000 --> 00:03:18,610
itself and layout and it increases

00:03:13,900 --> 00:03:21,460
complexity of course another module we

00:03:18,610 --> 00:03:23,800
have a paragraphs it's really popular

00:03:21,460 --> 00:03:26,070
today and its popularity increasing from

00:03:23,800 --> 00:03:26,070
day to day

00:03:26,490 --> 00:03:31,080
first of all about paragraphs

00:03:31,110 --> 00:03:37,840
conceptually it uses a composite put

00:03:34,540 --> 00:03:41,230
software pattern that means that page

00:03:37,840 --> 00:03:43,750
and all of its data is a single hole its

00:03:41,230 --> 00:03:49,030
components couldn't be reused from page

00:03:43,750 --> 00:03:51,640
to page and also nesting is a problem

00:03:49,030 --> 00:03:56,340
here because nesting paragraphs inside

00:03:51,640 --> 00:03:56,340
paragraphs are not that easy to manage

00:03:57,330 --> 00:04:02,500
another but think about paragraphs which

00:04:00,340 --> 00:04:05,590
is a custom entity which means you

00:04:02,500 --> 00:04:08,230
cannot mix paragraphs with another

00:04:05,590 --> 00:04:11,140
standard entities like notes user

00:04:08,230 --> 00:04:13,600
profiles the economic terms custom

00:04:11,140 --> 00:04:16,390
blocks and so on it's really hard to

00:04:13,600 --> 00:04:19,840
create a page from different type of

00:04:16,390 --> 00:04:22,540
data and another thing about paragraphs

00:04:19,840 --> 00:04:25,450
it's not really friendly to contribution

00:04:22,540 --> 00:04:28,660
models like inline entity forms like

00:04:25,450 --> 00:04:30,790
entity reference and so on the way

00:04:28,660 --> 00:04:33,370
you're using progressed usually is

00:04:30,790 --> 00:04:40,660
you're using the progressed completely

00:04:33,370 --> 00:04:43,900
or you switch to another things let's

00:04:40,660 --> 00:04:46,720
look outside of Drupal what we have not

00:04:43,900 --> 00:04:49,990
inside Drupal but around it is something

00:04:46,720 --> 00:04:52,480
called atomic design tonic design is a

00:04:49,990 --> 00:04:54,390
great concept and it will help to solve

00:04:52,480 --> 00:04:58,650
various problems around design

00:04:54,390 --> 00:05:02,380
components and complex content building

00:04:58,650 --> 00:05:04,390
but it's just for design it's not for

00:05:02,380 --> 00:05:08,160
implementation it's not for content

00:05:04,390 --> 00:05:12,070
creation it's not for site architecture

00:05:08,160 --> 00:05:14,650
it doesn't help you to nest components

00:05:12,070 --> 00:05:17,860
to provide data to ease nested

00:05:14,650 --> 00:05:20,380
structures to use templates for

00:05:17,860 --> 00:05:23,650
organisms if you know about the term

00:05:20,380 --> 00:05:26,650
design terms also it's hard to

00:05:23,650 --> 00:05:29,590
differentiate pages and organisms and

00:05:26,650 --> 00:05:31,990
molecules and organisms so what I would

00:05:29,590 --> 00:05:34,210
try to say that atomic design is good

00:05:31,990 --> 00:05:37,150
for designers it is good for style guide

00:05:34,210 --> 00:05:39,340
creation but it doesn't help you a lot

00:05:37,150 --> 00:05:41,700
when you when things come to a real

00:05:39,340 --> 00:05:46,450
implementation to real projects if

00:05:41,700 --> 00:05:49,870
multiple pages with various layouts also

00:05:46,450 --> 00:05:53,620
if you start working to atomic you will

00:05:49,870 --> 00:05:56,260
fail with maintainability of multiple

00:05:53,620 --> 00:05:58,660
similar pages it's also important when

00:05:56,260 --> 00:06:00,610
you build in a complex and huge website

00:05:58,660 --> 00:06:05,229
with various content with various

00:06:00,610 --> 00:06:07,900
layouts okay let me to summarize this

00:06:05,229 --> 00:06:10,120
small introduction we have really

00:06:07,900 --> 00:06:16,590
powerful thing we will be happy with

00:06:10,120 --> 00:06:20,590
them why let's look

00:06:16,590 --> 00:06:22,480
deeper what we are working with we are

00:06:20,590 --> 00:06:24,880
using Drupal Drupal is content

00:06:22,480 --> 00:06:28,990
management system right but what is

00:06:24,880 --> 00:06:35,860
content what is content can anybody

00:06:28,990 --> 00:06:39,280
guess okay actually content is

00:06:35,860 --> 00:06:42,820
everything right everything but end user

00:06:39,280 --> 00:06:47,280
sees in on its screen is content layout

00:06:42,820 --> 00:06:50,260
is the content styles are content and

00:06:47,280 --> 00:06:53,740
the data structures behind on what users

00:06:50,260 --> 00:06:57,190
see are also content let's look at least

00:06:53,740 --> 00:07:00,310
pretty simple example let's say we have

00:06:57,190 --> 00:07:02,860
a simple page described in our team and

00:07:00,310 --> 00:07:08,050
to present in our team members profiles

00:07:02,860 --> 00:07:12,010
like Mike Lisa and Alex what we have

00:07:08,050 --> 00:07:15,520
here at least we have heading which is a

00:07:12,010 --> 00:07:18,970
data type text and they have user

00:07:15,520 --> 00:07:22,060
profile which is a data type profile so

00:07:18,970 --> 00:07:25,360
first of all content is some data model

00:07:22,060 --> 00:07:30,040
behind it we have images we have objects

00:07:25,360 --> 00:07:33,130
to be shown on our pages and so on but

00:07:30,040 --> 00:07:37,480
also we have different different styles

00:07:33,130 --> 00:07:40,000
for our data so we can have different

00:07:37,480 --> 00:07:45,130
colors we can have different font sizes

00:07:40,000 --> 00:07:49,570
and so on and so on so content is empty

00:07:45,130 --> 00:07:53,470
screen okay content is data model of

00:07:49,570 --> 00:07:58,840
course and content is a style or style

00:07:53,470 --> 00:08:01,150
guide but it's not enough let's look at

00:07:58,840 --> 00:08:04,260
with a simple example again we have

00:08:01,150 --> 00:08:07,570
heading and we have frequently out here

00:08:04,260 --> 00:08:10,300
so where is something behind styles

00:08:07,570 --> 00:08:13,600
behind data model which is something we

00:08:10,300 --> 00:08:19,330
can call building blocks let's look

00:08:13,600 --> 00:08:25,000
deeper at each point of contents first

00:08:19,330 --> 00:08:28,560
of all is data model a really good news

00:08:25,000 --> 00:08:28,560
about data models

00:08:31,690 --> 00:08:37,270
I'm sorry about that I didn't expect it

00:08:59,340 --> 00:09:04,650
okay good news again good news about

00:09:02,880 --> 00:09:05,990
Drupal that Drupal is all about data

00:09:04,650 --> 00:09:09,779
models right

00:09:05,990 --> 00:09:13,620
everything we do in Drupal is modeling

00:09:09,779 --> 00:09:16,500
the data styling is bit harder building

00:09:13,620 --> 00:09:26,930
blocks another way of complexity but

00:09:16,500 --> 00:09:26,930
data models are really easy come on

00:09:49,220 --> 00:09:55,490
okay above data model again we have

00:09:52,819 --> 00:09:59,329
entity and we have fields and we can

00:09:55,490 --> 00:10:02,860
compose any data models we want using

00:09:59,329 --> 00:10:05,839
entities and fields like in this example

00:10:02,860 --> 00:10:08,930
we can compose a product entity which

00:10:05,839 --> 00:10:11,810
will consist of several attributes like

00:10:08,930 --> 00:10:14,660
product ID revision ID and so on you can

00:10:11,810 --> 00:10:18,589
also have several bundles of products

00:10:14,660 --> 00:10:23,029
like a default product and t-shirt each

00:10:18,589 --> 00:10:26,569
can have its own set of fields like here

00:10:23,029 --> 00:10:28,939
price image and size and so on so Drupal

00:10:26,569 --> 00:10:32,180
gives us a really flexible way to

00:10:28,939 --> 00:10:34,189
describe our data models and we can do

00:10:32,180 --> 00:10:36,800
it directly in the admin interface

00:10:34,189 --> 00:10:41,259
without any changes to the code so

00:10:36,800 --> 00:10:44,269
Drupal is really powerful at data models

00:10:41,259 --> 00:10:47,360
also we have entity reference which is

00:10:44,269 --> 00:10:51,319
now in Drupal core which allows us to

00:10:47,360 --> 00:10:54,559
model a complex nested or references

00:10:51,319 --> 00:10:56,569
content like here we can reference for

00:10:54,559 --> 00:10:59,149
example node entities to user entities

00:10:56,569 --> 00:11:02,000
and so on we can create a complex data

00:10:59,149 --> 00:11:04,250
models described in multiple references

00:11:02,000 --> 00:11:09,529
and relations between various objects

00:11:04,250 --> 00:11:13,449
it's pretty easy now it's much harder to

00:11:09,529 --> 00:11:13,449
show my slides on the screen

00:11:29,810 --> 00:11:32,810
okay

00:11:38,760 --> 00:11:46,470
it also has advanced things in Drupal we

00:11:42,870 --> 00:11:49,950
can create different entity types

00:11:46,470 --> 00:11:56,480
directly in admin interface using entity

00:11:49,950 --> 00:11:59,910
construction kit for example we can have

00:11:56,480 --> 00:12:02,970
revisions for our content which is

00:11:59,910 --> 00:12:08,580
provided by entity revisions which is in

00:12:02,970 --> 00:12:10,140
Drupal core also you have translation

00:12:08,580 --> 00:12:12,810
opportunities and moderation

00:12:10,140 --> 00:12:15,150
opportunities and so on and so on again

00:12:12,810 --> 00:12:18,110
Drupal is really good about data

00:12:15,150 --> 00:12:23,130
modeling so let's go to the different

00:12:18,110 --> 00:12:26,430
section about style guide style get a

00:12:23,130 --> 00:12:28,710
bit more complex with Drupal because it

00:12:26,430 --> 00:12:30,630
requires you a lot of knowledge of

00:12:28,710 --> 00:12:35,280
theming system of rendering system and

00:12:30,630 --> 00:12:40,760
so on first of all we need some global

00:12:35,280 --> 00:12:40,760
styling thank you sir

00:13:15,500 --> 00:13:46,949
first of all we want just upon what we

00:13:32,670 --> 00:13:51,240
want slides okay let's go further

00:13:46,949 --> 00:13:54,000
first of all we want global OneNote the

00:13:51,240 --> 00:14:02,269
most interesting part is in the next

00:13:54,000 --> 00:14:02,269
section so yeah probably will not cede

00:14:14,870 --> 00:14:20,990
I will try to talk first of all we want

00:14:18,950 --> 00:14:24,650
Goble stallion for our website right

00:14:20,990 --> 00:14:27,140
it's some kind of global styles

00:14:24,650 --> 00:14:31,010
affecting the whole components which is

00:14:27,140 --> 00:14:33,920
a hairstyles paragraph styles link

00:14:31,010 --> 00:14:38,390
styles and so on everything we want in

00:14:33,920 --> 00:14:41,589
the global scope also we want to have

00:14:38,390 --> 00:14:45,350
some components on the style level layer

00:14:41,589 --> 00:14:48,770
like here some description of a card

00:14:45,350 --> 00:14:50,330
component and actually the most

00:14:48,770 --> 00:14:53,750
important thing about it is a mock-up

00:14:50,330 --> 00:14:58,180
because style can be in global scope

00:14:53,750 --> 00:15:01,940
but markup is unique for each component

00:14:58,180 --> 00:15:03,650
layouts is also important thing it's a

00:15:01,940 --> 00:15:06,680
bit different form from components

00:15:03,650 --> 00:15:10,010
because it doesn't hold any data it can

00:15:06,680 --> 00:15:12,890
ask for buttons for hero blocks for

00:15:10,010 --> 00:15:14,089
anything actually so it's kind of

00:15:12,890 --> 00:15:16,100
reusable mixings

00:15:14,089 --> 00:15:17,480
or utilities it's not a component it's

00:15:16,100 --> 00:15:20,060
not a layout it's something different

00:15:17,480 --> 00:15:23,240
it's small pieces of styles we can apply

00:15:20,060 --> 00:15:27,410
throughout our website and it's also a

00:15:23,240 --> 00:15:29,660
part of our style guide a good thing

00:15:27,410 --> 00:15:32,660
about style guide we can now automate

00:15:29,660 --> 00:15:35,209
the process of maintenance of style

00:15:32,660 --> 00:15:37,820
guide of creation style guide and so on

00:15:35,209 --> 00:15:40,790
for example we can use a fractal

00:15:37,820 --> 00:15:42,290
component library which will help us to

00:15:40,790 --> 00:15:45,529
create new components to create

00:15:42,290 --> 00:15:48,370
documentation to create example pages so

00:15:45,529 --> 00:15:51,410
it will be really easy to adopt

00:15:48,370 --> 00:15:59,000
components through our website and to

00:15:51,410 --> 00:16:02,300
create new components but wait we talk

00:15:59,000 --> 00:16:05,589
about styles about tools but where is

00:16:02,300 --> 00:16:09,320
Drupal where is DuPont's tailgate

00:16:05,589 --> 00:16:13,310
proposed everywhere of course let's go

00:16:09,320 --> 00:16:16,160
one by one global stallion is something

00:16:13,310 --> 00:16:20,029
like we include in our theme as CSS

00:16:16,160 --> 00:16:22,370
bundle so from the style guide point of

00:16:20,029 --> 00:16:25,540
view the output of it will be a single

00:16:22,370 --> 00:16:28,740
CSS file or set of files doesn't matter

00:16:25,540 --> 00:16:31,260
but in the Drupal we include

00:16:28,740 --> 00:16:33,780
the whole CSS file we don't know about

00:16:31,260 --> 00:16:35,730
internal structure how it's built it

00:16:33,780 --> 00:16:39,510
doesn't matter for Drupal important to

00:16:35,730 --> 00:16:43,980
have these files somewhere in themes in

00:16:39,510 --> 00:16:47,610
theme components I expose it to Drupal

00:16:43,980 --> 00:16:51,360
via trick templates or the UI patterns

00:16:47,610 --> 00:16:55,890
model which is relatively new on the

00:16:51,360 --> 00:16:57,960
Drupal landscape layouts are also a

00:16:55,890 --> 00:17:00,570
tweak template files which can be

00:16:57,960 --> 00:17:05,430
directly in duple or can be exposed to

00:17:00,570 --> 00:17:09,030
Drupal via layout API utilities are also

00:17:05,430 --> 00:17:12,570
can live in trick templates we can just

00:17:09,030 --> 00:17:15,839
put CSS classes and so on or we can put

00:17:12,570 --> 00:17:20,030
our utility CSS classes in the admin

00:17:15,839 --> 00:17:24,959
interface if we have such functionality

00:17:20,030 --> 00:17:28,050
for example we can set up a special CSS

00:17:24,959 --> 00:17:34,350
class for each view element when

00:17:28,050 --> 00:17:37,430
creating a view okay we have a data

00:17:34,350 --> 00:17:41,610
model which allows us to have a huge

00:17:37,430 --> 00:17:44,070
structured database we have a style

00:17:41,610 --> 00:17:46,620
guide which contains all of our patterns

00:17:44,070 --> 00:17:50,250
styles and templates and it's

00:17:46,620 --> 00:17:52,800
independent from Drupal itself and we

00:17:50,250 --> 00:17:55,860
want to combine both of things we want

00:17:52,800 --> 00:17:59,310
to get some data and to apply styles

00:17:55,860 --> 00:18:02,700
from our style guide to get a content

00:17:59,310 --> 00:18:05,520
instance so each of our pages on the

00:18:02,700 --> 00:18:08,520
website is content instances which has

00:18:05,520 --> 00:18:11,250
some data behind them and some Styles

00:18:08,520 --> 00:18:14,250
applied to them and we need some place

00:18:11,250 --> 00:18:15,780
where we can control this process we

00:18:14,250 --> 00:18:18,780
need some place where we can get data

00:18:15,780 --> 00:18:21,900
and apply styles let's call this place a

00:18:18,780 --> 00:18:25,580
building block it's something which can

00:18:21,900 --> 00:18:30,380
be at the data and apply style to get to

00:18:25,580 --> 00:18:33,780
create some content instance in the end

00:18:30,380 --> 00:18:36,870
okay here is the most interesting part

00:18:33,780 --> 00:18:40,590
of this talk is about building blocks

00:18:36,870 --> 00:18:42,860
building blocks is a key player in all

00:18:40,590 --> 00:18:42,860
of this

00:18:44,190 --> 00:18:52,870
let's go step by step first how to

00:18:49,690 --> 00:18:55,300
render a simple data it's pretty simple

00:18:52,870 --> 00:18:58,150
if Drupal we can just create a thick

00:18:55,300 --> 00:19:00,880
template and to render some data from

00:18:58,150 --> 00:19:03,550
database using thick template like we do

00:19:00,880 --> 00:19:08,380
for note blocks user profiles and so on

00:19:03,550 --> 00:19:11,290
that's pretty easy but how to render the

00:19:08,380 --> 00:19:14,470
same data with the same data model a bit

00:19:11,290 --> 00:19:16,900
slightly differently like here we have

00:19:14,470 --> 00:19:19,980
two user profiles one we want in pink

00:19:16,900 --> 00:19:23,290
and another we want in blue for example

00:19:19,980 --> 00:19:25,150
we can use a CSS modifiers we can

00:19:23,290 --> 00:19:28,510
include them directly in the ticket in

00:19:25,150 --> 00:19:33,270
place or we can put them somewhere in

00:19:28,510 --> 00:19:36,760
admin interface but how to render data

00:19:33,270 --> 00:19:38,350
quite differently like here if we want

00:19:36,760 --> 00:19:40,840
the same user profile to be shown

00:19:38,350 --> 00:19:43,870
completely different in different parts

00:19:40,840 --> 00:19:46,390
of our website again the data is the

00:19:43,870 --> 00:19:52,300
same data model is the same the only

00:19:46,390 --> 00:19:54,550
difference is its layout and styles we

00:19:52,300 --> 00:19:57,480
also have an opportunity here we can use

00:19:54,550 --> 00:20:00,790
display modes it's a built-in mechanism

00:19:57,480 --> 00:20:06,640
we just need a way to use it for on our

00:20:00,790 --> 00:20:09,430
pages we also can render Li a list of

00:20:06,640 --> 00:20:14,110
dynamic dynamic lists of our objects

00:20:09,430 --> 00:20:17,050
using views for example and now let's

00:20:14,110 --> 00:20:19,510
talk about how to compose the complex

00:20:17,050 --> 00:20:23,080
data not just to render what we have in

00:20:19,510 --> 00:20:26,260
database because initially Drupal is all

00:20:23,080 --> 00:20:28,510
about just rendering what is in database

00:20:26,260 --> 00:20:30,820
we get note we render it we get user

00:20:28,510 --> 00:20:33,340
profile we render it we get the economy

00:20:30,820 --> 00:20:37,030
term we render it nothing special about

00:20:33,340 --> 00:20:38,740
it when things come more context when we

00:20:37,030 --> 00:20:42,250
need to combine various data on our

00:20:38,740 --> 00:20:47,650
pages it's getting more hard so with

00:20:42,250 --> 00:20:50,620
simple example where we can combine a

00:20:47,650 --> 00:20:53,960
heading and image and some text let's

00:20:50,620 --> 00:20:56,320
look closer to it

00:20:53,960 --> 00:20:59,600
one simple solution is the use

00:20:56,320 --> 00:21:03,279
multi-value entity reference field for

00:20:59,600 --> 00:21:06,529
this we can reference a various data

00:21:03,279 --> 00:21:11,360
described by data models in our database

00:21:06,529 --> 00:21:14,360
and we can reorder them we can reuse

00:21:11,360 --> 00:21:18,289
components we can reuse our data for our

00:21:14,360 --> 00:21:20,509
website so we can combine our various

00:21:18,289 --> 00:21:23,299
data using this multi value entity

00:21:20,509 --> 00:21:26,749
reference field which is also in Drupal

00:21:23,299 --> 00:21:30,049
core now by the way with exactly what

00:21:26,749 --> 00:21:32,899
paragraphs module does paragraphs module

00:21:30,049 --> 00:21:35,059
is just multi value entity reference

00:21:32,899 --> 00:21:38,269
field and each paragraph is a separate

00:21:35,059 --> 00:21:41,330
entity we can create separate bundles

00:21:38,269 --> 00:21:44,059
for paragraphs paragraphs types we can

00:21:41,330 --> 00:21:49,369
mix them together to combine a complex

00:21:44,059 --> 00:21:50,419
data but let's look deeper at this

00:21:49,369 --> 00:21:54,799
simple example

00:21:50,419 --> 00:21:56,869
what is it it's a simple single column

00:21:54,799 --> 00:21:59,330
layout right we have hidden we have

00:21:56,869 --> 00:22:03,590
image we can we have a paragraph of text

00:21:59,330 --> 00:22:07,220
and all of this is just a single column

00:22:03,590 --> 00:22:09,409
layout pretty simple thing but what if

00:22:07,220 --> 00:22:12,950
you want a more complex layout what if

00:22:09,409 --> 00:22:16,789
you want the two columns here is getting

00:22:12,950 --> 00:22:19,129
more hot paragraphs way is to create a

00:22:16,789 --> 00:22:21,950
special paragraph type for example two

00:22:19,129 --> 00:22:24,230
column paragraph which will hold two

00:22:21,950 --> 00:22:27,919
columns inside it and when we can place

00:22:24,230 --> 00:22:32,330
with new paragraph type inside our page

00:22:27,919 --> 00:22:35,509
with a heading so in the end we will

00:22:32,330 --> 00:22:41,690
have at least four paragraph types and

00:22:35,509 --> 00:22:44,299
we have two layers of nesting here okay

00:22:41,690 --> 00:22:48,769
but what if we wanted two columns inside

00:22:44,299 --> 00:22:52,369
second column it's as well again this is

00:22:48,769 --> 00:22:57,399
a pretty simple example of really simple

00:22:52,369 --> 00:23:01,549
way out but things getting more hot hot

00:22:57,399 --> 00:23:03,830
again we need paragraph type of two

00:23:01,549 --> 00:23:04,980
columns here we can create we should

00:23:03,830 --> 00:23:08,220
create another

00:23:04,980 --> 00:23:12,390
place it in place in second column and

00:23:08,220 --> 00:23:14,910
you can see how is structure is complex

00:23:12,390 --> 00:23:18,240
and the complexity is rising each type

00:23:14,910 --> 00:23:20,490
each time we make any change to the

00:23:18,240 --> 00:23:23,970
layout it's not what flexible actually

00:23:20,490 --> 00:23:28,020
it's requires you ditional instances of

00:23:23,970 --> 00:23:34,410
paragraphs and several layers levels of

00:23:28,020 --> 00:23:37,020
nesting process of this solution is each

00:23:34,410 --> 00:23:39,600
paragraph is self-contained it can be

00:23:37,020 --> 00:23:43,679
edited separately it can be viewed and

00:23:39,600 --> 00:23:47,100
accessed separately but on the other

00:23:43,679 --> 00:23:50,040
side each time you use two column layout

00:23:47,100 --> 00:23:52,080
like we just saw in the example a new

00:23:50,040 --> 00:23:55,260
entity is created and the complexity and

00:23:52,080 --> 00:24:00,120
the amount of data stored in database is

00:23:55,260 --> 00:24:02,040
rising another cone of paragraphs is the

00:24:00,120 --> 00:24:04,860
data should be loaded recursively

00:24:02,040 --> 00:24:06,360
because we nest one paragraph inside

00:24:04,860 --> 00:24:08,880
another paragraph inside another

00:24:06,360 --> 00:24:13,200
paragraph we couldn't just load the data

00:24:08,880 --> 00:24:16,830
as a at once we should load one

00:24:13,200 --> 00:24:22,350
paragraph when all child paragraphs and

00:24:16,830 --> 00:24:24,270
so on it's also complexity for us but

00:24:22,350 --> 00:24:28,230
what's more important it's pretty hard

00:24:24,270 --> 00:24:32,010
to manage several layout let's look at

00:24:28,230 --> 00:24:35,190
Wis again we have several level heirs of

00:24:32,010 --> 00:24:38,970
nesting and to change anything in this

00:24:35,190 --> 00:24:41,400
structure we have to go inside each

00:24:38,970 --> 00:24:44,100
paragraph to change something there and

00:24:41,400 --> 00:24:45,960
then go out it's really hard to manage

00:24:44,100 --> 00:24:51,990
complex layout built on top of

00:24:45,960 --> 00:24:55,910
paragraphs and another cone is hard to

00:24:51,990 --> 00:25:00,030
associate data to host pages because

00:24:55,910 --> 00:25:05,370
paragraphs are nested one inside NASA we

00:25:00,030 --> 00:25:10,200
can lose a relation between the host

00:25:05,370 --> 00:25:14,210
page and inner paragraphs why so many

00:25:10,200 --> 00:25:17,580
cons of so handy and popular module

00:25:14,210 --> 00:25:20,159
because the layout

00:25:17,580 --> 00:25:23,100
should be a responsibility of the host

00:25:20,159 --> 00:25:25,289
page not a responsibility of each

00:25:23,100 --> 00:25:29,100
separate paragraph but responsibilities

00:25:25,289 --> 00:25:31,230
of the host page because we have data we

00:25:29,100 --> 00:25:33,869
have some images and paragraphs and we

00:25:31,230 --> 00:25:37,830
want it to be layout it in some

00:25:33,869 --> 00:25:42,029
particular layout I don't want to create

00:25:37,830 --> 00:25:45,119
special entities and two last one inside

00:25:42,029 --> 00:25:48,450
another I just want a particular layout

00:25:45,119 --> 00:25:53,100
and to place content inside it let's

00:25:48,450 --> 00:25:56,340
find an alternative way of doing this I

00:25:53,100 --> 00:26:01,169
created a small module which named

00:25:56,340 --> 00:26:04,980
bricks and I will show what we can can

00:26:01,169 --> 00:26:08,220
be achieve let's think of way out as a

00:26:04,980 --> 00:26:11,720
single thing not separate entities one

00:26:08,220 --> 00:26:14,399
inside another but is a single thing

00:26:11,720 --> 00:26:16,679
okay we have a layout and we have a data

00:26:14,399 --> 00:26:19,590
in the database and now we can put this

00:26:16,679 --> 00:26:22,649
data in this layout it's pretty simple

00:26:19,590 --> 00:26:25,769
thing and it's something use it

00:26:22,649 --> 00:26:28,619
throughout the Drupal but let's use this

00:26:25,769 --> 00:26:31,169
on the field basis so when we create a

00:26:28,619 --> 00:26:34,350
new page we can change the layout of

00:26:31,169 --> 00:26:37,529
each page of each field actually but

00:26:34,350 --> 00:26:39,629
what's more important what would be

00:26:37,529 --> 00:26:42,690
really great to allow to nest layouts

00:26:39,629 --> 00:26:45,629
one inside another not to create a

00:26:42,690 --> 00:26:49,049
separate entities separate instances of

00:26:45,629 --> 00:26:52,080
data but just to nest layouts to combine

00:26:49,049 --> 00:26:53,519
them like on this picture we you can

00:26:52,080 --> 00:26:56,759
only have two way out single column

00:26:53,519 --> 00:27:00,840
layout and two column layout and we can

00:26:56,759 --> 00:27:05,570
create almost anything from just two

00:27:00,840 --> 00:27:11,759
layouts we just need a nesting for web

00:27:05,570 --> 00:27:14,009
so the process of this way is quite huge

00:27:11,759 --> 00:27:16,739
we also totally independent from data

00:27:14,009 --> 00:27:19,619
which means we can reuse the layouts

00:27:16,739 --> 00:27:23,190
through our website layouts can be

00:27:19,619 --> 00:27:26,429
stored as content and it gives you a way

00:27:23,190 --> 00:27:29,600
to translate them to revision them and

00:27:26,429 --> 00:27:33,180
to use everything we can use for content

00:27:29,600 --> 00:27:35,490
data in this way can be stored as a flat

00:27:33,180 --> 00:27:37,950
structure so it can be loaded without

00:27:35,490 --> 00:27:45,150
any recursion because the whole layout

00:27:37,950 --> 00:27:48,960
is a single thing not the nested

00:27:45,150 --> 00:27:51,840
entities and managing the overall layout

00:27:48,960 --> 00:27:54,840
becomes deadly simple because again with

00:27:51,840 --> 00:27:57,210
the single hole the data is separated

00:27:54,840 --> 00:28:00,840
from layout but layout is a single

00:27:57,210 --> 00:28:03,990
structure and the data is directly

00:28:00,840 --> 00:28:05,880
associated to the page because there is

00:28:03,990 --> 00:28:10,590
only one thing between data and page

00:28:05,880 --> 00:28:14,040
which is layout which is single where

00:28:10,590 --> 00:28:15,810
are some cons as well which should be

00:28:14,040 --> 00:28:18,360
view it and edit it as a single hole

00:28:15,810 --> 00:28:21,050
because the knowledge of its layout is

00:28:18,360 --> 00:28:23,850
only in the single place in its layout

00:28:21,050 --> 00:28:25,770
best practice here is to split the page

00:28:23,850 --> 00:28:31,950
in smaller components so you will have

00:28:25,770 --> 00:28:34,920
more control for the block pages another

00:28:31,950 --> 00:28:36,120
concept which is not popular yet because

00:28:34,920 --> 00:28:38,790
it's relatively new

00:28:36,120 --> 00:28:41,340
thanks to entity reference and inline

00:28:38,790 --> 00:28:44,430
entity forms but you can change it you

00:28:41,340 --> 00:28:47,880
can try it and to adopt it into your

00:28:44,430 --> 00:28:52,940
projects okay let's stop talking about

00:28:47,880 --> 00:28:52,940
the concept let's look at the demo

00:29:43,280 --> 00:29:51,550
okay you can do it so what we will do we

00:29:48,320 --> 00:29:54,650
will open a simply test me which is a

00:29:51,550 --> 00:29:56,390
playground for Drupal modules and we

00:29:54,650 --> 00:29:58,820
will launch the sandbox for bricks

00:29:56,390 --> 00:30:01,280
module bricks module itself is a really

00:29:58,820 --> 00:30:05,680
small pieces of code it's around 20

00:30:01,280 --> 00:30:08,300
kilobytes of code it's just some

00:30:05,680 --> 00:30:11,660
integrations between entity reference

00:30:08,300 --> 00:30:15,170
between Drupal core and between inline

00:30:11,660 --> 00:30:17,960
entity forms and so on the key thing

00:30:15,170 --> 00:30:21,410
about it it allows you to manipulate

00:30:17,960 --> 00:30:23,450
with nesting layouts to create the way

00:30:21,410 --> 00:30:27,710
out you want on the fly without

00:30:23,450 --> 00:30:40,970
templating and so on I will show you

00:30:27,710 --> 00:30:44,270
soon actually you can you can play with

00:30:40,970 --> 00:30:52,970
Java during I will show it you can just

00:30:44,270 --> 00:30:57,020
open the page of bricks module on the

00:30:52,970 --> 00:30:59,780
drupal.org and you can click the link in

00:30:57,020 --> 00:31:02,930
the VIP my section it will be installed

00:30:59,780 --> 00:31:08,270
in few minutes and you can play on your

00:31:02,930 --> 00:31:10,460
own so once we click on this link we

00:31:08,270 --> 00:31:13,820
click install and when we go through the

00:31:10,460 --> 00:31:16,460
standard installation process without

00:31:13,820 --> 00:31:21,670
any changes it will install standard

00:31:16,460 --> 00:31:21,670
Drupal and several additional modules

00:31:40,260 --> 00:31:49,230
okay Drupal install - let's configure it

00:31:42,929 --> 00:31:51,690
and start playing around okay we have

00:31:49,230 --> 00:31:58,770
drupe installed first of all we need to

00:31:51,690 --> 00:32:02,370
enable the module I have a special

00:31:58,770 --> 00:32:05,580
demonstration model for that it's also a

00:32:02,370 --> 00:32:09,570
part of package let's look closer what

00:32:05,580 --> 00:32:12,179
we have inside inside we have a

00:32:09,570 --> 00:32:14,520
bootstrap kit booster kit is just a set

00:32:12,179 --> 00:32:17,419
of layouts for bootstrap framework so

00:32:14,520 --> 00:32:20,580
yeah in this demo we will use Drupal a

00:32:17,419 --> 00:32:23,250
standard Drupal installation we will use

00:32:20,580 --> 00:32:26,070
bootstrap framework as our style guide

00:32:23,250 --> 00:32:27,690
it could be your own but for this

00:32:26,070 --> 00:32:30,720
example if you use a bootstrap since

00:32:27,690 --> 00:32:32,760
it's pretty simple to use we will use

00:32:30,720 --> 00:32:36,510
bricks module which will allow us to

00:32:32,760 --> 00:32:39,840
nest layout we will use inline entity

00:32:36,510 --> 00:32:44,250
form to be able to edit the data in line

00:32:39,840 --> 00:32:46,650
on the node edit page we will use entity

00:32:44,250 --> 00:32:49,200
construction kit to be able to create

00:32:46,650 --> 00:32:52,440
different type of data on the flight in

00:32:49,200 --> 00:32:57,179
the algún interface and we will use a

00:32:52,440 --> 00:33:00,720
layout discovery to be able to consume

00:32:57,179 --> 00:33:03,080
layouts registered in drupal system okay

00:33:00,720 --> 00:33:03,080
let's continue

00:33:08,700 --> 00:33:14,730
and they also need some theme some

00:33:12,990 --> 00:33:21,240
bootstrap compatible theme which will

00:33:14,730 --> 00:33:23,930
provide us a CSS let's check that

00:33:21,240 --> 00:33:23,930
everything

00:33:29,220 --> 00:33:32,150
in there built

00:33:35,890 --> 00:33:40,870
okay we are ready to go let's go to the

00:33:39,160 --> 00:33:46,000
content section on the website and

00:33:40,870 --> 00:33:48,549
create some content where is some

00:33:46,000 --> 00:33:51,700
special type of page breeki which is

00:33:48,549 --> 00:33:57,520
pre-configured to use these nested

00:33:51,700 --> 00:33:59,670
layout structures okay let's give it a

00:33:57,520 --> 00:33:59,670
name

00:34:06,350 --> 00:34:14,889
let's create a simple content let's be

00:34:11,480 --> 00:34:14,889
some text

00:34:25,710 --> 00:34:30,450
so you can see that visas interface is

00:34:28,409 --> 00:34:32,490
pretty the same two paragraphs is on the

00:34:30,450 --> 00:34:37,010
difference it's built on top of standard

00:34:32,490 --> 00:34:37,010
entity reference and line entity form

00:34:38,000 --> 00:34:44,639
okay we done created a simple page with

00:34:41,250 --> 00:34:49,429
a single component of type text in it

00:34:44,639 --> 00:34:57,720
inside it let's add some more contents

00:34:49,429 --> 00:35:01,380
for example image okay we now have a

00:34:57,720 --> 00:35:07,260
text block inside page and we have an

00:35:01,380 --> 00:35:11,250
image above it under it so what we would

00:35:07,260 --> 00:35:14,550
like to do now as in my example during

00:35:11,250 --> 00:35:17,359
the slides let's put it in the different

00:35:14,550 --> 00:35:25,290
layout let's put it into column layout

00:35:17,359 --> 00:35:29,000
we can select a special layout entity

00:35:25,290 --> 00:35:32,960
type which will allow us to select I

00:35:29,000 --> 00:35:36,059
will zoom it in okay we have a text

00:35:32,960 --> 00:35:39,210
component we have an image component and

00:35:36,059 --> 00:35:42,030
we have a layout component and here we

00:35:39,210 --> 00:35:45,480
can select any layouts registered in

00:35:42,030 --> 00:35:49,049
Drupal let's use equal columns which is

00:35:45,480 --> 00:35:51,119
provided by a bootstrap cute module so

00:35:49,049 --> 00:35:55,710
what we want what we are going to do now

00:35:51,119 --> 00:35:59,220
we need some thing to put our text and

00:35:55,710 --> 00:36:05,220
image inside this layout we can just

00:35:59,220 --> 00:36:08,400
drag and drop and we can put components

00:36:05,220 --> 00:36:11,280
one inside another exactly like we do

00:36:08,400 --> 00:36:14,309
for menus and for taxonomy terms it's

00:36:11,280 --> 00:36:17,490
the same mechanism so what we should

00:36:14,309 --> 00:36:19,500
have now we have a layout of type equal

00:36:17,490 --> 00:36:23,640
columns and we have two components

00:36:19,500 --> 00:36:26,160
inside it let's look what we have yeah

00:36:23,640 --> 00:36:34,290
we have two columns on our page it's

00:36:26,160 --> 00:36:37,740
pretty easy so let's let's try to create

00:36:34,290 --> 00:36:41,890
something we discussed in the

00:36:37,740 --> 00:36:46,420
previous talk let's put two columns

00:36:41,890 --> 00:36:52,110
inside second column like see in the

00:36:46,420 --> 00:36:52,110
example what we need here we need some

00:36:52,470 --> 00:36:59,800
kind of wrapper some kind of container

00:36:56,170 --> 00:37:04,150
for second column which will hold the

00:36:59,800 --> 00:37:09,900
inner content inside it we also need a

00:37:04,150 --> 00:37:14,640
way out think again I can zoom it

00:37:09,900 --> 00:37:21,330
we also select equal columns here and

00:37:14,640 --> 00:37:30,070
let's add two images inside one and

00:37:21,330 --> 00:37:35,050
another one okay what we have now we

00:37:30,070 --> 00:37:38,470
have overall equal columns layout which

00:37:35,050 --> 00:37:42,130
hold image as a first column and rapper

00:37:38,470 --> 00:37:48,820
as the next column which will hold a

00:37:42,130 --> 00:37:51,190
text and the columns under it you can

00:37:48,820 --> 00:37:54,640
see you can see how it's easy to

00:37:51,190 --> 00:37:58,360
manipulate the data we only have an

00:37:54,640 --> 00:38:00,460
image and text blocks defined we have

00:37:58,360 --> 00:38:04,150
several layouts registered in Drupal

00:38:00,460 --> 00:38:06,580
which is a pretty simple now and we can

00:38:04,150 --> 00:38:13,390
compose the way out of any structure

00:38:06,580 --> 00:38:18,610
directly in the admin UI and the power

00:38:13,390 --> 00:38:20,380
of whole think about it it's not limited

00:38:18,610 --> 00:38:22,630
in any way you can use it on your own

00:38:20,380 --> 00:38:24,940
you can define your own process around

00:38:22,630 --> 00:38:27,730
it you can define your own components

00:38:24,940 --> 00:38:30,760
you can nest components one inside

00:38:27,730 --> 00:38:36,220
another you can nest layout one inside

00:38:30,760 --> 00:38:42,850
another let's try to use CSS classes

00:38:36,220 --> 00:38:48,570
here for example let's give with text

00:38:42,850 --> 00:38:48,570
big size little CSS class

00:38:49,710 --> 00:38:55,589
you can see that we can control first of

00:38:53,760 --> 00:38:58,530
all we can control the whole layout of

00:38:55,589 --> 00:39:00,960
this page by nesting of various layouts

00:38:58,530 --> 00:39:03,750
one inside another we can control

00:39:00,960 --> 00:39:06,890
styling of this page by providing CSS

00:39:03,750 --> 00:39:10,460
modifiers directly here and we can also

00:39:06,890 --> 00:39:15,510
select the View mode right here for each

00:39:10,460 --> 00:39:17,970
references piece of contents which gives

00:39:15,510 --> 00:39:22,170
us an opportunity to create a really

00:39:17,970 --> 00:39:25,020
flexible content with ease and of course

00:39:22,170 --> 00:39:29,330
we can change everything here for

00:39:25,020 --> 00:39:35,460
example we can put with two columns as a

00:39:29,330 --> 00:39:38,000
third column of the whole page so it's

00:39:35,460 --> 00:39:41,520
really simple to manipulate the data now

00:39:38,000 --> 00:39:45,210
why because we separated the data and

00:39:41,520 --> 00:39:47,880
the layout and we don't try to put

00:39:45,210 --> 00:39:50,460
layout inside entities and put entities

00:39:47,880 --> 00:39:52,530
inside entities forget about it we can

00:39:50,460 --> 00:39:54,780
control the whole layout in a single

00:39:52,530 --> 00:39:57,330
place we can store it in the single

00:39:54,780 --> 00:40:00,119
place and it's completely separated from

00:39:57,330 --> 00:40:02,670
the data data is completely reused

00:40:00,119 --> 00:40:06,240
through our website and layout as well

00:40:02,670 --> 00:40:10,970
is also used for our website so things

00:40:06,240 --> 00:40:10,970
can be really easy

00:40:13,530 --> 00:40:21,270
okay let's finally make some final notes

00:40:16,410 --> 00:40:25,050
about we stock first note is about

00:40:21,270 --> 00:40:27,480
entity reference as you just see entity

00:40:25,050 --> 00:40:31,650
reference can be used for both data

00:40:27,480 --> 00:40:34,200
model like when we can reference from

00:40:31,650 --> 00:40:37,350
note to the user which is created with

00:40:34,200 --> 00:40:41,310
note or we can use it for nesting

00:40:37,350 --> 00:40:43,620
like you just did now so we can put one

00:40:41,310 --> 00:40:45,810
data inside another data or we can put

00:40:43,620 --> 00:40:48,750
layout inside layout and this is done

00:40:45,810 --> 00:40:52,560
also by entity reference module so it's

00:40:48,750 --> 00:40:57,240
multi-purpose second note is about

00:40:52,560 --> 00:41:02,400
atomicity so working with things like I

00:40:57,240 --> 00:41:05,280
just shown is super flexible it gives

00:41:02,400 --> 00:41:07,980
you a lot of freedom but if you will

00:41:05,280 --> 00:41:11,280
start working to atomic if you will

00:41:07,980 --> 00:41:14,760
start to build each page from the ground

00:41:11,280 --> 00:41:17,550
you will find out that maintaining of

00:41:14,760 --> 00:41:20,100
the complex structures on different

00:41:17,550 --> 00:41:22,770
pages which are pretty similar request

00:41:20,100 --> 00:41:26,100
you additional time so keep the balance

00:41:22,770 --> 00:41:29,190
don't be too atomic define your own

00:41:26,100 --> 00:41:33,930
blocks for your own design for your own

00:41:29,190 --> 00:41:35,370
website so you couldn't even repeat the

00:41:33,930 --> 00:41:38,430
same actions from page to page

00:41:35,370 --> 00:41:40,920
so atomicity gives you a freedom but on

00:41:38,430 --> 00:41:46,980
the other hand it requires you more time

00:41:40,920 --> 00:41:50,220
to control also note about paragraphs in

00:41:46,980 --> 00:41:54,120
the demonstration I just shown where was

00:41:50,220 --> 00:41:57,300
no paragraphs it was a simple easy key

00:41:54,120 --> 00:42:03,570
and in line editor construction kit and

00:41:57,300 --> 00:42:06,360
inline entity form so my question is why

00:42:03,570 --> 00:42:09,300
should we use paragraphs if we already

00:42:06,360 --> 00:42:12,080
have things like entity construction kit

00:42:09,300 --> 00:42:15,600
and inline entity forms which allows us

00:42:12,080 --> 00:42:17,280
to do the same things and actually we

00:42:15,600 --> 00:42:20,580
can do even more because we can reuse

00:42:17,280 --> 00:42:22,380
entities through our website paragraphs

00:42:20,580 --> 00:42:26,330
couldn't be reused from page to page

00:42:22,380 --> 00:42:28,850
so another word about paragraphs is

00:42:26,330 --> 00:42:31,670
next time you will try to use them think

00:42:28,850 --> 00:42:34,790
about do you really need them because

00:42:31,670 --> 00:42:37,610
SEK and inline and Ephraim is the same

00:42:34,790 --> 00:42:43,130
functionality and more flexibility

00:42:37,610 --> 00:42:45,650
action not about layouts layout can be

00:42:43,130 --> 00:42:48,230
treated as an entity as difference

00:42:45,650 --> 00:42:50,840
between entity and layout that layout

00:42:48,230 --> 00:42:53,960
doesn't hold any data layout is for

00:42:50,840 --> 00:42:55,880
representation of data so it doesn't

00:42:53,960 --> 00:42:57,620
matter when you where you put a two

00:42:55,880 --> 00:43:00,650
column layout it's always the same it's

00:42:57,620 --> 00:43:03,620
just two columns so layout can be

00:43:00,650 --> 00:43:08,020
treated as a entity type or entity

00:43:03,620 --> 00:43:10,700
bundle and is a small difference between

00:43:08,020 --> 00:43:17,120
the all other components and layouts

00:43:10,700 --> 00:43:19,070
because layouts dateless so let's

00:43:17,120 --> 00:43:22,250
summarize and wrap all it up

00:43:19,070 --> 00:43:24,770
first of all separate data styles and

00:43:22,250 --> 00:43:27,350
building blocks data is what you store

00:43:24,770 --> 00:43:31,670
in database it's what is what represent

00:43:27,350 --> 00:43:34,070
your real data objects Styles is what in

00:43:31,670 --> 00:43:36,440
your style guide is what you is what

00:43:34,070 --> 00:43:39,470
your brand about and its look and feel

00:43:36,440 --> 00:43:41,750
and building blocks is move is the most

00:43:39,470 --> 00:43:44,600
important thing because it allows you to

00:43:41,750 --> 00:43:46,690
combine your data and your Styles to

00:43:44,600 --> 00:43:49,670
build your unique content instances

00:43:46,690 --> 00:43:51,920
define your own blocks define set up

00:43:49,670 --> 00:43:57,110
your own workflow process for building

00:43:51,920 --> 00:44:00,020
blocks and you will success another note

00:43:57,110 --> 00:44:03,560
and take away that paragraphs doesn't

00:44:00,020 --> 00:44:06,460
work well for all cases for example for

00:44:03,560 --> 00:44:10,670
nested layouts so next time you will

00:44:06,460 --> 00:44:13,940
think about them try to use try to set

00:44:10,670 --> 00:44:16,460
up drop without them and of course you

00:44:13,940 --> 00:44:18,740
can try bricks for complex cases it will

00:44:16,460 --> 00:44:21,080
give you a control for the whole layout

00:44:18,740 --> 00:44:24,650
it will allow you to separate data and

00:44:21,080 --> 00:44:26,390
layout and you can control precisely of

00:44:24,650 --> 00:44:28,760
which piece of content how it will look

00:44:26,390 --> 00:44:31,430
like you can give a CSS modifiers you

00:44:28,760 --> 00:44:34,810
can select the View mode and you can

00:44:31,430 --> 00:44:36,490
compose your data in the way you want

00:44:34,810 --> 00:44:39,750
thanks

00:44:36,490 --> 00:44:39,750
more tension

00:44:42,460 --> 00:44:49,150
[Applause]

00:44:44,310 --> 00:44:52,300
finally if you want to contribute you

00:44:49,150 --> 00:44:54,970
can drop me an email with a subject

00:44:52,300 --> 00:44:57,940
let's content model you can just share

00:44:54,970 --> 00:44:59,680
your thoughts or ideas regarding this

00:44:57,940 --> 00:45:02,250
session or regarding this concept

00:44:59,680 --> 00:45:06,310
doesn't matter I'm always happy to

00:45:02,250 --> 00:45:09,100
receive some feedback you can all also

00:45:06,310 --> 00:45:10,750
describe your own complex case for

00:45:09,100 --> 00:45:13,420
example if you are building a complex

00:45:10,750 --> 00:45:15,250
website and you are thinking about its

00:45:13,420 --> 00:45:17,800
architecture you can drop me an email

00:45:15,250 --> 00:45:19,930
and we can discuss how it's better to

00:45:17,800 --> 00:45:22,450
create a content strategy for your new

00:45:19,930 --> 00:45:25,540
project or you can just list your drupal

00:45:22,450 --> 00:45:29,200
skills and we will think together how

00:45:25,540 --> 00:45:32,440
you can help to adopt this new concept

00:45:29,200 --> 00:45:35,560
to drupal community also it would be

00:45:32,440 --> 00:45:38,760
great if you spend several minutes and

00:45:35,560 --> 00:45:42,370
evaluate this session so next time I

00:45:38,760 --> 00:45:47,020
will be more prepared and bring with

00:45:42,370 --> 00:45:49,900
myself several cables and also please

00:45:47,020 --> 00:45:54,310
take a survey for DrupalCon Vienna to

00:45:49,900 --> 00:45:57,430
help organizers to organize everything

00:45:54,310 --> 00:46:00,730
on the perfect level thank you again

00:45:57,430 --> 00:46:02,830
thank you to visit in Vienna and I wish

00:46:00,730 --> 00:46:06,160
you a really great DrupalCon here and

00:46:02,830 --> 00:46:07,980
now I'm ready for your questions if you

00:46:06,160 --> 00:46:14,170
have ones

00:46:07,980 --> 00:46:19,360
sure sorry so you can go to microphone

00:46:14,170 --> 00:46:23,170
so everybody every one in the room deal

00:46:19,360 --> 00:46:25,720
here do you feel going for the bricks

00:46:23,170 --> 00:46:28,120
will offer things that the layer example

00:46:25,720 --> 00:46:30,040
the tree escaped this morning yeah will

00:46:28,120 --> 00:46:35,320
bricks offer anything that that won't be

00:46:30,040 --> 00:46:37,480
able to provide can you repeat this so

00:46:35,320 --> 00:46:40,750
the layer example the tree escaped this

00:46:37,480 --> 00:46:42,730
morning do you feel going forward that

00:46:40,750 --> 00:46:48,850
bricks will be able to offer anything

00:46:42,730 --> 00:46:53,029
that that won't provide yes I think it

00:46:48,850 --> 00:46:57,219
it can looking forward we can

00:46:53,029 --> 00:47:00,169
use bricks in various cases it can be a

00:46:57,219 --> 00:47:05,150
replacement for layout builder builder

00:47:00,169 --> 00:47:08,539
for example so short answer is yes

00:47:05,150 --> 00:47:10,640
long answer it's again it's super

00:47:08,539 --> 00:47:11,959
flexible and it's up to you how to use

00:47:10,640 --> 00:47:14,380
it you can use it for layout

00:47:11,959 --> 00:47:17,809
manipulation you can use it for

00:47:14,380 --> 00:47:20,479
component manipulation you can even

00:47:17,809 --> 00:47:23,479
create layouts on the fly and register

00:47:20,479 --> 00:47:27,019
them via a layout API to provide them to

00:47:23,479 --> 00:47:31,579
other modules so the use cases a bunch

00:47:27,019 --> 00:47:33,049
of use cases I've actually got two

00:47:31,579 --> 00:47:37,039
questions if that's okay

00:47:33,049 --> 00:47:39,829
one was he didn't show but I teased the

00:47:37,039 --> 00:47:41,029
displays so of content I would that be

00:47:39,829 --> 00:47:49,069
stuff that you would normally do via

00:47:41,029 --> 00:47:50,599
other fields oh sure sorry so teaser if

00:47:49,069 --> 00:47:53,150
you want to do a teaser display of your

00:47:50,599 --> 00:47:56,630
content hmm are you using fields that

00:47:53,150 --> 00:47:58,189
aren't what's part of bricks or can you

00:47:56,630 --> 00:47:59,419
use the bricks fields for the teaser

00:47:58,189 --> 00:48:02,539
display okay

00:47:59,419 --> 00:48:05,319
bricks is a just field type actually

00:48:02,539 --> 00:48:08,239
generally this is an entity reference

00:48:05,319 --> 00:48:10,819
behind it is extended entity reference

00:48:08,239 --> 00:48:12,709
so you can use bricks everywhere you can

00:48:10,819 --> 00:48:16,219
use the fields you can use for teaser

00:48:12,709 --> 00:48:18,380
for body you can have multiple fields of

00:48:16,219 --> 00:48:20,539
tiebreaks on the page it doesn't matter

00:48:18,380 --> 00:48:22,459
it's just the field which can hold the

00:48:20,539 --> 00:48:24,380
data of any structure inside it

00:48:22,459 --> 00:48:25,819
let's think about it okay so you might

00:48:24,380 --> 00:48:28,339
have a field for your teaser

00:48:25,819 --> 00:48:31,400
yeah sure sure you can have a teaser you

00:48:28,339 --> 00:48:33,919
can have a body and you can control as

00:48:31,400 --> 00:48:35,959
usual but the thing is inside these

00:48:33,919 --> 00:48:38,599
fields can be any data of any structure

00:48:35,959 --> 00:48:40,699
for any way out okay and the other one

00:48:38,599 --> 00:48:43,579
was just about the Styles text field

00:48:40,699 --> 00:48:45,949
would be like I thought value out there

00:48:43,579 --> 00:48:48,559
might be to have a drop-down of

00:48:45,949 --> 00:48:51,589
predefined styles for yeah yeah yeah I

00:48:48,559 --> 00:48:53,869
have a actually issue in the queue about

00:48:51,589 --> 00:48:55,969
it yeah it would be more useful the next

00:48:53,869 --> 00:48:59,299
step is to work on user experience now I

00:48:55,969 --> 00:49:02,119
was focusing on the data storage and the

00:48:59,299 --> 00:49:05,019
whole concept in architecture okay thank

00:49:02,119 --> 00:49:05,019
what yeah you're right

00:49:05,210 --> 00:49:11,210
my question is about you said you can

00:49:08,779 --> 00:49:13,430
reuse the layouts and I didn't quite get

00:49:11,210 --> 00:49:20,960
where and how you would do that yeah

00:49:13,430 --> 00:49:23,539
yeah the short answer is like for when

00:49:20,960 --> 00:49:25,910
using paragraphs for example when you

00:49:23,539 --> 00:49:29,239
create a paragraph type two column

00:49:25,910 --> 00:49:32,029
layout and you can and when you put some

00:49:29,239 --> 00:49:33,589
data inside this paragraph of column of

00:49:32,029 --> 00:49:36,049
two column layout

00:49:33,589 --> 00:49:39,470
you couldn't reuse this paragraph on

00:49:36,049 --> 00:49:42,650
other pages because it holds its data in

00:49:39,470 --> 00:49:44,989
this layout so layout and data are not

00:49:42,650 --> 00:49:48,799
separated with paragraphs but with

00:49:44,989 --> 00:49:51,559
bricks it is because layout is one in

00:49:48,799 --> 00:49:54,559
one place and the data reference to

00:49:51,559 --> 00:49:59,239
layout so you can reuse layouts because

00:49:54,559 --> 00:50:00,680
it doesn't hold data anymore just didn't

00:49:59,239 --> 00:50:05,480
get where where would you do

00:50:00,680 --> 00:50:11,089
where in the user interface yeah yeah I

00:50:05,480 --> 00:50:19,160
can show you briefly actually so in this

00:50:11,089 --> 00:50:25,369
demo here you can just select a layout

00:50:19,160 --> 00:50:27,799
from dropdown equal columns and here you

00:50:25,369 --> 00:50:29,960
also can select the same equal columns

00:50:27,799 --> 00:50:32,119
so you can reuse you can nest combined

00:50:29,960 --> 00:50:34,759
from page to page from place to place

00:50:32,119 --> 00:50:37,489
doesn't matter with paragraphs you have

00:50:34,759 --> 00:50:39,470
to create a paragraph each new time you

00:50:37,489 --> 00:50:56,989
want to use it so it's not reuse it

00:50:39,470 --> 00:51:00,440
actually it's created so yeah this is my

00:50:56,989 --> 00:51:03,529
note about ethnicity yeah this is pink

00:51:00,440 --> 00:51:07,160
is for creating unique layouts so when

00:51:03,529 --> 00:51:10,099
your data is flexible and different from

00:51:07,160 --> 00:51:12,319
page to page but it can be applied it's

00:51:10,099 --> 00:51:14,870
the next step so with bricks you can

00:51:12,319 --> 00:51:17,450
create a layout and to register

00:51:14,870 --> 00:51:20,030
it in layout API I'm working on it right

00:51:17,450 --> 00:51:22,280
now so later you it will be possible to

00:51:20,030 --> 00:51:28,340
reuse the structure on various pages

00:51:22,280 --> 00:51:32,240
it's the next step is supporting

00:51:28,340 --> 00:51:34,850
translations and search yeah sure as I

00:51:32,240 --> 00:51:37,850
said this is a simple and standard

00:51:34,850 --> 00:51:39,650
entity reference field internally so

00:51:37,850 --> 00:51:44,990
everything works with entity reference

00:51:39,650 --> 00:51:46,880
is working with big stew so the whole

00:51:44,990 --> 00:51:50,780
this structure is a single multi value

00:51:46,880 --> 00:51:53,080
field and as any usual multi value field

00:51:50,780 --> 00:51:59,240
it can be translated revision it

00:51:53,080 --> 00:52:02,090
everything so yes it's working first

00:51:59,240 --> 00:52:06,380
thank you for addressing a real real

00:52:02,090 --> 00:52:10,700
problem with a real solution my question

00:52:06,380 --> 00:52:15,200
is can you limit the flexibility to like

00:52:10,700 --> 00:52:17,540
limit how far you can nest and what yeah

00:52:15,200 --> 00:52:19,910
yeah this is a good question and every

00:52:17,540 --> 00:52:24,250
time and talk about it this question is

00:52:19,910 --> 00:52:27,380
comes up so the answer no limitations no

00:52:24,250 --> 00:52:29,720
limitations because this is a flat

00:52:27,380 --> 00:52:32,570
structure it's stored internally as a

00:52:29,720 --> 00:52:33,440
single multi value field no matter how

00:52:32,570 --> 00:52:36,500
deep you go

00:52:33,440 --> 00:52:39,920
this is a single multi value field so

00:52:36,500 --> 00:52:42,170
you can deep and deep it can be ten or

00:52:39,920 --> 00:52:44,600
twenty levels doesn't matter the only

00:52:42,170 --> 00:52:47,060
limitation is UI because it just

00:52:44,600 --> 00:52:49,160
couldn't hold all these levels and

00:52:47,060 --> 00:52:51,650
represent this structure but internally

00:52:49,160 --> 00:52:54,410
no limitations and no performance issues

00:52:51,650 --> 00:52:56,810
because there is no recursion it's

00:52:54,410 --> 00:53:03,920
loaded once because which is a single

00:52:56,810 --> 00:53:08,690
multi value field so yeah I think you

00:53:03,920 --> 00:53:12,110
are going to ask what about mobile

00:53:08,690 --> 00:53:17,870
content so when I want to have a special

00:53:12,110 --> 00:53:20,180
layout for mobile in the next step we

00:53:17,870 --> 00:53:22,790
should work because this is for internal

00:53:20,180 --> 00:53:24,710
representation of the way out and to

00:53:22,790 --> 00:53:27,630
reference the data which can be reused

00:53:24,710 --> 00:53:33,690
but how precisely to control

00:53:27,630 --> 00:53:36,240
without it's up to us and it's the next

00:53:33,690 --> 00:53:45,510
step when I talk about user experience I

00:53:36,240 --> 00:53:48,300
meant this as well how about for like

00:53:45,510 --> 00:53:50,850
integration of the layout with like

00:53:48,300 --> 00:53:53,730
feud's so like something like panelizer

00:53:50,850 --> 00:53:56,460
so like let's say I have a product right

00:53:53,730 --> 00:53:59,550
and the product that has feuds that are

00:53:56,460 --> 00:54:03,600
not just like text but meaningful data

00:53:59,550 --> 00:54:06,720
like price for instance is there any

00:54:03,600 --> 00:54:08,310
plan to integrate it or yeah yeah the

00:54:06,720 --> 00:54:10,230
right use case yeah yeah yeah it's

00:54:08,310 --> 00:54:13,710
actually it's not a right use case for

00:54:10,230 --> 00:54:16,980
that because this thing is to manipulate

00:54:13,710 --> 00:54:19,710
in the data inside field so when you are

00:54:16,980 --> 00:54:24,170
going to combine several fields together

00:54:19,710 --> 00:54:26,810
is is what about penalize risk so

00:54:24,170 --> 00:54:29,430
internally it's the same mechanism

00:54:26,810 --> 00:54:32,940
layout API panelizer

00:54:29,430 --> 00:54:35,550
using layout API and now and bricks also

00:54:32,940 --> 00:54:37,950
using yltp I when you select in the way

00:54:35,550 --> 00:54:39,800
out here it's provided by layout it so

00:54:37,950 --> 00:54:42,990
it's internally it's the same mechanism

00:54:39,800 --> 00:54:44,970
but use case is different penalized for

00:54:42,990 --> 00:54:46,950
layout in fields and this thing for

00:54:44,970 --> 00:54:49,380
composing the data of any structure

00:54:46,950 --> 00:54:54,990
inside field it's a replacement for

00:54:49,380 --> 00:54:57,480
visit week actually okay I think we

00:54:54,990 --> 00:55:00,180
finished the thank you for attention

00:54:57,480 --> 00:55:01,770
again have a great Drupal con and I'm

00:55:00,180 --> 00:55:04,590
happy to answer any questions afterwards

00:55:01,770 --> 00:55:06,600
you can find me and ask about anything

00:55:04,590 --> 00:55:15,070
thank you very much

00:55:06,600 --> 00:55:15,070

YouTube URL: https://www.youtube.com/watch?v=yZIVumIcLfc


