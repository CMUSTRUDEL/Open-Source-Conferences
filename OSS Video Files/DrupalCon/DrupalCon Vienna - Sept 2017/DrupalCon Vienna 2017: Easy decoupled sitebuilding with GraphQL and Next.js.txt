Title: DrupalCon Vienna 2017: Easy decoupled sitebuilding with GraphQL and Next.js
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	JavaScript and rich frontend have certainly taken the world by storm. At the same time RESTful APIs have been the norm in Drupal and other backends for years now. But still building a decoupled site continues to have a high overhead because of the setup needed and the nature of RESTful APIs.

In this session we'll examine how to use GraphQL, a communications protocol, and Next.js a Universal JavaScript framework using React. Together with this combination front end developers can accelerate decoupled site development, and enjoy full freedom from the Drupal sitebuilding practises.

Building a decoupled server side rendered React front end with optimal performance and SEO has never been so easy as with GraphQL and Next.js, but there are certain pitfalls you should be aware of.

- Jani Tarvainen
Captions: 
	00:00:00,000 --> 00:00:06,299
I think we'll get started now because we

00:00:03,330 --> 00:00:07,830
have a lot to cover but first of all

00:00:06,299 --> 00:00:11,370
thank you for attending this session

00:00:07,830 --> 00:00:13,019
which is titled easy decoupled sight

00:00:11,370 --> 00:00:17,279
building with graphic you all in next

00:00:13,019 --> 00:00:19,140
year's obviously Easy's relative thing

00:00:17,279 --> 00:00:21,150
if you know how to do it and it's easy

00:00:19,140 --> 00:00:23,100
so maybe in the beginning I'd like to

00:00:21,150 --> 00:00:26,630
have just the view on how many of you

00:00:23,100 --> 00:00:30,150
have used or know what graphic Ewell is

00:00:26,630 --> 00:00:32,579
okay good so fairly few what about how

00:00:30,150 --> 00:00:36,739
comfortable are you would react in

00:00:32,579 --> 00:00:40,170
javascript in general not so much okay

00:00:36,739 --> 00:00:42,420
good but in any case never mind the

00:00:40,170 --> 00:00:44,399
details in this talk I mean the

00:00:42,420 --> 00:00:47,180
technical details if you need to go back

00:00:44,399 --> 00:00:49,680
to them please do do later because it's

00:00:47,180 --> 00:00:53,039
going to be a lot of things in a quite a

00:00:49,680 --> 00:00:55,559
short while good so let's get started

00:00:53,039 --> 00:00:57,809
with a brief introduction of myself so

00:00:55,559 --> 00:00:58,920
I've been working with Johnny turbine

00:00:57,809 --> 00:01:02,550
and I've been working with web

00:00:58,920 --> 00:01:05,549
development things for over two decades

00:01:02,550 --> 00:01:08,220
at least twelve of those with Drupal

00:01:05,549 --> 00:01:12,680
also maybe not so much recently but in

00:01:08,220 --> 00:01:16,080
any case I work work mostly with the the

00:01:12,680 --> 00:01:17,939
current day job so in my company called

00:01:16,080 --> 00:01:20,070
ez systems which creates content

00:01:17,939 --> 00:01:23,759
management tools for for enterprise

00:01:20,070 --> 00:01:26,280
customers and I usually use typescript

00:01:23,759 --> 00:01:29,970
JavaScript Symphony and PHP so pretty

00:01:26,280 --> 00:01:33,150
much the familiar stack for for Drupal

00:01:29,970 --> 00:01:35,520
developers nowadays as well so but in

00:01:33,150 --> 00:01:37,229
addition to my day job I do believe that

00:01:35,520 --> 00:01:39,720
you have to try things to actually learn

00:01:37,229 --> 00:01:43,229
things and to minimize the risk I do

00:01:39,720 --> 00:01:46,200
them during my my evening job so at

00:01:43,229 --> 00:01:48,090
Mallik and this talk is about an

00:01:46,200 --> 00:01:51,380
exploration of mine into some

00:01:48,090 --> 00:01:53,909
technologies that I I chose to try and

00:01:51,380 --> 00:01:57,659
that's my twitter handle and that's my

00:01:53,909 --> 00:02:00,710
official personal branding image so if

00:01:57,659 --> 00:02:04,259
you see that somewhere that's me

00:02:00,710 --> 00:02:05,100
good so briefly about the agenda so what

00:02:04,259 --> 00:02:06,960
is decoupled

00:02:05,100 --> 00:02:09,869
site-building we'll go through that

00:02:06,960 --> 00:02:12,360
briefly then a very quick introduction

00:02:09,869 --> 00:02:13,260
to both graph QL and next es what are

00:02:12,360 --> 00:02:15,810
they

00:02:13,260 --> 00:02:18,540
and then to the actual meat so a brief

00:02:15,810 --> 00:02:22,349
overview of what I've built using these

00:02:18,540 --> 00:02:26,939
technologies give you a hands-on idea

00:02:22,349 --> 00:02:29,159
and then finally a few experiences or

00:02:26,939 --> 00:02:32,190
things that I could consider good bad or

00:02:29,159 --> 00:02:37,019
maybe even ugly about these different

00:02:32,190 --> 00:02:40,019
tools good so a decoupled sight building

00:02:37,019 --> 00:02:42,900
has been quite popular at least as a

00:02:40,019 --> 00:02:44,810
hype term for some years now so it's

00:02:42,900 --> 00:02:47,690
technically that you build a website

00:02:44,810 --> 00:02:50,400
based on some kind of content feed

00:02:47,690 --> 00:02:52,829
nowadays is as in today's keynote was

00:02:50,400 --> 00:02:55,159
also discussed there's also many which

00:02:52,829 --> 00:02:59,400
only offer a content API and those are

00:02:55,159 --> 00:03:01,349
very popular but in many cases still the

00:02:59,400 --> 00:03:04,230
traditional back-end is used to build

00:03:01,349 --> 00:03:07,290
websites maybe the decoupled way of

00:03:04,230 --> 00:03:09,120
using using is no preneur and I'm sure

00:03:07,290 --> 00:03:11,370
there's many reasons for that one

00:03:09,120 --> 00:03:13,680
obviously is that then you might want to

00:03:11,370 --> 00:03:15,690
spend too much time fine-tuning

00:03:13,680 --> 00:03:20,120
something which is not really relevant

00:03:15,690 --> 00:03:23,849
and so on but in any case there's always

00:03:20,120 --> 00:03:25,560
room for improvement and here a brief

00:03:23,849 --> 00:03:28,680
introduction to these two technologies

00:03:25,560 --> 00:03:31,199
so graph QL and next GIS there are two

00:03:28,680 --> 00:03:34,230
separate technologies which I thought

00:03:31,199 --> 00:03:36,750
that they will work well together they

00:03:34,230 --> 00:03:38,819
are both very opinionated so they kind

00:03:36,750 --> 00:03:41,099
of decide a lot of things for you as a

00:03:38,819 --> 00:03:43,739
developer I like that because I like

00:03:41,099 --> 00:03:47,129
frameworks not having to decide details

00:03:43,739 --> 00:03:51,480
so so I just kind of would like to work

00:03:47,129 --> 00:03:54,870
on on that and the key here is that we

00:03:51,480 --> 00:03:58,470
create a decoupled site with server-side

00:03:54,870 --> 00:04:00,540
rendering so the first render is done on

00:03:58,470 --> 00:04:02,970
the server side and then the graph QL

00:04:00,540 --> 00:04:04,260
API and the client picks up from there

00:04:02,970 --> 00:04:06,720
so you can obviously

00:04:04,260 --> 00:04:09,780
imagine there's some complexity there

00:04:06,720 --> 00:04:11,609
but I think we've come a long way in in

00:04:09,780 --> 00:04:13,919
just a few years you could already do

00:04:11,609 --> 00:04:15,479
this couple of years ago but now with

00:04:13,919 --> 00:04:18,329
these technologies being more mainstream

00:04:15,479 --> 00:04:20,370
and more mature nowadays actually if if

00:04:18,329 --> 00:04:22,700
you look into it soon you'll imagine

00:04:20,370 --> 00:04:26,800
that it's something that you could also

00:04:22,700 --> 00:04:29,770
take into use without too much over

00:04:26,800 --> 00:04:31,630
so I always like to have up options so

00:04:29,770 --> 00:04:34,210
there's obviously other options for both

00:04:31,630 --> 00:04:35,530
graphical and next years but I chose to

00:04:34,210 --> 00:04:41,320
to try these

00:04:35,530 --> 00:04:45,610
so graph QL two years ago or so it's as

00:04:41,320 --> 00:04:48,820
announced by Facebook so it's a an API

00:04:45,610 --> 00:04:50,230
you can make queries in JSON format or

00:04:48,820 --> 00:04:52,420
something that looks like gazing and

00:04:50,230 --> 00:04:54,550
then you get Jason back it's a little

00:04:52,420 --> 00:04:56,770
bit different from rest mostly that

00:04:54,550 --> 00:04:59,260
doesn't focus on the whole burbs thing

00:04:56,770 --> 00:05:01,720
that you you get when you want to read

00:04:59,260 --> 00:05:04,150
and you post when you want to create and

00:05:01,720 --> 00:05:06,670
patch when you want to update and so on

00:05:04,150 --> 00:05:08,770
so there's obviously discussions which

00:05:06,670 --> 00:05:12,160
is the proper way and so on but this is

00:05:08,770 --> 00:05:15,460
I think interesting in many cases

00:05:12,160 --> 00:05:18,700
there's many options for CMS's and

00:05:15,460 --> 00:05:22,030
content api's for this talk I tried a

00:05:18,700 --> 00:05:25,840
number of different tools the content

00:05:22,030 --> 00:05:30,010
API is at least cosmic j/s and grab CMS

00:05:25,840 --> 00:05:32,140
were too limited to my taste so I didn't

00:05:30,010 --> 00:05:34,930
choose to use them I choose to use easy

00:05:32,140 --> 00:05:37,330
platform but that's something that then

00:05:34,930 --> 00:05:39,370
for Drupal you also have the graph QL

00:05:37,330 --> 00:05:41,920
module which is being developed I

00:05:39,370 --> 00:05:43,630
checked that it's only inactive user in

00:05:41,920 --> 00:05:46,510
40 sites so it's need really not

00:05:43,630 --> 00:05:50,350
mainstream but from what I've read it's

00:05:46,510 --> 00:05:53,890
it's maturing fast so that's kind of

00:05:50,350 --> 00:05:58,420
what graticule is then about next jas

00:05:53,890 --> 00:06:01,720
next KS is the JavaScript framework so

00:05:58,420 --> 00:06:03,970
it's a framework it by default besides a

00:06:01,720 --> 00:06:06,000
lot of things how you wanna route things

00:06:03,970 --> 00:06:09,580
how you want to render things and so on

00:06:06,000 --> 00:06:12,220
this is something which is unlike maybe

00:06:09,580 --> 00:06:14,830
kind of more traditional frameworks

00:06:12,220 --> 00:06:18,210
which work on the framework on the

00:06:14,830 --> 00:06:21,910
browser or in the client this framework

00:06:18,210 --> 00:06:25,360
both works both on the client and on the

00:06:21,910 --> 00:06:27,670
server so it's some challenges there but

00:06:25,360 --> 00:06:31,000
it's it's anyway the key it does use

00:06:27,670 --> 00:06:33,370
react as a universal view layer and it

00:06:31,000 --> 00:06:35,560
does run as said the same code on the

00:06:33,370 --> 00:06:37,560
server in the client and it's quite

00:06:35,560 --> 00:06:39,810
flexible you can

00:06:37,560 --> 00:06:42,710
modified modified quite a bit but you

00:06:39,810 --> 00:06:46,370
don't need so this is the brief

00:06:42,710 --> 00:06:49,229
introduction to these two technologies

00:06:46,370 --> 00:06:53,400
then to the kind of hands-on demo so I

00:06:49,229 --> 00:06:56,400
built a demo site for well it's not a

00:06:53,400 --> 00:06:58,979
demo site it's real website for the

00:06:56,400 --> 00:07:01,229
largest finished speaking react

00:06:58,979 --> 00:07:05,699
conference in the world called drama

00:07:01,229 --> 00:07:09,090
practice so react Rama 2017 the end

00:07:05,699 --> 00:07:11,069
result is rather straightforward looking

00:07:09,090 --> 00:07:13,169
website I didn't want to get too

00:07:11,069 --> 00:07:16,560
complicated because I wanted to learn

00:07:13,169 --> 00:07:18,689
the basics not get all in but the idea

00:07:16,560 --> 00:07:21,419
here is that there's an API graphic ul

00:07:18,689 --> 00:07:24,210
API and back-end which drives this site

00:07:21,419 --> 00:07:27,210
it technically is a very limited site it

00:07:24,210 --> 00:07:30,990
has the front page and then a navigation

00:07:27,210 --> 00:07:34,319
which works like this so in any case you

00:07:30,990 --> 00:07:38,900
can see now that here the graph QL API

00:07:34,319 --> 00:07:42,509
picks up and if you go to another page

00:07:38,900 --> 00:07:46,020
you can see that it does more queries

00:07:42,509 --> 00:07:49,710
but if I do just look at the source it

00:07:46,020 --> 00:07:53,659
already gives me the source rendered in

00:07:49,710 --> 00:07:58,080
HTML so if I use an alternative browser

00:07:53,659 --> 00:07:59,849
such as links the side actually works

00:07:58,080 --> 00:08:03,089
just as well even without JavaScript

00:07:59,849 --> 00:08:06,180
which is good for SEO and and the first

00:08:03,089 --> 00:08:10,169
load speed so that's kind of the the

00:08:06,180 --> 00:08:13,889
idea of what what I built and how it

00:08:10,169 --> 00:08:17,009
works is the gradual graph QL as I said

00:08:13,889 --> 00:08:20,339
it's an API format or method standard

00:08:17,009 --> 00:08:23,009
more or less if you see something like

00:08:20,339 --> 00:08:26,729
this this is called graphical it's a

00:08:23,009 --> 00:08:28,529
client for the graph QL API the graph QL

00:08:26,729 --> 00:08:30,749
a Pia one of the key things is that it

00:08:28,529 --> 00:08:33,589
it it tells you what the graph what the

00:08:30,749 --> 00:08:36,209
API can do so you get automatic

00:08:33,589 --> 00:08:37,889
documentation which you can view for

00:08:36,209 --> 00:08:41,279
example with this client but any other

00:08:37,889 --> 00:08:43,409
client there's modifications as well so

00:08:41,279 --> 00:08:45,180
mutations is when I want to write but

00:08:43,409 --> 00:08:47,080
when I want to read which is in my case

00:08:45,180 --> 00:08:51,190
I just wanted to read

00:08:47,080 --> 00:08:53,550
I use the query and from this list you

00:08:51,190 --> 00:08:57,580
can see a number of different options

00:08:53,550 --> 00:08:59,550
any time you use a graphical API these

00:08:57,580 --> 00:09:01,870
will obviously be dependent on your

00:08:59,550 --> 00:09:04,690
application domain so in Drupal you may

00:09:01,870 --> 00:09:08,890
have something like views or fields or

00:09:04,690 --> 00:09:12,010
whatever so in any case that's not it

00:09:08,890 --> 00:09:15,400
does it doesn't define this but how it

00:09:12,010 --> 00:09:17,890
works is that what you can do is write

00:09:15,400 --> 00:09:20,410
queries and because we have this kind of

00:09:17,890 --> 00:09:23,080
type information about the API we can

00:09:20,410 --> 00:09:25,690
actually do queries such as location

00:09:23,080 --> 00:09:28,750
children and the API can give me

00:09:25,690 --> 00:09:31,500
information then this what I'm writing

00:09:28,750 --> 00:09:35,110
here this is actually the graph QL

00:09:31,500 --> 00:09:38,500
syntax so I can find a location children

00:09:35,110 --> 00:09:41,290
for number 60 68 and then I always get

00:09:38,500 --> 00:09:42,340
the result in this case what I exactly

00:09:41,290 --> 00:09:44,350
what I asked for

00:09:42,340 --> 00:09:47,440
so if I want let's say I want the

00:09:44,350 --> 00:09:49,090
content for from this API you could see

00:09:47,440 --> 00:09:51,280
that we have a very shallow simple

00:09:49,090 --> 00:09:55,780
content model and then from the content

00:09:51,280 --> 00:09:58,180
I want an a so you can see that opposed

00:09:55,780 --> 00:10:01,630
to creating new rest endpoints it's

00:09:58,180 --> 00:10:06,250
quite straightforward and so on at least

00:10:01,630 --> 00:10:11,620
in the query method you can also alias

00:10:06,250 --> 00:10:13,420
things so menu items and then I say that

00:10:11,620 --> 00:10:15,550
menu items then I get the menu items

00:10:13,420 --> 00:10:18,720
here and so on and I can also perform

00:10:15,550 --> 00:10:21,970
multiple queries so if I just want the

00:10:18,720 --> 00:10:24,310
location one single location which is

00:10:21,970 --> 00:10:26,680
sort of the front page I can do a query

00:10:24,310 --> 00:10:31,600
for that and then obviously I need to

00:10:26,680 --> 00:10:34,720
pass an ID I'll use 68 again and I will

00:10:31,600 --> 00:10:36,940
get results from here and this is then

00:10:34,720 --> 00:10:39,100
when you use graph QL the query language

00:10:36,940 --> 00:10:40,930
this is what it looks like so you will

00:10:39,100 --> 00:10:43,900
make different kind of queries and so on

00:10:40,930 --> 00:10:46,540
and when you think about how you want to

00:10:43,900 --> 00:10:48,460
create decoupled sites so you have

00:10:46,540 --> 00:10:51,370
different queries that you want to use

00:10:48,460 --> 00:10:56,200
and then render views so just to build

00:10:51,370 --> 00:11:01,089
quite a basic website like this

00:10:56,200 --> 00:11:04,149
so the key part here is then if you're

00:11:01,089 --> 00:11:08,050
familiar with react next Jas is very

00:11:04,149 --> 00:11:11,829
very simple to get started with so for

00:11:08,050 --> 00:11:15,970
each page you have a single entry point

00:11:11,829 --> 00:11:19,630
which maps directly to the URL so four

00:11:15,970 --> 00:11:24,279
pages slash about je s so in this case

00:11:19,630 --> 00:11:26,680
if I have something like about here the

00:11:24,279 --> 00:11:30,899
framework will handle that it loads this

00:11:26,680 --> 00:11:34,860
page then it loads my react component so

00:11:30,899 --> 00:11:39,430
this kind of really low barrier to entry

00:11:34,860 --> 00:11:43,360
and then you get already the server-side

00:11:39,430 --> 00:11:46,630
rendered functionality as well as the

00:11:43,360 --> 00:11:50,010
front then taking over so this is really

00:11:46,630 --> 00:11:54,940
really the kind of meat of it is the low

00:11:50,010 --> 00:11:59,470
low barrier to getting started with then

00:11:54,940 --> 00:12:01,449
obviously if you consider like PHP to

00:11:59,470 --> 00:12:03,490
something like this so we had index J s

00:12:01,449 --> 00:12:06,010
or something like that if we want to

00:12:03,490 --> 00:12:09,060
pass parameters so in this case we have

00:12:06,010 --> 00:12:11,709
the single page which is activity 71

00:12:09,060 --> 00:12:14,800
here I wouldn't get caught up in the

00:12:11,709 --> 00:12:17,019
code but we simply need to pass the

00:12:14,800 --> 00:12:19,120
activity and then we get the parameter

00:12:17,019 --> 00:12:22,449
and then we can perform a query to get

00:12:19,120 --> 00:12:25,360
the content for this specific page so in

00:12:22,449 --> 00:12:30,399
this case one single image it's one

00:12:25,360 --> 00:12:35,649
single page where graph you all in this

00:12:30,399 --> 00:12:37,660
sense comes in is that if we think about

00:12:35,649 --> 00:12:40,540
the query language that I typed here

00:12:37,660 --> 00:12:43,000
it's very straightforward I don't need

00:12:40,540 --> 00:12:45,550
to send specific headers or something I

00:12:43,000 --> 00:12:48,130
can just do queries and the result is

00:12:45,550 --> 00:12:51,100
pretty pretty nice or simple to manage

00:12:48,130 --> 00:12:55,300
so the query language is simply written

00:12:51,100 --> 00:12:58,060
in line for example in my index J s what

00:12:55,300 --> 00:13:00,220
I actually do in the backend the code is

00:12:58,060 --> 00:13:03,670
by the way available then for you to see

00:13:00,220 --> 00:13:06,670
how it works but in this single query I

00:13:03,670 --> 00:13:08,620
get first the front page information and

00:13:06,670 --> 00:13:12,790
then I also get the navigation

00:13:08,620 --> 00:13:15,730
information so I can do these in a

00:13:12,790 --> 00:13:18,100
single query which may have been

00:13:15,730 --> 00:13:20,740
something like unorthodox just a few

00:13:18,100 --> 00:13:22,720
years ago to do something which looks

00:13:20,740 --> 00:13:29,370
like this

00:13:22,720 --> 00:13:31,690
let me see so the code for for that

00:13:29,370 --> 00:13:35,560
specific page obviously we have some

00:13:31,690 --> 00:13:38,340
imports in the beginning but this is the

00:13:35,560 --> 00:13:41,140
front page so I perform the query here

00:13:38,340 --> 00:13:43,090
obviously you can you don't now see any

00:13:41,140 --> 00:13:44,590
results but you could technically build

00:13:43,090 --> 00:13:46,120
the query in the tool and then copy

00:13:44,590 --> 00:13:49,060
paste it here

00:13:46,120 --> 00:13:52,500
I do pass one parameter which is my root

00:13:49,060 --> 00:13:55,540
location ID which is 68 which I used and

00:13:52,500 --> 00:13:59,500
then I also get the activities which is

00:13:55,540 --> 00:14:01,420
in this case used for the menu and for

00:13:59,500 --> 00:14:06,310
rendering obviously because this is

00:14:01,420 --> 00:14:10,060
built on react if you like react it's

00:14:06,310 --> 00:14:12,460
very kind of familiar to you so you you

00:14:10,060 --> 00:14:16,810
just have your own types then you output

00:14:12,460 --> 00:14:21,310
the values here and you get you can also

00:14:16,810 --> 00:14:23,200
then create reusable components so in

00:14:21,310 --> 00:14:25,180
the previous talk we talked about tweak

00:14:23,200 --> 00:14:27,940
components but in this case obviously

00:14:25,180 --> 00:14:30,310
then you can have a navigation component

00:14:27,940 --> 00:14:32,980
and then you can reuse that navigation

00:14:30,310 --> 00:14:39,030
component from page to page which is

00:14:32,980 --> 00:14:42,990
sort of something that you can use then

00:14:39,030 --> 00:14:48,280
the yeah this is just the simplified

00:14:42,990 --> 00:14:51,430
view of that template and then the

00:14:48,280 --> 00:14:54,040
navigation JavaScript is also here just

00:14:51,430 --> 00:14:56,170
in line so it's very simple I get the

00:14:54,040 --> 00:14:59,370
items and then they get a title then I

00:14:56,170 --> 00:15:01,840
loop them through and so on so this is

00:14:59,370 --> 00:15:04,720
nothing really has said it's nothing

00:15:01,840 --> 00:15:08,170
exciting in the sense that it's it's

00:15:04,720 --> 00:15:11,620
still it's still essentially the end

00:15:08,170 --> 00:15:16,390
result is a website and you do need to

00:15:11,620 --> 00:15:17,800
to kind of find the use for something

00:15:16,390 --> 00:15:20,589
like this so it was more

00:15:17,800 --> 00:15:23,230
and exercise but I did find in general

00:15:20,589 --> 00:15:25,360
that I was pretty happy with the set up

00:15:23,230 --> 00:15:27,910
it creates something like a single file

00:15:25,360 --> 00:15:30,610
if I go in there I can see the query the

00:15:27,910 --> 00:15:35,519
query is simple to read the templating

00:15:30,610 --> 00:15:39,040
my personal liking is now that actually

00:15:35,519 --> 00:15:41,079
the the react is a really good

00:15:39,040 --> 00:15:42,939
templating language because it forces

00:15:41,079 --> 00:15:45,910
structure it forces you to have

00:15:42,939 --> 00:15:48,600
components within components as opposed

00:15:45,910 --> 00:15:51,819
to something which is just outputting

00:15:48,600 --> 00:15:54,040
JavaScript or sorry HTML so it's good

00:15:51,819 --> 00:15:56,259
another nice thing is that you can

00:15:54,040 --> 00:15:58,299
export so you don't need to run the note

00:15:56,259 --> 00:16:00,429
server which you normally would need to

00:15:58,299 --> 00:16:02,470
run a node server to actually serve this

00:16:00,429 --> 00:16:05,529
information out so you can export just

00:16:02,470 --> 00:16:07,720
static HTML I also found that the

00:16:05,529 --> 00:16:11,350
framework the next GIS framework it is

00:16:07,720 --> 00:16:14,589
flexible enough for me and as opposed to

00:16:11,350 --> 00:16:17,589
sort of front-end only decoupled option

00:16:14,589 --> 00:16:19,379
it's obviously better SEO because you

00:16:17,589 --> 00:16:23,529
get server-side rendered for free

00:16:19,379 --> 00:16:25,629
essentially and it's also then that you

00:16:23,529 --> 00:16:28,269
can build really no compromise you eyes

00:16:25,629 --> 00:16:30,339
if you have rich front and functionality

00:16:28,269 --> 00:16:32,709
well you can use this together with

00:16:30,339 --> 00:16:35,740
anything else that you use we use with

00:16:32,709 --> 00:16:38,139
react and so on so you can you can

00:16:35,740 --> 00:16:41,439
integrate really really well into these

00:16:38,139 --> 00:16:45,639
kind of standard JavaScript current or

00:16:41,439 --> 00:16:48,759
contemporary things so then going

00:16:45,639 --> 00:16:53,259
forward to the bad things so as said I

00:16:48,759 --> 00:16:54,879
said the title was easy decoupled site

00:16:53,259 --> 00:16:57,040
building but if you don't know

00:16:54,879 --> 00:16:59,679
JavaScript or JSS JSX

00:16:57,040 --> 00:17:02,619
or react it's not necessarily very easy

00:16:59,679 --> 00:17:04,899
to begin with but this is a really good

00:17:02,619 --> 00:17:07,419
place to start in my opinion as opposed

00:17:04,899 --> 00:17:09,039
to two years ago you would have spent

00:17:07,419 --> 00:17:11,049
some time trying to figure out how to

00:17:09,039 --> 00:17:14,260
get server-side rendering to work now

00:17:11,049 --> 00:17:16,899
you kind of get that out of the box then

00:17:14,260 --> 00:17:19,179
you do obviously lose CMS capabilities

00:17:16,899 --> 00:17:20,559
so if you build site like this then you

00:17:19,179 --> 00:17:23,020
will need to build some kind of layout

00:17:20,559 --> 00:17:25,659
management system which is not

00:17:23,020 --> 00:17:28,779
necessarily something that will return

00:17:25,659 --> 00:17:30,760
any additional value to to create in

00:17:28,779 --> 00:17:33,260
this kind of a way

00:17:30,760 --> 00:17:35,030
also some simple things are really

00:17:33,260 --> 00:17:36,020
complex so if I wanted to Google

00:17:35,030 --> 00:17:38,540
Analytics

00:17:36,020 --> 00:17:40,520
on a regular site I put the code there

00:17:38,540 --> 00:17:44,570
on the site I navigate from site to site

00:17:40,520 --> 00:17:47,810
it works here you have that same code

00:17:44,570 --> 00:17:50,450
running in the browser and in the server

00:17:47,810 --> 00:17:52,640
and then you have to just take things

00:17:50,450 --> 00:17:56,050
into account this is obviously for for

00:17:52,640 --> 00:17:58,610
every every site like this but sort of

00:17:56,050 --> 00:18:00,560
something which is just interesting

00:17:58,610 --> 00:18:02,420
another thing is obviously the

00:18:00,560 --> 00:18:04,820
development because you're working with

00:18:02,420 --> 00:18:07,760
a rendering system that works both on

00:18:04,820 --> 00:18:09,860
the server side and on your browser

00:18:07,760 --> 00:18:12,500
client there's some things which will

00:18:09,860 --> 00:18:15,650
bite you for example just cores headers

00:18:12,500 --> 00:18:18,260
if you load the site like really on a

00:18:15,650 --> 00:18:20,360
page load the server won't care that you

00:18:18,260 --> 00:18:22,610
have cross-site original headers or not

00:18:20,360 --> 00:18:25,130
it will work but then next time you

00:18:22,610 --> 00:18:26,900
click click from that page then you will

00:18:25,130 --> 00:18:29,750
get an error so I'm sure there's you

00:18:26,900 --> 00:18:31,370
know situations where very simple things

00:18:29,750 --> 00:18:34,600
will become very hard because you

00:18:31,370 --> 00:18:38,120
decided to build it in some fancy way so

00:18:34,600 --> 00:18:40,520
so that's one thing then obviously one

00:18:38,120 --> 00:18:46,250
thing which was current for reactors so

00:18:40,520 --> 00:18:49,160
until recently last week so the for

00:18:46,250 --> 00:18:51,590
react there's no more patent drama at

00:18:49,160 --> 00:18:54,200
least technically in theory but there is

00:18:51,590 --> 00:18:57,140
still some people like to a few D about

00:18:54,200 --> 00:18:58,820
graph graph QL patterns so Facebook has

00:18:57,140 --> 00:19:02,120
some patterns of using something like

00:18:58,820 --> 00:19:03,920
this for social media applications but

00:19:02,120 --> 00:19:07,270
whether that's really a problem to you

00:19:03,920 --> 00:19:11,510
it depends probably not

00:19:07,270 --> 00:19:14,630
then going to kind of the ugly things so

00:19:11,510 --> 00:19:18,140
as I said it's really nice it was a nice

00:19:14,630 --> 00:19:20,600
exercise to do but I'm glad I tried it

00:19:18,140 --> 00:19:22,880
before I tried in in production well

00:19:20,600 --> 00:19:25,250
obviously well the site is in production

00:19:22,880 --> 00:19:27,380
but in any case so they really provide

00:19:25,250 --> 00:19:29,240
any value the initial page load is

00:19:27,380 --> 00:19:31,760
actually bigger because you need to send

00:19:29,240 --> 00:19:34,130
the all the extra JavaScript things so

00:19:31,760 --> 00:19:36,770
the initial page load if you just go to

00:19:34,130 --> 00:19:40,760
one page is actually bigger it doesn't

00:19:36,770 --> 00:19:45,740
give you much advantage and because the

00:19:40,760 --> 00:19:48,320
you're doing caching both on the client

00:19:45,740 --> 00:19:50,930
side and then on the server side I can

00:19:48,320 --> 00:19:53,750
imagine that you will have a world of

00:19:50,930 --> 00:19:57,320
weird things which you never you know

00:19:53,750 --> 00:20:02,450
either you do on site on in browser or

00:19:57,320 --> 00:20:04,940
or then on client or sorry on server

00:20:02,450 --> 00:20:06,620
rendering or on client rendering but

00:20:04,940 --> 00:20:08,750
when you do more both and mix them I'm

00:20:06,620 --> 00:20:12,440
sure you'll get into all kind of

00:20:08,750 --> 00:20:14,210
interesting situations and then yeah

00:20:12,440 --> 00:20:16,690
because if you're running without cache

00:20:14,210 --> 00:20:20,240
then you're actually rendering reacts

00:20:16,690 --> 00:20:23,030
nodes all the time and that's CPU bound

00:20:20,240 --> 00:20:24,680
so you're not just sending out an HTML

00:20:23,030 --> 00:20:27,460
blob you're rendering doing a lot of

00:20:24,680 --> 00:20:30,920
work that could potentially be something

00:20:27,460 --> 00:20:38,330
of a performance bottleneck probably not

00:20:30,920 --> 00:20:40,700
in a low low volume site such as this

00:20:38,330 --> 00:20:42,320
but in general it could be and then

00:20:40,700 --> 00:20:46,190
obviously because I do server-side

00:20:42,320 --> 00:20:48,560
rendering if my first request up to the

00:20:46,190 --> 00:20:50,060
back end is really slow to the API

00:20:48,560 --> 00:20:52,550
because the server is doing it first

00:20:50,060 --> 00:20:54,050
then I don't get anything before that so

00:20:52,550 --> 00:20:56,270
it might be also then that the

00:20:54,050 --> 00:21:02,060
performance is not better it's worse if

00:20:56,270 --> 00:21:04,490
you have something like things and then

00:21:02,060 --> 00:21:07,760
yes the caching especially if you have

00:21:04,490 --> 00:21:09,760
sessions or things I can imagine this

00:21:07,760 --> 00:21:13,460
all kind of interesting things there

00:21:09,760 --> 00:21:16,880
then something which I think before you

00:21:13,460 --> 00:21:18,770
get all kind of intoxicated as I did

00:21:16,880 --> 00:21:21,350
just looking at this query and then

00:21:18,770 --> 00:21:23,240
looking at queries I can make I can nest

00:21:21,350 --> 00:21:25,430
things and you know get all kind of

00:21:23,240 --> 00:21:29,270
things in a single query I think it's

00:21:25,430 --> 00:21:32,330
healthy to remember that all of this

00:21:29,270 --> 00:21:35,120
data is then obviously available also to

00:21:32,330 --> 00:21:37,670
any person walking on the street so if

00:21:35,120 --> 00:21:40,180
you just expose all the endpoints here

00:21:37,670 --> 00:21:43,010
that you can search for users then

00:21:40,180 --> 00:21:45,410
before currently maybe through pool site

00:21:43,010 --> 00:21:47,480
you know the URL to find users but with

00:21:45,410 --> 00:21:49,550
this it will tell you straight out that

00:21:47,480 --> 00:21:51,770
here with my users so what I would

00:21:49,550 --> 00:21:53,460
probably do if you were to build a

00:21:51,770 --> 00:21:56,250
decoupled site

00:21:53,460 --> 00:21:58,559
using broth ql or expose any graphic UL

00:21:56,250 --> 00:22:01,620
endpoint just limit to those that you

00:21:58,559 --> 00:22:05,070
really need not necessarily everything

00:22:01,620 --> 00:22:07,080
such as here i have everything including

00:22:05,070 --> 00:22:10,320
users and probably I wouldn't so you can

00:22:07,080 --> 00:22:14,059
obviously have many graph QL URLs were

00:22:10,320 --> 00:22:16,529
to get information from and then

00:22:14,059 --> 00:22:19,049
obviously because the queries can be

00:22:16,529 --> 00:22:21,510
very complex there's a mechanism that

00:22:19,049 --> 00:22:23,159
allows you to create queries that don't

00:22:21,510 --> 00:22:25,169
overload the server by kind of

00:22:23,159 --> 00:22:27,270
calculating your score how complex is

00:22:25,169 --> 00:22:29,100
the query but I'm sure you can still

00:22:27,270 --> 00:22:31,169
take shortcuts and not calculate and

00:22:29,100 --> 00:22:35,460
then you do a DOS because you can just

00:22:31,169 --> 00:22:37,409
do any kind of a query there and then

00:22:35,460 --> 00:22:43,409
one thing which may not may or may not

00:22:37,409 --> 00:22:45,870
be a very valid concern is just graph QL

00:22:43,409 --> 00:22:47,909
and sequel injections because

00:22:45,870 --> 00:22:50,340
technically I'm writing query here in

00:22:47,909 --> 00:22:52,529
line that I'm I'm not sanitizing this

00:22:50,340 --> 00:22:55,890
parameter but I could technically I

00:22:52,529 --> 00:22:57,240
guess escape this and then just start

00:22:55,890 --> 00:23:00,210
doing something else

00:22:57,240 --> 00:23:01,649
fetching users or whatever obviously

00:23:00,210 --> 00:23:04,080
will always be locked down to the

00:23:01,649 --> 00:23:06,570
specific API user but I'm sure it's

00:23:04,080 --> 00:23:09,390
still something to consider when you

00:23:06,570 --> 00:23:12,630
think about you know that well it's

00:23:09,390 --> 00:23:14,520
really fast to build but then usually

00:23:12,630 --> 00:23:19,620
then there's a downside as well that

00:23:14,520 --> 00:23:22,230
those can be complicated and because

00:23:19,620 --> 00:23:25,799
somebody will will be looking if you

00:23:22,230 --> 00:23:28,350
have a high profile popular site what

00:23:25,799 --> 00:23:32,570
what what does your API actually tell me

00:23:28,350 --> 00:23:38,490
that I can do so somebody will just be

00:23:32,570 --> 00:23:41,429
knocking on the door so first of all you

00:23:38,490 --> 00:23:42,929
have a few minutes left I think we

00:23:41,429 --> 00:23:46,409
managed to get quite a lot of

00:23:42,929 --> 00:23:48,390
information as said if you want to go to

00:23:46,409 --> 00:23:51,480
that website and find the source code

00:23:48,390 --> 00:23:55,049
yeah well you can either find the these

00:23:51,480 --> 00:23:57,750
slides or then if you go to react dot nu

00:23:55,049 --> 00:24:00,960
which is in elvish language which is

00:23:57,750 --> 00:24:03,870
finished you can find on the view source

00:24:00,960 --> 00:24:06,520
and on github you can actually execute

00:24:03,870 --> 00:24:10,390
and see how the whole application

00:24:06,520 --> 00:24:13,120
works and hopefully then learn from

00:24:10,390 --> 00:24:16,480
something what I did and it said this is

00:24:13,120 --> 00:24:22,360
a very simplified example and on purpose

00:24:16,480 --> 00:24:25,140
but as a kind of ending note I think I I

00:24:22,360 --> 00:24:28,450
would build something simple at least

00:24:25,140 --> 00:24:30,790
now and who knows then in a few years

00:24:28,450 --> 00:24:33,610
whether this will be the regular thing

00:24:30,790 --> 00:24:35,140
or whether this will be a curiosity that

00:24:33,610 --> 00:24:38,610
remains to be seen

00:24:35,140 --> 00:24:38,610
so do we have any questions

00:24:45,130 --> 00:24:52,419
good I guess that was too much

00:24:48,460 --> 00:24:55,120
information maybe and then we have a

00:24:52,419 --> 00:24:58,690
contribution sprints on Friday I was

00:24:55,120 --> 00:25:03,010
told to to remind about this and then

00:24:58,690 --> 00:25:05,980
obviously feedback as well so you do use

00:25:03,010 --> 00:25:07,630
the feedback information wherever there

00:25:05,980 --> 00:25:10,720
was too much information too little

00:25:07,630 --> 00:25:16,559
information or my hair wasn't so nice

00:25:10,720 --> 00:25:16,559
anything works good so thank you

00:25:19,620 --> 00:25:23,820

YouTube URL: https://www.youtube.com/watch?v=XcWsa3s8GnE


