Title: DrupalCon Vienna 2017: Break through large scale Drupal projects with Behat
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	In this session, we will go through the basics of behaviour testing with Behat and Mink. We will talk about Drupal Extension and the benefits of using it ...but the most important part of our session will be real examples of successful implementation of these tools in some of our challenging, complex and large scale projects such as Syngenta, Københavns Kommune, LUSH, Pfizer, Dagrofa and etc.

We want to share our experience and give some useful ideas and approaches from problems solved. All the tools and frameworks for automation are working fine, but when we talk about such huge projects all of them become insufficient and there are a lot of customizations you need to do. 

That's why we are focused on finding a specific framework that has component implemented to work exactly with Drupal, open source and easy to extend, and here it comes the Drupal Extension for Behat.
Captions: 
	00:00:00,030 --> 00:00:03,560
and this is not in the program

00:00:14,480 --> 00:00:24,029
okay so I think that we can start so hi

00:00:21,990 --> 00:00:27,240
everyone we're very happy to be here

00:00:24,029 --> 00:00:30,360
as you understood we are like a backup

00:00:27,240 --> 00:00:33,540
but this is a nice chance for us we want

00:00:30,360 --> 00:00:36,030
you we want share our experience with

00:00:33,540 --> 00:00:39,810
you about breaking through our scale do

00:00:36,030 --> 00:00:42,899
projects with the head we use these two

00:00:39,810 --> 00:00:45,899
a lot in our experience and yeah here

00:00:42,899 --> 00:00:48,390
we'll share a couple of our cases and a

00:00:45,899 --> 00:00:50,820
lot of our experience with it we'll try

00:00:48,390 --> 00:00:53,609
to do that so first start with some

00:00:50,820 --> 00:00:56,010
introduction here is me I'm bushi Darbar

00:00:53,609 --> 00:00:58,320
snack-off I'm from Bulgaria working for

00:00:56,010 --> 00:01:00,839
a federal agency currently I'm Aria

00:00:58,320 --> 00:01:04,230
manger in Gabrovo this is a whole

00:01:00,839 --> 00:01:07,320
production unit and also head of QA

00:01:04,230 --> 00:01:09,450
department my responsibilities was to

00:01:07,320 --> 00:01:12,120
guide all the quest through the whole

00:01:09,450 --> 00:01:15,090
project soup one resources and to lead

00:01:12,120 --> 00:01:18,120
every almost every automation activities

00:01:15,090 --> 00:01:19,640
I also have Jorge with me who introduced

00:01:18,120 --> 00:01:26,820
himself

00:01:19,640 --> 00:01:33,660
yeah hi guys ok so my name is Jorge Hoff

00:01:26,820 --> 00:01:37,170
and working in fos focused on

00:01:33,660 --> 00:01:42,960
automations and I have more than three

00:01:37,170 --> 00:01:46,230
years experience I'm responsible for

00:01:42,960 --> 00:01:48,540
most of the automation frameworks that

00:01:46,230 --> 00:01:52,010
are developed in F double booked area

00:01:48,540 --> 00:01:53,820
and the contacts where we can't find us

00:01:52,010 --> 00:01:55,800
so yeah actually

00:01:53,820 --> 00:01:58,610
gurgi took my responsibilities over the

00:01:55,800 --> 00:02:02,070
automation activities and improving the

00:01:58,610 --> 00:02:05,520
our frameworks and so on so yeah

00:02:02,070 --> 00:02:08,009
huhuhuh talk about later for to share

00:02:05,520 --> 00:02:11,370
his experience because he was the main

00:02:08,009 --> 00:02:13,530
QA literally on our biggest project so

00:02:11,370 --> 00:02:15,959
but first of all I want to show you our

00:02:13,530 --> 00:02:19,380
agenda to be informed what we are going

00:02:15,959 --> 00:02:20,880
to speak about I will just start with

00:02:19,380 --> 00:02:21,770
some introduction about behavior driven

00:02:20,880 --> 00:02:24,080
development

00:02:21,770 --> 00:02:26,840
what is behavior joint development what

00:02:24,080 --> 00:02:30,070
is bahut gurken Inc after that I will

00:02:26,840 --> 00:02:32,660
explain you how we execute our tests

00:02:30,070 --> 00:02:34,730
because this very important part

00:02:32,660 --> 00:02:36,770
I was peak after this about the drupal

00:02:34,730 --> 00:02:39,320
extension and actually this is the main

00:02:36,770 --> 00:02:41,300
reason we which was big had because it

00:02:39,320 --> 00:02:43,430
has this very nice drupal extension with

00:02:41,300 --> 00:02:45,110
which helps us a lot and of course we

00:02:43,430 --> 00:02:46,160
are on Drupal con and this is important

00:02:45,110 --> 00:02:49,820
part

00:02:46,160 --> 00:02:51,500
after that we share as I said some of

00:02:49,820 --> 00:02:53,570
our experience about some common issues

00:02:51,500 --> 00:02:56,990
that we have and if you start working

00:02:53,570 --> 00:03:01,280
with it what may be what problems you

00:02:56,990 --> 00:03:04,010
may face in your way to deliver a good

00:03:01,280 --> 00:03:06,080
automation coverage help solve them and

00:03:04,010 --> 00:03:08,510
real rough examples from our project

00:03:06,080 --> 00:03:11,450
what we what we have is a problems and

00:03:08,510 --> 00:03:14,600
how we fix them so but first of all I

00:03:11,450 --> 00:03:17,060
just want to start with some another

00:03:14,600 --> 00:03:18,620
topic which is I want to talk about

00:03:17,060 --> 00:03:20,120
intelligence intelligence why

00:03:18,620 --> 00:03:22,490
intelligence because most of the people

00:03:20,120 --> 00:03:25,250
working in our industry are smart maybe

00:03:22,490 --> 00:03:28,400
all of them are smart but intelligence

00:03:25,250 --> 00:03:31,790
is a liability and why is a liability

00:03:28,400 --> 00:03:33,260
because maybe if you are that smart and

00:03:31,790 --> 00:03:36,560
if you think that you can work without a

00:03:33,260 --> 00:03:39,320
proper process this is a problem smart

00:03:36,560 --> 00:03:41,420
people can make progress they have too

00:03:39,320 --> 00:03:44,270
many stuff in their head they just see

00:03:41,420 --> 00:03:47,180
it right code and they do some things

00:03:44,270 --> 00:03:49,820
maybe if it's a small project or or not

00:03:47,180 --> 00:03:51,500
that small but not a big one they can

00:03:49,820 --> 00:03:54,080
make a good progress and this is a good

00:03:51,500 --> 00:03:56,300
thing but without the process we are not

00:03:54,080 --> 00:03:58,640
able to make a good project good

00:03:56,300 --> 00:04:00,760
projects big project project we to our

00:03:58,640 --> 00:04:04,120
scope and this is not a good thing so

00:04:00,760 --> 00:04:07,280
from what I saw is that many companies

00:04:04,120 --> 00:04:09,200
think that they have good process think

00:04:07,280 --> 00:04:11,360
that they are doing the things in the

00:04:09,200 --> 00:04:13,930
right way but I I faced many many

00:04:11,360 --> 00:04:16,549
problems the Quality Assurance engineer

00:04:13,930 --> 00:04:19,850
what is my job actually to find problems

00:04:16,549 --> 00:04:23,960
and to think about how to fix them and I

00:04:19,850 --> 00:04:26,450
sold it the process is not implemented

00:04:23,960 --> 00:04:28,580
in the right way and many many companies

00:04:26,450 --> 00:04:30,410
are working because they have smart

00:04:28,580 --> 00:04:31,610
developers they have smart engineers and

00:04:30,410 --> 00:04:34,160
they are delivering their projects

00:04:31,610 --> 00:04:35,670
because they have the capacity to do it

00:04:34,160 --> 00:04:38,400
but with the right process

00:04:35,670 --> 00:04:42,630
think they can improve their work much

00:04:38,400 --> 00:04:46,020
much more so professionals first design

00:04:42,630 --> 00:04:47,820
one and prepare this is very important

00:04:46,020 --> 00:04:50,700
and I think this should be always part

00:04:47,820 --> 00:04:52,470
of our work and hear from the QA

00:04:50,700 --> 00:04:54,390
perspective I need to share this with

00:04:52,470 --> 00:04:57,900
you as well because the KU engineers

00:04:54,390 --> 00:05:00,810
also need to design prepare first this

00:04:57,900 --> 00:05:02,610
is this is very important and then do

00:05:00,810 --> 00:05:05,370
the work and this actually produces

00:05:02,610 --> 00:05:08,520
better results and makes it even faster

00:05:05,370 --> 00:05:10,230
and this not all this is not only for

00:05:08,520 --> 00:05:11,880
the developers this is for the whole

00:05:10,230 --> 00:05:14,550
team and this is very important for us

00:05:11,880 --> 00:05:16,320
and when we are talking about the

00:05:14,550 --> 00:05:17,460
process this actually makes the

00:05:16,320 --> 00:05:19,110
difference between the software

00:05:17,460 --> 00:05:21,660
engineering and just programming just

00:05:19,110 --> 00:05:24,840
coding which is for me very important

00:05:21,660 --> 00:05:26,790
and I need to focus on this one so when

00:05:24,840 --> 00:05:28,560
we are talking about processing why

00:05:26,790 --> 00:05:30,600
while I was talking about this and why

00:05:28,560 --> 00:05:32,340
it's important here steps in the

00:05:30,600 --> 00:05:34,890
behavior and development behavior and

00:05:32,340 --> 00:05:37,620
joint development is a matador there are

00:05:34,890 --> 00:05:41,280
many theories what is it

00:05:37,620 --> 00:05:45,510
some people many people actually accept

00:05:41,280 --> 00:05:47,400
it in different ways but it actually it

00:05:45,510 --> 00:05:49,200
could be said like this we character

00:05:47,400 --> 00:05:50,850
development is about implementing

00:05:49,200 --> 00:05:52,350
multiplication by describing its

00:05:50,850 --> 00:05:55,230
behavior from perspective of the

00:05:52,350 --> 00:05:58,380
stakeholders this is a quote I took from

00:05:55,230 --> 00:06:00,570
Dan North which this person is meant to

00:05:58,380 --> 00:06:04,530
be one of the inventors one of the

00:06:00,570 --> 00:06:06,020
founders of this mythology but as I said

00:06:04,530 --> 00:06:08,040
there are many people there are many

00:06:06,020 --> 00:06:11,070
thinking about the behavior doing

00:06:08,040 --> 00:06:12,960
development and there many other quotes

00:06:11,070 --> 00:06:15,690
that I want to share with you maybe a

00:06:12,960 --> 00:06:18,030
better one and easier for me is this one

00:06:15,690 --> 00:06:20,280
behavioral development is when you use

00:06:18,030 --> 00:06:23,760
examples in conversations to illustrate

00:06:20,280 --> 00:06:27,630
behavior this one for me is much more

00:06:23,760 --> 00:06:29,850
simple and actually more true so this is

00:06:27,630 --> 00:06:32,040
about the process this is how we talk

00:06:29,850 --> 00:06:34,350
with our clients how we want to build

00:06:32,040 --> 00:06:37,860
our project and what we do in order to

00:06:34,350 --> 00:06:40,560
achieve a better product and the last

00:06:37,860 --> 00:06:42,900
one that I like the most is that the

00:06:40,560 --> 00:06:45,150
behavior job development is about

00:06:42,900 --> 00:06:47,820
delivering software that matters because

00:06:45,150 --> 00:06:49,009
maybe you saw in you past a lot of

00:06:47,820 --> 00:06:52,999
graphs that

00:06:49,009 --> 00:06:56,210
that actually in our industry very often

00:06:52,999 --> 00:07:00,830
we deliver more and more software that

00:06:56,210 --> 00:07:04,039
is not used at all or it's used not that

00:07:00,830 --> 00:07:06,919
often maybe like 10 or 20 percent of our

00:07:04,039 --> 00:07:08,839
systems at our sites are used very often

00:07:06,919 --> 00:07:10,219
and they are really helpful for the

00:07:08,839 --> 00:07:11,839
clients and they really improve their

00:07:10,219 --> 00:07:14,960
business which is the most important

00:07:11,839 --> 00:07:17,240
thing but most of the features they

00:07:14,960 --> 00:07:20,719
don't use that often or they don't use

00:07:17,240 --> 00:07:22,849
at all which is a huge problem and in

00:07:20,719 --> 00:07:26,479
order to fold this process in order to

00:07:22,849 --> 00:07:28,849
help in this process as a cue engineers

00:07:26,479 --> 00:07:31,430
what we do in order to verify

00:07:28,849 --> 00:07:34,899
application behavior software developers

00:07:31,430 --> 00:07:37,370
to engineer no matter what I need tests

00:07:34,899 --> 00:07:39,409
we prefer automation tests of course

00:07:37,370 --> 00:07:41,899
because many are testing for huge

00:07:39,409 --> 00:07:44,629
projects large-scale projects with big

00:07:41,899 --> 00:07:46,669
timeframe with big team of course manual

00:07:44,629 --> 00:07:50,930
testing is not enough never not never

00:07:46,669 --> 00:07:53,689
enough actually so what we do we first

00:07:50,930 --> 00:07:56,479
of all don't go into the coding don't

00:07:53,689 --> 00:07:58,729
start working on our Commission test

00:07:56,479 --> 00:08:01,879
door start preparing a lot of lines of

00:07:58,729 --> 00:08:03,919
code which are aiming to capture every

00:08:01,879 --> 00:08:06,559
book to report it to the developers and

00:08:03,919 --> 00:08:08,629
to say ok you this is not working you

00:08:06,559 --> 00:08:09,889
need to fix it we found the book we are

00:08:08,629 --> 00:08:12,289
great but this is not the right approach

00:08:09,889 --> 00:08:13,759
and we don't want to do this we are

00:08:12,289 --> 00:08:16,759
start talking and we are start talking

00:08:13,759 --> 00:08:18,559
not with our team because we think that

00:08:16,759 --> 00:08:20,449
we got a good communication with our

00:08:18,559 --> 00:08:21,709
team already established we start

00:08:20,449 --> 00:08:23,569
talking with the business we start

00:08:21,709 --> 00:08:26,330
talking with the clients and how we

00:08:23,569 --> 00:08:28,219
start talking with them using the

00:08:26,330 --> 00:08:31,699
language business can understand because

00:08:28,219 --> 00:08:34,069
I so very often that the business and

00:08:31,699 --> 00:08:38,479
the development are not talking the same

00:08:34,069 --> 00:08:40,250
language actually developers is thinking

00:08:38,479 --> 00:08:42,979
how they can implement something how

00:08:40,250 --> 00:08:45,819
they can realize a functionality with

00:08:42,979 --> 00:08:49,339
their system with Drupal for example and

00:08:45,819 --> 00:08:51,889
how they can make their work easier if

00:08:49,339 --> 00:08:54,380
they say ok that this could not happen

00:08:51,889 --> 00:08:55,760
in this way you should change it but the

00:08:54,380 --> 00:08:58,310
client wants another thing the gwon

00:08:55,760 --> 00:09:01,130
wants his business to be successful the

00:08:58,310 --> 00:09:02,480
client comes with an idea an idea which

00:09:01,130 --> 00:09:04,279
should change his

00:09:02,480 --> 00:09:07,880
should improve his business and somehow

00:09:04,279 --> 00:09:09,829
bring value to all the they're working

00:09:07,880 --> 00:09:12,410
and this misunderstanding in the

00:09:09,829 --> 00:09:15,380
communication is not a small problem and

00:09:12,410 --> 00:09:18,050
we should focus on this one and here

00:09:15,380 --> 00:09:19,430
comes the the QA part where we should

00:09:18,050 --> 00:09:21,230
start talking to the business we should

00:09:19,430 --> 00:09:23,899
start gathering business requirements

00:09:21,230 --> 00:09:26,449
and help the client and the business to

00:09:23,899 --> 00:09:28,120
speak more easier with the developers

00:09:26,449 --> 00:09:29,949
and the team that we are working with

00:09:28,120 --> 00:09:33,199
how we do this

00:09:29,949 --> 00:09:35,959
we do this with one language called

00:09:33,199 --> 00:09:38,060
gherkin gherkin is business or business

00:09:35,959 --> 00:09:40,730
readable language domain specific create

00:09:38,060 --> 00:09:44,269
special behavior description gives the

00:09:40,730 --> 00:09:48,589
ability to remove the logic details from

00:09:44,269 --> 00:09:51,170
the behavior test so what we need here

00:09:48,589 --> 00:09:54,440
we need a language that describes what

00:09:51,170 --> 00:09:57,260
have to be done but without that coding

00:09:54,440 --> 00:10:01,339
specific that details that could make

00:09:57,260 --> 00:10:03,260
our wife harder so working has a

00:10:01,339 --> 00:10:05,120
specific syntaxes as I said human

00:10:03,260 --> 00:10:06,910
readable business language which is

00:10:05,120 --> 00:10:10,519
really nice which the quant

00:10:06,910 --> 00:10:13,190
sometimes partially accepts but after

00:10:10,519 --> 00:10:15,709
after we show what are the benefits I

00:10:13,190 --> 00:10:17,930
think that every our client accepted

00:10:15,709 --> 00:10:19,880
that a language and our tests and they

00:10:17,930 --> 00:10:21,680
are using them they are learning from

00:10:19,880 --> 00:10:24,760
them and they are extending them even

00:10:21,680 --> 00:10:28,459
which is really nice in future and so

00:10:24,760 --> 00:10:31,040
here I give you one very very simple

00:10:28,459 --> 00:10:33,980
example which I really like I saw in

00:10:31,040 --> 00:10:36,680
another presentation describing actually

00:10:33,980 --> 00:10:40,010
the gherkin syntaxes and it's really

00:10:36,680 --> 00:10:41,810
that simple as you can see like we have

00:10:40,010 --> 00:10:44,720
one feature run functionality which is

00:10:41,810 --> 00:10:47,300
like banana calculator and we have Bob

00:10:44,720 --> 00:10:49,699
the banana merchant and as Bob Diamond

00:10:47,300 --> 00:10:52,100
on abortion I want a calculator they can

00:10:49,699 --> 00:10:54,680
add one ass so that I know how many

00:10:52,100 --> 00:10:57,290
bananas I currently have and this is you

00:10:54,680 --> 00:10:59,690
as you may see is like user story user

00:10:57,290 --> 00:11:02,540
story in the Java methodology and it is

00:10:59,690 --> 00:11:04,519
described in the test actually we took

00:11:02,540 --> 00:11:06,529
the description of the user story and we

00:11:04,519 --> 00:11:09,139
move it to the test and after that we

00:11:06,529 --> 00:11:11,630
just create scenarios to test is it

00:11:09,139 --> 00:11:14,040
working or not and like this adding

00:11:11,630 --> 00:11:18,209
bananas to increase among eye

00:11:14,040 --> 00:11:20,220
if for example we have given I have two

00:11:18,209 --> 00:11:21,690
bananas when I had five on us then I

00:11:20,220 --> 00:11:24,269
should have it on us

00:11:21,690 --> 00:11:26,130
and actually it is simple as that if you

00:11:24,269 --> 00:11:26,850
have it in the Drupal world - it is

00:11:26,130 --> 00:11:29,579
simple as that

00:11:26,850 --> 00:11:32,399
I want to buy some product in our rep

00:11:29,579 --> 00:11:35,130
store as a customer I walk into the

00:11:32,399 --> 00:11:37,259
system and I need to be able to add

00:11:35,130 --> 00:11:38,880
product to the basket and you can write

00:11:37,259 --> 00:11:39,569
it in this way you can write it in this

00:11:38,880 --> 00:11:41,399
business

00:11:39,569 --> 00:11:45,180
readable language you need to work

00:11:41,399 --> 00:11:47,579
because behind this stands actually a

00:11:45,180 --> 00:11:50,910
code which is helping us to implement it

00:11:47,579 --> 00:11:54,209
code based on one framework that we are

00:11:50,910 --> 00:11:56,430
working on and we are working with this

00:11:54,209 --> 00:11:58,410
is the big head and this is where the

00:11:56,430 --> 00:12:01,470
head and min come in actually the tools

00:11:58,410 --> 00:12:04,380
that we were going to present today to

00:12:01,470 --> 00:12:08,370
you we are using them and I think that

00:12:04,380 --> 00:12:10,920
they helped us a lot in in this mission

00:12:08,370 --> 00:12:14,130
to actually establish a better process

00:12:10,920 --> 00:12:18,389
to be part of the whole project and to

00:12:14,130 --> 00:12:20,130
improve like I can say every part of it

00:12:18,389 --> 00:12:22,079
because the communication is everything

00:12:20,130 --> 00:12:24,060
and when the communication is good and

00:12:22,079 --> 00:12:26,130
the process is good everything is good

00:12:24,060 --> 00:12:29,000
so this is where bahattin will come in

00:12:26,130 --> 00:12:34,589
what is B hat B hat is an open-source

00:12:29,000 --> 00:12:37,110
framework based on PHP of course and we

00:12:34,589 --> 00:12:39,959
had helps us to automate and to make

00:12:37,110 --> 00:12:43,579
these tests is used so under gherkin

00:12:39,959 --> 00:12:46,560
syntax to be like living their

00:12:43,579 --> 00:12:48,149
executable they are working with this

00:12:46,560 --> 00:12:51,260
language and they are actually doing

00:12:48,149 --> 00:12:53,670
what what is described in the text so

00:12:51,260 --> 00:12:55,199
another thing coming and I think is

00:12:53,670 --> 00:12:58,050
being because mint is very important

00:12:55,199 --> 00:12:59,970
because mink is providing us the way to

00:12:58,050 --> 00:13:04,410
control the browser because we know that

00:12:59,970 --> 00:13:07,439
our actually our test if the you want to

00:13:04,410 --> 00:13:10,290
be automated we want to make them from

00:13:07,439 --> 00:13:11,910
the client perspective from the customer

00:13:10,290 --> 00:13:13,680
perspective what the clients are going

00:13:11,910 --> 00:13:16,589
to do or what the visitors are going to

00:13:13,680 --> 00:13:19,829
do and this is the best way to test the

00:13:16,589 --> 00:13:21,449
system I know that there is an other

00:13:19,829 --> 00:13:23,370
tests they are unit test integration

00:13:21,449 --> 00:13:25,019
tests they are really nice and they are

00:13:23,370 --> 00:13:26,170
careful they are helpful for our

00:13:25,019 --> 00:13:28,180
developers

00:13:26,170 --> 00:13:30,490
first of all but they are not visible

00:13:28,180 --> 00:13:34,810
for the clients they are not helping

00:13:30,490 --> 00:13:39,310
this to see is the user experience good

00:13:34,810 --> 00:13:42,160
is the loading time good for example or

00:13:39,310 --> 00:13:45,520
so so on how many steps are needed in

00:13:42,160 --> 00:13:47,560
order to buy a product for example these

00:13:45,520 --> 00:13:51,700
unit tests and integration tests don't

00:13:47,560 --> 00:13:54,400
show this to us and here we need one

00:13:51,700 --> 00:13:56,200
framework one system one - which can

00:13:54,400 --> 00:13:59,350
give us the ability to test the behavior

00:13:56,200 --> 00:14:02,770
of the system and mink is the one that

00:13:59,350 --> 00:14:05,590
is controlling our browser allowing us

00:14:02,770 --> 00:14:08,200
to traverse the pages manipulate pages

00:14:05,590 --> 00:14:10,810
elements or interact with them this is

00:14:08,200 --> 00:14:13,450
what what means gives us actually and

00:14:10,810 --> 00:14:15,790
here we come on the execution part how

00:14:13,450 --> 00:14:17,440
we execute our tests because I said that

00:14:15,790 --> 00:14:19,780
we are using the big head framework

00:14:17,440 --> 00:14:23,110
which is PHP based and of course we

00:14:19,780 --> 00:14:26,080
choose it because Drupal is PHP based on

00:14:23,110 --> 00:14:28,540
true poet symphony already but ok our

00:14:26,080 --> 00:14:30,700
developers helped us at the beginning

00:14:28,540 --> 00:14:34,390
because I know that in many companies

00:14:30,700 --> 00:14:36,940
the case are no not that good as

00:14:34,390 --> 00:14:38,830
developers sometimes but I think that

00:14:36,940 --> 00:14:41,920
this is the future and every anyway

00:14:38,830 --> 00:14:43,480
should be at least 1/2 developer so at

00:14:41,920 --> 00:14:45,730
the beginning they helped us which is

00:14:43,480 --> 00:14:47,590
which is really loose for us and we

00:14:45,730 --> 00:14:50,250
managed to actually really implement

00:14:47,590 --> 00:14:54,670
this so about the execution

00:14:50,250 --> 00:14:56,650
how execute them they are like say two

00:14:54,670 --> 00:14:58,480
different ways of execution the first

00:14:56,650 --> 00:14:59,950
one is headless browser in waters and

00:14:58,480 --> 00:15:01,840
the second one is browser controllers

00:14:59,950 --> 00:15:04,420
and what is the difference the first

00:15:01,840 --> 00:15:08,800
headless browser mater and when we want

00:15:04,420 --> 00:15:11,260
to send HTTP requests and to parse the

00:15:08,800 --> 00:15:13,060
response of it and to work with with

00:15:11,260 --> 00:15:16,150
this response but as you can imagine

00:15:13,060 --> 00:15:21,040
this is this way we can't test any

00:15:16,150 --> 00:15:23,890
JavaScript or Ajax calls we can work

00:15:21,040 --> 00:15:27,700
with the system in in full capacity

00:15:23,890 --> 00:15:29,350
exceeded like this so for short tests

00:15:27,700 --> 00:15:30,610
that we want to say some to test

00:15:29,350 --> 00:15:32,800
something which is not including

00:15:30,610 --> 00:15:35,530
JavaScript this is good we are using it

00:15:32,800 --> 00:15:36,760
of course because it's a lot faster and

00:15:35,530 --> 00:15:38,950
it's not generating

00:15:36,760 --> 00:15:40,870
generating courier browser it's just

00:15:38,950 --> 00:15:44,590
King HTTP requests and passed the

00:15:40,870 --> 00:15:50,440
response we didn't work with it and the

00:15:44,590 --> 00:15:52,380
other one is much much slow but on the

00:15:50,440 --> 00:15:55,960
other hand we have a real browser

00:15:52,380 --> 00:15:58,930
simulation we have we need an installed

00:15:55,960 --> 00:16:01,680
browser of course to run it which is a

00:15:58,930 --> 00:16:04,030
little bit hard when we want to execute

00:16:01,680 --> 00:16:06,940
some tests on an environment which is

00:16:04,030 --> 00:16:09,490
not having browser there but some

00:16:06,940 --> 00:16:11,110
somehow we managed to convince the

00:16:09,490 --> 00:16:13,780
grants in the developers to have this

00:16:11,110 --> 00:16:16,030
also set up in the projects and to work

00:16:13,780 --> 00:16:18,520
with the tests also and to make them use

00:16:16,030 --> 00:16:20,530
them to not only the quays on every

00:16:18,520 --> 00:16:22,120
deploy on every change they make they

00:16:20,530 --> 00:16:25,210
are using our tests to verify they

00:16:22,120 --> 00:16:27,430
didn't did they didn't break anything

00:16:25,210 --> 00:16:30,220
order in the previous sprints for

00:16:27,430 --> 00:16:33,040
example in like in the last two months

00:16:30,220 --> 00:16:35,020
because some projects are not for one

00:16:33,040 --> 00:16:38,800
month as you know and especially in our

00:16:35,020 --> 00:16:41,590
company we have such so the other thing

00:16:38,800 --> 00:16:44,890
as I said allows us to test the site as

00:16:41,590 --> 00:16:48,340
it is with all the JavaScript Ajax

00:16:44,890 --> 00:16:50,200
things and actually allows us to be like

00:16:48,340 --> 00:16:52,060
a visitor on the site or administrator

00:16:50,200 --> 00:16:53,590
and to click on every link at every

00:16:52,060 --> 00:16:56,230
button and to see what happens and to

00:16:53,590 --> 00:16:59,440
see how much time do we need and to see

00:16:56,230 --> 00:17:04,030
how the directions are happening in real

00:16:59,440 --> 00:17:08,320
life on the website so what do you use

00:17:04,030 --> 00:17:11,140
to to execute these these tests the

00:17:08,320 --> 00:17:13,030
first one is good only for pure HTTP

00:17:11,140 --> 00:17:15,070
requests against an application which

00:17:13,030 --> 00:17:16,870
pass the response that I set and returns

00:17:15,070 --> 00:17:19,750
the content and work with it

00:17:16,870 --> 00:17:21,520
this driver actually is not supporting

00:17:19,750 --> 00:17:24,280
browsers not supporting JavaScript but

00:17:21,520 --> 00:17:26,050
it's a lot faster as I said on the other

00:17:24,280 --> 00:17:27,010
hand what we are using peer using

00:17:26,050 --> 00:17:29,320
selenium webdriver

00:17:27,010 --> 00:17:31,150
which is actually controlling the the

00:17:29,320 --> 00:17:33,160
browser actually the sessions cookies

00:17:31,150 --> 00:17:35,530
headers management HT authentication

00:17:33,160 --> 00:17:37,540
traverse the page selectors and Molli

00:17:35,530 --> 00:17:41,400
manipulate the page actually the

00:17:37,540 --> 00:17:45,970
selenium webdriver supports a whole

00:17:41,400 --> 00:17:49,000
browser which is analysis to iterate

00:17:45,970 --> 00:17:50,560
with all elements we see and another

00:17:49,000 --> 00:17:52,750
thing that we are using which is really

00:17:50,560 --> 00:17:54,810
nice and I think very useful because

00:17:52,750 --> 00:17:56,950
time's the the service that we have and

00:17:54,810 --> 00:17:59,650
taste that we have are on those servers

00:17:56,950 --> 00:18:02,380
which don't have graphical interface and

00:17:59,650 --> 00:18:04,960
we are not able to run exactly like a

00:18:02,380 --> 00:18:09,550
white browser and we are not able to see

00:18:04,960 --> 00:18:11,230
it or any way something like this some

00:18:09,550 --> 00:18:13,690
problem like this one so we are using

00:18:11,230 --> 00:18:16,870
phantom GS phantom GS is a very

00:18:13,690 --> 00:18:19,630
interesting technology that is growing I

00:18:16,870 --> 00:18:21,310
think and and it is very useful for us

00:18:19,630 --> 00:18:23,560
phantom GS it's a headless webkit

00:18:21,310 --> 00:18:29,170
scriptable with the javascript api

00:18:23,560 --> 00:18:31,570
it has a fast and need to support for

00:18:29,170 --> 00:18:34,240
various web standards and also allows us

00:18:31,570 --> 00:18:37,660
to work with the dom elements with the

00:18:34,240 --> 00:18:41,680
CSS selectors javascript and all other

00:18:37,660 --> 00:18:44,800
libraries and actually what phantom GS

00:18:41,680 --> 00:18:47,290
do is to create us a headless browser in

00:18:44,800 --> 00:18:50,320
water actually we don't have real

00:18:47,290 --> 00:18:53,440
browser running but it works like we

00:18:50,320 --> 00:18:55,630
have it and actually it's a lot faster

00:18:53,440 --> 00:18:57,850
and with to achieve what we want to

00:18:55,630 --> 00:19:00,340
achieve and most of the companies they

00:18:57,850 --> 00:19:03,580
are using the selenium webdriver from my

00:19:00,340 --> 00:19:06,220
experience I also used it a lot of years

00:19:03,580 --> 00:19:08,170
before I found this one and before I

00:19:06,220 --> 00:19:11,590
start using it and now it is working

00:19:08,170 --> 00:19:13,420
better and better just one note here for

00:19:11,590 --> 00:19:16,300
selenium webdriver if you are using the

00:19:13,420 --> 00:19:18,700
chrome driver from the latest versions

00:19:16,300 --> 00:19:22,270
of Chrome now the chrome allows this

00:19:18,700 --> 00:19:25,180
also this headless execution which is

00:19:22,270 --> 00:19:30,220
really nice but yeah phantom J's is the

00:19:25,180 --> 00:19:32,470
one I recommend here so on the

00:19:30,220 --> 00:19:36,130
interesting part and actually why we

00:19:32,470 --> 00:19:37,990
choose B hat because it has a really

00:19:36,130 --> 00:19:41,200
nice integration and a really nice

00:19:37,990 --> 00:19:43,270
extension the drupal extension of course

00:19:41,200 --> 00:19:44,920
we are all working with Drupal and if we

00:19:43,270 --> 00:19:47,740
have something that could help us in our

00:19:44,920 --> 00:19:50,050
work and help us to not start from the

00:19:47,740 --> 00:19:52,680
beginning what we are usually - if we

00:19:50,050 --> 00:19:55,270
want to work on some automation package

00:19:52,680 --> 00:19:57,220
we choose this one because the drupal

00:19:55,270 --> 00:19:59,170
extension is very strong and actually

00:19:57,220 --> 00:20:00,640
what the drupal extension gives us the

00:19:59,170 --> 00:20:02,679
drupal extension gives us a lot of

00:20:00,640 --> 00:20:05,990
things the drupal extension gives us

00:20:02,679 --> 00:20:08,450
work with jorge work with the Java API

00:20:05,990 --> 00:20:11,120
work with regions no types user Ross

00:20:08,450 --> 00:20:13,040
taxonomies and a lot of a lot of

00:20:11,120 --> 00:20:15,230
elements and a lot of functionality

00:20:13,040 --> 00:20:16,850
specifically related to Drupal they are

00:20:15,230 --> 00:20:20,090
already written this is like a rubber

00:20:16,850 --> 00:20:22,070
library we just extend the big head

00:20:20,090 --> 00:20:24,470
framework with this drupal extinction we

00:20:22,070 --> 00:20:27,200
got already written functions what

00:20:24,470 --> 00:20:30,110
Drupal means to clear cache for example

00:20:27,200 --> 00:20:32,300
what - what means to create an not from

00:20:30,110 --> 00:20:34,040
article content type what means to

00:20:32,300 --> 00:20:37,130
create an user what means to be out

00:20:34,040 --> 00:20:38,690
indicated or not and stuff like this

00:20:37,130 --> 00:20:41,300
I'll show you some examples after this

00:20:38,690 --> 00:20:43,340
but actually the drupal extension gives

00:20:41,300 --> 00:20:46,820
us a lot gives us a lot if you want in

00:20:43,340 --> 00:20:50,630
order to to work with with big head and

00:20:46,820 --> 00:20:53,450
with trupo of course so here are some

00:20:50,630 --> 00:20:55,190
some examples we can easily with that

00:20:53,450 --> 00:20:58,040
extension we can easily define some

00:20:55,190 --> 00:21:00,290
regions and to to create tests like this

00:20:58,040 --> 00:21:04,700
you saw the the banana merchant book but

00:21:00,290 --> 00:21:07,430
this is a for example real cases when

00:21:04,700 --> 00:21:09,470
for example I press a button in the

00:21:07,430 --> 00:21:12,320
header region and it's simple as that

00:21:09,470 --> 00:21:14,510
just mark the scheduled regions other

00:21:12,320 --> 00:21:17,210
CSS selector in the configuration in

00:21:14,510 --> 00:21:19,670
it's working and after I press the

00:21:17,210 --> 00:21:23,120
button and I feel some fields I can for

00:21:19,670 --> 00:21:26,120
links I can see error messages and the

00:21:23,120 --> 00:21:27,920
Drupal extension gives us that that the

00:21:26,120 --> 00:21:31,520
system understand now what is error

00:21:27,920 --> 00:21:33,920
message in Drupal what is for example

00:21:31,520 --> 00:21:37,070
region in Drupal and this is really

00:21:33,920 --> 00:21:39,890
really useful also it works for notes as

00:21:37,070 --> 00:21:41,900
I mentioned you can say given a content

00:21:39,890 --> 00:21:45,680
type and I want to create following

00:21:41,900 --> 00:21:47,450
notes with their ID with the IDS of

00:21:45,680 --> 00:21:50,120
their fields for example title body

00:21:47,450 --> 00:21:52,820
order or whatever you want and in this

00:21:50,120 --> 00:21:55,340
easy easy steps we can actually generate

00:21:52,820 --> 00:21:57,590
content on our site we all know that

00:21:55,340 --> 00:22:00,530
it's important if we want to use our

00:21:57,590 --> 00:22:02,270
test in the air big ones we need to

00:22:00,530 --> 00:22:03,890
clear everything we've created at the

00:22:02,270 --> 00:22:07,430
beginning this is important to mention

00:22:03,890 --> 00:22:11,090
because we aim to not leave any dummy

00:22:07,430 --> 00:22:14,950
content after us which is which which

00:22:11,090 --> 00:22:18,269
could be problem just like an advice and

00:22:14,950 --> 00:22:21,899
of course users rose and

00:22:18,269 --> 00:22:25,259
tsunamis of again the Drupal station

00:22:21,899 --> 00:22:27,059
gives the behat ability to understand

00:22:25,259 --> 00:22:29,309
what our roles in Drupal water-taxi

00:22:27,059 --> 00:22:33,089
means and how to create them easily so

00:22:29,309 --> 00:22:35,519
yeah these are the steps and from here

00:22:33,089 --> 00:22:36,899
after my introduction we can move to the

00:22:35,519 --> 00:22:39,169
more interesting part of the

00:22:36,899 --> 00:22:42,299
presentation actually what are our

00:22:39,169 --> 00:22:44,609
examples and how we actually worked with

00:22:42,299 --> 00:22:46,289
we had what problems we faced because I

00:22:44,609 --> 00:22:47,969
know that there are a lot of automation

00:22:46,289 --> 00:22:50,309
tools I looked and I know that there are

00:22:47,969 --> 00:22:53,639
a lot of frameworks and you may be hurt

00:22:50,309 --> 00:22:56,940
for all of them but when we get into the

00:22:53,639 --> 00:23:00,450
action it's really really hard to

00:22:56,940 --> 00:23:02,669
automate a huge project with only this

00:23:00,450 --> 00:23:05,159
one we'd only be had with Tory drupal

00:23:02,669 --> 00:23:07,799
extension with me they give us a lot but

00:23:05,159 --> 00:23:11,429
when we talk in details when we talk in

00:23:07,799 --> 00:23:15,119
projects this is this is not not enough

00:23:11,429 --> 00:23:17,339
and here my colleague George will show

00:23:15,119 --> 00:23:20,429
you some of our experience some of our

00:23:17,339 --> 00:23:28,229
projects and what we did and yeah this

00:23:20,429 --> 00:23:30,570
is for me so okay so after this very

00:23:28,229 --> 00:23:33,979
nice introduction to the basics and how

00:23:30,570 --> 00:23:36,749
we are using and implementing b-hat in

00:23:33,979 --> 00:23:40,349
our company I would like to continue

00:23:36,749 --> 00:23:43,079
with some real case scenarios how we did

00:23:40,349 --> 00:23:46,499
it in our projects what issues we faced

00:23:43,079 --> 00:23:50,519
how we managed to fix them stuff like

00:23:46,499 --> 00:23:52,979
that so of course we all have problems

00:23:50,519 --> 00:23:55,820
and we all face them first of all I

00:23:52,979 --> 00:23:58,079
would like to ask you do we have

00:23:55,820 --> 00:24:03,209
engineers in the room actually

00:23:58,079 --> 00:24:06,869
yeah ok nice and you write automation

00:24:03,209 --> 00:24:11,159
test I guess yeah perfect so you're

00:24:06,869 --> 00:24:13,649
familiar with our pin first of all I

00:24:11,159 --> 00:24:20,129
would like to guess what

00:24:13,649 --> 00:24:23,820
problems and issues we face our daily

00:24:20,129 --> 00:24:26,600
work and first in the one that irritates

00:24:23,820 --> 00:24:30,140
most is the badly written hmm

00:24:26,600 --> 00:24:34,150
Caputo it's due to the fact that a lot

00:24:30,140 --> 00:24:37,850
of developers let's say sometimes miss

00:24:34,150 --> 00:24:41,480
CSS selectors that don't put ideas on

00:24:37,850 --> 00:24:44,809
inputs or something like that other

00:24:41,480 --> 00:24:47,330
thing we have is that the tests are

00:24:44,809 --> 00:24:50,240
being executed on developer environment

00:24:47,330 --> 00:24:52,760
it's a perfect case scenario to have a

00:24:50,240 --> 00:24:56,330
dedicated environment where you can run

00:24:52,760 --> 00:24:59,929
your tests or have a site which is built

00:24:56,330 --> 00:25:02,390
for each built and you run the tests on

00:24:59,929 --> 00:25:04,070
it and due to the fact that we have

00:25:02,390 --> 00:25:07,909
continuous development on the

00:25:04,070 --> 00:25:09,799
environment we have a lot of things

00:25:07,909 --> 00:25:13,820
changing in the functionalities which

00:25:09,799 --> 00:25:16,039
can cause us this failure and starting

00:25:13,820 --> 00:25:18,320
from them debugging a test failure due

00:25:16,039 --> 00:25:20,960
to newly introduced code is a really

00:25:18,320 --> 00:25:23,830
hard thing to do and most of the time we

00:25:20,960 --> 00:25:26,570
have issues with that other thing is

00:25:23,830 --> 00:25:29,990
performance when you have a worse skill

00:25:26,570 --> 00:25:33,650
project as we mainly do in our company

00:25:29,990 --> 00:25:35,600
you start creating automation framework

00:25:33,650 --> 00:25:38,059
you just start with a couple of features

00:25:35,600 --> 00:25:42,860
then you add more and add more and add

00:25:38,059 --> 00:25:44,990
more and eventually in time you get a

00:25:42,860 --> 00:25:46,000
built which is running for more than two

00:25:44,990 --> 00:25:49,159
hours

00:25:46,000 --> 00:25:52,280
because of the test and they're really

00:25:49,159 --> 00:25:54,289
huge and that's actually stopping the

00:25:52,280 --> 00:25:56,570
whole development process because code

00:25:54,289 --> 00:25:58,429
can be deployed to development

00:25:56,570 --> 00:26:02,240
environment let's say or staging or

00:25:58,429 --> 00:26:06,620
production whatever so here that's

00:26:02,240 --> 00:26:08,929
another issue and we have dealing with

00:26:06,620 --> 00:26:11,720
third parties that's the same thing we

00:26:08,929 --> 00:26:15,590
faced about in our project and its

00:26:11,720 --> 00:26:17,929
really irritating to try to automate

00:26:15,590 --> 00:26:21,230
something that you don't have control of

00:26:17,929 --> 00:26:23,750
because in the case of missing IDs or

00:26:21,230 --> 00:26:26,539
bad markup you just can say to the

00:26:23,750 --> 00:26:29,179
developer hey I need this ID here so

00:26:26,539 --> 00:26:30,830
this the process is really fast but when

00:26:29,179 --> 00:26:34,419
you have a third party which you don't

00:26:30,830 --> 00:26:38,970
have control on you just can do nothing

00:26:34,419 --> 00:26:43,980
and of course a lot more issues that can

00:26:38,970 --> 00:26:46,890
bring us on daily basis but from the

00:26:43,980 --> 00:26:50,070
previous side slide we weren't a lot of

00:26:46,890 --> 00:26:53,940
lessons facing code these issues we have

00:26:50,070 --> 00:26:55,890
course tried to solve them because you

00:26:53,940 --> 00:26:59,390
can proceed with your work if you don't

00:26:55,890 --> 00:27:02,300
solve all the issues listed before and

00:26:59,390 --> 00:27:06,510
for me and for my team I think the most

00:27:02,300 --> 00:27:08,790
important thing is to keep really good

00:27:06,510 --> 00:27:11,070
communication with your development team

00:27:08,790 --> 00:27:13,500
like I said already you can go to them

00:27:11,070 --> 00:27:16,380
and say hey I have a problem here can

00:27:13,500 --> 00:27:18,720
you help me or like Buder said that you

00:27:16,380 --> 00:27:22,020
can they can help you with setup for

00:27:18,720 --> 00:27:24,750
environments for b-hat overall and stuff

00:27:22,020 --> 00:27:26,550
like that and of course they can make

00:27:24,750 --> 00:27:29,150
really small changes to the

00:27:26,550 --> 00:27:31,740
functionalities let's say if you want to

00:27:29,150 --> 00:27:34,050
let's say register on our website which

00:27:31,740 --> 00:27:37,590
have one time login link

00:27:34,050 --> 00:27:39,990
that's a send to email and if you want

00:27:37,590 --> 00:27:44,670
to do that you need to go to email

00:27:39,990 --> 00:27:46,590
client catch the link go to the website

00:27:44,670 --> 00:27:48,840
with that link bah-bah-bah but the

00:27:46,590 --> 00:27:51,150
fastest thing is developer can expose

00:27:48,840 --> 00:27:53,400
that link on a webpage which is

00:27:51,150 --> 00:27:55,950
specifically let's say develop for

00:27:53,400 --> 00:28:00,660
automations which was the case in one of

00:27:55,950 --> 00:28:02,880
our projects I'll show later and yeah

00:28:00,660 --> 00:28:05,130
keeping the connection in being really

00:28:02,880 --> 00:28:10,920
close to the development Inc is the is

00:28:05,130 --> 00:28:12,960
the most important part I think the

00:28:10,920 --> 00:28:15,870
perfect thing to have is a dedicated

00:28:12,960 --> 00:28:17,850
environment for tests that happened

00:28:15,870 --> 00:28:23,850
couple of times in our campaign we are

00:28:17,850 --> 00:28:27,270
trying to do it like a must but it's so

00:28:23,850 --> 00:28:29,610
far it's that's not the case but we have

00:28:27,270 --> 00:28:33,330
it and it's really nice thing because

00:28:29,610 --> 00:28:35,730
when you say you do a deploy from the -

00:28:33,330 --> 00:28:38,280
development environment first you do a

00:28:35,730 --> 00:28:41,250
deploy to the testing environment you

00:28:38,280 --> 00:28:43,320
run all your tests there if everything

00:28:41,250 --> 00:28:45,600
passed everything is green we can

00:28:43,320 --> 00:28:47,760
proceed and deploy this code to the

00:28:45,600 --> 00:28:48,920
development environment saying that we

00:28:47,760 --> 00:28:51,380
have

00:28:48,920 --> 00:28:54,560
really strong book free development

00:28:51,380 --> 00:29:00,080
environment which can be lets say the

00:28:54,560 --> 00:29:02,690
poet on stage and production easily and

00:29:00,080 --> 00:29:05,540
the last thing that I mentioned is that

00:29:02,690 --> 00:29:10,190
we need to separate the suits

00:29:05,540 --> 00:29:12,880
I mean suits those are the big packs of

00:29:10,190 --> 00:29:16,490
automation tests that are specific for

00:29:12,880 --> 00:29:20,930
different functionality and what we did

00:29:16,490 --> 00:29:23,150
is we separate the tests based on how

00:29:20,930 --> 00:29:25,730
important they are for instance we have

00:29:23,150 --> 00:29:28,160
one small package which is based on the

00:29:25,730 --> 00:29:30,920
really business-critical functionalities

00:29:28,160 --> 00:29:33,080
and we run that on each build in running

00:29:30,920 --> 00:29:35,300
that on each build allow us to verify

00:29:33,080 --> 00:29:37,430
that for instance if you are selling

00:29:35,300 --> 00:29:40,640
some products you still can buy a

00:29:37,430 --> 00:29:43,910
product the this product for is not

00:29:40,640 --> 00:29:46,340
broken other thing that we do is nightly

00:29:43,910 --> 00:29:50,420
builds nightly boobs and nightly

00:29:46,340 --> 00:29:53,090
automation runs which they cover a lot

00:29:50,420 --> 00:29:58,370
about more of the functionalities of the

00:29:53,090 --> 00:30:01,760
website and yeah this thing can help you

00:29:58,370 --> 00:30:04,970
firstly giving you better like a

00:30:01,760 --> 00:30:07,940
stronger environment and also giving you

00:30:04,970 --> 00:30:10,310
faster builds because all the times you

00:30:07,940 --> 00:30:12,590
are pushed let's say from project manger

00:30:10,310 --> 00:30:15,200
or from clients I want to see this part

00:30:12,590 --> 00:30:17,480
of the code in production I want to see

00:30:15,200 --> 00:30:20,420
it working but if you have like a two

00:30:17,480 --> 00:30:25,990
hours suit of automation tests running

00:30:20,420 --> 00:30:31,370
you can deliver that that much that fast

00:30:25,990 --> 00:30:33,980
and here I would like to present you

00:30:31,370 --> 00:30:37,070
some real case scenarios on projects

00:30:33,980 --> 00:30:41,510
that we work on and what actually what

00:30:37,070 --> 00:30:44,930
we have next is a cup of the hardest

00:30:41,510 --> 00:30:46,700
things that we face during our work or

00:30:44,930 --> 00:30:52,970
how the business likes to cause them

00:30:46,700 --> 00:30:57,440
simple projects first of all we have the

00:30:52,970 --> 00:31:01,639
wish it's a retail cosmetic company it's

00:30:57,440 --> 00:31:03,589
a really huge platform which is based on

00:31:01,639 --> 00:31:06,739
nine different drupal instances and

00:31:03,589 --> 00:31:10,519
sinfoni one and mobile applications for

00:31:06,739 --> 00:31:13,909
android iOS all of them working together

00:31:10,519 --> 00:31:17,899
or them sharing data through mobile auto

00:31:13,909 --> 00:31:21,519
through api's and services meaning that

00:31:17,899 --> 00:31:26,899
you have four start a really really huge

00:31:21,519 --> 00:31:29,599
platform to build on and we made to roll

00:31:26,899 --> 00:31:33,820
out this platform for 17 different

00:31:29,599 --> 00:31:37,099
countries on 15 different languages so

00:31:33,820 --> 00:31:40,820
you can imagine how you need to check

00:31:37,099 --> 00:31:42,950
the error message which is I wasn't able

00:31:40,820 --> 00:31:45,619
to create a note on 15 different

00:31:42,950 --> 00:31:50,749
languages that's that's really hard

00:31:45,619 --> 00:31:52,489
thing to do and couple the drupal

00:31:50,749 --> 00:31:55,309
instances that i mentioned above are

00:31:52,489 --> 00:31:57,769
only back-end meaning that there is no

00:31:55,309 --> 00:32:02,029
front end you need to iterate only with

00:31:57,769 --> 00:32:04,849
the drop administration which i will

00:32:02,029 --> 00:32:07,989
show how we actually faced these

00:32:04,849 --> 00:32:13,759
challenges and how we actually saw them

00:32:07,989 --> 00:32:17,419
so here we have the challenges elicit

00:32:13,759 --> 00:32:20,119
and overall I already said pointing the

00:32:17,419 --> 00:32:23,029
whole donation framework on this huge

00:32:20,119 --> 00:32:25,309
platform by itself is a really hard

00:32:23,029 --> 00:32:28,459
thing to do it's really challenging and

00:32:25,309 --> 00:32:32,419
of course we achieved that by spending a

00:32:28,459 --> 00:32:35,889
lot of time thinking about the the

00:32:32,419 --> 00:32:38,089
future implementation in the future

00:32:35,889 --> 00:32:40,820
functionalities that are going to be

00:32:38,089 --> 00:32:43,879
added because in this case I think one

00:32:40,820 --> 00:32:47,059
small new feature can break your

00:32:43,879 --> 00:32:49,459
automation architecture like completely

00:32:47,059 --> 00:32:54,709
because introducing something in the

00:32:49,459 --> 00:32:58,789
middle and let's say for that your bank

00:32:54,709 --> 00:33:03,459
a soap it's really different to to do

00:32:58,789 --> 00:33:07,009
and what we did here is actually built

00:33:03,459 --> 00:33:09,739
one architecture and we like change it

00:33:07,009 --> 00:33:11,210
do two iterations let's see during the

00:33:09,739 --> 00:33:14,300
sprints or

00:33:11,210 --> 00:33:18,220
during couple months because it was

00:33:14,300 --> 00:33:22,190
needed it's it's not like one thing can

00:33:18,220 --> 00:33:25,070
changing constantly and of course

00:33:22,190 --> 00:33:28,670
majoring code that websites and their

00:33:25,070 --> 00:33:31,160
profiles because one thing Abu Dharr

00:33:28,670 --> 00:33:33,350
didn't mentioned is that you can build a

00:33:31,160 --> 00:33:36,680
different profiles for each website

00:33:33,350 --> 00:33:39,400
let's say you have three different

00:33:36,680 --> 00:33:42,530
websites and you can predefined their

00:33:39,400 --> 00:33:45,260
URLs their basic authentication you can

00:33:42,530 --> 00:33:48,020
predefined let's say root access and you

00:33:45,260 --> 00:33:50,210
can use that easily in we had said

00:33:48,020 --> 00:33:53,810
something like I want to be walked in

00:33:50,210 --> 00:33:56,750
and that we walk in walk you in in a

00:33:53,810 --> 00:33:59,630
specific web site so the system to know

00:33:56,750 --> 00:34:03,020
which specific website you need you need

00:33:59,630 --> 00:34:07,460
profiles and to have profile per

00:34:03,020 --> 00:34:10,370
environment per site and per country it

00:34:07,460 --> 00:34:13,670
was really hard thing to do and also you

00:34:10,370 --> 00:34:16,460
have per profile so we have 17 we have

00:34:13,670 --> 00:34:20,690
three environments 17 countries and nine

00:34:16,460 --> 00:34:22,060
profiles it's real rewards given and we

00:34:20,690 --> 00:34:26,800
actually managed to do it

00:34:22,060 --> 00:34:30,130
how image dude we introduced a chain of

00:34:26,800 --> 00:34:33,760
ymail files that's where the we had

00:34:30,130 --> 00:34:36,320
configuration is stored we have

00:34:33,760 --> 00:34:39,670
separated as I said per country per

00:34:36,320 --> 00:34:43,760
environment and curtain per profile and

00:34:39,670 --> 00:34:48,460
we added a lot more attributes to the

00:34:43,760 --> 00:34:52,370
profiles which can help us test

00:34:48,460 --> 00:34:54,560
simultaneously both the Drupal website

00:34:52,370 --> 00:34:58,550
in the mobile applications for instance

00:34:54,560 --> 00:35:01,430
we store things like tokens so we can go

00:34:58,550 --> 00:35:04,610
some requests in the mobile API and we

00:35:01,430 --> 00:35:06,440
already like effort generated token so

00:35:04,610 --> 00:35:08,690
we can store that in the profile and

00:35:06,440 --> 00:35:12,860
easily access it after that and whenever

00:35:08,690 --> 00:35:16,280
it's needed our thing is that the most

00:35:12,860 --> 00:35:19,130
of the the profiles were with back-end

00:35:16,280 --> 00:35:22,220
which here which develop a specific

00:35:19,130 --> 00:35:23,310
context which we are going it's still in

00:35:22,220 --> 00:35:25,620
development but we are

00:35:23,310 --> 00:35:27,930
to introduce soon to the bighead

00:35:25,620 --> 00:35:31,350
community in the community overall it's

00:35:27,930 --> 00:35:33,330
a specific one working only with drupe

00:35:31,350 --> 00:35:38,820
administration it makes it easy to

00:35:33,330 --> 00:35:44,120
navigate through to Drupal menus and

00:35:38,820 --> 00:35:47,640
also give you ability to do other stuff

00:35:44,120 --> 00:35:50,970
really really Drupal specific it's built

00:35:47,640 --> 00:35:53,760
on the drupal extension we like get some

00:35:50,970 --> 00:35:58,830
ideas from it and try to improve it and

00:35:53,760 --> 00:36:02,970
to see what in fitting our cases and we

00:35:58,830 --> 00:36:06,000
use it here in and the last thing I know

00:36:02,970 --> 00:36:07,950
it's interesting the next one is

00:36:06,000 --> 00:36:12,330
creating the tests that work

00:36:07,950 --> 00:36:15,300
simultaneously with weapon mobile the

00:36:12,330 --> 00:36:18,740
interesting part here is that we should

00:36:15,300 --> 00:36:21,710
have like let's say the same products

00:36:18,740 --> 00:36:24,360
simultaneously on websites and mobile

00:36:21,710 --> 00:36:26,070
applications and if you want you can buy

00:36:24,360 --> 00:36:28,530
it from the website we can buy it from

00:36:26,070 --> 00:36:31,560
the mobile application and the fourth

00:36:28,530 --> 00:36:34,050
should be absolutely the same and the

00:36:31,560 --> 00:36:36,630
communication between the website in the

00:36:34,050 --> 00:36:39,210
mobile application should work

00:36:36,630 --> 00:36:42,270
constantly for instance your allocate

00:36:39,210 --> 00:36:45,360
out indicating in the mobile application

00:36:42,270 --> 00:36:47,460
but you need to have a Drupal user to do

00:36:45,360 --> 00:36:52,100
it so there's a talking between the

00:36:47,460 --> 00:36:54,540
website in the application and for that

00:36:52,100 --> 00:36:58,020
meaning there's a lot of custom work

00:36:54,540 --> 00:37:03,720
that we did so we can crawl the

00:36:58,020 --> 00:37:05,730
application we can CRO what's the what's

00:37:03,720 --> 00:37:09,060
the data coming through the api's

00:37:05,730 --> 00:37:12,150
capture that and after that compare it

00:37:09,060 --> 00:37:15,660
let's say to Drupal data in compare if

00:37:12,150 --> 00:37:17,970
the user IDs are the same compared at

00:37:15,660 --> 00:37:21,690
the basket it's not empty

00:37:17,970 --> 00:37:25,020
and stuff like that and we had a huge

00:37:21,690 --> 00:37:28,110
migration because what they get website

00:37:25,020 --> 00:37:31,080
which was already built on Drupal it was

00:37:28,110 --> 00:37:32,410
Drupal 7 to Drupal 7 immigration but it

00:37:31,080 --> 00:37:37,210
was like Merlin

00:37:32,410 --> 00:37:38,650
fifteen thousand nodes which were from a

00:37:37,210 --> 00:37:43,030
couple of different content types

00:37:38,650 --> 00:37:46,600
and the good thing that we faced here is

00:37:43,030 --> 00:37:49,870
that while we were doing the Drupal 7

00:37:46,600 --> 00:37:51,580
new the new Drupal 7 website we had the

00:37:49,870 --> 00:37:55,060
old one still running and we have a

00:37:51,580 --> 00:37:57,880
dedicated server for it so we were able

00:37:55,060 --> 00:38:01,560
to easily compare OData to newly

00:37:57,880 --> 00:38:03,880
migrated data and we built automation

00:38:01,560 --> 00:38:07,470
framework for the migration which was

00:38:03,880 --> 00:38:09,790
like going to one website crawl all the

00:38:07,470 --> 00:38:13,300
information that is located in the node

00:38:09,790 --> 00:38:16,210
and after let's compare it to the newly

00:38:13,300 --> 00:38:24,580
migrated one in our new system that we

00:38:16,210 --> 00:38:27,300
built okay so other project that we

00:38:24,580 --> 00:38:30,480
worked on is for word reading

00:38:27,300 --> 00:38:34,030
agricultural company here we have the

00:38:30,480 --> 00:38:36,100
almost let's see the same scenario

00:38:34,030 --> 00:38:38,230
because we have a multi-site setup with

00:38:36,100 --> 00:38:41,560
a lot of countries and a lot of

00:38:38,230 --> 00:38:45,720
languages and what we did here for the

00:38:41,560 --> 00:38:48,810
lot of languages a colleague of mine

00:38:45,720 --> 00:38:51,790
introduced us to the to a newly

00:38:48,810 --> 00:38:55,090
developed extension which is called the

00:38:51,790 --> 00:38:58,020
multilingual extension you can for the

00:38:55,090 --> 00:39:01,360
link that's easily allow us to have

00:38:58,020 --> 00:39:03,640
different languages and strings defined

00:39:01,360 --> 00:39:06,400
on different languages in for instance

00:39:03,640 --> 00:39:10,360
you can say something like I would like

00:39:06,400 --> 00:39:15,520
to verify this error on all languages

00:39:10,360 --> 00:39:18,790
and that we will compare the sorry that

00:39:15,520 --> 00:39:22,170
will compare the the string on English

00:39:18,790 --> 00:39:25,030
after that switch the website to Dutch

00:39:22,170 --> 00:39:27,190
we'll get a Dutch changes to Bulgarian

00:39:25,030 --> 00:39:29,620
wicket in Bulgarian stuffer dad and or

00:39:27,190 --> 00:39:32,470
you can say something specific like I

00:39:29,620 --> 00:39:34,900
would like to see I would like to check

00:39:32,470 --> 00:39:37,240
this error message in English and that

00:39:34,900 --> 00:39:40,290
will pick or any other language and that

00:39:37,240 --> 00:39:42,970
will pick a specific language out of the

00:39:40,290 --> 00:39:45,970
Emma files that are configured

00:39:42,970 --> 00:39:50,319
and compare the strings and give you the

00:39:45,970 --> 00:39:53,310
results which like give us a lot more

00:39:50,319 --> 00:39:56,950
time to do like other stuff I mean this

00:39:53,310 --> 00:39:59,050
this feature allow us to have

00:39:56,950 --> 00:40:01,270
concentrated on other things in the

00:39:59,050 --> 00:40:04,869
project and fixed a lot of our issues

00:40:01,270 --> 00:40:08,500
that we had so far other thing that I

00:40:04,869 --> 00:40:10,960
mentioned earlier is one time it was an

00:40:08,500 --> 00:40:13,720
issue before but we have developed

00:40:10,960 --> 00:40:17,050
feature in the drupal meaning a feature

00:40:13,720 --> 00:40:19,150
we can which can be easily like turn on

00:40:17,050 --> 00:40:23,650
and turn off where for instance is our

00:40:19,150 --> 00:40:26,530
automation tests were doing the stuff

00:40:23,650 --> 00:40:28,359
that they go first on the website enable

00:40:26,530 --> 00:40:32,200
that feature and do the rest of the

00:40:28,359 --> 00:40:34,810
testing after it and after the content

00:40:32,200 --> 00:40:37,270
is cleared after the users are deleted

00:40:34,810 --> 00:40:39,520
which were using so we don't leave any

00:40:37,270 --> 00:40:42,160
Deming and tent on the website we turned

00:40:39,520 --> 00:40:47,099
off the feature and that's leaving the

00:40:42,160 --> 00:40:49,359
environment as it as it was before and

00:40:47,099 --> 00:40:52,839
last thing that I want to mention here

00:40:49,359 --> 00:40:54,819
is a really interesting since we imports

00:40:52,839 --> 00:41:00,280
that were worth doing we are actually

00:40:54,819 --> 00:41:03,430
importing notes through a series but the

00:41:00,280 --> 00:41:05,859
unique thing here was that new IDs for

00:41:03,430 --> 00:41:08,890
each node needs to be like you know

00:41:05,859 --> 00:41:11,859
random strings and actually we didn't

00:41:08,890 --> 00:41:14,380
have that in the beginning so we each

00:41:11,859 --> 00:41:18,930
time we run any automation test we

00:41:14,380 --> 00:41:23,109
received CSV from the clients which was

00:41:18,930 --> 00:41:26,230
with not generated yes so we generated

00:41:23,109 --> 00:41:28,710
them automatically and importance in

00:41:26,230 --> 00:41:31,300
them like a new column in the CSV and

00:41:28,710 --> 00:41:35,349
after that receive it in a poll in our

00:41:31,300 --> 00:41:37,690
system which was like we faced cup of

00:41:35,349 --> 00:41:42,250
tricky things during the during that

00:41:37,690 --> 00:41:49,530
process and of course like we we tried

00:41:42,250 --> 00:41:52,280
to do that so you can have a like really

00:41:49,530 --> 00:41:55,140
independent

00:41:52,280 --> 00:41:58,680
tests so you can say each time you can

00:41:55,140 --> 00:42:00,990
run with no matter what city you don't

00:41:58,680 --> 00:42:06,079
need predefined data in it you can it

00:42:00,990 --> 00:42:06,079
can be generated automatically in random

00:42:08,299 --> 00:42:13,530
there are company and other problems

00:42:10,710 --> 00:42:17,819
that we faced was for a communication

00:42:13,530 --> 00:42:20,970
company and first thing we have here is

00:42:17,819 --> 00:42:24,299
a two-factor authentication two-factor

00:42:20,970 --> 00:42:28,109
authentication was really hard thing to

00:42:24,299 --> 00:42:30,930
manage and imagine having a lot of

00:42:28,109 --> 00:42:34,559
automation force that you have that will

00:42:30,930 --> 00:42:37,319
visit third-party websites that you

00:42:34,559 --> 00:42:39,720
don't have control of and the two-factor

00:42:37,319 --> 00:42:43,650
authentication is based on a third party

00:42:39,720 --> 00:42:46,260
and this petard panda can be changed on

00:42:43,650 --> 00:42:49,859
a daily basis a lot of content is added

00:42:46,260 --> 00:42:58,849
to it or something different which makes

00:42:49,859 --> 00:43:03,150
your work really really hard let's see

00:42:58,849 --> 00:43:06,750
other thing is that we have JSON files

00:43:03,150 --> 00:43:09,809
but the tricky part here is that the J's

00:43:06,750 --> 00:43:12,359
Empire files were encrypted and they

00:43:09,809 --> 00:43:15,779
were on remote servers we don't which we

00:43:12,359 --> 00:43:19,740
don't have access to and here actually

00:43:15,779 --> 00:43:22,789
how so that is something that I

00:43:19,740 --> 00:43:24,900
mentioned earlier keeping really good

00:43:22,789 --> 00:43:27,900
communication with the development team

00:43:24,900 --> 00:43:31,440
so we went to our development team say

00:43:27,900 --> 00:43:35,400
hey we are not able to make that Bower

00:43:31,440 --> 00:43:40,619
safe can you help us somehow and again

00:43:35,400 --> 00:43:43,349
we introduced that feature in Drupal

00:43:40,619 --> 00:43:47,220
feature automation feature when this one

00:43:43,349 --> 00:43:50,539
is turned on and you visit a node which

00:43:47,220 --> 00:43:53,520
are supposed to receive this encrypted

00:43:50,539 --> 00:43:56,630
JSON file and store it there we have

00:43:53,520 --> 00:43:59,339
that exposed in the back end so there's

00:43:56,630 --> 00:44:00,420
unloaded there is a different tap on the

00:43:59,339 --> 00:44:03,569
top that's

00:44:00,420 --> 00:44:06,180
say assess let's say automation and on

00:44:03,569 --> 00:44:09,119
this tab you can receive the JSON file

00:44:06,180 --> 00:44:12,539
and after that start growing the the

00:44:09,119 --> 00:44:19,170
website and comparing JSON data with the

00:44:12,539 --> 00:44:24,180
website data due to working with about

00:44:19,170 --> 00:44:27,240
with Jason we built a couple of let's

00:44:24,180 --> 00:44:30,299
say more than a couple of steps that are

00:44:27,240 --> 00:44:38,059
doing comprehension between this data

00:44:30,299 --> 00:44:40,740
and we built an extension which are

00:44:38,059 --> 00:44:44,069
allowing us to have different parts of

00:44:40,740 --> 00:44:48,869
code introduced to the system during

00:44:44,069 --> 00:44:51,150
grunts that's HP traits and we use the

00:44:48,869 --> 00:44:54,269
traits to have different parts of code

00:44:51,150 --> 00:45:01,740
like poked in during the execution of

00:44:54,269 --> 00:45:06,029
the tests and would like to say a few

00:45:01,740 --> 00:45:07,920
more words and yeah after all these

00:45:06,029 --> 00:45:11,069
examples if you did not understand all

00:45:07,920 --> 00:45:13,349
this happen we'd be had because we

00:45:11,069 --> 00:45:15,390
didn't mention it but every all of these

00:45:13,349 --> 00:45:18,900
problems we we managed to fix we'd be

00:45:15,390 --> 00:45:20,970
had and at the beginning when we chose B

00:45:18,900 --> 00:45:23,250
hat of course it was not that easy we

00:45:20,970 --> 00:45:26,039
didn't have all these things we when we

00:45:23,250 --> 00:45:27,359
receive a huge project as as he said

00:45:26,039 --> 00:45:29,549
with many environment with many

00:45:27,359 --> 00:45:31,740
different countries we we were not able

00:45:29,549 --> 00:45:33,380
we were not capable to do this with big

00:45:31,740 --> 00:45:36,089
head but we extended we had we

00:45:33,380 --> 00:45:38,579
contributed as much as we we could now

00:45:36,089 --> 00:45:41,009
we are continuing contributing on it and

00:45:38,579 --> 00:45:45,059
of course we had this open source PHP

00:45:41,009 --> 00:45:47,849
base it's free which is very important

00:45:45,059 --> 00:45:49,769
one of the reasons why it's free we

00:45:47,849 --> 00:45:51,000
continue using it and we think it's very

00:45:49,769 --> 00:45:54,329
powerful too

00:45:51,000 --> 00:45:58,529
these are the main reasons actually we

00:45:54,329 --> 00:46:01,380
saw and after all these experience we

00:45:58,529 --> 00:46:03,950
got it after all these completed

00:46:01,380 --> 00:46:07,019
successful projects with the packages

00:46:03,950 --> 00:46:11,190
that our Pete again that our clients are

00:46:07,019 --> 00:46:12,600
using as some some time as actually

00:46:11,190 --> 00:46:15,510
menus and documentation

00:46:12,600 --> 00:46:17,250
to educate their editors how the site is

00:46:15,510 --> 00:46:21,120
working actually they're using these

00:46:17,250 --> 00:46:23,550
steps to for example if they forget how

00:46:21,120 --> 00:46:27,360
one of their functionalities is working

00:46:23,550 --> 00:46:29,760
because we have such cases I don't I'm

00:46:27,360 --> 00:46:32,460
not sure do you have such case but we

00:46:29,760 --> 00:46:34,020
have cases when our clients forget how

00:46:32,460 --> 00:46:36,060
some of their functionalities are

00:46:34,020 --> 00:46:38,970
working and they're asking us from

00:46:36,060 --> 00:46:40,850
back-end perspective how they could for

00:46:38,970 --> 00:46:44,460
example build that book or build that

00:46:40,850 --> 00:46:47,130
view and we are using also the test is a

00:46:44,460 --> 00:46:48,930
documentation is a education materials

00:46:47,130 --> 00:46:51,060
and they're extending them they are

00:46:48,930 --> 00:46:53,970
asking us for our trainings how they can

00:46:51,060 --> 00:46:55,770
extend their tests in future if they

00:46:53,970 --> 00:46:59,700
continue the development or if they want

00:46:55,770 --> 00:47:03,390
to cover more and more and yeah so so

00:46:59,700 --> 00:47:05,430
this is happening with behead and this

00:47:03,390 --> 00:47:07,320
is the reason why we made this

00:47:05,430 --> 00:47:09,780
presentation why we're working with it

00:47:07,320 --> 00:47:13,530
and of course everything that their

00:47:09,780 --> 00:47:16,050
confirmation could be could be shown to

00:47:13,530 --> 00:47:18,630
you and to the community it's out there

00:47:16,050 --> 00:47:20,910
in internet or you can contact us so if

00:47:18,630 --> 00:47:23,760
you free if you if you want to try to if

00:47:20,910 --> 00:47:27,900
you have any problems we are here to

00:47:23,760 --> 00:47:29,370
help so yeah this is this is the reason

00:47:27,900 --> 00:47:32,240
why this is the answer to the the

00:47:29,370 --> 00:47:32,240
question why yeah

00:47:46,090 --> 00:47:55,240
okay yeah answer this one so we have

00:47:49,760 --> 00:47:57,410
both scenarios actually we run tests on

00:47:55,240 --> 00:47:59,660
separate environments which are

00:47:57,410 --> 00:48:01,550
dedicated only for tests and run them

00:47:59,660 --> 00:48:03,830
against a development they run on

00:48:01,550 --> 00:48:07,160
staging environment in production but

00:48:03,830 --> 00:48:10,250
what we have the case currently is that

00:48:07,160 --> 00:48:13,640
we have as you said docker container

00:48:10,250 --> 00:48:15,770
which is butan with jenkins and tests

00:48:13,640 --> 00:48:18,140
are run on this docker container and the

00:48:15,770 --> 00:48:20,590
environment there and if as I said

00:48:18,140 --> 00:48:23,740
everything is green we deploy that to a

00:48:20,590 --> 00:48:23,740
development server

00:48:36,589 --> 00:48:43,589
the best-case scenario is that we have

00:48:39,239 --> 00:48:46,349
like sanitized database that it's from

00:48:43,589 --> 00:48:48,599
prediction so we have some real data but

00:48:46,349 --> 00:48:51,329
it's scientists and we try to use that

00:48:48,599 --> 00:48:53,880
or in other cases the Drupal extension

00:48:51,329 --> 00:48:56,309
can easily provide you some random

00:48:53,880 --> 00:48:58,019
strings and fill you a couple of notes

00:48:56,309 --> 00:49:00,390
which you can use for the

00:48:58,019 --> 00:49:02,999
functionalities and from my perspective

00:49:00,390 --> 00:49:04,950
the best ways to create it by the b-hat

00:49:02,999 --> 00:49:07,640
tests at the beginning you have a like a

00:49:04,950 --> 00:49:10,289
preconditions feature which is actually

00:49:07,640 --> 00:49:13,950
creating the content that you need in

00:49:10,289 --> 00:49:18,239
your automation package because you the

00:49:13,950 --> 00:49:20,039
way of creation is it is simple but many

00:49:18,239 --> 00:49:22,289
times we face problem with the most

00:49:20,039 --> 00:49:24,180
simple functionality sometimes the

00:49:22,289 --> 00:49:26,279
client reports that they are not able to

00:49:24,180 --> 00:49:27,660
save and to create an article for

00:49:26,279 --> 00:49:29,940
example which is a very basic and

00:49:27,660 --> 00:49:31,529
straightforward thing but I think that

00:49:29,940 --> 00:49:33,299
the best ways in the to have a

00:49:31,529 --> 00:49:36,390
preconditions which is generating this

00:49:33,299 --> 00:49:38,519
this content from the be had steps from

00:49:36,390 --> 00:49:38,940
steps from tests and after that of

00:49:38,519 --> 00:49:41,489
course

00:49:38,940 --> 00:49:43,380
Esther concept also to delete the

00:49:41,489 --> 00:49:44,849
content because we should not leave any

00:49:43,380 --> 00:49:48,479
dummy content on the environment yeah

00:49:44,849 --> 00:49:51,989
this is answered your questions okay so

00:49:48,479 --> 00:49:54,749
yeah join join us for the contribution

00:49:51,989 --> 00:49:56,309
sprints at Friday and of course thank

00:49:54,749 --> 00:49:59,039
you and if you have any questions we are

00:49:56,309 --> 00:50:02,309
here so thanks for your time I hope you

00:49:59,039 --> 00:50:10,380
enjoyed our station and if anyone has

00:50:02,309 --> 00:50:12,900
any questions one problem that we face

00:50:10,380 --> 00:50:15,599
in our company is that the person

00:50:12,900 --> 00:50:18,539
writing the tests is constantly

00:50:15,599 --> 00:50:21,239
frustrated because one of the developers

00:50:18,539 --> 00:50:23,039
changed a function which is good because

00:50:21,239 --> 00:50:24,779
the client requested it but the problem

00:50:23,039 --> 00:50:27,509
is that the development team is about

00:50:24,779 --> 00:50:29,279
eight people and then the person writing

00:50:27,509 --> 00:50:30,869
the tests has to go to every single of

00:50:29,279 --> 00:50:33,450
them if they can't figure out themselves

00:50:30,869 --> 00:50:37,319
who it was so you mentioned good

00:50:33,450 --> 00:50:40,170
communication is key but so far

00:50:37,319 --> 00:50:42,089
we haven't managed to get a workflow

00:50:40,170 --> 00:50:44,459
that really helps the developers tell

00:50:42,089 --> 00:50:46,440
the test engineer to this is now changed

00:50:44,459 --> 00:50:48,900
and yeah because the test engineers

00:50:46,440 --> 00:50:52,739
sometimes not in the office you can

00:50:48,900 --> 00:50:55,859
imagine this frustration from my point

00:50:52,739 --> 00:50:57,809
of view has to go away so so true yeah

00:50:55,859 --> 00:51:01,109
thank you for the question is it's

00:50:57,809 --> 00:51:06,239
really really life example this is

00:51:01,109 --> 00:51:09,089
happening and as we said the key for

00:51:06,239 --> 00:51:12,059
this tool to be successful is the

00:51:09,089 --> 00:51:14,549
communication but not only between the

00:51:12,059 --> 00:51:16,079
developers and the QA SS I started from

00:51:14,549 --> 00:51:18,150
the beginning we should talk to the

00:51:16,079 --> 00:51:22,079
business business should understand how

00:51:18,150 --> 00:51:24,150
much it cost to change something when we

00:51:22,079 --> 00:51:26,069
already started or we already developed

00:51:24,150 --> 00:51:28,199
it when they are thinking about the

00:51:26,069 --> 00:51:31,049
change request or where when they are

00:51:28,199 --> 00:51:33,239
thinking about what they need to improve

00:51:31,049 --> 00:51:35,039
which will change a lot of

00:51:33,239 --> 00:51:37,380
functionalities did they should know

00:51:35,039 --> 00:51:39,359
that if you want to make it we want to

00:51:37,380 --> 00:51:42,449
spend not only developer hours but we

00:51:39,359 --> 00:51:44,219
should spend a lot of Q hours and they

00:51:42,449 --> 00:51:46,499
should be aware of the resources that

00:51:44,219 --> 00:51:48,869
they have if you say one develop seven

00:51:46,499 --> 00:51:52,229
developers and one QA engineer which is

00:51:48,869 --> 00:51:54,979
a big problem many times we got it also

00:51:52,229 --> 00:51:58,529
and I think that if the client is aware

00:51:54,979 --> 00:52:00,209
how much it will cost and what will be

00:51:58,529 --> 00:52:01,739
the result of this because if you change

00:52:00,209 --> 00:52:04,529
the whole automation package is not

00:52:01,739 --> 00:52:08,579
working the case should rework it yeah

00:52:04,529 --> 00:52:12,180
of course oh this dish they could be

00:52:08,579 --> 00:52:14,549
more careful because they are not always

00:52:12,180 --> 00:52:16,140
that careful and they always want to

00:52:14,549 --> 00:52:18,599
change something and this is of course

00:52:16,140 --> 00:52:20,369
acceptable we can set the client don't

00:52:18,599 --> 00:52:24,420
change this or don't change anything

00:52:20,369 --> 00:52:27,239
this is this won't happened in the real

00:52:24,420 --> 00:52:31,339
wife of course but if they know how it

00:52:27,239 --> 00:52:33,599
how important is to define the

00:52:31,339 --> 00:52:35,719
descriptions at the beginning and to the

00:52:33,599 --> 00:52:40,589
user stories better at the beginning

00:52:35,719 --> 00:52:42,809
they do like this will be reduced the

00:52:40,589 --> 00:52:43,710
times that you change your tests will be

00:52:42,809 --> 00:52:46,240
reduced

00:52:43,710 --> 00:52:49,480
drastically and also what we are doing

00:52:46,240 --> 00:52:52,359
actually we're at the beginning of the

00:52:49,480 --> 00:52:54,309
project one of our cuase which is more

00:52:52,359 --> 00:52:56,500
like business analyst instead of

00:52:54,309 --> 00:52:59,109
automation engineer sitting close to the

00:52:56,500 --> 00:53:01,059
client and help them define the user

00:52:59,109 --> 00:53:03,069
stories and the acceptance criteria and

00:53:01,059 --> 00:53:05,559
this is very important this is something

00:53:03,069 --> 00:53:08,130
that is missed very often on the

00:53:05,559 --> 00:53:11,740
discoveries and the early project phases

00:53:08,130 --> 00:53:14,799
we need that person we need someone who

00:53:11,740 --> 00:53:17,170
is technical enough to know how it's

00:53:14,799 --> 00:53:20,200
going to be implemented but to be

00:53:17,170 --> 00:53:23,079
business oriented to help them actually

00:53:20,200 --> 00:53:26,020
realize what they really want because

00:53:23,079 --> 00:53:28,150
with the experience maybe you've already

00:53:26,020 --> 00:53:30,940
done a lot of project similar to this

00:53:28,150 --> 00:53:33,609
one you can give ideas and you can say

00:53:30,940 --> 00:53:35,950
ok we had projects like this and for

00:53:33,609 --> 00:53:37,599
this project in the future we got these

00:53:35,950 --> 00:53:39,250
problems and the client wanted this to

00:53:37,599 --> 00:53:42,220
be changed so maybe at the beginning

00:53:39,250 --> 00:53:45,369
think about this yeah let's make it like

00:53:42,220 --> 00:53:48,220
this so we will not spend that much time

00:53:45,369 --> 00:53:50,230
in the future and you won't pay for

00:53:48,220 --> 00:53:52,630
change requests that much in future

00:53:50,230 --> 00:53:54,369
because they care for their business and

00:53:52,630 --> 00:53:56,799
for their budget and for their scope of

00:53:54,369 --> 00:53:58,930
course and if we care about their

00:53:56,799 --> 00:54:00,640
project scope and business they will be

00:53:58,930 --> 00:54:03,190
happy to work with us in their listeners

00:54:00,640 --> 00:54:06,430
and yeah this is this is the most

00:54:03,190 --> 00:54:08,559
important thing that that I this is the

00:54:06,430 --> 00:54:10,930
key to successful for me and from my

00:54:08,559 --> 00:54:13,599
point of view but you always have these

00:54:10,930 --> 00:54:19,810
situations when you rework a lot of

00:54:13,599 --> 00:54:25,679
tests this is actually yeah thank you

00:54:19,810 --> 00:54:25,679

YouTube URL: https://www.youtube.com/watch?v=tEa9r0KjEvk


