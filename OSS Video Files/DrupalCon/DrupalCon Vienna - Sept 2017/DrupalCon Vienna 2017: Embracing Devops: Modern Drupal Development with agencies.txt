Title: DrupalCon Vienna 2017: Embracing Devops: Modern Drupal Development with agencies
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	Drupal in 2017 is not the same as Drupal 2001. Modern development best practices rely heavily on the incorporation of DevOps into the developerâ€™s workflow.

Alongside a few digital agencies, we will discuss how easy it can be to embrace DevOps and how it can transform the way agencies work. From digital agencies who implemented DevOps best practices for the first time to a more digitally advanced agency who wanted to take their DevOps further.

What you will have learned after this session:

The approach these digital agencies took to implement DevOps
The top benefits they've seen since implementing DevOps
DevOps best practices by other digital agencies that you can follow
6 essential steps every agency can take to implement DevOps quickly and easily
This session is aimed at developers, developer management, and agencies of all levels.
Captions: 
	00:00:00,030 --> 00:00:06,509
right I think we'll get started it's

00:00:02,730 --> 00:00:08,360
about quarter to welcome everybody to

00:00:06,509 --> 00:00:10,860
embracing DevOps

00:00:08,360 --> 00:00:15,690
I'm Karen Sandburg Smith and I'm the

00:00:10,860 --> 00:00:18,150
chief commercial officer for platform Sh

00:00:15,690 --> 00:00:20,430
we've three very different agencies here

00:00:18,150 --> 00:00:23,400
today to talk about their experiences

00:00:20,430 --> 00:00:25,080
with platform and the business value

00:00:23,400 --> 00:00:27,720
they're getting from platform

00:00:25,080 --> 00:00:29,730
I think the recurring message from the

00:00:27,720 --> 00:00:31,309
majority of our customers is is how

00:00:29,730 --> 00:00:33,440
they've got rid of all this

00:00:31,309 --> 00:00:36,750
labor-intensive infrastructure

00:00:33,440 --> 00:00:40,829
management and that's making them faster

00:00:36,750 --> 00:00:43,379
leaner and more competitive I'm going to

00:00:40,829 --> 00:00:45,539
let Richard Morrow and Barry introduce

00:00:43,379 --> 00:00:47,940
themselves as they as they come up

00:00:45,539 --> 00:00:50,280
suffice it to say that the between the

00:00:47,940 --> 00:00:53,850
three agencies they're using an awful

00:00:50,280 --> 00:00:57,800
lot of platform for large complex Drupal

00:00:53,850 --> 00:01:03,960
projects for headless Drupal plus nodejs

00:00:57,800 --> 00:01:05,519
for multi-site PHP Magento easy systems

00:01:03,960 --> 00:01:09,740
you name it's a whole range of tech that

00:01:05,519 --> 00:01:09,740
got running on platforms

00:01:13,070 --> 00:01:18,530
I think first just before we do that

00:01:15,530 --> 00:01:20,119
let's just talk for a bit about the pass

00:01:18,530 --> 00:01:23,900
and what our passes and what's of the

00:01:20,119 --> 00:01:26,119
pass you need there's a lot of offenders

00:01:23,900 --> 00:01:29,420
out there these days calling themselves

00:01:26,119 --> 00:01:31,610
a pass question is which one do you need

00:01:29,420 --> 00:01:34,820
to get the most business advantage for

00:01:31,610 --> 00:01:35,900
your organization or agency well as a

00:01:34,820 --> 00:01:37,850
number of answers to that I think

00:01:35,900 --> 00:01:40,340
firstly you need you need a pass that

00:01:37,850 --> 00:01:42,860
supports your current technology really

00:01:40,340 --> 00:01:49,190
well and that's probably a group of the

00:01:42,860 --> 00:01:51,920
majority people in this room but also

00:01:49,190 --> 00:01:53,960
it's about future technologies that you

00:01:51,920 --> 00:01:58,399
might be looking to use for instance

00:01:53,960 --> 00:02:02,840
nodejs and Symphony and Ruby and Python

00:01:58,399 --> 00:02:04,759
and I don't know past magento I think

00:02:02,840 --> 00:02:07,209
secondly it's important to look for a

00:02:04,759 --> 00:02:11,330
pass which gives you a lot of automation

00:02:07,209 --> 00:02:13,100
versus tickets and the last thing you

00:02:11,330 --> 00:02:15,320
really want to be doing is issuing

00:02:13,100 --> 00:02:19,760
tickets to your hosting vendor to make

00:02:15,320 --> 00:02:21,470
configuration changes service changes to

00:02:19,760 --> 00:02:23,810
give you more environments to upscale

00:02:21,470 --> 00:02:25,790
your projects that's just the last thing

00:02:23,810 --> 00:02:28,610
you want these tickets take a long time

00:02:25,790 --> 00:02:33,170
to turn around and a lot of mistakes can

00:02:28,610 --> 00:02:36,560
be made in that manual process you're

00:02:33,170 --> 00:02:38,239
also looking for the best automation and

00:02:36,560 --> 00:02:40,790
that comes in two forms basically

00:02:38,239 --> 00:02:43,730
simplifying the most complex of the the

00:02:40,790 --> 00:02:46,400
DevOps process blocks the the

00:02:43,730 --> 00:02:50,269
administration of consistency between

00:02:46,400 --> 00:02:51,680
environments that's the key problem you

00:02:50,269 --> 00:02:54,350
should be looking for your past effects

00:02:51,680 --> 00:02:56,900
and us managing environments through

00:02:54,350 --> 00:02:59,480
from the developer all the way through

00:02:56,900 --> 00:03:02,269
to the live system and secondly you want

00:02:59,480 --> 00:03:04,040
your developers to to have any easily

00:03:02,269 --> 00:03:06,829
manage the code in and out of those

00:03:04,040 --> 00:03:09,230
environments and being able to test as

00:03:06,829 --> 00:03:12,680
many variables as possible and that

00:03:09,230 --> 00:03:17,570
being the data new service releases new

00:03:12,680 --> 00:03:20,000
features and so on and when you find

00:03:17,570 --> 00:03:24,810
this rare combination of flexibility in

00:03:20,000 --> 00:03:27,480
automation that's when you're getting to

00:03:24,810 --> 00:03:31,020
business advantage if you can merge test

00:03:27,480 --> 00:03:33,450
deploy in a repeatable deterministic

00:03:31,020 --> 00:03:34,830
manner and trust the results you're

00:03:33,450 --> 00:03:36,870
going to do more of that you're going to

00:03:34,830 --> 00:03:38,580
do it any time of the day and you're

00:03:36,870 --> 00:03:40,410
going to do whatever the site's doing

00:03:38,580 --> 00:03:42,660
and you're going to do that for your

00:03:40,410 --> 00:03:45,120
volume changes and for your more complex

00:03:42,660 --> 00:03:48,840
changes as well and that's real

00:03:45,120 --> 00:03:50,430
continuous delivery and when you're

00:03:48,840 --> 00:03:53,220
reaching the point where you're

00:03:50,430 --> 00:03:54,959
continuously delivering you'll know that

00:03:53,220 --> 00:03:58,110
you've streamlined some of those really

00:03:54,959 --> 00:04:00,060
complex business processes not only that

00:03:58,110 --> 00:04:02,580
but you're giving your service

00:04:00,060 --> 00:04:04,230
management your product owners your head

00:04:02,580 --> 00:04:06,450
of e-commerce added marketing you're

00:04:04,230 --> 00:04:08,160
giving those guys the green light to

00:04:06,450 --> 00:04:11,220
think on their feet to react to the

00:04:08,160 --> 00:04:16,200
marketplace to make changes to the site

00:04:11,220 --> 00:04:18,500
whenever they need to and that shouldn't

00:04:16,200 --> 00:04:18,500
have happened

00:04:20,160 --> 00:04:26,800
let me put that back into presentation

00:04:22,810 --> 00:04:28,660
mode and basically that's where you're

00:04:26,800 --> 00:04:34,720
beginning to see real competitive

00:04:28,660 --> 00:04:37,660
advantage so just a one last slide when

00:04:34,720 --> 00:04:39,820
you're next assessing your hosting pass

00:04:37,660 --> 00:04:43,600
vendor you need to be asking them all

00:04:39,820 --> 00:04:45,970
these questions but it's show me the

00:04:43,600 --> 00:04:48,490
real results from all your customers not

00:04:45,970 --> 00:04:50,560
just one or two references how much

00:04:48,490 --> 00:04:53,050
faster is my development gonna get how

00:04:50,560 --> 00:04:55,780
much more productive will my development

00:04:53,050 --> 00:04:57,910
team become using your pass how much

00:04:55,780 --> 00:04:59,440
better will deployment get more white

00:04:57,910 --> 00:05:02,110
deploy your velocity improves

00:04:59,440 --> 00:05:05,260
significantly and if so exactly how much

00:05:02,110 --> 00:05:08,320
better is it gonna get how much better

00:05:05,260 --> 00:05:10,420
is my service gonna become and are my

00:05:08,320 --> 00:05:13,420
costs gonna change and you need to tell

00:05:10,420 --> 00:05:15,700
me exactly what my overall ROI is going

00:05:13,420 --> 00:05:17,940
to reduce to losing platform or whatever

00:05:15,700 --> 00:05:21,220
that pass is that you're considering

00:05:17,940 --> 00:05:24,690
it's all about proving it asking the

00:05:21,220 --> 00:05:24,690
vendor to prove it prove it to you

00:05:25,300 --> 00:05:30,940
and on that note I'm gonna hand over

00:05:27,220 --> 00:05:40,090
tomorrow he's gonna introduce myself Mar

00:05:30,940 --> 00:05:44,009
as the founder and so hello does the

00:05:40,090 --> 00:05:47,289
audio work for you good

00:05:44,009 --> 00:05:49,689
yes I'm founder family systems it's a

00:05:47,289 --> 00:05:54,419
company from 2,000 stories through

00:05:49,689 --> 00:05:57,849
played in 2008 with Drupal 2000 hated

00:05:54,419 --> 00:06:01,650
Drupal 8 actually we started in 2012

00:05:57,849 --> 00:06:05,259
already so so we one of the most

00:06:01,650 --> 00:06:08,139
contributing companies to Drupal 8 life

00:06:05,259 --> 00:06:10,089
cycle that's why we're on position two

00:06:08,139 --> 00:06:13,419
of the global contributors since I guess

00:06:10,089 --> 00:06:17,139
three years and most importantly we are

00:06:13,419 --> 00:06:19,120
living this idea of making contribution

00:06:17,139 --> 00:06:21,370
part of every project we're implementing

00:06:19,120 --> 00:06:24,159
and through this reducing complexity

00:06:21,370 --> 00:06:27,400
from customer project lowering total

00:06:24,159 --> 00:06:29,830
cost of ownership and creating a healthy

00:06:27,400 --> 00:06:33,069
environment for for the Drupal ecosystem

00:06:29,830 --> 00:06:36,960
to survive and to develop to innovating

00:06:33,069 --> 00:06:39,430
in the long term and we were actually

00:06:36,960 --> 00:06:42,789
seeking when we started thinking about

00:06:39,430 --> 00:06:45,759
running through played early platform

00:06:42,789 --> 00:06:48,129
that fits our expectations and we were

00:06:45,759 --> 00:06:49,569
heavily involved in to the questions of

00:06:48,129 --> 00:06:53,529
how can we achieve maximum performance

00:06:49,569 --> 00:06:57,899
with Drupal 8 and without paying it to

00:06:53,529 --> 00:07:00,879
high price like and it turned out that

00:06:57,899 --> 00:07:04,419
when thinking of like the capabilities

00:07:00,879 --> 00:07:06,459
of Drupal to make it super performant we

00:07:04,419 --> 00:07:10,060
wanted to have additional services like

00:07:06,459 --> 00:07:13,659
readies or many cases like you wanted to

00:07:10,060 --> 00:07:16,930
have a search api backed by Apache Solr

00:07:13,659 --> 00:07:18,580
and still we did not want to tell our

00:07:16,930 --> 00:07:22,719
customers that suddenly their their

00:07:18,580 --> 00:07:25,379
hosting is like the price of three or

00:07:22,719 --> 00:07:28,599
five times the amount of before and

00:07:25,379 --> 00:07:31,539
that's why we basically were super happy

00:07:28,599 --> 00:07:33,189
to find the platform SH as a service

00:07:31,539 --> 00:07:35,979
provider that allowed us to deliver

00:07:33,189 --> 00:07:37,839
something with this added complexity at

00:07:35,979 --> 00:07:41,289
the similar price to what what we

00:07:37,839 --> 00:07:43,509
delivered before and also this kind of

00:07:41,289 --> 00:07:45,189
delivery basically we didn't need to

00:07:43,509 --> 00:07:50,469
solve the problem of maintaining the

00:07:45,189 --> 00:07:52,629
services or like this basically we have

00:07:50,469 --> 00:07:54,570
no additional complexity to main these

00:07:52,629 --> 00:07:59,790
dependencies or on our side

00:07:54,570 --> 00:08:02,760
and similarly for us it was very

00:07:59,790 --> 00:08:06,210
important that we can start with a small

00:08:02,760 --> 00:08:08,460
site small customer and like we did with

00:08:06,210 --> 00:08:12,080
this we developed the first distribution

00:08:08,460 --> 00:08:15,240
it was called np8 for news portals and

00:08:12,080 --> 00:08:17,780
we had like super small sites or that

00:08:15,240 --> 00:08:20,610
wanted to run it and we had super large

00:08:17,780 --> 00:08:21,930
enterprise like clusters that we were

00:08:20,610 --> 00:08:24,720
running and we wanted to have

00:08:21,930 --> 00:08:28,140
consistency to basically maintain both

00:08:24,720 --> 00:08:31,080
with say Drupal is a perfect fit with

00:08:28,140 --> 00:08:33,479
like plugging in caching backends and

00:08:31,080 --> 00:08:34,919
stuff like this and but we wanted to

00:08:33,479 --> 00:08:38,610
maintain consistency with that

00:08:34,919 --> 00:08:41,130
distribution and basically not adopt too

00:08:38,610 --> 00:08:46,380
much within like whether it's standard

00:08:41,130 --> 00:08:48,510
or Enterprise and that's the perfect fit

00:08:46,380 --> 00:08:51,060
for us like we we are actually

00:08:48,510 --> 00:08:54,360
maintaining this distribution this way

00:08:51,060 --> 00:08:55,380
we have these super small sites and it's

00:08:54,360 --> 00:08:57,810
just a little bit of configuration

00:08:55,380 --> 00:09:03,570
differences you have consistency within

00:08:57,810 --> 00:09:06,090
these environments and sometimes yes

00:09:03,570 --> 00:09:07,980
even like media agencies they decide

00:09:06,090 --> 00:09:10,890
that we need to deploy on traditional

00:09:07,980 --> 00:09:13,710
infrastructure but still it's helpful

00:09:10,890 --> 00:09:16,260
for us to decide to standardize the

00:09:13,710 --> 00:09:19,560
development environment so basically all

00:09:16,260 --> 00:09:27,030
of these customers that run their own

00:09:19,560 --> 00:09:29,010
cellar hosted yes classic environment we

00:09:27,030 --> 00:09:30,660
run still at the platform development

00:09:29,010 --> 00:09:34,610
environment because it's easy for us to

00:09:30,660 --> 00:09:37,560
quickly fork deliver test something and

00:09:34,610 --> 00:09:40,530
you know basically have independent

00:09:37,560 --> 00:09:42,330
review cycles and and afterwards they're

00:09:40,530 --> 00:09:45,510
still this old-school process to go to

00:09:42,330 --> 00:09:48,840
production pity but but it helps us to

00:09:45,510 --> 00:09:54,090
not basically maintain this problem

00:09:48,840 --> 00:09:57,240
during process of feature development

00:09:54,090 --> 00:09:59,340
and also here the thing is basically our

00:09:57,240 --> 00:10:01,620
customers have access to the admin UI so

00:09:59,340 --> 00:10:04,620
it helps for them to experience like to

00:10:01,620 --> 00:10:06,810
see there's something going on they

00:10:04,620 --> 00:10:08,070
there are updates there's activity from

00:10:06,810 --> 00:10:10,699
the developers

00:10:08,070 --> 00:10:13,350
that's really helpful in in HR processes

00:10:10,699 --> 00:10:14,970
sometimes even Cosmo State a fork on

00:10:13,350 --> 00:10:16,470
their own like there you know their

00:10:14,970 --> 00:10:18,920
product manager I want to test something

00:10:16,470 --> 00:10:21,170
and I don't want to break production so

00:10:18,920 --> 00:10:26,069
like they're doing this even

00:10:21,170 --> 00:10:29,250
self-service and yes as I said before

00:10:26,069 --> 00:10:32,009
like when we then switched from using

00:10:29,250 --> 00:10:35,120
Drupal to build highly custom things

00:10:32,009 --> 00:10:38,130
into more standardized environments and

00:10:35,120 --> 00:10:40,259
for this basically we can ship our

00:10:38,130 --> 00:10:44,190
distribution no matter what its

00:10:40,259 --> 00:10:46,769
production like enterprise or small

00:10:44,190 --> 00:10:48,569
standard things we basically ship the

00:10:46,769 --> 00:10:52,949
same codebase and it helps us serve a

00:10:48,569 --> 00:10:55,620
standardized process no hassle custom

00:10:52,949 --> 00:10:59,399
like custom setups figuring out how to

00:10:55,620 --> 00:11:02,160
how to fit how to setup or how to

00:10:59,399 --> 00:11:04,560
configure to in that specific target

00:11:02,160 --> 00:11:07,259
environment actually this leads to very

00:11:04,560 --> 00:11:09,180
low maintenance cost in shipping out new

00:11:07,259 --> 00:11:11,069
releases of of our distribution for all

00:11:09,180 --> 00:11:15,529
the customers that are build on top of

00:11:11,069 --> 00:11:18,420
it and the next thing was like still

00:11:15,529 --> 00:11:21,089
there's this distribution we can ship it

00:11:18,420 --> 00:11:23,430
we can you know we can create the

00:11:21,089 --> 00:11:25,680
environment we can initialize it but we

00:11:23,430 --> 00:11:30,089
can go even that far and basically

00:11:25,680 --> 00:11:33,420
release such a distribution so that a

00:11:30,089 --> 00:11:37,139
customer can create an own instance as a

00:11:33,420 --> 00:11:39,779
self-service founder demo like the idea

00:11:37,139 --> 00:11:41,970
was you know if you want to test drive

00:11:39,779 --> 00:11:45,120
founder what are you doing

00:11:41,970 --> 00:11:46,889
like do you set up a local deaf

00:11:45,120 --> 00:11:48,839
environment like if in case you're a

00:11:46,889 --> 00:11:51,959
product manager or just evaluating

00:11:48,839 --> 00:11:54,449
potential a news platform so we said we

00:11:51,959 --> 00:11:56,370
want to simplify this process thunder

00:11:54,449 --> 00:11:58,170
demo is about just filling out a form

00:11:56,370 --> 00:12:00,540
and then you are entering a checkout

00:11:58,170 --> 00:12:02,610
process on platform message that is

00:12:00,540 --> 00:12:04,740
basically triggering a complete install

00:12:02,610 --> 00:12:06,810
you're owning your own environment you

00:12:04,740 --> 00:12:09,899
can promote it you can keep it for free

00:12:06,810 --> 00:12:13,199
30 days and afterwards you can decide to

00:12:09,899 --> 00:12:14,959
keep it promoted to standard release it

00:12:13,199 --> 00:12:18,029
for sure

00:12:14,959 --> 00:12:20,310
sounder is still not a product that is

00:12:18,029 --> 00:12:20,860
like you will not go life the day after

00:12:20,310 --> 00:12:22,120
you still

00:12:20,860 --> 00:12:24,730
themeing so it's something

00:12:22,120 --> 00:12:28,690
out-of-the-box perfect seemed product

00:12:24,730 --> 00:12:31,270
but at least we removed the barrier to

00:12:28,690 --> 00:12:35,770
test it and we allowed them to keep it

00:12:31,270 --> 00:12:37,480
easily and we added some special treat

00:12:35,770 --> 00:12:39,490
for speed up of the installation from

00:12:37,480 --> 00:12:41,020
from the database dump instead of the

00:12:39,490 --> 00:12:44,980
regular installation profile that would

00:12:41,020 --> 00:12:49,840
take too long Pacifica tweaks here and

00:12:44,980 --> 00:12:52,390
then like beyond that for us we are

00:12:49,840 --> 00:12:55,180
using BOTS for instance we have we have

00:12:52,390 --> 00:12:58,750
a like a boat address we're just adding

00:12:55,180 --> 00:13:00,760
it as a user and if you add it it starts

00:12:58,750 --> 00:13:05,020
does a daily snapshot or something

00:13:00,760 --> 00:13:08,050
the folks but at least it's an

00:13:05,020 --> 00:13:10,810
interesting thing there through the API

00:13:08,050 --> 00:13:12,430
you can discover the project you know

00:13:10,810 --> 00:13:14,530
and you can implement boats that are

00:13:12,430 --> 00:13:17,710
using the API to do any kind of

00:13:14,530 --> 00:13:19,720
automation could be a trash export like

00:13:17,710 --> 00:13:22,270
a backup of the system whatever you want

00:13:19,720 --> 00:13:25,150
to do it's really helpful we for the

00:13:22,270 --> 00:13:28,660
population of new projects for instance

00:13:25,150 --> 00:13:31,140
we add our standardized accounts of our

00:13:28,660 --> 00:13:34,690
lead developers to all the platforms and

00:13:31,140 --> 00:13:38,260
we do most of the setup of new projects

00:13:34,690 --> 00:13:40,930
kind of scripted automated and we for

00:13:38,260 --> 00:13:44,230
sure we use the same to iterate over all

00:13:40,930 --> 00:13:48,850
the instances for like thunder demo or

00:13:44,230 --> 00:13:51,600
all these things to deploy updates in an

00:13:48,850 --> 00:13:51,600
automated way

00:13:54,340 --> 00:14:00,539
[Applause]

00:14:04,320 --> 00:14:10,140
right hi there um oops happened the gang

00:14:07,870 --> 00:14:10,140
here

00:14:25,050 --> 00:14:29,650
okay hi

00:14:27,310 --> 00:14:32,680
so I'm money Richard Jones I'm the CTO

00:14:29,650 --> 00:14:35,110
of envy caso in beaker house on these

00:14:32,680 --> 00:14:37,000
slides here we go and we're we're a

00:14:35,110 --> 00:14:40,950
technical partner agency we work with

00:14:37,000 --> 00:14:43,300
with quite large organizations we work

00:14:40,950 --> 00:14:43,840
well you may know me if you've known me

00:14:43,300 --> 00:14:46,090
already

00:14:43,840 --> 00:14:47,920
we were like us previously before we

00:14:46,090 --> 00:14:49,860
joined in Vika so been part of the

00:14:47,920 --> 00:14:53,080
Drupal community for many many years and

00:14:49,860 --> 00:14:56,560
now we're part of a bigger organization

00:14:53,080 --> 00:15:00,900
there's 200 of us across the UK in

00:14:56,560 --> 00:15:03,970
Germany we primarily work in PHP

00:15:00,900 --> 00:15:08,880
symphony drupal of course but also in

00:15:03,970 --> 00:15:08,880
other things like Magento spry and easy

00:15:09,240 --> 00:15:16,330
so yeah when I spoke to Karen about

00:15:12,910 --> 00:15:18,100
participating in a panel today what yeah

00:15:16,330 --> 00:15:21,730
it was very much about what were you

00:15:18,100 --> 00:15:22,750
doing before what are you doing now so I

00:15:21,730 --> 00:15:25,840
just want to talk to you a little bit

00:15:22,750 --> 00:15:29,740
about what we were trying as I cost and

00:15:25,840 --> 00:15:32,440
as MBK as in Vika when we joined so you

00:15:29,740 --> 00:15:34,120
can imagine we had two tech teams one

00:15:32,440 --> 00:15:37,030
coming from a pure Drupal background one

00:15:34,120 --> 00:15:38,710
coming from a multiple PHP background so

00:15:37,030 --> 00:15:43,320
we were doing all sorts of things and

00:15:38,710 --> 00:15:45,760
the ICO seemed a very very integral VM

00:15:43,320 --> 00:15:49,360
as if we just have a base thing which is

00:15:45,760 --> 00:15:51,070
a really great solution so we had lots

00:15:49,360 --> 00:15:52,300
of vagrant VMs and that's all for

00:15:51,070 --> 00:15:53,020
different types of projects and that

00:15:52,300 --> 00:15:54,880
sort of thing

00:15:53,020 --> 00:15:56,980
the envy team had a slightly different

00:15:54,880 --> 00:15:59,140
approach they managed their own vagrant

00:15:56,980 --> 00:16:02,260
machines and VMs because I had much more

00:15:59,140 --> 00:16:03,580
ops capability than than we did and they

00:16:02,260 --> 00:16:06,060
had their own processes as they

00:16:03,580 --> 00:16:08,080
developed for building new pro new

00:16:06,060 --> 00:16:11,290
versions of sites from database

00:16:08,080 --> 00:16:14,230
snapshots and this sort of thing so we

00:16:11,290 --> 00:16:17,500
had some managed hosting we had some

00:16:14,230 --> 00:16:20,670
client self hosting we had some stuff

00:16:17,500 --> 00:16:24,160
with that we're and we had some DIY

00:16:20,670 --> 00:16:27,040
local development kind of stuff so we

00:16:24,160 --> 00:16:29,340
were very much all over the place no

00:16:27,040 --> 00:16:31,510
real consistency of approach and

00:16:29,340 --> 00:16:32,560
obviously when you're merging companies

00:16:31,510 --> 00:16:34,660
together

00:16:32,560 --> 00:16:36,370
that's inevitable you know it would be

00:16:34,660 --> 00:16:37,899
very lucky if you ended up merging with

00:16:36,370 --> 00:16:42,430
a company that that happen to do the

00:16:37,899 --> 00:16:45,129
same things as you so as part of my role

00:16:42,430 --> 00:16:46,540
as Alex II chair of the group what I

00:16:45,129 --> 00:16:50,680
needed to do is try and bring

00:16:46,540 --> 00:16:52,540
consistency the way we operate with this

00:16:50,680 --> 00:16:54,970
many engineers is that we often have to

00:16:52,540 --> 00:16:56,379
bring we have to move people around we

00:16:54,970 --> 00:16:59,319
have to move people between teams

00:16:56,379 --> 00:17:01,029
whether it be covering holiday or if a

00:16:59,319 --> 00:17:03,189
team is ramping up we might need to swap

00:17:01,029 --> 00:17:06,220
someone in and the most important thing

00:17:03,189 --> 00:17:08,439
for us is consistency so we can't have

00:17:06,220 --> 00:17:10,780
someone spending two days getting

00:17:08,439 --> 00:17:12,640
themselves set up so we're really

00:17:10,780 --> 00:17:14,650
looking for consistency of approach

00:17:12,640 --> 00:17:16,870
making sure that you can switch from one

00:17:14,650 --> 00:17:18,069
project to another and know exactly what

00:17:16,870 --> 00:17:20,439
you're doing you don't have to learn

00:17:18,069 --> 00:17:21,429
something new of course that you're

00:17:20,439 --> 00:17:22,839
gonna have to learn something new if

00:17:21,429 --> 00:17:24,909
you're switching between technology and

00:17:22,839 --> 00:17:26,650
we don't ask people to do that very

00:17:24,909 --> 00:17:29,289
often I certainly don't switch from

00:17:26,650 --> 00:17:31,510
Drupal to Magento overnight and so we do

00:17:29,289 --> 00:17:33,340
have specialist engineers but really

00:17:31,510 --> 00:17:35,440
what we were trying to do is improve

00:17:33,340 --> 00:17:37,210
that onboarding time making sure that we

00:17:35,440 --> 00:17:38,590
can get a new engineer either a new

00:17:37,210 --> 00:17:42,120
starter or someone moving between

00:17:38,590 --> 00:17:46,240
projects as quickly as we possibly could

00:17:42,120 --> 00:17:48,789
we're also traditionally you have this

00:17:46,240 --> 00:17:51,010
sort of dev stage live kind of set up

00:17:48,789 --> 00:17:53,289
whether that be through one of the other

00:17:51,010 --> 00:17:56,159
providers or as the clients provided for

00:17:53,289 --> 00:17:58,360
us sometimes there might be local

00:17:56,159 --> 00:17:59,770
staging hopefully you have some sort of

00:17:58,360 --> 00:18:02,649
staging a new IT environment available

00:17:59,770 --> 00:18:05,080
to you and of course production but the

00:18:02,649 --> 00:18:08,530
way we wanted to work and the way we do

00:18:05,080 --> 00:18:11,110
work is very much about you know true

00:18:08,530 --> 00:18:12,880
true agile development where you are

00:18:11,110 --> 00:18:15,870
trying to get each individual feature

00:18:12,880 --> 00:18:18,220
out there into QA so we needed a way to

00:18:15,870 --> 00:18:21,100
make that possible so that we can

00:18:18,220 --> 00:18:22,799
actually have most of it our own QA team

00:18:21,100 --> 00:18:25,539
plus the client and the product owner

00:18:22,799 --> 00:18:27,730
looking at specific features in

00:18:25,539 --> 00:18:29,280
development and what we were happening

00:18:27,730 --> 00:18:32,049
what was happening to us before is

00:18:29,280 --> 00:18:33,899
everyone's competing first the staging

00:18:32,049 --> 00:18:36,309
environment and everyone's getting

00:18:33,899 --> 00:18:37,720
confused banging into each other and no

00:18:36,309 --> 00:18:39,940
one's quite sure what's going on so you

00:18:37,720 --> 00:18:41,710
end up in this scenario where you only

00:18:39,940 --> 00:18:44,370
refresh the staging environment once a

00:18:41,710 --> 00:18:47,250
week and that's not really fast enough

00:18:44,370 --> 00:18:49,350
so we needed isolated QA for our teams

00:18:47,250 --> 00:18:51,990
and we also needed representative data

00:18:49,350 --> 00:18:54,779
so we needed to make sure that what we

00:18:51,990 --> 00:18:57,840
were seeing in QA was actually real

00:18:54,779 --> 00:19:00,360
sanitized obviously but making sure that

00:18:57,840 --> 00:19:04,049
is real data that that's useful and

00:19:00,360 --> 00:19:07,380
testable so that that was my analysis of

00:19:04,049 --> 00:19:10,620
what we actually needed to achieve so we

00:19:07,380 --> 00:19:12,870
brought what we've known platform since

00:19:10,620 --> 00:19:16,950
the very beginning and we bought 15

00:19:12,870 --> 00:19:18,600
Westford on board very early however in

00:19:16,950 --> 00:19:20,880
the recently we've been working with

00:19:18,600 --> 00:19:23,520
some large organization so you may have

00:19:20,880 --> 00:19:25,409
seen that we launched the Arsenal

00:19:23,520 --> 00:19:28,350
website very recently that was on

00:19:25,409 --> 00:19:30,659
platform and we've also very recently

00:19:28,350 --> 00:19:31,950
launched all of the gap international

00:19:30,659 --> 00:19:34,320
sites around the world and I'll show you

00:19:31,950 --> 00:19:36,029
a little bit more detail of that so

00:19:34,320 --> 00:19:37,620
these are sort of enterprise level sites

00:19:36,029 --> 00:19:39,210
that we were able to put out there and

00:19:37,620 --> 00:19:41,220
obviously you can imagine something like

00:19:39,210 --> 00:19:44,190
Arsenal has very peaky traffic

00:19:41,220 --> 00:19:45,929
especially on match days so it's very

00:19:44,190 --> 00:19:48,510
important for us to to work with a

00:19:45,929 --> 00:19:50,460
partner like like platform to be able to

00:19:48,510 --> 00:19:56,159
get this thing up and stable and ready

00:19:50,460 --> 00:19:59,279
to cope with those those Peaks so where

00:19:56,159 --> 00:20:01,980
we've ended up with today is we've now

00:19:59,279 --> 00:20:03,690
got a developer workflow that is exactly

00:20:01,980 --> 00:20:06,179
what we wanted so we've got a developer

00:20:03,690 --> 00:20:08,159
workflow where we can make a new branch

00:20:06,179 --> 00:20:10,890
at the moment someone does a pull

00:20:08,159 --> 00:20:13,500
request in github then it immediately

00:20:10,890 --> 00:20:15,240
builds the environment then we get

00:20:13,500 --> 00:20:18,419
posted a notification in slack that

00:20:15,240 --> 00:20:20,279
that's happened the QA or the devs can

00:20:18,419 --> 00:20:22,289
do a peer review of that look at it

00:20:20,279 --> 00:20:24,419
properly and truly test it with real

00:20:22,289 --> 00:20:25,679
data so that that's where we've got to

00:20:24,419 --> 00:20:27,960
and that's exactly what we were looking

00:20:25,679 --> 00:20:30,149
for we've also managed to plumbing all

00:20:27,960 --> 00:20:32,970
of our automated testing like scrutinise

00:20:30,149 --> 00:20:36,360
ER and these other these other tools and

00:20:32,970 --> 00:20:39,000
they seem to vary but scrutinize that we

00:20:36,360 --> 00:20:41,070
have at the moment and we're able to use

00:20:39,000 --> 00:20:43,559
these of the hooks within github to

00:20:41,070 --> 00:20:44,730
deploy all of these things and the other

00:20:43,559 --> 00:20:46,980
thing that was really important because

00:20:44,730 --> 00:20:50,549
we we're not a pure Drupal agency

00:20:46,980 --> 00:20:53,460
anymore and we are using easy platform

00:20:50,549 --> 00:20:56,010
which is another PHP CMS we are using

00:20:53,460 --> 00:20:57,630
Magento we're using Speicher but by

00:20:56,010 --> 00:20:59,460
having platform

00:20:57,630 --> 00:21:01,470
allows us to actually have a consistency

00:20:59,460 --> 00:21:03,510
of that experience we don't have to do

00:21:01,470 --> 00:21:05,610
Magento stuff over here an easy stuff

00:21:03,510 --> 00:21:07,530
over here so that was a real benefit to

00:21:05,610 --> 00:21:09,060
us and probably wasn't one we we

00:21:07,530 --> 00:21:10,500
anticipated at the beginning but as

00:21:09,060 --> 00:21:12,420
platformers introduced these new

00:21:10,500 --> 00:21:16,260
partnerships it's been a really good

00:21:12,420 --> 00:21:20,850
positive for us we've also been able to

00:21:16,260 --> 00:21:23,370
do some quite complex stuff we've got no

00:21:20,850 --> 00:21:26,640
js' stuff working with gap which i think

00:21:23,370 --> 00:21:28,320
is the areas and so this is just an

00:21:26,640 --> 00:21:31,560
example of something I wanted to show

00:21:28,320 --> 00:21:33,330
you and what we've done with gap is this

00:21:31,560 --> 00:21:35,550
is not gap calm this is not like the

00:21:33,330 --> 00:21:38,670
prime site this is all of the other

00:21:35,550 --> 00:21:39,900
stuff gap have a model of partner model

00:21:38,670 --> 00:21:41,970
around the world so they have multiple

00:21:39,900 --> 00:21:47,150
sites in this case we are we're dealing

00:21:41,970 --> 00:21:49,530
with that 25 sites but they they have a

00:21:47,150 --> 00:21:51,840
centralized content model so what we've

00:21:49,530 --> 00:21:55,050
done is we've on platform SH we've built

00:21:51,840 --> 00:21:57,120
the content hub in the middle so the

00:21:55,050 --> 00:21:59,730
marketing team in the u k-- in the UK

00:21:57,120 --> 00:22:02,130
build content but in each season and

00:21:59,730 --> 00:22:04,080
then in the middle of ring they're also

00:22:02,130 --> 00:22:06,180
sorry it's too small to read but you can

00:22:04,080 --> 00:22:08,910
go out there and we can deploy content

00:22:06,180 --> 00:22:10,380
out to the different UAT and feature

00:22:08,910 --> 00:22:13,980
branches and staging as I was just

00:22:10,380 --> 00:22:15,300
mentioning including training and then

00:22:13,980 --> 00:22:18,840
the final part of the puzzle we were

00:22:15,300 --> 00:22:21,390
able to put nodejs in place which what

00:22:18,840 --> 00:22:23,430
it basically doing is interrogating the

00:22:21,390 --> 00:22:25,860
content hub site and selectively

00:22:23,430 --> 00:22:28,920
publishing out to all of these different

00:22:25,860 --> 00:22:30,570
country sites now the reason we use the

00:22:28,920 --> 00:22:32,490
node.js in this case is because you have

00:22:30,570 --> 00:22:35,310
to be a bit clever about what content

00:22:32,490 --> 00:22:36,960
goes to what site sometimes some of the

00:22:35,310 --> 00:22:39,030
imagery is not appropriate for certain

00:22:36,960 --> 00:22:40,830
regions but more importantly sometimes

00:22:39,030 --> 00:22:43,350
the season is the other way up so we

00:22:40,830 --> 00:22:45,360
don't want to push summer content out to

00:22:43,350 --> 00:22:48,840
a winter season country at this point in

00:22:45,360 --> 00:22:50,280
time so this is the type of stuff we've

00:22:48,840 --> 00:22:52,590
been able to build the platform we were

00:22:50,280 --> 00:22:55,040
also able to give each of these

00:22:52,590 --> 00:22:58,530
countries their own individual platform

00:22:55,040 --> 00:23:00,480
account and login and that means that

00:22:58,530 --> 00:23:02,490
they've got control they've got control

00:23:00,480 --> 00:23:04,970
of their own hosting as a partner but

00:23:02,490 --> 00:23:07,110
we've got control with gap centrally

00:23:04,970 --> 00:23:08,340
making sure it's up to date and managed

00:23:07,110 --> 00:23:10,590
and we were able to use things like

00:23:08,340 --> 00:23:11,720
there there's a command line multi tool

00:23:10,590 --> 00:23:14,330
that allows us

00:23:11,720 --> 00:23:16,850
push commands out simultaneously to all

00:23:14,330 --> 00:23:21,890
these sites that have been a real real

00:23:16,850 --> 00:23:25,190
godsend to us so where we go from here

00:23:21,890 --> 00:23:26,809
well where we are right now we always

00:23:25,190 --> 00:23:28,610
try and present platform as an option

00:23:26,809 --> 00:23:31,190
because for us again this consistency

00:23:28,610 --> 00:23:34,520
and I would much rather be doing this

00:23:31,190 --> 00:23:35,120
than building something with AWS or

00:23:34,520 --> 00:23:39,740
something like that

00:23:35,120 --> 00:23:41,510
we do have DevOps in-house but I don't

00:23:39,740 --> 00:23:45,350
have enough of them to be maintaining

00:23:41,510 --> 00:23:46,669
huge arrays of custom hosting so for us

00:23:45,350 --> 00:23:50,179
this is this is the right balance

00:23:46,669 --> 00:23:52,250
between you know as I've put the bottom

00:23:50,179 --> 00:23:55,820
there platform 8 platform SATs are

00:23:52,250 --> 00:23:57,860
slightly opinionated but not completely

00:23:55,820 --> 00:24:01,460
restrictive so we've got some options as

00:23:57,860 --> 00:24:04,159
how we set things up but there's not

00:24:01,460 --> 00:24:06,080
like infinite options so I actually

00:24:04,159 --> 00:24:07,580
quite like that because it means that I

00:24:06,080 --> 00:24:08,840
can I know I can go from one project to

00:24:07,580 --> 00:24:12,380
another and the things we're deploying

00:24:08,840 --> 00:24:14,659
are going to work so we know we can put

00:24:12,380 --> 00:24:16,190
something completely custom and we can

00:24:14,659 --> 00:24:18,679
start from a clean sheet and we can

00:24:16,190 --> 00:24:21,110
build them whatever they like but for me

00:24:18,679 --> 00:24:24,080
it's about helping our DevOps and our

00:24:21,110 --> 00:24:25,460
engineers internally to say that's not

00:24:24,080 --> 00:24:27,559
necessarily the best approach for the

00:24:25,460 --> 00:24:30,020
client where's the budget best invested

00:24:27,559 --> 00:24:33,110
for us the budget is best invested in

00:24:30,020 --> 00:24:35,450
building the unique features of building

00:24:33,110 --> 00:24:38,330
that what we call the business value and

00:24:35,450 --> 00:24:41,990
not so much on spending time tinkering

00:24:38,330 --> 00:24:44,679
with hosting but that's just me and so

00:24:41,990 --> 00:24:47,000
sometimes custom solutions are required

00:24:44,679 --> 00:24:48,169
we have looked at Cuba Nettie's and I

00:24:47,000 --> 00:24:50,120
think that's probably a conversation

00:24:48,169 --> 00:24:52,400
from another day sometimes things like

00:24:50,120 --> 00:24:53,179
sight factory from a tree or the right

00:24:52,400 --> 00:24:55,760
thing to do

00:24:53,179 --> 00:24:58,100
and that most of the time we find that

00:24:55,760 --> 00:25:00,860
platform is is in that sweet spot it's

00:24:58,100 --> 00:25:03,890
it's basically what we need and it gives

00:25:00,860 --> 00:25:06,260
us that value in using a standard

00:25:03,890 --> 00:25:10,309
platform so for the types of things that

00:25:06,260 --> 00:25:13,510
we do that's me if you got any questions

00:25:10,309 --> 00:25:13,510
feel free to ask afterwards

00:25:16,910 --> 00:25:21,510
yeah actually one thing Karen asked me

00:25:19,920 --> 00:25:25,140
to do was to come up with some solid

00:25:21,510 --> 00:25:26,640
numbers which I haven't done I haven't

00:25:25,140 --> 00:25:28,980
got anything that says we've reduced

00:25:26,640 --> 00:25:31,680
that dev time by 80% but I did speak to

00:25:28,980 --> 00:25:33,930
Steve just now who is the who's the

00:25:31,680 --> 00:25:35,220
project leader on Arsenal and the one

00:25:33,930 --> 00:25:37,350
thing he said to me is it's okay we

00:25:35,220 --> 00:25:42,000
deploy on Fridays now so maybe that's

00:25:37,350 --> 00:25:45,900
good enough so I'd like to introduce

00:25:42,000 --> 00:25:50,360
Barry now from real life digital we have

00:25:45,900 --> 00:25:52,530
numbers somewhere in here so hopefully

00:25:50,360 --> 00:25:54,180
hopefully they mirror similar to what

00:25:52,530 --> 00:25:56,760
you've what you've got so I'm Barry

00:25:54,180 --> 00:26:00,530
Fisher from real life digital East

00:25:56,760 --> 00:26:03,990
Hampshire in the UK our client base is

00:26:00,530 --> 00:26:05,640
it ranges from small to medium-sized

00:26:03,990 --> 00:26:08,070
manufacturing sites up to blue chip

00:26:05,640 --> 00:26:11,940
companies one of our clients are Kings

00:26:08,070 --> 00:26:14,640
it's quite this is M&S food we've been

00:26:11,940 --> 00:26:17,370
doing mostly Drupal development for the

00:26:14,640 --> 00:26:19,170
past ten years but we're starting to

00:26:17,370 --> 00:26:19,800
look at other different platforms and

00:26:19,170 --> 00:26:22,650
nodejs

00:26:19,800 --> 00:26:25,260
using view using front-end components

00:26:22,650 --> 00:26:27,540
and different api's and things so I'll

00:26:25,260 --> 00:26:31,470
get onto those in a bit but I thought

00:26:27,540 --> 00:26:33,180
what might be useful is to just

00:26:31,470 --> 00:26:37,050
highlight where we were coming from

00:26:33,180 --> 00:26:38,400
before we started using platform SH and

00:26:37,050 --> 00:26:40,020
it's important to emphasize that we

00:26:38,400 --> 00:26:42,390
don't have a dedicated DevOps role

00:26:40,020 --> 00:26:44,790
because we're quite a small team so it

00:26:42,390 --> 00:26:46,680
essentially landed in in my lap usually

00:26:44,790 --> 00:26:50,580
when we needed to fire up servers and

00:26:46,680 --> 00:26:53,160
that would be done in a fairly haphazard

00:26:50,580 --> 00:26:55,710
way very much DIY we might have one

00:26:53,160 --> 00:26:57,690
client that was on a Rackspace cloud we

00:26:55,710 --> 00:27:00,630
have another one that's using AWS that

00:26:57,690 --> 00:27:02,730
we didn't manage directly we would have

00:27:00,630 --> 00:27:06,060
someone digitalocean we would just be

00:27:02,730 --> 00:27:07,500
all over the place and shared hosting if

00:27:06,060 --> 00:27:10,440
we're going back far enough but

00:27:07,500 --> 00:27:15,000
obviously nobody uses shared hosting for

00:27:10,440 --> 00:27:17,070
any serious sites anymore so VPS we're

00:27:15,000 --> 00:27:18,570
trying to get as much as we can onto

00:27:17,070 --> 00:27:21,420
platform now for the reasons that

00:27:18,570 --> 00:27:22,980
Richard mentioned in that we don't like

00:27:21,420 --> 00:27:25,260
the variance between the different

00:27:22,980 --> 00:27:26,130
projects and the fact that when if you

00:27:25,260 --> 00:27:28,049
put a project

00:27:26,130 --> 00:27:29,250
for a couple of months or so and you

00:27:28,049 --> 00:27:31,020
come back to it and you need to make a

00:27:29,250 --> 00:27:33,809
tweak based on what the clients asking

00:27:31,020 --> 00:27:35,220
for you don't want to sort of have to

00:27:33,809 --> 00:27:39,919
think well how is that done again and

00:27:35,220 --> 00:27:42,780
how how do we have things configured so

00:27:39,919 --> 00:27:44,880
previously we were using ansible that's

00:27:42,780 --> 00:27:47,130
where we got up to before we started

00:27:44,880 --> 00:27:48,750
using platform SH to try to automate

00:27:47,130 --> 00:27:51,299
some of those processes because it would

00:27:48,750 --> 00:27:53,100
take us it would still take us half a

00:27:51,299 --> 00:27:54,419
day to a day with the ansible scripts in

00:27:53,100 --> 00:27:56,130
place just to make sure things were

00:27:54,419 --> 00:27:57,539
working and then at the end of the day

00:27:56,130 --> 00:27:59,610
you would step back and just hope that

00:27:57,539 --> 00:28:02,100
everything had executed in the same way

00:27:59,610 --> 00:28:04,260
that it happened previously so that that

00:28:02,100 --> 00:28:07,500
confidence wasn't quite there even with

00:28:04,260 --> 00:28:09,900
having ansible which should have been

00:28:07,500 --> 00:28:11,789
automating those things for us and then

00:28:09,900 --> 00:28:13,020
we had say members that would come onto

00:28:11,789 --> 00:28:16,470
the team and then we would need to

00:28:13,020 --> 00:28:19,169
manage the SSH keys and secrets

00:28:16,470 --> 00:28:21,809
management do we give them password for

00:28:19,169 --> 00:28:24,570
this environment or how does it work and

00:28:21,809 --> 00:28:26,940
that's become a lot simpler now as part

00:28:24,570 --> 00:28:28,919
of the development work itself the whole

00:28:26,940 --> 00:28:30,390
works on my machine thing became a bit

00:28:28,919 --> 00:28:34,230
of a problem because we had developers

00:28:30,390 --> 00:28:35,909
that were working on Mac one was working

00:28:34,230 --> 00:28:37,500
on Windows at the time and the rest of

00:28:35,909 --> 00:28:40,940
us were using combination of Mac and

00:28:37,500 --> 00:28:43,140
Linux and that left a lot of sort of

00:28:40,940 --> 00:28:44,990
metaphorical meta work sort of not

00:28:43,140 --> 00:28:47,610
actually providing value to the client

00:28:44,990 --> 00:28:50,970
we were doing things that needed to be

00:28:47,610 --> 00:28:53,400
done for servers for all of the things

00:28:50,970 --> 00:28:55,890
that the client doesn't see needs but

00:28:53,400 --> 00:28:58,620
doesn't appreciate so we were also

00:28:55,890 --> 00:29:00,870
finding the the retainers that we have

00:28:58,620 --> 00:29:03,059
for clients were being used up for this

00:29:00,870 --> 00:29:04,860
stuff that they never see so then

00:29:03,059 --> 00:29:06,600
questions are essentially raised about

00:29:04,860 --> 00:29:09,120
well you know where is that four hours

00:29:06,600 --> 00:29:11,010
gone this month and we've essentially

00:29:09,120 --> 00:29:13,500
reduced that to zero now for using

00:29:11,010 --> 00:29:14,850
platform so the result of all of this is

00:29:13,500 --> 00:29:18,150
that clients were paying for things that

00:29:14,850 --> 00:29:22,110
they don't understand or care about so

00:29:18,150 --> 00:29:23,490
we look to other other past services you

00:29:22,110 --> 00:29:26,520
can see them all down in the four years

00:29:23,490 --> 00:29:28,049
there's plenty to choose from but I feel

00:29:26,520 --> 00:29:29,850
that on platform is sort of ahead of the

00:29:28,049 --> 00:29:33,409
curve in terms of sort of breaking the

00:29:29,850 --> 00:29:35,700
mold with the dev stage prod approach

00:29:33,409 --> 00:29:37,950
because essentially if you've got a new

00:29:35,700 --> 00:29:39,270
ticket or if you've got a new piece of

00:29:37,950 --> 00:29:41,580
work that needs to be done

00:29:39,270 --> 00:29:43,050
you just get branch your code and then

00:29:41,580 --> 00:29:44,820
essentially a new environment can be

00:29:43,050 --> 00:29:47,310
created really easily and we've reduced

00:29:44,820 --> 00:29:49,290
that down from if we needed to create a

00:29:47,310 --> 00:29:50,970
new environment on a VPS typically that

00:29:49,290 --> 00:29:52,920
would then be something that comes to me

00:29:50,970 --> 00:29:54,780
I would then need to create it

00:29:52,920 --> 00:29:56,250
check the massage the ansible scripts

00:29:54,780 --> 00:29:57,470
and you could be talking a few hours

00:29:56,250 --> 00:29:59,730
just to make sure that it's all

00:29:57,470 --> 00:30:01,710
essentially ready in there so it was

00:29:59,730 --> 00:30:05,670
quite a heavyweight process there is an

00:30:01,710 --> 00:30:07,110
expensive branching process so now it's

00:30:05,670 --> 00:30:09,690
just essentially git branch that's

00:30:07,110 --> 00:30:11,100
created in a in a matter of a couple of

00:30:09,690 --> 00:30:13,770
minutes and then essentially we can then

00:30:11,100 --> 00:30:15,900
UAT the clients can go on to that

00:30:13,770 --> 00:30:17,400
environment and check to see what's

00:30:15,900 --> 00:30:20,460
happening in there we can then merge it

00:30:17,400 --> 00:30:22,080
back in some of the larger projects we

00:30:20,460 --> 00:30:23,910
still have a staging branch but they're

00:30:22,080 --> 00:30:25,950
just they're easy to spin up and set

00:30:23,910 --> 00:30:27,510
down and synchronize the the data

00:30:25,950 --> 00:30:29,700
between the different environments and

00:30:27,510 --> 00:30:32,700
making sure we get the latest live data

00:30:29,700 --> 00:30:34,160
and synced across is usually quite an

00:30:32,700 --> 00:30:38,150
important thing when we're going through

00:30:34,160 --> 00:30:38,150
the tickets that we're working on

00:30:39,470 --> 00:30:43,800
another situation that some of us may

00:30:42,150 --> 00:30:45,360
have come across is that if you're going

00:30:43,800 --> 00:30:46,290
through the clients IT department

00:30:45,360 --> 00:30:47,970
certainly if you're working with

00:30:46,290 --> 00:30:50,010
blue-chip companies raising a ticket to

00:30:47,970 --> 00:30:52,920
say we need to install Redis or if we

00:30:50,010 --> 00:30:54,360
need to install or just make a small

00:30:52,920 --> 00:30:56,190
configuration change that could

00:30:54,360 --> 00:30:59,520
essentially be weeks and that's not an

00:30:56,190 --> 00:31:02,390
exaggeration we could be waiting really

00:30:59,520 --> 00:31:04,980
long time just to make trivial changes

00:31:02,390 --> 00:31:06,900
so we got to the point where we looked

00:31:04,980 --> 00:31:08,700
at some of the other providers and it

00:31:06,900 --> 00:31:12,150
just wasn't feeling like it was giving

00:31:08,700 --> 00:31:13,260
us the the same degree of control that

00:31:12,150 --> 00:31:14,670
we would have because obviously going

00:31:13,260 --> 00:31:17,340
with a past service you give up a

00:31:14,670 --> 00:31:19,740
certain degree of control about what you

00:31:17,340 --> 00:31:21,810
can customize what binaries that you can

00:31:19,740 --> 00:31:23,880
install and how you can go about

00:31:21,810 --> 00:31:26,070
configuring things how you're used to

00:31:23,880 --> 00:31:28,380
having them in a sort of dedicated space

00:31:26,070 --> 00:31:30,540
so that's something that essentially

00:31:28,380 --> 00:31:33,720
made me quite nervous sort of moving to

00:31:30,540 --> 00:31:37,530
and investing quite heavily in just one

00:31:33,720 --> 00:31:40,050
particular platform was not having that

00:31:37,530 --> 00:31:41,670
degree of control and I'm glad to say we

00:31:40,050 --> 00:31:44,040
haven't come across anything that we

00:31:41,670 --> 00:31:47,780
haven't been able to do certainly with

00:31:44,040 --> 00:31:47,780
the help that we've had from platform Sh

00:31:47,880 --> 00:31:52,770
so what we actually needed was a

00:31:51,330 --> 00:31:54,179
platform to rule them all we needed the

00:31:52,770 --> 00:31:56,520
flexibility we need to be able to

00:31:54,179 --> 00:31:58,950
install things as we needed to we needed

00:31:56,520 --> 00:32:00,679
reliability testability security all of

00:31:58,950 --> 00:32:06,000
the things that end in T y essentially

00:32:00,679 --> 00:32:07,230
and we were standing think well what

00:32:06,000 --> 00:32:08,549
about the other technology that's out

00:32:07,230 --> 00:32:11,039
there as well so we start we're starting

00:32:08,549 --> 00:32:13,110
to look at nodejs view and view

00:32:11,039 --> 00:32:15,120
components and how we might be able to

00:32:13,110 --> 00:32:19,110
make the most of what the front-end

00:32:15,120 --> 00:32:22,890
JavaScript world is is providing us that

00:32:19,110 --> 00:32:27,210
can provide us with so platform provides

00:32:22,890 --> 00:32:30,510
support for MongoDB elasticsearch solar

00:32:27,210 --> 00:32:33,140
all things that were either using today

00:32:30,510 --> 00:32:35,820
or will essentially key parts of the

00:32:33,140 --> 00:32:37,409
stack that we're looking at using in the

00:32:35,820 --> 00:32:45,450
near future certainly in the next six to

00:32:37,409 --> 00:32:46,470
twelve months I think that pretty much

00:32:45,450 --> 00:32:48,900
sums up what I've got on there

00:32:46,470 --> 00:32:49,950
essentially so some providers that

00:32:48,900 --> 00:32:52,409
you'll find that they'll force you to

00:32:49,950 --> 00:32:55,559
use certain caching back-end so we'd

00:32:52,409 --> 00:32:57,480
already started for this blue-chip cam

00:32:55,559 --> 00:32:59,669
particular blue chip company we'd

00:32:57,480 --> 00:33:01,409
already built a lot of our services

00:32:59,669 --> 00:33:04,049
around Redis which is a caching

00:33:01,409 --> 00:33:06,600
mechanism which just comes out of the

00:33:04,049 --> 00:33:08,429
box and in terms of setting up Redis on

00:33:06,600 --> 00:33:09,750
platform SH if those that are not

00:33:08,429 --> 00:33:11,850
familiar with it it's essentially just

00:33:09,750 --> 00:33:13,440
editing a config file putting a line

00:33:11,850 --> 00:33:17,640
into this essentially says I would like

00:33:13,440 --> 00:33:20,640
Redis and then get deploy or git push

00:33:17,640 --> 00:33:21,780
sorry and away it goes it rebuilds and

00:33:20,640 --> 00:33:23,460
then it's then available to your

00:33:21,780 --> 00:33:25,289
application and then it just comes down

00:33:23,460 --> 00:33:28,140
to a case of enabling the relevant

00:33:25,289 --> 00:33:30,480
modules in Drupal so it really is easy

00:33:28,140 --> 00:33:31,830
just to fire up those those things and

00:33:30,480 --> 00:33:33,870
not really give it too much thought you

00:33:31,830 --> 00:33:36,659
can just consume those services that you

00:33:33,870 --> 00:33:38,460
need we're also looking at setting

00:33:36,659 --> 00:33:40,110
environment variables which is is quite

00:33:38,460 --> 00:33:42,030
useful if you're doing certain things

00:33:40,110 --> 00:33:44,220
like indicators on your website to

00:33:42,030 --> 00:33:46,289
indicate whether you're on the dev

00:33:44,220 --> 00:33:47,850
version the staged version essentially

00:33:46,289 --> 00:33:49,409
you want a big red banner to say this is

00:33:47,850 --> 00:33:51,650
the live version because quite often as

00:33:49,409 --> 00:33:53,640
developers we can have several tabs open

00:33:51,650 --> 00:33:55,260
and you might want to make sure that

00:33:53,640 --> 00:33:59,010
there's a strong visual indicator to say

00:33:55,260 --> 00:34:01,020
you're actually on the live site here so

00:33:59,010 --> 00:34:04,230
we needed the moon on the stick

00:34:01,020 --> 00:34:05,280
and it was it was quite big ask so we

00:34:04,230 --> 00:34:07,800
went back to the old ways of doing

00:34:05,280 --> 00:34:10,879
things until we came across platform so

00:34:07,800 --> 00:34:12,990
our introduction to platform SH was

00:34:10,879 --> 00:34:16,649
continent remember exactly how we came

00:34:12,990 --> 00:34:18,360
across it but to start I decided to give

00:34:16,649 --> 00:34:21,270
it a go because it was getting quite

00:34:18,360 --> 00:34:26,990
painful going through all the DevOps I

00:34:21,270 --> 00:34:26,990
might be able to do it yes there is it

00:34:34,960 --> 00:34:40,450
so one thing I will say is really quick

00:34:37,720 --> 00:34:44,489
to get on board with platform in that

00:34:40,450 --> 00:34:47,289
the documentation is extremely good

00:34:44,489 --> 00:34:49,059
the majority of getting up and running

00:34:47,289 --> 00:34:50,799
with platform is understanding the

00:34:49,059 --> 00:34:52,089
configuration file so don't have an

00:34:50,799 --> 00:34:54,970
example to show you but on the

00:34:52,089 --> 00:34:56,950
documentation you just it's it's

00:34:54,970 --> 00:34:59,109
declarative in that you say this is what

00:34:56,950 --> 00:35:01,210
my environment looks like this is the

00:34:59,109 --> 00:35:03,670
PHP version I want to use this is the

00:35:01,210 --> 00:35:06,609
version of Redis I want to use I'd like

00:35:03,670 --> 00:35:10,569
to use in my sequel database and there

00:35:06,609 --> 00:35:12,549
are several github examples that you can

00:35:10,569 --> 00:35:15,150
go and grab so it's very easy to get up

00:35:12,549 --> 00:35:18,220
and running and I spent about a day to

00:35:15,150 --> 00:35:20,529
familiarize myself with what the quirks

00:35:18,220 --> 00:35:24,009
were what those specific opinionated

00:35:20,529 --> 00:35:26,319
isms are for for platform and the

00:35:24,009 --> 00:35:28,839
documentation gets you very very far

00:35:26,319 --> 00:35:30,759
look-see 90% of the way and then if

00:35:28,839 --> 00:35:35,489
you've got any extra questions I've

00:35:30,759 --> 00:35:37,869
found the support to be very responsive

00:35:35,489 --> 00:35:39,549
another thing that just sort of pops up

00:35:37,869 --> 00:35:42,640
now and then on the blog post is

00:35:39,549 --> 00:35:44,229
something which I just mentioned let's

00:35:42,640 --> 00:35:45,999
the let's encrypt here which is

00:35:44,229 --> 00:35:46,569
essentially a free SSL certificate

00:35:45,999 --> 00:35:49,599
service

00:35:46,569 --> 00:35:52,509
I saw a blog post come up that says oh

00:35:49,599 --> 00:35:55,769
we're now offering this as a as a matter

00:35:52,509 --> 00:35:59,559
of course and you can just put in your

00:35:55,769 --> 00:36:02,229
routing file that I want to use HTTP and

00:35:59,559 --> 00:36:04,299
then your SSL certificate just appears

00:36:02,229 --> 00:36:07,059
up no it just works it gets renewed it's

00:36:04,299 --> 00:36:09,670
free so it's it's just a case of declare

00:36:07,059 --> 00:36:12,130
I want to secure my site by putting one

00:36:09,670 --> 00:36:17,710
character and s in and everything seems

00:36:12,130 --> 00:36:19,239
to work I like the fact that the fact

00:36:17,710 --> 00:36:24,180
that when you push is essentially a

00:36:19,239 --> 00:36:26,799
fresh build so that would be taking your

00:36:24,180 --> 00:36:28,390
repository doing a composer install

00:36:26,799 --> 00:36:29,859
doing any scripts that you need and

00:36:28,390 --> 00:36:32,710
again you just declare what you want to

00:36:29,859 --> 00:36:33,969
happen in terms of a build and what you

00:36:32,710 --> 00:36:35,829
want to happen on deploy and there's a

00:36:33,969 --> 00:36:37,630
slight variance in those two so I like

00:36:35,829 --> 00:36:40,660
the fact that it rebuilds everything and

00:36:37,630 --> 00:36:42,910
it forces you to use best practices in

00:36:40,660 --> 00:36:45,880
in that and another thing to mention is

00:36:42,910 --> 00:36:50,670
the read-only file system that you get

00:36:45,880 --> 00:36:52,569
for the code so that is essential for

00:36:50,670 --> 00:36:54,819
vulnerabilities that come out like

00:36:52,569 --> 00:36:57,039
Drupal Gaiden is that the codebase is

00:36:54,819 --> 00:36:59,589
essentially not writable you declare

00:36:57,039 --> 00:37:03,880
where your writable areas are and where

00:36:59,589 --> 00:37:05,259
your non writable areas are when we're

00:37:03,880 --> 00:37:06,700
working with teams we may have a

00:37:05,259 --> 00:37:08,769
developer come on and then leave again

00:37:06,700 --> 00:37:10,779
so we just use their public SSH key

00:37:08,769 --> 00:37:15,279
again very easy just do and integrate

00:37:10,779 --> 00:37:17,109
that and we still need to use the tools

00:37:15,279 --> 00:37:19,509
that we would use previously which is

00:37:17,109 --> 00:37:22,299
the arcing tools which synchronizes your

00:37:19,509 --> 00:37:24,369
files between what's on your live server

00:37:22,299 --> 00:37:27,309
and your local and sequel sync which

00:37:24,369 --> 00:37:30,730
synchronizes your databases but a lot of

00:37:27,309 --> 00:37:35,140
that the drush aliases that come with

00:37:30,730 --> 00:37:36,730
the platform essentially set all that up

00:37:35,140 --> 00:37:38,410
for you and then you can just pull down

00:37:36,730 --> 00:37:41,289
so that you make sure on your local copy

00:37:38,410 --> 00:37:42,640
you've always got an up-to-date copy of

00:37:41,289 --> 00:37:45,819
your the site that you're working or the

00:37:42,640 --> 00:37:47,019
issue that you're working on so the

00:37:45,819 --> 00:37:49,450
outcomes of that were that was very

00:37:47,019 --> 00:37:52,240
little onboarding support that we needed

00:37:49,450 --> 00:37:56,559
and and we felt confident in how easy it

00:37:52,240 --> 00:37:58,720
was to get going and the result of this

00:37:56,559 --> 00:38:02,650
was we were spending less time doing

00:37:58,720 --> 00:38:04,180
technical or server maintenance tasks so

00:38:02,650 --> 00:38:05,259
we were happy our clients were happy

00:38:04,180 --> 00:38:07,630
because essentially we've saved

00:38:05,259 --> 00:38:09,579
ourselves time and we've saved our

00:38:07,630 --> 00:38:11,200
client money in from their monthly

00:38:09,579 --> 00:38:12,490
retainer because the way that we our

00:38:11,200 --> 00:38:14,319
business model is is that we have a

00:38:12,490 --> 00:38:18,339
certain amount hours a month allocated

00:38:14,319 --> 00:38:20,289
to a client and that allows us to do

00:38:18,339 --> 00:38:21,730
more to help them so it may be that

00:38:20,289 --> 00:38:23,829
we've got extra features that we might

00:38:21,730 --> 00:38:25,750
be able to bundle in that month or or or

00:38:23,829 --> 00:38:26,980
book in another meeting with them so

00:38:25,750 --> 00:38:28,720
that we can we can help them move

00:38:26,980 --> 00:38:30,190
forward and this helps us stay

00:38:28,720 --> 00:38:31,450
competitive as well because our

00:38:30,190 --> 00:38:35,140
competition are still wrangling with

00:38:31,450 --> 00:38:38,410
these issues so in terms of numbers I

00:38:35,140 --> 00:38:40,089
look back at these I thought they'd look

00:38:38,410 --> 00:38:41,980
over-the-top but just if we can break

00:38:40,089 --> 00:38:44,259
them down a little bit so 80% reduction

00:38:41,980 --> 00:38:48,220
in overall total cost of ownership even

00:38:44,259 --> 00:38:49,750
for a basic site so like I mentioned

00:38:48,220 --> 00:38:52,000
about the client support is the amount

00:38:49,750 --> 00:38:53,259
of time that we wasted on doing DevOps

00:38:52,000 --> 00:38:57,099
is that we've managed to get a day

00:38:53,259 --> 00:38:58,090
server set up down to less than an hour

00:38:57,099 --> 00:39:00,400
8 percent

00:38:58,090 --> 00:39:03,130
sorry eight times faster to set up new

00:39:00,400 --> 00:39:05,110
projects there we go that's the day down

00:39:03,130 --> 00:39:07,210
to one hour and once you've got one

00:39:05,110 --> 00:39:08,800
platform SH site up and running with a

00:39:07,210 --> 00:39:10,810
config file you can then just

00:39:08,800 --> 00:39:12,130
essentially copy and paste that tweak to

00:39:10,810 --> 00:39:13,540
your heart's content and then you can

00:39:12,130 --> 00:39:17,290
just use that for your new project it's

00:39:13,540 --> 00:39:22,500
that easy six times faster deployment

00:39:17,290 --> 00:39:25,450
time usually deployments would come via

00:39:22,500 --> 00:39:30,640
we book them in and we wouldn't deploy

00:39:25,450 --> 00:39:33,100
on Fridays and that whole thing okay we

00:39:30,640 --> 00:39:34,630
spoke to the developers that we were

00:39:33,100 --> 00:39:35,980
using on a particular project we said

00:39:34,630 --> 00:39:37,690
well how much quicker is it using

00:39:35,980 --> 00:39:39,550
platform SH versus what we were doing

00:39:37,690 --> 00:39:41,440
before and they said well they're

00:39:39,550 --> 00:39:42,640
actually saving half the amount of time

00:39:41,440 --> 00:39:44,020
they said half the amount of time that

00:39:42,640 --> 00:39:48,040
they were spending we're wrangling with

00:39:44,020 --> 00:39:49,510
merges with code that wasn't working

00:39:48,040 --> 00:39:51,970
with other branches and so on but

00:39:49,510 --> 00:39:54,130
because branches are so cheap and easy

00:39:51,970 --> 00:39:57,490
to create and throw away now we're

00:39:54,130 --> 00:40:00,550
producing new branches a lot quicker and

00:39:57,490 --> 00:40:02,080
being able to merge those things in and

00:40:00,550 --> 00:40:04,780
this is the one that had to think about

00:40:02,080 --> 00:40:07,210
because 60 times faster set up for new

00:40:04,780 --> 00:40:10,240
depth for new dev environments so we

00:40:07,210 --> 00:40:12,970
have got that process down from half a

00:40:10,240 --> 00:40:14,530
day down to four minutes so it took us

00:40:12,970 --> 00:40:16,570
half a day before because again it would

00:40:14,530 --> 00:40:18,880
come to me I'd have to create a user

00:40:16,570 --> 00:40:21,790
create that set up the account make sure

00:40:18,880 --> 00:40:24,100
it's working and essentially now it's

00:40:21,790 --> 00:40:25,360
just essentially git branch and you've

00:40:24,100 --> 00:40:29,020
got a new environment instant you can

00:40:25,360 --> 00:40:29,980
get up and running so it's not it wasn't

00:40:29,020 --> 00:40:31,660
all the time that we're creating

00:40:29,980 --> 00:40:33,220
environments because it was taking this

00:40:31,660 --> 00:40:35,710
long whereas now as part of our process

00:40:33,220 --> 00:40:37,240
we just embrace that git branch as much

00:40:35,710 --> 00:40:39,220
as we like create as many environments

00:40:37,240 --> 00:40:41,770
as we like and then merge them into a

00:40:39,220 --> 00:40:46,570
single UAT branch and then we're happy

00:40:41,770 --> 00:40:49,300
days so where do we go from here so

00:40:46,570 --> 00:40:51,040
Drupal is the number one CMS and has

00:40:49,300 --> 00:40:52,540
been for a while but clients are asking

00:40:51,040 --> 00:40:54,310
for different types of solutions so

00:40:52,540 --> 00:40:56,950
they're asking for chatbots they're

00:40:54,310 --> 00:40:59,230
asking for offline tools if they're for

00:40:56,950 --> 00:41:02,020
example them one of our clients M&S food

00:40:59,230 --> 00:41:03,370
they have auditors that go on-site to

00:41:02,020 --> 00:41:05,590
different factories and they want to

00:41:03,370 --> 00:41:07,960
have a version of the audit form on a

00:41:05,590 --> 00:41:09,070
tablet offline because a lot of them in

00:41:07,960 --> 00:41:09,640
remote environments and they're all

00:41:09,070 --> 00:41:11,110
around the world

00:41:09,640 --> 00:41:13,630
they want to be able to fill out that

00:41:11,110 --> 00:41:15,130
audit so we need to look at local

00:41:13,630 --> 00:41:16,690
storage and then how do we synchronize

00:41:15,130 --> 00:41:18,520
that when that's online and that gets

00:41:16,690 --> 00:41:20,710
outside of Drupal's comfort zone so

00:41:18,520 --> 00:41:22,660
we're starting to look at how we might

00:41:20,710 --> 00:41:26,410
be able to create micro services with

00:41:22,660 --> 00:41:30,700
laravel annexed which is a view based

00:41:26,410 --> 00:41:32,590
framework which is still fairly new but

00:41:30,700 --> 00:41:34,050
we know that by using platform that

00:41:32,590 --> 00:41:36,640
supports node that all of these

00:41:34,050 --> 00:41:38,470
technologies are essentially they've

00:41:36,640 --> 00:41:40,210
been stabilized so that when we come to

00:41:38,470 --> 00:41:41,500
it any variances will be just down to

00:41:40,210 --> 00:41:44,740
what we're doing with it rather than the

00:41:41,500 --> 00:41:46,570
actual platform besides we haven't

00:41:44,740 --> 00:41:48,640
actually deployed any nodejs apps so

00:41:46,570 --> 00:41:49,870
we'd have to look into how we would

00:41:48,640 --> 00:41:51,460
actually do that in the traditional

00:41:49,870 --> 00:41:52,990
sense whereas with platform it's just up

00:41:51,460 --> 00:41:56,260
and running so we that's one less thing

00:41:52,990 --> 00:41:58,120
to worry about Micah mention with the

00:41:56,260 --> 00:42:00,670
blog post with let's encrypt that it

00:41:58,120 --> 00:42:02,560
just works there's a few little things

00:42:00,670 --> 00:42:04,780
that other services that I've found

00:42:02,560 --> 00:42:08,020
don't include so that might be image

00:42:04,780 --> 00:42:09,970
optimizers and the small binaries that

00:42:08,020 --> 00:42:13,060
you might use with some edge case Drupal

00:42:09,970 --> 00:42:15,880
modules that you can you can bundle up

00:42:13,060 --> 00:42:17,200
and use your own local binaries as long

00:42:15,880 --> 00:42:19,000
as they're in a particular format and

00:42:17,200 --> 00:42:19,900
that can go up with your code as part of

00:42:19,000 --> 00:42:22,660
the build scripts and then you

00:42:19,900 --> 00:42:25,630
essentially got endless options that you

00:42:22,660 --> 00:42:29,290
can use custom PHP extensions which

00:42:25,630 --> 00:42:32,170
aren't part of the core core of PHP you

00:42:29,290 --> 00:42:36,490
can use custom binaries one example is

00:42:32,170 --> 00:42:38,970
the social search solar API attachments

00:42:36,490 --> 00:42:41,590
which will essentially take a PDF file

00:42:38,970 --> 00:42:43,030
unwrap the content to that PDF file and

00:42:41,590 --> 00:42:45,490
put it in a format so that it sits in

00:42:43,030 --> 00:42:47,800
your Apache Solr index so it's a bit of

00:42:45,490 --> 00:42:49,990
a bit of an education but still a lot of

00:42:47,800 --> 00:42:53,920
people need that and we can get that

00:42:49,990 --> 00:42:55,780
working with no problems to another than

00:42:53,920 --> 00:42:58,300
something else that's on our radar is to

00:42:55,780 --> 00:43:00,670
investigate how we can run our automated

00:42:58,300 --> 00:43:02,290
tests as part of a development workflow

00:43:00,670 --> 00:43:03,970
because platform doesn't provide that as

00:43:02,290 --> 00:43:05,710
part of its service but it does

00:43:03,970 --> 00:43:07,660
integrate with web hooks and the API is

00:43:05,710 --> 00:43:10,060
extremely rich in fact as an API first

00:43:07,660 --> 00:43:14,100
so everything you see in the UI is is

00:43:10,060 --> 00:43:14,100
available in the command line API

00:43:15,179 --> 00:43:27,719
ungracefully we're at the end right

00:43:18,549 --> 00:43:30,939
that's great well thanks to our three

00:43:27,719 --> 00:43:34,719
presenters I think we've got time for

00:43:30,939 --> 00:43:36,699
questions and we also from all three

00:43:34,719 --> 00:43:42,479
agencies but also we've got Rob Douglas

00:43:36,699 --> 00:43:44,739
in the room though he's left anyway

00:43:42,479 --> 00:43:46,929
that's a shame he knows an awful lot

00:43:44,739 --> 00:43:50,859
about our customers and products and

00:43:46,929 --> 00:43:52,479
what we're doing next cut before we ask

00:43:50,859 --> 00:43:54,849
any questions can I have a show of hands

00:43:52,479 --> 00:43:58,779
he's familiar with platform and using

00:43:54,849 --> 00:44:01,179
platform right okay this is fair for you

00:43:58,779 --> 00:44:05,789
that on and those who are now interested

00:44:01,179 --> 00:44:08,499
in using platform we see some hands okay

00:44:05,789 --> 00:44:11,949
there's too many hands that didn't go up

00:44:08,499 --> 00:44:14,979
in answer to that question so do we have

00:44:11,949 --> 00:44:18,569
any questions for platform all our

00:44:14,979 --> 00:44:18,569
presenters before we wrap

00:44:23,060 --> 00:44:31,710
yes we have the sorts of ROI that sort

00:44:28,530 --> 00:44:33,960
of our ROI that Barry put up we we

00:44:31,710 --> 00:44:36,210
actually collect metrics in ten

00:44:33,960 --> 00:44:39,680
categories and call it descent

00:44:36,210 --> 00:44:43,230
data-driven hosting decisions we collect

00:44:39,680 --> 00:44:46,710
metrics and ten categories overlapping

00:44:43,230 --> 00:44:48,690
those and we probably have about 40

00:44:46,710 --> 00:44:50,130
customers though though but quite a lot

00:44:48,690 --> 00:44:52,440
of thoughts into that they've been using

00:44:50,130 --> 00:44:54,690
platform for several months in

00:44:52,440 --> 00:44:56,580
production and we've actually we're

00:44:54,690 --> 00:44:58,680
doing case studies with them we've asked

00:44:56,580 --> 00:45:01,560
them to to think about the productivity

00:44:58,680 --> 00:45:04,950
improvements the savings deployment

00:45:01,560 --> 00:45:07,170
improvement velocity of and so on and so

00:45:04,950 --> 00:45:14,400
on so we do have that and we're building

00:45:07,170 --> 00:45:18,360
that out fast so yeah any other

00:45:14,400 --> 00:45:21,790
questions okay all right well thanks for

00:45:18,360 --> 00:45:29,270
listening I think we're done thank you

00:45:21,790 --> 00:45:29,270

YouTube URL: https://www.youtube.com/watch?v=sl30zZh8uTk


