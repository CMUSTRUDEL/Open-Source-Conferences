Title: DrupalCon Vienna 2017: Drush 9 - Lean and Modern
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	Join the Drush maintainers for an overview our upcoming release - Drush 9. We've modernized every command in Drush, and changed how you author commands. This 10 year project can still run! Learn more about:

Composer-centric point of view
Converting from a Drush Make site.
The new Drush launcher
Writing Annotated Commands
Output Formatters
Configuration techniques like config_split project and the config-pull command.
More details about these changes can be found on our roadmap.
Captions: 
	00:00:00,140 --> 00:00:05,640
all right I think we can get started

00:00:03,950 --> 00:00:09,030
welcome everyone

00:00:05,640 --> 00:00:11,099
we're talking about drush 9 today this

00:00:09,030 --> 00:00:19,289
is the latest and greatest version of

00:00:11,099 --> 00:00:22,529
the drush command-line tool my name is

00:00:19,289 --> 00:00:25,830
Moshe Weitzman I'm a longtime Drupal

00:00:22,529 --> 00:00:28,590
developer one of the maintainer x' of

00:00:25,830 --> 00:00:32,070
the drush project you can see that I'm

00:00:28,590 --> 00:00:35,809
independent consultant available for

00:00:32,070 --> 00:00:38,989
hire on architecting big drupal websites

00:00:35,809 --> 00:00:41,280
specializing in developer workflows and

00:00:38,989 --> 00:00:47,760
you can see that i'm also the maintainer

00:00:41,280 --> 00:00:49,410
of the devel contribute here Greg

00:00:47,760 --> 00:00:52,949
Anderson he's going to be the other

00:00:49,410 --> 00:00:55,140
speaker today Greg is the panthÃ©on

00:00:52,949 --> 00:00:58,170
platform engineer and open source

00:00:55,140 --> 00:01:00,059
engineer at Pantheon and three of the

00:00:58,170 --> 00:01:02,489
projects that he maintains are listed

00:01:00,059 --> 00:01:08,340
there there are more but those are three

00:01:02,489 --> 00:01:10,049
you might have heard of so here's a

00:01:08,340 --> 00:01:14,610
quote from our founder

00:01:10,049 --> 00:01:17,009
arto Ben deacon he gave drush its slogan

00:01:14,610 --> 00:01:19,229
it's a veritable Swiss Army knife

00:01:17,009 --> 00:01:22,200
designed to make life easier for those

00:01:19,229 --> 00:01:23,820
who hacked at the command prompt so I

00:01:22,200 --> 00:01:26,820
bet we have a lot of people in here who

00:01:23,820 --> 00:01:31,290
hack at the command prompt and I hope

00:01:26,820 --> 00:01:33,090
you like our latest version of drush so

00:01:31,290 --> 00:01:39,570
dress has been around for a long time

00:01:33,090 --> 00:01:41,040
it's 11 years old and thrush 9 is the

00:01:39,570 --> 00:01:45,570
first time we've done a ground-up

00:01:41,040 --> 00:01:48,960
rewrite since stress 3 I believe the

00:01:45,570 --> 00:01:51,450
year 2008 so really this is a monumental

00:01:48,960 --> 00:01:53,790
change and you know we're really proud

00:01:51,450 --> 00:01:55,649
of where we've gotten to and what it is

00:01:53,790 --> 00:01:59,640
and we hope you guys love it as much as

00:01:55,649 --> 00:02:01,770
we do some of the principles that guided

00:01:59,640 --> 00:02:04,649
the rewrite of drush are listed there

00:02:01,770 --> 00:02:08,520
it's object-oriented it's symphony based

00:02:04,649 --> 00:02:11,459
it embraces the composer workflow and it

00:02:08,520 --> 00:02:13,410
embraces Drupal 8 alright so there's

00:02:11,459 --> 00:02:18,030
been lots of change

00:02:13,410 --> 00:02:21,030
in PHP land since 2008 in drush 9 I

00:02:18,030 --> 00:02:23,160
think really brings us up to speed

00:02:21,030 --> 00:02:25,590
thrush has always been a pleasure to use

00:02:23,160 --> 00:02:29,610
in that it does what you want with

00:02:25,590 --> 00:02:31,950
little fuss but right now we have a

00:02:29,610 --> 00:02:36,480
situation where authoring commands is a

00:02:31,950 --> 00:02:39,960
modern sort of activity as well as all

00:02:36,480 --> 00:02:47,070
of the guts of drush are object-oriented

00:02:39,960 --> 00:02:49,770
and really nicely decoupled so we have

00:02:47,070 --> 00:02:52,310
two main sections for the talk today I'm

00:02:49,770 --> 00:02:54,840
gonna be talking about using brush 9 and

00:02:52,310 --> 00:02:57,990
primarily Greg is gonna be talking about

00:02:54,840 --> 00:03:03,270
all of the api's underneath that make it

00:02:57,990 --> 00:03:06,660
do what it does so getting started with

00:03:03,270 --> 00:03:09,990
drush 9 there's typically two things

00:03:06,660 --> 00:03:12,210
that you have to do you have to start

00:03:09,990 --> 00:03:15,390
your project alright and by this I mean

00:03:12,210 --> 00:03:16,530
your composer project you know for the

00:03:15,390 --> 00:03:18,930
moment I'm assuming you're starting

00:03:16,530 --> 00:03:22,110
completely fresh on a new project

00:03:18,930 --> 00:03:25,230
the way you start fresh is you go to a

00:03:22,110 --> 00:03:28,890
specific github repo called a drupal -

00:03:25,230 --> 00:03:30,959
composer slash drupal - project and you

00:03:28,890 --> 00:03:34,080
follow the readme there and that will

00:03:30,959 --> 00:03:36,570
give you all of it assembles your

00:03:34,080 --> 00:03:40,709
codebase okay for your Drupal 8 project

00:03:36,570 --> 00:03:44,010
and the in addition to a Drupal code

00:03:40,709 --> 00:03:47,930
base it gives you the brush command line

00:03:44,010 --> 00:03:49,980
tool right there in your project

00:03:47,930 --> 00:03:53,030
the second thing you have to do is

00:03:49,980 --> 00:03:57,600
install a tool called brush launcher

00:03:53,030 --> 00:04:00,209
this is a small composer based tool

00:03:57,600 --> 00:04:02,880
that's distributed as a far address not

00:04:00,209 --> 00:04:06,420
far you go ahead and put that in your

00:04:02,880 --> 00:04:08,760
path anywhere in your path and so when

00:04:06,420 --> 00:04:12,510
you type the word brush the launcher

00:04:08,760 --> 00:04:15,270
fires up and then that hands-off control

00:04:12,510 --> 00:04:21,510
to the site local dress that came in

00:04:15,270 --> 00:04:23,820
with the Drupal project so just to

00:04:21,510 --> 00:04:26,820
re-emphasize here's a screenshot of the

00:04:23,820 --> 00:04:27,580
Drupal projects github repo here's where

00:04:26,820 --> 00:04:30,580
you want to go to

00:04:27,580 --> 00:04:33,909
started ok and just follow the readme

00:04:30,580 --> 00:04:35,409
instructions basically there's one

00:04:33,909 --> 00:04:38,080
composer of command you need to run

00:04:35,409 --> 00:04:40,300
called composer create project and it

00:04:38,080 --> 00:04:42,969
will go ahead and set get you started

00:04:40,300 --> 00:04:44,680
you get a copy of Drupal it in there you

00:04:42,969 --> 00:04:47,469
get a copy of thrush in there you get a

00:04:44,680 --> 00:04:48,759
copy of Drupal consul in there so just

00:04:47,469 --> 00:04:55,629
about everything you might need for your

00:04:48,759 --> 00:04:58,120
project is is right there and then in

00:04:55,629 --> 00:05:00,610
order to be able to called rush from

00:04:58,120 --> 00:05:03,069
anywhere on your system you need the

00:05:00,610 --> 00:05:05,639
dress launcher so this is a screen shot

00:05:03,069 --> 00:05:08,319
of the dress launchers get github repo

00:05:05,639 --> 00:05:10,659
just follow it's read me for how to get

00:05:08,319 --> 00:05:12,789
that installed all you really have to do

00:05:10,659 --> 00:05:15,190
is grab the far put it anywhere in your

00:05:12,789 --> 00:05:17,349
path and you're good to go if you need

00:05:15,190 --> 00:05:23,919
to update it later it has a self update

00:05:17,349 --> 00:05:26,650
function so that's the process if you're

00:05:23,919 --> 00:05:31,479
starting a new project if you already

00:05:26,650 --> 00:05:34,840
have let's say a Drupal 8 site and you

00:05:31,479 --> 00:05:37,270
want to use Rush 9 your best bet is to

00:05:34,840 --> 00:05:40,990
make that into a composer built project

00:05:37,270 --> 00:05:42,610
that's really what drush expects and to

00:05:40,990 --> 00:05:44,020
a sense that's what Drupal expects to

00:05:42,610 --> 00:05:45,729
otherwise you're gonna have a really

00:05:44,020 --> 00:05:48,150
hard time managing your dependencies so

00:05:45,729 --> 00:05:51,250
I just want to manage mention two

00:05:48,150 --> 00:05:54,509
projects that help you convert from a

00:05:51,250 --> 00:05:57,879
bear Drupal site to a composer built one

00:05:54,509 --> 00:06:03,270
make convert is a command that's in

00:05:57,879 --> 00:06:06,690
thrush eight if you are a dress make fan

00:06:03,270 --> 00:06:09,909
this command takes your dress make file

00:06:06,690 --> 00:06:14,409
loads it up and emits equivalent

00:06:09,909 --> 00:06:16,240
composer dot JSON okay so that you with

00:06:14,409 --> 00:06:19,870
that you're well on your way to having a

00:06:16,240 --> 00:06:22,120
composer built project and the next

00:06:19,870 --> 00:06:27,009
thing is address composer generate

00:06:22,120 --> 00:06:30,039
that's a contribute with address command

00:06:27,009 --> 00:06:32,830
in it and that will take a bear Drupal

00:06:30,039 --> 00:06:35,349
website look at the modules in projects

00:06:32,830 --> 00:06:38,740
you're using and create a composer JSON

00:06:35,349 --> 00:06:41,260
for you alright saves you a little time

00:06:38,740 --> 00:06:45,370
you know in general

00:06:41,260 --> 00:06:47,560
your goal with either of these tools is

00:06:45,370 --> 00:06:52,420
to have a code base that gets assembled

00:06:47,560 --> 00:06:55,630
by composer install all the other ways

00:06:52,420 --> 00:06:59,470
of assembling your code base like drush

00:06:55,630 --> 00:07:01,290
dl like drush make like grabbing tar

00:06:59,470 --> 00:07:04,570
balls and sticking them in directories

00:07:01,290 --> 00:07:08,590
all of that is legacy at this point you

00:07:04,570 --> 00:07:13,180
really want to be using composer and of

00:07:08,590 --> 00:07:14,650
course people ask I don't want to why do

00:07:13,180 --> 00:07:16,240
I have to

00:07:14,650 --> 00:07:19,960
I think the two-word answer is

00:07:16,240 --> 00:07:21,460
dependency management more and more of

00:07:19,960 --> 00:07:24,100
the modules you want to use in your

00:07:21,460 --> 00:07:26,170
Drupal sites have dependencies and they

00:07:24,100 --> 00:07:28,390
have dependencies on composer libraries

00:07:26,170 --> 00:07:31,210
that are not part of Drupal those

00:07:28,390 --> 00:07:33,370
libraries have other dependencies and it

00:07:31,210 --> 00:07:36,460
gets to a point where you can't keep all

00:07:33,370 --> 00:07:38,350
your dependencies compatible with each

00:07:36,460 --> 00:07:41,830
other without using a tool like composer

00:07:38,350 --> 00:07:44,610
so you know for people who have been

00:07:41,830 --> 00:07:47,310
resisting it I sympathize with you I

00:07:44,610 --> 00:07:50,710
resisted it also in the very beginning

00:07:47,310 --> 00:07:54,220
but there's a happier life on the other

00:07:50,710 --> 00:07:56,710
side so please go ahead and embrace

00:07:54,220 --> 00:07:58,660
composer and you know help out your

00:07:56,710 --> 00:08:01,210
friends in getting it getting there but

00:07:58,660 --> 00:08:09,880
there is no turning back on the composer

00:08:01,210 --> 00:08:13,030
wave thanks so you know I mentioned that

00:08:09,880 --> 00:08:14,500
rush 9 is a huge rewrite and there's a

00:08:13,030 --> 00:08:16,600
lot of changes particularly under the

00:08:14,500 --> 00:08:20,290
hood I want to emphasize that a lot of

00:08:16,600 --> 00:08:22,420
things haven't changed and you can still

00:08:20,290 --> 00:08:25,540
run the commands you have been running

00:08:22,420 --> 00:08:28,990
brush p.m. - enable brush p.m. -

00:08:25,540 --> 00:08:31,600
uninstall unchanged ok

00:08:28,990 --> 00:08:34,630
you li are saying sequel sync it's all

00:08:31,600 --> 00:08:37,510
there it has the same options it always

00:08:34,630 --> 00:08:40,930
has and works the way it did the config

00:08:37,510 --> 00:08:45,670
commands I mentioned there'd rush at foo

00:08:40,930 --> 00:08:47,830
status the at foo is a site alias those

00:08:45,670 --> 00:08:50,040
are used identically to how they always

00:08:47,830 --> 00:08:50,040
have been

00:08:50,830 --> 00:08:57,290
thrush PML p.m. - list is the long name

00:08:54,950 --> 00:08:59,779
- 4 min equals Jason that's an example

00:08:57,290 --> 00:09:02,810
of an output for matter dress has had

00:08:59,779 --> 00:09:05,329
these since stretch five or so they

00:09:02,810 --> 00:09:06,500
still exist in rush nine and they you

00:09:05,329 --> 00:09:08,600
know from the command line they work

00:09:06,500 --> 00:09:11,480
exactly the same all right

00:09:08,600 --> 00:09:14,029
and just one plug for the drush topic

00:09:11,480 --> 00:09:16,639
command the topic command has lots of

00:09:14,029 --> 00:09:19,310
documentation about how you do things in

00:09:16,639 --> 00:09:20,810
dress ok so just run topic you'll see

00:09:19,310 --> 00:09:23,269
about twenty different topics that we've

00:09:20,810 --> 00:09:23,750
written you know if you read one at

00:09:23,269 --> 00:09:26,240
night

00:09:23,750 --> 00:09:31,250
totally takes 20 nights and encourage

00:09:26,240 --> 00:09:34,910
you to do that so some things have

00:09:31,250 --> 00:09:38,120
changed in drush 9 and I want to call

00:09:34,910 --> 00:09:40,040
out the dearly departed for things that

00:09:38,120 --> 00:09:44,930
you can't do it anymore

00:09:40,040 --> 00:09:46,850
drush make is gone the archive commands

00:09:44,930 --> 00:09:51,110
are gone and the quick Drupal command is

00:09:46,850 --> 00:09:54,649
gone p.m. - update and p.m. - download

00:09:51,110 --> 00:09:56,899
are gone so these were good friends to a

00:09:54,649 --> 00:10:00,050
lot of us and I thank them for their

00:09:56,899 --> 00:10:05,720
service but they are deprecated and gone

00:10:00,050 --> 00:10:09,350
right now one little note people may

00:10:05,720 --> 00:10:11,529
have been used to using - n - me no it

00:10:09,350 --> 00:10:13,850
doesn't mean no in dress 9 it means

00:10:11,529 --> 00:10:17,839
non-interactive which really means

00:10:13,850 --> 00:10:23,660
accept the defaults so please don't keep

00:10:17,839 --> 00:10:28,190
that habit if you are using - - know a a

00:10:23,660 --> 00:10:31,370
ton or 5 tons of procedural code is gone

00:10:28,190 --> 00:10:36,680
and rush 9 to be replaced by shiny new

00:10:31,370 --> 00:10:39,199
object oriented code thrush 8 and prior

00:10:36,680 --> 00:10:42,740
versions supported multiple multiple

00:10:39,199 --> 00:10:45,199
versions of Drupal in one drush that is

00:10:42,740 --> 00:10:47,990
no longer supported so you'll notice

00:10:45,199 --> 00:10:50,420
that thrush 9 only supports thrush 8 and

00:10:47,990 --> 00:10:54,410
doesn't support the prior sorry

00:10:50,420 --> 00:10:57,649
thrush 9 only supports Drupal 8 and

00:10:54,410 --> 00:11:00,350
doesn't support Drupal 7 and Drupal 6 if

00:10:57,649 --> 00:11:03,260
you are still running Drupal 7 and

00:11:00,350 --> 00:11:08,390
Drupal 6 sites I encourage you to keep

00:11:03,260 --> 00:11:09,680
on using the dress 8 the branch

00:11:08,390 --> 00:11:17,330
that will stay maintained for a long

00:11:09,680 --> 00:11:20,030
time and you know why did we lose all of

00:11:17,330 --> 00:11:21,770
this dearly departed stuff because

00:11:20,030 --> 00:11:25,400
there's only a few people maintaining

00:11:21,770 --> 00:11:27,980
drush and it got too big to maintain

00:11:25,400 --> 00:11:30,170
this like multiple version thing in lots

00:11:27,980 --> 00:11:33,200
of procedural code that was calling into

00:11:30,170 --> 00:11:35,690
Drupal 800 code it really became a bear

00:11:33,200 --> 00:11:37,820
to maintain and so we went ahead and

00:11:35,690 --> 00:11:39,530
overhauled it I think it's gonna be more

00:11:37,820 --> 00:11:41,960
pleasurable for the maintainers to work

00:11:39,530 --> 00:11:43,790
with and more more pleasurable for the

00:11:41,960 --> 00:11:49,360
people who are offering drush commands

00:11:43,790 --> 00:11:52,550
to work with there are a few things that

00:11:49,360 --> 00:11:55,550
have left drush 9 but we think they're

00:11:52,550 --> 00:12:00,410
gonna come back soon either in 9.0 or

00:11:55,550 --> 00:12:03,500
9.1 shell aliases the site set command

00:12:00,410 --> 00:12:06,230
and bash completion are things that we

00:12:03,500 --> 00:12:10,040
had in Prior versions and we don't have

00:12:06,230 --> 00:12:11,450
right now they're pretty ancillary

00:12:10,040 --> 00:12:13,520
features of drush so I don't think

00:12:11,450 --> 00:12:18,440
anyone's gonna cry too many tears but

00:12:13,520 --> 00:12:20,330
hopefully they'll come back soon we did

00:12:18,440 --> 00:12:22,400
pick up some new tricks in this version

00:12:20,330 --> 00:12:26,390
and I want to make sure people know

00:12:22,400 --> 00:12:29,900
about them the first one is the config

00:12:26,390 --> 00:12:31,580
split project so config split is a

00:12:29,900 --> 00:12:35,180
project you can put in your composer

00:12:31,580 --> 00:12:37,460
file and once you have it you gain some

00:12:35,180 --> 00:12:40,330
real superpowers with respect to the

00:12:37,460 --> 00:12:44,390
Drupal 8 configuration management system

00:12:40,330 --> 00:12:47,150
specifically the main use case is if you

00:12:44,390 --> 00:12:50,300
have a dev environment in a stage and a

00:12:47,150 --> 00:12:53,240
prod environment you can have different

00:12:50,300 --> 00:12:56,090
configuration in each environment but

00:12:53,240 --> 00:12:58,510
they don't interfere with each other

00:12:56,090 --> 00:13:01,940
they don't cause differences when you

00:12:58,510 --> 00:13:04,880
are trying to do imports so you can have

00:13:01,940 --> 00:13:08,690
like your devel module and other debug

00:13:04,880 --> 00:13:12,190
modules installed in development but

00:13:08,690 --> 00:13:14,840
they will not be enabled in your Pradhan

00:13:12,190 --> 00:13:21,470
so essentially you're maintaining

00:13:14,840 --> 00:13:22,329
different config files in different

00:13:21,470 --> 00:13:24,519
directories

00:13:22,329 --> 00:13:26,790
and config split knows how to put it

00:13:24,519 --> 00:13:31,869
together before a config import happens

00:13:26,790 --> 00:13:34,299
okay so config split is a different

00:13:31,869 --> 00:13:35,589
project from drush if you have a need

00:13:34,299 --> 00:13:37,989
for this just go ahead and add it to

00:13:35,589 --> 00:13:40,119
your composer Jason and it takes over

00:13:37,989 --> 00:13:47,920
the services it needs to in order to

00:13:40,119 --> 00:13:49,689
achieve that feature in drush 8 you had

00:13:47,920 --> 00:13:52,899
trouble running commands from your

00:13:49,689 --> 00:13:55,600
composer root you had to CD into

00:13:52,899 --> 00:13:59,170
drupal's doc root and run commands from

00:13:55,600 --> 00:14:01,449
there or you cite a aliases and then

00:13:59,170 --> 00:14:04,179
maybe go back up a level in order to

00:14:01,449 --> 00:14:06,100
composer operations that's been cleaned

00:14:04,179 --> 00:14:07,989
up so now you can run drush just from

00:14:06,100 --> 00:14:10,989
the composer root and you don't have to

00:14:07,989 --> 00:14:12,819
CD back and forth all the time it's a

00:14:10,989 --> 00:14:15,720
small thing but it really is a bigger

00:14:12,819 --> 00:14:18,759
convenience to do it that way

00:14:15,720 --> 00:14:22,209
config files and alias files are now

00:14:18,759 --> 00:14:25,239
yamo instead of PHP which is nice

00:14:22,209 --> 00:14:29,220
there's still an altar hook if you want

00:14:25,239 --> 00:14:33,309
to go ahead and make changes dynamically

00:14:29,220 --> 00:14:36,879
and rush generate is a new command that

00:14:33,309 --> 00:14:38,919
we added in rush 9 and I'm gonna talk

00:14:36,879 --> 00:14:40,419
about that and give a demo now since

00:14:38,919 --> 00:14:42,869
it's a pretty big piece of new

00:14:40,419 --> 00:14:42,869
functionality

00:14:43,679 --> 00:14:51,160
ok so dress generates is a scaffolding

00:14:47,169 --> 00:14:52,869
tool it generates code I have some

00:14:51,160 --> 00:14:58,029
examples here of commands that it

00:14:52,869 --> 00:15:00,699
understands the alias is GE n gen so

00:14:58,029 --> 00:15:02,919
dress gen module standard you'll see

00:15:00,699 --> 00:15:05,220
that in a second that builds a whole new

00:15:02,919 --> 00:15:07,119
module for you and some of the

00:15:05,220 --> 00:15:08,919
introductory pieces that you usually

00:15:07,119 --> 00:15:11,470
have to build it goes ahead and puts

00:15:08,919 --> 00:15:12,999
those in your module if you're trying to

00:15:11,470 --> 00:15:14,470
create a new content entity this is

00:15:12,999 --> 00:15:14,949
gonna be a really fast convenient way to

00:15:14,470 --> 00:15:18,459
do it

00:15:14,949 --> 00:15:21,449
dress gen content entity dress gen DCF

00:15:18,459 --> 00:15:23,769
that's short for drush command file so

00:15:21,449 --> 00:15:27,639
naturally if you're trying to write new

00:15:23,769 --> 00:15:29,860
dress integration for your module this

00:15:27,639 --> 00:15:31,929
is the fastest way to do it use the

00:15:29,860 --> 00:15:35,550
dress generator for it

00:15:31,929 --> 00:15:41,100
if you are writing could trip modules

00:15:35,550 --> 00:15:43,350
you can add generators those are command

00:15:41,100 --> 00:15:46,519
files you can look at dresses

00:15:43,350 --> 00:15:48,830
documentation for how to do that and

00:15:46,519 --> 00:15:51,570
just want to give a shout out to a

00:15:48,830 --> 00:15:55,380
composer project called Drupal code

00:15:51,570 --> 00:15:58,490
generator Drupal code generator is the

00:15:55,380 --> 00:16:00,690
smarts and muscles behind this feature

00:15:58,490 --> 00:16:03,810
this is something we bring in via

00:16:00,690 --> 00:16:06,750
composer it's a library that's

00:16:03,810 --> 00:16:08,880
maintained by Chi Tech and drush really

00:16:06,750 --> 00:16:12,089
does a thin wrapper around it so we are

00:16:08,880 --> 00:16:13,970
able to quickly add a lot of awesome

00:16:12,089 --> 00:16:17,120
generator functionality without

00:16:13,970 --> 00:16:23,610
maintaining that within dressed proper

00:16:17,120 --> 00:16:25,320
so that was really a huge win we're

00:16:23,610 --> 00:16:28,529
gonna talk about thrush api's in just a

00:16:25,320 --> 00:16:31,310
second first I want to demo the

00:16:28,529 --> 00:16:31,310
generator stuff

00:16:43,210 --> 00:16:50,290
okay so I and can you guys see that okay

00:16:47,490 --> 00:16:53,620
it's a couple knots

00:16:50,290 --> 00:16:56,680
I ran the command to such gen module -

00:16:53,620 --> 00:16:59,230
standard now you can see that I'm

00:16:56,680 --> 00:17:03,280
running such and not the word rush there

00:16:59,230 --> 00:17:06,880
please don't focus on that too much Hut

00:17:03,280 --> 00:17:09,250
is a useful alias for us to run commands

00:17:06,880 --> 00:17:14,050
in another Drupal site it's like an 8 a

00:17:09,250 --> 00:17:17,950
site alias so imagine the word rush is

00:17:14,050 --> 00:17:19,750
there instead of sut alright we're using

00:17:17,950 --> 00:17:22,260
the new generate command and we're

00:17:19,750 --> 00:17:26,440
passing the argument module - standard

00:17:22,260 --> 00:17:30,070
it asked me what module name i want to

00:17:26,440 --> 00:17:33,120
create what's the machine name the

00:17:30,070 --> 00:17:37,360
description the package the dependencies

00:17:33,120 --> 00:17:40,030
and now what features of modules do I

00:17:37,360 --> 00:17:43,000
want in this initial creation of the

00:17:40,030 --> 00:17:45,190
module you can see I want a libraries

00:17:43,000 --> 00:17:50,020
file permissions file event subscriber

00:17:45,190 --> 00:17:52,360
controller settings form boom so what we

00:17:50,020 --> 00:17:54,760
have now is that dress generate has told

00:17:52,360 --> 00:17:56,800
me that is gone ahead and created a

00:17:54,760 --> 00:18:04,480
whole bunch of files in the modules

00:17:56,800 --> 00:18:08,010
pastry directory alright so I did it I

00:18:04,480 --> 00:18:08,010
knew I would do that

00:18:10,690 --> 00:18:17,290
the en command is still available and

00:18:14,340 --> 00:18:21,550
works as it always has actually it works

00:18:17,290 --> 00:18:23,380
better than it always has both Ian and

00:18:21,550 --> 00:18:25,090
uninstall used to prompt you do you

00:18:23,380 --> 00:18:28,020
really want to enable and do you really

00:18:25,090 --> 00:18:31,240
want to uninstall they no longer do that

00:18:28,020 --> 00:18:33,010
unless there are additional things that

00:18:31,240 --> 00:18:34,510
he needs to tell you about so if you're

00:18:33,010 --> 00:18:36,610
trying to uninstall something that

00:18:34,510 --> 00:18:39,580
depends on CTools and you didn't mention

00:18:36,610 --> 00:18:42,580
ctools before it uninstalled ctools it

00:18:39,580 --> 00:18:44,740
will say you're gonna install X and C

00:18:42,580 --> 00:18:47,230
tools is that okay

00:18:44,740 --> 00:18:49,870
but it won't prompt you if you gave it

00:18:47,230 --> 00:18:50,520
the permission already to uninstall what

00:18:49,870 --> 00:18:54,070
you're doing

00:18:50,520 --> 00:18:57,780
same thing with enable so I now have a

00:18:54,070 --> 00:19:07,140
pastry module I've enabled it

00:18:57,780 --> 00:19:15,000
if I want to add to it let's say I want

00:19:07,140 --> 00:19:16,980
to add some menu links you can see

00:19:15,000 --> 00:19:21,030
there's autocomplete there on the module

00:19:16,980 --> 00:19:23,460
names generate asks well what module do

00:19:21,030 --> 00:19:25,800
you want to put the new menu links in

00:19:23,460 --> 00:19:29,550
and I say the pastry module it went

00:19:25,800 --> 00:19:38,190
ahead and created the pastry links menu

00:19:29,550 --> 00:19:44,940
dot yml so I want to show you all the

00:19:38,190 --> 00:19:48,600
things that generate can do they take

00:19:44,940 --> 00:19:51,230
more than a screens worth of stuff here

00:19:48,600 --> 00:19:54,680
we go three different kinds of forms

00:19:51,230 --> 00:19:58,110
javascript file configuration entity

00:19:54,680 --> 00:20:02,520
content entity plugin managers lots of

00:19:58,110 --> 00:20:04,310
different plugins access checker

00:20:02,520 --> 00:20:07,250
services breadcrumb builder services

00:20:04,310 --> 00:20:10,560
route subscribers twig extensions

00:20:07,250 --> 00:20:13,800
templates browser based tests kernel

00:20:10,560 --> 00:20:15,180
based tests themes and lots of different

00:20:13,800 --> 00:20:18,750
kinds of yml files

00:20:15,180 --> 00:20:22,050
you know routing services etc so there's

00:20:18,750 --> 00:20:24,950
already a ton of stuff that generate can

00:20:22,050 --> 00:20:27,270
do while you're building a module so

00:20:24,950 --> 00:20:29,700
really encourage you guys to use the new

00:20:27,270 --> 00:20:32,400
generate if you find something missing

00:20:29,700 --> 00:20:34,430
you find something broken encourage you

00:20:32,400 --> 00:20:39,090
to look up the drupal code generator and

00:20:34,430 --> 00:20:42,660
submit your new templates there for what

00:20:39,090 --> 00:20:44,400
can be generated if it's something

00:20:42,660 --> 00:20:48,480
specific to your module go ahead and put

00:20:44,400 --> 00:20:52,700
it in your module let's just look at the

00:20:48,480 --> 00:20:52,700
code that got generated

00:21:08,990 --> 00:21:16,170
okay so this is pastry info dot yml

00:21:12,440 --> 00:21:19,250
that's not particularly interesting here

00:21:16,170 --> 00:21:22,290
we have libraries pastry dot libraries

00:21:19,250 --> 00:21:25,170
this is ready to be customized by you

00:21:22,290 --> 00:21:27,750
for whatever your module needs you

00:21:25,170 --> 00:21:30,030
remember we did menu links there's a

00:21:27,750 --> 00:21:32,970
child link in a dynamic link an external

00:21:30,030 --> 00:21:35,040
link so there's lots of great starter

00:21:32,970 --> 00:21:38,450
code here so you don't have to remember

00:21:35,040 --> 00:21:38,450
and look up how everything works

00:21:39,230 --> 00:21:45,000
permissions and their keys are all their

00:21:42,090 --> 00:21:49,440
routes and the different ways those work

00:21:45,000 --> 00:21:51,030
are ready for you to customize here so

00:21:49,440 --> 00:21:52,860
that's that's what generating module

00:21:51,030 --> 00:21:55,530
looks like and adding new things to a

00:21:52,860 --> 00:21:59,000
module so really excited about this new

00:21:55,530 --> 00:21:59,000
functionality and rs9

00:22:06,900 --> 00:22:12,180
okay so moving into thrush ap is the

00:22:12,300 --> 00:22:18,880
format for authoring commands has

00:22:15,910 --> 00:22:21,030
changed pretty dramatically you'll

00:22:18,880 --> 00:22:24,700
recall that in Prior versions of drush

00:22:21,030 --> 00:22:29,140
you had something like CTools drink in

00:22:24,700 --> 00:22:31,330
your module called ctools and inside

00:22:29,140 --> 00:22:34,300
that file was a hooked rush command

00:22:31,330 --> 00:22:37,570
CTools underscore underscore command

00:22:34,300 --> 00:22:41,200
with an array that defined your command

00:22:37,570 --> 00:22:44,830
and then a function in there which was

00:22:41,200 --> 00:22:47,040
the command callback that's a little bit

00:22:44,830 --> 00:22:50,470
different now we've moved to

00:22:47,040 --> 00:22:51,970
object-oriented so we have classes those

00:22:50,470 --> 00:22:55,150
classes can have their dependencies

00:22:51,970 --> 00:22:57,730
injected and those classes are referred

00:22:55,150 --> 00:23:01,180
to by tag services okay so this is very

00:22:57,730 --> 00:23:06,040
much the symphony Drupal 8 model for how

00:23:01,180 --> 00:23:08,580
you create commands in addition to

00:23:06,040 --> 00:23:12,460
commands there's lots of dress hooks

00:23:08,580 --> 00:23:15,880
which is the mechanism for hooking into

00:23:12,460 --> 00:23:19,120
other commands on your system those also

00:23:15,880 --> 00:23:21,510
are annotated methods in a class and

00:23:19,120 --> 00:23:28,330
I'll give you examples of these now and

00:23:21,510 --> 00:23:30,370
just a note for contributors who are who

00:23:28,330 --> 00:23:33,840
who already have drush integration you

00:23:30,370 --> 00:23:36,250
can keep your drush 8 code the way it is

00:23:33,840 --> 00:23:38,290
for people who are running thrush 8

00:23:36,250 --> 00:23:40,060
they'll be running that code for people

00:23:38,290 --> 00:23:41,410
who are running dress 9 you'll want to

00:23:40,060 --> 00:23:43,710
create a class just like what I'm going

00:23:41,410 --> 00:23:43,710
to show you

00:23:54,180 --> 00:23:57,950
and it's gone green on me

00:24:14,169 --> 00:24:19,019
I'm going to exit the program and try it

00:24:16,929 --> 00:24:19,019
again

00:24:38,680 --> 00:24:44,500
sorry for this delay I'll start talking

00:24:41,710 --> 00:24:46,870
about the the classes okay so I'm going

00:24:44,500 --> 00:24:54,370
to show you image commands dot PHP

00:24:46,870 --> 00:24:56,380
that's a class from cord Rush 9 and in

00:24:54,370 --> 00:25:02,230
it you will see that it extends a class

00:24:56,380 --> 00:25:06,010
called Rush commands so drush commands

00:25:02,230 --> 00:25:15,010
is a base class that all your dress

00:25:06,010 --> 00:25:19,540
commands are going to extend getting

00:25:15,010 --> 00:25:22,930
risky okay good alright class image

00:25:19,540 --> 00:25:28,030
commands here's the namespace for it it

00:25:22,930 --> 00:25:30,300
extends drush commands then all you have

00:25:28,030 --> 00:25:34,630
to do is make one method in your class

00:25:30,300 --> 00:25:36,910
alright here we have the flush method it

00:25:34,630 --> 00:25:40,660
takes an argument called style names and

00:25:36,910 --> 00:25:41,740
an argument called options options is

00:25:40,660 --> 00:25:43,960
something that you always put at the end

00:25:41,740 --> 00:25:47,140
of your argument list for your method

00:25:43,960 --> 00:25:50,590
and in this case there's only one

00:25:47,140 --> 00:25:52,630
additional argument here so the way you

00:25:50,590 --> 00:25:55,660
tell drush like what arguments and

00:25:52,630 --> 00:25:59,020
options are available for your for your

00:25:55,660 --> 00:26:02,170
command is just by documenting it with

00:25:59,020 --> 00:26:05,890
annotations ok so it's very annotation

00:26:02,170 --> 00:26:09,700
based sort of like Drupal content

00:26:05,890 --> 00:26:13,960
entities or Drupal plugins or PHP unit

00:26:09,700 --> 00:26:16,420
tests annotation centric so here's the

00:26:13,960 --> 00:26:18,370
command description at the top the

00:26:16,420 --> 00:26:22,480
command name comes in with an act

00:26:18,370 --> 00:26:24,160
command annotation the argument style

00:26:22,480 --> 00:26:28,660
names and it's description is declared

00:26:24,160 --> 00:26:29,590
here there's one option for this flush

00:26:28,660 --> 00:26:33,640
command called

00:26:29,590 --> 00:26:36,510
all and there's its description here we

00:26:33,640 --> 00:26:40,000
have six lines that all are example

00:26:36,510 --> 00:26:42,190
example usages so dress help shows you

00:26:40,000 --> 00:26:44,260
examples for how to use it so definitely

00:26:42,190 --> 00:26:50,000
encourage you to use the at usage

00:26:44,260 --> 00:26:52,470
annotation and moving along there's two

00:26:50,000 --> 00:26:54,750
special annotations that are used by

00:26:52,470 --> 00:26:59,220
this command here validate Annalee load

00:26:54,750 --> 00:27:02,309
and validate module load there are hooks

00:26:59,220 --> 00:27:05,309
that look for this annotation on any

00:27:02,309 --> 00:27:08,029
command and if present they go ahead and

00:27:05,309 --> 00:27:11,279
run their custom code in this case

00:27:08,029 --> 00:27:14,429
validate module enabled image image as a

00:27:11,279 --> 00:27:16,710
parameter this command will fail to run

00:27:14,429 --> 00:27:22,039
if the image module is not enabled all

00:27:16,710 --> 00:27:22,039
right so that's a good way to avoid bad

00:27:22,250 --> 00:27:26,159
exceptions for the user if they try to

00:27:25,080 --> 00:27:29,700
run this command without the image

00:27:26,159 --> 00:27:30,480
module okay image styles are the things

00:27:29,700 --> 00:27:32,309
that are getting flushed

00:27:30,480 --> 00:27:34,549
of course they depend on image module so

00:27:32,309 --> 00:27:37,799
that would be an appropriate annotation

00:27:34,549 --> 00:27:40,110
and a similar one we want to make sure

00:27:37,799 --> 00:27:42,740
that the image style content entity is

00:27:40,110 --> 00:27:47,990
still present so that's what that other

00:27:42,740 --> 00:27:50,640
annotations about the aliases annotation

00:27:47,990 --> 00:27:54,480
put as many aliases if you want as you

00:27:50,640 --> 00:27:57,360
want here we have I F is the short

00:27:54,480 --> 00:28:00,330
version image - flush is the sort of

00:27:57,360 --> 00:28:03,419
prior version of drush used dashes so

00:28:00,330 --> 00:28:06,120
all of the prior names are in here as

00:28:03,419 --> 00:28:08,580
aliases so you your muscle-memory will

00:28:06,120 --> 00:28:12,000
still work if you do p.m. - enable or

00:28:08,580 --> 00:28:16,169
image - flush the canonical name has

00:28:12,000 --> 00:28:19,250
changed to image : enable and p.m. :

00:28:16,169 --> 00:28:22,440
enable alright or image - flush rather

00:28:19,250 --> 00:28:24,659
and then just the body of the method is

00:28:22,440 --> 00:28:29,520
the work that you need to do in your

00:28:24,659 --> 00:28:33,020
command alright a little bit more about

00:28:29,520 --> 00:28:36,179
hooks hooks are annotated methods also

00:28:33,020 --> 00:28:40,890
here we have a hook that wants to

00:28:36,179 --> 00:28:42,809
interact with you before the command

00:28:40,890 --> 00:28:43,140
callback is or the flush method is

00:28:42,809 --> 00:28:46,080
called

00:28:43,140 --> 00:28:48,390
and it wants to operate on just the

00:28:46,080 --> 00:28:51,510
image flush command and not lots of

00:28:48,390 --> 00:28:53,220
image commands or all commands and here

00:28:51,510 --> 00:28:57,000
it's just gonna prompt you for which of

00:28:53,220 --> 00:28:59,520
the many image Styles do you want to

00:28:57,000 --> 00:29:02,150
flush alright so if you didn't specify

00:28:59,520 --> 00:29:03,900
you get this interaction

00:29:02,150 --> 00:29:06,320
all right I'm going to hand it over to

00:29:03,900 --> 00:29:06,320
Greg now

00:29:16,600 --> 00:29:26,779
welcome Janna thank you my mic is on so

00:29:25,610 --> 00:29:28,399
I'll give my mouth you might welcome

00:29:26,779 --> 00:29:29,690
again welcome to Vienna I'm glad you

00:29:28,399 --> 00:29:31,850
could come and join us in this session

00:29:29,690 --> 00:29:34,370
today so most give you a great overview

00:29:31,850 --> 00:29:35,870
of what we're doing in Drupal 9 and I'm

00:29:34,370 --> 00:29:38,899
gonna dive down a little bit into the

00:29:35,870 --> 00:29:42,830
internals and talk about what's inside

00:29:38,899 --> 00:29:45,529
of drush and how you use it so at the

00:29:42,830 --> 00:29:48,549
top of this hierarchy we have the drush

00:29:45,529 --> 00:29:51,529
application itself and ruch adds

00:29:48,549 --> 00:29:53,929
facilities such as bootstrapping Drupal

00:29:51,529 --> 00:29:55,940
site aliases that allow you to easily

00:29:53,929 --> 00:30:00,100
select which site you want to operate on

00:29:55,940 --> 00:30:03,889
and remote execution and on top of this

00:30:00,100 --> 00:30:07,369
we're building on a project called Robo

00:30:03,889 --> 00:30:09,259
which is a task executor for PHP if you

00:30:07,369 --> 00:30:12,639
haven't seen Robo before I'd suggest you

00:30:09,259 --> 00:30:16,100
tech check it out it's a very useful for

00:30:12,639 --> 00:30:18,649
building continuous integration and

00:30:16,100 --> 00:30:20,899
other sorts of build tools allows you to

00:30:18,649 --> 00:30:22,820
build tasks with a lot of different

00:30:20,899 --> 00:30:25,539
building blocks that you can put in

00:30:22,820 --> 00:30:29,240
collections and it does nifty things a

00:30:25,539 --> 00:30:34,309
lot of the features that we had in drush

00:30:29,240 --> 00:30:37,129
historically we pushed down into Robo so

00:30:34,309 --> 00:30:40,159
they're generically available and Robo

00:30:37,129 --> 00:30:41,659
has a facility where you can use Robo as

00:30:40,159 --> 00:30:45,379
a framework and really quickly make your

00:30:41,659 --> 00:30:48,009
own Symphony based command that has all

00:30:45,379 --> 00:30:51,619
of the capabilities of drush included

00:30:48,009 --> 00:30:54,379
quick command generation with annotated

00:30:51,619 --> 00:30:58,669
commands and all of the things you see

00:30:54,379 --> 00:31:01,970
below the stack so this is brought into

00:30:58,669 --> 00:31:04,100
Robo in the consolidation suite of

00:31:01,970 --> 00:31:06,970
libraries which provides the annotated

00:31:04,100 --> 00:31:10,669
command support output formatting and

00:31:06,970 --> 00:31:11,450
some nifty configuration facilities that

00:31:10,669 --> 00:31:15,080
I'll show you later

00:31:11,450 --> 00:31:17,419
and of course all of this is built on

00:31:15,080 --> 00:31:20,179
top of the symphony framework we're not

00:31:17,419 --> 00:31:22,429
any different than symphony these are

00:31:20,179 --> 00:31:26,509
ways to build actual symphony commands

00:31:22,429 --> 00:31:29,510
and if you're used to using symphony

00:31:26,509 --> 00:31:32,090
console you'll find that those API is

00:31:29,510 --> 00:31:38,380
are available to the commands you build

00:31:32,090 --> 00:31:41,270
out so I want to take a quick quick

00:31:38,380 --> 00:31:43,850
diversion and talk about the two

00:31:41,270 --> 00:31:46,850
autoloader problem this is a problem

00:31:43,850 --> 00:31:48,590
that not a lot of people are going to

00:31:46,850 --> 00:31:51,890
encounter unless you are writing a

00:31:48,590 --> 00:31:55,820
command line tool such as drush or

00:31:51,890 --> 00:32:00,140
Drupal console and the problem you have

00:31:55,820 --> 00:32:02,330
is your primary application the one that

00:32:00,140 --> 00:32:05,390
enters it has the real front controller

00:32:02,330 --> 00:32:07,400
in this example drush has to bootstrap

00:32:05,390 --> 00:32:11,030
another application Drupal and Drupal

00:32:07,400 --> 00:32:12,920
has its own auto loader so if you have

00:32:11,030 --> 00:32:16,790
202 Auto loaders which two different

00:32:12,920 --> 00:32:18,890
sets of classes you have to make sure if

00:32:16,790 --> 00:32:20,660
those are going to operate together but

00:32:18,890 --> 00:32:24,950
they have exactly the same version of

00:32:20,660 --> 00:32:28,130
classes and this diagram shows that

00:32:24,950 --> 00:32:30,020
cember compatibility is not sufficient

00:32:28,130 --> 00:32:32,330
for two different Auto loaders to work

00:32:30,020 --> 00:32:35,330
together and the reason is if you have

00:32:32,330 --> 00:32:37,910
some fancy library and one application

00:32:35,330 --> 00:32:40,940
has version 1.0 point one installed and

00:32:37,910 --> 00:32:42,710
the other has version 1.0 point to

00:32:40,940 --> 00:32:47,600
install you've just gone up one patch

00:32:42,710 --> 00:32:49,700
version it's entirely possible that this

00:32:47,600 --> 00:32:52,670
dependent library may have changed its

00:32:49,700 --> 00:32:54,680
implementation slightly in the example

00:32:52,670 --> 00:32:56,990
here we have a class called sub that

00:32:54,680 --> 00:32:59,480
extends a class called base and there's

00:32:56,990 --> 00:33:03,020
a function foo and inside the function

00:32:59,480 --> 00:33:05,420
foo it formerly called the protected

00:33:03,020 --> 00:33:07,010
method in the base class called bar but

00:33:05,420 --> 00:33:09,770
someone decided that bar wasn't a great

00:33:07,010 --> 00:33:11,810
name and they renamed it to Baz or Baz

00:33:09,770 --> 00:33:15,910
or whatever they wanted to call it and

00:33:11,810 --> 00:33:18,080
if you're using these classes together

00:33:15,910 --> 00:33:20,210
assembler hasn't changed at all the API

00:33:18,080 --> 00:33:24,500
is exactly the same both of these

00:33:20,210 --> 00:33:28,010
different versions work equivalently if

00:33:24,500 --> 00:33:30,530
you have two autoloaders though PHP is

00:33:28,010 --> 00:33:32,210
kind of indiscriminant about where it

00:33:30,530 --> 00:33:34,240
gets its files from most that's not

00:33:32,210 --> 00:33:36,200
quite true that the Auto loaders are

00:33:34,240 --> 00:33:40,990
hierarchical and it load them in order

00:33:36,200 --> 00:33:43,460
but if you only load half of one library

00:33:40,990 --> 00:33:44,870
like so you take in the base class

00:33:43,460 --> 00:33:46,669
because you've called some command and

00:33:44,870 --> 00:33:48,950
then you load another auto loader on top

00:33:46,669 --> 00:33:51,710
of that so you end up with your subclass

00:33:48,950 --> 00:33:56,480
from version 1 102 and the base class

00:33:51,710 --> 00:33:58,010
from version 101 it's going to try and

00:33:56,480 --> 00:34:01,070
call a method that doesn't exist in the

00:33:58,010 --> 00:34:04,309
base class and this is really annoying

00:34:01,070 --> 00:34:06,140
to try to debug and the reason I wanted

00:34:04,309 --> 00:34:08,780
to go into the some depth about

00:34:06,140 --> 00:34:10,639
describing why we have this problem is

00:34:08,780 --> 00:34:13,570
you know the Drupal community right now

00:34:10,639 --> 00:34:16,429
we have a lot of people talking about

00:34:13,570 --> 00:34:19,129
why don't we just keep the go global

00:34:16,429 --> 00:34:20,649
Drudge why don't we go back to the

00:34:19,129 --> 00:34:25,159
island and not have to have the

00:34:20,649 --> 00:34:27,589
dependency resolution and it's this sort

00:34:25,159 --> 00:34:30,619
of problem that can create really

00:34:27,589 --> 00:34:32,720
difficult to manage situations they're

00:34:30,619 --> 00:34:34,339
hard to resolve so I want to make sure

00:34:32,720 --> 00:34:42,080
everyone understands the background

00:34:34,339 --> 00:34:44,720
there so as most said we are very firmly

00:34:42,080 --> 00:34:46,520
in the camp of saying you know you have

00:34:44,720 --> 00:34:49,190
to move forward for composure because if

00:34:46,520 --> 00:34:51,830
you have a Drupal module that requires

00:34:49,190 --> 00:34:56,419
dependencies we don't have a good

00:34:51,830 --> 00:34:57,980
alternative on how to do resolution of

00:34:56,419 --> 00:35:00,080
those dependencies and the more of these

00:34:57,980 --> 00:35:03,080
modules that appear the more of a

00:35:00,080 --> 00:35:05,750
problem this is going to be so if you're

00:35:03,080 --> 00:35:06,950
not using composer your Drupal boat is

00:35:05,750 --> 00:35:09,020
taking on water

00:35:06,950 --> 00:35:10,490
and you have to either bail or go back

00:35:09,020 --> 00:35:11,599
to the island and we're saying that

00:35:10,490 --> 00:35:14,089
going back to the island

00:35:11,599 --> 00:35:19,790
isn't the right solution we're gonna try

00:35:14,089 --> 00:35:22,940
and bail and get into a new boat that

00:35:19,790 --> 00:35:24,710
floats but in the meantime we still have

00:35:22,940 --> 00:35:27,020
a lot of people using global drush and

00:35:24,710 --> 00:35:28,490
the global dress isn't really supported

00:35:27,020 --> 00:35:30,890
for all of the reasons that I just

00:35:28,490 --> 00:35:32,570
mentioned but we're going to try and

00:35:30,890 --> 00:35:34,880
keep your boat afloat for a little while

00:35:32,570 --> 00:35:37,130
while you're bailing because it's taking

00:35:34,880 --> 00:35:40,339
some people a little while to get onto

00:35:37,130 --> 00:35:43,550
the Composer boat so the dress

00:35:40,339 --> 00:35:48,020
pre-flight takes some pains to try and

00:35:43,550 --> 00:35:49,970
make sure that this process is does not

00:35:48,020 --> 00:35:53,359
immediately catch fire if you're still

00:35:49,970 --> 00:35:54,980
trying to use the global dress and I'm

00:35:53,359 --> 00:35:55,960
going to describe how this works today

00:35:54,980 --> 00:35:58,920
and rush 9

00:35:55,960 --> 00:36:02,050
and we're hoping to get this same

00:35:58,920 --> 00:36:05,170
mechanism back ported to dress eight

00:36:02,050 --> 00:36:08,830
sort ly so that people who are still

00:36:05,170 --> 00:36:09,970
using p.m. download for now will have

00:36:08,830 --> 00:36:12,880
more of a chance of being able to

00:36:09,970 --> 00:36:16,380
interoperate with Drupal 8 for when it

00:36:12,880 --> 00:36:18,790
comes out in just a couple short weeks

00:36:16,380 --> 00:36:22,360
so the stages of the dress pre-flight

00:36:18,790 --> 00:36:24,460
starts with pre-processing the arguments

00:36:22,360 --> 00:36:26,440
we need to do this because Symphony

00:36:24,460 --> 00:36:29,530
doesn't understand site aliases so we

00:36:26,440 --> 00:36:31,930
bring those out and then prepare a

00:36:29,530 --> 00:36:34,450
pristine set of environments that we're

00:36:31,930 --> 00:36:36,100
going to pass on to symphony later then

00:36:34,450 --> 00:36:38,650
we load all of our configuration and

00:36:36,100 --> 00:36:41,020
aliases and this has to happen right up

00:36:38,650 --> 00:36:43,510
front because the configuration and

00:36:41,020 --> 00:36:46,690
aliases are going to determine which

00:36:43,510 --> 00:36:48,310
site you're operating on which is what

00:36:46,690 --> 00:36:50,380
happens in the next step we look at the

00:36:48,310 --> 00:36:53,860
config and the aliases identify our

00:36:50,380 --> 00:36:55,630
Drupal root then once we know which

00:36:53,860 --> 00:36:58,540
Drupal root we're definitely operating

00:36:55,630 --> 00:37:01,330
on we load the Drupal auto loader right

00:36:58,540 --> 00:37:03,220
up front and in the past this wouldn't

00:37:01,330 --> 00:37:05,350
happen until later in bootstrap which

00:37:03,220 --> 00:37:07,900
gave you a much greater chance that you

00:37:05,350 --> 00:37:11,010
would load some base classes that later

00:37:07,900 --> 00:37:13,540
a drive class might cause a conflict

00:37:11,010 --> 00:37:15,780
finally we do our dependency injection

00:37:13,540 --> 00:37:17,950
which brings all of our classes online

00:37:15,780 --> 00:37:21,150
once we already have the Drupal auto

00:37:17,950 --> 00:37:24,250
loader loaded and then we hand off to

00:37:21,150 --> 00:37:26,260
symphony with an application run and

00:37:24,250 --> 00:37:28,510
from their various hooks are going to

00:37:26,260 --> 00:37:30,520
come in to bring your site up and make

00:37:28,510 --> 00:37:31,780
it usable so these magical dress

00:37:30,520 --> 00:37:32,580
commands will actually do what they're

00:37:31,780 --> 00:37:36,370
supposed to

00:37:32,580 --> 00:37:39,010
so in this list steps one through five

00:37:36,370 --> 00:37:40,840
is what we call the pre-flight and then

00:37:39,010 --> 00:37:44,010
six and seven is what we call the

00:37:40,840 --> 00:37:44,010
bootstrap and execution

00:37:47,310 --> 00:37:53,109
so in the early phases drush goes to

00:37:50,380 --> 00:37:56,500
some pains to only use a limited number

00:37:53,109 --> 00:37:58,240
of classes in the pre-flight and then

00:37:56,500 --> 00:37:59,560
the saya Graham here on the very left it

00:37:58,240 --> 00:38:02,109
says that we're identifying the Drupal

00:37:59,560 --> 00:38:04,720
site so we've loaded the drush auto load

00:38:02,109 --> 00:38:06,060
file and all of the drush sources and

00:38:04,720 --> 00:38:08,470
that green box are now available

00:38:06,060 --> 00:38:11,800
unloaded these are unique they can't

00:38:08,470 --> 00:38:13,750
conflict with Drupal all of the drush

00:38:11,800 --> 00:38:16,060
vendor is available through the auto

00:38:13,750 --> 00:38:19,030
loader but only some of the classes that

00:38:16,060 --> 00:38:21,250
we need get loaded then we proceed to

00:38:19,030 --> 00:38:25,450
the next step and we load the Drupal

00:38:21,250 --> 00:38:27,010
auto loader at this point the Drupal

00:38:25,450 --> 00:38:29,320
sources and the Drupal vendor are

00:38:27,010 --> 00:38:32,200
available but not all of them have been

00:38:29,320 --> 00:38:34,900
loaded anything in the drush vendor

00:38:32,200 --> 00:38:37,480
directory at this time that also exists

00:38:34,900 --> 00:38:39,310
in the drupal vendor directory is going

00:38:37,480 --> 00:38:42,190
to be masked and you won't load it ever

00:38:39,310 --> 00:38:44,500
at all which is good so that Drupal

00:38:42,190 --> 00:38:46,240
version is going to take precedence if a

00:38:44,500 --> 00:38:47,560
module is expecting a certain version of

00:38:46,240 --> 00:38:51,310
a class it's going to get that version

00:38:47,560 --> 00:38:53,200
of the class and finally we bootstrap

00:38:51,310 --> 00:38:55,150
Drupal and you can see the little red

00:38:53,200 --> 00:38:57,339
box is still there anything we loaded

00:38:55,150 --> 00:39:00,520
really early on it's still going to be

00:38:57,339 --> 00:39:03,900
active in the runtime but everything

00:39:00,520 --> 00:39:09,099
else is going to come from Drupal and

00:39:03,900 --> 00:39:13,510
the Drupal dependencies now if you're

00:39:09,099 --> 00:39:15,849
running drush and Drupal as the same

00:39:13,510 --> 00:39:17,530
application with a site local brush then

00:39:15,849 --> 00:39:19,900
the dotted line around those two vendor

00:39:17,530 --> 00:39:21,460
directories indicates that those two

00:39:19,900 --> 00:39:23,859
vendor directories will be the same

00:39:21,460 --> 00:39:26,170
thing composer will resolve brushes

00:39:23,859 --> 00:39:27,849
dependencies together with Drupal's

00:39:26,170 --> 00:39:31,810
and everything will come out right and

00:39:27,849 --> 00:39:34,329
which is what we recommend but if you're

00:39:31,810 --> 00:39:37,410
still bailing then you'll find that

00:39:34,329 --> 00:39:41,160
drush 9 it's gonna work a lot better and

00:39:37,410 --> 00:39:43,839
shortly drush 8 will have that same

00:39:41,160 --> 00:39:45,400
improvement there's been a big issue in

00:39:43,839 --> 00:39:48,730
the issue queue about the problems with

00:39:45,400 --> 00:39:51,220
Drupal 8 for Andres 8 and we've been

00:39:48,730 --> 00:39:54,310
working hard to try and keep that better

00:39:51,220 --> 00:39:57,400
for the 60% of you who are still using

00:39:54,310 --> 00:39:59,740
the PM commands we're here to tell your

00:39:57,400 --> 00:40:00,910
time is limited but we're gonna give you

00:39:59,740 --> 00:40:05,860
a little more time

00:40:00,910 --> 00:40:08,620
to get on the other boat so once we call

00:40:05,860 --> 00:40:12,970
application.run symphony is going to

00:40:08,620 --> 00:40:15,070
take over and start doing stuff and the

00:40:12,970 --> 00:40:17,350
first thing that Symphony does is it

00:40:15,070 --> 00:40:20,650
runs the command event which prepares

00:40:17,350 --> 00:40:22,540
the command to run and then once the

00:40:20,650 --> 00:40:24,670
command has been prepared it goes into

00:40:22,540 --> 00:40:26,740
hook init where the command itself has

00:40:24,670 --> 00:40:29,080
an opportunity to initialize its

00:40:26,740 --> 00:40:31,030
variables and then we step in to hook

00:40:29,080 --> 00:40:34,560
interact which musch showed you later

00:40:31,030 --> 00:40:36,610
earlier which gives you a chance to

00:40:34,560 --> 00:40:38,470
prompt the user and fill in any

00:40:36,610 --> 00:40:42,130
arguments that they didn't pass in on

00:40:38,470 --> 00:40:43,930
the command line we have no control over

00:40:42,130 --> 00:40:45,790
symphonies validation of args and

00:40:43,930 --> 00:40:48,820
options it just does the right thing and

00:40:45,790 --> 00:40:51,400
throws an exception if you passed in

00:40:48,820 --> 00:40:54,400
some arguments that weren't correct and

00:40:51,400 --> 00:40:58,630
then we continue along to hook validate

00:40:54,400 --> 00:41:02,260
where your application can take a look

00:40:58,630 --> 00:41:06,340
at what options were provided and figure

00:41:02,260 --> 00:41:09,070
out if the command can run or not and

00:41:06,340 --> 00:41:11,290
those validate annotations that most

00:41:09,070 --> 00:41:15,280
showed those happen as part of the hook

00:41:11,290 --> 00:41:17,590
validate stage finally the command

00:41:15,280 --> 00:41:23,610
execution happens where you do the

00:41:17,590 --> 00:41:28,990
needful and after that if your command

00:41:23,610 --> 00:41:32,080
returns a set of a Grovyle collection

00:41:28,990 --> 00:41:34,000
then Robo is going to be hooked in as

00:41:32,080 --> 00:41:36,940
well and it'll run all of your tasks for

00:41:34,000 --> 00:41:39,280
you and finally the final result of the

00:41:36,940 --> 00:41:41,650
execution is going to be passed to the

00:41:39,280 --> 00:41:45,100
output for matters which are going to

00:41:41,650 --> 00:41:47,250
display and render the information for

00:41:45,100 --> 00:41:47,250
you

00:41:54,620 --> 00:42:01,230
so during the command event hook the

00:41:58,470 --> 00:42:03,360
altar option took will run and this is

00:42:01,230 --> 00:42:05,490
where output formatters has a chance to

00:42:03,360 --> 00:42:07,560
hook in and output for matters we'll

00:42:05,490 --> 00:42:10,170
take a look at your command and says aha

00:42:07,560 --> 00:42:15,750
you do output formatting with table so

00:42:10,170 --> 00:42:17,520
I'm going to add the output format X is

00:42:15,750 --> 00:42:20,340
going to add additional options where

00:42:17,520 --> 00:42:22,350
you can select the fields and anything

00:42:20,340 --> 00:42:25,110
that's needed so if you want to hook in

00:42:22,350 --> 00:42:28,350
and add new behavior across multiple

00:42:25,110 --> 00:42:30,210
commands the options can be injected for

00:42:28,350 --> 00:42:32,250
you you don't have to keep adding them

00:42:30,210 --> 00:42:34,280
to every command that does output for

00:42:32,250 --> 00:42:36,530
matters or whatever other

00:42:34,280 --> 00:42:39,390
aspect-oriented hook you might have

00:42:36,530 --> 00:42:41,040
placed in there the next thing that's

00:42:39,390 --> 00:42:45,120
going to happen and the command effect

00:42:41,040 --> 00:42:46,710
hook is configuration injection and I'll

00:42:45,120 --> 00:42:49,130
show you that a little bit later we have

00:42:46,710 --> 00:42:51,900
a cool configuration component which is

00:42:49,130 --> 00:42:55,380
consolidation config it's been extracted

00:42:51,900 --> 00:42:59,250
from drush and is used in Drupal and a

00:42:55,380 --> 00:43:03,120
number of other applications if you are

00:42:59,250 --> 00:43:09,270
familiar with grass meshes blt tool he

00:43:03,120 --> 00:43:13,860
is using Robo and Robo configuration to

00:43:09,270 --> 00:43:16,530
configure his build tool and so with

00:43:13,860 --> 00:43:18,720
this application you can have a Yama

00:43:16,530 --> 00:43:20,700
file with configuration and the

00:43:18,720 --> 00:43:23,250
configuration is pulled out and injected

00:43:20,700 --> 00:43:24,840
into your options if you have the same

00:43:23,250 --> 00:43:27,350
option on the command line it'll

00:43:24,840 --> 00:43:32,630
override what comes from configuration

00:43:27,350 --> 00:43:35,220
in the init hook drush adds a couple of

00:43:32,630 --> 00:43:37,290
default operations that will happen for

00:43:35,220 --> 00:43:39,630
you before your command execution starts

00:43:37,290 --> 00:43:41,340
the first is the reduce patch hook this

00:43:39,630 --> 00:43:45,600
is the part that detects whether your

00:43:41,340 --> 00:43:47,460
alias is a remote command or not and if

00:43:45,600 --> 00:43:49,710
it is it'll reduce patch to the remote

00:43:47,460 --> 00:43:53,430
machine otherwise execution continues

00:43:49,710 --> 00:43:55,500
and the bootstrap hook brings drush up

00:43:53,430 --> 00:43:56,730
to the right level of bootstrap so every

00:43:55,500 --> 00:43:58,920
command doesn't have to have a full

00:43:56,730 --> 00:44:00,960
bootstrap it just bootstraps to the

00:43:58,920 --> 00:44:02,760
level that it needs for the API is that

00:44:00,960 --> 00:44:03,970
it needs to operate so if you have a

00:44:02,760 --> 00:44:06,490
lightweight command

00:44:03,970 --> 00:44:08,470
that doesn't call all of the api's and

00:44:06,490 --> 00:44:12,880
just needs the database it can run a

00:44:08,470 --> 00:44:15,099
little faster so this is all stuff that

00:44:12,880 --> 00:44:17,380
josh has done since version one or two

00:44:15,099 --> 00:44:22,570
brought forward to the object-oriented

00:44:17,380 --> 00:44:26,400
Symphony world this shows you a very

00:44:22,570 --> 00:44:30,099
simple example program it shows a

00:44:26,400 --> 00:44:31,570
command called try for matters if you

00:44:30,099 --> 00:44:34,180
take a look at the output data there

00:44:31,570 --> 00:44:39,640
what it's returning is a very simple

00:44:34,180 --> 00:44:43,060
array of arrays and every row of the

00:44:39,640 --> 00:44:46,240
top-level array has a collection of

00:44:43,060 --> 00:44:49,390
fields and every row has the same field

00:44:46,240 --> 00:44:51,550
may be the same set of field keys in it

00:44:49,390 --> 00:44:55,930
now up at the top there's an annotation

00:44:51,550 --> 00:44:57,760
called field labels and there's a

00:44:55,930 --> 00:45:01,540
mapping in the field labels from the

00:44:57,760 --> 00:45:04,359
machine name which is 1st 2nd and 3rd to

00:45:01,540 --> 00:45:07,450
the human readable name for that field

00:45:04,359 --> 00:45:12,940
which in this case is given us Roman

00:45:07,450 --> 00:45:15,339
numerals 1 2 & 3 and then at the end all

00:45:12,940 --> 00:45:17,830
you do is take this data and return it

00:45:15,339 --> 00:45:20,050
you wrap it in a data class called rows

00:45:17,830 --> 00:45:22,839
of fields which is really no more than a

00:45:20,050 --> 00:45:25,420
marker class that says that this array

00:45:22,839 --> 00:45:27,700
can be displayed in rows and columns

00:45:25,420 --> 00:45:29,560
because if you had a big array that was

00:45:27,700 --> 00:45:32,800
just like a nested llamÃ³ structure you

00:45:29,560 --> 00:45:34,930
couldn't show that in a table so based

00:45:32,800 --> 00:45:38,410
on the fact that you've returned this

00:45:34,930 --> 00:45:40,660
marker class the output for matters is

00:45:38,410 --> 00:45:42,550
going to inject into your commands help

00:45:40,660 --> 00:45:46,510
that says these are the format's that I

00:45:42,550 --> 00:45:48,369
know I can format tables into and make

00:45:46,510 --> 00:45:50,260
those available through the - - format

00:45:48,369 --> 00:45:53,109
equals table or - a form of a closed

00:45:50,260 --> 00:45:55,960
yamo and the nifty thing about that is

00:45:53,109 --> 00:45:58,119
later someone comes and adds a formatter

00:45:55,960 --> 00:46:00,369
and injects the formatter into your

00:45:58,119 --> 00:46:01,750
application then that new formatter is

00:46:00,369 --> 00:46:04,089
available to all of your commands you

00:46:01,750 --> 00:46:09,099
didn't even have to know about it your

00:46:04,089 --> 00:46:11,290
users can start using it so on the

00:46:09,099 --> 00:46:14,800
screen you can see on the Left we've got

00:46:11,290 --> 00:46:16,570
a example of what that data looks like

00:46:14,800 --> 00:46:17,270
when you format it as a table it's a

00:46:16,570 --> 00:46:20,570
symphony call

00:46:17,270 --> 00:46:23,450
full table output and on the right you

00:46:20,570 --> 00:46:26,570
can see if we specify format equals the

00:46:23,450 --> 00:46:31,420
animal it shows that with the machine

00:46:26,570 --> 00:46:34,310
names instead in addition to selecting

00:46:31,420 --> 00:46:36,560
what format you want you can also select

00:46:34,310 --> 00:46:39,950
which fields you want from any field

00:46:36,560 --> 00:46:42,050
double output and on the left you can

00:46:39,950 --> 00:46:44,450
say we've selected fields three and one

00:46:42,050 --> 00:46:46,490
and so not only have we cut out field

00:46:44,450 --> 00:46:49,130
two but we've also reordered the fields

00:46:46,490 --> 00:46:51,140
and on the right we've done the same

00:46:49,130 --> 00:46:52,670
operation but we're also specifying that

00:46:51,140 --> 00:46:54,710
we want the output in JSON

00:46:52,670 --> 00:46:57,890
so we've trimmed out the rows we don't

00:46:54,710 --> 00:47:01,250
want converted at a jason and this kind

00:46:57,890 --> 00:47:04,250
of manipulation will make your life a

00:47:01,250 --> 00:47:05,660
lot easier if you're using dress in some

00:47:04,250 --> 00:47:07,880
sort of tool suite where you want to

00:47:05,660 --> 00:47:11,600
pipe the input into some other command

00:47:07,880 --> 00:47:14,270
various commands like different formats

00:47:11,600 --> 00:47:16,280
of data better than others and it's

00:47:14,270 --> 00:47:17,690
super useful to have output for matters

00:47:16,280 --> 00:47:20,630
because you don't have to deal with that

00:47:17,690 --> 00:47:23,690
as a command writer you get all of the

00:47:20,630 --> 00:47:29,720
power without any of the overhead

00:47:23,690 --> 00:47:31,490
without having to write the overhead so

00:47:29,720 --> 00:47:34,400
as most mentioned earlier we've switched

00:47:31,490 --> 00:47:37,250
our config in the past we had drush our

00:47:34,400 --> 00:47:40,700
c dot PHP and you could just write any

00:47:37,250 --> 00:47:43,460
old PHP you wanted if you wanted a

00:47:40,700 --> 00:47:45,080
command specific option you would put it

00:47:43,460 --> 00:47:46,880
inside of a well-known variable called

00:47:45,080 --> 00:47:49,970
command specific and that would all get

00:47:46,880 --> 00:47:52,370
parsed by drush but now we have the

00:47:49,970 --> 00:47:56,290
equivalent in llamÃ³

00:47:52,370 --> 00:48:01,670
in the command element there's a site

00:47:56,290 --> 00:48:03,800
install namespace so this is for the

00:48:01,670 --> 00:48:06,470
site install command the options for

00:48:03,800 --> 00:48:12,530
site install of account name and pass

00:48:06,470 --> 00:48:15,080
are specified here and the config module

00:48:12,530 --> 00:48:16,790
is going to take this configuration and

00:48:15,080 --> 00:48:18,920
inject it into your command-line options

00:48:16,790 --> 00:48:23,240
as I mentioned before now you'll notice

00:48:18,920 --> 00:48:24,830
that site install it appears on two

00:48:23,240 --> 00:48:25,910
different lines it's not listed just a

00:48:24,830 --> 00:48:27,980
site install and there's a couple

00:48:25,910 --> 00:48:30,809
reasons for that one is the pragmatic

00:48:27,980 --> 00:48:33,289
reason that site colon install

00:48:30,809 --> 00:48:37,259
well you know colonists the separator

00:48:33,289 --> 00:48:39,089
for maps in llamÃ³

00:48:37,259 --> 00:48:42,209
and you could escape that but that would

00:48:39,089 --> 00:48:44,699
be ugly so for one it reads a little bit

00:48:42,209 --> 00:48:48,419
better by splitting it up into the two

00:48:44,699 --> 00:48:50,809
different lines the other is there's

00:48:48,419 --> 00:48:53,099
actually some facility here and that

00:48:50,809 --> 00:48:55,679
immediately under the site element if

00:48:53,099 --> 00:48:59,579
you list options there then the

00:48:55,679 --> 00:49:03,719
configuration under command site options

00:48:59,579 --> 00:49:06,390
will apply to all of the commands in the

00:49:03,719 --> 00:49:08,939
site space so if you have common options

00:49:06,390 --> 00:49:10,079
amongst one group of commands you can

00:49:08,939 --> 00:49:12,150
separate it that way

00:49:10,079 --> 00:49:17,189
or you can have configuration just for

00:49:12,150 --> 00:49:21,359
your specific commands aliases are

00:49:17,189 --> 00:49:24,929
config and they look a lot like a config

00:49:21,359 --> 00:49:27,719
file in the past we had aliases drush RC

00:49:24,929 --> 00:49:30,449
dot PHP and you could do anything you

00:49:27,719 --> 00:49:32,459
wanted in these files you could define a

00:49:30,449 --> 00:49:34,709
bunch of different aliases and your

00:49:32,459 --> 00:49:36,719
alias names were socially separated by

00:49:34,709 --> 00:49:37,289
dots and the different components didn't

00:49:36,719 --> 00:49:40,979
mean anything

00:49:37,289 --> 00:49:44,159
in Drupal 9 we've become a lot more

00:49:40,979 --> 00:49:46,799
opinionated if you have a file called

00:49:44,159 --> 00:49:49,679
example dot a Lea samel this represents

00:49:46,799 --> 00:49:52,799
a single site called example and that

00:49:49,679 --> 00:49:54,869
single site always has multiple

00:49:52,799 --> 00:49:57,829
environments in this case we're showing

00:49:54,869 --> 00:50:01,469
a dev environment and a live environment

00:49:57,829 --> 00:50:03,029
and you can't do anything with the site

00:50:01,469 --> 00:50:06,479
other than have the multiple

00:50:03,029 --> 00:50:09,449
environments of the example command in

00:50:06,479 --> 00:50:13,140
addition to example alias llamo we also

00:50:09,449 --> 00:50:17,369
have group alias is y Amal and in this

00:50:13,140 --> 00:50:19,349
case you have a group of different sites

00:50:17,369 --> 00:50:19,799
but all have some relationship to each

00:50:19,349 --> 00:50:22,679
other

00:50:19,799 --> 00:50:25,890
and each of these different sites always

00:50:22,679 --> 00:50:27,479
must have one or more environments and

00:50:25,890 --> 00:50:32,029
so there's just an extra level of

00:50:27,479 --> 00:50:32,029
nesting in your llamo configuration

00:50:33,289 --> 00:50:42,800
finally drush 9 has a very robust new

00:50:38,369 --> 00:50:45,140
set of unit tests and functional tests

00:50:42,800 --> 00:50:47,660
and these tests are actually pretty much

00:50:45,140 --> 00:50:50,180
the same tests as we had before but they

00:50:47,660 --> 00:50:53,150
were massively rewritten for the massive

00:50:50,180 --> 00:50:57,500
rewrite of the architecture that we

00:50:53,150 --> 00:51:00,380
redid in drush and the unit functional

00:50:57,500 --> 00:51:02,990
tests create this thing called the sutt

00:51:00,380 --> 00:51:04,970
the site under test so the site under

00:51:02,990 --> 00:51:09,620
test is a Drupal site that's managed

00:51:04,970 --> 00:51:12,740
with composer and Eunice is the unit

00:51:09,620 --> 00:51:15,470
testing for dress that will build the

00:51:12,740 --> 00:51:18,860
site and take the dress that you're

00:51:15,470 --> 00:51:21,170
testing and inject it into the site

00:51:18,860 --> 00:51:22,640
under tests so that the operating

00:51:21,170 --> 00:51:24,830
environment for the unit tests are the

00:51:22,640 --> 00:51:29,090
same as what we're recommending that you

00:51:24,830 --> 00:51:31,880
do to make a rush make the dress

00:51:29,090 --> 00:51:34,400
application part of your Drupal site and

00:51:31,880 --> 00:51:36,530
in addition to the functional tests we

00:51:34,400 --> 00:51:38,930
also have new unit tests in the

00:51:36,530 --> 00:51:41,240
isolation area and I mentioned at the

00:51:38,930 --> 00:51:43,220
beginning that we take pains to isolate

00:51:41,240 --> 00:51:45,470
which classes we use so the isolation

00:51:43,220 --> 00:51:48,500
test actually has its own composer Jason

00:51:45,470 --> 00:51:50,360
that only includes the dependencies that

00:51:48,500 --> 00:51:54,400
we want to use during the pre-flight and

00:51:50,360 --> 00:51:57,500
all of the unit tests pass functions in

00:51:54,400 --> 00:51:59,120
read the function value that comes out

00:51:57,500 --> 00:52:01,340
exactly the way you want your functional

00:51:59,120 --> 00:52:03,710
tests to be they don't have any

00:52:01,340 --> 00:52:08,600
dependency on Drupal and we verify them

00:52:03,710 --> 00:52:12,170
that way so I think about the end of

00:52:08,600 --> 00:52:14,120
what we have to talk about before we

00:52:12,170 --> 00:52:16,990
take questions I would like to remind

00:52:14,120 --> 00:52:20,120
everyone that there's contribute and

00:52:16,990 --> 00:52:23,990
contribution sprints going on on Friday

00:52:20,120 --> 00:52:26,300
there's a mentored course sprint in the

00:52:23,990 --> 00:52:28,610
room Stoltz - and the first time

00:52:26,300 --> 00:52:33,020
sprinters workshop is in layer 1 and 2

00:52:28,610 --> 00:52:36,680
and the general sprint is in the rank

00:52:33,020 --> 00:52:39,080
main ballroom if you liked the session

00:52:36,680 --> 00:52:40,490
please come up to us and tell us how

00:52:39,080 --> 00:52:41,720
much you liked it and if you didn't like

00:52:40,490 --> 00:52:44,500
it go ahead and fill out the application

00:52:41,720 --> 00:52:46,760
survey I'm just kidding

00:52:44,500 --> 00:52:49,010
give us whatever feedback you have in

00:52:46,760 --> 00:52:51,230
whatever form but we had to have this

00:52:49,010 --> 00:52:54,260
survey that we would strongly encourage

00:52:51,230 --> 00:52:55,099
you to fill out and with that I'll

00:52:54,260 --> 00:52:58,960
welcome

00:52:55,099 --> 00:53:23,660
we can take some questions here so

00:52:58,960 --> 00:53:27,079
there's a microphone up front it's not

00:53:23,660 --> 00:53:29,900
wrong you can do that too you can just

00:53:27,079 --> 00:53:31,970
call vendor Bend rush directly and skip

00:53:29,900 --> 00:53:34,069
the launcher that works great

00:53:31,970 --> 00:53:35,989
yeah I do the same thing I have vendor

00:53:34,069 --> 00:53:37,999
being in my path so if I CD to any

00:53:35,989 --> 00:53:40,130
composer project I can run anything and

00:53:37,999 --> 00:53:52,729
vendor been from the the local directory

00:53:40,130 --> 00:53:55,279
and that works great for - - hello my

00:53:52,729 --> 00:53:59,239
name is Boris I have several questions

00:53:55,279 --> 00:54:02,739
in fact the first can you tell us

00:53:59,239 --> 00:54:06,499
something about the core compatibility

00:54:02,739 --> 00:54:12,109
things there are rumors and it stated on

00:54:06,499 --> 00:54:14,319
the docs side that Drupal 8.4 will

00:54:12,109 --> 00:54:18,969
require trust 9th

00:54:14,319 --> 00:54:24,049
Jubilees 3 won't work with - 9 or

00:54:18,969 --> 00:54:28,160
there's an official version of a 3 after

00:54:24,049 --> 00:54:32,180
trust 8 which will work with 84 and such

00:54:28,160 --> 00:54:36,979
things at one point and the other

00:54:32,180 --> 00:54:40,910
question what was the motivation to

00:54:36,979 --> 00:54:45,789
integrate a code generator inrush which

00:54:40,910 --> 00:54:45,789
is already a domain of Drupal console

00:54:45,849 --> 00:54:50,690
you've got two very different questions

00:54:48,469 --> 00:54:56,269
here two different questions

00:54:50,690 --> 00:54:59,089
yeah okay just two to end the second one

00:54:56,269 --> 00:55:03,109
do you happen to know whether Drupal

00:54:59,089 --> 00:55:05,509
console has the same codebase this code

00:55:03,109 --> 00:55:07,550
generator you mentioned or is it

00:55:05,509 --> 00:55:10,600
something totally different and

00:55:07,550 --> 00:55:14,690
resulting code will be different to

00:55:10,600 --> 00:55:15,950
that's a third question you want to take

00:55:14,690 --> 00:55:19,670
two and three and I'll take number one

00:55:15,950 --> 00:55:23,090
after you're done okay sure okay so the

00:55:19,670 --> 00:55:25,640
generate command it was an opportunistic

00:55:23,090 --> 00:55:29,570
move by drush to add that we found a

00:55:25,640 --> 00:55:33,940
library that was super clean super

00:55:29,570 --> 00:55:33,940

YouTube URL: https://www.youtube.com/watch?v=FNzXI_VRF48


