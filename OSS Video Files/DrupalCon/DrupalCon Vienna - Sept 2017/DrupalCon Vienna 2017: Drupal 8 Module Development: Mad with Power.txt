Title: DrupalCon Vienna 2017: Drupal 8 Module Development: Mad with Power
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	Module development in Drupal 8 is drastically different from Drupal 7 and previous versions of Drupal. This presentation will introduce the powerful new things you can do easily in Drupal 8. Want to add fields to the node table? No problem. Want to make a condition that can be used in Blocks, Panels, or Rules? Super easy. Need to extend or alter the functionality of field form matters or widgets on your site? No sweat.

The changes in Drupal 8 can appear daunting at first but after you learn a few tricks you'll be surprised by how much you can do with so little code. We'll also take a look at what it means for module development that Drupal 8 is object oriented. You'll see how this lets you leverage the power of an IDE like never before, speeding up development and letting you learn Drupal 8 quickly.
Captions: 
	00:00:00,000 --> 00:00:05,040
let's get started if I don't make eye

00:00:02,700 --> 00:00:07,290
contact during this presentation it's

00:00:05,040 --> 00:00:09,750
because I'm staring into this light so

00:00:07,290 --> 00:00:11,940
nothing personal I'm gonna take a

00:00:09,750 --> 00:00:13,889
picture so either y'all know if you

00:00:11,940 --> 00:00:17,030
don't want me to or duck your head down

00:00:13,889 --> 00:00:17,030
if you don't want to be on picture

00:00:17,600 --> 00:00:25,170
sighting DrupalCon presentation for me

00:00:20,990 --> 00:00:29,880
hopefully for you okay this is Drupal 8

00:00:25,170 --> 00:00:31,710
module development mad with power so my

00:00:29,880 --> 00:00:36,000
name is Ted Bowman I work at the office

00:00:31,710 --> 00:00:39,719
of the CTO at Acquia I'm Ted bow on

00:00:36,000 --> 00:00:41,850
Twitter and drupal.org probably best way

00:00:39,719 --> 00:00:46,230
to get in touch with me

00:00:41,850 --> 00:00:49,320
Drupal related stuff or otherwise I'm a

00:00:46,230 --> 00:00:51,660
core developer so aqua pays me to work

00:00:49,320 --> 00:00:54,030
on the API first initiative for Drupal 8

00:00:51,660 --> 00:00:56,190
and UX initiatives

00:00:54,030 --> 00:00:59,910
I'm the maintainer of the Settings tre

00:00:56,190 --> 00:01:04,070
module mostly work with core rest and

00:00:59,910 --> 00:01:06,119
core serialization I'm also doing a

00:01:04,070 --> 00:01:07,439
working on a new distribution called

00:01:06,119 --> 00:01:10,439
reservoir which is decoupled

00:01:07,439 --> 00:01:12,570
distribution which if anybody is

00:01:10,439 --> 00:01:15,780
interested it can ask me out about

00:01:12,570 --> 00:01:21,060
afterwards so who are you guys who are

00:01:15,780 --> 00:01:25,920
module developers okay who is new to

00:01:21,060 --> 00:01:29,869
Drupal 8 so some a lot of people who's

00:01:25,920 --> 00:01:32,880
new to Drupal altogether some people

00:01:29,869 --> 00:01:34,680
who's come from Symphony you guys

00:01:32,880 --> 00:01:38,040
Symphony experience outside of Drupal a

00:01:34,680 --> 00:01:41,340
few people who's new to object or any

00:01:38,040 --> 00:01:46,649
programming okay cool just trying to get

00:01:41,340 --> 00:01:48,720
a kind of idea so this is not really

00:01:46,649 --> 00:01:51,960
like an intro to Drupal 8 module

00:01:48,720 --> 00:01:55,049
programming this is kind of a so Drupal

00:01:51,960 --> 00:01:57,630
8 it's pretty different from Drupal 7 I

00:01:55,049 --> 00:01:59,100
come from a Java background so I really

00:01:57,630 --> 00:02:01,530
like a lot of this stuff because this is

00:01:59,100 --> 00:02:03,090
there's a lot of stuff in Drupal 7 or

00:02:01,530 --> 00:02:04,350
actually I came to Drupal in Drupal 5

00:02:03,090 --> 00:02:06,479
and there was a lot of stuff that was

00:02:04,350 --> 00:02:08,129
like what's going on I hate this why do

00:02:06,479 --> 00:02:11,879
I have to name this function exactly the

00:02:08,129 --> 00:02:12,360
same way and so now in Drupal 8 I got

00:02:11,879 --> 00:02:14,040
used to

00:02:12,360 --> 00:02:15,900
and then Drupal 8 came around I was like

00:02:14,040 --> 00:02:17,640
oh yeah this is getting rid of all the

00:02:15,900 --> 00:02:20,400
stuff I hated about Drupal that I forgot

00:02:17,640 --> 00:02:22,200
I hated so for me it's really nice it's

00:02:20,400 --> 00:02:23,030
a big change but I think you know mostly

00:02:22,200 --> 00:02:25,710
for the better

00:02:23,030 --> 00:02:29,820
so today's examples are going to be I

00:02:25,710 --> 00:02:31,860
think powerful sort of new things that

00:02:29,820 --> 00:02:32,850
you couldn't you either couldn't do in

00:02:31,860 --> 00:02:35,130
Drupal 8

00:02:32,850 --> 00:02:37,860
sorry Drupal 7 or we're kind of hard to

00:02:35,130 --> 00:02:40,140
do or hard to figure out I think they're

00:02:37,860 --> 00:02:42,300
cool I think they're hard to figure out

00:02:40,140 --> 00:02:45,060
like it a lot of these things took me a

00:02:42,300 --> 00:02:46,709
while to figure out so I'm not going to

00:02:45,060 --> 00:02:49,230
go through like how to make routes and

00:02:46,709 --> 00:02:50,910
stuff like that there's a lot of

00:02:49,230 --> 00:02:53,550
tutorials for that there's hopefully

00:02:50,910 --> 00:02:57,720
some basic Drupal 8 sessions here this

00:02:53,550 --> 00:03:00,120
week so there's a git repo you could

00:02:57,720 --> 00:03:03,030
probably just google github Ted Bo and

00:03:00,120 --> 00:03:05,360
find it but it's github.com Ted Bo

00:03:03,030 --> 00:03:08,970
Drupal 8 power and so all of the modules

00:03:05,360 --> 00:03:10,830
that I'm presenting are in this one repo

00:03:08,970 --> 00:03:13,410
just so it's easier for presentation so

00:03:10,830 --> 00:03:14,940
if you want to look at them you could

00:03:13,410 --> 00:03:17,340
look at them now or but if you want to

00:03:14,940 --> 00:03:20,250
see them don't worry if I go through the

00:03:17,340 --> 00:03:24,060
code I might just the wrong height or

00:03:20,250 --> 00:03:25,590
something just really that so if you

00:03:24,060 --> 00:03:27,570
don't if I go through the code examples

00:03:25,590 --> 00:03:29,130
too fast I mean definitely ask me

00:03:27,570 --> 00:03:33,390
questions but also realize you'll be

00:03:29,130 --> 00:03:35,459
able to see all these code later so

00:03:33,390 --> 00:03:36,980
today we're gonna go over you know the

00:03:35,459 --> 00:03:39,900
importance of obscure new programming

00:03:36,980 --> 00:03:42,480
importance of having an IDE and I think

00:03:39,900 --> 00:03:44,010
some people I've talked to after this

00:03:42,480 --> 00:03:46,650
talk when I've done that other times if

00:03:44,010 --> 00:03:49,290
if I get no other message across you

00:03:46,650 --> 00:03:51,330
that Drupal 8 is much much easier if

00:03:49,290 --> 00:03:53,910
you're using an IDE so in an integrated

00:03:51,330 --> 00:03:55,799
development environment I use phpstorm

00:03:53,910 --> 00:03:57,630
but there's other the really good ones

00:03:55,799 --> 00:04:00,269
also I'm sure I used to use eclipse was

00:03:57,630 --> 00:04:03,530
good I'm gonna talk about base classes

00:04:00,269 --> 00:04:05,730
base fields extending classes creating

00:04:03,530 --> 00:04:09,989
condition plugins and then just to

00:04:05,730 --> 00:04:13,620
emphasize again importance of an IDE an

00:04:09,989 --> 00:04:15,900
IDE and obstruent programming so Drupal

00:04:13,620 --> 00:04:18,299
8 is object-oriented it is more

00:04:15,900 --> 00:04:20,489
complicated but it's more encapsulated I

00:04:18,299 --> 00:04:21,900
feel like it's more self documenting you

00:04:20,489 --> 00:04:23,220
look at the code and kind of figure out

00:04:21,900 --> 00:04:25,170
what's going on more

00:04:23,220 --> 00:04:26,670
than I could in Drupal 7 I think

00:04:25,170 --> 00:04:28,460
especially if you're not coming from

00:04:26,670 --> 00:04:31,320
Drupal 7 if you're coming from other

00:04:28,460 --> 00:04:35,580
frameworks you might find it a lot

00:04:31,320 --> 00:04:37,590
easier because it's self documenting I

00:04:35,580 --> 00:04:41,100
find it a lot easier to learn and again

00:04:37,590 --> 00:04:42,810
all of these things the whole self

00:04:41,100 --> 00:04:48,140
documenting and being easier to learn is

00:04:42,810 --> 00:04:50,520
kind of depends on you using an ID so

00:04:48,140 --> 00:04:52,290
we're gonna have examples of each module

00:04:50,520 --> 00:04:54,780
sort of talked about if they're object

00:04:52,290 --> 00:04:59,220
oriented how and how an ID helps us and

00:04:54,780 --> 00:05:01,230
then gonna stop and demo okay so first

00:04:59,220 --> 00:05:06,300
concept I want to talk about is base

00:05:01,230 --> 00:05:08,400
fields and base fields are not the

00:05:06,300 --> 00:05:10,770
fields that you see on the manage fields

00:05:08,400 --> 00:05:12,630
page these are fields that Drupal has

00:05:10,770 --> 00:05:15,300
made for you either core or another

00:05:12,630 --> 00:05:17,340
module so these aren't fields typically

00:05:15,300 --> 00:05:22,650
that you can add or remove just from the

00:05:17,340 --> 00:05:25,380
UI so examples of on the node entity

00:05:22,650 --> 00:05:27,720
type we have author create a date the

00:05:25,380 --> 00:05:30,210
change date and the content type itself

00:05:27,720 --> 00:05:34,370
of a particular node these are all base

00:05:30,210 --> 00:05:37,650
fields on the user we have the name mail

00:05:34,370 --> 00:05:40,290
password and roles are all base field so

00:05:37,650 --> 00:05:42,660
these are things and Drupal seven that

00:05:40,290 --> 00:05:45,600
weren't we're called properties in

00:05:42,660 --> 00:05:46,919
Drupal 7 but in Drupal 8 it's all using

00:05:45,600 --> 00:05:51,540
the same field system which we're gonna

00:05:46,919 --> 00:05:54,120
see we get a lot of advantage of that so

00:05:51,540 --> 00:05:57,090
base fields use field widgets and field

00:05:54,120 --> 00:05:59,040
formatter is much like much like the

00:05:57,090 --> 00:06:00,450
fields that you add do some of them are

00:05:59,040 --> 00:06:03,780
configurable some of them aren't

00:06:00,450 --> 00:06:05,490
configurable you can actually add new

00:06:03,780 --> 00:06:09,120
base fields through codes and you can

00:06:05,490 --> 00:06:11,520
alter existing base fields so basic

00:06:09,120 --> 00:06:15,510
fields examples is the node author field

00:06:11,520 --> 00:06:20,280
is an entity reference to the user so we

00:06:15,510 --> 00:06:21,930
see it down here it is form configurable

00:06:20,280 --> 00:06:23,370
meaning you can change instead of say

00:06:21,930 --> 00:06:26,280
autocomplete you could actually change

00:06:23,370 --> 00:06:27,630
it to a drop-down though if you have

00:06:26,280 --> 00:06:30,570
more than five users on your site I

00:06:27,630 --> 00:06:32,400
probably wouldn't recommend that so we

00:06:30,570 --> 00:06:36,180
can use the entity reference widget so

00:06:32,400 --> 00:06:38,100
any widget that you can use on say the

00:06:36,180 --> 00:06:41,850
bags filled you could potentially use on

00:06:38,100 --> 00:06:45,720
the author field it is not display

00:06:41,850 --> 00:06:47,160
configurable so you're not gonna see it

00:06:45,720 --> 00:06:48,930
here display the author or not I think

00:06:47,160 --> 00:06:52,800
I'm sure there's probably a module to do

00:06:48,930 --> 00:06:55,889
that it yeah so it's not view

00:06:52,800 --> 00:06:59,190
configurable so you won't see it on the

00:06:55,889 --> 00:07:04,410
manage display tab so another base field

00:06:59,190 --> 00:07:06,539
is user roles so in Drupal 7 I guess

00:07:04,410 --> 00:07:09,060
this was a property but this is actually

00:07:06,539 --> 00:07:11,849
an entity reference to a role which is a

00:07:09,060 --> 00:07:14,759
configuration entity so in Drupal 8 you

00:07:11,849 --> 00:07:17,280
have the concept of content entities

00:07:14,759 --> 00:07:19,530
which is usually stuff that you're going

00:07:17,280 --> 00:07:21,630
to somehow enter through the UI

00:07:19,530 --> 00:07:23,099
well configurations entities you would

00:07:21,630 --> 00:07:24,960
enter through the UI also but

00:07:23,099 --> 00:07:27,570
configuration entities you would export

00:07:24,960 --> 00:07:30,720
through configuration usually the well

00:07:27,570 --> 00:07:32,009
you can the main differences or one way

00:07:30,720 --> 00:07:34,320
to tell is if you have a lot of them

00:07:32,009 --> 00:07:37,710
they're usually content entities so the

00:07:34,320 --> 00:07:40,110
user roles is a configuration and entity

00:07:37,710 --> 00:07:44,250
to any reference to a rural

00:07:40,110 --> 00:07:46,159
configuration entity so you can use a

00:07:44,250 --> 00:07:50,159
lot of the same for matters but not all

00:07:46,159 --> 00:07:52,229
you can use widgets it's not

00:07:50,159 --> 00:07:53,789
configurable by the form by default so

00:07:52,229 --> 00:07:56,099
you can't say oh well I want to change

00:07:53,789 --> 00:07:57,210
the I think it's a checkbox by default I

00:07:56,099 --> 00:07:59,180
want to change this to an autocomplete

00:07:57,210 --> 00:08:01,740
it's not going to give you that ability

00:07:59,180 --> 00:08:03,479
and it's not view configurable so you

00:08:01,740 --> 00:08:05,880
can't say I want to display the roles

00:08:03,479 --> 00:08:08,909
and I want to display them as links to

00:08:05,880 --> 00:08:10,650
roles or whatever so let's look at an

00:08:08,909 --> 00:08:14,759
example module this module is called

00:08:10,650 --> 00:08:17,039
real author so it tracks who really

00:08:14,759 --> 00:08:19,229
wrote the content so often you'll have a

00:08:17,039 --> 00:08:20,669
site where people are signing in and

00:08:19,229 --> 00:08:23,220
they're filling out content but they're

00:08:20,669 --> 00:08:25,080
filling it on behalf of another user or

00:08:23,220 --> 00:08:27,270
maybe somebody who's actually only

00:08:25,080 --> 00:08:30,449
represented by content on your site so

00:08:27,270 --> 00:08:32,159
if you maybe run a you know blog for a

00:08:30,449 --> 00:08:36,089
famous author maybe they don't even sign

00:08:32,159 --> 00:08:39,419
in so it separates the Drupal user from

00:08:36,089 --> 00:08:41,310
the author so an example would be we

00:08:39,419 --> 00:08:44,880
have the node entity type we have the

00:08:41,310 --> 00:08:48,829
author which is a user entity reference

00:08:44,880 --> 00:08:48,829
field and this is what core provides

00:08:49,080 --> 00:08:54,180
all right let me know if that happens

00:08:52,810 --> 00:08:57,070
again because I probably won't see it

00:08:54,180 --> 00:08:59,290
and then our module the real author

00:08:57,070 --> 00:09:01,060
would actually create another field

00:08:59,290 --> 00:09:03,100
that's also a user in any reference

00:09:01,060 --> 00:09:04,450
field and this would we'd call it real

00:09:03,100 --> 00:09:07,830
author but same thing

00:09:04,450 --> 00:09:11,200
it's basically sorta on the same level

00:09:07,830 --> 00:09:12,490
so real author removes this module is

00:09:11,200 --> 00:09:14,350
actually going to remove editing

00:09:12,490 --> 00:09:16,750
configuration from the author field so

00:09:14,350 --> 00:09:18,460
if we're gonna track who's the real

00:09:16,750 --> 00:09:21,250
author by having somebody enter in

00:09:18,460 --> 00:09:23,260
another user we want to use the core

00:09:21,250 --> 00:09:25,300
field should just say whoever signed in

00:09:23,260 --> 00:09:28,750
is automatically just the just the core

00:09:25,300 --> 00:09:32,710
author so the author is always going to

00:09:28,750 --> 00:09:34,750
be the signed in user so we're gonna do

00:09:32,710 --> 00:09:37,840
this by implementing one hook in the

00:09:34,750 --> 00:09:40,540
base field Mpho alter and we're gonna

00:09:37,840 --> 00:09:42,550
add a new field and we're going to use

00:09:40,540 --> 00:09:45,340
another hook entity base field info

00:09:42,550 --> 00:09:48,160
alter and we're gonna remove access to

00:09:45,340 --> 00:09:51,220
the author field so that is going to

00:09:48,160 --> 00:09:54,370
give us on the manage forms page another

00:09:51,220 --> 00:09:57,000
field that is real author and we can

00:09:54,370 --> 00:10:01,750
change to whatever autocomplete or

00:09:57,000 --> 00:10:03,250
drop-down whatever we want and we're not

00:10:01,750 --> 00:10:05,140
gonna see this on the manage fields

00:10:03,250 --> 00:10:06,940
plates again so even though we're adding

00:10:05,140 --> 00:10:09,010
this through our module it's like cores

00:10:06,940 --> 00:10:13,030
author field it's we can't take it away

00:10:09,010 --> 00:10:16,210
via the UI one of the real big benefits

00:10:13,030 --> 00:10:18,250
of this is it actually shows up on the

00:10:16,210 --> 00:10:20,680
table I think it's called no data table

00:10:18,250 --> 00:10:23,500
but basically where we where all of the

00:10:20,680 --> 00:10:25,900
other what would have been properties in

00:10:23,500 --> 00:10:27,850
Drupal 7 or on the table so they're not

00:10:25,900 --> 00:10:31,030
connected by a field table where you

00:10:27,850 --> 00:10:33,880
have to do a join it actually is on the

00:10:31,030 --> 00:10:35,950
sort of the base node data table itself

00:10:33,880 --> 00:10:38,740
so we have our real author right next to

00:10:35,950 --> 00:10:43,120
the node ID right next to the type or

00:10:38,740 --> 00:10:44,650
the UID which is the the core author and

00:10:43,120 --> 00:10:46,300
of course this would have a lot of

00:10:44,650 --> 00:10:49,320
performance implications because you're

00:10:46,300 --> 00:10:49,320
not doing a sequel joint

00:10:49,960 --> 00:10:55,360
so is it object-oriented so not exactly

00:10:52,390 --> 00:10:58,570
in the fact that we're using old-school

00:10:55,360 --> 00:11:00,700
like Drupal 7 hook but it does benefit

00:10:58,570 --> 00:11:03,580
from Drupal 8 classes and

00:11:00,700 --> 00:11:05,560
take a look at how that works so before

00:11:03,580 --> 00:11:08,320
it's a little clip to avoid me doing all

00:11:05,560 --> 00:11:12,600
live demos but so if we see this up at

00:11:08,320 --> 00:11:17,200
the top it's we're implementing hooked

00:11:12,600 --> 00:11:19,900
entity base field info so basically this

00:11:17,200 --> 00:11:22,660
is where we can add new fields if we

00:11:19,900 --> 00:11:25,060
want to or basically change checking to

00:11:22,660 --> 00:11:27,270
see if it's a node entity type and if it

00:11:25,060 --> 00:11:31,450
is we're creating a new base field

00:11:27,270 --> 00:11:36,550
that's an entity reference and we are

00:11:31,450 --> 00:11:40,090
going to feel the other author I guess I

00:11:36,550 --> 00:11:43,740
left put this twice we're gonna yeah

00:11:40,090 --> 00:11:46,720
create the real author field and then

00:11:43,740 --> 00:11:48,760
once we start typing because this is

00:11:46,720 --> 00:11:52,180
because I'm using knight de and it knows

00:11:48,760 --> 00:11:53,550
what real author is it actually can tell

00:11:52,180 --> 00:11:57,460
me all the methods that are available

00:11:53,550 --> 00:12:00,460
and easily lets me fill the men so I did

00:11:57,460 --> 00:12:02,350
label description cardinality meaning

00:12:00,460 --> 00:12:04,150
only one of these fields you could have

00:12:02,350 --> 00:12:07,120
two obviously if you I want two authors

00:12:04,150 --> 00:12:08,350
I type is required which is wrong

00:12:07,120 --> 00:12:09,550
because that's telling me if it's

00:12:08,350 --> 00:12:12,700
required I want to set that it's

00:12:09,550 --> 00:12:14,860
required again an IDE you'll see that

00:12:12,700 --> 00:12:19,510
pops up and tells me hey it's expecting

00:12:14,860 --> 00:12:23,320
a boolean here and then I want to set

00:12:19,510 --> 00:12:25,810
the display configurable on the view I

00:12:23,320 --> 00:12:30,130
want to say yes it's displayable on the

00:12:25,810 --> 00:12:31,690
basically manage display tab if I wanted

00:12:30,130 --> 00:12:35,320
to know what it is I can just sort of

00:12:31,690 --> 00:12:37,090
look in here and because I'm using an

00:12:35,320 --> 00:12:40,690
IDE I can go to the help and it can say

00:12:37,090 --> 00:12:44,500
oh it's expecting either viewer form and

00:12:40,690 --> 00:12:47,680
then a boolean a boolean field so in

00:12:44,500 --> 00:12:49,960
Drupal seven instead of actually methods

00:12:47,680 --> 00:12:54,460
on an object how would you do something

00:12:49,960 --> 00:12:57,730
like this usually an array a big array

00:12:54,460 --> 00:13:00,250
probably so in Drupal 8 we had these are

00:12:57,730 --> 00:13:02,200
we had we did have hooks so it's similar

00:13:00,250 --> 00:13:03,880
in that we have hooks but I don't have

00:13:02,200 --> 00:13:05,560
to send back a big array of like

00:13:03,880 --> 00:13:07,390
configuration for the field actually

00:13:05,560 --> 00:13:09,910
forgot what the poke wasn't you're both

00:13:07,390 --> 00:13:12,819
stepping through this but you can pretty

00:13:09,910 --> 00:13:16,299
much be a safe bet somehow in Drupal 7

00:13:12,819 --> 00:13:19,689
have involved a big nested array so I

00:13:16,299 --> 00:13:23,049
like this way better because one I don't

00:13:19,689 --> 00:13:25,509
have to memorize what the keys for the

00:13:23,049 --> 00:13:27,850
array and the values are the fact that

00:13:25,509 --> 00:13:31,029
when I start typing my ID can say hey

00:13:27,850 --> 00:13:33,399
you have you can set the label here and

00:13:31,029 --> 00:13:35,109
then if I didn't know say for set

00:13:33,399 --> 00:13:37,869
display configurable what that actually

00:13:35,109 --> 00:13:40,209
means it's gonna easily pop-up help and

00:13:37,869 --> 00:13:42,549
tell me what it what it might mean

00:13:40,209 --> 00:13:45,879
whereas in Drupal 7 I was always going

00:13:42,549 --> 00:13:47,559
to the API pages on Drupal on drupal.org

00:13:45,879 --> 00:13:50,559
to say you know what am I supposed to

00:13:47,559 --> 00:13:51,929
put in this big array so there's still

00:13:50,559 --> 00:13:55,869
some big arrays so don't worry

00:13:51,929 --> 00:13:58,529
especially in the render system the

00:13:55,869 --> 00:14:05,910
other code in let me just look at this

00:13:58,529 --> 00:14:05,910
in my IDE try and make this much bigger

00:14:06,620 --> 00:14:09,820
[Music]

00:14:21,490 --> 00:14:25,990
so this is basically what we set here

00:14:23,860 --> 00:14:28,390
the other one that we are doing here is

00:14:25,990 --> 00:14:30,519
the hook entity basic info altar and

00:14:28,390 --> 00:14:35,290
here again I'm looking to see if it's

00:14:30,519 --> 00:14:38,019
the node entity type and I grab the UID

00:14:35,290 --> 00:14:40,810
field in here I want to display

00:14:38,019 --> 00:14:43,690
configurable and I want to say by

00:14:40,810 --> 00:14:47,529
default you can configure on the form

00:14:43,690 --> 00:14:49,839
the you can actually change the author

00:14:47,529 --> 00:14:51,399
from say autocomplete to a drop-down I

00:14:49,839 --> 00:14:54,180
want to actually take it away from the

00:14:51,399 --> 00:14:57,279
form the manage forms place page

00:14:54,180 --> 00:14:58,990
altogether and then I also want to set

00:14:57,279 --> 00:15:00,820
the display options non meaning it's

00:14:58,990 --> 00:15:03,070
never going to show up on the form so

00:15:00,820 --> 00:15:05,230
I'm basically taking away the regular

00:15:03,070 --> 00:15:07,540
author field so how that sort of looks

00:15:05,230 --> 00:15:12,459
what I showed in that video is because

00:15:07,540 --> 00:15:14,290
my IDE knows this is a field then as

00:15:12,459 --> 00:15:17,110
soon as I type the arrow here it's gonna

00:15:14,290 --> 00:15:19,060
tell me all of the things so I don't

00:15:17,110 --> 00:15:24,579
know does anybody prefer big arrays over

00:15:19,060 --> 00:15:26,860
this okay and the other thing nice thing

00:15:24,579 --> 00:15:30,310
about this is if I hit in mind my case

00:15:26,860 --> 00:15:32,290
f1 I can you know see if I didn't know

00:15:30,310 --> 00:15:35,260
what display configurable was I could do

00:15:32,290 --> 00:15:37,180
that also it's really easy to jump to

00:15:35,260 --> 00:15:40,570
the actual where this is defined if I

00:15:37,180 --> 00:15:43,630
wanted to see what's going on I really

00:15:40,570 --> 00:15:46,600
recommend also in Drupal 7 but in Drupal

00:15:43,630 --> 00:15:48,820
8 especially when you're sort of calling

00:15:46,600 --> 00:15:50,320
these functions if you have time just

00:15:48,820 --> 00:15:52,470
click on them open them up see what

00:15:50,320 --> 00:15:54,699
they're doing I think learning from

00:15:52,470 --> 00:15:57,790
learning from core and other modules is

00:15:54,699 --> 00:15:59,410
a really great way so to learn sort of

00:15:57,790 --> 00:16:05,260
how Drupal works but also really good

00:15:59,410 --> 00:16:14,680
code examples check my time 1215 doing

00:16:05,260 --> 00:16:16,480
great okay all right okay so other ideas

00:16:14,680 --> 00:16:18,490
for base fields you could use a term

00:16:16,480 --> 00:16:21,040
reference for your main site categories

00:16:18,490 --> 00:16:22,449
so instead of adding a field a term

00:16:21,040 --> 00:16:23,949
reference field you could actually have

00:16:22,449 --> 00:16:26,019
it in code so when you turned on a

00:16:23,949 --> 00:16:29,840
module nodes just got a term reference

00:16:26,019 --> 00:16:32,060
field directly on their node table

00:16:29,840 --> 00:16:33,260
that would provide better performance

00:16:32,060 --> 00:16:36,890
and also you wouldn't have to configure

00:16:33,260 --> 00:16:38,750
it each site another idea for a way to

00:16:36,890 --> 00:16:41,090
use base fields and modules is you could

00:16:38,750 --> 00:16:44,810
potentially put a entity reference to a

00:16:41,090 --> 00:16:46,820
user on the term on the term entity type

00:16:44,810 --> 00:16:51,710
so you could actually implement a sort

00:16:46,820 --> 00:16:55,700
of authorship type for terms so for date

00:16:51,710 --> 00:16:58,340
time based fields Drupal has created and

00:16:55,700 --> 00:17:00,230
changed time stamps but not a first

00:16:58,340 --> 00:17:02,780
published date so you could actually add

00:17:00,230 --> 00:17:04,760
a base fields that's first published of

00:17:02,780 --> 00:17:06,830
course you'd actually have to you know

00:17:04,760 --> 00:17:08,540
write implementations to say ok once

00:17:06,830 --> 00:17:10,220
I've created this field I won't when

00:17:08,540 --> 00:17:12,620
it's first published I'll I'll save the

00:17:10,220 --> 00:17:14,720
date the other one is a user block date

00:17:12,620 --> 00:17:16,070
so if you block users maybe you want to

00:17:14,720 --> 00:17:18,050
have an idea how long they've been

00:17:16,070 --> 00:17:20,000
blocked for so but there's not a field

00:17:18,050 --> 00:17:21,770
on the user for that so you could

00:17:20,000 --> 00:17:23,960
actually add it via the base field it'd

00:17:21,770 --> 00:17:26,390
be on the base table and say ok this

00:17:23,960 --> 00:17:27,590
users been blocked for one year maybe I

00:17:26,390 --> 00:17:31,550
should just kick them off or maybe

00:17:27,590 --> 00:17:33,980
that's long enough to block them you

00:17:31,550 --> 00:17:35,720
could do an original import ID on any

00:17:33,980 --> 00:17:37,520
entry types that you're migrating them

00:17:35,720 --> 00:17:39,620
in you could actually add a base field

00:17:37,520 --> 00:17:41,060
that says hey for this legacy system

00:17:39,620 --> 00:17:44,300
that we brought it in I want to always

00:17:41,060 --> 00:17:45,800
remember no matter what the ID and maybe

00:17:44,300 --> 00:17:47,960
you don't want that to be display

00:17:45,800 --> 00:17:50,060
configurable or form configurable you

00:17:47,960 --> 00:17:54,830
just for safety you just want to have it

00:17:50,060 --> 00:17:57,260
for whatever reason so remove access to

00:17:54,830 --> 00:17:58,820
the publish date so you can maybe take

00:17:57,260 --> 00:18:02,060
that away so people actually can't

00:17:58,820 --> 00:18:04,010
configure on the form you could take

00:18:02,060 --> 00:18:05,870
away the form which it all together for

00:18:04,010 --> 00:18:07,310
and just publish date would always be

00:18:05,870 --> 00:18:11,510
the default value which is when it's

00:18:07,310 --> 00:18:13,850
actually published or created I guess in

00:18:11,510 --> 00:18:15,860
this case you could make the roles

00:18:13,850 --> 00:18:17,630
widget configurable if you have tons of

00:18:15,860 --> 00:18:18,920
roles on your site instead of the check

00:18:17,630 --> 00:18:21,530
boxes you could do an autocomplete

00:18:18,920 --> 00:18:23,270
because again roles is just an entity

00:18:21,530 --> 00:18:25,870
reference so any of the widgets you can

00:18:23,270 --> 00:18:28,100
use on any reference you could use that

00:18:25,870 --> 00:18:32,870
so the next module want to talk about is

00:18:28,100 --> 00:18:35,060
the show user fields module so this

00:18:32,870 --> 00:18:37,970
basically makes hidden base fields

00:18:35,060 --> 00:18:40,520
viewable and configurable so if we look

00:18:37,970 --> 00:18:43,370
at the user type we have fields roles

00:18:40,520 --> 00:18:46,610
last login last acts

00:18:43,370 --> 00:18:48,230
and these roles you these fields you

00:18:46,610 --> 00:18:52,070
don't actually see them on the forum

00:18:48,230 --> 00:18:53,809
where you can configure them and we're

00:18:52,070 --> 00:18:56,779
gonna implement the hook entity base

00:18:53,809 --> 00:18:59,299
field info alter and we're gonna change

00:18:56,779 --> 00:19:01,610
the fields to be display configurable so

00:18:59,299 --> 00:19:03,559
you can actually display them in the

00:19:01,610 --> 00:19:06,350
manage display and and say okay this

00:19:03,559 --> 00:19:06,889
person has XYZ role so everybody can see

00:19:06,350 --> 00:19:09,679
it

00:19:06,889 --> 00:19:15,200
or this person last access the site on

00:19:09,679 --> 00:19:16,610
you know June 23rd is it object oriented

00:19:15,200 --> 00:19:18,529
so in the same way as the previous

00:19:16,610 --> 00:19:21,440
module it's not object Orion in the

00:19:18,529 --> 00:19:23,659
sense that we're using hooks but it does

00:19:21,440 --> 00:19:32,509
benefit from Drupal 8 classes so let's

00:19:23,659 --> 00:19:34,999
take a look at that so again in this

00:19:32,509 --> 00:19:39,019
module we're still only going to have a

00:19:34,999 --> 00:19:41,960
a dot module file because we're just

00:19:39,019 --> 00:19:43,690
implementing hooks and we're going to

00:19:41,960 --> 00:19:46,490
that's not the help that's the help hook

00:19:43,690 --> 00:19:50,360
so we are going to implement hook entity

00:19:46,490 --> 00:19:51,679
based field info alter and again we're

00:19:50,360 --> 00:19:53,899
gonna check to see the entity type is

00:19:51,679 --> 00:19:55,999
user then we're gonna have a list of

00:19:53,899 --> 00:19:59,539
role of fields and we're gonna say for

00:19:55,999 --> 00:20:01,580
these fields we want to loop around and

00:19:59,539 --> 00:20:04,730
do something with them so we're gonna

00:20:01,580 --> 00:20:06,499
make sure that it's actually there make

00:20:04,730 --> 00:20:09,820
sure some other field the other module

00:20:06,499 --> 00:20:13,850
didn't remove it and then we're going to

00:20:09,820 --> 00:20:16,490
set the then we're going to set the

00:20:13,850 --> 00:20:19,490
display configurable to true so this by

00:20:16,490 --> 00:20:21,559
default is false so basically when you

00:20:19,490 --> 00:20:24,169
go to the manage display page for users

00:20:21,559 --> 00:20:26,539
you don't see the ability to say show me

00:20:24,169 --> 00:20:29,570
when this user was last access to sight

00:20:26,539 --> 00:20:31,190
so everybody could see it one thing I do

00:20:29,570 --> 00:20:32,779
want to show about tonight this is

00:20:31,190 --> 00:20:35,360
phpstorm but I'm sure pretty sure other

00:20:32,779 --> 00:20:39,379
IDs use this right now if I take this

00:20:35,360 --> 00:20:41,480
field I again can have all in the

00:20:39,379 --> 00:20:44,090
information about all the methods but by

00:20:41,480 --> 00:20:51,350
default if I actually messed up this

00:20:44,090 --> 00:20:53,720
line before now the ID has no idea like

00:20:51,350 --> 00:20:55,980
what field is so it's basically saying I

00:20:53,720 --> 00:20:57,570
don't know what this is you can you

00:20:55,980 --> 00:21:00,120
invoke methods but I'm not gonna help

00:20:57,570 --> 00:21:02,700
you here so what's happening here is in

00:21:00,120 --> 00:21:05,760
the previous example the module actually

00:21:02,700 --> 00:21:08,160
was the field was a return value of a

00:21:05,760 --> 00:21:09,870
function of a method that the IDE knew

00:21:08,160 --> 00:21:11,520
about so it knew like oh you're

00:21:09,870 --> 00:21:13,799
returning from this method I can look at

00:21:11,520 --> 00:21:15,059
this method I know it returns a field

00:21:13,799 --> 00:21:17,220
definition so I'm going to give you all

00:21:15,059 --> 00:21:20,220
the information about it but in this

00:21:17,220 --> 00:21:23,190
case I'm just grabbing it from an array

00:21:20,220 --> 00:21:25,320
so it doesn't actually know what's

00:21:23,190 --> 00:21:27,720
stored in that array so it's gonna say

00:21:25,320 --> 00:21:29,880
well you know it's an it's something but

00:21:27,720 --> 00:21:33,840
I have no idea what it is you can give

00:21:29,880 --> 00:21:36,600
your IDE hence so I'm saying hey the

00:21:33,840 --> 00:21:40,200
variable field is of this particular

00:21:36,600 --> 00:21:42,000
class here so as soon as I do that and I

00:21:40,200 --> 00:21:44,130
start typing it's gonna say hey I know

00:21:42,000 --> 00:21:47,070
what actually you see what it is it's a

00:21:44,130 --> 00:21:49,530
base field definition so it's gonna say

00:21:47,070 --> 00:21:53,130
I know exactly the methods that are on a

00:21:49,530 --> 00:21:54,870
base field definition so sometimes you

00:21:53,130 --> 00:21:56,549
actually have to go through a which I'm

00:21:54,870 --> 00:21:58,169
not going to get given this talk but yet

00:21:56,549 --> 00:21:59,940
maybe have to use it a bug or sometimes

00:21:58,169 --> 00:22:03,480
you could var dump it to see what it

00:21:59,940 --> 00:22:04,950
actually is I I do step debugging so you

00:22:03,480 --> 00:22:07,110
might not know right out of the bat that

00:22:04,950 --> 00:22:08,669
that's a base field definition but you

00:22:07,110 --> 00:22:10,710
could say get class printed out of the

00:22:08,669 --> 00:22:12,929
screen and then update your code like

00:22:10,710 --> 00:22:16,679
that the other thing that's really nice

00:22:12,929 --> 00:22:18,929
about me doing that is it's going to

00:22:16,679 --> 00:22:21,950
tell me hey DF is not a function here

00:22:18,929 --> 00:22:25,919
it's not a method on this object and but

00:22:21,950 --> 00:22:28,860
presumably if if you've heard of the

00:22:25,919 --> 00:22:30,090
policy from upgrade policy from Drupal 8

00:22:28,860 --> 00:22:32,760
to Drupal 9 we're going to remove

00:22:30,090 --> 00:22:36,390
deprecated functions if something like

00:22:32,760 --> 00:22:40,740
set display or set description here was

00:22:36,390 --> 00:22:42,510
deprecated in Drupal 9 there IDE would

00:22:40,740 --> 00:22:44,490
tell me like hey you're using deprecated

00:22:42,510 --> 00:22:46,080
function so I could use the inspection

00:22:44,490 --> 00:22:48,059
to look at all of my custom code base

00:22:46,080 --> 00:22:51,090
and say telling me all the deprecated

00:22:48,059 --> 00:22:55,950
functions I'm using you know Drupal 9 is

00:22:51,090 --> 00:22:57,630
coming someday so help you but we're

00:22:55,950 --> 00:23:02,760
adding features to Drupal 8 so it's not

00:22:57,630 --> 00:23:05,250
that important okay all right so we set

00:23:02,760 --> 00:23:07,549
display configurable just go back to the

00:23:05,250 --> 00:23:07,549
PowerPoint

00:23:10,160 --> 00:23:16,820
so again it's not it's not object going

00:23:15,650 --> 00:23:19,820
in in the way that you've heard about

00:23:16,820 --> 00:23:22,280
plugins for Drupal 8 in their classes

00:23:19,820 --> 00:23:24,620
but it still benefits from the fact that

00:23:22,280 --> 00:23:28,640
we using object-oriented Drupal 8 and

00:23:24,620 --> 00:23:31,460
benefits from a really good IDE this is

00:23:28,640 --> 00:23:34,190
the code I just showed you and then here

00:23:31,460 --> 00:23:36,920
last on them on I can actually display

00:23:34,190 --> 00:23:40,190
last access last login I can display

00:23:36,920 --> 00:23:42,620
also the roles here and they show up on

00:23:40,190 --> 00:23:45,710
the manage display like any other field

00:23:42,620 --> 00:23:47,360
so I I mean sort of the main sort of get

00:23:45,710 --> 00:23:49,100
the takeaway from the last two modules

00:23:47,360 --> 00:23:51,500
is base fields are in a lot of ways just

00:23:49,100 --> 00:23:53,240
like other fields it's just you have to

00:23:51,500 --> 00:23:55,820
implement them through code either

00:23:53,240 --> 00:24:02,480
adding your own or taking stuff taking

00:23:55,820 --> 00:24:05,720
away or changing existing ones so the

00:24:02,480 --> 00:24:09,080
next module is the no access entity

00:24:05,720 --> 00:24:12,620
reference label it's very succinctly

00:24:09,080 --> 00:24:15,740
named module I think so this allows

00:24:12,620 --> 00:24:17,270
reference entity labels to you to view

00:24:15,740 --> 00:24:20,510
the labels without actually having

00:24:17,270 --> 00:24:23,330
entity view access so basically where I

00:24:20,510 --> 00:24:25,130
got this idea is if you look at a node

00:24:23,330 --> 00:24:26,390
and you see the author but you don't

00:24:25,130 --> 00:24:29,240
actually have permissions to view

00:24:26,390 --> 00:24:31,520
profiles you still see the name of the

00:24:29,240 --> 00:24:34,310
author but there's no link to click

00:24:31,520 --> 00:24:36,740
right but that's not true if for other

00:24:34,310 --> 00:24:39,530
entity reference so again the author on

00:24:36,740 --> 00:24:41,690
a node is just an init e reference so if

00:24:39,530 --> 00:24:45,020
I have another entity reference that is

00:24:41,690 --> 00:24:48,200
two content by default it's not going to

00:24:45,020 --> 00:24:49,970
show me what the labels are again the

00:24:48,200 --> 00:24:52,610
label for a node is the same as the

00:24:49,970 --> 00:24:54,680
label for user it's same concept because

00:24:52,610 --> 00:24:56,510
I don't I don't have access to see it so

00:24:54,680 --> 00:25:00,140
I want a field formatter for entity

00:24:56,510 --> 00:25:02,450
references that show me the title but

00:25:00,140 --> 00:25:06,170
only show me the link if I act actually

00:25:02,450 --> 00:25:08,210
have access to it so it makes these the

00:25:06,170 --> 00:25:10,970
viewable entities will actually be links

00:25:08,210 --> 00:25:13,730
so again acts like the author label for

00:25:10,970 --> 00:25:18,350
other references and this one actually

00:25:13,730 --> 00:25:20,780
implements no hooks so this is an

00:25:18,350 --> 00:25:21,530
example here we have linked content

00:25:20,780 --> 00:25:24,050
which is

00:25:21,530 --> 00:25:29,180
any reference field we have this art -

00:25:24,050 --> 00:25:30,590
art - a node which is a link and then we

00:25:29,180 --> 00:25:33,830
have another node that's called you

00:25:30,590 --> 00:25:37,310
cannot view me and we still can see the

00:25:33,830 --> 00:25:38,750
label but it is not a link so is it

00:25:37,310 --> 00:25:41,240
after joining a program yes it's

00:25:38,750 --> 00:25:43,310
object-oriented we have a class we're

00:25:41,240 --> 00:25:44,870
going to create a new plugin and it's

00:25:43,310 --> 00:25:47,300
called the know axis entity reference

00:25:44,870 --> 00:25:49,160
label formatter and it extends the

00:25:47,300 --> 00:25:51,950
entity reference label formatter and

00:25:49,160 --> 00:26:05,750
we're just gonna override two methods so

00:25:51,950 --> 00:26:07,760
let's take a look okay no access so I

00:26:05,750 --> 00:26:12,200
don't know if I can i can't zoom in here

00:26:07,760 --> 00:26:14,840
but so we have the the holder name no

00:26:12,200 --> 00:26:16,760
access reference label there's no dot

00:26:14,840 --> 00:26:18,590
module file in here so Drupal eight

00:26:16,760 --> 00:26:20,660
modules don't need dot module files if

00:26:18,590 --> 00:26:22,340
you're not implementing hooks we have a

00:26:20,660 --> 00:26:25,010
source directory and then under that

00:26:22,340 --> 00:26:27,080
source directory or SRC directory we

00:26:25,010 --> 00:26:28,730
have plug-in field and a field formatter

00:26:27,080 --> 00:26:30,800
so all of your plugins generally are

00:26:28,730 --> 00:26:33,410
under the plugin folder and then the

00:26:30,800 --> 00:26:42,620
particular type we have the directory

00:26:33,410 --> 00:26:48,650
here so if we look at this class only

00:26:42,620 --> 00:26:50,660
it's so big okay

00:26:48,650 --> 00:26:52,430
right here we have an annotation so

00:26:50,660 --> 00:26:55,460
basically when you have a plug-in in

00:26:52,430 --> 00:27:00,730
Drupal 8 we use these annotations in the

00:26:55,460 --> 00:27:00,730
comments that's not indented correctly

00:27:02,560 --> 00:27:06,770
we have these annotations in the

00:27:05,360 --> 00:27:08,960
comments that actually means something

00:27:06,770 --> 00:27:11,840
and this is if we're familiar with

00:27:08,960 --> 00:27:14,030
Drupal 7 this often replaces an info

00:27:11,840 --> 00:27:16,400
hook so I think there was like hook

00:27:14,030 --> 00:27:19,820
filled info or something like that in

00:27:16,400 --> 00:27:21,620
Drupal or this would be hooked formatter

00:27:19,820 --> 00:27:23,780
info something like that in Drupal 7

00:27:21,620 --> 00:27:26,540
where you basically again would return a

00:27:23,780 --> 00:27:27,830
big array this maybe not so much better

00:27:26,540 --> 00:27:30,650
than that yeah we're just creating array

00:27:27,830 --> 00:27:32,510
except an annotation but it's better

00:27:30,650 --> 00:27:34,430
it's better performance the way it scans

00:27:32,510 --> 00:27:36,800
this so I'm saying

00:27:34,430 --> 00:27:40,070
this annotation is for a field formatter

00:27:36,800 --> 00:27:42,260
I'm telling you my D telling you a label

00:27:40,070 --> 00:27:44,690
description and I'm saying hey it can be

00:27:42,260 --> 00:27:49,880
used on entity reference fields and

00:27:44,690 --> 00:27:51,920
again I am extending the entity

00:27:49,880 --> 00:27:54,320
reference label formatter so if I really

00:27:51,920 --> 00:27:56,480
wanted to know what that did I could go

00:27:54,320 --> 00:27:59,390
here and I'd say okay I can see every

00:27:56,480 --> 00:28:01,550
all the code in here so basically making

00:27:59,390 --> 00:28:03,770
this mod I looked at what the original

00:28:01,550 --> 00:28:05,480
formatter did and I said okay I only

00:28:03,770 --> 00:28:07,130
want to change like one or two things so

00:28:05,480 --> 00:28:11,660
I'm only gonna change override one or

00:28:07,130 --> 00:28:15,410
two methods so the methods that we're

00:28:11,660 --> 00:28:22,550
gonna override are make sure you get

00:28:15,410 --> 00:28:24,710
this right our view elements so

00:28:22,550 --> 00:28:26,450
basically like what happens when you're

00:28:24,710 --> 00:28:28,790
viewing those labels and by default

00:28:26,450 --> 00:28:31,610
again the regular any reference is gonna

00:28:28,790 --> 00:28:33,110
say hey if you don't have access to view

00:28:31,610 --> 00:28:35,360
the actual entity I'm not going to show

00:28:33,110 --> 00:28:38,180
you the label at all we don't want that

00:28:35,360 --> 00:28:40,160
to happen and the other thing that I'm

00:28:38,180 --> 00:28:42,290
gonna override is to get entities to

00:28:40,160 --> 00:28:44,690
view because basically that is what's

00:28:42,290 --> 00:28:49,970
going to determine which entities we

00:28:44,690 --> 00:28:52,070
view so I'm not gonna go exactly in to

00:28:49,970 --> 00:28:55,810
what it does but those are the two ones

00:28:52,070 --> 00:28:58,820
that I have to implement in order to

00:28:55,810 --> 00:29:01,460
override so basically a lot of times

00:28:58,820 --> 00:29:05,210
when you're either creating a new field

00:29:01,460 --> 00:29:07,340
type or a field formatter or widget a

00:29:05,210 --> 00:29:09,830
good way to start is if you see

00:29:07,340 --> 00:29:11,930
something in core you can Tribune eed

00:29:09,830 --> 00:29:15,680
something like that but a little more

00:29:11,930 --> 00:29:17,600
custom is to take that class for that

00:29:15,680 --> 00:29:20,330
formatter that field type or that widget

00:29:17,600 --> 00:29:23,360
and say I'm going to extend this and I'm

00:29:20,330 --> 00:29:29,350
going to only override maybe the view or

00:29:23,360 --> 00:29:29,350
the access or something like that okay

00:29:32,910 --> 00:29:38,770
so usually yeah when when you're trying

00:29:35,320 --> 00:29:41,440
to implement a plugin potentially you

00:29:38,770 --> 00:29:43,680
could overwrite a particular plugins to

00:29:41,440 --> 00:29:46,780
find one that's similar so if you have

00:29:43,680 --> 00:29:48,790
field formatter like in my case the ret

00:29:46,780 --> 00:29:51,160
regular entity reference formatter

00:29:48,790 --> 00:29:53,100
the label formatter did everything I

00:29:51,160 --> 00:29:56,950
wanted to except for this small thing

00:29:53,100 --> 00:29:58,660
and then I would try to extend it if I

00:29:56,950 --> 00:30:01,900
couldn't extend it if I looked at the

00:29:58,660 --> 00:30:03,670
entity reference label formatter and

00:30:01,900 --> 00:30:06,580
said you know this I would just end up

00:30:03,670 --> 00:30:07,930
wiping out everything in there I want it

00:30:06,580 --> 00:30:11,410
to be different I would look up to its

00:30:07,930 --> 00:30:13,120
parent and if its parent which is like a

00:30:11,410 --> 00:30:16,320
sort of generic entity reference

00:30:13,120 --> 00:30:21,310
formatter I could then start from there

00:30:16,320 --> 00:30:23,470
so if I look let's just sort of crawl

00:30:21,310 --> 00:30:26,680
down to see how that would look so if I

00:30:23,470 --> 00:30:29,860
start it off with the entity reference

00:30:26,680 --> 00:30:32,680
format or you know I I would look here

00:30:29,860 --> 00:30:34,930
and I'd say oh you know this this use

00:30:32,680 --> 00:30:37,690
basically displays a label for an entity

00:30:34,930 --> 00:30:39,370
reference if that's not what I wanted I

00:30:37,690 --> 00:30:41,440
would actually click up here to the

00:30:39,370 --> 00:30:43,720
formatter base so now I'm at the entity

00:30:41,440 --> 00:30:45,730
reference formatter base this is an

00:30:43,720 --> 00:30:48,160
abstract class meaning I can never

00:30:45,730 --> 00:30:49,930
actually use this this is not going to

00:30:48,160 --> 00:30:51,700
provide a formatter but it's gonna be

00:30:49,930 --> 00:30:54,580
the parent for all my other any

00:30:51,700 --> 00:30:57,040
reference for matters so if I look here

00:30:54,580 --> 00:31:01,000
and now I highlight this and I go to

00:30:57,040 --> 00:31:02,830
navigate type hierarchy it's gonna tell

00:31:01,000 --> 00:31:04,600
me all the other four matters that go

00:31:02,830 --> 00:31:07,330
from there so the way core does this is

00:31:04,600 --> 00:31:10,300
we have this formatter base which is for

00:31:07,330 --> 00:31:11,860
all fields a little more specific is the

00:31:10,300 --> 00:31:15,520
entity reference formatter

00:31:11,860 --> 00:31:18,580
base and then underneath there is all of

00:31:15,520 --> 00:31:20,620
the ones that core provides we have the

00:31:18,580 --> 00:31:22,900
entity reference entity formatter

00:31:20,620 --> 00:31:24,700
meaning I wanted to display the whole

00:31:22,900 --> 00:31:27,250
entity the whole note of the whole user

00:31:24,700 --> 00:31:30,370
or the label formatter

00:31:27,250 --> 00:31:33,130
I just wanted to display the label and

00:31:30,370 --> 00:31:36,160
then we have one here any reference

00:31:33,130 --> 00:31:37,690
taxonomy term RSS formatter you can

00:31:36,160 --> 00:31:40,120
guess what that does I've actually never

00:31:37,690 --> 00:31:43,210
used it then we have the ones that I

00:31:40,120 --> 00:31:45,280
implemented myself here which is

00:31:43,210 --> 00:31:47,350
entity reference oh so if we look at the

00:31:45,280 --> 00:31:49,120
energy reference label for matter we

00:31:47,350 --> 00:31:50,710
could go down further and see oh okay

00:31:49,120 --> 00:31:55,690
here's the one that I actually made

00:31:50,710 --> 00:31:57,340
myself so that's sort of a good way if

00:31:55,690 --> 00:32:00,580
you're if you're looking at a particular

00:31:57,340 --> 00:32:04,120
plugin and you want to see what it does

00:32:00,580 --> 00:32:06,280
or what other ones similar like it would

00:32:04,120 --> 00:32:08,560
do I would go up the chain then look

00:32:06,280 --> 00:32:10,120
back down see what's there if I want to

00:32:08,560 --> 00:32:12,190
go even more general just keep going out

00:32:10,120 --> 00:32:23,800
the chain then look at its children and

00:32:12,190 --> 00:32:25,990
then dive back down all right so yeah

00:32:23,800 --> 00:32:28,330
this is just sort of saying actually

00:32:25,990 --> 00:32:30,010
this is sort of fun saying how the ID

00:32:28,330 --> 00:32:32,770
you would actually help me find a plug

00:32:30,010 --> 00:32:34,390
in so if I knew like hey there's any

00:32:32,770 --> 00:32:35,920
reference on the site and I know I can

00:32:34,390 --> 00:32:38,710
see them and I know there's the concept

00:32:35,920 --> 00:32:40,510
of formatters I could just do this in

00:32:38,710 --> 00:32:44,290
this case it's shift-command but

00:32:40,510 --> 00:32:48,820
basically I would say I want an entity

00:32:44,290 --> 00:32:51,490
and then I know it's a reference that I

00:32:48,820 --> 00:32:54,130
know it's a formatter and now it's sort

00:32:51,490 --> 00:32:58,810
of narrowed it down to all the four

00:32:54,130 --> 00:33:00,370
matters for entity references so that's

00:32:58,810 --> 00:33:03,550
sort of one of the things I really like

00:33:00,370 --> 00:33:06,010
about Drupal 8 versus Drupal 7 is this

00:33:03,550 --> 00:33:09,160
encapsulating it in two separate files

00:33:06,010 --> 00:33:14,260
makes it really easy for me to find the

00:33:09,160 --> 00:33:16,600
things so it doesn't in Drupal 7 say if

00:33:14,260 --> 00:33:20,290
I wanted to find all of the four matters

00:33:16,600 --> 00:33:22,270
that work for entity reference fields I

00:33:20,290 --> 00:33:24,850
would actually have to look at all the

00:33:22,270 --> 00:33:27,730
hooks for fields and then look at what

00:33:24,850 --> 00:33:29,950
they returned did they return something

00:33:27,730 --> 00:33:31,510
that worked with entity reference so the

00:33:29,950 --> 00:33:33,430
fact that they're all in their separate

00:33:31,510 --> 00:33:36,040
classes and I can easily search their

00:33:33,430 --> 00:33:40,270
classes by name for me really helps it

00:33:36,040 --> 00:33:42,790
be a lot simpler so in some ways the

00:33:40,270 --> 00:33:45,850
complexity of having more files because

00:33:42,790 --> 00:33:49,830
they all have separate responsibilities

00:33:45,850 --> 00:33:49,830
actually makes it easier for me to learn

00:33:53,440 --> 00:33:57,700
I D for the win that's sort of the whole

00:33:56,139 --> 00:34:00,879
one of the whole things about the

00:33:57,700 --> 00:34:05,559
presentation other ideas for extending

00:34:00,879 --> 00:34:07,269
field plugins actually that's usually

00:34:05,559 --> 00:34:09,129
the question when it's a smaller group

00:34:07,269 --> 00:34:11,710
but we can we can talk about that and

00:34:09,129 --> 00:34:13,240
the in the question answer so now the

00:34:11,710 --> 00:34:17,379
other concept I'd like to talk about is

00:34:13,240 --> 00:34:20,290
condition plugins so condition plugins

00:34:17,379 --> 00:34:23,980
are unified system that really just

00:34:20,290 --> 00:34:25,659
simply evaluate to true or false in core

00:34:23,980 --> 00:34:28,149
they're used to determine block

00:34:25,659 --> 00:34:30,579
visibility so when you go to add a block

00:34:28,149 --> 00:34:32,440
and it says hey show this block at a

00:34:30,579 --> 00:34:35,500
particular path there show this block

00:34:32,440 --> 00:34:39,040
for a particular content type that is a

00:34:35,500 --> 00:34:43,619
a condition plug-in and that's how they

00:34:39,040 --> 00:34:45,520
used in core but in in can trigger plate

00:34:43,619 --> 00:34:48,010
stuff like panels

00:34:45,520 --> 00:34:49,510
I think context is now pointed ported to

00:34:48,010 --> 00:34:52,720
Drupal eight I have a mantra call block

00:34:49,510 --> 00:34:56,619
visibility groups rules they all use the

00:34:52,720 --> 00:34:59,859
same condition plugins so in Drupal

00:34:56,619 --> 00:35:03,240
seven basically we had a bunch of sort

00:34:59,859 --> 00:35:06,190
of conditional systems and core and

00:35:03,240 --> 00:35:08,500
contribute actually the same thing so if

00:35:06,190 --> 00:35:10,359
you had a condition on rules that you

00:35:08,500 --> 00:35:12,910
thought oh this would be a really cool

00:35:10,359 --> 00:35:14,710
thing to use on panels you couldn't do

00:35:12,910 --> 00:35:16,569
it unless you install this module that

00:35:14,710 --> 00:35:18,970
had sort of rural access control for

00:35:16,569 --> 00:35:21,700
panels which then gave you a lot of

00:35:18,970 --> 00:35:23,950
complications so the fact that we're

00:35:21,700 --> 00:35:28,960
using sort of the same condition system

00:35:23,950 --> 00:35:30,730
all across core and contributers so the

00:35:28,960 --> 00:35:35,950
example module and look at is author

00:35:30,730 --> 00:35:38,020
conditions so the condition is a node

00:35:35,950 --> 00:35:41,140
author has certain roles and we're gonna

00:35:38,020 --> 00:35:43,359
say so usually the author rolls

00:35:41,140 --> 00:35:45,490
condition in Drupal core is actually

00:35:43,359 --> 00:35:46,930
like who's looking at this like I will

00:35:45,490 --> 00:35:49,060
show this block to people who are

00:35:46,930 --> 00:35:51,339
administrators but we're gonna create a

00:35:49,060 --> 00:35:54,369
condition plugin that says show this

00:35:51,339 --> 00:35:57,099
block if the main node on the page the

00:35:54,369 --> 00:35:59,440
author is an administrator so may or may

00:35:57,099 --> 00:36:02,140
be probably more reasonable example is

00:35:59,440 --> 00:36:07,000
if this is a premium member show this

00:36:02,140 --> 00:36:07,269
extra information in a block so this is

00:36:07,000 --> 00:36:10,529
going to

00:36:07,269 --> 00:36:13,779
extend the core user role condition and

00:36:10,529 --> 00:36:20,619
again no hooks oh wait so now we're

00:36:13,779 --> 00:36:28,509
going to go to the IDE what did I say it

00:36:20,619 --> 00:36:37,949
was called author condition okay okay so

00:36:28,509 --> 00:36:41,499
again we have a module that has has no

00:36:37,949 --> 00:36:43,719
new dot module file it has a SRC

00:36:41,499 --> 00:36:46,539
directory again with a plug-in directory

00:36:43,719 --> 00:36:49,479
but this time we have a condition folder

00:36:46,539 --> 00:36:52,419
so we're saying this module implements

00:36:49,479 --> 00:36:59,140
or this plug-in is of caen the condition

00:36:52,419 --> 00:37:02,049
type and again if we look here we have

00:36:59,140 --> 00:37:03,999
the author role condition and it's going

00:37:02,049 --> 00:37:07,169
to extend the user role condition so

00:37:03,999 --> 00:37:07,169
I've actually want to see

00:37:15,290 --> 00:37:20,510
tabs for the wind okay so if I want to

00:37:18,530 --> 00:37:24,040
see what the actual roll condition does

00:37:20,510 --> 00:37:26,480
I could look through here and again

00:37:24,040 --> 00:37:28,610
plugins have these annotations so I have

00:37:26,480 --> 00:37:31,400
to say hey I'm annotating something that

00:37:28,610 --> 00:37:32,990
is the condition after you a few things

00:37:31,400 --> 00:37:34,850
for Drupal to pick it up I have to put

00:37:32,990 --> 00:37:37,640
it in the right folder structure I have

00:37:34,850 --> 00:37:39,710
to use the right namespace and then I

00:37:37,640 --> 00:37:42,200
have to tell it hey hi this is a

00:37:39,710 --> 00:37:46,160
condition so I'm going to give you

00:37:42,200 --> 00:37:48,490
information again in the comment and if

00:37:46,160 --> 00:37:51,260
I don't get this right Drupal will I

00:37:48,490 --> 00:37:52,400
think when I clear cache it will it will

00:37:51,260 --> 00:37:54,260
show me an error

00:37:52,400 --> 00:37:57,260
hopefully the arrows got better it used

00:37:54,260 --> 00:37:59,420
to be not so helpful when it was parsing

00:37:57,260 --> 00:38:02,210
and a parsing a condition and it got it

00:37:59,420 --> 00:38:06,110
wrong the other thing here I'm telling

00:38:02,210 --> 00:38:09,590
it is I'm saying hey this condition has

00:38:06,110 --> 00:38:11,870
a context so this is not context like

00:38:09,590 --> 00:38:14,000
the context module again this is a nice

00:38:11,870 --> 00:38:16,370
sort of unification thing in Drupal 8 is

00:38:14,000 --> 00:38:19,250
this context is the same thing that

00:38:16,370 --> 00:38:21,710
panels in Drupal 8 is going to gonna the

00:38:19,250 --> 00:38:24,350
same concept that it's going to use to

00:38:21,710 --> 00:38:27,200
determine when to display certain panels

00:38:24,350 --> 00:38:30,620
but I'm gonna say hey I need an entity

00:38:27,200 --> 00:38:32,510
that is a node and it is a required

00:38:30,620 --> 00:38:34,640
context so basically if I'm not

00:38:32,510 --> 00:38:38,020
displaying a node on the main page then

00:38:34,640 --> 00:38:41,930
this condition should not be evaluated

00:38:38,020 --> 00:38:44,660
again I have to just implement this

00:38:41,930 --> 00:38:46,610
function called evaluate and so let's

00:38:44,660 --> 00:38:50,360
actually see if I didn't know what I

00:38:46,610 --> 00:38:54,380
needed to do if I just had the user role

00:38:50,360 --> 00:38:56,330
here and I knew I know that user role

00:38:54,380 --> 00:38:58,700
condition does a whole bunch of things

00:38:56,330 --> 00:39:01,340
and I want to change certain things so

00:38:58,700 --> 00:39:04,190
what I would do is yeah so I would say I

00:39:01,340 --> 00:39:05,840
want to override the methods and it's

00:39:04,190 --> 00:39:08,630
gonna tell me okay here's all the

00:39:05,840 --> 00:39:11,090
methods that you can override I probably

00:39:08,630 --> 00:39:16,330
don't want to go down like way down here

00:39:11,090 --> 00:39:21,010
to object but I do see the user role and

00:39:16,330 --> 00:39:23,720
I know that how I'm going to evaluate

00:39:21,010 --> 00:39:25,760
whether a block should show up should be

00:39:23,720 --> 00:39:27,800
different from the core user role

00:39:25,760 --> 00:39:28,470
because that's basically saying if the

00:39:27,800 --> 00:39:30,750
if

00:39:28,470 --> 00:39:33,839
user who's looking this role I want to

00:39:30,750 --> 00:39:35,490
say the user who is the author of the

00:39:33,839 --> 00:39:39,420
note so I'm gonna say yeah I want to

00:39:35,490 --> 00:39:42,740
evaluate author so I've actually already

00:39:39,420 --> 00:39:47,700
done it up here so I'll delete that one

00:39:42,740 --> 00:39:48,660
I would get configuration here so

00:39:47,700 --> 00:39:51,000
basically we're gonna have a

00:39:48,660 --> 00:39:52,799
configuration form for these condition

00:39:51,000 --> 00:39:54,750
plugins the other thing that you will

00:39:52,799 --> 00:39:58,529
notice here is that I actually don't

00:39:54,750 --> 00:40:01,980
have anything in this class that does

00:39:58,529 --> 00:40:04,019
the configuration form the reason I can

00:40:01,980 --> 00:40:05,730
get away with that is because even

00:40:04,019 --> 00:40:07,410
though my functionality is different

00:40:05,730 --> 00:40:10,019
from user roles as far as how its

00:40:07,410 --> 00:40:11,730
evaluated my form is exactly the same

00:40:10,019 --> 00:40:14,519
because I just want to show a bunch of

00:40:11,730 --> 00:40:16,559
roles that you can click checkboxes so

00:40:14,519 --> 00:40:19,710
one of the benefits of me extending that

00:40:16,559 --> 00:40:22,920
class is all the functionality from the

00:40:19,710 --> 00:40:24,750
base class that I am I don't want to

00:40:22,920 --> 00:40:28,200
override then I don't have to put in my

00:40:24,750 --> 00:40:31,410
class so if Korra found a bug with how

00:40:28,200 --> 00:40:34,769
the check boxes were made for roles I

00:40:31,410 --> 00:40:37,859
would automatically get that so I have

00:40:34,769 --> 00:40:39,660
my configuration so if I say if I don't

00:40:37,859 --> 00:40:41,579
have any roles checked then just return

00:40:39,660 --> 00:40:43,200
true basically meaning if you didn't

00:40:41,579 --> 00:40:45,150
check anything in this condition then

00:40:43,200 --> 00:40:47,220
just don't worry about it

00:40:45,150 --> 00:40:49,769
otherwise I'm going to get the context

00:40:47,220 --> 00:40:54,990
of node and again because we're using

00:40:49,769 --> 00:40:57,029
classes if I didn't know like how do i

00:40:54,990 --> 00:41:00,900
you know how do I get that node that I

00:40:57,029 --> 00:41:02,700
told it I need I can just start typing I

00:41:00,900 --> 00:41:06,059
know it's a context so I'll just start

00:41:02,700 --> 00:41:07,589
typing context and then it's going to

00:41:06,059 --> 00:41:09,680
tell me a bunch of things so cash

00:41:07,589 --> 00:41:12,960
context no that's not what I want

00:41:09,680 --> 00:41:15,059
get context is probably what I want so I

00:41:12,960 --> 00:41:18,329
could confirm that it's what I want by

00:41:15,059 --> 00:41:21,930
looking at the help but I happen to know

00:41:18,329 --> 00:41:24,509
it's what I want the other thing here is

00:41:21,930 --> 00:41:25,200
I'm saying get context of node so at

00:41:24,509 --> 00:41:27,420
this point

00:41:25,200 --> 00:41:29,250
Drupal actually doesn't know that it's a

00:41:27,420 --> 00:41:32,069
node or my IDE doesn't know that it's a

00:41:29,250 --> 00:41:35,099
node so again I'm using this comment

00:41:32,069 --> 00:41:39,559
here to say hey by the way this is a

00:41:35,099 --> 00:41:39,559
node so that allows me to do

00:41:40,950 --> 00:41:57,900
oh let me get this right wrong okay yeah

00:41:54,840 --> 00:42:04,410
so this allows me now to grab a bunch of

00:41:57,900 --> 00:42:07,170
things author might be one get revision

00:42:04,410 --> 00:42:09,930
author get yeah that would actually give

00:42:07,170 --> 00:42:12,540
me so I could say hey get me the author

00:42:09,930 --> 00:42:14,940
and because that's going to return it

00:42:12,540 --> 00:42:21,450
knows returns a user so I could actually

00:42:14,940 --> 00:42:25,350
do I would actually have to get UID say

00:42:21,450 --> 00:42:27,990
on here so again your ID is gonna know

00:42:25,350 --> 00:42:29,820
what type of object certain methods

00:42:27,990 --> 00:42:34,620
return and then you can get more stuff

00:42:29,820 --> 00:42:38,910
from there but I'm basically gonna say

00:42:34,620 --> 00:42:42,030
hey get me the author entity if the

00:42:38,910 --> 00:42:43,560
roles for the author entity intersect

00:42:42,030 --> 00:42:48,450
somehow with the roles that are checked

00:42:43,560 --> 00:42:50,640
then return true I had to change the

00:42:48,450 --> 00:42:52,350
cash context but you can look if you

00:42:50,640 --> 00:42:53,790
look at the github you can see the

00:42:52,350 --> 00:42:57,030
explanation for that I won't get into

00:42:53,790 --> 00:43:00,960
that right now and I think that is the

00:42:57,030 --> 00:43:03,060
last module I had to show initial

00:43:00,960 --> 00:43:08,280
condition and say I talked about that no

00:43:03,060 --> 00:43:10,290
hooks so questions yeah I think uh good

00:43:08,280 --> 00:43:18,450
yeah here's a mic so that the recording

00:43:10,290 --> 00:43:24,120
can hear yeah I think you maybe have to

00:43:18,450 --> 00:43:29,070
go out there yeah in the hi yeah in the

00:43:24,120 --> 00:43:32,870
first example where you create in a new

00:43:29,070 --> 00:43:36,770
bass fields oh yeah the note yeah

00:43:32,870 --> 00:43:42,930
database update for the creation of the

00:43:36,770 --> 00:43:47,280
yes on clear I think it would we have to

00:43:42,930 --> 00:43:49,790
write as in Drupal 7 no kima no because

00:43:47,280 --> 00:43:51,710
it's it's saying that the hook user

00:43:49,790 --> 00:43:53,300
fields will

00:43:51,710 --> 00:43:55,400
actually add that field because it

00:43:53,300 --> 00:43:56,839
you're telling it hey this is a new base

00:43:55,400 --> 00:43:59,060
field in the entity type and a lot of

00:43:56,839 --> 00:44:01,339
Drupal 8 is abstracting the database

00:43:59,060 --> 00:44:03,890
away from you so you're not actually

00:44:01,339 --> 00:44:05,839
saying it actually it's even sort of

00:44:03,890 --> 00:44:08,290
extracting the idea the schema away from

00:44:05,839 --> 00:44:11,150
you you're saying this is a field in

00:44:08,290 --> 00:44:12,560
Drupal should should handle however it

00:44:11,150 --> 00:44:14,960
handles fields you could potentially

00:44:12,560 --> 00:44:17,180
have a different type of database and it

00:44:14,960 --> 00:44:25,910
would create that too any other

00:44:17,180 --> 00:44:31,190
questions yep that was quite valuable

00:44:25,910 --> 00:44:33,950
session and quite beneficial and I'm

00:44:31,190 --> 00:44:35,750
still learning but what happens is most

00:44:33,950 --> 00:44:37,400
of the times I see a module who's doing

00:44:35,750 --> 00:44:39,650
something very similar to my

00:44:37,400 --> 00:44:43,400
requirements but doesn't exactly do what

00:44:39,650 --> 00:44:48,099
I want right yeah so at that time hi how

00:44:43,400 --> 00:44:51,070
can I like find what point at which

00:44:48,099 --> 00:44:54,650
functional class I should extend or like

00:44:51,070 --> 00:44:57,680
check modify to get the things done

00:44:54,650 --> 00:45:00,050
yeah so one like one way that I use when

00:44:57,680 --> 00:45:04,010
I have no idea where something is coming

00:45:00,050 --> 00:45:07,520
from I often look for a string in the

00:45:04,010 --> 00:45:11,180
user interface so if we look at let me

00:45:07,520 --> 00:45:16,119
see if I can find an example but if we

00:45:11,180 --> 00:45:20,900
look at the structure content types

00:45:16,119 --> 00:45:22,460
these articles manage fields mmm

00:45:20,900 --> 00:45:30,650
actually let me do it on the node add

00:45:22,460 --> 00:45:33,170
page so if I was adding an article and I

00:45:30,650 --> 00:45:35,599
thought let's say this was I don't have

00:45:33,170 --> 00:45:39,260
any contraband this site but let's say I

00:45:35,599 --> 00:45:41,540
wanted to say you know where is this

00:45:39,260 --> 00:45:44,030
authoring information coming from like

00:45:41,540 --> 00:45:47,290
how is it making that I mean usually

00:45:44,030 --> 00:45:50,780
what I would do is I would copy that I

00:45:47,290 --> 00:45:53,240
would look in my IDE I would search all

00:45:50,780 --> 00:45:55,849
of Drupal core but if you just installed

00:45:53,240 --> 00:46:00,349
a module you would work look in that

00:45:55,849 --> 00:46:01,849
module folder I don't want it to be case

00:46:00,349 --> 00:46:04,369
sensitive authoring information so

00:46:01,849 --> 00:46:04,850
actually at this point there's only four

00:46:04,369 --> 00:46:09,080
in

00:46:04,850 --> 00:46:12,040
of that string in Drupal core so it's

00:46:09,080 --> 00:46:13,970
actually on the node forum page and

00:46:12,040 --> 00:46:18,590
potentially I would look for when it

00:46:13,970 --> 00:46:20,240
wasn't a node but this you'd see similar

00:46:18,590 --> 00:46:21,470
cases if it was like a field formatter

00:46:20,240 --> 00:46:22,310
and there's a special label on that

00:46:21,470 --> 00:46:23,660
field formatter

00:46:22,310 --> 00:46:26,690
and wanted to know where that class

00:46:23,660 --> 00:46:28,010
comes from oftentimes if you I mean

00:46:26,690 --> 00:46:29,750
obviously like learning the general

00:46:28,010 --> 00:46:31,330
principles about plugins and stuff like

00:46:29,750 --> 00:46:33,590
that but if you're completely lost

00:46:31,330 --> 00:46:36,350
oftentimes taking something out of the

00:46:33,590 --> 00:46:38,450
UI and searching say the module you knew

00:46:36,350 --> 00:46:40,100
it came from and trying to find that

00:46:38,450 --> 00:46:43,820
string look at the class there and then

00:46:40,100 --> 00:46:47,870
sort of go up in there yep any other

00:46:43,820 --> 00:46:50,030
questions so the evaluation I forgot to

00:46:47,870 --> 00:46:52,070
put a slide but if you go to the session

00:46:50,030 --> 00:46:55,460
there's an evaluation link for the

00:46:52,070 --> 00:46:57,950
survey and definitely let them know how

00:46:55,460 --> 00:47:06,230
I did any other questions

00:46:57,950 --> 00:47:10,330
it's all crystal clear thank you yeah is

00:47:06,230 --> 00:47:14,570
there a threshold for using base fields

00:47:10,330 --> 00:47:15,290
yeah so yeah I wouldn't use them all the

00:47:14,570 --> 00:47:19,310
time

00:47:15,290 --> 00:47:21,590
and I mean most of the time if you're

00:47:19,310 --> 00:47:23,630
not worried like you're not crazy

00:47:21,590 --> 00:47:26,750
worried about performance

00:47:23,630 --> 00:47:28,580
I wouldn't use them I more often find

00:47:26,750 --> 00:47:31,280
that I'm altering them than adding them

00:47:28,580 --> 00:47:34,250
all together because often times there's

00:47:31,280 --> 00:47:35,780
a base field that's not viewable or it's

00:47:34,250 --> 00:47:38,750
configurable in the form and you don't

00:47:35,780 --> 00:47:40,610
want it to be configurable so I would

00:47:38,750 --> 00:47:41,690
say a base field is really only if

00:47:40,610 --> 00:47:44,410
you're really worried about performance

00:47:41,690 --> 00:47:46,250
or if you want to change the fundamental

00:47:44,410 --> 00:47:48,650
functionality of a certain interview

00:47:46,250 --> 00:47:51,260
type that's often provided by can't rib

00:47:48,650 --> 00:47:54,080
and it doesn't make sense to ask for

00:47:51,260 --> 00:47:55,880
that future in contribu are doing is

00:47:54,080 --> 00:47:57,320
very different from how most people

00:47:55,880 --> 00:48:00,650
would use that module then I would

00:47:57,320 --> 00:48:03,200
consider adding a base field yeah and I

00:48:00,650 --> 00:48:05,810
did some base fields earlier

00:48:03,200 --> 00:48:09,079
and notice when I changed them yeah and

00:48:05,810 --> 00:48:11,359
I had already existing entities entity

00:48:09,079 --> 00:48:14,420
update didn't work anymore because it's

00:48:11,359 --> 00:48:17,599
a given notice that there are entities

00:48:14,420 --> 00:48:21,140
with values yeah are there good examples

00:48:17,599 --> 00:48:22,700
of like update oops or yeah I'm not sure

00:48:21,140 --> 00:48:25,640
I was sort of talking about stuff at the

00:48:22,700 --> 00:48:28,550
beginning I'm trying to think I know

00:48:25,640 --> 00:48:32,650
there's a field or two that's been added

00:48:28,550 --> 00:48:36,200
to core I can't think what they are

00:48:32,650 --> 00:48:38,270
right now but I would look at the core

00:48:36,200 --> 00:48:40,280
change law if you didn't note module

00:48:38,270 --> 00:48:41,660
yeah I think the no module may have

00:48:40,280 --> 00:48:43,460
something I know there's something in d8

00:48:41,660 --> 00:48:52,460
that was added afterwards and they had

00:48:43,460 --> 00:48:55,130
to do an update okay yep yep do you have

00:48:52,460 --> 00:48:57,619
any recommendations for creating the

00:48:55,130 --> 00:49:00,320
whole skeleton you need to find they're

00:48:57,619 --> 00:49:03,650
not the right namespace you have to

00:49:00,320 --> 00:49:05,599
write the correct annotations etc yeah

00:49:03,650 --> 00:49:10,970
and have lots of titles like yeah yeah

00:49:05,599 --> 00:49:13,190
use template so what's what are you yeah

00:49:10,970 --> 00:49:14,270
I use XD bug but like your skeleton if

00:49:13,190 --> 00:49:16,400
you like don't know how to make a

00:49:14,270 --> 00:49:18,470
plug-in per se

00:49:16,400 --> 00:49:20,720
Drupal console is really good for that

00:49:18,470 --> 00:49:22,790
so Drupal console you can go through and

00:49:20,720 --> 00:49:23,960
say I forget the exact commands but you

00:49:22,790 --> 00:49:26,150
know basically I want to make a new

00:49:23,960 --> 00:49:27,440
plug-in what type of plug-in do you want

00:49:26,150 --> 00:49:29,780
what's the label and then it would make

00:49:27,440 --> 00:49:32,510
the annotation for you the other thing

00:49:29,780 --> 00:49:35,270
is sort of copying files and then just

00:49:32,510 --> 00:49:37,010
renaming the namespace so sort of

00:49:35,270 --> 00:49:38,599
looking at a plug-in that that maybe

00:49:37,010 --> 00:49:41,210
doesn't do what you want but isn't the

00:49:38,599 --> 00:49:42,920
same type just sort of copy it over and

00:49:41,210 --> 00:49:45,560
change namespace and stuff like as that

00:49:42,920 --> 00:49:48,260
was a question about more the question

00:49:45,560 --> 00:49:52,490
what happens what do I do if it doesn't

00:49:48,260 --> 00:49:56,720
work no what if it doesn't work yeah I

00:49:52,490 --> 00:49:58,790
mean I think I think whatever effort it

00:49:56,720 --> 00:50:01,310
takes you to get step debugging to work

00:49:58,790 --> 00:50:03,319
whatever how many of our tutorials it

00:50:01,310 --> 00:50:05,119
takes you to get to run through it will

00:50:03,319 --> 00:50:07,849
be worth it like if you're planning on

00:50:05,119 --> 00:50:10,490
being in Drupal for any length of time

00:50:07,849 --> 00:50:13,130
or any object oriented programming it's

00:50:10,490 --> 00:50:15,200
like you have to learn for me I I

00:50:13,130 --> 00:50:16,260
personally had to learn step debugging I

00:50:15,200 --> 00:50:19,140
learned it in Drupal 8

00:50:16,260 --> 00:50:20,400
seven but it was much more user friendly

00:50:19,140 --> 00:50:25,560
in Drupal 8 and sort of setting

00:50:20,400 --> 00:50:28,020
breakpoints to actually get here that's

00:50:25,560 --> 00:50:31,020
that's what I've done I mean you can you

00:50:28,020 --> 00:50:34,710
can var dump stuff out there

00:50:31,020 --> 00:50:36,420
I think the plug-in managers there's a

00:50:34,710 --> 00:50:38,280
concept with plug-in managers in Drupal

00:50:36,420 --> 00:50:40,890
8 and those are actually really

00:50:38,280 --> 00:50:43,530
interesting to look at so if you can

00:50:40,890 --> 00:50:44,940
actually if you have a field type and if

00:50:43,530 --> 00:50:47,160
you have say a plug-in that's a field

00:50:44,940 --> 00:50:49,710
type in yours is never showing up you

00:50:47,160 --> 00:50:52,530
can actually put a breakpoint in the

00:50:49,710 --> 00:50:55,020
plug-in manager for fields and say hey

00:50:52,530 --> 00:50:57,300
you know stop here and then I'm just

00:50:55,020 --> 00:50:59,610
gonna step through and see why my

00:50:57,300 --> 00:51:01,560
plug-in is not loading you actually

00:50:59,610 --> 00:51:03,840
learn a lot about Drupal 8 that way I

00:51:01,560 --> 00:51:05,640
mean it'll take a while but you learn a

00:51:03,840 --> 00:51:07,920
lot about Drupal 8 and you'll figure out

00:51:05,640 --> 00:51:09,960
sort of why it's not loading often it's

00:51:07,920 --> 00:51:14,340
not loading because of annotation

00:51:09,960 --> 00:51:16,410
purposes and that again I think is you

00:51:14,340 --> 00:51:18,420
know an IDE that's aware of the concept

00:51:16,410 --> 00:51:20,760
of PHP annotations is really helpful

00:51:18,420 --> 00:51:23,040
because it'll give you even though it's

00:51:20,760 --> 00:51:24,690
not code per se it does give you

00:51:23,040 --> 00:51:26,670
warnings to say hey you didn't close

00:51:24,690 --> 00:51:29,900
this properly or whatever so that's

00:51:26,670 --> 00:51:33,260
really really easy mistake to make is

00:51:29,900 --> 00:51:35,520
because it's not code you don't get as

00:51:33,260 --> 00:51:38,430
you're not necessarily gonna get a heart

00:51:35,520 --> 00:51:39,660
failure in your annotations you're not

00:51:38,430 --> 00:51:41,300
gonna get a white screen of death if

00:51:39,660 --> 00:51:46,200
it's not there just won't be picked up

00:51:41,300 --> 00:51:50,030
okay thank you yep any other questions

00:51:46,200 --> 00:51:53,890
oh all right great thanks

00:51:50,030 --> 00:51:56,900
[Applause]

00:51:53,890 --> 00:51:58,640
so don't forget about the survey it's

00:51:56,900 --> 00:52:01,339
really helpful to me it's also really

00:51:58,640 --> 00:52:06,140
helpful for DrupalCon in general as far

00:52:01,339 --> 00:52:06,679
as selecting sessions and you know good

00:52:06,140 --> 00:52:08,839
or bad

00:52:06,679 --> 00:52:11,769
surveys are good good is good but you

00:52:08,839 --> 00:52:11,769

YouTube URL: https://www.youtube.com/watch?v=QEv9zXaXfzU


