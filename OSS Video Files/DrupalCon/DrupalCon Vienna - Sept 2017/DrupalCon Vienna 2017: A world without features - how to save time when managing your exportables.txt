Title: DrupalCon Vienna 2017: A world without features - how to save time when managing your exportables
Publication date: 2017-09-26
Playlist: DrupalCon Vienna - Sept 2017
Description: 
	For the so many years, the Features module has been all the rage. It's been all the rage in the best possible way -- it's become a standard many people and organizations can't do without. But it's also become all the rage in the literal sense of the word: Rage: violent, uncontrollable anger.

Some Drupal developers learn to deal with the anger, but it's not the only way.

At my business, Jeneration Web Development, I build and maintain Drupal websites without using Features. (GASP!) I can still export lots of things into code. I can still package everything up neatly. I can still deploy these exportables along with my other code changes. But I do it in a way that leaves my Drupal sites more preformant, saves me and my developers time, saves my clients money, and more importantly, saves us all our sanity.

In this session I'll explain why I chose to operate all my Drupal properties this way. I'll also share my time-saving strategy that's been crafted over the past 7 years of Drupal 7 development.

Code samples will be provided!

At the end of this session attendees will have learned an alternate way of managing Drupal's exportables like image styles, views, and panels, without using the features module.

Attendees should have a basic understanding of how to create simple Drupal 7 modules.
Captions: 
	00:00:00,030 --> 00:00:06,930
it's time okay um hello everybody thank

00:00:05,009 --> 00:00:10,080
you for coming to my session I'm really

00:00:06,930 --> 00:00:11,639
excited to share the way that I manage

00:00:10,080 --> 00:00:13,469
sites with you

00:00:11,639 --> 00:00:15,389
this session is particularly about how

00:00:13,469 --> 00:00:19,410
to deal with configuration management

00:00:15,389 --> 00:00:21,390
without using the features module my

00:00:19,410 --> 00:00:23,250
name is Jen Lampton you guys might know

00:00:21,390 --> 00:00:25,410
me from various other places in the

00:00:23,250 --> 00:00:27,210
drupal world i've been one of the main

00:00:25,410 --> 00:00:29,460
organizers of the bay area drupal camp

00:00:27,210 --> 00:00:33,180
in san francisco area in california

00:00:29,460 --> 00:00:35,219
since about 2007 i was the initiative

00:00:33,180 --> 00:00:40,200
lead to get twig into drupal 8 for about

00:00:35,219 --> 00:00:42,780
two years mid Drupal 8 cycle and more

00:00:40,200 --> 00:00:44,550
recently I am infamous for being one of

00:00:42,780 --> 00:00:46,770
the cofounders of backdrop CMS which is

00:00:44,550 --> 00:00:48,539
the Drupal Fork

00:00:46,770 --> 00:00:49,980
for those who don't know me as I said my

00:00:48,539 --> 00:00:52,590
name is Jen Lampton I've been doing

00:00:49,980 --> 00:00:54,120
Drupal for about 11 years I'm one month

00:00:52,590 --> 00:00:55,649
away from my eleventh Drupal birthday

00:00:54,120 --> 00:00:59,399
which is really exciting for me still

00:00:55,649 --> 00:01:01,079
left ripple and something I think is a

00:00:59,399 --> 00:01:03,359
different from a lot of maybe other

00:01:01,079 --> 00:01:05,369
people who are at Drupal con is that I

00:01:03,359 --> 00:01:07,920
do not work for a Drupal agency I'm an

00:01:05,369 --> 00:01:09,990
independent contractor I find and manage

00:01:07,920 --> 00:01:13,729
my own clients my own jobs and that

00:01:09,990 --> 00:01:16,080
changes the way that I do Drupal work

00:01:13,729 --> 00:01:18,390
usually that means I'm on smaller teams

00:01:16,080 --> 00:01:20,189
usually one to four developers often

00:01:18,390 --> 00:01:22,920
times on the only developer working on a

00:01:20,189 --> 00:01:25,170
project that often means I'm working on

00:01:22,920 --> 00:01:28,110
projects that have smaller budgets so

00:01:25,170 --> 00:01:30,420
sites as small as $10,000 usually the

00:01:28,110 --> 00:01:33,110
highest site I'm willing to take on is

00:01:30,420 --> 00:01:37,650
something around 75,000 of u.s. dollars

00:01:33,110 --> 00:01:39,780
in projects with budgets smaller usually

00:01:37,650 --> 00:01:41,070
means smaller sites too so it's a

00:01:39,780 --> 00:01:43,649
different kind of world than if you're

00:01:41,070 --> 00:01:46,909
working at a big agency on big projects

00:01:43,649 --> 00:01:49,920
with lots of dollars for development and

00:01:46,909 --> 00:01:51,210
this is an example of the largest site

00:01:49,920 --> 00:01:53,880
that I currently manage it's for

00:01:51,210 --> 00:01:55,020
California and government agency and I

00:01:53,880 --> 00:01:56,939
wanted to give you this as an example

00:01:55,020 --> 00:01:58,140
because at the end if we have time I can

00:01:56,939 --> 00:02:01,170
show you what their code looks like

00:01:58,140 --> 00:02:03,360
using this man in this model but this

00:02:01,170 --> 00:02:04,950
site has two active developers there's

00:02:03,360 --> 00:02:07,400
myself and we've got a front under on

00:02:04,950 --> 00:02:09,350
the project we have ten

00:02:07,400 --> 00:02:11,030
active editors so these are people who

00:02:09,350 --> 00:02:13,990
are creating and managing content on the

00:02:11,030 --> 00:02:16,310
site they're about 100 contribs

00:02:13,990 --> 00:02:17,660
it's got a lot going on even though

00:02:16,310 --> 00:02:21,320
there's not a lot of people currently

00:02:17,660 --> 00:02:24,410
working on it and this I just built and

00:02:21,320 --> 00:02:26,810
managed in Drupal 7 so I know we're two

00:02:24,410 --> 00:02:30,470
years into Drupal 8 but let's talk

00:02:26,810 --> 00:02:33,080
really quick about Drupal 7 how many of

00:02:30,470 --> 00:02:34,940
you are currently running or managing

00:02:33,080 --> 00:02:36,380
Drupal 7 sites today if you could hold

00:02:34,940 --> 00:02:38,000
your hands up okay that's fantastic

00:02:36,380 --> 00:02:39,920
that's all you keep your hands up your

00:02:38,000 --> 00:02:41,990
hands up okay so for those who have your

00:02:39,920 --> 00:02:43,670
hands up now how many of you are using

00:02:41,990 --> 00:02:46,420
the features module to deal with

00:02:43,670 --> 00:02:49,760
configuration yeah that's what I thought

00:02:46,420 --> 00:02:51,980
and those of you who are using the

00:02:49,760 --> 00:02:54,050
features module on Drupal 7 sites how

00:02:51,980 --> 00:02:55,760
many of you had any trouble dealing with

00:02:54,050 --> 00:02:58,340
the features module right that's like

00:02:55,760 --> 00:02:59,780
everyone so that's fantastic I am hoping

00:02:58,340 --> 00:03:03,080
that this talk is gonna be really

00:02:59,780 --> 00:03:05,000
relevant to you guys I have experienced

00:03:03,080 --> 00:03:06,410
a lot of personal pain and I've tried to

00:03:05,000 --> 00:03:08,300
find a way around some of these problems

00:03:06,410 --> 00:03:10,550
and I think I've developed a strategy

00:03:08,300 --> 00:03:14,000
that is working really well for me in my

00:03:10,550 --> 00:03:15,739
tiny teams so really quick let's talk

00:03:14,000 --> 00:03:17,450
about features features is a fantastic

00:03:15,739 --> 00:03:19,610
Drupal module this session is not a

00:03:17,450 --> 00:03:22,040
features hating session I really like

00:03:19,610 --> 00:03:24,709
features I just think that it doesn't

00:03:22,040 --> 00:03:26,630
always work great there are two really

00:03:24,709 --> 00:03:29,500
strong use cases for using the features

00:03:26,630 --> 00:03:33,110
module the first one is for bundling

00:03:29,500 --> 00:03:36,530
functionality together so a good example

00:03:33,110 --> 00:03:38,090
or the second thing features does and

00:03:36,530 --> 00:03:39,709
this is something I think most of us use

00:03:38,090 --> 00:03:41,239
it for today is for dealing with

00:03:39,709 --> 00:03:42,680
configuration management this is a

00:03:41,239 --> 00:03:45,100
solved problem in Triple Eight it's a

00:03:42,680 --> 00:03:47,480
solve problem in backed-up CMS but not

00:03:45,100 --> 00:03:49,670
solved problem in Drupal 7 which is why

00:03:47,480 --> 00:03:52,100
I think everyone's using it but first

00:03:49,670 --> 00:03:54,700
let's talk about the first use case

00:03:52,100 --> 00:03:56,959
we're using features module and this is

00:03:54,700 --> 00:03:58,610
for example if you have a site does a

00:03:56,959 --> 00:03:59,870
photo gallery that photo gallery is

00:03:58,610 --> 00:04:01,519
gonna have a content type it's going to

00:03:59,870 --> 00:04:03,290
have a view it might have a panel there

00:04:01,519 --> 00:04:05,480
might be specific view modes or views

00:04:03,290 --> 00:04:07,310
displays or other little bits and pieces

00:04:05,480 --> 00:04:09,530
that you need to manage to create that

00:04:07,310 --> 00:04:11,090
photo gallery in a perfect world you

00:04:09,530 --> 00:04:13,070
could build the photo gallery once and

00:04:11,090 --> 00:04:15,920
then you could bundle it together and

00:04:13,070 --> 00:04:17,810
then you could sell it to a second site

00:04:15,920 --> 00:04:20,060
or a third site or you could distribute

00:04:17,810 --> 00:04:22,340
the same thing across multiple sites if

00:04:20,060 --> 00:04:24,440
this is really valuable if you have a

00:04:22,340 --> 00:04:26,720
really big complicated site or maybe a

00:04:24,440 --> 00:04:29,060
multi-site or you have an institution

00:04:26,720 --> 00:04:32,120
that has requested the same thing in

00:04:29,060 --> 00:04:35,750
multiple places but in my experience

00:04:32,120 --> 00:04:37,669
doing smaller sites the photo galleries

00:04:35,750 --> 00:04:40,310
I build are never the same from one

00:04:37,669 --> 00:04:44,450
project to the next I have only ever in

00:04:40,310 --> 00:04:47,000
my entire time using features needed to

00:04:44,450 --> 00:04:48,650
feature exactly the same thing to

00:04:47,000 --> 00:04:50,240
distribute onto a second site so that's

00:04:48,650 --> 00:04:53,870
something maybe isn't super relevant for

00:04:50,240 --> 00:04:55,760
my use case the second thing that

00:04:53,870 --> 00:04:58,190
features is used for is for

00:04:55,760 --> 00:04:59,780
configuration management and this is to

00:04:58,190 --> 00:05:02,570
make a better developer workflow and

00:04:59,780 --> 00:05:04,190
that's because if you have a view that's

00:05:02,570 --> 00:05:06,139
created for your photo gallery and you

00:05:04,190 --> 00:05:08,240
need to make a change to it maybe you

00:05:06,139 --> 00:05:10,639
need to add some new module that goes

00:05:08,240 --> 00:05:12,110
along with it you want to deploy the new

00:05:10,639 --> 00:05:13,639
module and the change to that view at

00:05:12,110 --> 00:05:15,500
the same time and have them appear on

00:05:13,639 --> 00:05:16,880
your live site and there isn't really a

00:05:15,500 --> 00:05:18,770
great way to do that in Drupal 7

00:05:16,880 --> 00:05:22,850
features came along and provided this

00:05:18,770 --> 00:05:24,650
awesome tool that does that mostly so

00:05:22,850 --> 00:05:27,800
everyone is kind of adopted using

00:05:24,650 --> 00:05:29,539
features to solve this problem I would

00:05:27,800 --> 00:05:32,150
argue that this is the more common use

00:05:29,539 --> 00:05:35,419
case for what people are doing with

00:05:32,150 --> 00:05:37,490
features today so both of these things

00:05:35,419 --> 00:05:38,600
sound really great like you're like wow

00:05:37,490 --> 00:05:40,190
I one thought those things I may be able

00:05:38,600 --> 00:05:42,020
to bundle my stuff together and organize

00:05:40,190 --> 00:05:44,810
them neatly and I want to be able to

00:05:42,020 --> 00:05:47,000
solve configuration management but I

00:05:44,810 --> 00:05:49,580
have found that neither one of these use

00:05:47,000 --> 00:05:51,200
cases are super relevant or effective in

00:05:49,580 --> 00:05:54,139
the kinds of work that I do on a day to

00:05:51,200 --> 00:05:55,580
day basis so as I mentioned before I've

00:05:54,139 --> 00:05:57,889
only ever delivered exactly the same

00:05:55,580 --> 00:06:00,229
feature once and that was two sites for

00:05:57,889 --> 00:06:02,419
the same client usually what makes

00:06:00,229 --> 00:06:04,910
somebody's Drupal site or web site at

00:06:02,419 --> 00:06:06,950
all great is the fact that it's not

00:06:04,910 --> 00:06:09,650
exactly the same as someone else's right

00:06:06,950 --> 00:06:11,300
like what sets you apart from your

00:06:09,650 --> 00:06:12,470
competition you've got to do yours a

00:06:11,300 --> 00:06:14,510
little differently it's got to be

00:06:12,470 --> 00:06:18,289
specific to your content it's got to be

00:06:14,510 --> 00:06:20,570
specialized to what you needed to do so

00:06:18,289 --> 00:06:22,639
just carting that use case use case

00:06:20,570 --> 00:06:25,250
number two configuration management I

00:06:22,639 --> 00:06:28,880
found three major problems in dealing

00:06:25,250 --> 00:06:29,810
with features on my Drupal 7 sites the

00:06:28,880 --> 00:06:32,620
first one is performance

00:06:29,810 --> 00:06:35,560
I find that when you have a feature

00:06:32,620 --> 00:06:37,210
the features module on your site with a

00:06:35,560 --> 00:06:39,250
lot of features that module is

00:06:37,210 --> 00:06:40,960
constantly - checked checking to see if

00:06:39,250 --> 00:06:43,139
your current features are in an

00:06:40,960 --> 00:06:46,000
overridden State and I can slow down

00:06:43,139 --> 00:06:49,090
loading unrelated pages and I find that

00:06:46,000 --> 00:06:51,669
super fresh shipping I also find that it

00:06:49,090 --> 00:06:54,160
often takes me more time managing the

00:06:51,669 --> 00:06:55,900
features than it does to do the change

00:06:54,160 --> 00:06:57,070
that features features are supposed to

00:06:55,900 --> 00:06:58,870
be managing so if I need to make a

00:06:57,070 --> 00:07:00,009
change to a view changing that view is

00:06:58,870 --> 00:07:02,229
really fast looks like a five-minute

00:07:00,009 --> 00:07:04,479
thing but if I need to pend like get

00:07:02,229 --> 00:07:06,009
that view into the feature and then get

00:07:04,479 --> 00:07:07,750
the feature on to the site and then get

00:07:06,009 --> 00:07:10,210
the site to revert that's like a half an

00:07:07,750 --> 00:07:12,220
hour process and like now taking so much

00:07:10,210 --> 00:07:13,630
longer just to manage the configuration

00:07:12,220 --> 00:07:15,370
for the change then it would have taken

00:07:13,630 --> 00:07:17,440
to just make the change on the live site

00:07:15,370 --> 00:07:18,699
which isn't good thing necessarily but

00:07:17,440 --> 00:07:21,099
just something to keep in mind in terms

00:07:18,699 --> 00:07:25,810
of how much time it takes to accomplish

00:07:21,099 --> 00:07:27,729
your goals the third thing is developer

00:07:25,810 --> 00:07:29,650
sanity and this is something that I find

00:07:27,729 --> 00:07:32,320
particularly important if you're like

00:07:29,650 --> 00:07:33,460
the only develop around a project you

00:07:32,320 --> 00:07:35,440
run into one of those little things that

00:07:33,460 --> 00:07:37,060
features isn't necessarily really good

00:07:35,440 --> 00:07:38,650
at managing like somehow you have a view

00:07:37,060 --> 00:07:40,120
that has a path and ends up in a menu

00:07:38,650 --> 00:07:41,650
system and you're trying to get the menu

00:07:40,120 --> 00:07:43,030
to revert and like your menu systems

00:07:41,650 --> 00:07:44,590
getting all broken it's just the amount

00:07:43,030 --> 00:07:46,990
of time you have to spend fixing that

00:07:44,590 --> 00:07:48,430
one problem is so much more than it

00:07:46,990 --> 00:07:50,289
would have taken to have done change

00:07:48,430 --> 00:07:52,090
initially and you end up getting really

00:07:50,289 --> 00:07:53,889
frustrated with the system and trying to

00:07:52,090 --> 00:07:55,150
figure out like what is a better way

00:07:53,889 --> 00:07:57,039
that can keep me from getting to this

00:07:55,150 --> 00:08:00,010
place of complete frustration in the

00:07:57,039 --> 00:08:02,020
future so those are the things about I

00:08:00,010 --> 00:08:05,680
mean the most about using features for

00:08:02,020 --> 00:08:07,389
configuration management but I wanted to

00:08:05,680 --> 00:08:09,520
say that this is not the fault of

00:08:07,389 --> 00:08:10,930
features module features module is the

00:08:09,520 --> 00:08:12,430
best tool we have for this in Drupal 7

00:08:10,930 --> 00:08:14,199
it is really good at doing a lot of

00:08:12,430 --> 00:08:16,150
things like giving a user interface for

00:08:14,199 --> 00:08:18,729
managing things that you wouldn't be

00:08:16,150 --> 00:08:19,990
able to do without that and everything

00:08:18,729 --> 00:08:21,280
that features does really well it does

00:08:19,990 --> 00:08:22,810
really offer a reason it's because

00:08:21,280 --> 00:08:24,130
Drupal does those things really well and

00:08:22,810 --> 00:08:25,930
the things that it doesn't do really

00:08:24,130 --> 00:08:28,830
well our Drupal's fault

00:08:25,930 --> 00:08:33,279
great Drupal does not deal with

00:08:28,830 --> 00:08:34,990
deploying menu items or blocks or

00:08:33,279 --> 00:08:36,729
anything with a unique identifier really

00:08:34,990 --> 00:08:39,099
well and features is trying to give you

00:08:36,729 --> 00:08:41,560
a way to manage those things and that it

00:08:39,099 --> 00:08:42,540
it can do it does what it can do and

00:08:41,560 --> 00:08:46,230
it's working

00:08:42,540 --> 00:08:47,910
the system it's gotten so I would argue

00:08:46,230 --> 00:08:49,200
that the kinds of problems that I'm

00:08:47,910 --> 00:08:52,140
facing with features modules are

00:08:49,200 --> 00:08:54,540
actually particularly hard on smaller

00:08:52,140 --> 00:08:56,100
sites with smaller teams I think these

00:08:54,540 --> 00:08:57,870
are things that are easier for big teams

00:08:56,100 --> 00:08:58,980
with bigger sites to overcome and I just

00:08:57,870 --> 00:09:01,920
want to talk a little bit about why I

00:08:58,980 --> 00:09:06,240
feel like maybe I feel that pain more

00:09:01,920 --> 00:09:08,640
than others so for starters performance

00:09:06,240 --> 00:09:10,980
is something they've forgotten in but

00:09:08,640 --> 00:09:12,840
for performance it's something that I

00:09:10,980 --> 00:09:14,610
think it's a little harder on smaller

00:09:12,840 --> 00:09:17,700
sites because smaller sites don't often

00:09:14,610 --> 00:09:18,840
benefit from fancy drupal specific

00:09:17,700 --> 00:09:20,850
hosting that might have lots of

00:09:18,840 --> 00:09:22,200
different caching layers so if for

00:09:20,850 --> 00:09:24,290
example you're depending on that page

00:09:22,200 --> 00:09:28,380
cache as being like your primary cash

00:09:24,290 --> 00:09:30,540
and that cash needs to stay primed in

00:09:28,380 --> 00:09:31,740
Drupal 7 it's not going to be doing some

00:09:30,540 --> 00:09:33,750
kind of background fetch in order to

00:09:31,740 --> 00:09:35,520
make sure that cache is up-to-date then

00:09:33,750 --> 00:09:37,320
if you have to clear your cache like

00:09:35,520 --> 00:09:38,760
that's gonna be a hit to anyone who

00:09:37,320 --> 00:09:41,340
comes to your site after that cache is

00:09:38,760 --> 00:09:43,020
cleared so you generally don't want to

00:09:41,340 --> 00:09:44,400
be waiting for things like your features

00:09:43,020 --> 00:09:48,200
to find out if they're overwritten or

00:09:44,400 --> 00:09:50,670
not after you deploy some changes

00:09:48,200 --> 00:09:52,530
developer time is also something that's

00:09:50,670 --> 00:09:54,870
a lot harder on small sites because

00:09:52,530 --> 00:09:56,610
these companies that are paying for them

00:09:54,870 --> 00:09:58,650
usually have smaller budgets and so if

00:09:56,610 --> 00:10:00,360
you overshoot by you know something that

00:09:58,650 --> 00:10:02,280
should have taken five minutes it's now

00:10:00,360 --> 00:10:03,630
gonna take half an hour an hour that's a

00:10:02,280 --> 00:10:06,810
big difference to those people and maybe

00:10:03,630 --> 00:10:09,510
they now can't do the features features

00:10:06,810 --> 00:10:10,710
they can't add things to their site that

00:10:09,510 --> 00:10:12,450
they might have been able to afford to

00:10:10,710 --> 00:10:14,250
have you add if you as a developer or

00:10:12,450 --> 00:10:16,050
doing things like managing configuration

00:10:14,250 --> 00:10:18,090
with that time instead so when you

00:10:16,050 --> 00:10:19,440
overshoot on how long something takes it

00:10:18,090 --> 00:10:22,170
affects the scope of that project

00:10:19,440 --> 00:10:24,510
defects the budget course if you had a

00:10:22,170 --> 00:10:24,690
huge budget an hour might not be a big

00:10:24,510 --> 00:10:29,760
deal

00:10:24,690 --> 00:10:31,170
and about sanity I don't actually think

00:10:29,760 --> 00:10:33,270
it's more important for developers

00:10:31,170 --> 00:10:34,470
working on small sites to say saying I

00:10:33,270 --> 00:10:36,330
think it's important for all developers

00:10:34,470 --> 00:10:38,070
to say saying so that's just something

00:10:36,330 --> 00:10:40,380
that is a particular pain point for me

00:10:38,070 --> 00:10:42,060
trying to get my features to revert and

00:10:40,380 --> 00:10:46,080
I think everybody probably feels that

00:10:42,060 --> 00:10:49,680
same pain so I would like to show you

00:10:46,080 --> 00:10:51,210
another way but this is very specific to

00:10:49,680 --> 00:10:52,710
the use case that I've outlined with

00:10:51,210 --> 00:10:54,000
smaller sites smaller teams it's

00:10:52,710 --> 00:10:54,600
something I've had a lot of success list

00:10:54,000 --> 00:10:56,550
and

00:10:54,600 --> 00:10:59,089
not work for everyone but I'm gonna show

00:10:56,550 --> 00:11:01,230
you my code and see what you guys think

00:10:59,089 --> 00:11:03,120
before we get into the code I want to

00:11:01,230 --> 00:11:08,819
talk a little bit about how features

00:11:03,120 --> 00:11:11,250
module itself works so we have features

00:11:08,819 --> 00:11:14,610
module is a control that means it's

00:11:11,250 --> 00:11:16,829
using Drupal api's those ap is purveyed

00:11:14,610 --> 00:11:18,240
you a way to ingest things from code

00:11:16,829 --> 00:11:20,009
right that's what feature says it

00:11:18,240 --> 00:11:21,630
exports to code and imports from code if

00:11:20,009 --> 00:11:24,149
it's using Drupal say PS to do that

00:11:21,630 --> 00:11:26,819
Drupal AP is also give you a way to

00:11:24,149 --> 00:11:28,709
export and import things from code a lot

00:11:26,819 --> 00:11:30,660
of those api's give you not only a way

00:11:28,709 --> 00:11:32,040
to have a default thing but also to

00:11:30,660 --> 00:11:37,860
override a thing that might already be

00:11:32,040 --> 00:11:39,930
provided anything that features module

00:11:37,860 --> 00:11:41,130
is using Drupal API is to do is

00:11:39,930 --> 00:11:42,600
something that features module does

00:11:41,130 --> 00:11:43,980
really well so something like use

00:11:42,600 --> 00:11:45,240
exports it's a great example of

00:11:43,980 --> 00:11:49,500
something that features can deal with

00:11:45,240 --> 00:11:52,680
without any problems there's other

00:11:49,500 --> 00:11:54,750
things too if you had a custom module

00:11:52,680 --> 00:11:56,730
you could use the same API is that

00:11:54,750 --> 00:11:58,769
Drupal that features is using to

00:11:56,730 --> 00:12:00,060
accomplish the same goal so you don't

00:11:58,769 --> 00:12:01,949
need to use features to do things the

00:12:00,060 --> 00:12:05,490
same way that feature says really well

00:12:01,949 --> 00:12:06,839
you could write that code yourself but

00:12:05,490 --> 00:12:09,000
all the other things right let's talk

00:12:06,839 --> 00:12:10,709
about those there are things that Drupal

00:12:09,000 --> 00:12:12,329
expects to be in the database and this

00:12:10,709 --> 00:12:14,160
is the biggest problem with trying to

00:12:12,329 --> 00:12:16,380
deal with a Drupal 7 site for the long

00:12:14,160 --> 00:12:17,730
term is that you've got configuration in

00:12:16,380 --> 00:12:19,110
the database it's a problem it's been

00:12:17,730 --> 00:12:21,389
solved in Drupal 8 so we talked about

00:12:19,110 --> 00:12:23,100
but Drupal expects those things to be in

00:12:21,389 --> 00:12:24,329
the database and so when features tries

00:12:23,100 --> 00:12:26,639
to pull them out and put them in code

00:12:24,329 --> 00:12:28,110
there's this expensive process of when

00:12:26,639 --> 00:12:29,610
you're deploying those changes trying to

00:12:28,110 --> 00:12:30,660
put them back where they should be so

00:12:29,610 --> 00:12:32,250
they're gonna be where they are one

00:12:30,660 --> 00:12:33,810
drupal is checking to see where they are

00:12:32,250 --> 00:12:35,130
and that's where things get really messy

00:12:33,810 --> 00:12:37,290
when you're trying to do this handoff

00:12:35,130 --> 00:12:40,769
between what you're both expecting and

00:12:37,290 --> 00:12:43,319
what developers want and these are the

00:12:40,769 --> 00:12:44,579
things that are not super safe to manage

00:12:43,319 --> 00:12:45,870
in features this is where you start

00:12:44,579 --> 00:12:48,779
getting really frustrated with trying to

00:12:45,870 --> 00:12:50,819
get them to revert so my crazy idea is

00:12:48,779 --> 00:12:52,800
like well why don't we just leave the

00:12:50,819 --> 00:12:54,959
things that don't work well where they

00:12:52,800 --> 00:12:58,800
do work well and try and figure out a

00:12:54,959 --> 00:13:00,600
way to work around that so there's two

00:12:58,800 --> 00:13:03,569
ways you can manage configuration in the

00:13:00,600 --> 00:13:06,389
database on Drupal 7 and one of them is

00:13:03,569 --> 00:13:07,860
to do things manually and believe it or

00:13:06,389 --> 00:13:09,570
not this is how

00:13:07,860 --> 00:13:12,570
we used to do things in Drupal before we

00:13:09,570 --> 00:13:15,959
had features if it's safe that's a great

00:13:12,570 --> 00:13:17,670
plan if it's not safe you can write an

00:13:15,959 --> 00:13:19,860
update hook and this is also the way we

00:13:17,670 --> 00:13:20,940
used to manage these things before I see

00:13:19,860 --> 00:13:24,410
people watching ahead before we add

00:13:20,940 --> 00:13:28,140
features we had to do it this way so

00:13:24,410 --> 00:13:30,540
doing it manually this is not a glorious

00:13:28,140 --> 00:13:32,970
solution but it does work right if

00:13:30,540 --> 00:13:34,380
there's a simple repeatable process that

00:13:32,970 --> 00:13:37,790
you can do on multiple environments and

00:13:34,380 --> 00:13:40,740
you can document that you can redo it it

00:13:37,790 --> 00:13:42,839
really depends on how complicated this

00:13:40,740 --> 00:13:44,370
thing is if it's a process of like

00:13:42,839 --> 00:13:45,870
creating a content type and adding 18

00:13:44,370 --> 00:13:48,510
fields that might not be something you

00:13:45,870 --> 00:13:49,980
want to do manually something that's

00:13:48,510 --> 00:13:51,149
gonna be super time consuming you don't

00:13:49,980 --> 00:13:54,120
wanna do over and over again but for a

00:13:51,149 --> 00:13:56,339
simple task changing a view there is

00:13:54,120 --> 00:13:59,519
there is kind of a balance there of like

00:13:56,339 --> 00:14:01,079
how worth it is it gonna be for me to do

00:13:59,519 --> 00:14:02,910
this manually versus how earth is gonna

00:14:01,079 --> 00:14:07,470
meeting me try and find a way to do it

00:14:02,910 --> 00:14:09,779
not manually and this is something that

00:14:07,470 --> 00:14:11,910
I do all the time which is not for the

00:14:09,779 --> 00:14:14,760
faint of heart but if you have a multi

00:14:11,910 --> 00:14:16,350
environment setup which even on my

00:14:14,760 --> 00:14:17,850
simplest sites I have at least two

00:14:16,350 --> 00:14:20,449
copies of the site sometimes three or

00:14:17,850 --> 00:14:22,589
four depending on what you're doing

00:14:20,449 --> 00:14:24,209
creating a content type you don't want

00:14:22,589 --> 00:14:25,800
to do that four times you might want to

00:14:24,209 --> 00:14:28,110
go directly to the live site and say hey

00:14:25,800 --> 00:14:29,430
you know this group now wants to have a

00:14:28,110 --> 00:14:30,839
new video type I'm just going to create

00:14:29,430 --> 00:14:32,130
the video type on the live site I'm

00:14:30,839 --> 00:14:33,470
gonna add all the fields and if there's

00:14:32,130 --> 00:14:35,550
something like 15 fields on it

00:14:33,470 --> 00:14:37,769
publishers and dates and whatever you

00:14:35,550 --> 00:14:39,839
can add all those things you can export

00:14:37,769 --> 00:14:41,940
that live site into any other one in

00:14:39,839 --> 00:14:43,470
other environments and that can be a

00:14:41,940 --> 00:14:45,269
much faster process than trying to

00:14:43,470 --> 00:14:47,250
figure out how to get that content type

00:14:45,269 --> 00:14:49,019
into a feature and deploy it so rather

00:14:47,250 --> 00:14:50,940
than moving upstream which is how

00:14:49,019 --> 00:14:52,320
developers usually do things starting in

00:14:50,940 --> 00:14:54,870
live and moving it downstream is a much

00:14:52,320 --> 00:14:55,620
faster way to do it but again not for

00:14:54,870 --> 00:15:00,329
the faint of heart because you're

00:14:55,620 --> 00:15:02,730
dealing directly on the live site so the

00:15:00,329 --> 00:15:05,610
other way is writing an update hook and

00:15:02,730 --> 00:15:07,380
this is something that you do need to

00:15:05,610 --> 00:15:09,510
know what you're changing right like

00:15:07,380 --> 00:15:11,610
there's a lot of danger in like oh well

00:15:09,510 --> 00:15:13,260
I'm just gonna change this field display

00:15:11,610 --> 00:15:15,360
setting and the field display settings

00:15:13,260 --> 00:15:17,250
are super messy and Drupal's I've been

00:15:15,360 --> 00:15:18,690
they're still realized into a single

00:15:17,250 --> 00:15:19,410
variable and chopped into the variables

00:15:18,690 --> 00:15:21,180
table

00:15:19,410 --> 00:15:22,560
but if you know exactly what that

00:15:21,180 --> 00:15:24,870
variable is supposed to look like when

00:15:22,560 --> 00:15:27,240
it's done you can get an update hook

00:15:24,870 --> 00:15:29,310
that will take it from the way it is

00:15:27,240 --> 00:15:31,050
currently modify it into what you want

00:15:29,310 --> 00:15:33,810
it to be and put it back in so it's

00:15:31,050 --> 00:15:35,370
something that used to be the only tool

00:15:33,810 --> 00:15:37,259
we had to kind of maintain changes to

00:15:35,370 --> 00:15:39,360
the database I would recommend in some

00:15:37,259 --> 00:15:40,649
instances that is an easier route than

00:15:39,360 --> 00:15:44,879
trying to figure out how to get it and

00:15:40,649 --> 00:15:46,199
manage it in a feature so I know you

00:15:44,879 --> 00:15:48,149
guys are thinking I just said custom

00:15:46,199 --> 00:15:49,649
code twice and a lot of people are like

00:15:48,149 --> 00:15:50,970
why would I write custom code when

00:15:49,649 --> 00:15:53,430
there's the features model that module

00:15:50,970 --> 00:15:56,250
that would do this for me and for me I

00:15:53,430 --> 00:15:58,290
find it faster and easier and less crazy

00:15:56,250 --> 00:16:01,529
making to deal with the custom code than

00:15:58,290 --> 00:16:02,639
it is to deal with the feature so which

00:16:01,529 --> 00:16:05,699
is really quick the things that we're

00:16:02,639 --> 00:16:07,199
trying to achieve here not harming site

00:16:05,699 --> 00:16:09,660
performance so keeping features off the

00:16:07,199 --> 00:16:11,430
site will make your site faster saving

00:16:09,660 --> 00:16:13,350
developer time so again this is a

00:16:11,430 --> 00:16:14,850
balance of like if writing that custom

00:16:13,350 --> 00:16:17,040
code is gonna be hard and painful and

00:16:14,850 --> 00:16:18,509
scary for people that might be a thing

00:16:17,040 --> 00:16:19,889
then we'll say it's gonna be faster for

00:16:18,509 --> 00:16:22,470
this project to do features than it

00:16:19,889 --> 00:16:24,649
would be to custom do to custom code but

00:16:22,470 --> 00:16:26,910
I have found a significant saving and

00:16:24,649 --> 00:16:28,860
savings and developer time to deal with

00:16:26,910 --> 00:16:30,839
all of my custom code instead of

00:16:28,860 --> 00:16:33,540
features so that's a trade-off it would

00:16:30,839 --> 00:16:35,939
probably be per project and then the

00:16:33,540 --> 00:16:37,319
last one keeping yourself sane so if you

00:16:35,939 --> 00:16:38,790
like working with features and you think

00:16:37,319 --> 00:16:40,439
working with features and keep you more

00:16:38,790 --> 00:16:43,290
sane than trying to figure out how to

00:16:40,439 --> 00:16:44,730
write an update hook do features by all

00:16:43,290 --> 00:16:47,939
means this is not a solution for

00:16:44,730 --> 00:16:50,370
everyone okay so I have been able to

00:16:47,939 --> 00:16:52,649
achieve all of these solutions to all of

00:16:50,370 --> 00:16:54,240
these problems by doing it this way this

00:16:52,649 --> 00:16:56,250
is my choice I'm sharing it with you

00:16:54,240 --> 00:16:58,199
just for fun not because I think it's

00:16:56,250 --> 00:16:59,310
the only way to do things but it's

00:16:58,199 --> 00:17:01,410
something that I've showed people and

00:16:59,310 --> 00:17:02,790
they've several people have expressed

00:17:01,410 --> 00:17:03,930
interest in learning about it so I

00:17:02,790 --> 00:17:06,809
figured it was worth sharing with you

00:17:03,930 --> 00:17:10,679
guys too so what's going to be in this

00:17:06,809 --> 00:17:12,720
code I've got a stub mode module for

00:17:10,679 --> 00:17:14,730
each type of configuration that can be

00:17:12,720 --> 00:17:16,409
exported so that means I've got a module

00:17:14,730 --> 00:17:17,850
for views and a module for panels and a

00:17:16,409 --> 00:17:19,380
module for feets and a module for

00:17:17,850 --> 00:17:20,789
whatever it is I have on the site that

00:17:19,380 --> 00:17:22,530
needs to have exports they keep them

00:17:20,789 --> 00:17:24,780
separate and this is something I

00:17:22,530 --> 00:17:27,329
actually learned from using features

00:17:24,780 --> 00:17:29,909
when I originally been bundled all of my

00:17:27,329 --> 00:17:31,530
features into individual sets of

00:17:29,909 --> 00:17:32,390
functionality like the way I thought it

00:17:31,530 --> 00:17:34,400
was supposed to be

00:17:32,390 --> 00:17:36,980
I found myself wasting a lot of time

00:17:34,400 --> 00:17:38,870
looking for like where is the view that

00:17:36,980 --> 00:17:40,610
manages the photo gallery is it in the

00:17:38,870 --> 00:17:42,680
one for photos or is it in the one for

00:17:40,610 --> 00:17:44,120
galleries or is it I don't know like

00:17:42,680 --> 00:17:47,150
there's so many different pieces of a

00:17:44,120 --> 00:17:48,830
Drupal site that can sometimes be one

00:17:47,150 --> 00:17:50,420
piece or another it's kind of up to

00:17:48,830 --> 00:17:52,220
whoever created the feature to decide

00:17:50,420 --> 00:17:55,310
where to put it for me I started

00:17:52,220 --> 00:17:57,860
grouping them rather than by feature I

00:17:55,310 --> 00:17:59,840
started grouping them by type of thing

00:17:57,860 --> 00:18:01,850
so then I had a feature for views and a

00:17:59,840 --> 00:18:03,560
feature for you know each content type

00:18:01,850 --> 00:18:05,780
and it was only the database structure

00:18:03,560 --> 00:18:07,700
and then I had a feature for panels and

00:18:05,780 --> 00:18:09,380
so when I started creating this custom

00:18:07,700 --> 00:18:10,940
solution I did it the same way where I

00:18:09,380 --> 00:18:12,380
now have a custom module for views in a

00:18:10,940 --> 00:18:13,910
custom modular panel it just makes it

00:18:12,380 --> 00:18:16,130
really easy for developers to know

00:18:13,910 --> 00:18:18,890
exactly where to file define find the

00:18:16,130 --> 00:18:20,810
file they're changing and then almost

00:18:18,890 --> 00:18:22,580
every one of my projects also has a

00:18:20,810 --> 00:18:24,290
custom model module that's specifically

00:18:22,580 --> 00:18:26,180
for update hooks so that way if I need

00:18:24,290 --> 00:18:28,370
to make a change to the database I know

00:18:26,180 --> 00:18:30,140
exactly where that file is gonna live

00:18:28,370 --> 00:18:34,250
and it's in that separate module for

00:18:30,140 --> 00:18:40,010
updating code so I want to show you some

00:18:34,250 --> 00:18:42,950
code examples so this is my module for

00:18:40,010 --> 00:18:45,590
views info file is just really simple it

00:18:42,950 --> 00:18:48,050
just says dependency on views depending

00:18:45,590 --> 00:18:50,330
on what your views need to do you can

00:18:48,050 --> 00:18:51,770
add additional dependencies so for

00:18:50,330 --> 00:18:53,600
example this site is using the Flex

00:18:51,770 --> 00:18:55,190
slider module so have a dependence here

00:18:53,600 --> 00:18:58,070
on flex slider views and I'll show you

00:18:55,190 --> 00:18:59,540
Flex sliders have presets that are also

00:18:58,070 --> 00:19:03,020
exportable and I'll show you those in a

00:18:59,540 --> 00:19:05,270
minute in net code as well so the module

00:19:03,020 --> 00:19:07,130
itself is really simple there's a couple

00:19:05,270 --> 00:19:08,270
of views hooks that you need to

00:19:07,130 --> 00:19:09,620
implement just to make sure you're

00:19:08,270 --> 00:19:11,330
running the right version of views this

00:19:09,620 --> 00:19:15,530
could be version 3 or whatever it is to

00:19:11,330 --> 00:19:18,020
your site needs if you have plugins that

00:19:15,530 --> 00:19:19,640
you need to specify where those plugins

00:19:18,020 --> 00:19:21,560
are or what version of those might be

00:19:19,640 --> 00:19:24,020
needed but the code that actually

00:19:21,560 --> 00:19:26,600
handles the export is super simple it's

00:19:24,020 --> 00:19:30,290
like what is this less than 10 lines of

00:19:26,600 --> 00:19:33,110
code 8 lines of code 12 lines of code

00:19:30,290 --> 00:19:34,940
it's just a loop that says hey go look

00:19:33,110 --> 00:19:37,610
in this folder find a file with a

00:19:34,940 --> 00:19:40,370
particular extension if there's a view

00:19:37,610 --> 00:19:42,020
in that file loaded so this is how all

00:19:40,370 --> 00:19:44,260
of your views exports get managed in

00:19:42,020 --> 00:19:45,760
nice clean individual files

00:19:44,260 --> 00:19:49,960
and then I did the same thing again

00:19:45,760 --> 00:19:51,669
views module has altar hook Sofia's

00:19:49,960 --> 00:19:54,039
provides a bunch of custom views a lot

00:19:51,669 --> 00:19:55,600
of kinship modules provide default views

00:19:54,039 --> 00:19:56,919
you want to be able to make changes to

00:19:55,600 --> 00:19:59,620
those default views you can do it in

00:19:56,919 --> 00:20:01,059
exactly the same way so this just says

00:19:59,620 --> 00:20:02,769
hey go looking this folder called views

00:20:01,059 --> 00:20:04,929
so I'm not sure if you can see this on

00:20:02,769 --> 00:20:07,419
the screen because it's really tiny but

00:20:04,929 --> 00:20:09,460
in my views module I have a views folder

00:20:07,419 --> 00:20:11,679
and inside that views folder there is an

00:20:09,460 --> 00:20:13,059
ink file for every single view and this

00:20:11,679 --> 00:20:14,860
is just what happens when you go to the

00:20:13,059 --> 00:20:17,200
views UI and you click export it'll just

00:20:14,860 --> 00:20:18,730
give you a bunch of PHP you just copy to

00:20:17,200 --> 00:20:21,159
PHP and you throw it and just Inc file

00:20:18,730 --> 00:20:23,200
and you save and I find having one view

00:20:21,159 --> 00:20:25,000
per file is super easy to manage because

00:20:23,200 --> 00:20:26,919
then if you have multiple developers and

00:20:25,000 --> 00:20:28,510
one does a poll they can see which view

00:20:26,919 --> 00:20:30,010
has been pulled in and they can go to

00:20:28,510 --> 00:20:31,630
their interface and views and they can

00:20:30,010 --> 00:20:33,039
make sure that it's in a reverted state

00:20:31,630 --> 00:20:35,019
so that they don't have any changes that

00:20:33,039 --> 00:20:36,850
are gonna be competing with the changes

00:20:35,019 --> 00:20:38,289
that were in that file so it makes it

00:20:36,850 --> 00:20:39,610
really easy to manage and get and makes

00:20:38,289 --> 00:20:41,049
it really easy for developers to know

00:20:39,610 --> 00:20:44,200
where they are and all this stuff is

00:20:41,049 --> 00:20:47,500
right there so I mentioned before that

00:20:44,200 --> 00:20:50,320
the views in this particular example are

00:20:47,500 --> 00:20:52,990
using flex sliders flex eiders also are

00:20:50,320 --> 00:20:55,299
using the CTools export UI which is what

00:20:52,990 --> 00:20:57,220
ersity tools export API which is what

00:20:55,299 --> 00:20:59,679
view's uses to manage this like view

00:20:57,220 --> 00:21:02,590
export thing a lot of kinship modules in

00:20:59,679 --> 00:21:03,850
all of Drupal do this and every single

00:21:02,590 --> 00:21:06,549
one that has support you can manage in

00:21:03,850 --> 00:21:09,820
this exact same way so in my views

00:21:06,549 --> 00:21:12,039
module I also have a hook for flex

00:21:09,820 --> 00:21:13,389
slider defaults and the only difference

00:21:12,039 --> 00:21:15,850
between the Flex sliders and the views

00:21:13,389 --> 00:21:18,100
in this code is the folder I chose to

00:21:15,850 --> 00:21:20,500
put the Inc files in and that's just so

00:21:18,100 --> 00:21:22,809
that when I'm in this Flex lighter a UI

00:21:20,500 --> 00:21:24,490
I can say export a Flex later I know

00:21:22,809 --> 00:21:26,799
exactly where to find that I've got a

00:21:24,490 --> 00:21:30,519
sliders folder inside my views module

00:21:26,799 --> 00:21:32,889
and I've got a couple of flex slider

00:21:30,519 --> 00:21:34,480
preset exports here too so again

00:21:32,889 --> 00:21:35,590
depending on how you want to manage

00:21:34,480 --> 00:21:37,809
things you might want to have like a

00:21:35,590 --> 00:21:39,250
separate custom module for sliders

00:21:37,809 --> 00:21:41,049
that's different from your ones for

00:21:39,250 --> 00:21:42,549
views but in my case I never use the

00:21:41,049 --> 00:21:44,470
Flex lettered preset that's not part of

00:21:42,549 --> 00:21:45,639
a view so it made more sense to keep

00:21:44,470 --> 00:21:47,710
those in the same module because they

00:21:45,639 --> 00:21:49,179
always went together but again it

00:21:47,710 --> 00:21:50,500
difficult depend on your site and your

00:21:49,179 --> 00:21:55,139
developers workflow how they want to

00:21:50,500 --> 00:21:57,179
organize things so that's views

00:21:55,139 --> 00:21:59,519
pannels does anybody use panels on their

00:21:57,179 --> 00:22:00,090
Drupal 7 sites anymore a couple that's

00:21:59,519 --> 00:22:01,559
pretty good

00:22:00,090 --> 00:22:06,360
okay so panels are a little bit more

00:22:01,559 --> 00:22:09,090
complicated than views but the model is

00:22:06,360 --> 00:22:11,549
exactly the same so the info file uses

00:22:09,090 --> 00:22:14,190
panels and page manager I also have an

00:22:11,549 --> 00:22:15,539
additional dependency here on a module

00:22:14,190 --> 00:22:17,700
that provides a bunch of layouts because

00:22:15,539 --> 00:22:19,350
my panel pages use layouts from that

00:22:17,700 --> 00:22:21,330
module but again will depend on your

00:22:19,350 --> 00:22:22,980
particular setup make sure you have your

00:22:21,330 --> 00:22:25,440
dependencies clean that's the only point

00:22:22,980 --> 00:22:27,389
here and then the piano's module is the

00:22:25,440 --> 00:22:28,649
same thing where it has version

00:22:27,389 --> 00:22:30,239
requirements this is just the normal

00:22:28,649 --> 00:22:37,049
hook you'd use for panels and then

00:22:30,239 --> 00:22:39,029
there's another couple of looping hooks

00:22:37,049 --> 00:22:42,570
there's one of them here that handles

00:22:39,029 --> 00:22:44,070
handlers so panels handlers are the

00:22:42,570 --> 00:22:45,749
things that override existing paths is

00:22:44,070 --> 00:22:47,580
something like nodes and taxonomy terms

00:22:45,749 --> 00:22:50,039
anything that's already existing and you

00:22:47,580 --> 00:22:52,529
want to alter the way that menu callback

00:22:50,039 --> 00:22:55,080
works so I have a folder for handlers

00:22:52,529 --> 00:22:56,639
and then I have another one for pages so

00:22:55,080 --> 00:22:58,259
pages are things and panels that you

00:22:56,639 --> 00:23:00,450
make yourself so like the home page and

00:22:58,259 --> 00:23:02,190
then it doesn't already have a path and

00:23:00,450 --> 00:23:03,539
those go in a separate directory too and

00:23:02,190 --> 00:23:05,369
the reason I chose to put those things

00:23:03,539 --> 00:23:07,739
in separate directories is because the

00:23:05,369 --> 00:23:10,080
user interface is different so where you

00:23:07,739 --> 00:23:13,320
are in Drupal when you choose to export

00:23:10,080 --> 00:23:15,450
is different when you're on handler page

00:23:13,320 --> 00:23:17,340
you're not exporting the whole thing

00:23:15,450 --> 00:23:19,470
you're only exporting a little bit so

00:23:17,340 --> 00:23:21,450
you have like no type article no type

00:23:19,470 --> 00:23:25,230
page or whatever those specific bits are

00:23:21,450 --> 00:23:26,580
at smaller amounts and so I found the

00:23:25,230 --> 00:23:29,999
people I was working with how to heart

00:23:26,580 --> 00:23:31,830
or time figuring out which UI you

00:23:29,999 --> 00:23:33,690
exported from because in panels you can

00:23:31,830 --> 00:23:35,009
do both so I separated them on the code

00:23:33,690 --> 00:23:36,840
side so it's like okay if you know

00:23:35,009 --> 00:23:40,559
you're gonna look in your handlers

00:23:36,840 --> 00:23:43,730
folder and you're gonna find one for you

00:23:40,559 --> 00:23:45,899
know a specific basic page content type

00:23:43,730 --> 00:23:47,519
it'll tell you okay well if this is a

00:23:45,899 --> 00:23:48,809
handler you're not going to be exporting

00:23:47,519 --> 00:23:50,789
the whole page you're only gonna expect

00:23:48,809 --> 00:23:53,369
exporting one for that type so it's just

00:23:50,789 --> 00:23:54,299
something I developed over time again if

00:23:53,369 --> 00:23:56,970
you guys want to put them all together

00:23:54,299 --> 00:23:58,350
that's totally up to you and then same

00:23:56,970 --> 00:24:00,419
thing here I have text on a midterm

00:23:58,350 --> 00:24:03,950
example but whatever you do in panels

00:24:00,419 --> 00:24:03,950
you can export cleanly here

00:24:04,140 --> 00:24:08,880
so handlers pages and then if you're

00:24:06,870 --> 00:24:11,460
using the mini panels module those also

00:24:08,880 --> 00:24:12,990
export in another place in Drupal UI so

00:24:11,460 --> 00:24:15,240
I created another folder in my panels

00:24:12,990 --> 00:24:17,370
module so I've got a folder for handlers

00:24:15,240 --> 00:24:19,559
a folder for minis and a folder for

00:24:17,370 --> 00:24:21,120
pages and so depending on what you're

00:24:19,559 --> 00:24:22,769
managing and where you're exporting it

00:24:21,120 --> 00:24:24,419
you can organize it cleanly in your code

00:24:22,769 --> 00:24:29,610
to match and again that's to make it

00:24:24,419 --> 00:24:31,049
really easy to manage in git so let's

00:24:29,610 --> 00:24:32,370
talk about some of the examples all of

00:24:31,049 --> 00:24:34,019
the views and panel stuff we just looked

00:24:32,370 --> 00:24:36,870
at even including flex layers and you

00:24:34,019 --> 00:24:39,870
know mini panels those all use the C

00:24:36,870 --> 00:24:42,330
tools X portables API but there are

00:24:39,870 --> 00:24:43,889
things in Drupal core that do not use C

00:24:42,330 --> 00:24:45,210
tools X portables and those are things

00:24:43,889 --> 00:24:47,460
you sometimes also want to be able to

00:24:45,210 --> 00:24:49,740
manage in code so three of the most

00:24:47,460 --> 00:24:52,559
common examples I do on almost every

00:24:49,740 --> 00:24:55,980
site are view modes image styles and

00:24:52,559 --> 00:24:59,250
date formats and so in my code I have

00:24:55,980 --> 00:25:02,100
even three separate modules for managing

00:24:59,250 --> 00:25:04,769
those image styles are the most common

00:25:02,100 --> 00:25:08,490
so do that first again very simple info

00:25:04,769 --> 00:25:11,220
file the module has two hooks so these

00:25:08,490 --> 00:25:12,899
are not ctools exportable api hooks

00:25:11,220 --> 00:25:15,480
these are just Drupal core hooks but

00:25:12,899 --> 00:25:17,490
there's one that is default image styles

00:25:15,480 --> 00:25:18,870
so if you want to add your own default

00:25:17,490 --> 00:25:20,970
styles like things that don't exist

00:25:18,870 --> 00:25:24,120
already in Drupal you can just export

00:25:20,970 --> 00:25:26,760
them with whatever image effects you

00:25:24,120 --> 00:25:28,139
want to have if you're using contribs to

00:25:26,760 --> 00:25:29,580
add additional image effects you'll

00:25:28,139 --> 00:25:30,899
again want to make sure the dependency

00:25:29,580 --> 00:25:32,580
is there in the module but you can still

00:25:30,899 --> 00:25:38,010
export them in the same way and get them

00:25:32,580 --> 00:25:43,200
into this file and if you want to modify

00:25:38,010 --> 00:25:45,360
an existing image style there's also an

00:25:43,200 --> 00:25:47,100
image Styles alter hook where you can

00:25:45,360 --> 00:25:48,389
take something like there's three image

00:25:47,100 --> 00:25:50,100
styles that come by default in Drupal 7

00:25:48,389 --> 00:25:52,200
small medium and large or thumbnail

00:25:50,100 --> 00:25:53,730
medium and large you can change those

00:25:52,200 --> 00:25:55,919
names you can change the styles you can

00:25:53,730 --> 00:25:58,529
change the sizes in the same way just by

00:25:55,919 --> 00:26:01,440
using this alter hook so this is usually

00:25:58,529 --> 00:26:03,389
how I do this I find that usually what

00:26:01,440 --> 00:26:05,220
happens with image styles as I end up

00:26:03,389 --> 00:26:06,779
creating them in the beginning and they

00:26:05,220 --> 00:26:08,880
don't change very often so this

00:26:06,779 --> 00:26:10,590
particular module is adopted from a site

00:26:08,880 --> 00:26:13,260
that was built once in these image tiles

00:26:10,590 --> 00:26:15,270
I've never been changed but I do find

00:26:13,260 --> 00:26:16,010
that if you have a site that is changing

00:26:15,270 --> 00:26:17,600
a lot or adding

00:26:16,010 --> 00:26:19,100
you can also put a little loop in here

00:26:17,600 --> 00:26:21,050
and put each one of these into its own

00:26:19,100 --> 00:26:25,430
PHP ink file too if that's easier to

00:26:21,050 --> 00:26:30,350
manage that way so similarly here we

00:26:25,430 --> 00:26:31,460
have deep formats same thing there's a

00:26:30,350 --> 00:26:33,200
hook in core that lets you provide

00:26:31,460 --> 00:26:34,730
default ones there's a hook in core that

00:26:33,200 --> 00:26:37,070
lets you override them so if you want to

00:26:34,730 --> 00:26:39,260
add your own date formats you can all of

00:26:37,070 --> 00:26:40,400
this we'll get there in a minute so so

00:26:39,260 --> 00:26:42,290
here i've got an example of like i'm

00:26:40,400 --> 00:26:44,870
adding four new date formats and i'm

00:26:42,290 --> 00:26:46,580
defining types that work or what the

00:26:44,870 --> 00:26:47,990
actual string code is for each of those

00:26:46,580 --> 00:26:50,210
date formats i'm changing names on

00:26:47,990 --> 00:26:53,330
existing ones just to make the interface

00:26:50,210 --> 00:26:55,490
less crazy and then I have it aloneness

00:26:53,330 --> 00:26:56,750
view modes here's an example of the view

00:26:55,490 --> 00:26:58,850
modes module it doesn't have any

00:26:56,750 --> 00:27:01,010
dependencies I just added an extra one

00:26:58,850 --> 00:27:04,430
here for something called budget and

00:27:01,010 --> 00:27:06,350
then I have filled the bowl panel pane

00:27:04,430 --> 00:27:08,330
is the module I really like here it's

00:27:06,350 --> 00:27:09,860
got an extra View mode for those so you

00:27:08,330 --> 00:27:11,510
can control how those look so if you

00:27:09,860 --> 00:27:12,710
want extra fema's on your nodes or

00:27:11,510 --> 00:27:17,180
whatever you can add them in the same

00:27:12,710 --> 00:27:20,870
way okay I know who's gonna know time

00:27:17,180 --> 00:27:22,850
okay really quick we talked about that

00:27:20,870 --> 00:27:24,380
custom code is not that scary if you

00:27:22,850 --> 00:27:25,670
have any example to work from and this

00:27:24,380 --> 00:27:27,590
is open source so I've opened source all

00:27:25,670 --> 00:27:29,750
my code you can find it at github comm

00:27:27,590 --> 00:27:30,920
/gen left in chests generate so if you

00:27:29,750 --> 00:27:33,980
want to refer to this in a future you

00:27:30,920 --> 00:27:35,300
totally can and this works for me might

00:27:33,980 --> 00:27:38,350
not work for you feel free to give it a

00:27:35,300 --> 00:27:38,350
try and we're outside

00:27:39,470 --> 00:27:46,370
[Applause]

00:27:41,230 --> 00:27:48,230
[Music]

00:27:46,370 --> 00:27:49,370
if you do have questions feel free to

00:27:48,230 --> 00:27:51,080
meet me in the hall I know there's

00:27:49,370 --> 00:27:51,470
another talk that starts in like three

00:27:51,080 --> 00:27:54,970
minutes

00:27:51,470 --> 00:27:54,970
so thanks guys

00:27:56,180 --> 00:27:59,989
[Applause]

00:28:00,110 --> 00:28:03,360

YouTube URL: https://www.youtube.com/watch?v=KQqO3whxROY


