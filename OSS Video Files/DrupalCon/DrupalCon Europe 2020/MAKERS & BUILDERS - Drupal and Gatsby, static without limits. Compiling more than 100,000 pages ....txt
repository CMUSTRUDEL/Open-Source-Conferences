Title: MAKERS & BUILDERS - Drupal and Gatsby, static without limits. Compiling more than 100,000 pages ...
Publication date: 2021-01-13
Playlist: DrupalCon Europe 2020
Description: 
	Session content The challenge with large static sites involves efficient generation of a large number of pages as well as providing an agile experience for content editors. This session will be an inside look at our solution for decoupling XXL sites overcoming JSON:API limitations for efficient Drupal data extraction and creating an instant editing experience.
Captions: 
	00:00:04,059 --> 00:00:09,889
[Music]

00:00:14,920 --> 00:00:17,920
hello

00:00:19,439 --> 00:00:24,960
static without limits building more than

00:00:22,720 --> 00:00:27,119
1k batches invest in what it takes to

00:00:24,960 --> 00:00:30,560
make a coffee

00:00:27,119 --> 00:00:31,519
hope your coffees are ready my name is

00:00:30,560 --> 00:00:35,440
olivier bravo

00:00:31,519 --> 00:00:37,920
rutasun and i work at bico we have

00:00:35,440 --> 00:00:39,200
more than 20 years of web development

00:00:37,920 --> 00:00:42,239
experience

00:00:39,200 --> 00:00:46,719
and we have been working with rupaul

00:00:42,239 --> 00:00:46,719
for the last 10 years more or less

00:00:47,200 --> 00:00:53,840
so one year

00:00:50,480 --> 00:00:57,600
two years ago we have

00:00:53,840 --> 00:01:01,359
a big big challenge we always work uh

00:00:57,600 --> 00:01:04,720
worked with the with a drupal monolith

00:01:01,359 --> 00:01:08,880
so um it came to us

00:01:04,720 --> 00:01:12,320
this kind of monolith 42

00:01:08,880 --> 00:01:15,439
amazon instances so the

00:01:12,320 --> 00:01:19,280
it was very very expensive

00:01:15,439 --> 00:01:20,880
very close to the maintenance cost of

00:01:19,280 --> 00:01:24,479
the infrastructure was

00:01:20,880 --> 00:01:28,240
very high and the development experience

00:01:24,479 --> 00:01:32,880
it was it wasn't so good

00:01:28,240 --> 00:01:32,880
and the result

00:01:34,159 --> 00:01:38,079
quite impressive so

00:01:38,240 --> 00:01:45,920
you may ask how we did it

00:01:42,720 --> 00:01:50,079
our recipe okay japan

00:01:45,920 --> 00:01:53,600
um we think

00:01:50,079 --> 00:01:57,200
that it's maybe not the best

00:01:53,600 --> 00:02:00,000
but it suits us very very well

00:01:57,200 --> 00:02:01,439
because uh we have a big experience in

00:02:00,000 --> 00:02:03,680
drupal

00:02:01,439 --> 00:02:05,200
and we have also teams that work with

00:02:03,680 --> 00:02:07,439
react

00:02:05,200 --> 00:02:10,319
so for us what pretty straightforward to

00:02:07,439 --> 00:02:13,039
test and build an infrastructure

00:02:10,319 --> 00:02:13,039
like this one

00:02:14,319 --> 00:02:18,879
okay this is

00:02:19,520 --> 00:02:28,080
how it looks

00:02:23,599 --> 00:02:31,599
when okay jam secondary nutrient

00:02:28,080 --> 00:02:35,519
static content probably html css

00:02:31,599 --> 00:02:38,720
and javascript static file host

00:02:35,519 --> 00:02:41,760
and we understand jam stack

00:02:38,720 --> 00:02:46,879
also like a faster more secure

00:02:41,760 --> 00:02:46,879
and less expensive okay

00:02:47,519 --> 00:02:51,200
drupal as a content repository we have

00:02:50,480 --> 00:02:54,319
tried

00:02:51,200 --> 00:02:57,599
many many many cms out there

00:02:54,319 --> 00:03:00,720
and when trying to

00:02:57,599 --> 00:03:04,959
break the monolith trying to see

00:03:00,720 --> 00:03:06,050
what other people was doing

00:03:04,959 --> 00:03:08,640
so um

00:03:06,050 --> 00:03:11,840
[Music]

00:03:08,640 --> 00:03:12,800
we think that right now after all this

00:03:11,840 --> 00:03:17,360
research

00:03:12,800 --> 00:03:21,599
we think that drupal is the best

00:03:17,360 --> 00:03:24,319
a content repository because

00:03:21,599 --> 00:03:25,920
the development experience is very good

00:03:24,319 --> 00:03:27,230
as you know it

00:03:25,920 --> 00:03:28,959
and um

00:03:27,230 --> 00:03:31,760
[Music]

00:03:28,959 --> 00:03:32,879
you can build almost anything you liking

00:03:31,760 --> 00:03:37,440
or you think or

00:03:32,879 --> 00:03:39,760
imagining the dream in drupal so for us

00:03:37,440 --> 00:03:41,760
what's really was clear that we have to

00:03:39,760 --> 00:03:46,080
try

00:03:41,760 --> 00:03:51,120
a way to integrate this

00:03:46,080 --> 00:03:51,120
in this and

00:03:51,519 --> 00:03:57,020
for us the most important part of the

00:03:55,280 --> 00:03:59,200
drupal was

00:03:57,020 --> 00:04:03,519
[Music]

00:03:59,200 --> 00:04:06,480
to to have um

00:04:03,519 --> 00:04:09,920
a content repository that was not tied

00:04:06,480 --> 00:04:09,920
to the front end in this case

00:04:10,560 --> 00:04:18,639
and we identified a key components

00:04:15,040 --> 00:04:21,840
of the of the content stack to say

00:04:18,639 --> 00:04:25,520
in a way configurations translations

00:04:21,840 --> 00:04:27,600
add content a context is the most

00:04:25,520 --> 00:04:31,440
obvious but

00:04:27,600 --> 00:04:34,560
in spain and we have uh translations

00:04:31,440 --> 00:04:38,000
to to become

00:04:34,560 --> 00:04:40,400
i'll miss the like always we have always

00:04:38,000 --> 00:04:43,040
translations in our installations

00:04:40,400 --> 00:04:45,440
configurations is the other drupal path

00:04:43,040 --> 00:04:46,639
that many times come in and it's

00:04:45,440 --> 00:04:49,759
important

00:04:46,639 --> 00:04:54,800
to to build a site

00:04:49,759 --> 00:04:58,320
gatsby gatsby instant navigation

00:04:54,800 --> 00:05:01,680
we have tried many many

00:04:58,320 --> 00:05:02,400
static site generators and we think

00:05:01,680 --> 00:05:04,960
gatsby

00:05:02,400 --> 00:05:05,680
is the best suit for this task because

00:05:04,960 --> 00:05:09,120
it is

00:05:05,680 --> 00:05:12,960
constantly a content centric

00:05:09,120 --> 00:05:15,759
it has one of the fastest build times

00:05:12,960 --> 00:05:17,280
we love the prefetch functionality

00:05:15,759 --> 00:05:21,520
because

00:05:17,280 --> 00:05:24,800
when you when you navigate aside

00:05:21,520 --> 00:05:29,600
and you come in the mouse or the

00:05:24,800 --> 00:05:29,600
viewport it sees a link

00:05:29,680 --> 00:05:39,440
react does the prefetch

00:05:34,080 --> 00:05:44,800
so it becomes instant navigation

00:05:39,440 --> 00:05:44,800
so and drupal static suite was born

00:05:45,840 --> 00:05:53,840
we we identify

00:05:49,600 --> 00:05:53,840
these key components okay

00:05:54,080 --> 00:06:10,400
export build deploy and preview

00:06:06,639 --> 00:06:10,400
okay so

00:06:13,360 --> 00:06:16,800
statics it okay

00:06:18,840 --> 00:06:22,800
sorry having issues

00:06:26,639 --> 00:06:34,400
okay exporting and we leverage

00:06:31,199 --> 00:06:37,520
in our solution with graph

00:06:34,400 --> 00:06:42,639
graphql so

00:06:37,520 --> 00:06:42,639
to take a look how we export things how

00:06:43,199 --> 00:06:49,840
everybody sees this

00:06:51,280 --> 00:06:56,000
okay pretty straightforward and we use

00:06:54,960 --> 00:06:58,720
the

00:06:56,000 --> 00:07:00,639
3x version of the graphql module for

00:06:58,720 --> 00:07:03,680
drupal

00:07:00,639 --> 00:07:08,720
a for us it was an

00:07:03,680 --> 00:07:13,440
easy decision because at the time the

00:07:08,720 --> 00:07:17,199
diversion 4 was not mature enough to

00:07:13,440 --> 00:07:21,360
use it and in our case

00:07:17,199 --> 00:07:24,000
our team is our drupal team is made

00:07:21,360 --> 00:07:25,599
mostly by back-end and developers inside

00:07:24,000 --> 00:07:30,000
the builders

00:07:25,599 --> 00:07:32,400
so we love the functionality that

00:07:30,000 --> 00:07:33,599
comes with the drupal graphql free

00:07:32,400 --> 00:07:37,280
version

00:07:33,599 --> 00:07:40,960
that it exposes every

00:07:37,280 --> 00:07:45,840
every field of drupal in which in

00:07:40,960 --> 00:07:45,840
which its own name let's take a look

00:07:46,639 --> 00:07:54,000
we use chain media should taxonomy

00:07:50,639 --> 00:07:54,000
and so on and so on

00:07:54,960 --> 00:08:02,879
we we have a special

00:07:59,599 --> 00:08:03,840
conflict pages for the menus because as

00:08:02,879 --> 00:08:07,199
you know

00:08:03,840 --> 00:08:08,800
menus are one of the most important

00:08:07,199 --> 00:08:12,400
things in a drupal

00:08:08,800 --> 00:08:14,720
another sorry nam on my website

00:08:12,400 --> 00:08:16,520
and it's maybe one of the trickiest

00:08:14,720 --> 00:08:20,879
parts to implement

00:08:16,520 --> 00:08:24,080
in a good way so

00:08:20,879 --> 00:08:28,960
exporting the menu as a content

00:08:24,080 --> 00:08:28,960
and it was a huge advantage for us

00:08:34,159 --> 00:08:36,479
okay

00:08:38,839 --> 00:08:44,320
so sorry

00:08:51,519 --> 00:08:59,360
okay exporting exporting in our case

00:08:55,440 --> 00:09:01,839
is done with the the gqs so

00:08:59,360 --> 00:09:03,120
every time you save a node you change a

00:09:01,839 --> 00:09:06,959
taxonomy

00:09:03,120 --> 00:09:10,399
you change a configuration even when you

00:09:06,959 --> 00:09:16,240
change the translations we export

00:09:10,399 --> 00:09:20,000
every every single change in a json file

00:09:16,240 --> 00:09:22,640
we leverage on graphql but at the end

00:09:20,000 --> 00:09:23,279
and the most important thing for us was

00:09:22,640 --> 00:09:28,240
to have

00:09:23,279 --> 00:09:28,240
a full site in static content

00:09:30,480 --> 00:09:38,640
and the build the build process is just

00:09:35,040 --> 00:09:40,320
there are two types where you have the c

00:09:38,640 --> 00:09:42,160
matching machine that

00:09:40,320 --> 00:09:45,360
generates the content and makes the

00:09:42,160 --> 00:09:48,560
build and after it can deploy it

00:09:45,360 --> 00:09:51,760
or you can't have a cloud function

00:09:48,560 --> 00:09:52,399
a pipeline a github action whatever you

00:09:51,760 --> 00:09:56,320
like

00:09:52,399 --> 00:10:00,640
to make the building the cloud

00:09:56,320 --> 00:10:04,240
so um the build process is

00:10:00,640 --> 00:10:07,519
normally in at least in our case

00:10:04,240 --> 00:10:11,040
uh it's just um

00:10:07,519 --> 00:10:12,240
a shell command to launch so you can

00:10:11,040 --> 00:10:14,880
make them

00:10:12,240 --> 00:10:16,240
the whole process in whatever tool you

00:10:14,880 --> 00:10:19,519
like

00:10:16,240 --> 00:10:22,560
like hugo like next

00:10:19,519 --> 00:10:25,680
or gatsby in our case

00:10:22,560 --> 00:10:28,720
to deploy the deploy

00:10:25,680 --> 00:10:29,440
obviously it's the the point where you

00:10:28,720 --> 00:10:33,279
have the

00:10:29,440 --> 00:10:37,120
build and you

00:10:33,279 --> 00:10:40,880
you push it to a cdn or a static site

00:10:37,120 --> 00:10:44,320
or a static host to serve the full full

00:10:40,880 --> 00:10:47,360
html css in javascript

00:10:44,320 --> 00:10:49,839
like we see

00:10:47,360 --> 00:10:49,839
sorry

00:10:51,120 --> 00:10:58,100
like we see here so and

00:10:55,010 --> 00:10:58,100
[Music]

00:10:58,399 --> 00:11:04,320
then then there's also a

00:11:01,839 --> 00:11:06,640
another part like the search service

00:11:04,320 --> 00:11:10,320
payment gateway cloud services

00:11:06,640 --> 00:11:11,120
surpass integrations uh we we export

00:11:10,320 --> 00:11:15,040
manually

00:11:11,120 --> 00:11:18,320
every content in a way that we can

00:11:15,040 --> 00:11:21,440
for example and

00:11:18,320 --> 00:11:22,640
push it to an elastic search or on

00:11:21,440 --> 00:11:27,120
another third-party

00:11:22,640 --> 00:11:31,040
search engine so we don't need to

00:11:27,120 --> 00:11:35,600
to expose the full solar um

00:11:31,040 --> 00:11:39,279
instance like we did before so

00:11:35,600 --> 00:11:43,279
it was a very huge improvement

00:11:39,279 --> 00:11:46,880
and it's one of the key features in

00:11:43,279 --> 00:11:50,880
in many of our sites so at the end

00:11:46,880 --> 00:11:55,120
we have a drupal content repository

00:11:50,880 --> 00:11:57,600
the content repository itself it has a

00:11:55,120 --> 00:11:58,399
it can be accessible to the public

00:11:57,600 --> 00:12:01,120
public

00:11:58,399 --> 00:12:01,790
or you can even should even shoot down

00:12:01,120 --> 00:12:02,959
the

00:12:01,790 --> 00:12:06,399
[Music]

00:12:02,959 --> 00:12:07,920
the content management itself and use it

00:12:06,399 --> 00:12:11,200
only in office hours

00:12:07,920 --> 00:12:13,040
you can have in an in a close

00:12:11,200 --> 00:12:17,200
environment

00:12:13,040 --> 00:12:20,480
so the build process in

00:12:17,200 --> 00:12:24,880
in our testings we we do it

00:12:20,480 --> 00:12:28,000
in code builds and

00:12:24,880 --> 00:12:30,639
allow us to make um

00:12:28,000 --> 00:12:32,320
as many as concurrent wheel builds we

00:12:30,639 --> 00:12:35,360
need

00:12:32,320 --> 00:12:40,320
if a build it's broken so

00:12:35,360 --> 00:12:43,360
let's say json formatting is not good

00:12:40,320 --> 00:12:44,639
the or you can you can do as many tests

00:12:43,360 --> 00:12:46,959
as you need

00:12:44,639 --> 00:12:49,279
to ensure that your content is gonna be

00:12:46,959 --> 00:12:49,279
okay

00:12:49,519 --> 00:12:55,600
if anything anything goes wrong you

00:12:52,560 --> 00:12:56,480
you just don't deploy the site so the

00:12:55,600 --> 00:12:59,839
old side

00:12:56,480 --> 00:13:02,240
is still available that was very

00:12:59,839 --> 00:13:05,680
important for us

00:13:02,240 --> 00:13:08,959
because as you know in drupal

00:13:05,680 --> 00:13:10,639
or at least in our experience and many

00:13:08,959 --> 00:13:15,680
times when you

00:13:10,639 --> 00:13:18,720
replace things things can go wrong

00:13:15,680 --> 00:13:22,160
and when it's in production

00:13:18,720 --> 00:13:24,959
it's normally it's too late to

00:13:22,160 --> 00:13:24,959
to do anything

00:13:25,680 --> 00:13:31,839
okay a preview

00:13:28,800 --> 00:13:35,040
and we haven't tailored

00:13:31,839 --> 00:13:38,639
a custom solution with

00:13:35,040 --> 00:13:40,940
for drupal and gatsby however

00:13:38,639 --> 00:13:42,639
you can build a

00:13:40,940 --> 00:13:45,680
[Music]

00:13:42,639 --> 00:13:51,199
mirrorlessness the same solution for

00:13:45,680 --> 00:13:51,199
almost any site building a static site

00:14:00,839 --> 00:14:05,920
generator

00:14:03,360 --> 00:14:05,920
okay

00:14:10,350 --> 00:14:17,199
[Music]

00:14:13,440 --> 00:14:20,480
sorry having issues

00:14:17,199 --> 00:14:23,680
i have to say that it's my first

00:14:20,480 --> 00:14:26,720
um session with forma in this format

00:14:23,680 --> 00:14:29,760
and normally i used to to

00:14:26,720 --> 00:14:33,839
present it's a projector in an

00:14:29,760 --> 00:14:39,519
old-fashioned way to say in a way

00:14:33,839 --> 00:14:39,519
so sorry for the interruption

00:14:43,600 --> 00:14:47,680
export build deploy employment so the

00:14:46,720 --> 00:14:52,000
numbers

00:14:47,680 --> 00:14:52,000
um why not

00:14:52,880 --> 00:15:02,160
1k pages in

00:14:57,839 --> 00:15:05,279
or less for five minutes so

00:15:02,160 --> 00:15:08,959
how we do it because as you know

00:15:05,279 --> 00:15:12,720
gatsby has um a drupal source

00:15:08,959 --> 00:15:16,880
module or plugin like they call them

00:15:12,720 --> 00:15:21,440
that takes leverage of json apa

00:15:16,880 --> 00:15:23,680
and gets a fetch gets every time

00:15:21,440 --> 00:15:25,440
the content that the page itself it

00:15:23,680 --> 00:15:28,560
needs

00:15:25,440 --> 00:15:32,399
and so in a fast way

00:15:28,560 --> 00:15:35,279
gatsby normally it takes the content

00:15:32,399 --> 00:15:36,240
and it hydrates hydrates drupal

00:15:35,279 --> 00:15:40,160
components

00:15:36,240 --> 00:15:44,399
and with all this done in a

00:15:40,160 --> 00:15:48,320
build time and it generates

00:15:44,399 --> 00:15:51,680
all the html css and javascript needed

00:15:48,320 --> 00:15:55,759
for every page that he can

00:15:51,680 --> 00:16:01,519
it can encounter so

00:15:55,759 --> 00:16:03,759
when we started with json apa

00:16:01,519 --> 00:16:04,800
that the benchmarking or the times for

00:16:03,759 --> 00:16:08,079
the build time

00:16:04,800 --> 00:16:11,920
were very very very slow so

00:16:08,079 --> 00:16:15,360
um we come to with a solution

00:16:11,920 --> 00:16:17,759
that it's the it's not the exact uh

00:16:15,360 --> 00:16:19,120
gatsby way because we don't leverage on

00:16:17,759 --> 00:16:23,440
the gatsby

00:16:19,120 --> 00:16:27,440
uh graphql content

00:16:23,440 --> 00:16:28,720
we just take the json generated by

00:16:27,440 --> 00:16:32,240
drupal

00:16:28,720 --> 00:16:36,800
and we hydrate hybrid directly

00:16:32,240 --> 00:16:38,400
then the component itself

00:16:36,800 --> 00:16:41,040
so um

00:16:38,400 --> 00:16:46,560
[Music]

00:16:41,040 --> 00:16:46,560
it's a lot of faster because as you know

00:16:47,360 --> 00:16:53,279
this disk file or static file reading

00:16:50,480 --> 00:16:53,279
it's very very

00:16:54,079 --> 00:17:01,040
the speed of um the speed of reading

00:16:57,199 --> 00:17:04,240
from the disk is very very high so

00:17:01,040 --> 00:17:06,799
we count this with this solution

00:17:04,240 --> 00:17:08,480
and 4am we were very very surprised to

00:17:06,799 --> 00:17:12,160
see

00:17:08,480 --> 00:17:12,160
this and this results

00:17:12,480 --> 00:17:21,199
we have in concrete builds

00:17:15,839 --> 00:17:24,720
so when every the editors

00:17:21,199 --> 00:17:28,480
start to to edit content

00:17:24,720 --> 00:17:31,760
and when they finish and the content

00:17:28,480 --> 00:17:36,080
is regenerated in json at least

00:17:31,760 --> 00:17:39,760
the content needed normally we

00:17:36,080 --> 00:17:42,880
we know that menus taxonomies meta tags

00:17:39,760 --> 00:17:44,559
they need so many times like in a home

00:17:42,880 --> 00:17:48,880
page

00:17:44,559 --> 00:17:48,880
when you use many different contents

00:17:49,120 --> 00:17:56,559
we build the json specifically for those

00:17:54,080 --> 00:17:56,559
contents

00:17:59,440 --> 00:18:07,600
so we come back here

00:18:03,520 --> 00:18:10,080
okay so this is how we done

00:18:07,600 --> 00:18:11,360
drupal with the static suite modules and

00:18:10,080 --> 00:18:14,480
graph12

00:18:11,360 --> 00:18:19,760
exports any json that it can't export

00:18:14,480 --> 00:18:21,760
taking account of meta tags content

00:18:19,760 --> 00:18:23,760
menus are also exported because there

00:18:21,760 --> 00:18:28,640
are a content right now

00:18:23,760 --> 00:18:31,600
and we generate every single json file

00:18:28,640 --> 00:18:32,880
we then launch a trigger like a with a

00:18:31,600 --> 00:18:35,919
pipeline

00:18:32,880 --> 00:18:39,360
or a github action or if it's in the

00:18:35,919 --> 00:18:42,720
in the same server you can just land and

00:18:39,360 --> 00:18:45,760
a shell command to build

00:18:42,720 --> 00:18:49,440
all the content you need

00:18:45,760 --> 00:18:51,360
when we were

00:18:49,440 --> 00:18:53,520
thinking that we will need an

00:18:51,360 --> 00:18:56,799
incremental build system

00:18:53,520 --> 00:19:01,280
but with the benchmarking we see

00:18:56,799 --> 00:19:04,559
here uh we think it's

00:19:01,280 --> 00:19:06,320
we don't need it simply because it's too

00:19:04,559 --> 00:19:10,160
too fast

00:19:06,320 --> 00:19:13,520
to take account of

00:19:10,160 --> 00:19:13,520
building juice what you need

00:19:17,679 --> 00:19:23,360
that we have like you see

00:19:21,039 --> 00:19:23,360
here

00:19:30,290 --> 00:19:35,120
[Music]

00:19:32,640 --> 00:19:36,840
that it's always not always but more or

00:19:35,120 --> 00:19:39,840
less the same

00:19:36,840 --> 00:19:39,840
so

00:19:40,960 --> 00:19:50,400
okay taking that in account

00:19:46,080 --> 00:19:54,320
the whole building process

00:19:50,400 --> 00:19:54,320
it's like 200 seconds

00:19:55,679 --> 00:20:01,600
like you see it scales very very well

00:19:58,799 --> 00:20:01,600
so at the end

00:20:04,840 --> 00:20:10,640
whoops this is how we don't

00:20:07,520 --> 00:20:13,679
have it how we done

00:20:10,640 --> 00:20:16,559
and we have a business

00:20:13,679 --> 00:20:18,400
server where and the small drupal

00:20:16,559 --> 00:20:20,640
back-office server like this um

00:20:18,400 --> 00:20:21,760
where uh editors from many different

00:20:20,640 --> 00:20:27,200
countries

00:20:21,760 --> 00:20:30,320
and edit content and publish content

00:20:27,200 --> 00:20:33,520
and we use mostly in

00:20:30,320 --> 00:20:37,120
for images for

00:20:33,520 --> 00:20:41,280
searches and for the build itself

00:20:37,120 --> 00:20:44,799
we we use amazon services

00:20:41,280 --> 00:20:44,799
and the cost

00:20:45,919 --> 00:20:51,679
it's 95 percent cheaper to build things

00:20:49,360 --> 00:20:55,679
like this

00:20:51,679 --> 00:21:00,000
so in a nutshell this is

00:20:55,679 --> 00:21:03,280
how we do it as deco we are shifting

00:21:00,000 --> 00:21:07,679
to this model

00:21:03,280 --> 00:21:11,600
and we are using this um

00:21:07,679 --> 00:21:13,600
this generic solution because uh

00:21:11,600 --> 00:21:15,360
from the time we started developing

00:21:13,600 --> 00:21:18,400
drupal static suite

00:21:15,360 --> 00:21:21,360
and and making it

00:21:18,400 --> 00:21:23,200
to go to production because this is

00:21:21,360 --> 00:21:26,720
already in production

00:21:23,200 --> 00:21:28,080
we cannot i cannot say the exact name of

00:21:26,720 --> 00:21:31,280
the company

00:21:28,080 --> 00:21:34,320
but um it's a

00:21:31,280 --> 00:21:39,039
publishing editorial with some

00:21:34,320 --> 00:21:42,559
we have more than 40 in 40 countries

00:21:39,039 --> 00:21:45,760
so we can't say that it works

00:21:42,559 --> 00:21:48,880
at least for us okay and in from

00:21:45,760 --> 00:21:50,640
the time we started to now we have we

00:21:48,880 --> 00:21:53,520
are thinking

00:21:50,640 --> 00:21:56,559
if we can fit it in every project no

00:21:53,520 --> 00:22:00,480
what's the use case the ideal use case

00:21:56,559 --> 00:22:03,919
for for this sheet if you ask me

00:22:00,480 --> 00:22:06,880
we can use it for everything a

00:22:03,919 --> 00:22:09,280
because the development experience is

00:22:06,880 --> 00:22:12,400
it's amazing

00:22:09,280 --> 00:22:15,840
the anti-editorial experiences are

00:22:12,400 --> 00:22:16,880
editorial so it's it's very nice we use

00:22:15,840 --> 00:22:20,799
drupal

00:22:16,880 --> 00:22:22,880
for the best thing can do it so

00:22:20,799 --> 00:22:24,240
in our case we think that it's a console

00:22:22,880 --> 00:22:27,760
reverse story

00:22:24,240 --> 00:22:30,880
so um the valid shapes can

00:22:27,760 --> 00:22:31,280
manage content export it in a normalized

00:22:30,880 --> 00:22:34,320
way

00:22:31,280 --> 00:22:38,320
like json and you can consume it

00:22:34,320 --> 00:22:38,320
in in any way you like it

00:22:39,520 --> 00:22:45,760
so more or less

00:22:42,720 --> 00:22:50,400
this is i think

00:22:45,760 --> 00:22:50,400
i'm going too fast sorry

00:22:50,799 --> 00:22:55,840
any questions

00:22:57,679 --> 00:23:00,400
let's see

00:23:03,520 --> 00:23:07,440
okay i'm reading the questions

00:23:07,520 --> 00:23:09,840
here

00:23:12,559 --> 00:23:23,840
i'm gonna read it sorry

00:23:25,520 --> 00:23:29,840
okay hey start from the beginning

00:23:30,000 --> 00:23:37,840
yes and i can show you

00:23:33,919 --> 00:23:37,840
maybe let me see

00:23:49,279 --> 00:23:52,960
okay let's start

00:24:02,840 --> 00:24:07,200
sorry

00:24:04,960 --> 00:24:07,200
okay

00:24:08,240 --> 00:24:18,159
sorry i am having issues

00:24:11,520 --> 00:24:21,760
with the skin

00:24:18,159 --> 00:24:24,159
okay like this so now i can

00:24:21,760 --> 00:24:24,159
scroll

00:24:26,480 --> 00:24:32,640
okay can you share sites

00:24:30,000 --> 00:24:35,039
that are using this platform i'm sorry i

00:24:32,640 --> 00:24:35,039
cannot

00:24:36,720 --> 00:24:41,600
i cannot do it because the clients we

00:24:39,520 --> 00:24:41,600
are

00:24:42,880 --> 00:24:51,039
the clients uh asked to be

00:24:46,000 --> 00:24:53,760
confidential so no i cannot show

00:24:51,039 --> 00:24:54,240
so much to it this metal great but

00:24:53,760 --> 00:24:58,159
there's

00:24:54,240 --> 00:25:01,360
so much to it

00:24:58,159 --> 00:25:04,960
what would i mean okay a

00:25:01,360 --> 00:25:07,840
we leverage for development this um

00:25:04,960 --> 00:25:08,880
this solution we take leverage or our

00:25:07,840 --> 00:25:12,320
experience

00:25:08,880 --> 00:25:16,000
we made many prototypes with gatsby

00:25:12,320 --> 00:25:18,240
and we studied each piece of the

00:25:16,000 --> 00:25:21,860
technology

00:25:18,240 --> 00:25:24,240
separately so um

00:25:21,860 --> 00:25:27,440
[Music]

00:25:24,240 --> 00:25:28,400
we we think that gatsby has a very very

00:25:27,440 --> 00:25:32,240
good

00:25:28,400 --> 00:25:36,320
documentation and drupal has also too

00:25:32,240 --> 00:25:40,840
so that's where that was our

00:25:36,320 --> 00:25:43,039
our resource our research

00:25:40,840 --> 00:25:44,799
platform

00:25:43,039 --> 00:25:46,320
okay can you show a little bit more

00:25:44,799 --> 00:25:48,880
about this ci

00:25:46,320 --> 00:25:49,840
gatsby workflow pipelines how often is

00:25:48,880 --> 00:25:53,120
birmingham trigger

00:25:49,840 --> 00:25:54,480
okay the pipeline is triggered every

00:25:53,120 --> 00:25:57,460
time the content

00:25:54,480 --> 00:25:59,120
changes so when an editor

00:25:57,460 --> 00:26:03,039
[Music]

00:25:59,120 --> 00:26:07,360
when an editor sorry when an editor's

00:26:03,039 --> 00:26:10,080
a a published node or changes a node

00:26:07,360 --> 00:26:11,200
the pipeline is triggered because at the

00:26:10,080 --> 00:26:14,400
time at this time

00:26:11,200 --> 00:26:17,200
we generate every single json

00:26:14,400 --> 00:26:18,320
that this content need and also the

00:26:17,200 --> 00:26:22,080
derived

00:26:18,320 --> 00:26:25,279
for example a home page or a list view

00:26:22,080 --> 00:26:27,360
or anything that uses this content

00:26:25,279 --> 00:26:29,840
is generated and the pipeline is

00:26:27,360 --> 00:26:29,840
triggered

00:26:33,840 --> 00:26:38,559
okay what happens with contingency

00:26:36,840 --> 00:26:41,760
regeneration

00:26:38,559 --> 00:26:42,400
when you have an organization with 50 or

00:26:41,760 --> 00:26:45,279
more

00:26:42,400 --> 00:26:47,520
that is dating content all the time and

00:26:45,279 --> 00:26:53,840
quick succession

00:26:47,520 --> 00:26:53,840
they will establish another solution

00:26:54,320 --> 00:26:57,440
we use pipeline so we have concurrent

00:26:56,400 --> 00:27:00,559
builds

00:26:57,440 --> 00:27:00,559
so every time

00:27:00,880 --> 00:27:07,679
i think in our testing

00:27:04,480 --> 00:27:09,200
it's more or less than the number of

00:27:07,679 --> 00:27:12,559
editors

00:27:09,200 --> 00:27:16,640
so right now when

00:27:12,559 --> 00:27:20,799
we we think that it's okay when you

00:27:16,640 --> 00:27:24,080
we have a built a semaphore for the

00:27:20,799 --> 00:27:26,559
for when you have um the

00:27:24,080 --> 00:27:28,880
drupal repository control repository and

00:27:26,559 --> 00:27:30,290
the build system in the same machine

00:27:28,880 --> 00:27:32,080
so you

00:27:30,290 --> 00:27:35,120
[Music]

00:27:32,080 --> 00:27:39,039
have a q system so this q system

00:27:35,120 --> 00:27:42,159
and the semaphore is red

00:27:39,039 --> 00:27:46,000
like to say in a way and

00:27:42,159 --> 00:27:50,480
the green weights and yes

00:27:46,000 --> 00:27:53,840
in this case for having a lot of editors

00:27:50,480 --> 00:27:57,279
uh it's really need you really need a

00:27:53,840 --> 00:27:57,279
a cloud building service

00:27:59,760 --> 00:28:03,440
can you explain how to get started when

00:28:02,240 --> 00:28:06,480
integrating

00:28:03,440 --> 00:28:10,320
gas with your model uh you have to

00:28:06,480 --> 00:28:13,840
want um midfield for us it's a

00:28:10,320 --> 00:28:15,919
a good thing because we have

00:28:13,840 --> 00:28:16,880
already teams developing react

00:28:15,919 --> 00:28:19,440
applications

00:28:16,880 --> 00:28:20,559
and we have teams developing drupal

00:28:19,440 --> 00:28:24,640
applications

00:28:20,559 --> 00:28:25,920
so a i think the best way to start

00:28:24,640 --> 00:28:27,679
is um

00:28:25,920 --> 00:28:31,120
[Music]

00:28:27,679 --> 00:28:34,560
to make the starters of

00:28:31,120 --> 00:28:35,760
gatsby to understand um

00:28:34,560 --> 00:28:45,840
[Music]

00:28:35,760 --> 00:28:45,840
okay listen sorry

00:28:52,080 --> 00:28:59,440
and okay nothing slides

00:28:55,279 --> 00:29:04,880
sorry and so the the best way to

00:28:59,440 --> 00:29:04,880
start it's a learning a little bit so uh

00:29:05,279 --> 00:29:09,520
just a little bit okay but i think it's

00:29:08,320 --> 00:29:13,840
better to

00:29:09,520 --> 00:29:13,840
to understand how gatsby works

00:29:14,159 --> 00:29:21,520
to take the best way you can

00:29:18,159 --> 00:29:23,919
er obviously knowing react is it's very

00:29:21,520 --> 00:29:27,520
important

00:29:23,919 --> 00:29:30,080
so um i think the

00:29:27,520 --> 00:29:31,120
the best way to to start integrating

00:29:30,080 --> 00:29:35,360
gets me

00:29:31,120 --> 00:29:38,559
a it's too you can use gatsby

00:29:35,360 --> 00:29:39,679
but it works with any static side

00:29:38,559 --> 00:29:43,120
generator

00:29:39,679 --> 00:29:45,440
so um the

00:29:43,120 --> 00:29:46,559
i think the best thing to do for

00:29:45,440 --> 00:29:49,760
starting with this

00:29:46,559 --> 00:29:53,520
is understanding the hydrate how to

00:29:49,760 --> 00:29:58,000
hydrate or components or patches

00:29:53,520 --> 00:30:01,840
and and what are the best ways for you

00:29:58,000 --> 00:30:01,840
to make these things and

00:30:02,240 --> 00:30:05,760
okay how do you handle premium draft

00:30:05,120 --> 00:30:08,000
content

00:30:05,760 --> 00:30:10,159
is just another gathering pipeline a

00:30:08,000 --> 00:30:23,840
standing slang instance or something

00:30:10,159 --> 00:30:23,840
okay for uh i try to do

00:30:23,900 --> 00:30:26,999
[Music]

00:30:27,760 --> 00:30:32,559
okay i think you can see it a we take a

00:30:30,799 --> 00:30:36,399
leverage subject well for

00:30:32,559 --> 00:30:39,440
for our preview so

00:30:36,399 --> 00:30:41,600
we can we did this little model

00:30:39,440 --> 00:30:42,559
to help us with everything for the

00:30:41,600 --> 00:30:45,919
preview

00:30:42,559 --> 00:30:48,960
so we can leverage some graphql to get

00:30:45,919 --> 00:30:53,440
to taking a uuid and

00:30:48,960 --> 00:30:53,440
so um we just

00:30:53,679 --> 00:30:59,440
taking a we build the exact page

00:30:57,279 --> 00:31:00,320
with the same builder and the same code

00:30:59,440 --> 00:31:04,720
in the

00:31:00,320 --> 00:31:07,919
in the front and side so we can in

00:31:04,720 --> 00:31:14,080
in real time more or less we can

00:31:07,919 --> 00:31:14,080
uh render the preview in gatsby

00:31:14,159 --> 00:31:20,240
and this is the way we do it it's like

00:31:17,760 --> 00:31:21,279
more or less custom solution for for

00:31:20,240 --> 00:31:24,240
gatsby

00:31:21,279 --> 00:31:24,559
but um if you respect the contrast of

00:31:24,240 --> 00:31:27,519
the

00:31:24,559 --> 00:31:28,000
content in this case you can use it for

00:31:27,519 --> 00:31:33,840
any

00:31:28,000 --> 00:31:33,840
static site generator

00:31:34,000 --> 00:31:40,720
um do you have

00:31:37,600 --> 00:31:47,279
any documentation for this

00:31:40,720 --> 00:31:52,559
where needs uh okay it's like

00:31:47,279 --> 00:31:55,279
static sweep as you can see

00:31:52,559 --> 00:31:57,039
we are making it it's there's a big

00:31:55,279 --> 00:32:00,080
disclaimer for

00:31:57,039 --> 00:32:02,480
for the coming for the alpha stage uh

00:32:00,080 --> 00:32:04,960
we can say that we are using in a

00:32:02,480 --> 00:32:09,120
production site environment so

00:32:04,960 --> 00:32:12,799
this way it worked for us but i i

00:32:09,120 --> 00:32:14,159
we have made many custom models for air

00:32:12,799 --> 00:32:17,840
for the side

00:32:14,159 --> 00:32:18,399
so for example and for the little parts

00:32:17,840 --> 00:32:22,159
on the

00:32:18,399 --> 00:32:22,159
or the different parts so

00:32:22,240 --> 00:32:28,320
um this is the

00:32:25,360 --> 00:32:31,360
at least right now is a the

00:32:28,320 --> 00:32:31,360
documentation we have

00:32:32,720 --> 00:32:36,559
how do you evaluate the difference

00:32:34,640 --> 00:32:39,440
between the budget of developing

00:32:36,559 --> 00:32:40,640
a drupal monolithic website compared to

00:32:39,440 --> 00:32:43,600
the cockpit approach

00:32:40,640 --> 00:32:43,600
with gatsby

00:32:44,880 --> 00:32:50,399
so in our case

00:32:47,800 --> 00:32:52,960
[Music]

00:32:50,399 --> 00:32:54,640
uh average so i can think have you

00:32:52,960 --> 00:32:55,519
valued the difference between the budget

00:32:54,640 --> 00:32:59,120
of the

00:32:55,519 --> 00:33:02,559
monolithic website comparison um

00:32:59,120 --> 00:33:05,919
obviously the budget

00:33:02,559 --> 00:33:10,159
in our case uh

00:33:05,919 --> 00:33:13,200
it's i don't think it's higher or

00:33:10,159 --> 00:33:15,120
less expensive

00:33:13,200 --> 00:33:16,399
for us it's a good thing like i said

00:33:15,120 --> 00:33:19,840
before that

00:33:16,399 --> 00:33:22,240
we can take advantage of having one team

00:33:19,840 --> 00:33:24,880
responsible for the back end and the

00:33:22,240 --> 00:33:25,440
content exporting and we have another

00:33:24,880 --> 00:33:28,880
team

00:33:25,440 --> 00:33:31,919
or as many teams as we need to make the

00:33:28,880 --> 00:33:31,919
front-end development

00:33:32,720 --> 00:33:35,600
in our experience

00:33:35,760 --> 00:33:42,559
it's more difficult to to find the

00:33:39,519 --> 00:33:47,039
good drupal developers and

00:33:42,559 --> 00:33:49,279
react developers and quantity are

00:33:47,039 --> 00:33:51,840
higher i don't know in quality because

00:33:49,279 --> 00:33:54,880
it's not my things really

00:33:51,840 --> 00:33:58,640
so i think i cannot answer

00:33:54,880 --> 00:33:58,640
exactly this um

00:33:58,960 --> 00:34:04,720
this question how will you

00:34:02,320 --> 00:34:07,279
allow the editors to preview the content

00:34:04,720 --> 00:34:10,560
in a website template while it's not

00:34:07,279 --> 00:34:13,040
 publicly okay

00:34:10,560 --> 00:34:14,240
like i said before we can use another

00:34:13,040 --> 00:34:16,560
preview

00:34:14,240 --> 00:34:18,639
that comes with drupal in this case we

00:34:16,560 --> 00:34:21,040
use graphql so the

00:34:18,639 --> 00:34:21,919
we can use the same pipeline of the same

00:34:21,040 --> 00:34:24,720
process

00:34:21,919 --> 00:34:27,040
to make the preview and this is why we

00:34:24,720 --> 00:34:27,040
do it

00:34:31,200 --> 00:34:37,760
how long will it take to build

00:34:34,960 --> 00:34:38,399
1k patches if you were using a standard

00:34:37,760 --> 00:34:42,159
gatsby

00:34:38,399 --> 00:34:42,159
method of importing from drupal

00:34:43,280 --> 00:34:50,720
a i don't have the numbers

00:34:47,040 --> 00:34:53,839
but they are very very high

00:34:50,720 --> 00:34:56,720
because they depend on doing

00:34:53,839 --> 00:34:59,599
every request you need for every piece

00:34:56,720 --> 00:34:59,599
of content so

00:35:00,839 --> 00:35:04,720
um

00:35:02,079 --> 00:35:06,000
a it's the way to sign json ap there is

00:35:04,720 --> 00:35:08,880
an apa

00:35:06,000 --> 00:35:10,800
i think it's it's a very good model and

00:35:08,880 --> 00:35:15,520
a very good implementation

00:35:10,800 --> 00:35:18,720
but in our case for

00:35:15,520 --> 00:35:22,560
small sites it was i think

00:35:18,720 --> 00:35:23,520
the trials was um half an hour more or

00:35:22,560 --> 00:35:27,760
less to just

00:35:23,520 --> 00:35:31,680
build things and it don't scale

00:35:27,760 --> 00:35:32,000
just because it do do an http request

00:35:31,680 --> 00:35:35,040
for

00:35:32,000 --> 00:35:35,040
every piece of content

00:35:37,520 --> 00:35:41,440
is there a way to trigger full build by

00:35:39,440 --> 00:35:43,119
using webhook we are only able to

00:35:41,440 --> 00:35:47,359
trigger full bits by using

00:35:43,119 --> 00:35:47,359
gatsby dashboard so

00:35:47,760 --> 00:35:52,880
we have to reduce pipelines a bit bucket

00:35:50,880 --> 00:35:55,200
pipelines in this case

00:35:52,880 --> 00:35:57,680
to to trigger the bills and to make the

00:35:55,200 --> 00:36:03,119
build so

00:35:57,680 --> 00:36:07,760
i think yes you can as a trigger method

00:36:03,119 --> 00:36:07,760
and to launch the build you can just

00:36:08,640 --> 00:36:17,520
we can use a webhook why not

00:36:12,400 --> 00:36:20,800
what could rupal do to make this easier

00:36:17,520 --> 00:36:23,920
very nice question i think drupal is

00:36:20,800 --> 00:36:27,520
shifting all is going

00:36:23,920 --> 00:36:30,880
to be the best control repository

00:36:27,520 --> 00:36:32,079
so i'm happy i and i think it's

00:36:30,880 --> 00:36:36,480
[Music]

00:36:32,079 --> 00:36:36,480
if the when it's going to be a

00:36:37,119 --> 00:36:43,200
maybe making more services or

00:36:40,240 --> 00:36:44,960
the happy first initiative is the most

00:36:43,200 --> 00:36:47,920
important thing i think

00:36:44,960 --> 00:36:47,920
we think that

00:36:48,079 --> 00:36:52,480
taking drupal advantage for the lack of

00:36:51,280 --> 00:36:54,960
the couplet

00:36:52,480 --> 00:36:56,400
this is more like a hybrid because we

00:36:54,960 --> 00:36:58,880
use the drupal's

00:36:56,400 --> 00:36:59,920
back office administration to edit

00:36:58,880 --> 00:37:03,359
content

00:36:59,920 --> 00:37:06,560
and but we don't use the front end so

00:37:03,359 --> 00:37:10,079
everything that goes in the way to

00:37:06,560 --> 00:37:14,079
the the couple drupal uh

00:37:10,079 --> 00:37:14,079
i think it's going to help of course

00:37:14,240 --> 00:37:17,520
you were talking about incrementally do

00:37:16,240 --> 00:37:19,520
you have a very complete plan for

00:37:17,520 --> 00:37:23,040
implementation

00:37:19,520 --> 00:37:27,359
or how cool this zone in general

00:37:23,040 --> 00:37:30,160
a we have tried many things it's in the

00:37:27,359 --> 00:37:31,230
gatsby it's trying to do next is trying

00:37:30,160 --> 00:37:32,640
to do it so

00:37:31,230 --> 00:37:36,400
[Music]

00:37:32,640 --> 00:37:39,839
we don't have an exa plan because

00:37:36,400 --> 00:37:43,920
we are managing um full site

00:37:39,839 --> 00:37:47,920
full full build full bills

00:37:43,920 --> 00:37:51,119
of 1k patches in four minutes so for us

00:37:47,920 --> 00:37:51,839
incremental bills it's not exactly the

00:37:51,119 --> 00:37:55,839
most

00:37:51,839 --> 00:37:59,680
important thing i as you can see here

00:37:55,839 --> 00:37:59,680
we have coming features

00:38:00,720 --> 00:38:05,839
and that's our priority right now

00:38:07,440 --> 00:38:13,680
can this approach 100 million of

00:38:10,560 --> 00:38:16,880
pages notes yes it can it

00:38:13,680 --> 00:38:20,720
scales very very well uh

00:38:16,880 --> 00:38:24,320
obviously one million pages

00:38:20,720 --> 00:38:27,280
it's look like 10ks i think it's uh

00:38:24,320 --> 00:38:29,040
if you do the math it's half an hour

00:38:27,280 --> 00:38:32,160
more or less

00:38:29,040 --> 00:38:36,960
uh it's maybe not good enough for you

00:38:32,160 --> 00:38:36,960
but for us it's okay

00:38:40,320 --> 00:38:47,839
more questions

00:38:58,839 --> 00:39:01,839
okay

00:39:07,700 --> 00:39:11,590
[Music]

00:39:12,839 --> 00:39:16,560
okay

00:39:14,240 --> 00:39:17,839
okay where did you control the frontal

00:39:16,560 --> 00:39:20,480
layout of the

00:39:17,839 --> 00:39:22,880
final gateway page so you pass from

00:39:20,480 --> 00:39:26,960
drawbar through graphql the layout

00:39:22,880 --> 00:39:30,240
of the page okay we take leverage of the

00:39:26,960 --> 00:39:34,640
paragraph paragraph module so

00:39:30,240 --> 00:39:36,640
we export the paragraph order the type

00:39:34,640 --> 00:39:39,680
and all the fields needed

00:39:36,640 --> 00:39:42,960
and for the

00:39:39,680 --> 00:39:43,359
for the layout to build and the rest of

00:39:42,960 --> 00:39:46,560
the

00:39:43,359 --> 00:39:49,839
layout is build and react so

00:39:46,560 --> 00:39:52,240
right now for editors

00:39:49,839 --> 00:39:53,440
we only have the capabilities of a

00:39:52,240 --> 00:39:56,560
paragraph

00:39:53,440 --> 00:39:59,760
for now for us it's good enough

00:39:56,560 --> 00:40:03,119
it's good enough we love paragraphs and

00:39:59,760 --> 00:40:06,400
um we use um

00:40:03,119 --> 00:40:08,000
in a component language which is like a

00:40:06,400 --> 00:40:11,440
factory component

00:40:08,000 --> 00:40:14,800
so we can um

00:40:11,440 --> 00:40:17,920
render every paragraph that's in

00:40:14,800 --> 00:40:18,640
indigestion content so we guess we

00:40:17,920 --> 00:40:22,000
explain

00:40:18,640 --> 00:40:25,040
in a way we export the layout

00:40:22,000 --> 00:40:28,480
via paragraphs and

00:40:25,040 --> 00:40:31,280
it's that in our case

00:40:28,480 --> 00:40:31,280
it's good enough

00:40:32,480 --> 00:40:39,839
yes through graphql

00:40:40,319 --> 00:40:53,839
any more questions

00:41:01,680 --> 00:41:07,599
so we how long did it take

00:41:05,040 --> 00:41:08,480
you to build this and make the switch to

00:41:07,599 --> 00:41:13,280
gatsby

00:41:08,480 --> 00:41:16,240
okay and we started the solution with a

00:41:13,280 --> 00:41:19,040
custom or like i will i like to say like

00:41:16,240 --> 00:41:21,839
an artisan solution

00:41:19,040 --> 00:41:23,200
we made the everything especially for

00:41:21,839 --> 00:41:27,119
the project

00:41:23,200 --> 00:41:30,160
but um we think that

00:41:27,119 --> 00:41:32,480
that this could be exported to

00:41:30,160 --> 00:41:33,520
many projects now we think that it is

00:41:32,480 --> 00:41:37,040
portable for

00:41:33,520 --> 00:41:40,000
almost every project we do and

00:41:37,040 --> 00:41:41,200
we were already developing in gatsby and

00:41:40,000 --> 00:41:44,800
drupal

00:41:41,200 --> 00:41:48,400
so in

00:41:44,800 --> 00:41:52,319
a way with the last thing

00:41:48,400 --> 00:41:55,359
after doing the custom specific way

00:41:52,319 --> 00:41:58,560
we extracted many many parts and

00:41:55,359 --> 00:42:02,720
and this is where a static suite become

00:41:58,560 --> 00:42:06,000
a drupal module so we can use it in

00:42:02,720 --> 00:42:06,000
in many other projects

00:42:08,720 --> 00:42:13,200
and do you feel the need for drupal use

00:42:12,560 --> 00:42:16,400
at all

00:42:13,200 --> 00:42:19,760
yes maybe it's not a need

00:42:16,400 --> 00:42:20,880
but it can be a quality of life

00:42:19,760 --> 00:42:23,119
improvement

00:42:20,880 --> 00:42:24,800
because if you have to write a very

00:42:23,119 --> 00:42:28,400
complex

00:42:24,800 --> 00:42:31,920
sql queries or you have to access

00:42:28,400 --> 00:42:35,920
many related content

00:42:31,920 --> 00:42:39,040
i think we think drupal

00:42:35,920 --> 00:42:40,560
it's a it's a very good model and very

00:42:39,040 --> 00:42:44,240
good

00:42:40,560 --> 00:42:48,319
and easy easy to maintain and

00:42:44,240 --> 00:42:51,359
i think depending on your skills

00:42:48,319 --> 00:42:53,520
uh maybe i prefer like a as a drupal

00:42:51,359 --> 00:42:54,000
developer or back-end developer i prefer

00:42:53,520 --> 00:42:57,119
to

00:42:54,000 --> 00:42:58,240
integrate my manager service to make my

00:42:57,119 --> 00:43:01,760
queries

00:42:58,240 --> 00:43:03,920
but we have you can be a site builder

00:43:01,760 --> 00:43:06,960
and you don't want to leverage on

00:43:03,920 --> 00:43:08,000
writing all the queries so you can

00:43:06,960 --> 00:43:10,880
export the

00:43:08,000 --> 00:43:11,280
list views or everything you need with

00:43:10,880 --> 00:43:13,520
your

00:43:11,280 --> 00:43:13,520
use

00:43:16,960 --> 00:43:27,839
however we plan to integrate

00:43:20,240 --> 00:43:27,839
drupal with local views with gasping

00:43:33,359 --> 00:43:40,319
okay i want to take the last

00:43:36,640 --> 00:43:43,040
minute to thanks our

00:43:40,319 --> 00:43:45,119
like we like to say our gemstock

00:43:43,040 --> 00:43:48,560
architect

00:43:45,119 --> 00:43:52,839
is collaborating silva and

00:43:48,560 --> 00:43:57,599
he's the mind behind all the research

00:43:52,839 --> 00:44:01,599
on and with the help of his team

00:43:57,599 --> 00:44:02,800
has built uh mostly the static suite

00:44:01,599 --> 00:44:06,720
project

00:44:02,800 --> 00:44:06,720
so thanks alberto

00:44:07,440 --> 00:44:11,760
if there's no more questions

00:44:12,640 --> 00:44:15,839
thank you all for being here

00:44:14,580 --> 00:44:18,800
[Music]

00:44:15,839 --> 00:44:19,599
i'm sorry for the many inconvenient

00:44:18,800 --> 00:44:22,000
things

00:44:19,599 --> 00:44:24,720
the first time for me in this format

00:44:22,000 --> 00:44:28,240
hope you like it

00:44:24,720 --> 00:44:31,599
don't hesitate to call us reach us for

00:44:28,240 --> 00:44:36,079
for help for everything you need related

00:44:31,599 --> 00:44:39,280
to the static suit

00:44:36,079 --> 00:44:39,280

YouTube URL: https://www.youtube.com/watch?v=KgrDvKbyPhk


