Title: MAKERS & BUILDERS - An overview of Drupal front-end component integration methods   DrupalCon Eu...
Publication date: 2021-01-13
Playlist: DrupalCon Europe 2020
Description: 
	Since the release of Drupal 8, great strides have been made to develop a component-based theming workflow that takes advantage of the best that Twig has to offer and also plays nice with component libraries and design systems.
Captions: 
	00:00:04,059 --> 00:00:09,889
[Music]

00:00:13,040 --> 00:00:17,680
all right

00:00:13,519 --> 00:00:20,960
i am uh seeing uh people pop into the

00:00:17,680 --> 00:00:24,080
discussion uh the chat so

00:00:20,960 --> 00:00:26,720
i suppose we'll get started get moving

00:00:24,080 --> 00:00:27,599
uh thanks everybody this is uh an

00:00:26,720 --> 00:00:29,279
overview

00:00:27,599 --> 00:00:31,199
of drupal front-end component

00:00:29,279 --> 00:00:34,320
integration methods

00:00:31,199 --> 00:00:38,680
and i'm brian perry there's a link there

00:00:34,320 --> 00:00:41,760
to bitlybit.ly

00:00:38,680 --> 00:00:44,000
component-int and that's going to link

00:00:41,760 --> 00:00:46,079
you to a github repository that has a

00:00:44,000 --> 00:00:47,600
little sandbox

00:00:46,079 --> 00:00:50,160
for the examples that we'll be going

00:00:47,600 --> 00:00:50,960
through along with the slides and also

00:00:50,160 --> 00:00:53,039
links to

00:00:50,960 --> 00:00:54,239
slides and videos for past versions of

00:00:53,039 --> 00:00:57,680
this talk

00:00:54,239 --> 00:01:00,800
so yeah thanks for everybody

00:00:57,680 --> 00:01:04,080
um dropping in on this it's uh

00:01:00,800 --> 00:01:07,040
early uh here where i am um

00:01:04,080 --> 00:01:07,360
but i think i'm awake enough to do this

00:01:07,040 --> 00:01:10,560
so

00:01:07,360 --> 00:01:12,080
uh i'm brian perry and i am a front-end

00:01:10,560 --> 00:01:15,119
developer at a company called

00:01:12,080 --> 00:01:18,240
bounties and i live uh in the

00:01:15,119 --> 00:01:21,119
chicago suburbs in the united states

00:01:18,240 --> 00:01:22,560
uh it's 6 30 in the morning here um but

00:01:21,119 --> 00:01:25,040
i got a cup of coffee

00:01:22,560 --> 00:01:26,960
uh i'm a lover of all things component

00:01:25,040 --> 00:01:27,840
driven and component based so building

00:01:26,960 --> 00:01:31,759
with

00:01:27,840 --> 00:01:33,600
components in drupal and

00:01:31,759 --> 00:01:35,040
design systems and tools like pattern

00:01:33,600 --> 00:01:37,360
lab and storybook

00:01:35,040 --> 00:01:38,640
and then increasingly building with

00:01:37,360 --> 00:01:40,720
javascript

00:01:38,640 --> 00:01:42,479
component based frameworks like react

00:01:40,720 --> 00:01:45,600
and also increasingly interested in

00:01:42,479 --> 00:01:48,560
web components and i'm also a

00:01:45,600 --> 00:01:50,000
a big nintendo fan um so if you're

00:01:48,560 --> 00:01:52,159
playing any cool games on your

00:01:50,000 --> 00:01:54,240
nintendo switch love to talk about that

00:01:52,159 --> 00:01:57,040
i just started playing hades

00:01:54,240 --> 00:01:58,000
uh which is a really cool roguelike game

00:01:57,040 --> 00:01:59,840
i'm enjoying that

00:01:58,000 --> 00:02:01,119
and and still keeping up with animal

00:01:59,840 --> 00:02:02,240
crossing

00:02:01,119 --> 00:02:04,159
looking forward to decorating for the

00:02:02,240 --> 00:02:06,000
holiday season and uh

00:02:04,159 --> 00:02:07,680
i'm also online in a bunch of different

00:02:06,000 --> 00:02:11,119
places so um

00:02:07,680 --> 00:02:11,119
would love to internet with you

00:02:15,440 --> 00:02:19,200
all right um so as i mentioned i work

00:02:17,440 --> 00:02:19,680
for a company called the bounties we

00:02:19,200 --> 00:02:23,040
have

00:02:19,680 --> 00:02:24,800
offices throughout north america

00:02:23,040 --> 00:02:26,480
drupal is one of a handful of things

00:02:24,800 --> 00:02:28,080
that we do but i primarily work within

00:02:26,480 --> 00:02:29,760
the drupal practice

00:02:28,080 --> 00:02:31,680
learn from a bunch of great folks on a

00:02:29,760 --> 00:02:33,519
day-to-day basis

00:02:31,680 --> 00:02:35,200
and we're often hiring so if you're

00:02:33,519 --> 00:02:36,480
looking to do great drupal work get in

00:02:35,200 --> 00:02:38,400
touch and if you're looking to have

00:02:36,480 --> 00:02:39,440
great drupal work done

00:02:38,400 --> 00:02:42,239
i can also get you in touch with

00:02:39,440 --> 00:02:42,480
somebody and thanks as always to bounty

00:02:42,239 --> 00:02:44,800
us

00:02:42,480 --> 00:02:46,160
for supporting me doing these talks and

00:02:44,800 --> 00:02:49,360
taking the time to

00:02:46,160 --> 00:02:49,360
participate and contribute

00:02:49,440 --> 00:02:53,599
so uh let's uh dive in and just talk

00:02:51,920 --> 00:02:57,040
about uh components

00:02:53,599 --> 00:02:59,120
at a high level very briefly so um

00:02:57,040 --> 00:03:01,040
not going to spend too much time you

00:02:59,120 --> 00:03:03,200
know selling on the concept of uh

00:03:01,040 --> 00:03:04,159
component-based development um there's

00:03:03,200 --> 00:03:06,720
definitely a lot of

00:03:04,159 --> 00:03:07,680
uh talks and writing on that particular

00:03:06,720 --> 00:03:11,280
topic but

00:03:07,680 --> 00:03:13,519
you know it's the general idea of um

00:03:11,280 --> 00:03:14,640
creating modular and reusable elements

00:03:13,519 --> 00:03:16,840
and building a

00:03:14,640 --> 00:03:18,480
design system rather than a series of

00:03:16,840 --> 00:03:20,400
pages

00:03:18,480 --> 00:03:21,599
so this approach of breaking things down

00:03:20,400 --> 00:03:23,360
to its smaller pieces

00:03:21,599 --> 00:03:24,799
popularized by brad frost's atomic

00:03:23,360 --> 00:03:27,599
design

00:03:24,799 --> 00:03:29,200
it can be used along with a pattern

00:03:27,599 --> 00:03:30,879
library tool for documentation and

00:03:29,200 --> 00:03:32,720
prototyping things like pattern lab and

00:03:30,879 --> 00:03:33,519
storybook but it doesn't necessarily

00:03:32,720 --> 00:03:35,440
have to be

00:03:33,519 --> 00:03:37,040
you can still just take this general

00:03:35,440 --> 00:03:39,040
approach to building

00:03:37,040 --> 00:03:40,239
without using a tool like that and it

00:03:39,040 --> 00:03:41,760
also helps to couple

00:03:40,239 --> 00:03:43,440
front end and back end development in

00:03:41,760 --> 00:03:45,120
some interesting ways in that you can

00:03:43,440 --> 00:03:48,000
build your front end components

00:03:45,120 --> 00:03:48,480
first before things are fully fleshed

00:03:48,000 --> 00:03:51,120
out

00:03:48,480 --> 00:03:51,120
in drupal

00:03:52,159 --> 00:03:56,400
so uh we're just going to basically look

00:03:54,640 --> 00:03:59,360
at one example from a

00:03:56,400 --> 00:04:01,519
bunch of different perspectives today so

00:03:59,360 --> 00:04:05,040
here's our example twig component

00:04:01,519 --> 00:04:07,840
it's um i use the nes.css

00:04:05,040 --> 00:04:08,560
uh library uh which lets us make these

00:04:07,840 --> 00:04:10,640
cool

00:04:08,560 --> 00:04:12,480
like old school nintendo looking uh

00:04:10,640 --> 00:04:14,480
components i wasn't kidding about my

00:04:12,480 --> 00:04:16,160
love for nintendo and

00:04:14,480 --> 00:04:17,600
we're just going to use the their

00:04:16,160 --> 00:04:20,239
container here

00:04:17,600 --> 00:04:21,519
so we have our little container

00:04:20,239 --> 00:04:23,520
component

00:04:21,519 --> 00:04:24,880
and here are the various pieces of it it

00:04:23,520 --> 00:04:27,120
has a title

00:04:24,880 --> 00:04:28,479
a couple of tags a platform and a year

00:04:27,120 --> 00:04:31,759
an image body

00:04:28,479 --> 00:04:31,759
and a cta

00:04:32,000 --> 00:04:36,720
so just kind of stepping through the

00:04:34,000 --> 00:04:39,840
structure of the component itself

00:04:36,720 --> 00:04:42,320
here's a quick look at the markup

00:04:39,840 --> 00:04:44,240
nothing all that complicated here

00:04:42,320 --> 00:04:47,199
there's some wrapping divs that include

00:04:44,240 --> 00:04:47,759
the classes that nes.css needs to

00:04:47,199 --> 00:04:52,160
display

00:04:47,759 --> 00:04:55,600
the container there's some logic

00:04:52,160 --> 00:04:56,320
to only display portions of it depending

00:04:55,600 --> 00:04:58,880
on

00:04:56,320 --> 00:05:00,240
data being available and you know

00:04:58,880 --> 00:05:01,840
obviously the

00:05:00,240 --> 00:05:03,280
the twig variables that we're going to

00:05:01,840 --> 00:05:06,080
be passing

00:05:03,280 --> 00:05:06,080
data into

00:05:06,960 --> 00:05:11,199
and then if you are using a tool like

00:05:09,919 --> 00:05:13,520
pattern lab for example

00:05:11,199 --> 00:05:15,520
the this example i do have a pattern lab

00:05:13,520 --> 00:05:18,720
instance for

00:05:15,520 --> 00:05:22,240
you may have a yaml file or json file

00:05:18,720 --> 00:05:24,880
like this that contains example data for

00:05:22,240 --> 00:05:25,680
your component so this will just allow

00:05:24,880 --> 00:05:28,800
us in

00:05:25,680 --> 00:05:30,479
pattern lab for example to render this

00:05:28,800 --> 00:05:33,280
particular example of the component and

00:05:30,479 --> 00:05:33,280
see what it looks like

00:05:34,080 --> 00:05:39,039
so now we can focus on components in

00:05:37,440 --> 00:05:41,120
drupal

00:05:39,039 --> 00:05:42,160
so throughout this talk i'm just kind of

00:05:41,120 --> 00:05:45,199
kind of going to

00:05:42,160 --> 00:05:47,039
draw a few different dividing lines um

00:05:45,199 --> 00:05:49,520
and the first one is where your

00:05:47,039 --> 00:05:52,320
components live

00:05:49,520 --> 00:05:53,199
so for the sake of this talk i'm going

00:05:52,320 --> 00:05:55,280
to split things

00:05:53,199 --> 00:05:57,199
into standard drupal components and

00:05:55,280 --> 00:05:58,800
integrated drupal components and we'll

00:05:57,199 --> 00:06:01,039
spend more time talking about the

00:05:58,800 --> 00:06:03,199
integrated drupal components but

00:06:01,039 --> 00:06:05,360
um so standard drupal components in this

00:06:03,199 --> 00:06:07,360
case uh live in drupal's default

00:06:05,360 --> 00:06:08,880
template directory

00:06:07,360 --> 00:06:10,479
the templates are exactly where drupal

00:06:08,880 --> 00:06:12,720
would expect them to be

00:06:10,479 --> 00:06:14,319
and because of that it might not require

00:06:12,720 --> 00:06:16,000
much additional effort to get data to

00:06:14,319 --> 00:06:17,919
display in them

00:06:16,000 --> 00:06:19,759
and then integrated drupal components

00:06:17,919 --> 00:06:20,000
the main difference there is that they

00:06:19,759 --> 00:06:22,560
just

00:06:20,000 --> 00:06:24,240
live somewhere other than the default

00:06:22,560 --> 00:06:27,280
templates directory

00:06:24,240 --> 00:06:28,960
so as as a result of that it's going to

00:06:27,280 --> 00:06:29,520
require some amount of additional effort

00:06:28,960 --> 00:06:32,800
to get

00:06:29,520 --> 00:06:35,520
data to display and

00:06:32,800 --> 00:06:37,039
from the perspective of this talk it

00:06:35,520 --> 00:06:38,960
doesn't really matter how

00:06:37,039 --> 00:06:40,880
your integrated components uh are made

00:06:38,960 --> 00:06:42,720
available to your theme they could be

00:06:40,880 --> 00:06:45,199
just in your theme in your code base

00:06:42,720 --> 00:06:47,680
they could be an external dependency

00:06:45,199 --> 00:06:50,160
but the integration process is going to

00:06:47,680 --> 00:06:50,160
be the same

00:06:51,360 --> 00:06:55,759
so briefly talking about standard drupal

00:06:54,800 --> 00:06:57,599
components

00:06:55,759 --> 00:06:59,280
it certainly may be the right approach

00:06:57,599 --> 00:07:01,919
for your team or your

00:06:59,280 --> 00:07:02,800
project and there's nothing wrong with

00:07:01,919 --> 00:07:05,759
that

00:07:02,800 --> 00:07:06,080
uh so here you'd be building with drupal

00:07:05,759 --> 00:07:08,000
and

00:07:06,080 --> 00:07:09,520
you know essentially only drupal in mind

00:07:08,000 --> 00:07:10,960
and taking advantage of things that can

00:07:09,520 --> 00:07:13,599
be easily reused

00:07:10,960 --> 00:07:15,199
in drupal so display modes blocks

00:07:13,599 --> 00:07:18,560
paragraphs if you use paragraphs

00:07:15,199 --> 00:07:19,919
layouts you're potentially going to lose

00:07:18,560 --> 00:07:22,800
out on

00:07:19,919 --> 00:07:24,080
rapid prototyping advantages of using

00:07:22,800 --> 00:07:26,080
you know a separate tool

00:07:24,080 --> 00:07:27,680
you have to stand things up in drupal to

00:07:26,080 --> 00:07:31,039
be able to really see

00:07:27,680 --> 00:07:34,000
what they're going to look like

00:07:31,039 --> 00:07:35,840
so just a quick look at our container

00:07:34,000 --> 00:07:38,720
from the perspective of just a standard

00:07:35,840 --> 00:07:39,919
drupal component so we're going to be

00:07:38,720 --> 00:07:42,560
using a

00:07:39,919 --> 00:07:43,039
teaser view mode to represent this and

00:07:42,560 --> 00:07:46,160
then

00:07:43,039 --> 00:07:48,400
we also have a game uh content type

00:07:46,160 --> 00:07:49,520
with a number of different fields and

00:07:48,400 --> 00:07:51,280
this is how they

00:07:49,520 --> 00:07:53,680
map into the you know essentially the

00:07:51,280 --> 00:07:56,479
slots we have in our component so

00:07:53,680 --> 00:07:58,160
label is the title uh there's content

00:07:56,479 --> 00:08:02,080
field platform

00:07:58,160 --> 00:08:02,080
image body and so on

00:08:03,759 --> 00:08:08,479
so to get things to display as this

00:08:06,800 --> 00:08:11,360
container component

00:08:08,479 --> 00:08:13,840
we're basically creating our own version

00:08:11,360 --> 00:08:13,840
of the

00:08:13,879 --> 00:08:18,560
nodegameteaser.html.twig template

00:08:16,400 --> 00:08:20,080
the template suggestion for that and

00:08:18,560 --> 00:08:24,000
we're just adjusting it

00:08:20,080 --> 00:08:26,879
as we need to render as the container

00:08:24,000 --> 00:08:27,680
so for our classes here a handful of

00:08:26,879 --> 00:08:29,599
these things are

00:08:27,680 --> 00:08:31,199
are things for the default node

00:08:29,599 --> 00:08:34,320
templates but we're also

00:08:31,199 --> 00:08:37,120
adding like our nes container with title

00:08:34,320 --> 00:08:37,120
and is centered

00:08:37,279 --> 00:08:40,320
and then throughout the template we're

00:08:38,800 --> 00:08:42,959
also just adjusting

00:08:40,320 --> 00:08:44,320
the markup in our twig template so that

00:08:42,959 --> 00:08:54,320
it has the right

00:08:44,320 --> 00:08:56,880
structure and adds the necessary classes

00:08:54,320 --> 00:08:57,920
uh so now shifting over to integrated

00:08:56,880 --> 00:09:00,640
drupal components

00:08:57,920 --> 00:09:02,080
and uh the various ways to approach that

00:09:00,640 --> 00:09:03,279
again this is

00:09:02,080 --> 00:09:05,120
building with components that live

00:09:03,279 --> 00:09:08,160
somewhere outside of the default

00:09:05,120 --> 00:09:11,040
templates directory

00:09:08,160 --> 00:09:11,519
um so as i mentioned for this example in

00:09:11,040 --> 00:09:16,080
the

00:09:11,519 --> 00:09:18,160
sandbox we have a pattern lab instance

00:09:16,080 --> 00:09:19,279
so there is this nes components

00:09:18,160 --> 00:09:22,240
directory

00:09:19,279 --> 00:09:23,200
in this custom theme and it follows the

00:09:22,240 --> 00:09:25,440
general

00:09:23,200 --> 00:09:26,480
default pattern lab structure there's a

00:09:25,440 --> 00:09:29,600
source directory

00:09:26,480 --> 00:09:31,680
and subfolders for patterns

00:09:29,600 --> 00:09:33,680
and we have a directory for our

00:09:31,680 --> 00:09:34,320
container component that has the twig

00:09:33,680 --> 00:09:36,560
template

00:09:34,320 --> 00:09:37,920
and the yaml file and we can see what it

00:09:36,560 --> 00:09:40,800
looks like in pattern lab

00:09:37,920 --> 00:09:42,240
examples of our markup and then our

00:09:40,800 --> 00:09:45,760
component with that example

00:09:42,240 --> 00:09:47,440
data so if you're

00:09:45,760 --> 00:09:49,440
taking this approach you'll most likely

00:09:47,440 --> 00:09:50,959
need to use the components module i

00:09:49,440 --> 00:09:54,000
think i saw

00:09:50,959 --> 00:09:54,399
john alvin in the chat who maintains

00:09:54,000 --> 00:09:57,360
this

00:09:54,399 --> 00:09:59,279
and thanks for building something that

00:09:57,360 --> 00:10:00,800
many of these things are all built on

00:09:59,279 --> 00:10:04,800
top of

00:10:00,800 --> 00:10:07,200
but that allows drupal to discover

00:10:04,800 --> 00:10:08,959
um templates that live somewhere outside

00:10:07,200 --> 00:10:11,839
of the default templates directory

00:10:08,959 --> 00:10:13,519
and also allows us to create these twig

00:10:11,839 --> 00:10:14,720
namespaces that we can use to reference

00:10:13,519 --> 00:10:17,440
these things

00:10:14,720 --> 00:10:19,040
so in our theme under this component

00:10:17,440 --> 00:10:22,320
libraries key we just created

00:10:19,040 --> 00:10:22,640
a component namespace that points to

00:10:22,320 --> 00:10:25,120
that

00:10:22,640 --> 00:10:26,800
components directory in our pattern lab

00:10:25,120 --> 00:10:28,480
instance so that lets drupal find it

00:10:26,800 --> 00:10:30,839
and also we can reference it with the at

00:10:28,480 --> 00:10:33,839
components twig namespace which we'll

00:10:30,839 --> 00:10:33,839
see

00:10:34,240 --> 00:10:40,000
so now another kind of

00:10:37,760 --> 00:10:40,880
way to look at this is the integration

00:10:40,000 --> 00:10:42,720
approaches

00:10:40,880 --> 00:10:44,959
which primarily falls into two

00:10:42,720 --> 00:10:48,160
categories mapping data in code

00:10:44,959 --> 00:10:50,240
versus mapping data in the admin ui

00:10:48,160 --> 00:10:51,360
so mapping in code that's going to cover

00:10:50,240 --> 00:10:53,680
things like mapping

00:10:51,360 --> 00:10:56,480
in twig templates or various approaches

00:10:53,680 --> 00:10:58,959
to pre-processing

00:10:56,480 --> 00:11:00,079
this approach from my experience is more

00:10:58,959 --> 00:11:03,600
likely to get out of sync

00:11:00,079 --> 00:11:05,680
with drupal's admin ui so for example um

00:11:03,600 --> 00:11:06,800
it might not reflect what is being

00:11:05,680 --> 00:11:10,079
displayed on the

00:11:06,800 --> 00:11:11,600
uh you know manage display tab and if

00:11:10,079 --> 00:11:13,519
you're not careful also potentially is

00:11:11,600 --> 00:11:16,399
more likely to

00:11:13,519 --> 00:11:18,240
break things like caching or or things

00:11:16,399 --> 00:11:20,240
that drupal depend on if you strip out

00:11:18,240 --> 00:11:22,480
too many things

00:11:20,240 --> 00:11:23,839
so things like you know quick edit or

00:11:22,480 --> 00:11:26,800
layout builder

00:11:23,839 --> 00:11:26,800
there can be problems there

00:11:26,880 --> 00:11:30,079
so alternatively mapping data in the

00:11:28,480 --> 00:11:33,440
admin ui is

00:11:30,079 --> 00:11:36,880
um includes things like the ui patterns

00:11:33,440 --> 00:11:38,800
modules uh drupal layouts

00:11:36,880 --> 00:11:40,160
and also i find this is a little bit

00:11:38,800 --> 00:11:43,519
less likely to disrupt

00:11:40,160 --> 00:11:45,680
drupal functionality but potentially not

00:11:43,519 --> 00:11:46,959
as flexible in that each of these kind

00:11:45,680 --> 00:11:49,519
of have their own conventions that you

00:11:46,959 --> 00:11:49,519
need to follow

00:11:50,959 --> 00:11:54,800
so looking at an example of integrating

00:11:53,680 --> 00:11:56,800
in code

00:11:54,800 --> 00:11:58,160
we're still using our teaser view mode

00:11:56,800 --> 00:12:00,000
here and

00:11:58,160 --> 00:12:02,160
you know essentially have all the same

00:12:00,000 --> 00:12:05,279
uh fields from our content type

00:12:02,160 --> 00:12:05,279
that we're going to be passing in

00:12:06,959 --> 00:12:13,279
so we'll first look at mapping data in a

00:12:10,000 --> 00:12:15,760
twig presenter template so the idea of

00:12:13,279 --> 00:12:16,880
a presenter template it's kind of uh

00:12:15,760 --> 00:12:20,320
like a

00:12:16,880 --> 00:12:22,639
a traffic cop in the middle

00:12:20,320 --> 00:12:24,240
that is taking drupal's data and

00:12:22,639 --> 00:12:27,760
directing it over to

00:12:24,240 --> 00:12:30,480
our template in the the pattern library

00:12:27,760 --> 00:12:34,240
so we're still using that same template

00:12:30,480 --> 00:12:35,920
suggestion of nodegameteaser.html.twig

00:12:34,240 --> 00:12:37,440
but here really what we're doing is

00:12:35,920 --> 00:12:40,880
we're using a twig

00:12:37,440 --> 00:12:42,959
include statement to reference that

00:12:40,880 --> 00:12:44,399
c container twig templates and then

00:12:42,959 --> 00:12:48,079
we're passing in

00:12:44,399 --> 00:12:51,440
the necessary fields from

00:12:48,079 --> 00:12:54,800
the game content type into the

00:12:51,440 --> 00:12:54,800
slots in the component

00:12:56,480 --> 00:13:00,959
and then alternatively if we didn't want

00:12:59,519 --> 00:13:04,079
to do this in a twig template you could

00:13:00,959 --> 00:13:07,120
also do the same thing in preprocess

00:13:04,079 --> 00:13:10,079
so this is a a pre-process hook for the

00:13:07,120 --> 00:13:11,279
game node and uh it's basically the most

00:13:10,079 --> 00:13:13,760
simple pre-process

00:13:11,279 --> 00:13:14,959
function of all time it just takes those

00:13:13,760 --> 00:13:17,839
those fields

00:13:14,959 --> 00:13:19,279
and maps them to the expected variables

00:13:17,839 --> 00:13:20,480
that are going to be in our component

00:13:19,279 --> 00:13:22,639
template

00:13:20,480 --> 00:13:24,959
obviously there's quite a bit more that

00:13:22,639 --> 00:13:26,720
you can do here

00:13:24,959 --> 00:13:29,760
but you know this is just the simple

00:13:26,720 --> 00:13:29,760
high level example

00:13:31,600 --> 00:13:34,959
and if you take that pre-process

00:13:33,519 --> 00:13:37,920
approach um

00:13:34,959 --> 00:13:38,560
you can potentially use a simpler uh

00:13:37,920 --> 00:13:41,040
include

00:13:38,560 --> 00:13:41,680
in your twig templates you don't have to

00:13:41,040 --> 00:13:43,920
map out

00:13:41,680 --> 00:13:45,920
all of the the fields like we saw there

00:13:43,920 --> 00:13:49,839
because they're going to be available to

00:13:45,920 --> 00:13:49,839
your template

00:13:50,560 --> 00:13:53,839
and uh if you're taking this approach

00:13:52,959 --> 00:13:55,839
especially the

00:13:53,839 --> 00:13:57,440
the twig mapping approach there's a

00:13:55,839 --> 00:13:58,880
handful of helper modules that are going

00:13:57,440 --> 00:14:00,639
to make your life easier

00:13:58,880 --> 00:14:03,440
a couple ones that i've used commonly

00:14:00,639 --> 00:14:05,440
are twig field value and twig tweak

00:14:03,440 --> 00:14:07,040
twig field value help lets you get

00:14:05,440 --> 00:14:10,639
partial data from

00:14:07,040 --> 00:14:12,480
field render arrays so you can

00:14:10,639 --> 00:14:13,920
really map just the data that you want

00:14:12,480 --> 00:14:17,600
and strip away some

00:14:13,920 --> 00:14:20,560
wrapping markup and then twig tweak

00:14:17,600 --> 00:14:21,839
has just tons of functions and filters

00:14:20,560 --> 00:14:23,519
that can be helpful

00:14:21,839 --> 00:14:24,800
so if you're you find something that

00:14:23,519 --> 00:14:25,600
you're trying to do in twig template

00:14:24,800 --> 00:14:28,000
that is uh

00:14:25,600 --> 00:14:30,079
challenging uh odds are pretty high that

00:14:28,000 --> 00:14:33,199
twig tweak or something like it may have

00:14:30,079 --> 00:14:33,199
solved the problem already for you

00:14:35,839 --> 00:14:39,920
also in this neighborhood there's a

00:14:38,079 --> 00:14:42,399
number of different starter kits and

00:14:39,920 --> 00:14:42,399
themes

00:14:42,480 --> 00:14:45,680
we won't get too deep into this but the

00:14:44,480 --> 00:14:47,120
general idea here is that they're going

00:14:45,680 --> 00:14:50,399
to help simplify

00:14:47,120 --> 00:14:53,920
your your setup and provide opinionated

00:14:50,399 --> 00:14:55,680
default tooling some also have

00:14:53,920 --> 00:14:57,279
default components and some helper

00:14:55,680 --> 00:14:59,519
functions

00:14:57,279 --> 00:15:01,920
it's going to vary how uh how

00:14:59,519 --> 00:15:03,440
opinionated they are

00:15:01,920 --> 00:15:05,360
but they can be really useful especially

00:15:03,440 --> 00:15:08,160
if you want to start out

00:15:05,360 --> 00:15:08,959
with kind of a strong starting point and

00:15:08,160 --> 00:15:12,000
your tooling

00:15:08,959 --> 00:15:15,040
out of the way so some examples

00:15:12,000 --> 00:15:17,440
emulsify is a pretty popular option

00:15:15,040 --> 00:15:18,160
uh in the community there's also uh

00:15:17,440 --> 00:15:21,199
gesso

00:15:18,160 --> 00:15:23,360
and shyla along with particle and all

00:15:21,199 --> 00:15:27,760
these are great options if you do want

00:15:23,360 --> 00:15:29,920
a uh an opinionated starting point

00:15:27,760 --> 00:15:31,759
so won't get again too deep into

00:15:29,920 --> 00:15:33,360
examples here but i thought it might be

00:15:31,759 --> 00:15:36,160
interesting to look at um

00:15:33,360 --> 00:15:36,880
the emulsified design system um the most

00:15:36,160 --> 00:15:40,000
recent

00:15:36,880 --> 00:15:42,639
version of that which uses uh storybook

00:15:40,000 --> 00:15:43,680
as opposed to pattern lab because the

00:15:42,639 --> 00:15:45,120
integration

00:15:43,680 --> 00:15:46,560
approach here is you know essentially

00:15:45,120 --> 00:15:46,959
the same even though it uses a different

00:15:46,560 --> 00:15:49,519
tool

00:15:46,959 --> 00:15:50,639
so still using the concept of the

00:15:49,519 --> 00:15:52,959
presenter templates

00:15:50,639 --> 00:15:55,199
in the middle to map the data the

00:15:52,959 --> 00:15:57,759
components live in a different place

00:15:55,199 --> 00:16:00,560
per emulsifying storybooks conventions

00:15:57,759 --> 00:16:03,440
and you know uses a different tool

00:16:00,560 --> 00:16:06,320
but we still can see in storybook our

00:16:03,440 --> 00:16:06,320
container template

00:16:06,480 --> 00:16:09,600
and then uh you know we're using a

00:16:08,160 --> 00:16:13,120
different approach to make

00:16:09,600 --> 00:16:13,920
uh storybook aware of our story in this

00:16:13,120 --> 00:16:16,880
case

00:16:13,920 --> 00:16:18,160
it's the stories.js file but you know

00:16:16,880 --> 00:16:18,800
conceptually what we're doing here is

00:16:18,160 --> 00:16:22,079
pretty simple

00:16:18,800 --> 00:16:23,279
similar we are importing the our twig

00:16:22,079 --> 00:16:27,279
templates

00:16:23,279 --> 00:16:31,600
and then the data from a yaml file

00:16:27,279 --> 00:16:31,600
and rendering out our example

00:16:32,079 --> 00:16:36,160
and then you know at the end of the day

00:16:33,680 --> 00:16:38,720
in our emulsify sub theme

00:16:36,160 --> 00:16:40,079
we can still see our container

00:16:38,720 --> 00:16:41,600
components

00:16:40,079 --> 00:16:45,040
in in a grid here and the approach is

00:16:41,600 --> 00:16:45,040
essentially this thing

00:16:48,399 --> 00:16:52,000
okay so uh now moving on to mapping data

00:16:51,440 --> 00:16:54,800
in the

00:16:52,000 --> 00:16:54,800
admin ui

00:16:55,440 --> 00:16:58,720
so we'll start by looking at the ui

00:16:57,279 --> 00:17:00,560
patterns module

00:16:58,720 --> 00:17:03,360
the way i like to describe ui patterns

00:17:00,560 --> 00:17:05,919
is a way to define and manage components

00:17:03,360 --> 00:17:09,360
in a way that drupal better understands

00:17:05,919 --> 00:17:12,400
so ui patterns are drupal plugins

00:17:09,360 --> 00:17:14,559
and when you define a ui pattern

00:17:12,400 --> 00:17:15,679
you can actually handle the the sort of

00:17:14,559 --> 00:17:17,839
mappings that we looked at

00:17:15,679 --> 00:17:19,280
in drupal's admin ui in a variety of

00:17:17,839 --> 00:17:22,079
different places

00:17:19,280 --> 00:17:24,400
and you can also enable an optional

00:17:22,079 --> 00:17:27,199
pattern library page kind of like a mini

00:17:24,400 --> 00:17:29,200
pattern lab that's available in drupal

00:17:27,199 --> 00:17:31,200
and it also lets you do things like

00:17:29,200 --> 00:17:32,640
pre-process your patterns and render

00:17:31,200 --> 00:17:35,200
them programmatically in a variety of

00:17:32,640 --> 00:17:35,200
different ways

00:17:36,559 --> 00:17:41,440
so looking again back at our container

00:17:39,600 --> 00:17:43,919
component but this time

00:17:41,440 --> 00:17:46,720
from the perspective of a ui pattern so

00:17:43,919 --> 00:17:49,039
the thing we're dealing with here is a

00:17:46,720 --> 00:17:50,320
uh container pattern that we're going to

00:17:49,039 --> 00:17:52,720
create

00:17:50,320 --> 00:17:53,440
and then the the slots are all the same

00:17:52,720 --> 00:17:54,559
it's the same

00:17:53,440 --> 00:17:57,760
you know variables from the twig

00:17:54,559 --> 00:17:57,760
template that we've seen before

00:17:59,360 --> 00:18:05,760
so to define our

00:18:02,480 --> 00:18:08,960
ui pattern we use a pattern.yaml file

00:18:05,760 --> 00:18:11,840
in this case um and

00:18:08,960 --> 00:18:12,720
the pattern has uh you know its own id

00:18:11,840 --> 00:18:14,640
of container

00:18:12,720 --> 00:18:16,559
a label and a description and then the

00:18:14,640 --> 00:18:19,919
bulk of what we see here

00:18:16,559 --> 00:18:22,640
is mapping out the different fields so

00:18:19,919 --> 00:18:24,080
for each field you can have a type and a

00:18:22,640 --> 00:18:27,440
label

00:18:24,080 --> 00:18:28,720
and description and then preview content

00:18:27,440 --> 00:18:30,720
so a lot of these are just

00:18:28,720 --> 00:18:32,480
strings but we've also got some examples

00:18:30,720 --> 00:18:34,720
of markup

00:18:32,480 --> 00:18:35,840
it's possible to have a preview that is

00:18:34,720 --> 00:18:39,440
another pattern

00:18:35,840 --> 00:18:39,440
if you're doing pattern nesting

00:18:40,400 --> 00:18:43,600
and then down towards the bottom of this

00:18:41,760 --> 00:18:46,880
yaml file there's a couple of other

00:18:43,600 --> 00:18:48,640
uh cool tricks uh that ui patterns can

00:18:46,880 --> 00:18:51,440
do so it's possible to define

00:18:48,640 --> 00:18:52,320
libraries so if you have certain assets

00:18:51,440 --> 00:18:55,679
that need to be

00:18:52,320 --> 00:18:58,400
loaded every time this

00:18:55,679 --> 00:18:59,120
component is used you can do that and

00:18:58,400 --> 00:19:00,960
you can also

00:18:59,120 --> 00:19:02,799
have other dependencies or use these

00:19:00,960 --> 00:19:05,520
libraries as dependencies

00:19:02,799 --> 00:19:08,640
so here we're just loading a css file

00:19:05,520 --> 00:19:11,679
and then the use key down at the bottom

00:19:08,640 --> 00:19:15,600
tells uh ui patterns that when this

00:19:11,679 --> 00:19:18,160
uh component is being used to use that c

00:19:15,600 --> 00:19:18,720
container template from our pattern

00:19:18,160 --> 00:19:22,240
library

00:19:18,720 --> 00:19:22,960
so it essentially uh eliminates the need

00:19:22,240 --> 00:19:25,679
for that

00:19:22,960 --> 00:19:26,559
presenter template in the middle behind

00:19:25,679 --> 00:19:28,640
the scenes

00:19:26,559 --> 00:19:30,240
something pretty similar is going on but

00:19:28,640 --> 00:19:32,320
we don't have to maintain

00:19:30,240 --> 00:19:35,120
that additional template in the code

00:19:32,320 --> 00:19:35,120
base for example

00:19:37,600 --> 00:19:40,720
so uh this is what it looks like in the

00:19:39,600 --> 00:19:42,640
example uh

00:19:40,720 --> 00:19:44,240
pattern page obviously it'll be a little

00:19:42,640 --> 00:19:47,679
less crazy when it's not using

00:19:44,240 --> 00:19:50,880
uh this 8-bit framework um

00:19:47,679 --> 00:19:53,520
but we see our container component

00:19:50,880 --> 00:19:54,880
um with its example data and then a

00:19:53,520 --> 00:19:57,039
table that has all of the

00:19:54,880 --> 00:19:59,919
the fields that we've defined with some

00:19:57,039 --> 00:19:59,919
other metadata

00:20:01,520 --> 00:20:06,080
and then ui patterns has a handful of

00:20:04,159 --> 00:20:06,960
supporting integration modules we'll

00:20:06,080 --> 00:20:10,000
just look at one

00:20:06,960 --> 00:20:11,120
as a quick example so ui patterns views

00:20:10,000 --> 00:20:14,000
in this case

00:20:11,120 --> 00:20:14,799
so in our view we can specify that we're

00:20:14,000 --> 00:20:17,760
going to show

00:20:14,799 --> 00:20:17,760
a pattern

00:20:18,159 --> 00:20:21,280
and then in the row style options we

00:20:20,320 --> 00:20:22,880
pick the

00:20:21,280 --> 00:20:24,880
pattern that we want to use our

00:20:22,880 --> 00:20:28,320
container component again

00:20:24,880 --> 00:20:30,880
and then for each field in

00:20:28,320 --> 00:20:32,080
a row for our view we can specify the

00:20:30,880 --> 00:20:34,240
destination

00:20:32,080 --> 00:20:37,360
in our ui pattern so we can map things

00:20:34,240 --> 00:20:40,000
here in the ui on a field by field basis

00:20:37,360 --> 00:20:41,440
and the other integration modules you

00:20:40,000 --> 00:20:41,760
know it's going to be a similar approach

00:20:41,440 --> 00:20:44,720
but

00:20:41,760 --> 00:20:45,760
you know using other things like um

00:20:44,720 --> 00:20:49,520
layouts

00:20:45,760 --> 00:20:50,799
as opposed to views

00:20:49,520 --> 00:20:53,840
and you know the end result there is

00:20:50,799 --> 00:20:57,440
that we'll see our container again

00:20:53,840 --> 00:20:59,679
so also we could use a layout in drupal

00:20:57,440 --> 00:21:01,679
to represent this component

00:20:59,679 --> 00:21:04,400
so here the thing that we're dealing

00:21:01,679 --> 00:21:07,200
with is a container layout

00:21:04,400 --> 00:21:07,840
and layouts have regions so those are

00:21:07,200 --> 00:21:09,280
essentially

00:21:07,840 --> 00:21:11,039
the things that we're going to be

00:21:09,280 --> 00:21:13,760
mapping into the different slots

00:21:11,039 --> 00:21:13,760
in our container

00:21:15,440 --> 00:21:21,760
a handful of ways to define layouts uh

00:21:18,799 --> 00:21:23,760
for drupal um this quick example just

00:21:21,760 --> 00:21:27,919
uses a layouts.yaml file

00:21:23,760 --> 00:21:30,400
in our theme and uh so we're specifying

00:21:27,919 --> 00:21:31,640
a template that's used for the layout

00:21:30,400 --> 00:21:35,120
which has to have a

00:21:31,640 --> 00:21:37,200
html.twig extension and then

00:21:35,120 --> 00:21:39,200
listing out our various regions that are

00:21:37,200 --> 00:21:41,760
going to be used

00:21:39,200 --> 00:21:44,960
so in our presenter template we're

00:21:41,760 --> 00:21:47,600
including that container.twig

00:21:44,960 --> 00:21:48,640
and then we're mapping the regions in

00:21:47,600 --> 00:21:50,240
this case

00:21:48,640 --> 00:21:52,640
into the different slots in our

00:21:50,240 --> 00:21:52,640
component

00:21:54,400 --> 00:21:58,240
so you know one thing to keep in mind

00:21:56,240 --> 00:22:01,360
here is that if you're

00:21:58,240 --> 00:22:04,000
taking this approach and you know

00:22:01,360 --> 00:22:05,200
mapping data in a twig template you need

00:22:04,000 --> 00:22:07,919
to make sure that

00:22:05,200 --> 00:22:08,799
you're not stripping out too much of

00:22:07,919 --> 00:22:11,360
what

00:22:08,799 --> 00:22:12,960
layout builder depends on when it

00:22:11,360 --> 00:22:14,799
renders the component

00:22:12,960 --> 00:22:16,080
so you'll see here you know you need to

00:22:14,799 --> 00:22:19,200
use

00:22:16,080 --> 00:22:21,200
the attributes object and there's

00:22:19,200 --> 00:22:24,080
certain

00:22:21,200 --> 00:22:24,880
classes and wrapping markup that need to

00:22:24,080 --> 00:22:27,200
be here

00:22:24,880 --> 00:22:29,280
so that the layout builder ui can hook

00:22:27,200 --> 00:22:31,760
into your component

00:22:29,280 --> 00:22:33,200
so you can't strip away too much and

00:22:31,760 --> 00:22:34,159
then another thing that this means is

00:22:33,200 --> 00:22:37,679
that your

00:22:34,159 --> 00:22:39,919
pattern library tool um is going to

00:22:37,679 --> 00:22:42,159
need to understand things like the add

00:22:39,919 --> 00:22:44,559
class function

00:22:42,159 --> 00:22:45,840
and that's definitely a soft problem but

00:22:44,559 --> 00:22:49,120
might not be something that is

00:22:45,840 --> 00:22:49,120
configured out of the box for you

00:22:50,000 --> 00:22:57,280
so here we see our container component

00:22:54,080 --> 00:22:58,880
represented as a a layout in layout

00:22:57,280 --> 00:23:01,440
builder

00:22:58,880 --> 00:23:04,000
and you'll notice that as we represent

00:23:01,440 --> 00:23:06,240
this visually things get a little funky

00:23:04,000 --> 00:23:07,600
so there are some cases where this

00:23:06,240 --> 00:23:08,000
visual approach might make sense and

00:23:07,600 --> 00:23:10,880
others

00:23:08,000 --> 00:23:11,520
where it potentially does not we see our

00:23:10,880 --> 00:23:13,520
tags

00:23:11,520 --> 00:23:15,600
of our platform and our year start to

00:23:13,520 --> 00:23:18,799
overlap things

00:23:15,600 --> 00:23:20,400
also if there are cases where there's um

00:23:18,799 --> 00:23:22,400
you know data that isn't necessarily

00:23:20,400 --> 00:23:24,960
represented visually but you know

00:23:22,400 --> 00:23:25,600
it can be configured to specify like

00:23:24,960 --> 00:23:27,919
what

00:23:25,600 --> 00:23:29,039
how a component behaves for example you

00:23:27,919 --> 00:23:30,320
know that's something you don't want

00:23:29,039 --> 00:23:32,720
represented visually in your layout

00:23:30,320 --> 00:23:32,720
either

00:23:35,200 --> 00:23:41,039
but uh recently uh there is the

00:23:38,320 --> 00:23:42,559
component blocks module that kind of

00:23:41,039 --> 00:23:43,600
bridges this gap in some interesting

00:23:42,559 --> 00:23:46,320
ways

00:23:43,600 --> 00:23:47,279
so uh it exposes ui patterns to layout

00:23:46,320 --> 00:23:49,279
builder

00:23:47,279 --> 00:23:51,279
and as we'll see in a second it kind of

00:23:49,279 --> 00:23:54,480
sidesteps some of those visual issues

00:23:51,279 --> 00:23:57,039
that we just saw in that simple example

00:23:54,480 --> 00:23:58,640
and makes any fields available to the

00:23:57,039 --> 00:23:59,919
particular entity that you're working

00:23:58,640 --> 00:24:02,640
with

00:23:59,919 --> 00:24:03,679
available to map into your ui pattern

00:24:02,640 --> 00:24:06,000
along with

00:24:03,679 --> 00:24:08,720
fixed inputs so you can just enter data

00:24:06,000 --> 00:24:08,720
by hand too

00:24:10,559 --> 00:24:17,600
so here we're adding a

00:24:14,159 --> 00:24:20,159
block in layout builder and we'll see

00:24:17,600 --> 00:24:21,919
in the sidebar on the right that there's

00:24:20,159 --> 00:24:25,600
a component blocks options

00:24:21,919 --> 00:24:29,600
for our container now so we can specify

00:24:25,600 --> 00:24:31,200
fields from content or fields from user

00:24:29,600 --> 00:24:34,799
because the user entity is also

00:24:31,200 --> 00:24:34,799
available in this context

00:24:35,600 --> 00:24:39,520
and then we picked fields from content

00:24:37,679 --> 00:24:41,919
and then you'll see that still in the

00:24:39,520 --> 00:24:43,919
sidebar we can configure

00:24:41,919 --> 00:24:46,159
all of those mappings and how things are

00:24:43,919 --> 00:24:48,159
going to be rendered so you know for the

00:24:46,159 --> 00:24:50,000
title we can specify a formatter if it's

00:24:48,159 --> 00:24:52,159
going to be linked

00:24:50,000 --> 00:24:54,480
the source below is an example of using

00:24:52,159 --> 00:24:56,400
a fixed value

00:24:54,480 --> 00:24:58,960
and then for something like an image you

00:24:56,400 --> 00:25:01,200
know we can specify the image formatter

00:24:58,960 --> 00:25:02,720
and image styles and and all of that

00:25:01,200 --> 00:25:05,760
good stuff

00:25:02,720 --> 00:25:08,480
and as you'll see here it does this in

00:25:05,760 --> 00:25:09,679
the uh the sidebar or you know if you're

00:25:08,480 --> 00:25:11,600
using

00:25:09,679 --> 00:25:12,880
layout builder modal or do it in the

00:25:11,600 --> 00:25:15,520
modal

00:25:12,880 --> 00:25:17,120
rather than doing it visually so it kind

00:25:15,520 --> 00:25:20,559
of sidesteps some of those issues so

00:25:17,120 --> 00:25:23,520
it's kind of a good mix and that you can

00:25:20,559 --> 00:25:25,440
configure the settings for your pattern

00:25:23,520 --> 00:25:29,840
but still have it represented visually

00:25:25,440 --> 00:25:29,840
in the kind of overall page layout

00:25:31,600 --> 00:25:35,279
also kind of in this neighborhood but a

00:25:33,360 --> 00:25:38,400
little bit more focused on

00:25:35,279 --> 00:25:39,919
the decoupled use case is the component

00:25:38,400 --> 00:25:44,400
module

00:25:39,919 --> 00:25:45,840
confusingly not the components module

00:25:44,400 --> 00:25:48,000
and this is another way that you can

00:25:45,840 --> 00:25:51,760
define a component with

00:25:48,000 --> 00:25:51,760
a yaml file

00:25:51,840 --> 00:25:56,960
it's kind of like intended to be a

00:25:54,720 --> 00:25:57,919
successor to the progressively decoupled

00:25:56,960 --> 00:25:59,679
blocks module

00:25:57,919 --> 00:26:02,720
if anyone has used that so it's pretty

00:25:59,679 --> 00:26:02,720
similar in concept

00:26:02,799 --> 00:26:06,720
so and we'll look at an example in a

00:26:04,320 --> 00:26:09,039
second but you can define

00:26:06,720 --> 00:26:10,799
the component in your yaml file it's

00:26:09,039 --> 00:26:13,039
also possible to derive

00:26:10,799 --> 00:26:14,159
block configuration from it and then the

00:26:13,039 --> 00:26:17,200
other thing that it does

00:26:14,159 --> 00:26:20,000
is it will for any configuration

00:26:17,200 --> 00:26:20,400
in the block it will also add those to

00:26:20,000 --> 00:26:23,120
the

00:26:20,400 --> 00:26:23,679
wrapping div as data attributes so that

00:26:23,120 --> 00:26:27,679
you can

00:26:23,679 --> 00:26:30,559
get at them when you load your component

00:26:27,679 --> 00:26:31,279
so this actually isn't the container

00:26:30,559 --> 00:26:33,120
example

00:26:31,279 --> 00:26:35,120
but it's still just a representative

00:26:33,120 --> 00:26:37,120
example here

00:26:35,120 --> 00:26:38,799
we have our yaml file on the left hand

00:26:37,120 --> 00:26:41,039
side

00:26:38,799 --> 00:26:42,480
so potentially depending on what you're

00:26:41,039 --> 00:26:43,120
looking to do there might not actually

00:26:42,480 --> 00:26:46,960
have to be

00:26:43,120 --> 00:26:49,039
a lot of configuration here but we have

00:26:46,960 --> 00:26:50,960
just a javascript component that we're

00:26:49,039 --> 00:26:53,360
loading

00:26:50,960 --> 00:26:54,240
we're specifying a template file and

00:26:53,360 --> 00:26:57,360
then there's just

00:26:54,240 --> 00:26:58,240
one configuration option under form

00:26:57,360 --> 00:27:01,520
configuration

00:26:58,240 --> 00:27:04,400
which uh picking a dark or light theme

00:27:01,520 --> 00:27:06,400
and then in this example in the the

00:27:04,400 --> 00:27:08,000
template file

00:27:06,400 --> 00:27:09,520
it really is just a div with a

00:27:08,000 --> 00:27:12,640
particular id so

00:27:09,520 --> 00:27:14,159
react in this case can mount um in that

00:27:12,640 --> 00:27:17,039
div

00:27:14,159 --> 00:27:18,960
and then taking just a quick look at the

00:27:17,039 --> 00:27:23,200
component itself

00:27:18,960 --> 00:27:23,520
um so uh here you know we're mounting in

00:27:23,200 --> 00:27:26,960
that

00:27:23,520 --> 00:27:29,840
evolution navbar div um but also

00:27:26,960 --> 00:27:31,200
before the render function um we're

00:27:29,840 --> 00:27:34,320
getting the

00:27:31,200 --> 00:27:37,679
um all the data for

00:27:34,320 --> 00:27:40,720
the uh that evolution navbar class

00:27:37,679 --> 00:27:42,320
which is what um is added by uh this

00:27:40,720 --> 00:27:44,000
component in this case

00:27:42,320 --> 00:27:46,320
so that we then have all those data

00:27:44,000 --> 00:27:48,799
attributes that we can pass into

00:27:46,320 --> 00:27:51,279
our component when we render it so we're

00:27:48,799 --> 00:27:55,120
in this case specifying the theme

00:27:51,279 --> 00:27:57,200
based on what uh is selected in the

00:27:55,120 --> 00:27:58,159
the block when you add it in drupal so

00:27:57,200 --> 00:27:59,600
we'll see there that there's the

00:27:58,159 --> 00:28:03,440
component settings and we can pick

00:27:59,600 --> 00:28:06,080
from the dark and light theme

00:28:03,440 --> 00:28:06,559
so can be pretty helpful especially in

00:28:06,080 --> 00:28:10,320
the

00:28:06,559 --> 00:28:10,320
more decoupled use case

00:28:12,320 --> 00:28:16,799
so now let's move on to component

00:28:15,520 --> 00:28:18,640
definition

00:28:16,799 --> 00:28:19,919
approaches another kind of dividing line

00:28:18,640 --> 00:28:21,760
here so

00:28:19,919 --> 00:28:23,039
um a lot of what we've looked at

00:28:21,760 --> 00:28:24,720
actually everything we've looked at so

00:28:23,039 --> 00:28:27,600
far falls under the the category of

00:28:24,720 --> 00:28:30,320
manual definition

00:28:27,600 --> 00:28:32,320
so we're defining our component in code

00:28:30,320 --> 00:28:34,240
to make drupal aware of it

00:28:32,320 --> 00:28:36,000
and this potentially is going to result

00:28:34,240 --> 00:28:38,480
in some amount of duplication between

00:28:36,000 --> 00:28:41,679
drupal and your component library

00:28:38,480 --> 00:28:42,880
like for the ui patterns case the way we

00:28:41,679 --> 00:28:45,120
have to map out the fields

00:28:42,880 --> 00:28:46,880
is probably pretty simple similar to how

00:28:45,120 --> 00:28:49,919
you need to map out the data

00:28:46,880 --> 00:28:51,760
for you know pattern lab or storybook to

00:28:49,919 --> 00:28:54,159
be aware of

00:28:51,760 --> 00:28:55,520
so there's the concept of automatically

00:28:54,159 --> 00:28:57,520
automatic discovery

00:28:55,520 --> 00:28:59,360
which in this case a drupal module

00:28:57,520 --> 00:29:00,880
discovers components from a component

00:28:59,360 --> 00:29:02,480
library and automatically makes them

00:29:00,880 --> 00:29:04,960
available to drupal

00:29:02,480 --> 00:29:07,120
so this is you know in many cases an

00:29:04,960 --> 00:29:08,720
emerging or experimental concept

00:29:07,120 --> 00:29:10,399
um in past versions of this talk

00:29:08,720 --> 00:29:11,760
somebody brought up the great point that

00:29:10,399 --> 00:29:14,399
you know a lot of these are

00:29:11,760 --> 00:29:15,039
development modules so you know use your

00:29:14,399 --> 00:29:18,320
typical

00:29:15,039 --> 00:29:21,120
uh judgment uh with that

00:29:18,320 --> 00:29:22,240
and uh also this is going to expect a

00:29:21,120 --> 00:29:24,399
particular convention

00:29:22,240 --> 00:29:26,159
so it might not work with all component

00:29:24,399 --> 00:29:27,840
libraries but can be a useful tool

00:29:26,159 --> 00:29:31,120
especially if you

00:29:27,840 --> 00:29:31,120
you know build with this in mind

00:29:32,000 --> 00:29:35,919
so looking at some examples of automatic

00:29:34,240 --> 00:29:38,080
discovery

00:29:35,919 --> 00:29:40,000
one is ui patterns patter lab which is a

00:29:38,080 --> 00:29:43,679
module that that i maintain

00:29:40,000 --> 00:29:46,240
um and so here it

00:29:43,679 --> 00:29:47,840
just again discovers your components

00:29:46,240 --> 00:29:49,679
from a pattern lab instance

00:29:47,840 --> 00:29:51,760
and automatically makes them available

00:29:49,679 --> 00:29:54,799
in drupal as ui patterns

00:29:51,760 --> 00:29:58,880
and you don't have to create a separate

00:29:54,799 --> 00:30:02,320
patterns.yaml file it does require

00:29:58,880 --> 00:30:02,720
that you have a yaml or json file that

00:30:02,320 --> 00:30:09,840
has

00:30:02,720 --> 00:30:09,840
pattern data because that

00:30:11,440 --> 00:30:15,279
i think my headset may have just cut out

00:30:13,440 --> 00:30:16,000
so if somebody in the chat could uh just

00:30:15,279 --> 00:30:17,440
ping and

00:30:16,000 --> 00:30:19,919
confirm that they can hear me that would

00:30:17,440 --> 00:30:19,919
be amazing

00:30:21,440 --> 00:30:28,880
all right cool great um

00:30:25,360 --> 00:30:29,679
thanks all right so uh yeah so this is

00:30:28,880 --> 00:30:31,120
um

00:30:29,679 --> 00:30:34,840
you know potentially useful approach if

00:30:31,120 --> 00:30:37,279
you want to uh prevent that sort of uh

00:30:34,840 --> 00:30:39,760
duplication

00:30:37,279 --> 00:30:41,600
and then also there is a pattern kit

00:30:39,760 --> 00:30:42,640
which is uh not maintained by me it's

00:30:41,600 --> 00:30:46,399
maintained by the folks

00:30:42,640 --> 00:30:48,320
at red hat and this kind of has a mix

00:30:46,399 --> 00:30:51,120
of some of the manual definition and

00:30:48,320 --> 00:30:55,200
automatic discovery concepts

00:30:51,120 --> 00:30:57,679
it depends on a schema definition file

00:30:55,200 --> 00:30:59,200
but that schema definition file has you

00:30:57,679 --> 00:31:00,240
know potential applications outside of

00:30:59,200 --> 00:31:02,399
drupal

00:31:00,240 --> 00:31:03,600
and this is another approach that can

00:31:02,399 --> 00:31:07,360
automatically derive

00:31:03,600 --> 00:31:09,360
blocks from pattern library components

00:31:07,360 --> 00:31:11,600
and you know it supports a particular

00:31:09,360 --> 00:31:14,640
set of field types when doing that

00:31:11,600 --> 00:31:17,200
the module at least last that i

00:31:14,640 --> 00:31:18,799
played around with this was still in

00:31:17,200 --> 00:31:20,559
active development for drupal 8

00:31:18,799 --> 00:31:22,640
um so some things that are supported in

00:31:20,559 --> 00:31:24,880
seven haven't quite made their way there

00:31:22,640 --> 00:31:24,880
yet

00:31:25,919 --> 00:31:29,919
but here's a quick look at um pattern

00:31:27,919 --> 00:31:30,799
discovery from the perspective of

00:31:29,919 --> 00:31:34,960
pattern kit

00:31:30,799 --> 00:31:38,000
so in your libraries.yaml file

00:31:34,960 --> 00:31:40,559
there's a patterns key where you specify

00:31:38,000 --> 00:31:41,440
the path to your patterns in this case

00:31:40,559 --> 00:31:46,320
that it's

00:31:41,440 --> 00:31:49,039
their twig patterns

00:31:46,320 --> 00:31:50,159
and then this is an example of the uh a

00:31:49,039 --> 00:31:53,279
json file

00:31:50,159 --> 00:31:55,360
uh json schema file so

00:31:53,279 --> 00:31:56,960
you know at a high level this is pretty

00:31:55,360 --> 00:31:59,279
similar to some of the other examples

00:31:56,960 --> 00:32:01,279
that we've seen

00:31:59,279 --> 00:32:02,320
where we're you know mapping out the

00:32:01,279 --> 00:32:04,320
different fields

00:32:02,320 --> 00:32:05,440
so that's under the properties section

00:32:04,320 --> 00:32:08,159
here

00:32:05,440 --> 00:32:08,880
um but for the fields you can specify a

00:32:08,159 --> 00:32:11,679
type

00:32:08,880 --> 00:32:12,960
um and potentially some options so for

00:32:11,679 --> 00:32:15,200
the string type

00:32:12,960 --> 00:32:17,120
down in the body section we're

00:32:15,200 --> 00:32:20,320
specifying that it's a text area

00:32:17,120 --> 00:32:23,279
and then it should use a wysiwyg

00:32:20,320 --> 00:32:25,279
and then also it's possible to include

00:32:23,279 --> 00:32:28,000
settings

00:32:25,279 --> 00:32:30,559
that can be configured when this pattern

00:32:28,000 --> 00:32:30,559
is used

00:32:31,039 --> 00:32:34,799
so again all that is automatically

00:32:33,200 --> 00:32:36,480
derived for drupal

00:32:34,799 --> 00:32:37,919
and then that can result in something

00:32:36,480 --> 00:32:40,880
that looks like this

00:32:37,919 --> 00:32:42,159
when you add a block for the container

00:32:40,880 --> 00:32:44,080
in this case

00:32:42,159 --> 00:32:45,360
you have fields where you can specify

00:32:44,080 --> 00:32:48,880
the data for

00:32:45,360 --> 00:32:50,159
your components and also we see the

00:32:48,880 --> 00:32:52,399
example of the

00:32:50,159 --> 00:32:53,919
alignment settings as well that can be

00:32:52,399 --> 00:32:55,919
specified

00:32:53,919 --> 00:32:57,600
and then that still gives you the

00:32:55,919 --> 00:33:00,559
container component that we've seen

00:32:57,600 --> 00:33:00,559
over and over and over

00:33:01,760 --> 00:33:06,159
and then uh another module uh that was

00:33:04,960 --> 00:33:09,600
uh pointed out to me

00:33:06,159 --> 00:33:11,519
recently by uh one of the maintainers uh

00:33:09,600 --> 00:33:12,960
i guess you know even a module might not

00:33:11,519 --> 00:33:15,679
be the right way to describe this but is

00:33:12,960 --> 00:33:18,240
the wingsuit project

00:33:15,679 --> 00:33:19,360
and this is a set of tools that help you

00:33:18,240 --> 00:33:22,480
build

00:33:19,360 --> 00:33:23,919
twig ui components with storybook

00:33:22,480 --> 00:33:25,919
i haven't really had too much of a

00:33:23,919 --> 00:33:26,320
chance to to play around with this but

00:33:25,919 --> 00:33:28,080
um

00:33:26,320 --> 00:33:29,360
and i also wasn't exactly sure at this

00:33:28,080 --> 00:33:31,200
point which

00:33:29,360 --> 00:33:32,880
category this really belonged in but i

00:33:31,200 --> 00:33:36,960
thought it was worth noting

00:33:32,880 --> 00:33:39,120
um it does rely on ui patterns um

00:33:36,960 --> 00:33:40,799
so it uses the ui pattern structure that

00:33:39,120 --> 00:33:44,320
we've seen along with

00:33:40,799 --> 00:33:47,200
some additional features that it adds um

00:33:44,320 --> 00:33:50,240
one cool thing that it can do is allow

00:33:47,200 --> 00:33:52,000
you to generate components via a cli

00:33:50,240 --> 00:33:54,880
which is kind of nice a way to kind of

00:33:52,000 --> 00:33:57,919
bootstrap a component

00:33:54,880 --> 00:33:58,960
there's also a a wingsuit companion

00:33:57,919 --> 00:34:01,279
module

00:33:58,960 --> 00:34:02,559
that lets you make these components

00:34:01,279 --> 00:34:05,440
available to drupal

00:34:02,559 --> 00:34:06,159
with no additional configuration and

00:34:05,440 --> 00:34:08,960
also there's

00:34:06,159 --> 00:34:11,119
a starter project the wingsuit

00:34:08,960 --> 00:34:12,240
kickstarter project

00:34:11,119 --> 00:34:14,079
that's going to give you example

00:34:12,240 --> 00:34:15,679
components and a quick way to get

00:34:14,079 --> 00:34:18,879
started

00:34:15,679 --> 00:34:22,639
so definitely worth checking out and

00:34:18,879 --> 00:34:22,639
i plan on looking into it more myself

00:34:24,800 --> 00:34:29,200
so finally as we uh kind of near the end

00:34:28,240 --> 00:34:31,280
here

00:34:29,200 --> 00:34:33,280
we'll talk about pre-packaged component

00:34:31,280 --> 00:34:35,760
solutions so

00:34:33,280 --> 00:34:36,879
just briefly touching on a few of these

00:34:35,760 --> 00:34:41,200
um there's the

00:34:36,879 --> 00:34:43,919
bolt design system uh built out of uh

00:34:41,200 --> 00:34:46,000
pega systems so this is a set of

00:34:43,919 --> 00:34:47,119
ready-to-use and drupal-friendly web

00:34:46,000 --> 00:34:48,720
components

00:34:47,119 --> 00:34:50,320
and it's a full design system and you

00:34:48,720 --> 00:34:52,079
can pick and choose the pieces that you

00:34:50,320 --> 00:34:53,760
want to use

00:34:52,079 --> 00:34:54,879
so definitely worth looking at

00:34:53,760 --> 00:34:55,359
especially if you're interested in

00:34:54,879 --> 00:34:58,400
seeing

00:34:55,359 --> 00:35:02,079
you know a fully built out web component

00:34:58,400 --> 00:35:05,200
based design system

00:35:02,079 --> 00:35:07,680
also the compony project

00:35:05,200 --> 00:35:08,720
uh which is a component distribution

00:35:07,680 --> 00:35:10,880
system

00:35:08,720 --> 00:35:12,320
and this is uh like a combination of a

00:35:10,880 --> 00:35:15,200
theme

00:35:12,320 --> 00:35:17,200
gulp workflow and also uh example

00:35:15,200 --> 00:35:19,599
components that you can pick from

00:35:17,200 --> 00:35:21,280
so you can download existing components

00:35:19,599 --> 00:35:22,160
you can also create and distribute your

00:35:21,280 --> 00:35:24,160
own

00:35:22,160 --> 00:35:25,599
um at least when i looked at this

00:35:24,160 --> 00:35:27,599
previously it

00:35:25,599 --> 00:35:28,880
didn't have like a composer or npm

00:35:27,599 --> 00:35:30,640
driven workflow

00:35:28,880 --> 00:35:31,920
so for that reason it probably doesn't

00:35:30,640 --> 00:35:35,359
really fit into

00:35:31,920 --> 00:35:38,560
my um my workflow but again this

00:35:35,359 --> 00:35:40,079
this idea of finding different ways to

00:35:38,560 --> 00:35:41,359
easily distribute drupal friendly

00:35:40,079 --> 00:35:44,720
components is something that i find

00:35:41,359 --> 00:35:46,400
pretty interesting

00:35:44,720 --> 00:35:48,400
and then there's also the single file

00:35:46,400 --> 00:35:50,880
components module and this doesn't

00:35:48,400 --> 00:35:51,680
really help with the integration use

00:35:50,880 --> 00:35:54,000
case

00:35:51,680 --> 00:35:54,960
but um is definitely another interesting

00:35:54,000 --> 00:35:56,480
perspective on

00:35:54,960 --> 00:35:58,880
making easily packageable and

00:35:56,480 --> 00:36:01,920
distributable drupal components

00:35:58,880 --> 00:36:05,040
so it uses something similar to the

00:36:01,920 --> 00:36:07,839
views single file component syntax

00:36:05,040 --> 00:36:09,599
um and you can use it like any template

00:36:07,839 --> 00:36:12,880
but it just happens to include

00:36:09,599 --> 00:36:15,839
all of the uh markup and

00:36:12,880 --> 00:36:16,320
javascript and styles in one place and

00:36:15,839 --> 00:36:17,760
it can

00:36:16,320 --> 00:36:19,520
also do some of the cool tricks that

00:36:17,760 --> 00:36:22,000
we've seen in other examples like

00:36:19,520 --> 00:36:24,839
generate libraries derive blocks and

00:36:22,000 --> 00:36:27,839
layouts if you annotate things correctly

00:36:24,839 --> 00:36:30,480
um and it does have its own little mini

00:36:27,839 --> 00:36:31,359
component library as well so another

00:36:30,480 --> 00:36:34,079
interesting

00:36:31,359 --> 00:36:36,720
uh take on component distribution and

00:36:34,079 --> 00:36:36,720
reuse here

00:36:37,680 --> 00:36:41,520
and then related to that um you know an

00:36:39,760 --> 00:36:42,560
ongoing effort and potentially something

00:36:41,520 --> 00:36:45,760
we'll hear more about

00:36:42,560 --> 00:36:49,119
in the the dries note in a bit um

00:36:45,760 --> 00:36:51,920
is the initiative to create a uh

00:36:49,119 --> 00:36:53,119
distributable drupal friendly menu

00:36:51,920 --> 00:36:55,839
component

00:36:53,119 --> 00:36:56,640
um so you know this is another situation

00:36:55,839 --> 00:36:59,200
where um

00:36:56,640 --> 00:37:00,240
uh in addition to you know the effort to

00:36:59,200 --> 00:37:03,040
make that available

00:37:00,240 --> 00:37:04,480
i'm hoping that there are some patterns

00:37:03,040 --> 00:37:07,200
that can be established here

00:37:04,480 --> 00:37:09,040
that can also kind of uh reverberate out

00:37:07,200 --> 00:37:12,079
throughout the component ecosystem as

00:37:09,040 --> 00:37:12,079
well that we can learn from

00:37:13,760 --> 00:37:16,880
and just touching on the uh the workflow

00:37:15,599 --> 00:37:20,000
here um

00:37:16,880 --> 00:37:23,280
kind of my approach currently

00:37:20,000 --> 00:37:24,240
i still am kind of leveraging a mix of

00:37:23,280 --> 00:37:27,520
these approaches so

00:37:24,240 --> 00:37:29,119
i typically do use integrated components

00:37:27,520 --> 00:37:31,520
that are in a custom theme so

00:37:29,119 --> 00:37:34,079
uh things live outside of the

00:37:31,520 --> 00:37:37,280
traditional drupal templates directory

00:37:34,079 --> 00:37:38,000
um for lightweight components i do

00:37:37,280 --> 00:37:40,960
prefer

00:37:38,000 --> 00:37:43,280
to handle the the component mapping in

00:37:40,960 --> 00:37:44,640
drupal's ui where i can

00:37:43,280 --> 00:37:47,200
uh but for things that are more

00:37:44,640 --> 00:37:50,400
complicated i tend to use uh

00:37:47,200 --> 00:37:51,440
pre-process um rather especially rather

00:37:50,400 --> 00:37:54,079
than mapping in

00:37:51,440 --> 00:37:54,480
uh twig templates um we've developed

00:37:54,079 --> 00:37:56,000
some

00:37:54,480 --> 00:37:57,760
some tools to make that process a little

00:37:56,000 --> 00:37:59,520
bit easier and then also

00:37:57,760 --> 00:38:01,520
at bounty us you know our team our

00:37:59,520 --> 00:38:04,320
back-end team has gotten pretty good at

00:38:01,520 --> 00:38:06,000
um putting together helper functions

00:38:04,320 --> 00:38:08,400
that make that integration process a

00:38:06,000 --> 00:38:11,520
little bit easier

00:38:08,400 --> 00:38:13,359
and then also uh are focusing on

00:38:11,520 --> 00:38:14,720
building components that are you know

00:38:13,359 --> 00:38:16,800
compatible with layout builder and can

00:38:14,720 --> 00:38:18,960
be used easily with layout builder

00:38:16,800 --> 00:38:19,839
and from my perspective that lately has

00:38:18,960 --> 00:38:22,000
meant uh

00:38:19,839 --> 00:38:26,160
you know mostly using custom block types

00:38:22,000 --> 00:38:26,160
and a pretty limited use of paragraphs

00:38:26,720 --> 00:38:30,160
and a question uh you know that has come

00:38:28,640 --> 00:38:32,640
up when talking about this

00:38:30,160 --> 00:38:33,760
topic previously is uh well what should

00:38:32,640 --> 00:38:36,000
i do

00:38:33,760 --> 00:38:37,760
if i want to take this approach and i

00:38:36,000 --> 00:38:38,560
would still say at this point the best

00:38:37,760 --> 00:38:41,040
introduction

00:38:38,560 --> 00:38:42,640
is one of the approaches of handling

00:38:41,040 --> 00:38:44,240
mapping in code

00:38:42,640 --> 00:38:46,000
it's a you know pretty battle tested

00:38:44,240 --> 00:38:48,240
approach here which approach

00:38:46,000 --> 00:38:49,440
you pick is probably going to depend on

00:38:48,240 --> 00:38:52,320
your team makeup

00:38:49,440 --> 00:38:53,680
and your project so for people who are a

00:38:52,320 --> 00:38:55,599
little bit more front end focused the

00:38:53,680 --> 00:38:58,640
twig mapping approach might

00:38:55,599 --> 00:39:00,160
be a better place to start versus if the

00:38:58,640 --> 00:39:02,320
back end team is handling this

00:39:00,160 --> 00:39:04,320
integration might be more inclined to

00:39:02,320 --> 00:39:07,760
pre-process

00:39:04,320 --> 00:39:10,079
but as we saw a lot of examples today

00:39:07,760 --> 00:39:13,119
that are kind of consolidating around ui

00:39:10,079 --> 00:39:14,560
patterns and the ui patterns ecosystem

00:39:13,119 --> 00:39:16,320
that's definitely getting close to the

00:39:14,560 --> 00:39:18,320
point where that could be

00:39:16,320 --> 00:39:19,920
my recommendation i just think one of

00:39:18,320 --> 00:39:21,920
the challenges there is that there's

00:39:19,920 --> 00:39:23,520
just a lot to that ecosystem and it's a

00:39:21,920 --> 00:39:24,320
little bit complicated to get your head

00:39:23,520 --> 00:39:26,720
around

00:39:24,320 --> 00:39:27,920
the tools and the options at first so

00:39:26,720 --> 00:39:29,119
it's potentially a little bit of a

00:39:27,920 --> 00:39:31,280
challenging

00:39:29,119 --> 00:39:32,320
starting point but as your experience

00:39:31,280 --> 00:39:34,240
grows

00:39:32,320 --> 00:39:36,640
those tools can definitely provide a lot

00:39:34,240 --> 00:39:36,640
of value

00:39:38,320 --> 00:39:42,640
and we're pretty much up on time so i

00:39:40,560 --> 00:39:44,640
gotta wrap up here but um

00:39:42,640 --> 00:39:46,160
also the a lot of what we talked about

00:39:44,640 --> 00:39:49,359
about distributing components

00:39:46,160 --> 00:39:52,240
um is part of you know my ideal workflow

00:39:49,359 --> 00:39:53,119
um you know i'm spoiled by uh you know

00:39:52,240 --> 00:39:54,720
working within

00:39:53,119 --> 00:39:57,359
react projects or other javascript

00:39:54,720 --> 00:39:59,040
frameworks where there's a lot of

00:39:57,359 --> 00:40:00,480
fully packaged components that you can

00:39:59,040 --> 00:40:02,079
easily install

00:40:00,480 --> 00:40:04,320
and then just import them where you need

00:40:02,079 --> 00:40:04,320
them

00:40:05,200 --> 00:40:10,720
so overall i feel like we have a lot of

00:40:07,280 --> 00:40:12,880
these pieces maybe even too many pieces

00:40:10,720 --> 00:40:15,040
but need uh either a little extra magic

00:40:12,880 --> 00:40:16,160
or some best practices to kind of make

00:40:15,040 --> 00:40:17,920
it clearer

00:40:16,160 --> 00:40:19,359
how all these tools can be used together

00:40:17,920 --> 00:40:22,640
to improve the

00:40:19,359 --> 00:40:24,400
general uh component workflow

00:40:22,640 --> 00:40:26,319
so making it easier to package and

00:40:24,400 --> 00:40:28,400
distribute components i think can make

00:40:26,319 --> 00:40:30,160
a big difference and i'm i'm certainly

00:40:28,400 --> 00:40:31,119
eyeing the progress of web components

00:40:30,160 --> 00:40:34,319
there

00:40:31,119 --> 00:40:35,280
um i do continue to think it's important

00:40:34,319 --> 00:40:38,079
to improve

00:40:35,280 --> 00:40:39,119
the ability to handle these types of

00:40:38,079 --> 00:40:41,839
mappings in the

00:40:39,119 --> 00:40:42,960
drupal ui um but as we talked about

00:40:41,839 --> 00:40:44,240
there's been a number of

00:40:42,960 --> 00:40:46,160
interesting developments there that are

00:40:44,240 --> 00:40:49,839
kind of closing that gap

00:40:46,160 --> 00:40:52,240
and also i do think it uh and want to

00:40:49,839 --> 00:40:53,359
see uh the evolution continue in ways to

00:40:52,240 --> 00:40:56,640
automatically discover

00:40:53,359 --> 00:40:58,000
components but overall i

00:40:56,640 --> 00:41:00,240
think we should just all keep building

00:40:58,000 --> 00:41:01,599
amazing looking component-based sites

00:41:00,240 --> 00:41:04,319
using drupal

00:41:01,599 --> 00:41:04,880
and do want to make sure to thank the

00:41:04,319 --> 00:41:06,960
many

00:41:04,880 --> 00:41:08,960
folks that are part of this little mini

00:41:06,960 --> 00:41:11,200
corner of the drupal world

00:41:08,960 --> 00:41:13,839
um and have contributed and created

00:41:11,200 --> 00:41:15,839
these tools and taught me things and i'm

00:41:13,839 --> 00:41:20,079
very happy to just be you know a small

00:41:15,839 --> 00:41:22,160
piece of the puzzle

00:41:20,079 --> 00:41:23,440
speaking of that uh definitely check out

00:41:22,160 --> 00:41:26,560
the contribution day

00:41:23,440 --> 00:41:26,960
on friday um uh there's gonna be i'm

00:41:26,560 --> 00:41:28,800
sure

00:41:26,960 --> 00:41:30,720
a lot of uh interesting component

00:41:28,800 --> 00:41:31,520
related work uh going on and also

00:41:30,720 --> 00:41:35,760
probably thoughts

00:41:31,520 --> 00:41:37,599
around that uh decoupled menu module

00:41:35,760 --> 00:41:38,800
and uh would be very interested in

00:41:37,599 --> 00:41:42,079
anybody's feedback

00:41:38,800 --> 00:41:43,520
if um they there's i believe a

00:41:42,079 --> 00:41:46,000
way to provide feedback on the session

00:41:43,520 --> 00:41:46,400
node um so would appreciate if you could

00:41:46,000 --> 00:41:49,119
rate

00:41:46,400 --> 00:41:51,280
and provide your thoughts and i know

00:41:49,119 --> 00:41:53,280
we're a little tight on time

00:41:51,280 --> 00:41:56,240
but hopefully i can jump over to a

00:41:53,280 --> 00:41:56,240
couple of the questions

00:41:56,400 --> 00:42:00,079
and if there's anything left over i'll

00:41:58,000 --> 00:42:02,560
also um

00:42:00,079 --> 00:42:04,640
i can answer them in the uh on-air app

00:42:02,560 --> 00:42:08,800
but it looks like there's just a couple

00:42:04,640 --> 00:42:11,119
um so uh tom asks do you think the uh

00:42:08,800 --> 00:42:14,000
ui patterns module is still relevant

00:42:11,119 --> 00:42:16,400
with all that layout api stuff in core

00:42:14,000 --> 00:42:17,599
that's a good question i do uh think

00:42:16,400 --> 00:42:20,960
that it is still

00:42:17,599 --> 00:42:22,560
uh relevant uh i don't know if this is

00:42:20,960 --> 00:42:23,920
what you're getting at but it would be

00:42:22,560 --> 00:42:25,280
it would be nice if some of those things

00:42:23,920 --> 00:42:27,040
could if there was a way that some of

00:42:25,280 --> 00:42:29,839
those things could consolidate

00:42:27,040 --> 00:42:32,160
but i still think that ui patterns

00:42:29,839 --> 00:42:34,960
provides a number of tools and

00:42:32,160 --> 00:42:36,319
a little bit of a more component focused

00:42:34,960 --> 00:42:37,920
approach

00:42:36,319 --> 00:42:39,520
and does some things that layout builder

00:42:37,920 --> 00:42:41,680
can't so

00:42:39,520 --> 00:42:42,720
things like the component blocks module

00:42:41,680 --> 00:42:46,800
that we talked about

00:42:42,720 --> 00:42:49,680
it makes it really really easy to have

00:42:46,800 --> 00:42:52,240
components that can be easily used with

00:42:49,680 --> 00:42:54,640
layout builder

00:42:52,240 --> 00:42:56,640
so yeah i would i would look

00:42:54,640 --> 00:42:59,839
specifically at ui patterns with

00:42:56,640 --> 00:43:00,960
that component blocks module and that is

00:42:59,839 --> 00:43:04,400
the best example of

00:43:00,960 --> 00:43:07,280
things that those tools together

00:43:04,400 --> 00:43:08,000
can do that layout builder really can't

00:43:07,280 --> 00:43:11,599
um

00:43:08,000 --> 00:43:12,640
or at least can't easily and my slides

00:43:11,599 --> 00:43:15,359
uh

00:43:12,640 --> 00:43:16,960
there um there was a bitly link at the

00:43:15,359 --> 00:43:21,839
beginning

00:43:16,960 --> 00:43:21,839
um let me see if i can get over to that

00:43:23,599 --> 00:43:27,520
and i think someone did also post it in

00:43:25,359 --> 00:43:41,839
the chat but bit.ly

00:43:27,520 --> 00:43:41,839
slash component dash int

00:44:46,400 --> 00:44:50,560
uh brian we're still live there's

00:44:49,359 --> 00:44:53,839
someone asking

00:44:50,560 --> 00:44:56,720
john alvin asking uh if you will

00:44:53,839 --> 00:44:57,599
share your slides with us because

00:44:56,720 --> 00:45:00,880
there's lots of

00:44:57,599 --> 00:45:02,560
good stuff in there yep

00:45:00,880 --> 00:45:04,079
uh yeah sorry for the confusion there i

00:45:02,560 --> 00:45:05,839
thought because the screen share uh

00:45:04,079 --> 00:45:06,960
dropped out that the session dropped out

00:45:05,839 --> 00:45:10,880
but um

00:45:06,960 --> 00:45:12,079
yeah so i posted them in the chat um

00:45:10,880 --> 00:45:14,160
oh yeah people saying that they could

00:45:12,079 --> 00:45:14,880
hear me it's still early in the morning

00:45:14,160 --> 00:45:18,000
over here

00:45:14,880 --> 00:45:21,280
um yeah i posted the slides uh in

00:45:18,000 --> 00:45:21,680
the the chat it's bit.ly slash component

00:45:21,280 --> 00:45:24,960
dash

00:45:21,680 --> 00:45:28,880
int um also uh follow up on

00:45:24,960 --> 00:45:32,319
on twitter too um

00:45:28,880 --> 00:45:34,079
another question could you share or

00:45:32,319 --> 00:45:36,560
recommend the pattern library tool

00:45:34,079 --> 00:45:37,760
if any you folks are using in some real

00:45:36,560 --> 00:45:41,920
projects

00:45:37,760 --> 00:45:45,920
thanks so um i've been using pattern lab

00:45:41,920 --> 00:45:46,640
for quite a while although recently uh

00:45:45,920 --> 00:45:49,359
i've uh

00:45:46,640 --> 00:45:50,000
used uh storybook on uh some recent

00:45:49,359 --> 00:45:53,359
projects

00:45:50,000 --> 00:45:55,440
and uh that storybook in general

00:45:53,359 --> 00:45:56,480
really seems to be uh gaining a lot of

00:45:55,440 --> 00:45:58,079
momentum

00:45:56,480 --> 00:45:59,520
and i think it might be a little bit

00:45:58,079 --> 00:46:02,480
tough for me to go back to

00:45:59,520 --> 00:46:03,839
pattern lab in some cases and the other

00:46:02,480 --> 00:46:05,599
one of the other big advantages for

00:46:03,839 --> 00:46:07,839
storybook is that it has a

00:46:05,599 --> 00:46:09,599
wide variety of support for the

00:46:07,839 --> 00:46:11,839
different um

00:46:09,599 --> 00:46:12,640
javascript frameworks um so it's going

00:46:11,839 --> 00:46:15,040
to work with

00:46:12,640 --> 00:46:17,599
with you know more things and more types

00:46:15,040 --> 00:46:17,599
of projects

00:46:21,599 --> 00:46:27,920
cool uh i think that's all the questions

00:46:25,119 --> 00:46:28,640
thanks everybody for uh for joining the

00:46:27,920 --> 00:46:30,720
talk

00:46:28,640 --> 00:46:32,400
sorry for uh briefly thinking i was

00:46:30,720 --> 00:46:35,040
offline

00:46:32,400 --> 00:46:36,400
um but yeah happy to happy to share

00:46:35,040 --> 00:46:38,400
happy to talk about the stuff

00:46:36,400 --> 00:46:39,839
outside of this session and everybody

00:46:38,400 --> 00:46:43,119
enjoy uh

00:46:39,839 --> 00:46:43,119

YouTube URL: https://www.youtube.com/watch?v=9PqyOT3RsBY


