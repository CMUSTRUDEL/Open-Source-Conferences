Title: MAKERS & BUILDERS - Write code once, run anywhere - Drupal + Flutter   DrupalCon Europe 2020
Publication date: 2021-01-13
Playlist: DrupalCon Europe 2020
Description: 
	With the release of Drupal 9, we have come closer to our goal of being API-first. Decoupled architecture is becoming increasingly popular as it allows greater flexibility and better designs. But even today, the biggest challenge for any project is having to maintain multiple code bases for web and native apps. This is the problem that flutter aims to solve.
Captions: 
	00:00:04,059 --> 00:00:09,889
[Music]

00:00:12,960 --> 00:00:15,920
so

00:00:13,440 --> 00:00:16,960
okay good morning good evening everyone

00:00:15,920 --> 00:00:19,920
thank you for attending

00:00:16,960 --> 00:00:21,039
riot card once run anywhere drupal plus

00:00:19,920 --> 00:00:23,840
flutter

00:00:21,039 --> 00:00:25,599
um i can't check just start your session

00:00:23,840 --> 00:00:29,039
whenever you're ready

00:00:25,599 --> 00:00:31,439
sure hello everyone so today

00:00:29,039 --> 00:00:34,239
we'll be talking about flutter and how

00:00:31,439 --> 00:00:36,160
we can use flutter with drupal

00:00:34,239 --> 00:00:38,399
as the name suggests you can write the

00:00:36,160 --> 00:00:43,280
code once and run it on any platform

00:00:38,399 --> 00:00:45,360
possible so a little bit about me

00:00:43,280 --> 00:00:47,680
my name is akangsha singh i'm a drupal

00:00:45,360 --> 00:00:50,399
engineer at accelerant

00:00:47,680 --> 00:00:51,680
you can find me on twitter or github or

00:00:50,399 --> 00:00:54,000
linkedin

00:00:51,680 --> 00:00:58,239
the code for this the app that we'll be

00:00:54,000 --> 00:01:00,719
building is also available on github

00:00:58,239 --> 00:01:01,440
all right so let's start with what is

00:01:00,719 --> 00:01:03,280
flutter

00:01:01,440 --> 00:01:04,640
since i'm sure most of us already know

00:01:03,280 --> 00:01:07,360
what drupal is

00:01:04,640 --> 00:01:08,080
let's start with what is flutter so

00:01:07,360 --> 00:01:11,760
flutter

00:01:08,080 --> 00:01:13,920
is google's ui toolkit for building apps

00:01:11,760 --> 00:01:15,280
these could be any kind of apps mobile

00:01:13,920 --> 00:01:18,080
apps web apps

00:01:15,280 --> 00:01:18,640
desktop apps any kind of app so it's a

00:01:18,080 --> 00:01:21,759
clause

00:01:18,640 --> 00:01:21,759
cross platform tool

00:01:23,119 --> 00:01:26,960
what is the good thing about flutter so

00:01:25,840 --> 00:01:28,640
there are a lot of

00:01:26,960 --> 00:01:30,880
cross platform tools available like

00:01:28,640 --> 00:01:32,400
react native but why should you use

00:01:30,880 --> 00:01:35,680
flutter

00:01:32,400 --> 00:01:38,240
so the first one is it's very productive

00:01:35,680 --> 00:01:40,720
it's cross platform the same code can be

00:01:38,240 --> 00:01:43,200
used for your ios app your android app

00:01:40,720 --> 00:01:43,759
for web and this will save you a lot of

00:01:43,200 --> 00:01:47,119
time

00:01:43,759 --> 00:01:50,720
and resources it's very fast

00:01:47,119 --> 00:01:52,799
the performance is great mostly

00:01:50,720 --> 00:01:54,159
this is because of the language we use

00:01:52,799 --> 00:01:57,680
here which is dart

00:01:54,159 --> 00:02:01,439
so dart compiles into native code and

00:01:57,680 --> 00:02:04,240
if you know like web apps

00:02:01,439 --> 00:02:06,000
android and ios apps use oem widgets

00:02:04,240 --> 00:02:08,800
which are platform specific widgets

00:02:06,000 --> 00:02:10,080
but flutter has its own widgets which

00:02:08,800 --> 00:02:11,920
means that there is very less

00:02:10,080 --> 00:02:14,160
communication between the app and the

00:02:11,920 --> 00:02:17,040
platform

00:02:14,160 --> 00:02:20,080
so flutter says that it is the only

00:02:17,040 --> 00:02:22,720
mobile sdk that provides reactive views

00:02:20,080 --> 00:02:23,520
without requiring a javascript bridge

00:02:22,720 --> 00:02:26,400
this makes it

00:02:23,520 --> 00:02:27,120
extremely fast with very less startup

00:02:26,400 --> 00:02:30,640
time

00:02:27,120 --> 00:02:33,200
and very little performance issues

00:02:30,640 --> 00:02:36,640
flutter the language is also very easy

00:02:33,200 --> 00:02:38,480
to learn

00:02:36,640 --> 00:02:40,959
you can make beautiful flutter apps

00:02:38,480 --> 00:02:42,400
because it has a lot of inbuilt widgets

00:02:40,959 --> 00:02:45,360
which you can use like the material

00:02:42,400 --> 00:02:47,200
library or

00:02:45,360 --> 00:02:49,280
the widgets that i use in native apps

00:02:47,200 --> 00:02:50,000
flutter has a replacement widget for it

00:02:49,280 --> 00:02:52,480
so you can use

00:02:50,000 --> 00:02:54,400
those so without actually knowing a lot

00:02:52,480 --> 00:02:56,480
about it you can still make beautiful

00:02:54,400 --> 00:02:58,959
apps

00:02:56,480 --> 00:03:00,000
also it is compatible with different os

00:02:58,959 --> 00:03:02,159
versions

00:03:00,000 --> 00:03:03,760
with so you will need very little time

00:03:02,159 --> 00:03:06,239
for testing there are very little

00:03:03,760 --> 00:03:08,640
compatibility issues

00:03:06,239 --> 00:03:10,000
and flutter is open source i mean we are

00:03:08,640 --> 00:03:12,080
all here because

00:03:10,000 --> 00:03:13,760
drupal is open source so flutter is

00:03:12,080 --> 00:03:16,400
developed by google

00:03:13,760 --> 00:03:17,200
and both flutter as well as dart are

00:03:16,400 --> 00:03:20,319
open source

00:03:17,200 --> 00:03:22,000
and free to use uh

00:03:20,319 --> 00:03:24,159
there's a lot of community support so if

00:03:22,000 --> 00:03:24,959
you have any issues they can get easily

00:03:24,159 --> 00:03:26,560
resolved

00:03:24,959 --> 00:03:32,319
plus there are a lot of plugins

00:03:26,560 --> 00:03:35,360
available which you can download and use

00:03:32,319 --> 00:03:38,239
now let's talk about the language this

00:03:35,360 --> 00:03:39,599
is based on so dad is an object-oriented

00:03:38,239 --> 00:03:42,879
language

00:03:39,599 --> 00:03:44,000
kind of like c and this is the language

00:03:42,879 --> 00:03:45,920
that we code in

00:03:44,000 --> 00:03:47,840
even though it is a new language and it

00:03:45,920 --> 00:03:50,959
may seem daunting at first

00:03:47,840 --> 00:03:53,200
it's actually quite easy to learn

00:03:50,959 --> 00:03:56,159
so if you know javascript or if you know

00:03:53,200 --> 00:03:59,200
any object oriented programming language

00:03:56,159 --> 00:04:02,400
you will be able to code in dot

00:03:59,200 --> 00:04:05,599
then the documentation is great

00:04:02,400 --> 00:04:07,519
so since google is developing it all the

00:04:05,599 --> 00:04:08,720
features of the language are available

00:04:07,519 --> 00:04:10,560
in detail

00:04:08,720 --> 00:04:14,400
and then you know whenever you are stuck

00:04:10,560 --> 00:04:17,199
you can go there and find out answers

00:04:14,400 --> 00:04:18,239
third is that it is the performance is

00:04:17,199 --> 00:04:21,120
very good

00:04:18,239 --> 00:04:24,000
this is because it include it uses both

00:04:21,120 --> 00:04:26,320
aod and jid so aot is ahead of time and

00:04:24,000 --> 00:04:29,360
jid is just in time compiler

00:04:26,320 --> 00:04:32,240
so it can handle both

00:04:29,360 --> 00:04:32,960
so in aot the dart code can be directly

00:04:32,240 --> 00:04:36,400
converted

00:04:32,960 --> 00:04:39,360
to native machine code and in jit

00:04:36,400 --> 00:04:39,759
it can be compiled exceptionally fast so

00:04:39,360 --> 00:04:42,240
that

00:04:39,759 --> 00:04:45,520
the development cycles are very fast and

00:04:42,240 --> 00:04:45,520
the workflow is amazing

00:04:46,080 --> 00:04:51,840
also it has built-in garbage collection

00:04:49,520 --> 00:04:52,560
and finally if you do not want to use

00:04:51,840 --> 00:04:54,880
any you know

00:04:52,560 --> 00:04:56,960
if you just want to try out dart there

00:04:54,880 --> 00:04:58,960
is a dart pack provided

00:04:56,960 --> 00:05:00,880
there's a dart pad where you can go and

00:04:58,960 --> 00:05:03,280
just try it out without downloading

00:05:00,880 --> 00:05:03,280
anything

00:05:05,440 --> 00:05:09,600
all right so who all are using flutter

00:05:07,680 --> 00:05:12,000
flutter is has become very

00:05:09,600 --> 00:05:13,840
popular recently because of its

00:05:12,000 --> 00:05:16,639
cross-platform applicability

00:05:13,840 --> 00:05:18,160
a lot of users are using it the first of

00:05:16,639 --> 00:05:20,800
course is google

00:05:18,160 --> 00:05:22,320
so google assistant apps are being made

00:05:20,800 --> 00:05:25,360
with flutter and there are

00:05:22,320 --> 00:05:27,520
a whole lot of apps available

00:05:25,360 --> 00:05:30,560
ebay has also built this app with

00:05:27,520 --> 00:05:33,199
flutter then bmw

00:05:30,560 --> 00:05:35,759
square is a plus payment platform so

00:05:33,199 --> 00:05:39,840
they also have built it with

00:05:35,759 --> 00:05:40,479
a flutter also new york times so the ken

00:05:39,840 --> 00:05:43,280
puzzle

00:05:40,479 --> 00:05:44,479
the ken can puzzle it's available for

00:05:43,280 --> 00:05:47,759
android ios

00:05:44,479 --> 00:05:51,120
mac windows web just with one

00:05:47,759 --> 00:05:53,120
code base and realtor.com

00:05:51,120 --> 00:05:55,759
where the listings are updated in real

00:05:53,120 --> 00:05:58,400
time on all platforms

00:05:55,759 --> 00:06:00,479
so you can see almost every major you

00:05:58,400 --> 00:06:02,639
know organization is using flutter these

00:06:00,479 --> 00:06:04,880
days

00:06:02,639 --> 00:06:06,000
now the most important question why

00:06:04,880 --> 00:06:09,280
should you use flutter

00:06:06,000 --> 00:06:10,240
with drupal and the answer is when the

00:06:09,280 --> 00:06:12,800
topic

00:06:10,240 --> 00:06:15,039
write code once run anywhere so we've

00:06:12,800 --> 00:06:17,520
all worked on enterprise level

00:06:15,039 --> 00:06:18,240
drupal applications where there's a huge

00:06:17,520 --> 00:06:20,479
code base

00:06:18,240 --> 00:06:22,800
and then you know suddenly the

00:06:20,479 --> 00:06:26,000
requirement comes that now they need an

00:06:22,800 --> 00:06:27,919
ios app or an android app for it so i

00:06:26,000 --> 00:06:30,160
think the first thing we all think about

00:06:27,919 --> 00:06:32,479
is going for progressive web apps

00:06:30,160 --> 00:06:33,280
but using a native app has a lot of

00:06:32,479 --> 00:06:36,560
advantages

00:06:33,280 --> 00:06:37,120
over progressive web apps because native

00:06:36,560 --> 00:06:39,440
apps

00:06:37,120 --> 00:06:41,360
can be put in the app store they have a

00:06:39,440 --> 00:06:42,960
lot of you know platform specific

00:06:41,360 --> 00:06:44,319
functionalities that you can use which

00:06:42,960 --> 00:06:46,240
you may not be able to use in

00:06:44,319 --> 00:06:48,880
progressive web apps

00:06:46,240 --> 00:06:50,240
also people tend to trust apps more you

00:06:48,880 --> 00:06:54,000
know that they can directly

00:06:50,240 --> 00:06:56,800
download from the app store now drupal

00:06:54,000 --> 00:06:57,520
is a content hub and we all know that

00:06:56,800 --> 00:07:00,639
you know

00:06:57,520 --> 00:07:00,880
drupal does its job really well as you

00:07:00,639 --> 00:07:04,000
know

00:07:00,880 --> 00:07:07,199
a content hub but the ui

00:07:04,000 --> 00:07:08,560
is not that great which is why you know

00:07:07,199 --> 00:07:10,800
the whole decoupled

00:07:08,560 --> 00:07:12,560
approach came in the first place now if

00:07:10,800 --> 00:07:13,120
you're going to decouple your drupal

00:07:12,560 --> 00:07:16,319
instance

00:07:13,120 --> 00:07:19,919
anyway why not do it in such a way

00:07:16,319 --> 00:07:21,680
that it can be used wherever you want

00:07:19,919 --> 00:07:23,120
so with just one code base i mean

00:07:21,680 --> 00:07:25,520
imagine having three different code

00:07:23,120 --> 00:07:27,280
bases for one tiny change

00:07:25,520 --> 00:07:29,840
you will have to change it in three

00:07:27,280 --> 00:07:31,280
different places with flutter it's just

00:07:29,840 --> 00:07:34,080
one place

00:07:31,280 --> 00:07:36,240
and since drupal is already api first i

00:07:34,080 --> 00:07:39,520
mean we are a long way in

00:07:36,240 --> 00:07:40,319
json api is in core now so you can use

00:07:39,520 --> 00:07:42,880
those

00:07:40,319 --> 00:07:46,080
to directly communicate with a flutter

00:07:42,880 --> 00:07:49,840
app and display everything

00:07:46,080 --> 00:07:49,840
oh so yeah it's easy to maintain

00:07:50,080 --> 00:07:55,280
i think those are pretty compelling

00:07:51,759 --> 00:07:58,400
reasons to use flutter without

00:07:55,280 --> 00:08:00,560
all right so let's get back to you know

00:07:58,400 --> 00:08:01,840
since this is a tutorial i'll be

00:08:00,560 --> 00:08:04,319
building an app

00:08:01,840 --> 00:08:06,560
and a flutter app which will be

00:08:04,319 --> 00:08:08,560
connected to drupal so this is what we

00:08:06,560 --> 00:08:11,280
are aiming to build

00:08:08,560 --> 00:08:12,000
it is a simple flutter app with where

00:08:11,280 --> 00:08:16,319
you can log into

00:08:12,000 --> 00:08:19,440
google using your username and password

00:08:16,319 --> 00:08:21,440
now the drupal implementation i will not

00:08:19,440 --> 00:08:22,000
be going into a lot of detail regarding

00:08:21,440 --> 00:08:23,840
this

00:08:22,000 --> 00:08:26,000
but uh yeah so we need a drupal

00:08:23,840 --> 00:08:28,479
environment i have set up a drupal 9

00:08:26,000 --> 00:08:29,360
environment the modules we'll be using

00:08:28,479 --> 00:08:32,719
are rest ui

00:08:29,360 --> 00:08:36,719
jwt and get jwt and login now

00:08:32,719 --> 00:08:39,200
um all right jot so

00:08:36,719 --> 00:08:40,080
for authentication we'll be using jot

00:08:39,200 --> 00:08:42,000
there are a number

00:08:40,080 --> 00:08:43,760
of authentication platforms

00:08:42,000 --> 00:08:44,880
authentication mechanisms that can be

00:08:43,760 --> 00:08:48,000
used

00:08:44,880 --> 00:08:50,320
um and we are going for jot so you know

00:08:48,000 --> 00:08:52,880
why i went for jord is another

00:08:50,320 --> 00:08:54,959
40 hour presentation altogether so i

00:08:52,880 --> 00:08:58,240
will not be going into details

00:08:54,959 --> 00:09:01,600
but uh so jot is a you know

00:08:58,240 --> 00:09:04,720
rfc 7519 uh

00:09:01,600 --> 00:09:07,760
standard which is used to authenticate

00:09:04,720 --> 00:09:08,959
route services resources so it is

00:09:07,760 --> 00:09:12,640
digitally signed

00:09:08,959 --> 00:09:17,200
it does not contain session information

00:09:12,640 --> 00:09:18,959
and it is a good alternative to others

00:09:17,200 --> 00:09:21,279
we use like oauth because you know

00:09:18,959 --> 00:09:23,440
there's no need to pass sessions

00:09:21,279 --> 00:09:25,120
and credentials again and again to the

00:09:23,440 --> 00:09:27,519
server

00:09:25,120 --> 00:09:30,240
also it's very compact so there's very

00:09:27,519 --> 00:09:34,000
small overhead when you send jot tokens

00:09:30,240 --> 00:09:36,160
in your post request also

00:09:34,000 --> 00:09:37,600
it is self construct so all the

00:09:36,160 --> 00:09:40,320
information that you require

00:09:37,600 --> 00:09:41,519
is already there in the jot payload and

00:09:40,320 --> 00:09:46,320
it works with

00:09:41,519 --> 00:09:49,519
course so

00:09:46,320 --> 00:09:50,000
now why they do not need any session

00:09:49,519 --> 00:09:51,519
data

00:09:50,000 --> 00:09:53,279
to be kept on the server so you do not

00:09:51,519 --> 00:09:55,200
have to maintain that

00:09:53,279 --> 00:09:56,720
and if your application is running on

00:09:55,200 --> 00:09:58,480
multiple servers

00:09:56,720 --> 00:10:01,600
then you do not have to share session

00:09:58,480 --> 00:10:01,600
among all the servers

00:10:02,839 --> 00:10:08,480
um so jot has

00:10:05,440 --> 00:10:09,360
three parts it has a key a header and

00:10:08,480 --> 00:10:12,320
you know a

00:10:09,360 --> 00:10:14,160
um an expiry date which is what we'll be

00:10:12,320 --> 00:10:15,839
using so there is

00:10:14,160 --> 00:10:17,519
an alpha i think there's an alpha

00:10:15,839 --> 00:10:20,640
version for drupal

00:10:17,519 --> 00:10:21,680
which we will be using i will quickly

00:10:20,640 --> 00:10:24,800
show you this

00:10:21,680 --> 00:10:27,839
so that oh share

00:10:24,800 --> 00:10:33,839
all right so this is my drupal instance

00:10:27,839 --> 00:10:33,839
i will log in here

00:10:37,600 --> 00:10:40,959
so so

00:10:43,440 --> 00:10:48,480
i have set up so the jot key has been

00:10:46,800 --> 00:10:49,120
set up here which you can set up and

00:10:48,480 --> 00:10:52,320
then

00:10:49,120 --> 00:10:55,920
once you have that you can issue

00:10:52,320 --> 00:11:01,839
jot tokens and then verify them

00:10:55,920 --> 00:11:04,079
oh all right

00:11:01,839 --> 00:11:05,760
jwt authentication so here you can

00:11:04,079 --> 00:11:07,120
create your own key it depends on the

00:11:05,760 --> 00:11:10,079
key module

00:11:07,120 --> 00:11:12,560
and here i have used an algorithm and i

00:11:10,079 --> 00:11:15,040
have defined a key that needs to be used

00:11:12,560 --> 00:11:16,720
that's pretty much it also the rest

00:11:15,040 --> 00:11:17,519
module needs to be enabled since we'll

00:11:16,720 --> 00:11:21,360
be using the

00:11:17,519 --> 00:11:25,279
rest endpoint now

00:11:21,360 --> 00:11:25,279
if we go back to this

00:11:25,519 --> 00:11:29,519
all right uh the endpoints that we will

00:11:28,160 --> 00:11:31,600
be using are the default

00:11:29,519 --> 00:11:35,200
user login endpoint and for logout we'll

00:11:31,600 --> 00:11:35,200
be using the user logout endpoint

00:11:36,160 --> 00:11:42,240
so now let's get to the flutter setup

00:11:39,200 --> 00:11:44,079
which i'll be talking about in detail

00:11:42,240 --> 00:11:45,440
so you can download flutter from

00:11:44,079 --> 00:11:48,640
flutter.dev

00:11:45,440 --> 00:11:51,360
or you can directly clone it from git

00:11:48,640 --> 00:11:53,600
once it is installed you can run filter

00:11:51,360 --> 00:11:55,200
doctor to see if there are any problems

00:11:53,600 --> 00:11:57,279
with your installation

00:11:55,200 --> 00:11:59,680
so when you run flutter doctor it will

00:11:57,279 --> 00:12:02,480
show you what all is installed and what

00:11:59,680 --> 00:12:04,560
else needs to be installed

00:12:02,480 --> 00:12:06,399
and finally when everything is done you

00:12:04,560 --> 00:12:08,000
can run which flutter to see

00:12:06,399 --> 00:12:09,760
you know which version of flutter is

00:12:08,000 --> 00:12:11,040
installed and if it is installed

00:12:09,760 --> 00:12:13,920
correctly

00:12:11,040 --> 00:12:15,279
flutter also installs start so you can

00:12:13,920 --> 00:12:18,560
use dart also

00:12:15,279 --> 00:12:20,880
at the same time now

00:12:18,560 --> 00:12:22,480
you can use any editor to build apps

00:12:20,880 --> 00:12:24,399
with flutter

00:12:22,480 --> 00:12:26,480
the ones that are supported and have

00:12:24,399 --> 00:12:29,600
plugins are android studio

00:12:26,480 --> 00:12:30,959
visual studio and emacs uh we will be

00:12:29,600 --> 00:12:33,200
using vs code

00:12:30,959 --> 00:12:34,000
so there's very detailed documentation

00:12:33,200 --> 00:12:39,680
on

00:12:34,000 --> 00:12:41,440
flutter for setting up the editor

00:12:39,680 --> 00:12:44,560
now there are some platform specific

00:12:41,440 --> 00:12:47,839
extra steps that need to be done

00:12:44,560 --> 00:12:51,519
for android you need the android sdk for

00:12:47,839 --> 00:12:54,720
ios you need xcode for web

00:12:51,519 --> 00:12:57,040
you need the flutter beta channel so the

00:12:54,720 --> 00:12:58,720
current stable release of flutter does

00:12:57,040 --> 00:13:01,680
not support web yet

00:12:58,720 --> 00:13:02,000
but the beta channel does so you need to

00:13:01,680 --> 00:13:04,160
run

00:13:02,000 --> 00:13:05,600
the command flutter channel beta to

00:13:04,160 --> 00:13:08,399
change the channel to beta

00:13:05,600 --> 00:13:09,040
and then upgrade it so as to get the

00:13:08,399 --> 00:13:12,639
latest

00:13:09,040 --> 00:13:14,320
code and then you have to enable web

00:13:12,639 --> 00:13:16,240
once that is done you are ready to

00:13:14,320 --> 00:13:20,320
develop applications

00:13:16,240 --> 00:13:22,160
for web ios android

00:13:20,320 --> 00:13:24,240
all right so we'll be creating the

00:13:22,160 --> 00:13:24,560
starter app which is very easy there is

00:13:24,240 --> 00:13:26,160
just

00:13:24,560 --> 00:13:28,480
one command which you run which is

00:13:26,160 --> 00:13:29,600
flutter create app and the name of your

00:13:28,480 --> 00:13:31,519
app

00:13:29,600 --> 00:13:32,880
and that's it your app will be created

00:13:31,519 --> 00:13:36,240
if you're using

00:13:32,880 --> 00:13:38,560
a code editor then you can just

00:13:36,240 --> 00:13:40,000
for example i'm using vs code so i'll i

00:13:38,560 --> 00:13:43,199
just go to the command palette and

00:13:40,000 --> 00:13:46,079
create a new flutter project

00:13:43,199 --> 00:13:48,240
once the flutter project is created the

00:13:46,079 --> 00:13:50,639
directory structure looks like this

00:13:48,240 --> 00:13:52,639
these are the files that you will see

00:13:50,639 --> 00:13:56,240
the first time you run the create

00:13:52,639 --> 00:13:57,920
flutter app uh let's talk about some of

00:13:56,240 --> 00:13:58,800
these files so there are platform

00:13:57,920 --> 00:14:02,000
specific file

00:13:58,800 --> 00:14:05,360
uh folders android ios and

00:14:02,000 --> 00:14:07,199
web these are where you know uh android

00:14:05,360 --> 00:14:08,560
ios and web related files will be stored

00:14:07,199 --> 00:14:11,360
so when your code

00:14:08,560 --> 00:14:13,920
get runs this is where platform specific

00:14:11,360 --> 00:14:16,399
code will be stored

00:14:13,920 --> 00:14:17,440
uh library this is where the code for

00:14:16,399 --> 00:14:21,160
your app will

00:14:17,440 --> 00:14:22,800
uh will stay uh it already has a

00:14:21,160 --> 00:14:25,600
main.main.dart file

00:14:22,800 --> 00:14:26,320
which contains the beginning code for a

00:14:25,600 --> 00:14:30,320
basic

00:14:26,320 --> 00:14:32,959
app tests here your unit test will stay

00:14:30,320 --> 00:14:35,360
and the pubspec.yaml which is nothing

00:14:32,959 --> 00:14:37,680
but the package.json file which we

00:14:35,360 --> 00:14:38,560
you know it contains the version build

00:14:37,680 --> 00:14:41,920
number

00:14:38,560 --> 00:14:47,040
dependencies uh

00:14:41,920 --> 00:14:47,040
you can import external packages etc

00:14:48,000 --> 00:14:51,519
all right now that our starter app has

00:14:50,160 --> 00:14:53,839
been created

00:14:51,519 --> 00:14:55,680
you can run flutter devices to see which

00:14:53,839 --> 00:14:59,120
devices are connected

00:14:55,680 --> 00:15:02,079
uh us with you can connect your android

00:14:59,120 --> 00:15:02,800
or ios device and run flutter devices

00:15:02,079 --> 00:15:05,360
all the list

00:15:02,800 --> 00:15:06,320
devices will be listed then you can use

00:15:05,360 --> 00:15:09,120
flutter run

00:15:06,320 --> 00:15:09,760
to run your app if you do not define any

00:15:09,120 --> 00:15:12,000
device

00:15:09,760 --> 00:15:13,600
with which to run flutter run by default

00:15:12,000 --> 00:15:16,720
it will run in chrome

00:15:13,600 --> 00:15:18,000
so this is the demo app the one without

00:15:16,720 --> 00:15:19,839
any code the starter app

00:15:18,000 --> 00:15:22,480
this is what it looks like when you

00:15:19,839 --> 00:15:25,519
click on the button the number of

00:15:22,480 --> 00:15:30,079
times it increases

00:15:25,519 --> 00:15:32,880
uh now everything in flutter is a widget

00:15:30,079 --> 00:15:34,560
so text is a widget buttons are widgets

00:15:32,880 --> 00:15:36,880
checkboxes are widgets

00:15:34,560 --> 00:15:40,079
everything is a widget so widgets are

00:15:36,880 --> 00:15:42,959
just pieces of your user interface

00:15:40,079 --> 00:15:43,759
even the entire app itself is a widget

00:15:42,959 --> 00:15:46,399
so

00:15:43,759 --> 00:15:46,959
maybe think of widgets like lego blocks

00:15:46,399 --> 00:15:49,040
so you

00:15:46,959 --> 00:15:51,360
build something big from small lego

00:15:49,040 --> 00:15:53,199
blocks and every little block

00:15:51,360 --> 00:15:54,880
even though it's shaped differently and

00:15:53,199 --> 00:15:58,000
serves a different function

00:15:54,880 --> 00:15:58,560
is still a lego block it could be

00:15:58,000 --> 00:16:01,199
thought of

00:15:58,560 --> 00:16:02,160
as a blueprint so flutter uses these

00:16:01,199 --> 00:16:04,160
blueprints

00:16:02,160 --> 00:16:06,800
to build the view elements and render

00:16:04,160 --> 00:16:09,519
them on your screen

00:16:06,800 --> 00:16:10,160
so widgets are almost anything that

00:16:09,519 --> 00:16:14,880
affects

00:16:10,160 --> 00:16:17,440
how your a howard ui looks or behaves

00:16:14,880 --> 00:16:18,720
so it's not just structural elements

00:16:17,440 --> 00:16:22,000
like buttons text

00:16:18,720 --> 00:16:22,959
images that are widgets but padding is

00:16:22,000 --> 00:16:25,199
also a widget

00:16:22,959 --> 00:16:28,560
columns are widget styles are also

00:16:25,199 --> 00:16:30,399
widgets even gestures or widgets

00:16:28,560 --> 00:16:31,600
now there are two types of widgets in

00:16:30,399 --> 00:16:34,240
flutter

00:16:31,600 --> 00:16:36,160
the first one is stateless widget which

00:16:34,240 --> 00:16:37,199
means they do not have any state they

00:16:36,160 --> 00:16:40,000
remain the same

00:16:37,199 --> 00:16:41,279
always so once this widget code is made

00:16:40,000 --> 00:16:43,440
once this widget is

00:16:41,279 --> 00:16:44,880
rendered this is how it stays there is

00:16:43,440 --> 00:16:48,000
there are no dynamic

00:16:44,880 --> 00:16:49,360
parts to it uh for example icon is

00:16:48,000 --> 00:16:51,120
stateless

00:16:49,360 --> 00:16:52,720
so you can set the icon image when you

00:16:51,120 --> 00:16:56,639
create the icon widget

00:16:52,720 --> 00:16:58,639
and then after that it does not change

00:16:56,639 --> 00:17:02,160
the second type is called a stateful

00:16:58,639 --> 00:17:04,640
widget and this widget state changes

00:17:02,160 --> 00:17:08,160
so it can keep track of the changes and

00:17:04,640 --> 00:17:10,799
update the ui based on those changes

00:17:08,160 --> 00:17:12,000
uh so how do they keep track of changes

00:17:10,799 --> 00:17:14,880
so

00:17:12,000 --> 00:17:15,760
the widget itself is immutable but it

00:17:14,880 --> 00:17:18,400
creates a state

00:17:15,760 --> 00:17:19,520
object and that state object keeps

00:17:18,400 --> 00:17:21,360
tracks of the changes

00:17:19,520 --> 00:17:24,160
in the widget and creates a new widget

00:17:21,360 --> 00:17:25,919
each time anything changes

00:17:24,160 --> 00:17:28,960
so for example whenever you use a

00:17:25,919 --> 00:17:31,200
checkbox you can use a stateful widget

00:17:28,960 --> 00:17:32,080
so that the state of the checkbox goes

00:17:31,200 --> 00:17:35,360
from unchecked

00:17:32,080 --> 00:17:37,120
to checked or vice versa

00:17:35,360 --> 00:17:38,720
another example is an image upload

00:17:37,120 --> 00:17:41,679
widget so

00:17:38,720 --> 00:17:43,200
you may not know what is there or what

00:17:41,679 --> 00:17:45,280
all will be there when the widget is

00:17:43,200 --> 00:17:47,520
created

00:17:45,280 --> 00:17:48,559
but when the widget is created it can

00:17:47,520 --> 00:17:51,679
fetch the image

00:17:48,559 --> 00:17:53,200
and state changes

00:17:51,679 --> 00:17:55,360
now that we understand that you know

00:17:53,200 --> 00:17:58,080
everything is a widget let's

00:17:55,360 --> 00:17:59,600
build our app so this is what we'll be

00:17:58,080 --> 00:18:02,160
building

00:17:59,600 --> 00:18:03,760
if you see there is a container and

00:18:02,160 --> 00:18:06,880
inside the container

00:18:03,760 --> 00:18:10,080
there's a logo two text fields

00:18:06,880 --> 00:18:11,840
and one button now

00:18:10,080 --> 00:18:13,280
everything is a widget so all these

00:18:11,840 --> 00:18:15,520
separate distinct

00:18:13,280 --> 00:18:16,799
things or widgets even the spaces

00:18:15,520 --> 00:18:21,039
between the buttons

00:18:16,799 --> 00:18:21,360
is a widget uh we will try to build this

00:18:21,039 --> 00:18:24,280
now

00:18:21,360 --> 00:18:26,080
so first how we'll go to the

00:18:24,280 --> 00:18:28,160
pubspec.yaml file

00:18:26,080 --> 00:18:30,080
and here we'll add the dependencies of

00:18:28,160 --> 00:18:31,760
things that we'll be using

00:18:30,080 --> 00:18:33,280
so there are some default flutter

00:18:31,760 --> 00:18:34,480
packages that we will be using to

00:18:33,280 --> 00:18:36,880
implement this app

00:18:34,480 --> 00:18:37,679
the first one is http dependency this

00:18:36,880 --> 00:18:43,600
http

00:18:37,679 --> 00:18:46,720
will be to make post or get requests

00:18:43,600 --> 00:18:47,840
uh then we will add folders for our

00:18:46,720 --> 00:18:49,760
assets so we

00:18:47,840 --> 00:18:51,280
we are adding a new font here or we are

00:18:49,760 --> 00:18:54,640
adding images here

00:18:51,280 --> 00:18:57,440
so for that we will create a folder

00:18:54,640 --> 00:18:59,440
once you've added this automatically if

00:18:57,440 --> 00:19:01,520
you are on vs code the moment you save

00:18:59,440 --> 00:19:04,640
it the pubget command will run

00:19:01,520 --> 00:19:07,200
and it will fetch all the uh

00:19:04,640 --> 00:19:07,200
packages

00:19:08,240 --> 00:19:13,520
um we will also use okay so you can also

00:19:11,280 --> 00:19:16,640
define the test dependencies

00:19:13,520 --> 00:19:19,200
if you're using tests here

00:19:16,640 --> 00:19:20,000
now let's build the ui let's see what it

00:19:19,200 --> 00:19:23,520
looks like so

00:19:20,000 --> 00:19:27,600
if you open the main.dart file uh

00:19:23,520 --> 00:19:30,720
it has a void main clause

00:19:27,600 --> 00:19:33,039
now the void main run my app

00:19:30,720 --> 00:19:34,080
this is the entry point of our whole

00:19:33,039 --> 00:19:36,720
program

00:19:34,080 --> 00:19:38,160
so it has to always be defined if you

00:19:36,720 --> 00:19:42,400
want to render something

00:19:38,160 --> 00:19:46,000
on the screen so it's just the es6

00:19:42,400 --> 00:19:48,240
notification to write the function uh

00:19:46,000 --> 00:19:49,440
what this does it it renders the my app

00:19:48,240 --> 00:19:53,200
widget

00:19:49,440 --> 00:19:56,240
and then the entire widget tree

00:19:53,200 --> 00:20:01,919
let us try this out

00:19:56,240 --> 00:20:01,919
so i will share my screen flutter

00:20:05,200 --> 00:20:08,720
so let me make this bigger

00:20:11,039 --> 00:20:15,520
perfect so main.file this is the

00:20:14,400 --> 00:20:18,640
main.dart file

00:20:15,520 --> 00:20:19,280
and if you see here i'm running my app i

00:20:18,640 --> 00:20:22,880
want to show

00:20:19,280 --> 00:20:24,000
a feature of this app which is called

00:20:22,880 --> 00:20:25,520
hot reload

00:20:24,000 --> 00:20:27,120
which is like one of the best features

00:20:25,520 --> 00:20:29,679
of flutter which means

00:20:27,120 --> 00:20:33,120
that everything changes without so my

00:20:29,679 --> 00:20:33,120
app is running here

00:20:33,600 --> 00:20:37,919
this is my app which is running right

00:20:35,919 --> 00:20:42,000
now on the web

00:20:37,919 --> 00:20:46,080
and if i go back to the code

00:20:42,000 --> 00:20:48,320
and i change this title here so let's

00:20:46,080 --> 00:20:52,000
say let's call it flutter login up

00:20:48,320 --> 00:20:54,159
i save it and there will be hot reload

00:20:52,000 --> 00:20:57,120
now if i go back to the app you will see

00:20:54,159 --> 00:20:57,120
that it has changed

00:20:58,000 --> 00:21:03,360
if you see in the title board the title

00:21:01,039 --> 00:21:05,679
of the app has changed

00:21:03,360 --> 00:21:06,400
so you do not need to restart the app

00:21:05,679 --> 00:21:09,440
the state

00:21:06,400 --> 00:21:12,960
is preserved and this is how

00:21:09,440 --> 00:21:16,320
hot reload helps you know in really fast

00:21:12,960 --> 00:21:18,159
programming so in

00:21:16,320 --> 00:21:19,600
your editor you just need to save in

00:21:18,159 --> 00:21:23,039
your terminal you can press

00:21:19,600 --> 00:21:26,000
r and it reloads the code

00:21:23,039 --> 00:21:26,480
so it can be done it reloads not just on

00:21:26,000 --> 00:21:28,400
your

00:21:26,480 --> 00:21:31,200
on chrome your if you have connected to

00:21:28,400 --> 00:21:33,280
your device for example android or ios

00:21:31,200 --> 00:21:35,520
the app is running instantly it will

00:21:33,280 --> 00:21:36,720
reload without reinstalling it or

00:21:35,520 --> 00:21:40,240
without restarting it

00:21:36,720 --> 00:21:40,880
which is really fast so your development

00:21:40,240 --> 00:21:44,000
time

00:21:40,880 --> 00:21:46,000
is reduced drastically i mean one of the

00:21:44,000 --> 00:21:47,039
biggest complaints with drupal is drush

00:21:46,000 --> 00:21:50,240
cr

00:21:47,039 --> 00:21:55,039
so which takes forever so

00:21:50,240 --> 00:21:55,039
compared to that this takes microseconds

00:21:55,280 --> 00:22:00,159
um all right so let's see now

00:21:58,400 --> 00:22:01,919
finally we are getting down to building

00:22:00,159 --> 00:22:04,480
the widgets

00:22:01,919 --> 00:22:06,080
now if you have visual studio you can

00:22:04,480 --> 00:22:08,080
see dev inspector

00:22:06,080 --> 00:22:09,919
and this will show you all the widgets

00:22:08,080 --> 00:22:13,120
in your app

00:22:09,919 --> 00:22:15,200
now every little thing is a widget

00:22:13,120 --> 00:22:16,720
uh what we'll be doing here is as you

00:22:15,200 --> 00:22:18,080
saw there was logo

00:22:16,720 --> 00:22:19,760
there were two text fields and there was

00:22:18,080 --> 00:22:22,799
a button so

00:22:19,760 --> 00:22:24,840
we will be building a logo widget for

00:22:22,799 --> 00:22:29,600
the logo widget

00:22:24,840 --> 00:22:35,200
um okay mmm code

00:22:29,600 --> 00:22:35,200
right so let me show you the widgets

00:22:36,400 --> 00:22:40,720
here so this is the logo widget which

00:22:39,200 --> 00:22:45,280
we'll be using

00:22:40,720 --> 00:22:47,360
it is defined by default in flutter

00:22:45,280 --> 00:22:49,919
i will build every widget separately and

00:22:47,360 --> 00:22:52,640
then i will render them at the end

00:22:49,919 --> 00:22:53,679
so this is the first widget i call it

00:22:52,640 --> 00:22:56,240
logo

00:22:53,679 --> 00:22:58,320
and then i add padding around it and its

00:22:56,240 --> 00:23:01,440
child is the hero widget so hero

00:22:58,320 --> 00:23:04,480
is also defined in drupal and

00:23:01,440 --> 00:23:07,280
sorry in flutter drupal is on my mind

00:23:04,480 --> 00:23:08,480
so it is already defined in flutter and

00:23:07,280 --> 00:23:11,760
then you can just define

00:23:08,480 --> 00:23:12,960
an image here so if you see i have added

00:23:11,760 --> 00:23:15,159
an image

00:23:12,960 --> 00:23:17,760
this image i had already added in

00:23:15,159 --> 00:23:22,240
pubspec.yaml file so now i can just

00:23:17,760 --> 00:23:25,280
upload the image and this will create my

00:23:22,240 --> 00:23:29,039
logo widget the next widget is the

00:23:25,280 --> 00:23:31,520
email and the user password widget

00:23:29,039 --> 00:23:33,039
now for both of these i will be using

00:23:31,520 --> 00:23:36,480
the

00:23:33,039 --> 00:23:39,840
text widget which is called text field

00:23:36,480 --> 00:23:42,559
it has some predefined conde uh

00:23:39,840 --> 00:23:43,840
parameters that you need to def uh set

00:23:42,559 --> 00:23:46,880
so

00:23:43,840 --> 00:23:48,840
controller is used for

00:23:46,880 --> 00:23:50,480
doing something with the value of the

00:23:48,840 --> 00:23:51,840
field because

00:23:50,480 --> 00:23:53,600
you will be using the username and the

00:23:51,840 --> 00:23:55,200
password to log in you will need it in a

00:23:53,600 --> 00:23:58,400
separate function which is why i am

00:23:55,200 --> 00:23:58,400
using a controller here

00:23:58,640 --> 00:24:03,600
the only difference between so hint text

00:24:01,200 --> 00:24:06,880
is what appears as a placeholder

00:24:03,600 --> 00:24:09,200
then i've added padding and a border

00:24:06,880 --> 00:24:10,000
so the only difference between this

00:24:09,200 --> 00:24:12,480
field

00:24:10,000 --> 00:24:13,760
and the password field that we have

00:24:12,480 --> 00:24:15,919
created

00:24:13,760 --> 00:24:16,799
is that the controller name is different

00:24:15,919 --> 00:24:19,120
because

00:24:16,799 --> 00:24:20,559
two different it needs to be handled

00:24:19,120 --> 00:24:21,200
differently like we need to get a

00:24:20,559 --> 00:24:23,760
username

00:24:21,200 --> 00:24:26,000
and a password and the keyboard type is

00:24:23,760 --> 00:24:28,640
different

00:24:26,000 --> 00:24:30,960
so if you see here text input type email

00:24:28,640 --> 00:24:34,080
address

00:24:30,960 --> 00:24:35,360
so this has access to advert is easily

00:24:34,080 --> 00:24:37,440
available if you see

00:24:35,360 --> 00:24:39,120
the keyboard has at the rate easily

00:24:37,440 --> 00:24:42,480
available

00:24:39,120 --> 00:24:44,320
this one i have changed it to text but

00:24:42,480 --> 00:24:46,080
there's an extra function that i've

00:24:44,320 --> 00:24:48,559
added which is called obscure text

00:24:46,080 --> 00:24:50,320
this is for hiding the password so when

00:24:48,559 --> 00:24:52,480
you enter the password it will be hidden

00:24:50,320 --> 00:24:55,440
and it will not be visible

00:24:52,480 --> 00:24:56,640
the final widget is the button widget

00:24:55,440 --> 00:24:58,960
again it is

00:24:56,640 --> 00:25:01,200
wrapped up in a padding widget and then

00:24:58,960 --> 00:25:03,679
i'm use the raised button

00:25:01,200 --> 00:25:04,640
the text here is login let's try

00:25:03,679 --> 00:25:07,360
changing it

00:25:04,640 --> 00:25:07,679
and see how it changes so if i stand to

00:25:07,360 --> 00:25:11,919
sign

00:25:07,679 --> 00:25:15,200
in and if i save this

00:25:11,919 --> 00:25:18,720
let's go to our app so

00:25:15,200 --> 00:25:20,720
the app the name here has changed to

00:25:18,720 --> 00:25:24,320
sign in

00:25:20,720 --> 00:25:24,320
that was extremely fast so

00:25:24,400 --> 00:25:30,159
these are our widgets now uh

00:25:27,760 --> 00:25:32,480
on press so whenever the now finally

00:25:30,159 --> 00:25:35,039
that we have defined the button

00:25:32,480 --> 00:25:37,840
when we press the button what happens

00:25:35,039 --> 00:25:40,320
that also we need to define

00:25:37,840 --> 00:25:42,320
since on the press of a button the state

00:25:40,320 --> 00:25:44,000
of the widget will change

00:25:42,320 --> 00:25:46,400
because we'll be using the username the

00:25:44,000 --> 00:25:49,440
password so on pressed

00:25:46,400 --> 00:25:51,440
i have set the state to

00:25:49,440 --> 00:25:53,520
a function that i have created which we

00:25:51,440 --> 00:25:56,640
will talk about soon

00:25:53,520 --> 00:25:57,039
but yeah i'm setting the state that's

00:25:56,640 --> 00:26:00,080
about

00:25:57,039 --> 00:26:02,559
it and then we put it together so to put

00:26:00,080 --> 00:26:06,880
it together you

00:26:02,559 --> 00:26:07,279
create this i'll talk about later it's

00:26:06,880 --> 00:26:09,520
for

00:26:07,279 --> 00:26:11,200
responsive designs but let's see how i'm

00:26:09,520 --> 00:26:13,600
putting it together right here

00:26:11,200 --> 00:26:14,880
so center in the center of the screen

00:26:13,600 --> 00:26:19,039
then it's a container

00:26:14,880 --> 00:26:22,080
which has padding i've added a box here

00:26:19,039 --> 00:26:23,200
and finally i'm checking if you know we

00:26:22,080 --> 00:26:26,000
are logged in like if

00:26:23,200 --> 00:26:27,279
the login value is available if it is

00:26:26,000 --> 00:26:29,760
not available

00:26:27,279 --> 00:26:30,320
then we are showing all these children

00:26:29,760 --> 00:26:32,799
logo

00:26:30,320 --> 00:26:33,440
email password button login all these

00:26:32,799 --> 00:26:36,960
widgets

00:26:33,440 --> 00:26:38,960
we are showing here in a column

00:26:36,960 --> 00:26:40,320
so inside a column we are showing all

00:26:38,960 --> 00:26:43,520
these things

00:26:40,320 --> 00:26:45,440
and if it is logged in then we get the

00:26:43,520 --> 00:26:49,520
data

00:26:45,440 --> 00:26:51,360
and we pa we pass a new route to it so

00:26:49,520 --> 00:26:53,039
navigator dot push replacement what

00:26:51,360 --> 00:26:55,520
happens is so this is for changing

00:26:53,039 --> 00:26:57,679
screens or going to a different screen

00:26:55,520 --> 00:27:00,159
if it is already logged in then i'm

00:26:57,679 --> 00:27:01,840
opening the dashboard

00:27:00,159 --> 00:27:03,840
so these are the widgets that we have

00:27:01,840 --> 00:27:06,480
built um

00:27:03,840 --> 00:27:08,480
if you see the dashboard widget

00:27:06,480 --> 00:27:11,840
dashboard has a state because

00:27:08,480 --> 00:27:13,919
initially it will be a

00:27:11,840 --> 00:27:17,120
locked out version then once we are

00:27:13,919 --> 00:27:20,559
logged in it will have the name

00:27:17,120 --> 00:27:22,559
and this name will appear it will say

00:27:20,559 --> 00:27:24,080
let's see yeah so another text widget

00:27:22,559 --> 00:27:27,679
i've used and it says hello

00:27:24,080 --> 00:27:29,840
name you are now logged into drupal

00:27:27,679 --> 00:27:31,520
and there's a logout button when you

00:27:29,840 --> 00:27:33,360
push on it it takes you back

00:27:31,520 --> 00:27:36,320
it logs you out and it takes you back to

00:27:33,360 --> 00:27:39,520
the sign in page

00:27:36,320 --> 00:27:42,240
that is it now let's see how all of this

00:27:39,520 --> 00:27:42,240
comes together

00:27:43,520 --> 00:27:50,320
here all right

00:27:46,720 --> 00:27:50,320
oh we've done this

00:27:51,039 --> 00:27:56,159
all right now before moving any further

00:27:53,279 --> 00:27:58,799
let's also talk about responsive designs

00:27:56,159 --> 00:28:01,600
since our app supports all screen sizes

00:27:58,799 --> 00:28:05,120
all possible screen sizes basically so

00:28:01,600 --> 00:28:08,080
it supports web it supports android ios

00:28:05,120 --> 00:28:09,600
and all mobile devices tabs so your app

00:28:08,080 --> 00:28:11,840
needs to be responsive

00:28:09,600 --> 00:28:13,679
and it needs to look good on every

00:28:11,840 --> 00:28:16,320
possible screen size

00:28:13,679 --> 00:28:16,960
so there are two things that you can use

00:28:16,320 --> 00:28:18,720
for this

00:28:16,960 --> 00:28:20,159
and you know the first question that you

00:28:18,720 --> 00:28:22,240
need to answer is

00:28:20,159 --> 00:28:23,840
how can i get the information about the

00:28:22,240 --> 00:28:25,600
size of my screen

00:28:23,840 --> 00:28:26,960
and how can i use it when i'm writing

00:28:25,600 --> 00:28:28,799
the code

00:28:26,960 --> 00:28:30,000
so there are two ways that you can get

00:28:28,799 --> 00:28:33,600
this information

00:28:30,000 --> 00:28:36,960
the first one is media query data

00:28:33,600 --> 00:28:39,120
and this is a an inherited widget

00:28:36,960 --> 00:28:41,120
so it always has to exist in the widget

00:28:39,120 --> 00:28:42,559
tree for the flutter app to work so you

00:28:41,120 --> 00:28:44,799
do not have to worry about

00:28:42,559 --> 00:28:45,760
adding anything specific it's a part of

00:28:44,799 --> 00:28:48,559
material app

00:28:45,760 --> 00:28:50,559
and it has to be there then you can use

00:28:48,559 --> 00:28:53,279
the media query off

00:28:50,559 --> 00:28:54,960
and then you can get the size property

00:28:53,279 --> 00:28:55,360
so you can get the width and height of

00:28:54,960 --> 00:28:58,080
your

00:28:55,360 --> 00:28:59,279
device and you can use it to display

00:28:58,080 --> 00:29:02,159
things accordingly

00:28:59,279 --> 00:29:05,039
the other one is a layout builder so

00:29:02,159 --> 00:29:07,440
layout builder is a builder widget

00:29:05,039 --> 00:29:09,600
and it here you can define box

00:29:07,440 --> 00:29:10,000
constraints like minimum height maximum

00:29:09,600 --> 00:29:12,960
height

00:29:10,000 --> 00:29:14,880
minimum width maximum width so i will

00:29:12,960 --> 00:29:20,080
show you examples of

00:29:14,880 --> 00:29:24,080
how this is let me first show you

00:29:20,080 --> 00:29:24,080
uh sign in

00:29:24,640 --> 00:29:28,159
and i will show you how it looks if it

00:29:26,960 --> 00:29:30,320
is not responsive all right

00:29:28,159 --> 00:29:32,240
so we are logged into drupal it says my

00:29:30,320 --> 00:29:33,760
name and you are now log into drupal and

00:29:32,240 --> 00:29:36,799
a logout button

00:29:33,760 --> 00:29:38,799
now if i increase the size you see this

00:29:36,799 --> 00:29:40,480
is not responsive it does not look good

00:29:38,799 --> 00:29:42,480
at all

00:29:40,480 --> 00:29:44,000
only this is the screen size where it

00:29:42,480 --> 00:29:47,919
looks good

00:29:44,000 --> 00:29:51,200
so if i click on log out now

00:29:47,919 --> 00:29:51,200
if you see this screen

00:29:52,000 --> 00:29:58,799
you see it remains constant with

00:29:55,679 --> 00:29:58,799
the size of the screen

00:30:00,640 --> 00:30:04,399
like this and this is because it is

00:30:03,120 --> 00:30:06,840
responsive

00:30:04,399 --> 00:30:08,960
and what we have done to make it

00:30:06,840 --> 00:30:09,650
responsive

00:30:08,960 --> 00:30:12,320
right here

00:30:09,650 --> 00:30:16,240
[Music]

00:30:12,320 --> 00:30:19,279
signed in dot dot all right so safe area

00:30:16,240 --> 00:30:22,320
safe area we use so that there is

00:30:19,279 --> 00:30:24,720
no it does not fall outside your screen

00:30:22,320 --> 00:30:26,640
no text no widget falls outside your

00:30:24,720 --> 00:30:29,600
screen

00:30:26,640 --> 00:30:32,960
after that i have done one more thing

00:30:29,600 --> 00:30:32,960
here which i want to show

00:30:34,640 --> 00:30:39,440
here so box constraints

00:30:37,760 --> 00:30:41,200
so this is the layout builder which i'm

00:30:39,440 --> 00:30:44,320
using and here

00:30:41,200 --> 00:30:45,600
i have used box constraints and padding

00:30:44,320 --> 00:30:49,360
constraints

00:30:45,600 --> 00:30:51,600
so what ha if max width is less than 500

00:30:49,360 --> 00:30:53,679
then i have different edge insets

00:30:51,600 --> 00:30:56,000
otherwise i have different edges

00:30:53,679 --> 00:30:58,000
and i have set the max width also for

00:30:56,000 --> 00:31:00,080
the box that we are using

00:30:58,000 --> 00:31:02,000
which is why whenever we change it it is

00:31:00,080 --> 00:31:03,600
responsive

00:31:02,000 --> 00:31:05,200
and this is one of the most important

00:31:03,600 --> 00:31:08,480
things to consider here and

00:31:05,200 --> 00:31:10,399
it is pretty easy to do which is why

00:31:08,480 --> 00:31:13,919
you know flutter is amazing for

00:31:10,399 --> 00:31:13,919
developing for any platform

00:31:15,039 --> 00:31:19,600
now finally the authentication function

00:31:17,840 --> 00:31:22,559
to authenticate

00:31:19,600 --> 00:31:25,360
drupal with flutter so we will create a

00:31:22,559 --> 00:31:28,000
new file called api.dart

00:31:25,360 --> 00:31:29,519
and here we will use http the package

00:31:28,000 --> 00:31:32,880
that we installed earlier

00:31:29,519 --> 00:31:34,640
to send an api login request and finally

00:31:32,880 --> 00:31:35,360
we have to save this data that we have

00:31:34,640 --> 00:31:38,640
received

00:31:35,360 --> 00:31:40,000
from drupal which is the username of the

00:31:38,640 --> 00:31:42,640
user

00:31:40,000 --> 00:31:44,720
and a jot token which can later be used

00:31:42,640 --> 00:31:47,760
to authenticate other requests

00:31:44,720 --> 00:31:51,279
so this we used in shared preferences so

00:31:47,760 --> 00:31:54,159
shared preference is a clutter module

00:31:51,279 --> 00:31:55,519
flutter package that provides persistent

00:31:54,159 --> 00:31:58,399
storage for simple data

00:31:55,519 --> 00:31:59,519
simple key value pairs and it uses

00:31:58,399 --> 00:32:01,760
different storages

00:31:59,519 --> 00:32:03,039
in different applications so for example

00:32:01,760 --> 00:32:06,080
on ios

00:32:03,039 --> 00:32:08,640
it uses ns user defaults uh

00:32:06,080 --> 00:32:10,480
same for mac os in android it uses

00:32:08,640 --> 00:32:14,559
shared preferences

00:32:10,480 --> 00:32:17,200
on web it is stored as local storage

00:32:14,559 --> 00:32:18,480
uh you can also use the flutter secure

00:32:17,200 --> 00:32:22,159
storage package

00:32:18,480 --> 00:32:24,880
but it does not support web as of now

00:32:22,159 --> 00:32:27,200
so only it will only work for android

00:32:24,880 --> 00:32:28,080
and ios and not on web this is the only

00:32:27,200 --> 00:32:31,519
one that works

00:32:28,080 --> 00:32:34,640
on everyone so when i make

00:32:31,519 --> 00:32:35,519
a request to slash user slash login if

00:32:34,640 --> 00:32:37,919
you see

00:32:35,519 --> 00:32:39,600
this is the response that i the one at

00:32:37,919 --> 00:32:40,799
the bottom of the screen is what i get

00:32:39,600 --> 00:32:44,320
from postman

00:32:40,799 --> 00:32:45,120
current user csrf token logo token and

00:32:44,320 --> 00:32:48,000
access token

00:32:45,120 --> 00:32:49,919
the access token is a jot string that

00:32:48,000 --> 00:32:51,519
can be used to authenticate further

00:32:49,919 --> 00:32:55,440
request

00:32:51,519 --> 00:32:55,440
and at the top is how i send it to

00:32:55,600 --> 00:33:00,480
how i use it in my flutter app this code

00:32:58,480 --> 00:33:01,519
is actually pretty easy to get you just

00:33:00,480 --> 00:33:04,080
run

00:33:01,519 --> 00:33:06,159
this in postman go to code and copy the

00:33:04,080 --> 00:33:09,360
http code

00:33:06,159 --> 00:33:12,399
and you can place that here

00:33:09,360 --> 00:33:14,559
so api dot dot

00:33:12,399 --> 00:33:15,919
i'm calling the request with my username

00:33:14,559 --> 00:33:18,080
password

00:33:15,919 --> 00:33:19,120
i get the response if the response is

00:33:18,080 --> 00:33:22,480
00:33:19,120 --> 00:33:26,080
then i mean saving it in memory as token

00:33:22,480 --> 00:33:28,320
and as name and finally you know if it's

00:33:26,080 --> 00:33:30,399
successful

00:33:28,320 --> 00:33:32,320
then the response is returned once the

00:33:30,399 --> 00:33:34,480
successful response is returned

00:33:32,320 --> 00:33:36,799
we redirect the user to the dashboard

00:33:34,480 --> 00:33:39,840
page

00:33:36,799 --> 00:33:42,559
this is for saving to save in shared

00:33:39,840 --> 00:33:42,559
preferences

00:33:42,640 --> 00:33:51,120
going back to our app

00:33:45,679 --> 00:33:51,120
share this is how we authenticate

00:33:51,279 --> 00:33:54,799
now running and debugging flutter run is

00:33:54,000 --> 00:33:58,000
the command

00:33:54,799 --> 00:33:59,919
that is used to run the app

00:33:58,000 --> 00:34:01,840
when you run flutter run if you do not

00:33:59,919 --> 00:34:05,200
have any devices connected

00:34:01,840 --> 00:34:07,200
it will run by default in chrome

00:34:05,200 --> 00:34:09,919
but if you have any devices connected

00:34:07,200 --> 00:34:12,480
you can select what device to run it on

00:34:09,919 --> 00:34:13,760
and then you can run it on that device

00:34:12,480 --> 00:34:16,159
just your usb

00:34:13,760 --> 00:34:17,679
debugging needs to be turned on so this

00:34:16,159 --> 00:34:20,879
is what our app looks like

00:34:17,679 --> 00:34:22,079
i just showed you and there are multiple

00:34:20,879 --> 00:34:25,119
ways to debug

00:34:22,079 --> 00:34:26,800
flutter code which are available out of

00:34:25,119 --> 00:34:29,520
the box like you do not need

00:34:26,800 --> 00:34:30,320
a separate package or a plugin to debug

00:34:29,520 --> 00:34:32,800
code

00:34:30,320 --> 00:34:34,399
so you can add break points your code

00:34:32,800 --> 00:34:35,599
execution will stop at that point and

00:34:34,399 --> 00:34:38,720
you can check

00:34:35,599 --> 00:34:40,320
you can also print to console with a

00:34:38,720 --> 00:34:42,639
simple print statement

00:34:40,320 --> 00:34:45,200
you can enable logging for this you have

00:34:42,639 --> 00:34:47,839
to import the developer package

00:34:45,200 --> 00:34:48,800
and then you can uh use it as developer

00:34:47,839 --> 00:34:51,839
dot

00:34:48,800 --> 00:34:52,560
dot log there's also dart analyzer

00:34:51,839 --> 00:34:55,359
available

00:34:52,560 --> 00:34:57,359
if you're using id which shows you

00:34:55,359 --> 00:35:00,720
problems in real time so

00:34:57,359 --> 00:35:04,079
for example this is my code and

00:35:00,720 --> 00:35:07,680
it shows me problems here

00:35:04,079 --> 00:35:10,320
see so this is

00:35:07,680 --> 00:35:11,119
very helpful because then you can you

00:35:10,320 --> 00:35:14,839
know change

00:35:11,119 --> 00:35:16,400
debug code as you write it which is very

00:35:14,839 --> 00:35:19,839
fast

00:35:16,400 --> 00:35:21,200
all right and the most important part

00:35:19,839 --> 00:35:23,920
writing tests

00:35:21,200 --> 00:35:25,680
no development is complete without

00:35:23,920 --> 00:35:28,480
writing tests

00:35:25,680 --> 00:35:28,960
so flutter provides very easy packages

00:35:28,480 --> 00:35:31,520
to

00:35:28,960 --> 00:35:33,920
write this and i'm running out of time

00:35:31,520 --> 00:35:36,320
so i'll be quick about this

00:35:33,920 --> 00:35:37,839
all right so you just need to import the

00:35:36,320 --> 00:35:39,760
flutter test package

00:35:37,839 --> 00:35:41,359
first you have to add the dependency in

00:35:39,760 --> 00:35:44,240
pub spec.yaml

00:35:41,359 --> 00:35:46,079
and then you need to import it for

00:35:44,240 --> 00:35:47,040
running tests you create a void main

00:35:46,079 --> 00:35:49,280
method

00:35:47,040 --> 00:35:50,400
and inside that you create a test file

00:35:49,280 --> 00:35:53,040
test method

00:35:50,400 --> 00:35:54,960
so you can test unit test we write unit

00:35:53,040 --> 00:35:57,599
tests here so

00:35:54,960 --> 00:35:59,760
you can test any particular clause i'll

00:35:57,599 --> 00:36:02,960
be testing the api class here

00:35:59,760 --> 00:36:04,720
so i create an instance of my class i

00:36:02,960 --> 00:36:06,720
try to log in

00:36:04,720 --> 00:36:09,040
the async function is because we have to

00:36:06,720 --> 00:36:11,680
wait for the login to complete

00:36:09,040 --> 00:36:13,359
and then checks so await wait for the

00:36:11,680 --> 00:36:14,560
login to complete with my user

00:36:13,359 --> 00:36:16,400
credentials

00:36:14,560 --> 00:36:17,599
and then once it's login i check that

00:36:16,400 --> 00:36:20,720
the name is

00:36:17,599 --> 00:36:22,400
correct or not and if it is correct so

00:36:20,720 --> 00:36:25,599
this is what it looks like if you want

00:36:22,400 --> 00:36:29,760
to run flutter test you will

00:36:25,599 --> 00:36:32,240
run flutter test the name of the file

00:36:29,760 --> 00:36:34,000
this will run that particular file and

00:36:32,240 --> 00:36:38,640
then if all your tests pass

00:36:34,000 --> 00:36:38,640
it will show that all tests have pass

00:36:38,800 --> 00:36:42,400
that's about it your first app is ready

00:36:41,359 --> 00:36:44,320
this works

00:36:42,400 --> 00:36:45,680
in all platforms so i've tested it on

00:36:44,320 --> 00:36:48,240
android ios

00:36:45,680 --> 00:36:49,520
and web and it works seamlessly on all

00:36:48,240 --> 00:36:52,320
three

00:36:49,520 --> 00:36:54,160
so if i have to make a tiny change say

00:36:52,320 --> 00:36:54,480
the name of the field i do not have to

00:36:54,160 --> 00:36:57,280
go

00:36:54,480 --> 00:36:58,880
and edit it in three places which is

00:36:57,280 --> 00:37:00,560
what is great about flutter

00:36:58,880 --> 00:37:02,560
and you saw how easy it is to send

00:37:00,560 --> 00:37:04,800
requests to drupal now

00:37:02,560 --> 00:37:06,320
further on we can send json requests to

00:37:04,800 --> 00:37:08,800
get data

00:37:06,320 --> 00:37:11,040
you just have to use the jot token in

00:37:08,800 --> 00:37:14,320
the header to authenticate the request

00:37:11,040 --> 00:37:16,400
and that is it your everything will work

00:37:14,320 --> 00:37:19,920
out of the box

00:37:16,400 --> 00:37:23,359
i will stop here i am open to questions

00:37:19,920 --> 00:37:25,040
if there are any and the code is also

00:37:23,359 --> 00:37:26,560
available on github so you can check it

00:37:25,040 --> 00:37:30,079
out

00:37:26,560 --> 00:37:30,079
thank you so much for being here

00:37:31,839 --> 00:37:37,920
i'll go check though thank you very much

00:37:34,960 --> 00:37:38,800
i don't see any questions right now on

00:37:37,920 --> 00:37:42,320
the q a

00:37:38,800 --> 00:37:46,000
but if anyone has any questions please

00:37:42,320 --> 00:37:48,160
go ahead and ask them on the live q a

00:37:46,000 --> 00:37:51,359
chat box

00:37:48,160 --> 00:37:53,599
yeah i don't see anything either yet

00:37:51,359 --> 00:37:53,599
so

00:37:59,839 --> 00:38:05,920
okay i see a question from philip

00:38:03,040 --> 00:38:07,040
can i low code bill apps with drag and

00:38:05,920 --> 00:38:09,680
drop

00:38:07,040 --> 00:38:11,280
uh there so right now there is no

00:38:09,680 --> 00:38:13,520
functionality like that available

00:38:11,280 --> 00:38:15,200
there is a platform where you can drag

00:38:13,520 --> 00:38:17,520
and drop uh

00:38:15,200 --> 00:38:18,640
available by some third party but it's

00:38:17,520 --> 00:38:21,359
not very robust

00:38:18,640 --> 00:38:22,880
i tried it out once and it did not

00:38:21,359 --> 00:38:24,720
really work that well

00:38:22,880 --> 00:38:26,160
but i'm sure it'll since google is

00:38:24,720 --> 00:38:28,320
developing it and they've put

00:38:26,160 --> 00:38:33,839
all their resources behind it so i'm

00:38:28,320 --> 00:38:33,839
sure it'll come soon

00:38:37,760 --> 00:38:44,880
uh drupal commerce with flutter not yet

00:38:41,920 --> 00:38:45,599
but uh that would be an interesting use

00:38:44,880 --> 00:38:48,640
case to try

00:38:45,599 --> 00:38:51,040
definitely payment platform yeah

00:38:48,640 --> 00:38:53,200
i haven't tried yet so yeah i have tried

00:38:51,040 --> 00:38:55,440
the content of cms to get the

00:38:53,200 --> 00:38:56,720
content from there and authentication

00:38:55,440 --> 00:39:01,839
but that would definitely be an

00:38:56,720 --> 00:39:01,839
interesting thing to try

00:39:03,599 --> 00:39:10,960
okay um a few more questions yes

00:39:07,839 --> 00:39:12,960
uh all right so drupal plus flutter

00:39:10,960 --> 00:39:14,880
works amazingly well with cloud database

00:39:12,960 --> 00:39:17,599
in fact drupal's

00:39:14,880 --> 00:39:18,160
firebase is available which is very good

00:39:17,599 --> 00:39:20,480
and

00:39:18,160 --> 00:39:22,079
it has a lot of features that you can

00:39:20,480 --> 00:39:22,880
use so firebase it supports

00:39:22,079 --> 00:39:24,640
out-of-the-box

00:39:22,880 --> 00:39:27,280
there are other cloud-based platforms

00:39:24,640 --> 00:39:29,839
that you can use as well

00:39:27,280 --> 00:39:31,119
about the community the community has

00:39:29,839 --> 00:39:34,560
been growing

00:39:31,119 --> 00:39:35,200
you know it's been growing tremendously

00:39:34,560 --> 00:39:38,400
in the past

00:39:35,200 --> 00:39:40,560
three years i mean if you see flutter

00:39:38,400 --> 00:39:42,240
is if you see the github if you go by

00:39:40,560 --> 00:39:45,760
github comments flutter is the

00:39:42,240 --> 00:39:48,160
third largest used language today and

00:39:45,760 --> 00:39:50,560
frankly ice when i started working on it

00:39:48,160 --> 00:39:54,000
i was talking a lot of places

00:39:50,560 --> 00:39:56,640
and then i just i had to try it out and

00:39:54,000 --> 00:39:59,040
i got answers to every question possible

00:39:56,640 --> 00:40:02,240
in the community and there are plugins

00:39:59,040 --> 00:40:04,079
for basically everything right now

00:40:02,240 --> 00:40:06,319
in fact there is a drupal content or

00:40:04,079 --> 00:40:11,839
same as plugin also available so

00:40:06,319 --> 00:40:11,839
flutter is growing definitely

00:40:12,640 --> 00:40:17,119
um i think there's another one about

00:40:14,720 --> 00:40:21,280
cloud database platform

00:40:17,119 --> 00:40:21,280
i have answered that okay

00:40:22,640 --> 00:40:29,440
for deploying uh google does offer

00:40:25,920 --> 00:40:30,800
uh a way to deploy on google cloud

00:40:29,440 --> 00:40:33,440
platforms it is

00:40:30,800 --> 00:40:35,200
quite easy and i mean they have very

00:40:33,440 --> 00:40:37,520
detailed documentation

00:40:35,200 --> 00:40:39,520
on how to do it you can also deploy it

00:40:37,520 --> 00:40:40,880
on heroku like i've tried that and it

00:40:39,520 --> 00:40:44,240
works

00:40:40,880 --> 00:40:47,520
on multiple platforms so you mean oh

00:40:44,240 --> 00:40:49,680
so do you mean like on ios on

00:40:47,520 --> 00:40:51,200
the android or do you mean on cloud

00:40:49,680 --> 00:40:54,319
platforms i'm sorry

00:40:51,200 --> 00:40:56,880
but if you mean on applications then

00:40:54,319 --> 00:40:58,400
you have to you know publish it to app

00:40:56,880 --> 00:41:00,160
store but then they're deta there is

00:40:58,400 --> 00:41:07,839
detailed documentation available for

00:41:00,160 --> 00:41:07,839
that as well

00:41:19,359 --> 00:41:22,640
okay a couple more questions we still

00:41:21,520 --> 00:41:27,040
have three minutes so

00:41:22,640 --> 00:41:30,240
yeah so the web version is not a pwa

00:41:27,040 --> 00:41:35,440
it is a default app but it is an

00:41:30,240 --> 00:41:38,400
app it is a web app proper web app and

00:41:35,440 --> 00:41:40,160
it does not use pwa anywhere it has its

00:41:38,400 --> 00:41:41,440
own widgets and it compiles it directly

00:41:40,160 --> 00:41:44,480
to javascript

00:41:41,440 --> 00:41:46,800
or directly to the native application

00:41:44,480 --> 00:41:46,800
code

00:41:46,839 --> 00:41:53,359
uh monitoring an app

00:41:49,760 --> 00:41:55,280
or do you mean analytics or uptime

00:41:53,359 --> 00:41:56,640
for uptime you can use whatever platform

00:41:55,280 --> 00:42:00,880
you're using to

00:41:56,640 --> 00:42:02,480
you know uh host it google's own

00:42:00,880 --> 00:42:04,319
hosting is also pretty cool if you just

00:42:02,480 --> 00:42:06,000
want to try it out for testing which is

00:42:04,319 --> 00:42:17,839
what i've done

00:42:06,000 --> 00:42:17,839
and you can monitor up time there

00:42:34,560 --> 00:42:38,240
okay um

00:42:36,970 --> 00:42:42,400
[Music]

00:42:38,240 --> 00:42:44,480
looks like there are no more questions

00:42:42,400 --> 00:42:46,000
wait thank you for attending if you have

00:42:44,480 --> 00:42:46,960
any more questions i'm available on

00:42:46,000 --> 00:42:49,760
twitter

00:42:46,960 --> 00:42:50,720
or github whatever you know just send me

00:42:49,760 --> 00:42:52,079
a hi

00:42:50,720 --> 00:42:56,400
i'll be happy to answer any more

00:42:52,079 --> 00:42:56,400
questions thank you so much for

00:42:56,839 --> 00:43:01,680
attending

00:42:58,960 --> 00:43:03,040
thank you very much for this amazing

00:43:01,680 --> 00:43:06,400
session

00:43:03,040 --> 00:43:09,200
and thank you for joining

00:43:06,400 --> 00:43:09,200

YouTube URL: https://www.youtube.com/watch?v=hpcTncwEkVc


