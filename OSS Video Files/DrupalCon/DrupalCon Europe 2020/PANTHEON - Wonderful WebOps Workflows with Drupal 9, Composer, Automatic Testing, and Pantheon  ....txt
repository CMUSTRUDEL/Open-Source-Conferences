Title: PANTHEON - Wonderful WebOps Workflows with Drupal 9, Composer, Automatic Testing, and Pantheon  ...
Publication date: 2021-01-13
Playlist: DrupalCon Europe 2020
Description: 
	Join us for a visual journey through a magical development workflow powered by Terminus Build Tools. We start with the maestro of Composer installing the powerhouse that is Drupal 9.1. GitHub is then used to make a pull request which turns to a test suite leveraging Continuous Integration to do visual regression, behavioral, and static code testing. Finally we deploy the code to the Pantheon WebOps platform for production use!
Captions: 
	00:00:04,059 --> 00:00:09,889
[Music]

00:00:12,880 --> 00:00:18,560
we're live okay

00:00:15,120 --> 00:00:20,640
hi welcome to wonderful web ops

00:00:18,560 --> 00:00:24,720
workflows with drupal composer

00:00:20,640 --> 00:00:26,560
automated testing and pantheon

00:00:24,720 --> 00:00:28,080
uh i'm matthew chaney uh developer

00:00:26,560 --> 00:00:31,439
advocate here at the pantheon

00:00:28,080 --> 00:00:34,160
and co-founder i'm fatima

00:00:31,439 --> 00:00:35,920
a developer programs engineer at

00:00:34,160 --> 00:00:38,399
pantheon matt and i are both on the

00:00:35,920 --> 00:00:41,360
developer relations team and today

00:00:38,399 --> 00:00:43,200
we are really excited to go on this

00:00:41,360 --> 00:00:45,840
magical journey of development

00:00:43,200 --> 00:00:45,840
with you

00:00:46,399 --> 00:00:50,079
which is powered by terminus build tools

00:00:48,719 --> 00:00:51,440
we're going to show you how to use

00:00:50,079 --> 00:00:54,000
composer to install

00:00:51,440 --> 00:00:55,600
your drupal site how you can use github

00:00:54,000 --> 00:00:57,280
to make pull requests and set up

00:00:55,600 --> 00:00:58,719
continuous integration

00:00:57,280 --> 00:01:00,879
so that you can do things like visual

00:00:58,719 --> 00:01:02,480
regression or behavioral testing

00:01:00,879 --> 00:01:04,640
and then all of this with your really

00:01:02,480 --> 00:01:07,520
cool site will deploy to the pantheon

00:01:04,640 --> 00:01:09,920
webox platform

00:01:07,520 --> 00:01:11,280
because modern web development is hard

00:01:09,920 --> 00:01:13,119
and complex

00:01:11,280 --> 00:01:14,799
and the kinds of things that you and

00:01:13,119 --> 00:01:16,720
your team needs to do to make a site

00:01:14,799 --> 00:01:18,960
successful online requires a lot of

00:01:16,720 --> 00:01:20,640
moving pieces working together

00:01:18,960 --> 00:01:22,960
and that's part of why we built that

00:01:20,640 --> 00:01:24,720
pantheon is a web ops platform

00:01:22,960 --> 00:01:26,560
that can connect different stakeholders

00:01:24,720 --> 00:01:28,320
designers content editors

00:01:26,560 --> 00:01:30,240
and all make them work together to

00:01:28,320 --> 00:01:32,960
deliver results for you

00:01:30,240 --> 00:01:34,079
online so let's go ahead and take an

00:01:32,960 --> 00:01:36,159
example of a

00:01:34,079 --> 00:01:39,280
you know example city government looking

00:01:36,159 --> 00:01:39,280
to do a website project

00:01:39,360 --> 00:01:44,159
so just last week democity.gov hired a

00:01:42,240 --> 00:01:44,720
development team from the museo de art

00:01:44,159 --> 00:01:46,479
agency

00:01:44,720 --> 00:01:47,840
to build a new site for their city so

00:01:46,479 --> 00:01:49,840
they can create this digital

00:01:47,840 --> 00:01:51,439
rich experience for their citizens to be

00:01:49,840 --> 00:01:53,759
able to do things online

00:01:51,439 --> 00:01:56,000
during the project kickoff our team from

00:01:53,759 --> 00:01:57,439
the museo art agency gets to meet our

00:01:56,000 --> 00:01:59,439
demo city stakeholders

00:01:57,439 --> 00:02:00,880
we have julia our technical lead and her

00:01:59,439 --> 00:02:02,880
developer joseph

00:02:00,880 --> 00:02:04,640
and from the city side we have ashwin

00:02:02,880 --> 00:02:08,000
the director of marketing and alice the

00:02:04,640 --> 00:02:10,000
chief digital officer

00:02:08,000 --> 00:02:12,000
and julia as the technical lead has a

00:02:10,000 --> 00:02:14,160
specific set of requirements and things

00:02:12,000 --> 00:02:15,920
she needs to make the project successful

00:02:14,160 --> 00:02:18,640
she wants to set the project up with a

00:02:15,920 --> 00:02:21,120
modern workflow on a modern platform

00:02:18,640 --> 00:02:23,120
and be able to have the entire process

00:02:21,120 --> 00:02:25,120
run seamlessly so that she can drive

00:02:23,120 --> 00:02:27,200
results on the web

00:02:25,120 --> 00:02:29,200
joseph is a senior developer who wants

00:02:27,200 --> 00:02:30,480
to use best practice tools modern

00:02:29,200 --> 00:02:32,560
development practices

00:02:30,480 --> 00:02:34,840
and coordinate with the rest of the team

00:02:32,560 --> 00:02:36,800
to help meet deliverables and do sprit

00:02:34,840 --> 00:02:39,040
planning

00:02:36,800 --> 00:02:39,840
on the demo city side we have ashwin our

00:02:39,040 --> 00:02:41,599
marketing lead

00:02:39,840 --> 00:02:43,200
and ashwin is really responsible for

00:02:41,599 --> 00:02:44,080
making sure that all of those city

00:02:43,200 --> 00:02:46,560
campaigns

00:02:44,080 --> 00:02:48,000
and online city services like citizens

00:02:46,560 --> 00:02:49,680
paying for a parking ticket

00:02:48,000 --> 00:02:51,040
can happen smoothly and those forms

00:02:49,680 --> 00:02:52,959
won't have any bugs in them

00:02:51,040 --> 00:02:54,160
so it's really his job to test and make

00:02:52,959 --> 00:02:55,760
sure that all of those things are

00:02:54,160 --> 00:02:57,840
functioning correctly

00:02:55,760 --> 00:03:00,000
finally as the chief digital officer

00:02:57,840 --> 00:03:02,239
alice is their main stakeholder

00:03:00,000 --> 00:03:03,040
and the final sign off on all new

00:03:02,239 --> 00:03:05,200
features

00:03:03,040 --> 00:03:07,280
and changes she would like to be able to

00:03:05,200 --> 00:03:08,239
see those previews of new pages before

00:03:07,280 --> 00:03:09,680
they go live

00:03:08,239 --> 00:03:11,599
and have them tested on different

00:03:09,680 --> 00:03:14,080
devices and bandwidths before they're in

00:03:11,599 --> 00:03:15,440
the hands of their citizens

00:03:14,080 --> 00:03:17,840
and there's a reason why all of these

00:03:15,440 --> 00:03:20,480
people are working

00:03:17,840 --> 00:03:22,400
because web ops is a team activity it's

00:03:20,480 --> 00:03:24,560
about having different stakeholders and

00:03:22,400 --> 00:03:25,200
different experiences come together to

00:03:24,560 --> 00:03:27,920
make uh

00:03:25,200 --> 00:03:29,440
internet magic happen presumably a lot

00:03:27,920 --> 00:03:31,120
of you have been on teams where you have

00:03:29,440 --> 00:03:31,440
a lot of different roles and people need

00:03:31,120 --> 00:03:33,440
to be

00:03:31,440 --> 00:03:35,840
coordinating and having a strong

00:03:33,440 --> 00:03:37,280
platform having a set of tools like the

00:03:35,840 --> 00:03:38,480
terminus build tools plug-in we're

00:03:37,280 --> 00:03:40,000
showing off today

00:03:38,480 --> 00:03:42,000
helps to drive that kind of team

00:03:40,000 --> 00:03:44,000
activity and helps to make the group

00:03:42,000 --> 00:03:45,360
effort successful which is sort of the

00:03:44,000 --> 00:03:47,840
name of the game for what we're doing

00:03:45,360 --> 00:03:47,840
here

00:03:48,480 --> 00:03:51,920
and if we look at this in practice for

00:03:50,080 --> 00:03:53,280
our demo city project and team

00:03:51,920 --> 00:03:55,360
we'll start with our technical lead

00:03:53,280 --> 00:03:56,879
julia as a technically julia needs to

00:03:55,360 --> 00:03:58,400
get her new project set up

00:03:56,879 --> 00:04:01,120
and created for her team to start

00:03:58,400 --> 00:04:02,560
working and she wants them to be able to

00:04:01,120 --> 00:04:04,080
collaborate across the different

00:04:02,560 --> 00:04:06,080
disciplines on their team

00:04:04,080 --> 00:04:07,840
use tools like continuous integration

00:04:06,080 --> 00:04:09,599
and automated testing to kind of help

00:04:07,840 --> 00:04:10,480
them focus on the core features that

00:04:09,599 --> 00:04:12,080
they're building

00:04:10,480 --> 00:04:14,319
and what happens is that she finds

00:04:12,080 --> 00:04:15,760
pantheon's terminus build tools plug-in

00:04:14,319 --> 00:04:17,840
and that's exactly what she's looking

00:04:15,760 --> 00:04:20,479
for for the integration and automation

00:04:17,840 --> 00:04:20,479
on her team

00:04:21,519 --> 00:04:24,720
and this is the thing that we're sort of

00:04:23,120 --> 00:04:26,240
advertising and talking about and

00:04:24,720 --> 00:04:28,880
encouraging you all to check out

00:04:26,240 --> 00:04:30,400
terminus build tools is a plug-in for

00:04:28,880 --> 00:04:31,520
the terminus command line tool for

00:04:30,400 --> 00:04:33,199
pantheon

00:04:31,520 --> 00:04:34,960
and it helps you set up all of the

00:04:33,199 --> 00:04:36,960
visual regression testing the b-hat

00:04:34,960 --> 00:04:37,440
testing the composer install the pull

00:04:36,960 --> 00:04:38,880
request

00:04:37,440 --> 00:04:40,639
the kind of features we'll talk about

00:04:38,880 --> 00:04:42,160
today

00:04:40,639 --> 00:04:44,240
and here's the command in practice

00:04:42,160 --> 00:04:46,240
running on our awesome uh terminal

00:04:44,240 --> 00:04:47,440
terminus build project create this is

00:04:46,240 --> 00:04:49,440
all you have to do

00:04:47,440 --> 00:04:50,560
specify something like github for your

00:04:49,440 --> 00:04:53,680
pull requests

00:04:50,560 --> 00:04:54,639
circle ci for test integration give your

00:04:53,680 --> 00:04:57,759
site a name like

00:04:54,639 --> 00:04:58,960
build tools demo define an agency you're

00:04:57,759 --> 00:05:02,720
working for

00:04:58,960 --> 00:05:04,160
pick d78 d9 give your site a name

00:05:02,720 --> 00:05:06,720
and if you have the proper api

00:05:04,160 --> 00:05:08,800
credentials if this stuff is dialed in

00:05:06,720 --> 00:05:10,240
this entire script will run it takes

00:05:08,800 --> 00:05:11,600
about 10 minutes so we won't go through

00:05:10,240 --> 00:05:13,520
the whole thing here

00:05:11,600 --> 00:05:15,039
but it's going to automatically set up a

00:05:13,520 --> 00:05:17,520
github repository

00:05:15,039 --> 00:05:18,720
with your composer file with your drupal

00:05:17,520 --> 00:05:20,080
configuration

00:05:18,720 --> 00:05:22,960
and with any you know place for your

00:05:20,080 --> 00:05:24,000
custom code it'll set up those automatic

00:05:22,960 --> 00:05:26,240
tests b-hat

00:05:24,000 --> 00:05:27,919
visual regression unit tests using

00:05:26,240 --> 00:05:30,160
circle ci to run it

00:05:27,919 --> 00:05:32,080
and it'll back end into pantheon where

00:05:30,160 --> 00:05:33,759
it'll use our multi-dev instances for

00:05:32,080 --> 00:05:35,520
individual pearl requests

00:05:33,759 --> 00:05:36,960
and all of this will be wired together

00:05:35,520 --> 00:05:38,479
and set up from the

00:05:36,960 --> 00:05:40,560
from the beginning and that's one of the

00:05:38,479 --> 00:05:41,600
reasons why julia as the technical lead

00:05:40,560 --> 00:05:44,080
of the project

00:05:41,600 --> 00:05:45,520
wanted to set her team up for success so

00:05:44,080 --> 00:05:49,120
she ran this command

00:05:45,520 --> 00:05:49,120
and got her project going

00:05:50,000 --> 00:05:54,639
so next up uh next on the team is joseph

00:05:52,960 --> 00:05:56,479
and now that the site's all set up and

00:05:54,639 --> 00:05:58,479
this workflow has been put together

00:05:56,479 --> 00:06:00,240
he wants to go ahead and test what that

00:05:58,479 --> 00:06:02,160
developer workflow is like

00:06:00,240 --> 00:06:03,280
he's gonna start building the site using

00:06:02,160 --> 00:06:05,759
get branches

00:06:03,280 --> 00:06:06,400
collaborate with his dev team on pull

00:06:05,759 --> 00:06:08,400
requests

00:06:06,400 --> 00:06:10,240
he really wants them to get familiar

00:06:08,400 --> 00:06:11,440
with working in parallel so he wants to

00:06:10,240 --> 00:06:12,160
be able to assign them different

00:06:11,440 --> 00:06:13,840
features

00:06:12,160 --> 00:06:15,919
and have them iterate quickly on those

00:06:13,840 --> 00:06:16,720
things he's interested in tools like

00:06:15,919 --> 00:06:18,240
composer

00:06:16,720 --> 00:06:20,639
but that's the first time he's working

00:06:18,240 --> 00:06:22,479
with composer and so he's excited to see

00:06:20,639 --> 00:06:24,160
what pantheon stocks can do and what

00:06:22,479 --> 00:06:27,680
dribble docks can do to help him figure

00:06:24,160 --> 00:06:27,680
out and learn that quickly

00:06:27,919 --> 00:06:32,840
you know and composer and pull requests

00:06:29,759 --> 00:06:35,840
are the name of the game here

00:06:32,840 --> 00:06:35,840
um

00:06:37,680 --> 00:06:40,720
try reloading

00:06:41,680 --> 00:06:44,880
and basically what as a developer what

00:06:43,600 --> 00:06:47,199
you can do with build tools

00:06:44,880 --> 00:06:48,319
is you can check out the site have an

00:06:47,199 --> 00:06:49,840
individual uh

00:06:48,319 --> 00:06:51,520
you know branch for each of the features

00:06:49,840 --> 00:06:52,960
that he wants to implement you know we

00:06:51,520 --> 00:06:55,520
can implement a branch for p

00:06:52,960 --> 00:06:56,800
for using panels for page building

00:06:55,520 --> 00:06:59,280
interest a branch

00:06:56,800 --> 00:07:00,880
or if he wants to install the address

00:06:59,280 --> 00:07:04,400
module

00:07:00,880 --> 00:07:05,919
and each of these things exactly and

00:07:04,400 --> 00:07:06,800
like this is the collaboration that's

00:07:05,919 --> 00:07:09,039
really important

00:07:06,800 --> 00:07:10,639
because individual pull requests can be

00:07:09,039 --> 00:07:12,560
created on github

00:07:10,639 --> 00:07:13,840
they can then be tested and they can

00:07:12,560 --> 00:07:17,680
then be pushed through which we'll show

00:07:13,840 --> 00:07:19,840
you in just a minute

00:07:17,680 --> 00:07:21,680
uh so once joseph and his team have you

00:07:19,840 --> 00:07:22,720
know gone ahead and installed some of

00:07:21,680 --> 00:07:24,400
those modules

00:07:22,720 --> 00:07:26,479
gotten comfortable set up those pull

00:07:24,400 --> 00:07:27,280
requests it's time for ashman to start

00:07:26,479 --> 00:07:29,440
testing

00:07:27,280 --> 00:07:30,560
and so he's going to work with his

00:07:29,440 --> 00:07:32,479
developers to

00:07:30,560 --> 00:07:34,160
build some automated testing in order to

00:07:32,479 --> 00:07:35,919
test some of those new features is that

00:07:34,160 --> 00:07:37,599
address module working correctly

00:07:35,919 --> 00:07:39,680
does it have the right zip codes for the

00:07:37,599 --> 00:07:41,680
city and things like that and so he's

00:07:39,680 --> 00:07:43,280
going to use that to gather insights and

00:07:41,680 --> 00:07:45,120
test his assumptions about

00:07:43,280 --> 00:07:46,479
how he thinks citizens will interact

00:07:45,120 --> 00:07:50,000
with the site and what

00:07:46,479 --> 00:07:53,199
impact those features will have

00:07:50,000 --> 00:07:53,199
and testing is really important

00:07:53,280 --> 00:07:56,720
testing's really important for web

00:07:54,800 --> 00:07:58,240
development it's something uh you know i

00:07:56,720 --> 00:07:58,879
get really excited we talk to people

00:07:58,240 --> 00:08:01,120
that have

00:07:58,879 --> 00:08:02,639
have really good tests set up it's not

00:08:01,120 --> 00:08:03,759
always the easiest thing to put in your

00:08:02,639 --> 00:08:05,199
project at the end

00:08:03,759 --> 00:08:07,120
it's something that's often really good

00:08:05,199 --> 00:08:08,560
to start at the beginning and build

00:08:07,120 --> 00:08:09,599
tools helps to provide that as a

00:08:08,560 --> 00:08:12,319
framework

00:08:09,599 --> 00:08:13,759
um it has build tools already ships with

00:08:12,319 --> 00:08:15,599
several b-hat tests

00:08:13,759 --> 00:08:17,599
that'll do behavioral testing for your

00:08:15,599 --> 00:08:18,479
site it ships with visual regression

00:08:17,599 --> 00:08:20,879
tests to do

00:08:18,479 --> 00:08:22,720
uh comparisons on a before after it

00:08:20,879 --> 00:08:23,280
ships with unit tests so it can review

00:08:22,720 --> 00:08:24,879
code

00:08:23,280 --> 00:08:26,319
and it provides you a framework to add

00:08:24,879 --> 00:08:28,639
even more

00:08:26,319 --> 00:08:30,160
so you know these can be extended and

00:08:28,639 --> 00:08:30,960
created as pull requests same as

00:08:30,160 --> 00:08:33,039
everything else

00:08:30,960 --> 00:08:34,959
it's a very powerful framework to get up

00:08:33,039 --> 00:08:37,760
and going quickly with uh industrial

00:08:34,959 --> 00:08:37,760
grade workflow

00:08:38,479 --> 00:08:42,800
once ashwin has gone ahead and kind of

00:08:40,640 --> 00:08:44,640
created some of those b-hat tests

00:08:42,800 --> 00:08:46,480
uh seeing if they're working features

00:08:44,640 --> 00:08:47,200
are looking good everything's done with

00:08:46,480 --> 00:08:49,440
qa

00:08:47,200 --> 00:08:50,959
it's time for alice to really sign off

00:08:49,440 --> 00:08:52,160
on some of these new features and then

00:08:50,959 --> 00:08:54,399
deploy them live

00:08:52,160 --> 00:08:55,360
and so alice really wants to see these

00:08:54,399 --> 00:08:57,519
things uh

00:08:55,360 --> 00:08:59,279
in you know a pseudo-live environment

00:08:57,519 --> 00:09:00,720
she wants to know how to look and feel

00:08:59,279 --> 00:09:02,640
for her citizens

00:09:00,720 --> 00:09:04,399
um and so what buildtools really

00:09:02,640 --> 00:09:05,519
provides here is those multiple pull

00:09:04,399 --> 00:09:07,440
request options

00:09:05,519 --> 00:09:09,360
multi-dubs where you can preview these

00:09:07,440 --> 00:09:11,200
features take a look at them

00:09:09,360 --> 00:09:13,279
so like let's say they're like hey that

00:09:11,200 --> 00:09:14,399
address geolocation module that we

00:09:13,279 --> 00:09:16,399
wanted to roll out

00:09:14,399 --> 00:09:19,920
let's see that on testing and let's see

00:09:16,399 --> 00:09:19,920
what that'll look like and how it'll

00:09:20,839 --> 00:09:24,560
function

00:09:22,880 --> 00:09:25,920
and creating a pull request driven

00:09:24,560 --> 00:09:27,600
workflow

00:09:25,920 --> 00:09:30,399
is a very good plan for your web

00:09:27,600 --> 00:09:32,640
development team this is a screenshot of

00:09:30,399 --> 00:09:34,640
the project that we were showing off

00:09:32,640 --> 00:09:36,880
that we're able to have individual pull

00:09:34,640 --> 00:09:39,120
requests there's four open right now

00:09:36,880 --> 00:09:41,120
doing things like updating the

00:09:39,120 --> 00:09:44,080
underlying composer dependencies

00:09:41,120 --> 00:09:46,080
to update for security adding things

00:09:44,080 --> 00:09:48,160
like the panels module or other kinds of

00:09:46,080 --> 00:09:50,000
landing page functionality

00:09:48,160 --> 00:09:52,080
extending with additional tests the

00:09:50,000 --> 00:09:53,839
actual test coverage of the project

00:09:52,080 --> 00:09:55,120
or adding things like geolocation

00:09:53,839 --> 00:09:56,720
systems

00:09:55,120 --> 00:09:59,600
each of these things has its own pull

00:09:56,720 --> 00:10:00,640
request has its own set of conversation

00:09:59,600 --> 00:10:03,040
around it

00:10:00,640 --> 00:10:04,720
and is driven uh in part by this build

00:10:03,040 --> 00:10:06,079
tools automatic process

00:10:04,720 --> 00:10:08,160
the only thing we had to do to get these

00:10:06,079 --> 00:10:11,279
pull requests is you know commit to a

00:10:08,160 --> 00:10:13,279
branch and open them on github

00:10:11,279 --> 00:10:15,040
then the automation automatically spins

00:10:13,279 --> 00:10:16,959
up those requests pull requests as

00:10:15,040 --> 00:10:19,600
individual environments on pantheon this

00:10:16,959 --> 00:10:20,880
is the pantheon dashboard of course

00:10:19,600 --> 00:10:22,320
and the important thing is that for

00:10:20,880 --> 00:10:23,440
every pull request you have a

00:10:22,320 --> 00:10:26,560
corresponding

00:10:23,440 --> 00:10:28,720
environment php database file system

00:10:26,560 --> 00:10:29,600
that you and your team can review click

00:10:28,720 --> 00:10:31,760
on links

00:10:29,600 --> 00:10:33,360
you know look at the underlying code and

00:10:31,760 --> 00:10:35,760
have that kind of ephemeral easy

00:10:33,360 --> 00:10:39,360
environment to not only review in person

00:10:35,760 --> 00:10:41,920
but also to do automatic tests this is

00:10:39,360 --> 00:10:43,920
if alice wants to send a link to let's

00:10:41,920 --> 00:10:44,720
say the mayor of demo city to check out

00:10:43,920 --> 00:10:46,000
a new filter

00:10:44,720 --> 00:10:48,399
she could just send a link to one of

00:10:46,000 --> 00:10:49,600
those multi-dubs absolutely

00:10:48,399 --> 00:10:51,360
it's the kind of thing where you know

00:10:49,600 --> 00:10:52,800
you could put that in email and it

00:10:51,360 --> 00:10:54,000
already drops it into the the pull

00:10:52,800 --> 00:10:57,440
request on github

00:10:54,000 --> 00:10:58,800
very powerful automatic system

00:10:57,440 --> 00:11:00,480
and each of the thing each of the the

00:10:58,800 --> 00:11:02,720
pull requests before you send it off

00:11:00,480 --> 00:11:04,160
to the mayor or other stakeholders is

00:11:02,720 --> 00:11:05,760
going through an automatic testing

00:11:04,160 --> 00:11:07,440
process ahead of time

00:11:05,760 --> 00:11:08,959
so you'll see here this is the back end

00:11:07,440 --> 00:11:10,959
of the circle ci it's

00:11:08,959 --> 00:11:12,880
automatically set up for you you don't

00:11:10,959 --> 00:11:14,399
even have to look at if you don't want

00:11:12,880 --> 00:11:16,000
but the important thing is that this is

00:11:14,399 --> 00:11:16,880
running the tests all the different

00:11:16,000 --> 00:11:19,040
static tests

00:11:16,880 --> 00:11:20,560
b-hat visual regression and it's

00:11:19,040 --> 00:11:22,320
reporting back to you

00:11:20,560 --> 00:11:23,839
with inside of your own pull request

00:11:22,320 --> 00:11:26,000
this is back on github

00:11:23,839 --> 00:11:26,880
that you have your tests that they have

00:11:26,000 --> 00:11:29,200
passed

00:11:26,880 --> 00:11:30,399
and that you can merge that branch in uh

00:11:29,200 --> 00:11:32,240
automatically

00:11:30,399 --> 00:11:34,399
and it's this kind of flow this kind of

00:11:32,240 --> 00:11:36,640
circular kind of a process where as a

00:11:34,399 --> 00:11:38,399
team you can decide your priorities

00:11:36,640 --> 00:11:40,800
as developers you can create pull

00:11:38,399 --> 00:11:42,560
requests as automation you can do the

00:11:40,800 --> 00:11:44,320
testing to make sure they're good

00:11:42,560 --> 00:11:46,160
and then the stakeholders or the project

00:11:44,320 --> 00:11:48,480
leads can merge those requests

00:11:46,160 --> 00:11:49,200
get that code rolling and come up with

00:11:48,480 --> 00:11:52,480
some new

00:11:49,200 --> 00:11:52,480
and fun things to do

00:11:53,120 --> 00:11:56,320
well it's time for you to get started

00:11:54,800 --> 00:11:58,160
with build tools we have this really

00:11:56,320 --> 00:12:00,079
great docs guide that'll take you

00:11:58,160 --> 00:12:01,839
step by step you know getting started

00:12:00,079 --> 00:12:02,639
with what it is how you can get it set

00:12:01,839 --> 00:12:04,240
up and

00:12:02,639 --> 00:12:06,240
even walk you through creating that

00:12:04,240 --> 00:12:08,880
first pull request

00:12:06,240 --> 00:12:10,480
and how to work with that workflow and

00:12:08,880 --> 00:12:14,160
writing that first b-hat test and

00:12:10,480 --> 00:12:16,079
expanding on what comes out of the box

00:12:14,160 --> 00:12:17,839
so we encourage all of you to you know

00:12:16,079 --> 00:12:20,480
check out terminus build tools

00:12:17,839 --> 00:12:21,519
install it get some api tokens and uh

00:12:20,480 --> 00:12:23,360
have a lot of fun

00:12:21,519 --> 00:12:24,800
doing automatic testing pull requests

00:12:23,360 --> 00:12:26,720
composer install

00:12:24,800 --> 00:12:30,240
and playing around with drupal the

00:12:26,720 --> 00:12:30,240
magical web ops journey

00:12:31,120 --> 00:12:33,920
if you want to chat more about this or

00:12:32,560 --> 00:12:34,639
anything else with thought to invite

00:12:33,920 --> 00:12:36,240
myself

00:12:34,639 --> 00:12:37,760
stop by our pantheon booth we'll be

00:12:36,240 --> 00:12:38,560
hanging out here at the drupalcon all

00:12:37,760 --> 00:12:40,399
week

00:12:38,560 --> 00:12:42,639
and i hope everybody has a lovely

00:12:40,399 --> 00:12:47,839
conference

00:12:42,639 --> 00:12:47,839

YouTube URL: https://www.youtube.com/watch?v=LKiiYHDAbSk


