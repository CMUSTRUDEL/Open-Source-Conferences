Title: CLIENTS & INDUSTRY EXPERIENCES - Drupal loves NoSQL databases or how to serve 1 million entities...
Publication date: 2021-01-21
Playlist: DrupalCon Europe 2020
Description: 
	Drupal loves NoSQL databases or how to serve 1 million entities out of a Drupal website
Captions: 
	00:00:04,059 --> 00:00:09,889
[Music]

00:00:12,880 --> 00:00:16,080
hello everybody and thank you for having

00:00:14,639 --> 00:00:18,400
us i mean so late uh

00:00:16,080 --> 00:00:20,640
yeah at the end of drupalcon almost i

00:00:18,400 --> 00:00:23,920
mean we have the experience tomorrow

00:00:20,640 --> 00:00:26,320
uh today we are going to talk about

00:00:23,920 --> 00:00:28,720
our experience to serve huge amount of

00:00:26,320 --> 00:00:29,279
data out of drupal or more particularly

00:00:28,720 --> 00:00:33,040
how to

00:00:29,279 --> 00:00:36,239
uh how to doing using noise scale

00:00:33,040 --> 00:00:38,800
database um but before uh

00:00:36,239 --> 00:00:40,800
yeah let's introduce ourselves maybe i

00:00:38,800 --> 00:00:42,239
can you can change the slide to the next

00:00:40,800 --> 00:00:45,760
one please

00:00:42,239 --> 00:00:46,079
yes my name is buyan i'm born and raised

00:00:45,760 --> 00:00:48,399
in

00:00:46,079 --> 00:00:50,559
bulgaria and currently i live in france

00:00:48,399 --> 00:00:51,280
where i work as a city of france for uh

00:00:50,559 --> 00:00:56,239
for uh

00:00:51,280 --> 00:00:59,039
for uh ffw um i'm drupaly since 2007.

00:00:56,239 --> 00:01:00,960
i mean and since drupal 5 actually uh

00:00:59,039 --> 00:01:03,199
yeah feel free to reach me after the

00:01:00,960 --> 00:01:04,479
session for any questions that you want

00:01:03,199 --> 00:01:06,880
to you know ask me

00:01:04,479 --> 00:01:08,240
you know i mean any tech questions i'm

00:01:06,880 --> 00:01:11,360
always

00:01:08,240 --> 00:01:14,479
ready to answer and to discuss with you

00:01:11,360 --> 00:01:17,680
and we have engine as well with me

00:01:14,479 --> 00:01:20,240
hello all so i'm engen ilmas

00:01:17,680 --> 00:01:22,960
and i'm based in berlin and work as

00:01:20,240 --> 00:01:26,080
solutions architect at ffw

00:01:22,960 --> 00:01:28,240
i am doing drupal since 2011

00:01:26,080 --> 00:01:29,439
so where i started my bachelor degrees

00:01:28,240 --> 00:01:32,960
and um

00:01:29,439 --> 00:01:36,000
yeah right after drupal 7 came out

00:01:32,960 --> 00:01:38,720
yeah thank you engine let's go to

00:01:36,000 --> 00:01:38,720
the next slide

00:01:39,520 --> 00:01:43,119
yes as you already mentioned we work for

00:01:42,240 --> 00:01:45,520
ffw

00:01:43,119 --> 00:01:46,320
which is a global agency with 23 offices

00:01:45,520 --> 00:01:49,680
around the world

00:01:46,320 --> 00:01:51,680
uh we're uh yeah

00:01:49,680 --> 00:01:53,759
we're the company which has the biggest

00:01:51,680 --> 00:01:54,880
number of actually certified specialist

00:01:53,759 --> 00:01:56,880
worldwide

00:01:54,880 --> 00:02:00,000
but the figure that i like most is that

00:01:56,880 --> 00:02:03,200
we have more than 350 supported projects

00:02:00,000 --> 00:02:06,240
in drupal work and this is thankfully uh

00:02:03,200 --> 00:02:08,319
you know of the fact that ffw uh i mean

00:02:06,240 --> 00:02:09,200
in ffw we managed to make the drupal

00:02:08,319 --> 00:02:12,239
contribution

00:02:09,200 --> 00:02:15,200
part of our our daily work but

00:02:12,239 --> 00:02:15,599
uh not only you know i mean uh what is

00:02:15,200 --> 00:02:18,480
uh

00:02:15,599 --> 00:02:19,040
what is really important uh i mean is

00:02:18,480 --> 00:02:22,080
this

00:02:19,040 --> 00:02:24,720
to think you know uh and to believe that

00:02:22,080 --> 00:02:25,840
a day without a drupal contribution is a

00:02:24,720 --> 00:02:29,040
wasted day

00:02:25,840 --> 00:02:32,080
now uh uh i believe uh that one company

00:02:29,040 --> 00:02:33,120
can becomes a drupal maker company only

00:02:32,080 --> 00:02:36,239
when the people

00:02:33,120 --> 00:02:37,280
in the company have makers mindset at

00:02:36,239 --> 00:02:39,599
this first place

00:02:37,280 --> 00:02:40,720
so if you work in a company which is a

00:02:39,599 --> 00:02:42,640
taker now

00:02:40,720 --> 00:02:44,000
you can change that you know it's really

00:02:42,640 --> 00:02:47,040
up to you but

00:02:44,000 --> 00:02:47,920
yeah this is great thing but uh let's go

00:02:47,040 --> 00:02:50,800
back to uh

00:02:47,920 --> 00:02:52,560
to uh our main topic today this is our

00:02:50,800 --> 00:02:55,120
agenda for today's presentation

00:02:52,560 --> 00:02:56,879
first i will talk about uh you know what

00:02:55,120 --> 00:02:58,560
problems you can solve with nosql

00:02:56,879 --> 00:02:59,360
database and then my colleague engine

00:02:58,560 --> 00:03:03,760
will give you

00:02:59,360 --> 00:03:06,640
some hands-on experience moving forward

00:03:03,760 --> 00:03:07,200
as many of you uh might know drupal can

00:03:06,640 --> 00:03:09,760
uh

00:03:07,200 --> 00:03:10,800
can be extremely database intensive and

00:03:09,760 --> 00:03:13,519
very often

00:03:10,800 --> 00:03:14,319
not the web servers but the database

00:03:13,519 --> 00:03:17,440
behind

00:03:14,319 --> 00:03:20,560
becomes a bottleneck so

00:03:17,440 --> 00:03:23,760
the three main reasons why we need nosql

00:03:20,560 --> 00:03:24,879
either you have a big number of records

00:03:23,760 --> 00:03:27,280
in the database

00:03:24,879 --> 00:03:29,920
or you have a big number of read and

00:03:27,280 --> 00:03:32,879
write operations on the database

00:03:29,920 --> 00:03:34,480
or most likely uh you have both reasons

00:03:32,879 --> 00:03:37,280
in the same time you know

00:03:34,480 --> 00:03:37,920
somebody uh premium from you might ask

00:03:37,280 --> 00:03:40,000
but yeah

00:03:37,920 --> 00:03:40,959
we should be able to solve this problem

00:03:40,000 --> 00:03:43,599
with mysql

00:03:40,959 --> 00:03:44,159
as well right yeah my answer will be yes

00:03:43,599 --> 00:03:46,879
you can

00:03:44,159 --> 00:03:47,840
try until at some extent but on what

00:03:46,879 --> 00:03:51,440
cost you know

00:03:47,840 --> 00:03:53,920
um in fact the infrastructure cost for

00:03:51,440 --> 00:03:54,640
for solving the same problems with my

00:03:53,920 --> 00:03:57,519
scale

00:03:54,640 --> 00:03:59,680
versus nosql could differ like 10 times

00:03:57,519 --> 00:04:02,080
in favor of a nosql solution

00:03:59,680 --> 00:04:02,959
you shouldn't uh understand me wrong for

00:04:02,080 --> 00:04:05,120
sure i mean

00:04:02,959 --> 00:04:06,239
relational database are great i mean

00:04:05,120 --> 00:04:08,319
drupal is not going

00:04:06,239 --> 00:04:09,599
uh i mean shouldn't go away from the

00:04:08,319 --> 00:04:12,080
relational database

00:04:09,599 --> 00:04:13,040
they solve particular problems but when

00:04:12,080 --> 00:04:15,280
it's matter

00:04:13,040 --> 00:04:16,239
for a big data you know a big amount of

00:04:15,280 --> 00:04:19,280
transaction

00:04:16,239 --> 00:04:22,160
no sqo bait nosql databases

00:04:19,280 --> 00:04:23,120
are really the way to go and it's like

00:04:22,160 --> 00:04:25,759
this because

00:04:23,120 --> 00:04:28,960
they're designed to handle exactly these

00:04:25,759 --> 00:04:31,840
type of scenarios

00:04:28,960 --> 00:04:33,680
yeah but let's take a look a real case

00:04:31,840 --> 00:04:35,440
scenario in order to understand the

00:04:33,680 --> 00:04:37,759
problem better

00:04:35,440 --> 00:04:39,600
we have to integrate drupal to a huge

00:04:37,759 --> 00:04:42,000
beam system i mean for this

00:04:39,600 --> 00:04:42,639
who doesn't know what what pin is it

00:04:42,000 --> 00:04:45,759
stands from

00:04:42,639 --> 00:04:46,479
a product information uh management

00:04:45,759 --> 00:04:49,040
system

00:04:46,479 --> 00:04:49,520
and usually it is the single source of

00:04:49,040 --> 00:04:52,320
true

00:04:49,520 --> 00:04:55,120
of the product data of many companies

00:04:52,320 --> 00:04:55,520
the integration requirements were a few

00:04:55,120 --> 00:04:58,800
but

00:04:55,520 --> 00:05:01,120
quite important so more than a

00:04:58,800 --> 00:05:02,800
million product entities that should be

00:05:01,120 --> 00:05:05,039
updated on a daily basis

00:05:02,800 --> 00:05:06,400
the web link the web application has to

00:05:05,039 --> 00:05:10,080
be available 24

00:05:06,400 --> 00:05:12,160
7 because it is a used worldwide

00:05:10,080 --> 00:05:14,160
so performance degradation you know

00:05:12,160 --> 00:05:18,400
during the night or something like this

00:05:14,160 --> 00:05:21,440
this is uh this wasn't really uh

00:05:18,400 --> 00:05:22,800
an option um you know easily um yeah

00:05:21,440 --> 00:05:25,440
this is in uh quotes

00:05:22,800 --> 00:05:26,240
uh to be able to add a new product

00:05:25,440 --> 00:05:27,919
attribute

00:05:26,240 --> 00:05:29,680
if needed you know if you have to change

00:05:27,919 --> 00:05:32,160
the schema of the

00:05:29,680 --> 00:05:32,720
product database and of course to keep

00:05:32,160 --> 00:05:36,080
all the

00:05:32,720 --> 00:05:38,560
you know drupal content man the drupal

00:05:36,080 --> 00:05:42,000
content mesh and seo capabilities

00:05:38,560 --> 00:05:45,120
in in in in place

00:05:42,000 --> 00:05:48,720
so yeah a very interesting task you know

00:05:45,120 --> 00:05:50,880
uh how to how to handle it i mean

00:05:48,720 --> 00:05:52,240
with all these requirements there is one

00:05:50,880 --> 00:05:54,880
obvious solution you know

00:05:52,240 --> 00:05:55,600
the drupal solution uh i mean the very

00:05:54,880 --> 00:05:57,680
well known

00:05:55,600 --> 00:05:59,759
use drupal migrate module to import the

00:05:57,680 --> 00:06:02,319
data on a daily basis you know

00:05:59,759 --> 00:06:04,160
implement incremental updates in order

00:06:02,319 --> 00:06:06,240
to reduce the number of daily uh

00:06:04,160 --> 00:06:08,000
imported products you know in fact this

00:06:06,240 --> 00:06:08,880
solution will tick many of the check

00:06:08,000 --> 00:06:12,479
boxes

00:06:08,880 --> 00:06:15,680
but uh not all you know so think about

00:06:12,479 --> 00:06:16,800
how much time could take to reimport one

00:06:15,680 --> 00:06:18,639
million products

00:06:16,800 --> 00:06:20,000
because of some reason it could be like

00:06:18,639 --> 00:06:22,720
a schema update

00:06:20,000 --> 00:06:24,960
or could be something that we did a

00:06:22,720 --> 00:06:27,440
wrong update or what could be a massive

00:06:24,960 --> 00:06:28,080
update of the of the database you know

00:06:27,440 --> 00:06:30,720
really

00:06:28,080 --> 00:06:31,680
uh many reasons you know okay so do not

00:06:30,720 --> 00:06:33,919
do the math uh

00:06:31,680 --> 00:06:35,199
i mean i will tell you so if you import

00:06:33,919 --> 00:06:38,000
like average

00:06:35,199 --> 00:06:38,400
50 products per second this could take

00:06:38,000 --> 00:06:40,720
like

00:06:38,400 --> 00:06:42,160
almost six hours in case if you have

00:06:40,720 --> 00:06:44,240
like a very serious and

00:06:42,160 --> 00:06:45,520
ex and this is only in case if you have

00:06:44,240 --> 00:06:48,160
very expensive

00:06:45,520 --> 00:06:48,960
expensive infrastructure out there you

00:06:48,160 --> 00:06:51,440
know

00:06:48,960 --> 00:06:52,400
i mean it could be much much worse you

00:06:51,440 --> 00:06:55,120
know uh

00:06:52,400 --> 00:06:56,560
note that one product could could be uh

00:06:55,120 --> 00:06:59,199
consistent usually

00:06:56,560 --> 00:06:59,919
from multiple drupal entities like node

00:06:59,199 --> 00:07:03,680
media

00:06:59,919 --> 00:07:06,160
terms i mean could be many things

00:07:03,680 --> 00:07:07,440
so during the report the web application

00:07:06,160 --> 00:07:09,919
database

00:07:07,440 --> 00:07:12,080
will be heavily bombarded which will

00:07:09,919 --> 00:07:15,680
cause major performance degradation

00:07:12,080 --> 00:07:19,840
so this solution it is not a good option

00:07:15,680 --> 00:07:21,280
so uh yeah so we started to think about

00:07:19,840 --> 00:07:24,000
another solution you know

00:07:21,280 --> 00:07:24,720
uh so there is a big data so we need no

00:07:24,000 --> 00:07:27,039
sql

00:07:24,720 --> 00:07:28,960
obviously keeping the data into the

00:07:27,039 --> 00:07:31,440
drupal mysql database

00:07:28,960 --> 00:07:33,039
wasn't an option so we started thinking

00:07:31,440 --> 00:07:34,960
about external storage

00:07:33,039 --> 00:07:36,479
but in the same time we needed to keep

00:07:34,960 --> 00:07:39,759
old group of goodies as

00:07:36,479 --> 00:07:40,720
seo related content you know uh etc all

00:07:39,759 --> 00:07:43,360
these things which

00:07:40,720 --> 00:07:44,160
are coming uh you know uh in drupal uh

00:07:43,360 --> 00:07:46,879
out of the box

00:07:44,160 --> 00:07:47,440
uh it turns out that the solution is out

00:07:46,879 --> 00:07:48,800
there

00:07:47,440 --> 00:07:50,879
and there is a module for it you know i

00:07:48,800 --> 00:07:53,520
mean yeah i know it sounds trivial but

00:07:50,879 --> 00:07:55,840
it was true you know um it turns out

00:07:53,520 --> 00:08:00,080
that the drupal core entity api

00:07:55,840 --> 00:08:02,400
uh is database agnostic and can work uh

00:08:00,080 --> 00:08:03,360
practically with any data external

00:08:02,400 --> 00:08:06,720
source i mean

00:08:03,360 --> 00:08:09,199
not relational database like everything

00:08:06,720 --> 00:08:10,080
so we took the advantage of all these

00:08:09,199 --> 00:08:13,039
findings

00:08:10,080 --> 00:08:13,840
and we connected uh the pim system and

00:08:13,039 --> 00:08:17,360
drupal

00:08:13,840 --> 00:08:20,080
via elasticsearch used as a middle layer

00:08:17,360 --> 00:08:20,800
now uh i will hand over uh you know uh

00:08:20,080 --> 00:08:23,120
the word to

00:08:20,800 --> 00:08:27,840
engine so he can give us more details

00:08:23,120 --> 00:08:27,840
about what exactly we did

00:08:28,960 --> 00:08:33,680
so how does it work as boyan just

00:08:32,800 --> 00:08:36,399
mentioned

00:08:33,680 --> 00:08:36,719
the pim system indexes all the products

00:08:36,399 --> 00:08:39,599
and

00:08:36,719 --> 00:08:42,320
also the related downloads to the for

00:08:39,599 --> 00:08:45,600
the projects to elasticsearch

00:08:42,320 --> 00:08:47,279
we have an index per type uh so one for

00:08:45,600 --> 00:08:48,720
products and one for the downloads in

00:08:47,279 --> 00:08:52,160
elasticsearch

00:08:48,720 --> 00:08:53,519
and uh before that we defined ourselves

00:08:52,160 --> 00:08:56,720
how the index structure

00:08:53,519 --> 00:08:58,720
is basically per type so at that time

00:08:56,720 --> 00:08:59,360
after buoyancy the architecture for the

00:08:58,720 --> 00:09:01,920
client

00:08:59,360 --> 00:09:02,720
we discovered the external entities

00:09:01,920 --> 00:09:05,760
module

00:09:02,720 --> 00:09:07,839
which was a great fit in this case as it

00:09:05,760 --> 00:09:09,040
allows us to have the external storage

00:09:07,839 --> 00:09:12,480
like in this case

00:09:09,040 --> 00:09:13,920
elasticsearch but still use drupal's

00:09:12,480 --> 00:09:16,240
internal api

00:09:13,920 --> 00:09:18,000
because it is built on top of drupal's

00:09:16,240 --> 00:09:21,200
entity system

00:09:18,000 --> 00:09:24,640
so we can use what we are used to

00:09:21,200 --> 00:09:27,760
for the rest like field api where we can

00:09:24,640 --> 00:09:31,040
map the data from elasticsearch to

00:09:27,760 --> 00:09:32,640
fields these modes views

00:09:31,040 --> 00:09:34,880
which would be in this case backed via

00:09:32,640 --> 00:09:36,000
elasticsearch so the queries will be

00:09:34,880 --> 00:09:40,160
done to elasticsearch

00:09:36,000 --> 00:09:43,279
and the rendering part is done by drupal

00:09:40,160 --> 00:09:46,080
then we have also rest api

00:09:43,279 --> 00:09:48,800
where we could build decoupled

00:09:46,080 --> 00:09:50,880
applications based on this

00:09:48,800 --> 00:09:52,640
also very important is drupal's cache

00:09:50,880 --> 00:09:55,760
layer so we don't

00:09:52,640 --> 00:09:59,120
need to send for every request

00:09:55,760 --> 00:10:03,120
a request to ask search we basically

00:09:59,120 --> 00:10:06,240
cache the entities um locally in drupal

00:10:03,120 --> 00:10:09,600
in memory and

00:10:06,240 --> 00:10:13,040
can also use front-end caches

00:10:09,600 --> 00:10:13,040
like yeah varnish

00:10:13,200 --> 00:10:16,720
the module uses plugins for the storage

00:10:15,360 --> 00:10:19,279
implementation

00:10:16,720 --> 00:10:20,800
so in order to use it with elasticsearch

00:10:19,279 --> 00:10:23,040
uh the only

00:10:20,800 --> 00:10:24,399
thing we needed to was to create a

00:10:23,040 --> 00:10:26,800
storage plugin

00:10:24,399 --> 00:10:28,399
for elasticsearch and we were ready to

00:10:26,800 --> 00:10:31,600
go

00:10:28,399 --> 00:10:33,200
the plugin itself was is using um

00:10:31,600 --> 00:10:34,880
other concept modules in the drupal

00:10:33,200 --> 00:10:37,360
ecosystem like

00:10:34,880 --> 00:10:38,399
search api and elasticsearch connector

00:10:37,360 --> 00:10:41,680
to do the

00:10:38,399 --> 00:10:44,000
queries and requests and uh yeah

00:10:41,680 --> 00:10:47,040
building queries basically

00:10:44,000 --> 00:10:49,760
the same way it would be possible

00:10:47,040 --> 00:10:50,959
to use other external databases which

00:10:49,760 --> 00:10:54,079
offer

00:10:50,959 --> 00:10:58,480
a crud api like radius

00:10:54,079 --> 00:11:00,880
mongodb dynamodb and so on

00:10:58,480 --> 00:11:02,959
so the question is why we took

00:11:00,880 --> 00:11:05,360
elasticsearch

00:11:02,959 --> 00:11:07,760
the first of all elasticsearch is fast

00:11:05,360 --> 00:11:09,920
it is an outstanding search engine

00:11:07,760 --> 00:11:12,000
so we benefit also a lot from its

00:11:09,920 --> 00:11:13,040
capabilities as a search engine for the

00:11:12,000 --> 00:11:15,600
product search

00:11:13,040 --> 00:11:17,680
or a download search so we are able to

00:11:15,600 --> 00:11:19,760
build complex queries which are still

00:11:17,680 --> 00:11:22,320
executed pretty fast

00:11:19,760 --> 00:11:23,440
it has an extendable schema with lot of

00:11:22,320 --> 00:11:25,440
field types

00:11:23,440 --> 00:11:27,760
even with support with for nested

00:11:25,440 --> 00:11:31,279
objects which helps a lot

00:11:27,760 --> 00:11:35,200
for products with hundreds or thousands

00:11:31,279 --> 00:11:37,279
of different attributes we can also

00:11:35,200 --> 00:11:39,120
do some data transformation during

00:11:37,279 --> 00:11:41,920
indexing

00:11:39,120 --> 00:11:42,640
to basically influence how the data

00:11:41,920 --> 00:11:46,240
should be

00:11:42,640 --> 00:11:48,079
searched and find found

00:11:46,240 --> 00:11:51,839
so there are a lot of filters and

00:11:48,079 --> 00:11:55,120
tokenizers available out of the box

00:11:51,839 --> 00:11:57,600
and very important the majority of the

00:11:55,120 --> 00:12:00,000
pim system has basically

00:11:57,600 --> 00:12:02,800
an integration out of the box for

00:12:00,000 --> 00:12:02,800
elasticsearch

00:12:04,480 --> 00:12:09,120
however there were also some challenges

00:12:07,440 --> 00:12:13,120
during the implementation

00:12:09,120 --> 00:12:15,360
which can be or can't be solved easily

00:12:13,120 --> 00:12:17,519
so the first thing is caching validation

00:12:15,360 --> 00:12:21,360
validation as i said we used

00:12:17,519 --> 00:12:25,279
drupal's internal cache entity cache

00:12:21,360 --> 00:12:28,800
and we need to know basically when

00:12:25,279 --> 00:12:28,800
something has changed in the

00:12:29,200 --> 00:12:34,480
in the elastic search so

00:12:32,240 --> 00:12:37,440
for this we introduced a cache

00:12:34,480 --> 00:12:37,440
invalidation queue

00:12:37,600 --> 00:12:41,600
um which is basically an abs simple

00:12:40,959 --> 00:12:44,639
queue

00:12:41,600 --> 00:12:47,839
uh which is filled by the pin

00:12:44,639 --> 00:12:51,680
once in a new product

00:12:47,839 --> 00:12:54,000
is or an existing product updated so

00:12:51,680 --> 00:12:56,800
successfully indexed and

00:12:54,000 --> 00:12:58,720
in elasticsearch and drupal is

00:12:56,800 --> 00:13:01,760
processing that queue

00:12:58,720 --> 00:13:02,720
in order to invalidate the internal

00:13:01,760 --> 00:13:05,279
cache

00:13:02,720 --> 00:13:06,560
for the entity but also thanks to the

00:13:05,279 --> 00:13:10,000
purge module

00:13:06,560 --> 00:13:12,720
for the front-end cache okay

00:13:10,000 --> 00:13:13,920
so we solved the problem for product

00:13:12,720 --> 00:13:17,120
detail pages

00:13:13,920 --> 00:13:19,279
but and also references and other

00:13:17,120 --> 00:13:23,040
content to those products

00:13:19,279 --> 00:13:24,160
but what about listings so we could in

00:13:23,040 --> 00:13:27,360
theory

00:13:24,160 --> 00:13:30,800
invalidate every time when there is a

00:13:27,360 --> 00:13:32,560
one change for an entity also invalidate

00:13:30,800 --> 00:13:36,480
the listing cache

00:13:32,560 --> 00:13:40,320
but this is also done by core by the way

00:13:36,480 --> 00:13:43,440
but um in a frequent use case like this

00:13:40,320 --> 00:13:45,600
that would mean that we constantly uh

00:13:43,440 --> 00:13:47,040
invalidate the cache for the lists and

00:13:45,600 --> 00:13:51,120
also for the search

00:13:47,040 --> 00:13:52,399
so that's not good uh what we did is we

00:13:51,120 --> 00:13:55,600
introduced for that

00:13:52,399 --> 00:13:59,199
delayed caching validation so um

00:13:55,600 --> 00:14:02,639
we basically uh make mark

00:13:59,199 --> 00:14:06,000
that there was a change in the entity

00:14:02,639 --> 00:14:07,680
and in a cron job basically do at least

00:14:06,000 --> 00:14:09,839
every five minutes when there was a

00:14:07,680 --> 00:14:13,600
change and validate the

00:14:09,839 --> 00:14:15,680
um listing cache for sure that

00:14:13,600 --> 00:14:17,199
can be configured differently so it

00:14:15,680 --> 00:14:18,000
doesn't need to be every five minutes

00:14:17,199 --> 00:14:21,760
but that

00:14:18,000 --> 00:14:22,480
was a fit in this case uh the second

00:14:21,760 --> 00:14:25,760
problem is

00:14:22,480 --> 00:14:30,320
multi-lingual products or

00:14:25,760 --> 00:14:33,760
multilingual attributes because uh

00:14:30,320 --> 00:14:37,279
how external entities currently um

00:14:33,760 --> 00:14:40,079
designed or implemented it is not

00:14:37,279 --> 00:14:41,440
uh same as one would have it was drupal

00:14:40,079 --> 00:14:45,120
core

00:14:41,440 --> 00:14:47,920
and so there is a need for

00:14:45,120 --> 00:14:50,800
there is some work needed basically in

00:14:47,920 --> 00:14:53,360
order to solve this issue

00:14:50,800 --> 00:14:56,839
and the third one is the limits

00:14:53,360 --> 00:14:59,760
introduced by elasticsearch itself

00:14:56,839 --> 00:15:02,160
so basically one problem is

00:14:59,760 --> 00:15:03,519
for example that it is not possible to

00:15:02,160 --> 00:15:07,519
paginate through

00:15:03,519 --> 00:15:10,800
results was more than 10k results

00:15:07,519 --> 00:15:13,360
by default um

00:15:10,800 --> 00:15:14,959
you can you need to use basically the

00:15:13,360 --> 00:15:18,560
scroll api

00:15:14,959 --> 00:15:21,279
which would be necessary for example um

00:15:18,560 --> 00:15:23,839
if you want to build the xml sitemap for

00:15:21,279 --> 00:15:23,839
the products

00:15:24,320 --> 00:15:29,839
yeah that's it i will hand over back to

00:15:26,900 --> 00:15:33,040
[Music]

00:15:29,839 --> 00:15:34,639
moya yes uh thank you very much uh

00:15:33,040 --> 00:15:36,079
let's go to the next slide yes

00:15:34,639 --> 00:15:37,759
conclusion and then time for questions

00:15:36,079 --> 00:15:40,000
but first conclusion so

00:15:37,759 --> 00:15:41,600
the conclusion is very simple you know

00:15:40,000 --> 00:15:44,320
drupal obviously is great

00:15:41,600 --> 00:15:45,279
you know the drupal community is great

00:15:44,320 --> 00:15:47,839
as well

00:15:45,279 --> 00:15:49,680
but apart from this what i would be i

00:15:47,839 --> 00:15:50,240
mean we would be happy if you remember

00:15:49,680 --> 00:15:53,360
from

00:15:50,240 --> 00:15:54,399
this presentation the resolution out

00:15:53,360 --> 00:15:56,720
there

00:15:54,399 --> 00:15:57,680
which allows to your drupal application

00:15:56,720 --> 00:16:01,519
to handle

00:15:57,680 --> 00:16:03,600
any data load you know of any size so

00:16:01,519 --> 00:16:05,680
just remember this and we will be very

00:16:03,600 --> 00:16:09,120
happy so now we can go to the

00:16:05,680 --> 00:16:09,839
next slide and the q a session if there

00:16:09,120 --> 00:16:13,600
is any

00:16:09,839 --> 00:16:16,220
questions i don't

00:16:13,600 --> 00:16:17,920
think there are questions actually

00:16:16,220 --> 00:16:20,720
[Music]

00:16:17,920 --> 00:16:20,720
no questions

00:16:21,600 --> 00:16:24,399
okay yeah

00:16:24,720 --> 00:16:28,880
let's wait a little bit more we have

00:16:26,399 --> 00:16:31,279
like a four more minutes

00:16:28,880 --> 00:16:33,759
i see the discussion chat here i mean

00:16:31,279 --> 00:16:37,839
yeah i see some people

00:16:33,759 --> 00:16:37,839
using similar solution

00:16:38,000 --> 00:16:40,560
that's great

00:16:43,680 --> 00:16:50,240
okay 30 more minutes about

00:16:47,199 --> 00:16:54,399
seconds or if not you can

00:16:50,240 --> 00:16:54,399
i will wish you a very nice evening yeah

00:16:55,199 --> 00:17:01,040
yeah i i understand uh yeah my statues

00:16:59,120 --> 00:17:03,360
yeah this is just sharing experience it

00:17:01,040 --> 00:17:05,600
is not a question i'm just waiting uh

00:17:03,360 --> 00:17:07,600
about in the q a part but yeah obviously

00:17:05,600 --> 00:17:10,880
there is no questions

00:17:07,600 --> 00:17:13,600
oh one question from tassus

00:17:10,880 --> 00:17:14,480
uh what do you think maybe potential

00:17:13,600 --> 00:17:18,319
limitation

00:17:14,480 --> 00:17:21,919
of of this approach

00:17:18,319 --> 00:17:24,160
well i mean depends uh

00:17:21,919 --> 00:17:25,679
how big your data is going obviously as

00:17:24,160 --> 00:17:28,079
you can see here even

00:17:25,679 --> 00:17:29,039
elastic searches like a bullet proof

00:17:28,079 --> 00:17:31,200
always you know

00:17:29,039 --> 00:17:32,559
think about big data we hit some limits

00:17:31,200 --> 00:17:34,720
you know

00:17:32,559 --> 00:17:36,400
i mean the limits that we can hit our

00:17:34,720 --> 00:17:38,240
infrastructure limits i mean for

00:17:36,400 --> 00:17:41,120
instance we use uh

00:17:38,240 --> 00:17:43,200
amazon abs uh services about

00:17:41,120 --> 00:17:45,039
elasticsearch about some other bits

00:17:43,200 --> 00:17:46,799
and these are coming with some

00:17:45,039 --> 00:17:47,760
limitations you know there is no like a

00:17:46,799 --> 00:17:49,919
free ones you know

00:17:47,760 --> 00:17:53,039
so the limitations are infrastructure

00:17:49,919 --> 00:17:55,440
limitations so think about it

00:17:53,039 --> 00:17:56,480
uh question from atanas uh is it

00:17:55,440 --> 00:17:58,320
possible uh

00:17:56,480 --> 00:18:00,240
this solution to be implemented with

00:17:58,320 --> 00:18:02,160
solar uh

00:18:00,240 --> 00:18:03,360
absolutely yes i mean so are

00:18:02,160 --> 00:18:06,960
elasticsearch

00:18:03,360 --> 00:18:09,760
yeah they are uh i mean similar

00:18:06,960 --> 00:18:10,720
i mean i don't i don't say the same but

00:18:09,760 --> 00:18:13,360
yeah absolutely

00:18:10,720 --> 00:18:14,320
you can do you can you can do this with

00:18:13,360 --> 00:18:16,400
solar i mean

00:18:14,320 --> 00:18:17,919
the decision we took a elastic search

00:18:16,400 --> 00:18:19,039
actually there are a few but one of them

00:18:17,919 --> 00:18:22,160
was that the pim

00:18:19,039 --> 00:18:24,240
uh system which was pimco uh i mean uh

00:18:22,160 --> 00:18:26,160
they used uh i mean they had like an

00:18:24,240 --> 00:18:29,440
elasticsearch connector and this is why

00:18:26,160 --> 00:18:31,120
we choose uh elasticsearch another

00:18:29,440 --> 00:18:34,000
question from tobias

00:18:31,120 --> 00:18:35,200
when do you use drupal entity cache for

00:18:34,000 --> 00:18:38,720
external entities

00:18:35,200 --> 00:18:42,160
isn't this data stored in

00:18:38,720 --> 00:18:43,760
drupal's mysql database actually

00:18:42,160 --> 00:18:45,520
in fact no entity cache you can

00:18:43,760 --> 00:18:48,640
configure it to be stored in a

00:18:45,520 --> 00:18:51,679
in in the redis or

00:18:48,640 --> 00:18:53,679
memcache you know in memory so we don't

00:18:51,679 --> 00:18:54,880
keep this data in the mysql database but

00:18:53,679 --> 00:18:57,840
we keep it

00:18:54,880 --> 00:18:58,400
in the memory you know uh within radius

00:18:57,840 --> 00:19:01,520
or

00:18:58,400 --> 00:19:02,960
main cache uh next question and actually

00:19:01,520 --> 00:19:04,880
this is the last question because

00:19:02,960 --> 00:19:06,240
we are finishing uh you know the time

00:19:04,880 --> 00:19:09,280
for the presentation

00:19:06,240 --> 00:19:11,600
uh other open source modules available

00:19:09,280 --> 00:19:13,360
from your work can we evaluate on the

00:19:11,600 --> 00:19:15,840
multilingual issue

00:19:13,360 --> 00:19:16,400
so yes external entities this is the

00:19:15,840 --> 00:19:18,080
module

00:19:16,400 --> 00:19:20,000
actually just start playing with this

00:19:18,080 --> 00:19:22,080
module i mean and you i mean and

00:19:20,000 --> 00:19:24,320
this is what you need you know about the

00:19:22,080 --> 00:19:26,240
multilingual issue i will uh yeah

00:19:24,320 --> 00:19:27,840
ask engine to help us because the

00:19:26,240 --> 00:19:29,280
question is can you elaborate on the

00:19:27,840 --> 00:19:32,320
multilingual issue more

00:19:29,280 --> 00:19:36,000
yeah basically uh there is a

00:19:32,320 --> 00:19:39,679
um in in the issue there is an issue

00:19:36,000 --> 00:19:42,799
about that uh where there is also patch

00:19:39,679 --> 00:19:46,320
but what it does uh is just for the rest

00:19:42,799 --> 00:19:49,840
um plugin which is uh

00:19:46,320 --> 00:19:53,280
basically uh came

00:19:49,840 --> 00:19:56,400
comes with an external entity and there

00:19:53,280 --> 00:19:58,080
you can basically when you browse

00:19:56,400 --> 00:19:59,840
or when you request an entity an

00:19:58,080 --> 00:20:02,960
external entity it checks

00:19:59,840 --> 00:20:05,600
what the current language is and gets it

00:20:02,960 --> 00:20:06,000
from there so if you want to use cash it

00:20:05,600 --> 00:20:11,039
doesn't

00:20:06,000 --> 00:20:11,039
work because then you would always

00:20:11,280 --> 00:20:14,960
well it would most probably work because

00:20:13,760 --> 00:20:18,000
the

00:20:14,960 --> 00:20:19,039
entity caches also depending on the

00:20:18,000 --> 00:20:22,080
language

00:20:19,039 --> 00:20:25,679
but if you want to have elastic search

00:20:22,080 --> 00:20:25,679
or if you want to have a

00:20:27,440 --> 00:20:33,679
storage where you where it is

00:20:30,880 --> 00:20:35,840
exactly like in drupal where you load

00:20:33,679 --> 00:20:36,640
the entity and get all the languages at

00:20:35,840 --> 00:20:39,200
once

00:20:36,640 --> 00:20:41,120
it doesn't work because the data is

00:20:39,200 --> 00:20:43,200
saved

00:20:41,120 --> 00:20:45,280
for at least for drupal for the entity

00:20:43,200 --> 00:20:48,480
api as

00:20:45,280 --> 00:20:51,360
language undefined so yeah

00:20:48,480 --> 00:20:52,480
well multilingual and drupal always a

00:20:51,360 --> 00:20:55,200
complex topic

00:20:52,480 --> 00:20:56,640
we can continue uh discussion uh after

00:20:55,200 --> 00:20:58,480
the presentation but yeah

00:20:56,640 --> 00:21:00,320
we are running out of time can you go

00:20:58,480 --> 00:21:02,000
just on the next slide please because

00:21:00,320 --> 00:21:03,760
these are very important slides the

00:21:02,000 --> 00:21:07,200
sprints are tomorrow uh

00:21:03,760 --> 00:21:09,440
i mean yeah please join them uh yes uh

00:21:07,200 --> 00:21:10,400
yeah uh let's don't waste any days

00:21:09,440 --> 00:21:13,120
please uh

00:21:10,400 --> 00:21:13,600
and finally trivia night uh yeah this

00:21:13,120 --> 00:21:15,360
evening

00:21:13,600 --> 00:21:17,120
join the event drupal is nothing about

00:21:15,360 --> 00:21:19,039
social events thank you very much thank

00:21:17,120 --> 00:21:24,720
you engine thank you everybody

00:21:19,039 --> 00:21:24,720

YouTube URL: https://www.youtube.com/watch?v=76oZ2W8-bqg


