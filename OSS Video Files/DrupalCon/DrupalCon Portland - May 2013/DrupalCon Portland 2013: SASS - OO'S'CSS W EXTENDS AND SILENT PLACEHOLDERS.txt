Title: DrupalCon Portland 2013: SASS - OO'S'CSS W EXTENDS AND SILENT PLACEHOLDERS
Publication date: 2013-05-28
Playlist: DrupalCon Portland - May 2013
Description: 
	One of the frustrations of OOCSS concepts is the amount of presentational classes that need to be created and the method of applying them to the DOM.

Sass has looked to address this issue first with Mixins, then Extends, each with their own issues of duplicated code or creation of unnecessary code.

Sass 3.2 introduces the concept of 'silent classes' whereas standardized presentational classes can be created, but are silent until extended in a class used by the application.

BONUS NEW MATERIAL: How to create Placeholder Objects that can be simply applied and inherit values from a global config.
Captions: 
	00:00:00,000 --> 00:00:09,929
hey everyone hey would you Kanye yeah um

00:00:07,259 --> 00:00:12,049
I want to thank everybody showed up for

00:00:09,929 --> 00:00:15,660
my presentation talking about

00:00:12,049 --> 00:00:20,520
object-oriented CSS sass and how to do

00:00:15,660 --> 00:00:22,830
it better in my humble opinion so you're

00:00:20,520 --> 00:00:25,019
a rare portland and we're going to talk

00:00:22,830 --> 00:00:27,560
about SAS so just kind of a quick survey

00:00:25,019 --> 00:00:31,470
of the room how many people here are

00:00:27,560 --> 00:00:34,200
nudists ass raise hands wow that's

00:00:31,470 --> 00:00:37,230
epically awesome ok it's only cool how

00:00:34,200 --> 00:00:40,320
many people here use object-oriented CSS

00:00:37,230 --> 00:00:45,480
type methods all right you are my target

00:00:40,320 --> 00:00:48,899
audience ok this is totally cool um ok

00:00:45,480 --> 00:00:52,530
and jump into this that's me my name is

00:00:48,899 --> 00:00:54,270
Dale sandy I work up in Seattle at a

00:00:52,530 --> 00:00:55,680
place called substantial that

00:00:54,270 --> 00:00:59,010
substantial how many people here from

00:00:55,680 --> 00:01:03,180
Seattle all right we will all get

00:00:59,010 --> 00:01:06,600
together for coffee later so this is me

00:01:03,180 --> 00:01:08,760
on the twitters if you find anything I

00:01:06,600 --> 00:01:10,409
say to be interesting and want to hear

00:01:08,760 --> 00:01:21,869
more about it I tweet about this crap

00:01:10,409 --> 00:01:24,509
all the time I also recorded and for the

00:01:21,869 --> 00:01:27,900
people up in Seattle and for the people

00:01:24,509 --> 00:01:30,840
from Portland who want to drive up to

00:01:27,900 --> 00:01:33,720
Seattle if you're ever so inclined I do

00:01:30,840 --> 00:01:35,729
also run a SAS meetup up in Seattle and

00:01:33,720 --> 00:01:38,400
again you can follow me on the twitters

00:01:35,729 --> 00:01:41,640
I actually have more people following me

00:01:38,400 --> 00:01:43,500
on the twitters access meet up around

00:01:41,640 --> 00:01:47,189
the world that actually show up to the

00:01:43,500 --> 00:01:48,570
meetup so that's pretty cool I guess so

00:01:47,189 --> 00:01:51,000
I talked about a lot of stuff there too

00:01:48,570 --> 00:01:53,130
and this is my daughter's in it today is

00:01:51,000 --> 00:01:54,770
her birthday so everybody say happy

00:01:53,130 --> 00:02:00,530
birthday Zanna thank you

00:01:54,770 --> 00:02:04,850
that is she's so cute so yes we're going

00:02:00,530 --> 00:02:06,890
to talk about SAS extends and a concept

00:02:04,850 --> 00:02:09,019
called silent place holders which is

00:02:06,890 --> 00:02:10,489
really cool when you understand what

00:02:09,019 --> 00:02:15,379
they're doing and how they can work for

00:02:10,489 --> 00:02:19,220
you ninjas there's secret code in your

00:02:15,379 --> 00:02:22,549
in your in your code yeah okay so

00:02:19,220 --> 00:02:25,280
object-oriented CSS frameworks attempts

00:02:22,549 --> 00:02:27,950
at creating objects to streamline

00:02:25,280 --> 00:02:30,769
application okay so we all know that

00:02:27,950 --> 00:02:33,290
doing things to make things easier

00:02:30,769 --> 00:02:35,780
usually means you end up writing a crap

00:02:33,290 --> 00:02:38,870
ton more code which then makes your life

00:02:35,780 --> 00:02:40,250
more complicated so this is this is the

00:02:38,870 --> 00:02:43,280
precursor to what I'm going to talk

00:02:40,250 --> 00:02:46,340
about here so object audience is s

00:02:43,280 --> 00:02:48,340
Nicole Sullivan teacher taught us some

00:02:46,340 --> 00:02:50,900
pretty great concepts you know identify

00:02:48,340 --> 00:02:54,920
reusable objects be semantic with your

00:02:50,900 --> 00:02:58,730
HTML minimize your selectors extend your

00:02:54,920 --> 00:03:01,609
classes style separate from content and

00:02:58,730 --> 00:03:03,049
content separate from container and this

00:03:01,609 --> 00:03:05,030
presentation i'm primarily going to

00:03:03,049 --> 00:03:06,440
focus on these last three things here

00:03:05,030 --> 00:03:09,400
and of course style separate from

00:03:06,440 --> 00:03:13,730
content content separate container duh

00:03:09,400 --> 00:03:17,959
this where we need to go object-oriented

00:03:13,730 --> 00:03:19,430
CSS frameworks CSS frameworks they've

00:03:17,959 --> 00:03:21,620
been around for a long time even before

00:03:19,430 --> 00:03:22,910
object or net CSK mod I mean how many

00:03:21,620 --> 00:03:26,389
people in this room have used like

00:03:22,910 --> 00:03:27,889
jQuery UI okay so yeah you all know you

00:03:26,389 --> 00:03:30,260
put in one module you just inherited

00:03:27,889 --> 00:03:35,510
twenty thousand lines of CSS yay thank

00:03:30,260 --> 00:03:37,459
you where they fail is that they're

00:03:35,510 --> 00:03:38,930
constantly trying to solve all of your

00:03:37,459 --> 00:03:41,569
problems even though you need to solve

00:03:38,930 --> 00:03:44,150
one problem and where a lot of people

00:03:41,569 --> 00:03:45,500
will look at SAS and go Oh screw use as

00:03:44,150 --> 00:03:46,970
people you're doing nothing but giving

00:03:45,500 --> 00:03:49,690
me a lot of code bloat I was like have

00:03:46,970 --> 00:03:53,720
you looked at twitter bootstrap lately

00:03:49,690 --> 00:03:57,440
okay 4914 lines of code before you write

00:03:53,720 --> 00:03:58,910
line one to make it what you want it to

00:03:57,440 --> 00:04:02,630
look like not to look like Twitter

00:03:58,910 --> 00:04:04,880
bootstrap I say I don't want that ok

00:04:02,630 --> 00:04:07,440
pretty simple

00:04:04,880 --> 00:04:09,000
dry coating we all understand the

00:04:07,440 --> 00:04:10,770
concept of dry coating don't repeat

00:04:09,000 --> 00:04:12,390
yourself nine out of ten developers

00:04:10,770 --> 00:04:13,980
agree that this is a great way to do it

00:04:12,390 --> 00:04:18,510
that one developer we just don't talk to

00:04:13,980 --> 00:04:21,030
him bootstrap buttons okay so I'm gonna

00:04:18,510 --> 00:04:24,870
do right now is just talk about buttons

00:04:21,030 --> 00:04:26,880
very simple concept right so let's look

00:04:24,870 --> 00:04:28,890
at some code for bootstrap buttons so

00:04:26,880 --> 00:04:30,780
you know how much CSS can it really be

00:04:28,890 --> 00:04:32,820
in bootstrap buttons when we're only

00:04:30,780 --> 00:04:35,280
just kind of talking about two types of

00:04:32,820 --> 00:04:38,370
selectors with just you know and nav

00:04:35,280 --> 00:04:43,169
tabs and have pills I mean this goes on

00:04:38,370 --> 00:04:48,419
and on and on and on and on and on and

00:04:43,169 --> 00:04:51,090
on and on so that's a lot of code that's

00:04:48,419 --> 00:04:54,600
169 lines of code just for those two

00:04:51,090 --> 00:04:56,970
selectors right there that kind of code

00:04:54,600 --> 00:05:00,630
makes kittens cry that's horrible Adam

00:04:56,970 --> 00:05:03,660
you want to talk about that CSS vanilla

00:05:00,630 --> 00:05:05,340
CSS by itself is not a dry concept it's

00:05:03,660 --> 00:05:07,050
a scripting concept that endlessly

00:05:05,340 --> 00:05:09,150
repeats itself we've all been

00:05:07,050 --> 00:05:10,860
environments where we create something

00:05:09,150 --> 00:05:12,419
and then you're working with the

00:05:10,860 --> 00:05:14,100
designer and you have all these little

00:05:12,419 --> 00:05:15,840
you know two pixels here two pixels

00:05:14,100 --> 00:05:17,580
there this hex value this hex value

00:05:15,840 --> 00:05:19,800
you're repeating stuff all over the

00:05:17,580 --> 00:05:21,540
place endlessly you know just in this

00:05:19,800 --> 00:05:24,560
example alone there's ten references to

00:05:21,540 --> 00:05:26,760
white you know it's just like it's not

00:05:24,560 --> 00:05:27,840
it's it's not something that a lot of

00:05:26,760 --> 00:05:30,780
people like to work with because it's

00:05:27,840 --> 00:05:32,550
very hard to manage and what always ends

00:05:30,780 --> 00:05:33,750
up happening is that you know every

00:05:32,550 --> 00:05:35,160
developer in this room who started

00:05:33,750 --> 00:05:36,120
working with CSS I mean you start out

00:05:35,160 --> 00:05:39,260
you're like this is going to be awesome

00:05:36,120 --> 00:05:41,790
this time i'm going to write good csi's

00:05:39,260 --> 00:05:43,800
you know and then the project starts to

00:05:41,790 --> 00:05:45,840
evolve the more things happen and then

00:05:43,800 --> 00:05:48,090
you get more design templates and then

00:05:45,840 --> 00:05:49,650
now the product is live and you have a

00:05:48,090 --> 00:05:51,780
maintenance team that are working on it

00:05:49,650 --> 00:05:52,950
and then they're looking at your CSS and

00:05:51,780 --> 00:05:54,210
they're like I don't understand any of

00:05:52,950 --> 00:05:55,440
this that's happening on here

00:05:54,210 --> 00:05:57,870
so I'm just going to wrap a div around

00:05:55,440 --> 00:05:59,010
it slap an ID on it you know and I'm

00:05:57,870 --> 00:06:00,600
just going to go right to the bottom of

00:05:59,010 --> 00:06:02,250
the CSS put my ID and then I'm going to

00:06:00,600 --> 00:06:04,440
redefine font families I'm gonna

00:06:02,250 --> 00:06:08,970
redefine colors and it's gonna look

00:06:04,440 --> 00:06:10,680
awesome and it sucks okay so objects

00:06:08,970 --> 00:06:14,430
aren't ncess tries to get us away from

00:06:10,680 --> 00:06:16,650
that and the interesting thing about oo

00:06:14,430 --> 00:06:18,540
CSS is that they readily admit that one

00:06:16,650 --> 00:06:22,470
of the coolest best prints

00:06:18,540 --> 00:06:28,290
ables of CSS is to extend the design

00:06:22,470 --> 00:06:30,060
rules of CSS in CSS sucks okay it's hard

00:06:28,290 --> 00:06:31,680
it's hard to do because you have all

00:06:30,060 --> 00:06:33,510
these lines of CSS and you're like oh

00:06:31,680 --> 00:06:34,890
yeah I want to reuse this thing and so

00:06:33,510 --> 00:06:37,680
that I'm gonna go all the way up to line

00:06:34,890 --> 00:06:39,300
two hundred something and comma

00:06:37,680 --> 00:06:40,410
delimited put my next selector and then

00:06:39,300 --> 00:06:42,420
I'm going to go all the way down to the

00:06:40,410 --> 00:06:44,820
line four thousand something and extend

00:06:42,420 --> 00:06:47,130
on top of that it's it's very hard to

00:06:44,820 --> 00:06:49,110
visualize that and understand it so

00:06:47,130 --> 00:06:51,650
nobody ever really does it so object

00:06:49,110 --> 00:06:54,570
ornate CSS says okay fine don't do that

00:06:51,650 --> 00:06:58,860
what we want you to do is create all

00:06:54,570 --> 00:07:00,930
these quote-unquote objects and you know

00:06:58,860 --> 00:07:03,900
these little snippets of CSS and then go

00:07:00,930 --> 00:07:06,360
into your dom and then I want you to put

00:07:03,900 --> 00:07:08,190
all of the classes these presentational

00:07:06,360 --> 00:07:11,820
classes inside the Dom all over the

00:07:08,190 --> 00:07:12,900
place so all great and dandy when you're

00:07:11,820 --> 00:07:14,160
doing this but then when you start

00:07:12,900 --> 00:07:16,860
working with something with Twitter

00:07:14,160 --> 00:07:20,040
bootstrap and then you find yourself you

00:07:16,860 --> 00:07:21,450
know putting 16 classes on a single down

00:07:20,040 --> 00:07:23,630
my limit just to make a button look the

00:07:21,450 --> 00:07:27,600
way you want it to look is kind of

00:07:23,630 --> 00:07:28,620
stupid to me I don't like it so you end

00:07:27,600 --> 00:07:30,330
up with something like this I mean

00:07:28,620 --> 00:07:31,680
here's you know you have you know this

00:07:30,330 --> 00:07:32,910
class in this class in this class in

00:07:31,680 --> 00:07:34,260
this class in this class in this class

00:07:32,910 --> 00:07:35,670
in this class and so then as you keep

00:07:34,260 --> 00:07:36,870
building out templates and modules and

00:07:35,670 --> 00:07:39,900
stuff you're repeating this endlessly

00:07:36,870 --> 00:07:41,040
over and over again it just gets really

00:07:39,900 --> 00:07:42,720
complicated to manage from there

00:07:41,040 --> 00:07:44,970
especially through the life cycle cycle

00:07:42,720 --> 00:07:46,860
of a project you're always going to run

00:07:44,970 --> 00:07:48,480
into situations where the design is

00:07:46,860 --> 00:07:50,430
going to evolve and then you have these

00:07:48,480 --> 00:07:53,160
presentational classes all over your dom

00:07:50,430 --> 00:07:54,990
and people start doing evil things like

00:07:53,160 --> 00:07:56,700
rewriting what that presentational class

00:07:54,990 --> 00:07:58,230
is actually doing which goes against the

00:07:56,700 --> 00:08:01,680
naming convention because everybody

00:07:58,230 --> 00:08:04,680
sucks at naming things naming is hard so

00:08:01,680 --> 00:08:06,480
it's just it's a great idea to start out

00:08:04,680 --> 00:08:10,860
with but it totally lends itself to a

00:08:06,480 --> 00:08:13,950
lot of problems so then again picking on

00:08:10,860 --> 00:08:16,530
Twitter buttons you have all these all

00:08:13,950 --> 00:08:17,760
the CSS right here right and again this

00:08:16,530 --> 00:08:19,230
goes on and on and on and then your

00:08:17,760 --> 00:08:25,320
designer comes in and says I've designed

00:08:19,230 --> 00:08:27,840
all the buttons doc that's how I feel

00:08:25,320 --> 00:08:29,330
when you just said that no no no no I'm

00:08:27,840 --> 00:08:33,840
gonna go away I'm going

00:08:29,330 --> 00:08:37,590
okay so developers we want our cake and

00:08:33,840 --> 00:08:39,330
we want to eat it to write CSS we want

00:08:37,590 --> 00:08:41,880
it to be presentational it needs to

00:08:39,330 --> 00:08:44,610
convey design that's what CSS is for no

00:08:41,880 --> 00:08:47,130
screw you CSS is to be semantic because

00:08:44,610 --> 00:08:49,980
I wanted to have meaning right so

00:08:47,130 --> 00:08:54,350
vanilla CSS by itself this is really

00:08:49,980 --> 00:08:57,750
really hard to do vanilla CSS conveying

00:08:54,350 --> 00:08:59,640
presentation and semantics is about as

00:08:57,750 --> 00:09:01,500
realistic is this cat getting another

00:08:59,640 --> 00:09:06,900
top 10 hit is just like it's not going

00:09:01,500 --> 00:09:08,550
to happen so I've just beat up on object

00:09:06,900 --> 00:09:10,140
or new CSS so now you're looking to be

00:09:08,550 --> 00:09:11,880
going okay so what's the better way to

00:09:10,140 --> 00:09:17,660
do it so then this is when I say

00:09:11,880 --> 00:09:21,960
object-oriented s CSS yeah so

00:09:17,660 --> 00:09:25,290
placeholder classes this is um this is a

00:09:21,960 --> 00:09:28,350
pretty cool concept I watched the

00:09:25,290 --> 00:09:31,890
concept evolved with the SAS team for

00:09:28,350 --> 00:09:34,790
for quite a while as you know the the

00:09:31,890 --> 00:09:36,960
role of object ornacia has started to

00:09:34,790 --> 00:09:39,150
emerge and a lot more people were

00:09:36,960 --> 00:09:40,980
talking about it and the principal

00:09:39,150 --> 00:09:42,960
developers Nathan wise in bham Chris

00:09:40,980 --> 00:09:45,480
Epstein and a few others were you know

00:09:42,960 --> 00:09:48,960
on github talking about what if there

00:09:45,480 --> 00:09:51,600
was a way that we could embrace this

00:09:48,960 --> 00:09:53,490
without having to do it the way they

00:09:51,600 --> 00:09:57,480
want us to do it we can actually embrace

00:09:53,490 --> 00:09:59,090
it more semantically inside of our CSS

00:09:57,480 --> 00:10:01,530
and then have all the control from there

00:09:59,090 --> 00:10:02,970
so this is this is where cool stuff

00:10:01,530 --> 00:10:04,080
starts to happen and this is where

00:10:02,970 --> 00:10:06,060
everything I just talked about the

00:10:04,080 --> 00:10:07,350
object and CSS take it and just to set

00:10:06,060 --> 00:10:11,610
it on fire forget about it we're going

00:10:07,350 --> 00:10:13,290
to learn something else so here's a

00:10:11,610 --> 00:10:15,810
simple problem to solve you have a

00:10:13,290 --> 00:10:20,760
simple module the box with drop shadow

00:10:15,810 --> 00:10:22,410
article content button object grown in

00:10:20,760 --> 00:10:23,820
CSS would want us to do something along

00:10:22,410 --> 00:10:26,340
these lines where you have you know a

00:10:23,820 --> 00:10:29,580
main content a post summary a post

00:10:26,340 --> 00:10:31,410
border you know this is when semantic

00:10:29,580 --> 00:10:35,100
and presentational all starts living

00:10:31,410 --> 00:10:37,650
together and not happily you know you

00:10:35,100 --> 00:10:39,990
have a post header a post button a

00:10:37,650 --> 00:10:41,550
primary post button you know you just

00:10:39,990 --> 00:10:42,460
start putting these individual small

00:10:41,550 --> 00:10:46,900
classes all of you

00:10:42,460 --> 00:10:49,420
Dom and you write some CSS that looks

00:10:46,900 --> 00:10:51,570
like this this is all pretty cool and it

00:10:49,420 --> 00:10:53,890
kind of tells you what you want to do

00:10:51,570 --> 00:10:57,430
but as i've been saying before you know

00:10:53,890 --> 00:10:59,980
extending CSS vanilla CSS becomes

00:10:57,430 --> 00:11:01,930
increasingly complicated as you start

00:10:59,980 --> 00:11:05,500
adding thousands and thousands and more

00:11:01,930 --> 00:11:09,460
lines of code yeah especially when you

00:11:05,500 --> 00:11:10,720
hit that number and you know as I've

00:11:09,460 --> 00:11:12,550
been clearly saying before it's like

00:11:10,720 --> 00:11:15,700
extending in the Dom I don't really like

00:11:12,550 --> 00:11:16,960
that and especially when you're working

00:11:15,700 --> 00:11:18,220
in environment such as dribbles you

00:11:16,960 --> 00:11:20,230
don't necessarily always have control

00:11:18,220 --> 00:11:22,870
over the Dom you know you're going to

00:11:20,230 --> 00:11:24,280
have these these prefabricated things

00:11:22,870 --> 00:11:25,630
inside of your development environment

00:11:24,280 --> 00:11:27,340
you can't just go over there and just

00:11:25,630 --> 00:11:29,260
start spackling new classes in there as

00:11:27,340 --> 00:11:31,750
you need so you end up coming up with

00:11:29,260 --> 00:11:36,670
like crazy CSS tricks to force things

00:11:31,750 --> 00:11:39,150
around so object coordinated scss

00:11:36,670 --> 00:11:42,760
basically says I'm going to be more

00:11:39,150 --> 00:11:44,440
semantic in my use of my CSS i'm going

00:11:42,760 --> 00:11:46,840
to use something like you know a main

00:11:44,440 --> 00:11:48,610
content which conveys simple meaning

00:11:46,840 --> 00:11:51,970
about the block that i'm working with

00:11:48,610 --> 00:11:54,340
i'm going to use semantic classes and

00:11:51,970 --> 00:11:56,890
use the power of that class to hinge all

00:11:54,340 --> 00:11:58,450
of my design patterns off of that you

00:11:56,890 --> 00:12:00,880
can start coming up with very common

00:11:58,450 --> 00:12:02,590
patterns and very common use cases with

00:12:00,880 --> 00:12:04,030
these naming conventions which then

00:12:02,590 --> 00:12:06,070
gives you the full strength of

00:12:04,030 --> 00:12:09,520
developing everything from your CSS

00:12:06,070 --> 00:12:11,020
perspective and you know as you're

00:12:09,520 --> 00:12:12,310
redesigning stuff and your designer

00:12:11,020 --> 00:12:14,260
comes in all the time and ask for new

00:12:12,310 --> 00:12:18,730
stuff you don't ever have to touch the

00:12:14,260 --> 00:12:22,060
markup you do it on your CSS so one of

00:12:18,730 --> 00:12:25,750
the one of the first tricks that kind of

00:12:22,060 --> 00:12:27,810
came out of this was using mix-ins how

00:12:25,750 --> 00:12:33,190
many people here know what mix-ins are

00:12:27,810 --> 00:12:35,650
Wow okay so very simply put mixin is a

00:12:33,190 --> 00:12:38,290
great tool inside of sass it is probably

00:12:35,650 --> 00:12:39,940
one of the the first major power tools

00:12:38,290 --> 00:12:43,090
that came out of sets that allows you to

00:12:39,940 --> 00:12:45,640
encapsulate a chunk of CSS and then

00:12:43,090 --> 00:12:47,170
reuse it inside of the rest of the stuff

00:12:45,640 --> 00:12:49,590
that you're writing again and again and

00:12:47,170 --> 00:12:52,090
again and this is all great wonderful

00:12:49,590 --> 00:12:54,490
you know mix-ins are never processed

00:12:52,090 --> 00:12:54,960
into CSS until you actually include them

00:12:54,490 --> 00:12:58,920
into an

00:12:54,960 --> 00:13:03,030
selector they are much easier to reuse

00:12:58,920 --> 00:13:05,100
than standard CSS and in this particular

00:13:03,030 --> 00:13:08,760
example here you can basically see that

00:13:05,100 --> 00:13:11,310
we've combined all these mix-ins into a

00:13:08,760 --> 00:13:13,140
simple module which you know that module

00:13:11,310 --> 00:13:18,180
by itself looks pretty awesome and you

00:13:13,140 --> 00:13:20,550
know it's simple to maintain so but

00:13:18,180 --> 00:13:23,280
mix-ins as we all know the robot will

00:13:20,550 --> 00:13:25,650
copy and paste what's happening they

00:13:23,280 --> 00:13:27,600
will duplicate endlessly with every time

00:13:25,650 --> 00:13:29,790
that you use in so this looks pretty

00:13:27,600 --> 00:13:31,350
clean this looks pretty awesome you know

00:13:29,790 --> 00:13:35,930
but for reuse its going to duplicate

00:13:31,350 --> 00:13:38,280
everything so here's a use case of

00:13:35,930 --> 00:13:40,410
building out that module that i showed

00:13:38,280 --> 00:13:42,750
before using just mix-ins you know this

00:13:40,410 --> 00:13:45,870
is great I'm really reusing some code

00:13:42,750 --> 00:13:48,060
this is so dry I feel so awesome but

00:13:45,870 --> 00:13:51,780
then the sad thing is is that when we

00:13:48,060 --> 00:13:53,670
start to duplicate things again and then

00:13:51,780 --> 00:13:56,400
we look at our output CSS we realize

00:13:53,670 --> 00:14:00,270
that we're living a lie because this

00:13:56,400 --> 00:14:03,480
isn't dry I mean we're just our SAS is

00:14:00,270 --> 00:14:06,180
dry but our CSS is endlessly duplicating

00:14:03,480 --> 00:14:11,150
things again and again and again so that

00:14:06,180 --> 00:14:13,230
makes me feel sad inside yeah poor kitty

00:14:11,150 --> 00:14:15,980
so then this this is where the

00:14:13,230 --> 00:14:19,980
conversation with object or net CSS and

00:14:15,980 --> 00:14:22,080
sass started to bubble up in the github

00:14:19,980 --> 00:14:23,520
like I was talking about and there's a

00:14:22,080 --> 00:14:26,490
lot of really cool conversations going

00:14:23,520 --> 00:14:28,020
back and forth and you know the problem

00:14:26,490 --> 00:14:29,820
they wanted to solve is say is like you

00:14:28,020 --> 00:14:32,790
know how can we very easily create

00:14:29,820 --> 00:14:34,230
something like a mix in but it doesn't

00:14:32,790 --> 00:14:38,700
perform like a mixin and that's where

00:14:34,230 --> 00:14:42,300
the concept extends came in now in this

00:14:38,700 --> 00:14:44,460
example here I replaced the mix in with

00:14:42,300 --> 00:14:47,640
a period and made it a standard CSS and

00:14:44,460 --> 00:14:49,440
then down here is where basically I'm

00:14:47,640 --> 00:14:54,990
combining all of those things into a

00:14:49,440 --> 00:14:57,630
nice module so I'll pretty cool but all

00:14:54,990 --> 00:15:01,650
of these classes will get processed into

00:14:57,630 --> 00:15:03,900
CSS so now you're kind of going against

00:15:01,650 --> 00:15:06,810
what the mix-ins we're doing for the

00:15:03,900 --> 00:15:08,270
sake of lack of duplication so when you

00:15:06,810 --> 00:15:11,260
start working in

00:15:08,270 --> 00:15:13,460
an environment where you're building out

00:15:11,260 --> 00:15:15,260
object-oriented CSS and you have all

00:15:13,460 --> 00:15:17,330
these very presentational classes

00:15:15,260 --> 00:15:20,360
primary border padding left padding

00:15:17,330 --> 00:15:23,320
right yada yada even though you're not

00:15:20,360 --> 00:15:27,140
actually using any of those classes with

00:15:23,320 --> 00:15:30,200
your final widget that you're producing

00:15:27,140 --> 00:15:31,580
all of that CSS gets produced and so in

00:15:30,200 --> 00:15:33,710
essence you're kind of creating

00:15:31,580 --> 00:15:37,400
unnecessary code bloat for the sake of

00:15:33,710 --> 00:15:39,230
trying to create something semantic so

00:15:37,400 --> 00:15:41,930
this is what our process CSS looks like

00:15:39,230 --> 00:15:44,120
you know here's an object class there's

00:15:41,930 --> 00:15:46,730
a semantic class object class Samantha

00:15:44,120 --> 00:15:48,710
class object class Samantha class so

00:15:46,730 --> 00:15:50,540
again you look at your help with CSS and

00:15:48,710 --> 00:15:51,800
you're like I'm feeling a little dirty

00:15:50,540 --> 00:15:53,240
here because I'm telling everybody I'm

00:15:51,800 --> 00:15:57,080
doing cool but I'm not really doing

00:15:53,240 --> 00:16:00,350
anything so baby steps we're walking

00:15:57,080 --> 00:16:02,000
towards it ok so then another

00:16:00,350 --> 00:16:06,140
conversation starts bubbling up on the

00:16:02,000 --> 00:16:07,970
github and they're basically responding

00:16:06,140 --> 00:16:11,360
to the very quick feedback to extends

00:16:07,970 --> 00:16:13,010
that says you know I'm I'm producing

00:16:11,360 --> 00:16:14,660
classes even though I don't want to use

00:16:13,010 --> 00:16:16,040
the classes is there a better way to do

00:16:14,660 --> 00:16:18,110
this and this is where Chris Epstein

00:16:16,040 --> 00:16:20,000
everybody else of Chris up sign is he's

00:16:18,110 --> 00:16:27,230
the one who created compass the magical

00:16:20,000 --> 00:16:28,610
compass yay not so much ok so then Chris

00:16:27,230 --> 00:16:31,340
kind of started the conversation where

00:16:28,610 --> 00:16:34,220
he was like wouldn't it be cool if there

00:16:31,340 --> 00:16:38,750
was a way that we could do this without

00:16:34,220 --> 00:16:40,340
producing all the extra CSS so that's

00:16:38,750 --> 00:16:42,050
when they started coming up with silent

00:16:40,340 --> 00:16:44,240
placeholder placeholder selectors such

00:16:42,050 --> 00:16:48,170
and so forth and number of names kind of

00:16:44,240 --> 00:16:51,020
started floating around so the concept

00:16:48,170 --> 00:16:54,550
behind placeholder selectors is again

00:16:51,020 --> 00:16:57,860
going back to object or in CSS let's

00:16:54,550 --> 00:17:00,680
understand the principles of our designs

00:16:57,860 --> 00:17:02,690
let's understand what these reusable

00:17:00,680 --> 00:17:05,150
widgets are what let's understand what

00:17:02,690 --> 00:17:07,760
these reusable patterns are and let's

00:17:05,150 --> 00:17:10,339
create them and give them purely

00:17:07,760 --> 00:17:12,410
presentational names so you're going to

00:17:10,339 --> 00:17:14,540
you know create something like default

00:17:12,410 --> 00:17:15,920
block and do you fall border and post

00:17:14,540 --> 00:17:17,870
header and these are purely

00:17:15,920 --> 00:17:19,360
presentational and they convey enough

00:17:17,870 --> 00:17:21,339
meaning to understand that when

00:17:19,360 --> 00:17:22,839
applying them to CSS this is the look

00:17:21,339 --> 00:17:25,780
that you're going to get when they get

00:17:22,839 --> 00:17:28,449
applied so when I come down here to post

00:17:25,780 --> 00:17:31,210
summary again in this later example so

00:17:28,449 --> 00:17:33,940
yeah the purse to create a silent

00:17:31,210 --> 00:17:36,940
placeholder all you simply do is replace

00:17:33,940 --> 00:17:40,510
the dot for a class with a percent

00:17:36,940 --> 00:17:42,880
symbol and then it becomes silent none

00:17:40,510 --> 00:17:45,220
of these classes are actually produced

00:17:42,880 --> 00:17:48,280
in your output CSS until you actually

00:17:45,220 --> 00:17:51,700
invoke them within another selector that

00:17:48,280 --> 00:17:53,200
is actually going to produce the SS so I

00:17:51,700 --> 00:17:55,299
got my post summary example down here

00:17:53,200 --> 00:17:59,260
and combine these all into a nice little

00:17:55,299 --> 00:18:01,330
module and at the end of it here's my

00:17:59,260 --> 00:18:03,460
CSS here's my output CSS and this is

00:18:01,330 --> 00:18:04,990
this is very clean and this is exactly

00:18:03,460 --> 00:18:06,880
what we are looking for and this is

00:18:04,990 --> 00:18:08,799
exactly what we are hoping for you know

00:18:06,880 --> 00:18:10,750
it looks much like the mix in solution

00:18:08,799 --> 00:18:13,960
but no styles are going to be duplicated

00:18:10,750 --> 00:18:17,200
or harmed in this process styles are

00:18:13,960 --> 00:18:20,799
reused and now going back to what I was

00:18:17,200 --> 00:18:23,429
saying before about extending CSS inside

00:18:20,799 --> 00:18:25,780
of the CSS is a ridiculously complicated

00:18:23,429 --> 00:18:27,370
process of doing things because you have

00:18:25,780 --> 00:18:29,429
to understand and remember where all

00:18:27,370 --> 00:18:32,260
these things are that you want to extend

00:18:29,429 --> 00:18:34,870
placeholders completely take that away

00:18:32,260 --> 00:18:36,640
from you I mean just just imagine having

00:18:34,870 --> 00:18:38,140
a library of all these reusable things

00:18:36,640 --> 00:18:40,210
and then as you're creating a new

00:18:38,140 --> 00:18:42,070
selector you want to use those new those

00:18:40,210 --> 00:18:44,830
new things you basically just say

00:18:42,070 --> 00:18:46,840
addicts 10 standard border and extends

00:18:44,830 --> 00:18:47,919
standard title and extend border right

00:18:46,840 --> 00:18:51,370
or whatever it is that you want to use

00:18:47,919 --> 00:18:53,290
and then sass knows where that code

00:18:51,370 --> 00:18:55,530
lives what its associated with and it's

00:18:53,290 --> 00:19:00,610
going to output the best possible CSS

00:18:55,530 --> 00:19:02,530
extending that series of CSS rules so

00:19:00,610 --> 00:19:05,049
you know no unsightly presentational

00:19:02,530 --> 00:19:08,980
classes you have a good semantic meaning

00:19:05,049 --> 00:19:10,929
and it's an elegant solution from which

00:19:08,980 --> 00:19:14,770
you know you're extending in the CSS and

00:19:10,929 --> 00:19:16,870
out of the mark-up so this time the

00:19:14,770 --> 00:19:18,280
robot is going to make us happy because

00:19:16,870 --> 00:19:20,470
I'm doing the post summary and then I'm

00:19:18,280 --> 00:19:22,780
doing the main article and then I'm

00:19:20,470 --> 00:19:25,120
extending all those silent placeholders

00:19:22,780 --> 00:19:26,679
that i showed in the previous slide so

00:19:25,120 --> 00:19:29,290
again we're saying this is great we're

00:19:26,679 --> 00:19:32,710
really reusing some code this is so dry

00:19:29,290 --> 00:19:35,140
and we are so right this time okay

00:19:32,710 --> 00:19:37,299
is now I have post submarine main

00:19:35,140 --> 00:19:38,770
article are extending the same CSS rules

00:19:37,299 --> 00:19:42,190
post summary and main article it just

00:19:38,770 --> 00:19:48,250
throughout the entire thing and reuse

00:19:42,190 --> 00:19:50,409
without duplication and free bar sweet

00:19:48,250 --> 00:19:59,909
everybody rejoices this is great stuff

00:19:50,409 --> 00:20:02,950
but extending selectors is dangerous

00:19:59,909 --> 00:20:05,200
okay there's things that you can do that

00:20:02,950 --> 00:20:07,539
can really screw up your CSS output and

00:20:05,200 --> 00:20:11,230
I'm going to talk about a couple of do's

00:20:07,539 --> 00:20:15,549
and don'ts kind of real quickly here so

00:20:11,230 --> 00:20:18,309
as a rule of thumb I don't intermingle

00:20:15,549 --> 00:20:21,399
selector types I like you know

00:20:18,309 --> 00:20:23,440
presentational and functional that's how

00:20:21,399 --> 00:20:25,419
I like to refer to them and I typically

00:20:23,440 --> 00:20:30,909
try to keep them very separate from each

00:20:25,419 --> 00:20:33,669
other and but why it reduces readability

00:20:30,909 --> 00:20:35,740
is as you're scanning through a document

00:20:33,669 --> 00:20:37,240
of all of these CSS rules like oh that's

00:20:35,740 --> 00:20:39,220
a placeholder that's a real CSS and

00:20:37,240 --> 00:20:41,830
that's a placeholder it just gets

00:20:39,220 --> 00:20:43,600
confusing you wait we have we have the

00:20:41,830 --> 00:20:44,950
ability to make things less confusing so

00:20:43,600 --> 00:20:49,659
don't make them confusing because you

00:20:44,950 --> 00:20:50,740
want to reduce is findability again you

00:20:49,659 --> 00:20:52,539
know it's like when you're digging

00:20:50,740 --> 00:20:55,899
around for a certain piece of code if

00:20:52,539 --> 00:20:58,299
you find yourself using the find option

00:20:55,899 --> 00:21:00,220
in your entire application bill just to

00:20:58,299 --> 00:21:01,899
find out where a selector is then you

00:21:00,220 --> 00:21:02,890
know you that's a good smell that you're

00:21:01,899 --> 00:21:05,100
probably doing something wrong and

00:21:02,890 --> 00:21:08,020
everything's I'll just much together and

00:21:05,100 --> 00:21:11,350
another thing is that it reduces import

00:21:08,020 --> 00:21:13,419
ability by import ability I mean this

00:21:11,350 --> 00:21:19,149
rule also very much applies to the use

00:21:13,419 --> 00:21:21,730
of mix-ins if you have a chunk of SAS

00:21:19,149 --> 00:21:23,880
code where its purpose is to be

00:21:21,730 --> 00:21:26,230
functional versus presentational

00:21:23,880 --> 00:21:27,429
depending on how your architecture set

00:21:26,230 --> 00:21:29,230
up from census everybody understands

00:21:27,429 --> 00:21:33,460
that there's the at import feature for

00:21:29,230 --> 00:21:36,100
status okay if you have a document over

00:21:33,460 --> 00:21:38,740
here that's importing this document over

00:21:36,100 --> 00:21:40,720
here and it has functional and

00:21:38,740 --> 00:21:42,190
presentational inside of it and the

00:21:40,720 --> 00:21:43,659
reason you're importing it is because

00:21:42,190 --> 00:21:45,309
you want the functional chunk of that

00:21:43,659 --> 00:21:47,409
code

00:21:45,309 --> 00:21:49,269
s isn't necessarily smart enough to say

00:21:47,409 --> 00:21:51,279
oh I've already processed those other

00:21:49,269 --> 00:21:52,960
CSS classes and so I shouldn't do it

00:21:51,279 --> 00:21:55,480
again what is actually going to do is

00:21:52,960 --> 00:21:57,730
it's going to keep importing it again so

00:21:55,480 --> 00:21:59,740
if you happen to be in a scenario where

00:21:57,730 --> 00:22:01,360
you have a series of style sheets and

00:21:59,740 --> 00:22:02,950
then one style sheet imports another

00:22:01,360 --> 00:22:04,600
style sheet which imports another style

00:22:02,950 --> 00:22:06,220
sheet just so you can get the chain

00:22:04,600 --> 00:22:07,480
going together and then you import that

00:22:06,220 --> 00:22:09,549
into something else and you have this

00:22:07,480 --> 00:22:11,110
endless loop of hell going on and you

00:22:09,549 --> 00:22:13,720
look at your output CSS you'd be like

00:22:11,110 --> 00:22:17,259
why is default container represented in

00:22:13,720 --> 00:22:18,700
my output CSS 36 times that's why okay

00:22:17,259 --> 00:22:20,230
so you want to you want to keep a

00:22:18,700 --> 00:22:25,240
separation of concerns when you're doing

00:22:20,230 --> 00:22:27,879
these things I'm an advocate for this

00:22:25,240 --> 00:22:30,639
type of folder structure where I look at

00:22:27,879 --> 00:22:33,159
my my sass architecture in a very

00:22:30,639 --> 00:22:36,129
modular perspective I'll look at

00:22:33,159 --> 00:22:37,720
something like buttons on a root level

00:22:36,129 --> 00:22:39,549
of the file structure and say that this

00:22:37,720 --> 00:22:41,619
is going to be my presentational output

00:22:39,549 --> 00:22:43,360
okay so this is this is what I'm

00:22:41,619 --> 00:22:45,129
actually going to put CSS classes that's

00:22:43,360 --> 00:22:46,539
going to get turned into actual CSS

00:22:45,129 --> 00:22:48,549
that's going to be using the application

00:22:46,539 --> 00:22:49,869
and then I'll have a folder sitting in

00:22:48,549 --> 00:22:52,090
there in the folder is what's going to

00:22:49,869 --> 00:22:53,799
contain all of the functional and inside

00:22:52,090 --> 00:22:58,299
of there i'll keep mix-ins even separate

00:22:53,799 --> 00:23:00,369
from placeholder classes so keeping a

00:22:58,299 --> 00:23:02,230
good functional a good separation

00:23:00,369 --> 00:23:03,580
between functional and presentational is

00:23:02,230 --> 00:23:05,169
definitely going to save your bacon in

00:23:03,580 --> 00:23:06,369
the long run because you'll know where

00:23:05,169 --> 00:23:07,960
things are you'll come up with a

00:23:06,369 --> 00:23:10,330
consistent pattern on how to find things

00:23:07,960 --> 00:23:11,740
and then whenever you're creating a new

00:23:10,330 --> 00:23:12,879
selector you never have to sit there and

00:23:11,740 --> 00:23:14,529
look at yourself and goes like oh

00:23:12,879 --> 00:23:16,809
where's a good place to put this other

00:23:14,529 --> 00:23:18,610
than line five thousand you know so it's

00:23:16,809 --> 00:23:20,200
it's a good way to keep things very

00:23:18,610 --> 00:23:27,759
structurally organized you know

00:23:20,200 --> 00:23:29,320
presentational functional awesome so the

00:23:27,759 --> 00:23:32,259
next thing that's really going to get

00:23:29,320 --> 00:23:38,580
you in trouble is extending native

00:23:32,259 --> 00:23:41,710
selectors okay the way extends work is

00:23:38,580 --> 00:23:43,779
pretty awesome but pretty dangerous all

00:23:41,710 --> 00:23:45,340
at the same time so this is this is an

00:23:43,779 --> 00:23:48,730
actual definition that comes from the

00:23:45,340 --> 00:23:52,659
sass website that extends works by

00:23:48,730 --> 00:23:54,879
inserting the extending selector ergo h1

00:23:52,659 --> 00:23:57,179
in this example anywhere in the style

00:23:54,879 --> 00:23:58,690
sheet that the extended selector appears

00:23:57,179 --> 00:24:01,570
okay

00:23:58,690 --> 00:24:04,540
so even like in this example if I'm

00:24:01,570 --> 00:24:07,240
extending the h1 nested inside of

00:24:04,540 --> 00:24:08,950
episode header what's ass is going to do

00:24:07,240 --> 00:24:10,810
is because all you want to extend h1

00:24:08,950 --> 00:24:13,990
awesome I'm going to find all of the

00:24:10,810 --> 00:24:15,730
possible instances of h1 and I'm going

00:24:13,990 --> 00:24:19,390
to extend them in all the possible ways

00:24:15,730 --> 00:24:22,180
that I can I possibly can and I'm going

00:24:19,390 --> 00:24:24,730
to create a whole ton of selectors

00:24:22,180 --> 00:24:26,440
even though the one that you want is in

00:24:24,730 --> 00:24:28,870
there but it's surrounded by seventeen

00:24:26,440 --> 00:24:32,050
thousand other selectors and you will

00:24:28,870 --> 00:24:33,400
end up with this this actually existed a

00:24:32,050 --> 00:24:36,730
project that's out in the world that I

00:24:33,400 --> 00:24:38,740
can't touch anymore so I kind of refer

00:24:36,730 --> 00:24:45,000
this is that the unicorn basically came

00:24:38,740 --> 00:24:45,000
in just puked all over your code magical

00:24:46,470 --> 00:24:56,260
so do extend play solar selectors so

00:24:52,260 --> 00:24:59,260
even though you can engineer a block of

00:24:56,260 --> 00:25:01,630
sass and you're going to say like oh I

00:24:59,260 --> 00:25:05,800
just want to simply reuse this thing and

00:25:01,630 --> 00:25:08,080
you can do that more and more often I

00:25:05,800 --> 00:25:09,520
find myself with the unicorn puking all

00:25:08,080 --> 00:25:13,090
over my code and then I go look in

00:25:09,520 --> 00:25:15,100
inspector and then I hate myself so what

00:25:13,090 --> 00:25:16,750
I'll typically do is that if I find

00:25:15,100 --> 00:25:18,850
myself in a situation like it's really

00:25:16,750 --> 00:25:21,850
great idea for me to extend the series

00:25:18,850 --> 00:25:24,280
of rules I will actually extrapolate

00:25:21,850 --> 00:25:26,740
them from the from the one thing that I

00:25:24,280 --> 00:25:29,560
want to extend from I will create a

00:25:26,740 --> 00:25:32,020
silent placeholder I will put that in

00:25:29,560 --> 00:25:35,650
the extends folder in my magical folder

00:25:32,020 --> 00:25:37,990
structure and then i will then extend

00:25:35,650 --> 00:25:40,720
that into the two plus use cases that i

00:25:37,990 --> 00:25:43,810
want to use it and the benefit that

00:25:40,720 --> 00:25:46,210
you're going to get from that is now you

00:25:43,810 --> 00:25:48,010
have control over the output you have

00:25:46,210 --> 00:25:50,200
control over where these classes are

00:25:48,010 --> 00:25:51,880
going to be extended you have control

00:25:50,200 --> 00:25:54,610
and how they're going to be extended and

00:25:51,880 --> 00:25:56,770
you're not so susceptible to that insane

00:25:54,610 --> 00:25:58,750
loop of finding every selector possible

00:25:56,770 --> 00:26:01,990
because what you're only selecting is

00:25:58,750 --> 00:26:06,100
that one silent placeholder right so

00:26:01,990 --> 00:26:07,780
it's it's the the use case of a going

00:26:06,100 --> 00:26:09,910
totally wonky on you is going to be

00:26:07,780 --> 00:26:12,130
greatly reduced and it makes your life a

00:26:09,910 --> 00:26:14,410
lot easier to deal with

00:26:12,130 --> 00:26:16,120
so by simply just changing you know

00:26:14,410 --> 00:26:18,370
instead of select you know extending

00:26:16,120 --> 00:26:20,530
that h1 what I'm actually doing is

00:26:18,370 --> 00:26:23,290
extending the principles of what made

00:26:20,530 --> 00:26:26,230
that H 1 and H 1 into the different use

00:26:23,290 --> 00:26:27,940
cases and then I get a much more concise

00:26:26,230 --> 00:26:29,710
list of selectors that's going to be

00:26:27,940 --> 00:26:38,470
using that principle that makes more

00:26:29,710 --> 00:26:44,220
sense awesome so now those are some

00:26:38,470 --> 00:26:46,690
basic uses of using silent placeholders

00:26:44,220 --> 00:26:49,690
silent placeholders also can be used

00:26:46,690 --> 00:26:51,970
very very interestingly to almost create

00:26:49,690 --> 00:26:55,870
a meta programming type experience

00:26:51,970 --> 00:26:58,920
inside of your CSS so in this example

00:26:55,870 --> 00:27:01,750
here this is a pretty advanced chunk of

00:26:58,920 --> 00:27:04,000
obsessed written here the first part

00:27:01,750 --> 00:27:06,420
that we're looking at here is a function

00:27:04,000 --> 00:27:13,150
everybody here know what a function is

00:27:06,420 --> 00:27:16,390
no okay so basically a function in SAS

00:27:13,150 --> 00:27:20,860
is something that actually allows you to

00:27:16,390 --> 00:27:23,710
create a you know a very intellectual

00:27:20,860 --> 00:27:26,050
piece of code which can go which can

00:27:23,710 --> 00:27:27,520
accept arguments do a whole bunch of

00:27:26,050 --> 00:27:29,260
magical things to get it and then give

00:27:27,520 --> 00:27:31,630
you a return value this is very

00:27:29,260 --> 00:27:35,260
JavaScript as JavaScript ish in

00:27:31,630 --> 00:27:36,430
essaouira way so in this example here

00:27:35,260 --> 00:27:38,320
this function right here is going to

00:27:36,430 --> 00:27:40,810
take two arguments you know the variable

00:27:38,320 --> 00:27:42,010
end in the variable D and the concept of

00:27:40,810 --> 00:27:43,510
this function is to be the greatest

00:27:42,010 --> 00:27:45,700
common denominator and what it's going

00:27:43,510 --> 00:27:47,200
to do is that as this thing goes through

00:27:45,700 --> 00:27:48,700
it constantly cycles through and it

00:27:47,200 --> 00:27:50,080
keeps spitting out numbers of the

00:27:48,700 --> 00:27:53,860
greatest common denominator until it

00:27:50,080 --> 00:27:56,470
gets to zero ok then below that is a mix

00:27:53,860 --> 00:27:58,870
in which basically takes advantage of

00:27:56,470 --> 00:28:00,610
the value that's output from that

00:27:58,870 --> 00:28:04,030
greatest common greatest common

00:28:00,610 --> 00:28:05,920
denominator function and then it again

00:28:04,030 --> 00:28:08,740
starts spinning it through magical

00:28:05,920 --> 00:28:13,450
things in sask is SAS can now use for

00:28:08,740 --> 00:28:14,980
loops some people real hardcore like

00:28:13,450 --> 00:28:16,480
JavaScript people hate this when they

00:28:14,980 --> 00:28:19,510
see things like a for loop inside of a

00:28:16,480 --> 00:28:23,140
for loop but in SAS world we don't care

00:28:19,510 --> 00:28:25,810
we can do it and it doesn't cause evil

00:28:23,140 --> 00:28:29,590
things like JavaScript would do

00:28:25,810 --> 00:28:31,360
so what this mixin is then doing is that

00:28:29,590 --> 00:28:34,690
it's using that value like a talk before

00:28:31,360 --> 00:28:37,690
and he lived through so the return value

00:28:34,690 --> 00:28:40,240
from that function is now going inside

00:28:37,690 --> 00:28:44,470
those four loops and it's working its

00:28:40,240 --> 00:28:47,620
way through I get the the then what it

00:28:44,470 --> 00:28:50,470
feeds it into you'll notice that that is

00:28:47,620 --> 00:28:52,960
a the primary placeholder selector and

00:28:50,470 --> 00:28:55,300
it's a selector that's being written on

00:28:52,960 --> 00:28:57,100
the fly based on the values that is

00:28:55,300 --> 00:28:59,950
collected so far out of that function

00:28:57,100 --> 00:29:03,400
and then it's creating it as a silent

00:28:59,950 --> 00:29:05,050
placeholder okay then the next thing

00:29:03,400 --> 00:29:07,030
that it's doing is that it's also taking

00:29:05,050 --> 00:29:09,640
those same values that it's cycling

00:29:07,030 --> 00:29:11,080
through and it's extending another

00:29:09,640 --> 00:29:12,880
silent play solar so it's a silent

00:29:11,080 --> 00:29:14,590
placeholders extending another silent

00:29:12,880 --> 00:29:19,180
placeholder and what this allows us to

00:29:14,590 --> 00:29:22,150
do is once I include this mix in into

00:29:19,180 --> 00:29:25,000
mice my Styles it's actually going to

00:29:22,150 --> 00:29:28,630
generate this exact example is going to

00:29:25,000 --> 00:29:32,110
generate a whole series of every grid

00:29:28,630 --> 00:29:33,700
type possible in that you set up the

00:29:32,110 --> 00:29:36,220
grid to be a max of like so if you set

00:29:33,700 --> 00:29:38,710
up a if you said the max grid type in

00:29:36,220 --> 00:29:40,240
this particular example is 12 it's going

00:29:38,710 --> 00:29:43,990
to go through and it's actually going to

00:29:40,240 --> 00:29:46,750
create every possible grid space within

00:29:43,990 --> 00:29:50,380
a 12 column grid you know one of one of

00:29:46,750 --> 00:29:52,060
two one of 12 6 of 8 you know on and on

00:29:50,380 --> 00:29:56,050
and on but it's all going to create it

00:29:52,060 --> 00:29:58,570
all silently it doesn't exist so then I

00:29:56,050 --> 00:30:00,610
can come down here and then I have foo

00:29:58,570 --> 00:30:04,150
which is my Samantha class you know

00:30:00,610 --> 00:30:06,190
whatever you want to call it and then

00:30:04,150 --> 00:30:07,840
I'm extending great five of five and

00:30:06,190 --> 00:30:11,320
then bars extending grid of one of eight

00:30:07,840 --> 00:30:13,480
Baz is extending grid 2 of 9 and crypto

00:30:11,320 --> 00:30:15,630
is extending 2 of 9 and then what you

00:30:13,480 --> 00:30:17,830
see the output there below you is

00:30:15,630 --> 00:30:19,630
exactly what you would want to see is

00:30:17,830 --> 00:30:23,080
like the the semantic classes that I

00:30:19,630 --> 00:30:24,760
created SAS pulled all those silent

00:30:23,080 --> 00:30:26,980
placeholders out of that magical

00:30:24,760 --> 00:30:29,050
function and mix in that created all

00:30:26,980 --> 00:30:31,270
these things in basically meta space and

00:30:29,050 --> 00:30:32,860
then it is applying the values to the

00:30:31,270 --> 00:30:35,260
actual classes that I want to use in my

00:30:32,860 --> 00:30:36,160
CSS so if you were to go all the way

00:30:35,260 --> 00:30:37,630
back to the beginning of this

00:30:36,160 --> 00:30:38,419
presentation and you wanted to do

00:30:37,630 --> 00:30:40,879
something like this

00:30:38,419 --> 00:30:43,340
would actually have to have like 500

00:30:40,879 --> 00:30:46,190
lines of CSS with all these wonderful

00:30:43,340 --> 00:30:47,960
things called grid 10 to grade 5 06 grid

00:30:46,190 --> 00:30:48,950
seven of eight you know that's a bunch

00:30:47,960 --> 00:30:50,389
of crap and I want to look at that

00:30:48,950 --> 00:30:51,590
anymore you know and I don't I don't

00:30:50,389 --> 00:30:53,119
want to send that over the wire and I

00:30:51,590 --> 00:30:55,249
don't want to I just want to deal with

00:30:53,119 --> 00:31:00,100
it this makes it so I don't have to do

00:30:55,249 --> 00:31:05,389
with it so that's advanced placeholders

00:31:00,100 --> 00:31:08,269
profit and this this chocolate code is

00:31:05,389 --> 00:31:12,019
actually inspired by a guy named Lou

00:31:08,269 --> 00:31:15,080
Nelson out of Berlin he's he's a super

00:31:12,019 --> 00:31:17,149
smart cat he's way smarter than I am and

00:31:15,080 --> 00:31:20,119
you can find him out on the github and

00:31:17,149 --> 00:31:21,679
if you're interested and you know a lot

00:31:20,119 --> 00:31:23,239
of these types of crazy loops and things

00:31:21,679 --> 00:31:25,009
like that you know he's got a great

00:31:23,239 --> 00:31:31,879
series of just saw didn't github that

00:31:25,009 --> 00:31:33,379
you can learn from it so um in summary

00:31:31,879 --> 00:31:35,230
getting at the end of this whole thing

00:31:33,379 --> 00:31:38,389
here the things that we have learned is

00:31:35,230 --> 00:31:43,399
that object oriented CSS and UI

00:31:38,389 --> 00:31:45,259
frameworks can and basically will give

00:31:43,399 --> 00:31:46,580
you a lot of CSS bloat because they're

00:31:45,259 --> 00:31:49,429
trying to solve all your problems before

00:31:46,580 --> 00:31:51,409
you even write any code so we don't want

00:31:49,429 --> 00:31:53,720
to deal with that managing

00:31:51,409 --> 00:31:56,330
presentational CSS and extending in the

00:31:53,720 --> 00:32:01,609
Dom is difficult complicated and it has

00:31:56,330 --> 00:32:04,309
its issues extending classes with 4914

00:32:01,609 --> 00:32:07,659
lines of code makes my brain hurt a lot

00:32:04,309 --> 00:32:11,419
I it's hard I just can't do it I can't

00:32:07,659 --> 00:32:13,519
object ordinance CSS is using a CSS and

00:32:11,419 --> 00:32:15,649
using a CSS processor will change your

00:32:13,519 --> 00:32:19,279
life but I'm sitting in the choir

00:32:15,649 --> 00:32:23,059
everybody loves SAS so awesome mix-ins

00:32:19,279 --> 00:32:25,639
was a great start mixon still has a very

00:32:23,059 --> 00:32:27,799
specific role to play in your CSS I'm

00:32:25,639 --> 00:32:29,330
not discounting mix-ins but one of the

00:32:27,799 --> 00:32:30,950
other rules of thumbs that you would

00:32:29,330 --> 00:32:33,529
definitely want to stick with is that if

00:32:30,950 --> 00:32:36,460
you're creating a chunk of code to be

00:32:33,529 --> 00:32:39,590
reused and it's not accepting arguments

00:32:36,460 --> 00:32:40,879
you know then that's an opportunity to

00:32:39,590 --> 00:32:45,619
say that I should be using a silent

00:32:40,879 --> 00:32:47,869
placeholder extends are awesome but we

00:32:45,619 --> 00:32:51,320
can do better take everything you know

00:32:47,869 --> 00:32:53,529
about it set on fire fuu is the way to

00:32:51,320 --> 00:32:53,529
go

00:32:53,809 --> 00:33:13,170
questions anybody have questions sir um

00:33:07,580 --> 00:33:16,049
okay so like like I just said um your he

00:33:13,170 --> 00:33:17,880
okay sorry he basically said you know

00:33:16,049 --> 00:33:19,650
what's what's a good use case of using a

00:33:17,880 --> 00:33:24,000
mix in over a silent placeholder and

00:33:19,650 --> 00:33:24,720
vice versa basically when you're when

00:33:24,000 --> 00:33:26,130
you're going through and your

00:33:24,720 --> 00:33:29,520
engineering the CSS for a particular

00:33:26,130 --> 00:33:31,770
widget and you see that there's an

00:33:29,520 --> 00:33:33,090
opportunity there to you know abstract

00:33:31,770 --> 00:33:35,850
some of the stuff out of there because

00:33:33,090 --> 00:33:37,320
you want to reuse it then you know

00:33:35,850 --> 00:33:38,549
that's where you look at yourself and go

00:33:37,320 --> 00:33:42,360
I'm going to make a placeholder I'm

00:33:38,549 --> 00:33:44,309
going to make a mixin if you're

00:33:42,360 --> 00:33:48,330
following a more of an object-oriented

00:33:44,309 --> 00:33:50,790
CSS principle and you want to start to

00:33:48,330 --> 00:33:52,710
abstract things that are just purely

00:33:50,790 --> 00:33:55,200
presentational but the output is going

00:33:52,710 --> 00:33:58,320
to be static then that's when you would

00:33:55,200 --> 00:34:03,030
want to use a placeholder if you're

00:33:58,320 --> 00:34:05,610
starting to extract things that aren't

00:34:03,030 --> 00:34:07,290
so presentational and then the use case

00:34:05,610 --> 00:34:08,820
of using them again you're actually

00:34:07,290 --> 00:34:10,740
going to want to change variables on the

00:34:08,820 --> 00:34:12,330
fly then that's when you want to use a

00:34:10,740 --> 00:34:14,520
mixin because it makes it can accept

00:34:12,330 --> 00:34:16,320
arguments and it'll allow you to reuse

00:34:14,520 --> 00:34:18,720
that thing but you're not generating the

00:34:16,320 --> 00:34:20,669
exact same CSS again you're generating

00:34:18,720 --> 00:34:24,379
different CSS based on the arguments you

00:34:20,669 --> 00:34:30,149
passed into the variables so make sense

00:34:24,379 --> 00:34:32,970
yes hey um howdy are you using silent

00:34:30,149 --> 00:34:35,100
extends with in each other like in a

00:34:32,970 --> 00:34:38,490
project I'm doing right now I have one

00:34:35,100 --> 00:34:40,560
for just border for example and then the

00:34:38,490 --> 00:34:42,720
next one under it was if i want to have

00:34:40,560 --> 00:34:47,340
border and background and then kind of

00:34:42,720 --> 00:34:50,580
creating a silent extend built system on

00:34:47,340 --> 00:34:52,080
top of each other mm-hmm so you're

00:34:50,580 --> 00:34:53,490
you're basically saying like you have

00:34:52,080 --> 00:34:55,379
your your parents selector that you're

00:34:53,490 --> 00:34:57,869
outputting the CSS and then you have

00:34:55,379 --> 00:35:00,600
extend extend extend extend no like I

00:34:57,869 --> 00:35:03,930
have an xperia lease impul extend like

00:35:00,600 --> 00:35:04,589
just a border okay then i have the next

00:35:03,930 --> 00:35:06,539
extend

00:35:04,589 --> 00:35:10,769
uses that border extend with a

00:35:06,539 --> 00:35:13,859
background maybe so like I have BG

00:35:10,769 --> 00:35:18,319
background so like it's an extend using

00:35:13,859 --> 00:35:20,369
an extent your nesting extend ok um

00:35:18,319 --> 00:35:25,680
every use case is a little bit

00:35:20,369 --> 00:35:27,239
differently you want to pay attention to

00:35:25,680 --> 00:35:29,489
exactly what it is that you're extending

00:35:27,239 --> 00:35:32,039
and how that nesting is working i mean

00:35:29,489 --> 00:35:34,200
if you're using silent placeholders if

00:35:32,039 --> 00:35:36,599
they're all silent there's a good chance

00:35:34,200 --> 00:35:37,859
that it'll probably work but as you

00:35:36,599 --> 00:35:39,779
start nesting things like i said the

00:35:37,859 --> 00:35:41,700
rule of extends is that it's going to go

00:35:39,779 --> 00:35:44,039
look through every possible combination

00:35:41,700 --> 00:35:46,559
to give you your output so it will work

00:35:44,039 --> 00:35:48,390
it can't do that but you just have to be

00:35:46,559 --> 00:35:50,700
mindful of the output that it's putting

00:35:48,390 --> 00:35:54,779
out is another rule of thumb I never use

00:35:50,700 --> 00:35:56,789
extends inside of a mixin because what

00:35:54,779 --> 00:35:59,809
can very easily happen there is that as

00:35:56,789 --> 00:36:03,719
you apply that mixin again to another

00:35:59,809 --> 00:36:05,579
selector then you're also injecting all

00:36:03,719 --> 00:36:08,069
of the code that comes with that is that

00:36:05,579 --> 00:36:09,299
extended placeholder and then it's going

00:36:08,069 --> 00:36:11,339
to loop through all those different

00:36:09,299 --> 00:36:14,069
scenarios again and then you just end up

00:36:11,339 --> 00:36:17,009
you know just all you got to do is do it

00:36:14,069 --> 00:36:18,719
and then open inspector in chrome and

00:36:17,009 --> 00:36:24,289
then look and see if you make good

00:36:18,719 --> 00:36:26,880
choices or bad choices thanks hey I have

00:36:24,289 --> 00:36:28,769
two questions that'll go to the back for

00:36:26,880 --> 00:36:31,469
the second one the the question I have

00:36:28,769 --> 00:36:33,329
for you immediately is how do you extend

00:36:31,469 --> 00:36:34,920
across media queries I know that that

00:36:33,329 --> 00:36:40,650
makes things kind of blow up right now

00:36:34,920 --> 00:36:42,749
ok that's a trick I don't mean it to be

00:36:40,650 --> 00:36:45,210
a trick I mean no no no it's it's a it's

00:36:42,749 --> 00:36:49,640
a very interesting question um the the

00:36:45,210 --> 00:36:52,319
trick behind it is that you need to have

00:36:49,640 --> 00:36:53,999
so basically how extent how extends work

00:36:52,319 --> 00:36:57,180
in relationship the media queries is

00:36:53,999 --> 00:37:00,180
that the extended selector is scoped by

00:36:57,180 --> 00:37:01,769
the media query so if you are you you

00:37:00,180 --> 00:37:03,359
create a media query and then you create

00:37:01,769 --> 00:37:05,460
another selector and then you want to

00:37:03,359 --> 00:37:07,950
extend something that is outside of the

00:37:05,460 --> 00:37:10,289
media query SAS is basically puke

00:37:07,950 --> 00:37:11,579
on you ok right now they have a silent

00:37:10,289 --> 00:37:13,049
fail which says it's not going to work

00:37:11,579 --> 00:37:16,219
but in the next version is going crash

00:37:13,049 --> 00:37:18,440
on you so the way to get around that is

00:37:16,219 --> 00:37:21,050
what I'll typically do is

00:37:18,440 --> 00:37:22,430
I will create place holders that are to

00:37:21,050 --> 00:37:24,980
be used within that media query

00:37:22,430 --> 00:37:27,349
underneath another media query so it

00:37:24,980 --> 00:37:28,819
doesn't have to all live because the

00:37:27,349 --> 00:37:30,530
cool thing about SAS is that you can

00:37:28,819 --> 00:37:32,780
write your selector right and then you

00:37:30,530 --> 00:37:34,520
can nest a media query with the via the

00:37:32,780 --> 00:37:36,829
bubble up method and then you can write

00:37:34,520 --> 00:37:40,160
all your media queries specific SAS

00:37:36,829 --> 00:37:43,810
based on that base on that one

00:37:40,160 --> 00:37:46,339
particular selector so if you have

00:37:43,810 --> 00:37:47,780
somewhere else in your hierarchy of SAS

00:37:46,339 --> 00:37:50,180
you basically have a series of

00:37:47,780 --> 00:37:52,480
placeholders that are also written

00:37:50,180 --> 00:37:55,190
underneath a media query that will work

00:37:52,480 --> 00:37:56,390
does that make sense I mean it's a

00:37:55,190 --> 00:37:59,829
little ambit used to me what do you mean

00:37:56,390 --> 00:38:04,450
like underneath the media query so um

00:37:59,829 --> 00:38:10,869
just nested inside of the media Quarrier

00:38:04,450 --> 00:38:15,410
the internets to work not really it's um

00:38:10,869 --> 00:38:17,030
I kind of have any no no the internet

00:38:15,410 --> 00:38:19,970
doesn't work no no I'm getting something

00:38:17,030 --> 00:38:24,230
so it's it's basically not like a really

00:38:19,970 --> 00:38:26,420
good example is nathan smith wrote a

00:38:24,230 --> 00:38:28,550
uncemented grid system and then one of

00:38:26,420 --> 00:38:30,740
the things that he did was that he

00:38:28,550 --> 00:38:35,089
created a whole bunch of placeholder

00:38:30,740 --> 00:38:37,310
code and then he has a master import

00:38:35,089 --> 00:38:41,000
file that he defines a media query and

00:38:37,310 --> 00:38:44,000
then he imports all of that placeholder

00:38:41,000 --> 00:38:46,069
code inside of that media query so then

00:38:44,000 --> 00:38:48,200
now all of those placeholders honestly

00:38:46,069 --> 00:38:50,390
live inside of the media query and then

00:38:48,200 --> 00:38:52,760
anytime you create a selector to find

00:38:50,390 --> 00:38:54,079
the media query SAS is going oh yeah it

00:38:52,760 --> 00:38:55,310
actually lives under the media query so

00:38:54,079 --> 00:38:57,079
it's scoped appropriately and I will

00:38:55,310 --> 00:39:00,730
apply to this particular use case okay

00:38:57,079 --> 00:39:03,970
that makes sense that make sense okay

00:39:00,730 --> 00:39:06,920
yeah that was pretty much my question

00:39:03,970 --> 00:39:11,359
but I have a one more question to act

00:39:06,920 --> 00:39:13,280
now we said like so should we have to

00:39:11,359 --> 00:39:18,050
define twice like for example if we

00:39:13,280 --> 00:39:20,450
create extends colors border borders and

00:39:18,050 --> 00:39:23,270
we have a width of two pixels should we

00:39:20,450 --> 00:39:26,810
extend should we define it wise in under

00:39:23,270 --> 00:39:28,579
two different media queries um I mean

00:39:26,810 --> 00:39:29,720
again it wholly depends on the use case

00:39:28,579 --> 00:39:30,800
of how you're trying to build those

00:39:29,720 --> 00:39:34,160
things I mean you could

00:39:30,800 --> 00:39:36,050
it doesn't make you feel right um so

00:39:34,160 --> 00:39:38,510
you're repeating again right like yeah I

00:39:36,050 --> 00:39:40,790
mean there isn't anything yet that that

00:39:38,510 --> 00:39:42,830
was my thing actually like started with

00:39:40,790 --> 00:39:44,390
this but when it came to media equities

00:39:42,830 --> 00:39:47,210
we found that we are repeating ourselves

00:39:44,390 --> 00:39:49,730
again again because like once for let's

00:39:47,210 --> 00:39:51,950
say seven twenty and we have to define

00:39:49,730 --> 00:39:54,260
the same styles once again for 1024

00:39:51,950 --> 00:39:56,270
you're going to use silent play

00:39:54,260 --> 00:39:58,460
shoulders should kind of silent place

00:39:56,270 --> 00:40:02,270
all this also fails in this case right I

00:39:58,460 --> 00:40:04,010
mean but what we what we are doing I

00:40:02,270 --> 00:40:05,780
know if there are better ways to do it

00:40:04,010 --> 00:40:07,850
but this is something which I which we

00:40:05,780 --> 00:40:11,120
do I just want to verify if that's fine

00:40:07,850 --> 00:40:16,490
sure we do is we have a mixin huh and

00:40:11,120 --> 00:40:21,530
then also we extend that mixing in this

00:40:16,490 --> 00:40:23,090
in the next in like we have a mix

00:40:21,530 --> 00:40:25,580
enlisted for example oh yeah yeah you

00:40:23,090 --> 00:40:27,200
can yeah yeah that makes sense I mean

00:40:25,580 --> 00:40:29,960
you saw that you defined it really once

00:40:27,200 --> 00:40:33,290
and then for each of the media query we

00:40:29,960 --> 00:40:39,190
just go ahead and say include this mixin

00:40:33,290 --> 00:40:39,190
so is that I mean if this if this okay

00:40:45,500 --> 00:40:52,670
how do they do this um yeah i mean if if

00:40:50,450 --> 00:40:53,570
you guys and people want to if you guys

00:40:52,670 --> 00:40:55,220
want to talk of this a lil bit more

00:40:53,570 --> 00:40:59,570
about the session i would i can show you

00:40:55,220 --> 00:41:00,830
some examples i I know you briefly

00:40:59,570 --> 00:41:04,250
touched on the fact that you like to use

00:41:00,830 --> 00:41:07,100
modular file structure ooh but I guess

00:41:04,250 --> 00:41:11,690
what I missed was does that have a

00:41:07,100 --> 00:41:12,650
special place with o's scss um no that's

00:41:11,690 --> 00:41:16,220
why I didn't really talk about it that

00:41:12,650 --> 00:41:18,350
much in this presentation I have I have

00:41:16,220 --> 00:41:23,720
a whole other presentation that you can

00:41:18,350 --> 00:41:25,850
get from a speaker deck okay um it's

00:41:23,720 --> 00:41:30,050
basically called you just google it its

00:41:25,850 --> 00:41:31,490
SAS clean out your junk drawer and the

00:41:30,050 --> 00:41:34,070
whole premise of that particular

00:41:31,490 --> 00:41:36,980
presentation is you know the horrible

00:41:34,070 --> 00:41:38,360
practices of everybody just you know a

00:41:36,980 --> 00:41:40,250
lot of people when they come to SAS and

00:41:38,360 --> 00:41:42,860
then they come they you know they find

00:41:40,250 --> 00:41:45,620
out about the the ability to create

00:41:42,860 --> 00:41:47,960
partials then they just create a folder

00:41:45,620 --> 00:41:49,460
called partials right and then you just

00:41:47,960 --> 00:41:50,540
shove all your parcels in that folder

00:41:49,460 --> 00:41:52,330
and you make an endless amount of

00:41:50,540 --> 00:41:54,740
partials and you do your import thing so

00:41:52,330 --> 00:41:56,540
SAS clean out your junk drawer basically

00:41:54,740 --> 00:41:59,090
talks about how you can have a better

00:41:56,540 --> 00:42:01,610
folder structure for managing you know

00:41:59,090 --> 00:42:03,650
your your elemental Styles your module

00:42:01,610 --> 00:42:05,890
Styles your layout styles and then keep

00:42:03,650 --> 00:42:07,820
them in a place that is consistently

00:42:05,890 --> 00:42:09,530
usable so that everybody on the team

00:42:07,820 --> 00:42:13,850
knows where to look for code it's very

00:42:09,530 --> 00:42:16,310
cool thank you right cool so I went to

00:42:13,850 --> 00:42:21,080
schnucks presentation on snacks yeah you

00:42:16,310 --> 00:42:23,180
did and I've read up on it online but my

00:42:21,080 --> 00:42:25,700
approach was slimmer Dior's well no not

00:42:23,180 --> 00:42:26,570
quite as clean and different training

00:42:25,700 --> 00:42:30,110
between the functional and

00:42:26,570 --> 00:42:31,400
presentational and it seems like what

00:42:30,110 --> 00:42:33,080
you're saying here is a lot more

00:42:31,400 --> 00:42:35,090
appealing to me rather than nesting a

00:42:33,080 --> 00:42:38,810
bunch of classes even though it's a bit

00:42:35,090 --> 00:42:40,310
more in a certain sensors of theirs

00:42:38,810 --> 00:42:41,930
there is a certain sense of redundancy

00:42:40,310 --> 00:42:45,920
mm-hmm I think you could kind of takes

00:42:41,930 --> 00:42:50,000
max principles for naming your place

00:42:45,920 --> 00:42:51,920
holders vaguely but I mean it's yeah

00:42:50,000 --> 00:42:53,930
there's nothing i'm saying here today is

00:42:51,920 --> 00:42:56,000
going to say that you know what you know

00:42:53,930 --> 00:42:58,200
the principles of snacks the principles

00:42:56,000 --> 00:43:00,930
of object-oriented suppose of smacks

00:42:58,200 --> 00:43:02,790
our good principles I I'm totally cool

00:43:00,930 --> 00:43:05,160
with that and having having a consistent

00:43:02,790 --> 00:43:07,200
naming convention that works within your

00:43:05,160 --> 00:43:09,109
I mean the funny thing is is that when

00:43:07,200 --> 00:43:11,430
we you know we as developers and

00:43:09,109 --> 00:43:13,020
presentational developers start sayings

00:43:11,430 --> 00:43:16,109
like you know I want my stuff to be more

00:43:13,020 --> 00:43:17,579
semantic everybody remembers you know

00:43:16,109 --> 00:43:19,589
when you get into an argument with

00:43:17,579 --> 00:43:20,790
somebody and the argument ends with you

00:43:19,589 --> 00:43:23,640
know now we're just arguing over

00:43:20,790 --> 00:43:25,680
semantics this argument begins with

00:43:23,640 --> 00:43:27,089
semantics because now you know this is

00:43:25,680 --> 00:43:28,410
not going to go anywhere right so you're

00:43:27,089 --> 00:43:31,349
you're fighting over something that is

00:43:28,410 --> 00:43:33,570
just purely um you know just totally

00:43:31,349 --> 00:43:36,560
argumentative and so if if the smacks

00:43:33,570 --> 00:43:40,020
naming convention works for you and

00:43:36,560 --> 00:43:42,060
that's great but when I'm advocating for

00:43:40,020 --> 00:43:45,150
and what how I see silent placeholders

00:43:42,060 --> 00:43:47,579
being used is not creating a bunch of

00:43:45,150 --> 00:43:49,829
things written in your CSS just for the

00:43:47,579 --> 00:43:51,930
sake of writing that but be use the

00:43:49,829 --> 00:43:54,180
silent placeholders to write them and

00:43:51,930 --> 00:43:55,859
then use them appropriately with the

00:43:54,180 --> 00:43:57,690
mark-up that exists in your and you're

00:43:55,859 --> 00:44:00,690
done yeah I mean I would see this as

00:43:57,690 --> 00:44:02,700
more of the primary means of development

00:44:00,690 --> 00:44:04,500
and then taking maybe some of the put

00:44:02,700 --> 00:44:07,619
like the naming convention ideas from

00:44:04,500 --> 00:44:09,780
smacks a lot of people don't you that

00:44:07,619 --> 00:44:13,230
yeah I mean his approach team central a

00:44:09,780 --> 00:44:14,760
classic Oh CSS sure well I mean yeah his

00:44:13,230 --> 00:44:15,930
approach is totally talking about like

00:44:14,760 --> 00:44:18,030
you know you're just gonna use vanilla

00:44:15,930 --> 00:44:21,500
SAP you vanilla CSS and here's and

00:44:18,030 --> 00:44:24,569
here's a way to man handle that and I

00:44:21,500 --> 00:44:26,490
even if even if like my manager came out

00:44:24,569 --> 00:44:27,990
to me and said I need you just to output

00:44:26,490 --> 00:44:29,910
some CSS so i can plug it in somewhere

00:44:27,990 --> 00:44:31,560
I'm gonna write it as SAS now just given

00:44:29,910 --> 00:44:34,920
the output I don't write CSS anymore I

00:44:31,560 --> 00:44:36,690
actually hate the language yeah so yeah

00:44:34,920 --> 00:44:38,190
breach discussion then he says like he

00:44:36,690 --> 00:44:40,500
does use extends and imports but much

00:44:38,190 --> 00:44:42,930
more judiciously sure and so I mean I

00:44:40,500 --> 00:44:46,310
personally appreciate your approach

00:44:42,930 --> 00:44:48,960
better well thank you I appreciate that

00:44:46,310 --> 00:44:53,160
thanks for presenting two quick

00:44:48,960 --> 00:44:58,530
questions one is the sass file are there

00:44:53,160 --> 00:45:01,950
d & known issues with like browsers no

00:44:58,530 --> 00:45:03,750
because I mean sasnett the browser never

00:45:01,950 --> 00:45:04,980
cease ass I mean you're outputting

00:45:03,750 --> 00:45:07,140
you're you're going through a

00:45:04,980 --> 00:45:10,619
preprocessor that's going to output CSS

00:45:07,140 --> 00:45:11,930
so if you do anything that breaks in a

00:45:10,619 --> 00:45:15,210
browser I mean you're

00:45:11,930 --> 00:45:16,950
you're just writing broken code you know

00:45:15,210 --> 00:45:18,750
I mean it's like it's SAS is not going

00:45:16,950 --> 00:45:21,270
to do anything that creates browser

00:45:18,750 --> 00:45:23,970
incompatibilities actually out of all

00:45:21,270 --> 00:45:26,760
the preprocessors out on the market SAS

00:45:23,970 --> 00:45:29,280
is the one where Nathan wisin bomb is

00:45:26,760 --> 00:45:32,190
very specific about honoring the real

00:45:29,280 --> 00:45:35,210
principles of CSS honoring the Cascade

00:45:32,190 --> 00:45:37,760
he understands how CSS works and he

00:45:35,210 --> 00:45:40,559
continues to build SAS in that fashion

00:45:37,760 --> 00:45:42,540
whereas like the guy from stylist he's

00:45:40,559 --> 00:45:44,040
just like I'm writing a preprocessor man

00:45:42,540 --> 00:45:45,599
I'm gonna break all the rules I don't

00:45:44,040 --> 00:45:47,099
care and you know so like there's

00:45:45,599 --> 00:45:48,150
developers on the note side who love

00:45:47,099 --> 00:45:51,030
that because that's all they want to do

00:45:48,150 --> 00:45:55,290
is break rules cool so you know so it's

00:45:51,030 --> 00:45:56,970
if you're writing valid CSS inside of

00:45:55,290 --> 00:45:58,680
sass you're going to get violent see us

00:45:56,970 --> 00:46:00,270
as output and it's going to work what's

00:45:58,680 --> 00:46:03,480
ass is totally going to give you his

00:46:00,270 --> 00:46:05,579
ability to make it easier okay and the

00:46:03,480 --> 00:46:11,910
other question was are there any online

00:46:05,579 --> 00:46:17,790
tool such as jeaious vettel yes yes

00:46:11,910 --> 00:46:22,290
there is I'll just go my local version

00:46:17,790 --> 00:46:23,940
SAS meister com yay okay so this is this

00:46:22,290 --> 00:46:26,099
is a project that a friend of mine and I

00:46:23,940 --> 00:46:29,460
built and the whole purpose of this

00:46:26,099 --> 00:46:32,130
project is to show people how to use

00:46:29,460 --> 00:46:34,680
sass and one of the cool things that it

00:46:32,130 --> 00:46:39,150
does is you can choose between the two

00:46:34,680 --> 00:46:41,339
syntaxes sass and scss and what is also

00:46:39,150 --> 00:46:43,710
in this list is all of the popular

00:46:41,339 --> 00:46:46,049
compass plugins that you hear about on

00:46:43,710 --> 00:46:47,880
the news in the twitter feeds and so

00:46:46,049 --> 00:46:51,000
you're like wow i want to learn how to

00:46:47,880 --> 00:46:52,589
use singularity ok so you don't

00:46:51,000 --> 00:46:53,760
understand how to use singularity and

00:46:52,589 --> 00:46:55,829
you don't want to set up an environment

00:46:53,760 --> 00:46:58,140
to play the singularity so come to sass

00:46:55,829 --> 00:47:00,630
moisture put in singularity code you

00:46:58,140 --> 00:47:02,339
write code and then it spits out CSS and

00:47:00,630 --> 00:47:03,809
everybody knows what CSS also look like

00:47:02,339 --> 00:47:08,150
so you draw one to one and then you

00:47:03,809 --> 00:47:08,150
learn it's cool awesome thank you

00:47:11,020 --> 00:47:15,970
alright I just have a real good question

00:47:13,039 --> 00:47:18,170
I have a really long answer okay awesome

00:47:15,970 --> 00:47:20,529
are you at all concerned about the level

00:47:18,170 --> 00:47:23,180
of specificity with silent extends and

00:47:20,529 --> 00:47:25,970
silent placeholders the level of

00:47:23,180 --> 00:47:27,440
specificity okay light not you're not

00:47:25,970 --> 00:47:30,829
changing your markup you're just

00:47:27,440 --> 00:47:32,960
extending your place holder and in one

00:47:30,829 --> 00:47:35,960
of your example slides that was the good

00:47:32,960 --> 00:47:39,170
example you had a block with maybe 20

00:47:35,960 --> 00:47:41,059
different selectors all associated with

00:47:39,170 --> 00:47:43,339
four lines of CSS and I just have

00:47:41,059 --> 00:47:46,730
concerns that you know if you're

00:47:43,339 --> 00:47:48,440
extending maybe four different silent

00:47:46,730 --> 00:47:51,260
placeholders that you're then going to

00:47:48,440 --> 00:47:53,630
have this yes there is icity that is

00:47:51,260 --> 00:47:58,220
then really challenging to change later

00:47:53,630 --> 00:47:59,809
sure um that is a development principle

00:47:58,220 --> 00:48:02,180
on how you and your team are basically

00:47:59,809 --> 00:48:03,710
developing the widgets I mean the lot of

00:48:02,180 --> 00:48:07,730
the scenarios that I find myself in

00:48:03,710 --> 00:48:09,950
where you know we're writing um we're

00:48:07,730 --> 00:48:14,480
writing a module that has a specific

00:48:09,950 --> 00:48:15,529
name okay but just by the pure nature of

00:48:14,480 --> 00:48:17,329
how we're developing thinking this

00:48:15,529 --> 00:48:19,660
thing's gonna have a specific name but

00:48:17,329 --> 00:48:21,319
then there's a lot of reused design

00:48:19,660 --> 00:48:23,000
presentational things that are going to

00:48:21,319 --> 00:48:24,619
get appended to that so then that's

00:48:23,000 --> 00:48:27,020
where I make good use of it but if you

00:48:24,619 --> 00:48:28,549
come up if there are things that are you

00:48:27,020 --> 00:48:31,069
know more generically name like you know

00:48:28,549 --> 00:48:32,839
this is a primary article or a primary

00:48:31,069 --> 00:48:34,670
sub-header there's no reason in the rest

00:48:32,839 --> 00:48:36,289
of your code to change that name sure

00:48:34,670 --> 00:48:37,609
you know so then that would actually be

00:48:36,289 --> 00:48:38,930
the class and you don't actually even

00:48:37,609 --> 00:48:40,760
need a silent placeholder in that

00:48:38,930 --> 00:48:42,109
scenario so it all kind of depends on

00:48:40,760 --> 00:48:43,609
the use case you know I'm not advocating

00:48:42,109 --> 00:48:44,539
to say that you know every design

00:48:43,609 --> 00:48:46,700
principle should be a silent

00:48:44,539 --> 00:48:48,680
placeholders and then change every class

00:48:46,700 --> 00:48:51,049
in your DOM and because you can extend

00:48:48,680 --> 00:48:52,369
everything is that's pretty badass what

00:48:51,049 --> 00:48:53,900
you're going to end up with is a whole

00:48:52,369 --> 00:48:56,359
bunch of really crappy CSS and then you

00:48:53,900 --> 00:48:58,160
just feel bad about yourself so it's a

00:48:56,359 --> 00:49:00,529
balance yeah it's totally a balance

00:48:58,160 --> 00:49:02,450
between smacks and this you know it's

00:49:00,529 --> 00:49:06,680
not an either/or thing right I mean it's

00:49:02,450 --> 00:49:08,630
a I'm a tool as a hammer and I try to

00:49:06,680 --> 00:49:13,359
make small holes in the wall not big

00:49:08,630 --> 00:49:13,359
ones awesome so thanks a lot thank you

00:49:15,800 --> 00:49:25,700
going once going twice thank you

00:49:19,680 --> 00:49:25,700
everybody for showing off triple camp

00:49:26,210 --> 00:49:32,450
SAS moisture use it love it it's great

00:49:29,640 --> 00:49:32,450

YouTube URL: https://www.youtube.com/watch?v=Ckh_09hi94w


