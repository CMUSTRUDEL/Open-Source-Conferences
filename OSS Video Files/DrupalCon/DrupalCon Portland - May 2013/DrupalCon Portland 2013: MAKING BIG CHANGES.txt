Title: DrupalCon Portland 2013: MAKING BIG CHANGES
Publication date: 2013-05-28
Playlist: DrupalCon Portland - May 2013
Description: 
	Each major release of Drupal has introduced a few significant architectural changes that require updates throughout the Drupal codebase, from the form API in Drupal 4.7 to the field API and overhauled database layer in Drupal 7. Such changes accelerate Drupal's growth, but they also carry risks:

Major changes often spawn long, difficult-to-follow issue queue discussions that make it challenging for contributors to participate.
Some of these changes also introduce significant technical debt that negatively impacts other development and the release cycle as a whole.
Patches that touch a lot of the codebase are difficult to reroll, and difficult to roll back if something goes wrong.
Large patches are furthermore difficult to review and can cause contributor burnout.
Drupal 8 has more "big changes" than any previous release. Over the course of the release cycle, we've learned some lessons about what works for making these changes--and what doesn't. I'll summarize some of these lessons, both from Drupal 8 initiative retrospectives and from my own experiences (including merging Views into core and converting blocks to Drupal 8's new plugin system). We'll discuss how we can make the big changes of the future more successful, and how we can make sure Drupal 8's lessons don't go to waste.
Captions: 
	00:00:00,290 --> 00:00:05,029
welcome back to Drupal core therapy

00:00:02,760 --> 00:00:09,090
sorry I mean the core conversation track

00:00:05,029 --> 00:00:11,370
I'm xjm and I'm that's on drupal.org my

00:00:09,090 --> 00:00:12,690
name is Jess I'm probably best known in

00:00:11,370 --> 00:00:14,790
the Drupal community for the core

00:00:12,690 --> 00:00:16,350
contribution mentoring program but I'm

00:00:14,790 --> 00:00:18,480
also one of four co-leads for the views

00:00:16,350 --> 00:00:20,520
in Drupal core initiative and more

00:00:18,480 --> 00:00:23,279
recently I work in the office of the CTO

00:00:20,520 --> 00:00:25,920
at aquia and my job title is codon

00:00:23,279 --> 00:00:28,019
community strategist so what that means

00:00:25,920 --> 00:00:30,179
is that raises my boss and I work on

00:00:28,019 --> 00:00:32,790
core stuff basically full time which is

00:00:30,179 --> 00:00:34,610
pretty cool and so the title of this

00:00:32,790 --> 00:00:37,170
core conversation is making big changes

00:00:34,610 --> 00:00:39,329
and that's big changes in Drupal core

00:00:37,170 --> 00:00:42,120
not in your personal life sorry I'm

00:00:39,329 --> 00:00:44,040
going to really describe four different

00:00:42,120 --> 00:00:45,750
case studies of big patches in Drupal

00:00:44,040 --> 00:00:47,910
core and then summarize some of the

00:00:45,750 --> 00:00:49,020
lessons I think we learned from them and

00:00:47,910 --> 00:00:50,850
then after that we can sort of discuss

00:00:49,020 --> 00:00:53,520
what to do about it but first I'd like

00:00:50,850 --> 00:00:55,289
to scope this a little bit i'm going to

00:00:53,520 --> 00:00:57,539
leave aside for now anything about how

00:00:55,289 --> 00:00:59,730
to run an initiative in general i think

00:00:57,539 --> 00:01:01,039
Shannon already covered that and i also

00:00:59,730 --> 00:01:03,480
want to talk more specifically about

00:01:01,039 --> 00:01:05,549
individual issues individual patches in

00:01:03,480 --> 00:01:07,560
core and also issues that are outside

00:01:05,549 --> 00:01:09,299
the scope of any one initiative I also

00:01:07,560 --> 00:01:10,710
don't want to talk about tools we don't

00:01:09,299 --> 00:01:12,390
have yet like github it like

00:01:10,710 --> 00:01:14,729
improvements the drew blood or tissue

00:01:12,390 --> 00:01:15,990
queues because i think that there's been

00:01:14,729 --> 00:01:17,430
at least one session and one

00:01:15,990 --> 00:01:19,200
conversation devoted those topics

00:01:17,430 --> 00:01:20,700
already and finally i don't want to talk

00:01:19,200 --> 00:01:23,310
about whether our workflow works best

00:01:20,700 --> 00:01:26,820
with patches vs cin boxes vs kaur

00:01:23,310 --> 00:01:29,759
branches vs. unicorns because i don't

00:01:26,820 --> 00:01:31,619
really think that we like resolve that

00:01:29,759 --> 00:01:32,549
or even i think if we started that

00:01:31,619 --> 00:01:34,290
debate would actually be in here until

00:01:32,549 --> 00:01:36,509
code freeze so i'm going to skip past

00:01:34,290 --> 00:01:38,640
that for now at least in my portion of

00:01:36,509 --> 00:01:40,020
this this conversation is drea it's not

00:01:38,640 --> 00:01:41,610
calling it a conversations a little bit

00:01:40,020 --> 00:01:43,020
strange means like I talk at you for

00:01:41,610 --> 00:01:44,670
half of it and then there's the

00:01:43,020 --> 00:01:47,009
conversing part so I there's it needs a

00:01:44,670 --> 00:01:48,509
different label so we have the saying

00:01:47,009 --> 00:01:50,369
and rupal core that the drop is always

00:01:48,509 --> 00:01:51,840
moving and this means that we're willing

00:01:50,369 --> 00:01:54,420
to innovate and make bold changes that

00:01:51,840 --> 00:01:56,909
make triple better um at the same time

00:01:54,420 --> 00:01:59,490
though big changes exposes to risks and

00:01:56,909 --> 00:02:01,950
they can be difficult to manage they add

00:01:59,490 --> 00:02:03,570
to our technical debt and even if our

00:02:01,950 --> 00:02:05,159
goal is to reduce the technical debt in

00:02:03,570 --> 00:02:06,659
the long term in the short term they're

00:02:05,159 --> 00:02:09,509
definitely inducing more and that's a

00:02:06,659 --> 00:02:11,550
risk they lead to issues with hundreds

00:02:09,509 --> 00:02:13,080
of comments this this frustrates all of

00:02:11,550 --> 00:02:14,760
us

00:02:13,080 --> 00:02:20,070
it leads to people burning out and

00:02:14,760 --> 00:02:22,040
tuning out big patches are they break a

00:02:20,070 --> 00:02:25,020
lot they're they're difficult to reroll

00:02:22,040 --> 00:02:27,780
and if if the need comes there also very

00:02:25,020 --> 00:02:28,770
difficult to roll back and a particular

00:02:27,780 --> 00:02:31,770
problem that's close to my heart they're

00:02:28,770 --> 00:02:32,910
freaking hard to review and for the

00:02:31,770 --> 00:02:34,200
retail rings above they cause

00:02:32,910 --> 00:02:35,400
contributor burn out whether whether

00:02:34,200 --> 00:02:36,990
you're reviewing the patch whether

00:02:35,400 --> 00:02:38,310
you're testing the patch whether you're

00:02:36,990 --> 00:02:39,570
just someone following the patch who's

00:02:38,310 --> 00:02:42,300
interested in and especially through the

00:02:39,570 --> 00:02:43,470
patch author on it it can be really

00:02:42,300 --> 00:02:45,030
discouraging even if you're successful

00:02:43,470 --> 00:02:48,110
in the end it can be a very trying

00:02:45,030 --> 00:02:51,330
experience so let's talk specifics I

00:02:48,110 --> 00:02:53,670
can't do that i'm going to describe for

00:02:51,330 --> 00:02:55,470
examples of big changes in core during

00:02:53,670 --> 00:02:57,209
the Drupal 8 release cycle and just walk

00:02:55,470 --> 00:02:59,459
through roughly what happened in those

00:02:57,209 --> 00:03:01,440
issues and the first change in the issue

00:02:59,459 --> 00:03:02,970
is probably my favorite moment in the

00:03:01,440 --> 00:03:05,520
entire Drupal 8 release cycle when views

00:03:02,970 --> 00:03:06,930
was merged into core um and I'm going to

00:03:05,520 --> 00:03:09,420
just describe a little bit help out of

00:03:06,930 --> 00:03:12,900
EDC worked so we started out with an 8 X

00:03:09,420 --> 00:03:15,030
3x branch of views in the views project

00:03:12,900 --> 00:03:17,220
repository and gradually worked on

00:03:15,030 --> 00:03:20,459
removing views external dependencies

00:03:17,220 --> 00:03:21,660
mostly on ctools and stuff that we

00:03:20,459 --> 00:03:24,300
thought would be useful in the rest of

00:03:21,660 --> 00:03:26,280
core on like drop buttons the temporary

00:03:24,300 --> 00:03:29,489
storage temp store configure a tease

00:03:26,280 --> 00:03:32,280
ended up on their own as issues in the

00:03:29,489 --> 00:03:33,540
normal cork you so those issues went

00:03:32,280 --> 00:03:35,610
through the normal core process and were

00:03:33,540 --> 00:03:38,370
adapted to course separately before we

00:03:35,610 --> 00:03:40,830
went to merge views and decor but once

00:03:38,370 --> 00:03:44,100
those dependencies were resolved then

00:03:40,830 --> 00:03:47,370
Tim built us a sandbox um that had views

00:03:44,100 --> 00:03:49,230
as a core module and Jeremy Thorson set

00:03:47,370 --> 00:03:51,660
us up so that test spot could test that

00:03:49,230 --> 00:03:54,090
which was invaluable because core API

00:03:51,660 --> 00:03:55,950
changes were breaking our sandbox pretty

00:03:54,090 --> 00:03:57,269
much on a daily basis and so it was

00:03:55,950 --> 00:03:59,600
really important to have that feedback

00:03:57,269 --> 00:04:03,540
to know whether or not it broke again

00:03:59,600 --> 00:04:05,310
and we knew going in that we had like

00:04:03,540 --> 00:04:07,560
seven years of technical debt to resolve

00:04:05,310 --> 00:04:09,930
so once that we had the sandbox I also

00:04:07,560 --> 00:04:11,670
spent some time crafting what I hoped

00:04:09,930 --> 00:04:12,540
was like a bulletproof issue summary

00:04:11,670 --> 00:04:14,310
this goes back to what we were talking

00:04:12,540 --> 00:04:16,350
about in a previous core conversation

00:04:14,310 --> 00:04:17,970
and I actually like wrote it in a Google

00:04:16,350 --> 00:04:19,530
Doc and reviewed it with the whole views

00:04:17,970 --> 00:04:20,700
and core team before i even posted it

00:04:19,530 --> 00:04:22,169
because i really wanted to make sure

00:04:20,700 --> 00:04:26,130
that the scope of the issue is clearly

00:04:22,169 --> 00:04:26,580
defined we had done a lot of cleanup and

00:04:26,130 --> 00:04:27,840
where fact

00:04:26,580 --> 00:04:30,120
but at the same time you know it's like

00:04:27,840 --> 00:04:32,460
the patch was the patch that we rolled

00:04:30,120 --> 00:04:34,409
to test views against core was 2.5

00:04:32,460 --> 00:04:38,129
megabytes and views has like you know is

00:04:34,409 --> 00:04:40,680
like a change that involved 500 files so

00:04:38,129 --> 00:04:43,979
we ended up merging views in on October

00:04:40,680 --> 00:04:45,509
22nd in 2012 and that means I've used as

00:04:43,979 --> 00:04:49,919
been in cornell for exactly seven months

00:04:45,509 --> 00:04:51,930
seven months guys whoo i should point

00:04:49,919 --> 00:04:53,460
out that we did make some exceptions to

00:04:51,930 --> 00:04:55,590
the normal court process when he merged

00:04:53,460 --> 00:04:59,129
views in and they're still core gates

00:04:55,590 --> 00:05:00,900
issues open for views in in our inner

00:04:59,129 --> 00:05:03,360
issue summary we listed out the things

00:05:00,900 --> 00:05:05,190
that that we're not part of the issue

00:05:03,360 --> 00:05:07,500
like coding standards clean up so we

00:05:05,190 --> 00:05:09,180
also identified some things that if you

00:05:07,500 --> 00:05:11,069
had been a normal just core patch should

00:05:09,180 --> 00:05:12,240
have been part of it in a particular we

00:05:11,069 --> 00:05:14,370
knew that there were accessibility

00:05:12,240 --> 00:05:15,870
problems in views that we weren't going

00:05:14,370 --> 00:05:18,270
to be able to fix in part because we

00:05:15,870 --> 00:05:20,789
were blocked on on on some issues in

00:05:18,270 --> 00:05:23,490
core and in as a matter of fact we still

00:05:20,789 --> 00:05:24,840
have we still have several accessibility

00:05:23,490 --> 00:05:26,909
issues known issues that have been open

00:05:24,840 --> 00:05:29,129
for a long time because we're blocked on

00:05:26,909 --> 00:05:31,379
this one particular issue on so if you

00:05:29,129 --> 00:05:33,840
have if you have any interest in helping

00:05:31,379 --> 00:05:35,370
with the modal dialogues to make it so

00:05:33,840 --> 00:05:36,960
that views is usable with a keyboard

00:05:35,370 --> 00:05:38,969
that would be amazing and come to the

00:05:36,960 --> 00:05:42,389
cold spring on Friday and talk to Daniel

00:05:38,969 --> 00:05:44,009
I didn't even look up okay and they're

00:05:42,389 --> 00:05:46,589
also usability issues we did a usability

00:05:44,009 --> 00:05:48,509
study on views on at bad camp and I say

00:05:46,589 --> 00:05:50,699
we like I planned it all I did was sit

00:05:48,509 --> 00:05:53,430
there and go oh my goodness um but the

00:05:50,699 --> 00:05:54,870
the sum of the usability contributors in

00:05:53,430 --> 00:05:57,150
the Drupal community set up a usability

00:05:54,870 --> 00:05:59,219
study and did that there were also

00:05:57,150 --> 00:06:00,659
performance concerns going in we knew

00:05:59,219 --> 00:06:03,389
that our test coverage wasn't perfect

00:06:00,659 --> 00:06:05,039
but at the same time it was probably the

00:06:03,389 --> 00:06:06,270
right decision to make to Mars using at

00:06:05,039 --> 00:06:07,259
that point in the release cycle because

00:06:06,270 --> 00:06:09,330
there was no way we were going to be

00:06:07,259 --> 00:06:10,740
able to finish all of those things by

00:06:09,330 --> 00:06:12,629
the December first code freeze and it

00:06:10,740 --> 00:06:14,550
did a lot of good for the rest of core

00:06:12,629 --> 00:06:17,039
for views to be in that early because we

00:06:14,550 --> 00:06:18,629
were really able to to have use cases to

00:06:17,039 --> 00:06:20,729
test some api's that wouldn't have been

00:06:18,629 --> 00:06:23,940
available without a module with like

00:06:20,729 --> 00:06:26,219
views there on the second change I'd

00:06:23,940 --> 00:06:29,460
like to talk about is the blocks is

00:06:26,219 --> 00:06:31,620
plugins conversion and this is the one

00:06:29,460 --> 00:06:33,419
that led to a big retrospective with all

00:06:31,620 --> 00:06:35,339
of the initiative owners and then in

00:06:33,419 --> 00:06:37,500
turn to this core conversation being

00:06:35,339 --> 00:06:39,209
proposed so if it seems like I'm picking

00:06:37,500 --> 00:06:39,930
on this issue that's the reason for it

00:06:39,209 --> 00:06:41,940
and it

00:06:39,930 --> 00:06:44,850
a pretty important learning experience

00:06:41,940 --> 00:06:48,389
for all of us so in April of 2012 Chris

00:06:44,850 --> 00:06:50,910
Vander water Eclipse GC posted a 144 k

00:06:48,389 --> 00:06:54,539
patch that added a new plug-in API on

00:06:50,910 --> 00:06:56,850
you block system and a conditions module

00:06:54,539 --> 00:06:59,280
and it also converted every single block

00:06:56,850 --> 00:07:01,889
in core to this new API and it also

00:06:59,280 --> 00:07:04,380
converted the configured block instances

00:07:01,889 --> 00:07:06,060
to the then xml-based configuration

00:07:04,380 --> 00:07:07,440
management system for those of you are

00:07:06,060 --> 00:07:09,630
familiar with cmi that's how long ago

00:07:07,440 --> 00:07:11,910
we're talking about here so once the

00:07:09,630 --> 00:07:13,860
plugins system went in separately in

00:07:11,910 --> 00:07:16,410
August August you just we just jump from

00:07:13,860 --> 00:07:18,509
april to august on chris posted an

00:07:16,410 --> 00:07:20,910
updated patch and then he also added a

00:07:18,509 --> 00:07:22,680
UI overhaul into the mix to make the new

00:07:20,910 --> 00:07:25,759
user interface a new user interface to

00:07:22,680 --> 00:07:28,139
support a new model for placing blocks

00:07:25,759 --> 00:07:29,789
so while the patch converted all of the

00:07:28,139 --> 00:07:31,500
blocks it didn't actually at that point

00:07:29,789 --> 00:07:33,690
update any of the test coverage in fact

00:07:31,500 --> 00:07:35,250
the issue was marked active until August

00:07:33,690 --> 00:07:36,750
until catch came and said its knees

00:07:35,250 --> 00:07:39,060
review and was like what's going on here

00:07:36,750 --> 00:07:40,740
um and of course you know there were

00:07:39,060 --> 00:07:42,930
like hundreds of test failures because

00:07:40,740 --> 00:07:45,630
all these tests were using a block

00:07:42,930 --> 00:07:48,199
system that wasn't there anymore so a

00:07:45,630 --> 00:07:50,820
small group of dedicated superheroes

00:07:48,199 --> 00:07:53,159
nacho alchemilla anderson i think is our

00:07:50,820 --> 00:07:55,979
last name and several developers from

00:07:53,159 --> 00:07:57,720
zip tech spent a bunch of time fixing

00:07:55,979 --> 00:08:00,000
those tests just to convert them to the

00:07:57,720 --> 00:08:02,610
new api there were entire Sprint's

00:08:00,000 --> 00:08:05,250
dedicated to just getting the test the

00:08:02,610 --> 00:08:08,639
old tests to pass for this one patch

00:08:05,250 --> 00:08:13,590
whole sprints and by the time the patch

00:08:08,639 --> 00:08:15,690
was passing it was 400 k ah so that's

00:08:13,590 --> 00:08:18,000
that's when I came into the issue and it

00:08:15,690 --> 00:08:20,460
took me 80 hours to read and review the

00:08:18,000 --> 00:08:22,490
entire patch and I spent spent the

00:08:20,460 --> 00:08:26,460
better part of a transatlantic flight

00:08:22,490 --> 00:08:29,490
writing of a comprehensive 3,000 word

00:08:26,460 --> 00:08:32,579
summary of my other reviews on this

00:08:29,490 --> 00:08:34,200
issue I documented the remaining tasks

00:08:32,579 --> 00:08:35,669
file follow-up sport I thought this

00:08:34,200 --> 00:08:37,950
issue was really important you know it

00:08:35,669 --> 00:08:40,349
was it was doing something that was laid

00:08:37,950 --> 00:08:43,500
in architectural foundation for actually

00:08:40,349 --> 00:08:44,790
views in the future as well I tested it

00:08:43,500 --> 00:08:46,800
manually I helped with some minor

00:08:44,790 --> 00:08:48,450
architectural issues and then I invested

00:08:46,800 --> 00:08:51,970
another 30 hours of work or so in that

00:08:48,450 --> 00:08:53,889
part of it and meanwhile merging

00:08:51,970 --> 00:08:55,839
had for this particular patch because it

00:08:53,889 --> 00:08:58,089
was so big was also failing on other

00:08:55,839 --> 00:08:59,860
core API changes daily so Tim Plunkett

00:08:58,089 --> 00:09:01,420
and I spent a lot of time just fixing

00:08:59,860 --> 00:09:03,699
those merge conflicts over and over and

00:09:01,420 --> 00:09:05,230
over again so on December twentieth and

00:09:03,699 --> 00:09:07,120
now we're from april to December

00:09:05,230 --> 00:09:09,220
twentieth we had this big call with

00:09:07,120 --> 00:09:11,589
threes and several people from the

00:09:09,220 --> 00:09:13,000
blocks and Lance initiative and we came

00:09:11,589 --> 00:09:14,560
to conclusion of the only way the only

00:09:13,000 --> 00:09:16,029
way the Scotch initiative was going to

00:09:14,560 --> 00:09:19,120
make any progress in its release cycle

00:09:16,029 --> 00:09:20,800
was to commit this patch now and just do

00:09:19,120 --> 00:09:22,930
the rest as follows because it was there

00:09:20,800 --> 00:09:26,680
was so much overhead in rerolling this

00:09:22,930 --> 00:09:28,209
patch in maintaining it um so the idea

00:09:26,680 --> 00:09:29,589
was that after that happened we would

00:09:28,209 --> 00:09:31,420
start crowdsourcing this follow-up

00:09:29,589 --> 00:09:33,430
issues because it was some things we're

00:09:31,420 --> 00:09:36,639
no longer condensed in this one 300

00:09:33,430 --> 00:09:38,050
comment 440 k patch we would be able to

00:09:36,639 --> 00:09:39,459
get other people to make just one

00:09:38,050 --> 00:09:42,730
specific change and you'd be easier to

00:09:39,459 --> 00:09:44,050
find people to do that um and so we

00:09:42,730 --> 00:09:46,629
committed the patch on January fourth

00:09:44,050 --> 00:09:48,009
with over 50 follow-ups already filed i

00:09:46,629 --> 00:09:49,180
filed most of those myself even though

00:09:48,009 --> 00:09:51,490
i'm not part of the blocks and layouts

00:09:49,180 --> 00:09:53,709
initiative and we bent the rules pretty

00:09:51,490 --> 00:09:55,180
dramatically for that patch on it did

00:09:53,709 --> 00:09:58,209
not provide an upgrade path for blocks

00:09:55,180 --> 00:10:01,329
at all um it introduced a 15-percent

00:09:58,209 --> 00:10:03,519
performance regression in one particular

00:10:01,329 --> 00:10:06,069
case that we profiled it had numerous

00:10:03,519 --> 00:10:07,389
you I usability issues and the test

00:10:06,069 --> 00:10:09,970
coverage and documentation were also

00:10:07,389 --> 00:10:11,949
incomplete now those two issues still

00:10:09,970 --> 00:10:14,079
aren't resolved so what we have is

00:10:11,949 --> 00:10:17,139
fairly significant architectural debt in

00:10:14,079 --> 00:10:19,180
court right now we made a significant

00:10:17,139 --> 00:10:21,339
improvement but at the same time the

00:10:19,180 --> 00:10:24,759
trade-off has been a persistent risk to

00:10:21,339 --> 00:10:25,990
the release of Drupal 8 um now I want to

00:10:24,759 --> 00:10:27,250
pause out for a second here and talk

00:10:25,990 --> 00:10:29,860
about the similarities and differences

00:10:27,250 --> 00:10:32,170
between these in core and the blocks as

00:10:29,860 --> 00:10:34,870
plugins patch now note that both both

00:10:32,170 --> 00:10:38,050
patches added a new api's decor um and

00:10:34,870 --> 00:10:39,490
both had some exceptions granted to our

00:10:38,050 --> 00:10:41,079
normal policies in order to save them

00:10:39,490 --> 00:10:42,730
from this reroll hell that we were stuck

00:10:41,079 --> 00:10:43,930
in where we couldn't make progress

00:10:42,730 --> 00:10:47,500
because we were spending so much time

00:10:43,930 --> 00:10:49,180
chasing head both had concerns about

00:10:47,500 --> 00:10:51,790
usability and accessibility and

00:10:49,180 --> 00:10:54,149
performance and test coverage and both

00:10:51,790 --> 00:10:56,709
spawned a lot of follow-up issues and

00:10:54,149 --> 00:10:59,740
issues that still persist in all these

00:10:56,709 --> 00:11:01,329
areas in some cases so that's important

00:10:59,740 --> 00:11:03,339
to note you know it's it's not that

00:11:01,329 --> 00:11:04,470
views you know was magic and wonderful

00:11:03,339 --> 00:11:05,490
and blocks did a horrible

00:11:04,470 --> 00:11:07,200
thing there's definitely some

00:11:05,490 --> 00:11:08,700
similarities there but there's also some

00:11:07,200 --> 00:11:10,020
key differences that have sort of affect

00:11:08,700 --> 00:11:12,000
how this is played out over the course

00:11:10,020 --> 00:11:13,770
of the release cycle and the first thing

00:11:12,000 --> 00:11:15,330
is that the views API which you know

00:11:13,770 --> 00:11:16,800
it's not perfect it has been battle

00:11:15,330 --> 00:11:19,140
tested for seven years as a contributed

00:11:16,800 --> 00:11:20,670
module its installed on seventy percent

00:11:19,140 --> 00:11:23,790
of Drupal sites so there's definitely

00:11:20,670 --> 00:11:26,160
issues with it but you we we have that

00:11:23,790 --> 00:11:27,480
community testing over time whereas the

00:11:26,160 --> 00:11:29,910
block was introducing an entirely new

00:11:27,480 --> 00:11:31,740
API the plug-in system based

00:11:29,910 --> 00:11:33,600
conceptually on CTools but not the same

00:11:31,740 --> 00:11:35,790
thing and also and this is important

00:11:33,600 --> 00:11:36,840
views went in three months before the

00:11:35,790 --> 00:11:38,540
first feature free so we're talking

00:11:36,840 --> 00:11:41,310
about the difference between October

00:11:38,540 --> 00:11:43,800
22nd in January fourth and that's that's

00:11:41,310 --> 00:11:46,230
a big gap in terms of a release cycle

00:11:43,800 --> 00:11:49,620
especially the last the last year of the

00:11:46,230 --> 00:11:51,450
Drupal 8 release cycle also views unlike

00:11:49,620 --> 00:11:54,480
blocks and plugins didn't actually

00:11:51,450 --> 00:11:58,080
significantly impact the rest of core

00:11:54,480 --> 00:11:59,700
when it went in um in fact if we had

00:11:58,080 --> 00:12:01,140
done the equivalent of what the block

00:11:59,700 --> 00:12:03,330
says plugins patch had tried to do in

00:12:01,140 --> 00:12:05,910
views every core listing would have had

00:12:03,330 --> 00:12:08,130
to have been converted two of you before

00:12:05,910 --> 00:12:10,530
we merged views in and we've done one of

00:12:08,130 --> 00:12:12,840
them so far by now in mid-may we're

00:12:10,530 --> 00:12:16,320
working on three more that are should

00:12:12,840 --> 00:12:21,870
land I think soon I you put your head

00:12:16,320 --> 00:12:23,400
done did it go in no okay okay okay see

00:12:21,870 --> 00:12:25,880
if I were putting your head down because

00:12:23,400 --> 00:12:28,920
like I didn't touch the cute okay so

00:12:25,880 --> 00:12:30,570
they will go I I have faith that there

00:12:28,920 --> 00:12:32,400
are at least one of these issues will go

00:12:30,570 --> 00:12:35,130
on this this friday I'll put it that way

00:12:32,400 --> 00:12:39,810
um but yeah so if we had tried to

00:12:35,130 --> 00:12:41,280
convert every listing in core uh 22

00:12:39,810 --> 00:12:43,680
views before your marriage views I just

00:12:41,280 --> 00:12:45,750
want have been possible and finally the

00:12:43,680 --> 00:12:47,460
community made it a focus to start

00:12:45,750 --> 00:12:50,100
addressing views gates issues right away

00:12:47,460 --> 00:12:51,960
like I said we had a usability usability

00:12:50,100 --> 00:12:54,630
study done at bad camp which was just

00:12:51,960 --> 00:12:56,550
like a week later um and the

00:12:54,630 --> 00:12:57,870
accessibility issues we tried to start

00:12:56,550 --> 00:12:59,700
working on them right away and then got

00:12:57,870 --> 00:13:00,660
block on this one thing that we couldn't

00:12:59,700 --> 00:13:04,200
really college source it's a problem

00:13:00,660 --> 00:13:06,450
that I don't know how to solve so it's

00:13:04,200 --> 00:13:08,900
it's they're similar situations but

00:13:06,450 --> 00:13:11,580
there's also some important differences

00:13:08,900 --> 00:13:13,950
like to move on to our third change this

00:13:11,580 --> 00:13:17,640
is the field API to see my conversion on

00:13:13,950 --> 00:13:21,240
Swan tell file dispatch last August

00:13:17,640 --> 00:13:23,070
um and to start it was only 37 k um and

00:13:21,240 --> 00:13:25,050
they got the patch passing test pretty

00:13:23,070 --> 00:13:27,150
early in it um and people started

00:13:25,050 --> 00:13:29,400
reviewing it right away the issue

00:13:27,150 --> 00:13:31,080
summary was clear succinct it was

00:13:29,400 --> 00:13:33,120
regularly updated with the changes in

00:13:31,080 --> 00:13:36,030
the status of the issue issues related

00:13:33,120 --> 00:13:38,910
to it on they worked on the conversion

00:13:36,030 --> 00:13:41,700
in a sandbox and they started adding an

00:13:38,910 --> 00:13:43,110
upgrade path in October um now the

00:13:41,700 --> 00:13:45,330
originally she had been posted before

00:13:43,110 --> 00:13:48,000
drupalcon eunuch which is when we added

00:13:45,330 --> 00:13:50,760
the configuration entity API decor and

00:13:48,000 --> 00:13:51,960
you know after we added that API it was

00:13:50,760 --> 00:13:54,450
pretty clear that fields should also use

00:13:51,960 --> 00:13:56,480
it for for configured field instances on

00:13:54,450 --> 00:13:58,920
so they had to convert to that as well

00:13:56,480 --> 00:14:03,750
and that that Alex started working on

00:13:58,920 --> 00:14:05,580
that in November um I'm here okay so the

00:14:03,750 --> 00:14:06,960
the thing that was most amazing about

00:14:05,580 --> 00:14:08,250
this issue is they always responded

00:14:06,960 --> 00:14:10,320
right away when someone posted something

00:14:08,250 --> 00:14:11,280
even when there was over the winter

00:14:10,320 --> 00:14:13,380
there was sort of a period of silence

00:14:11,280 --> 00:14:14,940
when they were kind of blocked on an

00:14:13,380 --> 00:14:16,230
upgrade path problem they still

00:14:14,940 --> 00:14:18,390
responded right away when someone post

00:14:16,230 --> 00:14:22,230
in the issue what's going on here um so

00:14:18,390 --> 00:14:24,420
that was cool um so Justin the jeebus

00:14:22,230 --> 00:14:25,920
did some performance testing on this in

00:14:24,420 --> 00:14:28,680
the spring and they also work with him

00:14:25,920 --> 00:14:30,960
on that right away um they posted sort

00:14:28,680 --> 00:14:32,100
of the the canonical patch for it the

00:14:30,960 --> 00:14:34,290
one that they said they thought was

00:14:32,100 --> 00:14:39,960
ready to be reviewed in in March right

00:14:34,290 --> 00:14:41,340
um March fifteenth I think and um and it

00:14:39,960 --> 00:14:42,960
was passing tests and they actually

00:14:41,340 --> 00:14:43,980
updated the issue summary to indicate

00:14:42,960 --> 00:14:46,670
that they thought the issue was ready

00:14:43,980 --> 00:14:52,350
for serious reviews which was awesome um

00:14:46,670 --> 00:14:54,600
so uh they that we myself and Alex pot

00:14:52,350 --> 00:14:56,760
and Alex Braun seed um did some detailed

00:14:54,600 --> 00:14:58,890
reviews and they each time we post her

00:14:56,760 --> 00:15:02,850
you they followed up responding to every

00:14:58,890 --> 00:15:04,950
point that we discussed um and it it

00:15:02,850 --> 00:15:07,680
actually sew the patch was 250k in the

00:15:04,950 --> 00:15:09,510
end but it only in quotes took me about

00:15:07,680 --> 00:15:11,610
eight hours to review it as opposed to

00:15:09,510 --> 00:15:12,960
the ad i spent as the blocks is plugins

00:15:11,610 --> 00:15:14,490
patch which was less than twice as large

00:15:12,960 --> 00:15:16,260
so there's a significant difference

00:15:14,490 --> 00:15:19,350
there and I'll get into in my lessons

00:15:16,260 --> 00:15:20,610
learned why I think that is um so that

00:15:19,350 --> 00:15:21,500
they you know we had we had some

00:15:20,610 --> 00:15:24,030
miscommunications misunderstandings

00:15:21,500 --> 00:15:26,130
originally but they did they were they

00:15:24,030 --> 00:15:28,680
were pretty supportive in terms of like

00:15:26,130 --> 00:15:30,390
filing follow-up issues right away to

00:15:28,680 --> 00:15:31,170
make sure that things that I I brought

00:15:30,390 --> 00:15:32,790
up that we're out of

00:15:31,170 --> 00:15:36,149
scope for the what they were trying to

00:15:32,790 --> 00:15:38,519
do ended up and follow up issues um by

00:15:36,149 --> 00:15:39,990
the first week in april they were still

00:15:38,519 --> 00:15:42,209
working through our feedback you know

00:15:39,990 --> 00:15:43,860
because it was a big patch there was i

00:15:42,209 --> 00:15:46,470
and i read i read patches line by line

00:15:43,860 --> 00:15:48,870
so i had posted quite a lot of

00:15:46,470 --> 00:15:50,370
information and why should express that

00:15:48,870 --> 00:15:51,860
it was difficult to address all the

00:15:50,370 --> 00:15:53,670
feedback that we posted for such a

00:15:51,860 --> 00:15:55,410
significant change for such a large

00:15:53,670 --> 00:15:57,120
patch and the words that he used were

00:15:55,410 --> 00:16:00,899
actually that it was daunting in

00:15:57,120 --> 00:16:03,720
somewhat soul-crushing um so after that

00:16:00,899 --> 00:16:06,600
I felt really bad and as soon as I can

00:16:03,720 --> 00:16:08,490
make time I tried to help like filter

00:16:06,600 --> 00:16:11,279
out some of the noise in my reviews and

00:16:08,490 --> 00:16:13,500
other reviews um I spent all gave me

00:16:11,279 --> 00:16:15,000
access to their sandbox and I made some

00:16:13,500 --> 00:16:17,130
just really stupid minor cleanups that

00:16:15,000 --> 00:16:18,959
I'd identified in my reviews did the

00:16:17,130 --> 00:16:21,899
best i could do with their documentation

00:16:18,959 --> 00:16:24,089
as far as i could understand it and then

00:16:21,899 --> 00:16:26,579
then condense my review down into one

00:16:24,089 --> 00:16:28,380
post that listed everything um and that

00:16:26,579 --> 00:16:30,060
actually worked out pretty well because

00:16:28,380 --> 00:16:32,130
i had the privilege of RT be seeing it

00:16:30,060 --> 00:16:34,620
for days later and then it was committed

00:16:32,130 --> 00:16:35,730
live at what front of united does the

00:16:34,620 --> 00:16:37,320
name of it yeah and there's a video you

00:16:35,730 --> 00:16:38,790
can even watch you can even watch them

00:16:37,320 --> 00:16:40,380
live when the patches committed it's

00:16:38,790 --> 00:16:41,940
pretty cool and i have to say they're

00:16:40,380 --> 00:16:43,589
like reviewing that patch after the

00:16:41,940 --> 00:16:45,420
experiences with blocks and plugins was

00:16:43,589 --> 00:16:47,730
rewarding because it reminded me that as

00:16:45,420 --> 00:16:49,110
as a community of people working under

00:16:47,730 --> 00:16:51,240
book or we should really trust each

00:16:49,110 --> 00:16:54,800
other and i wish that i remember that

00:16:51,240 --> 00:16:57,779
going in um and the fourth big change is

00:16:54,800 --> 00:17:00,410
one that's still under way and that's

00:16:57,779 --> 00:17:02,760
the twig conversion of the converting on

00:17:00,410 --> 00:17:04,740
PHP templates to twig templates it's

00:17:02,760 --> 00:17:06,540
actually only a part of what the twig

00:17:04,740 --> 00:17:08,610
initiatives trying twig unofficial

00:17:06,540 --> 00:17:11,400
initiative is trying to do and i should

00:17:08,610 --> 00:17:13,380
give a little background here um there

00:17:11,400 --> 00:17:15,449
have been issues to convert templates to

00:17:13,380 --> 00:17:16,500
twig which is our new feet hopefully our

00:17:15,449 --> 00:17:20,339
youth going to be on your theming system

00:17:16,500 --> 00:17:22,589
and replayed open since november but

00:17:20,339 --> 00:17:24,209
they for a while they sort of trickled

00:17:22,589 --> 00:17:26,579
along and then this spring a bunch of

00:17:24,209 --> 00:17:29,429
people started working on them on and

00:17:26,579 --> 00:17:30,929
you if you work on core issues you might

00:17:29,429 --> 00:17:32,640
have known noticed recently that a bunch

00:17:30,929 --> 00:17:33,809
of them were sitting at RT bc which

00:17:32,640 --> 00:17:36,169
stands for reviewed and tested by the

00:17:33,809 --> 00:17:38,910
community i forgot to say that earlier

00:17:36,169 --> 00:17:40,500
it means that accordance with the issues

00:17:38,910 --> 00:17:43,860
ready for a core maintainer to look at

00:17:40,500 --> 00:17:44,770
it's gone through our QA process um so

00:17:43,860 --> 00:17:46,390
but

00:17:44,770 --> 00:17:47,680
since it's so late in the release cycle

00:17:46,390 --> 00:17:49,170
it's already after our feature freeze

00:17:47,680 --> 00:17:51,190
and approaching our code freeze on

00:17:49,170 --> 00:17:52,960
juries has been working with the other

00:17:51,190 --> 00:17:54,760
core maintainers and with the leads of a

00:17:52,960 --> 00:17:57,100
couple initiatives to try to mitigate

00:17:54,760 --> 00:17:58,450
the risk that making changes at this

00:17:57,100 --> 00:17:59,350
point is going to push back our release

00:17:58,450 --> 00:18:00,910
date because that's something we

00:17:59,350 --> 00:18:02,880
definitely don't want we saw the

00:18:00,910 --> 00:18:05,980
negative impact of that in Drupal 7 and

00:18:02,880 --> 00:18:07,600
it's it's as much as possible we want to

00:18:05,980 --> 00:18:09,400
get Drupal 8 out the door sooner rather

00:18:07,600 --> 00:18:10,540
than later so we need at this point

00:18:09,400 --> 00:18:13,120
they're always like who are focused on

00:18:10,540 --> 00:18:16,090
managing our technical debt so what what

00:18:13,120 --> 00:18:17,950
the twig team agreed to do is that so

00:18:16,090 --> 00:18:19,300
that we don't have core half can in one

00:18:17,950 --> 00:18:20,860
templating system in half an another

00:18:19,300 --> 00:18:23,170
templating system which would be

00:18:20,860 --> 00:18:25,000
completely unusable for the-- MERS

00:18:23,170 --> 00:18:27,730
anywhere and make their lives much worse

00:18:25,000 --> 00:18:30,250
instead of better um we're going to

00:18:27,730 --> 00:18:31,660
convert all of the templates in one

00:18:30,250 --> 00:18:33,310
patch and a lot of the individual

00:18:31,660 --> 00:18:35,740
templates are done already in individual

00:18:33,310 --> 00:18:36,850
issues but what they're going to do is

00:18:35,740 --> 00:18:38,800
they're going to compile them into one

00:18:36,850 --> 00:18:40,270
patch it's sort of like what they're

00:18:38,800 --> 00:18:41,920
doing is sort of the equivalent of pull

00:18:40,270 --> 00:18:43,330
requests on github but at the same time

00:18:41,920 --> 00:18:45,670
they're they're using the issue queue

00:18:43,330 --> 00:18:46,690
pledge patchwork float to do it both

00:18:45,670 --> 00:18:48,130
because that's what they were most

00:18:46,690 --> 00:18:49,900
comfortable with and also because it

00:18:48,130 --> 00:18:51,580
gave them the visibility of the cork you

00:18:49,900 --> 00:18:52,840
to get this stuff reviewed so that's

00:18:51,580 --> 00:18:54,100
still underway and it's making great

00:18:52,840 --> 00:18:55,390
progress but it definitely followed a

00:18:54,100 --> 00:19:01,540
very different pattern from these other

00:18:55,390 --> 00:19:02,710
massive patches so um I have a bunch of

00:19:01,540 --> 00:19:04,350
lessons list here and this is the point

00:19:02,710 --> 00:19:08,080
at which my presentation sort of

00:19:04,350 --> 00:19:09,550
collapses into just what I think I was

00:19:08,080 --> 00:19:11,860
helping to sort of consolidate us a

00:19:09,550 --> 00:19:12,820
little bit into more important messages

00:19:11,860 --> 00:19:14,130
but I'm just going to go through them

00:19:12,820 --> 00:19:16,420
because I didn't really have time I

00:19:14,130 --> 00:19:18,010
really overbooked myself this conference

00:19:16,420 --> 00:19:20,260
it turns out that you can't like run

00:19:18,010 --> 00:19:21,880
have like you know eight or ten

00:19:20,260 --> 00:19:23,530
technical discussions try to run a

00:19:21,880 --> 00:19:24,490
sprint and present it three or four

00:19:23,530 --> 00:19:26,320
different things that's just a really

00:19:24,490 --> 00:19:28,690
bad idea and don't ever do it and I'm

00:19:26,320 --> 00:19:30,370
not going to again and also these

00:19:28,690 --> 00:19:31,750
lessons are things that I think we're

00:19:30,370 --> 00:19:33,640
important there they come out of my

00:19:31,750 --> 00:19:35,350
experience as a reviewer and more

00:19:33,640 --> 00:19:38,050
recently my experience working directly

00:19:35,350 --> 00:19:43,180
with Driessen web chick as core maintain

00:19:38,050 --> 00:19:46,330
errs so lesson number one is that the

00:19:43,180 --> 00:19:48,250
risk of a big change and whether that

00:19:46,330 --> 00:19:49,360
risk is a concern depends on when we are

00:19:48,250 --> 00:19:50,560
in the release cycle and this is

00:19:49,360 --> 00:19:52,120
something we really didn't think about

00:19:50,560 --> 00:19:54,430
with blocks as plugins as much as we

00:19:52,120 --> 00:19:56,260
should have so marginv using in October

00:19:54,430 --> 00:19:57,710
was different from adding blocks as

00:19:56,260 --> 00:19:59,480
plugins in January and

00:19:57,710 --> 00:20:02,090
was different from trying to get to

00:19:59,480 --> 00:20:03,860
again now in made May or early June um

00:20:02,090 --> 00:20:06,409
and that's something we'll need to keep

00:20:03,860 --> 00:20:08,029
in mind as we go forward as it will in

00:20:06,409 --> 00:20:10,010
this release cycle it's it's already a

00:20:08,029 --> 00:20:12,500
focus and dress is very concerned about

00:20:10,010 --> 00:20:13,669
it but it's also something we'll need to

00:20:12,500 --> 00:20:15,890
keep in mind I think through the whole

00:20:13,669 --> 00:20:17,990
initiative interval 9r sorry the whole

00:20:15,890 --> 00:20:20,390
release cycle in triple nine second

00:20:17,990 --> 00:20:21,860
lesson lesson in three parts and if you

00:20:20,390 --> 00:20:24,260
remember nothing else from my whole talk

00:20:21,860 --> 00:20:25,760
I should remember this which also means

00:20:24,260 --> 00:20:27,020
that I should have put it at the

00:20:25,760 --> 00:20:29,270
beginning or the end instead of in the

00:20:27,020 --> 00:20:31,130
middle this is me not thinking ahead but

00:20:29,270 --> 00:20:33,380
clearly define the scope of this issue

00:20:31,130 --> 00:20:35,000
what I mean is saying your issue what

00:20:33,380 --> 00:20:36,770
what's involved what you're going to do

00:20:35,000 --> 00:20:38,390
and what you're not going to do and

00:20:36,770 --> 00:20:41,029
don't mix apple and oranges only make

00:20:38,390 --> 00:20:44,450
one kind of change in an issue as much

00:20:41,029 --> 00:20:45,919
as as possible and also document that in

00:20:44,450 --> 00:20:48,010
the summary of the issue so that other

00:20:45,919 --> 00:20:50,600
people looking at it don't say oh hey

00:20:48,010 --> 00:20:52,250
xjm i would really like to help with the

00:20:50,600 --> 00:20:54,860
coding standard cleanups in your 2.5

00:20:52,250 --> 00:20:56,870
megabyte use patch no we're not doing

00:20:54,860 --> 00:20:58,640
that now please come and see me later in

00:20:56,870 --> 00:21:01,070
May when we have the sprint on that you

00:20:58,640 --> 00:21:03,770
know in for example with drivel con

00:21:01,070 --> 00:21:06,220
Portland um and so say what you're going

00:21:03,770 --> 00:21:10,010
to do say what you're not going to do

00:21:06,220 --> 00:21:11,659
and part of that is um this is something

00:21:10,010 --> 00:21:14,360
we actually had a lot of success within

00:21:11,659 --> 00:21:15,980
views if if you in the process of

00:21:14,360 --> 00:21:17,779
working on the main API for something

00:21:15,980 --> 00:21:21,230
you find something else that you need

00:21:17,779 --> 00:21:22,850
from it first um if it whether it's

00:21:21,230 --> 00:21:24,320
another new API are just refactoring

00:21:22,850 --> 00:21:26,299
some automated test to be more

00:21:24,320 --> 00:21:27,770
performant and we're two coupled just

00:21:26,299 --> 00:21:28,970
immediately slip it off and do it in a

00:21:27,770 --> 00:21:30,799
separate issue in the cork you because

00:21:28,970 --> 00:21:32,630
you'll be able to get that in that will

00:21:30,799 --> 00:21:34,669
make your patch smaller and reduce the

00:21:32,630 --> 00:21:36,590
burden on this this one particular point

00:21:34,669 --> 00:21:39,200
of failure for what the change you're

00:21:36,590 --> 00:21:40,549
trying to make plus it also benefits the

00:21:39,200 --> 00:21:42,470
rest of core at the same time and

00:21:40,549 --> 00:21:43,580
ensures that one piece of it isn't going

00:21:42,470 --> 00:21:46,460
to break the next time someone else

00:21:43,580 --> 00:21:48,169
makes an update to that file in part to

00:21:46,460 --> 00:21:49,970
see is file follow-up issues / work

00:21:48,169 --> 00:21:54,830
proactively so someone comes to you and

00:21:49,970 --> 00:21:58,460
says um okay I tested this with taxonomy

00:21:54,830 --> 00:22:00,140
and that I when I deploy tech when I'm

00:21:58,460 --> 00:22:02,149
deploy a configuration change as a

00:22:00,140 --> 00:22:04,340
taxonomy field it breaks because it's

00:22:02,149 --> 00:22:06,529
referencing the the taxonomy term idea

00:22:04,340 --> 00:22:08,929
instead of the uuid and you know that's

00:22:06,529 --> 00:22:10,520
broken you know point out that there's

00:22:08,929 --> 00:22:10,890
already another issue addressing that

00:22:10,520 --> 00:22:12,570
prob

00:22:10,890 --> 00:22:15,540
it's it's because of the fact that

00:22:12,570 --> 00:22:17,040
taxonomy terms the Antonin entity

00:22:15,540 --> 00:22:19,380
restaurants field and taxonomy reference

00:22:17,040 --> 00:22:21,420
fields are not yet using unique

00:22:19,380 --> 00:22:22,380
identifiers that I probably shouldn't

00:22:21,420 --> 00:22:25,920
have gone through the whole example but

00:22:22,380 --> 00:22:27,210
that's unlike any kind of thing that is

00:22:25,920 --> 00:22:28,980
totally out of the scope of your

00:22:27,210 --> 00:22:30,450
initiative and you're afraid will derail

00:22:28,980 --> 00:22:31,920
the discussion in your initiative you

00:22:30,450 --> 00:22:33,900
can just immediately fire back with

00:22:31,920 --> 00:22:35,670
another issue and when when we merge

00:22:33,900 --> 00:22:37,800
using we did this very aggressively

00:22:35,670 --> 00:22:38,850
because it's a relevant discussion not

00:22:37,800 --> 00:22:40,710
part of a discussion here and that will

00:22:38,850 --> 00:22:42,480
make sure any comments about that shunt

00:22:40,710 --> 00:22:44,940
off to that issue you don't have to deal

00:22:42,480 --> 00:22:46,410
with it until later and again the

00:22:44,940 --> 00:22:47,970
difference between what's a blocker and

00:22:46,410 --> 00:22:49,920
what's a follow-up is is important I

00:22:47,970 --> 00:22:51,810
have two parts there they're similar but

00:22:49,920 --> 00:22:53,700
they're different because one set of

00:22:51,810 --> 00:22:54,570
things you need to do beforehand and one

00:22:53,700 --> 00:22:56,550
set of things you're going to do after

00:22:54,570 --> 00:22:58,860
and the set of things you do after can't

00:22:56,550 --> 00:23:00,630
include regressions if your passion

00:22:58,860 --> 00:23:02,250
juices are aggression you always need to

00:23:00,630 --> 00:23:04,130
fix it in that patch it shouldn't

00:23:02,250 --> 00:23:07,110
include things that are the core gates

00:23:04,130 --> 00:23:10,170
usability accessibility testing

00:23:07,110 --> 00:23:11,970
documentation and performance unless

00:23:10,170 --> 00:23:13,440
you're you're actually like you've

00:23:11,970 --> 00:23:15,630
communicated with a core maintainer and

00:23:13,440 --> 00:23:18,420
got an approval that that that that

00:23:15,630 --> 00:23:24,360
regression or that gap is acceptable for

00:23:18,420 --> 00:23:26,310
in for a short term um part three please

00:23:24,360 --> 00:23:27,840
update your issue summaries please keep

00:23:26,310 --> 00:23:29,820
them up-to-date start with one that's

00:23:27,840 --> 00:23:31,680
useful so people look at it and keep

00:23:29,820 --> 00:23:33,060
adding information to it to communicate

00:23:31,680 --> 00:23:36,450
to other people who want to work on it

00:23:33,060 --> 00:23:38,610
what the status of the issue is it's

00:23:36,450 --> 00:23:41,400
amazing I so I i mentioned that i have

00:23:38,610 --> 00:23:42,900
the opportunity to look see somewhat how

00:23:41,400 --> 00:23:45,330
hollow trees and web check review

00:23:42,900 --> 00:23:47,190
patches and it's it the number of times

00:23:45,330 --> 00:23:48,960
that dream stops and says okay so can so

00:23:47,190 --> 00:23:51,090
so what is the goal of making this

00:23:48,960 --> 00:23:52,230
change it's like step back why are we

00:23:51,090 --> 00:23:54,240
really doing this and that's a very

00:23:52,230 --> 00:23:57,180
important question to ask so I think

00:23:54,240 --> 00:23:58,860
that part of our job as as developers is

00:23:57,180 --> 00:24:00,390
to communicate what water actually our

00:23:58,860 --> 00:24:02,130
goals are that we're not just

00:24:00,390 --> 00:24:03,300
refactoring for the sake of refactoring

00:24:02,130 --> 00:24:07,350
there's an end there's an end goal that

00:24:03,300 --> 00:24:09,690
we're working toward um add your test

00:24:07,350 --> 00:24:12,090
covered in docs thoroughly I use I use

00:24:09,690 --> 00:24:13,680
automated tests as a way to explain to

00:24:12,090 --> 00:24:17,100
me what a piece of code is expected to

00:24:13,680 --> 00:24:20,730
do and so when when a patch does not

00:24:17,100 --> 00:24:22,470
provide new unit ish test coverage for

00:24:20,730 --> 00:24:23,910
its new AP is that's very it makes it

00:24:22,470 --> 00:24:24,120
more difficult for me to review that's

00:24:23,910 --> 00:24:25,230
why

00:24:24,120 --> 00:24:26,820
the challenges I encounter with the

00:24:25,230 --> 00:24:29,040
blocks is plugins patch the other

00:24:26,820 --> 00:24:30,570
challenge was that it wasn't very

00:24:29,040 --> 00:24:32,100
thoroughly documented and documentation

00:24:30,570 --> 00:24:35,190
by the way doesn't mean just adding a

00:24:32,100 --> 00:24:37,080
stub one-liner that follows our rather

00:24:35,190 --> 00:24:39,360
anal documentation standards for a

00:24:37,080 --> 00:24:40,500
function or a class or whatever it also

00:24:39,360 --> 00:24:43,170
means actually explain what your code

00:24:40,500 --> 00:24:45,030
does um so that means like paragraphs of

00:24:43,170 --> 00:24:47,040
text that people can read that explain

00:24:45,030 --> 00:24:50,220
how your architecture fits together and

00:24:47,040 --> 00:24:52,920
what the big picture is provide

00:24:50,220 --> 00:24:56,760
introduce um that's all I have to say

00:24:52,920 --> 00:25:00,900
about that so this is a trick we used um

00:24:56,760 --> 00:25:02,670
if you're trying to get test to pass do

00:25:00,900 --> 00:25:04,830
that first tuna helper issue to just

00:25:02,670 --> 00:25:06,030
reduce the noise and the main issue it

00:25:04,830 --> 00:25:07,410
means that there's less there's fewer

00:25:06,030 --> 00:25:09,090
times that people have to look and find

00:25:07,410 --> 00:25:10,620
out that all your tests failed again and

00:25:09,090 --> 00:25:11,820
it makes it easier for people to scan

00:25:10,620 --> 00:25:14,820
done and what seeing let's see what's

00:25:11,820 --> 00:25:19,770
going on smaller patches are more

00:25:14,820 --> 00:25:20,790
successful um if you're making a big

00:25:19,770 --> 00:25:22,290
change that's kind of a problem but

00:25:20,790 --> 00:25:25,680
think about how you can make your patch

00:25:22,290 --> 00:25:27,090
smaller and in terms of reviewing the

00:25:25,680 --> 00:25:29,460
patch in terms of rerolling it in terms

00:25:27,090 --> 00:25:32,970
of someone understanding it I I think I

00:25:29,460 --> 00:25:34,590
do okay with about 50 to 60 k of patches

00:25:32,970 --> 00:25:36,390
in one sitting obviously it depends on

00:25:34,590 --> 00:25:38,910
the kind of change but I mean 50 to 60 k

00:25:36,390 --> 00:25:41,040
of actual code changes when it gets to

00:25:38,910 --> 00:25:43,140
be about 100 k I start to burn out and

00:25:41,040 --> 00:25:44,730
when it's over that I I personally like

00:25:43,140 --> 00:25:47,400
have to break it up I can't even go

00:25:44,730 --> 00:25:49,680
through it in one sitting um that said

00:25:47,400 --> 00:25:51,000
your meta conversion issues to do the

00:25:49,680 --> 00:25:53,400
follow ups will take a lot longer than

00:25:51,000 --> 00:25:54,450
you expect we've seen this in views

00:25:53,400 --> 00:25:56,550
we've seen this in the configuration

00:25:54,450 --> 00:25:58,890
management system if you're planning to

00:25:56,550 --> 00:26:00,480
introduce an API first and then change

00:25:58,890 --> 00:26:01,800
things to it later just keep in mind

00:26:00,480 --> 00:26:06,090
that you if you think you're going to be

00:26:01,800 --> 00:26:07,440
done by 2012 you'll be done in 2013 also

00:26:06,090 --> 00:26:09,480
another thing that can be troublesome

00:26:07,440 --> 00:26:11,100
about this is that sometimes it's hard

00:26:09,480 --> 00:26:16,140
to understand the big picture from just

00:26:11,100 --> 00:26:17,820
one individual patch so that's something

00:26:16,140 --> 00:26:19,710
that to keep in mind i think that that

00:26:17,820 --> 00:26:21,450
can be best addressed through by having

00:26:19,710 --> 00:26:22,620
having a roadmap and documenting clearly

00:26:21,450 --> 00:26:24,660
what your overall goal is like i

00:26:22,620 --> 00:26:26,970
mentioned earlier start with the test

00:26:24,660 --> 00:26:29,190
implementation so just convert one thing

00:26:26,970 --> 00:26:30,810
that shows your thing works in an

00:26:29,190 --> 00:26:33,810
automated test and that will explain

00:26:30,810 --> 00:26:35,610
your api and it will also keep you from

00:26:33,810 --> 00:26:36,940
you know you verifies that it works

00:26:35,610 --> 00:26:40,080
without you have any convert everything

00:26:36,940 --> 00:26:42,190
and use a backwards compatibility layer

00:26:40,080 --> 00:26:43,870
this is something that we've argued a

00:26:42,190 --> 00:26:45,670
lot about in this release cycle whether

00:26:43,870 --> 00:26:47,650
or not we should temporarily add a

00:26:45,670 --> 00:26:50,140
backwards compatibility layer so that we

00:26:47,650 --> 00:26:51,700
can use cold that's using the old API

00:26:50,140 --> 00:26:53,470
while we're introducing the new API and

00:26:51,700 --> 00:26:55,330
overall I think we've come down on the

00:26:53,470 --> 00:26:57,670
side of yes for the during the

00:26:55,330 --> 00:26:59,400
development phase especially it's it's a

00:26:57,670 --> 00:27:02,200
necessary part of getting changed done

00:26:59,400 --> 00:27:03,610
The Closer that we get to release it

00:27:02,200 --> 00:27:06,130
becomes more problematic and obviously

00:27:03,610 --> 00:27:07,390
there's if we're not going to be able to

00:27:06,130 --> 00:27:08,830
remove that backwards compat a little

00:27:07,390 --> 00:27:11,980
layer that's a problem but overall it's

00:27:08,830 --> 00:27:13,660
been successful lesson number eight is

00:27:11,980 --> 00:27:17,740
help help people who are reviewing your

00:27:13,660 --> 00:27:19,660
patches um there's just not enough

00:27:17,740 --> 00:27:21,880
people in core reviewing changes

00:27:19,660 --> 00:27:23,800
it's it's time-consuming it's a

00:27:21,880 --> 00:27:24,880
challenging skill to learn um reviewers

00:27:23,800 --> 00:27:27,430
are looking at a lot of different issues

00:27:24,880 --> 00:27:30,880
in the day so so you know be nice to

00:27:27,430 --> 00:27:32,350
them help them if help them find where

00:27:30,880 --> 00:27:35,740
in your issue it says a certain thing

00:27:32,350 --> 00:27:39,130
that you know that they don't help them

00:27:35,740 --> 00:27:40,890
file follow-up issues and also indicate

00:27:39,130 --> 00:27:43,210
in your issue what you want reviewed um

00:27:40,890 --> 00:27:44,290
you know it could be that you're at a

00:27:43,210 --> 00:27:45,520
point where you want Architectural

00:27:44,290 --> 00:27:49,000
Review or you're just looking to have

00:27:45,520 --> 00:27:50,530
review of one piece tell us that we if

00:27:49,000 --> 00:27:51,940
we know that then we can focus our

00:27:50,530 --> 00:27:56,890
attention and that waste time on things

00:27:51,940 --> 00:27:58,390
that aren't ready yet um and also please

00:27:56,890 --> 00:28:00,220
keep in mind that people who are

00:27:58,390 --> 00:28:02,710
volunteer contributors who are reviewing

00:28:00,220 --> 00:28:04,210
your code aren't trying to you know be

00:28:02,710 --> 00:28:06,120
gatekeepers and block your work they're

00:28:04,210 --> 00:28:07,900
also trying to help your patch game

00:28:06,120 --> 00:28:11,740
converse side of that has helped people

00:28:07,900 --> 00:28:13,060
whose code you are reviewing and this is

00:28:11,740 --> 00:28:14,440
something you know this is this is the

00:28:13,060 --> 00:28:16,330
lesson that I forgot when I was looking

00:28:14,440 --> 00:28:19,510
at the fields cmi patch need to stop

00:28:16,330 --> 00:28:21,280
doing that um you know make make your

00:28:19,510 --> 00:28:23,920
reviews organized summarize your own

00:28:21,280 --> 00:28:25,480
points don't just sit there and go you

00:28:23,920 --> 00:28:26,860
need a white space error here in this

00:28:25,480 --> 00:28:28,300
comments formatted wrong and just a big

00:28:26,860 --> 00:28:29,980
string of things and then not give any

00:28:28,300 --> 00:28:31,540
substantive feedback because that's a

00:28:29,980 --> 00:28:33,340
waste of everyone's time make those

00:28:31,540 --> 00:28:34,690
changes yourself or find a new

00:28:33,340 --> 00:28:36,640
contributor who will actually get

00:28:34,690 --> 00:28:38,920
benefit out of making those fixes in

00:28:36,640 --> 00:28:41,530
that patch on we want people to be

00:28:38,920 --> 00:28:46,260
validated by our QA process and not feel

00:28:41,530 --> 00:28:48,580
like we're we're attacking and basically

00:28:46,260 --> 00:28:50,450
be an issue manager when you're making a

00:28:48,580 --> 00:28:52,280
change don't just think about the patch

00:28:50,450 --> 00:28:54,530
think about controlling the entire

00:28:52,280 --> 00:28:56,060
discussion in the issue and this sort of

00:28:54,530 --> 00:28:58,250
includes everything I've already I've

00:28:56,060 --> 00:29:00,560
already discussed it's your job to be

00:28:58,250 --> 00:29:03,890
like a PR person for your change to

00:29:00,560 --> 00:29:05,480
communicate with people about it and to

00:29:03,890 --> 00:29:07,100
keep to keep all the information the

00:29:05,480 --> 00:29:09,230
issue together because like an issue if

00:29:07,100 --> 00:29:11,060
all we needed was the patch we wouldn't

00:29:09,230 --> 00:29:12,800
have issues we would just have patches

00:29:11,060 --> 00:29:14,540
we need to actually communicate about

00:29:12,800 --> 00:29:18,350
the changes that we're making otherwise

00:29:14,540 --> 00:29:19,700
what's the point and number 11 this is

00:29:18,350 --> 00:29:21,230
something Shannon talked about is build

00:29:19,700 --> 00:29:22,940
a team this doesn't have to be something

00:29:21,230 --> 00:29:26,120
on the scale that the you know the views

00:29:22,940 --> 00:29:27,380
team it's just really helpful to have at

00:29:26,120 --> 00:29:29,210
least one other person who's also

00:29:27,380 --> 00:29:30,800
working on the issue with you because

00:29:29,210 --> 00:29:32,300
they can give you meaningful feedback on

00:29:30,800 --> 00:29:34,520
they know what you're going through you

00:29:32,300 --> 00:29:37,820
can trade reviews with them do

00:29:34,520 --> 00:29:39,020
back-and-forth work on it and also if

00:29:37,820 --> 00:29:40,280
you end up getting burned out on the

00:29:39,020 --> 00:29:43,150
issue there's someone to take it over

00:29:40,280 --> 00:29:46,130
for you for a period of time with this

00:29:43,150 --> 00:29:47,780
for example the admin people issue where

00:29:46,130 --> 00:29:49,880
we're converting the admin people

00:29:47,780 --> 00:29:51,590
listening to a view and it's gotten

00:29:49,880 --> 00:29:55,490
stuck a number of times on both weird

00:29:51,590 --> 00:29:58,280
bugs and maintain our feedback and so I

00:29:55,490 --> 00:29:59,950
think we've gone through we've got

00:29:58,280 --> 00:30:03,860
through the entire team at this point

00:29:59,950 --> 00:30:05,150
but it's it can help a lot just that

00:30:03,860 --> 00:30:06,410
when you're when you're tired of working

00:30:05,150 --> 00:30:08,780
on something have someone else's stuff

00:30:06,410 --> 00:30:10,850
up and take over so make your issue

00:30:08,780 --> 00:30:12,770
readable make it reviewable make it

00:30:10,850 --> 00:30:14,450
understandable and help each other out

00:30:12,770 --> 00:30:17,210
and also cut down on the noisettes in

00:30:14,450 --> 00:30:19,010
the issue those are my thoughts um and

00:30:17,210 --> 00:30:20,720
so yeah let's talk about it i have i

00:30:19,010 --> 00:30:23,900
have this slide that says i would prefer

00:30:20,720 --> 00:30:25,070
not talk about San boxes and github Xin

00:30:23,900 --> 00:30:26,270
issue queue improvements and all that

00:30:25,070 --> 00:30:29,630
I'm more interested in your thoughts on

00:30:26,270 --> 00:30:31,100
like actually you know making changes

00:30:29,630 --> 00:30:33,260
and whether you think that things that

00:30:31,100 --> 00:30:36,880
I've said are a big fat lie but we can

00:30:33,260 --> 00:30:36,880
also talk about that if people get bored

00:30:41,140 --> 00:30:45,800
if you follow up good if you file good

00:30:44,150 --> 00:30:47,270
follow-up issues and organize lots of

00:30:45,800 --> 00:30:50,920
other issues you might recruit the next

00:30:47,270 --> 00:30:50,920
core maintainer yes

00:30:52,240 --> 00:30:57,560
by giving things by by creating

00:30:55,430 --> 00:31:00,350
follow-up issues matter issues like all

00:30:57,560 --> 00:31:02,480
the cmi issues that Greg created got me

00:31:00,350 --> 00:31:05,510
involved in he recruited the next call

00:31:02,480 --> 00:31:06,950
maintain so and you also teach people to

00:31:05,510 --> 00:31:09,020
use your system so if you do everything

00:31:06,950 --> 00:31:10,970
at once then no one knows apart from you

00:31:09,020 --> 00:31:14,210
like we've got a and the poor sap

00:31:10,970 --> 00:31:16,340
who reviewed the patch yeah so I wanted

00:31:14,210 --> 00:31:18,050
to expand on that and another point from

00:31:16,340 --> 00:31:21,170
you I wanted to expand on that and

00:31:18,050 --> 00:31:23,720
another point from you earlier as the

00:31:21,170 --> 00:31:26,600
risk management and and how to do your

00:31:23,720 --> 00:31:31,070
stuff so so my tip there is do stuff

00:31:26,600 --> 00:31:34,210
early very early so if you do stuff

00:31:31,070 --> 00:31:37,340
early there's a mountain of advantages

00:31:34,210 --> 00:31:39,020
you use the API from the previous

00:31:37,340 --> 00:31:41,210
version of Drupal because there's not

00:31:39,020 --> 00:31:43,220
much changed so it's easy to do the

00:31:41,210 --> 00:31:44,630
change that you want to do yeah we

00:31:43,220 --> 00:31:47,630
convert of use and what was it three

00:31:44,630 --> 00:31:49,310
hours Tim right all right two hours so

00:31:47,630 --> 00:31:51,650
if you do stuff early you don't need to

00:31:49,310 --> 00:31:54,170
convert like to all the new systems that

00:31:51,650 --> 00:31:56,780
were introduced if you do stuff early

00:31:54,170 --> 00:31:58,460
then the responsibility of converting

00:31:56,780 --> 00:32:00,830
them to the system will not necessarily

00:31:58,460 --> 00:32:02,480
be on you because there will be in the

00:32:00,830 --> 00:32:04,670
system so others will need to work with

00:32:02,480 --> 00:32:08,120
it if you do stuff early you will be

00:32:04,670 --> 00:32:10,640
able to to to advertise your change and

00:32:08,120 --> 00:32:12,200
others will be able to work with it so

00:32:10,640 --> 00:32:13,970
whatever you did will be an integral

00:32:12,200 --> 00:32:15,950
part of the system and not feel like a

00:32:13,970 --> 00:32:17,690
parallel thing that you did because you

00:32:15,950 --> 00:32:22,190
weren't working with the other things

00:32:17,690 --> 00:32:24,260
that we're already there you will you

00:32:22,190 --> 00:32:26,840
will be able to get feedback and refine

00:32:24,260 --> 00:32:29,810
your work so like Greg re architected

00:32:26,840 --> 00:32:32,180
cmi three times because he did the the

00:32:29,810 --> 00:32:35,570
initial iteration first instead of like

00:32:32,180 --> 00:32:37,160
just working on issue himself and and

00:32:35,570 --> 00:32:39,680
like getting into core and like getting

00:32:37,160 --> 00:32:41,390
that visibility so there's just a

00:32:39,680 --> 00:32:43,910
mountain of advantages there doing it

00:32:41,390 --> 00:32:45,470
early I think we've had some of some of

00:32:43,910 --> 00:32:47,060
our issues like this where people said

00:32:45,470 --> 00:32:49,040
no no you shouldn't do this because

00:32:47,060 --> 00:32:51,650
there's this real architecting going on

00:32:49,040 --> 00:32:53,600
and maybe later it will be this new sub

00:32:51,650 --> 00:32:55,010
system that will that will make it

00:32:53,600 --> 00:32:57,980
totally different they were like no

00:32:55,010 --> 00:32:59,120
we're doing this right now and it paid

00:32:57,980 --> 00:33:00,669
off where you well we have also

00:32:59,120 --> 00:33:03,710
dangerous

00:33:00,669 --> 00:33:07,029
and the other thing is is is the

00:33:03,710 --> 00:33:10,279
communication thing so i think i think

00:33:07,029 --> 00:33:13,850
documenting what you do very well is

00:33:10,279 --> 00:33:16,309
very important first it makes people

00:33:13,850 --> 00:33:17,990
aware of what you do and sometimes we

00:33:16,309 --> 00:33:19,909
end up with parallel systems that are

00:33:17,990 --> 00:33:21,830
very similar but they are different

00:33:19,909 --> 00:33:23,600
because people have been working on them

00:33:21,830 --> 00:33:26,720
parallely and they were not aware of the

00:33:23,600 --> 00:33:28,909
other solutions and if we document what

00:33:26,720 --> 00:33:31,640
we do and why we do it then we can get

00:33:28,909 --> 00:33:33,380
people learn learn them so what I did

00:33:31,640 --> 00:33:36,110
for example with the configuration

00:33:33,380 --> 00:33:37,880
schema system is actually implementing

00:33:36,110 --> 00:33:41,090
configuration scheme it is not that hard

00:33:37,880 --> 00:33:43,070
as there are complex examples but the

00:33:41,090 --> 00:33:44,690
basics are easy it's like so when it was

00:33:43,070 --> 00:33:47,149
committed I wrote like a huge

00:33:44,690 --> 00:33:49,250
documentation page with examples then

00:33:47,149 --> 00:33:51,919
I've opened a whole lot of issues and

00:33:49,250 --> 00:33:53,360
then I expected beep and I was trying to

00:33:51,919 --> 00:33:56,269
recruit people to work on them and

00:33:53,360 --> 00:33:58,760
expected I can crowdsource it and not

00:33:56,269 --> 00:34:01,250
just crowdsource it so it's ready sooner

00:33:58,760 --> 00:34:04,070
but crowdsource it so people validate my

00:34:01,250 --> 00:34:06,830
documentation and they validate the

00:34:04,070 --> 00:34:09,230
schema system in itself and and put feed

00:34:06,830 --> 00:34:12,050
back into improving it so if I do it

00:34:09,230 --> 00:34:14,659
early I have time to have those break

00:34:12,050 --> 00:34:16,909
out issues I have time to have based on

00:34:14,659 --> 00:34:20,480
documentation get people improve my

00:34:16,909 --> 00:34:22,849
system because they work on it and and

00:34:20,480 --> 00:34:25,099
can contribute back what happened there

00:34:22,849 --> 00:34:27,830
is unfortunately unfortunately and also

00:34:25,099 --> 00:34:32,419
fortunately I have a person who solve

00:34:27,830 --> 00:34:34,760
all the issues so that has happened it

00:34:32,419 --> 00:34:36,080
was good because now we have all of the

00:34:34,760 --> 00:34:39,589
schemas there it was not good because

00:34:36,080 --> 00:34:41,540
knowledge was not spread but but I think

00:34:39,589 --> 00:34:45,710
if you have that documentation pinned

00:34:41,540 --> 00:34:48,619
down that helps a lot there I would

00:34:45,710 --> 00:34:51,139
agree so something I'm actually

00:34:48,619 --> 00:34:53,359
wondering about is um how many people in

00:34:51,139 --> 00:34:55,780
this room are are familiar with what the

00:34:53,359 --> 00:34:58,070
Drupal 8 release schedule looks like

00:34:55,780 --> 00:35:03,230
like have an idea of wonder blades being

00:34:58,070 --> 00:35:04,400
released or wow okay oh ok so I'll have

00:35:03,230 --> 00:35:07,510
an idea when code freezes that's

00:35:04,400 --> 00:35:12,530
probably a safer question to ask hmm ok

00:35:07,510 --> 00:35:13,210
so how many people are familiar with the

00:35:12,530 --> 00:35:18,119
what the

00:35:13,210 --> 00:35:25,150
our gates are triple core gates Wow okay

00:35:18,119 --> 00:35:26,349
um yeah okay so you want i'm not gonna

00:35:25,150 --> 00:35:28,030
actually get a very small number of

00:35:26,349 --> 00:35:29,800
people raise their hands and answer the

00:35:28,030 --> 00:35:31,420
second question so that's something i

00:35:29,800 --> 00:35:35,109
mentioned in my discussion about views

00:35:31,420 --> 00:35:36,940
we have our review process for drupal

00:35:35,109 --> 00:35:40,000
kors very rigorous and we don't we don't

00:35:36,940 --> 00:35:42,310
ever want to regress our functionality

00:35:40,000 --> 00:35:43,630
in these five key areas that i keep

00:35:42,310 --> 00:35:45,790
meant i mentioned several times in my

00:35:43,630 --> 00:35:47,890
talk but we don't want to make triple

00:35:45,790 --> 00:35:49,240
slower we managed to make triple a lot

00:35:47,890 --> 00:35:52,030
slower joining drupal 8 like

00:35:49,240 --> 00:35:54,910
significantly um so we need to work on

00:35:52,030 --> 00:35:56,560
that one on we always make sure that we

00:35:54,910 --> 00:35:58,330
add test coverage for changes that we

00:35:56,560 --> 00:36:01,210
make so that if there's a bug we don't

00:35:58,330 --> 00:36:02,830
break it a second time for the third

00:36:01,210 --> 00:36:05,010
gates accessibility we don't ever want

00:36:02,830 --> 00:36:08,470
to regress our accessibility coverage

00:36:05,010 --> 00:36:10,869
and and views did because there's

00:36:08,470 --> 00:36:12,820
there's also there's this very useful

00:36:10,869 --> 00:36:14,080
important module in core that's not not

00:36:12,820 --> 00:36:16,770
usable at all with a keyboard because

00:36:14,080 --> 00:36:19,900
because we can't you know we haven't

00:36:16,770 --> 00:36:22,089
converted views from its previous broken

00:36:19,900 --> 00:36:23,560
models to use the new accessible modal

00:36:22,089 --> 00:36:26,770
dialogue that we got and that was

00:36:23,560 --> 00:36:29,710
finished i think in February then

00:36:26,770 --> 00:36:32,410
usability is the fourth one and I lost

00:36:29,710 --> 00:36:34,630
track of the dice el five um so you use

00:36:32,410 --> 00:36:36,880
abilities is the easily own

00:36:34,630 --> 00:36:38,530
documentation um all the code that goes

00:36:36,880 --> 00:36:41,020
in triple core new document to explains

00:36:38,530 --> 00:36:44,050
what it does so that's what those are um

00:36:41,020 --> 00:36:51,609
and so we have this we have this policy

00:36:44,050 --> 00:36:52,690
that issue thresholds no I think people

00:36:51,609 --> 00:37:00,250
are just ignoring me not raising their

00:36:52,690 --> 00:37:01,599
hands hey I just want to get an idea I

00:37:00,250 --> 00:37:02,859
was expecting a very different audience

00:37:01,599 --> 00:37:04,420
here and I was kind of nervous about

00:37:02,859 --> 00:37:05,680
this conversational core conversation

00:37:04,420 --> 00:37:07,150
all day because I didn't have time to

00:37:05,680 --> 00:37:09,130
prepare for it so i apologize for those

00:37:07,150 --> 00:37:11,680
of you who are dozing in the back hey

00:37:09,130 --> 00:37:14,560
classy so one thing that we do with big

00:37:11,680 --> 00:37:17,080
changes we always have the requirement

00:37:14,560 --> 00:37:18,730
that or test cases pass what do you

00:37:17,080 --> 00:37:21,099
think about the short period of time we

00:37:18,730 --> 00:37:23,859
are introduced a big change and tests

00:37:21,099 --> 00:37:25,630
may fail for a week for example I think

00:37:23,859 --> 00:37:28,720
that's extremely disruptive

00:37:25,630 --> 00:37:30,309
um I mean like it basically forces all

00:37:28,720 --> 00:37:32,230
our other color development to work

00:37:30,309 --> 00:37:33,490
around it and I that's my that's my gut

00:37:32,230 --> 00:37:35,789
reaction I mean but at the same time

00:37:33,490 --> 00:37:38,079
like that you know if we if we can get

00:37:35,789 --> 00:37:39,670
automated testing in sandboxes I think

00:37:38,079 --> 00:37:41,589
that's good I don't think that it's ever

00:37:39,670 --> 00:37:46,630
I mean have we ever been in a situation

00:37:41,589 --> 00:37:48,309
where so tell me why more why more about

00:37:46,630 --> 00:37:50,140
why you think that that might be a

00:37:48,309 --> 00:37:51,210
feasible idea and what you think what

00:37:50,140 --> 00:37:54,190
problem you think that could solve

00:37:51,210 --> 00:37:56,289
because the reviewers could focus more

00:37:54,190 --> 00:37:58,240
on the actual implementation without

00:37:56,289 --> 00:38:00,519
seeing all these pieces in the patch

00:37:58,240 --> 00:38:02,289
that just fix something or a change the

00:38:00,519 --> 00:38:04,509
syntax there and there so the patch gets

00:38:02,289 --> 00:38:08,349
huge and you could have a much smaller

00:38:04,509 --> 00:38:11,589
patch and then when there is consensus

00:38:08,349 --> 00:38:14,230
on that just put it in and then try to

00:38:11,589 --> 00:38:16,210
get really community involvement to fix

00:38:14,230 --> 00:38:19,269
all the other moving pieces and to get

00:38:16,210 --> 00:38:21,009
to a passing tests state again I think

00:38:19,269 --> 00:38:23,200
that I guess it's dangerous yeah yeah I

00:38:21,009 --> 00:38:24,759
think and it's also there's it's also

00:38:23,200 --> 00:38:27,069
very hard to get someone to fix

00:38:24,759 --> 00:38:29,230
something that's already in I likely fun

00:38:27,069 --> 00:38:31,240
with the blocks patch like there's so

00:38:29,230 --> 00:38:34,779
many bugs with it still getting like you

00:38:31,240 --> 00:38:39,099
can yet so I don't know something that

00:38:34,779 --> 00:38:41,650
might work like that is is if you have

00:38:39,099 --> 00:38:44,109
multiple patches in the issue so you had

00:38:41,650 --> 00:38:46,180
one that was these are the big things

00:38:44,109 --> 00:38:48,069
and then you had the other one like this

00:38:46,180 --> 00:38:50,650
is everything that's not quite as

00:38:48,069 --> 00:38:52,240
critical hmm so it's it what they would

00:38:50,650 --> 00:38:54,160
they would be committed together like

00:38:52,240 --> 00:38:55,720
that the issue wouldn't pass unless they

00:38:54,160 --> 00:39:00,009
were both together but you could review

00:38:55,720 --> 00:39:01,960
them separately so we tried you that a

00:39:00,009 --> 00:39:03,759
couple times but I actually don't find

00:39:01,960 --> 00:39:05,920
it that useful personally like maybe

00:39:03,759 --> 00:39:07,299
this is a personal thing for me what

00:39:05,920 --> 00:39:09,490
explains how something works is it's

00:39:07,299 --> 00:39:11,049
test coverage and if it's just an like

00:39:09,490 --> 00:39:12,910
an incidental test failure because it's

00:39:11,049 --> 00:39:14,589
using an old API that's where the BC

00:39:12,910 --> 00:39:16,000
layer comes in handy and we should fix

00:39:14,589 --> 00:39:20,170
that anyways to explain how our code

00:39:16,000 --> 00:39:23,170
works and it's not so much that it's I

00:39:20,170 --> 00:39:25,029
I'm perfectly capable of like chopping

00:39:23,170 --> 00:39:28,210
the file up myself into different pieces

00:39:25,029 --> 00:39:31,269
to review I think that what's what's

00:39:28,210 --> 00:39:34,200
important is not just the file size it's

00:39:31,269 --> 00:39:34,200
what's included in it

00:39:34,259 --> 00:39:37,839
but I'm saying that it doesn't actually

00:39:36,219 --> 00:39:39,609
like I'm saying that the reason that it

00:39:37,839 --> 00:39:41,949
doesn't make a difference to me parsley

00:39:39,609 --> 00:39:43,119
and this could like this could be anyone

00:39:41,949 --> 00:39:45,009
else might have a different opinion

00:39:43,119 --> 00:39:47,519
about this but for me automate tests are

00:39:45,009 --> 00:39:51,339
part of explain the cult does to me so

00:39:47,519 --> 00:39:52,899
that's my thought so for committing

00:39:51,339 --> 00:39:55,059
stuff that's not passing I think it's

00:39:52,899 --> 00:39:56,949
very dangerous because then you will not

00:39:55,059 --> 00:39:59,409
be able to commit anything else until

00:39:56,949 --> 00:40:01,449
tests pass again because you never know

00:39:59,409 --> 00:40:03,459
even if our if it's the same test

00:40:01,449 --> 00:40:05,049
feeling same set of tests feeling as

00:40:03,459 --> 00:40:07,359
before you never know if they are

00:40:05,049 --> 00:40:09,459
failing for different reasons or they

00:40:07,359 --> 00:40:11,229
are even more stuff broken so I don't

00:40:09,459 --> 00:40:13,779
decide that would block or development

00:40:11,229 --> 00:40:15,939
on anything else until tester fix I mean

00:40:13,779 --> 00:40:17,679
court of like if test spot fails

00:40:15,939 --> 00:40:19,989
randomly because there was an

00:40:17,679 --> 00:40:21,729
environment problem on a test spot when

00:40:19,989 --> 00:40:23,890
course tested like core development just

00:40:21,729 --> 00:40:25,630
stops and everything that everyone's

00:40:23,890 --> 00:40:27,969
working on that day gets wreak you'd and

00:40:25,630 --> 00:40:30,489
you have to wait four hours for stuff to

00:40:27,969 --> 00:40:32,319
happen and we harass Alex and beg him to

00:40:30,489 --> 00:40:33,609
fix the change that was made that's now

00:40:32,319 --> 00:40:37,149
causing failures that kind of thing

00:40:33,609 --> 00:40:38,979
happens so yeah I'm I'm not going to sit

00:40:37,149 --> 00:40:40,299
there's any case in which that getting

00:40:38,979 --> 00:40:41,619
rid of the testing gates the point that

00:40:40,299 --> 00:40:43,779
tests are actually failing would ever be

00:40:41,619 --> 00:40:45,849
a good idea personally yeah so I think

00:40:43,779 --> 00:40:48,759
that so you could use send boxes rather

00:40:45,849 --> 00:40:50,499
right yeah other environments where you

00:40:48,759 --> 00:40:53,619
can get people to review your stuff

00:40:50,499 --> 00:40:54,939
without it nothing that's fine and I

00:40:53,619 --> 00:40:56,559
think that you know you can even do

00:40:54,939 --> 00:40:59,589
something where you you add a BC layer

00:40:56,559 --> 00:41:00,759
temporarily in your sandbox that you're

00:40:59,589 --> 00:41:02,319
going to intend to get rid of even in

00:41:00,759 --> 00:41:04,869
the same patch just so you don't have

00:41:02,319 --> 00:41:06,249
the noise of of that test failures if

00:41:04,869 --> 00:41:08,499
you want people to review architecture

00:41:06,249 --> 00:41:09,699
early but like I mentioned for me having

00:41:08,499 --> 00:41:11,499
the documentation intestine the patch

00:41:09,699 --> 00:41:13,539
those aren't an afterthought that's part

00:41:11,499 --> 00:41:14,709
of that if if you want your code to do

00:41:13,539 --> 00:41:17,619
something there should be a test that

00:41:14,709 --> 00:41:19,929
explains how you do that so you know

00:41:17,619 --> 00:41:22,779
study questions comments so something I

00:41:19,929 --> 00:41:24,339
just wanted to point out is that in case

00:41:22,779 --> 00:41:26,979
you didn't know so right now Drupal core

00:41:24,339 --> 00:41:29,799
is Drupal 8 core is in feature freeze

00:41:26,979 --> 00:41:31,569
the code freeze is in five weeks so what

00:41:29,799 --> 00:41:33,369
that means is that we can't add major

00:41:31,569 --> 00:41:35,019
new features anymore to Drupal 8 we're

00:41:33,369 --> 00:41:36,130
done with that we have most of the

00:41:35,019 --> 00:41:38,499
feature set that we're probably going to

00:41:36,130 --> 00:41:40,439
have it released um but we can still

00:41:38,499 --> 00:41:42,159
make API changes for contributed modules

00:41:40,439 --> 00:41:44,229
however something you might not have

00:41:42,159 --> 00:41:46,740
known is that it's actually possible

00:41:44,229 --> 00:41:49,650
still to add minor features Drupal core

00:41:46,740 --> 00:41:51,390
um if they if at this point they can

00:41:49,650 --> 00:41:53,130
still break api's even just so long as

00:41:51,390 --> 00:41:55,280
they're not significant things that

00:41:53,130 --> 00:41:57,750
would introduce more architectural debt

00:41:55,280 --> 00:42:00,270
but in order to do that we have to

00:41:57,750 --> 00:42:02,100
actually fix other issues first we have

00:42:00,270 --> 00:42:03,600
to fix the major and critical issues

00:42:02,100 --> 00:42:05,970
until we get them down to an acceptable

00:42:03,600 --> 00:42:08,130
level so when I'm talking about all

00:42:05,970 --> 00:42:10,440
these big changes and so forth in some

00:42:08,130 --> 00:42:11,820
ways this isn't I mean at this point

00:42:10,440 --> 00:42:13,020
that really cycle it's mostly just

00:42:11,820 --> 00:42:14,820
cleanup work we're doing we're probably

00:42:13,020 --> 00:42:17,340
going to see more of these 200 and 300 k

00:42:14,820 --> 00:42:18,540
patches is the work in some like I'm

00:42:17,340 --> 00:42:21,750
sure that some of the work that's going

00:42:18,540 --> 00:42:23,369
on in to convert fields it's the new API

00:42:21,750 --> 00:42:24,840
is going to be involved significant

00:42:23,369 --> 00:42:30,560
changes and so forth you guys are really

00:42:24,840 --> 00:42:30,560
quiet no thoughts looking video no okay

00:42:30,860 --> 00:42:34,170
I just like spammed a bunch of

00:42:32,970 --> 00:42:37,140
information at you and I thought you

00:42:34,170 --> 00:42:39,119
argue more I don't bite so if you've got

00:42:37,140 --> 00:42:40,560
a really big patch reach out to me when

00:42:39,119 --> 00:42:44,910
it gets started bc because it really

00:42:40,560 --> 00:42:47,250
helps if you talk to me yeah actually

00:42:44,910 --> 00:42:48,510
being available online this is something

00:42:47,250 --> 00:42:50,850
i skipped over because i decided i was

00:42:48,510 --> 00:42:52,950
blathering too much but being available

00:42:50,850 --> 00:42:55,109
online to talk about your patch is

00:42:52,950 --> 00:42:57,480
really valuable on both for review ease

00:42:55,109 --> 00:43:05,609
and reviewers unfortunates not always

00:42:57,480 --> 00:43:09,390
possible oh ha um so how many people

00:43:05,609 --> 00:43:11,880
here use IRC okay that's better online

00:43:09,390 --> 00:43:13,290
in IRC in the drupal dash contribute

00:43:11,880 --> 00:43:16,020
channel hashed year old ash contribute

00:43:13,290 --> 00:43:17,730
channel on freenode that's where core

00:43:16,020 --> 00:43:19,200
both core and contribute evelopment kind

00:43:17,730 --> 00:43:21,000
of happens in triplets sort of a hub of

00:43:19,200 --> 00:43:23,070
our communication and we use that as a

00:43:21,000 --> 00:43:24,450
workaround for the fact that it's hard

00:43:23,070 --> 00:43:30,090
to communicate through core issues or

00:43:24,450 --> 00:43:32,010
any issues i guess i just wanted to

00:43:30,090 --> 00:43:34,830
confirm that one of your lessons was

00:43:32,010 --> 00:43:37,170
like how about guys that are working on

00:43:34,830 --> 00:43:39,690
a patch actually works i mean that the

00:43:37,170 --> 00:43:43,140
part where watch it was like going crazy

00:43:39,690 --> 00:43:45,270
or is the fact that you posted a review

00:43:43,140 --> 00:43:46,710
then we started commenting and then

00:43:45,270 --> 00:43:48,840
suddenly there was another review and

00:43:46,710 --> 00:43:50,520
then you it was impossible to follow it

00:43:48,840 --> 00:43:52,650
at that point and when you were in the

00:43:50,520 --> 00:43:54,869
sandbox making those little changes it

00:43:52,650 --> 00:43:55,960
was really really helpful so thank you

00:43:54,869 --> 00:43:57,910
for that I mean

00:43:55,960 --> 00:43:59,859
oh it's well it took a long time and I

00:43:57,910 --> 00:44:00,970
don't I'm so I was trying to think about

00:43:59,859 --> 00:44:03,160
what strategies would make it easier

00:44:00,970 --> 00:44:04,150
because um obviously there aren't that

00:44:03,160 --> 00:44:05,260
many people we even going to run into

00:44:04,150 --> 00:44:07,060
this problem because there aren't many

00:44:05,260 --> 00:44:11,310
people who are willing to review a 200k

00:44:07,060 --> 00:44:14,849
patch um but I you know it's like so if

00:44:11,310 --> 00:44:17,349
I don't document for myself on the issue

00:44:14,849 --> 00:44:19,330
the things that I noticed i will forget

00:44:17,349 --> 00:44:21,730
by the end of the patch so it's like do

00:44:19,330 --> 00:44:23,650
I have to like in order to have a nicely

00:44:21,730 --> 00:44:26,740
formatted read review do I have to then

00:44:23,650 --> 00:44:29,050
paste that in a handbook page on

00:44:26,740 --> 00:44:30,609
drupal.org to save it until I have the

00:44:29,050 --> 00:44:32,950
opportunity to write that three thousand

00:44:30,609 --> 00:44:34,540
word never again actually summary of

00:44:32,950 --> 00:44:36,520
everything like would that have been I

00:44:34,540 --> 00:44:37,780
mean is like is it just having the

00:44:36,520 --> 00:44:39,220
comments there wasn't that clear that I

00:44:37,780 --> 00:44:41,740
wasn't actually just done reading the

00:44:39,220 --> 00:44:43,330
whole patch yet yeah I think that was it

00:44:41,740 --> 00:44:44,560
i mean there were too many comments i

00:44:43,330 --> 00:44:47,140
mean we know that the issue queue is not

00:44:44,560 --> 00:44:48,970
that flexible and stuff like let me know

00:44:47,140 --> 00:44:51,119
that but I mean there were too many

00:44:48,970 --> 00:44:54,040
comments and there were valid cummins

00:44:51,119 --> 00:44:56,200
but there was just too many and what's

00:44:54,040 --> 00:44:59,740
actually also sometimes annoying is that

00:44:56,200 --> 00:45:02,970
you get an email and i remember at some

00:44:59,740 --> 00:45:05,320
point reading my emails was like what

00:45:02,970 --> 00:45:07,300
and then i went to the issue queue and

00:45:05,320 --> 00:45:12,099
you added to comment and was like okay

00:45:07,300 --> 00:45:13,690
this is okay what shop for that people

00:45:12,099 --> 00:45:15,970
who subscribe to issues by email i don't

00:45:13,690 --> 00:45:18,010
understand why can't I wouldn't I don't

00:45:15,970 --> 00:45:21,640
even I can't imagine how you could

00:45:18,010 --> 00:45:27,580
possibly manage that much email but

00:45:21,640 --> 00:45:30,970
obviously people do it so filtering

00:45:27,580 --> 00:45:34,830
based on what i mean i don't know i

00:45:30,970 --> 00:45:34,830
don't get it that's okay

00:45:43,700 --> 00:45:49,070
do you have any idea about how we manage

00:45:46,700 --> 00:45:50,900
these huge issues that have 200 comments

00:45:49,070 --> 00:45:53,990
300 comments do you think it's a good

00:45:50,900 --> 00:45:56,570
idea to test it just force close them I

00:45:53,990 --> 00:45:59,570
think we we did that accompanied cmi

00:45:56,570 --> 00:46:01,339
yeah we're just an drupal that walking

00:45:59,570 --> 00:46:04,910
three status steps in and just closed

00:46:01,339 --> 00:46:07,790
the issue is that a good idea well so i

00:46:04,910 --> 00:46:09,680
i'm i mean we also do things where we

00:46:07,790 --> 00:46:11,650
like actually deleted all the noisy

00:46:09,680 --> 00:46:14,960
comments on the issue like deleted

00:46:11,650 --> 00:46:16,579
system message failing tests and people

00:46:14,960 --> 00:46:18,320
changing issue statuses and we managed

00:46:16,579 --> 00:46:19,700
to keep the blocks as plugins patches

00:46:18,320 --> 00:46:21,710
you had one page for that reason but it

00:46:19,700 --> 00:46:22,849
was still 300 comments an issue

00:46:21,710 --> 00:46:25,700
summaries are also another workaround

00:46:22,849 --> 00:46:27,470
for that noise factor so thats the

00:46:25,700 --> 00:46:28,849
problem then is that you have to move to

00:46:27,470 --> 00:46:30,349
the issue you just need someone to

00:46:28,849 --> 00:46:32,300
summarize the entire status of that

00:46:30,349 --> 00:46:34,310
previous issue but it is a lot it's a

00:46:32,300 --> 00:46:35,570
lot less intimidating to go to like this

00:46:34,310 --> 00:46:37,250
one issue that has all this work done

00:46:35,570 --> 00:46:38,300
previously and say oh I can I can help

00:46:37,250 --> 00:46:40,160
with this I understand what this is I

00:46:38,300 --> 00:46:41,089
don't have to read 300 comments to

00:46:40,160 --> 00:46:42,800
figure out what's going on it does

00:46:41,089 --> 00:46:44,450
require someone though to invest the

00:46:42,800 --> 00:46:46,490
effort of actually communicating what

00:46:44,450 --> 00:46:48,650
was done previously and posting whatever

00:46:46,490 --> 00:46:49,579
final patch was and I am hopeful me you

00:46:48,650 --> 00:46:51,200
know maybe if you want me to talk about

00:46:49,579 --> 00:46:52,700
the issue queue improvements I am

00:46:51,200 --> 00:46:53,960
hopeful that in the future the

00:46:52,700 --> 00:46:55,700
drupal.org issue he'll do a better job

00:46:53,960 --> 00:46:58,640
of exposing what's important on an issue

00:46:55,700 --> 00:47:00,710
as opposed to the noise but it's

00:46:58,640 --> 00:47:03,290
definitely a constant challenge for ya

00:47:00,710 --> 00:47:05,030
everyone because currently if Andy she

00:47:03,290 --> 00:47:08,720
has 200 comments you can consider it

00:47:05,030 --> 00:47:10,579
that it's the most most of the time

00:47:08,720 --> 00:47:14,240
there is in a way to get an actual

00:47:10,579 --> 00:47:15,680
committed patch out of it you just have

00:47:14,240 --> 00:47:18,829
to close it let's start again in a new

00:47:15,680 --> 00:47:20,089
issue basically pointing to the other

00:47:18,829 --> 00:47:21,859
one there is the whole discussion you

00:47:20,089 --> 00:47:23,589
can read there but we have now some

00:47:21,859 --> 00:47:27,500
better understanding that start again

00:47:23,589 --> 00:47:29,359
yeah it's definitely something we've

00:47:27,500 --> 00:47:31,130
done and I don't know if we could do it

00:47:29,359 --> 00:47:33,650
earlier I don't know if that's feasible

00:47:31,130 --> 00:47:34,520
and so like one at least one of the

00:47:33,650 --> 00:47:37,640
issues that I listed was in that

00:47:34,520 --> 00:47:38,329
situation um I don't know I don't know

00:47:37,640 --> 00:47:41,780
if it would have actually been

00:47:38,329 --> 00:47:44,869
beneficial all right if no one else has

00:47:41,780 --> 00:47:48,290
any comments questions I'm gonna we have

00:47:44,869 --> 00:47:55,680
ten minutes left but I'm okay

00:47:48,290 --> 00:47:57,870
um so doing big doing even not as big as

00:47:55,680 --> 00:48:00,930
those right but doing a review where you

00:47:57,870 --> 00:48:04,950
have many comments so that you don't

00:48:00,930 --> 00:48:08,250
crush the people who worked on it um but

00:48:04,950 --> 00:48:12,060
you might need to do it in parts it is

00:48:08,250 --> 00:48:14,340
it oh is it at all helpful to say I made

00:48:12,060 --> 00:48:15,990
it one third of the way through I'm not

00:48:14,340 --> 00:48:17,520
going I always said I said that in every

00:48:15,990 --> 00:48:19,410
single post I always said i have read

00:48:17,520 --> 00:48:20,790
this part of the passion so obviously it

00:48:19,410 --> 00:48:23,550
didn't it didn't help them but it didn't

00:48:20,790 --> 00:48:24,690
hope it didn't help because they still

00:48:23,550 --> 00:48:26,370
have to take the time to look and see

00:48:24,690 --> 00:48:28,290
what I said even if they just read that

00:48:26,370 --> 00:48:30,480
part and it's but easy it's also easy to

00:48:28,290 --> 00:48:31,740
scan to the gray code snippet box that

00:48:30,480 --> 00:48:34,560
you're commenting on and missed that one

00:48:31,740 --> 00:48:37,380
little line so do you prefer to get it

00:48:34,560 --> 00:48:44,490
all at once or you just would prefer to

00:48:37,380 --> 00:48:45,450
not get feedback wait here but if you

00:48:44,490 --> 00:48:47,280
have no comments at all there's

00:48:45,450 --> 00:48:49,020
performance problems and architectural

00:48:47,280 --> 00:48:51,390
problems and other problems that persist

00:48:49,020 --> 00:48:53,790
i don't think i have an answer to them

00:48:51,390 --> 00:48:57,270
because i haven't been in an issue where

00:48:53,790 --> 00:48:59,790
all comments from the review have been

00:48:57,270 --> 00:49:02,400
in more comment so I I don't know i'm

00:48:59,790 --> 00:49:04,470
not sure what it would have been a big

00:49:02,400 --> 00:49:07,290
help if everything was in one common

00:49:04,470 --> 00:49:09,180
because i may be will be it would be a

00:49:07,290 --> 00:49:10,950
soul crush because it would have been

00:49:09,180 --> 00:49:12,870
extremely well use it's 10 pages long

00:49:10,950 --> 00:49:16,140
yeah right yeah i have to scroll for

00:49:12,870 --> 00:49:17,700
like hours to read it I don't know and

00:49:16,140 --> 00:49:19,290
what I did for the blocks is plugins

00:49:17,700 --> 00:49:21,240
issue is actually I told Chris online

00:49:19,290 --> 00:49:23,760
that I'm not done reviewing this so i

00:49:21,240 --> 00:49:27,390
posted these 10 comments over the course

00:49:23,760 --> 00:49:28,890
of two weeks um and in each case they

00:49:27,390 --> 00:49:31,140
were in a numbered list and I group them

00:49:28,890 --> 00:49:32,430
by like whether they were a coding

00:49:31,140 --> 00:49:33,780
standards issue at the bottom of the

00:49:32,430 --> 00:49:35,310
post or whether they were like a severe

00:49:33,780 --> 00:49:37,050
architectural question this is really

00:49:35,310 --> 00:49:38,910
broken looking at the top of the post

00:49:37,050 --> 00:49:40,730
and then after that it like it said it

00:49:38,910 --> 00:49:44,130
took me a flight from London to

00:49:40,730 --> 00:49:50,460
Minneapolis to summarize what I had gone

00:49:44,130 --> 00:49:53,880
through in that patch so it's a burn ok

00:49:50,460 --> 00:49:56,160
so don't want to be blasphemy or

00:49:53,880 --> 00:50:00,200
whatever don't blaspheme but comments

00:49:56,160 --> 00:50:00,200
are not the place for code reviews

00:50:01,280 --> 00:50:07,230
you put the cop the code is the place

00:50:05,220 --> 00:50:09,150
where the code review should occur so if

00:50:07,230 --> 00:50:11,579
you look at what a lot of other people

00:50:09,150 --> 00:50:12,900
use like we could talk about game but

00:50:11,579 --> 00:50:14,880
there's a lot of other solutions like

00:50:12,900 --> 00:50:17,460
fish eye or crucible whatever you want

00:50:14,880 --> 00:50:19,230
old Garrett that the review should be in

00:50:17,460 --> 00:50:20,760
the code and then then it doesn't matter

00:50:19,230 --> 00:50:24,000
if there's one comment like adding her

00:50:20,760 --> 00:50:25,260
to do yeah I actually I did do that in

00:50:24,000 --> 00:50:29,400
the in the field patch for things that I

00:50:25,260 --> 00:50:30,930
couldn't fix myself um I the problem is

00:50:29,400 --> 00:50:32,069
that I also then the blocks patch and a

00:50:30,930 --> 00:50:34,380
lot of those two to do is they're still

00:50:32,069 --> 00:50:37,710
there um but yeah actually I think that

00:50:34,380 --> 00:50:38,790
actually is helpful because then then

00:50:37,710 --> 00:50:40,740
the person who's reading the issue

00:50:38,790 --> 00:50:42,690
doesn't have to go back and like fine

00:50:40,740 --> 00:50:44,609
like go to that file go to that line and

00:50:42,690 --> 00:50:46,190
say first of all does she even know what

00:50:44,609 --> 00:50:48,510
the heck she's talking about secondly

00:50:46,190 --> 00:50:49,680
okay now I know what this changes to

00:50:48,510 --> 00:50:51,450
make and now I have to look in and go

00:50:49,680 --> 00:50:53,160
back and look in context so in that case

00:50:51,450 --> 00:50:55,440
they can just apply the updated

00:50:53,160 --> 00:51:00,720
commented on patch yeah they're not dead

00:50:55,440 --> 00:51:01,799
back there okay at the other on the

00:51:00,720 --> 00:51:03,000
other hand though that makes it harder

00:51:01,799 --> 00:51:05,970
for other people to see what you've

00:51:03,000 --> 00:51:07,049
already said so if someone had done that

00:51:05,970 --> 00:51:09,030
to one of my issues that we've been

00:51:07,049 --> 00:51:11,160
pissed at the amount of time everyone

00:51:09,030 --> 00:51:12,420
would have wasted because if if you're

00:51:11,160 --> 00:51:15,540
just going through and changing my

00:51:12,420 --> 00:51:17,250
patent like unless you have working in

00:51:15,540 --> 00:51:19,849
my sandbox which I always have a sandbox

00:51:17,250 --> 00:51:22,940
like I'm gonna make other changes and

00:51:19,849 --> 00:51:26,040
your inner diff is now useless to me and

00:51:22,940 --> 00:51:28,799
it would just waste my time to have to

00:51:26,040 --> 00:51:31,319
do use that and not just have in the

00:51:28,799 --> 00:51:33,270
issue I mean I don't think comments are

00:51:31,319 --> 00:51:34,799
necessarily the place for it but if we

00:51:33,270 --> 00:51:35,819
had like github style comments I know

00:51:34,799 --> 00:51:38,640
I'm not supposed to talk about you have

00:51:35,819 --> 00:51:41,780
you can now I'm what exact cause it

00:51:38,640 --> 00:51:44,579
seems to be the answer visually separate

00:51:41,780 --> 00:51:46,890
discussion and and real review with like

00:51:44,579 --> 00:51:50,339
this is wrong there's you know if I miss

00:51:46,890 --> 00:51:53,790
a leading / it's not up for discussion I

00:51:50,339 --> 00:51:55,890
did it wrong like that's different but

00:51:53,790 --> 00:52:00,000
no I mean I I would please don't do that

00:51:55,890 --> 00:52:02,579
to my issues don't fix don't add to do's

00:52:00,000 --> 00:52:07,859
and then post a you know 180k patch what

00:52:02,579 --> 00:52:08,880
to do I agree that's not what I was

00:52:07,859 --> 00:52:10,770
trying to suggest though is trying to

00:52:08,880 --> 00:52:11,790
suggest that if you seriously go and

00:52:10,770 --> 00:52:13,800
look at github

00:52:11,790 --> 00:52:16,170
go and look at fish I go and look at

00:52:13,800 --> 00:52:18,330
garrett there are amazing code review

00:52:16,170 --> 00:52:26,040
solutions out there this problem has

00:52:18,330 --> 00:52:29,120
been solved hey Greg we have six months

00:52:26,040 --> 00:52:32,190
left anyone else have anything else oh

00:52:29,120 --> 00:52:33,510
well mostly me me just running through a

00:52:32,190 --> 00:52:35,490
bunch of stuff that I didn't really

00:52:33,510 --> 00:52:37,800
finish or finish preparing for because I

00:52:35,490 --> 00:52:38,970
have too much other stuff to do oh yeah

00:52:37,800 --> 00:52:40,770
there's a lot of information so

00:52:38,970 --> 00:52:42,570
apparently I was expecting more people

00:52:40,770 --> 00:52:43,980
like oh so um for anyone who's not

00:52:42,570 --> 00:52:46,470
familiar the people who keep asking

00:52:43,980 --> 00:52:48,060
questions here mrs. Gabor Hoshi he's the

00:52:46,470 --> 00:52:49,500
lead for the multilingual initiative the

00:52:48,060 --> 00:52:51,210
guy that just walked in his Greg Dunlap

00:52:49,500 --> 00:52:53,250
um he's the lead for the configuration

00:52:51,210 --> 00:52:57,090
management initiative Alec spot here is

00:52:53,250 --> 00:52:58,950
a core maintainer Kathy down here is my

00:52:57,090 --> 00:53:01,800
favorite person in the world um I have

00:52:58,950 --> 00:53:04,410
lots of favorite people but Kathy is a

00:53:01,800 --> 00:53:07,320
you know a top contributor to the to the

00:53:04,410 --> 00:53:11,490
multilingual initiative and also on a

00:53:07,320 --> 00:53:13,590
very active core mentor and let's see

00:53:11,490 --> 00:53:15,630
who else has questions Christoph is that

00:53:13,590 --> 00:53:17,910
Swan tell he worked he is what Co

00:53:15,630 --> 00:53:20,190
maintainer now for the field API so

00:53:17,910 --> 00:53:21,450
these are all pendant and Tim is one of

00:53:20,190 --> 00:53:22,680
the people on the views and core team

00:53:21,450 --> 00:53:26,130
and also the top contributor jubile

00:53:22,680 --> 00:53:27,600
right now so these are all what st. Tim

00:53:26,130 --> 00:53:31,620
I'm supposed to say st. Tim now right

00:53:27,600 --> 00:53:33,300
that's what she is it so it's obviously

00:53:31,620 --> 00:53:34,860
a very in group discussion about like

00:53:33,300 --> 00:53:38,330
these changes that we confront every day

00:53:34,860 --> 00:53:40,530
is people who are really active and I

00:53:38,330 --> 00:53:42,330
just talking about it realizable you

00:53:40,530 --> 00:53:44,010
know something that you know on the

00:53:42,330 --> 00:53:46,980
other half of my life that's not about

00:53:44,010 --> 00:53:49,080
this which is about trying to help

00:53:46,980 --> 00:53:51,600
people on the outside understand we on

00:53:49,080 --> 00:53:53,220
the this this inside that talk about

00:53:51,600 --> 00:53:55,040
this in this secret language do is

00:53:53,220 --> 00:53:57,870
trying to break down some of those walls

00:53:55,040 --> 00:54:01,350
and I feel like you know our issue queue

00:53:57,870 --> 00:54:02,760
has kind of become a wall because we're

00:54:01,350 --> 00:54:03,900
talking about all these strategies for

00:54:02,760 --> 00:54:06,270
how to work around things that it

00:54:03,900 --> 00:54:09,300
doesn't do well to help ourselves when

00:54:06,270 --> 00:54:10,650
we spend all day using this tool and how

00:54:09,300 --> 00:54:13,020
could anyone who doesn't do that every

00:54:10,650 --> 00:54:16,110
day possibly understand it is i'm going

00:54:13,020 --> 00:54:17,880
to do more question asking so has anyone

00:54:16,110 --> 00:54:21,090
in here ever attempted to review a

00:54:17,880 --> 00:54:22,800
Drupal core patch at all okay okay

00:54:21,090 --> 00:54:25,360
that's a lot that's better okay good I

00:54:22,800 --> 00:54:27,770
was starting to kind of worried

00:54:25,360 --> 00:54:29,900
so that's it like does anyone want to

00:54:27,770 --> 00:54:33,080
give me examples of issues that you've

00:54:29,900 --> 00:54:34,400
looked at and worked on you can shout it

00:54:33,080 --> 00:54:38,180
out don't worry don't bother with a mic

00:54:34,400 --> 00:54:39,890
because know anyone a lot of you raise

00:54:38,180 --> 00:54:41,270
your hand what's an example of an issue

00:54:39,890 --> 00:54:47,120
you work done I not these guys I know

00:54:41,270 --> 00:54:52,150
what they did Oh guys you're terrible be

00:54:47,120 --> 00:54:52,150
big yeah okay

00:55:13,220 --> 00:55:26,640
sometimes there's a lot of politics so

00:55:24,839 --> 00:55:28,380
yeah Jared was saying just briefly

00:55:26,640 --> 00:55:32,029
summarizes is that you know reviewing

00:55:28,380 --> 00:55:35,309
documentation patches on example changes

00:55:32,029 --> 00:55:36,869
and that even that can involve political

00:55:35,309 --> 00:55:40,680
discussion even for those fairly

00:55:36,869 --> 00:55:42,599
self-contained well-defined issues hey

00:55:40,680 --> 00:55:45,420
actually I'm thank you I'm Dylan

00:55:42,599 --> 00:55:47,460
probably better known as grins e I just

00:55:45,420 --> 00:55:51,210
isn't something i've worked on this

00:55:47,460 --> 00:55:53,579
winter was the the file some file

00:55:51,210 --> 00:55:55,200
metadata things the file API and that's

00:55:53,579 --> 00:55:56,789
been one of the I don't know the answer

00:55:55,200 --> 00:55:59,819
but spin a hard part for for me as a

00:55:56,789 --> 00:56:03,269
contributor with with less time probably

00:55:59,819 --> 00:56:04,859
as in most of you just keeping up with

00:56:03,269 --> 00:56:06,569
like a big change so we were working on

00:56:04,859 --> 00:56:08,369
like we did a really terrible thing a

00:56:06,569 --> 00:56:12,089
Drupal 7 where we put the file metadata

00:56:08,369 --> 00:56:14,249
in the file reference thing so if you

00:56:12,089 --> 00:56:15,960
change that and you've got ten you know

00:56:14,249 --> 00:56:17,279
ten different entities referencing the

00:56:15,960 --> 00:56:20,849
same file you've got to change it in 10

00:56:17,279 --> 00:56:21,960
different places which so anyway we were

00:56:20,849 --> 00:56:25,170
working on that and you know we kind of

00:56:21,960 --> 00:56:27,329
had a few weeks into it and had all you

00:56:25,170 --> 00:56:28,529
white boarded and almost put together

00:56:27,329 --> 00:56:30,480
what we thought was going to work and

00:56:28,529 --> 00:56:31,470
then i'll send it was like you know what

00:56:30,480 --> 00:56:32,970
we don't actually need that because

00:56:31,470 --> 00:56:34,619
there's going to be this new file some

00:56:32,970 --> 00:56:38,220
other filed that are some other metadata

00:56:34,619 --> 00:56:39,420
API so except i don't know what the

00:56:38,220 --> 00:56:42,569
answer is it's just that like if you're

00:56:39,420 --> 00:56:43,710
you know maybe it's even just knowing

00:56:42,569 --> 00:56:48,749
that when you know when someone's going

00:56:43,710 --> 00:56:50,369
in knowing like what's the scope of what

00:56:48,749 --> 00:56:53,460
can you take on personally and knowing

00:56:50,369 --> 00:56:55,619
like when you're ready to even get

00:56:53,460 --> 00:56:57,440
involved with with one of those huge you

00:56:55,619 --> 00:57:00,180
know mega patches or something like that

00:56:57,440 --> 00:57:03,150
and running into the situation where um

00:57:00,180 --> 00:57:04,890
so this the metadata API has that landed

00:57:03,150 --> 00:57:05,700
like is it did actually get in because

00:57:04,890 --> 00:57:07,499
that's something that God where

00:57:05,700 --> 00:57:08,549
mentioned you know it's like you end up

00:57:07,499 --> 00:57:10,049
waiting for something that's new and

00:57:08,549 --> 00:57:15,259
shiny to solve your problem I don't know

00:57:10,049 --> 00:57:18,779
actually if it did land but that's yeah

00:57:15,259 --> 00:57:20,309
my name is John Antoine known as jay ant

00:57:18,779 --> 00:57:23,079
went on drupal.org formerly known as

00:57:20,309 --> 00:57:26,709
Anton solutions

00:57:23,079 --> 00:57:29,289
I haven't reviewed a core patch but I

00:57:26,709 --> 00:57:32,160
tried to write a form element with

00:57:29,289 --> 00:57:35,410
Drupal 7 and ended up running into

00:57:32,160 --> 00:57:38,920
checks in code looking specifically for

00:57:35,410 --> 00:57:42,459
if this is a checkbox do this or if this

00:57:38,920 --> 00:57:46,839
is a radio do this and I was trying to

00:57:42,459 --> 00:57:49,749
work with checkbox and radios so it

00:57:46,839 --> 00:57:52,450
wasn't working so I didn't handle it

00:57:49,749 --> 00:57:55,299
correctly but it brought me back to the

00:57:52,450 --> 00:57:57,190
first session I attended which I've been

00:57:55,299 --> 00:58:03,700
pretty much in this room but it was mark

00:57:57,190 --> 00:58:06,219
on unit testing and just hearing all of

00:58:03,700 --> 00:58:10,140
the core discussions unit tests and

00:58:06,219 --> 00:58:12,579
having Hopi code I think would

00:58:10,140 --> 00:58:17,049
tremendously helped the complexity that

00:58:12,579 --> 00:58:20,229
a lot of fresh Drupal leurs deal with

00:58:17,049 --> 00:58:21,969
like big I hope so I hope so um so I

00:58:20,229 --> 00:58:23,890
would say that right now in Drupal 8 we

00:58:21,969 --> 00:58:25,119
have added a lot of 00 and Drupal 8 I

00:58:23,890 --> 00:58:26,619
would say right now we've actually

00:58:25,119 --> 00:58:28,599
increased the complexity because we're

00:58:26,619 --> 00:58:30,940
in a situation where we have a mix of

00:58:28,599 --> 00:58:33,219
both where there's procedural either

00:58:30,940 --> 00:58:35,579
actual procedural code in classes and

00:58:33,219 --> 00:58:37,900
sometimes or at least procedural

00:58:35,579 --> 00:58:39,130
philosophically cold in it and and the

00:58:37,900 --> 00:58:41,739
community is still really learning how

00:58:39,130 --> 00:58:44,469
to do that because Drupal you know as a

00:58:41,739 --> 00:58:47,440
project comes from a time when PHP

00:58:44,469 --> 00:58:49,509
didn't really have good object support I

00:58:47,440 --> 00:58:51,309
mean like you couldn't really do object

00:58:49,509 --> 00:58:54,609
oriented code in page before and earlier

00:58:51,309 --> 00:58:56,259
in an effective way so we're we're just

00:58:54,609 --> 00:58:58,930
now I think Larry Garfield likes to say

00:58:56,259 --> 00:59:02,199
reporting reporting Drupal from being a

00:58:58,930 --> 00:59:04,989
PHP for application to being a PHP 53

00:59:02,199 --> 00:59:07,359
application and and we're still I think

00:59:04,989 --> 00:59:09,579
as a community learning what exactly

00:59:07,359 --> 00:59:10,930
that's going to mean for us so I but I

00:59:09,579 --> 00:59:12,699
hope you I hope you'll see more of that

00:59:10,930 --> 00:59:21,989
interpolate and and I hope that it's

00:59:12,699 --> 00:59:21,989
it's not more confusing anyway else hey

00:59:22,140 --> 00:59:28,559
I'm done that's it we're out of time

00:59:25,029 --> 00:59:28,559
which is good let's all go have dinner

00:59:30,160 --> 00:59:35,060
so why shy here got built me a statue

00:59:33,320 --> 00:59:36,800
and she's a little bit smaller than

00:59:35,060 --> 00:59:40,070
might have been advertised and she has a

00:59:36,800 --> 00:59:44,270
whip here so if you get one of my

00:59:40,070 --> 00:59:46,340
reviews just just remember be nice to me

00:59:44,270 --> 00:59:48,200
I worked really hard and I care about

00:59:46,340 --> 00:59:49,100
you and I care about your code and I

00:59:48,200 --> 00:59:52,270
want to help it get in and I'm very

00:59:49,100 --> 00:59:52,270

YouTube URL: https://www.youtube.com/watch?v=N1xMbCn-1_s


