Title: DrupalCon Portland 2013: DRUPAL LIFECYCLE MANAGEMENT, OR HOW TO KEEP YOUR DEV SWAGGER AFTER LAUNCH
Publication date: 2013-05-28
Playlist: DrupalCon Portland - May 2013
Description: 
	There are a number of emerging standards for professional Drupal development processes, but the challenge doesn't stop after the initial build. The industry discipline of "Application Lifecycle Management" (ALM) is still a frontier, and it's not as tedious or cumbersome as you might think. Done right, it's a liberation.

Realizing the full potential of Drupal means keeping your agility after launch and being able to drive ahead with additional features and fixes. Far too often, after the go-live, developers lose their ability to rock updates because the toolchain isn't in place to keep the site evolving easily and safely.

In a perfect world, all developers can continue making updates to the site design and functionality easily and seamlessly without downtime or worry. This session will cover several practical must-haves for best-class Drupal Application Lifecycle Management:

Deploying directly from version control ("push to deploy")
Running continuous integration with a Drupal site
Managing Drupal across multiple servers
Setting up and running Drush remotes
Handling core updates
Learn how to use shell scripts, git hooks, Jenkins and other free and open source tools to cover these important functions for your development team and sites.
Captions: 
	00:00:00,500 --> 00:00:08,130
greetings everyone are we ready to begin

00:00:04,490 --> 00:00:09,540
all right so first question show of

00:00:08,130 --> 00:00:13,650
hands how many you guys build websites

00:00:09,540 --> 00:00:15,210
for a living yes all right quick show of

00:00:13,650 --> 00:00:18,330
hands how have you enjoy building

00:00:15,210 --> 00:00:20,160
websites for a living all right quick

00:00:18,330 --> 00:00:21,779
show of hands how did you enjoy the

00:00:20,160 --> 00:00:23,160
beginning of the project where you get

00:00:21,779 --> 00:00:26,990
to do whatever you want more than the

00:00:23,160 --> 00:00:29,099
end of the project or you can't yes

00:00:26,990 --> 00:00:32,099
that's what we're here to talk about all

00:00:29,099 --> 00:00:34,020
right so I I chose a cheeky title

00:00:32,099 --> 00:00:35,640
developer swagger because I feel like

00:00:34,020 --> 00:00:37,170
there's that feeling you get at the

00:00:35,640 --> 00:00:39,210
beginning of a project where you can sit

00:00:37,170 --> 00:00:41,430
down and in like two three days maybe a

00:00:39,210 --> 00:00:43,860
week knockout 80% of what you kind of

00:00:41,430 --> 00:00:46,140
need and that feels very awesome but

00:00:43,860 --> 00:00:48,000
like velocity is something that's pre

00:00:46,140 --> 00:00:49,500
cognitively empowering you just know

00:00:48,000 --> 00:00:50,940
that that's right and it's powerful and

00:00:49,500 --> 00:00:53,100
it's good and you're making a difference

00:00:50,940 --> 00:00:55,320
and then there's sort of like this I

00:00:53,100 --> 00:00:56,670
don't know depending on the project and

00:00:55,320 --> 00:00:59,390
so forth there's a sort of decay of

00:00:56,670 --> 00:01:02,039
speed that happens and and more and more

00:00:59,390 --> 00:01:03,239
sort of limitations and structures get

00:01:02,039 --> 00:01:04,650
imposed on you and part of that's a

00:01:03,239 --> 00:01:06,090
function of QA and part of that's a

00:01:04,650 --> 00:01:07,350
function have more stakeholders coming

00:01:06,090 --> 00:01:09,210
in and maybe there's a big team and

00:01:07,350 --> 00:01:11,400
yadda yadda yadda but the point is you

00:01:09,210 --> 00:01:13,530
have that beginning of every project and

00:01:11,400 --> 00:01:14,939
it usually just feels so good especially

00:01:13,530 --> 00:01:15,900
if you know you're using Drupal you know

00:01:14,939 --> 00:01:17,159
what you're doing and you're building

00:01:15,900 --> 00:01:19,409
stuff up and you're installing it and

00:01:17,159 --> 00:01:21,659
plugging it together and then you lose

00:01:19,409 --> 00:01:24,060
that at some point and I'm going to talk

00:01:21,659 --> 00:01:25,560
today about ways that we cannot lose

00:01:24,060 --> 00:01:27,030
that feeling things we can put in place

00:01:25,560 --> 00:01:28,979
that let us have that same confidence

00:01:27,030 --> 00:01:31,619
that same velocity that same speed that

00:01:28,979 --> 00:01:35,670
same swagga all the way through our

00:01:31,619 --> 00:01:36,960
projects I'm also you know the technical

00:01:35,670 --> 00:01:40,200
term for this is Application Lifecycle

00:01:36,960 --> 00:01:43,770
Management and I'll explain a little bit

00:01:40,200 --> 00:01:45,329
about what that means to so Who am I for

00:01:43,770 --> 00:01:47,549
those of you I haven't met hi my name is

00:01:45,329 --> 00:01:49,619
Josh I'm Josh k i'm drew blood org I've

00:01:47,549 --> 00:01:52,380
been doing this for close to 10 years

00:01:49,619 --> 00:01:53,880
and I loved it and and I love this

00:01:52,380 --> 00:01:56,009
community and I'm really honored to be

00:01:53,880 --> 00:01:57,869
able to present I'm so actually kind of

00:01:56,009 --> 00:02:01,070
terrified and nervous that so many you

00:01:57,869 --> 00:02:03,240
came to see me so thanks for showing up

00:02:01,070 --> 00:02:04,710
professionally this is my gig now I do

00:02:03,240 --> 00:02:06,360
this thing called Pantheon it's like a

00:02:04,710 --> 00:02:08,580
Drupal in the cloud all-in-one platform

00:02:06,360 --> 00:02:10,140
build blond Toronto etc etc etc if you

00:02:08,580 --> 00:02:11,580
want to get that pitch pitch go to the

00:02:10,140 --> 00:02:13,860
booth I'm not going to talk about

00:02:11,580 --> 00:02:15,420
pantheon except at one point where I'm

00:02:13,860 --> 00:02:17,700
using it to fake a demo that I couldn't

00:02:15,420 --> 00:02:19,530
set up last night and I'm going to talk

00:02:17,700 --> 00:02:21,750
about what the technologies are that we

00:02:19,530 --> 00:02:23,400
use to build this sort of thing and how

00:02:21,750 --> 00:02:24,840
you can use them yourself if you want to

00:02:23,400 --> 00:02:26,820
how you can use the same open source

00:02:24,840 --> 00:02:28,500
tools and build your own application

00:02:26,820 --> 00:02:29,580
lifecycle management system because I

00:02:28,500 --> 00:02:33,330
think it's very important knowledge for

00:02:29,580 --> 00:02:35,760
people to have so quick enterprise

00:02:33,330 --> 00:02:38,370
software acronym Academy this whole

00:02:35,760 --> 00:02:39,959
notion is about there are people out

00:02:38,370 --> 00:02:41,459
there that by the technology from us

00:02:39,959 --> 00:02:43,050
usually like we're the developers and

00:02:41,459 --> 00:02:44,040
like even if we're working inside of an

00:02:43,050 --> 00:02:46,170
organization rather than at a

00:02:44,040 --> 00:02:47,790
consultancy there's still someone else

00:02:46,170 --> 00:02:49,709
who's the ultimate owner like the site

00:02:47,790 --> 00:02:51,390
owner or the project manager or the the

00:02:49,709 --> 00:02:52,500
project owner of here in just grammar

00:02:51,390 --> 00:02:54,480
but stakeholder whatever you want to

00:02:52,500 --> 00:02:56,310
call it right and usually there's an

00:02:54,480 --> 00:02:57,480
administrative kind of capacity within

00:02:56,310 --> 00:02:58,920
the organization whether it's your

00:02:57,480 --> 00:03:00,780
organization with a client organization

00:02:58,920 --> 00:03:02,670
and they're going to have to like kind

00:03:00,780 --> 00:03:04,470
of live with this thing for as long as

00:03:02,670 --> 00:03:06,540
it's around and sometimes a website is

00:03:04,470 --> 00:03:09,540
like a two three four five maybe even

00:03:06,540 --> 00:03:11,489
more your commitment and so they need to

00:03:09,540 --> 00:03:13,260
know that they have the the stuff in

00:03:11,489 --> 00:03:14,730
place to be able to keep it online and

00:03:13,260 --> 00:03:16,500
keep it running and make the updates we

00:03:14,730 --> 00:03:19,200
need to make the updates and this is no

00:03:16,500 --> 00:03:21,060
joke right like I used to do a lot of

00:03:19,200 --> 00:03:24,420
drupal consulting with with chapter

00:03:21,060 --> 00:03:25,769
three and we we at that when I first

00:03:24,420 --> 00:03:26,940
started we just really like didn't want

00:03:25,769 --> 00:03:27,840
to have anything to do with this it was

00:03:26,940 --> 00:03:29,549
very much like we'll build you the

00:03:27,840 --> 00:03:32,459
website will try you to use Drupal and

00:03:29,549 --> 00:03:33,959
then go for it right and that was good

00:03:32,459 --> 00:03:35,250
for us because you know we were able to

00:03:33,959 --> 00:03:36,390
build our business and we will work on a

00:03:35,250 --> 00:03:37,950
lot of interesting projects and we

00:03:36,390 --> 00:03:39,060
helped a lot of people and thankfully

00:03:37,950 --> 00:03:41,310
you know a lot of the stuff isn't that

00:03:39,060 --> 00:03:42,989
complicated or or you know it people can

00:03:41,310 --> 00:03:44,640
you can get away with kind of fudging a

00:03:42,989 --> 00:03:46,650
little bit here and there but more and

00:03:44,640 --> 00:03:48,000
more as the the world begins to adopt

00:03:46,650 --> 00:03:50,190
Drupal and begin to beginning it more

00:03:48,000 --> 00:03:51,480
serious about best practices this is

00:03:50,190 --> 00:03:53,910
less and less something that you can

00:03:51,480 --> 00:03:55,590
kind of hand wave away also if you

00:03:53,910 --> 00:03:57,390
happen to run a consultancy or work for

00:03:55,590 --> 00:03:58,799
a consultancy being able to deliver on

00:03:57,390 --> 00:04:00,540
this kind of stuff is like really good

00:03:58,799 --> 00:04:01,950
business because it keeps your customers

00:04:00,540 --> 00:04:03,690
around for the long haul which is really

00:04:01,950 --> 00:04:05,010
important if you're trying to grow grow

00:04:03,690 --> 00:04:07,680
this industry we need to build long-term

00:04:05,010 --> 00:04:09,180
relationships so these people are

00:04:07,680 --> 00:04:11,040
looking at two to five year time lines

00:04:09,180 --> 00:04:12,299
they're also thinking about Drupal isn't

00:04:11,040 --> 00:04:13,829
the only thing they do like they can't

00:04:12,299 --> 00:04:16,769
be drupal experts because they have to

00:04:13,829 --> 00:04:18,510
own 7 8 20 different pieces of

00:04:16,769 --> 00:04:19,979
technology and you know even if people

00:04:18,510 --> 00:04:21,510
try to standardize more on the web tier

00:04:19,979 --> 00:04:23,220
they're also like dealing with like

00:04:21,510 --> 00:04:24,660
whatever their CRM database is and blah

00:04:23,220 --> 00:04:26,190
blah blah they've got a lot of stuff on

00:04:24,660 --> 00:04:27,610
their plate and it's hard you kind of

00:04:26,190 --> 00:04:29,020
have to appreciate the fact that a bunch

00:04:27,610 --> 00:04:30,759
these people are are overworked

00:04:29,020 --> 00:04:32,050
underpaid stressed out and under a lot

00:04:30,759 --> 00:04:35,680
of pressure and we should be nice to

00:04:32,050 --> 00:04:37,330
them I think it's important that this is

00:04:35,680 --> 00:04:39,189
not just for big corporations and big

00:04:37,330 --> 00:04:41,229
organizations this stuff is for everyone

00:04:39,189 --> 00:04:44,169
this helps all of us build better sites

00:04:41,229 --> 00:04:45,460
faster and get them keep them developing

00:04:44,169 --> 00:04:47,949
and keeping on going that the thing that

00:04:45,460 --> 00:04:49,930
I dislike the most is when you have a

00:04:47,949 --> 00:04:51,129
really cool site build process and you

00:04:49,930 --> 00:04:53,979
get this really great site out the door

00:04:51,129 --> 00:04:55,479
and then it never evolves after that

00:04:53,979 --> 00:04:57,729
because it's too hard to do the

00:04:55,479 --> 00:04:59,110
deployment stuff and keep it all in sync

00:04:57,729 --> 00:05:01,090
and like you have a couple bad

00:04:59,110 --> 00:05:02,409
experiences where you break the build or

00:05:01,090 --> 00:05:04,150
whatever and then all of a sudden

00:05:02,409 --> 00:05:05,650
everybody goes into lockdown mode and

00:05:04,150 --> 00:05:07,509
you're not able to innovate anymore and

00:05:05,650 --> 00:05:10,240
that that just kills me right here in my

00:05:07,509 --> 00:05:12,219
heart so this is for everyone so in the

00:05:10,240 --> 00:05:13,810
broadest spectrum ALM is like all this

00:05:12,219 --> 00:05:15,610
soup to nuts it's like you know the guy

00:05:13,810 --> 00:05:17,830
who's going to do the giant Microsoft

00:05:15,610 --> 00:05:19,270
Project Gantt chart or whatever and

00:05:17,830 --> 00:05:20,919
they're going to go from requirements

00:05:19,270 --> 00:05:22,270
gathering all the way through design

00:05:20,919 --> 00:05:23,860
develop and project patio design etc etc

00:05:22,270 --> 00:05:24,759
I'm not going to talk about all that I'm

00:05:23,860 --> 00:05:26,710
really just going to talk about

00:05:24,759 --> 00:05:28,270
development deployment maintenance

00:05:26,710 --> 00:05:29,889
updates and upgrades and what are some

00:05:28,270 --> 00:05:31,690
best practices you can use for these

00:05:29,889 --> 00:05:34,800
that will help you in doing your job and

00:05:31,690 --> 00:05:37,330
what are some tools you can use so

00:05:34,800 --> 00:05:39,550
developers want to move fast as I was

00:05:37,330 --> 00:05:42,129
saying it's very gratifying for us to be

00:05:39,550 --> 00:05:43,360
able to do things quickly and I think

00:05:42,129 --> 00:05:45,009
there's you know there's there's no

00:05:43,360 --> 00:05:46,810
coincidence that Facebook chose is their

00:05:45,009 --> 00:05:48,580
engineering model we like to move fast

00:05:46,810 --> 00:05:50,650
because that's very appealing it gets to

00:05:48,580 --> 00:05:52,719
that like powerful early experience and

00:05:50,650 --> 00:05:55,000
there's this great old proverb of like

00:05:52,719 --> 00:05:57,069
if you want to go fast go alone if you

00:05:55,000 --> 00:05:58,810
want to go far go together and I think

00:05:57,069 --> 00:06:00,370
that often we are sort of faced with

00:05:58,810 --> 00:06:02,319
that type of choice and it's a false

00:06:00,370 --> 00:06:04,330
choice I think we can go fast and go

00:06:02,319 --> 00:06:05,650
together and in fact if we really go

00:06:04,330 --> 00:06:08,229
together as a community we can go even

00:06:05,650 --> 00:06:09,279
faster than any of us could alone you

00:06:08,229 --> 00:06:10,870
know we're kind of like this we're gonna

00:06:09,279 --> 00:06:12,879
hack it up we're gonna you know got this

00:06:10,870 --> 00:06:14,349
glowing thing and a happy mug and we're

00:06:12,879 --> 00:06:18,370
in the matrix and so on and so forth and

00:06:14,349 --> 00:06:19,900
and the the people sort of who are in

00:06:18,370 --> 00:06:21,339
charge of that chart or lady signing the

00:06:19,900 --> 00:06:23,289
checks or whatever they're probably a

00:06:21,339 --> 00:06:24,310
little more risk-averse a because you

00:06:23,289 --> 00:06:26,229
have to appreciate that they don't

00:06:24,310 --> 00:06:28,000
really understand very often what we do

00:06:26,229 --> 00:06:29,770
like the whole arthur c clarke

00:06:28,000 --> 00:06:32,199
sufficiently advanced technology is

00:06:29,770 --> 00:06:33,460
indistinguishable from magic like have

00:06:32,199 --> 00:06:35,979
you ever tried to sit down with someone

00:06:33,460 --> 00:06:37,779
who's like in your family a normal

00:06:35,979 --> 00:06:40,930
person and just explain the internet to

00:06:37,779 --> 00:06:42,789
them like they're it's it's

00:06:40,930 --> 00:06:44,050
as crazy to them like they don't just

00:06:42,789 --> 00:06:45,280
don't think about it at this point it's

00:06:44,050 --> 00:06:46,810
just as soon oh yeah now get online and

00:06:45,280 --> 00:06:48,880
the website is there and they don't

00:06:46,810 --> 00:06:50,620
really there's no reason for them to try

00:06:48,880 --> 00:06:52,210
to comprehend all the little things that

00:06:50,620 --> 00:06:54,220
have to happen in order to just load a

00:06:52,210 --> 00:06:55,539
webpage on your browser they just assume

00:06:54,220 --> 00:06:57,550
that it works then it's kind of magic

00:06:55,539 --> 00:06:59,740
and so when you're in charge of managing

00:06:57,550 --> 00:07:01,090
a process and you're effectively think

00:06:59,740 --> 00:07:03,370
you're working with a bunch of magicians

00:07:01,090 --> 00:07:05,380
who may dress unconventionally and you

00:07:03,370 --> 00:07:06,340
know go to these cool conferences and

00:07:05,380 --> 00:07:07,360
you're not quite sure what they're doing

00:07:06,340 --> 00:07:10,180
it can make you a little bit uptight

00:07:07,360 --> 00:07:11,710
right so you have people who are afraid

00:07:10,180 --> 00:07:13,690
of downtime because down time is money

00:07:11,710 --> 00:07:15,220
that's huge for most sites even small

00:07:13,690 --> 00:07:16,930
sites it can't be offline that can't be

00:07:15,220 --> 00:07:18,849
down that can't be broken even if the

00:07:16,930 --> 00:07:21,490
site is up but the CSS is broken that's

00:07:18,849 --> 00:07:22,570
still broken right if the user at the

00:07:21,490 --> 00:07:24,190
end of the day isn't able to low the

00:07:22,570 --> 00:07:25,660
site in the browser it might as well the

00:07:24,190 --> 00:07:27,130
server might as well be on fire for all

00:07:25,660 --> 00:07:28,810
their concerns like as a developer i

00:07:27,130 --> 00:07:30,699
distinguish between these things but as

00:07:28,810 --> 00:07:33,190
a site owner most people don't end nor

00:07:30,699 --> 00:07:34,389
should they because they're right and so

00:07:33,190 --> 00:07:36,160
you get this kind of thing it's like

00:07:34,389 --> 00:07:38,410
yeah if you could just go ahead and test

00:07:36,160 --> 00:07:43,810
everything before you deploy it that'd

00:07:38,410 --> 00:07:45,250
be great and and and and i think you

00:07:43,810 --> 00:07:47,979
know I've chose the bill lumbergh mean

00:07:45,250 --> 00:07:49,990
for this because sometimes when you get

00:07:47,979 --> 00:07:51,820
this kind of ask you sort of feel like

00:07:49,990 --> 00:07:53,919
you are in that office space movie and

00:07:51,820 --> 00:07:59,770
this guy is kind of a douche and you're

00:07:53,919 --> 00:08:01,510
like man why but he's right you should

00:07:59,770 --> 00:08:02,949
test everything before you deploy it

00:08:01,510 --> 00:08:05,229
because you wit usually deploy should be

00:08:02,949 --> 00:08:06,909
rock solid and the point is what that

00:08:05,229 --> 00:08:09,220
process of testing before you deploy

00:08:06,909 --> 00:08:11,289
should be easy it should be simple it

00:08:09,220 --> 00:08:13,030
should be like powerful and it should be

00:08:11,289 --> 00:08:14,919
like all set up for you that's the right

00:08:13,030 --> 00:08:16,630
way to do it so do you have to take

00:08:14,919 --> 00:08:18,280
risks if you want to move fast I mean

00:08:16,630 --> 00:08:19,389
one way to do it is you can you can go

00:08:18,280 --> 00:08:20,770
on a motorcycle you can leave your

00:08:19,389 --> 00:08:21,909
helmet behind you can crank it up and

00:08:20,770 --> 00:08:23,500
you can just head off down the road or

00:08:21,909 --> 00:08:25,270
you could like get in a sports car with

00:08:23,500 --> 00:08:26,740
a strap on harness and like have all the

00:08:25,270 --> 00:08:28,449
equipment you need and you know drive a

00:08:26,740 --> 00:08:30,159
hundred miles an hour and be relatively

00:08:28,449 --> 00:08:32,800
safe on a closed course on a closed

00:08:30,159 --> 00:08:34,750
course so no you don't have to take

00:08:32,800 --> 00:08:35,829
risks not if you do it right and that's

00:08:34,750 --> 00:08:40,890
what we're gonna here to chocolate it's

00:08:35,829 --> 00:08:43,270
the success of doing it right so swagger

00:08:40,890 --> 00:08:45,850
what are the things that cause you to

00:08:43,270 --> 00:08:47,500
lose your swagger as a developer I'm

00:08:45,850 --> 00:08:49,680
going to run through my favorites and

00:08:47,500 --> 00:08:52,779
then we can talk about more at the end

00:08:49,680 --> 00:08:53,830
there's a wonderful poem two roads

00:08:52,779 --> 00:08:56,350
diverged in a

00:08:53,830 --> 00:08:58,030
would and I I took the one less traveled

00:08:56,350 --> 00:08:59,500
by and that has made all the difference

00:08:58,030 --> 00:09:00,760
and that's kind of a nice inspirational

00:08:59,500 --> 00:09:02,680
poem about being yourself but in a

00:09:00,760 --> 00:09:07,540
project if the two roads diverged you

00:09:02,680 --> 00:09:09,370
are so screwed right because this is the

00:09:07,540 --> 00:09:11,710
first thing and that steals your swagger

00:09:09,370 --> 00:09:13,270
is like if you are not in sync with the

00:09:11,710 --> 00:09:15,460
rest of the project especially after you

00:09:13,270 --> 00:09:16,960
go live right you go live and unless

00:09:15,460 --> 00:09:19,000
you're in one of these like edgy use

00:09:16,960 --> 00:09:20,500
cases where there's like no nothing

00:09:19,000 --> 00:09:22,150
actually happening on the live site and

00:09:20,500 --> 00:09:23,290
everything is just pushed out from there

00:09:22,150 --> 00:09:24,910
there's a few cases like that but

00:09:23,290 --> 00:09:26,650
they're very rare with Drupal cuz why do

00:09:24,910 --> 00:09:28,030
people want to use Drupal because it's a

00:09:26,650 --> 00:09:29,980
content management system and you can

00:09:28,030 --> 00:09:31,810
have people log in and add content and

00:09:29,980 --> 00:09:34,330
leave comments and fill out forms and so

00:09:31,810 --> 00:09:35,920
on and so forth that's the real work of

00:09:34,330 --> 00:09:38,410
the website and it's happening in live

00:09:35,920 --> 00:09:40,330
and if you are not able to stay real

00:09:38,410 --> 00:09:41,890
close to that and in sync with it while

00:09:40,330 --> 00:09:44,830
you're developing you're going to slowly

00:09:41,890 --> 00:09:46,270
drift apart and then eventually you'll

00:09:44,830 --> 00:09:48,280
have something like a bug you can't

00:09:46,270 --> 00:09:52,570
figure out and then I've actually done

00:09:48,280 --> 00:09:55,330
this right working on new site spent two

00:09:52,570 --> 00:09:56,800
hours to our two precious hours of my

00:09:55,330 --> 00:09:59,680
time that I was charging a lot of money

00:09:56,800 --> 00:10:01,300
for figuring out that it was just that

00:09:59,680 --> 00:10:02,830
my database was sought of data there

00:10:01,300 --> 00:10:04,120
were no snowed that had been published

00:10:02,830 --> 00:10:05,260
in the last week and that's why all the

00:10:04,120 --> 00:10:07,660
views on the front page were broken

00:10:05,260 --> 00:10:08,860
right and those are the sorts of things

00:10:07,660 --> 00:10:10,180
that happened and like they're

00:10:08,860 --> 00:10:12,340
unexplained and it takes a while to

00:10:10,180 --> 00:10:14,890
figure out and and divergence divergence

00:10:12,340 --> 00:10:16,780
in content divergent is in code gets you

00:10:14,890 --> 00:10:18,040
into tricky situations where you think

00:10:16,780 --> 00:10:20,320
you've got something solved then all of

00:10:18,040 --> 00:10:21,970
a sudden it breaks or it doesn't work or

00:10:20,320 --> 00:10:24,610
it doesn't behave as expected and so

00:10:21,970 --> 00:10:26,290
really one of the main core goals of the

00:10:24,610 --> 00:10:28,720
whole continuous integration movement is

00:10:26,290 --> 00:10:30,370
to minimize divergence you want to

00:10:28,720 --> 00:10:31,600
diverge to do your work and you want to

00:10:30,370 --> 00:10:33,220
merge back in and you want to stay close

00:10:31,600 --> 00:10:34,720
and you want to stay tight if you've got

00:10:33,220 --> 00:10:35,890
if you're doing like featured branchy

00:10:34,720 --> 00:10:37,540
based development and stuff like that

00:10:35,890 --> 00:10:38,860
that's really awesome but if your

00:10:37,540 --> 00:10:41,560
feature branch is sitting out there for

00:10:38,860 --> 00:10:43,210
more than a couple days and you haven't

00:10:41,560 --> 00:10:44,500
at least you you don't have to push

00:10:43,210 --> 00:10:46,450
everything back in but if you haven't

00:10:44,500 --> 00:10:48,070
pulled from the master branch or however

00:10:46,450 --> 00:10:49,660
you have that set up in a few days

00:10:48,070 --> 00:10:52,840
you're doing it wrong you should be

00:10:49,660 --> 00:10:54,760
pulling like every hour because why wait

00:10:52,840 --> 00:10:55,840
until the end to deal with the conflicts

00:10:54,760 --> 00:11:00,520
you should deal with things immediately

00:10:55,840 --> 00:11:02,800
and stay closely in sync divergence

00:11:00,520 --> 00:11:06,610
leads to fear leads to nervousness and

00:11:02,800 --> 00:11:07,750
then nervousness leads to like all sorts

00:11:06,610 --> 00:11:09,610
of things that people think are

00:11:07,750 --> 00:11:11,080
to prevent them like what happens to

00:11:09,610 --> 00:11:12,850
typically in my experiences so there's a

00:11:11,080 --> 00:11:14,110
bad experience somewhere something

00:11:12,850 --> 00:11:16,210
breaks or it doesn't work as expected

00:11:14,110 --> 00:11:18,400
and then there's a meeting about it and

00:11:16,210 --> 00:11:19,960
there's like people are kind of tense

00:11:18,400 --> 00:11:21,310
because it's like you feel like you're

00:11:19,960 --> 00:11:23,260
on the spot and maybe you didn't do your

00:11:21,310 --> 00:11:25,960
job right and you know there's pressure

00:11:23,260 --> 00:11:28,840
and then some remediation gets made and

00:11:25,960 --> 00:11:31,030
very often the action that is taken out

00:11:28,840 --> 00:11:33,070
of a kind of a nervous tense sometimes

00:11:31,030 --> 00:11:36,610
at in the worst case scenario finger

00:11:33,070 --> 00:11:39,070
point he kind of meeting the cures that

00:11:36,610 --> 00:11:40,660
come from those types of beatings are

00:11:39,070 --> 00:11:43,150
frequently worse than the diseases

00:11:40,660 --> 00:11:44,320
themselves right because people are not

00:11:43,150 --> 00:11:46,090
really thinking about things rationally

00:11:44,320 --> 00:11:47,290
they're no longer considering like

00:11:46,090 --> 00:11:48,460
what's the best practice here they're

00:11:47,290 --> 00:11:50,380
just trying to have an answer to the

00:11:48,460 --> 00:11:52,120
problem so that they can say that they

00:11:50,380 --> 00:11:54,160
did something and that you can just

00:11:52,120 --> 00:11:56,110
start to see projects get more and more

00:11:54,160 --> 00:11:58,780
and more off track and out of scope as

00:11:56,110 --> 00:12:02,920
these types of decisions are made I have

00:11:58,780 --> 00:12:05,560
a friend who is a wilderness survival

00:12:02,920 --> 00:12:06,940
expert and and so he's done things like

00:12:05,560 --> 00:12:09,550
you know rescue people who are drowning

00:12:06,940 --> 00:12:10,690
in lakes and things like that and and

00:12:09,550 --> 00:12:13,990
when you do your wilderness survival

00:12:10,690 --> 00:12:17,860
training they teach you that disasters

00:12:13,990 --> 00:12:19,510
are very frequently like one thing that

00:12:17,860 --> 00:12:21,670
happened right it's the disaster

00:12:19,510 --> 00:12:23,680
disastrous events where people end up

00:12:21,670 --> 00:12:25,570
getting hurt or dying aren't usually

00:12:23,680 --> 00:12:27,400
like a rock just fell out of the sky and

00:12:25,570 --> 00:12:30,339
crushed someone usually it's like a

00:12:27,400 --> 00:12:32,589
series of small mistakes that compound

00:12:30,339 --> 00:12:34,150
into a bigger mistake and when people

00:12:32,589 --> 00:12:35,680
are feeling stressed out and under

00:12:34,150 --> 00:12:37,870
pressure they're more likely to make

00:12:35,680 --> 00:12:39,970
these rush decisions and small mistakes

00:12:37,870 --> 00:12:41,230
that add up to becoming something that's

00:12:39,970 --> 00:12:42,580
really bad and then like you have

00:12:41,230 --> 00:12:44,380
another bigger meeting that's hopefully

00:12:42,580 --> 00:12:47,080
a little bit more like nice and everyone

00:12:44,380 --> 00:12:48,640
decides to get on the same page so this

00:12:47,080 --> 00:12:50,320
all adds up to you not being able to

00:12:48,640 --> 00:12:51,610
hack which sucks like that's when you

00:12:50,320 --> 00:12:52,960
know you've lost your swagger because

00:12:51,610 --> 00:12:54,310
you're no longer able to hack I don't

00:12:52,960 --> 00:12:55,960
think hack is a good word I like time

00:12:54,310 --> 00:12:57,550
like I like to try to reclaim these

00:12:55,960 --> 00:12:59,020
words like hacking and cowboy and stuff

00:12:57,550 --> 00:13:00,130
like that because I think it's important

00:12:59,020 --> 00:13:02,920
to have your swagger you just got to do

00:13:00,130 --> 00:13:05,440
it safely right so and and fear right

00:13:02,920 --> 00:13:07,390
fear becomes the mind killer and fear is

00:13:05,440 --> 00:13:08,920
poisonous fear is poisonous inside an

00:13:07,390 --> 00:13:10,960
organization it's in poisonous inside a

00:13:08,920 --> 00:13:13,210
software project it's poisonous inside

00:13:10,960 --> 00:13:16,780
your personal life and being able to

00:13:13,210 --> 00:13:19,420
reduce eliminate mitigate and clear your

00:13:16,780 --> 00:13:20,259
mind of fear as a developer is really

00:13:19,420 --> 00:13:22,269
truly the key

00:13:20,259 --> 00:13:23,489
to being able to continue to to move

00:13:22,269 --> 00:13:26,709
quickly and at a high velocity

00:13:23,489 --> 00:13:29,199
throughout the lifecycle of a project I

00:13:26,709 --> 00:13:31,509
think Cowboys are cool look at Clint

00:13:29,199 --> 00:13:32,889
Eastwood how can you deny that but they

00:13:31,509 --> 00:13:37,779
are especially cool in the used version

00:13:32,889 --> 00:13:40,449
control and continuous integration so

00:13:37,779 --> 00:13:41,979
I'm one last inspirational quote learn

00:13:40,449 --> 00:13:43,509
how to see realize that everything is

00:13:41,979 --> 00:13:45,609
connected everything else see the big

00:13:43,509 --> 00:13:48,039
picture think about that and then act

00:13:45,609 --> 00:13:50,079
with wisdom right so I'm going to talk a

00:13:48,039 --> 00:13:51,999
little about how to use get in a way

00:13:50,079 --> 00:13:55,509
that allows you to perform automated

00:13:51,999 --> 00:13:58,029
actions after you do things um who here

00:13:55,509 --> 00:13:59,379
is familiar with github show of hands

00:13:58,029 --> 00:14:01,929
okay so basically everybody because

00:13:59,379 --> 00:14:03,519
they're totally awesome and they i'm not

00:14:01,929 --> 00:14:04,689
going to show you github because you can

00:14:03,519 --> 00:14:06,039
kind of figure that on your own they got

00:14:04,689 --> 00:14:07,600
documentation but all the stuff that

00:14:06,039 --> 00:14:09,910
github does you can do on your own i

00:14:07,600 --> 00:14:11,350
think it's important to know that and it

00:14:09,910 --> 00:14:12,970
works on a hook system which is a lot

00:14:11,350 --> 00:14:14,739
like drupal's hook system there there

00:14:12,970 --> 00:14:16,959
are actions that happen in the process

00:14:14,739 --> 00:14:19,959
of a get transaction that then allow you

00:14:16,959 --> 00:14:22,029
to do other things so you can pull from

00:14:19,959 --> 00:14:23,350
a remote really easily get as this

00:14:22,029 --> 00:14:24,699
beautifully distributed version control

00:14:23,350 --> 00:14:26,709
system that allows you to seamlessly

00:14:24,699 --> 00:14:27,970
pull from multiple different upstream

00:14:26,709 --> 00:14:30,100
locations and merge things together

00:14:27,970 --> 00:14:31,869
that's like been a game-changer over the

00:14:30,100 --> 00:14:33,789
past three or four years in terms of my

00:14:31,869 --> 00:14:35,799
work and I really recommend anybody

00:14:33,789 --> 00:14:38,829
who's not using it to sort of get with

00:14:35,799 --> 00:14:40,269
it but pushing is a little bit harder

00:14:38,829 --> 00:14:41,889
like if you want to have this workflow

00:14:40,269 --> 00:14:43,449
that everybody is into now for good

00:14:41,889 --> 00:14:46,899
reason like where you get push and then

00:14:43,449 --> 00:14:48,549
you are deploying you can't just push to

00:14:46,899 --> 00:14:50,350
the remote repo if it's a working copy

00:14:48,549 --> 00:14:52,660
because get will reject that I'll show

00:14:50,350 --> 00:14:54,459
you it rejecting it in a second what you

00:14:52,660 --> 00:14:56,919
need to do is use what's called a bear

00:14:54,459 --> 00:14:58,839
repo right and a bear repository is just

00:14:56,919 --> 00:15:00,910
a different style of check out and get

00:14:58,839 --> 00:15:02,769
that's meant essentially to do this type

00:15:00,910 --> 00:15:04,959
of coordination work between other

00:15:02,769 --> 00:15:07,209
repositories so it actually is not a

00:15:04,959 --> 00:15:09,339
working tree in and of itself it's just

00:15:07,209 --> 00:15:10,899
a pure metadata repository that you can

00:15:09,339 --> 00:15:13,899
push to and pull from and then very

00:15:10,899 --> 00:15:19,239
easily trigger actions afterwards so

00:15:13,899 --> 00:15:25,600
demo of that real quick can you guys is

00:15:19,239 --> 00:15:28,319
that invisible Oh what if I what if I do

00:15:25,600 --> 00:15:28,319
something like

00:15:33,230 --> 00:15:53,120
no that's not right that's it okay hello

00:15:42,149 --> 00:15:55,890
Internet brutal okay this one's there

00:15:53,120 --> 00:15:57,380
all right so what I have here is just a

00:15:55,890 --> 00:15:59,310
server that I set up it's a normal

00:15:57,380 --> 00:16:01,290
virtual machine doesn't anything special

00:15:59,310 --> 00:16:03,810
fancy on it i just installed it and like

00:16:01,290 --> 00:16:07,140
a couple other very very basic tools and

00:16:03,810 --> 00:16:08,730
so where i am and this is in the bar get

00:16:07,140 --> 00:16:10,170
repository that's where i set up as just

00:16:08,730 --> 00:16:13,620
a very similar repository it's got one

00:16:10,170 --> 00:16:16,950
file in it that file is available on the

00:16:13,620 --> 00:16:19,260
internet right here and it's just a

00:16:16,950 --> 00:16:21,420
simple index.html file for for your

00:16:19,260 --> 00:16:27,180
demonstration purposes that file

00:16:21,420 --> 00:16:29,190
actually lives in VAR dub dub dub code I

00:16:27,180 --> 00:16:35,880
believe that's where I put it right so

00:16:29,190 --> 00:16:37,950
there's index.html and here I'm in on my

00:16:35,880 --> 00:16:39,120
unlock on my my laptop here let me

00:16:37,950 --> 00:16:43,079
actually just move this up so you guys

00:16:39,120 --> 00:16:45,450
can see it better yeah so I'm here I'm

00:16:43,079 --> 00:16:47,430
on on my local and I'm just going to

00:16:45,450 --> 00:16:49,560
show you the not working version where

00:16:47,430 --> 00:16:50,940
I've checked out a copy of the working

00:16:49,560 --> 00:16:52,290
repository because you can you can pull

00:16:50,940 --> 00:16:54,120
from anywhere you can basically clone

00:16:52,290 --> 00:16:56,040
from anywhere that you have ssh access

00:16:54,120 --> 00:16:58,050
to you can clone from get and that's

00:16:56,040 --> 00:16:59,279
that's a it's a really nice capability

00:16:58,050 --> 00:17:01,200
because it makes it very easy to share

00:16:59,279 --> 00:17:03,180
code with other people but if i want to

00:17:01,200 --> 00:17:08,309
make some changes here like if i were to

00:17:03,180 --> 00:17:23,030
say edit the index dot HTML file with

00:17:08,309 --> 00:17:23,030
and edit oops and commit that work

00:17:23,799 --> 00:17:31,780
and as I try to push it right like you

00:17:26,720 --> 00:17:31,780
would with get gets gonna think about it

00:17:32,740 --> 00:17:38,240
right and it's going to say no dice

00:17:35,440 --> 00:17:39,470
because the way that keeps track of

00:17:38,240 --> 00:17:41,270
changes if you have trying to push into

00:17:39,470 --> 00:17:42,500
a working repository it's going to mess

00:17:41,270 --> 00:17:44,570
with the hashes and it's telling you

00:17:42,500 --> 00:17:45,830
this is unsafe you can force it to do

00:17:44,570 --> 00:17:47,929
that if there's ever a reason where you

00:17:45,830 --> 00:17:49,280
actually absolutely must do this but

00:17:47,929 --> 00:17:50,870
it's not recommended and I like that

00:17:49,280 --> 00:17:52,760
good is pretty good about telling you

00:17:50,870 --> 00:17:53,990
you know there's always a force option

00:17:52,760 --> 00:17:55,280
but you know you know you shouldn't

00:17:53,990 --> 00:17:57,260
usually force it and that's pretty good

00:17:55,280 --> 00:17:58,880
so the trick is you use the bear

00:17:57,260 --> 00:18:06,710
repository and that's what I set up in

00:17:58,880 --> 00:18:27,590
that vargut area if I go here and I can

00:18:06,710 --> 00:18:31,150
make an edit right make a command and

00:18:27,590 --> 00:18:36,200
that's going to go and push through due

00:18:31,150 --> 00:18:37,820
to do okay right and and you're gonna

00:18:36,200 --> 00:18:41,600
see some output here and it says you

00:18:37,820 --> 00:18:44,270
know code deployed sir and and if we

00:18:41,600 --> 00:18:45,799
reload we're going to see I've added my

00:18:44,270 --> 00:18:47,750
change that's been deployed in that

00:18:45,799 --> 00:18:49,910
working directory and it's now on the

00:18:47,750 --> 00:18:54,020
Internet so how did I do that it's

00:18:49,910 --> 00:18:56,390
actually quite simple there is a hook

00:18:54,020 --> 00:18:57,530
file called post receive that you can

00:18:56,390 --> 00:18:58,910
use for this you can also use it to do

00:18:57,530 --> 00:19:00,049
email updates and all sorts other things

00:18:58,910 --> 00:19:01,580
I'm just showing you how you can use to

00:19:00,049 --> 00:19:02,750
deploy code you can tap into this for

00:19:01,580 --> 00:19:05,030
all sorts of purposes and there's great

00:19:02,750 --> 00:19:07,070
documentation in they get project on

00:19:05,030 --> 00:19:09,290
this and because we're all drupal

00:19:07,070 --> 00:19:11,450
developers I went ahead and used PHP as

00:19:09,290 --> 00:19:13,250
my my scripting mechanism but you can

00:19:11,450 --> 00:19:14,809
use bash you can use Python you can use

00:19:13,250 --> 00:19:16,340
Ruby you can use whatever you like hear

00:19:14,809 --> 00:19:19,160
anything that you can invoke from a

00:19:16,340 --> 00:19:21,230
shell and what this is doing is I have a

00:19:19,160 --> 00:19:22,700
I'm going to you this is this comes in

00:19:21,230 --> 00:19:24,380
later I have a little function to help

00:19:22,700 --> 00:19:26,390
read like the arguments that are being

00:19:24,380 --> 00:19:27,770
passed to get and I'm basically saying

00:19:26,390 --> 00:19:30,350
you know read the arguments that are

00:19:27,770 --> 00:19:32,809
passed in and if I'm pushing to master

00:19:30,350 --> 00:19:35,480
right set an environment variable that I

00:19:32,809 --> 00:19:37,070
need change the directory and then I'm

00:19:35,480 --> 00:19:38,750
having an echo the current working path

00:19:37,070 --> 00:19:40,790
and Who am I to be able to this wall was

00:19:38,750 --> 00:19:42,350
trying to debug it last night and it

00:19:40,790 --> 00:19:44,210
just just like a little reset hard in

00:19:42,350 --> 00:19:46,640
case someone in cases somebody ever came

00:19:44,210 --> 00:19:48,200
in and like edited directly on the the

00:19:46,640 --> 00:19:50,180
environment that I'm trying to push you

00:19:48,200 --> 00:19:51,470
with get this will squash whatever those

00:19:50,180 --> 00:19:53,030
changes are because I don't want people

00:19:51,470 --> 00:19:54,290
to do that and it's going to do a check

00:19:53,030 --> 00:19:55,610
out of master to make sure that it's on

00:19:54,290 --> 00:19:57,470
the right branch and then it's going to

00:19:55,610 --> 00:19:59,390
pull from master and then it'll say code

00:19:57,470 --> 00:20:02,060
deployed sir and and this basically

00:19:59,390 --> 00:20:03,650
gives you the ability to have this is

00:20:02,060 --> 00:20:05,390
the you know the one of the cornerstones

00:20:03,650 --> 00:20:07,460
and having a development workflow that

00:20:05,390 --> 00:20:09,440
allows you to integrate get very easily

00:20:07,460 --> 00:20:10,880
with a mechanism that deploys code

00:20:09,440 --> 00:20:13,430
automatically when things are pushed to

00:20:10,880 --> 00:20:15,560
master and that's such a time-saver to

00:20:13,430 --> 00:20:17,000
coordinate a development team you can

00:20:15,560 --> 00:20:18,740
listen to be honest like if you're going

00:20:17,000 --> 00:20:20,540
to do this in production you can get way

00:20:18,740 --> 00:20:21,770
way way more sophisticated with this I

00:20:20,540 --> 00:20:23,600
mean you can be doing things to check

00:20:21,770 --> 00:20:25,340
the syntax you can be doing things to

00:20:23,600 --> 00:20:27,440
notify people you can be coordinating

00:20:25,340 --> 00:20:29,300
other project resources if you want to

00:20:27,440 --> 00:20:30,650
but it's all just like a shell script at

00:20:29,300 --> 00:20:32,060
that point and you can write that shell

00:20:30,650 --> 00:20:33,710
script in PHP if you want to there's

00:20:32,060 --> 00:20:35,150
Noth nothing wrong with doing that you

00:20:33,710 --> 00:20:48,820
could be invoking drush here other

00:20:35,150 --> 00:20:48,820
things so that's the wrong presentation

00:20:49,690 --> 00:20:56,800
so and and get can be used in a lot of

00:20:53,030 --> 00:20:58,880
other ways I I can't stress enough how

00:20:56,800 --> 00:21:01,760
wonderful it is when you base your

00:20:58,880 --> 00:21:03,530
workflow mostly on this technology

00:21:01,760 --> 00:21:05,180
because it opens up a whole world of

00:21:03,530 --> 00:21:07,520
possibilities and it can save your butt

00:21:05,180 --> 00:21:09,440
in so many different ways like as a

00:21:07,520 --> 00:21:11,600
recommendation there's a great demo that

00:21:09,440 --> 00:21:13,490
I saw once and I challenged everybody to

00:21:11,600 --> 00:21:14,570
try this exercise sometimes if you work

00:21:13,490 --> 00:21:16,220
on a development team because it's

00:21:14,570 --> 00:21:18,830
actually kind of a fun game get an egg

00:21:16,220 --> 00:21:21,380
timer and set it for like 15 minutes and

00:21:18,830 --> 00:21:23,060
start writing some code and try to make

00:21:21,380 --> 00:21:24,440
it so you can make a commit every 15

00:21:23,060 --> 00:21:25,670
minutes because the truth is if you're

00:21:24,440 --> 00:21:27,380
working along a path unless you're like

00:21:25,670 --> 00:21:29,270
going down some kind of rabbit hole you

00:21:27,380 --> 00:21:31,250
can like sit down plan out what you're

00:21:29,270 --> 00:21:33,620
going to do and be like okay step one

00:21:31,250 --> 00:21:35,480
first 10 minutes commit okay reset the

00:21:33,620 --> 00:21:36,740
egg timer second 10 minutes tech in 12

00:21:35,480 --> 00:21:38,510
minutes second five minutes come in

00:21:36,740 --> 00:21:39,950
commit and like this is a really cool

00:21:38,510 --> 00:21:41,900
exercise and it gets you into this habit

00:21:39,950 --> 00:21:43,490
of notion of saying okay I got something

00:21:41,900 --> 00:21:44,330
it's good I want that in there and then

00:21:43,490 --> 00:21:46,610
when you've got something that's

00:21:44,330 --> 00:21:48,170
holistically working you push it out and

00:21:46,610 --> 00:21:48,980
then it gets deployed or you push it out

00:21:48,170 --> 00:21:50,299
on your colleagues

00:21:48,980 --> 00:21:52,309
and they check it out and integrate with

00:21:50,299 --> 00:21:54,470
their work that type of like frequent

00:21:52,309 --> 00:21:56,540
commits allow you to easily step back in

00:21:54,470 --> 00:21:58,790
time and it also kind of enforces a nice

00:21:56,540 --> 00:22:01,370
discipline as a developer in terms of

00:21:58,790 --> 00:22:04,160
building in solid steps that you can

00:22:01,370 --> 00:22:05,840
think about and move forward with the

00:22:04,160 --> 00:22:08,330
other thing that's great and I really

00:22:05,840 --> 00:22:10,640
like to do is to manage my drupal

00:22:08,330 --> 00:22:13,250
project and my core updates with get as

00:22:10,640 --> 00:22:15,380
well and so what this what I do what we

00:22:13,250 --> 00:22:18,530
do here is in that local working copy

00:22:15,380 --> 00:22:20,000
you start by cloning Drupal and so you

00:22:18,530 --> 00:22:21,830
get all the project history which is

00:22:20,000 --> 00:22:23,510
actually I'm kind of i've actually been

00:22:21,830 --> 00:22:24,710
trying to play around kidding this

00:22:23,510 --> 00:22:26,059
because i don't really don't need the

00:22:24,710 --> 00:22:27,980
project history going back to drupal

00:22:26,059 --> 00:22:30,080
like four but it's all in there for

00:22:27,980 --> 00:22:31,700
posterity but you get the whole project

00:22:30,080 --> 00:22:33,799
history and then you make your

00:22:31,700 --> 00:22:35,870
modifications you add your modules you

00:22:33,799 --> 00:22:37,400
can add a patch to core if you want and

00:22:35,870 --> 00:22:38,900
do whatever you need to do and then you

00:22:37,400 --> 00:22:41,150
push it out to your remote bear

00:22:38,900 --> 00:22:43,880
repository and that deploys it and then

00:22:41,150 --> 00:22:46,970
when a Drupal core update comes your

00:22:43,880 --> 00:22:50,690
update mechanism is get pull Drupal core

00:22:46,970 --> 00:22:52,760
get URL tag of the release and unless

00:22:50,690 --> 00:22:54,770
you've literally like changed the same

00:22:52,760 --> 00:22:57,770
line that web chick wants to change when

00:22:54,770 --> 00:22:59,240
we're fixing a bug it'll just merge in

00:22:57,770 --> 00:23:00,830
seamlessly and you can push it out and

00:22:59,240 --> 00:23:03,200
that allows you to not only have a

00:23:00,830 --> 00:23:05,120
pretty easy and simple update workflow

00:23:03,200 --> 00:23:06,440
it allows you to patch core where you

00:23:05,120 --> 00:23:08,450
need to if you want to get ahead of the

00:23:06,440 --> 00:23:10,669
project and so on and so forth so it's a

00:23:08,450 --> 00:23:13,190
great technique for managing your Drupal

00:23:10,669 --> 00:23:14,330
core updates so now i want to getting a

00:23:13,190 --> 00:23:16,429
little bit into this notion of

00:23:14,330 --> 00:23:18,260
continuous integration right and this is

00:23:16,429 --> 00:23:19,640
the idea of what i talked about right

00:23:18,260 --> 00:23:21,410
there was kind of like how you can push

00:23:19,640 --> 00:23:22,820
out to a development environment and

00:23:21,410 --> 00:23:24,650
have a bunch of developers work together

00:23:22,820 --> 00:23:26,929
on that continuous integration is how

00:23:24,650 --> 00:23:28,790
you deal with that when there's also a

00:23:26,929 --> 00:23:29,929
production environment and the secret is

00:23:28,790 --> 00:23:32,600
that you add a third one in the middle

00:23:29,929 --> 00:23:34,309
called like staging or testing and the

00:23:32,600 --> 00:23:36,290
proper workflow that works every time

00:23:34,309 --> 00:23:37,640
and I encourage everyone to just accept

00:23:36,290 --> 00:23:39,830
even though it's not the sexiest thing

00:23:37,640 --> 00:23:43,280
in the world is you push your code up

00:23:39,830 --> 00:23:45,049
from dev to taste test to live and you

00:23:43,280 --> 00:23:47,900
pull your database and your content

00:23:45,049 --> 00:23:49,370
files the opposite direction when

00:23:47,900 --> 00:23:52,130
everybody first starts working with

00:23:49,370 --> 00:23:53,660
Drupal they are always like but I could

00:23:52,130 --> 00:23:56,240
write a script that would just push the

00:23:53,660 --> 00:23:58,100
right tables in my sequel or I could put

00:23:56,240 --> 00:23:58,930
the check the database in and like dip

00:23:58,100 --> 00:24:02,380
it or something

00:23:58,930 --> 00:24:03,880
and it's just not a good idea if you're

00:24:02,380 --> 00:24:04,930
going to spend a lot of time working on

00:24:03,880 --> 00:24:07,330
that and it's going to be like this

00:24:04,930 --> 00:24:08,920
brittle duct-taped Rube Goldberg Kluge

00:24:07,330 --> 00:24:11,170
machine and eventually it's going to

00:24:08,920 --> 00:24:13,480
totally screw you and so if you just

00:24:11,170 --> 00:24:16,210
build your workflow around this which is

00:24:13,480 --> 00:24:17,560
dependable solid and reliable it'll work

00:24:16,210 --> 00:24:19,390
great and this is really cool for all

00:24:17,560 --> 00:24:20,920
the for doing all the more advanced

00:24:19,390 --> 00:24:22,300
configuration management stuff that's

00:24:20,920 --> 00:24:24,190
available now and is coming in the

00:24:22,300 --> 00:24:25,810
future because what you're doing when

00:24:24,190 --> 00:24:28,390
you're using this workflow is you're

00:24:25,810 --> 00:24:30,190
saying okay I'm over there in dev and

00:24:28,390 --> 00:24:31,360
like you know ideally you're also there

00:24:30,190 --> 00:24:33,280
should be like a third line where you're

00:24:31,360 --> 00:24:34,180
like you sink the live data back kind of

00:24:33,280 --> 00:24:35,650
frequently just so that you're not

00:24:34,180 --> 00:24:36,850
getting again you're not diverging too

00:24:35,650 --> 00:24:40,240
much you don't go off into the yellow

00:24:36,850 --> 00:24:41,830
wood but you're working there in dev and

00:24:40,240 --> 00:24:44,260
everything is working good and then when

00:24:41,830 --> 00:24:45,520
you when you do this action of getting

00:24:44,260 --> 00:24:46,810
ready to deploy your continuous

00:24:45,520 --> 00:24:48,790
integration action in that quality

00:24:46,810 --> 00:24:50,740
assurance space is to bring the data

00:24:48,790 --> 00:24:52,690
back and push the code up and what that

00:24:50,740 --> 00:24:55,450
does is it lets you say what would

00:24:52,690 --> 00:24:58,030
happen if I deployed right now and that

00:24:55,450 --> 00:25:00,010
can be as simple as does it work that

00:24:58,030 --> 00:25:02,620
that can also be if I run update dot PHP

00:25:00,010 --> 00:25:04,810
or features up or you know do my custom

00:25:02,620 --> 00:25:07,030
script or click the two buttons i think

00:25:04,810 --> 00:25:08,980
i need to click does my deploy actually

00:25:07,030 --> 00:25:10,810
do what I think it's going to do and if

00:25:08,980 --> 00:25:12,250
the answer is no then you just go back

00:25:10,810 --> 00:25:14,080
into dev and you do some more commits

00:25:12,250 --> 00:25:16,390
and make it work and then you resync

00:25:14,080 --> 00:25:17,560
again and because that live database is

00:25:16,390 --> 00:25:19,870
going to come back in and wipe out

00:25:17,560 --> 00:25:22,240
whatever update dot PHP did you just get

00:25:19,870 --> 00:25:24,190
to run that process over again and you

00:25:22,240 --> 00:25:27,820
can do that as many times as you need to

00:25:24,190 --> 00:25:29,830
until it's bulletproof and then you can

00:25:27,820 --> 00:25:31,570
deploy like I have the Clint Eastwood

00:25:29,830 --> 00:25:33,160
picture up before like how many of you

00:25:31,570 --> 00:25:35,380
guys have seen the the good the bad and

00:25:33,160 --> 00:25:37,440
the ugly show of hands so two bits a

00:25:35,380 --> 00:25:40,180
little older movies pretty popular so

00:25:37,440 --> 00:25:41,980
the sort of one of the crucial seems it

00:25:40,180 --> 00:25:43,540
it is like clintus wood comes out and

00:25:41,980 --> 00:25:45,520
like they'd shoot him up but it turns

00:25:43,540 --> 00:25:47,410
out he's had like an iron stove plate

00:25:45,520 --> 00:25:49,420
under his Parker Parker the whole time

00:25:47,410 --> 00:25:50,890
and then he wins and this is kind of

00:25:49,420 --> 00:25:52,420
like that moment where you're like I'm a

00:25:50,890 --> 00:25:54,130
cowboy and I'm gonna play it fast and

00:25:52,420 --> 00:25:56,590
loose except I'm totally bulletproof and

00:25:54,130 --> 00:25:57,700
nothing can kill me and that's the

00:25:56,590 --> 00:25:58,810
feeling you get from this which is a

00:25:57,700 --> 00:26:00,670
really good feeling and I encourage you

00:25:58,810 --> 00:26:03,670
all to experience it the tool that I

00:26:00,670 --> 00:26:05,800
like to use for this is Jenkins how many

00:26:03,670 --> 00:26:07,210
of you guys have used Jenkins okay so

00:26:05,800 --> 00:26:09,550
many of you but not all of you i'll just

00:26:07,210 --> 00:26:11,290
show real quick Jenkins is essentially a

00:26:09,550 --> 00:26:12,400
job running and management system that's

00:26:11,290 --> 00:26:14,170
designed for continuous

00:26:12,400 --> 00:26:15,910
you can use it for a lot of other fun

00:26:14,170 --> 00:26:18,580
things too i like using it for all sorts

00:26:15,910 --> 00:26:19,990
of cool stuff it's a java project so

00:26:18,580 --> 00:26:21,580
it's not like drupal but it's not that

00:26:19,990 --> 00:26:24,070
hard to get running and it's really well

00:26:21,580 --> 00:26:26,380
built like as java projects go Jenkins

00:26:24,070 --> 00:26:28,090
is kind of like it's in the a it's in

00:26:26,380 --> 00:26:29,200
the 99th percentile of quality in my

00:26:28,090 --> 00:26:31,150
opinion it's a great piece of software

00:26:29,200 --> 00:26:32,800
it's got a solid community about it they

00:26:31,150 --> 00:26:36,750
told Oracle to go suck it and did their

00:26:32,800 --> 00:26:42,700
own thing and it was it was cool so oh

00:26:36,750 --> 00:26:44,950
let's not get there yet so brief demo so

00:26:42,700 --> 00:26:48,850
basically Jenkins allows you to define

00:26:44,950 --> 00:26:50,650
jobs and then lets you run them and so

00:26:48,850 --> 00:26:53,320
like you can have a job called sink

00:26:50,650 --> 00:26:54,730
database and and that that job can run

00:26:53,320 --> 00:26:56,380
the my sequel commands to sink the

00:26:54,730 --> 00:26:58,900
database between the environments you

00:26:56,380 --> 00:27:00,280
can have a job called you know run unit

00:26:58,900 --> 00:27:01,570
tests well I'll talk about that a little

00:27:00,280 --> 00:27:02,770
it later but if you wanted to run if

00:27:01,570 --> 00:27:04,000
you're doing Drupal core development you

00:27:02,770 --> 00:27:05,710
wanted to run unit tests you could have

00:27:04,000 --> 00:27:07,720
a job in here that does that and what it

00:27:05,710 --> 00:27:09,670
does is it keeps track of every time

00:27:07,720 --> 00:27:12,160
something was run whether it succeeded

00:27:09,670 --> 00:27:13,990
or failed and it gives you a log of

00:27:12,160 --> 00:27:16,390
everything that happened while it was

00:27:13,990 --> 00:27:18,520
doing it which is great the other thing

00:27:16,390 --> 00:27:21,220
about it is that it has a built-in rest

00:27:18,520 --> 00:27:24,430
api so it's very easy to integrate this

00:27:21,220 --> 00:27:25,600
with your other scripted tools and you

00:27:24,430 --> 00:27:26,980
know you have to do a little bit of work

00:27:25,600 --> 00:27:28,810
to figure out exactly how you want to do

00:27:26,980 --> 00:27:30,820
that but you're not like oh I got to

00:27:28,810 --> 00:27:32,380
invent something it's like here's some

00:27:30,820 --> 00:27:34,120
software you just drop right in there

00:27:32,380 --> 00:27:36,490
and it can do it and this is a really

00:27:34,120 --> 00:27:38,500
really powerful tool that doesn't take

00:27:36,490 --> 00:27:39,670
much expertise to set up and it gives

00:27:38,500 --> 00:27:40,660
you an enormous amount of flexibility

00:27:39,670 --> 00:27:43,030
and I recommend everybody who's

00:27:40,660 --> 00:27:44,140
interested in this type of workflow just

00:27:43,030 --> 00:27:45,700
check this stuff out because it's very

00:27:44,140 --> 00:27:47,140
very good there's also services you can

00:27:45,700 --> 00:27:48,430
do there's like a Jenkins of service

00:27:47,140 --> 00:27:49,300
there's other CI services that are

00:27:48,430 --> 00:27:51,130
coming out because more and more people

00:27:49,300 --> 00:27:53,200
getting on board with this stuff but if

00:27:51,130 --> 00:28:01,510
you want to roll your own this is the

00:27:53,200 --> 00:28:04,480
best rolling paper I can imagine what

00:28:01,510 --> 00:28:06,340
about Drupal 8 right drupal 8 has some

00:28:04,480 --> 00:28:08,230
new stuff in it drupal 8 is going to

00:28:06,340 --> 00:28:09,940
have this configuration management

00:28:08,230 --> 00:28:11,770
initiative drew blades can export your

00:28:09,940 --> 00:28:13,520
configuration to code drupal 8 is

00:28:11,770 --> 00:28:16,870
shangri-la

00:28:13,520 --> 00:28:20,660
and this man has fixed everything for us

00:28:16,870 --> 00:28:22,580
how many of you got no no Greg you

00:28:20,660 --> 00:28:23,600
should he's a really great guy but um if

00:28:22,580 --> 00:28:25,160
you know anything about him you know I'm

00:28:23,600 --> 00:28:26,630
kind of like playing against his

00:28:25,160 --> 00:28:31,580
personality type because the answer is

00:28:26,630 --> 00:28:33,770
no this is much more his vibe sometimes

00:28:31,580 --> 00:28:35,420
ya know Greg's a really great guy he's a

00:28:33,770 --> 00:28:36,800
friend and he's a wonderful person if

00:28:35,420 --> 00:28:37,970
you see this man at the conference you

00:28:36,800 --> 00:28:41,900
should thank him for all the work that

00:28:37,970 --> 00:28:44,660
he's done because cmi is a major major

00:28:41,900 --> 00:28:47,630
major win for drupal like right now

00:28:44,660 --> 00:28:49,970
Drupal is using a configuration idiom

00:28:47,630 --> 00:28:52,040
that was that dates back to Drupal

00:28:49,970 --> 00:28:53,720
version one I think it's basically at

00:28:52,040 --> 00:28:55,040
the time it was revolutionary that you

00:28:53,720 --> 00:28:56,570
could even put configuration in the

00:28:55,040 --> 00:28:58,550
database and edit it through the web UI

00:28:56,570 --> 00:29:00,500
that was like 10 years ago and it was

00:28:58,550 --> 00:29:02,930
like holy wow that's um that's really

00:29:00,500 --> 00:29:04,070
useful that's amazing and then 10 years

00:29:02,930 --> 00:29:06,380
later we've discovered there a lot of

00:29:04,070 --> 00:29:08,390
drawback to that too and we're sort of

00:29:06,380 --> 00:29:10,820
catching up with the rest of the web in

00:29:08,390 --> 00:29:12,800
terms of using standard configuration

00:29:10,820 --> 00:29:14,600
file formats and writing this stuff out

00:29:12,800 --> 00:29:16,430
to disk so that we conversion control it

00:29:14,600 --> 00:29:18,980
and deploy it rather than having it in

00:29:16,430 --> 00:29:20,720
the same database as our content and and

00:29:18,980 --> 00:29:22,340
having a to be muddled together so it's

00:29:20,720 --> 00:29:23,660
a major major major way and I can't

00:29:22,340 --> 00:29:25,040
stress how important this is and it's

00:29:23,660 --> 00:29:26,360
one of the best initiatives in Drupal 8

00:29:25,040 --> 00:29:27,650
because it got in pretty early and all

00:29:26,360 --> 00:29:29,030
the other initiatives are built on it so

00:29:27,650 --> 00:29:34,700
there's no way this isn't happening

00:29:29,030 --> 00:29:36,080
which is great but and and uses gamal if

00:29:34,700 --> 00:29:37,850
you guys haven't seen this I couldn't

00:29:36,080 --> 00:29:39,770
actually come up with a screenshot to

00:29:37,850 --> 00:29:41,960
show you but the you're gonna like it

00:29:39,770 --> 00:29:43,700
because if you like version control and

00:29:41,960 --> 00:29:45,920
you like looking at diffs to see what's

00:29:43,700 --> 00:29:47,120
changed the the way that this is written

00:29:45,920 --> 00:29:52,070
how many of you guys has you have used

00:29:47,120 --> 00:29:53,930
like features yeah so like how useful is

00:29:52,070 --> 00:29:55,970
it to look at a diff of one version of a

00:29:53,930 --> 00:30:02,300
feature module in another like on a

00:29:55,970 --> 00:30:03,740
scale of one to ten to at sometimes it

00:30:02,300 --> 00:30:05,870
helps but sometimes it doesn't because

00:30:03,740 --> 00:30:07,820
these features are mostly like me god

00:30:05,870 --> 00:30:11,480
bless Earl for doing that like CTools

00:30:07,820 --> 00:30:14,630
export stuff because nobody else did and

00:30:11,480 --> 00:30:16,310
 me but but exporting these giant

00:30:14,630 --> 00:30:17,540
PHP objects like when you try to compare

00:30:16,310 --> 00:30:19,580
the two of them very often it's just

00:30:17,540 --> 00:30:21,020
like a mess well in terms of what the

00:30:19,580 --> 00:30:22,340
diff looks like it doesn't like it's

00:30:21,020 --> 00:30:24,740
hard to look at a diff and actually see

00:30:22,340 --> 00:30:26,360
what's going on the cmi initiative

00:30:24,740 --> 00:30:26,870
exports to ya milan it does so in a

00:30:26,360 --> 00:30:28,490
really eckin

00:30:26,870 --> 00:30:29,780
local way that keeps it organized so

00:30:28,490 --> 00:30:31,940
like when you actually look at a diff

00:30:29,780 --> 00:30:33,530
unless there's like a huge Delta of

00:30:31,940 --> 00:30:34,790
change and that's a problem anyway

00:30:33,530 --> 00:30:37,820
because you went too far into the yellow

00:30:34,790 --> 00:30:39,410
wood in the first place if you look at a

00:30:37,820 --> 00:30:40,640
diff and the Delta isn't too huge it's

00:30:39,410 --> 00:30:42,380
actually really easy to say okay this

00:30:40,640 --> 00:30:43,610
change to that this got added there and

00:30:42,380 --> 00:30:44,930
this name changed to that and you're

00:30:43,610 --> 00:30:46,220
like oh I can look at a diff and

00:30:44,930 --> 00:30:48,050
understand what the config changes are

00:30:46,220 --> 00:30:50,809
even if I didn't make them and that's

00:30:48,050 --> 00:30:52,580
really really really powerful but you

00:30:50,809 --> 00:30:53,900
still need a solid workflow because it's

00:30:52,580 --> 00:30:56,059
going to still be the case that you have

00:30:53,900 --> 00:30:57,320
to like get this stuff developed you

00:30:56,059 --> 00:30:59,030
have to check it into version control

00:30:57,320 --> 00:31:00,530
you have to deploy it and you have to

00:30:59,030 --> 00:31:02,780
make sure that before you deploy it and

00:31:00,530 --> 00:31:03,920
test it so the cmi initiative is

00:31:02,780 --> 00:31:06,170
basically to make this continuous

00:31:03,920 --> 00:31:08,360
integration process much much more

00:31:06,170 --> 00:31:09,830
effective and much less painful for

00:31:08,360 --> 00:31:11,420
people but it doesn't mean that you

00:31:09,830 --> 00:31:13,010
don't have to do it right it just means

00:31:11,420 --> 00:31:16,550
that it'll be cooler and better and

00:31:13,010 --> 00:31:20,600
allow you to build sites faster a word

00:31:16,550 --> 00:31:23,270
about automated testing I've been a part

00:31:20,600 --> 00:31:24,679
of a like some pretty big Drupal builds

00:31:23,270 --> 00:31:26,809
in my consulting days and I've seen

00:31:24,679 --> 00:31:30,880
organizations spend six figures writing

00:31:26,809 --> 00:31:34,220
simple tests that never found anything

00:31:30,880 --> 00:31:36,080
and it's because the the core simple

00:31:34,220 --> 00:31:38,809
test unit testing framework is really

00:31:36,080 --> 00:31:40,280
meant for core development and that's

00:31:38,809 --> 00:31:41,570
where it really provides an enormous

00:31:40,280 --> 00:31:43,220
amount of value in Drupal 8 wouldn't be

00:31:41,570 --> 00:31:45,230
possible without it and it's totally

00:31:43,220 --> 00:31:48,830
good but when you're building a custom

00:31:45,230 --> 00:31:50,570
bespoke website for a client the unit

00:31:48,830 --> 00:31:52,730
testing its you're sort of coming at it

00:31:50,570 --> 00:31:54,200
from the wrong angle right what you need

00:31:52,730 --> 00:31:57,020
is much more of a kind of a functional

00:31:54,200 --> 00:31:58,730
test and the good news is that better

00:31:57,020 --> 00:32:00,500
testing for site builders is coming

00:31:58,730 --> 00:32:02,360
right we're sort of in this middle

00:32:00,500 --> 00:32:03,410
ground now between pure tester and

00:32:02,360 --> 00:32:04,760
development or unit tester and

00:32:03,410 --> 00:32:06,620
development and we're moving towards

00:32:04,760 --> 00:32:08,390
behavior during development behavior

00:32:06,620 --> 00:32:10,400
driven development are is a sort of new

00:32:08,390 --> 00:32:12,350
set of idioms and tools that are

00:32:10,400 --> 00:32:13,850
designed around expressing like here's

00:32:12,350 --> 00:32:15,770
what should happen when this happens in

00:32:13,850 --> 00:32:17,840
a kind of a high-level way not when I

00:32:15,770 --> 00:32:19,250
load a node it has this variable because

00:32:17,840 --> 00:32:21,440
that very rarely breaks when you're just

00:32:19,250 --> 00:32:23,480
building a site and you're trying to do

00:32:21,440 --> 00:32:24,410
a custom menu call back but behavior

00:32:23,480 --> 00:32:26,330
driven development is a much better

00:32:24,410 --> 00:32:27,710
idiom for testing the functionality of a

00:32:26,330 --> 00:32:30,650
website and eventually we'll get into

00:32:27,710 --> 00:32:31,970
accepted tester and development and when

00:32:30,650 --> 00:32:35,210
that happens we'll we'll have reached

00:32:31,970 --> 00:32:37,610
angry law maybe and the tool that is

00:32:35,210 --> 00:32:39,140
kind of becoming like the PHP tool

00:32:37,610 --> 00:32:40,200
that's becoming the leader for this is

00:32:39,140 --> 00:32:42,419
called B hat

00:32:40,200 --> 00:32:44,460
there's been some work done already to

00:32:42,419 --> 00:32:46,529
integrate Drupal with B hat I recommend

00:32:44,460 --> 00:32:49,380
that everybody sort of try to get get

00:32:46,529 --> 00:32:50,669
hip to this because it's not like was

00:32:49,380 --> 00:32:52,260
the stuff i showed you before like a get

00:32:50,669 --> 00:32:53,940
deploy hokor jenkins those are like

00:32:52,260 --> 00:32:55,740
settled questions right in my opinion

00:32:53,940 --> 00:32:57,870
you should use Jenkins it's not really

00:32:55,740 --> 00:32:59,370
like don't don't spend a lot of time

00:32:57,870 --> 00:33:00,690
evaluating different systems just use

00:32:59,370 --> 00:33:03,090
Jenkins and it'll work great and you'll

00:33:00,690 --> 00:33:05,190
be set use git it'll work great you'll

00:33:03,090 --> 00:33:06,779
be said B hat is looking like the winner

00:33:05,190 --> 00:33:08,700
in this space but the right way to use

00:33:06,779 --> 00:33:10,649
it with Drupal and the proper

00:33:08,700 --> 00:33:13,080
integration paths and how best to use it

00:33:10,649 --> 00:33:14,669
as a site builder are still unsettled

00:33:13,080 --> 00:33:16,260
questions that we need everybody to kind

00:33:14,669 --> 00:33:18,269
of think about and experiment with and

00:33:16,260 --> 00:33:20,940
help the community work together on

00:33:18,269 --> 00:33:23,010
discovering the best practices for and

00:33:20,940 --> 00:33:24,149
so if you're into this kind of stuff get

00:33:23,010 --> 00:33:27,960
hip to be hat because it's going to be a

00:33:24,149 --> 00:33:30,720
big deal I think last little points here

00:33:27,960 --> 00:33:32,039
on the on the yellow would keep your

00:33:30,720 --> 00:33:34,559
development vironment fresh I mentioned

00:33:32,039 --> 00:33:35,610
this before um in order to make this

00:33:34,559 --> 00:33:37,320
really work well you should just have

00:33:35,610 --> 00:33:38,519
scripts for this like you use get for

00:33:37,320 --> 00:33:40,799
everything and you script everything

00:33:38,519 --> 00:33:43,440
make it automated make it testable make

00:33:40,799 --> 00:33:44,549
it like just a brain-dead science or you

00:33:43,440 --> 00:33:46,740
don't have to think about where things

00:33:44,549 --> 00:33:49,080
are just run a script fresh in your your

00:33:46,740 --> 00:33:51,690
dev environment and if you can save 25

00:33:49,080 --> 00:33:54,480
minutes a day by scripting something

00:33:51,690 --> 00:33:56,760
that's a person day a month and if you

00:33:54,480 --> 00:33:59,010
have a team of six or eight people then

00:33:56,760 --> 00:34:00,480
you're saving a person week a month so

00:33:59,010 --> 00:34:01,769
it's really really worth investing in

00:34:00,480 --> 00:34:03,419
some of those these automation systems

00:34:01,769 --> 00:34:05,669
because they reduce error and they

00:34:03,419 --> 00:34:07,409
essentially sit they in and they improve

00:34:05,669 --> 00:34:09,210
your time they get people out of doing

00:34:07,409 --> 00:34:10,770
robotic automated things that frankly

00:34:09,210 --> 00:34:11,909
people are not good at because we're

00:34:10,770 --> 00:34:14,490
creative thinkers and we'd like to

00:34:11,909 --> 00:34:16,889
analyze patterns and solve problems but

00:34:14,490 --> 00:34:18,329
computers there they rule it like doing

00:34:16,889 --> 00:34:21,240
the same thing over and over again and

00:34:18,329 --> 00:34:24,599
we should use them for that I want to so

00:34:21,240 --> 00:34:26,190
the two pieces in here trix data has

00:34:24,599 --> 00:34:28,139
mass so if you have a lot of content in

00:34:26,190 --> 00:34:29,639
your site this can be a challenge and

00:34:28,139 --> 00:34:31,919
you should kind of think creatively

00:34:29,639 --> 00:34:33,690
about how to approach the challenge one

00:34:31,919 --> 00:34:35,280
simple trick that I recommend everybody

00:34:33,690 --> 00:34:36,859
think about if you're writing scripts

00:34:35,280 --> 00:34:39,720
for doing your data synchronization is

00:34:36,859 --> 00:34:42,569
break up you're my sequel sink into two

00:34:39,720 --> 00:34:44,669
steps one that dumps the schema of the

00:34:42,569 --> 00:34:46,589
whole database and then one that dumps

00:34:44,669 --> 00:34:48,210
the tables but skips the ones you really

00:34:46,589 --> 00:34:50,669
don't need to sync like the watchdog the

00:34:48,210 --> 00:34:52,859
access log and encash tables other stuff

00:34:50,669 --> 00:34:53,970
like that that can actually cut down the

00:34:52,859 --> 00:34:56,159
time it takes to

00:34:53,970 --> 00:34:57,960
a big database by five to ten minutes

00:34:56,159 --> 00:34:59,310
and again you say five minutes here you

00:34:57,960 --> 00:35:00,480
save ten minutes there something you've

00:34:59,310 --> 00:35:02,400
got another person week at the end of

00:35:00,480 --> 00:35:05,550
the month and your team can do more

00:35:02,400 --> 00:35:07,230
awesome things drush aliases this is

00:35:05,550 --> 00:35:08,400
another thing when you were like working

00:35:07,230 --> 00:35:10,200
in a production environment or dev

00:35:08,400 --> 00:35:12,720
environment very often like at some

00:35:10,200 --> 00:35:14,460
point you won't have shell access or you

00:35:12,720 --> 00:35:15,630
won't be able to get shell access but

00:35:14,460 --> 00:35:17,250
you should still be able to get dress

00:35:15,630 --> 00:35:19,140
access if you set things up correctly

00:35:17,250 --> 00:35:21,720
and how many of you have used rush

00:35:19,140 --> 00:35:22,740
aliases okay so basically I don't know I

00:35:21,720 --> 00:35:23,730
don't need to tell you guys how this

00:35:22,740 --> 00:35:24,690
works and I'm not going to I'm going to

00:35:23,730 --> 00:35:27,270
skip that because I think I'm running a

00:35:24,690 --> 00:35:28,650
little long here but this is super

00:35:27,270 --> 00:35:30,420
important and it's part of keeping your

00:35:28,650 --> 00:35:32,880
swagger it's part of staying on you know

00:35:30,420 --> 00:35:34,080
on point and there's no reason not to do

00:35:32,880 --> 00:35:36,390
it if you want to figure out how to do

00:35:34,080 --> 00:35:39,510
this come talk to me afterwards all

00:35:36,390 --> 00:35:43,710
right deployment right this is just a

00:35:39,510 --> 00:35:45,900
simple few notes about deploying when

00:35:43,710 --> 00:35:47,280
you deploy to production there are

00:35:45,900 --> 00:35:48,599
people who have strong opinions about

00:35:47,280 --> 00:35:51,690
whether you should be pushing things out

00:35:48,599 --> 00:35:53,400
with our sink or triggering jobs to pull

00:35:51,690 --> 00:35:54,599
data from another Chronicle source and

00:35:53,400 --> 00:35:56,130
you know there's kind of like some

00:35:54,599 --> 00:35:57,330
religious discussions about what the

00:35:56,130 --> 00:35:58,800
right tool is this did you use

00:35:57,330 --> 00:36:00,330
Capistrano should you can you use

00:35:58,800 --> 00:36:05,400
Jenkins should you roll your own scripts

00:36:00,330 --> 00:36:07,650
etc etc push.pull script method a Python

00:36:05,400 --> 00:36:09,869
Ruby whatever it is as long as it's

00:36:07,650 --> 00:36:11,970
automated and as long as it works the

00:36:09,869 --> 00:36:13,589
same way every time and as long as it

00:36:11,970 --> 00:36:14,670
gets all your code out to wherever it

00:36:13,589 --> 00:36:16,170
needs to be like if you have multiple

00:36:14,670 --> 00:36:18,690
production environments you got to make

00:36:16,170 --> 00:36:21,990
sure that the code arrives within 30

00:36:18,690 --> 00:36:23,670
seconds or so you're doing okay and and

00:36:21,990 --> 00:36:25,470
you'll probably be all right and the

00:36:23,670 --> 00:36:27,030
thing is not to get hung up on like a

00:36:25,470 --> 00:36:29,220
million little details the thing is to

00:36:27,030 --> 00:36:30,630
make sure you hit this minimum bar for

00:36:29,220 --> 00:36:32,280
deployment because if you're ever if

00:36:30,630 --> 00:36:34,560
you're still doing deployment by hand

00:36:32,280 --> 00:36:36,180
that's the bigger problem because

00:36:34,560 --> 00:36:37,410
eventually by hand is going to fail and

00:36:36,180 --> 00:36:40,050
then you're back in like the fear zone

00:36:37,410 --> 00:36:41,310
and everything falls apart ideally you

00:36:40,050 --> 00:36:43,050
integrate this with version control i'll

00:36:41,310 --> 00:36:45,060
show you a little quick example and then

00:36:43,050 --> 00:36:46,200
you script test and automate so if i

00:36:45,060 --> 00:36:48,960
were going to integrate something with

00:36:46,200 --> 00:36:52,170
version control i might take this and I

00:36:48,960 --> 00:36:58,140
might say get tagged this is the commit

00:36:52,170 --> 00:37:00,120
that I just made deploy 99 get push

00:36:58,140 --> 00:37:02,340
origin

00:37:00,120 --> 00:37:06,290
so this is going to go ahead and push

00:37:02,340 --> 00:37:08,670
out to to my production environment and

00:37:06,290 --> 00:37:11,160
and it's you know going to do it live

00:37:08,670 --> 00:37:13,590
for us and what I have it here is just I

00:37:11,160 --> 00:37:16,340
this would be the API call that I would

00:37:13,590 --> 00:37:28,920
have made and it would have gone

00:37:16,340 --> 00:37:31,350
something like this deploying 99 and we

00:37:28,920 --> 00:37:33,240
can watch it happen it's already done it

00:37:31,350 --> 00:37:36,000
checked it out this is like my live

00:37:33,240 --> 00:37:37,710
environment and here we see it's the

00:37:36,000 --> 00:37:40,050
same thing that I deployed before and

00:37:37,710 --> 00:37:41,820
again all I'm doing with this is still

00:37:40,050 --> 00:37:44,970
using i'm still using the post receive

00:37:41,820 --> 00:37:47,130
hook for this I just scroll down here to

00:37:44,970 --> 00:37:49,290
hide it from before and I'm just looking

00:37:47,130 --> 00:37:50,910
for the keyword deploy in the tag again

00:37:49,290 --> 00:37:52,050
you can get much more sophisticated and

00:37:50,910 --> 00:37:54,150
baroque with this if you want to use a

00:37:52,050 --> 00:37:55,770
different mechanism for do deployments I

00:37:54,150 --> 00:37:58,080
like tagging for deployment personally

00:37:55,770 --> 00:38:00,690
because tags are like individual atomic

00:37:58,080 --> 00:38:02,700
units I don't like doing a branch for

00:38:00,690 --> 00:38:04,710
deployment because sometimes the branch

00:38:02,700 --> 00:38:06,330
gets an update and if for some reason it

00:38:04,710 --> 00:38:07,740
doesn't deploy for some reason it's very

00:38:06,330 --> 00:38:09,360
it's can become tricky to know what got

00:38:07,740 --> 00:38:11,490
deployed and what didn't whereas tags

00:38:09,360 --> 00:38:13,530
it's always abundantly clear what the

00:38:11,490 --> 00:38:14,670
latest deploy tag was and what's in that

00:38:13,530 --> 00:38:16,530
and if you need to go back to another

00:38:14,670 --> 00:38:18,630
tag it's pretty easy to figure out which

00:38:16,530 --> 00:38:21,300
is which and so this is just saying okay

00:38:18,630 --> 00:38:22,980
look for the deploy tag and if so run

00:38:21,300 --> 00:38:24,630
our do it live script and in this case I

00:38:22,980 --> 00:38:26,790
sort of give it example of how you might

00:38:24,630 --> 00:38:28,380
rig that through Jenkins if I'd had

00:38:26,790 --> 00:38:30,150
another hour last night I could have

00:38:28,380 --> 00:38:31,890
made that curl do that for me rather

00:38:30,150 --> 00:38:38,880
than having me copy and paste it for

00:38:31,890 --> 00:38:40,410
instance so investing in automation is

00:38:38,880 --> 00:38:42,210
essential right this is sort of the

00:38:40,410 --> 00:38:42,990
mantra of this whole thing like if

00:38:42,210 --> 00:38:44,880
you're doing these production

00:38:42,990 --> 00:38:45,750
environments the configuration of the

00:38:44,880 --> 00:38:47,460
production environments should be

00:38:45,750 --> 00:38:48,660
automated there are a lot of hard things

00:38:47,460 --> 00:38:49,890
about running big production

00:38:48,660 --> 00:38:50,880
environments that I don't want to get

00:38:49,890 --> 00:38:52,980
into too much here because that's not

00:38:50,880 --> 00:38:53,880
the substances talk but like you know

00:38:52,980 --> 00:38:55,290
how do you make sure that everything's

00:38:53,880 --> 00:38:56,280
got to say my sequel configuration

00:38:55,290 --> 00:38:57,570
settings how do you make sure your

00:38:56,280 --> 00:38:58,800
network file system is mounted correctly

00:38:57,570 --> 00:39:00,120
how do you make sure that you got to

00:38:58,800 --> 00:39:02,220
automate all of that because if you're

00:39:00,120 --> 00:39:03,960
doing it by hand like that's human

00:39:02,220 --> 00:39:05,610
failure happens way too often and it's

00:39:03,960 --> 00:39:07,050
nobody's fault it's just what people are

00:39:05,610 --> 00:39:08,430
that we're not good at doing the same

00:39:07,050 --> 00:39:10,650
thing over and over and over again and

00:39:08,430 --> 00:39:12,450
never screwing up that's just not how we

00:39:10,650 --> 00:39:14,040
work so investing in automation is

00:39:12,450 --> 00:39:15,930
essential you need to build the

00:39:14,040 --> 00:39:19,590
or get yourself right you should strive

00:39:15,930 --> 00:39:21,810
to have this level of unstoppable galaxy

00:39:19,590 --> 00:39:23,070
conquering automation at in your in your

00:39:21,810 --> 00:39:26,940
in your infrastructure and your

00:39:23,070 --> 00:39:28,200
workflows and that the end point of this

00:39:26,940 --> 00:39:29,910
is that sites that are backed by

00:39:28,200 --> 00:39:31,290
automated systems that give you the

00:39:29,910 --> 00:39:33,210
ability to do all this stuff without

00:39:31,290 --> 00:39:35,100
having to do a bunch of manual work or

00:39:33,210 --> 00:39:36,900
remember things are going to be better

00:39:35,100 --> 00:39:37,800
they're going to be better websites

00:39:36,900 --> 00:39:39,450
because they're going to be able to

00:39:37,800 --> 00:39:40,650
continue to evolve after they're

00:39:39,450 --> 00:39:43,620
launched they're going to be able to

00:39:40,650 --> 00:39:44,940
respond to what users demand and they're

00:39:43,620 --> 00:39:46,590
just going to kind of lead the pack

00:39:44,940 --> 00:39:48,180
they're going to win right if two sites

00:39:46,590 --> 00:39:50,010
get launched the same around the same

00:39:48,180 --> 00:39:51,690
time and one of them launches and stays

00:39:50,010 --> 00:39:53,220
the same for two years and the other one

00:39:51,690 --> 00:39:55,230
launches and continues to iterate and

00:39:53,220 --> 00:39:57,000
evolve and respond and improve the

00:39:55,230 --> 00:39:58,740
second site is going to be the better

00:39:57,000 --> 00:40:00,270
website at the end of the day and we all

00:39:58,740 --> 00:40:01,470
want to build the best website we can we

00:40:00,270 --> 00:40:02,970
all want to help our customers we all

00:40:01,470 --> 00:40:05,670
want to help our organizations we all

00:40:02,970 --> 00:40:07,950
want to be proud of our work and having

00:40:05,670 --> 00:40:10,680
these tools in place lets us keep our

00:40:07,950 --> 00:40:12,150
developer swagger and continue to do

00:40:10,680 --> 00:40:14,310
that and you know you'll have this

00:40:12,150 --> 00:40:16,020
breakaway effect where you know some

00:40:14,310 --> 00:40:17,580
people are like getting up at the front

00:40:16,020 --> 00:40:19,080
of the pack and they're they're out and

00:40:17,580 --> 00:40:20,730
they're leading and there you know if

00:40:19,080 --> 00:40:21,930
you've or watch cycling races it usually

00:40:20,730 --> 00:40:25,700
happens and there's this huge separation

00:40:21,930 --> 00:40:27,780
that occurs and the good news is that

00:40:25,700 --> 00:40:30,180
you don't have to do this all on your

00:40:27,780 --> 00:40:32,160
own there's a huge amount of open source

00:40:30,180 --> 00:40:33,540
they don't work in this space I've you

00:40:32,160 --> 00:40:35,790
know showed you a few tools there are

00:40:33,540 --> 00:40:37,470
many more there are whole conferences

00:40:35,790 --> 00:40:39,090
devoted to this this discipline that are

00:40:37,470 --> 00:40:40,650
full of interesting and citing people

00:40:39,090 --> 00:40:41,790
there are also services out there that

00:40:40,650 --> 00:40:44,280
can help you do this there's their

00:40:41,790 --> 00:40:46,050
services for CI there's services for

00:40:44,280 --> 00:40:47,850
like drupal specific hosting that does

00:40:46,050 --> 00:40:50,010
this workflow for you there are services

00:40:47,850 --> 00:40:51,360
that help you just run jenkins there is

00:40:50,010 --> 00:40:52,800
github which can help you get started

00:40:51,360 --> 00:40:53,760
with get and give you the tools to do a

00:40:52,800 --> 00:40:55,830
lot of this stuff without having to

00:40:53,760 --> 00:40:56,910
write so many shell scripts and you

00:40:55,830 --> 00:40:58,200
don't have to do it all on your own

00:40:56,910 --> 00:40:59,550
right you don't have to like own

00:40:58,200 --> 00:41:00,870
everything yourself but you should

00:40:59,550 --> 00:41:03,180
really be thinking about how you're

00:41:00,870 --> 00:41:05,280
going to embrace this new paradigm of

00:41:03,180 --> 00:41:07,080
building kick ex websites and keeping it

00:41:05,280 --> 00:41:10,410
rocking even after the launch goes out

00:41:07,080 --> 00:41:13,250
and that is the end of my talk and I'm

00:41:10,410 --> 00:41:13,250
happy to take your questions

00:41:20,089 --> 00:41:24,210
there's a microphone back there so if

00:41:22,650 --> 00:41:26,099
you guys do have questions go ahead and

00:41:24,210 --> 00:41:27,540
line up you can ask me anything you ask

00:41:26,099 --> 00:41:30,030
me what my favorite module is asked me

00:41:27,540 --> 00:41:32,520
like what I how how late I say that last

00:41:30,030 --> 00:41:34,980
night whatever you want to do I have a

00:41:32,520 --> 00:41:38,130
question for you sure obviously

00:41:34,980 --> 00:41:39,809
designers and coders and project

00:41:38,130 --> 00:41:42,660
managers and everything have different

00:41:39,809 --> 00:41:44,790
skill sets yeah often I've struggled to

00:41:42,660 --> 00:41:47,910
identify ways to get some consistency

00:41:44,790 --> 00:41:49,890
around designers using git or Jenkins

00:41:47,910 --> 00:41:51,839
thank you do you have any

00:41:49,890 --> 00:41:53,130
recommendations for how to to

00:41:51,839 --> 00:41:55,859
standardize on that and how to get

00:41:53,130 --> 00:41:58,859
people up to speed and do with divert

00:41:55,859 --> 00:42:00,210
diverse skill sets that that's a really

00:41:58,859 --> 00:42:01,859
good question and that the thing is that

00:42:00,210 --> 00:42:03,329
again because this is an emerging

00:42:01,859 --> 00:42:06,720
discipline you know a lot of this is

00:42:03,329 --> 00:42:09,150
still not super easy and some of it you

00:42:06,720 --> 00:42:12,020
know requires skills that are outside

00:42:09,150 --> 00:42:14,609
maybe what someone's wheelhouse is I

00:42:12,020 --> 00:42:17,579
think that there are better and better

00:42:14,609 --> 00:42:19,890
desktop tools for using get there there

00:42:17,579 --> 00:42:21,210
the open-source ones really aren't as

00:42:19,890 --> 00:42:22,710
good as the ones that cost forty or

00:42:21,210 --> 00:42:24,299
fifty dollars a pop but they're

00:42:22,710 --> 00:42:26,250
potentially worth it and most of them

00:42:24,299 --> 00:42:28,109
have demos and trials so I'd like if

00:42:26,250 --> 00:42:33,540
you're a Mac user I would look at get

00:42:28,109 --> 00:42:35,069
tower is a pretty good one there if you

00:42:33,540 --> 00:42:37,319
want to use my service I've got a way

00:42:35,069 --> 00:42:38,520
for you to like use FTP and still use

00:42:37,319 --> 00:42:40,170
get at the same time and they'll demo

00:42:38,520 --> 00:42:43,079
that for you in the trade floor but

00:42:40,170 --> 00:42:44,609
basically there are you know you can you

00:42:43,079 --> 00:42:46,440
can find ways to integrate these things

00:42:44,609 --> 00:42:48,359
that let people still use a lot of the

00:42:46,440 --> 00:42:51,119
tools that they're familiar with four

00:42:48,359 --> 00:42:53,130
designers let them use a sum one of

00:42:51,119 --> 00:42:55,079
their IDEs like dreamweaver or whatever

00:42:53,130 --> 00:42:57,510
that's based on an FTP protocol type

00:42:55,079 --> 00:42:58,740
workflow or at least give them a git GUI

00:42:57,510 --> 00:43:00,359
so that when they're working in their

00:42:58,740 --> 00:43:02,010
local development environment they can

00:43:00,359 --> 00:43:03,780
make easily see what's changed committed

00:43:02,010 --> 00:43:06,569
and push it and then it's just a matter

00:43:03,780 --> 00:43:08,069
beyond that point of having having the

00:43:06,569 --> 00:43:09,299
steps down and being very clear and

00:43:08,069 --> 00:43:10,829
automation will help you do this because

00:43:09,299 --> 00:43:12,480
when you've automated you're doing it

00:43:10,829 --> 00:43:14,460
the same way every time and and

00:43:12,480 --> 00:43:15,660
hopefully if you are mindful of the

00:43:14,460 --> 00:43:18,410
developer experience while you're

00:43:15,660 --> 00:43:20,819
automating you can get things to be as

00:43:18,410 --> 00:43:22,799
straightforward as possible so that like

00:43:20,819 --> 00:43:24,660
if it's if it's the same three steps

00:43:22,799 --> 00:43:26,460
each time and you can like write it on a

00:43:24,660 --> 00:43:27,720
laminate an index card and put it on

00:43:26,460 --> 00:43:30,420
someone's desk than that that's really

00:43:27,720 --> 00:43:31,890
good so I think you know those are

00:43:30,420 --> 00:43:34,019
general answers unfortunately

00:43:31,890 --> 00:43:35,369
aren't like there aren't that's not a

00:43:34,019 --> 00:43:36,809
settled question because this is an

00:43:35,369 --> 00:43:38,849
evolving space but basically what you

00:43:36,809 --> 00:43:40,529
want to do is look at try to try to find

00:43:38,849 --> 00:43:42,150
ways to let people use the tools they

00:43:40,529 --> 00:43:44,760
already know and love and integrate with

00:43:42,150 --> 00:43:46,289
this stuff for instance also github lets

00:43:44,760 --> 00:43:47,789
you I don't have you guys if you've seen

00:43:46,289 --> 00:43:49,470
this on github you can go in and

00:43:47,789 --> 00:43:51,000
actually use their web interface to edit

00:43:49,470 --> 00:43:52,230
a file and turn that into a commit if

00:43:51,000 --> 00:43:53,819
you want that's kind of cool and there's

00:43:52,230 --> 00:43:55,200
more stuff that's gonna come out like

00:43:53,819 --> 00:43:57,089
that that will integrate better with

00:43:55,200 --> 00:43:58,829
these tools and so I kind of keep up

00:43:57,089 --> 00:44:04,200
with that and you know see what see what

00:43:58,829 --> 00:44:05,309
you can see um yes hi Josh hey Devon are

00:44:04,200 --> 00:44:09,299
you slow is going to be available alone

00:44:05,309 --> 00:44:13,920
ah yes i will post them right after this

00:44:09,299 --> 00:44:16,920
cool what do you think of using dress

00:44:13,920 --> 00:44:18,359
make to get an update Drupal core and

00:44:16,920 --> 00:44:22,230
contra modules as opposed to check in

00:44:18,359 --> 00:44:25,049
the minute so I am really interested in

00:44:22,230 --> 00:44:27,119
how we can better integrate drush make

00:44:25,049 --> 00:44:31,170
with a get centric workflow because I

00:44:27,119 --> 00:44:32,430
think that you know there this is this

00:44:31,170 --> 00:44:34,230
is another place where people have like

00:44:32,430 --> 00:44:35,910
interesting debates right there there

00:44:34,230 --> 00:44:38,519
are a lot of services now that really

00:44:35,910 --> 00:44:40,529
are based on kind of building tarballs

00:44:38,519 --> 00:44:41,970
to deploy or other things like that it's

00:44:40,529 --> 00:44:44,069
and it's sort of like a it's a more of

00:44:41,970 --> 00:44:45,420
an java ish deployment mechanism where

00:44:44,069 --> 00:44:48,059
you're you know you're throwing out this

00:44:45,420 --> 00:44:50,309
this this zipped archive and throw it on

00:44:48,059 --> 00:44:52,589
the web and drush make kinda by default

00:44:50,309 --> 00:44:54,990
wants to do that there are ways to make

00:44:52,589 --> 00:44:57,809
drush make pull the core from a get

00:44:54,990 --> 00:44:59,160
upstream and there are probably ways to

00:44:57,809 --> 00:45:00,660
integrate that I've been kind of

00:44:59,160 --> 00:45:02,910
experimenting with ways to make it so

00:45:00,660 --> 00:45:05,190
that you can do you know start with ad

00:45:02,910 --> 00:45:06,720
rush make file and then you know upload

00:45:05,190 --> 00:45:08,970
a new dress make file and then see the

00:45:06,720 --> 00:45:10,859
diff in get of what was actually changed

00:45:08,970 --> 00:45:12,299
so you can approve that turn that into a

00:45:10,859 --> 00:45:14,400
commit because the thing that's critical

00:45:12,299 --> 00:45:17,849
is that each step along the way as you

00:45:14,400 --> 00:45:19,349
are developing is versioned and while

00:45:17,849 --> 00:45:22,829
you conversion the dress make file

00:45:19,349 --> 00:45:24,839
unless you're a very very specific and

00:45:22,829 --> 00:45:26,789
particular drush make developer and you

00:45:24,839 --> 00:45:28,980
specify the exact version of every

00:45:26,789 --> 00:45:30,420
module you want to use it's very easy to

00:45:28,980 --> 00:45:33,269
end up with a dress make file that just

00:45:30,420 --> 00:45:35,700
referenced like views and then you know

00:45:33,269 --> 00:45:36,900
you build that one month and then you

00:45:35,700 --> 00:45:38,009
deploy it again three months later you

00:45:36,900 --> 00:45:40,440
got a different views unit version of

00:45:38,009 --> 00:45:42,200
views and it breaks so I'm kind of

00:45:40,440 --> 00:45:44,519
interested in figuring out how to like

00:45:42,200 --> 00:45:45,480
it'll implement drush make which is very

00:45:44,519 --> 00:45:47,040
good for drupal

00:45:45,480 --> 00:45:49,710
distribution development and product

00:45:47,040 --> 00:45:52,020
development without kind of letting it

00:45:49,710 --> 00:45:53,670
without allowing that kind of oh whoops

00:45:52,020 --> 00:45:54,990
I do I wasn't super specific about

00:45:53,670 --> 00:45:58,800
everything and now I've got a broken

00:45:54,990 --> 00:46:03,000
build kind of process cool yeah do you

00:45:58,800 --> 00:46:05,970
think having a get hook implementation

00:46:03,000 --> 00:46:09,119
on sand boxes that runs drush make every

00:46:05,970 --> 00:46:11,220
time you pull is a useful step to help

00:46:09,119 --> 00:46:12,450
facilitate them yeah back that could

00:46:11,220 --> 00:46:15,030
totally work like what you what you

00:46:12,450 --> 00:46:17,430
really want is like you're you're

00:46:15,030 --> 00:46:19,410
pushing up ad rush makefile it's doing

00:46:17,430 --> 00:46:21,060
the rush make and then you're able to

00:46:19,410 --> 00:46:22,980
kind of examine the diff between them

00:46:21,060 --> 00:46:24,990
and if you like the looks of the diff

00:46:22,980 --> 00:46:27,090
and the site works as expected you could

00:46:24,990 --> 00:46:28,530
turn that into a commit and then if you

00:46:27,090 --> 00:46:30,240
need to deploy that out because like

00:46:28,530 --> 00:46:32,520
literally you could run into a situation

00:46:30,240 --> 00:46:33,869
where in your development environment it

00:46:32,520 --> 00:46:35,820
looks good but if it's just running

00:46:33,869 --> 00:46:37,560
drush make everywhere like the next hour

00:46:35,820 --> 00:46:38,609
when you deployed it to prod one of the

00:46:37,560 --> 00:46:39,780
versions of the modules could have

00:46:38,609 --> 00:46:41,490
changed in a way that breaks the site

00:46:39,780 --> 00:46:43,320
that's unlikely but it's actually

00:46:41,490 --> 00:46:45,480
possible so what I'd like to be able to

00:46:43,320 --> 00:46:48,030
do is have drush make be integrated with

00:46:45,480 --> 00:46:50,010
get as a development process but still

00:46:48,030 --> 00:46:51,450
use version control and tagging as a

00:46:50,010 --> 00:46:53,100
mechanism for doing testing and

00:46:51,450 --> 00:46:54,690
deployment because that way you know

00:46:53,100 --> 00:47:00,090
that it's never going to change yeah

00:46:54,690 --> 00:47:02,910
yeah finally I i use Pantheon I think

00:47:00,090 --> 00:47:04,410
it's fantastic thank you for for being a

00:47:02,910 --> 00:47:06,180
part of making it I think you're on and

00:47:04,410 --> 00:47:07,140
for the people here that don't use it or

00:47:06,180 --> 00:47:08,820
not familiar that I think could be

00:47:07,140 --> 00:47:10,560
really useful a few did plug it a little

00:47:08,820 --> 00:47:12,300
bit and just explain which part of this

00:47:10,560 --> 00:47:13,740
whole process it fits into in which

00:47:12,300 --> 00:47:15,720
parts that offers and doesn't offer ah

00:47:13,740 --> 00:47:17,670
well if you want to stick around after

00:47:15,720 --> 00:47:20,040
the questions I'll do a short short demo

00:47:17,670 --> 00:47:21,210
but I'm not here to I'm here to talk

00:47:20,040 --> 00:47:26,220
about this stuff not just to promote

00:47:21,210 --> 00:47:28,530
pantheon um yes yeah I'm like and thanks

00:47:26,220 --> 00:47:29,910
for your talk it was really affirming of

00:47:28,530 --> 00:47:31,140
some of the things that we have as part

00:47:29,910 --> 00:47:35,490
of our development group in the

00:47:31,140 --> 00:47:38,130
processes that we have one thing that we

00:47:35,490 --> 00:47:40,109
do is with github or specifically in our

00:47:38,130 --> 00:47:41,190
case bitbucket sure that's another great

00:47:40,109 --> 00:47:45,750
service I should have mentioned them

00:47:41,190 --> 00:47:48,030
before you have post commit hooks which

00:47:45,750 --> 00:47:51,450
are very similar sort of to the hooks

00:47:48,030 --> 00:47:52,440
that you put in with the project that

00:47:51,450 --> 00:47:53,850
you did an example of when I was

00:47:52,440 --> 00:47:56,280
wondering if there were differences

00:47:53,850 --> 00:47:57,490
because I because I use these post hooks

00:47:56,280 --> 00:48:00,290
that

00:47:57,490 --> 00:48:01,610
our part of bitbucket I didn't know if

00:48:00,290 --> 00:48:03,500
there were differences with putting the

00:48:01,610 --> 00:48:05,750
file within the project like you had and

00:48:03,500 --> 00:48:08,570
doing it that way versus the other way

00:48:05,750 --> 00:48:10,340
so the the way that this works and I'm

00:48:08,570 --> 00:48:12,830
not as familiar with bitbucket as i am

00:48:10,340 --> 00:48:15,380
with github so feel free to correct me

00:48:12,830 --> 00:48:17,180
if I'm wrong but the way that the that

00:48:15,380 --> 00:48:19,820
when you have a hosted get service

00:48:17,180 --> 00:48:22,040
typically they're not let they don't

00:48:19,820 --> 00:48:24,440
want they don't want you to check in a

00:48:22,040 --> 00:48:26,570
post commit hook because that could run

00:48:24,440 --> 00:48:28,010
whatever arbitrary shell stuff on their

00:48:26,570 --> 00:48:29,660
service and from a security standpoint

00:48:28,010 --> 00:48:31,910
they're not interested in dealing with

00:48:29,660 --> 00:48:34,130
that but what they will allow you to do

00:48:31,910 --> 00:48:37,310
is say I've got something that's

00:48:34,130 --> 00:48:38,270
listening for a rest call usually it's

00:48:37,310 --> 00:48:40,820
most people are doing this with rest

00:48:38,270 --> 00:48:43,970
these days and after I push to bitbucket

00:48:40,820 --> 00:48:46,340
or to github you will ping out to

00:48:43,970 --> 00:48:48,560
whatever I tell you to with the metadata

00:48:46,340 --> 00:48:50,750
and you can actually set Jenkins up to

00:48:48,560 --> 00:48:52,190
listen for those sorts of things if you

00:48:50,750 --> 00:48:54,200
want to run your own steps after that

00:48:52,190 --> 00:48:56,510
and that's how all the services that are

00:48:54,200 --> 00:48:58,010
out there like circle CI or worker or

00:48:56,510 --> 00:49:00,530
these other ones that are there kind of

00:48:58,010 --> 00:49:02,180
trying to build CI as a as a cloud

00:49:00,530 --> 00:49:03,140
service to integrate with those things

00:49:02,180 --> 00:49:04,790
that's how they all work they're like

00:49:03,140 --> 00:49:06,710
copy and paste this URL into your

00:49:04,790 --> 00:49:08,660
project and what's happening is you're

00:49:06,710 --> 00:49:10,280
pushing the bit bucket big buckets like

00:49:08,660 --> 00:49:12,200
okay I got your code I'm gonna ping out

00:49:10,280 --> 00:49:14,120
to your service and then that service is

00:49:12,200 --> 00:49:15,470
your your Jenkins instance that service

00:49:14,120 --> 00:49:16,910
could be a service that you bought or it

00:49:15,470 --> 00:49:18,980
could be something that you built it's

00:49:16,910 --> 00:49:22,550
basically taking that and saying okay

00:49:18,980 --> 00:49:23,870
let me pull from the the bit bucket now

00:49:22,550 --> 00:49:26,090
so I have the code and then potentially

00:49:23,870 --> 00:49:27,530
do other things if necessary and and it

00:49:26,090 --> 00:49:29,780
really does get us into this place of

00:49:27,530 --> 00:49:32,420
where we're kind of building network

00:49:29,780 --> 00:49:34,250
distributed systems which is which is

00:49:32,420 --> 00:49:36,350
fun and exciting to me I don't know it's

00:49:34,250 --> 00:49:38,000
complicated but i like it so yeah it's

00:49:36,350 --> 00:49:39,200
and it sounds like that's the way you

00:49:38,000 --> 00:49:40,130
know we're kind of handling things i

00:49:39,200 --> 00:49:41,920
just wanted to make sure i wasn't

00:49:40,130 --> 00:49:44,600
missing some sort of advantage to

00:49:41,920 --> 00:49:47,420
checking in the post commit like you or

00:49:44,600 --> 00:49:49,430
having that as part of your project look

00:49:47,420 --> 00:49:50,780
yeah no no what I uh what I was

00:49:49,430 --> 00:49:52,610
demonstrating was just if you want to

00:49:50,780 --> 00:49:54,140
roll your own get server that's how you

00:49:52,610 --> 00:49:55,640
might do because you don't have to worry

00:49:54,140 --> 00:49:56,720
about the security of your own scripts

00:49:55,640 --> 00:49:57,920
you're writing it's actually more work

00:49:56,720 --> 00:50:02,680
to like build your own thing that's

00:49:57,920 --> 00:50:04,120
calling out to rest thank you sure yes

00:50:02,680 --> 00:50:07,120
I don't know if this is too specific of

00:50:04,120 --> 00:50:10,510
a question but how does the how does

00:50:07,120 --> 00:50:12,940
committing to the get bear repo workflow

00:50:10,510 --> 00:50:16,630
differ from like rebasing to just like a

00:50:12,940 --> 00:50:20,280
test site like so uh no that's this is a

00:50:16,630 --> 00:50:22,720
good question so they're not necessarily

00:50:20,280 --> 00:50:24,820
the sort of orthogonal like that the

00:50:22,720 --> 00:50:26,560
bear repository is something again if

00:50:24,820 --> 00:50:28,360
you don't want to use bitbucket or

00:50:26,560 --> 00:50:31,060
github or another service and you want

00:50:28,360 --> 00:50:33,100
to run your own get server and you want

00:50:31,060 --> 00:50:34,840
to be able to push code to that server

00:50:33,100 --> 00:50:36,760
and then if you want basically want to

00:50:34,840 --> 00:50:39,010
be able to push to your own server you

00:50:36,760 --> 00:50:41,140
need to run it as a bear repo and that's

00:50:39,010 --> 00:50:48,700
just a coordination point like I'll show

00:50:41,140 --> 00:50:51,520
you real quick in the bear repo which is

00:50:48,700 --> 00:50:54,940
turn off caps lock which is where I am

00:50:51,520 --> 00:50:57,100
right now it's not like you don't see

00:50:54,940 --> 00:50:59,680
the check out or anything else it's like

00:50:57,100 --> 00:51:01,810
the inside of the got didn't get

00:50:59,680 --> 00:51:03,070
metadata directory the bear repo is not

00:51:01,810 --> 00:51:05,770
something you could point a web browser

00:51:03,070 --> 00:51:07,420
at or run code out of its really just

00:51:05,770 --> 00:51:10,690
something that's able to receive

00:51:07,420 --> 00:51:12,580
incoming packs from get perform acts and

00:51:10,690 --> 00:51:14,500
then perform actions and then and then

00:51:12,580 --> 00:51:17,230
you can pull from it later so in the

00:51:14,500 --> 00:51:19,930
test instance like print if I if I had

00:51:17,230 --> 00:51:22,030
set up a testing example where you know

00:51:19,930 --> 00:51:24,730
you create a test dash something tag

00:51:22,030 --> 00:51:27,490
right then the bear repo could say oh I

00:51:24,730 --> 00:51:29,920
detected a test tag let's go you know

00:51:27,490 --> 00:51:31,180
rebase or reset hard the test

00:51:29,920 --> 00:51:32,590
environment and then maybe kick

00:51:31,180 --> 00:51:34,150
something off that does automated

00:51:32,590 --> 00:51:35,590
testing or just send an email to the

00:51:34,150 --> 00:51:38,470
groups and go look at it right now or

00:51:35,590 --> 00:51:39,490
whatever but that's just the bare repo

00:51:38,470 --> 00:51:41,740
the way to think of the bear repo is

00:51:39,490 --> 00:51:43,960
that it's a coordinating mechanism it's

00:51:41,740 --> 00:51:46,240
and it's and get distinguishes between

00:51:43,960 --> 00:51:48,070
this is there's bear repos and working

00:51:46,240 --> 00:51:49,990
repos working repos actually have all

00:51:48,070 --> 00:51:51,550
the files in the code in them bear repos

00:51:49,990 --> 00:51:54,010
are just pure metadata for coordination

00:51:51,550 --> 00:51:55,690
so essentially like if you have github

00:51:54,010 --> 00:52:01,900
ER bitbucket it would replace the berry

00:51:55,690 --> 00:52:04,120
pote yes exactly thank you sure I was

00:52:01,900 --> 00:52:07,590
just wondering if you ever tried fing

00:52:04,120 --> 00:52:10,840
along with Jenkins say what was it fing

00:52:07,590 --> 00:52:14,230
thick thing yeah it is pretty much amped

00:52:10,840 --> 00:52:16,150
for PHP ah no I haven't um I'm tried to

00:52:14,230 --> 00:52:16,570
aunt with Java and I felt like it was

00:52:16,150 --> 00:52:18,550
like

00:52:16,570 --> 00:52:21,040
it was not the best experience for me

00:52:18,550 --> 00:52:22,210
just because it's complicated and I felt

00:52:21,040 --> 00:52:24,850
like I was joining a fraternity or

00:52:22,210 --> 00:52:26,620
something but uh but no I mean there's

00:52:24,850 --> 00:52:27,970
Jenkins that I didn't mention this

00:52:26,620 --> 00:52:29,770
before I didn't go too deep into Jenkins

00:52:27,970 --> 00:52:31,480
Jenkins is so it has a great plug-in

00:52:29,770 --> 00:52:33,420
ecosystem to kind of like drupal has

00:52:31,480 --> 00:52:36,820
modules Jenkinson's plugins and so

00:52:33,420 --> 00:52:38,650
there's thing is that yeah so this is

00:52:36,820 --> 00:52:40,690
like a probably a bigger build

00:52:38,650 --> 00:52:42,580
management system for PHP projects and

00:52:40,690 --> 00:52:44,620
if you're my guess is that in the future

00:52:42,580 --> 00:52:46,540
symphony thing maybe those things work

00:52:44,620 --> 00:52:48,040
well together but I don't have any

00:52:46,540 --> 00:52:51,810
experiences that personally thank you

00:52:48,040 --> 00:52:54,160
sure yeah two things are there any good

00:52:51,810 --> 00:52:56,710
documentation or tutorials on setting up

00:52:54,160 --> 00:52:58,750
Jenkins like locally to test with and

00:52:56,710 --> 00:53:03,940
then deploying maybe Jenkins to a server

00:52:58,750 --> 00:53:05,890
sure so um setting it up locally you

00:53:03,940 --> 00:53:09,070
will need I I would not try to do it

00:53:05,890 --> 00:53:10,930
unless you have a linux box or a linux

00:53:09,070 --> 00:53:12,280
virtual machine at least and then if

00:53:10,930 --> 00:53:13,420
you're doing that it shouldn't be really

00:53:12,280 --> 00:53:15,550
different than setting up on a serve

00:53:13,420 --> 00:53:17,320
right there I think you probably can get

00:53:15,550 --> 00:53:19,030
it work together there might be a brew

00:53:17,320 --> 00:53:22,690
recipe for it but it's very much like a

00:53:19,030 --> 00:53:24,280
linux a project and i would not i would

00:53:22,690 --> 00:53:26,230
say you're better off just getting the

00:53:24,280 --> 00:53:28,420
right operating system to run it then

00:53:26,230 --> 00:53:30,720
trying to deal with the eccentricity of

00:53:28,420 --> 00:53:33,370
running out under mac OS or on windows

00:53:30,720 --> 00:53:36,220
but there is really good j a really good

00:53:33,370 --> 00:53:37,720
documentation on the Jenkins CI org

00:53:36,220 --> 00:53:39,460
website they have a wiki that has

00:53:37,720 --> 00:53:41,310
recipes for doing pretty much anything

00:53:39,460 --> 00:53:43,420
you would want to do to get it rolling

00:53:41,310 --> 00:53:44,590
including you know securing it for

00:53:43,420 --> 00:53:47,110
production use and other things like

00:53:44,590 --> 00:53:48,490
that they maintain packages for the for

00:53:47,110 --> 00:53:51,580
a boon to and red hat and everything

00:53:48,490 --> 00:53:54,460
else you basically just install java

00:53:51,580 --> 00:53:56,890
installed jenkins you know open up the

00:53:54,460 --> 00:53:58,480
port that you want to work on and go at

00:53:56,890 --> 00:54:00,100
that point and then you know you you you

00:53:58,480 --> 00:54:01,930
like with anything you get more and more

00:54:00,100 --> 00:54:04,330
and more sophisticated over time but the

00:54:01,930 --> 00:54:07,150
02 jenkins should take about 10 to 20

00:54:04,330 --> 00:54:09,640
minutes thanks sure and the second thing

00:54:07,150 --> 00:54:11,350
is for those of us who aren't familiar

00:54:09,640 --> 00:54:13,090
with josh aliases could you run through

00:54:11,350 --> 00:54:18,370
your fake demo real quick sure i will

00:54:13,090 --> 00:54:21,550
totally do that hi thanks a lot that was

00:54:18,370 --> 00:54:23,290
an awesome talk thank you mom i have to

00:54:21,550 --> 00:54:25,150
be ninety percent billable and our

00:54:23,290 --> 00:54:29,110
company doesn't have a tools budget

00:54:25,150 --> 00:54:29,990
right what metrics do i start tracking

00:54:29,110 --> 00:54:33,610
in my ten

00:54:29,990 --> 00:54:41,300
the time to demonstrate empirically that

00:54:33,610 --> 00:54:42,710
this is something that must happen well

00:54:41,300 --> 00:54:45,140
no but they're there they're not the

00:54:42,710 --> 00:54:47,090
image of your time yeah right that's

00:54:45,140 --> 00:54:48,650
that that's the secret cost of open

00:54:47,090 --> 00:54:55,160
source is that you get older while you

00:54:48,650 --> 00:54:59,690
use it as I'm beginning to learn offer

00:54:55,160 --> 00:55:02,830
or that that joke killed uh so the

00:54:59,690 --> 00:55:02,830
things that I would track are

00:55:04,720 --> 00:55:08,450
quantitatively you're going to need I'm

00:55:07,640 --> 00:55:10,340
not quite sure how sophisticated

00:55:08,450 --> 00:55:12,590
tracking I'd like developer productivity

00:55:10,340 --> 00:55:15,220
in general but quantitatively you're

00:55:12,590 --> 00:55:18,860
going to want to like get a handle on

00:55:15,220 --> 00:55:20,810
start to so if you if your ten percent

00:55:18,860 --> 00:55:24,110
time includes some like management of a

00:55:20,810 --> 00:55:27,260
team is that correct or no it's that's

00:55:24,110 --> 00:55:30,140
for like answering emails oh okay yeah

00:55:27,260 --> 00:55:32,510
so I would try to find one percent of

00:55:30,140 --> 00:55:34,310
your time to just start surveying

00:55:32,510 --> 00:55:37,580
yourself and your colleagues on a weekly

00:55:34,310 --> 00:55:39,410
basis about like how many hours did you

00:55:37,580 --> 00:55:42,200
spend because you got hung up somewhere

00:55:39,410 --> 00:55:44,869
right and that should allow you to

00:55:42,200 --> 00:55:46,369
demonstrate to your management at some

00:55:44,869 --> 00:55:48,020
point that you know we're spinning

00:55:46,369 --> 00:55:51,290
basically the whole the whole the

00:55:48,020 --> 00:55:53,030
argument for management is any time that

00:55:51,290 --> 00:55:54,680
you spent what did you do this week that

00:55:53,030 --> 00:55:56,180
wasn't like really working on the

00:55:54,680 --> 00:55:58,850
website like did you have to like try to

00:55:56,180 --> 00:56:01,070
unmess up my sequel did you have to like

00:55:58,850 --> 00:56:03,770
spend an hour getting a fresh database

00:56:01,070 --> 00:56:05,570
dump did you have to like you know waste

00:56:03,770 --> 00:56:07,460
a whole day because you had to read set

00:56:05,570 --> 00:56:08,300
up the project or so forth and just

00:56:07,460 --> 00:56:10,910
start those things don't necessarily

00:56:08,300 --> 00:56:12,859
happen every day but start keeping track

00:56:10,910 --> 00:56:14,960
of them and just like get on like a

00:56:12,859 --> 00:56:16,580
notepad how many hours it was and my

00:56:14,960 --> 00:56:18,500
guess is that over the course of a month

00:56:16,580 --> 00:56:20,690
you could then go to your boss and say

00:56:18,500 --> 00:56:22,520
look and if you're you work for a

00:56:20,690 --> 00:56:26,150
professional services consultancy right

00:56:22,520 --> 00:56:27,320
see I used to run chapter three and we

00:56:26,150 --> 00:56:29,540
would account for this and it's like

00:56:27,320 --> 00:56:30,859
it's the time where you know everybody

00:56:29,540 --> 00:56:32,119
wants their workers to be ninety percent

00:56:30,859 --> 00:56:33,740
billable but that's really hard to hold

00:56:32,119 --> 00:56:35,540
up to right and you always end up

00:56:33,740 --> 00:56:36,380
discounting some hours because you're

00:56:35,540 --> 00:56:38,900
like wow

00:56:36,380 --> 00:56:40,460
you know we were working on your site we

00:56:38,900 --> 00:56:42,619
weren't really working on your site if

00:56:40,460 --> 00:56:44,329
you know what I mean and if you just

00:56:42,619 --> 00:56:46,309
start to add up those hours on your end

00:56:44,329 --> 00:56:48,410
show them to your boss and you say look

00:56:46,309 --> 00:56:51,440
this is something this is something we

00:56:48,410 --> 00:56:54,230
can improve and developer efficiency and

00:56:51,440 --> 00:56:56,509
the time it takes to get your work done

00:56:54,230 --> 00:57:00,500
goes directly to the bottom line of that

00:56:56,509 --> 00:57:03,710
organization that's also a reason to

00:57:00,500 --> 00:57:08,000
look at getting it as a service not not

00:57:03,710 --> 00:57:09,650
to toot my own horn but I the problem

00:57:08,000 --> 00:57:10,579
the downside of a lot of this is that if

00:57:09,650 --> 00:57:12,500
you don't have a large enough

00:57:10,579 --> 00:57:15,680
organization to actually devote the time

00:57:12,500 --> 00:57:17,960
to maintaining this you should think

00:57:15,680 --> 00:57:20,690
through the build versus by decision

00:57:17,960 --> 00:57:23,660
because it may be that the by decision

00:57:20,690 --> 00:57:24,950
if the cost is good is a better one for

00:57:23,660 --> 00:57:27,079
your organization than the build

00:57:24,950 --> 00:57:28,940
decision but I think it's important to

00:57:27,079 --> 00:57:30,109
really know what it takes to build and

00:57:28,940 --> 00:57:32,480
really consider it for yourself

00:57:30,109 --> 00:57:34,069
absolutely thank you very much sure all

00:57:32,480 --> 00:57:35,930
right i'll show you guys drush yeah this

00:57:34,069 --> 00:57:40,690
is real quick and then i'll show you a

00:57:35,930 --> 00:57:45,920
little Pantheon if you want to see so

00:57:40,690 --> 00:57:50,180
drush got dress on my laptop drush has

00:57:45,920 --> 00:57:52,130
aliases and what aliases are our ways of

00:57:50,180 --> 00:57:54,799
pointing drush at a remote server or

00:57:52,130 --> 00:57:57,829
remote installation of a site so just

00:57:54,799 --> 00:57:59,269
like you run drush like inside the main

00:57:57,829 --> 00:58:01,759
code directory of a site that you want

00:57:59,269 --> 00:58:04,220
to do some dress work on you can set

00:58:01,759 --> 00:58:08,329
drush up to essentially be aware of a

00:58:04,220 --> 00:58:10,880
remote alias and run things there so for

00:58:08,329 --> 00:58:13,970
instance I have the aliases in on my

00:58:10,880 --> 00:58:18,759
laptop for the Pantheon public WWE

00:58:13,970 --> 00:58:23,299
website so i can do like brush at this

00:58:18,759 --> 00:58:25,460
status and it's going to go you know

00:58:23,299 --> 00:58:26,359
basically you have to have ssh to make

00:58:25,460 --> 00:58:28,609
this work you have to have some kind of

00:58:26,359 --> 00:58:30,859
ssh channel but then it can go and find

00:58:28,609 --> 00:58:32,779
on pantheon or wherever you're hosting

00:58:30,859 --> 00:58:35,269
this what's going on with rush okay so

00:58:32,779 --> 00:58:37,339
it's up to date Drupal core you know

00:58:35,269 --> 00:58:39,259
there's my sequel etc and you can see

00:58:37,339 --> 00:58:42,680
the the admin theme and so forth and if

00:58:39,259 --> 00:58:44,480
you wanted to do like rush you know WS

00:58:42,680 --> 00:58:45,980
like shows you the latest watchdog

00:58:44,480 --> 00:58:48,410
entries this can be very useful for

00:58:45,980 --> 00:58:49,300
doing certain sorts of things right and

00:58:48,410 --> 00:58:50,680
you can

00:58:49,300 --> 00:58:52,000
you can clear the cache is even do

00:58:50,680 --> 00:58:55,600
anything else I really encourage like

00:58:52,000 --> 00:58:57,370
the use of dress as you build especially

00:58:55,600 --> 00:58:58,570
if you build complex projects where

00:58:57,370 --> 00:59:00,190
there's ever anything you want to do

00:58:58,570 --> 00:59:01,420
like a data migration or an importer

00:59:00,190 --> 00:59:03,190
export or something has to sink with a

00:59:01,420 --> 00:59:04,870
remote service really think about

00:59:03,190 --> 00:59:06,820
building that stuff through drush and

00:59:04,870 --> 00:59:08,110
not through like a something that runs

00:59:06,820 --> 00:59:09,910
in a web browser because anything that

00:59:08,110 --> 00:59:11,590
could take a long time you're much

00:59:09,910 --> 00:59:13,630
better off building it on drush then

00:59:11,590 --> 00:59:16,020
trying to connect it to a user clicking

00:59:13,630 --> 00:59:18,400
something it's just way more bulletproof

00:59:16,020 --> 00:59:21,850
just and I'll show you real quick the

00:59:18,400 --> 00:59:24,790
anatomy of one of these files so in

00:59:21,850 --> 00:59:26,800
order to use this you just have a dot

00:59:24,790 --> 00:59:28,390
drush directory and then you have

00:59:26,800 --> 00:59:30,340
something in there this was from

00:59:28,390 --> 00:59:33,250
Pantheon but it's really anything dot

00:59:30,340 --> 00:59:36,490
aliases drew char c dot PHP in your dot

00:59:33,250 --> 00:59:39,610
drush directory in your home will be

00:59:36,490 --> 00:59:41,650
ready to pick up and all it is is you

00:59:39,610 --> 00:59:43,270
know it's it's a PHP file and it spits

00:59:41,650 --> 00:59:46,720
out an array right so you get an array

00:59:43,270 --> 00:59:49,120
of aliases there's a dock route a URL

00:59:46,720 --> 00:59:50,800
the database URL and you actually put a

00:59:49,120 --> 00:59:52,210
bunch more config options in here if

00:59:50,800 --> 00:59:53,830
there are certain things that you you

00:59:52,210 --> 00:59:55,180
want to actually have every time you

00:59:53,830 --> 00:59:56,620
used rush you know there's certain

00:59:55,180 --> 00:59:58,420
things you can specify on the command

00:59:56,620 --> 01:00:00,430
line the dress alias file you can use

00:59:58,420 --> 01:00:02,530
actually locally if you just have a lot

01:00:00,430 --> 01:00:03,880
of command-line arguments you don't want

01:00:02,530 --> 01:00:05,680
to have to retype over and over again

01:00:03,880 --> 01:00:07,450
and this is a convenience method for

01:00:05,680 --> 01:00:09,370
using directive lee that allows you to

01:00:07,450 --> 01:00:10,960
use it against remote hosts and in our

01:00:09,370 --> 01:00:13,480
case we make it possible for you to use

01:00:10,960 --> 01:00:15,640
it against dev test or live because that

01:00:13,480 --> 01:00:17,410
way you know you can it's a great way to

01:00:15,640 --> 01:00:18,880
be able to still get your work done even

01:00:17,410 --> 01:00:22,320
though you don't have shell access to

01:00:18,880 --> 01:00:22,320
the live environment for instance ahh

01:00:22,770 --> 01:00:26,850
real credentials

01:00:31,970 --> 01:00:39,960
you can't see the password because this

01:00:36,210 --> 01:00:47,869
is uh oh yeah you can also go change

01:00:39,960 --> 01:00:50,310
that anyway uh yeah yeah definitely not

01:00:47,869 --> 01:00:51,900
we'll have to migrate those hey well

01:00:50,310 --> 01:00:53,010
this gives me a great chance to you guys

01:00:51,900 --> 01:00:54,060
want to see like I don't want to do like

01:00:53,010 --> 01:00:55,349
a Pantheon product demo because

01:00:54,060 --> 01:00:56,579
seriously just go at the booth and those

01:00:55,349 --> 01:00:59,010
guys kill it at that and I don't want to

01:00:56,579 --> 01:01:00,390
steal her thunder but I can show you

01:00:59,010 --> 01:01:03,420
something that they won't show you at

01:01:00,390 --> 01:01:12,690
the booth which is what I would do if

01:01:03,420 --> 01:01:17,280
that happened right so three sites so

01:01:12,690 --> 01:01:18,210
this is the god mode pantheon and we

01:01:17,280 --> 01:01:19,349
have a lot of stuff going on behind the

01:01:18,210 --> 01:01:21,990
scenes this thing it's pretty awesome

01:01:19,349 --> 01:01:23,520
super stoked to be working on it and

01:01:21,990 --> 01:01:32,869
building it so I'm just going to go over

01:01:23,520 --> 01:01:36,619
here and I'm going to migrate these and

01:01:32,869 --> 01:01:40,500
this one too because you can see that

01:01:36,619 --> 01:01:42,030
yeah right and all this is like the

01:01:40,500 --> 01:01:43,530
things we got this is I'm not going to

01:01:42,030 --> 01:01:45,690
try to explain all this but it's like a

01:01:43,530 --> 01:01:47,790
lot of really nursing stuff and so

01:01:45,690 --> 01:01:50,280
what's happening here is the database

01:01:47,790 --> 01:01:52,140
server is getting replicated and we'll

01:01:50,280 --> 01:01:53,970
there's this mutiny flag we have and

01:01:52,140 --> 01:01:55,650
it's like kind of clever joke where the

01:01:53,970 --> 01:01:57,240
new database gets created and has the

01:01:55,650 --> 01:01:59,910
mutiny flag and then once it's ready it

01:01:57,240 --> 01:02:01,260
like goes and destroys its master and

01:01:59,910 --> 01:02:02,339
then takes over and so what that's going

01:02:01,260 --> 01:02:03,569
to do is give it put it on a different

01:02:02,339 --> 01:02:08,160
host and actually give it a different

01:02:03,569 --> 01:02:09,960
username and password so I'm secure but

01:02:08,160 --> 01:02:11,450
Pantheon is it is a tool that's designed

01:02:09,960 --> 01:02:14,310
to do all this stuff for you basically I

01:02:11,450 --> 01:02:16,500
the presentation is based on my

01:02:14,310 --> 01:02:18,270
experience as a consultant building this

01:02:16,500 --> 01:02:20,339
kind of stuff has a one-off for some big

01:02:18,270 --> 01:02:22,140
organizations and it's like a six-figure

01:02:20,339 --> 01:02:23,550
project sometimes and doing that a few

01:02:22,140 --> 01:02:24,930
times over and then we sort of pantheon

01:02:23,550 --> 01:02:26,160
to turn that into a service so we got a

01:02:24,930 --> 01:02:27,960
little bit more tight about some of the

01:02:26,160 --> 01:02:29,099
south we do and we do a lot of other

01:02:27,960 --> 01:02:30,690
interesting things that pant down

01:02:29,099 --> 01:02:33,150
because we run this at scale we have you

01:02:30,690 --> 01:02:34,710
know tens of thousands of sites and 1500

01:02:33,150 --> 01:02:37,170
to 2000 developers logging in and using

01:02:34,710 --> 01:02:39,240
this every week so you can't just have

01:02:37,170 --> 01:02:40,740
everybody load there it's not just give

01:02:39,240 --> 01:02:42,180
them SSH access we have to kind of get

01:02:40,740 --> 01:02:43,599
clever about about a bunch of things

01:02:42,180 --> 01:02:45,549
when you run on that scale

01:02:43,599 --> 01:02:48,190
but it basically gives you that dev test

01:02:45,549 --> 01:02:49,930
and live workflow you can sync stuff you

01:02:48,190 --> 01:02:54,910
can move things through there's an error

01:02:49,930 --> 01:02:56,229
log if you need it etc and if you want

01:02:54,910 --> 01:02:58,359
to see like the overall demo of how

01:02:56,229 --> 01:03:00,549
things work i really i really recommend

01:02:58,359 --> 01:03:01,900
checking it out at the boost because

01:03:00,549 --> 01:03:02,950
those guys give a really nice demo and

01:03:01,900 --> 01:03:05,229
there's other people you can talk to me

01:03:02,950 --> 01:03:08,259
afterwards if you want but i wanted to

01:03:05,229 --> 01:03:09,190
show the under the hood stuff thanks for

01:03:08,259 --> 01:03:11,349
coming if you guys have any other

01:03:09,190 --> 01:03:14,819
questions just step right up otherwise I

01:03:11,349 --> 01:03:14,819

YouTube URL: https://www.youtube.com/watch?v=P-xMAbMIrpA


