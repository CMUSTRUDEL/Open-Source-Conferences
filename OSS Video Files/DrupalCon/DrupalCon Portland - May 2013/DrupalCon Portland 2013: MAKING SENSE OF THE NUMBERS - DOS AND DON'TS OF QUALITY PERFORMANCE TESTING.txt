Title: DrupalCon Portland 2013: MAKING SENSE OF THE NUMBERS - DOS AND DON'TS OF QUALITY PERFORMANCE TESTING
Publication date: 2013-05-28
Playlist: DrupalCon Portland - May 2013
Description: 
	A quality performance test is broken up into 3 stages - (1) creating representative user scenarios; (2) scripting the actions of the simulated users; and (3) analyzing the results of the test. Unfortunately most tests are plagued by shortcuts taken at one of the 3 stages. Whether the mistake is not testing a common user path, choosing the wrong tool, or incorrectly believing bad data, a breakdown anywhere in the process leads to unnecessary fallout and likely little improvement in the site's performance. This presentation is a collection of lessons learned through a number of high concurrency load tests, both effective and failed. Through these lessons, we'll walk through each stage in depth to ensure that each and every load test is valid and beneficial the very first time.

While this session is highly technical, the lessons themselves will attempt to address the concerns of everyone in the process, including sysadmins, developers, and even project managers. Performance testing is a critical component in any site launch for the entire project team. Sysadmins will benefit from knowing how to correlate data to different layers in the hosting stack. Developers will learn how to write precise tests and analyze their results. Project managers will gain the knowledge required to ensure the tests are accurate and indicative of real site performance.
Captions: 
	00:00:02,030 --> 00:00:05,030
so

00:01:22,619 --> 00:01:28,960
and I'm Joe Keenan I'm also a senior

00:01:25,750 --> 00:01:32,950
technical consulting with back via my

00:01:28,960 --> 00:01:36,039
focus not performance ability on a

00:01:32,950 --> 00:01:37,869
day-to-day basis and sort of the reason

00:01:36,039 --> 00:01:41,289
I'm here is to talk about why that

00:01:37,869 --> 00:01:44,469
really mattered because I have to care

00:01:41,289 --> 00:01:48,009
about performance anyways I found out

00:01:44,469 --> 00:01:50,380
via in 2010 so a little bit after Eric

00:01:48,009 --> 00:01:53,829
I've been working with triple for quite

00:01:50,380 --> 00:02:00,840
a long time and my primary role on

00:01:53,829 --> 00:02:00,840
projects is usually as so in that role

00:03:21,370 --> 00:03:24,370
actually

00:04:10,710 --> 00:04:27,150
how many you guys are you say but I

00:04:25,150 --> 00:04:56,770
think that's actually the team's rising

00:04:27,150 --> 00:04:59,110
really so before we get too far in the

00:04:56,770 --> 00:05:02,140
discussion it's really important what's

00:04:59,110 --> 00:05:05,680
the level set on some terminology and

00:05:02,140 --> 00:05:09,820
talk about the various things that go

00:05:05,680 --> 00:05:12,100
into performance testing because like

00:05:09,820 --> 00:05:15,280
Eric was kind of hinting at performance

00:05:12,100 --> 00:05:17,650
testing isn't just looked at it's not

00:05:15,280 --> 00:05:21,850
just loading a page on your site and

00:05:17,650 --> 00:05:27,340
seeing how fast it is like that there

00:05:21,850 --> 00:05:30,070
there are lots of aspects so we're going

00:05:27,340 --> 00:05:32,020
to talk about some terminology and some

00:05:30,070 --> 00:05:35,050
of it you make you might use their words

00:05:32,020 --> 00:05:37,810
to talk about these things but Google

00:05:35,050 --> 00:05:41,770
cleared lines in your minds about what's

00:05:37,810 --> 00:05:44,620
moving Sinclair performance is about the

00:05:41,770 --> 00:05:48,100
speed or the time it takes to do an

00:05:44,620 --> 00:05:52,479
individual request this can be both from

00:05:48,100 --> 00:05:53,919
the time a user requests a page to the

00:05:52,479 --> 00:05:55,840
amount of time that it takes for that

00:05:53,919 --> 00:05:57,550
piece of the map but there are also

00:05:55,840 --> 00:06:00,430
other things that we're going to

00:05:57,550 --> 00:06:02,530
measuring performance engage a long did

00:06:00,430 --> 00:06:04,980
it take to render long does it take for

00:06:02,530 --> 00:06:08,020
all the assets

00:06:04,980 --> 00:06:10,540
are there javascript sexting on the page

00:06:08,020 --> 00:06:16,590
that make it take a long time so you

00:06:10,540 --> 00:06:20,980
actually fully rendered less performance

00:06:16,590 --> 00:06:27,040
scalability is the ability of your site

00:06:20,980 --> 00:06:30,190
to go from one user to 100 users or 100

00:06:27,040 --> 00:06:34,440
users to a thousand users and still have

00:06:30,190 --> 00:06:38,530
a predictable performance and

00:06:34,440 --> 00:06:41,290
predictable being like not the same 100

00:06:38,530 --> 00:06:42,700
users hitting their site is probably

00:06:41,290 --> 00:06:44,830
gonna perform a little bit differently

00:06:42,700 --> 00:06:47,800
than a thousand users in yourself or

00:06:44,830 --> 00:07:21,550
10,000 users doing your site but it's

00:06:47,800 --> 00:07:23,350
acceptable and it's predictable there

00:07:21,550 --> 00:07:27,040
was a lot of discussion like drupal 7

00:07:23,350 --> 00:07:33,130
came out about how Drupal 7 was slower

00:07:27,040 --> 00:07:35,770
and the whole idea what it could skate

00:07:33,130 --> 00:07:39,790
all much further and prior versions of

00:07:35,770 --> 00:07:43,390
truth so just because an individual page

00:07:39,790 --> 00:07:45,449
requested flower doesn't mean your site

00:07:43,390 --> 00:07:48,180
is performing works

00:07:45,449 --> 00:07:51,620
my perspective give up some speed on

00:07:48,180 --> 00:07:59,879
individual page across northern middle a

00:07:51,620 --> 00:08:02,099
enormous volume of time is scalable so

00:07:59,879 --> 00:08:05,400
scaling is how it comes across in your

00:08:02,099 --> 00:08:06,900
community it's probably the area most

00:08:05,400 --> 00:08:10,680
people start with one that will be

00:08:06,900 --> 00:08:15,539
advertised scaling is saying we want to

00:08:10,680 --> 00:08:18,479
take our tutors call servers and we want

00:08:15,539 --> 00:08:21,779
to make them bigger that's scaling

00:08:18,479 --> 00:08:24,509
vertically your scale horizontally but

00:08:21,779 --> 00:08:33,510
sticking or two small servers down there

00:08:24,509 --> 00:08:36,690
in the corner and just adding more so

00:08:33,510 --> 00:08:39,089
load testing is about focusing on real

00:08:36,690 --> 00:08:42,000
world traffic problems and seeing what

00:08:39,089 --> 00:08:47,639
happens to your site for measurable

00:08:42,000 --> 00:08:49,440
amounts so in five here we've got 10

00:08:47,639 --> 00:08:52,139
users hitting our site and our servers

00:08:49,440 --> 00:08:55,800
happy when we throw under users that

00:08:52,139 --> 00:08:58,199
website servers you know straightening a

00:08:55,800 --> 00:09:01,380
little bit it's having a little bit of a

00:08:58,199 --> 00:09:05,519
hard time load testing is not about

00:09:01,380 --> 00:09:07,920
breaking load testing the same I want to

00:09:05,519 --> 00:09:09,720
throw eggs number of users of the site

00:09:07,920 --> 00:09:14,850
and we're going to measure and see what

00:09:09,720 --> 00:09:17,490
happens stress testing is about seeing

00:09:14,850 --> 00:09:19,680
what happens or how far you can push

00:09:17,490 --> 00:09:23,250
your site before it breaks other people

00:09:19,680 --> 00:09:26,040
call it's like a smoke test and stress

00:09:23,250 --> 00:09:27,720
testing is about saying like how many

00:09:26,040 --> 00:09:32,339
people can we throw out the site before

00:09:27,720 --> 00:09:37,500
it crashes and burns I like to think

00:09:32,339 --> 00:09:38,990
about like a load test being like how

00:09:37,500 --> 00:09:40,760
much does

00:09:38,990 --> 00:09:46,910
I'm going to get a scale I'm going to

00:09:40,760 --> 00:09:52,040
see how much 10 people with and we

00:09:46,910 --> 00:09:54,350
measure that can save people way but a

00:09:52,040 --> 00:09:58,420
stress test is taking a scale and

00:09:54,350 --> 00:09:58,420
putting people on it until scale based

00:10:01,480 --> 00:10:05,839
last one that we're going to talk about

00:10:04,160 --> 00:10:07,430
we're going to talk about a lot that

00:10:05,839 --> 00:10:11,779
there is a sort of low wattage

00:10:07,430 --> 00:10:16,399
contention contention is a pipe over

00:10:11,779 --> 00:10:18,770
resources and there are lots of places

00:10:16,399 --> 00:10:22,490
that you can end up adding contention in

00:10:18,770 --> 00:10:25,480
your site it's we promise to be the

00:10:22,490 --> 00:10:27,980
hardest thing to like draw a diagram of

00:10:25,480 --> 00:10:29,930
it's probably the hardest thing to talk

00:10:27,980 --> 00:10:32,470
about but it's also the most important

00:10:29,930 --> 00:10:37,399
concept to understand when you're

00:10:32,470 --> 00:10:40,339
thinking about I think one way you can

00:10:37,399 --> 00:10:44,810
think about the convention is to think

00:10:40,339 --> 00:10:47,089
about walmart on black friday so a whole

00:10:44,810 --> 00:10:50,420
bunch of people a civ people line up at

00:10:47,089 --> 00:10:53,360
the doors and then they open this tiny

00:10:50,420 --> 00:10:55,910
doorway that's about four people across

00:10:53,360 --> 00:10:58,339
into the store and everybody wants to

00:10:55,910 --> 00:11:00,860
get anyone's and it would fight over the

00:10:58,339 --> 00:11:02,510
resources both to get in and then

00:11:00,860 --> 00:11:06,399
there's a fight over the research side

00:11:02,510 --> 00:11:06,399
there are many points of contention

00:11:20,110 --> 00:11:30,980
you go from one server to servers

00:11:23,230 --> 00:11:32,450
theoretically militate do the first

00:11:30,980 --> 00:11:34,730
server just whether that's for your

00:11:32,450 --> 00:11:37,010
continued life and then a second circuit

00:11:34,730 --> 00:11:39,920
doesn't actually help the problem that's

00:11:37,010 --> 00:11:54,410
why I had soaked even identify where the

00:11:39,920 --> 00:11:56,360
containers if that is what and we've got

00:11:54,410 --> 00:11:58,040
something we've got a couple slides a

00:11:56,360 --> 00:12:01,340
little bit later at the convention is

00:11:58,040 --> 00:12:03,620
the concept you don't understand that

00:12:01,340 --> 00:12:06,530
effect explain it a little bit more but

00:12:03,620 --> 00:12:11,180
right now just try to think of it as a

00:12:06,530 --> 00:12:13,630
bite / usual hopefully up your

00:12:11,180 --> 00:12:13,630
understand

00:12:22,450 --> 00:12:28,970
so let's talk about what your tips are

00:12:25,370 --> 00:12:31,010
actually going to do so we kind of hurt

00:12:28,970 --> 00:12:32,630
right campus present a little bit to

00:12:31,010 --> 00:12:35,750
what you should do and also gotta lessen

00:12:32,630 --> 00:12:38,660
fine but there's meeting we've worked on

00:12:35,750 --> 00:12:46,160
in the past and what we like the dog bit

00:12:38,660 --> 00:12:48,529
they succeeded so the key is that you're

00:12:46,160 --> 00:12:50,810
tense not good the number to get for

00:12:48,529 --> 00:12:53,269
them apart is simply a welcome if your

00:12:50,810 --> 00:12:55,880
test a fantastic that you can use those

00:12:53,269 --> 00:12:58,850
numbers and actually decide you're going

00:12:55,880 --> 00:13:02,089
to service how much time you spend on

00:12:58,850 --> 00:13:06,560
further tests that the quality of the

00:13:02,089 --> 00:13:09,740
test is really valuable piece make sure

00:13:06,560 --> 00:13:11,410
you're setting technical roles so don't

00:13:09,740 --> 00:13:14,540
look at this as what makes it user

00:13:11,410 --> 00:13:16,339
trying to guess what writers actually

00:13:14,540 --> 00:13:26,930
track these things that required look at

00:13:16,339 --> 00:13:30,649
you add feature eggs what what's

00:13:26,930 --> 00:13:32,329
actually what are you doing actually

00:13:30,649 --> 00:13:34,430
monitor that change side that's not

00:13:32,329 --> 00:13:36,589
you're not looking at a side by side

00:13:34,430 --> 00:13:38,959
it's really easy to get 3 quarters of

00:13:36,589 --> 00:13:42,829
the way to project and really have no

00:13:38,959 --> 00:13:47,990
idea what that bottle against refund the

00:13:42,829 --> 00:13:50,810
biggest so far down the line the project

00:13:47,990 --> 00:13:57,250
unit three more human resource set up to

00:13:50,810 --> 00:13:57,250
solve problem really could process

00:14:01,900 --> 00:14:08,000
so regressions from the QA on the

00:14:05,330 --> 00:14:10,760
typical q icing so features breaking

00:14:08,000 --> 00:14:15,500
other features it's just as easy the new

00:14:10,760 --> 00:14:17,570
features so anything they can thank you

00:14:15,500 --> 00:14:20,290
out the way of what makes the good test

00:14:17,570 --> 00:14:23,090
how much you're testing how wide that

00:14:20,290 --> 00:14:28,610
opportunity is you should go right into

00:14:23,090 --> 00:14:32,840
the forms it's really not I think this

00:14:28,610 --> 00:14:37,060
is this is one right area we're bringing

00:14:32,840 --> 00:14:39,950
my sort of non-performance experts

00:14:37,060 --> 00:14:42,050
conversation is important my role on

00:14:39,950 --> 00:14:44,930
projects is typically leading

00:14:42,050 --> 00:14:47,420
architecture working with partners who

00:14:44,930 --> 00:14:53,390
are building features for our clients

00:14:47,420 --> 00:14:55,640
and we found I made mistakes on that

00:14:53,390 --> 00:14:58,040
stuff like everybody else we found that

00:14:55,640 --> 00:15:01,010
if we don't do performance testing

00:14:58,040 --> 00:15:04,190
through Albert project it can be any

00:15:01,010 --> 00:15:07,580
wait until you've built massive project

00:15:04,190 --> 00:15:11,300
it's very complex and lots of moving

00:15:07,580 --> 00:15:14,360
pieces it can be really difficult to

00:15:11,300 --> 00:15:17,800
impossible to identify where's your

00:15:14,360 --> 00:15:21,110
status but if you're constantly

00:15:17,800 --> 00:15:23,990
monitoring performance and at you add

00:15:21,110 --> 00:15:28,130
features dear site you're constantly

00:15:23,990 --> 00:15:29,900
testing them it skiing how they were you

00:15:28,130 --> 00:15:33,080
can save yourself up for a lot more

00:15:29,900 --> 00:15:35,810
success and also reduced risk of running

00:15:33,080 --> 00:15:41,110
the expense a ton of money at the end of

00:15:35,810 --> 00:15:44,830
your project ton of money or trying to

00:15:41,110 --> 00:15:44,830
figure out why your site

00:15:46,460 --> 00:15:57,350
I'm good another good thing to keep in

00:15:49,340 --> 00:15:59,420
mind this let me build a feature build a

00:15:57,350 --> 00:16:06,320
feature like let's say you're building

00:15:59,420 --> 00:16:09,410
an article content you don't want to

00:16:06,320 --> 00:16:10,970
just make a few of them and refresh the

00:16:09,410 --> 00:16:13,100
page and see how long it takes for a

00:16:10,970 --> 00:16:16,970
page to load what happens when you make

00:16:13,100 --> 00:16:22,280
that we make the number of articles that

00:16:16,970 --> 00:16:25,810
are probably going to exist so there's

00:16:22,280 --> 00:16:29,240
all kinds of things to think about when

00:16:25,810 --> 00:16:31,460
monitoring changes context and thinking

00:16:29,240 --> 00:16:43,970
about what way is that users would

00:16:31,460 --> 00:16:49,250
actually a lot of these early on in the

00:16:43,970 --> 00:16:51,320
project and maybe they're bad test I've

00:16:49,250 --> 00:16:57,290
seen a lot of projects create all kinds

00:16:51,320 --> 00:17:09,110
of crazy complexity because it one and

00:16:57,290 --> 00:17:11,540
it's really easy to these really complex

00:17:09,110 --> 00:17:15,170
ideas but it's so early in the pleasure

00:17:11,540 --> 00:17:17,420
you can exceed 60 seconds it's much

00:17:15,170 --> 00:17:24,860
easier to do that actually create this

00:17:17,420 --> 00:17:27,320
complexity and not only probably kidding

00:17:24,860 --> 00:17:31,390
me so you've actually created twice as

00:17:27,320 --> 00:17:31,390
likely just keep

00:17:48,800 --> 00:17:57,150
or the other ones always wrong or there

00:17:52,200 --> 00:17:59,430
goes always wrong yes and testing to get

00:17:57,150 --> 00:18:02,040
those numbers it's amazing how that

00:17:59,430 --> 00:18:05,280
changes the entire warm hearts to these

00:18:02,040 --> 00:18:08,310
two groups in structure cloaks and make

00:18:05,280 --> 00:18:11,760
a quick change see what it is it's good

00:18:08,310 --> 00:18:14,220
they leave it if it's badly developers

00:18:11,760 --> 00:18:17,010
the exact same way so just having these

00:18:14,220 --> 00:18:19,080
are indisputable numbers for a comma and

00:18:17,010 --> 00:18:20,790
they can hire work your language that

00:18:19,080 --> 00:18:28,950
will bring together these very different

00:18:20,790 --> 00:18:32,100
teams whole process so talking about the

00:18:28,950 --> 00:18:35,660
wanna buy expected this one of the first

00:18:32,100 --> 00:18:40,590
things i sees people running load tests

00:18:35,660 --> 00:18:42,270
we want to see if you're only ever been

00:18:40,590 --> 00:18:44,120
kind of thousands those you're going to

00:18:42,270 --> 00:18:47,910
be making all kinds of crazy changes

00:18:44,120 --> 00:18:49,680
person voice is Veronica what are you

00:18:47,910 --> 00:18:52,620
actually putting the team buddy slow

00:18:49,680 --> 00:18:54,570
text is it a certain number of users is

00:18:52,620 --> 00:18:59,220
it making sure that your servers are

00:18:54,570 --> 00:19:01,590
going over is taking a certain amount of

00:18:59,220 --> 00:19:09,840
time really think about what it means

00:19:01,590 --> 00:19:14,130
that success is really well that's great

00:19:09,840 --> 00:19:16,650
but if X number of users are badly is

00:19:14,130 --> 00:19:18,450
that a successful right if the good call

00:19:16,650 --> 00:19:21,000
the results they want but it's taking

00:19:18,450 --> 00:19:22,830
five seconds they're not gonna be happy

00:19:21,000 --> 00:19:25,100
but you haven't defined them you don't

00:19:22,830 --> 00:19:27,799
know what

00:19:25,100 --> 00:19:30,200
so it's really important with each one

00:19:27,799 --> 00:19:32,419
of these levels sequence metrics and

00:19:30,200 --> 00:19:33,830
actually find out what you can do they

00:19:32,419 --> 00:19:36,970
look at the results of the tests say

00:19:33,830 --> 00:19:39,740
that was just as fast or failure move on

00:19:36,970 --> 00:19:41,900
if you don't have that you get lost the

00:19:39,740 --> 00:19:44,419
number is your that's what the plane

00:19:41,900 --> 00:19:47,750
comes down we support the users with

00:19:44,419 --> 00:19:49,669
slow cause that really set these out at

00:19:47,750 --> 00:19:52,010
the beginning I think this is a good

00:19:49,669 --> 00:19:56,510
example where another part that made in

00:19:52,010 --> 00:19:59,600
the role content is maybe it's not maybe

00:19:56,510 --> 00:20:03,049
that's not what's important you want to

00:19:59,600 --> 00:20:06,080
be a sport 5,000 years ago time under

00:20:03,049 --> 00:20:08,179
three seconds for a user and noe users

00:20:06,080 --> 00:20:11,659
over five seconds write something like

00:20:08,179 --> 00:20:16,299
that we can put full solid centers and

00:20:11,659 --> 00:20:16,299
every time you do a load test go back to

00:20:17,740 --> 00:20:35,390
suggestions so one thing that I want to

00:20:31,490 --> 00:20:39,080
throw make sure got a call today so if

00:20:35,390 --> 00:20:41,299
you're the client better consult with

00:20:39,080 --> 00:20:43,820
the client get the crown possible

00:20:41,299 --> 00:20:45,830
customers right that's the whole point

00:20:43,820 --> 00:20:49,640
of getting numbers if you're getting

00:20:45,830 --> 00:20:52,250
numbers that's we argue our unions equal

00:20:49,640 --> 00:20:54,650
roles responsibilities the whole point

00:20:52,250 --> 00:20:58,159
is to make screw with whatever the wall

00:20:54,650 --> 00:21:01,720
is faster your comment right does it

00:20:58,159 --> 00:21:04,789
feel slower that doesn't matter faster

00:21:01,720 --> 00:21:07,539
that's not really that defeats all verbs

00:21:04,789 --> 00:21:07,539
doing the test

00:21:08,159 --> 00:21:15,850
one thing is clear the tracks be looking

00:21:10,809 --> 00:21:17,769
at my name is valued the one point where

00:21:15,850 --> 00:21:20,590
performance is very different than

00:21:17,769 --> 00:21:25,090
something like security is one small

00:21:20,590 --> 00:21:27,340
security can really escalate very one

00:21:25,090 --> 00:21:30,159
small performances you certainly have a

00:21:27,340 --> 00:21:32,379
risk but it's a little bit different

00:21:30,159 --> 00:21:35,110
right eighty percent the traffic is one

00:21:32,379 --> 00:21:38,649
user man that's a great place to die

00:21:35,110 --> 00:21:44,320
there and try and find most the most

00:21:38,649 --> 00:21:48,039
important changes making sure you ever

00:21:44,320 --> 00:21:50,289
salute full useless so when you're not

00:21:48,039 --> 00:21:52,899
sure what that whole you space is thank

00:21:50,289 --> 00:21:54,249
you think it's doing a search maybe it's

00:21:52,899 --> 00:21:56,169
starting a search and going all the way

00:21:54,249 --> 00:21:58,119
through their versions don't think about

00:21:56,169 --> 00:22:00,669
individual user actions think about what

00:21:58,119 --> 00:22:03,369
you're trying to get your building an

00:22:00,669 --> 00:22:05,649
e-commerce site you want to know the

00:22:03,369 --> 00:22:08,559
time gets the site to try to make that

00:22:05,649 --> 00:22:11,980
work they frustrate anywhere in the

00:22:08,559 --> 00:22:20,139
training you've probably make sure you

00:22:11,980 --> 00:22:25,590
understand what the entry point is also

00:22:20,139 --> 00:22:25,590
a surprise to anyone you guys have taken

00:22:28,889 --> 00:22:35,529
your also our people I don't think that

00:22:32,169 --> 00:22:36,970
you found numbers that are left if you

00:22:35,529 --> 00:22:38,769
find them if you don't think all right

00:22:36,970 --> 00:22:40,779
write a different test and see if it

00:22:38,769 --> 00:22:47,259
comes off the same way and don't write

00:22:40,779 --> 00:22:48,679
one test ? right the good test all the

00:22:47,259 --> 00:22:49,909
right people

00:22:48,679 --> 00:22:59,869
see what you can do about getting those

00:22:49,909 --> 00:23:04,179
numbers where they need thank you

00:22:59,869 --> 00:23:04,179
actually utilize them to all still I

00:23:05,799 --> 00:23:14,320
think one one thing you try to do is

00:23:10,730 --> 00:23:16,549
it's like it's funny but it's true is

00:23:14,320 --> 00:23:19,970
like the first bullet point never trust

00:23:16,549 --> 00:23:22,490
a client but there's also always trust

00:23:19,970 --> 00:23:25,100
your intuition and never trust your

00:23:22,490 --> 00:23:28,249
intuition always trust yourself never

00:23:25,100 --> 00:23:32,379
trust yourself and sometimes you do need

00:23:28,249 --> 00:23:32,379
to trust apartment kind of like the

00:23:34,119 --> 00:23:39,259
there is no red long you have to

00:23:37,009 --> 00:23:45,649
constantly be questioning your

00:23:39,259 --> 00:23:49,009
assumptions and intuition but then you

00:23:45,649 --> 00:23:52,220
also want to always trust it if a client

00:23:49,009 --> 00:23:57,080
is always is constantly dying you saving

00:23:52,220 --> 00:24:04,009
an article page too slow there's

00:23:57,080 --> 00:24:06,019
something going on figure out why you

00:24:04,009 --> 00:24:09,169
may need to go watch them create an

00:24:06,019 --> 00:24:12,950
article and see what they're doing they

00:24:09,169 --> 00:24:14,809
may be doing something free or they may

00:24:12,950 --> 00:24:16,610
be doing something that you never tested

00:24:14,809 --> 00:24:20,950
because every time you test really not

00:24:16,610 --> 00:24:20,950
currently yourself sta sta

00:24:26,380 --> 00:24:39,230
the other thing on loomis save office

00:24:30,070 --> 00:24:43,429
brightest around where if you've got if

00:24:39,230 --> 00:24:45,950
your goal is that anonymous users are

00:24:43,429 --> 00:24:49,490
able to view pages in less than two

00:24:45,950 --> 00:24:52,549
seconds no more than class or at least

00:24:49,490 --> 00:24:56,570
two seconds in a 105 seconds and manage

00:24:52,549 --> 00:25:08,330
your primary goal if you're focusing all

00:24:56,570 --> 00:25:10,450
your attention on the slow and they have

00:25:08,330 --> 00:25:10,450
to

00:26:06,530 --> 00:26:14,880
don't don't get up until I use but most

00:26:12,090 --> 00:26:18,030
importantly don't think it may be your

00:26:14,880 --> 00:26:19,680
tutor for what you notice is great again

00:26:18,030 --> 00:26:21,900
you're all smart people right it's

00:26:19,680 --> 00:26:23,430
assistance that looks good dive in the

00:26:21,900 --> 00:26:25,380
group you'll see what happens get your

00:26:23,430 --> 00:26:29,310
hands dirty be right and for

00:26:25,380 --> 00:26:33,750
vonage two things work at the time they

00:26:29,310 --> 00:26:40,320
had several hundred thousand five

00:26:33,750 --> 00:26:44,280
thousand they were building out these

00:26:40,320 --> 00:26:46,320
huge queries where the query from their

00:26:44,280 --> 00:26:50,010
perspective each weirdest thing two

00:26:46,320 --> 00:26:52,200
examples so they spent probably a lot

00:26:50,010 --> 00:26:55,110
cleaning the database become

00:26:52,200 --> 00:26:57,360
ridiculously big hardware do whatever

00:26:55,110 --> 00:26:58,920
they can to try to fix it what they

00:26:57,360 --> 00:27:01,950
didn't do is realize the query itself

00:26:58,920 --> 00:27:05,550
was very fast those taking Drupal 45

00:27:01,950 --> 00:27:07,770
seconds to the building so it was really

00:27:05,550 --> 00:27:09,780
easy to look at say oh it's a where

00:27:07,770 --> 00:27:11,340
you let's go going off in here but if

00:27:09,780 --> 00:27:14,730
you really get your hands dirty realize

00:27:11,340 --> 00:27:16,890
what part of the page is low knock just

00:27:14,730 --> 00:27:20,580
kind of part but I'm just trying to

00:27:16,890 --> 00:27:25,070
articulate what to do you can actually

00:27:20,580 --> 00:27:32,180
got in with the profile of a fake weeks

00:27:25,070 --> 00:27:36,300
don't don't get lost ironical say that

00:27:32,180 --> 00:27:40,260
but really if your site part of a larger

00:27:36,300 --> 00:27:43,850
ecosystem in your company circles 27 you

00:27:40,260 --> 00:27:43,850
might not run into issues that

00:27:46,650 --> 00:27:52,900
New York they're running low tests on a

00:27:50,350 --> 00:27:55,950
Drupal site no problems at all Barnas

00:27:52,900 --> 00:27:58,720
working perfectly fine don't use at all

00:27:55,950 --> 00:28:00,610
what was happening was when the users

00:27:58,720 --> 00:28:04,300
were coming in they're going to the main

00:28:00,610 --> 00:28:06,460
comp site it was a vanilla cookie then

00:28:04,300 --> 00:28:08,890
properly to match the configuration

00:28:06,460 --> 00:28:11,530
they're easy to market for this African

00:28:08,890 --> 00:28:13,540
google site so the only way to recreate

00:28:11,530 --> 00:28:16,660
the problem is to actually go back and

00:28:13,540 --> 00:28:18,700
think once the entire user story they go

00:28:16,660 --> 00:28:21,610
to the doc off they all over to the blog

00:28:18,700 --> 00:28:25,180
they click her up that's the users it's

00:28:21,610 --> 00:28:30,270
not just getting into so their entire

00:28:25,180 --> 00:28:33,040
fist was to change them and save them

00:28:30,270 --> 00:28:37,210
their site went down multiple times

00:28:33,040 --> 00:28:40,510
friday Chrissy and Harry horrible tiny

00:28:37,210 --> 00:28:44,260
can make over single time and it was

00:28:40,510 --> 00:28:46,090
involved lips or three hours don't get

00:28:44,260 --> 00:28:49,090
lost and thinking for constantly dirty

00:28:46,090 --> 00:28:52,410
to service it might not be too close

00:28:49,090 --> 00:28:52,410
though it might never see these

00:28:54,150 --> 00:29:07,210
beautiful sight maybe sir make sure I

00:29:02,440 --> 00:29:08,890
wants to try to be fun so everyone has a

00:29:07,210 --> 00:29:10,870
great intensity there what has a great

00:29:08,890 --> 00:29:12,730
development team but you're going to

00:29:10,870 --> 00:29:14,710
forget little stuff and you're going to

00:29:12,730 --> 00:29:17,500
realize that if the servers are slow

00:29:14,710 --> 00:29:20,470
maybe varnish is just missing things you

00:29:17,500 --> 00:29:22,540
might think it is because you take but

00:29:20,470 --> 00:29:26,130
maybe it actually is called an issue and

00:29:22,540 --> 00:29:26,130
running tests throughout the day

00:29:31,750 --> 00:29:37,490
don't accept anything less than perfect

00:29:34,120 --> 00:29:39,380
so we talked about the article no type

00:29:37,490 --> 00:29:43,270
injury and I'm certainly talking about

00:29:39,380 --> 00:29:49,100
priorities right cookie box with that

00:29:43,270 --> 00:30:02,120
but one case I've seen a lot was their

00:29:49,100 --> 00:30:05,600
site absolutely the mixer starts okay

00:30:02,120 --> 00:30:09,260
ribbon Geneva so needless to say they

00:30:05,600 --> 00:30:14,030
had some slight side effects but that's

00:30:09,260 --> 00:30:15,950
because it wasn't uniface is this is so

00:30:14,030 --> 00:30:17,930
these are kind of renovated if you

00:30:15,950 --> 00:30:20,300
really start stripping away at what

00:30:17,930 --> 00:30:22,460
you're considering perfect what's really

00:30:20,300 --> 00:30:25,670
making your site work you're going to

00:30:22,460 --> 00:30:32,260
end up with spiral it's going to take

00:30:25,670 --> 00:30:32,260
you monster you want to be developing

00:30:33,760 --> 00:30:41,210
along those lines as well something

00:30:37,970 --> 00:30:46,040
might work but there might be better

00:30:41,210 --> 00:30:50,480
solutions I worked on projects last year

00:30:46,040 --> 00:30:55,510
that believes fees and there were lots

00:30:50,480 --> 00:30:57,890
of money lots of tea and theoretically

00:30:55,510 --> 00:31:02,630
those things could be processed through

00:30:57,890 --> 00:31:05,360
dark how cute those thing but when we

00:31:02,630 --> 00:31:07,460
are talking about that literal

00:31:05,360 --> 00:31:10,160
we had to be any more creative about

00:31:07,460 --> 00:31:13,610
optical process stuff because if we ran

00:31:10,160 --> 00:31:18,559
triple prime every minute we did all

00:31:13,610 --> 00:31:26,240
this over here the other stuff so we

00:31:18,559 --> 00:31:28,549
were able to run and that was one case

00:31:26,240 --> 00:31:48,350
where you know it was acceptable but it

00:31:28,549 --> 00:31:56,750
wasn't perfect so we want to guess I

00:31:48,350 --> 00:32:00,860
need to speak up so this is part of our

00:31:56,750 --> 00:32:02,990
infrastructure so one very common

00:32:00,860 --> 00:32:06,410
mistake to see is using your dev

00:32:02,990 --> 00:32:08,690
environment for testing so dev

00:32:06,410 --> 00:32:11,179
environments have a lot of overhead like

00:32:08,690 --> 00:32:13,160
you're running additional things that

00:32:11,179 --> 00:32:15,950
aren't being run in production like XD

00:32:13,160 --> 00:32:20,960
but I think drop you might be doing

00:32:15,950 --> 00:32:23,000
logging might be using watchdog and TV

00:32:20,960 --> 00:32:25,850
log Maggie log into the database that

00:32:23,000 --> 00:32:29,840
you have easier access to log messages

00:32:25,850 --> 00:32:33,230
and deaf environments are to the ground

00:32:29,840 --> 00:32:36,200
congested networks as well so your dev

00:32:33,230 --> 00:32:40,100
environment might be on the same server

00:32:36,200 --> 00:32:42,200
or in the same sort of network as a

00:32:40,100 --> 00:32:44,770
whole bunch of other campsites and it's

00:32:42,200 --> 00:32:52,370
not going to give you a realistic view

00:32:44,770 --> 00:32:56,660
of what so the other thing is to not

00:32:52,370 --> 00:33:00,010
extrapolate so in this diagram so

00:32:56,660 --> 00:33:02,860
difficult estimate

00:33:00,010 --> 00:33:07,450
the next step we're adding more users

00:33:02,860 --> 00:33:10,180
and we've scaled up our hardware a

00:33:07,450 --> 00:33:14,140
little bit and the BB seemed fine last

00:33:10,180 --> 00:33:16,960
time but in this case this is going back

00:33:14,140 --> 00:33:19,230
to Eric's earlier example where thanks

00:33:16,960 --> 00:33:22,840
for flying with small number of users

00:33:19,230 --> 00:33:26,140
but we had more users we start getting

00:33:22,840 --> 00:33:29,110
attention it doesn't matter that we

00:33:26,140 --> 00:33:31,360
scaled up our servers doesn't matter

00:33:29,110 --> 00:33:39,190
that we made our web servers bigger that

00:33:31,360 --> 00:33:41,980
wasn't the problem and this next step we

00:33:39,190 --> 00:33:47,050
doubled the DB size and we added more

00:33:41,980 --> 00:33:50,650
originality so the whole idea here is

00:33:47,050 --> 00:33:52,870
don't assume that the results you get in

00:33:50,650 --> 00:34:00,610
one environment can be extrapolated to

00:33:52,870 --> 00:34:03,340
the high similarly and this is again

00:34:00,610 --> 00:34:09,030
related to contention we do a small load

00:34:03,340 --> 00:34:09,030
test that might be really hard to see so

00:34:09,690 --> 00:34:15,550
the blue box on the bottom is the

00:34:12,760 --> 00:34:18,070
locking clear a query that does

00:34:15,550 --> 00:34:20,560
something that causes a locking mistake

00:34:18,070 --> 00:34:24,370
I could literally be walking a table it

00:34:20,560 --> 00:34:27,340
could be drupal putting a lock using a

00:34:24,370 --> 00:34:30,909
lock itself something causes a large

00:34:27,340 --> 00:34:34,810
process and then we have a couple

00:34:30,909 --> 00:34:37,419
queries waiting but in small load tests

00:34:34,810 --> 00:34:39,840
we hear about 20 more seconds of

00:34:37,419 --> 00:34:39,840
overhead

00:34:41,050 --> 00:34:47,869
that's we add more people or we start

00:34:44,990 --> 00:34:52,070
waiting for that lock to clear stuff

00:34:47,869 --> 00:35:04,820
piles up and you get basically a traffic

00:34:52,070 --> 00:35:28,599
jam so our originally was it's on top of

00:35:04,820 --> 00:35:28,599
that this is a third

00:36:17,650 --> 00:36:25,750
a good example here is well mean clear

00:36:21,010 --> 00:36:28,480
gerbils cash and the next page requests

00:36:25,750 --> 00:36:31,240
that comes through let's say you cleared

00:36:28,480 --> 00:36:33,250
the minion catch the next case request

00:36:31,240 --> 00:36:36,099
that comes through have to rebuild

00:36:33,250 --> 00:36:38,589
matter in gas it doesn't matter if just

00:36:36,099 --> 00:36:40,869
one request is coming or five thousand

00:36:38,589 --> 00:36:42,490
requests for coming you have to build

00:36:40,869 --> 00:36:45,700
the cats and you only have to build it

00:36:42,490 --> 00:36:48,400
once but all 5,000 of those requests

00:36:45,700 --> 00:36:57,579
need that same thing that's we go so

00:36:48,400 --> 00:37:00,460
they're all waiting on that one so this

00:36:57,579 --> 00:37:04,299
next one your numbers are only as

00:37:00,460 --> 00:37:07,240
current as your last test so you want to

00:37:04,299 --> 00:37:11,619
write smartness don't just write a lot

00:37:07,240 --> 00:37:14,170
of just saying that you want x percent

00:37:11,619 --> 00:37:17,349
of test coverage is an always best

00:37:14,170 --> 00:37:21,099
approach what you want to do is write

00:37:17,349 --> 00:37:25,539
smart strategic tests that truly target

00:37:21,099 --> 00:37:28,950
your new spaces on your side so I've got

00:37:25,539 --> 00:37:32,559
user scenarios work with your business

00:37:28,950 --> 00:37:36,130
work with the client understands what is

00:37:32,559 --> 00:37:39,190
the pack the actual counter aside like

00:37:36,130 --> 00:37:43,329
aracles signing off that these women are

00:37:39,190 --> 00:37:46,539
tribes if you didn't know that users

00:37:43,329 --> 00:37:49,119
started over in this polo part of the

00:37:46,539 --> 00:37:52,109
site before they got to Drupal you would

00:37:49,119 --> 00:37:52,109
never run into the problem

00:37:52,350 --> 00:37:57,730
use data from analytics this is this is

00:37:56,080 --> 00:38:00,490
one area where you never want to trust

00:37:57,730 --> 00:38:03,670
what their plan is telling you about

00:38:00,490 --> 00:38:06,330
their scenarios for the business get

00:38:03,670 --> 00:38:09,640
real data from analytics that tells you

00:38:06,330 --> 00:38:12,070
what the actual most visited pages are

00:38:09,640 --> 00:38:16,090
or what the most common path to the

00:38:12,070 --> 00:38:19,990
spiders topic you don't want to test the

00:38:16,090 --> 00:38:22,300
scenarios that the client gave you you

00:38:19,990 --> 00:38:25,570
just want to use real data to inform

00:38:22,300 --> 00:38:28,540
what you're testing you want to ensure

00:38:25,570 --> 00:38:31,750
variability so change what you're

00:38:28,540 --> 00:38:33,730
submitting informed change the path for

00:38:31,750 --> 00:38:42,930
user change how they navigate to a

00:38:33,730 --> 00:38:46,180
particular page so you want to also

00:38:42,930 --> 00:38:48,280
measure test coverage so both components

00:38:46,180 --> 00:38:51,910
on your page as well as the total eight

00:38:48,280 --> 00:38:56,110
tonight and as you build me a text or

00:38:51,910 --> 00:39:03,730
building features w test make sure that

00:38:56,110 --> 00:39:06,220
you're testing our next big point and

00:39:03,730 --> 00:39:08,920
this is one we see all the time all the

00:39:06,220 --> 00:39:11,710
time is that your tests aren't about

00:39:08,920 --> 00:39:13,690
launching your site you don't write

00:39:11,710 --> 00:39:17,950
tests and run tests just to launch

00:39:13,690 --> 00:39:19,810
yourself we want to be building testing

00:39:17,950 --> 00:39:22,120
throughout your development cycle you

00:39:19,810 --> 00:39:25,900
want to be building test after launch

00:39:22,120 --> 00:39:29,860
your site because nobody's nobody in

00:39:25,900 --> 00:39:31,720
here I imagine nobody in here launching

00:39:29,860 --> 00:39:34,040
the site and then just play rough those

00:39:31,720 --> 00:39:41,130
right hands and

00:39:34,040 --> 00:39:44,609
one guy every time you have a new

00:39:41,130 --> 00:39:46,980
feature you are changing your site needs

00:39:44,609 --> 00:39:48,780
the test performance again you can have

00:39:46,980 --> 00:39:50,640
you can have like dramatically

00:39:48,780 --> 00:39:53,730
unintended consequences when we add new

00:39:50,640 --> 00:39:55,920
features and you could add a new feature

00:39:53,730 --> 00:39:58,710
over here that does something that you

00:39:55,920 --> 00:40:02,549
think would affect at all user

00:39:58,710 --> 00:40:05,640
performance over here but it does so

00:40:02,549 --> 00:40:11,059
testing is about you a and you ain't

00:40:05,640 --> 00:40:13,170
never stops so you're testing too I

00:40:11,059 --> 00:40:15,510
gotta work the one of the note here is

00:40:13,170 --> 00:40:18,390
that when you launch launching is about

00:40:15,510 --> 00:40:31,710
scale mounting is about meeting the

00:40:18,390 --> 00:40:34,380
scale the site when it goes so

00:40:31,710 --> 00:40:37,020
continuous integration is for

00:40:34,380 --> 00:40:42,720
performance as well as continuous

00:40:37,020 --> 00:40:45,240
creation tools like Jenkins provide

00:40:42,720 --> 00:40:46,920
mechanisms for you to do all kinds of

00:40:45,240 --> 00:40:51,780
things that aren't just about building

00:40:46,920 --> 00:40:55,309
and deploying there too so we use tools

00:40:51,780 --> 00:40:59,339
like Dinkins a lot to be testing so

00:40:55,309 --> 00:41:01,380
ongoing changes to your site on building

00:40:59,339 --> 00:41:03,869
content entry into your site things like

00:41:01,380 --> 00:41:06,210
that can affect performance of the long

00:41:03,869 --> 00:41:08,430
term and by using the continuous

00:41:06,210 --> 00:41:11,309
integration tool that tracks results

00:41:08,430 --> 00:41:15,240
which and measures results from tests

00:41:11,309 --> 00:41:16,280
you can see over time trends in your

00:41:15,240 --> 00:41:18,230
safe

00:41:16,280 --> 00:41:22,250
alright that's really important because

00:41:18,230 --> 00:41:25,010
if you're just manually running tests

00:41:22,250 --> 00:41:28,130
every once in a while you may completely

00:41:25,010 --> 00:41:30,830
miss the fact that every day for the

00:41:28,130 --> 00:41:33,590
last three months performances gotten a

00:41:30,830 --> 00:41:36,110
little bit worse you may not be able to

00:41:33,590 --> 00:41:38,180
see that but you can go into Jenkins

00:41:36,110 --> 00:41:40,790
one's a weenie can take a look at that

00:41:38,180 --> 00:41:44,390
graph and you see that it's growing up

00:41:40,790 --> 00:41:49,040
you can proactively take care of the

00:41:44,390 --> 00:41:51,140
issue before it becomes a problem and

00:41:49,040 --> 00:41:55,970
also when you really pick you up for the

00:41:51,140 --> 00:41:57,470
Cottagers not only single time but

00:41:55,970 --> 00:41:59,990
usually you're also staying here when

00:41:57,470 --> 00:42:02,450
new Kota screen so you can actually have

00:41:59,990 --> 00:42:04,550
their correlates with the performance

00:42:02,450 --> 00:42:06,980
get worse and any of these are the last

00:42:04,550 --> 00:42:08,750
three proteins so you're not coming to

00:42:06,980 --> 00:42:11,450
trace back you're all slightly figure

00:42:08,750 --> 00:42:13,870
out where that comment you have all in

00:42:11,450 --> 00:42:13,870
one place

00:42:35,250 --> 00:42:41,350
laughing really for the one piece more

00:42:39,730 --> 00:42:44,680
exact was talking about the different

00:42:41,350 --> 00:42:48,160
types so we talked to a load test thing

00:42:44,680 --> 00:42:49,870
that's kind of people think of but when

00:42:48,160 --> 00:42:55,960
you really come out performance testing

00:42:49,870 --> 00:42:58,570
got drawn there's more than just so make

00:42:55,960 --> 00:43:00,820
sure you doing most what types of so

00:42:58,570 --> 00:43:03,520
it's really easy to look at that final

00:43:00,820 --> 00:43:07,360
in number of the load test and just see

00:43:03,520 --> 00:43:09,010
vatican single number of the door it's

00:43:07,360 --> 00:43:12,310
great and ultimately that's what the

00:43:09,010 --> 00:43:13,450
real in user experience but there's

00:43:12,310 --> 00:43:15,010
plenty of different levels that are

00:43:13,450 --> 00:43:21,120
actually going to speed things up for

00:43:15,010 --> 00:43:21,120
you to work so everything from requests

00:43:22,860 --> 00:43:28,050
were you're really looking at the

00:43:24,820 --> 00:43:33,750
individual pieces on the page load and

00:43:28,050 --> 00:43:37,270
problems that blocking off the head

00:43:33,750 --> 00:43:39,460
writers they went to a certain pages of

00:43:37,270 --> 00:43:42,370
that performance they jump from the page

00:43:39,460 --> 00:43:47,860
they didn't quite follow down the

00:43:42,370 --> 00:43:50,080
profile realize and go back so maybe use

00:43:47,860 --> 00:43:53,080
this for an investigation not really a

00:43:50,080 --> 00:43:54,580
limit chart but is the first step while

00:43:53,080 --> 00:43:57,000
you're doing development to make sure

00:43:54,580 --> 00:43:59,530
it's performing the way to finish a

00:43:57,000 --> 00:44:01,870
service this those furthest first thing

00:43:59,530 --> 00:44:04,720
is the way I look at this is if you

00:44:01,870 --> 00:44:09,190
getting a triple request a single page

00:44:04,720 --> 00:44:14,410
you're touching apparently it is equal

00:44:09,190 --> 00:44:18,820
you might take moon cast network but it

00:44:14,410 --> 00:44:20,770
kind of manifesto service Christ thing

00:44:18,820 --> 00:44:23,730
is thinking about how long does it take

00:44:20,770 --> 00:44:23,730
for a path you sir

00:44:24,900 --> 00:44:31,120
or to run this story on my sequel maybe

00:44:28,360 --> 00:44:36,130
there's some network lag between webster

00:44:31,120 --> 00:44:40,090
not really looking at something right

00:44:36,130 --> 00:44:43,660
nip / date all these two comentary

00:44:40,090 --> 00:44:46,750
really testing each level and even

00:44:43,660 --> 00:44:48,010
testing that I work itself these are the

00:44:46,750 --> 00:44:49,690
kind of things are going to make sure

00:44:48,010 --> 00:44:53,620
that you won't make some false

00:44:49,690 --> 00:44:55,660
assumptions about that one and the last

00:44:53,620 --> 00:44:59,260
row for a little bit harder to sort of

00:44:55,660 --> 00:45:06,580
hair but what look at a simple response

00:44:59,260 --> 00:45:09,790
testing me something like services like

00:45:06,580 --> 00:45:13,180
where you going to get one single raw

00:45:09,790 --> 00:45:15,070
number of what the mythologies the

00:45:13,180 --> 00:45:18,250
amount of time the amount of opportunity

00:45:15,070 --> 00:45:23,710
I can react to that simulate what really

00:45:18,250 --> 00:45:27,660
you're seeing so I look at this as

00:45:23,710 --> 00:45:27,660
something that you really use monitoring

00:45:38,250 --> 00:45:47,000
mechanic code I work to the clients who

00:45:43,930 --> 00:45:51,020
we were seeing very slow performance on

00:45:47,000 --> 00:45:54,319
queries to the database but we couldn't

00:45:51,020 --> 00:45:56,150
explain it because we would go look at

00:45:54,319 --> 00:46:00,200
it very long week finds the query that

00:45:56,150 --> 00:46:02,660
was supposedly slow and we build log in

00:46:00,200 --> 00:46:08,690
right I said well run the very enemy

00:46:02,660 --> 00:46:10,220
vest and character hinted at it but some

00:46:08,690 --> 00:46:13,220
place that we probably never would

00:46:10,220 --> 00:46:16,520
affect until we sort of stumbled upon it

00:46:13,220 --> 00:46:21,230
was the latest see between the web

00:46:16,520 --> 00:46:23,990
server and database to the times you to

00:46:21,230 --> 00:46:26,150
make that connection and then request

00:46:23,990 --> 00:46:28,549
over and get it back was what was slow

00:46:26,150 --> 00:46:30,260
and that's what something like that is

00:46:28,549 --> 00:46:34,069
what's the service profile is about as

00:46:30,260 --> 00:46:36,619
well where you like even develop

00:46:34,069 --> 00:46:39,440
spurlock may not oh you got a problem or

00:46:36,619 --> 00:46:42,980
you'll see weird things like this query

00:46:39,440 --> 00:46:48,069
like caption get which can answer should

00:46:42,980 --> 00:47:05,750
be very quick it was slow slow slow fast

00:46:48,069 --> 00:47:16,010
slow slow this is really every level to

00:47:05,750 --> 00:47:17,690
understand first look at what and the

00:47:16,010 --> 00:47:20,089
goal here is really just to send

00:47:17,690 --> 00:47:22,180
requests to help get that response back

00:47:20,089 --> 00:47:24,420
in area

00:47:22,180 --> 00:47:29,170
usually it's just a simple transaction

00:47:24,420 --> 00:47:32,890
there's not complexity to it or a lot of

00:47:29,170 --> 00:47:34,600
really activity and the cost that I've

00:47:32,890 --> 00:47:49,990
got here because you want relevant a

00:47:34,600 --> 00:47:54,970
minute but these sorts of its design is

00:47:49,990 --> 00:48:00,340
really pissed secondly i will get would

00:47:54,970 --> 00:48:02,730
i look at rio new quote so this is using

00:48:00,340 --> 00:48:05,620
some using something more browser-based

00:48:02,730 --> 00:48:08,130
words actually loading the page as if it

00:48:05,620 --> 00:48:10,900
were an infuser performing an action

00:48:08,130 --> 00:48:14,680
zwinky were actually doing what the

00:48:10,900 --> 00:48:19,260
users and you look at the cost

00:48:14,680 --> 00:48:19,260
difference the amount of resources are

00:48:23,640 --> 00:48:34,470
really full browser user vs I can tell

00:48:42,320 --> 00:48:50,660
just fronting for virtual users I came

00:48:46,230 --> 00:48:50,660
here you're sending out one superclass

00:48:59,360 --> 00:49:04,770
you really look here what is the girls

00:49:02,610 --> 00:49:07,080
are going to do to load this right is

00:49:04,770 --> 00:49:12,210
there blocking javis left that's not

00:49:07,080 --> 00:49:26,730
something you can see you really have to

00:49:12,210 --> 00:49:28,470
look at this I think this gets to a

00:49:26,730 --> 00:49:31,080
really important part of performance

00:49:28,470 --> 00:49:33,660
testing that doesn't get talked about a

00:49:31,080 --> 00:49:38,520
lot except by you know people who are

00:49:33,660 --> 00:49:41,040
sort of the cutting edge or do maybe

00:49:38,520 --> 00:49:44,460
like a lot of mobile work is that front

00:49:41,040 --> 00:49:47,760
end performance is really critical and

00:49:44,460 --> 00:49:50,790
it's something that as developers like

00:49:47,760 --> 00:49:53,520
back-end developers and bad news we

00:49:50,790 --> 00:49:55,950
don't like to think about it's like well

00:49:53,520 --> 00:49:59,690
my server is serving up the stuff just

00:49:55,950 --> 00:50:01,800
fine no big deal right my job is done

00:49:59,690 --> 00:50:03,890
but front end performance can

00:50:01,800 --> 00:50:07,140
dramatically affect and user experience

00:50:03,890 --> 00:50:10,010
you can get a report from the client

00:50:07,140 --> 00:50:13,110
that tells you that cytus flow and

00:50:10,010 --> 00:50:16,890
everything on the server side point is

00:50:13,110 --> 00:50:19,860
really psyched in fact but if they're

00:50:16,890 --> 00:50:24,900
waiting to download images or there's

00:50:19,860 --> 00:50:26,820
JavaScript that blocks blocks rendering

00:50:24,900 --> 00:50:30,900
of the page person on a time

00:50:26,820 --> 00:50:35,100
or a bunch of analytics stuff is going

00:50:30,900 --> 00:50:37,170
on easily the most common problem and

00:50:35,100 --> 00:50:42,180
you've got like 10 dog stork libraries

00:50:37,170 --> 00:50:47,930
when you handle it exposed yourself but

00:50:42,180 --> 00:50:55,380
you wouldn't see that on the back so

00:50:47,930 --> 00:50:58,160
really overall developers I go roll on

00:50:55,380 --> 00:51:04,770
it QA testers that their role in it

00:50:58,160 --> 00:51:21,240
their role in it but each really key the

00:51:04,770 --> 00:51:26,040
ruins of all just we're going up there

00:51:21,240 --> 00:51:28,410
are hiring I think specifically the

00:51:26,040 --> 00:51:52,110
finest stuff that we're doing here this

00:51:28,410 --> 00:51:54,740
is what just reach out to either hi I'm

00:51:52,110 --> 00:51:56,910
it without rich difference is 1230

00:51:54,740 --> 00:51:59,910
pushed about to the tool you're using

00:51:56,910 --> 00:52:02,910
injecting suit designed the creative

00:51:59,910 --> 00:52:06,210
rats performance lab so that is what

00:52:02,910 --> 00:52:08,970
expense when using in ranking trip so

00:52:06,210 --> 00:52:13,130
that particular tab was using junior and

00:52:08,970 --> 00:52:13,130
getting the excimer files on

00:52:13,630 --> 00:52:23,720
java game dinging engine so it outputs

00:52:20,300 --> 00:52:27,200
have a standard data format that's what

00:52:23,720 --> 00:52:28,640
I used to rap so can actually also AM

00:52:27,200 --> 00:52:31,640
results the same way and a bunch of

00:52:28,640 --> 00:52:35,030
other services have a copper corner cool

00:52:31,640 --> 00:52:37,460
a bit the question I started I want to

00:52:35,030 --> 00:52:40,460
test the item the wunderkind is one

00:52:37,460 --> 00:52:43,730
machine testing with selenium firebox

00:52:40,460 --> 00:52:47,840
grown woman it sets if that passes its

00:52:43,730 --> 00:52:49,700
XV it's a different brush tool so that

00:52:47,840 --> 00:52:51,830
it's another instance of Jenkins running

00:52:49,700 --> 00:52:54,770
on Windows their fists I knew that that

00:52:51,830 --> 00:53:02,320
makes sense for a few days yeah thanks

00:52:54,770 --> 00:53:07,300
for something like at a certain point a

00:53:02,320 --> 00:53:07,300
certain point testing back on windows

00:53:15,760 --> 00:53:20,690
alright this is really nice validation

00:53:19,040 --> 00:53:23,900
for sort of the director that a trying

00:53:20,690 --> 00:53:27,350
to explain word up I'm really curious

00:53:23,900 --> 00:53:31,880
what tools were using to generate the

00:53:27,350 --> 00:53:34,640
number you talk a lot about it see two

00:53:31,880 --> 00:53:38,270
examples presentation about which to

00:53:34,640 --> 00:53:39,800
like for instance you know obviously a

00:53:38,270 --> 00:53:41,930
lot of things we've sort of danced

00:53:39,800 --> 00:53:44,480
around it are just period even though

00:53:41,930 --> 00:53:46,280
their laundry list that you can

00:53:44,480 --> 00:53:48,200
basically think you know here's a top

00:53:46,280 --> 00:53:52,090
five or six think reason to generate

00:53:48,200 --> 00:53:52,090
those extra numbers of your

00:53:52,180 --> 00:53:56,960
search them for me request profile

00:53:54,680 --> 00:54:00,530
exhales possibly a good night that's

00:53:56,960 --> 00:54:03,740
what I used to jump into a project for

00:54:00,530 --> 00:54:07,190
birth service testing using the

00:54:03,740 --> 00:54:11,390
assistant for my people using just a

00:54:07,190 --> 00:54:13,730
basic static file profanity / varnish on

00:54:11,390 --> 00:54:16,190
set up basically a URL that morning

00:54:13,730 --> 00:54:21,080
returns directly test that i'm using

00:54:16,190 --> 00:54:25,520
stage may be here for my sperm memcache

00:54:21,080 --> 00:54:29,869
them flat with pretty much any

00:54:25,520 --> 00:54:32,420
installation for the real user load

00:54:29,869 --> 00:54:40,720
testing there's things like so spooky

00:54:32,420 --> 00:54:43,180
know this process service out there

00:54:40,720 --> 00:54:52,550
really a lot of this comes down to a

00:54:43,180 --> 00:54:54,500
certain point as long as you get what it

00:54:52,550 --> 00:54:57,109
is trying to do and you can sort of map

00:54:54,500 --> 00:54:58,580
that two features awesome really feeling

00:54:57,109 --> 00:55:01,700
what you're getting from a product

00:54:58,580 --> 00:55:03,850
that's really the key there's plenty

00:55:01,700 --> 00:55:08,600
about plenty of tools that we get your

00:55:03,850 --> 00:55:10,490
essentials thank you yes that's exactly

00:55:08,600 --> 00:55:11,840
what I was hoping you say because

00:55:10,490 --> 00:55:13,670
there's just so many options out there

00:55:11,840 --> 00:55:15,410
it it's nice to know that basically does

00:55:13,670 --> 00:55:19,430
it really matter the pole you're using

00:55:15,410 --> 00:55:26,240
is creating that measure of old metric

00:55:19,430 --> 00:55:28,040
that you can see the trend right you

00:55:26,240 --> 00:55:29,240
kind of look at what once so person know

00:55:28,040 --> 00:55:31,790
that I'm trying to see the difference

00:55:29,240 --> 00:55:35,030
that's the beauty of members is you know

00:55:31,790 --> 00:55:38,440
which one works better so don't even

00:55:35,030 --> 00:55:38,440
think that one tool is

00:55:40,860 --> 00:55:46,840
so you talked about your numbers only in

00:55:44,200 --> 00:55:49,920
theory to test good how have you

00:55:46,840 --> 00:55:52,830
determined tested dirty versus amandes I

00:55:49,920 --> 00:55:54,660
think a lot of it really comes down to

00:55:52,830 --> 00:55:57,270
understanding some of these things

00:55:54,660 --> 00:56:00,940
what's happening maybe a lil bit outside

00:55:57,270 --> 00:56:03,520
or what could a user do or what kind of

00:56:00,940 --> 00:56:05,890
randomness is right variation of lightly

00:56:03,520 --> 00:56:07,450
my go to the home page of site am I

00:56:05,890 --> 00:56:10,000
going to click on the top one every time

00:56:07,450 --> 00:56:12,580
now I'm a cold on the top one bottom on

00:56:10,000 --> 00:56:16,810
the third having mentioned are

00:56:12,580 --> 00:56:19,450
variations so when I say good test or

00:56:16,810 --> 00:56:21,670
smart test I really think though what

00:56:19,450 --> 00:56:25,620
would it user do what am I trying to

00:56:21,670 --> 00:56:29,920
understand what they're going to do

00:56:25,620 --> 00:56:35,250
these other tools and that's what a good

00:56:29,920 --> 00:56:35,250
test figured out the realistic action

00:56:35,370 --> 00:56:38,020
that's where you're going to make money

00:56:37,210 --> 00:56:40,420
that's where you're going to get

00:56:38,020 --> 00:56:43,570
visitors I think that's that's this

00:56:40,420 --> 00:56:45,790
thing right like if you're running an

00:56:43,570 --> 00:56:48,820
e-commerce site and your typical user

00:56:45,790 --> 00:56:51,730
but adds a few products to their card

00:56:48,820 --> 00:56:54,220
removes the product adds another product

00:56:51,730 --> 00:56:56,590
and then checks out you're crushed

00:56:54,220 --> 00:56:59,710
shouldn't be user goes a NASA product

00:56:56,590 --> 00:57:07,360
and touch you know you want to touch you

00:56:59,710 --> 00:57:10,420
want to touch so realistic going to

00:57:07,360 --> 00:57:13,960
someone say well today due to product

00:57:10,420 --> 00:57:17,050
since Mardi 46 luckily a real I be today

00:57:13,960 --> 00:57:18,580
but if you can probably that say a

00:57:17,050 --> 00:57:32,100
wonder what happens if there's a hunter

00:57:18,580 --> 00:57:32,100
15 or 30 is good a user going

00:57:34,470 --> 00:57:41,520
maybe they've done this over a course of

00:57:37,320 --> 00:57:43,770
all these little carpentry really think

00:57:41,520 --> 00:57:53,700
about what do users doing because that's

00:57:43,770 --> 00:57:57,150
what makes their already call out

00:57:53,700 --> 00:57:59,480
questions feedback personally get free

00:57:57,150 --> 00:57:59,480

YouTube URL: https://www.youtube.com/watch?v=YfgmJE27b74


