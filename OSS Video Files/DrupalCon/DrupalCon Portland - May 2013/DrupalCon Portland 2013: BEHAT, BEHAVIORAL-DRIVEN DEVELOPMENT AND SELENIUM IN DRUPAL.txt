Title: DrupalCon Portland 2013: BEHAT, BEHAVIORAL-DRIVEN DEVELOPMENT AND SELENIUM IN DRUPAL
Publication date: 2013-05-28
Playlist: DrupalCon Portland - May 2013
Description: 
	Testing our applications is something we all do. Ahem, rather, it's something we all *wish* we did. In this talk, I'll introduce you to Behat: a behavior-driven-development library that allows you to write functional tests against your application just by writing human-readable sentences/scenarios. To sweeten the deal, Mink - Behat's BFF library - allows these tests to be run in a real browser (via Selenium2) if you choose. That's right: you write english sentence, Behat+Mink run them in a real browser.

We'll also talk about some of the special challenges when working with Behat in Drupal, including writing tests against a production server and bootstrapping Drupal in your tests for local development. Whatever your case, you'll come away with the know-how to stop wishing you had tests, and start writing them.
Captions: 
	00:00:00,000 --> 00:00:04,140
so bear with me thank you yeah I'm

00:00:02,669 --> 00:00:05,430
really excited to be here I'm come from

00:00:04,140 --> 00:00:07,440
the symphony side of things hey this is

00:00:05,430 --> 00:00:14,429
perfect transition into my first slide

00:00:07,440 --> 00:00:16,949
here there we go so I come from the

00:00:14,429 --> 00:00:18,630
symphony side of things though we're not

00:00:16,949 --> 00:00:19,800
gonna talk about symphony today we're

00:00:18,630 --> 00:00:21,270
going to talk about B hat and be DD

00:00:19,800 --> 00:00:22,410
which I am also something it's I'm a

00:00:21,270 --> 00:00:24,180
part of so that's why this is my first

00:00:22,410 --> 00:00:25,260
drupalcon and I'm really excited to see

00:00:24,180 --> 00:00:26,789
over here and really says be here in

00:00:25,260 --> 00:00:29,880
fact there we go now I can actually see

00:00:26,789 --> 00:00:31,050
everybody way back there so I'm in the

00:00:29,880 --> 00:00:34,860
symphony world i do symphonies

00:00:31,050 --> 00:00:36,690
documentation primarily i also this is

00:00:34,860 --> 00:00:38,129
my one slide to sort of pimp myself that

00:00:36,690 --> 00:00:41,250
that's the company I work for campy labs

00:00:38,129 --> 00:00:43,620
us we do mostly consulting and training

00:00:41,250 --> 00:00:45,239
around the symphony sphere so like I

00:00:43,620 --> 00:00:48,239
said I'm all set everything symphony

00:00:45,239 --> 00:00:52,289
this has been sort of crazy so far this

00:00:48,239 --> 00:00:54,120
week to be a part of what basically is

00:00:52,289 --> 00:00:56,940
about eight times the size of our normal

00:00:54,120 --> 00:00:59,010
conferences so it's been awesome I'm

00:00:56,940 --> 00:01:01,440
also a writer for camp University com

00:00:59,010 --> 00:01:04,110
which is basically screencast in other

00:01:01,440 --> 00:01:06,270
ways to learn things online with good

00:01:04,110 --> 00:01:07,799
practices and actually not boring and

00:01:06,270 --> 00:01:09,060
I'll mention that again later because

00:01:07,799 --> 00:01:11,939
I'm gonna give you guys all a coupon

00:01:09,060 --> 00:01:13,380
code for a free screencast that's going

00:01:11,939 --> 00:01:15,570
to cover what we're going to cover today

00:01:13,380 --> 00:01:17,490
in more detail so if you like what you

00:01:15,570 --> 00:01:19,619
see today with be hat and be DD which I

00:01:17,490 --> 00:01:21,270
think you will you can keep running with

00:01:19,619 --> 00:01:25,530
it for free after this so I'll come back

00:01:21,270 --> 00:01:26,990
to that later ah most importantly i'm

00:01:25,530 --> 00:01:30,000
the husband of the much more talented

00:01:26,990 --> 00:01:31,020
atlanta pelham and she's fairly well

00:01:30,000 --> 00:01:32,939
known in the sympathy world because I

00:01:31,020 --> 00:01:36,900
put her in each of my presentations like

00:01:32,939 --> 00:01:39,810
this how many people know Liana that's

00:01:36,900 --> 00:01:44,909
yeah the the two people in the room I

00:01:39,810 --> 00:01:46,020
know basically so so yeah when I did

00:01:44,909 --> 00:01:47,009
that in symphony thing it was like three

00:01:46,020 --> 00:01:49,740
quarters of the room raised their hand

00:01:47,009 --> 00:01:50,850
so if you could all so my favorite

00:01:49,740 --> 00:01:51,780
things to do before the cat got out of

00:01:50,850 --> 00:01:53,250
the back of the symphony committee about

00:01:51,780 --> 00:01:55,020
her if you could all if you have your

00:01:53,250 --> 00:01:57,869
phone's just tweet at her right now so

00:01:55,020 --> 00:02:00,689
that's her name just say hi she's here

00:01:57,869 --> 00:02:02,610
you could say because I don't know just

00:02:00,689 --> 00:02:03,840
you can you can heckle me towards her

00:02:02,610 --> 00:02:06,450
and she can provide me with that

00:02:03,840 --> 00:02:07,890
heckling feedback afterwards so that's

00:02:06,450 --> 00:02:10,860
probably less distracting and heckling

00:02:07,890 --> 00:02:13,100
me during it so say hi to her and she's

00:02:10,860 --> 00:02:14,420
here also and she's awesome

00:02:13,100 --> 00:02:18,890
and she's the voice behind camp

00:02:14,420 --> 00:02:22,510
University come on I do not want to have

00:02:18,890 --> 00:02:22,510
to advance myself that's what I'll do

00:02:22,900 --> 00:02:28,010
there we go okay alright so today we're

00:02:26,060 --> 00:02:29,570
talking about be HAP behavior driven

00:02:28,010 --> 00:02:32,570
development so let's back up real quick

00:02:29,570 --> 00:02:34,700
a little bit of background where things

00:02:32,570 --> 00:02:35,750
break down in projects and I think we

00:02:34,700 --> 00:02:37,730
will all at least more or less review

00:02:35,750 --> 00:02:40,100
with this is the organization of the

00:02:37,730 --> 00:02:42,110
projects not necessarily the development

00:02:40,100 --> 00:02:43,790
it's the whole mess of who's doing what

00:02:42,110 --> 00:02:44,720
and how are we even organizing and

00:02:43,790 --> 00:02:48,650
planning the features that we're

00:02:44,720 --> 00:02:50,960
building so the typical project and

00:02:48,650 --> 00:02:53,150
probably this is somewhat familiar to

00:02:50,960 --> 00:02:55,610
people how many people how many people

00:02:53,150 --> 00:02:58,100
have seen this series yeah okay good but

00:02:55,610 --> 00:02:59,930
I'm probably like half people yeah so

00:02:58,100 --> 00:03:02,780
there's like a million of these things

00:02:59,930 --> 00:03:03,950
but this is basically what I'm talking

00:03:02,780 --> 00:03:07,070
about so how the customer explained it

00:03:03,950 --> 00:03:08,690
how the project leader understood it how

00:03:07,070 --> 00:03:10,190
the programmer wrote it which I actually

00:03:08,690 --> 00:03:11,750
really like because that just makes no

00:03:10,190 --> 00:03:13,310
sense at all I'm a programmer by the way

00:03:11,750 --> 00:03:16,030
so if I'm ripping on programmers I'm

00:03:13,310 --> 00:03:19,040
ripping on myself I'm not an outsider

00:03:16,030 --> 00:03:21,590
what the customer really needed and my

00:03:19,040 --> 00:03:26,330
personal favorites which is what we gave

00:03:21,590 --> 00:03:30,980
to the beta testers it's funny because

00:03:26,330 --> 00:03:32,000
it hits close to home right okay so yeah

00:03:30,980 --> 00:03:33,680
so it's sort of funny because this is

00:03:32,000 --> 00:03:35,270
all like computer science right and this

00:03:33,680 --> 00:03:36,410
is sort of what actually happens in the

00:03:35,270 --> 00:03:38,510
real world and it's funny because it has

00:03:36,410 --> 00:03:40,460
too close to home so where it breaks

00:03:38,510 --> 00:03:41,870
down first and foremost is different

00:03:40,460 --> 00:03:43,970
roles different languages people of

00:03:41,870 --> 00:03:45,770
different technical levels than we are

00:03:43,970 --> 00:03:47,900
all very important in the overall

00:03:45,770 --> 00:03:49,400
process so we have to work together but

00:03:47,900 --> 00:03:50,600
we use different languages and part of

00:03:49,400 --> 00:03:51,830
the reason to use different languages I

00:03:50,600 --> 00:03:56,500
was because we're at different technical

00:03:51,830 --> 00:03:58,640
levels this one is especially I like for

00:03:56,500 --> 00:04:00,440
programmers is that our code may not

00:03:58,640 --> 00:04:02,300
align with our business value the only

00:04:00,440 --> 00:04:04,220
reason we really write code I mean this

00:04:02,300 --> 00:04:06,410
is not necessarily totally true because

00:04:04,220 --> 00:04:08,900
as programmers we'd like to write code

00:04:06,410 --> 00:04:11,180
but the only reason we're supposed to

00:04:08,900 --> 00:04:12,320
write code is for business value one way

00:04:11,180 --> 00:04:13,970
or another even if that's your pet

00:04:12,320 --> 00:04:16,520
project there's sort of business value

00:04:13,970 --> 00:04:17,690
in that pet project so does your code

00:04:16,520 --> 00:04:20,299
actually align with what your business

00:04:17,690 --> 00:04:22,130
needs or does your code did you kind of

00:04:20,299 --> 00:04:23,479
go off in a direction for four straight

00:04:22,130 --> 00:04:24,800
days because something was really cool

00:04:23,479 --> 00:04:27,060
or interesting and really wasn't that

00:04:24,800 --> 00:04:28,650
important so being able to

00:04:27,060 --> 00:04:31,020
align what we're actually coding with

00:04:28,650 --> 00:04:32,580
the business values so that it's

00:04:31,020 --> 00:04:33,660
basically we bring as much value but the

00:04:32,580 --> 00:04:36,930
company with as little effort as

00:04:33,660 --> 00:04:39,360
possible and this is basically what I'm

00:04:36,930 --> 00:04:41,040
talking about so as if you like to

00:04:39,360 --> 00:04:42,180
program then this is probably at some

00:04:41,040 --> 00:04:44,100
way in the back of your mind you're like

00:04:42,180 --> 00:04:45,750
that's really cool i should run with

00:04:44,100 --> 00:04:46,650
that and keep programming in and I know

00:04:45,750 --> 00:04:49,860
I'm supposed to be doing this other

00:04:46,650 --> 00:04:51,780
thing on the first thing is sort of over

00:04:49,860 --> 00:04:53,130
planning under planning planning that

00:04:51,780 --> 00:04:54,480
whole process how much do we plan are we

00:04:53,130 --> 00:04:57,360
planning at all are we over planning are

00:04:54,480 --> 00:04:59,940
we having meetings like to our meetings

00:04:57,360 --> 00:05:02,790
every day six hours of meetings every

00:04:59,940 --> 00:05:03,960
day anybody are we not planning at all

00:05:02,790 --> 00:05:05,610
so kind of getting the planning process

00:05:03,960 --> 00:05:06,860
so that it we have to plan right but

00:05:05,610 --> 00:05:09,510
actually getting it so that we have

00:05:06,860 --> 00:05:12,330
almost a plan for our plan how do we

00:05:09,510 --> 00:05:14,940
plan efficiently okay so let's get down

00:05:12,330 --> 00:05:17,610
to the the bdd stuff behavior driven

00:05:14,940 --> 00:05:18,780
development so here's sort of the

00:05:17,610 --> 00:05:21,389
evolution of test-driven development

00:05:18,780 --> 00:05:22,830
here way back when somebody said hey we

00:05:21,389 --> 00:05:24,479
should start testing our code there's

00:05:22,830 --> 00:05:26,070
unit tests back there said okay we have

00:05:24,479 --> 00:05:27,990
a function when I call this function I

00:05:26,070 --> 00:05:29,729
need to assert that basically when I put

00:05:27,990 --> 00:05:31,169
three and five in it it comes back as

00:05:29,729 --> 00:05:33,650
eight because that function is called ad

00:05:31,169 --> 00:05:36,150
okay and then later said somebody said

00:05:33,650 --> 00:05:37,530
we should write our test first so if

00:05:36,150 --> 00:05:38,729
we're going to write to the by the way

00:05:37,530 --> 00:05:42,300
use a calculator thing because that's

00:05:38,729 --> 00:05:44,070
sort of the age-old unit testing example

00:05:42,300 --> 00:05:46,470
today we should write our tests first

00:05:44,070 --> 00:05:48,390
and then implement our code in the

00:05:46,470 --> 00:05:49,229
advantage there being that this is

00:05:48,390 --> 00:05:50,669
something that's really good for

00:05:49,229 --> 00:05:53,130
behavior driven development as well is

00:05:50,669 --> 00:05:54,630
that as programmers we need to know when

00:05:53,130 --> 00:05:55,590
to stop we need to know when the

00:05:54,630 --> 00:05:57,780
requirements have actually been

00:05:55,590 --> 00:05:59,910
fulfilled so with test-driven

00:05:57,780 --> 00:06:01,680
development I write the test first and I

00:05:59,910 --> 00:06:02,970
stopped working go home as soon as all

00:06:01,680 --> 00:06:04,340
my tests are green and I don't need to

00:06:02,970 --> 00:06:06,510
program any further than that because

00:06:04,340 --> 00:06:08,550
all my tests are passing so I basically

00:06:06,510 --> 00:06:09,660
done my job then finally a behavior

00:06:08,550 --> 00:06:11,639
driven development / that's what we're

00:06:09,660 --> 00:06:13,050
going to talk about and it's very very

00:06:11,639 --> 00:06:13,770
interesting by far the most interesting

00:06:13,050 --> 00:06:16,650
thing on here at least from my

00:06:13,770 --> 00:06:18,690
perspective so the the the the grandpa

00:06:16,650 --> 00:06:19,950
of this of course in technology if

00:06:18,690 --> 00:06:22,560
you're a grandpa of something it

00:06:19,950 --> 00:06:24,330
happened only ten years ago the grandpa

00:06:22,560 --> 00:06:25,800
this is dan north and he said this is a

00:06:24,330 --> 00:06:28,320
good quote said behavior is a more

00:06:25,800 --> 00:06:30,090
useful word than test ideas we need test

00:06:28,320 --> 00:06:31,650
for application but instead of having

00:06:30,090 --> 00:06:33,270
them be something that's buried in the

00:06:31,650 --> 00:06:35,940
developers fearsome where it's very

00:06:33,270 --> 00:06:38,010
technical we want to elevate those so

00:06:35,940 --> 00:06:39,539
the tests themselves are more about the

00:06:38,010 --> 00:06:40,340
behavior what does the user do did they

00:06:39,539 --> 00:06:41,870
go to this page

00:06:40,340 --> 00:06:43,699
they click this link when they click

00:06:41,870 --> 00:06:45,380
this link what did they see that's the

00:06:43,699 --> 00:06:46,460
kind of language that developers

00:06:45,380 --> 00:06:48,410
understand that's what they're building

00:06:46,460 --> 00:06:49,520
all the way up to the least technical

00:06:48,410 --> 00:06:52,850
people they understand that that's what

00:06:49,520 --> 00:06:54,229
they're doing as well I'll mention this

00:06:52,850 --> 00:06:55,520
really quickly I'm not going to go over

00:06:54,229 --> 00:06:57,350
this but if you are curious about this

00:06:55,520 --> 00:06:59,840
there's two types of BDD there's story

00:06:57,350 --> 00:07:01,430
BTW their spec BDD roughly what that's

00:06:59,840 --> 00:07:03,020
talking about is unit test versus

00:07:01,430 --> 00:07:04,880
functional test if that's not making any

00:07:03,020 --> 00:07:06,470
sense to you don't worry about it if

00:07:04,880 --> 00:07:08,180
you're like ooh I mean I know what that

00:07:06,470 --> 00:07:09,560
means and that's really interesting then

00:07:08,180 --> 00:07:10,790
go ahead and check out if you're

00:07:09,560 --> 00:07:12,380
interested in the spec we're gonna talk

00:07:10,790 --> 00:07:15,320
about the story BDD so if you're

00:07:12,380 --> 00:07:16,850
interested about the spec BDD then you

00:07:15,320 --> 00:07:18,410
can check out this library which you're

00:07:16,850 --> 00:07:19,550
not going to talk about it's a little

00:07:18,410 --> 00:07:22,340
bit low level it's a little bit more of

00:07:19,550 --> 00:07:24,229
a developer tool only but it's also very

00:07:22,340 --> 00:07:27,919
nice so we're going to talk about what's

00:07:24,229 --> 00:07:30,770
called scenario oriented BDD and by the

00:07:27,919 --> 00:07:33,139
way we're gonna do actually that's how

00:07:30,770 --> 00:07:36,500
many people would in the room would

00:07:33,139 --> 00:07:37,460
consider themselves developers okay

00:07:36,500 --> 00:07:38,960
that's good that's kind of I thought

00:07:37,460 --> 00:07:40,039
that was most of the room and for those

00:07:38,960 --> 00:07:41,360
of you that didn't raise your hands it's

00:07:40,039 --> 00:07:42,350
okay we're also going to be going

00:07:41,360 --> 00:07:43,729
through stuff that's kind of useful

00:07:42,350 --> 00:07:45,020
across the whole thing because the whole

00:07:43,729 --> 00:07:46,430
idea of what we're doing is supposed to

00:07:45,020 --> 00:07:48,110
be kind of something that can be done on

00:07:46,430 --> 00:07:49,039
an organization-wide basis though we're

00:07:48,110 --> 00:07:51,470
actually going to be going into real

00:07:49,039 --> 00:07:53,360
code but developers hang on with me for

00:07:51,470 --> 00:07:54,350
just like two minutes because we have to

00:07:53,360 --> 00:07:55,550
get a little bit of philosophy and

00:07:54,350 --> 00:07:58,639
they'll actually going to the actual

00:07:55,550 --> 00:08:00,229
practices here so with behavior driven

00:07:58,639 --> 00:08:02,180
development the goal is to create that

00:08:00,229 --> 00:08:03,950
single vocabulary so that when we're

00:08:02,180 --> 00:08:09,289
describing a feature we're all kind of

00:08:03,950 --> 00:08:10,130
using the same language to do it and

00:08:09,289 --> 00:08:11,690
this comes from all the way from

00:08:10,130 --> 00:08:13,550
somebody having like this big idea that

00:08:11,690 --> 00:08:15,560
they don't know about all the way down

00:08:13,550 --> 00:08:16,789
into implementing and testing it at

00:08:15,560 --> 00:08:18,200
every stage we're trying to get back

00:08:16,789 --> 00:08:22,510
down to like what's the actual feature

00:08:18,200 --> 00:08:24,830
supposed to do in this specific language

00:08:22,510 --> 00:08:25,729
so this is the four-part process that

00:08:24,830 --> 00:08:27,620
we're going to file and this is the

00:08:25,729 --> 00:08:29,810
theoretical part this we're going to go

00:08:27,620 --> 00:08:31,010
through these one by one in a second but

00:08:29,810 --> 00:08:32,659
basically here's the situation somebody

00:08:31,010 --> 00:08:34,250
comes with you it's just big idea it's

00:08:32,659 --> 00:08:37,400
like the owner of the company like bust

00:08:34,250 --> 00:08:39,200
into your office or maybe your home on

00:08:37,400 --> 00:08:40,729
the weekend hopefully not listen to your

00:08:39,200 --> 00:08:42,020
office and has this big idea and now we

00:08:40,729 --> 00:08:43,610
need to get that big idea kind of down

00:08:42,020 --> 00:08:45,440
into something that's saying so first

00:08:43,610 --> 00:08:46,760
we're gonna do is it is probably is

00:08:45,440 --> 00:08:48,410
coming in with what we consider maybe

00:08:46,760 --> 00:08:50,180
five different features because he's

00:08:48,410 --> 00:08:51,800
like admin area this and front end this

00:08:50,180 --> 00:08:52,700
and mobile that okay so the first thing

00:08:51,800 --> 00:08:53,750
I do is we're going to define the

00:08:52,700 --> 00:08:55,640
business value first one

00:08:53,750 --> 00:08:57,230
do is focus on the business value of

00:08:55,640 --> 00:08:58,820
whatever the idea is if it doesn't have

00:08:57,230 --> 00:09:00,560
business value then it's not actually

00:08:58,820 --> 00:09:02,120
something we should work on second thing

00:09:00,560 --> 00:09:03,440
is we're going to prioritize those now

00:09:02,120 --> 00:09:04,490
that we've sort of defined five

00:09:03,440 --> 00:09:06,650
different features and their business

00:09:04,490 --> 00:09:08,330
value or prioritize those this one is

00:09:06,650 --> 00:09:11,210
the most important this one is the least

00:09:08,330 --> 00:09:12,800
important step three and this is where

00:09:11,210 --> 00:09:14,480
things get interesting we're going to

00:09:12,800 --> 00:09:16,280
describe those with readable scenarios

00:09:14,480 --> 00:09:17,390
and we'll see scenarios later but

00:09:16,280 --> 00:09:20,600
they're actually when we start talking

00:09:17,390 --> 00:09:22,340
about what the actual user story is

00:09:20,600 --> 00:09:23,690
meaning they go to this page they click

00:09:22,340 --> 00:09:26,060
on this they do this that would be a

00:09:23,690 --> 00:09:27,620
scenario describing your feature and

00:09:26,060 --> 00:09:30,800
then finally and of course this is the

00:09:27,620 --> 00:09:32,000
behavior driven development part once

00:09:30,800 --> 00:09:33,530
we've done all that we're actually going

00:09:32,000 --> 00:09:35,210
to implement it so the idea is we can

00:09:33,530 --> 00:09:36,800
describe in this language exactly how

00:09:35,210 --> 00:09:39,080
future supposed to work and that's

00:09:36,800 --> 00:09:41,090
actually the starting point for the

00:09:39,080 --> 00:09:42,260
development process regardless of

00:09:41,090 --> 00:09:43,880
whether the developers the ones that

00:09:42,260 --> 00:09:45,050
wrote that or for project managers ones

00:09:43,880 --> 00:09:47,150
I've written that we actually have this

00:09:45,050 --> 00:09:48,890
specification and the important thing

00:09:47,150 --> 00:09:51,440
here is the specification is from the

00:09:48,890 --> 00:09:53,480
users perspective because no one on the

00:09:51,440 --> 00:09:55,010
business side cares whether or not we

00:09:53,480 --> 00:09:56,990
had to create a new database table for

00:09:55,010 --> 00:09:58,610
this what they care about is the users

00:09:56,990 --> 00:10:01,220
behavior you're able to go to this page

00:09:58,610 --> 00:10:02,930
click on this and see this result so

00:10:01,220 --> 00:10:04,760
that needs to be the starting point for

00:10:02,930 --> 00:10:06,830
us as developers to actually make sure

00:10:04,760 --> 00:10:09,830
that we're accomplishing the end

00:10:06,830 --> 00:10:11,300
behavior the end goal that they want so

00:10:09,830 --> 00:10:12,350
this is where something called gherkin

00:10:11,300 --> 00:10:15,710
comes in how many people have heard of

00:10:12,350 --> 00:10:17,810
gherkin okay okay it's like a 25 percent

00:10:15,710 --> 00:10:19,700
or so unfortunately it's very easy

00:10:17,810 --> 00:10:21,890
gherkin is a language and it's the

00:10:19,700 --> 00:10:23,380
language that is used to describe

00:10:21,890 --> 00:10:26,150
features again we have all these ideas

00:10:23,380 --> 00:10:27,800
somehow we have to sit down ideally it

00:10:26,150 --> 00:10:29,270
doesn't have to be this way but what if

00:10:27,800 --> 00:10:31,160
we are all describing these features

00:10:29,270 --> 00:10:32,180
with a structured language because

00:10:31,160 --> 00:10:33,410
obviously like anything else we're

00:10:32,180 --> 00:10:35,120
developers so we know that if we're all

00:10:33,410 --> 00:10:37,550
speaking the same language then we're

00:10:35,120 --> 00:10:38,870
going to communicate more efficiently so

00:10:37,550 --> 00:10:40,970
a project consists of many features that

00:10:38,870 --> 00:10:42,920
need to be planned planned written and

00:10:40,970 --> 00:10:45,350
shared somehow already it might just be

00:10:42,920 --> 00:10:47,150
right now an email or something that's

00:10:45,350 --> 00:10:48,830
jotted on a piece of paper and then hand

00:10:47,150 --> 00:10:50,510
it to you so gherkin is the structured

00:10:48,830 --> 00:10:53,420
language to do that and it looks like

00:10:50,510 --> 00:10:55,160
this so again the idea is that we have

00:10:53,420 --> 00:10:59,210
five features coming in and we've

00:10:55,160 --> 00:11:00,950
decided to put separate those five

00:10:59,210 --> 00:11:02,300
features and we're going to do this so

00:11:00,950 --> 00:11:04,220
this would actually go into a file and

00:11:02,300 --> 00:11:06,950
we would describe the feature using this

00:11:04,220 --> 00:11:08,990
format now there's

00:11:06,950 --> 00:11:10,160
three sort of I guess there's four

00:11:08,990 --> 00:11:11,720
variables they're the first ones just

00:11:10,160 --> 00:11:13,130
feature and that's just a title so we do

00:11:11,720 --> 00:11:14,990
something like feature and just kind of

00:11:13,130 --> 00:11:17,030
some title that you would know this is a

00:11:14,990 --> 00:11:18,050
feature for the admin area then the

00:11:17,030 --> 00:11:19,700
three other parts are very very

00:11:18,050 --> 00:11:21,710
important the first part in order to

00:11:19,700 --> 00:11:23,510
this defines the business value and it's

00:11:21,710 --> 00:11:24,620
print for developers this is the hardest

00:11:23,510 --> 00:11:25,760
one to get right because we're not used

00:11:24,620 --> 00:11:27,380
to necessarily thinking about the

00:11:25,760 --> 00:11:29,450
business value and I'll go over some

00:11:27,380 --> 00:11:31,490
good ones and some bad ones later but we

00:11:29,450 --> 00:11:35,600
typically think of something like in

00:11:31,490 --> 00:11:37,430
order to let's sit here like in order to

00:11:35,600 --> 00:11:38,930
access the admin area that's your

00:11:37,430 --> 00:11:41,240
business value i was like accessing the

00:11:38,930 --> 00:11:42,470
admin area is not business value you're

00:11:41,240 --> 00:11:43,910
not making any money because your atom

00:11:42,470 --> 00:11:45,170
is able to go into the add the admin

00:11:43,910 --> 00:11:47,120
area you're making money because

00:11:45,170 --> 00:11:48,770
something more like in order to be

00:11:47,120 --> 00:11:50,090
managed the products that are on the

00:11:48,770 --> 00:11:52,130
front of our site that's kind of the

00:11:50,090 --> 00:11:54,440
business value so a is the business

00:11:52,130 --> 00:11:57,410
value and i'll give examples of these

00:11:54,440 --> 00:11:59,180
specifics b is the role or person who

00:11:57,410 --> 00:12:00,740
will benefit so if we go on with the one

00:11:59,180 --> 00:12:02,360
i said earlier it be some sort of admin

00:12:00,740 --> 00:12:05,360
user or owner of the company some sort

00:12:02,360 --> 00:12:09,770
of or content editor and then see here

00:12:05,360 --> 00:12:11,210
is a short feature description ok so

00:12:09,770 --> 00:12:12,860
we're to come back to this but a and b

00:12:11,210 --> 00:12:14,480
are the two big ones the business value

00:12:12,860 --> 00:12:19,610
and who's going to benefit from that

00:12:14,480 --> 00:12:21,380
business value so here's a kind of first

00:12:19,610 --> 00:12:22,520
example so it's you know the company

00:12:21,380 --> 00:12:24,110
that says hey we need to have our site

00:12:22,520 --> 00:12:26,240
in french ok so this is what your

00:12:24,110 --> 00:12:27,770
feature might look like for that the

00:12:26,240 --> 00:12:29,390
business value is to be able to read the

00:12:27,770 --> 00:12:31,220
news and french that makes sense and you

00:12:29,390 --> 00:12:32,210
could actually decide that's not really

00:12:31,220 --> 00:12:34,010
a good business value because we

00:12:32,210 --> 00:12:35,540
actually don't have any french users so

00:12:34,010 --> 00:12:36,620
it kind of spells out whether or not

00:12:35,540 --> 00:12:38,270
that's actually going to be important to

00:12:36,620 --> 00:12:39,500
you as a french user that would

00:12:38,270 --> 00:12:41,390
obviously be the person that's going to

00:12:39,500 --> 00:12:42,590
benefit from this business value so its

00:12:41,390 --> 00:12:44,090
first two lines that i know this is all

00:12:42,590 --> 00:12:46,910
kind of theoretical stuff still at this

00:12:44,090 --> 00:12:49,490
point they force anyone on the chain and

00:12:46,910 --> 00:12:51,560
this is mostly developers in the room to

00:12:49,490 --> 00:12:52,850
think about the feature like why am i

00:12:51,560 --> 00:12:54,830
building this in the first place and

00:12:52,850 --> 00:12:56,780
who's going to benefit neff just that

00:12:54,830 --> 00:12:59,570
small process like believe me like i do

00:12:56,780 --> 00:13:02,210
this this is how i do my size this helps

00:12:59,570 --> 00:13:03,440
you focus on what is actually going on

00:13:02,210 --> 00:13:05,300
and like why they would actually want

00:13:03,440 --> 00:13:07,310
something and potentially ask really

00:13:05,300 --> 00:13:12,410
constructive questions back like why are

00:13:07,310 --> 00:13:13,730
we doing this again okay so that step

00:13:12,410 --> 00:13:15,470
one would you dealt it you'd basically

00:13:13,730 --> 00:13:18,020
do that for all the different features

00:13:15,470 --> 00:13:19,700
that are coming in step two is that

00:13:18,020 --> 00:13:20,630
you'd prioritize those so let's say we

00:13:19,700 --> 00:13:21,800
have three different features

00:13:20,630 --> 00:13:22,880
those are the three features right there

00:13:21,800 --> 00:13:25,040
I've obviously not showing the other

00:13:22,880 --> 00:13:26,360
lines and you just prioritize those this

00:13:25,040 --> 00:13:27,890
is not something by the way this process

00:13:26,360 --> 00:13:29,990
that you necessarily need to do this is

00:13:27,890 --> 00:13:31,940
just a kind of a framework it says if

00:13:29,990 --> 00:13:33,230
you use this process you can see how

00:13:31,940 --> 00:13:35,150
easy it is all of a sudden when you

00:13:33,230 --> 00:13:36,610
approach a large feature now that you've

00:13:35,150 --> 00:13:38,510
broken it down into smaller pieces

00:13:36,610 --> 00:13:41,660
prioritize like well where do we start

00:13:38,510 --> 00:13:43,310
well that depends on basically how

00:13:41,660 --> 00:13:44,840
important each of those business values

00:13:43,310 --> 00:13:46,280
are it's important for you guys to be

00:13:44,840 --> 00:13:48,350
able to start adding things into the

00:13:46,280 --> 00:13:50,060
admin interface immediately then you're

00:13:48,350 --> 00:13:52,340
going to want to start with the features

00:13:50,060 --> 00:13:56,210
that benefit the admin user because the

00:13:52,340 --> 00:13:58,520
front end stuff would happen later okay

00:13:56,210 --> 00:14:00,080
now this is where things start to get a

00:13:58,520 --> 00:14:01,850
little bit more interesting so we have

00:14:00,080 --> 00:14:03,110
our feature and we're almost ready to

00:14:01,850 --> 00:14:06,080
start developing on it this is where we

00:14:03,110 --> 00:14:08,060
start describing it as scenarios and the

00:14:06,080 --> 00:14:10,340
scenarios are always written in the

00:14:08,060 --> 00:14:12,740
first person point of view of the person

00:14:10,340 --> 00:14:14,810
benefiting from it so that line up there

00:14:12,740 --> 00:14:17,390
as a site administrator in this case all

00:14:14,810 --> 00:14:19,160
the eyes down on one I do this we are

00:14:17,390 --> 00:14:20,960
the site administrator and we're talking

00:14:19,160 --> 00:14:22,970
at the technical level of the site

00:14:20,960 --> 00:14:25,640
administrator because the goal here is

00:14:22,970 --> 00:14:27,560
to fold one for us to kind of understand

00:14:25,640 --> 00:14:30,140
and be able to get a speck of what we

00:14:27,560 --> 00:14:32,180
need to build and two to do it in a

00:14:30,140 --> 00:14:34,480
language that can actually be understood

00:14:32,180 --> 00:14:38,300
by the person we're developing it for

00:14:34,480 --> 00:14:40,610
right and if we can't describe the users

00:14:38,300 --> 00:14:42,170
behavior and their language then this

00:14:40,610 --> 00:14:44,240
might not be a well thought out feature

00:14:42,170 --> 00:14:45,980
if it's so technical that we can't even

00:14:44,240 --> 00:14:48,020
describe it in language that they would

00:14:45,980 --> 00:14:50,090
describe and something is poison

00:14:48,020 --> 00:14:52,730
something is amiss with the situation so

00:14:50,090 --> 00:14:54,470
I think let's actually go down the next

00:14:52,730 --> 00:14:56,630
one and break this down scenarios

00:14:54,470 --> 00:14:58,490
breakdown and snares the feature thing a

00:14:56,630 --> 00:14:59,840
second ago that's important and it's

00:14:58,490 --> 00:15:01,730
important to focus on business value

00:14:59,840 --> 00:15:04,580
these scenarios this is where things are

00:15:01,730 --> 00:15:05,900
very important so they always kind of

00:15:04,580 --> 00:15:09,050
break down into the same three pieces

00:15:05,900 --> 00:15:10,190
which is given when and then and as I go

00:15:09,050 --> 00:15:11,480
through this even if you haven't seen

00:15:10,190 --> 00:15:12,620
gherkin before you're going to be

00:15:11,480 --> 00:15:14,510
familiar with this because these are

00:15:12,620 --> 00:15:16,940
basically user stories they're just

00:15:14,510 --> 00:15:18,890
structured in a very specific way so

00:15:16,940 --> 00:15:21,200
given is always your way to kind of play

00:15:18,890 --> 00:15:22,820
God and set up things so if you need to

00:15:21,200 --> 00:15:24,680
make sure that there are three page

00:15:22,820 --> 00:15:26,780
nodes and on your site or something

00:15:24,680 --> 00:15:29,270
before you start writing your scenario

00:15:26,780 --> 00:15:31,220
that's your spot to basically play God

00:15:29,270 --> 00:15:33,230
and set up the system the initial state

00:15:31,220 --> 00:15:33,980
of the system before the user would

00:15:33,230 --> 00:15:35,900
start interact

00:15:33,980 --> 00:15:39,230
with it so this guy's give an IM on /

00:15:35,900 --> 00:15:43,370
admin / news page the second part when

00:15:39,230 --> 00:15:45,140
is the action they're going to take so

00:15:43,370 --> 00:15:47,390
it's always gonna be some setup and then

00:15:45,140 --> 00:15:49,700
your users going to take action and then

00:15:47,390 --> 00:15:51,320
finally then is going to be what do they

00:15:49,700 --> 00:15:53,270
observe after they took that action and

00:15:51,320 --> 00:15:54,260
this makes sense right I'm always we

00:15:53,270 --> 00:15:56,620
always want to use her to do something

00:15:54,260 --> 00:15:59,870
and then observe that something happened

00:15:56,620 --> 00:16:01,280
and of course the you can also say and

00:15:59,870 --> 00:16:03,020
and but and that's just a way to chain

00:16:01,280 --> 00:16:04,430
it so the fact that we have and I fill

00:16:03,020 --> 00:16:06,290
in and and I press those are just

00:16:04,430 --> 00:16:09,080
basically when's those are user actions

00:16:06,290 --> 00:16:14,960
so always given when and then and that's

00:16:09,080 --> 00:16:16,250
a single user path this is just one more

00:16:14,960 --> 00:16:18,530
example because by the way when as you

00:16:16,250 --> 00:16:19,820
get into this stuff this is kind of the

00:16:18,530 --> 00:16:22,250
hardest part is to kind of get a feel

00:16:19,820 --> 00:16:24,500
for how this natural language should be

00:16:22,250 --> 00:16:25,220
so given there are five news articles

00:16:24,500 --> 00:16:26,540
that sort of thing you're kind of

00:16:25,220 --> 00:16:28,340
playing God and say okay we're going to

00:16:26,540 --> 00:16:30,050
start this user storm and make sure

00:16:28,340 --> 00:16:32,840
there's five articles in the database to

00:16:30,050 --> 00:16:34,730
start because when I am on / admin page

00:16:32,840 --> 00:16:36,290
and I click news administration then I

00:16:34,730 --> 00:16:38,570
should see 5 news articles that's your

00:16:36,290 --> 00:16:39,980
way to kind of say hey when you know

00:16:38,570 --> 00:16:41,690
this is this is basically the behavior

00:16:39,980 --> 00:16:44,950
that we expect from the news admin

00:16:41,690 --> 00:16:48,260
Sechrist are the article admin section

00:16:44,950 --> 00:16:50,480
so we're about to kind of switch gears

00:16:48,260 --> 00:16:52,940
into what we can do with the Gurk and

00:16:50,480 --> 00:16:54,950
stuff if nothing else if we didn't do

00:16:52,940 --> 00:16:58,280
anything else I want you to walk away

00:16:54,950 --> 00:16:59,480
and say that was interesting we should

00:16:58,280 --> 00:17:01,070
kind of like look at that gherkin

00:16:59,480 --> 00:17:02,450
language and at the very least kind of

00:17:01,070 --> 00:17:04,040
maybe start to structure our

00:17:02,450 --> 00:17:05,360
conversations in that way at least of

00:17:04,040 --> 00:17:07,550
thinking about things in terms of

00:17:05,360 --> 00:17:09,080
scenarios and user stories because that

00:17:07,550 --> 00:17:10,040
made sense and breaking things down in

00:17:09,080 --> 00:17:12,320
the features it would give us that kind

00:17:10,040 --> 00:17:15,350
of consistent language just to help make

00:17:12,320 --> 00:17:16,070
things a little bit more sane but it's

00:17:15,350 --> 00:17:17,450
going to get much better than this

00:17:16,070 --> 00:17:18,920
because we're going to turn those into

00:17:17,450 --> 00:17:22,430
tests and this is where things get

00:17:18,920 --> 00:17:23,900
really nutty so the behavior driven

00:17:22,430 --> 00:17:25,160
development and gherkin is what we've

00:17:23,900 --> 00:17:27,560
talked about so far we're going to

00:17:25,160 --> 00:17:31,460
switch gears now to a library called B

00:17:27,560 --> 00:17:32,870
hat so having a standard way of

00:17:31,460 --> 00:17:35,150
describing our features and our

00:17:32,870 --> 00:17:37,580
scenarios is cool having that human

00:17:35,150 --> 00:17:40,460
readable language execute as functional

00:17:37,580 --> 00:17:44,180
tests against our application is way way

00:17:40,460 --> 00:17:45,140
more interesting so be happy so I'm

00:17:44,180 --> 00:17:47,510
gonna introduce a few different

00:17:45,140 --> 00:17:49,760
libraries you guys piece by piece okay

00:17:47,510 --> 00:17:52,880
the first one is B hat this is just a

00:17:49,760 --> 00:17:54,200
PHP library and what it allows you to do

00:17:52,880 --> 00:17:57,080
and you'll see why this is useful in a

00:17:54,200 --> 00:17:59,330
second is it allows it basically allows

00:17:57,080 --> 00:18:01,220
you to write those scenarios the given

00:17:59,330 --> 00:18:03,350
the one and the been what it does is it

00:18:01,220 --> 00:18:06,020
parses those given whens and then and

00:18:03,350 --> 00:18:08,570
for each of those lines execute the PHP

00:18:06,020 --> 00:18:10,070
function the idea is that we say

00:18:08,570 --> 00:18:12,350
something like given there are five

00:18:10,070 --> 00:18:14,570
articles in the database that would map

00:18:12,350 --> 00:18:15,950
to a PHP function where in that function

00:18:14,570 --> 00:18:17,750
we actually guarantee that there are

00:18:15,950 --> 00:18:18,920
five articles in the database so we'll

00:18:17,750 --> 00:18:20,840
write human readable sentences it's

00:18:18,920 --> 00:18:25,100
going to be executing a PHP function for

00:18:20,840 --> 00:18:28,370
each of those sentences how many people

00:18:25,100 --> 00:18:29,960
have heard of composer that is more than

00:18:28,370 --> 00:18:31,010
i was expecting that is great so that's

00:18:29,960 --> 00:18:32,900
great i'm not going to talk about

00:18:31,010 --> 00:18:34,340
composure composure i mean i'm gonna

00:18:32,900 --> 00:18:36,740
talk about obviously i'm not gonna talk

00:18:34,340 --> 00:18:37,670
about composure composure is a okay so

00:18:36,740 --> 00:18:39,800
i'm gonna talk about clothes are very

00:18:37,670 --> 00:18:40,970
little bit it's a glorified downloader

00:18:39,800 --> 00:18:42,650
it's actually much more than that's a

00:18:40,970 --> 00:18:48,620
sort of fundamental change in symphony

00:18:42,650 --> 00:18:50,420
symphony in PHP Wow fundamental change

00:18:48,620 --> 00:18:52,640
in PHP that's going to allow all the

00:18:50,420 --> 00:18:54,710
different communities to share code and

00:18:52,640 --> 00:18:56,000
shared libraries much more easily but

00:18:54,710 --> 00:18:57,470
for our purposes it's a glorified

00:18:56,000 --> 00:18:59,690
downloader and it's going to help us

00:18:57,470 --> 00:19:01,820
download the B hat library into our

00:18:59,690 --> 00:19:03,590
project so by the way i'll post these

00:19:01,820 --> 00:19:06,140
slides online and also as i go through

00:19:03,590 --> 00:19:08,120
these slides I will have little bit

00:19:06,140 --> 00:19:09,530
leaves in different spots so if you're

00:19:08,120 --> 00:19:10,970
like what was that code that he used to

00:19:09,530 --> 00:19:14,300
install be hat I have bit lays on here

00:19:10,970 --> 00:19:15,950
so you can just jot those down so this

00:19:14,300 --> 00:19:18,200
is what using composer looks like

00:19:15,950 --> 00:19:20,900
composers just say far file which is an

00:19:18,200 --> 00:19:22,550
executable PHP file so you grab it and

00:19:20,900 --> 00:19:24,680
then you make it composed about JSON

00:19:22,550 --> 00:19:26,090
file which looks like this and this is

00:19:24,680 --> 00:19:28,100
basically a fancy little file that says

00:19:26,090 --> 00:19:31,640
please go download the B hat library

00:19:28,100 --> 00:19:34,970
into my project okay so this is all

00:19:31,640 --> 00:19:36,620
about composer at this point so I'm not

00:19:34,970 --> 00:19:38,240
going to park on that too much and this

00:19:36,620 --> 00:19:40,220
is the actual way that you tell composer

00:19:38,240 --> 00:19:41,660
go read that composer that JSON file

00:19:40,220 --> 00:19:45,320
which is just configuration file and

00:19:41,660 --> 00:19:48,820
download be hat which is what we had

00:19:45,320 --> 00:19:51,740
under that require key into our project

00:19:48,820 --> 00:19:54,020
okay now if you aren't familiar with

00:19:51,740 --> 00:19:57,020
composer the end result of this step is

00:19:54,020 --> 00:19:58,520
we now have the B hat library downloaded

00:19:57,020 --> 00:20:00,210
into a vendor directory in our project

00:19:58,520 --> 00:20:01,950
and that's it

00:20:00,210 --> 00:20:03,420
so nothing really scary is happen it's

00:20:01,950 --> 00:20:04,500
just downloaded it for us but this is

00:20:03,420 --> 00:20:09,570
the way that you're actually can install

00:20:04,500 --> 00:20:11,130
it one other thing that it did so I

00:20:09,570 --> 00:20:12,870
serve light a little bit so it download

00:20:11,130 --> 00:20:15,060
a B hat into the vendor directory and it

00:20:12,870 --> 00:20:17,220
also gave you a bin slash b hat

00:20:15,060 --> 00:20:19,260
executable and quite literally like if

00:20:17,220 --> 00:20:21,420
you you could do all this inside of your

00:20:19,260 --> 00:20:22,890
drupal project it will put be out of the

00:20:21,420 --> 00:20:25,500
vendor directory and give you this bin

00:20:22,890 --> 00:20:26,970
slash b hat file you can run it this is

00:20:25,500 --> 00:20:28,740
just an executable and this is what

00:20:26,970 --> 00:20:30,150
running p hat looks like this is

00:20:28,740 --> 00:20:32,280
obviously it's sort of help page and

00:20:30,150 --> 00:20:34,200
we're going to use B hat several times

00:20:32,280 --> 00:20:35,490
so so far we have B hat and a vendor

00:20:34,200 --> 00:20:37,310
directory and we have a single

00:20:35,490 --> 00:20:41,430
executable file and that's it nothing

00:20:37,310 --> 00:20:44,910
it's scary or impressive yet so what B

00:20:41,430 --> 00:20:46,500
hat needs to work is feature files and

00:20:44,910 --> 00:20:48,720
so earlier when we were creating our

00:20:46,500 --> 00:20:50,370
feature I said for each for you to you

00:20:48,720 --> 00:20:52,410
put that in a file that quite literally

00:20:50,370 --> 00:20:55,080
means that we will create a file called

00:20:52,410 --> 00:20:56,880
something like article admin top feature

00:20:55,080 --> 00:20:58,710
and we will put the feature and the

00:20:56,880 --> 00:21:00,630
scenarios on to that feature inside of

00:20:58,710 --> 00:21:05,040
that file so Abby hat needs is just

00:21:00,630 --> 00:21:06,630
these feature files a single PHP class

00:21:05,040 --> 00:21:07,680
which is going to be empty by default

00:21:06,630 --> 00:21:10,350
I'll show you that in a second and

00:21:07,680 --> 00:21:11,700
that's it and later we're going to add a

00:21:10,350 --> 00:21:13,130
configuration file but we're not going

00:21:11,700 --> 00:21:15,090
to do that worry about that yet so

00:21:13,130 --> 00:21:16,140
basically the only thing you need to

00:21:15,090 --> 00:21:18,060
start with B hat once you've installed

00:21:16,140 --> 00:21:19,800
it is a single PHP class you run bin

00:21:18,060 --> 00:21:22,440
slash b hat dash dash in it and that

00:21:19,800 --> 00:21:23,910
gives you that single class so you can

00:21:22,440 --> 00:21:26,130
see it created a features directory a

00:21:23,910 --> 00:21:28,620
feature / bootstrap directory and then a

00:21:26,130 --> 00:21:31,110
features bootstrap feature context PHP

00:21:28,620 --> 00:21:32,610
class so so far I have B hat downloaded

00:21:31,110 --> 00:21:34,650
into my vendor directory I have that bin

00:21:32,610 --> 00:21:36,660
slash behead executable which I've just

00:21:34,650 --> 00:21:37,890
used to create this one file and we'll

00:21:36,660 --> 00:21:39,780
talk about why that's important that

00:21:37,890 --> 00:21:41,610
files in fort in a second but I want to

00:21:39,780 --> 00:21:43,110
keep keep the score if you will about

00:21:41,610 --> 00:21:44,850
just the few things that are happening

00:21:43,110 --> 00:21:46,890
there aren't big global weird changes

00:21:44,850 --> 00:21:48,570
happening and this is what that class

00:21:46,890 --> 00:21:50,040
looks like by default so i'll talk more

00:21:48,570 --> 00:21:52,350
about the significance of this in a

00:21:50,040 --> 00:21:54,720
second but it is literally an empty

00:21:52,350 --> 00:22:00,720
class so did generate this file don't

00:21:54,720 --> 00:22:02,280
worry about this yet cool so let's um

00:22:00,720 --> 00:22:03,090
we're obviously going to work our way up

00:22:02,280 --> 00:22:05,160
to doing some really interesting

00:22:03,090 --> 00:22:07,380
interesting things with our testing your

00:22:05,160 --> 00:22:09,780
websites let's first test the using the

00:22:07,380 --> 00:22:12,270
LS program so let's kind of rewind 20

00:22:09,780 --> 00:22:14,070
years or 30 years or 40 years probably

00:22:12,270 --> 00:22:15,870
40 years to when

00:22:14,070 --> 00:22:18,810
basically pretend like we're developing

00:22:15,870 --> 00:22:20,160
the LS utility for unix so linus

00:22:18,810 --> 00:22:21,390
torvalds like calls you on his phone and

00:22:20,160 --> 00:22:23,250
you guys are talking and he's okay I

00:22:21,390 --> 00:22:24,300
need you to build the LS utility for me

00:22:23,250 --> 00:22:26,670
and you're like you know i'm going to

00:22:24,300 --> 00:22:28,500
use be hat to test them behavior driven

00:22:26,670 --> 00:22:30,480
development so we're going to describe

00:22:28,500 --> 00:22:32,100
the LS as a feature so what I've done

00:22:30,480 --> 00:22:33,300
here see member it created that features

00:22:32,100 --> 00:22:36,440
directory so I'm actually going to put

00:22:33,300 --> 00:22:40,130
an LSA file in the features directory

00:22:36,440 --> 00:22:42,810
and I'm not going to talk less about the

00:22:40,130 --> 00:22:44,340
feature stuff up on top but you can see

00:22:42,810 --> 00:22:46,380
that's the business value and the person

00:22:44,340 --> 00:22:47,940
that's going to benefit from it and then

00:22:46,380 --> 00:22:50,160
this is your first requirement Linus

00:22:47,940 --> 00:22:51,990
says okay hey if you have two files in

00:22:50,160 --> 00:22:53,280
the directory then when you run LS you

00:22:51,990 --> 00:22:54,600
should be able to see them that's the

00:22:53,280 --> 00:22:56,250
behavior of the application it's like

00:22:54,600 --> 00:22:58,410
okay that's a scenario that's sort of

00:22:56,250 --> 00:23:00,870
like one user flow so let's turn that

00:22:58,410 --> 00:23:02,400
into a scenario and remember we're

00:23:00,870 --> 00:23:04,050
writing in the natural of the voice of a

00:23:02,400 --> 00:23:05,460
UNIX user because that's who was going

00:23:04,050 --> 00:23:07,080
to get a benefit for our business value

00:23:05,460 --> 00:23:09,060
so it makes sense for us to run commands

00:23:07,080 --> 00:23:11,250
and do other things that I a UNIX user

00:23:09,060 --> 00:23:13,170
is comfortable doing so the scenario is

00:23:11,250 --> 00:23:15,690
to list two files in the directory so

00:23:13,170 --> 00:23:19,830
given I have a file name foo and I have

00:23:15,690 --> 00:23:21,060
a file name bar when I run LS then I

00:23:19,830 --> 00:23:23,970
should see foo in the output and I

00:23:21,060 --> 00:23:26,250
should see bar on the output okay and by

00:23:23,970 --> 00:23:28,200
the way I'm just making this language up

00:23:26,250 --> 00:23:29,460
I'm following given when then but other

00:23:28,200 --> 00:23:31,590
than that I'm just saying whatever

00:23:29,460 --> 00:23:34,980
sounds most natural to me putting myself

00:23:31,590 --> 00:23:36,840
in the shoes of a UNIX user so there's

00:23:34,980 --> 00:23:38,490
not any roars why why did I use this

00:23:36,840 --> 00:23:40,920
word here or something like that this is

00:23:38,490 --> 00:23:42,780
just me making these things up so now

00:23:40,920 --> 00:23:44,220
we've run that we've written our first

00:23:42,780 --> 00:23:45,570
feature file with a single scenario in

00:23:44,220 --> 00:23:47,700
there we're going to execute behalf in

00:23:45,570 --> 00:23:49,020
the command line and this is what it

00:23:47,700 --> 00:23:50,430
looks like you can see it's actually

00:23:49,020 --> 00:23:52,250
finding our feature file and you can see

00:23:50,430 --> 00:23:54,690
it going over our scenario there and

00:23:52,250 --> 00:23:56,340
what it's saying is it says five

00:23:54,690 --> 00:23:57,870
undefined steps there in the bottom

00:23:56,340 --> 00:24:00,060
remember what B hat does it reads each

00:23:57,870 --> 00:24:02,700
of those lines by the way each each of

00:24:00,060 --> 00:24:04,380
these lines is called a step so i'll say

00:24:02,700 --> 00:24:06,780
steps sometimes and i'll also say kind

00:24:04,380 --> 00:24:08,910
of scenario line sometimes so five

00:24:06,780 --> 00:24:11,340
undefined steps because it tries to find

00:24:08,910 --> 00:24:12,960
a function for every step so i'm going

00:24:11,340 --> 00:24:14,850
to read this step is one line i'm gonna

00:24:12,960 --> 00:24:18,180
try to find a function to execute for

00:24:14,850 --> 00:24:21,060
that and the way it does that is via

00:24:18,180 --> 00:24:22,500
regular expressions so below that output

00:24:21,060 --> 00:24:24,360
that you just saw so this is still a

00:24:22,500 --> 00:24:26,220
command line it actually prints out a

00:24:24,360 --> 00:24:27,990
bunch of regular expression functions

00:24:26,220 --> 00:24:32,490
that you are then going to

00:24:27,990 --> 00:24:33,660
copy into that feature context class so

00:24:32,490 --> 00:24:35,429
you end up with something that looks

00:24:33,660 --> 00:24:36,929
like this so you wrote this language you

00:24:35,429 --> 00:24:39,090
just invented that language you ran be

00:24:36,929 --> 00:24:41,550
hat and be had actually dumped out all

00:24:39,090 --> 00:24:44,070
these functions with regular expressions

00:24:41,550 --> 00:24:45,870
above them that match the language that

00:24:44,070 --> 00:24:47,309
you used inside of your scenario so the

00:24:45,870 --> 00:24:49,230
one on top is a regular expression it

00:24:47,309 --> 00:24:51,210
says given I have a file named and then

00:24:49,230 --> 00:24:56,000
there's a little like wild card syntax

00:24:51,210 --> 00:24:58,350
there anytime you quote text inside of a

00:24:56,000 --> 00:25:01,650
scenario so like given I have a file

00:24:58,350 --> 00:25:03,330
named quote foo unquote when it

00:25:01,650 --> 00:25:05,160
generates the regular expression for you

00:25:03,330 --> 00:25:07,860
it puts that in a what little wild card

00:25:05,160 --> 00:25:09,630
syntax there and then when that line is

00:25:07,860 --> 00:25:11,610
actually read next time it reads given I

00:25:09,630 --> 00:25:15,090
have a file named foo it will execute

00:25:11,610 --> 00:25:17,429
this function and as for the arg1 value

00:25:15,090 --> 00:25:23,580
it will pass you foo or bar or whatever

00:25:17,429 --> 00:25:24,929
you have there so step 5 here is all we

00:25:23,580 --> 00:25:26,940
need to do now is we wrote the scenario

00:25:24,929 --> 00:25:28,260
it generated all the PHP code and

00:25:26,940 --> 00:25:29,850
regular expression stuff that we needed

00:25:28,260 --> 00:25:31,590
so we don't ever have to write regular

00:25:29,850 --> 00:25:33,179
expressions with this i member when i

00:25:31,590 --> 00:25:34,559
first started hearing about be had I was

00:25:33,179 --> 00:25:35,820
like I was like I know what the next

00:25:34,559 --> 00:25:37,770
step it's going to be it's going to be

00:25:35,820 --> 00:25:40,320
regular expressions and i'm going to

00:25:37,770 --> 00:25:41,220
leave so no regular expressions i use be

00:25:40,320 --> 00:25:43,530
head all the time i've never actually

00:25:41,220 --> 00:25:45,480
even really needed to tweak a regular

00:25:43,530 --> 00:25:47,010
expression so it generated the methods

00:25:45,480 --> 00:25:49,170
for us with the regular expressions

00:25:47,010 --> 00:25:51,870
above them all we need to do now is fill

00:25:49,170 --> 00:25:53,760
in the guts of that so I given I have a

00:25:51,870 --> 00:25:55,110
file name foo we'll just touch that file

00:25:53,760 --> 00:25:57,360
to make sure it's there I have a

00:25:55,110 --> 00:26:00,300
directory named der so we're using make

00:25:57,360 --> 00:26:01,950
there I run that's us running of command

00:26:00,300 --> 00:26:04,410
so we use the exec function to run it

00:26:01,950 --> 00:26:07,559
and then then I should see in the output

00:26:04,410 --> 00:26:10,020
and don't worry about this but basically

00:26:07,559 --> 00:26:11,940
this is using basically this last line

00:26:10,020 --> 00:26:14,910
does here and I did this kind of mostly

00:26:11,940 --> 00:26:16,650
for brevity on this slide here is it

00:26:14,910 --> 00:26:18,240
basically checks to see if this string

00:26:16,650 --> 00:26:19,860
here is in that output and if it's not

00:26:18,240 --> 00:26:21,990
it throws an exception it throws an

00:26:19,860 --> 00:26:24,360
error so you could actually just do

00:26:21,990 --> 00:26:25,679
normal string checking there to see if

00:26:24,360 --> 00:26:29,250
this string is in that string and it's

00:26:25,679 --> 00:26:31,050
not throw an exception so now when we

00:26:29,250 --> 00:26:33,690
run bin b-hat it actually passes this

00:26:31,050 --> 00:26:36,000
time so what B hat does it reads each of

00:26:33,690 --> 00:26:38,130
those steps and then execute the

00:26:36,000 --> 00:26:39,809
function that's tied to it by regular

00:26:38,130 --> 00:26:41,370
expression and of course what we are

00:26:39,809 --> 00:26:43,380
doing in those functions is

00:26:41,370 --> 00:26:45,690
creating a file creating another file

00:26:43,380 --> 00:26:47,309
running LS and then verifying that those

00:26:45,690 --> 00:26:50,460
things were in the output so actually

00:26:47,309 --> 00:26:52,440
behind here if I like did a fitted like

00:26:50,460 --> 00:26:54,240
an LS here I'd actually physically see a

00:26:52,440 --> 00:26:55,559
foo in a bar file because that we were

00:26:54,240 --> 00:27:00,059
just creating a few in a bar file right

00:26:55,559 --> 00:27:01,440
inside that directory yes I was forget i

00:27:00,059 --> 00:27:05,610
have this slide up there how many people

00:27:01,440 --> 00:27:09,840
know what this is okay i figured it's a

00:27:05,610 --> 00:27:11,250
celebratory thing if you want to see the

00:27:09,840 --> 00:27:12,660
LS things alice things really cool as

00:27:11,250 --> 00:27:14,040
far as like how be had itself works

00:27:12,660 --> 00:27:15,059
there's a bit ly and i'll post the

00:27:14,040 --> 00:27:17,340
slides later and actually goes through

00:27:15,059 --> 00:27:20,130
some some other complexities and things

00:27:17,340 --> 00:27:22,740
that you'd actually do in this case so

00:27:20,130 --> 00:27:25,020
again be hat you rewrite a scenario step

00:27:22,740 --> 00:27:27,360
it matches the regular expression inside

00:27:25,020 --> 00:27:30,300
the feature contacts class so it calls

00:27:27,360 --> 00:27:33,870
that function and then in that function

00:27:30,300 --> 00:27:36,620
we do something and then unless the

00:27:33,870 --> 00:27:39,120
function throws an exception it's a pass

00:27:36,620 --> 00:27:40,530
so the way that you fail as you throw an

00:27:39,120 --> 00:27:46,050
exception inside that function and that

00:27:40,530 --> 00:27:48,090
would actually come up as a failure cool

00:27:46,050 --> 00:27:50,490
so let's go on to the next part here so

00:27:48,090 --> 00:27:52,920
having a this Ellis thing is cool but

00:27:50,490 --> 00:27:55,890
let's end the end goal of course is to

00:27:52,920 --> 00:27:56,790
do something on the web so one more

00:27:55,890 --> 00:27:57,929
library and we're going to put them

00:27:56,790 --> 00:27:59,910
together and all kinds of crazy things

00:27:57,929 --> 00:28:02,700
are going to happen so be hat execute

00:27:59,910 --> 00:28:04,500
functions mink totally different library

00:28:02,700 --> 00:28:07,559
which is wonderful mink is probably my

00:28:04,500 --> 00:28:09,630
all-time favorite single library inside

00:28:07,559 --> 00:28:11,100
of PHP and I would use it in any project

00:28:09,630 --> 00:28:13,110
where I was doing any type of testing at

00:28:11,100 --> 00:28:15,450
all so what it is it's a standalone

00:28:13,110 --> 00:28:17,070
library so just you guys can bring this

00:28:15,450 --> 00:28:18,840
library or either these libraries into

00:28:17,070 --> 00:28:20,340
your Drupal five projects right now if

00:28:18,840 --> 00:28:22,740
you wanted to just a standalone library

00:28:20,340 --> 00:28:24,960
bring it in there and it allows you to

00:28:22,740 --> 00:28:27,120
command a browser in PHP so kind of you

00:28:24,960 --> 00:28:28,620
would have a functions or you're where

00:28:27,120 --> 00:28:31,200
you're basically able to say go to this

00:28:28,620 --> 00:28:33,059
page click on this link fill out this

00:28:31,200 --> 00:28:34,380
form press this button and then look on

00:28:33,059 --> 00:28:38,880
the screen to see if you saw what you

00:28:34,380 --> 00:28:40,440
thought you would see so we're gonna go

00:28:38,880 --> 00:28:43,380
through make very quickly it's a very

00:28:40,440 --> 00:28:44,760
easy library fortunately this is what it

00:28:43,380 --> 00:28:46,320
looks like to use mink directly you

00:28:44,760 --> 00:28:47,700
create what's called a driver and a

00:28:46,320 --> 00:28:50,040
session those aren't very important

00:28:47,700 --> 00:28:51,600
until the next slide and this is

00:28:50,040 --> 00:28:52,679
actually what you have me do that

00:28:51,600 --> 00:28:54,620
session you can think of that as

00:28:52,679 --> 00:28:55,760
basically like a browser so you say

00:28:54,620 --> 00:28:57,350
session arrow visit you give it a

00:28:55,760 --> 00:28:59,360
website and then once you've done that

00:28:57,350 --> 00:29:03,680
you can get the status code and get the

00:28:59,360 --> 00:29:05,930
current URL from that page you can also

00:29:03,680 --> 00:29:08,120
go further to you CSS selectors so okay

00:29:05,930 --> 00:29:10,010
I went to be hat org now that I'm there

00:29:08,120 --> 00:29:13,550
I can use CSS selectors to drill down

00:29:10,010 --> 00:29:14,870
into different parts of my dom and once

00:29:13,550 --> 00:29:18,740
I've done that I could actually go into

00:29:14,870 --> 00:29:21,920
the text attributes HTML anything I want

00:29:18,740 --> 00:29:24,800
about those and ultimately like click on

00:29:21,920 --> 00:29:26,300
an element or fill out an HTML form or

00:29:24,800 --> 00:29:27,620
do whatever you want what's happening in

00:29:26,300 --> 00:29:29,900
the background we run this so this is

00:29:27,620 --> 00:29:31,010
actually just a PHP file and if I if I

00:29:29,900 --> 00:29:33,050
just went to the command line and

00:29:31,010 --> 00:29:35,380
executed this PHP file it's actually in

00:29:33,050 --> 00:29:37,370
the background by default using curl

00:29:35,380 --> 00:29:40,100
it's going in the background actually

00:29:37,370 --> 00:29:41,900
going to be had org and then going

00:29:40,100 --> 00:29:44,000
through the DOM and actually finding the

00:29:41,900 --> 00:29:45,470
link and clicking the link and if we had

00:29:44,000 --> 00:29:47,510
it filling out forms and be physically

00:29:45,470 --> 00:29:48,920
going there and finding the form fields

00:29:47,510 --> 00:29:51,500
that we want to fill out filling those

00:29:48,920 --> 00:29:54,050
out and actually submitting the the form

00:29:51,500 --> 00:29:55,490
so this is actually making real HTTP

00:29:54,050 --> 00:29:57,650
requests in the background this is not

00:29:55,490 --> 00:29:58,970
some sort of fake system this is

00:29:57,650 --> 00:30:02,540
effectively like a very powerful

00:29:58,970 --> 00:30:03,800
crawling tool to other things I will

00:30:02,540 --> 00:30:05,600
tell you about well sort of one other

00:30:03,800 --> 00:30:07,700
thing I'll say about this is very easily

00:30:05,600 --> 00:30:09,980
and we'll see this in a second very

00:30:07,700 --> 00:30:11,480
easily without changing anything but one

00:30:09,980 --> 00:30:14,360
line in the beginning I can have this

00:30:11,480 --> 00:30:15,440
test run selenium let's change one line

00:30:14,360 --> 00:30:17,090
at the beginning and all of a sudden a

00:30:15,440 --> 00:30:18,200
real browsers popping up and you're

00:30:17,090 --> 00:30:20,090
clicking here and it's actually going

00:30:18,200 --> 00:30:22,179
there and this is why this stuff gets so

00:30:20,090 --> 00:30:24,350
powerful because you're going to have

00:30:22,179 --> 00:30:25,760
things that you want to test that rely

00:30:24,350 --> 00:30:27,559
on JavaScript and you can't do that

00:30:25,760 --> 00:30:29,900
unless you open in selenium or something

00:30:27,559 --> 00:30:32,450
like zombie but basically something

00:30:29,900 --> 00:30:35,510
other than just curl requests the other

00:30:32,450 --> 00:30:37,429
thing is it means coa this this le click

00:30:35,510 --> 00:30:39,470
thing here lots of other functions that

00:30:37,429 --> 00:30:41,030
you can use on that especially for well

00:30:39,470 --> 00:30:42,559
it's most interesting if you're using

00:30:41,030 --> 00:30:45,620
something like selenium you can say

00:30:42,559 --> 00:30:50,210
double click right click hover over

00:30:45,620 --> 00:30:53,090
hover off blur focus right click drag

00:30:50,210 --> 00:30:55,580
too so you can actually use this

00:30:53,090 --> 00:30:58,400
interface to say find this CSS element

00:30:55,580 --> 00:30:59,809
and drag it to this other one that's all

00:30:58,400 --> 00:31:01,550
possible they're basically isn't

00:30:59,809 --> 00:31:03,920
anything I haven't found that this API

00:31:01,550 --> 00:31:07,390
can't do it's all there even like the

00:31:03,920 --> 00:31:07,390
weirdest JavaScript II kind of stuff

00:31:07,610 --> 00:31:12,080
so if we're able to have this mink

00:31:09,320 --> 00:31:14,240
object inside of B hat instead of our

00:31:12,080 --> 00:31:15,740
feature context inside the place or a

00:31:14,240 --> 00:31:17,720
second ago we were just touching files

00:31:15,740 --> 00:31:19,100
and doing very low-level things we could

00:31:17,720 --> 00:31:22,280
be very dangerous because then we could

00:31:19,100 --> 00:31:24,740
start saying things like given I am on /

00:31:22,280 --> 00:31:27,610
admin and then in our function we can

00:31:24,740 --> 00:31:29,540
say okay mink go to the / admin page

00:31:27,610 --> 00:31:31,280
okay that's exactly we're gonna do and

00:31:29,540 --> 00:31:34,910
we're going to do it with a very very

00:31:31,280 --> 00:31:36,470
small amount of effort so B hat and make

00:31:34,910 --> 00:31:38,480
are two different libraries mink

00:31:36,470 --> 00:31:40,040
extension is a plugin so when you hear

00:31:38,480 --> 00:31:42,049
extension in the B hat world that's the

00:31:40,040 --> 00:31:43,309
name for a B hat plugin so making

00:31:42,049 --> 00:31:47,740
extension is going to make putting these

00:31:43,309 --> 00:31:47,740
together just a matter of configuration

00:31:48,460 --> 00:31:52,490
cool so I'll go pata passes quickly but

00:31:50,870 --> 00:31:54,169
basically if you were served following

00:31:52,490 --> 00:31:56,090
along with your project you already have

00:31:54,169 --> 00:31:57,620
B hat installed so all you need to do at

00:31:56,090 --> 00:32:00,919
this point is install a mink and this

00:31:57,620 --> 00:32:02,510
make extension library which is nothing

00:32:00,919 --> 00:32:03,740
more than again this is composer stuff

00:32:02,510 --> 00:32:05,720
but again all this is doing is just

00:32:03,740 --> 00:32:07,700
downloading things into the vendor

00:32:05,720 --> 00:32:12,169
directory of our project glorified way

00:32:07,700 --> 00:32:13,760
of doing that so you can just a few more

00:32:12,169 --> 00:32:15,830
libraries up there that's that we need

00:32:13,760 --> 00:32:17,000
so are all this does is add a few more

00:32:15,830 --> 00:32:20,120
things into our vendor directory and

00:32:17,000 --> 00:32:22,970
that's it i'm a big proponent you could

00:32:20,120 --> 00:32:24,770
probably tell about less layers and

00:32:22,970 --> 00:32:26,179
simple things I don't like I don't like

00:32:24,770 --> 00:32:27,559
going to talk and being like that was

00:32:26,179 --> 00:32:29,030
cool except I have no idea what's going

00:32:27,559 --> 00:32:30,410
on he told me to like to start using

00:32:29,030 --> 00:32:32,330
windows again or something and I got

00:32:30,410 --> 00:32:35,840
scared now it's very very small layers

00:32:32,330 --> 00:32:37,190
here at this point we have like five

00:32:35,840 --> 00:32:39,230
different libraries that are in the

00:32:37,190 --> 00:32:41,809
vendor directory of our project the

00:32:39,230 --> 00:32:44,090
feature context class and a single dot

00:32:41,809 --> 00:32:49,100
feature file and that's it so there's

00:32:44,090 --> 00:32:50,330
not a lot going on in this case we are

00:32:49,100 --> 00:32:52,010
going to create What's Up B hat that

00:32:50,330 --> 00:32:53,840
yanno file so so far we haven't done any

00:32:52,010 --> 00:32:55,820
configuration of B hat and for the most

00:32:53,840 --> 00:32:57,830
part you don't you will make this B hat

00:32:55,820 --> 00:33:00,290
yamo file and what this basically says

00:32:57,830 --> 00:33:01,669
is hey B hat look at this mink extension

00:33:00,290 --> 00:33:03,470
thing so that you can tie them together

00:33:01,669 --> 00:33:04,910
so not going to park on this detail but

00:33:03,470 --> 00:33:06,410
this is what the B hat configuration

00:33:04,910 --> 00:33:08,120
file looks like it just sits at the root

00:33:06,410 --> 00:33:09,500
of your project the only interesting

00:33:08,120 --> 00:33:11,390
thing here is probably the base URL so

00:33:09,500 --> 00:33:12,770
if you're testing your application that

00:33:11,390 --> 00:33:14,059
would be if you let's say we're doing

00:33:12,770 --> 00:33:15,590
local development that would be

00:33:14,059 --> 00:33:17,960
something like you know my site that

00:33:15,590 --> 00:33:19,400
local because when we use B hat and make

00:33:17,960 --> 00:33:21,260
together in a second that's going to

00:33:19,400 --> 00:33:21,450
tell it kind of what domain to be making

00:33:21,260 --> 00:33:25,289
there

00:33:21,450 --> 00:33:28,260
costs ooh and the only change you need

00:33:25,289 --> 00:33:31,110
to do is go to the future context class

00:33:28,260 --> 00:33:34,019
and change it to extend mink context

00:33:31,110 --> 00:33:35,159
instead of B hat context now some of you

00:33:34,019 --> 00:33:37,019
in the room are going to be very

00:33:35,159 --> 00:33:38,700
comfortable with the namespaces object

00:33:37,019 --> 00:33:41,760
oriented stuff and other people are not

00:33:38,700 --> 00:33:43,740
going to be asked comfortable there when

00:33:41,760 --> 00:33:45,049
you use B hat this is obviously object

00:33:43,740 --> 00:33:46,980
oriented stuff now for the most part

00:33:45,049 --> 00:33:48,600
depending well it depends on your level

00:33:46,980 --> 00:33:50,730
you may not deal with this stuff very

00:33:48,600 --> 00:33:52,139
much or you may deal with it a lot it

00:33:50,730 --> 00:33:54,480
basically depends on where you are in

00:33:52,139 --> 00:33:58,230
the developer food chain are you a

00:33:54,480 --> 00:33:59,340
developer you more of a QA person so for

00:33:58,230 --> 00:34:00,840
the most part though don't let that

00:33:59,340 --> 00:34:03,059
scare you the good news about this stuff

00:34:00,840 --> 00:34:05,370
and by the way B hat is not a brand new

00:34:03,059 --> 00:34:06,929
idea this is based off of cucumber so

00:34:05,370 --> 00:34:10,139
you don't have to use P hat you can use

00:34:06,929 --> 00:34:11,849
cucumber but the reason we have B hat is

00:34:10,139 --> 00:34:13,349
because we're PHP developers and that's

00:34:11,849 --> 00:34:14,970
the syntax that we're familiar with so

00:34:13,349 --> 00:34:16,589
even if you're not totally familiar with

00:34:14,970 --> 00:34:18,780
the object oriented stuff and that's

00:34:16,589 --> 00:34:20,760
somewhat new to you you're still

00:34:18,780 --> 00:34:22,470
developing in PHP so there are going to

00:34:20,760 --> 00:34:23,639
be some weird little things to to kind

00:34:22,470 --> 00:34:25,409
of learn to pick up on as far as the

00:34:23,639 --> 00:34:27,419
object-oriented side of things but it's

00:34:25,409 --> 00:34:28,980
PHP you're calling functions and it

00:34:27,419 --> 00:34:30,210
should feel very familiar versus kind of

00:34:28,980 --> 00:34:31,740
going to a totally different language

00:34:30,210 --> 00:34:33,859
and having your developers try to try to

00:34:31,740 --> 00:34:36,990
do this stuff in something like Ruby

00:34:33,859 --> 00:34:39,149
okay so extending a second ago by the

00:34:36,990 --> 00:34:40,649
way that's it extends be hat contacts in

00:34:39,149 --> 00:34:43,379
over that class was generated for us now

00:34:40,649 --> 00:34:45,210
it says extends meet context that did

00:34:43,379 --> 00:34:47,399
two things for us the first thing is

00:34:45,210 --> 00:34:49,040
anywhere inside of our feature contacts

00:34:47,399 --> 00:34:52,560
class but that's where we write our

00:34:49,040 --> 00:34:54,540
functions we have access to the mink

00:34:52,560 --> 00:34:56,129
object that's when we saw a second ago

00:34:54,540 --> 00:34:57,839
so very quickly now you can see oh man

00:34:56,129 --> 00:34:59,490
I've access the mink object I can start

00:34:57,839 --> 00:35:01,200
making it surf around to different pages

00:34:59,490 --> 00:35:03,660
and find things and click links and

00:35:01,200 --> 00:35:04,859
right click and double-click and the

00:35:03,660 --> 00:35:07,050
second thing it gave you this is much

00:35:04,859 --> 00:35:10,230
more interesting is a pile of

00:35:07,050 --> 00:35:13,890
definitions so a step is a single line

00:35:10,230 --> 00:35:16,589
in a scenario a definition is the PHP

00:35:13,890 --> 00:35:18,450
code that's executed when that step is

00:35:16,589 --> 00:35:20,849
red and one of the great things about

00:35:18,450 --> 00:35:23,040
using B hat is as you use it more and

00:35:20,849 --> 00:35:24,869
more your list of definitions is going

00:35:23,040 --> 00:35:27,060
to get greater and greater and greater

00:35:24,869 --> 00:35:28,859
on day one you may have some basic

00:35:27,060 --> 00:35:30,540
definitions so that you can say hey when

00:35:28,859 --> 00:35:32,099
I go to this page and click this those

00:35:30,540 --> 00:35:33,480
might be built in sentences that you can

00:35:32,099 --> 00:35:34,920
say because those come out of the box

00:35:33,480 --> 00:35:36,900
actually show you that in a second

00:35:34,920 --> 00:35:39,089
but eventually you'll you'll start

00:35:36,900 --> 00:35:40,680
having your own custom definitions and

00:35:39,089 --> 00:35:42,240
what that means is your own custom

00:35:40,680 --> 00:35:44,280
sentences that hook up to some

00:35:42,240 --> 00:35:46,950
functionality and after let's say a few

00:35:44,280 --> 00:35:48,720
weeks or a month your bag of pre-built

00:35:46,950 --> 00:35:50,099
sentences that you can use to test your

00:35:48,720 --> 00:35:51,569
application is going to get greater and

00:35:50,099 --> 00:35:53,520
greater and greater and what ends up

00:35:51,569 --> 00:35:55,470
happening is more and more and more

00:35:53,520 --> 00:35:57,180
you're able to write sentences to test

00:35:55,470 --> 00:35:58,740
your application and not actually have

00:35:57,180 --> 00:36:01,079
to touch PHP code at all because you

00:35:58,740 --> 00:36:02,940
have this big bag of ready to go

00:36:01,079 --> 00:36:04,589
sentences that you can just pull from

00:36:02,940 --> 00:36:06,599
this I go to this page login is this

00:36:04,589 --> 00:36:09,420
user with this role create this node all

00:36:06,599 --> 00:36:11,390
these built-in definitions so a second

00:36:09,420 --> 00:36:14,010
ago before we extended mink context

00:36:11,390 --> 00:36:15,869
those were the four built-in definitions

00:36:14,010 --> 00:36:17,400
we had but that's really the only

00:36:15,869 --> 00:36:19,260
language that we could have used so far

00:36:17,400 --> 00:36:20,730
in our scenario file and obviously those

00:36:19,260 --> 00:36:22,260
are the four that we did for the LS

00:36:20,730 --> 00:36:25,380
feature and by the way I got this by

00:36:22,260 --> 00:36:27,390
running bin / b-hat dl so that stands

00:36:25,380 --> 00:36:31,109
for definition list list my definitions

00:36:27,390 --> 00:36:33,299
after we extended mint context this is

00:36:31,109 --> 00:36:36,240
what we have and I know you can't read

00:36:33,299 --> 00:36:38,880
that which is awesome basically all the

00:36:36,240 --> 00:36:41,549
normal things you do in a web context

00:36:38,880 --> 00:36:44,460
are already done for you when i go to

00:36:41,549 --> 00:36:46,200
slash foo and i click on search and i

00:36:44,460 --> 00:36:48,299
fill in this field and then i should see

00:36:46,200 --> 00:36:49,710
this in this element all those things

00:36:48,299 --> 00:36:51,240
you can say and you don't have to read

00:36:49,710 --> 00:36:53,400
the PHP go to do it because you've

00:36:51,240 --> 00:36:56,970
inherit it now from the make extension

00:36:53,400 --> 00:36:58,680
library so example this suppose we're

00:36:56,970 --> 00:37:01,740
testing wikipedia org or this could be

00:36:58,680 --> 00:37:02,880
your site let's create a feature this

00:37:01,740 --> 00:37:04,290
that's what the future looks like we're

00:37:02,880 --> 00:37:08,069
actually going to test the search part

00:37:04,290 --> 00:37:11,040
of Wikipedia and there's a scenario okay

00:37:08,069 --> 00:37:12,599
given IM on / wiki / main page when I

00:37:11,040 --> 00:37:14,369
fill in search with behavior driven

00:37:12,599 --> 00:37:15,839
development and I press search button

00:37:14,369 --> 00:37:21,680
then I should see agile software

00:37:15,839 --> 00:37:24,420
development this runs without any coding

00:37:21,680 --> 00:37:25,619
because those were all definitions that

00:37:24,420 --> 00:37:27,299
were built in if I looked at that

00:37:25,619 --> 00:37:29,549
definition list you'd have seen things

00:37:27,299 --> 00:37:31,349
like when I go to and then a little wild

00:37:29,549 --> 00:37:33,960
card that tells you you're like oh I can

00:37:31,349 --> 00:37:35,880
just write in my scenario when I go to /

00:37:33,960 --> 00:37:37,650
admin and I don't have to write the PHP

00:37:35,880 --> 00:37:39,599
code to command and make to do that it's

00:37:37,650 --> 00:37:40,770
already done for me so day one you're

00:37:39,599 --> 00:37:42,240
going to get a whole bunch of these

00:37:40,770 --> 00:37:43,770
things out of the box and that's what

00:37:42,240 --> 00:37:45,510
I'm talking about like as the days go by

00:37:43,770 --> 00:37:46,650
you're going to write your own and it's

00:37:45,510 --> 00:37:47,579
going to get bigger and bigger and

00:37:46,650 --> 00:37:48,839
bigger in the menu

00:37:47,579 --> 00:37:52,799
things you're able to do is going to get

00:37:48,839 --> 00:37:54,420
greater and greater and greater so let's

00:37:52,799 --> 00:37:55,829
talk about B hat inside Drupal

00:37:54,420 --> 00:37:57,989
specifically because bien said gerbils

00:37:55,829 --> 00:38:00,180
is actually exceptionally interesting

00:37:57,989 --> 00:38:06,420
because the sort of special challenges

00:38:00,180 --> 00:38:08,069
of having a Drupal application so so far

00:38:06,420 --> 00:38:10,259
we've talked about what I call black box

00:38:08,069 --> 00:38:12,869
testing which is we're here on our local

00:38:10,259 --> 00:38:14,430
development box or some server and we're

00:38:12,869 --> 00:38:16,349
going to test something that's way over

00:38:14,430 --> 00:38:18,630
there totally different server we just

00:38:16,349 --> 00:38:20,759
used B hat and make a second ago to test

00:38:18,630 --> 00:38:23,190
Wikipedia clearly i do not have access

00:38:20,759 --> 00:38:25,559
to wikipedia servers who cares we're

00:38:23,190 --> 00:38:28,109
just making a real HTTP requests so I

00:38:25,559 --> 00:38:29,459
call that black box testing and there

00:38:28,109 --> 00:38:31,229
are some extra challenges with that

00:38:29,459 --> 00:38:32,910
because you can't of course write tests

00:38:31,229 --> 00:38:34,380
that you know if you write a test that

00:38:32,910 --> 00:38:35,940
says you know login with this user name

00:38:34,380 --> 00:38:37,829
in this password your tests have the

00:38:35,940 --> 00:38:39,539
potential to break two weeks later if

00:38:37,829 --> 00:38:41,670
somebody changes that sort of test users

00:38:39,539 --> 00:38:43,200
password so you have special challenges

00:38:41,670 --> 00:38:44,910
when you do the black box testing but

00:38:43,200 --> 00:38:47,039
it's incredibly pragmatic you guys could

00:38:44,910 --> 00:38:48,930
all during the next session at the end

00:38:47,039 --> 00:38:50,190
of this session actually you install B

00:38:48,930 --> 00:38:51,690
hat and start testing your production

00:38:50,190 --> 00:38:53,459
application right from your local

00:38:51,690 --> 00:38:55,319
machine by writing these human readable

00:38:53,459 --> 00:38:56,969
sentences and probably without doing any

00:38:55,319 --> 00:38:59,309
PHP code you could probably do quite a

00:38:56,969 --> 00:39:01,499
bit of damage with it so that's called

00:38:59,309 --> 00:39:02,969
black box testing and then the other way

00:39:01,499 --> 00:39:04,019
of testing is actually more for custom

00:39:02,969 --> 00:39:05,999
development this is where we actually

00:39:04,019 --> 00:39:08,369
take control of the Drupal instance and

00:39:05,999 --> 00:39:10,619
say no no no before I start this test I

00:39:08,369 --> 00:39:12,359
want you to insert these three nodes

00:39:10,619 --> 00:39:13,829
these three page nodes and these two

00:39:12,359 --> 00:39:16,199
users and this user should have an

00:39:13,829 --> 00:39:18,209
administration role so that in the rest

00:39:16,199 --> 00:39:20,400
of the scenario you can say when I login

00:39:18,209 --> 00:39:22,319
is that user and I click to edit this

00:39:20,400 --> 00:39:23,969
node basically the rest of your scenario

00:39:22,319 --> 00:39:24,900
you're guaranteed to have that set of

00:39:23,969 --> 00:39:26,819
data because you've actually taken

00:39:24,900 --> 00:39:29,279
control of Drupal and put those items

00:39:26,819 --> 00:39:30,959
into the database before the test ran so

00:39:29,279 --> 00:39:32,849
it's like how do we do this how do we

00:39:30,959 --> 00:39:35,219
serve bootstrap Drupal or get access to

00:39:32,849 --> 00:39:40,109
Drupal inside of instead of our feature

00:39:35,219 --> 00:39:41,489
context our b-hat class unfortunately

00:39:40,109 --> 00:39:42,959
you don't really have to worry about

00:39:41,489 --> 00:39:44,459
that actually skip past this really

00:39:42,959 --> 00:39:45,719
quickly this is this is exactly i said

00:39:44,459 --> 00:39:48,479
before it's okay if i want to install

00:39:45,719 --> 00:39:50,219
this stuff on my application that bit ly

00:39:48,479 --> 00:39:51,869
up there is just that composed that JSON

00:39:50,219 --> 00:39:53,279
file so number two that was the

00:39:51,869 --> 00:39:56,729
questions like okay how do we get access

00:39:53,279 --> 00:39:58,259
to Drupal and the answer is somebody

00:39:56,729 --> 00:39:59,759
else or two did it for you so

00:39:58,259 --> 00:40:00,990
introducing some of you guys already

00:39:59,759 --> 00:40:01,980
know this but just

00:40:00,990 --> 00:40:03,150
if you do not pretend like you're

00:40:01,980 --> 00:40:04,190
surprised and it's awesome anyways

00:40:03,150 --> 00:40:07,110
because this is really really awesome

00:40:04,190 --> 00:40:11,310
introducing a library made by the Drupal

00:40:07,110 --> 00:40:12,780
community which I did not help with so I

00:40:11,310 --> 00:40:14,160
was like to say when I should not be

00:40:12,780 --> 00:40:15,630
given credit for something though I have

00:40:14,160 --> 00:40:20,000
looked at this library and I was like

00:40:15,630 --> 00:40:24,470
this is awesome called Drupal extension

00:40:20,000 --> 00:40:29,130
yes this is awesome that's nice yeah i

00:40:24,470 --> 00:40:30,390
love you guys so drupal extensions okay

00:40:29,130 --> 00:40:31,590
so you're already excited about it which

00:40:30,390 --> 00:40:34,710
is which is I haven't told you what it

00:40:31,590 --> 00:40:36,270
does yet so it gives you a number of

00:40:34,710 --> 00:40:39,540
things one even more built in step

00:40:36,270 --> 00:40:42,600
definitions so even more things that are

00:40:39,540 --> 00:40:43,650
helpful or drupal specific our sentences

00:40:42,600 --> 00:40:45,119
that you don't have to write any PHP

00:40:43,650 --> 00:40:46,980
code for they're just going to be there

00:40:45,119 --> 00:40:48,930
so if you ran install this Drupal

00:40:46,980 --> 00:40:51,720
extension and ran that bin slash b-hat

00:40:48,930 --> 00:40:53,190
dash dl the definition list the list is

00:40:51,720 --> 00:40:55,500
going to be twice as long with things

00:40:53,190 --> 00:40:57,240
that you can run out of the box second

00:40:55,500 --> 00:40:58,680
thing is it gives you the ability to

00:40:57,240 --> 00:41:01,200
actually hook into your Drupal instance

00:40:58,680 --> 00:41:02,520
and take control the data so very simple

00:41:01,200 --> 00:41:04,860
show an example in a second you can

00:41:02,520 --> 00:41:07,470
start adding nodes and users and and and

00:41:04,860 --> 00:41:09,210
other things it also gives you this is a

00:41:07,470 --> 00:41:10,740
really cool thing which is not Drupal

00:41:09,210 --> 00:41:11,910
specific at all although we didn't

00:41:10,740 --> 00:41:13,770
realize that until I saw these guys

00:41:11,910 --> 00:41:15,000
implement it the idea of regions and

00:41:13,770 --> 00:41:16,590
what this is going to be instead of

00:41:15,000 --> 00:41:18,660
saying something like when I click

00:41:16,590 --> 00:41:20,160
Submit it's like well what if I have

00:41:18,660 --> 00:41:22,950
three buttons on my page that I'll have

00:41:20,160 --> 00:41:24,390
the word submit on its how does a mink

00:41:22,950 --> 00:41:25,800
know which of those three buttons to do

00:41:24,390 --> 00:41:27,119
and in those cases you have to do a

00:41:25,800 --> 00:41:28,500
little bit more work to kind of target

00:41:27,119 --> 00:41:30,180
it well as sort of a built-in support

00:41:28,500 --> 00:41:31,109
for regions so you can basically say i'm

00:41:30,180 --> 00:41:32,369
going to call let's say we have a

00:41:31,109 --> 00:41:33,810
sidebar region i'm gonna go on a

00:41:32,369 --> 00:41:35,970
configuration file and say the sidebar

00:41:33,810 --> 00:41:38,609
region has this CSS selector you know

00:41:35,970 --> 00:41:42,119
sidebar region has pound signs sidebar

00:41:38,609 --> 00:41:45,030
so that's its CSS selector then in your

00:41:42,119 --> 00:41:48,180
steps you can say when I click on search

00:41:45,030 --> 00:41:49,530
in the sidebar region so it makes this

00:41:48,180 --> 00:41:50,760
much easier where you can be confident

00:41:49,530 --> 00:41:53,850
you're targeting the little spot you

00:41:50,760 --> 00:41:55,440
have and the original reason that this

00:41:53,850 --> 00:41:58,230
is sort of thought up is if we change

00:41:55,440 --> 00:41:59,970
themes in theory it can just be a change

00:41:58,230 --> 00:42:01,350
of configuration if you're using a lot

00:41:59,970 --> 00:42:03,180
of regions because your region might not

00:42:01,350 --> 00:42:04,619
be pound sign sidebar anymore it might

00:42:03,180 --> 00:42:06,180
be something different if you're sort of

00:42:04,619 --> 00:42:08,040
referring to it generically as the

00:42:06,180 --> 00:42:09,180
sidebar then you can just change the

00:42:08,040 --> 00:42:11,640
configuration file the point to a

00:42:09,180 --> 00:42:13,619
different CSS selector on this one I

00:42:11,640 --> 00:42:15,749
mention again hooks too low

00:42:13,619 --> 00:42:17,220
more sentence definitions from contribs

00:42:15,749 --> 00:42:19,769
I'm gonna come back that one a second

00:42:17,220 --> 00:42:21,809
one this one has dangerous dangerous

00:42:19,769 --> 00:42:23,279
awesome potential especially with a

00:42:21,809 --> 00:42:24,930
community the size of the Drupal

00:42:23,279 --> 00:42:25,829
community and as active as the Drupal

00:42:24,930 --> 00:42:27,210
community is so I'm gonna talk about

00:42:25,829 --> 00:42:29,069
that I want to get in a second but I was

00:42:27,210 --> 00:42:32,009
showing an example first so this is a

00:42:29,069 --> 00:42:33,660
scenario I am NOT a drupal developer and

00:42:32,009 --> 00:42:35,519
I did this in about five minutes and it

00:42:33,660 --> 00:42:36,869
worked out of the box and I'd know what

00:42:35,519 --> 00:42:38,460
a high nobody to high-five because there

00:42:36,869 --> 00:42:41,549
was nobody there with me but I was

00:42:38,460 --> 00:42:42,990
really excited so given i am logged in

00:42:41,549 --> 00:42:44,069
as a user with the administration roll

00:42:42,990 --> 00:42:45,269
by the way this is using something

00:42:44,069 --> 00:42:48,529
called a background don't worry about

00:42:45,269 --> 00:42:50,819
that basically that's a given statement

00:42:48,529 --> 00:42:52,859
given I'm viewing a cage node with the

00:42:50,819 --> 00:42:54,150
title cool means when i click edit in

00:42:52,859 --> 00:42:55,769
the body region and i fill in the

00:42:54,150 --> 00:42:58,200
following and i press save that i should

00:42:55,769 --> 00:43:04,499
see if some in the body region whoops my

00:42:58,200 --> 00:43:05,759
bad there we go yes and actually this

00:43:04,499 --> 00:43:06,720
actually works I should have been a

00:43:05,759 --> 00:43:09,269
little bit more descriptive with this

00:43:06,720 --> 00:43:11,069
what a better test would have been with

00:43:09,269 --> 00:43:13,349
the title cool beans then I should see

00:43:11,069 --> 00:43:14,400
cool beans in the body region so just

00:43:13,349 --> 00:43:15,749
kind of pretend that's their this

00:43:14,400 --> 00:43:17,369
actually works but not it's not as clear

00:43:15,749 --> 00:43:18,390
as I want to meet so this is what's

00:43:17,369 --> 00:43:20,309
really cool about this this is what the

00:43:18,390 --> 00:43:23,069
Drupal extension installed when I say

00:43:20,309 --> 00:43:24,749
given i am logged in as a user with the

00:43:23,069 --> 00:43:27,029
administration role or they sorry the

00:43:24,749 --> 00:43:28,980
administrator role that actually goes

00:43:27,029 --> 00:43:30,960
behind the scenes creates a user with a

00:43:28,980 --> 00:43:33,690
random username and a random password in

00:43:30,960 --> 00:43:35,759
the database gives them that role then

00:43:33,690 --> 00:43:38,009
tells make to surf to the login page

00:43:35,759 --> 00:43:41,549
puts in the username password of that

00:43:38,009 --> 00:43:43,710
user hit submit and is done all of that

00:43:41,549 --> 00:43:45,660
happened with that one sentence behind

00:43:43,710 --> 00:43:49,099
the scenes yes this is what I'm talking

00:43:45,660 --> 00:43:49,099
about this is incredible potential

00:43:50,430 --> 00:43:54,490
same thing down here given I'm viewing a

00:43:53,109 --> 00:43:57,190
page number title coolbeans this

00:43:54,490 --> 00:43:58,809
actually creates a node of type page and

00:43:57,190 --> 00:44:00,700
gives it that title behind the scenes

00:43:58,809 --> 00:44:02,380
those are built-in definitions that came

00:44:00,700 --> 00:44:05,140
with the Drupal context so you don't

00:44:02,380 --> 00:44:07,119
have to do any coding if you don't want

00:44:05,140 --> 00:44:09,339
to but what's really cool about this of

00:44:07,119 --> 00:44:11,410
course is when you do find something

00:44:09,339 --> 00:44:13,240
that's not built in you know have a

00:44:11,410 --> 00:44:14,710
library this Drupal extension that's

00:44:13,240 --> 00:44:16,420
doing things very similar to what you

00:44:14,710 --> 00:44:17,650
might need to do in Drupal so the

00:44:16,420 --> 00:44:19,329
age-old thing where it's like we have

00:44:17,650 --> 00:44:20,770
examples so even when you need to push

00:44:19,329 --> 00:44:22,210
this further than the Drupal extension

00:44:20,770 --> 00:44:23,530
might be giving you you have a nice

00:44:22,210 --> 00:44:25,059
library that's already doing things

00:44:23,530 --> 00:44:26,319
interacting with Drupal behind the

00:44:25,059 --> 00:44:28,420
scenes and you can be like oh I just

00:44:26,319 --> 00:44:32,020
need that same thing but just changed a

00:44:28,420 --> 00:44:33,579
little bit and then and then this is of

00:44:32,020 --> 00:44:35,319
course is the region thing that I was

00:44:33,579 --> 00:44:36,400
talking about that's specific to the

00:44:35,319 --> 00:44:39,040
Drupal extension as well which I

00:44:36,400 --> 00:44:42,940
actually really really like um so that's

00:44:39,040 --> 00:44:44,799
it so I did a drupal install made out of

00:44:42,940 --> 00:44:47,109
box i installed be hat i wrote that

00:44:44,799 --> 00:44:49,359
feature in that scenario and I ran it it

00:44:47,109 --> 00:44:50,500
worked and that just work completely out

00:44:49,359 --> 00:44:52,180
of the box for me I went to my database

00:44:50,500 --> 00:44:53,500
and I saw there was a new user name in

00:44:52,180 --> 00:44:55,450
there and a new node and all that kind

00:44:53,500 --> 00:44:57,220
of stuff because you know when things

00:44:55,450 --> 00:45:04,780
work on the first try you're usually

00:44:57,220 --> 00:45:06,099
suspect like that oh no these are the

00:45:04,780 --> 00:45:08,200
Drupal extension runs in three different

00:45:06,099 --> 00:45:09,670
modes there's the black box mode that I

00:45:08,200 --> 00:45:11,500
was talking about before there's also a

00:45:09,670 --> 00:45:14,680
Drupal and also add rush mode what these

00:45:11,500 --> 00:45:17,260
define is how should we take control of

00:45:14,680 --> 00:45:19,299
the Drupal instance the black box mode

00:45:17,260 --> 00:45:21,040
doesn't take control at all so if we did

00:45:19,299 --> 00:45:23,319
if we were using the black box mode and

00:45:21,040 --> 00:45:24,670
we wrote given i have a user with the

00:45:23,319 --> 00:45:27,609
administrator role that actually throw

00:45:24,670 --> 00:45:29,079
an air and say in black box mode you've

00:45:27,609 --> 00:45:30,910
you're not allowed to do that and this

00:45:29,079 --> 00:45:33,010
is what you would use you use black box

00:45:30,910 --> 00:45:34,359
mode if you're touching testing against

00:45:33,010 --> 00:45:35,650
your production machine or your staging

00:45:34,359 --> 00:45:37,480
machine and you're not actually

00:45:35,650 --> 00:45:39,190
intending to mutate the data you're

00:45:37,480 --> 00:45:40,900
there to kind of be a witness what I

00:45:39,190 --> 00:45:42,640
really like and this libraries has been

00:45:40,900 --> 00:45:44,680
built beautifully it's just a such a

00:45:42,640 --> 00:45:47,589
fantastic example of developers from

00:45:44,680 --> 00:45:49,599
Drupal community coming in and using a

00:45:47,589 --> 00:45:50,799
tool that was made more by the symphony

00:45:49,599 --> 00:45:52,089
ish community and just doing an

00:45:50,799 --> 00:45:53,650
absolutely wonderful job with the

00:45:52,089 --> 00:45:55,119
implementation of it so if you had the

00:45:53,650 --> 00:45:57,250
scenes you can go into Drupal or drush

00:45:55,119 --> 00:45:59,140
mode so as far as I do want you to take

00:45:57,250 --> 00:46:00,819
control of my drupal instance and insert

00:45:59,140 --> 00:46:02,280
things in the database how does it do

00:46:00,819 --> 00:46:04,050
that the Drupal

00:46:02,280 --> 00:46:06,000
mode which is perfect for local

00:46:04,050 --> 00:46:07,770
development it actually bootstraps that

00:46:06,000 --> 00:46:09,600
local development instance and it could

00:46:07,770 --> 00:46:11,850
just calls the same kind of functions

00:46:09,600 --> 00:46:13,920
you know create note add user those

00:46:11,850 --> 00:46:15,330
types of things those probably aren't

00:46:13,920 --> 00:46:16,590
actually the function name I have used

00:46:15,330 --> 00:46:18,810
those functions before but I'm not

00:46:16,590 --> 00:46:21,180
fluent it uses those to actually create

00:46:18,810 --> 00:46:22,590
those users cool drush that one's very

00:46:21,180 --> 00:46:24,420
interesting this is where it actually

00:46:22,590 --> 00:46:26,820
uses dress behind the scenes so this

00:46:24,420 --> 00:46:28,560
gives you the potential to be executing

00:46:26,820 --> 00:46:30,030
your test locally and have drush

00:46:28,560 --> 00:46:31,830
pointing to some other server it's

00:46:30,030 --> 00:46:33,300
actually adding users and nodes and

00:46:31,830 --> 00:46:36,450
things like that now that one's a little

00:46:33,300 --> 00:46:37,620
bit and I'll kind of mention some of the

00:46:36,450 --> 00:46:39,000
people behind this you can talk them

00:46:37,620 --> 00:46:41,030
after that was a little bit of work in

00:46:39,000 --> 00:46:43,260
process because I don't think that drush

00:46:41,030 --> 00:46:45,060
at least right now version i was using

00:46:43,260 --> 00:46:47,820
necessary supports certain things like

00:46:45,060 --> 00:46:50,670
creating nodes but i'm talking way

00:46:47,820 --> 00:46:53,580
outside of my area of expertise and all

00:46:50,670 --> 00:46:54,870
of this works across the board of course

00:46:53,580 --> 00:46:56,400
this one maybe not because that one's

00:46:54,870 --> 00:46:58,110
changing all the time but basically

00:46:56,400 --> 00:46:59,670
there are drivers inside the library

00:46:58,110 --> 00:47:01,380
that you just set the mode you like I'm

00:46:59,670 --> 00:47:03,870
using Drupal 6 so when it goes to

00:47:01,380 --> 00:47:05,400
interact with Drupal it's like okay

00:47:03,870 --> 00:47:07,320
we're using the Drupal 6 functionality

00:47:05,400 --> 00:47:08,760
or using the Drupal 7 functionality so

00:47:07,320 --> 00:47:10,620
this is not a six seven or eight tool

00:47:08,760 --> 00:47:12,240
it's just been written beautifully so

00:47:10,620 --> 00:47:13,830
it's basically it's got a driver layer

00:47:12,240 --> 00:47:15,120
so that you just tell it what version

00:47:13,830 --> 00:47:17,880
and it knows how to call how to interact

00:47:15,120 --> 00:47:18,870
with your Drupal instance okay this is

00:47:17,880 --> 00:47:19,980
the last thing that was going to talk

00:47:18,870 --> 00:47:22,190
about which is the contributed modules

00:47:19,980 --> 00:47:28,170
and this is where the the potential is

00:47:22,190 --> 00:47:29,520
huge for this community so imagine that

00:47:28,170 --> 00:47:31,230
you bring in a module some popular

00:47:29,520 --> 00:47:33,300
module that helps you thumbnailing or

00:47:31,230 --> 00:47:35,370
the views module and that module

00:47:33,300 --> 00:47:38,460
actually has packaged within it people

00:47:35,370 --> 00:47:40,950
have contributed built-in definitions so

00:47:38,460 --> 00:47:42,810
you install the Drupal extension and you

00:47:40,950 --> 00:47:45,000
get all these beautiful Drupal specific

00:47:42,810 --> 00:47:46,530
things then you install views of course

00:47:45,000 --> 00:47:48,660
i know of uses corn jubilate but just

00:47:46,530 --> 00:47:51,060
follow me with this you install the view

00:47:48,660 --> 00:47:53,040
module in all of a sudden you have 20

00:47:51,060 --> 00:47:54,810
more built-in definitions that are

00:47:53,040 --> 00:47:56,310
specific to views and obviously you have

00:47:54,810 --> 00:47:58,860
things like give and I have a view with

00:47:56,310 --> 00:48:01,110
this and that and this and that so every

00:47:58,860 --> 00:48:03,390
module that you install gives you more

00:48:01,110 --> 00:48:05,490
and more pre-built definitions that you

00:48:03,390 --> 00:48:08,220
could use this is not something that is

00:48:05,490 --> 00:48:10,830
there yet what's there is the Drupal

00:48:08,220 --> 00:48:12,960
extension already has built-in hook

00:48:10,830 --> 00:48:15,480
points to automatically bring those in

00:48:12,960 --> 00:48:16,110
the only thing that the community that

00:48:15,480 --> 00:48:17,550
we need to do

00:48:16,110 --> 00:48:21,120
is actually go into those different

00:48:17,550 --> 00:48:22,980
modules and add them so if you guys are

00:48:21,120 --> 00:48:24,180
using the views module for instance and

00:48:22,980 --> 00:48:25,470
you're testing against that I guarantee

00:48:24,180 --> 00:48:27,450
you're going to start writing sentences

00:48:25,470 --> 00:48:29,010
like this give and I have a view this

00:48:27,450 --> 00:48:30,420
and this and this and behind the scenes

00:48:29,010 --> 00:48:32,370
you're actually going to write the code

00:48:30,420 --> 00:48:34,530
your own custom definition to take care

00:48:32,370 --> 00:48:36,810
of that if you contribute that back to

00:48:34,530 --> 00:48:38,850
the view module and somebody brings the

00:48:36,810 --> 00:48:40,530
view module in this will automatically

00:48:38,850 --> 00:48:41,790
pick that up in the rest of the Drupal

00:48:40,530 --> 00:48:44,010
community which I understand is quite

00:48:41,790 --> 00:48:46,080
big we'll enjoy that and hopefully

00:48:44,010 --> 00:48:47,790
they'll give you your things back and

00:48:46,080 --> 00:48:49,380
this is this is especially interesting

00:48:47,790 --> 00:48:51,000
because of the black box testing is

00:48:49,380 --> 00:48:52,560
obviously you have this a site that's on

00:48:51,000 --> 00:48:56,460
production you didn't necessarily have

00:48:52,560 --> 00:48:58,320
developers or it's a of these ten

00:48:56,460 --> 00:49:01,650
modules installed on it and you can

00:48:58,320 --> 00:49:03,630
actually test it with this huge glossary

00:49:01,650 --> 00:49:04,980
index of these built-in definitions from

00:49:03,630 --> 00:49:07,710
all the different modules that you have

00:49:04,980 --> 00:49:09,690
so this to me if that takes off it's

00:49:07,710 --> 00:49:11,390
game over this is going to get totally

00:49:09,690 --> 00:49:13,710
out of hand and a really exciting way

00:49:11,390 --> 00:49:15,990
really really quickly the fact that as a

00:49:13,710 --> 00:49:17,190
community we're basically sharing these

00:49:15,990 --> 00:49:18,990
definitions these built-in

00:49:17,190 --> 00:49:20,730
functionalities to accomplish things so

00:49:18,990 --> 00:49:22,170
do it this is this is exactly what

00:49:20,730 --> 00:49:24,150
people are going to people are already

00:49:22,170 --> 00:49:25,470
using P hat so matter of us contributing

00:49:24,150 --> 00:49:27,600
things back and kind of getting that

00:49:25,470 --> 00:49:28,890
conversation with them module maintainer

00:49:27,600 --> 00:49:30,960
is that may or may not be familiar with

00:49:28,890 --> 00:49:35,550
behind kind of talking about the the

00:49:30,960 --> 00:49:39,000
pros of doing this last thing I'll talk

00:49:35,550 --> 00:49:40,350
about and it's so easy you want to run

00:49:39,000 --> 00:49:41,640
these tests in selenium because so far

00:49:40,350 --> 00:49:43,230
when you run these tests when you read

00:49:41,640 --> 00:49:44,610
these English sentences it's just

00:49:43,230 --> 00:49:46,260
running curl requests in the background

00:49:44,610 --> 00:49:51,380
it's just silent it's not actually

00:49:46,260 --> 00:49:54,750
opening a real browser that's all you do

00:49:51,380 --> 00:49:57,300
that's it on a scenario by scenario

00:49:54,750 --> 00:49:59,520
basis you opt-in to selenium or you

00:49:57,300 --> 00:50:01,050
don't opt into selenium and that's it so

00:49:59,520 --> 00:50:03,300
if you have a feature with five

00:50:01,050 --> 00:50:05,310
scenarios and only one of them actually

00:50:03,300 --> 00:50:07,350
requires javascript in the rest of them

00:50:05,310 --> 00:50:09,300
it's it's the same JavaScript on or off

00:50:07,350 --> 00:50:10,950
you'd have four scenarios without that

00:50:09,300 --> 00:50:13,140
little at javascript and you doubt the

00:50:10,950 --> 00:50:16,310
job add the at javascript where you need

00:50:13,140 --> 00:50:17,850
it if we ran bin slash p hat with this

00:50:16,310 --> 00:50:19,530
actual i'll come back to that slide

00:50:17,850 --> 00:50:21,210
second it looks exactly the same if you

00:50:19,530 --> 00:50:24,120
could actually see this what happened as

00:50:21,210 --> 00:50:25,950
it ran a browser popped up it did all of

00:50:24,120 --> 00:50:27,570
those things I commanded it to do with

00:50:25,950 --> 00:50:28,790
human readable sentences and then it

00:50:27,570 --> 00:50:32,300
closed and it said

00:50:28,790 --> 00:50:33,950
past so this is real world stuff this is

00:50:32,300 --> 00:50:35,330
why I use B hat and make more than

00:50:33,950 --> 00:50:36,920
anything else because I end up with a

00:50:35,330 --> 00:50:39,170
test suite that's like seventy-five

00:50:36,920 --> 00:50:40,820
percent headless meaning things that

00:50:39,170 --> 00:50:42,560
don't require javascript and if you

00:50:40,820 --> 00:50:43,940
don't open up a browser it runs faster

00:50:42,560 --> 00:50:45,050
because opening up a browser is just

00:50:43,940 --> 00:50:46,460
something that's a little more expensive

00:50:45,050 --> 00:50:48,380
and then I've twenty-five percent of my

00:50:46,460 --> 00:50:50,330
test suite that does require JavaScript

00:50:48,380 --> 00:50:52,370
so I just put that little flag on there

00:50:50,330 --> 00:50:53,330
and I'm done it also makes debugging a

00:50:52,370 --> 00:50:54,170
little bit easier cuz I might have

00:50:53,330 --> 00:50:56,270
something that doesn't require

00:50:54,170 --> 00:50:57,560
javascript but i'll just add the at

00:50:56,270 --> 00:50:59,810
javascript for a second so i can

00:50:57,560 --> 00:51:02,780
actually see it pop up and and actually

00:50:59,810 --> 00:51:04,160
like see what the test is saying so i

00:51:02,780 --> 00:51:07,610
can see like why back my test is failing

00:51:04,160 --> 00:51:09,920
oh and no this is how you run selenium

00:51:07,610 --> 00:51:11,480
so if you ever run selenium you download

00:51:09,920 --> 00:51:13,940
a jar file and you run one command and

00:51:11,480 --> 00:51:15,230
that's it so even the selenium side of

00:51:13,940 --> 00:51:21,560
things at this point is serve ups are

00:51:15,230 --> 00:51:23,360
lazy cool and that basically we're done

00:51:21,560 --> 00:51:25,310
at this point except well I'm done now

00:51:23,360 --> 00:51:27,200
it's your guys's turn your homework 1

00:51:25,310 --> 00:51:28,700
install the Drupal extension it's a

00:51:27,200 --> 00:51:30,560
project on Drupal that's just a bit ly

00:51:28,700 --> 00:51:32,360
to go to the project on Drupal it tells

00:51:30,560 --> 00:51:33,710
you the installation instructions it's

00:51:32,360 --> 00:51:35,660
even easier than what I've told you

00:51:33,710 --> 00:51:39,140
because it takes care of downloading

00:51:35,660 --> 00:51:42,470
everything else for you second writes

00:51:39,140 --> 00:51:44,570
some features for your app and there's

00:51:42,470 --> 00:51:46,730
documentation on how those look and

00:51:44,570 --> 00:51:48,530
that's it high five your teammates and

00:51:46,730 --> 00:51:49,940
celebrate you actually can start testing

00:51:48,530 --> 00:51:52,190
you do this this afternoon you can do

00:51:49,940 --> 00:51:55,100
this set this weekend tomorrow during

00:51:52,190 --> 00:51:56,510
the hackathon and last thing I'll say is

00:51:55,100 --> 00:51:57,500
if you want to go further with this and

00:51:56,510 --> 00:51:59,930
this is I was talking about earlier you

00:51:57,500 --> 00:52:02,210
can go to our website KMP university

00:51:59,930 --> 00:52:03,920
calm that coupon code is going to be

00:52:02,210 --> 00:52:05,240
good until tomorrow so just I see people

00:52:03,920 --> 00:52:06,950
already doing it right now just make an

00:52:05,240 --> 00:52:07,850
account and that usually cost twelve

00:52:06,950 --> 00:52:10,670
dollars we're just giving it away for

00:52:07,850 --> 00:52:12,610
free that's going to take that's really

00:52:10,670 --> 00:52:14,390
going to take you through a lot of the

00:52:12,610 --> 00:52:15,530
basically everything that you're

00:52:14,390 --> 00:52:17,150
actually gonna need to know we don't

00:52:15,530 --> 00:52:18,260
talk about the Drupal extension the only

00:52:17,150 --> 00:52:19,880
thing we don't talk about specifically

00:52:18,260 --> 00:52:22,070
there everything else you need about

00:52:19,880 --> 00:52:24,950
Drupal is going to come from that

00:52:22,070 --> 00:52:26,240
screencaps right there second thing talk

00:52:24,950 --> 00:52:27,470
to the open source of people i haven't

00:52:26,240 --> 00:52:29,120
mentioned their name yet the open

00:52:27,470 --> 00:52:30,500
sorcery people they're a company here in

00:52:29,120 --> 00:52:31,700
portland they're absolutely awesome

00:52:30,500 --> 00:52:33,590
they're the ones that have been so far

00:52:31,700 --> 00:52:34,880
just driving this stuff so there's no

00:52:33,590 --> 00:52:37,460
official company and funding behind

00:52:34,880 --> 00:52:38,270
doing the drupal extension things but

00:52:37,460 --> 00:52:40,430
they've been doing it because they're

00:52:38,270 --> 00:52:41,840
using it as i understand basically on

00:52:40,430 --> 00:52:42,589
everything right now they're using on

00:52:41,840 --> 00:52:44,029
all their client side

00:52:42,589 --> 00:52:45,829
they have been awesome doing wonderful

00:52:44,029 --> 00:52:47,479
things to read their blogs and find

00:52:45,829 --> 00:52:50,089
those guys and last thing my friend

00:52:47,479 --> 00:52:52,249
Melissa Anderson if if you're more of a

00:52:50,089 --> 00:52:54,170
business person more portly anything she

00:52:52,249 --> 00:52:55,729
has been doing tremendous work and she's

00:52:54,170 --> 00:52:57,319
thinking about this problem from a

00:52:55,729 --> 00:52:59,839
holistic thing like who actually writes

00:52:57,319 --> 00:53:02,059
these things who runs them when they

00:52:59,839 --> 00:53:03,259
fail who's notified what are the

00:53:02,059 --> 00:53:05,869
challenges with sort of the live

00:53:03,259 --> 00:53:07,759
blackbox testing type of thing she's

00:53:05,869 --> 00:53:09,499
wonderful she also did quite a bit of

00:53:07,759 --> 00:53:12,529
work on writing b-hat tests for

00:53:09,499 --> 00:53:17,809
drupal.org to facilitate the Drupal 6 to

00:53:12,529 --> 00:53:19,489
7 upgrade there you go oh yeah and she's

00:53:17,809 --> 00:53:21,380
right there yeah thank you yeah she's

00:53:19,489 --> 00:53:23,119
right there on the corner yeah her

00:53:21,380 --> 00:53:26,479
friend was selling her out I thought was

00:53:23,119 --> 00:53:27,589
awesome cool and and that's it the last

00:53:26,479 --> 00:53:29,479
thing I'll say is special thanks to

00:53:27,589 --> 00:53:30,680
jonathan hedstrom he works well with

00:53:29,479 --> 00:53:32,269
sorcery and he was absolutely awesome

00:53:30,680 --> 00:53:34,039
and helping out this and he is the main

00:53:32,269 --> 00:53:36,529
author with along with some other people

00:53:34,039 --> 00:53:37,969
about the Drupal extension and oh and

00:53:36,529 --> 00:53:39,440
that's Lana and I and we love you so

00:53:37,969 --> 00:53:41,920
happy to be here and thank you very much

00:53:39,440 --> 00:53:41,920
for having us

00:53:47,940 --> 00:53:54,010
you can see that I was tweaking things

00:53:50,170 --> 00:53:56,530
last second your question yeah I this

00:53:54,010 --> 00:53:59,140
one yeah it is worth noting also that it

00:53:56,530 --> 00:54:02,380
is very easy and possible to integrate a

00:53:59,140 --> 00:54:04,600
suite of behat tests with Jenkins which

00:54:02,380 --> 00:54:07,480
when you are working with an automated

00:54:04,600 --> 00:54:09,820
dev flow is really really awesome

00:54:07,480 --> 00:54:13,090
because you set up a bunch of tests and

00:54:09,820 --> 00:54:15,220
you have immediate regression testing so

00:54:13,090 --> 00:54:18,640
we are doing that on a number of our

00:54:15,220 --> 00:54:20,680
sites and it is worth the extra one step

00:54:18,640 --> 00:54:22,180
if you are already using Jenkins to

00:54:20,680 --> 00:54:24,730
integrate your behat test with Jenkins

00:54:22,180 --> 00:54:26,260
yeah it's very easy and if you're

00:54:24,730 --> 00:54:27,880
interested in doing that just go tackle

00:54:26,260 --> 00:54:29,410
him because obviously he has lots of

00:54:27,880 --> 00:54:31,480
experience and we do it the same thing

00:54:29,410 --> 00:54:34,180
it's not it's not hard at all so

00:54:31,480 --> 00:54:36,220
absolutely yep do we have any metric

00:54:34,180 --> 00:54:39,190
 on speed comparisons to tune this

00:54:36,220 --> 00:54:40,270
tool and say like you mercara it's as

00:54:39,190 --> 00:54:42,100
far as that's gonna be the same because

00:54:40,270 --> 00:54:43,720
where you slow down its you slow down

00:54:42,100 --> 00:54:44,860
because it's hitting your site so it

00:54:43,720 --> 00:54:46,990
comes down to how fast is your site

00:54:44,860 --> 00:54:48,280
loading as far as like which one lotr

00:54:46,990 --> 00:54:51,460
it's it's not going to be enough your

00:54:48,280 --> 00:54:53,740
site's what's slowing you down so if

00:54:51,460 --> 00:54:56,200
you're using cilenia mm-hmm I'm my

00:54:53,740 --> 00:54:58,000
assumption is that basically especially

00:54:56,200 --> 00:54:59,710
if you're developing on localhost you're

00:54:58,000 --> 00:55:01,720
gonna have a browser window pop up and

00:54:59,710 --> 00:55:04,720
then disappear that's absolutely correct

00:55:01,720 --> 00:55:06,070
yet because like you can barely I doubt

00:55:04,720 --> 00:55:08,680
you'll be able to actually see what's

00:55:06,070 --> 00:55:10,480
going on oh so good so good yeah so is

00:55:08,680 --> 00:55:12,490
there a way to like slow it down and

00:55:10,480 --> 00:55:14,920
like make it do a delay between each

00:55:12,490 --> 00:55:16,180
step yeah so i'm so glad that i paid you

00:55:14,920 --> 00:55:17,890
to ask that question she's gonna know

00:55:16,180 --> 00:55:19,720
that was so I love you already thinking

00:55:17,890 --> 00:55:21,700
ahead to like the debugging thing there

00:55:19,720 --> 00:55:25,870
is an i mentioned in the video but it's

00:55:21,700 --> 00:55:28,570
um I mentioned in the video it's called

00:55:25,870 --> 00:55:31,120
it's a another extension called the B

00:55:28,570 --> 00:55:32,470
hatch extension it adds more custom

00:55:31,120 --> 00:55:34,180
definitions I don't actually use that

00:55:32,470 --> 00:55:35,770
extension but it has a really helpful

00:55:34,180 --> 00:55:37,240
definition in it and if you watch the

00:55:35,770 --> 00:55:39,220
screencast you'll see I go and grab it

00:55:37,240 --> 00:55:40,120
and what it allows you to say is when

00:55:39,220 --> 00:55:41,650
you're running in silentium cuz it's

00:55:40,120 --> 00:55:43,870
right selenium nicely my Salim's that

00:55:41,650 --> 00:55:45,760
run super fast you're like hook but the

00:55:43,870 --> 00:55:47,830
dental corps you know and it closes when

00:55:45,760 --> 00:55:49,480
it fails to so you can't actually see it

00:55:47,830 --> 00:55:51,070
so two things about that I'm actually

00:55:49,480 --> 00:55:53,140
going to change gears here one is it is

00:55:51,070 --> 00:55:54,490
possible also to have screenshots taking

00:55:53,140 --> 00:55:55,750
a failure so there's ways a hook in and

00:55:54,490 --> 00:55:57,550
say it failed so let's take a screenshot

00:55:55,750 --> 00:55:59,240
of what we saw the other thing is you

00:55:57,550 --> 00:56:01,280
make you bringing this custom

00:55:59,240 --> 00:56:02,450
and what it is is the language you make

00:56:01,280 --> 00:56:04,880
the language whatever you want but the

00:56:02,450 --> 00:56:06,290
language I use is I say I break so I

00:56:04,880 --> 00:56:08,810
will see that I have a failure right

00:56:06,290 --> 00:56:11,300
before I let's say I'm about to say I

00:56:08,810 --> 00:56:12,890
say and I click Submit and i get an

00:56:11,300 --> 00:56:14,660
error that says like no submit button

00:56:12,890 --> 00:56:16,340
found some like what's going on is am I

00:56:14,660 --> 00:56:18,410
looking at an error page is submit

00:56:16,340 --> 00:56:21,260
button label something else so right

00:56:18,410 --> 00:56:23,660
above there temporarily output and I

00:56:21,260 --> 00:56:25,100
break and I'll rerun the test and what

00:56:23,660 --> 00:56:26,450
it does is it actually opens up goes

00:56:25,100 --> 00:56:28,160
there does everything and as soon as it

00:56:26,450 --> 00:56:30,800
gets to the and I break it pauses it

00:56:28,160 --> 00:56:32,510
freezes and what's doing if you look at

00:56:30,800 --> 00:56:34,280
the terminal is it just says like press

00:56:32,510 --> 00:56:35,869
ENTER to continue so it'll sit up there

00:56:34,280 --> 00:56:37,610
and just basically sit there and you can

00:56:35,869 --> 00:56:38,810
like right click and inspect element and

00:56:37,610 --> 00:56:39,950
see whatever you want to do and as soon

00:56:38,810 --> 00:56:41,480
as you're satisfied you just go back to

00:56:39,950 --> 00:56:42,770
the terminal hit enter and it keeps

00:56:41,480 --> 00:56:45,380
going so that's not something that's

00:56:42,770 --> 00:56:47,180
built into be hat by default but like i

00:56:45,380 --> 00:56:49,369
said look up the be hatch extension or

00:56:47,180 --> 00:56:51,080
watch our screencast it's about four

00:56:49,369 --> 00:56:52,720
it's a function that's about four lines

00:56:51,080 --> 00:56:54,650
long and it gives you that capability

00:56:52,720 --> 00:56:56,150
probably should probably should be in

00:56:54,650 --> 00:57:01,850
core because i basically can't live

00:56:56,150 --> 00:57:05,240
without it any other questions yes if we

00:57:01,850 --> 00:57:08,150
are we going to create that all right

00:57:05,240 --> 00:57:10,369
perfect so we are going to we as a

00:57:08,150 --> 00:57:12,619
generous word on my part create a B hat

00:57:10,369 --> 00:57:13,670
group on drupal.org so that's not

00:57:12,619 --> 00:57:15,350
created right now but it will create

00:57:13,670 --> 00:57:16,369
either today or tomorrow so find on

00:57:15,350 --> 00:57:18,260
there we can kind of continue the

00:57:16,369 --> 00:57:19,490
conversation and and basically hopefully

00:57:18,260 --> 00:57:21,109
I'll work together to get more and more

00:57:19,490 --> 00:57:25,220
definitions and strategies behind this

00:57:21,109 --> 00:57:26,450
yep I should know if there's an IRC for

00:57:25,220 --> 00:57:29,119
this you'd have to look at you'd have to

00:57:26,450 --> 00:57:32,980
look it up I am I don't know mostly

00:57:29,119 --> 00:57:32,980
because I get distracted easily on IRC

00:57:33,040 --> 00:57:36,859
awesome if you have more questions oh

00:57:35,240 --> 00:57:40,160
here's one more yeah just I have one

00:57:36,859 --> 00:57:41,690
question where i work at we have one

00:57:40,160 --> 00:57:44,869
lady who does all the testing on the

00:57:41,690 --> 00:57:46,880
front end so whenever marketing tells us

00:57:44,869 --> 00:57:48,619
to build something marketing doesn't

00:57:46,880 --> 00:57:50,690
actually test it the people who deal

00:57:48,619 --> 00:57:53,450
with the people who do with our website

00:57:50,690 --> 00:57:55,580
test it one of the problems that we

00:57:53,450 --> 00:57:58,369
found is she's a great tester but a lot

00:57:55,580 --> 00:58:00,859
of times she can't communicate to us

00:57:58,369 --> 00:58:03,980
developers or we don't understand her as

00:58:00,859 --> 00:58:05,780
well as we should in this in our

00:58:03,980 --> 00:58:09,170
scenario would this be helpful where she

00:58:05,780 --> 00:58:11,390
actually creates the B hat win and all

00:58:09,170 --> 00:58:12,780
that stuff and then that creates the

00:58:11,390 --> 00:58:15,300
class and we go in and

00:58:12,780 --> 00:58:16,830
modify it as needed how technical is she

00:58:15,300 --> 00:58:18,420
and what's she doing two tests now she

00:58:16,830 --> 00:58:21,180
testing manually or she doing like

00:58:18,420 --> 00:58:23,700
selenium tests she's we thought about

00:58:21,180 --> 00:58:26,280
throwing selenium on Firefox for her but

00:58:23,700 --> 00:58:30,800
um I don't think she she's able to right

00:58:26,280 --> 00:58:32,430
now okay yeah so um in that case the the

00:58:30,800 --> 00:58:34,140
basically the one of the beautiful

00:58:32,430 --> 00:58:35,490
things about using B hat is when you

00:58:34,140 --> 00:58:36,870
have developers that are comfortable

00:58:35,490 --> 00:58:37,980
with PHP it's going to be a huge tool

00:58:36,870 --> 00:58:40,320
because you can do whatever you want to

00:58:37,980 --> 00:58:42,300
now for people that are less technical

00:58:40,320 --> 00:58:43,530
you bet miss give a few options one of

00:58:42,300 --> 00:58:45,390
the big advantages over this over

00:58:43,530 --> 00:58:47,250
selenium is a selenium requires XPath

00:58:45,390 --> 00:58:49,020
that makes your test very fickle when

00:58:47,250 --> 00:58:51,360
you write these scenarios you rely on

00:58:49,020 --> 00:58:52,620
labels and so as long as your label

00:58:51,360 --> 00:58:54,300
doesn't change no matter if you move

00:58:52,620 --> 00:58:56,550
things around then it's going to be less

00:58:54,300 --> 00:58:58,170
fickle so basically the answer your

00:58:56,550 --> 00:59:01,530
question she may be able to write these

00:58:58,170 --> 00:59:03,330
tests I would try that but it may it may

00:59:01,530 --> 00:59:04,530
end up being too technical for her still

00:59:03,330 --> 00:59:06,450
even to kind of get this pattern down

00:59:04,530 --> 00:59:07,860
there that's something that melissa is

00:59:06,450 --> 00:59:09,210
basically looking at as far as like the

00:59:07,860 --> 00:59:11,430
holistic process of what that would look

00:59:09,210 --> 00:59:14,340
like now in theory if the developers are

00:59:11,430 --> 00:59:15,300
also writing tests for their

00:59:14,340 --> 00:59:17,400
applications and you guys are going to

00:59:15,300 --> 00:59:19,980
be building up a big suite of built-in

00:59:17,400 --> 00:59:21,330
definitions and at some point you could

00:59:19,980 --> 00:59:22,950
actually have her write those built-in

00:59:21,330 --> 00:59:24,210
step definitions because she would have

00:59:22,950 --> 00:59:25,620
a big enough menu that she could

00:59:24,210 --> 00:59:27,240
actually run those now the only problem

00:59:25,620 --> 00:59:29,270
with all this still and this is

00:59:27,240 --> 00:59:31,230
something that I think that we will fix

00:59:29,270 --> 00:59:33,150
shortly like over the next six to 12

00:59:31,230 --> 00:59:35,190
months is that there's no way for a non

00:59:33,150 --> 00:59:37,560
technical person right now to run their

00:59:35,190 --> 00:59:38,790
tests so all this stuff is great human

00:59:37,560 --> 00:59:40,560
readable stuff but it would still be I

00:59:38,790 --> 00:59:42,810
wrote this beautiful human readable

00:59:40,560 --> 00:59:45,060
thing it's using all step definitions

00:59:42,810 --> 00:59:46,110
that are available but I still need to

00:59:45,060 --> 00:59:47,490
go give it to a developers that

00:59:46,110 --> 00:59:49,200
developer can run it from the command

00:59:47,490 --> 00:59:50,670
line okay that's something that actually

00:59:49,200 --> 00:59:52,620
like Melissa what some other people is

00:59:50,670 --> 00:59:54,210
working on because then it's actually

00:59:52,620 --> 00:59:55,560
quite powerful because that's just human

00:59:54,210 --> 00:59:57,600
readable senses is there a web interface

00:59:55,560 --> 00:59:58,980
to actually start using these and click

00:59:57,600 --> 01:00:00,690
and see if they fail then if they fail

00:59:58,980 --> 01:00:02,340
that what's step did they fail and kind

01:00:00,690 --> 01:00:03,780
of bring that up to the higher level

01:00:02,340 --> 01:00:05,850
then it starts to become a more

01:00:03,780 --> 01:00:07,290
interesting tool for the less technical

01:00:05,850 --> 01:00:09,560
people I think that's very important

01:00:07,290 --> 01:00:13,350
yeah we actually have had some success

01:00:09,560 --> 01:00:15,780
kind of on that front with actually even

01:00:13,350 --> 01:00:19,650
a client client project manager who

01:00:15,780 --> 01:00:21,480
wrote out what was more or less a set of

01:00:19,650 --> 01:00:22,800
instructions yeah that's pretty ass not

01:00:21,480 --> 01:00:25,140
exactly the right format but close

01:00:22,800 --> 01:00:25,740
enough right and then you okay well this

01:00:25,140 --> 01:00:27,210
is what they met

01:00:25,740 --> 01:00:28,470
to do and this is the scenario that they

01:00:27,210 --> 01:00:29,850
want to test and then you just take and

01:00:28,470 --> 01:00:33,150
you tweak it so that it fits into the

01:00:29,850 --> 01:00:34,440
regular expressions you get they get it

01:00:33,150 --> 01:00:36,660
close enough so that you can see what

01:00:34,440 --> 01:00:38,310
are they trying to test your level of

01:00:36,660 --> 01:00:40,260
effort for building those tests is

01:00:38,310 --> 01:00:42,570
really nominal once I've done most of

01:00:40,260 --> 01:00:44,400
the work to define what they're actually

01:00:42,570 --> 01:00:45,600
trying to test so I think that's and I

01:00:44,400 --> 01:00:46,800
think that's that's it right there and

01:00:45,600 --> 01:00:48,270
Melissa was actually talking about this

01:00:46,800 --> 01:00:49,890
we're in a meeting before this was like

01:00:48,270 --> 01:00:51,510
you don't necessarily expect your

01:00:49,890 --> 01:00:53,490
project managers or salesman to write

01:00:51,510 --> 01:00:55,230
these perfectly but you can get them to

01:00:53,490 --> 01:00:56,280
write them in because their user stories

01:00:55,230 --> 01:00:57,420
right if you're going to talk about the

01:00:56,280 --> 01:00:59,460
user in action you're going to get that

01:00:57,420 --> 01:01:00,930
and then you do some the effort to get

01:00:59,460 --> 01:01:02,430
those into the actual correct syntax

01:01:00,930 --> 01:01:04,800
sexual correct structured language is

01:01:02,430 --> 01:01:06,840
nominal and you're still kind of forced

01:01:04,800 --> 01:01:08,400
to get into that some even though we're

01:01:06,840 --> 01:01:09,840
the ones writing the Gherkin language

01:01:08,400 --> 01:01:11,910
we're forced to get into that structure

01:01:09,840 --> 01:01:14,010
of thinking about the business value and

01:01:11,910 --> 01:01:16,470
writing out the requirements from a user

01:01:14,010 --> 01:01:18,570
perspective it'll also give you a really

01:01:16,470 --> 01:01:20,520
good insight into oh I didn't think of

01:01:18,570 --> 01:01:23,010
writing a test for this particular

01:01:20,520 --> 01:01:24,780
component but now they want me to write

01:01:23,010 --> 01:01:27,690
this you know this one function this

01:01:24,780 --> 01:01:28,950
this one test is one line oh okay that's

01:01:27,690 --> 01:01:32,310
something that's useful let's write that

01:01:28,950 --> 01:01:33,690
nice oh yeah so here's in yea and no no

01:01:32,310 --> 01:01:35,100
kind of in that case they're almost

01:01:33,690 --> 01:01:37,080
saying something that is translating to

01:01:35,100 --> 01:01:38,250
a step that you don't actually have

01:01:37,080 --> 01:01:39,390
defined because you're gonna really

01:01:38,250 --> 01:01:43,560
thought about that but now you can yeah

01:01:39,390 --> 01:01:44,850
now you can define it awesome alright if

01:01:43,560 --> 01:01:46,500
you have any other questions come find

01:01:44,850 --> 01:01:47,850
any me or any of the people i mentioned

01:01:46,500 --> 01:01:50,420
but thank you guys very very much enjoy

01:01:47,850 --> 01:01:50,420

YouTube URL: https://www.youtube.com/watch?v=b_35hrRSVog


