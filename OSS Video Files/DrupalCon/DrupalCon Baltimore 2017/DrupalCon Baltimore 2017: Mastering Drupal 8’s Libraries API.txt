Title: DrupalCon Baltimore 2017: Mastering Drupal 8’s Libraries API
Publication date: 2017-04-26
Playlist: DrupalCon Baltimore 2017
Description: 
	If you’ve ever had to overwrite a module’s css file or a core javascript library in Drupal 7, you likely remember the experience. And not because it was a glorious encounter that left you teary-eyed at the sheer beauty of its ease and simplicity.

The FOAD technique and the other ways of including of excluding assets are gone. Along with Drupal 8 came the Libraries API and whole new way of managing libraries through a series of yaml files.

The Libraries API grants developers flexibility and control over their css and js assets including the ability to overwrite core libraries, add libraries directly to templates, specify dependencies and more. It’s a big improvement, but it can be a bit of a learning curve to get up to speed on the new system.

This session is for beginner to intermediate front-end developers with at least basic experience theming in Drupal 7 or Drupal 8. You’ll learn how to leverage the Libraries API in Drupal 8 for granular control over how and where css and js assets get added and support new front-end development trends including component-based theming and atomic design.

Speaker Bio

Matt Jager has been interested in development since he first programmed his TI-83 graphing calculator to do his homework in middle school. He currently applies his 8 years of Drupal and front end experience as tech lead and front-end developer at Aten Design Group in Denver, Colorado. He is passionate about creating beautiful, user-centric experiences and also how developers can leverage mindfulness and yoga to be happier and do better work.
Captions: 
	00:00:01,070 --> 00:00:06,690
all right welcome everybody we've got a

00:00:04,680 --> 00:00:08,340
quick 25-minute session here so we're

00:00:06,690 --> 00:00:10,410
going to go ahead and get started so

00:00:08,340 --> 00:00:13,920
this is mastering the library's API in

00:00:10,410 --> 00:00:14,849
duple 8 and if you've done it worked

00:00:13,920 --> 00:00:17,000
with Drupal 8 you've probably noticed

00:00:14,849 --> 00:00:19,410
that placing CSS and JavaScript is

00:00:17,000 --> 00:00:20,220
pretty different from Drupal 7 so we're

00:00:19,410 --> 00:00:24,029
going to talk about some of those

00:00:20,220 --> 00:00:25,710
differences my name is Matt Jagger I'm a

00:00:24,029 --> 00:00:30,060
front-end developer and tech lead at

00:00:25,710 --> 00:00:32,640
Aten design group were a full-service

00:00:30,060 --> 00:00:36,559
strategy design development shop out of

00:00:32,640 --> 00:00:42,390
Denver Colorado and we've got a

00:00:36,559 --> 00:00:43,980
nice-sized team about 25 people where

00:00:42,390 --> 00:00:47,640
project managers designers and engineers

00:00:43,980 --> 00:00:49,350
we build digital projects and we're

00:00:47,640 --> 00:00:50,460
super lucky to work with awesome cause

00:00:49,350 --> 00:00:51,140
different organizations from all over

00:00:50,460 --> 00:00:53,550
the world

00:00:51,140 --> 00:00:56,460
Stanford Human Rights Watch for some of

00:00:53,550 --> 00:00:58,850
our clients and just a couple of

00:00:56,460 --> 00:01:01,320
acknowledgments for we get started a

00:00:58,850 --> 00:01:04,500
presentation by David Hernandez inspired

00:01:01,320 --> 00:01:06,090
a lot of this presentation also borrowed

00:01:04,500 --> 00:01:08,220
some stuff from my colleague John Ferris

00:01:06,090 --> 00:01:11,729
and Peter Weber as well so thanks for

00:01:08,220 --> 00:01:14,010
those guys so why why are we going to

00:01:11,729 --> 00:01:16,920
talk about the libraries API so in

00:01:14,010 --> 00:01:20,280
Drupal 7 it was pretty easy to add CSS

00:01:16,920 --> 00:01:22,229
and JavaScript assets globally but there

00:01:20,280 --> 00:01:25,619
really wasn't a good way to add these

00:01:22,229 --> 00:01:27,780
assets conditionally and we also have

00:01:25,619 --> 00:01:30,960
this problem where if you ever tried to

00:01:27,780 --> 00:01:32,970
override a CSS file from core or core

00:01:30,960 --> 00:01:35,970
JavaScript library you might end up

00:01:32,970 --> 00:01:38,250
doing something really strange like the

00:01:35,970 --> 00:01:39,750
so technique where you're basically

00:01:38,250 --> 00:01:42,270
tricking the system into forgetting

00:01:39,750 --> 00:01:43,950
those CSS files otherwise you have to do

00:01:42,270 --> 00:01:46,049
a ton of overrides so there were some

00:01:43,950 --> 00:01:48,329
hacks in ways that you could you know

00:01:46,049 --> 00:01:50,159
place assets conditionally and stop

00:01:48,329 --> 00:01:52,280
assets from being loaded but they were

00:01:50,159 --> 00:01:55,310
just kind of some combination of

00:01:52,280 --> 00:01:59,159
terrible and disturbing

00:01:55,310 --> 00:02:01,280
so in Drupal 8 we've got a new way of

00:01:59,159 --> 00:02:03,420
managing these assets and libraries

00:02:01,280 --> 00:02:05,729
which at first it can seem a little

00:02:03,420 --> 00:02:07,649
complex where before it might have

00:02:05,729 --> 00:02:09,479
seemed easier but there's a lot more

00:02:07,649 --> 00:02:11,220
flexibility there's a lot more control

00:02:09,479 --> 00:02:15,480
and it's pretty great

00:02:11,220 --> 00:02:18,780
system so step one is to define your

00:02:15,480 --> 00:02:21,120
libraries so in any custom theme or

00:02:18,780 --> 00:02:24,390
custom module you have this libraries

00:02:21,120 --> 00:02:25,350
yamo file and this is a super basic

00:02:24,390 --> 00:02:28,700
stripped-down version so we're just

00:02:25,350 --> 00:02:30,990
going to walk through what it is here so

00:02:28,700 --> 00:02:31,890
you name your library and this is

00:02:30,990 --> 00:02:33,690
important because you're going to

00:02:31,890 --> 00:02:36,360
reference it later so in this case the

00:02:33,690 --> 00:02:39,210
name is global and then you have your

00:02:36,360 --> 00:02:41,090
CSS files you have your JavaScript files

00:02:39,210 --> 00:02:43,500
and then you can specify any

00:02:41,090 --> 00:02:45,840
dependencies which is great so whenever

00:02:43,500 --> 00:02:48,180
you're adding this library to a page or

00:02:45,840 --> 00:02:50,880
to a template any of those dependencies

00:02:48,180 --> 00:02:52,020
will be added automatically another

00:02:50,880 --> 00:02:55,800
thing that's important to notice is

00:02:52,020 --> 00:02:58,410
under CSS we have this max category so

00:02:55,800 --> 00:03:01,320
you're placing the path to that CSS file

00:02:58,410 --> 00:03:03,420
relative to the directory and in this

00:03:01,320 --> 00:03:05,760
case it's located under theme so we're

00:03:03,420 --> 00:03:09,510
going to talk about that a little bit so

00:03:05,760 --> 00:03:11,430
the CSS assets and libraries file these

00:03:09,510 --> 00:03:13,800
are organized according to the Smacks

00:03:11,430 --> 00:03:16,370
categorization which is basically a way

00:03:13,800 --> 00:03:19,350
of structuring your CSS architecture and

00:03:16,370 --> 00:03:20,640
it's really important that you place it

00:03:19,350 --> 00:03:23,459
under one of these five categories

00:03:20,640 --> 00:03:24,750
otherwise it won't work and what else is

00:03:23,459 --> 00:03:27,480
cool about this is it gives you a way to

00:03:24,750 --> 00:03:29,880
specify the order of which those CSS

00:03:27,480 --> 00:03:31,860
assets will be added to the page so

00:03:29,880 --> 00:03:33,330
anything that you add under base is

00:03:31,860 --> 00:03:35,250
going to be added first and then it just

00:03:33,330 --> 00:03:37,459
goes down the line and then anything

00:03:35,250 --> 00:03:39,840
added under theme will be added last

00:03:37,459 --> 00:03:41,430
there are a few other considerations

00:03:39,840 --> 00:03:48,660
there but that's kind of the basic setup

00:03:41,430 --> 00:03:50,549
of how to organize your CSS files so

00:03:48,660 --> 00:03:52,739
this is another example of an external

00:03:50,549 --> 00:03:54,330
library that you can add so you're in

00:03:52,739 --> 00:03:56,190
that same file your library that Yamma

00:03:54,330 --> 00:03:58,260
file you can add multiple libraries to

00:03:56,190 --> 00:03:59,549
this page and you can do a basic one

00:03:58,260 --> 00:04:02,940
like we just looked at or you can do an

00:03:59,549 --> 00:04:04,380
external library and there's some other

00:04:02,940 --> 00:04:06,600
information another metadata that you

00:04:04,380 --> 00:04:08,160
can include in there but this is kind of

00:04:06,600 --> 00:04:09,540
a basic way that that's structured but

00:04:08,160 --> 00:04:11,370
the important takeaway here is just that

00:04:09,540 --> 00:04:13,500
you have this option of referencing

00:04:11,370 --> 00:04:19,590
these external libraries in the same

00:04:13,500 --> 00:04:21,630
libraries - yamo file and there's also a

00:04:19,590 --> 00:04:24,120
core libraries that animal file which is

00:04:21,630 --> 00:04:25,020
super great if you are curious about how

00:04:24,120 --> 00:04:26,569
to set up your life

00:04:25,020 --> 00:04:29,370
if you want to see the different options

00:04:26,569 --> 00:04:30,990
the Chordata library animal has many

00:04:29,370 --> 00:04:33,060
many libraries that are specified there

00:04:30,990 --> 00:04:35,280
so you can pop in there and take a look

00:04:33,060 --> 00:04:36,750
and see some of the different properties

00:04:35,280 --> 00:04:38,520
that you can use different ways of

00:04:36,750 --> 00:04:40,440
structuring things it's just a great

00:04:38,520 --> 00:04:46,919
reference and a great resource to keep

00:04:40,440 --> 00:04:48,930
that in mind so now we're going away

00:04:46,919 --> 00:04:50,280
from that super basic library definition

00:04:48,930 --> 00:04:52,349
to one that's a little bit more advanced

00:04:50,280 --> 00:04:53,909
so this one's called Jas header and

00:04:52,349 --> 00:04:56,580
there's a couple more things that were

00:04:53,909 --> 00:04:58,409
specifying here so with CSS we have that

00:04:56,580 --> 00:05:00,270
shmacked categorization that allows you

00:04:58,409 --> 00:05:03,330
to specify the order to which the CSS is

00:05:00,270 --> 00:05:06,000
added to the page and in Drupal the

00:05:03,330 --> 00:05:07,560
JavaScript assets by default will be

00:05:06,000 --> 00:05:09,659
added to the footer so if you want to

00:05:07,560 --> 00:05:12,509
add those to the header you have this

00:05:09,659 --> 00:05:14,520
header you can set the header to true

00:05:12,509 --> 00:05:17,490
and then that will put those JavaScript

00:05:14,520 --> 00:05:18,930
assets in the header and then what else

00:05:17,490 --> 00:05:22,380
is cool here is we have these other

00:05:18,930 --> 00:05:24,960
properties underneath the file so in

00:05:22,380 --> 00:05:29,370
this case in this example if we're

00:05:24,960 --> 00:05:31,289
adding this Google API map library we

00:05:29,370 --> 00:05:33,419
also want to add these attributes to the

00:05:31,289 --> 00:05:35,370
script and so underneath that you can

00:05:33,419 --> 00:05:37,020
set the type to external which tells

00:05:35,370 --> 00:05:39,180
Drupal that this is an external library

00:05:37,020 --> 00:05:40,919
and then under those attributes those

00:05:39,180 --> 00:05:44,009
will basically be added to the script

00:05:40,919 --> 00:05:46,469
tag so we have defer set to true async

00:05:44,009 --> 00:05:48,120
except to true and then if we go to the

00:05:46,469 --> 00:05:50,069
next page here where so this will

00:05:48,120 --> 00:05:51,690
actually build the script tag and it's

00:05:50,069 --> 00:05:53,310
adding it to the header of the site and

00:05:51,690 --> 00:05:54,479
then you can see we're running out of

00:05:53,310 --> 00:05:57,360
room over there but you can see that

00:05:54,479 --> 00:05:59,789
async and defer those tags are being

00:05:57,360 --> 00:06:03,750
added into the script that we specified

00:05:59,789 --> 00:06:05,460
as attributes over here so you have a

00:06:03,750 --> 00:06:10,680
lot of control over how you build those

00:06:05,460 --> 00:06:11,969
script tags where they get added so

00:06:10,680 --> 00:06:14,159
those are the basics of how you define

00:06:11,969 --> 00:06:15,330
libraries just a quick overview of some

00:06:14,159 --> 00:06:19,919
of the options but again look at that

00:06:15,330 --> 00:06:21,810
core that libraries yamo file for more

00:06:19,919 --> 00:06:23,279
examples so now we're going to move into

00:06:21,810 --> 00:06:26,639
attaching libraries how do we actually

00:06:23,279 --> 00:06:28,830
attach the libraries so Drupal a Jas has

00:06:26,639 --> 00:06:31,380
gone Drupal add CSS is gone we don't

00:06:28,830 --> 00:06:32,340
have these basic functions but there's

00:06:31,380 --> 00:06:35,430
still a number of ways that we can

00:06:32,340 --> 00:06:38,810
attach the assets in Drupal 8 so there's

00:06:35,430 --> 00:06:45,740
some someone's singing back there

00:06:38,810 --> 00:06:47,480
kind of awesome so in your seam info da

00:06:45,740 --> 00:06:49,580
gama file this is a way that you can add

00:06:47,480 --> 00:06:51,740
those libraries globally so this is

00:06:49,580 --> 00:06:53,270
again a super basic example you have you

00:06:51,740 --> 00:06:56,150
know some of the basic theme definitions

00:06:53,270 --> 00:06:58,850
in your info mo file and then under

00:06:56,150 --> 00:07:00,200
libraries you're just specifying which

00:06:58,850 --> 00:07:03,260
of those libraries you want to attach

00:07:00,200 --> 00:07:05,930
globally so it uses that same name name

00:07:03,260 --> 00:07:07,970
convention so it'll be your theme -

00:07:05,930 --> 00:07:11,200
global whatever name you gave that

00:07:07,970 --> 00:07:13,880
library in the in the library mo file so

00:07:11,200 --> 00:07:16,280
the libraries can have the same name in

00:07:13,880 --> 00:07:17,870
different files or in different things

00:07:16,280 --> 00:07:20,660
or different modules because it's

00:07:17,870 --> 00:07:23,720
referencing that my theme or my module

00:07:20,660 --> 00:07:27,229
slash the library name so that's how you

00:07:23,720 --> 00:07:28,370
attach them globally there another way

00:07:27,229 --> 00:07:30,470
that you can do it is you can attach

00:07:28,370 --> 00:07:34,130
them using Twigg directly to the

00:07:30,470 --> 00:07:35,240
template so in our example for a lot of

00:07:34,130 --> 00:07:38,419
the sites that we're building currently

00:07:35,240 --> 00:07:41,780
we're using the components module and so

00:07:38,419 --> 00:07:44,840
we have this header component and when

00:07:41,780 --> 00:07:46,789
we define the header when we filled out

00:07:44,840 --> 00:07:48,500
that template using Twigg then we attach

00:07:46,789 --> 00:07:50,270
the header library directly to that twig

00:07:48,500 --> 00:07:52,430
template and so anytime that header

00:07:50,270 --> 00:07:54,080
component is being rendered then we have

00:07:52,430 --> 00:07:55,610
our CSS assets that we need we have our

00:07:54,080 --> 00:07:58,280
JavaScript assets that we need and so

00:07:55,610 --> 00:07:59,780
you can be really granular and have a

00:07:58,280 --> 00:08:01,970
lot of control over how you're adding

00:07:59,780 --> 00:08:03,350
those assets and this is really great

00:08:01,970 --> 00:08:08,030
especially for component based design

00:08:03,350 --> 00:08:10,550
atomic design that kind of stuff you can

00:08:08,030 --> 00:08:13,310
also still add them in PHP so this is an

00:08:10,550 --> 00:08:14,780
example of a pre process function so for

00:08:13,310 --> 00:08:16,100
this example for one of our clients they

00:08:14,780 --> 00:08:19,190
have a donate page and they're

00:08:16,100 --> 00:08:21,050
referencing this external library we

00:08:19,190 --> 00:08:24,500
have to pull on this external javascript

00:08:21,050 --> 00:08:26,210
asset and so we're just saying for this

00:08:24,500 --> 00:08:28,910
specific page using the pre process

00:08:26,210 --> 00:08:31,490
function we're going to add in that

00:08:28,910 --> 00:08:35,990
library and you do that by attaching it

00:08:31,490 --> 00:08:41,659
to that attached array in the key in the

00:08:35,990 --> 00:08:43,669
variables object another thing was cool

00:08:41,659 --> 00:08:45,320
and we haven't used this a whole lot but

00:08:43,669 --> 00:08:47,209
it's this idea that you can attach

00:08:45,320 --> 00:08:48,890
libraries conditionally so we can

00:08:47,209 --> 00:08:51,140
actually put some logic into our twig

00:08:48,890 --> 00:08:52,460
templates let's say if the certain

00:08:51,140 --> 00:08:54,320
variable exists and we want to

00:08:52,460 --> 00:08:55,760
catch library if the variable doesn't

00:08:54,320 --> 00:08:58,130
exist and we want to attach a different

00:08:55,760 --> 00:08:59,600
library or not attach it at all so in

00:08:58,130 --> 00:09:01,940
this example we're saying if there's a

00:08:59,600 --> 00:09:03,800
certain data set that's being added to

00:09:01,940 --> 00:09:05,300
this page then we want to include our

00:09:03,800 --> 00:09:08,120
chart library so that we can render that

00:09:05,300 --> 00:09:10,610
data using specific CSS or JavaScript

00:09:08,120 --> 00:09:12,320
otherwise we can define a different

00:09:10,610 --> 00:09:17,480
library attach a different library or

00:09:12,320 --> 00:09:19,430
just not attach one at all so those are

00:09:17,480 --> 00:09:20,660
the basics of attaching library now

00:09:19,430 --> 00:09:25,130
we're going to look at how we can extend

00:09:20,660 --> 00:09:28,160
an override libraries so we do this as

00:09:25,130 --> 00:09:29,420
well in the theme info dot yamo file so

00:09:28,160 --> 00:09:32,000
the same place where we attach the

00:09:29,420 --> 00:09:35,029
libraries globally we can also extend

00:09:32,000 --> 00:09:36,200
and override them so underneath the area

00:09:35,029 --> 00:09:38,810
where you define the libraries and you

00:09:36,200 --> 00:09:41,959
have this libraries extent and in this

00:09:38,810 --> 00:09:46,370
example basically what we want to say is

00:09:41,959 --> 00:09:49,040
anywhere that we're displaying these

00:09:46,370 --> 00:09:50,570
forums so for if we have the classic

00:09:49,040 --> 00:09:52,850
theme installed and we're displaying

00:09:50,570 --> 00:09:54,830
those forums and we want to do some

00:09:52,850 --> 00:09:57,290
tweaks to the styling of those forums

00:09:54,830 --> 00:10:01,130
and we can attach and extend that

00:09:57,290 --> 00:10:02,839
library to include our own CSS that you

00:10:01,130 --> 00:10:04,640
know might tweak the styling of how

00:10:02,839 --> 00:10:06,650
those forms are displayed and then it

00:10:04,640 --> 00:10:09,350
follows the same conditional logic so

00:10:06,650 --> 00:10:12,020
anywhere that the forums are displayed

00:10:09,350 --> 00:10:14,360
then our library goes along for the ride

00:10:12,020 --> 00:10:17,300
so you're able to there's a lot of power

00:10:14,360 --> 00:10:19,100
in the ability to extend libraries make

00:10:17,300 --> 00:10:21,529
styling tweaks to anything that comes in

00:10:19,100 --> 00:10:23,180
a module or comes from core it just

00:10:21,529 --> 00:10:27,770
makes it a lot easier to tweak those

00:10:23,180 --> 00:10:29,570
styles or add some JavaScript and I

00:10:27,770 --> 00:10:31,790
think this is one of the places where

00:10:29,570 --> 00:10:34,779
the libraries API in Drupal 8 is the

00:10:31,790 --> 00:10:38,839
most powerful is our ability to override

00:10:34,779 --> 00:10:40,880
libraries so again if you install a

00:10:38,839 --> 00:10:42,470
module and it comes with its own styling

00:10:40,880 --> 00:10:44,750
it comes with its own JavaScript files

00:10:42,470 --> 00:10:46,700
it's referencing a specific JavaScript

00:10:44,750 --> 00:10:49,640
library you can actually go in and

00:10:46,700 --> 00:10:50,959
replace that entire library and you do

00:10:49,640 --> 00:10:56,600
that in the same place in your info

00:10:50,959 --> 00:11:00,020
Djamel file so you specify libraries

00:10:56,600 --> 00:11:02,089
overrides and then you basically call

00:11:00,020 --> 00:11:03,860
the namespace of the library that you

00:11:02,089 --> 00:11:06,110
want to override so in this example we

00:11:03,860 --> 00:11:07,579
have core Drupal collapse is the

00:11:06,110 --> 00:11:09,019
the library and then you're just

00:11:07,579 --> 00:11:10,760
replacing that with the name of your

00:11:09,019 --> 00:11:13,279
library using that same naming

00:11:10,760 --> 00:11:18,440
convention your theme your module of

00:11:13,279 --> 00:11:19,579
flash name is library so that's if you

00:11:18,440 --> 00:11:21,560
want to replace it and then if you want

00:11:19,579 --> 00:11:23,540
to remove an entire library then you

00:11:21,560 --> 00:11:26,560
reference it again the same ways in that

00:11:23,540 --> 00:11:29,120
namespace and then you just set to false

00:11:26,560 --> 00:11:31,730
so in this example we're replacing or

00:11:29,120 --> 00:11:33,860
removing entire libraries and then you

00:11:31,730 --> 00:11:36,649
also have granular control where you can

00:11:33,860 --> 00:11:38,870
replace or override just specific files

00:11:36,649 --> 00:11:41,570
and so usually the best way to do this

00:11:38,870 --> 00:11:44,240
is to go in to the library that you want

00:11:41,570 --> 00:11:46,250
to override and just copy copy that in

00:11:44,240 --> 00:11:49,370
because you have to follow that same

00:11:46,250 --> 00:11:51,470
convention of how the CSS is organized

00:11:49,370 --> 00:11:55,339
how the JavaScript is organized so for

00:11:51,470 --> 00:11:57,620
example here we have CSS layout dot CSS

00:11:55,339 --> 00:12:00,230
that we want to override but that's

00:11:57,620 --> 00:12:01,640
under the themes max category so if you

00:12:00,230 --> 00:12:03,440
want to override that specific file you

00:12:01,640 --> 00:12:06,589
have to put it in the same place so you

00:12:03,440 --> 00:12:10,850
can go into that base theme library copy

00:12:06,589 --> 00:12:12,680
this in to your info dot gamma file and

00:12:10,850 --> 00:12:15,800
then say I want to override the layout

00:12:12,680 --> 00:12:19,970
that CSS file with my own let's say sub

00:12:15,800 --> 00:12:22,279
theme layout that's CSS and then it's

00:12:19,970 --> 00:12:26,360
basically the same process if we want to

00:12:22,279 --> 00:12:28,190
remove a specific file so same thing is

00:12:26,360 --> 00:12:31,070
if you're removing in the entire library

00:12:28,190 --> 00:12:32,930
you just go in and set that specific

00:12:31,070 --> 00:12:39,800
file to false and then it won't be

00:12:32,930 --> 00:12:41,990
loaded to the page so in g7 the

00:12:39,800 --> 00:12:43,730
libraries APA was a separate control and

00:12:41,990 --> 00:12:46,790
in d8 there actually is a separate

00:12:43,730 --> 00:12:49,160
libraries APA API control we're not

00:12:46,790 --> 00:12:50,269
going to go into it in super detail I

00:12:49,160 --> 00:12:52,880
just want to make sure that you guys

00:12:50,269 --> 00:12:54,620
know that it exists and basically it's

00:12:52,880 --> 00:12:57,800
set up to really handle external

00:12:54,620 --> 00:13:02,570
libraries that don't ship with Drupal or

00:12:57,800 --> 00:13:03,980
don't ship with a specific control so

00:13:02,570 --> 00:13:07,010
it's a way to reference external

00:13:03,980 --> 00:13:08,510
libraries and to be able to add them to

00:13:07,010 --> 00:13:11,980
different sites or to different modules

00:13:08,510 --> 00:13:11,980
so it's just something to be aware of

00:13:15,890 --> 00:13:20,630
there are a few gotchas with the

00:13:18,180 --> 00:13:23,370
library's API that I want to go through

00:13:20,630 --> 00:13:26,700
so if a file is already linked to in a

00:13:23,370 --> 00:13:28,830
library then if you link to that same

00:13:26,700 --> 00:13:30,360
file in a different library and that

00:13:28,830 --> 00:13:32,910
library is being added to the same page

00:13:30,360 --> 00:13:35,550
it won't be called twice so if you're

00:13:32,910 --> 00:13:37,470
trying to be really specific about the

00:13:35,550 --> 00:13:41,010
order in which CSS assets are being

00:13:37,470 --> 00:13:42,390
added to the page and you have that CSS

00:13:41,010 --> 00:13:44,130
file that's linked you in two separate

00:13:42,390 --> 00:13:45,900
libraries you lose some of that control

00:13:44,130 --> 00:13:48,330
because it's not going to be added to

00:13:45,900 --> 00:13:53,880
the page twice it again just something

00:13:48,330 --> 00:13:59,130
to be aware of and then module CSS files

00:13:53,880 --> 00:14:01,020
are grouped before theme CSS files so we

00:13:59,130 --> 00:14:03,750
have that smacks convention of how those

00:14:01,020 --> 00:14:06,620
CSS assets are ordered but if you have a

00:14:03,750 --> 00:14:09,480
my module dot libraries that llamó file

00:14:06,620 --> 00:14:11,070
and you're linking to some CSS assets

00:14:09,480 --> 00:14:16,020
those are going to be added to your page

00:14:11,070 --> 00:14:18,090
up above any theme CSS files so if you

00:14:16,020 --> 00:14:21,210
have CSS assets that are under the

00:14:18,090 --> 00:14:23,010
themes max category in both a module and

00:14:21,210 --> 00:14:25,290
a theme they're not necessarily going to

00:14:23,010 --> 00:14:26,670
be in the same place the module CSS

00:14:25,290 --> 00:14:32,520
files are always going to be before the

00:14:26,670 --> 00:14:34,410
theme files and then a third point here

00:14:32,520 --> 00:14:36,030
is that you will need the full doc root

00:14:34,410 --> 00:14:37,740
path if the library is already

00:14:36,030 --> 00:14:40,800
overridden so if you're trying to

00:14:37,740 --> 00:14:43,470
override a library twice then rather

00:14:40,800 --> 00:14:44,550
than just specifying that library naming

00:14:43,470 --> 00:14:46,590
convention you actually have to

00:14:44,550 --> 00:14:49,890
reference the full path from the doc

00:14:46,590 --> 00:14:51,000
root so again you probably won't need

00:14:49,890 --> 00:14:55,020
that but just a nice thing to put in

00:14:51,000 --> 00:14:56,700
your back pocket and then there's a lot

00:14:55,020 --> 00:15:00,240
more information about how the cell

00:14:56,700 --> 00:15:04,620
works in the Drupal 8 theming guide so

00:15:00,240 --> 00:15:07,050
that's a good reference to check out all

00:15:04,620 --> 00:15:11,640
right that's about it I have my slides

00:15:07,050 --> 00:15:14,900
available on github so you can reference

00:15:11,640 --> 00:15:18,690
this presentation later if you'd like

00:15:14,900 --> 00:15:21,380
and we have some time for questions if

00:15:18,690 --> 00:15:21,380
anybody has any

00:15:22,710 --> 00:15:25,710
sure

00:15:25,930 --> 00:15:34,680

YouTube URL: https://www.youtube.com/watch?v=IrnWxqXGA0A


