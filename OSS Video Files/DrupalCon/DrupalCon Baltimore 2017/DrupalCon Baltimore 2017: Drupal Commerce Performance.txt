Title: DrupalCon Baltimore 2017: Drupal Commerce Performance
Publication date: 2017-04-25
Playlist: DrupalCon Baltimore 2017
Description: 
	We run some high volume Drupal Commerce sites, taking upwards of 10,000 orders an hour and have done a lot of performance work to get these values. Commerce traditionally can't be cached and tuned the same way an unauthenticated content site can, and normal tricks like varnish and other static caching are of limited use.

An overview of performance problems with Drupal Commerce and Drupal 7 and ways to fix or mitigate them.

Caching with authenticated users
Caching with dynamic content
Scaling Orders
Database Locking
Order Locking
PHP 7 benefits specific to Commerce
Scaling Attributes and Options
I will also touch on changes coming with Commerce 2.x for Drupal 8 and how this will affect performance in Drupal, especially related to cache contexts and bigpipe.

After this talk, Commerce site admins should be able to increase there order throughput hopefully by a factor or 3x or more, depending what there existing site setup is.

Blog post example regarding locking in commerce: https://www.acromediainc.com/blog/drupal-commerce-performance-locking
Captions: 
	00:00:00,030 --> 00:00:04,350
at Drupal commerce performance

00:00:01,439 --> 00:00:06,060
specifically first of all Who am I

00:00:04,350 --> 00:00:08,309
because I'm not like super well-known in

00:00:06,060 --> 00:00:09,719
the community I have been doing Drupal

00:00:08,309 --> 00:00:11,670
for about nine years I've been working

00:00:09,719 --> 00:00:15,120
on commerce stuff since way back in the

00:00:11,670 --> 00:00:16,710
Burkhard days so since super cart alpha

00:00:15,120 --> 00:00:19,500
right after it was announced that Drupal

00:00:16,710 --> 00:00:21,210
con Boston so I do have a lot of

00:00:19,500 --> 00:00:24,810
experience working with it I work for

00:00:21,210 --> 00:00:26,460
acro media we are based in Canada but we

00:00:24,810 --> 00:00:28,980
are distributed all over the world we

00:00:26,460 --> 00:00:30,660
have about 60 staff about 40 of which

00:00:28,980 --> 00:00:33,149
are developers and we work exclusively

00:00:30,660 --> 00:00:34,770
on Drupal commerce so not only do we

00:00:33,149 --> 00:00:37,350
just do Drupal but we actually only do

00:00:34,770 --> 00:00:39,840
Drupal commerce so we're pretty specific

00:00:37,350 --> 00:00:42,030
to this niche so hopefully I can help

00:00:39,840 --> 00:00:46,440
out with a lot of details around

00:00:42,030 --> 00:00:48,870
commerce okay into the topic why is

00:00:46,440 --> 00:00:50,430
commerce slow because you're probably

00:00:48,870 --> 00:00:51,809
here because commerce is slow not

00:00:50,430 --> 00:00:53,300
because it's so awesome and we're just

00:00:51,809 --> 00:00:57,469
all gonna talk about how fast it is

00:00:53,300 --> 00:00:57,469
although if you are that would be great

00:00:57,600 --> 00:01:04,110
the biggest problem is Drupal relies a

00:01:00,840 --> 00:01:06,350
lot on anonymous caching and anonymous

00:01:04,110 --> 00:01:08,430
users to be fast that's the primary

00:01:06,350 --> 00:01:12,150
especially with Drupal 7 that is the

00:01:08,430 --> 00:01:14,939
primary way to get speed is to have page

00:01:12,150 --> 00:01:16,830
caching to even use varnish in front of

00:01:14,939 --> 00:01:19,500
things stuff like that and that is

00:01:16,830 --> 00:01:21,689
rarely the case for turbo Commerce that

00:01:19,500 --> 00:01:23,189
that can be useful because most of the

00:01:21,689 --> 00:01:25,320
time you're actually doing stuff you're

00:01:23,189 --> 00:01:27,869
you're loading dynamic pages you're

00:01:25,320 --> 00:01:30,450
doing stuff with your users that means

00:01:27,869 --> 00:01:33,180
you can't catch that also the way Drupal

00:01:30,450 --> 00:01:35,850
7 works by default is that once you have

00:01:33,180 --> 00:01:37,890
a session you are not cached anymore

00:01:35,850 --> 00:01:39,479
like you might use forum caches things

00:01:37,890 --> 00:01:41,970
like that but the page cache is no

00:01:39,479 --> 00:01:43,619
longer being utilized so that doesn't

00:01:41,970 --> 00:01:45,210
mean you actually have to be a logged in

00:01:43,619 --> 00:01:46,770
user to basically count as authentic

00:01:45,210 --> 00:01:48,329
ated once you have a session and so in

00:01:46,770 --> 00:01:51,600
e-commerce what's that what that means

00:01:48,329 --> 00:01:52,979
is once you add anything to your cart so

00:01:51,600 --> 00:01:55,710
once you add to your cart suddenly

00:01:52,979 --> 00:01:57,420
everything is not page cached anymore

00:01:55,710 --> 00:01:58,860
and so you're gonna go from you know

00:01:57,420 --> 00:02:01,500
maybe you have a hundred millisecond

00:01:58,860 --> 00:02:03,840
page loads to you have you know or like

00:02:01,500 --> 00:02:06,119
response times to 500 millisecond

00:02:03,840 --> 00:02:07,590
response times just by someone adds a

00:02:06,119 --> 00:02:09,060
single thing to their cart and that is

00:02:07,590 --> 00:02:12,520
nothing to do with the cart itself being

00:02:09,060 --> 00:02:14,980
slow that just has to do that we drop

00:02:12,520 --> 00:02:16,270
page caching completely so we're gonna

00:02:14,980 --> 00:02:18,400
talk about various ways to get around

00:02:16,270 --> 00:02:20,080
that various things to do without having

00:02:18,400 --> 00:02:21,700
caching and stuff but it's all gonna

00:02:20,080 --> 00:02:25,060
hopefully be pretty commerce specific

00:02:21,700 --> 00:02:27,310
although it can be useful for other

00:02:25,060 --> 00:02:28,780
sites that do commerce like things where

00:02:27,310 --> 00:02:31,380
they're very dynamic they don't have

00:02:28,780 --> 00:02:33,640
much use of traditional Drupal category

00:02:31,380 --> 00:02:35,560
this talk is actually also gonna be

00:02:33,640 --> 00:02:37,570
mostly on commerce one decks for Drupal

00:02:35,560 --> 00:02:39,760
7 although we will touch a little bit on

00:02:37,570 --> 00:02:44,290
commerce two detects for Drupal 8 at the

00:02:39,760 --> 00:02:46,060
end hopefully if I go fast enough first

00:02:44,290 --> 00:02:50,170
thing I just get this out of the way is

00:02:46,060 --> 00:02:52,870
use PHP 7 if you do Drupal commerce it

00:02:50,170 --> 00:02:55,120
does work perfectly fine with commerce

00:02:52,870 --> 00:02:57,610
there is one very small patch that you

00:02:55,120 --> 00:03:00,010
have to apply it is in the dev branch of

00:02:57,610 --> 00:03:03,160
Commerce already it is not in a live

00:03:00,010 --> 00:03:05,590
release and if you see Ryan sarama just

00:03:03,160 --> 00:03:07,810
yell at him about that that is the only

00:03:05,590 --> 00:03:09,370
hold up as we need to release tagged to

00:03:07,810 --> 00:03:11,320
get that and I'm now conducting like a

00:03:09,370 --> 00:03:13,540
small gorilla campaign to get him to do

00:03:11,320 --> 00:03:17,290
that so I harass him at every

00:03:13,540 --> 00:03:18,190
opportunity but as you can see from the

00:03:17,290 --> 00:03:20,830
chart there which hopefully you guys can

00:03:18,190 --> 00:03:23,170
kind of read the first two bars there

00:03:20,830 --> 00:03:25,120
are just four standard Drupal and the

00:03:23,170 --> 00:03:28,090
next two are for basically a really

00:03:25,120 --> 00:03:29,830
standard you know like product page from

00:03:28,090 --> 00:03:33,490
Drupal commerce that just comes from a

00:03:29,830 --> 00:03:34,570
commerce kickstart example and you'll

00:03:33,490 --> 00:03:36,850
gain about two and a half times

00:03:34,570 --> 00:03:38,950
performance so out of all the stuff

00:03:36,850 --> 00:03:40,209
we're gonna go over here that's probably

00:03:38,950 --> 00:03:43,450
the best performance increase you're

00:03:40,209 --> 00:03:46,060
gonna get and it's also the easiest we

00:03:43,450 --> 00:03:49,030
run most of our commerce sites now on

00:03:46,060 --> 00:03:51,700
PHP 7 and there's very little problem

00:03:49,030 --> 00:03:53,770
with that like I said there's one small

00:03:51,700 --> 00:03:55,330
commerce core patch and then otherwise

00:03:53,770 --> 00:03:58,930
most contribs actually already patched

00:03:55,330 --> 00:04:01,570
and it works perfectly fine and yeah the

00:03:58,930 --> 00:04:03,160
performance is is both in speed and in

00:04:01,570 --> 00:04:04,150
memory you'll get about the same benefit

00:04:03,160 --> 00:04:07,120
so you'll get about two and a half times

00:04:04,150 --> 00:04:09,280
the performance and you will save you'll

00:04:07,120 --> 00:04:11,890
probably about half your memory at the

00:04:09,280 --> 00:04:16,840
same time so good for performance and

00:04:11,890 --> 00:04:17,830
good for scalability as well oh and I'll

00:04:16,840 --> 00:04:20,630
have a bunch of graphs and statistics

00:04:17,830 --> 00:04:23,360
and stuff here if anyone wants you can

00:04:20,630 --> 00:04:25,370
just you know grab me after the talk or

00:04:23,360 --> 00:04:27,350
something or message me on Twitter and I

00:04:25,370 --> 00:04:28,670
can provide like all the data I used to

00:04:27,350 --> 00:04:29,990
get all that stuff because I ran a whole

00:04:28,670 --> 00:04:31,250
bunch of testing and benchmarks and

00:04:29,990 --> 00:04:32,900
stuff for this and I have I have more

00:04:31,250 --> 00:04:37,160
than just what I'll be showing in these

00:04:32,900 --> 00:04:39,620
slides next thing we're gonna go through

00:04:37,160 --> 00:04:42,470
a few different modules and sort of

00:04:39,620 --> 00:04:45,110
different performance options and how

00:04:42,470 --> 00:04:46,700
they relate to jubal commerce because

00:04:45,110 --> 00:04:48,290
you can get pretty mixed results

00:04:46,700 --> 00:04:51,110
depending on what you're using the first

00:04:48,290 --> 00:04:53,920
thing is entity cache now specifically

00:04:51,110 --> 00:04:58,960
there is a commerce entity cache module

00:04:53,920 --> 00:05:01,550
that handles putting products orders

00:04:58,960 --> 00:05:04,460
commerce stuff basically into entity

00:05:01,550 --> 00:05:08,570
cash as well this is to be honest going

00:05:04,460 --> 00:05:11,900
to be of limited use and you'll get some

00:05:08,570 --> 00:05:14,900
advantage where you aren't able to use

00:05:11,900 --> 00:05:17,060
page caching and you are able to load

00:05:14,900 --> 00:05:19,310
entities but that's only if you have a

00:05:17,060 --> 00:05:21,050
it will help you in like a product page

00:05:19,310 --> 00:05:23,090
where you're maybe only loading a single

00:05:21,050 --> 00:05:26,030
product it will actually be a fairly

00:05:23,090 --> 00:05:28,340
significant detriment to you if you are

00:05:26,030 --> 00:05:29,780
on a large page like a big catalog page

00:05:28,340 --> 00:05:33,410
or something that's going to load 30 to

00:05:29,780 --> 00:05:36,650
40 products it'll probably give you a 30

00:05:33,410 --> 00:05:39,440
40 percent performance decrease so

00:05:36,650 --> 00:05:41,840
overall that one you can use in in

00:05:39,440 --> 00:05:44,540
specific cases if it works for you I

00:05:41,840 --> 00:05:46,540
would test it quite extensively and I

00:05:44,540 --> 00:05:49,160
would overall probably not recommend it

00:05:46,540 --> 00:05:51,380
just because it's gonna probably give

00:05:49,160 --> 00:05:55,340
you more performance decreases and it is

00:05:51,380 --> 00:05:58,120
for increases and it it doesn't work by

00:05:55,340 --> 00:06:03,130
the it has support for orders by default

00:05:58,120 --> 00:06:05,630
but they tend to sort of break data

00:06:03,130 --> 00:06:07,700
consistency with orders because they

00:06:05,630 --> 00:06:09,710
will catch them sort of too long and

00:06:07,700 --> 00:06:14,030
they don't handle any sort of order

00:06:09,710 --> 00:06:15,470
locking setup so you can get overwrite

00:06:14,030 --> 00:06:20,060
issues and say sorry I'm just gonna keep

00:06:15,470 --> 00:06:21,440
an eye on the time here off cache so

00:06:20,060 --> 00:06:24,590
this is actually going to help you a lot

00:06:21,440 --> 00:06:26,390
more although it is a little tricky to

00:06:24,590 --> 00:06:28,610
set up so basically for anyone who

00:06:26,390 --> 00:06:30,110
doesn't know what off cache does is it

00:06:28,610 --> 00:06:32,090
gives you caching when you're an

00:06:30,110 --> 00:06:33,560
authenticated user and so that applies

00:06:32,090 --> 00:06:34,220
to if you have a session if you're

00:06:33,560 --> 00:06:36,740
actually

00:06:34,220 --> 00:06:39,860
in any of that stuff that you don't

00:06:36,740 --> 00:06:40,850
normally get caching for so this can

00:06:39,860 --> 00:06:43,100
actually be really really great for

00:06:40,850 --> 00:06:45,410
Drupal commerce because you are like the

00:06:43,100 --> 00:06:48,620
problem I talked about before where if

00:06:45,410 --> 00:06:50,300
you have you know pages that you've just

00:06:48,620 --> 00:06:53,510
the users added something to the cart or

00:06:50,300 --> 00:06:54,890
you show a simple you know view Cart

00:06:53,510 --> 00:06:56,000
button up at the top that says you have

00:06:54,890 --> 00:06:58,400
two items in your cart well that's

00:06:56,000 --> 00:07:01,340
technically dynamic and so that's gonna

00:06:58,400 --> 00:07:03,380
screw up your whole page as well and so

00:07:01,340 --> 00:07:06,020
if you set up off cache you can do page

00:07:03,380 --> 00:07:08,620
caching either just through the database

00:07:06,020 --> 00:07:12,260
like normal or paired up with varnish

00:07:08,620 --> 00:07:17,150
for those pages and as you'll see in the

00:07:12,260 --> 00:07:19,040
graph you get really significant page

00:07:17,150 --> 00:07:20,660
speed decreases like I said you can go

00:07:19,040 --> 00:07:22,880
from both 400 down to you know just over

00:07:20,660 --> 00:07:25,070
100 milliseconds this is response time

00:07:22,880 --> 00:07:27,740
to the server so this is basically the

00:07:25,070 --> 00:07:28,940
PHP MySQL or you know whatever Redis

00:07:27,740 --> 00:07:30,800
whatever you have paired up there that

00:07:28,940 --> 00:07:36,770
is running this is not necessarily the

00:07:30,800 --> 00:07:39,560
page load that's happening so this is it

00:07:36,770 --> 00:07:41,000
works with Commerce core out of the box

00:07:39,560 --> 00:07:42,680
it actually has specific commerce

00:07:41,000 --> 00:07:45,560
support built into it to handle carts

00:07:42,680 --> 00:07:47,660
and stuff like that it is adding like a

00:07:45,560 --> 00:07:49,610
whole different caching type layer you

00:07:47,660 --> 00:07:51,800
have to turn off regular anonymous cache

00:07:49,610 --> 00:07:52,310
you have to use off cache it works

00:07:51,800 --> 00:07:57,560
pretty well

00:07:52,310 --> 00:07:59,360
any customized stuff you have may give

00:07:57,560 --> 00:08:01,100
you difficulties if you've put things in

00:07:59,360 --> 00:08:02,690
templates that you maybe shouldn't have

00:08:01,100 --> 00:08:04,880
put in templates those will cache wrong

00:08:02,690 --> 00:08:07,160
if you set up blocks maybe the way you

00:08:04,880 --> 00:08:11,270
shouldn't have those might not work

00:08:07,160 --> 00:08:13,610
right also you're gonna have to possibly

00:08:11,270 --> 00:08:17,150
tweak your pages to make sure that they

00:08:13,610 --> 00:08:19,240
do work with auth cache because if your

00:08:17,150 --> 00:08:22,970
page is flagged as unable to be cached

00:08:19,240 --> 00:08:24,200
it's still not going to cache even with

00:08:22,970 --> 00:08:25,370
auth cache like it doesn't you don't

00:08:24,200 --> 00:08:28,990
just turn it on and it's a magic bullet

00:08:25,370 --> 00:08:31,310
so it actually has a debugging setup

00:08:28,990 --> 00:08:34,010
that you can turn on and you can hit any

00:08:31,310 --> 00:08:37,789
page and see if it's actually hitting

00:08:34,010 --> 00:08:39,050
the auth cache or not so what that is

00:08:37,789 --> 00:08:40,400
gonna and that's going to usually tell

00:08:39,050 --> 00:08:42,380
you why it's not hitting do you have a

00:08:40,400 --> 00:08:44,060
dynamic element on the page is there

00:08:42,380 --> 00:08:45,740
something that's causing it to not cache

00:08:44,060 --> 00:08:47,390
so you can do things like if you have a

00:08:45,740 --> 00:08:49,310
couple of blocks if you have

00:08:47,390 --> 00:08:52,100
like a cart block is gonna be one for

00:08:49,310 --> 00:08:55,580
example you can set that to load load

00:08:52,100 --> 00:08:58,610
through Ajax or through edge side

00:08:55,580 --> 00:09:00,620
includes so you basically it's sort of a

00:08:58,610 --> 00:09:02,240
precursor to how big pipe works now in

00:09:00,620 --> 00:09:04,340
d8 but you can load those after the

00:09:02,240 --> 00:09:05,840
initial page load so you can cache that

00:09:04,340 --> 00:09:08,000
initial page load get the quick initial

00:09:05,840 --> 00:09:09,590
load and then get the load after that

00:09:08,000 --> 00:09:11,570
you will get a little you'll get better

00:09:09,590 --> 00:09:12,680
speed you will get slightly more load on

00:09:11,570 --> 00:09:13,340
your server because you are

00:09:12,680 --> 00:09:15,290
bootstrapping

00:09:13,340 --> 00:09:16,730
Drupal multiple times there so I mean

00:09:15,290 --> 00:09:20,570
that's a standard project for a problem

00:09:16,730 --> 00:09:25,100
for most Ajax loads there is also a j/s

00:09:20,570 --> 00:09:27,320
module which will reduce your overhead

00:09:25,100 --> 00:09:29,540
for ajax requests for stuff like this

00:09:27,320 --> 00:09:30,950
I haven't tested the two together I've

00:09:29,540 --> 00:09:32,450
got good results with auth cache and

00:09:30,950 --> 00:09:33,680
I've got good results with a JSP I

00:09:32,450 --> 00:09:36,380
haven't run them together to see if they

00:09:33,680 --> 00:09:37,700
run smoothly or not but just keep that

00:09:36,380 --> 00:09:44,920
in mind as well if you're trying to

00:09:37,700 --> 00:09:47,630
tweak for perform for performance Redis

00:09:44,920 --> 00:09:49,250
and this is somewhat applies to memcache

00:09:47,630 --> 00:09:51,920
too although I wasn't able to do full

00:09:49,250 --> 00:09:55,670
benchmarks from memcache as well before

00:09:51,920 --> 00:09:58,400
this Redis is not going to help you as

00:09:55,670 --> 00:10:00,500
much as you would hope really you know

00:09:58,400 --> 00:10:02,720
you go okay I have all these dynamic

00:10:00,500 --> 00:10:04,580
things that I'm pulling from cache and

00:10:02,720 --> 00:10:06,170
pulling for memcache and field cache and

00:10:04,580 --> 00:10:08,900
and all these other things that I can't

00:10:06,170 --> 00:10:10,220
do because I'm not using page cache you

00:10:08,900 --> 00:10:13,880
know so Redis is gonna help me there

00:10:10,220 --> 00:10:18,830
that doesn't really pan out in the

00:10:13,880 --> 00:10:20,030
benchmarks as you see here you get in

00:10:18,830 --> 00:10:22,490
some instances like where you can

00:10:20,030 --> 00:10:27,530
actually use full page caching you get a

00:10:22,490 --> 00:10:29,570
small performance decrease when you are

00:10:27,530 --> 00:10:31,100
using stuff that can't be fully page

00:10:29,570 --> 00:10:34,100
cache and has lots of elements like a

00:10:31,100 --> 00:10:36,560
large catalog page or the car page you

00:10:34,100 --> 00:10:38,870
do get some improvement but that's gonna

00:10:36,560 --> 00:10:41,540
be really variable and that's gonna vary

00:10:38,870 --> 00:10:43,700
a lot between your setup what you're

00:10:41,540 --> 00:10:46,340
loading if you start to hit cache too

00:10:43,700 --> 00:10:47,990
heavily it can sometimes be a little

00:10:46,340 --> 00:10:49,880
better on Redis if you're hitting cache

00:10:47,990 --> 00:10:52,490
fairly lightly it will actually be worse

00:10:49,880 --> 00:10:53,480
on Redis I would really try to benchmark

00:10:52,490 --> 00:10:55,400
that quite a bit

00:10:53,480 --> 00:11:00,050
on your setup and we'll talk about

00:10:55,400 --> 00:11:01,700
benchmarking tools later on because

00:11:00,050 --> 00:11:04,580
it's not everyone kind of gives this

00:11:01,700 --> 00:11:06,380
advice of if it's in Drupal in general

00:11:04,580 --> 00:11:07,880
they say oh just install varnish and set

00:11:06,380 --> 00:11:10,279
up Redis and like all your performance

00:11:07,880 --> 00:11:11,510
problems go away that's not true in

00:11:10,279 --> 00:11:15,170
general and that's definitely not true

00:11:11,510 --> 00:11:17,720
for commerce so be very cautious when

00:11:15,170 --> 00:11:19,579
you test Redis and what it can often be

00:11:17,720 --> 00:11:21,829
doing is if you add Redis you will see a

00:11:19,579 --> 00:11:24,140
performance improvement but it's because

00:11:21,829 --> 00:11:25,640
you're just you're adding more resources

00:11:24,140 --> 00:11:27,829
you've set up a new Redis server you're

00:11:25,640 --> 00:11:29,120
adding that and you're just offloading

00:11:27,829 --> 00:11:33,290
work off your database you're not

00:11:29,120 --> 00:11:35,420
actually going faster overall it's just

00:11:33,290 --> 00:11:36,890
that you've split something up between

00:11:35,420 --> 00:11:38,810
two setups so oftentimes it can be an

00:11:36,890 --> 00:11:41,180
initial problem with your MySQL server

00:11:38,810 --> 00:11:43,640
you just need more resources there or

00:11:41,180 --> 00:11:44,899
you need you know more you need to

00:11:43,640 --> 00:11:47,839
configure to use more memory so it's

00:11:44,899 --> 00:11:51,920
caching tables properly MySQL will load

00:11:47,839 --> 00:11:53,779
up everything in memory as well so Redis

00:11:51,920 --> 00:11:55,700
is not you know you owe its key value

00:11:53,779 --> 00:11:56,779
store it's in memory you know so for

00:11:55,700 --> 00:12:00,649
some reason it supposed to be way way

00:11:56,779 --> 00:12:04,100
faster that's only gonna help you a

00:12:00,649 --> 00:12:05,510
limited amount so proper tuning of your

00:12:04,100 --> 00:12:06,350
MySQL server I would say it would be the

00:12:05,510 --> 00:12:10,480
first thing you do before you

00:12:06,350 --> 00:12:13,029
immediately just toss Redis on there

00:12:10,480 --> 00:12:15,970
next one varnish like I mentioned just

00:12:13,029 --> 00:12:18,350
basically if you ask anyone about Drupal

00:12:15,970 --> 00:12:20,450
performance before you've even finished

00:12:18,350 --> 00:12:21,890
asking your question they're just gonna

00:12:20,450 --> 00:12:24,649
say varnish and they're gonna tell you

00:12:21,890 --> 00:12:26,660
that that's the answer to everything

00:12:24,649 --> 00:12:29,570
is like oh well we just put a varnish

00:12:26,660 --> 00:12:31,730
layer and then Drupal super fast that's

00:12:29,570 --> 00:12:33,890
mostly pointless for commerce because

00:12:31,730 --> 00:12:36,410
like I said so many things are dynamic

00:12:33,890 --> 00:12:39,709
so you're gonna have so many cache

00:12:36,410 --> 00:12:41,270
misses on your varnish layer that you're

00:12:39,709 --> 00:12:42,699
really not gonna get this feed your

00:12:41,270 --> 00:12:45,860
homepage is maybe going to load great

00:12:42,699 --> 00:12:47,329
but after that it's gonna be very

00:12:45,860 --> 00:12:48,170
limited in the performance you get in

00:12:47,329 --> 00:12:50,959
here because you're just you're gonna

00:12:48,170 --> 00:12:53,270
miss this cache all the time if you do

00:12:50,959 --> 00:12:55,550
some of the stuff with auth cache like I

00:12:53,270 --> 00:12:57,440
talked about before you will get a

00:12:55,550 --> 00:12:58,550
little bit better you will get better

00:12:57,440 --> 00:13:00,500
performance cuz you'll be able to use

00:12:58,550 --> 00:13:01,670
varnish for some of these things and I

00:13:00,500 --> 00:13:03,350
would definitely say you can still use

00:13:01,670 --> 00:13:05,510
varnish like I'm not saying don't use it

00:13:03,350 --> 00:13:07,190
just it's not gonna be the sort of

00:13:05,510 --> 00:13:09,519
silver bullet that solves all your

00:13:07,190 --> 00:13:09,519
problems

00:13:12,650 --> 00:13:20,640
okay order locking so this is a specific

00:13:17,190 --> 00:13:24,290
problem that you can get within commerce

00:13:20,640 --> 00:13:26,550
so if you don't have any issues with

00:13:24,290 --> 00:13:27,510
order locking or specific pages or

00:13:26,550 --> 00:13:31,020
something you don't necessarily have to

00:13:27,510 --> 00:13:32,190
worry about fixing this but how this

00:13:31,020 --> 00:13:33,780
works and I'm going to kind of have to

00:13:32,190 --> 00:13:37,950
go into some of the back story here is

00:13:33,780 --> 00:13:40,440
that commerce has this sort of very

00:13:37,950 --> 00:13:42,480
basic pessimistic order locking setup

00:13:40,440 --> 00:13:43,980
and so what that means the difference

00:13:42,480 --> 00:13:46,500
between a pessimistic and optimistic

00:13:43,980 --> 00:13:47,790
order locking is pessimistic order

00:13:46,500 --> 00:13:52,110
locking when you load something up it

00:13:47,790 --> 00:13:54,330
says I might edit this so nobody else

00:13:52,110 --> 00:13:55,680
touch it because I might change

00:13:54,330 --> 00:13:58,680
something and if you change something as

00:13:55,680 --> 00:14:00,900
well then we'll get screwed up the

00:13:58,680 --> 00:14:02,850
problem is is as well that prevents you

00:14:00,900 --> 00:14:06,540
from having any screw-ups it also means

00:14:02,850 --> 00:14:09,060
no one else can work with that setup and

00:14:06,540 --> 00:14:12,390
in the instance of Drupal commerce

00:14:09,060 --> 00:14:14,340
because it uses basically there's some

00:14:12,390 --> 00:14:17,220
very simple default sort of entity

00:14:14,340 --> 00:14:19,140
locking built into Drupal 7 and commerce

00:14:17,220 --> 00:14:20,790
basically just took that and then used

00:14:19,140 --> 00:14:26,580
it probably a little more than it should

00:14:20,790 --> 00:14:30,540
have been used so you have any time you

00:14:26,580 --> 00:14:32,610
load up an order it is going to lock

00:14:30,540 --> 00:14:35,700
it's going to do basically a MySQL 4

00:14:32,610 --> 00:14:37,410
update select and so that row is gonna

00:14:35,700 --> 00:14:41,010
be locked from anyone else loading it

00:14:37,410 --> 00:14:43,530
any other selects on that until

00:14:41,010 --> 00:14:45,660
basically the whole page load finishes

00:14:43,530 --> 00:14:48,930
and the my and the database connection

00:14:45,660 --> 00:14:50,880
is closed so sometimes that's fine most

00:14:48,930 --> 00:14:51,990
times people are just running one you

00:14:50,880 --> 00:14:54,030
know they're going through looking at

00:14:51,990 --> 00:14:55,860
their own order page loads happen pretty

00:14:54,030 --> 00:14:56,880
quickly so most of the time spent

00:14:55,860 --> 00:14:58,740
looking at an order is actually looking

00:14:56,880 --> 00:15:00,510
at a static a screen and nothing's

00:14:58,740 --> 00:15:02,760
happening in the back end where this can

00:15:00,510 --> 00:15:04,440
cause real problems is if you do if you

00:15:02,760 --> 00:15:06,090
have order management screens that show

00:15:04,440 --> 00:15:08,760
lots of orders if you have reports that

00:15:06,090 --> 00:15:10,650
load up orders those are all for the

00:15:08,760 --> 00:15:14,730
duration which they are loading going to

00:15:10,650 --> 00:15:18,090
lock any orders that they touch so that

00:15:14,730 --> 00:15:20,370
means none of your CSRs can edit those

00:15:18,090 --> 00:15:21,990
orders anyone who's a customer like if

00:15:20,370 --> 00:15:23,230
you're still doing these for in card

00:15:21,990 --> 00:15:25,120
orders or something like that

00:15:23,230 --> 00:15:28,690
those orders will not load they will

00:15:25,120 --> 00:15:30,130
hang if you have concurrent Ajax stuff

00:15:28,690 --> 00:15:32,310
that runs in the background and things

00:15:30,130 --> 00:15:32,310
like that

00:15:32,710 --> 00:15:36,700
one of those can block the other and so

00:15:35,200 --> 00:15:39,280
you'll get maybe twice the load time

00:15:36,700 --> 00:15:40,840
that you actually need it's a bad way to

00:15:39,280 --> 00:15:43,150
do order locking it shouldn't have

00:15:40,840 --> 00:15:44,290
really been done that way it just wasn't

00:15:43,150 --> 00:15:47,560
really thought too much it basically

00:15:44,290 --> 00:15:49,240
used the standard Drupal way and then it

00:15:47,560 --> 00:15:51,160
just doesn't scale and it does not

00:15:49,240 --> 00:15:53,400
immediately apparent you have to have

00:15:51,160 --> 00:15:57,390
these sort of cases like I described or

00:15:53,400 --> 00:16:02,010
you have to specifically simulate it so

00:15:57,390 --> 00:16:04,390
how to fix that because that sucks is

00:16:02,010 --> 00:16:05,560
there's a there's a patch on which I've

00:16:04,390 --> 00:16:08,170
linked to there or there's a big thread

00:16:05,560 --> 00:16:10,030
with a number of patches in which will

00:16:08,170 --> 00:16:12,100
limit the instances in which we order

00:16:10,030 --> 00:16:14,980
lock because by default commerce will

00:16:12,100 --> 00:16:16,900
order lock everything and so lots of

00:16:14,980 --> 00:16:18,880
stuff you know if like if I'm looking at

00:16:16,900 --> 00:16:20,770
a view of orders and I'm not and I can't

00:16:18,880 --> 00:16:21,910
edit on that screen we don't need to

00:16:20,770 --> 00:16:24,190
lock any of those orders because I'm

00:16:21,910 --> 00:16:25,950
never gonna change them so there are

00:16:24,190 --> 00:16:28,780
some there's a patch there that will

00:16:25,950 --> 00:16:30,640
make the pessimistic or locking a lot

00:16:28,780 --> 00:16:34,240
more specific so it will only happen on

00:16:30,640 --> 00:16:36,840
like order edit pages cartload specific

00:16:34,240 --> 00:16:40,150
things where you're likely going to be

00:16:36,840 --> 00:16:42,150
changing that order but the second

00:16:40,150 --> 00:16:45,280
option is you can also just turn it off

00:16:42,150 --> 00:16:47,650
which is actually what we run on a lot

00:16:45,280 --> 00:16:51,790
of our sites because it only locks

00:16:47,650 --> 00:16:53,860
during the load it's a very limited

00:16:51,790 --> 00:16:56,470
benefit it's not preventing two people

00:16:53,860 --> 00:16:57,850
from loading up the same order and then

00:16:56,470 --> 00:17:01,200
one person edits it and then the other

00:16:57,850 --> 00:17:02,980
person edits it that can still happen

00:17:01,200 --> 00:17:04,600
that's the thing you have to sort of

00:17:02,980 --> 00:17:07,199
manage you know with revisions and stuff

00:17:04,600 --> 00:17:10,600
like that to keep track of those edits

00:17:07,199 --> 00:17:14,170
so we just usually remove it because

00:17:10,600 --> 00:17:16,930
then we have no blocking issues and that

00:17:14,170 --> 00:17:18,160
can be a real problem for us like this

00:17:16,930 --> 00:17:20,320
can be one of your biggest performance

00:17:18,160 --> 00:17:24,339
things you'll notice it in sort of weird

00:17:20,320 --> 00:17:26,709
strange spikes in response time that you

00:17:24,339 --> 00:17:28,810
won't really be able to track down and

00:17:26,709 --> 00:17:31,600
the way you can find that is if you have

00:17:28,810 --> 00:17:33,880
something like a new relic or even slow

00:17:31,600 --> 00:17:35,290
query log or anything like that from my

00:17:33,880 --> 00:17:35,960
school and you look in and you'll see

00:17:35,290 --> 00:17:38,570
for

00:17:35,960 --> 00:17:40,669
update queries tagging as part of this

00:17:38,570 --> 00:17:42,919
stuff that is taking a really long time

00:17:40,669 --> 00:17:45,830
and those are blocking or like locking

00:17:42,919 --> 00:17:47,659
queries so those are what is your

00:17:45,830 --> 00:17:48,770
problem and why you're getting those is

00:17:47,659 --> 00:17:51,020
because you're having an order blocking

00:17:48,770 --> 00:17:53,570
problem so you can always come and bug

00:17:51,020 --> 00:17:54,740
me if you need more info on that I wrote

00:17:53,570 --> 00:17:56,600
a bunch of the patches and the issue

00:17:54,740 --> 00:18:00,799
there and everything and I'm involved

00:17:56,600 --> 00:18:04,429
all throughout it so next thing database

00:18:00,799 --> 00:18:06,080
locking so this is a standard commerce

00:18:04,429 --> 00:18:08,809
problem although it becomes particularly

00:18:06,080 --> 00:18:12,289
apparent in Drupal commerce because

00:18:08,809 --> 00:18:14,240
Drupal commerce is it uses a lot of

00:18:12,289 --> 00:18:16,270
fields and so it really sort of strains

00:18:14,240 --> 00:18:18,799
the sort of the whole entity system

00:18:16,270 --> 00:18:20,330
orders will have many fields attached to

00:18:18,799 --> 00:18:22,610
them products can oftentimes get very

00:18:20,330 --> 00:18:24,080
large you also have product variations

00:18:22,610 --> 00:18:26,210
that are attached to products and so

00:18:24,080 --> 00:18:29,480
you're loading tons of entities so lots

00:18:26,210 --> 00:18:30,830
of effort or and load is being put on

00:18:29,480 --> 00:18:33,190
the whole sort of entity caching layer

00:18:30,830 --> 00:18:37,070
field caches and stuff like that

00:18:33,190 --> 00:18:40,789
and by default there's a basically

00:18:37,070 --> 00:18:44,659
different isolation methods that MySQL

00:18:40,789 --> 00:18:47,090
uses and by default it won't use read

00:18:44,659 --> 00:18:51,679
committed and it'll use a way that

00:18:47,090 --> 00:18:54,020
basically to sort of keep for for a

00:18:51,679 --> 00:18:55,940
little bit better insert speed which for

00:18:54,020 --> 00:18:58,490
us and Drupal doesn't really matter it

00:18:55,940 --> 00:19:01,190
will basically lock the rows around

00:18:58,490 --> 00:19:02,899
whatever it's editing so it will say hey

00:19:01,190 --> 00:19:04,460
I'm editing here and I sort of need to

00:19:02,899 --> 00:19:05,390
lock the IDs around there because I

00:19:04,460 --> 00:19:07,010
don't know if I'm gonna change this

00:19:05,390 --> 00:19:08,419
maybe I'll remove this ID and then like

00:19:07,010 --> 00:19:12,860
things are gonna have to shuffle up or

00:19:08,419 --> 00:19:15,380
something so it locks these whole

00:19:12,860 --> 00:19:16,370
sections and so now you're doing you

00:19:15,380 --> 00:19:17,240
know you're loading products you're

00:19:16,370 --> 00:19:18,679
doing other things and you're locking

00:19:17,240 --> 00:19:21,470
basically sort of strips in your

00:19:18,679 --> 00:19:22,580
database and if you need to load all

00:19:21,470 --> 00:19:24,500
these products you need to load order

00:19:22,580 --> 00:19:26,360
stuff like this you will get stuck in

00:19:24,500 --> 00:19:28,070
deadlocks and these are ones where it

00:19:26,360 --> 00:19:30,049
won't actually go slow it will get stuck

00:19:28,070 --> 00:19:31,700
and it won't work because it'll say I'm

00:19:30,049 --> 00:19:33,620
trying to load this but you've locked it

00:19:31,700 --> 00:19:35,899
it will time out and the whole page

00:19:33,620 --> 00:19:38,270
won't load this one thankfully is easy

00:19:35,899 --> 00:19:41,090
to fix and pretty easy to diagnose you

00:19:38,270 --> 00:19:42,950
will see in your mask you log and it

00:19:41,090 --> 00:19:45,620
will even pop up in your Drupal watch or

00:19:42,950 --> 00:19:46,970
bubble up into your Drupal watchdog you

00:19:45,620 --> 00:19:48,139
will just see deadlock errors and you'll

00:19:46,970 --> 00:19:49,320
see that they'll all be on like the

00:19:48,139 --> 00:19:50,700
various field tables

00:19:49,320 --> 00:19:53,610
and they will just spam through your

00:19:50,700 --> 00:19:56,130
error logs the thing is is you just have

00:19:53,610 --> 00:19:58,350
to train change your transaction

00:19:56,130 --> 00:20:00,269
isolation to read committed which is

00:19:58,350 --> 00:20:02,279
pretty simple you can do it at the

00:20:00,269 --> 00:20:05,340
database level or you can throw a single

00:20:02,279 --> 00:20:06,480
line into your settings that PHP which

00:20:05,340 --> 00:20:08,610
will fix that and like I said you'll

00:20:06,480 --> 00:20:10,049
sacrifice there were so slightly much

00:20:08,610 --> 00:20:12,210
performance that you probably won't even

00:20:10,049 --> 00:20:14,309
be able to notice it on inserts and you

00:20:12,210 --> 00:20:17,399
will get you will totally eliminate your

00:20:14,309 --> 00:20:19,320
locking problem and that can be this

00:20:17,399 --> 00:20:20,909
comes up quite common in Drupal sites

00:20:19,320 --> 00:20:22,710
this is like a really standard thing we

00:20:20,909 --> 00:20:27,929
do we basically put this in most of our

00:20:22,710 --> 00:20:29,700
sites by default this work this fix here

00:20:27,929 --> 00:20:32,309
and a bunch of other cool performance

00:20:29,700 --> 00:20:34,409
stuff comes from the a pretty darn quick

00:20:32,309 --> 00:20:36,929
cash module which I've linked there

00:20:34,409 --> 00:20:39,059
because it's got a bit of a wordy name

00:20:36,929 --> 00:20:41,429
and a confusing abbreviation it has a

00:20:39,059 --> 00:20:42,779
whole bunch more database tweaks and

00:20:41,429 --> 00:20:44,789
Tunes and stuff you can get it's not

00:20:42,779 --> 00:20:48,120
commerce specific it just as database

00:20:44,789 --> 00:20:49,740
stuff in general but this is a specific

00:20:48,120 --> 00:20:51,480
this is one of the sort of basic ones it

00:20:49,740 --> 00:20:54,769
does and so I just if you want any more

00:20:51,480 --> 00:20:59,279
information for it you can go there

00:20:54,769 --> 00:21:00,419
commerce calculate price so this I'm not

00:20:59,279 --> 00:21:04,980
gonna have as many solutions for this

00:21:00,419 --> 00:21:06,629
one - it is it's kind of just a bad way

00:21:04,980 --> 00:21:12,360
that that commerce wanted X was

00:21:06,629 --> 00:21:14,399
architected well every time we show a

00:21:12,360 --> 00:21:17,129
price in commerce we have to calculate

00:21:14,399 --> 00:21:19,379
what that price is and I mean every time

00:21:17,129 --> 00:21:22,350
we show a price so if we show a whole

00:21:19,379 --> 00:21:24,570
list of pricing on a catalog page if we

00:21:22,350 --> 00:21:26,730
show it on search results even when we

00:21:24,570 --> 00:21:29,730
show a single price on a product page we

00:21:26,730 --> 00:21:31,649
are always calculating that price and

00:21:29,730 --> 00:21:32,940
that's heavier than you think because

00:21:31,649 --> 00:21:34,379
we're calculating everything we're

00:21:32,940 --> 00:21:36,000
saying hey you know is there any reason

00:21:34,379 --> 00:21:38,039
we need to change this because of the

00:21:36,000 --> 00:21:40,110
user because of their location because

00:21:38,039 --> 00:21:41,700
of what the product is are there any

00:21:40,110 --> 00:21:44,580
discounts applied are there any sales

00:21:41,700 --> 00:21:46,649
active any pricing rule that is going to

00:21:44,580 --> 00:21:47,940
run is going to be run every time you

00:21:46,649 --> 00:21:50,159
load that product so if you have a

00:21:47,940 --> 00:21:52,529
catalog page has 30 products you have

00:21:50,159 --> 00:21:54,990
you could have really easily 25

00:21:52,529 --> 00:21:57,240
different pricing rules 25 different

00:21:54,990 --> 00:21:59,970
pricing rules are going to run times 30

00:21:57,240 --> 00:22:01,540
and that is going to actually add a

00:21:59,970 --> 00:22:04,150
pretty significant

00:22:01,540 --> 00:22:08,560
do it so obviously try to cash those

00:22:04,150 --> 00:22:11,770
pages if you can and if you can't try to

00:22:08,560 --> 00:22:13,690
at least be cautious of what you have in

00:22:11,770 --> 00:22:17,050
your pricing rules we get a lot of sites

00:22:13,690 --> 00:22:18,520
where they can bloat up a lot so people

00:22:17,050 --> 00:22:20,290
will have they'll have four years worth

00:22:18,520 --> 00:22:21,790
of discounts set up in there they'll

00:22:20,290 --> 00:22:23,950
have a ton of tax rules they don't use

00:22:21,790 --> 00:22:25,930
they'll have way more than four or five

00:22:23,950 --> 00:22:27,940
times as many pricing rules as they need

00:22:25,930 --> 00:22:29,020
so just go through your list you can

00:22:27,940 --> 00:22:31,900
even look at it directly through the

00:22:29,020 --> 00:22:32,980
rules UI just go through it and audit

00:22:31,900 --> 00:22:34,840
some of those out you you're not gonna

00:22:32,980 --> 00:22:36,610
get a crazy performance increase you

00:22:34,840 --> 00:22:38,860
know but maybe you save you know 20 30

00:22:36,610 --> 00:22:41,620
50 milliseconds off your page load which

00:22:38,860 --> 00:22:46,210
can be significant depending on how

00:22:41,620 --> 00:22:47,680
messy your rule set up is so otherwise

00:22:46,210 --> 00:22:47,920
unfortunately there's not a lot to do

00:22:47,680 --> 00:22:49,630
with that

00:22:47,920 --> 00:22:51,700
that is totally fixed and way better in

00:22:49,630 --> 00:22:53,770
commerce to decks and which I will touch

00:22:51,700 --> 00:22:55,000
on later so you know we didn't just keep

00:22:53,770 --> 00:23:01,150
doing the same stupid thing over and

00:22:55,000 --> 00:23:03,430
over again regular stuff so this stuff

00:23:01,150 --> 00:23:05,110
isn't really commerce specific but it's

00:23:03,430 --> 00:23:08,340
some standard performance stuff that

00:23:05,110 --> 00:23:11,440
tends to come up in commerce quite bit

00:23:08,340 --> 00:23:14,140
first one this is really simple it seems

00:23:11,440 --> 00:23:16,810
like nothing don't have any variable

00:23:14,140 --> 00:23:18,820
sets that run on anything that isn't

00:23:16,810 --> 00:23:21,040
like a one-off config page every time

00:23:18,820 --> 00:23:22,900
you run a variable set you clear the

00:23:21,040 --> 00:23:24,730
entire variable cache and it has to be

00:23:22,900 --> 00:23:26,470
redone and depending on your site this

00:23:24,730 --> 00:23:28,930
might be like a 2 Meg cache that is

00:23:26,470 --> 00:23:31,900
getting redone and so you can be redoing

00:23:28,930 --> 00:23:34,150
that every page load and that will

00:23:31,900 --> 00:23:35,140
absolutely destroy your performance you

00:23:34,150 --> 00:23:37,540
might have a simple thing where you're

00:23:35,140 --> 00:23:39,130
just trying to set like oh who's the

00:23:37,540 --> 00:23:40,510
last person that viewed this product or

00:23:39,130 --> 00:23:44,320
some sort of silly thing like that it

00:23:40,510 --> 00:23:46,690
seems harmless but it will it will just

00:23:44,320 --> 00:23:48,190
destroy your performance if it will

00:23:46,690 --> 00:23:49,870
completely it will turn your page from

00:23:48,190 --> 00:23:51,970
working to almost unload both depending

00:23:49,870 --> 00:23:54,160
on the size of your variable cache

00:23:51,970 --> 00:23:56,110
because you you it's a one thing that

00:23:54,160 --> 00:23:57,720
you cache all the variables it's every

00:23:56,110 --> 00:23:59,680
variable for your entire Drupal site

00:23:57,720 --> 00:24:03,190
that is basically you're going to be

00:23:59,680 --> 00:24:04,660
dumping in there which is just yeah like

00:24:03,190 --> 00:24:07,050
I said awful it can be megabytes for

00:24:04,660 --> 00:24:12,140
even particularly not particularly large

00:24:07,050 --> 00:24:13,549
sites next use all the normal stuff

00:24:12,140 --> 00:24:15,899
[Music]

00:24:13,549 --> 00:24:17,640
page cache block cache you know

00:24:15,899 --> 00:24:18,840
compressor JSC s like all that stuff

00:24:17,640 --> 00:24:21,360
that's in Drupal make sure you have that

00:24:18,840 --> 00:24:22,620
turned on it sounds stupid but lots of

00:24:21,360 --> 00:24:24,539
people will be missing that and it turns

00:24:22,620 --> 00:24:26,250
out oh we're not caching blocks you know

00:24:24,539 --> 00:24:27,450
right and so you're loading menus you're

00:24:26,250 --> 00:24:29,250
loading other things you know commerce

00:24:27,450 --> 00:24:30,480
you might have huge menus that list

00:24:29,250 --> 00:24:33,059
hundreds of products in them and stuff

00:24:30,480 --> 00:24:33,840
if you're not cashing those that's

00:24:33,059 --> 00:24:35,970
terrible

00:24:33,840 --> 00:24:37,980
so make sure those are turned on and

00:24:35,970 --> 00:24:39,179
they maybe even check the blocks that

00:24:37,980 --> 00:24:41,429
you use a lot and make sure they

00:24:39,179 --> 00:24:43,799
actually are caching blocks maybe set to

00:24:41,429 --> 00:24:45,720
not cache depending on what modules you

00:24:43,799 --> 00:24:47,460
have you can turn that on manually it

00:24:45,720 --> 00:24:48,840
may come from modules that you've

00:24:47,460 --> 00:24:52,860
installed and they will have non cache

00:24:48,840 --> 00:24:54,059
and blocks and like a simple block you

00:24:52,860 --> 00:24:56,850
know on this idea page that does

00:24:54,059 --> 00:25:01,169
something seemingly minor will destroy

00:24:56,850 --> 00:25:02,820
most of your performance I touched on it

00:25:01,169 --> 00:25:04,529
a bit audit your rules I was talking

00:25:02,820 --> 00:25:08,580
about pricing rules audit all the rules

00:25:04,529 --> 00:25:10,770
that you have on your site rules fire

00:25:08,580 --> 00:25:14,190
all the time in Drupal commerce most of

00:25:10,770 --> 00:25:15,480
it is based on rules and they can be

00:25:14,190 --> 00:25:18,090
doing really heavy stuff they can be

00:25:15,480 --> 00:25:19,830
doing big heavy calculations they can be

00:25:18,090 --> 00:25:21,750
doing lots of stuff or they can run all

00:25:19,830 --> 00:25:24,390
the time there's lots of stuff that will

00:25:21,750 --> 00:25:26,669
run on add to cart that it will run on

00:25:24,390 --> 00:25:27,059
order update things that happen all the

00:25:26,669 --> 00:25:29,669
time

00:25:27,059 --> 00:25:32,220
so check what you have in there and make

00:25:29,669 --> 00:25:34,529
sure it actually needs to happen it's

00:25:32,220 --> 00:25:37,320
not either could just happen less often

00:25:34,529 --> 00:25:38,700
or it maybe is just old and doesn't need

00:25:37,320 --> 00:25:41,309
to happen at all or maybe you can do it

00:25:38,700 --> 00:25:42,720
in a different way so you know you might

00:25:41,309 --> 00:25:45,120
not get a lot of performance from any

00:25:42,720 --> 00:25:50,039
one rule but from a bunch again it can

00:25:45,120 --> 00:25:52,740
add up the next thing check for anything

00:25:50,039 --> 00:25:56,250
that is setting or screwing with cash

00:25:52,740 --> 00:25:58,140
you can get really weird problems from

00:25:56,250 --> 00:25:59,210
small little modules and stuff like that

00:25:58,140 --> 00:26:02,039
that you can have an otherwise

00:25:59,210 --> 00:26:03,539
performance site that has one small

00:26:02,039 --> 00:26:05,490
quirk and one control that you've

00:26:03,539 --> 00:26:07,289
downloaded and then it can just draw

00:26:05,490 --> 00:26:09,059
your performance I'm just gonna go with

00:26:07,289 --> 00:26:11,309
a quick example that we found when we're

00:26:09,059 --> 00:26:13,409
doing some performance testing we found

00:26:11,309 --> 00:26:15,570
that commerce field group pains which is

00:26:13,409 --> 00:26:17,250
a basically a really simple group it

00:26:15,570 --> 00:26:18,659
makes you take if it takes a field group

00:26:17,250 --> 00:26:20,159
that you've set up for like a commerce

00:26:18,659 --> 00:26:22,409
order and it turns it into a checkout

00:26:20,159 --> 00:26:23,639
pain it's not a very big module it's

00:26:22,409 --> 00:26:25,380
very simple it hasn't really had many

00:26:23,639 --> 00:26:26,380
updates because it does one thing it

00:26:25,380 --> 00:26:28,809
basically works fine

00:26:26,380 --> 00:26:31,900
and that's it the problem was is it had

00:26:28,809 --> 00:26:35,530
a very small thing where when it loaded

00:26:31,900 --> 00:26:37,780
the field info it passed a flag as false

00:26:35,530 --> 00:26:41,440
that should have been true and what that

00:26:37,780 --> 00:26:43,539
meant is that flag said that all the

00:26:41,440 --> 00:26:44,950
field cash gets cleared it said I don't

00:26:43,539 --> 00:26:47,200
want to pull from cash I want to pull

00:26:44,950 --> 00:26:48,610
fresh there was absolutely no reason for

00:26:47,200 --> 00:26:49,960
this module to do this it was a simple

00:26:48,610 --> 00:26:51,370
mistake by the person who was writing it

00:26:49,960 --> 00:26:55,240
they wrote the wrong thing in but that

00:26:51,370 --> 00:26:58,679
resets your entire field cache on every

00:26:55,240 --> 00:27:01,299
page that loads a field group so any

00:26:58,679 --> 00:27:03,010
checkout page ran you would clear all

00:27:01,299 --> 00:27:04,600
the cache not just for you but for

00:27:03,010 --> 00:27:09,490
everyone right you're clearing the whole

00:27:04,600 --> 00:27:11,230
cache for fields so if you have even one

00:27:09,490 --> 00:27:12,549
person going through your checkout they

00:27:11,230 --> 00:27:13,960
are clearing the site for everyone the

00:27:12,549 --> 00:27:15,700
more people you have going to checkout

00:27:13,960 --> 00:27:17,500
the more times you're clearing the cache

00:27:15,700 --> 00:27:19,600
so you're getting all you get almost no

00:27:17,500 --> 00:27:21,820
benefit from caching so there's a little

00:27:19,600 --> 00:27:24,370
things like that that you have to watch

00:27:21,820 --> 00:27:28,630
out for so if you see in your auditing

00:27:24,370 --> 00:27:30,640
that you have you know cache loads that

00:27:28,630 --> 00:27:31,870
are happening they shouldn't and in

00:27:30,640 --> 00:27:33,190
cache sets and stuff they should not

00:27:31,870 --> 00:27:35,110
happen very often if you see those

00:27:33,190 --> 00:27:36,100
popping up a bunch you probably have

00:27:35,110 --> 00:27:37,720
something wrong and you're gonna have to

00:27:36,100 --> 00:27:40,630
drill down a little bit unfortunately to

00:27:37,720 --> 00:27:42,309
find out you know where those are and

00:27:40,630 --> 00:27:44,020
what problems that are causing and

00:27:42,309 --> 00:27:45,760
usually this fix is actually really

00:27:44,020 --> 00:27:48,010
simple but it might take you a while to

00:27:45,760 --> 00:27:50,200
to arrive at you know where the actual

00:27:48,010 --> 00:27:52,000
problem was you know commerce field grew

00:27:50,200 --> 00:27:55,330
pains was not the first module I looked

00:27:52,000 --> 00:28:00,309
at it was probably about the last module

00:27:55,330 --> 00:28:02,919
I ended up looking at next thing tools

00:28:00,309 --> 00:28:09,100
and testing so stuff that you can use to

00:28:02,919 --> 00:28:11,130
help you figure out Drupal commerce so

00:28:09,100 --> 00:28:13,090
and what the performance problems are

00:28:11,130 --> 00:28:14,909
because it can be really really

00:28:13,090 --> 00:28:17,770
difficult you can just have a page that

00:28:14,909 --> 00:28:20,350
it's just slow and why the hell is it

00:28:17,770 --> 00:28:21,909
slow it shouldn't be slow you know it's

00:28:20,350 --> 00:28:23,470
it's not doing anything complicated it's

00:28:21,909 --> 00:28:27,159
loading one product you know it does

00:28:23,470 --> 00:28:29,830
nothing like why does it suck and so

00:28:27,159 --> 00:28:31,450
some stuff you can use a new relic and

00:28:29,830 --> 00:28:33,010
Blackfyre or both really good if you

00:28:31,450 --> 00:28:35,290
haven't used them before new relic is is

00:28:33,010 --> 00:28:37,120
like a pretty good monitoring tool it's

00:28:35,290 --> 00:28:38,470
mostly just like a regular Drupal stuff

00:28:37,120 --> 00:28:39,220
XH prof like running in the background

00:28:38,470 --> 00:28:41,500
but it does it

00:28:39,220 --> 00:28:43,870
a really nice UI it gives you lots of

00:28:41,500 --> 00:28:45,370
things it sort of will pick you know

00:28:43,870 --> 00:28:46,750
important results things that are

00:28:45,370 --> 00:28:49,750
particularly glowing slow group them

00:28:46,750 --> 00:28:51,370
together it's very helpful it does have

00:28:49,750 --> 00:28:54,309
a free version I think it will only

00:28:51,370 --> 00:28:57,880
store your data for 24 hours or three

00:28:54,309 --> 00:28:59,110
days or something like that but it can

00:28:57,880 --> 00:29:00,700
be really helpful like you can just turn

00:28:59,110 --> 00:29:02,590
it on look see what you're a couple of

00:29:00,700 --> 00:29:04,120
top performance things are hit those you

00:29:02,590 --> 00:29:05,830
know see if you fix them and you don't

00:29:04,120 --> 00:29:08,110
need weeks worth of data if you're

00:29:05,830 --> 00:29:09,190
trying to find more educate stuff you're

00:29:08,110 --> 00:29:10,510
gonna probably need to pay for that

00:29:09,190 --> 00:29:12,640
longer amount of data but you can get a

00:29:10,510 --> 00:29:14,500
ton done with the free report it has

00:29:12,640 --> 00:29:16,179
most of the features it just doesn't

00:29:14,500 --> 00:29:18,130
store the data for a long time so it's

00:29:16,179 --> 00:29:20,860
it's very useful in the free offering is

00:29:18,130 --> 00:29:22,780
quite robust Blackfyre is similar

00:29:20,860 --> 00:29:26,909
although it is more of a sort of test

00:29:22,780 --> 00:29:28,630
driven type of performance approach so

00:29:26,909 --> 00:29:30,700
it's sort of something where you can say

00:29:28,630 --> 00:29:33,159
hey you know run these pages and stuff

00:29:30,700 --> 00:29:34,990
and I expect like these performance

00:29:33,159 --> 00:29:37,210
results and if and it's gonna basically

00:29:34,990 --> 00:29:38,559
generate you a report about that and you

00:29:37,210 --> 00:29:41,020
know why didn't you hit that what wasn't

00:29:38,559 --> 00:29:42,250
performant and stuff so the actual data

00:29:41,020 --> 00:29:43,780
you're gonna get from it is fairly

00:29:42,250 --> 00:29:45,700
similar but one sort of more of an act

00:29:43,780 --> 00:29:46,900
of monitoring and ones like a testing

00:29:45,700 --> 00:29:50,860
and something you more run on you know

00:29:46,900 --> 00:29:53,340
devs and staging and stuff the next

00:29:50,860 --> 00:29:55,840
thing is you can just use xh prof

00:29:53,340 --> 00:29:56,950
directly a lot of those other ones

00:29:55,840 --> 00:29:58,809
they're actually basically a layer over

00:29:56,950 --> 00:30:01,179
top of that and they do custom stuff and

00:29:58,809 --> 00:30:04,750
things like that but xh prop is going to

00:30:01,179 --> 00:30:06,909
show you what run it's gonna show you

00:30:04,750 --> 00:30:09,520
basically all the functions that run on

00:30:06,909 --> 00:30:10,990
a full page load for you and then just

00:30:09,520 --> 00:30:12,580
going to show you how much time they all

00:30:10,990 --> 00:30:15,190
take and so that's where you're gonna

00:30:12,580 --> 00:30:16,270
drill down to find out what is causing a

00:30:15,190 --> 00:30:18,760
problem because you'll probably get

00:30:16,270 --> 00:30:21,520
something upper level you know hey this

00:30:18,760 --> 00:30:22,750
you know blow product function is is

00:30:21,520 --> 00:30:24,429
going really slowly right but it's

00:30:22,750 --> 00:30:25,570
probably not low product itself that's

00:30:24,429 --> 00:30:27,580
slow you're probably just gonna have to

00:30:25,570 --> 00:30:29,080
drill down and you're gonna find okay

00:30:27,580 --> 00:30:30,429
this goes in at a half a millisecond

00:30:29,080 --> 00:30:32,950
this goes in a tenth of a millisecond

00:30:30,429 --> 00:30:35,559
this goes in 30 milliseconds okay why is

00:30:32,950 --> 00:30:39,549
that and then you can pick those ones

00:30:35,559 --> 00:30:40,690
that are specific that you think as

00:30:39,549 --> 00:30:42,130
excuse you kind of have to use your

00:30:40,690 --> 00:30:43,059
intuition a little and as you do more

00:30:42,130 --> 00:30:44,919
you'll get better at it

00:30:43,059 --> 00:30:47,140
but you can usually pick ones that you

00:30:44,919 --> 00:30:48,340
know they're big and there's no reason

00:30:47,140 --> 00:30:51,640
they should be big or you'll see

00:30:48,340 --> 00:30:52,840
function names that seem innocuous but

00:30:51,640 --> 00:30:55,210
the time just doesn't match

00:30:52,840 --> 00:31:00,970
and then you can go into those take a

00:30:55,210 --> 00:31:03,009
look okay next thing is the devil query

00:31:00,970 --> 00:31:05,139
log that you can do and so it can

00:31:03,009 --> 00:31:06,850
basically you can turn it on for the

00:31:05,139 --> 00:31:08,470
devel module and down at the bottom of

00:31:06,850 --> 00:31:10,720
your page it will just show all the

00:31:08,470 --> 00:31:13,179
database queries that have to run and

00:31:10,720 --> 00:31:14,679
how long they took to run this can be

00:31:13,179 --> 00:31:17,499
just a really easy one to see if you

00:31:14,679 --> 00:31:21,909
have a sec 'single query that is running

00:31:17,499 --> 00:31:23,259
bad on a single you know you can just

00:31:21,909 --> 00:31:25,240
have one little one off there's an index

00:31:23,259 --> 00:31:29,019
missed somewhere in some in some custom

00:31:25,240 --> 00:31:32,049
thing you made in some contraband

00:31:29,019 --> 00:31:33,580
database thing it won't help if you have

00:31:32,049 --> 00:31:34,539
things it won't help too much if you

00:31:33,580 --> 00:31:36,850
have something that's just running way

00:31:34,539 --> 00:31:38,100
too much it will kind of point that out

00:31:36,850 --> 00:31:40,059
but it won't necessarily give you

00:31:38,100 --> 00:31:41,950
indexes where the problems but slow

00:31:40,059 --> 00:31:43,179
stuff and things like that it will flag

00:31:41,950 --> 00:31:45,490
that really easy you'll also get it from

00:31:43,179 --> 00:31:46,720
your slow query log but this just gives

00:31:45,490 --> 00:31:47,799
you a breakdown of everything that was

00:31:46,720 --> 00:31:49,480
loading on the site you might have a

00:31:47,799 --> 00:31:50,649
thing where like all these queries are

00:31:49,480 --> 00:31:52,360
running and why do they even run they

00:31:50,649 --> 00:31:54,460
shouldn't run on this section and stuff

00:31:52,360 --> 00:31:55,360
so I won't touch on that too much but

00:31:54,460 --> 00:31:58,119
you so you haven't been using that

00:31:55,360 --> 00:31:59,529
that's very good the slow query log from

00:31:58,119 --> 00:32:02,409
is Co which you turn on is very similar

00:31:59,529 --> 00:32:04,450
although it's only gonna get slow

00:32:02,409 --> 00:32:06,100
queries it's not gonna quit crews that

00:32:04,450 --> 00:32:07,269
run way too often or queries that

00:32:06,100 --> 00:32:11,379
shouldn't run and things like that you

00:32:07,269 --> 00:32:15,779
have to go in in more detail there the

00:32:11,379 --> 00:32:19,240
next thing is benchmarking tools jmeter

00:32:15,779 --> 00:32:21,419
is amazing it has tons of features it's

00:32:19,240 --> 00:32:25,539
really good it's UX is horrendously bad

00:32:21,419 --> 00:32:27,309
um you won't be like it will take a

00:32:25,539 --> 00:32:30,399
while to actually get it set up and to

00:32:27,309 --> 00:32:31,929
get it working and especially if you

00:32:30,399 --> 00:32:35,080
have to test with Commerce because you

00:32:31,929 --> 00:32:36,820
can't just do a page load that's the

00:32:35,080 --> 00:32:38,350
easy thing to test that's not where most

00:32:36,820 --> 00:32:40,600
of your performance is going to be you

00:32:38,350 --> 00:32:43,269
have to add things to cart you have to

00:32:40,600 --> 00:32:45,369
go through the checkout you have to go

00:32:43,269 --> 00:32:50,529
through the cart you have to do all

00:32:45,369 --> 00:32:51,820
these product flow steps to actually

00:32:50,529 --> 00:32:53,440
simulate commerce if you're if your

00:32:51,820 --> 00:32:56,470
first page loads well that doesn't

00:32:53,440 --> 00:32:58,769
matter that has nothing to do with 99%

00:32:56,470 --> 00:33:01,179
of your site so test with that

00:32:58,769 --> 00:33:03,820
specifically test with sessions as well

00:33:01,179 --> 00:33:05,620
so make sure you set a session in both

00:33:03,820 --> 00:33:08,200
jmeter and Apache bench

00:33:05,620 --> 00:33:10,000
you can set a session Apache bench it's

00:33:08,200 --> 00:33:19,030
a little lame talking too long on that

00:33:10,000 --> 00:33:20,680
slide so Apache bench you can actually

00:33:19,030 --> 00:33:21,880
log in you can create a session you can

00:33:20,680 --> 00:33:23,710
add things that's going to track your

00:33:21,880 --> 00:33:25,090
session it's going to go through Apache

00:33:23,710 --> 00:33:26,200
bench is a little dumber what you're

00:33:25,090 --> 00:33:27,460
gonna have to do is you're gonna have to

00:33:26,200 --> 00:33:29,170
go in your browser you're gonna have to

00:33:27,460 --> 00:33:30,250
do that stuff yourself set up a cart or

00:33:29,170 --> 00:33:31,510
something and then you can just copy the

00:33:30,250 --> 00:33:34,120
session cookie out of it and you can

00:33:31,510 --> 00:33:35,830
pass it through the patch of bench but

00:33:34,120 --> 00:33:37,570
Apache bench is just really helpful for

00:33:35,830 --> 00:33:38,590
running really quick small tests that

00:33:37,570 --> 00:33:40,030
you can just run from the command line

00:33:38,590 --> 00:33:44,410
where's Jamie who's this big Java

00:33:40,030 --> 00:33:46,510
monstrosity and if you're not testing

00:33:44,410 --> 00:33:50,290
with the session set your sort of

00:33:46,510 --> 00:33:51,400
wasting your time so and you know you

00:33:50,290 --> 00:33:52,990
can't test perfectly through your

00:33:51,400 --> 00:33:54,340
checkout flow you know often times

00:33:52,990 --> 00:33:56,440
because you have real payment gateways

00:33:54,340 --> 00:33:58,090
and stuff there but test as far as you

00:33:56,440 --> 00:33:59,410
can maybe turn on the example payment

00:33:58,090 --> 00:34:00,880
gateway on your dev environments and

00:33:59,410 --> 00:34:03,520
stuff like that and try to go through

00:34:00,880 --> 00:34:04,690
all the way to the Thank You page we

00:34:03,520 --> 00:34:06,940
have problems where people will test

00:34:04,690 --> 00:34:09,820
like the easy parts and they won't test

00:34:06,940 --> 00:34:12,100
that last part and then you'll have you

00:34:09,820 --> 00:34:14,200
know 20-second page loads 15-second page

00:34:12,100 --> 00:34:16,240
loads on your checkout pages and that

00:34:14,200 --> 00:34:18,010
will cause people to drop and not use

00:34:16,240 --> 00:34:19,960
your check out they will get partway

00:34:18,010 --> 00:34:21,940
through it would be difficult it will

00:34:19,960 --> 00:34:24,730
lag it will confuse them they will just

00:34:21,940 --> 00:34:25,780
give up the the threshold people have

00:34:24,730 --> 00:34:28,270
for buying something and not buying

00:34:25,780 --> 00:34:30,580
something is super low people will buy

00:34:28,270 --> 00:34:32,679
on a whim and anything that gets in the

00:34:30,580 --> 00:34:34,240
way will really stop them from buying it

00:34:32,679 --> 00:34:36,429
so you will actually get a real

00:34:34,240 --> 00:34:37,659
significant cart drop off you can always

00:34:36,429 --> 00:34:39,429
check your analytics you can look if you

00:34:37,659 --> 00:34:41,530
have a particular page that's problem a

00:34:39,429 --> 00:34:45,550
problematic and then that can sort of

00:34:41,530 --> 00:34:48,550
focus your testing efforts to be like

00:34:45,550 --> 00:34:50,350
okay this page I think the UX is okay

00:34:48,550 --> 00:34:54,730
but people just bomb on that page what's

00:34:50,350 --> 00:34:59,560
my performance like on that page okay

00:34:54,730 --> 00:35:00,670
commerce 2x so come first of all a

00:34:59,560 --> 00:35:02,350
little bit background commerce start at

00:35:00,670 --> 00:35:06,310
X commerce to that X is the rewrite for

00:35:02,350 --> 00:35:08,440
Drupal 8 of commerce is not out yet I

00:35:06,310 --> 00:35:11,920
think the last beta will release

00:35:08,440 --> 00:35:13,240
tomorrow maybe today which will have

00:35:11,920 --> 00:35:16,240
sort of most of the functionality and

00:35:13,240 --> 00:35:19,000
then RC one will be right at the end of

00:35:16,240 --> 00:35:20,349
May so probably right on May 31st

00:35:19,000 --> 00:35:23,380
so for just a little bit of back sorry

00:35:20,349 --> 00:35:26,140
that it is totally rewritten to be like

00:35:23,380 --> 00:35:28,960
Drupal 8 so to use you know Symphony

00:35:26,140 --> 00:35:30,400
components and to be object-oriented to

00:35:28,960 --> 00:35:32,410
work with composer to have all that

00:35:30,400 --> 00:35:33,520
setup I won't talk too much but just

00:35:32,410 --> 00:35:36,599
give you a bit of a background that it

00:35:33,520 --> 00:35:38,890
is like a full architectural rewrite

00:35:36,599 --> 00:35:40,960
which means we can use cool stuff

00:35:38,890 --> 00:35:43,450
performance stuff that comes with Drupal

00:35:40,960 --> 00:35:46,930
8 the first of which is we can use big

00:35:43,450 --> 00:35:49,510
pipe which Jesus talked about a little

00:35:46,930 --> 00:35:50,920
bit in his keynote and I know has sort

00:35:49,510 --> 00:35:53,230
of gotten some decent press around the

00:35:50,920 --> 00:35:54,700
community lately that basically lets you

00:35:53,230 --> 00:35:57,460
do kind of what I described with auth

00:35:54,700 --> 00:35:58,900
cash where you can edge load stuff but

00:35:57,460 --> 00:36:02,800
it's totally built-in it's way better

00:35:58,900 --> 00:36:06,310
and it uses a you know cash contexts and

00:36:02,800 --> 00:36:08,950
all the sort of cash info that we now

00:36:06,310 --> 00:36:11,050
have built into Drupal core or we can

00:36:08,950 --> 00:36:12,640
say hey it's not just the page or not

00:36:11,050 --> 00:36:14,560
the page it's all these parts of the

00:36:12,640 --> 00:36:16,210
page that I can cache and so you can

00:36:14,560 --> 00:36:17,680
load 90% of the page and then the

00:36:16,210 --> 00:36:20,200
dynamic bits pop in later

00:36:17,680 --> 00:36:22,090
so we load you can do like a really cool

00:36:20,200 --> 00:36:24,460
example so you want to have a catalog

00:36:22,090 --> 00:36:26,080
page but you want to show the user some

00:36:24,460 --> 00:36:27,820
customized products that are just

00:36:26,080 --> 00:36:29,349
important for them so they're basically

00:36:27,820 --> 00:36:31,750
say hey you know based on your previous

00:36:29,349 --> 00:36:34,119
purchase history or whatever use these

00:36:31,750 --> 00:36:35,170
products or you know view these products

00:36:34,119 --> 00:36:36,700
and they're probably recommended ones

00:36:35,170 --> 00:36:40,119
that you'll want but that's slower

00:36:36,700 --> 00:36:42,310
that's dynamic for each user so that's

00:36:40,119 --> 00:36:44,580
the thing that we can't cash but so what

00:36:42,310 --> 00:36:47,109
you can do is you can put maybe like

00:36:44,580 --> 00:36:48,520
maybe you put you know a top 8 products

00:36:47,109 --> 00:36:49,750
and those are the same for everyone so

00:36:48,520 --> 00:36:52,710
you can catch those you load them up

00:36:49,750 --> 00:36:55,030
right away and then you siloed in the

00:36:52,710 --> 00:36:56,109
dynamic products below that so the user

00:36:55,030 --> 00:36:59,230
still has something to look at they're

00:36:56,109 --> 00:37:00,460
not waiting for a page load but they and

00:36:59,230 --> 00:37:02,020
so they get content but then they also

00:37:00,460 --> 00:37:04,119
get their customized content and so

00:37:02,020 --> 00:37:05,619
you're perceived page load even if your

00:37:04,119 --> 00:37:07,210
total page load is so low you're

00:37:05,619 --> 00:37:10,210
perceived page load can be much much

00:37:07,210 --> 00:37:12,040
faster I'm a big I'm a big pipe fanboy

00:37:10,210 --> 00:37:16,690
I'm a big big pipe fanboy I won't say

00:37:12,040 --> 00:37:17,859
that again I've spoken at it before

00:37:16,690 --> 00:37:19,599
we've done videos on it and stuff like

00:37:17,859 --> 00:37:21,700
that it's really cool and it's really

00:37:19,599 --> 00:37:25,240
good for commerce because it really

00:37:21,700 --> 00:37:27,339
addresses that whole problem of dynamic

00:37:25,240 --> 00:37:28,270
pages and what to do it I actually

00:37:27,339 --> 00:37:30,040
should have mentioned on here as well

00:37:28,270 --> 00:37:30,880
although I kind of think of them as the

00:37:30,040 --> 00:37:32,440
same thing even though they're not

00:37:30,880 --> 00:37:34,240
really true

00:37:32,440 --> 00:37:37,030
also has a lot of dynamic page caching

00:37:34,240 --> 00:37:39,040
built into it for Drupal 8 to handle

00:37:37,030 --> 00:37:40,900
cache in parts of pages and and stuff

00:37:39,040 --> 00:37:42,910
that is dynamic but can still be cached

00:37:40,900 --> 00:37:44,260
so that lets you you know push a devarnè

00:37:42,910 --> 00:37:45,370
ish and still do things like that and do

00:37:44,260 --> 00:37:49,060
all that stuff that I talked about being

00:37:45,370 --> 00:37:50,590
such a big problem in seven that isn't a

00:37:49,060 --> 00:37:52,150
problem in eight and a lot of that is

00:37:50,590 --> 00:37:53,260
not going to be your problem to config

00:37:52,150 --> 00:37:54,760
anymore because it's gonna come with

00:37:53,260 --> 00:37:56,230
commerce it's gonna come with stuff

00:37:54,760 --> 00:37:58,270
built in a Drupal it's gonna be built

00:37:56,230 --> 00:37:59,950
into controls when you're setting stuff

00:37:58,270 --> 00:38:01,690
up you have to set all that cache info

00:37:59,950 --> 00:38:02,710
there probably little tweaks and things

00:38:01,690 --> 00:38:03,910
like that where everyone gets this

00:38:02,710 --> 00:38:06,790
ironed out because it's a little it's

00:38:03,910 --> 00:38:08,320
still pretty new but it's gonna work so

00:38:06,790 --> 00:38:11,500
much nicer for dynamic content out of

00:38:08,320 --> 00:38:13,030
the box kind of a mix of points up here

00:38:11,500 --> 00:38:15,910
but yes and that will let you push all

00:38:13,030 --> 00:38:17,830
that to varnish as well the next thing

00:38:15,910 --> 00:38:19,860
we will have optimistic order locking

00:38:17,830 --> 00:38:24,370
which is just generally a happier term

00:38:19,860 --> 00:38:26,140
but also means that we won't have any of

00:38:24,370 --> 00:38:27,070
those order locking problems we talked

00:38:26,140 --> 00:38:30,220
about before so it will have an

00:38:27,070 --> 00:38:31,870
optimistic locking setup which says we

00:38:30,220 --> 00:38:34,120
assume that we will never change the

00:38:31,870 --> 00:38:36,520
data and we can always load it so we

00:38:34,120 --> 00:38:38,320
always load the data all the time and

00:38:36,520 --> 00:38:40,480
then should we have somehow screwed up

00:38:38,320 --> 00:38:41,620
and we did edit it and then now we're

00:38:40,480 --> 00:38:43,510
gonna work on it again we just say hey

00:38:41,620 --> 00:38:45,610
I'm sorry you know we throw an exception

00:38:43,510 --> 00:38:46,750
we say this has been changed you know

00:38:45,610 --> 00:38:48,400
you can't edit that more you need to

00:38:46,750 --> 00:38:49,750
reload and try again it and so that can

00:38:48,400 --> 00:38:52,480
be handled sort of on those individual

00:38:49,750 --> 00:38:53,890
cases and we don't sacrifice performance

00:38:52,480 --> 00:38:55,630
for that because we assume and we just

00:38:53,890 --> 00:38:57,130
load things up fast and then we deal

00:38:55,630 --> 00:39:00,550
with them afterwards in the editing and

00:38:57,130 --> 00:39:06,150
the smaller one out cases versus the big

00:39:00,550 --> 00:39:06,150
loads and events okay next

00:39:09,850 --> 00:39:17,000
Commerce like I talked about calculating

00:39:14,330 --> 00:39:19,010
prices it uses something they use price

00:39:17,000 --> 00:39:22,160
adjustments now and this actually has a

00:39:19,010 --> 00:39:26,750
full caching layer which I think is done

00:39:22,160 --> 00:39:29,090
or almost done at least and so all these

00:39:26,750 --> 00:39:30,350
price calculations that happen they

00:39:29,090 --> 00:39:32,060
don't have to happen all the time now

00:39:30,350 --> 00:39:34,520
they only happen when we're actually

00:39:32,060 --> 00:39:35,690
doing something to the price so when we

00:39:34,520 --> 00:39:38,270
load up products and we just want to

00:39:35,690 --> 00:39:40,340
display them we're not recalculating any

00:39:38,270 --> 00:39:42,620
of the pricing anymore we are doing that

00:39:40,340 --> 00:39:44,300
only when we should and so that saves us

00:39:42,620 --> 00:39:45,620
a lot of speed price adjustments are

00:39:44,300 --> 00:39:46,970
also just awesome and they're way easier

00:39:45,620 --> 00:39:48,170
to work with and they're great for taxes

00:39:46,970 --> 00:39:50,300
and discounts and other things but

00:39:48,170 --> 00:39:55,160
specifically for performance they have a

00:39:50,300 --> 00:39:56,570
real benefit there okay I will try to be

00:39:55,160 --> 00:39:58,040
pretty quick here so we still have time

00:39:56,570 --> 00:40:01,040
for questions

00:39:58,040 --> 00:40:02,750
conditions instead of rules Drupal

00:40:01,040 --> 00:40:05,180
commerce for two iudex doesn't actually

00:40:02,750 --> 00:40:07,150
use rules anymore it just uses the

00:40:05,180 --> 00:40:10,850
conditions set up that's now basically

00:40:07,150 --> 00:40:12,290
built into Drupal core and they are much

00:40:10,850 --> 00:40:14,330
more fine-grained so we don't have these

00:40:12,290 --> 00:40:16,700
big overarching rules that have to fire

00:40:14,330 --> 00:40:19,600
all the time we have specific conditions

00:40:16,700 --> 00:40:22,070
that are already tied to event so

00:40:19,600 --> 00:40:23,930
discounts know exactly when to fire and

00:40:22,070 --> 00:40:25,400
when they need to be calculated taxes

00:40:23,930 --> 00:40:27,740
know exactly when they need to fire and

00:40:25,400 --> 00:40:29,750
be calculated conditional payment

00:40:27,740 --> 00:40:32,330
options only go exactly when they have

00:40:29,750 --> 00:40:35,240
to go so it's both a nicer setup to use

00:40:32,330 --> 00:40:37,190
from a user experience point and it is a

00:40:35,240 --> 00:40:41,020
little lighter than the rules set up

00:40:37,190 --> 00:40:43,850
which was well very robust a bit heavy

00:40:41,020 --> 00:40:45,650
quick things to go through HTTP to has

00:40:43,850 --> 00:40:51,500
like a nice module to support pushing

00:40:45,650 --> 00:40:54,440
CSS JSS or jeaious there's only one s to

00:40:51,500 --> 00:40:56,060
the browser a lot faster because

00:40:54,440 --> 00:40:57,590
oftentimes we have you know heavy stuff

00:40:56,060 --> 00:40:59,840
will do that if we do builders and flows

00:40:57,590 --> 00:41:00,770
and stuff like that so that's very good

00:40:59,840 --> 00:41:02,990
you can get a decent performance

00:41:00,770 --> 00:41:04,660
increase their works nicely with Drupal

00:41:02,990 --> 00:41:07,550
8 there's also a refresh list module

00:41:04,660 --> 00:41:08,870
which does this really cool like on page

00:41:07,550 --> 00:41:10,130
loading where you don't load a whole new

00:41:08,870 --> 00:41:12,380
page and everything look at the demo

00:41:10,130 --> 00:41:13,430
it's very slick it works great it will

00:41:12,380 --> 00:41:15,350
hopefully be really cool for commerce

00:41:13,430 --> 00:41:18,950
and sorry I'm going to talk really fast

00:41:15,350 --> 00:41:20,300
so we can get this in here web profiler

00:41:18,950 --> 00:41:20,730
which comes with the devel module in

00:41:20,300 --> 00:41:22,320
Drupal

00:41:20,730 --> 00:41:23,610
it will give you this awesome toolbar

00:41:22,320 --> 00:41:26,640
down which I probably should've included

00:41:23,610 --> 00:41:28,200
a screenshot of in retrospect but if you

00:41:26,640 --> 00:41:30,360
go to the devel module you can see it it

00:41:28,200 --> 00:41:31,530
will give you this really cool tool bar

00:41:30,360 --> 00:41:32,460
down at the bottom of any of your pages

00:41:31,530 --> 00:41:34,290
when you have to turn on and it will

00:41:32,460 --> 00:41:36,900
show you tons of performance issues or

00:41:34,290 --> 00:41:38,340
info it will show you you know whether

00:41:36,900 --> 00:41:40,620
the caching was hit or not what caching

00:41:38,340 --> 00:41:42,930
was hit what database calls were made

00:41:40,620 --> 00:41:45,600
you know what your time to first byte

00:41:42,930 --> 00:41:47,160
was what your page load time it's just

00:41:45,600 --> 00:41:49,320
all this cashing in for at the bottom it

00:41:47,160 --> 00:41:51,720
works really cool out of the box it it's

00:41:49,320 --> 00:41:52,860
been it comes originally from Symphony

00:41:51,720 --> 00:41:54,750
and then has been edited to work with

00:41:52,860 --> 00:41:55,680
Drupal quite a bit it is very good and

00:41:54,750 --> 00:41:58,890
it will help your performance debugging

00:41:55,680 --> 00:42:02,430
the clock next thing really quick to

00:41:58,890 --> 00:42:04,940
sort of tack this on here we from Accra

00:42:02,430 --> 00:42:07,830
media I've just started doing a free

00:42:04,940 --> 00:42:11,700
basically SLA report for commerce that

00:42:07,830 --> 00:42:13,590
we use it so we are going to will

00:42:11,700 --> 00:42:14,640
basically send out a report which you

00:42:13,590 --> 00:42:15,870
can see on our website and i've linked

00:42:14,640 --> 00:42:19,530
just a bit of a screenshot at the top

00:42:15,870 --> 00:42:20,640
here of which says like here's all the

00:42:19,530 --> 00:42:21,960
security updates and here's all the

00:42:20,640 --> 00:42:24,120
various updates that have happened you

00:42:21,960 --> 00:42:26,010
know in the drupal ecosystem here's

00:42:24,120 --> 00:42:27,360
what's you know changed and you should

00:42:26,010 --> 00:42:28,350
update you know here's important

00:42:27,360 --> 00:42:30,210
security things here's not that

00:42:28,350 --> 00:42:31,470
important security things here's what

00:42:30,210 --> 00:42:32,790
you know test coverage looks like for

00:42:31,470 --> 00:42:34,410
various things so you can try to you

00:42:32,790 --> 00:42:36,360
know as ascertaining the robustness of

00:42:34,410 --> 00:42:37,530
various modules and performance tips and

00:42:36,360 --> 00:42:38,670
some other stuff like that so there

00:42:37,530 --> 00:42:39,780
wasn't a lot of support for commerce in

00:42:38,670 --> 00:42:41,940
the community so we've been trying to do

00:42:39,780 --> 00:42:42,990
that you can sign up for that if you

00:42:41,940 --> 00:42:44,190
want to sign up you can always come by

00:42:42,990 --> 00:42:46,830
our booth will scan you sign you up in

00:42:44,190 --> 00:42:48,960
like two seconds so it goes out monthly

00:42:46,830 --> 00:42:51,960
it's just a simple email we try not to

00:42:48,960 --> 00:42:53,910
spam you at all and then we will do the

00:42:51,960 --> 00:42:55,770
2.0 version of that once - dotto

00:42:53,910 --> 00:42:57,000
launches in about a month so and we have

00:42:55,770 --> 00:42:58,800
a number of modules we support now and

00:42:57,000 --> 00:43:01,830
we will continue adding more modules

00:42:58,800 --> 00:43:03,060
there okay there we go the last of all

00:43:01,830 --> 00:43:06,120
thank you things and then we will get on

00:43:03,060 --> 00:43:09,210
to questions just a few people

00:43:06,120 --> 00:43:12,300
- thanks there boy and towards pizza

00:43:09,210 --> 00:43:15,090
who's Eric Josh Miller who works for us

00:43:12,300 --> 00:43:17,370
and Damian who just helped me with

00:43:15,090 --> 00:43:18,660
various parts of you know fixing

00:43:17,370 --> 00:43:20,550
performance things in commerce and

00:43:18,660 --> 00:43:23,730
learning about stuff that I talked about

00:43:20,550 --> 00:43:26,330
in this talk secondly I have another

00:43:23,730 --> 00:43:28,620
session with the affirmation Josh Miller

00:43:26,330 --> 00:43:30,570
on Thursday we'll be talking all about

00:43:28,620 --> 00:43:32,040
feelings and lovey-dovey things and

00:43:30,570 --> 00:43:34,080
basically if you're like an inhuman

00:43:32,040 --> 00:43:36,600
emotionless monster like I am

00:43:34,080 --> 00:43:38,400
you will you know be nice and talk to

00:43:36,600 --> 00:43:41,610
people and work with teams and and do

00:43:38,400 --> 00:43:46,830
fun happy stuff we are sprinting for

00:43:41,610 --> 00:43:47,940
commerce on Friday so we will be I will

00:43:46,830 --> 00:43:49,470
be there at least for the morning I have

00:43:47,940 --> 00:43:51,840
to fly out in the afternoon but we were

00:43:49,470 --> 00:43:53,550
trying to be doing sprinting on Friday

00:43:51,840 --> 00:43:55,980
we'll set up a Commerce table or tables

00:43:53,550 --> 00:43:58,020
so come around and find us we're

00:43:55,980 --> 00:44:00,000
Canadian so we got suckered into doing

00:43:58,020 --> 00:44:02,010
all the Canadian tax work which bring

00:44:00,000 --> 00:44:03,870
that we have to finish on Friday so we

00:44:02,010 --> 00:44:05,130
will try to do that if you want to come

00:44:03,870 --> 00:44:06,150
talk to us talk about ripple commerce

00:44:05,130 --> 00:44:07,110
there's a whole bunch of us around we

00:44:06,150 --> 00:44:11,430
have these sweet Drupal commerce

00:44:07,110 --> 00:44:12,690
t-shirts you can find our booth it's

00:44:11,430 --> 00:44:13,650
pretty big it says Drupal Commerce and

00:44:12,690 --> 00:44:16,230
huge letters on it and you probably

00:44:13,650 --> 00:44:17,970
can't miss it and the last thing if you

00:44:16,230 --> 00:44:19,740
have any commerce commit creds and you

00:44:17,970 --> 00:44:22,500
want a sweet exclusive very exclusive

00:44:19,740 --> 00:44:23,910
Commerce Committee t-shirt come up and

00:44:22,500 --> 00:44:26,250
show us that you have like at least one

00:44:23,910 --> 00:44:27,930
commerce related commit cred on your do

00:44:26,250 --> 00:44:31,770
profile and we will give you an

00:44:27,930 --> 00:44:33,600
exclusive shirt there we go last slide

00:44:31,770 --> 00:44:39,710
okay we're done

00:44:33,600 --> 00:44:39,710
question time or applause

00:44:39,780 --> 00:44:42,969
[Applause]

00:44:44,850 --> 00:44:49,270
you see um will maybe try see if we can

00:44:47,680 --> 00:44:50,740
just shut out and if not we'll use the

00:44:49,270 --> 00:45:08,560
mic here but I'll repeat the questions

00:44:50,740 --> 00:45:11,290
here yes sorry the question was is

00:45:08,560 --> 00:45:14,500
triple commerce - dodo stable enough to

00:45:11,290 --> 00:45:15,910
play around with and to start using yes

00:45:14,500 --> 00:45:17,980
especially if you don't plan to launch

00:45:15,910 --> 00:45:19,690
your site immediately then you're fine

00:45:17,980 --> 00:45:22,260
we have a number of launch site there

00:45:19,690 --> 00:45:24,550
are probably half a dozen or more sites

00:45:22,260 --> 00:45:27,580
that have been launched already with it

00:45:24,550 --> 00:45:28,750
so it's definitely good for that just

00:45:27,580 --> 00:45:30,280
check a little bit what you need from

00:45:28,750 --> 00:45:31,510
the contribu Co system and stuff like

00:45:30,280 --> 00:45:33,040
that but we're actually pretty robust we

00:45:31,510 --> 00:45:35,770
support over 20 payment gateways already

00:45:33,040 --> 00:45:38,410
now we have shipping we have discounts

00:45:35,770 --> 00:45:40,360
you know we have all the sort of major

00:45:38,410 --> 00:45:42,490
stuff in it so it is pretty robust

00:45:40,360 --> 00:45:43,390
already but if you want to launch in two

00:45:42,490 --> 00:45:44,920
weeks you know

00:45:43,390 --> 00:45:47,770
that's maybe a little too fast so yeah

00:45:44,920 --> 00:45:50,260
oh yeah like it's it's like I said we're

00:45:47,770 --> 00:45:51,640
on last beta like in a day or two so it

00:45:50,260 --> 00:45:52,540
you can definitely set up a full site

00:45:51,640 --> 00:45:53,800
you can use it like we've launched

00:45:52,540 --> 00:45:55,720
production there's like ten production

00:45:53,800 --> 00:46:04,630
sites running on it right now so it's

00:45:55,720 --> 00:46:08,830
certainly robust now yep how does this

00:46:04,630 --> 00:46:11,290
compete with Magento we actually do

00:46:08,830 --> 00:46:12,610
pretty well performance-wise that's

00:46:11,290 --> 00:46:14,950
mostly because Magento is crap at

00:46:12,610 --> 00:46:15,550
performance which at least this is

00:46:14,950 --> 00:46:19,540
Drupal cons

00:46:15,550 --> 00:46:22,660
oh sorry I said Magento is crap at

00:46:19,540 --> 00:46:30,220
performance oh now that's awkward that I

00:46:22,660 --> 00:46:36,280
had to repeat that but in general or

00:46:30,220 --> 00:46:38,200
performance related okay

00:46:36,280 --> 00:46:40,600
okay well that could be like an entire

00:46:38,200 --> 00:46:42,310
talk on itself but as a really quick

00:46:40,600 --> 00:46:44,620
summary my like Magento versus Drupal

00:46:42,310 --> 00:46:47,130
commerce says sales pitch we're really

00:46:44,620 --> 00:46:49,270
flexible Magento isn't very open-source

00:46:47,130 --> 00:46:51,400
anymore they have this like really

00:46:49,270 --> 00:46:52,740
neglected community edition and then

00:46:51,400 --> 00:46:56,140
they have their sort of really expensive

00:46:52,740 --> 00:46:57,700
version now and they don't really help

00:46:56,140 --> 00:46:59,020
the community stuff in

00:46:57,700 --> 00:47:00,960
they don't do that open source stuff you

00:46:59,020 --> 00:47:03,610
kind of got to do what they want to do

00:47:00,960 --> 00:47:05,380
and we try to be fully flexible we are

00:47:03,610 --> 00:47:07,510
open source you can do whatever you want

00:47:05,380 --> 00:47:09,700
and so that's our biggest selling

00:47:07,510 --> 00:47:11,800
feature I could go on for like hours on

00:47:09,700 --> 00:47:23,950
that but that's a real brief cliff note

00:47:11,800 --> 00:47:26,860
version as far as all the stuff I talked

00:47:23,950 --> 00:47:29,590
to is all d7 related yeah it's all about

00:47:26,860 --> 00:47:31,900
Commerce on d7 yeah and then I talked a

00:47:29,590 --> 00:47:33,370
bit about the stuff for performance for

00:47:31,900 --> 00:47:35,620
Drupal 8 I haven't run too many

00:47:33,370 --> 00:47:37,600
benchmarks for Drupal 8 performance yet

00:47:35,620 --> 00:47:39,370
that probably won't happen about until

00:47:37,600 --> 00:47:40,780
we get to a 2.0 release we've tried to

00:47:39,370 --> 00:47:41,620
keep a lot of the architecture in mind

00:47:40,780 --> 00:47:43,330
but we haven't actually been running

00:47:41,620 --> 00:47:45,220
benchmarks and doing their last tweaks

00:47:43,330 --> 00:47:48,420
and stuff like that so those are sort of

00:47:45,220 --> 00:47:50,560
theoretical examples we can do instead I

00:47:48,420 --> 00:47:53,440
just want to say there is also a

00:47:50,560 --> 00:47:56,230
commerce session at 2:15 if anybody else

00:47:53,440 --> 00:47:58,030
is interested that Ryan and Boyan are

00:47:56,230 --> 00:47:59,460
doing oh right yes by the commerce guys

00:47:58,030 --> 00:48:02,350
so Ryan Rama

00:47:59,460 --> 00:48:04,450
Boyan as a vanovech who are like the

00:48:02,350 --> 00:48:06,070
original creators of Drupal commerce and

00:48:04,450 --> 00:48:08,590
they will have a session this afternoon

00:48:06,070 --> 00:48:09,520
as well so it's a shorter session of

00:48:08,590 --> 00:48:11,050
suing one of the half-an-hour ones

00:48:09,520 --> 00:48:13,000
they're going to try to go over some of

00:48:11,050 --> 00:48:14,440
the builds they've done in 200 and stuff

00:48:13,000 --> 00:48:17,500
so that will be more specifically about

00:48:14,440 --> 00:48:20,970
200 if you want to learn about that

00:48:17,500 --> 00:48:20,970
there's one way in the back there

00:48:26,900 --> 00:48:33,160
yes there are migration paths with oh

00:48:28,939 --> 00:48:36,469
yes sorry are their migration paths for

00:48:33,160 --> 00:48:39,499
ubercart to Drupal commerce specifically

00:48:36,469 --> 00:48:41,809
Drupal commerce 2x yes there are

00:48:39,499 --> 00:48:44,349
migration paths for both ubercart on

00:48:41,809 --> 00:48:47,329
Drupal 6 and goober cart on Drupal 7

00:48:44,349 --> 00:48:48,679
they are pretty good some people have

00:48:47,329 --> 00:48:50,749
already used them they could still use a

00:48:48,679 --> 00:48:54,769
little fine-tuning we actually just

00:48:50,749 --> 00:48:57,349
recently as of last week hired a calmer

00:48:54,769 --> 00:48:58,999
or a migrate core maintainer who's gonna

00:48:57,349 --> 00:49:01,429
be working full-time on for the next

00:48:58,999 --> 00:49:02,749
couple of months finishing those up so

00:49:01,429 --> 00:49:18,199
they're pretty good now and they should

00:49:02,749 --> 00:49:20,479
be great in a couple of months not as

00:49:18,199 --> 00:49:22,069
far as that we repeat the question yes

00:49:20,479 --> 00:49:26,509
I'm sorry I'm gonna screw that up every

00:49:22,069 --> 00:49:29,569
time a multi-store set up like an Etsy

00:49:26,509 --> 00:49:32,299
style thing and performance regarding

00:49:29,569 --> 00:49:34,689
that smaller ones with two or three

00:49:32,299 --> 00:49:37,009
stores not something with you know

00:49:34,689 --> 00:49:40,789
thousands of stores or something like an

00:49:37,009 --> 00:49:42,880
Etsy style would have a 2 dot X has a

00:49:40,789 --> 00:49:47,869
really nice stores set up to handle that

00:49:42,880 --> 00:49:50,469
commerce is a little bit it's only so-so

00:49:47,869 --> 00:49:52,819
at doing that you are gonna have

00:49:50,469 --> 00:49:55,459
performance problems probably when you

00:49:52,819 --> 00:49:57,909
do that because it it's not gonna scale

00:49:55,459 --> 00:50:00,679
amazingly because you're still gonna be

00:49:57,909 --> 00:50:01,759
it treats all your products together and

00:50:00,679 --> 00:50:04,150
stuff like that unless you do like a

00:50:01,759 --> 00:50:06,559
completely separate multi-site set up so

00:50:04,150 --> 00:50:12,509
it's not gonna do amazing performance

00:50:06,559 --> 00:50:16,559
for that to be honest sorry Kathy

00:50:12,509 --> 00:50:17,519
so 1x supports some really simple multi

00:50:16,559 --> 00:50:19,319
source stuff like you can do like a

00:50:17,519 --> 00:50:20,880
multi domain setup or something 2x has

00:50:19,319 --> 00:50:22,200
full store support so it has the

00:50:20,880 --> 00:50:23,549
complete concept of setting up multiple

00:50:22,200 --> 00:50:25,200
stores that have their own products

00:50:23,549 --> 00:50:28,859
their own customers their own everything

00:50:25,200 --> 00:50:36,869
so yeah fully into X pretty minimal in

00:50:28,859 --> 00:50:45,839
one dot X any other questions good good

00:50:36,869 --> 00:50:48,499
okie doke thank you very much yes which

00:50:45,839 --> 00:50:48,499
I think I have

00:51:10,609 --> 00:51:14,930

YouTube URL: https://www.youtube.com/watch?v=JmKn09ZwbIU


