Title: DrupalCon Baltimore 2017: Building reusable websites on Drupal 8
Publication date: 2017-04-26
Playlist: DrupalCon Baltimore 2017
Description: 
	In this session, I will walk through our process of building reusable websites in Drupal 8. In particular, I will talk about our experience at Comic Relief - one of UK's major charities - in rebuilding rednoseday.com on top of an installation profile that comes prebuilt with features required for building engaging, fast and secure fundraising websites.

The following topics will be covered in this talk: 

editorial processes to build compelling landing pages, in particular our use of the "paragraphs" editorial flows.
what our Drupal 8 distribution looks like and how we deal with configuration, one-step installs using Phing, and default content
creation of a "living" pattern lab as an incubation area for prototyping and testing new front-end components
test-driven development with a focus on behat tests
our git flow model including CI and feature preview branches
following the KISS principle at every step of the way (reducing our need for custom code and thus maintenance!)
separating logic into independent services using message queues
and last but not least: how to build a great development team to build such a product
This session is aimed at Drupal developers, Drupal architects and technical leads interested in building reusable website "products" on Drupal 8 and understanding the ingredients required to do so.

More information on https://technology.comicrelief.com/2016/12/21/building-rednoseday-com-on-drupal-8/
Captions: 
	00:00:00,000 --> 00:00:05,730
and welcome to my session on building

00:00:02,760 --> 00:00:07,259
reusable websites on Drupal 8 can any

00:00:05,730 --> 00:00:12,019
money edit any one here we find in the

00:00:07,259 --> 00:00:12,019
back as well no all right

00:00:15,109 --> 00:00:24,029
can can you now if I speak a bit louder

00:00:19,010 --> 00:00:27,019
perfectly um so today I'm going to talk

00:00:24,029 --> 00:00:32,610
a little bit about lessons learned of

00:00:27,019 --> 00:00:36,420
transforming retinols a calm first of

00:00:32,610 --> 00:00:38,309
all who am i my name is Peter and I've

00:00:36,420 --> 00:00:41,160
been a long time Drupal contributor

00:00:38,309 --> 00:00:43,590
probably for more than 10 years I've

00:00:41,160 --> 00:00:46,559
been involved with with Drupal and I

00:00:43,590 --> 00:00:49,590
kind of wearing two hats one hat is

00:00:46,559 --> 00:00:51,930
antiquated comic relief which is a major

00:00:49,590 --> 00:00:53,910
charity in the UK and the other hat I'm

00:00:51,930 --> 00:00:57,750
wearing is I'm a founder of Mars labs

00:00:53,910 --> 00:01:00,420
which is a small web development agency

00:00:57,750 --> 00:01:05,700
originally from Barcelona Spain with

00:01:00,420 --> 00:01:07,979
offices as well in Portugal a little bit

00:01:05,700 --> 00:01:12,720
about comic relief who in the room does

00:01:07,979 --> 00:01:14,430
not know comic relief all right so many

00:01:12,720 --> 00:01:16,439
people actually know comic relief and

00:01:14,430 --> 00:01:20,909
that's probably because comic relief

00:01:16,439 --> 00:01:23,640
also exists in the US but I'm speaking

00:01:20,909 --> 00:01:26,280
here on behalf of the UK a team of comic

00:01:23,640 --> 00:01:30,600
relief which is a major charity in the

00:01:26,280 --> 00:01:34,759
UK we raised about over 1 billion pounds

00:01:30,600 --> 00:01:37,470
in since the things are existent in 1985

00:01:34,759 --> 00:01:40,759
money that we spent to tackle the root

00:01:37,470 --> 00:01:45,420
causes of poverty and social injustice

00:01:40,759 --> 00:01:48,570
we do that mostly by organizing two main

00:01:45,420 --> 00:01:52,020
fundraising campaigns sports relief and

00:01:48,570 --> 00:01:54,149
Red Nose Day and you might be familiar

00:01:52,020 --> 00:01:56,939
with Red Nose Day because Red Nose Day

00:01:54,149 --> 00:02:03,149
is coming up as well in the US end of

00:01:56,939 --> 00:02:05,520
May on MBC's so obviously I'm here to

00:02:03,149 --> 00:02:09,539
talk about Drupal right so we've been

00:02:05,520 --> 00:02:12,209
using Drupal as comic relief since 2014

00:02:09,539 --> 00:02:13,090
and even before that when we ported over

00:02:12,209 --> 00:02:17,430
our main

00:02:13,090 --> 00:02:20,610
web presence Comic Relief come to Drupal

00:02:17,430 --> 00:02:25,330
now we're doing this fundraising event

00:02:20,610 --> 00:02:28,239
year by year so in 2015 we started

00:02:25,330 --> 00:02:33,810
working on on our 2015 Red Nose Day

00:02:28,239 --> 00:02:33,810
campaign where we chose for multi-site

00:02:34,140 --> 00:02:36,940
basically because we wanted to reuse the

00:02:36,280 --> 00:02:41,290
same codebase

00:02:36,940 --> 00:02:45,310
that we set up for comic relief come now

00:02:41,290 --> 00:02:49,060
when we start in our 2016 campaign for

00:02:45,310 --> 00:02:50,110
Sport Relief we wanted to again reuse

00:02:49,060 --> 00:02:51,700
the same codebase

00:02:50,110 --> 00:02:53,709
so we thought okay we have this

00:02:51,700 --> 00:02:55,780
multi-site setup let's continue let's

00:02:53,709 --> 00:03:00,400
put another site on our multi site setup

00:02:55,780 --> 00:03:03,579
and as probably most people in this room

00:03:00,400 --> 00:03:08,230
know multi site is not really a good

00:03:03,579 --> 00:03:12,220
idea you start at some point you feel

00:03:08,230 --> 00:03:14,920
like giving up right so the reason is

00:03:12,220 --> 00:03:17,049
that basically you're you're stopping

00:03:14,920 --> 00:03:20,109
yourself to enough you know innovate

00:03:17,049 --> 00:03:23,250
from the start by combining code bases

00:03:20,109 --> 00:03:27,010
from different projects altogether and

00:03:23,250 --> 00:03:29,410
not allowing you to actually change one

00:03:27,010 --> 00:03:31,510
thing and having it affect all the other

00:03:29,410 --> 00:03:36,579
sites that you that's you that run the

00:03:31,510 --> 00:03:40,239
same set up so when we start the Red

00:03:36,579 --> 00:03:41,530
Nose Day campaign for 2017 we start

00:03:40,239 --> 00:03:46,269
differently we wanted to build a

00:03:41,530 --> 00:03:49,599
platform a product to power all our

00:03:46,269 --> 00:03:51,430
editorial controls websites it's a very

00:03:49,599 --> 00:03:54,010
different thing to think about something

00:03:51,430 --> 00:03:55,120
like that then to build a website we

00:03:54,010 --> 00:03:57,160
don't want to build a website you want

00:03:55,120 --> 00:03:58,840
to build a product to power all our

00:03:57,160 --> 00:04:03,609
campaigns that are coming in the future

00:03:58,840 --> 00:04:06,340
and we want to really focus on three

00:04:03,609 --> 00:04:09,010
main components here three three main

00:04:06,340 --> 00:04:14,200
streams of work that I think are vital

00:04:09,010 --> 00:04:16,690
to build such products the first one is

00:04:14,200 --> 00:04:18,310
the editorial experience editorial

00:04:16,690 --> 00:04:20,470
experience is very very important

00:04:18,310 --> 00:04:22,659
because we want to build a tool that

00:04:20,470 --> 00:04:24,540
allows our editorial team to build a

00:04:22,659 --> 00:04:26,490
compelling website

00:04:24,540 --> 00:04:30,420
with different landing pages for our

00:04:26,490 --> 00:04:31,740
different audience but you also want to

00:04:30,420 --> 00:04:33,600
make sure that we automate this process

00:04:31,740 --> 00:04:35,100
and we streamline this process we want

00:04:33,600 --> 00:04:38,310
to make sure that we build the product

00:04:35,100 --> 00:04:40,290
that we can iterate upon it with a

00:04:38,310 --> 00:04:43,050
semantic versioning system behind it so

00:04:40,290 --> 00:04:46,940
we can actually know which website runs

00:04:43,050 --> 00:04:46,940
which version of the codebase and

00:04:47,540 --> 00:04:53,910
finally I'm going to talk a little bit

00:04:50,160 --> 00:04:55,350
about decoupled services and I'm sorry

00:04:53,910 --> 00:04:59,310
to disappoint you if I'm not going to be

00:04:55,350 --> 00:05:00,480
talking about headless Drupal because I

00:04:59,310 --> 00:05:03,750
think there's many different ways to

00:05:00,480 --> 00:05:08,280
decouple services that are not currently

00:05:03,750 --> 00:05:11,910
touched upon by headless or by existing

00:05:08,280 --> 00:05:14,630
ways to kind of decouple different parts

00:05:11,910 --> 00:05:14,630
of the system right

00:05:18,530 --> 00:05:25,000
and finally not surprisingly again our

00:05:21,950 --> 00:05:28,130
technology choice here will be Drupal

00:05:25,000 --> 00:05:30,680
the cific a Drupal 8 which is a very

00:05:28,130 --> 00:05:35,060
different kind of system from previous

00:05:30,680 --> 00:05:36,650
versions of Drupal I think it's also

00:05:35,060 --> 00:05:39,650
important to say that I'm not going to

00:05:36,650 --> 00:05:42,860
really be talking about what how we use

00:05:39,650 --> 00:05:44,030
Drupal or what what modules to use and

00:05:42,860 --> 00:05:46,220
all this kind of stuff but rather how to

00:05:44,030 --> 00:05:51,140
position Drupal to build a stable

00:05:46,220 --> 00:05:56,030
product so first of all let's start with

00:05:51,140 --> 00:06:00,350
the editorial experience this is a

00:05:56,030 --> 00:06:03,680
sample website sample page where you can

00:06:00,350 --> 00:06:05,420
see different components being used to

00:06:03,680 --> 00:06:07,670
make a landing page right so we want to

00:06:05,420 --> 00:06:12,860
build a site that can power these kind

00:06:07,670 --> 00:06:14,990
of pages to do so we didn't start this

00:06:12,860 --> 00:06:18,130
process directly in Drupal we didn't

00:06:14,990 --> 00:06:21,860
want to be kind of bogged down by Drupal

00:06:18,130 --> 00:06:24,320
Drupal code base database all these kind

00:06:21,860 --> 00:06:26,960
of things to develop these components so

00:06:24,320 --> 00:06:29,270
we started with our pattern lab this is

00:06:26,960 --> 00:06:30,650
very this is very hot right now so in

00:06:29,270 --> 00:06:32,890
the community where people are talking

00:06:30,650 --> 00:06:35,780
about component driven design

00:06:32,890 --> 00:06:40,040
well that's very important for us and I

00:06:35,780 --> 00:06:42,800
think for many websites in this case we

00:06:40,040 --> 00:06:46,040
started kind of dissecting our page into

00:06:42,800 --> 00:06:51,320
patterns examples would be like a code

00:06:46,040 --> 00:06:53,590
block or an email signup header and kind

00:06:51,320 --> 00:06:57,530
of positioning this into a pattern lab

00:06:53,590 --> 00:07:01,010
for this we use something that's called

00:06:57,530 --> 00:07:07,280
KSS now style sheets with sort of

00:07:01,010 --> 00:07:10,940
documentation syntax for CSS the good

00:07:07,280 --> 00:07:13,160
thing is that this can now be tested we

00:07:10,940 --> 00:07:15,770
can develop these components in

00:07:13,160 --> 00:07:17,030
isolation and we can actually link them

00:07:15,770 --> 00:07:19,280
and I'll know if you can see that at the

00:07:17,030 --> 00:07:22,220
bottom there is an actual tweak template

00:07:19,280 --> 00:07:24,560
that relates to the to the CSS and to

00:07:22,220 --> 00:07:27,890
the display that you see on top and

00:07:24,560 --> 00:07:30,220
that's reused later on by our Drupal

00:07:27,890 --> 00:07:30,220
instance

00:07:32,679 --> 00:07:38,689
this kind of leads to what we call our

00:07:35,749 --> 00:07:41,539
pattern lab driven development so when

00:07:38,689 --> 00:07:43,449
we start building our components we come

00:07:41,539 --> 00:07:46,129
up with an idea let's say a code block

00:07:43,449 --> 00:07:51,169
we start building this code block inside

00:07:46,129 --> 00:07:54,499
the pattern app just using HTML sass and

00:07:51,169 --> 00:07:57,169
Jas if for example there's some some

00:07:54,499 --> 00:07:59,360
interactivity to it as well and every

00:07:57,169 --> 00:08:02,589
kind of iterate over this until we're

00:07:59,360 --> 00:08:08,629
happy we do a series of review from

00:08:02,589 --> 00:08:10,909
review processes multi-device QA sign of

00:08:08,629 --> 00:08:12,430
all these things can happen without you

00:08:10,909 --> 00:08:15,409
having to do that within the Drupal site

00:08:12,430 --> 00:08:19,339
that's a major win because this process

00:08:15,409 --> 00:08:21,050
is so much faster and then we move on to

00:08:19,339 --> 00:08:22,339
the Drupal development stage where we're

00:08:21,050 --> 00:08:26,059
going to work on our content model or

00:08:22,339 --> 00:08:28,610
view modes put all this logic inside a

00:08:26,059 --> 00:08:31,610
component module and work on the tweak

00:08:28,610 --> 00:08:34,550
and potentially some pre-processing in

00:08:31,610 --> 00:08:37,610
in PHP before it shipped off to the

00:08:34,550 --> 00:08:39,800
final product the final site where then

00:08:37,610 --> 00:08:42,079
the editorial team will take this on and

00:08:39,800 --> 00:08:44,289
start using this on all the different

00:08:42,079 --> 00:08:44,289
pages

00:08:47,760 --> 00:08:55,500
and something's about Grievous light as

00:08:51,240 --> 00:08:57,660
well if you can actually do that in you

00:08:55,500 --> 00:08:59,910
can start sharing this pattern up with

00:08:57,660 --> 00:09:03,380
non Drupal site as well so we did an

00:08:59,910 --> 00:09:07,050
organization you can build a pattern lab

00:09:03,380 --> 00:09:10,020
that's generic and that all the sites

00:09:07,050 --> 00:09:12,150
can plug into and reuse the components

00:09:10,020 --> 00:09:14,910
they wish to use we're currently in the

00:09:12,150 --> 00:09:19,950
experimental phase with that packaging

00:09:14,910 --> 00:09:22,500
up our pattern up as an NPM module so

00:09:19,950 --> 00:09:26,760
how do we connect this now to Drupal

00:09:22,500 --> 00:09:28,380
right so how do we what what do landing

00:09:26,760 --> 00:09:32,610
pages how do we build these landing

00:09:28,380 --> 00:09:35,490
pages in Drupal and we went to a series

00:09:32,610 --> 00:09:38,550
of iterations to kind of get to where we

00:09:35,490 --> 00:09:41,880
are now and our first iteration has been

00:09:38,550 --> 00:09:43,830
panels with panelizer which is a very

00:09:41,880 --> 00:09:47,940
flexible approach to build compelling

00:09:43,830 --> 00:09:50,640
landing pages however it's it's a little

00:09:47,940 --> 00:09:53,570
bit like a hack because panelizer kind

00:09:50,640 --> 00:09:56,940
of ties the power of panels into a node

00:09:53,570 --> 00:09:59,820
right it feels it's a great solution but

00:09:56,940 --> 00:10:04,950
it's too flexible and it's sort of feels

00:09:59,820 --> 00:10:07,350
like a hack our second iteration then

00:10:04,950 --> 00:10:09,360
use the same thing but we started to use

00:10:07,350 --> 00:10:12,740
the paragraphs module within that

00:10:09,360 --> 00:10:12,740
penalized nodes

00:10:14,070 --> 00:10:19,560
this worked a lot better this worked so

00:10:17,009 --> 00:10:23,040
well that we actually didn't need panels

00:10:19,560 --> 00:10:29,550
anymore at all so our third duration was

00:10:23,040 --> 00:10:31,079
paragraphs and and paragraph ly the

00:10:29,550 --> 00:10:32,190
fantastic module check it out if you

00:10:31,079 --> 00:10:34,310
haven't it's I think it's

00:10:32,190 --> 00:10:38,839
revolutionizing the way we do content

00:10:34,310 --> 00:10:41,550
content entry and we build complex pages

00:10:38,839 --> 00:10:43,350
and we kind of extended this not really

00:10:41,550 --> 00:10:46,649
extended but we use block reference a

00:10:43,350 --> 00:10:48,509
lot because the difference a lot of the

00:10:46,649 --> 00:10:50,670
things we need to enter in these landing

00:10:48,509 --> 00:10:52,740
pages are not necessarily content such

00:10:50,670 --> 00:10:56,040
as an email signup form or something

00:10:52,740 --> 00:10:57,930
that has some custom actions added to it

00:10:56,040 --> 00:11:01,139
so for this we use a block reference

00:10:57,930 --> 00:11:06,959
paragraph type that can kind of pull in

00:11:01,139 --> 00:11:08,730
blocks in the paragraph note this is

00:11:06,959 --> 00:11:12,720
kind of how the system looks like very

00:11:08,730 --> 00:11:15,509
simple all powered by contribs no custom

00:11:12,720 --> 00:11:17,430
code required at all and we have our

00:11:15,509 --> 00:11:20,399
paired our notes with our different

00:11:17,430 --> 00:11:22,829
paragraph types main thing to know is

00:11:20,399 --> 00:11:25,079
paragraphs are not reusable so if you

00:11:22,829 --> 00:11:27,480
want pieces of content that you can

00:11:25,079 --> 00:11:29,550
reuse on different pages you might want

00:11:27,480 --> 00:11:32,790
to structure this into what we do what

00:11:29,550 --> 00:11:34,740
we call our library of blocks and now

00:11:32,790 --> 00:11:36,959
you can just pull them in through to

00:11:34,740 --> 00:11:40,050
Parekh to our paragraph types again and

00:11:36,959 --> 00:11:42,380
this is how you can kind of give a lot

00:11:40,050 --> 00:11:48,630
of flexibility but don't compromise on

00:11:42,380 --> 00:11:51,329
the editorial experience alright that's

00:11:48,630 --> 00:11:52,620
that's the first part the second part I

00:11:51,329 --> 00:11:56,430
think that's very important when you

00:11:52,620 --> 00:12:00,740
build a product if you need to focus on

00:11:56,430 --> 00:12:03,810
automating and streamlining everything

00:12:00,740 --> 00:12:06,540
this is something very very important

00:12:03,810 --> 00:12:09,510
that you need and that is you need to

00:12:06,540 --> 00:12:12,720
make your built in one step it's part of

00:12:09,510 --> 00:12:17,189
Joel's post spoke expose kits original

00:12:12,720 --> 00:12:20,399
test for for building good software

00:12:17,189 --> 00:12:22,050
systems and you need to make this built

00:12:20,399 --> 00:12:25,350
in one step how do we do that well we

00:12:22,050 --> 00:12:27,240
package up our website and our

00:12:25,350 --> 00:12:27,570
components using an installation profile

00:12:27,240 --> 00:12:29,610
so

00:12:27,570 --> 00:12:31,050
basically building distribution might

00:12:29,610 --> 00:12:34,500
sounds very familiar to many of you

00:12:31,050 --> 00:12:37,290
right and we use the fantastic PMI in

00:12:34,500 --> 00:12:39,450
blue police we kind of slice up our

00:12:37,290 --> 00:12:40,980
conflicts ourselves manually with config

00:12:39,450 --> 00:12:43,080
develop so we know exactly what goes

00:12:40,980 --> 00:12:48,510
where and we don't have this monolithic

00:12:43,080 --> 00:12:50,700
blob of configuration default content

00:12:48,510 --> 00:12:53,400
has been talked about before in the

00:12:50,700 --> 00:12:54,900
keynote very important because when we

00:12:53,400 --> 00:12:57,240
ship our product we want to ship it with

00:12:54,900 --> 00:12:58,980
default content so we can developers can

00:12:57,240 --> 00:13:01,980
do something when they extend the

00:12:58,980 --> 00:13:03,990
functionality we can do QA we can do

00:13:01,980 --> 00:13:10,260
automated testing all reusing that

00:13:03,990 --> 00:13:13,200
default content and finally you should

00:13:10,260 --> 00:13:15,600
you should use a build tool we used to

00:13:13,200 --> 00:13:18,450
use thing which is like a PHP build tool

00:13:15,600 --> 00:13:21,120
very powerful but recently we switched

00:13:18,450 --> 00:13:23,520
for switching over to Composer which

00:13:21,120 --> 00:13:25,740
feels more native to the project as well

00:13:23,520 --> 00:13:29,780
as all the latest changes that went in

00:13:25,740 --> 00:13:32,010
Drupal 8 core that help you use composer

00:13:29,780 --> 00:13:34,770
if you haven't used it check it out

00:13:32,010 --> 00:13:36,870
composer is fabulous it's it's it's so

00:13:34,770 --> 00:13:40,350
much better than what we had before we'd

00:13:36,870 --> 00:13:42,990
rush and rush make and all these kind of

00:13:40,350 --> 00:13:48,410
things that feel always felt a little

00:13:42,990 --> 00:13:48,410
bit like they were native to Drupal

00:13:50,000 --> 00:13:55,290
finally we also need to think about

00:13:52,940 --> 00:13:57,000
tests right because if you build that

00:13:55,290 --> 00:14:00,210
product we need to automate everything

00:13:57,000 --> 00:14:03,890
using tests so we do a whole series of

00:14:00,210 --> 00:14:06,240
checks code quality checks and

00:14:03,890 --> 00:14:09,210
configuration checks to make sure that

00:14:06,240 --> 00:14:11,610
configuration is in the right place

00:14:09,210 --> 00:14:13,410
distribution installation tests every

00:14:11,610 --> 00:14:16,230
time a developer would commit a new

00:14:13,410 --> 00:14:18,780
piece of code you want to make sure that

00:14:16,230 --> 00:14:21,150
you can reinstall your site that's not

00:14:18,780 --> 00:14:23,610
something was broken

00:14:21,150 --> 00:14:26,790
and then you need to look at behavior

00:14:23,610 --> 00:14:29,040
test like you want to use a tool like we

00:14:26,790 --> 00:14:30,540
had to simulate the editor going through

00:14:29,040 --> 00:14:32,640
the site and adding all these type of

00:14:30,540 --> 00:14:38,430
landing pages that you've just been

00:14:32,640 --> 00:14:41,220
developing after you've done that you

00:14:38,430 --> 00:14:44,070
can check the logs the Drupal logs for

00:14:41,220 --> 00:14:46,770
example to see what locks what errors

00:14:44,070 --> 00:14:49,500
have been generated through this be has

00:14:46,770 --> 00:14:53,339
process that's a very nice way for you

00:14:49,500 --> 00:14:54,960
to make sure that all these errors you

00:14:53,339 --> 00:15:01,020
would otherwise see in production are

00:14:54,960 --> 00:15:03,270
caught at a much earlier stage and the

00:15:01,020 --> 00:15:05,750
last thing that that I think is quite

00:15:03,270 --> 00:15:09,150
important and often sort of forgotten is

00:15:05,750 --> 00:15:11,580
visual regression tests every time you

00:15:09,150 --> 00:15:13,230
make a change to your front-end you want

00:15:11,580 --> 00:15:15,660
to make sure you understand the impact

00:15:13,230 --> 00:15:18,720
of the change so you need to have some

00:15:15,660 --> 00:15:20,880
way to check this and we're using a BBC

00:15:18,720 --> 00:15:22,830
straight - there's a couple of other

00:15:20,880 --> 00:15:24,839
tools out there as well I don't think

00:15:22,830 --> 00:15:27,180
it's receiving the right amount of

00:15:24,839 --> 00:15:29,760
attention and so I hope this will change

00:15:27,180 --> 00:15:38,520
in the next the next moments in the

00:15:29,760 --> 00:15:40,320
course so finally of course automation

00:15:38,520 --> 00:15:43,589
is nothing without some sort of

00:15:40,320 --> 00:15:46,380
continuous integration behind it so we

00:15:43,589 --> 00:15:49,589
use Travis Travis CI it's a fantastic

00:15:46,380 --> 00:15:53,390
tool because you can spin up basically a

00:15:49,589 --> 00:15:55,830
new instance on every commit on Travis

00:15:53,390 --> 00:15:58,380
infrastructure and we run through all

00:15:55,830 --> 00:16:00,650
our checklist and the builds basically

00:15:58,380 --> 00:16:03,320
will fail when any of these things fails

00:16:00,650 --> 00:16:05,520
it's direct feedback for a developer

00:16:03,320 --> 00:16:07,770
especially when you use something like

00:16:05,520 --> 00:16:11,130
the git flow model and you make four

00:16:07,770 --> 00:16:13,890
requests you can actually see the state

00:16:11,130 --> 00:16:18,260
of codes and understand how things are

00:16:13,890 --> 00:16:18,260
affected by what exact action

00:16:19,290 --> 00:16:26,050
then the last thing that is kind of

00:16:21,490 --> 00:16:29,740
important to our setup let's say our

00:16:26,050 --> 00:16:32,860
preview branches preview branches

00:16:29,740 --> 00:16:36,880
basically on every commit to the code

00:16:32,860 --> 00:16:38,410
base built aside for you and we use the

00:16:36,880 --> 00:16:42,220
service of the fantastic service of

00:16:38,410 --> 00:16:45,100
platform SH which can spin this up very

00:16:42,220 --> 00:16:47,170
easy for you very cheap and also that I

00:16:45,100 --> 00:16:50,410
could give you feedback within the pool

00:16:47,170 --> 00:16:52,480
request if you haven't worked in such a

00:16:50,410 --> 00:16:56,200
setting it's it's really great because

00:16:52,480 --> 00:17:03,520
it allows you to follow the changes as

00:16:56,200 --> 00:17:06,400
they happen to the codebase and then I

00:17:03,520 --> 00:17:08,200
come to my third part that I think is

00:17:06,400 --> 00:17:11,560
very important when we're developing a

00:17:08,200 --> 00:17:14,350
product which is you want to write

00:17:11,560 --> 00:17:18,640
better code and you want to use

00:17:14,350 --> 00:17:21,640
something like the couple services again

00:17:18,640 --> 00:17:25,089
I'm not going to talk about headless but

00:17:21,640 --> 00:17:27,490
I think the couple services are part of

00:17:25,089 --> 00:17:30,930
our micro service infrastructure

00:17:27,490 --> 00:17:33,550
ecosystem and there is many ways to do

00:17:30,930 --> 00:17:39,190
these kind of things in the land of

00:17:33,550 --> 00:17:41,790
Drupal but first better code has anyone

00:17:39,190 --> 00:17:41,790
seen this slide before

00:17:44,440 --> 00:17:50,929
feel slightly familiar when you work on

00:17:47,120 --> 00:17:53,900
a Drupal project basically what I'm

00:17:50,929 --> 00:17:56,270
trying to say here is the more code you

00:17:53,900 --> 00:17:58,120
add to your product to your codebase the

00:17:56,270 --> 00:18:02,630
more errors you're going to see and

00:17:58,120 --> 00:18:04,549
times to so we want to minimize the

00:18:02,630 --> 00:18:07,880
custom codes right you want to make sure

00:18:04,549 --> 00:18:11,630
we only add the right amount of code to

00:18:07,880 --> 00:18:14,960
our code base and actually went to our

00:18:11,630 --> 00:18:18,799
current code base as a kind of a test

00:18:14,960 --> 00:18:24,530
and I found just around 2000 custom PHP

00:18:18,799 --> 00:18:29,360
lines in our distribution basically this

00:18:24,530 --> 00:18:31,790
PHP code this PHP lines array relating

00:18:29,360 --> 00:18:36,169
to option call backs custom display

00:18:31,790 --> 00:18:38,660
suite fields solar tweaks all these kind

00:18:36,169 --> 00:18:43,400
of things that you would call glue codes

00:18:38,660 --> 00:18:46,610
when you do a Drupal project all the non

00:18:43,400 --> 00:18:49,250
glue codes on the other hand we try to

00:18:46,610 --> 00:18:51,410
contribute this back to a specific

00:18:49,250 --> 00:18:56,120
module so we needed a really good reason

00:18:51,410 --> 00:18:58,250
to do something to do glue code in fact

00:18:56,120 --> 00:19:00,290
because if we could refactor it into a

00:18:58,250 --> 00:19:02,630
module that can be contributed that's

00:19:00,290 --> 00:19:04,580
the way forward because then we can plug

00:19:02,630 --> 00:19:12,400
into the community to help maintain

00:19:04,580 --> 00:19:16,850
these codes and let me now talk about

00:19:12,400 --> 00:19:19,340
kind of the two patterns I see for doing

00:19:16,850 --> 00:19:22,090
the couple services in in Drupal the

00:19:19,340 --> 00:19:24,440
first one might seem very obvious

00:19:22,090 --> 00:19:27,890
basically we call it the embed pattern

00:19:24,440 --> 00:19:29,090
and we use iframes before you say

00:19:27,890 --> 00:19:31,700
iframes are bad

00:19:29,090 --> 00:19:36,380
don't use iframes you see iframes

00:19:31,700 --> 00:19:37,760
everywhere if you if you see a tweak we

00:19:36,380 --> 00:19:40,549
embed it within the New York Times

00:19:37,760 --> 00:19:43,309
article chances are that suite is coming

00:19:40,549 --> 00:19:47,510
from an iframe so iframes are very much

00:19:43,309 --> 00:19:49,610
used on the web every day so basically

00:19:47,510 --> 00:19:52,490
we make this easier within our CMS by

00:19:49,610 --> 00:19:55,460
allowing the editor to add iframes from

00:19:52,490 --> 00:19:58,279
other sites an example here

00:19:55,460 --> 00:20:02,990
a kid game we developed for our younger

00:19:58,279 --> 00:20:04,779
audience that is developed in a

00:20:02,990 --> 00:20:09,409
different framework it's a front-end

00:20:04,779 --> 00:20:13,130
game using all kinds of 2d 3d rendering

00:20:09,409 --> 00:20:15,289
techniques so we just embed this on from

00:20:13,130 --> 00:20:18,700
a different URL in our website and kind

00:20:15,289 --> 00:20:21,620
of surround it with editorial content

00:20:18,700 --> 00:20:25,250
that's kind of obvious the other one is

00:20:21,620 --> 00:20:27,980
much less talked about at least for

00:20:25,250 --> 00:20:32,779
Drupal and we call that the the queue

00:20:27,980 --> 00:20:35,750
pattern queues are a vital component in

00:20:32,779 --> 00:20:37,580
the land of micro services everything is

00:20:35,750 --> 00:20:40,880
connected or almost everything is

00:20:37,580 --> 00:20:44,470
connected with each other very often via

00:20:40,880 --> 00:20:47,600
queues and basically a queue system

00:20:44,470 --> 00:20:51,649
looks is very simple you have a producer

00:20:47,600 --> 00:20:55,630
that produces some data and add it to a

00:20:51,649 --> 00:20:58,750
queue these messages are cute there

00:20:55,630 --> 00:21:02,539
until a consumer at the right time

00:20:58,750 --> 00:21:06,580
fetches the data processes it and does

00:21:02,539 --> 00:21:09,860
something does something with that data

00:21:06,580 --> 00:21:14,179
now how does this look like in in Drupal

00:21:09,860 --> 00:21:17,570
why how where do we use this an example

00:21:14,179 --> 00:21:20,480
is an email list subscription we have a

00:21:17,570 --> 00:21:26,390
producer which will be our email signup

00:21:20,480 --> 00:21:30,529
form would be a custom form and we have

00:21:26,390 --> 00:21:33,200
a few that every time somebody adds an

00:21:30,529 --> 00:21:35,510
email to that email signup form it gets

00:21:33,200 --> 00:21:38,000
a message get added to the queue

00:21:35,510 --> 00:21:41,450
including the email address maybe a

00:21:38,000 --> 00:21:46,010
template ID maybe some more data and a

00:21:41,450 --> 00:21:48,140
consumer will eventually add this at the

00:21:46,010 --> 00:21:50,480
right time pick up the data and do

00:21:48,140 --> 00:21:52,850
something with it in this case this

00:21:50,480 --> 00:21:55,279
might be a custom app might want to

00:21:52,850 --> 00:21:59,120
experiment with a node.js app or it

00:21:55,279 --> 00:22:02,480
might be a symphony console command - or

00:21:59,120 --> 00:22:03,950
anything that the team that wants to do

00:22:02,480 --> 00:22:06,799
something with the data is comfortable

00:22:03,950 --> 00:22:11,090
with using and that we take the data and

00:22:06,799 --> 00:22:15,350
talk to to MailChimp for example so this

00:22:11,090 --> 00:22:19,179
is this is in essence a way for you to

00:22:15,350 --> 00:22:23,149
avoid using a module like MailChimp or

00:22:19,179 --> 00:22:27,770
any other direct into direct email

00:22:23,149 --> 00:22:31,460
module within Drupal and you kind of

00:22:27,770 --> 00:22:32,779
really separates two things from each

00:22:31,460 --> 00:22:35,210
other

00:22:32,779 --> 00:22:36,740
this is great because you can now swap

00:22:35,210 --> 00:22:38,149
out your email provider for something

00:22:36,740 --> 00:22:40,309
else at a later time

00:22:38,149 --> 00:22:47,419
and you wouldn't even have to touch your

00:22:40,309 --> 00:22:50,990
drupal code base so this is a kind of

00:22:47,419 --> 00:22:53,720
recap slide my final slide how does our

00:22:50,990 --> 00:22:56,779
platform ecosystem look like what kind

00:22:53,720 --> 00:23:00,080
of website websites have we spun off

00:22:56,779 --> 00:23:02,210
using our product codebase let you see

00:23:00,080 --> 00:23:06,350
at the top and currently we're running a

00:23:02,210 --> 00:23:07,880
red nose day TOCOM on that codebase red

00:23:06,350 --> 00:23:10,610
nose day dot org as well which is the

00:23:07,880 --> 00:23:12,679
u.s. campaign it's also using a same

00:23:10,610 --> 00:23:16,070
codebase and we're kind of refactoring

00:23:12,679 --> 00:23:17,779
all our other editorial websites as we

00:23:16,070 --> 00:23:23,270
go and we hope to finish this up in the

00:23:17,779 --> 00:23:25,850
in the next couple of months this is

00:23:23,270 --> 00:23:27,559
little slide please join the sprints

00:23:25,850 --> 00:23:30,380
Drupal is nothing without the

00:23:27,559 --> 00:23:32,590
contributed code and thank you for your

00:23:30,380 --> 00:23:32,590
attention

00:23:33,640 --> 00:23:37,169
[Music]

00:23:37,540 --> 00:23:46,360
if you have any questions please come to

00:23:40,880 --> 00:23:49,760
the mic hi thanks for your presentation

00:23:46,360 --> 00:23:52,940
I was wondering you mentioned you using

00:23:49,760 --> 00:23:55,010
config devel for breaking up the

00:23:52,940 --> 00:23:57,910
configuration I'm wondering how you're

00:23:55,010 --> 00:24:01,550
doing that and what's purpose lesser I'm

00:23:57,910 --> 00:24:04,010
reusing config develop to kind of slice

00:24:01,550 --> 00:24:06,530
our configuration on a kind of a feature

00:24:04,010 --> 00:24:08,330
level much the same way as you would do

00:24:06,530 --> 00:24:10,130
it in group of seven so you would put a

00:24:08,330 --> 00:24:12,940
view mode you would put your content

00:24:10,130 --> 00:24:17,270
type you would put your fields all

00:24:12,940 --> 00:24:20,720
manually together into a module using

00:24:17,270 --> 00:24:23,960
config well and then it's kind of a way

00:24:20,720 --> 00:24:26,060
for us to slice up our configuration for

00:24:23,960 --> 00:24:29,390
our distribution there's many different

00:24:26,060 --> 00:24:31,250
ways we kind of took this idea from a

00:24:29,390 --> 00:24:33,440
cough which is a fantastic Drupal

00:24:31,250 --> 00:24:34,970
distribution but there's many other ways

00:24:33,440 --> 00:24:36,410
you can manage it as well there's a lot

00:24:34,970 --> 00:24:39,200
of helper modules being written right

00:24:36,410 --> 00:24:40,940
now this kind of works for now for us

00:24:39,200 --> 00:24:46,510
but we might swap it out for something

00:24:40,940 --> 00:24:46,510

YouTube URL: https://www.youtube.com/watch?v=drSxx5GX0OE


