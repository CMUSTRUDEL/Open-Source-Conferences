Title: DrupalCon Baltimore 2017: Better Agile Drupal Sprints: leverage Jira for good
Publication date: 2017-04-25
Playlist: DrupalCon Baltimore 2017
Description: 
	You've got a great team of agile architects and developers who are making great progress through the backlog; and you're working with a group of enthusiastic product owners who are writing good, clear user stories and acceptance criteria. As a project manager or scrummaster managing a large, distributed team, are the ways you can further improve, and get your deliverables out the door more quickly and efficiently?

We'll cover the tools and techniques for success at each stage of your Agile project as well as review real-life challenges and how to overcome them. You'll walk away with an-depth review of 12 tips and tricks to apply to your next project and help you become a Jira expert!

additional ceremonies you should consider adding to your agile lineup
how to prepare for these ceremonies with JIRA
streamline your Sprint End Demo using JQL and filters in JIRA
leverage Components in JIRA
how to use Sub-Tasks in your sprints
organization out of chaos: manage your grooming sessions
methods for pointing tickets with large teams
using custom fields in JIRA
using JIRA REST API for custom reporting
Captions: 
	00:00:00,030 --> 00:00:13,049
all right awesome

00:00:10,940 --> 00:00:16,830
all right twelve o'clock right on the

00:00:13,049 --> 00:00:20,810
dock awesome all right welcome everybody

00:00:16,830 --> 00:00:25,170
this is the 12 o'clock session better

00:00:20,810 --> 00:00:27,630
agile Drupal sprints twelve ways to

00:00:25,170 --> 00:00:29,310
start and keep the project humming how

00:00:27,630 --> 00:00:32,820
to leverage JIRA there's a number of

00:00:29,310 --> 00:00:35,940
ways you can call this my name is Chris

00:00:32,820 --> 00:00:37,350
Irvin I'm from aqueon I'll tell you a

00:00:35,940 --> 00:00:38,399
little bit more about myself in a second

00:00:37,350 --> 00:00:39,629
but just want to make sure everybody

00:00:38,399 --> 00:00:42,750
knows they're in the right room

00:00:39,629 --> 00:00:46,020
it's 315 Symphony Hall okay every is in

00:00:42,750 --> 00:00:48,120
the right place awesome so let me tell

00:00:46,020 --> 00:00:50,820
you quickly first a little bit about me

00:00:48,120 --> 00:00:55,350
hopefully this is a scene familiar most

00:00:50,820 --> 00:00:56,640
of you your typical sprint meeting I'm

00:00:55,350 --> 00:01:04,140
the guy in the corner

00:00:56,640 --> 00:01:05,700
I'm the scrum master okay so my rein

00:01:04,140 --> 00:01:09,420
soldier my name my name is Chris urban I

00:01:05,700 --> 00:01:12,689
am a manager in professional services at

00:01:09,420 --> 00:01:17,009
aqueous I've been using Drupal since

00:01:12,689 --> 00:01:19,259
2008 and I'm a certified scrum master

00:01:17,009 --> 00:01:22,619
I'm a certified aqua certified site

00:01:19,259 --> 00:01:24,450
builder d7 and d8 I come from a

00:01:22,619 --> 00:01:27,689
marketing actually publishing background

00:01:24,450 --> 00:01:28,320
so long long time ago back when there

00:01:27,689 --> 00:01:30,780
was no internet

00:01:28,320 --> 00:01:35,909
it was magazines and newspapers so

00:01:30,780 --> 00:01:39,990
that's my real background today what I

00:01:35,909 --> 00:01:41,930
want to cover is about your projects how

00:01:39,990 --> 00:01:44,850
you are building your Drupal sites and

00:01:41,930 --> 00:01:47,700
how we can hopefully overcome a lot of

00:01:44,850 --> 00:01:50,100
the issues that you face day to day most

00:01:47,700 --> 00:01:52,770
specifically in how you use JIRA for

00:01:50,100 --> 00:01:53,939
tracking your work so hopefully the tips

00:01:52,770 --> 00:01:56,250
that I'm going to give you today will

00:01:53,939 --> 00:01:59,820
help improve those projects you'll have

00:01:56,250 --> 00:02:01,560
something to take back and try but for

00:01:59,820 --> 00:02:03,060
first thing I want to start with is you

00:02:01,560 --> 00:02:06,270
know how do we get here why are we

00:02:03,060 --> 00:02:08,310
talking about this so number one

00:02:06,270 --> 00:02:11,850
everybody wants their project to be

00:02:08,310 --> 00:02:14,040
successful and while you're one of

00:02:11,850 --> 00:02:16,980
tasks is to keep your development your

00:02:14,040 --> 00:02:18,600
development team busy right have worked

00:02:16,980 --> 00:02:21,570
to work on there's a process in place

00:02:18,600 --> 00:02:24,810
it's for all those times where things

00:02:21,570 --> 00:02:27,480
don't work and that is really the heart

00:02:24,810 --> 00:02:29,730
of my message today how can you make

00:02:27,480 --> 00:02:32,150
sure that those times where things don't

00:02:29,730 --> 00:02:34,230
work that the project doesn't break down

00:02:32,150 --> 00:02:37,920
what are the ways that you can improve

00:02:34,230 --> 00:02:39,900
that now number one I like to make this

00:02:37,920 --> 00:02:41,670
more conversational than just lecture so

00:02:39,900 --> 00:02:43,980
if at any time you have any questions

00:02:41,670 --> 00:02:45,240
raise your hand and ask me I hopefully

00:02:43,980 --> 00:02:48,180
will have enough time at the end we can

00:02:45,240 --> 00:02:50,340
do Q&A and I'll also be downstairs at

00:02:48,180 --> 00:02:51,510
the Okwe abouthe come find me there if

00:02:50,340 --> 00:02:54,840
you have questions if we don't have time

00:02:51,510 --> 00:02:57,240
but most importantly have fun all right

00:02:54,840 --> 00:02:58,800
so let's get started first thing just

00:02:57,240 --> 00:02:59,940
some basic assumptions I don't want to

00:02:58,800 --> 00:03:02,970
waste time talking about it because you

00:02:59,940 --> 00:03:05,670
already all know the agile methodology

00:03:02,970 --> 00:03:08,100
if we can see this how to build a

00:03:05,670 --> 00:03:09,600
product right you iterate you start with

00:03:08,100 --> 00:03:11,670
a skateboard you work your way up to the

00:03:09,600 --> 00:03:14,220
car or the pickup truck you don't add

00:03:11,670 --> 00:03:16,590
tires and then the floor and then the

00:03:14,220 --> 00:03:18,930
body because what if the guy who's doing

00:03:16,590 --> 00:03:21,150
the tires never shows up you're kind of

00:03:18,930 --> 00:03:24,330
stuck if you start with a simple model

00:03:21,150 --> 00:03:26,820
that's that's how you start that's the

00:03:24,330 --> 00:03:30,180
idea behind iterative development and

00:03:26,820 --> 00:03:32,400
again ensuring this process works

00:03:30,180 --> 00:03:35,310
there's a lot of talk about how you're

00:03:32,400 --> 00:03:37,440
supposed to do development sprints my

00:03:35,310 --> 00:03:39,540
job here today is to fill in all those

00:03:37,440 --> 00:03:41,790
gaps about what happens when things go

00:03:39,540 --> 00:03:42,870
wrong what happens when people don't

00:03:41,790 --> 00:03:45,450
know what they're supposed to be working

00:03:42,870 --> 00:03:47,550
on does the product owner know what the

00:03:45,450 --> 00:03:52,200
development team is working on all those

00:03:47,550 --> 00:03:53,250
pieces of the puzzle okay so you'll see

00:03:52,200 --> 00:03:54,330
this throughout the course of the

00:03:53,250 --> 00:03:56,820
presentation just give you a little

00:03:54,330 --> 00:03:58,200
preview so this doesn't shock you we're

00:03:56,820 --> 00:03:59,880
going to play a little game you know I'm

00:03:58,200 --> 00:04:03,480
going to ask you what this is and you're

00:03:59,880 --> 00:04:05,310
going to tell me one word so I'm going

00:04:03,480 --> 00:04:09,420
to take a guess what this what these

00:04:05,310 --> 00:04:11,040
things are oh yeah it's the worst burned

00:04:09,420 --> 00:04:12,270
aren't burned down chart in the world

00:04:11,040 --> 00:04:15,020
absolutely because you can see is like

00:04:12,270 --> 00:04:18,989
nine months and haven't gone anywhere

00:04:15,020 --> 00:04:20,970
but in general what are these problems

00:04:18,989 --> 00:04:22,680
exactly so what we're going to go

00:04:20,970 --> 00:04:25,139
through today are all the

00:04:22,680 --> 00:04:28,080
real problems what are the things that

00:04:25,139 --> 00:04:31,740
happen to you in a project most

00:04:28,080 --> 00:04:34,139
typically you get chaos right anything

00:04:31,740 --> 00:04:36,300
that leads to that kind of event you've

00:04:34,139 --> 00:04:38,550
got maybe multiple product owners giving

00:04:36,300 --> 00:04:40,740
you concurrent requests your team

00:04:38,550 --> 00:04:43,139
doesn't know what to do nobody knows who

00:04:40,740 --> 00:04:46,289
what's going on for the sprint demo what

00:04:43,139 --> 00:04:48,620
tickets are we grooming who owns what

00:04:46,289 --> 00:04:51,150
right where how does that work so

00:04:48,620 --> 00:04:53,550
hopefully we're what I'm going to give

00:04:51,150 --> 00:04:56,490
you here is the keys to make all of this

00:04:53,550 --> 00:05:01,289
successful so this is going to be your

00:04:56,490 --> 00:05:03,860
foundation now the first thing to have a

00:05:01,289 --> 00:05:07,380
solid foundation for a project

00:05:03,860 --> 00:05:10,500
absolutely paramount is communication

00:05:07,380 --> 00:05:12,599
this is that part about the agile

00:05:10,500 --> 00:05:14,520
development that we don't see in that

00:05:12,599 --> 00:05:17,220
nice diagram with a scooter to the car

00:05:14,520 --> 00:05:19,889
how does everybody communicate most

00:05:17,220 --> 00:05:22,380
importantly all the processes need to be

00:05:19,889 --> 00:05:25,349
shared everybody has to know exactly

00:05:22,380 --> 00:05:27,960
what their job is and that ensures trust

00:05:25,349 --> 00:05:29,909
if everyone on the team trusts that

00:05:27,960 --> 00:05:31,949
everything is documented everything is

00:05:29,909 --> 00:05:34,860
written down and people know where to go

00:05:31,949 --> 00:05:36,240
to find the answers they need then you

00:05:34,860 --> 00:05:38,669
can get back to the business of getting

00:05:36,240 --> 00:05:43,169
the project done having the key

00:05:38,669 --> 00:05:44,210
knowledge on the project shared so let's

00:05:43,169 --> 00:05:46,229
play a game

00:05:44,210 --> 00:05:49,889
what's the first thing we need to do in

00:05:46,229 --> 00:05:53,909
communication documentation that's the

00:05:49,889 --> 00:05:56,250
fun part so this is my list of things

00:05:53,909 --> 00:06:00,419
that you really should have documented

00:05:56,250 --> 00:06:02,159
if you don't get do it right now like

00:06:00,419 --> 00:06:04,650
start writing it even if it's just a

00:06:02,159 --> 00:06:08,039
summary this is the stuff you want to

00:06:04,650 --> 00:06:09,630
have documented now the scenario I like

00:06:08,039 --> 00:06:11,400
to give for this sort of thing is

00:06:09,630 --> 00:06:14,340
imagine you're taking off the project

00:06:11,400 --> 00:06:16,610
and someone is put on your place would

00:06:14,340 --> 00:06:20,880
they know where to go where to begin

00:06:16,610 --> 00:06:22,349
where is everything right and I have all

00:06:20,880 --> 00:06:24,150
these posted online by the way in the

00:06:22,349 --> 00:06:26,180
session the PDF is already applied so

00:06:24,150 --> 00:06:29,520
don't don't worry about any pictures

00:06:26,180 --> 00:06:31,349
does everybody know what workflow state

00:06:29,520 --> 00:06:34,500
they're responsible for the developers

00:06:31,349 --> 00:06:35,760
know they're you know it ready to code

00:06:34,500 --> 00:06:37,830
review to the key

00:06:35,760 --> 00:06:40,710
Engineers know to pick up tickets in the

00:06:37,830 --> 00:06:44,010
ready for QA State and so on have that

00:06:40,710 --> 00:06:45,660
documented and spelled out a racy or

00:06:44,010 --> 00:06:48,330
Rassi depending on how you want to

00:06:45,660 --> 00:06:51,180
pronounce it a table that outlines whose

00:06:48,330 --> 00:06:53,370
job is what that's probably the most

00:06:51,180 --> 00:06:56,280
single important thing this could be

00:06:53,370 --> 00:06:59,040
just a basic spreadsheet with each role

00:06:56,280 --> 00:07:02,040
on the project right lead developer a

00:06:59,040 --> 00:07:02,510
developer senior developer QA product

00:07:02,040 --> 00:07:04,590
owner

00:07:02,510 --> 00:07:07,590
anyone else involved in the project

00:07:04,590 --> 00:07:10,080
release manager who does what on the job

00:07:07,590 --> 00:07:12,060
and outline are they the responsible

00:07:10,080 --> 00:07:14,070
party are they just the informed party

00:07:12,060 --> 00:07:18,180
we're on that spectrum did they'll and

00:07:14,070 --> 00:07:20,550
then the last one is I call it the

00:07:18,180 --> 00:07:22,590
objective rules and playbook playbooks

00:07:20,550 --> 00:07:25,020
this is the catch-all for everything on

00:07:22,590 --> 00:07:27,000
the project that everybody needs to know

00:07:25,020 --> 00:07:28,890
again think of the example somebody has

00:07:27,000 --> 00:07:32,340
dropped off the project it needs to come

00:07:28,890 --> 00:07:34,560
back on cold they have no time to get

00:07:32,340 --> 00:07:36,780
ramped up is there a one pager that

00:07:34,560 --> 00:07:39,900
outlines all of these steps clearly

00:07:36,780 --> 00:07:41,850
right what do you do when a client gives

00:07:39,900 --> 00:07:43,440
you a request to fix something at four

00:07:41,850 --> 00:07:44,910
o'clock on Friday when everybody's going

00:07:43,440 --> 00:07:46,260
out the door at 5:00 do you have a

00:07:44,910 --> 00:07:48,690
process for hotfix

00:07:46,260 --> 00:07:50,730
handling do you know who needs to be

00:07:48,690 --> 00:07:52,620
asked to get approval how long does a

00:07:50,730 --> 00:07:54,320
deployment tank what are the

00:07:52,620 --> 00:07:57,150
alternatives can we wait till Monday

00:07:54,320 --> 00:07:59,990
write it out as a basic question and

00:07:57,150 --> 00:08:03,060
answer flow diagram and having that

00:07:59,990 --> 00:08:06,570
documented shared and everybody on the

00:08:03,060 --> 00:08:09,630
team aware of that document makes a

00:08:06,570 --> 00:08:11,910
decision like that objective and not

00:08:09,630 --> 00:08:14,220
emotional and that when you have a

00:08:11,910 --> 00:08:16,200
problem on Friday at 4 o'clock is the

00:08:14,220 --> 00:08:18,330
first thing that happens right everyone

00:08:16,200 --> 00:08:19,500
starts freaking out running around like

00:08:18,330 --> 00:08:22,530
chickens oh my god what are we going to

00:08:19,500 --> 00:08:24,570
do pull up the document step one is it

00:08:22,530 --> 00:08:29,250
really a hotfix and just work your way

00:08:24,570 --> 00:08:30,900
through ok let's have some fun now this

00:08:29,250 --> 00:08:32,790
is the documentation side now we'll get

00:08:30,900 --> 00:08:34,979
to the cheer side this is my favorite

00:08:32,790 --> 00:08:38,430
part because I am a juror and ergh yes

00:08:34,979 --> 00:08:41,370
and I used your for all our projects in

00:08:38,430 --> 00:08:44,130
a TOC way oh that's standard issue we do

00:08:41,370 --> 00:08:46,500
cloud-hosted accounts a lot of customers

00:08:44,130 --> 00:08:47,970
bring their own JIRA instance so

00:08:46,500 --> 00:08:48,850
hopefully what I want to give you today

00:08:47,970 --> 00:08:50,740
are the

00:08:48,850 --> 00:08:53,680
quick and dirty list of things you

00:08:50,740 --> 00:08:56,290
should be doing or try to do alright so

00:08:53,680 --> 00:09:00,490
the first one this is hard this is

00:08:56,290 --> 00:09:04,209
really hard queries you find a picture

00:09:00,490 --> 00:09:06,670
for queries so let me first stop right

00:09:04,209 --> 00:09:08,680
first and ask a question who here has

00:09:06,670 --> 00:09:10,660
used JIRA or is using it regularly show

00:09:08,680 --> 00:09:15,610
of hands okay awesome

00:09:10,660 --> 00:09:17,980
yes I'm with my people so what if you

00:09:15,610 --> 00:09:20,139
don't know it already what I strongly

00:09:17,980 --> 00:09:22,360
recommend you do this is I warned you

00:09:20,139 --> 00:09:24,670
this was advanced is to learn some jaql

00:09:22,360 --> 00:09:27,160
if you know any kind of structured query

00:09:24,670 --> 00:09:29,050
language you've played with MySQL or you

00:09:27,160 --> 00:09:32,319
play with any kind of database queering

00:09:29,050 --> 00:09:34,750
then you kind of know it already and you

00:09:32,319 --> 00:09:36,670
can learn it very quickly thanks to the

00:09:34,750 --> 00:09:39,610
wait your is set up hopefully this will

00:09:36,670 --> 00:09:42,100
show up so if you go to your issues and

00:09:39,610 --> 00:09:44,350
just start doing a search the default is

00:09:42,100 --> 00:09:46,690
to give you the basic set up and you'll

00:09:44,350 --> 00:09:48,850
see a list of selections up the top just

00:09:46,690 --> 00:09:51,009
start picking things to find what it is

00:09:48,850 --> 00:09:53,589
you're looking for and once you've built

00:09:51,009 --> 00:09:55,569
that query go over to the right and

00:09:53,589 --> 00:10:00,100
click on advanced and it will turn it

00:09:55,569 --> 00:10:02,860
into jaql for you so right away I have

00:10:00,100 --> 00:10:05,620
now my first query what's the project

00:10:02,860 --> 00:10:07,149
what kind of issue type and it's once

00:10:05,620 --> 00:10:09,100
you start understanding how the query

00:10:07,149 --> 00:10:12,069
language works the difference between an

00:10:09,100 --> 00:10:14,470
equals and and in the exclamation point

00:10:12,069 --> 00:10:17,560
equals or not you kind of get your whole

00:10:14,470 --> 00:10:19,689
set of rules so just is it like absolute

00:10:17,560 --> 00:10:21,279
101 primer these are the first ones you

00:10:19,689 --> 00:10:22,990
can start with like I'm looking for a

00:10:21,279 --> 00:10:24,100
ticket in a project I'm looking for a

00:10:22,990 --> 00:10:25,930
tickets in the project that are only

00:10:24,100 --> 00:10:29,790
bugs I'm looking for tickets that are

00:10:25,930 --> 00:10:36,949
bugs or stories okay easy right

00:10:29,790 --> 00:10:42,470
all right next one anybody what is it

00:10:36,949 --> 00:10:44,839
columns he's not hard so in JIRA you

00:10:42,470 --> 00:10:46,819
think of get some more coffee people

00:10:44,839 --> 00:10:48,470
alright maybe that's the problem I put

00:10:46,819 --> 00:10:51,859
too much caffeine anything when you run

00:10:48,470 --> 00:10:53,419
a query now in JIRA your layout looks

00:10:51,859 --> 00:10:56,689
like a table you get a list of results

00:10:53,419 --> 00:11:00,350
quick side note if you don't know the

00:10:56,689 --> 00:11:02,619
key shortcuts in JIRA tea just tea no

00:11:00,350 --> 00:11:05,839
control no command little toggle between

00:11:02,619 --> 00:11:07,790
that column view and the detail view and

00:11:05,839 --> 00:11:09,889
go back and forth if you're in this

00:11:07,790 --> 00:11:12,139
column view you can arrange the columns

00:11:09,889 --> 00:11:13,999
you any way you want and you can pick

00:11:12,139 --> 00:11:15,199
what columns you want by clicking on

00:11:13,999 --> 00:11:18,139
that columns button all the way on the

00:11:15,199 --> 00:11:19,939
far right very very handy because how

00:11:18,139 --> 00:11:21,889
many times you wish you had an Excel

00:11:19,939 --> 00:11:23,929
spreadsheet for all those tickets to

00:11:21,889 --> 00:11:25,369
give to your customer now you can just

00:11:23,929 --> 00:11:27,619
crank it out and just send them a link

00:11:25,369 --> 00:11:29,779
and say hey I got it right here why

00:11:27,619 --> 00:11:31,759
don't you need a spreadsheet for so

00:11:29,779 --> 00:11:32,809
everybody knows this right I'm sure of

00:11:31,759 --> 00:11:35,899
hands anybody's familiar with this

00:11:32,809 --> 00:11:39,850
writing ok so good so you're learning

00:11:35,899 --> 00:11:39,850
stuff already awesome all right next one

00:11:39,910 --> 00:11:46,790
filters C's is it easy all right

00:11:43,429 --> 00:11:48,350
so Sprint filters this is my filters you

00:11:46,790 --> 00:11:50,720
can do for anything once you've learned

00:11:48,350 --> 00:11:52,819
a query you can learn to save it and

00:11:50,720 --> 00:11:54,379
once you save it you can share it and

00:11:52,819 --> 00:11:56,809
you can keep it to yourself and nobody

00:11:54,379 --> 00:11:59,029
else can see it so very often I'll do

00:11:56,809 --> 00:12:01,699
that but then more importantly when you

00:11:59,029 --> 00:12:03,169
start a new sprint instead of having to

00:12:01,699 --> 00:12:06,319
go to the board just create a filter

00:12:03,169 --> 00:12:08,449
that says project and sprint equals the

00:12:06,319 --> 00:12:11,540
current sprint and save it and share it

00:12:08,449 --> 00:12:12,980
by doing that you can share that filter

00:12:11,540 --> 00:12:15,110
with everybody on the team they'll click

00:12:12,980 --> 00:12:16,939
on the link they'll see that report they

00:12:15,110 --> 00:12:18,709
can make their own columns they can

00:12:16,939 --> 00:12:20,239
change that filter however they want but

00:12:18,709 --> 00:12:21,919
they get the same list of tickets that

00:12:20,239 --> 00:12:23,269
you're looking at remember at the very

00:12:21,919 --> 00:12:25,369
beginning what did I say was the most

00:12:23,269 --> 00:12:27,470
important thing clear communication

00:12:25,369 --> 00:12:30,410
making sure it's consistent and easily

00:12:27,470 --> 00:12:32,629
available sharing a sprint filter by the

00:12:30,410 --> 00:12:35,449
time you get to sprint 10 you now have a

00:12:32,629 --> 00:12:37,910
list of all the links to sprint 1 sprint

00:12:35,449 --> 00:12:43,009
twos from 3 and so on all readily

00:12:37,910 --> 00:12:45,169
available now one side tip don't name

00:12:43,009 --> 00:12:47,299
your sprint one sprint one how many

00:12:45,169 --> 00:12:48,769
people have done that because if you do

00:12:47,299 --> 00:12:49,820
when you start working on a large

00:12:48,769 --> 00:12:51,770
project

00:12:49,820 --> 00:12:53,750
you're going to get everybody's sprint 1

00:12:51,770 --> 00:12:56,630
and how do you know which sprint 1 is

00:12:53,750 --> 00:13:00,740
yours so first thing I advise is either

00:12:56,630 --> 00:13:02,450
give it an ID number or and the project

00:13:00,740 --> 00:13:05,720
name like you know I'm working for XYZ

00:13:02,450 --> 00:13:06,890
company sprint 1 and that will make it a

00:13:05,720 --> 00:13:08,480
lot easier for you because and you can

00:13:06,890 --> 00:13:10,940
just start typing in the project that

00:13:08,480 --> 00:13:12,080
you're interested in and I like I said I

00:13:10,940 --> 00:13:15,200
don't have many times this is haven't

00:13:12,080 --> 00:13:16,760
year but that drives me crazy so make

00:13:15,200 --> 00:13:19,720
sure you name your sprint support your

00:13:16,760 --> 00:13:22,880
filters and your Sprint's appropriately

00:13:19,720 --> 00:13:24,500
ok now how to do this really quickly one

00:13:22,880 --> 00:13:26,660
other thing to make sure you're aware of

00:13:24,500 --> 00:13:30,380
is when you create a sprint filter or

00:13:26,660 --> 00:13:33,230
any filter by default it's only your's

00:13:30,380 --> 00:13:34,430
you have to share it so very at the very

00:13:33,230 --> 00:13:36,860
top where there's the Save button

00:13:34,430 --> 00:13:39,230
there's a details link you click on that

00:13:36,860 --> 00:13:42,050
and there's this really kind of clunky

00:13:39,230 --> 00:13:44,300
UI where you have to add people that

00:13:42,050 --> 00:13:45,860
have visibility typically adding

00:13:44,300 --> 00:13:46,850
everybody that's on the project is a

00:13:45,860 --> 00:13:48,530
good place to start

00:13:46,850 --> 00:13:50,080
because you want everybody on the

00:13:48,530 --> 00:13:53,210
project to be able to see your filter

00:13:50,080 --> 00:13:55,730
scenes it's all coming together alright

00:13:53,210 --> 00:14:02,600
any questions on it alright let's go

00:13:55,730 --> 00:14:05,570
next one tags labels ok sorry ok I can

00:14:02,600 --> 00:14:07,940
see you have tags so labels anybody here

00:14:05,570 --> 00:14:09,230
using labels in JIRA frustrated because

00:14:07,940 --> 00:14:14,390
there's so many of them right

00:14:09,230 --> 00:14:17,780
okay so labels have a infinite number of

00:14:14,390 --> 00:14:22,220
uses the most benevolent of these that I

00:14:17,780 --> 00:14:25,100
see is for your sprint demo so you're on

00:14:22,220 --> 00:14:26,930
let's say day 8 or 7 of your 10 day

00:14:25,100 --> 00:14:28,610
sprint your two-week sprint and you and

00:14:26,930 --> 00:14:29,960
your product owner are figuring out what

00:14:28,610 --> 00:14:33,080
is it that you want to show off because

00:14:29,960 --> 00:14:34,550
a stakeholder is coming to the demo so

00:14:33,080 --> 00:14:37,160
how do you quickly mark the tickets that

00:14:34,550 --> 00:14:40,100
are going to actually be demoed just add

00:14:37,160 --> 00:14:44,180
a demo label and then you can run a

00:14:40,100 --> 00:14:46,820
filter query for this sprint plus label

00:14:44,180 --> 00:14:48,290
equals demo and now I have a pre-built

00:14:46,820 --> 00:14:50,390
list of all the tickets that are going

00:14:48,290 --> 00:14:52,640
to be on the demo don't have to build a

00:14:50,390 --> 00:14:54,830
spreadsheet done you save that filter

00:14:52,640 --> 00:14:58,700
and every sprint you will have this

00:14:54,830 --> 00:15:00,320
sprints demo tickets right which is what

00:14:58,700 --> 00:15:02,660
the developers need to see is that

00:15:00,320 --> 00:15:03,470
something that I'm demonstrating does

00:15:02,660 --> 00:15:04,850
the product owner

00:15:03,470 --> 00:15:06,740
know that those tickets are being

00:15:04,850 --> 00:15:09,020
demonstrated you can manage that any way

00:15:06,740 --> 00:15:11,480
you want but now building on that query

00:15:09,020 --> 00:15:14,300
add in the label and you can kind of see

00:15:11,480 --> 00:15:17,180
how we can use this using it more for

00:15:14,300 --> 00:15:19,610
actual filtering and not just for the

00:15:17,180 --> 00:15:21,440
customers marking it as urgent or

00:15:19,610 --> 00:15:26,120
whatever kind of crazy labels your

00:15:21,440 --> 00:15:31,490
client likes to do okay next one this is

00:15:26,120 --> 00:15:35,500
hard components awesome yes

00:15:31,490 --> 00:15:40,400
components components to me are the most

00:15:35,500 --> 00:15:43,340
underrated feature of JIRA and for us in

00:15:40,400 --> 00:15:46,010
the development world it works perfectly

00:15:43,340 --> 00:15:48,680
with content types

00:15:46,010 --> 00:15:51,050
it's a perfect one-to-one so if you're

00:15:48,680 --> 00:15:54,440
working on tickets you typically have

00:15:51,050 --> 00:15:55,730
them arranged by epic right so for

00:15:54,440 --> 00:15:58,610
example you're working on a let's call

00:15:55,730 --> 00:16:00,350
it an news release content type you've

00:15:58,610 --> 00:16:01,970
got theming tickets you've got back in

00:16:00,350 --> 00:16:03,980
tickets there's a view there's a whole

00:16:01,970 --> 00:16:05,810
load of stuff that's associated with it

00:16:03,980 --> 00:16:08,930
by the epic you may have your theming in

00:16:05,810 --> 00:16:11,150
another epic by adding a component to

00:16:08,930 --> 00:16:14,720
that ticket now you have another way to

00:16:11,150 --> 00:16:17,930
organize those tickets in a somewhat

00:16:14,720 --> 00:16:20,180
more Drupal organization and the real

00:16:17,930 --> 00:16:21,830
benefit is that of this at least one of

00:16:20,180 --> 00:16:25,880
the ones I can think of is regression

00:16:21,830 --> 00:16:27,740
testing in QA so imagine you're in your

00:16:25,880 --> 00:16:29,450
sprint and the last couple of Sprint's

00:16:27,740 --> 00:16:31,370
have been all over the map because

00:16:29,450 --> 00:16:33,620
you've got work on this thing and the

00:16:31,370 --> 00:16:35,540
theming and view and permissions and

00:16:33,620 --> 00:16:37,820
workflow and there's something wrong in

00:16:35,540 --> 00:16:39,620
the home page so the home page is a good

00:16:37,820 --> 00:16:42,410
one because everything feeds into it

00:16:39,620 --> 00:16:44,660
how can you quickly find the last couple

00:16:42,410 --> 00:16:46,339
of Sprint's worth of tickets where

00:16:44,660 --> 00:16:48,170
something may have broken something on

00:16:46,339 --> 00:16:50,780
the home page you can just go back to

00:16:48,170 --> 00:16:52,339
the component four home page and find

00:16:50,780 --> 00:16:54,890
the tickets that were associated with it

00:16:52,339 --> 00:16:57,110
not having to look for the epic or was

00:16:54,890 --> 00:16:59,060
it a view was it back-end you tagged it

00:16:57,110 --> 00:17:01,339
while you're doing grooming because you

00:16:59,060 --> 00:17:03,470
know that ticket affects that area or

00:17:01,339 --> 00:17:06,079
that functionality now you have another

00:17:03,470 --> 00:17:08,150
way to find that work more quickly this

00:17:06,079 --> 00:17:10,550
is really helpful when you're working on

00:17:08,150 --> 00:17:12,770
large projects and I mean like multiple

00:17:10,550 --> 00:17:15,380
development teams multiple product

00:17:12,770 --> 00:17:16,510
owners and you've got like 50 60 tickets

00:17:15,380 --> 00:17:17,559
of Sprint

00:17:16,510 --> 00:17:18,970
you're going to find something in the

00:17:17,559 --> 00:17:21,579
last three Sprint's do you really have

00:17:18,970 --> 00:17:23,140
time to go through 150 tickets use

00:17:21,579 --> 00:17:24,880
something like this and this will let at

00:17:23,140 --> 00:17:27,669
least narrow it down and you can find

00:17:24,880 --> 00:17:29,669
likely candidates that may have affected

00:17:27,669 --> 00:17:32,020
that regression

00:17:29,669 --> 00:17:34,390
besides the content type there's other

00:17:32,020 --> 00:17:36,429
areas to use and it's just about the

00:17:34,390 --> 00:17:37,929
typical functionality is that around

00:17:36,429 --> 00:17:40,870
content editing is it around image

00:17:37,929 --> 00:17:44,890
editing is around analytics advertising

00:17:40,870 --> 00:17:47,140
and so this is my list that I like to

00:17:44,890 --> 00:17:48,640
use and again this is posted in PDF C on

00:17:47,140 --> 00:17:50,470
a ticket make sure you copy and paste

00:17:48,640 --> 00:17:51,850
and we'll get there because I'll show

00:17:50,470 --> 00:17:54,820
you how to load this into your project

00:17:51,850 --> 00:17:56,530
like that but you can see I have content

00:17:54,820 --> 00:17:58,720
types I have integrations and then

00:17:56,530 --> 00:18:00,850
there's like everything else error pages

00:17:58,720 --> 00:18:03,130
how do you work on your error pages

00:18:00,850 --> 00:18:04,990
doing an error pages epic probably not

00:18:03,130 --> 00:18:06,730
at least you have something now it's

00:18:04,990 --> 00:18:08,669
usually a bug ticket now you have

00:18:06,730 --> 00:18:14,530
another way to organize those tickets

00:18:08,669 --> 00:18:17,130
okay next one I think plural of the

00:18:14,530 --> 00:18:21,280
singular tables yeah exactly

00:18:17,130 --> 00:18:24,850
so who here is using confluence along

00:18:21,280 --> 00:18:28,000
with Juris okay fair amount of you so if

00:18:24,850 --> 00:18:30,390
you're not already aware you can insert

00:18:28,000 --> 00:18:33,070
a filter in your confluence page and

00:18:30,390 --> 00:18:35,049
that means all those queries that we

00:18:33,070 --> 00:18:36,580
just talked about the list of demo

00:18:35,049 --> 00:18:39,760
tickets the list of tickets in the

00:18:36,580 --> 00:18:42,250
current sprint are now instantly tables

00:18:39,760 --> 00:18:44,440
on the confluence page so you can take

00:18:42,250 --> 00:18:46,210
that query that you just built and now

00:18:44,440 --> 00:18:48,130
stick it on a page and you can organize

00:18:46,210 --> 00:18:50,380
exactly what columns you want to display

00:18:48,130 --> 00:18:53,169
on the bottom right corner it lists all

00:18:50,380 --> 00:18:55,929
of them like do I really need the issue

00:18:53,169 --> 00:18:57,610
type when it was created probably not

00:18:55,929 --> 00:19:00,850
but I do want the summary and the key

00:18:57,610 --> 00:19:02,830
this is again think towards your product

00:19:00,850 --> 00:19:05,110
owner the people that you're working for

00:19:02,830 --> 00:19:07,480
are they able to see what it is that

00:19:05,110 --> 00:19:10,960
they want to see you can edit this and

00:19:07,480 --> 00:19:14,169
customize this as you see fit so two

00:19:10,960 --> 00:19:16,480
examples here I put in is a page that is

00:19:14,169 --> 00:19:18,820
specifically dedicated to all the work

00:19:16,480 --> 00:19:21,580
that we've done lately that's specific

00:19:18,820 --> 00:19:24,160
to the content type article because for

00:19:21,580 --> 00:19:25,630
this imaginary client that article is

00:19:24,160 --> 00:19:28,210
the big feature that they want to work

00:19:25,630 --> 00:19:29,059
on this quarter this sprint whatever it

00:19:28,210 --> 00:19:31,099
is

00:19:29,059 --> 00:19:33,709
the first question you always get get is

00:19:31,099 --> 00:19:35,449
Oh what are we working on in this sprint

00:19:33,709 --> 00:19:37,459
towards this feature that I've told you

00:19:35,449 --> 00:19:39,019
a million times we want to get done now

00:19:37,459 --> 00:19:40,399
you have a page that automatically

00:19:39,019 --> 00:19:42,199
updates you don't have to go back and

00:19:40,399 --> 00:19:43,579
generate a new report because that's a

00:19:42,199 --> 00:19:45,949
waste of your time you think better

00:19:43,579 --> 00:19:51,049
things to do save the query build a page

00:19:45,949 --> 00:19:52,609
and you're done okay this is yeah I'm

00:19:51,049 --> 00:19:54,829
from Philly so forgive me for the

00:19:52,609 --> 00:19:57,799
obligatory cheesesteak but it's not

00:19:54,829 --> 00:19:58,599
cheesesteak this is also a really hard

00:19:57,799 --> 00:20:02,859
one

00:19:58,599 --> 00:20:06,649
subs scheme that's a stretch all right

00:20:02,859 --> 00:20:08,839
subtasks cheesesteaks subs

00:20:06,649 --> 00:20:10,729
Justin okay I had a sub but nobody got

00:20:08,839 --> 00:20:10,999
it so I heard was a lot of some fun all

00:20:10,729 --> 00:20:14,479
right

00:20:10,999 --> 00:20:16,159
so in JIRA you can use subtasks and what

00:20:14,479 --> 00:20:19,519
a sub task is is when you're in the

00:20:16,159 --> 00:20:22,519
ticket a story a bug anything you can

00:20:19,519 --> 00:20:24,169
add a sub task right away this is really

00:20:22,519 --> 00:20:26,809
helpful when you're doing planning for

00:20:24,169 --> 00:20:28,549
that next sprint or grooming so a

00:20:26,809 --> 00:20:30,679
typical case is you've got a ticket

00:20:28,549 --> 00:20:32,929
where there's someone else involved

00:20:30,679 --> 00:20:35,569
that's not normally involved on the

00:20:32,929 --> 00:20:37,609
day-to-day process a good example design

00:20:35,569 --> 00:20:39,109
you're working with a company and they

00:20:37,609 --> 00:20:41,109
have their own internal design and

00:20:39,109 --> 00:20:44,209
marketing department they need to review

00:20:41,109 --> 00:20:47,179
you know how this theming work looks

00:20:44,209 --> 00:20:49,399
before it sent off to QA or to the

00:20:47,179 --> 00:20:51,889
product owner for UI team so you add a

00:20:49,399 --> 00:20:54,679
sub task that says don't forget to get

00:20:51,889 --> 00:20:56,689
the input from design and add it as a

00:20:54,679 --> 00:20:59,359
sub task so now you have a marker in the

00:20:56,689 --> 00:21:00,739
ticket more prominent than a label right

00:20:59,359 --> 00:21:02,929
because the labels get lost and

00:21:00,739 --> 00:21:04,909
everybody can see if it was done or not

00:21:02,929 --> 00:21:06,949
and more importantly is that you can

00:21:04,909 --> 00:21:10,399
assign it that's the big one

00:21:06,949 --> 00:21:12,679
so in that case so-and-so needs to be

00:21:10,399 --> 00:21:15,439
asked if this data is available or

00:21:12,679 --> 00:21:17,179
whatever that task is another one is

00:21:15,439 --> 00:21:19,429
let's say it's a very large or

00:21:17,179 --> 00:21:21,709
complicated ticket add a reminder

00:21:19,429 --> 00:21:23,389
basically to say hey let's check in on

00:21:21,709 --> 00:21:25,519
this project on day 5 and take an extra

00:21:23,389 --> 00:21:27,019
couple of minutes after a scrum and make

00:21:25,519 --> 00:21:29,359
sure that we're on track because it's a

00:21:27,019 --> 00:21:31,039
really important we get it done you will

00:21:29,359 --> 00:21:32,689
forget when it comes to day 5 right

00:21:31,039 --> 00:21:34,849
because you're in and out every day

00:21:32,689 --> 00:21:36,889
adding a ticket right on the board it's

00:21:34,849 --> 00:21:38,869
in your face everybody sees it everybody

00:21:36,889 --> 00:21:41,490
knows that we need to check it again

00:21:38,869 --> 00:21:45,600
clear consistent communication

00:21:41,490 --> 00:21:51,140
everybody who's on the team okay next

00:21:45,600 --> 00:21:54,330
one ceremonies so hard okay

00:21:51,140 --> 00:21:57,210
you're already hopefully using a daily

00:21:54,330 --> 00:22:00,240
standup you're using probably a sprint

00:21:57,210 --> 00:22:01,980
and review and a retro and a demo and

00:22:00,240 --> 00:22:05,040
you're hopefully doing ticket grooming

00:22:01,980 --> 00:22:06,090
are you doing sprint planning is anybody

00:22:05,040 --> 00:22:08,190
doing that at the beginning of the

00:22:06,090 --> 00:22:11,309
sprint like you're supposed to okay good

00:22:08,190 --> 00:22:13,520
so if you're not you should and a good

00:22:11,309 --> 00:22:16,290
way to keep this short and concise is

00:22:13,520 --> 00:22:18,210
prepare a document that is shared with

00:22:16,290 --> 00:22:19,830
everybody that lists the tickets that

00:22:18,210 --> 00:22:22,260
everybody is committed to for the Sprint

00:22:19,830 --> 00:22:24,750
but more for the product owner for the

00:22:22,260 --> 00:22:27,510
customer is to announce what are the

00:22:24,750 --> 00:22:31,080
real goals of the sprint in English not

00:22:27,510 --> 00:22:34,110
we want to get to get sp1 155 done it's

00:22:31,080 --> 00:22:36,480
that we want to be able to a lot a user

00:22:34,110 --> 00:22:37,470
can log in and change their profile like

00:22:36,480 --> 00:22:40,020
what's the feature

00:22:37,470 --> 00:22:42,510
what's the elevator pitch that a person

00:22:40,020 --> 00:22:45,929
at the customer side can say we're

00:22:42,510 --> 00:22:48,990
working on this and it got done it's yes

00:22:45,929 --> 00:22:50,360
or no like can we show that the news

00:22:48,990 --> 00:22:53,790
release is now show up on the homepage

00:22:50,360 --> 00:22:57,150
that's a goal right have the top two or

00:22:53,790 --> 00:22:59,280
three major features or goals that the

00:22:57,150 --> 00:23:01,740
customer thinks as the most important

00:22:59,280 --> 00:23:04,020
things in that sprint put it in a table

00:23:01,740 --> 00:23:05,640
and then at the end of the day at the

00:23:04,020 --> 00:23:08,640
end of the sprint when you're doing your

00:23:05,640 --> 00:23:10,679
retrospective you can just say did we

00:23:08,640 --> 00:23:13,530
meet this goal or not and now you have a

00:23:10,679 --> 00:23:15,480
metric for qualifying if the sprint was

00:23:13,530 --> 00:23:17,429
relatively successful or not if you have

00:23:15,480 --> 00:23:19,980
three primary goals and you've met them

00:23:17,429 --> 00:23:21,270
all that's a successful sprint if you

00:23:19,980 --> 00:23:23,130
have three primary goals and none of

00:23:21,270 --> 00:23:25,260
them got done they all turn out to be

00:23:23,130 --> 00:23:27,120
way more complicated than you thought

00:23:25,260 --> 00:23:28,950
and they got carried over into the next

00:23:27,120 --> 00:23:31,220
sprint that's right wasn't as successful

00:23:28,950 --> 00:23:33,929
but now you have an objective

00:23:31,220 --> 00:23:35,490
unemotional metric that everybody can be

00:23:33,929 --> 00:23:37,890
judged against or everybody can see how

00:23:35,490 --> 00:23:40,830
they're progressing against right that's

00:23:37,890 --> 00:23:42,420
the important thing another thing you

00:23:40,830 --> 00:23:44,460
can do obviously if you have time is

00:23:42,420 --> 00:23:47,700
assign the tickets to a developer this

00:23:44,460 --> 00:23:49,380
is a sidebar note we won't have time to

00:23:47,700 --> 00:23:51,450
talk about custom fields but if you're

00:23:49,380 --> 00:23:52,500
not using it already I would strongly

00:23:51,450 --> 00:23:54,840
recommend

00:23:52,500 --> 00:23:56,910
custom field for a developer you have

00:23:54,840 --> 00:23:59,280
the reporter you have the assignee at a

00:23:56,910 --> 00:24:00,900
developer because as the ticket goes

00:23:59,280 --> 00:24:02,940
through a workflow you won't remember

00:24:00,900 --> 00:24:05,160
who worked on the ticket and nobody has

00:24:02,940 --> 00:24:12,660
time to read through 50 comments to find

00:24:05,160 --> 00:24:17,100
out who was okay next one Z pruning yes

00:24:12,660 --> 00:24:18,810
so I'm not saying this is my project but

00:24:17,100 --> 00:24:21,140
the numbers on the side you probably

00:24:18,810 --> 00:24:24,990
can't read but the top number is for

00:24:21,140 --> 00:24:29,040
2400 380 this is the days in the issues

00:24:24,990 --> 00:24:30,900
log that were unresolved so hopefully

00:24:29,040 --> 00:24:33,840
your backlog doesn't look like this but

00:24:30,900 --> 00:24:37,320
if it does probably does you need to do

00:24:33,840 --> 00:24:39,150
some pruning so this I try to make this

00:24:37,320 --> 00:24:42,510
is this is actually I know I'm a nerd

00:24:39,150 --> 00:24:44,310
this is the fun ceremony to do because

00:24:42,510 --> 00:24:46,440
you can take your customer once a

00:24:44,310 --> 00:24:48,360
quarter and say we have a lot of in

00:24:46,440 --> 00:24:50,430
the backlog we need to get rid of Lent

00:24:48,360 --> 00:24:52,620
is spend an hour or two hours and just

00:24:50,430 --> 00:24:54,690
go rapid fire through tickets use a

00:24:52,620 --> 00:24:57,000
filter that says find me everything that

00:24:54,690 --> 00:24:59,250
hasn't been touched in over 14 weeks

00:24:57,000 --> 00:25:00,900
that means it's stale that means nobody

00:24:59,250 --> 00:25:03,300
cares about it it's not going to get

00:25:00,900 --> 00:25:05,160
done make a rapid fire decision to close

00:25:03,300 --> 00:25:07,170
those tickets just get it out if it's

00:25:05,160 --> 00:25:09,330
really important you can create another

00:25:07,170 --> 00:25:11,730
story but this way you're not going to

00:25:09,330 --> 00:25:15,180
be having to filter through that massive

00:25:11,730 --> 00:25:17,760
backlog of crust get rid of it all so I

00:25:15,180 --> 00:25:19,890
say do this quarterly it's fun

00:25:17,760 --> 00:25:22,290
especially for longer longer term

00:25:19,890 --> 00:25:29,210
projects that are running like 9 12 18

00:25:22,290 --> 00:25:35,390
months anybody

00:25:29,210 --> 00:25:37,670
take a guess grooming yes grooming so if

00:25:35,390 --> 00:25:39,800
you have whoops if you have multiple

00:25:37,670 --> 00:25:42,620
product owners on a project right not

00:25:39,800 --> 00:25:45,650
just one but two three four give a

00:25:42,620 --> 00:25:48,020
larger team and you have to get your

00:25:45,650 --> 00:25:49,670
grooming done it's the product owners

00:25:48,020 --> 00:25:51,290
responsibility to get those tickets

00:25:49,670 --> 00:25:53,120
groomed they're the ones they're going

00:25:51,290 --> 00:25:55,370
to bring them to the team and say I want

00:25:53,120 --> 00:25:58,040
to get this feature done is this to get

00:25:55,370 --> 00:25:59,990
ready for work or not if you have three

00:25:58,040 --> 00:26:02,000
or four of them now you have competing

00:25:59,990 --> 00:26:04,100
conflicting interests how do you

00:26:02,000 --> 00:26:06,080
maximize efficiency of a grooming

00:26:04,100 --> 00:26:07,850
session when everybody walks in with

00:26:06,080 --> 00:26:10,100
their top ten lists that they want to

00:26:07,850 --> 00:26:13,190
get done and you only have time to groom

00:26:10,100 --> 00:26:15,350
ten tickets so what I suggest is first

00:26:13,190 --> 00:26:17,780
of all time box it so you should

00:26:15,350 --> 00:26:19,850
allocate a rule of thumb I uses about

00:26:17,780 --> 00:26:22,160
half an hour per product owner per

00:26:19,850 --> 00:26:24,290
session because ever after a while it is

00:26:22,160 --> 00:26:26,270
going to go crazy and you really want to

00:26:24,290 --> 00:26:28,010
figure it you should not need more than

00:26:26,270 --> 00:26:29,750
five minutes per ticket to groom it if

00:26:28,010 --> 00:26:31,280
it takes more than five minutes the

00:26:29,750 --> 00:26:34,280
tickets not ready it needs to go back

00:26:31,280 --> 00:26:36,410
and discovery but if it is ready your

00:26:34,280 --> 00:26:39,830
team can size it and move on to the next

00:26:36,410 --> 00:26:43,190
ticket now the way I do this is I set up

00:26:39,830 --> 00:26:45,530
in a worksheet with a grid by product

00:26:43,190 --> 00:26:47,390
owner and I put in they put in the

00:26:45,530 --> 00:26:49,280
tickets they want to groom and they tell

00:26:47,390 --> 00:26:51,680
me when they're available so if I have

00:26:49,280 --> 00:26:53,180
two slots a week let's say a Tuesday in

00:26:51,680 --> 00:26:55,880
a Thursday or Monday in a Friday

00:26:53,180 --> 00:26:59,000
sometimes one can't make one and another

00:26:55,880 --> 00:27:00,560
one can make another now you can fit all

00:26:59,000 --> 00:27:03,200
the pieces together and organize a

00:27:00,560 --> 00:27:05,210
grooming schedule that is actually more

00:27:03,200 --> 00:27:06,890
efficient for everybody so I know I

00:27:05,210 --> 00:27:09,440
don't have any tickets being groomed on

00:27:06,890 --> 00:27:11,300
Tuesdays call I don't need to attend I

00:27:09,440 --> 00:27:12,800
can do something else but my tickets

00:27:11,300 --> 00:27:14,600
will be groomed on Thursday so I'll make

00:27:12,800 --> 00:27:17,270
sure to make that one it makes it a

00:27:14,600 --> 00:27:19,040
little bit a better relationship for the

00:27:17,270 --> 00:27:20,180
customer and it makes it more efficient

00:27:19,040 --> 00:27:24,530
for your team because now you're

00:27:20,180 --> 00:27:26,750
actually got stuff to go through there's

00:27:24,530 --> 00:27:28,250
a couple of assumptions like I mentioned

00:27:26,750 --> 00:27:30,530
make sure you have a hard deadline like

00:27:28,250 --> 00:27:32,930
you really have to time box it and keep

00:27:30,530 --> 00:27:34,850
things moving right but if you do this

00:27:32,930 --> 00:27:37,490
if you have four owners you can go

00:27:34,850 --> 00:27:40,940
through a list of tickets like this and

00:27:37,490 --> 00:27:43,210
easily in an hour if not less yeah

00:27:40,940 --> 00:27:43,210
question

00:27:50,930 --> 00:27:57,000
so that's that's exactly it so well for

00:27:54,900 --> 00:27:58,890
grooming a loan that you have to make it

00:27:57,000 --> 00:28:00,420
fair right so if they're all using the

00:27:58,890 --> 00:28:01,860
same development team let's say and

00:28:00,420 --> 00:28:04,050
these are my three product owners

00:28:01,860 --> 00:28:06,150
they're the ones responsible for getting

00:28:04,050 --> 00:28:09,150
their tickets into the next getting it

00:28:06,150 --> 00:28:10,590
ready for development and then in the

00:28:09,150 --> 00:28:12,420
planning meeting you have a meeting with

00:28:10,590 --> 00:28:15,000
all of those product owners and you

00:28:12,420 --> 00:28:17,040
decide okay we can fit X number of

00:28:15,000 --> 00:28:19,140
points what really needs to get done now

00:28:17,040 --> 00:28:22,110
what can wait a sprint what can wait

00:28:19,140 --> 00:28:24,270
three sprints and so on for larger types

00:28:22,110 --> 00:28:26,730
of projects like that usually have to

00:28:24,270 --> 00:28:30,390
use another tool on top of JIRA like AHA

00:28:26,730 --> 00:28:32,190
or a Gantt chart to kind of map out the

00:28:30,390 --> 00:28:33,990
amount of Sprint's you need to get a

00:28:32,190 --> 00:28:36,240
feature done to make sure that you have

00:28:33,990 --> 00:28:37,710
enough time to get it done and there is

00:28:36,240 --> 00:28:40,860
a little bit of trickery with that but

00:28:37,710 --> 00:28:42,330
for this argument this is just about the

00:28:40,860 --> 00:28:45,390
grooming itself so that's like the first

00:28:42,330 --> 00:28:46,770
step in that chain but yeah good

00:28:45,390 --> 00:28:48,570
question in terms of the beginning of

00:28:46,770 --> 00:28:49,740
the Sprint they have to hash it out

00:28:48,570 --> 00:28:52,410
among themselves as a fist fight

00:28:49,740 --> 00:28:54,510
basically or horse training like yeah

00:28:52,410 --> 00:28:55,710
let's make this a stretch ticket or we

00:28:54,510 --> 00:28:58,410
can wait a Sprint we really don't need

00:28:55,710 --> 00:29:00,450
it right away so just set up a document

00:28:58,410 --> 00:29:02,070
like this and share it with everybody on

00:29:00,450 --> 00:29:04,560
the team all the product owners and they

00:29:02,070 --> 00:29:06,660
fill it in do it the same time I do one

00:29:04,560 --> 00:29:09,210
let's say one per week and then

00:29:06,660 --> 00:29:11,160
everybody knows what tickets are going

00:29:09,210 --> 00:29:12,570
to be groomed and this also gives a

00:29:11,160 --> 00:29:14,670
developer is a little bit of lead time

00:29:12,570 --> 00:29:17,040
to actually go and read the tickets

00:29:14,670 --> 00:29:18,300
ahead of grooming to say yeah this one's

00:29:17,040 --> 00:29:21,300
not quite ready or I've got a question

00:29:18,300 --> 00:29:23,910
or this is really easy and it gives them

00:29:21,300 --> 00:29:27,470
a little bit of time to be prepared now

00:29:23,910 --> 00:29:31,680
the other part of grooming obviously is

00:29:27,470 --> 00:29:35,670
pointing or sizing the tickets and so I

00:29:31,680 --> 00:29:37,560
like to use pointing poker this allows

00:29:35,670 --> 00:29:39,480
everybody to keep it fair and keeps the

00:29:37,560 --> 00:29:42,570
voting time so that you can watch that

00:29:39,480 --> 00:29:44,250
five in a clock and you can arrange it

00:29:42,570 --> 00:29:45,720
how you want so all you have to do is

00:29:44,250 --> 00:29:47,460
just type the ticket in I'll have

00:29:45,720 --> 00:29:50,280
another window open I'll show you what

00:29:47,460 --> 00:29:52,380
it looks like you just go to the site

00:29:50,280 --> 00:29:54,020
you either join an existing session or

00:29:52,380 --> 00:29:57,100
if it's yours you type in a

00:29:54,020 --> 00:29:59,620
number and you have a lot of options

00:29:57,100 --> 00:30:01,700
you've put in your name you can join

00:29:59,620 --> 00:30:03,350
most importantly is what you're going to

00:30:01,700 --> 00:30:04,910
be using you want to use t-shirt sizes

00:30:03,350 --> 00:30:08,390
you want to use a Fibonacci sequence you

00:30:04,910 --> 00:30:09,680
when use ours whatever it is and for

00:30:08,390 --> 00:30:12,200
product owners that can join as a

00:30:09,680 --> 00:30:13,970
non-voting person as an observer the

00:30:12,200 --> 00:30:15,590
nice thing is that once everybody votes

00:30:13,970 --> 00:30:18,950
and I'm doing this with only two devs

00:30:15,590 --> 00:30:20,690
here but the idea is I cast a vote for

00:30:18,950 --> 00:30:22,520
eight points and then everybody else

00:30:20,690 --> 00:30:25,310
votes and if everybody votes the same

00:30:22,520 --> 00:30:26,780
thing you see consensus or if you see

00:30:25,310 --> 00:30:28,970
that everybody's voting different sizes

00:30:26,780 --> 00:30:32,510
you see what the tally is over on the

00:30:28,970 --> 00:30:35,390
right-hand side over there right so I

00:30:32,510 --> 00:30:38,510
see that I had an 8 the 13 in a typical

00:30:35,390 --> 00:30:41,750
pointing session I may have what's a 3/8

00:30:38,510 --> 00:30:43,790
and 113 then I can say okay so and so

00:30:41,750 --> 00:30:45,740
you voted 13 what are your concerns and

00:30:43,790 --> 00:30:46,910
now you get right to the heart of the

00:30:45,740 --> 00:30:49,160
questions that are being asked by the

00:30:46,910 --> 00:30:50,690
developers why do they think why do they

00:30:49,160 --> 00:30:51,820
understand to be more complicated than

00:30:50,690 --> 00:30:57,440
it sounds

00:30:51,820 --> 00:30:58,430
all right any questions on it okay yeah

00:30:57,440 --> 00:31:01,580
you're not going to get this one it's

00:30:58,430 --> 00:31:03,710
not one word is too tips and tricks okay

00:31:01,580 --> 00:31:07,660
so a couple quick other things just to

00:31:03,710 --> 00:31:09,860
throw in here to round these out one is

00:31:07,660 --> 00:31:11,330
using this is all kind of using the

00:31:09,860 --> 00:31:15,020
ingredients that I started giving you

00:31:11,330 --> 00:31:17,390
now I like because I like color because

00:31:15,020 --> 00:31:20,240
the Sprint board is pretty boring I like

00:31:17,390 --> 00:31:25,130
to use queries on the back side to color

00:31:20,240 --> 00:31:27,530
the code of the tickets by for example a

00:31:25,130 --> 00:31:29,750
custom field or some other combination

00:31:27,530 --> 00:31:31,790
so in a case where you have a large

00:31:29,750 --> 00:31:33,710
project you may have multiple teams like

00:31:31,790 --> 00:31:35,510
you know let's say North America South

00:31:33,710 --> 00:31:38,210
America and Europe you have development

00:31:35,510 --> 00:31:40,430
teams in each region you could make that

00:31:38,210 --> 00:31:43,070
a custom field and now you can share a

00:31:40,430 --> 00:31:45,410
single board but color code you know

00:31:43,070 --> 00:31:47,750
Europe is blue so I can see what the

00:31:45,410 --> 00:31:49,790
tickets Europeans are working on green

00:31:47,750 --> 00:31:51,980
for South America and I can see that it

00:31:49,790 --> 00:31:54,830
says green I'll show you what this looks

00:31:51,980 --> 00:31:57,680
like in a second another is when you're

00:31:54,830 --> 00:31:59,300
in the backlog create a sprint just for

00:31:57,680 --> 00:32:02,120
organization you don't have to ever open

00:31:59,300 --> 00:32:04,970
it but now you have like a holding bin

00:32:02,120 --> 00:32:06,809
you could call it like the icebox or you

00:32:04,970 --> 00:32:08,149
know tickets we really need to focus on

00:32:06,809 --> 00:32:10,980
and for the next couple of Sprint's

00:32:08,149 --> 00:32:12,240
especially if you have a lot of stuff in

00:32:10,980 --> 00:32:14,429
your backlog because you haven't done

00:32:12,240 --> 00:32:16,470
pruning and you have 400 issues back

00:32:14,429 --> 00:32:18,539
there you can pull out let's say the 10

00:32:16,470 --> 00:32:22,139
or 20 that you need to focus on just

00:32:18,539 --> 00:32:24,179
create another placeholder sprint the

00:32:22,139 --> 00:32:26,159
last thing to make sure if you've not

00:32:24,179 --> 00:32:28,620
done this before and if we have time

00:32:26,159 --> 00:32:30,299
I'll show you how to do this set up

00:32:28,620 --> 00:32:33,240
multiple boards you don't have to have

00:32:30,299 --> 00:32:35,249
one master board or one single view you

00:32:33,240 --> 00:32:36,929
can make one Kanban and another one

00:32:35,249 --> 00:32:39,450
scrum there's no rule that says that

00:32:36,929 --> 00:32:41,369
they all have to be the same so from a

00:32:39,450 --> 00:32:43,769
product owner perspective that's a

00:32:41,369 --> 00:32:46,379
Kanban board for the UAT state right

00:32:43,769 --> 00:32:48,779
it's ready for me to look at I'm looking

00:32:46,379 --> 00:32:50,970
at it and I'm done with it and that's it

00:32:48,779 --> 00:32:53,249
so just put those three workflow states

00:32:50,970 --> 00:32:55,110
in one board and that's specifically

00:32:53,249 --> 00:32:56,309
designated for a product owner you can

00:32:55,110 --> 00:32:59,580
do the same thing for QA

00:32:56,309 --> 00:33:01,919
you could do the same thing for the code

00:32:59,580 --> 00:33:04,080
reviewer right coming out of ready and

00:33:01,919 --> 00:33:05,429
going into code review they don't have

00:33:04,080 --> 00:33:08,580
to be time limit they don't have to be a

00:33:05,429 --> 00:33:10,320
typical scrum board okay so let me show

00:33:08,580 --> 00:33:13,710
you what I mean by this color coding and

00:33:10,320 --> 00:33:16,019
the swimlanes and for example I have

00:33:13,710 --> 00:33:17,850
another label here stretch what if you

00:33:16,019 --> 00:33:19,860
add a ticket to your sprint because

00:33:17,850 --> 00:33:22,350
you've got capacity you want to show

00:33:19,860 --> 00:33:24,240
that that ticket was at it yes JIRA will

00:33:22,350 --> 00:33:25,950
show that it was added to the sprint

00:33:24,240 --> 00:33:27,749
after was open but you want to be able

00:33:25,950 --> 00:33:29,820
to label it right away because that

00:33:27,749 --> 00:33:32,279
means it wasn't originally planned for

00:33:29,820 --> 00:33:33,929
it's almost like icing on the cake you

00:33:32,279 --> 00:33:36,929
can make it its own swimlane in the

00:33:33,929 --> 00:33:39,539
backlog and now you get the customer to

00:33:36,929 --> 00:33:41,369
not focus on the tickets that were icing

00:33:39,539 --> 00:33:43,740
on the cake but really is the tickets

00:33:41,369 --> 00:33:44,340
that we started this sprint with that

00:33:43,740 --> 00:33:47,399
make sense

00:33:44,340 --> 00:33:49,470
all right so in the back if you go to

00:33:47,399 --> 00:33:52,950
your board and you configure it for

00:33:49,470 --> 00:33:57,990
example here I'm using this time point

00:33:52,950 --> 00:33:59,970
it's not you can use queries and you

00:33:57,990 --> 00:34:03,509
just type in for example I want to have

00:33:59,970 --> 00:34:05,460
a labels equals stretch and so now if I

00:34:03,509 --> 00:34:06,869
add that and I go back to my board if I

00:34:05,460 --> 00:34:09,599
have any tickets that I've added they

00:34:06,869 --> 00:34:11,069
show up in their own swimlane basic the

00:34:09,599 --> 00:34:14,250
colors that you see here are blue and

00:34:11,069 --> 00:34:16,440
gold those can be either also additional

00:34:14,250 --> 00:34:18,510
queries or let's say in this case I'm

00:34:16,440 --> 00:34:20,280
assigning it by team so let's say the

00:34:18,510 --> 00:34:22,400
blue is the US

00:34:20,280 --> 00:34:25,169
team and the goal is the India team or

00:34:22,400 --> 00:34:26,790
whatever you want but now you can see

00:34:25,169 --> 00:34:28,230
who's working on wide and you can say oh

00:34:26,790 --> 00:34:30,900
the blue team is way ahead of everybody

00:34:28,230 --> 00:34:33,030
else and gold what's going on there so I

00:34:30,900 --> 00:34:35,220
can already see some more reporting and

00:34:33,030 --> 00:34:38,280
everybody sees this and everybody knows

00:34:35,220 --> 00:34:39,570
what you're doing again the example is

00:34:38,280 --> 00:34:41,580
to have clear and consistent

00:34:39,570 --> 00:34:46,380
communication on the product on the

00:34:41,580 --> 00:34:49,380
project ok one more I think this is the

00:34:46,380 --> 00:34:57,690
other example with the queries for the

00:34:49,380 --> 00:35:00,750
card colors right so here I'm using like

00:34:57,690 --> 00:35:03,060
I find it ticket yeah I'm using extra

00:35:00,750 --> 00:35:06,480
custom fields and here I've got a team

00:35:03,060 --> 00:35:09,000
so now I can say PS team is blue I can

00:35:06,480 --> 00:35:11,130
see right away that how that team is

00:35:09,000 --> 00:35:13,080
performing so now I'm just assigning up

00:35:11,130 --> 00:35:14,520
my card color and I'm using that label

00:35:13,080 --> 00:35:16,800
team equals whatever the name of the

00:35:14,520 --> 00:35:18,420
team is that's it it's a little bit of

00:35:16,800 --> 00:35:20,730
effort on the up front but once you have

00:35:18,420 --> 00:35:22,770
it in place you can adapt and adjust

00:35:20,730 --> 00:35:24,300
this any way you want I'm just looking

00:35:22,770 --> 00:35:26,580
at one custom feel but it could be

00:35:24,300 --> 00:35:27,630
anything it could be by size it could be

00:35:26,580 --> 00:35:30,210
by component

00:35:27,630 --> 00:35:33,450
let's show me all the content news

00:35:30,210 --> 00:35:34,950
article tickets in one swimlane because

00:35:33,450 --> 00:35:37,260
there's a product owner that is just on

00:35:34,950 --> 00:35:38,310
my back all the time about those tickets

00:35:37,260 --> 00:35:42,680
and I don't want to set up a separate

00:35:38,310 --> 00:35:47,430
board give them their own swimlane ok

00:35:42,680 --> 00:35:51,290
now we get to the fun part kits with

00:35:47,430 --> 00:35:51,290
legs and kittens rest api

00:35:52,930 --> 00:35:57,020
yeah everybody different go to the

00:35:55,640 --> 00:35:59,540
prenup this morning by the way you guys

00:35:57,020 --> 00:36:01,880
have a good time yeah okay good

00:35:59,540 --> 00:36:03,020
has anyone used the rest API and JIRA

00:36:01,880 --> 00:36:04,430
does it mean know what I'm talking about

00:36:03,020 --> 00:36:06,349
let me start with that anybody have a

00:36:04,430 --> 00:36:07,940
clue what I'm talking about okay a

00:36:06,349 --> 00:36:10,160
couple of you good so this is really

00:36:07,940 --> 00:36:13,309
again to the meat of this so if you have

00:36:10,160 --> 00:36:16,910
a JIRA instance you can add this to the

00:36:13,309 --> 00:36:20,270
URL and add your query as a string and

00:36:16,910 --> 00:36:23,569
you get a JSON object back with all that

00:36:20,270 --> 00:36:25,910
data so instead of looking at it from a

00:36:23,569 --> 00:36:28,520
board look at it from a pure API

00:36:25,910 --> 00:36:30,380
perspective you can hit JIRA and get

00:36:28,520 --> 00:36:33,380
whatever pieces you need this is just

00:36:30,380 --> 00:36:35,510
one endpoint there is a ton of them and

00:36:33,380 --> 00:36:37,640
I'll give you the URL for it but this is

00:36:35,510 --> 00:36:40,250
the best example right out of the gate

00:36:37,640 --> 00:36:43,190
so if I use that query that I just told

00:36:40,250 --> 00:36:46,250
you about before projects equals you

00:36:43,190 --> 00:36:49,369
know sp1 and issue type equals bug I

00:36:46,250 --> 00:36:52,220
pass that to the end of this string and

00:36:49,369 --> 00:36:57,890
I'll get a JSON set back and I get a

00:36:52,220 --> 00:36:59,480
count 35 so what this means I don't see

00:36:57,890 --> 00:37:03,349
this in reason to connect the dots here

00:36:59,480 --> 00:37:05,960
I could build a Google sheet with a

00:37:03,349 --> 00:37:09,920
bunch of fields and query my JIRA and

00:37:05,960 --> 00:37:12,109
build any kind of report I want so you

00:37:09,920 --> 00:37:14,780
can run a query on JIRA that says show

00:37:12,109 --> 00:37:19,280
me all the tickets in this sprint that

00:37:14,780 --> 00:37:21,470
were reopened from QA specifically and I

00:37:19,280 --> 00:37:23,780
can get a count what that number is or

00:37:21,470 --> 00:37:27,170
show me all tickets whose component is

00:37:23,780 --> 00:37:29,329
article or whatever anything you want as

00:37:27,170 --> 00:37:31,400
long as you have a query that works so

00:37:29,329 --> 00:37:35,000
you can go to a goal sheet build that

00:37:31,400 --> 00:37:37,540
query pass it along and oh and sorry

00:37:35,000 --> 00:37:40,549
this is the endpoint for all the rest

00:37:37,540 --> 00:37:42,049
endpoints on JIRA you'll see a long list

00:37:40,549 --> 00:37:43,940
and I'll go through like three of them

00:37:42,049 --> 00:37:45,470
here but you could build anything you

00:37:43,940 --> 00:37:48,260
want so here I'm going a little crazy

00:37:45,470 --> 00:37:51,230
but you get the idea I've got you know a

00:37:48,260 --> 00:37:52,849
half a dozen sprints and I see the

00:37:51,230 --> 00:37:54,530
number of tickets I see the number of

00:37:52,849 --> 00:37:56,780
stories I see the number of bugs I see

00:37:54,530 --> 00:37:59,720
the number of stories specifically for

00:37:56,780 --> 00:38:01,069
the f:v group whatever that is how many

00:37:59,720 --> 00:38:02,960
of them were reopened how many of them

00:38:01,069 --> 00:38:03,950
were reopen specifically from QA how

00:38:02,960 --> 00:38:06,410
many of them were open

00:38:03,950 --> 00:38:08,930
specifically from UAT right that means

00:38:06,410 --> 00:38:10,580
the guys that caught it on my side the

00:38:08,930 --> 00:38:13,160
tickets that were caught by the product

00:38:10,580 --> 00:38:15,710
owner you will ideally don't have any

00:38:13,160 --> 00:38:17,240
tickets to reopen from u18 and this is

00:38:15,710 --> 00:38:19,130
all fake numbers about myself don't

00:38:17,240 --> 00:38:21,110
think my project is as bad as it looks

00:38:19,130 --> 00:38:23,030
please but the idea is once you have

00:38:21,110 --> 00:38:25,370
this now in Google sheets there's

00:38:23,030 --> 00:38:27,560
awesome charting tools and now you have

00:38:25,370 --> 00:38:29,600
a nice fancy graph you can shed say hey

00:38:27,560 --> 00:38:31,490
look our overall quality is improving

00:38:29,600 --> 00:38:33,650
you know why are these bumps here why is

00:38:31,490 --> 00:38:36,020
the gold spiking here what happened in

00:38:33,650 --> 00:38:38,540
that sprint ways to start conversations

00:38:36,020 --> 00:38:40,670
with your with your customer but this is

00:38:38,540 --> 00:38:42,620
way way more detailed and you're going

00:38:40,670 --> 00:38:43,910
to be able to get out of jera and easier

00:38:42,620 --> 00:38:47,390
because you already know how to use

00:38:43,910 --> 00:38:48,770
Google cheese right okay Chris this is

00:38:47,390 --> 00:38:49,430
all great how the hell did I do this

00:38:48,770 --> 00:38:52,850
okay

00:38:49,430 --> 00:38:56,980
easy you use this function that's it I

00:38:52,850 --> 00:39:00,230
know real easy so I have instructions

00:38:56,980 --> 00:39:03,110
this is basically one variation of the

00:39:00,230 --> 00:39:04,910
function call and I have this in github

00:39:03,110 --> 00:39:07,220
and it's I'll come back to this it's

00:39:04,910 --> 00:39:08,900
here you can download it plop it into a

00:39:07,220 --> 00:39:10,610
sheet I have used specific instructions

00:39:08,900 --> 00:39:13,280
how to do it you go to the script editor

00:39:10,610 --> 00:39:15,500
in your Google sheet you add this you

00:39:13,280 --> 00:39:17,420
have to you know give it permissions the

00:39:15,500 --> 00:39:19,700
only piece that's the most important is

00:39:17,420 --> 00:39:20,120
you have to add your username and

00:39:19,700 --> 00:39:21,800
password

00:39:20,120 --> 00:39:24,080
I think this is JIRA you can't just go

00:39:21,800 --> 00:39:26,210
to it you have to authenticate so if you

00:39:24,080 --> 00:39:27,920
want that icky the endpoints that I

00:39:26,210 --> 00:39:29,470
mentioned you can query but you have to

00:39:27,920 --> 00:39:31,820
be authenticated in the same session

00:39:29,470 --> 00:39:35,390
this is another way to do that within a

00:39:31,820 --> 00:39:36,620
within a function call so all this is

00:39:35,390 --> 00:39:38,570
already you don't have to do anything

00:39:36,620 --> 00:39:40,820
you just copy and paste this and all you

00:39:38,570 --> 00:39:42,680
do is on your sheet type in the query

00:39:40,820 --> 00:39:45,320
project equals project type equals

00:39:42,680 --> 00:39:48,440
anything but a sub task and the Sprint

00:39:45,320 --> 00:39:50,060
was 1122 remember at the beginning I

00:39:48,440 --> 00:39:52,400
told you name or Sprint's with an ID

00:39:50,060 --> 00:39:54,380
number so now you have a reference

00:39:52,400 --> 00:39:57,890
because you know what that ideas and you

00:39:54,380 --> 00:40:01,070
can make queries out of it okay it's a

00:39:57,890 --> 00:40:04,190
lot right okay more this is going to be

00:40:01,070 --> 00:40:07,070
awesome all right next one standardize

00:40:04,190 --> 00:40:08,840
your projects this is a lofty goal but

00:40:07,070 --> 00:40:11,660
my hope is what I'm going to be able to

00:40:08,840 --> 00:40:13,819
show you is a way for you to standardize

00:40:11,660 --> 00:40:16,039
your projects because a lot of time is

00:40:13,819 --> 00:40:18,109
and getting stuff set up at the

00:40:16,039 --> 00:40:20,239
beginning you start with a blank slate a

00:40:18,109 --> 00:40:21,920
new project in JIRA you have to go back

00:40:20,239 --> 00:40:23,809
and add all the tickets you have to add

00:40:21,920 --> 00:40:25,459
your epics and add your components all

00:40:23,809 --> 00:40:28,309
these things have to be added in and you

00:40:25,459 --> 00:40:30,890
usually do it by hand now if you've ever

00:40:28,309 --> 00:40:32,719
imported stuff into JIRA you know that

00:40:30,890 --> 00:40:36,499
you can export let's say from a Google

00:40:32,719 --> 00:40:38,359
document or Excel CSV list and as long

00:40:36,499 --> 00:40:41,239
as the fields line up you can import all

00:40:38,359 --> 00:40:44,539
your stories in one giant pass right all

00:40:41,239 --> 00:40:46,699
you need is like a summary and that's it

00:40:44,539 --> 00:40:49,190
right in bare minimum ideally a summary

00:40:46,699 --> 00:40:51,739
acceptance criteria implementation

00:40:49,190 --> 00:40:53,420
details description some other notes if

00:40:51,739 --> 00:40:56,559
you have them in columns you can export

00:40:53,420 --> 00:40:58,819
that and import them easily into JIRA

00:40:56,559 --> 00:41:00,559
epics and components are a little

00:40:58,819 --> 00:41:02,269
trickier epics are just another version

00:41:00,559 --> 00:41:03,769
of a ticket so this is the first one

00:41:02,269 --> 00:41:05,989
we'll do which is really easy because

00:41:03,769 --> 00:41:08,299
it's the same thing as importing your

00:41:05,989 --> 00:41:10,519
stories except that you just say it's an

00:41:08,299 --> 00:41:12,079
epic and once you have an epic list now

00:41:10,519 --> 00:41:14,690
you can drag all your tickets over and

00:41:12,079 --> 00:41:17,930
associate them to that epic much more

00:41:14,690 --> 00:41:19,880
quickly most importantly is that all

00:41:17,930 --> 00:41:22,099
your projects will start now to be more

00:41:19,880 --> 00:41:24,229
consistent meaning one person says they

00:41:22,099 --> 00:41:26,119
have an issue on you know some epic

00:41:24,229 --> 00:41:26,989
somebody on another project knows what

00:41:26,119 --> 00:41:29,779
you're talking about because they have

00:41:26,989 --> 00:41:32,119
the same epic on their project and that

00:41:29,779 --> 00:41:35,239
means you have now some equal waiting to

00:41:32,119 --> 00:41:38,209
figure out effort because on one project

00:41:35,239 --> 00:41:40,099
this epic took us X amount of hours now

00:41:38,209 --> 00:41:41,900
I'm coming to this new project how many

00:41:40,099 --> 00:41:44,059
hours is it going to take me well on the

00:41:41,900 --> 00:41:46,999
last one it took me 10 hours so now you

00:41:44,059 --> 00:41:49,039
have some better equivalents in terms of

00:41:46,999 --> 00:41:50,390
reporting and a feedback loop if you're

00:41:49,039 --> 00:41:52,729
really into this kind of stuff you know

00:41:50,390 --> 00:41:54,140
over the course of a year or two now you

00:41:52,729 --> 00:41:56,569
have a lot of projects to start

00:41:54,140 --> 00:41:58,339
measuring against and figuring out what

00:41:56,569 --> 00:42:01,130
kind of budget you want to plan for and

00:41:58,339 --> 00:42:03,229
as a prot a business owner that's really

00:42:01,130 --> 00:42:05,089
what you want how efficient is my team

00:42:03,229 --> 00:42:07,999
can I accurately estimate how much this

00:42:05,089 --> 00:42:10,009
project is going to cost me

00:42:07,999 --> 00:42:12,019
and then for developers obviously they

00:42:10,009 --> 00:42:15,259
come on to a project knowing that it's

00:42:12,019 --> 00:42:16,819
the same naming naming convention from

00:42:15,259 --> 00:42:17,719
one project to another makes things a

00:42:16,819 --> 00:42:19,609
lot easier

00:42:17,719 --> 00:42:22,279
one person will call something one thing

00:42:19,609 --> 00:42:24,229
and another person calls in another get

00:42:22,279 --> 00:42:24,920
rid of that make it all the same make it

00:42:24,229 --> 00:42:26,750
uniform

00:42:24,920 --> 00:42:29,210
a standardized it you may have your own

00:42:26,750 --> 00:42:30,560
nomenclature for your own projects make

00:42:29,210 --> 00:42:33,920
them all the same on all your projects

00:42:30,560 --> 00:42:35,060
right okay so what I'm showing here on

00:42:33,920 --> 00:42:36,650
the right hand side is you know you

00:42:35,060 --> 00:42:39,410
create a ticket and you want to be able

00:42:36,650 --> 00:42:41,360
to associate it to an epic easily so if

00:42:39,410 --> 00:42:43,280
those epics are already there as you

00:42:41,360 --> 00:42:45,080
start creating this to those stories

00:42:43,280 --> 00:42:47,300
the product owner starts creating those

00:42:45,080 --> 00:42:49,580
stories they can associate them easily

00:42:47,300 --> 00:42:51,590
to the epics that you're starting them

00:42:49,580 --> 00:42:53,300
with all right lead them down the path

00:42:51,590 --> 00:42:55,760
you don't want to let them just start

00:42:53,300 --> 00:42:57,110
creating stuff give them a starter list

00:42:55,760 --> 00:42:59,450
and that's what this epic list is

00:42:57,110 --> 00:43:01,070
supposed to be four components it's the

00:42:59,450 --> 00:43:02,150
same thing remember that long list of

00:43:01,070 --> 00:43:03,680
three columns that I gave at the

00:43:02,150 --> 00:43:06,110
beginning if I have that already

00:43:03,680 --> 00:43:07,340
existing in JIRA all they have to do is

00:43:06,110 --> 00:43:08,780
just start typing the first couple of

00:43:07,340 --> 00:43:11,360
letters and it automatically makes a

00:43:08,780 --> 00:43:15,410
match and now you have a preset list of

00:43:11,360 --> 00:43:19,160
things to identify tickets with okay all

00:43:15,410 --> 00:43:22,370
right so the good news is importing

00:43:19,160 --> 00:43:24,800
epics into JIRA is really really easy

00:43:22,370 --> 00:43:28,010
all you have to do is go up to issues

00:43:24,800 --> 00:43:30,440
import from CSV match up your file and

00:43:28,010 --> 00:43:34,790
boom you're done that's it I mean we'll

00:43:30,440 --> 00:43:37,100
do a dime a live demo now that epics

00:43:34,790 --> 00:43:39,740
list that's also in github so I have a

00:43:37,100 --> 00:43:42,650
CSV file up there you can download it

00:43:39,740 --> 00:43:44,510
edit it play with it and use that as an

00:43:42,650 --> 00:43:46,880
epic list to start with customize it

00:43:44,510 --> 00:43:49,220
it's just a csv file there's nothing

00:43:46,880 --> 00:43:51,460
fancy about it

00:43:49,220 --> 00:43:55,100
components is a little trickier

00:43:51,460 --> 00:43:57,140
components unfortunately they in order

00:43:55,100 --> 00:43:59,270
for you to import a ticket which has

00:43:57,140 --> 00:44:00,920
components assigned to it the components

00:43:59,270 --> 00:44:04,910
have to be existing in the project

00:44:00,920 --> 00:44:10,280
already this is the catch so there's one

00:44:04,910 --> 00:44:14,330
API endpoint which is for a component so

00:44:10,280 --> 00:44:20,540
how do I import 50 components I go to

00:44:14,330 --> 00:44:23,330
this website URL 50 times no we use

00:44:20,540 --> 00:44:27,410
postman anybody here heard of postman or

00:44:23,330 --> 00:44:29,960
use it okay so postman is an API tool

00:44:27,410 --> 00:44:33,320
that allows you you can script it really

00:44:29,960 --> 00:44:35,150
easily to make repetitive calls so if

00:44:33,320 --> 00:44:37,800
that API that I gave you at the very

00:44:35,150 --> 00:44:40,170
beginning with the jaql is of interest

00:44:37,800 --> 00:44:42,210
download postman put in the credentials

00:44:40,170 --> 00:44:43,770
for your juror instance and start

00:44:42,210 --> 00:44:46,890
playing with your queries and you'll get

00:44:43,770 --> 00:44:48,720
the JSON result back in that tool and

00:44:46,890 --> 00:44:51,060
it's nicely formatted you don't have to

00:44:48,720 --> 00:44:53,910
go to JSON lint and clean it up so you

00:44:51,060 --> 00:44:55,920
can read it but for our purposes because

00:44:53,910 --> 00:44:59,010
I got to put in fifty actually

00:44:55,920 --> 00:45:00,750
forty-four components I use postman

00:44:59,010 --> 00:45:04,970
because I can attach a script to it and

00:45:00,750 --> 00:45:07,890
use placeholders to take a csv file and

00:45:04,970 --> 00:45:10,080
put the two together and do 44 calls to

00:45:07,890 --> 00:45:12,210
that api endpoint and boom I have a

00:45:10,080 --> 00:45:14,490
components list so it sounds really

00:45:12,210 --> 00:45:19,440
complicated right so how about we do a

00:45:14,490 --> 00:45:24,120
demo because it'll be a lot easier so

00:45:19,440 --> 00:45:27,500
put this somewhere okay be careful of

00:45:24,120 --> 00:45:31,920
this k1e or simply don't lose money

00:45:27,500 --> 00:45:35,600
alright so hopefully where you can see

00:45:31,920 --> 00:45:35,600
my screen this is horrible

00:45:43,349 --> 00:45:48,660
please work I didn't break anything

00:45:45,339 --> 00:45:50,859
right yes okay awesome

00:45:48,660 --> 00:45:53,589
it's always the first goal of the

00:45:50,859 --> 00:45:56,650
session all right so what I've got here

00:45:53,589 --> 00:45:58,839
this is my JIRA backlog right you saw

00:45:56,650 --> 00:46:01,030
this before there's a bunch of tickets

00:45:58,839 --> 00:46:02,920
in here right they're color-coded nice

00:46:01,030 --> 00:46:04,930
happy and if I click over here on the

00:46:02,920 --> 00:46:07,569
Left I have some epics that are already

00:46:04,930 --> 00:46:09,520
existing so if I have a ticket right you

00:46:07,569 --> 00:46:17,500
drag it and you can assign it to an epic

00:46:09,520 --> 00:46:19,869
easy if I go to components I have a list

00:46:17,500 --> 00:46:21,700
of components and this is a version of

00:46:19,869 --> 00:46:24,730
the list that I gave you if I try to

00:46:21,700 --> 00:46:26,470
import tickets into this project with

00:46:24,730 --> 00:46:30,010
components it'll work because they're

00:46:26,470 --> 00:46:33,040
there if I go to a new project I'm going

00:46:30,010 --> 00:46:33,609
to call the Baltimore so I have no

00:46:33,040 --> 00:46:39,280
tickets

00:46:33,609 --> 00:46:40,869
I have no epics and I have no components

00:46:39,280 --> 00:46:42,490
right so the other way to do this is

00:46:40,869 --> 00:46:44,530
just type them in over and over again

00:46:42,490 --> 00:46:46,660
for every project and nobody wants to do

00:46:44,530 --> 00:46:48,430
that so let's put them all in

00:46:46,660 --> 00:46:50,109
automatically all right so let's start

00:46:48,430 --> 00:46:52,030
with the epics all right let's go back

00:46:50,109 --> 00:46:55,930
to the backlog can every see this okay

00:46:52,030 --> 00:46:57,250
just big enough hopefully okay so here

00:46:55,930 --> 00:46:59,970
on their epics you see there's nothing

00:46:57,250 --> 00:47:06,520
there so I'm just going to go to issues

00:46:59,970 --> 00:47:08,079
import from CSV I find my file and I

00:47:06,520 --> 00:47:10,569
went up to github Chris Irvin and I

00:47:08,079 --> 00:47:14,020
downloaded the file so there's my sample

00:47:10,569 --> 00:47:16,059
epics list right now

00:47:14,020 --> 00:47:17,680
I've also actually uploaded an existing

00:47:16,059 --> 00:47:19,240
configuration file because if you really

00:47:17,680 --> 00:47:20,829
want to be lazy and there's not a lot of

00:47:19,240 --> 00:47:22,930
work here you could actually download

00:47:20,829 --> 00:47:24,910
the configuration file and upload that

00:47:22,930 --> 00:47:27,460
too you don't need to you really don't

00:47:24,910 --> 00:47:29,109
just download that one file and it will

00:47:27,460 --> 00:47:30,910
match it you'll tell it where to put it

00:47:29,109 --> 00:47:33,490
I say I want to put it here and be more

00:47:30,910 --> 00:47:35,589
don't worry about the next and now I

00:47:33,490 --> 00:47:38,410
match up the fields and there's only

00:47:35,589 --> 00:47:41,410
five fields in my file the description

00:47:38,410 --> 00:47:44,200
so I match that to my description the

00:47:41,410 --> 00:47:45,190
epic name I match that to my epic name

00:47:44,200 --> 00:47:48,670
you see where this is going

00:47:45,190 --> 00:47:49,030
as you type because I thought about all

00:47:48,670 --> 00:47:50,859
this

00:47:49,030 --> 00:47:53,680
in ahead of time and name the columns

00:47:50,859 --> 00:47:57,819
correctly priority

00:47:53,680 --> 00:47:59,410
and summary and it'll say okay let me do

00:47:57,819 --> 00:48:01,650
a quick check I could validate it and

00:47:59,410 --> 00:48:05,680
they'll say mmm-hmm yeah this will work

00:48:01,650 --> 00:48:07,690
19x will be created all right begin you

00:48:05,680 --> 00:48:10,270
get the fancy progress bar that

00:48:07,690 --> 00:48:12,819
everybody knows and loves boom and now

00:48:10,270 --> 00:48:17,730
if i go back to my baltimore project and

00:48:12,819 --> 00:48:21,730
i see behold are all my epics okay easy

00:48:17,730 --> 00:48:26,020
components this is a little harder now

00:48:21,730 --> 00:48:29,109
postman looks like this and hopefully

00:48:26,020 --> 00:48:36,490
you can see this it's really kind of dim

00:48:29,109 --> 00:48:38,920
I kept it a little bit bigger okay how

00:48:36,490 --> 00:48:43,510
would I do this okay

00:48:38,920 --> 00:48:46,480
now the way this works in postman what

00:48:43,510 --> 00:48:48,069
you've got is basically a couple of

00:48:46,480 --> 00:48:50,770
ingredients you've got a destination

00:48:48,069 --> 00:48:52,780
address which is that API endpoint that

00:48:50,770 --> 00:48:54,670
I told you about I'm using in this case

00:48:52,780 --> 00:48:57,609
I'm if you can see this here localhost

00:48:54,670 --> 00:48:59,589
8080 n8 because it's my it's my JIRA on

00:48:57,609 --> 00:49:02,190
my laptop when you don't have Wi-Fi that

00:48:59,589 --> 00:49:05,140
kind of sucks so I'm doing this locally

00:49:02,190 --> 00:49:07,180
but it would be your Atlassian net it's

00:49:05,140 --> 00:49:10,240
your local server whatever that URL is

00:49:07,180 --> 00:49:12,730
that's what you fill in the rest see

00:49:10,240 --> 00:49:15,660
what I did there is the same for every

00:49:12,730 --> 00:49:18,910
JIRA instance so rest api to slash

00:49:15,660 --> 00:49:21,010
component in this case alright this is

00:49:18,910 --> 00:49:22,809
the complex one so let me take a step

00:49:21,010 --> 00:49:26,700
back to the beginning where we were

00:49:22,809 --> 00:49:30,040
talking about a real simple query like

00:49:26,700 --> 00:49:32,710
show me all my projects this is one of

00:49:30,040 --> 00:49:38,049
those endpoints in that rest api list

00:49:32,710 --> 00:49:41,170
all you have to do is add and i wrote

00:49:38,049 --> 00:49:42,940
this all out and github readme you need

00:49:41,170 --> 00:49:45,040
to add your authorization which I've

00:49:42,940 --> 00:49:47,440
already done here but you basically go

00:49:45,040 --> 00:49:50,650
in and do basic auth and then type in

00:49:47,440 --> 00:49:53,170
your your instance username and password

00:49:50,650 --> 00:49:56,559
once you have this here and use hit

00:49:53,170 --> 00:49:59,319
update or save it will add it as an

00:49:56,559 --> 00:50:02,849
authorization string with a base64

00:49:59,319 --> 00:50:04,930
encoded thing that is that you know

00:50:02,849 --> 00:50:06,390
gobbledygook that we saw in that earlier

00:50:04,930 --> 00:50:07,980
code snippet

00:50:06,390 --> 00:50:11,220
that's the translation of my username

00:50:07,980 --> 00:50:12,720
and password hashed is base64 all I need

00:50:11,220 --> 00:50:15,180
to add is that it's sending Jeff

00:50:12,720 --> 00:50:18,810
application JSON so that the endpoint

00:50:15,180 --> 00:50:22,800
knows I'm sending them JSON and I query

00:50:18,810 --> 00:50:26,730
the project and if I hit Send I get of

00:50:22,800 --> 00:50:30,960
course I can one of that's because I

00:50:26,730 --> 00:50:35,520
zoomed I should get back a JSON script

00:50:30,960 --> 00:50:38,490
that's a weird one I love live demos you

00:50:35,520 --> 00:50:40,200
get a list of you get a list of the

00:50:38,490 --> 00:50:42,540
projects that are in your local juror in

00:50:40,200 --> 00:50:44,670
stance and it's in that same JSON format

00:50:42,540 --> 00:50:47,400
with name of the name of the project

00:50:44,670 --> 00:50:49,530
number of the issues who created it when

00:50:47,400 --> 00:50:52,980
was it created all those all those data

00:50:49,530 --> 00:50:55,380
points alright so you can go on from

00:50:52,980 --> 00:50:57,300
there and add other things now that I

00:50:55,380 --> 00:50:59,700
know my project I can go back and get

00:50:57,300 --> 00:51:02,430
the list of components I could go back

00:50:59,700 --> 00:51:03,930
and add a specific component and so this

00:51:02,430 --> 00:51:07,500
one is the one I'm talking about right

00:51:03,930 --> 00:51:12,150
here this create a single component this

00:51:07,500 --> 00:51:13,560
is saved from postman as a collection

00:51:12,150 --> 00:51:15,360
that's what these things on the

00:51:13,560 --> 00:51:17,910
left-hand side are called and that

00:51:15,360 --> 00:51:20,490
setting file is what's in the github so

00:51:17,910 --> 00:51:23,430
if you download the create or add a

00:51:20,490 --> 00:51:25,380
component collection for postman open up

00:51:23,430 --> 00:51:27,630
your postman instance and import it

00:51:25,380 --> 00:51:30,000
you'll see the exact same thing here all

00:51:27,630 --> 00:51:33,570
you need to do in do is again enter your

00:51:30,000 --> 00:51:37,680
authorization save it and then you need

00:51:33,570 --> 00:51:39,780
to customize one thing and that is

00:51:37,680 --> 00:51:43,680
what's the project that I'm adding these

00:51:39,780 --> 00:51:49,080
components to be more right so now I

00:51:43,680 --> 00:51:52,080
have that this tells the postman

00:51:49,080 --> 00:51:54,930
instance to take the component name and

00:51:52,080 --> 00:51:58,200
the components description from another

00:51:54,930 --> 00:51:59,880
CSV file and every time I go through

00:51:58,200 --> 00:52:02,460
that list it's going to post that

00:51:59,880 --> 00:52:04,050
component and that description and it's

00:52:02,460 --> 00:52:06,450
going to do one two three four five all

00:52:04,050 --> 00:52:10,190
the way through the entire list right

00:52:06,450 --> 00:52:14,090
okay so now we have this I go to Runner

00:52:10,190 --> 00:52:14,090
totally this is going to be hard core

00:52:14,410 --> 00:52:21,430
and now I select that collection that I

00:52:17,290 --> 00:52:23,230
had at components I'm going to tell it

00:52:21,430 --> 00:52:27,000
because I happen to know there's 44

00:52:23,230 --> 00:52:31,030
files a 44 rows and I go to my

00:52:27,000 --> 00:52:34,780
components descriptions JSON source file

00:52:31,030 --> 00:52:39,610
so in this source file and so you'll see

00:52:34,780 --> 00:52:42,300
what that looks like of course I don't

00:52:39,610 --> 00:52:42,300
have it open yeah

00:52:48,460 --> 00:52:51,790
no I didn't record it I didn't record

00:52:50,440 --> 00:52:53,650
the demos themselves but there are

00:52:51,790 --> 00:52:56,050
screenshots and those are in the github

00:52:53,650 --> 00:53:00,100
readme so you can see screen by screen

00:52:56,050 --> 00:53:01,540
what I'm showing it so that JSON file

00:53:00,100 --> 00:53:04,270
that I'm uploading this is what it looks

00:53:01,540 --> 00:53:06,160
like it's literally just a name and a

00:53:04,270 --> 00:53:07,540
description and I'm going a little hog

00:53:06,160 --> 00:53:09,490
wild with the description you probably

00:53:07,540 --> 00:53:11,560
don't need it but you do need that

00:53:09,490 --> 00:53:13,830
original name so that list that I showed

00:53:11,560 --> 00:53:16,300
you at the beginning with all those

00:53:13,830 --> 00:53:18,490
components that's all in this one JSON

00:53:16,300 --> 00:53:21,610
file so what I'm basically doing is

00:53:18,490 --> 00:53:23,080
telling postman go through this list

00:53:21,610 --> 00:53:25,570
take the next one

00:53:23,080 --> 00:53:27,580
post it to my local giri instance which

00:53:25,570 --> 00:53:29,290
creates a component go back to the list

00:53:27,580 --> 00:53:35,220
take the next one post another component

00:53:29,290 --> 00:53:37,600
44 times right so I pick that one and

00:53:35,220 --> 00:53:39,910
you can test to make sure it works by

00:53:37,600 --> 00:53:41,800
hitting preview and yes you get the

00:53:39,910 --> 00:53:43,510
things I just showed you right it's

00:53:41,800 --> 00:53:52,930
reading the component it's reading the

00:53:43,510 --> 00:53:54,880
description and I just fire ROI and yes

00:53:52,930 --> 00:53:59,370
you will get a 400 bad request which you

00:53:54,880 --> 00:53:59,370
can ignore but if I go back to my

00:53:59,520 --> 00:54:08,400
project which was where I lost my there

00:54:06,220 --> 00:54:08,400
we go

00:54:10,800 --> 00:54:17,340
oops what happened did I do I miss

00:54:16,050 --> 00:54:22,890
something what do I know you know what I

00:54:17,340 --> 00:54:28,530
didn't save the area it would help if I

00:54:22,890 --> 00:54:31,800
save this there we go okay area 201

00:54:28,530 --> 00:54:33,390
that's what I should get see this is the

00:54:31,800 --> 00:54:39,300
awesome live demo and we get to do

00:54:33,390 --> 00:54:41,040
debugging and now if i refresh there are

00:54:39,300 --> 00:54:43,590
all my components loaded and ready to go

00:54:41,040 --> 00:54:46,170
and so on and so on so you just saved

00:54:43,590 --> 00:54:48,990
yourself low typing now it took us what

00:54:46,170 --> 00:54:51,780
five minutes to do this for one project

00:54:48,990 --> 00:54:54,270
rather than type in 44 components for

00:54:51,780 --> 00:54:57,480
every single project you can add this to

00:54:54,270 --> 00:54:58,920
let's say your project setup ritual when

00:54:57,480 --> 00:55:01,220
you're opening a new project for

00:54:58,920 --> 00:55:04,260
customer opening a new project for

00:55:01,220 --> 00:55:07,110
another job part of your setup process

00:55:04,260 --> 00:55:09,750
is creating a new instance a new project

00:55:07,110 --> 00:55:11,700
in JIRA adding these components and

00:55:09,750 --> 00:55:13,440
adding all of those epics that we just

00:55:11,700 --> 00:55:15,900
listed and now everybody has that same

00:55:13,440 --> 00:55:18,510
starting point so now when I go back to

00:55:15,900 --> 00:55:21,270
my backlog and you're doing grooming you

00:55:18,510 --> 00:55:22,680
create a new ticket whatever I'm putting

00:55:21,270 --> 00:55:24,030
in there I can start automatically

00:55:22,680 --> 00:55:25,800
typing in you know news and

00:55:24,030 --> 00:55:28,770
automatically my content type my

00:55:25,800 --> 00:55:33,810
component shows up and the epics that I

00:55:28,770 --> 00:55:35,730
wanted to list to let's say that they're

00:55:33,810 --> 00:55:37,200
you know news releases that's the epic

00:55:35,730 --> 00:55:41,480
in this case they're both named the same

00:55:37,200 --> 00:55:44,430
but you've got you get the idea okay

00:55:41,480 --> 00:55:48,090
all right so that's the live demo let's

00:55:44,430 --> 00:55:49,619
go back to the PowerPoint real quick any

00:55:48,090 --> 00:55:52,350
questions on that that's a lot to absorb

00:55:49,619 --> 00:55:55,890
right I'm going to go back and watch the

00:55:52,350 --> 00:55:57,930
recording again all right so all those

00:55:55,890 --> 00:56:00,450
pieces that I just talked about they're

00:55:57,930 --> 00:56:04,170
all here under agile Drupal in github

00:56:00,450 --> 00:56:05,520
the epics list the JIRA import config

00:56:04,170 --> 00:56:07,830
file if you meet it you want to go crazy

00:56:05,520 --> 00:56:09,840
you don't actually need it the

00:56:07,830 --> 00:56:12,180
components list itself which is that

00:56:09,840 --> 00:56:13,890
JSON that I showed you and the postman

00:56:12,180 --> 00:56:16,230
setup files so all you have to do is

00:56:13,890 --> 00:56:18,690
just import them into postman update to

00:56:16,230 --> 00:56:22,200
your local URL your local authorization

00:56:18,690 --> 00:56:24,530
and you're ready to go all right so what

00:56:22,200 --> 00:56:27,860
do we learn document everything

00:56:24,530 --> 00:56:30,110
through all of these things here there's

00:56:27,860 --> 00:56:30,920
a lot to go that we went through you

00:56:30,110 --> 00:56:33,710
know like I said if you have any

00:56:30,920 --> 00:56:35,090
questions let's talk let's ask and you

00:56:33,710 --> 00:56:38,330
can catch me at the aqua booth

00:56:35,090 --> 00:56:40,550
downstairs we skipped over a couple of

00:56:38,330 --> 00:56:42,260
things we'll talk with them later here's

00:56:40,550 --> 00:56:43,640
my contact info please reach out to me

00:56:42,260 --> 00:56:46,700
if you have any questions I'm happy to

00:56:43,640 --> 00:56:47,120
talk about this in more detail all right

00:56:46,700 --> 00:56:56,150
thanks guys

00:56:47,120 --> 00:56:58,930
oh one more thing I'm supposed to show

00:56:56,150 --> 00:57:00,920
you the contribution Sprint's on Friday

00:56:58,930 --> 00:57:02,780
if anybody's interested in the

00:57:00,920 --> 00:57:05,180
conference organizing distribution Cod

00:57:02,780 --> 00:57:08,210
we're working on that for d8 there's a

00:57:05,180 --> 00:57:13,930
Boff for that next and we're going to be

00:57:08,210 --> 00:57:13,930

YouTube URL: https://www.youtube.com/watch?v=qrOi3dbL9AY


