Title: DrupalCon Baltimore 2017: Compose your Drupal Website
Publication date: 2017-04-26
Playlist: DrupalCon Baltimore 2017
Description: 
	Composer is a dependency manager for PHP written along the lines of npm (for Node.js) or Bundler (for Ruby). While this might not sound useful to you as a site builder, it will be. Composer is already a defacto standard to use when building PHP applications and now Drupal websites.

Composer was introduced in Drupal world with Drupal 8 and with Drupal 8.1, the core development moved to the accepted composer workflow. At the time, Drupal Packagist was a purely community run service but it is now fully supported by Drupal Association on official Drupal.org infrastructure making Composer the best way to manage your website build now.

In this session, you will learn how Composer workflow helps you in building and maintaining websites with relative use. It might sound intimidating and lot of work at first, not to mention you need to use the terminal, but didn’t you fall in love with drush once you used it? You will learn how to use composer with existing templates and some helpful commands and tools to get you started quickly.

Specifically, you will learn:

What composer is and how to use it to build a Drupal 8 website
The role of Packagist in composer and also the Drupal packagist supported by Drupal Association
Drupal Packagist templates to quickly start with a Drupal 8 website project
Best practices in structuring a Drupal 8 website, modules, themes, libraries, profiles, all contributed or custom
Best practices in version controlling the website
Best practices in using composer in continuous integration environment
Patching Drupal core, modules, themes, and profiles
Including composer.json from custom modules, if any
How to understand common composer errors and fix them
Common tools to work with composer
Captions: 
	00:00:00,000 --> 00:00:06,299
three composer can figure out where all

00:00:02,909 --> 00:00:07,770
the modules are so if you run the wheel

00:00:06,299 --> 00:00:10,170
and composer require drupal slash

00:00:07,770 --> 00:00:12,269
pathauto earlier the reason it could

00:00:10,170 --> 00:00:14,280
find rupal slash pathauto was because of

00:00:12,269 --> 00:00:16,890
this repository if you don't if you

00:00:14,280 --> 00:00:19,020
don't include that it won't be able to

00:00:16,890 --> 00:00:20,820
find it because it's probably not on the

00:00:19,020 --> 00:00:22,949
main packages repository it is just tell

00:00:20,820 --> 00:00:26,010
you that it can't find a package called

00:00:22,949 --> 00:00:28,019
Drupal slash path photo there are a few

00:00:26,010 --> 00:00:30,119
more packages they're not relevant right

00:00:28,019 --> 00:00:32,820
now and there is a required section and

00:00:30,119 --> 00:00:34,800
this is actually a requirements and we

00:00:32,820 --> 00:00:38,160
are saying there are there are a bunch

00:00:34,800 --> 00:00:41,879
of requirements that that are necessary

00:00:38,160 --> 00:00:43,350
to make the composer setup work but you

00:00:41,879 --> 00:00:44,579
can look at the last few lines and

00:00:43,350 --> 00:00:47,610
that's why we actually mention our

00:00:44,579 --> 00:00:49,980
modules like config installer that's a

00:00:47,610 --> 00:00:52,469
profile by the way migrate plus

00:00:49,980 --> 00:00:54,719
magnitudes migrate upgrade I took the

00:00:52,469 --> 00:00:56,340
beginning of the composer file actually

00:00:54,719 --> 00:01:00,379
later on you can see things like

00:00:56,340 --> 00:01:03,420
bootstrap and rules and panels and so on

00:01:00,379 --> 00:01:05,400
but but this is how it looks there is

00:01:03,420 --> 00:01:08,010
that is very little apart from this in

00:01:05,400 --> 00:01:11,100
the composer file most of the composer

00:01:08,010 --> 00:01:14,729
file is just to get the Drupal set up

00:01:11,100 --> 00:01:17,000
working and all of this is including the

00:01:14,729 --> 00:01:21,080
templates so you don't have to worry

00:01:17,000 --> 00:01:24,270
before we move on any questions so far

00:01:21,080 --> 00:01:29,280
yes please I think you should give mine

00:01:24,270 --> 00:01:31,200
I have an existing TA installation how

00:01:29,280 --> 00:01:33,900
do I get this to work on my existing I

00:01:31,200 --> 00:01:37,979
don't have a web directory and some of

00:01:33,900 --> 00:01:41,610
my my directories are being tracked okay

00:01:37,979 --> 00:01:43,680
you have to contribute more mine Israel

00:01:41,610 --> 00:01:47,250
being tracked how do I set up my

00:01:43,680 --> 00:01:51,619
installation to this ok is your existing

00:01:47,250 --> 00:01:51,619
website already using composer

00:01:53,340 --> 00:02:03,220
okay okay it's not so there is this

00:02:00,280 --> 00:02:05,440
little point in this exercise I think if

00:02:03,220 --> 00:02:07,390
you are going to use certain modules

00:02:05,440 --> 00:02:10,929
then you must invest time to just

00:02:07,390 --> 00:02:13,030
translate it over like this it's most of

00:02:10,929 --> 00:02:15,100
the things won't change because the code

00:02:13,030 --> 00:02:17,020
is still the same it's just the way

00:02:15,100 --> 00:02:18,730
you're getting your food that's the only

00:02:17,020 --> 00:02:20,440
difference over here so you can

00:02:18,730 --> 00:02:23,860
transparently start placing your

00:02:20,440 --> 00:02:25,540
composure JSON files you probably can't

00:02:23,860 --> 00:02:27,430
use the shortcuts we discussed earlier

00:02:25,540 --> 00:02:29,890
like not like composer create project

00:02:27,430 --> 00:02:31,720
and all that or you can do that and then

00:02:29,890 --> 00:02:35,080
copy just the composer files in your

00:02:31,720 --> 00:02:36,790
projects directory and if you have a web

00:02:35,080 --> 00:02:39,130
directory on your in your project

00:02:36,790 --> 00:02:40,870
you're good to go you know otherwise you

00:02:39,130 --> 00:02:42,580
need to make further customizations to

00:02:40,870 --> 00:02:45,220
your project there is no easy way to

00:02:42,580 --> 00:02:48,340
transition from a custom set up what you

00:02:45,220 --> 00:02:56,880
have to this it is possible it might

00:02:48,340 --> 00:02:59,880
need some effort any other questions

00:02:56,880 --> 00:02:59,880
keys

00:03:02,530 --> 00:03:08,560
with this process working with composer

00:03:05,049 --> 00:03:10,780
a is it possible also to do the updates

00:03:08,560 --> 00:03:12,790
for core and also of the years or models

00:03:10,780 --> 00:03:14,620
yeah actually that's the very next topic

00:03:12,790 --> 00:03:16,930
I'm going to talk about when when I talk

00:03:14,620 --> 00:03:23,439
about version constraints we'll see how

00:03:16,930 --> 00:03:31,209
you updates become possible okay I think

00:03:23,439 --> 00:03:34,239
that's more yeah okay please also when

00:03:31,209 --> 00:03:37,180
you have the opportunity because this is

00:03:34,239 --> 00:03:39,310
kind of a tricky sort of format linting

00:03:37,180 --> 00:03:41,560
tools would probably be a great thing to

00:03:39,310 --> 00:03:44,530
do just to make sure that you're not

00:03:41,560 --> 00:03:46,569
breaking your composer that Jason or

00:03:44,530 --> 00:03:49,689
some of the files like that especially

00:03:46,569 --> 00:03:52,659
since you can't really comment them but

00:03:49,689 --> 00:03:54,519
there is a handy command called composer

00:03:52,659 --> 00:03:57,549
validate you just run that command and

00:03:54,519 --> 00:04:00,370
it will link the file for you so

00:03:57,549 --> 00:04:02,019
whenever you make a change you always

00:04:00,370 --> 00:04:04,440
run into a composer validate which will

00:04:02,019 --> 00:04:06,400
check if the format is correct and

00:04:04,440 --> 00:04:07,900
anyway you know if you're testing it

00:04:06,400 --> 00:04:10,780
tends to composite or Jason is probably

00:04:07,900 --> 00:04:12,849
going to running composer update or

00:04:10,780 --> 00:04:20,409
install anyway which will tell you if

00:04:12,849 --> 00:04:22,720
something is broken yeah so how do you

00:04:20,409 --> 00:04:24,940
maintain the custom modules and the

00:04:22,720 --> 00:04:27,070
dependencies for a custom modules yeah

00:04:24,940 --> 00:04:30,940
that's an interesting thing I would

00:04:27,070 --> 00:04:33,570
suggest in simpler cases you would just

00:04:30,940 --> 00:04:35,740
put the custom modules in the repository

00:04:33,570 --> 00:04:37,870
now there is another thing about the

00:04:35,740 --> 00:04:40,570
autoloader over here which is more of a

00:04:37,870 --> 00:04:42,820
development related topic we actually

00:04:40,570 --> 00:04:45,250
see an example later on where how do you

00:04:42,820 --> 00:04:47,289
include the dependencies of your custom

00:04:45,250 --> 00:04:49,780
module as well we'll see an example

00:04:47,289 --> 00:04:51,909
later on this is more of a developer

00:04:49,780 --> 00:04:55,449
topic but yeah that's an interesting

00:04:51,909 --> 00:04:58,150
question as far as the custom modules

00:04:55,449 --> 00:04:59,800
themselves are concerned I would say for

00:04:58,150 --> 00:05:01,840
simpler sites just put them in the same

00:04:59,800 --> 00:05:03,400
repository that's still your code right

00:05:01,840 --> 00:05:05,710
that's still the application you're

00:05:03,400 --> 00:05:09,190
writing so of course go and put it in

00:05:05,710 --> 00:05:11,260
the repository if if you want to make it

00:05:09,190 --> 00:05:14,020
more reusable across different websites

00:05:11,260 --> 00:05:15,910
you can actually put it on a private

00:05:14,020 --> 00:05:18,580
just there are a lot of options over

00:05:15,910 --> 00:05:21,460
there all those are actually kind of

00:05:18,580 --> 00:05:23,170
advanced composer things I'm happy to

00:05:21,460 --> 00:05:26,980
discuss that but it's not really in the

00:05:23,170 --> 00:05:31,030
flow of tough presentation okay

00:05:26,980 --> 00:05:32,410
so moving on let's talk about semantic

00:05:31,030 --> 00:05:34,390
versioning and versioning constraints

00:05:32,410 --> 00:05:37,960
like you brought up the point of how do

00:05:34,390 --> 00:05:40,240
we take care of updates so semantic

00:05:37,960 --> 00:05:42,310
versioning was is actually being brought

00:05:40,240 --> 00:05:46,320
up by in almost every key node since

00:05:42,310 --> 00:05:50,260
Drupal 8 is being worked upon and it

00:05:46,320 --> 00:05:51,940
basically defines a convention of how

00:05:50,260 --> 00:05:56,260
the version numbers are supposed to look

00:05:51,940 --> 00:05:58,510
like so you might you might be familiar

00:05:56,260 --> 00:06:02,710
with Drupal 7 version numbers you know

00:05:58,510 --> 00:06:05,320
we had from 7.1 and the 7.5 for now you

00:06:02,710 --> 00:06:08,050
know and all we are doing in most cases

00:06:05,320 --> 00:06:10,180
is just adding bug fixes we're just

00:06:08,050 --> 00:06:11,830
fixing bugs we're not adding features or

00:06:10,180 --> 00:06:14,500
at least not major features we added

00:06:11,830 --> 00:06:17,940
some features in 7.50 but that was like

00:06:14,500 --> 00:06:20,080
very small but we wanted to change that

00:06:17,940 --> 00:06:22,810
the whole thing with our drupal 8

00:06:20,080 --> 00:06:25,510
release cycle right and you might be

00:06:22,810 --> 00:06:28,390
aware that with every 6 months we are

00:06:25,510 --> 00:06:29,800
releasing a new minor minor release so

00:06:28,390 --> 00:06:31,720
we had eight point one eight point two

00:06:29,800 --> 00:06:34,230
we just had eight point three and in six

00:06:31,720 --> 00:06:37,240
months we'll have eight point four and

00:06:34,230 --> 00:06:38,740
we are adding features over them and in

00:06:37,240 --> 00:06:40,870
each of these cycles we are having

00:06:38,740 --> 00:06:44,050
various patch releases so we had eight

00:06:40,870 --> 00:06:47,260
point two point eight recently and eight

00:06:44,050 --> 00:06:48,970
point three point one and those are bug

00:06:47,260 --> 00:06:52,420
fixes you can't add features in there

00:06:48,970 --> 00:06:54,820
and when we come to drupal line like we

00:06:52,420 --> 00:06:56,550
saw today morning you know the Drupal 8

00:06:54,820 --> 00:06:59,500
modules won't readily work with that

00:06:56,550 --> 00:07:01,150
that's a breaking change a module

00:06:59,500 --> 00:07:04,210
written for Drupal eight point two will

00:07:01,150 --> 00:07:06,160
work with with eight point three but not

00:07:04,210 --> 00:07:07,630
with nine point zero not necessarily

00:07:06,160 --> 00:07:09,550
with nine point zero it might work you

00:07:07,630 --> 00:07:12,640
know like the SOI if it's staying

00:07:09,550 --> 00:07:15,010
up-to-date with API changes and that in

00:07:12,640 --> 00:07:17,680
essence is semantic versioning it just

00:07:15,010 --> 00:07:19,660
defines in a more technical way that

00:07:17,680 --> 00:07:21,510
this is how you should name your number

00:07:19,660 --> 00:07:24,550
your versions if you're adding a feature

00:07:21,510 --> 00:07:27,060
make it the next - release eight point

00:07:24,550 --> 00:07:30,060
four if you are breaking something

00:07:27,060 --> 00:07:32,220
in backward compatibility make it a new

00:07:30,060 --> 00:07:36,870
major release rupal 9 that's all it says

00:07:32,220 --> 00:07:40,050
so how does this help us when we talking

00:07:36,870 --> 00:07:44,910
about updates right you might want to

00:07:40,050 --> 00:07:46,950
just stay on let's say 8.2 line you are

00:07:44,910 --> 00:07:48,420
of course you want the patch updates you

00:07:46,950 --> 00:07:51,450
know there was a security release a

00:07:48,420 --> 00:07:53,100
couple of weeks or just last week and

00:07:51,450 --> 00:07:57,210
you want to make sure that you update to

00:07:53,100 --> 00:07:58,860
that release with minimal effort or you

00:07:57,210 --> 00:08:00,810
might even one that you're happy with

00:07:58,860 --> 00:08:02,760
updating to the next minor release you

00:08:00,810 --> 00:08:06,930
know when 8.3 came out you are happy to

00:08:02,760 --> 00:08:09,230
go to 8.3 with - make we specify the

00:08:06,930 --> 00:08:12,410
exact version we wanted earlier and

00:08:09,230 --> 00:08:15,500
composer we can use something like this

00:08:12,410 --> 00:08:18,590
these kind of version constraints which

00:08:15,500 --> 00:08:20,700
which which make it easier for you to

00:08:18,590 --> 00:08:23,040
specify that these are the versions to

00:08:20,700 --> 00:08:24,780
be used so you see in the first line

00:08:23,040 --> 00:08:26,940
over your Drupal flash code eight point

00:08:24,780 --> 00:08:30,090
three point star it just says that I am

00:08:26,940 --> 00:08:35,610
happy with any 8.3 release starting from

00:08:30,090 --> 00:08:37,380
viedo 3.08 dot 3.1 and so on or you can

00:08:35,610 --> 00:08:37,830
use a special syntax like you see in the

00:08:37,380 --> 00:08:40,140
next one

00:08:37,830 --> 00:08:44,190
Drupal flash color box and that's a

00:08:40,140 --> 00:08:50,970
tilde tilde 1.0 that basically says I am

00:08:44,190 --> 00:08:53,370
happy with 1.0 1.1 1.2 but not 2.0 until

00:08:50,970 --> 00:08:55,740
2.0 comes I am happy with all one dot X

00:08:53,370 --> 00:09:02,070
release is just a fancy way of writing

00:08:55,740 --> 00:09:04,290
that and this okay let's just talk about

00:09:02,070 --> 00:09:07,500
few more different kind of version

00:09:04,290 --> 00:09:09,420
numbers you also can write suppose you

00:09:07,500 --> 00:09:11,400
want if they have released for some some

00:09:09,420 --> 00:09:16,830
reason so you can use a syntax like that

00:09:11,400 --> 00:09:19,050
one dot X - dev or you know you want to

00:09:16,830 --> 00:09:21,510
specify like a dot 2.8 came out recently

00:09:19,050 --> 00:09:24,960
right you want to say I want at least

00:09:21,510 --> 00:09:26,550
eight dot 2.8 but anything in 803 and

00:09:24,960 --> 00:09:27,600
onwards is also fine so you would use a

00:09:26,550 --> 00:09:29,430
syntax like that

00:09:27,600 --> 00:09:31,470
these are little exotic you know you

00:09:29,430 --> 00:09:33,570
probably never use them the most common

00:09:31,470 --> 00:09:36,480
is the one we saw like the star one on

00:09:33,570 --> 00:09:39,000
Endor tilde one that that's the one you

00:09:36,480 --> 00:09:40,620
will see most but it can actually get

00:09:39,000 --> 00:09:42,660
even more control

00:09:40,620 --> 00:09:45,240
you can exactly specify these are the

00:09:42,660 --> 00:09:47,040
versions you want or in this range like

00:09:45,240 --> 00:09:49,910
you can see greater than equal to 1.0

00:09:47,040 --> 00:09:53,280
but less than 1.5 or something like that

00:09:49,910 --> 00:09:58,050
by the way this the second example is

00:09:53,280 --> 00:10:00,060
identical to the previous slide now how

00:09:58,050 --> 00:10:01,830
do you use this so when you have this

00:10:00,060 --> 00:10:04,380
composite or GSM file and when you run

00:10:01,830 --> 00:10:06,090
composing install it actually matches

00:10:04,380 --> 00:10:08,100
this version constraints with all the

00:10:06,090 --> 00:10:10,830
possible versions and installs the

00:10:08,100 --> 00:10:15,150
latest version it can depending on the

00:10:10,830 --> 00:10:17,790
constraints so in case of if we're using

00:10:15,150 --> 00:10:20,970
Drupal slash go with this constraint it

00:10:17,790 --> 00:10:24,330
will install it your 3.1 in this case if

00:10:20,970 --> 00:10:26,430
suppose for some reason you want to stay

00:10:24,330 --> 00:10:28,440
with path out of 1.4 you do not want to

00:10:26,430 --> 00:10:30,560
go to 1.5 you would use a constraint

00:10:28,440 --> 00:10:33,030
like that for whatever reason you know

00:10:30,560 --> 00:10:36,810
until you are ready to move on you use

00:10:33,030 --> 00:10:38,340
this constraint and you run composer

00:10:36,810 --> 00:10:41,070
install it always picks up the latest

00:10:38,340 --> 00:10:44,040
file there is also something called

00:10:41,070 --> 00:10:47,730
composer lock which is a caveat to my

00:10:44,040 --> 00:10:49,380
previous previous point that when you

00:10:47,730 --> 00:10:52,410
run composer install for the first time

00:10:49,380 --> 00:10:54,960
it generates a log file and log file

00:10:52,410 --> 00:10:56,100
you'd probably never added this that's

00:10:54,960 --> 00:10:57,840
the reason I don't have a screenshot

00:10:56,100 --> 00:11:00,930
over here there is no reason you need to

00:10:57,840 --> 00:11:03,960
look at it composer handles it entirely

00:11:00,930 --> 00:11:05,640
by itself this log file contains the

00:11:03,960 --> 00:11:08,340
exact version of the dependencies you

00:11:05,640 --> 00:11:09,960
have installed so at the time of

00:11:08,340 --> 00:11:12,330
development if you have installed let us

00:11:09,960 --> 00:11:14,550
say 8.2 dot eight your version

00:11:12,330 --> 00:11:16,800
constraints allow anything to be

00:11:14,550 --> 00:11:19,470
installed you 18.3 8.4 and so on and

00:11:16,800 --> 00:11:21,690
they are released but if your log file

00:11:19,470 --> 00:11:24,120
specifies 8.2 dot 8 it is always

00:11:21,690 --> 00:11:27,120
installed 8.2 rotator and this is the

00:11:24,120 --> 00:11:29,310
this is because you want your

00:11:27,120 --> 00:11:31,160
application to you have tested your

00:11:29,310 --> 00:11:33,990
application with a particular version

00:11:31,160 --> 00:11:35,940
right and of course you know everything

00:11:33,990 --> 00:11:37,380
is supposed to work in an ideal world

00:11:35,940 --> 00:11:42,300
right but we're not living in an ideal

00:11:37,380 --> 00:11:43,530
world we we are confident with what we

00:11:42,300 --> 00:11:45,690
have tested and we want to stick with

00:11:43,530 --> 00:11:48,060
that until we are ready to run with

00:11:45,690 --> 00:11:50,390
updates and that is why we have a

00:11:48,060 --> 00:11:53,160
command when we run composer update I

00:11:50,390 --> 00:11:53,490
click note the log file it will look at

00:11:53,160 --> 00:11:57,329
the

00:11:53,490 --> 00:12:00,240
all over again and update whatever

00:11:57,329 --> 00:12:02,819
versions it can so in the log file you

00:12:00,240 --> 00:12:06,869
may be using a dot 2.8 but if there is a

00:12:02,819 --> 00:12:08,970
dot 3.0 will update to that does that

00:12:06,869 --> 00:12:10,559
answer your question with this you would

00:12:08,970 --> 00:12:13,889
run composer update whenever you are

00:12:10,559 --> 00:12:15,149
ready for updates a thumb rule over here

00:12:13,889 --> 00:12:17,100
is that if you are building an

00:12:15,149 --> 00:12:20,369
application as in you're building a

00:12:17,100 --> 00:12:22,470
website you always commit the compositor

00:12:20,369 --> 00:12:24,779
clock file as well because the next

00:12:22,470 --> 00:12:27,209
developer that Fixer the developer would

00:12:24,779 --> 00:12:30,480
run composer install and get the

00:12:27,209 --> 00:12:32,699
identical environment running okay if

00:12:30,480 --> 00:12:34,679
you don't come commit the log file it

00:12:32,699 --> 00:12:36,350
will always it's open-ended you know

00:12:34,679 --> 00:12:39,119
your versions and strains can allow and

00:12:36,350 --> 00:12:41,160
should allow a range of possible

00:12:39,119 --> 00:12:43,439
versions you know as per the rules of

00:12:41,160 --> 00:12:46,199
semantic versioning and all that and

00:12:43,439 --> 00:12:48,779
also composer install is faster composer

00:12:46,199 --> 00:12:49,619
update if you are if you use composer by

00:12:48,779 --> 00:12:52,110
now you know you would have noticed

00:12:49,619 --> 00:12:54,689
composer the first composer install or

00:12:52,110 --> 00:12:56,879
composed of data are quite slow that's

00:12:54,689 --> 00:12:57,959
because it actually checks the range of

00:12:56,879 --> 00:13:01,949
versions that are possible and

00:12:57,959 --> 00:13:06,929
everything but composer install it is

00:13:01,949 --> 00:13:10,769
fast so this is the simple usage of

00:13:06,929 --> 00:13:13,769
composer so far now no more specific

00:13:10,769 --> 00:13:15,360
usages in terms of patches you know

00:13:13,769 --> 00:13:17,850
somebody asked the question related to

00:13:15,360 --> 00:13:20,850
patches how do we use no sorry that was

00:13:17,850 --> 00:13:22,589
different so how do we patch in brush

00:13:20,850 --> 00:13:24,990
makes it is way in you know how we

00:13:22,589 --> 00:13:26,850
specify patches for a certain module we

00:13:24,990 --> 00:13:30,269
can do that in composer adjacent as well

00:13:26,850 --> 00:13:33,119
and this is roughly how it looks there

00:13:30,269 --> 00:13:35,309
is a section in composer at Jason and

00:13:33,119 --> 00:13:38,160
you just sort of follow the format there

00:13:35,309 --> 00:13:40,139
are examples for this and I'll share the

00:13:38,160 --> 00:13:41,939
slide so you can always take a look you

00:13:40,139 --> 00:13:45,259
take a look at that the important thing

00:13:41,939 --> 00:13:47,399
is that you include a package called C

00:13:45,259 --> 00:13:51,389
I'm sorry I'm not sure how to pronounce

00:13:47,399 --> 00:13:53,189
that / composer patches and that makes

00:13:51,389 --> 00:13:56,100
it possible for all the patches to work

00:13:53,189 --> 00:13:57,839
and you probably don't need to include

00:13:56,100 --> 00:14:00,829
it because the composer template I

00:13:57,839 --> 00:14:04,769
mentioned earlier it has it by default

00:14:00,829 --> 00:14:07,100
so it works very similar to how the

00:14:04,769 --> 00:14:09,720
patches work in make files

00:14:07,100 --> 00:14:12,080
over here in the pastures m3 you specify

00:14:09,720 --> 00:14:14,730
each package and then you specify the

00:14:12,080 --> 00:14:16,890
like a label for the pads and the name

00:14:14,730 --> 00:14:18,930
of the link to the file value you can

00:14:16,890 --> 00:14:21,510
see that over here it's chopped up in

00:14:18,930 --> 00:14:23,850
the screenshot but but the links where

00:14:21,510 --> 00:14:29,970
the patch is stored and yeah you can use

00:14:23,850 --> 00:14:33,120
local parts and there was a question

00:14:29,970 --> 00:14:35,600
related to custom compositor Jason so

00:14:33,120 --> 00:14:37,770
this is how you would use work it's

00:14:35,600 --> 00:14:42,360
there is a component called merge

00:14:37,770 --> 00:14:44,160
plug-in which lets you like it says you

00:14:42,360 --> 00:14:45,510
know it merges a different composer or

00:14:44,160 --> 00:14:49,170
JSON into the existing one

00:14:45,510 --> 00:14:52,380
I think Drupal score uses it but I

00:14:49,170 --> 00:14:54,060
couldn't find the example but if you

00:14:52,380 --> 00:14:56,030
having if you have a custom module which

00:14:54,060 --> 00:14:58,320
has dependencies like for example this

00:14:56,030 --> 00:15:01,980
module I wrote called control tracker

00:14:58,320 --> 00:15:06,720
it needs a third-party dependency which

00:15:01,980 --> 00:15:08,490
is on packages so I include the angular

00:15:06,720 --> 00:15:10,620
the compositor Jason actually explicitly

00:15:08,490 --> 00:15:12,810
it's the whole parts of composer Jason

00:15:10,620 --> 00:15:14,610
and it will resolve all the dependencies

00:15:12,810 --> 00:15:18,440
in the composer in the custom module as

00:15:14,610 --> 00:15:21,090
well so this is again important because

00:15:18,440 --> 00:15:23,880
compose is also an auto loader and that

00:15:21,090 --> 00:15:26,910
that's I think I will diagnose if I go

00:15:23,880 --> 00:15:30,840
too deep into that it basically means

00:15:26,910 --> 00:15:32,910
that the classes which the classes the

00:15:30,840 --> 00:15:35,130
code in the in the third-party

00:15:32,910 --> 00:15:37,410
components referred to by this composer

00:15:35,130 --> 00:15:40,470
or Jason it won't be available in the

00:15:37,410 --> 00:15:41,700
port view unless you do this again this

00:15:40,470 --> 00:15:44,900
is something that developers have to

00:15:41,700 --> 00:15:47,340
worry about so if you're a developer you

00:15:44,900 --> 00:15:49,950
probably know what autoloading means if

00:15:47,340 --> 00:15:53,820
not I'm happy to talk about it outside

00:15:49,950 --> 00:15:56,310
the session again like I said this is

00:15:53,820 --> 00:15:58,260
this this is not built into composer

00:15:56,310 --> 00:16:02,090
it's available through a plug-in called

00:15:58,260 --> 00:16:05,250
Wikimedia / composer merge plug-in and

00:16:02,090 --> 00:16:09,210
this is again present in the composer

00:16:05,250 --> 00:16:12,030
template that's actually a cool thing of

00:16:09,210 --> 00:16:14,520
in the whole package is - opening up the

00:16:12,030 --> 00:16:15,990
different things this plug-in we use it

00:16:14,520 --> 00:16:17,020
for Drupal but it was actually not

00:16:15,990 --> 00:16:19,030
written by Drupal coming

00:16:17,020 --> 00:16:21,610
at all it was written by the Wikimedia

00:16:19,030 --> 00:16:23,440
community and we are benefiting from it

00:16:21,610 --> 00:16:27,100
this is the cool thing this is the

00:16:23,440 --> 00:16:30,250
reason we want to get everyone on the

00:16:27,100 --> 00:16:32,980
the whole PHP you know like the larger

00:16:30,250 --> 00:16:36,040
ecosystem bandwagon because we are now

00:16:32,980 --> 00:16:37,330
sharing a lot more code and we are much

00:16:36,040 --> 00:16:44,500
more standardized across the whole

00:16:37,330 --> 00:16:47,200
spectrum this is a UI it will have come

00:16:44,500 --> 00:16:48,760
across recently and this is actually the

00:16:47,200 --> 00:16:52,500
only UI you will have found that lets

00:16:48,760 --> 00:16:55,210
you manage composer Jason and I

00:16:52,500 --> 00:16:58,720
personally I think it means a lot of

00:16:55,210 --> 00:17:01,540
work but for any reason if you are not

00:16:58,720 --> 00:17:03,910
comfortable with terminal I think you

00:17:01,540 --> 00:17:06,100
can start by looking at this that's the

00:17:03,910 --> 00:17:08,290
link ways available it's a it's

00:17:06,100 --> 00:17:11,310
available as a Windows and OS X

00:17:08,290 --> 00:17:13,600
application I think Linux as well and

00:17:11,310 --> 00:17:15,459
you get an interface like that when you

00:17:13,600 --> 00:17:17,110
open up your projects you can interface

00:17:15,459 --> 00:17:18,940
like that it just lists all the

00:17:17,110 --> 00:17:20,350
requirements you have and you can you

00:17:18,940 --> 00:17:23,320
have buttons to install update or

00:17:20,350 --> 00:17:25,420
validate the composer JSON files there

00:17:23,320 --> 00:17:27,100
is there is very little it does which

00:17:25,420 --> 00:17:28,420
you can't do in terminal and you

00:17:27,100 --> 00:17:31,270
probably be more comfortable in the

00:17:28,420 --> 00:17:34,840
terminal anyway like I said this UI

00:17:31,270 --> 00:17:37,180
needs more work and if you have any

00:17:34,840 --> 00:17:39,040
suggestions for the UI offer a different

00:17:37,180 --> 00:17:40,150
UI or for a different way to manage

00:17:39,040 --> 00:17:45,970
compositor Jason

00:17:40,150 --> 00:17:49,300
I want to I would hear about it okay so

00:17:45,970 --> 00:17:52,800
that's actually the end of the bulk of

00:17:49,300 --> 00:17:55,800
the presentation any any questions

00:17:52,800 --> 00:17:55,800
please

00:17:58,080 --> 00:18:06,280
is there a for instance if the database

00:18:03,070 --> 00:18:07,870
was updated on the model well there's

00:18:06,280 --> 00:18:08,980
two questions if the database was

00:18:07,870 --> 00:18:11,410
updated in the model

00:18:08,980 --> 00:18:14,140
do you have to run the update of the

00:18:11,410 --> 00:18:15,850
database with composure that's it the

00:18:14,140 --> 00:18:18,070
question number one is question number

00:18:15,850 --> 00:18:20,650
two is for instance if you grab a model

00:18:18,070 --> 00:18:24,340
and then they put it on to puzzle or how

00:18:20,650 --> 00:18:26,620
it gets sent to the packages I'm sorry

00:18:24,340 --> 00:18:28,840
what is the second the second one is uh

00:18:26,620 --> 00:18:32,320
if you write a model and then put it on

00:18:28,840 --> 00:18:36,130
and drupal.org okay how do you share

00:18:32,320 --> 00:18:38,140
with packages okay so I'll answer the

00:18:36,130 --> 00:18:41,050
second one first it's because it's

00:18:38,140 --> 00:18:43,870
quicker it doesn't get sent to the main

00:18:41,050 --> 00:18:46,480
packages back over G there is a service

00:18:43,870 --> 00:18:48,870
running on drupal.org itself the link I

00:18:46,480 --> 00:18:51,280
said earlier packages Drupal or D / gate

00:18:48,870 --> 00:18:53,080
if you go there you not you'll probably

00:18:51,280 --> 00:18:55,960
do not see anything it's just a JSON

00:18:53,080 --> 00:18:57,310
output that's where it gets updated and

00:18:55,960 --> 00:18:59,020
that is why you need to put the

00:18:57,310 --> 00:19:01,150
repository in your composite JSON file

00:18:59,020 --> 00:19:03,040
so all the Drupal modules are available

00:19:01,150 --> 00:19:05,260
through that package is not the main

00:19:03,040 --> 00:19:10,600
package just does that answer your

00:19:05,260 --> 00:19:13,240
question so for instance is a automatic

00:19:10,600 --> 00:19:14,740
process that syncs yes okay so whenever

00:19:13,240 --> 00:19:16,780
you are so if you are a module

00:19:14,740 --> 00:19:19,810
contributor I mean you're contributing a

00:19:16,780 --> 00:19:22,030
module and you create a you create a

00:19:19,810 --> 00:19:24,970
full module it's immediately reflected

00:19:22,030 --> 00:19:26,950
into the packages or Drupal and it is

00:19:24,970 --> 00:19:30,100
intelligent enough to take what kind of

00:19:26,950 --> 00:19:31,690
module it is because the modules the

00:19:30,100 --> 00:19:34,420
themes the profiles the handle is

00:19:31,690 --> 00:19:35,620
slightly differently so it actually

00:19:34,420 --> 00:19:37,150
takes care so if you're creating a

00:19:35,620 --> 00:19:40,240
module it is going to the module

00:19:37,150 --> 00:19:41,590
static-free it does that job and I'm

00:19:40,240 --> 00:19:44,080
sorry what is the first question the

00:19:41,590 --> 00:19:48,370
first one is are if the model for

00:19:44,080 --> 00:19:50,560
instance of there is a database and you

00:19:48,370 --> 00:19:53,650
done loud or update a model with a

00:19:50,560 --> 00:19:56,200
composer but you still have to run those

00:19:53,650 --> 00:19:58,690
updates in the - yeah the be wearing do

00:19:56,200 --> 00:20:02,380
you run that okay you mean brush update

00:19:58,690 --> 00:20:04,240
DB yeah something about yeah right now

00:20:02,380 --> 00:20:06,460
composer does not do that there is

00:20:04,240 --> 00:20:09,270
actually some effort in figuring out how

00:20:06,460 --> 00:20:11,400
best do we do that because

00:20:09,270 --> 00:20:13,400
composure like it's a like I said

00:20:11,400 --> 00:20:15,960
earlier it is a more of a PHP thing and

00:20:13,400 --> 00:20:17,850
there is no concept of enabled or

00:20:15,960 --> 00:20:21,660
disabled modules there in composer

00:20:17,850 --> 00:20:23,160
Drupal has that concept so as I

00:20:21,660 --> 00:20:25,740
mentioned earlier when you run composer

00:20:23,160 --> 00:20:26,580
require it does not enable the module at

00:20:25,740 --> 00:20:28,710
least as of yet

00:20:26,580 --> 00:20:32,540
it just downloads the module it still

00:20:28,710 --> 00:20:32,540
have to run rush en to enable the module

00:20:33,080 --> 00:20:39,860
so if we are not entirely replacing

00:20:36,090 --> 00:20:43,310
dress or Drupal console we are just

00:20:39,860 --> 00:20:45,780
replacing the dress being part of it and

00:20:43,310 --> 00:20:48,300
like I said the reason is that you

00:20:45,780 --> 00:20:49,920
better handle your dependencies but we

00:20:48,300 --> 00:20:52,560
are working for that you know this is

00:20:49,920 --> 00:20:54,090
definitely a concern we have and we are

00:20:52,560 --> 00:20:56,010
we have trying to figure out ways you

00:20:54,090 --> 00:20:59,070
know how we can make all of these more

00:20:56,010 --> 00:21:04,380
seamless so any suggestions you have I'm

00:20:59,070 --> 00:21:06,960
happy to hear I am thank you um you had

00:21:04,380 --> 00:21:09,420
said that the composer JSON is sort of

00:21:06,960 --> 00:21:11,910
comparable to drush make but more

00:21:09,420 --> 00:21:15,900
flexible could you Claire like expand on

00:21:11,910 --> 00:21:17,520
that okay sure so dress me it was

00:21:15,900 --> 00:21:20,340
written for Drupal and it actually did a

00:21:17,520 --> 00:21:22,260
lot of things very well like specifying

00:21:20,340 --> 00:21:24,420
patches and all that there was one

00:21:22,260 --> 00:21:26,940
limitation in well I would say two

00:21:24,420 --> 00:21:30,150
limitations in brush make that was kind

00:21:26,940 --> 00:21:32,340
of a not a deal-breaker but a big

00:21:30,150 --> 00:21:33,930
disadvantage one of them was that you

00:21:32,340 --> 00:21:37,320
could not specify version constraints

00:21:33,930 --> 00:21:39,150
like we saw you always specify the exact

00:21:37,320 --> 00:21:40,680
version that you mean so if there are

00:21:39,150 --> 00:21:43,260
updates down the line you know you have

00:21:40,680 --> 00:21:45,090
to go to the make file update each and

00:21:43,260 --> 00:21:46,110
every line with the latest version so

00:21:45,090 --> 00:21:48,180
you have to actually figure out what's

00:21:46,110 --> 00:21:51,240
the latest version and then run rush

00:21:48,180 --> 00:21:53,490
make again that was one second thing is

00:21:51,240 --> 00:21:57,570
more settled and it happens if you are

00:21:53,490 --> 00:21:59,520
going to use dev releases so let's say

00:21:57,570 --> 00:22:02,340
your specified at dev releases version

00:21:59,520 --> 00:22:04,080
in brush make now what would happen is

00:22:02,340 --> 00:22:05,400
that at the time of development you

00:22:04,080 --> 00:22:08,610
would have run brush make and you would

00:22:05,400 --> 00:22:10,290
have got the latest dev release but when

00:22:08,610 --> 00:22:11,820
the next developer is checking out they

00:22:10,290 --> 00:22:13,830
could actually be an updated dev release

00:22:11,820 --> 00:22:17,880
and when the next developer runs brush

00:22:13,830 --> 00:22:19,290
make he or she gets the updated dev

00:22:17,880 --> 00:22:22,320
realism that might not be what is

00:22:19,290 --> 00:22:23,000
intended right because the code might

00:22:22,320 --> 00:22:24,770
have broken the

00:22:23,000 --> 00:22:26,620
might have broken with the update you

00:22:24,770 --> 00:22:28,700
have no way of knowing that and

00:22:26,620 --> 00:22:30,950
composure solves both those things

00:22:28,700 --> 00:22:33,230
it lets you specify a range of versions

00:22:30,950 --> 00:22:34,910
or in a more flexible version constraint

00:22:33,230 --> 00:22:38,510
and with the log file you can actually

00:22:34,910 --> 00:22:40,130
lock it to a particular commit so you

00:22:38,510 --> 00:22:41,870
know is ever released in time a

00:22:40,130 --> 00:22:42,260
particular commit hash it locks it to

00:22:41,870 --> 00:22:43,940
that

00:22:42,260 --> 00:22:45,770
so whenever the next developer runs and

00:22:43,940 --> 00:22:47,090
it could they could be 100 their

00:22:45,770 --> 00:22:52,430
releases after that but it will still

00:22:47,090 --> 00:22:55,070
pick that commit and also like I said

00:22:52,430 --> 00:22:56,420
brush make is just a way to define your

00:22:55,070 --> 00:22:58,000
dependencies composer is also an

00:22:56,420 --> 00:23:04,700
autoloader

00:22:58,000 --> 00:23:07,010
it's an autoloader yeah so I've been

00:23:04,700 --> 00:23:11,420
using composer a little bit with Drupal

00:23:07,010 --> 00:23:13,160
already and one issue I've run into is

00:23:11,420 --> 00:23:16,550
that sometimes when I update Drupal core

00:23:13,160 --> 00:23:18,470
it changes the composer JSON file

00:23:16,550 --> 00:23:22,190
sometimes wiping out things that I had

00:23:18,470 --> 00:23:24,320
been adding to it for my site what's the

00:23:22,190 --> 00:23:27,020
right way of handling it so that that

00:23:24,320 --> 00:23:30,170
isn't an issue here I guess so this

00:23:27,020 --> 00:23:32,330
actually is it's almost definitely a bug

00:23:30,170 --> 00:23:35,240
it's not supposed to change a composer

00:23:32,330 --> 00:23:37,880
different file the only if you're using

00:23:35,240 --> 00:23:39,500
a command like composer require that's

00:23:37,880 --> 00:23:41,060
the only composer require composer

00:23:39,500 --> 00:23:42,500
remove and so on those are the only

00:23:41,060 --> 00:23:43,670
comments that are supposed to test a

00:23:42,500 --> 00:23:46,850
composer to JSON file

00:23:43,670 --> 00:23:48,770
nothing else should so if if something

00:23:46,850 --> 00:23:51,440
else is something is not working this

00:23:48,770 --> 00:23:52,850
way I think it's most definitely a bug

00:23:51,440 --> 00:23:56,270
and you know we should probably take a

00:23:52,850 --> 00:23:58,190
closer look but the right way to do this

00:23:56,270 --> 00:23:59,660
I would suggest if you're not

00:23:58,190 --> 00:24:02,360
comfortable editing the JSON file

00:23:59,660 --> 00:24:04,160
yourself is the composer requires series

00:24:02,360 --> 00:24:05,510
of command so you the command we saw

00:24:04,160 --> 00:24:07,700
earlier composer require Drupal's less

00:24:05,510 --> 00:24:10,670
path or two that's how you would specify

00:24:07,700 --> 00:24:12,770
your dependencies certainly okay and

00:24:10,670 --> 00:24:15,470
composer remove so there is a I didn't

00:24:12,770 --> 00:24:17,270
demo that command at I thought it was

00:24:15,470 --> 00:24:20,480
little out of the way but if you want to

00:24:17,270 --> 00:24:22,970
remove a certain remove Montillo you'd

00:24:20,480 --> 00:24:24,800
run composer remove Drupal slash path or

00:24:22,970 --> 00:24:27,110
doing that the full thing about that is

00:24:24,800 --> 00:24:29,180
that it will actually track that what is

00:24:27,110 --> 00:24:30,440
the dependency and what is not so you

00:24:29,180 --> 00:24:32,660
know when we're and composer require

00:24:30,440 --> 00:24:35,270
path auto it actually installed token

00:24:32,660 --> 00:24:36,220
and see tools now when you run composer

00:24:35,270 --> 00:24:38,320
remove remove

00:24:36,220 --> 00:24:40,210
I thought oh it it'll even remove token

00:24:38,320 --> 00:24:41,610
and sequins unless something else is

00:24:40,210 --> 00:24:48,039
using it

00:24:41,610 --> 00:24:50,650
thank you so I'm a longtime user

00:24:48,039 --> 00:24:52,299
composer big fan thank you for having

00:24:50,650 --> 00:24:53,460
this talk everyone needs to be using

00:24:52,299 --> 00:25:01,110
composer

00:24:53,460 --> 00:25:03,669
eglee okay so my understanding is that

00:25:01,110 --> 00:25:06,460
Drupal has its own you know packs just

00:25:03,669 --> 00:25:08,500
that Drupal because Drupal modules do

00:25:06,460 --> 00:25:10,870
not follow semantic versioning so this

00:25:08,500 --> 00:25:13,330
private packages serves as sort of a

00:25:10,870 --> 00:25:16,150
translation between Drupal module

00:25:13,330 --> 00:25:19,330
versions and yep proper semantic

00:25:16,150 --> 00:25:21,730
versioning so my question is if I wanted

00:25:19,330 --> 00:25:23,890
to set up my own private for my

00:25:21,730 --> 00:25:27,580
organization you know something and a

00:25:23,890 --> 00:25:29,289
custom private packages for our own

00:25:27,580 --> 00:25:33,730
personal Drupal modules is there

00:25:29,289 --> 00:25:36,850
anything special I have to do well there

00:25:33,730 --> 00:25:38,169
are two ways if it's only once in a

00:25:36,850 --> 00:25:39,429
while kind of thing you know that only

00:25:38,169 --> 00:25:42,940
once in a while you would use a module

00:25:39,429 --> 00:25:46,150
this way push it to a repository and in

00:25:42,940 --> 00:25:48,250
your compositor Jason you remember the

00:25:46,150 --> 00:25:50,830
repository section I mentioned and get a

00:25:48,250 --> 00:25:52,480
like few more they were like four lines

00:25:50,830 --> 00:25:54,520
which were hidden over there actually

00:25:52,480 --> 00:25:56,620
those were the four lines I was calling

00:25:54,520 --> 00:25:59,440
in custom repository so you can actually

00:25:56,620 --> 00:26:01,270
do that but as far as like setting up

00:25:59,440 --> 00:26:02,679
that customer posit or a morning if

00:26:01,270 --> 00:26:04,870
there is anything has to be done there

00:26:02,679 --> 00:26:07,870
like translate module you know our own

00:26:04,870 --> 00:26:09,760
private module versions - or you don't

00:26:07,870 --> 00:26:12,100
have to you don't have to do that ways

00:26:09,760 --> 00:26:15,340
to transfer if you're using this method

00:26:12,100 --> 00:26:19,780
you specify the version numbers inside

00:26:15,340 --> 00:26:21,370
the repositories entry itself so if we

00:26:19,780 --> 00:26:23,230
follow its semantic versioning

00:26:21,370 --> 00:26:25,720
internally for modules

00:26:23,230 --> 00:26:28,840
it shouldn't be a problem yeah it won't

00:26:25,720 --> 00:26:31,150
be a problem in as far as of version

00:26:28,840 --> 00:26:33,309
constraints go you would be you would

00:26:31,150 --> 00:26:36,880
push code to your custom repository

00:26:33,309 --> 00:26:38,860
following that convention but your

00:26:36,880 --> 00:26:41,530
package entry needs to be needs to keep

00:26:38,860 --> 00:26:43,409
updated so the package you have in

00:26:41,530 --> 00:26:46,270
compositor jism that needs to be updated

00:26:43,409 --> 00:26:48,820
but if you're it sounds like you need a

00:26:46,270 --> 00:26:49,299
more elaborate thing you know mean of

00:26:48,820 --> 00:26:51,340
course this is

00:26:49,299 --> 00:26:54,639
lot of work and it is suitable for one

00:26:51,340 --> 00:26:56,980
of kind of usage but if you if you have

00:26:54,639 --> 00:26:59,409
you know if you need like more flexible

00:26:56,980 --> 00:27:00,610
usage or you know lot of modules then

00:26:59,409 --> 00:27:03,279
it's better to use something like

00:27:00,610 --> 00:27:06,039
torrent proxy or something like that if

00:27:03,279 --> 00:27:07,299
that's that's like you have github and

00:27:06,039 --> 00:27:08,289
github Enterprise you know it's

00:27:07,299 --> 00:27:11,529
something like that like you have

00:27:08,289 --> 00:27:15,669
packages and you have torrent proxy it's

00:27:11,529 --> 00:27:17,379
built by giorgia again and I think it's

00:27:15,669 --> 00:27:19,119
it's it's not very expensive it's

00:27:17,379 --> 00:27:21,159
probably like ten bucks a month

00:27:19,119 --> 00:27:23,559
something of that it's a good way to

00:27:21,159 --> 00:27:30,759
support yadi as well boys work on

00:27:23,559 --> 00:27:33,759
composer alright thank you very much how

00:27:30,759 --> 00:27:35,200
is the multi-site use case being handled

00:27:33,759 --> 00:27:37,960
because my understanding is that

00:27:35,200 --> 00:27:40,389
composer is a PHP dependency manager

00:27:37,960 --> 00:27:43,419
first or dependency manager for

00:27:40,389 --> 00:27:47,139
applications multi-site is multiple

00:27:43,419 --> 00:27:48,759
applications say you have different

00:27:47,139 --> 00:27:53,590
module versions insights all in a

00:27:48,759 --> 00:27:55,779
specific site yeah again personally I'm

00:27:53,590 --> 00:27:57,909
not quite a lot of it what what is

00:27:55,779 --> 00:28:00,429
definitely possible is that you can

00:27:57,909 --> 00:28:03,309
specify each module to go in a different

00:28:00,429 --> 00:28:05,830
directory so you might for a for example

00:28:03,309 --> 00:28:07,450
there is a particular module that you

00:28:05,830 --> 00:28:11,409
don't want inside source but only in a

00:28:07,450 --> 00:28:15,009
specific site side slash example.com

00:28:11,409 --> 00:28:18,639
let's say so you can there was a section

00:28:15,009 --> 00:28:19,869
we saw little earlier this over the

00:28:18,639 --> 00:28:21,489
Installer part I didn't mention this

00:28:19,869 --> 00:28:23,289
earlier but using this section you can

00:28:21,489 --> 00:28:26,019
actually mention very exactly you want

00:28:23,289 --> 00:28:27,489
to place that all right for the case

00:28:26,019 --> 00:28:30,850
where I want to have something inside

00:28:27,489 --> 00:28:32,619
all as well as a specific site yeah

00:28:30,850 --> 00:28:34,149
that's something I'm not right I'm

00:28:32,619 --> 00:28:38,379
afraid I don't have an answer for you

00:28:34,149 --> 00:28:42,009
right okay cool thank you I got a

00:28:38,379 --> 00:28:43,259
question about of the tracking the

00:28:42,009 --> 00:28:46,059
contribs

00:28:43,259 --> 00:28:48,220
you're not you're not tracking them

00:28:46,059 --> 00:28:48,820
they're being ignored with get ignored

00:28:48,220 --> 00:28:52,059
yeah

00:28:48,820 --> 00:28:56,649
so if I were to install a contribute to

00:28:52,059 --> 00:28:58,509
composer know like if another developer

00:28:56,649 --> 00:28:59,769
pulls my branch they'll get an error

00:28:58,509 --> 00:29:00,480
because they don't have that module

00:28:59,769 --> 00:29:03,300
installed

00:29:00,480 --> 00:29:05,940
and but that's the workflow so whenever

00:29:03,300 --> 00:29:08,280
the next developer picks up this picks

00:29:05,940 --> 00:29:09,900
up the website the first thing the

00:29:08,280 --> 00:29:12,270
developer needs to do is run composing

00:29:09,900 --> 00:29:14,430
strong and since you added that module

00:29:12,270 --> 00:29:16,740
you would have added it in the composer

00:29:14,430 --> 00:29:18,510
adjacent right so when the next

00:29:16,740 --> 00:29:21,750
development store runs composer install

00:29:18,510 --> 00:29:23,130
to get the module from the log file yeah

00:29:21,750 --> 00:29:24,960
from the decent file as well because

00:29:23,130 --> 00:29:26,720
you're committing both of them the log

00:29:24,960 --> 00:29:29,460
file contains the version information

00:29:26,720 --> 00:29:32,310
but the JSON file contains the entries

00:29:29,460 --> 00:29:33,660
themselves so both have to be in sync

00:29:32,310 --> 00:29:36,090
that's why I said you know log file you

00:29:33,660 --> 00:29:38,870
probably won't ever touch it you know

00:29:36,090 --> 00:29:42,420
it's actually for composers internal use

00:29:38,870 --> 00:29:44,610
so when you commit a JSON and log file

00:29:42,420 --> 00:29:47,250
and the next developer runs composing

00:29:44,610 --> 00:29:49,140
install composer knows okay yeah there

00:29:47,250 --> 00:29:50,520
is a new module over here thanks Carla

00:29:49,140 --> 00:29:52,320
and again storage and then all the

00:29:50,520 --> 00:29:54,660
dependencies as well the best way to

00:29:52,320 --> 00:29:57,120
install it was I used rush to install my

00:29:54,660 --> 00:29:58,710
modules so do I'd use safe dev sort of

00:29:57,120 --> 00:30:01,110
write code or how do I do that

00:29:58,710 --> 00:30:04,110
I'm sorry do I use like to say death

00:30:01,110 --> 00:30:06,450
flag sort of write to the funny you

00:30:04,110 --> 00:30:08,340
should not be using brush to enable more

00:30:06,450 --> 00:30:09,690
sorry to download modules to enable

00:30:08,340 --> 00:30:11,520
modules here you will still use brush

00:30:09,690 --> 00:30:13,080
and that doesn't make a difference okay

00:30:11,520 --> 00:30:16,860
but to download modules you would now

00:30:13,080 --> 00:30:17,130
use composer required in the command

00:30:16,860 --> 00:30:18,810
line

00:30:17,130 --> 00:30:23,760
yeah in the command ok Go's required

00:30:18,810 --> 00:30:26,400
thank you thank you for the session here

00:30:23,760 --> 00:30:28,700
this is my first Drupal con and you

00:30:26,400 --> 00:30:32,220
mentioned the concept of thank you of

00:30:28,700 --> 00:30:35,250
the update composer update or I still

00:30:32,220 --> 00:30:36,720
used rush and that's a day of the month

00:30:35,250 --> 00:30:38,550
well that's why I keep my hair short

00:30:36,720 --> 00:30:40,650
because I could be pulling out my hair

00:30:38,550 --> 00:30:42,440
on the update that mother contributed

00:30:40,650 --> 00:30:45,180
modules

00:30:42,440 --> 00:30:48,600
you mentioned the advantage of composers

00:30:45,180 --> 00:30:50,280
you can express a range on the

00:30:48,600 --> 00:30:54,000
versioning for myself

00:30:50,280 --> 00:30:56,510
like wow I would never I be afraid to do

00:30:54,000 --> 00:30:58,680
that because my first step whenever I

00:30:56,510 --> 00:31:01,410
want to update modules I go to

00:30:58,680 --> 00:31:03,660
drupal.org I go to the issue queue for

00:31:01,410 --> 00:31:05,340
that module and you know ok there's a

00:31:03,660 --> 00:31:08,539
new module I'm just checking to see are

00:31:05,340 --> 00:31:11,479
there any critical or urgent

00:31:08,539 --> 00:31:15,739
or major or minor issues on the update

00:31:11,479 --> 00:31:17,179
yeah and the question probably isn't

00:31:15,739 --> 00:31:19,279
anything you can do about but maybe

00:31:17,179 --> 00:31:20,959
there's someone here boy it would be

00:31:19,279 --> 00:31:23,570
great if there was a connection between

00:31:20,959 --> 00:31:26,570
these tools brush or composer and

00:31:23,570 --> 00:31:30,139
drupal.org where the community itself

00:31:26,570 --> 00:31:33,169
could respond to it there's a regret

00:31:30,139 --> 00:31:35,509
major regression bug in a module so that

00:31:33,169 --> 00:31:37,579
composer would somehow better read this

00:31:35,509 --> 00:31:39,739
information like hey we yeah we're not

00:31:37,579 --> 00:31:40,819
going to be a great idea yep there's

00:31:39,739 --> 00:31:43,009
nothing like that right now

00:31:40,819 --> 00:31:45,440
but that's actually a great idea the

00:31:43,009 --> 00:31:47,419
closest I can think of not in Drupal but

00:31:45,440 --> 00:31:50,659
in WordPress communities that each

00:31:47,419 --> 00:31:52,309
plugin has has a user would system that

00:31:50,659 --> 00:31:53,929
this plug-in works with the latest

00:31:52,309 --> 00:31:57,409
WordPress version something like that

00:31:53,929 --> 00:31:59,149
yeah I think that's a great idea I'm

00:31:57,409 --> 00:32:01,099
afraid we don't have anything yeah well

00:31:59,149 --> 00:32:02,719
I mean it's true book gets larger and

00:32:01,099 --> 00:32:04,669
larger and the community gets larger

00:32:02,719 --> 00:32:06,529
enlarges it seems something would need

00:32:04,669 --> 00:32:09,769
to be done because otherwise each

00:32:06,529 --> 00:32:11,409
individual programmer has to go or

00:32:09,769 --> 00:32:14,959
developer has to go through their own

00:32:11,409 --> 00:32:16,339
testing of the module and to learn now

00:32:14,959 --> 00:32:20,779
there's a problem here it's an issue

00:32:16,339 --> 00:32:22,249
queue and you know you may not want the

00:32:20,779 --> 00:32:24,049
whole community it have the ability to

00:32:22,249 --> 00:32:26,329
put a show stop or maybe there's a show

00:32:24,049 --> 00:32:29,449
stop or flag on the module say hey this

00:32:26,329 --> 00:32:32,509
one there's a new module upgrade here

00:32:29,449 --> 00:32:35,329
but this this is a breaker or breaker so

00:32:32,509 --> 00:32:37,519
just a few thoughts that's actually a

00:32:35,329 --> 00:32:39,739
nice idea that there is something

00:32:37,519 --> 00:32:41,749
similar in the other way there is a PHP

00:32:39,739 --> 00:32:45,829
package which lets you define security

00:32:41,749 --> 00:32:48,379
constraint and sorry so if you are if

00:32:45,829 --> 00:32:51,049
you're composer decent rules allow and

00:32:48,379 --> 00:32:53,209
insecure packets to be installed this

00:32:51,049 --> 00:32:55,009
stops it but yes something like this

00:32:53,209 --> 00:32:57,469
could be a great addition I'll

00:32:55,009 --> 00:32:59,169
definitely look it look into this the

00:32:57,469 --> 00:33:01,999
gate idea

00:32:59,169 --> 00:33:05,269
hello um could you talk a little bit

00:33:01,999 --> 00:33:06,949
about deployments how this would go to

00:33:05,269 --> 00:33:09,709
staging how this would go to production

00:33:06,949 --> 00:33:14,690
are you then running composer in all of

00:33:09,709 --> 00:33:16,969
your different environments yes whether

00:33:14,690 --> 00:33:19,590
the recommended answer is yes that you

00:33:16,969 --> 00:33:22,200
would run all of them any different

00:33:19,590 --> 00:33:23,520
but personally I see two ways around

00:33:22,200 --> 00:33:25,800
this you know if you don't have a lot of

00:33:23,520 --> 00:33:27,450
environments showing I would do that I

00:33:25,800 --> 00:33:32,100
would run composing the new environment

00:33:27,450 --> 00:33:34,310
and test it but if you're if you're you

00:33:32,100 --> 00:33:37,260
know using continuous deployment

00:33:34,310 --> 00:33:40,410
practices and so on you probably use

00:33:37,260 --> 00:33:42,870
using something like docker or you're

00:33:40,410 --> 00:33:45,780
probably hosting using a host that does

00:33:42,870 --> 00:33:48,300
not let any such commands run on the

00:33:45,780 --> 00:33:51,120
production server so in both of these

00:33:48,300 --> 00:33:53,850
cases the way I would do this is have a

00:33:51,120 --> 00:33:55,440
separate repository which you know so

00:33:53,850 --> 00:33:57,900
this will be a part of your CI pipeline

00:33:55,440 --> 00:34:01,410
you know when you push to the push to

00:33:57,900 --> 00:34:02,970
your to your repository it would look at

00:34:01,410 --> 00:34:06,210
the code run the component composer

00:34:02,970 --> 00:34:07,740
install and with with whatever is

00:34:06,210 --> 00:34:10,020
generated now the new file system

00:34:07,740 --> 00:34:11,460
including vendor web slash core and

00:34:10,020 --> 00:34:13,890
modules and content modules and

00:34:11,460 --> 00:34:15,930
everything you could probably create a

00:34:13,890 --> 00:34:17,550
docker image out of that and that's the

00:34:15,930 --> 00:34:19,440
image you push to production and if

00:34:17,550 --> 00:34:21,870
you're not using the docker the other

00:34:19,440 --> 00:34:24,330
approach I would use is have a separate

00:34:21,870 --> 00:34:27,270
git repository not a clone subject git

00:34:24,330 --> 00:34:29,460
repository and you push including all

00:34:27,270 --> 00:34:31,080
this vendor and web slash this modules

00:34:29,460 --> 00:34:33,720
and everything you push push it over

00:34:31,080 --> 00:34:34,050
there and run your automation test over

00:34:33,720 --> 00:34:38,160
there

00:34:34,050 --> 00:34:42,810
so these are the two ways I would go

00:34:38,160 --> 00:34:44,820
about this question it seems that what

00:34:42,810 --> 00:34:47,070
should be in that git ignore from the

00:34:44,820 --> 00:34:50,460
conventional v7 structure is different

00:34:47,070 --> 00:34:52,440
from us on v8 with composer so when we

00:34:50,460 --> 00:34:54,630
do composer install does it know what

00:34:52,440 --> 00:34:57,810
should be and should not be in doubt get

00:34:54,630 --> 00:35:01,890
ignore yes so the template actually

00:34:57,810 --> 00:35:05,310
handles this again this screenshot we

00:35:01,890 --> 00:35:07,560
saw earlier this defines how where the

00:35:05,310 --> 00:35:09,540
modules actually placed so this

00:35:07,560 --> 00:35:13,020
screenshot is from a Drupal 8 version

00:35:09,540 --> 00:35:15,480
and we see that for again it's getting

00:35:13,020 --> 00:35:17,310
chopped off but that's type Drupal -

00:35:15,480 --> 00:35:19,860
modules so for Drupal module is going to

00:35:17,310 --> 00:35:21,320
place it in web modules contrib dollar

00:35:19,860 --> 00:35:25,230
name that's like a variable over there

00:35:21,320 --> 00:35:27,480
but if it's Drupal 7 M 3 would probably

00:35:25,230 --> 00:35:31,380
be web slash site slash all slash

00:35:27,480 --> 00:35:33,090
modules less contrib slash colony so

00:35:31,380 --> 00:35:36,480
actually a Drupal 7 template as well

00:35:33,090 --> 00:35:38,310
which I didn't mention earlier will

00:35:36,480 --> 00:35:39,930
exclude what else will be excluded I'm

00:35:38,310 --> 00:35:42,120
sorry it will exclude what should be

00:35:39,930 --> 00:35:44,550
excluded that if you're getting no file

00:35:42,120 --> 00:35:46,620
I mean nothing stops you from committing

00:35:44,550 --> 00:35:48,510
all these files actually it's just a

00:35:46,620 --> 00:35:50,430
best practice not to comment it and you

00:35:48,510 --> 00:35:52,470
would add this in your gate ignore again

00:35:50,430 --> 00:35:56,790
which is present in the Drupal Composer

00:35:52,470 --> 00:35:59,520
template okay hi there

00:35:56,790 --> 00:36:01,710
I think Oh back to that merge that merge

00:35:59,520 --> 00:36:03,330
module you're showing this one so yeah

00:36:01,710 --> 00:36:05,070
that one here so you have you said you

00:36:03,330 --> 00:36:06,570
have to do this to make the auto loader

00:36:05,070 --> 00:36:08,220
work properly right otherwise got

00:36:06,570 --> 00:36:10,290
multiple Auto loaders that's the problem

00:36:08,220 --> 00:36:12,930
right it would be with contributed

00:36:10,290 --> 00:36:16,350
modules there's going to be multiple or

00:36:12,930 --> 00:36:18,950
two loaders so what's the purpose of

00:36:16,350 --> 00:36:21,240
this merge so if you're writing it so

00:36:18,950 --> 00:36:23,610
two things let me let me clarify this

00:36:21,240 --> 00:36:27,030
further if this was actually a

00:36:23,610 --> 00:36:28,980
contribute you'll yeah and the composer

00:36:27,030 --> 00:36:32,640
or Jason was present this was let's say

00:36:28,980 --> 00:36:34,560
committed to Drupal got over G here now

00:36:32,640 --> 00:36:36,180
in that case packages the Drupal

00:36:34,560 --> 00:36:37,530
daughter will take care of this you know

00:36:36,180 --> 00:36:39,300
you don't need to do this in that case

00:36:37,530 --> 00:36:41,340
so if you're using any contrib modules

00:36:39,300 --> 00:36:43,530
you don't have to worry about this is

00:36:41,340 --> 00:36:47,220
only for your custom modules in this

00:36:43,530 --> 00:36:49,200
case this is a project I just like short

00:36:47,220 --> 00:36:51,330
background over here this is a project I

00:36:49,200 --> 00:36:53,190
wrote for my organization to track all

00:36:51,330 --> 00:36:56,250
the contributions we make as a whole

00:36:53,190 --> 00:36:59,130
team so this website actually runs every

00:36:56,250 --> 00:37:01,080
20 minutes queries report over G and

00:36:59,130 --> 00:37:02,370
gets all the contributions I call

00:37:01,080 --> 00:37:06,420
comments patches and all that we have

00:37:02,370 --> 00:37:09,390
uploaded so we are acquiring drupal.org

00:37:06,420 --> 00:37:12,090
api and i didn't want to do that in this

00:37:09,390 --> 00:37:14,730
module mainly because i had already

00:37:12,090 --> 00:37:17,310
written this library for another project

00:37:14,730 --> 00:37:19,290
earlier so this library was available to

00:37:17,310 --> 00:37:22,320
me i didn't need to write all the logic

00:37:19,290 --> 00:37:25,500
my custom module just had a compositor

00:37:22,320 --> 00:37:30,480
jason which used that library

00:37:25,500 --> 00:37:32,490
the problem here is when i I can put my

00:37:30,480 --> 00:37:35,760
custom module over there but of course

00:37:32,490 --> 00:37:37,950
that library won't get picked up the API

00:37:35,760 --> 00:37:41,160
client D dotto API client won't get

00:37:37,950 --> 00:37:43,380
picked up because when you run composer

00:37:41,160 --> 00:37:44,539
installing the root it does not scan

00:37:43,380 --> 00:37:47,630
each and every compositor

00:37:44,539 --> 00:37:48,319
in the park by design there is no way it

00:37:47,630 --> 00:37:51,079
can do that

00:37:48,319 --> 00:37:53,329
so this plug-in this definition says

00:37:51,079 --> 00:37:55,759
that okay you're reading this compositor

00:37:53,329 --> 00:37:58,549
Jason but also read this one and get the

00:37:55,759 --> 00:38:02,089
libraries from there and it is kind of

00:37:58,549 --> 00:38:04,219
merge it it will merge it so that it

00:38:02,089 --> 00:38:07,189
appears it's a part of this compositor

00:38:04,219 --> 00:38:09,259
Jason instance I mean internally and all

00:38:07,189 --> 00:38:11,479
the libraries are placed appropriately

00:38:09,259 --> 00:38:12,559
so like in in this case the library

00:38:11,479 --> 00:38:16,130
would go to vendor directly

00:38:12,559 --> 00:38:17,839
I hope it's pretty rare that you would

00:38:16,130 --> 00:38:19,519
have to do this I guess which is I don't

00:38:17,839 --> 00:38:22,069
know I this was like a this is the only

00:38:19,519 --> 00:38:23,929
custom module in this website yeah and I

00:38:22,069 --> 00:38:29,959
have to do this so it's really a new use

00:38:23,929 --> 00:38:38,059
case okay okay I'm sorry can we take or

00:38:29,959 --> 00:38:39,799
I think the next how do we take all

00:38:38,059 --> 00:38:41,809
right I think this this has to be the

00:38:39,799 --> 00:38:45,109
last one as sure so like I have a couple

00:38:41,809 --> 00:38:46,549
of questions or liquor it so like is is

00:38:45,109 --> 00:38:48,140
it installing the module is just

00:38:46,549 --> 00:38:50,119
downloading a mod it's just downloading

00:38:48,140 --> 00:38:51,859
the mod okay and when installing the

00:38:50,119 --> 00:38:54,229
model does it run the updates on that

00:38:51,859 --> 00:38:57,769
module also there for example like when

00:38:54,229 --> 00:39:00,049
I run the composer again okay and it

00:38:57,769 --> 00:39:02,059
will instigate the latest modules so yes

00:39:00,049 --> 00:39:04,099
will it run the updates and no it won't

00:39:02,059 --> 00:39:05,659
it like I said I think somebody has this

00:39:04,099 --> 00:39:08,059
question so yeah you have to run press

00:39:05,659 --> 00:39:10,969
FDB again and that's something we are

00:39:08,059 --> 00:39:13,189
working on to simplify okay and the way

00:39:10,969 --> 00:39:15,859
like in the drupal be happily a big

00:39:13,189 --> 00:39:17,449
manager model right that tells you okay

00:39:15,859 --> 00:39:19,219
there is a new patch is available for

00:39:17,449 --> 00:39:20,839
you know do we have something for the

00:39:19,219 --> 00:39:22,819
composer like composite like itself says

00:39:20,839 --> 00:39:25,009
okay there is a new absorbed it for you

00:39:22,819 --> 00:39:26,359
you need to download something so yeah

00:39:25,009 --> 00:39:27,769
there is a there is a command on

00:39:26,359 --> 00:39:31,069
composer is slipping my mind right now

00:39:27,769 --> 00:39:33,709
which checks for all the updates to all

00:39:31,069 --> 00:39:35,029
your packages it just tells them okay

00:39:33,709 --> 00:39:37,880
this is the version you have installed

00:39:35,029 --> 00:39:41,299
and this is available as per your zones

00:39:37,880 --> 00:39:43,640
and I forget the command I'll post it

00:39:41,299 --> 00:39:46,039
later okay so that the Drupal update

00:39:43,640 --> 00:39:47,479
manager model is going to be like in a

00:39:46,039 --> 00:39:49,849
line with the composer because the

00:39:47,479 --> 00:39:53,719
biggest is variable a country no not

00:39:49,849 --> 00:39:55,969
necessarily because your composure Jason

00:39:53,719 --> 00:39:57,650
could have version constraints update

00:39:55,969 --> 00:39:59,329
manager will always show the latest

00:39:57,650 --> 00:40:01,039
okay but the compost you might have

00:39:59,329 --> 00:40:02,569
limited that you know I don't want

00:40:01,039 --> 00:40:05,240
anything after one point five hundred

00:40:02,569 --> 00:40:07,369
mass so it won't show in that case but

00:40:05,240 --> 00:40:08,990
here usually it will be a lineman unless

00:40:07,369 --> 00:40:13,029
you're using this kind of fancy version

00:40:08,990 --> 00:40:15,070
constraints it will be aligned thank you

00:40:13,029 --> 00:40:19,499
thank you everyone for attending

00:40:15,070 --> 00:40:19,499
[Applause]

00:40:59,440 --> 00:41:02,859

YouTube URL: https://www.youtube.com/watch?v=XCrNiShg-ck


