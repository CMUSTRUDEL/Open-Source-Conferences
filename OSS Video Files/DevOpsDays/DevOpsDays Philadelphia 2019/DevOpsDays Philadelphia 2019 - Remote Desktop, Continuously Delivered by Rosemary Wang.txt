Title: DevOpsDays Philadelphia 2019 - Remote Desktop, Continuously Delivered by Rosemary Wang
Publication date: 2019-11-03
Playlist: DevOpsDays Philadelphia 2019
Description: 
	DevOpsDays Philadelphia 2019 - Remote Desktop, Continuously Delivered by Rosemary Wang

Traveling with multiple electronic devices can be a chore, especially with constraints on size and the hurdles of security. We can try to solve this problem by using a remote desktop accessible from any of our devices but that can take time to set up! What happens when we need another remote desktop quickly? How can we create a remote desktop as on-demand as a container or virtual machine in our datacenter?

In this talk, weâ€™ll apply infrastructure-as-code to create a continuously delivered remote desktop experience. While there are some limitations to a seamless user experience for a remote desktop, weâ€™ll review tools allow us to automate creation and configuration and techniques to ensure it is built reliably. By applying infrastructure-as-code to remote desktop, we can create an immutable remote desktop image, deploy replicas based on our geographic location, and test if our development environment is ready for use.
Captions: 
	00:00:00,410 --> 00:00:11,839
[Music]

00:00:14,019 --> 00:00:19,880
all righty so I'm rosery Wong I'm a

00:00:17,060 --> 00:00:22,520
developer advocate for hash Corp and I'm

00:00:19,880 --> 00:00:25,160
up here to tell you not a continuous

00:00:22,520 --> 00:00:27,410
delivery success story this is a small

00:00:25,160 --> 00:00:29,810
toy example of something that I tried to

00:00:27,410 --> 00:00:31,970
do for myself and it's not perfect and

00:00:29,810 --> 00:00:34,220
the reality is getting to continuous

00:00:31,970 --> 00:00:35,780
delivery getting through all of this is

00:00:34,220 --> 00:00:38,750
really difficult right so this is my

00:00:35,780 --> 00:00:41,600
best attempt to hack a social technical

00:00:38,750 --> 00:00:43,579
systems specifically myself and it will

00:00:41,600 --> 00:00:45,260
have elephants so I'll explain that in a

00:00:43,579 --> 00:00:48,710
little bit but we'll get there we'll get

00:00:45,260 --> 00:00:50,809
there I promise all right so this

00:00:48,710 --> 00:00:52,940
started about three years ago or so when

00:00:50,809 --> 00:00:55,100
I started to be a traveling consultant

00:00:52,940 --> 00:00:57,050
and as an engineer who was a travelling

00:00:55,100 --> 00:00:59,710
consultant I was required to hold a lot

00:00:57,050 --> 00:01:02,510
of devices this is a picture of

00:00:59,710 --> 00:01:04,100
privilege right so I have worked for

00:01:02,510 --> 00:01:06,740
companies who have the privilege of

00:01:04,100 --> 00:01:08,480
procuring these devices for me and

00:01:06,740 --> 00:01:10,430
requiring that I use them to a certain

00:01:08,480 --> 00:01:13,520
degree I would have a 15-inch MacBook

00:01:10,430 --> 00:01:15,380
Pro from my client because they wanted

00:01:13,520 --> 00:01:17,930
all of their devices in one kind of

00:01:15,380 --> 00:01:20,240
registration I would have my company's

00:01:17,930 --> 00:01:21,590
laptop I would also have the iPad

00:01:20,240 --> 00:01:24,590
because I wasn't allowed to watch

00:01:21,590 --> 00:01:26,600
Netflix on either laptop so I would have

00:01:24,590 --> 00:01:28,550
to carry the iPad to watch my Netflix

00:01:26,600 --> 00:01:30,170
and then I would have to carry a hotspot

00:01:28,550 --> 00:01:32,090
because when I had to get on calls and

00:01:30,170 --> 00:01:34,160
airports I needed some kind of Wi-Fi

00:01:32,090 --> 00:01:36,080
connection and then eventually to power

00:01:34,160 --> 00:01:37,640
the two laptops that one of which might

00:01:36,080 --> 00:01:39,740
die I had to get a power bank which

00:01:37,640 --> 00:01:41,990
always gets flagged in airport security

00:01:39,740 --> 00:01:43,700
and then eventually I had to get this

00:01:41,990 --> 00:01:45,320
microphone which helps with all the

00:01:43,700 --> 00:01:48,320
audio when people ask me what are you

00:01:45,320 --> 00:01:50,990
saying on these calls basically these

00:01:48,320 --> 00:01:53,330
are a lot of devices and no matter what

00:01:50,990 --> 00:01:55,220
I ask right I was like why do I have to

00:01:53,330 --> 00:01:57,980
carry these things and I got a whole

00:01:55,220 --> 00:02:00,050
slew of reasons which kind of bucketed

00:01:57,980 --> 00:02:02,450
into about three first of all security

00:02:00,050 --> 00:02:05,090
so I was told that with these physical

00:02:02,450 --> 00:02:06,970
devices it would ensure intellectual

00:02:05,090 --> 00:02:09,140
property constraints right so

00:02:06,970 --> 00:02:11,510
intellectual property from my client

00:02:09,140 --> 00:02:14,120
wouldn't be on my work laptop other work

00:02:11,510 --> 00:02:16,040
laptop right on top of that they're like

00:02:14,120 --> 00:02:17,510
if you ever use any client personal

00:02:16,040 --> 00:02:19,969
identifying information because you're

00:02:17,510 --> 00:02:21,859
doing some testing we can't have that

00:02:19,969 --> 00:02:22,900
across multiple devices we have to have

00:02:21,859 --> 00:02:25,150
that on and managed

00:02:22,900 --> 00:02:26,439
but well it kind of was weird right

00:02:25,150 --> 00:02:29,409
because I was like well why would I have

00:02:26,439 --> 00:02:30,819
PII on my laptop anyway it just doesn't

00:02:29,409 --> 00:02:33,129
feel good right

00:02:30,819 --> 00:02:35,409
and then when both of those didn't

00:02:33,129 --> 00:02:36,640
really pass my muster one of the

00:02:35,409 --> 00:02:38,140
developers would come up to me and say

00:02:36,640 --> 00:02:39,250
it's for productivity reasons so I'm

00:02:38,140 --> 00:02:42,010
like what do you mean by productivity

00:02:39,250 --> 00:02:44,379
reasons they said well if you have the

00:02:42,010 --> 00:02:46,239
same MacBook as everybody else all the

00:02:44,379 --> 00:02:48,939
install instructions work exactly

00:02:46,239 --> 00:02:50,890
perfectly right so basically we expected

00:02:48,939 --> 00:02:53,530
our laptops to be containers more on

00:02:50,890 --> 00:02:55,510
that later but the idea is that we would

00:02:53,530 --> 00:02:57,040
actually be able to do this uniformly

00:02:55,510 --> 00:02:58,900
across the board which is why everybody

00:02:57,040 --> 00:03:00,430
had to have a 15-inch MacBook and

00:02:58,900 --> 00:03:04,389
someone warned everybody else not to

00:03:00,430 --> 00:03:06,579
update to Catalina so I loved the last

00:03:04,389 --> 00:03:08,379
thing the last reason when both of those

00:03:06,579 --> 00:03:10,959
failed and I didn't buy into it was I

00:03:08,379 --> 00:03:13,060
love my development machine the number

00:03:10,959 --> 00:03:14,950
of people who told me I've customized my

00:03:13,060 --> 00:03:16,930
terminal beautifully by the way if

00:03:14,950 --> 00:03:19,540
you've done this no judgment it's just

00:03:16,930 --> 00:03:20,920
some people really enjoy doing that so

00:03:19,540 --> 00:03:22,780
when I would pair with someone else who

00:03:20,920 --> 00:03:24,579
was another developer they would proceed

00:03:22,780 --> 00:03:27,340
to take my laptop and proceed to

00:03:24,579 --> 00:03:29,049
configure it just like theirs so really

00:03:27,340 --> 00:03:31,329
you know everybody likes the development

00:03:29,049 --> 00:03:33,310
machines we bespoke we crack these

00:03:31,329 --> 00:03:34,720
bespoke machines for ourselves right and

00:03:33,310 --> 00:03:36,730
in that case we're our own socio

00:03:34,720 --> 00:03:38,290
technical system where we're interacting

00:03:36,730 --> 00:03:41,500
with our beautiful bespoke machine that

00:03:38,290 --> 00:03:42,609
we love to develop on and so all of

00:03:41,500 --> 00:03:44,440
these reasons didn't really make much

00:03:42,609 --> 00:03:46,299
sense to me right and it came down to

00:03:44,440 --> 00:03:48,159
physical resources are better than the

00:03:46,299 --> 00:03:49,750
logical we can touch them it's tactile

00:03:48,159 --> 00:03:52,510
we can respond to them they're

00:03:49,750 --> 00:03:53,829
interactive systems but our physical

00:03:52,510 --> 00:03:56,079
resource is really better than the

00:03:53,829 --> 00:03:58,690
logical and it kind of came to a rude

00:03:56,079 --> 00:04:01,239
awakening whenever I would walk and my

00:03:58,690 --> 00:04:02,709
back started hurting and it got so bad

00:04:01,239 --> 00:04:04,090
to a point where I actually have to wear

00:04:02,709 --> 00:04:06,579
a back brace I'm not wearing it up here

00:04:04,090 --> 00:04:09,190
right now cuz itchy but it's actually

00:04:06,579 --> 00:04:11,290
pretty painful so I was like is it

00:04:09,190 --> 00:04:13,810
really is it really and then I looked at

00:04:11,290 --> 00:04:16,870
the numbers okay stay with me all right

00:04:13,810 --> 00:04:19,720
so there are 6.4 million metric tons of

00:04:16,870 --> 00:04:22,840
e-waste reported to have been in

00:04:19,720 --> 00:04:24,820
landfill in the US and 2017 now I don't

00:04:22,840 --> 00:04:26,820
know what 6.4 million metric tons

00:04:24,820 --> 00:04:29,680
actually looks like right but a waste

00:04:26,820 --> 00:04:31,539
effectively is laptops cell phones all

00:04:29,680 --> 00:04:34,450
these physical devices I put on that

00:04:31,539 --> 00:04:36,340
picture that's the equivalent I did the

00:04:34,450 --> 00:04:38,440
math of 1.2

00:04:36,340 --> 00:04:41,020
million Asian elephants inequivalent

00:04:38,440 --> 00:04:44,320
wait that's a lot of Asian elephants

00:04:41,020 --> 00:04:49,270
now how many Asian elephants are there

00:04:44,320 --> 00:04:50,889
in the wild in the world not that not

00:04:49,270 --> 00:04:54,160
that many it's actually about fit plus

00:04:50,889 --> 00:04:58,150
the fifty thousand so basically our a

00:04:54,160 --> 00:05:00,340
waste our weight of e-waste far exceeds

00:04:58,150 --> 00:05:02,020
the weight of the population of Asian

00:05:00,340 --> 00:05:04,600
elephants in the world right which is a

00:05:02,020 --> 00:05:07,030
pretty sobering thought and not only

00:05:04,600 --> 00:05:09,220
that my back also hurts so of all of

00:05:07,030 --> 00:05:11,260
this you know all of these numbers from

00:05:09,220 --> 00:05:12,790
even a larger standpoint and myself I'm

00:05:11,260 --> 00:05:13,330
like okay there's got to be something

00:05:12,790 --> 00:05:15,700
better

00:05:13,330 --> 00:05:17,979
the point is physical resources have a

00:05:15,700 --> 00:05:20,139
cost right they have a monetary cost in

00:05:17,979 --> 00:05:21,639
the amount that my employers fortunately

00:05:20,139 --> 00:05:24,130
were able to procure for me but also

00:05:21,639 --> 00:05:25,990
they have a cost from the physical and

00:05:24,130 --> 00:05:29,080
even environmental if you want to extend

00:05:25,990 --> 00:05:30,850
to that right and so I said alright a

00:05:29,080 --> 00:05:32,139
lot of vendors have tried to do this a

00:05:30,850 --> 00:05:34,240
lot of people have tried to do this

00:05:32,139 --> 00:05:35,830
virtual development experience right a

00:05:34,240 --> 00:05:38,139
development environment or a desktop

00:05:35,830 --> 00:05:40,389
environment but let me try to do it

00:05:38,139 --> 00:05:42,669
myself because I like he spoke lovingly

00:05:40,389 --> 00:05:44,650
crafted development environments and so

00:05:42,669 --> 00:05:47,200
I want mine to be bespoke lovingly

00:05:44,650 --> 00:05:49,450
crafted via pipeline so why not make

00:05:47,200 --> 00:05:51,310
that extension right so let me reduce

00:05:49,450 --> 00:05:55,690
the friction of how I deliver said

00:05:51,310 --> 00:05:57,430
virtual desktop with my lovely pipeline

00:05:55,690 --> 00:05:59,590
in continuous delivery right so let me

00:05:57,430 --> 00:06:01,150
reduce that friction a bit if I can

00:05:59,590 --> 00:06:03,310
predictably and reliably create a

00:06:01,150 --> 00:06:05,530
development environment on demand maybe

00:06:03,310 --> 00:06:07,300
I'll be incentivized to use it and I'll

00:06:05,530 --> 00:06:09,280
just run it on one tablet so I don't

00:06:07,300 --> 00:06:11,110
have to carry two laptops now I have to

00:06:09,280 --> 00:06:12,970
carry one laptop and my tablet so I can

00:06:11,110 --> 00:06:15,190
watch Netflix but at least I could run

00:06:12,970 --> 00:06:17,070
one development environment on my tablet

00:06:15,190 --> 00:06:19,500
right so let's see if this is possible

00:06:17,070 --> 00:06:22,270
so this is what Remote Desktop

00:06:19,500 --> 00:06:24,010
continuously deliver looks like I built

00:06:22,270 --> 00:06:25,840
an immutable image for my desktop tools

00:06:24,010 --> 00:06:28,300
yes slightly over engineered but I had

00:06:25,840 --> 00:06:29,740
to do it and so then I was like alright

00:06:28,300 --> 00:06:31,900
now I have to deploy to a region on my

00:06:29,740 --> 00:06:33,880
choice the reason why I choose region of

00:06:31,900 --> 00:06:35,260
choice is because I'm traveling a lot so

00:06:33,880 --> 00:06:37,419
if I'm in Europe I want to actually

00:06:35,260 --> 00:06:39,729
deploy my development environment in

00:06:37,419 --> 00:06:41,349
Europe and then I want to run it on my

00:06:39,729 --> 00:06:43,660
tablet so I can travel lighter and

00:06:41,349 --> 00:06:45,880
reduce the overall cost right so let's

00:06:43,660 --> 00:06:48,099
see if I can do this so the first thing

00:06:45,880 --> 00:06:49,479
was the immutable image of desktop tools

00:06:48,099 --> 00:06:51,849
all right so

00:06:49,479 --> 00:06:55,509
this is interesting right I am an IDE

00:06:51,849 --> 00:06:57,520
user I have to admit that I like IDs so

00:06:55,509 --> 00:06:59,860
I was like alright I have to find a

00:06:57,520 --> 00:07:02,229
desktop environment with a GUI so I can

00:06:59,860 --> 00:07:03,669
use my IDE and you know manipulate

00:07:02,229 --> 00:07:06,939
between browsers because I like keeping

00:07:03,669 --> 00:07:08,499
browser tabs ad infinitum so I decided

00:07:06,939 --> 00:07:09,999
I'd try chrome remote desktop it's

00:07:08,499 --> 00:07:12,819
actually a really nice tool I highly

00:07:09,999 --> 00:07:15,550
recommend and what it would do is create

00:07:12,819 --> 00:07:17,110
kind of a remote desktop binary that you

00:07:15,550 --> 00:07:19,599
can actually run and it connects allows

00:07:17,110 --> 00:07:21,460
you connects so pretty simple and then I

00:07:19,599 --> 00:07:23,080
like virtual studio code and all of its

00:07:21,460 --> 00:07:25,779
associated extensions I have a lot of

00:07:23,080 --> 00:07:27,279
extensions I like go Lane get terraform

00:07:25,779 --> 00:07:28,960
and docker those are the ones that I use

00:07:27,279 --> 00:07:30,819
the most and that's why I wanted to

00:07:28,960 --> 00:07:32,409
start with those and see and build up

00:07:30,819 --> 00:07:35,409
what I got so we'll see what happens

00:07:32,409 --> 00:07:37,539
right and I need to build some scripts

00:07:35,409 --> 00:07:40,300
to install the packages but the problem

00:07:37,539 --> 00:07:40,839
is I'm notoriously bad at bash scripting

00:07:40,300 --> 00:07:43,689
sometimes

00:07:40,839 --> 00:07:45,430
so before I needed the cloud I decided

00:07:43,689 --> 00:07:47,710
I'd test those scripts with vagrant so

00:07:45,430 --> 00:07:49,990
I'm using the original Hoshi Corp

00:07:47,710 --> 00:07:51,339
tooling vagrant right to basically

00:07:49,990 --> 00:07:52,689
determine whether or not these scripts

00:07:51,339 --> 00:07:53,139
even run to completion in the first

00:07:52,689 --> 00:07:55,479
place

00:07:53,139 --> 00:07:57,129
and I also could actually change the

00:07:55,479 --> 00:07:59,259
privilege level so that it would mimic

00:07:57,129 --> 00:08:01,569
the kinds of things that I would do in

00:07:59,259 --> 00:08:03,729
production quote-unquote which is on my

00:08:01,569 --> 00:08:05,080
development environment so basically all

00:08:03,729 --> 00:08:07,389
these scripts install a bunch of stuff

00:08:05,080 --> 00:08:08,860
the repository will be listed later so

00:08:07,389 --> 00:08:11,110
if you're curious what's in them you can

00:08:08,860 --> 00:08:12,520
feel free to take a look so then I was

00:08:11,110 --> 00:08:14,919
like all right I'll continuously deliver

00:08:12,520 --> 00:08:16,629
the image it's use vagrant up for a

00:08:14,919 --> 00:08:18,219
local test I was going to try to put

00:08:16,629 --> 00:08:19,539
vagrant on an external machine and run

00:08:18,219 --> 00:08:19,749
it but I didn't get a chance to do that

00:08:19,539 --> 00:08:22,509
yet

00:08:19,749 --> 00:08:24,310
and then I commit push any changes

00:08:22,509 --> 00:08:26,560
circle see I then use this Packer to

00:08:24,310 --> 00:08:29,319
build it so Packer is another high Sheik

00:08:26,560 --> 00:08:31,209
rip tool it bakes a bunch of images and

00:08:29,319 --> 00:08:34,750
so Packer just calls the same script and

00:08:31,209 --> 00:08:35,250
pushes it into Google so it's simple

00:08:34,750 --> 00:08:38,229
right

00:08:35,250 --> 00:08:40,449
it looks literally you know three steps

00:08:38,229 --> 00:08:42,339
right here so it's not that bad it

00:08:40,449 --> 00:08:44,529
basically has some setup stuff I do a

00:08:42,339 --> 00:08:46,569
quick unit test and I'll explain my unit

00:08:44,529 --> 00:08:49,209
testing later because it's flew the Flex

00:08:46,569 --> 00:08:50,800
it's not really a unit test and then I

00:08:49,209 --> 00:08:53,290
build it and test it there is actually a

00:08:50,800 --> 00:08:55,600
test script internal to my Packer build

00:08:53,290 --> 00:08:57,970
and internal to my vagrant build it was

00:08:55,600 --> 00:08:59,920
originally an inspector OB just took too

00:08:57,970 --> 00:09:01,850
long to install and build so I just

00:08:59,920 --> 00:09:04,730
decided to keep it as bash

00:09:01,850 --> 00:09:06,020
all right so that's a that's the simple

00:09:04,730 --> 00:09:08,060
stuff right that's Packer that's

00:09:06,020 --> 00:09:09,560
deploying in a beautiful image next was

00:09:08,060 --> 00:09:11,360
a little more complicated how do I

00:09:09,560 --> 00:09:12,460
deploy to a region on my choice in a

00:09:11,360 --> 00:09:15,260
reliable way

00:09:12,460 --> 00:09:17,330
all right so in order for you to do

00:09:15,260 --> 00:09:19,510
successful continuous delivery you need

00:09:17,330 --> 00:09:22,010
some formulation of testing right and

00:09:19,510 --> 00:09:23,930
testing is hard in infrastructure I

00:09:22,010 --> 00:09:25,220
acknowledge that everybody has you know

00:09:23,930 --> 00:09:26,840
struggles when you try to do

00:09:25,220 --> 00:09:28,640
infrastructure especially when it's a

00:09:26,840 --> 00:09:31,100
remote desktop because there's some

00:09:28,640 --> 00:09:33,140
manual steps so what tests could I

00:09:31,100 --> 00:09:35,690
reasonably make within my continuous

00:09:33,140 --> 00:09:37,670
delivery pipeline well I could make a

00:09:35,690 --> 00:09:40,160
unit test right so the idea is that

00:09:37,670 --> 00:09:42,110
maybe what I could do was build some

00:09:40,160 --> 00:09:43,850
tests that check if maybe my runtime

00:09:42,110 --> 00:09:46,250
environment was roughly what I expected

00:09:43,850 --> 00:09:48,020
it to be it's a little loose but

00:09:46,250 --> 00:09:49,760
contract tests were kind of important in

00:09:48,020 --> 00:09:51,170
this regard because I was making one

00:09:49,760 --> 00:09:53,480
external connection to actually

00:09:51,170 --> 00:09:55,370
terraform cloud and so I wanted to make

00:09:53,480 --> 00:09:57,020
sure that my inputs match my outputs

00:09:55,370 --> 00:09:59,090
right what I expected to pass the

00:09:57,020 --> 00:10:01,730
terraform cloud should be exactly what

00:09:59,090 --> 00:10:03,860
is in terraform cloud integration

00:10:01,730 --> 00:10:05,690
testing I was kind of like I don't

00:10:03,860 --> 00:10:07,100
really have anything for that I don't

00:10:05,690 --> 00:10:08,960
know what to do with that and then

00:10:07,100 --> 00:10:10,310
end-to-end was just gonna be me manually

00:10:08,960 --> 00:10:12,350
testing it because I could not figure

00:10:10,310 --> 00:10:14,750
out an automated testing way to actually

00:10:12,350 --> 00:10:16,790
do GUI clicks and stuff in desktop

00:10:14,750 --> 00:10:18,080
environment so that's something I got to

00:10:16,790 --> 00:10:19,700
learn but you know for them in the

00:10:18,080 --> 00:10:22,070
meantime I was like I could do unit and

00:10:19,700 --> 00:10:24,170
contract us right and now my unit tests

00:10:22,070 --> 00:10:28,700
are not actually a unit test sorry

00:10:24,170 --> 00:10:30,860
everybody so it's technically it does

00:10:28,700 --> 00:10:33,020
require external components right it

00:10:30,860 --> 00:10:34,790
checks if the runtime variables have

00:10:33,020 --> 00:10:36,880
been defined and my runtime variables I

00:10:34,790 --> 00:10:41,060
mean my pipeline or my environment so

00:10:36,880 --> 00:10:43,010
actually within what I like to do is and

00:10:41,060 --> 00:10:44,210
as you can see everybody can see that

00:10:43,010 --> 00:10:46,010
from back there

00:10:44,210 --> 00:10:49,490
as well I try to make it as big as

00:10:46,010 --> 00:10:51,860
possible and so basically the lovely

00:10:49,490 --> 00:10:53,720
part about making this unit test is that

00:10:51,860 --> 00:10:55,730
all it really does is check if the

00:10:53,720 --> 00:10:57,290
environment is defined right so let's

00:10:55,730 --> 00:10:59,690
make sure my Google application

00:10:57,290 --> 00:11:02,570
credentials are defined and my public

00:10:59,690 --> 00:11:04,610
key etc etc etc now all these things

00:11:02,570 --> 00:11:06,860
should run locally so I've test I've

00:11:04,610 --> 00:11:08,360
done my environment already so I've

00:11:06,860 --> 00:11:09,710
already like set these environment

00:11:08,360 --> 00:11:11,480
variables I'm just making sure that they

00:11:09,710 --> 00:11:13,589
even set right otherwise my pipeline

00:11:11,480 --> 00:11:15,569
passes and I'm just wasting my time

00:11:13,589 --> 00:11:16,889
and so I just want to make sure that

00:11:15,569 --> 00:11:17,670
that's set so that's my version of a

00:11:16,889 --> 00:11:19,740
unit test

00:11:17,670 --> 00:11:20,699
not exactly a unit test because it

00:11:19,740 --> 00:11:23,009
should be self-contained

00:11:20,699 --> 00:11:24,509
but you know it's at least helpful it

00:11:23,009 --> 00:11:25,980
gets me really fast feedback and that's

00:11:24,509 --> 00:11:28,529
the idea of having a unit test in the

00:11:25,980 --> 00:11:30,720
first place right all right so contract

00:11:28,529 --> 00:11:32,939
tests contract tests match actual output

00:11:30,720 --> 00:11:35,699
match actual outputs to expected inputs

00:11:32,939 --> 00:11:37,230
so this is very common in micro-services

00:11:35,699 --> 00:11:38,850
and what I said was like well I like

00:11:37,230 --> 00:11:40,410
doing this in infrastructure because

00:11:38,850 --> 00:11:42,180
there are common variables that all pass

00:11:40,410 --> 00:11:43,499
between infrastructure components and I

00:11:42,180 --> 00:11:45,870
need to make sure that they make sense

00:11:43,499 --> 00:11:48,449
so my contract tests actually look

00:11:45,870 --> 00:11:50,790
between terraform cloud which is my sass

00:11:48,449 --> 00:11:52,350
for running terraform and circle CI to

00:11:50,790 --> 00:11:54,629
make sure that they're actually they

00:11:52,350 --> 00:11:59,279
actually make sense right so if I take a

00:11:54,629 --> 00:12:01,439
look at my code once again and I look at

00:11:59,279 --> 00:12:03,420
my contract tests the idea is that I'm

00:12:01,439 --> 00:12:05,009
just going to check if the variables

00:12:03,420 --> 00:12:07,170
match now this was a really quick check

00:12:05,009 --> 00:12:09,990
if the number of variables is 8 and it's

00:12:07,170 --> 00:12:11,699
equal or less than to 8 there were more

00:12:09,990 --> 00:12:13,110
complicated checks except what happened

00:12:11,699 --> 00:12:14,819
was that I just didn't have a chance to

00:12:13,110 --> 00:12:17,069
fix them up as I was iterating on this

00:12:14,819 --> 00:12:18,660
so if I were to go back I would actually

00:12:17,069 --> 00:12:20,730
check for some very specific variables

00:12:18,660 --> 00:12:22,920
instead but the idea is that it calls

00:12:20,730 --> 00:12:24,980
out to a SAS which is in terraform cloud

00:12:22,920 --> 00:12:29,309
and checks if the variables match right

00:12:24,980 --> 00:12:34,170
so that's a quick contract test let me

00:12:29,309 --> 00:12:37,500
go back to this sorry oh ok alright so

00:12:34,170 --> 00:12:39,449
next deploy the changes right I've got a

00:12:37,500 --> 00:12:41,639
pipeline I've done some testing just to

00:12:39,449 --> 00:12:44,100
make sure my pipelines are ready so let

00:12:41,639 --> 00:12:45,839
me get ready to deploy some changes so

00:12:44,100 --> 00:12:46,259
manually I have to get this refreshed

00:12:45,839 --> 00:12:48,329
okay

00:12:46,259 --> 00:12:50,850
the thing about chrome remote desktop is

00:12:48,329 --> 00:12:53,399
that you actually have to get this Oh oo

00:12:50,850 --> 00:12:53,970
3 fresh token and it its lifetime is

00:12:53,399 --> 00:12:55,620
ambiguous

00:12:53,970 --> 00:12:57,029
I haven't actually fully figured out how

00:12:55,620 --> 00:12:58,319
to reverse engineer this yet and I've

00:12:57,029 --> 00:12:59,610
been doing it for about two months now

00:12:58,319 --> 00:13:01,829
but I

00:12:59,610 --> 00:13:04,199
you have to go get this manually and

00:13:01,829 --> 00:13:05,610
then put it into your variables in order

00:13:04,199 --> 00:13:08,399
for you to initialize your remote

00:13:05,610 --> 00:13:10,079
desktop so basically I get this refresh

00:13:08,399 --> 00:13:11,759
token I pop it into my circle CI

00:13:10,079 --> 00:13:14,399
environment variables and I just trigger

00:13:11,759 --> 00:13:18,540
the pipeline and it runs and it takes

00:13:14,399 --> 00:13:20,249
actually about of three minutes or so to

00:13:18,540 --> 00:13:23,220
spit up so if you actually look at this

00:13:20,249 --> 00:13:25,050
pipeline here which I ran earlier today

00:13:23,220 --> 00:13:27,670
it takes about you know three to five

00:13:25,050 --> 00:13:30,630
minutes or so which is kind of neat

00:13:27,670 --> 00:13:34,030
so not so bad right not so bad at all

00:13:30,630 --> 00:13:35,860
alright so this is what basically I

00:13:34,030 --> 00:13:37,900
decided to do it was like alright great

00:13:35,860 --> 00:13:40,060
I've got this pipeline I choose a region

00:13:37,900 --> 00:13:42,130
in this case I'm in u.s. East four

00:13:40,060 --> 00:13:44,260
that's the one I'm closest to right now

00:13:42,130 --> 00:13:45,880
so I'll just actually run it through and

00:13:44,260 --> 00:13:48,340
apply it I've already done this before

00:13:45,880 --> 00:13:50,380
because it takes time alright so the

00:13:48,340 --> 00:13:53,170
next step was let me run it on my laptop

00:13:50,380 --> 00:13:55,090
the idea was to travel lighter and on my

00:13:53,170 --> 00:13:58,360
tablet the idea was the travel lighter

00:13:55,090 --> 00:14:01,450
and reduced cost and this kind of looks

00:13:58,360 --> 00:14:03,580
actually pretty smudge like this I

00:14:01,450 --> 00:14:05,590
actually think it will work today so I

00:14:03,580 --> 00:14:08,710
don't think this needs to happen there

00:14:05,590 --> 00:14:10,600
but if I actually go in here when I run

00:14:08,710 --> 00:14:13,590
the pipeline it just comes up with this

00:14:10,600 --> 00:14:16,150
which is rosemary remote u.s. East for a

00:14:13,590 --> 00:14:18,610
which for those of you who probably have

00:14:16,150 --> 00:14:20,440
tried to do some kind of virtual desktop

00:14:18,610 --> 00:14:22,150
thing you're like wait you just ran a

00:14:20,440 --> 00:14:25,780
pipeline and created yourself a virtual

00:14:22,150 --> 00:14:27,850
desktop yes I did do that and so really

00:14:25,780 --> 00:14:31,600
when it runs it pops up like this I just

00:14:27,850 --> 00:14:33,580
click on it and I just enter my pin

00:14:31,600 --> 00:14:35,860
which I've predefined and it's secured

00:14:33,580 --> 00:14:38,350
in terraform cloud which is my SAS that

00:14:35,860 --> 00:14:41,260
runs terraform a Keira form config

00:14:38,350 --> 00:14:44,140
basically and as you can see there is a

00:14:41,260 --> 00:14:48,910
full desktop environment here it's kind

00:14:44,140 --> 00:14:51,130
of you know it's Linux it's xfce and and

00:14:48,910 --> 00:14:54,510
so here I just have my virtual studio

00:14:51,130 --> 00:14:58,690
code I have docker on here which runs

00:14:54,510 --> 00:15:01,210
and I have all of my go binaries as well

00:14:58,690 --> 00:15:02,620
so what I'll do is I'll check out code

00:15:01,210 --> 00:15:06,070
and I'll just work in this environment

00:15:02,620 --> 00:15:08,830
here so this is actually clean and I do

00:15:06,070 --> 00:15:10,390
that every time now the downside is I

00:15:08,830 --> 00:15:12,700
actually didn't bring my iPad because

00:15:10,390 --> 00:15:15,250
like I said back issues so what I ended

00:15:12,700 --> 00:15:17,560
up I was like oh you know let's see if

00:15:15,250 --> 00:15:19,540
this works on my phone because the app

00:15:17,560 --> 00:15:21,880
is available an app for chrome remote

00:15:19,540 --> 00:15:24,160
desktop is on Apple Store so it's like

00:15:21,880 --> 00:15:24,850
let me try it on Android I'm actually I

00:15:24,160 --> 00:15:26,350
don't

00:15:24,850 --> 00:15:27,970
unfortunately there's no camera for

00:15:26,350 --> 00:15:29,740
anybody to see this but I can actually

00:15:27,970 --> 00:15:32,260
authenticate through my phone too now

00:15:29,740 --> 00:15:34,410
it's really hard to type docker PS on

00:15:32,260 --> 00:15:36,910
the phone because there's no keyboard

00:15:34,410 --> 00:15:38,410
but it what's really cool is that if I

00:15:36,910 --> 00:15:40,250
did want to reference something or if I

00:15:38,410 --> 00:15:42,410
did forget some code

00:15:40,250 --> 00:15:44,000
that I didn't push I have some aliases

00:15:42,410 --> 00:15:46,550
that I can set and then it will actually

00:15:44,000 --> 00:15:48,200
allow me to push it from here so what's

00:15:46,550 --> 00:15:50,000
really fun about this is that you know

00:15:48,200 --> 00:15:52,490
if I actually they actually had to shut

00:15:50,000 --> 00:15:54,410
down in instants then I would go back to

00:15:52,490 --> 00:15:56,810
my phone and just be able to do it so

00:15:54,410 --> 00:15:58,670
it's a pretty neat thing to do I was

00:15:56,810 --> 00:16:01,880
like oh this is pretty fun I actually

00:15:58,670 --> 00:16:04,160
kind of enjoyed this um and so the only

00:16:01,880 --> 00:16:05,540
caveat to the whole iPad thing was that

00:16:04,160 --> 00:16:07,880
the modifier keys don't work and

00:16:05,540 --> 00:16:09,290
something I didn't really recognize when

00:16:07,880 --> 00:16:11,060
I first did this was the interaction

00:16:09,290 --> 00:16:15,020
between hardware and other hardware as

00:16:11,060 --> 00:16:16,940
is the case and the modifier keys on the

00:16:15,020 --> 00:16:18,890
iPad Bluetooth keyboard for some reason

00:16:16,940 --> 00:16:20,690
didn't work so I'm still debugging why

00:16:18,890 --> 00:16:24,500
the keyboard configuration isn't quite

00:16:20,690 --> 00:16:26,090
right I'd love to automate all of the

00:16:24,500 --> 00:16:27,980
end to end testing on this just to make

00:16:26,090 --> 00:16:30,410
sure it's good so if anybody has any

00:16:27,980 --> 00:16:33,530
ideas on how to automate GUI through GUI

00:16:30,410 --> 00:16:35,510
on a Linux you know a Linux operating

00:16:33,530 --> 00:16:38,240
system I would be really interested to

00:16:35,510 --> 00:16:41,420
hear all right so this is the fun part

00:16:38,240 --> 00:16:43,310
right cost optimization I don't use this

00:16:41,420 --> 00:16:44,960
all the time that's not the idea the

00:16:43,310 --> 00:16:46,880
idea is that I use this when I travel

00:16:44,960 --> 00:16:48,670
because it's a lot easier to keep

00:16:46,880 --> 00:16:52,250
everything self-contained in one place

00:16:48,670 --> 00:16:54,140
and so I only use it on demand which

00:16:52,250 --> 00:16:56,600
means it's really amenable to this whole

00:16:54,140 --> 00:16:58,550
cloud thing right so I schedule a weekly

00:16:56,600 --> 00:17:01,010
shutdown it's just a simple cron job in

00:16:58,550 --> 00:17:02,720
circle CI that does it and it really

00:17:01,010 --> 00:17:04,939
forces me to build better development

00:17:02,720 --> 00:17:06,290
discipline we talked about how being in

00:17:04,939 --> 00:17:07,760
continuous delivery you wanted to commit

00:17:06,290 --> 00:17:09,380
small you wanted to commit atomically

00:17:07,760 --> 00:17:11,030
and you want to commit frequently and

00:17:09,380 --> 00:17:13,069
while building develop better

00:17:11,030 --> 00:17:15,079
development habits on a machine that

00:17:13,069 --> 00:17:16,819
shuts down every week on you is probably

00:17:15,079 --> 00:17:18,620
a good thing right so I don't have

00:17:16,819 --> 00:17:21,290
anything locally that's just committed

00:17:18,620 --> 00:17:22,670
there and plus my tabs you know I'm like

00:17:21,290 --> 00:17:24,199
if forcing me to clean up my tabs

00:17:22,670 --> 00:17:27,140
because I have like usually 100 tabs

00:17:24,199 --> 00:17:29,120
open so that's what happens on my cost

00:17:27,140 --> 00:17:31,850
optimization it comes out to about eight

00:17:29,120 --> 00:17:33,320
dollars if I run it for a week all right

00:17:31,850 --> 00:17:35,120
so there's a lot of tech debt in this

00:17:33,320 --> 00:17:36,560
right as an any delivery project

00:17:35,120 --> 00:17:39,380
software delivery project there's

00:17:36,560 --> 00:17:41,990
usually some kind of tech tip and so I

00:17:39,380 --> 00:17:43,490
have secrets yes they're not exposed but

00:17:41,990 --> 00:17:44,720
they could be better so there are some

00:17:43,490 --> 00:17:46,190
integrations that I would love to make

00:17:44,720 --> 00:17:48,260
I'd love to be able to bootstrap this

00:17:46,190 --> 00:17:50,570
and I have my github keys and stuff and

00:17:48,260 --> 00:17:51,650
everything there which is cool I'd love

00:17:50,570 --> 00:17:52,970
to automate that retrieval of the

00:17:51,650 --> 00:17:53,910
Refresh token I've been trying to

00:17:52,970 --> 00:17:56,640
reverse engineer that

00:17:53,910 --> 00:17:57,810
for a while so you know it I'll let you

00:17:56,640 --> 00:18:00,210
know when I figure that out

00:17:57,810 --> 00:18:02,100
the security scanning piece I'd love to

00:18:00,210 --> 00:18:03,330
add to the Packer pipeline and mostly

00:18:02,100 --> 00:18:04,740
because I'm used to it

00:18:03,330 --> 00:18:07,260
so I usually add like a security

00:18:04,740 --> 00:18:09,720
scanning bench marking stuff at the end

00:18:07,260 --> 00:18:12,510
so I'll scan the VM or I'll scanned kind

00:18:09,720 --> 00:18:14,040
of the packages available and I need to

00:18:12,510 --> 00:18:16,890
lock down the networking right now kind

00:18:14,040 --> 00:18:18,090
of just lets you log in and I need to do

00:18:16,890 --> 00:18:20,610
some testing on that right so those

00:18:18,090 --> 00:18:22,580
would be tests after the fact after I've

00:18:20,610 --> 00:18:24,630
spun up my dev environment right

00:18:22,580 --> 00:18:26,640
auditing logins I think this isn't

00:18:24,630 --> 00:18:28,320
something that is more was more relevant

00:18:26,640 --> 00:18:30,750
whenever I was doing this with clients

00:18:28,320 --> 00:18:32,820
right so I wanted to make sure that I

00:18:30,750 --> 00:18:34,620
had audit logs ready to say like no I

00:18:32,820 --> 00:18:36,900
didn't move any of this off this machine

00:18:34,620 --> 00:18:39,510
it's still isolated within this virtual

00:18:36,900 --> 00:18:40,740
environment better lifecycle management

00:18:39,510 --> 00:18:41,730
I think I could get really cool with

00:18:40,740 --> 00:18:43,170
this where it just stinks with my

00:18:41,730 --> 00:18:45,390
calendar and says if you're going to be

00:18:43,170 --> 00:18:46,830
in Europe for three days spin it up for

00:18:45,390 --> 00:18:48,240
the four days right with some buffer

00:18:46,830 --> 00:18:49,830
time so of course you know

00:18:48,240 --> 00:18:53,160
over-engineering right but lovingly

00:18:49,830 --> 00:18:54,870
bespoke crafted environment here costs

00:18:53,160 --> 00:18:56,550
estimation and there's actually cost

00:18:54,870 --> 00:18:58,230
estimation in terraform cloud which is

00:18:56,550 --> 00:19:01,020
the sass I didn't show much of it today

00:18:58,230 --> 00:19:02,490
but there is cost estimation so maybe it

00:19:01,020 --> 00:19:04,650
would be cool to just say like hey it

00:19:02,490 --> 00:19:06,900
will cost me like $8 or something for

00:19:04,650 --> 00:19:08,190
the week again this is similar to

00:19:06,900 --> 00:19:09,990
developing a product similar to

00:19:08,190 --> 00:19:11,310
developing a service right you do have

00:19:09,990 --> 00:19:12,780
some things that you just decide you're

00:19:11,310 --> 00:19:14,400
not going to do for a little bit until

00:19:12,780 --> 00:19:16,560
you actually have time to do it but you

00:19:14,400 --> 00:19:17,880
get the functionality done and you go

00:19:16,560 --> 00:19:20,460
back and you look at some of what you

00:19:17,880 --> 00:19:22,830
need to do later all right so is this

00:19:20,460 --> 00:19:25,560
frictionless well it took a while to set

00:19:22,830 --> 00:19:27,390
up and it still has some steps to go

00:19:25,560 --> 00:19:29,190
from a security standpoint I feel like

00:19:27,390 --> 00:19:31,440
if you were to ever do this and address

00:19:29,190 --> 00:19:32,730
every single security question and ask

00:19:31,440 --> 00:19:34,650
that everybody asked of you from a

00:19:32,730 --> 00:19:37,560
device management standpoint you still

00:19:34,650 --> 00:19:39,060
need to do some auditing steps developer

00:19:37,560 --> 00:19:40,680
productivity which is like the core of

00:19:39,060 --> 00:19:43,110
continuous delivery to a certain degree

00:19:40,680 --> 00:19:45,060
and DevOps there are some pie there are

00:19:43,110 --> 00:19:47,100
pipelines that I could do this in some

00:19:45,060 --> 00:19:48,660
pipelines and I did it with some manual

00:19:47,100 --> 00:19:50,430
steps but for the most part I just sort

00:19:48,660 --> 00:19:53,640
of did it and then pushed and it was not

00:19:50,430 --> 00:19:55,260
and do I love my development machine

00:19:53,640 --> 00:19:57,540
well I have my IDE which I'm pretty

00:19:55,260 --> 00:19:59,850
happy about I have you know a browser

00:19:57,540 --> 00:20:01,320
and an integrated environment the

00:19:59,850 --> 00:20:04,230
self-contained that I can just you know

00:20:01,320 --> 00:20:06,180
tab and then come back to or I can just

00:20:04,230 --> 00:20:07,040
develop but I think what's really nice

00:20:06,180 --> 00:20:08,230
about it for me

00:20:07,040 --> 00:20:10,520
me personally is that such a

00:20:08,230 --> 00:20:12,620
distraction-free development environment

00:20:10,520 --> 00:20:14,390
what's really weird about my laptop is

00:20:12,620 --> 00:20:16,310
that I have slack I have email I have

00:20:14,390 --> 00:20:18,800
all these things right notifications

00:20:16,310 --> 00:20:20,330
that come in and interrupt me right and

00:20:18,800 --> 00:20:23,690
from kind of a development standpoint

00:20:20,330 --> 00:20:25,040
it's not terribly productive and so what

00:20:23,690 --> 00:20:27,710
I'll do is well kind of like push and

00:20:25,040 --> 00:20:29,630
forget this for maybe like you know ten

00:20:27,710 --> 00:20:31,460
minutes I'll go get a coffee come back I

00:20:29,630 --> 00:20:32,840
get this environment and I get to work

00:20:31,460 --> 00:20:35,360
for a couple hours

00:20:32,840 --> 00:20:38,180
you know without slack or notifications

00:20:35,360 --> 00:20:39,830
bombarding me which is kind of nice and

00:20:38,180 --> 00:20:42,710
it's really good on trains I did it

00:20:39,830 --> 00:20:44,000
yesterday cuz you know trains you don't

00:20:42,710 --> 00:20:46,190
really want to look at your slack anyway

00:20:44,000 --> 00:20:48,170
but reduced-cost

00:20:46,190 --> 00:20:50,270
um was it really reduced cost at the end

00:20:48,170 --> 00:20:51,710
it was kind of nice cuz because of the

00:20:50,270 --> 00:20:53,810
back issue they recommended I get a

00:20:51,710 --> 00:20:56,810
smaller laptop like a really small

00:20:53,810 --> 00:20:59,060
laptop and the problem was like I didn't

00:20:56,810 --> 00:21:01,190
want to pay for the laptop right there

00:20:59,060 --> 00:21:02,570
were better things I could be doing so I

00:21:01,190 --> 00:21:04,940
was like I don't want to pay for this

00:21:02,570 --> 00:21:06,530
really expensive tiny laptop and just

00:21:04,940 --> 00:21:09,410
because of this back issue I've already

00:21:06,530 --> 00:21:11,240
done enough and so I said well what if I

00:21:09,410 --> 00:21:12,860
did this and I did this on my iPad and

00:21:11,240 --> 00:21:15,500
the answer is actually it does come out

00:21:12,860 --> 00:21:16,760
to a reduced costs over time um I could

00:21:15,500 --> 00:21:18,050
give you the exact numbers I didn't put

00:21:16,760 --> 00:21:19,670
them on the slide I just ran them last

00:21:18,050 --> 00:21:22,280
night but it was really interesting

00:21:19,670 --> 00:21:24,560
because it ended up kind of helping me

00:21:22,280 --> 00:21:26,120
understand what was truly on demand what

00:21:24,560 --> 00:21:27,950
are the things that I actually needed to

00:21:26,120 --> 00:21:30,260
develop productively and I didn't

00:21:27,950 --> 00:21:32,540
necessarily need the tiny laptop that

00:21:30,260 --> 00:21:34,820
cost a lot of money so it was pretty

00:21:32,540 --> 00:21:36,680
much good enough for me and the point

00:21:34,820 --> 00:21:38,630
about all of this and why I brought it

00:21:36,680 --> 00:21:40,520
all up in the first place was that for

00:21:38,630 --> 00:21:42,620
me personally the reason why I did this

00:21:40,520 --> 00:21:45,080
exercise was that it was me trying to do

00:21:42,620 --> 00:21:46,370
better right and DevOps is about trying

00:21:45,080 --> 00:21:48,620
to do better and empowering others

00:21:46,370 --> 00:21:50,840
should do better too right so it's about

00:21:48,620 --> 00:21:54,680
constantly figuring out what can you do

00:21:50,840 --> 00:21:56,690
to improve either your lifestyle in some

00:21:54,680 --> 00:21:58,520
regard as a developer or even someone

00:21:56,690 --> 00:22:00,320
else's ability to get development

00:21:58,520 --> 00:22:02,000
experience good development experiences

00:22:00,320 --> 00:22:03,830
and I think this is a really cool

00:22:02,000 --> 00:22:05,990
exercise that I did that created a

00:22:03,830 --> 00:22:07,820
lovingly bespoke environment but also

00:22:05,990 --> 00:22:09,350
extends to other people so if you would

00:22:07,820 --> 00:22:11,030
like to create your own lovingly bespoke

00:22:09,350 --> 00:22:13,970
environment via continuous delivery you

00:22:11,030 --> 00:22:16,340
could also do that too and while I may

00:22:13,970 --> 00:22:18,890
never actually go through 3000 life look

00:22:16,340 --> 00:22:19,549
at 3000 laptops in my lifetime 3000

00:22:18,890 --> 00:22:20,899
laptops

00:22:19,549 --> 00:22:23,360
the equivalent weight to one Asian

00:22:20,899 --> 00:22:25,340
elephant well I may never go through

00:22:23,360 --> 00:22:27,049
3000 laptops in my lifetime a lot of

00:22:25,340 --> 00:22:29,059
companies do they go through thousands

00:22:27,049 --> 00:22:30,679
and thousands of these laptops and you

00:22:29,059 --> 00:22:31,100
go through lots of these of devices

00:22:30,679 --> 00:22:32,720
right

00:22:31,100 --> 00:22:35,840
just because you say I need to upgrade

00:22:32,720 --> 00:22:38,629
and it's better Hardware etc and well

00:22:35,840 --> 00:22:40,249
you know cumulatively actually if we all

00:22:38,629 --> 00:22:42,320
think about not necessarily getting the

00:22:40,249 --> 00:22:44,059
new laptop and maybe still investing in

00:22:42,320 --> 00:22:45,889
some lovingly crafted bespoke

00:22:44,059 --> 00:22:47,960
environments deliver through continuous

00:22:45,889 --> 00:22:49,190
delivery for yourself you know you might

00:22:47,960 --> 00:22:51,289
find out that you can save a couple

00:22:49,190 --> 00:22:52,989
Asian elephants too or you can at least

00:22:51,289 --> 00:22:57,980
enjoy them at the zoo

00:22:52,989 --> 00:22:59,720
all right so if you have any or you have

00:22:57,980 --> 00:23:01,609
any inkling to go through improve on

00:22:59,720 --> 00:23:02,600
this you're curious you can check out

00:23:01,609 --> 00:23:04,879
some of these links here

00:23:02,600 --> 00:23:06,409
kudos to a lot of the teams and tools

00:23:04,879 --> 00:23:08,840
that I have actually featured here

00:23:06,409 --> 00:23:10,730
chrome remote desktop hacker builder

00:23:08,840 --> 00:23:12,169
terraform cloud vias code circle CI all

00:23:10,730 --> 00:23:14,330
of them are great tools that I use in

00:23:12,169 --> 00:23:16,239
combination and hack it all together so

00:23:14,330 --> 00:23:18,759
I can run around with no laptop at all

00:23:16,239 --> 00:23:21,859
not the case I have a laptop right now

00:23:18,759 --> 00:23:23,809
and if you ever have any questions you

00:23:21,859 --> 00:23:25,549
can feel free to shoot me a message and

00:23:23,809 --> 00:23:27,379
and you could take a look at the

00:23:25,549 --> 00:23:32,289
repository listed up here I'll have the

00:23:27,379 --> 00:23:32,289
link to this deck so thank you very much

00:23:34,239 --> 00:23:38,450
so when you're considering doing a

00:23:36,980 --> 00:23:40,489
remote virtual desktop did you consider

00:23:38,450 --> 00:23:43,580
an alternative like the vs code remote

00:23:40,489 --> 00:23:46,009
or something like a clichÃ© yes at the

00:23:43,580 --> 00:23:48,679
time vs code didn't have the features

00:23:46,009 --> 00:23:50,989
available to do it so this was kind of

00:23:48,679 --> 00:23:52,549
what I at least what I settled on part

00:23:50,989 --> 00:23:55,100
of the other thing that I enjoyed was

00:23:52,549 --> 00:23:56,330
having kind of the browser experience

00:23:55,100 --> 00:23:58,789
that I could kind of bundle together

00:23:56,330 --> 00:24:00,980
right so all of the things that I would

00:23:58,789 --> 00:24:03,529
do on my laptop are very similar to this

00:24:00,980 --> 00:24:05,389
machine so I would open up Chrome for

00:24:03,529 --> 00:24:07,700
example and browse and then I would go

00:24:05,389 --> 00:24:09,259
to vs code so all of my hotkeys remain

00:24:07,700 --> 00:24:11,840
the same all of the keyboarding kind of

00:24:09,259 --> 00:24:14,239
remain the same um at least personally I

00:24:11,840 --> 00:24:16,309
get used to my hotkeys which is again

00:24:14,239 --> 00:24:19,070
you know lovingly crafted bespoke sort

00:24:16,309 --> 00:24:21,169
of thing and so I like mapping them and

00:24:19,070 --> 00:24:23,119
continuing to use them so that's why I

00:24:21,169 --> 00:24:24,710
ended up doing this but actually I've

00:24:23,119 --> 00:24:26,149
been really impressed with a lot of the

00:24:24,710 --> 00:24:27,710
features coming out of yes code so

00:24:26,149 --> 00:24:34,330
that's probably something a lot easier

00:24:27,710 --> 00:24:34,330
to use any more questions

00:24:36,260 --> 00:24:42,660
okay cool thank you

00:24:38,990 --> 00:24:55,959
[Applause]

00:24:42,660 --> 00:24:55,959

YouTube URL: https://www.youtube.com/watch?v=1MUWKTmAvo4


