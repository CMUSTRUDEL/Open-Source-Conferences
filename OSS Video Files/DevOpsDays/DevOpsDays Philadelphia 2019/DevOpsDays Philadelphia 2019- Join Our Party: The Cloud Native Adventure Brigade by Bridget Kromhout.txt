Title: DevOpsDays Philadelphia 2019- Join Our Party: The Cloud Native Adventure Brigade by Bridget Kromhout
Publication date: 2019-11-03
Playlist: DevOpsDays Philadelphia 2019
Description: 
	DevOpsDays Philadelphia 2019- Join Our Party: The Cloud Native Adventure Brigade by Bridget Kromhout


“In any team you need a tank, a healer, a damage dealer, someone with crowd control abilities, and another who knows iptables.” – OH by @jpetazzo, 2015

Complexity in our software installations increases over time; this is a law of physics (along with how “working in production” means “this will ideally last until the heat death of the universe”). Let’s talk about open source tools we can use for operable software on Kubernetes. Cloud native tooling fuels this whirlwind overview of how to gather your party of adventurers; you’ll leave with a clear picture of how to operate your software in a Kubernetes ecosystem (and avoid being eaten by a grue).
Captions: 
	00:00:00,410 --> 00:00:11,839
[Music]

00:00:14,260 --> 00:00:24,230
Hey all right okay

00:00:19,130 --> 00:00:27,590
hi I am Bridget Crump out and today I

00:00:24,230 --> 00:00:29,919
think probably most of you have been

00:00:27,590 --> 00:00:33,829
listening to exciting things about

00:00:29,919 --> 00:00:35,600
kubernetes and other computer things and

00:00:33,829 --> 00:00:38,540
kubernetes because that's where we are

00:00:35,600 --> 00:00:40,579
in the hype cycle right now so we're

00:00:38,540 --> 00:00:42,200
going to talk about that we're gonna do

00:00:40,579 --> 00:00:44,390
a whirlwind tour through a whole bunch

00:00:42,200 --> 00:00:46,910
of tools in the kubernetes ecosystem I

00:00:44,390 --> 00:00:49,190
have to use the obligatory second slide

00:00:46,910 --> 00:00:52,039
this let this obligatory second slide is

00:00:49,190 --> 00:00:54,469
also my test pattern slide I can I can

00:00:52,039 --> 00:00:57,679
tell if there's distortion on the screen

00:00:54,469 --> 00:01:01,249
or you know overscan or anything I live

00:00:57,679 --> 00:01:03,019
in Minneapolis and if I don't look

00:01:01,249 --> 00:01:04,990
familiar but I sound familiar you may

00:01:03,019 --> 00:01:08,570
have listened to arrested DevOps before

00:01:04,990 --> 00:01:10,670
I or I'm the head organizer of DevOps

00:01:08,570 --> 00:01:13,909
days actually more on that in a minute

00:01:10,670 --> 00:01:16,430
because that's kind of fun and I work at

00:01:13,909 --> 00:01:18,320
Microsoft and that's pretty much the

00:01:16,430 --> 00:01:19,700
only thing about Microsoft in this even

00:01:18,320 --> 00:01:20,960
though we do contribute to a lot of the

00:01:19,700 --> 00:01:25,100
open-source projects I'm going to talk

00:01:20,960 --> 00:01:26,870
about and quick word on DevOps days this

00:01:25,100 --> 00:01:29,630
is the 10th year the ten year

00:01:26,870 --> 00:01:33,320
anniversary and I think this is a

00:01:29,630 --> 00:01:36,080
testament to scaling organizations like

00:01:33,320 --> 00:01:38,450
you know Peter and Clinton and everyone

00:01:36,080 --> 00:01:41,240
here jumping in and building something

00:01:38,450 --> 00:01:43,460
local in their or in their area is why

00:01:41,240 --> 00:01:45,920
we've scaled like this that and

00:01:43,460 --> 00:01:48,830
documentation people did say what

00:01:45,920 --> 00:01:51,410
happened between 2015 and 2016 we wrote

00:01:48,830 --> 00:01:53,420
Docs so hey if that if you only take one

00:01:51,410 --> 00:01:55,640
thing from this talk like writing

00:01:53,420 --> 00:01:59,690
documentation lets you scale a lot more

00:01:55,640 --> 00:02:03,140
than just doing it yourself does okay so

00:01:59,690 --> 00:02:05,720
if you are looking for exciting tools

00:02:03,140 --> 00:02:08,060
you may go and look at the CN CF

00:02:05,720 --> 00:02:11,840
landscape and then you might back away

00:02:08,060 --> 00:02:13,940
slowly horrified and say absolutely not

00:02:11,840 --> 00:02:16,550
maybe I'll wait six more months maybe

00:02:13,940 --> 00:02:19,609
it'll be smaller spoiler alert it will

00:02:16,550 --> 00:02:22,959
not be smaller um but there they do also

00:02:19,609 --> 00:02:25,329
have the sans Jeff you know trail guide

00:02:22,959 --> 00:02:27,189
that it it turns out that it kind of

00:02:25,329 --> 00:02:29,709
looks a little bit like this and it's

00:02:27,189 --> 00:02:32,079
it's not anyone's fault that it's

00:02:29,709 --> 00:02:33,939
becoming that complex I mean it might be

00:02:32,079 --> 00:02:35,500
that people want to launch their own

00:02:33,939 --> 00:02:37,209
project instead of contributing to a

00:02:35,500 --> 00:02:39,010
project that exists please don't do that

00:02:37,209 --> 00:02:40,269
look and see if there's a project that

00:02:39,010 --> 00:02:42,099
you want to contribute to you before you

00:02:40,269 --> 00:02:44,170
launch something that is almost but not

00:02:42,099 --> 00:02:46,510
quite exactly what eight other people

00:02:44,170 --> 00:02:50,549
have already done um but I also think

00:02:46,510 --> 00:02:53,500
that we do have this tendency towards

00:02:50,549 --> 00:02:55,659
proliferation and chaos when left

00:02:53,500 --> 00:02:58,419
unchecked so a little bit of structure

00:02:55,659 --> 00:03:00,549
in the space is not terrible and the

00:02:58,419 --> 00:03:01,989
cloud native trail map which again like

00:03:00,549 --> 00:03:04,480
I'm still confused by the term cloud

00:03:01,989 --> 00:03:07,299
native but because really did any of us

00:03:04,480 --> 00:03:09,040
start here no but I mean maybe some

00:03:07,299 --> 00:03:11,169
people started their careers completely

00:03:09,040 --> 00:03:12,609
in the cloud but some of us are old and

00:03:11,169 --> 00:03:14,409
spent a lot of time with data centers in

00:03:12,609 --> 00:03:15,489
data centers being really cool being

00:03:14,409 --> 00:03:18,760
really happy that someone else is

00:03:15,489 --> 00:03:20,829
running a cloud now but this particular

00:03:18,760 --> 00:03:22,480
trail map it it this is only the first

00:03:20,829 --> 00:03:24,519
six points or so it goes on from here

00:03:22,480 --> 00:03:26,439
but I figure I will try to narrow the

00:03:24,519 --> 00:03:27,819
scope to just talk about a few tools in

00:03:26,439 --> 00:03:29,799
this space

00:03:27,819 --> 00:03:31,060
first I have to break it to you that

00:03:29,799 --> 00:03:33,760
containers are a lie

00:03:31,060 --> 00:03:35,169
I'm so sorry Alice goldfuss I think put

00:03:33,760 --> 00:03:37,479
it really well at devops days

00:03:35,169 --> 00:03:40,689
Minneapolis this year when she was like

00:03:37,479 --> 00:03:44,019
they're just processes that are stapled

00:03:40,689 --> 00:03:46,569
or nail-gun together they are C groups

00:03:44,019 --> 00:03:48,280
and namespaces and so if you're like I

00:03:46,569 --> 00:03:50,470
don't know what those are or care that's

00:03:48,280 --> 00:03:52,239
fine but basically your containers are

00:03:50,470 --> 00:03:53,139
features of the Linux kernel they are

00:03:52,239 --> 00:03:55,180
not magical

00:03:53,139 --> 00:03:56,859
they are not new they've been in this

00:03:55,180 --> 00:03:58,599
space a while if these were your

00:03:56,859 --> 00:04:02,530
textbooks in school then you are as old

00:03:58,599 --> 00:04:05,439
as I am and what I will say is that it's

00:04:02,530 --> 00:04:07,329
very easy for us to forget that there's

00:04:05,439 --> 00:04:12,180
been a lot of work in this space already

00:04:07,329 --> 00:04:14,680
and if you if you jumped in in you know

00:04:12,180 --> 00:04:16,090
2013 with docker that's awesome that is

00:04:14,680 --> 00:04:18,370
not the first implementation of

00:04:16,090 --> 00:04:21,940
containers it definitely is one that

00:04:18,370 --> 00:04:24,900
made it more usable than say LXE for the

00:04:21,940 --> 00:04:27,520
vast majority of us I will say that I

00:04:24,900 --> 00:04:30,220
while I am not from Philly I used to

00:04:27,520 --> 00:04:31,930
remote to a company here some of my

00:04:30,220 --> 00:04:33,889
former colleagues are here some of my

00:04:31,930 --> 00:04:35,650
former colleagues run this event

00:04:33,889 --> 00:04:39,379
and what we discovered is that

00:04:35,650 --> 00:04:41,360
containers are super useful and they

00:04:39,379 --> 00:04:42,259
also don't necessarily solve all your

00:04:41,360 --> 00:04:44,360
problems

00:04:42,259 --> 00:04:47,990
turns out there are still humans who

00:04:44,360 --> 00:04:51,110
knew I also think that we tend to forget

00:04:47,990 --> 00:04:53,330
that just because we add something like

00:04:51,110 --> 00:04:56,389
Microsoft doesn't mean that we've

00:04:53,330 --> 00:04:57,349
actually made it easier sometimes we've

00:04:56,389 --> 00:04:59,539
made it harder

00:04:57,349 --> 00:05:01,430
we've made our debugging harder we've

00:04:59,539 --> 00:05:04,699
made our local development environments

00:05:01,430 --> 00:05:06,349
harder and a one particular open source

00:05:04,699 --> 00:05:08,419
project that actually just came out last

00:05:06,349 --> 00:05:11,719
week that and some of my colleagues and

00:05:08,419 --> 00:05:14,120
some other folks are working on is an

00:05:11,719 --> 00:05:15,409
attempt to help with that and I am

00:05:14,120 --> 00:05:16,669
totally gonna look at my notes because I

00:05:15,409 --> 00:05:18,800
don't know enough about dapper yet

00:05:16,669 --> 00:05:22,400
though it does have a very dumper top

00:05:18,800 --> 00:05:25,430
hat my colleague Ronan design that but

00:05:22,400 --> 00:05:28,039
the idea is an event-driven runtime that

00:05:25,430 --> 00:05:30,379
makes it easier to have building blocks

00:05:28,039 --> 00:05:32,569
for those micro services so again like

00:05:30,379 --> 00:05:34,310
if you've done any of these distributed

00:05:32,569 --> 00:05:37,129
systems where you cobble together a lot

00:05:34,310 --> 00:05:39,560
of things you probably know that it's

00:05:37,129 --> 00:05:41,300
not necessarily consistent between orgs

00:05:39,560 --> 00:05:44,569
or even between projects inside your org

00:05:41,300 --> 00:05:46,039
or between teams so if that is a problem

00:05:44,569 --> 00:05:47,779
that resonates with you this might be an

00:05:46,039 --> 00:05:51,469
open source project that is right for

00:05:47,779 --> 00:05:53,719
you the idea is to be able to run things

00:05:51,469 --> 00:05:56,300
either on the cloud of your choice or on

00:05:53,719 --> 00:05:59,839
edge devices and still use a consistent

00:05:56,300 --> 00:06:01,759
tool chain and any language language and

00:05:59,839 --> 00:06:03,469
framework of your choice so that's worth

00:06:01,759 --> 00:06:05,060
looking at if you're in that place in

00:06:03,469 --> 00:06:09,050
your containers and microservices

00:06:05,060 --> 00:06:10,310
journey okay see ICD there's a lot of

00:06:09,050 --> 00:06:12,770
tools in the space there are some

00:06:10,310 --> 00:06:15,020
vendors you can talk to here at the

00:06:12,770 --> 00:06:17,389
conference I would say I mean I worked

00:06:15,020 --> 00:06:20,180
for Microsoft so we obviously are pals

00:06:17,389 --> 00:06:21,979
with github but this is one of those

00:06:20,180 --> 00:06:24,169
spaces where it's not necessarily

00:06:21,979 --> 00:06:27,259
important what you use but it is

00:06:24,169 --> 00:06:29,240
important that you're using something so

00:06:27,259 --> 00:06:31,219
if in your organization there is

00:06:29,240 --> 00:06:33,289
proliferation of tools in that space

00:06:31,219 --> 00:06:35,000
that's a problem to solve before you try

00:06:33,289 --> 00:06:36,439
to solve anything else this isn't

00:06:35,000 --> 00:06:38,659
necessarily all in chronological order

00:06:36,439 --> 00:06:40,189
but it sort of is I mean you probably

00:06:38,659 --> 00:06:42,560
need some containers you probably need

00:06:40,189 --> 00:06:44,810
some C ICD okay you're saying at this

00:06:42,560 --> 00:06:45,980
point everything is simple so far yeah

00:06:44,810 --> 00:06:48,350
and then it gets a

00:06:45,980 --> 00:06:52,820
little bit more complicated because here

00:06:48,350 --> 00:06:55,520
we're five years in to kubernetes and if

00:06:52,820 --> 00:06:57,530
you're thinking like wait a minute what

00:06:55,520 --> 00:07:00,710
do you mean five years yeah the initial

00:06:57,530 --> 00:07:02,360
release was actually in June 2014 and if

00:07:00,710 --> 00:07:04,220
that horrifies you and you start

00:07:02,360 --> 00:07:05,390
immediately scrambling and getting on

00:07:04,220 --> 00:07:07,430
slack and telling somebody how far

00:07:05,390 --> 00:07:10,940
behind you are like it's actually fine

00:07:07,430 --> 00:07:12,260
this is a good time to be starting to

00:07:10,940 --> 00:07:14,030
use kubernetes and I know when people

00:07:12,260 --> 00:07:15,170
were doing show of hands before I'm

00:07:14,030 --> 00:07:18,200
going to ask for a quick show of hands

00:07:15,170 --> 00:07:20,030
again how many people have looked at or

00:07:18,200 --> 00:07:23,600
played with kubernetes in some way I

00:07:20,030 --> 00:07:25,550
would say half the room how many people

00:07:23,600 --> 00:07:27,020
are legit actual facts running

00:07:25,550 --> 00:07:31,010
kubernetes in production at their

00:07:27,020 --> 00:07:33,110
workplace eight people maybe yeah so

00:07:31,010 --> 00:07:36,380
what we're about what you expect we're

00:07:33,110 --> 00:07:38,750
but about at that place which is to say

00:07:36,380 --> 00:07:41,030
there are a lot of tools in this space

00:07:38,750 --> 00:07:42,230
that you might not have tried yet or you

00:07:41,030 --> 00:07:43,760
might have completely tried but you

00:07:42,230 --> 00:07:46,670
didn't know that they were applicable to

00:07:43,760 --> 00:07:48,890
this so I will point out terraform has

00:07:46,670 --> 00:07:52,220
some really cool stuff for kubernetes

00:07:48,890 --> 00:07:54,770
and that means that you can deploy your

00:07:52,220 --> 00:07:57,320
kubernetes like clusters pod services

00:07:54,770 --> 00:08:00,380
etc and then you can use the providers

00:07:57,320 --> 00:08:03,320
to actually manage them so again it's I

00:08:00,380 --> 00:08:06,050
am we have a hashey court people here so

00:08:03,320 --> 00:08:08,780
you should talk to them but it's worth

00:08:06,050 --> 00:08:11,030
looking at for your kubernetes across

00:08:08,780 --> 00:08:13,990
all of your you know public and private

00:08:11,030 --> 00:08:16,760
clouds if you're interested in that I

00:08:13,990 --> 00:08:19,550
just like Seth I do work for a cloud

00:08:16,760 --> 00:08:22,400
provider so this is my one product

00:08:19,550 --> 00:08:24,350
related slide but not really because the

00:08:22,400 --> 00:08:26,240
important point here is that if you're

00:08:24,350 --> 00:08:29,600
using a managed kubernetes provider and

00:08:26,240 --> 00:08:31,970
I strongly recommend you do if I you

00:08:29,600 --> 00:08:33,320
don't work for a cloud provider you

00:08:31,970 --> 00:08:35,330
probably have better things to do with

00:08:33,320 --> 00:08:36,440
your time than be a cloud provider so

00:08:35,330 --> 00:08:38,180
it's probably worth looking at the

00:08:36,440 --> 00:08:41,180
manage kubernetes choices at the cloud

00:08:38,180 --> 00:08:43,790
of your choice and the main difference

00:08:41,180 --> 00:08:46,400
between running your own kubernetes the

00:08:43,790 --> 00:08:48,560
hard way and being like these are so fun

00:08:46,400 --> 00:08:50,870
to deal with versus working with a

00:08:48,560 --> 00:08:53,480
provider is you don't control the

00:08:50,870 --> 00:08:56,240
control plane but you do control your

00:08:53,480 --> 00:08:58,160
nodes with all of your container

00:08:56,240 --> 00:08:59,080
runtimes and couplets and everything

00:08:58,160 --> 00:09:01,000
else

00:08:59,080 --> 00:09:02,890
and if you're thinking to yourself self

00:09:01,000 --> 00:09:04,780
those cloud providers just want my money

00:09:02,890 --> 00:09:05,710
and I definitely don't want to be

00:09:04,780 --> 00:09:07,930
running a whole bunch of idle

00:09:05,710 --> 00:09:09,880
infrastructure excellent you are correct

00:09:07,930 --> 00:09:11,440
and there is another open source project

00:09:09,880 --> 00:09:14,380
you should look at called virtual

00:09:11,440 --> 00:09:16,450
couplet and your various cloud providers

00:09:14,380 --> 00:09:17,530
do have implementations of this but you

00:09:16,450 --> 00:09:19,660
can just look at the open source project

00:09:17,530 --> 00:09:23,230
to see what this can do for you this

00:09:19,660 --> 00:09:25,120
basically takes the chocolate of

00:09:23,230 --> 00:09:27,190
kubernetes and the peanut butter of

00:09:25,120 --> 00:09:30,520
serverless and puts them in together in

00:09:27,190 --> 00:09:32,020
a delicious highly caloric possibly but

00:09:30,520 --> 00:09:35,950
you know you might be allergic to it but

00:09:32,020 --> 00:09:38,170
hey deliciousness of you can have your

00:09:35,950 --> 00:09:40,120
server lists and your kubernetes this by

00:09:38,170 --> 00:09:41,500
the way is your secret weapon if you're

00:09:40,120 --> 00:09:43,030
the person trying to do kubernetes and

00:09:41,500 --> 00:09:44,980
your organization and someone else is

00:09:43,030 --> 00:09:47,200
saying but serverless you can say yeah

00:09:44,980 --> 00:09:49,240
we can we can totally do serverless all

00:09:47,200 --> 00:09:52,980
this does is it allows you to

00:09:49,240 --> 00:09:55,960
instantiate kubernetes nodes that are

00:09:52,980 --> 00:09:58,630
ephemeral that you don't need to run all

00:09:55,960 --> 00:10:00,340
the time so you don't have to have a

00:09:58,630 --> 00:10:01,840
bunch of worker nodes sitting there idle

00:10:00,340 --> 00:10:04,510
in your cluster if you don't have work

00:10:01,840 --> 00:10:06,130
for them the on-demand part I think is

00:10:04,510 --> 00:10:09,280
what people like because they realize

00:10:06,130 --> 00:10:10,930
that it seems money okay another thing

00:10:09,280 --> 00:10:12,280
to look at and this is the other open

00:10:10,930 --> 00:10:14,230
source project that literally came out

00:10:12,280 --> 00:10:15,490
last week so I have to look at my notes

00:10:14,230 --> 00:10:19,000
because I don't know a ton about it yet

00:10:15,490 --> 00:10:22,570
but this is in a lot of her

00:10:19,000 --> 00:10:23,020
organizations everyone starts out with

00:10:22,570 --> 00:10:25,390
thee

00:10:23,020 --> 00:10:26,940
we are DevOps and everyone can do

00:10:25,390 --> 00:10:29,200
everything and that's not necessarily

00:10:26,940 --> 00:10:31,630
realistic if you work at enterprises

00:10:29,200 --> 00:10:33,580
that have like governance or customers

00:10:31,630 --> 00:10:36,220
or money or you know any of those things

00:10:33,580 --> 00:10:39,100
that lead you to actually wanting

00:10:36,220 --> 00:10:41,020
separation of concerns but at the same

00:10:39,100 --> 00:10:43,300
time you want to have good working

00:10:41,020 --> 00:10:45,970
relationships across the org and so

00:10:43,300 --> 00:10:48,220
having our tech and the tech models that

00:10:45,970 --> 00:10:51,040
we're using help with that is great

00:10:48,220 --> 00:10:53,980
this particular oh em the open

00:10:51,040 --> 00:10:55,420
application model is useful for

00:10:53,980 --> 00:10:56,980
considering that there are going to be

00:10:55,420 --> 00:10:58,210
people who are gonna run the infra

00:10:56,980 --> 00:10:59,770
they're gonna be people who write

00:10:58,210 --> 00:11:01,390
applications that are probably gonna be

00:10:59,770 --> 00:11:03,280
people who do something in between there

00:11:01,390 --> 00:11:05,370
and it would be nice if they could

00:11:03,280 --> 00:11:07,810
communicate via attack with each other

00:11:05,370 --> 00:11:09,820
so the if you look at the rudder

00:11:07,810 --> 00:11:12,130
application of this or sorry the rudder

00:11:09,820 --> 00:11:14,350
reference implementation of this

00:11:12,130 --> 00:11:16,240
it just adds a bunch of annotations if

00:11:14,350 --> 00:11:18,310
you're using again this can be used not

00:11:16,240 --> 00:11:21,430
just in kubernetes you could use it with

00:11:18,310 --> 00:11:23,649
all of your V whatever but if you're

00:11:21,430 --> 00:11:25,329
using it with kubernetes you basically

00:11:23,649 --> 00:11:27,519
just add a bunch of annotations to that

00:11:25,329 --> 00:11:29,350
yeah mow it I do feel like when I talk

00:11:27,519 --> 00:11:30,970
about kubernetes I have to put a content

00:11:29,350 --> 00:11:32,380
morning in there for llamo I'm so sorry

00:11:30,970 --> 00:11:33,399
if you amel upsets you but there is

00:11:32,380 --> 00:11:37,509
definitely going to be a lot of

00:11:33,399 --> 00:11:42,310
enamelling kubernetes okay but this

00:11:37,509 --> 00:11:44,170
allows you to say hmm this is some you

00:11:42,310 --> 00:11:46,240
know restrictions or this is some

00:11:44,170 --> 00:11:50,949
information about this particular you

00:11:46,240 --> 00:11:52,690
know stuff okay so moving on helm is a

00:11:50,949 --> 00:11:56,860
package manager for kubernetes

00:11:52,690 --> 00:12:01,089
and helm v3 is coming out right at the

00:11:56,860 --> 00:12:02,829
end of this month the the if you look in

00:12:01,089 --> 00:12:05,339
github you'll see we've already switched

00:12:02,829 --> 00:12:08,470
over to v3 as the master branch and

00:12:05,339 --> 00:12:10,000
we're we're on I think beta 5 and we're

00:12:08,470 --> 00:12:14,440
gonna go to the release candidate soon

00:12:10,000 --> 00:12:16,810
and this is interesting because when you

00:12:14,440 --> 00:12:19,540
are running an operating software in

00:12:16,810 --> 00:12:21,670
your kubernetes cluster it can be a

00:12:19,540 --> 00:12:24,579
little bit annoying if you want to say

00:12:21,670 --> 00:12:27,459
run prometheus John talked about or just

00:12:24,579 --> 00:12:28,779
other people have software that they've

00:12:27,459 --> 00:12:30,939
already packaged it up and gotten to

00:12:28,779 --> 00:12:33,459
work and you're like well I mean I could

00:12:30,939 --> 00:12:36,040
start from tarball but I may as well

00:12:33,459 --> 00:12:38,529
install something a lot easier and so

00:12:36,040 --> 00:12:40,569
helm works much like after YUM just to

00:12:38,529 --> 00:12:43,089
install Pat hair is dull software I will

00:12:40,569 --> 00:12:46,180
say there is one lie on this slide which

00:12:43,089 --> 00:12:47,920
is share can't turn back time and

00:12:46,180 --> 00:12:52,209
neither can you roll backs are damn

00:12:47,920 --> 00:12:55,870
dirty lie so if you would like to roll

00:12:52,209 --> 00:12:58,149
forward you can use home to install an

00:12:55,870 --> 00:13:00,490
old version that you know works but I

00:12:58,149 --> 00:13:03,220
make no guarantees about your state so

00:13:00,490 --> 00:13:05,290
that is that is my hashtag ops life

00:13:03,220 --> 00:13:08,410
warning about roll backs do not believe

00:13:05,290 --> 00:13:11,079
them it does make it a lot easier though

00:13:08,410 --> 00:13:14,470
to see where you are in terms of what

00:13:11,079 --> 00:13:17,949
you have installed okay this is a

00:13:14,470 --> 00:13:20,019
actually quick interlude I want to show

00:13:17,949 --> 00:13:22,000
you something if you look at error

00:13:20,019 --> 00:13:24,519
messages like this they might make you

00:13:22,000 --> 00:13:25,730
sad and reasonably so because they're

00:13:24,519 --> 00:13:27,799
terrible

00:13:25,730 --> 00:13:31,220
and I can't I mean can you tell me

00:13:27,799 --> 00:13:34,279
what's wrong here because I mean I look

00:13:31,220 --> 00:13:36,739
at this and go so if you if you are

00:13:34,279 --> 00:13:38,779
using home you can actually use a pretty

00:13:36,739 --> 00:13:42,049
great open-source tool from gareth rush

00:13:38,779 --> 00:13:44,149
probe called coop eval and the nice

00:13:42,049 --> 00:13:48,109
thing about this is it can give you much

00:13:44,149 --> 00:13:50,419
better error messages for that sort of

00:13:48,109 --> 00:13:52,489
you know you get that sort of word cell

00:13:50,419 --> 00:13:56,569
and you're like what is happening so

00:13:52,489 --> 00:13:58,730
this is a lot more you know less verbose

00:13:56,569 --> 00:14:00,379
and more clear i'm wondering if anybody

00:13:58,730 --> 00:14:02,239
wants to shout it out if they can see

00:14:00,379 --> 00:14:06,970
what was wrong with our helm install

00:14:02,239 --> 00:14:06,970
command based on the error message here

00:14:08,350 --> 00:14:12,649
exactly it's like oh we should have used

00:14:11,299 --> 00:14:14,389
an integer we shouldn't have spelled out

00:14:12,649 --> 00:14:16,669
the string too we should use the integer

00:14:14,389 --> 00:14:19,220
too it's way more obvious when you're

00:14:16,669 --> 00:14:21,230
using kuba val and if that was obvious

00:14:19,220 --> 00:14:23,029
to you nobody showed it it out but if it

00:14:21,230 --> 00:14:24,529
was obvious to you before cool you are

00:14:23,029 --> 00:14:26,809
much better at reading error messages

00:14:24,529 --> 00:14:28,429
than i am but this makes it a lot easier

00:14:26,809 --> 00:14:29,899
to see what's wrong with your

00:14:28,429 --> 00:14:31,939
deployments so i reckon if you're using

00:14:29,899 --> 00:14:34,399
home i recommend this particular open

00:14:31,939 --> 00:14:36,859
source tool okay so if you're thinking

00:14:34,399 --> 00:14:39,410
to yourself I know you said they were

00:14:36,859 --> 00:14:41,660
DMO but I hate you am yeah no and I want

00:14:39,410 --> 00:14:44,029
to work not with you know one of the

00:14:41,660 --> 00:14:45,739
things about kubernetes is that there

00:14:44,029 --> 00:14:49,209
are these controllers that just

00:14:45,739 --> 00:14:52,939
reconcile you know the desired state so

00:14:49,209 --> 00:14:54,679
it's you know it's declarative and it's

00:14:52,939 --> 00:14:57,230
just always going to have whatever you

00:14:54,679 --> 00:15:00,739
told it to have but many times you want

00:14:57,230 --> 00:15:03,429
to do something triggered by an event so

00:15:00,739 --> 00:15:07,189
brigade is a good tool to look at and

00:15:03,429 --> 00:15:08,749
it's it lets you write in JavaScript

00:15:07,189 --> 00:15:11,629
which is great if you're sick of gamal

00:15:08,749 --> 00:15:12,589
and it lets you trigger events based on

00:15:11,629 --> 00:15:17,449
things that have happened in your

00:15:12,589 --> 00:15:20,089
cluster so that can be useful if you're

00:15:17,449 --> 00:15:23,209
trying to have things happen in your

00:15:20,089 --> 00:15:25,689
cluster that are triggered outside of

00:15:23,209 --> 00:15:29,569
just we always want it to be this way

00:15:25,689 --> 00:15:33,889
okay see tab is an interesting spec that

00:15:29,569 --> 00:15:36,379
we have a couple of examples of this in

00:15:33,889 --> 00:15:38,809
general it's if you're saying well helm

00:15:36,379 --> 00:15:39,380
is great but I have a lot more that I

00:15:38,809 --> 00:15:41,900
need

00:15:39,380 --> 00:15:44,300
for my applications then just the

00:15:41,900 --> 00:15:47,960
application configuration itself like

00:15:44,300 --> 00:15:50,450
perhaps I need to have a whole bunch of

00:15:47,960 --> 00:15:53,750
other things bundled up with it

00:15:50,450 --> 00:15:55,820
duffel is an implementation of scene app

00:15:53,750 --> 00:15:59,960
but it's very simple if you want to see

00:15:55,820 --> 00:16:02,840
a fuller version of it take a look at

00:15:59,960 --> 00:16:04,520
Porter so the reason this is useful if

00:16:02,840 --> 00:16:07,340
you have these particular sets of needs

00:16:04,520 --> 00:16:10,610
is say for a particular application if

00:16:07,340 --> 00:16:12,770
you want to spin up the you know

00:16:10,610 --> 00:16:15,320
somebody spit up a deaf spin up a dev

00:16:12,770 --> 00:16:18,050
cluster or whatever and you need to have

00:16:15,320 --> 00:16:20,720
like a database and maybe a session

00:16:18,050 --> 00:16:22,670
store you know you need a whole bunch of

00:16:20,720 --> 00:16:24,650
Redis which you're definitely not going

00:16:22,670 --> 00:16:28,460
to permanently store data in because

00:16:24,650 --> 00:16:30,650
sadness but you need to spin up a whole

00:16:28,460 --> 00:16:33,230
bunch of stuff and this lets you define

00:16:30,650 --> 00:16:36,560
this application needs all these things

00:16:33,230 --> 00:16:38,600
in order to be set up correctly this is

00:16:36,560 --> 00:16:40,940
the sort of tools that can shorten your

00:16:38,600 --> 00:16:42,560
time to set up a dev environment as well

00:16:40,940 --> 00:16:45,770
as all of the other environments that

00:16:42,560 --> 00:16:47,240
you need so that's that's worth looking

00:16:45,770 --> 00:16:49,910
at and it's worth looking at

00:16:47,240 --> 00:16:52,160
specifically because if you are working

00:16:49,910 --> 00:16:53,930
in air-gapped environments or if you're

00:16:52,160 --> 00:16:55,820
working in other regulatory sort of

00:16:53,930 --> 00:16:58,520
environments where you need to be able

00:16:55,820 --> 00:17:01,600
to define exactly what's going to happen

00:16:58,520 --> 00:17:06,410
Porter lets you do it consistently so

00:17:01,600 --> 00:17:08,210
okay I it was it was nice to see some

00:17:06,410 --> 00:17:10,340
other people shouting out like rosemary

00:17:08,210 --> 00:17:14,210
talked about vs code and that was

00:17:10,340 --> 00:17:16,730
awesome because this I have colleagues

00:17:14,210 --> 00:17:19,700
like Ivan in New Zealand who works on

00:17:16,730 --> 00:17:21,740
the kubernetes extension for vs code so

00:17:19,700 --> 00:17:24,380
this is all open source stuff and it

00:17:21,740 --> 00:17:26,780
lets you click and introspect your

00:17:24,380 --> 00:17:28,880
clusters in a way that it might be a lot

00:17:26,780 --> 00:17:31,220
harder to do without it so if you

00:17:28,880 --> 00:17:32,990
already are using a vs code environment

00:17:31,220 --> 00:17:34,880
you should definitely take a look at and

00:17:32,990 --> 00:17:36,470
you're using kubernetes you should take

00:17:34,880 --> 00:17:39,200
a look at the kubernetes extension just

00:17:36,470 --> 00:17:41,150
because it's it doesn't just work with

00:17:39,200 --> 00:17:43,130
you know even cloud provider kubernetes

00:17:41,150 --> 00:17:46,580
like you can use it with mini cube or

00:17:43,130 --> 00:17:48,740
kind or whatever can make your can make

00:17:46,580 --> 00:17:51,200
your environment a little bit easier or

00:17:48,740 --> 00:17:52,690
sorry your your experience of what

00:17:51,200 --> 00:17:55,029
you're using a little bit easier

00:17:52,690 --> 00:17:56,950
okay so that was a lot of stuff it's

00:17:55,029 --> 00:17:58,809
just there are I assure you way more

00:17:56,950 --> 00:18:00,789
tools and then kubernetes ecosystems

00:17:58,809 --> 00:18:02,799
than that but that's a few that you know

00:18:00,789 --> 00:18:05,229
my team and other people that I know

00:18:02,799 --> 00:18:07,450
work on that are pretty helpful

00:18:05,229 --> 00:18:09,519
in contrast I'm not going to show you a

00:18:07,450 --> 00:18:12,419
ton of observability tools because again

00:18:09,519 --> 00:18:16,299
there are a lot of tools in this space

00:18:12,419 --> 00:18:18,070
the you for example the open telemetry

00:18:16,299 --> 00:18:20,139
project that has brought together a

00:18:18,070 --> 00:18:22,149
number of open source tools is worth

00:18:20,139 --> 00:18:24,609
looking at but I guess what I'll say

00:18:22,149 --> 00:18:25,840
about this is when you're talking to

00:18:24,609 --> 00:18:28,929
your vendors that you're working with

00:18:25,840 --> 00:18:31,599
about your observability tooling make

00:18:28,929 --> 00:18:33,580
sure that you have the ability to look

00:18:31,599 --> 00:18:35,979
at your live systems and not necessarily

00:18:33,580 --> 00:18:38,529
just reports or dashboards that were

00:18:35,979 --> 00:18:39,729
created based on last outage because we

00:18:38,529 --> 00:18:41,769
all know that you create a dashboard

00:18:39,729 --> 00:18:43,749
based on whatever went wrong one time

00:18:41,769 --> 00:18:47,080
and it isn't necessarily what you need

00:18:43,749 --> 00:18:48,849
in the future so it's it's good to make

00:18:47,080 --> 00:18:51,580
sure you can do this in an iterative

00:18:48,849 --> 00:18:54,999
fashion okay

00:18:51,580 --> 00:18:58,059
and a service I feel like service mesh

00:18:54,999 --> 00:19:01,749
and you know proxy and discovery space

00:18:58,059 --> 00:19:03,999
is a place where I see a lot of exciting

00:19:01,749 --> 00:19:05,830
new tools but also a lot of uncertainty

00:19:03,999 --> 00:19:08,649
and I think one of the things that's

00:19:05,830 --> 00:19:11,769
really good about this is a whole bunch

00:19:08,649 --> 00:19:15,399
of vendors and players in the space have

00:19:11,769 --> 00:19:18,340
gotten together to do SMI to do the

00:19:15,399 --> 00:19:22,809
service mesh interface say that three

00:19:18,340 --> 00:19:26,049
times fast like standard which is to say

00:19:22,809 --> 00:19:27,609
if you want to use you know sto or if

00:19:26,049 --> 00:19:30,279
you want to use linker tier you want to

00:19:27,609 --> 00:19:32,139
use any of these service mesh tools in

00:19:30,279 --> 00:19:34,239
this space if you want to use console

00:19:32,139 --> 00:19:36,009
connect whatever you want the ability to

00:19:34,239 --> 00:19:38,289
use the one that's right for you for

00:19:36,009 --> 00:19:41,080
your project and not people will not be

00:19:38,289 --> 00:19:44,649
locked in nobody likes lock-in so this

00:19:41,080 --> 00:19:48,340
is a standardization so that you can use

00:19:44,649 --> 00:19:52,269
whichever ones are right for you okay

00:19:48,340 --> 00:19:54,659
and the the policy space is another

00:19:52,269 --> 00:19:58,659
space where there's a lot of tooling and

00:19:54,659 --> 00:20:01,450
I think that it's it's valuable to look

00:19:58,659 --> 00:20:03,600
at again like CN CF governed

00:20:01,450 --> 00:20:07,470
etc tools and

00:20:03,600 --> 00:20:09,620
in a space OPA is worth looking at open

00:20:07,470 --> 00:20:13,530
policy agent is worth looking at

00:20:09,620 --> 00:20:15,540
specifically because there are a number

00:20:13,530 --> 00:20:19,680
of implementations and I'll show one

00:20:15,540 --> 00:20:21,570
brief demo and then the and talk about

00:20:19,680 --> 00:20:25,880
the differences between some of these

00:20:21,570 --> 00:20:29,550
but open policy agent basically lets you

00:20:25,880 --> 00:20:31,470
define policy and code much as you would

00:20:29,550 --> 00:20:35,340
do with like some specific vendors

00:20:31,470 --> 00:20:37,170
projects so that you can again make sure

00:20:35,340 --> 00:20:38,760
it's consistent between teams and I

00:20:37,170 --> 00:20:41,730
think this is one of the communication

00:20:38,760 --> 00:20:43,560
things in this DevOps space is like we

00:20:41,730 --> 00:20:45,810
want consistent communication between

00:20:43,560 --> 00:20:47,970
teams but we also want to check that

00:20:45,810 --> 00:20:50,120
consistent communication into github and

00:20:47,970 --> 00:20:54,860
we can do that with something like this

00:20:50,120 --> 00:20:57,240
so let's look at gatekeeper one specific

00:20:54,860 --> 00:20:59,910
community driven approach to policy in

00:20:57,240 --> 00:21:01,530
kubernetes and colleagues mine actually

00:20:59,910 --> 00:21:04,680
started this is interesting because they

00:21:01,530 --> 00:21:06,570
started this project as something as

00:21:04,680 --> 00:21:09,270
your specific and then realized they

00:21:06,570 --> 00:21:11,370
were solving a more general problem so

00:21:09,270 --> 00:21:13,560
my boss locky Evensen and some other

00:21:11,370 --> 00:21:15,870
people from Microsoft actually took this

00:21:13,560 --> 00:21:17,340
out into the community and open sourced

00:21:15,870 --> 00:21:20,070
it and built it in the open and then

00:21:17,340 --> 00:21:22,770
built an azure specific implementation

00:21:20,070 --> 00:21:25,530
and I think this is when big companies

00:21:22,770 --> 00:21:27,360
are doing open source it is useful to

00:21:25,530 --> 00:21:30,600
take that community first approach

00:21:27,360 --> 00:21:33,090
because it really your your community

00:21:30,600 --> 00:21:36,500
and your customers prefer when stuff is

00:21:33,090 --> 00:21:40,740
out in the open rather than you know

00:21:36,500 --> 00:21:47,150
specific to a given company okay so I'm

00:21:40,740 --> 00:21:51,230
going to start this if I can start it I

00:21:47,150 --> 00:21:54,090
feel like here we go yeah so if you're

00:21:51,230 --> 00:21:57,060
if you work at a company that has you

00:21:54,090 --> 00:21:58,980
know customers or money or whatever you

00:21:57,060 --> 00:22:02,190
probably have regulatory requirements

00:21:58,980 --> 00:22:04,170
like in this specific case we want you

00:22:02,190 --> 00:22:05,790
to only use the trusted internal

00:22:04,170 --> 00:22:08,250
container registry we don't want you

00:22:05,790 --> 00:22:11,340
launching things from elsewhere all

00:22:08,250 --> 00:22:14,250
right we can do this with gate keeper we

00:22:11,340 --> 00:22:14,840
can say you have to use things from this

00:22:14,250 --> 00:22:17,540
specific

00:22:14,840 --> 00:22:20,120
repo and you can't launch things in your

00:22:17,540 --> 00:22:23,120
cluster they don't have that repo so say

00:22:20,120 --> 00:22:24,860
you apply a policy like that hey that's

00:22:23,120 --> 00:22:28,070
cool as long as this cluster exists

00:22:24,860 --> 00:22:31,490
that's going to remain active on this

00:22:28,070 --> 00:22:34,610
cluster as we all know usually people

00:22:31,490 --> 00:22:37,340
forget or didn't read the memo or didn't

00:22:34,610 --> 00:22:39,830
read the email and aren't positive why

00:22:37,340 --> 00:22:41,480
something breaks great do you keep her

00:22:39,830 --> 00:22:43,550
applied to your cluster is gonna give a

00:22:41,480 --> 00:22:45,860
pretty clear error message like oh

00:22:43,550 --> 00:22:50,270
you're not launching this from the right

00:22:45,860 --> 00:22:51,680
repo okay if we define something if we

00:22:50,270 --> 00:22:53,440
define an image that comes from the

00:22:51,680 --> 00:22:57,830
right where you bow then it'll work

00:22:53,440 --> 00:23:02,210
great this is a very obviously this is a

00:22:57,830 --> 00:23:04,910
very simple example but it's I think

00:23:02,210 --> 00:23:08,120
it's useful for the point of it's not

00:23:04,910 --> 00:23:10,490
that hard to apply some pretty

00:23:08,120 --> 00:23:12,290
consistent policy whether it's you have

00:23:10,490 --> 00:23:13,880
to use something that has these

00:23:12,290 --> 00:23:18,080
permissions you have to use something

00:23:13,880 --> 00:23:20,990
that has these you know your images or a

00:23:18,080 --> 00:23:22,370
J in this specific way like sometimes

00:23:20,990 --> 00:23:24,110
people hear policy and think Oh

00:23:22,370 --> 00:23:26,120
everything is going to be terrible but

00:23:24,110 --> 00:23:26,900
it doesn't have to be like we can do it

00:23:26,120 --> 00:23:30,500
pretty simply

00:23:26,900 --> 00:23:33,800
so with open policy agent and this is

00:23:30,500 --> 00:23:36,830
pod security policy gatekeeper on the

00:23:33,800 --> 00:23:39,170
server side it's it's actually not that

00:23:36,830 --> 00:23:41,480
difficult to apply some of these the

00:23:39,170 --> 00:23:43,100
difficulty I think comes in with that

00:23:41,480 --> 00:23:45,590
developer who didn't know that they were

00:23:43,100 --> 00:23:47,150
pushing something bad but didn't really

00:23:45,590 --> 00:23:49,070
have a good way to test it locally and

00:23:47,150 --> 00:23:52,070
so this is another great open source

00:23:49,070 --> 00:23:55,880
tool from our friend Gareth who works at

00:23:52,070 --> 00:23:58,730
sneek security and it's contest and so

00:23:55,880 --> 00:24:00,560
this lets you look at policy but locally

00:23:58,730 --> 00:24:02,690
like not pushed up on your kubernetes

00:24:00,560 --> 00:24:05,030
cluster yet and so that's kind of an

00:24:02,690 --> 00:24:06,680
example of these are these are open

00:24:05,030 --> 00:24:07,940
source tools that I want to highlight

00:24:06,680 --> 00:24:09,680
because I'm not sure if people would

00:24:07,940 --> 00:24:12,410
have necessarily seen them or use them

00:24:09,680 --> 00:24:14,480
or seen why to use them and like this is

00:24:12,410 --> 00:24:18,620
so that you can check your policy before

00:24:14,480 --> 00:24:20,810
you send anything to your cluster in oh

00:24:18,620 --> 00:24:24,830
it's written in the same Reggio though

00:24:20,810 --> 00:24:26,330
you know that OPA uses so which by the

00:24:24,830 --> 00:24:26,840
way I had no idea what that was and I

00:24:26,330 --> 00:24:30,620
had to look at

00:24:26,840 --> 00:24:32,330
up and I guess reso is a language it's

00:24:30,620 --> 00:24:34,009
it basically is an extension of

00:24:32,330 --> 00:24:36,320
something called data log which has been

00:24:34,009 --> 00:24:38,179
around for a while but it provides kind

00:24:36,320 --> 00:24:41,749
of a consistent way to communicate

00:24:38,179 --> 00:24:44,480
policy so all right cool so here's

00:24:41,749 --> 00:24:47,269
here's an example of what comp test does

00:24:44,480 --> 00:24:49,879
and this is using it with helm so it can

00:24:47,269 --> 00:24:52,789
be used with other things can anybody

00:24:49,879 --> 00:24:59,119
tell me why is this failing why is this

00:24:52,789 --> 00:25:00,919
deployment failing huh so people who

00:24:59,119 --> 00:25:03,470
have used kubernetes before might have

00:25:00,919 --> 00:25:05,779
run into this problem where by default

00:25:03,470 --> 00:25:07,669
we heard from South Fargo about how

00:25:05,779 --> 00:25:09,860
kubernetes security defaults are a

00:25:07,669 --> 00:25:11,419
little bit dire and by default the

00:25:09,860 --> 00:25:14,749
resource constraints are a little bit

00:25:11,419 --> 00:25:17,480
dire too so kubernetes is perfectly

00:25:14,749 --> 00:25:20,059
happy to let you use up absolutely all

00:25:17,480 --> 00:25:22,610
of the available memory and all of the

00:25:20,059 --> 00:25:25,700
available CPU on your cluster even the

00:25:22,610 --> 00:25:27,649
stuff that's a sed needs so this doesn't

00:25:25,700 --> 00:25:29,960
go well generally and your cholesterol

00:25:27,649 --> 00:25:34,190
fall over and everyone will be sad but

00:25:29,960 --> 00:25:37,909
you can govern this by just saying we

00:25:34,190 --> 00:25:39,230
are setting limits of when we are

00:25:37,909 --> 00:25:41,749
launching this specific application

00:25:39,230 --> 00:25:43,970
we're gonna set limits that if it's

00:25:41,749 --> 00:25:46,220
using more CPU or more memory than this

00:25:43,970 --> 00:25:48,619
we're gonna care like we at least want

00:25:46,220 --> 00:25:51,590
to know right like do we have you know

00:25:48,619 --> 00:25:54,769
the JVM leading to sadness probably and

00:25:51,590 --> 00:25:57,499
we want to know that so an example of

00:25:54,769 --> 00:25:59,360
when you explicitly set limits and this

00:25:57,499 --> 00:26:01,970
is just you know not failing obviously

00:25:59,360 --> 00:26:03,409
but this is just like and again this is

00:26:01,970 --> 00:26:04,940
a contrived example you wouldn't always

00:26:03,409 --> 00:26:05,990
need to set these on the command line

00:26:04,940 --> 00:26:07,700
you could obviously have them in your

00:26:05,990 --> 00:26:09,549
config but just for purposes of not

00:26:07,700 --> 00:26:13,129
having to look at lots and lots of

00:26:09,549 --> 00:26:15,980
configs lots and lots of llamó you can

00:26:13,129 --> 00:26:18,499
say we're going to have this policy that

00:26:15,980 --> 00:26:21,129
we have to have these specific limits

00:26:18,499 --> 00:26:25,460
set to run anything on our cluster and

00:26:21,129 --> 00:26:27,830
that's again this is an example of can

00:26:25,460 --> 00:26:30,919
you do this without contest obviously

00:26:27,830 --> 00:26:33,379
but if you put comp tests into your say

00:26:30,919 --> 00:26:36,139
CI CD pipeline then you can throw out

00:26:33,379 --> 00:26:38,059
errors hopefully before the bad configs

00:26:36,139 --> 00:26:39,100
are out there in production paging you

00:26:38,059 --> 00:26:42,429
at 3 in the morning

00:26:39,100 --> 00:26:46,860
you sad like you get a lot cleaner

00:26:42,429 --> 00:26:49,450
experience like this okay so I think the

00:26:46,860 --> 00:26:50,980
hopefully the actionable takeaway here

00:26:49,450 --> 00:26:52,809
is wow there's a lot of really great

00:26:50,980 --> 00:26:55,900
open source projects in this space and

00:26:52,809 --> 00:26:57,880
they probably need you to work on them

00:26:55,900 --> 00:26:59,890
and if you're thinking like oh I mean

00:26:57,880 --> 00:27:01,780
I'm not an open source contributor like

00:26:59,890 --> 00:27:04,330
don't worry like you don't have to feel

00:27:01,780 --> 00:27:06,490
like you are anything specific if you go

00:27:04,330 --> 00:27:09,000
to one of these repos and I'll publish

00:27:06,490 --> 00:27:11,080
the slides after this and all of these

00:27:09,000 --> 00:27:12,760
projects are up on github have

00:27:11,080 --> 00:27:15,309
repositories if you go to one of these

00:27:12,760 --> 00:27:17,440
repos and just open an issue and say I

00:27:15,309 --> 00:27:19,929
tried to do this and this is the error I

00:27:17,440 --> 00:27:21,309
got that's actually really helpful like

00:27:19,929 --> 00:27:23,890
if you have an issue with how to

00:27:21,309 --> 00:27:26,200
reproduce it I was I was using this

00:27:23,890 --> 00:27:28,710
version and this went wrong I feel like

00:27:26,200 --> 00:27:30,580
sometimes getting started as you know

00:27:28,710 --> 00:27:33,549
contributing to an open-source project

00:27:30,580 --> 00:27:35,620
sounds like you need to do a ton of

00:27:33,549 --> 00:27:37,659
scaffolding a ton of work be really

00:27:35,620 --> 00:27:40,090
fancy it's like that's not actually true

00:27:37,659 --> 00:27:42,850
like you can join the cloud native

00:27:40,090 --> 00:27:44,710
adventure Brigade just by saying I tried

00:27:42,850 --> 00:27:46,690
to use this and it did not work for me

00:27:44,710 --> 00:27:47,950
and here's how and like that's actually

00:27:46,690 --> 00:27:50,650
more helpful than you would think

00:27:47,950 --> 00:27:53,890
because if you think about it people who

00:27:50,650 --> 00:27:56,350
are active contributors maintainer zhan

00:27:53,890 --> 00:27:58,960
these projects are probably coming in

00:27:56,350 --> 00:28:02,620
with a set of assumptions that you don't

00:27:58,960 --> 00:28:04,900
have and they can never get those newbie

00:28:02,620 --> 00:28:07,750
eyes on the project back again ever

00:28:04,900 --> 00:28:08,890
so like those experience reports from

00:28:07,750 --> 00:28:10,360
people who are using one of these

00:28:08,890 --> 00:28:12,700
projects for the first time are

00:28:10,360 --> 00:28:14,429
something that is value that only you

00:28:12,700 --> 00:28:17,230
can provide which is kind of exciting

00:28:14,429 --> 00:28:20,890
and it means that there's an adventure

00:28:17,230 --> 00:28:22,299
for you to join there so I will say I

00:28:20,890 --> 00:28:25,510
will say this is one more thing about

00:28:22,299 --> 00:28:28,150
Microsoft is that they literally have a

00:28:25,510 --> 00:28:30,880
Mac with a Microsoft asset tag on it

00:28:28,150 --> 00:28:34,059
and my job is like Linux and open source

00:28:30,880 --> 00:28:35,230
and that might mean that even though we

00:28:34,059 --> 00:28:37,030
live in the darkest timeline

00:28:35,230 --> 00:28:38,230
I mean clearly there are some things in

00:28:37,030 --> 00:28:40,900
this timeline that are kind of Awesome

00:28:38,230 --> 00:28:43,450
and so I would encourage you when you go

00:28:40,900 --> 00:28:45,250
back to your organization's if they will

00:28:43,450 --> 00:28:47,799
let you work on open source like say

00:28:45,250 --> 00:28:50,200
Comcast will that is awesome and if they

00:28:47,799 --> 00:28:52,240
are reluctant just tell them hey you

00:28:50,200 --> 00:28:53,980
know what the world has changed

00:28:52,240 --> 00:28:55,210
we live in a world where open-source is

00:28:53,980 --> 00:28:57,520
something that the Microsoft's and

00:28:55,210 --> 00:28:59,050
Comcast of the world are doing and it's

00:28:57,520 --> 00:29:02,650
okay and it's great and it's a

00:28:59,050 --> 00:29:06,190
competitive advantage there's some links

00:29:02,650 --> 00:29:07,420
here you clearly am passing too much if

00:29:06,190 --> 00:29:08,770
I'm thinking I want to say there are

00:29:07,420 --> 00:29:12,370
links in the show notes but there are

00:29:08,770 --> 00:29:14,950
some links here and just in terms of

00:29:12,370 --> 00:29:17,020
what we have here a lot of the tools

00:29:14,950 --> 00:29:19,630
that I mentioned today are linked from

00:29:17,020 --> 00:29:21,600
the dais labs page I want to point

00:29:19,630 --> 00:29:25,720
people to container training because

00:29:21,600 --> 00:29:27,910
that is a project that I gave 11 3-hour

00:29:25,720 --> 00:29:29,770
kubernetes workshops last year based on

00:29:27,910 --> 00:29:33,340
this material which Jerome Pettis Oni

00:29:29,770 --> 00:29:34,570
created and it's worth looking at if you

00:29:33,340 --> 00:29:37,950
kind of want to start from the

00:29:34,570 --> 00:29:41,170
kubernetes the hard way sort of you know

00:29:37,950 --> 00:29:43,870
mindset or mentality but it's also

00:29:41,170 --> 00:29:45,250
useful if you want to try to have

00:29:43,870 --> 00:29:46,600
something that you bring back to your

00:29:45,250 --> 00:29:48,820
organization because I feel like it's

00:29:46,600 --> 00:29:50,050
sometimes challenging when you go to a

00:29:48,820 --> 00:29:51,760
conference for two days and it's

00:29:50,050 --> 00:29:53,320
super-fun and then you go back to your

00:29:51,760 --> 00:29:55,060
organization and they're like excellent

00:29:53,320 --> 00:29:57,940
what did you learn for us and they're

00:29:55,060 --> 00:30:00,190
like and you're like uh it was fun so

00:29:57,940 --> 00:30:01,450
you can at least take container training

00:30:00,190 --> 00:30:04,540
back to them and have something you can

00:30:01,450 --> 00:30:07,330
do and there are also by the way

00:30:04,540 --> 00:30:08,860
trainings here we are on day two of them

00:30:07,330 --> 00:30:12,760
perhaps though you can sneak in and

00:30:08,860 --> 00:30:16,240
catch up so it's and they have a repos

00:30:12,760 --> 00:30:19,120
on github as well and then there there

00:30:16,240 --> 00:30:20,770
is a learning path on you know Microsoft

00:30:19,120 --> 00:30:22,630
has a learning path that is not super

00:30:20,770 --> 00:30:24,610
vendor specific that it takes you

00:30:22,630 --> 00:30:26,620
through kubernetes if you're like people

00:30:24,610 --> 00:30:29,380
say you just be using that word what

00:30:26,620 --> 00:30:30,820
does that word mean you can actually get

00:30:29,380 --> 00:30:33,610
yourself level up there and then also

00:30:30,820 --> 00:30:34,840
the vs code you know extension for

00:30:33,610 --> 00:30:36,310
kubernetes I wanted to link to that

00:30:34,840 --> 00:30:39,970
specifically because that's pretty

00:30:36,310 --> 00:30:41,530
useful so with that thanks it's

00:30:39,970 --> 00:30:45,100
excellent getting a chance to talk to

00:30:41,530 --> 00:30:46,720
you I know I am at time but uh I think

00:30:45,100 --> 00:30:48,250
will actually talk to people because

00:30:46,720 --> 00:30:50,290
spoiler alert I'll be up here after

00:30:48,250 --> 00:30:51,970
lunch during a podcast so we'll get a

00:30:50,290 --> 00:30:53,430
chance to talk to people more then all

00:30:51,970 --> 00:30:55,430
right thank you

00:30:53,430 --> 00:31:08,739
[Applause]

00:30:55,430 --> 00:31:08,739

YouTube URL: https://www.youtube.com/watch?v=zwI6gXhg9ts


