Title: DevOpsDays Boston 2019 - Developing Devopsers by Jonathan Maltz
Publication date: 2019-10-11
Playlist: DevOpsDays Boston 2019
Description: 
	Developing Devopsers: Strategies for effective mentoring by Jonathan Maltz

Mentoring and onboarding new engineers is one of the most important things you can do to grow your team. Effective and intentional mentoring decreases the number of bugs shipped to production, improves the quality of your application, and helps keep code standards high as your team grows and changes.

Yet for all of its importance, we hardly talk about how to mentor effectively. There are many resources about how we can provide productivity gains by learning about new language features or tools , but there are hardly any about how they can get 400% productivity gains for their team by helping other devopsers be be more productive.

In this talk, I’ll discuss how to think about mentoring new djangonauts from the ground-up. First, we’ll discuss how to structure a plan for your mentee such that they move from “What’s CI?” to “Let’s use build out a new continuous deployment pipeline on top of Kubernetes and define the whole thing in terraform” in no-time flat. Next, we’ll talk about how to interact with your mentee such that every challenge helps them level-up their development skills and helps reinforce your team’s culture. Before closing, we’ll shift the spotlight over to you and show you how your time mentoring can help you level up your own engineering skills as well.

#DevOpsDays #DevOpsDaysBoston
Captions: 
	00:00:16,640 --> 00:00:17,640
Cool.

00:00:17,640 --> 00:00:18,640
Thank you very much.

00:00:18,640 --> 00:00:23,289
I would like I don't know why Brent gestured towards me when he said we don't sell any

00:00:23,289 --> 00:00:24,289
software.

00:00:24,289 --> 00:00:31,300
I'm not talking about unless you're an insurance company and moving to value based payments,

00:00:31,300 --> 00:00:34,680
in which case I would love to talk to you.

00:00:34,680 --> 00:00:36,160
And let's talk.

00:00:36,160 --> 00:00:40,620
But, yeah, instead, this presentation's actually going to start around four or five years ago.

00:00:40,620 --> 00:00:42,150
I looked like this.

00:00:42,150 --> 00:00:46,339
I used to go down to the Bay Bridge at my job at the time.

00:00:46,339 --> 00:00:49,899
I was at software engineering company some of you are heard of.

00:00:49,899 --> 00:00:51,780
And I was feeling good about myself.

00:00:51,780 --> 00:00:58,210
I had onboarded a couple of interns and new hires and thinking, you know, I pretty much

00:00:58,210 --> 00:01:00,289
got in mentorship down pat.

00:01:00,289 --> 00:01:08,210
We made a new team, made an acquisition, and join the team, and a friend of mine was responsible

00:01:08,210 --> 00:01:12,890
for mentoring three interns in a summer.

00:01:12,890 --> 00:01:14,979
We said, Brad, these are all your responsibility.

00:01:14,979 --> 00:01:18,930
And in the process, he was really excellent about it.

00:01:18,930 --> 00:01:23,400
He like organized them into little teams and they all had their own special strategies

00:01:23,400 --> 00:01:27,110
and they had like code words and catch phrases that we were using.

00:01:27,110 --> 00:01:29,170
And it was really impressive what he was doing.

00:01:29,170 --> 00:01:33,140
And as someone who this done this before, he was doing this really well.

00:01:33,140 --> 00:01:37,500
After the summer wound down, I was talking to him, Brad, what did you do?

00:01:37,500 --> 00:01:40,490
How did you make this happen so effectively?

00:01:40,490 --> 00:01:45,380
What he sent me was pages upon passage of documents that he had put together to prepare

00:01:45,380 --> 00:01:48,390
for onboarding.

00:01:48,390 --> 00:01:52,430
One on one strategies, onboarding strategies, project plans.

00:01:52,430 --> 00:01:55,490
These were all things I had never seen or used before.

00:01:55,490 --> 00:01:57,119
It was mind blowing to me.

00:01:57,119 --> 00:01:59,130
I was intuitive in my mentorship.

00:01:59,130 --> 00:02:04,460
I was patient and talked to people, that's hue I got by.

00:02:04,460 --> 00:02:07,299
Good mentorship is not an accident.

00:02:07,299 --> 00:02:15,410
We can operationalize so anyone can be successful.

00:02:15,410 --> 00:02:19,709
This talk is developing DevOpsers: Strategies for effective mentoring.

00:02:19,709 --> 00:02:21,270
My name is Jonathan Maltz.

00:02:21,270 --> 00:02:28,060
My Twitter handle is at the bottom rights of never single one of these slides.

00:02:28,060 --> 00:02:30,379
And also, I work for a company called Nuna.

00:02:30,379 --> 00:02:32,580
We'll talk about that later.

00:02:32,580 --> 00:02:34,800
But for now, let's start talking about mentorship.

00:02:34,800 --> 00:02:40,090
And for this presentation, I'm going to use a particular definition of mentorship.

00:02:40,090 --> 00:02:43,629
I'm going to be talking about mentorship as onboarding.

00:02:43,629 --> 00:02:48,540
That first period of time when someone is on the team, the first 13 ish weeks when they're

00:02:48,540 --> 00:02:52,180
getting up to speed is what we will focus on.

00:02:52,180 --> 00:02:57,730
And there's a talk on longer term mentorship.

00:02:57,730 --> 00:03:06,702
On the team, around 6 12 months, how to help them learn from each other with a senior staff

00:03:06,702 --> 00:03:07,702
member.

00:03:07,702 --> 00:03:10,290
A lot of the ideas will carry over between the two concepts.

00:03:10,290 --> 00:03:13,450
But I'm specifically going to be focused on onboarding for now.

00:03:13,450 --> 00:03:16,640
Mostly because we only have 30 minutes.

00:03:16,640 --> 00:03:20,980
First let's talk about this idea of what do I mean when I talk about operationalizing

00:03:20,980 --> 00:03:22,280
mentoring?

00:03:22,280 --> 00:03:26,209
Some random website that had a definition that I liked, it was not Merriam Webster's

00:03:26,209 --> 00:03:31,400
dictionary talked about operationalize as the process of strictly defining variables

00:03:31,400 --> 00:03:33,159
into measurable factors.

00:03:33,159 --> 00:03:38,870
The process defines fuzzy concepts and allows them to be looked at quantitatively.

00:03:38,870 --> 00:03:44,150
Or success stops being random.

00:03:44,150 --> 00:03:49,659
Once you have operationalized your process for onboarding people, it stops being random

00:03:49,659 --> 00:03:52,769
whether they are successful on your team.

00:03:52,769 --> 00:03:58,680
It stops being a question if they get that super empathetic, super patient senior software

00:03:58,680 --> 00:04:03,069
engineer or operations person who can keep them the ropes.

00:04:03,069 --> 00:04:10,440
It's where anyone can be an effective onboarding buddy or mentor, and anyone coming on to the

00:04:10,440 --> 00:04:14,170
team is effect as part that have process.

00:04:14,170 --> 00:04:17,630
There's three pieces in my mind in order to be successful.

00:04:17,630 --> 00:04:23,770
The first is when you have someone on board, you have an opinionated process how they are

00:04:23,770 --> 00:04:25,200
coming on board.

00:04:25,200 --> 00:04:33,669
It's really hard to operationalize if they do it differently for everyone.

00:04:33,669 --> 00:04:40,169
It does not work deploying humans on to our teams.

00:04:40,169 --> 00:04:44,729
The second piece is you want to spend want time mentoring and onboarding someone as the

00:04:44,729 --> 00:04:47,270
process of building clear habits.

00:04:47,270 --> 00:04:53,160
And once you frame onboarding and mentoring this way, it's something you as a mentor with

00:04:53,160 --> 00:04:57,860
operationalize significantly better in how you teach and coach people.

00:04:57,860 --> 00:05:02,260
If you think about teaching as a wishy washy weird thing that people sometimes magically

00:05:02,260 --> 00:05:04,610
do, it's hard to reproduce that.

00:05:04,610 --> 00:05:08,460
But if you know that as a mentor what you want to do is build habits, there's a simple

00:05:08,460 --> 00:05:10,279
process we can follow.

00:05:10,279 --> 00:05:16,090
What we do is when we see our men tee performs an action that we want to reinforce, we celebrate

00:05:16,090 --> 00:05:17,979
them, give them positive reinforcement.

00:05:17,979 --> 00:05:21,520
That they don't do something we want to reinforce, don't reinforce that.

00:05:21,520 --> 00:05:25,120
And if we can repeat that process, that's good.

00:05:25,120 --> 00:05:29,520
And the last piece is spending time teaching skills.

00:05:29,520 --> 00:05:34,080
The skills piece is really important.

00:05:34,080 --> 00:05:38,530
Sometimes we have people on our teams and we don't necessarily know what we want to

00:05:38,530 --> 00:05:39,530
teach them.

00:05:39,530 --> 00:05:41,200
Oh, yeah, we want them to be successful.

00:05:41,200 --> 00:05:43,340
We want to do good stuff.

00:05:43,340 --> 00:05:45,780
But we haven't defined what does good look like?

00:05:45,780 --> 00:05:48,530
What is the time we want to spend with them?

00:05:48,530 --> 00:05:53,430
What do we want to teach them as part of the process?

00:05:53,430 --> 00:05:58,479
Once you define the skills, you can spend time teaching those with every opportunity

00:05:58,479 --> 00:06:00,990
that comes up.

00:06:00,990 --> 00:06:03,150
This is before arrival.

00:06:03,150 --> 00:06:08,550
And one thing before your men tee arrives, to be successful, have a written plan for

00:06:08,550 --> 00:06:12,560
the first 90 days.

00:06:12,560 --> 00:06:16,570
I highlighted written because it's important that you write this down.

00:06:16,570 --> 00:06:20,240
What's going to happen, especially if it's your first time mentoring someone, they're

00:06:20,240 --> 00:06:23,409
on board, oh, my gosh, what the heck is happening.

00:06:23,409 --> 00:06:28,289
They have so many questions and didn't realize they had to do these things.

00:06:28,289 --> 00:06:34,600
If you talk to someone one time you're going to forget about it by week two.

00:06:34,600 --> 00:06:42,229
This is a tool for past you to help how future you to be successful in the onboarding process.

00:06:42,229 --> 00:06:45,730
This also helps with a couple of other things.

00:06:45,730 --> 00:06:50,260
First, one of the great things and one of the scary things about new hires is that they

00:06:50,260 --> 00:06:52,500
are a completely blank slate.

00:06:52,500 --> 00:06:56,090
Someone's more experienced, they might be a bit less of a blank slate.

00:06:56,090 --> 00:06:59,990
Might have opinions or ideas how things should be done.

00:06:59,990 --> 00:07:05,159
But working with new grads or people fresh out of university or non traditional backgrounds

00:07:05,159 --> 00:07:08,899
just getting into coding, they probably have no opinions.

00:07:08,899 --> 00:07:12,830
This is great because it means that you can just tell them that your team operates in

00:07:12,830 --> 00:07:15,140
some way and they will believe you.

00:07:15,140 --> 00:07:18,150
If you have been [ Laughter ]

00:07:18,150 --> 00:07:19,990
This is true.

00:07:19,990 --> 00:07:21,570
I don't know.

00:07:21,570 --> 00:07:25,190
I won't tell that story because my current mentee might see that and I don't want them

00:07:25,190 --> 00:07:27,030
to know the Jedi mind tricks I have been using.

00:07:27,030 --> 00:07:32,700
But if you have been fighting with the team for weeks and months to write postmortems

00:07:32,700 --> 00:07:40,270
and they're on a cliff, and Bob Bob is in the room and being a jerk, I don't want to

00:07:40,270 --> 00:07:41,330
write postmortems.

00:07:41,330 --> 00:07:46,460
And if you are teetering on that culture.

00:07:46,460 --> 00:07:51,570
And you say at the end of the outage, we write postmortems.

00:07:51,570 --> 00:07:53,070
It's an outage, write a postmortem.

00:07:53,070 --> 00:07:54,320
They'll build that.

00:07:54,320 --> 00:07:58,010
It's no fighting or questions, none that have.

00:07:58,010 --> 00:08:00,700
You can't totally lie to them.

00:08:00,700 --> 00:08:05,030
Oh, yeah, we write postmortems for all of our outages and then have like seven where

00:08:05,030 --> 00:08:08,950
you don't write postmortems and they have the first outage on call.

00:08:08,950 --> 00:08:10,159
We should write a postmortem.

00:08:10,159 --> 00:08:13,990
No, we shouldn't, we didn't do that for the last seven, you're lying to me.

00:08:13,990 --> 00:08:22,360
But if you're honest, you can build your new hire into the best version of your team.

00:08:22,360 --> 00:08:26,659
The other flipside of this is that if you're not intentional and opinionated with what

00:08:26,659 --> 00:08:31,019
you want to learning with your new hires are gonna learn something.

00:08:31,019 --> 00:08:35,130
If you don't tell them that you write postmortems after every outage, they're going to learn

00:08:35,130 --> 00:08:38,640
that your team is on the fence about whether you should write postmortems.

00:08:38,640 --> 00:08:43,650
If you don't tell them to write commit messages and what you expect, they're going to do whatever

00:08:43,650 --> 00:08:46,840
anyone else on the team is doing.

00:08:46,840 --> 00:08:50,470
That means you can either be intentional and opinionated about what they're going to be

00:08:50,470 --> 00:08:57,850
learning and making habits and skills that turn them into the DevOpsers that you want

00:08:57,850 --> 00:09:04,950
them to become, or leave it to random chance opinion and you can ensure that they don't

00:09:04,950 --> 00:09:13,160
have random chance and every mentor will help their mentees be the best version of themselves.

00:09:13,160 --> 00:09:17,820
How do we get this plan and the first 90 days and form that?

00:09:17,820 --> 00:09:21,560
The first is shockingly easy.

00:09:21,560 --> 00:09:24,320
We write down a list of skills that we want them to acquire.

00:09:24,320 --> 00:09:31,280
It will be amazing to you once you go back to your team huh few teams do this.

00:09:31,280 --> 00:09:37,030
How few people can say at end of 90 days of someone coming on board to our team, this

00:09:37,030 --> 00:09:40,470
is what we want them to know, this is how we want them to behave and this is how we

00:09:40,470 --> 00:09:41,830
want them to operate.

00:09:41,830 --> 00:09:42,830
You all know this.

00:09:42,830 --> 00:09:47,550
You all know that Samantha is like a rock star and she knows everything and she's a

00:09:47,550 --> 00:09:49,110
joy to work with.

00:09:49,110 --> 00:09:51,090
Bob, Bob's a stick in the mud.

00:09:51,090 --> 00:09:53,730
And no one wants to work with Bob because he doesn't do the right thing.

00:09:53,730 --> 00:09:59,630
You have the definitions of the stills, but you haven't codified them to operationalize

00:09:59,630 --> 00:10:02,300
teaching.

00:10:02,300 --> 00:10:09,000
You want to write a list in Google Docs what you want people to learn in the first 90 days.

00:10:09,000 --> 00:10:11,330
This will be one of two forms.

00:10:11,330 --> 00:10:13,280
One is the technical skills.

00:10:13,280 --> 00:10:19,930
This comes from the document we wrote, we do a lot of Python web apps backed by using

00:10:19,930 --> 00:10:27,170
Django, and at the first 90 days, need to be able to write Python.

00:10:27,170 --> 00:10:33,490
Know how the heck Django works and be able to write tests and know that tests are expected.

00:10:33,490 --> 00:10:38,920
For people on board to our team, if someone has five, six, ten years of experience writing

00:10:38,920 --> 00:10:39,920
Python web apps.

00:10:39,920 --> 00:10:46,880
I don't know if Django has been around for ten years, if they have experience, good.

00:10:46,880 --> 00:10:51,270
All of these things, we check them off and don't worry about teaching them.

00:10:51,270 --> 00:10:56,610
But for someone from a boot camp, from a non traditional background, someone just out of

00:10:56,610 --> 00:11:01,810
university, every mentor knows that part of their responsibilities is to be teaching these

00:11:01,810 --> 00:11:03,500
specific set of skills.

00:11:03,500 --> 00:11:09,790
And you can give this to any mentor along with links to suggested references and allow

00:11:09,790 --> 00:11:13,890
give them the opportunity to be successful with their men tee.

00:11:13,890 --> 00:11:18,480
The other piece of this is a set of habits and skills surrounding non technical things.

00:11:18,480 --> 00:11:22,110
So, for example, there's probably a way that you want your team to communicate on code

00:11:22,110 --> 00:11:23,110
review.

00:11:23,110 --> 00:11:26,450
There's a way that you want to interact with your product managers, project managers.

00:11:26,450 --> 00:11:32,180
What are the habits that you want your team to build up around how you use your task tracker?

00:11:32,180 --> 00:11:38,330
For me, using Jira is really important, I tell mentees.

00:11:38,330 --> 00:11:42,490
I make sure that they're building the habit of moving tickets through Jira.

00:11:42,490 --> 00:11:45,490
They're a good teammate and the team lead doesn't need to harass them at the end of

00:11:45,490 --> 00:11:48,620
the sprint and say, what the heck is the status of your tickets?

00:11:48,620 --> 00:11:57,920
We can write them down and give to every mentor such that as part of onboarding a new mentee,

00:11:57,920 --> 00:12:03,050
they know what is expected and need to be teaching that person.

00:12:03,050 --> 00:12:08,740
The next is, once we have that big list of skills, we can use that for every mentee.

00:12:08,740 --> 00:12:13,400
But what we need for each individual mentee is we want to write down a coarser month by

00:12:13,400 --> 00:12:17,060
month plan of what we want them to accomplish.

00:12:17,060 --> 00:12:18,180
This is something like this.

00:12:18,180 --> 00:12:20,000
This is something I made up.

00:12:20,000 --> 00:12:26,500
But for the mentee's first month, get competent with the provisioning systems.

00:12:26,500 --> 00:12:28,029
We're using Terraform.

00:12:28,029 --> 00:12:33,420
The first month, the most important thing is they're able to use our Terraform systems

00:12:33,420 --> 00:12:37,230
and operate them as effectively as possible.

00:12:37,230 --> 00:12:41,130
And as part of that, what we have is a list of major things to learn for every one of

00:12:41,130 --> 00:12:42,600
these months.

00:12:42,600 --> 00:12:47,680
What this means is that as a mentor, you can cross reference the list of skills with what's

00:12:47,680 --> 00:12:52,110
happening in each month to say these are the habits that I should focus on building and

00:12:52,110 --> 00:12:57,720
the skills they really want to focus on teaching my mentee in order to help them be successful.

00:12:57,720 --> 00:13:02,030
And often times this plan follows a pretty basic structure.

00:13:02,030 --> 00:13:07,290
The first is, that first month is focusing on excellent and comfort in one particular

00:13:07,290 --> 00:13:08,290
area.

00:13:08,290 --> 00:13:12,310
So, in the case I showed before, it's a lot of Terraform, it's getting excellent with

00:13:12,310 --> 00:13:13,310
Terraform.

00:13:13,310 --> 00:13:17,520
For us, it's oftentimes getting comfortable with one part of the codebase.

00:13:17,520 --> 00:13:20,750
The frontend or backend or a particular piece.

00:13:20,750 --> 00:13:26,610
We can focus on the core foundational habits that will spread across the rest of our time

00:13:26,610 --> 00:13:29,060
on our team.

00:13:29,060 --> 00:13:35,770
Then over time on month two, what we're starting to focus on is broadening that scope.

00:13:35,770 --> 00:13:39,529
So, after the first month, they should be excellent in one area and then what we want

00:13:39,529 --> 00:13:45,160
to do is we want to have them start to touch all of the different areas within that system.

00:13:45,160 --> 00:13:49,940
And use those core foundational habits that we built up over the first month to be successful

00:13:49,940 --> 00:13:52,310
in other areas.

00:13:52,310 --> 00:13:57,360
And lastly in month three, what we're focus on doing is rounding out those set of skills

00:13:57,360 --> 00:14:03,370
to make them a full independent contributor on whatever system they're on.

00:14:03,370 --> 00:14:08,130
After this, there are tons of areas they can go in, depending on specific skills and interests

00:14:08,130 --> 00:14:11,050
and experience, they can branch out in a lot of directions.

00:14:11,050 --> 00:14:14,980
But for the first three months, this is generally the pattern we are going to follow to make

00:14:14,980 --> 00:14:18,430
sure that people can be successful.

00:14:18,430 --> 00:14:21,970
After that, we have that big list of skills that went them to accomplish over their first

00:14:21,970 --> 00:14:22,970
three months.

00:14:22,970 --> 00:14:27,680
And then we have a unique month by month strategy for them.

00:14:27,680 --> 00:14:32,160
And the last thing is what we want to do is create a script for their first two weeks.

00:14:32,160 --> 00:14:36,410
So, this script is going to be a tactical description of everything we want them to

00:14:36,410 --> 00:14:38,790
accomplish over the first two weeks.

00:14:38,790 --> 00:14:42,589
And oftentimes, that's going to focus on two things.

00:14:42,589 --> 00:14:47,930
First, it's going to focus on a breadth of tasks for what they're gonna do.

00:14:47,930 --> 00:14:53,430
What they'll do is if their first month is spent focused on one particular system, we're

00:14:53,430 --> 00:14:57,030
going to have them touch a lot of different areas in that system.

00:14:57,030 --> 00:15:00,510
So, this implies they can become self sufficient as time goes on.

00:15:00,510 --> 00:15:06,310
And the other piece is we're going to focus on speed of feedback opportunities for them.

00:15:06,310 --> 00:15:08,810
This often means having really small tasks.

00:15:08,810 --> 00:15:11,900
We shoot for one to two days for a task to be completed.

00:15:11,900 --> 00:15:16,500
For pretty much any task that's coming on board that they're doing when they come on

00:15:16,500 --> 00:15:17,600
board.

00:15:17,600 --> 00:15:21,930
And this is important because remember, part of the idea with the opinionated process is

00:15:21,930 --> 00:15:26,980
you want to have clear habits that you went to be building within the people on your team.

00:15:26,980 --> 00:15:32,420
This means in order to build those habits, you need they need to do something.

00:15:32,420 --> 00:15:34,660
Then you need to be able to give them feedback.

00:15:34,660 --> 00:15:39,910
And if they take two weeks to ship their first change, then it's hard to give them feedback

00:15:39,910 --> 00:15:45,130
before week two about how they're doing or what habits they should be change.

00:15:45,130 --> 00:15:47,920
This script in total has a few things.

00:15:47,920 --> 00:15:49,940
First is the small tasks.

00:15:49,940 --> 00:15:54,450
Hopefully they should be completed within a day or two.

00:15:54,450 --> 00:15:58,399
And ideally, you, as their mentor, should know how to complete those tasks already.

00:15:58,399 --> 00:16:04,149
Like, for these first two weeks, these tasks they do not even need to directly be related

00:16:04,149 --> 00:16:06,160
to any project that you are working on.

00:16:06,160 --> 00:16:10,430
The core thing is making sure you have those feedback opportunities and teaching them.

00:16:10,430 --> 00:16:13,850
And so, if that means that they're doing work that isn't directly contributing to whatever

00:16:13,850 --> 00:16:17,870
your first and highest priority OKR is, that's fine.

00:16:17,870 --> 00:16:22,990
By investing early on, they will be successful in the long game.

00:16:22,990 --> 00:16:28,990
The last piece is you want to have the non technical stuff involved.

00:16:28,990 --> 00:16:34,060
Have coffee with where are teammates, set up your 401K, read the documentation how to

00:16:34,060 --> 00:16:35,170
set up your environment.

00:16:35,170 --> 00:16:37,990
That's technical, but whatever.

00:16:37,990 --> 00:16:42,200
All of that stuff, you want it scripted and written down in whatever tool you want to

00:16:42,200 --> 00:16:43,200
be using.

00:16:43,200 --> 00:16:51,540
If the team using Jira, these should be Jira tasks to be easily copied over, Asana, pivotal,

00:16:51,540 --> 00:16:53,080
notes on a white board.

00:16:53,080 --> 00:16:59,510
Whatever that form is, that's the form this script is taking to build the habit for your

00:16:59,510 --> 00:17:03,000
mentees of going to the place to say what should I do next?

00:17:03,000 --> 00:17:06,400
If I have a question, I should go to the white board or into Asana.

00:17:06,400 --> 00:17:15,419
And if you have repeatable things, you can create exercises for them.

00:17:15,419 --> 00:17:20,490
Code Labs, we have something that we call tools week which is a series of exercise that

00:17:20,490 --> 00:17:26,839
we put people through, and we have Django week to get them comfortable with the Django

00:17:26,839 --> 00:17:27,839
documentation.

00:17:27,839 --> 00:17:32,660
All of that is script able and available and given to every mentor such that they can share

00:17:32,660 --> 00:17:37,230
it with their mentee and use it as tools to teach.

00:17:37,230 --> 00:17:39,570
Next, your mentee has arrived.

00:17:39,570 --> 00:17:44,620
I take a drink of water.

00:17:44,620 --> 00:17:47,380
Your goal here is to get them successful as soon as possible.

00:17:47,380 --> 00:17:51,670
And this can seem super daunting and overwhelming if you've done be before.

00:17:51,670 --> 00:17:55,910
But again, the thing is, if you spent the time to write down the plan for the first

00:17:55,910 --> 00:17:59,100
90 days, past you has hooked it up.

00:17:59,100 --> 00:18:04,970
Past you has told you everything that you need to do in order to make your mentee successful.

00:18:04,970 --> 00:18:10,390
What you can do as they start to have questions or comments or concerns or anything, you can

00:18:10,390 --> 00:18:14,940
continually use that plan as a reference for what they should be doing.

00:18:14,940 --> 00:18:19,010
And one of the big things one of the most important things you can do as you're going

00:18:19,010 --> 00:18:24,440
through that plan with them is to have really, really, almost impossibly high standards for

00:18:24,440 --> 00:18:28,640
their first especially for their first couple of weeks on the team.

00:18:28,640 --> 00:18:33,950
One of my favorite stories about this I think came from it was an engineer at some big software

00:18:33,950 --> 00:18:34,950
company.

00:18:34,950 --> 00:18:38,740
But he talked about the fact that his first pull request got turned around like four times

00:18:38,740 --> 00:18:40,480
until it was perfect.

00:18:40,480 --> 00:18:44,680
It had all of the right formatting, all the right variable names and everything about

00:18:44,680 --> 00:18:46,910
it was spot on.

00:18:46,910 --> 00:18:50,840
This was really striking because was like, one, that's awesome that mentor was able to

00:18:50,840 --> 00:18:55,160
instill such high standards and build the skills and the habits of having those really

00:18:55,160 --> 00:18:56,860
high standards on the team.

00:18:56,860 --> 00:19:03,160
The other piece of it was, it was striking to me that he said afterwards every pull request

00:19:03,160 --> 00:19:05,650
that mentee sent, it was perfect.

00:19:05,650 --> 00:19:10,429
Because they had sent that expectation and set that bar and built those habits from their

00:19:10,429 --> 00:19:14,110
process that this is what we're gone be expecting out of you from.

00:19:14,110 --> 00:19:19,090
And so, as a mentor, you want to make sure that you're having those high standards, especially

00:19:19,090 --> 00:19:24,100
early on, to make sure that your mentee falls into those good habits of having high standards

00:19:24,100 --> 00:19:25,100
themselves.

00:19:25,100 --> 00:19:28,640
Now, the flipside of this is this can also feel really hard.

00:19:28,640 --> 00:19:35,070
You show up, oh, it took four days to get my first pull request, I can never get my

00:19:35,070 --> 00:19:36,700
braces right.

00:19:36,700 --> 00:19:39,930
If you're someone with a lot of confidence, that's awesome.

00:19:39,930 --> 00:19:41,150
You'll fight through that.

00:19:41,150 --> 00:19:47,650
If you don't feel you belong or don't have confidence about your ability, this might

00:19:47,650 --> 00:19:50,720
beat you down and make you feel like you're not in the right place.

00:19:50,720 --> 00:19:55,411
As a mentor, junior job is to balance the high standards with making sure that the mentees

00:19:55,411 --> 00:19:58,470
are feeling successful as well.

00:19:58,470 --> 00:20:00,080
This can take the form of a lot of things.

00:20:00,080 --> 00:20:01,580
I'm a big fan of high fives.

00:20:01,580 --> 00:20:07,250
I'm sure to be sitting next to physically next to my mentee.

00:20:07,250 --> 00:20:10,610
We will move desks around and not tell facilities.

00:20:10,610 --> 00:20:12,620
Sorry any facilities people in the room.

00:20:12,620 --> 00:20:19,140
And we will pick up our laptops and move next to the people that are new and give them a

00:20:19,140 --> 00:20:23,710
high five or if accessible.

00:20:23,710 --> 00:20:32,230
If you are distributed, Slack and emojis are great.

00:20:32,230 --> 00:20:36,870
Any time they do anything great, or anything new, first change pushed to production, first

00:20:36,870 --> 00:20:40,260
incident that they resolve themselves.

00:20:40,260 --> 00:20:45,500
That always gets a Slack message with a whole bunch of kudos in it.

00:20:45,500 --> 00:20:48,220
Because, it helps them know, one, they're being successful.

00:20:48,220 --> 00:20:52,240
And two, helps them start building those habits.

00:20:52,240 --> 00:20:55,740
I'm a big fan of fist bumps for this too.

00:20:55,740 --> 00:20:59,640
The other piece is to make sure that you're checking in frequently.

00:20:59,640 --> 00:21:03,100
This is important this is less important for people who are more senior and might have

00:21:03,100 --> 00:21:04,660
lots of confidence.

00:21:04,660 --> 00:21:09,001
But for people who are less familiar, less sure about their place on their team, if they

00:21:09,001 --> 00:21:12,370
can't figure something out, they're probably going feel like they're dumb.

00:21:12,370 --> 00:21:13,370
I should know this.

00:21:13,370 --> 00:21:15,600
Everyone on the team knows how this Terraform works.

00:21:15,600 --> 00:21:17,770
Why not I understand it?

00:21:17,770 --> 00:21:22,120
Because it's hard to wrap your head around it if you have not seen it before.

00:21:22,120 --> 00:21:28,250
It's your job as their mentor to pull the questions out so they can be unblocked and

00:21:28,250 --> 00:21:30,810
be successful.

00:21:30,810 --> 00:21:33,990
I like to have a particular check in strategy.

00:21:33,990 --> 00:21:36,650
First two to three weeks, daily check ins.

00:21:36,650 --> 00:21:40,970
Often more than daily.

00:21:40,970 --> 00:21:41,970
Do you have any questions?

00:21:41,970 --> 00:21:43,870
Is there anything I can help?

00:21:43,870 --> 00:21:50,060
After stand up, check in to say, hey, if I'm a little bit unsure how they're doing, hey,

00:21:50,060 --> 00:21:52,610
do you have any questions about anything?

00:21:52,610 --> 00:21:56,810
And lastly, before I end the day, hey, do you have questions about anything before I

00:21:56,810 --> 00:21:57,810
leave?

00:21:57,810 --> 00:22:00,390
This is another reason small tasks are really useful.

00:22:00,390 --> 00:22:05,299
Because it gives you a really great touch point to say, if you know a task should only

00:22:05,299 --> 00:22:10,110
take one to two days and you don't see a code review and you're not you don't see progress

00:22:10,110 --> 00:22:15,280
towards a code review after maybe one and a half, two days, ten you know, even if that

00:22:15,280 --> 00:22:19,280
person is tell you that everything is fine, it's time for you to start to be more proactive

00:22:19,280 --> 00:22:23,680
and checking in and saying, hey, how is this going?

00:22:23,680 --> 00:22:28,640
Next thing is, I'll schedule 5 minute one on ones with my mentee for the first 14 weeks.

00:22:28,640 --> 00:22:35,690
Additionally with the manager, especially if the managers are pure people managers.

00:22:35,690 --> 00:22:41,679
If managers on your team have six, eight, ten, maybe 12 direct reports, there's no way

00:22:41,679 --> 00:22:47,640
they're giving hands on technical coaching to the new person on your team.

00:22:47,640 --> 00:22:49,850
It needs to be the mentor's responsibility.

00:22:49,850 --> 00:22:51,440
Again, especially for new grads.

00:22:51,440 --> 00:22:54,470
And especially for people that are newer to the system.

00:22:54,470 --> 00:22:55,990
How they can do that effectively.

00:22:55,990 --> 00:22:59,880
And so, you can also be referencing your list of skills for that.

00:22:59,880 --> 00:23:06,679
Lastly, any time I give a new type of tasks, I check in every one to two hours.

00:23:06,679 --> 00:23:07,960
This is going to take a lot of time.

00:23:07,960 --> 00:23:10,760
I'm running short, we la breeze through a slide.

00:23:10,760 --> 00:23:16,310
And last thing is how to handle questions from your mentee.

00:23:16,310 --> 00:23:18,590
What happens when your mentee it like this kitten.

00:23:18,590 --> 00:23:20,750
I think of the four step process.

00:23:20,750 --> 00:23:23,370
The first is a path to the answer.

00:23:23,370 --> 00:23:28,610
I want to figure out not just the answer, but how do I know the answer to given them

00:23:28,610 --> 00:23:30,590
every step along the way.

00:23:30,590 --> 00:23:32,679
And take a ranging shot.

00:23:32,679 --> 00:23:37,190
I'm going say, tell me how much you know about the database, how much you know about Terraform

00:23:37,190 --> 00:23:40,440
or AWS security groups.

00:23:40,440 --> 00:23:41,440
This is great.

00:23:41,440 --> 00:23:45,970
This guides the set of skills I can give them, what we can pull from the list that I wanted

00:23:45,970 --> 00:23:48,740
to deliver for that particular thing.

00:23:48,740 --> 00:23:53,040
It also prevents you from being a jerk and spending 20 minutes explaining something they

00:23:53,040 --> 00:23:56,180
understand.

00:23:56,180 --> 00:23:58,590
Which makes you feel silly as a mentor.

00:23:58,590 --> 00:24:03,190
And the next is you want to decide what they can learn.

00:24:03,190 --> 00:24:07,740
You have this big list of skills and you don't want to be overwhelming your mentee with those

00:24:07,740 --> 00:24:09,309
skills at one time.

00:24:09,309 --> 00:24:11,419
It's too much to handle.

00:24:11,419 --> 00:24:16,240
Once you know where they're at, you can figure out which of that subset do I want to teach

00:24:16,240 --> 00:24:17,980
them?

00:24:17,980 --> 00:24:20,740
Then you want to walk them look the path to that answer.

00:24:20,740 --> 00:24:24,250
You know the steps that you took, you know the highlights that you want to give your

00:24:24,250 --> 00:24:25,250
mentee.

00:24:25,250 --> 00:24:29,280
And it's time to walk them through to get them there.

00:24:29,280 --> 00:24:33,490
Depending on where your mentee is, that will look a little differently.

00:24:33,490 --> 00:24:38,620
So, if someone's less familiar, chances are I'm going to be doing lots of hands on coaching

00:24:38,620 --> 00:24:44,240
and training and having them build habits directly by just typing out the commands by

00:24:44,240 --> 00:24:46,850
typing out the commands a bunch of times.

00:24:46,850 --> 00:24:50,570
We're trying to build the core habits rather than the higher level thinking.

00:24:50,570 --> 00:25:00,179
If they're more familiar, it's more coaching and mentoring.

00:25:00,179 --> 00:25:04,530
And building this habit of when I have a question, how do we resolve that?

00:25:04,530 --> 00:25:06,680
This is gonna take a lot of time.

00:25:06,680 --> 00:25:08,260
And it's gonna be patient.

00:25:08,260 --> 00:25:12,669
If this is your first time doing this, you will need to explain that your mentee will

00:25:12,669 --> 00:25:17,190
forget what an AWS security group is, forget with the Terraform is code lives.

00:25:17,190 --> 00:25:20,880
It took you months or years to get this.

00:25:20,880 --> 00:25:27,820
You can't expect them to get it overnight, but reinforcing the skills and habits, you

00:25:27,820 --> 00:25:29,799
can make sure they are successful.

00:25:29,799 --> 00:25:31,780
Thank you so much.

00:25:31,780 --> 00:25:33,059
I'm running low on time.

00:25:33,059 --> 00:25:36,799
I don't understand why, but this GIF always slays.

00:25:36,799 --> 00:25:39,640
Keep using it.

00:25:39,640 --> 00:25:42,270
Take three things home from a presentation.

00:25:42,270 --> 00:25:45,050
The first thing is I'm running out of time.

00:25:45,050 --> 00:25:46,720
But these slides are all online.

00:25:46,720 --> 00:25:50,470
First, have an opinionated process, build good habits early on, make sure to take time

00:25:50,470 --> 00:25:55,850
to answer your mentee's exceptions and if you look at the Twitter handle in the bottom

00:25:55,850 --> 00:25:59,710
right, and the slide deck is linked to there and you can find all of those.

00:25:59,710 --> 00:26:00,710
We are hiring.

00:26:00,710 --> 00:26:01,710
We do health care data stuff.

00:26:01,710 --> 00:26:07,640
If you're interested in civic tech, gov tech, bringing down cost of health care and make

00:26:07,640 --> 00:26:10,700
people have better quality of care, talk to me.

00:26:10,700 --> 00:26:14,460
Or if you're interested and don't apt job, that's okay too.

00:26:14,460 --> 00:26:20,190
We are in San Francisco and have a remote structured team if you have worked in a distributed

00:26:20,190 --> 00:26:21,190
team before.

00:26:21,190 --> 00:26:23,330
Thank you, everyone.

00:26:23,330 --> 00:26:24,330
And enjoy lunch.

00:26:24,330 --> 00:26:24,331

YouTube URL: https://www.youtube.com/watch?v=AppPC-76osk


