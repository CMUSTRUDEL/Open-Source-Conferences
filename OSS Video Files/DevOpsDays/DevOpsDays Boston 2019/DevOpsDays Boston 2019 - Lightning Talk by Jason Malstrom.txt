Title: DevOpsDays Boston 2019 - Lightning Talk by Jason Malstrom
Publication date: 2019-10-11
Playlist: DevOpsDays Boston 2019
Description: 
	Building Self Service Infrastructure for Developers by Jason Malstrom

#DevOpsDays #DevOpsDaysBoston
Captions: 
	00:00:01,370 --> 00:00:17,500
>> Hi, there.

00:00:17,500 --> 00:00:19,110
My name is Jason.

00:00:19,110 --> 00:00:24,210
I don't have any slides I'm going to kind of cowboy this and hope I remember all my

00:00:24,210 --> 00:00:25,210
points.

00:00:25,210 --> 00:00:29,580
I'm a senior DevOps engineer over at Salsify.

00:00:29,580 --> 00:00:34,010
We enable brands to win on the digital shelf.

00:00:34,010 --> 00:00:43,320
Brands big companies, convincing big companies to allow us to handle their data, which means

00:00:43,320 --> 00:00:47,629
which in theory puts a wedge between dev and ops.

00:00:47,629 --> 00:00:51,469
I'm on the ops side of that wedge.

00:00:51,469 --> 00:00:54,839
The other problem is we love microservices.

00:00:54,839 --> 00:00:59,479
We have Kubernetes and developers want to start a lot of new micro services so we can

00:00:59,479 --> 00:01:01,589
sell more stuff.

00:01:01,589 --> 00:01:06,860
So the problem is, they put in a lot of tickets to ops and this annoys us.

00:01:06,860 --> 00:01:11,930
But the bigger problem is we become a bottleneck so they aren't able to get their stuff into

00:01:11,930 --> 00:01:13,120
testing.

00:01:13,120 --> 00:01:16,650
And then we were thinking well, it's testing.

00:01:16,650 --> 00:01:17,650
That's okay.

00:01:17,650 --> 00:01:24,760
So we decided like, what a lot of our tools seem to have inputs.

00:01:24,760 --> 00:01:34,630
We use JSON net to make Kubernetes value.

00:01:34,630 --> 00:01:41,650
We have this Jenkins sitting around, we have circle CI, but we still have Jenkins sitting

00:01:41,650 --> 00:01:45,980
here so let's make a nice little form for developers to fill out.

00:01:45,980 --> 00:01:54,690
A lot of our web tools have APIs so we can write some things to set up the service in

00:01:54,690 --> 00:01:56,270
there, that works.

00:01:56,270 --> 00:02:02,390
And for the things that are generating code, it turns out it's kind of scriptable and you

00:02:02,390 --> 00:02:05,240
can develop a pull request.

00:02:05,240 --> 00:02:10,439
We developed this system so developers could put what they wanted, it would spin up their

00:02:10,439 --> 00:02:18,180
service right into Kubernetes with all the RDS and S3 they want, and we would just on

00:02:18,180 --> 00:02:22,680
the back end approve their PR for some socks 2 stuff.

00:02:22,680 --> 00:02:29,489
Then we're thinking why can't they just put into production themselves.

00:02:29,489 --> 00:02:31,739
So we ended up inventing some rules.

00:02:31,739 --> 00:02:38,810
Instead of doing the PR on the post, we'll have to approve your PR before it actually

00:02:38,810 --> 00:02:40,360
launches there.

00:02:40,360 --> 00:02:45,140
And then we decide is your micro service is facing the Internet, you probably should have

00:02:45,140 --> 00:02:49,560
a conversation and do a security checklist.

00:02:49,560 --> 00:02:58,790
And then we also want to ensure your GitHub repo actually has guardrails on it.

00:02:58,790 --> 00:03:02,250
And has branch protection, a few things like that.

00:03:02,250 --> 00:03:07,090
We're able to make this into one big, it's a pretty ugly looking script, but it runs

00:03:07,090 --> 00:03:08,090
other scripts.

00:03:08,090 --> 00:03:14,560
And now developers can actually push out to their services without relying on us.

00:03:14,560 --> 00:03:20,519
We have to only approve a PR, instead of like copying from a ticket into a form into run

00:03:20,519 --> 00:03:21,519
tools.

00:03:21,519 --> 00:03:23,269
And we didn't have the best tools.

00:03:23,269 --> 00:03:26,110
We're actually still working on improving them.

00:03:26,110 --> 00:03:28,029
We want to go to Terraform.

00:03:28,029 --> 00:03:31,620
But instead of thinking about the tools, we are thinking of what can our current tools

00:03:31,620 --> 00:03:32,620
do.

00:03:32,620 --> 00:03:35,889
A lot of times we get stuck do I have the best tools or not.

00:03:35,889 --> 00:03:38,090
That doesn't really matter.

00:03:38,090 --> 00:03:40,260
Think about what can my tools do.

00:03:40,260 --> 00:03:46,590
And other people, they get stuck, we can't give developers access to put things in production.

00:03:46,590 --> 00:03:53,200
I always encourage you with whatever regulatory compliance you have to do, don't think why

00:03:53,200 --> 00:03:55,909
I can't, think of why I can.

00:03:55,909 --> 00:04:02,099
And maybe you can't do 100%, but 90% or 80% is way better than 0%.

00:04:02,099 --> 00:04:07,791
And if you can remove bottlenecks and pain points for the people you support, that's

00:04:07,791 --> 00:04:09,340
a good thing.

00:04:09,340 --> 00:04:14,430
So that was the very quick 6-month journey we took.

00:04:14,430 --> 00:04:15,430
Bottle down and thank you.

00:04:15,430 --> 00:04:15,431

YouTube URL: https://www.youtube.com/watch?v=DWsAjOBuN1g


