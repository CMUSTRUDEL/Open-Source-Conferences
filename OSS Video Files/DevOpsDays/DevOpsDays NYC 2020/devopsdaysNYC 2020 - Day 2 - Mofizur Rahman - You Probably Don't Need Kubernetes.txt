Title: devopsdaysNYC 2020 - Day 2 - Mofizur Rahman - You Probably Don't Need Kubernetes
Publication date: 2020-03-30
Playlist: DevOpsDays NYC 2020
Description: 
	Kubernetes is a great piece of technology. It is probably the de-facto container orchestrator for most people using container orchestrators. There is a huge demand for it as well as a lot of interest from businesses to move to Kubernetes.

Like anything that is new and hip, there will always be more want for something than there is need for it. Kubernetes is no different. Everyone “wants” the new cool thing. But how many “need” it? Are we adding more complexity to our system than the intended benefit?

In this talk I will try to look beyond the hype and explain why you probably don’t need Kubernetes.
Captions: 
	00:00:14,710 --> 00:00:18,850
hello my name is Murphy I'm advocate

00:00:17,020 --> 00:00:20,980
developer advocate for IBM and I mostly

00:00:18,850 --> 00:00:22,630
focus on containers and kubernetes so

00:00:20,980 --> 00:00:23,890
it's kind of ironic that I'm talking

00:00:22,630 --> 00:00:26,830
about why people probably don't need

00:00:23,890 --> 00:00:28,720
communities so before I get started

00:00:26,830 --> 00:00:31,270
actually to differentiate between the

00:00:28,720 --> 00:00:33,880
word want and need now if you want

00:00:31,270 --> 00:00:36,489
kubernetes I can tell you nothing to

00:00:33,880 --> 00:00:37,899
convince the otherwise if you need

00:00:36,489 --> 00:00:39,820
kubernetes though I can actually tell

00:00:37,899 --> 00:00:42,370
you why you probably might not need it

00:00:39,820 --> 00:00:45,280
because if anyone asks you

00:00:42,370 --> 00:00:46,690
we need kubernetes ask them why because

00:00:45,280 --> 00:00:49,359
that's the first question to ask why do

00:00:46,690 --> 00:00:50,829
we want who need kubernetes because

00:00:49,359 --> 00:00:54,789
maybe they want to use micro services

00:00:50,829 --> 00:00:56,859
maybe because monoliths are also bad but

00:00:54,789 --> 00:00:59,019
like done poorly micro service actually

00:00:56,859 --> 00:01:01,149
can lead to something even worse than

00:00:59,019 --> 00:01:03,670
mono let's distribute monolith where

00:01:01,149 --> 00:01:04,839
it's the worst of both worlds it's slow

00:01:03,670 --> 00:01:07,600
to change because everything is

00:01:04,839 --> 00:01:09,310
connected but it's also micro services

00:01:07,600 --> 00:01:10,690
that's that means no one knows exactly

00:01:09,310 --> 00:01:12,010
what's going on in the Interop location

00:01:10,690 --> 00:01:13,420
at any given time because everybody just

00:01:12,010 --> 00:01:17,409
like knows one small part of the whole

00:01:13,420 --> 00:01:19,600
thing because we are not really good at

00:01:17,409 --> 00:01:21,700
thinking about disjointed things at any

00:01:19,600 --> 00:01:23,140
given time this is the guy who kind of

00:01:21,700 --> 00:01:25,420
like coined the term micro service and

00:01:23,140 --> 00:01:26,829
he doesn't think we should be just

00:01:25,420 --> 00:01:28,180
starting with micro service because we

00:01:26,829 --> 00:01:30,640
can't really think of a problem in the

00:01:28,180 --> 00:01:33,070
distributed system that easily and I

00:01:30,640 --> 00:01:34,420
almost always feel like that we are just

00:01:33,070 --> 00:01:36,340
creating technologies just solve

00:01:34,420 --> 00:01:38,409
problems that we created ourselves so he

00:01:36,340 --> 00:01:40,149
created Microsoft resolve monolith dr.

00:01:38,409 --> 00:01:41,920
self micro service kubernetes solved

00:01:40,149 --> 00:01:44,049
docker neither talking about service

00:01:41,920 --> 00:01:46,119
mash serverless to solve the problems

00:01:44,049 --> 00:01:47,500
kubernetes is starting but one thing

00:01:46,119 --> 00:01:49,240
have to remember here is that kubernetes

00:01:47,500 --> 00:01:51,250
not an easy system just by going to

00:01:49,240 --> 00:01:53,259
kubernetes like it's just the first step

00:01:51,250 --> 00:01:55,270
tip of the iceberg you have to actually

00:01:53,259 --> 00:01:55,750
learn a lot more things to update

00:01:55,270 --> 00:01:57,130
kubernetes

00:01:55,750 --> 00:01:59,259
update your application change your

00:01:57,130 --> 00:02:02,109
stack like people really don't think

00:01:59,259 --> 00:02:04,390
about the debt you create and solving

00:02:02,109 --> 00:02:06,250
your problem to a solution never gonna

00:02:04,390 --> 00:02:07,899
get you anywhere because you are

00:02:06,250 --> 00:02:09,759
basically doing extra work to change

00:02:07,899 --> 00:02:11,770
your problem to match the solution and

00:02:09,759 --> 00:02:13,900
some benefits you're gonna get out of

00:02:11,770 --> 00:02:15,640
this it's gonna actually in the long run

00:02:13,900 --> 00:02:17,380
it's gonna hurt you even more we are

00:02:15,640 --> 00:02:18,760
trying to foolproof our application for

00:02:17,380 --> 00:02:20,950
the future because kubernetes is the

00:02:18,760 --> 00:02:22,540
future but let me tell you that new

00:02:20,950 --> 00:02:25,150
technologies will keep coming up so you

00:02:22,540 --> 00:02:26,850
catch this kubernetes game in two years

00:02:25,150 --> 00:02:29,370
something is gonna come and you have to

00:02:26,850 --> 00:02:31,560
that game next so this is kind of like a

00:02:29,370 --> 00:02:32,820
like a dog chasing his trail kubernetes

00:02:31,560 --> 00:02:34,530
doesn't magically is gonna make your

00:02:32,820 --> 00:02:36,540
application faster or your deployment

00:02:34,530 --> 00:02:37,440
faster it's new but it doesn't

00:02:36,540 --> 00:02:39,420
necessarily mean it's better than

00:02:37,440 --> 00:02:41,460
everything that came before it it's

00:02:39,420 --> 00:02:42,840
useful but it doesn't mean it's gonna be

00:02:41,460 --> 00:02:45,540
useful for the problem you are trying to

00:02:42,840 --> 00:02:47,610
solve at this moment so at this point

00:02:45,540 --> 00:02:49,290
you might be wondering if I'm telling

00:02:47,610 --> 00:02:51,120
you not kubernetes then what right like

00:02:49,290 --> 00:02:52,680
I honestly don't really have an answer

00:02:51,120 --> 00:02:54,870
like one word answer that you can just

00:02:52,680 --> 00:02:56,790
use instead of kubernetes because it's

00:02:54,870 --> 00:02:58,050
not a simple answers just use this

00:02:56,790 --> 00:03:00,600
technology there's gonna be everything's

00:02:58,050 --> 00:03:02,580
gonna be great it's because using

00:03:00,600 --> 00:03:04,020
kubernetes requires some cultural change

00:03:02,580 --> 00:03:05,910
in your application in your company in

00:03:04,020 --> 00:03:08,010
your team like having a culture of

00:03:05,910 --> 00:03:09,390
communication and collaboration is going

00:03:08,010 --> 00:03:10,740
to get you much farther than any tool

00:03:09,390 --> 00:03:12,600
can possibly can

00:03:10,740 --> 00:03:14,250
having communication between teams is

00:03:12,600 --> 00:03:15,980
gonna solve a lot more problems than

00:03:14,250 --> 00:03:18,960
just a random abstraction can and

00:03:15,980 --> 00:03:21,090
restructure near your company and your

00:03:18,960 --> 00:03:22,980
application is getting much more useful

00:03:21,090 --> 00:03:24,450
than just refactoring your code from

00:03:22,980 --> 00:03:26,250
aman only to micro service or the other

00:03:24,450 --> 00:03:28,500
way around or like a micro services

00:03:26,250 --> 00:03:30,600
server less because you can always keep

00:03:28,500 --> 00:03:32,160
refactoring but understanding how teams

00:03:30,600 --> 00:03:34,560
work together is much more important

00:03:32,160 --> 00:03:36,030
so it's here's some advice automate

00:03:34,560 --> 00:03:37,350
everything anything that can be

00:03:36,030 --> 00:03:39,270
automated should be automated and we

00:03:37,350 --> 00:03:40,680
have great tools for automating things

00:03:39,270 --> 00:03:42,330
we already have like sorry

00:03:40,680 --> 00:03:45,780
virtual machines and everything can be

00:03:42,330 --> 00:03:48,360
automated now and next is test you want

00:03:45,780 --> 00:03:49,530
to test everything from your development

00:03:48,360 --> 00:03:51,390
environment to the production and

00:03:49,530 --> 00:03:53,040
anything that runs on your development

00:03:51,390 --> 00:03:54,270
environment you should be able to

00:03:53,040 --> 00:03:56,670
guarantee that it's gonna just work

00:03:54,270 --> 00:03:57,660
everywhere so just by going to

00:03:56,670 --> 00:04:00,360
kubernetes you're not gonna actually

00:03:57,660 --> 00:04:04,050
build up this testing framework all of a

00:04:00,360 --> 00:04:06,150
sudden so one thing LCI teller said

00:04:04,050 --> 00:04:07,590
which is really interesting that just by

00:04:06,150 --> 00:04:08,970
moving to micro service you're not gonna

00:04:07,590 --> 00:04:10,500
magically find the discipline you never

00:04:08,970 --> 00:04:11,880
had in one with the system right like

00:04:10,500 --> 00:04:13,350
just because you moved to kubernetes all

00:04:11,880 --> 00:04:15,540
of a sudden your teams are not doing

00:04:13,350 --> 00:04:18,090
better programming it's still writing

00:04:15,540 --> 00:04:20,160
the same code so final thoughts is

00:04:18,090 --> 00:04:21,780
reevaluate your motivation if you're

00:04:20,160 --> 00:04:22,650
using kubernetes just put in a resume

00:04:21,780 --> 00:04:24,240
sure use it

00:04:22,650 --> 00:04:25,830
I mean learn kubernetes put in a resume

00:04:24,240 --> 00:04:27,450
but if you're trying to actually solve

00:04:25,830 --> 00:04:29,520
some problem in your company actually

00:04:27,450 --> 00:04:31,500
think is kubernetes the best solution

00:04:29,520 --> 00:04:33,150
for your system understand what you're

00:04:31,500 --> 00:04:34,500
solving right are you trying to solve

00:04:33,150 --> 00:04:36,840
something that kubernetes is actually

00:04:34,500 --> 00:04:38,220
suited to solve if it is it is a great

00:04:36,840 --> 00:04:38,900
tool it is a great solution that was

00:04:38,220 --> 00:04:41,000
created

00:04:38,900 --> 00:04:42,860
but just by moving to kubernetes they're

00:04:41,000 --> 00:04:47,090
not gonna magically solve that probably

00:04:42,860 --> 00:04:48,920
we never had but once you have done all

00:04:47,090 --> 00:04:50,150
your homework and you understand you

00:04:48,920 --> 00:04:52,250
understand kubernetes the solution

00:04:50,150 --> 00:04:53,930
kubernetes will be here or something

00:04:52,250 --> 00:04:56,240
similar will it's just an implementation

00:04:53,930 --> 00:04:57,590
detail in five years we might not even

00:04:56,240 --> 00:04:58,850
even have something like kubernetes

00:04:57,590 --> 00:05:01,520
because technology change all the time

00:04:58,850 --> 00:05:03,290
but the practices you learn will be here

00:05:01,520 --> 00:05:05,330
due to end I would like to use this

00:05:03,290 --> 00:05:07,280
quote from Albert Einstein what is right

00:05:05,330 --> 00:05:09,660
is not always popular and what is

00:05:07,280 --> 00:05:11,720
popular is not always right thank you

00:05:09,660 --> 00:05:19,149
[Applause]

00:05:11,720 --> 00:05:19,149
[Music]

00:05:21,650 --> 00:05:23,710

YouTube URL: https://www.youtube.com/watch?v=GwTo8lxBXwE


