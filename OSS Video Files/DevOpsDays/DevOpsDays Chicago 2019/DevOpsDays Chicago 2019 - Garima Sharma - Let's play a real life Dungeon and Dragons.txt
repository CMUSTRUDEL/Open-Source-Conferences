Title: DevOpsDays Chicago 2019 - Garima Sharma - Let's play a real life Dungeon and Dragons
Publication date: 2019-09-09
Playlist: DevOpsDays Chicago 2019
Description: 
	Garima Sharma - Let's play a real life Dungeon and Dragons

Does your team struggle with context and is scared of going on-call? New team members take a lot of time to get on-boarded? Are you looking for a fun way to increase the knowledge of your team? If your answers are mostly “yes”, then this talk is for you.

D&D is a brief concept discussed in the SRE book. A number of engineering teams at Pivotal use this technique to prepare team members for going on-call. The idea is to re-investigate a recent on-call incident with the team. The team tells the Dungeon Master what they would do or query to understand or solve the problem, and the dungeon master tells the team what happens with each action or observation.

In this highly interactive session, I will be acting as Dungeon Master as we roleplay some real life issues. We will have a few scenarios in which something is not working properly and volunteers from audience will go through a series of questions/steps to isolate those problems. We will see how the D&D exercise can provide more context of the infrastructure to the volunteers. These issues will be fairly common, but the process of going through debugging these issues as a team is fun and a great learning exercise. The key takeaway for audience is how to hold a similar session for their team and gain more confidence on going on-call.
Captions: 
	00:00:13,759 --> 00:00:18,470
Garima Sharma -- Let's play a real Life Dungeon and Dragons!

00:00:18,470 --> 00:00:26,560
>> Our program will be starting momentarily in main hall C. Please make your way to main

00:00:26,560 --> 00:00:27,570
hall C.

00:00:27,570 --> 00:00:33,010
If you are here, please make your way to the center sections and to the front.

00:00:33,010 --> 00:00:34,370
Open spaces, time slot two, will be beginning momentarily.

00:00:34,370 --> 00:00:35,370
All right!

00:00:35,370 --> 00:00:36,370
Welcome to this room.

00:00:36,370 --> 00:00:37,370
As you enter the room, you notice a stage with a person on it.

00:00:37,370 --> 00:00:38,370
But it is not the right person.

00:00:38,370 --> 00:00:39,370
And, as you check your perception role, you notice you sat in the wrong spot.

00:00:39,370 --> 00:00:40,370
You need to move to the center of the room, because this is an interactive session.

00:00:40,370 --> 00:00:41,370
So please take this moment to come to the center and gather' round the stage, so we

00:00:41,370 --> 00:00:42,370
can welcome Garima Sharma for her presentation!

00:00:42,370 --> 00:00:43,370
>>Garima Sharma: Thank you, I got it.

00:00:43,370 --> 00:00:44,370
[ Applause ]. Let's see if I have power in my machine.

00:00:44,370 --> 00:00:45,370
It should show up now.

00:00:45,370 --> 00:00:46,370
We'll try again.

00:00:46,370 --> 00:00:47,370
Three, two, one, now.

00:00:47,370 --> 00:00:48,370
I will plug it, plug it again.

00:00:48,370 --> 00:00:49,370
I will try that.

00:00:49,370 --> 00:00:50,370
That doesn't look like my slides.

00:00:50,370 --> 00:00:51,370
[ Applause ]. Got it, awesome.

00:00:51,370 --> 00:00:52,370
Thank you so much, everyone, for being here.

00:00:52,370 --> 00:00:53,370
I am Garima, we are playing a real life Dungeons & Dragons today.

00:00:53,370 --> 00:00:54,370
I have never played the original version, so good luck.

00:00:54,370 --> 00:00:55,370
This is how to reach out to me, because there was literally nothing else that I wanted to

00:00:55,370 --> 00:00:57,170
talk about me, except the fact that I work for this company -- it is great, I work on

00:00:57,170 --> 00:00:58,170
the R&D section.

00:00:58,170 --> 00:00:59,170
I'm on a team that helps with stem cells, if you know about it.

00:00:59,170 --> 00:01:02,039
So this is going to be a highly interactive session, I'm going to ask you a lot of questions,

00:01:02,039 --> 00:01:06,650
and in turn, I promise you will get a chance to ask me a lot of questions as well.

00:01:06,650 --> 00:01:12,440
So, for now, let's start with: How many of you go on call?

00:01:12,440 --> 00:01:14,410
Raise your hands.

00:01:14,410 --> 00:01:18,350
DevOps days, what should I expect?

00:01:18,350 --> 00:01:22,700
How many of you have enough team members to go on call?

00:01:22,700 --> 00:01:27,340
Yes, I see the number of hands are going down.

00:01:27,340 --> 00:01:31,870
How many of you think going on call is stressful?

00:01:31,870 --> 00:01:36,030
This talk is for you.

00:01:36,030 --> 00:01:41,240
On-boarding newbies is very stressful to go on call.

00:01:41,240 --> 00:01:42,560
How many of you feel that?

00:01:42,560 --> 00:01:43,680
Kind of.

00:01:43,680 --> 00:01:44,680
Awesome.

00:01:44,680 --> 00:01:50,720
And, last question: For this slide, how many of you know the original game?

00:01:50,720 --> 00:01:51,720
Yes.

00:01:51,720 --> 00:01:54,420
Everybody except me.

00:01:54,420 --> 00:02:01,570
So I will be referencing a lot of things from this book called Site Reliability Engineering,

00:02:01,570 --> 00:02:03,850
also called SRE.

00:02:03,850 --> 00:02:12,569
It is a position in companies, you know it, I will call it SRE.

00:02:12,569 --> 00:02:17,530
So let's talk about why, and in what scenarios, going on-call can be stressful.

00:02:17,530 --> 00:02:26,250
So, as part of the SRE work, for one person, it is healthy to go on call once a week in

00:02:26,250 --> 00:02:27,780
a month.

00:02:27,780 --> 00:02:33,930
If you are going on call for more than that, if you notice the face is now sad.

00:02:33,930 --> 00:02:38,769
If you go more than that, it is definitely going to be stressful.

00:02:38,769 --> 00:02:40,120
So let's do the math.

00:02:40,120 --> 00:02:47,849
So one primary person to go on call, one secondary, followed by four weeks in a month.

00:02:47,849 --> 00:02:53,659
So all those who said that you have enough team members, do you have eight highly qualified

00:02:53,659 --> 00:02:57,819
and on-board engineers to go on call?

00:02:57,819 --> 00:03:01,390
Not really, awesome.

00:03:01,390 --> 00:03:03,439
You need eight people.

00:03:03,439 --> 00:03:06,519
If you count those numbers, it is eight.

00:03:06,519 --> 00:03:08,709
The next is incidents per day.

00:03:08,709 --> 00:03:16,709
Even if you have eight engineers and 500 engineers happening per day, it is not a healthy team

00:03:16,709 --> 00:03:19,159
and engineers will burn out.

00:03:19,159 --> 00:03:25,170
So you need an on-call of a maximum of two incidents per day.

00:03:25,170 --> 00:03:29,010
How do we on-board people?

00:03:29,010 --> 00:03:36,480
We on-board by drawing boxes and lines about how the infrastructure structure is, it is

00:03:36,480 --> 00:03:42,349
great, and the person who is doing it, it is stressful.

00:03:42,349 --> 00:03:49,379
If you did not notice, the presenter in this case is smiling and now he is not smiling.

00:03:49,379 --> 00:03:53,290
It is overwhelming, to do it every now and then.

00:03:53,290 --> 00:03:59,599
So what is the next way to on-board people?

00:03:59,599 --> 00:04:01,569
I love it.

00:04:01,569 --> 00:04:04,329
Fibros are great.

00:04:04,329 --> 00:04:13,159
And what happens -- I think something is so good, but it on boards one person on the team.

00:04:13,159 --> 00:04:21,020
And so that leaves us with not many ways to on-board people on your project, or product.

00:04:21,020 --> 00:04:24,090
So that's why we have Jandy.

00:04:24,090 --> 00:04:27,980
And what is that?

00:04:27,980 --> 00:04:34,530
In this case, there's a dungeon master, a person who was on call when some incident

00:04:34,530 --> 00:04:35,570
happened.

00:04:35,570 --> 00:04:39,230
The person went through all the steps to fix that incident.

00:04:39,230 --> 00:04:47,700
Once the incident is done, this person gets to play the role of dungeon master, who would

00:04:47,700 --> 00:04:51,810
re-play the whole incident in front of the rest of the team.

00:04:51,810 --> 00:04:56,720
And now, instead of the person solving the problem, let's say the team would solve the

00:04:56,720 --> 00:04:57,720
problem.

00:04:57,720 --> 00:05:00,560
We would see a demo of this.

00:05:00,560 --> 00:05:04,400
And before that, to increase the number of slides in my presentation, they talk about

00:05:04,400 --> 00:05:17,690
it in the next four or five lines, blah blah blah, select a mechanism for picking a disaster,

00:05:17,690 --> 00:05:28,621
one person plays the master, the system, and the on-call engineer, and they compare what

00:05:28,621 --> 00:05:32,040
they did against what they have done.

00:05:32,040 --> 00:05:37,930
So you can see the five lines in there, good luck trying to understand it.

00:05:37,930 --> 00:05:48,030
And we came up with a way to do this role-playing exercise, and calling it Dungeons & Dragons.

00:05:48,030 --> 00:05:51,150
So we will back this up with science.

00:05:51,150 --> 00:05:57,030
When you are in a stressful situation, there's a hormone, cortisol, that is released in your

00:05:57,030 --> 00:05:58,030
system.

00:05:58,030 --> 00:06:00,100
It is not a very great hormone.

00:06:00,100 --> 00:06:03,770
It just is useful to build your memory, that's what we will do today.

00:06:03,770 --> 00:06:10,380
We will put you all in a stressful situation, good luck, to help your memory.

00:06:10,380 --> 00:06:12,900
What will you gain after this talk?

00:06:12,900 --> 00:06:21,610
You will gain that Dungeons & Dragons is a non-destructive, fun, and easy game to play.

00:06:21,610 --> 00:06:25,140
Stress creates memory, builds your confidence and knowledge on your system.

00:06:25,140 --> 00:06:27,800
So how are we going to do this?

00:06:27,800 --> 00:06:35,150
We're going to do this on the infrastructure set-up, how do you know about it?

00:06:35,150 --> 00:06:38,700
If you don't know about it, I would be scared.

00:06:38,700 --> 00:06:42,030
So by the end of the talk, you will know about my system.

00:06:42,030 --> 00:06:47,520
In a 45-minute talk, if you know about my infrastructure set-up, imagine how much you

00:06:47,520 --> 00:06:52,960
know about your infrastructure set-up when you play this game in your team.

00:06:52,960 --> 00:06:56,740
So, how to play?

00:06:56,740 --> 00:07:03,030
Today, I am going to be proudly presenting as your dungeon master.

00:07:03,030 --> 00:07:08,170
There's the rest of the team.

00:07:08,170 --> 00:07:10,620
The dungeon master says, do you have a problem?

00:07:10,620 --> 00:07:15,960
We have 14 incidents raised by the customers that they cannot access the first page of

00:07:15,960 --> 00:07:20,280
the website since yesterday morning.

00:07:20,280 --> 00:07:24,810
Oh, they deploy something new in the system.

00:07:24,810 --> 00:07:31,000
Yes, the dev team did a deployment overnight for their customer X's feature.

00:07:31,000 --> 00:07:35,620
Are we receiving logs with these requests?

00:07:35,620 --> 00:07:39,890
No, there are no logs in our load balancer.

00:07:39,890 --> 00:07:45,450
The number of requests are less than yesterday.

00:07:45,450 --> 00:07:46,560
Interesting.

00:07:46,560 --> 00:07:50,720
What is the url they are trying?

00:07:50,720 --> 00:07:53,770
Dungeonsarereal.com.

00:07:53,770 --> 00:08:01,470
What is the IP when we get there?

00:08:01,470 --> 00:08:03,330
10.2.23.44.

00:08:03,330 --> 00:08:07,110
It looks like an internal IP.

00:08:07,110 --> 00:08:09,400
What is the IP of the load balancer?

00:08:09,400 --> 00:08:10,400
45.22.23.

00:08:10,400 --> 00:08:21,850
We will move the domain and then investigate what happened.

00:08:21,850 --> 00:08:26,720
This is just a quick demo, I'm sure you can understand everything.

00:08:26,720 --> 00:08:35,270
We're going to do a similar stress situation and solve something together, but there are

00:08:35,270 --> 00:08:37,430
some assumptions.

00:08:37,430 --> 00:08:40,959
This is not production environment for two reasons.

00:08:40,959 --> 00:08:47,240
I will not be presenting my production in front of so many amazing DevOps engineers,

00:08:47,240 --> 00:08:51,200
it is risky and my company should not even allow it.

00:08:51,200 --> 00:08:58,170
And currently, I don't have a production environment.

00:08:58,170 --> 00:08:59,760
So these are the assumptions.

00:08:59,760 --> 00:09:09,580
Assume that when you see one request in the set-up, consider that as a request in a production

00:09:09,580 --> 00:09:10,900
environment.

00:09:10,900 --> 00:09:14,360
And it is a start-up kind of a setup.

00:09:14,360 --> 00:09:18,830
So I build it on top of everything.

00:09:18,830 --> 00:09:21,110
So, yeah.

00:09:21,110 --> 00:09:23,140
That's all the assumptions for today.

00:09:23,140 --> 00:09:27,900
I'm done asking you questions and now it is your turn to start asking questions.

00:09:27,900 --> 00:09:30,660
Are you all ready?

00:09:30,660 --> 00:09:31,660
Okay.

00:09:31,660 --> 00:09:36,920
Welcome to world of dragons.

00:09:36,920 --> 00:09:47,530
So we are a start-up, while doing some earth, we found a lot of real dragons, literally

00:09:47,530 --> 00:09:52,120
real, and now we're a start-up who sells dragons.

00:09:52,120 --> 00:09:59,840
We have this amazing API for our vendors, like, do you know Amazon and BestBuy vendors

00:09:59,840 --> 00:10:07,700
who can pull our API to get dragons, and we will ship them the dragons, and everything

00:10:07,700 --> 00:10:08,700
was so good.

00:10:08,700 --> 00:10:09,700
Our life was great.

00:10:09,700 --> 00:10:15,170
We were building a lot of money, until we decided to do a field trip for our software

00:10:15,170 --> 00:10:17,860
engineers to the dragon place.

00:10:17,860 --> 00:10:19,860
It is not good, it is not good.

00:10:19,860 --> 00:10:28,920
I'll tell you -- we're a start-up, we had one DevOps engineer, SRE, that was eaten up

00:10:28,920 --> 00:10:31,490
by a dragon.

00:10:31,490 --> 00:10:34,110
Life is not that good after that.

00:10:34,110 --> 00:10:37,760
So we had a lot of problems, and no solutions to that.

00:10:37,760 --> 00:10:45,240
So we hired all of you to help us fix these problems, and let's start to work.

00:10:45,240 --> 00:10:50,110
Let's start with our first problem, which is mystery of certificates.

00:10:50,110 --> 00:10:56,710
We are getting a non-secure connection on our web site, and the clients using the APIs

00:10:56,710 --> 00:10:58,250
are complaining of the same.

00:10:58,250 --> 00:11:01,510
How do you fix the issue?

00:11:01,510 --> 00:11:03,770
I will show it quickly.

00:11:03,770 --> 00:11:09,190
So this is our great CSS and everything included in this website.

00:11:09,190 --> 00:11:13,770
As you can see -- and there's this -- it looks normal to me.

00:11:13,770 --> 00:11:20,670
I don't know what it is, for the sake of the dungeon master, I don't know what it is.

00:11:20,670 --> 00:11:29,330
Can someone, I'm sure many of you, help me fix this problem?

00:11:29,330 --> 00:11:42,010
>>AUDIENCE MEMBER: If you type in HTTPS:// before the domain, does it work?

00:11:42,010 --> 00:11:44,660
>> That's a good question.

00:11:44,660 --> 00:11:46,950
>> It was there already, okay.

00:11:46,950 --> 00:11:49,690
Then that answered my first question.

00:11:49,690 --> 00:11:52,430
>> We have a question over here.

00:11:52,430 --> 00:11:57,600
>>AUDIENCE MEMBER: If you view the certificate details, is it still valid?

00:11:57,600 --> 00:12:01,189
Can you look at the date?

00:12:01,189 --> 00:12:09,530
>> Yeah, can you explain what a certificate detail is?

00:12:09,530 --> 00:12:10,930
>> F12.

00:12:10,930 --> 00:12:15,120
>> Click view certificate.

00:12:15,120 --> 00:12:21,050
>> There it is, awesome.

00:12:21,050 --> 00:12:30,110
>> Please expand the details.

00:12:30,110 --> 00:12:37,730
>> So that is interesting, but does not fix the issue.

00:12:37,730 --> 00:12:40,660
We know the issue now, but that's great.

00:12:40,660 --> 00:12:46,670
Help us -- I understand that this is a certificate, so I need to go and change certificates somewhere.

00:12:46,670 --> 00:12:52,000
Can someone tell me how to go there and make these changes?

00:12:52,000 --> 00:12:59,340
>> The code in the machine where the web server is running?

00:12:59,340 --> 00:13:00,380
>> Very good question.

00:13:00,380 --> 00:13:02,140
We are a start-up.

00:13:02,140 --> 00:13:04,440
We have 5,000 machines.

00:13:04,440 --> 00:13:06,820
Which one do you want me to go to?

00:13:06,820 --> 00:13:08,170
>> Why do you have 5,000 machines?

00:13:08,170 --> 00:13:10,300
>> The start-up, Azure, Kubernetes, everything.

00:13:10,300 --> 00:13:13,110
We have everything covered.

00:13:13,110 --> 00:13:17,790
We are hiring as well.

00:13:17,790 --> 00:13:20,890
>> Are you in the cloud, or are you on prem?

00:13:20,890 --> 00:13:22,210
>> Both.

00:13:22,210 --> 00:13:27,510
We are on both.

00:13:27,510 --> 00:13:35,150
>> Okay, so if it's microservices, then go to the load balancer, machine where the load

00:13:35,150 --> 00:13:39,230
balance is running.

00:13:39,230 --> 00:13:40,380
The service.

00:13:40,380 --> 00:13:41,519
>> The service, yes.

00:13:41,519 --> 00:13:45,470
>> You would have multiple instances of the service running behind the load balancer.

00:13:45,470 --> 00:13:48,560
>> Help me get there, the DevOps engineer is dead.

00:13:48,560 --> 00:13:51,580
>> Go to the machine that is running the load balancer.

00:13:51,580 --> 00:13:53,080
How do you get there?

00:13:53,080 --> 00:13:56,790
If you don't know your infrastructure, that's a problem.

00:13:56,790 --> 00:14:00,600
>> Well, I hired you!

00:14:00,600 --> 00:14:06,400
>> We had -- it is under construction -- >> We have a map.

00:14:06,400 --> 00:14:08,120
>> So the question is, do we have a map of infrastructure?

00:14:08,120 --> 00:14:11,430
It was when the engineer was eaten.

00:14:11,430 --> 00:14:13,680
>> Use dig or look-up.

00:14:13,680 --> 00:14:21,089
>> Let's do that.

00:14:21,089 --> 00:14:27,889
>> Dragonsworld.org.

00:14:27,889 --> 00:14:33,080
>> So you get something here.

00:14:33,080 --> 00:14:38,990
You get something here.

00:14:38,990 --> 00:14:40,750
>> 35.241.243.

00:14:40,750 --> 00:14:48,490
>> What do we do with that?

00:14:48,490 --> 00:14:56,930
>> A consult would find that IP address.

00:14:56,930 --> 00:15:04,450
>> This start-up is -- you want to find this IP address, what should I do with this?

00:15:04,450 --> 00:15:06,820
>> Is the machine Linux or Windows?

00:15:06,820 --> 00:15:12,330
You SSH or RPD into it.

00:15:12,330 --> 00:15:14,070
>> In front of this?

00:15:14,070 --> 00:15:21,520
Before I answer your question, someone else, I'm sorry, I don't know the name yet.

00:15:21,520 --> 00:15:23,200
What should I do next?

00:15:23,200 --> 00:15:24,200
Proceed.

00:15:24,200 --> 00:15:41,190
>> Can you traceroute the IP to 

00:15:41,190 --> 00:15:46,480
figure out which of the providers the load balancer is hosted on?

00:15:46,480 --> 00:15:53,730
>> That's a good question.

00:15:53,730 --> 00:15:57,879
How do we read this?

00:15:57,879 --> 00:16:05,480
>> Well, we know we are at UIC, starting at one, it is Googleusercontent.com, so we assume

00:16:05,480 --> 00:16:08,610
it is on GCP.

00:16:08,610 --> 00:16:11,589
>> Oh, yes.

00:16:11,589 --> 00:16:12,660
That rings a lot of bells.

00:16:12,660 --> 00:16:15,250
So we have something on Google Cloud.

00:16:15,250 --> 00:16:18,060
You name it, we have it.

00:16:18,060 --> 00:16:23,640
This explains what the platform looks like.

00:16:23,640 --> 00:16:25,029
What do we have here?

00:16:25,029 --> 00:16:30,330
Tell me what to do next.

00:16:30,330 --> 00:16:31,370
You have AWS.

00:16:31,370 --> 00:16:33,810
We had your.

00:16:33,810 --> 00:16:34,810
Okay.

00:16:34,810 --> 00:16:41,430
So we have -- we know that there is something hosted with some IP on GCP.

00:16:41,430 --> 00:16:47,339
What should we do next?

00:16:47,339 --> 00:16:52,130
>> So figure out what service manages the certificates for your infrastructure, your

00:16:52,130 --> 00:16:53,130
VPC.

00:16:53,130 --> 00:16:56,819
We will Google, what is that called?

00:16:56,819 --> 00:16:58,420
>> Google Cloud.

00:16:58,420 --> 00:17:00,860
>> Yeah, again, I don't know.

00:17:00,860 --> 00:17:03,080
Maybe somebody here can tell better about GCP.

00:17:03,080 --> 00:17:04,520
>> Where is Harvey?

00:17:04,520 --> 00:17:05,689
>> Harvey.

00:17:05,689 --> 00:17:08,030
>> Okay, yeah.

00:17:08,030 --> 00:17:13,679
So once you find the certificate managed, most clouds have a certificate management

00:17:13,679 --> 00:17:15,809
entity for whatever you are deploying.

00:17:15,809 --> 00:17:23,589
Once we find the service from that portal, we get to that and then see what's going on.

00:17:23,589 --> 00:17:25,390
>> Somebody else said something.

00:17:25,390 --> 00:17:27,610
All right.

00:17:27,610 --> 00:17:36,290
So what he suggested is go to the certificate provider interface on Google Cloud.

00:17:36,290 --> 00:17:39,010
We don't have that.

00:17:39,010 --> 00:17:43,080
But we have some symbol that you used.

00:17:43,080 --> 00:17:47,770
So I will navigate over there.

00:17:47,770 --> 00:17:56,540
We do have a load balancer here.

00:17:56,540 --> 00:17:57,540
And -- yes.

00:17:57,540 --> 00:17:58,590
That's a certificate.

00:17:58,590 --> 00:18:07,780
When I look at it, it is expired, and thank you for getting us to here, because obviously

00:18:07,780 --> 00:18:13,970
I did not have any idea that we are hosting our services on Google Cloud using this load

00:18:13,970 --> 00:18:14,970
balancer.

00:18:14,970 --> 00:18:15,970
So this is great.

00:18:15,970 --> 00:18:19,430
Now I know where to go and change the certificate from.

00:18:19,430 --> 00:18:21,430
Thank you for solving that problem.

00:18:21,430 --> 00:18:23,750
But this is literally the beginning of the problem.

00:18:23,750 --> 00:18:27,260
And now we will get on to some real problems.

00:18:27,260 --> 00:18:29,260
This is a test.

00:18:29,260 --> 00:18:34,410
And now we will actually play.

00:18:34,410 --> 00:18:43,150
Next problem, after a late night deployment on the app from the dev team, we are agile,

00:18:43,150 --> 00:19:04,919
we don't deploy, the dev teams deploy, we are certificating arrows -- oh.

00:19:04,919 --> 00:19:15,960
[ Laughter ]. >> Well, again, first question I would have

00:19:15,960 --> 00:19:21,850
for the dead guy, is QA represented in production environment or not?

00:19:21,850 --> 00:19:25,389
You tried this in staging, nothing went wrong.

00:19:25,389 --> 00:19:26,389
>> Yes.

00:19:26,389 --> 00:19:28,360
>> Is staging representative of production?

00:19:28,360 --> 00:19:29,360
>> Yes.

00:19:29,360 --> 00:19:30,360
>> For the dead guy?

00:19:30,360 --> 00:19:32,590
>> Yes, it is all representative of production.

00:19:32,590 --> 00:19:35,140
We are all agile.

00:19:35,140 --> 00:19:37,150
[ Laughter ]. >> Okay.

00:19:37,150 --> 00:19:42,160
>> The DevOps person is dead, right?

00:19:42,160 --> 00:19:48,450
>> So then, first, we would -- in this case, I would go to the version control management

00:19:48,450 --> 00:19:52,750
system and see what that deployment -- how much of a change was it?

00:19:52,750 --> 00:19:57,660
Is it a big, impactful change, a minute change, what is it?

00:19:57,660 --> 00:20:02,400
And alt this point I would ask, there should be a roll back strategy, or you spin up a

00:20:02,400 --> 00:20:07,520
new staging environment or prod environment that is representative and deploy the application

00:20:07,520 --> 00:20:10,210
there so you can test within it.

00:20:10,210 --> 00:20:12,620
But first you roll this back, so you can get service up.

00:20:12,620 --> 00:20:15,990
>> What is the error code for 29?

00:20:15,990 --> 00:20:18,400
>> Too many requests.

00:20:18,400 --> 00:20:20,820
>> Too many requests.

00:20:20,820 --> 00:20:26,210
>> So there are too many requests, maybe there's a new feature that is highly in demand.

00:20:26,210 --> 00:20:29,669
We had some hands over there.

00:20:29,669 --> 00:20:31,879
>> Yeah, get on it.

00:20:31,879 --> 00:20:32,879
>> Okay.

00:20:32,879 --> 00:20:40,300
>> >> Can we reproduce it, is it random, or is it some pattern that we can figure out?

00:20:40,300 --> 00:20:42,260
>> Good question.

00:20:42,260 --> 00:20:45,780
Let's see.

00:20:45,780 --> 00:20:51,050
There it is.

00:20:51,050 --> 00:21:01,580
Some reasons -- so we can reproduce it.

00:21:01,580 --> 00:21:02,770
Try scaling up?

00:21:02,770 --> 00:21:06,840
There is literally -- the DevOps engineer is dead.

00:21:06,840 --> 00:21:11,230
If you are talking about scaling up -- >> Walk us through it.

00:21:11,230 --> 00:21:19,340
>> I mean, again, there's this concept in Cloud, auto scaling group, it scales automatically.

00:21:19,340 --> 00:21:23,200
>> You are assuming you use auto scaling group.

00:21:23,200 --> 00:21:24,250
>> Agile and good practices.

00:21:24,250 --> 00:21:25,250
>> Woah.

00:21:25,250 --> 00:21:26,250
>> [ Laughter ]. >> Who else?

00:21:26,250 --> 00:21:27,250
Let's try this.

00:21:27,250 --> 00:21:48,250
>> We will try other folk and suggestions.

00:21:48,250 --> 00:21:51,740
>> Have you rolled back the change to see if this fixes the issue?

00:21:51,740 --> 00:21:52,740
>> Great question.

00:21:52,740 --> 00:22:00,510
>> First they force anyone that does changes, they force us to roll it back and then if

00:22:00,510 --> 00:22:03,429
it fixes it, it is our fault.

00:22:03,429 --> 00:22:04,429
>> Makes sense.

00:22:04,429 --> 00:22:07,049
Our dev team is leaving right now.

00:22:07,049 --> 00:22:09,840
So we will pass on to that for now.

00:22:09,840 --> 00:22:11,480
But we will do this.

00:22:11,480 --> 00:22:16,780
>> Is there an update to the web server that changes the max request count?

00:22:16,780 --> 00:22:18,640
>> Very interesting.

00:22:18,640 --> 00:22:21,870
How should we find that out?

00:22:21,870 --> 00:22:31,850
There are ways to get to the VMs and find the IPs and SSH on to the VMs.

00:22:31,850 --> 00:22:36,280
You just tell mow what to do.

00:22:36,280 --> 00:22:42,610
>> We will start with a bunch of services and try to see if that helps.

00:22:42,610 --> 00:22:44,090
>> Great question.

00:22:44,090 --> 00:22:46,290
How do we get to the VMs for that?

00:22:46,290 --> 00:22:52,700
>> It depends on what you are hosted on, and if you have those guys available.

00:22:52,700 --> 00:23:00,400
But, for example, if it is a web server, just re-start the http or something, no?

00:23:00,400 --> 00:23:01,400
>> Yes.

00:23:01,400 --> 00:23:04,070
So we got to the load balancer in previous issue.

00:23:04,070 --> 00:23:11,730
Do you want to add to that?

00:23:11,730 --> 00:23:17,630
>> So he said we need to figure out all the app servers that are behind the load balancer?

00:23:17,630 --> 00:23:18,630
Yes.

00:23:18,630 --> 00:23:19,630
Amazing.

00:23:19,630 --> 00:23:21,919
That's -- let's get there.

00:23:21,919 --> 00:23:23,260
Sorry?

00:23:23,260 --> 00:23:25,950
Good idea.

00:23:25,950 --> 00:23:27,299
Okay.

00:23:27,299 --> 00:23:33,679
So I see some instance groups were here, so I am going to click on that.

00:23:33,679 --> 00:23:37,220
And these look like VMs to me, because they have external IP.

00:23:37,220 --> 00:23:39,360
Happy to be challenged over there.

00:23:39,360 --> 00:23:41,850
Does this look good?

00:23:41,850 --> 00:23:50,620
Should I get on to the piece?

00:23:50,620 --> 00:23:53,760
I would ask you how to SSH, but that is too basic.

00:23:53,760 --> 00:24:07,620
Okay, we okay, we are in here, doing a talk, should I sort it by memory?

00:24:07,620 --> 00:24:09,410
I'm doing it.

00:24:09,410 --> 00:24:20,160
What is your thought process do you want to talk about it?

00:24:20,160 --> 00:24:23,420
He is looking for resource contention.

00:24:23,420 --> 00:24:28,240
Raising your hand over there.

00:24:28,240 --> 00:24:32,450
Are the instances held in the load balancer?

00:24:32,450 --> 00:24:36,120
We will check that.

00:24:36,120 --> 00:24:48,120
Since I use Google Cloud, this means three instances are healthy.

00:24:48,120 --> 00:24:50,400
So the instances are healthy.

00:24:50,400 --> 00:24:59,489
We have a hand over there.

00:24:59,489 --> 00:25:03,320
>> Are all the 429s happening on all three instances?

00:25:03,320 --> 00:25:08,070
If it is isolated, can that be not destroyed, but removed from the load balancer so you

00:25:08,070 --> 00:25:18,740
can interrogate it while it is still alive, and still maintain actual 200 connections?

00:25:18,740 --> 00:25:20,740
>> Amazing.

00:25:20,740 --> 00:25:21,880
How do we check that?

00:25:21,880 --> 00:25:22,880
>> How do we check that?

00:25:22,880 --> 00:25:25,809
>> Yes, that it is happening on all three of them.

00:25:25,809 --> 00:25:32,960
>> You were mentioning you got 429 errors, whether it is through a ticket system or people

00:25:32,960 --> 00:25:45,320
were calling f they had a direct IP, if not, do we have a logging system that, through

00:25:45,320 --> 00:25:53,260
there, a log where we can check and isolate if it is one in particular or across the board?

00:25:53,260 --> 00:25:56,060
>> Nice.

00:25:56,060 --> 00:25:59,990
>> Can we try to hit each of those IPs that is behind the load balancer?

00:25:59,990 --> 00:26:00,990
>> Okay.

00:26:00,990 --> 00:26:04,270
Does that answer the question that you have been asking, right?

00:26:04,270 --> 00:26:07,370
How to get one of these?

00:26:07,370 --> 00:26:08,370
Okay.

00:26:08,370 --> 00:26:11,910
Let's go back here.

00:26:11,910 --> 00:26:24,240
I'm not sure if I had put it in the VPC or not.

00:26:24,240 --> 00:26:27,610
Okay.

00:26:27,610 --> 00:26:32,049
Why am I giving answers?

00:26:32,049 --> 00:26:33,830
This is not reachable.

00:26:33,830 --> 00:26:36,190
What should we do next?

00:26:36,190 --> 00:26:44,730
Hit it locally from the box, good.

00:26:44,730 --> 00:26:48,430
We are already in the box.

00:26:48,430 --> 00:26:59,540
So I will do call IP address slash -- are we getting any answer?

00:26:59,540 --> 00:27:11,040
Should I try the private idea of this?

00:27:11,040 --> 00:27:20,410
He said what interface are IPs listening on, you check the config, and how do we check

00:27:20,410 --> 00:27:21,740
the config?

00:27:21,740 --> 00:27:30,110
>> It depends on the web server you are running, you can hide it, okay.

00:27:30,110 --> 00:27:31,210
So -- yeah.

00:27:31,210 --> 00:27:39,039
Check the configure, the http -- Apache would be the most common I would say.

00:27:39,039 --> 00:27:46,919
And we need to hit on HTTPS and it is insecure right now.

00:27:46,919 --> 00:27:47,919
>> You had something.

00:27:47,919 --> 00:27:52,029
>> Go back to the Google interface.

00:27:52,029 --> 00:27:55,610
>> Okay.

00:27:55,610 --> 00:27:58,330
>> Is this AWS?

00:27:58,330 --> 00:28:08,900
>> And there is another hand over there, do you want to move a little bit so Matt doesn't

00:28:08,900 --> 00:28:11,790
have to work too much?

00:28:11,790 --> 00:28:20,790
>> Can we run the command on the box again, to hit HTTPS and to hit with the insecure

00:28:20,790 --> 00:28:21,960
flight?

00:28:21,960 --> 00:28:26,070
And not only on the internal network, but on the external network.

00:28:26,070 --> 00:28:30,799
>> On it.

00:28:30,799 --> 00:28:38,570
>> With dash, dash, and secure.

00:28:38,570 --> 00:28:42,539
>> We have a hand -- go ahead.

00:28:42,539 --> 00:28:48,320
>> So I don't know Google Cloud, but there was a tab above, was it monitoring?

00:28:48,320 --> 00:28:51,470
I wonder what happens.

00:28:51,470 --> 00:28:53,049
>> Hmm, interesting.

00:28:53,049 --> 00:28:54,450
This tab, do you mean?

00:28:54,450 --> 00:28:57,539
There it is.

00:28:57,539 --> 00:29:02,929
You had high expectations, didn't you?

00:29:02,929 --> 00:29:06,070
>> Why was there a spike early in the morning?

00:29:06,070 --> 00:29:07,880
>> Because I was testing it.

00:29:07,880 --> 00:29:08,880
>> Oh, okay.

00:29:08,880 --> 00:29:10,250
>> Just to make sure.

00:29:10,250 --> 00:29:13,460
>> We will do six Rs.

00:29:13,460 --> 00:29:20,450
>> Did you append the gateway on the load balancer as well?

00:29:20,450 --> 00:29:28,669
>> You mean other instances in the load balancer from the -- from browser, or from within?

00:29:28,669 --> 00:29:36,470
>> From within if you ping to other nodes and you connect to the load balancer from

00:29:36,470 --> 00:29:37,470
there.

00:29:37,470 --> 00:29:42,690
And within the load balancer itself, you might want to check the configs to see if the nodes

00:29:42,690 --> 00:29:48,840
are included on the load balancer itself, it might not be configured properly, maybe.

00:29:48,840 --> 00:29:51,110
>> I missed it.

00:29:51,110 --> 00:29:52,919
Can you say it again?

00:29:52,919 --> 00:29:58,400
>> The config file on the load balancer itself to see if it includes those three nodes.

00:29:58,400 --> 00:30:00,960
>> So you want to see the config of the load balancer itself?

00:30:00,960 --> 00:30:05,290
>> Yes, in addition to the ping of the get gateway and other nodes.

00:30:05,290 --> 00:30:09,000
>> So I did try a call here, it doesn't work, do you want me to ping it?

00:30:09,000 --> 00:30:10,000
>> Sure.

00:30:10,000 --> 00:30:14,200
>> It looks like it is timing out.

00:30:14,200 --> 00:30:16,440
>> Try the internal address is what I heard.

00:30:16,440 --> 00:30:20,550
So let's it do that as well.

00:30:20,550 --> 00:30:25,200
So let's take a step back after this and let's see what are we trying to -- what are we trying

00:30:25,200 --> 00:30:28,290
to get here?

00:30:28,290 --> 00:30:32,170
Can somebody talk about the thought process?

00:30:32,170 --> 00:30:46,389
What are we trying to get here?

00:30:46,389 --> 00:30:51,630
. What process is running on the VM, so we know

00:30:51,630 --> 00:30:57,530
what to do with it, that sort of thing?

00:30:57,530 --> 00:31:02,190
And I understand that we are pinging different machines in the system, but on the machine

00:31:02,190 --> 00:31:04,419
itself, we haven't done much.

00:31:04,419 --> 00:31:09,370
>> We want to figure out if the problems with the load balancer are the apps running on

00:31:09,370 --> 00:31:10,409
the out servers.

00:31:10,409 --> 00:31:11,450
>> How do we do that?

00:31:11,450 --> 00:31:16,260
>> Do you have application logs for the load balancer, or do you know what they are on

00:31:16,260 --> 00:31:18,440
the app servers?

00:31:18,440 --> 00:31:24,170
>> I don't have logs from load balancer, but I have them on the machine from the process

00:31:24,170 --> 00:31:25,170
itself.

00:31:25,170 --> 00:31:32,530
However, you would have to help us to get to those logs.

00:31:32,530 --> 00:31:38,220
>> I don't know what you are asking.

00:31:38,220 --> 00:31:42,779
>> That's what the session is about, we are learning tools and techniques.

00:31:42,779 --> 00:31:48,120
And that's what this thing is about.

00:31:48,120 --> 00:31:56,200
>> So we tried from two other devices and it comes through just fine.

00:31:56,200 --> 00:31:59,929
>> You have to keep trying, you will see it.

00:31:59,929 --> 00:32:05,309
>> Randomly I started seeing the count work up, too, it is telling me what Jeremy is seeing

00:32:05,309 --> 00:32:06,309
here.

00:32:06,309 --> 00:32:11,820
It is an issue with one of the machines, because the load balancer sends to the bad one first,

00:32:11,820 --> 00:32:16,489
a round robin, had enough, and then sent us to the one working correctly.

00:32:16,489 --> 00:32:17,929
>> Fair enough.

00:32:17,929 --> 00:32:25,919
>> So now I would say that you remove them from the group and you attach them to the

00:32:25,919 --> 00:32:31,100
external-facing machine and try them individually and see what the issue is there.

00:32:31,100 --> 00:32:33,049
>> Is there a better way of doing this?

00:32:33,049 --> 00:32:38,360
This will bring down the site if I remove them all from load balancer.

00:32:38,360 --> 00:32:42,320
>> Can we look at the web server logs and see which one is throwing 4.29s?

00:32:42,320 --> 00:32:53,330
>> There was an idea, but it got cross hatched with how to find the logs.

00:32:53,330 --> 00:33:00,620
Can we go to the details tab on the load balancer?

00:33:00,620 --> 00:33:09,100
>> >> When you want to curl those, hit them on port 8080.

00:33:09,100 --> 00:33:10,100
>> Oh!

00:33:10,100 --> 00:33:12,470
How do you get that?

00:33:12,470 --> 00:33:16,950
>> Well, we saw incoming traffic is directed to port 8080.

00:33:16,950 --> 00:33:19,429
>> You missed this -- okay.

00:33:19,429 --> 00:33:24,159
So let's do it again.

00:33:24,159 --> 00:33:26,989
>> Not ping, curl.

00:33:26,989 --> 00:33:27,989
>> Okay.

00:33:27,989 --> 00:33:29,830
>> That's good?

00:33:29,830 --> 00:33:31,720
All right.

00:33:31,720 --> 00:33:35,970
So it is breaking, haha.

00:33:35,970 --> 00:33:39,780
You didn't fix it yet.

00:33:39,780 --> 00:33:41,409
Okay.

00:33:41,409 --> 00:33:52,830
So now we can fix it internally.

00:33:52,830 --> 00:33:55,440
>> Is this the IP address of one of the nodes, or the --

00:33:55,440 --> 00:33:58,890
>> It is one of the nodes.

00:33:58,890 --> 00:33:59,909
>> Try the next node.

00:33:59,909 --> 00:34:01,530
>> The next node?

00:34:01,530 --> 00:34:02,530
Okay.

00:34:02,530 --> 00:34:03,530
>> Please.

00:34:03,530 --> 00:34:08,780
>> Only because you said that.

00:34:08,780 --> 00:34:33,659
>> This is from IP7 this time.

00:34:33,659 --> 00:34:44,279
>> We got the spaces in there.

00:34:44,279 --> 00:34:45,669
>> Third one?

00:34:45,669 --> 00:34:47,059
>> (Off-mic comments).

00:34:47,059 --> 00:34:48,059
>> Haha.

00:34:48,059 --> 00:34:52,519
>> Is that what you want?

00:34:52,519 --> 00:34:53,519
>> Hype.

00:34:53,519 --> 00:34:54,519
>> 8080.

00:34:54,519 --> 00:34:55,519
>> Ah.

00:34:55,519 --> 00:35:07,480
>> Before I hit enter, do you want to explain to the room what it is going to do?

00:35:07,480 --> 00:35:21,609
>> Look for port 8080 to tell you which web server you're running.

00:35:21,609 --> 00:35:41,160
Add a dash A. >> Dash?

00:35:41,160 --> 00:35:45,789
>> Pseudo.

00:35:45,789 --> 00:35:49,780
>> That is in the list, it is not in the batch of load balancers.

00:35:49,780 --> 00:35:52,910
Is that what you're saying?

00:35:52,910 --> 00:35:56,350
>> I thought it was.

00:35:56,350 --> 00:36:01,760
I see two different addresses.

00:36:01,760 --> 00:36:06,930
>> That was the app server itself, on the load balancer.

00:36:06,930 --> 00:36:17,050
The load balancer IP, as we saw, was 35 dives.

00:36:17,050 --> 00:36:21,420
I saw a hand somewhere.

00:36:21,420 --> 00:36:22,630
Maybe not.

00:36:22,630 --> 00:36:26,850
So where do we get from here?

00:36:26,850 --> 00:36:28,440
Yes.

00:36:28,440 --> 00:36:48,060
Before I hit enter, do you want to explain to people, and I will go to Matt to give them

00:36:48,060 --> 00:36:49,060
time.

00:36:49,060 --> 00:36:52,060
>> What handles are open by that process, 10704.

00:36:52,060 --> 00:36:58,380
That should tell you where the locks are going.

00:36:58,380 --> 00:36:59,780
>> Make sense?

00:36:59,780 --> 00:37:00,780
>> Okay.

00:37:00,780 --> 00:37:04,279
>> I wasn't expecting that, honestly.

00:37:04,279 --> 00:37:05,450
>> Yeah.

00:37:05,450 --> 00:37:08,960
>> Any other way?

00:37:08,960 --> 00:37:14,819
>> Can we prep for dragon?

00:37:14,819 --> 00:37:23,080
>> Yeah, that is because the log is a place had for all the logs in general, and you have

00:37:23,080 --> 00:37:27,000
high expectation from this set-up, for standards and everything.

00:37:27,000 --> 00:37:28,319
All right.

00:37:28,319 --> 00:37:33,160
>> You hope and pray the defaults weren't changed.

00:37:33,160 --> 00:37:35,630
>> Hahaha.

00:37:35,630 --> 00:37:44,190
>> So you want me to get there, dogs, and then there's something like a dragon.

00:37:44,190 --> 00:37:46,750
You did have high expectations.

00:37:46,750 --> 00:37:53,440
Do you want me to detail those logs?

00:37:53,440 --> 00:37:55,190
Okay.

00:37:55,190 --> 00:37:59,970
Well, that's how production systems are, not that straightforward.

00:37:59,970 --> 00:38:01,660
But it says the check is healthy.

00:38:01,660 --> 00:38:04,710
Can you say it again?

00:38:04,710 --> 00:38:07,760
>> Grab the file for 4.29.

00:38:07,760 --> 00:38:09,220
>> Grab that file for 4.29.

00:38:09,220 --> 00:38:22,530
4.29, I heard that we are doing it on one node, right.

00:38:22,530 --> 00:38:24,910
Yes.

00:38:24,910 --> 00:38:27,860
So 1/3 of the nodes is bad.

00:38:27,860 --> 00:38:35,580
When we did the call with slash dragon API, and all of the returns, yes.

00:38:35,580 --> 00:38:38,990
And -- >> Can we run batch?

00:38:38,990 --> 00:38:43,830
>> Sorry, say it again?

00:38:43,830 --> 00:38:47,060
We tried once, and once it returned yes.

00:38:47,060 --> 00:38:48,940
What was the next?

00:38:48,940 --> 00:38:53,290
>> Can we try to run batch, is batch on here?

00:38:53,290 --> 00:38:54,640
>> High expectations, don't you?

00:38:54,640 --> 00:38:55,640
No.

00:38:55,640 --> 00:38:57,349
>> Chef, client, puppet, Ansible, anything?

00:38:57,349 --> 00:39:06,170
>> I will create a backlog and stories for it.

00:39:06,170 --> 00:39:12,720
>> Do you know whether the stories and the VM are created from, how do you know it because

00:39:12,720 --> 00:39:13,720
from the application?

00:39:13,720 --> 00:39:21,339
>> Nothing happened to the image, because the DevOps engineer is dead, she did not make

00:39:21,339 --> 00:39:23,820
automation creating the VPMs.

00:39:23,820 --> 00:39:33,650
We are almost there, we run the VM, the dragon API is running with some process, we want

00:39:33,650 --> 00:39:39,390
to get the logs -- we are almost there, but the logs.

00:39:39,390 --> 00:39:45,990
You talked something about version control, somebody else also talked about getting to

00:39:45,990 --> 00:39:46,990
version control.

00:39:46,990 --> 00:39:54,330
We just need some way to connect the dots.

00:39:54,330 --> 00:39:59,080
Anyone?

00:39:59,080 --> 00:40:03,820
Yes.

00:40:03,820 --> 00:40:08,280
>> Can we make a request while tilling the logs to see if something pops up?

00:40:08,280 --> 00:40:10,180
>> Good question.

00:40:10,180 --> 00:40:14,940
Let me ask this again.

00:40:14,940 --> 00:40:24,130
So we -- I should not do the check logs.

00:40:24,130 --> 00:40:26,800
They are empty.

00:40:26,800 --> 00:40:38,920
And then call itself at port 8080.

00:40:38,920 --> 00:40:52,920
Sorry, what?

00:40:52,920 --> 00:41:06,920
>> IP, right?

00:41:06,920 --> 00:41:08,710
>> Dragon conquest response.

00:41:08,710 --> 00:41:14,680
>> So depending on the goal, let's figure out where the application code is.

00:41:14,680 --> 00:41:17,589
>> Based on what?

00:41:17,589 --> 00:41:22,300
>> Your hint for the version control and something else somebody said, what is the source for

00:41:22,300 --> 00:41:23,300
this?

00:41:23,300 --> 00:41:35,789
It is being served out of -- >> I don't have that.

00:41:35,789 --> 00:41:41,559
>> That directory doesn't exist?

00:41:41,559 --> 00:41:42,740
>> No.

00:41:42,740 --> 00:41:48,590
>> Let's go for the http process.

00:41:48,590 --> 00:41:55,790
>> So you want to get to the place where the code -- anybody here can talk about how we

00:41:55,790 --> 00:41:57,940
get to it using slash proc?

00:41:57,940 --> 00:42:08,150
So we have a process ID.

00:42:08,150 --> 00:42:14,700
>> If you go to slash proc slash process ID, there's a bunch of files.

00:42:14,700 --> 00:42:19,040
I don't remember which exactly, but if you RS --

00:42:19,040 --> 00:42:25,480
>> Just trying to get the -- >> Okay.

00:42:25,480 --> 00:42:29,340
So you want me to do an -- >> Sorry, yeah.

00:42:29,340 --> 00:42:33,440
Dash L, and enter.

00:42:33,440 --> 00:42:40,510
And then that's -- yes.

00:42:40,510 --> 00:42:45,950
So that's the FD directory there?

00:42:45,950 --> 00:42:50,609
>> So the FD directory, file descriptor, yes.

00:42:50,609 --> 00:43:00,440
>> And then you need to -- so that's the files that the process is opening, the sockets are

00:43:00,440 --> 00:43:01,440
sockets.

00:43:01,440 --> 00:43:11,049
If you see -- but I guess the source code is closed.

00:43:11,049 --> 00:43:14,800
>> You are almost there.

00:43:14,800 --> 00:43:21,390
If I get here, and if I do LS, that's where the Git repositories are sitting.

00:43:21,390 --> 00:43:25,990
And the name of the repository is dragon API.

00:43:25,990 --> 00:43:31,700
>> Can you run LS-AL?

00:43:31,700 --> 00:43:32,789
Can you run get status?

00:43:32,789 --> 00:43:33,789
>> Yes, okay.

00:43:33,789 --> 00:43:34,789
>> One second.

00:43:34,789 --> 00:43:41,470
>> What do you want me to see?

00:43:41,470 --> 00:43:43,770
Should I start this?

00:43:43,770 --> 00:43:44,770
>> Okay.

00:43:44,770 --> 00:43:49,520
In the interest of time, we are almost there.

00:43:49,520 --> 00:44:00,770
The code base is actually here, not this one.

00:44:00,770 --> 00:44:06,030
DevOps DevOpsDays, the dragon API, and if we had looked at it over there, there was

00:44:06,030 --> 00:44:10,030
a link added from the developer themselves, and that's why it was working well in staging.

00:44:10,030 --> 00:44:13,580
Not that many requests were coming up.

00:44:13,580 --> 00:44:20,410
In this case is when load balancers, the IP was rejected because the load balancer has

00:44:20,410 --> 00:44:21,410
verified these.

00:44:21,410 --> 00:44:23,450
This is one of the problems I faced in a start-up.

00:44:23,450 --> 00:44:28,780
I had a few more cases I was trying to solve here, but I will move on to re-cap it.

00:44:28,780 --> 00:44:30,870
We use this technique not just for going on call, but incidents, we use this technique

00:44:30,870 --> 00:44:34,560
for any debugging, like pipeline investigation, why something is not working, and is if one

00:44:34,560 --> 00:44:40,100
person solved the problem, they pass it to the rest of the team.

00:44:40,100 --> 00:44:41,140
That's how we increase knowledge and context on our team.

00:44:41,140 --> 00:44:42,400
That's all, thank you for having me here.

00:44:42,400 --> 00:44:43,540
[ Applause ]. >> Thank you so much.

00:44:43,540 --> 00:44:44,920
Thank you for everybody who participated.

00:44:44,920 --> 00:44:51,050
So it is time for the two fun things, either A, the last open space session of the day.

00:44:51,050 --> 00:44:57,590
So you can do that, or if unit to stay here, we are recording an episode of the Arrested

00:44:57,590 --> 00:45:02,849
DevOps podcast, which some people like to watch, it might be fun and cool.

00:45:02,849 --> 00:45:05,720
Thank you, again.

00:45:05,720 --> 00:45:06,720
Awesome.

00:45:06,720 --> 00:45:20,070
And if you are Jessie Frazelle or Veronica or Jeff Smith, please come here.

00:45:20,070 --> 00:45:23,900

YouTube URL: https://www.youtube.com/watch?v=Z43oIxrxYg0


