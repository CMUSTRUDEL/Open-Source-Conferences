Title: DevOpsDays Chicago 2019 - Jennifer Petoff, Nathen Harvey - Site Reliability Engineering (SRE) and...
Publication date: 2019-09-09
Playlist: DevOpsDays Chicago 2019
Description: 
	Jennifer Petoff, Nathen Harvey - Site Reliability Engineering (SRE) and the Art of SLOs

Site Reliability Engineering (SRE) is a set of principles, practices, and organizational constructs that seek to balance the reliability of a service with the need to continually deliver new features. An error budget is the primary construct used to help balance these seemingly competing goals.

This workshop introduces error budgets and their components: service level indicators (SLIs) and service level objectives (SLOs). Participants will learn the art of creating and implementing SLOs through a series of guided discussions and group exercises.

By the end of this workshop, participants will be able to:

Describe the key concepts, namely, Error Budget, Service Level Indicator (SLIs), and Service Level Objectives (SLOs)
Create an error budget for a sample application or service
Create an error budget for their own application or service
Recommend actions to take when the error budget is over consumed
Recommend actions to take when excess error budget remains

In the spirit of DevOps, Error Budgets and SLOs work best when they are agreed to in collaboration with many different constituents across the business. As such, this workshop is appropriate for:

Product Owners and Product Managers
Business decision makers
Developers
Operators
And anyone else interested in building and operating services that deliver business and customer value.

Bring along your colleagues from other parts of the organization, a high-level architecture of one of your main services, and an appetite for learning and collaboration.
Captions: 
	00:00:13,259 --> 00:00:15,589
Jennifer Petoff, Nathen Harvey - Site Reliability Engineering (SRE) and the Art of SLOs

00:00:15,589 --> 00:00:17,820
>> Welcome to the first tech track, I will introduce you to your guides through SRE Safaris:

00:00:17,820 --> 00:00:18,820
Dr. Jennifer Petoff and Nathen Harvey.

00:00:18,820 --> 00:00:19,820
>> Thanks, we are glad you are here.

00:00:19,820 --> 00:00:20,820
We hope you are comfortable.

00:00:20,820 --> 00:00:22,460
In 15 to 20 minutes, we will have you get up.

00:00:22,460 --> 00:00:26,350
So enjoy the time in your seat right now.

00:00:26,350 --> 00:00:31,580
I'm Nathen Harvey, I'm a developer advocate for Google Cloud.

00:00:31,580 --> 00:00:40,420
If you want to find me on Twitter, my handle is my first name and last name smooshed together,

00:00:40,420 --> 00:00:43,300
Nathen Harvey.

00:00:43,300 --> 00:00:48,829
But it is NathEn Harvey.

00:00:48,829 --> 00:00:57,869
And we are excited to talk to you about SLOs and SRE today.

00:00:57,869 --> 00:01:06,290
>> [ Multiple people talking ]. >> Yeah, you will short that while I'm distracting

00:01:06,290 --> 00:01:07,290
everyone.

00:01:07,290 --> 00:01:16,369
I'm Jennifer Petoff, my friends call me Dr. J. You can find me on Twitter, JennSki.

00:01:16,369 --> 00:01:26,210
I'm a senior program manager at the site reliability program at Google in Ireland, and I'm a co-editor

00:01:26,210 --> 00:01:30,750
of the SRE book.

00:01:30,750 --> 00:01:33,530
And we fixed the slide!

00:01:33,530 --> 00:01:38,090
So we have a limited amount of time, and a lot to say.

00:01:38,090 --> 00:01:45,960
Why SLOs and service-level objectives?

00:01:45,960 --> 00:01:48,650
How do you incentivize reliability?

00:01:48,650 --> 00:01:56,040
In traditional development, there is tension built in because of the incentives.

00:01:56,040 --> 00:02:00,790
You have developers on the one hand that are building cool stuff, they are incentivized

00:02:00,790 --> 00:02:09,170
by agility, moving as fast as possible, throwing to operators who run things as smoothly and

00:02:09,170 --> 00:02:10,700
as stable as possible.

00:02:10,700 --> 00:02:14,720
This is not necessarily a great setup and leads to tension.

00:02:14,720 --> 00:02:20,980
And SLOs are about setting up agreed expectations among all parties, dev ops, leadership, and

00:02:20,980 --> 00:02:28,700
getting everyone on the same language and what reliability is needed to meet the needs

00:02:28,700 --> 00:02:31,450
of the users.

00:02:31,450 --> 00:02:34,099
And why are SLOs important?

00:02:34,099 --> 00:02:38,430
So there is one assumption that we need to talk about first, and that assumption is that

00:02:38,430 --> 00:02:43,180
the most important feature of any system is it's reliability.

00:02:43,180 --> 00:02:49,209
So without reliability, users cannot see all the shiny new bells and whistles in your product.

00:02:49,209 --> 00:02:53,680
If you are not meeting the reliability expectations of your users, they will leave you.

00:02:53,680 --> 00:02:56,920
Fickle buns, right?

00:02:56,920 --> 00:02:59,219
And how much reliability do you need?

00:02:59,219 --> 00:03:03,159
So, you know, your first inclination is to say, 100 percent!

00:03:03,159 --> 00:03:04,469
More reliability!

00:03:04,469 --> 00:03:05,469
All the reliability!

00:03:05,469 --> 00:03:08,090
>> Unless... unless you are a product owner.

00:03:08,090 --> 00:03:09,090
>> Okay.

00:03:09,090 --> 00:03:12,109
>> And then you want 110 percent reliability, right?

00:03:12,109 --> 00:03:13,999
>> Yeah, give us -- >> More, more.

00:03:13,999 --> 00:03:14,999
>> More reliability.

00:03:14,999 --> 00:03:15,999
>> I want it all.

00:03:15,999 --> 00:03:18,569
>> So that can be your first gut reaction.

00:03:18,569 --> 00:03:25,239
But 100 percent is the wrong reliable target for basically everything, I mean, everything

00:03:25,239 --> 00:04:19,759
-- (drop in audio).

00:04:19,759 --> 00:05:13,000
>> Try to be over the target, meet the needs of the users, keep them happy, but not too

00:05:13,000 --> 00:05:14,270
happy.

00:05:14,270 --> 00:05:34,160
>> I know how to spend money, so if we use error prioritizing the work that we do, what

00:05:34,160 --> 00:05:37,550
if we exhaust that?

00:05:37,550 --> 00:05:46,860
>> So if we declare bankruptcy, and the consequences of over spending include freezing feature

00:05:46,860 --> 00:05:52,591
releases, focusing on prioritizing action items from your post mortems, automating your

00:05:52,591 --> 00:05:57,710
deployment pipelines, improving monitoring and observability, or requiring an SRE consultation,

00:05:57,710 --> 00:06:04,400
so having a second set of eyes look over things to see, is this likely to cause problems in

00:06:04,400 --> 00:06:05,400
production?

00:06:05,400 --> 00:06:06,400
>> That is super cool.

00:06:06,400 --> 00:06:10,070
One of the organizations that I have worked with, I talked to them about their consequences

00:06:10,070 --> 00:06:14,710
of overspending the error budget, it was the last one, require SRE consultation.

00:06:14,710 --> 00:06:16,010
What did that mean?

00:06:16,010 --> 00:06:20,970
In practice, when they have exhausted their error budget, that was an indication to them

00:06:20,970 --> 00:06:23,330
that their systems were not reliable enough.

00:06:23,330 --> 00:06:30,320
So an SRE came to the development stand-ups, they were coming every day and talking about

00:06:30,320 --> 00:06:31,480
the work that they were doing.

00:06:31,480 --> 00:06:35,820
And it was really interesting, they told me they would happen, the SRE would come along

00:06:35,820 --> 00:06:39,340
and say, this is a call-off to an API service.

00:06:39,340 --> 00:06:48,080
And the SRE would ask a question, what is your strategy when that is not available,

00:06:48,080 --> 00:06:54,460
what is your re-try logic like, asking simple questions puts the developers in the mindset

00:06:54,460 --> 00:06:57,630
of building operable, reliable applications.

00:06:57,630 --> 00:07:07,010
Once you are in the right range, you can stop going to stand-ups and automating some things,

00:07:07,010 --> 00:07:12,900
but the development team that had the SRE came along kept had questions in mind even

00:07:12,900 --> 00:07:14,220
when the SRE wasn't there.

00:07:14,220 --> 00:07:22,610
And I think that's a good outcome in terms of consequences of over spending your error

00:07:22,610 --> 00:07:23,610
budget.

00:07:23,610 --> 00:07:27,960
>> Yes, paying the price for -- am I running out of power?

00:07:27,960 --> 00:07:28,960
>> Already?

00:07:28,960 --> 00:07:29,970
>> I sure am.

00:07:29,970 --> 00:07:30,980
>> Thanks, Brian.

00:07:30,980 --> 00:07:31,990
>> Risky, risky.

00:07:31,990 --> 00:07:35,090
That is super risky.

00:07:35,090 --> 00:07:36,790
All right.

00:07:36,790 --> 00:07:37,919
So -- >> Let's take care of that --

00:07:37,919 --> 00:07:39,780
>> We will just take care of that.

00:07:39,780 --> 00:07:44,380
And while we're doing that, our AC -- >> Wrong port.

00:07:44,380 --> 00:07:48,670
>> It is not that it wasn't plugged in.

00:07:48,670 --> 00:07:50,710
It's just that it wasn't plugged in the right place.

00:07:50,710 --> 00:07:52,440
Thanks, Brian, for the save.

00:07:52,440 --> 00:07:56,830
And also, I will make sure that you get that back at the end.

00:07:56,830 --> 00:08:00,530
So, what if I have a lot of budget left, though?

00:08:00,530 --> 00:08:03,030
>> So what can you spend your error budgets on?

00:08:03,030 --> 00:08:04,030
>> Yes.

00:08:04,030 --> 00:08:07,090
>> So error budgets can accommodate a bunch of different things.

00:08:07,090 --> 00:08:11,840
So it could be releasing new features, it could be dealing with expected system changes,

00:08:11,840 --> 00:08:14,550
inevitable failure, I mean, think of Murphy's law.

00:08:14,550 --> 00:08:17,750
We talked about 100 percent is never the right target.

00:08:17,750 --> 00:08:23,560
You can have inevitable failure in networks, hardware, etc., so plan had -- plan for experiments

00:08:23,560 --> 00:08:30,639
and opportunities to move as fast as possible.

00:08:30,639 --> 00:08:40,510
>> And sometimes we are not moving fast enough, and Aaron's talk, the three ways, the feedback

00:08:40,510 --> 00:08:44,770
cycle, if we are not moving fast enough, we are not getting the feedback loop as tight

00:08:44,770 --> 00:08:52,550
as possible and we are missing learning opportunities from our customers and systems.

00:08:52,550 --> 00:08:54,770
How do we create an error budget?

00:08:54,770 --> 00:08:56,140
How does that work?

00:08:56,140 --> 00:08:58,990
>> A great thing to ask about.

00:08:58,990 --> 00:09:01,310
We can talk about implementation mechanics.

00:09:01,310 --> 00:09:05,930
So the idea here is to evaluate performance over a set window of time, so you can look

00:09:05,930 --> 00:09:11,510
at a 28-day rolling window, and the idea is that the remaining budget drives prioritization

00:09:11,510 --> 00:09:12,870
of your engineering effort.

00:09:12,870 --> 00:09:20,779
So we are moving as fast as possible, when you drop into the red, you are focusing on

00:09:20,779 --> 00:09:25,300
reduction and paying down the tech debt, so to speak.

00:09:25,300 --> 00:09:31,020
We often talk about using a rolling window as being important, because as opposed to,

00:09:31,020 --> 00:09:35,230
say, like defining things on a quarter boundary, because users don't really care about those

00:09:35,230 --> 00:09:38,120
quarter boundaries, or that one has passed.

00:09:38,120 --> 00:09:42,160
So if something bad happens on the last day of the quarter, and, like, yay, it is the

00:09:42,160 --> 00:09:43,520
first of the month!

00:09:43,520 --> 00:09:45,620
>> We get a big reset.

00:09:45,620 --> 00:09:46,740
>> Yeah, no one cares.

00:09:46,740 --> 00:09:48,270
They don't forget problems over night.

00:09:48,270 --> 00:09:53,160
So the 28-day window helps to account for that.

00:09:53,160 --> 00:09:54,160
>> Right.

00:09:54,160 --> 00:09:55,160
>> And -- okay.

00:09:55,160 --> 00:09:56,160
Still me, I guess.

00:09:56,160 --> 00:09:57,160
>> Yeah, sure.

00:09:57,160 --> 00:09:58,160
>> I got the plan.

00:09:58,160 --> 00:09:59,160
All right.

00:09:59,160 --> 00:10:00,160
So -- heh.

00:10:00,160 --> 00:10:02,090
Always fun tag-timing N plus 1 presenters.

00:10:02,090 --> 00:10:10,650
We will talk about SRIs, a quantifiable layer of service reliability.

00:10:10,650 --> 00:10:18,500
You want your SLIs to be with the user experience of reliability and the reliability of your

00:10:18,500 --> 00:10:20,880
system.

00:10:20,880 --> 00:10:25,790
How do you choose a good SLI?

00:10:25,790 --> 00:10:31,150
This formula is pretty useful for constructing -- constructing an SLI.

00:10:31,150 --> 00:10:37,820
An SLI is formulated as a number of good events divided by the number of valid events times

00:10:37,820 --> 00:10:39,200
100 percent.

00:10:39,200 --> 00:10:45,700
And the reason this is a good formulation is because it ranges from 0-100 percent, easy

00:10:45,700 --> 00:10:54,140
to reason about, if it is 0, everything is broken, 100, everything is grand.

00:10:54,140 --> 00:11:02,360
And the denominator is denoted events, some events are not valid and you don't want them

00:11:02,360 --> 00:11:11,240
against the error budget, response types or 404s, you do not want to necessarily count

00:11:11,240 --> 00:11:17,540
that against yourselves in terms of your reliability goals.

00:11:17,540 --> 00:11:24,410
So this happy and sad, or hungry emoji -- I'm not sure.

00:11:24,410 --> 00:11:25,649
>> Hangry, maybe?

00:11:25,649 --> 00:11:28,370
>> You don't want hangry customers.

00:11:28,370 --> 00:11:29,910
But we do want happy customers.

00:11:29,910 --> 00:11:34,740
So understand this is really the key point, understanding the happiness of your users

00:11:34,740 --> 00:11:42,530
means measuring their experiences directly as best you can, and considering the cost.

00:11:42,530 --> 00:11:47,300
Users are unhappy when a service does not behave according to expectations, I thought

00:11:47,300 --> 00:11:50,460
it was going to do a thing, it is not doing a thing.

00:11:50,460 --> 00:11:54,770
So things like the database is down, the load balancer is sending request to bad back-ends,

00:11:54,770 --> 00:12:00,330
the users do not care why things are going belly up, they just care that the website

00:12:00,330 --> 00:12:07,000
doesn't load, I am sad, or the website doesn't load, or sorry, loads slowly, and I am also

00:12:07,000 --> 00:12:08,000
sad.

00:12:08,000 --> 00:12:14,310
So figuring out how to quantify web site does not load, it is slow, getting the theory on

00:12:14,310 --> 00:12:16,899
your monitoring data is what we are getting at here.

00:12:16,899 --> 00:12:20,589
>> And this, what me are doing this afternoon is a workshop.

00:12:20,589 --> 00:12:28,020
I know it doesn't feel like a workshop, or a presentation, but we have exercises for

00:12:28,020 --> 00:12:29,490
you coming up.

00:12:29,490 --> 00:12:35,850
And so what we're going to do, we're going to help you, and by help you, we're going

00:12:35,850 --> 00:12:38,730
to ask you and then watch as you do this.

00:12:38,730 --> 00:12:44,860
We're going to ask you to write some SLIs and some SLOs for an application.

00:12:44,860 --> 00:12:50,040
Now, it would be awesome if we wrote the SLIs and SLOs for your application.

00:12:50,040 --> 00:12:54,690
But there are many of you here, and many different applications represented in the room.

00:12:54,690 --> 00:12:58,700
So in order to sort of level set everyone, we're going to give you an application!

00:12:58,700 --> 00:13:02,710
And, by give you an application, what I mean is we're going to draw you a picture of what

00:13:02,710 --> 00:13:05,370
an application architecture might look like.

00:13:05,370 --> 00:13:08,460
So I'm going to introduce our game quickly.

00:13:08,460 --> 00:13:12,760
You do not get to play the game, you get to play the role of the SRE that is responsible

00:13:12,760 --> 00:13:14,350
for managing this game.

00:13:14,350 --> 00:13:17,380
We have this game, an online game, you can play it on your phone.

00:13:17,380 --> 00:13:20,020
It is called Fang Faction.

00:13:20,020 --> 00:13:22,520
The details of the game don't really matter.

00:13:22,520 --> 00:13:26,730
The high-level things that you need to know is, each one of you or your customers can

00:13:26,730 --> 00:13:33,120
be a player, a player can log in on a phone, computer, tablet, it doesn't matter.

00:13:33,120 --> 00:13:38,420
When they come to the application, they hit the load balancer and the loader will send

00:13:38,420 --> 00:13:43,580
them to the website, where the game runs, or if they are playing a game right now they

00:13:43,580 --> 00:13:44,580
are hitting the API servers.

00:13:44,580 --> 00:13:52,130
As you are playing the game, we are keeping a score, because why play a game without keeping

00:13:52,130 --> 00:13:53,130
score?

00:13:53,130 --> 00:13:54,499
>> We are all competitive people.

00:13:54,499 --> 00:13:56,400
>> It doesn't make sense.

00:13:56,400 --> 00:14:02,700
So since we are keeping score, you want to know, as a player, how do I fare against other

00:14:02,700 --> 00:14:03,700
players?

00:14:03,700 --> 00:14:07,899
We have the concept of a leader board, when you look at a profile, you can see information

00:14:07,899 --> 00:14:16,290
about yourself, where you sit in the leader board, if you can imagine the flow, we are

00:14:16,290 --> 00:14:20,680
playing the game, capture the score, the score is on the leader board, you are looking at

00:14:20,680 --> 00:14:24,330
that, there are a lot of moving parts to the application.

00:14:24,330 --> 00:14:33,750
You don't need to understand all the details to write an SLI or SLO, but this the application

00:14:33,750 --> 00:14:43,120
that you will write the SLI or SLO about, and I will give you hand outs on that.

00:14:43,120 --> 00:14:53,920
So this is a typical profile page, I can see a picture of myself, each user has an avatar.

00:14:53,920 --> 00:14:59,930
Again, you can see information like their name, the faction, where they are on the leader

00:14:59,930 --> 00:15:02,380
board, the top score and so forth.

00:15:02,380 --> 00:15:09,630
This is just a crud page, come in, create a profile, I can update and delete my pofile,

00:15:09,630 --> 00:15:15,350
potentially, it looks like the product team did not make the leading a profile, just updating,

00:15:15,350 --> 00:15:16,350
nevermind that bit.

00:15:16,350 --> 00:15:19,630
We will get to it later.

00:15:19,630 --> 00:15:26,270
What does an SLI look like if we dig into this particular page, or this particular part

00:15:26,270 --> 00:15:27,630
of our application?

00:15:27,630 --> 00:15:32,550
Well, before we get there, I want to step back and talk about this idea of having a

00:15:32,550 --> 00:15:38,400
menu of SLIs, or service-level indicators that you can select from.

00:15:38,400 --> 00:15:42,730
As you think about your application, I want you to think about how your users interact

00:15:42,730 --> 00:15:43,730
with your application.

00:15:43,730 --> 00:15:49,560
Do they follow a request response, do something like data processing?

00:15:49,560 --> 00:15:54,830
Maybe your application does transcoding of video files, so a user takes a video file,

00:15:54,830 --> 00:15:59,730
they upload that video file, you take it, you process it, and you spit it out as a different

00:15:59,730 --> 00:16:01,589
format, maybe it is an MP3 now.

00:16:01,589 --> 00:16:02,830
So here is just the audio.

00:16:02,830 --> 00:16:05,700
So this data processing transaction.

00:16:05,700 --> 00:16:11,220
Or maybe you are writing data to disk, or to some cloud storage or something like that.

00:16:11,220 --> 00:16:13,260
So how does that storage actually work?

00:16:13,260 --> 00:16:18,710
And with each one of those different types of transactions, we actually select, or offer,

00:16:18,710 --> 00:16:21,970
a couple of different SLI types you can create.

00:16:21,970 --> 00:16:26,920
So in the simplest form, the request response, we might have an SLI or service-level indicator

00:16:26,920 --> 00:16:33,260
that looks at the availability of the page you are requesting or the resource you are

00:16:33,260 --> 00:16:38,589
requesting, what is the latency, how long it takes to return the information to you,

00:16:38,589 --> 00:16:40,950
and what is the quality?

00:16:40,950 --> 00:16:42,260
Did we get the right things?

00:16:42,260 --> 00:16:44,010
That is good.

00:16:44,010 --> 00:16:45,170
>> All right.

00:16:45,170 --> 00:16:48,790
>> So this is how you start writing SLIs.

00:16:48,790 --> 00:16:54,410
You pick a critical user journey, a thing that is really important to your users.

00:16:54,410 --> 00:16:57,350
And your users, that's the users of your system.

00:16:57,350 --> 00:17:03,410
So you don't say, like, well, our service-level indicator, I heard SLIs are metrics.

00:17:03,410 --> 00:17:05,799
I know an easy thing to measure is CPU utilization.

00:17:05,799 --> 00:17:09,350
My SLI is going to be CPU utilization.

00:17:09,350 --> 00:17:10,729
Is that a good one?

00:17:10,729 --> 00:17:12,389
>> Do I care about it.

00:17:12,389 --> 00:17:14,140
>> I care about it, I'm an sys admin.

00:17:14,140 --> 00:17:16,269
>> I'm using a fang faction.

00:17:16,269 --> 00:17:21,290
>> You don't care as a customer?

00:17:21,290 --> 00:17:24,600
>> Easy to measure, but the wrong thing.

00:17:24,600 --> 00:17:28,100
Every SLI is a metric, but not every metric is an SLI.

00:17:28,100 --> 00:17:29,830
>> Not every metric is created equal.

00:17:29,830 --> 00:17:31,060
>> That's true.

00:17:31,060 --> 00:17:36,080
So we have to sit down and understand the application, and our users, and what they

00:17:36,080 --> 00:17:37,510
want to do with it.

00:17:37,510 --> 00:17:43,210
So we've decided, through consultation, not just as engineers, we've invited the product

00:17:43,210 --> 00:17:48,549
team along, our business, the business people along, whoever those business people are that

00:17:48,549 --> 00:17:49,549
live in the air quotes.

00:17:49,549 --> 00:17:54,160
[ Laughter ]. They came along and told us, this is important for our application.

00:17:54,160 --> 00:17:59,240
The user should view the profile page and do it successfully.

00:17:59,240 --> 00:18:06,940
But we are engineers, profile page, view it successfully, what does it even mean?

00:18:06,940 --> 00:18:07,940
Okay.

00:18:07,940 --> 00:18:09,660
So how do we define success?

00:18:09,660 --> 00:18:12,330
What does it mean to successfully look at that profile page?

00:18:12,330 --> 00:18:15,270
And where is that success or failure recorded?

00:18:15,270 --> 00:18:20,280
So we just start iterating on these questions to really flesh out what does the service

00:18:20,280 --> 00:18:22,360
level indicator look like.

00:18:22,360 --> 00:18:29,600
A good SLI, as Jennifer indicated, is a proportion, of requests served successfully.

00:18:29,600 --> 00:18:32,910
That is not precise enough to put a measure around.

00:18:32,910 --> 00:18:34,730
What is valid?

00:18:34,730 --> 00:18:42,100
A valid request may be an http get request against two urls, they make a get request

00:18:42,100 --> 00:18:46,850
to the profile page and the avatar.

00:18:46,850 --> 00:18:51,100
So we will look at the http status codes for each of them, because we have to figure out

00:18:51,100 --> 00:18:53,950
what does it mean to be successful?

00:18:53,950 --> 00:19:01,210
What is a good success indicator for an http status code, if I go to a page and make a

00:19:01,210 --> 00:19:02,870
get request against it?

00:19:02,870 --> 00:19:03,870
200.

00:19:03,870 --> 00:19:04,870
All right.

00:19:04,870 --> 00:19:05,870
So let's look at that.

00:19:05,870 --> 00:19:08,800
So 200 is good, 500 is better, right?

00:19:08,800 --> 00:19:09,800
>> Uh-huh.

00:19:09,800 --> 00:19:12,070
>> No... that's not how it works, is it?

00:19:12,070 --> 00:19:13,070
>> No.

00:19:13,070 --> 00:19:15,770
>> So 500, bad, 200, good.

00:19:15,770 --> 00:19:17,320
So what is success?

00:19:17,320 --> 00:19:19,650
Let's put some numbers around that.

00:19:19,650 --> 00:19:25,470
We might say a success is a 200, a 300, or a 400.

00:19:25,470 --> 00:19:31,300
Maybe it is a 404, we don't care about those, so we have two choices, that is a success,

00:19:31,300 --> 00:19:36,680
or we can cut it out of our valid events, as Jennifer was talking about earlier.

00:19:36,680 --> 00:19:41,429
But then we also have to ask, where are we going to measure this?

00:19:41,429 --> 00:19:45,740
Back to the application architecture, there's a lot of components and multiple web servers,

00:19:45,740 --> 00:19:49,310
in the diagram, it was just one.

00:19:49,310 --> 00:19:50,920
But we all know that's a lie.

00:19:50,920 --> 00:19:54,780
So it is a market texture diagram, I guess.

00:19:54,780 --> 00:19:55,780
>> Okay.

00:19:55,780 --> 00:19:56,780
>> Architecture...

00:19:56,780 --> 00:19:58,130
>> So where are we actually going to measure this?

00:19:58,130 --> 00:20:00,420
We're going to measure this at the load balancer.

00:20:00,420 --> 00:20:05,270
So we're going to look at all of the http status codes for these specific urls, we will

00:20:05,270 --> 00:20:11,460
come up with a percentage, how many are, how many are bad, what is the total that we have?

00:20:11,460 --> 00:20:17,730
And we will do similar with latency, with latency, we work with the same questions.

00:20:17,730 --> 00:20:22,581
The product owner should load fast, and maybe we will say, thanks product owner, that's

00:20:22,581 --> 00:20:28,700
what we can do, you can eat lunch, we will figure out what is the details of load fast

00:20:28,700 --> 00:20:33,100
actually mean and come up with metrics that we will share with you.

00:20:33,100 --> 00:20:38,000
This is the process to come up with good, level service-level indicators.

00:20:38,000 --> 00:20:47,549
>> So we talked about SLIs to measure system performance, but systems need SLOs.

00:20:47,549 --> 00:20:53,210
That's the thesis of the workshop, what target are you aiming for, what level of performance

00:20:53,210 --> 00:20:57,700
is good versus not good?

00:20:57,700 --> 00:21:02,900
And SLOs, this reliability target for your SLI.

00:21:02,900 --> 00:21:07,210
The SLO is the target, the SLI tells you if you are meeting it or not.

00:21:07,210 --> 00:21:17,250
And SLOs are just under 100 percent, say 99.9, 3 9s, or what is appropriate for your set

00:21:17,250 --> 00:21:18,250
of users.

00:21:18,250 --> 00:21:27,540
And the SLOs should be set from the perspective of your users.

00:21:27,540 --> 00:21:30,990
>> And when you think about three 9s, four 9s, five 9s.

00:21:30,990 --> 00:21:36,080
Don't add more 9s because it sounds better.

00:21:36,080 --> 00:21:38,220
What do your users care about?

00:21:38,220 --> 00:21:45,020
Maybe your business has a specific set of users that utilize your service from 9-5,

00:21:45,020 --> 00:21:47,360
on weekdays, central time.

00:21:47,360 --> 00:21:49,250
Do you need 100 percent availability for that?

00:21:49,250 --> 00:21:54,580
I have to take that into consideration.

00:21:54,580 --> 00:21:59,630
>> So what goals should we set for the reliability of our journey, when we are thinking about

00:21:59,630 --> 00:22:01,220
the game that we just talked about?

00:22:01,220 --> 00:22:05,260
So, again, your SLOs should have both a target and a measurement window.

00:22:05,260 --> 00:22:13,040
So, you know, you might have an -- an availability SLI type, a latency for the user profile,

00:22:13,040 --> 00:22:20,630
and an objective could be, for the first case, 99.95 percent successful in the previous 28-day

00:22:20,630 --> 00:22:26,530
window, for latency, 98 percent of requests less than 500 milliseconds in the previous

00:22:26,530 --> 00:22:27,730
28 days.

00:22:27,730 --> 00:22:32,900
>> It should be a rolling window, we are looking back over some period of time.

00:22:32,900 --> 00:22:37,980
And the other thing that is important to note here, for this one critical user journey,

00:22:37,980 --> 00:22:42,150
loading up the profile page, we have multiple SLOs associated with it.

00:22:42,150 --> 00:22:48,179
If you look at a critical user journey, you have one to three SLOs associated with that

00:22:48,179 --> 00:22:50,570
user journey.

00:22:50,570 --> 00:22:54,549
>> So you need to think about what performance the business actually needs.

00:22:54,549 --> 00:23:01,620
So SLOs typically represent business requirements, that's what you are aiming for, if you have

00:23:01,620 --> 00:23:07,220
an SLO that is setting up the bound between happy and sad users, we can think of them

00:23:07,220 --> 00:23:09,180
as aspirational SLOs.

00:23:09,180 --> 00:23:13,250
You might not be meeting them right away when you are starting your journey and starting

00:23:13,250 --> 00:23:17,090
to set these things, but it is basically what you want to work towards with engineering

00:23:17,090 --> 00:23:18,270
effort over time.

00:23:18,270 --> 00:23:21,810
So aspirational SLOs.

00:23:21,810 --> 00:23:27,410
But the -- the good news is, I guess, user expectations are strongly tied to past performance.

00:23:27,410 --> 00:23:33,470
So you have data, data to start with, and start with historical data if you have it.

00:23:33,470 --> 00:23:37,710
You can think of them as achievable SLOs, if you look at your performance in the past,

00:23:37,710 --> 00:23:42,190
you can set an SLO based on what you think you can actually achieve.

00:23:42,190 --> 00:23:47,260
And then the difference between these aspirational and achievable SLOs is actually a pretty useful

00:23:47,260 --> 00:23:48,260
signal.

00:23:48,260 --> 00:23:51,350
If you are close together, you are delivering what the business needs.

00:23:51,350 --> 00:23:57,220
If things are far apart, then there is work to do to meet the expectations of your users.

00:23:57,220 --> 00:23:58,450
>> That's right.

00:23:58,450 --> 00:23:59,450
Okay!

00:23:59,450 --> 00:24:01,030
We're mostly done with the talky-talky.

00:24:01,030 --> 00:24:05,299
You survived it, way to go, I hope that was survival.

00:24:05,299 --> 00:24:07,799
Now we will put you to work.

00:24:07,799 --> 00:24:11,750
So here's -- I'm going to describe the whole process to you and then I will ask you to

00:24:11,750 --> 00:24:14,120
get up and move.

00:24:14,120 --> 00:24:15,610
But get ready.

00:24:15,610 --> 00:24:22,870
On the front of the stage, we have two things, maybe up to four things that we -- yeah, four

00:24:22,870 --> 00:24:25,340
or five things that we would like you to take.

00:24:25,340 --> 00:24:29,270
One is this little workbook that says the art of SLOs on it.

00:24:29,270 --> 00:24:34,740
This has a TON of great content in here, and some details about that fang faction application

00:24:34,740 --> 00:24:37,200
that we're going to write SLIs about.

00:24:37,200 --> 00:24:40,990
And then there's also a worksheet here, and this worksheet is broken down into, like,

00:24:40,990 --> 00:24:42,470
five sections.

00:24:42,470 --> 00:24:43,940
The first is the user journey.

00:24:43,940 --> 00:24:48,760
So, within this workbook, we give you more details about that application.

00:24:48,760 --> 00:24:54,100
And on pages -- it says right here -- 18-22, it describes a couple of different user journeys.

00:24:54,100 --> 00:25:00,570
You are going to select one of the user journeys, look at the SLI menu, a request for response

00:25:00,570 --> 00:25:04,730
journey, a data processing journey, and select the type.

00:25:04,730 --> 00:25:08,470
You will write an SLI specification.

00:25:08,470 --> 00:25:15,150
So the profile page should load successfully, and how are we going to measure that?

00:25:15,150 --> 00:25:18,310
And finally, you come up with an objective.

00:25:18,310 --> 00:25:24,650
We want the profile page to load successfully 99.5 percent over the past 28 days, something

00:25:24,650 --> 00:25:26,160
along those lines.

00:25:26,160 --> 00:25:34,590
So what I'm going to ask you to do, I want each of you to find five other people.

00:25:34,590 --> 00:25:38,780
We should have groups of 6 or 7 along those lines.

00:25:38,780 --> 00:25:43,840
I don't know if I'm allowed foosay this, you can move the chairs, but -- it doesn't look

00:25:43,840 --> 00:25:44,840
like.

00:25:44,840 --> 00:25:49,630
It you can probably move the chairs, that's fine.

00:25:49,630 --> 00:25:56,220
I want you, encourage you, in your groups, to not all stick together if you are all from

00:25:56,220 --> 00:25:57,220
one company.

00:25:57,220 --> 00:26:00,020
We will get cross-pollination happening.

00:26:00,020 --> 00:26:02,070
I work at Google, Emily works at Microsoft.

00:26:02,070 --> 00:26:04,620
We will be great on a team together.

00:26:04,620 --> 00:26:09,100
Me and Jennifer work on Google, so we should separate and go to a different group.

00:26:09,100 --> 00:26:11,050
And, let's see.

00:26:11,050 --> 00:26:13,830
So you are going to do it, it says, on this slide.

00:26:13,830 --> 00:26:20,690
Choose a critical user journey, an SLI specification, implementation, and think about some business

00:26:20,690 --> 00:26:21,690
needs.

00:26:21,690 --> 00:26:26,270
And now, the last page of this document has some graphs.

00:26:26,270 --> 00:26:29,510
As Jennifer mentioned, you can set SLOs based on past performance.

00:26:29,510 --> 00:26:31,720
Here is the past performance.

00:26:31,720 --> 00:26:37,570
Admittedly, you don't have enough information to actually set a good, proper SLI.

00:26:37,570 --> 00:26:38,570
But guess what?

00:26:38,570 --> 00:26:42,160
In your organization, for your applications, you don't have enough information right now

00:26:42,160 --> 00:26:43,640
to set a good, proper SLI.

00:26:43,640 --> 00:26:45,850
So this is a good exercise in that.

00:26:45,850 --> 00:26:49,500
And we also ask you to do this in groups, so that you can negotiate with one another

00:26:49,500 --> 00:26:51,930
and kind of discover this together.

00:26:51,930 --> 00:27:05,030
So, what questions can I answer for you?

00:27:05,030 --> 00:27:07,049
>>AUDIENCE MEMBER: (Speaker far from mic).

00:27:07,049 --> 00:27:09,770
>> I want you to create SLIs and SLOs for me.

00:27:09,770 --> 00:27:16,530
>> It is not a brainstorm, it is coming to consensus as a group, what are good SLIs.

00:27:16,530 --> 00:27:21,631
If we have time at the end, we probably won't, we will ask a group or two to share what did

00:27:21,631 --> 00:27:22,840
they come up with.

00:27:22,840 --> 00:27:24,490
All right.

00:27:24,490 --> 00:27:26,400
Does that answer your question?

00:27:26,400 --> 00:27:27,400
Good.

00:27:27,400 --> 00:27:28,400
Ready?

00:27:28,400 --> 00:27:29,400
>> How long are we giving people?

00:27:29,400 --> 00:27:33,330
>> We're going to give you 17 minutes.

00:27:33,330 --> 00:27:34,330
>> Whoa!

00:27:34,330 --> 00:27:37,090
>> That is not enough time.

00:27:37,090 --> 00:27:39,460
So you should get up now and come get the stuff.

00:27:39,460 --> 00:27:40,480
>> Get the stuff!

00:27:40,480 --> 00:27:43,140
>> There are pens up here as well.

00:27:43,140 --> 00:27:46,400
And my -- my business card, and Jennifer's business card, if you want to take our contact

00:27:46,400 --> 00:27:49,470
info.

00:27:49,470 --> 00:27:53,410
So each individual should take a booklet.

00:27:53,410 --> 00:27:57,700
There's enough worksheets for each individual to take one, at least each group should have

00:27:57,700 --> 00:27:59,620
a worksheet.

00:27:59,620 --> 00:28:05,120
Jennifer and I will walk around and check in on groups, see how you're doing, ask you

00:28:05,120 --> 00:28:08,059
questions, and what-have-you.

00:28:08,059 --> 00:28:11,480
So find three to seven other good people.

00:28:11,480 --> 00:28:14,750
They are all good people in the room, by the way.

00:28:14,750 --> 00:28:18,100
People that you don't work with -- haha, thank you, Brian.

00:28:18,100 --> 00:28:19,100
>> All right, folks.

00:28:19,100 --> 00:28:20,100
>> And actually, there's this guy.

00:28:20,100 --> 00:28:21,100
>> If you run out of sheets, each group needs one sheet.

00:28:21,100 --> 00:28:22,100
If you run out, find a group that needs a sheet.

00:28:22,100 --> 00:28:23,100
If you're a group with multiple sheets, find one without one and give them one of yours.

00:28:23,100 --> 00:28:24,100
>> Is that awesome?

00:28:24,100 --> 00:28:25,100
>> In true agile fashion, we are time-boxing this, and in case you don't feel any pressure,

00:28:25,100 --> 00:28:26,100
the clock is on the screen, counting down.

00:28:26,100 --> 00:28:27,100
No additional stress for you at all.

00:28:27,100 --> 00:28:28,100
>> Can we get a little Queen playing, under pressure?

00:28:28,100 --> 00:28:29,100
[Group work].

00:28:29,100 --> 00:28:30,100
>> I'm sure you were thinking this is going to be easy, but we have three minutes to finish

00:28:30,100 --> 00:28:31,100
up your third.

00:28:31,100 --> 00:28:32,100
Which, if you are not done with the first, that's cool, too.

00:28:32,100 --> 00:28:33,100
But just a three-minute warning.

00:28:33,100 --> 00:28:34,100
[Group work].

00:28:34,100 --> 00:28:35,100
>> I hate to interrupt, but I want to be respectful of your time and the time of the conference.

00:28:35,100 --> 00:28:36,100
Unfortunately, we are out of time.

00:28:36,100 --> 00:28:37,100
My experience, maybe this is yours as well.

00:28:37,100 --> 00:28:38,100
When you think about and think about SLIs and SLOs, they just make sense and they seem

00:28:38,100 --> 00:28:39,470
super easy.

00:28:39,470 --> 00:28:45,990
When you sit down to actually come up with one, it's maybe a little bit more difficult.

00:28:45,990 --> 00:28:47,289
What did you think?

00:28:47,289 --> 00:28:48,289
>> Yeah.

00:28:48,289 --> 00:28:49,289
>> Okay.

00:28:49,289 --> 00:28:50,289
>> Cool.

00:28:50,289 --> 00:28:57,530
Well, we have just a couple of parting words for you.

00:28:57,530 --> 00:29:02,350
>> Both the site reliability engineering book and workbook are available online at Google.com/SRE.

00:29:02,350 --> 00:29:05,960
So it is all free to check out.

00:29:05,960 --> 00:29:11,770
There's a lot of great content on there about SLOs, SLIs, etc.

00:29:11,770 --> 00:29:19,030
>> A quick word on those, the SRE book -- these are all of the practices, and the SRE workbook

00:29:19,030 --> 00:29:22,559
is how to take the practices and put them to work.

00:29:22,559 --> 00:29:27,740
So there are exercises and guidance on how do you actually put these practices to work

00:29:27,740 --> 00:29:29,499
in your organization.

00:29:29,499 --> 00:29:30,700
>> Exactly.

00:29:30,700 --> 00:29:37,450
>> And finally, there's a course on Coursera, if you want to learn about SLOs, you can check

00:29:37,450 --> 00:29:42,169
this out, created by the SRE team.

00:29:42,169 --> 00:29:47,830
>> Yes, and a final word, I have two things.

00:29:47,830 --> 00:29:52,970
The first is, I would encourage you to stay in your groups if you want to keep working

00:29:52,970 --> 00:29:54,289
through the exercise.

00:29:54,289 --> 00:29:56,910
You can certainly move, like, back into the sponsor area.

00:29:56,910 --> 00:30:03,090
I also encourage you, as you complete or give up on your worksheet, whatever the case may

00:30:03,090 --> 00:30:08,299
be, if you don't mind stopping by the Google table and letting us snap a picture.

00:30:08,299 --> 00:30:15,020
It is for us on how to progress, and have a conversation on what you came up with.

00:30:15,020 --> 00:30:24,900
And the final thing to say, if you are interested in doing a workshop like this, on your organization,

00:30:24,900 --> 00:30:25,900
reach out to me.

00:30:25,900 --> 00:30:34,790
We have folks on my teams and other teams that will sit about how this works with all

00:30:34,790 --> 00:30:36,970
of you and a cross-section of the organization.

00:30:36,970 --> 00:30:38,760
Thank you for joining our workshop today!

00:30:38,760 --> 00:30:41,580
[ Applause ].Jennifer Petoff, Nathen Harvey - Site Reliability Engineering (SRE) and the

00:30:41,580 --> 00:30:42,340

YouTube URL: https://www.youtube.com/watch?v=fWvNzDVOJDE


