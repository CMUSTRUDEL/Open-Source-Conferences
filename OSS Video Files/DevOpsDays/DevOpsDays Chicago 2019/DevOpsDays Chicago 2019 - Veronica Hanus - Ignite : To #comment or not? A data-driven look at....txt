Title: DevOpsDays Chicago 2019 - Veronica Hanus - Ignite : To #comment or not? A data-driven look at...
Publication date: 2019-09-09
Playlist: DevOpsDays Chicago 2019
Description: 
	Veronica Hanus - Ignite: To #comment or not? A data-driven look at conflicting attitudes towards commenting and documentation

Every programmer has asked themselves “how many comments are too many?” To the newest programmers, comments may seem magical–a way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming & code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!

While most of us agree that commenting is part of writing maintainable code, it’s very difficult for someone who has not yet worked in a community-reviewed codebase to know what is good practice and not. The answers that come back often conflict with each other: Code should be DRY, but well-placed comments save future devs. How can someone find the commenting style that is best for them as they learn, grow, & contribute? My survey of 170 long-time developers, Computer Science majors, bootcamp grads, & hobby programmers confirms some expectations and brings others into question. Join me for a data-based chat about the biggest pain points caused by our attitudes toward commenting and the steps we can take to encourage a growth mindset and empower programmers of all levels.
Captions: 
	00:00:13,509 --> 00:00:14,509
Veronica Hanus - To #comment or not?

00:00:14,509 --> 00:00:15,509
A data-driven look at conflicting attitudes towards commenting and documentation

00:00:15,509 --> 00:00:16,859
>> Please make your way to main hall C. >>SASHA ROSENBAUM: You Quant to be here for

00:00:16,859 --> 00:00:18,924
the beginning of ignites, because missing one minute is like missing half the talk.

00:00:18,924 --> 00:00:19,924
>>SASHA ROSENBAUM: All right!

00:00:19,924 --> 00:00:20,924
I think most people are back in.

00:00:20,924 --> 00:00:21,924
So we're going to get started.

00:00:21,924 --> 00:00:22,924
So the first thing after lunch is ignite talks, and if you are not familiar, ignite is a fun

00:00:22,924 --> 00:00:23,924
talk format.

00:00:23,924 --> 00:00:24,924
It lasts 5 minutes, so it is like a lightning talk.

00:00:24,924 --> 00:00:25,924
But it also has another challenge, which is, like, your slides auto advance for you.

00:00:25,924 --> 00:00:26,924
So this is hard to keep up with, and so it is like a good format for first-time speakers,

00:00:26,924 --> 00:00:27,924
but even some experienced speakers experience challenges with it and are afraid to give

00:00:27,924 --> 00:00:28,924
it.

00:00:28,924 --> 00:00:29,924
So with no further ado, I will introduce my ignite speakers for today.

00:00:29,924 --> 00:00:30,924
They will come up on stage right now, because there is not a lot of separation between them.

00:00:30,924 --> 00:00:31,924
A round of applause.

00:00:31,924 --> 00:00:32,924
So I apologize in advance, if I screw up anybody's name.

00:00:32,924 --> 00:00:33,924
It is Veronica Hanus, Jay Gordon, Adam Shake, J. Paul Reed, and Michael Stahnke.

00:00:33,924 --> 00:00:34,924
Maybe he will sing for us, I don't know.

00:00:34,924 --> 00:00:35,924
Anything can happen.

00:00:35,924 --> 00:00:36,924
So let's go.

00:00:36,924 --> 00:00:37,924
Switch on the slides.

00:00:37,924 --> 00:00:38,924
>>SASHA ROSENBAUM: 15 seconds.

00:00:38,924 --> 00:00:39,924
>>Veronica Hanus: Who makes a comment to themselves in coding, maybe you copied and pasted a section

00:00:39,924 --> 00:00:40,924
in Stack Overflow, you made a choice and why did you make that, when you make that comment,

00:00:40,924 --> 00:00:41,924
are you making documentation?

00:00:41,924 --> 00:00:42,924
Sometimes newbies are told to do a programmer, they need to have dry comments and comments

00:00:42,924 --> 00:00:43,924
need time to refactor.

00:00:43,924 --> 00:00:50,079
These comments docs have benefits of describing document functions and place, giving cognitive

00:00:50,079 --> 00:00:51,199
road.

00:00:51,199 --> 00:00:56,120
You may wonder why we are using these comments everywhere.

00:00:56,120 --> 00:00:59,290
What is the problem with that?

00:00:59,290 --> 00:01:02,659
I had web scraping, and error confusion.

00:01:02,659 --> 00:01:07,750
My favorite comment of all time, oh, it is a list, thank God.

00:01:07,750 --> 00:01:09,580
Why did we contribute to this?

00:01:09,580 --> 00:01:12,880
I feel confused looking at it now, and I wrote it.

00:01:12,880 --> 00:01:15,930
There's a lot of variation and best practices for comments.

00:01:15,930 --> 00:01:22,040
We can agree that comments, achieved properly, can be an invaluable part of a code base.

00:01:22,040 --> 00:01:26,480
A lot of people feel that no comment means bad code.

00:01:26,480 --> 00:01:30,530
But I expect -- no comment can mean bad code.

00:01:30,530 --> 00:01:32,070
This might also be true.

00:01:32,070 --> 00:01:36,450
So when are we just labelling our cats, and when are our comments useful?

00:01:36,450 --> 00:01:43,250
The internet, of course, has some advice: So we've all seen the Stack Overflow newby

00:01:43,250 --> 00:01:46,240
smack down.

00:01:46,240 --> 00:01:51,000
Don't use comments, use only the right comments, the right comment matters.

00:01:51,000 --> 00:01:55,640
Thank you, internet people, heh.

00:01:55,640 --> 00:02:01,430
Sometimes the response to someone's thoughtful question is, this has been discussed to death.

00:02:01,430 --> 00:02:05,710
We forget how much new programmers are taking on when we put them down for asking about

00:02:05,710 --> 00:02:07,130
best practices.

00:02:07,130 --> 00:02:13,100
How dare they.

00:02:13,100 --> 00:02:17,560
All this best use talk is important, and let's go back and remember when we are first writing

00:02:17,560 --> 00:02:21,879
the first lines of code and the power of the comment.

00:02:21,879 --> 00:02:24,730
Some newbies throw them everywhere to support their learning.

00:02:24,730 --> 00:02:28,639
What happens when we tem newbies to hide the learning process?

00:02:28,639 --> 00:02:32,840
This is an example of the earliest comments, but none of them exist.

00:02:32,840 --> 00:02:38,049
To be taken seriously as a developer I was told to commit my cleanest code.

00:02:38,049 --> 00:02:47,510
When I heard that somebody's commenting is antipattern, I couldn't let it go.

00:02:47,510 --> 00:02:50,680
We are robots, or fooling ourselves.

00:02:50,680 --> 00:03:00,989
I asked in a survey, are comments good, is clean commenting king?

00:03:00,989 --> 00:03:08,450
The responses were positive about comments, but is clean code self documented, it was

00:03:08,450 --> 00:03:13,700
spread out.

00:03:13,700 --> 00:03:17,950
People care a lot about this topic, in the written answers, they wrote tomes in variety

00:03:17,950 --> 00:03:30,109
of viewpoints, from a month to a variety of years.

00:03:30,109 --> 00:03:35,560
I'm only one of the folks that had to go through with this jerk comment, 78 percent of respondents

00:03:35,560 --> 00:03:38,819
disagree with the practice.

00:03:38,819 --> 00:03:46,969
A whole lot of people, 60 percent, use in line comments despite the collective shame

00:03:46,969 --> 00:03:48,319
about the practice.

00:03:48,319 --> 00:03:54,400
63 percent of us use comments to explore new ideas.

00:03:54,400 --> 00:03:57,480
So comments are part of the code that we produce.

00:03:57,480 --> 00:04:02,809
And the fact that we produce them offers us lessons about how we learn, collaborate, and

00:04:02,809 --> 00:04:04,629
create.

00:04:04,629 --> 00:04:10,040
How we support new learners and their future documentation habits, or not support newby

00:04:10,040 --> 00:04:14,939
learners and their documentation habits, tells us about the gap that we have in the model

00:04:14,939 --> 00:04:19,770
and the usefulness of what can be a big support for devs.

00:04:19,770 --> 00:04:24,190
Best practices have a lot of confusion, and do as I say, not as I do.

00:04:24,190 --> 00:04:28,850
It is important that we don't -- that we remember our overwhelmed learner.

00:04:28,850 --> 00:04:34,700
If you start to think about comments as an early form of documentation, would we better

00:04:34,700 --> 00:04:42,380
define best practices and create tooling to address the concerns of comment wrought?

00:04:42,380 --> 00:04:47,220
The bottom line, let's stop putting down people who have ideas different than ours.

00:04:47,220 --> 00:04:53,810
Who thinks this is some Oxygen documentation right here?

00:04:53,810 --> 00:05:05,180
Long 15 seconds, this is my contact information, thank you for coming, if you want the survey,

00:05:05,180 --> 00:05:07,410
I'm adding the link here.

00:05:07,410 --> 00:05:11,060
If your company would like to hire a dev girl, we should be on touch, because apparently

00:05:11,060 --> 00:05:18,260
I would try anything to be on stage.

00:05:18,260 --> 00:05:24,000

YouTube URL: https://www.youtube.com/watch?v=QRof4vqOtIA


