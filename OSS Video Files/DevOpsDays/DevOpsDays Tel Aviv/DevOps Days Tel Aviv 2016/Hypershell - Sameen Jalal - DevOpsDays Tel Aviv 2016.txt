Title: Hypershell - Sameen Jalal - DevOpsDays Tel Aviv 2016
Publication date: 2016-12-29
Playlist: DevOps Days Tel Aviv 2016
Description: 
	
Captions: 
	00:00:02,920 --> 00:00:09,910
[Music]

00:00:07,379 --> 00:00:13,150
hello from Facebook London

00:00:09,910 --> 00:00:14,980
my name is sameen jalal and i'm gonna be

00:00:13,150 --> 00:00:16,870
talking about hyper shell i'm a

00:00:14,980 --> 00:00:18,730
production engineer to start and my

00:00:16,870 --> 00:00:20,650
background is in is in cash but i

00:00:18,730 --> 00:00:23,770
recently knit to security so took on

00:00:20,650 --> 00:00:25,360
this tool so what is hyper shell hyper

00:00:23,770 --> 00:00:27,460
shell is a push based massively parallel

00:00:25,360 --> 00:00:31,000
command execution tool it lets you do

00:00:27,460 --> 00:00:32,169
things like HSH exact give it a list of

00:00:31,000 --> 00:00:34,480
targets and runs a command on it

00:00:32,169 --> 00:00:36,370
probably looks very very familiar to

00:00:34,480 --> 00:00:39,250
other tools but there's a reason we have

00:00:36,370 --> 00:00:40,840
a little bit different scale related but

00:00:39,250 --> 00:00:44,770
there's all we can also deploy a file to

00:00:40,840 --> 00:00:47,350
a bunch of machines given a location as

00:00:44,770 --> 00:00:49,480
well so what could be used for it can be

00:00:47,350 --> 00:00:52,270
used for ad-hoc queries deployment

00:00:49,480 --> 00:00:54,670
configuration updates collecting stats

00:00:52,270 --> 00:00:58,090
emergency situations and a lot of other

00:00:54,670 --> 00:00:59,590
things as well hello what should it be

00:00:58,090 --> 00:01:01,450
used for literally none of those things

00:00:59,590 --> 00:01:02,950
there's probably a better tool that that

00:01:01,450 --> 00:01:05,590
helps you do these things for you

00:01:02,950 --> 00:01:08,969
you know UNIX philosophy keep keep it

00:01:05,590 --> 00:01:11,799
simple do one thing and do it well so

00:01:08,969 --> 00:01:13,689
why was it built well it's very easy to

00:01:11,799 --> 00:01:15,490
work with this tool it gives you a

00:01:13,689 --> 00:01:18,579
really big hammer to really do whatever

00:01:15,490 --> 00:01:20,560
you want it's easy there's you know it

00:01:18,579 --> 00:01:21,759
works and you also have persistent

00:01:20,560 --> 00:01:24,399
results which is much better than

00:01:21,759 --> 00:01:27,130
running SSH every single time so how

00:01:24,399 --> 00:01:28,840
does it work well at the base case you

00:01:27,130 --> 00:01:30,609
have a target and you have an agent and

00:01:28,840 --> 00:01:35,020
the agent will SSH into the target and

00:01:30,609 --> 00:01:36,579
run a command and you also want to save

00:01:35,020 --> 00:01:38,319
the data so the agent after running the

00:01:36,579 --> 00:01:40,539
command will write to the database with

00:01:38,319 --> 00:01:42,849
what the output and with any metadata

00:01:40,539 --> 00:01:44,619
that you have but imagine you have

00:01:42,849 --> 00:01:47,469
multiple groups of hosts so you have

00:01:44,619 --> 00:01:48,789
multiple agents and multiple targets one

00:01:47,469 --> 00:01:50,439
agent could have multiple machines

00:01:48,789 --> 00:01:52,060
that's logging into and saving the

00:01:50,439 --> 00:01:56,249
output to and then writing it all to a

00:01:52,060 --> 00:01:59,319
local database but this is a pretty big

00:01:56,249 --> 00:02:00,969
you know it's it's a mindfuck in terms

00:01:59,319 --> 00:02:03,189
of coordination so you need one

00:02:00,969 --> 00:02:04,689
coordinator to to manage all the agents

00:02:03,189 --> 00:02:06,789
and then also pull from the database

00:02:04,689 --> 00:02:09,070
after after all the outputs saved to the

00:02:06,789 --> 00:02:10,300
database so you don't actually have too

00:02:09,070 --> 00:02:11,740
much network communication between the

00:02:10,300 --> 00:02:13,560
servers and the agents only the first

00:02:11,740 --> 00:02:15,000
time to transfer over any kind

00:02:13,560 --> 00:02:16,830
authentication or metadata that you need

00:02:15,000 --> 00:02:18,720
so the server in this case is going to

00:02:16,830 --> 00:02:21,900
be it's gonna be responsible for

00:02:18,720 --> 00:02:25,200
managing parallelism timeouts retries if

00:02:21,900 --> 00:02:28,709
the agents fail and just other general

00:02:25,200 --> 00:02:30,050
things so this is what I classifies a

00:02:28,709 --> 00:02:31,709
job it's a pretty complicated

00:02:30,050 --> 00:02:33,480
interaction between the server and

00:02:31,709 --> 00:02:35,220
multiple groups of agents so you can

00:02:33,480 --> 00:02:36,450
have maybe three different clusters that

00:02:35,220 --> 00:02:37,980
the server is managing at the same time

00:02:36,450 --> 00:02:42,300
and each of the clusters are gonna be

00:02:37,980 --> 00:02:45,360
writing to its local database so this is

00:02:42,300 --> 00:02:46,950
a job and how do you invoke a job well

00:02:45,360 --> 00:02:49,440
it could be either a human or it could

00:02:46,950 --> 00:02:51,090
be a script that invokes the job and it

00:02:49,440 --> 00:02:53,459
would be it'll basically run a thrift

00:02:51,090 --> 00:02:56,370
call to explain thrift it's just an RPC

00:02:53,459 --> 00:02:57,690
call between a client to a server in

00:02:56,370 --> 00:02:59,610
this case and you give it all the

00:02:57,690 --> 00:03:01,170
metadata including what your timeouts

00:02:59,610 --> 00:03:05,630
are how many you want running at a time

00:03:01,170 --> 00:03:08,190
and the command you want to run as well

00:03:05,630 --> 00:03:10,230
so this is what the ecosystem of hyper

00:03:08,190 --> 00:03:11,880
shell kind of looks like it is let's say

00:03:10,230 --> 00:03:14,310
you have two different jobs that an

00:03:11,880 --> 00:03:16,080
origin will invoke the first job will

00:03:14,310 --> 00:03:18,750
manage let's say clusters 1 through 9

00:03:16,080 --> 00:03:21,060
and each each pol 9 different databases

00:03:18,750 --> 00:03:24,120
to look for the output and the progress

00:03:21,060 --> 00:03:26,070
of each job job two could be could be

00:03:24,120 --> 00:03:27,810
managing only cluster 7 through 9 in

00:03:26,070 --> 00:03:32,220
this case managing 3 different databases

00:03:27,810 --> 00:03:33,660
and it all ran runs very well so for

00:03:32,220 --> 00:03:35,340
thousands of machines you can only have

00:03:33,660 --> 00:03:40,500
a few min of you servers and a few

00:03:35,340 --> 00:03:41,760
agents running to save the output now

00:03:40,500 --> 00:03:44,130
what are some features you can have

00:03:41,760 --> 00:03:45,389
built on top of this I'm not promising

00:03:44,130 --> 00:03:47,040
all these things are built but they're

00:03:45,389 --> 00:03:48,690
all in the pipeline at least so you

00:03:47,040 --> 00:03:50,430
could have something like stages jobs

00:03:48,690 --> 00:03:52,109
with confirmations in between so let's

00:03:50,430 --> 00:03:53,100
say you run your job in a hundred

00:03:52,109 --> 00:03:55,079
percent were dropped 10 percent at a

00:03:53,100 --> 00:03:56,880
time and after every 10 percent you you

00:03:55,079 --> 00:03:58,170
ask for confirmation feedback for me

00:03:56,880 --> 00:04:00,120
their script or a human saying can I

00:03:58,170 --> 00:04:01,170
continue to the next next batch and that

00:04:00,120 --> 00:04:03,810
way you can make sure you don't destroy

00:04:01,170 --> 00:04:05,010
the entire 100% of the fleet when you

00:04:03,810 --> 00:04:07,049
run a command that's potentially

00:04:05,010 --> 00:04:08,579
dangerous you could have explicit read

00:04:07,049 --> 00:04:10,850
read-only commands this is to make sure

00:04:08,579 --> 00:04:13,980
your you know have too many permissions

00:04:10,850 --> 00:04:16,109
you can make your job very visible so if

00:04:13,980 --> 00:04:17,609
my if jobs running on my servers I would

00:04:16,109 --> 00:04:19,650
like to know that someone's run running

00:04:17,609 --> 00:04:22,530
this job of my servers some sort of

00:04:19,650 --> 00:04:23,909
security logging and approval from

00:04:22,530 --> 00:04:25,440
service owners so let's say I'm on the

00:04:23,909 --> 00:04:27,180
cache team and I want to access Hadoop

00:04:25,440 --> 00:04:27,480
then I probably don't need access on a

00:04:27,180 --> 00:04:29,670
daily

00:04:27,480 --> 00:04:31,770
basses I probably only into access just

00:04:29,670 --> 00:04:33,540
for that job soon vacation so I'd ask

00:04:31,770 --> 00:04:35,460
the service owners if I have if I can go

00:04:33,540 --> 00:04:36,600
go through and there's an escalation

00:04:35,460 --> 00:04:39,740
process as well they can go through

00:04:36,600 --> 00:04:42,480
forever shell and tiered authentication

00:04:39,740 --> 00:04:44,850
by theater education I mean something

00:04:42,480 --> 00:04:48,270
like the client will the client you

00:04:44,850 --> 00:04:49,800
human say I want to invoke this job

00:04:48,270 --> 00:04:52,290
these targets are gonna run this command

00:04:49,800 --> 00:04:54,090
and on the last step of the hop so the

00:04:52,290 --> 00:04:55,800
clients servers agents then target the

00:04:54,090 --> 00:04:57,270
agents will also authenticate saying I

00:04:55,800 --> 00:04:59,400
was the agent that was that was given

00:04:57,270 --> 00:05:01,650
access to this machine so you don't have

00:04:59,400 --> 00:05:03,780
any any way of tampering with with the

00:05:01,650 --> 00:05:08,520
actual message across and you don't

00:05:03,780 --> 00:05:10,260
tamper with the command and great power

00:05:08,520 --> 00:05:12,120
comes great responsibility as from the

00:05:10,260 --> 00:05:14,400
Great's but Uncle Ben with spider-man

00:05:12,120 --> 00:05:18,720
and as a facebook engineer say hyper

00:05:14,400 --> 00:05:21,090
she'll leave some resources this is what

00:05:18,720 --> 00:05:26,550
this is the read up on thrift and

00:05:21,090 --> 00:05:29,160
services running on thrift and it is not

00:05:26,550 --> 00:05:30,600
open source yet if you have any

00:05:29,160 --> 00:05:33,350
questions I'll be at the booth you can

00:05:30,600 --> 00:05:33,350

YouTube URL: https://www.youtube.com/watch?v=Nd7ewxRI4Qw


