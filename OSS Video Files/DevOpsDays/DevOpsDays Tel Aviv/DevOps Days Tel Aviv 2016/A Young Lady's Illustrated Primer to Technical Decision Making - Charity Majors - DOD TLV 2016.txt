Title: A Young Lady's Illustrated Primer to Technical Decision Making - Charity Majors - DOD TLV 2016
Publication date: 2017-01-08
Playlist: DevOps Days Tel Aviv 2016
Description: 
	
Captions: 
	00:00:02,710 --> 00:00:12,080
[Music]

00:00:07,300 --> 00:00:14,300
the title of my talk is a the is taken

00:00:12,080 --> 00:00:16,939
from what did I call my talk it's like a

00:00:14,300 --> 00:00:18,529
primer to a young ladies Illustrated

00:00:16,939 --> 00:00:21,949
primer to architecture and technical

00:00:18,529 --> 00:00:23,509
decision making and it comes from how

00:00:21,949 --> 00:00:29,449
many of you read the neal stephenson

00:00:23,509 --> 00:00:32,840
book i'm disappointed with you guys you

00:00:29,449 --> 00:00:36,320
I know yes all right the diamond age

00:00:32,840 --> 00:00:39,830
yeah the Stephenson book it's so good

00:00:36,320 --> 00:00:43,340
it's a cyberpunk story sorry this bike

00:00:39,830 --> 00:00:46,250
is a little it's about a future I'm loud

00:00:43,340 --> 00:00:48,530
enough anyway it's about a future where

00:00:46,250 --> 00:00:51,890
the world and our bodies are teeming

00:00:48,530 --> 00:00:54,980
with nanites and everything goes to hell

00:00:51,890 --> 00:00:59,110
so it's basically about buggy software

00:00:54,980 --> 00:01:02,620
oh there it is it's about buggy software

00:00:59,110 --> 00:01:04,789
when it's literally eating the world's

00:01:02,620 --> 00:01:09,109
every CVC will tell you that this is

00:01:04,789 --> 00:01:12,770
happening um and I will tell you it will

00:01:09,109 --> 00:01:15,679
soon be eating your brains so in

00:01:12,770 --> 00:01:17,840
preparation for that day um I wanted to

00:01:15,679 --> 00:01:19,640
talk about technical judgments also

00:01:17,840 --> 00:01:24,069
known as making good choices with

00:01:19,640 --> 00:01:27,649
software uh and some tips for survival

00:01:24,069 --> 00:01:29,749
yes making better choices it's just kind

00:01:27,649 --> 00:01:32,479
of like the inevitable next step right

00:01:29,749 --> 00:01:35,659
um technical judgment is a thing that

00:01:32,479 --> 00:01:36,979
each of us does every day squeaky like

00:01:35,659 --> 00:01:38,719
wherever you are in the org chart or

00:01:36,979 --> 00:01:41,869
wherever you are in the software life

00:01:38,719 --> 00:01:44,329
cycle um we're all constantly threading

00:01:41,869 --> 00:01:47,359
this needle between innovation and

00:01:44,329 --> 00:01:49,280
stability between making things nimble

00:01:47,359 --> 00:01:52,369
for development and stable for our

00:01:49,280 --> 00:01:54,560
customers and our users and making the

00:01:52,369 --> 00:01:56,209
choices with software is both really

00:01:54,560 --> 00:01:58,520
important and becoming more important

00:01:56,209 --> 00:02:01,459
every day it's also getting harder every

00:01:58,520 --> 00:02:05,240
day like five years ago you had a lot

00:02:01,459 --> 00:02:07,780
fewer choices to prove it I did some

00:02:05,240 --> 00:02:12,830
science who are you

00:02:07,780 --> 00:02:14,510
produce extremely sciency graph and if

00:02:12,830 --> 00:02:16,580
you just extrapolate that out a little

00:02:14,510 --> 00:02:19,819
you can see that it will be literally

00:02:16,580 --> 00:02:21,170
impossible in just a couple years and

00:02:19,819 --> 00:02:27,050
you know that it's true because I have a

00:02:21,170 --> 00:02:28,730
graph so how do we get here well 15

00:02:27,050 --> 00:02:31,160
years ago we had the lamp stuff sack

00:02:28,730 --> 00:02:35,450
where's old enough to remember running

00:02:31,160 --> 00:02:37,220
that production yeah good stuff where

00:02:35,450 --> 00:02:40,330
architectural judgment meant choosing

00:02:37,220 --> 00:02:43,459
wisely between my sequel and post grads

00:02:40,330 --> 00:02:47,690
and you had three choices for the P

00:02:43,459 --> 00:02:52,340
right you had PHP Python and Perl roles

00:02:47,690 --> 00:02:57,380
legette he remembers cgi-bin whoa yeah

00:02:52,340 --> 00:02:58,790
good times not really and then about ten

00:02:57,380 --> 00:03:01,280
years ago we're like well this kind of

00:02:58,790 --> 00:03:03,560
sucks this is not maintainable and we

00:03:01,280 --> 00:03:06,170
started unpacking hermana lyst right and

00:03:03,560 --> 00:03:10,310
to loosely coupled services connected by

00:03:06,170 --> 00:03:13,579
arrest api's and i want to stress at the

00:03:10,310 --> 00:03:16,549
time this was confusing and hard right

00:03:13,579 --> 00:03:17,750
it seems really simple now but we didn't

00:03:16,549 --> 00:03:18,920
know that that was the future there were

00:03:17,750 --> 00:03:21,500
other development patterns that were

00:03:18,920 --> 00:03:22,970
competing for it you know I remember

00:03:21,500 --> 00:03:26,360
when we used to all had maintenance

00:03:22,970 --> 00:03:27,890
mythos that was the best practice doing

00:03:26,360 --> 00:03:29,090
a migration at midnight we all thought

00:03:27,890 --> 00:03:33,709
that was a great idea because you had

00:03:29,090 --> 00:03:34,880
fewer users it seems very basic now but

00:03:33,709 --> 00:03:36,709
at the time it was really challenging

00:03:34,880 --> 00:03:37,880
intro as it was really trout challenging

00:03:36,709 --> 00:03:40,579
transition to a new way of thinking

00:03:37,880 --> 00:03:42,470
about infrastructure and software but we

00:03:40,579 --> 00:03:45,549
did it to increase resiliency because we

00:03:42,470 --> 00:03:45,549
could see that dude was on the horizon

00:03:45,579 --> 00:03:49,970
we got through it got used to it config

00:03:48,260 --> 00:03:51,170
management virtualization he was

00:03:49,970 --> 00:03:54,200
delivery all these things went from

00:03:51,170 --> 00:03:56,030
cutting edge table stakes and the last

00:03:54,200 --> 00:03:58,780
time that I was spinning up an info from

00:03:56,030 --> 00:04:01,519
scratch was probably a parson like

00:03:58,780 --> 00:04:02,360
2011-2012 and there was a pretty it felt

00:04:01,519 --> 00:04:04,040
like there was a pretty reasonable

00:04:02,360 --> 00:04:05,600
standard set of choices and best

00:04:04,040 --> 00:04:07,040
practices that I should make based on

00:04:05,600 --> 00:04:08,989
the software in language that we were

00:04:07,040 --> 00:04:12,530
using and over the last couple years

00:04:08,989 --> 00:04:16,600
right founded my company last January

00:04:12,530 --> 00:04:16,600
and I went whoa

00:04:16,630 --> 00:04:25,940
like I think I'm pretty good at this

00:04:19,850 --> 00:04:30,590
stuff and paralyzed um where do you even

00:04:25,940 --> 00:04:36,560
start so and this talk came out of that

00:04:30,590 --> 00:04:38,150
bat just like sensitive and weirder to

00:04:36,560 --> 00:04:40,370
start out of this chaos like what

00:04:38,150 --> 00:04:43,070
patterns should we really be paying

00:04:40,370 --> 00:04:46,610
attention to and I do that there are

00:04:43,070 --> 00:04:48,830
some pretty strong themes right polyglot

00:04:46,610 --> 00:04:50,690
storage polyglot persistence is now

00:04:48,830 --> 00:04:53,270
something basically everyone does you

00:04:50,690 --> 00:04:55,880
have to composable infrastructure this

00:04:53,270 --> 00:05:00,440
much more of a reality containers are

00:04:55,880 --> 00:05:02,690
growing up condos we're gluing together

00:05:00,440 --> 00:05:05,210
more third party platforms than ever

00:05:02,690 --> 00:05:06,650
before and a lot of people haven't

00:05:05,210 --> 00:05:08,510
really started grapple with the

00:05:06,650 --> 00:05:11,750
operational implications of that it's

00:05:08,510 --> 00:05:14,030
not you're giving it to someone else and

00:05:11,750 --> 00:05:16,520
you can stop thinking about it it's

00:05:14,030 --> 00:05:19,760
thinking about failure and turn away you

00:05:16,520 --> 00:05:22,310
are still responsible for the uptime of

00:05:19,760 --> 00:05:25,790
your service even if it's powered by

00:05:22,310 --> 00:05:27,560
other services there are fewer in-house

00:05:25,790 --> 00:05:29,540
engineering cycles and ever before

00:05:27,560 --> 00:05:32,419
engineering has always been scarce it's

00:05:29,540 --> 00:05:34,550
only getting scarce here so we're

00:05:32,419 --> 00:05:36,650
needing we're being forced to get much

00:05:34,550 --> 00:05:39,919
better at identifying the critical path

00:05:36,650 --> 00:05:42,440
and outsourcing the rest to experts and

00:05:39,919 --> 00:05:44,870
while all of these trends have in common

00:05:42,440 --> 00:05:46,550
is that they increase complexity while

00:05:44,870 --> 00:05:48,590
simultaneously trying to tame it it's

00:05:46,550 --> 00:05:53,750
like the classic XKCD thing you know I

00:05:48,590 --> 00:05:55,880
have five libraries right a 6-1 to like

00:05:53,750 --> 00:05:59,900
get rid of the other five did it doesn't

00:05:55,880 --> 00:06:01,910
it just adds a six month now I think

00:05:59,900 --> 00:06:05,150
this is actually a really exciting time

00:06:01,910 --> 00:06:07,520
to be in tech uh especially because the

00:06:05,150 --> 00:06:09,620
open source world and the services world

00:06:07,520 --> 00:06:11,330
is really thing as access to the kind of

00:06:09,620 --> 00:06:15,290
tools at Google and Facebook etc I've

00:06:11,330 --> 00:06:17,720
had for four years and you know we might

00:06:15,290 --> 00:06:21,230
think Oh more choices are right and it

00:06:17,720 --> 00:06:24,910
will be like there's so much creativity

00:06:21,230 --> 00:06:26,840
in this explosion there's so much energy

00:06:24,910 --> 00:06:27,550
eventually this is going to be mature

00:06:26,840 --> 00:06:32,590
it's

00:06:27,550 --> 00:06:35,290
to be just as boring as a REST API but

00:06:32,590 --> 00:06:39,280
in the meantime it's actually really

00:06:35,290 --> 00:06:43,690
really really hard on humans we're

00:06:39,280 --> 00:06:46,050
trying to navigate this space that was

00:06:43,690 --> 00:06:51,240
well timed that's pretty cool actually

00:06:46,050 --> 00:06:58,360
software sucks I'll show you what

00:06:51,240 --> 00:07:00,340
hardware sucks word I like you okay I

00:06:58,360 --> 00:07:07,750
unplugged it and plugged it back in what

00:07:00,340 --> 00:07:10,510
do I try next it can be cognitively

00:07:07,750 --> 00:07:13,510
overwhelming right there aren't a lot of

00:07:10,510 --> 00:07:15,700
best practices a lot of the new

00:07:13,510 --> 00:07:19,180
solutions are not battle-hardened your

00:07:15,700 --> 00:07:21,400
production ready even though the sales

00:07:19,180 --> 00:07:26,650
people and CEOs and CTS will tell you

00:07:21,400 --> 00:07:29,430
that they are high I like no no I'm not

00:07:26,650 --> 00:07:31,990
throwing shade because I'm a vendor to

00:07:29,430 --> 00:07:36,690
my is awesome and you should all

00:07:31,990 --> 00:07:38,860
use it and it will not go down yes um

00:07:36,690 --> 00:07:40,950
you know there are incredibly few

00:07:38,860 --> 00:07:43,180
reliable narrators out there um

00:07:40,950 --> 00:07:48,930
everybody's trying to sell you on

00:07:43,180 --> 00:07:55,390
bleeding edge stuff that's cool Dewey

00:07:48,930 --> 00:07:59,350
you're gonna switch okay all right don't

00:07:55,390 --> 00:08:02,140
touch it nobody touch it oh let me fix

00:07:59,350 --> 00:08:05,910
the monitor though no no it's super

00:08:02,140 --> 00:08:05,910
quick I promise um

00:08:07,940 --> 00:08:15,570
god I don't know how to desktops are

00:08:10,979 --> 00:08:18,000
hard did honey will you help me with my

00:08:15,570 --> 00:08:20,430
I'm kidding I'm kidding if I got it

00:08:18,000 --> 00:08:26,460
uh-huh hi I bring my own personal

00:08:20,430 --> 00:08:30,600
personal a vtec everywhere I go ah right

00:08:26,460 --> 00:08:36,089
yeah all right does this mean that you

00:08:30,600 --> 00:08:37,409
shouldn't use any of it no this means we

00:08:36,089 --> 00:08:41,539
need to think really carefully about our

00:08:37,409 --> 00:08:46,470
tolerance for risk and where to spend it

00:08:41,539 --> 00:08:49,770
and I have a few tips for how to think

00:08:46,470 --> 00:08:51,390
about new technology option that can be

00:08:49,770 --> 00:08:54,060
useful and most of it does boil down to

00:08:51,390 --> 00:08:56,550
a risk management and I think that these

00:08:54,060 --> 00:08:58,470
are the kinds of tips that your good

00:08:56,550 --> 00:09:00,510
senior engineer so mostly internalize

00:08:58,470 --> 00:09:02,880
and a lot of times it just manifests is

00:09:00,510 --> 00:09:05,010
intuition you know we've all worked with

00:09:02,880 --> 00:09:10,200
people who if they come into the room

00:09:05,010 --> 00:09:11,670
like we listen to them right because

00:09:10,200 --> 00:09:13,970
they're usually right even if they

00:09:11,670 --> 00:09:16,440
themselves can't completely explain why

00:09:13,970 --> 00:09:19,170
and and all I'm really trying to do here

00:09:16,440 --> 00:09:20,820
is unpack that a little bit and try to

00:09:19,170 --> 00:09:23,940
figure out what kinds of experiences are

00:09:20,820 --> 00:09:26,310
feeding their intuition and we should

00:09:23,940 --> 00:09:28,050
start with the prime directive what

00:09:26,310 --> 00:09:31,320
applies to every single one of us who

00:09:28,050 --> 00:09:35,070
works in tech and as Captain Picard

00:09:31,320 --> 00:09:38,339
would say your technology exists to

00:09:35,070 --> 00:09:42,060
serve your mission it is never ever ever

00:09:38,339 --> 00:09:44,520
the other way around uh what is your

00:09:42,060 --> 00:09:46,440
mission I don't know um maybe it's

00:09:44,520 --> 00:09:49,200
getting people health care you know

00:09:46,440 --> 00:09:53,339
maybe it's some you know making the

00:09:49,200 --> 00:09:55,110
world more open and connected right or

00:09:53,339 --> 00:09:57,360
empowering developers to build better

00:09:55,110 --> 00:09:58,980
mobile apps eat building software is

00:09:57,360 --> 00:10:00,870
never your mission and even if you know

00:09:58,980 --> 00:10:02,670
you even if your business is literally

00:10:00,870 --> 00:10:06,029
writing fig management software or

00:10:02,670 --> 00:10:07,410
containers or databases it's that's

00:10:06,029 --> 00:10:09,150
still not your mission your mission is

00:10:07,410 --> 00:10:11,400
just one layer obstructed right it's

00:10:09,150 --> 00:10:14,310
helping your customers build betters you

00:10:11,400 --> 00:10:16,079
know that our missions in fact I think

00:10:14,310 --> 00:10:18,950
it's really much more helpful to think

00:10:16,079 --> 00:10:22,170
it software is the enemy

00:10:18,950 --> 00:10:23,850
honestly right um every piece of

00:10:22,170 --> 00:10:26,060
software every line of code that you add

00:10:23,850 --> 00:10:29,279
to your systems out fertility and

00:10:26,060 --> 00:10:31,230
potential points of failure and every

00:10:29,279 --> 00:10:33,000
piece of software right yourself is

00:10:31,230 --> 00:10:34,950
something other people will think

00:10:33,000 --> 00:10:38,100
debugging and spending their precious

00:10:34,950 --> 00:10:40,200
live life years on until it goes away

00:10:38,100 --> 00:10:43,320
which is why read discs are the best ifs

00:10:40,200 --> 00:10:46,529
and that is the best case outcome write

00:10:43,320 --> 00:10:48,839
code is liability the best code is no

00:10:46,529 --> 00:10:50,130
code I I think Peter and Hardenberg is

00:10:48,839 --> 00:10:52,170
the first one who told me these are like

00:10:50,130 --> 00:10:54,140
pvhs three principles for software

00:10:52,170 --> 00:10:56,640
development the best code is neo code

00:10:54,140 --> 00:10:58,500
the second best code is code that

00:10:56,640 --> 00:11:00,029
someone else writes and maintains that

00:10:58,500 --> 00:11:02,400
you get to use you can read the source

00:11:00,029 --> 00:11:08,570
would you need to harden by other people

00:11:02,400 --> 00:11:10,620
and the the worst code is anything else

00:11:08,570 --> 00:11:13,320
it's easy to lose sight of this because

00:11:10,620 --> 00:11:15,060
we all love text so much right but as a

00:11:13,320 --> 00:11:17,250
technical leader or as a technical

00:11:15,060 --> 00:11:20,130
senior engineer it's your responsibility

00:11:17,250 --> 00:11:23,190
to make sure that decisions are made

00:11:20,130 --> 00:11:26,959
that serve your mission and generally

00:11:23,190 --> 00:11:30,120
that means right as little software as

00:11:26,959 --> 00:11:32,970
possible to achieve your mission which

00:11:30,120 --> 00:11:35,640
leads straight into the first principle

00:11:32,970 --> 00:11:37,500
since we're counting from zero which is

00:11:35,640 --> 00:11:39,589
that you should read solutions and

00:11:37,500 --> 00:11:41,700
components whenever possible and this

00:11:39,589 --> 00:11:43,470
especially applies to storage systems

00:11:41,700 --> 00:11:45,900
there's this great blog post written by

00:11:43,470 --> 00:11:49,010
Jesse Tron I have a link to it at my

00:11:45,900 --> 00:11:53,279
last slide where she she has she has a

00:11:49,010 --> 00:11:55,709
spectrum of risk and she talks about

00:11:53,279 --> 00:11:57,690
where where where you should do your

00:11:55,709 --> 00:12:00,270
experimentation and where you should be

00:11:57,690 --> 00:12:02,400
very conservative and storage systems

00:12:00,270 --> 00:12:05,070
look the closer you get to Lane bits

00:12:02,400 --> 00:12:08,040
down on disk the more conservative you

00:12:05,070 --> 00:12:11,279
should be the closer you get to the data

00:12:08,040 --> 00:12:12,660
layer the more price the tax you pay for

00:12:11,279 --> 00:12:14,490
every additional component that you add

00:12:12,660 --> 00:12:15,930
because you have to monitor it if to

00:12:14,490 --> 00:12:18,270
understand it to be on call for it you

00:12:15,930 --> 00:12:22,540
have to you know it's really expensive

00:12:18,270 --> 00:12:25,430
to support storage systems um

00:12:22,540 --> 00:12:28,190
and another way of kind of putting the

00:12:25,430 --> 00:12:29,240
same way would be as dan mckinley says

00:12:28,190 --> 00:12:31,340
he's a two of my favorite people in

00:12:29,240 --> 00:12:35,529
Laurel by the way I have a link to this

00:12:31,340 --> 00:12:38,779
too are you affiliated with the the the

00:12:35,529 --> 00:12:40,880
innovation dogan's bug post oh my god

00:12:38,779 --> 00:12:45,770
you're gonna love this so much he says

00:12:40,880 --> 00:12:48,350
optimized globally not locally am i

00:12:45,770 --> 00:12:50,839
working yeah okay if you optimize

00:12:48,350 --> 00:12:53,000
locally for every single problem if you

00:12:50,839 --> 00:12:56,290
pick the perfect language and storage

00:12:53,000 --> 00:12:58,540
system for every every little problem um

00:12:56,290 --> 00:13:04,610
you will end up with an incomprehensible

00:12:58,540 --> 00:13:05,839
nightmare of a system oh you know I feel

00:13:04,610 --> 00:13:07,940
like every other word that I say his

00:13:05,839 --> 00:13:10,670
context but context matters you know

00:13:07,940 --> 00:13:14,060
when you're a baby startup local chaos

00:13:10,670 --> 00:13:17,060
is fine you should be optimizing for

00:13:14,060 --> 00:13:20,180
experimentation and rapid iteration

00:13:17,060 --> 00:13:25,550
because most startups fail and it's

00:13:20,180 --> 00:13:27,650
usually not because they too fast meinl

00:13:25,550 --> 00:13:29,330
to I'm sure I mean this is why

00:13:27,650 --> 00:13:31,010
pessimists this is my obstacle rarely

00:13:29,330 --> 00:13:32,540
start companies it's like we can see all

00:13:31,010 --> 00:13:34,339
the reasons that it's going to fail you

00:13:32,540 --> 00:13:39,260
know it's hard to imagine a

00:13:34,339 --> 00:13:41,540
billion-dollar company you um but

00:13:39,260 --> 00:13:42,589
when your time horizon is longer you

00:13:41,540 --> 00:13:46,550
need to shift your focus and

00:13:42,589 --> 00:13:50,210
maintainability which means you must

00:13:46,550 --> 00:13:52,580
have some process for gating for adding

00:13:50,210 --> 00:13:55,490
new major component super duck like a

00:13:52,580 --> 00:13:58,460
new language or a new database it

00:13:55,490 --> 00:14:02,870
shouldn't be impossible or you've

00:13:58,460 --> 00:14:05,870
achieved stasis but it should be enough

00:14:02,870 --> 00:14:08,240
friction to make it intentional at the

00:14:05,870 --> 00:14:11,300
very least it should always cause people

00:14:08,240 --> 00:14:12,890
to stop and think and ask themselves can

00:14:11,300 --> 00:14:16,160
I possibly solve this without

00:14:12,890 --> 00:14:18,830
introducing a new component that's the

00:14:16,160 --> 00:14:21,500
whole point of friction also you need to

00:14:18,830 --> 00:14:24,050
weigh the perceived benefits of the new

00:14:21,500 --> 00:14:26,120
technology against the relative gain so

00:14:24,050 --> 00:14:29,930
like I'm sorry if you're running ubuntu

00:14:26,120 --> 00:14:34,120
and someone wants to add red hat what is

00:14:29,930 --> 00:14:34,120
the answer you

00:14:34,600 --> 00:14:40,240
like I can I can almost not even imagine

00:14:38,319 --> 00:14:42,279
a reason that you should add another

00:14:40,240 --> 00:14:46,649
operating system that is almost exactly

00:14:42,279 --> 00:14:49,509
like the old operating system uh I or

00:14:46,649 --> 00:14:51,399
post grads in my sequel there are

00:14:49,509 --> 00:14:56,620
reasons but you really have to think

00:14:51,399 --> 00:14:58,930
hard to come up with one on the other

00:14:56,620 --> 00:15:02,110
hand if you have large concurrency

00:14:58,930 --> 00:15:05,529
issues and your written in Ruby that

00:15:02,110 --> 00:15:08,139
change is inevitable it's just a

00:15:05,529 --> 00:15:10,750
question of when you know you may need

00:15:08,139 --> 00:15:13,420
to rewrite it and go or in you know

00:15:10,750 --> 00:15:17,319
erling or something rewriting something

00:15:13,420 --> 00:15:18,759
from Ruby to python again you have to

00:15:17,319 --> 00:15:22,000
think pretty hard to come up with a use

00:15:18,759 --> 00:15:24,209
case for that it is not any time you

00:15:22,000 --> 00:15:31,000
hear someone say wouldn't it be cool if

00:15:24,209 --> 00:15:33,009
the answer is usually no but it's also

00:15:31,000 --> 00:15:34,899
important not to micromanage outside the

00:15:33,009 --> 00:15:37,209
critical path you do want new ideas and

00:15:34,899 --> 00:15:40,029
new thoughts and you like you know

00:15:37,209 --> 00:15:41,560
creativity you need to give the people

00:15:40,029 --> 00:15:44,170
who really feed on that you know you

00:15:41,560 --> 00:15:45,579
need to feed their creative side you

00:15:44,170 --> 00:15:46,540
need to value that side of what they

00:15:45,579 --> 00:15:48,490
bring to the orc too because that's

00:15:46,540 --> 00:15:49,990
where your new ID from people like me

00:15:48,490 --> 00:15:52,990
put a stop to them and you need to

00:15:49,990 --> 00:15:55,329
balance it you know um which is why and

00:15:52,990 --> 00:15:57,370
Jesse trans post she talks about you

00:15:55,329 --> 00:15:59,980
know developer tools all right the

00:15:57,370 --> 00:16:02,589
opposite end of the spectrum uh what's

00:15:59,980 --> 00:16:04,329
the pit you know if somebody like

00:16:02,589 --> 00:16:06,850
innovates too hard in the developer

00:16:04,329 --> 00:16:10,660
tools side and you know it's usually

00:16:06,850 --> 00:16:12,069
okay um at the very least it's usually

00:16:10,660 --> 00:16:14,019
not taking production done with it and

00:16:12,069 --> 00:16:15,459
if it is you should think kind of hard

00:16:14,019 --> 00:16:18,910
about what your developer tools side

00:16:15,459 --> 00:16:22,389
looks like if you have to add new

00:16:18,910 --> 00:16:24,759
components start here choose boring

00:16:22,389 --> 00:16:27,250
technology this is also in that damn

00:16:24,759 --> 00:16:30,550
kinloch blog posts oh good and the

00:16:27,250 --> 00:16:33,699
reason is new software is out all right

00:16:30,550 --> 00:16:37,329
new software software is always going to

00:16:33,699 --> 00:16:40,449
break in ways you did not expect it's

00:16:37,329 --> 00:16:43,899
like there's gremlins that live in it

00:16:40,449 --> 00:16:45,160
your old software had gremlins 2 but

00:16:43,899 --> 00:16:52,059
you've been living with it for a while

00:16:45,160 --> 00:16:54,009
you know where they live what so he said

00:16:52,059 --> 00:16:58,389
something funny I didn't catch it damn

00:16:54,009 --> 00:16:59,980
it huh-uh borin doesn't mean bad right

00:16:58,389 --> 00:17:02,589
we have this connotation with boring

00:16:59,980 --> 00:17:06,130
being bad I'll let me burn software runs

00:17:02,589 --> 00:17:11,130
the world right borings Java I

00:17:06,130 --> 00:17:16,419
hate Java but it runs the world cobol

00:17:11,130 --> 00:17:18,159
that's actually true uh-huh um boring

00:17:16,419 --> 00:17:22,029
means that its failure modes are well

00:17:18,159 --> 00:17:24,309
understood it means the ecosystem is

00:17:22,029 --> 00:17:27,039
rich in mature for a language this means

00:17:24,309 --> 00:17:29,440
rich library support for databases it

00:17:27,039 --> 00:17:32,500
means extensive tresses stress testing

00:17:29,440 --> 00:17:33,820
in production and a robust user base so

00:17:32,500 --> 00:17:37,409
you should use boring technology

00:17:33,820 --> 00:17:40,059
whenever you can but the corollary is

00:17:37,409 --> 00:17:42,639
that the earlier stage or startup or

00:17:40,059 --> 00:17:44,649
like inside the established company you

00:17:42,639 --> 00:17:47,970
know there are new teams new scores

00:17:44,649 --> 00:17:50,799
projects new you know rd all the time

00:17:47,970 --> 00:17:53,350
this is your competitive advantage right

00:17:50,799 --> 00:17:55,990
this is how you disrupt the status quo

00:17:53,350 --> 00:17:57,970
parce could not have been built on any

00:17:55,990 --> 00:18:00,100
existing database at the time other than

00:17:57,970 --> 00:18:07,690
MongoDB and we started when manga was

00:18:00,100 --> 00:18:09,279
1.8 we're that one walk one block we

00:18:07,690 --> 00:18:11,710
grew up with software and we could

00:18:09,279 --> 00:18:15,490
afford that risk right because nobody

00:18:11,710 --> 00:18:17,669
depended on parse a long as time rest in

00:18:15,490 --> 00:18:17,669
peace

00:18:17,750 --> 00:18:22,559
this is why this is how you disrupt the

00:18:20,909 --> 00:18:25,230
status quo by being more nimble by

00:18:22,559 --> 00:18:27,419
taking greater risks um by having fewer

00:18:25,230 --> 00:18:29,640
sunk costs by having nobody pay you for

00:18:27,419 --> 00:18:31,500
the old way of doing things you have

00:18:29,640 --> 00:18:33,240
fewer humans so you can get away with

00:18:31,500 --> 00:18:36,809
way more localized chaos and let's

00:18:33,240 --> 00:18:39,270
discipline more informal methods of you

00:18:36,809 --> 00:18:40,890
know interacting communicating you have

00:18:39,270 --> 00:18:43,710
fewer customers and they have way lower

00:18:40,890 --> 00:18:46,890
expectations of you low expectations are

00:18:43,710 --> 00:18:48,330
great use it when you can like no

00:18:46,890 --> 00:18:51,539
nobody's competitive advantages in

00:18:48,330 --> 00:18:54,750
rewriting cron right you're rewriting

00:18:51,539 --> 00:18:58,049
pran you're doing it wrong maybe unless

00:18:54,750 --> 00:19:01,950
your business is disrupting cron jenkins

00:18:58,049 --> 00:19:03,450
kind of did that huh whatever some good

00:19:01,950 --> 00:19:07,289
reasons for supporting new components

00:19:03,450 --> 00:19:10,260
it's critical to your mission duh if

00:19:07,289 --> 00:19:13,289
you're replacing or upgrading ok cool

00:19:10,260 --> 00:19:16,140
but commit to a time line and get rid of

00:19:13,289 --> 00:19:17,909
the old one there you have the worst of

00:19:16,140 --> 00:19:21,690
both worlds if you have to maintain the

00:19:17,909 --> 00:19:24,390
old one and the new one right um it's

00:19:21,690 --> 00:19:27,000
totally legit to give preference to

00:19:24,390 --> 00:19:30,210
something because your team understands

00:19:27,000 --> 00:19:32,340
it there will always be ribbons and

00:19:30,210 --> 00:19:37,049
software knowing where they live is a

00:19:32,340 --> 00:19:38,940
big advantage you should not choose a

00:19:37,049 --> 00:19:44,130
new component because hacker news likes

00:19:38,940 --> 00:19:45,720
it or doesn't like it or because the

00:19:44,130 --> 00:19:50,340
vendor benchmarks because all vendors

00:19:45,720 --> 00:19:55,049
lie sorry selectively tell the truth so

00:19:50,340 --> 00:19:58,370
that we look really pretty um and don't

00:19:55,049 --> 00:20:00,720
forget to ask how good is the community

00:19:58,370 --> 00:20:02,880
because quality communities make

00:20:00,720 --> 00:20:04,230
software much more likely to succeed and

00:20:02,880 --> 00:20:08,070
this is something that Chef did really

00:20:04,230 --> 00:20:09,390
well I used to be a puppet user at the

00:20:08,070 --> 00:20:12,830
time there was not a lot of difference

00:20:09,390 --> 00:20:16,039
and I was chef because they were so nice

00:20:12,830 --> 00:20:16,039
that's right

00:20:17,419 --> 00:20:23,190
and last bit almost all of this advice

00:20:20,460 --> 00:20:24,960
basically boils down to considering the

00:20:23,190 --> 00:20:27,149
operational impact and life cycle of

00:20:24,960 --> 00:20:31,080
your code and other technical decisions

00:20:27,149 --> 00:20:33,389
that you make because honestly like you

00:20:31,080 --> 00:20:35,460
you can round down to zero developing

00:20:33,389 --> 00:20:39,629
software cost zero compared to

00:20:35,460 --> 00:20:40,889
maintaining it over its life cycle the

00:20:39,629 --> 00:20:44,039
best engineers are the ones who really

00:20:40,889 --> 00:20:47,039
internalize this and do it instinctively

00:20:44,039 --> 00:20:49,669
I think outsource as many ops problems

00:20:47,039 --> 00:20:51,960
as you can make it not your problem

00:20:49,669 --> 00:20:53,789
anything that is not core to the success

00:20:51,960 --> 00:20:57,299
of your business try to avoid doing it

00:20:53,789 --> 00:20:59,399
yourself because the problems that are

00:20:57,299 --> 00:21:01,139
core to your business you're going to

00:20:59,399 --> 00:21:02,639
need to keep in house right you need to

00:21:01,139 --> 00:21:05,759
keep them closed so stay in your

00:21:02,639 --> 00:21:09,359
precious scarce engineering cycles and

00:21:05,759 --> 00:21:10,799
your life's blood for those and remember

00:21:09,359 --> 00:21:12,809
the culture can do a lot of heavy

00:21:10,799 --> 00:21:15,720
lifting for you here you know you can

00:21:12,809 --> 00:21:18,989
either make a lot of rules and like

00:21:15,720 --> 00:21:22,200
write all of the you know plugins forget

00:21:18,989 --> 00:21:24,749
to like try and or you know you can

00:21:22,200 --> 00:21:27,480
celebrate things you know you can make

00:21:24,749 --> 00:21:29,730
it part of your performance cycle you

00:21:27,480 --> 00:21:31,379
can make sure that you know operational

00:21:29,730 --> 00:21:33,989
excellence is something that ever we pay

00:21:31,379 --> 00:21:36,559
attention to as an organization if you

00:21:33,989 --> 00:21:39,509
celebrate the developers who remove code

00:21:36,559 --> 00:21:42,929
who deprecated things you know who

00:21:39,509 --> 00:21:44,509
simplify and refactor and reduce the

00:21:42,929 --> 00:21:46,499
duplication just as much as you

00:21:44,509 --> 00:21:49,109
celebrate the developers who build

00:21:46,499 --> 00:21:51,029
features and chip things you know Fred

00:21:49,109 --> 00:21:53,249
diffs are just as good as green discs

00:21:51,029 --> 00:21:54,960
sometimes better you'll get more of it

00:21:53,249 --> 00:21:58,049
it's harder to recognize it it's

00:21:54,960 --> 00:21:59,609
absolute Carter you have to ask the

00:21:58,049 --> 00:22:02,389
right questions to tease out this

00:21:59,609 --> 00:22:04,980
information but it's not impossible and

00:22:02,389 --> 00:22:08,070
I feel like I say this in every single

00:22:04,980 --> 00:22:09,570
talk I've ever given but be careful what

00:22:08,070 --> 00:22:11,009
you're crazy because the patterns that

00:22:09,570 --> 00:22:12,330
you call out and celebrate in your

00:22:11,009 --> 00:22:14,009
culture are the patterns that will get

00:22:12,330 --> 00:22:16,859
repeated right and if you praise the

00:22:14,009 --> 00:22:18,269
wrong things like if you only find

00:22:16,859 --> 00:22:20,399
yourself praising people when they're up

00:22:18,269 --> 00:22:23,100
overnight tending to something that was

00:22:20,399 --> 00:22:26,260
down people get the message this is what

00:22:23,100 --> 00:22:28,270
we value um

00:22:26,260 --> 00:22:31,720
if you're intentional about this and you

00:22:28,270 --> 00:22:34,390
only praise publicly when people fix

00:22:31,720 --> 00:22:37,330
things so that they didn't stay up all

00:22:34,390 --> 00:22:38,850
night you know like this is the treating

00:22:37,330 --> 00:22:42,270
you it's not tricky but it's just like

00:22:38,850 --> 00:22:44,350
you know you can thank people privately

00:22:42,270 --> 00:22:46,600
thanking privately is different than

00:22:44,350 --> 00:22:48,220
praising publicly and the things that

00:22:46,600 --> 00:22:50,890
you praise publicly are the things that

00:22:48,220 --> 00:22:54,430
people will keep doing and then you

00:22:50,890 --> 00:22:56,170
don't need sweetie rules will suck so

00:22:54,430 --> 00:23:00,510
this is like your textbook vision making

00:22:56,170 --> 00:23:02,560
manifesto serve submission REE is it

00:23:00,510 --> 00:23:04,510
create some friction for adding new

00:23:02,560 --> 00:23:05,890
things but appropriate to your level you

00:23:04,510 --> 00:23:08,860
don't want it to be impossible you don't

00:23:05,890 --> 00:23:11,530
want to like stomp on creativity choose

00:23:08,860 --> 00:23:14,640
bored tech when you can bend your wrist

00:23:11,530 --> 00:23:18,520
tokens on your key differentiators and

00:23:14,640 --> 00:23:20,200
the longer you survive but you go the

00:23:18,520 --> 00:23:21,940
more operational impact trumps

00:23:20,200 --> 00:23:23,950
everything people are like oh what's

00:23:21,940 --> 00:23:27,730
gonna have a Pew no one saw friend read

00:23:23,950 --> 00:23:29,680
don't like it nothing's happening to be

00:23:27,730 --> 00:23:33,100
a profession of operations engineering

00:23:29,680 --> 00:23:36,550
anytime soon but we've actually like

00:23:33,100 --> 00:23:38,200
change change is good most startups fail

00:23:36,550 --> 00:23:40,270
but mostly they fail for lack of

00:23:38,200 --> 00:23:41,800
traction a product market fit not

00:23:40,270 --> 00:23:46,350
because you chose the wrong programming

00:23:41,800 --> 00:23:48,910
language or the wrong editor christ sake

00:23:46,350 --> 00:23:51,220
but like think about it fifteen years

00:23:48,910 --> 00:23:54,040
ago somebody was given this exact same

00:23:51,220 --> 00:23:56,020
presentation in PowerPoint with a suit

00:23:54,040 --> 00:23:57,730
on but they were they were complaining

00:23:56,020 --> 00:24:00,850
about how they they used to just have

00:23:57,730 --> 00:24:06,760
see in the world was simple now I have

00:24:00,850 --> 00:24:11,980
to choose between seeds plus pearl Java

00:24:06,760 --> 00:24:13,780
Python kids these days you know really

00:24:11,980 --> 00:24:15,640
doesn't matter this is a constant battle

00:24:13,780 --> 00:24:16,780
and it always feels terrified always

00:24:15,640 --> 00:24:20,290
feels like we're on the precipice of

00:24:16,780 --> 00:24:24,040
disaster what we always are but it you

00:24:20,290 --> 00:24:26,410
know we catch up so I'm not saying these

00:24:24,040 --> 00:24:27,910
choices don't matter they do but whether

00:24:26,410 --> 00:24:32,320
it matter is not where we feel like they

00:24:27,910 --> 00:24:35,950
do they matter thank you about to our

00:24:32,320 --> 00:24:37,680
sites okay they matter in how not with

00:24:35,950 --> 00:24:41,700
you succeed or fail have you seen

00:24:37,680 --> 00:24:45,210
LinkedIn's ville sorry fire me after

00:24:41,700 --> 00:24:47,010
work with a beer to talk but the

00:24:45,210 --> 00:24:49,980
choices that you make can have a huge

00:24:47,010 --> 00:24:51,330
impact and how quickly you can move how

00:24:49,980 --> 00:24:53,730
much technical debt you accumulate and

00:24:51,330 --> 00:24:55,440
most importantly how happy the engineers

00:24:53,730 --> 00:24:57,540
on your team are and whether they want

00:24:55,440 --> 00:25:00,120
to stay and whether they recruit their

00:24:57,540 --> 00:25:01,680
friends to come work with them that's

00:25:00,120 --> 00:25:04,140
what's hard that's where these choices

00:25:01,680 --> 00:25:10,350
matter making choices that make people

00:25:04,140 --> 00:25:12,630
happy matters so cheer up enjoy it while

00:25:10,350 --> 00:25:21,810
you can because these are already the

00:25:12,630 --> 00:25:29,090
good old days thank you okay standing

00:25:21,810 --> 00:25:29,090

YouTube URL: https://www.youtube.com/watch?v=34WCcuMvyQ8


