Title: DevOps - Yoav Abrahami
Publication date: 2015-11-01
Playlist: DevOps Days Tel Aviv 2015
Description: 
	http://www.devopsdays.org/events/2015-telaviv/

I have been asked to give a talk at TEDx event about DevOps. Being from a technical background asked to talk about a technical subject such as DevOps for non-technical audience forced me to distill what DevOps really is - a shift in a culture, but more then that, a shift in responsibility.

Responsibility is key to building a successful organization. However, with the traditional way of distributing responsibility based on expertise, software organizations tend to build up difficulties. In this talk we discuss the causes for those difficulties and how a different responsibility model of "owners" and "enablers" address those difficulties. The model of "owners" and "enablers" is related to DevOps by the simple fact that for me - that's what DevOps is by denoting developers as owners and ops as enablers.

https://www.youtube.com/watch?v=3wXQfYfe2l8

About the speaker - Yoav Abrahami

Yoav Abrahami is the Chief Architect at Wix.com, working with developers and operations to build the company's future products as well as accelerating and improving development processes. Prior to joining Wix, Yoav was an Architect at Amdocs Cramer OSS division. Yoav holds a MS in Physics and a BS in Computer Science from the Tel Aviv University.
Captions: 
	00:00:16,550 --> 00:00:22,020
so this is just noticed that you won't

00:00:19,050 --> 00:00:25,500
kill me afterwards it's basically

00:00:22,020 --> 00:00:29,160
because of the next slide which should

00:00:25,500 --> 00:00:30,750
be now and that is the thing I have

00:00:29,160 --> 00:00:32,730
never understood what it means that the

00:00:30,750 --> 00:00:34,530
abscissa culture a culture for me is

00:00:32,730 --> 00:00:36,780
people's in it sitting around the

00:00:34,530 --> 00:00:39,690
bonfire drinking beer or going to a

00:00:36,780 --> 00:00:41,879
museum it's not about devotes and

00:00:39,690 --> 00:00:43,770
certainly not a tool or job description

00:00:41,879 --> 00:00:45,629
so let's go back to the basics let's

00:00:43,770 --> 00:00:48,030
explore what it is remember we have

00:00:45,629 --> 00:00:49,649
developers and double do in the Technic

00:00:48,030 --> 00:00:51,989
wire men's end up building software

00:00:49,649 --> 00:00:53,850
it'll experts in the very responsible

00:00:51,989 --> 00:00:56,280
people very smart people didn't know

00:00:53,850 --> 00:00:58,289
what they're doing and their

00:00:56,280 --> 00:01:00,780
responsibility search they are defined

00:00:58,289 --> 00:01:04,589
by their managers I to write software

00:01:00,780 --> 00:01:06,360
model staff solve complex problems does

00:01:04,589 --> 00:01:08,460
really smart people doing a lot of stuff

00:01:06,360 --> 00:01:10,110
and normally the responsible up to the

00:01:08,460 --> 00:01:12,560
point that it is actually works on their

00:01:10,110 --> 00:01:14,549
machine that's not revolting by itself

00:01:12,560 --> 00:01:16,710
operations are the people were

00:01:14,549 --> 00:01:19,950
responsible to make sure the product

00:01:16,710 --> 00:01:21,299
keeps on running it is the tube start

00:01:19,950 --> 00:01:23,490
running and continue running and there

00:01:21,299 --> 00:01:25,200
are also really expert people they have

00:01:23,490 --> 00:01:28,350
a lot of things to learn to know and you

00:01:25,200 --> 00:01:30,240
have to manage the all kinds of risks

00:01:28,350 --> 00:01:32,040
that prevent the products from

00:01:30,240 --> 00:01:34,430
continuing to run all kinds of

00:01:32,040 --> 00:01:36,479
malfunctions attacks by malicious people

00:01:34,430 --> 00:01:38,340
changes that we introduce that reduce

00:01:36,479 --> 00:01:40,140
risk and have to mitigate all those

00:01:38,340 --> 00:01:41,820
problems make sure things to aquatint

00:01:40,140 --> 00:01:43,649
run remember this is not summation

00:01:41,820 --> 00:01:45,780
control those are really smart people

00:01:43,649 --> 00:01:50,630
this is operations that's order

00:01:45,780 --> 00:01:53,040
operations people so if this is the case

00:01:50,630 --> 00:01:55,520
what does it really mean and that's what

00:01:53,040 --> 00:01:58,619
my understanding of the problem is

00:01:55,520 --> 00:02:00,840
operations are measured by the stability

00:01:58,619 --> 00:02:03,630
of the product of our system stability

00:02:00,840 --> 00:02:06,360
means minimize risk minimize risk means

00:02:03,630 --> 00:02:08,190
that we need to that the risk is caused

00:02:06,360 --> 00:02:10,739
by malfunctions attack change change

00:02:08,190 --> 00:02:12,870
caused by developers it means that the

00:02:10,739 --> 00:02:13,540
role of operations is to prevent

00:02:12,870 --> 00:02:21,730
developer

00:02:13,540 --> 00:02:25,000
from doing a change they are measured on

00:02:21,730 --> 00:02:27,579
it now this is the DevOps wallet always

00:02:25,000 --> 00:02:29,680
look about we want change we want

00:02:27,579 --> 00:02:32,310
stability now no one won't change no one

00:02:29,680 --> 00:02:35,950
on stability that's not the real picture

00:02:32,310 --> 00:02:38,650
the real picture is that their job is to

00:02:35,950 --> 00:02:41,409
do a change and their job is to do still

00:02:38,650 --> 00:02:44,769
have stable environment and their job

00:02:41,409 --> 00:02:47,230
the by definition both teams cannot

00:02:44,769 --> 00:02:53,200
succeed want him as to make sure that do

00:02:47,230 --> 00:02:55,810
fails so we should change the

00:02:53,200 --> 00:02:58,090
responsibility we should split the

00:02:55,810 --> 00:03:01,540
requirements from the people form a team

00:02:58,090 --> 00:03:04,000
in a different way and that is what is

00:03:01,540 --> 00:03:05,980
developed for me what does it mean to

00:03:04,000 --> 00:03:08,849
change responsibility it means that we

00:03:05,980 --> 00:03:13,239
change the developers job description

00:03:08,849 --> 00:03:15,819
developers should take charge of the

00:03:13,239 --> 00:03:18,489
risk introduced by changes developers

00:03:15,819 --> 00:03:21,639
should you should take charge of the

00:03:18,489 --> 00:03:23,709
stability impact of their changes they

00:03:21,639 --> 00:03:25,659
should own the change they should own

00:03:23,709 --> 00:03:29,379
all the aspects of the change and what

00:03:25,659 --> 00:03:31,479
it might be doing to your system which

00:03:29,379 --> 00:03:33,340
means quite a bit for the developer it

00:03:31,479 --> 00:03:35,260
means that the developer that up until

00:03:33,340 --> 00:03:36,760
now just cared that things working on

00:03:35,260 --> 00:03:39,370
his machine now is to care about

00:03:36,760 --> 00:03:41,829
pre-deployment guards we call them tests

00:03:39,370 --> 00:03:44,109
it has to care about predictable

00:03:41,829 --> 00:03:45,220
deployment because it's a still need to

00:03:44,109 --> 00:03:47,409
run just on his machine and

00:03:45,220 --> 00:03:49,000
post-deployment guards monitoring

00:03:47,409 --> 00:03:51,129
learning and developers will go and

00:03:49,000 --> 00:03:52,959
build those things because they have to

00:03:51,129 --> 00:03:54,639
because it's their responsibility to

00:03:52,959 --> 00:03:56,859
mitigate the risk introduced by the

00:03:54,639 --> 00:03:58,090
changes and it means for operations that

00:03:56,859 --> 00:04:01,949
operation shouldn't give a about

00:03:58,090 --> 00:04:01,949
the risk from a change

00:04:04,770 --> 00:04:11,260
they should focus on the main functions

00:04:07,690 --> 00:04:13,720
and on the system topology and on

00:04:11,260 --> 00:04:16,930
attacks and on the real problems and

00:04:13,720 --> 00:04:20,019
just help developers with mitigating the

00:04:16,930 --> 00:04:22,360
risk due to change it is a change in an

00:04:20,019 --> 00:04:25,000
organized organizational structure it

00:04:22,360 --> 00:04:27,820
changes the developers to be the owners

00:04:25,000 --> 00:04:30,610
of a change and the operations to be

00:04:27,820 --> 00:04:32,860
enablers that help them do that does it

00:04:30,610 --> 00:04:34,380
about devil it's not a culture it's a

00:04:32,860 --> 00:04:36,610
change of responsibility and

00:04:34,380 --> 00:04:39,970
organizational structure that's the

00:04:36,610 --> 00:04:42,250
thing about it and that makes me think

00:04:39,970 --> 00:04:45,250
about another in object small thing

00:04:42,250 --> 00:04:49,270
small idea is it valid only for

00:04:45,250 --> 00:04:51,760
developers and operations or is it

00:04:49,270 --> 00:04:54,730
actually the same way with all functions

00:04:51,760 --> 00:04:56,260
in your organization by taking people

00:04:54,730 --> 00:04:57,940
that are experts in a field and saying

00:04:56,260 --> 00:05:00,850
you are responsible for that field you

00:04:57,940 --> 00:05:03,160
are actually blocking development in

00:05:00,850 --> 00:05:04,930
progress in what we're doing here is

00:05:03,160 --> 00:05:06,850
actually taking operations are exported

00:05:04,930 --> 00:05:09,700
stability and making me them not

00:05:06,850 --> 00:05:11,050
responsible for stability instead making

00:05:09,700 --> 00:05:13,300
the developers responsible for

00:05:11,050 --> 00:05:17,500
disability so I'm going to go without

00:05:13,300 --> 00:05:20,310
question and hopefully we learn

00:05:17,500 --> 00:05:20,310

YouTube URL: https://www.youtube.com/watch?v=0RGi6wQQPZo


