Title: How immutable can you get? - Anton Weiss
Publication date: 2015-11-01
Playlist: DevOps Days Tel Aviv 2015
Description: 
	http://www.devopsdays.org/events/2015-telaviv/

The idea of immutable infrastructure is very attractive but it does raise questions, e.g: how do we manage the inevitable change? how do we react to events? how do we debug? how do we test our immutable images? what happens to our configuration management tools? how immutable can we really get?!

About the speaker - Anton Weiss

I've been building and delivering software for the last 15 years. I've helped establish Continuous Delivery and DevOps practices in various enterprise and startup companies and I love speaking about this stuff.

A firm believer in Continuous Improvement and organizational transparency.
Captions: 
	00:00:11,260 --> 00:00:18,230
hi everyone my name is anton wise i

00:00:15,250 --> 00:00:21,650
consult and teacher blah and bloggers oh

00:00:18,230 --> 00:00:23,750
tomato and today i have to break the sad

00:00:21,650 --> 00:00:28,100
news to you the configuration management

00:00:23,750 --> 00:00:29,869
tools are doomed well they simply are

00:00:28,100 --> 00:00:31,970
not good enough the deployments with

00:00:29,869 --> 00:00:34,039
them are not atomic they depend on

00:00:31,970 --> 00:00:36,470
external resources that could change in

00:00:34,039 --> 00:00:39,980
between deployments and they only manage

00:00:36,470 --> 00:00:41,780
things we've defined and all this brings

00:00:39,980 --> 00:00:43,550
our service to a state that is hard to

00:00:41,780 --> 00:00:46,070
know and of course there's the

00:00:43,550 --> 00:00:48,500
configuration drift that we still can't

00:00:46,070 --> 00:00:50,690
control again because the deployment

00:00:48,500 --> 00:00:53,149
time variance and the manual tweaks on

00:00:50,690 --> 00:00:56,030
the server who all know happen and they

00:00:53,149 --> 00:00:58,309
ever mysterious betroth so what do we do

00:00:56,030 --> 00:01:00,680
how do we keep our servers in a state

00:00:58,309 --> 00:01:02,780
that we expect them to be smarter people

00:01:00,680 --> 00:01:06,020
than me came up with an answer we use

00:01:02,780 --> 00:01:08,420
immutable servers so the immutable

00:01:06,020 --> 00:01:10,490
infrastructure is the new king we build

00:01:08,420 --> 00:01:12,289
their servers once we never change

00:01:10,490 --> 00:01:14,719
anything and Sam go as far as saying

00:01:12,289 --> 00:01:17,779
let's block SSH access to the servers to

00:01:14,719 --> 00:01:19,609
make sure nothing ever gets changed so

00:01:17,779 --> 00:01:21,979
now nothing ever gets changed our

00:01:19,609 --> 00:01:27,109
servers are immutable we've reached this

00:01:21,979 --> 00:01:29,539
and we can rest in peace doesn't sound

00:01:27,109 --> 00:01:32,899
too good to me there's a problem here

00:01:29,539 --> 00:01:35,779
this order is death and we won't life we

00:01:32,899 --> 00:01:38,179
want to be Edgehill and we want to

00:01:35,779 --> 00:01:41,509
continuously deliver value to our

00:01:38,179 --> 00:01:43,039
customers well of course immutable isn't

00:01:41,509 --> 00:01:45,709
about preventing changes about

00:01:43,039 --> 00:01:47,899
controlling change so the answer is you

00:01:45,709 --> 00:01:50,209
want change you build a new instance and

00:01:47,899 --> 00:01:52,039
then you test it in staging if

00:01:50,209 --> 00:01:53,749
everything is good you go to production

00:01:52,039 --> 00:01:55,279
you retire the old instance you replace

00:01:53,749 --> 00:01:59,059
it with the new instance that which is

00:01:55,279 --> 00:02:00,739
better what only one small small change

00:01:59,059 --> 00:02:05,450
now I have to rebuild the whole thing

00:02:00,739 --> 00:02:08,149
what freaking headache so we could of

00:02:05,450 --> 00:02:10,039
course build smaller boxes maybe things

00:02:08,149 --> 00:02:12,140
that are faster and easier to build

00:02:10,039 --> 00:02:13,340
especially we have the automation in

00:02:12,140 --> 00:02:15,410
place

00:02:13,340 --> 00:02:18,050
and we'll build small boxes and each one

00:02:15,410 --> 00:02:20,209
will have one single purpose which will

00:02:18,050 --> 00:02:23,410
bring us to the hot trend in software

00:02:20,209 --> 00:02:25,790
architecture let's use microservices

00:02:23,410 --> 00:02:27,500
microservices are good well know my casa

00:02:25,790 --> 00:02:30,799
rosada good and then there's another

00:02:27,500 --> 00:02:36,500
even hotter trend in in the industry

00:02:30,799 --> 00:02:38,900
today which is right you're all right of

00:02:36,500 --> 00:02:41,569
course let's use containers look ma we

00:02:38,900 --> 00:02:45,080
now have containers and microservices

00:02:41,569 --> 00:02:47,750
and the question becomes how do we

00:02:45,080 --> 00:02:51,140
manage all these small immutable thing

00:02:47,750 --> 00:02:53,360
is on our table now well of course we

00:02:51,140 --> 00:02:57,019
need to clearly separate the state full

00:02:53,360 --> 00:02:59,900
from the stateless or and there is

00:02:57,019 --> 00:03:02,170
another word from the ephemeral really

00:02:59,900 --> 00:03:05,000
like that word our infrastructure is now

00:03:02,170 --> 00:03:07,160
ephemeral I recently heard John will

00:03:05,000 --> 00:03:10,549
will is talking about this so it's

00:03:07,160 --> 00:03:14,530
important role and immutable talking

00:03:10,549 --> 00:03:17,630
about aesthetics and now there are

00:03:14,530 --> 00:03:19,430
services or instances are ephemeral we

00:03:17,630 --> 00:03:22,160
need to external as all the stateful

00:03:19,430 --> 00:03:24,650
stuff outside so we need to externalize

00:03:22,160 --> 00:03:26,569
monitoring and logs and of course we

00:03:24,650 --> 00:03:28,790
need to externalize and virtual I

00:03:26,569 --> 00:03:31,040
storage and we need to have service

00:03:28,790 --> 00:03:33,980
discovery in place and load balancing

00:03:31,040 --> 00:03:35,269
because things are ephemeral they appear

00:03:33,980 --> 00:03:37,130
in disappear and then we'll need a

00:03:35,269 --> 00:03:39,769
management layer to manage all this

00:03:37,130 --> 00:03:41,810
complexity that we've built and then we

00:03:39,769 --> 00:03:46,299
look at the picture and we say all these

00:03:41,810 --> 00:03:46,299
things downstairs there aren't these

00:03:46,359 --> 00:03:54,069
infrastructure so can we still even call

00:03:51,230 --> 00:03:56,630
our servers infrastructure anymore and

00:03:54,069 --> 00:04:02,510
if they're not infrastructure than

00:03:56,630 --> 00:04:03,919
what's immutable now and there are other

00:04:02,510 --> 00:04:05,930
questions of course for example

00:04:03,919 --> 00:04:08,510
debugging let's say we have a problem in

00:04:05,930 --> 00:04:11,299
production and for some stupid reason we

00:04:08,510 --> 00:04:13,730
cannot recreate it in staging happen to

00:04:11,299 --> 00:04:16,940
you well happen to me more than once

00:04:13,730 --> 00:04:18,680
certainly and the replacement criteria

00:04:16,940 --> 00:04:20,269
how do we know if an instance maybe

00:04:18,680 --> 00:04:21,859
already borked

00:04:20,269 --> 00:04:25,639
it's time to replace it with a new one

00:04:21,859 --> 00:04:27,889
that is good and well to link which

00:04:25,639 --> 00:04:30,530
tools you use so tooling is still

00:04:27,889 --> 00:04:32,419
inadequate and there's the slower change

00:04:30,530 --> 00:04:35,330
rate that we need to deal with and of

00:04:32,419 --> 00:04:40,639
course the substantial initial effort to

00:04:35,330 --> 00:04:43,099
build all this system and well there are

00:04:40,639 --> 00:04:44,629
challenges but with all the challenges I

00:04:43,099 --> 00:04:46,759
still think that immutable

00:04:44,629 --> 00:04:49,280
infrastructure is a very viable pattern

00:04:46,759 --> 00:04:51,349
that could help us a lot in knowing the

00:04:49,280 --> 00:04:53,360
state of our servers and we should be

00:04:51,349 --> 00:04:55,370
using it where applicable because the

00:04:53,360 --> 00:04:57,349
immutable servers may be the only solid

00:04:55,370 --> 00:05:01,300
thing in the fluid infrastructure of

00:04:57,349 --> 00:05:01,300

YouTube URL: https://www.youtube.com/watch?v=FvLa-eogCtY


