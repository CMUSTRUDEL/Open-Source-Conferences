Title: DevSecCon Keynote: Good Code, Bad OpSec   Data Horror Stories from a Hacker's Perspective, Noam Rote
Publication date: 2020-12-26
Playlist: Community Summit TLV 2020
Description: 
	For the past few years, together with Ran Locar, we're running a side project to find sensitive data exposed by governments and large corporations. Although the code is usually OK from a security POV, in many cases the OPSEC is so bad it makes the effort invested in developing good code - redundant. In this talk we'll cover a few cases unearthed by our project, explore the failures, and discuss ways to prevent such catastrophes from happening on your systems.
Captions: 
	00:00:02,880 --> 00:00:05,940
[Music]

00:00:13,599 --> 00:00:18,640
and

00:00:14,719 --> 00:00:23,359
now let's take noam

00:00:18,640 --> 00:00:26,560
here hey noam hello

00:00:23,359 --> 00:00:29,679
i'm super excited to have you here

00:00:26,560 --> 00:00:32,320
for the keynote of devsecond

00:00:29,679 --> 00:00:34,640
yeah good code bad upset data horror

00:00:32,320 --> 00:00:38,239
stories from a hacker's perspective

00:00:34,640 --> 00:00:42,079
for me after one year of listening

00:00:38,239 --> 00:00:42,960
uh to darknet diaries i'm very honored

00:00:42,079 --> 00:00:46,160
to

00:00:42,960 --> 00:00:49,600
to run this track so let's

00:00:46,160 --> 00:00:52,719
have your awesome talk and then

00:00:49,600 --> 00:00:59,690
we'll uh we'll chat a bit

00:00:52,719 --> 00:01:02,740
looking forward see ya

00:00:59,690 --> 00:01:02,740
[Music]

00:01:11,210 --> 00:01:15,330
[Music]

00:01:24,840 --> 00:01:29,200
uh

00:01:26,080 --> 00:01:31,920
okay so hi my name is noam rotem and i'm

00:01:29,200 --> 00:01:35,280
here to talk about

00:01:31,920 --> 00:01:38,560
devops mistakes bad opsec that led to

00:01:35,280 --> 00:01:42,399
a lot of data leaking out

00:01:38,560 --> 00:01:44,960
going sometimes public um

00:01:42,399 --> 00:01:46,479
and having very bad consequences to

00:01:44,960 --> 00:01:50,399
whoever was in charge

00:01:46,479 --> 00:01:52,560
of this data so a little bit about me

00:01:50,399 --> 00:01:54,799
i've been building stuff for over 35

00:01:52,560 --> 00:01:58,159
years and i've been breaking stuff

00:01:54,799 --> 00:02:02,640
for over 30 years

00:01:58,159 --> 00:02:06,079
this year i founded another company

00:02:02,640 --> 00:02:09,599
vc backed called hypergust

00:02:06,079 --> 00:02:12,160
and i'm acting as a cto

00:02:09,599 --> 00:02:13,120
same role i've been doing for the past

00:02:12,160 --> 00:02:16,239
15 years

00:02:13,120 --> 00:02:19,440
in various industries

00:02:16,239 --> 00:02:21,200
another fun thing i do is i run a few

00:02:19,440 --> 00:02:25,920
side projects with a few friends

00:02:21,200 --> 00:02:29,040
hello mr loka detecting data links

00:02:25,920 --> 00:02:31,599
we found a lot of biometric information

00:02:29,040 --> 00:02:32,319
millions of records the u.s drone

00:02:31,599 --> 00:02:35,440
systems

00:02:32,319 --> 00:02:36,400
we became administrators of a few jails

00:02:35,440 --> 00:02:39,519
in the u.s

00:02:36,400 --> 00:02:42,959
and found ourselves in the

00:02:39,519 --> 00:02:44,400
networks of more than a few fortune 500

00:02:42,959 --> 00:02:47,760
companies

00:02:44,400 --> 00:02:50,959
we also found a nation-level data

00:02:47,760 --> 00:02:54,080
for countries like ecuador chile the us

00:02:50,959 --> 00:02:56,000
india and israel and when i'm saying

00:02:54,080 --> 00:03:00,239
nation level data i'm talking about

00:02:56,000 --> 00:03:03,440
all of the data financial

00:03:00,239 --> 00:03:07,599
insurance cards everything you can

00:03:03,440 --> 00:03:08,239
think of and i have a warm place in my

00:03:07,599 --> 00:03:11,360
heart

00:03:08,239 --> 00:03:15,040
for the israeli network security or

00:03:11,360 --> 00:03:18,480
lack thereof which i'm sure

00:03:15,040 --> 00:03:18,879
we are all aware of and last thing about

00:03:18,480 --> 00:03:21,280
me

00:03:18,879 --> 00:03:22,159
i like pastries and i was promised

00:03:21,280 --> 00:03:25,120
pastries

00:03:22,159 --> 00:03:25,120
if i speak here

00:03:26,400 --> 00:03:30,400
so when we talk about data breaches

00:03:30,480 --> 00:03:37,360
basically it's like a huge pyramid

00:03:34,239 --> 00:03:38,879
the tip at the top is about broken

00:03:37,360 --> 00:03:42,720
technology

00:03:38,879 --> 00:03:46,000
ciphers that are broken protocols that

00:03:42,720 --> 00:03:49,840
are mishandled but

00:03:46,000 --> 00:03:52,879
the vast majority of issues

00:03:49,840 --> 00:03:55,599
are human errors

00:03:52,879 --> 00:03:57,920
we are all developers we do devops we

00:03:55,599 --> 00:04:00,480
have bugs

00:03:57,920 --> 00:04:01,360
the question is do we catch these bugs

00:04:00,480 --> 00:04:04,640
before

00:04:01,360 --> 00:04:05,680
they go live in most cases as we will

00:04:04,640 --> 00:04:08,720
see shortly

00:04:05,680 --> 00:04:12,560
we don't and there is another layer

00:04:08,720 --> 00:04:14,799
that is caused by malicious people

00:04:12,560 --> 00:04:16,079
who are doing fishing and installing

00:04:14,799 --> 00:04:19,840
ransomwares

00:04:16,079 --> 00:04:22,880
and threatening to do things but again

00:04:19,840 --> 00:04:25,199
from everything we saw in the past few

00:04:22,880 --> 00:04:27,520
years

00:04:25,199 --> 00:04:28,639
a lot of it can be attributed to human

00:04:27,520 --> 00:04:30,080
errors

00:04:28,639 --> 00:04:31,759
and this is what we're going to talk

00:04:30,080 --> 00:04:34,960
about today the opsec

00:04:31,759 --> 00:04:37,840
that is required to prevent this

00:04:34,960 --> 00:04:39,120
so i'm building a new system i'm doing

00:04:37,840 --> 00:04:43,520
everything by the book

00:04:39,120 --> 00:04:45,440
i set a vpc a virtual private network

00:04:43,520 --> 00:04:47,520
with a single endpoint which is the load

00:04:45,440 --> 00:04:48,479
balancer i have a few servers inside and

00:04:47,520 --> 00:04:50,320
i have a database

00:04:48,479 --> 00:04:51,520
with secret information i want to

00:04:50,320 --> 00:04:54,320
protect

00:04:51,520 --> 00:04:55,600
i even went out of my way and i

00:04:54,320 --> 00:04:59,759
installed the firewall

00:04:55,600 --> 00:05:00,800
or even a waf i've made sure my

00:04:59,759 --> 00:05:04,240
developers

00:05:00,800 --> 00:05:07,360
written are writing a secure code

00:05:04,240 --> 00:05:08,320
i manage my code securely and i have a

00:05:07,360 --> 00:05:11,199
separate qn

00:05:08,320 --> 00:05:11,919
qa environment everyone would say good

00:05:11,199 --> 00:05:14,960
job norm

00:05:11,919 --> 00:05:17,759
no one will take your data

00:05:14,960 --> 00:05:18,720
today i want to talk about top 10 common

00:05:17,759 --> 00:05:22,240
mistakes

00:05:18,720 --> 00:05:24,560
that a lot of us are doing and

00:05:22,240 --> 00:05:26,479
it's quite easy to prevent them so i

00:05:24,560 --> 00:05:29,680
hope after this talk

00:05:26,479 --> 00:05:34,320
you'll go back and revisit your code

00:05:29,680 --> 00:05:37,440
so the first thing uh that

00:05:34,320 --> 00:05:38,800
is commonly encountered when dealing

00:05:37,440 --> 00:05:41,840
with data leaks

00:05:38,800 --> 00:05:44,320
is lazy developers now we are all

00:05:41,840 --> 00:05:47,680
developers we all write code

00:05:44,320 --> 00:05:48,560
many of us are lazy so in order to

00:05:47,680 --> 00:05:52,000
prevent

00:05:48,560 --> 00:05:55,680
our laziness to reflect itself

00:05:52,000 --> 00:05:59,120
in leaked data we have to have policies

00:05:55,680 --> 00:06:03,120
we have to have strict possible policies

00:05:59,120 --> 00:06:06,400
we have to have strict security policies

00:06:03,120 --> 00:06:09,600
that will prevent other people

00:06:06,400 --> 00:06:13,280
from exploiting our laziness

00:06:09,600 --> 00:06:16,960
and entering our network a good example

00:06:13,280 --> 00:06:18,880
would be a huge company which i will not

00:06:16,960 --> 00:06:22,720
name

00:06:18,880 --> 00:06:25,440
that i was uh hired to look into their

00:06:22,720 --> 00:06:27,440
uh network now they really did a good

00:06:25,440 --> 00:06:30,560
job in securing their network

00:06:27,440 --> 00:06:34,080
i sat with the cso who boasted

00:06:30,560 --> 00:06:36,160
that i would need 300 years to break

00:06:34,080 --> 00:06:39,280
into his account because even he doesn't

00:06:36,160 --> 00:06:41,440
have access to all of the information

00:06:39,280 --> 00:06:43,120
inside i was laughing because i already

00:06:41,440 --> 00:06:45,840
had all of his information

00:06:43,120 --> 00:06:47,840
in my small laptop and how did this

00:06:45,840 --> 00:06:51,919
happen

00:06:47,840 --> 00:06:54,000
one of his developers

00:06:51,919 --> 00:06:56,479
used the password one two three four

00:06:54,000 --> 00:06:56,479
five six

00:06:57,360 --> 00:07:00,880
and this developer because he was lazy

00:06:59,919 --> 00:07:04,560
gave himself

00:07:00,880 --> 00:07:07,919
good permissions so by guessing

00:07:04,560 --> 00:07:09,840
a very simple password i got access to

00:07:07,919 --> 00:07:11,680
all of the private information very

00:07:09,840 --> 00:07:14,000
sensitive information of this

00:07:11,680 --> 00:07:16,800
very very big company who raised a few

00:07:14,000 --> 00:07:19,360
hundred of millions of dollars

00:07:16,800 --> 00:07:20,560
by having strict policies that would

00:07:19,360 --> 00:07:22,479
prevent

00:07:20,560 --> 00:07:25,280
idiotic passwords like one two three

00:07:22,479 --> 00:07:27,680
four five six

00:07:25,280 --> 00:07:29,440
this developer would have to go the

00:07:27,680 --> 00:07:32,479
extra mile

00:07:29,440 --> 00:07:35,759
and put in a harder password i

00:07:32,479 --> 00:07:38,240
would have a harder time in guessing

00:07:35,759 --> 00:07:39,440
same things with common logins on your

00:07:38,240 --> 00:07:42,960
production environment

00:07:39,440 --> 00:07:46,080
you do not need a qa user called qa

00:07:42,960 --> 00:07:46,960
at my domain on your production

00:07:46,080 --> 00:07:50,800
environment

00:07:46,960 --> 00:07:54,319
you must have two-factor authentication

00:07:50,800 --> 00:07:58,080
for at least root users or

00:07:54,319 --> 00:08:01,520
users with greater permissions

00:07:58,080 --> 00:08:02,160
than than others on your production

00:08:01,520 --> 00:08:05,680
environment

00:08:02,160 --> 00:08:08,160
you cannot hard code your uh

00:08:05,680 --> 00:08:08,879
your passwords your keys everything

00:08:08,160 --> 00:08:11,879
needs to be

00:08:08,879 --> 00:08:13,680
set up in a way that it cannot be

00:08:11,879 --> 00:08:16,800
exfoliated

00:08:13,680 --> 00:08:20,960
so we've all met the lazy developers

00:08:16,800 --> 00:08:23,360
it is our job as platform

00:08:20,960 --> 00:08:24,400
architects platform engineers security

00:08:23,360 --> 00:08:27,039
architects

00:08:24,400 --> 00:08:28,080
to make sure this laziness will not

00:08:27,039 --> 00:08:31,440
cause us

00:08:28,080 --> 00:08:34,560
too much problems down the line

00:08:31,440 --> 00:08:37,919
a very very very common mistake that

00:08:34,560 --> 00:08:40,800
that we encounter is logging so if we

00:08:37,919 --> 00:08:44,080
take the little diagram we had before

00:08:40,800 --> 00:08:45,680
of my vpc with the load balancer one

00:08:44,080 --> 00:08:48,880
entry point

00:08:45,680 --> 00:08:49,600
now my management is coming and telling

00:08:48,880 --> 00:08:52,800
me

00:08:49,600 --> 00:08:55,120
we need better logs we need more logs

00:08:52,800 --> 00:08:56,399
so the easiest thing to do is take a

00:08:55,120 --> 00:08:59,519
logging service

00:08:56,399 --> 00:09:02,959
and start dumping everything inside

00:08:59,519 --> 00:09:05,519
what we see that in many many cases

00:09:02,959 --> 00:09:06,320
since it's internal logging no one

00:09:05,519 --> 00:09:09,360
bothers

00:09:06,320 --> 00:09:13,440
to put authentication on top of it

00:09:09,360 --> 00:09:16,720
so when you are logging

00:09:13,440 --> 00:09:19,600
access to the private user's wallets

00:09:16,720 --> 00:09:20,640
you write the private key and the wallet

00:09:19,600 --> 00:09:22,080
address

00:09:20,640 --> 00:09:24,320
you'd be surprised how many

00:09:22,080 --> 00:09:27,279
cryptocurrency exchanges

00:09:24,320 --> 00:09:27,680
use this solution to expose the client's

00:09:27,279 --> 00:09:30,720
uh

00:09:27,680 --> 00:09:34,839
wallets so

00:09:30,720 --> 00:09:37,200
even for internal purposes you must have

00:09:34,839 --> 00:09:38,959
authentication even if it will cost

00:09:37,200 --> 00:09:41,360
another millisecond

00:09:38,959 --> 00:09:42,800
during the connection it's worth it

00:09:41,360 --> 00:09:46,080
trust me

00:09:42,800 --> 00:09:46,959
another thing that that we see is people

00:09:46,080 --> 00:09:50,000
putting

00:09:46,959 --> 00:09:52,560
the logging server outside of the vpc

00:09:50,000 --> 00:09:53,760
so it will be easier for them to run a

00:09:52,560 --> 00:09:56,399
bi

00:09:53,760 --> 00:09:56,399
on top of it

00:09:56,959 --> 00:10:01,519
another very very serious mistake that

00:09:59,760 --> 00:10:05,839
people are doing

00:10:01,519 --> 00:10:05,839
is logging in the wrong place

00:10:06,240 --> 00:10:11,200
when you are pci compliant for example

00:10:09,120 --> 00:10:14,320
you are not allowed

00:10:11,200 --> 00:10:16,959
to save plain text

00:10:14,320 --> 00:10:18,160
credit card data but when you are

00:10:16,959 --> 00:10:20,160
writing the logs

00:10:18,160 --> 00:10:21,519
when you are sending the the credit card

00:10:20,160 --> 00:10:22,720
number when you are receiving credit

00:10:21,519 --> 00:10:25,839
card numbers

00:10:22,720 --> 00:10:28,640
you save the entire request so

00:10:25,839 --> 00:10:29,839
by not having maskers on top of your

00:10:28,640 --> 00:10:33,839
logging service

00:10:29,839 --> 00:10:37,279
you basically break your own standards

00:10:33,839 --> 00:10:38,800
so a logging service which seems like a

00:10:37,279 --> 00:10:40,560
very very simple very very

00:10:38,800 --> 00:10:43,839
straightforward task can be

00:10:40,560 --> 00:10:46,959
a huge security hole and we've seen

00:10:43,839 --> 00:10:50,880
so many of them that are exposing

00:10:46,959 --> 00:10:53,200
the entire client requests with headers

00:10:50,880 --> 00:10:54,560
all you know when you forget your

00:10:53,200 --> 00:10:58,399
password and you

00:10:54,560 --> 00:11:02,320
are being emailed a password reset link

00:10:58,399 --> 00:11:05,680
this link or outgoing api calls for

00:11:02,320 --> 00:11:08,880
external services are being logged

00:11:05,680 --> 00:11:10,640
with your credentials database

00:11:08,880 --> 00:11:14,160
connection string

00:11:10,640 --> 00:11:15,920
infrastructure keys to access s3 buckets

00:11:14,160 --> 00:11:19,040
or whatever

00:11:15,920 --> 00:11:20,320
everything is exposed we saw it in many

00:11:19,040 --> 00:11:23,519
cases for example

00:11:20,320 --> 00:11:26,800
gearbest a very big

00:11:23,519 --> 00:11:27,360
chinese e-commerce website did exactly

00:11:26,800 --> 00:11:30,079
this

00:11:27,360 --> 00:11:33,680
masked nothing logged everything and

00:11:30,079 --> 00:11:33,680
forgot to put a password

00:11:34,399 --> 00:11:38,720
so not masking sensitive data is one

00:11:37,600 --> 00:11:40,079
thing

00:11:38,720 --> 00:11:42,160
another question you need to ask

00:11:40,079 --> 00:11:45,200
yourself do you need

00:11:42,160 --> 00:11:48,320
the pii the user names

00:11:45,200 --> 00:11:51,680
email addresses whatever

00:11:48,320 --> 00:11:54,720
to be saved in the logs will it give you

00:11:51,680 --> 00:11:57,040
anything by saving this because

00:11:54,720 --> 00:11:57,839
it's one thing that your logging system

00:11:57,040 --> 00:12:01,120
is leaking

00:11:57,839 --> 00:12:04,320
but if there is no sensitive data inside

00:12:01,120 --> 00:12:05,200
no harm done except for the developer

00:12:04,320 --> 00:12:08,560
that needs to get

00:12:05,200 --> 00:12:09,200
a newspaper on their nose and the last

00:12:08,560 --> 00:12:12,320
thing

00:12:09,200 --> 00:12:14,160
is that usually these logging services

00:12:12,320 --> 00:12:16,160
don't have the logs of their own so they

00:12:14,160 --> 00:12:18,959
don't know who accessed

00:12:16,160 --> 00:12:20,000
them so make sure you have

00:12:18,959 --> 00:12:23,600
authentication

00:12:20,000 --> 00:12:25,839
you have logs to know when data is being

00:12:23,600 --> 00:12:27,279
stolen from you and make sure that

00:12:25,839 --> 00:12:31,200
everything you save inside

00:12:27,279 --> 00:12:34,240
is stuff you really need to save inside

00:12:31,200 --> 00:12:39,839
number three on our list is our

00:12:34,240 --> 00:12:39,839
backups migration and dumps oh my

00:12:41,360 --> 00:12:47,360
we take our schema again

00:12:44,720 --> 00:12:49,360
we have our vpc we have our log server

00:12:47,360 --> 00:12:53,120
let's say it's now secure

00:12:49,360 --> 00:12:54,959
but now my qa is saying that the

00:12:53,120 --> 00:12:56,639
environment is not up to date

00:12:54,959 --> 00:12:59,760
and some of the data that they are

00:12:56,639 --> 00:13:02,320
testing does not reflect exactly

00:12:59,760 --> 00:13:03,360
the production data what does a lady

00:13:02,320 --> 00:13:05,920
developer do

00:13:03,360 --> 00:13:06,480
they dump the production database they

00:13:05,920 --> 00:13:08,800
move it

00:13:06,480 --> 00:13:09,680
to the qa environment or to the local

00:13:08,800 --> 00:13:13,360
environment

00:13:09,680 --> 00:13:15,519
and work on it there alas

00:13:13,360 --> 00:13:18,560
the security on the qa environment or

00:13:15,519 --> 00:13:21,600
the local environment is not as good

00:13:18,560 --> 00:13:22,079
and in many cases they just leave the

00:13:21,600 --> 00:13:25,120
dumped

00:13:22,079 --> 00:13:27,519
data file on the production environment

00:13:25,120 --> 00:13:28,639
publicly accessible i cannot tell you

00:13:27,519 --> 00:13:31,760
how many times i

00:13:28,639 --> 00:13:35,200
found these kinds of dumps that

00:13:31,760 --> 00:13:37,600
basically gave me everything i needed

00:13:35,200 --> 00:13:38,639
even though the system themselves the

00:13:37,600 --> 00:13:41,839
code was

00:13:38,639 --> 00:13:42,959
built very securely everything was in

00:13:41,839 --> 00:13:45,760
place

00:13:42,959 --> 00:13:46,240
but they gave me a present uh in the

00:13:45,760 --> 00:13:49,440
form

00:13:46,240 --> 00:13:50,320
of a wrapped up database with all of the

00:13:49,440 --> 00:13:53,519
customer

00:13:50,320 --> 00:13:56,160
information another thing that

00:13:53,519 --> 00:13:57,760
that we see in many cases when one

00:13:56,160 --> 00:14:00,160
company is being moved

00:13:57,760 --> 00:14:02,560
is being bought by a larger corporation

00:14:00,160 --> 00:14:04,480
is being merged into another operation

00:14:02,560 --> 00:14:06,320
they are moving their infrastructure so

00:14:04,480 --> 00:14:09,360
they are creating

00:14:06,320 --> 00:14:12,240
uh migration pipelines to get

00:14:09,360 --> 00:14:12,720
data from one place to another until

00:14:12,240 --> 00:14:15,519
they

00:14:12,720 --> 00:14:16,399
drain it out and close it and in many

00:14:15,519 --> 00:14:19,920
cases

00:14:16,399 --> 00:14:24,000
these pipelines are not secure or

00:14:19,920 --> 00:14:26,160
they are just left open so

00:14:24,000 --> 00:14:28,000
we can see everything inside what

00:14:26,160 --> 00:14:30,959
happened in ecuador for example there

00:14:28,000 --> 00:14:34,320
was a huge hadoop cluster

00:14:30,959 --> 00:14:38,320
that moved data from government

00:14:34,320 --> 00:14:41,600
server servers to different servers

00:14:38,320 --> 00:14:44,160
and this hadoop cluster was open so

00:14:41,600 --> 00:14:46,240
all of the migration data was exposed

00:14:44,160 --> 00:14:47,199
with all of the very very private

00:14:46,240 --> 00:14:50,880
information of

00:14:47,199 --> 00:14:54,000
all the citizens of ecuador so

00:14:50,880 --> 00:14:55,279
finish with the migration close it doing

00:14:54,000 --> 00:14:58,800
the migration

00:14:55,279 --> 00:15:00,320
protect it number four and this is a

00:14:58,800 --> 00:15:03,120
personal favorite

00:15:00,320 --> 00:15:03,120
code management

00:15:03,519 --> 00:15:08,720
in many cases the

00:15:06,880 --> 00:15:10,160
initial design it doesn't have to be of

00:15:08,720 --> 00:15:13,199
the main system but

00:15:10,160 --> 00:15:16,560
even an internal system

00:15:13,199 --> 00:15:19,920
a crm system to manage

00:15:16,560 --> 00:15:22,240
customer contacts or whatever is written

00:15:19,920 --> 00:15:23,600
in a less professional way and the

00:15:22,240 --> 00:15:26,079
directory structure

00:15:23,600 --> 00:15:27,680
puts the public directory on the root

00:15:26,079 --> 00:15:31,120
directory

00:15:27,680 --> 00:15:33,839
now one of my scanners is scanning for

00:15:31,120 --> 00:15:34,720
git directories or svn directories or

00:15:33,839 --> 00:15:38,839
any other

00:15:34,720 --> 00:15:42,160
code management repositories

00:15:38,839 --> 00:15:45,440
basically when i found find one

00:15:42,160 --> 00:15:48,480
i just dump everything and i have

00:15:45,440 --> 00:15:51,839
all of the structure all of the code

00:15:48,480 --> 00:15:53,120
and in many cases also history looking

00:15:51,839 --> 00:15:57,279
at

00:15:53,120 --> 00:16:00,000
repository configuration file can reveal

00:15:57,279 --> 00:16:00,720
more information like developer emails

00:16:00,000 --> 00:16:04,000
sometimes

00:16:00,720 --> 00:16:08,000
passwords sometimes more endpoints that

00:16:04,000 --> 00:16:11,519
are accessible from outside

00:16:08,000 --> 00:16:14,639
so it's a lot of fun and

00:16:11,519 --> 00:16:17,759
just in india today

00:16:14,639 --> 00:16:18,639
there are over 20 000 systems with

00:16:17,759 --> 00:16:22,079
exposed

00:16:18,639 --> 00:16:25,519
git directories in israel

00:16:22,079 --> 00:16:28,720
the number is in the hundreds

00:16:25,519 --> 00:16:30,880
so looking for some fun look for expo

00:16:28,720 --> 00:16:33,279
git directories looking to protect your

00:16:30,880 --> 00:16:37,040
data move the public directory

00:16:33,279 --> 00:16:39,360
from your root so the code management

00:16:37,040 --> 00:16:41,680
will not be exposed

00:16:39,360 --> 00:16:42,480
also if you are running your own gitlab

00:16:41,680 --> 00:16:44,560
for example

00:16:42,480 --> 00:16:45,920
for your own company make sure you

00:16:44,560 --> 00:16:50,480
understand how it

00:16:45,920 --> 00:16:53,680
works for example in many git gitlabs in

00:16:50,480 --> 00:16:56,320
installations even those who require

00:16:53,680 --> 00:16:58,720
a username and password you can just go

00:16:56,320 --> 00:17:01,759
to slash explore

00:16:58,720 --> 00:17:05,039
and see a lot of repositories

00:17:01,759 --> 00:17:08,079
that are there you can also register

00:17:05,039 --> 00:17:11,360
if it is not blocked so

00:17:08,079 --> 00:17:14,240
just by registering to an organization

00:17:11,360 --> 00:17:16,559
to an open git lab you can gain access

00:17:14,240 --> 00:17:19,439
to a lot of private repositories

00:17:16,559 --> 00:17:21,280
that you should not have access to in

00:17:19,439 --> 00:17:24,400
the first place

00:17:21,280 --> 00:17:29,520
another code management

00:17:24,400 --> 00:17:32,080
wall is code dumps we talked about data

00:17:29,520 --> 00:17:32,559
data dumps code dumps are basically the

00:17:32,080 --> 00:17:36,160
same

00:17:32,559 --> 00:17:39,120
lazy developers uploading codes or

00:17:36,160 --> 00:17:40,000
packing code in order to download it and

00:17:39,120 --> 00:17:43,600
leaving it

00:17:40,000 --> 00:17:46,799
with a silly name like backup.gz

00:17:43,600 --> 00:17:51,039
or backup zip or buck.zip

00:17:46,799 --> 00:17:54,160
or any other variation

00:17:51,039 --> 00:17:55,520
of what you would expect a lazy

00:17:54,160 --> 00:17:58,960
developer to call

00:17:55,520 --> 00:18:03,200
a packed version of the entire code now

00:17:58,960 --> 00:18:06,400
this in many cases include

00:18:03,200 --> 00:18:09,520
customer information because it

00:18:06,400 --> 00:18:10,320
packs everything it includes environment

00:18:09,520 --> 00:18:13,919
files

00:18:10,320 --> 00:18:15,280
with passwords and keys and a lot of

00:18:13,919 --> 00:18:19,039
other information that is

00:18:15,280 --> 00:18:22,960
always fun so the code repository

00:18:19,039 --> 00:18:26,840
must be protected at least

00:18:22,960 --> 00:18:28,160
or even more than your production

00:18:26,840 --> 00:18:30,880
environment

00:18:28,160 --> 00:18:32,960
number five is saving money in the wrong

00:18:30,880 --> 00:18:36,320
places

00:18:32,960 --> 00:18:39,520
if we take the lovely

00:18:36,320 --> 00:18:41,520
network diagram that we took that we saw

00:18:39,520 --> 00:18:42,720
earlier we have our production

00:18:41,520 --> 00:18:45,679
environment and

00:18:42,720 --> 00:18:47,120
suddenly there is a very very important

00:18:45,679 --> 00:18:50,240
marketing effort

00:18:47,120 --> 00:18:52,480
that needs to be taken online on

00:18:50,240 --> 00:18:56,080
thursday at six o'clock

00:18:52,480 --> 00:18:59,039
so the lazy developers the lazy devops

00:18:56,080 --> 00:18:59,679
takes the server puts it inside the vpc

00:18:59,039 --> 00:19:01,840
and

00:18:59,679 --> 00:19:04,240
puts another load balancer on top of it

00:19:01,840 --> 00:19:06,799
and this server connects directly

00:19:04,240 --> 00:19:08,559
to the database with all of the

00:19:06,799 --> 00:19:12,160
production information

00:19:08,559 --> 00:19:15,360
now you'd say who will do such a thing

00:19:12,160 --> 00:19:18,400
a small company called amadeus

00:19:15,360 --> 00:19:22,400
who runs approximately

00:19:18,400 --> 00:19:24,640
500 millions of

00:19:22,400 --> 00:19:26,000
reservation i don't remember if it's

00:19:24,640 --> 00:19:29,520
each month or each year

00:19:26,000 --> 00:19:32,080
but it's a lot of data they had a very

00:19:29,520 --> 00:19:34,799
very good production environment

00:19:32,080 --> 00:19:35,919
and a very very bad marketing website

00:19:34,799 --> 00:19:38,799
through this market

00:19:35,919 --> 00:19:40,080
marketing through this marketing website

00:19:38,799 --> 00:19:44,080
who set on top of the

00:19:40,080 --> 00:19:46,960
same production database

00:19:44,080 --> 00:19:48,960
hackers were able to access the

00:19:46,960 --> 00:19:51,440
production database

00:19:48,960 --> 00:19:52,320
while bypassing all of the very

00:19:51,440 --> 00:19:57,039
expensive

00:19:52,320 --> 00:19:57,039
protections put in by amadeus

00:19:57,600 --> 00:20:04,080
in many cases the marketing website

00:20:00,880 --> 00:20:07,679
or any other minor

00:20:04,080 --> 00:20:08,320
system is being outsourced many times to

00:20:07,679 --> 00:20:11,919
drunk

00:20:08,320 --> 00:20:15,120
limous and these people

00:20:11,919 --> 00:20:18,640
are paid peanuts

00:20:15,120 --> 00:20:21,120
and perform like monkeys the code

00:20:18,640 --> 00:20:22,480
is not secure and the fact that you

00:20:21,120 --> 00:20:24,559
invest all of this money

00:20:22,480 --> 00:20:26,640
to protect your environment and then

00:20:24,559 --> 00:20:30,880
putting in a drunk lemur

00:20:26,640 --> 00:20:33,440
to take all of this data outside

00:20:30,880 --> 00:20:34,080
it's just not worth it so make sure that

00:20:33,440 --> 00:20:36,559
all

00:20:34,080 --> 00:20:37,360
of your properties are properly

00:20:36,559 --> 00:20:40,960
developed

00:20:37,360 --> 00:20:42,960
properly audited before putting them on

00:20:40,960 --> 00:20:44,960
the production environment and

00:20:42,960 --> 00:20:48,000
separate your production environment

00:20:44,960 --> 00:20:50,799
from your marketing environment

00:20:48,000 --> 00:20:52,960
another fun thing that we do is look at

00:20:50,799 --> 00:20:56,720
bad resource management

00:20:52,960 --> 00:20:58,960
you have a website and you have

00:20:56,720 --> 00:21:02,000
all of the images of the website and the

00:20:58,960 --> 00:21:05,280
icons and you put it in a bucket

00:21:02,000 --> 00:21:07,280
this bucket which

00:21:05,280 --> 00:21:08,400
can be accessible with a cdn this is

00:21:07,280 --> 00:21:11,360
very good practice

00:21:08,400 --> 00:21:13,120
it reduces the load from your system it

00:21:11,360 --> 00:21:15,200
increases the performance that your

00:21:13,120 --> 00:21:19,039
users enjoy

00:21:15,200 --> 00:21:22,159
but if done improperly can expose you

00:21:19,039 --> 00:21:25,280
to additional risks for example

00:21:22,159 --> 00:21:28,320
using the same bucket for your

00:21:25,280 --> 00:21:31,520
images and icons and your

00:21:28,320 --> 00:21:34,720
management reports

00:21:31,520 --> 00:21:35,760
sounds like a good idea no how many

00:21:34,720 --> 00:21:37,520
buckets

00:21:35,760 --> 00:21:38,960
are there with this kind of

00:21:37,520 --> 00:21:42,720
configurations

00:21:38,960 --> 00:21:42,720
hundreds of thousands

00:21:43,600 --> 00:21:47,520
another common mistake is

00:21:47,679 --> 00:21:55,039
exposing the bucket or the cloud storage

00:21:51,360 --> 00:21:58,960
that is holding this information with uh

00:21:55,039 --> 00:22:02,240
what is equivalent to directory listing

00:21:58,960 --> 00:22:04,559
and while having a cdn load the files

00:22:02,240 --> 00:22:08,720
from the cloud storage

00:22:04,559 --> 00:22:11,280
still allow access to the cloud storage

00:22:08,720 --> 00:22:12,720
so when using cloud storage buckets or

00:22:11,280 --> 00:22:16,320
whatever you use

00:22:12,720 --> 00:22:18,799
make sure it is at least as secure

00:22:16,320 --> 00:22:20,640
as the rest of your servers never allow

00:22:18,799 --> 00:22:23,760
direct access to it

00:22:20,640 --> 00:22:25,919
best practice by the way is to

00:22:23,760 --> 00:22:27,280
all of the pii all of the reports all of

00:22:25,919 --> 00:22:29,679
the sensitive information

00:22:27,280 --> 00:22:31,760
to be accessible only through your code

00:22:29,679 --> 00:22:34,480
and not through cdn although it sounds

00:22:31,760 --> 00:22:36,640
like a fun shortcut

00:22:34,480 --> 00:22:38,159
and make sure that the file names that

00:22:36,640 --> 00:22:41,200
you use

00:22:38,159 --> 00:22:45,520
are not lazy use

00:22:41,200 --> 00:22:48,880
unique ids uh don't put the user id

00:22:45,520 --> 00:22:51,280
or any other auto increment number

00:22:48,880 --> 00:22:52,960
on the files because so many systems are

00:22:51,280 --> 00:22:54,480
doing it and so many systems are

00:22:52,960 --> 00:22:58,799
exposing

00:22:54,480 --> 00:23:01,840
their users to this kind of mistreatment

00:22:58,799 --> 00:23:04,960
a fun thing we learned with the

00:23:01,840 --> 00:23:06,159
twitter hack that happened earlier this

00:23:04,960 --> 00:23:09,360
year

00:23:06,159 --> 00:23:12,000
is that communication

00:23:09,360 --> 00:23:14,799
between the development teams is very

00:23:12,000 --> 00:23:14,799
very important

00:23:15,840 --> 00:23:23,600
in order to secure a lot of your systems

00:23:20,320 --> 00:23:26,720
it is very wise to invest in

00:23:23,600 --> 00:23:28,240
optic training to all of the employees

00:23:26,720 --> 00:23:30,240
and i'm not talking only about

00:23:28,240 --> 00:23:33,280
developers but also

00:23:30,240 --> 00:23:36,960
for management

00:23:33,280 --> 00:23:40,240
logistics operations finance

00:23:36,960 --> 00:23:41,440
everyone who has access to client

00:23:40,240 --> 00:23:44,720
information

00:23:41,440 --> 00:23:49,679
must at least be aware of the

00:23:44,720 --> 00:23:51,840
optic dangers that they may face

00:23:49,679 --> 00:23:53,039
so if a developer gets a call in the

00:23:51,840 --> 00:23:56,159
middle of the night

00:23:53,039 --> 00:23:58,880
or gets a text saying hey i forgot the

00:23:56,159 --> 00:24:01,919
password to the bi server

00:23:58,880 --> 00:24:05,120
they need to know they should never

00:24:01,919 --> 00:24:09,360
give this this information even

00:24:05,120 --> 00:24:11,600
if it's the best friend texting them

00:24:09,360 --> 00:24:12,960
because they don't know if it is the

00:24:11,600 --> 00:24:15,919
friend so by

00:24:12,960 --> 00:24:18,320
having policies saying never ever ever

00:24:15,919 --> 00:24:21,919
send passwords

00:24:18,320 --> 00:24:24,640
you reduce the risk of an employee

00:24:21,919 --> 00:24:25,919
allowing access to your secure

00:24:24,640 --> 00:24:29,840
environment

00:24:25,919 --> 00:24:33,840
having better two-factor authentication

00:24:29,840 --> 00:24:33,840
for employees is a bonus

00:24:34,080 --> 00:24:37,760
but if employees don't know what they

00:24:36,400 --> 00:24:41,279
should be aware of

00:24:37,760 --> 00:24:44,559
they will obviously

00:24:41,279 --> 00:24:48,000
be more susceptible to leaking

00:24:44,559 --> 00:24:49,840
information they should not also for

00:24:48,000 --> 00:24:51,039
chat services if you use slack if you

00:24:49,840 --> 00:24:55,200
use any other

00:24:51,039 --> 00:24:58,480
internal communication think really hard

00:24:55,200 --> 00:25:02,720
do you need to save everything

00:24:58,480 --> 00:25:02,720
forever while it's fun

00:25:02,960 --> 00:25:08,400
having someone access to the entire chat

00:25:05,679 --> 00:25:11,679
history of your entire development team

00:25:08,400 --> 00:25:15,200
may not be the best idea

00:25:11,679 --> 00:25:16,559
number eight also a fun one unrefined

00:25:15,200 --> 00:25:18,400
permissions

00:25:16,559 --> 00:25:20,400
if you remember earlier this year the

00:25:18,400 --> 00:25:23,039
entire voter registration

00:25:20,400 --> 00:25:24,559
information for the every citizen in

00:25:23,039 --> 00:25:27,440
israel was leaked

00:25:24,559 --> 00:25:29,039
why did it happen it was because that

00:25:27,440 --> 00:25:31,840
the credentials

00:25:29,039 --> 00:25:33,360
used by the application developed by

00:25:31,840 --> 00:25:36,480
electo

00:25:33,360 --> 00:25:36,880
was good permissions it gave access to

00:25:36,480 --> 00:25:40,080
their

00:25:36,880 --> 00:25:43,919
entire aws account

00:25:40,080 --> 00:25:47,039
including everything user management

00:25:43,919 --> 00:25:50,480
rds files servers

00:25:47,039 --> 00:25:53,600
load balancers everything

00:25:50,480 --> 00:25:56,640
when you need to perform a specific task

00:25:53,600 --> 00:26:00,480
you need to think about security and add

00:25:56,640 --> 00:26:03,520
a very very refined role otherwise

00:26:00,480 --> 00:26:06,159
you are exposing yourself to

00:26:03,520 --> 00:26:08,559
things like the entire voter registry of

00:26:06,159 --> 00:26:08,559
israel

00:26:09,360 --> 00:26:17,360
you need to never use root permissions

00:26:14,400 --> 00:26:18,400
you need to put measures in place to

00:26:17,360 --> 00:26:21,120
prevent

00:26:18,400 --> 00:26:21,679
the usage of root permissions and report

00:26:21,120 --> 00:26:24,080
it

00:26:21,679 --> 00:26:24,799
so you will be at least aware that

00:26:24,080 --> 00:26:29,520
someone is

00:26:24,799 --> 00:26:32,480
trying to bypass your policies so

00:26:29,520 --> 00:26:34,159
when talking about permissions the less

00:26:32,480 --> 00:26:35,760
the better

00:26:34,159 --> 00:26:37,520
common mistake number nine which is

00:26:35,760 --> 00:26:39,200
closely related to common mistake number

00:26:37,520 --> 00:26:42,400
10 that we'll see shortly

00:26:39,200 --> 00:26:46,640
is the 30 centimeter vulnerability which

00:26:42,400 --> 00:26:50,960
is the length that the user

00:26:46,640 --> 00:26:53,840
is sitting near the screen users

00:26:50,960 --> 00:26:56,480
internal users in many cases are your

00:26:53,840 --> 00:26:59,679
worst enemies

00:26:56,480 --> 00:27:02,559
so like you don't trust anyone

00:26:59,679 --> 00:27:03,600
outside of the organization thinking

00:27:02,559 --> 00:27:06,159
about security

00:27:03,600 --> 00:27:07,760
leads you to never trust anyone inside

00:27:06,159 --> 00:27:10,720
the organization as well

00:27:07,760 --> 00:27:11,520
so without good endpoint security

00:27:10,720 --> 00:27:13,440
installed

00:27:11,520 --> 00:27:15,840
on the machines of everyone in the

00:27:13,440 --> 00:27:17,600
organization you will never know that

00:27:15,840 --> 00:27:20,799
something is happening

00:27:17,600 --> 00:27:25,120
without constantly monitoring

00:27:20,799 --> 00:27:27,520
anomalies in accessing your

00:27:25,120 --> 00:27:28,559
backend in accessing your files just to

00:27:27,520 --> 00:27:31,039
traffic even

00:27:28,559 --> 00:27:32,159
you will never know it without proper

00:27:31,039 --> 00:27:36,159
phishing protection

00:27:32,159 --> 00:27:37,840
on your own email servers

00:27:36,159 --> 00:27:40,320
you will never know someone is even

00:27:37,840 --> 00:27:43,840
trying to get the information

00:27:40,320 --> 00:27:46,240
out of your systems and without good

00:27:43,840 --> 00:27:46,880
social engineering training your

00:27:46,240 --> 00:27:49,200
employees

00:27:46,880 --> 00:27:51,440
will not be in a place to even report

00:27:49,200 --> 00:27:54,480
attempts to take your data

00:27:51,440 --> 00:27:57,279
so like you don't trust anyone

00:27:54,480 --> 00:27:58,000
that is outside of your network you

00:27:57,279 --> 00:28:01,600
should treat

00:27:58,000 --> 00:28:03,840
the internal of your network the same

00:28:01,600 --> 00:28:05,520
so my favorite part and this is common

00:28:03,840 --> 00:28:09,840
mistake number 10.

00:28:05,520 --> 00:28:09,840
we'll call it common bad judgment

00:28:10,559 --> 00:28:14,000
so bad judgment can be unintentional

00:28:13,279 --> 00:28:16,960
like

00:28:14,000 --> 00:28:17,760
the palestinian power company which had

00:28:16,960 --> 00:28:19,679
a lovely

00:28:17,760 --> 00:28:22,000
administrative system which controlled

00:28:19,679 --> 00:28:25,039
the entire power distribution

00:28:22,000 --> 00:28:28,399
for the west bank and east

00:28:25,039 --> 00:28:31,520
jerusalem and what they had

00:28:28,399 --> 00:28:34,480
they had a lovely login page

00:28:31,520 --> 00:28:36,480
but you didn't have to go through it you

00:28:34,480 --> 00:28:39,760
can just go to the next

00:28:36,480 --> 00:28:42,720
step and be an administrator

00:28:39,760 --> 00:28:44,960
there was absolutely no check whether

00:28:42,720 --> 00:28:48,159
you are logged in or not

00:28:44,960 --> 00:28:50,640
to the back office so

00:28:48,159 --> 00:28:52,640
it's unintentional it's definitely a

00:28:50,640 --> 00:28:56,399
back door because it allowed access to

00:28:52,640 --> 00:28:58,720
all of the customer information um

00:28:56,399 --> 00:29:01,039
and it should not be there it's bad

00:28:58,720 --> 00:29:04,320
judgment

00:29:01,039 --> 00:29:07,360
another type of bad judgement

00:29:04,320 --> 00:29:09,360
is intentional front doors like happened

00:29:07,360 --> 00:29:11,279
in the electoral system which leaked the

00:29:09,360 --> 00:29:15,520
entire israeli voter

00:29:11,279 --> 00:29:17,679
registration what happened there

00:29:15,520 --> 00:29:19,440
there was an end point that you would

00:29:17,679 --> 00:29:22,320
call this endpoint

00:29:19,440 --> 00:29:24,080
appeared on the client side code and

00:29:22,320 --> 00:29:27,200
once you called it you got the

00:29:24,080 --> 00:29:30,240
entire configuration file which included

00:29:27,200 --> 00:29:34,080
private keys private root keys as

00:29:30,240 --> 00:29:37,440
we saw before administrator

00:29:34,080 --> 00:29:40,320
phone numbers passwords

00:29:37,440 --> 00:29:42,640
other backdoors that were there so

00:29:40,320 --> 00:29:45,360
calling it a back door

00:29:42,640 --> 00:29:46,960
not really accurate it's literally

00:29:45,360 --> 00:29:49,360
leaving your front door open

00:29:46,960 --> 00:29:50,240
and spreading out leaflets all around

00:29:49,360 --> 00:29:53,440
town

00:29:50,240 --> 00:29:56,480
welcoming people to take your data

00:29:53,440 --> 00:29:59,120
another common bad judgment is just

00:29:56,480 --> 00:30:01,440
hull coding keys or exposing keys in

00:29:59,120 --> 00:30:03,679
client-facing codes

00:30:01,440 --> 00:30:05,440
it can be your javascript code that is

00:30:03,679 --> 00:30:06,799
accessible to clients sometimes even

00:30:05,440 --> 00:30:10,880
your html code

00:30:06,799 --> 00:30:14,000
and it can be your apk your android

00:30:10,880 --> 00:30:16,640
package that we found

00:30:14,000 --> 00:30:17,279
credit card information hard coded

00:30:16,640 --> 00:30:20,399
inside

00:30:17,279 --> 00:30:22,559
the apk when we contacted

00:30:20,399 --> 00:30:25,520
the company that expose it they told us

00:30:22,559 --> 00:30:30,080
yeah it belongs to our ceo

00:30:25,520 --> 00:30:33,039
so don't expose

00:30:30,080 --> 00:30:34,559
any uh keys or authentication methods on

00:30:33,039 --> 00:30:39,520
your client facing code because

00:30:34,559 --> 00:30:39,520
curious people will want to see it

00:30:39,760 --> 00:30:44,399
uploading your keys to public

00:30:42,720 --> 00:30:47,679
repositories

00:30:44,399 --> 00:30:48,320
there's a very good company here in

00:30:47,679 --> 00:30:51,440
israel

00:30:48,320 --> 00:30:54,799
who is managing some of the code

00:30:51,440 --> 00:30:57,919
as open source now

00:30:54,799 --> 00:31:00,799
it takes seconds between

00:30:57,919 --> 00:31:02,000
a mistake made by made by a developer

00:31:00,799 --> 00:31:05,679
that uploaded

00:31:02,000 --> 00:31:11,360
the aws keys or google cloud keys

00:31:05,679 --> 00:31:11,360
to github and the time it was used

00:31:11,760 --> 00:31:17,679
you go to lunch you go back you have

00:31:14,799 --> 00:31:18,559
a cloud bill of ten thousand dollars and

00:31:17,679 --> 00:31:21,600
growing

00:31:18,559 --> 00:31:22,480
just because one developer uploaded the

00:31:21,600 --> 00:31:25,679
keys

00:31:22,480 --> 00:31:27,200
so having good ci cd processors having

00:31:25,679 --> 00:31:30,480
good code management having

00:31:27,200 --> 00:31:33,919
filters and warnings before pushing

00:31:30,480 --> 00:31:35,919
your code to any repo doesn't have to be

00:31:33,919 --> 00:31:39,120
public it can even be private

00:31:35,919 --> 00:31:42,720
is always a good idea fail your code

00:31:39,120 --> 00:31:43,919
if it exposes any information that

00:31:42,720 --> 00:31:46,559
should not be there

00:31:43,919 --> 00:31:47,120
and it will pay off there's also

00:31:46,559 --> 00:31:50,320
something

00:31:47,120 --> 00:31:52,320
called cold smell cold smell when you're

00:31:50,320 --> 00:31:55,200
a developer for enough time

00:31:52,320 --> 00:31:58,000
you look at the code and you know

00:31:55,200 --> 00:32:00,080
something is wrong with it

00:31:58,000 --> 00:32:02,559
in the israeli prison service for

00:32:00,080 --> 00:32:02,559
example

00:32:03,519 --> 00:32:10,159
just by looking at the code you saw

00:32:06,559 --> 00:32:13,440
something smells

00:32:10,159 --> 00:32:17,760
the first function a developer writes

00:32:13,440 --> 00:32:20,080
they put their name on it david

00:32:17,760 --> 00:32:21,919
the second function will do what the

00:32:20,080 --> 00:32:25,279
function does

00:32:21,919 --> 00:32:30,480
like read document

00:32:25,279 --> 00:32:34,000
or whatever the israeli prison services

00:32:30,480 --> 00:32:38,000
system the function was called david

00:32:34,000 --> 00:32:41,039
and any developer looking at such a code

00:32:38,000 --> 00:32:42,000
knows that this system is leaking and

00:32:41,039 --> 00:32:45,120
this system is leaking

00:32:42,000 --> 00:32:47,120
so bad it can take up to 30 seconds to

00:32:45,120 --> 00:32:50,399
get all the information inside

00:32:47,120 --> 00:32:53,679
now what happens though it didn't end

00:32:50,399 --> 00:32:56,240
with a function name named david it gave

00:32:53,679 --> 00:32:59,640
direct access to the database

00:32:56,240 --> 00:33:03,039
with the plain text text passwords being

00:32:59,640 --> 00:33:04,799
123 for the administrator of the israeli

00:33:03,039 --> 00:33:07,519
prison service

00:33:04,799 --> 00:33:08,320
and from there it took one click to

00:33:07,519 --> 00:33:10,960
download

00:33:08,320 --> 00:33:12,559
thousands and thousands of very private

00:33:10,960 --> 00:33:15,919
and sensitive information

00:33:12,559 --> 00:33:19,840
of israel prison services employees

00:33:15,919 --> 00:33:24,960
other security organizations credentials

00:33:19,840 --> 00:33:27,919
documents private medical information

00:33:24,960 --> 00:33:29,039
and just because one developer called

00:33:27,919 --> 00:33:32,159
the function

00:33:29,039 --> 00:33:35,360
david so

00:33:32,159 --> 00:33:38,399
make sure that you do proper reviews

00:33:35,360 --> 00:33:40,240
to prevent this common

00:33:38,399 --> 00:33:42,159
everything we discussed here can be

00:33:40,240 --> 00:33:45,600
prevented by having

00:33:42,159 --> 00:33:48,960
proper policies proper reviews

00:33:45,600 --> 00:33:52,080
and proper audits of everything

00:33:48,960 --> 00:33:53,039
you are doing by following very simple

00:33:52,080 --> 00:33:55,600
guidelines

00:33:53,039 --> 00:33:57,039
you can protect yourself your company

00:33:55,600 --> 00:34:01,679
and your customers

00:33:57,039 --> 00:34:04,720
data so to sum up uh

00:34:01,679 --> 00:34:07,840
opsec is not complicated

00:34:04,720 --> 00:34:07,840
opsec is boring

00:34:08,240 --> 00:34:16,240
it's much more fun to develop new things

00:34:12,079 --> 00:34:19,599
to run forward to to create

00:34:16,240 --> 00:34:22,079
but it is less secure so by following

00:34:19,599 --> 00:34:24,960
protocols by setting protocols

00:34:22,079 --> 00:34:26,960
and making sure everyone in the company

00:34:24,960 --> 00:34:30,960
from the first developer

00:34:26,960 --> 00:34:34,000
to the last cleaning person

00:34:30,960 --> 00:34:36,800
follow these protocols you will protect

00:34:34,000 --> 00:34:39,280
yourself you will protect your company

00:34:36,800 --> 00:34:49,839
and you will protect your customers

00:34:39,280 --> 00:34:49,839
thank you very much

00:34:56,879 --> 00:35:03,359
hey rotten noah thank you very much

00:35:00,160 --> 00:35:06,880
it was an awesome talk

00:35:03,359 --> 00:35:09,599
like and now after describing

00:35:06,880 --> 00:35:11,119
the most widely spread industry

00:35:09,599 --> 00:35:14,839
standards

00:35:11,119 --> 00:35:17,599
they're really all over we got a

00:35:14,839 --> 00:35:19,920
question what did you find helpful

00:35:17,599 --> 00:35:22,800
to make developers successful in terms

00:35:19,920 --> 00:35:26,400
of security topics

00:35:22,800 --> 00:35:29,040
so for my experience and i've been doing

00:35:26,400 --> 00:35:29,040
it for a while

00:35:29,599 --> 00:35:36,079
education education is the key

00:35:32,720 --> 00:35:39,599
um tell your developers

00:35:36,079 --> 00:35:41,359
how to hack so they know how to protect

00:35:39,599 --> 00:35:43,760
themselves from being hacked

00:35:41,359 --> 00:35:44,560
if they are not aware of specific

00:35:43,760 --> 00:35:46,720
techniques

00:35:44,560 --> 00:35:48,720
if they are not aware of specific

00:35:46,720 --> 00:35:51,200
technologies

00:35:48,720 --> 00:35:52,000
if they are not aware of specific

00:35:51,200 --> 00:35:55,040
attacks

00:35:52,000 --> 00:35:58,640
when they develop code they will fail

00:35:55,040 --> 00:35:59,760
the code will fail and the data will be

00:35:58,640 --> 00:36:03,440
exposed

00:35:59,760 --> 00:36:06,320
so it's really not a big investment

00:36:03,440 --> 00:36:06,320
a few hours

00:36:07,200 --> 00:36:13,920
teach your developers to hack

00:36:10,640 --> 00:36:17,119
it will uh obviously

00:36:13,920 --> 00:36:20,160
uh produce better code later and

00:36:17,119 --> 00:36:20,800
they will also notice things that are

00:36:20,160 --> 00:36:22,560
currently

00:36:20,800 --> 00:36:24,000
going unnoticed they will start to

00:36:22,560 --> 00:36:27,839
report things

00:36:24,000 --> 00:36:30,000
uh that they are not reporting today

00:36:27,839 --> 00:36:32,079
uh they will start to see things in

00:36:30,000 --> 00:36:32,320
other systems maybe third party systems

00:36:32,079 --> 00:36:35,359
that

00:36:32,320 --> 00:36:37,760
endanger your data uh so

00:36:35,359 --> 00:36:39,599
if you ask me the one thing you need to

00:36:37,760 --> 00:36:45,119
do to protect your

00:36:39,599 --> 00:36:45,119
your system educate your developers

00:36:46,400 --> 00:36:50,320
yeah i will add that it should be not

00:36:48,400 --> 00:36:53,599
only developers but also

00:36:50,320 --> 00:36:54,160
operators and all staff that has all

00:36:53,599 --> 00:36:56,880
access

00:36:54,160 --> 00:36:57,599
because we know a lot of very fun

00:36:56,880 --> 00:37:00,720
stories

00:36:57,599 --> 00:37:02,160
of cleaning managers and other people

00:37:00,720 --> 00:37:04,320
who had full access

00:37:02,160 --> 00:37:05,200
to server rooms so yeah thank you very

00:37:04,320 --> 00:37:08,880
much

00:37:05,200 --> 00:37:18,240
uh it was super nice and

00:37:08,880 --> 00:37:18,240

YouTube URL: https://www.youtube.com/watch?v=z9tL04JWOJU


