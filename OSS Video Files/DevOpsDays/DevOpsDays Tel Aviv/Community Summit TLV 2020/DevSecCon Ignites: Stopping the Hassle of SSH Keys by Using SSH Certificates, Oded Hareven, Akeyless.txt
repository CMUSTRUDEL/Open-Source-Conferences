Title: DevSecCon Ignites: Stopping the Hassle of SSH Keys by Using SSH Certificates, Oded Hareven, Akeyless
Publication date: 2020-12-21
Playlist: Community Summit TLV 2020
Description: 
	COMMUNITY SUMMIT TLV - DEVSECCON TRACK

SSH Keys are known to be a major operational burden, either because of the constant provisioning to target hosts or due to SSH keys that went lost (not to mention employees that took their private keys with them after they left the company…) In this session you’ll learn how to eliminate the need for ssh-keys by using ssh-certificates which in order to profoundly improve efficiency and significantly increase your workloads security posture with just-in-time access and audit.
Captions: 
	00:00:02,880 --> 00:00:05,940
[Music]

00:00:13,519 --> 00:00:19,279
and the next one

00:00:15,599 --> 00:00:22,560
is all dead from

00:00:19,279 --> 00:00:25,920
the other company and showing us

00:00:22,560 --> 00:00:27,439
how to stop the eso of ssh is by using

00:00:25,920 --> 00:00:30,560
ssh certificates

00:00:27,439 --> 00:00:31,279
and i give your slides and everyone you

00:00:30,560 --> 00:00:34,239
know

00:00:31,279 --> 00:00:34,640
go on okay thank andre thank you very

00:00:34,239 --> 00:00:36,399
much

00:00:34,640 --> 00:00:37,680
guys happy to be here with you my name

00:00:36,399 --> 00:00:38,719
is oded i'm the ceo and the co-founder

00:00:37,680 --> 00:00:40,320
of achilles

00:00:38,719 --> 00:00:41,920
uh evolved platform for secrets

00:00:40,320 --> 00:00:43,840
management and remote access

00:00:41,920 --> 00:00:45,680
um so we're gonna talk to you about uh

00:00:43,840 --> 00:00:48,800
stopping the hassle of ssh keys

00:00:45,680 --> 00:00:50,160
by using ssh certificates so why what's

00:00:48,800 --> 00:00:51,440
so bad with ssh keys

00:00:50,160 --> 00:00:52,960
right you need to take care of them

00:00:51,440 --> 00:00:53,680
actually that's the that's uh that's a

00:00:52,960 --> 00:00:55,520
real problem

00:00:53,680 --> 00:00:57,840
you need to provision to de-provision

00:00:55,520 --> 00:00:59,359
them uh you need to you know take care

00:00:57,840 --> 00:00:59,840
of it whenever your new employee coming

00:00:59,359 --> 00:01:02,000
up

00:00:59,840 --> 00:01:03,680
team member that leaves the company uh

00:01:02,000 --> 00:01:05,840
any resource that is there you need to

00:01:03,680 --> 00:01:06,320
provision uh the ssh public key and so

00:01:05,840 --> 00:01:08,400
on

00:01:06,320 --> 00:01:09,920
and the best part or the worst part is

00:01:08,400 --> 00:01:11,280
that whenever you have any regulations

00:01:09,920 --> 00:01:13,280
taught on compliance whatever you need

00:01:11,280 --> 00:01:14,240
to do some kind of cleanup projects and

00:01:13,280 --> 00:01:17,600
you don't know

00:01:14,240 --> 00:01:19,119
exactly who has whatever ssh key pair

00:01:17,600 --> 00:01:20,479
that you might have within your linux

00:01:19,119 --> 00:01:22,960
server anything

00:01:20,479 --> 00:01:24,799
so if someone loses it again and again

00:01:22,960 --> 00:01:26,880
there's a problem this is security wise

00:01:24,799 --> 00:01:28,640
you need to take care of you know stolen

00:01:26,880 --> 00:01:30,240
cases where someone has such keys you

00:01:28,640 --> 00:01:32,720
not necessarily know exactly

00:01:30,240 --> 00:01:33,680
where those public keys are in terms of

00:01:32,720 --> 00:01:35,200
audit ability

00:01:33,680 --> 00:01:36,640
you don't necessarily know who did what

00:01:35,200 --> 00:01:37,439
because there are the phenomena of

00:01:36,640 --> 00:01:40,479
shared

00:01:37,439 --> 00:01:43,439
uh ssh keys with a team

00:01:40,479 --> 00:01:43,920
um so and obviously right uh it's a

00:01:43,439 --> 00:01:45,520
problem

00:01:43,920 --> 00:01:47,680
uh basically when they are being stolen

00:01:45,520 --> 00:01:49,040
you can't really know exactly when

00:01:47,680 --> 00:01:51,360
so you won't necessarily know that

00:01:49,040 --> 00:01:52,960
sometimes sometimes those ssh keys were

00:01:51,360 --> 00:01:53,759
stolen so the good part and the good

00:01:52,960 --> 00:01:56,079
news that there

00:01:53,759 --> 00:01:57,439
is a better way much better way that is

00:01:56,079 --> 00:02:00,159
currently being used by

00:01:57,439 --> 00:02:01,040
large brands uh such as the one that you

00:02:00,159 --> 00:02:04,000
see in front of you

00:02:01,040 --> 00:02:06,240
and those are being uh used in the last

00:02:04,000 --> 00:02:09,280
few years now so sshpk8

00:02:06,240 --> 00:02:10,399
was presented in open ssh 5.4 that was a

00:02:09,280 --> 00:02:13,280
long time ago

00:02:10,399 --> 00:02:15,280
uh but it seems like uh that although it

00:02:13,280 --> 00:02:17,360
does have some a lot of pros

00:02:15,280 --> 00:02:18,640
uh like as i've mentioned there's

00:02:17,360 --> 00:02:19,760
hassle-free right they are

00:02:18,640 --> 00:02:22,720
self-destructed

00:02:19,760 --> 00:02:24,400
ssh certificate they are they do not

00:02:22,720 --> 00:02:25,280
need to provision them or to do any deep

00:02:24,400 --> 00:02:27,040
provisioning

00:02:25,280 --> 00:02:28,560
uh they require a very simple line of

00:02:27,040 --> 00:02:29,760
configuration in order for you to do

00:02:28,560 --> 00:02:30,480
that and i'll show you some of that

00:02:29,760 --> 00:02:32,720
stuff

00:02:30,480 --> 00:02:34,720
and they are short-lived so they expire

00:02:32,720 --> 00:02:36,560
automatically so if you provide someone

00:02:34,720 --> 00:02:38,800
with an essay certificate

00:02:36,560 --> 00:02:40,000
it is only for a certain session now

00:02:38,800 --> 00:02:43,120
despite all of that

00:02:40,000 --> 00:02:45,040
good uh good stuff uh it seems that not

00:02:43,120 --> 00:02:47,440
everyone are using it and the reason

00:02:45,040 --> 00:02:48,480
most probably is because of a bad pr no

00:02:47,440 --> 00:02:51,519
one really pr

00:02:48,480 --> 00:02:52,800
very well css certificates and i think

00:02:51,519 --> 00:02:55,760
or it seems like

00:02:52,800 --> 00:02:57,920
it's as a result of having a need for

00:02:55,760 --> 00:03:01,120
having some understanding with pki

00:02:57,920 --> 00:03:03,040
uh but that's just uh old news guys

00:03:01,120 --> 00:03:05,120
it turned out to be very very much easy

00:03:03,040 --> 00:03:06,640
to start working with ssh certificate

00:03:05,120 --> 00:03:08,400
although it does require some

00:03:06,640 --> 00:03:10,159
understanding with the infrastructure

00:03:08,400 --> 00:03:11,760
i'll show you some of those open source

00:03:10,159 --> 00:03:12,319
uh solutions and i will provide you more

00:03:11,760 --> 00:03:15,440
links

00:03:12,319 --> 00:03:17,440
uh for you to further further uh go so

00:03:15,440 --> 00:03:19,840
just as a family already uh if you want

00:03:17,440 --> 00:03:22,800
to know better ssh certificate

00:03:19,840 --> 00:03:23,440
they are basically a file right that are

00:03:22,800 --> 00:03:25,920
saying

00:03:23,440 --> 00:03:26,560
who is the one that wishes to access

00:03:25,920 --> 00:03:28,799
okay

00:03:26,560 --> 00:03:29,920
uh who is the certificate authority that

00:03:28,799 --> 00:03:31,840
was signing

00:03:29,920 --> 00:03:34,000
that particular ssh certificate and

00:03:31,840 --> 00:03:36,080
number three uh what's the expiration

00:03:34,000 --> 00:03:37,599
how much time do i have to use uh with

00:03:36,080 --> 00:03:39,440
that ssh certificate

00:03:37,599 --> 00:03:41,120
and the best practice would be to have

00:03:39,440 --> 00:03:43,120
as short as you can

00:03:41,120 --> 00:03:44,959
there are two uh advanced features

00:03:43,120 --> 00:03:46,000
within a certificate that speak about

00:03:44,959 --> 00:03:48,400
the restrictions

00:03:46,000 --> 00:03:49,920
basically certificate can say that uh

00:03:48,400 --> 00:03:52,560
you are allowed to use only

00:03:49,920 --> 00:03:53,760
uh a certain local user or a cert run a

00:03:52,560 --> 00:03:55,680
certain commands

00:03:53,760 --> 00:03:57,120
but that's for more advanced privileged

00:03:55,680 --> 00:03:59,439
access scenarios and so on

00:03:57,120 --> 00:04:01,200
in terms of prerequisite to work with

00:03:59,439 --> 00:04:02,319
ssh certificate you would need to do two

00:04:01,200 --> 00:04:04,159
steps one

00:04:02,319 --> 00:04:06,000
is to set up a basic certificate

00:04:04,159 --> 00:04:08,080
authority you can do that with ssh

00:04:06,000 --> 00:04:11,360
keychain by the way it's very easy just

00:04:08,080 --> 00:04:14,000
as a very very easy to work with

00:04:11,360 --> 00:04:15,519
it's very basic and you also need to

00:04:14,000 --> 00:04:17,120
take care of your private keys

00:04:15,519 --> 00:04:18,639
okay you need to put it in whatever kms

00:04:17,120 --> 00:04:20,079
that you're using please don't forget

00:04:18,639 --> 00:04:23,759
about that otherwise it is

00:04:20,079 --> 00:04:25,840
all uh not very secure uh number two

00:04:23,759 --> 00:04:27,680
you need to configure your target host

00:04:25,840 --> 00:04:29,360
the server itself that you're trying to

00:04:27,680 --> 00:04:30,960
authenticate with to trust the

00:04:29,360 --> 00:04:32,400
certificate authority which is basically

00:04:30,960 --> 00:04:34,320
one configuration as i've mentioned

00:04:32,400 --> 00:04:36,080
trusted users certificate authority keys

00:04:34,320 --> 00:04:38,000
and that's the public key that the

00:04:36,080 --> 00:04:40,080
certificate authority was created so

00:04:38,000 --> 00:04:42,800
those are the prerequisites that's it

00:04:40,080 --> 00:04:43,440
and now how to login would look like as

00:04:42,800 --> 00:04:45,520
you can see

00:04:43,440 --> 00:04:46,560
a user which can be you or any one of

00:04:45,520 --> 00:04:49,280
your team members

00:04:46,560 --> 00:04:51,120
uh basically asks for a certificate from

00:04:49,280 --> 00:04:52,000
the certificate authority that you just

00:04:51,120 --> 00:04:53,840
installed

00:04:52,000 --> 00:04:56,080
that certificate authority would sign

00:04:53,840 --> 00:04:57,280
that request and would create for you a

00:04:56,080 --> 00:04:59,759
certificate

00:04:57,280 --> 00:05:00,720
that certificate will be uh provided

00:04:59,759 --> 00:05:03,759
then by you

00:05:00,720 --> 00:05:05,680
to the ssh the regular ssh command

00:05:03,759 --> 00:05:07,280
would be provided with uh ssh

00:05:05,680 --> 00:05:08,639
certificate directly to the target host

00:05:07,280 --> 00:05:10,080
the target host would be able to

00:05:08,639 --> 00:05:12,080
validate a certificate

00:05:10,080 --> 00:05:13,280
using a certificate authority public key

00:05:12,080 --> 00:05:16,000
that you have just

00:05:13,280 --> 00:05:16,560
uh configured in the previous slide and

00:05:16,000 --> 00:05:19,280
that's it

00:05:16,560 --> 00:05:20,800
it's a successful login now before i'm

00:05:19,280 --> 00:05:22,639
going to talk about advanced things

00:05:20,800 --> 00:05:25,360
let me show you exactly do you see my

00:05:22,639 --> 00:05:29,120
screen by the way

00:05:25,360 --> 00:05:29,120
can you see my uh cli right now

00:05:29,199 --> 00:05:34,639
i believe i believe so

00:05:32,400 --> 00:05:36,639
uh yeah so this is the cli and this is

00:05:34,639 --> 00:05:38,080
just an example of exactly how does it

00:05:36,639 --> 00:05:39,360
look like okay so this is just the

00:05:38,080 --> 00:05:41,919
script that i've made

00:05:39,360 --> 00:05:43,919
uh but basically it uses the open ssh

00:05:41,919 --> 00:05:46,800
and this is an ip that i'm trying to

00:05:43,919 --> 00:05:48,639
uh to login into so right now i'm not

00:05:46,800 --> 00:05:49,120
providing any any private key whatsoever

00:05:48,639 --> 00:05:50,880
so we

00:05:49,120 --> 00:05:52,160
have connected that in my script i've

00:05:50,880 --> 00:05:53,199
done some advanced things and i've

00:05:52,160 --> 00:05:56,560
connected that

00:05:53,199 --> 00:05:57,199
with an octa uh so an identity provider

00:05:56,560 --> 00:06:00,479
would

00:05:57,199 --> 00:06:03,280
basically provide the identity and then

00:06:00,479 --> 00:06:05,759
i would get that ssh certificate so i

00:06:03,280 --> 00:06:06,960
did not authenticate using any ssh key

00:06:05,759 --> 00:06:09,919
as you can see

00:06:06,960 --> 00:06:12,400
and by by but instead i was

00:06:09,919 --> 00:06:13,600
authenticated via octa my octa token was

00:06:12,400 --> 00:06:15,680
presented to

00:06:13,600 --> 00:06:17,680
uh the certificate authority in that

00:06:15,680 --> 00:06:19,840
case uh achilles of that sense

00:06:17,680 --> 00:06:21,039
and then i was provided with an ssh

00:06:19,840 --> 00:06:23,199
certificate

00:06:21,039 --> 00:06:25,120
that certificate i was using in order to

00:06:23,199 --> 00:06:27,360
log into the target host

00:06:25,120 --> 00:06:29,039
this is basically how it works and of

00:06:27,360 --> 00:06:30,560
course if you would like to see

00:06:29,039 --> 00:06:32,400
the configuration itself as i've

00:06:30,560 --> 00:06:35,680
mentioned trusted user ca

00:06:32,400 --> 00:06:37,600
uh keys is already there so after we

00:06:35,680 --> 00:06:38,160
talked about that let's uh let's go back

00:06:37,600 --> 00:06:40,560
to

00:06:38,160 --> 00:06:41,280
uh where we've been just to wrap up the

00:06:40,560 --> 00:06:43,199
advanced

00:06:41,280 --> 00:06:44,479
uh issues as you can see we can talk

00:06:43,199 --> 00:06:46,319
about it in other talk

00:06:44,479 --> 00:06:47,840
who's allowed to issue certificates uh

00:06:46,319 --> 00:06:48,479
how does the authentication works with

00:06:47,840 --> 00:06:50,160
octa

00:06:48,479 --> 00:06:51,680
uh how does authorization work how can

00:06:50,160 --> 00:06:53,120
you protect or see a private key

00:06:51,680 --> 00:06:55,680
and the really advanced things with your

00:06:53,120 --> 00:06:57,520
security guys and how to record the ssh

00:06:55,680 --> 00:06:59,039
session those are the resources and open

00:06:57,520 --> 00:07:00,000
source uh projects that i will share

00:06:59,039 --> 00:07:01,759
with you later on

00:07:00,000 --> 00:07:03,680
uh that presentation will go up for you

00:07:01,759 --> 00:07:05,280
to be used and you're most welcome to

00:07:03,680 --> 00:07:06,800
ask any questions thank you very guys

00:07:05,280 --> 00:07:09,759
thank you very much for your time and

00:07:06,800 --> 00:07:12,560
i'm here for your questions

00:07:09,759 --> 00:07:14,479
thank you very much oh that it was a

00:07:12,560 --> 00:07:15,360
really nice talk reminding us that

00:07:14,479 --> 00:07:19,039
everything

00:07:15,360 --> 00:07:22,319
is all about trust yeah from

00:07:19,039 --> 00:07:30,479
from passwords to certificates to ssh

00:07:22,319 --> 00:07:30,479

YouTube URL: https://www.youtube.com/watch?v=UeeGKCtHYi8


