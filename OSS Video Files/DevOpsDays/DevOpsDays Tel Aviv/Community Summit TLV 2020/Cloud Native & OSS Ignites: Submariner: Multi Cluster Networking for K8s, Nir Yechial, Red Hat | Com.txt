Title: Cloud Native & OSS Ignites: Submariner: Multi Cluster Networking for K8s, Nir Yechial, Red Hat | Com
Publication date: 2020-12-26
Playlist: Community Summit TLV 2020
Description: 
	With standard Kubernetes networking, connectivity is limited to a single cluster only, requiring proxies to connect workloads across clusters for migration, disaster-recovery, or geographic locality. Submariner is an open source project that enables high-performance cross-cluster connectivity and Service Discovery between different Kubernetes clusters, either on-premises or in the cloud. With Submariner, your applications and services can span multiple cloud providers, datacenters, and regions.
Captions: 
	00:00:02,880 --> 00:00:05,940
[Music]

00:00:16,320 --> 00:00:22,320
and up next uh i'd like to invite

00:00:18,640 --> 00:00:22,880
near jachiel from red hat nowadays a

00:00:22,320 --> 00:00:26,400
part of

00:00:22,880 --> 00:00:28,480
the ibm empire um and uh

00:00:26,400 --> 00:00:30,000
near is going to talk to us about a very

00:00:28,480 --> 00:00:30,880
interesting open source called

00:00:30,000 --> 00:00:32,719
submariner

00:00:30,880 --> 00:00:33,920
and about multi-cluster networking for

00:00:32,719 --> 00:00:36,880
kubernetes

00:00:33,920 --> 00:00:37,680
so with that hey near glad to have us

00:00:36,880 --> 00:00:40,719
with uh

00:00:37,680 --> 00:00:43,360
glad to have you with us thank you

00:00:40,719 --> 00:00:44,079
for the audience yeah and we'll get back

00:00:43,360 --> 00:00:46,079
to you

00:00:44,079 --> 00:00:47,760
i'll play the uh recorded one and then

00:00:46,079 --> 00:00:48,719
we'll get back to you for q a so guys if

00:00:47,760 --> 00:00:59,840
you have questions

00:00:48,719 --> 00:00:59,840
uh do fire up thank you

00:01:08,720 --> 00:01:13,200
hi everyone and welcome to my ignite

00:01:10,880 --> 00:01:15,280
session about submariner multi-cluster

00:01:13,200 --> 00:01:18,000
networking for kubernetes

00:01:15,280 --> 00:01:21,680
my name is nir and i'm working for red

00:01:18,000 --> 00:01:21,680
apps as an engineering manager

00:01:22,720 --> 00:01:27,119
so we're here to talk about kubernetes

00:01:25,280 --> 00:01:28,159
let's assume that you're the kubernetes

00:01:27,119 --> 00:01:30,799
admin for your

00:01:28,159 --> 00:01:31,280
organization and you really want to be

00:01:30,799 --> 00:01:34,000
happy

00:01:31,280 --> 00:01:35,759
and to make your developers happy and

00:01:34,000 --> 00:01:37,200
you're presented with the following

00:01:35,759 --> 00:01:39,520
challenge

00:01:37,200 --> 00:01:41,600
if you want to go multi-cloud or hybrid

00:01:39,520 --> 00:01:42,720
cloud and support different kubernetes

00:01:41,600 --> 00:01:46,159
clusters across

00:01:42,720 --> 00:01:46,799
different environments like public

00:01:46,159 --> 00:01:50,079
clouds

00:01:46,799 --> 00:01:53,119
or on-prem verb medal it really could be

00:01:50,079 --> 00:01:55,439
any form or shape of kubernetes

00:01:53,119 --> 00:01:56,240
and in order to really implement the

00:01:55,439 --> 00:01:58,079
true

00:01:56,240 --> 00:02:00,560
multi-cloud approach you need some level

00:01:58,079 --> 00:02:03,520
of connectivity between those

00:02:00,560 --> 00:02:05,200
and you are not happy so we're here to

00:02:03,520 --> 00:02:07,280
help create submariner

00:02:05,200 --> 00:02:09,440
which is really a means to create a

00:02:07,280 --> 00:02:10,800
fabric of connectivity between the

00:02:09,440 --> 00:02:13,520
different

00:02:10,800 --> 00:02:15,280
clusters so what is submariner

00:02:13,520 --> 00:02:16,800
submariner enables direct network

00:02:15,280 --> 00:02:18,560
connectivity between different

00:02:16,800 --> 00:02:22,080
kubernetes clusters

00:02:18,560 --> 00:02:25,360
it really exposes a set of crds

00:02:22,080 --> 00:02:28,000
or extending the kubernetes api and

00:02:25,360 --> 00:02:29,840
it's a truly open source vendor neutral

00:02:28,000 --> 00:02:32,080
project

00:02:29,840 --> 00:02:34,720
there is some contribution from red hat

00:02:32,080 --> 00:02:36,959
but we also work with rancher fujitsu

00:02:34,720 --> 00:02:39,280
ibm and different

00:02:36,959 --> 00:02:41,200
companies it can be deployed fairly

00:02:39,280 --> 00:02:43,840
easily using an operator

00:02:41,200 --> 00:02:45,360
we also have elm charts or sub cattle

00:02:43,840 --> 00:02:48,840
which is a command line to

00:02:45,360 --> 00:02:50,319
be built to ease deployment of

00:02:48,840 --> 00:02:53,519
submariner

00:02:50,319 --> 00:02:54,800
so just to get the basics of what we're

00:02:53,519 --> 00:02:57,840
doing

00:02:54,800 --> 00:02:59,599
this is what a networking looks like for

00:02:57,840 --> 00:03:03,120
one kubernetes cluster

00:02:59,599 --> 00:03:05,200
it's essentially hot ip networking

00:03:03,120 --> 00:03:07,920
server discovery load balancing

00:03:05,200 --> 00:03:10,159
network policy all of those objects are

00:03:07,920 --> 00:03:11,280
only known to be working for one single

00:03:10,159 --> 00:03:13,680
cluster

00:03:11,280 --> 00:03:14,560
submariner is really about taking those

00:03:13,680 --> 00:03:17,040
concepts

00:03:14,560 --> 00:03:18,800
and extending them and making them

00:03:17,040 --> 00:03:21,280
multi-cluster aware

00:03:18,800 --> 00:03:22,720
so that we can enable iep networking and

00:03:21,280 --> 00:03:23,760
pod networking between different

00:03:22,720 --> 00:03:26,879
clusters

00:03:23,760 --> 00:03:30,000
similarly dns and service discovery and

00:03:26,879 --> 00:03:32,720
things like network policy

00:03:30,000 --> 00:03:33,360
some common use cases and there are many

00:03:32,720 --> 00:03:36,000
um

00:03:33,360 --> 00:03:38,319
so just to give some examples are for

00:03:36,000 --> 00:03:41,440
applications availability

00:03:38,319 --> 00:03:44,879
for disaster recovery and for uh

00:03:41,440 --> 00:03:47,440
data locations and emergency guidelines

00:03:44,879 --> 00:03:49,519
and to give you a very concrete example

00:03:47,440 --> 00:03:52,879
here is a cockroachdb

00:03:49,519 --> 00:03:55,439
which is just a modern database

00:03:52,879 --> 00:03:57,040
a cluster deployed across three

00:03:55,439 --> 00:03:59,439
different kubernetes environment

00:03:57,040 --> 00:04:01,760
and in this example these are three

00:03:59,439 --> 00:04:04,400
different regions

00:04:01,760 --> 00:04:06,000
and what we're doing here thanks to

00:04:04,400 --> 00:04:08,080
submariner

00:04:06,000 --> 00:04:09,519
the core coach db components and the

00:04:08,080 --> 00:04:11,840
different pods

00:04:09,519 --> 00:04:13,439
can really talk to each other and form

00:04:11,840 --> 00:04:16,560
one big happy

00:04:13,439 --> 00:04:17,280
hdb cluster and this is really useful

00:04:16,560 --> 00:04:19,040
for i

00:04:17,280 --> 00:04:20,400
availability and disaster recovery

00:04:19,040 --> 00:04:23,759
purposes because

00:04:20,400 --> 00:04:24,960
now uh if any of the regions or any of

00:04:23,759 --> 00:04:27,840
the poles are

00:04:24,960 --> 00:04:29,759
about to fail then core port db is going

00:04:27,840 --> 00:04:33,600
to continue and operate

00:04:29,759 --> 00:04:36,080
uh and the service is going to be up

00:04:33,600 --> 00:04:37,680
uh some benefits of submariner so

00:04:36,080 --> 00:04:40,479
summary enables direct

00:04:37,680 --> 00:04:41,360
what we call east-west part-to-part and

00:04:40,479 --> 00:04:45,199
part-to-service

00:04:41,360 --> 00:04:47,520
routing across clusters it works with

00:04:45,199 --> 00:04:48,560
any kubernetes cluster compatible with

00:04:47,520 --> 00:04:52,800
different network

00:04:48,560 --> 00:04:55,440
or what known as cni plugins

00:04:52,800 --> 00:04:56,000
it's not only providing connectivity but

00:04:55,440 --> 00:04:58,560
it also

00:04:56,000 --> 00:04:59,840
tackles service discovery dns and

00:04:58,560 --> 00:05:03,199
network policy

00:04:59,840 --> 00:05:05,840
between clusters and it also improves

00:05:03,199 --> 00:05:06,560
security because a you no longer need to

00:05:05,840 --> 00:05:08,000
expose

00:05:06,560 --> 00:05:10,160
all of your backend services to the

00:05:08,000 --> 00:05:13,280
internet you can just directly

00:05:10,160 --> 00:05:15,039
access them between the clusters and

00:05:13,280 --> 00:05:17,680
all of the cross cluster traffic is

00:05:15,039 --> 00:05:20,000
encrypted by default we use ipsec but

00:05:17,680 --> 00:05:22,479
we also have the option to turn it into

00:05:20,000 --> 00:05:23,919
wildcard

00:05:22,479 --> 00:05:26,479
and as i mentioned we have this sub

00:05:23,919 --> 00:05:28,160
cattle uh combine simple command line to

00:05:26,479 --> 00:05:30,479
to ease the deployment and verification

00:05:28,160 --> 00:05:32,960
of submariner uh all it takes are really

00:05:30,479 --> 00:05:34,720
two commands to try this out

00:05:32,960 --> 00:05:36,880
if you want to learn more about

00:05:34,720 --> 00:05:39,120
submariner or to try it

00:05:36,880 --> 00:05:40,720
uh please you're welcome to visit our

00:05:39,120 --> 00:05:42,560
website we have a

00:05:40,720 --> 00:05:44,080
pretty much up-to-date documentation and

00:05:42,560 --> 00:05:45,120
quick start guides for the different

00:05:44,080 --> 00:05:48,800
kubernetes

00:05:45,120 --> 00:05:49,280
distros as i said before all of our code

00:05:48,800 --> 00:05:52,000
is

00:05:49,280 --> 00:05:53,759
fully open and stored on github we also

00:05:52,000 --> 00:05:57,280
have youtube channel with

00:05:53,759 --> 00:05:58,800
some useful videos and we have a slack

00:05:57,280 --> 00:06:00,400
channel which is really part of the

00:05:58,800 --> 00:06:02,319
kubernetes space

00:06:00,400 --> 00:06:07,840
so feel free to reach out to us there if

00:06:02,319 --> 00:06:07,840
you have any questions

00:06:09,039 --> 00:06:12,479
thank you thank you very much near i

00:06:11,280 --> 00:06:15,759
think you're a mute

00:06:12,479 --> 00:06:18,240
if you can unmute yourself yes uh

00:06:15,759 --> 00:06:20,240
great now we can now we can hear you uh

00:06:18,240 --> 00:06:22,960
so thanks a lot for this uh by the way

00:06:20,240 --> 00:06:23,840
how does that uh compare to uh things

00:06:22,960 --> 00:06:28,000
that we know like

00:06:23,840 --> 00:06:29,919
istio and and uh these these guys kh you

00:06:28,000 --> 00:06:33,280
know that

00:06:29,919 --> 00:06:35,759
yes of course um it's

00:06:33,280 --> 00:06:37,199
it's essentially a solution uh which is

00:06:35,759 --> 00:06:39,759
more infrastructure centric

00:06:37,199 --> 00:06:41,440
so we provide kind of l3 connectivity

00:06:39,759 --> 00:06:42,319
between the different like pods and

00:06:41,440 --> 00:06:44,000
services

00:06:42,319 --> 00:06:46,080
and then it's very easy to set up

00:06:44,000 --> 00:06:48,080
something like multi-cluster istio on

00:06:46,080 --> 00:06:49,599
top of submariner

00:06:48,080 --> 00:06:51,120
because from a service mesh perspective

00:06:49,599 --> 00:06:52,400
like we already provide all their

00:06:51,120 --> 00:06:55,599
infrastructure

00:06:52,400 --> 00:06:57,919
so they can ride on top of submariner

00:06:55,599 --> 00:06:59,199
nice thanks a lot neil for this

00:06:57,919 --> 00:07:00,560
fascinating talk and

00:06:59,199 --> 00:07:02,720
again for the audience near we'll be

00:07:00,560 --> 00:07:04,479
able to answer more questions on the

00:07:02,720 --> 00:07:11,840
on the discord so do join us thank you

00:07:04,479 --> 00:07:11,840

YouTube URL: https://www.youtube.com/watch?v=ie06sPfO4EE


