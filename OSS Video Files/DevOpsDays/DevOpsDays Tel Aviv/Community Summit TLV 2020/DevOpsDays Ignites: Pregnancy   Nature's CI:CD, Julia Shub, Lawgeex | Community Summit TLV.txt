Title: DevOpsDays Ignites: Pregnancy   Nature's CI:CD, Julia Shub, Lawgeex | Community Summit TLV
Publication date: 2020-12-26
Playlist: Community Summit TLV 2020
Description: 
	So you and your partner decide to have a child.
From this point onwards, you can treat it as a CICD project since it's basically the same.
Captions: 
	00:00:02,880 --> 00:00:05,940
[Music]

00:00:12,320 --> 00:00:16,080
oh

00:00:12,880 --> 00:00:20,080
and let's uh kick off with

00:00:16,080 --> 00:00:23,439
julia shube who is the devops lead

00:00:20,080 --> 00:00:28,240
at logics

00:00:23,439 --> 00:00:28,240
hello hello let's let's

00:00:28,840 --> 00:00:34,079
switch

00:00:30,480 --> 00:00:37,440
yep all right all right now you are

00:00:34,079 --> 00:00:41,360
on our main event hello julia

00:00:37,440 --> 00:00:44,719
hi uh looking forward to the session

00:00:41,360 --> 00:00:50,399
and you can share your screen

00:00:44,719 --> 00:00:50,399
already being shared all right

00:00:50,800 --> 00:00:55,760
all righty then so hi everyone my name

00:00:53,680 --> 00:00:56,640
is julia schube i'm the devops lead at

00:00:55,760 --> 00:00:58,399
law geeks

00:00:56,640 --> 00:00:59,760
i'm very happy to be here and today

00:00:58,399 --> 00:01:03,920
we'll be talking about how

00:00:59,760 --> 00:01:03,920
pregnancy is nature's ci cd

00:01:04,080 --> 00:01:07,920
so why are we even having this talk we

00:01:06,320 --> 00:01:09,600
are having it because i am currently

00:01:07,920 --> 00:01:11,520
nine months pregnant and i'm tired of

00:01:09,600 --> 00:01:13,200
making all these jokes to my husband

00:01:11,520 --> 00:01:15,200
so i decided you all should share in his

00:01:13,200 --> 00:01:16,880
misery but to be precise

00:01:15,200 --> 00:01:18,320
during the past nine months i've noticed

00:01:16,880 --> 00:01:19,920
a lot of similarities between the

00:01:18,320 --> 00:01:23,759
process of having a baby

00:01:19,920 --> 00:01:23,759
and the software build and release cycle

00:01:24,000 --> 00:01:27,360
there are a few analogies that can be

00:01:25,759 --> 00:01:28,000
made here to the process of building and

00:01:27,360 --> 00:01:30,000
developing

00:01:28,000 --> 00:01:31,280
and deploying a dockerized service to

00:01:30,000 --> 00:01:33,600
being pregnant

00:01:31,280 --> 00:01:36,079
think of a baby as a docker container

00:01:33,600 --> 00:01:40,000
and of the mother as a ci cd host

00:01:36,079 --> 00:01:42,000
platform hopefully a stable one

00:01:40,000 --> 00:01:43,600
think of our code as a combination of

00:01:42,000 --> 00:01:45,920
both parents dna

00:01:43,600 --> 00:01:48,799
and of code push as the moment of well

00:01:45,920 --> 00:01:50,640
the proverbial start of a build flow

00:01:48,799 --> 00:01:52,399
as you all know developers are fans of

00:01:50,640 --> 00:01:53,600
pushing their code to just about any

00:01:52,399 --> 00:01:56,640
available branch

00:01:53,600 --> 00:01:58,479
but only if the pr merges it starts an

00:01:56,640 --> 00:01:59,759
automatic process of integration and

00:01:58,479 --> 00:02:01,520
deployment to a ci

00:01:59,759 --> 00:02:09,840
environment that would eventually lead

00:02:01,520 --> 00:02:09,840
to a deployment to production

00:02:10,239 --> 00:02:14,080
if your ci pipeline is properly set with

00:02:12,560 --> 00:02:15,840
git flow for example

00:02:14,080 --> 00:02:17,360
every push of code to a development

00:02:15,840 --> 00:02:20,400
branch will trigger a

00:02:17,360 --> 00:02:22,080
type will trigger a notification usually

00:02:20,400 --> 00:02:22,640
in the form of tiredness or morning

00:02:22,080 --> 00:02:24,959
sickness

00:02:22,640 --> 00:02:27,040
after a few weeks that will indicate

00:02:24,959 --> 00:02:27,680
your code is in its initial unit testing

00:02:27,040 --> 00:02:30,480
stage

00:02:27,680 --> 00:02:32,480
like ultrasound blood tests etc etc

00:02:30,480 --> 00:02:34,720
hopefully after passing said tests

00:02:32,480 --> 00:02:36,319
a build will a build process will start

00:02:34,720 --> 00:02:37,760
and will be approved for deployment to a

00:02:36,319 --> 00:02:39,519
ci environment

00:02:37,760 --> 00:02:41,200
at first we must approve our build is

00:02:39,519 --> 00:02:43,280
technically viable and desired

00:02:41,200 --> 00:02:45,280
that all happens around weeks 7 through

00:02:43,280 --> 00:02:46,959
10 hopefully passing the first

00:02:45,280 --> 00:02:48,959
the first health check with a heartbeat

00:02:46,959 --> 00:02:50,800
monitor

00:02:48,959 --> 00:02:52,400
after our build was deployed to ci at

00:02:50,800 --> 00:02:53,920
about weeks 10 to 16

00:02:52,400 --> 00:02:55,599
it's time to verify the basic

00:02:53,920 --> 00:02:56,720
integration of components amongst

00:02:55,599 --> 00:02:58,720
themselves

00:02:56,720 --> 00:03:00,159
and have the first proper risk analysis

00:02:58,720 --> 00:03:02,000
of the potential outcome

00:03:00,159 --> 00:03:03,440
such as the first heavy screening test

00:03:02,000 --> 00:03:05,120
and amino acids check

00:03:03,440 --> 00:03:07,200
right after that checking the

00:03:05,120 --> 00:03:09,280
statistical error error rate of your

00:03:07,200 --> 00:03:10,800
build

00:03:09,280 --> 00:03:12,640
the cool thing about the testing phase

00:03:10,800 --> 00:03:14,080
while integrating is you find out a lot

00:03:12,640 --> 00:03:16,640
of cool stuff about your build

00:03:14,080 --> 00:03:18,000
such as its possible capabilities and

00:03:16,640 --> 00:03:20,400
future compatibility with

00:03:18,000 --> 00:03:22,319
other services will it be capable of

00:03:20,400 --> 00:03:23,599
hosting future builds on its own such as

00:03:22,319 --> 00:03:25,599
a female build

00:03:23,599 --> 00:03:27,120
or will it only provide parameters for

00:03:25,599 --> 00:03:29,519
other future build processes

00:03:27,120 --> 00:03:31,519
like a mail build have all your features

00:03:29,519 --> 00:03:32,080
and packages been added and initialized

00:03:31,519 --> 00:03:34,319
such as

00:03:32,080 --> 00:03:37,440
organ development heart monitors bone

00:03:34,319 --> 00:03:37,440
structure and so on

00:03:37,840 --> 00:03:41,760
to create the proper handoff from ci

00:03:39,760 --> 00:03:43,519
environment to the pre-production stage

00:03:41,760 --> 00:03:45,040
there are several kpis that should be

00:03:43,519 --> 00:03:46,720
met such as

00:03:45,040 --> 00:03:48,959
your scripts are running and your logs

00:03:46,720 --> 00:03:50,080
don't show errors the growth process of

00:03:48,959 --> 00:03:52,000
your basic functions

00:03:50,080 --> 00:03:53,920
is continuing as planned according to

00:03:52,000 --> 00:03:56,080
the doctor's kpis

00:03:53,920 --> 00:03:57,599
you pass all the proper health checks

00:03:56,080 --> 00:03:59,280
and you can see that your integrations

00:03:57,599 --> 00:04:00,560
are starting to work and are properly

00:03:59,280 --> 00:04:03,280
interacting with each other

00:04:00,560 --> 00:04:04,239
such as brain brawn and internal organ

00:04:03,280 --> 00:04:05,920
activity

00:04:04,239 --> 00:04:09,680
this is when you can move on to the next

00:04:05,920 --> 00:04:09,680
step the staging environment

00:04:09,920 --> 00:04:13,040
this is the part where you test your

00:04:11,360 --> 00:04:14,560
build in an environment as close to

00:04:13,040 --> 00:04:16,639
production as possible

00:04:14,560 --> 00:04:18,639
your build has already proven to be big

00:04:16,639 --> 00:04:19,600
and robust and is no longer running in a

00:04:18,639 --> 00:04:21,919
small container

00:04:19,600 --> 00:04:23,360
as a small container in a giant void but

00:04:21,919 --> 00:04:23,919
you have set it in a space that is

00:04:23,360 --> 00:04:25,600
tighter

00:04:23,919 --> 00:04:27,360
and it kicks and gives you contractions

00:04:25,600 --> 00:04:30,320
every now and then to indicate that it's

00:04:27,360 --> 00:04:32,639
ready to be released

00:04:30,320 --> 00:04:33,919
at some point waiting for the deployment

00:04:32,639 --> 00:04:35,440
is going to start being really

00:04:33,919 --> 00:04:37,280
nerve-wracking and heavy

00:04:35,440 --> 00:04:39,040
but please refrain from deploying to

00:04:37,280 --> 00:04:39,919
production before all your tests have

00:04:39,040 --> 00:04:42,160
passed

00:04:39,919 --> 00:04:43,680
sometimes it's unavoidable during due to

00:04:42,160 --> 00:04:45,520
unforeseen circumstances

00:04:43,680 --> 00:04:46,800
and hopefully you will not need a hotfix

00:04:45,520 --> 00:04:48,560
on production

00:04:46,800 --> 00:04:50,639
to handle premature deployments this

00:04:48,560 --> 00:04:54,240
session was actually recorded in advance

00:04:50,639 --> 00:04:54,240
though it is going on live now

00:04:54,720 --> 00:04:57,759
often you need to prepare your

00:04:55,919 --> 00:04:58,720
production environment to the new coming

00:04:57,759 --> 00:05:00,639
service

00:04:58,720 --> 00:05:01,919
you need to prepare resources such as

00:05:00,639 --> 00:05:04,400
power supply storage

00:05:01,919 --> 00:05:05,919
cpu networking monitoring and logging or

00:05:04,400 --> 00:05:08,560
as we like to call them

00:05:05,919 --> 00:05:09,039
baby food a bed maternity or paternity

00:05:08,560 --> 00:05:11,199
leave

00:05:09,039 --> 00:05:12,639
a carrying device such as a stroller

00:05:11,199 --> 00:05:16,080
baby sensors and monitors

00:05:12,639 --> 00:05:18,000
and most of all diapers

00:05:16,080 --> 00:05:20,400
and after more or less nine months of

00:05:18,000 --> 00:05:21,840
anticipation you may now finally deploy

00:05:20,400 --> 00:05:23,440
your bill to production

00:05:21,840 --> 00:05:24,960
it's best not to do it on a thursday

00:05:23,440 --> 00:05:25,919
evening since it kind of ruins your

00:05:24,960 --> 00:05:28,880
weekend but hey

00:05:25,919 --> 00:05:30,000
at least it's finally released and to

00:05:28,880 --> 00:05:31,600
conclude

00:05:30,000 --> 00:05:33,680
the further down the line your build

00:05:31,600 --> 00:05:36,160
fails the harder it is to recover

00:05:33,680 --> 00:05:37,280
so monitor everything and do all you can

00:05:36,160 --> 00:05:39,120
to think ahead

00:05:37,280 --> 00:05:41,600
test your code in your infrastructure in

00:05:39,120 --> 00:05:43,680
advance to avoid possible complications

00:05:41,600 --> 00:05:45,280
your main disadvantage is you build it

00:05:43,680 --> 00:05:46,720
and you run it so keep track of your

00:05:45,280 --> 00:05:48,479
maintenance windows

00:05:46,720 --> 00:05:50,960
and make sure your service discovery and

00:05:48,479 --> 00:05:52,240
alerting are operational so you too can

00:05:50,960 --> 00:05:53,039
have a successful deployment to

00:05:52,240 --> 00:05:54,960
production

00:05:53,039 --> 00:05:56,639
that tells you with a loud notification

00:05:54,960 --> 00:05:59,440
your service is up and running

00:05:56,639 --> 00:06:01,680
as soon as it's deployed thank you very

00:05:59,440 --> 00:06:01,680
much

00:06:05,199 --> 00:06:10,080
thank you very much julia that has been

00:06:07,759 --> 00:06:10,800
amazing and you're my personal hero of

00:06:10,080 --> 00:06:12,240
the event

00:06:10,800 --> 00:06:14,639
for doing this in the in your my

00:06:12,240 --> 00:06:17,840
nine-month pregnancy so i

00:06:14,639 --> 00:06:21,520
wish you a happy and successful a

00:06:17,840 --> 00:06:29,039
deployment to production thank you

00:06:21,520 --> 00:06:29,039

YouTube URL: https://www.youtube.com/watch?v=JAwZ1tnzwPg


