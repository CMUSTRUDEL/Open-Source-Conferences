Title: WAT.tf - Nati Cohen - DevOpsDays Tel Aviv 2018
Publication date: 2019-01-03
Playlist: DevOpsDays Tel Aviv 2018
Description: 
	Let’s talk about Terraform. I adore Terraform, it is the only tool I want to orchestrate my cloud resources with. Except when it makes me stare at the screen murmuring: “WAT?!” 0_o
Captions: 
	00:00:05,569 --> 00:00:13,860
so hello everyone let's talk about

00:00:10,110 --> 00:00:15,240
terraform so and for the duration of

00:00:13,860 --> 00:00:17,850
this talk I really need you to remember

00:00:15,240 --> 00:00:21,180
that I really love terraform but

00:00:17,850 --> 00:00:25,560
something always seemed off finally I

00:00:21,180 --> 00:00:29,279
had a revelation that infrastructure is

00:00:25,560 --> 00:00:30,630
code is not code those of you agree with

00:00:29,279 --> 00:00:32,820
me can use the remaining four and a half

00:00:30,630 --> 00:00:36,030
minutes to go outside and grab an

00:00:32,820 --> 00:00:36,930
espresso and for the rest of you who

00:00:36,030 --> 00:00:39,540
need convincing

00:00:36,930 --> 00:00:40,770
hello my name is Nattie Cohen and I'm an

00:00:39,540 --> 00:00:43,860
infrastructure developer at here

00:00:40,770 --> 00:00:47,579
mobility during the past year or so

00:00:43,860 --> 00:00:49,520
my team and I were busy setting up our

00:00:47,579 --> 00:00:51,840
infrastructure using terraform and

00:00:49,520 --> 00:00:54,539
providing emotional support to our

00:00:51,840 --> 00:00:58,739
service teams as they bootstrap the

00:00:54,539 --> 00:01:00,359
services in the cloud one of these teams

00:00:58,739 --> 00:01:03,449
wanted to store some important

00:01:00,359 --> 00:01:07,799
information in s3 buckets and to do that

00:01:03,449 --> 00:01:10,619
in s3 in their form of course they need

00:01:07,799 --> 00:01:12,750
to specify those resources and as you

00:01:10,619 --> 00:01:18,630
can see most of it is a little bit copy

00:01:12,750 --> 00:01:20,670
pasty so this telephone and a

00:01:18,630 --> 00:01:23,460
configuration of course never will never

00:01:20,670 --> 00:01:25,470
pass a code review because it violates

00:01:23,460 --> 00:01:27,360
one of the basic principles of software

00:01:25,470 --> 00:01:29,880
engineering which is of course don't

00:01:27,360 --> 00:01:32,400
repeat yourself and it can be refactored

00:01:29,880 --> 00:01:34,470
as such you can create a list and

00:01:32,400 --> 00:01:37,189
iterate over that list and create those

00:01:34,470 --> 00:01:39,450
resources now it's beautiful and dry

00:01:37,189 --> 00:01:41,700
however a little bit afterwards one of

00:01:39,450 --> 00:01:46,259
the developer wanted developers wanted

00:01:41,700 --> 00:01:48,780
to remove a single bucket only to find

00:01:46,259 --> 00:01:50,520
out that terraform is planning to

00:01:48,780 --> 00:01:53,399
destroy all of his buckets and all this

00:01:50,520 --> 00:01:56,009
data for reasons not worth going into in

00:01:53,399 --> 00:01:57,750
a five minute ignite another very

00:01:56,009 --> 00:02:00,149
important software engineering principle

00:01:57,750 --> 00:02:02,969
is divide and conquer where instead of

00:02:00,149 --> 00:02:05,450
solving giant problem with giant blob of

00:02:02,969 --> 00:02:08,190
code which is unmaintainable unreadable

00:02:05,450 --> 00:02:11,670
hard to test and so on we solve

00:02:08,190 --> 00:02:12,850
subproblems for example using a single

00:02:11,670 --> 00:02:14,860
class and

00:02:12,850 --> 00:02:17,800
has just a thing there are four modules

00:02:14,860 --> 00:02:20,920
which you should use and we solve the

00:02:17,800 --> 00:02:23,770
sub problem of self-hosted DPS using a

00:02:20,920 --> 00:02:25,900
telephone module and then we could use

00:02:23,770 --> 00:02:27,730
the solution to this sub problem we can

00:02:25,900 --> 00:02:29,470
say here we have a module creating a

00:02:27,730 --> 00:02:31,540
database and we have an application

00:02:29,470 --> 00:02:34,120
running on an instance that we want to

00:02:31,540 --> 00:02:37,180
use that database in and since their

00:02:34,120 --> 00:02:39,370
form has a dependency graph then we can

00:02:37,180 --> 00:02:42,930
be sure that the database will be

00:02:39,370 --> 00:02:46,150
created before the application right

00:02:42,930 --> 00:02:48,220
wrong because modules are not

00:02:46,150 --> 00:02:51,430
first-class citizens you expect them to

00:02:48,220 --> 00:02:53,770
be and they're actually nothing like a

00:02:51,430 --> 00:02:57,430
class or struct and infrastructure s

00:02:53,770 --> 00:03:00,330
code is not code now that our developers

00:02:57,430 --> 00:03:04,480
passed the denial and anger stages of

00:03:00,330 --> 00:03:06,370
and reach the bargaining stage they say

00:03:04,480 --> 00:03:08,620
something like this okay so we

00:03:06,370 --> 00:03:10,870
understand that we can use software

00:03:08,620 --> 00:03:13,420
engineering principles using terraform

00:03:10,870 --> 00:03:15,880
but if we get our turf and configuration

00:03:13,420 --> 00:03:17,890
working correctly just like any other

00:03:15,880 --> 00:03:19,840
code we write we can run it as many

00:03:17,890 --> 00:03:24,630
times as we want for example on every

00:03:19,840 --> 00:03:28,030
deploy right so we had to say okay well

00:03:24,630 --> 00:03:30,190
maybe it depends if your telephone

00:03:28,030 --> 00:03:32,800
configuration on every run ads and

00:03:30,190 --> 00:03:34,660
destroyed resources and your deployments

00:03:32,800 --> 00:03:37,690
are frequent then you actually increase

00:03:34,660 --> 00:03:40,210
the probability of having something bad

00:03:37,690 --> 00:03:42,640
happened during the apply and which will

00:03:40,210 --> 00:03:44,470
probably leave you with orphan resources

00:03:42,640 --> 00:03:46,960
in the cloud which are still serving

00:03:44,470 --> 00:03:50,050
users but not managed by anything

00:03:46,960 --> 00:03:52,150
including terraform well I haven't ran

00:03:50,050 --> 00:03:54,130
out of examples I ran out of time

00:03:52,150 --> 00:03:56,200
please come afterwards and talk to me

00:03:54,130 --> 00:03:58,630
about testing debugging and versioning

00:03:56,200 --> 00:04:01,150
of their form but to recap

00:03:58,630 --> 00:04:03,370
infrastructure is code is not code but

00:04:01,150 --> 00:04:05,950
what can you do about it two things the

00:04:03,370 --> 00:04:08,980
first show some empathy toward your

00:04:05,950 --> 00:04:10,870
fellow developers as the entire world is

00:04:08,980 --> 00:04:13,480
falling apart when they have to deal

00:04:10,870 --> 00:04:15,610
with infrastructure is code and then

00:04:13,480 --> 00:04:17,260
while infrastructure is code is one of

00:04:15,610 --> 00:04:19,989
the finest hammers that you have in your

00:04:17,260 --> 00:04:22,200
toolbox I want you to remember that some

00:04:19,989 --> 00:04:25,270
problems are better be solved by taking

00:04:22,200 --> 00:04:26,590
the cloud SDK reading the API

00:04:25,270 --> 00:04:29,260
documentation and

00:04:26,590 --> 00:04:32,030
writing some actual code thank you

00:04:29,260 --> 00:04:33,030
[Applause]

00:04:32,030 --> 00:04:36,080
[Music]

00:04:33,030 --> 00:04:41,209
[Applause]

00:04:36,080 --> 00:04:41,209

YouTube URL: https://www.youtube.com/watch?v=gpou5UIOf0U


