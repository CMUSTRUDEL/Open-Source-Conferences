Title: 26 Feature Branches and other tales from the wild - Ken Mugrage - DevOpsDays Tel Aviv 2018
Publication date: 2019-01-03
Playlist: DevOpsDays Tel Aviv 2018
Description: 
	In the 9 years I’ve been working with customers on continuous delivery systems I’ve seen some, ummm, great learning opportunities.

This talk will go over some of the more interesting things I’ve seen during this time and might even give you a light hearted hint at ways to avoid some of them.
Captions: 
	00:00:05,359 --> 00:00:09,389
if you don't know how to do the DevOps

00:00:07,680 --> 00:00:15,719
he'll tell you how to do the DevOps man

00:00:09,389 --> 00:00:17,970
you can't actually do DevOps oh yeah oh

00:00:15,719 --> 00:00:19,770
yeah well yeah I got a spoiler in there

00:00:17,970 --> 00:00:21,119
about that too so actually can do story

00:00:19,770 --> 00:00:23,990
times we're gonna gather around the

00:00:21,119 --> 00:00:25,830
dumpster fire here a little bit and

00:00:23,990 --> 00:00:27,480
unfortunately these are all true stories

00:00:25,830 --> 00:00:31,250
I have changed some of the names because

00:00:27,480 --> 00:00:33,750
I like my job okay but this is who I am

00:00:31,250 --> 00:00:35,250
I'm a technology advocate for thought

00:00:33,750 --> 00:00:36,690
works been there about 10 years I'm also

00:00:35,250 --> 00:00:39,829
on the DevOps days global core

00:00:36,690 --> 00:00:39,829
organizing team at the moment

00:00:41,840 --> 00:00:51,510
72 cities this year I think anyway

00:00:44,550 --> 00:00:56,039
yeah yeah you're like at least in that

00:00:51,510 --> 00:00:57,629
area ok first story so I'm at a client

00:00:56,039 --> 00:00:59,609
this is many many years ago and they're

00:00:57,629 --> 00:01:01,859
complaining about their CI server our CI

00:00:59,609 --> 00:01:03,239
server sucks because they have 26

00:01:01,859 --> 00:01:05,250
feature branches and when they merge

00:01:03,239 --> 00:01:09,240
them all at the end of the sprint all

00:01:05,250 --> 00:01:13,200
the tests go red it's just possible that

00:01:09,240 --> 00:01:15,240
that's not the CI server's fault okay so

00:01:13,200 --> 00:01:16,380
the lesson from this one I want to

00:01:15,240 --> 00:01:17,850
encourage you to at least think about

00:01:16,380 --> 00:01:20,790
doing trunk based development master

00:01:17,850 --> 00:01:23,100
whatever you want to call it if you put

00:01:20,790 --> 00:01:25,049
the code into a single branch main line

00:01:23,100 --> 00:01:26,220
whatever more often your CI server can

00:01:25,049 --> 00:01:28,439
actually catch it because it will

00:01:26,220 --> 00:01:31,680
actually have seen the code which is

00:01:28,439 --> 00:01:33,329
comes out to be a prerequisite another

00:01:31,680 --> 00:01:35,909
one I saw I actually see this one quite

00:01:33,329 --> 00:01:37,710
often so people have a multi-stage

00:01:35,909 --> 00:01:38,939
pipeline and they build a thing and they

00:01:37,710 --> 00:01:40,140
put it somewhere and then it goes

00:01:38,939 --> 00:01:42,720
through a bunch of other tests and then

00:01:40,140 --> 00:01:43,829
they eventually deploy it somewhere had

00:01:42,720 --> 00:01:45,479
a customers like how did that version

00:01:43,829 --> 00:01:46,829
get in production well it turned out

00:01:45,479 --> 00:01:48,689
their production deploy was always

00:01:46,829 --> 00:01:50,670
grabbing the latest one from their from

00:01:48,689 --> 00:01:52,290
the art the repository even if that's

00:01:50,670 --> 00:01:55,229
not the one that went all through all

00:01:52,290 --> 00:01:57,540
the other stages yeah so for nine months

00:01:55,229 --> 00:01:59,430
they'd been deploying the latest version

00:01:57,540 --> 00:02:01,680
not the version that actually passed all

00:01:59,430 --> 00:02:04,770
the tests I wish I could tell you that

00:02:01,680 --> 00:02:07,079
was uncommon okay so please keep your

00:02:04,770 --> 00:02:08,610
artifacts organized know what you're

00:02:07,079 --> 00:02:10,709
doing tag them through them past the

00:02:08,610 --> 00:02:11,910
metadata you know I'm gonna blow this

00:02:10,709 --> 00:02:13,560
night here if you're gonna use a CI

00:02:11,910 --> 00:02:16,970
server for CD then at least makes

00:02:13,560 --> 00:02:19,230
you're passing these things along there

00:02:16,970 --> 00:02:20,819
the other thing that it would be

00:02:19,230 --> 00:02:22,770
incredibly easy it is incredibly easy

00:02:20,819 --> 00:02:24,840
for me to write a really bad application

00:02:22,770 --> 00:02:27,569
and put it on one of the public cloud

00:02:24,840 --> 00:02:28,860
services and put our logo on it and you

00:02:27,569 --> 00:02:31,530
would think it's a thought work SAP and

00:02:28,860 --> 00:02:35,010
then it sucks and thought work sucks

00:02:31,530 --> 00:02:37,380
right and so there are safe ways to do

00:02:35,010 --> 00:02:38,640
this stuff beware of shadow IT don't go

00:02:37,380 --> 00:02:41,849
out there and put things on there and

00:02:38,640 --> 00:02:42,360
bypass your processes internally and so

00:02:41,849 --> 00:02:44,190
forth

00:02:42,360 --> 00:02:46,110
modern doesn't have to be fragile I know

00:02:44,190 --> 00:02:47,519
what some organizations there really has

00:02:46,110 --> 00:02:48,959
a tent to allow you to use some of the

00:02:47,519 --> 00:02:50,340
newer technologies it's awesome to see

00:02:48,959 --> 00:02:53,970
200 people in there getting kubernetes

00:02:50,340 --> 00:02:55,739
training today but please be careful

00:02:53,970 --> 00:02:58,530
don't just put your logo on it and stick

00:02:55,739 --> 00:03:01,410
it out there because then we get

00:02:58,530 --> 00:03:02,819
compliance anarchy I see all the time

00:03:01,410 --> 00:03:04,290
people say oh I have a pipeline I can

00:03:02,819 --> 00:03:07,260
get to production in 12 minutes and my

00:03:04,290 --> 00:03:09,060
response is usually Paul if you can

00:03:07,260 --> 00:03:10,410
you're not actually doing things like

00:03:09,060 --> 00:03:12,870
this it is important that we go through

00:03:10,410 --> 00:03:15,780
the compliance of stuff that said it

00:03:12,870 --> 00:03:17,609
doesn't have to be the 500 Rho

00:03:15,780 --> 00:03:19,100
spreadsheet that's every compliance

00:03:17,609 --> 00:03:21,510
thing that ever might have come up I

00:03:19,100 --> 00:03:23,579
would actually encourage you to invite

00:03:21,510 --> 00:03:26,730
your auditors to your development teams

00:03:23,579 --> 00:03:27,600
early let them know these are the parts

00:03:26,730 --> 00:03:29,010
of system we're going to be touching

00:03:27,600 --> 00:03:30,180
this is the tech stack we're gonna be

00:03:29,010 --> 00:03:32,940
using this is what we're gonna do on

00:03:30,180 --> 00:03:34,470
public clouds let them know what the

00:03:32,940 --> 00:03:36,269
risk points are so that you can test the

00:03:34,470 --> 00:03:38,630
right things and then you can actually

00:03:36,269 --> 00:03:40,859
test them not just rubber-stamp it hmm

00:03:38,630 --> 00:03:44,100
so know type did a study on maven

00:03:40,859 --> 00:03:46,440
central that oh well over 20 percent of

00:03:44,100 --> 00:03:49,680
the projects that use maven central use

00:03:46,440 --> 00:03:51,299
issues are use excuse me modules

00:03:49,680 --> 00:03:54,810
whatever you call in libraries with

00:03:51,299 --> 00:03:56,910
known critical vulnerabilities so you

00:03:54,810 --> 00:03:59,220
really have to actually do security is

00:03:56,910 --> 00:04:01,290
as everyone's job there are tools out

00:03:59,220 --> 00:04:03,450
there now that will run your code base

00:04:01,290 --> 00:04:05,459
and make sure that you're using only

00:04:03,450 --> 00:04:07,530
things that have passed etcetera please

00:04:05,459 --> 00:04:09,090
do this I can't tell you how rare it is

00:04:07,530 --> 00:04:14,579
for me to see automated security on a

00:04:09,090 --> 00:04:16,430
pipeline DevOps team I apologize this is

00:04:14,579 --> 00:04:19,620
where I'm gonna make some people angry

00:04:16,430 --> 00:04:24,360
creating another silo is not a solution

00:04:19,620 --> 00:04:25,530
for silos okay so don't create a DevOps

00:04:24,360 --> 00:04:27,210
team and have them create the automation

00:04:25,530 --> 00:04:27,450
that everybody else uses because then

00:04:27,210 --> 00:04:28,800
they

00:04:27,450 --> 00:04:30,750
know how the automation works and they

00:04:28,800 --> 00:04:32,700
go around it because it doesn't do what

00:04:30,750 --> 00:04:33,870
they need it to be so you do need all

00:04:32,700 --> 00:04:35,520
the pieces on the team now I'm not

00:04:33,870 --> 00:04:37,620
saying can't have a CI platform or

00:04:35,520 --> 00:04:39,360
what-have-you but people need to

00:04:37,620 --> 00:04:40,290
understand how their deployments are

00:04:39,360 --> 00:04:43,100
happening because guess what

00:04:40,290 --> 00:04:45,000
infrastructures codes not really code

00:04:43,100 --> 00:04:47,970
yeah so they need to understand how

00:04:45,000 --> 00:04:53,400
these things work don't do things

00:04:47,970 --> 00:04:54,720
because Netflix did okay I mean if you

00:04:53,400 --> 00:04:56,010
are doing something at the same scale

00:04:54,720 --> 00:04:58,440
and you do need those things buy

00:04:56,010 --> 00:05:00,480
absolutely learn from the big you know

00:04:58,440 --> 00:05:03,540
the unicorns out there play but don't do

00:05:00,480 --> 00:05:04,890
it just because they did there's a lot

00:05:03,540 --> 00:05:06,150
of people that blame people at my

00:05:04,890 --> 00:05:08,880
company for creating store micro

00:05:06,150 --> 00:05:09,840
services yes I'm sorry but it doesn't

00:05:08,880 --> 00:05:12,390
mean that you have to use them all the

00:05:09,840 --> 00:05:14,580
time so focus on the things that you

00:05:12,390 --> 00:05:16,410
actually need you know if you're if you

00:05:14,580 --> 00:05:18,930
have a real use case for kubernetes by

00:05:16,410 --> 00:05:23,880
all means use kubernetes don't use it

00:05:18,930 --> 00:05:25,350
because it's cute speaking of this

00:05:23,880 --> 00:05:26,610
another thing I see all the time is okay

00:05:25,350 --> 00:05:28,080
how do I set up my containers delivery

00:05:26,610 --> 00:05:29,640
server to make sure that these two micro

00:05:28,080 --> 00:05:31,950
services are deployed together because

00:05:29,640 --> 00:05:38,940
they have a dependency say well then

00:05:31,950 --> 00:05:40,770
they're not micro services wait what if

00:05:38,940 --> 00:05:43,800
a micro service thing can't be deployed

00:05:40,770 --> 00:05:45,900
independently it's not a micro service

00:05:43,800 --> 00:05:47,400
if it shares a data back in with

00:05:45,900 --> 00:05:48,660
something else it's not a micro service

00:05:47,400 --> 00:05:50,400
if it has to be deployed at the same

00:05:48,660 --> 00:05:53,010
time as another service it's not a micro

00:05:50,400 --> 00:05:54,180
service okay by definition they need to

00:05:53,010 --> 00:05:56,490
be in deploying the employable you're

00:05:54,180 --> 00:06:00,300
not gonna get the CI CD results you want

00:05:56,490 --> 00:06:01,550
if they aren't nobody buys a hammer

00:06:00,300 --> 00:06:03,540
because they want a hammer

00:06:01,550 --> 00:06:06,080
okay people buy a hammer because they

00:06:03,540 --> 00:06:08,460
want to build something so not a house

00:06:06,080 --> 00:06:11,520
the reason for that there's no such

00:06:08,460 --> 00:06:13,860
thing as a DevOps tool okay so if you

00:06:11,520 --> 00:06:15,780
need better monitoring by all means find

00:06:13,860 --> 00:06:17,490
a great monitoring tool if you need a

00:06:15,780 --> 00:06:19,590
better continuous delivery tool go for

00:06:17,490 --> 00:06:22,050
it you know if you need a better logs

00:06:19,590 --> 00:06:23,310
analysis tool go for it but there's no

00:06:22,050 --> 00:06:26,900
such thing as a DevOps tool because

00:06:23,310 --> 00:06:31,780
DevOps is culture thank you

00:06:26,900 --> 00:06:36,910
[Applause]

00:06:31,780 --> 00:06:36,910

YouTube URL: https://www.youtube.com/watch?v=qDvoNDjI0bU


