Title: Developing 3 times faster thanks to Kaizen - Clement Pasteau - DevOpsDays Tel Aviv 2018
Publication date: 2019-01-03
Playlist: DevOpsDays Tel Aviv 2018
Description: 
	At Theodo, we build web and mobile apps in record time for our clients.

In this talk, I want to share with you how we multiplied our delivery speed by 3 over 6 months thanks to Kaizen and Continuous Improvement.
Captions: 
	00:00:05,810 --> 00:00:13,080
hi everyone cool so I'm really happy to

00:00:10,080 --> 00:00:16,640
be here and today I want to talk to you

00:00:13,080 --> 00:00:19,590
about Kaizen and I guess more in general

00:00:16,640 --> 00:00:22,289
how you can improve things in a company

00:00:19,590 --> 00:00:23,519
or in a project and share you the

00:00:22,289 --> 00:00:26,670
learnings we had in the past eight

00:00:23,519 --> 00:00:28,859
months in our company um the thing we

00:00:26,670 --> 00:00:31,679
managed to improve in our projects

00:00:28,859 --> 00:00:33,390
so I guess before starting looking at

00:00:31,679 --> 00:00:36,809
what's a Kaizen is and how to implement

00:00:33,390 --> 00:00:39,899
it I want you to take a step back and

00:00:36,809 --> 00:00:42,690
look at how can we I mean in time in

00:00:39,899 --> 00:00:45,570
history how did we create new things how

00:00:42,690 --> 00:00:47,940
did we invent something new so you got

00:00:45,570 --> 00:00:49,920
what I found is you've got two ways and

00:00:47,940 --> 00:00:52,559
are you quite lucky so you could be

00:00:49,920 --> 00:00:54,180
Percy Spencer and by having a chocolate

00:00:52,559 --> 00:00:56,550
bar in your pockets and working or just

00:00:54,180 --> 00:00:58,320
staying next to some waves and then the

00:00:56,550 --> 00:01:01,230
chocolate bar melts and then you invent

00:00:58,320 --> 00:01:04,530
the microwave amazing or you're

00:01:01,230 --> 00:01:06,270
Alexander Fleming and by doing some

00:01:04,530 --> 00:01:08,340
experiments and forgetting one on your

00:01:06,270 --> 00:01:10,680
desk for a few days you realize that

00:01:08,340 --> 00:01:13,110
some bacterias can die and you invent

00:01:10,680 --> 00:01:16,590
the antibiotics but all of this is luck

00:01:13,110 --> 00:01:20,220
so how can you create something invent

00:01:16,590 --> 00:01:22,280
something based more on scientific facts

00:01:20,220 --> 00:01:25,950
and having more scientific approach

00:01:22,280 --> 00:01:28,380
well Robert Hooke said okay I won't he

00:01:25,950 --> 00:01:30,810
had a goal he said I want to be able to

00:01:28,380 --> 00:01:33,329
look things that are really small so he

00:01:30,810 --> 00:01:35,780
started a scientific approach to create

00:01:33,329 --> 00:01:39,570
a microscope or George Cayley

00:01:35,780 --> 00:01:41,450
said I want the human to fight to fly so

00:01:39,570 --> 00:01:45,450
he starts investigating how we could

00:01:41,450 --> 00:01:49,799
work in aeronautics and create you what

00:01:45,450 --> 00:01:52,799
we see today as the plane and I guess

00:01:49,799 --> 00:01:55,829
what about us what about what we do what

00:01:52,799 --> 00:01:58,409
about the computers the servers and

00:01:55,829 --> 00:02:00,570
everything well we could have the same

00:01:58,409 --> 00:02:02,460
approach either you wait for luck to

00:02:00,570 --> 00:02:05,130
happen and you invent something new or

00:02:02,460 --> 00:02:07,920
you take more this scientific approach

00:02:05,130 --> 00:02:09,780
where you set yourself a goal and you

00:02:07,920 --> 00:02:12,930
say okay how can I reach this goal let's

00:02:09,780 --> 00:02:14,430
take smugly let's take small steps and

00:02:12,930 --> 00:02:17,640
try to reach this code

00:02:14,430 --> 00:02:19,140
by inventing new things this is what a

00:02:17,640 --> 00:02:23,299
company does really well that is called

00:02:19,140 --> 00:02:26,069
Toyota I'm sure you've heard of it and

00:02:23,299 --> 00:02:28,260
they have invented what you may know as

00:02:26,069 --> 00:02:30,719
the Toyota Production system that is

00:02:28,260 --> 00:02:32,549
also known as lean manufacturing there

00:02:30,719 --> 00:02:35,099
is based on lots of different principles

00:02:32,549 --> 00:02:37,349
of having visibility on what you do

00:02:35,099 --> 00:02:39,389
having indicators and I could talk about

00:02:37,349 --> 00:02:42,049
this for like hours but I want to focus

00:02:39,389 --> 00:02:45,659
on one thing today I want a core concept

00:02:42,049 --> 00:02:47,879
that is Kaizen but before looking into

00:02:45,659 --> 00:02:50,569
this let's introduce myself so I'm Primo

00:02:47,879 --> 00:02:54,599
pasto I'm the deputy CTO of theater UK

00:02:50,569 --> 00:02:57,659
and so we're based in London and to

00:02:54,599 --> 00:03:00,150
explain a bit the context of how why we

00:02:57,659 --> 00:03:02,450
want you to go faster on what we do let

00:03:00,150 --> 00:03:06,840
me explain a bit what we do here at zero

00:03:02,450 --> 00:03:09,150
so we are servants company and basically

00:03:06,840 --> 00:03:11,879
our clients come to us and tell they

00:03:09,150 --> 00:03:14,969
tell us I've got a problem help me solve

00:03:11,879 --> 00:03:17,489
it and we go from defining the problem

00:03:14,969 --> 00:03:20,489
with them refining the success

00:03:17,489 --> 00:03:23,669
- like solve this problem defining the

00:03:20,489 --> 00:03:25,650
features developing those features then

00:03:23,669 --> 00:03:27,840
deploying them to production having the

00:03:25,650 --> 00:03:29,699
user feedback and everything and why do

00:03:27,840 --> 00:03:31,979
our clients like us because we're really

00:03:29,699 --> 00:03:34,290
fast because we manage to do this in a

00:03:31,979 --> 00:03:36,419
few weeks by being really focused on the

00:03:34,290 --> 00:03:38,879
MVP and having a feedback loop really

00:03:36,419 --> 00:03:41,639
quick and how do

00:03:38,879 --> 00:03:43,699
why are we so fast because we use

00:03:41,639 --> 00:03:46,229
methodologies modern methodologies

00:03:43,699 --> 00:03:49,220
mainly agile ones so you may have heard

00:03:46,229 --> 00:03:51,959
of scrum where we work in small teams

00:03:49,220 --> 00:03:56,280
with a technical team working with the

00:03:51,959 --> 00:03:57,959
client directly in weekly iterations and

00:03:56,280 --> 00:04:00,090
we use tools that are really efficient

00:03:57,959 --> 00:04:02,579
like we've got Trello is really highly

00:04:00,090 --> 00:04:05,220
collaborative and we can estimate

00:04:02,579 --> 00:04:06,959
everything we do to give visibility so

00:04:05,220 --> 00:04:08,909
that on a daily basis we can see how

00:04:06,959 --> 00:04:10,979
much work we gonna do and if we lay

00:04:08,909 --> 00:04:12,959
stand we can react right away so we've

00:04:10,979 --> 00:04:15,629
got this clean mindset of we've got an

00:04:12,959 --> 00:04:18,419
indicator if we're late let's react and

00:04:15,629 --> 00:04:20,489
let's try to improve what we do why am I

00:04:18,419 --> 00:04:23,190
talking to you about all of this because

00:04:20,489 --> 00:04:26,130
the clients came to us at the beginning

00:04:23,190 --> 00:04:27,870
of this year and he said ok I've got a

00:04:26,130 --> 00:04:30,840
problem help me solve it

00:04:27,870 --> 00:04:32,790
and basically what we didn't expect is

00:04:30,840 --> 00:04:35,040
this client had a lot of requirements

00:04:32,790 --> 00:04:37,050
and a lot of policies because it was a

00:04:35,040 --> 00:04:39,930
bank so we had to work in an environment

00:04:37,050 --> 00:04:41,970
we're not used to so basically we

00:04:39,930 --> 00:04:43,740
discovered that when we were not fast in

00:04:41,970 --> 00:04:46,560
these new environments so we had to

00:04:43,740 --> 00:04:49,130
adapt so all the tools the technical

00:04:46,560 --> 00:04:51,900
tools were using like having github

00:04:49,130 --> 00:04:54,300
having a CI working on the UNIX

00:04:51,900 --> 00:04:55,590
environment using terraform to create

00:04:54,300 --> 00:04:57,419
some servers and everything we couldn't

00:04:55,590 --> 00:05:00,330
use them because we are working on a

00:04:57,419 --> 00:05:03,660
virtual machine on the windows another

00:05:00,330 --> 00:05:06,330
version control tool everything and this

00:05:03,660 --> 00:05:08,250
is what we told ourselves okay we want

00:05:06,330 --> 00:05:14,070
to improve we want to get better at our

00:05:08,250 --> 00:05:16,530
job so let's try the Kaizen but how

00:05:14,070 --> 00:05:19,680
Kaizen in Japanese means improvements it

00:05:16,530 --> 00:05:21,360
means you work on improving your

00:05:19,680 --> 00:05:24,330
workplace basically is what they do at

00:05:21,360 --> 00:05:27,449
Toyota on the factories so each person

00:05:24,330 --> 00:05:30,750
can implement the Kaizen to improve the

00:05:27,449 --> 00:05:31,830
way they work on the flow so we said to

00:05:30,750 --> 00:05:34,650
also okay let's do that

00:05:31,830 --> 00:05:36,900
but how do we do this by looking further

00:05:34,650 --> 00:05:39,599
into it we found the six steps of the

00:05:36,900 --> 00:05:42,270
Kaiser which are fairly easy to

00:05:39,599 --> 00:05:44,789
understand we first try to understand

00:05:42,270 --> 00:05:46,979
and define the performance improvement

00:05:44,789 --> 00:05:50,760
potential then we analyze the current

00:05:46,979 --> 00:05:53,099
methods we generate new ideas we test

00:05:50,760 --> 00:05:54,810
them then we implement a longer plan and

00:05:53,099 --> 00:05:56,340
then we evaluate the method to

00:05:54,810 --> 00:05:58,789
standardize so I'll go I'll come back to

00:05:56,340 --> 00:06:00,900
it more in details about those steps I

00:05:58,789 --> 00:06:03,599
guess the key learning we had from the

00:06:00,900 --> 00:06:06,090
beginning is ok we can't walk alone on

00:06:03,599 --> 00:06:07,919
this we can't just say ok I'm gonna try

00:06:06,090 --> 00:06:10,020
and improve the speed on my project on

00:06:07,919 --> 00:06:11,370
my own and hide everything we want

00:06:10,020 --> 00:06:14,340
something that is really visible that

00:06:11,370 --> 00:06:16,410
the company can see anyone can come to

00:06:14,340 --> 00:06:18,510
us and see what we're doing and can help

00:06:16,410 --> 00:06:20,910
us can challenge us so we came up with

00:06:18,510 --> 00:06:23,070
the templates of how these guys and

00:06:20,910 --> 00:06:25,229
should look like so you can see that

00:06:23,070 --> 00:06:26,400
we've got the title we've got the team

00:06:25,229 --> 00:06:28,080
that is working on it that are

00:06:26,400 --> 00:06:29,580
challenging each others and we've got

00:06:28,080 --> 00:06:32,370
the six-step with a lot of indicators

00:06:29,580 --> 00:06:34,289
and colors to see if anyone comes next

00:06:32,370 --> 00:06:37,110
to this board that we would put on a

00:06:34,289 --> 00:06:38,490
white board then they can see what

00:06:37,110 --> 00:06:39,780
they're doing the problems they have

00:06:38,490 --> 00:06:41,580
what they are experimenting and

00:06:39,780 --> 00:06:43,500
everything our group briefed

00:06:41,580 --> 00:06:45,020
all those steps first so that we can

00:06:43,500 --> 00:06:48,810
understand together what they mean and

00:06:45,020 --> 00:06:50,759
then I'll go again with a deep example

00:06:48,810 --> 00:06:53,939
of how we manage to increment our speed

00:06:50,759 --> 00:06:57,719
on the project first thing you want to

00:06:53,939 --> 00:06:59,759
have is a title why a title because like

00:06:57,719 --> 00:07:01,139
I said anyone should be able to

00:06:59,759 --> 00:07:03,659
understand what you're doing from the

00:07:01,139 --> 00:07:05,189
newcomer to the CEO or CTO if they come

00:07:03,659 --> 00:07:08,389
to you they should be able to understand

00:07:05,189 --> 00:07:11,370
what you're trying to do and this title

00:07:08,389 --> 00:07:12,509
must be clear enough and must be related

00:07:11,370 --> 00:07:16,169
to the obeah

00:07:12,509 --> 00:07:17,969
well another Japanese well why do be I

00:07:16,169 --> 00:07:21,180
don't know if you've ever heard of the

00:07:17,969 --> 00:07:23,520
obeah in Japanese it means the wall room

00:07:21,180 --> 00:07:25,379
or the large room and this is basically

00:07:23,520 --> 00:07:28,860
the place where you put the company

00:07:25,379 --> 00:07:31,409
goals so this is important for you on

00:07:28,860 --> 00:07:33,120
your Kaizen so that what you're doing is

00:07:31,409 --> 00:07:34,440
actually related to your company you

00:07:33,120 --> 00:07:36,210
can't just say okay I'm going to try and

00:07:34,440 --> 00:07:38,069
solve this or implement this if there's

00:07:36,210 --> 00:07:40,139
no reason for your company to do it in

00:07:38,069 --> 00:07:42,509
our case going faster on our project was

00:07:40,139 --> 00:07:45,389
useful to increase the client

00:07:42,509 --> 00:07:48,240
satisfaction which is one of our key

00:07:45,389 --> 00:07:50,099
goal for the company cool so you've got

00:07:48,240 --> 00:07:52,889
your title that is related to it to the

00:07:50,099 --> 00:07:54,139
obeah you know what you're doing and why

00:07:52,889 --> 00:07:56,849
you're doing it

00:07:54,139 --> 00:07:59,520
next step is fine the performance

00:07:56,849 --> 00:08:02,759
improvement potential this is the most

00:07:59,520 --> 00:08:05,009
visual visual thing on the board so this

00:08:02,759 --> 00:08:07,139
is this should be a measure that you can

00:08:05,009 --> 00:08:09,419
have regularly so you can see your

00:08:07,139 --> 00:08:12,060
progress if it's the speed you can see

00:08:09,419 --> 00:08:14,279
the speed of delivery like on a daily

00:08:12,060 --> 00:08:15,659
basis or a weekly basis if it's the

00:08:14,279 --> 00:08:17,219
number of Berg's that you're trying to

00:08:15,659 --> 00:08:18,389
reduce you should see decreasing you

00:08:17,219 --> 00:08:20,400
should have a stone that to reach as

00:08:18,389 --> 00:08:23,849
well so you can see where you are the

00:08:20,400 --> 00:08:25,110
gap in what you're trying to address and

00:08:23,849 --> 00:08:27,029
depending on the actions you're doing

00:08:25,110 --> 00:08:28,830
should be able to see when you took

00:08:27,029 --> 00:08:31,169
those actions and the effect it has to

00:08:28,830 --> 00:08:34,169
see actually this was useful to do those

00:08:31,169 --> 00:08:35,820
actions then you want to analyze the

00:08:34,169 --> 00:08:37,829
current methods so the first step you do

00:08:35,820 --> 00:08:40,349
is look at the state-of-the-art so you

00:08:37,829 --> 00:08:42,360
don't want only to say I'm gonna focus

00:08:40,349 --> 00:08:44,219
on my thing on my own with my team you

00:08:42,360 --> 00:08:46,410
want to look around what are the other

00:08:44,219 --> 00:08:50,220
teams doing what are my competitors

00:08:46,410 --> 00:08:52,260
doing and what can i implement what

00:08:50,220 --> 00:08:54,480
they're doing and then look at your

00:08:52,260 --> 00:08:55,290
current flow try to understand each

00:08:54,480 --> 00:08:56,820
piece that

00:08:55,290 --> 00:08:59,250
through your flow can you break it down

00:08:56,820 --> 00:09:01,230
into different steps so you can see

00:08:59,250 --> 00:09:04,830
which step is actually taking the

00:09:01,230 --> 00:09:07,170
longest once you've got this visibility

00:09:04,830 --> 00:09:11,460
on exactly what your work looks like

00:09:07,170 --> 00:09:13,410
basically you need pieces because to

00:09:11,460 --> 00:09:17,100
generate new ideas of how to improve

00:09:13,410 --> 00:09:18,360
your flow or whatever you do you need

00:09:17,100 --> 00:09:21,900
something that is real that is coming

00:09:18,360 --> 00:09:23,220
from the field so you need for instance

00:09:21,900 --> 00:09:25,140
if you've got your flow you need to be

00:09:23,220 --> 00:09:27,270
able to know which pieces are going

00:09:25,140 --> 00:09:29,670
through and which problems you had for

00:09:27,270 --> 00:09:31,770
each of those so they need to be printed

00:09:29,670 --> 00:09:34,410
so you can see them dated so you can see

00:09:31,770 --> 00:09:35,550
the progress and analyze it like we've

00:09:34,410 --> 00:09:38,190
seen on the other talks you have to do

00:09:35,550 --> 00:09:40,860
the five why's on them to be able next

00:09:38,190 --> 00:09:43,740
to generate new ideas so based on those

00:09:40,860 --> 00:09:46,860
pieces you can check ok we had a problem

00:09:43,740 --> 00:09:48,300
on this feature for instance let's do a

00:09:46,860 --> 00:09:50,190
five why's let's understand the root

00:09:48,300 --> 00:09:53,370
cause and let's try to brainstorm some

00:09:50,190 --> 00:09:56,100
ideas to fix them once you've got an

00:09:53,370 --> 00:09:58,170
idea then you have to test it in a quick

00:09:56,100 --> 00:10:00,840
way so you can't like say okay I'm going

00:09:58,170 --> 00:10:03,030
to fix it right away let's take a lot of

00:10:00,840 --> 00:10:05,430
time to fix it so that it doesn't happen

00:10:03,030 --> 00:10:08,640
again let's first do a quick check to

00:10:05,430 --> 00:10:10,890
make sure that this idea is valid and

00:10:08,640 --> 00:10:12,510
once you reach that and you know that

00:10:10,890 --> 00:10:14,640
your idea was valid you've got a problem

00:10:12,510 --> 00:10:18,840
that you can fix then you try to

00:10:14,640 --> 00:10:21,210
implement a longer-term plan and you do

00:10:18,840 --> 00:10:24,600
another check okay hard I managed manage

00:10:21,210 --> 00:10:26,430
to implement a long-term action has it

00:10:24,600 --> 00:10:28,620
fixed my problem on the long-term if yes

00:10:26,430 --> 00:10:30,780
then you go to the sixth step which is I

00:10:28,620 --> 00:10:33,660
look back on what I've done I've

00:10:30,780 --> 00:10:35,100
improved myself my team I can share this

00:10:33,660 --> 00:10:36,840
and create a standard for the whole

00:10:35,100 --> 00:10:39,180
company so that other projects when they

00:10:36,840 --> 00:10:41,490
start they can use the same methodology

00:10:39,180 --> 00:10:43,320
the same things with them so it's fairly

00:10:41,490 --> 00:10:45,930
easy to understand you define your

00:10:43,320 --> 00:10:48,000
problem you analyze your methods you

00:10:45,930 --> 00:10:49,440
generate new ideas and then you test

00:10:48,000 --> 00:10:51,840
everything so that at the end you learn

00:10:49,440 --> 00:10:54,780
something and you can share with others

00:10:51,840 --> 00:10:58,470
and it looks like this on a board so

00:10:54,780 --> 00:11:00,690
like I said usually what happens in our

00:10:58,470 --> 00:11:03,750
themes is we've got people gathering

00:11:00,690 --> 00:11:05,820
around every day looking at pieces and

00:11:03,750 --> 00:11:08,050
trying to bread stone generate new ideas

00:11:05,820 --> 00:11:09,730
and update

00:11:08,050 --> 00:11:11,769
change indicator so that everyone when

00:11:09,730 --> 00:11:13,240
they come to it they can see what we're

00:11:11,769 --> 00:11:14,950
doing they can challenge us to can say

00:11:13,240 --> 00:11:16,779
Oh what are you doing this or I know

00:11:14,950 --> 00:11:20,170
something that you don't know and I can

00:11:16,779 --> 00:11:22,899
help you now let's look at what we've

00:11:20,170 --> 00:11:25,300
done on our speed Kaizen so our title

00:11:22,899 --> 00:11:28,269
was if you remember we are the clients

00:11:25,300 --> 00:11:30,399
working in a bank and said okay you're

00:11:28,269 --> 00:11:33,640
actually going slower than we thought so

00:11:30,399 --> 00:11:35,200
we say we're gonna try and go faster so

00:11:33,640 --> 00:11:38,890
our title was increased the developer

00:11:35,200 --> 00:11:41,380
speed from 6 to 18 if you're not

00:11:38,890 --> 00:11:43,360
familiar with scrum the notion of speed

00:11:41,380 --> 00:11:46,240
is the fact that each feature has a

00:11:43,360 --> 00:11:47,709
complexity so we know every day how much

00:11:46,240 --> 00:11:50,170
we are able to deliver to give

00:11:47,709 --> 00:11:51,370
visibility to the client so what we did

00:11:50,170 --> 00:11:54,399
on the graph you can see in the bottom

00:11:51,370 --> 00:11:56,529
right is every week we knew what was our

00:11:54,399 --> 00:11:59,769
average speed per day per developer and

00:11:56,529 --> 00:12:04,839
we were trying to increase this to to

00:11:59,769 --> 00:12:06,310
actually go faster so that's it so yeah

00:12:04,839 --> 00:12:08,350
so every week we merge to go faster and

00:12:06,310 --> 00:12:09,850
we can see the actions we are taking

00:12:08,350 --> 00:12:12,760
some of them managed to increase the

00:12:09,850 --> 00:12:15,010
speed some of them don't and this was

00:12:12,760 --> 00:12:16,420
what we were tracking and it was related

00:12:15,010 --> 00:12:21,010
to the client satisfaction in the screen

00:12:16,420 --> 00:12:22,690
success on our BM second thing is

00:12:21,010 --> 00:12:24,850
analyzing our current methods so what

00:12:22,690 --> 00:12:26,860
were our current methods but obviously

00:12:24,850 --> 00:12:29,079
our the first thing we want to do is

00:12:26,860 --> 00:12:31,089
like look around and we looked at the

00:12:29,079 --> 00:12:32,589
first thing was a book called accelerate

00:12:31,089 --> 00:12:35,529
by J's humbo which is really good if you

00:12:32,589 --> 00:12:37,899
haven't read it and we didn't learn much

00:12:35,529 --> 00:12:40,390
from it because it's mainly how you

00:12:37,899 --> 00:12:43,630
apply agile methodologies to coding and

00:12:40,390 --> 00:12:46,570
try to iterate and then what we did is

00:12:43,630 --> 00:12:49,480
ok let's write down our flow and see how

00:12:46,570 --> 00:12:52,360
our features go through the flow we can

00:12:49,480 --> 00:12:53,860
see that the first steps are doing a

00:12:52,360 --> 00:12:56,470
backlog refinement in a technical

00:12:53,860 --> 00:12:58,570
refinements which are complex terms just

00:12:56,470 --> 00:13:00,130
to say let's understand the feature you

00:12:58,570 --> 00:13:03,040
want to do in on a user point of view

00:13:00,130 --> 00:13:05,199
and a technical point of view and then

00:13:03,040 --> 00:13:07,089
we develop it we do code reviews we do

00:13:05,199 --> 00:13:08,800
functional reviews to make sure another

00:13:07,089 --> 00:13:11,410
developer checks to make sure that what

00:13:08,800 --> 00:13:13,570
we're doing then was right we deploy it

00:13:11,410 --> 00:13:15,699
and then the client validates it so this

00:13:13,570 --> 00:13:17,470
was our flow every time we want to

00:13:15,699 --> 00:13:19,630
implement a button we want to add a

00:13:17,470 --> 00:13:21,210
feature on the website this is the flow

00:13:19,630 --> 00:13:24,780
that

00:13:21,210 --> 00:13:26,910
a feature we take so we can analyze all

00:13:24,780 --> 00:13:29,790
our features then and see what where

00:13:26,910 --> 00:13:31,680
were the problems and we also tried

00:13:29,790 --> 00:13:33,270
other methodologies to create those

00:13:31,680 --> 00:13:34,650
species like the dairy production

00:13:33,270 --> 00:13:36,750
planning goes programming and I'll come

00:13:34,650 --> 00:13:39,600
back to it after so the first thing we

00:13:36,750 --> 00:13:43,110
want to do is let's check let's like

00:13:39,600 --> 00:13:46,020
raise problems that we can investigate

00:13:43,110 --> 00:13:48,080
and analyze the first thing we want to

00:13:46,020 --> 00:13:52,830
think about is in the lean methodology

00:13:48,080 --> 00:13:55,620
every time we the flow doesn't go as

00:13:52,830 --> 00:13:57,870
expected then we create what's called

00:13:55,620 --> 00:13:59,490
red buckets so it's like we've got a

00:13:57,870 --> 00:14:00,810
piece that didn't go as expected it goes

00:13:59,490 --> 00:14:03,690
in the red packet that we can analyze

00:14:00,810 --> 00:14:06,450
later in our case this word effects

00:14:03,690 --> 00:14:09,210
which means that if at some point a

00:14:06,450 --> 00:14:11,220
feature goes backwards so it doesn't

00:14:09,210 --> 00:14:12,630
pass the validation from the client when

00:14:11,220 --> 00:14:14,940
we are coding we are missing something

00:14:12,630 --> 00:14:16,530
when we are refining it we are missing

00:14:14,940 --> 00:14:17,940
some information then it goes back and

00:14:16,530 --> 00:14:19,560
this is what we call the defect so we

00:14:17,940 --> 00:14:21,780
can analyze it at the end of the day and

00:14:19,560 --> 00:14:25,230
understand what went wrong and how we

00:14:21,780 --> 00:14:27,330
could improve this the second thing we

00:14:25,230 --> 00:14:30,780
try was the daily production plan so

00:14:27,330 --> 00:14:34,050
instead of doing looking those tickets

00:14:30,780 --> 00:14:35,880
like like in the flow we are looking

00:14:34,050 --> 00:14:39,330
them on a daily basis

00:14:35,880 --> 00:14:41,580
and it's better because if you manage to

00:14:39,330 --> 00:14:43,530
like fix all your defects you don't know

00:14:41,580 --> 00:14:45,450
where you can improve whereas with the

00:14:43,530 --> 00:14:47,400
daily production plan every day each

00:14:45,450 --> 00:14:49,320
developer would say because I know

00:14:47,400 --> 00:14:51,420
roughly I can deliver 10 points per day

00:14:49,320 --> 00:14:53,760
I will try and plan my day with the

00:14:51,420 --> 00:14:55,410
complexity of the features we have to

00:14:53,760 --> 00:14:57,960
see when I should be able to deliver

00:14:55,410 --> 00:14:59,580
those features and if we don't manage to

00:14:57,960 --> 00:15:01,440
deliver them on time it's not a bad

00:14:59,580 --> 00:15:02,100
thing just means that oh we could have

00:15:01,440 --> 00:15:03,870
done better

00:15:02,100 --> 00:15:06,330
let's try to investigate how we could

00:15:03,870 --> 00:15:08,070
have done better and then it's a good

00:15:06,330 --> 00:15:09,480
way as well to set yourself better goals

00:15:08,070 --> 00:15:12,360
so you know you can deliver 10 points

00:15:09,480 --> 00:15:13,620
let's try and plan for 12 and see what

00:15:12,360 --> 00:15:17,190
are the features that take the longest

00:15:13,620 --> 00:15:18,390
and see how you can improve them but in

00:15:17,190 --> 00:15:20,820
this case we can't have visibility

00:15:18,390 --> 00:15:22,440
unlike in the feature what were the

00:15:20,820 --> 00:15:24,410
things that you could have improved them

00:15:22,440 --> 00:15:27,390
so then we came up with another idea

00:15:24,410 --> 00:15:29,160
which was called what we came with the

00:15:27,390 --> 00:15:31,440
name we came up with the name ghost

00:15:29,160 --> 00:15:34,830
programming I'm sure we all played Mario

00:15:31,440 --> 00:15:37,020
Kart or any car game similar when you

00:15:34,830 --> 00:15:38,910
playing like a Time Attack mode you've

00:15:37,020 --> 00:15:42,390
got a ghost that is telling you how you

00:15:38,910 --> 00:15:44,310
should try and what's the best time you

00:15:42,390 --> 00:15:46,080
can do and how you did it in the past

00:15:44,310 --> 00:15:49,800
and you say okay can we do something

00:15:46,080 --> 00:15:52,050
similar when we could can we set

00:15:49,800 --> 00:15:55,350
ourselves a path of how we were going to

00:15:52,050 --> 00:15:57,540
develop this feature and see if we are

00:15:55,350 --> 00:15:59,850
ahead or if we're behind and what we are

00:15:57,540 --> 00:16:02,190
doing differently so we came up with

00:15:59,850 --> 00:16:04,260
this idea of every time we start a

00:16:02,190 --> 00:16:06,300
feature we're going to refine it

00:16:04,260 --> 00:16:08,460
technically before with all the

00:16:06,300 --> 00:16:11,280
technical steps we need to do so that

00:16:08,460 --> 00:16:13,530
when we start it we see exactly where we

00:16:11,280 --> 00:16:17,010
are so we created a tool where we can

00:16:13,530 --> 00:16:19,350
enter all those technical steps one by

00:16:17,010 --> 00:16:21,000
one with the time estimation now so

00:16:19,350 --> 00:16:24,210
something like I'm gonna add this button

00:16:21,000 --> 00:16:25,920
two minutes I'm gonna connect this so

00:16:24,210 --> 00:16:28,560
that it can dispatch an action three

00:16:25,920 --> 00:16:31,200
minutes etc etc and then we just have to

00:16:28,560 --> 00:16:32,870
follow it and see we don't have to look

00:16:31,200 --> 00:16:37,440
at the time to be stressful if you

00:16:32,870 --> 00:16:39,240
behind but at the end of it what you get

00:16:37,440 --> 00:16:41,400
is a summary like this where you can see

00:16:39,240 --> 00:16:44,640
all the different tasks you've done

00:16:41,400 --> 00:16:46,290
within your future and you can see which

00:16:44,640 --> 00:16:48,450
task took the longest and you can enter

00:16:46,290 --> 00:16:50,700
comments right away while it's fresh

00:16:48,450 --> 00:16:51,660
like for instance I didn't know how to

00:16:50,700 --> 00:16:54,810
do this because I didn't know the

00:16:51,660 --> 00:16:56,970
library or I didn't know something else

00:16:54,810 --> 00:16:58,770
and basically at the end of the day we

00:16:56,970 --> 00:17:01,530
can look at it all together and find

00:16:58,770 --> 00:17:05,070
what was the biggest thing we could have

00:17:01,530 --> 00:17:09,060
gone faster on and let's try to improve

00:17:05,070 --> 00:17:11,100
this I guess the first mistake we could

00:17:09,060 --> 00:17:13,080
do is try to solve them over the as they

00:17:11,100 --> 00:17:15,810
come because we have lots of problems we

00:17:13,080 --> 00:17:19,230
can see like on all those small tasks

00:17:15,810 --> 00:17:21,120
but what we want to do is more track

00:17:19,230 --> 00:17:23,220
what is the biggest problem we have so

00:17:21,120 --> 00:17:23,910
this is where we implement what's called

00:17:23,220 --> 00:17:26,580
the Perito

00:17:23,910 --> 00:17:29,010
so every day we've got lots of PCs lots

00:17:26,580 --> 00:17:30,720
of problems lots of time loss and we

00:17:29,010 --> 00:17:33,060
want to put them in the table where we

00:17:30,720 --> 00:17:35,370
can see what is the main thing we're

00:17:33,060 --> 00:17:37,380
losing time on so for instance we know

00:17:35,370 --> 00:17:38,910
we're losing time by doing the five

00:17:37,380 --> 00:17:41,130
why's it's coming from the technical

00:17:38,910 --> 00:17:42,780
conception that was wrong we know we

00:17:41,130 --> 00:17:45,000
were losing time because the user story

00:17:42,780 --> 00:17:47,070
was wrong it was not precise enough for

00:17:45,000 --> 00:17:48,340
the client to be happy or because we're

00:17:47,070 --> 00:17:51,460
losing time on test

00:17:48,340 --> 00:17:53,080
and after one or two weeks then we we've

00:17:51,460 --> 00:17:54,820
got this table we've got data and we

00:17:53,080 --> 00:17:57,070
know what is the main thing we have to

00:17:54,820 --> 00:18:02,679
work on to fix or to just increase the

00:17:57,070 --> 00:18:05,320
speed then once we've got those ideas of

00:18:02,679 --> 00:18:06,880
so the previous ideas where we think

00:18:05,320 --> 00:18:08,320
we've got too many tests some of them

00:18:06,880 --> 00:18:10,000
aren't variables we're wasting time

00:18:08,320 --> 00:18:12,850
fixing them even if they don't bring any

00:18:10,000 --> 00:18:15,039
value or we don't spend enough time in

00:18:12,850 --> 00:18:16,630
doing technical conception because we

00:18:15,039 --> 00:18:19,360
realize that when we start cutting the

00:18:16,630 --> 00:18:20,740
ticket then we actually are missing

00:18:19,360 --> 00:18:23,529
information or we need to refactor

00:18:20,740 --> 00:18:25,779
something or the function we plan to use

00:18:23,529 --> 00:18:27,940
is not correct as a transition so we've

00:18:25,779 --> 00:18:30,640
got those ideas now we put them for the

00:18:27,940 --> 00:18:32,260
flow four five six where we try to

00:18:30,640 --> 00:18:34,419
validate those ideas to make sure it's

00:18:32,260 --> 00:18:37,480
good then we implement a longer term

00:18:34,419 --> 00:18:40,419
then we standardize it you can see it

00:18:37,480 --> 00:18:42,279
with it looks like this on our world and

00:18:40,419 --> 00:18:44,289
I'm not gonna go through everything with

00:18:42,279 --> 00:18:48,100
you but just to give you some ideas we

00:18:44,289 --> 00:18:50,140
had a first action that was we thought

00:18:48,100 --> 00:18:51,490
we were not good at testing so we said

00:18:50,140 --> 00:18:55,120
okay let's create a test sample

00:18:51,490 --> 00:18:57,340
repository where we we're gonna just add

00:18:55,120 --> 00:18:58,840
all the different tests we do so that's

00:18:57,340 --> 00:19:03,279
when we want to come back to doing a

00:18:58,840 --> 00:19:05,950
test we know how to do a proper test but

00:19:03,279 --> 00:19:07,360
I guess the main learning we had from

00:19:05,950 --> 00:19:09,730
all those actions were the technical

00:19:07,360 --> 00:19:12,490
conception I think it's a key thing I

00:19:09,730 --> 00:19:13,899
want to share with you today is that at

00:19:12,490 --> 00:19:16,330
the beginning we thought okay we don't

00:19:13,899 --> 00:19:19,690
spend enough time refining our tickets

00:19:16,330 --> 00:19:21,880
our features to understand exactly how

00:19:19,690 --> 00:19:24,010
to do them technically so let's just try

00:19:21,880 --> 00:19:27,399
to extend the time and see if it gets

00:19:24,010 --> 00:19:30,309
better so the thing we did it just to

00:19:27,399 --> 00:19:33,730
remind you the the flow of what a

00:19:30,309 --> 00:19:35,770
feature goes through at one sprint so in

00:19:33,730 --> 00:19:38,799
one week we do the refinements for the

00:19:35,770 --> 00:19:41,289
week after and we said okay let's spend

00:19:38,799 --> 00:19:43,750
one more hour in technical refinements

00:19:41,289 --> 00:19:46,029
and see what happens in the screen and

00:19:43,750 --> 00:19:47,740
plus one if we go faster on delivering

00:19:46,029 --> 00:19:49,990
the features and it was actually

00:19:47,740 --> 00:19:52,090
impressive because the week after when

00:19:49,990 --> 00:19:55,600
we experiment in this world its speed of

00:19:52,090 --> 00:19:57,460
13 per day by spending one more hour

00:19:55,600 --> 00:20:00,100
doing technical refinement we managed to

00:19:57,460 --> 00:20:01,750
deliver 18 more points in the week after

00:20:00,100 --> 00:20:04,480
so it's more than a day

00:20:01,750 --> 00:20:07,780
so by doing one hour we warm almost more

00:20:04,480 --> 00:20:10,030
than seven hours in a day in the sprints

00:20:07,780 --> 00:20:12,160
in our week so it's actually more

00:20:10,030 --> 00:20:14,230
powerful than just we spend one more

00:20:12,160 --> 00:20:16,300
hour refining and we win one more win

00:20:14,230 --> 00:20:18,460
one hour coding we spend one hour and we

00:20:16,300 --> 00:20:20,620
win seven hours you say oK we've learned

00:20:18,460 --> 00:20:22,900
something let's try to refine it let's

00:20:20,620 --> 00:20:24,670
try to define all the different steps of

00:20:22,900 --> 00:20:26,380
how we can do a good technical

00:20:24,670 --> 00:20:29,580
conception let's share it with other

00:20:26,380 --> 00:20:31,780
teams so we created a standard

00:20:29,580 --> 00:20:34,690
explaining how you do a good technical

00:20:31,780 --> 00:20:37,000
conception mainly in three different

00:20:34,690 --> 00:20:38,320
steps of the first thing when you look

00:20:37,000 --> 00:20:40,390
at your feature you need to understand

00:20:38,320 --> 00:20:42,220
what it is so it's looking at the user

00:20:40,390 --> 00:20:44,500
story looking at what it's meant to do

00:20:42,220 --> 00:20:47,170
looking at the validation steps so how

00:20:44,500 --> 00:20:49,210
do you validate that this feature does

00:20:47,170 --> 00:20:50,710
what you expected and you look at the

00:20:49,210 --> 00:20:53,800
website and then you understand exactly

00:20:50,710 --> 00:20:56,050
what you meant to do then the really

00:20:53,800 --> 00:20:59,620
important part is looking at the code so

00:20:56,050 --> 00:21:01,750
before actually coding it you need to

00:20:59,620 --> 00:21:03,700
look at the code to see in which places

00:21:01,750 --> 00:21:05,200
you're gonna add something in which

00:21:03,700 --> 00:21:09,460
places you've done something similar

00:21:05,200 --> 00:21:11,200
when you can take inspiration from and

00:21:09,460 --> 00:21:12,610
need to open all those files so that

00:21:11,200 --> 00:21:14,230
you've got visibility and you can

00:21:12,610 --> 00:21:16,690
estimate properly the work that needs to

00:21:14,230 --> 00:21:18,850
be done and the last step is to write

00:21:16,690 --> 00:21:20,470
the strategy and then you need to be as

00:21:18,850 --> 00:21:22,840
precise as you can because you've got

00:21:20,470 --> 00:21:24,460
all this in your hand now you looked at

00:21:22,840 --> 00:21:26,020
the files you know what the future needs

00:21:24,460 --> 00:21:27,940
to do so let's write everything down so

00:21:26,020 --> 00:21:30,670
you write down the files you can attach

00:21:27,940 --> 00:21:32,920
the function you're gonna create the

00:21:30,670 --> 00:21:34,360
design you need to do and the test

00:21:32,920 --> 00:21:36,430
you're gonna add and then you've got all

00:21:34,360 --> 00:21:39,340
this summary that in our case looks a

00:21:36,430 --> 00:21:40,600
bit like that so this is for react where

00:21:39,340 --> 00:21:43,420
we know which component we're going to

00:21:40,600 --> 00:21:47,290
create how we connect it to redux and

00:21:43,420 --> 00:21:49,060
everything and with this then in the

00:21:47,290 --> 00:21:51,070
sprint after when you start working on

00:21:49,060 --> 00:21:52,360
the feature then it's just following a

00:21:51,070 --> 00:21:54,070
checklist you know exactly what you need

00:21:52,360 --> 00:21:55,980
to do and everything goes as planned

00:21:54,070 --> 00:21:59,080
because the whole team was together

00:21:55,980 --> 00:22:01,150
refining the future creating the

00:21:59,080 --> 00:22:06,340
conception and it's just as easy as

00:22:01,150 --> 00:22:09,820
following and just doing it so what

00:22:06,340 --> 00:22:11,770
happened on our speed Kaizen we started

00:22:09,820 --> 00:22:14,640
a speed of 6 and by doing all those

00:22:11,770 --> 00:22:16,590
experiments doing all those tests

00:22:14,640 --> 00:22:18,870
and doing better technical conception we

00:22:16,590 --> 00:22:21,300
managed to read to reach at the end the

00:22:18,870 --> 00:22:24,360
speed of 18.5 which is quite impressive

00:22:21,300 --> 00:22:26,880
when you realize it it's like tripling

00:22:24,360 --> 00:22:29,400
the speed of delivering and at the end

00:22:26,880 --> 00:22:31,860
while the clan was really happy was

00:22:29,400 --> 00:22:34,160
actually more than happy because we were

00:22:31,860 --> 00:22:37,380
actually going too fast for him now and

00:22:34,160 --> 00:22:39,390
he was struggling to give us features

00:22:37,380 --> 00:22:43,830
and refining them with us so he had to

00:22:39,390 --> 00:22:45,660
change our model a bit so I guess what's

00:22:43,830 --> 00:22:47,790
our next step we managed to triple our

00:22:45,660 --> 00:22:50,210
speed so we could continue let's try go

00:22:47,790 --> 00:22:53,490
faster and faster and learn more things

00:22:50,210 --> 00:22:55,230
but I guess like I said the plan so we

00:22:53,490 --> 00:22:57,240
are going already really fast so it's

00:22:55,230 --> 00:22:59,040
not a concern for our client anymore it

00:22:57,240 --> 00:23:01,680
doesn't impact our obey anymore which is

00:22:59,040 --> 00:23:03,960
clear and satisfaction so I guess now

00:23:01,680 --> 00:23:05,490
our next step is to find a new one what

00:23:03,960 --> 00:23:08,760
is something we can work on we can

00:23:05,490 --> 00:23:11,250
improve on that can help the client or

00:23:08,760 --> 00:23:12,420
just help the company and share our

00:23:11,250 --> 00:23:15,000
knowledge so this is what I'm trying to

00:23:12,420 --> 00:23:17,610
do now sharing the fact that technical

00:23:15,000 --> 00:23:19,470
conception is key and create a standard

00:23:17,610 --> 00:23:21,750
so that's in our company every time a

00:23:19,470 --> 00:23:24,480
team works on a new project they can use

00:23:21,750 --> 00:23:30,000
this tunnel to create perfect tickets

00:23:24,480 --> 00:23:32,430
perfect features so now in conclusion if

00:23:30,000 --> 00:23:35,940
I take a step back

00:23:32,430 --> 00:23:39,780
I think Kaizen is great because it helps

00:23:35,940 --> 00:23:42,210
you improve things in a scientific way

00:23:39,780 --> 00:23:45,090
so you look at a goal you take step by

00:23:42,210 --> 00:23:48,980
step you analyze real things and you

00:23:45,090 --> 00:23:52,590
look at problems and come up with ideas

00:23:48,980 --> 00:23:55,170
the Kaizen helps everyone so you can

00:23:52,590 --> 00:23:57,480
spend a lot of time every day on it even

00:23:55,170 --> 00:24:00,270
in our case for a service company the

00:23:57,480 --> 00:24:02,880
client allowed us to work every day on

00:24:00,270 --> 00:24:06,720
this board instead of just writing

00:24:02,880 --> 00:24:08,070
features because it helps obviously it

00:24:06,720 --> 00:24:10,680
helps the client because we are going

00:24:08,070 --> 00:24:12,210
faster thanks to it it helps the

00:24:10,680 --> 00:24:14,100
developers because we are a team and

00:24:12,210 --> 00:24:15,810
everyone is learning from it they can

00:24:14,100 --> 00:24:18,060
analyze what they are doing wrong and

00:24:15,810 --> 00:24:21,390
improving it helps the person that is

00:24:18,060 --> 00:24:24,060
leading the Kaizen because it's giving

00:24:21,390 --> 00:24:27,330
them leadership skills which are amazing

00:24:24,060 --> 00:24:28,140
to gather people and bring change and it

00:24:27,330 --> 00:24:30,210
helps the company

00:24:28,140 --> 00:24:31,680
our company theater learned from it and

00:24:30,210 --> 00:24:33,270
now if we manage to share the knowledge

00:24:31,680 --> 00:24:33,960
with every team then we can get better

00:24:33,270 --> 00:24:36,900
at what we do

00:24:33,960 --> 00:24:38,520
so everyone wins I guess the key thing

00:24:36,900 --> 00:24:40,560
as well is to involve as many people as

00:24:38,520 --> 00:24:42,330
we can so this is why we try to make it

00:24:40,560 --> 00:24:44,610
visible on the board in a company and

00:24:42,330 --> 00:24:46,890
now almost every project in our company

00:24:44,610 --> 00:24:48,990
has it has a board where they can

00:24:46,890 --> 00:24:51,270
experiment and show what they are doing

00:24:48,990 --> 00:24:54,740
because then everyone can walk in front

00:24:51,270 --> 00:24:54,740
and see what they are doing help them

00:24:55,100 --> 00:25:01,290
technical conception is key like I said

00:24:57,360 --> 00:25:05,010
if you are working in a development area

00:25:01,290 --> 00:25:06,270
I'd say try to spend more time refining

00:25:05,010 --> 00:25:07,770
what you're gonna do before because

00:25:06,270 --> 00:25:10,890
you're actually going to go faster

00:25:07,770 --> 00:25:14,310
afterwards and I guess the next step is

00:25:10,890 --> 00:25:17,730
this is not only for IT guys on because

00:25:14,310 --> 00:25:20,040
it's connection to it obviously but it

00:25:17,730 --> 00:25:21,540
can be applied for any topic so in any

00:25:20,040 --> 00:25:23,490
of your companies you can start a case

00:25:21,540 --> 00:25:25,140
and on any topic so I guess if you're

00:25:23,490 --> 00:25:27,300
interested then don't hesitate to come

00:25:25,140 --> 00:25:30,450
to me and we can look together and how

00:25:27,300 --> 00:25:32,810
you can start out and that's it for me

00:25:30,450 --> 00:25:36,860
thank you

00:25:32,810 --> 00:25:41,990
[Applause]

00:25:36,860 --> 00:25:41,990

YouTube URL: https://www.youtube.com/watch?v=fhN1MDg5QQA


