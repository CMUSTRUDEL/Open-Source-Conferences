Title: [Keynote] Tips and Tricks to Make Your DevOps Awesome - Nicole Forsgren
Publication date: 2020-01-12
Playlist: DevOpsDays Tel Aviv 2019
Description: 
	
Captions: 
	00:00:00,440 --> 00:00:03,580
[Music]

00:00:05,029 --> 00:00:17,760
how is everyone today I'm so excited I'm

00:00:11,700 --> 00:00:18,930
finally here I was very excited that's

00:00:17,760 --> 00:00:21,410
how excited I am

00:00:18,930 --> 00:00:24,060
we find we finally got everything

00:00:21,410 --> 00:00:28,740
arranged and I was gonna come last year

00:00:24,060 --> 00:00:31,289
and I had to cancel and sharone didn't

00:00:28,740 --> 00:00:34,580
kill me because I don't know if y'all

00:00:31,289 --> 00:00:37,670
heard but like Dora joined Google

00:00:34,580 --> 00:00:39,870
[Music]

00:00:37,670 --> 00:00:42,329
although it's super fun because I still

00:00:39,870 --> 00:00:45,210
get to tell Google to stick it and I

00:00:42,329 --> 00:00:46,890
like do my own thing which is more fun

00:00:45,210 --> 00:00:49,980
because now I just get to do more

00:00:46,890 --> 00:00:53,579
research and more fun and more strategy

00:00:49,980 --> 00:00:55,199
so this is tips and tricks to make your

00:00:53,579 --> 00:00:56,789
DevOps awesome but it's really tips and

00:00:55,199 --> 00:01:00,989
tricks to make your organization awesome

00:00:56,789 --> 00:01:03,019
because I mean Tec is fun but it's

00:01:00,989 --> 00:01:05,280
really just about tech to make

00:01:03,019 --> 00:01:08,510
organization better but really it's

00:01:05,280 --> 00:01:12,299
about things to make our work better

00:01:08,510 --> 00:01:14,760
because I do a bunch of research now but

00:01:12,299 --> 00:01:20,040
I really started out as a developer and

00:01:14,760 --> 00:01:22,259
then no one was running my system so I

00:01:20,040 --> 00:01:24,750
was this assignment for a while I if

00:01:22,259 --> 00:01:27,600
anyone here so here's a dev does

00:01:24,750 --> 00:01:29,729
development who he was a sysadmin and

00:01:27,600 --> 00:01:33,420
here ended up being a sysadmin because

00:01:29,729 --> 00:01:35,360
no one else was running the systems and

00:01:33,420 --> 00:01:38,460
then I end up doing hardware because

00:01:35,360 --> 00:01:40,320
nobody's taking care of that even so I

00:01:38,460 --> 00:01:44,729
did hardware for a few years and it

00:01:40,320 --> 00:01:47,340
seems like so often we end up running

00:01:44,729 --> 00:01:50,159
systems because we love the systems or

00:01:47,340 --> 00:01:52,229
like they keep breaking and so we end up

00:01:50,159 --> 00:01:55,770
having to or getting to run all these

00:01:52,229 --> 00:01:58,860
systems and then I kind of stumbled into

00:01:55,770 --> 00:02:02,790
a research because I had all these great

00:01:58,860 --> 00:02:04,649
ideas and other people had all these

00:02:02,790 --> 00:02:07,500
great ideas and were sharing stories and

00:02:04,649 --> 00:02:08,849
so I would go to management consulting

00:02:07,500 --> 00:02:11,039
for a little bit and I would go to the

00:02:08,849 --> 00:02:13,050
teams and I would say let's do this

00:02:11,039 --> 00:02:13,860
right and so we have all these great

00:02:13,050 --> 00:02:15,660
plans and ideas

00:02:13,860 --> 00:02:18,560
and manage what would come back and they

00:02:15,660 --> 00:02:20,810
would say yet but that won't work here

00:02:18,560 --> 00:02:26,520
has it have we ever heard that before

00:02:20,810 --> 00:02:28,590
I'd be like so I decided I would go get

00:02:26,520 --> 00:02:31,050
a PhD in part so I could figure out

00:02:28,590 --> 00:02:33,600
which types of things work generally

00:02:31,050 --> 00:02:38,310
also so I could win these fights with

00:02:33,600 --> 00:02:41,760
data so the this is kind of a

00:02:38,310 --> 00:02:45,240
summarization of what I found over 12

00:02:41,760 --> 00:02:46,830
years don't do math in your head or so

00:02:45,240 --> 00:02:48,360
the state of DevOps report and and

00:02:46,830 --> 00:02:50,280
accelerate and a bunch of stuff whose

00:02:48,360 --> 00:02:51,630
kind of summarization specifically what

00:02:50,280 --> 00:02:54,120
I've done over the last six years but

00:02:51,630 --> 00:02:57,090
I've been doing this for about 12 and

00:02:54,120 --> 00:02:59,970
I've kind of continued to tinker and

00:02:57,090 --> 00:03:02,459
advise and work with companies for

00:02:59,970 --> 00:03:04,730
several years and swear it systems

00:03:02,459 --> 00:03:07,500
because that's really what works right

00:03:04,730 --> 00:03:10,430
it's just swearing it systems you don't

00:03:07,500 --> 00:03:13,590
get that joke but it's true okay so

00:03:10,430 --> 00:03:15,780
that's me and my background so we've

00:03:13,590 --> 00:03:17,720
done kind of the work around state of

00:03:15,780 --> 00:03:21,810
DevOps report we've done accelerate and

00:03:17,720 --> 00:03:23,400
then I'll focus today someone what came

00:03:21,810 --> 00:03:26,100
out in the 2019 report have you all

00:03:23,400 --> 00:03:26,580
taken a look at the 2019 report or heard

00:03:26,100 --> 00:03:30,000
of it

00:03:26,580 --> 00:03:32,730
2019 don't I mean I say every year that

00:03:30,000 --> 00:03:35,330
gets better but it's true oh I love all

00:03:32,730 --> 00:03:38,549
my babies but I love some of them more

00:03:35,330 --> 00:03:41,580
so today we'll go through is DevOps

00:03:38,549 --> 00:03:46,920
even a thing we'll talk about how to get

00:03:41,580 --> 00:03:48,209
better when we make technology ache a

00:03:46,920 --> 00:03:50,670
choose-your-own-adventure this year I

00:03:48,209 --> 00:03:52,799
did extra because I suddenly had like

00:03:50,670 --> 00:03:54,600
more resources which was exciting talk

00:03:52,799 --> 00:03:57,560
about performance and what I mean when I

00:03:54,600 --> 00:04:00,060
say performance because when I do

00:03:57,560 --> 00:04:01,410
research or measurement and by the way a

00:04:00,060 --> 00:04:03,930
lot of this is similar when we work in

00:04:01,410 --> 00:04:05,760
companies right when I talk about things

00:04:03,930 --> 00:04:06,959
when we talk about things when we

00:04:05,760 --> 00:04:09,180
measure things we have to be pretty

00:04:06,959 --> 00:04:11,030
specific so when I talk about

00:04:09,180 --> 00:04:13,620
performance here it's speed instability

00:04:11,030 --> 00:04:15,810
I'll also talk about productivity and

00:04:13,620 --> 00:04:17,419
getting work done and I'll probably go

00:04:15,810 --> 00:04:20,160
on a little rant about what I don't mean

00:04:17,419 --> 00:04:21,359
when we keep like kicking ourselves in

00:04:20,160 --> 00:04:22,890
the butt

00:04:21,359 --> 00:04:25,860
i'll talk about culture because

00:04:22,890 --> 00:04:27,639
allegedly I hear culture matters talk a

00:04:25,860 --> 00:04:29,949
little bit open source and then how

00:04:27,639 --> 00:04:32,889
scale our transformation because we keep

00:04:29,949 --> 00:04:34,180
sucking at this ink last night I don't

00:04:32,889 --> 00:04:37,749
know if anyone follows me on Twitter but

00:04:34,180 --> 00:04:40,960
I ended hotel lobby like little lounge

00:04:37,749 --> 00:04:42,460
and heard these like tech bros ranting

00:04:40,960 --> 00:04:45,060
super hard about how amazing they were

00:04:42,460 --> 00:04:46,930
and also like destroying their

00:04:45,060 --> 00:04:49,300
transformation and breaking their

00:04:46,930 --> 00:04:51,729
culture so scaly your transformation the

00:04:49,300 --> 00:04:53,199
right way we'll talk about that and then

00:04:51,729 --> 00:04:54,669
I'll wrap up and talk and give you a

00:04:53,199 --> 00:04:57,639
quick list of all the things I didn't

00:04:54,669 --> 00:04:59,860
have a chance to talk about was outside

00:04:57,639 --> 00:05:01,150
okay or do we want me to just like throw

00:04:59,860 --> 00:05:01,599
that out the window talk about something

00:05:01,150 --> 00:05:03,879
else

00:05:01,599 --> 00:05:06,279
we give you that when I talk about

00:05:03,879 --> 00:05:08,740
DevOps what do I talk about I'm

00:05:06,279 --> 00:05:10,900
generally talking about speed and

00:05:08,740 --> 00:05:13,240
stability and I measure this with that

00:05:10,900 --> 00:05:15,699
what people have started to call the

00:05:13,240 --> 00:05:18,879
four key metrics so when I say speed and

00:05:15,699 --> 00:05:22,599
you're like girl there's five I can

00:05:18,879 --> 00:05:24,759
count I swear we're usually talking

00:05:22,599 --> 00:05:27,939
about the four key speed and stability

00:05:24,759 --> 00:05:30,219
metrics so speed is lead time code how

00:05:27,939 --> 00:05:33,729
long it takes to go from code commit to

00:05:30,219 --> 00:05:38,199
code running in production I know we do

00:05:33,729 --> 00:05:40,330
more work before committing code but if

00:05:38,199 --> 00:05:43,000
I focus on code commit to code running

00:05:40,330 --> 00:05:45,539
in production this is the very

00:05:43,000 --> 00:05:47,800
predictable portion of what we can do

00:05:45,539 --> 00:05:50,259
which means we want to reduce

00:05:47,800 --> 00:05:52,300
variability here all right this is the

00:05:50,259 --> 00:05:54,930
highly automated Parshin of what we can

00:05:52,300 --> 00:05:59,529
do the stuff that happens before this is

00:05:54,930 --> 00:06:01,960
the creative portion the R&D portion we

00:05:59,529 --> 00:06:04,960
expect more variability here right this

00:06:01,960 --> 00:06:09,009
is still important but it's very

00:06:04,960 --> 00:06:10,750
different does that make sense okay I'm

00:06:09,009 --> 00:06:13,300
not saying it's not important I'm saying

00:06:10,750 --> 00:06:15,069
it's understandably demonstrably

00:06:13,300 --> 00:06:17,349
different so that's what we focus on

00:06:15,069 --> 00:06:18,849
lead time it's also that measurement

00:06:17,349 --> 00:06:24,520
process is going to be different so

00:06:18,849 --> 00:06:26,589
that's lead time also fight me later I

00:06:24,520 --> 00:06:28,449
know there are like different ways to

00:06:26,589 --> 00:06:31,800
call this I'm call Italy time some call

00:06:28,449 --> 00:06:33,399
it cycle time this is a known problem

00:06:31,800 --> 00:06:36,279
don't yell at me

00:06:33,399 --> 00:06:37,210
this this problem existed before I came

00:06:36,279 --> 00:06:39,789
around

00:06:37,210 --> 00:06:42,550
deployment frequency how often we deploy

00:06:39,789 --> 00:06:45,310
code okay these are our speed metrics

00:06:42,550 --> 00:06:47,530
our stability metrics are one change

00:06:45,310 --> 00:06:50,770
fail rate how often you have a failure

00:06:47,530 --> 00:06:53,770
when you push code to production or

00:06:50,770 --> 00:06:55,479
you're like pre prod environment and now

00:06:53,770 --> 00:07:00,940
it's not just like an epic failure does

00:06:55,479 --> 00:07:02,740
it require time attention some love time

00:07:00,940 --> 00:07:05,380
to restore when you do have some kind of

00:07:02,740 --> 00:07:08,380
incident how long does it take you to

00:07:05,380 --> 00:07:11,080
restore that okay so these are our four

00:07:08,380 --> 00:07:17,020
key metrics starting last year we also

00:07:11,080 --> 00:07:18,280
added availability so this is the

00:07:17,020 --> 00:07:22,300
promises you make and keep to your

00:07:18,280 --> 00:07:24,250
customers because we are now in cloud

00:07:22,300 --> 00:07:25,720
and availability environments so our

00:07:24,250 --> 00:07:27,039
customers have like a say they didn't

00:07:25,720 --> 00:07:29,110
matter before but we were when we were

00:07:27,039 --> 00:07:30,729
in like packaged software environments

00:07:29,110 --> 00:07:33,520
things were a little bit different I

00:07:30,729 --> 00:07:36,520
will say that whatever we're going to

00:07:33,520 --> 00:07:40,509
call it doing doing the DevOps I do work

00:07:36,520 --> 00:07:43,659
with companies that are still in printed

00:07:40,509 --> 00:07:46,090
packaged media that are absolutely using

00:07:43,659 --> 00:07:50,710
these four key metrics and several of

00:07:46,090 --> 00:07:51,880
like DevOps concepts to track what

00:07:50,710 --> 00:07:54,240
they're doing and to improve their

00:07:51,880 --> 00:07:56,139
performance okay so when I say DevOps

00:07:54,240 --> 00:07:57,780
whatever you want to call it when I say

00:07:56,139 --> 00:08:00,430
transformation when I track performance

00:07:57,780 --> 00:08:01,599
this is what I'm talking about and many

00:08:00,430 --> 00:08:03,550
many companies and organizations

00:08:01,599 --> 00:08:07,539
throughout the industry are using this

00:08:03,550 --> 00:08:10,449
to track their performance now we have

00:08:07,539 --> 00:08:14,590
movement if we see what the industry is

00:08:10,449 --> 00:08:19,180
doing from 2018 to 2019 here's what we

00:08:14,590 --> 00:08:20,830
see elite performers have almost tripled

00:08:19,180 --> 00:08:23,680
they've gone from 7 percent to 20

00:08:20,830 --> 00:08:26,050
percent last year they were a subset of

00:08:23,680 --> 00:08:28,990
the industry now they've broken out into

00:08:26,050 --> 00:08:32,409
their own group so many analysts have

00:08:28,990 --> 00:08:35,349
said DevOps is cross the chasm our

00:08:32,409 --> 00:08:38,260
analysis kind of echoes that the nice

00:08:35,349 --> 00:08:41,709
thing here is that we can see that it's

00:08:38,260 --> 00:08:44,169
kind of a safe bet now right some highly

00:08:41,709 --> 00:08:46,660
regulated organizations or some very

00:08:44,169 --> 00:08:48,040
risk-averse executives have said we

00:08:46,660 --> 00:08:50,080
don't want to do this we want to be

00:08:48,040 --> 00:08:54,760
careful like shell

00:08:50,080 --> 00:08:57,450
everything is fine make this bet making

00:08:54,760 --> 00:09:00,700
developing and delivering software in

00:08:57,450 --> 00:09:03,149
faster cycles that's not just agile

00:09:00,700 --> 00:09:06,190
because agile is only faster tighter

00:09:03,149 --> 00:09:08,500
coordination between the business and

00:09:06,190 --> 00:09:10,390
development so now business development

00:09:08,500 --> 00:09:13,510
and operations this is now a safe bet

00:09:10,390 --> 00:09:16,890
okay so that's the elite performers now

00:09:13,510 --> 00:09:20,980
take a look at the low performers we see

00:09:16,890 --> 00:09:24,190
shrinkage here this is a good sign it

00:09:20,980 --> 00:09:25,660
means people are getting better now take

00:09:24,190 --> 00:09:28,360
a look at medium performers this is

00:09:25,660 --> 00:09:31,870
interesting some of this growth comes

00:09:28,360 --> 00:09:34,630
from low performers moving up but some

00:09:31,870 --> 00:09:37,060
comes from high performers moving down

00:09:34,630 --> 00:09:43,870
so last year it was 48% this year it's

00:09:37,060 --> 00:09:48,490
the comparative 23 plus 20 is 43% why is

00:09:43,870 --> 00:09:50,740
this some is probably some organizations

00:09:48,490 --> 00:09:53,670
struggling with complexity some is

00:09:50,740 --> 00:09:57,250
probably struggling from increased

00:09:53,670 --> 00:09:59,350
controls we see many organizations panic

00:09:57,250 --> 00:10:01,810
and just introduce change approvals I

00:09:59,350 --> 00:10:02,920
don't know if anyone has seen this I'll

00:10:01,810 --> 00:10:06,579
talk about this in a little bit

00:10:02,920 --> 00:10:08,589
also many organizations do this maturity

00:10:06,579 --> 00:10:10,720
model thing or like we have reached

00:10:08,589 --> 00:10:12,399
level 5 we have arrived we are done and

00:10:10,720 --> 00:10:14,589
they will sit and they will not do

00:10:12,399 --> 00:10:17,620
anything they will stop improving they

00:10:14,589 --> 00:10:21,070
will stop getting better and in a world

00:10:17,620 --> 00:10:25,360
where technology continues to grow in

00:10:21,070 --> 00:10:27,730
complexity you can't do that we get

00:10:25,360 --> 00:10:32,200
worse we slow down and the rest of the

00:10:27,730 --> 00:10:33,520
world moves on so when organizations say

00:10:32,200 --> 00:10:35,320
but when will my technology

00:10:33,520 --> 00:10:39,310
transformation and when can I stop

00:10:35,320 --> 00:10:41,350
investing the answer is never and they

00:10:39,310 --> 00:10:42,310
look at me and laser beams start

00:10:41,350 --> 00:10:44,890
shooting out of their eyes they get

00:10:42,310 --> 00:10:46,449
really mad they're like but I want to

00:10:44,890 --> 00:10:47,850
stop investing and I'm like well so when

00:10:46,449 --> 00:10:50,230
are you going to stop investing in

00:10:47,850 --> 00:10:52,899
customer acquisition and they look at me

00:10:50,230 --> 00:10:55,000
like I'm crazy and I'm like that's what

00:10:52,899 --> 00:10:57,160
technology does for us technology helps

00:10:55,000 --> 00:10:58,709
us deliver value it helps us to keep up

00:10:57,160 --> 00:11:02,920
with compliance and regulatory changes

00:10:58,709 --> 00:11:05,050
so it's not going to end so apologies

00:11:02,920 --> 00:11:07,520
this is an eye chart

00:11:05,050 --> 00:11:10,150
but when we look at what elite

00:11:07,520 --> 00:11:13,070
performers look at they can deploy on

00:11:10,150 --> 00:11:15,710
demand their lead time is less than a

00:11:13,070 --> 00:11:17,210
day their time to restore service is

00:11:15,710 --> 00:11:22,100
less than an hour and their change fail

00:11:17,210 --> 00:11:26,960
rate between 0 and 15 percent the low

00:11:22,100 --> 00:11:29,270
performers deploy between one in six

00:11:26,960 --> 00:11:31,610
months lead time for changes is between

00:11:29,270 --> 00:11:33,230
one and six months time two restores

00:11:31,610 --> 00:11:34,970
between a week and a month and that

00:11:33,230 --> 00:11:37,520
changed flow rate is between forty six

00:11:34,970 --> 00:11:41,480
and sixty percent those deltas are

00:11:37,520 --> 00:11:43,330
bagged now I will note that a few of

00:11:41,480 --> 00:11:45,190
these stats look like they're similar

00:11:43,330 --> 00:11:47,510
they're actually statistically

00:11:45,190 --> 00:11:51,500
significant that the difference is there

00:11:47,510 --> 00:11:54,770
and so one of my co researchers this

00:11:51,500 --> 00:11:57,560
year dr. Dustin Smith did some analysis

00:11:54,770 --> 00:12:00,020
for me and and pulled together some

00:11:57,560 --> 00:12:02,080
graphics so you can see where like

00:12:00,020 --> 00:12:04,970
change fail rate it it looks like it's

00:12:02,080 --> 00:12:06,170
similar for medium high and elite

00:12:04,970 --> 00:12:08,500
performers and you could see where

00:12:06,170 --> 00:12:11,150
medium and high do have some overlaps

00:12:08,500 --> 00:12:13,010
but elite actually pulls above so I

00:12:11,150 --> 00:12:16,070
suggest you check out the report because

00:12:13,010 --> 00:12:17,960
what we do is we report the median not

00:12:16,070 --> 00:12:19,550
the average because the distribute sorry

00:12:17,960 --> 00:12:21,770
stats could be I can I do a quick stats

00:12:19,550 --> 00:12:23,900
note the distribution isn't normal

00:12:21,770 --> 00:12:25,970
so I report the median because that's

00:12:23,900 --> 00:12:27,830
more accurate to report but there are

00:12:25,970 --> 00:12:31,040
significant differences and you can see

00:12:27,830 --> 00:12:33,530
when you look at the report how kind of

00:12:31,040 --> 00:12:35,680
how they layout so we did include that

00:12:33,530 --> 00:12:38,840
in the appendix this year quick sidenote

00:12:35,680 --> 00:12:41,000
okay so when I compare my elite

00:12:38,840 --> 00:12:44,240
performers and the low performers this

00:12:41,000 --> 00:12:46,580
is what I see I see 208 times more

00:12:44,240 --> 00:12:49,330
frequent code deployments 106 times

00:12:46,580 --> 00:12:52,670
faster lead time from commit to deploy

00:12:49,330 --> 00:12:54,230
2,600 times faster time to recover from

00:12:52,670 --> 00:12:57,950
incident and seven times lower change

00:12:54,230 --> 00:12:59,750
fail rate and people say okay why why

00:12:57,950 --> 00:13:01,160
does this matter well it matters because

00:12:59,750 --> 00:13:04,640
the marketing team loves numbers like

00:13:01,160 --> 00:13:06,200
this also executives love it it it means

00:13:04,640 --> 00:13:09,170
that we can again deliver features

00:13:06,200 --> 00:13:14,360
faster but the security teams love it

00:13:09,170 --> 00:13:16,930
too because we can keep up with security

00:13:14,360 --> 00:13:19,699
threats and security responses

00:13:16,930 --> 00:13:22,399
who hears love and kubernetes right

00:13:19,699 --> 00:13:24,260
kubernetes and micro-services the faster

00:13:22,399 --> 00:13:28,040
we can turn over our infrastructure the

00:13:24,260 --> 00:13:28,420
harder it is for attackers to come after

00:13:28,040 --> 00:13:30,320
us

00:13:28,420 --> 00:13:33,079
the better that we can keep up with

00:13:30,320 --> 00:13:35,630
vulnerability and security threats this

00:13:33,079 --> 00:13:39,500
really is a holistic solution for our

00:13:35,630 --> 00:13:40,880
company also auditors love it we can

00:13:39,500 --> 00:13:44,060
keep up with compliance and regulatory

00:13:40,880 --> 00:13:45,290
changes right I spoke with someone in in

00:13:44,060 --> 00:13:46,820
a government and they were like we don't

00:13:45,290 --> 00:13:49,790
have competitors

00:13:46,820 --> 00:13:51,649
well government's change we have

00:13:49,790 --> 00:13:52,940
compliance regulatory changes we can

00:13:51,649 --> 00:13:55,220
patch our infrastructure and roll

00:13:52,940 --> 00:13:59,540
infrastructure better and faster this

00:13:55,220 --> 00:14:00,589
means a lot to us as I mentioned we

00:13:59,540 --> 00:14:03,740
added availability

00:14:00,589 --> 00:14:05,540
it's about customers so this measures

00:14:03,740 --> 00:14:07,910
how well teams define availability

00:14:05,540 --> 00:14:11,329
targets track their current availability

00:14:07,910 --> 00:14:13,100
and learn from any outages to dig into

00:14:11,329 --> 00:14:16,519
some of these things I'd look at you

00:14:13,100 --> 00:14:23,329
know SRA practices and metrics around

00:14:16,519 --> 00:14:24,920
this s ellos SLA s and SL is the joke

00:14:23,329 --> 00:14:28,399
here day one is short but day two is

00:14:24,920 --> 00:14:32,389
long we can push that code but how well

00:14:28,399 --> 00:14:36,199
do we keep that up okay so we do tuck

00:14:32,389 --> 00:14:37,880
because it's fun I mean yeah that's why

00:14:36,199 --> 00:14:40,040
I'm I mean that's why I got into tech

00:14:37,880 --> 00:14:43,100
also wall so that because I like making

00:14:40,040 --> 00:14:46,720
money I mean I'm sure we're all here

00:14:43,100 --> 00:14:48,649
because we like doing tech but also

00:14:46,720 --> 00:14:51,680
organizations care about more than just

00:14:48,649 --> 00:14:54,230
technology being fun technology delivers

00:14:51,680 --> 00:14:55,940
value we see for six years now that

00:14:54,230 --> 00:14:57,290
elite performers are twice as likely to

00:14:55,940 --> 00:15:00,050
meet or exceed their organizational

00:14:57,290 --> 00:15:02,360
performance goals like that's very

00:15:00,050 --> 00:15:03,920
academic organizational performance this

00:15:02,360 --> 00:15:05,449
covers commercial goals and non

00:15:03,920 --> 00:15:09,310
commercial goals so commercial goals are

00:15:05,449 --> 00:15:12,050
things like productivity performance

00:15:09,310 --> 00:15:14,319
market share and non commercial goals

00:15:12,050 --> 00:15:18,069
are things like effectiveness efficiency

00:15:14,319 --> 00:15:18,069
customer satisfaction

00:15:18,140 --> 00:15:23,760
okay so it matters how do we actually

00:15:20,910 --> 00:15:26,220
get better people will say well Nicole I

00:15:23,760 --> 00:15:29,520
can't just decide to deliver supper

00:15:26,220 --> 00:15:31,470
faster and more stable so we actually do

00:15:29,520 --> 00:15:34,230
predictive analysis to see which types

00:15:31,470 --> 00:15:38,570
of things help so this is the the

00:15:34,230 --> 00:15:42,270
choose-your-own-adventure portion of the

00:15:38,570 --> 00:15:44,940
research so I'll walk through the

00:15:42,270 --> 00:15:47,160
research models anytime you see an arrow

00:15:44,940 --> 00:15:48,959
a line and an arrow that's predictive so

00:15:47,160 --> 00:15:50,910
the things that improve performance

00:15:48,959 --> 00:15:52,500
which is speed instability culture

00:15:50,910 --> 00:15:54,209
change management cloud technical

00:15:52,500 --> 00:15:58,740
practices and disaster recovery testing

00:15:54,209 --> 00:16:00,540
and then this year we added productivity

00:15:58,740 --> 00:16:03,089
and so which types of things help with

00:16:00,540 --> 00:16:04,890
productivity now we've done this over

00:16:03,089 --> 00:16:06,990
several years we've done it over six

00:16:04,890 --> 00:16:09,690
years so I have like a giant ridiculous

00:16:06,990 --> 00:16:11,370
diagram where we've seen we found over

00:16:09,690 --> 00:16:13,760
20 things I think it's almost 30

00:16:11,370 --> 00:16:16,410
capabilities now that help predict

00:16:13,760 --> 00:16:17,880
productivity the nice thing about our

00:16:16,410 --> 00:16:19,940
research is we've done this from a

00:16:17,880 --> 00:16:22,680
completely tool and vendor agnostic

00:16:19,940 --> 00:16:23,790
perspective and if you go to I think

00:16:22,680 --> 00:16:26,520
I've got the link at the end of this

00:16:23,790 --> 00:16:28,220
cloud google.com slash DevOps you could

00:16:26,520 --> 00:16:32,010
see what all of these capabilities are

00:16:28,220 --> 00:16:33,360
so for example CI you can see what types

00:16:32,010 --> 00:16:35,730
of things make CI

00:16:33,360 --> 00:16:37,770
and predictive continuous integration we

00:16:35,730 --> 00:16:38,880
know what this is right I said CI last

00:16:37,770 --> 00:16:40,800
weekend they're like what's the guy and

00:16:38,880 --> 00:16:45,029
I was like why are you in this meeting

00:16:40,800 --> 00:16:48,600
we know what makes CI actually

00:16:45,029 --> 00:16:50,130
predictive and then you can use it as a

00:16:48,600 --> 00:16:52,709
value ative framework you can say does

00:16:50,130 --> 00:16:54,930
my tool whether it's been purchased or

00:16:52,709 --> 00:16:56,940
homegrown does my tool do these four

00:16:54,930 --> 00:17:02,540
things right and and we've laid this out

00:16:56,940 --> 00:17:04,980
on cloud google.com slash DevOps so

00:17:02,540 --> 00:17:06,449
improving performance right so that's

00:17:04,980 --> 00:17:09,569
the model that's fine

00:17:06,449 --> 00:17:12,150
it's how you read it just kidding Cal

00:17:09,569 --> 00:17:14,610
walk us through it so here's how we've

00:17:12,150 --> 00:17:18,050
built out the models in this year's

00:17:14,610 --> 00:17:20,510
report I started with putting a dark

00:17:18,050 --> 00:17:23,640
black border around the things that are

00:17:20,510 --> 00:17:26,520
typical team or organizational goals to

00:17:23,640 --> 00:17:28,380
kind of draw your eye there and then you

00:17:26,520 --> 00:17:30,660
can if you want you can work backward

00:17:28,380 --> 00:17:31,440
because then you can say yeah how do I

00:17:30,660 --> 00:17:33,750
want to improve that

00:17:31,440 --> 00:17:36,300
like I said anything that has a line in

00:17:33,750 --> 00:17:37,980
an arrow is predictive and so if you

00:17:36,300 --> 00:17:40,380
want to say I want to improve sto

00:17:37,980 --> 00:17:43,110
performance which is speed and stability

00:17:40,380 --> 00:17:44,850
and availability work back backward from

00:17:43,110 --> 00:17:47,970
there or let's say we want to improve

00:17:44,850 --> 00:17:50,540
speed and stability which things improve

00:17:47,970 --> 00:17:54,000
that well that's going to be culture

00:17:50,540 --> 00:17:56,160
having a clear change process having a

00:17:54,000 --> 00:17:58,290
heavyweight change process negatively

00:17:56,160 --> 00:18:01,020
impacts it so it reduces it there's a

00:17:58,290 --> 00:18:03,930
minus on that arrow disaster recovery

00:18:01,020 --> 00:18:06,900
testing continuous delivery and cloud

00:18:03,930 --> 00:18:09,510
that makes sense now you've got your

00:18:06,900 --> 00:18:11,580
list of candidate solutions and then you

00:18:09,510 --> 00:18:17,520
can start from there does that make

00:18:11,580 --> 00:18:22,770
sense okay all I have a clicker the

00:18:17,520 --> 00:18:25,710
power so let's dig into one cloud cloud

00:18:22,770 --> 00:18:27,390
we started looking at last year so the

00:18:25,710 --> 00:18:29,190
interesting thing though is I would talk

00:18:27,390 --> 00:18:31,980
to people I would say huh when using the

00:18:29,190 --> 00:18:33,510
cloud and I could talk to execs and they

00:18:31,980 --> 00:18:35,400
would say well I just spent all this

00:18:33,510 --> 00:18:36,630
money on cloud and nothing changed or I

00:18:35,400 --> 00:18:38,460
could speak to developers and they would

00:18:36,630 --> 00:18:41,130
say we did this cloud thing but nothing

00:18:38,460 --> 00:18:43,110
actually changed in my work so we wanted

00:18:41,130 --> 00:18:46,080
to research it and we went into the

00:18:43,110 --> 00:18:49,680
definition from NIST National Institute

00:18:46,080 --> 00:18:51,150
of Standards and Technology so we wanted

00:18:49,680 --> 00:18:54,300
to actually dig into it these are the

00:18:51,150 --> 00:18:57,240
five things that make cloud cloud so

00:18:54,300 --> 00:18:59,610
on-demand self-service can't like put in

00:18:57,240 --> 00:19:01,710
a ServiceNow ticket wait two weeks for

00:18:59,610 --> 00:19:03,120
someone to approve it I ordered you know

00:19:01,710 --> 00:19:06,090
points may God have mercy on your soul

00:19:03,120 --> 00:19:07,680
if anyone has seen Billy Madison that's

00:19:06,090 --> 00:19:09,390
where it comes from I'm not actually

00:19:07,680 --> 00:19:12,210
that mean I'm a little mean I'm not that

00:19:09,390 --> 00:19:14,910
mean broad network access you need to be

00:19:12,210 --> 00:19:17,340
able to access cloud from several

00:19:14,910 --> 00:19:21,150
different types of devices resource

00:19:17,340 --> 00:19:26,520
pooling rapid elasticity bursting like

00:19:21,150 --> 00:19:28,860
magic up and down measure service you

00:19:26,520 --> 00:19:30,120
only pay for what you use so sometimes

00:19:28,860 --> 00:19:31,650
I'll play this game where I like make

00:19:30,120 --> 00:19:34,650
people put their hands up and then drop

00:19:31,650 --> 00:19:36,210
their hand it's really interesting drop

00:19:34,650 --> 00:19:38,970
your head any time they're not doing one

00:19:36,210 --> 00:19:41,520
of these because what we find is that we

00:19:38,970 --> 00:19:43,840
ask people early on if they're using the

00:19:41,520 --> 00:19:49,230
cloud and then ask

00:19:43,840 --> 00:19:51,250
later which of these pieces capabilities

00:19:49,230 --> 00:19:53,140
again right I said you can use this as

00:19:51,250 --> 00:19:56,200
an evaluative framework they're actually

00:19:53,140 --> 00:19:58,210
using what we find is that only 29

00:19:56,200 --> 00:20:00,550
percent of respondents meet all five

00:19:58,210 --> 00:20:02,050
characteristics so the part where

00:20:00,550 --> 00:20:03,010
they're like oh yeah well I spend all

00:20:02,050 --> 00:20:04,180
this money on the cloud and I'm not

00:20:03,010 --> 00:20:08,560
getting the benefits because you're not

00:20:04,180 --> 00:20:10,810
doing it I mean I bought a membership to

00:20:08,560 --> 00:20:12,340
the gym I am I getting okay except now I

00:20:10,810 --> 00:20:14,770
am like my legs are really sore so if

00:20:12,340 --> 00:20:17,200
I'm walking by the inside like you

00:20:14,770 --> 00:20:19,960
actually have to do the work if you want

00:20:17,200 --> 00:20:23,530
to get the benefits and for the people

00:20:19,960 --> 00:20:27,630
who do elite performers were 24 times

00:20:23,530 --> 00:20:31,900
more likely to have met all five

00:20:27,630 --> 00:20:33,850
characteristics the low performers so if

00:20:31,900 --> 00:20:36,100
you actually execute you see the

00:20:33,850 --> 00:20:39,190
benefits last year we did the same

00:20:36,100 --> 00:20:40,810
analysis and and it was slightly we were

00:20:39,190 --> 00:20:42,670
slightly different but it was 23 times

00:20:40,810 --> 00:20:48,790
more likely so again we're seeing

00:20:42,670 --> 00:20:50,050
consistency across years okay we we

00:20:48,790 --> 00:20:51,730
added something new this year code

00:20:50,050 --> 00:20:54,220
maintainability we see that this

00:20:51,730 --> 00:20:55,960
positively contributes to continuous

00:20:54,220 --> 00:20:58,020
delivery and helps reduce technical debt

00:20:55,960 --> 00:21:00,040
stay tuned I'll talk about TechNet

00:20:58,020 --> 00:21:01,870
systems and so what's code

00:21:00,040 --> 00:21:04,720
maintainability it's systems and tools

00:21:01,870 --> 00:21:07,870
that make it easy to change code

00:21:04,720 --> 00:21:11,740
maintained by other teams find code in

00:21:07,870 --> 00:21:14,950
your codebase reuse other people's code

00:21:11,740 --> 00:21:16,450
add update migrate to new versions of

00:21:14,950 --> 00:21:18,880
code dependencies without breaking code

00:21:16,450 --> 00:21:21,850
so things like avoiding that diamond

00:21:18,880 --> 00:21:23,110
dependency issue so if you had something

00:21:21,850 --> 00:21:26,260
like this if you have something like

00:21:23,110 --> 00:21:29,920
this does that make sense that this

00:21:26,260 --> 00:21:32,670
would be helpful right that this makes

00:21:29,920 --> 00:21:37,090
sense this helps this helps make our

00:21:32,670 --> 00:21:40,750
code and coding and development better

00:21:37,090 --> 00:21:44,580
and faster and easier but we wanted to

00:21:40,750 --> 00:21:47,320
test it we wanted to see if this was

00:21:44,580 --> 00:21:51,520
generalizable outside different contexts

00:21:47,320 --> 00:21:52,960
and and it is true okay yeah read the

00:21:51,520 --> 00:21:55,210
report going to read the port what else

00:21:52,960 --> 00:21:55,990
is new we wanted to dig into

00:21:55,210 --> 00:21:57,640
productivity

00:21:55,990 --> 00:22:01,679
okay so productivity

00:21:57,640 --> 00:22:04,840
it's again I've got that box around it

00:22:01,679 --> 00:22:08,110
what contributes cultural psychological

00:22:04,840 --> 00:22:11,620
safety useful easy-to-use tools this

00:22:08,110 --> 00:22:13,270
makes sense right we want good tools I

00:22:11,620 --> 00:22:14,920
can't tell you how many times I had to

00:22:13,270 --> 00:22:17,679
use like awful tools because that was

00:22:14,920 --> 00:22:20,100
what my organization approved made it

00:22:17,679 --> 00:22:22,630
through like the procurement process

00:22:20,100 --> 00:22:25,660
internal and external search right if I

00:22:22,630 --> 00:22:27,010
could what's the joke that like a degree

00:22:25,660 --> 00:22:30,420
in computer science is really just being

00:22:27,010 --> 00:22:30,420
able to Google or its Stack Overflow

00:22:30,600 --> 00:22:34,150
internal and external because sometimes

00:22:32,770 --> 00:22:36,429
I need to search my internal knowledge

00:22:34,150 --> 00:22:40,299
base to find out like ridiculous config

00:22:36,429 --> 00:22:42,850
file and technical that reduces

00:22:40,299 --> 00:22:45,549
productivity now the nice thing is that

00:22:42,850 --> 00:22:47,830
productivity also helps with work

00:22:45,549 --> 00:22:49,929
recovery it's an academic term but we

00:22:47,830 --> 00:22:51,910
used it because it's that right mix of

00:22:49,929 --> 00:22:55,390
like work-life balance and disconnecting

00:22:51,910 --> 00:22:57,090
from work which then reduces burnout

00:22:55,390 --> 00:23:00,150
[Music]

00:22:57,090 --> 00:23:03,910
okay but what I mean by productivity

00:23:00,150 --> 00:23:07,630
productivity is the ability to get

00:23:03,910 --> 00:23:10,740
complex time-consuming tasks done with

00:23:07,630 --> 00:23:12,820
minimal distractions and interruptions

00:23:10,740 --> 00:23:17,950
productivity is not lines of code

00:23:12,820 --> 00:23:21,460
written because too many lines of code

00:23:17,950 --> 00:23:23,980
is just bloated code bases which gives

00:23:21,460 --> 00:23:28,780
you more technical that later lines of

00:23:23,980 --> 00:23:29,860
code written is not story points because

00:23:28,780 --> 00:23:32,320
here's the problem if I have a story

00:23:29,860 --> 00:23:33,549
point if I have like goals of story

00:23:32,320 --> 00:23:38,290
points and you have goals the story

00:23:33,549 --> 00:23:39,610
points I will never help you because if

00:23:38,290 --> 00:23:43,929
I help you then I don't get my story

00:23:39,610 --> 00:23:46,210
points written so some people like this

00:23:43,929 --> 00:23:47,700
is hard to measure but many researchers

00:23:46,210 --> 00:23:50,470
are starting to measure it this way

00:23:47,700 --> 00:23:56,380
because this is actually a very good

00:23:50,470 --> 00:24:01,090
measure for an overall holistic capture

00:23:56,380 --> 00:24:04,030
of productivity and this is the kind of

00:24:01,090 --> 00:24:06,490
productivity that helps us leave work at

00:24:04,030 --> 00:24:09,850
work and and we know what this feels

00:24:06,490 --> 00:24:11,309
like right if we get a bunch of complex

00:24:09,850 --> 00:24:13,230
work done and we go

00:24:11,309 --> 00:24:16,320
home we can kind of shut our brains off

00:24:13,230 --> 00:24:18,179
right however if we get a bunch of you

00:24:16,320 --> 00:24:20,490
know those days we're like we were busy

00:24:18,179 --> 00:24:23,789
all day long but somehow we got nothing

00:24:20,490 --> 00:24:32,309
done and we keep spinning on it all it

00:24:23,789 --> 00:24:36,929
constantly all night we just fly so

00:24:32,309 --> 00:24:39,450
technical debt technical debt reduces

00:24:36,929 --> 00:24:41,159
productivity it was introduced in 1992

00:24:39,450 --> 00:24:43,139
by Ward Cunningham to describe what

00:24:41,159 --> 00:24:47,399
happens when we don't maintain what he

00:24:43,139 --> 00:24:48,899
calls immature code so people have

00:24:47,399 --> 00:24:51,899
wondered if a technical debt is really a

00:24:48,899 --> 00:24:53,940
thing do we do we know technical debt do

00:24:51,899 --> 00:24:55,590
we feel technical debt so we wanted to

00:24:53,940 --> 00:24:57,659
see if there was a way to capture this

00:24:55,590 --> 00:24:59,220
and measure it in a scientifically

00:24:57,659 --> 00:25:02,009
rigorous way and these are the things

00:24:59,220 --> 00:25:03,720
that that measure technical debt known

00:25:02,009 --> 00:25:06,350
bugs that go on fixed to favor of new

00:25:03,720 --> 00:25:07,889
features I feel attacked

00:25:06,350 --> 00:25:10,499
[Music]

00:25:07,889 --> 00:25:12,929
insufficient test coverage this is super

00:25:10,499 --> 00:25:16,889
real problems related to low code

00:25:12,929 --> 00:25:18,149
quality or poor design code or artifacts

00:25:16,889 --> 00:25:20,759
that aren't cleaned up when they're no

00:25:18,149 --> 00:25:25,200
longer used because we might use it

00:25:20,759 --> 00:25:27,539
later implementations the team doesn't

00:25:25,200 --> 00:25:30,809
have expertise in and therefore we can't

00:25:27,539 --> 00:25:32,610
debugger maintain it so often we just

00:25:30,809 --> 00:25:36,470
like it rotated on a team and then the

00:25:32,610 --> 00:25:41,600
code stays there in complete migration

00:25:36,470 --> 00:25:44,309
obsolete technology COBOL forever

00:25:41,600 --> 00:25:50,309
incomplete or outdated documentation or

00:25:44,309 --> 00:25:53,549
missing comments so how do we reduce

00:25:50,309 --> 00:25:57,720
technical debt ok refactoring for sure

00:25:53,549 --> 00:25:59,820
but what else can we do we can make

00:25:57,720 --> 00:26:02,070
smart investments in tooling and

00:25:59,820 --> 00:26:03,749
technology so it's interesting because

00:26:02,070 --> 00:26:05,369
word Cunningham's original article which

00:26:03,749 --> 00:26:07,710
by the way is super short it's it's

00:26:05,369 --> 00:26:09,389
generous to call it an article he

00:26:07,710 --> 00:26:12,679
suggests that what we should do is only

00:26:09,389 --> 00:26:14,999
have one person maintain very small

00:26:12,679 --> 00:26:17,789
programs because then they can always

00:26:14,999 --> 00:26:19,200
and forever maintain those programs in

00:26:17,789 --> 00:26:23,039
their head and maintain a complete

00:26:19,200 --> 00:26:24,720
mental model is that even remotely

00:26:23,039 --> 00:26:27,030
possible today

00:26:24,720 --> 00:26:28,800
no because we have complex distributed

00:26:27,030 --> 00:26:33,090
systems with several people working on

00:26:28,800 --> 00:26:37,100
them so what might a solution being a

00:26:33,090 --> 00:26:40,440
solution might be to help people gain

00:26:37,100 --> 00:26:44,540
visibility into systems and understand

00:26:40,440 --> 00:26:48,570
what those systems are doing and reduce

00:26:44,540 --> 00:26:51,090
surface area impacts right and so what

00:26:48,570 --> 00:26:52,950
that looks like is code maintainability

00:26:51,090 --> 00:26:56,450
remember we talked about that how that's

00:26:52,950 --> 00:26:59,400
seeing the impacts of changes on code

00:26:56,450 --> 00:27:00,990
loosely coupled architecture so that

00:26:59,400 --> 00:27:03,480
when we do make changes

00:27:00,990 --> 00:27:05,400
it minimizes it's not this huge and

00:27:03,480 --> 00:27:08,910
wanna list that keeps you like this huge

00:27:05,400 --> 00:27:12,510
domino effect and monitoring so that we

00:27:08,910 --> 00:27:15,210
can see the changes so organizations can

00:27:12,510 --> 00:27:21,120
make smart system and tooling

00:27:15,210 --> 00:27:22,250
investments to help us okay I keep

00:27:21,120 --> 00:27:25,770
hearing like this culture thing

00:27:22,250 --> 00:27:30,030
allegedly culture matters okay what's

00:27:25,770 --> 00:27:31,650
that mean we've studied westerns

00:27:30,030 --> 00:27:33,510
organizational culture for the first

00:27:31,650 --> 00:27:35,850
five years at the state DevOps poor does

00:27:33,510 --> 00:27:38,670
anyone heard westrom is anyone not heard

00:27:35,850 --> 00:27:40,860
westrom okay let me run through Western

00:27:38,670 --> 00:27:42,750
really quick we have pathological

00:27:40,860 --> 00:27:45,180
culture oh it was introduced by dr. Ron

00:27:42,750 --> 00:27:48,600
westrom he's a sociologist he study

00:27:45,180 --> 00:27:52,860
complex high-risk systems in areas like

00:27:48,600 --> 00:27:57,480
healthcare aviation nuclear power so

00:27:52,860 --> 00:28:02,450
when you screw up people die that idea

00:27:57,480 --> 00:28:05,040
also he understood and focused on

00:28:02,450 --> 00:28:08,130
information flow because when we have

00:28:05,040 --> 00:28:10,350
good information flow we understand

00:28:08,130 --> 00:28:12,780
what's happening and he also found that

00:28:10,350 --> 00:28:17,370
this was predictive of performance

00:28:12,780 --> 00:28:20,280
outcomes so there was pathological or

00:28:17,370 --> 00:28:22,830
power oriented systems typify dilo

00:28:20,280 --> 00:28:23,880
cooperation the messenger was shot you

00:28:22,830 --> 00:28:26,960
shoot the messenger when you get bad

00:28:23,880 --> 00:28:29,250
news kind of shirk responsibilities

00:28:26,960 --> 00:28:31,680
discourage bridging so you stay in your

00:28:29,250 --> 00:28:34,050
job function failure leads to

00:28:31,680 --> 00:28:36,500
scapegoating and didn't want to hear any

00:28:34,050 --> 00:28:38,490
kind of novelty just do your job

00:28:36,500 --> 00:28:40,650
bureaucratic culture

00:28:38,490 --> 00:28:41,750
cooperation or the messenger when they

00:28:40,650 --> 00:28:44,910
bring you bad news

00:28:41,750 --> 00:28:46,950
bridging tolerated narrowly defined

00:28:44,910 --> 00:28:49,250
responsibilities failure leads to

00:28:46,950 --> 00:28:52,890
justice novelty leads to problems

00:28:49,250 --> 00:28:54,960
generative culture high cooperation

00:28:52,890 --> 00:28:56,490
messengers are trained that is we want

00:28:54,960 --> 00:28:59,220
people to bring us bad news so we can

00:28:56,490 --> 00:29:02,190
find it service it and fix it risks are

00:28:59,220 --> 00:29:04,500
shared bridging is encouraged failure

00:29:02,190 --> 00:29:08,280
leads to inquiry novelties implemented

00:29:04,500 --> 00:29:11,190
sounds a lot like DevOps right break

00:29:08,280 --> 00:29:13,710
down silos blameless post mortems we

00:29:11,190 --> 00:29:16,580
realize this so we started measuring it

00:29:13,710 --> 00:29:19,350
found that it was highly correlated to

00:29:16,580 --> 00:29:22,850
performance profiles and that it was

00:29:19,350 --> 00:29:24,780
predictive of performance also Cote

00:29:22,850 --> 00:29:26,390
every day there's someone born who

00:29:24,780 --> 00:29:31,050
hasn't seen the Western model slide

00:29:26,390 --> 00:29:34,140
welcome no you have but we've studied it

00:29:31,050 --> 00:29:36,330
for five years and so we wanted to study

00:29:34,140 --> 00:29:39,840
some of the work done by teams at Google

00:29:36,330 --> 00:29:42,330
they had found that within Google so

00:29:39,840 --> 00:29:43,679
their thesis was that to be able to make

00:29:42,330 --> 00:29:46,320
the perfect team you needed to find the

00:29:43,679 --> 00:29:50,130
right mix of skills a nodejs programmer

00:29:46,320 --> 00:29:51,540
and a PM and a data scientist so they

00:29:50,130 --> 00:29:53,670
study this across all the engineers at

00:29:51,540 --> 00:29:58,020
Google what they found was that that

00:29:53,670 --> 00:30:00,870
didn't matter at all what mattered was

00:29:58,020 --> 00:30:03,360
that you have far above number one

00:30:00,870 --> 00:30:06,480
psychological safety you could trust

00:30:03,360 --> 00:30:07,710
each other to take smart risks and then

00:30:06,480 --> 00:30:08,070
dependability you could depend on each

00:30:07,710 --> 00:30:10,050
other

00:30:08,070 --> 00:30:11,550
you had structure and clarity in your

00:30:10,050 --> 00:30:14,550
work and your work had meaning and

00:30:11,550 --> 00:30:19,050
impact people like this is amazing

00:30:14,550 --> 00:30:22,590
people were also like this is Bowl this

00:30:19,050 --> 00:30:24,809
works at Google they have this

00:30:22,590 --> 00:30:26,700
ridiculously high interview bar they

00:30:24,809 --> 00:30:28,650
have scooters on campus they have free

00:30:26,700 --> 00:30:29,150
food this is never gonna work anywhere

00:30:28,650 --> 00:30:32,760
else

00:30:29,150 --> 00:30:34,860
so Dora joined Google and I was like can

00:30:32,760 --> 00:30:36,480
I have your interview your survey

00:30:34,860 --> 00:30:40,200
questions we're gonna test this in the

00:30:36,480 --> 00:30:44,850
rest of the world and we did and what we

00:30:40,200 --> 00:30:47,179
found was that this actually holds so I

00:30:44,850 --> 00:30:51,930
think that's really important impactful

00:30:47,179 --> 00:30:54,270
we do find additional support

00:30:51,930 --> 00:30:56,610
that a culture of trust and

00:30:54,270 --> 00:30:58,770
psychological safety has an impact on

00:30:56,610 --> 00:31:01,290
software delivery performance speed and

00:30:58,770 --> 00:31:05,100
stability organizational performance and

00:31:01,290 --> 00:31:09,320
productivity so it's not just free food

00:31:05,100 --> 00:31:11,700
and scooters this was true it

00:31:09,320 --> 00:31:14,580
enterprises at highly regulated in our

00:31:11,700 --> 00:31:19,590
prices in places that are using COBOL

00:31:14,580 --> 00:31:21,230
this really is important ok is

00:31:19,590 --> 00:31:25,530
open-source still a thing

00:31:21,230 --> 00:31:27,390
allegedly community is an asset high an

00:31:25,530 --> 00:31:30,600
elite performers continue to use

00:31:27,390 --> 00:31:32,190
open-source the most and we see that

00:31:30,600 --> 00:31:34,080
their elite performers are one point

00:31:32,190 --> 00:31:37,020
seven five times more likely to make

00:31:34,080 --> 00:31:38,550
extensive use of open-source by the way

00:31:37,020 --> 00:31:42,870
this benefits recruiting is anyone here

00:31:38,550 --> 00:31:45,450
hiring allegedly right it contributes to

00:31:42,870 --> 00:31:47,670
productivity great engineers who use

00:31:45,450 --> 00:31:50,660
external information are one point six

00:31:47,670 --> 00:31:53,700
seven times more likely to be productive

00:31:50,660 --> 00:31:55,380
and remember on productivity how we said

00:31:53,700 --> 00:31:58,350
internal and external search were

00:31:55,380 --> 00:32:00,810
helpful this is a huge boon to external

00:31:58,350 --> 00:32:04,260
search if you have your own homegrown

00:32:00,810 --> 00:32:07,050
home world language you can't search

00:32:04,260 --> 00:32:09,300
anywhere else and tech debt remember

00:32:07,050 --> 00:32:11,760
internal documentation is a thing who

00:32:09,300 --> 00:32:13,640
hates documentation I hate documentation

00:32:11,760 --> 00:32:16,800
we need to do it but like we suck at it

00:32:13,640 --> 00:32:19,740
it's so hard that responsibility bar

00:32:16,800 --> 00:32:21,150
becomes so high if you've got your home

00:32:19,740 --> 00:32:23,400
rolled everything

00:32:21,150 --> 00:32:26,310
if you leverage open source you've got a

00:32:23,400 --> 00:32:29,850
massive community for documentation for

00:32:26,310 --> 00:32:33,690
examples for security everything like

00:32:29,850 --> 00:32:37,860
just becomes so much easier faster is

00:32:33,690 --> 00:32:39,360
better even in open source now the open

00:32:37,860 --> 00:32:42,140
source model is a little different right

00:32:39,360 --> 00:32:45,240
because we end up having hobbyists

00:32:42,140 --> 00:32:48,600
different skill sets so many things are

00:32:45,240 --> 00:32:51,270
different but we still see that faster

00:32:48,600 --> 00:32:55,470
is better even an open source committing

00:32:51,270 --> 00:32:58,500
code sooner is still better merging

00:32:55,470 --> 00:33:00,900
Pat's it patches faster to prevent read

00:32:58,500 --> 00:33:03,660
bases helps developers you hope your

00:33:00,900 --> 00:33:06,540
code maintainer x' also working in small

00:33:03,660 --> 00:33:12,630
batches is better giving somebody

00:33:06,540 --> 00:33:15,110
it's not gonna make you friends okay but

00:33:12,630 --> 00:33:17,570
I've got a whole organization to change

00:33:15,110 --> 00:33:20,130
how are we gonna do this transformation

00:33:17,570 --> 00:33:22,860
this is how we can execute for maximum

00:33:20,130 --> 00:33:27,080
impact start with foundations if you're

00:33:22,860 --> 00:33:29,490
not using version control start there

00:33:27,080 --> 00:33:31,429
leveraged concurrent efforts for maximum

00:33:29,490 --> 00:33:34,380
impact okay what does that mean sorry I

00:33:31,429 --> 00:33:35,730
speak academic sometimes there are some

00:33:34,380 --> 00:33:38,820
things that you can only do at the

00:33:35,730 --> 00:33:43,230
organization level things like change

00:33:38,820 --> 00:33:46,320
approval process let upper management

00:33:43,230 --> 00:33:50,100
help with that at the team level don't

00:33:46,320 --> 00:33:51,840
things like testing and monitoring iced

00:33:50,100 --> 00:33:54,450
teas can help with that and you can do

00:33:51,840 --> 00:33:58,049
both of these at the same time and then

00:33:54,450 --> 00:34:00,299
focus on constraints what does that mean

00:33:58,049 --> 00:34:01,980
so once you start get your candidate

00:34:00,299 --> 00:34:04,080
list like things that can help

00:34:01,980 --> 00:34:07,440
predictably start with your biggest

00:34:04,080 --> 00:34:09,240
headache maturity models are dumb don't

00:34:07,440 --> 00:34:10,950
assume that every single person will

00:34:09,240 --> 00:34:13,080
have and every single team will have the

00:34:10,950 --> 00:34:15,899
exact same path to success

00:34:13,080 --> 00:34:17,879
whatever your biggest headache is focus

00:34:15,899 --> 00:34:19,560
on that once it's not your biggest

00:34:17,879 --> 00:34:21,470
headache look at your next biggest

00:34:19,560 --> 00:34:24,389
headache that's how you get better

00:34:21,470 --> 00:34:26,060
faster and most efficiently it's the

00:34:24,389 --> 00:34:29,730
best use of resources

00:34:26,060 --> 00:34:34,980
now we also looked at overall patterns

00:34:29,730 --> 00:34:36,629
and scaling transformation we looked at

00:34:34,980 --> 00:34:39,030
the heat map of strategies by

00:34:36,629 --> 00:34:41,550
performance profile this is fine I just

00:34:39,030 --> 00:34:43,710
included it we looked at training

00:34:41,550 --> 00:34:45,990
centers centers of excellence proof of

00:34:43,710 --> 00:34:47,280
concept but stall like do throw in money

00:34:45,990 --> 00:34:49,500
and then not really do anything with it

00:34:47,280 --> 00:34:50,879
proof of concept is a template do you do

00:34:49,500 --> 00:34:53,129
one and then stamp it everywhere proof

00:34:50,879 --> 00:34:54,659
of concept is a seed do you put in

00:34:53,129 --> 00:34:56,900
resources and then break those people up

00:34:54,659 --> 00:35:00,080
to kind of scatter them as teachers

00:34:56,900 --> 00:35:02,190
communities of practice big bang

00:35:00,080 --> 00:35:04,740
bottom-up or grassroots and then like

00:35:02,190 --> 00:35:07,530
mash up is just do everything but we did

00:35:04,740 --> 00:35:09,030
an additional analysis to see what high

00:35:07,530 --> 00:35:12,390
an elite performers do and I think this

00:35:09,030 --> 00:35:16,109
is super interesting community builders

00:35:12,390 --> 00:35:19,410
was the most often seen because this is

00:35:16,109 --> 00:35:20,370
what builds scalable solutions that are

00:35:19,410 --> 00:35:22,140
resilient to any

00:35:20,370 --> 00:35:25,140
type of thing like rework or product

00:35:22,140 --> 00:35:26,490
changes so what we see here most often

00:35:25,140 --> 00:35:29,790
are communities of practice and

00:35:26,490 --> 00:35:32,880
grassroots what we don't see very often

00:35:29,790 --> 00:35:35,580
is university dojos and centers of

00:35:32,880 --> 00:35:37,320
excellence are really tough you can do

00:35:35,580 --> 00:35:38,940
it but it's gonna take significant

00:35:37,320 --> 00:35:41,660
significant resources because what

00:35:38,940 --> 00:35:45,270
you've essentially done is created

00:35:41,660 --> 00:35:46,950
another silo so it can work but you're

00:35:45,270 --> 00:35:48,780
gonna need a ton of money and a ton of

00:35:46,950 --> 00:35:50,400
resources to make sure that whatever's

00:35:48,780 --> 00:35:52,650
been learned or centered in these brand

00:35:50,400 --> 00:35:55,080
new silos like a fancy center of

00:35:52,650 --> 00:35:59,280
excellence or a fancy new dojo gets

00:35:55,080 --> 00:36:01,380
spread throughout the organization ok

00:35:59,280 --> 00:36:03,570
TLDR take a picture so you get credit

00:36:01,380 --> 00:36:06,930
because I'm sure a couple of you or just

00:36:03,570 --> 00:36:08,790
on Facebook is the step-ups thing even a

00:36:06,930 --> 00:36:10,920
thing getting better

00:36:08,790 --> 00:36:12,540
aka choose-your-own-adventure and then

00:36:10,920 --> 00:36:14,130
there we covered performance which was

00:36:12,540 --> 00:36:16,950
speed and stability we also covered

00:36:14,130 --> 00:36:18,690
productivity talked about culture and

00:36:16,950 --> 00:36:21,180
the two ways that we can measure it and

00:36:18,690 --> 00:36:25,230
by the way both of them are important

00:36:21,180 --> 00:36:27,330
shocker I know we skipped process though

00:36:25,230 --> 00:36:29,520
so if you go check out the website we've

00:36:27,330 --> 00:36:31,650
got stuff there also talked about open

00:36:29,520 --> 00:36:33,660
source and how it's still a thing and

00:36:31,650 --> 00:36:36,210
it's not real risking talked about

00:36:33,660 --> 00:36:37,440
scaling your transformation and like I

00:36:36,210 --> 00:36:39,210
mentioned there's so much more we talked

00:36:37,440 --> 00:36:41,670
about disaster recovery testing by the

00:36:39,210 --> 00:36:46,620
way only 40 percent of people are doing

00:36:41,670 --> 00:36:49,040
it annually I'm terribly change

00:36:46,620 --> 00:36:51,510
approvals and doing it the right way

00:36:49,040 --> 00:36:54,630
protip heavyweight change approvals are

00:36:51,510 --> 00:36:57,750
a bad idea they lead to instability more

00:36:54,630 --> 00:37:00,590
on open source more on cloud and how it

00:36:57,750 --> 00:37:02,880
relates to costs and cost savings and

00:37:00,590 --> 00:37:04,650
transparency we also have an executive

00:37:02,880 --> 00:37:06,990
cuts summary that's coming soon so if

00:37:04,650 --> 00:37:09,750
you go to cloud kugel comm slash DevOps

00:37:06,990 --> 00:37:11,160
we even have a quick check where you can

00:37:09,750 --> 00:37:12,660
check out your own performance and how

00:37:11,160 --> 00:37:14,660
you compare to the rest of your industry

00:37:12,660 --> 00:37:20,640
thanks so much everyone

00:37:14,660 --> 00:37:25,780
[Applause]

00:37:20,640 --> 00:37:25,780

YouTube URL: https://www.youtube.com/watch?v=GOCZnkhwUAY


