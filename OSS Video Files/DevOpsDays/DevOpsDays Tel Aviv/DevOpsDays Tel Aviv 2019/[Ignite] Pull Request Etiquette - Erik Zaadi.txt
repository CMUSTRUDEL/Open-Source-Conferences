Title: [Ignite] Pull Request Etiquette - Erik Zaadi
Publication date: 2020-01-12
Playlist: DevOpsDays Tel Aviv 2019
Description: 
	
Captions: 
	00:00:00,440 --> 00:00:03,580
[Music]

00:00:04,339 --> 00:00:09,660
hey I'm Eric I'm a team leader at big

00:00:07,560 --> 00:00:12,450
panda and I'm sorry mr. cameraman I move

00:00:09,660 --> 00:00:15,900
a lot and I'm gonna talk you about pull

00:00:12,450 --> 00:00:17,850
requests so the thing is I also like to

00:00:15,900 --> 00:00:19,859
do ignites really fast because I had no

00:00:17,850 --> 00:00:22,470
idea that I'm going to do this ignite a

00:00:19,859 --> 00:00:24,900
kill talked to me just the day before

00:00:22,470 --> 00:00:27,630
the conference and said somebody is ill

00:00:24,900 --> 00:00:29,160
and I said hell I'm in for it and then I

00:00:27,630 --> 00:00:32,940
thought oh my god I'm in a pickle

00:00:29,160 --> 00:00:35,370
because I'm talking yesterday and but

00:00:32,940 --> 00:00:37,530
when a friend asked for help you just do

00:00:35,370 --> 00:00:39,210
it and I tried to find something that is

00:00:37,530 --> 00:00:41,399
connected to back to fundamentals so

00:00:39,210 --> 00:00:43,890
pull requests and this is a 30 minute

00:00:41,399 --> 00:00:46,920
talk scram 3 to 5 minutes and you're my

00:00:43,890 --> 00:00:49,410
dry run good luck to everyone so hey

00:00:46,920 --> 00:00:51,750
about the terminology so I'm gonna talk

00:00:49,410 --> 00:00:53,430
about git and github but this would work

00:00:51,750 --> 00:00:56,039
with whatever tool you're using git lab

00:00:53,430 --> 00:00:58,649
or god forbid TFS or whatever it will

00:00:56,039 --> 00:01:00,629
work it's the same don't worry it's some

00:00:58,649 --> 00:01:03,539
fundamentals all your repositories

00:01:00,629 --> 00:01:05,299
should require a code review before

00:01:03,539 --> 00:01:08,400
merging that is absolutely essential

00:01:05,299 --> 00:01:09,090
saying goes with tests there's no reason

00:01:08,400 --> 00:01:12,920
in hell

00:01:09,090 --> 00:01:15,600
that broken test should be in master

00:01:12,920 --> 00:01:17,430
pseudo and you should probably use git

00:01:15,600 --> 00:01:19,259
rebase because if not you'll get merged

00:01:17,430 --> 00:01:21,840
communites like fireball like this this

00:01:19,259 --> 00:01:23,549
is a couple of years back a pull

00:01:21,840 --> 00:01:25,200
requests actually exists for a couple of

00:01:23,549 --> 00:01:27,119
reasons the first one is of course to

00:01:25,200 --> 00:01:28,590
focus the actual committer when trying

00:01:27,119 --> 00:01:30,600
to explain something you actually think

00:01:28,590 --> 00:01:31,920
about that it's for learning both for

00:01:30,600 --> 00:01:34,530
the one doing the change and the people

00:01:31,920 --> 00:01:36,060
learning it's to validate a certain set

00:01:34,530 --> 00:01:37,920
of standards within your organization

00:01:36,060 --> 00:01:41,880
and to ensure that this change is even

00:01:37,920 --> 00:01:43,470
needed this is not in any way passingly

00:01:41,880 --> 00:01:46,350
responsibility to the approvers

00:01:43,470 --> 00:01:48,899
whoever's doing the actual change is

00:01:46,350 --> 00:01:51,119
responsible for this in production as a

00:01:48,899 --> 00:01:52,799
review II the way I start I can open the

00:01:51,119 --> 00:01:55,049
pool across whenever I want on my first

00:01:52,799 --> 00:01:57,630
push to my branch or fork or however you

00:01:55,049 --> 00:01:59,490
may work I do recommend to use the draft

00:01:57,630 --> 00:02:02,579
feature of github and that yes that

00:01:59,490 --> 00:02:04,380
works with the hub CLI as well if you do

00:02:02,579 --> 00:02:06,899
the pull request before the podcast is

00:02:04,380 --> 00:02:07,770
ready prefixes with work in progress or

00:02:06,899 --> 00:02:09,509
something like that

00:02:07,770 --> 00:02:11,380
don't leave the body empty you can do

00:02:09,509 --> 00:02:14,500
that as a checklist or a design

00:02:11,380 --> 00:02:16,300
whatever thought you a and meet your two

00:02:14,500 --> 00:02:18,430
newbies best friends definitely talked

00:02:16,300 --> 00:02:20,260
about this in her it talked before it

00:02:18,430 --> 00:02:21,280
rebates minutes minutes interactive you

00:02:20,260 --> 00:02:23,800
will do that a lot

00:02:21,280 --> 00:02:26,140
and Allah another small nugget which is

00:02:23,800 --> 00:02:27,970
push force with lease which basically

00:02:26,140 --> 00:02:30,250
checks if the commit that you're trying

00:02:27,970 --> 00:02:32,040
to kill is your own then it's fine if

00:02:30,250 --> 00:02:34,660
not let's stop opening

00:02:32,040 --> 00:02:38,200
so you're preparing for that epic review

00:02:34,660 --> 00:02:39,910
right a the first and foremost thing

00:02:38,200 --> 00:02:43,090
that should be ready are the gate locks

00:02:39,910 --> 00:02:45,550
they should be poetic okay each gate

00:02:43,090 --> 00:02:47,170
commit should have one logical change if

00:02:45,550 --> 00:02:48,610
you have one file that you're doing

00:02:47,170 --> 00:02:50,410
three functions there's totally

00:02:48,610 --> 00:02:52,570
different business values those should

00:02:50,410 --> 00:02:56,080
be three commits and not one if you're

00:02:52,570 --> 00:02:58,150
changing from HTTP to HTTPS or be in

00:02:56,080 --> 00:03:00,190
forty files that might be one commit

00:02:58,150 --> 00:03:03,850
although it that's a really pita to

00:03:00,190 --> 00:03:06,040
review here are a very good example for

00:03:03,850 --> 00:03:10,360
about five years ago mine of how you do

00:03:06,040 --> 00:03:12,640
not do commits as linner our Lord and

00:03:10,360 --> 00:03:14,620
Savior suggests this is how you do get

00:03:12,640 --> 00:03:16,870
commits and it's for a reason you do

00:03:14,620 --> 00:03:17,830
fifty characters or less in the title

00:03:16,870 --> 00:03:19,300
and that should be it

00:03:17,830 --> 00:03:22,540
for all the people like me who like to

00:03:19,300 --> 00:03:25,090
do one-liner get logs you elaborate in

00:03:22,540 --> 00:03:26,920
the body if needed and do yourself a

00:03:25,090 --> 00:03:28,870
favor be professional

00:03:26,920 --> 00:03:32,920
you said spell or whatever you do in

00:03:28,870 --> 00:03:34,360
your editor to be without typos when you

00:03:32,920 --> 00:03:36,550
actually want to open the pull request

00:03:34,360 --> 00:03:38,830
and assign people you should have a

00:03:36,550 --> 00:03:41,190
title and body that actually tells the

00:03:38,830 --> 00:03:43,959
gist of the change and yes that is a pun

00:03:41,190 --> 00:03:46,060
and then you can go ahead and assign

00:03:43,959 --> 00:03:47,950
that but as or is of course after you do

00:03:46,060 --> 00:03:50,260
this checklist you have tests they are

00:03:47,950 --> 00:03:52,360
passing all new code is tested

00:03:50,260 --> 00:03:55,000
yeah whatever style got linting that you

00:03:52,360 --> 00:03:57,130
have in your organization that a git log

00:03:55,000 --> 00:03:58,840
is just epic to see and it's not too

00:03:57,130 --> 00:04:02,290
huge because then people won't want to

00:03:58,840 --> 00:04:04,810
review it pseudo awesome

00:04:02,290 --> 00:04:06,790
so who should be reviewing a code owners

00:04:04,810 --> 00:04:09,850
of whatever domain knowledge that people

00:04:06,790 --> 00:04:11,590
know of that managers it actually really

00:04:09,850 --> 00:04:13,420
helps me as a team leader to be tagged

00:04:11,590 --> 00:04:15,340
on pull requests because that gets me

00:04:13,420 --> 00:04:16,959
into context it's someone front of mine

00:04:15,340 --> 00:04:18,700
on a team and juniors because they will

00:04:16,959 --> 00:04:20,560
ask excellent questions and I'm going to

00:04:18,700 --> 00:04:22,960
do this really fast after you receive

00:04:20,560 --> 00:04:24,660
comments separate those fixes into small

00:04:22,960 --> 00:04:26,460
commits don't try everything at once

00:04:24,660 --> 00:04:30,360
be patient don't guard your code with

00:04:26,460 --> 00:04:31,800
ego as a reviewer I told you before

00:04:30,360 --> 00:04:34,710
you're not responsible for that

00:04:31,800 --> 00:04:36,540
but hey you should start be reading the

00:04:34,710 --> 00:04:38,550
title and body as I said before make

00:04:36,540 --> 00:04:41,880
sure the kid comments are saying at CI

00:04:38,550 --> 00:04:44,340
tests past due not awesome do not review

00:04:41,880 --> 00:04:46,110
before that when you actually review

00:04:44,340 --> 00:04:47,730
review it commit by commit as the

00:04:46,110 --> 00:04:50,370
committer did to get the actually just

00:04:47,730 --> 00:04:51,960
the story of the change and commit on

00:04:50,370 --> 00:04:54,150
that on the actual diff you and github

00:04:51,960 --> 00:04:56,820
so those will get where a result once

00:04:54,150 --> 00:04:59,670
people fix it you can comment on

00:04:56,820 --> 00:05:02,400
whatever you want and that's fine but if

00:04:59,670 --> 00:05:03,810
you count it on 17 Lin things but not on

00:05:02,400 --> 00:05:05,880
the business logic you're not doing a

00:05:03,810 --> 00:05:07,830
good job and you should use emojis that

00:05:05,880 --> 00:05:10,830
actually helps people get feedback even

00:05:07,830 --> 00:05:12,210
if it's awful you should never scream in

00:05:10,830 --> 00:05:15,570
caps that's very ill-mannered

00:05:12,210 --> 00:05:17,580
unless it's upon it's really really nice

00:05:15,570 --> 00:05:19,260
to actually do the parol crest in person

00:05:17,580 --> 00:05:21,180
I know that some of you work at remote

00:05:19,260 --> 00:05:24,420
and that's not possible but it's awesome

00:05:21,180 --> 00:05:26,130
and a so as a reviewer you have three

00:05:24,420 --> 00:05:28,620
things right you can approve lock-in

00:05:26,130 --> 00:05:30,720
comment so comment is like man that's

00:05:28,620 --> 00:05:33,240
not really a taking a stand it's nice

00:05:30,720 --> 00:05:34,800
but it's not anything beyond that as

00:05:33,240 --> 00:05:36,450
somebody that I think actually is

00:05:34,800 --> 00:05:38,220
supposed to do that you're supposed to

00:05:36,450 --> 00:05:40,470
block it if needed and that's fine it's

00:05:38,220 --> 00:05:41,700
manner it's within that to get just

00:05:40,470 --> 00:05:44,010
state while you're blocking it

00:05:41,700 --> 00:05:48,030
explicitly and don't be a douche about

00:05:44,010 --> 00:05:49,680
it if you're approving awesome that same

00:05:48,030 --> 00:05:51,510
result all pro requests but you should

00:05:49,680 --> 00:05:53,220
set yourself to the same standard and

00:05:51,510 --> 00:05:55,890
ensure that you would have done dates

00:05:53,220 --> 00:05:57,330
code as well and the most important

00:05:55,890 --> 00:06:00,240
takeaway of this talk you should never

00:05:57,330 --> 00:06:02,250
ever ever approve a podcast without the

00:06:00,240 --> 00:06:04,020
appropriate gives everybody in big panda

00:06:02,250 --> 00:06:07,650
knows the markdown shortcut for

00:06:04,020 --> 00:06:09,870
embedding images because of this so it

00:06:07,650 --> 00:06:12,360
you got that seal of approval yes that

00:06:09,870 --> 00:06:16,410
is a bad pun and yes you need to deal

00:06:12,360 --> 00:06:18,540
with it you do the clean ups all those

00:06:16,410 --> 00:06:20,250
PR commits you should squash them into

00:06:18,540 --> 00:06:22,140
the relevant changes so the relevant

00:06:20,250 --> 00:06:24,240
commits before that never have that it

00:06:22,140 --> 00:06:26,130
went imitating semester hey fetch

00:06:24,240 --> 00:06:28,500
freebase check that portion check that

00:06:26,130 --> 00:06:29,700
your tests are going and merge away if

00:06:28,500 --> 00:06:32,430
you're doing continuous deployment

00:06:29,700 --> 00:06:36,260
you're golden if not deploy directly

00:06:32,430 --> 00:06:38,510
never leave artifacts hanging unless

00:06:36,260 --> 00:06:40,250
this is a Thursday or Friday if you're

00:06:38,510 --> 00:06:42,260
not in Israel night you should probably

00:06:40,250 --> 00:06:45,050
not do that deploy right now unless it's

00:06:42,260 --> 00:06:46,760
really really urgent and a certain

00:06:45,050 --> 00:06:48,920
friendship might never leave those

00:06:46,760 --> 00:06:51,350
dangling get branches afterwards it's

00:06:48,920 --> 00:06:53,060
annoying here's a little git alias

00:06:51,350 --> 00:06:55,730
called Mike drop that drops them before

00:06:53,060 --> 00:06:57,620
you I will send it that in Twitter yeah

00:06:55,730 --> 00:06:58,840
that's the Mike Rob and I have been Erik

00:06:57,620 --> 00:07:05,130
thank you

00:06:58,840 --> 00:07:10,259
[Applause]

00:07:05,130 --> 00:07:10,259

YouTube URL: https://www.youtube.com/watch?v=cgNEg9rqV0U


