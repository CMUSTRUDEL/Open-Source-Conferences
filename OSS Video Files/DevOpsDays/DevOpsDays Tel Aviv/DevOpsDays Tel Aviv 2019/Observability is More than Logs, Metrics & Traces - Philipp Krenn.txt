Title: Observability is More than Logs, Metrics & Traces - Philipp Krenn
Publication date: 2020-01-13
Playlist: DevOpsDays Tel Aviv 2019
Description: 
	You know the drill: DevOps is using tool(s) X. So obviously, observability can be solved by throwing some tools together as well; generally logs, metrics, and traces often called the trifecta of observability.

But observability is not a tool â€” it is a property of a system. Moving from many small blackboxes to a more holistic view of your system. It includes tools, but not exactly three distinct features (especially if your solution happens to support those). For example, if half your user base cannot access your service because of some bad DNS settings and external health checks are not part of your trifecta, you are none the wiser.

This is not (just) a rant, but a look at the actual value to be added and some approaches to it. Like turning your logs into richer events that align with your business. Which is not solved by fancy tools alone.
Captions: 
	00:00:00,030 --> 00:00:08,370
i won

00:00:05,730 --> 00:00:09,960
i'm philip so let's see what is this

00:00:08,370 --> 00:00:12,900
observability thing and what you can do

00:00:09,960 --> 00:00:15,059
about it um so I'm Philip I work for

00:00:12,900 --> 00:00:16,289
elastic as a developer advocate so I

00:00:15,059 --> 00:00:18,210
don't really work and most to travel

00:00:16,289 --> 00:00:21,960
around like Israeli in December is very

00:00:18,210 --> 00:00:23,760
nice so that's why I came over so you

00:00:21,960 --> 00:00:25,710
probably have seen some of our products

00:00:23,760 --> 00:00:28,050
and where most of you started with us

00:00:25,710 --> 00:00:30,810
probably our logs right who is using

00:00:28,050 --> 00:00:31,500
logs I guess everybody is centralizing

00:00:30,810 --> 00:00:33,989
some logs

00:00:31,500 --> 00:00:36,210
so generally you print every time

00:00:33,989 --> 00:00:38,070
something happens and the thing about

00:00:36,210 --> 00:00:39,840
logs is they give you a lot of

00:00:38,070 --> 00:00:41,610
information but they're normally on a

00:00:39,840 --> 00:00:43,350
component level so they don't give you a

00:00:41,610 --> 00:00:45,629
total overview especially if you have

00:00:43,350 --> 00:00:47,370
something like microcircuits

00:00:45,629 --> 00:00:49,649
you don't really see the full picture

00:00:47,370 --> 00:00:51,030
you just see what happens at what point

00:00:49,649 --> 00:00:53,070
in the application which gives you a lot

00:00:51,030 --> 00:00:54,719
of information but it's not good for the

00:00:53,070 --> 00:00:57,270
general overview so you want to have

00:00:54,719 --> 00:01:00,030
more the next thing that many people

00:00:57,270 --> 00:01:02,399
probably have are metrics right who is

00:01:00,030 --> 00:01:05,339
collecting metrics for an application

00:01:02,399 --> 00:01:08,100
yeah that's also a lot so basically this

00:01:05,339 --> 00:01:10,830
is a periodic thing you just collect one

00:01:08,100 --> 00:01:13,140
or multiple values at multiple points in

00:01:10,830 --> 00:01:15,180
time the nice thing about them is you

00:01:13,140 --> 00:01:16,799
can aggregate them together later on and

00:01:15,180 --> 00:01:19,020
they're pretty cheap to collect whereas

00:01:16,799 --> 00:01:20,759
logs can be pretty verbose and are a lot

00:01:19,020 --> 00:01:21,960
of information whereas metrics can be

00:01:20,759 --> 00:01:24,810
very compact

00:01:21,960 --> 00:01:26,310
the thing is they lack a lot of context

00:01:24,810 --> 00:01:28,710
and you don't see the overall picture

00:01:26,310 --> 00:01:32,040
and depending on how you see your data

00:01:28,710 --> 00:01:34,170
you might miss outliers or you don't if

00:01:32,040 --> 00:01:36,210
you collect them correctly the final

00:01:34,170 --> 00:01:38,100
thing to make that picture more complete

00:01:36,210 --> 00:01:41,850
is probably you want to have a PM or

00:01:38,100 --> 00:01:44,399
tracing which give you on a per request

00:01:41,850 --> 00:01:47,009
level information which are even more

00:01:44,399 --> 00:01:50,310
verbose than logs and they cover more

00:01:47,009 --> 00:01:51,540
context but you need to instrument your

00:01:50,310 --> 00:01:53,460
application so you probably need some

00:01:51,540 --> 00:01:56,460
agent in your application to collect

00:01:53,460 --> 00:01:59,219
those and then you throw all of these

00:01:56,460 --> 00:02:00,869
things together and you end up as this

00:01:59,219 --> 00:02:02,549
thing that is called observability and

00:02:00,869 --> 00:02:04,320
this is what everybody wants to do

00:02:02,549 --> 00:02:05,280
nowadays right and then often the

00:02:04,320 --> 00:02:08,039
question is so what is this

00:02:05,280 --> 00:02:09,539
observability thing and i guess most of

00:02:08,039 --> 00:02:10,289
you have probably seen this one before

00:02:09,539 --> 00:02:12,540
right

00:02:10,289 --> 00:02:13,800
and then people will refer to this as

00:02:12,540 --> 00:02:15,960
the three pillars of

00:02:13,800 --> 00:02:18,180
observability or whatever and so you

00:02:15,960 --> 00:02:20,130
throw in you have the logs that you

00:02:18,180 --> 00:02:21,330
probably all have been doing and then

00:02:20,130 --> 00:02:23,340
you have the metrics where you have the

00:02:21,330 --> 00:02:25,320
numbers to get an overview of what how

00:02:23,340 --> 00:02:26,850
your system is behaving for example and

00:02:25,320 --> 00:02:28,860
then you have the requests tracing where

00:02:26,850 --> 00:02:31,080
you see this was a slow request or this

00:02:28,860 --> 00:02:33,000
request had an error and you see the

00:02:31,080 --> 00:02:35,100
actual context for one specific user

00:02:33,000 --> 00:02:38,750
interaction and you combine everything

00:02:35,100 --> 00:02:40,710
and then this is observability right

00:02:38,750 --> 00:02:43,050
maybe maybe not

00:02:40,710 --> 00:02:47,520
we'll see so where does this term even

00:02:43,050 --> 00:02:49,920
come from so it's generally or let's say

00:02:47,520 --> 00:02:52,230
why not like this is a bit like saying

00:02:49,920 --> 00:02:55,230
gasoline motor oil and tires those are

00:02:52,230 --> 00:02:57,180
the three pillars of Formula one this is

00:02:55,230 --> 00:02:59,160
kind of not totally false but this is a

00:02:57,180 --> 00:03:02,040
similar context where you have like

00:02:59,160 --> 00:03:04,410
saying logs metrics and traces are what

00:03:02,040 --> 00:03:06,810
makes observability which is not really

00:03:04,410 --> 00:03:09,330
the thing itself it's not really the

00:03:06,810 --> 00:03:11,910
essence the essence is more like where

00:03:09,330 --> 00:03:13,980
does observability come from and we've

00:03:11,910 --> 00:03:15,870
generally seen this one before so you

00:03:13,980 --> 00:03:17,700
have a lot of tools and people just want

00:03:15,870 --> 00:03:20,640
to have tools right or especially

00:03:17,700 --> 00:03:23,220
vendors want to sell you tools so since

00:03:20,640 --> 00:03:25,260
we're a devops days who's seen something

00:03:23,220 --> 00:03:27,120
like this DevOps is just about the tools

00:03:25,260 --> 00:03:28,590
right you don't care about the process

00:03:27,120 --> 00:03:31,080
or the people or anything it's just

00:03:28,590 --> 00:03:32,700
tools like it's not about the specific

00:03:31,080 --> 00:03:35,310
tools here it's just like to love the

00:03:32,700 --> 00:03:39,510
tool of the tool and then you end up

00:03:35,310 --> 00:03:41,700
like this again we all know this one and

00:03:39,510 --> 00:03:43,560
then you end up things like you have a

00:03:41,700 --> 00:03:45,239
DevOps tool and by the way if you call

00:03:43,560 --> 00:03:47,520
yourself DevOps it's much better paid

00:03:45,239 --> 00:03:49,500
than just ops so always call yourself

00:03:47,520 --> 00:03:51,690
DevOps and then you end up again with

00:03:49,500 --> 00:03:54,420
DevOps jobs and maybe even DevOps teams

00:03:51,690 --> 00:03:56,400
which I don't think makes much sense but

00:03:54,420 --> 00:03:58,410
that's where you end up and then

00:03:56,400 --> 00:04:01,100
everybody follows along and says like

00:03:58,410 --> 00:04:03,720
well we should do that DevOps thing and

00:04:01,100 --> 00:04:05,280
coming back to observability people then

00:04:03,720 --> 00:04:07,430
especially in management say like we

00:04:05,280 --> 00:04:11,090
should do that observability thing right

00:04:07,430 --> 00:04:14,070
I'll buy myself some observability and

00:04:11,090 --> 00:04:16,470
so what really is observability where

00:04:14,070 --> 00:04:18,900
it's coming from is the control theory

00:04:16,470 --> 00:04:22,169
basically you want to infer the state of

00:04:18,900 --> 00:04:23,669
a system just by monitoring it from the

00:04:22,169 --> 00:04:25,880
outside so you want to see what is going

00:04:23,669 --> 00:04:27,270
on inside just from the outside and that

00:04:25,880 --> 00:04:30,449
leaves

00:04:27,270 --> 00:04:32,669
with these this matrix of the known

00:04:30,449 --> 00:04:35,340
knowns and unknowns probably you have

00:04:32,669 --> 00:04:37,169
seen this one as well so there are

00:04:35,340 --> 00:04:41,699
things that we are aware of and that we

00:04:37,169 --> 00:04:43,949
understand what is that for example that

00:04:41,699 --> 00:04:45,750
would be for example dashboards like we

00:04:43,949 --> 00:04:46,740
know how our system behaves and we know

00:04:45,750 --> 00:04:48,870
where the problems are

00:04:46,740 --> 00:04:50,580
this is often a bit like scar tissue we

00:04:48,870 --> 00:04:52,169
know this has gone wrong in the past so

00:04:50,580 --> 00:04:55,379
we build a dashboard to monitor that is

00:04:52,169 --> 00:04:57,240
not going wrong anymore but that's not

00:04:55,379 --> 00:04:58,800
the full picture then you have things we

00:04:57,240 --> 00:05:02,449
are not aware of but we generally

00:04:58,800 --> 00:05:04,830
understand and yet is what that could be

00:05:02,449 --> 00:05:07,110
those are some metrics where you for

00:05:04,830 --> 00:05:08,639
example throw on some anomaly detection

00:05:07,110 --> 00:05:09,930
because you know this might be

00:05:08,639 --> 00:05:11,159
interesting I'm not sure what might

00:05:09,930 --> 00:05:13,139
happen in the future and where the

00:05:11,159 --> 00:05:15,090
outliers might be but I know this is

00:05:13,139 --> 00:05:18,120
something probably to watch out for

00:05:15,090 --> 00:05:20,099
then things we are not aware of but

00:05:18,120 --> 00:05:22,680
sorry we are aware of but do not

00:05:20,099 --> 00:05:24,360
understand that is where locks would

00:05:22,680 --> 00:05:26,250
come into play for example you don't

00:05:24,360 --> 00:05:28,139
really know what is happening here but

00:05:26,250 --> 00:05:29,909
you know there might be some things in

00:05:28,139 --> 00:05:31,979
that area so you collect a lot of logs

00:05:29,909 --> 00:05:34,680
to basically over collect on information

00:05:31,979 --> 00:05:36,599
that you can later on go back basically

00:05:34,680 --> 00:05:39,000
to figure out what was happening here to

00:05:36,599 --> 00:05:41,039
kind of create the full picture and then

00:05:39,000 --> 00:05:42,840
there are things we are not aware of and

00:05:41,039 --> 00:05:45,620
do not understand and that is basically

00:05:42,840 --> 00:05:48,690
where observability comes into play like

00:05:45,620 --> 00:05:51,210
to look into the future and things that

00:05:48,690 --> 00:05:52,529
we would want to have after the fact to

00:05:51,210 --> 00:05:55,710
figure out what has gone wrong and

00:05:52,529 --> 00:05:57,180
another way to look a bit at this is I'm

00:05:55,710 --> 00:06:00,090
not sure if anybody knows that the

00:05:57,180 --> 00:06:02,219
survivor pyres this is in the Second

00:06:00,090 --> 00:06:05,029
World War the British basically looked

00:06:02,219 --> 00:06:11,130
at their planes after coming back from

00:06:05,029 --> 00:06:12,539
doing a raid over doing a raid and it

00:06:11,130 --> 00:06:14,490
would count the bullet holes where are

00:06:12,539 --> 00:06:16,319
the bullet holes and then the initial

00:06:14,490 --> 00:06:17,909
idea that everybody has is like well

00:06:16,319 --> 00:06:20,520
let's reinforce where the bullet holes

00:06:17,909 --> 00:06:22,289
are right but then people figured out

00:06:20,520 --> 00:06:24,029
like well actually what we're interested

00:06:22,289 --> 00:06:26,789
in are the planes that are not coming

00:06:24,029 --> 00:06:28,289
back so the bullet holes from the planes

00:06:26,789 --> 00:06:30,690
that don't come back those are the

00:06:28,289 --> 00:06:32,449
actual important ones and this is pretty

00:06:30,690 --> 00:06:35,789
much I don't want to say like your

00:06:32,449 --> 00:06:39,659
systems are a bit like this they are

00:06:35,789 --> 00:06:41,270
okay maybe you said that but sometimes

00:06:39,659 --> 00:06:43,430
the systems are a bit like that like

00:06:41,270 --> 00:06:45,319
they don't come back anymore and then

00:06:43,430 --> 00:06:46,940
you want to know where are basically the

00:06:45,319 --> 00:06:49,099
bullet holes you don't see anymore and

00:06:46,940 --> 00:06:50,900
that's the entire idea of observability

00:06:49,099 --> 00:06:52,669
you want to see kind of like things you

00:06:50,900 --> 00:06:55,250
have not watched out for a prepared for

00:06:52,669 --> 00:06:57,259
and generally is what is the status of

00:06:55,250 --> 00:06:59,210
my system what is not working and

00:06:57,259 --> 00:07:01,610
especially why is it not working anymore

00:06:59,210 --> 00:07:03,319
so what you want to do is you want to

00:07:01,610 --> 00:07:05,900
have some instrumentation without

00:07:03,319 --> 00:07:07,400
chipping new code like adding more log

00:07:05,900 --> 00:07:09,169
statements and redeploying your

00:07:07,400 --> 00:07:10,849
application to figure out the problem

00:07:09,169 --> 00:07:12,919
often doesn't work because then the

00:07:10,849 --> 00:07:15,080
problem doesn't appear anymore so you

00:07:12,919 --> 00:07:18,800
want to have the inside right in the

00:07:15,080 --> 00:07:21,650
running system and just as a side note

00:07:18,800 --> 00:07:25,430
not all signals that you could be

00:07:21,650 --> 00:07:27,349
collecting are equal so some stuff that

00:07:25,430 --> 00:07:29,990
you and your users probably care about

00:07:27,349 --> 00:07:31,639
this.can people log in can they do a

00:07:29,990 --> 00:07:34,669
successful transaction can they give you

00:07:31,639 --> 00:07:37,039
money can they do a search in a certain

00:07:34,669 --> 00:07:38,150
response time can they put something in

00:07:37,039 --> 00:07:40,970
a shopping cart in this the shopping

00:07:38,150 --> 00:07:43,190
cart consistent what your users don't

00:07:40,970 --> 00:07:45,169
really care about like if an API is slow

00:07:43,190 --> 00:07:47,419
or not probably the users don't see your

00:07:45,169 --> 00:07:49,190
care anyway that error rates as long as

00:07:47,419 --> 00:07:51,259
users are not affected and if you have

00:07:49,190 --> 00:07:54,409
like built-in retries why would a user

00:07:51,259 --> 00:07:56,389
care or just a database query latency if

00:07:54,409 --> 00:07:59,930
that doesn't affect the user they don't

00:07:56,389 --> 00:08:03,800
really care so I guess everybody is

00:07:59,930 --> 00:08:06,409
aware of the SLI silos in SAS so the

00:08:03,800 --> 00:08:08,120
indicators are uptime is for example

00:08:06,409 --> 00:08:12,469
something that your users probably care

00:08:08,120 --> 00:08:14,719
about objectives are you guarantee your

00:08:12,469 --> 00:08:17,569
people or you have uptime for your

00:08:14,719 --> 00:08:19,610
service to be like 99% and then you have

00:08:17,569 --> 00:08:22,159
the agreement where basically you

00:08:19,610 --> 00:08:24,830
guarantee to somebody that if your

00:08:22,159 --> 00:08:27,560
uptime is below that objective you owe

00:08:24,830 --> 00:08:29,180
them money and that's how you get stable

00:08:27,560 --> 00:08:31,789
systems both internally in your company

00:08:29,180 --> 00:08:35,000
but also armed to guarantee to outsiders

00:08:31,789 --> 00:08:36,979
and this is really something that you

00:08:35,000 --> 00:08:39,020
want to get with observability to see

00:08:36,979 --> 00:08:41,560
like what is happening if you're not

00:08:39,020 --> 00:08:44,480
hitting those and getting to those so

00:08:41,560 --> 00:08:46,970
you cannot buy observability but you

00:08:44,480 --> 00:08:49,010
need to kind of fill it in and build

00:08:46,970 --> 00:08:50,630
more observable to systems so

00:08:49,010 --> 00:08:52,820
observability is not a product that you

00:08:50,630 --> 00:08:54,890
buy but it's an attribute of the system

00:08:52,820 --> 00:08:55,130
that you want to have and just to give

00:08:54,890 --> 00:08:57,380
you

00:08:55,130 --> 00:08:59,570
one example is it's not a tool that you

00:08:57,380 --> 00:09:01,940
buy for example your logs might look

00:08:59,570 --> 00:09:04,040
something like this today maybe you have

00:09:01,940 --> 00:09:07,130
something like this so I fail to login

00:09:04,040 --> 00:09:09,050
with whatever password here and this is

00:09:07,130 --> 00:09:10,850
some nice piece of information but this

00:09:09,050 --> 00:09:13,370
is not a very complete picture what you

00:09:10,850 --> 00:09:15,530
want to have is to make your system give

00:09:13,370 --> 00:09:17,570
you better insight you want to make kind

00:09:15,530 --> 00:09:19,070
of like from regular logs to more event

00:09:17,570 --> 00:09:23,120
like structures which give you much more

00:09:19,070 --> 00:09:25,100
context so here this will of course in

00:09:23,120 --> 00:09:26,870
the context of logs require work from me

00:09:25,100 --> 00:09:28,820
but here I'm saying for example what

00:09:26,870 --> 00:09:30,830
kind of event was did so somebody tried

00:09:28,820 --> 00:09:33,170
to log in and it was a login failure and

00:09:30,830 --> 00:09:34,700
this was the specific user and this was

00:09:33,170 --> 00:09:36,500
where the request was coming from and

00:09:34,700 --> 00:09:38,570
this was maybe the URL and with that

00:09:36,500 --> 00:09:40,670
information you can extract much more

00:09:38,570 --> 00:09:42,560
value out of that for example from this

00:09:40,670 --> 00:09:44,150
statement here I need a human to

00:09:42,560 --> 00:09:46,370
actually read that and interpret what is

00:09:44,150 --> 00:09:49,040
going on from this one here I have the

00:09:46,370 --> 00:09:51,410
right event type and then I can say ah

00:09:49,040 --> 00:09:53,300
ok so somebody's trying to brute force

00:09:51,410 --> 00:09:55,010
my user account and then I might lock

00:09:53,300 --> 00:09:57,050
the user account or you can see

00:09:55,010 --> 00:09:59,330
somebody's failing to log in or your

00:09:57,050 --> 00:10:01,400
login is failing in total like this is a

00:09:59,330 --> 00:10:06,170
much richer structure to show you what

00:10:01,400 --> 00:10:08,150
is happening in your system and that is

00:10:06,170 --> 00:10:10,940
also why you probably want to go a bit

00:10:08,150 --> 00:10:12,320
beyond just like logs metrics and traces

00:10:10,940 --> 00:10:14,390
because there are many other systems

00:10:12,320 --> 00:10:16,220
that you will care about to actually see

00:10:14,390 --> 00:10:18,260
what is going on so for example you

00:10:16,220 --> 00:10:19,790
could have health checks to see what is

00:10:18,260 --> 00:10:21,850
happening or even synthetic health

00:10:19,790 --> 00:10:24,350
checks synthetic health checks are like

00:10:21,850 --> 00:10:26,360
rather than waiting for a user to do

00:10:24,350 --> 00:10:28,430
something and have them fail you have an

00:10:26,360 --> 00:10:30,620
automated probe that basically tries out

00:10:28,430 --> 00:10:32,570
what would a user do to see if that

00:10:30,620 --> 00:10:34,850
would fail and then you know ok there is

00:10:32,570 --> 00:10:36,080
a problem luckily no user has been

00:10:34,850 --> 00:10:38,150
affected yet but I found the problem

00:10:36,080 --> 00:10:39,890
before somebody has been affected all

00:10:38,150 --> 00:10:41,000
for example security is also something

00:10:39,890 --> 00:10:43,460
that is coming into this whole

00:10:41,000 --> 00:10:45,860
observability topic because there's also

00:10:43,460 --> 00:10:50,330
part of the overall health and behavior

00:10:45,860 --> 00:10:52,460
P system and as always the goal is the

00:10:50,330 --> 00:10:55,250
business value so it's not just about

00:10:52,460 --> 00:10:56,570
like we have 100% uptime if nobody cares

00:10:55,250 --> 00:10:59,630
about the uptime you want to have

00:10:56,570 --> 00:11:03,850
business value for making you a

00:10:59,630 --> 00:11:03,850
successful company so to kind of wrap up

00:11:03,910 --> 00:11:08,870
monitoring is still a thing monitoring

00:11:06,680 --> 00:11:10,940
is the thing where you know if this

00:11:08,870 --> 00:11:13,040
system is not working so you actively

00:11:10,940 --> 00:11:15,589
monitor also monitoring is like it's a

00:11:13,040 --> 00:11:17,600
verb so you do something actively to see

00:11:15,589 --> 00:11:19,640
if your system is working observability

00:11:17,600 --> 00:11:21,170
is a noun and this is more like an

00:11:19,640 --> 00:11:23,270
attribute of the entire system and this

00:11:21,170 --> 00:11:26,450
is why you something is not working and

00:11:23,270 --> 00:11:28,070
it's a much bigger picture and trying to

00:11:26,450 --> 00:11:29,510
answer these questions that you haven't

00:11:28,070 --> 00:11:33,860
seen before or haven't been able to

00:11:29,510 --> 00:11:36,200
answer before repeat after me

00:11:33,860 --> 00:11:38,779
neither can you buy devops nor

00:11:36,200 --> 00:11:41,150
observability though i can totally sell

00:11:38,779 --> 00:11:45,260
them to you this is whatever tool

00:11:41,150 --> 00:11:47,330
provided us and that's pretty much it if

00:11:45,260 --> 00:11:49,720
you want to have like a more concrete

00:11:47,330 --> 00:11:52,190
tool driven thing come to our booth

00:11:49,720 --> 00:11:54,770
we'll save that for there are there any

00:11:52,190 --> 00:12:00,220
general questions now I think we have

00:11:54,770 --> 00:12:00,220
like a couple left ok Tomer behave

00:12:06,660 --> 00:12:09,799
[Music]

00:12:18,940 --> 00:12:41,630
everything is broken all the time that's

00:12:39,589 --> 00:12:43,190
very true also because otherwise you

00:12:41,630 --> 00:12:44,870
will never be able to know like what is

00:12:43,190 --> 00:12:46,940
broken and what is not broken it's just

00:12:44,870 --> 00:12:48,830
like knowing your system that's probably

00:12:46,940 --> 00:12:50,540
a good way to put it that to know your

00:12:48,830 --> 00:12:52,730
system and what is going on also by the

00:12:50,540 --> 00:12:55,459
way before you all run off I normally

00:12:52,730 --> 00:12:56,540
try to take a picture with you so I can

00:12:55,459 --> 00:12:57,370
prove to my colleagues that I've been

00:12:56,540 --> 00:12:59,420
working today

00:12:57,370 --> 00:13:01,400
you know we're a fully distributed

00:12:59,420 --> 00:13:02,900
company um today people who know where I

00:13:01,400 --> 00:13:06,160
am but sometimes they don't can you all

00:13:02,900 --> 00:13:09,860
wave wave wave

00:13:06,160 --> 00:13:11,120
thank you yeah office hours find me

00:13:09,860 --> 00:13:16,780
afterwards thanks a lot

00:13:11,120 --> 00:13:21,919
[Applause]

00:13:16,780 --> 00:13:21,919

YouTube URL: https://www.youtube.com/watch?v=gkCupo-njCo


