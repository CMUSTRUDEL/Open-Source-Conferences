Title: Noah Kantrowitz: What is coming in Python packaging - PyCon 2014
Publication date: 2014-04-24
Playlist: PyCon 2014
Description: 
	Speaker: Noah Kantrowitz

In the last 18 months the Python packaging world has seen an explosion of activity. Learn what improvements are available now and what is on the horizon.

Slides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides
Captions: 
	00:00:06,589 --> 00:00:12,599
welcome everyone we've got a great

00:00:09,570 --> 00:00:15,089
speaker ahead of us this is noah can

00:00:12,599 --> 00:00:25,140
turrets with python packaging a

00:00:15,089 --> 00:00:27,029
zeitgeist alright welcome I apologize

00:00:25,140 --> 00:00:28,859
for anyone that saw this was originally

00:00:27,029 --> 00:00:31,170
called what's coming in Python packaging

00:00:28,859 --> 00:00:32,700
but unfortunately or fortunately in the

00:00:31,170 --> 00:00:34,680
roughly six months since I wrote the

00:00:32,700 --> 00:00:36,180
proposal most of the stuff that I was

00:00:34,680 --> 00:00:37,739
going to say is coming soon has actually

00:00:36,180 --> 00:00:44,040
happened so this will be more of a

00:00:37,739 --> 00:00:45,809
review of the last 18 to 24 months thank

00:00:44,040 --> 00:00:47,910
you so rude last 18 to 24 months of

00:00:45,809 --> 00:00:49,530
Python packaging development but first a

00:00:47,910 --> 00:00:50,969
little bit about me the infrastructure

00:00:49,530 --> 00:00:53,489
lead for the Python Software Foundation

00:00:50,969 --> 00:00:55,530
and one of the organizers of Pike on by

00:00:53,489 --> 00:00:57,059
day I do server automation and

00:00:55,530 --> 00:00:58,859
operations work for balance payments

00:00:57,059 --> 00:01:01,440
very involved in the chef community and

00:00:58,859 --> 00:01:03,120
I really like making things also a

00:01:01,440 --> 00:01:04,680
disclaimer this list is not in any

00:01:03,120 --> 00:01:06,990
specific order not chronological not

00:01:04,680 --> 00:01:08,549
order of importance it's just the order

00:01:06,990 --> 00:01:09,990
that I could weave best into a

00:01:08,549 --> 00:01:11,850
presentation so don't take this as an

00:01:09,990 --> 00:01:14,340
endorsement or disparagement of any

00:01:11,850 --> 00:01:15,869
particular features so getting started

00:01:14,340 --> 00:01:18,119
we have a couple of org chart changes in

00:01:15,869 --> 00:01:20,340
the Python community the first major one

00:01:18,119 --> 00:01:23,400
was the creation of the python packaging

00:01:20,340 --> 00:01:24,780
Authority or pie PA this is now a group

00:01:23,400 --> 00:01:26,670
operating outside of the C Python

00:01:24,780 --> 00:01:28,020
development team although there is some

00:01:26,670 --> 00:01:30,060
overlap some people participate in both

00:01:28,020 --> 00:01:31,619
groups that's handling most of the

00:01:30,060 --> 00:01:33,270
non-standard lib packaging tool

00:01:31,619 --> 00:01:35,250
development and organizations that's

00:01:33,270 --> 00:01:37,409
things like pip setuptools virtual and

00:01:35,250 --> 00:01:40,320
all of that now lives under the pie PA

00:01:37,409 --> 00:01:43,110
umbrella organization second was the

00:01:40,320 --> 00:01:45,479
appointment of the new packaging btfl

00:01:43,110 --> 00:01:47,130
Nick Coughlin hopefully I pronounced

00:01:45,479 --> 00:01:49,200
that correctly he demoed it for me

00:01:47,130 --> 00:01:51,299
earlier but never insure with these

00:01:49,200 --> 00:01:54,180
things anyway he was appointed by Guido

00:01:51,299 --> 00:01:56,070
as the packaging btfl just means that he

00:01:54,180 --> 00:01:58,320
can directly accept peps related for

00:01:56,070 --> 00:02:00,149
packaging without the discussion moving

00:01:58,320 --> 00:02:01,530
on to Python dev anyone who's on python

00:02:00,149 --> 00:02:04,259
dev probably understands why this is a

00:02:01,530 --> 00:02:07,229
very good thing additionally rich jones

00:02:04,259 --> 00:02:09,660
has taken back the mantle of BD FL for

00:02:07,229 --> 00:02:12,700
the python package index itself so he's

00:02:09,660 --> 00:02:14,830
back on the saddle for managed

00:02:12,700 --> 00:02:17,200
doing anything where we need to break

00:02:14,830 --> 00:02:18,459
compatibility we do try to file peps and

00:02:17,200 --> 00:02:21,150
he's allowed to accept those if

00:02:18,459 --> 00:02:23,470
necessary so on to the actual features

00:02:21,150 --> 00:02:25,629
most of you probably use the Python

00:02:23,470 --> 00:02:27,760
package index or pi PI for short either

00:02:25,629 --> 00:02:29,050
to host your own packages or to find

00:02:27,760 --> 00:02:31,930
libraries to use we made a lot of

00:02:29,050 --> 00:02:35,349
improvements to that biggest one in my

00:02:31,930 --> 00:02:38,290
mind is a lot of TLS improvements we

00:02:35,349 --> 00:02:40,690
actually use HTTPS now and we support

00:02:38,290 --> 00:02:41,920
all the latest goodies like strict

00:02:40,690 --> 00:02:43,989
Transport Security so you'll

00:02:41,920 --> 00:02:45,819
automatically default to https trying to

00:02:43,989 --> 00:02:47,980
keep it much more secure we also now

00:02:45,819 --> 00:02:49,660
offer perfect forward secrecy so that if

00:02:47,980 --> 00:02:52,209
keys are leaked how would that ever

00:02:49,660 --> 00:02:57,459
happen no one can decrypt past recorded

00:02:52,209 --> 00:02:58,299
traffic this one not actually as recent

00:02:57,459 --> 00:02:59,650
as some of the other stuff I'm

00:02:58,299 --> 00:03:02,680
mentioning but a lot of people don't

00:02:59,650 --> 00:03:04,239
know it exists there is a JSON API of

00:03:02,680 --> 00:03:06,310
sorts for the Python package index if

00:03:04,239 --> 00:03:07,959
you just add / JSON to the end of either

00:03:06,310 --> 00:03:10,030
a package or version URL you will get

00:03:07,959 --> 00:03:12,760
all the data of that page in JSON format

00:03:10,030 --> 00:03:13,959
so if you have a reason to need all the

00:03:12,760 --> 00:03:15,459
packaging information you could ever

00:03:13,959 --> 00:03:19,299
possibly want here's a really easy way

00:03:15,459 --> 00:03:22,120
to grab it we now have a CDN powering

00:03:19,299 --> 00:03:24,639
the Python package index so it's run by

00:03:22,120 --> 00:03:27,250
fastly who gloriously sponsors it for us

00:03:24,639 --> 00:03:29,950
they do a geo distributed caching system

00:03:27,250 --> 00:03:32,049
based around varnish with an automated

00:03:29,950 --> 00:03:35,680
static fall back so if our servers

00:03:32,049 --> 00:03:38,109
self-destruct we move to a Bandersnatch

00:03:35,680 --> 00:03:40,870
managed static mirror in another data

00:03:38,109 --> 00:03:42,459
center this has led to vastly improve

00:03:40,870 --> 00:03:44,889
performance for people that don't live

00:03:42,459 --> 00:03:47,139
outside the US since the servers are no

00:03:44,889 --> 00:03:50,579
longer a single box somewhere in Oregon

00:03:47,139 --> 00:03:54,040
and just generally improve stability

00:03:50,579 --> 00:03:55,420
because of the CDN combined with the

00:03:54,040 --> 00:03:57,400
fact that a lot of the public mirrors

00:03:55,420 --> 00:03:59,260
were becoming increasingly fragile many

00:03:57,400 --> 00:04:00,849
of them were breaking or no longer

00:03:59,260 --> 00:04:02,470
updating had to be kicked every couple

00:04:00,849 --> 00:04:03,970
weeks or they'd fall out of sync we've

00:04:02,470 --> 00:04:06,099
now deprecated the public mirror Network

00:04:03,970 --> 00:04:08,200
so if you've previously read jacob

00:04:06,099 --> 00:04:09,840
kaplan mosses wonderful post on how to

00:04:08,200 --> 00:04:12,519
use mirrors please disregard all of that

00:04:09,840 --> 00:04:15,519
my love to jacob and i'm very glad that

00:04:12,519 --> 00:04:18,099
he wrote that but no longer needed we've

00:04:15,519 --> 00:04:19,750
removed the dns entries for them and pip

00:04:18,099 --> 00:04:22,000
no longer ships support for the public

00:04:19,750 --> 00:04:24,460
mirror network and we have deprecated

00:04:22,000 --> 00:04:25,690
the mirror authenticity api it hasn't

00:04:24,460 --> 00:04:26,500
been removed but i believe it's

00:04:25,690 --> 00:04:30,280
scheduled be removed

00:04:26,500 --> 00:04:32,500
in September also in the topic of

00:04:30,280 --> 00:04:34,390
mirrors pep 381 client has been the

00:04:32,500 --> 00:04:36,040
workhorse for maintaining local and

00:04:34,390 --> 00:04:38,230
internal mirrors for a very long time

00:04:36,040 --> 00:04:40,780
it's now largely considered deprecated

00:04:38,230 --> 00:04:42,160
in favor of Bandersnatch if you would

00:04:40,780 --> 00:04:43,540
like to maintain a local mirror and I

00:04:42,160 --> 00:04:45,550
would certainly encourage it if you have

00:04:43,540 --> 00:04:47,380
large scale deployments or if you just

00:04:45,550 --> 00:04:48,790
don't want to worry about us being down

00:04:47,380 --> 00:04:50,830
even though fortunately that's now very

00:04:48,790 --> 00:04:53,560
rare Bandersnatch is definitely the tool

00:04:50,830 --> 00:04:55,600
to use ad FBI is also a somewhat recent

00:04:53,560 --> 00:04:58,090
addition its primary function is not

00:04:55,600 --> 00:04:59,680
mirroring but it can act as a partial

00:04:58,090 --> 00:05:01,720
mirroring tool so whereas Bandersnatch

00:04:59,680 --> 00:05:03,730
largely is used for keeping mirrors of

00:05:01,720 --> 00:05:06,850
the entire python package index dev pie

00:05:03,730 --> 00:05:10,450
or dev p i can mirror only what you

00:05:06,850 --> 00:05:12,310
access through it as a caching proxy and

00:05:10,450 --> 00:05:14,530
finally warehouse so warehouse grew out

00:05:12,310 --> 00:05:15,910
of the now-defunct creo project so don't

00:05:14,530 --> 00:05:16,990
go to create that I o anymore i think

00:05:15,910 --> 00:05:19,630
it's now being used by some other

00:05:16,990 --> 00:05:22,150
company but it is going to turn into

00:05:19,630 --> 00:05:24,220
python package index to point out we

00:05:22,150 --> 00:05:27,070
have a demo site up at warehouse python

00:05:24,220 --> 00:05:29,680
org it currently supports package

00:05:27,070 --> 00:05:32,140
installation search and most of the

00:05:29,680 --> 00:05:34,000
api's you cannot yet upload packages to

00:05:32,140 --> 00:05:38,890
it and I think user authentication is

00:05:34,000 --> 00:05:40,720
being added very shortly on to how do

00:05:38,890 --> 00:05:43,960
you actually get packages from those

00:05:40,720 --> 00:05:45,130
servers so again you might notice a

00:05:43,960 --> 00:05:46,990
pattern here I think some of the most

00:05:45,130 --> 00:05:49,479
important stuff is around safety so

00:05:46,990 --> 00:05:51,310
we've added in pip TLS verification and

00:05:49,479 --> 00:05:53,229
we've deprecated external links and

00:05:51,310 --> 00:05:54,760
dependency links so this means that you

00:05:53,229 --> 00:05:56,380
can now actually be relatively certain

00:05:54,760 --> 00:06:03,790
that you will be downloading packages in

00:05:56,380 --> 00:06:06,370
a safe and verified manner also pepa 453

00:06:03,790 --> 00:06:07,419
landed when Python 3.4 shipped or is it

00:06:06,370 --> 00:06:09,460
landed a little bit earlier but it is

00:06:07,419 --> 00:06:12,910
now live for those that don't know

00:06:09,460 --> 00:06:14,890
ensure pip is the module that we are

00:06:12,910 --> 00:06:16,870
shipping basically meaning pip is now

00:06:14,890 --> 00:06:18,310
part of the Python standard library not

00:06:16,870 --> 00:06:19,570
quite it actually lives in a slightly

00:06:18,310 --> 00:06:22,030
different category but functionally

00:06:19,570 --> 00:06:23,979
speaking if someone installs Python 3.4

00:06:22,030 --> 00:06:25,960
on any platform be it from the source

00:06:23,979 --> 00:06:27,700
tar balls or in red hat or any other

00:06:25,960 --> 00:06:30,340
platform it is expected that pip will be

00:06:27,700 --> 00:06:33,130
available this means we now can finally

00:06:30,340 --> 00:06:36,120
put easy install to bed this is a very

00:06:33,130 --> 00:06:36,120
very nice thing

00:06:37,180 --> 00:06:49,909
so no more easy install pip on two

00:06:46,669 --> 00:06:51,050
wheels so for those that have played

00:06:49,909 --> 00:06:52,610
with them a little bit you've probably

00:06:51,050 --> 00:06:55,490
seen there are vastly simplified

00:06:52,610 --> 00:06:58,909
installation format notably they don't

00:06:55,490 --> 00:07:01,249
require executing any code so the wheels

00:06:58,909 --> 00:07:05,330
grew out of the old setuptools egg

00:07:01,249 --> 00:07:07,219
concept instead of having a source

00:07:05,330 --> 00:07:09,229
distribution file that pip downloads

00:07:07,219 --> 00:07:11,599
unpacks and runs set up top I install

00:07:09,229 --> 00:07:14,120
which is what it does now that the the

00:07:11,599 --> 00:07:15,889
wheel format has things effectively in

00:07:14,120 --> 00:07:17,330
the format that they need to be when

00:07:15,889 --> 00:07:19,550
they are installed on the system so pip

00:07:17,330 --> 00:07:21,469
can just unpack the zip file in a very

00:07:19,550 --> 00:07:23,719
specific way but you don't have to

00:07:21,469 --> 00:07:27,169
actually run any code to do installs

00:07:23,719 --> 00:07:30,199
this means that well this means that

00:07:27,169 --> 00:07:31,969
installs are faster and much safer since

00:07:30,199 --> 00:07:34,129
you're not executing arbitrary code from

00:07:31,969 --> 00:07:36,559
the internet turns out that's not always

00:07:34,129 --> 00:07:37,999
a good idea downside wheels are

00:07:36,559 --> 00:07:40,099
definitely still a field of active

00:07:37,999 --> 00:07:41,719
development if you have pure python

00:07:40,099 --> 00:07:43,699
stuff they're wonderful and you should

00:07:41,719 --> 00:07:46,509
use them now if you have c extensions or

00:07:43,699 --> 00:07:48,589
other binary packages you may want to

00:07:46,509 --> 00:07:50,529
look and play with them a little bit

00:07:48,589 --> 00:07:53,330
before you you go in whole hog on

00:07:50,529 --> 00:07:55,610
windows and OSX because they have very

00:07:53,330 --> 00:07:57,830
stable and long-term platform level ad

00:07:55,610 --> 00:07:59,089
is it's relatively easy to know that if

00:07:57,830 --> 00:08:00,860
you compile it on one machine it'll work

00:07:59,089 --> 00:08:02,810
on another that's not quite the case

00:08:00,860 --> 00:08:04,279
with Linux unfortunately the wheel

00:08:02,810 --> 00:08:06,770
standard doesn't currently have any way

00:08:04,279 --> 00:08:09,649
to express the complexities of Linux

00:08:06,770 --> 00:08:11,419
abis but we are working on that if you'd

00:08:09,649 --> 00:08:13,129
like to get started with wheel today you

00:08:11,419 --> 00:08:15,319
can just pip install wheel and instead

00:08:13,129 --> 00:08:19,159
of doing esta store be just egg you can

00:08:15,319 --> 00:08:21,229
do be dissed wheel and finally on the

00:08:19,159 --> 00:08:22,569
getting side is a tool called Conda this

00:08:21,229 --> 00:08:24,830
was written by continuum analytics

00:08:22,569 --> 00:08:28,129
relatively new entrant into the

00:08:24,830 --> 00:08:31,279
Installer field and maimed a maid aimed

00:08:28,129 --> 00:08:32,690
mainly at scientific environments it can

00:08:31,279 --> 00:08:34,010
be used a general purpose installer but

00:08:32,690 --> 00:08:35,120
there are some security concerns they're

00:08:34,010 --> 00:08:36,260
still working out so I wouldn't

00:08:35,120 --> 00:08:38,419
necessarily recommend that unless you

00:08:36,260 --> 00:08:42,169
need its extra features which are

00:08:38,419 --> 00:08:46,130
largely based around scientific packages

00:08:42,169 --> 00:08:47,779
which need large binary large binary

00:08:46,130 --> 00:08:48,860
installations things like scikit-learn

00:08:47,779 --> 00:08:50,540
numpy

00:08:48,860 --> 00:08:51,800
CyHi things like that where you really

00:08:50,540 --> 00:08:54,290
don't want to be compiling the source

00:08:51,800 --> 00:08:56,269
largely because of time and complexity

00:08:54,290 --> 00:08:57,740
constraints if you're not doing heavy

00:08:56,269 --> 00:09:01,820
number crunching or scientific analysis

00:08:57,740 --> 00:09:03,800
you may not need to be using Conda on to

00:09:01,820 --> 00:09:05,750
using packages so you've downloaded them

00:09:03,800 --> 00:09:07,130
tip has done some stuff depending on the

00:09:05,750 --> 00:09:11,209
format now you want to actually use

00:09:07,130 --> 00:09:14,360
packages so vien is the evolution of

00:09:11,209 --> 00:09:16,279
virtual end it shipped in Python 3.3 the

00:09:14,360 --> 00:09:17,750
script you call is slightly different

00:09:16,279 --> 00:09:19,760
it's now PI VNV instead of virtual ends

00:09:17,750 --> 00:09:21,410
but otherwise the internals us are

00:09:19,760 --> 00:09:26,630
vastly cleaned up and the usage is

00:09:21,410 --> 00:09:29,720
largely the same distribute is gone big

00:09:26,630 --> 00:09:31,010
thanks to pje for helping to merge set

00:09:29,720 --> 00:09:32,450
up tools and the community fork

00:09:31,010 --> 00:09:34,579
distribute back together like I said

00:09:32,450 --> 00:09:36,920
before they're both now operating under

00:09:34,579 --> 00:09:38,839
the PI PA and have resumed using the set

00:09:36,920 --> 00:09:40,670
of tools name anywhere where you were

00:09:38,839 --> 00:09:42,200
installing distribute in any kind of

00:09:40,670 --> 00:09:46,339
scripts or anything just replace it with

00:09:42,200 --> 00:09:48,740
set up tools and finally dist utils to

00:09:46,339 --> 00:09:50,810
it did briefly end up at the standard

00:09:48,740 --> 00:09:52,700
library under the name packaging however

00:09:50,810 --> 00:09:54,170
it ended up being removed because there

00:09:52,700 --> 00:09:55,910
were some concerns about implementations

00:09:54,170 --> 00:09:58,220
and it's no longer under development so

00:09:55,910 --> 00:10:01,730
if you were waiting for just details too

00:09:58,220 --> 00:10:06,440
sorry to disappoint you and now making

00:10:01,730 --> 00:10:07,880
packages so improvements in the metadata

00:10:06,440 --> 00:10:09,410
hip now supports the idea of

00:10:07,880 --> 00:10:12,110
pre-releases so if you upload something

00:10:09,410 --> 00:10:13,550
with dash alpha or dash beta people

00:10:12,110 --> 00:10:15,860
understand that and will only install

00:10:13,550 --> 00:10:17,600
them if specifically requested by the

00:10:15,860 --> 00:10:18,980
end user this means that you can do

00:10:17,600 --> 00:10:21,769
pre-release testing and release

00:10:18,980 --> 00:10:24,110
candidates in a same manner there's also

00:10:21,769 --> 00:10:26,779
pep 426 creatively named metadata to

00:10:24,110 --> 00:10:28,310
point oh this isn't trying to take all

00:10:26,779 --> 00:10:30,079
the metadata that we've sort of crammed

00:10:28,310 --> 00:10:32,149
into packages in weird places over the

00:10:30,079 --> 00:10:36,320
years put in one place put it in JSON

00:10:32,149 --> 00:10:38,570
format and have standardized values as

00:10:36,320 --> 00:10:40,790
far as uploading packages so a lot of

00:10:38,570 --> 00:10:43,760
people use Python setup i upload as

00:10:40,790 --> 00:10:45,740
their uploader there is a new project

00:10:43,760 --> 00:10:47,899
called twine which is trying to pull all

00:10:45,740 --> 00:10:49,820
that update log or upload logic out of

00:10:47,899 --> 00:10:52,250
dis utils the advantage of this is we

00:10:49,820 --> 00:10:53,600
can update it in a much faster way than

00:10:52,250 --> 00:10:55,370
we can the standard library we're not

00:10:53,600 --> 00:10:58,089
worried about maintaining compatibility

00:10:55,370 --> 00:11:00,589
and things like that in the same way

00:10:58,089 --> 00:11:02,630
twine I would highly recommend using it

00:11:00,589 --> 00:11:04,810
now distutils for example does not

00:11:02,630 --> 00:11:07,220
support TLS verification on uploads

00:11:04,810 --> 00:11:08,870
doesn't support the upload of previously

00:11:07,220 --> 00:11:11,270
created artifacts things like that

00:11:08,870 --> 00:11:12,500
definitely check that out I'm probably

00:11:11,270 --> 00:11:14,060
doing myself a disservice even

00:11:12,500 --> 00:11:16,970
mentioning it because it was shut down

00:11:14,060 --> 00:11:19,700
due to non use but pi pssh has been

00:11:16,970 --> 00:11:23,830
removed I'm sorry to the 400 people that

00:11:19,700 --> 00:11:25,580
ever used it and finally the guide

00:11:23,830 --> 00:11:27,620
previously called The Hitchhiker's Guide

00:11:25,580 --> 00:11:29,270
to packaging now the Python packaging

00:11:27,620 --> 00:11:31,490
user guide is available at packaging

00:11:29,270 --> 00:11:32,810
python org it's basically an expanded

00:11:31,490 --> 00:11:34,340
version of everything i'm talking about

00:11:32,810 --> 00:11:37,910
here i definitely rent checking it out

00:11:34,340 --> 00:11:39,620
and the few things that are still coming

00:11:37,910 --> 00:11:41,720
soon so i chi mentioned metadata 2 point

00:11:39,620 --> 00:11:44,060
0 is still under active discussion it's

00:11:41,720 --> 00:11:46,250
sort of the blocker right now for most

00:11:44,060 --> 00:11:47,960
future efforts everyone's trying to sort

00:11:46,250 --> 00:11:49,760
of centralized around getting metadata

00:11:47,960 --> 00:11:51,140
to point o before we all go off and use

00:11:49,760 --> 00:11:54,770
all the new metadata in new and exciting

00:11:51,140 --> 00:11:57,710
ways to other things that are right on

00:11:54,770 --> 00:11:59,510
the cusp of being discussed is s just to

00:11:57,710 --> 00:12:00,890
point o in wheel to point o like I said

00:11:59,510 --> 00:12:03,170
the wheel format has some issues with

00:12:00,890 --> 00:12:05,480
binary compatibility the s jist format

00:12:03,170 --> 00:12:07,940
hasn't changed in what 12 years now

00:12:05,480 --> 00:12:09,680
things like that it's it's about time

00:12:07,940 --> 00:12:11,390
for those both to get a once-over

00:12:09,680 --> 00:12:13,790
especially in light of the new metadata

00:12:11,390 --> 00:12:14,990
format so if you're interested in

00:12:13,790 --> 00:12:17,450
participating with those discussions i

00:12:14,990 --> 00:12:18,470
will have slides for you in a moment and

00:12:17,450 --> 00:12:21,080
also coming soon like i mentioned

00:12:18,470 --> 00:12:23,060
warehouse the hope is that sometime in

00:12:21,080 --> 00:12:24,980
the next six months range that it will

00:12:23,060 --> 00:12:27,200
be full featured enough to replace the

00:12:24,980 --> 00:12:29,270
existing PI P I code base at which point

00:12:27,200 --> 00:12:31,340
we will just switch it from warehouse

00:12:29,270 --> 00:12:33,650
top 500 org 2 pi pi dot 500 org and

00:12:31,340 --> 00:12:34,910
welcome our new warehouse overlords I do

00:12:33,650 --> 00:12:36,050
definitely recommend that if you have

00:12:34,910 --> 00:12:38,330
anything that's doing a lot of

00:12:36,050 --> 00:12:40,640
non-standard scripting or using api's

00:12:38,330 --> 00:12:42,290
directly on pi PI that you try them with

00:12:40,640 --> 00:12:44,150
the warehouse type python dork test site

00:12:42,290 --> 00:12:45,770
and report any bugs you find so when we

00:12:44,150 --> 00:12:49,250
do that switch over you will not be

00:12:45,770 --> 00:12:50,900
suddenly surprised and broken so what if

00:12:49,250 --> 00:12:52,670
you'd like to help us out so like I

00:12:50,900 --> 00:12:54,890
mentioned the PI P a team has taken over

00:12:52,670 --> 00:12:57,170
a lot of the projects they are sort of

00:12:54,890 --> 00:12:59,330
split though some stuff is up on github

00:12:57,170 --> 00:13:01,070
notably pip virtual end van warehouse

00:12:59,330 --> 00:13:03,860
are all managing to the PI PA

00:13:01,070 --> 00:13:07,150
organization on github and setuptools

00:13:03,860 --> 00:13:09,650
pypy I the old code base and the wheel

00:13:07,150 --> 00:13:11,960
libraries and tooling are under the PI

00:13:09,650 --> 00:13:12,770
PA organization on bitbucket so if

00:13:11,960 --> 00:13:14,060
you're looking to help out these

00:13:12,770 --> 00:13:15,670
projects just make sure that you end up

00:13:14,060 --> 00:13:18,460
in the right repository

00:13:15,670 --> 00:13:21,670
there's also an IRC channel on freenode

00:13:18,460 --> 00:13:23,710
IRC pound pie PA a lot of the packaging

00:13:21,670 --> 00:13:24,880
developers both from the PI P a team and

00:13:23,710 --> 00:13:26,740
from the standard lib team even though

00:13:24,880 --> 00:13:27,880
most of those are the same people hang

00:13:26,740 --> 00:13:29,200
out in there so if you have any

00:13:27,880 --> 00:13:31,690
questions or would like to learn more

00:13:29,200 --> 00:13:34,030
about how to help just jump in there we

00:13:31,690 --> 00:13:36,070
also have the venerable distutils sig

00:13:34,030 --> 00:13:37,720
mailing list it's still going strong it

00:13:36,070 --> 00:13:39,670
is definitely the primary communication

00:13:37,720 --> 00:13:42,310
point for most packaging discussions

00:13:39,670 --> 00:13:43,960
there used to be another mailing list if

00:13:42,310 --> 00:13:45,640
you were on it you got a notification of

00:13:43,960 --> 00:13:47,830
this but catalogs sig has been merged

00:13:45,640 --> 00:13:50,830
into distutils sig that was the old pipe

00:13:47,830 --> 00:13:53,080
I specific mailing list so long-lived is

00:13:50,830 --> 00:13:55,540
due till sig and finally Sprint's the

00:13:53,080 --> 00:13:57,400
warehouse team a few of them anyway will

00:13:55,540 --> 00:13:59,050
be here and will be sprinting during the

00:13:57,400 --> 00:14:01,480
pike on Sprint's on warehouse if you'd

00:13:59,050 --> 00:14:04,000
like to join them find Richard Jones or

00:14:01,480 --> 00:14:06,580
any of the other pie PA folks and ask

00:14:04,000 --> 00:14:09,100
them how to help out and I'd like to

00:14:06,580 --> 00:14:10,600
close with just a few shoutouts first

00:14:09,100 --> 00:14:12,160
Donald stuffed most of you have never

00:14:10,600 --> 00:14:13,360
heard of donald stuffed and

00:14:12,160 --> 00:14:15,670
unfortunately he wasn't able to make it

00:14:13,360 --> 00:14:17,860
up to Montreal but I counted he has

00:14:15,670 --> 00:14:19,570
worked on at least ninety percent of the

00:14:17,860 --> 00:14:21,580
things that I mentioned today and

00:14:19,570 --> 00:14:25,380
basically runs Python packaging it makes

00:14:21,580 --> 00:14:25,380
all of this happen we all owe him a beer

00:14:29,560 --> 00:14:34,150
and another shout-out for Nick Coughlin

00:14:31,590 --> 00:14:36,460
for taking the weight of being the

00:14:34,150 --> 00:14:37,900
packaging btfl on shoulders I have

00:14:36,460 --> 00:14:41,320
certainly disagree with in the past but

00:14:37,900 --> 00:14:43,779
he is the hero Gotham needs and finally

00:14:41,320 --> 00:14:45,430
our sponsors just a quick shout out to

00:14:43,779 --> 00:14:47,890
some of our sponsors fastly rackspace

00:14:45,430 --> 00:14:49,870
dine ping dom pedro duty dreamhost and

00:14:47,890 --> 00:14:51,640
everyone else if i didn't get you into

00:14:49,870 --> 00:14:53,529
my slide notes without them we wouldn't

00:14:51,640 --> 00:14:55,600
be able to run pie pie or any of our

00:14:53,529 --> 00:14:59,220
other PSS services so a big thank you to

00:14:55,600 --> 00:14:59,220
all of our sponsors and thank you

00:15:03,399 --> 00:15:07,100
and if anybody has any questions you

00:15:05,720 --> 00:15:08,420
could just go to the mic in the center

00:15:07,100 --> 00:15:10,670
and make sure you step towards the mic

00:15:08,420 --> 00:15:12,439
could you actually go back to Donald

00:15:10,670 --> 00:15:13,759
slide cuz he's on our team I wanted to

00:15:12,439 --> 00:15:19,819
get a picture of that to send to him

00:15:13,759 --> 00:15:21,350
thank you know as a frequent library

00:15:19,819 --> 00:15:24,019
perpetrator I wonder should I upload

00:15:21,350 --> 00:15:25,189
both s disks and wheels now yes you

00:15:24,019 --> 00:15:27,610
should definitely still be uploading

00:15:25,189 --> 00:15:29,809
Estes it will be a long time before

00:15:27,610 --> 00:15:32,689
everyone's installers are updated to

00:15:29,809 --> 00:15:34,519
support wheels so legacy is legacy and

00:15:32,689 --> 00:15:36,050
there's no downside to uploading both if

00:15:34,519 --> 00:15:37,550
something supports wheel it will use

00:15:36,050 --> 00:15:40,429
wheel and life will be great and

00:15:37,550 --> 00:15:43,670
otherwise you get status quo could be

00:15:40,429 --> 00:15:45,110
worse you mentioned that you're going to

00:15:43,670 --> 00:15:47,540
be doing some improvements to the Linux

00:15:45,110 --> 00:15:48,949
ABI tagging or can you give us any

00:15:47,540 --> 00:15:51,740
teasers about what that might look like

00:15:48,949 --> 00:15:53,990
is it going to be part of like 425 or is

00:15:51,740 --> 00:15:55,759
this just in the air at this point it's

00:15:53,990 --> 00:15:57,649
very much in the air there's a lot of

00:15:55,759 --> 00:15:59,869
competing discussions about how best to

00:15:57,649 --> 00:16:03,079
handle it and I don't feel qualified to

00:15:59,869 --> 00:16:04,399
report on those in my preparations for

00:16:03,079 --> 00:16:05,540
Python since like I said I'm one of the

00:16:04,399 --> 00:16:06,799
organizers I've been a little bit out of

00:16:05,540 --> 00:16:09,949
the man list for about two weeks now

00:16:06,799 --> 00:16:11,809
which is a long time these days which is

00:16:09,949 --> 00:16:15,110
pretty cool that it's that's a long time

00:16:11,809 --> 00:16:17,269
in the world of packaging now hi do you

00:16:15,110 --> 00:16:19,069
know if there are any plans for virtual

00:16:17,269 --> 00:16:21,170
and rapper to become part of the

00:16:19,069 --> 00:16:24,049
standard library I don't think so nor if

00:16:21,170 --> 00:16:26,509
I heard any desire expressed on the part

00:16:24,049 --> 00:16:27,939
of the virtual and rapper authors stuff

00:16:26,509 --> 00:16:30,379
ending up in the standard library

00:16:27,939 --> 00:16:33,110
drastically limits its ability to to

00:16:30,379 --> 00:16:34,579
change and evolve over time so it's it

00:16:33,110 --> 00:16:36,439
is a mixed blessing virtual

00:16:34,579 --> 00:16:38,329
unfortunately was sort of stable enough

00:16:36,439 --> 00:16:39,649
and did exactly one thing and we knew

00:16:38,329 --> 00:16:40,939
what that was so it's not really a big

00:16:39,649 --> 00:16:42,920
deal but virtual and rapper is

00:16:40,939 --> 00:16:45,860
definitely still growing so not sure

00:16:42,920 --> 00:16:49,160
that would really be dust so I just

00:16:45,860 --> 00:16:52,279
checked and Debian still has ensure pip

00:16:49,160 --> 00:16:55,790
disabled in 3.4 there 3.4 package do you

00:16:52,279 --> 00:16:59,420
know if there's plans to reinstate that

00:16:55,790 --> 00:17:02,480
there's a fix me comment but so Barry is

00:16:59,420 --> 00:17:04,429
waving his hand so so the I kind of

00:17:02,480 --> 00:17:06,919
glossed over this a little bit the deal

00:17:04,429 --> 00:17:09,380
is that the the end goal is that if you

00:17:06,919 --> 00:17:10,730
install Python 3.4 you get PIP ensure

00:17:09,380 --> 00:17:13,370
pip is the way that we are supporting

00:17:10,730 --> 00:17:15,329
that for our source distributions but

00:17:13,370 --> 00:17:16,919
the the actual path

00:17:15,329 --> 00:17:19,260
only specified that pit be available

00:17:16,919 --> 00:17:21,269
some of our distributors like debian and

00:17:19,260 --> 00:17:22,409
red hat would prefer to not use in sharp

00:17:21,269 --> 00:17:24,839
it because they want to continue to

00:17:22,409 --> 00:17:26,669
manage pit via their tooling so instead

00:17:24,839 --> 00:17:28,559
most of them are changing the python

00:17:26,669 --> 00:17:31,169
virtual package to depend on the actual

00:17:28,559 --> 00:17:32,880
python and on the pit package so that

00:17:31,169 --> 00:17:34,860
they can continue to like if they have

00:17:32,880 --> 00:17:36,240
to do security releases or certainly

00:17:34,860 --> 00:17:38,279
anyone that has to be a long-term

00:17:36,240 --> 00:17:40,769
support releases can continue to use

00:17:38,279 --> 00:17:42,960
their tooling for that but you can still

00:17:40,769 --> 00:17:46,080
if you install Python 324 and pip is not

00:17:42,960 --> 00:17:48,269
available and working it's a bug yeah

00:17:46,080 --> 00:17:49,740
there was one thing with that I don't

00:17:48,269 --> 00:17:51,899
know if it's been fixed but at least

00:17:49,740 --> 00:17:55,010
when you call it by VN it would fail

00:17:51,899 --> 00:17:57,929
because it couldn't find ensure pip

00:17:55,010 --> 00:18:02,789
there's an open debian bug on that great

00:17:57,929 --> 00:18:05,580
thank you two questions maybe out of my

00:18:02,789 --> 00:18:07,529
ignorance with Conda but as scientists

00:18:05,580 --> 00:18:09,360
at will's theoretically should solve the

00:18:07,529 --> 00:18:11,610
problem of distributing all the binary

00:18:09,360 --> 00:18:13,080
builds rights so your accent that oh

00:18:11,610 --> 00:18:15,570
this is primarily for scientific

00:18:13,080 --> 00:18:18,149
computing could you elaborate on this

00:18:15,570 --> 00:18:20,340
will we need Conda and what would be its

00:18:18,149 --> 00:18:22,320
role in this distribution business I

00:18:20,340 --> 00:18:24,630
would certainly love if Conda was no

00:18:22,320 --> 00:18:27,059
longer necessary but Conda does a lot

00:18:24,630 --> 00:18:30,360
more than just managing Python stuff

00:18:27,059 --> 00:18:32,519
it's really designed to be an install

00:18:30,360 --> 00:18:34,860
and workflow tool for scientists and

00:18:32,519 --> 00:18:37,200
number crunchers that don't want to know

00:18:34,860 --> 00:18:39,809
the details of what python packaging

00:18:37,200 --> 00:18:41,279
even is they just want to push a couple

00:18:39,809 --> 00:18:43,409
buttons and run something and they get

00:18:41,279 --> 00:18:44,940
an environment to do their computing I

00:18:43,409 --> 00:18:46,500
would certainly love this pip ends up

00:18:44,940 --> 00:18:48,029
being at that point but like I said

00:18:46,500 --> 00:18:50,940
Conda can also install stuff that's not

00:18:48,029 --> 00:18:52,590
Python related I think so I'm not sure

00:18:50,940 --> 00:18:53,909
that would really be in scope there's

00:18:52,590 --> 00:18:55,169
definitely been talk at some point for

00:18:53,909 --> 00:18:57,210
instance Conda runs its own metadata

00:18:55,169 --> 00:18:58,799
servers we would love to eventually

00:18:57,210 --> 00:19:00,450
merge that into warehouse so that it can

00:18:58,799 --> 00:19:03,059
be a single ecosystem even if it's to

00:19:00,450 --> 00:19:07,320
installer tools and they forgot my

00:19:03,059 --> 00:19:09,799
second question so thank you what would

00:19:07,320 --> 00:19:12,779
you recommend two holes private packages

00:19:09,799 --> 00:19:14,940
to host private packages instead of like

00:19:12,779 --> 00:19:17,730
pushing two pi PI it's def p i

00:19:14,940 --> 00:19:22,919
unequivocally it is the best tool by

00:19:17,730 --> 00:19:24,330
leaps and bounds ok thanks thank you

00:19:22,919 --> 00:19:27,450
very much we have a little time for

00:19:24,330 --> 00:19:31,260
questions going once going twice

00:19:27,450 --> 00:19:33,409
okay yep gone please join me in thank

00:19:31,260 --> 00:19:33,409

YouTube URL: https://www.youtube.com/watch?v=jOiAp3wtx18


