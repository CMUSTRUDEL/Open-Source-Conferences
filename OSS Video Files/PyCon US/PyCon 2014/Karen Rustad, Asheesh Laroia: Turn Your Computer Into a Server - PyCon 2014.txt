Title: Karen Rustad, Asheesh Laroia: Turn Your Computer Into a Server - PyCon 2014
Publication date: 2014-04-24
Playlist: PyCon 2014
Description: 
	Speakers: Karen Rustad, Asheesh Laroia

Learn how to let other people connect straight to your computer, so your Python web apps, email services, or anything else can be seen by the world. It starts simple, then explains when and how to use SimpleHTTPServer, ssh tunnels, Pagekite, and IPv6. You can use these tools for temporary connections, like sharing an in-progress demo, or for permanent connectivity for your home server.

Slides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides
Captions: 
	00:00:05,319 --> 00:00:10,820
hello hi we have a Karen and a she's

00:00:09,320 --> 00:00:12,860
here on stage and they'll talk to us

00:00:10,820 --> 00:00:19,940
about how to turn your computer into a

00:00:12,860 --> 00:00:24,380
server peace welcome why are you behind

00:00:19,940 --> 00:00:26,210
me okay alright hi I'm Karen I'm a

00:00:24,380 --> 00:00:28,640
freelance web developer based in

00:00:26,210 --> 00:00:31,220
Mountain View California hi I'm a shish

00:00:28,640 --> 00:00:32,180
I'm a security engineer at Eventbrite in

00:00:31,220 --> 00:00:33,230
San Francisco

00:00:32,180 --> 00:00:37,340
yeah I've been bright people in the

00:00:33,230 --> 00:00:39,020
middle yeah so this is turn your

00:00:37,340 --> 00:00:41,300
computer into the server it's an

00:00:39,020 --> 00:00:43,989
introductory level talk and we have

00:00:41,300 --> 00:00:46,040
three main goals for this talk that

00:00:43,989 --> 00:00:48,170
first by the end of it

00:00:46,040 --> 00:00:52,460
you have a basic understanding of

00:00:48,170 --> 00:00:54,230
computer networking you believe that if

00:00:52,460 --> 00:00:56,210
you have a computer that can access the

00:00:54,230 --> 00:00:58,059
internet you can run a server on it and

00:00:56,210 --> 00:01:00,410
you have some ideas for how to do so and

00:00:58,059 --> 00:01:03,350
finally you have faith that you can do

00:01:00,410 --> 00:01:04,550
this and not get immediately hacked or

00:01:03,350 --> 00:01:09,140
have your computer break or anything

00:01:04,550 --> 00:01:11,150
terribly awful bad happen so there are

00:01:09,140 --> 00:01:13,369
two parts of this talk the first part is

00:01:11,150 --> 00:01:17,110
about simple sharing sharing in progress

00:01:13,369 --> 00:01:20,330
work or files from your work computer

00:01:17,110 --> 00:01:23,060
either within a given network or across

00:01:20,330 --> 00:01:25,400
networks and part two we'll talk about

00:01:23,060 --> 00:01:27,229
home servers which is a case where you

00:01:25,400 --> 00:01:29,869
want it to be up basically all the time

00:01:27,229 --> 00:01:32,540
versus just one-off connections and

00:01:29,869 --> 00:01:36,290
these specific considerations associated

00:01:32,540 --> 00:01:39,079
with that use case so let's imagine a

00:01:36,290 --> 00:01:43,610
scenario you're building your first web

00:01:39,079 --> 00:01:45,740
application in let's say Django and you

00:01:43,610 --> 00:01:48,310
run your going through the tutorial you

00:01:45,740 --> 00:01:50,899
run the built-in web server command and

00:01:48,310 --> 00:02:00,200
the tutorial tell you to go to this

00:01:50,899 --> 00:02:02,899
localhost colon 8080 in fact you're so

00:02:00,200 --> 00:02:06,020
excited and I may or may not have done

00:02:02,899 --> 00:02:07,460
this myself you quickly copy and paste

00:02:06,020 --> 00:02:11,810
the link and send it to your roommate to

00:02:07,460 --> 00:02:14,180
show off your work of course you quickly

00:02:11,810 --> 00:02:16,340
realize this isn't going to work local

00:02:14,180 --> 00:02:16,870
host that only works on my computer it's

00:02:16,340 --> 00:02:20,290
not going

00:02:16,870 --> 00:02:22,180
to be seen by anybody else so okay well

00:02:20,290 --> 00:02:25,450
you get clever you're like well I know

00:02:22,180 --> 00:02:27,190
the name of my computer like and so I'll

00:02:25,450 --> 00:02:30,040
replace localhost with my computer at

00:02:27,190 --> 00:02:30,790
local in the URL and that's going to

00:02:30,040 --> 00:02:35,860
work right

00:02:30,790 --> 00:02:38,079
well not exactly and so your roommate

00:02:35,860 --> 00:02:40,780
still can't see your Django application

00:02:38,079 --> 00:02:42,489
that you wanted to show off to them so

00:02:40,780 --> 00:02:44,590
to figure out why that didn't work and

00:02:42,489 --> 00:02:47,110
how to fix it we're gonna look at a

00:02:44,590 --> 00:02:51,069
different tool for basic local sharing

00:02:47,110 --> 00:02:53,590
which is called simple HTTP server this

00:02:51,069 --> 00:02:55,390
is a module built into built-in comes

00:02:53,590 --> 00:02:57,579
with Python you have it on your computer

00:02:55,390 --> 00:03:01,299
if you have Python and the way that you

00:02:57,579 --> 00:03:03,400
use it is you go into a given directory

00:03:01,299 --> 00:03:05,530
you run this command and the files

00:03:03,400 --> 00:03:07,299
within that directory will be served by

00:03:05,530 --> 00:03:09,760
default on port 8000 you can specify the

00:03:07,299 --> 00:03:12,370
port and this is a really useful tool

00:03:09,760 --> 00:03:16,180
for viewing and sharing front-end

00:03:12,370 --> 00:03:19,299
projects HTML CSS JavaScript or basic

00:03:16,180 --> 00:03:21,910
file sharing and what's neat about it is

00:03:19,299 --> 00:03:26,019
it doesn't just work at localhost colon

00:03:21,910 --> 00:03:30,549
8080 v'n at my computer that local colon

00:03:26,019 --> 00:03:32,620
8000 so this works but the django

00:03:30,549 --> 00:03:34,150
built-ins server doesn't so let's

00:03:32,620 --> 00:03:36,760
compare the two and figure out how we

00:03:34,150 --> 00:03:40,510
can make the django built-in server act

00:03:36,760 --> 00:03:42,489
like this simple HTTP server so when we

00:03:40,510 --> 00:03:45,129
look at the log message that we get when

00:03:42,489 --> 00:03:51,069
we run the simple HTTP server we get

00:03:45,129 --> 00:03:54,459
serving HTTP ad on 0 dot 0 dot 0 to 0

00:03:51,069 --> 00:03:56,980
port 8000 and I don't really know what

00:03:54,459 --> 00:03:59,919
this 4 zeros thing but when I compare it

00:03:56,980 --> 00:04:01,989
to the Django log message that I get

00:03:59,919 --> 00:04:06,069
there's a bunch of stuff and it says

00:04:01,989 --> 00:04:09,609
it's serving at 127.0.0.1 it doesn't

00:04:06,069 --> 00:04:13,180
have 0.0.0.0 whatever that is well you

00:04:09,609 --> 00:04:15,190
might try something clever and in the

00:04:13,180 --> 00:04:16,299
run server command instead of just

00:04:15,190 --> 00:04:18,010
specifying the port

00:04:16,299 --> 00:04:20,410
you might try putting the four zero

00:04:18,010 --> 00:04:23,080
thing in front of it so it looks like

00:04:20,410 --> 00:04:24,490
this and in the log message you can see

00:04:23,080 --> 00:04:27,460
that it's no longer serving at one to

00:04:24,490 --> 00:04:30,760
seven it's serving at 0.0 that's 0

00:04:27,460 --> 00:04:32,890
that's 0 cool so once you do that

00:04:30,760 --> 00:04:34,860
you experiment you ask your roommate to

00:04:32,890 --> 00:04:36,970
try again at my computer at local and

00:04:34,860 --> 00:04:39,670
they see what you see they see your

00:04:36,970 --> 00:04:42,070
Gengo application that's pretty cool it

00:04:39,670 --> 00:04:45,370
works but we still don't know why or

00:04:42,070 --> 00:04:49,750
what 0.0.0.0 which I'm really sick of

00:04:45,370 --> 00:04:52,480
saying means so to explain we need to

00:04:49,750 --> 00:04:54,280
discuss a talk about a bit about how

00:04:52,480 --> 00:04:56,740
ports and interfaces work in computer

00:04:54,280 --> 00:04:59,170
networking you might already be familiar

00:04:56,740 --> 00:05:01,180
with ports might have heard them heard

00:04:59,170 --> 00:05:06,420
of them at least it's easy to

00:05:01,180 --> 00:05:06,420
conceptualize them as these gateways

00:05:07,590 --> 00:05:12,840
these entry ways into your computer

00:05:09,820 --> 00:05:16,660
they're numbered numbered 1 through over

00:05:12,840 --> 00:05:21,280
60,000 and so they're not all drawn here

00:05:16,660 --> 00:05:25,030
and different applications will listen

00:05:21,280 --> 00:05:27,460
or bind to different ports and so we

00:05:25,030 --> 00:05:30,100
know Django is listening to port 8000

00:05:27,460 --> 00:05:32,430
and so it's listening for requests to

00:05:30,100 --> 00:05:35,530
come in from outside the computer and

00:05:32,430 --> 00:05:37,480
sending responses more or less so that's

00:05:35,530 --> 00:05:39,400
sort of our basic model of what ports

00:05:37,480 --> 00:05:40,780
are the reality is actually a little bit

00:05:39,400 --> 00:05:43,870
more complicated because you don't just

00:05:40,780 --> 00:05:45,900
have ports you also have interfaces so

00:05:43,870 --> 00:05:49,840
it really looks more something like this

00:05:45,900 --> 00:05:52,780
these what an interface is is a way that

00:05:49,840 --> 00:05:55,210
your computer gets online so here this

00:05:52,780 --> 00:05:56,830
computer has three interfaces there's W

00:05:55,210 --> 00:05:59,500
land 2 which is your wireless card

00:05:56,830 --> 00:06:01,900
there's ETH one which is your Ethernet

00:05:59,500 --> 00:06:04,510
connection and then there's ello which

00:06:01,900 --> 00:06:06,130
is local loopback which is sort of a

00:06:04,510 --> 00:06:08,530
virtual interface you can't actually

00:06:06,130 --> 00:06:11,590
connect to it from outside it only works

00:06:08,530 --> 00:06:13,810
inside your computer and so each of

00:06:11,590 --> 00:06:17,110
these interfaces have their own Bank of

00:06:13,810 --> 00:06:20,440
ports you don't just have one port 8000

00:06:17,110 --> 00:06:22,090
you have in this case 3 you can see what

00:06:20,440 --> 00:06:23,860
interfaces your computer has and some

00:06:22,090 --> 00:06:26,410
information about them if you run the

00:06:23,860 --> 00:06:29,080
command ifconfig on the command line on

00:06:26,410 --> 00:06:30,790
most unix c systems and that will give

00:06:29,080 --> 00:06:35,800
you some useful information about your

00:06:30,790 --> 00:06:39,670
computer so we can see here that the

00:06:35,800 --> 00:06:41,710
reason why with the default django run

00:06:39,670 --> 00:06:42,860
server setup your roommate wasn't able

00:06:41,710 --> 00:06:45,289
to see it

00:06:42,860 --> 00:06:48,050
by default that only binds to port 8000

00:06:45,289 --> 00:06:50,479
on the local loopback interface what

00:06:48,050 --> 00:06:52,189
you're able to access via localhost but

00:06:50,479 --> 00:06:54,860
when your roommate tries their

00:06:52,189 --> 00:06:56,810
connecting over the Wi-Fi it's checking

00:06:54,860 --> 00:06:58,699
a completely different port 8000 and

00:06:56,810 --> 00:07:02,979
nothing's listening there so they're not

00:06:58,699 --> 00:07:06,979
able to connect what the 0.0.0.0

00:07:02,979 --> 00:07:09,349
shorthand means is bind to this port on

00:07:06,979 --> 00:07:13,069
all available interfaces and so Gengo

00:07:09,349 --> 00:07:15,620
does so and now you can connect over

00:07:13,069 --> 00:07:17,389
localhost and your roommate can connect

00:07:15,620 --> 00:07:18,939
over Wi-Fi and you had people connected

00:07:17,389 --> 00:07:25,009
on Ethernet they could get there -

00:07:18,939 --> 00:07:26,569
pretty cool so great we've accomplished

00:07:25,009 --> 00:07:29,000
our first goal we can show off our work

00:07:26,569 --> 00:07:30,529
and show off how awesome your django

00:07:29,000 --> 00:07:32,389
programming skills are to your roommate

00:07:30,529 --> 00:07:35,479
or anyone else who happens to be on the

00:07:32,389 --> 00:07:37,520
same network but we've lots of friends

00:07:35,479 --> 00:07:39,860
who don't live with us who don't share

00:07:37,520 --> 00:07:41,449
our Wi-Fi who are elsewhere on the

00:07:39,860 --> 00:07:44,779
internet that we also want to show off -

00:07:41,449 --> 00:07:47,389
and so we need different tools to be

00:07:44,779 --> 00:07:50,930
able to communicate with them in order

00:07:47,389 --> 00:07:52,759
to understand both to understand how to

00:07:50,930 --> 00:07:56,110
do this we need to first discuss IP

00:07:52,759 --> 00:07:58,490
addresses Internet Protocol addresses

00:07:56,110 --> 00:08:00,860
these are what are used for routing on

00:07:58,490 --> 00:08:03,710
the internet and there's two kinds the

00:08:00,860 --> 00:08:07,009
first is private IP addresses which

00:08:03,710 --> 00:08:08,930
exist within a given network so if we

00:08:07,009 --> 00:08:09,550
imagine that this is your network at

00:08:08,930 --> 00:08:11,719
home

00:08:09,550 --> 00:08:13,520
there's your Wi-Fi router and there's

00:08:11,719 --> 00:08:14,990
you and your roommate and then the

00:08:13,520 --> 00:08:17,900
router is standing between you and the

00:08:14,990 --> 00:08:20,300
rest of the Internet private IP

00:08:17,900 --> 00:08:24,099
addresses only apply on the left side of

00:08:20,300 --> 00:08:24,099
the diagram between you and the router

00:08:24,520 --> 00:08:30,740
certain IP address blocks are assigned

00:08:27,289 --> 00:08:32,409
to be private ID private addresses so if

00:08:30,740 --> 00:08:37,510
you see an address that starts with

00:08:32,409 --> 00:08:40,190
192.168 or was a 172 dot some stuff or

00:08:37,510 --> 00:08:41,719
10 dot stuff that means you're looking

00:08:40,190 --> 00:08:44,600
at a private address not a public

00:08:41,719 --> 00:08:47,089
address and you can find out what your

00:08:44,600 --> 00:08:47,750
computer's private IP address enum is a

00:08:47,089 --> 00:08:50,990
number of ways

00:08:47,750 --> 00:08:54,829
if config will tell you for one another

00:08:50,990 --> 00:08:56,720
way is using our simple HTTP server that

00:08:54,829 --> 00:09:00,319
we were doing before when you run it

00:08:56,720 --> 00:09:02,389
and you access it over localhost

00:09:00,319 --> 00:09:04,189
when you look at the log message in the

00:09:02,389 --> 00:09:06,819
terminal window you'll see one thing

00:09:04,189 --> 00:09:10,639
you'll see a connection from 127.0.0.1

00:09:06,819 --> 00:09:12,470
from localhost but when you connect over

00:09:10,639 --> 00:09:14,360
my computer dot local instead you'll see

00:09:12,470 --> 00:09:16,879
something else in the logs you'll see

00:09:14,360 --> 00:09:19,129
one seven two in this case dot two seven

00:09:16,879 --> 00:09:20,930
zero at 14 and that is your private IP

00:09:19,129 --> 00:09:23,839
address on the network you're currently

00:09:20,930 --> 00:09:25,250
connected to so that's pretty cool and

00:09:23,839 --> 00:09:26,990
that means that you could see your

00:09:25,250 --> 00:09:29,509
roommates private IP address too if they

00:09:26,990 --> 00:09:31,339
connect over the service you'll see a

00:09:29,509 --> 00:09:34,990
different IP address belonging to your

00:09:31,339 --> 00:09:34,990
roommate show up there

00:09:35,600 --> 00:09:39,920
yeah so that's private IP addresses

00:09:37,699 --> 00:09:42,800
thanks Karen I want to talk a little bit

00:09:39,920 --> 00:09:44,600
about public services so websites like

00:09:42,800 --> 00:09:46,519
Eventbrite we don't just want to be

00:09:44,600 --> 00:09:48,100
available inside the office we want them

00:09:46,519 --> 00:09:50,060
to be reachable from all over the world

00:09:48,100 --> 00:09:51,379
presumably same with the kind of

00:09:50,060 --> 00:09:53,990
websites that you guys want to work on

00:09:51,379 --> 00:09:56,240
also and to make that happen you need to

00:09:53,990 --> 00:09:58,069
talk up we need to talk about public IP

00:09:56,240 --> 00:10:00,670
addresses which are IP addresses that

00:09:58,069 --> 00:10:03,829
will route from anywhere on the internet

00:10:00,670 --> 00:10:06,470
so Karin mentioned that IP addresses are

00:10:03,829 --> 00:10:09,079
what the internet routes messages based

00:10:06,470 --> 00:10:10,910
on which means that if you type in

00:10:09,079 --> 00:10:13,339
something like google.com into your

00:10:10,910 --> 00:10:17,059
browser then your browser has to first

00:10:13,339 --> 00:10:18,589
look up what the address is of lucam so

00:10:17,059 --> 00:10:20,209
that it can send a message to Google and

00:10:18,589 --> 00:10:22,009
have the web conversation to show you

00:10:20,209 --> 00:10:24,319
the webpage and I'll show you what that

00:10:22,009 --> 00:10:26,120
looks like through a few cartoons and I

00:10:24,319 --> 00:10:27,829
think that Lin root just gave a talk

00:10:26,120 --> 00:10:30,800
about DNS this is gonna be much shorter

00:10:27,829 --> 00:10:32,600
than hers but therefore you probably

00:10:30,800 --> 00:10:35,720
want to look at hers in the videos if

00:10:32,600 --> 00:10:37,879
you haven't so briefly when you want to

00:10:35,720 --> 00:10:39,920
visit google.com you browser sends a

00:10:37,879 --> 00:10:41,949
message to your home router and it says

00:10:39,920 --> 00:10:45,110
hey what is the address for google.com

00:10:41,949 --> 00:10:47,120
your router may have it stored may have

00:10:45,110 --> 00:10:49,040
a the answer cached locally

00:10:47,120 --> 00:10:51,199
maybe you've looked this up recently or

00:10:49,040 --> 00:10:53,089
maybe this is an address that is based

00:10:51,199 --> 00:10:55,279
inside your home network and so it's

00:10:53,089 --> 00:10:57,589
sort of authoritative for the answer if

00:10:55,279 --> 00:10:59,509
not then it passes that request along to

00:10:57,589 --> 00:11:00,860
the global DNS service one of these

00:10:59,509 --> 00:11:02,589
servers might be Google's one of these

00:11:00,860 --> 00:11:05,269
servers might belong to your ISP

00:11:02,589 --> 00:11:08,360
eventually an answer comes back which

00:11:05,269 --> 00:11:11,510
looks like this and your router then

00:11:08,360 --> 00:11:13,790
passes that along to you so now your

00:11:11,510 --> 00:11:17,840
well the address is for google.com so

00:11:13,790 --> 00:11:19,640
they can then send a message there but

00:11:17,840 --> 00:11:21,830
what if you just type this IP address

00:11:19,640 --> 00:11:24,890
into your address bar will it route to

00:11:21,830 --> 00:11:27,440
Google here's a URL with that set up and

00:11:24,890 --> 00:11:30,020
it turns out if you visit this yes you

00:11:27,440 --> 00:11:32,270
get the Google home page this IP address

00:11:30,020 --> 00:11:36,520
is just interchangeable for that name in

00:11:32,270 --> 00:11:38,920
terms of how the packet gets there so

00:11:36,520 --> 00:11:41,300
that's great

00:11:38,920 --> 00:11:43,520
this means that you can route packets to

00:11:41,300 --> 00:11:45,050
computers based on names and if you

00:11:43,520 --> 00:11:46,910
happen to want to look up a computer

00:11:45,050 --> 00:11:49,430
based on its name you can use a command

00:11:46,910 --> 00:11:51,290
line tool called host which you can

00:11:49,430 --> 00:11:53,630
query for some particular name like

00:11:51,290 --> 00:12:03,040
google.com and it will tell you what

00:11:53,630 --> 00:12:06,530
address corresponds to that so all right

00:12:03,040 --> 00:12:08,690
so we've seen real websites have public

00:12:06,530 --> 00:12:10,790
IP addresses at least one public IP

00:12:08,690 --> 00:12:12,560
address is standing up for any website

00:12:10,790 --> 00:12:15,140
or web service that you're able to

00:12:12,560 --> 00:12:18,050
access over the wider Internet but your

00:12:15,140 --> 00:12:20,480
computer your laptop almost certainly

00:12:18,050 --> 00:12:21,890
doesn't have a public IP address and yet

00:12:20,480 --> 00:12:23,330
your computer is still able to

00:12:21,890 --> 00:12:25,520
communicate with the rest the Internet

00:12:23,330 --> 00:12:27,650
it's able to do so because of a trick

00:12:25,520 --> 00:12:31,640
that your router does called network

00:12:27,650 --> 00:12:33,110
address translation or NAT and so the

00:12:31,640 --> 00:12:35,060
way this works going back to this

00:12:33,110 --> 00:12:36,890
diagram here's your network and your

00:12:35,060 --> 00:12:38,540
router is standing between the machines

00:12:36,890 --> 00:12:41,090
on your local network and the rest of

00:12:38,540 --> 00:12:42,980
the internet an important thing that

00:12:41,090 --> 00:12:45,410
your router needs to do is to keep track

00:12:42,980 --> 00:12:47,270
of whose traffic is whose you don't want

00:12:45,410 --> 00:12:49,630
your router sending the packets you

00:12:47,270 --> 00:12:53,180
requested to your roommate or vice versa

00:12:49,630 --> 00:12:55,010
the way that your router does this is so

00:12:53,180 --> 00:12:56,750
let's look at a request you're sending a

00:12:55,010 --> 00:12:59,450
packet to a website somewhere on the

00:12:56,750 --> 00:13:02,810
internet looks something like this

00:12:59,450 --> 00:13:05,450
there's among other metadata there is a

00:13:02,810 --> 00:13:09,470
to address and a from address the to

00:13:05,450 --> 00:13:11,780
address is the public IP address of the

00:13:09,470 --> 00:13:14,720
website you're trying to access it ends

00:13:11,780 --> 00:13:17,780
in a port colon 80 which is the default

00:13:14,720 --> 00:13:20,540
port for web services and the from

00:13:17,780 --> 00:13:23,060
address is your private IP address colon

00:13:20,540 --> 00:13:24,270
some arbitrary port which computer

00:13:23,060 --> 00:13:26,850
picked out for this

00:13:24,270 --> 00:13:28,950
particular TCP connection the details of

00:13:26,850 --> 00:13:30,360
that aren't important just that this

00:13:28,950 --> 00:13:34,620
particular connection has a particular

00:13:30,360 --> 00:13:37,350
port so you send that to your router the

00:13:34,620 --> 00:13:38,959
router looks at the packet and takes the

00:13:37,350 --> 00:13:43,170
from address that you gave it and

00:13:38,959 --> 00:13:45,690
assigns it to a random unused port

00:13:43,170 --> 00:13:48,180
number more or less random and stores

00:13:45,690 --> 00:13:50,160
that in the NAT table which is stored in

00:13:48,180 --> 00:13:54,750
your router so here we were assigned

00:13:50,160 --> 00:13:58,940
this port number for 443 after does this

00:13:54,750 --> 00:14:01,440
it defaces your packet rewrites it

00:13:58,940 --> 00:14:04,290
removes the original from address and

00:14:01,440 --> 00:14:08,160
instead writes the routers public IP

00:14:04,290 --> 00:14:11,160
address : this port that it just

00:14:08,160 --> 00:14:13,410
assigned you after it takes your poor

00:14:11,160 --> 00:14:15,480
defaced packet it sends it along to the

00:14:13,410 --> 00:14:18,570
rest the internet hopefully eventually

00:14:15,480 --> 00:14:21,209
you get a response back and of course

00:14:18,570 --> 00:14:23,160
this response isn't obviously sent to

00:14:21,209 --> 00:14:24,930
you it's sent to your router as public

00:14:23,160 --> 00:14:26,580
IP address and there might have been a

00:14:24,930 --> 00:14:28,230
lot of requests between when this was

00:14:26,580 --> 00:14:30,029
sent and when your router gets the

00:14:28,230 --> 00:14:31,380
response and so your router needs to

00:14:30,029 --> 00:14:33,810
figure out well where is this packet

00:14:31,380 --> 00:14:38,459
supposed to ultimately go does this by

00:14:33,810 --> 00:14:41,279
again looking in the NAT table based on

00:14:38,459 --> 00:14:43,020
the port number and oh hey for 443 is

00:14:41,279 --> 00:14:46,110
here and it corresponds with this

00:14:43,020 --> 00:14:48,959
private IP address it rewrites the

00:14:46,110 --> 00:14:52,649
packet again to give it your private IP

00:14:48,959 --> 00:14:54,089
and sends it along to you and so this is

00:14:52,649 --> 00:14:56,339
happening each time you're making

00:14:54,089 --> 00:14:57,450
requests over the network and as far as

00:14:56,339 --> 00:14:59,339
you can tell you're seamlessly

00:14:57,450 --> 00:15:01,320
connecting with Google even though the

00:14:59,339 --> 00:15:04,890
packets are getting changed back and

00:15:01,320 --> 00:15:07,079
forth by your router so that's pretty

00:15:04,890 --> 00:15:09,570
useful um the good thing about it is it

00:15:07,079 --> 00:15:11,670
means multiple devices can share one

00:15:09,570 --> 00:15:14,370
public IP address so if you don't have

00:15:11,670 --> 00:15:16,350
enough public IP addresses you can still

00:15:14,370 --> 00:15:18,630
get on lines which is pretty neat

00:15:16,350 --> 00:15:20,850
I like being online the bad thing about

00:15:18,630 --> 00:15:22,500
it is it makes it hard for people

00:15:20,850 --> 00:15:23,880
outside your network to reach you

00:15:22,500 --> 00:15:26,880
because you don't have a globally

00:15:23,880 --> 00:15:28,860
accessible address your routers just

00:15:26,880 --> 00:15:30,510
like I don't know where this goes you

00:15:28,860 --> 00:15:33,420
can contact your router but you can't

00:15:30,510 --> 00:15:37,470
contact computers within the route the

00:15:33,420 --> 00:15:38,670
network that the router controls so

00:15:37,470 --> 00:15:39,840
we still want to share outside the

00:15:38,670 --> 00:15:41,130
network even though we have this

00:15:39,840 --> 00:15:43,140
difficulty we need to get around this

00:15:41,130 --> 00:15:44,610
issue and there's several ways to do so

00:15:43,140 --> 00:15:50,730
the first one we're going to talk about

00:15:44,610 --> 00:15:51,770
is SSH tunneling SSH is a protocol you

00:15:50,730 --> 00:15:54,270
may have heard of it's a cryptographic

00:15:51,770 --> 00:15:55,650
protocol that does a lot of things the

00:15:54,270 --> 00:15:58,470
thing that we're doing with it is called

00:15:55,650 --> 00:16:00,330
remote port forwarding and so in order

00:15:58,470 --> 00:16:03,300
to do this the first thing you need is

00:16:00,330 --> 00:16:05,370
access to a computer somewhere that does

00:16:03,300 --> 00:16:08,100
have a public IP address and there's

00:16:05,370 --> 00:16:11,790
many ways to get access you might have a

00:16:08,100 --> 00:16:15,240
university account that has such access

00:16:11,790 --> 00:16:16,800
or Ally node or Amazon ec2 account or

00:16:15,240 --> 00:16:19,410
just a friend with a server who's

00:16:16,800 --> 00:16:22,020
willing to give us SH access once you

00:16:19,410 --> 00:16:24,720
have this you connect to the remote

00:16:22,020 --> 00:16:26,400
machine via SSH this works like any

00:16:24,720 --> 00:16:29,850
other internet connection even if there

00:16:26,400 --> 00:16:32,220
happens to be NAT in the middle the

00:16:29,850 --> 00:16:33,900
protocol also connects whatever port

00:16:32,220 --> 00:16:35,610
it's using for the connection with the

00:16:33,900 --> 00:16:37,440
port that your application is running on

00:16:35,610 --> 00:16:40,620
that you specify so our application is

00:16:37,440 --> 00:16:41,880
running on port 8000 so we're making

00:16:40,620 --> 00:16:44,370
sure to pay attention to it and

00:16:41,880 --> 00:16:46,020
similarly we pick out a port that's

00:16:44,370 --> 00:16:50,750
currently being unused on the other

00:16:46,020 --> 00:16:53,640
machine in this case port 9999 and

00:16:50,750 --> 00:16:56,070
connected there as well and once we've

00:16:53,640 --> 00:16:58,440
done this then people anywhere on the

00:16:56,070 --> 00:17:00,690
internet can connect to the remote

00:16:58,440 --> 00:17:03,270
machines IP address or its domain name

00:17:00,690 --> 00:17:06,180
if it has one and on that chosen port

00:17:03,270 --> 00:17:09,770
then that requests will get sent through

00:17:06,180 --> 00:17:11,699
the SSH tunnel to your laptop and

00:17:09,770 --> 00:17:16,439
responses back we'll go back the same

00:17:11,699 --> 00:17:17,579
way the indentation on the command line

00:17:16,439 --> 00:17:21,449
that does all this looks something like

00:17:17,579 --> 00:17:24,480
this - our beans do forwarding of

00:17:21,449 --> 00:17:26,189
traffic - G means Gateway ports it means

00:17:24,480 --> 00:17:28,800
use all interfaces not just local

00:17:26,189 --> 00:17:30,690
loopback and then the arguments we have

00:17:28,800 --> 00:17:32,490
first the port on the remote machine

00:17:30,690 --> 00:17:33,710
that we want to use where stuff was

00:17:32,490 --> 00:17:36,330
going to be accessible

00:17:33,710 --> 00:17:37,650
what interface port combination that we

00:17:36,330 --> 00:17:40,170
want to be connecting on your local

00:17:37,650 --> 00:17:42,060
machine and finally the IP address or

00:17:40,170 --> 00:17:45,300
domain name for the remote machine that

00:17:42,060 --> 00:17:47,670
you're connecting to so great we've got

00:17:45,300 --> 00:17:48,350
this URL we can send it to all of our

00:17:47,670 --> 00:17:50,390
friends

00:17:48,350 --> 00:17:53,030
and they're going to be able to access

00:17:50,390 --> 00:17:55,850
an application that's running on just

00:17:53,030 --> 00:17:59,030
your laptop even behind that all you

00:17:55,850 --> 00:18:01,340
need to have this access to anywhere on

00:17:59,030 --> 00:18:03,020
the web is money to pay for a remote

00:18:01,340 --> 00:18:07,730
server or a friend who's willing to give

00:18:03,020 --> 00:18:10,820
us SH access so that works great if you

00:18:07,730 --> 00:18:12,530
have friends money or SSH access but I

00:18:10,820 --> 00:18:17,480
want to tell you that life can be okay

00:18:12,530 --> 00:18:21,970
even if you have none of those I do

00:18:17,480 --> 00:18:21,970
notice I'm not super on the Wi-Fi hmm

00:18:22,299 --> 00:18:28,520
we'll see about my demo okay so there

00:18:26,690 --> 00:18:30,559
are a couple of services on the net that

00:18:28,520 --> 00:18:33,140
are willing to act as relays for you in

00:18:30,559 --> 00:18:37,520
the way like Karen described they are in

00:18:33,140 --> 00:18:39,020
rock and pagekite and rock is designed

00:18:37,520 --> 00:18:41,600
to help you debug your applications

00:18:39,020 --> 00:18:44,600
anyone can set up whatever domain they

00:18:41,600 --> 00:18:46,010
want dot and guru calm an end rock had

00:18:44,600 --> 00:18:48,110
the tunnel client that they can use that

00:18:46,010 --> 00:18:50,960
you can use kind of like the SSH client

00:18:48,110 --> 00:18:53,150
we saw in Karen's example pagekite is

00:18:50,960 --> 00:18:54,980
free for open source developers like

00:18:53,150 --> 00:18:58,130
five dollars a month or something for

00:18:54,980 --> 00:19:00,679
everyone else and there they have a sort

00:18:58,130 --> 00:19:02,690
of freedom and privacy vent but both of

00:19:00,679 --> 00:19:04,520
these anyway our services that you can

00:19:02,690 --> 00:19:06,260
that we're willing to broker a tunnel

00:19:04,520 --> 00:19:08,030
for you and you can borrow a subdomain

00:19:06,260 --> 00:19:11,690
from them and it'll put your website

00:19:08,030 --> 00:19:13,580
online and if I were online now I would

00:19:11,690 --> 00:19:14,720
tell you all to go to this URL if any of

00:19:13,580 --> 00:19:16,309
you have your computer's open and you

00:19:14,720 --> 00:19:18,380
are online and you go there actually

00:19:16,309 --> 00:19:20,780
you'll see a message from anga rock that

00:19:18,380 --> 00:19:24,500
says the tunnel is down it's kiss the

00:19:20,780 --> 00:19:25,700
Wi-Fi is down here sorry ah but I do

00:19:24,500 --> 00:19:27,289
have a django app running on this

00:19:25,700 --> 00:19:30,770
machine and I'm happy to show you this

00:19:27,289 --> 00:19:36,289
oh whoa it is working okay great so you

00:19:30,770 --> 00:19:40,250
can in fact go to this okay sure what if

00:19:36,289 --> 00:19:42,650
I go to it oh okay nevermind great so we

00:19:40,250 --> 00:19:47,240
have this great Django app my apologies

00:19:42,650 --> 00:19:50,419
for my own stress Nate on e Shimon Drori

00:19:47,240 --> 00:19:52,309
and Tony abu-salha have taken the django

00:19:50,419 --> 00:19:54,020
tutorial added a few images and put it

00:19:52,309 --> 00:19:56,330
into the git repo I'm just running that

00:19:54,020 --> 00:19:59,900
here this is a basic pols app you can go

00:19:56,330 --> 00:20:02,840
in and view the existing polls you can

00:19:59,900 --> 00:20:05,269
wonder which is the most awesome

00:20:02,840 --> 00:20:06,979
didn't it used to say Jenko it did did

00:20:05,269 --> 00:20:09,619
somebody break into our admin nice work

00:20:06,979 --> 00:20:12,379
Luke of course they did right so in that

00:20:09,619 --> 00:20:15,559
case I guess lulz are better than any of

00:20:12,379 --> 00:20:21,139
these and we'll vote so I'm glad you all

00:20:15,559 --> 00:20:23,059
agree but crucially crucially this

00:20:21,139 --> 00:20:29,570
website will talk about security soon

00:20:23,059 --> 00:20:34,849
look crucially refresh now I'm afraid to

00:20:29,570 --> 00:20:36,320
so I won't anyway Luke Luke here has

00:20:34,849 --> 00:20:38,450
demonstrated that you can connect to

00:20:36,320 --> 00:20:40,700
this laptop running right here the

00:20:38,450 --> 00:20:42,619
website even though it says PI kangaroo

00:20:40,700 --> 00:20:49,279
comm and the address bar is actually

00:20:42,619 --> 00:20:57,559
hosted on my laptop here and for a while

00:20:49,279 --> 00:21:00,919
I thought this seemed think yeah okay

00:20:57,559 --> 00:21:03,229
cool yeah so anyway in the 90s ah I've

00:21:00,919 --> 00:21:05,899
read this fake news article by a fake

00:21:03,229 --> 00:21:08,029
person in a fake MIT news magazine about

00:21:05,899 --> 00:21:10,940
the coming end of addresses on the

00:21:08,029 --> 00:21:13,009
internet and I thought this is a pretty

00:21:10,940 --> 00:21:15,080
funny thing and this article hinges on

00:21:13,009 --> 00:21:18,440
this idea that light fixtures will soon

00:21:15,080 --> 00:21:19,789
have IP addresses yeah right but then

00:21:18,440 --> 00:21:22,190
last year I went to a friend's apartment

00:21:19,789 --> 00:21:24,559
and what I found was a Philips hue set

00:21:22,190 --> 00:21:26,869
you can buy this for $200 at the Apple

00:21:24,559 --> 00:21:28,700
store they're rigged trade Retd four out

00:21:26,869 --> 00:21:31,789
of five people seem to like them and

00:21:28,700 --> 00:21:34,219
they are internet address bull light

00:21:31,789 --> 00:21:36,019
fixtures so it turns out that we are

00:21:34,219 --> 00:21:39,139
really going to run out of IP version 4

00:21:36,019 --> 00:21:40,759
addresses there aren't enough addresses

00:21:39,139 --> 00:21:42,259
to go around for all the light bulbs and

00:21:40,759 --> 00:21:44,809
all the mobile phones in the world in

00:21:42,259 --> 00:21:48,049
particular there's at least 6 billion

00:21:44,809 --> 00:21:50,269
mobile phones currently deployed and we

00:21:48,049 --> 00:21:52,399
don't have that many IP addresses IP

00:21:50,269 --> 00:21:53,839
version 4 which is the current most

00:21:52,399 --> 00:21:56,450
widely used version of the Internet

00:21:53,839 --> 00:21:58,249
Protocol gives you 32 bits for an IP

00:21:56,450 --> 00:22:00,889
address which means that there can be at

00:21:58,249 --> 00:22:02,809
most two to 32 or about 4 billion

00:22:00,889 --> 00:22:05,389
addresses fewer than the number of

00:22:02,809 --> 00:22:07,159
mobile phones but luckily also in the

00:22:05,389 --> 00:22:09,349
90s perhaps related to that article that

00:22:07,159 --> 00:22:11,479
I read they invented a new version of

00:22:09,349 --> 00:22:13,549
the Internet Protocol IP version 6 and

00:22:11,479 --> 00:22:15,320
the addresses are so long that they

00:22:13,549 --> 00:22:15,970
won't fit on the screen there are a

00:22:15,320 --> 00:22:18,970
hundred 20

00:22:15,970 --> 00:22:21,100
it's long.they there are more IP version

00:22:18,970 --> 00:22:23,200
6 addresses than there are protons

00:22:21,100 --> 00:22:24,940
electrons neutrons particles in the

00:22:23,200 --> 00:22:29,470
universe so hopefully we're not gonna

00:22:24,940 --> 00:22:31,000
run out this time and this of course

00:22:29,470 --> 00:22:34,300
means that there's a next generation

00:22:31,000 --> 00:22:36,460
transition that has to happen now we're

00:22:34,300 --> 00:22:39,190
Python people here were very familiar

00:22:36,460 --> 00:22:40,840
with next generation transitions that

00:22:39,190 --> 00:22:43,840
require backwards incompatible changes

00:22:40,840 --> 00:22:45,700
and asking everyone to change their apps

00:22:43,840 --> 00:22:49,300
so that they work according to the new

00:22:45,700 --> 00:22:53,110
standards and IP version 6 has had at

00:22:49,300 --> 00:22:55,560
least as much success as Python 3 so a

00:22:53,110 --> 00:22:58,450
year a little over a year and a half ago

00:22:55,560 --> 00:23:01,450
14 years after the release of IP version

00:22:58,450 --> 00:23:02,980
6 a quarter of a percent of all the

00:23:01,450 --> 00:23:04,240
traffic to Google's web services were

00:23:02,980 --> 00:23:08,080
over IP version 6

00:23:04,240 --> 00:23:10,300
not that many it's Alex Gaynor and no

00:23:08,080 --> 00:23:13,900
okay what okay right well I think that

00:23:10,300 --> 00:23:16,960
he found that recently Python 3 accounts

00:23:13,900 --> 00:23:18,760
for about 1% a year or so ago IP version

00:23:16,960 --> 00:23:20,920
6 accounted for about 1% of Internet

00:23:18,760 --> 00:23:24,160
traffic but IP version 6 is he doing

00:23:20,920 --> 00:23:27,700
even better now we're up to a tenth of a

00:23:24,160 --> 00:23:29,530
quarter of the Internet but the nice

00:23:27,700 --> 00:23:32,320
thing is this this uptick is increasing

00:23:29,530 --> 00:23:34,810
and if you don't believe me I'll show

00:23:32,320 --> 00:23:36,100
you this graph from Google you can look

00:23:34,810 --> 00:23:37,120
this up yourselves but I'm not just

00:23:36,100 --> 00:23:40,510
making these up these are really

00:23:37,120 --> 00:23:42,460
Google's numbers so I'm not here just to

00:23:40,510 --> 00:23:44,710
tell you about IP version 6 because I

00:23:42,460 --> 00:23:46,600
love it so very much I'm here to tell

00:23:44,710 --> 00:23:49,120
you about it because of what it means

00:23:46,600 --> 00:23:50,380
for getting your computer online what

00:23:49,120 --> 00:23:52,390
we've talked about with these tunneling

00:23:50,380 --> 00:23:54,640
services you have to borrow a port or a

00:23:52,390 --> 00:23:57,250
hostname from somebody from a friend on

00:23:54,640 --> 00:23:59,230
the internet from Angra com assuming

00:23:57,250 --> 00:24:01,620
they're online and they do this

00:23:59,230 --> 00:24:03,940
complicated complicated rewriting trick

00:24:01,620 --> 00:24:05,590
but the way the internet was supposed to

00:24:03,940 --> 00:24:07,690
work is you just show up plug your

00:24:05,590 --> 00:24:10,030
computer in you get handed an address

00:24:07,690 --> 00:24:11,710
and then whatever service is you're

00:24:10,030 --> 00:24:14,440
running are just available to the entire

00:24:11,710 --> 00:24:17,230
Internet and since IP version 6 has so

00:24:14,440 --> 00:24:19,000
many addresses most obvious those

00:24:17,230 --> 00:24:20,980
addresses are public which means if you

00:24:19,000 --> 00:24:23,440
can find your way to getting a v6

00:24:20,980 --> 00:24:24,850
address right now anyone else who's on

00:24:23,440 --> 00:24:26,440
the version 6 network can beat you

00:24:24,850 --> 00:24:28,960
directly without bothering with any

00:24:26,440 --> 00:24:29,740
tunnels and there are a few services

00:24:28,960 --> 00:24:32,020
that will let you do

00:24:29,740 --> 00:24:33,870
without asking for permission my

00:24:32,020 --> 00:24:37,240
favorite of those is one called Mira doe

00:24:33,870 --> 00:24:39,400
Mira dough and it's protocol called

00:24:37,240 --> 00:24:40,780
Terra dough are supported on Windows and

00:24:39,400 --> 00:24:43,270
Linux systems and I think there's a Mac

00:24:40,780 --> 00:24:44,950
port these let you even if you're behind

00:24:43,270 --> 00:24:46,780
some network address translation box

00:24:44,950 --> 00:24:48,880
sort of bite your way into getting a

00:24:46,780 --> 00:24:50,740
version 6 address on your computer and

00:24:48,880 --> 00:24:52,780
it's from that point forward any

00:24:50,740 --> 00:24:55,000
services listening on that version 6

00:24:52,780 --> 00:24:57,370
virtual interface on your computer are

00:24:55,000 --> 00:25:00,220
accessible globally without you having

00:24:57,370 --> 00:25:03,820
to get specific permission or proxying

00:25:00,220 --> 00:25:08,230
for any particular service so I'll take

00:25:03,820 --> 00:25:10,120
pass it back to you so we've covered a

00:25:08,230 --> 00:25:13,270
bunch of different ways that you can

00:25:10,120 --> 00:25:15,220
share applications or files on your

00:25:13,270 --> 00:25:20,020
laptop with people anywhere in the world

00:25:15,220 --> 00:25:21,460
or within your network usually in use

00:25:20,020 --> 00:25:22,929
cases where it's just for a limited time

00:25:21,460 --> 00:25:25,420
you want to get feedback on something

00:25:22,929 --> 00:25:27,610
you made or you just want to show off

00:25:25,420 --> 00:25:31,000
so that's part one of this talk part 2

00:25:27,610 --> 00:25:32,650
of this talk is about the specific

00:25:31,000 --> 00:25:34,270
considerations for if you actually want

00:25:32,650 --> 00:25:36,640
to run a machine that's hosting

00:25:34,270 --> 00:25:41,320
something full-time from home so and

00:25:36,640 --> 00:25:43,570
always up caveats server so like

00:25:41,320 --> 00:25:45,610
computer ownership in general assisted

00:25:43,570 --> 00:25:48,160
mitting a home server is sometimes fun

00:25:45,610 --> 00:25:52,150
and exciting sometimes things break

00:25:48,160 --> 00:25:56,350
sometimes things crash hopefully your

00:25:52,150 --> 00:25:58,360
server never looks like this this but

00:25:56,350 --> 00:26:00,640
there are some reasons why maintaining a

00:25:58,360 --> 00:26:01,870
home server and having a dedicated

00:26:00,640 --> 00:26:05,559
machine for this sort of thing may be

00:26:01,870 --> 00:26:06,700
worth it for you so one thing that you

00:26:05,559 --> 00:26:08,679
can do with the home server is home

00:26:06,700 --> 00:26:10,780
automation so maybe you've got a

00:26:08,679 --> 00:26:13,240
Raspberry Pi at last year's PyCon and

00:26:10,780 --> 00:26:16,360
you're excited about turning your lights

00:26:13,240 --> 00:26:17,890
on and off or you have sensors and you

00:26:16,360 --> 00:26:19,720
want to track you the temperature and

00:26:17,890 --> 00:26:21,100
humidity in your house or any number of

00:26:19,720 --> 00:26:22,690
other things and you want to be able to

00:26:21,100 --> 00:26:24,100
access that information not just when

00:26:22,690 --> 00:26:26,740
you're already at home and you can see

00:26:24,100 --> 00:26:28,720
that the lights are on but when you're

00:26:26,740 --> 00:26:30,910
elsewhere and so if you're going to do

00:26:28,720 --> 00:26:33,910
that having a machine that you can

00:26:30,910 --> 00:26:38,020
contact from outside your home all the

00:26:33,910 --> 00:26:39,730
time is really useful you've got this

00:26:38,020 --> 00:26:41,380
Jenko application and it does something

00:26:39,730 --> 00:26:43,830
useful for you and you want to run it

00:26:41,380 --> 00:26:47,010
all the time simple as that

00:26:43,830 --> 00:26:49,530
or there's services that we often use

00:26:47,010 --> 00:26:51,120
hosted by other people but you may want

00:26:49,530 --> 00:26:53,430
to host them yourself for a variety of

00:26:51,120 --> 00:26:55,320
reasons increased control increased

00:26:53,430 --> 00:26:58,320
privacy in the current regulatory

00:26:55,320 --> 00:26:59,790
environment it's a lot harder for your

00:26:58,320 --> 00:27:03,750
emails to get snooped if they're

00:26:59,790 --> 00:27:06,630
literally in your house and similarly

00:27:03,750 --> 00:27:10,410
you can run your own web services at

00:27:06,630 --> 00:27:13,890
home so your bookmarks your RSS notes

00:27:10,410 --> 00:27:15,600
photos music all sorts of things and we

00:27:13,890 --> 00:27:17,280
have a variety of examples of services

00:27:15,600 --> 00:27:19,110
that you can host yourself that are

00:27:17,280 --> 00:27:21,330
open-source for those sorts of

00:27:19,110 --> 00:27:23,550
applications and the added benefit with

00:27:21,330 --> 00:27:25,650
those is not just increased privacy and

00:27:23,550 --> 00:27:26,640
control specifically you don't have to

00:27:25,650 --> 00:27:29,010
worry about your favorite service

00:27:26,640 --> 00:27:30,630
getting heartlessly shut down by some

00:27:29,010 --> 00:27:32,790
large technical Amrit that just bought

00:27:30,630 --> 00:27:35,310
the startup that does the thing that you

00:27:32,790 --> 00:27:37,200
love if you control it yourself and host

00:27:35,310 --> 00:27:42,480
it yourself that's never going to happen

00:27:37,200 --> 00:27:46,170
unless your household gets bought out so

00:27:42,480 --> 00:27:47,760
that's yeah so there's some some salutes

00:27:46,170 --> 00:27:51,240
benefits to having home servers and

00:27:47,760 --> 00:27:55,470
being able to do this and so Ashish is

00:27:51,240 --> 00:27:59,300
going to demonstrate one service but so

00:27:55,470 --> 00:28:01,590
if you have that web service at PyCon

00:27:59,300 --> 00:28:04,020
ENCOM you'll remember that it's only

00:28:01,590 --> 00:28:06,750
available from it's available via a

00:28:04,020 --> 00:28:08,850
tunnel that means that it could go down

00:28:06,750 --> 00:28:11,610
if the tunnel fails what I want to talk

00:28:08,850 --> 00:28:14,460
with you about is hosting that in a way

00:28:11,610 --> 00:28:18,210
where your home network makes sure that

00:28:14,460 --> 00:28:21,180
stays up consistently so for this demo

00:28:18,210 --> 00:28:24,450
we'll view a website at PyCon Duck DNS

00:28:21,180 --> 00:28:26,550
org and with the way to set that up on

00:28:24,450 --> 00:28:29,160
your home router is what's called home

00:28:26,550 --> 00:28:30,870
port forwarding so let's say that this

00:28:29,160 --> 00:28:33,060
Django app is running on your laptop on

00:28:30,870 --> 00:28:35,220
port 8000 and you want it to be

00:28:33,060 --> 00:28:37,200
accessible globally on the internet via

00:28:35,220 --> 00:28:39,660
port 80 which is the normal web server

00:28:37,200 --> 00:28:40,860
port to do that you would need to

00:28:39,660 --> 00:28:42,810
configure something that looks a bit

00:28:40,860 --> 00:28:44,610
like this you would need to tell your

00:28:42,810 --> 00:28:47,490
home router whenever packets arrive

00:28:44,610 --> 00:28:49,920
destined for port 80 send them over to

00:28:47,490 --> 00:28:51,540
my computer on port 8000 and you would

00:28:49,920 --> 00:28:53,880
need to make this rule somehow permanent

00:28:51,540 --> 00:28:55,740
not just transitory while a connection

00:28:53,880 --> 00:28:56,950
gets made and the way to do this is

00:28:55,740 --> 00:28:59,019
called port 4

00:28:56,950 --> 00:29:01,389
during free router and I'll show you

00:28:59,019 --> 00:29:02,740
what that looks like in the I'll show

00:29:01,389 --> 00:29:05,289
you what that looks like when packets

00:29:02,740 --> 00:29:06,490
flow through when they arrive they are

00:29:05,289 --> 00:29:08,440
destined to the router on port 80

00:29:06,490 --> 00:29:09,940
because no one on the Internet outside

00:29:08,440 --> 00:29:13,779
of your home knows about your internal

00:29:09,940 --> 00:29:16,090
address the router looks at this port

00:29:13,779 --> 00:29:18,580
forwarding rule and rewrites the packet

00:29:16,090 --> 00:29:20,679
and sends it off to you and then your

00:29:18,580 --> 00:29:24,039
computer will respond naturally through

00:29:20,679 --> 00:29:26,110
the router so to configure something

00:29:24,039 --> 00:29:28,090
like that you'll need to edit you'll

00:29:26,110 --> 00:29:30,159
need to log in to your home Wi-Fi router

00:29:28,090 --> 00:29:32,200
and you'll find an interface that looks

00:29:30,159 --> 00:29:34,029
kind of like this you'll see there's a

00:29:32,200 --> 00:29:35,649
bunch of options here what's important

00:29:34,029 --> 00:29:37,870
is that the external port is set to 80

00:29:35,649 --> 00:29:40,419
the internal port is set to 8,000 and

00:29:37,870 --> 00:29:42,159
the internal IP address is set to the

00:29:40,419 --> 00:29:43,690
address of your laptop inside the

00:29:42,159 --> 00:29:46,240
network there's also this drop-down

00:29:43,690 --> 00:29:48,399
about TCP and maybe other things for the

00:29:46,240 --> 00:29:51,130
purposes of this talk TCP is the only

00:29:48,399 --> 00:29:52,389
right answer to that but for different

00:29:51,130 --> 00:29:55,330
services you might choose something else

00:29:52,389 --> 00:29:56,980
you can read about those later in order

00:29:55,330 --> 00:29:59,230
of people to reach your service though

00:29:56,980 --> 00:30:01,750
they're going to need to know what the

00:29:59,230 --> 00:30:05,740
address of your router is so you'll need

00:30:01,750 --> 00:30:08,139
to know what is my IP now if you just

00:30:05,740 --> 00:30:10,120
ask this tool ifconfig on your computer

00:30:08,139 --> 00:30:11,830
it'll show you your computer's internal

00:30:10,120 --> 00:30:14,049
IP on your network but if you actually

00:30:11,830 --> 00:30:15,730
google for this question the Google

00:30:14,049 --> 00:30:17,049
servers will be happy to tell you this

00:30:15,730 --> 00:30:18,880
is actually about Google we'll say in

00:30:17,049 --> 00:30:21,940
the search responses your public IP

00:30:18,880 --> 00:30:23,340
address address is whatever it is and if

00:30:21,940 --> 00:30:26,320
you want to get that automatically

00:30:23,340 --> 00:30:28,260
through some kind of API there are

00:30:26,320 --> 00:30:30,610
services that will let you do that too

00:30:28,260 --> 00:30:33,789
so this is great for letting people surf

00:30:30,610 --> 00:30:36,399
to the routers IP address and get routed

00:30:33,789 --> 00:30:38,440
by your router to your Jango server

00:30:36,399 --> 00:30:40,210
running inside your network but if you

00:30:38,440 --> 00:30:43,149
want to give them some nice domain like

00:30:40,210 --> 00:30:46,269
this PI Kentuckian a storage address

00:30:43,149 --> 00:30:49,149
then you'll need to register that

00:30:46,269 --> 00:30:52,120
somehow so there are these so-called

00:30:49,149 --> 00:30:54,220
dynamic DNS services for example doc DNS

00:30:52,120 --> 00:30:55,570
this is their logo by the way we had

00:30:54,220 --> 00:30:57,370
some support questions for them and they

00:30:55,570 --> 00:30:58,929
answered them really quickly on their

00:30:57,370 --> 00:31:00,970
Google+ community and added some new

00:30:58,929 --> 00:31:03,220
features for us there happen to be free

00:31:00,970 --> 00:31:06,029
but the cool thing about dynamic DNS

00:31:03,220 --> 00:31:08,409
services in general is that if your home

00:31:06,029 --> 00:31:10,179
routers IP address changes for whatever

00:31:08,409 --> 00:31:10,690
reason let's say you turn it off and on

00:31:10,179 --> 00:31:11,890
and

00:31:10,690 --> 00:31:13,960
as a result you get assigned a new

00:31:11,890 --> 00:31:17,080
address these things make it really easy

00:31:13,960 --> 00:31:24,310
to update your DNS name with the new

00:31:17,080 --> 00:31:26,650
address oh so that's all great for

00:31:24,310 --> 00:31:28,540
letting people route to your server but

00:31:26,650 --> 00:31:30,160
if they happen to do a lot with it if

00:31:28,540 --> 00:31:33,100
they send you a lot of requests and you

00:31:30,160 --> 00:31:34,480
happen to respond there might be some

00:31:33,100 --> 00:31:35,890
limitations and there are probably some

00:31:34,480 --> 00:31:38,050
limitations of just being inside the

00:31:35,890 --> 00:31:41,230
PyCon Network here so I'll let Karen

00:31:38,050 --> 00:31:44,740
talk about that yeah so you can imagine

00:31:41,230 --> 00:31:48,520
with our Jango pulls app if the image is

00:31:44,740 --> 00:31:51,310
on the app weren't we didn't resize them

00:31:48,520 --> 00:31:52,750
properly they're full-size huge and lots

00:31:51,310 --> 00:31:55,210
of people wanted to use our polls

00:31:52,750 --> 00:31:57,520
application at once then that could be

00:31:55,210 --> 00:31:58,960
kind of a drag and so with the

00:31:57,520 --> 00:32:00,340
limitations associated with running a

00:31:58,960 --> 00:32:04,270
Home Server the first one of course is

00:32:00,340 --> 00:32:06,610
bandwidth any traffic either requests to

00:32:04,270 --> 00:32:08,140
your server or people uploading files to

00:32:06,610 --> 00:32:10,570
your server if it's an application that

00:32:08,140 --> 00:32:14,260
does that will use up your home

00:32:10,570 --> 00:32:16,960
bandwidth which if two extremes can

00:32:14,260 --> 00:32:18,790
interfere with your regular with anyone

00:32:16,960 --> 00:32:21,130
else on your network surfing or using

00:32:18,790 --> 00:32:25,120
the Internet normally an important thing

00:32:21,130 --> 00:32:27,190
to be aware of within that is there's a

00:32:25,120 --> 00:32:29,140
term called buffer bloat which is

00:32:27,190 --> 00:32:31,090
something especially bad with bandwidth

00:32:29,140 --> 00:32:33,850
that happens if you're dealing with

00:32:31,090 --> 00:32:36,220
large files where the large file will

00:32:33,850 --> 00:32:38,200
get privileged in its loading but like

00:32:36,220 --> 00:32:39,640
regular tiny requests will just like get

00:32:38,200 --> 00:32:43,710
backed up behind it and will be terrible

00:32:39,640 --> 00:32:47,290
so that's worth googling sensible router

00:32:43,710 --> 00:32:48,610
configuration can make up for both of

00:32:47,290 --> 00:32:51,430
these and partially mitigate them

00:32:48,610 --> 00:32:54,370
another thing to be aware of is call is

00:32:51,430 --> 00:32:57,700
max connections so when you're running a

00:32:54,370 --> 00:33:01,090
service on your computer many services

00:32:57,700 --> 00:33:02,500
can really take basically all the

00:33:01,090 --> 00:33:04,450
connections you can throw at them if

00:33:02,500 --> 00:33:06,730
you're hosting some static files with

00:33:04,450 --> 00:33:08,080
Apache it'll be fine

00:33:06,730 --> 00:33:09,880
the traffic isn't what you have to worry

00:33:08,080 --> 00:33:12,550
about what you have to worry about more

00:33:09,880 --> 00:33:14,710
so is your home router most home routers

00:33:12,550 --> 00:33:16,270
will not put up very well

00:33:14,710 --> 00:33:18,490
with having hundreds of connections per

00:33:16,270 --> 00:33:19,750
second coming in pouring in sometimes

00:33:18,490 --> 00:33:23,039
even less than that depending on the

00:33:19,750 --> 00:33:25,110
router what will happen is

00:33:23,039 --> 00:33:28,230
the NAT table which we saw earlier in

00:33:25,110 --> 00:33:30,659
the diagrams will fill up and when that

00:33:28,230 --> 00:33:32,789
happens then either you can't just can't

00:33:30,659 --> 00:33:33,750
make anymore connections or existing

00:33:32,789 --> 00:33:36,570
connections get dropped on the floor

00:33:33,750 --> 00:33:38,519
neither of which is very good if you've

00:33:36,570 --> 00:33:40,799
ever had to restart your router after

00:33:38,519 --> 00:33:42,539
someone on your network used BitTorrent

00:33:40,799 --> 00:33:44,039
that's a very similar phenomenon where

00:33:42,539 --> 00:33:48,570
too many connections are just making

00:33:44,039 --> 00:33:50,309
your router break your internet service

00:33:48,570 --> 00:33:52,620
provider may have rules about what

00:33:50,309 --> 00:33:54,960
you're allowed to do on your network for

00:33:52,620 --> 00:33:56,519
example until relatively recently Google

00:33:54,960 --> 00:33:58,409
fiber's Terms of Service would not allow

00:33:56,519 --> 00:34:01,080
you to run a home server and so that's

00:33:58,409 --> 00:34:03,659
something to be aware of similarly some

00:34:01,080 --> 00:34:07,470
ISPs filter certain ports before they

00:34:03,659 --> 00:34:10,020
even get to your house port 25 the

00:34:07,470 --> 00:34:12,540
default port for email is blocked both

00:34:10,020 --> 00:34:13,980
incoming and outgoing by many ISPs so if

00:34:12,540 --> 00:34:15,030
you want to host your own email you're

00:34:13,980 --> 00:34:18,810
going to have to do some sort of

00:34:15,030 --> 00:34:21,510
workaround to get around that and so

00:34:18,810 --> 00:34:24,419
that's just limitations things that can

00:34:21,510 --> 00:34:26,369
go wrong or slow down your home internet

00:34:24,419 --> 00:34:28,290
and are just kind of a pain but there's

00:34:26,369 --> 00:34:30,869
also security considerations where

00:34:28,290 --> 00:34:32,639
someone defaces your web application or

00:34:30,869 --> 00:34:36,119
breaks into the database behind your web

00:34:32,639 --> 00:34:37,500
application and can thus do various

00:34:36,119 --> 00:34:40,830
things and so I'm going to let

00:34:37,500 --> 00:34:43,859
eventbrite security engineer ashish talk

00:34:40,830 --> 00:34:45,869
about those Thanks although it almost

00:34:43,859 --> 00:34:47,849
seems like we should have luke talk

00:34:45,869 --> 00:34:51,359
about them unfortunately I have the mic

00:34:47,849 --> 00:34:54,119
so there are some risks that apply to

00:34:51,359 --> 00:34:56,580
any service whether it's running on your

00:34:54,119 --> 00:34:58,740
home computer or whether it's running on

00:34:56,580 --> 00:35:02,220
the Internet in the cloud rack in a data

00:34:58,740 --> 00:35:03,540
center however one of the most important

00:35:02,220 --> 00:35:05,910
things you might care about for your web

00:35:03,540 --> 00:35:07,349
app is that it actually stay online it

00:35:05,910 --> 00:35:09,180
what you don't want is for people to

00:35:07,349 --> 00:35:10,980
show up to your web app and instead of

00:35:09,180 --> 00:35:14,010
seeing your beautiful images they see a

00:35:10,980 --> 00:35:16,369
broken image icon this is might happen

00:35:14,010 --> 00:35:20,030
to you if your website gets too popular

00:35:16,369 --> 00:35:20,030
for all sorts of reasons

00:35:20,210 --> 00:35:24,150
another problem that might occur is that

00:35:22,710 --> 00:35:26,490
users might be able to break into each

00:35:24,150 --> 00:35:28,920
other's information so this could happen

00:35:26,490 --> 00:35:30,480
if users have set bad passwords it could

00:35:28,920 --> 00:35:33,569
also happen if there's some like was

00:35:30,480 --> 00:35:35,250
probably what we did by the way thanks a

00:35:33,569 --> 00:35:36,609
lot from owen and nate who set up that

00:35:35,250 --> 00:35:40,060
demo

00:35:36,609 --> 00:35:41,680
and it also might happen if you find if

00:35:40,060 --> 00:35:44,350
somebody finds a security bug in the

00:35:41,680 --> 00:35:46,000
code that you're running there's

00:35:44,350 --> 00:35:48,190
something else to be aware of which is

00:35:46,000 --> 00:35:51,160
that most frameworks have settings that

00:35:48,190 --> 00:35:53,050
you can set to make the app be running

00:35:51,160 --> 00:35:55,270
in a way in a way that's safe for other

00:35:53,050 --> 00:35:57,550
people to access Django has a debug

00:35:55,270 --> 00:36:00,220
equals line that you can set to true or

00:35:57,550 --> 00:36:03,250
false if you set it to true then if any

00:36:00,220 --> 00:36:04,720
then if you tell that 20 Django core

00:36:03,250 --> 00:36:06,580
contributors they'll be like no how

00:36:04,720 --> 00:36:08,590
could you do that because the

00:36:06,580 --> 00:36:10,300
documentation says very clearly not - it

00:36:08,590 --> 00:36:13,060
says to set it to false if people you

00:36:10,300 --> 00:36:14,260
don't trust are accessing the site the

00:36:13,060 --> 00:36:15,880
thing is that if you're running stuff at

00:36:14,260 --> 00:36:18,310
home there's more stuff at risk if

00:36:15,880 --> 00:36:20,350
somebody breaks into that service at

00:36:18,310 --> 00:36:21,609
your house hypothetically they could

00:36:20,350 --> 00:36:24,010
wreak all sorts of havoc they could

00:36:21,609 --> 00:36:26,200
change your home Wi-Fi router so that

00:36:24,010 --> 00:36:28,030
when you go to web pages like eBay what

00:36:26,200 --> 00:36:30,070
you see is all the images come back

00:36:28,030 --> 00:36:32,109
upside down there's actually toolkit for

00:36:30,070 --> 00:36:34,470
this I'll give you the link afterwards

00:36:32,109 --> 00:36:38,109
if you want you can ask me in QA but

00:36:34,470 --> 00:36:39,520
given that there are a few

00:36:38,109 --> 00:36:42,040
considerations that apply specifically

00:36:39,520 --> 00:36:44,020
to running stuff at home and they apply

00:36:42,040 --> 00:36:47,080
to the security of your router and your

00:36:44,020 --> 00:36:49,119
computer in particular so if your router

00:36:47,080 --> 00:36:50,890
has a weak admin password and somebody

00:36:49,119 --> 00:36:53,109
breaks into the web app or other service

00:36:50,890 --> 00:36:55,150
that you're running they can then log

00:36:53,109 --> 00:36:58,240
into your router change your password or

00:36:55,150 --> 00:36:59,980
reconfigure it they can also attack

00:36:58,240 --> 00:37:02,640
other computers and there was a serious

00:36:59,980 --> 00:37:05,170
problem recently where a bunch of home

00:37:02,640 --> 00:37:07,240
network attached storage like networked

00:37:05,170 --> 00:37:09,400
hard disk boxes have been broken into

00:37:07,240 --> 00:37:13,500
like tens or hundreds of thousands of

00:37:09,400 --> 00:37:15,700
them and we're all mining bitcoins so

00:37:13,500 --> 00:37:17,290
there's some serious risks about this

00:37:15,700 --> 00:37:19,000
actually they can also break into your

00:37:17,290 --> 00:37:20,590
computer in particular especially if

00:37:19,000 --> 00:37:22,930
you're running stuff they're running the

00:37:20,590 --> 00:37:24,490
web app on your computer they could then

00:37:22,930 --> 00:37:26,680
install a key logger and record all the

00:37:24,490 --> 00:37:28,090
keystrokes they could install Mouse

00:37:26,680 --> 00:37:30,430
recorders and see all the things you're

00:37:28,090 --> 00:37:31,840
clicking around and so on so I want to

00:37:30,430 --> 00:37:33,300
talk for a bit about how to mitigate

00:37:31,840 --> 00:37:35,680
those in the few minutes we have left

00:37:33,300 --> 00:37:39,220
one of the most important things is to

00:37:35,680 --> 00:37:41,950
stay up-to-date so 10 years ago I was

00:37:39,220 --> 00:37:44,340
running wiki called twiggy that was my

00:37:41,950 --> 00:37:48,550
personal website on a home server and

00:37:44,340 --> 00:37:49,630
then a few days well at one point I

00:37:48,550 --> 00:37:51,790
discovered

00:37:49,630 --> 00:37:53,650
my server was being used to send out

00:37:51,790 --> 00:37:55,480
spam and this was because basically I

00:37:53,650 --> 00:37:56,470
hadn't upgraded my wiki there was a

00:37:55,480 --> 00:37:57,670
publicly announced security

00:37:56,470 --> 00:37:59,950
vulnerability where people could run

00:37:57,670 --> 00:38:02,920
whatever they want by misusing the

00:37:59,950 --> 00:38:04,450
version control feature not stating and

00:38:02,920 --> 00:38:06,120
not staying up to date I had to go clean

00:38:04,450 --> 00:38:09,760
up after that it was a total mess

00:38:06,120 --> 00:38:11,350
upgrade the second thing that's the most

00:38:09,760 --> 00:38:14,020
important to say is that you should take

00:38:11,350 --> 00:38:15,640
backups and backups are a way to recover

00:38:14,020 --> 00:38:17,680
from whatever crazy thing happens to

00:38:15,640 --> 00:38:19,840
your server so if you have a live

00:38:17,680 --> 00:38:21,490
replication setup where any changes made

00:38:19,840 --> 00:38:23,620
here automatically synchronize to a

00:38:21,490 --> 00:38:24,970
second hard disk then when an attacker

00:38:23,620 --> 00:38:27,160
breaks in and removes all of your data

00:38:24,970 --> 00:38:30,220
that is immediately synchronized to your

00:38:27,160 --> 00:38:31,900
second hard disk that's not a backup you

00:38:30,220 --> 00:38:36,700
need a way to restore in case of

00:38:31,900 --> 00:38:38,500
whatever happens not yeah not that so

00:38:36,700 --> 00:38:40,390
there are some particular ways to

00:38:38,500 --> 00:38:42,700
mitigate other problems and the key is

00:38:40,390 --> 00:38:45,130
usually separating concerns so if you

00:38:42,700 --> 00:38:47,200
run your Home Server on your own

00:38:45,130 --> 00:38:48,880
computer then at least run it inside a

00:38:47,200 --> 00:38:50,920
different user account you can use the

00:38:48,880 --> 00:38:52,600
users and groups feature so that if they

00:38:50,920 --> 00:38:54,700
do break into that app they can't go

00:38:52,600 --> 00:38:57,070
then look at your browsing history or

00:38:54,700 --> 00:38:58,450
modify your browser configuration to

00:38:57,070 --> 00:39:00,670
give the attacker your Gmail password

00:38:58,450 --> 00:39:02,320
for example which they could if it

00:39:00,670 --> 00:39:04,720
running as your user account and they

00:39:02,320 --> 00:39:06,100
had total control another thing you can

00:39:04,720 --> 00:39:08,410
do is separate it too it runs on a

00:39:06,100 --> 00:39:10,090
different machine for example we have a

00:39:08,410 --> 00:39:12,190
Raspberry Pi in my apartment thanks to

00:39:10,090 --> 00:39:14,590
you my friend Keegan McAllister which

00:39:12,190 --> 00:39:16,450
configured which is responsible for

00:39:14,590 --> 00:39:19,180
lighting up a grid of LEDs in the living

00:39:16,450 --> 00:39:21,160
room and that thing if somebody breaks

00:39:19,180 --> 00:39:26,350
into it you can access it over IRC after

00:39:21,160 --> 00:39:27,640
all that thing can't attack my personal

00:39:26,350 --> 00:39:30,670
data because it's not stored on the

00:39:27,640 --> 00:39:31,930
Raspberry Pi similarly you can isolate

00:39:30,670 --> 00:39:33,970
Network so we've talked a bit about

00:39:31,930 --> 00:39:35,140
public and private IP addresses there's

00:39:33,970 --> 00:39:37,300
another term you can look into you

00:39:35,140 --> 00:39:39,150
called DMZ which is a way to have a

00:39:37,300 --> 00:39:41,650
public service on your home network

00:39:39,150 --> 00:39:43,450
where it can't reach the internal hosts

00:39:41,650 --> 00:39:45,010
so then it wouldn't be able to

00:39:43,450 --> 00:39:45,400
reconfigure your router even if the

00:39:45,010 --> 00:39:47,680
attacker

00:39:45,400 --> 00:39:50,050
had broken in and there's a lot more you

00:39:47,680 --> 00:39:52,180
can learn about web security in general

00:39:50,050 --> 00:39:53,770
the open web app security project has

00:39:52,180 --> 00:39:55,690
this published list of risks it's called

00:39:53,770 --> 00:39:57,370
the top 10 list I recommend reading that

00:39:55,690 --> 00:40:01,930
and we can also talk more after that

00:39:57,370 --> 00:40:03,490
after this talk but having said all this

00:40:01,930 --> 00:40:05,619
sort of negative stuff

00:40:03,490 --> 00:40:07,720
I want to say I want to give you this

00:40:05,619 --> 00:40:09,610
picture from the Chaos Computer Congress

00:40:07,720 --> 00:40:11,590
most of the time your home server will

00:40:09,610 --> 00:40:12,910
be fine there was a one sad story I told

00:40:11,590 --> 00:40:14,619
about people breaking in

00:40:12,910 --> 00:40:16,660
I couldn't have avoided that if I

00:40:14,619 --> 00:40:18,730
upgraded but I want to tell you one last

00:40:16,660 --> 00:40:21,820
story about how things can go wrong and

00:40:18,730 --> 00:40:23,980
it is where a sophomore year in college

00:40:21,820 --> 00:40:25,720
I received a phone call from my mom and

00:40:23,980 --> 00:40:28,119
she said hey the Internet at home is

00:40:25,720 --> 00:40:30,280
running really slowly and I said well

00:40:28,119 --> 00:40:33,010
I'm here in Baltimore you're out there

00:40:30,280 --> 00:40:35,140
in Rochester New York how can I possibly

00:40:33,010 --> 00:40:36,580
help maybe the neighbors are using their

00:40:35,140 --> 00:40:39,010
Wi-Fi a lot maybe there's a new network

00:40:36,580 --> 00:40:41,619
in town you need to change the Wi-Fi

00:40:39,010 --> 00:40:44,410
Channel I don't know so I hung up and

00:40:41,619 --> 00:40:46,960
then I went to read my email and I

00:40:44,410 --> 00:40:48,640
couldn't and I realized my email is

00:40:46,960 --> 00:40:50,800
hosted in my parents basement on the

00:40:48,640 --> 00:40:53,650
home server so they might be on to

00:40:50,800 --> 00:40:55,600
something here and with nothing else to

00:40:53,650 --> 00:40:58,030
do I just surf the web I found myself at

00:40:55,600 --> 00:40:59,950
Google on the Google website the doodle

00:40:58,030 --> 00:41:01,810
of the day was the Mandelbrot set so I

00:40:59,950 --> 00:41:04,240
clicked there I happened to click on the

00:41:01,810 --> 00:41:06,040
Google Images search tab and then I saw

00:41:04,240 --> 00:41:09,130
a really familiar picture in the top row

00:41:06,040 --> 00:41:11,800
of the Images search and this picture I

00:41:09,130 --> 00:41:13,330
realized was a photo of all a picture of

00:41:11,800 --> 00:41:15,640
the Mandelbrot set that my friend

00:41:13,330 --> 00:41:18,250
Jonathan had put on my home server on

00:41:15,640 --> 00:41:20,050
his personal hosting account there for a

00:41:18,250 --> 00:41:21,940
high school project he made in physics

00:41:20,050 --> 00:41:25,090
class so I click on that and lo and

00:41:21,940 --> 00:41:26,770
behold it's really slowed alone so

00:41:25,090 --> 00:41:28,210
that's what was going on there a bunch

00:41:26,770 --> 00:41:29,650
of random people we're really excited by

00:41:28,210 --> 00:41:31,780
Google about Mandelbrot sets and tried

00:41:29,650 --> 00:41:32,530
to load the server the server page in my

00:41:31,780 --> 00:41:34,180
parents basement

00:41:32,530 --> 00:41:36,160
eventually I logged into that server and

00:41:34,180 --> 00:41:37,810
I set up a redirect so that that image

00:41:36,160 --> 00:41:39,190
got served not for my parents basement

00:41:37,810 --> 00:41:41,410
and everything handled

00:41:39,190 --> 00:41:43,390
got handled fine this is by and large

00:41:41,410 --> 00:41:45,280
one of the worst stories I can tell you

00:41:43,390 --> 00:41:46,900
so it's really there's not that much to

00:41:45,280 --> 00:41:50,080
panic about especially if you do the

00:41:46,900 --> 00:41:52,480
kind of separation we talked about so

00:41:50,080 --> 00:41:54,280
that's all we have for you today I hope

00:41:52,480 --> 00:41:56,140
that we've left you with these takeaways

00:41:54,280 --> 00:41:58,240
that you understand basic networking now

00:41:56,140 --> 00:42:00,340
that you know that if you're online you

00:41:58,240 --> 00:42:02,260
can use tunnels or other mechanisms to

00:42:00,340 --> 00:42:04,570
run a server and that you understand the

00:42:02,260 --> 00:42:06,220
basics of how to do so safely so with

00:42:04,570 --> 00:42:08,710
that said we are happy to take questions

00:42:06,220 --> 00:42:10,480
I will say that we have these slides and

00:42:08,710 --> 00:42:14,880
will soon have the video at this domain

00:42:10,480 --> 00:42:14,880
here I'm server dot IO thanks

00:42:18,970 --> 00:42:33,450
Oh hop to the mic

00:42:25,210 --> 00:42:36,130
oh there's I can go first

00:42:33,450 --> 00:42:38,640
hi Karen Ashish thank you so much for

00:42:36,130 --> 00:42:42,550
your talk I feel a lot more jazzed about

00:42:38,640 --> 00:42:46,140
running stuff from my home I wanted to

00:42:42,550 --> 00:42:48,670
ask whether you think that standalone

00:42:46,140 --> 00:42:51,010
appliances like the freedombox are

00:42:48,670 --> 00:42:52,750
things that people would want to look

00:42:51,010 --> 00:42:54,099
into right now or do you happen to know

00:42:52,750 --> 00:42:55,869
whether they're ready or do you think

00:42:54,099 --> 00:42:58,690
that running something from something

00:42:55,869 --> 00:43:01,359
like a Raspberry Pi or or your own you

00:42:58,690 --> 00:43:03,790
know tower or laptop would be the best

00:43:01,359 --> 00:43:05,230
way to go for stuff like hosting hosting

00:43:03,790 --> 00:43:10,750
your own email hosting your own photos

00:43:05,230 --> 00:43:13,900
stuff like that yeah so the question is

00:43:10,750 --> 00:43:16,089
about standalone boxes that come

00:43:13,900 --> 00:43:19,599
pre-configured with home server software

00:43:16,089 --> 00:43:20,829
for example freedombox so I have no

00:43:19,599 --> 00:43:22,810
particular experience running the

00:43:20,829 --> 00:43:25,270
freedombox software but in general it is

00:43:22,810 --> 00:43:28,230
kind of a Raspberry Pi like machine that

00:43:25,270 --> 00:43:32,800
runs a debian based operating system I

00:43:28,230 --> 00:43:35,829
think that at least right now it's good

00:43:32,800 --> 00:43:38,170
to understand what's going on and so I

00:43:35,829 --> 00:43:40,569
think that installing debian on some

00:43:38,170 --> 00:43:43,180
computer and learning about log files is

00:43:40,569 --> 00:43:45,040
a pretty valuable thing to do and at

00:43:43,180 --> 00:43:46,690
that point mostly you aren't gaining

00:43:45,040 --> 00:43:48,670
that much by running these all-in-one

00:43:46,690 --> 00:43:50,800
kits but then again I've been running

00:43:48,670 --> 00:43:52,329
Debian since 2001 so you all might have

00:43:50,800 --> 00:43:54,579
different opinions try whatever you want

00:43:52,329 --> 00:43:56,290
I mean yeah so I'm excited about the

00:43:54,579 --> 00:43:58,690
freedombox project a lot and similar

00:43:56,290 --> 00:44:02,619
projects like it I think everyone should

00:43:58,690 --> 00:44:04,930
run stuff but I don't have that much

00:44:02,619 --> 00:44:07,450
experience with what the experience of

00:44:04,930 --> 00:44:09,069
running one is like at this point and I

00:44:07,450 --> 00:44:10,839
do think it's important to know how the

00:44:09,069 --> 00:44:13,690
freedombox like any other machine you

00:44:10,839 --> 00:44:15,670
would run at home works so that's sort

00:44:13,690 --> 00:44:17,680
of my take one other quick addition is

00:44:15,670 --> 00:44:20,290
that whether or not you're using some

00:44:17,680 --> 00:44:24,060
standard appliance upgrading matters an

00:44:20,290 --> 00:44:26,890
extremely large amount otherwise you're

00:44:24,060 --> 00:44:28,270
commercially configured home network

00:44:26,890 --> 00:44:31,579
appliance storage network attached

00:44:28,270 --> 00:44:35,539
storage box will be mining bitcoins

00:44:31,579 --> 00:44:37,609
I was actually looking into I mean I'm

00:44:35,539 --> 00:44:40,009
also running some stuff on my home

00:44:37,609 --> 00:44:41,479
network and I was very thrilled couple

00:44:40,009 --> 00:44:45,950
of weeks ago when I actually stumbled

00:44:41,479 --> 00:44:47,180
across UPnP which seems to simply find a

00:44:45,950 --> 00:44:50,329
lot of things so you didn't mention that

00:44:47,180 --> 00:44:53,269
in your talk but for example basically

00:44:50,329 --> 00:44:54,650
all Reuters support UPnP and I could you

00:44:53,269 --> 00:44:56,930
can just direct give that's a Python

00:44:54,650 --> 00:45:00,140
library but you can actually used to

00:44:56,930 --> 00:45:01,489
talk to you route router and to get the

00:45:00,140 --> 00:45:03,170
external IP address they don't you have

00:45:01,489 --> 00:45:05,089
to go to Google or anything right

00:45:03,170 --> 00:45:07,130
just from the Python library and then

00:45:05,089 --> 00:45:10,299
you can actually say okay route this

00:45:07,130 --> 00:45:13,249
part on the external IP address to this

00:45:10,299 --> 00:45:14,690
internal IP address and it's completely

00:45:13,249 --> 00:45:19,069
automatic you don't even need to go to

00:45:14,690 --> 00:45:23,089
some admin interface so would you

00:45:19,069 --> 00:45:26,450
recommend using that some you think it's

00:45:23,089 --> 00:45:29,259
a good idea to go down yeah so to repeat

00:45:26,450 --> 00:45:31,719
that there's a protocol called UPnP

00:45:29,259 --> 00:45:33,529
universal plug and play which lets

00:45:31,719 --> 00:45:35,989
applications inside your home network

00:45:33,529 --> 00:45:38,119
configure the router without you logging

00:45:35,989 --> 00:45:39,619
into the routers admin interface and the

00:45:38,119 --> 00:45:42,650
question was is that great and the

00:45:39,619 --> 00:45:45,199
answer is that is great we didn't

00:45:42,650 --> 00:45:46,999
mention it here because I've never used

00:45:45,199 --> 00:45:50,180
it basically I'm so used to clicking

00:45:46,999 --> 00:45:52,309
around and configuring also you can like

00:45:50,180 --> 00:45:54,349
write a Python script to get stuff from

00:45:52,309 --> 00:45:55,130
it but it's not integrated into Django

00:45:54,349 --> 00:46:26,420
or anything else

00:45:55,130 --> 00:46:28,430
so anyway should I answer sure yeah so I

00:46:26,420 --> 00:46:30,559
guess the distinction between SSH

00:46:28,430 --> 00:46:33,859
tunneling and dynamic DNS which may

00:46:30,559 --> 00:46:36,529
weeding super get out in the talk is the

00:46:33,859 --> 00:46:38,749
idea of like I do just want to send

00:46:36,529 --> 00:46:40,819
people to a port random port somewhere

00:46:38,749 --> 00:46:44,320
on some domain is that good enough or a

00:46:40,819 --> 00:46:47,390
sub domain if it's a service like

00:46:44,320 --> 00:46:49,280
service like end Rock or what you rather

00:46:47,390 --> 00:46:52,790
have your own domain name that you want

00:46:49,280 --> 00:46:54,370
to get sent to forward to your home

00:46:52,790 --> 00:46:58,370
server and if you're setting that up

00:46:54,370 --> 00:46:59,960
you're going to need a you know B make

00:46:58,370 --> 00:47:02,240
sure that your domain name is able to

00:46:59,960 --> 00:47:04,250
stay in contact with your home IP and

00:47:02,240 --> 00:47:06,980
since your routers IP address often

00:47:04,250 --> 00:47:08,210
changes sometimes it only changes once a

00:47:06,980 --> 00:47:12,310
year sometimes it changes every few

00:47:08,210 --> 00:47:15,020
weeks depends on your ISP dynamic DNS is

00:47:12,310 --> 00:47:16,400
necessary just to make sure that your

00:47:15,020 --> 00:47:18,200
domain name is still pointing at the

00:47:16,400 --> 00:47:20,980
right thing and so that's sort of in

00:47:18,200 --> 00:47:24,230
general what a dynamic DNS server does

00:47:20,980 --> 00:47:25,910
service does and so dukh dns also gives

00:47:24,230 --> 00:47:27,530
you the domain name you could use your

00:47:25,910 --> 00:47:30,770
own domain name with the service as well

00:47:27,530 --> 00:47:34,010
I believe via cname record yeah yeah

00:47:30,770 --> 00:47:37,760
okay yeah that's so that's sort of the

00:47:34,010 --> 00:47:39,050
distinction whereas the tunnel is well

00:47:37,760 --> 00:47:40,430
you're gonna need a port number for it

00:47:39,050 --> 00:47:43,730
and it's gonna be on someone else's

00:47:40,430 --> 00:47:45,200
domain more or less and just add one

00:47:43,730 --> 00:47:48,800
other thought maybe two other quick

00:47:45,200 --> 00:47:52,330
thoughts doc dns to summarize is is just

00:47:48,800 --> 00:47:55,010
a free dynamic dns service and also I

00:47:52,330 --> 00:47:57,220
find that my association tunnels

00:47:55,010 --> 00:48:01,970
sometimes go down when I'm not looking

00:47:57,220 --> 00:48:03,440
and that's why router port forwarding is

00:48:01,970 --> 00:48:07,030
what I would recommend instead of that

00:48:03,440 --> 00:48:07,030
if you want to make sure it stays up

00:48:11,320 --> 00:48:16,060

YouTube URL: https://www.youtube.com/watch?v=HqEJxZzbdVM


