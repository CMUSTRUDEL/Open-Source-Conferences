Title: Sunday Afternoon Lightning talks (90 minutes)
Publication date: 2012-04-29
Playlist: PyCon 2012
Description: 
	
Captions: 
	00:00:02,449 --> 00:00:10,769
all right well if everyone wants to get

00:00:07,140 --> 00:00:13,230
seated this is the closing address for a

00:00:10,769 --> 00:00:16,400
pike on 2012 thank you once again

00:00:13,230 --> 00:00:16,400
everyone for coming

00:00:21,340 --> 00:00:25,960
now admittedly this is the most people

00:00:24,100 --> 00:00:27,640
I've ever seen in a closing ceremony for

00:00:25,960 --> 00:00:32,910
app icon but there may be some

00:00:27,640 --> 00:00:35,550
incentives I understand interesting so

00:00:32,910 --> 00:00:41,230
we've got a little bit of a raffle first

00:00:35,550 --> 00:00:43,570
but not for the robot so Fionna quill

00:00:41,230 --> 00:00:45,699
take care of that very quickly we've got

00:00:43,570 --> 00:00:47,559
some really cool stuff and a another

00:00:45,699 --> 00:00:50,230
robot but I'm pretty sure you guys are

00:00:47,559 --> 00:00:52,390
not here for that we've got a bunch of

00:00:50,230 --> 00:00:55,000
books by prentice hall we've got some

00:00:52,390 --> 00:00:57,730
goodies from elegant stitches some

00:00:55,000 --> 00:01:01,380
t-shirts and some beer glasses from

00:00:57,730 --> 00:01:05,680
eucalyptus gift certificate for tinggi

00:01:01,380 --> 00:01:12,130
licenses for PyCharm and this beautiful

00:01:05,680 --> 00:01:17,289
stained glass python logo by John Morris

00:01:12,130 --> 00:01:20,470
a so going to keep this for for the end

00:01:17,289 --> 00:01:23,710
and some people said that maybe we were

00:01:20,470 --> 00:01:26,190
a bit biased with the frisbee launches

00:01:23,710 --> 00:01:31,780
that's why we brought a left-handed

00:01:26,190 --> 00:01:34,229
frisbee thrower to help us we've got

00:01:31,780 --> 00:01:37,750
Lawrence and Wesley or going to help us

00:01:34,229 --> 00:01:39,910
launch frisbees in a non-biased way

00:01:37,750 --> 00:01:41,229
leave it to a group of five on people to

00:01:39,910 --> 00:01:46,810
complain about the distribution of

00:01:41,229 --> 00:01:54,250
Python of frisbee throwing in service go

00:01:46,810 --> 00:01:56,259
for it when you pick a freeze on you

00:01:54,250 --> 00:01:58,330
baby come to the front and and trade it

00:01:56,259 --> 00:02:00,099
for an item and we're going to reuse the

00:01:58,330 --> 00:02:06,000
frisbees right there because we have a

00:02:00,099 --> 00:02:06,000
lot of items to distribute other way

00:02:09,869 --> 00:02:16,180
don't worry we probably still have some

00:02:12,550 --> 00:02:19,660
more more coming you got to hit this

00:02:16,180 --> 00:02:25,239
side of the room now Yannick you bias

00:02:19,660 --> 00:02:27,300
the other way now don't throw it that

00:02:25,239 --> 00:02:27,300
hard

00:02:28,300 --> 00:02:36,930
okay this one is special one it's blue

00:02:31,300 --> 00:02:36,930
transparent with a black outline for the

00:02:37,290 --> 00:02:53,520
Python logo Spain gasps hey can u rhythm

00:02:41,740 --> 00:02:53,520
I get right randomizer randomizing well

00:03:03,550 --> 00:03:13,610
don't you hurt my precious are we have

00:03:10,910 --> 00:03:16,310
enough goodies re out of goodies we're

00:03:13,610 --> 00:03:26,810
not out of goodies whoa that almost took

00:03:16,310 --> 00:03:39,080
some mace face off don't hurt my

00:03:26,810 --> 00:03:40,730
precious are we out no one's holding on

00:03:39,080 --> 00:03:42,440
to a frisbee right you're like coming up

00:03:40,730 --> 00:03:44,180
and actually redeem it so we can review

00:03:42,440 --> 00:03:48,050
your frisbees as soon as you catch them

00:03:44,180 --> 00:03:49,400
because we're throwing them as soon as

00:03:48,050 --> 00:03:52,360
we have stuff now we've got resource

00:03:49,400 --> 00:03:52,360
starvation thanks guys

00:04:04,030 --> 00:04:14,680
I did want a t-shirt cannon but

00:04:12,700 --> 00:04:22,600
apparently you can't bring co2 on a

00:04:14,680 --> 00:04:25,210
plane or rent them on short notice are

00:04:22,600 --> 00:04:29,100
we out yet anybody would still with

00:04:25,210 --> 00:04:29,100
frisbees that they are holy young dude I

00:04:30,060 --> 00:04:44,560
thought to just move faster than one

00:04:32,440 --> 00:04:49,950
last year is number 302 in the room damn

00:04:44,560 --> 00:04:53,680
son we're then we're done yeah

00:04:49,950 --> 00:04:56,410
congratulations everyone congratulations

00:04:53,680 --> 00:04:57,880
and also thank you thank you to all the

00:04:56,410 --> 00:05:01,450
sponsors and everyone who provided

00:04:57,880 --> 00:05:05,979
raffle prizes it's really great that we

00:05:01,450 --> 00:05:10,290
can do stuff like this so first off I

00:05:05,979 --> 00:05:12,729
wanted to pass my personal thanks to

00:05:10,290 --> 00:05:14,919
every single staff member and every

00:05:12,729 --> 00:05:16,540
single volunteer who made this

00:05:14,919 --> 00:05:18,910
conference possible we're talking

00:05:16,540 --> 00:05:21,150
hundreds of volunteers thousands of

00:05:18,910 --> 00:05:21,150
man-hours

00:05:31,400 --> 00:05:38,880
pycon this year really was amazing I

00:05:36,090 --> 00:05:42,350
mean it's animals cried in my opening

00:05:38,880 --> 00:05:49,710
address and I'm not going to do that now

00:05:42,350 --> 00:05:51,540
because they're there don't do that so

00:05:49,710 --> 00:05:55,580
many of you chose to show up and become

00:05:51,540 --> 00:05:58,700
part of this so I met so many people for

00:05:55,580 --> 00:06:01,230
to whom this was their first bike on and

00:05:58,700 --> 00:06:03,600
like I said in the beginning this was a

00:06:01,230 --> 00:06:06,270
labor of love it was a labor of a lot of

00:06:03,600 --> 00:06:09,290
people and it's been an honor so thank

00:06:06,270 --> 00:06:09,290
you to all of you

00:06:14,620 --> 00:06:21,140
and again thank you to the Python

00:06:17,480 --> 00:06:23,150
Software Foundation this is backed they

00:06:21,140 --> 00:06:25,250
take the risk they do everything now

00:06:23,150 --> 00:06:28,520
admittedly I'm on the board of directors

00:06:25,250 --> 00:06:30,440
so I can see behind the curtain but big

00:06:28,520 --> 00:06:39,080
things go to them for taking care of all

00:06:30,440 --> 00:06:42,140
this and making this possible and just

00:06:39,080 --> 00:06:44,900
some miscellanea sprinters stay until

00:06:42,140 --> 00:06:46,190
after the lightning talks tonight we've

00:06:44,900 --> 00:06:47,660
got instructions on where you're going

00:06:46,190 --> 00:06:49,400
to be assigned we've got the

00:06:47,660 --> 00:06:52,690
introduction to sprint so on and so

00:06:49,400 --> 00:06:56,780
forth I hope to see all of you there

00:06:52,690 --> 00:06:59,870
it'll be pretty awesome the date pycon

00:06:56,780 --> 00:07:04,460
2013 will be here same bat-time same

00:06:59,870 --> 00:07:06,020
bat-channel follow me or the pike on

00:07:04,460 --> 00:07:13,250
twitter account for updates it will be

00:07:06,020 --> 00:07:15,950
March thirteenth through the 21st and

00:07:13,250 --> 00:07:19,520
I'm sure it overlaps with South by

00:07:15,950 --> 00:07:21,380
Southwest but I really don't care this

00:07:19,520 --> 00:07:25,190
is the survey please take the survey

00:07:21,380 --> 00:07:33,140
help us make it better videos will be

00:07:25,190 --> 00:07:35,740
posted online and now for the robot this

00:07:33,140 --> 00:07:35,740
is a tender moment

00:07:36,080 --> 00:07:43,919
he means a lot to me he says cute little

00:07:39,600 --> 00:07:47,820
things like nuk nuk so now I'm going to

00:07:43,919 --> 00:07:51,540
actually curse myself and try to do a

00:07:47,820 --> 00:07:56,010
live programming demo can I can I do

00:07:51,540 --> 00:07:57,570
that where's my screen there it is so

00:07:56,010 --> 00:08:03,810
I'm not going to make it huge because it

00:07:57,570 --> 00:08:06,090
doesn't really need to be but uh alright

00:08:03,810 --> 00:08:09,990
so I'm going to load it up in be Python

00:08:06,090 --> 00:08:21,630
i'm going to import random you can all

00:08:09,990 --> 00:08:28,680
see this not cheating come on Jesus you

00:08:21,630 --> 00:08:36,300
guys are even and you wonder I don't

00:08:28,680 --> 00:08:40,099
post a Python dev anymore Christ so I've

00:08:36,300 --> 00:08:43,860
got a file it's uh it's got all the

00:08:40,099 --> 00:08:52,760
attendees in it and I'm just going to

00:08:43,860 --> 00:08:57,839
load it up split the lines guy ex and

00:08:52,760 --> 00:09:05,420
who's gonna be the winner what do you

00:08:57,839 --> 00:09:05,420
mean what's the length i won

00:09:05,459 --> 00:09:08,779
I'm so full

00:09:12,590 --> 00:09:20,300
I'm so proud but I gotta make sure oh

00:09:16,300 --> 00:09:26,600
look at that what do you mean randoms

00:09:20,300 --> 00:09:35,770
not reliable come on all right open up

00:09:26,600 --> 00:09:44,330
the right file mmm doo doo doo doo doo

00:09:35,770 --> 00:09:49,000
bee python is cool yeah there you happy

00:09:44,330 --> 00:09:49,000
the length of this one is 2007 not one

00:09:50,650 --> 00:09:56,090
so this is the moment of truth I'm no

00:09:54,770 --> 00:09:59,480
more bike shedding I mean it's really

00:09:56,090 --> 00:10:02,450
stupid code come on all right so

00:09:59,480 --> 00:10:04,550
remember this person has to be in the

00:10:02,450 --> 00:10:07,360
room if they're not I'm going to keep

00:10:04,550 --> 00:10:16,540
printing until somebody is in the room

00:10:07,360 --> 00:10:16,540
is math math math you hooker in the room

00:10:20,040 --> 00:10:43,579
oh that that's too bad Pat poles oh oh

00:10:31,579 --> 00:10:43,579
noes wow this is kind of brutal Cesar

00:10:44,750 --> 00:10:47,750
crazy

00:11:01,240 --> 00:11:16,570
loosen up some ID oh oh oh there you go

00:11:13,420 --> 00:11:19,120
and um I get the strap too oh yeah the

00:11:16,570 --> 00:11:22,330
baby yarn comes with it it's pretty

00:11:19,120 --> 00:11:24,550
baller hahaha take it on the plane lang

00:11:22,330 --> 00:11:37,800
yeah you dude walk through TSA with it

00:11:24,550 --> 00:11:37,800
like this oh here we go

00:11:48,120 --> 00:11:51,860
there you go there you go

00:11:55,410 --> 00:12:02,720
oh no no no no no no no no you got to

00:11:57,569 --> 00:12:02,720
take the strap I was serious about that

00:12:08,080 --> 00:12:18,410
Aaron gratulations see that was actually

00:12:16,520 --> 00:12:21,890
completely fair I don't know him from

00:12:18,410 --> 00:12:33,170
Adam so there you go I really want on

00:12:21,890 --> 00:12:35,300
the robot no I'm sad so in closing

00:12:33,170 --> 00:12:37,910
before the final lightning talks again

00:12:35,300 --> 00:12:42,200
thank you congratulations to Caesar for

00:12:37,910 --> 00:12:49,520
winning the robot I really want that

00:12:42,200 --> 00:12:51,650
robot I need to go drink thank you to

00:12:49,520 --> 00:12:54,590
all of you for coming thank you to all

00:12:51,650 --> 00:12:57,430
the staff thank you to the AV crew thank

00:12:54,590 --> 00:13:00,860
you to everyone who made this possible

00:12:57,430 --> 00:13:04,870
it's been an honor I will be more than

00:13:00,860 --> 00:13:04,870
happy to see you next year thank you

00:13:40,740 --> 00:13:46,810
come on all right now we're going to

00:13:44,139 --> 00:13:49,449
kick off the final lightning talk

00:13:46,810 --> 00:13:55,389
session so if you'll just wait just a

00:13:49,449 --> 00:13:56,560
moment we'll get everyone set up all

00:13:55,389 --> 00:13:58,480
right I think we are ready to get

00:13:56,560 --> 00:14:05,199
started first up will be Chris Kolbert

00:13:58,480 --> 00:14:07,379
speaking about enamel okay let's see

00:14:05,199 --> 00:14:10,899
when i get my screen coming up here

00:14:07,379 --> 00:14:12,310
alright so i'm going to talk about a new

00:14:10,899 --> 00:14:16,089
framework we've been working on so first

00:14:12,310 --> 00:14:18,069
off my name is chris Kolbert i I'm with

00:14:16,089 --> 00:14:20,410
in thought and i'm going to talk about

00:14:18,069 --> 00:14:22,779
enamel which is a framework for writing

00:14:20,410 --> 00:14:30,459
declarative user interfaces and i don't

00:14:22,779 --> 00:14:33,629
know why my screen special about still

00:14:30,459 --> 00:14:33,629
doing that so I'm doing a mirror

00:14:35,200 --> 00:14:41,240
probably changed when you Anders lame

00:14:37,460 --> 00:14:43,630
yeah yeah have to want a display

00:14:41,240 --> 00:14:43,630
students

00:14:47,230 --> 00:14:51,770
it's

00:14:50,000 --> 00:14:54,280
when he goes into display know it's

00:14:51,770 --> 00:14:54,280
going to do that

00:15:01,240 --> 00:15:07,230
he just did my keys go from can you yeah

00:15:07,440 --> 00:15:11,980
all right so we're just going to go from

00:15:09,700 --> 00:15:13,480
non display mode that's fine but then

00:15:11,980 --> 00:15:16,180
you don't get all fancy animations but

00:15:13,480 --> 00:15:18,190
we'll wing it so whatever all right so

00:15:16,180 --> 00:15:20,470
I'm sure a lot of people out here have

00:15:18,190 --> 00:15:23,020
dealt with MVC patterns before the basic

00:15:20,470 --> 00:15:24,700
idea is you have you know some view up

00:15:23,020 --> 00:15:26,200
here or some model that you've got to

00:15:24,700 --> 00:15:28,029
find that represents some data that you

00:15:26,200 --> 00:15:29,470
want to display to the screen and then

00:15:28,029 --> 00:15:31,450
you want to show that on some view

00:15:29,470 --> 00:15:32,709
however that might be arranged the big

00:15:31,450 --> 00:15:34,540
challenge here is to hook up these

00:15:32,709 --> 00:15:36,040
communication pathways so that when your

00:15:34,540 --> 00:15:38,020
model updates your view updates and vice

00:15:36,040 --> 00:15:39,250
versa that's like the basic of writing a

00:15:38,020 --> 00:15:40,630
GUI right if you can't get data from

00:15:39,250 --> 00:15:43,540
your view into your model it's worthless

00:15:40,630 --> 00:15:45,820
and so the idea what enable tries to

00:15:43,540 --> 00:15:47,320
make easy is defining this view and

00:15:45,820 --> 00:15:50,589
hooking up the connections so that you

00:15:47,320 --> 00:15:52,660
can in a facil manner work with your

00:15:50,589 --> 00:15:55,390
model and do conversion validation along

00:15:52,660 --> 00:15:58,240
the way there's lots of there are a lot

00:15:55,390 --> 00:16:00,040
of things that frameworks out there that

00:15:58,240 --> 00:16:02,740
do this some of those everybody's worked

00:16:00,040 --> 00:16:05,589
with visual studio probably interface

00:16:02,740 --> 00:16:07,300
designer in OS X if you do

00:16:05,589 --> 00:16:10,060
cross-platform stuff and use cutie you

00:16:07,300 --> 00:16:11,589
might use QT designer and so all of this

00:16:10,060 --> 00:16:12,970
was nicely animated and there's terrible

00:16:11,589 --> 00:16:14,920
that I have to display it like this but

00:16:12,970 --> 00:16:16,660
the idea was that all of those are great

00:16:14,920 --> 00:16:18,370
if you use those languages but none of

00:16:16,660 --> 00:16:20,290
them integrate really nicely and tightly

00:16:18,370 --> 00:16:22,390
with Python if you've used Django models

00:16:20,290 --> 00:16:23,470
like really there's what you I system do

00:16:22,390 --> 00:16:24,880
you have other than the web what if you

00:16:23,470 --> 00:16:26,800
didn't want to use a web UI and you want

00:16:24,880 --> 00:16:28,329
to do some rich client desktop that uses

00:16:26,800 --> 00:16:30,040
those same Django models you really

00:16:28,329 --> 00:16:31,779
don't have a solution for that and so

00:16:30,040 --> 00:16:33,670
what enable tries to do is bridge that

00:16:31,779 --> 00:16:35,680
gap what we want is a nice declarative

00:16:33,670 --> 00:16:37,810
markup language that's preferably easier

00:16:35,680 --> 00:16:41,260
to use an XML which we think enamel is

00:16:37,810 --> 00:16:43,270
and we want to be able to use a rich

00:16:41,260 --> 00:16:45,550
python like syntax to bind to our Python

00:16:43,270 --> 00:16:48,040
data models in a somewhat transparent

00:16:45,550 --> 00:16:49,300
way so I'm going to throw a bunch of

00:16:48,040 --> 00:16:51,730
code at you which was nicely animated

00:16:49,300 --> 00:16:53,170
that brought out a step at a time but if

00:16:51,730 --> 00:16:55,540
you can follow my mouse movement on the

00:16:53,170 --> 00:16:57,250
screen will try to do this so on the

00:16:55,540 --> 00:16:58,990
Left panel here we've got a standard

00:16:57,250 --> 00:17:00,790
Python file which has the definition of

00:16:58,990 --> 00:17:02,470
a Python model and on the right we have

00:17:00,790 --> 00:17:04,030
an enamel file which is an enamel

00:17:02,470 --> 00:17:05,709
declaration of a view that we want to

00:17:04,030 --> 00:17:07,179
bind to this model so the model is

00:17:05,709 --> 00:17:09,100
pretty easy it just represents a person

00:17:07,179 --> 00:17:10,750
it's got a first name feel the last name

00:17:09,100 --> 00:17:12,130
field their strings if anybody has done

00:17:10,750 --> 00:17:13,329
Django I'm sure a lot of you have this

00:17:12,130 --> 00:17:14,190
looks very very similar to something

00:17:13,329 --> 00:17:15,870
you'd write in Django

00:17:14,190 --> 00:17:18,870
it's just using a model framework called

00:17:15,870 --> 00:17:20,100
traits that we use it in thought so the

00:17:18,870 --> 00:17:21,150
first thing we need to do in order to

00:17:20,100 --> 00:17:22,560
display something like this to the

00:17:21,150 --> 00:17:24,030
screen we need an instance of our model

00:17:22,560 --> 00:17:26,190
so we're going to create an instance of

00:17:24,030 --> 00:17:28,200
a person called John and then we need to

00:17:26,190 --> 00:17:30,030
actually grab our view somehow we need

00:17:28,200 --> 00:17:31,770
and hook up the model and our view

00:17:30,030 --> 00:17:34,140
connection and so if we look at this

00:17:31,770 --> 00:17:35,970
block this with enameled imports context

00:17:34,140 --> 00:17:37,410
manager this implements essentially

00:17:35,970 --> 00:17:39,480
exactly what Guido was talking about

00:17:37,410 --> 00:17:41,580
this morning in his talk which is kind

00:17:39,480 --> 00:17:43,650
of nice it tight and nicely what the

00:17:41,580 --> 00:17:45,360
enamel context manager does it'll

00:17:43,650 --> 00:17:47,610
actually invoke the enamel compiler on

00:17:45,360 --> 00:17:49,380
that enamel module compile the entire

00:17:47,610 --> 00:17:50,970
module down to Python bytecode and give

00:17:49,380 --> 00:17:52,830
you back a module object that looks

00:17:50,970 --> 00:17:54,540
exactly like any other Python code you

00:17:52,830 --> 00:17:55,560
might work with so I'm actually so we're

00:17:54,540 --> 00:17:57,360
actually going out there we're compiling

00:17:55,560 --> 00:17:59,070
that module down getting back a view

00:17:57,360 --> 00:18:01,230
object that I can manipulate with the

00:17:59,070 --> 00:18:03,060
rest of my Python code and I can create

00:18:01,230 --> 00:18:04,860
an instance of that view pass in my

00:18:03,060 --> 00:18:06,540
model to it and what these red boxes are

00:18:04,860 --> 00:18:08,220
trying to highlight is that what I've

00:18:06,540 --> 00:18:09,960
what's actually going on there is when I

00:18:08,220 --> 00:18:12,270
assign to that attribute in the view

00:18:09,960 --> 00:18:14,040
everything's getting bound up so these

00:18:12,270 --> 00:18:16,290
the value attributes on these fields are

00:18:14,040 --> 00:18:17,850
going to get bound to the attributes on

00:18:16,290 --> 00:18:19,500
my model now when when either one of

00:18:17,850 --> 00:18:22,440
them changes my view is going to update

00:18:19,500 --> 00:18:24,420
and vice versa I can then simply show

00:18:22,440 --> 00:18:26,610
this view to the screen and I get a rich

00:18:24,420 --> 00:18:28,740
desktop UI this is actually using cutie

00:18:26,610 --> 00:18:31,080
at the moment but it's you can back into

00:18:28,740 --> 00:18:33,420
it with WX or WPF or any other tool kit

00:18:31,080 --> 00:18:35,760
back and you like and so that's a simple

00:18:33,420 --> 00:18:37,740
UI right this is a very simple couple

00:18:35,760 --> 00:18:39,360
lines of code to implement of course it

00:18:37,740 --> 00:18:41,640
wouldn't be a UI framework if you can't

00:18:39,360 --> 00:18:43,350
do more complex things so this would be

00:18:41,640 --> 00:18:45,420
a simple example that we put together in

00:18:43,350 --> 00:18:47,520
around 150 lines of code that allows us

00:18:45,420 --> 00:18:49,170
to interactively test out an image

00:18:47,520 --> 00:18:51,180
processing algorithm we have and I'll

00:18:49,170 --> 00:18:52,530
run this live if I have the time at the

00:18:51,180 --> 00:18:53,700
end of it but essentially what we have

00:18:52,530 --> 00:18:56,190
we have a control panel on the Left

00:18:53,700 --> 00:18:57,420
which allows us to tune in real time all

00:18:56,190 --> 00:18:59,550
the parameters of our image processing

00:18:57,420 --> 00:19:01,320
algorithm and then as we tune those the

00:18:59,550 --> 00:19:03,480
images reprocess and it's updated on the

00:19:01,320 --> 00:19:05,070
right and real-time next screen i'm

00:19:03,480 --> 00:19:06,450
gonna show is just your standard widget

00:19:05,070 --> 00:19:08,880
gallery it shows everything that enamels

00:19:06,450 --> 00:19:10,860
capable of doing at the moment again

00:19:08,880 --> 00:19:12,840
this is all run on the Qt back end but

00:19:10,860 --> 00:19:16,680
we have support for WX and support for

00:19:12,840 --> 00:19:19,040
other frameworks as well so I'm gonna do

00:19:16,680 --> 00:19:22,560
a quick recap showing the basically the

00:19:19,040 --> 00:19:24,660
key points all right time already okay

00:19:22,560 --> 00:19:27,350
so that's time had a couple more slides

00:19:24,660 --> 00:19:27,350
but thanks

00:19:32,679 --> 00:19:37,400
all right next up is Pete chew kowski

00:19:35,960 --> 00:19:39,710
hopefully I didn't butcher that too much

00:19:37,400 --> 00:19:41,539
talking believe the first rule of pike

00:19:39,710 --> 00:19:44,390
on and I get Brian Quinlan on deck

00:19:41,539 --> 00:19:47,299
please hi so I'm one of the people that

00:19:44,390 --> 00:19:49,789
is this is my first time at PyCon love

00:19:47,299 --> 00:19:52,400
the experience every minute of it so I

00:19:49,789 --> 00:19:53,840
wanted to share with you some of the

00:19:52,400 --> 00:19:55,760
lessons that I've learned along the way

00:19:53,840 --> 00:19:58,700
and some of the things that I kind of

00:19:55,760 --> 00:20:01,870
wish I would have known and things that

00:19:58,700 --> 00:20:05,510
sort of became rules that I will follow

00:20:01,870 --> 00:20:08,900
coming into the next pie cons so the

00:20:05,510 --> 00:20:12,070
first rule of PyCon is you do not pack

00:20:08,900 --> 00:20:12,070
t-shirts for pike on

00:20:17,070 --> 00:20:22,930
if you do wear a t-shirt that is

00:20:20,410 --> 00:20:27,010
programming related try to pick one that

00:20:22,930 --> 00:20:29,680
doesn't refer to a language which uses

00:20:27,010 --> 00:20:32,380
dollar signs for variables this may

00:20:29,680 --> 00:20:42,040
induce spontaneous i bleeding from

00:20:32,380 --> 00:20:46,360
people who mistake it for Pearl you

00:20:42,040 --> 00:20:48,429
better hope I don't run out of these all

00:20:46,360 --> 00:20:51,250
right so any conference like this

00:20:48,429 --> 00:20:53,920
there's a ton of great hackers you know

00:20:51,250 --> 00:20:57,160
very good coder is brilliant very

00:20:53,920 --> 00:20:59,980
good-looking and all of that is

00:20:57,160 --> 00:21:01,540
fantastic but that doesn't necessarily

00:20:59,980 --> 00:21:03,370
make you a very good presenter and

00:21:01,540 --> 00:21:06,450
knowing that this you know presenting is

00:21:03,370 --> 00:21:09,880
not my strong suit as you can tell I

00:21:06,450 --> 00:21:11,860
have a fun little tool that I decided to

00:21:09,880 --> 00:21:13,470
always use whenever I do a talk and

00:21:11,860 --> 00:21:16,780
that's the Takashi style method of

00:21:13,470 --> 00:21:19,690
slides which essentially if you don't

00:21:16,780 --> 00:21:22,030
know calls for slides that have as

00:21:19,690 --> 00:21:25,240
little displayed on them just the main

00:21:22,030 --> 00:21:26,980
idea so that you can allow your audience

00:21:25,240 --> 00:21:29,170
to pay attention to what it is that you

00:21:26,980 --> 00:21:30,790
have to say rather than trying to catch

00:21:29,170 --> 00:21:33,250
up to reading the novella that you're

00:21:30,790 --> 00:21:38,110
inevitably about to swipe from under

00:21:33,250 --> 00:21:40,929
them and and I'm sure you will

00:21:38,110 --> 00:21:43,090
appreciate that if you have just come

00:21:40,929 --> 00:21:53,650
back from a talk that does the exact

00:21:43,090 --> 00:21:56,200
opposite okay one of the very important

00:21:53,650 --> 00:21:59,020
rules at PyCon is the bathroom protocol

00:21:56,200 --> 00:22:01,450
gentlemen whenever you go into a

00:21:59,020 --> 00:22:03,450
bathroom in between talks there's a very

00:22:01,450 --> 00:22:07,000
strict protocol that must be followed

00:22:03,450 --> 00:22:10,510
echo at ASB the airport security

00:22:07,000 --> 00:22:13,179
protocol what that means is you get

00:22:10,510 --> 00:22:16,480
ready while waiting in line as soon as

00:22:13,179 --> 00:22:18,790
the spot opens up you rushing do your

00:22:16,480 --> 00:22:21,280
business as soon as humanly possible

00:22:18,790 --> 00:22:23,140
because you know that you got to get out

00:22:21,280 --> 00:22:27,210
of there because there's a ton of

00:22:23,140 --> 00:22:27,210
people behind you and they're impatient

00:22:34,720 --> 00:22:41,660
the only rule that is semi-serious that

00:22:38,240 --> 00:22:44,030
I'm definitely going to follow and if

00:22:41,660 --> 00:22:46,730
you haven't done so please do go to the

00:22:44,030 --> 00:22:49,429
Buffs they're a fantastic experience and

00:22:46,730 --> 00:22:52,010
my brain was flush with serotonin as

00:22:49,429 --> 00:22:54,170
I've learned what it is that really

00:22:52,010 --> 00:22:56,179
makes this community great and you learn

00:22:54,170 --> 00:22:58,340
that at the box so if you're not going

00:22:56,179 --> 00:22:59,630
to the box at PyCon you're really

00:22:58,340 --> 00:23:02,679
missing out and you should do that next

00:22:59,630 --> 00:23:06,470
time you might also be missing out on

00:23:02,679 --> 00:23:08,050
interesting and new acronyms that I've

00:23:06,470 --> 00:23:10,880
learned that the buff i attended

00:23:08,050 --> 00:23:15,170
specifically that was the GDD the guilt

00:23:10,880 --> 00:23:17,450
driven design and if the person who came

00:23:15,170 --> 00:23:19,670
up with it is here we've verified that

00:23:17,450 --> 00:23:29,360
guilt hub calm is available for

00:23:19,670 --> 00:23:32,210
registration so as I said this was my

00:23:29,360 --> 00:23:36,770
first time and I wanted to set myself a

00:23:32,210 --> 00:23:39,500
rule for my first time if this is your

00:23:36,770 --> 00:23:41,920
first time at PyCon you have to do a

00:23:39,500 --> 00:23:41,920
lightning talk

00:23:52,610 --> 00:23:57,170
I do very much wish we had time for all

00:23:54,950 --> 00:23:58,940
of that next up is Brian Quinlan who'll

00:23:57,170 --> 00:24:01,429
be speaking about checking up on Guido

00:23:58,940 --> 00:24:04,520
and can I get toric Hussein on deck

00:24:01,429 --> 00:24:07,299
please hi everyone my name is Brian and

00:24:04,520 --> 00:24:09,710
I'm flailing really conflicted right now

00:24:07,299 --> 00:24:12,590
we heard from Guido this morning that

00:24:09,710 --> 00:24:14,570
the gill is not a problem but I've heard

00:24:12,590 --> 00:24:19,429
a lot before that the gill is a problem

00:24:14,570 --> 00:24:24,890
and not being a total fanboy I thought

00:24:19,429 --> 00:24:27,169
I'd check up on him a bit so he said

00:24:24,890 --> 00:24:29,179
something about URL fetching it

00:24:27,169 --> 00:24:32,809
shouldn't matter you know you should get

00:24:29,179 --> 00:24:34,820
parallel ilysm if you use threads so I

00:24:32,809 --> 00:24:36,440
had this code where I like downloaded a

00:24:34,820 --> 00:24:38,240
bunch of URLs I had to change it

00:24:36,440 --> 00:24:40,010
slightly because the conference internet

00:24:38,240 --> 00:24:43,280
doesn't work so I replace it with just

00:24:40,010 --> 00:24:45,140
sleeping for two seconds and as an

00:24:43,280 --> 00:24:47,330
approximation of the output of the first

00:24:45,140 --> 00:24:52,010
URL I just helped put all of two are

00:24:47,330 --> 00:24:55,070
failing so so and then I just time like

00:24:52,010 --> 00:25:00,590
I call load URL for all these URLs and

00:24:55,070 --> 00:25:03,350
then I measure the time so so this

00:25:00,590 --> 00:25:04,790
should take about 10 seconds and then

00:25:03,350 --> 00:25:06,620
once we're done this of course will make

00:25:04,790 --> 00:25:09,650
a version where we use threads to do

00:25:06,620 --> 00:25:17,830
this and we'll see if it's any faster or

00:25:09,650 --> 00:25:17,830
slower okay whoo surprising outcome

00:25:18,240 --> 00:25:24,210
oh crap now I understand the grid is

00:25:21,510 --> 00:25:27,530
just such a diabolical genius threads

00:25:24,210 --> 00:25:29,550
are so freaking hard I'm not going to

00:25:27,530 --> 00:25:32,250
how many tomato i'm going to make like

00:25:29,550 --> 00:25:37,080
five threads oh right i forget there's

00:25:32,250 --> 00:25:39,000
this this is an interesting new package

00:25:37,080 --> 00:25:50,820
that's part of core python where i can

00:25:39,000 --> 00:25:52,230
just kind of right so i just take i just

00:25:50,820 --> 00:25:55,320
put this little block here and instead

00:25:52,230 --> 00:25:58,050
of using map I use this thread pools

00:25:55,320 --> 00:26:05,090
math which causes all of this URL

00:25:58,050 --> 00:26:05,090
fetching to happen in threads sorry

00:26:06,200 --> 00:26:17,550
sorry what did they do wrong Oh max

00:26:13,590 --> 00:26:22,710
worker all right I think that's a Python

00:26:17,550 --> 00:26:27,510
bug not my fault so then we run this and

00:26:22,710 --> 00:26:31,710
oh hey Guido was right now I'm feeling

00:26:27,510 --> 00:26:33,690
really cool conflicted about Dave he was

00:26:31,710 --> 00:26:35,160
really funny in his Quito but I think

00:26:33,690 --> 00:26:39,480
it's kind of crap now because he's

00:26:35,160 --> 00:26:41,220
obviously wrong about the guilt but

00:26:39,480 --> 00:26:44,940
let's give him a second chance here's a

00:26:41,220 --> 00:26:46,620
here's a some code that looks at we have

00:26:44,940 --> 00:26:50,550
a bunch of prime numbers we check to see

00:26:46,620 --> 00:26:52,170
if their prime and you know we just

00:26:50,550 --> 00:26:54,390
print out whether there are prime or not

00:26:52,170 --> 00:26:57,870
you know using the same kind of map

00:26:54,390 --> 00:27:02,010
idiom that we used before so let's run

00:26:57,870 --> 00:27:03,630
this and this will take some time it's

00:27:02,010 --> 00:27:07,910
the world's stupidest prime checking

00:27:03,630 --> 00:27:10,650
algorithm prime prime prime prime prime

00:27:07,910 --> 00:27:18,500
okay this is without threads and let's

00:27:10,650 --> 00:27:24,320
do it with threats from concurrent

00:27:18,500 --> 00:27:28,250
import star with thread

00:27:24,320 --> 00:27:34,779
whoops I'm the world's worst type of

00:27:28,250 --> 00:27:34,779
stone max workers equals 5 as E

00:27:38,890 --> 00:27:50,440
y dot map and I would expect this gets

00:27:48,090 --> 00:28:02,670
faster because Guido said this guilt

00:27:50,440 --> 00:28:10,030
thing doesn't matter hey it went slower

00:28:02,670 --> 00:28:11,470
what I don't trust you anymore dude but

00:28:10,030 --> 00:28:15,550
I'm suspecting that the problem is

00:28:11,470 --> 00:28:20,820
actually this thread crap maybe if we

00:28:15,550 --> 00:28:20,820
use a different word like maybe process

00:28:22,650 --> 00:28:27,070
then we'd use multiple processes to

00:28:25,360 --> 00:28:31,120
solve this problem and maybe we'd get

00:28:27,070 --> 00:28:32,980
some sort of speed up hey now I have a

00:28:31,120 --> 00:28:34,810
two core machine and it was almost too

00:28:32,980 --> 00:28:36,820
almost actually it's more than two times

00:28:34,810 --> 00:28:42,760
faster that makes no theoretical sense

00:28:36,820 --> 00:28:44,860
anyway so you know the point of my talk

00:28:42,760 --> 00:28:46,480
was obviously about python has this

00:28:44,860 --> 00:28:49,270
built-in module called concurrent

00:28:46,480 --> 00:28:51,160
futures it's great for taking otherwise

00:28:49,270 --> 00:28:53,890
sequential code and making a parallel

00:28:51,160 --> 00:28:55,870
using either threads or processes and I

00:28:53,890 --> 00:28:58,050
would look into it if I were you thanks

00:28:55,870 --> 00:28:58,050
very much

00:29:03,690 --> 00:29:07,720
next up is tariq hussain he'll be

00:29:06,190 --> 00:29:11,740
speaking about solar okay please get

00:29:07,720 --> 00:29:14,290
Damien Avila on deck good afternoon

00:29:11,740 --> 00:29:17,740
everyone welcome to my lightning talk

00:29:14,290 --> 00:29:19,360
the solar power my name is Tariq and I

00:29:17,740 --> 00:29:22,030
work for a small hip health industry

00:29:19,360 --> 00:29:24,550
startup named wiser together as you have

00:29:22,030 --> 00:29:28,990
noticed from my corny title the talk is

00:29:24,550 --> 00:29:31,870
about solar so what about it we always

00:29:28,990 --> 00:29:33,880
associate solar with searching but solar

00:29:31,870 --> 00:29:38,110
can also serve as your non relational

00:29:33,880 --> 00:29:42,130
data layer and you know like you you

00:29:38,110 --> 00:29:43,480
might think okay no sequel solar as you

00:29:42,130 --> 00:29:45,640
might have already guessed I'm talking

00:29:43,480 --> 00:29:47,920
about using solar as the no sequel back

00:29:45,640 --> 00:29:50,500
end this approach is not novel but I

00:29:47,920 --> 00:29:53,850
wanted to discuss a use case that

00:29:50,500 --> 00:29:57,940
brought it about first of all no sequel

00:29:53,850 --> 00:30:00,130
so the arrow in our case was like this

00:29:57,940 --> 00:30:02,830
crazy performance hit that we took from

00:30:00,130 --> 00:30:06,910
using a sequel layer to retrieve our

00:30:02,830 --> 00:30:09,280
data and so we were thinking okay what

00:30:06,910 --> 00:30:12,220
are our no sequel options and I thought

00:30:09,280 --> 00:30:14,950
okay why not solar solar is already part

00:30:12,220 --> 00:30:16,750
of my stack I like solar and you know

00:30:14,950 --> 00:30:19,690
there's a lot of great reasons to like

00:30:16,750 --> 00:30:23,350
solar it's fast scalable and there are

00:30:19,690 --> 00:30:25,570
some great interfaces out there so when

00:30:23,350 --> 00:30:27,790
would you consider it if you have a DB

00:30:25,570 --> 00:30:30,100
that's frequently read and infrequently

00:30:27,790 --> 00:30:31,960
I stress on the word infrequently you

00:30:30,100 --> 00:30:34,660
might want to use solar you want search

00:30:31,960 --> 00:30:36,250
and filtering you want faceting or you

00:30:34,660 --> 00:30:39,280
know like you want a decently scalable

00:30:36,250 --> 00:30:41,320
data layer and what's not so cool about

00:30:39,280 --> 00:30:43,420
it is that it obviously doesn't support

00:30:41,320 --> 00:30:45,460
transactions not all sequel queries can

00:30:43,420 --> 00:30:47,560
be translated to something that you know

00:30:45,460 --> 00:30:49,360
you can execute on solar instances can

00:30:47,560 --> 00:30:50,560
take a long time searching and indexing

00:30:49,360 --> 00:30:54,430
at the same time brings young

00:30:50,560 --> 00:30:55,780
performance and in order to accommodate

00:30:54,430 --> 00:30:58,060
searching indexing at the same time you

00:30:55,780 --> 00:31:00,130
might want to look at elasticsearch but

00:30:58,060 --> 00:31:02,080
the things that you don't have to give

00:31:00,130 --> 00:31:03,880
up your relational data layer completely

00:31:02,080 --> 00:31:05,620
you can create a non-relational there on

00:31:03,880 --> 00:31:08,440
top of your relational data layer and

00:31:05,620 --> 00:31:11,350
get both best of the both worlds now

00:31:08,440 --> 00:31:12,850
this brings us to the use case that I'm

00:31:11,350 --> 00:31:16,000
talking about we deal with medical

00:31:12,850 --> 00:31:18,220
survey data and our surveys are pretty

00:31:16,000 --> 00:31:19,750
extensive and we ask a lot of questions

00:31:18,220 --> 00:31:21,760
answers are multiple choice and

00:31:19,750 --> 00:31:23,740
depending on complexity of the question

00:31:21,760 --> 00:31:26,440
there can be seven thousand or more

00:31:23,740 --> 00:31:28,870
different answer choices and we get

00:31:26,440 --> 00:31:31,870
about like more than 2000 respondents

00:31:28,870 --> 00:31:34,090
per survey so there's a lot of data to

00:31:31,870 --> 00:31:36,640
deal with and a typical survey question

00:31:34,090 --> 00:31:38,610
looks like this and you can see like it

00:31:36,640 --> 00:31:41,110
asks you about okay which of these

00:31:38,610 --> 00:31:43,270
arthritis have you had like say less

00:31:41,110 --> 00:31:46,120
than a year ago our more than a year ago

00:31:43,270 --> 00:31:47,890
and some somebody picked an option like

00:31:46,120 --> 00:31:49,660
okay I had this less than a year ago and

00:31:47,890 --> 00:31:53,350
I had that more than a year ago I

00:31:49,660 --> 00:31:55,300
convert that into this kind of data so 1

00:31:53,350 --> 00:31:57,580
and 0 is indicating what God answered

00:31:55,300 --> 00:32:00,010
what was answered and what wasn't what I

00:31:57,580 --> 00:32:02,050
want to do is aggregate this data over

00:32:00,010 --> 00:32:04,240
two thousand or more responses that we

00:32:02,050 --> 00:32:07,600
have from the survey and that gives us

00:32:04,240 --> 00:32:10,510
like really amazing trans idiosyncrasies

00:32:07,600 --> 00:32:12,100
and other stuff and we then use these

00:32:10,510 --> 00:32:14,679
numbers to generate like pretty graphs

00:32:12,100 --> 00:32:17,380
now the document structure that we used

00:32:14,679 --> 00:32:19,030
for solar is that each response turning

00:32:17,380 --> 00:32:21,540
to a solar document and we added some

00:32:19,030 --> 00:32:25,120
meta information like age profession

00:32:21,540 --> 00:32:27,460
interests of our participants and things

00:32:25,120 --> 00:32:30,190
like that now when querying we were

00:32:27,460 --> 00:32:31,810
filtering by age interest proficient to

00:32:30,190 --> 00:32:35,580
get smaller groups of survey respondents

00:32:31,810 --> 00:32:37,870
and fast it across the boolean fields

00:32:35,580 --> 00:32:40,690
remember that I showed like I stored the

00:32:37,870 --> 00:32:43,450
answers as ones and zeros the result is

00:32:40,690 --> 00:32:45,250
that we know we can filter drill down

00:32:43,450 --> 00:32:46,929
through like all these amazing survey

00:32:45,250 --> 00:32:49,630
data and we can find out what group of

00:32:46,929 --> 00:32:53,050
people like what or chose what kind of

00:32:49,630 --> 00:32:54,900
answer choices so why is solar awesome

00:32:53,050 --> 00:32:57,220
faceting and cross boolean field is

00:32:54,900 --> 00:33:00,730
amazing it's really fast uses very

00:32:57,220 --> 00:33:03,220
little memory combining 3,000 fields for

00:33:00,730 --> 00:33:05,560
two thousand documents takes like one or

00:33:03,220 --> 00:33:08,290
two millisecond don't take my word for

00:33:05,560 --> 00:33:11,350
it but like it's it's really fast and it

00:33:08,290 --> 00:33:14,080
allowed us to take our API response time

00:33:11,350 --> 00:33:16,630
for our data service from 15 seconds

00:33:14,080 --> 00:33:18,040
down to 50 millisecond good to know is

00:33:16,630 --> 00:33:19,900
that sunburned is an awesome pattern

00:33:18,040 --> 00:33:21,600
interface and you know like you should

00:33:19,900 --> 00:33:23,610
check it out we use that

00:33:21,600 --> 00:33:25,650
and of course there's no time for

00:33:23,610 --> 00:33:28,289
questions but like the slide is up there

00:33:25,650 --> 00:33:30,860
and you can follow me on twitter stuff

00:33:28,289 --> 00:33:30,860
thank you

00:33:35,760 --> 00:33:41,440
hello next up is Damien avilla who will

00:33:39,039 --> 00:33:43,330
be speaking about doing I Python and

00:33:41,440 --> 00:33:56,590
HTML slides and can I please get Chris

00:33:43,330 --> 00:34:00,160
withers up on deck hi it's ok ok hi my

00:33:56,590 --> 00:34:02,350
name is Damien i'm from india and i want

00:34:00,160 --> 00:34:08,080
to show you how to embed ipython

00:34:02,350 --> 00:34:11,080
notebook in a che Timmy l5 slide for a

00:34:08,080 --> 00:34:17,369
presentation yeah sorry for my English

00:34:11,080 --> 00:34:20,679
is very bad bad here we go well and some

00:34:17,369 --> 00:34:25,619
reason weeks ago we West makini in

00:34:20,679 --> 00:34:29,350
Twitter that it will be a awesome and

00:34:25,619 --> 00:34:32,889
HTML spice it's like the show where you

00:34:29,350 --> 00:34:36,879
can change ipython notebook and two days

00:34:32,889 --> 00:34:41,139
ago to be basically say the same and why

00:34:36,879 --> 00:34:44,470
we want an ipod on not in a presentation

00:34:41,139 --> 00:34:47,050
to achieve a continuous flow in the

00:34:44,470 --> 00:34:49,030
presentation we without switch a ostrich

00:34:47,050 --> 00:34:54,909
shifting between the presentation and

00:34:49,030 --> 00:34:58,020
and the demos a how can get there we

00:34:54,909 --> 00:35:01,270
discuss some ideas with the eye pattern

00:34:58,020 --> 00:35:04,600
developers and we will get a native

00:35:01,270 --> 00:35:08,020
solution in a pie Tony in the future but

00:35:04,600 --> 00:35:12,390
in the meantime we this is the

00:35:08,020 --> 00:35:15,580
disclaimer this is not elegant but ig0

00:35:12,390 --> 00:35:20,700
so you have to allow this presentation

00:35:15,580 --> 00:35:26,109
in HTML Cinco five sorry I know if oh

00:35:20,700 --> 00:35:32,010
you can modify from this address thanks

00:35:26,109 --> 00:35:37,740
for the work and you can use a an iframe

00:35:32,010 --> 00:35:43,080
object and get the are you d jrv a

00:35:37,740 --> 00:35:47,140
direction from the Python notebook so

00:35:43,080 --> 00:35:48,310
then in process you have to run the

00:35:47,140 --> 00:35:50,920
ipython notebook

00:35:48,310 --> 00:35:53,260
in a dashboard page create a new

00:35:50,920 --> 00:35:57,280
notebook or a lot of the previous one

00:35:53,260 --> 00:36:01,680
and in the bar in the address you d you

00:35:57,280 --> 00:36:06,220
can get these artists are insert in your

00:36:01,680 --> 00:36:10,900
html5 presentation then you have this an

00:36:06,220 --> 00:36:13,840
HTML prett presentation that i have

00:36:10,900 --> 00:36:17,920
embedded the ipython notebook and you

00:36:13,840 --> 00:36:22,140
can run call inside that you can plot

00:36:17,920 --> 00:36:28,000
fuse or all the features of ipython are

00:36:22,140 --> 00:36:32,740
available in in this format and you have

00:36:28,000 --> 00:36:36,510
not to switch between them yeah for it

00:36:32,740 --> 00:36:36,510
sorry for the english and thank

00:36:38,530 --> 00:36:40,590
you

00:36:45,890 --> 00:36:49,890
all right next up is Chris will be

00:36:48,390 --> 00:36:57,480
speaking on media goblin and can I get

00:36:49,890 --> 00:36:59,010
Brandon Rodes on deck please hi my name

00:36:57,480 --> 00:37:02,280
is Chris Webber I'm here to talk about

00:36:59,010 --> 00:37:04,110
media goblin so my day job I'm senior

00:37:02,280 --> 00:37:05,880
software engineer at CC creativecommons

00:37:04,110 --> 00:37:07,820
every other moment of my life I'm trying

00:37:05,880 --> 00:37:10,290
to help save the internet from media

00:37:07,820 --> 00:37:13,290
centralization so I work on this project

00:37:10,290 --> 00:37:15,720
called new media goblin who I mean good

00:37:13,290 --> 00:37:17,460
new media goblin and it's a media

00:37:15,720 --> 00:37:19,170
publication system somewhat along the

00:37:17,460 --> 00:37:21,510
lines of a decentralized flickr /

00:37:19,170 --> 00:37:24,170
youtube system supports images video

00:37:21,510 --> 00:37:26,460
ascii art in fact it's very extensible i

00:37:24,170 --> 00:37:28,260
founded the project last a year ago and

00:37:26,460 --> 00:37:31,320
we have a huge contributor community of

00:37:28,260 --> 00:37:33,900
about 35 people so far yeah well swim

00:37:31,320 --> 00:37:35,130
small commits but so the webs and moving

00:37:33,900 --> 00:37:37,080
more and more in this kind of direction

00:37:35,130 --> 00:37:39,350
of a centralized service but the web

00:37:37,080 --> 00:37:41,460
should be in this kind of direction of

00:37:39,350 --> 00:37:43,710
individual sites that are kind of that

00:37:41,460 --> 00:37:45,230
are federated so that's what we're

00:37:43,710 --> 00:37:48,540
working on so here's a screenshot and

00:37:45,230 --> 00:37:53,910
another screenshot oh and a real

00:37:48,540 --> 00:37:55,980
screenshot so ah yes I'm going to cheat

00:37:53,910 --> 00:37:57,390
just keep jumping ahead so we have an

00:37:55,980 --> 00:38:00,600
infrastructure that's kind of along the

00:37:57,390 --> 00:38:03,810
lines of Jango minus Django which uses

00:38:00,600 --> 00:38:06,210
routes web objeto sqlalchemy WT forms

00:38:03,810 --> 00:38:08,130
we're currently moving from the MongoDB

00:38:06,210 --> 00:38:10,470
to sqlalchemy but I'm not going to talk

00:38:08,130 --> 00:38:12,510
about that here you can ask me later so

00:38:10,470 --> 00:38:14,490
to show a few things off here's our site

00:38:12,510 --> 00:38:16,710
go to media Goblin org if you're

00:38:14,490 --> 00:38:19,350
interested in the software here's a

00:38:16,710 --> 00:38:20,970
quick example of a very adorable baby

00:38:19,350 --> 00:38:24,810
that you just can't resist up on this

00:38:20,970 --> 00:38:27,540
website as I said we have video support

00:38:24,810 --> 00:38:34,110
this is html5 video playing with web M

00:38:27,540 --> 00:38:38,160
no flash required at all and oops as I

00:38:34,110 --> 00:38:39,510
said we have ascii art support and it's

00:38:38,160 --> 00:38:40,530
actually extensible you could add your

00:38:39,510 --> 00:38:42,450
own app that you could add your own

00:38:40,530 --> 00:38:44,010
media type we have a we have a framework

00:38:42,450 --> 00:38:46,470
that allows for you to drop in new

00:38:44,010 --> 00:38:49,860
things with a set like a submission

00:38:46,470 --> 00:38:53,220
processing and display system in fact it

00:38:49,860 --> 00:38:55,830
uses a and you can turn on celery to

00:38:53,220 --> 00:38:56,650
actually move things out in so that if

00:38:55,830 --> 00:38:58,990
you're you know

00:38:56,650 --> 00:39:04,000
uploading video it doesn't timeout as

00:38:58,990 --> 00:39:06,160
your video transcodes but and anyway so

00:39:04,000 --> 00:39:07,930
yeah if you go on on our site we have

00:39:06,160 --> 00:39:09,789
some kind of details of the tour there's

00:39:07,930 --> 00:39:11,200
all sorts of things like you can turn on

00:39:09,789 --> 00:39:12,700
attachments so that you can give the

00:39:11,200 --> 00:39:16,240
source of your files and stuff like that

00:39:12,700 --> 00:39:18,220
and yeah if you go around our site we

00:39:16,240 --> 00:39:22,569
have I keep drawing these weird art

00:39:18,220 --> 00:39:24,099
works for release but anyway so get

00:39:22,569 --> 00:39:27,819
involved if you're interested and help

00:39:24,099 --> 00:39:31,109
decentralize the web go to media goblin

00:39:27,819 --> 00:39:35,289
org quick community up at the top and

00:39:31,109 --> 00:39:37,599
yeah did I say anything else oh right so

00:39:35,289 --> 00:39:38,980
when it comes to so um so it's free and

00:39:37,599 --> 00:39:41,230
open source software released under the

00:39:38,980 --> 00:39:44,470
a GPL we're currently I think this is

00:39:41,230 --> 00:39:46,210
important because we have in the in the

00:39:44,470 --> 00:39:47,650
current state of things is that free

00:39:46,210 --> 00:39:49,839
free and open source software is the

00:39:47,650 --> 00:39:50,950
default for libraries on the web if

00:39:49,839 --> 00:39:52,089
you're going to start working on the web

00:39:50,950 --> 00:39:53,950
you're going to use free and open source

00:39:52,089 --> 00:39:56,010
software libraries but we're seriously

00:39:53,950 --> 00:39:59,410
lacking as in terms of web applications

00:39:56,010 --> 00:40:01,569
so and we're going to be sprinting and

00:39:59,410 --> 00:40:03,279
if you're interested in that come join

00:40:01,569 --> 00:40:04,779
us we're working on we're going to be

00:40:03,279 --> 00:40:06,490
knocking out our plug-in infrastructure

00:40:04,779 --> 00:40:08,910
possibly putting some more media types

00:40:06,490 --> 00:40:12,010
such as 3d models or ebooks or etc

00:40:08,910 --> 00:40:15,279
finishing up the SQL land and working on

00:40:12,010 --> 00:40:17,619
Federation and I recommend joining media

00:40:15,279 --> 00:40:19,650
goblin on irc.freenode.net thanks so

00:40:17,619 --> 00:40:19,650
much

00:40:24,829 --> 00:40:30,920
all right now we have Brandon Rodes here

00:40:27,390 --> 00:40:30,920
to speak about logging tree

00:40:47,680 --> 00:40:50,680
yep

00:40:53,210 --> 00:41:05,050
ya ali of you guys are tried from a

00:41:01,160 --> 00:41:07,700
program using the logging module in

00:41:05,050 --> 00:41:10,580
python comes built into the standard

00:41:07,700 --> 00:41:15,350
library how many of you have ever

00:41:10,580 --> 00:41:17,480
regretted it i found that one of the

00:41:15,350 --> 00:41:19,730
problems is that it's very much a black

00:41:17,480 --> 00:41:23,120
box when it starts behaving in ways that

00:41:19,730 --> 00:41:27,470
i can't predict then I don't have easy

00:41:23,120 --> 00:41:30,350
ways to fix those behaviors cherry pie

00:41:27,470 --> 00:41:33,350
web server we sometimes use because it's

00:41:30,350 --> 00:41:35,330
its production quality they don't warn

00:41:33,350 --> 00:41:36,980
you not to serve static content with it

00:41:35,330 --> 00:41:38,810
so it's great for little apps that you

00:41:36,980 --> 00:41:42,020
have to go have other people run for you

00:41:38,810 --> 00:41:44,950
rights and access log as an error log in

00:41:42,020 --> 00:41:47,570
the long-standing tradition of Apache

00:41:44,950 --> 00:41:50,270
but my application needed to write some

00:41:47,570 --> 00:41:51,920
log messages as well so they didn't need

00:41:50,270 --> 00:41:53,690
to be particularly name spaced or

00:41:51,920 --> 00:41:55,790
anything so I grabbed the root longer

00:41:53,690 --> 00:41:57,470
and try to write an error message I

00:41:55,790 --> 00:41:59,090
looked at the console where cherry pie

00:41:57,470 --> 00:42:02,450
as I'm running it in development mode

00:41:59,090 --> 00:42:06,080
prints out messages and only the normal

00:42:02,450 --> 00:42:08,960
cherry pie Apache style log message for

00:42:06,080 --> 00:42:10,760
the request came out well ok I know that

00:42:08,960 --> 00:42:13,340
I kind of have to add route handlers

00:42:10,760 --> 00:42:15,380
sometimes if nothing's showing up so i

00:42:13,340 --> 00:42:17,750
added a stream handler by default goes

00:42:15,380 --> 00:42:19,790
to standard error the result on the one

00:42:17,750 --> 00:42:22,970
hand was wonderful my log message

00:42:19,790 --> 00:42:25,520
appeared but now there were two copies

00:42:22,970 --> 00:42:30,770
of every cherry pie request message

00:42:25,520 --> 00:42:33,110
getting printed out so the situation was

00:42:30,770 --> 00:42:35,660
just finally intolerable I had to write

00:42:33,110 --> 00:42:37,940
something I called it logging tree the

00:42:35,660 --> 00:42:40,070
little consultancy the startup I was

00:42:37,940 --> 00:42:41,270
working for in Atlanta even though I did

00:42:40,070 --> 00:42:45,260
this on their time they let me open

00:42:41,270 --> 00:42:48,650
source it it works on pythons between 23

00:42:45,260 --> 00:42:50,990
and 32 you can just a pip install it

00:42:48,650 --> 00:42:53,150
import logging tree there is an API

00:42:50,990 --> 00:42:55,400
there if you want to explore but the

00:42:53,150 --> 00:42:57,980
main thing is print out it in respects

00:42:55,400 --> 00:43:00,470
the logging module and shows you the

00:42:57,980 --> 00:43:02,150
currently configured tree of loggers

00:43:00,470 --> 00:43:04,870
here we see that cherry pie has

00:43:02,150 --> 00:43:06,670
registered a pair of them there is an

00:43:04,870 --> 00:43:09,520
implement see it there

00:43:06,670 --> 00:43:11,620
is here we see that cherry pie has

00:43:09,520 --> 00:43:13,780
created an access and an error log and

00:43:11,620 --> 00:43:15,970
added handlers to them but those

00:43:13,780 --> 00:43:18,160
messages also propagate up to the

00:43:15,970 --> 00:43:19,540
implicit node cherry pie it's in

00:43:18,160 --> 00:43:22,030
brackets because no one's ever actually

00:43:19,540 --> 00:43:24,280
called in this instance you know get log

00:43:22,030 --> 00:43:26,590
or cherry pie but it exists implicitly

00:43:24,280 --> 00:43:28,870
because of the period separated

00:43:26,590 --> 00:43:31,090
namespaces and then I had added of

00:43:28,870 --> 00:43:33,340
course my handler up at the top and you

00:43:31,090 --> 00:43:35,290
see the problem something produced at

00:43:33,340 --> 00:43:37,900
the level of cherry pie access or error

00:43:35,290 --> 00:43:39,940
hits both the handler at that level and

00:43:37,900 --> 00:43:42,340
then propagates up to the handler at the

00:43:39,940 --> 00:43:45,010
top once I could see what I was doing

00:43:42,340 --> 00:43:47,400
was quite easy to turn propagate off at

00:43:45,010 --> 00:43:50,170
the cherry pie level run my little

00:43:47,400 --> 00:43:52,510
logging tree print out again and see

00:43:50,170 --> 00:43:54,400
that I had indeed solve a problem the

00:43:52,510 --> 00:43:56,710
little arrow doesn't get drawn if

00:43:54,400 --> 00:43:59,500
propagate is off and I now knew that my

00:43:56,710 --> 00:44:01,870
app would log correctly unless you debug

00:43:59,500 --> 00:44:03,310
a logging configuration experiment and

00:44:01,870 --> 00:44:06,610
learn about how the standard library

00:44:03,310 --> 00:44:09,850
logging module works better and learn

00:44:06,610 --> 00:44:12,090
more about its behavior thank you very

00:44:09,850 --> 00:44:12,090
much

00:44:15,440 --> 00:44:17,859
ok

00:44:19,069 --> 00:44:23,819
all right next up we have Tim Ansel to

00:44:21,750 --> 00:44:25,079
talk about the pike on live streaming

00:44:23,819 --> 00:44:31,319
from can I get lube macking on that

00:44:25,079 --> 00:44:34,020
please hi I'm Tim I'm the streaming guy

00:44:31,319 --> 00:44:37,099
as my little badge there's that's the

00:44:34,020 --> 00:44:40,980
funniest photo I could find of myself

00:44:37,099 --> 00:44:44,490
I'm kind of on a vendetta to video all

00:44:40,980 --> 00:44:45,900
the user groups in the world but this

00:44:44,490 --> 00:44:49,490
isn't really a user group it's a

00:44:45,900 --> 00:44:51,780
conference so you'll have to do why

00:44:49,490 --> 00:44:54,170
because I live in Australia and

00:44:51,780 --> 00:44:58,829
Australia's a long long way away from

00:44:54,170 --> 00:45:01,770
everywhere I it's a 14-hour flight just

00:44:58,829 --> 00:45:03,059
to hear eight hours if you want to go

00:45:01,770 --> 00:45:04,650
like Singapore or something like that

00:45:03,059 --> 00:45:09,359
Australia's just a long way away from

00:45:04,650 --> 00:45:11,490
everything first thing I'm not doing the

00:45:09,359 --> 00:45:12,780
recording I just plug into the end of

00:45:11,490 --> 00:45:14,460
the recording the guys doing the

00:45:12,780 --> 00:45:17,690
recording and the next day video guys

00:45:14,460 --> 00:45:20,099
that absolutely awesome as you probably

00:45:17,690 --> 00:45:22,920
will see if you go and look at some of

00:45:20,099 --> 00:45:26,119
the videos definitely if you're doing a

00:45:22,920 --> 00:45:30,750
conference contact these guys because

00:45:26,119 --> 00:45:32,819
they do put your videos up next day I'm

00:45:30,750 --> 00:45:36,260
connecting to the end of their system

00:45:32,819 --> 00:45:39,390
and basically trying to live stream it

00:45:36,260 --> 00:45:41,819
but you're all at the conference so you

00:45:39,390 --> 00:45:44,819
probably haven't seen the live streaming

00:45:41,819 --> 00:45:47,250
it's only the people who are watching at

00:45:44,819 --> 00:45:50,339
home now which I think they're about 30

00:45:47,250 --> 00:45:51,690
or 40 people of them that are using the

00:45:50,339 --> 00:45:54,210
live streaming interface so I'll give

00:45:51,690 --> 00:45:57,390
you a quick tour this is what the front

00:45:54,210 --> 00:45:59,880
page looks like you get basically little

00:45:57,390 --> 00:46:02,609
previews a little log of what people

00:45:59,880 --> 00:46:04,770
saying and I are seeing a twitter stream

00:46:02,609 --> 00:46:06,750
thing and you get to see all the string

00:46:04,770 --> 00:46:10,829
preview of the streams a little

00:46:06,750 --> 00:46:13,619
description of what's going on when you

00:46:10,829 --> 00:46:18,210
log in and click on one of those you get

00:46:13,619 --> 00:46:22,079
a video and an IRC web chat thing and a

00:46:18,210 --> 00:46:24,420
little Twitter thing down the bottom if

00:46:22,079 --> 00:46:26,010
you try and go to this on the conference

00:46:24,420 --> 00:46:27,510
network right now you'll get this

00:46:26,010 --> 00:46:29,400
interface because you're at the

00:46:27,510 --> 00:46:32,430
conference and we don't want you to

00:46:29,400 --> 00:46:34,530
crush the network

00:46:32,430 --> 00:46:38,580
reaming video for the thing that's right

00:46:34,530 --> 00:46:42,360
in front of your eyes it's designed to

00:46:38,580 --> 00:46:44,790
try and connect streaming users into the

00:46:42,360 --> 00:46:48,480
conference right you could sit there and

00:46:44,790 --> 00:46:49,950
watch the videos I'm anytime but you

00:46:48,480 --> 00:46:52,730
really want to be involved in the

00:46:49,950 --> 00:46:56,310
conference so integrates with Twitter

00:46:52,730 --> 00:46:58,770
IRC it basically uses a free node web

00:46:56,310 --> 00:47:01,370
chat for IRC so you could jump on and

00:46:58,770 --> 00:47:07,050
talk to the streaming people right now

00:47:01,370 --> 00:47:09,720
it uses web M so yay for Foss it also

00:47:07,050 --> 00:47:13,410
has flash for all those people who are

00:47:09,720 --> 00:47:16,470
stuck on ie or other things also offers

00:47:13,410 --> 00:47:20,670
audio only if you're like stuck in the

00:47:16,470 --> 00:47:23,250
Galapagos Islands or something it offers

00:47:20,670 --> 00:47:26,370
low and high bandwidth versions so if

00:47:23,250 --> 00:47:29,610
you're on a crappy slow ADSL you should

00:47:26,370 --> 00:47:32,280
still be able to get watched video the

00:47:29,610 --> 00:47:36,710
basic setup is we take a DV switch set

00:47:32,280 --> 00:47:40,290
up we connect the flu motion we stream a

00:47:36,710 --> 00:47:42,540
kind of medium quality thing up to

00:47:40,290 --> 00:47:47,730
encoder which then encodes it to all the

00:47:42,540 --> 00:47:50,580
formats and sends it to the user so how

00:47:47,730 --> 00:47:52,170
did we go this year we had one track

00:47:50,580 --> 00:47:54,890
streaming pretty much a hundred percent

00:47:52,170 --> 00:47:57,600
of time that was this room here d 5

00:47:54,890 --> 00:47:59,730
which I think was pretty awesome we had

00:47:57,600 --> 00:48:01,680
four tracks streaming sixty percent at a

00:47:59,730 --> 00:48:04,140
time there are a few issues with the

00:48:01,680 --> 00:48:06,150
multitrack stuff we didn't stream many

00:48:04,140 --> 00:48:08,810
of the tutorials I made a hundred

00:48:06,150 --> 00:48:12,090
commits to the code base over the last

00:48:08,810 --> 00:48:15,330
couple of days we're averaging about a

00:48:12,090 --> 00:48:17,460
hundred viewers we're entering about

00:48:15,330 --> 00:48:19,470
three hundred mega bit of traffic for

00:48:17,460 --> 00:48:23,250
the preview images which always

00:48:19,470 --> 00:48:25,980
surprised me about 80 megabits constant

00:48:23,250 --> 00:48:28,440
for the streams that two things always

00:48:25,980 --> 00:48:30,930
surprise me that the not the other way

00:48:28,440 --> 00:48:35,100
around we had about 3,000 unique

00:48:30,930 --> 00:48:37,920
visitors it's all written in Python with

00:48:35,100 --> 00:48:40,440
little asterisks flim oceans written in

00:48:37,920 --> 00:48:43,020
Python front ends Django helper scripts

00:48:40,440 --> 00:48:45,030
of Python if you've got any feedback

00:48:43,020 --> 00:48:45,850
this is mainly talking to the people

00:48:45,030 --> 00:48:48,970
watching at home

00:48:45,850 --> 00:48:54,250
now not you guys in here email me or

00:48:48,970 --> 00:48:56,170
tweet me the codes at github and if you

00:48:54,250 --> 00:48:59,290
want to see this happen please talk to

00:48:56,170 --> 00:49:01,570
Pike on and the psf and tell them that

00:48:59,290 --> 00:49:05,140
you want this to happen because I'm

00:49:01,570 --> 00:49:07,480
quite happy to help make it happen just

00:49:05,140 --> 00:49:09,640
some other things I've been developing a

00:49:07,480 --> 00:49:12,700
portable setup of this so if you're a

00:49:09,640 --> 00:49:15,400
user group you can basically do this it

00:49:12,700 --> 00:49:17,800
only requires a power plug it users like

00:49:15,400 --> 00:49:21,490
mobile network and that type of stuff to

00:49:17,800 --> 00:49:25,510
trunk back it's a fairly cheap set up

00:49:21,490 --> 00:49:27,610
and it's very low touch you set it up

00:49:25,510 --> 00:49:29,740
and it walks you through how to set it

00:49:27,610 --> 00:49:30,970
up and then you're done and you don't

00:49:29,740 --> 00:49:34,600
have to touch it until it's time to

00:49:30,970 --> 00:49:37,770
close and if you're more interested I've

00:49:34,600 --> 00:49:40,770
got a longer talk on youtube at that URL

00:49:37,770 --> 00:49:40,770
thank

00:49:47,380 --> 00:49:54,470
all right next up Luke Mackin speaking

00:49:52,760 --> 00:49:56,890
about parasites can I get Peter waiting

00:49:54,470 --> 00:49:56,890
on deck please

00:50:37,230 --> 00:50:46,510
check Luke Mackin and I'm a software

00:50:44,950 --> 00:50:48,850
engineer Red Hat and I work on the

00:50:46,510 --> 00:50:50,800
Fedora project and I just want to

00:50:48,850 --> 00:50:55,150
quickly show you a little tool I wrote

00:50:50,800 --> 00:50:57,160
today called pires site and just to give

00:50:55,150 --> 00:51:00,280
you a little background on it recently I

00:50:57,160 --> 00:51:02,700
was trying to debug a memory leak in a

00:51:00,280 --> 00:51:05,590
web app of mine and I wanted to use

00:51:02,700 --> 00:51:07,960
Mellie I which is a pretty sweet library

00:51:05,590 --> 00:51:10,570
for dumping out object memory usage

00:51:07,960 --> 00:51:12,910
statistics and I wanted to use this

00:51:10,570 --> 00:51:15,760
without having to alter my program so

00:51:12,910 --> 00:51:18,430
one day Dave Malcolm and I sat down and

00:51:15,760 --> 00:51:21,310
we figured out a pretty cool way to

00:51:18,430 --> 00:51:26,770
inject arbitrary code into a running

00:51:21,310 --> 00:51:30,610
Python process and we do this using gdb

00:51:26,770 --> 00:51:32,860
as you can see we use gdb to attach to

00:51:30,610 --> 00:51:35,860
the process and then we call a bunch of

00:51:32,860 --> 00:51:39,730
C Python functions first we grab the

00:51:35,860 --> 00:51:44,680
gill then we alter the path and then we

00:51:39,730 --> 00:51:46,750
run the file what's awesome is you don't

00:51:44,680 --> 00:51:48,910
even need the Python debugging symbols

00:51:46,750 --> 00:51:51,520
installed for this to work there's some

00:51:48,910 --> 00:51:56,080
black magic within gdb that can figure

00:51:51,520 --> 00:51:57,580
out all the arguments and such so I

00:51:56,080 --> 00:52:00,310
released one point 0 a little while ago

00:51:57,580 --> 00:52:03,340
and this contains a command-line tool

00:52:00,310 --> 00:52:04,900
you give it a dot pi file and a pig and

00:52:03,340 --> 00:52:07,050
it will run that pie file in your

00:52:04,900 --> 00:52:10,030
process it also comes with a little

00:52:07,050 --> 00:52:12,970
console viewer for Mellie I viewing the

00:52:10,030 --> 00:52:15,400
largest objects in your program it also

00:52:12,970 --> 00:52:17,440
has a little API and a variety of

00:52:15,400 --> 00:52:20,830
example payloads such as hello world the

00:52:17,440 --> 00:52:22,600
memory dumper and a reverse shell so

00:52:20,830 --> 00:52:25,420
during the sprints I plan to release

00:52:22,600 --> 00:52:32,820
version 2 point 0 of Pyra site which

00:52:25,420 --> 00:52:32,820
includes oh boy

00:52:33,309 --> 00:52:45,859
awesome where we at it's awesome I swear

00:52:43,369 --> 00:52:48,410
I'm just got to find it ok here we go

00:52:45,859 --> 00:52:51,589
much easier all right so pyro site

00:52:48,410 --> 00:52:53,660
includes a GUI to point o as you can see

00:52:51,589 --> 00:52:55,039
on the left hand side it shows you all

00:52:53,660 --> 00:52:57,259
of the Python programs you're running

00:52:55,039 --> 00:53:01,490
that have a virtual machine a python vm

00:52:57,259 --> 00:53:03,500
in it when you click on it it injects a

00:53:01,490 --> 00:53:07,880
reverse shell payload that connects back

00:53:03,500 --> 00:53:13,730
to pires site and you get a list of cpu

00:53:07,880 --> 00:53:18,730
usage memory usage io activity thread

00:53:13,730 --> 00:53:21,200
activity open files open connections and

00:53:18,730 --> 00:53:23,329
actually this is a WebKit widget this is

00:53:21,200 --> 00:53:26,150
all written using gtk3 and the new g

00:53:23,329 --> 00:53:27,740
object introspection api and this is

00:53:26,150 --> 00:53:31,569
actually a WebKit widget and I inject

00:53:27,740 --> 00:53:34,190
jquery into it to do these fancy graphs

00:53:31,569 --> 00:53:36,680
we got another tab that shows you all of

00:53:34,190 --> 00:53:42,559
the stacks for all of your running

00:53:36,680 --> 00:53:44,240
threads then over here it shows you all

00:53:42,559 --> 00:53:46,759
of the largest objects in your program

00:53:44,240 --> 00:53:52,220
if you click on any of them it will show

00:53:46,759 --> 00:53:55,910
you the live value of it we also have a

00:53:52,220 --> 00:53:59,930
shell and you can just execute code in

00:53:55,910 --> 00:54:05,809
the process and we also generate a call

00:53:59,930 --> 00:54:07,190
graph using pi call graph and one of the

00:54:05,809 --> 00:54:08,900
coolest things I like to do with this

00:54:07,190 --> 00:54:15,789
see if I can pull this off I can't even

00:54:08,900 --> 00:54:15,789
see it did I just click on vim all right

00:54:16,869 --> 00:54:24,680
all right let me just kill some of this

00:54:23,029 --> 00:54:30,589
I actually wasn't prepared to give this

00:54:24,680 --> 00:54:33,349
right now as you can tell alright so

00:54:30,589 --> 00:54:36,559
then they're rare so one of my cool one

00:54:33,349 --> 00:54:39,490
of my favorite things to do is you can

00:54:36,559 --> 00:54:39,490
attach to vim and

00:54:41,800 --> 00:54:52,600
I can't even see this oh nice thank you

00:54:48,180 --> 00:54:54,460
all right so as you can tell I just

00:54:52,600 --> 00:54:57,610
interacted with Vince python bindings

00:54:54,460 --> 00:54:59,350
and altered the current buffer so

00:54:57,610 --> 00:55:01,030
there's lots of crazy things you can do

00:54:59,350 --> 00:55:03,280
with this if you're interested I'll be

00:55:01,030 --> 00:55:04,960
around through all the sprints and I'd

00:55:03,280 --> 00:55:07,710
love to hear any ideas that you have

00:55:04,960 --> 00:55:07,710
thank you

00:55:15,740 --> 00:55:20,700
all right next up we have Peter Wang

00:55:18,480 --> 00:55:24,210
talking about dsl's in Python can I get

00:55:20,700 --> 00:55:27,510
Alexis tabary on deck please hi everyone

00:55:24,210 --> 00:55:29,400
my name is Peter and I'm going to talk

00:55:27,510 --> 00:55:31,290
really briefly about a little hack i did

00:55:29,400 --> 00:55:33,570
a PI code calm how many guys are we're

00:55:31,290 --> 00:55:37,020
at PI coat off how many of you remember

00:55:33,570 --> 00:55:38,850
those watermelon mojitos okay all right

00:55:37,020 --> 00:55:40,260
well if you really enjoyed them you

00:55:38,850 --> 00:55:41,730
don't remember them right I didn't

00:55:40,260 --> 00:55:43,440
remember them because I was in the hotel

00:55:41,730 --> 00:55:45,000
room hacking this crazy idea i had for

00:55:43,440 --> 00:55:46,770
basically doing a really nice wrapper

00:55:45,000 --> 00:55:47,850
around an import hook you know kind of

00:55:46,770 --> 00:55:50,370
stuff that we don't lose you this

00:55:47,850 --> 00:55:53,130
morning to let you kind of do your own

00:55:50,370 --> 00:55:55,710
little syntactic transformations to to

00:55:53,130 --> 00:55:57,600
Python code or code that looks kind of

00:55:55,710 --> 00:56:01,200
like Python before it gets before hits

00:55:57,600 --> 00:56:03,230
the the interpreter and so let me just

00:56:01,200 --> 00:56:06,000
show you quickly what I mean by that

00:56:03,230 --> 00:56:09,150
here's some source code that is a

00:56:06,000 --> 00:56:10,500
function that embeds embeds a sequel

00:56:09,150 --> 00:56:12,360
statement and the key thing here force

00:56:10,500 --> 00:56:13,800
is this new extern keyword right you're

00:56:12,360 --> 00:56:16,380
like what the hell is that thing so

00:56:13,800 --> 00:56:17,610
extern basically is the mechanism by

00:56:16,380 --> 00:56:19,710
which is the key where I look for when

00:56:17,610 --> 00:56:21,960
I'm scanning this file to call out to

00:56:19,710 --> 00:56:24,270
some kind of little dsl processor in

00:56:21,960 --> 00:56:26,250
this case its sequel and i'm just going

00:56:24,270 --> 00:56:28,730
to inline the sequel statement and you

00:56:26,250 --> 00:56:31,710
can the key things to note here are that

00:56:28,730 --> 00:56:34,020
min age and max age are pulled out of

00:56:31,710 --> 00:56:36,300
the local namespace and when i'm done

00:56:34,020 --> 00:56:39,420
with it name and age are injected back

00:56:36,300 --> 00:56:41,400
into the local namespace and so i will

00:56:39,420 --> 00:56:43,320
show you this thing actually runs you

00:56:41,400 --> 00:56:46,290
can see I have a little a bootstrapper a

00:56:43,320 --> 00:56:49,020
little test script all I do is I import

00:56:46,290 --> 00:56:50,790
pi dsl i register with the debug turned

00:56:49,020 --> 00:56:53,040
on of course and then i'm going to

00:56:50,790 --> 00:56:55,380
import my module test one and imma call

00:56:53,040 --> 00:56:56,430
the sequel function and let me just show

00:56:55,380 --> 00:56:58,200
you the data I'm actually running this

00:56:56,430 --> 00:57:00,990
on it's just a little simple database

00:56:58,200 --> 00:57:05,160
the two tables any fans of community

00:57:00,990 --> 00:57:08,760
here no okay there we go that's right

00:57:05,160 --> 00:57:10,350
slow clap when I say that na anyway I'm

00:57:08,760 --> 00:57:13,350
going to run this and you'll see it

00:57:10,350 --> 00:57:16,080
actually it works right very say what

00:57:13,350 --> 00:57:19,530
streets ahead that's right so basically

00:57:16,080 --> 00:57:20,430
the idea here is to be able to embed you

00:57:19,530 --> 00:57:23,690
know the sort of if you look what

00:57:20,430 --> 00:57:23,690
actually does it's very simple

00:57:24,140 --> 00:57:31,740
basically it it just transforms the

00:57:29,220 --> 00:57:32,880
input it basically calls pi dsl that

00:57:31,740 --> 00:57:35,220
interpreters it looks for one called

00:57:32,880 --> 00:57:36,660
sequel passing the arguments and then it

00:57:35,220 --> 00:57:38,460
just triple quotes the string you're

00:57:36,660 --> 00:57:39,630
like what's pretty obvious right but

00:57:38,460 --> 00:57:41,760
it's nice little you know wrapper around

00:57:39,630 --> 00:57:43,830
the stuff this is a nice little trick

00:57:41,760 --> 00:57:45,210
that Nick Coughlin turned me on to that

00:57:43,830 --> 00:57:47,490
apparently he said it doesn't work in

00:57:45,210 --> 00:57:49,380
Python 3 but anyway this is a way of

00:57:47,490 --> 00:57:51,720
ejecting back into kind of the the

00:57:49,380 --> 00:57:55,980
enclosing namespace and in any case this

00:57:51,720 --> 00:57:57,390
this does this thing basically it works

00:57:55,980 --> 00:57:59,610
it's small i mean if you want to see how

00:57:57,390 --> 00:58:01,350
it's implemented it's actually really

00:57:59,610 --> 00:58:02,970
pretty straightforward I've just got an

00:58:01,350 --> 00:58:05,370
import hook that goes through and

00:58:02,970 --> 00:58:07,320
creates a DSL importer that you know

00:58:05,370 --> 00:58:09,240
loads right module and then basically

00:58:07,320 --> 00:58:11,910
does some transformation on the text and

00:58:09,240 --> 00:58:13,380
then calls your particular interpreter

00:58:11,910 --> 00:58:15,900
object so you can extend this to any

00:58:13,380 --> 00:58:18,210
number of things the idea here is to be

00:58:15,900 --> 00:58:22,080
able to do stuff like you know extern

00:58:18,210 --> 00:58:24,990
Python 2k or 2.7 not 2k 2.7 extra in

00:58:22,080 --> 00:58:27,270
Python 3k extra insight on you know

00:58:24,990 --> 00:58:30,360
slapping some HTML if you don't have you

00:58:27,270 --> 00:58:31,500
no significant whitespace you can for

00:58:30,360 --> 00:58:33,180
instance resolve on these long-standing

00:58:31,500 --> 00:58:35,760
requests in a scientific community which

00:58:33,180 --> 00:58:38,010
is a matrix multiply operator my my

00:58:35,760 --> 00:58:39,870
proposal is to use bracket star bracket

00:58:38,010 --> 00:58:42,000
instead of Tildy bracket ildy star but

00:58:39,870 --> 00:58:42,870
anyway the point of this okay so you're

00:58:42,000 --> 00:58:43,800
looking at this new kind of other

00:58:42,870 --> 00:58:47,010
scratching your head or you're shaking

00:58:43,800 --> 00:58:49,860
your head and so I admit it's a terrible

00:58:47,010 --> 00:58:51,390
idea it potentially fragments a language

00:58:49,860 --> 00:58:53,400
right anything that sufficiently is

00:58:51,390 --> 00:58:54,950
expressive for dsl's you end up with

00:58:53,400 --> 00:58:57,510
your writing all sorts of weird stuff

00:58:54,950 --> 00:59:00,690
there's no ID support you saw that I had

00:58:57,510 --> 00:59:03,060
to kind of you know if you embed HTML in

00:59:00,690 --> 00:59:05,370
Python it's your IDs not going to know

00:59:03,060 --> 00:59:07,020
what to do with it you can do stupid

00:59:05,370 --> 00:59:09,270
things and no one can stop you you don't

00:59:07,020 --> 00:59:11,040
have to ask Python dev you don't have to

00:59:09,270 --> 00:59:12,870
get on to python ideas and be told

00:59:11,040 --> 00:59:15,300
you're an idiot you can just do it right

00:59:12,870 --> 00:59:16,830
this stuff is hosted on on bitbucket you

00:59:15,300 --> 00:59:19,830
can download it it's a few hundred lines

00:59:16,830 --> 00:59:21,630
it works it's pure python it's a very

00:59:19,830 --> 00:59:23,550
bad implementation as you saw basically

00:59:21,630 --> 00:59:25,530
it's a it's just a macro preprocessor

00:59:23,550 --> 00:59:27,180
it's you do essentially the same thing

00:59:25,530 --> 00:59:28,920
with triple quotes and exec you're

00:59:27,180 --> 00:59:30,300
really playing outside of God's house I

00:59:28,920 --> 00:59:32,550
mean you're just running essentially a

00:59:30,300 --> 00:59:34,830
dot H file you're doing dot H sort of

00:59:32,550 --> 00:59:36,840
thing for Python and yet

00:59:34,830 --> 00:59:38,490
and yet in spite of the fact that it's a

00:59:36,840 --> 00:59:39,930
bad idea you find that many people to

00:59:38,490 --> 00:59:41,490
actually find this useful many people

00:59:39,930 --> 00:59:43,400
are actually doing this thing already or

00:59:41,490 --> 00:59:46,200
have in tempted to do this sort of thing

00:59:43,400 --> 00:59:48,390
those who don't do exactly this abuse

00:59:46,200 --> 00:59:49,650
meta classes to do this to do ORM s I

00:59:48,390 --> 00:59:53,310
think you guys probably know I'm talking

00:59:49,650 --> 00:59:54,510
about and then the the the temptation of

00:59:53,310 --> 00:59:57,450
course is to move on and start abusing

00:59:54,510 --> 00:59:59,730
the with statement as well so there's

00:59:57,450 --> 01:00:01,020
also all these peps for syntax changes

00:59:59,730 --> 01:00:03,390
and whatnot we want to have to further

01:00:01,020 --> 01:00:05,520
valuation on expressions so and so forth

01:00:03,390 --> 01:00:08,040
for small functional transformations how

01:00:05,520 --> 01:00:10,440
do we do that so the idea here is

01:00:08,040 --> 01:00:12,960
basically to have support for micro

01:00:10,440 --> 01:00:14,580
dsl's the idea is that python scratches

01:00:12,960 --> 01:00:16,890
99 percent of our itches for the most

01:00:14,580 --> 01:00:18,540
parts beautiful language lastly 1% we

01:00:16,890 --> 01:00:19,710
can we can actually tackle with this

01:00:18,540 --> 01:00:23,300
sort of thing you want to tweak a little

01:00:19,710 --> 01:00:27,060
bit here there you don't do stupid stuff

01:00:23,300 --> 01:00:30,750
with it a thousand times no do not do

01:00:27,060 --> 01:00:32,370
that and basically the idea is to

01:00:30,750 --> 01:00:33,810
experiment with micro dsl's you don't

01:00:32,370 --> 01:00:35,670
have to argue about it in peps back and

01:00:33,810 --> 01:00:37,350
forth you just play if something works

01:00:35,670 --> 01:00:39,330
out well it's useful then we actually

01:00:37,350 --> 01:00:41,160
have use cases to drive discussion and

01:00:39,330 --> 01:00:43,320
so here's some related work my thon

01:00:41,160 --> 01:00:45,000
excellent project by John real it gives

01:00:43,320 --> 01:00:47,280
you a full quote operator in Python

01:00:45,000 --> 01:00:49,850
those Uli's Lisp and you can intercept

01:00:47,280 --> 01:00:52,050
at any point basically in the Python

01:00:49,850 --> 01:00:53,580
interpretation stage there's a great

01:00:52,050 --> 01:00:57,270
thread on python ideas from Nick

01:00:53,580 --> 01:00:59,250
Coughlin email me or sign up on the

01:00:57,270 --> 01:01:01,560
mailing list there check out the code

01:00:59,250 --> 01:01:02,580
it's very it's very small right now just

01:01:01,560 --> 01:01:03,750
starting out but I would love to have

01:01:02,580 --> 01:01:06,980
more ideas from people who want to use

01:01:03,750 --> 01:01:06,980
the sort of thing thank you very much

01:01:11,330 --> 01:01:17,130
all right up next is Alexis tabary to

01:01:14,250 --> 01:01:20,700
talk about Jenkins and china panda hey

01:01:17,130 --> 01:01:25,100
so I'm Alexis I'm coming from France and

01:01:20,700 --> 01:01:28,290
we're going to talk about testing on

01:01:25,100 --> 01:01:33,030
many versions of Python at the same time

01:01:28,290 --> 01:01:36,240
with using Jenkins so I guess lots of

01:01:33,030 --> 01:01:40,010
you have heard about Jenkins who knows

01:01:36,240 --> 01:01:42,300
Jenkins yes quite some people so it's a

01:01:40,010 --> 01:01:47,700
what we call a continuous integration

01:01:42,300 --> 01:01:50,130
server which means basically that it run

01:01:47,700 --> 01:01:55,160
tests unit tests and lots of things like

01:01:50,130 --> 01:01:57,960
that and drinking this may be one of the

01:01:55,160 --> 01:02:01,050
main open source continuation in

01:01:57,960 --> 01:02:08,370
integration server with over 300 plugins

01:02:01,050 --> 01:02:11,310
it's huge it's Java and it's bloated so

01:02:08,370 --> 01:02:13,830
we added a little bit of broth with our

01:02:11,310 --> 01:02:19,890
own plugin called The Shining panda

01:02:13,830 --> 01:02:23,100
plugin so you can focus on github be

01:02:19,890 --> 01:02:27,510
careful its Java you might fall into

01:02:23,100 --> 01:02:30,990
boredom and it provides many useful

01:02:27,510 --> 01:02:35,640
tools to work with a Python and and and

01:02:30,990 --> 01:02:39,210
Jenkins so I'm going to do a very quick

01:02:35,640 --> 01:02:43,350
demo of height looks like to use Jenkins

01:02:39,210 --> 01:02:46,860
with this plug-in using pigments so it's

01:02:43,350 --> 01:02:51,660
a no pencils project to highlight it's a

01:02:46,860 --> 01:02:58,380
Python syntax highlighter so let's just

01:02:51,660 --> 01:03:02,610
go dancer oops beside this okay so this

01:02:58,380 --> 01:03:06,180
is this is Jenkins so I'm going to

01:03:02,610 --> 01:03:08,940
create a new job just call it demo and

01:03:06,180 --> 01:03:11,940
select a build multi configuration

01:03:08,940 --> 01:03:13,980
project oh this here on the on the left

01:03:11,940 --> 01:03:19,430
you can see that it's currently building

01:03:13,980 --> 01:03:19,430
it but anyway so

01:03:20,010 --> 01:03:26,490
so here the third thing we need to tell

01:03:23,670 --> 01:03:32,850
Jenkins is where to find the source code

01:03:26,490 --> 01:03:37,140
so it should be yes it's the repository

01:03:32,850 --> 01:03:41,570
of pigments is a mercurial repository so

01:03:37,140 --> 01:03:45,750
we are going to fetch the track and then

01:03:41,570 --> 01:03:49,980
we can choose when we want to run the

01:03:45,750 --> 01:03:53,550
test so we can simply Paul Paul

01:03:49,980 --> 01:03:56,070
mercurial for instance on a Harley basis

01:03:53,550 --> 01:03:58,350
so every how it's going to check if

01:03:56,070 --> 01:04:00,930
there are changes in the code base and

01:03:58,350 --> 01:04:06,510
if there are it will run all the tests

01:04:00,930 --> 01:04:09,720
so then we want to tell basically which

01:04:06,510 --> 01:04:14,160
Python version we want to test pigments

01:04:09,720 --> 01:04:18,660
on so for instance we can choose all C

01:04:14,160 --> 01:04:20,640
Python versions so this is provided by

01:04:18,660 --> 01:04:30,870
The Shining panda breaking this part the

01:04:20,640 --> 01:04:32,700
this little Python axis so when you

01:04:30,870 --> 01:04:36,120
install the plug-in you need to tell

01:04:32,700 --> 01:04:40,650
where your your Python interpreters are

01:04:36,120 --> 01:04:44,550
installed so here we're going to test it

01:04:40,650 --> 01:04:46,800
against all C Python versions but the

01:04:44,550 --> 01:04:52,730
plugin also spots pi PI star class

01:04:46,800 --> 01:04:56,250
button or giant image editing so then

01:04:52,730 --> 01:04:58,670
that's one thing that we've added it's

01:04:56,250 --> 01:05:02,130
called the v12 builder it basically

01:04:58,670 --> 01:05:06,210
spawn a v12 in which to run all the

01:05:02,130 --> 01:05:10,620
tests so basically basically you just

01:05:06,210 --> 01:05:12,720
tell stuff like pip install we're going

01:05:10,620 --> 01:05:18,150
to need the news coverage to run the

01:05:12,720 --> 01:05:22,070
test and then we we just paste the

01:05:18,150 --> 01:05:26,910
comment to to actually run this test so

01:05:22,070 --> 01:05:31,560
using coverage so coverage run tests

01:05:26,910 --> 01:05:33,670
render pie and then coverage XE XML to

01:05:31,560 --> 01:05:38,349
generate the the files

01:05:33,670 --> 01:05:43,299
and and and that's it that that's all we

01:05:38,349 --> 01:05:45,339
need to do to to integrate that is to

01:05:43,299 --> 01:05:50,200
say to test pigments with all these

01:05:45,339 --> 01:05:54,400
Python versions so we can try to run

01:05:50,200 --> 01:05:56,950
this test but takes a little white so I

01:05:54,400 --> 01:05:59,799
don't think we actually have the time to

01:05:56,950 --> 01:06:02,109
see what what will be happening so here

01:05:59,799 --> 01:06:08,440
you can see that we have all the C

01:06:02,109 --> 01:06:10,540
Python version and so I launched it

01:06:08,440 --> 01:06:14,109
before so that we could see what it

01:06:10,540 --> 01:06:20,920
looks like after the bills are run so as

01:06:14,109 --> 01:06:24,549
you can see basically with C Python from

01:06:20,920 --> 01:06:26,859
version 2.4 up to 2.7 it blew it mean

01:06:24,549 --> 01:06:29,500
that pigments is working but it's not

01:06:26,859 --> 01:06:35,859
compatible with Python 3 it doesn't work

01:06:29,500 --> 01:06:42,359
neither with fight on 3.1 93.2 so well

01:06:35,859 --> 01:06:42,359
so that that's it thanks a lot

01:06:47,320 --> 01:06:51,830
alright next we have James Bennett's

01:06:49,880 --> 01:06:54,700
talk about boring Django stuff I can I

01:06:51,830 --> 01:06:59,150
get Fabio applied you're on deck please

01:06:54,700 --> 01:07:01,550
okay those of you don't know me my name

01:06:59,150 --> 01:07:04,520
is James Bennett I'm the release manager

01:07:01,550 --> 01:07:07,220
for Django I'm been on the core team for

01:07:04,520 --> 01:07:09,440
a number of years now release managing

01:07:07,220 --> 01:07:11,690
Django is really boring it involves a

01:07:09,440 --> 01:07:14,000
lot of bureaucracy I'm going to talk

01:07:11,690 --> 01:07:16,610
about some boring release related things

01:07:14,000 --> 01:07:19,040
and hopefully not put you to sleep so

01:07:16,610 --> 01:07:22,610
something you may be aware of Django

01:07:19,040 --> 01:07:24,230
version 1.4 is coming in fact with luck

01:07:22,610 --> 01:07:27,260
we will be releasing it within the next

01:07:24,230 --> 01:07:29,900
couple days there's so much awesome

01:07:27,260 --> 01:07:31,490
stuff in Django 1.4 that I don't

01:07:29,900 --> 01:07:33,920
actually have time in a lightning talk

01:07:31,490 --> 01:07:36,410
or probably even in a regular half-hour

01:07:33,920 --> 01:07:38,000
talk to go over all of it we have you

01:07:36,410 --> 01:07:39,770
know the better password hashing how

01:07:38,000 --> 01:07:43,040
many people don't want a monkey patch to

01:07:39,770 --> 01:07:45,800
use bcrypt you get to do that in 1.4 you

01:07:43,040 --> 01:07:47,540
can just do it django projects are

01:07:45,800 --> 01:07:50,060
becoming whiskey applications we will

01:07:47,540 --> 01:07:52,100
generate a whiskey top I file for you

01:07:50,060 --> 01:07:54,410
that is a standard whiskey callable the

01:07:52,100 --> 01:07:57,980
whiskey gets a lot easier we have

01:07:54,410 --> 01:07:59,720
sensible time zones we have signing

01:07:57,980 --> 01:08:01,550
cookies we have you know scary

01:07:59,720 --> 01:08:03,950
cryptographic stuff that actually works

01:08:01,550 --> 01:08:08,090
we didn't write our own crypto thank God

01:08:03,950 --> 01:08:09,230
as everybody says not to do that we're

01:08:08,090 --> 01:08:11,960
going to be working on this a little bit

01:08:09,230 --> 01:08:13,490
at the sprint right now we do have a

01:08:11,960 --> 01:08:15,860
release candidate out that came out last

01:08:13,490 --> 01:08:18,290
week if you know of bugs that could

01:08:15,860 --> 01:08:20,240
block the release of django 1.4 please

01:08:18,290 --> 01:08:22,970
go file them in track and let us know

01:08:20,240 --> 01:08:25,030
about them because we are hopefully

01:08:22,970 --> 01:08:28,040
going to be releasing during sprints

01:08:25,030 --> 01:08:30,020
possibly maybe tuesday or wednesday is

01:08:28,040 --> 01:08:31,880
where i'm targeting right now we will

01:08:30,020 --> 01:08:35,900
get to announce the birth of a brand new

01:08:31,880 --> 01:08:37,940
baby django 1.4 so hopefully that's not

01:08:35,900 --> 01:08:40,010
too boring hopefully i haven't put you

01:08:37,940 --> 01:08:45,820
to sleep with all this you know talk of

01:08:40,010 --> 01:08:48,820
0 humdrum ODB tablespace support oh dear

01:08:45,820 --> 01:08:48,820
but

01:08:48,880 --> 01:08:53,029
there is one other thing I wanted to

01:08:50,929 --> 01:08:55,940
mention this came out of a lightning

01:08:53,029 --> 01:08:59,540
talk that I saw yesterday this is Django

01:08:55,940 --> 01:09:01,909
one point for Django 1.5 is probably

01:08:59,540 --> 01:09:03,739
going to be coming this fall and there's

01:09:01,909 --> 01:09:06,020
something very important that will maybe

01:09:03,739 --> 01:09:10,130
you know be not quite so boring to

01:09:06,020 --> 01:09:13,159
people in this room Django 1.4 coming up

01:09:10,130 --> 01:09:15,409
you know this coming week is sort of the

01:09:13,159 --> 01:09:18,020
last in a deprecation process we've been

01:09:15,409 --> 01:09:21,580
doing the minimum supported Python

01:09:18,020 --> 01:09:24,980
version in Django 1.4 is python 2.5

01:09:21,580 --> 01:09:28,659
maximum supported is Python 2.7 we've

01:09:24,980 --> 01:09:34,159
been dropping one old Python to point

01:09:28,659 --> 01:09:38,989
out Django 1.5 will support a minimum of

01:09:34,159 --> 01:09:43,870
python 2.6 Django 1.5 will experimental

01:09:38,989 --> 01:09:43,870
II target up to python 3.3

01:09:47,890 --> 01:09:52,810
and you know I figure that's kind of

01:09:51,460 --> 01:09:56,250
boring but you guys would want to know

01:09:52,810 --> 01:09:56,250
anyway so thank you

01:10:03,310 --> 01:10:08,500
look next up we have Fabio pleasure

01:10:06,070 --> 01:10:12,010
speaking about alchemy you I can I get

01:10:08,500 --> 01:10:16,840
Remy to cause my car on deck please so

01:10:12,010 --> 01:10:19,540
hello everybody I'm Fabio and first of

01:10:16,840 --> 01:10:23,980
all a little disclaimer and it was

01:10:19,540 --> 01:10:27,010
supposed to to run this demo on my

01:10:23,980 --> 01:10:28,930
ubuntu boot but actually i had problems

01:10:27,010 --> 01:10:32,110
with the projector so it's running on

01:10:28,930 --> 01:10:38,260
windows I hope nothing bad happens it

01:10:32,110 --> 01:10:41,260
should work and I'm first of all I'm I'd

01:10:38,260 --> 01:10:47,500
like to talk about alchemy and it's a

01:10:41,260 --> 01:10:52,770
sort of prototype an idea if I had some

01:10:47,500 --> 01:10:55,900
some time ago that its focus focus it on

01:10:52,770 --> 01:10:59,920
all those peoples that claims that

01:10:55,900 --> 01:11:04,240
Europe IVA and that bike Python is not

01:10:59,920 --> 01:11:06,820
good for a GUI or interface general

01:11:04,240 --> 01:11:08,560
interface generation platform interface

01:11:06,820 --> 01:11:12,880
generation it's not actually it's not

01:11:08,560 --> 01:11:15,370
like other two other programming

01:11:12,880 --> 01:11:19,690
languages that comes with out with tools

01:11:15,370 --> 01:11:22,240
like visual studio or qt or whatever and

01:11:19,690 --> 01:11:24,430
we can just build your stuff really

01:11:22,240 --> 01:11:28,390
quickly and have your wrong owns

01:11:24,430 --> 01:11:30,940
interface but the other hand it's true

01:11:28,390 --> 01:11:33,640
many time I have to work with people

01:11:30,940 --> 01:11:35,500
with other degrees there are not

01:11:33,640 --> 01:11:38,050
developers they have their own little

01:11:35,500 --> 01:11:42,460
scripts and they just want some liang to

01:11:38,050 --> 01:11:45,420
face that to edit their stuff so the

01:11:42,460 --> 01:11:49,120
main idea is that to have a little

01:11:45,420 --> 01:11:55,420
lightweight module that interfaces their

01:11:49,120 --> 01:11:59,680
their own stuff and creates the GUI for

01:11:55,420 --> 01:12:04,630
them so i'll try to do some live demo

01:11:59,680 --> 01:12:09,070
right now and this code is a copy of a

01:12:04,630 --> 01:12:12,340
part of the sequel alchemy tutorial it's

01:12:09,070 --> 01:12:15,830
very easy you have your two models one

01:12:12,340 --> 01:12:19,760
model user with simple simple

01:12:15,830 --> 01:12:24,410
Fields columns and the address model

01:12:19,760 --> 01:12:28,640
with some fairly more complexes columns

01:12:24,410 --> 01:12:32,830
in one foreign key column and so let's

01:12:28,640 --> 01:12:35,870
Idzik you execute it inside the shell

01:12:32,830 --> 01:12:40,070
the interpreter should have take some

01:12:35,870 --> 01:12:48,320
time okay so now i have the the objects

01:12:40,070 --> 01:12:50,900
right here add user and an instance of

01:12:48,320 --> 01:12:55,940
them the model and i'd like to do

01:12:50,900 --> 01:13:02,420
something like an user like configure

01:12:55,940 --> 01:13:09,110
and just edit my stuff but i can i made

01:13:02,420 --> 01:13:12,740
this prototype that tries to be as

01:13:09,110 --> 01:13:15,140
lightweight as possible and on windows

01:13:12,740 --> 01:13:19,310
it takes a little bit more only 12 is

01:13:15,140 --> 01:13:27,410
just very fast and the main idea here is

01:13:19,310 --> 01:13:35,650
like to patch the objects okay so i

01:13:27,410 --> 01:13:39,590
forgot to the engine and right now i can

01:13:35,650 --> 01:13:44,270
run something like this and it should

01:13:39,590 --> 01:13:47,590
work yeah okay it's down to here and it

01:13:44,270 --> 01:13:52,930
generates the giri for the model and

01:13:47,590 --> 01:13:52,930
this this is quite simple and it just

01:13:54,070 --> 01:13:58,240
wrapped the object and now

01:14:02,750 --> 01:14:17,860
it was full name well now i have to i

01:14:10,430 --> 01:14:24,140
would like to batch also the other class

01:14:17,860 --> 01:14:29,600
yeah so oh i forgot forgot the engine

01:14:24,140 --> 01:14:37,340
again okay so i can do this as well with

01:14:29,600 --> 01:14:42,350
another instance and right now address

01:14:37,340 --> 01:14:49,460
has this foreign key that points the

01:14:42,350 --> 01:14:51,500
user the user class and it takes

01:14:49,460 --> 01:14:54,980
everything that is in the session and in

01:14:51,500 --> 01:14:57,650
the table and do some nice grid to

01:14:54,980 --> 01:15:00,340
choose it you can choose like which

01:14:57,650 --> 01:15:04,750
columns to display it has some nice

01:15:00,340 --> 01:15:11,630
feature searching features and so on

01:15:04,750 --> 01:15:16,250
let's try and select one okay okay but

01:15:11,630 --> 01:15:22,820
blah blah and now I have all my

01:15:16,250 --> 01:15:25,820
attributes just set for instance this is

01:15:22,820 --> 01:15:29,840
the idea of the user it also put that

01:15:25,820 --> 01:15:32,990
provides a direct like simple

01:15:29,840 --> 01:15:35,990
application interface and it allows you

01:15:32,990 --> 01:15:37,010
to create some details I'm afraid we're

01:15:35,990 --> 01:15:41,350
out of time so I'm gonna have to catch

01:15:37,010 --> 01:15:41,350
up sorry sorry thanks

01:15:44,310 --> 01:15:48,910
all right next up we have roaming to

01:15:46,900 --> 01:15:50,140
cause maker speaking about student

01:15:48,910 --> 01:15:58,270
engagement and kind of get Ricardo on

01:15:50,140 --> 01:15:59,650
deck please hi there everybody so first

01:15:58,270 --> 01:16:01,600
I think we should all just give a round

01:15:59,650 --> 01:16:03,010
of applause this is the last day of

01:16:01,600 --> 01:16:04,750
conference before the sprints for all

01:16:03,010 --> 01:16:07,390
the volunteers all the presenters all

01:16:04,750 --> 01:16:15,220
the speakers the psf just thank you

01:16:07,390 --> 01:16:16,930
everyone seriously so my name is Remy to

01:16:15,220 --> 01:16:19,150
cause maker and I'm a research associate

01:16:16,930 --> 01:16:22,330
at the RIT lab for technological

01:16:19,150 --> 01:16:24,640
literacy um my job is to connect the

01:16:22,330 --> 01:16:27,730
staff students and faculty with the Foss

01:16:24,640 --> 01:16:28,990
community and vice versa um here's some

01:16:27,730 --> 01:16:31,240
information about where you can find out

01:16:28,990 --> 01:16:34,660
about us twitter email and we hang out

01:16:31,240 --> 01:16:37,090
in pound RIT dash Foss on freenode so

01:16:34,660 --> 01:16:38,680
myself a few students and our

01:16:37,090 --> 01:16:40,720
compatriots attended the pike on web

01:16:38,680 --> 01:16:42,100
developer summit and at the end of the

01:16:40,720 --> 01:16:43,630
summit there was a question how many of

01:16:42,100 --> 01:16:47,110
you folks are looking for a job using

01:16:43,630 --> 01:16:49,600
Python and very few hands were raised in

01:16:47,110 --> 01:16:51,250
the room which was followed up with a

01:16:49,600 --> 01:16:53,980
question how many folks are looking to

01:16:51,250 --> 01:16:57,640
hire someone using Python and nearly all

01:16:53,980 --> 01:16:59,680
the hands were raised in the room so

01:16:57,640 --> 01:17:02,320
where do these types of hires come from

01:16:59,680 --> 01:17:04,000
well one place that it can come from is

01:17:02,320 --> 01:17:05,710
the Academy how many of you folks here

01:17:04,000 --> 01:17:09,490
in the audience are from academia are

01:17:05,710 --> 01:17:13,030
related all right so a decent amount of

01:17:09,490 --> 01:17:15,000
you and I think this ties in beautifully

01:17:13,030 --> 01:17:17,680
with the keynote we saw on the first day

01:17:15,000 --> 01:17:20,050
one of the Paul grams big ideas was

01:17:17,680 --> 01:17:22,120
changing the university was a

01:17:20,050 --> 01:17:28,150
transformative idea that was just on the

01:17:22,120 --> 01:17:29,530
right side of impossible we agree so big

01:17:28,150 --> 01:17:31,990
change is happening in the Academy with

01:17:29,530 --> 01:17:34,030
things like Codecademy teaching folks to

01:17:31,990 --> 01:17:36,310
code online in JavaScript I think they

01:17:34,030 --> 01:17:38,050
just added some Python lessons Khan

01:17:36,310 --> 01:17:40,420
Academy which I'm sure you folks are

01:17:38,050 --> 01:17:43,210
aware of where they're teaching with

01:17:40,420 --> 01:17:44,920
video Stanford's open courses which I

01:17:43,210 --> 01:17:47,440
think are located pretty close to here

01:17:44,920 --> 01:17:48,970
i'm not mistaken they were very

01:17:47,440 --> 01:17:51,550
successful this year with hundreds of

01:17:48,970 --> 01:17:52,930
thousands of students applying MIT

01:17:51,550 --> 01:17:53,800
opencourseware has been around for a

01:17:52,930 --> 01:17:55,150
long time

01:17:53,800 --> 01:17:56,470
and there are a ton of other ways that

01:17:55,150 --> 01:17:59,830
people are innovating in the academic

01:17:56,470 --> 01:18:02,080
space so in our little corner of the

01:17:59,830 --> 01:18:05,020
world up in Rochester New York we've

01:18:02,080 --> 01:18:08,050
been trying to do the same thing so we

01:18:05,020 --> 01:18:09,970
provide courses we provide students with

01:18:08,050 --> 01:18:11,830
coops and chances they in turn and work

01:18:09,970 --> 01:18:15,510
with fossil organizations we run

01:18:11,830 --> 01:18:18,370
hackathons so last year I spoke about a

01:18:15,510 --> 01:18:20,050
class that we offer on based on

01:18:18,370 --> 01:18:21,580
educational games for fourth grade math

01:18:20,050 --> 01:18:24,130
we've had forty eight thousand downloads

01:18:21,580 --> 01:18:25,600
in the last year we had a poster

01:18:24,130 --> 01:18:27,880
accepted at PyCon and these are the

01:18:25,600 --> 01:18:29,800
folks presenting it we had a seminar in

01:18:27,880 --> 01:18:32,370
interactive games of media we deployed

01:18:29,800 --> 01:18:36,640
on turbo gears to an open shift using

01:18:32,370 --> 01:18:39,160
real-time technology and Python land as

01:18:36,640 --> 01:18:40,660
well as open web technology and you can

01:18:39,160 --> 01:18:43,480
read the open syllabus on read the docs

01:18:40,660 --> 01:18:45,100
here's a picture of the class we run

01:18:43,480 --> 01:18:46,780
hackathons we've done things like the

01:18:45,100 --> 01:18:49,300
National stem challenge software freedom

01:18:46,780 --> 01:18:50,920
day hacks and hackers hackathon and many

01:18:49,300 --> 01:18:55,420
many more and this is what a typical

01:18:50,920 --> 01:18:57,070
scene looks like so outside of that

01:18:55,420 --> 01:18:59,140
we've placed co-ops at places like the

01:18:57,070 --> 01:19:00,840
wiki otic foundation sugar labs and we

01:18:59,140 --> 01:19:04,120
just landed some folks at the unicef

01:19:00,840 --> 01:19:05,380
American innovation the UNICEF

01:19:04,120 --> 01:19:08,710
Innovation Lab at the American

01:19:05,380 --> 01:19:10,600
University in Kosovo so we also had our

01:19:08,710 --> 01:19:12,670
latest co-op a Tom Romanov who's in the

01:19:10,600 --> 01:19:15,360
audience presenting a poster here's a

01:19:12,670 --> 01:19:19,000
picture is basically to create RIT spins

01:19:15,360 --> 01:19:20,890
RIT spins spins for RIT students based

01:19:19,000 --> 01:19:22,060
on fedora if you want to find out more

01:19:20,890 --> 01:19:24,970
information you can come and talk with

01:19:22,060 --> 01:19:26,650
us so the reason why I want to get up

01:19:24,970 --> 01:19:28,780
here and I think this is great is that

01:19:26,650 --> 01:19:30,520
we're going to be holding an academic

01:19:28,780 --> 01:19:33,810
and student engagement open space

01:19:30,520 --> 01:19:36,520
session tonight at 6pm in ballroom f2 um

01:19:33,810 --> 01:19:38,350
please if you folks are interested in

01:19:36,520 --> 01:19:40,390
engaging with students hiring them

01:19:38,350 --> 01:19:42,370
figuring out ways that we can get people

01:19:40,390 --> 01:19:44,530
to contribute back to the open source

01:19:42,370 --> 01:19:46,420
community particularly within academia

01:19:44,530 --> 01:19:47,860
we really want to talk to you our

01:19:46,420 --> 01:19:50,830
students have been kicking ass but they

01:19:47,860 --> 01:19:53,290
need Mentors they need sponsors and they

01:19:50,830 --> 01:19:54,880
need good projects to work on so help us

01:19:53,290 --> 01:19:56,680
with direction and please show up to the

01:19:54,880 --> 01:19:59,830
open session and come find us at the

01:19:56,680 --> 01:20:02,830
sprints Thank You the psf red hat in

01:19:59,830 --> 01:20:05,230
fedora CSI faust community all of you

01:20:02,830 --> 01:20:06,230
folks and here's the information again

01:20:05,230 --> 01:20:08,890
where you can find us

01:20:06,230 --> 01:20:08,890
thank you

01:20:20,620 --> 01:20:28,100
next we have Ricardo curtner is going to

01:20:22,940 --> 01:20:29,900
speak on config glue ok hi everyone so

01:20:28,100 --> 01:20:33,040
this is your just a shameless plug you

01:20:29,900 --> 01:20:37,310
want to show you some library off road

01:20:33,040 --> 01:20:41,330
so this is basically glue to glue

01:20:37,310 --> 01:20:44,060
together config parser an option parser

01:20:41,330 --> 01:20:46,730
so you have one single library to manage

01:20:44,060 --> 01:20:49,940
all your configuration so you can read

01:20:46,730 --> 01:20:53,000
stuff from your any files override them

01:20:49,940 --> 01:20:55,130
in the comment line just using option

01:20:53,000 --> 01:20:58,130
parser eventually our parser when I have

01:20:55,130 --> 01:21:00,470
the time to change it and the nice stuff

01:20:58,130 --> 01:21:02,180
about this is well its support if any

01:21:00,470 --> 01:21:05,270
style files which is quite compatible

01:21:02,180 --> 01:21:07,930
with almost everything it supports out

01:21:05,270 --> 01:21:10,160
of the box are hierarchical layers of

01:21:07,930 --> 01:21:12,800
configurations so you can locally

01:21:10,160 --> 01:21:15,020
override stuff in different files which

01:21:12,800 --> 01:21:17,720
is extremely useful for having

01:21:15,020 --> 01:21:20,960
environment specific configurations like

01:21:17,720 --> 01:21:22,970
production staging dev it's a schema

01:21:20,960 --> 01:21:24,410
base configuration so this is

01:21:22,970 --> 01:21:28,370
particularly important because allows

01:21:24,410 --> 01:21:32,270
you to do type checking and other kind

01:21:28,370 --> 01:21:36,200
of stuff as I said it uses up first to

01:21:32,270 --> 01:21:38,030
get Viacom align integration it allows

01:21:36,200 --> 01:21:41,660
you to validate your configuration by

01:21:38,030 --> 01:21:43,570
type checking scheme and stuff the most

01:21:41,660 --> 01:21:46,550
basic type already included like dicks

01:21:43,570 --> 01:21:49,010
lists tuples ins floats whatever and

01:21:46,550 --> 01:21:52,780
it's quite easy to extend with your own

01:21:49,010 --> 01:21:56,300
types so let's sorry just bonus there is

01:21:52,780 --> 01:21:59,239
jangles integration via another project

01:21:56,300 --> 01:22:01,730
called Jango config Lou let me show you

01:21:59,239 --> 01:22:04,010
a bit how this works so let's say I have

01:22:01,730 --> 01:22:06,680
a main function which does something the

01:22:04,010 --> 01:22:09,739
way i plug my configuration to that is

01:22:06,680 --> 01:22:13,640
we create a schema which is as we can

01:22:09,739 --> 01:22:16,010
see a basic the new trend way of

01:22:13,640 --> 01:22:18,830
defining stuff with the declarative

01:22:16,010 --> 01:22:21,350
syntax and then I pass that scheming to

01:22:18,830 --> 01:22:23,150
a function would I pass it also also a

01:22:21,350 --> 01:22:26,180
list of configuration files to read I

01:22:23,150 --> 01:22:28,370
will just take those validate against

01:22:26,180 --> 01:22:31,940
the schema to my to make sure all the

01:22:28,370 --> 01:22:32,679
types of right and provide you hooks too

01:22:31,940 --> 01:22:34,929
well

01:22:32,679 --> 01:22:37,719
hooks but expose those attributes on the

01:22:34,929 --> 01:22:40,300
command line so dash dash my option you

01:22:37,719 --> 01:22:44,709
can override that so let's see how that

01:22:40,300 --> 01:22:47,530
looks in the fake work so we have our

01:22:44,709 --> 01:22:49,420
config file here and then if you call my

01:22:47,530 --> 01:22:53,800
app which does something using that

01:22:49,420 --> 01:22:56,260
comfy you can see well all the convicts

01:22:53,800 --> 01:22:58,209
have defaults but you can override them

01:22:56,260 --> 01:23:00,610
in the current line so as you can see

01:22:58,209 --> 01:23:03,939
there you can touch this foo sets value

01:23:00,610 --> 01:23:08,079
or you can it does some kind of parsing

01:23:03,939 --> 01:23:09,219
to do boolean stuff so this is nice I

01:23:08,079 --> 01:23:12,969
mean this is used being used in

01:23:09,219 --> 01:23:16,269
production so it kind of works and it

01:23:12,969 --> 01:23:18,639
has dogs you go to those URLs and see it

01:23:16,269 --> 01:23:22,630
for yourself if you like it please come

01:23:18,639 --> 01:23:24,519
by on IRC and three node and I'm I'll be

01:23:22,630 --> 01:23:29,039
glad to to guide you in and help you out

01:23:24,519 --> 01:23:29,039
if you want to try this thank you

01:23:35,060 --> 01:23:38,870
up next we have Brian veloso talking

01:23:37,430 --> 01:23:43,370
about how to get designers for your

01:23:38,870 --> 01:23:46,280
project hi everybody so there's a

01:23:43,370 --> 01:23:48,590
problem is over there okay you have an

01:23:46,280 --> 01:23:50,990
amazing open source project and you need

01:23:48,590 --> 01:23:53,960
a designer but there's a bigger problem

01:23:50,990 --> 01:23:57,320
is i nurture picky designers are

01:23:53,960 --> 01:24:02,420
stubborn designers have no time and I'm

01:23:57,320 --> 01:24:07,790
guilty of all of this so Who am I I am

01:24:02,420 --> 01:24:11,090
Brian below so good job otherwise I

01:24:07,790 --> 01:24:15,050
would have to throw you all so anybody

01:24:11,090 --> 01:24:17,780
anybody watch hi i met your mother okay

01:24:15,050 --> 01:24:18,980
good so I work at github I have stickers

01:24:17,780 --> 01:24:21,140
I didn't say this yesterday I have

01:24:18,980 --> 01:24:22,940
stickers take them please so so

01:24:21,140 --> 01:24:26,720
solutions i have for getting a design

01:24:22,940 --> 01:24:28,400
designer this is not one of them let

01:24:26,720 --> 01:24:30,170
your project speak for itself if you

01:24:28,400 --> 01:24:31,940
have a problem for a designer you have

01:24:30,170 --> 01:24:33,200
if you solve a problem for our designer

01:24:31,940 --> 01:24:35,360
you have them in the palm of your hand

01:24:33,200 --> 01:24:37,490
if this sounds familiar you can replace

01:24:35,360 --> 01:24:39,560
designer with developer kind of makes

01:24:37,490 --> 01:24:41,870
sense doesn't it for an example i

01:24:39,560 --> 01:24:43,520
maintain django image kit i've also

01:24:41,870 --> 01:24:45,500
contributed to a number of python

01:24:43,520 --> 01:24:49,670
objective-c Erlang and even ruby

01:24:45,500 --> 01:24:53,530
projects so be explicit with your design

01:24:49,670 --> 01:24:57,320
needs and but make it pretty is

01:24:53,530 --> 01:24:58,970
forbidden I know you guys look like this

01:24:57,320 --> 01:25:01,910
when you're asking us to make it pretty

01:24:58,970 --> 01:25:05,060
but we look like this when we see that

01:25:01,910 --> 01:25:07,520
you're not you I need to specify your

01:25:05,060 --> 01:25:09,770
design needs design is it is as

01:25:07,520 --> 01:25:12,470
important as any to do item on your list

01:25:09,770 --> 01:25:14,450
and put this in your read me put at the

01:25:12,470 --> 01:25:16,370
bottom of your project what your design

01:25:14,450 --> 01:25:18,110
needs are so when we peruse around

01:25:16,370 --> 01:25:20,150
github or bitbucket or whatever and

01:25:18,110 --> 01:25:21,770
looking for a design project to help you

01:25:20,150 --> 01:25:23,840
on we can see exactly the things you

01:25:21,770 --> 01:25:26,450
want it you want us to do and we can get

01:25:23,840 --> 01:25:28,700
started really quickly also communicate

01:25:26,450 --> 01:25:32,750
early and communicate often because I

01:25:28,700 --> 01:25:35,210
hate this hey man I finished design need

01:25:32,750 --> 01:25:37,280
your input took about like you know two

01:25:35,210 --> 01:25:43,190
weeks on it time passes sorry it's not

01:25:37,280 --> 01:25:46,640
my style so moving forward we want to

01:25:43,190 --> 01:25:48,409
help and let's let's help each other

01:25:46,640 --> 01:25:53,239
let's exchange knowledge

01:25:48,409 --> 01:25:54,439
I've I've been a coding Python for about

01:25:53,239 --> 01:25:57,019
four years I've been doing design for

01:25:54,439 --> 01:25:58,669
about 15 and I keep I want to keep

01:25:57,019 --> 01:25:59,900
learning how to be a better programmer

01:25:58,669 --> 01:26:01,360
as much and I've met a lot of

01:25:59,900 --> 01:26:04,340
programmers that want to be better

01:26:01,360 --> 01:26:08,989
designers so hybrids are pretty much the

01:26:04,340 --> 01:26:10,669
feature finally respect we highly I love

01:26:08,989 --> 01:26:12,199
what you guys do I highly respect you

01:26:10,669 --> 01:26:16,189
guys I feel like I'm dumbest guy in the

01:26:12,199 --> 01:26:18,530
room but at the same time please respect

01:26:16,189 --> 01:26:20,179
what we do and that we're not just

01:26:18,530 --> 01:26:22,159
making stuff pretty that we're actually

01:26:20,179 --> 01:26:24,650
trying to make your stuff better more

01:26:22,159 --> 01:26:26,030
appealing in another way you guys take

01:26:24,650 --> 01:26:28,340
care of the back end we take care of the

01:26:26,030 --> 01:26:30,530
front end and more of us are becoming

01:26:28,340 --> 01:26:34,610
hybrids obviously and together we can

01:26:30,530 --> 01:26:35,630
make the web not so bad that's it thank

01:26:34,610 --> 01:26:38,050
you you can contact me for more

01:26:35,630 --> 01:26:38,050
questions

01:26:43,330 --> 01:26:47,750
all right and now for our final

01:26:45,260 --> 01:26:50,810
lightning talk of Pi con 2012 man who

01:26:47,750 --> 01:26:56,360
needs no introduction Steve Holden hi

01:26:50,810 --> 01:26:58,219
there I want to give you a talk today

01:26:56,360 --> 01:27:00,199
which I first gave Django cone Europe

01:26:58,219 --> 01:27:02,570
last year and because it's kind of a

01:27:00,199 --> 01:27:03,949
lame talk I thought I better keep your

01:27:02,570 --> 01:27:07,850
attention by telling you there's a

01:27:03,949 --> 01:27:09,500
kitten picture at the end so we cannot

01:27:07,850 --> 01:27:12,020
all make a positive difference to our

01:27:09,500 --> 01:27:13,670
environment in many different ways it's

01:27:12,020 --> 01:27:15,350
good to do that it's good for our

01:27:13,670 --> 01:27:17,270
community to do that and so the point

01:27:15,350 --> 01:27:18,920
I'm trying to make today is that you

01:27:17,270 --> 01:27:20,980
don't need to be an expert you don't

01:27:18,920 --> 01:27:23,719
need to have a you don't hear excerpts

01:27:20,980 --> 01:27:26,540
you don't need to aim for perfection so

01:27:23,719 --> 01:27:30,469
as a practical example when I was in

01:27:26,540 --> 01:27:32,000
Amsterdam for Django con Europe under

01:27:30,469 --> 01:27:34,790
stem is the city I love but as you know

01:27:32,000 --> 01:27:37,310
probably it gets many many tourists and

01:27:34,790 --> 01:27:40,130
so sometimes it comes in for a little

01:27:37,310 --> 01:27:42,590
abuse and so as I was walking through

01:27:40,130 --> 01:27:43,639
Amsterdam i found this particular little

01:27:42,590 --> 01:27:45,530
corner which could have been quite a

01:27:43,639 --> 01:27:47,659
nice corner to sit in except that being

01:27:45,530 --> 01:27:49,699
a few people there before me they drop

01:27:47,659 --> 01:27:51,980
rubbish they drop all kinds of crap they

01:27:49,699 --> 01:27:53,719
put beer cans in the heaven and heaven

01:27:51,980 --> 01:27:55,550
knows what so number of opportunities

01:27:53,719 --> 01:27:56,929
there one is to just kind of shrug your

01:27:55,550 --> 01:27:59,869
shoulders and walk by that's the

01:27:56,929 --> 01:28:01,130
American Way probably I don't know no

01:27:59,869 --> 01:28:02,300
probably the American Way would you

01:28:01,130 --> 01:28:03,590
throw another piece of trash there

01:28:02,300 --> 01:28:05,239
because there's already a pile of trash

01:28:03,590 --> 01:28:06,830
the the british way would be very

01:28:05,239 --> 01:28:08,449
different of course we'd ride to stern

01:28:06,830 --> 01:28:09,619
letter to the counselors at amsterdam

01:28:08,449 --> 01:28:12,199
asking what the hell they thought they

01:28:09,619 --> 01:28:13,580
were doing letting people produce this

01:28:12,199 --> 01:28:15,290
kind of mess but i saw what will know

01:28:13,580 --> 01:28:17,690
why don't I just take five minutes and

01:28:15,290 --> 01:28:19,639
do something a bit more positive so I

01:28:17,690 --> 01:28:21,409
didn't do the whole job I just I had a

01:28:19,639 --> 01:28:23,030
bag with and I had two bags with me so I

01:28:21,409 --> 01:28:25,460
put all my shopping in the one bag I

01:28:23,030 --> 01:28:27,949
used my other bag to collect a bunch of

01:28:25,460 --> 01:28:29,090
trash and then I put it well I was going

01:28:27,949 --> 01:28:31,010
to put it in the bin but the bin was

01:28:29,090 --> 01:28:32,480
full so I put his on the ground where it

01:28:31,010 --> 01:28:36,199
probably blew into the canal and made a

01:28:32,480 --> 01:28:39,830
horrible mess but hey um hey we have to

01:28:36,199 --> 01:28:41,600
try right so as a result I made a small

01:28:39,830 --> 01:28:43,280
positive difference to Amsterdam not a

01:28:41,600 --> 01:28:44,900
perfect job I didn't clean up the whole

01:28:43,280 --> 01:28:47,239
of the dam square or anything like that

01:28:44,900 --> 01:28:49,790
just clean this little area definitely

01:28:47,239 --> 01:28:51,679
made a positive difference I feel better

01:28:49,790 --> 01:28:53,460
about myself I feel a stronger

01:28:51,679 --> 01:28:55,050
connection to Amsterdam

01:28:53,460 --> 01:28:56,790
and it's community and the I didn't make

01:28:55,050 --> 01:28:59,219
a huge difference Amsterdam still pretty

01:28:56,790 --> 01:29:00,840
looks much the same but another example

01:28:59,219 --> 01:29:03,150
in the Python world which took slightly

01:29:00,840 --> 01:29:06,000
more effort when I was writing Python

01:29:03,150 --> 01:29:08,760
web programming I needed a lightweight

01:29:06,000 --> 01:29:10,620
networking library and so in 2001 and

01:29:08,760 --> 01:29:13,320
discovered a sink coronation chat didn't

01:29:10,620 --> 01:29:14,760
have any documentation and so I wrote

01:29:13,320 --> 01:29:16,290
the documentation now it's probably the

01:29:14,760 --> 01:29:18,540
sad fact is that nobody's ever used a

01:29:16,290 --> 01:29:20,370
sink or erasing can since but the

01:29:18,540 --> 01:29:22,920
modules do at least have some

01:29:20,370 --> 01:29:25,050
documentation so basically if you're

01:29:22,920 --> 01:29:26,400
experienced in a community then what you

01:29:25,050 --> 01:29:27,840
need to do is some people know they come

01:29:26,400 --> 01:29:30,060
in they don't really know what to do so

01:29:27,840 --> 01:29:31,590
it's okay give them jobs tell them to do

01:29:30,060 --> 01:29:33,930
stuff when they come to Sprint's here

01:29:31,590 --> 01:29:35,460
you sit down do that give them

01:29:33,930 --> 01:29:37,830
encouragement I spend a lot of time

01:29:35,460 --> 01:29:39,840
trying to encourage people to do

01:29:37,830 --> 01:29:41,250
positive things and you want to make

01:29:39,840 --> 01:29:42,870
sure that you know the empowerment's not

01:29:41,250 --> 01:29:44,250
just with the leadership the empowerment

01:29:42,870 --> 01:29:46,739
should be from the ground up it should

01:29:44,250 --> 01:29:49,230
come from the community level as well so

01:29:46,739 --> 01:29:51,989
the lessons are that you don't really

01:29:49,230 --> 01:29:54,180
need to be a subject matter expert but

01:29:51,989 --> 01:29:56,400
you know you can help the subject matter

01:29:54,180 --> 01:29:58,739
experts by doing grunt work things like

01:29:56,400 --> 01:30:01,140
running conferences for example it's

01:29:58,739 --> 01:30:02,550
even possible to teach geeks and social

01:30:01,140 --> 01:30:04,710
skills and I think that the people of

01:30:02,550 --> 01:30:06,989
Python are you know fairly example good

01:30:04,710 --> 01:30:09,300
examples of principal geek so you don't

01:30:06,989 --> 01:30:11,489
need to do a lot you don't have to sign

01:30:09,300 --> 01:30:14,370
up to change the world you just need to

01:30:11,489 --> 01:30:17,520
make a small positive difference all

01:30:14,370 --> 01:30:20,130
right and that so a big pod so it was

01:30:17,520 --> 01:30:23,630
kind of a lame talk and the worst thing

01:30:20,130 --> 01:30:26,190
is I was lying about the kitten picture

01:30:23,630 --> 01:30:27,720
so actually I'm going to be using a

01:30:26,190 --> 01:30:30,840
picture of

01:30:27,720 --> 01:30:33,060
a picture of alex gainer because in the

01:30:30,840 --> 01:30:36,870
Django world Alex can be regarded as the

01:30:33,060 --> 01:30:39,060
standard kit in equivalent or at least

01:30:36,870 --> 01:30:41,910
he could until he came of age now he's

01:30:39,060 --> 01:30:43,440
become the developer from hell and you

01:30:41,910 --> 01:30:44,940
can't talk to me without getting your

01:30:43,440 --> 01:30:46,170
head bitten off that's a complete

01:30:44,940 --> 01:30:48,750
slander on Alex by the way it's

01:30:46,170 --> 01:30:50,700
completely untrue but the reason I I

01:30:48,750 --> 01:30:53,070
chose this particular picture was you

01:30:50,700 --> 01:30:55,640
may know that for a long time the Django

01:30:53,070 --> 01:31:00,150
community's been associated with the the

01:30:55,640 --> 01:31:03,240
pony as it as its mascot and this is a

01:31:00,150 --> 01:31:06,600
particular particularly unusual pony I

01:31:03,240 --> 01:31:11,130
have never seen a pony with his antlers

01:31:06,600 --> 01:31:13,800
like that at all just to go back to my

01:31:11,130 --> 01:31:16,710
keynote from yesterday there were some

01:31:13,800 --> 01:31:22,070
questions about whether I was going to

01:31:16,710 --> 01:31:22,070
show my tattoo or not it's real

01:31:29,660 --> 01:31:33,990
so I will leave you with only one

01:31:32,220 --> 01:31:37,320
thought besides the posthypnotic

01:31:33,990 --> 01:31:38,970
suggestion to donate money to the Python

01:31:37,320 --> 01:31:41,790
Software Foundation which you can now do

01:31:38,970 --> 01:31:44,460
in many ways if a hundred people in this

01:31:41,790 --> 01:31:46,680
room put forty dollars in a bucket we

01:31:44,460 --> 01:31:48,090
would have four thousand dollars to buy

01:31:46,680 --> 01:31:50,160
a membership of the Aldebaran

01:31:48,090 --> 01:31:57,110
development community for Jesse NOLA and

01:31:50,160 --> 01:31:57,110
he would have his robot thanks very much

01:32:03,560 --> 01:32:09,210
thank you Steve thank you everyone for

01:32:07,110 --> 01:32:12,420
staying until the end of the lightning

01:32:09,210 --> 01:32:15,780
talks we have one more announcements to

01:32:12,420 --> 01:32:19,530
make yesterday we had the sink bath

01:32:15,780 --> 01:32:22,380
tournament a really nice complete

01:32:19,530 --> 01:32:25,890
programming competition and the winner

01:32:22,380 --> 01:32:27,720
of the macbook air was daniela pal i'm

01:32:25,890 --> 01:32:33,020
pretty sure that Danielle left already

01:32:27,720 --> 01:32:33,020
is that Nina in the room congratulations

01:32:37,030 --> 01:32:46,380
and the winner of the ipad 2 was Lucas

01:32:40,449 --> 01:32:46,380

YouTube URL: https://www.youtube.com/watch?v=5YQrFiWa50M


