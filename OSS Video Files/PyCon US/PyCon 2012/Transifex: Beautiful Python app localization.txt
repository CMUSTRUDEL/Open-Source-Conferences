Title: Transifex: Beautiful Python app localization
Publication date: 2012-04-29
Playlist: PyCon 2012
Description: 
	Dimitris Glezos
Localization of Python apps used to be hard, but not any more. This talk will offer a short intro on software localization in Python and discuss today's best practices. It will present Transifex, a modern, Django-based SaaS, also refe
Captions: 
	00:00:05,750 --> 00:00:16,170
hi oh this is too loud all right so hi

00:00:13,080 --> 00:00:19,170
everybody thanks for coming I'm Dimitri

00:00:16,170 --> 00:00:22,140
I come from Greece hence the strange

00:00:19,170 --> 00:00:24,630
accent I'm going to talk to you a bit

00:00:22,140 --> 00:00:28,170
about Python localization today best

00:00:24,630 --> 00:00:33,020
practices how people usually do it how

00:00:28,170 --> 00:00:36,690
smart people do it and talk a bit about

00:00:33,020 --> 00:00:38,280
development and localization and how how

00:00:36,690 --> 00:00:39,840
things should be done in the future more

00:00:38,280 --> 00:00:41,820
or less how we're changing how

00:00:39,840 --> 00:00:44,850
localization is being changed and where

00:00:41,820 --> 00:00:46,620
is it going one of the questions I want

00:00:44,850 --> 00:00:50,489
to ask you in the beginning is how many

00:00:46,620 --> 00:00:52,829
are developers in here everyone cool and

00:00:50,489 --> 00:00:54,649
how many have already localized their

00:00:52,829 --> 00:00:59,420
app and have it in multiple languages

00:00:54,649 --> 00:01:01,770
okay around half of them and how many I

00:00:59,420 --> 00:01:03,180
haven't heard about localization before

00:01:01,770 --> 00:01:07,020
and won't want this to be an

00:01:03,180 --> 00:01:08,880
introductory talk but many great all

00:01:07,020 --> 00:01:12,119
right so I work for a startup called

00:01:08,880 --> 00:01:14,040
transifex it's a python-based django

00:01:12,119 --> 00:01:17,310
based startup working on localization

00:01:14,040 --> 00:01:19,680
tools transfix is localization software

00:01:17,310 --> 00:01:23,880
service tool similarly to github for

00:01:19,680 --> 00:01:25,110
coding where github for translations but

00:01:23,880 --> 00:01:27,840
we're going to talk more about this a

00:01:25,110 --> 00:01:29,340
bit later so what is localization

00:01:27,840 --> 00:01:31,110
localization is how you adapt the

00:01:29,340 --> 00:01:34,200
software so that it's available at

00:01:31,110 --> 00:01:36,689
multiple regions around the world

00:01:34,200 --> 00:01:38,759
multiple cultures and also it's also

00:01:36,689 --> 00:01:40,650
it's the process of actually translating

00:01:38,759 --> 00:01:42,570
it some people distinguish the two

00:01:40,650 --> 00:01:45,240
between globalization localization but

00:01:42,570 --> 00:01:47,159
that just confuses people so let's just

00:01:45,240 --> 00:01:49,320
consider localization as a global

00:01:47,159 --> 00:01:51,869
process that you take your software from

00:01:49,320 --> 00:01:56,490
just English and you actually launched

00:01:51,869 --> 00:01:58,350
in multiple languages so the key idea is

00:01:56,490 --> 00:02:00,060
of course how do you get your software

00:01:58,350 --> 00:02:03,590
from just one language and ship it to

00:02:00,060 --> 00:02:06,299
mark multiple dozens or I don't know 50

00:02:03,590 --> 00:02:08,729
markets worldwide and localization is of

00:02:06,299 --> 00:02:10,379
course just the first step so the goal

00:02:08,729 --> 00:02:13,349
is to make your app look all Greek to

00:02:10,379 --> 00:02:13,800
you of course if you're shipping to

00:02:13,349 --> 00:02:16,590
China

00:02:13,800 --> 00:02:19,470
or France or other countries if you're a

00:02:16,590 --> 00:02:23,070
prince only in English it does look all

00:02:19,470 --> 00:02:24,990
Greek to them so you do you do want to

00:02:23,070 --> 00:02:27,900
translate your software there are many

00:02:24,990 --> 00:02:31,020
many reviews and statistics on why it's

00:02:27,900 --> 00:02:32,640
important like ninety-five percent of

00:02:31,020 --> 00:02:34,370
the world's population does not have

00:02:32,640 --> 00:02:36,990
english as their native language and

00:02:34,370 --> 00:02:39,690
more than one out of two people online

00:02:36,990 --> 00:02:42,810
do not speak English at all so today

00:02:39,690 --> 00:02:45,990
with how easy it is to create a web

00:02:42,810 --> 00:02:51,030
application it's kind of a no-brainer to

00:02:45,990 --> 00:02:52,470
actually ship in my in many languages so

00:02:51,030 --> 00:02:54,570
what's the traditional workflow in

00:02:52,470 --> 00:02:57,390
translating and software localizing in

00:02:54,570 --> 00:02:59,520
many languages first of all in your code

00:02:57,390 --> 00:03:02,220
you use special libraries to mark your

00:02:59,520 --> 00:03:05,040
translatable strings as these are

00:03:02,220 --> 00:03:06,930
English string but ideally in the end

00:03:05,040 --> 00:03:09,690
product when I switch my language I want

00:03:06,930 --> 00:03:11,970
them to be replaced with Brazilian

00:03:09,690 --> 00:03:13,800
Portuguese strings so you mark them with

00:03:11,970 --> 00:03:16,140
these special libraries and then you

00:03:13,800 --> 00:03:18,440
export these strings into special plain

00:03:16,140 --> 00:03:21,209
text files that are given to translators

00:03:18,440 --> 00:03:22,709
and when you're ready to release you

00:03:21,209 --> 00:03:25,020
actually create a string freeze you

00:03:22,709 --> 00:03:26,850
freeze the UI so that translators can

00:03:25,020 --> 00:03:28,860
start working and bring their

00:03:26,850 --> 00:03:30,870
translation to one hunt if you don't

00:03:28,860 --> 00:03:32,580
string freeze then you change a string

00:03:30,870 --> 00:03:34,530
and when a translator thinks that your

00:03:32,580 --> 00:03:36,150
app is one hundred percent translated it

00:03:34,530 --> 00:03:38,400
will be ninety-nine percent translated

00:03:36,150 --> 00:03:40,340
so you wait for I don't know one week it

00:03:38,400 --> 00:03:43,920
depends on the size of the application

00:03:40,340 --> 00:03:46,140
for translators to work and then the

00:03:43,920 --> 00:03:48,540
hard part starts because translators

00:03:46,140 --> 00:03:50,130
have no idea how to get your files you

00:03:48,540 --> 00:03:52,380
can give them access to your version

00:03:50,130 --> 00:03:53,550
control system but translators really

00:03:52,380 --> 00:03:55,500
don't want that because they are

00:03:53,550 --> 00:03:57,930
linguist people the people there are not

00:03:55,500 --> 00:04:00,239
technical people so translators really

00:03:57,930 --> 00:04:04,620
hate get I know that sounds strange but

00:04:00,239 --> 00:04:06,570
they do and so they take the files they

00:04:04,620 --> 00:04:09,600
translate them offline using specialized

00:04:06,570 --> 00:04:11,580
tools and then your problem starts how

00:04:09,600 --> 00:04:15,000
do you get those files back sometimes

00:04:11,580 --> 00:04:17,660
you need to receive them by email or you

00:04:15,000 --> 00:04:19,830
give SSH access to your translators or

00:04:17,660 --> 00:04:21,359
they create tickets on your ticketing

00:04:19,830 --> 00:04:23,070
system and this takes a lot of time

00:04:21,359 --> 00:04:25,320
especially when you do agile

00:04:23,070 --> 00:04:26,270
localization we have weekly release

00:04:25,320 --> 00:04:31,789
cycles we

00:04:26,270 --> 00:04:34,970
cannot do this for 40 languages so let's

00:04:31,789 --> 00:04:37,940
see how do we do localization since some

00:04:34,970 --> 00:04:39,800
people have haven't seen this before so

00:04:37,940 --> 00:04:41,240
these ethics is one of the special

00:04:39,800 --> 00:04:43,280
libraries in Python that you can use

00:04:41,240 --> 00:04:44,930
there are a couple of others but get

00:04:43,280 --> 00:04:47,479
this is definitely the most popular one

00:04:44,930 --> 00:04:50,270
so you just mark your string is

00:04:47,479 --> 00:04:52,990
translatable using a notion similar to

00:04:50,270 --> 00:04:56,569
this one a shortcut similar to this one

00:04:52,990 --> 00:04:58,970
in Django it's a bit similar you import

00:04:56,569 --> 00:05:02,000
from John utils translation special

00:04:58,970 --> 00:05:03,470
functions and you mark you mark the

00:05:02,000 --> 00:05:05,780
strings for translation this is an

00:05:03,470 --> 00:05:07,819
example of a of a jungle model and we

00:05:05,780 --> 00:05:11,840
translate the name of the model and the

00:05:07,819 --> 00:05:13,699
help text as well by the way feel free

00:05:11,840 --> 00:05:18,680
to interrupt them at any point when

00:05:13,699 --> 00:05:21,259
there are questions so this was just an

00:05:18,680 --> 00:05:23,690
example in Python code of course you

00:05:21,259 --> 00:05:25,370
don't only have Python code you have so

00:05:23,690 --> 00:05:28,009
many other things in Europe usually in

00:05:25,370 --> 00:05:30,289
your web app you have templates you have

00:05:28,009 --> 00:05:32,659
JavaScript there are so many other ways

00:05:30,289 --> 00:05:34,280
to mark strings for translation in the

00:05:32,659 --> 00:05:37,159
jungle templates you use special

00:05:34,280 --> 00:05:39,860
template tax for that the trans one is

00:05:37,159 --> 00:05:42,800
the most simple one and then there are

00:05:39,860 --> 00:05:45,590
more complex ones like block trans with

00:05:42,800 --> 00:05:47,569
count and this helps translators

00:05:45,590 --> 00:05:49,969
translate something in multiple plural

00:05:47,569 --> 00:05:54,020
forms in English there are only two pure

00:05:49,969 --> 00:05:57,889
phones one for one and then one and many

00:05:54,020 --> 00:06:00,710
so this way you can mark it but in other

00:05:57,889 --> 00:06:04,069
languages of course you have multiple

00:06:00,710 --> 00:06:07,550
plural form forms like in arabic has six

00:06:04,069 --> 00:06:09,979
plural forms so when you export your

00:06:07,550 --> 00:06:12,500
files into p 0 files your translations

00:06:09,979 --> 00:06:14,509
into p 0 files and then the arabic

00:06:12,500 --> 00:06:17,630
version will allow the translator to

00:06:14,509 --> 00:06:21,590
actually have six different translations

00:06:17,630 --> 00:06:23,389
for these two english translations now

00:06:21,590 --> 00:06:25,279
how do you generate those pure files

00:06:23,389 --> 00:06:26,810
it's very easy there are some command

00:06:25,279 --> 00:06:30,259
line tools that does that do that and

00:06:26,810 --> 00:06:32,150
Django has a handy admin command to

00:06:30,259 --> 00:06:35,719
export all your translations into one

00:06:32,150 --> 00:06:38,659
pure file so this way we got our

00:06:35,719 --> 00:06:40,070
translation files and now we need to

00:06:38,659 --> 00:06:42,920
decide how we're going to set

00:06:40,070 --> 00:06:44,630
those two translators so in the

00:06:42,920 --> 00:06:46,550
traditional model you have your content

00:06:44,630 --> 00:06:49,370
management system that's probably get

00:06:46,550 --> 00:06:52,220
for developers but it might be a website

00:06:49,370 --> 00:06:54,350
it might even be your jungle database

00:06:52,220 --> 00:06:56,270
that you have strings inside and you

00:06:54,350 --> 00:06:58,550
want to translate so you have your

00:06:56,270 --> 00:07:01,370
string store somewhere what you usually

00:06:58,550 --> 00:07:02,630
do is you code in English and that green

00:07:01,370 --> 00:07:04,910
arrow means that it's part of your

00:07:02,630 --> 00:07:07,640
workflow but then you need to get that

00:07:04,910 --> 00:07:09,530
English file give it to the translators

00:07:07,640 --> 00:07:12,350
either your team coordinator

00:07:09,530 --> 00:07:14,180
localization manager or you send it by

00:07:12,350 --> 00:07:16,550
email or something like that and then

00:07:14,180 --> 00:07:18,140
this happens for all languages and if

00:07:16,550 --> 00:07:20,360
you have a review process on top of that

00:07:18,140 --> 00:07:22,550
so that your quality improves you need

00:07:20,360 --> 00:07:24,020
to do that a bunch of times and then you

00:07:22,550 --> 00:07:26,750
get all those files and upload them

00:07:24,020 --> 00:07:30,290
again in your git repository and this is

00:07:26,750 --> 00:07:32,300
of course suboptimal right because these

00:07:30,290 --> 00:07:37,550
four points that we mentioned before are

00:07:32,300 --> 00:07:39,320
still not automated and funny thing is

00:07:37,550 --> 00:07:42,100
that developers know about this and

00:07:39,320 --> 00:07:45,110
there aren't many solutions to fix this

00:07:42,100 --> 00:07:48,140
people produce workarounds for example

00:07:45,110 --> 00:07:50,570
use github and issue pull requests but

00:07:48,140 --> 00:07:53,030
that's again suboptimal and takes a lot

00:07:50,570 --> 00:07:55,730
of time so the idea is for developers to

00:07:53,030 --> 00:07:57,350
not even spend any time on localization

00:07:55,730 --> 00:07:58,970
they should just code and write in

00:07:57,350 --> 00:08:02,450
English strings and everything else

00:07:58,970 --> 00:08:05,240
should be happening outside of the

00:08:02,450 --> 00:08:08,060
developer workflow and even professional

00:08:05,240 --> 00:08:11,150
tools big companies have not solved this

00:08:08,060 --> 00:08:14,450
so usually even big companies send

00:08:11,150 --> 00:08:15,860
emails the translation agencies all or

00:08:14,450 --> 00:08:17,990
they build their own localization

00:08:15,860 --> 00:08:20,240
platform I was talking with Evernote the

00:08:17,990 --> 00:08:22,220
other day and they spent like two years

00:08:20,240 --> 00:08:25,580
building their own localization platform

00:08:22,220 --> 00:08:27,680
and and of course if you actually use

00:08:25,580 --> 00:08:30,280
the first method you give away a lot of

00:08:27,680 --> 00:08:32,330
control to the translation agency and

00:08:30,280 --> 00:08:34,400
basically you give them all your data

00:08:32,330 --> 00:08:37,940
they control the translation memory and

00:08:34,400 --> 00:08:41,030
all your past translations they they

00:08:37,940 --> 00:08:42,440
dictate the budget and of course you

00:08:41,030 --> 00:08:44,210
don't know who translates your app

00:08:42,440 --> 00:08:48,320
basically they can choose anyone they

00:08:44,210 --> 00:08:51,800
want so that's why we built transifex

00:08:48,320 --> 00:08:53,480
and is it is a way to make translation

00:08:51,800 --> 00:08:56,060
sucks suck less

00:08:53,480 --> 00:08:58,449
it's a software-as-a-service product its

00:08:56,060 --> 00:09:01,550
goal is to produce quality localization

00:08:58,449 --> 00:09:04,070
it targets dynamic content like software

00:09:01,550 --> 00:09:05,480
not books for example books are

00:09:04,070 --> 00:09:07,100
translated in a great way using

00:09:05,480 --> 00:09:09,139
translation agencies because you write

00:09:07,100 --> 00:09:11,180
it once you send it to the agency you

00:09:09,139 --> 00:09:13,910
get it three weeks later or three months

00:09:11,180 --> 00:09:15,980
later translated and that's fine but

00:09:13,910 --> 00:09:19,459
when you do weekly recycles that's

00:09:15,980 --> 00:09:21,199
impossible to to manage and we we're

00:09:19,459 --> 00:09:23,089
building in SS officers a service so

00:09:21,199 --> 00:09:24,920
that we can have a centralized place to

00:09:23,089 --> 00:09:26,959
find translators both for open source

00:09:24,920 --> 00:09:30,500
projects as well as companies and

00:09:26,959 --> 00:09:32,540
proprietary projects and the difference

00:09:30,500 --> 00:09:35,120
from all the other tools out there it is

00:09:32,540 --> 00:09:37,339
that it's built for developers it's

00:09:35,120 --> 00:09:41,990
built for software projects really and

00:09:37,339 --> 00:09:44,420
of course it's open source and so we're

00:09:41,990 --> 00:09:46,370
turning this this workflow into

00:09:44,420 --> 00:09:48,019
something much more simple instead of

00:09:46,370 --> 00:09:49,760
you having to download the files

00:09:48,019 --> 00:09:52,430
transfix connects to the content

00:09:49,760 --> 00:09:54,829
management system and there are also

00:09:52,430 --> 00:09:57,589
shortcuts for you to send files directly

00:09:54,829 --> 00:09:59,360
to transfix and transfix gets the

00:09:57,589 --> 00:10:01,100
english files gives them out to the

00:09:59,360 --> 00:10:03,800
translators and then send everything

00:10:01,100 --> 00:10:05,959
back so for example it might you might

00:10:03,800 --> 00:10:08,269
just write English strings and then

00:10:05,959 --> 00:10:10,069
language files just are automatically

00:10:08,269 --> 00:10:13,130
committed to your version control system

00:10:10,069 --> 00:10:18,050
so there are no red arrows actually you

00:10:13,130 --> 00:10:19,730
can do it without no manual process so

00:10:18,050 --> 00:10:21,440
some of our customers who have some big

00:10:19,730 --> 00:10:23,600
names like you might know like Intel

00:10:21,440 --> 00:10:27,160
Nokia firefox fedora is being translated

00:10:23,600 --> 00:10:30,290
using transifex ready since last week

00:10:27,160 --> 00:10:32,000
eventbrite jungle itself mercurial and

00:10:30,290 --> 00:10:38,389
around two and a half thousand

00:10:32,000 --> 00:10:41,360
open-source projects some context to see

00:10:38,389 --> 00:10:42,709
the size of the project we started as a

00:10:41,360 --> 00:10:45,170
google Summer of Code project actually

00:10:42,709 --> 00:10:47,930
and it turned out to a profitable

00:10:45,170 --> 00:10:50,389
company there are 17,000 people using

00:10:47,930 --> 00:10:54,319
our service three South result 3,000

00:10:50,389 --> 00:10:56,149
projects in total and users that read

00:10:54,319 --> 00:10:58,100
translatable content from transmit is

00:10:56,149 --> 00:11:00,529
probably around 100 million probably

00:10:58,100 --> 00:11:03,350
more would have no way to to count it

00:11:00,529 --> 00:11:06,540
and there are nine average languages

00:11:03,350 --> 00:11:08,460
project on transifex

00:11:06,540 --> 00:11:10,860
we use Django Python all the modern

00:11:08,460 --> 00:11:13,230
database technologies for our heavy

00:11:10,860 --> 00:11:18,920
stuff we wrote our own Django add-ons

00:11:13,230 --> 00:11:24,060
extension system and we use around 58 60

00:11:18,920 --> 00:11:25,680
Django ops and Python dependencies so

00:11:24,060 --> 00:11:28,770
here's how the jungle localization

00:11:25,680 --> 00:11:30,960
project looks in transifex so this is

00:11:28,770 --> 00:11:33,930
similar for example with a good product

00:11:30,960 --> 00:11:36,480
project page it's a home for the jungle

00:11:33,930 --> 00:11:38,310
localization process you can see the

00:11:36,480 --> 00:11:40,590
number of the languages that it's being

00:11:38,310 --> 00:11:42,780
translated into we only see one hundred

00:11:40,590 --> 00:11:44,310
percent language here below in the

00:11:42,780 --> 00:11:47,700
further down in the table there are

00:11:44,310 --> 00:11:49,920
lower percentage as well so you can find

00:11:47,700 --> 00:11:52,950
who is responsible for the localization

00:11:49,920 --> 00:11:55,050
there are four guys there let's see the

00:11:52,950 --> 00:11:58,290
next slide should show the files of

00:11:55,050 --> 00:12:01,440
trial of django so it's that mean the

00:11:58,290 --> 00:12:04,500
core product and there are around 8i

00:12:01,440 --> 00:12:09,780
think files right now translated through

00:12:04,500 --> 00:12:11,760
transifex now each each of these files

00:12:09,780 --> 00:12:14,580
has a number of strings inside the

00:12:11,760 --> 00:12:15,780
number of words this is the Portuguese

00:12:14,580 --> 00:12:17,970
version it's ninety-four percent

00:12:15,780 --> 00:12:20,070
translated and there are a bunch of

00:12:17,970 --> 00:12:23,340
options there you can download the file

00:12:20,070 --> 00:12:25,320
you can download it for translation then

00:12:23,340 --> 00:12:28,110
upload it so that you can translate it

00:12:25,320 --> 00:12:29,580
offline and of course there's a big

00:12:28,110 --> 00:12:31,710
button they're called translate now

00:12:29,580 --> 00:12:33,390
which opens the web-based translation

00:12:31,710 --> 00:12:35,790
later so that translators can work

00:12:33,390 --> 00:12:40,620
inside transifex instead of working

00:12:35,790 --> 00:12:42,240
offline now how do you send these files

00:12:40,620 --> 00:12:44,400
to transfix though how can you really

00:12:42,240 --> 00:12:47,520
start automating your workflow we have a

00:12:44,400 --> 00:12:50,370
command line client and similar to get

00:12:47,520 --> 00:12:52,080
in mercurial called TX you can install

00:12:50,370 --> 00:12:54,510
it with adjust and easy installer pip

00:12:52,080 --> 00:12:57,120
install and then this client actually

00:12:54,510 --> 00:12:59,310
Maps your local files in your repository

00:12:57,120 --> 00:13:02,280
in your directories to transfix

00:12:59,310 --> 00:13:03,960
resources so when you start tracking

00:13:02,280 --> 00:13:06,360
your files and you can upload them on

00:13:03,960 --> 00:13:08,670
transifex then the client keeps these in

00:13:06,360 --> 00:13:11,430
sync so it knows which files to push

00:13:08,670 --> 00:13:14,970
where so you use at exit command for

00:13:11,430 --> 00:13:16,260
that this one says take all the

00:13:14,970 --> 00:13:19,769
translations that are in the

00:13:16,260 --> 00:13:21,689
translations directory replace that line

00:13:19,769 --> 00:13:24,149
key word with the language names and

00:13:21,689 --> 00:13:27,149
upload them to the project called my

00:13:24,149 --> 00:13:29,189
proj on transifex and name the resource

00:13:27,149 --> 00:13:32,339
my res and of course you define the

00:13:29,189 --> 00:13:34,079
source language as well so this creates

00:13:32,339 --> 00:13:36,899
a local configuration file on your

00:13:34,079 --> 00:13:38,970
system on a dot TX directory inside your

00:13:36,899 --> 00:13:41,189
directory so you can actually commit

00:13:38,970 --> 00:13:42,989
this file in your repository so that

00:13:41,189 --> 00:13:45,420
other developers in your project when

00:13:42,989 --> 00:13:47,790
they clone your repository they can just

00:13:45,420 --> 00:13:49,619
run TX pool and they will get the files

00:13:47,790 --> 00:13:53,129
so this way you don't need to manage

00:13:49,619 --> 00:13:54,660
this and create it all the time so this

00:13:53,129 --> 00:13:59,699
is a configuration for the example that

00:13:54,660 --> 00:14:02,699
we saw before what this does is that it

00:13:59,699 --> 00:14:06,029
starts tracking the 16 files of of

00:14:02,699 --> 00:14:12,089
Django and it can map the language names

00:14:06,029 --> 00:14:14,189
with local files so the next time that

00:14:12,089 --> 00:14:16,110
you actually run TX push it will take

00:14:14,189 --> 00:14:18,179
your source file and push it to trans

00:14:16,110 --> 00:14:20,069
effects and all your new strings that

00:14:18,179 --> 00:14:23,309
appeared in your files will actually

00:14:20,069 --> 00:14:25,889
appear on transfers as well transfix

00:14:23,309 --> 00:14:27,629
will also update your other languages so

00:14:25,889 --> 00:14:29,670
if you have twin strings in English they

00:14:27,629 --> 00:14:31,709
will appear in all other language files

00:14:29,670 --> 00:14:34,110
you don't even need to merge those files

00:14:31,709 --> 00:14:36,569
and append those those entities at the

00:14:34,110 --> 00:14:38,490
end and when you pull you will get all

00:14:36,569 --> 00:14:41,730
the translations for all your resources

00:14:38,490 --> 00:14:51,990
the case of jungle it's 16 files times

00:14:41,730 --> 00:14:54,569
50 languages so it's like 500 files so

00:14:51,990 --> 00:14:56,670
an extra step to local to automate your

00:14:54,569 --> 00:14:58,439
workflow is to not even have to run

00:14:56,670 --> 00:15:00,980
these commands by yourself so you can

00:14:58,439 --> 00:15:03,029
put them in your make file or in your

00:15:00,980 --> 00:15:04,529
continuous integration platform so

00:15:03,029 --> 00:15:06,919
whenever you issue a new build or

00:15:04,529 --> 00:15:10,350
whenever a new git commit hook is fired

00:15:06,919 --> 00:15:11,879
you can run TX push and then files will

00:15:10,350 --> 00:15:14,100
be set automatically and when you're

00:15:11,879 --> 00:15:17,459
ready to package your application you

00:15:14,100 --> 00:15:18,839
can just run TX pool so then you don't

00:15:17,459 --> 00:15:21,049
even have to do anything you just have

00:15:18,839 --> 00:15:23,699
to code and that's the ultimate goal

00:15:21,049 --> 00:15:27,209
there also a rich API to translate

00:15:23,699 --> 00:15:29,429
dynamic content that is not in files and

00:15:27,209 --> 00:15:31,410
we're starting to put create more

00:15:29,429 --> 00:15:32,390
integration points like run services and

00:15:31,410 --> 00:15:35,540
github

00:15:32,390 --> 00:15:38,090
pull requests and sorry a postbox web

00:15:35,540 --> 00:15:41,690
hooks and we are considering writing a

00:15:38,090 --> 00:15:44,180
hero quad on as well and here's a pro

00:15:41,690 --> 00:15:47,480
here's an example of the API it's it's

00:15:44,180 --> 00:15:49,970
quite a complete API at this point you

00:15:47,480 --> 00:15:55,190
can just use it to send translations and

00:15:49,970 --> 00:15:57,590
get them back and some of the some of

00:15:55,190 --> 00:16:00,350
our customers are crowdsourcing

00:15:57,590 --> 00:16:01,820
translations and some of them are not

00:16:00,350 --> 00:16:03,980
crowdsourcing them they are using

00:16:01,820 --> 00:16:06,770
professional translators so you can use

00:16:03,980 --> 00:16:08,360
transfix either just as a storage engine

00:16:06,770 --> 00:16:10,970
for your translations in the repository

00:16:08,360 --> 00:16:14,390
management for your localization files

00:16:10,970 --> 00:16:16,820
or you can actually crowdsource your

00:16:14,390 --> 00:16:20,000
work or you can even just create it use

00:16:16,820 --> 00:16:21,740
it for your workflow there are there's a

00:16:20,000 --> 00:16:24,140
proofreading step to increase quality

00:16:21,740 --> 00:16:26,030
and a bunch of other add-ons that help

00:16:24,140 --> 00:16:27,710
translators do their work more

00:16:26,030 --> 00:16:29,240
efficiently and with higher quality like

00:16:27,710 --> 00:16:35,240
the reviewing system glossary and

00:16:29,240 --> 00:16:37,370
professional file formats some other

00:16:35,240 --> 00:16:39,020
nifty nifty features of having a

00:16:37,370 --> 00:16:40,550
centralized solution is that you can

00:16:39,020 --> 00:16:42,530
find all the people in transfix and

00:16:40,550 --> 00:16:45,080
actually invite them to your project and

00:16:42,530 --> 00:16:46,640
maybe even hire them you can see here

00:16:45,080 --> 00:16:50,330
people that translate like two million

00:16:46,640 --> 00:16:51,950
strings 2 million words on transifex and

00:16:50,330 --> 00:16:57,770
this is a screenshot of the localization

00:16:51,950 --> 00:16:59,810
editor the review process and it's worth

00:16:57,770 --> 00:17:01,460
noting that for example let's take

00:16:59,810 --> 00:17:03,020
credit for example they they will

00:17:01,460 --> 00:17:05,180
crowdsource their work but they want

00:17:03,020 --> 00:17:06,680
some control over the quality so they

00:17:05,180 --> 00:17:09,709
are promoting some of the translators to

00:17:06,680 --> 00:17:11,810
the reviewers review level and these are

00:17:09,709 --> 00:17:16,120
selected people that we trust that we

00:17:11,810 --> 00:17:18,680
know that our know how to translate our

00:17:16,120 --> 00:17:20,930
content in the precise way that we want

00:17:18,680 --> 00:17:22,550
them to translate and have shown a

00:17:20,930 --> 00:17:24,410
history a track record of good

00:17:22,550 --> 00:17:26,750
translations so they can go and just

00:17:24,410 --> 00:17:29,300
click that check box on the end and once

00:17:26,750 --> 00:17:31,880
it once the string is read has reached a

00:17:29,300 --> 00:17:34,310
review level then mayor mortal

00:17:31,880 --> 00:17:37,130
translators cannot change it back and

00:17:34,310 --> 00:17:40,550
they could however send suggestions and

00:17:37,130 --> 00:17:42,200
vote on them using the web interface as

00:17:40,550 --> 00:17:44,150
well so when a reviewer goes in and sees

00:17:42,200 --> 00:17:46,070
okay this string has a lot of votes for

00:17:44,150 --> 00:17:50,390
a better translation translation

00:17:46,070 --> 00:17:52,730
I can just use that one this is chris

00:17:50,390 --> 00:17:55,880
screenshot for the glossary again

00:17:52,730 --> 00:17:57,680
translation quality feature and allowing

00:17:55,880 --> 00:18:00,290
two letters to select certain keywords

00:17:57,680 --> 00:18:04,460
and improve and provide specific

00:18:00,290 --> 00:18:07,040
translations across the project and this

00:18:04,460 --> 00:18:10,130
is this is this is it it's a number view

00:18:07,040 --> 00:18:13,910
of how localization landscape is today

00:18:10,130 --> 00:18:15,920
and a modern way to actually manage your

00:18:13,910 --> 00:18:17,990
files so i wanted to end it and this

00:18:15,920 --> 00:18:19,400
sooner than later so that we can start

00:18:17,990 --> 00:18:35,300
having a discussion and start answering

00:18:19,400 --> 00:18:38,720
questions that you guys might have did

00:18:35,300 --> 00:18:41,900
you guys build your own TM system yes so

00:18:38,720 --> 00:18:43,640
for for for people who don't know what

00:18:41,900 --> 00:18:46,310
TM means it's a translation memory

00:18:43,640 --> 00:18:47,810
system it's a system where the

00:18:46,310 --> 00:18:49,730
localization solution remembers

00:18:47,810 --> 00:18:52,100
everything that was translated so far

00:18:49,730 --> 00:18:54,860
everything and then when a new string

00:18:52,100 --> 00:18:56,780
appears it does fuzzy matching and find

00:18:54,860 --> 00:19:00,080
similar translations in the past and

00:18:56,780 --> 00:19:01,940
gives gives those suggestions to the the

00:19:00,080 --> 00:19:03,830
translator to use you can see one here

00:19:01,940 --> 00:19:05,360
at the bottom we found the similar

00:19:03,830 --> 00:19:07,490
translation departs with eighty percent

00:19:05,360 --> 00:19:09,140
match so we had to build our own

00:19:07,490 --> 00:19:11,600
translation memory system because there

00:19:09,140 --> 00:19:13,340
was no other choice out there that would

00:19:11,600 --> 00:19:15,290
integrate so well with what we're doing

00:19:13,340 --> 00:19:17,540
so we won't really fine grained control

00:19:15,290 --> 00:19:20,330
over went to run the translation memory

00:19:17,540 --> 00:19:22,310
engine went to update them for example

00:19:20,330 --> 00:19:24,260
if you have HTML we want to remove the

00:19:22,310 --> 00:19:25,910
HTML content before doing the fuzzy

00:19:24,260 --> 00:19:27,950
matching so that we'll have a better

00:19:25,910 --> 00:19:29,570
leverage on top of the translation

00:19:27,950 --> 00:19:34,040
engine so we have to build our own yeah

00:19:29,570 --> 00:19:36,260
and also so is it up to me or my side to

00:19:34,040 --> 00:19:39,440
guarantee the quality and maintain the

00:19:36,260 --> 00:19:42,950
quality control yes our company does not

00:19:39,440 --> 00:19:45,020
provide translation services you will

00:19:42,950 --> 00:19:45,860
either need to it's similar to open

00:19:45,020 --> 00:19:47,630
source i guess you can either

00:19:45,860 --> 00:19:50,840
crowdsource it and select people to

00:19:47,630 --> 00:19:52,250
actually improve the quality and if you

00:19:50,840 --> 00:19:53,780
have a big enough community can really

00:19:52,250 --> 00:19:55,670
do it like twitter has four hundred

00:19:53,780 --> 00:19:58,430
thousand translators they can do it

00:19:55,670 --> 00:19:59,690
right so it's like the linux principle

00:19:58,430 --> 00:20:03,409
right the more eyeballs that

00:19:59,690 --> 00:20:05,870
to the bone less bugs but however using

00:20:03,409 --> 00:20:08,029
the reputation system that we build you

00:20:05,870 --> 00:20:10,039
could find quality translators to

00:20:08,029 --> 00:20:11,899
actually improve the quality or you can

00:20:10,039 --> 00:20:13,100
hire professional translators we're just

00:20:11,899 --> 00:20:15,139
the workflow and the collaboration

00:20:13,100 --> 00:20:17,120
platform at least at this point does

00:20:15,139 --> 00:20:20,720
your platform also handle paying

00:20:17,120 --> 00:20:23,120
translators pain pain pain yes okay

00:20:20,720 --> 00:20:24,500
money and not at this point but it's

00:20:23,120 --> 00:20:27,019
something that we're considering for the

00:20:24,500 --> 00:20:29,750
future so all of the work done by

00:20:27,019 --> 00:20:33,080
translators is done for free or we have

00:20:29,750 --> 00:20:36,200
to set up a side channel dehaven yeah at

00:20:33,080 --> 00:20:38,480
this point yeah and we have some

00:20:36,200 --> 00:20:39,860
mechanism to help you do that I mean we

00:20:38,480 --> 00:20:42,259
can show you how many words were

00:20:39,860 --> 00:20:45,500
translated by a translator what was it

00:20:42,259 --> 00:20:47,029
p.m. leverage for those guys and you

00:20:45,500 --> 00:20:48,350
know start working with that there are a

00:20:47,029 --> 00:20:50,600
number of customers that actually do it

00:20:48,350 --> 00:20:52,580
today but we're going to improve that in

00:20:50,600 --> 00:20:56,289
the future it's really key to actually

00:20:52,580 --> 00:20:58,759
streamline the whole process thank you

00:20:56,289 --> 00:21:01,250
thanks to the talk you mentioned that

00:20:58,759 --> 00:21:03,500
you handle dynamic content database

00:21:01,250 --> 00:21:05,179
content that sort of thing but I didn't

00:21:03,500 --> 00:21:07,659
see how it fit into the workflow can you

00:21:05,179 --> 00:21:10,460
talk a little bit about the workflow how

00:21:07,659 --> 00:21:12,529
how is it go through the API how do you

00:21:10,460 --> 00:21:16,309
interact with transifex for dynamic

00:21:12,529 --> 00:21:17,809
content so the API you can use the API

00:21:16,309 --> 00:21:20,000
prop load content on transfixing

00:21:17,809 --> 00:21:22,669
similarly to how you upload translation

00:21:20,000 --> 00:21:24,559
files it's not really different transfix

00:21:22,669 --> 00:21:27,139
takes your file breaks it down to

00:21:24,559 --> 00:21:28,759
segments and then put them puts the

00:21:27,139 --> 00:21:30,950
segment's in the database instead of us

00:21:28,759 --> 00:21:33,649
doing that you can do it yourself so you

00:21:30,950 --> 00:21:35,720
can create a jungle app that takes your

00:21:33,649 --> 00:21:37,309
continent put some transfix we built a

00:21:35,720 --> 00:21:38,870
Drupal plugin that does exactly that

00:21:37,309 --> 00:21:41,870
takes the content from Drupal and put

00:21:38,870 --> 00:21:43,820
some in transifex now it depends on your

00:21:41,870 --> 00:21:45,620
website when do you want to push content

00:21:43,820 --> 00:21:47,059
and when do you want to pull the basic

00:21:45,620 --> 00:21:48,950
principle is whenever you have new

00:21:47,059 --> 00:21:51,620
English content or updated English

00:21:48,950 --> 00:21:54,879
content you want to push and transifex

00:21:51,620 --> 00:21:57,919
has post bugs so that it can notify your

00:21:54,879 --> 00:21:59,929
web application so actually this this

00:21:57,919 --> 00:22:01,970
transition has reached 100 sent you need

00:21:59,929 --> 00:22:03,519
to pull now so you can use the API to

00:22:01,970 --> 00:22:09,500
get the translation and store it in your

00:22:03,519 --> 00:22:12,139
database okay thank you so great talk

00:22:09,500 --> 00:22:13,010
and and and it's a good product and we

00:22:12,139 --> 00:22:15,170
plan to work

00:22:13,010 --> 00:22:17,690
in the future with open source and and

00:22:15,170 --> 00:22:20,840
certainly hopefully Oh with this

00:22:17,690 --> 00:22:24,530
consumer new book but when I looked at

00:22:20,840 --> 00:22:27,560
it a year ago in song it on something

00:22:24,530 --> 00:22:29,270
besides fedora was was a lot more

00:22:27,560 --> 00:22:32,630
engineering than what we were willing to

00:22:29,270 --> 00:22:34,190
put in and so I know that you guys have

00:22:32,630 --> 00:22:36,110
a hosted solution by don't know if it's

00:22:34,190 --> 00:22:39,470
still that way I know this is the hard

00:22:36,110 --> 00:22:41,300
question so no so you can today you can

00:22:39,470 --> 00:22:43,760
just peep installed transifex it should

00:22:41,300 --> 00:22:45,620
work so I can do that on my macbook air

00:22:43,760 --> 00:22:47,900
and it should just like yes awesome

00:22:45,620 --> 00:22:50,420
thank you ideally yes however it's worth

00:22:47,900 --> 00:22:53,960
noting that we're starting to add a lot

00:22:50,420 --> 00:22:55,160
of extra stuff so you might be in the

00:22:53,960 --> 00:22:58,730
near future you might need to add

00:22:55,160 --> 00:23:01,100
readies and mongodb and other things so

00:22:58,730 --> 00:23:02,960
I don't know how is it will be ideal it

00:23:01,100 --> 00:23:04,910
would be really easy as long as the

00:23:02,960 --> 00:23:07,190
Python just does what its specific yeah

00:23:04,910 --> 00:23:08,630
they are yeah yeah awesome but no we all

00:23:07,190 --> 00:23:10,340
will probably go with her suit solution

00:23:08,630 --> 00:23:13,340
was just something that yeah you can

00:23:10,340 --> 00:23:15,350
definitely install it the the trend is

00:23:13,340 --> 00:23:17,300
for people not to install it because

00:23:15,350 --> 00:23:19,130
it's a pain to maintain at some point

00:23:17,300 --> 00:23:20,840
yeah we do have upgrades and a breakage

00:23:19,130 --> 00:23:22,730
and everything but you know web

00:23:20,840 --> 00:23:25,430
applications especially big ones with

00:23:22,730 --> 00:23:26,900
complex and multiple staff are hard to

00:23:25,430 --> 00:23:28,970
maintain so but yeah it should really

00:23:26,900 --> 00:23:33,730
work just reward let us know if it

00:23:28,970 --> 00:23:35,600
doesn't thank you thanks for the talk

00:23:33,730 --> 00:23:38,630
you mentioned that you do weekly

00:23:35,600 --> 00:23:41,420
releases and that brought something to

00:23:38,630 --> 00:23:46,700
mind a pain point that we have we aim to

00:23:41,420 --> 00:23:52,490
do weekly releases as well butcher work

00:23:46,700 --> 00:23:54,830
for idealist.org website project we find

00:23:52,490 --> 00:23:57,380
the workflow very difficult and that we

00:23:54,830 --> 00:23:59,810
have features they can only folding land

00:23:57,380 --> 00:24:01,580
if they're fully translated and our

00:23:59,810 --> 00:24:04,930
translator resources aren't necessarily

00:24:01,580 --> 00:24:09,020
available at a timely manner to do that

00:24:04,930 --> 00:24:10,790
so I'm wondering if you have features in

00:24:09,020 --> 00:24:12,620
the tool or suggestions in the workflow

00:24:10,790 --> 00:24:15,230
side to sort of manage branchy

00:24:12,620 --> 00:24:16,670
development of translations it's

00:24:15,230 --> 00:24:17,900
something that we can do and we hold

00:24:16,670 --> 00:24:20,150
these features off and they get

00:24:17,900 --> 00:24:21,740
translated separately and then they come

00:24:20,150 --> 00:24:23,759
back and then we have another pain point

00:24:21,740 --> 00:24:25,779
emerging translation conflict

00:24:23,759 --> 00:24:27,639
between branches that are out side by

00:24:25,779 --> 00:24:30,009
side is that something that you run into

00:24:27,639 --> 00:24:31,240
when your weekly releases or you know

00:24:30,009 --> 00:24:36,789
their features around that that's a good

00:24:31,240 --> 00:24:38,919
question so similarly to enter a coding

00:24:36,789 --> 00:24:40,750
repository you can have multiple files

00:24:38,919 --> 00:24:43,389
in it so you can upload multiple type

00:24:40,750 --> 00:24:46,389
version of you of your resources you can

00:24:43,389 --> 00:24:48,639
have your UI version 1 UI dash version

00:24:46,389 --> 00:24:50,379
version to you can manage them that way

00:24:48,639 --> 00:24:52,929
they're also a feature in transverse

00:24:50,379 --> 00:24:54,250
called releases it's like a collection

00:24:52,929 --> 00:24:55,779
of resources more or less so you can

00:24:54,250 --> 00:24:58,000
take five of your resources that

00:24:55,779 --> 00:25:00,070
comprise version 1 and see this that

00:24:58,000 --> 00:25:02,889
this is just for that release so you

00:25:00,070 --> 00:25:04,990
could do branch translation using that

00:25:02,889 --> 00:25:08,590
feature it's quite handy actually we do

00:25:04,990 --> 00:25:11,259
it as well now in terms of you also

00:25:08,590 --> 00:25:13,840
mentioned another small thing ok how to

00:25:11,259 --> 00:25:15,370
reuse translations between releases so

00:25:13,840 --> 00:25:16,840
using the translation memory you can

00:25:15,370 --> 00:25:18,940
definitely do that because once you

00:25:16,840 --> 00:25:20,620
charge it on one release these will

00:25:18,940 --> 00:25:21,970
populate your projects translation

00:25:20,620 --> 00:25:24,220
memories so when you start translating

00:25:21,970 --> 00:25:25,600
in the new release you can take those

00:25:24,220 --> 00:25:27,370
translations you think using the

00:25:25,600 --> 00:25:29,950
transition memory and populate your new

00:25:27,370 --> 00:25:32,110
resources so you can you can use that

00:25:29,950 --> 00:25:34,539
and finally a third point that you

00:25:32,110 --> 00:25:37,809
raised was how to coordinate translators

00:25:34,539 --> 00:25:39,279
and see their availability this is one

00:25:37,809 --> 00:25:40,779
of the features that were we are

00:25:39,279 --> 00:25:43,210
developing I don't know where how soon

00:25:40,779 --> 00:25:45,399
it will go live but we're developing a

00:25:43,210 --> 00:25:47,620
task system at job system that you can

00:25:45,399 --> 00:25:49,419
assign tasks to specific people so you

00:25:47,620 --> 00:25:52,360
can say that these resources need to be

00:25:49,419 --> 00:25:55,840
translated in one week or in five days

00:25:52,360 --> 00:25:58,029
or one day and we need them otherwise

00:25:55,840 --> 00:26:00,340
you cannot go live so you cannot start

00:25:58,029 --> 00:26:04,809
building a more fine-grained workflow

00:26:00,340 --> 00:26:09,279
using the tasks okay thanks yeah great

00:26:04,809 --> 00:26:12,129
talk thanks first a quick question do

00:26:09,279 --> 00:26:13,870
you can i initialize the translation

00:26:12,129 --> 00:26:16,090
memories let's say I have an existing

00:26:13,870 --> 00:26:19,000
app that already has some p 0 files that

00:26:16,090 --> 00:26:20,769
might be mostly up to date but but

00:26:19,000 --> 00:26:23,769
possibly out of date can I sort of

00:26:20,769 --> 00:26:25,870
upload those as a you know to sort of

00:26:23,769 --> 00:26:29,049
get things started or do i or do can I

00:26:25,870 --> 00:26:31,720
only upload the p OT file no you cannot

00:26:29,049 --> 00:26:33,309
blow all files okay so there are two

00:26:31,720 --> 00:26:35,289
ways to do that you can upload all your

00:26:33,309 --> 00:26:37,180
files or your p.o files and then

00:26:35,289 --> 00:26:38,500
transfers will take those and Randy

00:26:37,180 --> 00:26:41,440
automatically you don't have to manage

00:26:38,500 --> 00:26:43,930
the TM transmitting does that for you so

00:26:41,440 --> 00:26:45,340
that's the easy way they're ours also

00:26:43,930 --> 00:26:47,710
another way that you can upload the

00:26:45,340 --> 00:26:49,480
standard TMX file which is the standard

00:26:47,710 --> 00:26:52,150
industry standard translation memory

00:26:49,480 --> 00:26:55,660
4matic exchange format so you can also

00:26:52,150 --> 00:26:56,530
upload TMX files ok cool and just a

00:26:55,660 --> 00:26:59,110
quick question I don't know if you're

00:26:56,530 --> 00:27:02,110
familiar with translate wiki and if you

00:26:59,110 --> 00:27:03,430
are can you give maybe you know three

00:27:02,110 --> 00:27:05,740
high-level points where you might differ

00:27:03,430 --> 00:27:08,410
from them well translate weekly mostly

00:27:05,740 --> 00:27:10,300
specializes on wiki stuff as far as I

00:27:08,410 --> 00:27:13,420
know it's not specialized in translating

00:27:10,300 --> 00:27:15,670
neither dynamic content north files nor

00:27:13,420 --> 00:27:17,290
like p 0 files it's harder for you to

00:27:15,670 --> 00:27:21,970
maintain doesn't have a command line

00:27:17,290 --> 00:27:23,350
client and I'm not sure yeah I'm not

00:27:21,970 --> 00:27:25,930
sure about the collaboration features

00:27:23,350 --> 00:27:27,520
either how can you create teams and

00:27:25,930 --> 00:27:29,710
manage teams and different projects and

00:27:27,520 --> 00:27:31,540
things like that i'm not i haven't seen

00:27:29,710 --> 00:27:33,130
it for quite a while i know they're

00:27:31,540 --> 00:27:38,140
doing a really good job with wikipedia

00:27:33,130 --> 00:27:41,020
though all right thank you hi is there

00:27:38,140 --> 00:27:44,470
any place in transifex for built in

00:27:41,020 --> 00:27:46,780
machine translation support which well

00:27:44,470 --> 00:27:49,570
far from perfect can sometimes be a

00:27:46,780 --> 00:27:52,150
useful way to at least get a translation

00:27:49,570 --> 00:27:56,500
started for a project and then have

00:27:52,150 --> 00:27:57,850
humans fix it later on so this is the

00:27:56,500 --> 00:27:59,950
translation interface you couldn't see

00:27:57,850 --> 00:28:02,980
the english string on the top left and

00:27:59,950 --> 00:28:05,740
the greek on the top right so right next

00:28:02,980 --> 00:28:08,440
to the M there when you hover and you

00:28:05,740 --> 00:28:11,050
start translating a small button comes

00:28:08,440 --> 00:28:12,940
says machine translate well firstly you

00:28:11,050 --> 00:28:17,170
can use it to machine translate that

00:28:12,940 --> 00:28:18,790
particular entity and yeah do what you

00:28:17,170 --> 00:28:20,590
have to do that for each string them

00:28:18,790 --> 00:28:22,570
individually irk you just run that over

00:28:20,590 --> 00:28:24,810
a whole file and then maybe go through

00:28:22,570 --> 00:28:27,730
later and and see if it makes sense

00:28:24,810 --> 00:28:30,220
that's a that's an issue for debate a

00:28:27,730 --> 00:28:34,120
lot of fuel has told us not to support

00:28:30,220 --> 00:28:36,400
that because it is being abused but in

00:28:34,120 --> 00:28:38,890
the future we plan on allowing you to

00:28:36,400 --> 00:28:40,750
select the entities in a mass way like

00:28:38,890 --> 00:28:43,150
select all my entities in my file and

00:28:40,750 --> 00:28:44,950
machine translate them ok so you could

00:28:43,150 --> 00:28:46,000
do that in the future yeah I mean it we

00:28:44,950 --> 00:28:47,560
just need to make sure that it's

00:28:46,000 --> 00:28:48,410
implemented the right way so that it's

00:28:47,560 --> 00:28:53,330
not abused

00:28:48,410 --> 00:28:55,640
right okay thank you hi I can't talk a

00:28:53,330 --> 00:28:59,480
little bit about the best practice to

00:28:55,640 --> 00:29:02,410
make your pison application easier easy

00:28:59,480 --> 00:29:06,020
to translate what is the best practice

00:29:02,410 --> 00:29:10,010
well the jungle documentation has a lot

00:29:06,020 --> 00:29:12,170
of advice on how to do that the current

00:29:10,010 --> 00:29:14,210
way that is implemented is i don't know

00:29:12,170 --> 00:29:16,390
i mean it works for us we don't have

00:29:14,210 --> 00:29:21,820
many problems in maintaining the

00:29:16,390 --> 00:29:24,440
translated mmm translated code snippets

00:29:21,820 --> 00:29:25,850
we do have to peel files one for the

00:29:24,440 --> 00:29:29,090
open source version one for the

00:29:25,850 --> 00:29:31,960
transfected net theme it's it works

00:29:29,090 --> 00:29:35,930
pretty ok we didn't we didn't faze many

00:29:31,960 --> 00:29:37,460
internationalisation issues so far to be

00:29:35,930 --> 00:29:40,990
read to be honest do you have any

00:29:37,460 --> 00:29:40,990
specific ones that you want to mention

00:29:43,180 --> 00:29:48,260
ok well you can start and see how it

00:29:46,400 --> 00:29:49,370
goes i wouldn't say that you will face

00:29:48,260 --> 00:29:51,710
many problems in the

00:29:49,370 --> 00:29:53,600
internationalisation aspect the pearls

00:29:51,710 --> 00:29:55,910
thing is the most complex i guess most

00:29:53,600 --> 00:29:58,730
complexity have two or three lines that

00:29:55,910 --> 00:30:01,910
are unnecessary in your code but other

00:29:58,730 --> 00:30:04,820
than that I don't know I don't know many

00:30:01,910 --> 00:30:08,840
many other issues but let us know if you

00:30:04,820 --> 00:30:11,890
have any all right thank you guys let me

00:30:08,840 --> 00:30:11,890

YouTube URL: https://www.youtube.com/watch?v=KOfB5WQb39g


