Title: Saturday Evening Lightning talks (60 minutes)
Publication date: 2012-04-29
Playlist: PyCon 2012
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:10,410
and congratulations you've all survived

00:00:03,389 --> 00:00:14,009
the second day of pike on not a trivial

00:00:10,410 --> 00:00:15,690
task my name is Jenny Keanu you can say

00:00:14,009 --> 00:00:18,180
gingras if it's hard to pronounce I'm

00:00:15,690 --> 00:00:20,699
the co-chair of the conference and I'll

00:00:18,180 --> 00:00:24,529
be leading this closing address while

00:00:20,699 --> 00:00:24,529
jesse is getting some well-deserved rest

00:00:28,279 --> 00:00:32,250
it's going to be fairly quick because we

00:00:30,599 --> 00:00:34,579
don't have much to announce everything

00:00:32,250 --> 00:00:41,070
went perfectly smooth you guys are

00:00:34,579 --> 00:00:43,950
surprisingly well-behaved maybe it's the

00:00:41,070 --> 00:00:46,020
weather one thing that you should note

00:00:43,950 --> 00:00:48,570
and definitely not forget about so maybe

00:00:46,020 --> 00:00:51,629
you want take a note before you go to

00:00:48,570 --> 00:00:54,420
have some refreshments tonight tonight

00:00:51,629 --> 00:00:59,460
we spring forward so you need to adjust

00:00:54,420 --> 00:01:02,430
your watches your your time devices and

00:00:59,460 --> 00:01:07,049
your alarm clock so that you are sharp

00:01:02,430 --> 00:01:12,030
for tomorrow's lightning talks the other

00:01:07,049 --> 00:01:14,159
thing is when you are in the rooms a 12

00:01:12,030 --> 00:01:18,299
a for these rooms are a fairly tight

00:01:14,159 --> 00:01:20,820
given how many you guys are and it would

00:01:18,299 --> 00:01:23,540
be good if you do a big effort to you

00:01:20,820 --> 00:01:27,150
know cram a bit like if there's a few

00:01:23,540 --> 00:01:29,009
free seats in a row do an effort to get

00:01:27,150 --> 00:01:33,090
these free seats instead of taking the

00:01:29,009 --> 00:01:35,000
first seats next to the aisles and that

00:01:33,090 --> 00:01:38,100
being said I think that it's time to

00:01:35,000 --> 00:01:39,990
move forward with the raffle so as you

00:01:38,100 --> 00:01:42,840
know we have some really generous

00:01:39,990 --> 00:01:44,990
sponsors who gave us plenty of goodies

00:01:42,840 --> 00:01:47,610
to give to you guys so we're going to

00:01:44,990 --> 00:01:49,439
give you guys some goodies tonight and

00:01:47,610 --> 00:01:51,750
don't forget to come to the closing

00:01:49,439 --> 00:01:56,610
address tomorrow because that's where we

00:01:51,750 --> 00:02:01,200
have the biggest goodies we mongodb gave

00:01:56,610 --> 00:02:03,260
us a copy of the mongodb book massimo di

00:02:01,200 --> 00:02:08,210
pierro gave us a

00:02:03,260 --> 00:02:13,070
of web 2 pi books Pearson gave us and a

00:02:08,210 --> 00:02:16,580
huge lot of books among which the Python

00:02:13,070 --> 00:02:20,240
phrase book the Python standard library

00:02:16,580 --> 00:02:23,810
by example the Python essential

00:02:20,240 --> 00:02:27,290
reference and the core application

00:02:23,810 --> 00:02:29,180
programming now how am I going to give

00:02:27,290 --> 00:02:32,780
you guys all of these if you were here

00:02:29,180 --> 00:02:36,200
tomorrow you probably remember that we

00:02:32,780 --> 00:02:39,080
learned yesterday about frisbees so if

00:02:36,200 --> 00:02:42,370
you catch a frisbee just go to see these

00:02:39,080 --> 00:02:45,680
guys and you can redeem it for a book

00:02:42,370 --> 00:02:49,610
Robert Brewer developer of web 2 pi also

00:02:45,680 --> 00:02:53,050
a veteran frisbee golf hmm cherry pie

00:02:49,610 --> 00:02:53,050
I'm sorry about that

00:02:55,010 --> 00:03:02,370
is going to help me on this one Robert

00:02:58,050 --> 00:03:04,020
great yeah I have an announcement if you

00:03:02,370 --> 00:03:05,340
are a disc golfer there's an open space

00:03:04,020 --> 00:03:17,790
tomorrow morning we're gonna go play

00:03:05,340 --> 00:03:20,819
Santa Cruz so find the open space whoa

00:03:17,790 --> 00:03:23,569
in a bunch they all of them except the

00:03:20,819 --> 00:03:23,569
get these

00:03:34,350 --> 00:03:38,420
I think if you yeah

00:03:41,090 --> 00:03:43,120
I

00:03:55,250 --> 00:04:04,590
we have a few more oh yeah more yeah so

00:04:02,970 --> 00:04:06,270
if you redeem them right away we're

00:04:04,590 --> 00:04:15,690
going to reuse the frisbees so so try to

00:04:06,270 --> 00:04:20,190
keep a good pace Oh in addition to these

00:04:15,690 --> 00:04:31,260
books one of very generous sponsor that

00:04:20,190 --> 00:04:36,270
cloud is offering a kegerator so for the

00:04:31,260 --> 00:04:39,690
kegerator you need to redeem a red

00:04:36,270 --> 00:04:46,530
frisbee with a black outline guys got

00:04:39,690 --> 00:04:56,730
that so I think we need Robert we're

00:04:46,530 --> 00:05:00,020
going to randomize you okay so I'm going

00:04:56,730 --> 00:05:00,020
to randomize Robert brewer

00:05:00,590 --> 00:05:03,430
to me

00:05:22,380 --> 00:05:40,090
and a few more books and with that I

00:05:36,760 --> 00:05:42,400
pass the mic to know what I was going to

00:05:40,090 --> 00:05:53,710
introduce these evenings lightning talk

00:05:42,400 --> 00:05:55,210
sessions thank you alright well as you

00:05:53,710 --> 00:05:56,650
said I'm no can't ruts and welcome to

00:05:55,210 --> 00:05:59,830
the saturday evening lightning talk

00:05:56,650 --> 00:06:01,870
session at PyCon very conveniently I'm

00:05:59,830 --> 00:06:02,920
now going to reintroduce you to Yannick

00:06:01,870 --> 00:06:04,480
who is going to give us our first

00:06:02,920 --> 00:06:08,650
lightning talk of the evening if he ever

00:06:04,480 --> 00:06:10,420
gets back up on stage they're not done

00:06:08,650 --> 00:06:13,540
yet alright so Yannick will be teaching

00:06:10,420 --> 00:06:19,290
us about PyCon 2014-2015 and everything

00:06:13,540 --> 00:06:23,169
you have to do take right all right guys

00:06:19,290 --> 00:06:27,570
bygone 2014 and 2015 as you may know is

00:06:23,169 --> 00:06:27,570
going to be in Montreal

00:06:31,790 --> 00:06:37,740
Montreal is an island it's fairly dance

00:06:34,940 --> 00:06:40,740
we've got a bunch of universities so

00:06:37,740 --> 00:06:43,800
here in santa clara we enjoy really

00:06:40,740 --> 00:06:46,040
really great weather as you probably

00:06:43,800 --> 00:06:49,440
witness yesterday it's kind of hard to

00:06:46,040 --> 00:06:51,450
get around and gets up snacks so it's

00:06:49,440 --> 00:06:54,270
going to be really refreshing to move to

00:06:51,450 --> 00:06:57,180
a downtown area where within walking

00:06:54,270 --> 00:07:01,890
distance we can get access to four or

00:06:57,180 --> 00:07:07,380
five breweries and many restaurants but

00:07:01,890 --> 00:07:11,780
oh let's skip a spine I think I skipped

00:07:07,380 --> 00:07:16,020
a slide so we're going to have access to

00:07:11,780 --> 00:07:19,410
many downtown amenities but you need a

00:07:16,020 --> 00:07:21,870
passport if you don't have one so those

00:07:19,410 --> 00:07:23,910
of you who are not American you already

00:07:21,870 --> 00:07:27,240
have a passport if you came here so

00:07:23,910 --> 00:07:30,720
you're good if you are if you don't have

00:07:27,240 --> 00:07:33,300
a passport then you should know that you

00:07:30,720 --> 00:07:34,980
need to apply in advance not that long

00:07:33,300 --> 00:07:38,580
in advance but you need to think about

00:07:34,980 --> 00:07:40,400
it and it's good for 10 years so you

00:07:38,580 --> 00:07:46,040
know it even though there's a slight fee

00:07:40,400 --> 00:07:50,040
it's an investment for many years now

00:07:46,040 --> 00:07:54,240
here's the really cool thing today is

00:07:50,040 --> 00:07:58,800
passport day so if you apply for your

00:07:54,240 --> 00:08:00,480
passport today and i'm not sure if many

00:07:58,800 --> 00:08:03,810
of you are going to do that but if you

00:08:00,480 --> 00:08:08,600
apply for your passport today ah then

00:08:03,810 --> 00:08:11,160
you are waived I believe the expedited

00:08:08,600 --> 00:08:13,830
processing fee and a few other goodies

00:08:11,160 --> 00:08:15,980
so it's really easy today to get a

00:08:13,830 --> 00:08:15,980
passport

00:08:16,070 --> 00:08:22,490
go on the travel that state gov website

00:08:19,790 --> 00:08:26,140
for more information and thank you

00:08:22,490 --> 00:08:26,140
looking forward to see you in Montreal

00:08:31,750 --> 00:08:35,900
all right thank you very much Yannick it

00:08:34,460 --> 00:08:38,539
is now my pleasure to introduce dan

00:08:35,900 --> 00:08:41,720
callahan and romney chowdhury 03 that's

00:08:38,539 --> 00:08:45,650
right rami oh we're going to tell

00:08:41,720 --> 00:08:48,920
everyone how to sprint at PyCon um so

00:08:45,650 --> 00:08:52,310
yeah as no I said I'm rami i'm dan and

00:08:48,920 --> 00:08:55,460
we're sprint organizers so what is a

00:08:52,310 --> 00:08:58,370
sprint so brats really going to

00:08:55,460 --> 00:08:59,570
introduce it tomorrow but in short a

00:08:58,370 --> 00:09:02,780
sprint is kind of an open source

00:08:59,570 --> 00:09:05,390
hackathon it's amazing and and they

00:09:02,780 --> 00:09:07,850
start Sunday evening after the rest of

00:09:05,390 --> 00:09:10,160
the Vikon festivities so if you want to

00:09:07,850 --> 00:09:12,440
learn more about sprinting co-ordinating

00:09:10,160 --> 00:09:14,630
sprint or anything else we're your

00:09:12,440 --> 00:09:17,240
sprint coordinators this year and we're

00:09:14,630 --> 00:09:20,330
hosting an open space tomorrow at noon

00:09:17,240 --> 00:09:22,400
in room h1b the open space boards are

00:09:20,330 --> 00:09:25,550
kind of past where you got lunch so go

00:09:22,400 --> 00:09:28,130
that way learn more noon tomorrow and if

00:09:25,550 --> 00:09:30,290
you're interested at all please please

00:09:28,130 --> 00:09:33,380
check the wiki it's linked off the

00:09:30,290 --> 00:09:35,180
schedule page sign up under any project

00:09:33,380 --> 00:09:37,190
if you don't know what you what you want

00:09:35,180 --> 00:09:39,620
to sprint on under a particular project

00:09:37,190 --> 00:09:41,930
if you do know or put your project on

00:09:39,620 --> 00:09:44,990
there if you want to lead a sprint if

00:09:41,930 --> 00:09:46,580
you have any questions or want to ask us

00:09:44,990 --> 00:09:48,530
anything in particular about you know

00:09:46,580 --> 00:09:51,830
the mechanics or if you just want to say

00:09:48,530 --> 00:09:56,410
hi come find one of us so again I'm Rami

00:09:51,830 --> 00:09:56,410
I'm doing and have a great Python

00:10:02,769 --> 00:10:09,230
beeping all right thank you very much

00:10:07,249 --> 00:10:10,970
Danny rami it's not my pleasure to

00:10:09,230 --> 00:10:17,059
introduce objet will be speaking about

00:10:10,970 --> 00:10:19,540
the Python the interactive shell I don't

00:10:17,059 --> 00:10:19,540
have you review

00:10:32,710 --> 00:10:36,900
oh

00:10:44,220 --> 00:10:49,150
hello everyone my name is um Jeff I'm

00:10:47,110 --> 00:10:52,120
going to be talking about be Python

00:10:49,150 --> 00:10:54,610
today I did not write D Python it was a

00:10:52,120 --> 00:10:57,610
gentleman from UK who wrote it but I was

00:10:54,610 --> 00:11:00,460
i found it i use it i love it so i

00:10:57,610 --> 00:11:02,770
figured i'll share it with everyone so

00:11:00,460 --> 00:11:05,740
what's B python it's just a fancy

00:11:02,770 --> 00:11:07,540
interpreter for a Python interpreter or

00:11:05,740 --> 00:11:09,510
if I fancy interface for the Python

00:11:07,540 --> 00:11:13,330
interpreter and it works only in

00:11:09,510 --> 00:11:15,150
unix-like systems like Linux or OSX or

00:11:13,330 --> 00:11:18,400
freebsd solaris all that kind of stuff

00:11:15,150 --> 00:11:20,830
so some of you might be wondering why do

00:11:18,400 --> 00:11:22,750
we need another interface for the

00:11:20,830 --> 00:11:24,910
interpreter because we already have

00:11:22,750 --> 00:11:27,310
ipython and you know it looks it does

00:11:24,910 --> 00:11:31,390
the job and all that stuff well here's

00:11:27,310 --> 00:11:33,460
why because it looks gorgeous so that's

00:11:31,390 --> 00:11:36,490
why we should be looking at it I know

00:11:33,460 --> 00:11:38,470
some of you are not not convinced I see

00:11:36,490 --> 00:11:41,200
a couple of non-believers so I'm going

00:11:38,470 --> 00:11:49,270
to do a quick demo to show you that it

00:11:41,200 --> 00:11:51,040
does look awesome alright so that's be

00:11:49,270 --> 00:11:54,460
Python that's how you launch that and

00:11:51,040 --> 00:12:01,360
let me just get started so let's create

00:11:54,460 --> 00:12:05,110
a new list no big deal but here's where

00:12:01,360 --> 00:12:08,650
it shines so you'll notice that it

00:12:05,110 --> 00:12:11,580
already has syntax highlighting so it's

00:12:08,650 --> 00:12:15,760
almost like an IDE in your interpreter

00:12:11,580 --> 00:12:18,760
that's not everything it actually shows

00:12:15,760 --> 00:12:21,910
you all the collar bones on a particular

00:12:18,760 --> 00:12:25,270
object so now since this is a list i can

00:12:21,910 --> 00:12:27,910
call sort on that and not just that it

00:12:25,270 --> 00:12:30,130
also shows you what as you type it it

00:12:27,910 --> 00:12:33,850
automatically fills it and it shows you

00:12:30,130 --> 00:12:41,170
the doc string for that now let's do

00:12:33,850 --> 00:12:43,089
that and there it is so that's not just

00:12:41,170 --> 00:12:47,470
the thing that it autocompletes it can

00:12:43,089 --> 00:12:49,810
also do our completion on any of the any

00:12:47,470 --> 00:12:53,480
of the keywords or if i start typing

00:12:49,810 --> 00:12:54,410
something it'll fill any kind of local

00:12:53,480 --> 00:12:59,389
ables that is available in your

00:12:54,410 --> 00:13:01,279
namespace now it's DC into import and

00:12:59,389 --> 00:13:03,350
any of this any of the standard

00:13:01,279 --> 00:13:04,970
libraries it'll automatically are

00:13:03,350 --> 00:13:06,649
complete any of the third-party

00:13:04,970 --> 00:13:11,420
libraries it'll automatically

00:13:06,649 --> 00:13:13,190
autocomplete and if you have a Python

00:13:11,420 --> 00:13:15,410
file in your local directory let's say

00:13:13,190 --> 00:13:17,089
for example in this case I have a Python

00:13:15,410 --> 00:13:22,420
file called math underscore funk start

00:13:17,089 --> 00:13:25,699
py it will autocomplete that also and

00:13:22,420 --> 00:13:27,410
not only that it can do it cannot

00:13:25,699 --> 00:13:30,949
complete whatever is callable on that

00:13:27,410 --> 00:13:33,230
module or your third party module and

00:13:30,949 --> 00:13:35,180
even show you the documentation for that

00:13:33,230 --> 00:13:40,639
or if you want to look at the source

00:13:35,180 --> 00:13:43,550
code you can look at that too and it's

00:13:40,639 --> 00:13:46,459
it's all syntax highlighted using

00:13:43,550 --> 00:13:52,540
pigments so it looks nice now that's

00:13:46,459 --> 00:13:52,540
enough of that let's declare a new class

00:14:02,410 --> 00:14:06,630
self

00:14:03,930 --> 00:14:19,890
I'm sorry oh I forgot self let's uh

00:14:06,630 --> 00:14:22,040
let's rewind there we go I forgot def in

00:14:19,890 --> 00:14:22,040
it

00:14:25,510 --> 00:14:30,070
yeah rewind thank you

00:14:37,100 --> 00:14:44,009
now you can you can declare a an object

00:14:41,699 --> 00:14:46,380
of that type and it will show you what

00:14:44,009 --> 00:14:48,690
are the variables you need to fill in

00:14:46,380 --> 00:14:51,899
for that particular for the particular

00:14:48,690 --> 00:14:54,660
object so you can do 2 comma 3 and you

00:14:51,899 --> 00:14:58,259
can right away fill out what can be

00:14:54,660 --> 00:15:00,899
called on that and so on so in addition

00:14:58,259 --> 00:15:03,930
to that you can also post this whole

00:15:00,899 --> 00:15:05,519
session in to paste bin so if i press f8

00:15:03,930 --> 00:15:07,889
it'll ask me whether to post it in to

00:15:05,519 --> 00:15:09,630
paste bin and if i press yes it will put

00:15:07,889 --> 00:15:13,350
it on be pasted net and it will give you

00:15:09,630 --> 00:15:15,240
the URL or if you're if you don't feel

00:15:13,350 --> 00:15:16,740
like posting it on the basement but you

00:15:15,240 --> 00:15:19,319
want to send it to someone else you can

00:15:16,740 --> 00:15:24,620
save the whole session in a file local

00:15:19,319 --> 00:15:24,620
file and it'll be available for either

00:15:25,610 --> 00:15:31,069
there we go and anything that I rewind

00:15:29,550 --> 00:15:34,470
that will not be saved as part of that

00:15:31,069 --> 00:15:36,360
so that is be Python I hope some of you

00:15:34,470 --> 00:15:38,850
are convinced the way to install it is

00:15:36,360 --> 00:15:40,259
you can use pip install d Python or if

00:15:38,850 --> 00:15:43,459
you live in the stone Age's you can

00:15:40,259 --> 00:15:43,459
still use easy install

00:15:50,720 --> 00:15:56,420
so thank you very much and you can find

00:15:54,209 --> 00:15:58,950
us on pound d python on freenode and

00:15:56,420 --> 00:16:07,050
there's a google mailing list and all

00:15:58,950 --> 00:16:08,279
that usual stuff thank you alright thank

00:16:07,050 --> 00:16:10,079
you very much object it is now my

00:16:08,279 --> 00:16:13,399
pleasure to introduce Jeffrey spies we

00:16:10,079 --> 00:16:15,950
talking about open science framework hi

00:16:13,399 --> 00:16:20,209
my name is actually pronounced Spees uh

00:16:15,950 --> 00:16:20,209
that's okay though everybody says that

00:16:20,420 --> 00:16:26,160
so this is my dissertation project at

00:16:23,519 --> 00:16:27,660
UVA my advisor and I have been sort of

00:16:26,160 --> 00:16:30,750
thinking through these problems for a

00:16:27,660 --> 00:16:34,019
while now it's Brian no sick i should

00:16:30,750 --> 00:16:36,810
give him credit here and when I talk

00:16:34,019 --> 00:16:39,240
about science I'm talking about academic

00:16:36,810 --> 00:16:42,990
science this is this idea this grand

00:16:39,240 --> 00:16:45,990
idea of public knowledge building and I

00:16:42,990 --> 00:16:48,149
want to differentiate that from you know

00:16:45,990 --> 00:16:50,459
private science which is the

00:16:48,149 --> 00:16:52,380
accumulation of IP for some competitive

00:16:50,459 --> 00:16:55,940
advantage so we're only talking about

00:16:52,380 --> 00:16:58,740
you know more the academic science in

00:16:55,940 --> 00:17:03,839
that science you know this ideal vision

00:16:58,740 --> 00:17:06,150
of it is it is inherently open yet we

00:17:03,839 --> 00:17:08,939
have these these gaps between scientific

00:17:06,150 --> 00:17:11,309
values these ideal values and actual

00:17:08,939 --> 00:17:13,730
practices in practice things are very

00:17:11,309 --> 00:17:17,309
closed and the system actually

00:17:13,730 --> 00:17:20,549
incentivizes this closed no format of

00:17:17,309 --> 00:17:23,010
doing things so the general goal of the

00:17:20,549 --> 00:17:26,730
open science framework is to create

00:17:23,010 --> 00:17:29,610
tools that decrease this gap but do so

00:17:26,730 --> 00:17:32,220
in a way that fits in with a scientist

00:17:29,610 --> 00:17:34,380
workflow at least at least doesn't make

00:17:32,220 --> 00:17:36,960
it less efficient so we want to try to

00:17:34,380 --> 00:17:41,270
improve that workflow in order to push

00:17:36,960 --> 00:17:41,270
these values into actual practice

00:17:44,780 --> 00:17:49,550
so I think you know in the Python

00:17:47,330 --> 00:17:51,830
community we all understand how

00:17:49,550 --> 00:17:54,410
successful the application of

00:17:51,830 --> 00:17:55,910
open-source values can be but and we

00:17:54,410 --> 00:17:58,940
really need to think about this for

00:17:55,910 --> 00:18:00,410
science and really that's transparency

00:17:58,940 --> 00:18:02,840
and openness and there's there's a

00:18:00,410 --> 00:18:04,820
difference between the two but I think

00:18:02,840 --> 00:18:07,640
either will solve a lot of the problems

00:18:04,820 --> 00:18:09,650
that we have right now we have you know

00:18:07,640 --> 00:18:11,600
these closed access journals where it

00:18:09,650 --> 00:18:13,160
cost someone you know forty dollars an

00:18:11,600 --> 00:18:14,660
article if they don't have a

00:18:13,160 --> 00:18:16,070
subscription a thousand-dollar

00:18:14,660 --> 00:18:19,580
subscription from their library

00:18:16,070 --> 00:18:21,500
thousands of dollars we have papers with

00:18:19,580 --> 00:18:23,930
negative results you know p is greater

00:18:21,500 --> 00:18:27,140
than point 05 going into the file drawer

00:18:23,930 --> 00:18:30,020
which biases or the way we view certain

00:18:27,140 --> 00:18:32,000
fields we have data peeking this is

00:18:30,020 --> 00:18:34,760
looking at data before you actually

00:18:32,000 --> 00:18:36,470
hypothesize something about it and

00:18:34,760 --> 00:18:38,150
that's you know that's an okay way to do

00:18:36,470 --> 00:18:40,490
things that's Explorer bushwell they

00:18:38,150 --> 00:18:42,080
rarely published exploratory research so

00:18:40,490 --> 00:18:43,970
people just don't say that they explored

00:18:42,080 --> 00:18:46,250
their data first but that changes all of

00:18:43,970 --> 00:18:50,720
the expectations and probabilities that

00:18:46,250 --> 00:18:56,350
we believe go into those analyses this

00:18:50,720 --> 00:18:59,810
is this is a big problem okay so

00:18:56,350 --> 00:19:01,730
transparency is is like peeking in the

00:18:59,810 --> 00:19:04,190
window you know not really getting in

00:19:01,730 --> 00:19:05,960
there and and being involved with a

00:19:04,190 --> 00:19:08,900
project but just seeing everything at

00:19:05,960 --> 00:19:10,430
face value so if you if you did look at

00:19:08,900 --> 00:19:12,650
your data ahead of time you'll you'll

00:19:10,430 --> 00:19:15,350
know that or if you did do some outlier

00:19:12,650 --> 00:19:17,390
analysis and you exclude some subjects

00:19:15,350 --> 00:19:21,080
from your from your data analysis you

00:19:17,390 --> 00:19:23,810
make that public and that's really all

00:19:21,080 --> 00:19:25,730
that is required to do good open science

00:19:23,810 --> 00:19:28,250
there's not one way to do good science

00:19:25,730 --> 00:19:32,450
but open science usually makes most of

00:19:28,250 --> 00:19:33,650
those ways good and if if you disagree

00:19:32,450 --> 00:19:35,960
with that please talk to me afterwards

00:19:33,650 --> 00:19:38,210
we're really trying to articulate these

00:19:35,960 --> 00:19:39,740
arguments because I think this is this

00:19:38,210 --> 00:19:41,150
is sort of a battle that a lot of people

00:19:39,740 --> 00:19:48,950
who are interested in open science are

00:19:41,150 --> 00:19:50,090
going to be facing oh well the open open

00:19:48,950 --> 00:19:51,860
aspect is you know actually getting

00:19:50,090 --> 00:19:54,110
involved so getting feedback at an early

00:19:51,860 --> 00:19:55,790
stage allowing collaborators to get

00:19:54,110 --> 00:19:57,440
involved with the project so you know

00:19:55,790 --> 00:19:59,090
people are people

00:19:57,440 --> 00:20:00,679
sometimes try to minimize collaboration

00:19:59,090 --> 00:20:03,019
so they have this you know single author

00:20:00,679 --> 00:20:05,480
or as few authors as possible so their

00:20:03,019 --> 00:20:06,740
name exists in that in that citation if

00:20:05,480 --> 00:20:08,929
you have more than five authors in

00:20:06,740 --> 00:20:11,360
psychology you don't see your name in

00:20:08,929 --> 00:20:13,429
the citation so you know but we really

00:20:11,360 --> 00:20:17,019
should welcome experts in individual

00:20:13,429 --> 00:20:20,960
areas to collaborate on these projects

00:20:17,019 --> 00:20:25,279
okay so open is the ideal transparent is

00:20:20,960 --> 00:20:26,899
okay for now we but if we start with

00:20:25,279 --> 00:20:28,429
transparency I think we can move towards

00:20:26,899 --> 00:20:31,129
openness if we provide the tools that

00:20:28,429 --> 00:20:33,230
allow for transparency the next step to

00:20:31,129 --> 00:20:35,000
openness and all the arguments that

00:20:33,230 --> 00:20:39,139
we're making for openness should be

00:20:35,000 --> 00:20:42,200
right there for us okay and I think this

00:20:39,139 --> 00:20:44,539
is really important now you know we

00:20:42,200 --> 00:20:46,460
talked about the age of big data this is

00:20:44,539 --> 00:20:48,559
this idea that data has gotten so large

00:20:46,460 --> 00:20:51,799
that's it's becoming difficult to manage

00:20:48,559 --> 00:20:53,600
with our current tools but it's sort of

00:20:51,799 --> 00:20:55,549
become transformative and what we can

00:20:53,600 --> 00:20:57,110
learn from that data we don't have to

00:20:55,549 --> 00:20:58,370
rely on this null hypothesis testing

00:20:57,110 --> 00:21:00,590
where we're trying to look for these p

00:20:58,370 --> 00:21:01,970
values we just know sort of what the

00:21:00,590 --> 00:21:04,580
result is if we have millions and

00:21:01,970 --> 00:21:06,200
millions of rows of data it really

00:21:04,580 --> 00:21:08,659
transforms the way that we can do our

00:21:06,200 --> 00:21:10,700
analysis but and I think we're at the

00:21:08,659 --> 00:21:12,679
age of big science we need massive

00:21:10,700 --> 00:21:14,990
collaborations massive data collection

00:21:12,679 --> 00:21:19,070
no more jack of all trades we need

00:21:14,990 --> 00:21:20,600
experts doing what they do best so I'm

00:21:19,070 --> 00:21:22,940
going to skip down to the study registry

00:21:20,600 --> 00:21:25,009
we want to make this easy to use to

00:21:22,940 --> 00:21:27,110
document organized and search research

00:21:25,009 --> 00:21:29,090
we want to timestamp everything keep

00:21:27,110 --> 00:21:33,320
versions its collaboration software

00:21:29,090 --> 00:21:36,649
version control software here's the type

00:21:33,320 --> 00:21:39,769
technologies we're using it's all

00:21:36,649 --> 00:21:41,029
python-based there's a huge to-do list

00:21:39,769 --> 00:21:43,759
of things that I think would be valuable

00:21:41,029 --> 00:21:46,309
for other projects as well if you want

00:21:43,759 --> 00:21:49,990
to get involved let me know we're really

00:21:46,309 --> 00:21:49,990
welcoming collaboration thank you

00:21:55,350 --> 00:22:01,840
thank you very much Jess Jeffrey now I'd

00:21:59,860 --> 00:22:04,270
like to introduce Brock arslaan think

00:22:01,840 --> 00:22:07,960
you'll be speaking about RPC lift hello

00:22:04,270 --> 00:22:09,549
everyone everyone can you me yeah okay

00:22:07,960 --> 00:22:12,850
IRA sleep is a project that I've been

00:22:09,549 --> 00:22:16,299
working on and off since 2010 now what

00:22:12,850 --> 00:22:17,440
is it it's a actually a an RBC library

00:22:16,299 --> 00:22:19,120
that makes it convenient for you to

00:22:17,440 --> 00:22:22,030
expose your services using multiple

00:22:19,120 --> 00:22:24,010
protocols and it also forces you to have

00:22:22,030 --> 00:22:25,600
a well-defined API simply because a

00:22:24,010 --> 00:22:27,700
static typing actually works very well

00:22:25,600 --> 00:22:30,370
when your data comes from an untrusted

00:22:27,700 --> 00:22:32,470
sources so how does it work here's a

00:22:30,370 --> 00:22:35,230
simple function that returns the current

00:22:32,470 --> 00:22:39,070
date time in UTC so we want to export it

00:22:35,230 --> 00:22:41,919
as we want to expose it to outside world

00:22:39,070 --> 00:22:43,990
so to do that we first wrap it in a

00:22:41,919 --> 00:22:46,720
service-based subclass so here's our

00:22:43,990 --> 00:22:48,610
function we do the necessary import we

00:22:46,720 --> 00:22:51,610
define our service definition and we

00:22:48,610 --> 00:22:53,919
wrap it inside the integral in the SRS

00:22:51,610 --> 00:22:58,510
pc decorator and we specify the return

00:22:53,919 --> 00:23:00,340
type so second we have to wrap the wrap

00:22:58,510 --> 00:23:03,820
this inside an application definition an

00:23:00,340 --> 00:23:06,130
application bind multiple one or more

00:23:03,820 --> 00:23:09,309
services with important route and input

00:23:06,130 --> 00:23:11,200
and output protocol so here's our hizzle

00:23:09,309 --> 00:23:13,179
service it's a it's inside an interval

00:23:11,200 --> 00:23:16,350
because it has to take multiple services

00:23:13,179 --> 00:23:19,360
service definitions so here's our import

00:23:16,350 --> 00:23:22,990
dtn S stands for the namespace it can be

00:23:19,360 --> 00:23:25,240
actually any any arbitrary string and in

00:23:22,990 --> 00:23:27,850
protocol and out protocol are what our

00:23:25,240 --> 00:23:30,010
function receives our it gets the

00:23:27,850 --> 00:23:32,230
arguments for and returns the response

00:23:30,010 --> 00:23:34,090
as and it's called HTTP RPC simply

00:23:32,230 --> 00:23:36,100
because I want to avoid this pointless

00:23:34,090 --> 00:23:38,110
discussion around rest what is very more

00:23:36,100 --> 00:23:40,179
restful what is less stressful I don't

00:23:38,110 --> 00:23:41,919
want to go into that discussion so

00:23:40,179 --> 00:23:44,320
anyway we wrap the application now

00:23:41,919 --> 00:23:46,059
inside the insider transport here I

00:23:44,320 --> 00:23:48,190
chose the whiskey whiskey application

00:23:46,059 --> 00:23:50,530
transport and now here the application

00:23:48,190 --> 00:23:51,940
variable actually contains and I with a

00:23:50,530 --> 00:23:54,340
regular visca application that you can

00:23:51,940 --> 00:23:56,770
expose using any any whiskey

00:23:54,340 --> 00:24:00,309
implementation that you like so when we

00:23:56,770 --> 00:24:02,950
cure it with curl you get a current date

00:24:00,309 --> 00:24:04,799
time so what you want to take post is

00:24:02,950 --> 00:24:07,420
use this function using another protocol

00:24:04,799 --> 00:24:09,760
for example soap RP syllables

00:24:07,420 --> 00:24:11,770
support so part of the box and you just

00:24:09,760 --> 00:24:14,500
change the odd protocol you would change

00:24:11,770 --> 00:24:16,090
the input protocol as well but then for

00:24:14,500 --> 00:24:17,350
the sake of this discussion I want to

00:24:16,090 --> 00:24:19,360
keep it this way because otherwise you

00:24:17,350 --> 00:24:22,270
would have to use a purpose of client

00:24:19,360 --> 00:24:26,620
issue request so anyway when we create

00:24:22,270 --> 00:24:28,750
we curl you get this response so when

00:24:26,620 --> 00:24:31,180
you clear it with when you change the

00:24:28,750 --> 00:24:34,770
output to examine objects so that you

00:24:31,180 --> 00:24:39,520
want to for example get just the xml tag

00:24:34,770 --> 00:24:41,530
here's what you get and it actually also

00:24:39,520 --> 00:24:43,960
supports HTML microformats so

00:24:41,530 --> 00:24:46,690
microformats and you change the protocol

00:24:43,960 --> 00:24:49,030
to that and you get a HTML fragment back

00:24:46,690 --> 00:24:50,830
this is actually quite a configurable

00:24:49,030 --> 00:24:53,080
you can use for example space instead of

00:24:50,830 --> 00:24:56,320
divs and you can also change the way

00:24:53,080 --> 00:24:59,050
they daytime string looks so you get the

00:24:56,320 --> 00:25:01,810
idea I artists leave also makes it easy

00:24:59,050 --> 00:25:03,790
to implement another custom protocols so

00:25:01,810 --> 00:25:06,580
for the sake of this discussion we're

00:25:03,790 --> 00:25:09,580
going to implement and as a protocol

00:25:06,580 --> 00:25:13,720
that is the same data and exports as an

00:25:09,580 --> 00:25:15,550
SVG so we have to do that we need to

00:25:13,720 --> 00:25:19,210
implement some protocols in a protocol

00:25:15,550 --> 00:25:21,760
based child and here's our class so we

00:25:19,210 --> 00:25:25,120
define the mime type we we override the

00:25:21,760 --> 00:25:26,890
civilized function D variable in this

00:25:25,120 --> 00:25:28,210
case why does it contain the return

00:25:26,890 --> 00:25:31,480
value you'll have to have look at the

00:25:28,210 --> 00:25:33,430
documentation tool to understand why it

00:25:31,480 --> 00:25:35,410
is so so anyway I skipped the

00:25:33,430 --> 00:25:39,160
boilerplate and the out document now

00:25:35,410 --> 00:25:41,550
contains an lxml fragment and I defy

00:25:39,160 --> 00:25:46,030
override the created stream function to

00:25:41,550 --> 00:25:48,790
to show to to write how the alexandrite

00:25:46,030 --> 00:25:52,150
matt has actually returned the stream so

00:25:48,790 --> 00:25:55,360
i plug it in and i get a proper i get

00:25:52,150 --> 00:25:57,910
another clock it's all easy to implement

00:25:55,360 --> 00:26:01,270
declare to restrictions on input data so

00:25:57,910 --> 00:26:04,060
here's a function that would be that we

00:26:01,270 --> 00:26:06,850
normally that has what we normally would

00:26:04,060 --> 00:26:09,070
to do when we when do we want to check

00:26:06,850 --> 00:26:11,020
everything that you might want to make

00:26:09,070 --> 00:26:14,350
sure that the int the coming month is a

00:26:11,020 --> 00:26:17,800
valid value but if you would if you do

00:26:14,350 --> 00:26:19,780
it declaratively we just you know define

00:26:17,800 --> 00:26:20,800
the range and we get we can get we think

00:26:19,780 --> 00:26:25,210
do away with all

00:26:20,800 --> 00:26:29,550
is checking a bullet freight so you have

00:26:25,210 --> 00:26:29,550
to also enable TN able to validation a

00:26:29,940 --> 00:26:35,140
function and if you do that you can

00:26:32,920 --> 00:26:39,040
learn what once you get once you supply

00:26:35,140 --> 00:26:41,050
a proper a valid value you get you get a

00:26:39,040 --> 00:26:44,440
response back and once you supply an

00:26:41,050 --> 00:26:49,060
invalid value you'll get a 400 but a bad

00:26:44,440 --> 00:26:50,860
request response so what's missing a lot

00:26:49,060 --> 00:26:53,350
of things actually it doesn't support

00:26:50,860 --> 00:26:55,840
Jason protocol buffers xmlrpc drift

00:26:53,350 --> 00:26:57,520
those are all popular protocols that you

00:26:55,840 --> 00:26:59,130
might want to use it also doesn't

00:26:57,520 --> 00:27:02,380
support smtp it will be interesting

00:26:59,130 --> 00:27:04,840
files spdy that's the new kid on the

00:27:02,380 --> 00:27:06,940
block web socket and many other things

00:27:04,840 --> 00:27:09,250
there's actually a file that talks about

00:27:06,940 --> 00:27:12,640
that so the other you can get additional

00:27:09,250 --> 00:27:14,980
information from the code is up there on

00:27:12,640 --> 00:27:18,660
the guitar and the example files are

00:27:14,980 --> 00:27:18,660
also up there thanks

00:27:24,410 --> 00:27:28,860
alright thank you very much Brock our

00:27:27,390 --> 00:27:34,050
next speaker up is Jason Crouse while

00:27:28,860 --> 00:27:36,540
speaking about docket hello this

00:27:34,050 --> 00:27:38,610
presentation is on jango docket django

00:27:36,540 --> 00:27:42,630
style document store just a little

00:27:38,610 --> 00:27:44,280
background I work out web Q we do CMS

00:27:42,630 --> 00:27:48,540
and e-commerce I've been doing Django

00:27:44,280 --> 00:27:52,530
for four years over it's great for our

00:27:48,540 --> 00:27:56,340
clients and I love Django but clients

00:27:52,530 --> 00:27:58,290
throw is looking to add new features now

00:27:56,340 --> 00:28:00,870
they'll ask us to tack on more fields to

00:27:58,290 --> 00:28:04,020
the model and that results in like code

00:28:00,870 --> 00:28:06,540
being fragmented having to maintain

00:28:04,020 --> 00:28:08,610
migrations and we try other things to

00:28:06,540 --> 00:28:10,500
get around that like maybe have an app

00:28:08,610 --> 00:28:12,570
that you know adds a feature to another

00:28:10,500 --> 00:28:15,360
app but that you know involves more

00:28:12,570 --> 00:28:17,760
queries we've done things with eav

00:28:15,360 --> 00:28:20,760
tables and json fields all to try and

00:28:17,760 --> 00:28:23,670
give our clients the ability to extend

00:28:20,760 --> 00:28:26,990
models and introduce new functionality

00:28:23,670 --> 00:28:29,190
without trying to change our code so

00:28:26,990 --> 00:28:32,550
those things didn't work out very well

00:28:29,190 --> 00:28:37,080
for us I mean they work but always feel

00:28:32,550 --> 00:28:39,900
dirty afterwards so I started working on

00:28:37,080 --> 00:28:44,640
this project called Jango docket and the

00:28:39,900 --> 00:28:47,010
idea is I you build documents in Django

00:28:44,640 --> 00:28:48,720
a lot like you would do models and the

00:28:47,010 --> 00:28:51,090
whole experience is supposed to be

00:28:48,720 --> 00:28:53,190
batteries included so that way you know

00:28:51,090 --> 00:28:54,600
when you build these documents it will

00:28:53,190 --> 00:28:56,700
integrate with the admin it will

00:28:54,600 --> 00:28:59,970
integrate with class-based views it will

00:28:56,700 --> 00:29:02,460
integrate with forms and it's also

00:28:59,970 --> 00:29:06,120
back-end agnostic so it can be powered

00:29:02,460 --> 00:29:09,860
by jingoes ORM MongoDB looking forward

00:29:06,120 --> 00:29:13,550
to doing a CouchDB implementation and

00:29:09,860 --> 00:29:17,820
but there's one key difference no joints

00:29:13,550 --> 00:29:22,110
so here's an example of a document and

00:29:17,820 --> 00:29:24,630
docket book so we have book document

00:29:22,110 --> 00:29:27,570
which has a field author which

00:29:24,630 --> 00:29:30,570
references another schema so you know we

00:29:27,570 --> 00:29:33,900
can create this really complex document

00:29:30,570 --> 00:29:34,900
and you would query it a lot like you

00:29:33,900 --> 00:29:37,180
would

00:29:34,900 --> 00:29:39,490
model but there's one key difference and

00:29:37,180 --> 00:29:42,790
that is instead of defining indexes on

00:29:39,490 --> 00:29:45,760
fields you n you define indexes on query

00:29:42,790 --> 00:29:49,180
operations so it's like the whole thing

00:29:45,760 --> 00:29:53,800
that you're indexing as far as admin

00:29:49,180 --> 00:29:55,450
support is concerned collections show up

00:29:53,800 --> 00:29:58,480
in the admin you get all the crud based

00:29:55,450 --> 00:30:00,250
operations there's some more complex

00:29:58,480 --> 00:30:05,020
fields in there that the admin also

00:30:00,250 --> 00:30:07,270
supports but I still wanted more I mean

00:30:05,020 --> 00:30:09,310
here I have documents and I see that's

00:30:07,270 --> 00:30:11,080
great for content don't have to worry

00:30:09,310 --> 00:30:13,300
about migrations they can be created on

00:30:11,080 --> 00:30:15,430
the fly and I have efficient indexing

00:30:13,300 --> 00:30:18,160
and they can represent some complex

00:30:15,430 --> 00:30:20,560
ideas as a programmer I don't want to

00:30:18,160 --> 00:30:22,450
have to deal with code every time a

00:30:20,560 --> 00:30:24,880
client's like oh add this field at this

00:30:22,450 --> 00:30:28,120
field rather I would prefer to empower

00:30:24,880 --> 00:30:31,750
our power users to create document and

00:30:28,120 --> 00:30:35,050
views and so that's what doc at CMS

00:30:31,750 --> 00:30:36,850
tries to do and it comp which is it by

00:30:35,050 --> 00:30:39,520
allowing you to create collections in

00:30:36,850 --> 00:30:41,860
the admin attach viewpoints which are

00:30:39,520 --> 00:30:43,930
basically views configurable views and

00:30:41,860 --> 00:30:47,110
right now we have like lists detail

00:30:43,930 --> 00:30:48,400
category views with filtering and they

00:30:47,110 --> 00:30:50,230
don't have to necessarily use

00:30:48,400 --> 00:30:53,530
collections they can use models as well

00:30:50,230 --> 00:30:55,780
and i look forward to adding some more

00:30:53,530 --> 00:30:58,570
functionality like you know have a form

00:30:55,780 --> 00:31:00,400
that people submit and it would populate

00:30:58,570 --> 00:31:03,280
a collection you know would be a

00:31:00,400 --> 00:31:06,400
possible viewpoint also add in API and

00:31:03,280 --> 00:31:08,620
search there's also another concept

00:31:06,400 --> 00:31:11,400
called nixon's and the idea is that

00:31:08,620 --> 00:31:13,720
extends collections and viewpoints

00:31:11,400 --> 00:31:16,120
introducing new functionality changing

00:31:13,720 --> 00:31:20,560
how things are rendered and that's how

00:31:16,120 --> 00:31:23,440
we do widgets and dock at CMS but you

00:31:20,560 --> 00:31:26,530
know there's a demo right there for you

00:31:23,440 --> 00:31:31,330
to see please be nice its alpha and it's

00:31:26,530 --> 00:31:33,700
not it's only like one dino on Heroku so

00:31:31,330 --> 00:31:38,130
check it out and with luck we might be

00:31:33,700 --> 00:31:38,130
using it and web cube so that's it

00:31:44,850 --> 00:31:49,240
all right thank you very much Jason our

00:31:47,890 --> 00:31:50,890
next speaker for the evening is Sam

00:31:49,240 --> 00:31:56,230
Clark will be speaking about Python in

00:31:50,890 --> 00:31:59,140
the wild okay is it just me or PyCon

00:31:56,230 --> 00:32:01,870
seems like surfing it's is tiring but in

00:31:59,140 --> 00:32:03,430
a really good way okay i'm going to be

00:32:01,870 --> 00:32:04,780
talking just very briefly about

00:32:03,430 --> 00:32:07,110
developing with django in the Galapagos

00:32:04,780 --> 00:32:11,860
Islands which is where I'm based and

00:32:07,110 --> 00:32:15,490
we've seen a lot of Python tutorials and

00:32:11,860 --> 00:32:18,910
and lectures today in the last couple of

00:32:15,490 --> 00:32:21,490
days as well and they go into the inner

00:32:18,910 --> 00:32:24,610
workings of Python this is nothing about

00:32:21,490 --> 00:32:27,490
that I'm going to be telling you about

00:32:24,610 --> 00:32:29,800
using Django and Python in a kind of

00:32:27,490 --> 00:32:32,440
unusual isolated setting that maybe

00:32:29,800 --> 00:32:34,360
haven't come across before hopefully

00:32:32,440 --> 00:32:35,770
inspires you to the fact that we can use

00:32:34,360 --> 00:32:38,110
this in different different places

00:32:35,770 --> 00:32:39,910
around the world so this is where I work

00:32:38,110 --> 00:32:42,010
this is the galapagos islands in the

00:32:39,910 --> 00:32:45,790
Pacific Ocean we're about a thousand

00:32:42,010 --> 00:32:48,370
kilometers outside of Ecuador and this

00:32:45,790 --> 00:32:51,060
is the NGO that I work for it's a

00:32:48,370 --> 00:32:53,020
scientific NGO found in 1959 I'm

00:32:51,060 --> 00:32:54,760
basically with the intention of

00:32:53,020 --> 00:32:57,490
generating scientific data by the

00:32:54,760 --> 00:32:59,020
Galapagos Islands and it provides a

00:32:57,490 --> 00:33:03,040
platform for scientific research in the

00:32:59,020 --> 00:33:06,370
area I am myself I've got a background

00:33:03,040 --> 00:33:12,880
in biology and have recently graduated

00:33:06,370 --> 00:33:16,600
or migrated myself to web programming so

00:33:12,880 --> 00:33:18,880
this is where I work this is the my day

00:33:16,600 --> 00:33:20,890
to day and we have a really large

00:33:18,880 --> 00:33:25,690
development team it's a massive massive

00:33:20,890 --> 00:33:27,190
development team that's it as two people

00:33:25,690 --> 00:33:29,650
working in as you can see a very

00:33:27,190 --> 00:33:31,960
organized office environment so

00:33:29,650 --> 00:33:33,550
everything that you guys may be a used

00:33:31,960 --> 00:33:35,470
two of you know like really fast

00:33:33,550 --> 00:33:37,450
internet connections and you know

00:33:35,470 --> 00:33:41,290
service tax this is the opposite of what

00:33:37,450 --> 00:33:43,120
we have to deal with so working a

00:33:41,290 --> 00:33:45,639
paradise is really nice but we have

00:33:43,120 --> 00:33:48,429
certain specific challenges which

00:33:45,639 --> 00:33:51,129
you know technology based internet is

00:33:48,429 --> 00:33:55,570
hidden mess at the very best it's a

00:33:51,129 --> 00:33:57,669
dial-up connection and we're also an NGO

00:33:55,570 --> 00:33:59,679
were funded by donations so our

00:33:57,669 --> 00:34:03,190
technology is limited to say the least

00:33:59,679 --> 00:34:06,639
and we do have freaking power outages

00:34:03,190 --> 00:34:08,379
it's a weekly event and we did not have

00:34:06,639 --> 00:34:10,000
a Python community in the Galapagos

00:34:08,379 --> 00:34:12,760
Islands and they're really not a Python

00:34:10,000 --> 00:34:15,099
community in in Ecuador and so any

00:34:12,760 --> 00:34:18,339
problems we come across you know Stack

00:34:15,099 --> 00:34:22,569
Overflow no notwithstanding we have to

00:34:18,339 --> 00:34:25,089
figure out their stuff ourselves so what

00:34:22,569 --> 00:34:27,039
do I have to deal with day-to-day and we

00:34:25,089 --> 00:34:28,929
have a lot of scientific data generated

00:34:27,039 --> 00:34:30,639
over 50 years a lot of collaborating

00:34:28,929 --> 00:34:34,950
scientists coming to the Galapagos

00:34:30,639 --> 00:34:38,079
Islands and and it exists in a various

00:34:34,950 --> 00:34:40,690
variety formats we have filing cabinets

00:34:38,079 --> 00:34:43,720
full of paper we have access databases

00:34:40,690 --> 00:34:45,909
we have Excel spreadsheets and it's our

00:34:43,720 --> 00:34:47,289
job to try and make something out of

00:34:45,909 --> 00:34:51,940
that that we can present to the rest of

00:34:47,289 --> 00:34:53,500
the world my do we use python django to

00:34:51,940 --> 00:34:55,299
do this well obviously the open source

00:34:53,500 --> 00:34:56,740
is very nice when you're an NGO because

00:34:55,299 --> 00:35:00,130
we don't have that much money to spend

00:34:56,740 --> 00:35:02,200
and Python as you all know is an amazing

00:35:00,130 --> 00:35:05,470
community it's wonderful to have you

00:35:02,200 --> 00:35:07,750
guys supporting us and the scientific

00:35:05,470 --> 00:35:09,819
lab is in Python really lend itself to

00:35:07,750 --> 00:35:12,759
what we do with scientific data within

00:35:09,819 --> 00:35:14,500
the charles darwin foundation and geo

00:35:12,759 --> 00:35:17,140
django were just getting started west

00:35:14,500 --> 00:35:20,799
but because we have such a large geo

00:35:17,140 --> 00:35:22,390
spatial component of our data then it's

00:35:20,799 --> 00:35:25,900
something that we're really starting to

00:35:22,390 --> 00:35:29,740
appreciate more and more and of course

00:35:25,900 --> 00:35:32,500
these things are really a lot of fun so

00:35:29,740 --> 00:35:35,349
what we're trying to do is provide a

00:35:32,500 --> 00:35:37,349
platform a portal where people from

00:35:35,349 --> 00:35:41,140
outside of the globe because can can

00:35:37,349 --> 00:35:43,509
view our scientific data basically we

00:35:41,140 --> 00:35:44,950
have things like species checklist which

00:35:43,509 --> 00:35:48,390
is one of the most comprehensive in the

00:35:44,950 --> 00:35:51,000
world we have our own journal we have a

00:35:48,390 --> 00:35:53,069
and a specimen database which is one of

00:35:51,000 --> 00:35:56,069
the most comprehensive as well climate

00:35:53,069 --> 00:36:03,150
database which is the most continuous

00:35:56,069 --> 00:36:06,210
record of climatologists contentious at

00:36:03,150 --> 00:36:08,549
the moment and a sneak peak and what

00:36:06,210 --> 00:36:11,250
we're building at the moment don't go to

00:36:08,549 --> 00:36:12,900
Charles Darwin dot all or the URL

00:36:11,250 --> 00:36:16,769
whatever you're looking up at the moment

00:36:12,900 --> 00:36:18,510
because that's the old version we are

00:36:16,769 --> 00:36:20,309
not proud of it the new version is

00:36:18,510 --> 00:36:23,250
coming so don't expect to see something

00:36:20,309 --> 00:36:26,000
that I'm talking about now so it's

00:36:23,250 --> 00:36:28,410
horrible but we are changing it and

00:36:26,000 --> 00:36:30,260
we're trying to coincide our new launch

00:36:28,410 --> 00:36:33,480
with the international day for

00:36:30,260 --> 00:36:35,549
Biological biodiversity or diversity and

00:36:33,480 --> 00:36:38,130
22nd MA hopefully that's going to be

00:36:35,549 --> 00:36:40,049
rolled out and I just want to say thanks

00:36:38,130 --> 00:36:42,089
to my team I want to say thanks to pike

00:36:40,049 --> 00:36:44,250
on for allowing me to be here they

00:36:42,089 --> 00:36:47,069
helped out financially and I have a lot

00:36:44,250 --> 00:36:48,599
of respect for that and at the moment

00:36:47,069 --> 00:36:50,010
we're looking for Django developers

00:36:48,599 --> 00:36:51,269
people that want to collaborate an

00:36:50,010 --> 00:36:54,029
interesting project that could be

00:36:51,269 --> 00:36:55,289
remotely it could also involve coming to

00:36:54,029 --> 00:36:57,809
the Galapagos Islands and spending some

00:36:55,289 --> 00:36:59,519
time in helping us so if you're in that

00:36:57,809 --> 00:37:02,670
camp please come and see me at the front

00:36:59,519 --> 00:37:04,910
after the talks are finished thank you

00:37:02,670 --> 00:37:04,910
very much

00:37:10,820 --> 00:37:15,390
alright thank you very much for that

00:37:12,630 --> 00:37:18,900
very tempting offer I think you'll get

00:37:15,390 --> 00:37:20,220
more than a few hits on that next

00:37:18,900 --> 00:37:22,260
speaker Julia elman will be speaking

00:37:20,220 --> 00:37:29,130
about using less with Django please give

00:37:22,260 --> 00:37:31,050
her hand hello testing testing yes how

00:37:29,130 --> 00:37:32,700
first of all I was kind of curious got a

00:37:31,050 --> 00:37:34,290
big group of people here i'm curious how

00:37:32,700 --> 00:37:37,320
many of you are django users in the room

00:37:34,290 --> 00:37:40,410
raise your hand wow that's awesome

00:37:37,320 --> 00:37:41,880
awesome right on thank you so today I'm

00:37:40,410 --> 00:37:44,460
going to talk about using less with

00:37:41,880 --> 00:37:46,440
Django in your workflow and stuff like

00:37:44,460 --> 00:37:48,030
that not going to get into less for

00:37:46,440 --> 00:37:50,520
success or any of that stuff for anyone

00:37:48,030 --> 00:37:53,369
that's familiar with us too so um so

00:37:50,520 --> 00:37:55,560
first of all what is less so let's

00:37:53,369 --> 00:37:57,420
extend CSS with dynamic behaviors such

00:37:55,560 --> 00:38:00,420
as variables mix-ins operations and

00:37:57,420 --> 00:38:03,060
functions so what is that basically it's

00:38:00,420 --> 00:38:05,580
an easier more seamless way for you or

00:38:03,060 --> 00:38:09,050
your front-end people to be able to

00:38:05,580 --> 00:38:13,470
write CSS in a very simple manner um and

00:38:09,050 --> 00:38:15,510
we use it at cactus group right now so

00:38:13,470 --> 00:38:17,520
for example if you want to instead of

00:38:15,510 --> 00:38:20,190
constantly having to write a hexadecimal

00:38:17,520 --> 00:38:24,359
number for color you can actually say

00:38:20,190 --> 00:38:26,130
dark red so in this example here or blue

00:38:24,359 --> 00:38:28,320
and then you can hear it's also showing

00:38:26,130 --> 00:38:30,859
sort of a nesting way that you can and

00:38:28,320 --> 00:38:34,230
do it as well so and you can go on to

00:38:30,859 --> 00:38:35,850
less CSS dot org I believe in order to

00:38:34,230 --> 00:38:37,020
see how all those awesome little

00:38:35,850 --> 00:38:41,250
functions and things that you can do

00:38:37,020 --> 00:38:43,290
with less so workflow so you have this

00:38:41,250 --> 00:38:46,890
less file that you have to compile and

00:38:43,290 --> 00:38:49,260
then put up somehow as CSS and refer to

00:38:46,890 --> 00:38:51,210
work with your website application so

00:38:49,260 --> 00:38:53,369
what is the workflow you want well I

00:38:51,210 --> 00:38:55,020
really wanted to be able to version

00:38:53,369 --> 00:38:58,109
control my last well because it didn't

00:38:55,020 --> 00:38:59,580
make sense to it any other way so I kind

00:38:58,109 --> 00:39:03,869
of looked at third party apps in order

00:38:59,580 --> 00:39:08,190
to make this a CSS file we're basically

00:39:03,869 --> 00:39:09,420
compiles locally and you have your CSS

00:39:08,190 --> 00:39:13,680
file and you push that up and whatnot

00:39:09,420 --> 00:39:15,390
but I didn't really like that so much so

00:39:13,680 --> 00:39:17,310
let's say you have your CSS file you

00:39:15,390 --> 00:39:20,010
well you've worked in your less file you

00:39:17,310 --> 00:39:21,100
compile it locally with like a third

00:39:20,010 --> 00:39:23,640
probably a party

00:39:21,100 --> 00:39:26,380
application and you put your CSS file up

00:39:23,640 --> 00:39:28,510
then if someone says oh hey well I'm

00:39:26,380 --> 00:39:30,880
gonna pull that from you know version

00:39:28,510 --> 00:39:32,770
control and actually tweak it and push

00:39:30,880 --> 00:39:34,480
back up well then poof there goes your

00:39:32,770 --> 00:39:39,100
last fall which makes for a very very

00:39:34,480 --> 00:39:40,930
sad panda so we started using something

00:39:39,100 --> 00:39:43,330
called Jane compressor which some of you

00:39:40,930 --> 00:39:45,430
may or may not be familiar with so this

00:39:43,330 --> 00:39:50,050
is something that helps you compress

00:39:45,430 --> 00:39:52,690
your JavaScript and CSS files so and I

00:39:50,050 --> 00:39:55,170
put the URL in here for you to read more

00:39:52,690 --> 00:39:58,300
about how it works so this is basically

00:39:55,170 --> 00:40:02,230
the parts that you will need in order

00:39:58,300 --> 00:40:03,520
for this workflow to work you're going

00:40:02,230 --> 00:40:06,010
to have to put this in your settings at

00:40:03,520 --> 00:40:07,900
pi file and so you're going to have to

00:40:06,010 --> 00:40:10,180
put your compressed pre compilers and

00:40:07,900 --> 00:40:11,650
loose is that into your settings which

00:40:10,180 --> 00:40:13,690
there are different settings for not

00:40:11,650 --> 00:40:15,700
only less there's also first ass and

00:40:13,690 --> 00:40:17,050
multitudes of other things that you want

00:40:15,700 --> 00:40:19,060
to use so this is not the only thing

00:40:17,050 --> 00:40:20,500
that you can use a django compressor and

00:40:19,060 --> 00:40:22,270
then you're also going to have to set

00:40:20,500 --> 00:40:27,730
your internal ip's for the next bit to

00:40:22,270 --> 00:40:29,920
work right here so the part if debug

00:40:27,730 --> 00:40:33,100
you're going to put into whatever file

00:40:29,920 --> 00:40:37,900
you have your left file in or your CSS n

00:40:33,100 --> 00:40:39,880
so you can set if debug so debug your

00:40:37,900 --> 00:40:42,040
working locally so hopefully you're only

00:40:39,880 --> 00:40:45,490
debugging locally not in your production

00:40:42,040 --> 00:40:47,370
environment so if debug you're going to

00:40:45,490 --> 00:40:49,840
actually use the only the client side

00:40:47,370 --> 00:40:51,040
come hot compilation which I do not

00:40:49,840 --> 00:40:53,740
recommend doing that sign your

00:40:51,040 --> 00:40:55,840
production site do not do this so so

00:40:53,740 --> 00:40:58,740
then in your else statement it's saying

00:40:55,840 --> 00:41:02,260
to use Django compressor so compress CSS

00:40:58,740 --> 00:41:03,400
and then it'll compress your actual less

00:41:02,260 --> 00:41:05,590
file so you don't even have to think

00:41:03,400 --> 00:41:06,760
about it which is great because we can

00:41:05,590 --> 00:41:08,380
be lazy and we don't have to think about

00:41:06,760 --> 00:41:09,910
it we can just keep working on our last

00:41:08,380 --> 00:41:13,570
file and be happy and everything's great

00:41:09,910 --> 00:41:16,180
and and move forward so anyway that was

00:41:13,570 --> 00:41:18,490
my talk um you can feel free to follow

00:41:16,180 --> 00:41:20,260
me on Twitter ask me questions and then

00:41:18,490 --> 00:41:23,020
I also wrote a little blog post about

00:41:20,260 --> 00:41:24,790
the this whole talk that goes into more

00:41:23,020 --> 00:41:27,160
detail that I couldn't go into probably

00:41:24,790 --> 00:41:31,050
in the five minutes that I have so at

00:41:27,160 --> 00:41:31,050
this URL so thank you very much

00:41:38,280 --> 00:41:42,700
Thank You Ramon Julia next is man who I

00:41:41,320 --> 00:41:44,710
hope needs no introduction Ben Peterson

00:41:42,700 --> 00:41:47,860
will be talking about why Python 3.3

00:41:44,710 --> 00:41:51,970
will be awesome which it will be yes

00:41:47,860 --> 00:41:58,720
okay hi usually I go by Benjamin just I

00:41:51,970 --> 00:42:00,700
mean I'll survive but so yes Python 3.3

00:41:58,720 --> 00:42:03,550
is probably the release I've been barks

00:42:00,700 --> 00:42:06,720
most excited about in my nearly four

00:42:03,550 --> 00:42:09,970
years of a Python core developer

00:42:06,720 --> 00:42:15,370
and my favorite feature is called pep

00:42:09,970 --> 00:42:19,390
393 and since you probably don't have a

00:42:15,370 --> 00:42:21,940
index of pep namesti features in your

00:42:19,390 --> 00:42:23,320
two numbers in your brain I'll have to

00:42:21,940 --> 00:42:26,860
tell you it is but I have to apologize

00:42:23,320 --> 00:42:28,150
on first let me give you a hint oh crap

00:42:26,860 --> 00:42:33,490
fonts it's supposed to be a poop

00:42:28,150 --> 00:42:35,320
character sorry and I really have to

00:42:33,490 --> 00:42:36,610
apologize for the next slide because

00:42:35,320 --> 00:42:40,090
when you're writing your talk in 15

00:42:36,610 --> 00:42:41,950
minutes sometimes you slackin on actual

00:42:40,090 --> 00:42:45,580
content I don't read reddit that much I

00:42:41,950 --> 00:42:47,890
promise but the peb 383 gives wit gets

00:42:45,580 --> 00:42:50,530
rid of the distinction between ucs-2 and

00:42:47,890 --> 00:42:53,340
you cs4 and for those of you who

00:42:50,530 --> 00:42:56,200
appreciate a more concrete addition I

00:42:53,340 --> 00:43:00,040
have why this is so awesome and

00:42:56,200 --> 00:43:01,930
basically Unicode in Python 3.3 will

00:43:00,040 --> 00:43:03,970
actually be a code point abstraction if

00:43:01,930 --> 00:43:07,930
you index you will never get surrogates

00:43:03,970 --> 00:43:09,400
it to decompose characters and the way

00:43:07,930 --> 00:43:12,580
this is implemented is we can have

00:43:09,400 --> 00:43:15,070
several different sizes of data types in

00:43:12,580 --> 00:43:17,380
the Unicode implementation so it could

00:43:15,070 --> 00:43:21,430
be all asking and we'd only use a 8-bit

00:43:17,380 --> 00:43:24,730
size characters and so this also

00:43:21,430 --> 00:43:28,810
improves memory and speed too because of

00:43:24,730 --> 00:43:30,370
cache efficiency and so this makes us

00:43:28,810 --> 00:43:33,670
better than other Unicode enabled

00:43:30,370 --> 00:43:35,350
languages such as Java and I hate to say

00:43:33,670 --> 00:43:37,590
this but it actually makes us as good as

00:43:35,350 --> 00:43:37,590
pearl

00:43:41,020 --> 00:43:47,539
another great thing in 3.3 is we have

00:43:43,940 --> 00:43:49,579
unified ioerror and os error because it

00:43:47,539 --> 00:43:51,859
was not really confusing which one you

00:43:49,579 --> 00:43:54,109
would get you'd get io error in the you

00:43:51,859 --> 00:43:56,059
get OS error in the OS module and io air

00:43:54,109 --> 00:43:57,920
elsewhere and so those of you to fight

00:43:56,059 --> 00:43:59,150
it we also have custom sub classes so

00:43:57,920 --> 00:44:01,730
you don't have to check the error know

00:43:59,150 --> 00:44:04,670
anymore so you could just catch the file

00:44:01,730 --> 00:44:10,849
exists air or the timeout error instead

00:44:04,670 --> 00:44:14,329
of random crap with air are now there's

00:44:10,849 --> 00:44:16,819
also a new syntax for delegating to sub

00:44:14,329 --> 00:44:18,530
generators so instead of iterating

00:44:16,819 --> 00:44:20,480
through it manually in generators you

00:44:18,530 --> 00:44:22,520
can and yielding you could just write

00:44:20,480 --> 00:44:25,819
yield from an iterator and that will

00:44:22,520 --> 00:44:27,650
transparently flatten the iterator out

00:44:25,819 --> 00:44:32,410
into your generator and this also

00:44:27,650 --> 00:44:35,000
handles send and throw correctly and

00:44:32,410 --> 00:44:39,440
there's a there's a smattering of other

00:44:35,000 --> 00:44:43,160
stuff the packaging module which should

00:44:39,440 --> 00:44:45,710
improve the disk utils situation we've

00:44:43,160 --> 00:44:48,410
also fixed the memory view in buffer

00:44:45,710 --> 00:44:52,250
protocol which was introduced in python

00:44:48,410 --> 00:44:55,010
3 sort of but it was kind of broken and

00:44:52,250 --> 00:44:56,690
we fixed the reference counting issues

00:44:55,010 --> 00:44:59,150
memory stuff with that and as more

00:44:56,690 --> 00:45:01,069
feature support Unicode literals which

00:44:59,150 --> 00:45:02,450
was been mentioned before our back so

00:45:01,069 --> 00:45:05,569
that should help with compatibility

00:45:02,450 --> 00:45:09,020
between Python 2 in Python 3 there's a

00:45:05,569 --> 00:45:11,720
new attribute on modules classes called

00:45:09,020 --> 00:45:13,670
cual name which lets you it gives you

00:45:11,720 --> 00:45:16,670
the qualified name so if you nest

00:45:13,670 --> 00:45:19,369
classes it's it's a lexical name instead

00:45:16,670 --> 00:45:22,160
of module name so if you have nested

00:45:19,369 --> 00:45:24,799
class it will give you the class too and

00:45:22,160 --> 00:45:27,799
not just a module which module will give

00:45:24,799 --> 00:45:31,819
you all right and we've wrapped new

00:45:27,799 --> 00:45:36,140
api's in OS including the open at those

00:45:31,819 --> 00:45:39,020
add functions and we also have extended

00:45:36,140 --> 00:45:42,589
Linux attributes to attribute filesystem

00:45:39,020 --> 00:45:45,079
attribute support and we've also added

00:45:42,589 --> 00:45:49,069
syntax for suppressing the exception

00:45:45,079 --> 00:45:50,570
context and cause for being printed with

00:45:49,069 --> 00:45:56,060
the Rays from sin

00:45:50,570 --> 00:45:58,010
tax and 3.3 is not supposed to come out

00:45:56,060 --> 00:46:01,040
until August so there's still more

00:45:58,010 --> 00:46:02,930
things in the pipeline there's a module

00:46:01,040 --> 00:46:05,780
called reg ex which is a reimplantation

00:46:02,930 --> 00:46:07,280
of the re module it adds a slew of new

00:46:05,780 --> 00:46:10,520
features we're hoping to get that in

00:46:07,280 --> 00:46:13,760
like unicode ranges unicode character

00:46:10,520 --> 00:46:17,990
classes lots of bug fixes I think it's

00:46:13,760 --> 00:46:19,910
faster to see decimal which is a decimal

00:46:17,990 --> 00:46:25,670
is a see implementation of the decimal

00:46:19,910 --> 00:46:27,710
module i piayed a dr a library for IP

00:46:25,670 --> 00:46:31,430
addresses which almost made its way into

00:46:27,710 --> 00:46:34,850
3.1 and 2.7 but we're trying again this

00:46:31,430 --> 00:46:36,410
time and hopefully i hope to get this

00:46:34,850 --> 00:46:39,110
done during the pike on sprint's i hope

00:46:36,410 --> 00:46:42,440
i can review Brett's import lib branch

00:46:39,110 --> 00:46:47,900
and we can finally get import written in

00:46:42,440 --> 00:46:52,070
Python so there's a lot to look forward

00:46:47,900 --> 00:46:55,220
to python 3.3 and i can only hope it

00:46:52,070 --> 00:46:57,610
improves python 3 migration so thank you

00:46:55,220 --> 00:46:57,610
very much

00:47:04,400 --> 00:47:07,520
all right thank you very much for that

00:47:06,109 --> 00:47:09,079
and now I would like to introduce our

00:47:07,520 --> 00:47:12,910
final lightning talk for the evening

00:47:09,079 --> 00:47:12,910
Brian dellosa will be talking about hub

00:47:14,859 --> 00:47:21,079
all right how's everybody doing awesome

00:47:19,130 --> 00:47:23,270
well I'm going to talk about hub which

00:47:21,079 --> 00:47:25,940
is a plug in 2 inch pretty much

00:47:23,270 --> 00:47:29,450
introduces get to github I'm Brian

00:47:25,940 --> 00:47:33,049
villosa I am a designer at github I I

00:47:29,450 --> 00:47:36,589
know that github is a ruby shop but I am

00:47:33,049 --> 00:47:39,819
a Python used to heart I also like to

00:47:36,589 --> 00:47:39,819
throw tables often

00:47:43,720 --> 00:47:50,120
alright let's put that back and get

00:47:46,910 --> 00:47:52,250
started so let's talk about hub hub is

00:47:50,120 --> 00:47:56,720
created by the our benevolent founder

00:47:52,250 --> 00:47:59,750
defunct Chris wanstrath and it it's

00:47:56,720 --> 00:48:02,170
pretty much a wrapper around get that

00:47:59,750 --> 00:48:05,120
just provides so many new features to

00:48:02,170 --> 00:48:07,310
allow you to work with github a lot

00:48:05,120 --> 00:48:10,460
easier so so let's install it for those

00:48:07,310 --> 00:48:13,610
of you that are on Mac and use homebrew

00:48:10,460 --> 00:48:21,950
you can easily brew install hub if you

00:48:13,610 --> 00:48:27,230
don't have a Mac I but no but seriously

00:48:21,950 --> 00:48:30,170
uh this was taken last night perfect

00:48:27,230 --> 00:48:32,570
timing Thank You Kenny you can clone it

00:48:30,170 --> 00:48:34,340
to this is actually the real the

00:48:32,570 --> 00:48:35,840
canonical way that Chris would like you

00:48:34,340 --> 00:48:37,600
to install it you can see this on the

00:48:35,840 --> 00:48:42,620
man page i'll give you the URL later

00:48:37,600 --> 00:48:44,450
obviously homebrew is better so let's

00:48:42,620 --> 00:48:47,300
take hub first and once you get it

00:48:44,450 --> 00:48:48,800
installed you can do things like hub

00:48:47,300 --> 00:48:53,030
check out django django notice there is

00:48:48,800 --> 00:48:55,070
no get a you know it get I forget the

00:48:53,030 --> 00:48:56,480
prefix the URL prefix gets there anymore

00:48:55,070 --> 00:49:00,590
all you have to all you need is a

00:48:56,480 --> 00:49:01,880
username and a repository if it's your

00:49:00,590 --> 00:49:05,150
repository that you want to check out

00:49:01,880 --> 00:49:07,370
just check out the repository name you

00:49:05,150 --> 00:49:09,230
can use hub browse and it will too if

00:49:07,370 --> 00:49:11,030
you're in a branch say working on a pull

00:49:09,230 --> 00:49:14,500
request it will bring you right to

00:49:11,030 --> 00:49:18,920
github with your pull request pulled up

00:49:14,500 --> 00:49:22,370
and you can also use browse to just open

00:49:18,920 --> 00:49:26,300
up any any repository on github from the

00:49:22,370 --> 00:49:28,280
command line hub also allows you to push

00:49:26,300 --> 00:49:30,860
to multiple remotes so if you need to

00:49:28,280 --> 00:49:32,870
push to both github and Heroku at the

00:49:30,860 --> 00:49:35,870
same time it's common delineating you

00:49:32,870 --> 00:49:39,020
can have that as long as you want you

00:49:35,870 --> 00:49:41,480
can also create repository eight

00:49:39,020 --> 00:49:44,690
projects from the command line so what

00:49:41,480 --> 00:49:47,180
this command will do is create not only

00:49:44,690 --> 00:49:49,190
my local working copy but it will also

00:49:47,180 --> 00:49:51,500
go to github talk to the github API and

00:49:49,190 --> 00:49:53,960
create the project on github under my

00:49:51,500 --> 00:49:55,109
user name and / flipping tables extender

00:49:53,960 --> 00:49:57,869
etc

00:49:55,109 --> 00:49:59,789
um forking is also something you can do

00:49:57,869 --> 00:50:02,249
on the command line using hub using hub

00:49:59,789 --> 00:50:04,319
fork what it will actually do you would

00:50:02,249 --> 00:50:06,960
the Kannada the canonical way to do this

00:50:04,319 --> 00:50:10,200
is to download the projects you'd like

00:50:06,960 --> 00:50:12,509
to fork run hub fork on it and what that

00:50:10,200 --> 00:50:16,079
will do is create a new remote under

00:50:12,509 --> 00:50:18,210
your username pointing to your copy so

00:50:16,079 --> 00:50:20,220
that means that upstream is now origin

00:50:18,210 --> 00:50:21,900
and your copy is under your username

00:50:20,220 --> 00:50:23,279
it's a little easier to submit pull

00:50:21,900 --> 00:50:27,749
request if that's what you'd like to do

00:50:23,279 --> 00:50:30,509
uh we also allow you to open pull

00:50:27,749 --> 00:50:32,579
requests from the command line one of my

00:50:30,509 --> 00:50:34,319
favorite features if you Opie use this

00:50:32,579 --> 00:50:35,640
inside a branch it will open up your

00:50:34,319 --> 00:50:36,989
editor you could tie it you can the

00:50:35,640 --> 00:50:40,349
first lines the title second lines the

00:50:36,989 --> 00:50:42,269
description the completion is the URL of

00:50:40,349 --> 00:50:46,710
the pull request which you can then just

00:50:42,269 --> 00:50:49,589
get browse to go to so time to blow some

00:50:46,710 --> 00:50:52,349
minds there is and there is a nice

00:50:49,589 --> 00:50:56,519
little additive to pull requests that

00:50:52,349 --> 00:51:00,119
will allow you to do this pull request

00:50:56,519 --> 00:51:02,819
dash I and the issue number will allow

00:51:00,119 --> 00:51:05,819
you to attach a pull request to an

00:51:02,819 --> 00:51:07,890
existing issue this is something that

00:51:05,819 --> 00:51:12,150
I'll that unfortunately is in the UI

00:51:07,890 --> 00:51:14,190
will be in the UI hopefully soon but it

00:51:12,150 --> 00:51:18,390
will since the API allows it this is a

00:51:14,190 --> 00:51:20,369
great way to now not have to reference

00:51:18,390 --> 00:51:22,380
issues separately from their pull

00:51:20,369 --> 00:51:26,690
requests but make issues pull requests

00:51:22,380 --> 00:51:30,960
themselves uh than that a little pro tip

00:51:26,690 --> 00:51:34,619
since hub is a wrapper around get it

00:51:30,960 --> 00:51:38,480
wraps everything I only went over a few

00:51:34,619 --> 00:51:42,239
of the things that hub does ads to get

00:51:38,480 --> 00:51:44,579
so I really would encourage you to alias

00:51:42,239 --> 00:51:45,660
get to hub it would MIT it only adds to

00:51:44,579 --> 00:51:50,369
your experience it doesn't take away

00:51:45,660 --> 00:51:52,529
from it here is the here's the URL on

00:51:50,369 --> 00:51:54,869
github to to get and read the read the

00:51:52,529 --> 00:51:56,839
man pages so many more features that I

00:51:54,869 --> 00:51:59,009
can't talk about in five minutes and

00:51:56,839 --> 00:52:02,670
yeah your homework gets to use hub to

00:51:59,009 --> 00:52:04,789
clone hub and that's all the road thank

00:52:02,670 --> 00:52:04,789
you

00:52:10,420 --> 00:52:14,569
alright thank you very much that

00:52:12,400 --> 00:52:15,559
concludes our lightning talk session for

00:52:14,569 --> 00:52:18,079
the evening I've been asked to remind

00:52:15,559 --> 00:52:20,150
you that Yelp it has their restaurant

00:52:18,079 --> 00:52:21,289
buses at seven o'clock if you are

00:52:20,150 --> 00:52:24,079
interested in finding somewhere that

00:52:21,289 --> 00:52:25,970
isn't the hotel restaurant and if not I

00:52:24,079 --> 00:52:27,500
will see you all hopefully tomorrow

00:52:25,970 --> 00:52:28,700
morning at eight-thirty and remember

00:52:27,500 --> 00:52:30,849
that there is a time difference of one

00:52:28,700 --> 00:52:30,849

YouTube URL: https://www.youtube.com/watch?v=N4zdWLuSbV0


