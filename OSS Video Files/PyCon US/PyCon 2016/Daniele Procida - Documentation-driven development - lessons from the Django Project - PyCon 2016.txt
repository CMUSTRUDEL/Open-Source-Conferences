Title: Daniele Procida - Documentation-driven development - lessons from the Django Project - PyCon 2016
Publication date: 2016-06-17
Playlist: PyCon 2016
Description: 
	"Speaker: Daniele Procida

One secret of Django's success is the quality of its documentation. As well as being key to the quality of the code itself, it has helped drive the development of Django as a community project, and even the professional development of programmers who adopt Django.

I'll discuss how Django has achieved it, and how any project can easily win the same benefits.

Slides can be found at: https://speakerdeck.com/pycon2016 and https://github.com/PyCon/2016-slides"
Captions: 
	00:00:50,080 --> 00:00:52,160
(host) So good morning, everybody.

00:00:52,160 --> 00:00:56,720
We have our first speaker with us, Mr. Daniele, and he'll be talking about

00:00:56,720 --> 00:01:00,840
documentation-driven development lessons from the Django Project.

00:01:00,840 --> 00:01:02,860
So let's invite him for this talk.

00:01:02,860 --> 00:01:04,480
Thank you.

00:01:04,480 --> 00:01:09,500
[applause]

00:01:11,520 --> 00:01:13,620
(Daniele Procida) Good morning and thanks very much

00:01:13,620 --> 00:01:16,000
for being here.

00:01:16,000 --> 00:01:18,040
I'm very grateful to have the invitation

00:01:18,040 --> 00:01:22,120
to speak to you at this PyCon.

00:01:23,040 --> 00:01:25,740
I'll quickly introduce myself to you.

00:01:25,740 --> 00:01:27,760
My name is Daniele Procida.

00:01:27,760 --> 00:01:33,080
I work for Divio, a Swiss software company.

00:01:33,080 --> 00:01:38,880
I'm the community and documentation manager for the company.

00:01:38,890 --> 00:01:44,200
I'm also a board member of the Django Software Foundation

00:01:44,200 --> 00:01:49,060
and a core developer of the Django Project.

00:01:49,060 --> 00:01:51,040
At Divio, one of the things I work on is

00:01:51,040 --> 00:01:54,660
our open source Django-based CMS, Django CMS,

00:01:54,660 --> 00:01:56,520
which is...

00:01:58,000 --> 00:02:03,480
...the best-known content management system in the Django world.

00:02:04,040 --> 00:02:07,240
You can reach me on my email address.

00:02:07,240 --> 00:02:11,920
I'm on GitHub and Twitter and IRC under EvilDMP

00:02:11,920 --> 00:02:15,300
if you want to find me.

00:02:16,740 --> 00:02:19,840
We're sponsoring this conference as Django CMS,

00:02:19,840 --> 00:02:22,180
so we've got a booth downstairs.

00:02:22,180 --> 00:02:26,520
If you're at all interested in

00:02:26,520 --> 00:02:30,840
web content management with Python, come and see us.

00:02:30,840 --> 00:02:33,420
I have some colleagues there. We've come all the way from Ukraine,

00:02:33,430 --> 00:02:37,410
Switzerland, or in my case, from the U.K.,

00:02:37,410 --> 00:02:39,490
and from North Carolina, too.

00:02:40,800 --> 00:02:42,440
Hello.

00:02:46,840 --> 00:02:50,320
[applause]

00:02:51,360 --> 00:02:53,300
Should I put this one on?

00:03:42,100 --> 00:03:50,260
[no audio]

00:03:50,260 --> 00:03:52,260
... some Swiss chocolate.

00:03:52,260 --> 00:03:56,580
I'll talk about content management with us.

00:03:58,150 --> 00:04:02,830
I'm interested in documentation.

00:04:04,460 --> 00:04:06,739
Some people take quite seriously the idea

00:04:06,740 --> 00:04:11,180
that you should write your documentation first

00:04:11,180 --> 00:04:13,960
and that your code should follow.

00:04:15,580 --> 00:04:19,800
But this idea of documentation-driven development

00:04:19,810 --> 00:04:25,210
is not nearly as commonly discussed or practiced as test-driven development,

00:04:25,210 --> 00:04:27,180
which I'm sure you've all heard of.

00:04:27,180 --> 00:04:30,560
In fact, I've never actually heard anyone speak

00:04:30,560 --> 00:04:34,830
about documentation-driven development, never mind met anyone who says

00:04:34,830 --> 00:04:38,290
they actually practice it in a very rigorous way.

00:04:38,290 --> 00:04:42,340
And I don't want spend too much time here, but

00:04:42,340 --> 00:04:46,040
just to briefly introduce it, documentation-driven development

00:04:46,040 --> 00:04:50,280
reverses the typical priority of code and documentation.

00:04:50,280 --> 00:04:52,980
So you start with the documentation instead of the code,

00:04:52,980 --> 00:04:58,080
and instead of documenting your code, you code your documentation.

00:04:58,080 --> 00:05:00,300
So documentation-driven development,

00:05:00,300 --> 00:05:05,200
like test -- sorry, like test-driven development,

00:05:05,200 --> 00:05:09,040
puts what should be before what is.

00:05:09,040 --> 00:05:13,880
It establishes a shared, easily accessible

00:05:13,880 --> 00:05:17,620
higher-level overview of the work in hand.

00:05:17,620 --> 00:05:23,280
It provides a shared, easily accessible metric of success.

00:05:23,280 --> 00:05:29,220
It importantly encourages contribution and engagement

00:05:29,220 --> 00:05:31,770
from non-programmers.

00:05:31,770 --> 00:05:35,910
And it binds the programming or binds the whole development effort

00:05:35,910 --> 00:05:39,400
into a coherent narrative.

00:05:39,400 --> 00:05:43,680
Now I don't actually know very much about documentation-driven development,

00:05:43,680 --> 00:05:46,040
but I'm sure it's a valuable development discipline

00:05:46,050 --> 00:05:47,920
that more people should adopt.

00:05:47,920 --> 00:05:50,960
And in fact when I want to talk about is not this discipline

00:05:50,960 --> 00:05:54,400
but some other senses in which

00:05:54,400 --> 00:05:58,080
documentation drives development.

00:05:58,080 --> 00:06:02,280
So let's have a look at Django which is what I do and what I know best.

00:06:02,280 --> 00:06:08,100
And let's consider what documentation has meant for the Django Project.

00:06:08,660 --> 00:06:13,259
And the first thing to say, not because it's some new observation

00:06:13,259 --> 00:06:16,130
but because everybody seems to agree with this,

00:06:16,130 --> 00:06:20,790
is that Django's documentation is exemplary.

00:06:21,580 --> 00:06:27,080
I've not come across any other project of a similar type

00:06:27,090 --> 00:06:30,730
with better or even remotely as good as documentation.

00:06:30,730 --> 00:06:33,720
And it's perhaps simply that my experience is limited,

00:06:33,729 --> 00:06:36,320
but I haven't met anyone else who's found anything

00:06:36,320 --> 00:06:39,480
better than Django's documentation either.

00:06:41,360 --> 00:06:44,960
What is so good about Django's documentation?

00:06:44,960 --> 00:06:49,120
Well, first, it's structured properly

00:06:49,120 --> 00:06:53,160
into different sections: tutorials, how-to's, reference, and topics.

00:06:53,160 --> 00:06:55,640
We can discuss the implications of this.

00:06:55,650 --> 00:06:58,210
I will come back to this later so don't worry about that now.

00:06:58,210 --> 00:07:03,600
Within its structure, it's extremely clear and consistent.

00:07:03,600 --> 00:07:06,720
In other words, its structure is not only respected

00:07:06,729 --> 00:07:10,539
but its style and content are easy to follow

00:07:10,539 --> 00:07:16,339
and the usage remains consistent across its structure.

00:07:16,340 --> 00:07:19,800
The documentation of Django covers just about everything

00:07:19,800 --> 00:07:23,820
there is to know about Django, so it's very complete.

00:07:23,820 --> 00:07:26,580
And it's held to the highest standards.

00:07:26,580 --> 00:07:32,280
In order to get a contribution in Django's documentation accepted,

00:07:32,280 --> 00:07:34,080
you have to work as hard on it

00:07:34,080 --> 00:07:38,300
as you would if you were working on its code.

00:07:39,260 --> 00:07:43,380
And... the last two points get more important, I think.

00:07:43,380 --> 00:07:45,720
It exemplifies important values

00:07:45,720 --> 00:07:50,040
of clarity, courtesy, and friendliness

00:07:50,040 --> 00:07:53,400
for the whole community.

00:07:53,410 --> 00:07:55,470
And finally,

00:07:55,470 --> 00:08:01,080
documentation in Django is regarded as a process

00:08:01,090 --> 00:08:03,720
rather than a product.

00:08:03,720 --> 00:08:06,820
And we'll come back to this as well later

00:08:06,820 --> 00:08:09,500
because that's the most important, I think.

00:08:09,500 --> 00:08:15,539
So, what effects do all these characteristics

00:08:15,539 --> 00:08:19,699
of Django's documentation have?

00:08:19,700 --> 00:08:22,180
Some of them are simply quite obvious.

00:08:22,180 --> 00:08:26,880
It makes Django easier to learn and to adopt.

00:08:26,880 --> 00:08:30,800
It makes people who use Django better Django programmers.

00:08:30,800 --> 00:08:35,320
It lowers the support version for people who are helping

00:08:35,320 --> 00:08:38,100
new or puzzled users of it.

00:08:38,100 --> 00:08:42,360
And it makes the development of Django itself

00:08:42,360 --> 00:08:45,260
easier and smoother and faster.

00:08:45,260 --> 00:08:48,860
In short, Django's documentation, without any doubt,

00:08:48,860 --> 00:08:51,480
is good for Django.

00:08:53,440 --> 00:08:56,080
And here we come to the main point of my talk,

00:08:56,080 --> 00:09:00,800
which is that software is not the only thing

00:09:00,800 --> 00:09:04,980
that develops, that develops and grows and improves.

00:09:04,980 --> 00:09:08,720
Programmers and communities of programmers

00:09:08,730 --> 00:09:11,970
also grow and develop and improve.

00:09:11,970 --> 00:09:14,860
And they, -- programmers and communities of programmers --

00:09:14,860 --> 00:09:17,800
are what makes the software develop.

00:09:17,800 --> 00:09:22,720
So the question that I'm particularly interested in is:

00:09:22,720 --> 00:09:25,980
What does documentation mean

00:09:25,980 --> 00:09:31,420
for the development of communities and programmers?

00:09:32,100 --> 00:09:36,400
We'll look at communities first.

00:09:39,960 --> 00:09:42,100
As you've gathered, I'm kind of playing on different senses

00:09:42,100 --> 00:09:45,180
of the word "develop" here.

00:09:47,840 --> 00:09:51,540
Keep that thought, as they say.

00:09:52,580 --> 00:09:57,100
Many of these terms, we focus on one meaning of them,

00:09:57,100 --> 00:10:00,580
and they come -- they have other meanings, they've come from other places,

00:10:00,580 --> 00:10:05,220
and those meanings still have value and use.

00:10:06,940 --> 00:10:10,220
Django's community, like its software,

00:10:10,220 --> 00:10:14,600
is stable, mature, and dependable,

00:10:14,600 --> 00:10:16,480
a bit like me.

00:10:17,560 --> 00:10:21,340
You know where you are with Django's community,

00:10:21,340 --> 00:10:24,460
just like you know where you are with its software, on the whole.

00:10:24,460 --> 00:10:27,760
Not too many unexpected surprises.

00:10:28,560 --> 00:10:33,440
The community is active, it's engaged, and it's remarkably united.

00:10:33,440 --> 00:10:35,480
It has difficulties,

00:10:35,480 --> 00:10:40,040
but it tends not to have huge crises or lingering ills.

00:10:40,640 --> 00:10:42,940
And it's my contention that one of the glues

00:10:42,940 --> 00:10:46,480
that has bound Django's community together

00:10:46,480 --> 00:10:48,980
is its documentation.

00:10:50,100 --> 00:10:53,140
So I think that when it comes to the development of the community,

00:10:53,140 --> 00:10:57,340
Django's documentation does four very important things.

00:10:57,340 --> 00:11:01,920
One, I said earlier that Django's documentation

00:11:01,929 --> 00:11:04,309
represents its attitudes.

00:11:04,309 --> 00:11:07,829
But I think it's stronger still than that.

00:11:07,829 --> 00:11:12,180
The care that Django's documentation takes --

00:11:12,180 --> 00:11:15,299
sorry, the care that Django takes with its documentation

00:11:15,299 --> 00:11:18,099
is an implicit contract

00:11:18,100 --> 00:11:22,000
with its community of users.

00:11:22,560 --> 00:11:28,260
It's a commitment to standards of communication and information.

00:11:29,380 --> 00:11:31,740
And the fourth most important thing

00:11:31,740 --> 00:11:36,860
is that documentation in Django is treated as, I said earlier,

00:11:36,860 --> 00:11:40,220
an activity rather than a product.

00:11:40,220 --> 00:11:42,540
So it's an activity, not just content.

00:11:42,540 --> 00:11:46,020
It's a process, not just a product.

00:11:46,020 --> 00:11:49,400
And I think that's the deepest of those points, so I'll start with that.

00:11:52,600 --> 00:11:55,520
Have you ever hesitated to ask for help

00:11:55,529 --> 00:11:59,849
with a programming question, for example on IRC,

00:11:59,849 --> 00:12:03,080
because you felt that the answer was already out there

00:12:03,089 --> 00:12:07,109
if only you knew how to find it or maybe how to understand it?

00:12:08,220 --> 00:12:11,339
But you hesitated from asking it because you felt

00:12:11,340 --> 00:12:16,160
that you might be invited, possibly with some irritation,

00:12:16,160 --> 00:12:18,480
to read the fucking manual? Yeah?

00:12:18,480 --> 00:12:23,180
Has anybody felt hesitant in doing that? Yeah.

00:12:23,180 --> 00:12:25,060
[audience member inaudible]

00:12:26,580 --> 00:12:31,620
And to be invited to,

00:12:31,620 --> 00:12:33,840
you know, talk dismissively to go and read the documentation

00:12:33,850 --> 00:12:39,270
by somebody who you thought you were being just lazy or stupid.

00:12:39,270 --> 00:12:43,020
And you might be right to hesitate, because people can be

00:12:43,020 --> 00:12:45,800
remarkably forgetful

00:12:45,800 --> 00:12:49,320
about how they learnt things once they've learnt them.

00:12:49,320 --> 00:12:51,600
And they can be remarkably forgetful

00:12:51,610 --> 00:12:55,029
about what it was like not to know those things.

00:12:55,029 --> 00:12:58,089
You know, as if they were born

00:12:58,089 --> 00:13:02,849
knowing how to use a certain function or something.

00:13:02,849 --> 00:13:05,420
So people are not always sympathetic and friendly to people

00:13:05,429 --> 00:13:08,449
who don't yet know the things that they do.

00:13:08,449 --> 00:13:11,100
Maybe you've had another experience: you've asked a question,

00:13:11,100 --> 00:13:13,020
and someone has replied with a link

00:13:13,020 --> 00:13:16,460
to this sarcastic "let me Google that for you" website.

00:13:16,460 --> 00:13:19,940
Well, I detest test this website

00:13:19,940 --> 00:13:22,640
and I hate everything it stands for,

00:13:22,640 --> 00:13:24,660
because it stands for putting people down

00:13:24,660 --> 00:13:28,170
who are asking for help in understanding something

00:13:28,170 --> 00:13:30,260
and telling them that the reason

00:13:30,260 --> 00:13:32,739
that they don't understand what they want to know

00:13:32,740 --> 00:13:35,320
is that they are too stupid or lazy to learn it.

00:13:35,320 --> 00:13:37,500
They're not good enough to learn it.

00:13:37,500 --> 00:13:41,559
So I think this is a symbol of something quite unpleasant

00:13:41,559 --> 00:13:46,359
in certain parts of our programming culture.

00:13:47,440 --> 00:13:51,339
So, insofar as information and documentation

00:13:51,339 --> 00:13:53,699
are considered to be content,

00:13:53,700 --> 00:13:57,440
it's possible to think and respond in those ways.

00:13:57,440 --> 00:13:59,940
The content's out there, it's freely available

00:13:59,949 --> 00:14:02,120
if you have an internet connection.

00:14:02,120 --> 00:14:04,340
Go ahead, help yourself,

00:14:04,340 --> 00:14:07,100
and if you can't do that properly, that's your problem.

00:14:07,100 --> 00:14:09,160
Other people have managed, so if you can't,

00:14:09,160 --> 00:14:11,280
there must be something wrong with you.

00:14:11,280 --> 00:14:14,100
That's only possible if we regard information

00:14:14,109 --> 00:14:16,889
and documentation as stuff.

00:14:18,480 --> 00:14:21,360
But if you understand that --

00:14:21,360 --> 00:14:25,199
or if you understand information as the process of informing,

00:14:25,199 --> 00:14:26,959
as an activity,

00:14:26,960 --> 00:14:30,720
and understand documentation as the process of documenting,

00:14:30,720 --> 00:14:33,720
then this response is less possible.

00:14:33,720 --> 00:14:35,660
And in fact, we see that kind of response

00:14:35,660 --> 00:14:39,700
much less in Django (and also in Python, actually)

00:14:39,700 --> 00:14:43,220
than is seen in many other programming cultures.

00:14:43,220 --> 00:14:47,239
Our IRC channels and email lists are friendly places

00:14:47,239 --> 00:14:50,839
where the experts of the community

00:14:50,840 --> 00:14:56,160
regard information and documentation as activities that they engage in,

00:14:56,160 --> 00:14:58,960
not as stuff that other people ought to have read

00:14:58,970 --> 00:15:01,990
instead of wasting everyone else's time.

00:15:02,960 --> 00:15:07,259
So I think that that understanding

00:15:07,259 --> 00:15:10,439
has a tangible difference.

00:15:10,440 --> 00:15:13,639
So information in this model is regarded as

00:15:13,639 --> 00:15:16,560
communicative transactions between agents.

00:15:16,560 --> 00:15:20,240
If you were at Professor Barba's keynote talk yesterday,

00:15:20,240 --> 00:15:22,660
this is exactly what she was talking about,

00:15:22,660 --> 00:15:28,389
about how communicative transactions work between agents,

00:15:28,389 --> 00:15:30,480
between people

00:15:30,480 --> 00:15:34,829
who are exchanging things.

00:15:34,829 --> 00:15:37,919
Because you don't put a slab of information out there

00:15:37,919 --> 00:15:41,459
and there's the information, help yourself to it.

00:15:42,720 --> 00:15:47,260
There's a process which feeds back.

00:15:47,260 --> 00:15:51,980
Information, in this model, demands that we respect values of clarity,

00:15:51,980 --> 00:15:55,140
intelligibility, relevance, comprehension,

00:15:55,140 --> 00:15:59,620
attention to the needs and abilities of the other party,

00:15:59,620 --> 00:16:01,860
affirmation of mutual understanding.

00:16:01,860 --> 00:16:05,120
So I have to understand that you've understood, and so on.

00:16:05,120 --> 00:16:09,940
And when you're doing that, you can't pretend that you're informing people

00:16:09,940 --> 00:16:12,460
by telling them to read the fucking manual

00:16:12,470 --> 00:16:15,759
or sarcastically Googling things for them.

00:16:16,160 --> 00:16:20,640
So, good documentation shows respect.

00:16:20,640 --> 00:16:22,800
In software, good documentation,

00:16:22,810 --> 00:16:25,460
and a default position that if someone doesn't understand it

00:16:25,460 --> 00:16:27,479
then the problem must lie in the documentation

00:16:27,479 --> 00:16:29,699
rather than the person who doesn't understand,

00:16:29,700 --> 00:16:33,680
becomes a sign of respect, an expression of those values.

00:16:33,680 --> 00:16:36,560
Django's documentation sets standards,

00:16:36,560 --> 00:16:39,180
expectations, and a tone for communication,

00:16:39,180 --> 00:16:43,920
especially for communication with less expert users of it.

00:16:43,920 --> 00:16:46,739
And it's an assertion of values that are subsequently reflected

00:16:46,739 --> 00:16:49,959
across the Django community.

00:16:50,400 --> 00:16:53,260
And what this means, I think, is that in this community,

00:16:53,260 --> 00:16:57,279
in some contexts, at least, we do think of information

00:16:57,279 --> 00:16:59,949
as the activity of informing: something that we do

00:16:59,949 --> 00:17:03,049
rather than as a collection of content,

00:17:03,049 --> 00:17:07,309
and that this idea of information, this way of thinking about it,

00:17:07,309 --> 00:17:11,319
has had real meaningful and beneficial consequences

00:17:11,320 --> 00:17:15,180
for people who use Django.

00:17:15,180 --> 00:17:17,679
And I'm sometimes reminded of this when I speak to people

00:17:17,679 --> 00:17:20,919
outside my cozy world of Django, because

00:17:20,920 --> 00:17:24,160
my job title is Documentation and --

00:17:24,169 --> 00:17:26,389
or Community and Documentation Manager.

00:17:26,389 --> 00:17:30,789
And sometimes,

00:17:30,789 --> 00:17:32,940
people ask me -- other programmers ask me what I do.

00:17:32,940 --> 00:17:35,240
I say, "Oh, I'm a documentation manager."

00:17:35,240 --> 00:17:37,860
And they look at me with a kind of embarrassment and horror

00:17:37,860 --> 00:17:39,990
as though I've admitted to doing something very unmanly

00:17:39,990 --> 00:17:42,190
or something I should be a little bit ashamed about

00:17:42,190 --> 00:17:46,090
rather than having it printed on a business card.

00:17:47,120 --> 00:17:52,460
When I tell this to people in the Python or Django communities,

00:17:52,460 --> 00:17:55,521
their response is, "Oh, that's cool."

00:17:55,521 --> 00:18:00,080
So there's an understanding of the meaning of documentation

00:18:00,080 --> 00:18:04,740
in our community that does definitely not exist elsewhere.

00:18:05,960 --> 00:18:08,980
So I said that Django's documentation has been good for Django,

00:18:08,990 --> 00:18:13,170
but really I think it's been much more than merely good.

00:18:13,170 --> 00:18:17,600
To inform something literally means to shape something,

00:18:17,600 --> 00:18:20,540
to press a shape into it.

00:18:20,540 --> 00:18:23,340
That's what informing means.

00:18:23,340 --> 00:18:26,840
And Django's documentation

00:18:26,840 --> 00:18:29,060
literally informs,

00:18:29,060 --> 00:18:33,040
shapes, its community.

00:18:34,000 --> 00:18:37,740
It has determined, it has informed how the community has developed,

00:18:37,740 --> 00:18:40,980
what sort of thing it has developed into.

00:18:40,980 --> 00:18:43,860
And it's one of the things that continues to drive

00:18:43,860 --> 00:18:46,920
the development of Django as a community.

00:18:46,920 --> 00:18:49,980
So that's the kind of development that I'm speaking of

00:18:49,990 --> 00:18:53,910
when I talk about documentation-driven development.

00:18:55,580 --> 00:18:59,380
And documentation has similar implications

00:18:59,380 --> 00:19:02,220
for programmers, too.

00:19:02,220 --> 00:19:04,380
Developers develop, which is to say,

00:19:04,380 --> 00:19:09,440
their programming skills develop, get better, improve.

00:19:09,440 --> 00:19:11,980
And the question for many programmers and their employers

00:19:11,990 --> 00:19:14,830
and the people they work with is: How do I develop?

00:19:14,830 --> 00:19:17,510
How do I become a better programmer?

00:19:17,510 --> 00:19:20,180
And it's a true but pretty uninteresting observation

00:19:20,180 --> 00:19:23,080
that good Django documentation helps Django developers

00:19:23,080 --> 00:19:25,080
write better code.

00:19:25,080 --> 00:19:27,500
But in fact, I think documentation

00:19:27,500 --> 00:19:31,580
has much wider implications than that.

00:19:34,420 --> 00:19:37,440
Documentation is an excellent way for newcomers

00:19:37,450 --> 00:19:40,169
to start contributing to open source software.

00:19:40,169 --> 00:19:42,630
You don't need to be an expert in something

00:19:42,630 --> 00:19:45,620
to be able to identify something clear or lacking

00:19:45,620 --> 00:19:49,480
in its documentation and suggest a way to improve it.

00:19:49,480 --> 00:19:53,420
So writing documentation represents an easy step,

00:19:53,420 --> 00:19:57,059
an easy progress to the next step from being a user of something

00:19:57,059 --> 00:20:00,019
to being a contributor to it.

00:20:01,560 --> 00:20:03,940
Documentation is almost always welcome.

00:20:03,940 --> 00:20:06,640
In fact, in most projects -- not in Django --

00:20:06,640 --> 00:20:09,640
in most projects it's not so much welcome as desperately needed,

00:20:09,640 --> 00:20:13,580
and it's far easier in most projects to get documentation

00:20:13,580 --> 00:20:16,500
accepted than, for example, a new feature.

00:20:18,120 --> 00:20:20,960
And finally,

00:20:20,960 --> 00:20:24,240
explaining something to someone else

00:20:24,250 --> 00:20:28,580
is just about the best possible way to explain it to oneself,

00:20:28,580 --> 00:20:30,430
to learn and understand it.

00:20:30,430 --> 00:20:35,370
So if part of a programmer's development

00:20:35,370 --> 00:20:38,230
is to contribute and to understand more,

00:20:38,230 --> 00:20:41,930
documentation is an ideal way to do this.

00:20:42,400 --> 00:20:47,800
And the Django Project really does get all this.

00:20:47,800 --> 00:20:52,000
Django's documentation structure guides and encourages

00:20:52,000 --> 00:20:55,380
new contributions and contributors.

00:20:55,380 --> 00:20:57,860
In Django, the clarity of the documentation structure

00:20:57,860 --> 00:21:02,950
makes it almost obvious how, and where and what to write

00:21:02,950 --> 00:21:07,450
for a particular section, just like well-written code does.

00:21:07,450 --> 00:21:10,780
And this works just the same for very large contributions,

00:21:10,780 --> 00:21:14,540
like, say, an entire new section in the tutorial,

00:21:14,540 --> 00:21:17,659
as it does for tiny ones, like an improved explanation

00:21:17,659 --> 00:21:20,859
of some functional class.

00:21:24,640 --> 00:21:29,080
In Django, contributions to documentation

00:21:29,080 --> 00:21:32,920
are taken extremely seriously and held to the highest standard.

00:21:32,920 --> 00:21:35,340
This means that contributions and contributors

00:21:35,340 --> 00:21:39,920
receive as much engagement and support as those to code.

00:21:39,920 --> 00:21:43,020
In many other projects, documentation is so desperately needed

00:21:43,020 --> 00:21:46,100
that almost any contribution will be accepted

00:21:46,110 --> 00:21:48,700
just because it's documentation and someone bothered --

00:21:48,700 --> 00:21:50,660
someone cared enough to write it.

00:21:51,140 --> 00:21:55,320
In Django, documentation goes through the same ringer

00:21:55,320 --> 00:21:57,380
that code goes through, and that ringer turns out to be

00:21:57,380 --> 00:22:01,140
somebody called Tim Graham, who has the patience of a saint

00:22:01,149 --> 00:22:05,080
and is willing to bat back a documentation contribution

00:22:05,080 --> 00:22:09,100
multiple times over a long period to its author

00:22:09,100 --> 00:22:14,440
until it's in precisely the shape that it needs to be

00:22:14,440 --> 00:22:17,260
before it's ready to go in.

00:22:24,900 --> 00:22:27,740
Contributions, and the contributors

00:22:27,750 --> 00:22:31,940
who make them to Django's documentation,

00:22:31,940 --> 00:22:34,640
are highly valued and recognized.

00:22:34,649 --> 00:22:37,820
The members of Django's core team are people who have made

00:22:37,820 --> 00:22:40,700
substantial contributions to Django.

00:22:40,700 --> 00:22:44,300
Mine have alm-- not almost, mine have all been

00:22:44,300 --> 00:22:47,620
contributions to documentation.

00:22:49,080 --> 00:22:51,600
So, Django really does offer a way

00:22:51,600 --> 00:22:55,200
for people to advance in the community

00:22:55,200 --> 00:22:57,400
through documentation.

00:23:00,320 --> 00:23:02,380
And of course, documenting code

00:23:02,389 --> 00:23:05,169
is the best possible way to understand it.

00:23:05,920 --> 00:23:09,480
And I think that's the most important of these things,

00:23:09,480 --> 00:23:14,620
that Django encourages

00:23:14,620 --> 00:23:17,299
developers to write documentation.

00:23:18,340 --> 00:23:20,680
Which means that its own developers

00:23:20,680 --> 00:23:24,180
understand its code better still.

00:23:25,180 --> 00:23:28,680
And almost everybody seems to recognize and agree with this,

00:23:28,680 --> 00:23:33,080
but remarkably few people behave as though they believed it.

00:23:33,080 --> 00:23:35,660
So something needs to be done about that.

00:23:36,660 --> 00:23:39,039
All of this means that Django not only gets more and better

00:23:39,039 --> 00:23:42,479
contributions to its documentation than other projects do,

00:23:42,480 --> 00:23:45,999
it also advances the skills, confidence, and usefulness

00:23:45,999 --> 00:23:49,099
of the developers who contribute to it.

00:23:49,100 --> 00:23:52,940
If you want to learn how to contribute to open source software in Python,

00:23:52,940 --> 00:23:56,100
there's hardly a better way to start doing it

00:23:56,110 --> 00:23:59,220
than by doing some work on Django's documentation.

00:23:59,220 --> 00:24:02,580
So this is what I mean when I say

00:24:02,580 --> 00:24:07,340
that Django does documentation-driven development.

00:24:07,340 --> 00:24:09,700
I mean that through its documentation,

00:24:09,700 --> 00:24:13,770
it develops, advances, improves

00:24:13,770 --> 00:24:19,270
its community and its developers,

00:24:19,270 --> 00:24:21,190
quite apart from its code.

00:24:22,100 --> 00:24:26,160
So those are the lessons from Django.

00:24:26,160 --> 00:24:30,920
What can your open source project do

00:24:30,920 --> 00:24:35,700
to reap some of the same rewards from its documentation?

00:24:35,700 --> 00:24:40,100
Well, I don't think it's something that can be accomplished overnight.

00:24:40,100 --> 00:24:42,220
Much of this to do --

00:24:42,220 --> 00:24:44,200
Much of this is to do with attitudes,

00:24:44,200 --> 00:24:48,560
and attitudes are notoriously hard things to change.

00:24:48,560 --> 00:24:52,040
But all the same, some of the steps you can take are quite easy,

00:24:52,040 --> 00:24:54,940
and I think that if you keep aking them in the right direction,

00:24:54,950 --> 00:24:58,570
eventually attitudes will follow.

00:24:58,570 --> 00:25:03,480
So firstly, you can structure your documentation correctly

00:25:03,490 --> 00:25:07,180
into tutorials, how-to, reference, topics.

00:25:07,180 --> 00:25:10,380
If you look at the very first page of the Django documentation,

00:25:10,380 --> 00:25:13,660
it explains why we have this structure.

00:25:14,540 --> 00:25:16,600
People get these muddled up, especially they get muddled up

00:25:16,600 --> 00:25:19,500
between tutorials and how-to documents.

00:25:19,510 --> 00:25:22,640
I'm not sure if -- how many minutes do I have left?

00:25:22,640 --> 00:25:24,600
I have three minutes, OK, so I won't spend --

00:25:24,600 --> 00:25:27,860
we can talk about that afterwards, OK?

00:25:27,860 --> 00:25:29,820
I can explain those in more detail.

00:25:29,820 --> 00:25:32,919
Make your contribution policies for documentation

00:25:32,919 --> 00:25:34,959
as rigorous as those for your code.

00:25:34,960 --> 00:25:39,400
Don't be afraid to bat back documentation to its contributors.

00:25:39,400 --> 00:25:41,880
Take them --

00:25:41,880 --> 00:25:45,520
take the contributors and their contributions seriously.

00:25:46,560 --> 00:25:49,760
You wouldn't accept substandard code from someone.

00:25:49,760 --> 00:25:52,380
Don't accept substandard documentation.

00:25:52,380 --> 00:25:56,380
People, even if it irritates them a bit of first to have things sent back,

00:25:56,380 --> 00:26:00,900
do appreciate being taken seriously

00:26:00,909 --> 00:26:04,039
and appreciate that the things they're contributing

00:26:04,039 --> 00:26:07,599
might be so important that they have to be got exactly right.

00:26:08,140 --> 00:26:10,320
Substandard code can only hurt your applications,

00:26:10,320 --> 00:26:16,140
but substandard documentation is detrimental to the entire community.

00:26:17,340 --> 00:26:19,140
Document your documentation.

00:26:19,140 --> 00:26:21,100
Make sure it's clear what the policies are,

00:26:21,100 --> 00:26:23,440
what you want from each section of it.

00:26:24,080 --> 00:26:27,400
Value your documentation contributors.

00:26:27,400 --> 00:26:29,660
Recognize them publicly.

00:26:29,660 --> 00:26:34,180
Value the activity of documentation and information.

00:26:34,180 --> 00:26:36,780
Set aside time for it.

00:26:37,340 --> 00:26:40,919
If you -- that's what your project can do.

00:26:40,919 --> 00:26:42,959
What about you personally or your organization?

00:26:42,960 --> 00:26:44,820
Well, if you're really serious about this,

00:26:44,820 --> 00:26:46,700
there are some things you can definitely do,

00:26:46,700 --> 00:26:48,940
real commitments that you can make.

00:26:48,940 --> 00:26:51,680
Attend a Write the Docs meetup or conference.

00:26:51,680 --> 00:26:53,540
There was one last week here in Portland.

00:26:53,540 --> 00:26:56,180
There will be one in September in Prague.

00:26:56,180 --> 00:27:00,500
Support Write the Docs, support Read the Docs,

00:27:00,500 --> 00:27:02,839
excellent projects.

00:27:02,840 --> 00:27:05,640
Make being a documentation manager someone's role.

00:27:05,640 --> 00:27:09,300
Pay someone to have that responsibility.

00:27:09,300 --> 00:27:15,360
Spend money and time in your organization on documentation.

00:27:15,360 --> 00:27:17,700
And all of these will help you on the way

00:27:17,700 --> 00:27:21,940
to achieving the things on the previous page.

00:27:21,940 --> 00:27:25,520
So, documentation is becoming a movement.

00:27:25,520 --> 00:27:27,420
There are more things I could talk about,

00:27:27,429 --> 00:27:30,000
and if I'm honest, a talk like this can only help let you know

00:27:30,000 --> 00:27:33,100
that such opportunities exist.

00:27:33,100 --> 00:27:38,620
The real point is that, as I say, documentation is becoming --

00:27:38,620 --> 00:27:40,800
not an id-- well, yes, it's becoming a movement

00:27:40,809 --> 00:27:44,889
in Python and Django, partly thanks to the initial efforts of Django,

00:27:44,889 --> 00:27:47,639
partly thanks to the efforts of people like Eric Holscher,

00:27:47,639 --> 00:27:50,499
behind Read the Docs and Write the Docs.

00:27:50,500 --> 00:27:52,900
We all benefit from documentation:

00:27:52,900 --> 00:27:56,580
our code, our communities, and our people.

00:27:56,590 --> 00:28:01,690
So take advantage of those opportunities and join in.

00:28:01,690 --> 00:28:03,600
Thank you very much.

00:28:03,600 --> 00:28:05,620
Do we have time for some questions?

00:28:07,140 --> 00:28:11,220
We've got time for one question, so if someone has a short question, please.

00:28:11,780 --> 00:28:14,040
(host) If somebody has a short question?

00:28:15,880 --> 00:28:18,740
(audience member) What do you think of the concept

00:28:18,740 --> 00:28:24,120
that a lack of documentation can provide job security [inaudible]?

00:28:24,120 --> 00:28:26,100
[laughter]

00:28:26,100 --> 00:28:28,260
[audience member inaudible]

00:28:28,900 --> 00:28:31,580
(Daniele Procida) No, I don't buy that at all.

00:28:31,580 --> 00:28:34,120
I think a lack of documentation just gets in the way

00:28:34,120 --> 00:28:36,760
of everyone and everything, yeah.

00:28:36,760 --> 00:28:39,060
I think that would be a completely specious argument.

00:28:39,060 --> 00:28:41,220
Don't pin your hopes on that.

00:28:42,620 --> 00:28:48,520
[applause]

00:28:48,520 --> 00:28:50,960
Before we go, that's where you can find me.

00:28:50,960 --> 00:28:52,880
Come and visit us at the Django CMS booth.

00:28:52,880 --> 00:28:55,740
And just one last thing, if you look closely on there,

00:28:55,740 --> 00:28:57,680
you'll see that according to the television,

00:28:57,680 --> 00:28:59,960
I am actually Python software.

00:28:59,960 --> 00:29:01,620
[laughter]

00:29:01,620 --> 00:29:03,460
Thank you very much.

00:29:03,460 --> 00:29:05,380
Pleased to talk to you later.

00:29:05,620 --> 00:29:07,400

YouTube URL: https://www.youtube.com/watch?v=bQSR1UpUdFQ


