Title: KEYNOTE   Python Steering Council   C. Willing, T. Wouters, B. Cannon, P. Galindo Salgado, B. Warsaw
Publication date: 2021-05-31
Playlist: PyCon US 2021
Description: 
	Carol Willing
Thomas Wouters
Brett Cannon
Pablo Galindo Salgado
Barry Warsaw

Elected as prescribed in PEP 8016, the Python Steering Council is a 5-person committee that assumes a mandate to maintain the quality and stability of the Python language and CPython interpreter, improve the contributor experience, formalize and maintain a relationship between the Python core team and the PSF, establish decision making processes for Python Enhancement Proposals, seek consensus among contributors and the Python core team, and resolve decisions and disputes in decision making among the language.

This keynote will update the community on current and future initiatives. Additionally, the Steering Council will address community questions collected prior to the conference.
Captions: 
	00:00:05,120 --> 00:00:10,400
welcome everybody to

00:00:06,960 --> 00:00:12,719
the pycon 2021 keynote of the

00:00:10,400 --> 00:00:14,880
python steering council my name is barry

00:00:12,719 --> 00:00:16,240
warsaw

00:00:14,880 --> 00:00:17,920
i'm thomas rodriguez i'm from the

00:00:16,240 --> 00:00:20,160
netherlands

00:00:17,920 --> 00:00:21,520
i'm carol willing my pronouns are she

00:00:20,160 --> 00:00:25,039
her and i'm from

00:00:21,520 --> 00:00:26,880
san diego california i'm pablo alino i'm

00:00:25,039 --> 00:00:29,039
from spain although now i live in the

00:00:26,880 --> 00:00:31,599
united kingdom

00:00:29,039 --> 00:00:33,120
and i'm brett cannon residing in canada

00:00:31,599 --> 00:00:35,360
so welcome all

00:00:33,120 --> 00:00:37,040
now for those of you who happen to not

00:00:35,360 --> 00:00:38,239
quite know what the student council is

00:00:37,040 --> 00:00:39,200
we're actually going to start off with

00:00:38,239 --> 00:00:42,320
covering what that

00:00:39,200 --> 00:00:44,480
is actually and specifically uh

00:00:42,320 --> 00:00:46,559
we are a group of five that are more or

00:00:44,480 --> 00:00:48,879
less in charge of trying to

00:00:46,559 --> 00:00:49,680
help keep the python core project

00:00:48,879 --> 00:00:52,160
running

00:00:49,680 --> 00:00:53,760
um it was originally set up to help uh

00:00:52,160 --> 00:00:54,320
transition the project over from when

00:00:53,760 --> 00:00:56,840
guido

00:00:54,320 --> 00:00:58,239
stepped down as our dictator for life or

00:00:56,840 --> 00:00:59,359
bdfl

00:00:58,239 --> 00:01:01,120
if you're curious about the exact

00:00:59,359 --> 00:01:02,879
details of this it's all covered in pep

00:01:01,120 --> 00:01:04,320
13.

00:01:02,879 --> 00:01:07,200
our general goal is to govern by

00:01:04,320 --> 00:01:08,640
consensus not authoritarian control so

00:01:07,200 --> 00:01:12,240
what that means is

00:01:08,640 --> 00:01:13,840
is we try to help drive conversation and

00:01:12,240 --> 00:01:15,360
make sure things kind of reach a general

00:01:13,840 --> 00:01:16,400
conclusion on the python development

00:01:15,360 --> 00:01:19,280
team itself

00:01:16,400 --> 00:01:21,119
so that things are driven more by what

00:01:19,280 --> 00:01:22,720
the group wants and not what

00:01:21,119 --> 00:01:24,640
we happen to just want although on

00:01:22,720 --> 00:01:26,320
occasion if there's no

00:01:24,640 --> 00:01:28,400
obvious consensus and we're unable to

00:01:26,320 --> 00:01:29,920
reach a consensus as an overall group

00:01:28,400 --> 00:01:32,159
it falls on our shoulders to make the

00:01:29,920 --> 00:01:33,520
final call

00:01:32,159 --> 00:01:34,960
we have a general goal of trying to

00:01:33,520 --> 00:01:37,280
foster the community and the core devs

00:01:34,960 --> 00:01:41,840
who are almost exclusively volunteers

00:01:37,280 --> 00:01:44,640
so i'll cover our general goals overall

00:01:41,840 --> 00:01:46,159
from later in the slides but in general

00:01:44,640 --> 00:01:46,640
you can view it as we're trying to as i

00:01:46,159 --> 00:01:48,000
said

00:01:46,640 --> 00:01:48,960
foster the community make the courses be

00:01:48,000 --> 00:01:50,479
productive because they're all

00:01:48,960 --> 00:01:51,759
volunteers and just try to make it so

00:01:50,479 --> 00:01:55,040
everyone can be productive as

00:01:51,759 --> 00:01:56,240
they can um when it comes to peps which

00:01:55,040 --> 00:01:57,759
some of you may have heard of which are

00:01:56,240 --> 00:02:00,320
python enhancement proposals

00:01:57,759 --> 00:02:02,159
which are how people present and propose

00:02:00,320 --> 00:02:05,280
new changes to the language

00:02:02,159 --> 00:02:07,040
those come to us and part of our seeking

00:02:05,280 --> 00:02:08,640
consensus means we actually try to

00:02:07,040 --> 00:02:10,879
delegate those decisions to

00:02:08,640 --> 00:02:12,640
domain experts when possible but once

00:02:10,879 --> 00:02:13,360
again if there is no one in a position

00:02:12,640 --> 00:02:16,160
that can

00:02:13,360 --> 00:02:17,200
meet that definition of expert in a good

00:02:16,160 --> 00:02:18,400
way

00:02:17,200 --> 00:02:20,239
it falls on our shoulders to make the

00:02:18,400 --> 00:02:21,760
final call on those peps so

00:02:20,239 --> 00:02:23,840
if you're happy with the pep you can

00:02:21,760 --> 00:02:26,879
blame us if you

00:02:23,840 --> 00:02:28,480
aren't happy you can still blame us we

00:02:26,879 --> 00:02:29,920
do meet about weekly for an hour

00:02:28,480 --> 00:02:31,120
although we obviously have work outside

00:02:29,920 --> 00:02:32,640
of that weekly meeting

00:02:31,120 --> 00:02:35,120
to try to keep everything running

00:02:32,640 --> 00:02:36,720
smoothly

00:02:35,120 --> 00:02:38,239
as you heard earlier there are five of

00:02:36,720 --> 00:02:38,800
us from around the world uh two from

00:02:38,239 --> 00:02:40,879
america

00:02:38,800 --> 00:02:43,040
one from the netherlands one from spain

00:02:40,879 --> 00:02:44,879
via england and myself from canada

00:02:43,040 --> 00:02:47,120
so we have a nice diverse international

00:02:44,879 --> 00:02:50,480
group of people

00:02:47,120 --> 00:02:51,040
and in terms of what the five of us try

00:02:50,480 --> 00:02:52,800
to do

00:02:51,040 --> 00:02:54,959
there's kind of two aspects to it

00:02:52,800 --> 00:02:56,400
there's the direction for the future

00:02:54,959 --> 00:02:56,959
where we would like things to go over

00:02:56,400 --> 00:02:58,720
the

00:02:56,959 --> 00:03:00,000
roughly five years is about the time

00:02:58,720 --> 00:03:02,480
frame we try to think

00:03:00,000 --> 00:03:04,000
and what's happening directly i'm going

00:03:02,480 --> 00:03:06,959
to cover what the direction is for

00:03:04,000 --> 00:03:08,400
the foreseeable next five years now and

00:03:06,959 --> 00:03:09,599
later in the presentation pablo will

00:03:08,400 --> 00:03:14,480
actually be discussing more

00:03:09,599 --> 00:03:17,120
immediate next year uh time horizons

00:03:14,480 --> 00:03:18,080
so currently our biggest focus is on

00:03:17,120 --> 00:03:20,560
maintenance

00:03:18,080 --> 00:03:22,400
uh we're trying to make the lives easier

00:03:20,560 --> 00:03:25,760
for the volunteers of the core team

00:03:22,400 --> 00:03:26,239
uh because we don't get uh a lot of paid

00:03:25,760 --> 00:03:28,319
staff

00:03:26,239 --> 00:03:30,000
like some languages and communities have

00:03:28,319 --> 00:03:32,879
we have to try to do what we can

00:03:30,000 --> 00:03:34,080
to make contributing to the project uh

00:03:32,879 --> 00:03:36,480
python specifically

00:03:34,080 --> 00:03:37,760
as fun and engaging and accessible as

00:03:36,480 --> 00:03:39,040
possible

00:03:37,760 --> 00:03:40,480
which is really tricky because we're

00:03:39,040 --> 00:03:41,840
trying to make it not only easier for

00:03:40,480 --> 00:03:43,360
the core developers

00:03:41,840 --> 00:03:45,200
uh to be productive to be able to lift

00:03:43,360 --> 00:03:47,120
code in in a quality

00:03:45,200 --> 00:03:49,360
and standard that meet our needs and

00:03:47,120 --> 00:03:51,519
your needs as users but also to make it

00:03:49,360 --> 00:03:53,120
easy for you as a

00:03:51,519 --> 00:03:54,799
occasional contributor to come in and

00:03:53,120 --> 00:03:59,280
actually provide uh

00:03:54,799 --> 00:04:01,519
prs inputs uh bug reports etc etc

00:03:59,280 --> 00:04:03,280
uh and all this also means we're trying

00:04:01,519 --> 00:04:04,000
to keep the stability of the project

00:04:03,280 --> 00:04:06,560
itself going

00:04:04,000 --> 00:04:07,840
so one way you can think of this is

00:04:06,560 --> 00:04:10,480
we're trying to make sure that the

00:04:07,840 --> 00:04:13,760
project doesn't collapse on itself

00:04:10,480 --> 00:04:14,640
so and it's a balancing act we also

00:04:13,760 --> 00:04:16,000
tried to make sure that the

00:04:14,640 --> 00:04:17,120
maintainability of the infrastructure

00:04:16,000 --> 00:04:18,639
itself keeps going

00:04:17,120 --> 00:04:20,479
we have a great partnership with psf

00:04:18,639 --> 00:04:22,000
thanks to this to make sure that

00:04:20,479 --> 00:04:22,960
everything is in place as necessary to

00:04:22,000 --> 00:04:24,560
make sure that

00:04:22,960 --> 00:04:27,040
all associated parts to keeping the

00:04:24,560 --> 00:04:29,360
maintenance going is there

00:04:27,040 --> 00:04:30,320
and basically just trying to make

00:04:29,360 --> 00:04:33,199
everyone's lives

00:04:30,320 --> 00:04:34,880
better uh pablo will discuss this more

00:04:33,199 --> 00:04:37,680
directly in terms of what our

00:04:34,880 --> 00:04:39,040
most recent uh change and upcoming

00:04:37,680 --> 00:04:39,840
exciting experience we're gonna have to

00:04:39,040 --> 00:04:41,680
try to deal with this

00:04:39,840 --> 00:04:43,040
is but in general you can think of this

00:04:41,680 --> 00:04:44,320
as what can we do to just make

00:04:43,040 --> 00:04:46,800
everyone's lives better to try to keep

00:04:44,320 --> 00:04:49,280
the code running

00:04:46,800 --> 00:04:49,840
uh now past that in looking at this

00:04:49,280 --> 00:04:52,160
overall

00:04:49,840 --> 00:04:53,840
five-year horizon uh we have a couple of

00:04:52,160 --> 00:04:55,680
things we would like to see happen but

00:04:53,840 --> 00:04:57,600
it needs to be made clear here

00:04:55,680 --> 00:04:59,280
we don't dictate the future of the

00:04:57,600 --> 00:05:00,800
language we can just provide guidance of

00:04:59,280 --> 00:05:03,199
what we think should happen

00:05:00,800 --> 00:05:05,280
and one of these guiding ideas we would

00:05:03,199 --> 00:05:07,039
like to see people try to make happen

00:05:05,280 --> 00:05:08,800
is improving performance we do hear from

00:05:07,039 --> 00:05:12,160
people and we'll discuss this later

00:05:08,800 --> 00:05:13,919
in our um q and a ama section

00:05:12,160 --> 00:05:15,199
that people want to see python perform

00:05:13,919 --> 00:05:17,199
better

00:05:15,199 --> 00:05:19,199
now that's actually rather difficult

00:05:17,199 --> 00:05:21,039
because the language is very old

00:05:19,199 --> 00:05:22,560
large code base there's a lot of

00:05:21,039 --> 00:05:24,240
backwards compatibility concerns

00:05:22,560 --> 00:05:25,520
etc cetera it takes a lot of effort to

00:05:24,240 --> 00:05:26,240
actually bring performance improvements

00:05:25,520 --> 00:05:28,639
to the language

00:05:26,240 --> 00:05:30,160
now they do happen almost every release

00:05:28,639 --> 00:05:31,039
so it's not to say that we're not making

00:05:30,160 --> 00:05:32,720
strides

00:05:31,039 --> 00:05:34,720
but obviously it'd be nice to make even

00:05:32,720 --> 00:05:36,400
pick your strides and there's some

00:05:34,720 --> 00:05:38,000
trickiness to it that we think as a

00:05:36,400 --> 00:05:39,280
certain council can at least foster to

00:05:38,000 --> 00:05:40,800
try to help people

00:05:39,280 --> 00:05:42,479
be able to take the time and effort to

00:05:40,800 --> 00:05:44,160
try to make performance better

00:05:42,479 --> 00:05:45,759
so for instance trying to help pi pi and

00:05:44,160 --> 00:05:48,240
other implementations

00:05:45,759 --> 00:05:49,280
be faster without paying a penalty for

00:05:48,240 --> 00:05:51,520
trying to be compatible with c

00:05:49,280 --> 00:05:54,240
extensions is a very good example

00:05:51,520 --> 00:05:55,680
and trying to bring people together who

00:05:54,240 --> 00:05:56,880
do care about performance in ways that

00:05:55,680 --> 00:05:58,560
they can all work together

00:05:56,880 --> 00:06:00,400
to try to work with us as a core team

00:05:58,560 --> 00:06:02,400
and a steering council to try to foster

00:06:00,400 --> 00:06:04,639
things

00:06:02,400 --> 00:06:05,840
another area that we would like to see

00:06:04,639 --> 00:06:09,120
foster some growth

00:06:05,840 --> 00:06:11,759
and reach community outreach

00:06:09,120 --> 00:06:12,560
is new platforms if you ever look at

00:06:11,759 --> 00:06:16,080
ratings

00:06:12,560 --> 00:06:18,160
of languages and such and where they

00:06:16,080 --> 00:06:19,440
have pros and cons you often see python

00:06:18,160 --> 00:06:22,560
listed with cons

00:06:19,440 --> 00:06:24,160
of for instance mobile and web

00:06:22,560 --> 00:06:26,240
now we would love to be able to help

00:06:24,160 --> 00:06:28,000
foster people to come forward with

00:06:26,240 --> 00:06:30,319
the time and effort to try to make these

00:06:28,000 --> 00:06:31,120
platforms be more accessible to python

00:06:30,319 --> 00:06:34,160
users so that

00:06:31,120 --> 00:06:37,440
you can use these to

00:06:34,160 --> 00:06:39,280
actually code apps in python yourself

00:06:37,440 --> 00:06:41,120
there's also an educational aspect due

00:06:39,280 --> 00:06:42,560
to how many people are on the web and

00:06:41,120 --> 00:06:44,080
mobile but i'll discuss that in a later

00:06:42,560 --> 00:06:46,319
slide

00:06:44,080 --> 00:06:48,160
and there's also fostering other fields

00:06:46,319 --> 00:06:50,160
as well such as embedded devices

00:06:48,160 --> 00:06:53,440
which micro python and circuit python

00:06:50,160 --> 00:06:53,440
are currently trying to tackle

00:06:53,759 --> 00:06:57,440
but as i just mentioned education is

00:06:55,199 --> 00:06:59,440
also part of this uh we would love to

00:06:57,440 --> 00:07:00,880
continue to see education be a focal

00:06:59,440 --> 00:07:01,680
point of the python community as it

00:07:00,880 --> 00:07:03,520
already is

00:07:01,680 --> 00:07:05,759
and try to continue to be the language

00:07:03,520 --> 00:07:06,319
that educators choose because it's easy

00:07:05,759 --> 00:07:09,440
to

00:07:06,319 --> 00:07:10,560
reach and approach and uh teach to other

00:07:09,440 --> 00:07:11,759
people

00:07:10,560 --> 00:07:13,680
and as part of this we would like to

00:07:11,759 --> 00:07:14,000
foster people to come forward and help

00:07:13,680 --> 00:07:16,720
with

00:07:14,000 --> 00:07:19,199
education goals of the overall project

00:07:16,720 --> 00:07:21,039
we do have a documentation working group

00:07:19,199 --> 00:07:22,560
that's being started to help keep the

00:07:21,039 --> 00:07:24,080
documentation at its high quality and

00:07:22,560 --> 00:07:27,120
level which we hope will also

00:07:24,080 --> 00:07:28,800
help with education we also want to

00:07:27,120 --> 00:07:29,440
improve the quality of error messages

00:07:28,800 --> 00:07:30,880
which

00:07:29,440 --> 00:07:32,880
pablo may touch on later which is coming

00:07:30,880 --> 00:07:34,240
out in python 3.10

00:07:32,880 --> 00:07:36,479
but in general just trying to make the

00:07:34,240 --> 00:07:38,160
setup easier working with python easier

00:07:36,479 --> 00:07:39,360
and just make it so that anyone who's

00:07:38,160 --> 00:07:41,360
coming from a

00:07:39,360 --> 00:07:42,880
non-technical background to give them

00:07:41,360 --> 00:07:45,360
the opportunity to start learning with

00:07:42,880 --> 00:07:48,720
python and start their coding

00:07:45,360 --> 00:07:50,720
adventures as somewhere uh

00:07:48,720 --> 00:07:52,639
now we have some things coming soon uh

00:07:50,720 --> 00:07:53,199
over the next year or so and pablo's

00:07:52,639 --> 00:07:55,199
gonna

00:07:53,199 --> 00:07:57,680
discuss that with you as our illustrious

00:07:55,199 --> 00:07:59,759
release manager for python 3.10

00:07:57,680 --> 00:08:01,440
problem awesome thank you very much so

00:07:59,759 --> 00:08:03,199
um i would like to start covering

00:08:01,440 --> 00:08:05,280
um first the improvements that we have

00:08:03,199 --> 00:08:08,000
in the new release of python 3.10

00:08:05,280 --> 00:08:08,960
as the time we are right now recording

00:08:08,000 --> 00:08:11,360
this session

00:08:08,960 --> 00:08:12,080
um python 3.10 beta 1 actually is going

00:08:11,360 --> 00:08:14,639
to be released

00:08:12,080 --> 00:08:15,919
in one hour so um i would like to have

00:08:14,639 --> 00:08:17,280
some time to cover

00:08:15,919 --> 00:08:20,879
the exciting things that we were going

00:08:17,280 --> 00:08:22,879
to have um in in three printing

00:08:20,879 --> 00:08:24,319
okay so we have a lot of improvements

00:08:22,879 --> 00:08:25,520
actually python superintendent is one of

00:08:24,319 --> 00:08:28,000
the releases that pack

00:08:25,520 --> 00:08:29,280
most stuff together um you can see here

00:08:28,000 --> 00:08:30,720
some of the things that we have so we

00:08:29,280 --> 00:08:31,919
have pattern matching it's probably one

00:08:30,720 --> 00:08:34,240
of the big

00:08:31,919 --> 00:08:35,680
syntactical changes that we have but we

00:08:34,240 --> 00:08:37,760
are also packing a lot of things like

00:08:35,680 --> 00:08:39,360
performance improvements we have uh some

00:08:37,760 --> 00:08:42,000
developments using

00:08:39,360 --> 00:08:43,599
op cache ideas that will speed up some

00:08:42,000 --> 00:08:44,800
operations in the interpreter

00:08:43,599 --> 00:08:46,720
and we have several improvements

00:08:44,800 --> 00:08:48,720
actually to the type in languages

00:08:46,720 --> 00:08:50,160
um we have some deprecation that we are

00:08:48,720 --> 00:08:51,519
packing probably the most important

00:08:50,160 --> 00:08:52,560
thing is the application of these

00:08:51,519 --> 00:08:55,200
youtubes

00:08:52,560 --> 00:08:56,880
um we have a lot of improvements

00:08:55,200 --> 00:08:57,519
regarding the bargain i'm going to cover

00:08:56,880 --> 00:09:00,000
this uh

00:08:57,519 --> 00:09:01,600
just in in one second um and we have

00:09:00,000 --> 00:09:02,000
also parenthesized context managers that

00:09:01,600 --> 00:09:03,279
we

00:09:02,000 --> 00:09:05,839
know that it's a feature that many

00:09:03,279 --> 00:09:09,040
people wanted so finally we have it here

00:09:05,839 --> 00:09:11,360
actually if you look at the list of the

00:09:09,040 --> 00:09:13,279
peps that we have you will see that we

00:09:11,360 --> 00:09:13,760
have a lot of peps here i'm not going to

00:09:13,279 --> 00:09:16,160
cover

00:09:13,760 --> 00:09:17,600
all of them one by one but python 3.10

00:09:16,160 --> 00:09:18,480
actually is one of the releases that

00:09:17,600 --> 00:09:21,360
cover

00:09:18,480 --> 00:09:22,000
that has more peps included in the

00:09:21,360 --> 00:09:24,399
python 3

00:09:22,000 --> 00:09:26,160
series which is quite good it also is

00:09:24,399 --> 00:09:27,760
quite difficult to you know handle all

00:09:26,160 --> 00:09:28,640
these pubs together and making sure that

00:09:27,760 --> 00:09:31,839
we still

00:09:28,640 --> 00:09:33,760
um have a coherent uh

00:09:31,839 --> 00:09:36,160
language and and good experience for the

00:09:33,760 --> 00:09:38,640
release but we think we are doing a

00:09:36,160 --> 00:09:40,320
um a good job and we think python 3.0

00:09:38,640 --> 00:09:41,200
will be a fantastic release even if we

00:09:40,320 --> 00:09:42,959
have all these

00:09:41,200 --> 00:09:44,399
features being added at the same time

00:09:42,959 --> 00:09:46,880
the same release

00:09:44,399 --> 00:09:48,399
um actually as i said before for one of

00:09:46,880 --> 00:09:49,760
the improvements that we have and we

00:09:48,399 --> 00:09:50,720
have heard from people that is quite

00:09:49,760 --> 00:09:54,080
important

00:09:50,720 --> 00:09:54,800
is better uh error messages we know that

00:09:54,080 --> 00:09:57,200
python

00:09:54,800 --> 00:09:58,399
is used from for a lot of different

00:09:57,200 --> 00:09:59,920
people and user groups from

00:09:58,399 --> 00:10:01,040
professionals to people that are

00:09:59,920 --> 00:10:03,200
starting to learn

00:10:01,040 --> 00:10:04,800
uh for instance python is the official

00:10:03,200 --> 00:10:07,760
language for teaching in

00:10:04,800 --> 00:10:08,160
france if i recall correctly so having

00:10:07,760 --> 00:10:10,079
good

00:10:08,160 --> 00:10:12,000
error message is something that we care

00:10:10,079 --> 00:10:13,680
and also in general better development

00:10:12,000 --> 00:10:15,839
experience so python 3.10

00:10:13,680 --> 00:10:16,720
is going to pack a ton of improvements

00:10:15,839 --> 00:10:18,560
in this area

00:10:16,720 --> 00:10:20,320
and we have things like better syntax

00:10:18,560 --> 00:10:22,399
error better attribute errors that we

00:10:20,320 --> 00:10:24,560
offer suggestions if you mistake things

00:10:22,399 --> 00:10:26,079
um we have as you can see here is

00:10:24,560 --> 00:10:27,600
basically a snippet from the what's new

00:10:26,079 --> 00:10:28,320
so you can read more detailed

00:10:27,600 --> 00:10:30,000
information

00:10:28,320 --> 00:10:31,680
but it's important to know that we hear

00:10:30,000 --> 00:10:32,560
you and we know that this is an area

00:10:31,680 --> 00:10:34,079
that

00:10:32,560 --> 00:10:36,160
can use a lot of implements and we are

00:10:34,079 --> 00:10:39,360
starting to work on this slowly uh

00:10:36,160 --> 00:10:41,920
doing this in a good way is not easy

00:10:39,360 --> 00:10:43,040
as many people will know and so you need

00:10:41,920 --> 00:10:45,920
to be a bit patient but

00:10:43,040 --> 00:10:47,839
as i'm very excited to tell you that in

00:10:45,920 --> 00:10:50,000
this release and the new ones

00:10:47,839 --> 00:10:51,519
you will see a lot of improvements um in

00:10:50,000 --> 00:10:54,320
this area

00:10:51,519 --> 00:10:54,880
um then something quite important that

00:10:54,320 --> 00:10:56,560
um

00:10:54,880 --> 00:10:58,800
we are working on right now is the

00:10:56,560 --> 00:11:01,040
developer in wrestling so

00:10:58,800 --> 00:11:02,800
as you probably may know handling a

00:11:01,040 --> 00:11:04,800
project as big as c python is actually

00:11:02,800 --> 00:11:06,560
very very challenging and

00:11:04,800 --> 00:11:08,480
there is certain aspects that are very

00:11:06,560 --> 00:11:10,320
difficult to make it in a

00:11:08,480 --> 00:11:12,079
way that is efficient and a good

00:11:10,320 --> 00:11:14,000
experience for everyone some things

00:11:12,079 --> 00:11:15,760
that you may hear of is that we have a

00:11:14,000 --> 00:11:17,920
huge amount of prs

00:11:15,760 --> 00:11:20,000
um in the backlog so you know they they

00:11:17,920 --> 00:11:21,440
are an overview as fast as as we want as

00:11:20,000 --> 00:11:23,680
many computers one

00:11:21,440 --> 00:11:24,959
we have some problems in the test suite

00:11:23,680 --> 00:11:26,640
because you know it's a lot of there's

00:11:24,959 --> 00:11:28,240
many architectures that we support

00:11:26,640 --> 00:11:29,600
so this is a very challenging thing so

00:11:28,240 --> 00:11:31,600
one thing that we have been working with

00:11:29,600 --> 00:11:32,640
the psf and we from them from google so

00:11:31,600 --> 00:11:36,079
thank you a lot google

00:11:32,640 --> 00:11:36,640
here is a position um we call developer

00:11:36,079 --> 00:11:38,640
impression

00:11:36,640 --> 00:11:40,720
and the idea is that we hire a person

00:11:38,640 --> 00:11:42,480
that we are trying to prioritize core

00:11:40,720 --> 00:11:43,760
dev but it's not specifically restricted

00:11:42,480 --> 00:11:45,519
to cordova so

00:11:43,760 --> 00:11:46,880
people can apply as well here and the

00:11:45,519 --> 00:11:48,720
idea here is that they can

00:11:46,880 --> 00:11:50,320
help us uh with the maintenance of

00:11:48,720 --> 00:11:51,519
python so we need to

00:11:50,320 --> 00:11:53,600
because it's the first time we do this

00:11:51,519 --> 00:11:54,480
we need to figure out first what is the

00:11:53,600 --> 00:11:56,639
best way to

00:11:54,480 --> 00:11:57,760
you know use the time of of the person

00:11:56,639 --> 00:11:59,360
working on this

00:11:57,760 --> 00:12:00,959
but the idea is that you know it can

00:11:59,360 --> 00:12:01,920
help on this particular challenging

00:12:00,959 --> 00:12:04,320
areas um

00:12:01,920 --> 00:12:04,959
and if this was well we certainly hope

00:12:04,320 --> 00:12:06,880
and

00:12:04,959 --> 00:12:08,160
we are sure that they will go well and

00:12:06,880 --> 00:12:10,079
that yes then we will stand this

00:12:08,160 --> 00:12:11,760
position in the future so it will either

00:12:10,079 --> 00:12:12,480
we will renew it or we will have more

00:12:11,760 --> 00:12:15,040
people

00:12:12,480 --> 00:12:17,120
um it's a particularly tricky aspect and

00:12:15,040 --> 00:12:18,800
we are certainly will require work so

00:12:17,120 --> 00:12:20,160
you know be patient with this but we are

00:12:18,800 --> 00:12:21,600
quite happy to see

00:12:20,160 --> 00:12:23,279
for the first time that we can have some

00:12:21,600 --> 00:12:24,639
pay opportunities so the time we are

00:12:23,279 --> 00:12:27,200
recording actually uh

00:12:24,639 --> 00:12:30,560
this position is still open so you can

00:12:27,200 --> 00:12:32,160
um you can read the requirements and the

00:12:30,560 --> 00:12:33,760
the skills we are looking for and you

00:12:32,160 --> 00:12:37,279
probably can apply to it so

00:12:33,760 --> 00:12:39,760
um we encourage you to to do that

00:12:37,279 --> 00:12:41,040
the other important thing that um or the

00:12:39,760 --> 00:12:43,200
other important project that we are

00:12:41,040 --> 00:12:45,440
working on is the migration from our

00:12:43,200 --> 00:12:47,279
current uh issue tracker which is known

00:12:45,440 --> 00:12:47,760
as bpo do you have issues this is

00:12:47,279 --> 00:12:49,600
actually

00:12:47,760 --> 00:12:50,880
something that has been you know open

00:12:49,600 --> 00:12:54,399
for a long time

00:12:50,880 --> 00:12:57,200
and this is actually pep 581 and 588

00:12:54,399 --> 00:12:59,120
and well we know also that um there has

00:12:57,200 --> 00:13:02,079
been there hasn't been any

00:12:59,120 --> 00:13:02,800
big news on this area so uh very soon uh

00:13:02,079 --> 00:13:04,160
in

00:13:02,800 --> 00:13:06,000
after the language summit we are going

00:13:04,160 --> 00:13:07,120
to have some announcements here like how

00:13:06,000 --> 00:13:08,800
the project is going

00:13:07,120 --> 00:13:10,480
and we are going to try to make this a

00:13:08,800 --> 00:13:11,839
bit more transparent in the sense that

00:13:10,480 --> 00:13:14,160
all the things are going to be on github

00:13:11,839 --> 00:13:15,200
so people know what's going on and what

00:13:14,160 --> 00:13:17,440
issues we have

00:13:15,200 --> 00:13:18,800
um we have to say that this is actually

00:13:17,440 --> 00:13:19,440
a bit more challenging than many people

00:13:18,800 --> 00:13:22,000
think because

00:13:19,440 --> 00:13:23,920
in this synchronization from github and

00:13:22,000 --> 00:13:26,800
the team working on this um

00:13:23,920 --> 00:13:28,240
the person leading this is ezio um so we

00:13:26,800 --> 00:13:30,079
are working on this certainly there is

00:13:28,240 --> 00:13:32,240
improvements going to make uh

00:13:30,079 --> 00:13:34,160
and there is uh some announcements that

00:13:32,240 --> 00:13:36,240
are going to be made soon but

00:13:34,160 --> 00:13:37,600
this is happening hopefully we'll have

00:13:36,240 --> 00:13:39,920
it uh soon

00:13:37,600 --> 00:13:40,720
and it just has an understanding that

00:13:39,920 --> 00:13:42,320
this is not

00:13:40,720 --> 00:13:43,760
the easiest thing to do because python

00:13:42,320 --> 00:13:45,360
is a big project and we need to make

00:13:43,760 --> 00:13:47,440
sure that when we move

00:13:45,360 --> 00:13:49,440
all the issues uh we guarantee that

00:13:47,440 --> 00:13:51,120
everyone will have a good experience

00:13:49,440 --> 00:13:52,959
ideally better than the one that we have

00:13:51,120 --> 00:13:54,079
right now so just be a bit patient it

00:13:52,959 --> 00:13:57,360
will happen

00:13:54,079 --> 00:13:58,720
um then um something that we would like

00:13:57,360 --> 00:14:00,079
to update here is also like

00:13:58,720 --> 00:14:02,000
some improvements that we have from the

00:14:00,079 --> 00:14:04,079
development of c python

00:14:02,000 --> 00:14:05,920
itself and the general community here

00:14:04,079 --> 00:14:08,320
and what i'm going to cover here

00:14:05,920 --> 00:14:09,680
basically is some some aspects of things

00:14:08,320 --> 00:14:12,240
that have been happening or

00:14:09,680 --> 00:14:13,519
they are happening already so one of the

00:14:12,240 --> 00:14:15,760
things that we are doing

00:14:13,519 --> 00:14:18,160
in python is general improvements um so

00:14:15,760 --> 00:14:20,399
c python has many different areas

00:14:18,160 --> 00:14:22,000
of development ios is not only a very

00:14:20,399 --> 00:14:23,199
big code base but also it's a big code

00:14:22,000 --> 00:14:26,000
is that merges two

00:14:23,199 --> 00:14:27,120
big languages like c and python so we've

00:14:26,000 --> 00:14:28,880
been packing a lot of

00:14:27,120 --> 00:14:30,720
development improvements here and there

00:14:28,880 --> 00:14:32,160
is actually some peps

00:14:30,720 --> 00:14:33,600
that try to make sure that the

00:14:32,160 --> 00:14:34,000
guarantees that we give to the community

00:14:33,600 --> 00:14:35,760
are

00:14:34,000 --> 00:14:37,760
a bit better maintainer of the looks of

00:14:35,760 --> 00:14:39,920
things like we make sure that

00:14:37,760 --> 00:14:41,199
um the stable c api doesn't break when

00:14:39,920 --> 00:14:44,079
we do updates

00:14:41,199 --> 00:14:45,680
uh we think that there are messages that

00:14:44,079 --> 00:14:47,279
you saw that actually helped us as well

00:14:45,680 --> 00:14:48,800
developed c python because we

00:14:47,279 --> 00:14:51,199
we make a lot of errors as well so

00:14:48,800 --> 00:14:54,160
having good errors is quite good

00:14:51,199 --> 00:14:55,279
um we also try to make uh python faster

00:14:54,160 --> 00:14:57,199
also on the

00:14:55,279 --> 00:14:59,680
when is compiling the bug mode because

00:14:57,199 --> 00:15:01,519
that's where what our contributors and

00:14:59,680 --> 00:15:03,040
core developers run normally so having a

00:15:01,519 --> 00:15:04,800
good experience that is quite good

00:15:03,040 --> 00:15:06,160
bear in mind that this is also not as in

00:15:04,800 --> 00:15:07,760
the same console working directly on

00:15:06,160 --> 00:15:09,440
this this is the improvements that the

00:15:07,760 --> 00:15:10,240
whole c python community has been

00:15:09,440 --> 00:15:12,720
working on

00:15:10,240 --> 00:15:13,519
but it's good to summarize here um then

00:15:12,720 --> 00:15:15,680
perhaps um

00:15:13,519 --> 00:15:17,040
so as you saw the python 310 is actually

00:15:15,680 --> 00:15:18,399
one of the releases that have the most

00:15:17,040 --> 00:15:20,720
peps and we have a

00:15:18,399 --> 00:15:23,120
quite a big backlog so we try to go

00:15:20,720 --> 00:15:25,839
through these pubs as fast as possible

00:15:23,120 --> 00:15:27,279
but it's not not the easiest thing to do

00:15:25,839 --> 00:15:28,959
in the sense that we want to take it a

00:15:27,279 --> 00:15:29,680
lot of time to every path to make sure

00:15:28,959 --> 00:15:32,000
that we

00:15:29,680 --> 00:15:33,279
uh have every possible concern and

00:15:32,000 --> 00:15:35,279
viewpoint cover

00:15:33,279 --> 00:15:36,560
um so this is taking a lot as you saw

00:15:35,279 --> 00:15:38,079
probably there is some peps that

00:15:36,560 --> 00:15:39,360
couldn't make it to 310.

00:15:38,079 --> 00:15:41,279
we are trying to work on that we are

00:15:39,360 --> 00:15:43,920
trying to also make sure that

00:15:41,279 --> 00:15:44,800
um people have clear expectations over

00:15:43,920 --> 00:15:46,959
when peps

00:15:44,800 --> 00:15:47,920
will be reviewed given the big backlog

00:15:46,959 --> 00:15:50,320
that we have

00:15:47,920 --> 00:15:51,199
um but uh there will be a lot of

00:15:50,320 --> 00:15:52,800
improvements here

00:15:51,199 --> 00:15:54,560
hopefully in the next in next month that

00:15:52,800 --> 00:15:56,880
will announce um

00:15:54,560 --> 00:15:58,399
then um in diversity inclusion this is

00:15:56,880 --> 00:16:00,399
actually a very important thing because

00:15:58,399 --> 00:16:01,600
originally the c python team wasn't the

00:16:00,399 --> 00:16:03,120
most diverse but we are

00:16:01,600 --> 00:16:04,880
certainly working on this i'm happy to

00:16:03,120 --> 00:16:05,920
say that this is improvement um day

00:16:04,880 --> 00:16:07,360
after day

00:16:05,920 --> 00:16:09,199
and this is very important like for

00:16:07,360 --> 00:16:10,880
instance having members that

00:16:09,199 --> 00:16:13,040
um and this is just one example of

00:16:10,880 --> 00:16:15,279
course but having some members from

00:16:13,040 --> 00:16:16,240
japan or other countries when the

00:16:15,279 --> 00:16:18,000
language

00:16:16,240 --> 00:16:19,759
the written language doesn't use the

00:16:18,000 --> 00:16:21,199
occidental characters have helped us a

00:16:19,759 --> 00:16:24,240
lot to make decisions

00:16:21,199 --> 00:16:26,480
over unicode peps and unicode changes in

00:16:24,240 --> 00:16:28,560
the interpreter because they can import

00:16:26,480 --> 00:16:29,680
some viewpoints over how this is

00:16:28,560 --> 00:16:31,279
actually used

00:16:29,680 --> 00:16:33,199
or what requirements or how the things

00:16:31,279 --> 00:16:35,360
that we are proposing can fail so having

00:16:33,199 --> 00:16:36,320
you know i would inclusive endeavors

00:16:35,360 --> 00:16:38,639
team is

00:16:36,320 --> 00:16:39,440
fundamental to have um to make sure that

00:16:38,639 --> 00:16:41,839
the language

00:16:39,440 --> 00:16:42,800
adapts and is is good it offers the same

00:16:41,839 --> 00:16:44,560
experience for

00:16:42,800 --> 00:16:46,560
everyone no matter what they are doing

00:16:44,560 --> 00:16:47,360
with python or the experience level that

00:16:46,560 --> 00:16:48,959
they have

00:16:47,360 --> 00:16:50,480
and finally productivity is one of the

00:16:48,959 --> 00:16:53,040
important things that we are trying to

00:16:50,480 --> 00:16:54,800
improve um do we know that developing

00:16:53,040 --> 00:16:56,079
python can be quite challenging we have

00:16:54,800 --> 00:16:57,199
things like you know from from the

00:16:56,079 --> 00:16:58,880
biblical fleet

00:16:57,199 --> 00:17:00,880
uh to develop in different parts from

00:16:58,880 --> 00:17:02,639
the standard library to interpreter core

00:17:00,880 --> 00:17:04,000
and we know that it's quite frustrating

00:17:02,639 --> 00:17:06,240
when you are working on something and

00:17:04,000 --> 00:17:08,319
you know the system goes

00:17:06,240 --> 00:17:09,839
in front of you and you cannot do what

00:17:08,319 --> 00:17:11,760
you want to do very fast

00:17:09,839 --> 00:17:13,120
so we are trying to package some some

00:17:11,760 --> 00:17:14,400
improvements as well with some

00:17:13,120 --> 00:17:16,240
automation so

00:17:14,400 --> 00:17:18,319
marietta for instance has been working

00:17:16,240 --> 00:17:20,319
for a long time on bots and we have

00:17:18,319 --> 00:17:22,799
more improvements in this area i've been

00:17:20,319 --> 00:17:24,559
working for instance on automating

00:17:22,799 --> 00:17:26,799
linking the buildball fleet with the

00:17:24,559 --> 00:17:29,520
github platform so we can have

00:17:26,799 --> 00:17:31,039
more immediate ways to test the code and

00:17:29,520 --> 00:17:33,200
see when something is happening

00:17:31,039 --> 00:17:34,559
and we continue doing this thing um and

00:17:33,200 --> 00:17:36,400
we know that it's an important

00:17:34,559 --> 00:17:37,919
uh part of the development experience

00:17:36,400 --> 00:17:39,679
and we try to make sense

00:17:37,919 --> 00:17:43,280
uh to think about what ways we can

00:17:39,679 --> 00:17:43,280
actually move this forward

00:17:43,600 --> 00:17:48,240
so um and yes uh we'll send some

00:17:47,039 --> 00:17:49,840
comments here and something

00:17:48,240 --> 00:17:51,360
on the general development community so

00:17:49,840 --> 00:17:53,280
we are quite excited about the global

00:17:51,360 --> 00:17:55,200
language uh we have seen it grow on many

00:17:53,280 --> 00:17:56,400
new areas like asia latin america south

00:17:55,200 --> 00:17:58,799
africa and africa

00:17:56,400 --> 00:18:00,400
and python obviously has been exploding

00:17:58,799 --> 00:18:02,320
in things like science and data science

00:18:00,400 --> 00:18:04,720
but also on things like education

00:18:02,320 --> 00:18:05,919
and um also in the corporate world so we

00:18:04,720 --> 00:18:07,679
are aware of all these

00:18:05,919 --> 00:18:10,240
these different uses of the language and

00:18:07,679 --> 00:18:11,760
as a student council we certainly try to

00:18:10,240 --> 00:18:14,000
balance all of them which is a quite a

00:18:11,760 --> 00:18:17,120
challenging task but we try to make

00:18:14,000 --> 00:18:18,000
our best um but we are aware of these

00:18:17,120 --> 00:18:19,919
different things

00:18:18,000 --> 00:18:22,000
but also we are we are seeing a lot of

00:18:19,919 --> 00:18:22,720
improvements on other areas like for

00:18:22,000 --> 00:18:25,440
instance

00:18:22,720 --> 00:18:27,039
python and web we haven't seen recently

00:18:25,440 --> 00:18:28,960
the development of bryton which is kind

00:18:27,039 --> 00:18:30,880
of a a way of bringing

00:18:28,960 --> 00:18:32,160
python to the browser but also we have

00:18:30,880 --> 00:18:33,840
seen ways to

00:18:32,160 --> 00:18:35,600
merge python and javascript in many

00:18:33,840 --> 00:18:36,880
other ways like for instance the jupyter

00:18:35,600 --> 00:18:38,640
notebook and all the improvements in

00:18:36,880 --> 00:18:39,919
that area is one with example but it's

00:18:38,640 --> 00:18:42,559
not the only one

00:18:39,919 --> 00:18:44,640
um so we we know that python is actually

00:18:42,559 --> 00:18:46,160
still growing quite a lot and quite fast

00:18:44,640 --> 00:18:48,080
and there is a lot of different use

00:18:46,160 --> 00:18:49,280
cases and this is actually something

00:18:48,080 --> 00:18:50,880
that makes us very happy

00:18:49,280 --> 00:18:51,919
and it's also a good challenge to make

00:18:50,880 --> 00:18:53,919
sure that all of these things are

00:18:51,919 --> 00:18:54,960
balanced uh but i think it's a very very

00:18:53,919 --> 00:18:57,840
future in the

00:18:54,960 --> 00:19:00,480
in the pro in the next uh five uh five

00:18:57,840 --> 00:19:00,480
to ten years

00:19:01,520 --> 00:19:05,360
so finally just as you see uh we have

00:19:03,919 --> 00:19:06,080
been covering like what is the scene

00:19:05,360 --> 00:19:09,360
cancel

00:19:06,080 --> 00:19:10,160
um what we do how how um how we work

00:19:09,360 --> 00:19:12,640
normally

00:19:10,160 --> 00:19:13,840
we you have seen also um kind of what is

00:19:12,640 --> 00:19:16,400
our vision for the

00:19:13,840 --> 00:19:17,600
um like next years and also the things

00:19:16,400 --> 00:19:20,880
that we are going to pack

00:19:17,600 --> 00:19:22,160
soon in python 3.10 as well as the

00:19:20,880 --> 00:19:24,240
projects that we are doing like the

00:19:22,160 --> 00:19:25,600
github migrations or the developer in

00:19:24,240 --> 00:19:27,039
residence that we are quite excited

00:19:25,600 --> 00:19:29,760
about so we hope that this

00:19:27,039 --> 00:19:31,039
gives you um some good vision over how

00:19:29,760 --> 00:19:32,080
things are going regarding the student

00:19:31,039 --> 00:19:38,080
council

00:19:32,080 --> 00:19:41,120
and thank you for watching

00:19:38,080 --> 00:19:42,160
thank you pablo uh i want to bring up

00:19:41,120 --> 00:19:44,559
one thing because

00:19:42,160 --> 00:19:46,080
we apparently all missed this while we

00:19:44,559 --> 00:19:49,600
reviewed the presentation

00:19:46,080 --> 00:19:51,679
uh in your list of peps for 310

00:19:49,600 --> 00:19:52,720
you mentioned from future imports

00:19:51,679 --> 00:19:55,520
annotations that

00:19:52,720 --> 00:19:57,200
563 is being accepted but we actually

00:19:55,520 --> 00:19:58,799
decided to roll that back because it

00:19:57,200 --> 00:20:03,600
would turn out to be

00:19:58,799 --> 00:20:05,919
too disruptive of a change so just uh to

00:20:03,600 --> 00:20:07,840
put minds at ease if people read that

00:20:05,919 --> 00:20:09,919
particular list in detail

00:20:07,840 --> 00:20:11,679
that is not happening we didn't again

00:20:09,919 --> 00:20:13,200
change our mind on this

00:20:11,679 --> 00:20:15,039
that is not happening there will have

00:20:13,200 --> 00:20:18,000
been a really nicky way to

00:20:15,039 --> 00:20:18,720
reintroduce that and of course just to

00:20:18,000 --> 00:20:21,360
be clear we're

00:20:18,720 --> 00:20:23,520
we're not rejecting it we're just saying

00:20:21,360 --> 00:20:26,799
we're deferring it to python 311

00:20:23,520 --> 00:20:26,799
yes that is what i meant

00:20:27,600 --> 00:20:33,600
all right we had uh

00:20:31,760 --> 00:20:35,039
a couple weeks before we record this we

00:20:33,600 --> 00:20:38,320
had a slido up

00:20:35,039 --> 00:20:40,799
asking people for questions uh we wanted

00:20:38,320 --> 00:20:43,200
to have a little q a session even though

00:20:40,799 --> 00:20:45,200
this is in the live presentation we

00:20:43,200 --> 00:20:46,960
didn't get very many responses but there

00:20:45,200 --> 00:20:49,440
was some interest so we have a bunch of

00:20:46,960 --> 00:20:52,960
questions we're going to try and answer

00:20:49,440 --> 00:20:54,960
um the first five all uh the first

00:20:52,960 --> 00:20:56,159
five including the five with three most

00:20:54,960 --> 00:20:58,559
upvoted

00:20:56,159 --> 00:20:59,360
uh all involve performance which brett

00:20:58,559 --> 00:21:01,360
already

00:20:59,360 --> 00:21:02,799
uh touched on but i will try so i will

00:21:01,360 --> 00:21:06,640
try to answer them

00:21:02,799 --> 00:21:07,840
in one go um they were when will python

00:21:06,640 --> 00:21:10,080
be faster

00:21:07,840 --> 00:21:11,440
when will python get a jet and just in

00:21:10,080 --> 00:21:14,080
time compiler

00:21:11,440 --> 00:21:16,480
what happened with mark shannon's

00:21:14,080 --> 00:21:19,120
proposal for a faster python

00:21:16,480 --> 00:21:19,840
and why does the steering council value

00:21:19,120 --> 00:21:22,400
maintenance

00:21:19,840 --> 00:21:22,960
more than performance i think brad

00:21:22,400 --> 00:21:26,320
already

00:21:22,960 --> 00:21:28,159
covered it pretty well uh but i

00:21:26,320 --> 00:21:29,760
it doesn't doesn't hurt to elaborate a

00:21:28,159 --> 00:21:31,760
little um

00:21:29,760 --> 00:21:33,840
first of all this is all about the c

00:21:31,760 --> 00:21:36,640
python implementation of python not

00:21:33,840 --> 00:21:38,080
python the language because python the

00:21:36,640 --> 00:21:40,000
language is perfectly

00:21:38,080 --> 00:21:42,080
capable of having a jit and there are

00:21:40,000 --> 00:21:46,720
jits for python that are not in c

00:21:42,080 --> 00:21:48,799
python mark shannon's proposal

00:21:46,720 --> 00:21:51,039
wasn't about a jet just for the record

00:21:48,799 --> 00:21:52,159
it was about other optimizations to see

00:21:51,039 --> 00:21:54,799
python

00:21:52,159 --> 00:21:55,840
and he didn't make a proposal as such he

00:21:54,799 --> 00:22:00,000
was asking about

00:21:55,840 --> 00:22:02,559
funding for potential work improving it

00:22:00,000 --> 00:22:04,159
we don't know any more than anyone else

00:22:02,559 --> 00:22:05,919
because this all happened on

00:22:04,159 --> 00:22:07,360
the python dev mailing list it was all

00:22:05,919 --> 00:22:09,039
public

00:22:07,360 --> 00:22:11,440
so i don't really have anything to

00:22:09,039 --> 00:22:13,840
elaborate on there

00:22:11,440 --> 00:22:14,720
the problem with performance increases

00:22:13,840 --> 00:22:16,559
structural

00:22:14,720 --> 00:22:18,400
performance increases that they are

00:22:16,559 --> 00:22:19,120
usually a trade-off they're a trade-off

00:22:18,400 --> 00:22:22,159
with

00:22:19,120 --> 00:22:24,240
complexity compatibility uh

00:22:22,159 --> 00:22:25,520
performance in other cases like you'll

00:22:24,240 --> 00:22:27,679
improve one thing and you'll

00:22:25,520 --> 00:22:29,760
decrease the performance something else

00:22:27,679 --> 00:22:33,440
or especially with jets

00:22:29,760 --> 00:22:36,799
things like startup time and memory use

00:22:33,440 --> 00:22:39,520
which they frequently impact so that

00:22:36,799 --> 00:22:41,200
the wins aren't always obvious something

00:22:39,520 --> 00:22:43,280
that is a performance improvement for

00:22:41,200 --> 00:22:46,240
one person may be totally unacceptable

00:22:43,280 --> 00:22:48,000
decrease in performance for someone else

00:22:46,240 --> 00:22:50,000
and like i mentioned there are jets

00:22:48,000 --> 00:22:52,799
pi pi has been around for many years it

00:22:50,000 --> 00:22:55,360
is incredibly compatible with c python

00:22:52,799 --> 00:22:55,919
even to the extent of many c extension

00:22:55,360 --> 00:22:59,440
modules

00:22:55,919 --> 00:23:00,880
not all of them but many there are other

00:22:59,440 --> 00:23:04,080
jit projects too

00:23:00,880 --> 00:23:05,679
piston pidgin number

00:23:04,080 --> 00:23:07,679
a whole bunch of others are being worked

00:23:05,679 --> 00:23:09,520
on those are all

00:23:07,679 --> 00:23:11,520
options that have different trade-offs

00:23:09,520 --> 00:23:15,360
and they are usable if you are

00:23:11,520 --> 00:23:18,159
somehow enabled unable to use pi pi

00:23:15,360 --> 00:23:19,039
uh i if you care about a jet and see

00:23:18,159 --> 00:23:20,640
python you

00:23:19,039 --> 00:23:23,039
really want to look at these projects

00:23:20,640 --> 00:23:25,280
and give them a go and then

00:23:23,039 --> 00:23:27,440
if they turn out to be generally useful

00:23:25,280 --> 00:23:29,280
rather than specifically useful

00:23:27,440 --> 00:23:30,720
they might end up in see python who

00:23:29,280 --> 00:23:32,799
knows

00:23:30,720 --> 00:23:34,000
um the steering council does care about

00:23:32,799 --> 00:23:37,919
the performance

00:23:34,000 --> 00:23:38,400
we just we need to have a solid base to

00:23:37,919 --> 00:23:41,440
build

00:23:38,400 --> 00:23:42,720
on two so we need to get our house in

00:23:41,440 --> 00:23:44,960
order to

00:23:42,720 --> 00:23:46,400
get rid of our pr backlog get rid of all

00:23:44,960 --> 00:23:48,720
the bugs backlog or

00:23:46,400 --> 00:23:50,720
a large portion of it before we can

00:23:48,720 --> 00:23:51,360
spend the limited amount of funds we

00:23:50,720 --> 00:23:54,559
have

00:23:51,360 --> 00:23:58,400
on something like performance

00:23:54,559 --> 00:24:01,440
i say that but if a company would come

00:23:58,400 --> 00:24:03,919
up with a proposal for

00:24:01,440 --> 00:24:04,559
significant support to see python to

00:24:03,919 --> 00:24:07,360
work on

00:24:04,559 --> 00:24:09,320
performance projects then we can find

00:24:07,360 --> 00:24:10,960
people to work on them we can extend the

00:24:09,320 --> 00:24:13,760
developer-in-residence

00:24:10,960 --> 00:24:15,440
project to include more people to work

00:24:13,760 --> 00:24:18,000
specifically on performance

00:24:15,440 --> 00:24:18,640
but so far we haven't heard uh anyone

00:24:18,000 --> 00:24:22,159
offering

00:24:18,640 --> 00:24:22,159
that amount of money yet

00:24:23,039 --> 00:24:26,559
anyone want to add anything to this yeah

00:24:25,840 --> 00:24:28,880
small

00:24:26,559 --> 00:24:30,400
small detailed things so something also

00:24:28,880 --> 00:24:31,120
important to bear in mind is that we

00:24:30,400 --> 00:24:32,960
continue

00:24:31,120 --> 00:24:34,320
to have performance improvements on

00:24:32,960 --> 00:24:35,440
every release on the interpreter it's

00:24:34,320 --> 00:24:37,279
just not that the

00:24:35,440 --> 00:24:38,640
scale that we were discussing with march

00:24:37,279 --> 00:24:40,760
probably so actually

00:24:38,640 --> 00:24:42,080
we have a server when we track this with

00:24:40,760 --> 00:24:43,520
speed.python.org

00:24:42,080 --> 00:24:45,760
and you can see actually that for

00:24:43,520 --> 00:24:47,840
instance python 3.9 um

00:24:45,760 --> 00:24:50,000
was faster than python 3.9 and python

00:24:47,840 --> 00:24:50,480
3.10 is again faster than pregnancy 0.9

00:24:50,000 --> 00:24:53,279
on

00:24:50,480 --> 00:24:53,840
some cases not all across the board but

00:24:53,279 --> 00:24:55,520
we have

00:24:53,840 --> 00:24:57,440
quite a big performance improvement in

00:24:55,520 --> 00:24:58,480
some places so it's not that we are not

00:24:57,440 --> 00:24:59,760
you know doing anything on the

00:24:58,480 --> 00:25:00,480
performance there are a lot of core

00:24:59,760 --> 00:25:02,720
developers that

00:25:00,480 --> 00:25:06,240
still care about this thing so stay

00:25:02,720 --> 00:25:06,240
tuned to foresee more things to come

00:25:06,799 --> 00:25:11,679
i think the other thing i would add is

00:25:09,919 --> 00:25:13,840
that we are always concerned about

00:25:11,679 --> 00:25:14,480
performance impact of any new features

00:25:13,840 --> 00:25:16,159
so that's

00:25:14,480 --> 00:25:18,480
definitely something that we we talked

00:25:16,159 --> 00:25:18,880
about in the uh steering council as

00:25:18,480 --> 00:25:21,840
we're

00:25:18,880 --> 00:25:21,840
evaluating peps

00:25:26,080 --> 00:25:31,120
all right next question then okay

00:25:29,120 --> 00:25:32,960
so the next question is two questions

00:25:31,120 --> 00:25:35,360
together um but basically

00:25:32,960 --> 00:25:36,320
they are about um how industrial

00:25:35,360 --> 00:25:39,200
encounters so

00:25:36,320 --> 00:25:41,440
basically there is this worry that

00:25:39,200 --> 00:25:43,760
people have in general about

00:25:41,440 --> 00:25:45,039
python getting too big or having too

00:25:43,760 --> 00:25:47,200
many different areas

00:25:45,039 --> 00:25:49,039
normally they refer to additions to the

00:25:47,200 --> 00:25:52,080
grammar right so the language itself

00:25:49,039 --> 00:25:54,000
going to these places um so the

00:25:52,080 --> 00:25:55,760
the questions is about like what the

00:25:54,000 --> 00:25:57,520
student council is doing regarding this

00:25:55,760 --> 00:25:59,200
scene or are we caring about like you

00:25:57,520 --> 00:26:01,360
know python gets it too complicated

00:25:59,200 --> 00:26:02,799
or i think one of the other questions

00:26:01,360 --> 00:26:03,840
was referring to the spite on getting

00:26:02,799 --> 00:26:05,760
too thin

00:26:03,840 --> 00:26:07,360
um so certainly we get out about this

00:26:05,760 --> 00:26:10,880
thing we know that people

00:26:07,360 --> 00:26:12,720
um know python from in a

00:26:10,880 --> 00:26:14,080
language that is very easy to work with

00:26:12,720 --> 00:26:17,279
and very easy to learn

00:26:14,080 --> 00:26:20,080
and we know that the more python groups

00:26:17,279 --> 00:26:21,279
semantically and syntactically um makes

00:26:20,080 --> 00:26:24,320
this more difficult

00:26:21,279 --> 00:26:25,840
we are also aware that um python has

00:26:24,320 --> 00:26:28,640
many different users so

00:26:25,840 --> 00:26:30,559
something that can be very exciting for

00:26:28,640 --> 00:26:31,600
corporate uses of python or big code

00:26:30,559 --> 00:26:33,600
bases

00:26:31,600 --> 00:26:34,880
may not be that exciting for people

00:26:33,600 --> 00:26:36,400
teaching python so

00:26:34,880 --> 00:26:38,080
that is something that we are very well

00:26:36,400 --> 00:26:39,200
aware and

00:26:38,080 --> 00:26:40,720
there is not an easy answer in this

00:26:39,200 --> 00:26:42,480
regard in the sense that there is not a

00:26:40,720 --> 00:26:44,720
magical formula language design

00:26:42,480 --> 00:26:46,400
is quite complicated normally also

00:26:44,720 --> 00:26:48,799
because it involves a lot of

00:26:46,400 --> 00:26:50,320
um people problem right like i

00:26:48,799 --> 00:26:52,080
understand it's not like

00:26:50,320 --> 00:26:54,400
a formula i can tell you how complex the

00:26:52,080 --> 00:26:55,919
language is getting um but also is

00:26:54,400 --> 00:26:58,559
how people perceive the different

00:26:55,919 --> 00:27:01,679
complex uh additions to the language so

00:26:58,559 --> 00:27:02,880
when we discuss the different um aspects

00:27:01,679 --> 00:27:03,679
like for instance father matching

00:27:02,880 --> 00:27:04,960
recently

00:27:03,679 --> 00:27:07,679
this is something that was discussed

00:27:04,960 --> 00:27:09,919
quite a lot we certainly make sure to

00:27:07,679 --> 00:27:11,600
like hear everyone so we review all the

00:27:09,919 --> 00:27:13,600
main lists and all the discussions with

00:27:11,600 --> 00:27:16,080
normally involves like hundreds of

00:27:13,600 --> 00:27:16,640
mails so it's a task that takes a lot of

00:27:16,080 --> 00:27:18,720
hours

00:27:16,640 --> 00:27:20,480
and we talk with the authors and we we

00:27:18,720 --> 00:27:22,240
sometimes discuss with some users group

00:27:20,480 --> 00:27:24,080
so this is something that we certainly

00:27:22,240 --> 00:27:25,760
um have in mind

00:27:24,080 --> 00:27:27,679
so when we accept something that you may

00:27:25,760 --> 00:27:29,520
think wow this is quite big and this is

00:27:27,679 --> 00:27:31,840
going to be python i don't know

00:27:29,520 --> 00:27:33,360
a super complex language to do um we

00:27:31,840 --> 00:27:34,720
certainly think that that's not the case

00:27:33,360 --> 00:27:36,640
for the things we accept that's almost a

00:27:34,720 --> 00:27:39,760
topology because we accepted that

00:27:36,640 --> 00:27:42,000
but um it's a trust thing right like

00:27:39,760 --> 00:27:43,440
there is not a magical formula here um

00:27:42,000 --> 00:27:46,720
there is trade-offs as well

00:27:43,440 --> 00:27:48,640
um we normally want python to have

00:27:46,720 --> 00:27:50,320
uh and preserve the things that people

00:27:48,640 --> 00:27:52,320
normally identify with

00:27:50,320 --> 00:27:53,919
um so certainly the only thing that i

00:27:52,320 --> 00:27:56,640
can certainly promise is that

00:27:53,919 --> 00:27:58,240
we hear everyone and and we try to make

00:27:56,640 --> 00:27:59,200
sure that every point of view is

00:27:58,240 --> 00:28:01,919
listened to

00:27:59,200 --> 00:28:03,440
and we also try to make sure that um

00:28:01,919 --> 00:28:05,279
from a technical point of view

00:28:03,440 --> 00:28:06,880
uh we don't make python more difficult

00:28:05,279 --> 00:28:07,760
to pass humanly right this is something

00:28:06,880 --> 00:28:10,159
that has come

00:28:07,760 --> 00:28:11,440
many times in the language changes that

00:28:10,159 --> 00:28:14,640
have been proposed

00:28:11,440 --> 00:28:17,440
um we don't know exactly if we are doing

00:28:14,640 --> 00:28:19,919
the best job at all the areas but we put

00:28:17,440 --> 00:28:22,159
our best here we are also human so

00:28:19,919 --> 00:28:24,399
um i don't know if someone wants to add

00:28:22,159 --> 00:28:26,480
something else in this particular area

00:28:24,399 --> 00:28:27,440
yeah i had a few things that i wanted to

00:28:26,480 --> 00:28:29,840
add um

00:28:27,440 --> 00:28:30,799
one thing that we know is change is

00:28:29,840 --> 00:28:33,520
something that

00:28:30,799 --> 00:28:35,520
is going to happen and has happened over

00:28:33,520 --> 00:28:37,919
the last 30 years in python and even if

00:28:35,520 --> 00:28:40,080
we look back in the last 10 years

00:28:37,919 --> 00:28:40,960
the explosion of cloud services and

00:28:40,080 --> 00:28:43,039
things

00:28:40,960 --> 00:28:44,080
has really profoundly changed our

00:28:43,039 --> 00:28:46,799
industry

00:28:44,080 --> 00:28:48,000
and when you look at python a language

00:28:46,799 --> 00:28:50,799
as pablo said

00:28:48,000 --> 00:28:53,679
there are many different use cases but

00:28:50,799 --> 00:28:56,320
if you look at python as an ecosystem

00:28:53,679 --> 00:28:57,360
not only is there the language but there

00:28:56,320 --> 00:29:01,120
are

00:28:57,360 --> 00:29:03,760
an abundance of libraries and packages

00:29:01,120 --> 00:29:04,720
out there on pipi honda forge and other

00:29:03,760 --> 00:29:07,520
places

00:29:04,720 --> 00:29:09,520
and those are the things that if you're

00:29:07,520 --> 00:29:11,600
a new user to python

00:29:09,520 --> 00:29:13,600
you're looking at it as okay this is

00:29:11,600 --> 00:29:16,960
complex because of the

00:29:13,600 --> 00:29:18,720
amount of things but how do you get

00:29:16,960 --> 00:29:20,960
past that complexity you break the

00:29:18,720 --> 00:29:22,960
problem down and

00:29:20,960 --> 00:29:25,360
even though additional features are

00:29:22,960 --> 00:29:27,520
added into the foundation of the library

00:29:25,360 --> 00:29:29,440
doesn't mean that everybody has to learn

00:29:27,520 --> 00:29:32,640
those or use those

00:29:29,440 --> 00:29:33,200
out of the gate and i think one of the

00:29:32,640 --> 00:29:35,679
things

00:29:33,200 --> 00:29:36,960
like pablo said is we've spent a lot of

00:29:35,679 --> 00:29:40,640
time

00:29:36,960 --> 00:29:44,559
both listening to constructive feedback

00:29:40,640 --> 00:29:47,360
from the community and months spending

00:29:44,559 --> 00:29:49,520
time thinking about pattern matching

00:29:47,360 --> 00:29:50,799
talking about pattern matching revising

00:29:49,520 --> 00:29:53,919
pattern matching

00:29:50,799 --> 00:29:55,679
and ultimately i think where we're doing

00:29:53,919 --> 00:29:57,039
what we're doing is positioning python

00:29:55,679 --> 00:29:59,440
for the future

00:29:57,039 --> 00:30:00,320
and with that i'm going to perhaps toss

00:29:59,440 --> 00:30:03,360
it over to

00:30:00,320 --> 00:30:08,640
anybody else or if not um brett

00:30:03,360 --> 00:30:10,320
to talk about packaging

00:30:08,640 --> 00:30:12,080
well it sounds like no one else had

00:30:10,320 --> 00:30:13,520
anything to specifically add so

00:30:12,080 --> 00:30:15,440
the next question we received was

00:30:13,520 --> 00:30:17,279
essentially uh what are

00:30:15,440 --> 00:30:19,039
you doing to improve the story of

00:30:17,279 --> 00:30:22,000
packaging in python

00:30:19,039 --> 00:30:23,440
and uh somewhat ironically we're

00:30:22,000 --> 00:30:26,640
actually the wrong people to ask

00:30:23,440 --> 00:30:27,919
about that question uh so if

00:30:26,640 --> 00:30:29,279
if you're not familiar with packaging in

00:30:27,919 --> 00:30:30,240
python there's kind of two groups

00:30:29,279 --> 00:30:32,559
there's the group

00:30:30,240 --> 00:30:33,279
uh that's referred to as the pi pa

00:30:32,559 --> 00:30:36,880
that's the

00:30:33,279 --> 00:30:38,720
um pi p i uh slash pips last step tools

00:30:36,880 --> 00:30:39,919
virtual live that kind of area of

00:30:38,720 --> 00:30:40,880
packaging and then there's the conda

00:30:39,919 --> 00:30:42,720
group of people

00:30:40,880 --> 00:30:44,399
on the other side uh and in both

00:30:42,720 --> 00:30:47,360
instances we actually don't

00:30:44,399 --> 00:30:48,880
directly we don't direct or actually

00:30:47,360 --> 00:30:51,120
control either group

00:30:48,880 --> 00:30:52,000
uh on the pi pa side we actually have

00:30:51,120 --> 00:30:54,720
delegated

00:30:52,000 --> 00:30:56,720
um acceptances of peps and the actual

00:30:54,720 --> 00:30:59,679
process of improving packaging

00:30:56,720 --> 00:31:01,360
to the pipea itself so that they can

00:30:59,679 --> 00:31:02,000
actually work at a faster speed and on

00:31:01,360 --> 00:31:04,799
their own

00:31:02,000 --> 00:31:05,760
based on their domain knowledge of

00:31:04,799 --> 00:31:08,000
packaging

00:31:05,760 --> 00:31:09,840
and specifically when you think about it

00:31:08,000 --> 00:31:10,720
python is a language and c python is an

00:31:09,840 --> 00:31:13,039
interpreter

00:31:10,720 --> 00:31:14,399
don't directly tie into packaging right

00:31:13,039 --> 00:31:16,000
there's not a real

00:31:14,399 --> 00:31:17,279
one-to-one correlation there packaging

00:31:16,000 --> 00:31:18,000
can actually happen outside of the

00:31:17,279 --> 00:31:20,399
language and

00:31:18,000 --> 00:31:21,840
see python completely independently and

00:31:20,399 --> 00:31:22,960
so this is kind of how the structures

00:31:21,840 --> 00:31:25,120
ended up

00:31:22,960 --> 00:31:26,559
um specifically talking from the pipa

00:31:25,120 --> 00:31:28,880
site as a

00:31:26,559 --> 00:31:30,559
as me brett not specifically as a

00:31:28,880 --> 00:31:34,080
steering council member

00:31:30,559 --> 00:31:37,360
work is being done uh there's a lot of

00:31:34,080 --> 00:31:40,080
kind of convention in packaging that has

00:31:37,360 --> 00:31:42,080
been uh slowly teased apart uh pipea

00:31:40,080 --> 00:31:43,600
much like core python is very much

00:31:42,080 --> 00:31:44,880
volunteer driven so there's

00:31:43,600 --> 00:31:47,279
only so much time in there for people

00:31:44,880 --> 00:31:48,640
can put in but there's active work going

00:31:47,279 --> 00:31:50,000
on to actually try to

00:31:48,640 --> 00:31:51,919
tease out all the conventions that are

00:31:50,000 --> 00:31:52,399
in the packaging world into peps and

00:31:51,919 --> 00:31:54,519
into

00:31:52,399 --> 00:31:56,000
standards uh you can see them at

00:31:54,519 --> 00:31:57,919
packaging.python.org

00:31:56,000 --> 00:31:59,120
and then also to take those standards

00:31:57,919 --> 00:32:00,960
and develop

00:31:59,120 --> 00:32:03,679
libraries and packages that can actually

00:32:00,960 --> 00:32:05,600
be reused by other tools such that

00:32:03,679 --> 00:32:07,120
there's a lot more code share and to

00:32:05,600 --> 00:32:08,880
make it easier potentially for other

00:32:07,120 --> 00:32:12,640
tools to come forward and flourish

00:32:08,880 --> 00:32:14,080
and provide better or unique uh

00:32:12,640 --> 00:32:15,600
workflows for people that fit their

00:32:14,080 --> 00:32:16,640
needs better than potentially what the

00:32:15,600 --> 00:32:18,640
current tools are

00:32:16,640 --> 00:32:20,080
so work is very actively happening um

00:32:18,640 --> 00:32:21,120
but it is actually not being driven by

00:32:20,080 --> 00:32:22,960
the steering council at all

00:32:21,120 --> 00:32:24,320
it is being driven by the pipa or the

00:32:22,960 --> 00:32:26,399
conda uh

00:32:24,320 --> 00:32:27,440
groups uh completely independently on

00:32:26,399 --> 00:32:29,919
their own and

00:32:27,440 --> 00:32:31,600
they are the ones driving it and for

00:32:29,919 --> 00:32:32,399
that i will now hand off to baron

00:32:31,600 --> 00:32:35,039
carroll

00:32:32,399 --> 00:32:35,679
i i had a couple more points to make oh

00:32:35,039 --> 00:32:38,320
sorry

00:32:35,679 --> 00:32:39,440
uh the question i i don't remember if we

00:32:38,320 --> 00:32:41,840
posted the

00:32:39,440 --> 00:32:43,039
questions anywhere but the question says

00:32:41,840 --> 00:32:45,840
packaging is a mess

00:32:43,039 --> 00:32:47,919
and i just want to highlight if you

00:32:45,840 --> 00:32:50,640
think packaging is a mess right now

00:32:47,919 --> 00:32:51,760
you weren't around 10 years ago or 20

00:32:50,640 --> 00:32:54,640
years ago

00:32:51,760 --> 00:32:56,000
because it has changed massively in

00:32:54,640 --> 00:32:59,519
those 20 years

00:32:56,000 --> 00:33:01,360
improved enormously in those 20 years

00:32:59,519 --> 00:33:02,640
and especially in the last five years or

00:33:01,360 --> 00:33:05,200
so and

00:33:02,640 --> 00:33:05,919
packaging work group and all the people

00:33:05,200 --> 00:33:09,519
working on pi

00:33:05,919 --> 00:33:10,159
pi on pip on setup tools they are a

00:33:09,519 --> 00:33:13,440
showcase

00:33:10,159 --> 00:33:16,000
of how you can improve an ecosystem

00:33:13,440 --> 00:33:17,200
and a community such as the python

00:33:16,000 --> 00:33:20,399
community

00:33:17,200 --> 00:33:23,919
uh if you put in the work and also

00:33:20,399 --> 00:33:26,320
as a speaking as a psf director

00:33:23,919 --> 00:33:27,200
the amount of money they have been able

00:33:26,320 --> 00:33:30,240
to pull in

00:33:27,200 --> 00:33:32,480
by applying for grants and showing that

00:33:30,240 --> 00:33:36,000
they can do the work

00:33:32,480 --> 00:33:37,919
has helped us enormously and also led

00:33:36,000 --> 00:33:39,039
to the developer in residence position

00:33:37,919 --> 00:33:40,880
right now because

00:33:39,039 --> 00:33:42,480
without the work that they had done in

00:33:40,880 --> 00:33:43,440
the packaging work group and the work on

00:33:42,480 --> 00:33:45,519
pipi

00:33:43,440 --> 00:33:47,279
the psf probably wouldn't have been able

00:33:45,519 --> 00:33:49,600
to sell the developer in residence

00:33:47,279 --> 00:33:52,799
position as we have it right now

00:33:49,600 --> 00:33:53,279
so really it is not really a mess it

00:33:52,799 --> 00:33:57,039
just

00:33:53,279 --> 00:33:57,039
requires even more improvement

00:34:01,360 --> 00:34:05,200
i guess if there's uh nobody else wants

00:34:03,519 --> 00:34:08,480
to say anything about packaging

00:34:05,200 --> 00:34:11,679
um the next set of questions

00:34:08,480 --> 00:34:13,119
are related to sort of the functional

00:34:11,679 --> 00:34:16,000
areas of

00:34:13,119 --> 00:34:18,079
sort of how the steering council works

00:34:16,000 --> 00:34:20,480
i'll just read a few of the questions

00:34:18,079 --> 00:34:22,960
um you know how does one join the

00:34:20,480 --> 00:34:24,639
steering council what's the process

00:34:22,960 --> 00:34:26,000
uh what does being in the steering

00:34:24,639 --> 00:34:27,839
council actually mean

00:34:26,000 --> 00:34:29,359
what are your daily weekly tasks as a

00:34:27,839 --> 00:34:31,520
steering council member

00:34:29,359 --> 00:34:32,879
did joining the steering council change

00:34:31,520 --> 00:34:35,119
anything in your career

00:34:32,879 --> 00:34:36,879
i'm sure we all have uh feedback i'll

00:34:35,119 --> 00:34:37,919
say the only thing it changed in my

00:34:36,879 --> 00:34:39,440
career is like i get

00:34:37,919 --> 00:34:41,359
out of some work meetings which is

00:34:39,440 --> 00:34:45,119
awesome um

00:34:41,359 --> 00:34:47,200
you know we pep 13

00:34:45,119 --> 00:34:49,359
is the governance sort of the

00:34:47,200 --> 00:34:52,720
constitution of the steering council

00:34:49,359 --> 00:34:56,000
and that outlines how voting happens

00:34:52,720 --> 00:34:58,320
um you know you can read that

00:34:56,000 --> 00:35:00,480
pep for all the details but essentially

00:34:58,320 --> 00:35:02,480
what happens is the

00:35:00,480 --> 00:35:03,680
elections for the steering council are

00:35:02,480 --> 00:35:06,720
tied uh

00:35:03,680 --> 00:35:07,119
to the annual release process of python

00:35:06,720 --> 00:35:09,920
of c

00:35:07,119 --> 00:35:10,720
python so you know see python gets

00:35:09,920 --> 00:35:13,200
released

00:35:10,720 --> 00:35:14,640
uh there's a period of time in which uh

00:35:13,200 --> 00:35:16,160
nominations are open

00:35:14,640 --> 00:35:18,400
and people can nominate other people you

00:35:16,160 --> 00:35:20,079
can nominate yourself and then once

00:35:18,400 --> 00:35:23,200
nominations close there's a period of

00:35:20,079 --> 00:35:26,480
time in which voting occurs

00:35:23,200 --> 00:35:28,800
core developers are the ones who get to

00:35:26,480 --> 00:35:30,400
elect the steering council members but

00:35:28,800 --> 00:35:34,079
you don't actually have to be a core

00:35:30,400 --> 00:35:34,079
developer to be on the steering council

00:35:34,480 --> 00:35:37,760
as far as sort of like how it works for

00:35:36,720 --> 00:35:39,839
us

00:35:37,760 --> 00:35:40,960
everybody's probably a little different

00:35:39,839 --> 00:35:44,640
we meet

00:35:40,960 --> 00:35:46,400
on mondays uh i won't say monday

00:35:44,640 --> 00:35:47,920
mornings or monday afternoons because

00:35:46,400 --> 00:35:50,000
that's different for all of us

00:35:47,920 --> 00:35:51,440
but we generally once we sort of

00:35:50,000 --> 00:35:53,839
constitute the new

00:35:51,440 --> 00:35:56,160
edition of the steering council we we

00:35:53,839 --> 00:35:58,560
find a time that works for everybody

00:35:56,160 --> 00:35:59,920
uh we're currently meeting on slack you

00:35:58,560 --> 00:36:02,960
know we have a slack uh

00:35:59,920 --> 00:36:05,920
uh channel that we we talk on um

00:36:02,960 --> 00:36:06,640
and then once we meet uh you know in

00:36:05,920 --> 00:36:09,200
person

00:36:06,640 --> 00:36:10,880
well sort of in person you know over

00:36:09,200 --> 00:36:13,760
over video conferencing

00:36:10,880 --> 00:36:14,160
um for an hour a week and that's usually

00:36:13,760 --> 00:36:15,920
when

00:36:14,160 --> 00:36:18,480
we'll we'll have an agenda we'll talk

00:36:15,920 --> 00:36:21,920
about any peps that are open

00:36:18,480 --> 00:36:22,880
uh we'll fortunately that this hasn't

00:36:21,920 --> 00:36:24,240
been a lot

00:36:22,880 --> 00:36:26,320
it's been a little while since we've had

00:36:24,240 --> 00:36:28,000
to do this but we we have had to do this

00:36:26,320 --> 00:36:30,079
a few times during this

00:36:28,000 --> 00:36:31,040
uh steering council you know dealing

00:36:30,079 --> 00:36:33,280
with uh

00:36:31,040 --> 00:36:34,240
conduct uh violations and things like

00:36:33,280 --> 00:36:36,400
that um

00:36:34,240 --> 00:36:38,560
those are those that's part of uh you

00:36:36,400 --> 00:36:39,760
know our responsibilities as a steering

00:36:38,560 --> 00:36:42,320
council

00:36:39,760 --> 00:36:43,839
you know we all do pre-reads of peps and

00:36:42,320 --> 00:36:45,280
we come up with questions and then we

00:36:43,839 --> 00:36:47,040
discuss those and

00:36:45,280 --> 00:36:48,720
sometimes we get to all of our agenda

00:36:47,040 --> 00:36:51,280
items and other times we

00:36:48,720 --> 00:36:52,079
we only get to one or two and then we'll

00:36:51,280 --> 00:36:55,520
generally

00:36:52,079 --> 00:36:56,880
go offline to sort of work out how we're

00:36:55,520 --> 00:36:59,040
going to communicate

00:36:56,880 --> 00:37:00,400
our decisions in other words if we're

00:36:59,040 --> 00:37:03,119
going to

00:37:00,400 --> 00:37:03,680
ask pep authors for more information we

00:37:03,119 --> 00:37:06,720
might

00:37:03,680 --> 00:37:09,200
work on a google doc that you know

00:37:06,720 --> 00:37:09,920
outlines our questions uh and requests

00:37:09,200 --> 00:37:13,680
of those pep

00:37:09,920 --> 00:37:15,680
authors generally will sort of assign if

00:37:13,680 --> 00:37:16,800
it's just an acceptance of a pep we'll

00:37:15,680 --> 00:37:18,160
just assign that

00:37:16,800 --> 00:37:19,760
you know somebody will volunteer to

00:37:18,160 --> 00:37:20,640
write the acceptance or the rejection

00:37:19,760 --> 00:37:22,880
notice

00:37:20,640 --> 00:37:24,160
of a pet and that's that's how we work

00:37:22,880 --> 00:37:27,359
we i i

00:37:24,160 --> 00:37:30,160
do want to take this opportunity to uh

00:37:27,359 --> 00:37:31,680
mention eva who from the psf who

00:37:30,160 --> 00:37:32,400
generally joins every one of our

00:37:31,680 --> 00:37:36,640
meetings and

00:37:32,400 --> 00:37:39,599
is amazingly she's amazing

00:37:36,640 --> 00:37:41,440
as a person but also incredibly helpful

00:37:39,599 --> 00:37:44,320
to the steering council

00:37:41,440 --> 00:37:46,160
and it it also sort of helps the

00:37:44,320 --> 00:37:46,960
steering council and the psf work

00:37:46,160 --> 00:37:49,760
together

00:37:46,960 --> 00:37:50,800
in the areas where our interests are

00:37:49,760 --> 00:37:53,359
overlap

00:37:50,800 --> 00:37:54,480
so i think that's kind of all i'll say

00:37:53,359 --> 00:37:55,760
i've been

00:37:54,480 --> 00:37:57,760
speaking for a few minutes and i'll just

00:37:55,760 --> 00:38:00,800
open it up to other people and

00:37:57,760 --> 00:38:04,480
give them a chance to also chime in

00:38:00,800 --> 00:38:07,440
yeah i'm gonna jump in just briefly and

00:38:04,480 --> 00:38:08,560
you know unlike writing code and

00:38:07,440 --> 00:38:11,520
creating

00:38:08,560 --> 00:38:13,599
you know libraries and things like that

00:38:11,520 --> 00:38:16,000
the steering council actually serves

00:38:13,599 --> 00:38:16,720
a very different purpose and that

00:38:16,000 --> 00:38:19,839
purpose

00:38:16,720 --> 00:38:22,240
is to avoid missteps that

00:38:19,839 --> 00:38:23,760
other communities have had by having

00:38:22,240 --> 00:38:27,040
weak governance

00:38:23,760 --> 00:38:28,240
and by having an articulated governance

00:38:27,040 --> 00:38:32,000
that we came up with

00:38:28,240 --> 00:38:34,640
together in pet 13 and

00:38:32,000 --> 00:38:36,960
have a process for onboarding new

00:38:34,640 --> 00:38:39,119
steering council members for making sure

00:38:36,960 --> 00:38:43,280
our meetings run smoothly

00:38:39,119 --> 00:38:46,079
and um i agree with barry eva brings

00:38:43,280 --> 00:38:47,040
so much to the relationships with the

00:38:46,079 --> 00:38:49,920
psf

00:38:47,040 --> 00:38:51,119
and you know as well as you know

00:38:49,920 --> 00:38:54,400
companies that

00:38:51,119 --> 00:38:57,839
might potentially want to foster

00:38:54,400 --> 00:39:01,520
a future growth of python and so

00:38:57,839 --> 00:39:03,920
if you don't like governance work or

00:39:01,520 --> 00:39:04,560
you know meetings and agendas and that

00:39:03,920 --> 00:39:06,960
sort of thing

00:39:04,560 --> 00:39:07,680
the steering council might be for you

00:39:06,960 --> 00:39:11,040
and

00:39:07,680 --> 00:39:11,520
go code do all of that stuff but if you

00:39:11,040 --> 00:39:14,560
have an

00:39:11,520 --> 00:39:16,240
interest in sort of shaping what the

00:39:14,560 --> 00:39:20,079
core developer community

00:39:16,240 --> 00:39:22,400
is in terms of its culture in terms of

00:39:20,079 --> 00:39:23,359
its direction then by all means i

00:39:22,400 --> 00:39:27,599
encourage you

00:39:23,359 --> 00:39:29,440
to apply as a syrian council member

00:39:27,599 --> 00:39:30,640
and does anybody else have anything

00:39:29,440 --> 00:39:33,839
thomas is smiling

00:39:30,640 --> 00:39:36,560
so no no i'm just i

00:39:33,839 --> 00:39:39,040
i wholeheartedly agree with everything

00:39:36,560 --> 00:39:39,040
you said

00:39:39,359 --> 00:39:43,440
i was just wondering if it was a sub

00:39:41,359 --> 00:39:45,599
tweet of you know

00:39:43,440 --> 00:39:47,280
certain other communities but let's not

00:39:45,599 --> 00:39:49,520
go there

00:39:47,280 --> 00:39:51,920
well it is a little timely right now but

00:39:49,520 --> 00:39:54,400
i mean the truth of the matter is

00:39:51,920 --> 00:39:56,000
we faced a big hurdle when guido stepped

00:39:54,400 --> 00:39:58,480
down as bdfl

00:39:56,000 --> 00:40:00,560
and i couldn't be more proud of the

00:39:58,480 --> 00:40:03,040
entire core development community

00:40:00,560 --> 00:40:04,160
in how we came up with the new

00:40:03,040 --> 00:40:07,839
governance how we

00:40:04,160 --> 00:40:09,440
implemented it and how it has evolved

00:40:07,839 --> 00:40:12,480
over the last three

00:40:09,440 --> 00:40:15,440
terms has been really awesome

00:40:12,480 --> 00:40:16,960
and i'm just excited to see what happens

00:40:15,440 --> 00:40:20,800
five years from now

00:40:16,960 --> 00:40:22,720
but um if anybody has some other stuff

00:40:20,800 --> 00:40:24,319
please chime in otherwise i will move on

00:40:22,720 --> 00:40:27,359
to the next question which should be a

00:40:24,319 --> 00:40:27,359
very short question

00:40:27,920 --> 00:40:30,960
okay so the question that got submitted

00:40:30,480 --> 00:40:34,400
was

00:40:30,960 --> 00:40:35,520
will tkenter ever have official

00:40:34,400 --> 00:40:37,839
documentation

00:40:35,520 --> 00:40:39,040
and the reality is it has official

00:40:37,839 --> 00:40:40,800
documentation

00:40:39,040 --> 00:40:42,640
i'm sure the documentation could be

00:40:40,800 --> 00:40:44,560
improved but i don't know of any core

00:40:42,640 --> 00:40:45,200
developers that are actively working on

00:40:44,560 --> 00:40:48,000
it

00:40:45,200 --> 00:40:50,160
so if you're a community member remember

00:40:48,000 --> 00:40:53,119
patches are welcome

00:40:50,160 --> 00:40:54,240
also we are start have started a

00:40:53,119 --> 00:40:56,800
documentation

00:40:54,240 --> 00:40:59,040
work group which um we will share more

00:40:56,800 --> 00:41:01,200
details about with the community

00:40:59,040 --> 00:41:02,319
um the charter is public and there's

00:41:01,200 --> 00:41:05,119
some messages on

00:41:02,319 --> 00:41:06,800
discourse in the mailing list but um

00:41:05,119 --> 00:41:08,720
basically what we want to do

00:41:06,800 --> 00:41:10,640
looking at the next five years going

00:41:08,720 --> 00:41:13,520
forward is

00:41:10,640 --> 00:41:14,640
how can we improve education at all

00:41:13,520 --> 00:41:17,119
levels

00:41:14,640 --> 00:41:19,520
through python's documentation how do we

00:41:17,119 --> 00:41:22,560
increase the productivity of everybody

00:41:19,520 --> 00:41:25,280
and also deal with the fact that python

00:41:22,560 --> 00:41:27,760
is a global language how do we adapt

00:41:25,280 --> 00:41:28,640
our documentation to best serve our

00:41:27,760 --> 00:41:31,920
users

00:41:28,640 --> 00:41:36,240
and with that the folks don't have

00:41:31,920 --> 00:41:36,240
other stuff i will turn it over to pablo

00:41:36,640 --> 00:41:40,240
so the the next question is two

00:41:38,480 --> 00:41:41,680
questions together um so it's about

00:41:40,240 --> 00:41:43,599
contributing to c python

00:41:41,680 --> 00:41:45,200
um so one question says like how can i

00:41:43,599 --> 00:41:47,280
better continue to see python

00:41:45,200 --> 00:41:49,200
um i have to describe the scroll the

00:41:47,280 --> 00:41:50,640
back tracker but most usually stall i'm

00:41:49,200 --> 00:41:52,000
waiting for a preview

00:41:50,640 --> 00:41:53,680
uh and the other question that i

00:41:52,000 --> 00:41:55,440
mentioned to this one says

00:41:53,680 --> 00:41:57,119
does the c have any plans to address the

00:41:55,440 --> 00:41:59,359
pr backlog so actually as you

00:41:57,119 --> 00:42:00,160
heard probably like some minutes ago we

00:41:59,359 --> 00:42:02,319
have

00:42:00,160 --> 00:42:03,359
um this is a quite a big challenging

00:42:02,319 --> 00:42:05,280
thing like we cannot

00:42:03,359 --> 00:42:07,520
we cannot just magically make disappear

00:42:05,280 --> 00:42:10,079
1500 people request as you may

00:42:07,520 --> 00:42:11,520
uh understand but now with the developer

00:42:10,079 --> 00:42:13,920
interested in position

00:42:11,520 --> 00:42:16,079
um we hope that to make this situation

00:42:13,920 --> 00:42:17,599
better not maybe directly addressing

00:42:16,079 --> 00:42:19,200
all the peers like we cannot hire one

00:42:17,599 --> 00:42:20,720
person which is an expert on all our

00:42:19,200 --> 00:42:21,760
associate python that can magically

00:42:20,720 --> 00:42:24,000
review this thing

00:42:21,760 --> 00:42:25,520
probably will cost more than whatever we

00:42:24,000 --> 00:42:27,760
pay him for the position

00:42:25,520 --> 00:42:28,960
but probably to make sure that we have

00:42:27,760 --> 00:42:31,680
better processes

00:42:28,960 --> 00:42:32,160
or better ways for these peers to to get

00:42:31,680 --> 00:42:34,560
merged

00:42:32,160 --> 00:42:35,520
and reviewed think also that um the

00:42:34,560 --> 00:42:37,280
python i mean

00:42:35,520 --> 00:42:39,440
this this may sound like an excuse but

00:42:37,280 --> 00:42:42,000
uh like believe me that is not like the

00:42:39,440 --> 00:42:44,319
c python chord team is quite a

00:42:42,000 --> 00:42:45,280
very restricted group of people and

00:42:44,319 --> 00:42:47,200
shepard has

00:42:45,280 --> 00:42:48,400
many many many different things like you

00:42:47,200 --> 00:42:50,240
know there is called for many different

00:42:48,400 --> 00:42:51,520
platforms many different areas

00:42:50,240 --> 00:42:53,520
there is interpreter the standard

00:42:51,520 --> 00:42:55,280
library which is also very big so it's

00:42:53,520 --> 00:42:57,200
not only amount of like

00:42:55,280 --> 00:42:59,359
there is prs and nobody's reviewing them

00:42:57,200 --> 00:43:01,359
like maybe what happens is that you

00:42:59,359 --> 00:43:02,880
are contributing to an area that you

00:43:01,359 --> 00:43:04,480
know maybe doesn't have a maintainer so

00:43:02,880 --> 00:43:05,040
maybe there is a good opportunity to

00:43:04,480 --> 00:43:06,319
also

00:43:05,040 --> 00:43:08,319
you know search for a maintainer there

00:43:06,319 --> 00:43:10,480
or maybe become your maintainer like by

00:43:08,319 --> 00:43:13,760
becoming a core developer for that

00:43:10,480 --> 00:43:14,560
we have um the mentorship mailing list

00:43:13,760 --> 00:43:16,960
when you can

00:43:14,560 --> 00:43:18,240
reach to us for if you want to become a

00:43:16,960 --> 00:43:21,119
core developer so you can

00:43:18,240 --> 00:43:21,520
have a mentor and there is a process

00:43:21,119 --> 00:43:24,640
there

00:43:21,520 --> 00:43:25,040
um and we are always looking for ways to

00:43:24,640 --> 00:43:28,240
know

00:43:25,040 --> 00:43:29,839
which areas of the python code base need

00:43:28,240 --> 00:43:30,400
more maintenance and care for instance

00:43:29,839 --> 00:43:32,480
one of the

00:43:30,400 --> 00:43:34,079
roles that we want this person the

00:43:32,480 --> 00:43:34,880
developer interested in positions to

00:43:34,079 --> 00:43:36,480
investigate

00:43:34,880 --> 00:43:38,880
is precisely what kind of areas don't

00:43:36,480 --> 00:43:40,960
get from use that happens and because c

00:43:38,880 --> 00:43:43,119
python is that big isn't very

00:43:40,960 --> 00:43:44,640
easy to know what when that is happening

00:43:43,119 --> 00:43:46,720
or because you know maybe

00:43:44,640 --> 00:43:48,480
that area like imagine security just

00:43:46,720 --> 00:43:50,880
requires more time because you know it

00:43:48,480 --> 00:43:52,640
needs more careful review to those pr's

00:43:50,880 --> 00:43:54,319
or because it's the interpreter and it's

00:43:52,640 --> 00:43:55,920
you know it's a part that touches a lot

00:43:54,319 --> 00:43:57,280
of things and it's just a slower process

00:43:55,920 --> 00:43:58,880
so understanding these things is

00:43:57,280 --> 00:44:00,720
something that we want to do

00:43:58,880 --> 00:44:02,000
and we are looking for it we understand

00:44:00,720 --> 00:44:02,960
that this is challenging this thing see

00:44:02,000 --> 00:44:05,040
python is a big

00:44:02,960 --> 00:44:07,200
big project and it's an old one so it's

00:44:05,040 --> 00:44:09,280
probably not the easiest and best

00:44:07,200 --> 00:44:13,040
experience to contribute to open source

00:44:09,280 --> 00:44:13,040
but we are trying to do our best

00:44:15,280 --> 00:44:20,240
and no one wants to say anything i think

00:44:18,400 --> 00:44:21,760
thomas will do the next question and

00:44:20,240 --> 00:44:25,359
carol

00:44:21,760 --> 00:44:27,520
uh yeah the next question uh is a little

00:44:25,359 --> 00:44:30,000
bit of a different question

00:44:27,520 --> 00:44:31,920
the original question is uh political

00:44:30,000 --> 00:44:33,599
correctness is good but can it be

00:44:31,920 --> 00:44:36,000
overdone

00:44:33,599 --> 00:44:36,720
now since this is in the steering

00:44:36,000 --> 00:44:40,160
council q

00:44:36,720 --> 00:44:42,000
a i assume this alludes to

00:44:40,160 --> 00:44:43,520
one of the things we've done in the the

00:44:42,000 --> 00:44:46,240
last two years to do

00:44:43,520 --> 00:44:47,200
with code of conduct enforcement we

00:44:46,240 --> 00:44:48,800
banned

00:44:47,200 --> 00:44:50,560
a couple of people for shorter for

00:44:48,800 --> 00:44:53,760
longer terms

00:44:50,560 --> 00:44:56,000
or maybe it is in reference to our

00:44:53,760 --> 00:44:57,200
decision to rename the master branch

00:44:56,000 --> 00:44:59,040
domain

00:44:57,200 --> 00:45:01,520
following many many other open source

00:44:59,040 --> 00:45:04,319
projects that have already done this

00:45:01,520 --> 00:45:05,680
or the warning we sent to everyone on

00:45:04,319 --> 00:45:08,160
python dev about

00:45:05,680 --> 00:45:10,000
conduct in core developer spaces

00:45:08,160 --> 00:45:12,400
following the discussion about master

00:45:10,000 --> 00:45:12,400
and maine

00:45:13,040 --> 00:45:19,839
this is one of the areas that are

00:45:16,720 --> 00:45:20,800
less pleasant to work on as a steering

00:45:19,839 --> 00:45:24,640
council but

00:45:20,800 --> 00:45:27,040
absolutely critical because we need the

00:45:24,640 --> 00:45:27,760
developer community to be open and

00:45:27,040 --> 00:45:31,599
inclusive

00:45:27,760 --> 00:45:32,640
if we want python to survive 20 34 years

00:45:31,599 --> 00:45:35,280
from now

00:45:32,640 --> 00:45:37,040
because people do retire and we need

00:45:35,280 --> 00:45:40,480
more people

00:45:37,040 --> 00:45:43,920
we didn't decide these things out of

00:45:40,480 --> 00:45:47,760
political correctness as such um

00:45:43,920 --> 00:45:49,680
we did them because there is a certain

00:45:47,760 --> 00:45:50,880
uh community we want to foster a certain

00:45:49,680 --> 00:45:53,760
attitude we want to foster

00:45:50,880 --> 00:45:55,680
it's it's an attitude it's community we

00:45:53,760 --> 00:45:58,160
want to work in ourselves

00:45:55,680 --> 00:45:59,680
but we also know that it's more open

00:45:58,160 --> 00:46:03,359
easier for people to

00:45:59,680 --> 00:46:06,800
to join uh if they're if the

00:46:03,359 --> 00:46:07,839
negative interactions are uh reduced or

00:46:06,800 --> 00:46:10,800
predictable

00:46:07,839 --> 00:46:11,839
or easily dealt with if if people can

00:46:10,800 --> 00:46:13,520
rely

00:46:11,839 --> 00:46:15,359
on things like code of conduct being

00:46:13,520 --> 00:46:19,200
enforced

00:46:15,359 --> 00:46:22,319
um i'm not sure what overdoing it

00:46:19,200 --> 00:46:23,599
in that sense uh would look like we're

00:46:22,319 --> 00:46:25,839
not losing anything

00:46:23,599 --> 00:46:28,240
by trying to be inviting or to encourage

00:46:25,839 --> 00:46:30,079
people to listen to other people

00:46:28,240 --> 00:46:32,640
we're not losing anything by asking

00:46:30,079 --> 00:46:34,480
people to not belittle or ridicule or

00:46:32,640 --> 00:46:36,400
abuse other people

00:46:34,480 --> 00:46:37,760
so that is sort of the extent to what

00:46:36,400 --> 00:46:40,640
we've

00:46:37,760 --> 00:46:40,640
done i believe

00:46:41,040 --> 00:46:44,079
perhaps political correctness could be

00:46:42,880 --> 00:46:46,319
overdone i mean

00:46:44,079 --> 00:46:48,319
everything can be overdone uh you can

00:46:46,319 --> 00:46:49,680
die from water poisoning by drinking too

00:46:48,319 --> 00:46:51,920
much water

00:46:49,680 --> 00:46:53,040
we're still encouraging people to drink

00:46:51,920 --> 00:46:55,599
water regularly

00:46:53,040 --> 00:46:57,760
and we're not worried about people dying

00:46:55,599 --> 00:46:59,839
because they drink too much water

00:46:57,760 --> 00:47:01,280
i am not going to worry about political

00:46:59,839 --> 00:47:03,119
correctness being overdone

00:47:01,280 --> 00:47:04,720
until we're absolutely drowning in

00:47:03,119 --> 00:47:08,480
positive contributions

00:47:04,720 --> 00:47:08,480
from every possible source in the world

00:47:09,680 --> 00:47:14,000
yeah and i just like to jump in and and

00:47:12,800 --> 00:47:16,960
say a few things

00:47:14,000 --> 00:47:17,680
the python core development community

00:47:16,960 --> 00:47:20,720
that

00:47:17,680 --> 00:47:24,400
i started looking at back in

00:47:20,720 --> 00:47:26,480
2014 is very different than

00:47:24,400 --> 00:47:28,640
the core development community that we

00:47:26,480 --> 00:47:30,880
have now in 2021.

00:47:28,640 --> 00:47:32,000
it's not perfect there's still lots of

00:47:30,880 --> 00:47:35,040
places to go

00:47:32,000 --> 00:47:38,319
um and you know the psf's mission

00:47:35,040 --> 00:47:40,880
is to globally um you know

00:47:38,319 --> 00:47:42,160
encourage people to use and contribute

00:47:40,880 --> 00:47:45,280
to python

00:47:42,160 --> 00:47:49,359
and the term political correctness

00:47:45,280 --> 00:47:49,359
also often gets um

00:47:49,920 --> 00:47:54,800
tossed about when people say

00:47:53,119 --> 00:47:57,520
don't want to directly say you don't

00:47:54,800 --> 00:48:00,880
agree with me so therefore you're wrong

00:47:57,520 --> 00:48:04,559
and what i would say

00:48:00,880 --> 00:48:08,079
to those folks are look at the people

00:48:04,559 --> 00:48:11,760
who haven't been included traditionally

00:48:08,079 --> 00:48:15,200
in the community who perhaps have been

00:48:11,760 --> 00:48:16,079
quiet and haven't participated and take

00:48:15,200 --> 00:48:19,760
a long look

00:48:16,079 --> 00:48:22,640
and ask yourself why um

00:48:19,760 --> 00:48:23,440
here's a language that can do amazing

00:48:22,640 --> 00:48:26,240
things

00:48:23,440 --> 00:48:27,280
in many different spaces in the world

00:48:26,240 --> 00:48:30,720
the community

00:48:27,280 --> 00:48:33,280
should reflect the power of the language

00:48:30,720 --> 00:48:34,559
and the ability for it to be used by

00:48:33,280 --> 00:48:38,240
many people

00:48:34,559 --> 00:48:40,079
so um i i'm really proud of

00:48:38,240 --> 00:48:42,559
the direction the language is going the

00:48:40,079 --> 00:48:49,839
core development community is going and

00:48:42,559 --> 00:48:49,839
also the opportunities for the future

00:48:52,559 --> 00:48:56,480
and i probably should have tossed it

00:48:53,920 --> 00:48:57,760
over to myself because the next question

00:48:56,480 --> 00:49:01,760
if nobody else has any

00:48:57,760 --> 00:49:02,160
uh additions to political correctness is

00:49:01,760 --> 00:49:05,119
uh

00:49:02,160 --> 00:49:06,559
what would happen to abandon the 3.x

00:49:05,119 --> 00:49:09,839
version numbering

00:49:06,559 --> 00:49:14,319
and one go to 4.0 or 2

00:49:09,839 --> 00:49:16,640
go the java way 310 311 312 313.

00:49:14,319 --> 00:49:19,200
well first and foremost i hope we get to

00:49:16,640 --> 00:49:22,480
314 because then python could be pi

00:49:19,200 --> 00:49:25,839
and that would be super cool um but

00:49:22,480 --> 00:49:27,839
in a more serious manner

00:49:25,839 --> 00:49:29,200
probably it would be some fundamental

00:49:27,839 --> 00:49:32,880
change at the

00:49:29,200 --> 00:49:35,760
capi level perhaps hypothetically

00:49:32,880 --> 00:49:38,400
adopting hpi entirely and breaking away

00:49:35,760 --> 00:49:41,440
from the currency python capi

00:49:38,400 --> 00:49:44,559
but it would have to be a pretty

00:49:41,440 --> 00:49:47,920
groundbreaking change um

00:49:44,559 --> 00:49:50,079
for it for us to want to go to 4.0

00:49:47,920 --> 00:49:53,200
and i think thomas and others might have

00:49:50,079 --> 00:49:56,319
had some comments on this as well

00:49:53,200 --> 00:49:58,720
well i i think it's important to uh

00:49:56,319 --> 00:50:01,119
clarify i think krito mentioned this

00:49:58,720 --> 00:50:03,680
when he was still bdfl as well

00:50:01,119 --> 00:50:06,000
uh the python 3.0 migration is not

00:50:03,680 --> 00:50:08,880
something we want to do again

00:50:06,000 --> 00:50:10,000
so if there is going to be a python 4.0

00:50:08,880 --> 00:50:13,119
it will not be

00:50:10,000 --> 00:50:14,000
like python 3.0 was after python 2.6 or

00:50:13,119 --> 00:50:15,920
2.7

00:50:14,000 --> 00:50:17,599
however you want to look at it it is

00:50:15,920 --> 00:50:18,720
never going to be that kind of breaking

00:50:17,599 --> 00:50:21,839
change again

00:50:18,720 --> 00:50:24,559
because it is clearly been a mistake we

00:50:21,839 --> 00:50:25,680
we're over it now we even at google

00:50:24,559 --> 00:50:29,040
we're nearly done

00:50:25,680 --> 00:50:33,599
moving away from python 2

00:50:29,040 --> 00:50:36,800
but we don't want to do it again so 4.0

00:50:33,599 --> 00:50:39,119
it may be like carol said

00:50:36,800 --> 00:50:41,440
a breaking change in the c api but it'll

00:50:39,119 --> 00:50:43,760
be slow and deliberate and there will be

00:50:41,440 --> 00:50:47,119
a good migration path regardless of the

00:50:43,760 --> 00:50:47,119
reason of a 4.0

00:50:50,800 --> 00:50:54,800
all right well i think that slides into

00:50:52,800 --> 00:50:58,079
the next question which i'm tackling

00:50:54,800 --> 00:51:00,160
uh and the question was from pyton33

00:50:58,079 --> 00:51:01,760
will match case syntax have any

00:51:00,160 --> 00:51:02,480
performance advantage compared to

00:51:01,760 --> 00:51:06,000
traditional

00:51:02,480 --> 00:51:07,280
flip chains uh

00:51:06,000 --> 00:51:10,240
i want to answer this in a slightly

00:51:07,280 --> 00:51:13,200
funny way and not tell you

00:51:10,240 --> 00:51:13,920
now the the reason uh i'm taking this

00:51:13,200 --> 00:51:16,720
approach

00:51:13,920 --> 00:51:17,440
is a very key thing about this pattern

00:51:16,720 --> 00:51:21,040
matching

00:51:17,440 --> 00:51:23,200
uh syntax that is coming in python 3.10

00:51:21,040 --> 00:51:25,200
is it's there to try to make people more

00:51:23,200 --> 00:51:27,359
productive in certain situations

00:51:25,200 --> 00:51:28,319
when it's called for it really shouldn't

00:51:27,359 --> 00:51:31,200
be viewed

00:51:28,319 --> 00:51:32,800
as a potential performance improvement

00:51:31,200 --> 00:51:34,880
it's meant to be viewed as a potential

00:51:32,800 --> 00:51:38,240
productivity improvement

00:51:34,880 --> 00:51:41,839
so if using uh pattern matching to do

00:51:38,240 --> 00:51:43,760
uh structural um checks of

00:51:41,839 --> 00:51:45,119
something makes more sense than doing a

00:51:43,760 --> 00:51:47,440
value check

00:51:45,119 --> 00:51:48,960
then go ahead and use it but i wouldn't

00:51:47,440 --> 00:51:50,319
say that you should be looking at this

00:51:48,960 --> 00:51:50,960
new syntax from a performance

00:51:50,319 --> 00:51:52,480
perspective

00:51:50,960 --> 00:51:54,000
it really should be viewed more from a

00:51:52,480 --> 00:51:54,480
readability perspective and whichever

00:51:54,000 --> 00:51:56,160
one

00:51:54,480 --> 00:51:57,920
reads best for your code is the one you

00:51:56,160 --> 00:51:58,640
should go with and in general this is

00:51:57,920 --> 00:52:00,319
kind of

00:51:58,640 --> 00:52:02,559
the approach that we take when we make

00:52:00,319 --> 00:52:04,079
decisions without specifically speaking

00:52:02,559 --> 00:52:06,160
for everyone

00:52:04,079 --> 00:52:08,400
we view python's goal is to try to make

00:52:06,160 --> 00:52:10,880
you as productive as possible as

00:52:08,400 --> 00:52:12,720
a developer and that ranges from both as

00:52:10,880 --> 00:52:15,359
a brand new person in education

00:52:12,720 --> 00:52:17,280
to a very seasoned person who's been

00:52:15,359 --> 00:52:18,960
doing this for decades

00:52:17,280 --> 00:52:20,400
and there are various trade-offs and

00:52:18,960 --> 00:52:22,240
various ways to do that and we

00:52:20,400 --> 00:52:24,240
tried to balance it so that everyone is

00:52:22,240 --> 00:52:25,839
at a good place

00:52:24,240 --> 00:52:27,440
but that means that we're not trying to

00:52:25,839 --> 00:52:29,200
optimize for performance

00:52:27,440 --> 00:52:30,559
up front when we make syntactic

00:52:29,200 --> 00:52:32,319
decisions like this as we've said

00:52:30,559 --> 00:52:34,160
multiple times in this presentation

00:52:32,319 --> 00:52:36,000
we definitely want to see performance

00:52:34,160 --> 00:52:36,720
continue to improve but we're not trying

00:52:36,000 --> 00:52:38,640
to introduce

00:52:36,720 --> 00:52:40,319
syntactic changes specifically just to

00:52:38,640 --> 00:52:41,599
try to optimize f and l

00:52:40,319 --> 00:52:43,599
for instance this is very much

00:52:41,599 --> 00:52:46,880
specifically done to try to optimize

00:52:43,599 --> 00:52:48,319
your ability to be productive also now

00:52:46,880 --> 00:52:50,640
that brother cannot hear us

00:52:48,319 --> 00:52:52,079
no it is not faster it needs to check

00:52:50,640 --> 00:52:54,800
all the branches at least in the first

00:52:52,079 --> 00:52:54,800
implementation

00:52:59,359 --> 00:53:03,200
uh i guess i'll i i'll take the next

00:53:01,520 --> 00:53:04,000
question and i'll try to do this quickly

00:53:03,200 --> 00:53:06,800
uh will

00:53:04,000 --> 00:53:08,640
the question is will python ever have

00:53:06,800 --> 00:53:11,200
static typing

00:53:08,640 --> 00:53:13,359
and i i guess i'll answer what i think

00:53:11,200 --> 00:53:16,400
the implicit question is which is

00:53:13,359 --> 00:53:19,440
well ever will python ever require

00:53:16,400 --> 00:53:20,640
uh static type annotations um and i

00:53:19,440 --> 00:53:22,559
think the answer

00:53:20,640 --> 00:53:23,920
well i know the answer is going to be no

00:53:22,559 --> 00:53:26,960
like none of us

00:53:23,920 --> 00:53:28,000
want to see that uh required what i

00:53:26,960 --> 00:53:31,280
think is interesting

00:53:28,000 --> 00:53:34,480
is that um you know personally i was

00:53:31,280 --> 00:53:37,760
pretty against static

00:53:34,480 --> 00:53:39,599
uh type annotations way early on

00:53:37,760 --> 00:53:41,119
uh and it's something that i've really

00:53:39,599 --> 00:53:44,319
come around to

00:53:41,119 --> 00:53:47,119
especially in use cases where

00:53:44,319 --> 00:53:47,440
um in a corporate environment where you

00:53:47,119 --> 00:53:50,000
have

00:53:47,440 --> 00:53:51,760
tons and tons of code and lots of new

00:53:50,000 --> 00:53:54,240
people coming in and coming out

00:53:51,760 --> 00:53:55,440
and you want to get them onboarded onto

00:53:54,240 --> 00:53:57,280
a particular code base

00:53:55,440 --> 00:53:58,640
very quickly i've also found it very

00:53:57,280 --> 00:54:00,880
useful for my own

00:53:58,640 --> 00:54:03,599
libraries that i maintain it's a great

00:54:00,880 --> 00:54:07,440
documentation tool

00:54:03,599 --> 00:54:08,480
but i also will always appreciate my

00:54:07,440 --> 00:54:10,480
first

00:54:08,480 --> 00:54:12,000
the first time i saw python code and it

00:54:10,480 --> 00:54:14,640
was just

00:54:12,000 --> 00:54:15,119
like from brain to fingers and working

00:54:14,640 --> 00:54:17,119
code

00:54:15,119 --> 00:54:19,200
so so quickly and easily whereas other

00:54:17,119 --> 00:54:20,720
languages have a lot of boilerplate and

00:54:19,200 --> 00:54:21,920
things like that so we we want to

00:54:20,720 --> 00:54:24,319
preserve

00:54:21,920 --> 00:54:26,400
this notion and i think it's actually

00:54:24,319 --> 00:54:29,599
worked for python pretty well where

00:54:26,400 --> 00:54:31,520
you can add type annotations if you want

00:54:29,599 --> 00:54:33,680
you don't have to you can just write

00:54:31,520 --> 00:54:35,599
python code as you know

00:54:33,680 --> 00:54:37,520
with dynamic typing as we've always done

00:54:35,599 --> 00:54:39,839
and it's perfectly great

00:54:37,520 --> 00:54:41,680
so uh i think that's going to be that's

00:54:39,839 --> 00:54:42,559
that's where python will always live in

00:54:41,680 --> 00:54:47,040
that sort of

00:54:42,559 --> 00:54:50,079
sweet spot of optional static typing

00:54:47,040 --> 00:54:52,559
somebody else want to uh

00:54:50,079 --> 00:54:53,200
bring that up okay uh i'll go with the

00:54:52,559 --> 00:54:56,880
next one

00:54:53,200 --> 00:54:58,319
um will uh with this utils officially on

00:54:56,880 --> 00:55:00,000
the deprecation track

00:54:58,319 --> 00:55:01,520
will tom will be brought into the

00:55:00,000 --> 00:55:02,400
standard library or will future

00:55:01,520 --> 00:55:06,480
packaging

00:55:02,400 --> 00:55:10,799
forever be based on multiple base rex

00:55:06,480 --> 00:55:12,720
um and uh the short answer is

00:55:10,799 --> 00:55:15,040
we don't know nobody's come to us and

00:55:12,720 --> 00:55:17,839
asked us formally to

00:55:15,040 --> 00:55:19,359
uh uh add thomas support to the live to

00:55:17,839 --> 00:55:21,599
the standard library

00:55:19,359 --> 00:55:22,400
so uh you know we're generally a

00:55:21,599 --> 00:55:24,640
reactive

00:55:22,400 --> 00:55:27,520
uh governing body and so we don't have

00:55:24,640 --> 00:55:27,520
anything to react to

00:55:27,680 --> 00:55:31,280
formally is the key here so nobody says

00:55:29,760 --> 00:55:32,880
that they have not run all this in

00:55:31,280 --> 00:55:36,319
twitter we are aware of the rants

00:55:32,880 --> 00:55:38,319
the the formerly now everybody's going

00:55:36,319 --> 00:55:40,079
to go out and write about i can just see

00:55:38,319 --> 00:55:43,359
it now

00:55:40,079 --> 00:55:45,119
so to put some very specific uh

00:55:43,359 --> 00:55:46,559
topical information on this so as the

00:55:45,119 --> 00:55:49,520
person who brought helped

00:55:46,559 --> 00:55:51,839
bring tommel to python packaging via as

00:55:49,520 --> 00:55:53,359
one of the co-authors of pep518

00:55:51,839 --> 00:55:55,280
uh i was actually planning to bring

00:55:53,359 --> 00:55:57,760
tommel uh formally

00:55:55,280 --> 00:55:58,559
forward for inclusion but due to time

00:55:57,760 --> 00:56:00,960
constraints

00:55:58,559 --> 00:56:03,280
uh that i personally had in trying to

00:56:00,960 --> 00:56:05,119
get things done for python 310

00:56:03,280 --> 00:56:07,440
both as a steering council member and as

00:56:05,119 --> 00:56:10,079
a core developer i wasn't able to do so

00:56:07,440 --> 00:56:11,520
uh but it's also led to it me trying to

00:56:10,079 --> 00:56:12,799
kick off a discussion that we'll be

00:56:11,520 --> 00:56:14,319
having at the language summit or at

00:56:12,799 --> 00:56:16,079
least that i'm going to try to

00:56:14,319 --> 00:56:17,200
cause to have at the language summit

00:56:16,079 --> 00:56:18,240
about what the future of the standard

00:56:17,200 --> 00:56:20,400
library is

00:56:18,240 --> 00:56:22,240
um because one of the funny things here

00:56:20,400 --> 00:56:25,359
with tomml is i've seen people

00:56:22,240 --> 00:56:26,400
come to me saying when's tumble being

00:56:25,359 --> 00:56:29,599
added

00:56:26,400 --> 00:56:30,000
does that mean that python is not as a

00:56:29,599 --> 00:56:32,160
language

00:56:30,000 --> 00:56:34,640
and as a community not taken to the new

00:56:32,160 --> 00:56:37,040
approach and directions of packaging

00:56:34,640 --> 00:56:38,000
seriously and the answer is no not at

00:56:37,040 --> 00:56:39,440
all uh

00:56:38,000 --> 00:56:40,720
as i've said earlier when i answer the

00:56:39,440 --> 00:56:42,000
question about packaging packaging is

00:56:40,720 --> 00:56:43,599
handled by a separate group they don't

00:56:42,000 --> 00:56:46,000
directly

00:56:43,599 --> 00:56:47,359
answer to us and we don't tell them what

00:56:46,000 --> 00:56:49,119
to do and so it's not a

00:56:47,359 --> 00:56:51,040
hey we want tom on the standard library

00:56:49,119 --> 00:56:52,000
at its and it's not the other way around

00:56:51,040 --> 00:56:54,160
where we say we

00:56:52,000 --> 00:56:55,119
here's the link here's the configuration

00:56:54,160 --> 00:56:59,200
language to use

00:56:55,119 --> 00:57:00,799
for packaging so as everyone has said no

00:56:59,200 --> 00:57:02,319
one's brought up for it officially

00:57:00,799 --> 00:57:04,960
partially because no one's being told

00:57:02,319 --> 00:57:06,480
but that doesn't mean it's not viewed as

00:57:04,960 --> 00:57:08,559
official or the way forward for the

00:57:06,480 --> 00:57:09,760
packaging world i do have plans to

00:57:08,559 --> 00:57:11,440
eventually bring it forward

00:57:09,760 --> 00:57:12,799
um there is a larger discussion though i

00:57:11,440 --> 00:57:14,720
think that we need to have as

00:57:12,799 --> 00:57:16,319
a development team of what we want the

00:57:14,720 --> 00:57:17,440
standard library to be

00:57:16,319 --> 00:57:19,839
because we've actually never had that

00:57:17,440 --> 00:57:21,359
discussion um it's going to be a very

00:57:19,839 --> 00:57:24,319
involved discussion it might be a very

00:57:21,359 --> 00:57:25,680
long discussion but eventually once that

00:57:24,319 --> 00:57:28,240
discussion is had

00:57:25,680 --> 00:57:29,440
and we as a group have decided what we

00:57:28,240 --> 00:57:31,119
want the future of the standard library

00:57:29,440 --> 00:57:31,839
to be and its themes and et cetera et

00:57:31,119 --> 00:57:34,400
cetera

00:57:31,839 --> 00:57:35,760
i will personally make sure that if

00:57:34,400 --> 00:57:36,640
bringing tunnel into the center library

00:57:35,760 --> 00:57:38,160
makes sense

00:57:36,640 --> 00:57:39,680
based on that outcome of that discussion

00:57:38,160 --> 00:57:42,160
it will be brought forward uh

00:57:39,680 --> 00:57:46,410
just no no promises of eta

00:57:42,160 --> 00:57:46,410
[Music]

00:57:47,760 --> 00:57:51,200
and with that i think we're about out of

00:57:49,760 --> 00:57:54,480
time we had a

00:57:51,200 --> 00:57:57,839
couple of more questions but they were

00:57:54,480 --> 00:57:59,520
not that interesting and i'll

00:57:57,839 --> 00:58:01,839
if people are worried i'll probably post

00:57:59,520 --> 00:58:04,319
an answer to them on twitter

00:58:01,839 --> 00:58:07,359
uh just to close the loop on for the

00:58:04,319 --> 00:58:11,760
people who ask those questions

00:58:07,359 --> 00:58:11,760
anyone have any other past thoughts

00:58:13,760 --> 00:58:20,240
well in that case uh thank you very much

00:58:16,799 --> 00:58:20,960
oh sorry i was just gonna thank

00:58:20,240 --> 00:58:23,359
everybody

00:58:20,960 --> 00:58:25,520
and in particular the core developers

00:58:23,359 --> 00:58:28,880
the rest of the securing council

00:58:25,520 --> 00:58:32,799
um eva and the folks at the psf

00:58:28,880 --> 00:58:35,839
who have supported us and most of all

00:58:32,799 --> 00:58:37,760
the many many users around the world the

00:58:35,839 --> 00:58:41,280
people who are running user groups

00:58:37,760 --> 00:58:44,240
meetups um you know conferences

00:58:41,280 --> 00:58:45,520
you are building the future of python

00:58:44,240 --> 00:58:48,640
one step at a time

00:58:45,520 --> 00:58:48,640
so thank you for that

00:58:48,960 --> 00:58:55,359
i'll just echo carol like python is your

00:58:52,559 --> 00:58:58,480
language and python is your community so

00:58:55,359 --> 00:58:59,760
get involved um no matter what area is

00:58:58,480 --> 00:59:01,599
interesting to you

00:58:59,760 --> 00:59:03,440
uh if you're a c programmer or you're

00:59:01,599 --> 00:59:04,960
not a c programmer it doesn't matter if

00:59:03,440 --> 00:59:07,920
you'd like to write documentation

00:59:04,960 --> 00:59:08,640
please come and help um like there are

00:59:07,920 --> 00:59:10,079
so many

00:59:08,640 --> 00:59:11,920
interesting things to be involved in

00:59:10,079 --> 00:59:14,160
python and um

00:59:11,920 --> 00:59:17,040
i encourage every single one of you to

00:59:14,160 --> 00:59:19,839
to get involved in whatever way

00:59:17,040 --> 00:59:19,839
satisfies you

00:59:21,920 --> 00:59:24,720
couldn't agree more

00:59:24,960 --> 00:59:28,240
i just hope we get to see everyone in

00:59:27,520 --> 00:59:32,240
person

00:59:28,240 --> 00:59:34,160
next year yeah yeah at least

00:59:32,240 --> 00:59:35,359
some people who want to travel to pycon

00:59:34,160 --> 00:59:36,880
us

00:59:35,359 --> 00:59:40,559
because that is something i've really

00:59:36,880 --> 00:59:40,559
missed in the last year and a half

00:59:41,200 --> 00:59:48,480
yeah and

00:59:46,000 --> 00:59:49,119
you for watching and i hope you all

00:59:48,480 --> 01:00:01,520
enjoy

00:59:49,119 --> 01:00:01,520

YouTube URL: https://www.youtube.com/watch?v=xEkuOtCQ6vA


