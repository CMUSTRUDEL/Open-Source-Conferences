Title: TALK   Alon Nir   Getting an Edge with Network Analysis with Python
Publication date: 2021-05-30
Playlist: PyCon US 2021
Description: 
	Networks are all around us. While Facebook and Twitter are the obvious examples, every time we shake hands, drive from point A to B, push code to github, check out a meetup or rate a show on IMDB, weâ€™re participating in network activity. People, places, things and even ideas are inter-connected in innumerable networks, and these can have a great (yet sometimes inconspicuous) impact on our lives.

The purpose of this talk is to introduce members of the audience to network analysis and its importance, and give them the basic building blocks for applied network analysis with Python.

Slides: https://github.com/alonnir/PyCon-Us-2021-Talk/
Captions: 
	00:00:04,170 --> 00:00:11,869
[Music]

00:00:15,759 --> 00:00:18,240
hi everyone

00:00:16,560 --> 00:00:20,160
thank you for joining today we'll be

00:00:18,240 --> 00:00:21,920
doing a quick introduction to network

00:00:20,160 --> 00:00:24,000
analysis in python

00:00:21,920 --> 00:00:25,119
before we get started a couple of words

00:00:24,000 --> 00:00:26,880
about myself

00:00:25,119 --> 00:00:29,119
my name is alon i'm a senior data

00:00:26,880 --> 00:00:30,800
scientist at spotify

00:00:29,119 --> 00:00:32,480
although nothing i showed today has

00:00:30,800 --> 00:00:33,360
anything to do with what i actually do

00:00:32,480 --> 00:00:35,600
with spotify

00:00:33,360 --> 00:00:37,120
um i've been given this talk even before

00:00:35,600 --> 00:00:39,280
joining the company

00:00:37,120 --> 00:00:40,320
um with that out of the way i'm

00:00:39,280 --> 00:00:42,559
london-based

00:00:40,320 --> 00:00:44,239
um this is what i usually look like when

00:00:42,559 --> 00:00:46,960
i don't have copied hair

00:00:44,239 --> 00:00:49,760
and sometimes i tweet interesting or

00:00:46,960 --> 00:00:51,920
funny things at all new on twitter

00:00:49,760 --> 00:00:54,160
what's the plan for today um we only

00:00:51,920 --> 00:00:56,640
have 25 minutes so that's really

00:00:54,160 --> 00:00:57,199
not a lot of time when you consider a

00:00:56,640 --> 00:00:59,039
topic

00:00:57,199 --> 00:01:00,399
so wide and so interesting is network

00:00:59,039 --> 00:01:02,719
analysis so

00:01:00,399 --> 00:01:03,760
the plan is to really cover the basics

00:01:02,719 --> 00:01:06,880
we'll introduce

00:01:03,760 --> 00:01:09,520
networks and network analysis um we'll

00:01:06,880 --> 00:01:10,320
cover the basic building blocks and

00:01:09,520 --> 00:01:12,960
really

00:01:10,320 --> 00:01:13,360
give a brief theoretical intro we'll

00:01:12,960 --> 00:01:16,560
then

00:01:13,360 --> 00:01:18,640
go uh into a python environment and

00:01:16,560 --> 00:01:20,400
do some hands-on walk and kind of

00:01:18,640 --> 00:01:22,960
introduce ourselves to

00:01:20,400 --> 00:01:23,840
more complicated and interesting um

00:01:22,960 --> 00:01:25,840
topics

00:01:23,840 --> 00:01:27,360
and finally we'll wrap up and discuss

00:01:25,840 --> 00:01:29,520
you know where you can go next and i

00:01:27,360 --> 00:01:31,360
even have a few homework assignments for

00:01:29,520 --> 00:01:34,880
those interested

00:01:31,360 --> 00:01:35,840
um just due to time constraints what we

00:01:34,880 --> 00:01:38,799
are not going to do

00:01:35,840 --> 00:01:40,240
is touch on very you know many many

00:01:38,799 --> 00:01:41,360
interesting things there is to learn

00:01:40,240 --> 00:01:43,439
unfortunately i

00:01:41,360 --> 00:01:45,840
you know i could go on for hours talking

00:01:43,439 --> 00:01:48,799
about all sorts of interesting

00:01:45,840 --> 00:01:50,560
findings and implica applications of

00:01:48,799 --> 00:01:52,079
network analysis but unfortunately we

00:01:50,560 --> 00:01:54,320
don't have the time for that

00:01:52,079 --> 00:01:56,479
we are not going to formalize it in any

00:01:54,320 --> 00:01:57,200
way and we are not going to look too

00:01:56,479 --> 00:01:59,280
much into

00:01:57,200 --> 00:02:00,960
like the theory or talk about how

00:01:59,280 --> 00:02:01,360
algorithms that calculate the certain

00:02:00,960 --> 00:02:04,399
thing

00:02:01,360 --> 00:02:08,479
actually work so what

00:02:04,399 --> 00:02:11,120
is a network and why should we care um

00:02:08,479 --> 00:02:14,239
my computer is a bit buggy today so i do

00:02:11,120 --> 00:02:17,760
apologize sometimes slides get stuck

00:02:14,239 --> 00:02:21,440
here we go in the very basic sense

00:02:17,760 --> 00:02:24,800
of uh of the concept

00:02:21,440 --> 00:02:25,360
networks are a collection of points and

00:02:24,800 --> 00:02:28,080
lines

00:02:25,360 --> 00:02:29,280
so if you can draw a conceptual

00:02:28,080 --> 00:02:31,040
relationship between

00:02:29,280 --> 00:02:32,560
any two things it doesn't have to be two

00:02:31,040 --> 00:02:35,599
people it could be

00:02:32,560 --> 00:02:38,400
uh two objects two entities to con

00:02:35,599 --> 00:02:39,120
concepts uh if you can draw a connection

00:02:38,400 --> 00:02:41,200
between them

00:02:39,120 --> 00:02:42,239
it's very likely you can model them as a

00:02:41,200 --> 00:02:44,959
network and then

00:02:42,239 --> 00:02:46,319
kind of unlock a lot of interesting

00:02:44,959 --> 00:02:49,599
insights into

00:02:46,319 --> 00:02:50,000
how things work so you know the the very

00:02:49,599 --> 00:02:52,239
basic

00:02:50,000 --> 00:02:53,200
trivial examples that we all uh kind of

00:02:52,239 --> 00:02:55,040
have in our minds

00:02:53,200 --> 00:02:56,800
are our social networks so we have

00:02:55,040 --> 00:02:57,920
people and like the friendship on

00:02:56,800 --> 00:03:01,200
facebook

00:02:57,920 --> 00:03:02,800
um or you know people who uh

00:03:01,200 --> 00:03:04,319
text one another or send money with one

00:03:02,800 --> 00:03:07,840
another and so on so that's like

00:03:04,319 --> 00:03:10,959
a network but you can think about um

00:03:07,840 --> 00:03:14,159
things like countries as uh those

00:03:10,959 --> 00:03:16,000
points and then if there is

00:03:14,159 --> 00:03:17,920
a flight route between them that's the

00:03:16,000 --> 00:03:19,519
line that's one way to look at

00:03:17,920 --> 00:03:21,040
it you can also think about like

00:03:19,519 --> 00:03:23,840
wikipedia articles as

00:03:21,040 --> 00:03:24,959
a network where each wikipedia article

00:03:23,840 --> 00:03:27,200
is a point

00:03:24,959 --> 00:03:29,280
and then the internal links you have in

00:03:27,200 --> 00:03:30,480
wikipedia from one article to another

00:03:29,280 --> 00:03:32,239
that's the line

00:03:30,480 --> 00:03:33,760
and if you do that you can do all sorts

00:03:32,239 --> 00:03:36,560
of nifty things like say

00:03:33,760 --> 00:03:38,080
well if i want to get from you know a

00:03:36,560 --> 00:03:40,080
wikipedia page about

00:03:38,080 --> 00:03:41,200
a and i want to get to wikipedia page

00:03:40,080 --> 00:03:43,920
about b

00:03:41,200 --> 00:03:46,159
what nodes what sorry what what points

00:03:43,920 --> 00:03:49,200
do i need to

00:03:46,159 --> 00:03:51,760
pass in in between so

00:03:49,200 --> 00:03:52,400
let's let's cover very very basic uh

00:03:51,760 --> 00:03:55,200
example

00:03:52,400 --> 00:03:57,120
a social network we have this point this

00:03:55,200 --> 00:03:58,239
lovely lady she's smart she's safe she's

00:03:57,120 --> 00:04:00,879
wearing a mask

00:03:58,239 --> 00:04:02,239
uh that's one point we also have this

00:04:00,879 --> 00:04:05,200
bloke who's also

00:04:02,239 --> 00:04:05,680
uh wearing a mask and that's another

00:04:05,200 --> 00:04:08,080
point

00:04:05,680 --> 00:04:09,439
and they are connected by a line

00:04:08,080 --> 00:04:11,599
surprise surprise

00:04:09,439 --> 00:04:13,439
that's a very basic structure and we can

00:04:11,599 --> 00:04:14,640
kind of grow the network and add more

00:04:13,439 --> 00:04:16,639
and more

00:04:14,640 --> 00:04:18,160
points and lines and kind of the

00:04:16,639 --> 00:04:19,680
connections between them and it

00:04:18,160 --> 00:04:22,560
kind of more looks like what we would

00:04:19,680 --> 00:04:25,120
imagine a network to look like

00:04:22,560 --> 00:04:27,040
so it will come as no surprise that

00:04:25,120 --> 00:04:29,040
points and lines actually have

00:04:27,040 --> 00:04:30,560
official names or like the terminology

00:04:29,040 --> 00:04:32,720
is a little bit more

00:04:30,560 --> 00:04:34,320
exciting than points and lines so

00:04:32,720 --> 00:04:36,000
depends on the discipline you have

00:04:34,320 --> 00:04:37,840
different ways to call

00:04:36,000 --> 00:04:40,639
points and lines what we are going to

00:04:37,840 --> 00:04:41,360
use is nodes for points and edges for

00:04:40,639 --> 00:04:43,199
lines

00:04:41,360 --> 00:04:45,199
if for no other reason just because

00:04:43,199 --> 00:04:46,320
that's what the python library we are

00:04:45,199 --> 00:04:48,160
going to use

00:04:46,320 --> 00:04:50,080
uses and i don't want to confuse you

00:04:48,160 --> 00:04:51,440
guys with too many organelles or girls

00:04:50,080 --> 00:04:54,840
with too many

00:04:51,440 --> 00:04:56,639
um concepts or just different

00:04:54,840 --> 00:04:59,199
nomenclature

00:04:56,639 --> 00:05:00,800
okay so there are a few main types of

00:04:59,199 --> 00:05:02,560
networks one of them is

00:05:00,800 --> 00:05:04,720
undirected network and you can think

00:05:02,560 --> 00:05:07,039
about facebook or linkedin where

00:05:04,720 --> 00:05:07,919
the connections are directionless and

00:05:07,039 --> 00:05:10,160
reciprocal

00:05:07,919 --> 00:05:11,919
so if a is connected to b b is

00:05:10,160 --> 00:05:14,639
necessarily connected to a

00:05:11,919 --> 00:05:16,080
and if we have undirected the networks

00:05:14,639 --> 00:05:18,080
and that means that we also have

00:05:16,080 --> 00:05:19,919
directed networks and that's more like

00:05:18,080 --> 00:05:22,960
twitter snapchat and so on

00:05:19,919 --> 00:05:24,080
well if person a follows b does not

00:05:22,960 --> 00:05:27,199
necessarily mean that

00:05:24,080 --> 00:05:27,199
b follows a

00:05:27,600 --> 00:05:30,960
um going back to kind of network we just

00:05:30,240 --> 00:05:34,800
saw so

00:05:30,960 --> 00:05:35,360
now we know that uh we no longer call

00:05:34,800 --> 00:05:37,120
those

00:05:35,360 --> 00:05:39,360
uh points points we are going to call

00:05:37,120 --> 00:05:42,320
them notes and as soon as my

00:05:39,360 --> 00:05:43,199
computer catches up then you'll see so

00:05:42,320 --> 00:05:45,840
yourselves

00:05:43,199 --> 00:05:47,759
all right there you go it's happening

00:05:45,840 --> 00:05:50,080
it's happening

00:05:47,759 --> 00:05:50,800
all right so we have nodes we have

00:05:50,080 --> 00:05:52,960
address

00:05:50,800 --> 00:05:54,560
and now i want to introduce just one

00:05:52,960 --> 00:05:57,600
more concept and that's

00:05:54,560 --> 00:05:59,919
path so you can see that in the bright

00:05:57,600 --> 00:06:01,520
green or bright yellow here basically a

00:05:59,919 --> 00:06:04,880
path is a connection

00:06:01,520 --> 00:06:06,560
a collection of edges from a given node

00:06:04,880 --> 00:06:09,680
to another given node

00:06:06,560 --> 00:06:11,280
without repeating the same edge so over

00:06:09,680 --> 00:06:14,160
here you can see a path

00:06:11,280 --> 00:06:16,479
from the barista guy to the painter dude

00:06:14,160 --> 00:06:17,039
that goes via these nice people in

00:06:16,479 --> 00:06:19,759
between

00:06:17,039 --> 00:06:21,440
and since this is an undirected network

00:06:19,759 --> 00:06:24,000
you can also say

00:06:21,440 --> 00:06:25,600
actually it's a path from uh from the

00:06:24,000 --> 00:06:26,800
painter to the barista with the same

00:06:25,600 --> 00:06:28,560
people in between

00:06:26,800 --> 00:06:30,319
so that's one path and there are many

00:06:28,560 --> 00:06:33,680
different paths in a network that's

00:06:30,319 --> 00:06:36,080
another one and another one and so on

00:06:33,680 --> 00:06:38,160
so a quick recap the basic building

00:06:36,080 --> 00:06:41,280
blocks we covered our node

00:06:38,160 --> 00:06:43,199
edge path cool um

00:06:41,280 --> 00:06:44,560
now we are going to take that into a

00:06:43,199 --> 00:06:46,800
python environment

00:06:44,560 --> 00:06:48,960
and use those building blocks to look at

00:06:46,800 --> 00:06:49,520
more intricate and complex structures

00:06:48,960 --> 00:06:51,680
like

00:06:49,520 --> 00:06:52,880
connected components or communities and

00:06:51,680 --> 00:06:55,759
we are also

00:06:52,880 --> 00:06:58,080
going to look at uh kind of individuals

00:06:55,759 --> 00:06:59,199
of interest by using centrality measures

00:06:58,080 --> 00:07:02,479
and we're gonna see

00:06:59,199 --> 00:07:05,680
you know in a network which nodes are

00:07:02,479 --> 00:07:07,919
more important than others or or

00:07:05,680 --> 00:07:09,680
are more pivotal to the nodes than to

00:07:07,919 --> 00:07:11,680
the networks and others

00:07:09,680 --> 00:07:13,680
um the way we are going to do that is

00:07:11,680 --> 00:07:16,319
with a library called networkx

00:07:13,680 --> 00:07:18,960
in my opinion that's the easiest way to

00:07:16,319 --> 00:07:21,280
get started with network analysis if you

00:07:18,960 --> 00:07:23,039
are keen on doing it in in python so

00:07:21,280 --> 00:07:25,919
just pip install network x

00:07:23,039 --> 00:07:27,919
and network x is very comprehensive the

00:07:25,919 --> 00:07:28,960
api is friendly and easy to pick up and

00:07:27,919 --> 00:07:31,039
kind of

00:07:28,960 --> 00:07:32,639
what you would expect if you've done any

00:07:31,039 --> 00:07:34,800
data science in

00:07:32,639 --> 00:07:36,319
uh in python and the documentation is

00:07:34,800 --> 00:07:39,680
really good uh on

00:07:36,319 --> 00:07:40,240
the shortcomings uh it's not that great

00:07:39,680 --> 00:07:42,560
when you have

00:07:40,240 --> 00:07:44,160
like more than a million nodes in my

00:07:42,560 --> 00:07:47,759
experience but that's uh

00:07:44,160 --> 00:07:48,800
kind of other scope for now the data set

00:07:47,759 --> 00:07:51,919
we're going to use

00:07:48,800 --> 00:07:54,479
is uh actually taken from venmo so

00:07:51,919 --> 00:07:55,440
to those uh watching that are not from

00:07:54,479 --> 00:07:57,360
the us

00:07:55,440 --> 00:07:58,960
venmo is a peer-to-peer payments up

00:07:57,360 --> 00:08:00,879
basically it's an application

00:07:58,960 --> 00:08:02,080
you can send money to your friends if

00:08:00,879 --> 00:08:03,599
you go to a restaurant and you want to

00:08:02,080 --> 00:08:06,319
split the bill it's very

00:08:03,599 --> 00:08:07,120
convenient so the interesting but then

00:08:06,319 --> 00:08:08,879
mode is

00:08:07,120 --> 00:08:10,879
interesting thing about venmo is that if

00:08:08,879 --> 00:08:14,000
uh if i recall correctly

00:08:10,879 --> 00:08:14,879
the transactions are actually public by

00:08:14,000 --> 00:08:16,639
default

00:08:14,879 --> 00:08:18,560
so you can see the amount but you can

00:08:16,639 --> 00:08:21,039
see who sent whom

00:08:18,560 --> 00:08:22,720
uh any money so you can see if you if

00:08:21,039 --> 00:08:24,240
you really squint really hard here you

00:08:22,720 --> 00:08:27,520
can see that

00:08:24,240 --> 00:08:29,840
leonard paid john hunter paid brian and

00:08:27,520 --> 00:08:32,880
erica paid monica and so on

00:08:29,840 --> 00:08:35,360
and you know we can represent that in

00:08:32,880 --> 00:08:36,800
a table in tabular form which you know

00:08:35,360 --> 00:08:38,560
kind of makes sense

00:08:36,800 --> 00:08:40,719
you would have a table with like the

00:08:38,560 --> 00:08:41,360
sender their name or send their id more

00:08:40,719 --> 00:08:42,880
likely

00:08:41,360 --> 00:08:45,760
and they receive the name of the civil

00:08:42,880 --> 00:08:47,920
id and that what it would look like

00:08:45,760 --> 00:08:49,519
and that's fine that's you know

00:08:47,920 --> 00:08:50,640
perfectly valid you can do a lot of

00:08:49,519 --> 00:08:52,160
interesting things

00:08:50,640 --> 00:08:54,880
things with that you can you know group

00:08:52,160 --> 00:08:57,600
by you can uh count

00:08:54,880 --> 00:08:58,560
and and so on and and and get some you

00:08:57,600 --> 00:09:01,279
know

00:08:58,560 --> 00:09:03,200
very valid and important uh high-level

00:09:01,279 --> 00:09:06,399
descriptive statistics about

00:09:03,200 --> 00:09:09,760
you know what's happening in the app but

00:09:06,399 --> 00:09:10,800
if you model that as a network you can

00:09:09,760 --> 00:09:12,959
really unlock

00:09:10,800 --> 00:09:14,560
another dimension of the data and see

00:09:12,959 --> 00:09:15,440
get a better understanding of what's

00:09:14,560 --> 00:09:18,000
actually happening

00:09:15,440 --> 00:09:19,760
in the app so this is how we would model

00:09:18,000 --> 00:09:22,560
it as a network which is

00:09:19,760 --> 00:09:23,440
very rudimentary and very basic but

00:09:22,560 --> 00:09:25,120
that's fine that's a

00:09:23,440 --> 00:09:26,560
good place to start because we are

00:09:25,120 --> 00:09:29,120
starting from scratch

00:09:26,560 --> 00:09:29,760
and in in jupiter in a second we are

00:09:29,120 --> 00:09:31,920
going to

00:09:29,760 --> 00:09:33,120
kind of uh take it to the next level

00:09:31,920 --> 00:09:36,880
with a lot more

00:09:33,120 --> 00:09:38,959
uh a lot more data before we do that

00:09:36,880 --> 00:09:41,279
let's talk about the why for a second

00:09:38,959 --> 00:09:42,560
so here are a few like real life

00:09:41,279 --> 00:09:44,000
examples that

00:09:42,560 --> 00:09:45,600
you know product that the scientists

00:09:44,000 --> 00:09:48,640
might might find themselves being

00:09:45,600 --> 00:09:50,560
asked so for example you can be

00:09:48,640 --> 00:09:51,120
approached by the customer service teams

00:09:50,560 --> 00:09:53,040
it says

00:09:51,120 --> 00:09:56,160
hey we you know we have a bunch of calls

00:09:53,040 --> 00:09:59,279
coming in whose call do we pick up first

00:09:56,160 --> 00:10:00,720
who uh which user do we give like the

00:09:59,279 --> 00:10:03,760
white glove treatment and

00:10:00,720 --> 00:10:04,000
and which one can we you know um afford

00:10:03,760 --> 00:10:06,000
to

00:10:04,000 --> 00:10:07,519
to let them stay on the line for a bit

00:10:06,000 --> 00:10:09,120
longer um

00:10:07,519 --> 00:10:10,800
another question would be from the

00:10:09,120 --> 00:10:11,519
marketing team which says you know we

00:10:10,800 --> 00:10:13,600
have

00:10:11,519 --> 00:10:16,079
uh some budget to spend on influencers

00:10:13,600 --> 00:10:18,880
but we don't know who the influences are

00:10:16,079 --> 00:10:20,880
the product team could want to look at

00:10:18,880 --> 00:10:21,440
the power users and see what they do in

00:10:20,880 --> 00:10:23,200
the app

00:10:21,440 --> 00:10:25,600
or kind of maybe recruit them to be

00:10:23,200 --> 00:10:28,959
better testers of a new release

00:10:25,600 --> 00:10:32,320
the user research team could uh want to

00:10:28,959 --> 00:10:33,839
to interview important nodes for

00:10:32,320 --> 00:10:35,040
usability studies or for product

00:10:33,839 --> 00:10:38,560
development

00:10:35,040 --> 00:10:39,839
and also another questions that

00:10:38,560 --> 00:10:41,760
might come from kind of the business

00:10:39,839 --> 00:10:44,240
side of the operation you know

00:10:41,760 --> 00:10:45,760
venmo is a free app uh there's no

00:10:44,240 --> 00:10:47,040
commission from sending money from one

00:10:45,760 --> 00:10:49,360
person to another

00:10:47,040 --> 00:10:50,959
but what if businesses are making use of

00:10:49,360 --> 00:10:52,160
that and actually run their business

00:10:50,959 --> 00:10:53,839
through venmo

00:10:52,160 --> 00:10:54,959
that's interesting maybe we can charge

00:10:53,839 --> 00:10:56,160
them a commission because their

00:10:54,959 --> 00:10:57,600
businesses or

00:10:56,160 --> 00:10:59,680
you know or give them a different

00:10:57,600 --> 00:11:01,440
product and so on so that's a question

00:10:59,680 --> 00:11:04,079
from the business development team

00:11:01,440 --> 00:11:05,680
and the spoiler here is that just

00:11:04,079 --> 00:11:07,040
because of time constraints we actually

00:11:05,680 --> 00:11:09,519
won't answer that question that's a

00:11:07,040 --> 00:11:12,839
homework assignment for you all

00:11:09,519 --> 00:11:15,760
cool um let's switch to

00:11:12,839 --> 00:11:17,040
jupiter and get started with actually

00:11:15,760 --> 00:11:19,440
doing

00:11:17,040 --> 00:11:20,399
some network analysis so this is what we

00:11:19,440 --> 00:11:23,600
just saw

00:11:20,399 --> 00:11:27,360
um we are going to call a bunch of

00:11:23,600 --> 00:11:29,680
things most importantly of course is

00:11:27,360 --> 00:11:30,720
x and the convention is to import it as

00:11:29,680 --> 00:11:32,720
nx

00:11:30,720 --> 00:11:34,480
and we are going to create our very

00:11:32,720 --> 00:11:37,600
first network by assigning

00:11:34,480 --> 00:11:40,079
uh the graph class to a variable g

00:11:37,600 --> 00:11:41,680
again this is all conventions and we

00:11:40,079 --> 00:11:42,880
have successfully created our first

00:11:41,680 --> 00:11:45,040
network in python

00:11:42,880 --> 00:11:47,120
so it's a not a very exciting network

00:11:45,040 --> 00:11:48,399
because it has no nodes and no edges but

00:11:47,120 --> 00:11:51,440
we did it we

00:11:48,399 --> 00:11:54,639
made it happen so let's recreate the

00:11:51,440 --> 00:11:57,279
network we saw here uh on the top

00:11:54,639 --> 00:11:57,680
basically we'll use the add edges from

00:11:57,279 --> 00:12:00,880
uh

00:11:57,680 --> 00:12:04,000
method and pass a list of tuples

00:12:00,880 --> 00:12:05,760
and we are going to visualize it so

00:12:04,000 --> 00:12:06,399
you'll see that that's actually the same

00:12:05,760 --> 00:12:09,040
thing

00:12:06,399 --> 00:12:10,480
and of course we have a very simple

00:12:09,040 --> 00:12:13,839
method just

00:12:10,480 --> 00:12:15,680
it's called draw nx draw you pass the

00:12:13,839 --> 00:12:17,519
network and a bunch of other arguments

00:12:15,680 --> 00:12:20,639
just to make things look nice

00:12:17,519 --> 00:12:22,240
but um we can see that basically we see

00:12:20,639 --> 00:12:25,920
the same thing that we saw

00:12:22,240 --> 00:12:28,000
above so that's cool uh we created our

00:12:25,920 --> 00:12:30,639
first network very basic one but

00:12:28,000 --> 00:12:31,040
you know it took us probably a minute um

00:12:30,639 --> 00:12:34,160
but

00:12:31,040 --> 00:12:36,079
you know what can we do next um so

00:12:34,160 --> 00:12:37,279
let's let's make things more exciting

00:12:36,079 --> 00:12:41,760
let's import

00:12:37,279 --> 00:12:44,800
a larger data set and work with that so

00:12:41,760 --> 00:12:45,680
if you so as i mentioned uh transactions

00:12:44,800 --> 00:12:48,720
on venmo

00:12:45,680 --> 00:12:49,519
are public by default and there's also

00:12:48,720 --> 00:12:53,279
an api

00:12:49,519 --> 00:12:55,279
so if you kind of search

00:12:53,279 --> 00:12:56,959
the internet it's not going to take you

00:12:55,279 --> 00:12:59,360
long to find

00:12:56,959 --> 00:13:00,720
uh like really comprehensive data sets

00:12:59,360 --> 00:13:04,000
that you can take

00:13:00,720 --> 00:13:05,440
uh and and kind of play around with so

00:13:04,000 --> 00:13:06,959
all the data i'm going to show you today

00:13:05,440 --> 00:13:08,720
has been obfuscated and you're going to

00:13:06,959 --> 00:13:11,920
see it by the names that

00:13:08,720 --> 00:13:15,120
i chose to give the nodes but that's

00:13:11,920 --> 00:13:17,600
actual real data from venmo um so the

00:13:15,120 --> 00:13:19,360
plan is to kind of import a bunch

00:13:17,600 --> 00:13:20,880
of information and create a very large

00:13:19,360 --> 00:13:24,320
graph and then we're gonna

00:13:20,880 --> 00:13:25,440
zoom in on a sub graph or connected

00:13:24,320 --> 00:13:27,519
component

00:13:25,440 --> 00:13:29,440
we're gonna identify communities and

00:13:27,519 --> 00:13:30,399
then we are going to look at individuals

00:13:29,440 --> 00:13:32,560
of interest

00:13:30,399 --> 00:13:34,000
so that's a mouthful i know it might be

00:13:32,560 --> 00:13:36,880
a little bit daunting

00:13:34,000 --> 00:13:37,600
but let's do it together so first step

00:13:36,880 --> 00:13:39,360
is to

00:13:37,600 --> 00:13:41,279
load a bigger data there's a bunch of

00:13:39,360 --> 00:13:42,079
formats you can use in network x we'll

00:13:41,279 --> 00:13:44,240
use

00:13:42,079 --> 00:13:45,680
uh a pandas data frame and we have a

00:13:44,240 --> 00:13:48,000
very basic data frame

00:13:45,680 --> 00:13:49,839
with standard id and receive id so those

00:13:48,000 --> 00:13:51,360
are the user ids of people sending or

00:13:49,839 --> 00:13:54,160
received money

00:13:51,360 --> 00:13:54,800
and we are going to create a new network

00:13:54,160 --> 00:13:57,120
we also

00:13:54,800 --> 00:13:58,320
kind of assign it to g and we are now

00:13:57,120 --> 00:14:01,360
going to use the from

00:13:58,320 --> 00:14:02,240
pandas edge list method and we'll just

00:14:01,360 --> 00:14:04,399
need to pass

00:14:02,240 --> 00:14:05,600
uh the data frame the source column the

00:14:04,399 --> 00:14:07,680
target column

00:14:05,600 --> 00:14:10,320
and we are going to create it as a as a

00:14:07,680 --> 00:14:11,920
digraph or a directed graph because

00:14:10,320 --> 00:14:14,320
if a sends money to b doesn't

00:14:11,920 --> 00:14:16,240
necessarily mean that b sends money to a

00:14:14,320 --> 00:14:17,519
so that's kind of the point of a digraph

00:14:16,240 --> 00:14:19,760
and we can see

00:14:17,519 --> 00:14:20,880
kind of have some really nice methods to

00:14:19,760 --> 00:14:23,920
kind of describe the

00:14:20,880 --> 00:14:28,079
the network and we see we have 710

00:14:23,920 --> 00:14:32,000
000 nodes with 360 37 000

00:14:28,079 --> 00:14:34,000
edges so transfers um let's visualize it

00:14:32,000 --> 00:14:36,079
and as i mentioned before

00:14:34,000 --> 00:14:37,920
network x is not that great when it

00:14:36,079 --> 00:14:40,720
comes to like

00:14:37,920 --> 00:14:42,240
really big data sets so this is what the

00:14:40,720 --> 00:14:42,800
visualization would look like and it

00:14:42,240 --> 00:14:47,120
would take

00:14:42,800 --> 00:14:50,639
quite a while to to to generate so

00:14:47,120 --> 00:14:51,199
um fine i mean it did what we asked it

00:14:50,639 --> 00:14:54,480
to do

00:14:51,199 --> 00:14:56,399
um there are other ways to um

00:14:54,480 --> 00:14:57,760
visualize large networks but what i

00:14:56,399 --> 00:15:00,639
would rather do

00:14:57,760 --> 00:15:02,000
is to zoom in on a smaller group and

00:15:00,639 --> 00:15:03,839
kind of show you

00:15:02,000 --> 00:15:05,360
the intuition behind things kind of on a

00:15:03,839 --> 00:15:07,199
very local level

00:15:05,360 --> 00:15:09,120
and then from that i think you can build

00:15:07,199 --> 00:15:11,920
the intuition to kind of

00:15:09,120 --> 00:15:12,880
bigger picture and macro level analysis

00:15:11,920 --> 00:15:14,720
so

00:15:12,880 --> 00:15:17,279
what we're going to do is we are going

00:15:14,720 --> 00:15:20,560
to identify connected components

00:15:17,279 --> 00:15:21,839
in that big data sets that we have a

00:15:20,560 --> 00:15:24,800
connected component

00:15:21,839 --> 00:15:25,839
is a subset of the nodes from the big

00:15:24,800 --> 00:15:29,920
graph

00:15:25,839 --> 00:15:34,000
well there is a path from any twofold

00:15:29,920 --> 00:15:36,560
between any two nodes and there is no

00:15:34,000 --> 00:15:39,120
path to any other node so everything is

00:15:36,560 --> 00:15:41,920
self-contained so what we saw earlier

00:15:39,120 --> 00:15:42,800
this is one connected component but if

00:15:41,920 --> 00:15:45,360
we take our

00:15:42,800 --> 00:15:46,480
magic scissors and sever the tie between

00:15:45,360 --> 00:15:47,920
the

00:15:46,480 --> 00:15:49,759
woman in the mask and the men in the

00:15:47,920 --> 00:15:52,240
mask then we are going to have

00:15:49,759 --> 00:15:53,040
two separate connected components

00:15:52,240 --> 00:15:55,120
because

00:15:53,040 --> 00:15:57,040
you can have a path between any two

00:15:55,120 --> 00:15:57,920
people here and you can have a path

00:15:57,040 --> 00:15:59,120
between

00:15:57,920 --> 00:16:01,839
any two people here it's not very

00:15:59,120 --> 00:16:04,959
exciting but you cannot

00:16:01,839 --> 00:16:07,360
connect the two so that's one connected

00:16:04,959 --> 00:16:10,000
component and that's another

00:16:07,360 --> 00:16:10,560
um so we are going to use a method

00:16:10,000 --> 00:16:12,079
called

00:16:10,560 --> 00:16:14,399
weekly connected components i'm not

00:16:12,079 --> 00:16:15,920
gonna kind of in the interest of time

00:16:14,399 --> 00:16:18,399
tell you what's the difference between

00:16:15,920 --> 00:16:21,519
that and strongly connected components

00:16:18,399 --> 00:16:22,639
um but it runs and generates a bunch of

00:16:21,519 --> 00:16:24,800
connected components

00:16:22,639 --> 00:16:27,839
and the biggest one is actually eighteen

00:16:24,800 --> 00:16:31,199
thousand three hundred and sixty percent

00:16:27,839 --> 00:16:31,680
uh big so that's a lot of people and you

00:16:31,199 --> 00:16:34,720
probably

00:16:31,680 --> 00:16:36,399
don't know eighteen thousand people but

00:16:34,720 --> 00:16:38,000
you are connected to them which is

00:16:36,399 --> 00:16:40,399
really really cool um

00:16:38,000 --> 00:16:41,759
so when it comes to money transfer then

00:16:40,399 --> 00:16:44,399
maybe that's not

00:16:41,759 --> 00:16:47,040
super interesting but let's think about

00:16:44,399 --> 00:16:50,560
it like maybe as a social network where

00:16:47,040 --> 00:16:51,920
you don't know 18 000 people but if you

00:16:50,560 --> 00:16:54,240
share an idea

00:16:51,920 --> 00:16:56,160
that idea could reach so many people so

00:16:54,240 --> 00:16:59,440
that's very exciting

00:16:56,160 --> 00:17:01,040
um i have the benefit of giving

00:16:59,440 --> 00:17:03,199
this talk so i'm gonna actually cherry

00:17:01,040 --> 00:17:06,559
pick a connected component of interest

00:17:03,199 --> 00:17:08,559
basically this is a list of user ids

00:17:06,559 --> 00:17:10,319
that are all contained in one connected

00:17:08,559 --> 00:17:13,520
component i identified

00:17:10,319 --> 00:17:16,559
and we are going to create a sub graph a

00:17:13,520 --> 00:17:20,160
sub graph is basically uh

00:17:16,559 --> 00:17:23,280
we take a bunch of notes we

00:17:20,160 --> 00:17:24,079
uh create a subgraph by saying hey for

00:17:23,280 --> 00:17:27,039
these notes

00:17:24,079 --> 00:17:28,720
we are asking networkx get me all the

00:17:27,039 --> 00:17:30,400
information you have all the connections

00:17:28,720 --> 00:17:31,520
you have i'm giving you notes you give

00:17:30,400 --> 00:17:34,080
me the structure

00:17:31,520 --> 00:17:35,760
and we are going to create a sub graph

00:17:34,080 --> 00:17:38,480
uh which is a subset

00:17:35,760 --> 00:17:40,400
of the super graph well it's all

00:17:38,480 --> 00:17:43,600
connected within we're going to retain

00:17:40,400 --> 00:17:45,039
the information we have about edges and

00:17:43,600 --> 00:17:47,280
also attributes and stuff like that but

00:17:45,039 --> 00:17:48,080
we haven't introduced at previous just

00:17:47,280 --> 00:17:50,720
yet

00:17:48,080 --> 00:17:53,600
so we have 40 nodes we have 78 edges

00:17:50,720 --> 00:17:57,520
cool let's see what that looks like

00:17:53,600 --> 00:17:59,280
um it's going to take a second to load

00:17:57,520 --> 00:18:00,960
and this is what it looks like which is

00:17:59,280 --> 00:18:03,200
kind of a little bit more

00:18:00,960 --> 00:18:04,880
friendly than what we saw earlier is the

00:18:03,200 --> 00:18:08,240
big black blob

00:18:04,880 --> 00:18:12,000
um cool next we are going to

00:18:08,240 --> 00:18:13,919
add this with labels parameter and set

00:18:12,000 --> 00:18:14,720
it to true and we are actually going to

00:18:13,919 --> 00:18:18,240
use

00:18:14,720 --> 00:18:20,559
add user ids to the visualization um

00:18:18,240 --> 00:18:22,320
which is okay now it's useful we know

00:18:20,559 --> 00:18:24,240
which user ids these are but it's not

00:18:22,320 --> 00:18:26,720
very personal

00:18:24,240 --> 00:18:28,160
so we are going to add node attributes

00:18:26,720 --> 00:18:30,400
so you have node attributes you have

00:18:28,160 --> 00:18:32,640
edge attributes which is basically

00:18:30,400 --> 00:18:34,080
more information about your nodes or

00:18:32,640 --> 00:18:36,320
edges so

00:18:34,080 --> 00:18:38,000
in the case of nodes for example we can

00:18:36,320 --> 00:18:39,760
say hey i have a user id

00:18:38,000 --> 00:18:41,200
but we i also have information about

00:18:39,760 --> 00:18:43,760
your first name

00:18:41,200 --> 00:18:45,200
and the gender maybe in every you know

00:18:43,760 --> 00:18:49,039
all sorts of other interesting

00:18:45,200 --> 00:18:50,640
tidbits about uh each node um

00:18:49,039 --> 00:18:52,640
that could be useful or interesting for

00:18:50,640 --> 00:18:57,039
the analysis so

00:18:52,640 --> 00:19:00,400
i have that and let's apply that to our

00:18:57,039 --> 00:19:03,919
graph and we did just that with the set

00:19:00,400 --> 00:19:04,559
node attributes method and for example

00:19:03,919 --> 00:19:07,919
we can

00:19:04,559 --> 00:19:08,400
kind of zoom in on this user id and we

00:19:07,919 --> 00:19:11,679
see that

00:19:08,400 --> 00:19:14,160
indeed we kind of applied the attribute

00:19:11,679 --> 00:19:15,679
french name amy gender female and so on

00:19:14,160 --> 00:19:17,760
so that's really nice

00:19:15,679 --> 00:19:19,760
when it comes to edge attributes you can

00:19:17,760 --> 00:19:21,760
think about maybe the intensity of the

00:19:19,760 --> 00:19:23,679
relationship

00:19:21,760 --> 00:19:25,360
so when it comes to many transfers for

00:19:23,679 --> 00:19:28,640
example a could send

00:19:25,360 --> 00:19:30,880
b hundred dollars and a could send c

00:19:28,640 --> 00:19:32,080
ten dollars so it makes sense that we

00:19:30,880 --> 00:19:34,480
would want to kind of

00:19:32,080 --> 00:19:36,400
factor in the magnitude of that

00:19:34,480 --> 00:19:37,280
relationship so you could argue that the

00:19:36,400 --> 00:19:40,160
relationship between

00:19:37,280 --> 00:19:42,160
a and b is 10 times stronger or more

00:19:40,160 --> 00:19:45,520
meaningful than the relationship between

00:19:42,160 --> 00:19:48,559
a and c so for that you would want uh

00:19:45,520 --> 00:19:48,880
edge attributes and uh so you could kind

00:19:48,559 --> 00:19:51,280
of

00:19:48,880 --> 00:19:52,720
maybe give like a an attribute that

00:19:51,280 --> 00:19:55,280
shows the intensity of the

00:19:52,720 --> 00:19:56,480
relationship by for example using the

00:19:55,280 --> 00:19:58,080
monetary

00:19:56,480 --> 00:19:59,600
amount or maybe the number of

00:19:58,080 --> 00:20:02,720
transactions between them and

00:19:59,600 --> 00:20:05,600
so many other things um

00:20:02,720 --> 00:20:06,640
cool so you know we can describe it we

00:20:05,600 --> 00:20:11,360
can see

00:20:06,640 --> 00:20:13,440
uh we can see the node attributes by

00:20:11,360 --> 00:20:16,640
by calling get node attributes and

00:20:13,440 --> 00:20:20,080
asking for the specific attribute name

00:20:16,640 --> 00:20:23,520
cool cool we are now going

00:20:20,080 --> 00:20:24,880
to visualize it with the actual names

00:20:23,520 --> 00:20:26,640
which would be useful and

00:20:24,880 --> 00:20:28,480
friendly all right that's a little bit

00:20:26,640 --> 00:20:31,520
even more friendlier

00:20:28,480 --> 00:20:34,240
than before more friendly than before

00:20:31,520 --> 00:20:34,880
and now uh let's see where we are so we

00:20:34,240 --> 00:20:38,240
started off

00:20:34,880 --> 00:20:40,400
with like a large graph 700 000 nodes

00:20:38,240 --> 00:20:42,080
we identified connected components we

00:20:40,400 --> 00:20:44,000
decided to zoom in on one connected

00:20:42,080 --> 00:20:44,880
component and create a subgraph from

00:20:44,000 --> 00:20:46,400
that

00:20:44,880 --> 00:20:48,240
now we're actually going to dive deeper

00:20:46,400 --> 00:20:51,440
and look at communities and

00:20:48,240 --> 00:20:53,679
individuals of interest so communities

00:20:51,440 --> 00:20:55,200
are maybe similar in a sense to

00:20:53,679 --> 00:20:58,400
connected components but

00:20:55,200 --> 00:20:59,039
not quite so in one connected component

00:20:58,400 --> 00:21:01,120
you could have

00:20:59,039 --> 00:21:02,159
multiple communities and the idea of

00:21:01,120 --> 00:21:04,400
community

00:21:02,159 --> 00:21:06,159
is a bunch of nodes that have kind of a

00:21:04,400 --> 00:21:07,200
dense relationship so you can think

00:21:06,159 --> 00:21:08,960
about it as like

00:21:07,200 --> 00:21:10,720
you know you have your group of friends

00:21:08,960 --> 00:21:12,320
and you know another person and that

00:21:10,720 --> 00:21:14,000
person has a group of friends

00:21:12,320 --> 00:21:15,840
but your group of friends is not

00:21:14,000 --> 00:21:16,720
friendly with that person's group of

00:21:15,840 --> 00:21:19,840
friends

00:21:16,720 --> 00:21:21,760
so as you can see in like what we saw

00:21:19,840 --> 00:21:24,240
earlier in the example we saw earlier

00:21:21,760 --> 00:21:24,880
it's fairly intuitive to say that these

00:21:24,240 --> 00:21:26,559
people are

00:21:24,880 --> 00:21:29,039
having like a dense relationship between

00:21:26,559 --> 00:21:30,960
one another same goes on the left but

00:21:29,039 --> 00:21:32,640
the relationship between the two

00:21:30,960 --> 00:21:34,240
is very weak there's only one edge

00:21:32,640 --> 00:21:36,240
between them

00:21:34,240 --> 00:21:37,520
um so those are two different

00:21:36,240 --> 00:21:39,840
communities

00:21:37,520 --> 00:21:40,640
we're actually going to use a an

00:21:39,840 --> 00:21:43,679
external

00:21:40,640 --> 00:21:45,440
library to detect the communities in the

00:21:43,679 --> 00:21:47,440
interest of time i'm not going to dive

00:21:45,440 --> 00:21:48,640
deep into that you can check out the

00:21:47,440 --> 00:21:52,320
documentation when i

00:21:48,640 --> 00:21:55,039
upload the talk to github we identified

00:21:52,320 --> 00:21:56,720
five communities and now we are going to

00:21:55,039 --> 00:21:59,520
visualize our network

00:21:56,720 --> 00:22:00,640
uh by giving different communities

00:21:59,520 --> 00:22:02,480
different color

00:22:00,640 --> 00:22:04,400
and you can see that it actually did a

00:22:02,480 --> 00:22:05,919
fairly good job at identifying

00:22:04,400 --> 00:22:08,400
communities because we kind of

00:22:05,919 --> 00:22:09,280
think that yeah this is one distinct

00:22:08,400 --> 00:22:11,280
community

00:22:09,280 --> 00:22:14,400
this is one distinct community this one

00:22:11,280 --> 00:22:17,200
and so on so we did a fairly good job

00:22:14,400 --> 00:22:19,039
finally we are we you know we have our

00:22:17,200 --> 00:22:21,760
ask from our stakeholders to look

00:22:19,039 --> 00:22:23,440
into like nodes of interest which node

00:22:21,760 --> 00:22:24,400
is more important or less important than

00:22:23,440 --> 00:22:26,240
the other

00:22:24,400 --> 00:22:27,919
so there are negative ways to look at it

00:22:26,240 --> 00:22:29,679
like the degree centrality like

00:22:27,919 --> 00:22:31,440
you know if you are connected to more

00:22:29,679 --> 00:22:33,280
people then you are more important

00:22:31,440 --> 00:22:35,039
there's also kind of things that are

00:22:33,280 --> 00:22:36,480
more interesting like between centrality

00:22:35,039 --> 00:22:37,840
and page rank and it

00:22:36,480 --> 00:22:40,720
really pains me that i don't have the

00:22:37,840 --> 00:22:43,840
time to to explain how beautiful these

00:22:40,720 --> 00:22:46,880
uh centrality measures are but

00:22:43,840 --> 00:22:47,520
uh basically between centrality means if

00:22:46,880 --> 00:22:50,000
you

00:22:47,520 --> 00:22:52,480
want to connect any two nodes in the

00:22:50,000 --> 00:22:54,480
most efficient way

00:22:52,480 --> 00:22:56,240
you are going to pass through certain

00:22:54,480 --> 00:22:58,799
nodes um

00:22:56,240 --> 00:22:59,360
certain nodes are kind of connectors and

00:22:58,799 --> 00:23:01,360
are more

00:22:59,360 --> 00:23:02,880
pivotal to connecting any two nodes in

00:23:01,360 --> 00:23:04,640
the network than others

00:23:02,880 --> 00:23:08,000
and that's what between a centrality

00:23:04,640 --> 00:23:11,200
picks up uh so we can calculate it to

00:23:08,000 --> 00:23:14,240
every uh two nodes

00:23:11,200 --> 00:23:16,799
and we can apply to our network

00:23:14,240 --> 00:23:18,080
and kind of set the size of the node to

00:23:16,799 --> 00:23:21,360
be representative

00:23:18,080 --> 00:23:24,080
of uh the importance of that

00:23:21,360 --> 00:23:24,799
node in the network so that's between us

00:23:24,080 --> 00:23:27,600
let's do

00:23:24,799 --> 00:23:28,400
pagerank which is what google uses to

00:23:27,600 --> 00:23:31,840
kind of find you

00:23:28,400 --> 00:23:34,880
relevant search results um and

00:23:31,840 --> 00:23:36,640
we can see that yeah so we can see that

00:23:34,880 --> 00:23:38,240
you know we have fry and lila in the

00:23:36,640 --> 00:23:39,679
center that are super important we have

00:23:38,240 --> 00:23:41,919
bender and zoidberg

00:23:39,679 --> 00:23:43,360
uh we now know who the influencers are

00:23:41,919 --> 00:23:45,919
who are the most important people in the

00:23:43,360 --> 00:23:47,840
network and who we can flag out to

00:23:45,919 --> 00:23:49,679
the kind of the different stakeholders

00:23:47,840 --> 00:23:51,120
that asked us for information

00:23:49,679 --> 00:23:53,120
you would notice that the results

00:23:51,120 --> 00:23:54,240
between between centrality and page rank

00:23:53,120 --> 00:23:56,799
are a little different

00:23:54,240 --> 00:23:58,400
and that's fine uh data science and

00:23:56,799 --> 00:24:01,840
network analysis kind of

00:23:58,400 --> 00:24:03,120
like there's a degree of art into it so

00:24:01,840 --> 00:24:05,200
you need to kind of

00:24:03,120 --> 00:24:06,240
dig in and understand better what works

00:24:05,200 --> 00:24:09,120
best for

00:24:06,240 --> 00:24:09,679
your application so we have a minute to

00:24:09,120 --> 00:24:13,120
go

00:24:09,679 --> 00:24:16,320
let me go back to um

00:24:13,120 --> 00:24:19,840
to the deck we

00:24:16,320 --> 00:24:22,559
kind of let's wrap up we saw in like

00:24:19,840 --> 00:24:24,559
a 25-minute talk we saw that you can

00:24:22,559 --> 00:24:26,159
answer a real-world business question

00:24:24,559 --> 00:24:29,039
use network analysis

00:24:26,159 --> 00:24:31,600
we saw how uh powerful and i hope i

00:24:29,039 --> 00:24:33,520
convinced you it's widely applicable

00:24:31,600 --> 00:24:35,120
barely scratch the surface and network x

00:24:33,520 --> 00:24:36,880
is a great place to start and if you

00:24:35,120 --> 00:24:38,880
want to take things further

00:24:36,880 --> 00:24:40,880
i want to introduce this project i've

00:24:38,880 --> 00:24:43,120
been working on with eric drama

00:24:40,880 --> 00:24:44,159
it's called snacks it's a snack size

00:24:43,120 --> 00:24:46,400
awesome list

00:24:44,159 --> 00:24:47,679
on github which basically gives you a

00:24:46,400 --> 00:24:49,600
bunch of resources but

00:24:47,679 --> 00:24:51,679
not too many resources just what you

00:24:49,600 --> 00:24:53,440
need to know to get started

00:24:51,679 --> 00:24:54,799
to get the intuition right to understand

00:24:53,440 --> 00:24:57,679
the theory and

00:24:54,799 --> 00:24:59,600
and get started and then progress your

00:24:57,679 --> 00:25:02,799
journey of learning about

00:24:59,600 --> 00:25:05,039
network analysis so you are more than

00:25:02,799 --> 00:25:07,760
welcome to go and check that out

00:25:05,039 --> 00:25:09,600
um finally there's a take home a few

00:25:07,760 --> 00:25:12,000
take on challenge questions

00:25:09,600 --> 00:25:12,880
uh which will be available on the github

00:25:12,000 --> 00:25:15,120
repo

00:25:12,880 --> 00:25:17,520
and with that i would like to thank you

00:25:15,120 --> 00:25:20,320
and invite you to connect

00:25:17,520 --> 00:25:21,760
on twitter or linkedin or whatnot thank

00:25:20,320 --> 00:25:22,400
you very much and i hope you enjoyed

00:25:21,760 --> 00:25:29,840
this call

00:25:22,400 --> 00:25:29,840
this talk

00:26:23,840 --> 00:26:25,919

YouTube URL: https://www.youtube.com/watch?v=DPqhV21tSAc


