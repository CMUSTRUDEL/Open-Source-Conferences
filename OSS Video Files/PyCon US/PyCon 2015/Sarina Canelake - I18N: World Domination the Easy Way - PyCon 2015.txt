Title: Sarina Canelake - I18N: World Domination the Easy Way - PyCon 2015
Publication date: 2015-04-11
Playlist: PyCon 2015
Description: 
	"Speaker: Sarina Canelake

Have you heard about internationalization (i18n) and wondered what it meant? Perhaps your project already has i18n of its strings but you have a nagging feeling you could be doing it better. This talk will walk through the basics of i18nâ€™ing a Django project (but the principles apply to any project!), and how to make the process of localization (l10n) go more smoothly.

Slides can be found at: https://speakerdeck.com/pycon2015 and https://github.com/PyCon/2015-slides"
Captions: 
	00:00:05,299 --> 00:00:11,309
good afternoon everybody welcome to the

00:00:08,400 --> 00:00:13,259
very last talk sessions for the day of

00:00:11,309 --> 00:00:16,199
day one of PyCon I hope you've all had a

00:00:13,259 --> 00:00:19,949
UH an excellent day and don't forget

00:00:16,199 --> 00:00:22,949
after this at 5:40 p.m. there's gonna be

00:00:19,949 --> 00:00:25,640
the Lightning talks downstairs in 5:17

00:00:22,949 --> 00:00:28,830
a.m. be and be sure not to miss them so

00:00:25,640 --> 00:00:31,880
we're about to hear Serena cane lake

00:00:28,830 --> 00:00:44,190
from EDX talk about internationalization

00:00:31,880 --> 00:00:45,930
will domination the easy way so hello

00:00:44,190 --> 00:00:48,450
everybody I'm here today to talk to you

00:00:45,930 --> 00:00:50,489
about world domination the most simple

00:00:48,450 --> 00:00:54,210
course of action is through i18n and

00:00:50,489 --> 00:00:57,239
l10n so who am i my name is Serena cane

00:00:54,210 --> 00:00:59,640
lake I am a software engineer at EDX EDX

00:00:57,239 --> 00:01:01,530
is a company that provides free online

00:00:59,640 --> 00:01:03,780
courses from the best universities

00:01:01,530 --> 00:01:05,820
around the world and our site is run in

00:01:03,780 --> 00:01:07,290
English but we actually offer five

00:01:05,820 --> 00:01:09,090
different language experiences for our

00:01:07,290 --> 00:01:11,189
users additionally our software is

00:01:09,090 --> 00:01:13,380
open-source and our open source

00:01:11,189 --> 00:01:15,750
community is running our software in 20

00:01:13,380 --> 00:01:17,070
different languages so over the course

00:01:15,750 --> 00:01:18,540
of the past two years we've been working

00:01:17,070 --> 00:01:20,640
on a lot of internationalization and

00:01:18,540 --> 00:01:22,490
localization problems and I'm here today

00:01:20,640 --> 00:01:24,900
to talk to you not just about

00:01:22,490 --> 00:01:26,430
internationalization but about the

00:01:24,900 --> 00:01:29,040
localization step as well and some

00:01:26,430 --> 00:01:30,299
common things that we've learned so no

00:01:29,040 --> 00:01:32,549
talk today we're going to talk about the

00:01:30,299 --> 00:01:34,680
basics how you go about presenting your

00:01:32,549 --> 00:01:38,009
project in a new language and how you

00:01:34,680 --> 00:01:40,350
can help your open-source community by

00:01:38,009 --> 00:01:42,030
better internationalizing your website

00:01:40,350 --> 00:01:43,829
and how you can work with crowd-sourced

00:01:42,030 --> 00:01:46,909
translators to get some good

00:01:43,829 --> 00:01:49,680
translations so some background

00:01:46,909 --> 00:01:51,090
internationalization is our I 18 n

00:01:49,680 --> 00:01:54,240
stands for internationalization it's

00:01:51,090 --> 00:01:57,780
convenient shorthand i plus 18 letters

00:01:54,240 --> 00:02:00,030
plus n it's the engineering work that we

00:01:57,780 --> 00:02:01,590
do as software engineers to indicate

00:02:00,030 --> 00:02:04,969
which parts of our application are

00:02:01,590 --> 00:02:06,899
user-facing and require translation

00:02:04,969 --> 00:02:09,300
internationalization has only performed

00:02:06,899 --> 00:02:11,459
one time ideally it's as part of

00:02:09,300 --> 00:02:12,959
integrated feature development work so

00:02:11,459 --> 00:02:14,160
just as you would write unit tests for

00:02:12,959 --> 00:02:15,510
your work so you

00:02:14,160 --> 00:02:21,060
internationalize your user-facing

00:02:15,510 --> 00:02:23,520
strings localization l10n l+ ten letters

00:02:21,060 --> 00:02:27,710
plus n is the work to actually present

00:02:23,520 --> 00:02:29,970
your application to a different audience

00:02:27,710 --> 00:02:31,620
localization performed multiple times

00:02:29,970 --> 00:02:33,480
once per at least once for every

00:02:31,620 --> 00:02:35,340
specific region so you might localize

00:02:33,480 --> 00:02:39,140
for French and then decide to tackle

00:02:35,340 --> 00:02:41,340
Chinese and decide to tackle Arabic

00:02:39,140 --> 00:02:43,770
advantages of internationalizing your

00:02:41,340 --> 00:02:45,120
work is you know pretty obvious you want

00:02:43,770 --> 00:02:47,010
to increase the reach of your software

00:02:45,120 --> 00:02:49,200
what if your projects not at that point

00:02:47,010 --> 00:02:51,560
yet well I can tell you from rough

00:02:49,200 --> 00:02:53,970
experience that doing

00:02:51,560 --> 00:02:55,560
internationalization upfront will save

00:02:53,970 --> 00:02:57,300
you a lot of headache down the road if

00:02:55,560 --> 00:02:59,610
and when you do decide to localize your

00:02:57,300 --> 00:03:01,680
app imagine having to crawl all the

00:02:59,610 --> 00:03:03,240
dusty corners of code you wrote four

00:03:01,680 --> 00:03:05,850
years ago trying to find that last

00:03:03,240 --> 00:03:07,290
user-facing string it's much easier if

00:03:05,850 --> 00:03:10,740
you can integrate internationalization

00:03:07,290 --> 00:03:12,860
into part of your development work also

00:03:10,740 --> 00:03:14,730
if you're an open source project

00:03:12,860 --> 00:03:16,740
internationalization is going to be

00:03:14,730 --> 00:03:20,459
really really key to helping your open

00:03:16,740 --> 00:03:22,800
source community adopt your project at

00:03:20,459 --> 00:03:25,020
EDX our software is like I said used

00:03:22,800 --> 00:03:26,850
around the world and it's often used in

00:03:25,020 --> 00:03:29,040
languages and locales that we don't have

00:03:26,850 --> 00:03:31,500
live on our website for example on

00:03:29,040 --> 00:03:33,390
edx.org we don't host Arabic but there

00:03:31,500 --> 00:03:34,950
are at least two full fledged Arabic

00:03:33,390 --> 00:03:36,090
installations of our software and they

00:03:34,950 --> 00:03:37,470
were able to use the

00:03:36,090 --> 00:03:40,290
internationalization work that we had

00:03:37,470 --> 00:03:43,940
done up front to provide an Arabic use

00:03:40,290 --> 00:03:46,380
of our software so how does it all work

00:03:43,940 --> 00:03:47,100
the localization pipeline is actually

00:03:46,380 --> 00:03:49,800
pretty simple

00:03:47,100 --> 00:03:52,500
there are only four steps the first step

00:03:49,800 --> 00:03:55,500
is the internationalization step we mark

00:03:52,500 --> 00:03:58,290
our user facing strings for to indicate

00:03:55,500 --> 00:03:59,820
that they need translation so let's say

00:03:58,290 --> 00:04:03,660
we have some a little bit of Python code

00:03:59,820 --> 00:04:05,640
like this just for reference I'm going

00:04:03,660 --> 00:04:08,040
to be using examples from Django and

00:04:05,640 --> 00:04:10,470
Python too but the lessons are

00:04:08,040 --> 00:04:12,959
applicable for not just any Django

00:04:10,470 --> 00:04:14,760
project but any Python project in any

00:04:12,959 --> 00:04:17,430
language project the syntax might be a

00:04:14,760 --> 00:04:19,620
little bit different that's about it so

00:04:17,430 --> 00:04:22,940
to internationalize this we want to say

00:04:19,620 --> 00:04:25,770
that string hello needs to be translated

00:04:22,940 --> 00:04:27,030
so we do a couple of things we import a

00:04:25,770 --> 00:04:29,910
translation function

00:04:27,030 --> 00:04:31,920
this function is called get text in

00:04:29,910 --> 00:04:34,980
Python 2 we want to import you get text

00:04:31,920 --> 00:04:37,919
that you prefix stands for Unicode I'm

00:04:34,980 --> 00:04:39,930
gonna alias it as underscore I'm not

00:04:37,919 --> 00:04:41,220
sure why this is done but it's a pretty

00:04:39,930 --> 00:04:43,500
common convention I've seen it

00:04:41,220 --> 00:04:45,510
throughout PHP code and other language

00:04:43,500 --> 00:04:47,790
code then we're going to use this

00:04:45,510 --> 00:04:50,580
underscore function to wrap our string

00:04:47,790 --> 00:04:53,280
hello to indicate this is a string that

00:04:50,580 --> 00:04:57,240
needs translation that's it we are done

00:04:53,280 --> 00:04:59,070
internationalizing second step is that

00:04:57,240 --> 00:05:01,470
we need to scrape the strings we

00:04:59,070 --> 00:05:03,210
statically run through all of our code

00:05:01,470 --> 00:05:04,740
and we say what strings need to be

00:05:03,210 --> 00:05:07,320
International or what strings need to be

00:05:04,740 --> 00:05:09,090
translated in Django there's a really

00:05:07,320 --> 00:05:11,040
nifty command that will scrape all your

00:05:09,090 --> 00:05:13,290
Python files all your Django templates

00:05:11,040 --> 00:05:15,750
and collect them into what's known as a

00:05:13,290 --> 00:05:19,890
Pio file a Pio file is gonna look like

00:05:15,750 --> 00:05:22,740
this it has the where the the source

00:05:19,890 --> 00:05:25,169
line came from it's the key the message

00:05:22,740 --> 00:05:27,270
ID is the string that we scraped and the

00:05:25,169 --> 00:05:29,100
values that's translated value in our

00:05:27,270 --> 00:05:31,050
source Pio file we don't have a value

00:05:29,100 --> 00:05:34,160
because it wouldn't really make sense to

00:05:31,050 --> 00:05:36,510
translate English into English

00:05:34,160 --> 00:05:38,010
step three is translating the strings

00:05:36,510 --> 00:05:40,440
and there's a lot of different ways that

00:05:38,010 --> 00:05:43,680
you can do this at EDX we use a website

00:05:40,440 --> 00:05:45,330
called transifex transifex provides free

00:05:43,680 --> 00:05:47,700
accounts to open-source projects and

00:05:45,330 --> 00:05:50,370
allows crowdsource translators to come

00:05:47,700 --> 00:05:51,840
and translate for free this has been

00:05:50,370 --> 00:05:53,760
really great for our project because

00:05:51,840 --> 00:05:57,240
there are many users of our software who

00:05:53,760 --> 00:05:59,100
want to contribute to open EDX but may

00:05:57,240 --> 00:06:00,930
not be technically inclined don't know

00:05:59,100 --> 00:06:02,550
how to code to contribute they can

00:06:00,930 --> 00:06:06,210
contribute translations and that's a

00:06:02,550 --> 00:06:08,760
really big help to our project so once

00:06:06,210 --> 00:06:10,470
you have the translated Pio file you can

00:06:08,760 --> 00:06:13,590
download it and it look something like

00:06:10,470 --> 00:06:17,010
this so now we have a key that is hello

00:06:13,590 --> 00:06:19,770
and a value that is Bonjour for our

00:06:17,010 --> 00:06:21,360
French Pio file these POF files act kind

00:06:19,770 --> 00:06:23,460
of just like a Python dictionary so I'm

00:06:21,360 --> 00:06:26,520
saying he and value because the the

00:06:23,460 --> 00:06:29,310
message ID string that's the key we look

00:06:26,520 --> 00:06:33,300
up say what's the translation value for

00:06:29,310 --> 00:06:36,270
this key the final step is that we need

00:06:33,300 --> 00:06:38,400
to serve our strings we first I'm

00:06:36,270 --> 00:06:40,919
glossing over how you set up your

00:06:38,400 --> 00:06:41,440
website to serve translations Django

00:06:40,919 --> 00:06:43,800
provides

00:06:41,440 --> 00:06:46,000
Middleware it's quite easy to set up

00:06:43,800 --> 00:06:48,460
once you have that set up you compile

00:06:46,000 --> 00:06:50,290
your profiles to Mobe files django

00:06:48,460 --> 00:06:51,780
provides us with a really nifty function

00:06:50,290 --> 00:06:55,030
to do just that

00:06:51,780 --> 00:06:58,750
and now we get to runtime at runtime

00:06:55,030 --> 00:06:59,710
when the code a user who requests to see

00:06:58,750 --> 00:07:01,420
your website in another language

00:06:59,710 --> 00:07:04,270
encounters the line of code that says

00:07:01,420 --> 00:07:07,480
hello what happens was underscore

00:07:04,270 --> 00:07:09,670
function goes and looks up in the mo the

00:07:07,480 --> 00:07:11,980
the MoEF isle and says what's the value

00:07:09,670 --> 00:07:14,110
that you have for hello please give it

00:07:11,980 --> 00:07:16,240
to me but if you don't have a value just

00:07:14,110 --> 00:07:18,450
return what I put in so it's essentially

00:07:16,240 --> 00:07:20,650
like a Python safe dictionary lookup

00:07:18,450 --> 00:07:22,210
that's important because what it means

00:07:20,650 --> 00:07:24,160
is that if your translation files are

00:07:22,210 --> 00:07:26,290
not complete your application won't

00:07:24,160 --> 00:07:27,760
break you will always serve some string

00:07:26,290 --> 00:07:31,690
even if you don't have a translated

00:07:27,760 --> 00:07:33,820
value so that's it Marc's great

00:07:31,690 --> 00:07:37,900
translate serve and that's the

00:07:33,820 --> 00:07:42,280
localization pipeline but there's always

00:07:37,900 --> 00:07:46,560
a caveat the first three steps that I

00:07:42,280 --> 00:07:49,540
said the scrape Trant are the

00:07:46,560 --> 00:07:51,400
internationalize rape and translate they

00:07:49,540 --> 00:07:54,910
all happen before your application ever

00:07:51,400 --> 00:07:57,490
runs what do I mean by that what I mean

00:07:54,910 --> 00:07:59,440
by that is that this underscore function

00:07:57,490 --> 00:08:01,360
this get text function serves two

00:07:59,440 --> 00:08:03,400
purposes depending on what part of the

00:08:01,360 --> 00:08:06,010
pipeline you're in the beginning of the

00:08:03,400 --> 00:08:08,110
pipeline this is simply a lexical marker

00:08:06,010 --> 00:08:10,900
it's just saying I want to translate

00:08:08,110 --> 00:08:13,120
this string it's not until runtime that

00:08:10,900 --> 00:08:16,480
this actually becomes an executed

00:08:13,120 --> 00:08:18,700
function call this is important when we

00:08:16,480 --> 00:08:19,930
get into more complicated strengths so

00:08:18,700 --> 00:08:21,660
let's look at this string this string

00:08:19,930 --> 00:08:24,220
isn't just hello we're actually

00:08:21,660 --> 00:08:26,440
formatting this string inserting the

00:08:24,220 --> 00:08:29,680
user's name into it so how do we

00:08:26,440 --> 00:08:31,120
internationalize this well the simple

00:08:29,680 --> 00:08:33,400
way to do it is to just wrap the

00:08:31,120 --> 00:08:35,650
underscore function around that but

00:08:33,400 --> 00:08:38,409
here's a problem the problem here is

00:08:35,650 --> 00:08:40,030
that when we do the static scraping of

00:08:38,409 --> 00:08:42,430
this that formats not going to be

00:08:40,030 --> 00:08:45,190
executed formats not executed until

00:08:42,430 --> 00:08:49,630
runtime so what's the key in our Pio

00:08:45,190 --> 00:08:53,440
file the key is just gonna be hello for

00:08:49,630 --> 00:08:55,000
a brace name brace exclamation point but

00:08:53,440 --> 00:08:57,399
what's gonna happen at runtime

00:08:55,000 --> 00:08:59,079
let's say Susan visits your website and

00:08:57,399 --> 00:09:03,129
she wants to see the site in French I

00:08:59,079 --> 00:09:04,660
don't used her name is Susan and so when

00:09:03,129 --> 00:09:06,550
she has this line of code first this

00:09:04,660 --> 00:09:08,560
string is going to be defined and then

00:09:06,550 --> 00:09:11,649
the dot format is going to be executed

00:09:08,560 --> 00:09:16,269
and then the get text function is going

00:09:11,649 --> 00:09:19,269
to look up in the mo file hello Susan do

00:09:16,269 --> 00:09:21,519
we have a key of hello Susan is it

00:09:19,269 --> 00:09:23,290
reasonable to have a key of hello Susan

00:09:21,519 --> 00:09:26,350
to have a key in your Pio file for every

00:09:23,290 --> 00:09:28,839
single user of your site and that's not

00:09:26,350 --> 00:09:30,430
what we want to do so what we want to do

00:09:28,839 --> 00:09:33,699
is we want to make sure when we're

00:09:30,430 --> 00:09:36,310
internationalizing we mark up just the

00:09:33,699 --> 00:09:38,319
string to be internationalized so here

00:09:36,310 --> 00:09:39,850
in the lexical marker phase we're still

00:09:38,319 --> 00:09:42,550
gonna scrape the exact same thing

00:09:39,850 --> 00:09:46,360
hello variable name what happens at

00:09:42,550 --> 00:09:48,819
runtime at runtime we say hello name now

00:09:46,360 --> 00:09:52,959
we look that up in our mo file to get

00:09:48,819 --> 00:09:54,790
back the value Bonjour name and then the

00:09:52,959 --> 00:09:57,519
dot format is executed to give us

00:09:54,790 --> 00:10:02,800
Bonjour Susan and that's a string our

00:09:57,519 --> 00:10:04,420
user sees so I talked a little bit about

00:10:02,800 --> 00:10:06,339
what Django provides to support

00:10:04,420 --> 00:10:09,699
internationalization let's look a little

00:10:06,339 --> 00:10:11,589
bit more at those tools the Django i18n

00:10:09,699 --> 00:10:13,029
Docs are fabulous they're very very

00:10:11,589 --> 00:10:14,439
readable and I encourage you to check

00:10:13,029 --> 00:10:16,959
them out

00:10:14,439 --> 00:10:18,850
Mac Croydon gave a talk at Python a few

00:10:16,959 --> 00:10:21,939
years ago that goes a little bit more

00:10:18,850 --> 00:10:24,250
into depth to not just the get text

00:10:21,939 --> 00:10:26,199
function many of the other functions

00:10:24,250 --> 00:10:28,660
that Django provides as talks only

00:10:26,199 --> 00:10:30,279
slightly out of date and so you might

00:10:28,660 --> 00:10:31,629
want to read the the Django Docs after

00:10:30,279 --> 00:10:35,230
you watch that talk to get some of the

00:10:31,629 --> 00:10:38,379
more up-to-date functions so what

00:10:35,230 --> 00:10:41,410
happens if your application is more than

00:10:38,379 --> 00:10:43,689
just basic Django you have people who

00:10:41,410 --> 00:10:45,100
want to provide make oh templates

00:10:43,689 --> 00:10:46,899
underscore templates CoffeeScript

00:10:45,100 --> 00:10:48,759
JavaScript etc there are a lot of

00:10:46,899 --> 00:10:51,579
wonderful packages that exist out there

00:10:48,759 --> 00:10:53,170
to help you deal with this at EDX we've

00:10:51,579 --> 00:10:54,730
we've written a collection of scripts

00:10:53,170 --> 00:10:57,160
that help us tool our

00:10:54,730 --> 00:10:59,980
internationalization it handles all

00:10:57,160 --> 00:11:02,949
sorts of various file types and handles

00:10:59,980 --> 00:11:05,380
segmenting the PIO files your Pio files

00:11:02,949 --> 00:11:06,410
are these giant monolithic files for

00:11:05,380 --> 00:11:07,579
your entire app

00:11:06,410 --> 00:11:08,899
and sometimes when you're giving

00:11:07,579 --> 00:11:10,370
translators the file you'd like to

00:11:08,899 --> 00:11:13,310
segment them a little bit more finely

00:11:10,370 --> 00:11:15,829
along different app boundaries we also

00:11:13,310 --> 00:11:18,769
generate a dummy language for testing

00:11:15,829 --> 00:11:21,319
what this means is that in if you're

00:11:18,769 --> 00:11:23,209
trying to say did i internationalize

00:11:21,319 --> 00:11:24,529
this properly when I go to localize this

00:11:23,209 --> 00:11:28,329
will this string actually show up in

00:11:24,529 --> 00:11:30,620
another language a dummy language will

00:11:28,329 --> 00:11:31,910
translate into the dummy language which

00:11:30,620 --> 00:11:33,470
is just looks like English but it's

00:11:31,910 --> 00:11:35,149
totally accented so you can actually

00:11:33,470 --> 00:11:37,329
test that the pipeline is working

00:11:35,149 --> 00:11:37,329
properly

00:11:39,160 --> 00:11:45,649
so now we know how what we do on the

00:11:43,579 --> 00:11:47,660
engineering side what is that that third

00:11:45,649 --> 00:11:50,800
step that translation step that many of

00:11:47,660 --> 00:11:53,329
us really have no idea how that happens

00:11:50,800 --> 00:11:55,639
as I mentioned we use transifex

00:11:53,329 --> 00:11:57,920
and our open-source translators often

00:11:55,639 --> 00:11:59,689
are non-technical users and they may not

00:11:57,920 --> 00:12:01,370
have seen the entire application and

00:11:59,689 --> 00:12:03,170
this is probably true for many

00:12:01,370 --> 00:12:04,779
open-source projects you probably have

00:12:03,170 --> 00:12:08,449
corners of your app that are only

00:12:04,779 --> 00:12:10,519
visible by certain users so what this

00:12:08,449 --> 00:12:13,819
means when you are marking strings for

00:12:10,519 --> 00:12:16,189
for translation and we don't provide

00:12:13,819 --> 00:12:18,589
context the strings your translators are

00:12:16,189 --> 00:12:20,180
gonna be helpless let's look at this

00:12:18,589 --> 00:12:22,279
this is a real string from the

00:12:20,180 --> 00:12:24,829
application I work on that we are asking

00:12:22,279 --> 00:12:27,100
translators to translate and I have

00:12:24,829 --> 00:12:29,689
really no idea what this means

00:12:27,100 --> 00:12:31,579
particularly we uses weird positional

00:12:29,689 --> 00:12:34,250
variable here that could be an adjective

00:12:31,579 --> 00:12:37,550
or a number or all sorts of things and

00:12:34,250 --> 00:12:40,670
certain languages that have gendered

00:12:37,550 --> 00:12:43,130
nouns and different orders of numbers

00:12:40,670 --> 00:12:45,350
versus adjectives may have a really

00:12:43,130 --> 00:12:48,829
difficult time translating this so how

00:12:45,350 --> 00:12:51,110
can we provide more context here's a

00:12:48,829 --> 00:12:54,470
better string this string is great for

00:12:51,110 --> 00:12:56,389
two reasons it provides a named variable

00:12:54,470 --> 00:12:58,100
so we know that we're looking at a user

00:12:56,389 --> 00:13:01,279
name for the variable not an email

00:12:58,100 --> 00:13:03,439
address or a user ID and we also provide

00:13:01,279 --> 00:13:06,230
a little bit more context to the string

00:13:03,439 --> 00:13:08,240
so the developers note gives the

00:13:06,230 --> 00:13:10,069
translators the opportunity to stay or

00:13:08,240 --> 00:13:11,660
the developer is an opportunity say hey

00:13:10,069 --> 00:13:13,910
translators here's where this string is

00:13:11,660 --> 00:13:15,500
used here's how I'm gonna use it so that

00:13:13,910 --> 00:13:16,880
they can have the full context of your

00:13:15,500 --> 00:13:19,180
website when they go to translate this

00:13:16,880 --> 00:13:19,180
drink

00:13:19,590 --> 00:13:24,720
so let's look at some pro tips that we

00:13:22,260 --> 00:13:28,880
can use to internationalize better for

00:13:24,720 --> 00:13:31,320
our open source translators basic rules

00:13:28,880 --> 00:13:33,960
use dot format instead of string

00:13:31,320 --> 00:13:36,779
interpolation we know that % s and % D

00:13:33,960 --> 00:13:37,529
means string and digit interpolation but

00:13:36,779 --> 00:13:39,150
that's crazy

00:13:37,529 --> 00:13:41,490
we shouldn't expect our translators to

00:13:39,150 --> 00:13:43,170
know that moreover dot format is really

00:13:41,490 --> 00:13:44,430
awesome and super safe so if you're not

00:13:43,170 --> 00:13:47,760
using it for your strings I'm not sure

00:13:44,430 --> 00:13:51,690
why not use named and not positional

00:13:47,760 --> 00:13:54,180
variables so user as a variable name is

00:13:51,690 --> 00:13:57,750
way better than empty curly braces or

00:13:54,180 --> 00:14:00,540
zero and add translators comments and

00:13:57,750 --> 00:14:02,160
there is a syntax for this for different

00:14:00,540 --> 00:14:05,520
types of files to provide a little bit

00:14:02,160 --> 00:14:07,020
more context for your translators so

00:14:05,520 --> 00:14:09,839
here's an example of some code that

00:14:07,020 --> 00:14:12,360
follows all of those awesome tips we

00:14:09,839 --> 00:14:13,500
provide a translators comment we

00:14:12,360 --> 00:14:15,779
internationalized a string we give a

00:14:13,500 --> 00:14:20,910
great variable name we use that format

00:14:15,779 --> 00:14:22,440
after the return from get text here's

00:14:20,910 --> 00:14:26,550
another reason ie we should use name

00:14:22,440 --> 00:14:28,440
variables not only is this string not

00:14:26,550 --> 00:14:31,710
giving us a lot of context like what are

00:14:28,440 --> 00:14:35,339
those empty very braces intending to

00:14:31,710 --> 00:14:38,010
mean and I tell you these braces mean

00:14:35,339 --> 00:14:41,850
month and day what kind of bells does

00:14:38,010 --> 00:14:44,220
that ring for you yeah and in other

00:14:41,850 --> 00:14:45,900
languages in American English we say

00:14:44,220 --> 00:14:49,080
April 10th but in many other languages

00:14:45,900 --> 00:14:51,180
they would say in the 10th of April so

00:14:49,080 --> 00:14:54,810
using named variables allows variable

00:14:51,180 --> 00:14:56,460
reordering the biggest tip that I can

00:14:54,810 --> 00:14:58,950
give you is to keep your phrases

00:14:56,460 --> 00:15:00,720
together the smallest unit of text you

00:14:58,950 --> 00:15:03,000
should ever be translating it's full

00:15:00,720 --> 00:15:04,740
sentence or phrase so look at here this

00:15:03,000 --> 00:15:08,209
this programmer has no idea what they're

00:15:04,740 --> 00:15:12,300
doing and they've concatenated that is a

00:15:08,209 --> 00:15:14,940
plus the color of a car plus the phrase

00:15:12,300 --> 00:15:17,820
car so in English is gonna be awesome as

00:15:14,940 --> 00:15:19,950
that is a blue car but who in here

00:15:17,820 --> 00:15:21,810
speaks French and then is laughing at

00:15:19,950 --> 00:15:24,209
that one because that's totally wrong in

00:15:21,810 --> 00:15:29,310
French in French the adjective comes

00:15:24,209 --> 00:15:31,200
after the noun not before so if you keep

00:15:29,310 --> 00:15:32,740
the phrase together and do you

00:15:31,200 --> 00:15:34,270
internationalize and then use the

00:15:32,740 --> 00:15:36,459
for Matt to just plug in the variable

00:15:34,270 --> 00:15:38,080
that you need translators can reorder

00:15:36,459 --> 00:15:42,640
the sentence according to the needs of

00:15:38,080 --> 00:15:45,310
their language plurals are another big

00:15:42,640 --> 00:15:46,750
issue and thankfully there's a really

00:15:45,310 --> 00:15:49,600
excellent standard function for this

00:15:46,750 --> 00:15:53,320
it's called an get text it's imported

00:15:49,600 --> 00:15:55,120
from the standard library and unlike get

00:15:53,320 --> 00:15:57,420
text we never alias this we always use

00:15:55,120 --> 00:15:59,440
this explicitly as an get text and

00:15:57,420 --> 00:16:02,050
because we always want to make sure that

00:15:59,440 --> 00:16:05,260
everything's in Unicode we import the

00:16:02,050 --> 00:16:06,790
Unicode prefix and get text we use this

00:16:05,260 --> 00:16:09,339
function it's a pretty basic function

00:16:06,790 --> 00:16:11,170
call for an English source code you

00:16:09,339 --> 00:16:13,450
provide it 3 arguments the first

00:16:11,170 --> 00:16:15,760
argument is the English singular version

00:16:13,450 --> 00:16:17,380
of your son sentence or phrase the

00:16:15,760 --> 00:16:19,959
second argument is the plural version

00:16:17,380 --> 00:16:21,880
and the third version is the number that

00:16:19,959 --> 00:16:24,100
causes you to decide if you're

00:16:21,880 --> 00:16:26,740
displaying the singular or the plural so

00:16:24,100 --> 00:16:29,350
here we have there is num file there are

00:16:26,740 --> 00:16:32,470
num files and we're going to switch on

00:16:29,350 --> 00:16:34,779
the number of files now we want to plug

00:16:32,470 --> 00:16:36,820
in that number variable so then we use

00:16:34,779 --> 00:16:41,050
the dot format after we return from the

00:16:36,820 --> 00:16:42,760
end get text call how one get text works

00:16:41,050 --> 00:16:45,490
is actually very cool it's cool source

00:16:42,760 --> 00:16:47,230
code to dig around in and tools like

00:16:45,490 --> 00:16:50,410
transifex display a pretty awesome

00:16:47,230 --> 00:16:52,959
display to the user so here's a call and

00:16:50,410 --> 00:16:55,120
get text string this is the translator

00:16:52,959 --> 00:16:56,709
view so the top part is the English

00:16:55,120 --> 00:16:58,360
source string and you see there's a

00:16:56,709 --> 00:17:01,149
toggle there to show the singular and

00:16:58,360 --> 00:17:03,850
the plural version of this string Arabic

00:17:01,149 --> 00:17:05,709
has six plural forms so you can see here

00:17:03,850 --> 00:17:08,140
the Arabic translator is asked to

00:17:05,709 --> 00:17:10,179
provide all six plural forms before they

00:17:08,140 --> 00:17:12,250
can move on with the translation and

00:17:10,179 --> 00:17:14,470
then get text has some cool machinery to

00:17:12,250 --> 00:17:19,470
decide which plural to choose for which

00:17:14,470 --> 00:17:22,660
language so the looking at this example

00:17:19,470 --> 00:17:24,850
this is code I see a lot and it seems

00:17:22,660 --> 00:17:26,829
pretty reasonable if the number of tags

00:17:24,850 --> 00:17:28,720
is greater than two we want to display

00:17:26,829 --> 00:17:30,940
this string and the string is always

00:17:28,720 --> 00:17:34,690
going to be plural right so we can just

00:17:30,940 --> 00:17:35,980
internationalize it this way but this

00:17:34,690 --> 00:17:38,260
isn't going to work for in languages

00:17:35,980 --> 00:17:41,290
like Arabic that have six plural forms

00:17:38,260 --> 00:17:42,970
or languages that have crazy plurals I

00:17:41,290 --> 00:17:44,470
look up Polish and a lot of other

00:17:42,970 --> 00:17:45,250
Eastern European languages where it

00:17:44,470 --> 00:17:49,360
depends on the fine

00:17:45,250 --> 00:17:50,860
digit so the safest road to go is that

00:17:49,360 --> 00:17:52,840
even when you think this is always going

00:17:50,860 --> 00:17:55,240
to be a plural string is in English is

00:17:52,840 --> 00:17:58,510
to always use and get texts that you can

00:17:55,240 --> 00:18:02,500
account for all kinds of different users

00:17:58,510 --> 00:18:05,590
and locales a quick tip that we've

00:18:02,500 --> 00:18:08,800
learned is we remove as best as we can

00:18:05,590 --> 00:18:09,850
the HTML from all strings I said in the

00:18:08,800 --> 00:18:11,290
beginning that if you're doing

00:18:09,850 --> 00:18:13,210
crowd-sourced translations your

00:18:11,290 --> 00:18:16,360
translators really may not be technical

00:18:13,210 --> 00:18:19,300
they may not understand the meaning of

00:18:16,360 --> 00:18:21,100
HTML strings a tool like transifex does

00:18:19,300 --> 00:18:23,470
provide validation that all the strings

00:18:21,100 --> 00:18:26,290
are there and in a non-breaking order it

00:18:23,470 --> 00:18:28,210
doesn't necessarily say that if you have

00:18:26,290 --> 00:18:31,200
tags in a specific around a specific

00:18:28,210 --> 00:18:35,140
string you have classes on your

00:18:31,200 --> 00:18:37,000
paragraph tag or you have an H ref

00:18:35,140 --> 00:18:38,800
that's this really long URL but the

00:18:37,000 --> 00:18:40,780
translators haven't changed those things

00:18:38,800 --> 00:18:43,600
so the safest course of action is just

00:18:40,780 --> 00:18:45,190
to remove HTML there's a bunch of

00:18:43,600 --> 00:18:47,470
different ways to do this here's a

00:18:45,190 --> 00:18:50,890
pretty basic way we want to translate

00:18:47,470 --> 00:18:52,330
this welcome phrase and so let's just

00:18:50,890 --> 00:18:55,240
translate the word welcome and

00:18:52,330 --> 00:18:58,930
concatenate the emphasis tags around

00:18:55,240 --> 00:19:00,640
that remember that the get text function

00:18:58,930 --> 00:19:02,320
you get text is always going to return a

00:19:00,640 --> 00:19:04,240
Unicode object so we want to make sure

00:19:02,320 --> 00:19:05,530
that we're preserving the unicode

00:19:04,240 --> 00:19:07,660
sandwich by making sure that the

00:19:05,530 --> 00:19:11,710
concatenated objects are always unicode

00:19:07,660 --> 00:19:13,720
strings themselves another way you could

00:19:11,710 --> 00:19:16,300
do this is here we have emphasis tags

00:19:13,720 --> 00:19:17,920
around a variable so why don't we make

00:19:16,300 --> 00:19:20,590
our code a little bit more complicated

00:19:17,920 --> 00:19:25,210
to take those emphases tags out of the

00:19:20,590 --> 00:19:27,280
translation string and put them into the

00:19:25,210 --> 00:19:29,650
dot format string so that's making you

00:19:27,280 --> 00:19:31,450
know the dot format stands is a little

00:19:29,650 --> 00:19:34,500
bit more complicated but what we're

00:19:31,450 --> 00:19:37,540
passing to translator's is very clear

00:19:34,500 --> 00:19:39,850
another way is to just make the the

00:19:37,540 --> 00:19:42,280
phrase itself its own variable and then

00:19:39,850 --> 00:19:46,540
just shove that translated phrase into

00:19:42,280 --> 00:19:49,030
where you need it don't leave order to

00:19:46,540 --> 00:19:50,530
chance and you have an asterisk at the

00:19:49,030 --> 00:19:52,510
end of a phrase because it's in your

00:19:50,530 --> 00:19:55,720
login form and that asterisk means that

00:19:52,510 --> 00:19:57,220
it's required and what you're gonna do

00:19:55,720 --> 00:19:58,480
you're asked translators please leave

00:19:57,220 --> 00:19:59,170
the asterisk at the end how are you

00:19:58,480 --> 00:20:00,970
gonna enforce

00:19:59,170 --> 00:20:03,190
that you're gonna look through every

00:20:00,970 --> 00:20:06,010
locale file and make sure every instance

00:20:03,190 --> 00:20:08,290
of the string up ends at an asterisk and

00:20:06,010 --> 00:20:10,480
that's a little crazy when you can just

00:20:08,290 --> 00:20:13,090
use something like modifier CSS or just

00:20:10,480 --> 00:20:19,210
append this the asterisk directly to the

00:20:13,090 --> 00:20:21,430
result from you get text try to keep

00:20:19,210 --> 00:20:23,200
your strings constant every time you

00:20:21,430 --> 00:20:26,290
change your string it's gonna result in

00:20:23,200 --> 00:20:28,210
a new entry in your dot po file and that

00:20:26,290 --> 00:20:31,060
can be something as stupid as you change

00:20:28,210 --> 00:20:34,540
some punctuation you capitalize or you

00:20:31,060 --> 00:20:37,240
lowercase a very a phrase and so if you

00:20:34,540 --> 00:20:38,560
keep your changes to a minimum your

00:20:37,240 --> 00:20:40,660
translators will have to do less work

00:20:38,560 --> 00:20:42,700
and you can get around this creatively

00:20:40,660 --> 00:20:45,100
in Python too if you have a string the

00:20:42,700 --> 00:20:47,050
lower login and you need that L to be

00:20:45,100 --> 00:20:51,790
uppercase then just call dot capitalize

00:20:47,050 --> 00:20:53,800
on the result from get text in general

00:20:51,790 --> 00:20:57,130
when dealing with open source crowd

00:20:53,800 --> 00:20:58,750
source translations your engineering

00:20:57,130 --> 00:21:01,420
team should take the hit for the sake of

00:20:58,750 --> 00:21:02,650
the translators the translated if the

00:21:01,420 --> 00:21:05,080
strings you're passing to the Strand

00:21:02,650 --> 00:21:07,090
translators are super clear have a lot

00:21:05,080 --> 00:21:09,310
of context and don't have a bunch of

00:21:07,090 --> 00:21:10,660
crazy coded markup in them all your

00:21:09,310 --> 00:21:12,070
translators are gonna have a good time

00:21:10,660 --> 00:21:13,840
translating they're gonna produce

00:21:12,070 --> 00:21:16,240
higher-quality translations and they're

00:21:13,840 --> 00:21:17,890
gonna keep coming back just like if you

00:21:16,240 --> 00:21:20,920
have a code base that's really crazy

00:21:17,890 --> 00:21:22,840
and you have no outreach to open source

00:21:20,920 --> 00:21:25,090
community members your open source

00:21:22,840 --> 00:21:29,470
community won't grow similarly to your

00:21:25,090 --> 00:21:30,760
translation community a couple of extra

00:21:29,470 --> 00:21:32,350
things that I just want to touch on

00:21:30,760 --> 00:21:33,910
briefly but you're gonna have to

00:21:32,350 --> 00:21:35,440
consider as you walk down the road of

00:21:33,910 --> 00:21:39,250
internationalizing and localizing your

00:21:35,440 --> 00:21:41,910
site so non-latin characters may be

00:21:39,250 --> 00:21:43,780
taller and wider than latin characters

00:21:41,910 --> 00:21:45,880
German and Dutch can have these

00:21:43,780 --> 00:21:50,890
extremely long words that are unbroken

00:21:45,880 --> 00:21:54,040
with no spaces Arabic Hebrew or do Farsi

00:21:50,890 --> 00:21:56,530
are right-to-left so what does all this

00:21:54,040 --> 00:21:58,750
mean find yourself a good UX designer

00:21:56,530 --> 00:22:01,480
and talk to them about responsive design

00:21:58,750 --> 00:22:03,640
and a layout grid management system if

00:22:01,480 --> 00:22:05,800
you were using sass there's an excellent

00:22:03,640 --> 00:22:08,710
mixin that we use at EDX called by app

00:22:05,800 --> 00:22:10,510
it allows you to indicate positional

00:22:08,710 --> 00:22:12,120
variables left and right that these are

00:22:10,510 --> 00:22:14,370
positional variables and

00:22:12,120 --> 00:22:17,190
compile-time two separate sets of sass

00:22:14,370 --> 00:22:18,840
are compiled that can be switched based

00:22:17,190 --> 00:22:21,660
on the language the user is requesting

00:22:18,840 --> 00:22:25,010
we use a thoughtbot product called meet

00:22:21,660 --> 00:22:27,600
grid to do our grid layout

00:22:25,010 --> 00:22:30,360
don't forget dates and numbers dates and

00:22:27,600 --> 00:22:31,440
numbers need to be localized as well and

00:22:30,360 --> 00:22:35,040
there are a lot of different ways to do

00:22:31,440 --> 00:22:37,860
this and if you're a very large project

00:22:35,040 --> 00:22:40,470
or you're a commercial project a couple

00:22:37,860 --> 00:22:43,950
of recommendations that I have is one to

00:22:40,470 --> 00:22:45,870
hire localization manager a localization

00:22:43,950 --> 00:22:48,630
manager can help you keep all of this

00:22:45,870 --> 00:22:51,420
straight and two is to pay for

00:22:48,630 --> 00:22:54,060
translation services at EDX we've paid

00:22:51,420 --> 00:22:55,170
for a bit of translation services and

00:22:54,060 --> 00:22:58,380
I've been really impressed with the

00:22:55,170 --> 00:23:01,650
results people who are translators as a

00:22:58,380 --> 00:23:03,420
professional career really have a deeper

00:23:01,650 --> 00:23:07,050
understanding of the technical ins and

00:23:03,420 --> 00:23:09,510
outs of what websites are asking users

00:23:07,050 --> 00:23:11,340
to do can suggest better translations

00:23:09,510 --> 00:23:12,750
and can point out issues that you may

00:23:11,340 --> 00:23:16,830
have with your strings that are marked

00:23:12,750 --> 00:23:18,570
or translations a couple of resources I

00:23:16,830 --> 00:23:20,730
encourage you to check out if you

00:23:18,570 --> 00:23:22,440
haven't seen that batchelder's talk on

00:23:20,730 --> 00:23:24,600
the Unicode sandwich

00:23:22,440 --> 00:23:26,880
you should before you start this journey

00:23:24,600 --> 00:23:28,320
because I promise you that as soon as

00:23:26,880 --> 00:23:30,360
you start localizing your website you're

00:23:28,320 --> 00:23:33,090
gonna end up with a ton of Unicode

00:23:30,360 --> 00:23:36,120
errors and understanding the whole

00:23:33,090 --> 00:23:38,610
Unicode what gym have it is really

00:23:36,120 --> 00:23:39,930
important we've written a lot of

00:23:38,610 --> 00:23:42,840
comprehensive guidelines about

00:23:39,930 --> 00:23:45,270
internationalization for EDX I strongly

00:23:42,840 --> 00:23:46,650
recommend that you check it out and the

00:23:45,270 --> 00:23:52,230
slides from this presentation are

00:23:46,650 --> 00:23:54,720
available at Sarina github I oh sorry

00:23:52,230 --> 00:23:56,130
that I probably talked really fast but

00:23:54,720 --> 00:23:59,450
thank you for being a great audience and

00:23:56,130 --> 00:23:59,450
I'd be happy to take your questions

00:24:00,030 --> 00:24:10,540
Thank You Serena so one thing that was a

00:24:08,680 --> 00:24:12,130
food for thought I came from a

00:24:10,540 --> 00:24:16,860
background where is not more

00:24:12,130 --> 00:24:20,140
where's not really a web app testing so

00:24:16,860 --> 00:24:22,590
the narrow screen on a smartphone it's

00:24:20,140 --> 00:24:27,100
going to be very problematic for

00:24:22,590 --> 00:24:28,540
languages like Dutch or German a lot of

00:24:27,100 --> 00:24:30,010
times they would translate the word

00:24:28,540 --> 00:24:33,520
because they don't know they have no

00:24:30,010 --> 00:24:35,680
visual context of how the word appears

00:24:33,520 --> 00:24:37,450
they will translate it way too long and

00:24:35,680 --> 00:24:39,670
we'll have to send them back and tell

00:24:37,450 --> 00:24:41,530
them to translate it the other thing

00:24:39,670 --> 00:24:44,800
that I that was interesting that you

00:24:41,530 --> 00:24:47,350
mentioned were different heights for for

00:24:44,800 --> 00:24:50,050
example for Chinese or for German length

00:24:47,350 --> 00:24:53,040
the one that was the trickiest was was

00:24:50,050 --> 00:24:56,590
Thai because it was variable height

00:24:53,040 --> 00:24:58,540
thank you that was really tricky yeah

00:24:56,590 --> 00:24:59,890
definitely I actually had Thai on the

00:24:58,540 --> 00:25:01,630
slide before but I didn't know anybody

00:24:59,890 --> 00:25:03,760
who speak Thai to give me a phrase and

00:25:01,630 --> 00:25:08,140
Thai that wasn't offensive so ended up

00:25:03,760 --> 00:25:10,480
going with Chinese for that slide thanks

00:25:08,140 --> 00:25:12,160
a lot for a great talk I have a couple

00:25:10,480 --> 00:25:15,520
of questions so one is did you ever have

00:25:12,160 --> 00:25:19,510
to deal with dynamic translation so for

00:25:15,520 --> 00:25:21,340
text that you did not pre translate you

00:25:19,510 --> 00:25:25,090
know it's like using a fuzzy translator

00:25:21,340 --> 00:25:26,410
or something so you had to oh so wait

00:25:25,090 --> 00:25:28,960
I'm not sure I'm understanding your

00:25:26,410 --> 00:25:30,520
question sorry so what I mean is did you

00:25:28,960 --> 00:25:34,450
ever have to localize or

00:25:30,520 --> 00:25:36,610
internationalize for dynamic content for

00:25:34,450 --> 00:25:39,250
dynamic content no right now Oliver the

00:25:36,610 --> 00:25:41,890
content that we're localizing is static

00:25:39,250 --> 00:25:45,100
content we're looking into dynamic

00:25:41,890 --> 00:25:48,850
content and transifex has a JavaScript

00:25:45,100 --> 00:25:50,500
plug-in that allows you to it scrapes

00:25:48,850 --> 00:25:52,810
your pages on your site and actually

00:25:50,500 --> 00:25:53,980
gives translators the page as its

00:25:52,810 --> 00:25:56,080
rendered and they can translate

00:25:53,980 --> 00:25:58,060
different blocks so we're looking for

00:25:56,080 --> 00:26:01,660
them to that as one of many options for

00:25:58,060 --> 00:26:06,490
for dynamic content okay and you

00:26:01,660 --> 00:26:08,680
mentioned trance trance effects so do

00:26:06,490 --> 00:26:11,370
you if your site is not publicly

00:26:08,680 --> 00:26:13,140
available can you just send them message

00:26:11,370 --> 00:26:16,559
they would translate that how does that

00:26:13,140 --> 00:26:18,750
work so for transifex transifex if you

00:26:16,559 --> 00:26:20,790
are not an open-source site you cannot

00:26:18,750 --> 00:26:22,050
get a free account and so you have to

00:26:20,790 --> 00:26:23,340
pay for an account if you're closed

00:26:22,050 --> 00:26:26,220
source and I'm not really sure how that

00:26:23,340 --> 00:26:28,890
works there are a lot of different

00:26:26,220 --> 00:26:30,300
translation websites out there and there

00:26:28,890 --> 00:26:31,890
are actually some really great ones that

00:26:30,300 --> 00:26:33,840
are domain-specific so if you have like

00:26:31,890 --> 00:26:37,350
videos for example Amara is a great

00:26:33,840 --> 00:26:39,630
platform we just chose trans effects

00:26:37,350 --> 00:26:41,550
like particularly because as an open

00:26:39,630 --> 00:26:42,930
source project and you know we weren't

00:26:41,550 --> 00:26:45,300
going to present translations on our

00:26:42,930 --> 00:26:48,059
website yet we were really interested in

00:26:45,300 --> 00:26:52,890
that free account thanks a lot

00:26:48,059 --> 00:26:54,390
thank you very much sorry I don't know

00:26:52,890 --> 00:26:57,230
if you guys have any experience with

00:26:54,390 --> 00:27:00,470
this at EDX I was wondering about the

00:26:57,230 --> 00:27:03,150
the tools perhaps that you might use for

00:27:00,470 --> 00:27:04,290
where the logic is client-side and so

00:27:03,150 --> 00:27:06,150
you have to have the translations

00:27:04,290 --> 00:27:09,630
client-side as well and like in

00:27:06,150 --> 00:27:10,800
JavaScript I am Not sure that the

00:27:09,630 --> 00:27:13,800
question is like how do we deal with

00:27:10,800 --> 00:27:15,900
client-side translations and we haven't

00:27:13,800 --> 00:27:17,580
had to deal with that all of our all the

00:27:15,900 --> 00:27:20,730
code we translate is in templates

00:27:17,580 --> 00:27:25,080
JavaScript and Python code okay thank

00:27:20,730 --> 00:27:26,700
you as far as the internationalization

00:27:25,080 --> 00:27:28,860
side goes do you have any

00:27:26,700 --> 00:27:31,050
recommendations or first steps for an

00:27:28,860 --> 00:27:34,110
already existing large multi module

00:27:31,050 --> 00:27:36,660
application that's a good question

00:27:34,110 --> 00:27:38,370
you know I would probably say the

00:27:36,660 --> 00:27:40,559
largest bang for your buck is to start

00:27:38,370 --> 00:27:42,860
with your most visible pages and start

00:27:40,559 --> 00:27:45,480
marking up for internationalization

00:27:42,860 --> 00:27:47,640
there's a lot of people in other

00:27:45,480 --> 00:27:50,490
countries who have a ton of experience

00:27:47,640 --> 00:27:53,550
with this and I'd be remiss if I didn't

00:27:50,490 --> 00:27:54,870
thank a bunch of Engineers at Xinhua

00:27:53,550 --> 00:27:57,630
University and a few other universities

00:27:54,870 --> 00:28:00,840
in China who've really helped us shore

00:27:57,630 --> 00:28:03,540
up our internationalization you know

00:28:00,840 --> 00:28:05,040
because as as Chinese users using code

00:28:03,540 --> 00:28:06,330
that's written mostly written in English

00:28:05,040 --> 00:28:08,690
they have a lot more experience with

00:28:06,330 --> 00:28:10,950
internationalization than a lot of us do

00:28:08,690 --> 00:28:12,330
but if you can make it a push with your

00:28:10,950 --> 00:28:14,420
community you know we're really we're

00:28:12,330 --> 00:28:16,679
looking to internationalize our site and

00:28:14,420 --> 00:28:18,750
you know here's our plan here are the

00:28:16,679 --> 00:28:20,429
modules we want to attack first I

00:28:18,750 --> 00:28:21,059
wouldn't be surprised if people got

00:28:20,429 --> 00:28:25,499
really excited

00:28:21,059 --> 00:28:30,059
that could help you out thank you hey

00:28:25,499 --> 00:28:32,129
thank you for your talk so any project

00:28:30,059 --> 00:28:35,009
that I do I have to support at least two

00:28:32,129 --> 00:28:38,070
languages Arabic and English and I just

00:28:35,009 --> 00:28:41,009
want to know what is the rule of thumb

00:28:38,070 --> 00:28:44,970
for supporting RTL and left-to-right

00:28:41,009 --> 00:28:46,080
languages on the same template that's a

00:28:44,970 --> 00:28:47,850
that's a good question how do you

00:28:46,080 --> 00:28:50,519
support both left to right and right to

00:28:47,850 --> 00:28:55,440
left languages you know within your code

00:28:50,519 --> 00:29:00,720
base so what we do at EDX is that we use

00:28:55,440 --> 00:29:02,279
SAS it's a pretty robust because and we

00:29:00,720 --> 00:29:04,409
have everything laid out on a grid and

00:29:02,279 --> 00:29:05,789
when we define things as being on the

00:29:04,409 --> 00:29:07,499
left side of the side or the right side

00:29:05,789 --> 00:29:10,289
of the site we use that mix and I was

00:29:07,499 --> 00:29:12,529
talking about by app SAS and so what you

00:29:10,289 --> 00:29:16,490
can if you have a rule that is like

00:29:12,529 --> 00:29:21,179
margin colon left instead you do margin

00:29:16,490 --> 00:29:24,659
@include left and when in your

00:29:21,179 --> 00:29:26,009
compilation process this is a part I'm

00:29:24,659 --> 00:29:28,200
not really sure how it works but in your

00:29:26,009 --> 00:29:30,600
compilation process for your SAS instead

00:29:28,200 --> 00:29:32,340
of compiling one set of SAS by up steps

00:29:30,600 --> 00:29:35,009
in and any time it sees one of those

00:29:32,340 --> 00:29:37,409
rules it will compile it either as left

00:29:35,009 --> 00:29:38,820
or as right depending on if it's

00:29:37,409 --> 00:29:41,039
compiling the left to right or the right

00:29:38,820 --> 00:29:43,649
to left SAS so now you have two sets of

00:29:41,039 --> 00:29:46,139
SAS in your application and there's ways

00:29:43,649 --> 00:29:48,960
to make sure that when your user selects

00:29:46,139 --> 00:29:51,679
English or Arabic the different set of

00:29:48,960 --> 00:29:53,549
SAS file is is chosen and it's all very

00:29:51,679 --> 00:29:57,169
seamless and I can show you it if you

00:29:53,549 --> 00:29:57,169
want to see afterwards

00:30:05,549 --> 00:30:11,730
so get text is actually based off of the

00:30:09,659 --> 00:30:13,679
Django translation library is like the

00:30:11,730 --> 00:30:16,619
very thin wrapper with just a couple of

00:30:13,679 --> 00:30:17,669
additional functionalities over pythons

00:30:16,619 --> 00:30:22,460
get text library

00:30:17,669 --> 00:30:22,460
so get text is in Python itself

00:30:22,610 --> 00:30:27,450
moreover the Python get text is based on

00:30:25,470 --> 00:30:29,399
the nougat text so it's all these very

00:30:27,450 --> 00:30:31,700
standard libraries that are defined not

00:30:29,399 --> 00:30:33,929
just in Python but across all platforms

00:30:31,700 --> 00:30:34,740
so depending on whatever if you're using

00:30:33,929 --> 00:30:36,720
a web frame

00:30:34,740 --> 00:30:38,789
they may have a translation module that

00:30:36,720 --> 00:30:40,620
you can import with the the syntax I

00:30:38,789 --> 00:30:42,690
would expect to be roughly the same as

00:30:40,620 --> 00:30:47,960
what Jango is doing this is based on the

00:30:42,690 --> 00:30:47,960
Python ones great thanks

00:30:49,909 --> 00:30:58,649
Karina thank you very much thank you

00:30:53,490 --> 00:31:02,779
those guys and uh lightning talks in our

00:30:58,649 --> 00:31:02,779

YouTube URL: https://www.youtube.com/watch?v=UOOMFGURr5I


