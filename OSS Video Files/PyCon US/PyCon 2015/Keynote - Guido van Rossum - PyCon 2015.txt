Title: Keynote - Guido van Rossum - PyCon 2015
Publication date: 2015-04-16
Playlist: PyCon 2015
Description: 
	
Captions: 
	00:00:19,920 --> 00:00:27,510
[Applause] Hello, everybody.

00:00:27,510 --> 00:00:32,840
Glad to see you all.

00:00:32,840 --> 00:00:40,489
I have been incredibly inspired by the conference, any idea I had for the keynote was sort of

00:00:40,489 --> 00:00:44,410
kicked over and changed.

00:00:44,410 --> 00:00:48,440
And I want to make mostly interactive but I want to start with a few of the topics that

00:00:48,440 --> 00:00:51,440
I know are going to come up anyway.

00:00:51,440 --> 00:01:01,180
Now I don't want to get too much in this grandpa, tell us again the story you found the potato

00:01:01,180 --> 00:01:05,530
in the shape of the head of Elvis' head.

00:01:05,530 --> 00:01:14,090
I have lots of stories like that they get better every time but better you tell over

00:01:14,090 --> 00:01:17,190
dinner or beer or something.

00:01:17,190 --> 00:01:19,799
Let's first get Python 3 out of the way.

00:01:19,799 --> 00:01:22,820
Yes, you should all be using Python 3.

00:01:22,820 --> 00:01:27,740
I know that you all want to.

00:01:27,740 --> 00:01:34,229
[Applause] But I know it's difficult.

00:01:34,229 --> 00:01:42,550
You all have large amounts of Python 2 code in production that you've you have 2.79 you're

00:01:42,550 --> 00:01:46,990
very proud of that accomplishment you should be.

00:01:46,990 --> 00:01:51,270
But the step to Python 3 from there is still phenomenal.

00:01:51,270 --> 00:01:59,659
And you have to -- you can't just fix a few little style things and remove a few Ls from

00:01:59,659 --> 00:02:01,659
long integers.

00:02:01,659 --> 00:02:04,090
You have to actually understand your code.

00:02:04,090 --> 00:02:09,100
And so, we've given you five more years.

00:02:09,100 --> 00:02:16,300
[Laughter] During which you all with your existing motivation

00:02:16,300 --> 00:02:20,800
will be able to sort of put the work in.

00:02:20,800 --> 00:02:28,950
I know how hard the work is because you don't get the satisfaction of, I launched a new

00:02:28,950 --> 00:02:29,950
feature, no.

00:02:29,950 --> 00:02:35,730
I rewrote the aim app in Python 3 I ported it to a new version of Python does it do the

00:02:35,730 --> 00:02:36,730
same thing?

00:02:36,730 --> 00:02:37,730
Yes.

00:02:37,730 --> 00:02:39,239
Does it do exactly the same thing.

00:02:39,239 --> 00:02:40,239
Hopefully.

00:02:40,239 --> 00:02:41,349
Is it -- [ laughter ]

00:02:41,349 --> 00:02:44,040
Is it exciting launch?

00:02:44,040 --> 00:02:45,620
No.

00:02:45,620 --> 00:02:51,900
But you have to do the work because then your next feature that you launch will go better.

00:02:51,900 --> 00:03:02,549
But, if something holds you up -- there are lots of things that still suck in the ecosystem

00:03:02,549 --> 00:03:07,080
where it comes to Python 3 support.

00:03:07,080 --> 00:03:11,549
I'm quoting glyph, I didn't do any research myself and glyph admitted that there were

00:03:11,549 --> 00:03:15,120
some problems with the methodology.

00:03:15,120 --> 00:03:22,410
He looked on Pypi he sort of said, well, there are 55,000 packages there.

00:03:22,410 --> 00:03:25,450
And 5,000 of them claim to work with Python 3.

00:03:25,450 --> 00:03:28,540
So that's less than 10%.

00:03:28,540 --> 00:03:34,620
Those 5,000 include 1,000 most popular download packages.

00:03:34,620 --> 00:03:36,829
That's good.

00:03:36,829 --> 00:03:44,580
And so glyph showed a typical sort of mid tier application and the reason that it itself

00:03:44,580 --> 00:03:52,469
could not be ported to Python 3 yet was that it had like seven or eight dependencies all

00:03:52,469 --> 00:04:00,500
of which are in long tail of those 50,000 packages that haven't been ported yet.

00:04:00,500 --> 00:04:03,239
What do you do with those?

00:04:03,239 --> 00:04:10,430
You can sort of go track down the offer and ask for a port to Python 3.

00:04:10,430 --> 00:04:16,100
But what happens is often these long sails of packages -- long tails of packages they're

00:04:16,100 --> 00:04:17,329
like spikes.

00:04:17,329 --> 00:04:26,100
Somebody came up with, oh, the ultimate Django picker, I'm piking that, if you wrote the

00:04:26,100 --> 00:04:30,740
Django picker I'm not trying to pick on you.

00:04:30,740 --> 00:04:35,800
You write ultimate Django picker because you're working on a website that needs a date picker,

00:04:35,800 --> 00:04:39,970
you do the right thing you sort of clean your code up a little bit you make it available

00:04:39,970 --> 00:04:40,970
as open source.

00:04:40,970 --> 00:04:49,250
And, now you're a BDFL of the open source project only 5,000 lines of Python or 5,000

00:04:49,250 --> 00:04:54,710
lines of CSS and hundred lines of Python, still.

00:04:54,710 --> 00:05:01,110
You've got -- you get a project, your bug tracker and other -- e-mail addressing people

00:05:01,110 --> 00:05:02,760
send you features requests.

00:05:02,760 --> 00:05:05,980
But you not all that interested.

00:05:05,980 --> 00:05:11,740
And then year later maybe you change jobs, you no longer working with Django, you're

00:05:11,740 --> 00:05:20,690
working with flask or rails or java or you're building hardware or you're happily retired.

00:05:20,690 --> 00:05:24,140
Growing grapes.

00:05:24,140 --> 00:05:27,350
But your name is still on that Django date package.

00:05:27,350 --> 00:05:32,290
How do you think that Django date package gets ported to high on this 3?

00:05:32,290 --> 00:05:34,140
It doesn't.

00:05:34,140 --> 00:05:39,470
Everybody still looking to you as the owner of that package.

00:05:39,470 --> 00:05:42,130
To ported to Python 3.

00:05:42,130 --> 00:05:43,540
You don't care.

00:05:43,540 --> 00:05:46,250
You want to grow grapes.

00:05:46,250 --> 00:05:51,900
Well, what should we as a community do?

00:05:51,900 --> 00:06:01,280
Should we getting angry at you because you're no longer maintaining your code?

00:06:01,280 --> 00:06:05,070
I think we should be grateful that you wrote your code and gave it to us otherwise we would

00:06:05,070 --> 00:06:10,050
have to write the less ultimate date picker.

00:06:10,050 --> 00:06:18,080
But it would be nice if when you decide to go grape picking or grape growing, much more

00:06:18,080 --> 00:06:25,440
lucrative, that you can sort of -- put all these software packages that you own, you

00:06:25,440 --> 00:06:33,360
can put them in a home where they're being taken good care of by other people.

00:06:33,360 --> 00:06:38,230
Or, just sort of put them up for sale.

00:06:38,230 --> 00:06:40,630
Or for adoption.

00:06:40,630 --> 00:06:51,030
Gently used, not maintenance, needs port to Python 3.

00:06:51,030 --> 00:06:55,910
But I've never seen such an announcement.

00:06:55,910 --> 00:07:03,150
Occasionally seen hostile forks I've occasionally seen people complain about certain ports not

00:07:03,150 --> 00:07:04,630
happening.

00:07:04,630 --> 00:07:13,972
I've never seen an owner sort of actively search for a new maintainer for a package

00:07:13,972 --> 00:07:19,410
that they wrote, but they no longer care.

00:07:19,410 --> 00:07:24,660
And they care a little bit, because if they wrote ten packages, they sort of put it on

00:07:24,660 --> 00:07:25,660
their resume.

00:07:25,660 --> 00:07:28,720
They say, I wrote ten different pieces of open source, here they are.

00:07:28,720 --> 00:07:30,050
They are widely used.

00:07:30,050 --> 00:07:37,020
You can look them up that sort of gives the employer a good bit of confidence.

00:07:37,020 --> 00:07:38,020
That's great.

00:07:38,020 --> 00:07:41,900
So, maybe they don't really want to give those packages away completely.

00:07:41,900 --> 00:07:49,830
But it would be nice if they could sort of invite a co-owner who then do more work and

00:07:49,830 --> 00:07:50,980
ported to Python 3.

00:07:50,980 --> 00:07:54,440
It's not a big deal, usually.

00:07:54,440 --> 00:08:01,100
It's not that hard, you plunk in import 6 you change a few lines here and there, maybe

00:08:01,100 --> 00:08:05,050
you wrote future, it automates that.

00:08:05,050 --> 00:08:06,540
It needs to be done.

00:08:06,540 --> 00:08:13,470
Sort of there's a lot of resistance in the community to do this for someone else's package.

00:08:13,470 --> 00:08:19,540
And even if you did that, then you still have the problem of, well, how do you advertise?

00:08:19,540 --> 00:08:27,470
You can't put a forwarding line on the original package homepage saying "Please use this new

00:08:27,470 --> 00:08:35,520
and better package" there's tons of sort of pages with instructions of how to get things

00:08:35,520 --> 00:08:38,089
done, how to get started with various things.

00:08:38,089 --> 00:08:42,659
Still point, even though pillo has long replaced pill.

00:08:42,659 --> 00:08:48,710
You sort of -- you have to be in the know so you know that pillo, when it says pill

00:08:48,710 --> 00:08:57,149
you really should download pillo and install pill first so the dependency is satisfied

00:08:57,149 --> 00:09:04,660
when you pip install the rest of your application and your dependencies.

00:09:04,660 --> 00:09:09,290
But if you go -- if you just sort of follow the old instructions for pill, no where does

00:09:09,290 --> 00:09:14,920
it say pill is no longer maintained, please go use pillo which is maintained imported

00:09:14,920 --> 00:09:17,689
to 3.

00:09:17,689 --> 00:09:25,390
We need to find a graceful way to encourage owners who are no longer active in their own

00:09:25,390 --> 00:09:31,800
project because it was essentially a one-time spike and they got benefit from it.

00:09:31,800 --> 00:09:38,740
They got that line on their resume and they love your software e-mails.

00:09:38,740 --> 00:09:39,910
After their first release.

00:09:39,910 --> 00:09:47,810
Maybe they even do regular releases with small features added from contributed patches.

00:09:47,810 --> 00:09:49,019
But usually not.

00:09:49,019 --> 00:09:55,420
There are plenty of things that were written in 2011 last released in 2012, still work

00:09:55,420 --> 00:09:57,230
perfectly.

00:09:57,230 --> 00:10:00,269
But they're not being ported.

00:10:00,269 --> 00:10:09,009
Help those people and encourage them, maybe we should just data mine the entire Pypi database

00:10:09,009 --> 00:10:15,240
and track down every project that hasn't received at least one new file in the last six months

00:10:15,240 --> 00:10:16,560
or so.

00:10:16,560 --> 00:10:22,629
E-mail all those owners, are you still interested in owning this project?

00:10:22,629 --> 00:10:25,379
Do you need help porting it.

00:10:25,379 --> 00:10:31,860
Would it be okay if someone else became a co-owner and sort of put new energy and Python

00:10:31,860 --> 00:10:35,430
3 port in your package.

00:10:35,430 --> 00:10:42,230
But we have to sort of -- we have to get to the point where there is a model for that.

00:10:42,230 --> 00:10:47,529
I mean, there's a model for how you start a project, you have sort of -- you have couple

00:10:47,529 --> 00:10:56,220
of model, is that are like the lone programmer who has brilliant idea and sort of type, type,

00:10:56,220 --> 00:11:00,220
type until they have huge piece of software.

00:11:00,220 --> 00:11:06,310
Then they release it as open source and it's so tremendously useful that whole community

00:11:06,310 --> 00:11:08,920
grows around it.

00:11:08,920 --> 00:11:13,570
Everybody sort of has that model in mind, but most software actually, most of those

00:11:13,570 --> 00:11:21,800
Pypi packages don't fall in that category.

00:11:21,800 --> 00:11:23,870
They were someone's spike.

00:11:23,870 --> 00:11:27,160
Anyway, food for thought.

00:11:27,160 --> 00:11:33,899
If there was anything useful in here is probably glyphs, very good conversation with glyph

00:11:33,899 --> 00:11:36,689
about this topic a couple days ago.

00:11:36,689 --> 00:11:43,139
What did I do now?

00:11:43,139 --> 00:11:46,699
Hit the wrong button.

00:11:46,699 --> 00:11:49,639
Okay.

00:11:49,639 --> 00:11:50,639
Next thing.

00:11:50,639 --> 00:11:51,639
Hello?

00:11:51,639 --> 00:11:55,009
How hard can it be?

00:11:55,009 --> 00:11:58,670
The user interface change dollars.

00:11:58,670 --> 00:12:00,540
Change.

00:12:00,540 --> 00:12:02,410
Okay.

00:12:02,410 --> 00:12:09,370
I don't want to say much about this, Sunday afternoon I'm giving big technical talk about

00:12:09,370 --> 00:12:18,079
pipes, how we work, who was using them, so on.

00:12:18,079 --> 00:12:24,980
Just in case if you can't make it or if you are already super worried, Python is not getting

00:12:24,980 --> 00:12:32,970
types, we're agreeing on a notation for types that people can put in their code if they

00:12:32,970 --> 00:12:34,850
need types.

00:12:34,850 --> 00:12:37,670
And if they need type checking to happen.

00:12:37,670 --> 00:12:46,249
There are separate type checkers, there are IDE like Py charm with type annotations.

00:12:46,249 --> 00:12:50,759
Such IDEs can do better job of giving you the right suggestions and finding you the

00:12:50,759 --> 00:12:54,269
right definitions.

00:12:54,269 --> 00:13:00,660
Google is converting a large code base from Python 2 to Python 3 for which they need to

00:13:00,660 --> 00:13:06,149
understand the Python 2 code base and type an know nations play a -- annotations play

00:13:06,149 --> 00:13:07,430
a role.

00:13:07,430 --> 00:13:15,519
There's mypy which started this from my perspective because mypy is off-line type checker that

00:13:15,519 --> 00:13:19,259
reads the annotations you put in your source code.

00:13:19,259 --> 00:13:22,620
And checks that your code is actually consistent with those annotations.

00:13:22,620 --> 00:13:29,689
Let's off line tool, you can choose to run that if you don't use mypy or any of those

00:13:29,689 --> 00:13:30,689
other.

00:13:30,689 --> 00:13:36,920
There's no need for you to put type annotations in your code.

00:13:36,920 --> 00:13:42,439
If you want to know more read the pep and come to my keynote.

00:13:42,439 --> 00:13:45,019
I also want to talk about diversity.

00:13:45,019 --> 00:13:48,370
I see a lot of women in the room.

00:13:48,370 --> 00:13:54,019
[Applause] Say hi.

00:13:54,019 --> 00:14:02,660
[Applause] I recently gave a talk at a Python event in

00:14:02,660 --> 00:14:03,660
Iraq.

00:14:03,660 --> 00:14:06,420
Now, this was over Skype.

00:14:06,420 --> 00:14:10,040
So I felt pretty safe.

00:14:10,040 --> 00:14:15,990
[ laughter ] But the whole faculty of the computer science

00:14:15,990 --> 00:14:22,480
college had shown up for this event that one woman had organized.

00:14:22,480 --> 00:14:28,509
Where there was -- she was giving a brief introduction to Python and then she had a

00:14:28,509 --> 00:14:36,759
brief video interview with me over Skype.

00:14:36,759 --> 00:14:40,170
After that, they would go off line and discuss Python more.

00:14:40,170 --> 00:14:45,370
The point was to introduce Python in that particular college because they were all using

00:14:45,370 --> 00:14:49,850
java and C++.

00:14:49,850 --> 00:14:55,330
The thing that struck me most she send me pictures of the event afterwards.

00:14:55,330 --> 00:14:59,800
Half the people in the audience were women.

00:14:59,800 --> 00:15:03,860
And they were all wearing head dresses and stuff.

00:15:03,860 --> 00:15:13,260
But women go to school in technical fields in large numbers in those countries.

00:15:13,260 --> 00:15:17,160
And I think that's -- that was inspiring to me.

00:15:17,160 --> 00:15:22,199
Something that was less inspiring to me was that at the language summit Wednesday earlier

00:15:22,199 --> 00:15:28,119
this week, where all the core developers get together there wasn't a single woman in the

00:15:28,119 --> 00:15:29,720
room.

00:15:29,720 --> 00:15:36,260
And I don't believe we have a single female committer to core Python.

00:15:36,260 --> 00:15:38,459
So I want to change that.

00:15:38,459 --> 00:15:45,160
I want at least two female core Python Devs in the next year.

00:15:45,160 --> 00:15:48,990
And -- [Applause]

00:15:48,990 --> 00:15:55,749
Thank you.

00:15:55,749 --> 00:16:00,110
And I will try to train them myself if that's what it takes.

00:16:00,110 --> 00:16:04,470
So come talk to me.

00:16:04,470 --> 00:16:10,269
[Applause] But let me tell you what it takes.

00:16:10,269 --> 00:16:19,519
Lucas who is a core developer told me the story how he became a core developer, he had

00:16:19,519 --> 00:16:25,149
eight weeks and he started with submitting a patch for something that he had figured

00:16:25,149 --> 00:16:29,600
out a complicated fix for a nasty problem.

00:16:29,600 --> 00:16:37,860
And he said, well, now the Python committer machine will jump into action and review my

00:16:37,860 --> 00:16:38,860
patch.

00:16:38,860 --> 00:16:42,800
But after five days he hadn't heard anything back.

00:16:42,800 --> 00:16:49,279
And I worry that if he had been very patient that after five weeks he probably still wouldn't

00:16:49,279 --> 00:16:51,639
have heard anything back.

00:16:51,639 --> 00:16:57,679
As it was, he sent an e-mail or jumped on the IRC, anyway, soon he was directed to the

00:16:57,679 --> 00:17:05,530
right IRC channel where he ran in to Raymond, Raymond being the sort of educational tutorial

00:17:05,530 --> 00:17:14,290
guy that he is, and a very prolific core developer, spent enormous amount of time with Lucas.

00:17:14,290 --> 00:17:22,890
At the end of I think three intense weeks of Lucas learning and Raymond mentoring, Raymond

00:17:22,890 --> 00:17:29,740
took up the sponsor role for Lucas and told the other committers, we need to give Lucas

00:17:29,740 --> 00:17:31,200
the commit bit.

00:17:31,200 --> 00:17:38,020
Enough other committers had by then been confronted by Lucas that he was aggressively trying to

00:17:38,020 --> 00:17:41,990
get approved and reviewed.

00:17:41,990 --> 00:17:47,310
So he got the committer bit, but that's a pretty intense process.

00:17:47,310 --> 00:17:50,150
And I can't promise you that it's going to be any less intense.

00:17:50,150 --> 00:18:01,710
So beware of the amount of sort of self motivation and commitment and preexisting knowledge of

00:18:01,710 --> 00:18:07,030
pretty cranky tools is all useful.

00:18:07,030 --> 00:18:09,060
But I'm sure it's possible.

00:18:09,060 --> 00:18:11,870
And we're going to do it.

00:18:11,870 --> 00:18:14,610
And I have nothing else except Q and A session.

00:18:14,610 --> 00:18:18,380
I don't know how much time we have for Q&A?

00:18:18,380 --> 00:18:24,510
But -- we have ten minutes for Q and A. I would love the first question to be from a

00:18:24,510 --> 00:18:27,640
woman or girl.

00:18:27,640 --> 00:18:30,030
>> Hi.

00:18:30,030 --> 00:18:32,140
Thanks for your keynote.

00:18:32,140 --> 00:18:41,190
So, I'm an experienced community manager in open source and I'm curious about what tools

00:18:41,190 --> 00:18:48,040
we could help make that would make the new maintainer process easier for core.

00:18:48,040 --> 00:18:53,150
Basically, what you just explained about the situation with Lucas and Raymond and so on,

00:18:53,150 --> 00:19:00,540
sounded like, yes, there's a problem of attention and people who want to become core Devs having

00:19:00,540 --> 00:19:06,680
motivation to push through some of these user experience, developer experience difficulties.

00:19:06,680 --> 00:19:10,680
In your experience, maybe just off the top of your head we can talk about this more later,

00:19:10,680 --> 00:19:16,510
what tools could we make to make that whole process easier both for the core Devs coming

00:19:16,510 --> 00:19:22,450
in and for the existing core Devs to help you see new patches direct them to the right

00:19:22,450 --> 00:19:28,590
people, give good sort of progress bars of expectation to the new Core Devs who are submitting

00:19:28,590 --> 00:19:29,770
stuff.

00:19:29,770 --> 00:19:31,650
Does that question make sense?

00:19:31,650 --> 00:19:34,240
>> That makes total sense.

00:19:34,240 --> 00:19:43,700
I think that a bunch of documentation that sort of gives a starter set of problems that

00:19:43,700 --> 00:19:52,410
a new core Dev might want to try out would be a good way to start.

00:19:52,410 --> 00:19:57,900
I think writing these things is not just a matter of writing it then running away.

00:19:57,900 --> 00:20:04,830
But writing a document like that then sort of iterating over it every next core developer

00:20:04,830 --> 00:20:18,040
that actually uses that document, make clarifies things, maybe cuts stuff out that's not interesting

00:20:18,040 --> 00:20:21,210
or that everyone already knows.

00:20:21,210 --> 00:20:27,580
Or splits the document in versions for people in more or less initial experience in certain

00:20:27,580 --> 00:20:30,300
tools.

00:20:30,300 --> 00:20:37,460
I think -- proposals could come out of this of modernizing the tool chain, the workflow

00:20:37,460 --> 00:20:38,490
that we're using.

00:20:38,490 --> 00:20:42,530
>> Audience: That's what I was thinking about like, is your code review dashboard good enough

00:20:42,530 --> 00:20:44,490
and so on.

00:20:44,490 --> 00:20:47,610
>> I don't know if it's maintained.

00:20:47,610 --> 00:20:53,880
[Laughter] >> Audience: Thank you very much for your

00:20:53,880 --> 00:20:54,880
keynote.

00:20:54,880 --> 00:20:56,970
My name is Chris I have a comment.

00:20:56,970 --> 00:21:01,160
Friend of mine and I were discussing this last night and when we talk about the goal

00:21:01,160 --> 00:21:03,400
of diversity.

00:21:03,400 --> 00:21:08,780
I would like us to view the goal as not we need to have more women or we need to have

00:21:08,780 --> 00:21:11,830
greater diversity because it looks better.

00:21:11,830 --> 00:21:19,850
But there is a very wonderful new perspective and refreshing perspective that anybody from

00:21:19,850 --> 00:21:24,600
a diverse background can bring that we don't have the privilege when we don't have that

00:21:24,600 --> 00:21:25,600
communication.

00:21:25,600 --> 00:21:27,450
And that could change the way that we look at code.

00:21:27,450 --> 00:21:29,680
It could change the way that we build tools.

00:21:29,680 --> 00:21:30,680
And that sort of a deal.

00:21:30,680 --> 00:21:33,150
I'd like for that to be the growing goal.

00:21:33,150 --> 00:21:37,120
Is there are perspectives that we are not being privy to.

00:21:37,120 --> 00:21:39,250
That we need to open ourselves up to.

00:21:39,250 --> 00:21:40,920
So thank you very much for your keynote.

00:21:40,920 --> 00:21:45,490
I just wanted to make a comment on that because it's a conversation near and dear to me.

00:21:45,490 --> 00:21:49,179
>> You're absolutely right.

00:21:49,179 --> 00:21:55,910
[ Applause ] >> Audience: I had two things.

00:21:55,910 --> 00:21:57,670
One was actually along those lines.

00:21:57,670 --> 00:22:02,630
I wanted to bring up the fact that we often look at diversity as just women.

00:22:02,630 --> 00:22:09,130
But if we look at our development teams, I know there are -- there's a huge exclusion

00:22:09,130 --> 00:22:10,900
of non-whites.

00:22:10,900 --> 00:22:14,100
On teams especially African Americans.

00:22:14,100 --> 00:22:20,710
And so I would like all of us to like try to do reach-out in our communities and invite

00:22:20,710 --> 00:22:25,710
them in and make them feel -- make everyone feel inclusive because I know on the teams

00:22:25,710 --> 00:22:32,000
that I work on having a diversity of voices really does change the quality of work and

00:22:32,000 --> 00:22:33,670
the ideas at the table.

00:22:33,670 --> 00:22:37,410
But that's not the only thing I wanted to ask about.

00:22:37,410 --> 00:22:44,130
Last year I asked you a question on how do we help people get to Python 3 when everyone

00:22:44,130 --> 00:22:46,320
is learning in Python 2?

00:22:46,320 --> 00:22:52,320
And since then I started writing code in all of Python 3, and so I just had a quick question

00:22:52,320 --> 00:22:54,120
for the room.

00:22:54,120 --> 00:23:02,490
Who here is using Python 3 exclusively?

00:23:02,490 --> 00:23:10,100
Who here is using Python 2 and 3 in some sort of mixed Bash?

00:23:10,100 --> 00:23:15,730
And who here is using Python 2 only?

00:23:15,730 --> 00:23:18,160
Now that's been said.

00:23:18,160 --> 00:23:22,800
I just want to say, there's lots of complex code out there.

00:23:22,800 --> 00:23:32,140
It's while it needs special consideration, it's not that hard in some ways to upgrade.

00:23:32,140 --> 00:23:36,830
And you should be careful but I don't want anyone to be afraid of it or scared of it.

00:23:36,830 --> 00:23:39,830
So you should go home and really try it.

00:23:39,830 --> 00:23:45,030
Because in lots of cases, in the cases that I had to deal with at least it wasn't that

00:23:45,030 --> 00:23:46,030
hard.

00:23:46,030 --> 00:23:53,520
That was really a question rather than a comment.

00:23:53,520 --> 00:23:57,770
[ Applause ] >> Audience: Hi, I'm Carol.

00:23:57,770 --> 00:24:05,540
I've been lurking or participating, I guess, on the core mentorship CPython mailing list

00:24:05,540 --> 00:24:08,280
for probably about a year and a half.

00:24:08,280 --> 00:24:11,990
And it's really not that scary.

00:24:11,990 --> 00:24:21,020
People are actually quite positive and quite helpful and it is something that I think people

00:24:21,020 --> 00:24:25,920
can participate in and I think we can be more diverse.

00:24:25,920 --> 00:24:32,550
Selena was actually the one representative at the language summit and it was really great

00:24:32,550 --> 00:24:38,880
to actually have dinner with her after that and her baby, June.

00:24:38,880 --> 00:24:44,850
What I'm hoping is, I have a talk later today but I have spent a lot of time researching

00:24:44,850 --> 00:24:52,600
how to on-board people and grow developers with both OpenHatch and in my previous jobs

00:24:52,600 --> 00:24:57,420
and what we've done is I've taken all the research that I've done through the different

00:24:57,420 --> 00:25:02,170
mailing list, blog posts, information that some of the core developers have shared with

00:25:02,170 --> 00:25:05,120
me for which I'm grateful for.

00:25:05,120 --> 00:25:14,130
PyLadies has put together a jazzy groove guide to contributing to CPython which is like a

00:25:14,130 --> 00:25:18,990
hitchhikers' guide to Python.

00:25:18,990 --> 00:25:23,750
To sprint on it during the sprints.

00:25:23,750 --> 00:25:27,410
And perhaps maybe you'd like to join us on the first day.

00:25:27,410 --> 00:25:43,720
[Applause] >> Audience: Changes to 

00:25:43,720 --> 00:25:49,550
the process for submitting patches to the core Python language.

00:25:49,550 --> 00:25:55,210
I have couple months ago I submitted a small patch to the XML parsing library there was

00:25:55,210 --> 00:26:01,970
character that wasn't getting encoded, I submitted a patch and watched the thread it was a small

00:26:01,970 --> 00:26:03,560
problem, but nobody cared.

00:26:03,560 --> 00:26:07,710
Patch never got accepted so along the process I was like, wow, I notice a couple of things

00:26:07,710 --> 00:26:12,290
that could have been done to make it easier on people who don't have the motivation and

00:26:12,290 --> 00:26:16,610
time of a core developer but do want to help to submit patches so I was just wondering

00:26:16,610 --> 00:26:23,120
if anyone in the room can you tell us if I wanted to propose a change to the contribution

00:26:23,120 --> 00:26:28,500
process, what would be the correct forum to propose that change and how would it get discussed

00:26:28,500 --> 00:26:34,610
by the community then accepted as a change in the process.

00:26:34,610 --> 00:26:42,490
>> I think it's often a good idea to send an e-mail to Python Dev telling people that

00:26:42,490 --> 00:26:50,150
there's some easy patch up for review that hasn't been reviewed yet.

00:26:50,150 --> 00:26:57,480
And explain a little bit in the Python Dev message what the problem is, and how it's

00:26:57,480 --> 00:27:01,040
being fixed.

00:27:01,040 --> 00:27:07,830
But add something like, for more discussion, see the -- see the bug tracker issue.

00:27:07,830 --> 00:27:15,010
But sort of all core developers more or less read the Python Dev list.

00:27:15,010 --> 00:27:23,040
So they will be pointed to your patch that way.

00:27:23,040 --> 00:27:30,560
Very few people scour the bug tracker for new bugs that they should be working on.

00:27:30,560 --> 00:27:37,810
So that's one of the main reasons why submitting a bug with a patch is often not enough.

00:27:37,810 --> 00:27:46,230
There are some people who try to sort of drawl the bug tracker for -- trawl the bug tracker

00:27:46,230 --> 00:27:55,360
for some work, some attention and try to find someone who could pay attention to that issue.

00:27:55,360 --> 00:28:01,720
In reality there are so many bugs that just don't make progress for other reasons because

00:28:01,720 --> 00:28:08,510
they are very obscure or don't have a patch or don't have a patch that works for all other

00:28:08,510 --> 00:28:10,020
use cases.

00:28:10,020 --> 00:28:14,160
I say, don't give up.

00:28:14,160 --> 00:28:16,660
Be a squeaky wheel on Python Dev.

00:28:16,660 --> 00:28:22,140
>> Audience: Okay, if I wanted to promos a change to the actual contribution process

00:28:22,140 --> 00:28:25,660
you're saying Python Dev would be the correct place to propose that?

00:28:25,660 --> 00:28:26,660
>> That, too.

00:28:26,660 --> 00:28:31,820
If you want to propose a change to the process Python Dev definitely the place.

00:28:31,820 --> 00:28:33,309
>> Thank you.

00:28:33,309 --> 00:28:34,800
>> You're welcome.

00:28:34,800 --> 00:28:39,740
>> We actually discussed this at the language summit the whole development process how long

00:28:39,740 --> 00:28:46,380
we're taking to reply to stuff I'm in charge of trying to improve our process, there are

00:28:46,380 --> 00:28:50,400
two pips, I can't remember the numbers of proposals to actually change the process to

00:28:50,400 --> 00:28:55,460
make them much easier for core Devs to approve patches or turn around time.

00:28:55,460 --> 00:28:58,580
You can feel free to talk to me I'm in charge of making that decision.

00:28:58,580 --> 00:29:04,400
You can also read the Peps at Python.org/pep.

00:29:04,400 --> 00:29:16,180
There is -- >> My name is Bret.

00:29:16,180 --> 00:29:21,260
>> I just like to expand on the invitation to become a core developer, I recently became

00:29:21,260 --> 00:29:26,340
a core developer, largely on the back of my Windows experience as far as diversity goes

00:29:26,340 --> 00:29:30,050
we have platform diversity problem in the core development team if you have Windows

00:29:30,050 --> 00:29:32,640
experience we'd love to hear from you.

00:29:32,640 --> 00:29:34,620
If you're able to help at all.

00:29:34,620 --> 00:29:43,870
Developing Python in Windows would be very interested to have you come join the team.

00:29:43,870 --> 00:29:50,580
[Applause] If you have cloning machine, trick Steve to

00:29:50,580 --> 00:29:52,000
walk into it.

00:29:52,000 --> 00:29:53,280
[ laughter ] Lynn?

00:29:53,280 --> 00:29:54,560
We're done!

00:29:54,560 --> 00:29:56,480
Okay, we're done!

00:29:56,480 --> 00:29:59,030

YouTube URL: https://www.youtube.com/watch?v=G-uKNd5TSBw


