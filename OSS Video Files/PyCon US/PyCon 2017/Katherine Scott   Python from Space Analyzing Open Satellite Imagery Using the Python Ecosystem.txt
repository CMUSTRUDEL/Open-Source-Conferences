Title: Katherine Scott   Python from Space Analyzing Open Satellite Imagery Using the Python Ecosystem
Publication date: 2017-05-20
Playlist: PyCon 2017
Description: 
	"Speaker: Katherine Scott

Earth imaging satellites, just like our computers, are shrinking and becoming more ubiquitous than ever before. It is now possible to obtain open satellite data on a daily if not weekly basis and for this data to be put to work; helping us better understand our planet and quickly respond to disaster situations. 

In this talk we will work through a jupyter notebook that covers the satellite data ecosystem and the python tools that can be used to sift through and analyze that data. Topics include python tools for using Open Street Maps data, the Geospatial Data Abstraction Library (GDAL), and OpenCV and NumPy for image processing. This talk is intended for novice and intermediate python developers who are interested in using data science and satellite imagery for social good and fundamental scientific research. 


Slides can be found at: https://speakerdeck.com/pycon2017 and https://github.com/PyCon/2017-slides"
Captions: 
	00:01:04,369 --> 00:01:10,250
okay sorry about that okay let's let's

00:01:09,560 --> 00:01:12,110
get started

00:01:10,250 --> 00:01:14,479
and Catherine Scott is going to tell us

00:01:12,110 --> 00:01:17,860
about analyzing satellite imagery with

00:01:14,479 --> 00:01:17,860
five-time Thank You Catherine

00:01:21,820 --> 00:01:25,729
hi guys

00:01:23,240 --> 00:01:27,229
okay sound works cool so my talk is

00:01:25,729 --> 00:01:29,060
called Python from space

00:01:27,229 --> 00:01:31,070
analyzing open satellite imagery using

00:01:29,060 --> 00:01:33,500
Python or using the Python ecosystem

00:01:31,070 --> 00:01:34,880
I'm the image analytics tech lead at a

00:01:33,500 --> 00:01:36,799
company called planet and once you guys

00:01:34,880 --> 00:01:38,840
have heard of us we have a bunch of

00:01:36,799 --> 00:01:41,899
satellites so I'm gonna teach you how to

00:01:38,840 --> 00:01:43,159
use satellite data so quick overview

00:01:41,899 --> 00:01:45,770
this is a play in three parts

00:01:43,159 --> 00:01:47,330
I've designed this so we do fancier

00:01:45,770 --> 00:01:50,539
stuff a plant but this is at a software

00:01:47,330 --> 00:01:51,950
carpentry level of capability and so

00:01:50,539 --> 00:01:53,360
this is this talk is actually meant for

00:01:51,950 --> 00:01:55,939
all of you to go out and do something

00:01:53,360 --> 00:01:57,770
with this stuff right away so the user

00:01:55,939 --> 00:02:00,979
persona I used when I put this together

00:01:57,770 --> 00:02:02,299
was basically someone who's sitting like

00:02:00,979 --> 00:02:03,860
once go to a city council meeting has

00:02:02,299 --> 00:02:05,689
some problem they want to solve and they

00:02:03,860 --> 00:02:08,359
need satellite data to go prove a point

00:02:05,689 --> 00:02:09,970
and get to some good in the world so I'm

00:02:08,359 --> 00:02:12,590
here if you have any questions

00:02:09,970 --> 00:02:14,170
afterwards or Dana's is right here at

00:02:12,590 --> 00:02:16,250
front is also here and she can help you

00:02:14,170 --> 00:02:17,570
and all of this will be open source and

00:02:16,250 --> 00:02:19,819
up on the web as soon as I'm done and

00:02:17,570 --> 00:02:21,560
push the button so you can go check it

00:02:19,819 --> 00:02:23,090
out you can play with this Internet so

00:02:21,560 --> 00:02:24,769
we're going to go over three examples

00:02:23,090 --> 00:02:26,810
we're going to go over how to get a

00:02:24,769 --> 00:02:28,010
bunch of images space images and make a

00:02:26,810 --> 00:02:30,069
timeless gift out of them and this is

00:02:28,010 --> 00:02:32,660
useful for showing change on the top on

00:02:30,069 --> 00:02:34,370
surface of the earth we're going to use

00:02:32,660 --> 00:02:35,930
open street maps to get some data about

00:02:34,370 --> 00:02:37,370
the earth and then use it to do some

00:02:35,930 --> 00:02:39,380
processing and then we're going to

00:02:37,370 --> 00:02:43,310
create a quick little video using some

00:02:39,380 --> 00:02:45,560
satellite data okay so why why should

00:02:43,310 --> 00:02:47,329
you care about satellite imagery and I

00:02:45,560 --> 00:02:50,780
think the biggest reason is we now live

00:02:47,329 --> 00:02:52,519
in this like post truth world and right

00:02:50,780 --> 00:02:54,560
and I'm going to use literally correctly

00:02:52,519 --> 00:02:56,569
here satellite imagery is literally

00:02:54,560 --> 00:02:58,489
ground truth about what's happening on

00:02:56,569 --> 00:02:59,660
the planet so I'm going to go super like

00:02:58,489 --> 00:03:01,280
I don't know if you've seen this movie

00:02:59,660 --> 00:03:04,549
calanis kotse I want to it's going to be

00:03:01,280 --> 00:03:07,639
like that for a second so so this this

00:03:04,549 --> 00:03:09,139
is Peru this is Eastern Peru and that

00:03:07,639 --> 00:03:11,780
may not that may look normal to you

00:03:09,139 --> 00:03:14,000
what's actually going on is that is an

00:03:11,780 --> 00:03:15,379
artisanal and not artisanal in the

00:03:14,000 --> 00:03:17,540
Portland sense but in artisanal gold

00:03:15,379 --> 00:03:18,050
mine and what they do is they take high

00:03:17,540 --> 00:03:19,640
power hose

00:03:18,050 --> 00:03:21,470
and they hose down the banks of that

00:03:19,640 --> 00:03:24,650
River and then they use mercury and

00:03:21,470 --> 00:03:27,350
stuff too slurp up the gold this is how

00:03:24,650 --> 00:03:30,380
it grows that's like a couple months

00:03:27,350 --> 00:03:32,060
this is what's going on in the Amazon so

00:03:30,380 --> 00:03:35,540
this is in Bolivia this is I believe

00:03:32,060 --> 00:03:37,280
it's a sugar cane plantation and this is

00:03:35,540 --> 00:03:38,690
again is what happens over a course of a

00:03:37,280 --> 00:03:42,770
couple months this is all primordial

00:03:38,690 --> 00:03:45,380
like old-growth rainforest that's what's

00:03:42,770 --> 00:03:47,510
going on and that's like an area the

00:03:45,380 --> 00:03:49,250
size of downtown Portland so this is a

00:03:47,510 --> 00:03:51,050
disputed island in the South China Sea

00:03:49,250 --> 00:03:53,360
and I'm not going to get in the politics

00:03:51,050 --> 00:03:55,340
of the South China Sea but what I can

00:03:53,360 --> 00:03:57,110
tell you definitively science-wise is

00:03:55,340 --> 00:03:58,190
that that building is causing

00:03:57,110 --> 00:04:02,170
degradation of the reason vironment

00:03:58,190 --> 00:04:04,250
around it and I don't think that's cool

00:04:02,170 --> 00:04:06,200
here's another facility this is a

00:04:04,250 --> 00:04:09,230
purported nuclear research facility in

00:04:06,200 --> 00:04:10,670
North Korea I don't like nukes I don't

00:04:09,230 --> 00:04:11,690
think anyone should have them I think we

00:04:10,670 --> 00:04:14,720
should all be watching what people are

00:04:11,690 --> 00:04:18,080
doing with them who's from California

00:04:14,720 --> 00:04:20,540
here remember it didn't rain for like a

00:04:18,080 --> 00:04:22,490
year so this is the Auroville dam and

00:04:20,540 --> 00:04:25,280
you can see up there in the on the top

00:04:22,490 --> 00:04:27,440
right it's basically the water level is

00:04:25,280 --> 00:04:28,520
super-duper-duper low this is at the

00:04:27,440 --> 00:04:32,180
height of the ground like September

00:04:28,520 --> 00:04:34,400
October this is when the snowfall

00:04:32,180 --> 00:04:36,530
actually started melting and this is

00:04:34,400 --> 00:04:39,050
when the Oroville dam started to the

00:04:36,530 --> 00:04:40,840
still hwang started to degrade so this

00:04:39,050 --> 00:04:42,740
actually caused down river flooding and

00:04:40,840 --> 00:04:44,780
took out a bunch of homes and a bunch of

00:04:42,740 --> 00:04:46,880
farms and when this kind of stuff

00:04:44,780 --> 00:04:50,510
happens we need resources to actually go

00:04:46,880 --> 00:04:51,560
and and get data to people out there so

00:04:50,510 --> 00:04:55,040
they can do search and rescue response

00:04:51,560 --> 00:04:56,930
and just to make things end on a happy

00:04:55,040 --> 00:04:58,610
note this is just the coast of Italy so

00:04:56,930 --> 00:05:02,090
you know sometimes it's just cool to go

00:04:58,610 --> 00:05:03,669
look at pretty stuff right alright so

00:05:02,090 --> 00:05:05,840
let's talk about what's out there so

00:05:03,669 --> 00:05:08,180
spaces like this public private thing

00:05:05,840 --> 00:05:09,380
going on so our governments European

00:05:08,180 --> 00:05:11,180
governments a bunch of governments go

00:05:09,380 --> 00:05:12,919
and put up all these like super dope

00:05:11,180 --> 00:05:15,710
satellites so there's a couple on top

00:05:12,919 --> 00:05:17,950
there Landsat eight Landsat 7 Sentinel

00:05:15,710 --> 00:05:20,240
and since we're sort of transitioning to

00:05:17,950 --> 00:05:21,650
private partnerships planet actually has

00:05:20,240 --> 00:05:23,990
a bunch of satellites we have our own

00:05:21,650 --> 00:05:26,510
flock of doves there's like 140

00:05:23,990 --> 00:05:29,180
something up right now we just acquired

00:05:26,510 --> 00:05:30,410
the sky sets from Terry Bell and Google

00:05:29,180 --> 00:05:31,340
and we also have constellation called

00:05:30,410 --> 00:05:32,060
rapid eyes so we have a bunch of

00:05:31,340 --> 00:05:33,410
different little

00:05:32,060 --> 00:05:35,900
satellites there are commercial

00:05:33,410 --> 00:05:38,690
satellites so here's something about all

00:05:35,900 --> 00:05:41,270
this stuff all those guys on top they're

00:05:38,690 --> 00:05:42,620
free you can get that data whenever you

00:05:41,270 --> 00:05:44,570
want wherever you want it's not the

00:05:42,620 --> 00:05:45,890
prettiest API but you can get it and all

00:05:44,570 --> 00:05:47,080
the ones on the bottom you can get some

00:05:45,890 --> 00:05:49,610
of that data for non-commercial purposes

00:05:47,080 --> 00:05:53,990
so you can go and actually use that data

00:05:49,610 --> 00:05:56,840
to do whatever you need to do so where

00:05:53,990 --> 00:05:58,520
do I get this public data so USGS has an

00:05:56,840 --> 00:06:00,290
earth Explorer and has all the Landsat

00:05:58,520 --> 00:06:02,270
data since 40 years

00:06:00,290 --> 00:06:03,920
there's also AWS has put up a bunch of

00:06:02,270 --> 00:06:06,050
that data from Sentinel and motifs and a

00:06:03,920 --> 00:06:08,450
couple others Planet has a bunch of

00:06:06,050 --> 00:06:10,550
resources for getting this stuff we have

00:06:08,450 --> 00:06:12,790
Planet Explorer beta which means you can

00:06:10,550 --> 00:06:15,140
go and see everything that we pull down

00:06:12,790 --> 00:06:18,020
there's also our open California dataset

00:06:15,140 --> 00:06:19,160
you can get anything in California we

00:06:18,020 --> 00:06:21,200
give away anything for emergency

00:06:19,160 --> 00:06:24,530
response we have an ambassador's problem

00:06:21,200 --> 00:06:25,700
a program so anybody who works for a

00:06:24,530 --> 00:06:27,650
non-profit or an educational

00:06:25,700 --> 00:06:29,720
organization you can get a limited

00:06:27,650 --> 00:06:32,030
amount of free satellite data and then

00:06:29,720 --> 00:06:34,370
some of that Amazon stuff I actually

00:06:32,030 --> 00:06:35,990
just put out a giant hundred thousand

00:06:34,370 --> 00:06:37,490
image data set of all that do you

00:06:35,990 --> 00:06:38,930
deforestation and degradation in the

00:06:37,490 --> 00:06:39,980
Amazon so if you do machine learning

00:06:38,930 --> 00:06:41,630
come talk to me

00:06:39,980 --> 00:06:43,660
there's data out there to help find that

00:06:41,630 --> 00:06:45,620
stuff and finally some of the other

00:06:43,660 --> 00:06:47,540
commercial satellite companies put out

00:06:45,620 --> 00:06:49,310
data so a little globe and a few others

00:06:47,540 --> 00:06:52,160
do the same especially for disaster

00:06:49,310 --> 00:06:53,510
response alright so let's talk about

00:06:52,160 --> 00:06:54,920
what satellite data looks like so you

00:06:53,510 --> 00:06:57,410
think like Oh satellites they're just

00:06:54,920 --> 00:07:00,950
like flying cameras well they're kind of

00:06:57,410 --> 00:07:03,140
like flying fancy science cameras so our

00:07:00,950 --> 00:07:04,790
eyes see in three colors right they see

00:07:03,140 --> 00:07:07,610
in red green and blue

00:07:04,790 --> 00:07:09,980
but satellites actually see in much in a

00:07:07,610 --> 00:07:14,360
much wider array of colors so like

00:07:09,980 --> 00:07:16,370
Landsat sees basically shorter wave or

00:07:14,360 --> 00:07:18,110
higher landing so you go and you can see

00:07:16,370 --> 00:07:19,700
into the long wave infrared and you can

00:07:18,110 --> 00:07:21,080
see into all these different colors that

00:07:19,700 --> 00:07:23,390
are on the spectrum that humans can't

00:07:21,080 --> 00:07:26,000
see and what that means is that you

00:07:23,390 --> 00:07:28,340
actually can see stuff like you when you

00:07:26,000 --> 00:07:30,980
look at this data clouds and snow will

00:07:28,340 --> 00:07:32,240
look like different colors different

00:07:30,980 --> 00:07:34,610
kinds of crops will actually have

00:07:32,240 --> 00:07:36,230
different coloring based on what bands

00:07:34,610 --> 00:07:37,490
you're using and it's really helpful and

00:07:36,230 --> 00:07:40,490
what I've done is I've sort of

00:07:37,490 --> 00:07:42,200
superimposed our visual spectrum down

00:07:40,490 --> 00:07:43,910
onto the like standard Landsat and

00:07:42,200 --> 00:07:45,449
Sentinel data so you can see there's a

00:07:43,910 --> 00:07:47,610
wide wide

00:07:45,449 --> 00:07:48,809
bit more data than you're getting so

00:07:47,610 --> 00:07:50,159
what this really means in practical

00:07:48,809 --> 00:07:51,840
terms is satellites aren't just cameras

00:07:50,159 --> 00:07:53,249
they're like x-ray vision onto the

00:07:51,840 --> 00:07:57,120
planet where you can go and learn some

00:07:53,249 --> 00:07:59,219
cool stuff a couple bits more about like

00:07:57,120 --> 00:08:00,629
satellite data and some terminology

00:07:59,219 --> 00:08:02,189
there's this notion of cadence which is

00:08:00,629 --> 00:08:04,650
how often a satellite will go visit an

00:08:02,189 --> 00:08:06,569
area specific governmental ones it's

00:08:04,650 --> 00:08:07,949
usually about monthly and then for a lot

00:08:06,569 --> 00:08:09,599
of the planet stuff it's either daily or

00:08:07,949 --> 00:08:11,189
monthly or we actually want to know that

00:08:09,599 --> 00:08:13,259
our task so we can drive them to where

00:08:11,189 --> 00:08:16,400
things are happening

00:08:13,259 --> 00:08:19,169
there's GST which is basically how many

00:08:16,400 --> 00:08:21,240
meters are in a given pixel of satellite

00:08:19,169 --> 00:08:24,210
data so for the big guys that have all

00:08:21,240 --> 00:08:25,800
these bands the resolution is a little

00:08:24,210 --> 00:08:29,939
bit lower but you get all these bands

00:08:25,800 --> 00:08:31,110
and then our stuff is a lot higher but

00:08:29,939 --> 00:08:33,389
it comes every day too so it's pretty

00:08:31,110 --> 00:08:36,209
useful and then number of bands as I've

00:08:33,389 --> 00:08:37,860
said before there's also some satellite

00:08:36,209 --> 00:08:39,899
terminology that you should be aware of

00:08:37,860 --> 00:08:42,570
usually when you want to go like look

00:08:39,899 --> 00:08:43,919
for algorithms in recital the imaging

00:08:42,570 --> 00:08:46,410
it's called remote sensing and that's

00:08:43,919 --> 00:08:48,000
the fancy name for satellite imaging so

00:08:46,410 --> 00:08:50,100
if you google remote sensing blah blah

00:08:48,000 --> 00:08:51,930
blah like you might get better results

00:08:50,100 --> 00:08:53,519
there's ortho rectification which is the

00:08:51,930 --> 00:08:55,860
process of lining up our satellite data

00:08:53,519 --> 00:08:57,300
with stuff on the ground so what you do

00:08:55,860 --> 00:08:58,709
is you don't always know where the image

00:08:57,300 --> 00:09:00,230
is on the ground right away so you go

00:08:58,709 --> 00:09:03,470
and you do this out boy let me just go

00:09:00,230 --> 00:09:06,540
and you line it up with the ground map

00:09:03,470 --> 00:09:08,339
there's meter angle which is the normal

00:09:06,540 --> 00:09:10,019
pointing of the satellite towards the

00:09:08,339 --> 00:09:11,850
earth and if you want to see something

00:09:10,019 --> 00:09:15,300
really cool look up off major satellite

00:09:11,850 --> 00:09:18,389
imagery it's the coolest like there's

00:09:15,300 --> 00:09:20,490
raster and vector so in the sort of

00:09:18,389 --> 00:09:22,110
remote sensing space you'll hear people

00:09:20,490 --> 00:09:24,120
talk about raster's which are just pixel

00:09:22,110 --> 00:09:25,620
images and then people talk about

00:09:24,120 --> 00:09:28,069
vectors which are like sort of outlines

00:09:25,620 --> 00:09:30,779
that would be like the border of a state

00:09:28,069 --> 00:09:32,610
and a couple other more terms UTM which

00:09:30,779 --> 00:09:34,529
is universal Universal transverse

00:09:32,610 --> 00:09:37,130
Mercator it's just a coordinate system

00:09:34,529 --> 00:09:40,649
like Latin long it's a little bit easier

00:09:37,130 --> 00:09:41,819
UDM which is usable data map in space

00:09:40,649 --> 00:09:44,550
with a map that shows you where clouds

00:09:41,819 --> 00:09:46,350
are and stuff like that and then down

00:09:44,550 --> 00:09:48,329
which is a digital elevation map and

00:09:46,350 --> 00:09:50,220
that just means like if you have Latin

00:09:48,329 --> 00:09:53,060
long and you want altitude the dem will

00:09:50,220 --> 00:09:57,449
give you the altitude just to reiterate

00:09:53,060 --> 00:09:59,130
raster means pixels okay so I'm yapping

00:09:57,449 --> 00:10:02,240
this is just a presentation

00:09:59,130 --> 00:10:04,470
let's write code let's write some code

00:10:02,240 --> 00:10:05,340
all right so I have three Jupiter

00:10:04,470 --> 00:10:08,010
notebooks we're going to go through

00:10:05,340 --> 00:10:10,140
really really quick the first one here

00:10:08,010 --> 00:10:11,550
I'm calling the basics and so if I call

00:10:10,140 --> 00:10:13,130
so over this remember that you can go

00:10:11,550 --> 00:10:15,180
and look at this as soon as you get home

00:10:13,130 --> 00:10:16,020
so what I'm going to do in the super

00:10:15,180 --> 00:10:20,550
notebooks I'm just going to basically

00:10:16,020 --> 00:10:22,170
set set up a standard sort of data

00:10:20,550 --> 00:10:25,710
science stack right so I'm going to have

00:10:22,170 --> 00:10:27,330
numpy and Syfy and matplotlib and then

00:10:25,710 --> 00:10:31,200
I'm going to pull in a couple of

00:10:27,330 --> 00:10:32,760
different libraries that are very

00:10:31,200 --> 00:10:35,310
relevant to doing salad processing so

00:10:32,760 --> 00:10:37,230
I'm going to pull in restore you Shapley

00:10:35,310 --> 00:10:38,520
with Caesar geometry library and I'm

00:10:37,230 --> 00:10:41,280
going to pull in this package for

00:10:38,520 --> 00:10:42,810
ipython called I PI leaflet which allows

00:10:41,280 --> 00:10:44,430
us to build these like super slick

00:10:42,810 --> 00:10:46,560
slippy maps and figure out where we are

00:10:44,430 --> 00:10:48,600
on the earth and what we're doing and

00:10:46,560 --> 00:10:52,440
I'm also going to pull in some API keys

00:10:48,600 --> 00:10:56,340
and the planet client so my first step

00:10:52,440 --> 00:10:57,900
here is I just need to query what sort

00:10:56,340 --> 00:11:01,020
of satellite data I can get for a given

00:10:57,900 --> 00:11:03,590
point in the earth and we're going to

00:11:01,020 --> 00:11:05,820
use the the planet API to do this now

00:11:03,590 --> 00:11:07,020
the way you query the planet API is you

00:11:05,820 --> 00:11:10,620
give it this thing called geo Jason

00:11:07,020 --> 00:11:12,000
which is just like a Geo version of

00:11:10,620 --> 00:11:13,800
Jason you just put a bunch of Latin long

00:11:12,000 --> 00:11:15,540
in there in points or in a square and

00:11:13,800 --> 00:11:17,700
you can get that point on the earth and

00:11:15,540 --> 00:11:19,710
to get that to Jason I'm going to pop up

00:11:17,700 --> 00:11:21,810
a slippy map and draw on it so I don't

00:11:19,710 --> 00:11:24,350
have to think about like oh you know

00:11:21,810 --> 00:11:26,100
Portland's at you know blah blah blah

00:11:24,350 --> 00:11:27,990
latitude blah blah blah a lot of

00:11:26,100 --> 00:11:30,840
latitude I'll just draw what I want and

00:11:27,990 --> 00:11:31,800
then we can use that to start query so

00:11:30,840 --> 00:11:34,910
what I'm gonna do here is I'm going to

00:11:31,800 --> 00:11:37,830
pull up a planet quarterly mosaic and

00:11:34,910 --> 00:11:41,940
set my API key and I'm just gonna create

00:11:37,830 --> 00:11:43,980
this map object with and point it to my

00:11:41,940 --> 00:11:45,710
tile server and set some zoom and then

00:11:43,980 --> 00:11:48,870
set a couple coloring parameters and

00:11:45,710 --> 00:11:50,070
then realistically the big media thing

00:11:48,870 --> 00:11:52,620
that's happening here is I'm putting in

00:11:50,070 --> 00:11:54,750
a draw handler so as soon as I draw I'm

00:11:52,620 --> 00:11:57,420
just going to drop that drawn object

00:11:54,750 --> 00:12:00,780
into a dictionary and so then I can go

00:11:57,420 --> 00:12:03,780
look at the dictionary and look at the

00:12:00,780 --> 00:12:07,500
things I've drawn on my map I'll just do

00:12:03,780 --> 00:12:09,760
this helps if you load everything

00:12:07,500 --> 00:12:12,040
there we go all right so I've asleeping

00:12:09,760 --> 00:12:13,930
that sweet so this is a real slippy map

00:12:12,040 --> 00:12:16,779
it was made in the past couple past

00:12:13,930 --> 00:12:19,089
quarter and it is the entirety of the

00:12:16,779 --> 00:12:21,730
world and you can go and zoom around and

00:12:19,089 --> 00:12:22,930
look in here so what we're going to do

00:12:21,730 --> 00:12:23,980
is we're going to select an area of

00:12:22,930 --> 00:12:25,350
Portland that we want to build this

00:12:23,980 --> 00:12:29,470
animated gif for it I'm going to zoom

00:12:25,350 --> 00:12:30,880
right here where PyCon is and so now

00:12:29,470 --> 00:12:33,070
we're going to query be like I said

00:12:30,880 --> 00:12:34,209
we're going to query the planet API and

00:12:33,070 --> 00:12:38,440
what we're going to do is we're going to

00:12:34,209 --> 00:12:40,240
say take my geometry object I want

00:12:38,440 --> 00:12:43,810
everything since 2013 which is basically

00:12:40,240 --> 00:12:47,230
everything since 2013 that is in the

00:12:43,810 --> 00:12:51,120
planet system I want it with cloud cover

00:12:47,230 --> 00:12:54,010
less than 50% and then I'm looking for

00:12:51,120 --> 00:12:56,019
PSC three bends so that means just color

00:12:54,010 --> 00:12:57,700
imagery from the small planet scopes you

00:12:56,019 --> 00:13:00,519
could query mode as you could query

00:12:57,700 --> 00:13:03,430
Landsat all those are available right

00:13:00,519 --> 00:13:06,040
now we're just going to do three meter

00:13:03,430 --> 00:13:06,820
imaging from the planet scopes and then

00:13:06,040 --> 00:13:07,870
what I'm going to do is I'm going to

00:13:06,820 --> 00:13:10,329
take that query and I'm just going to

00:13:07,870 --> 00:13:11,829
dump it into a panda's data frame and

00:13:10,329 --> 00:13:13,209
print the data frame and that will allow

00:13:11,829 --> 00:13:16,380
me to manipulate stuff and getting stuff

00:13:13,209 --> 00:13:20,740
done quickly so I'm going to do that

00:13:16,380 --> 00:13:22,300
and tada I got datum all right and so

00:13:20,740 --> 00:13:24,670
what I can see here is a bunch of

00:13:22,300 --> 00:13:27,070
satellite data as data when it was

00:13:24,670 --> 00:13:28,209
acquired the geometry of the footprint

00:13:27,070 --> 00:13:33,940
that is to say where on earth it

00:13:28,209 --> 00:13:36,399
overlaid the GSD what instrument took it

00:13:33,940 --> 00:13:40,420
that sort of thing there's also some

00:13:36,399 --> 00:13:41,890
thumbnails and should be about it oh the

00:13:40,420 --> 00:13:44,890
Sun elevation that such that if you need

00:13:41,890 --> 00:13:47,230
that all right so that data was was

00:13:44,890 --> 00:13:49,480
pretty useful but we still need to clean

00:13:47,230 --> 00:13:50,949
it up so what that query doesn't tell us

00:13:49,480 --> 00:13:53,980
is how much each individual scene

00:13:50,949 --> 00:13:54,970
actually overlaps with our Aoi so what

00:13:53,980 --> 00:13:56,290
I'm going to do is I want to pulling the

00:13:54,970 --> 00:13:58,149
Shapley library and I'm going to take

00:13:56,290 --> 00:14:00,339
the footprints of all the images in that

00:13:58,149 --> 00:14:02,560
query and I'm going to make them into

00:14:00,339 --> 00:14:04,990
shapes and then I'm going to take my my

00:14:02,560 --> 00:14:06,430
area of interest and I'm going to make

00:14:04,990 --> 00:14:08,440
that into a shape I'm going to calculate

00:14:06,430 --> 00:14:10,870
the overlap of those two shapes so I

00:14:08,440 --> 00:14:13,720
know precisely how much of each scene is

00:14:10,870 --> 00:14:14,949
in my little area of Portland and then

00:14:13,720 --> 00:14:16,390
I'm also going to go in here and add a

00:14:14,949 --> 00:14:17,740
couple other series where I just like

00:14:16,390 --> 00:14:19,570
clean up the date time parameters

00:14:17,740 --> 00:14:20,520
because they're strings and notice at

00:14:19,570 --> 00:14:25,560
the date time

00:14:20,520 --> 00:14:27,180
so cool so now what we can do is we can

00:14:25,560 --> 00:14:29,670
just use this panda data frame to filter

00:14:27,180 --> 00:14:30,960
out to get the scenes that I want and I

00:14:29,670 --> 00:14:32,790
can just do the standard pandas

00:14:30,960 --> 00:14:35,220
filtering so what I'm going to do here

00:14:32,790 --> 00:14:36,930
is I'm going to actually filter out I'm

00:14:35,220 --> 00:14:38,910
going to make two sets of data basically

00:14:36,930 --> 00:14:41,220
I'm going to make a set of data that is

00:14:38,910 --> 00:14:44,370
the cloud cover where cloud cover is

00:14:41,220 --> 00:14:47,550
less than 10% and all the scenes are

00:14:44,370 --> 00:14:49,860
before the first of the year and they

00:14:47,550 --> 00:14:52,920
overlap my area of interest by at least

00:14:49,860 --> 00:14:56,400
30% and then I making a second bigger

00:14:52,920 --> 00:15:00,000
set that's everything since 2014 where

00:14:56,400 --> 00:15:04,200
the overlap is greater than 60% and the

00:15:00,000 --> 00:15:06,030
cloud cover is less than 50% so I go and

00:15:04,200 --> 00:15:08,480
construct those queries you can see I

00:15:06,030 --> 00:15:14,040
have two new data frames one of them has

00:15:08,480 --> 00:15:16,500
succeeds and the other one is going to

00:15:14,040 --> 00:15:18,720
have 15 and now what I can do is I can

00:15:16,500 --> 00:15:20,430
go over lay these on my original slippy

00:15:18,720 --> 00:15:24,810
map so I can see what kind of data I'm

00:15:20,430 --> 00:15:25,950
going to pull down all right so I've

00:15:24,810 --> 00:15:28,050
basically taken the footprint of those

00:15:25,950 --> 00:15:30,870
and drop them onto my map and so now I

00:15:28,050 --> 00:15:32,280
can see the overlap of the the first 16

00:15:30,870 --> 00:15:37,830
so you can see most of them are pretty

00:15:32,280 --> 00:15:39,330
decent overlaps not all of them what we

00:15:37,830 --> 00:15:40,590
can also do is there's a thumbnail link

00:15:39,330 --> 00:15:42,120
in the API so we can use that thumbnail

00:15:40,590 --> 00:15:44,700
link to go and see roughly what these

00:15:42,120 --> 00:15:45,660
things are going to look like and they

00:15:44,700 --> 00:15:47,160
look like this so you can see here's

00:15:45,660 --> 00:15:51,570
downtown Portland right here now it's

00:15:47,160 --> 00:15:54,180
tiny there's another one okay and so

00:15:51,570 --> 00:15:56,430
this data looks good so to get our data

00:15:54,180 --> 00:15:58,140
we it's actually requires a little bit

00:15:56,430 --> 00:16:01,110
of work so these satellite images are

00:15:58,140 --> 00:16:02,940
uncompressed full resolution super

00:16:01,110 --> 00:16:04,080
awesome super deep data and planta

00:16:02,940 --> 00:16:05,160
doesn't actually store all them ready to

00:16:04,080 --> 00:16:06,270
go what you have to do is you have to

00:16:05,160 --> 00:16:07,800
kind of activate them so we'll pre

00:16:06,270 --> 00:16:09,690
process them get them ready for you and

00:16:07,800 --> 00:16:11,910
then after you activate them you

00:16:09,690 --> 00:16:13,980
download them and muslims' taken care of

00:16:11,910 --> 00:16:15,690
in the planet API but you have to be

00:16:13,980 --> 00:16:18,000
aware of a few things so you have to

00:16:15,690 --> 00:16:20,310
know like the asset types so what kind

00:16:18,000 --> 00:16:22,680
of satellite you want so you can either

00:16:20,310 --> 00:16:26,040
go for like the big governmental

00:16:22,680 --> 00:16:27,870
satellites like Sentinel or you can look

00:16:26,040 --> 00:16:28,950
for just planet scope and then you need

00:16:27,870 --> 00:16:30,570
to know what kind of product you want

00:16:28,950 --> 00:16:33,780
there's three kinds of products there is

00:16:30,570 --> 00:16:34,339
an analytic product which is won't look

00:16:33,780 --> 00:16:35,990
right

00:16:34,339 --> 00:16:37,939
but is useful for doing actual data

00:16:35,990 --> 00:16:40,040
science there is a visual product which

00:16:37,939 --> 00:16:40,879
looks pretty and is useful for doing

00:16:40,040 --> 00:16:44,600
visual stuff like we're going to be

00:16:40,879 --> 00:16:46,699
doing today and then there's basically a

00:16:44,600 --> 00:16:48,949
UTM which is usable data masks like

00:16:46,699 --> 00:16:50,420
telling where the clouds are so what

00:16:48,949 --> 00:16:51,980
I've done here is I just went and put a

00:16:50,420 --> 00:16:55,490
little wrapper around that to sort of

00:16:51,980 --> 00:16:57,439
make it easier to think about think

00:16:55,490 --> 00:16:59,240
about how I'm working here so I have a

00:16:57,439 --> 00:17:01,129
function here that's called get product

00:16:59,240 --> 00:17:03,860
and all it does is it tells the client

00:17:01,129 --> 00:17:07,520
to go get a particular scene that's in

00:17:03,860 --> 00:17:09,620
that we've lift up another one to go and

00:17:07,520 --> 00:17:11,480
say activate the product which is to say

00:17:09,620 --> 00:17:15,579
hey do all this pre-processing for me

00:17:11,480 --> 00:17:17,839
and finally another one to download and

00:17:15,579 --> 00:17:22,339
finally one to check to see if all my

00:17:17,839 --> 00:17:24,020
scenes are ready to go so load that in

00:17:22,339 --> 00:17:25,279
and what I can do now is I can just

00:17:24,020 --> 00:17:28,010
write a really quick little method to

00:17:25,279 --> 00:17:29,570
say hey take my pandas dataframe give me

00:17:28,010 --> 00:17:33,049
the IDS of all the seasons that I want

00:17:29,570 --> 00:17:35,690
to get and activate and download them as

00:17:33,049 --> 00:17:38,289
visual products so I'm going to go and

00:17:35,690 --> 00:17:38,289
activate these

00:17:42,820 --> 00:17:46,990
should be six and so I went ahead and

00:17:45,790 --> 00:17:48,310
pre downloaded these because it would

00:17:46,990 --> 00:17:50,380
have been about like 300 X and I've

00:17:48,310 --> 00:17:52,210
taken all the while so we've activated

00:17:50,380 --> 00:17:56,590
them we've downloaded we have satellite

00:17:52,210 --> 00:17:58,210
imagery we can look at it so what I've

00:17:56,590 --> 00:18:00,070
done here is I've basically put together

00:17:58,210 --> 00:18:01,960
a couple methods just to load satellite

00:18:00,070 --> 00:18:06,400
load these images up and so these are

00:18:01,960 --> 00:18:09,010
geo tips and G Otis are these is sort of

00:18:06,400 --> 00:18:10,360
raster format that includes all of the

00:18:09,010 --> 00:18:12,970
information that you need to properly

00:18:10,360 --> 00:18:14,050
map and display these images and a bunch

00:18:12,970 --> 00:18:15,580
of the sort of science data that goes

00:18:14,050 --> 00:18:17,470
with them and so there's a lot of ways

00:18:15,580 --> 00:18:20,320
to go and open these images you can use

00:18:17,470 --> 00:18:22,090
open CV you can use sedol you can use SK

00:18:20,320 --> 00:18:25,480
image here I'm going to use rusty Rio

00:18:22,090 --> 00:18:27,340
but that's just one example is kind of

00:18:25,480 --> 00:18:30,610
ways to do this so I'm going to create

00:18:27,340 --> 00:18:32,260
these load image files you know what I

00:18:30,610 --> 00:18:39,670
can do is I can just open up my images

00:18:32,260 --> 00:18:44,260
and bring them up in that plot lab this

00:18:39,670 --> 00:18:48,850
takes a second cool hey so check it out

00:18:44,260 --> 00:18:49,690
we got Portland we are I don't know if

00:18:48,850 --> 00:18:52,900
you guys know where we are we are

00:18:49,690 --> 00:18:57,040
actually right here right now this is in

00:18:52,900 --> 00:19:00,190
this image is from the 10th so just a

00:18:57,040 --> 00:19:01,120
week ago okay so now we get images one

00:19:00,190 --> 00:19:02,590
of the standard things that you want to

00:19:01,120 --> 00:19:03,910
do is just plot a histogram so you know

00:19:02,590 --> 00:19:05,230
kind of what your color distribution is

00:19:03,910 --> 00:19:06,760
this is also for health bill for

00:19:05,230 --> 00:19:09,130
figuring how what percentage of clouds

00:19:06,760 --> 00:19:13,140
are in that image and that sort of thing

00:19:09,130 --> 00:19:15,190
so again it's just some basic numpy and

00:19:13,140 --> 00:19:16,570
Matt but live and you can go and

00:19:15,190 --> 00:19:18,760
actually plot your histogram so I've

00:19:16,570 --> 00:19:23,140
done that here we can take a look at the

00:19:18,760 --> 00:19:26,500
histograms for these images and we can

00:19:23,140 --> 00:19:28,780
see for that that second image seems

00:19:26,500 --> 00:19:30,610
really clear pretty good all this black

00:19:28,780 --> 00:19:32,440
over here right this is all zero so this

00:19:30,610 --> 00:19:34,810
is all black pixels that's just this

00:19:32,440 --> 00:19:36,220
edge effect right here because the

00:19:34,810 --> 00:19:39,160
images are rotated so that this is north

00:19:36,220 --> 00:19:40,600
and then this little bump of white is

00:19:39,160 --> 00:19:42,040
either because of the rooftops or of

00:19:40,600 --> 00:19:44,980
clouds and if something's really cloudy

00:19:42,040 --> 00:19:46,210
you'll see a big bump over here another

00:19:44,980 --> 00:19:47,500
thing you'll want to do and you'll want

00:19:46,210 --> 00:19:48,730
to do this especially if you if you're

00:19:47,500 --> 00:19:49,720
working on analytic products that have

00:19:48,730 --> 00:19:51,790
multiple bands is you'll want to

00:19:49,720 --> 00:19:54,070
decompose and recompose your images into

00:19:51,790 --> 00:19:56,590
like simulated RGB with different bands

00:19:54,070 --> 00:19:59,230
and so I just put together a really

00:19:56,590 --> 00:20:01,480
example here of how to decompose the

00:19:59,230 --> 00:20:02,860
image into each of the channels all it

00:20:01,480 --> 00:20:07,390
is is just doing your your slice

00:20:02,860 --> 00:20:09,130
notation one so you just take like one

00:20:07,390 --> 00:20:10,720
slice so you can actually see right here

00:20:09,130 --> 00:20:12,730
like we're taking the slice one by one

00:20:10,720 --> 00:20:14,289
so that would be the red channel or

00:20:12,730 --> 00:20:16,270
actually that's probably a blue Channel

00:20:14,289 --> 00:20:19,900
and this is probably a green Channel

00:20:16,270 --> 00:20:23,140
it's the red Channel and for a for band

00:20:19,900 --> 00:20:26,130
name is just be the NIR Channel let's go

00:20:23,140 --> 00:20:26,130
ahead and plot one of these guys

00:20:33,360 --> 00:20:37,890
cool so we can see here this is they all

00:20:36,510 --> 00:20:39,720
look the same but there's red green and

00:20:37,890 --> 00:20:43,530
blue all the way across so this is just

00:20:39,720 --> 00:20:44,940
the red component of that image all

00:20:43,530 --> 00:20:46,230
right so all these images are really big

00:20:44,940 --> 00:20:48,059
and we're not actually looking at

00:20:46,230 --> 00:20:50,640
downtown Portland like we wanted to so

00:20:48,059 --> 00:20:51,840
we sort of cropped out those little

00:20:50,640 --> 00:20:53,429
areas and we want to look at this but

00:20:51,840 --> 00:20:55,799
the scene is huge so we need to get that

00:20:53,429 --> 00:20:57,360
scene down to what we actually need so

00:20:55,799 --> 00:21:00,120
what I've done here is I'll take my eye

00:20:57,360 --> 00:21:02,820
and I'll dump it to a geo Jason file now

00:21:00,120 --> 00:21:05,040
I'm going to use a tool called G doll

00:21:02,820 --> 00:21:07,429
which is the geospatial data at data

00:21:05,040 --> 00:21:10,080
abstraction library it's a C++ library

00:21:07,429 --> 00:21:11,460
runs pretty well on Linux so there's

00:21:10,080 --> 00:21:13,770
some you can either use a command line

00:21:11,460 --> 00:21:15,780
tool or you can use Python bindings I'm

00:21:13,770 --> 00:21:18,059
going to use the command line for a lot

00:21:15,780 --> 00:21:20,100
of this but you can just as easily use

00:21:18,059 --> 00:21:21,720
the Python bindings and so what I'm

00:21:20,100 --> 00:21:24,270
going to do is I'm going to ask G tall

00:21:21,720 --> 00:21:27,480
and it's a really great tool to take

00:21:24,270 --> 00:21:29,610
take that input geo JSON file and take

00:21:27,480 --> 00:21:32,370
my scene and then crop my scene down to

00:21:29,610 --> 00:21:33,510
that geo JSON file and I'm going to do

00:21:32,370 --> 00:21:34,679
that for all my images and I'm going to

00:21:33,510 --> 00:21:37,710
go put them into another file called

00:21:34,679 --> 00:21:39,090
crop so we have our input images and now

00:21:37,710 --> 00:21:40,620
we have our output images that are

00:21:39,090 --> 00:21:45,240
cropped out to the area that we wanted

00:21:40,620 --> 00:21:46,530
to see it's going to look like this so I

00:21:45,240 --> 00:21:50,490
go around this I'm just calling out to

00:21:46,530 --> 00:21:52,559
the command line using sub-process and

00:21:50,490 --> 00:21:54,210
then I'm going to go and grab those

00:21:52,559 --> 00:21:59,970
images that I just created and then load

00:21:54,210 --> 00:22:00,720
them up using matte pop live again so

00:21:59,970 --> 00:22:03,360
this looks pretty good

00:22:00,720 --> 00:22:05,990
what you'll notice one thing here though

00:22:03,360 --> 00:22:09,660
that most of these things don't actually

00:22:05,990 --> 00:22:12,030
overlap where we're interested and this

00:22:09,660 --> 00:22:12,809
one does the restaurant so what we're

00:22:12,030 --> 00:22:14,520
going to have to do is we're going to

00:22:12,809 --> 00:22:16,169
have to mosaic a couple of these scenes

00:22:14,520 --> 00:22:18,150
together to get a nice good coverage of

00:22:16,169 --> 00:22:19,410
the area we're interested in and what

00:22:18,150 --> 00:22:21,570
you can do is you can basically feed a

00:22:19,410 --> 00:22:24,450
couple of these images to cheat all and

00:22:21,570 --> 00:22:27,870
jeet all will compose them and then do

00:22:24,450 --> 00:22:29,700
the cropping for you so let's just go

00:22:27,870 --> 00:22:31,740
and do that so basically this is the

00:22:29,700 --> 00:22:34,260
same command again using the same

00:22:31,740 --> 00:22:35,760
parameters but instead of just passing

00:22:34,260 --> 00:22:38,130
it one image I'm passing it a couple

00:22:35,760 --> 00:22:41,400
images and you'll see this again in a

00:22:38,130 --> 00:22:43,950
couple of you later examples so I run

00:22:41,400 --> 00:22:46,740
that and what we'll get is a nice

00:22:43,950 --> 00:22:48,570
composed image in maybe you can see it

00:22:46,740 --> 00:22:49,590
there should be a couple sort of stitch

00:22:48,570 --> 00:22:53,850
lines where you can see that these

00:22:49,590 --> 00:22:55,200
images were composed together okay so

00:22:53,850 --> 00:22:57,059
we've covered how to get a bunch of

00:22:55,200 --> 00:22:59,400
images I know bunch of images fill

00:22:57,059 --> 00:23:01,679
through them crop them down to what we

00:22:59,400 --> 00:23:02,880
want and process them so I'm going to

00:23:01,679 --> 00:23:04,559
pull it all together so you remember at

00:23:02,880 --> 00:23:06,450
the beginning I basically created two

00:23:04,559 --> 00:23:09,600
sort of sub data frames one with like

00:23:06,450 --> 00:23:12,750
just data from 2017 and then one from

00:23:09,600 --> 00:23:14,940
like 2015 onward so what I'm going to do

00:23:12,750 --> 00:23:17,210
is I'm going to take that 2015 one word

00:23:14,940 --> 00:23:21,150
one I'm going to grab all of the scenes

00:23:17,210 --> 00:23:22,230
from 2015 to now and then I'm going to

00:23:21,150 --> 00:23:23,280
crop them all out and then we're going

00:23:22,230 --> 00:23:25,050
to squeeze them together into an

00:23:23,280 --> 00:23:26,750
animated gif so this is just going to

00:23:25,050 --> 00:23:28,590
rehash the same code that we just wrote

00:23:26,750 --> 00:23:29,610
all right so what we're going to do is

00:23:28,590 --> 00:23:37,020
we're gonna activate and download all

00:23:29,610 --> 00:23:38,460
those so why these are activating and

00:23:37,020 --> 00:23:40,670
download I'll show you guys what we're

00:23:38,460 --> 00:23:43,130
going to do so this is the same thing

00:23:40,670 --> 00:23:45,690
we're just creating our clipped files

00:23:43,130 --> 00:23:49,140
typing them to G doll to cut out our Aoi

00:23:45,690 --> 00:23:53,610
and then for each of the each of the

00:23:49,140 --> 00:23:55,260
clips we're just going to do use another

00:23:53,610 --> 00:23:57,240
command line tool called image magic and

00:23:55,260 --> 00:23:59,190
we're going to convert them to gifts now

00:23:57,240 --> 00:24:01,410
finally we're going to use a final image

00:23:59,190 --> 00:24:02,850
magic tool to do a convert operation

00:24:01,410 --> 00:24:06,450
which will smash all those gifts

00:24:02,850 --> 00:24:09,570
together into one big animated gif cool

00:24:06,450 --> 00:24:11,370
and everything is ready to go so here's

00:24:09,570 --> 00:24:13,820
G doll cutting everything down into our

00:24:11,370 --> 00:24:13,820
little Aoi

00:24:19,170 --> 00:24:26,920
and we're done so this isn't the most

00:24:23,080 --> 00:24:34,360
recent one oops well I'm already loaded

00:24:26,920 --> 00:24:36,130
so just do this so this is the output

00:24:34,360 --> 00:24:37,720
and what's kind of cool about this is

00:24:36,130 --> 00:24:39,160
because we use the planet scope data and

00:24:37,720 --> 00:24:40,810
we've gone through this process of

00:24:39,160 --> 00:24:43,060
iterating on satellite what you can see

00:24:40,810 --> 00:24:44,530
is that the satellite quality improves

00:24:43,060 --> 00:24:47,020
over time so these are probably some of

00:24:44,530 --> 00:24:48,250
the more recent ones and then you can

00:24:47,020 --> 00:24:49,840
see some of the earlier ones probably

00:24:48,250 --> 00:24:51,490
aren't as sharp and so you can actually

00:24:49,840 --> 00:24:58,570
see how the product is improved over

00:24:51,490 --> 00:25:02,830
time okay so second example who here is

00:24:58,570 --> 00:25:04,270
heard of OpenStreetMaps alright so I'm

00:25:02,830 --> 00:25:06,850
pulling in a good so this is exact same

00:25:04,270 --> 00:25:07,750
example exact same set of code and what

00:25:06,850 --> 00:25:10,810
we're going to do is we're going to pull

00:25:07,750 --> 00:25:12,610
in OS Matt bo-sama API and then we're

00:25:10,810 --> 00:25:14,350
also going to pull in from geo PI a

00:25:12,610 --> 00:25:17,380
feature called Nova anthem which is a

00:25:14,350 --> 00:25:18,520
call to reverse geo coder but otherwise

00:25:17,380 --> 00:25:20,110
this can all gonna be examined so I'm

00:25:18,520 --> 00:25:21,610
going to blow through a couple first

00:25:20,110 --> 00:25:22,870
lines this notebook and just get to the

00:25:21,610 --> 00:25:24,730
meat of things so what we're going to do

00:25:22,870 --> 00:25:26,740
I should tell you what our objective is

00:25:24,730 --> 00:25:29,020
so our objective here is we're going to

00:25:26,740 --> 00:25:31,390
go in query osm to get all the parks in

00:25:29,020 --> 00:25:32,950
Portland right and what we're going to

00:25:31,390 --> 00:25:34,390
do is we're going to download the like

00:25:32,950 --> 00:25:35,770
most recent satellite data about these

00:25:34,390 --> 00:25:37,570
parks and we're going to calculate the

00:25:35,770 --> 00:25:39,940
greenest park in Portland so we can go

00:25:37,570 --> 00:25:41,170
there like you know when we skip out

00:25:39,940 --> 00:25:44,670
early on Sunday and we want to go have

00:25:41,170 --> 00:25:46,720
fun so I'll show you guys how to do that

00:25:44,670 --> 00:25:49,170
so we're going to activate our API is

00:25:46,720 --> 00:25:51,370
we're going to bring up our slippy map

00:25:49,170 --> 00:25:55,780
we're going to select a nice little area

00:25:51,370 --> 00:25:57,520
of Portland we're going to do our

00:25:55,780 --> 00:25:58,840
filtering and this is less similar

00:25:57,520 --> 00:26:00,070
filtering I've just sort of filtered out

00:25:58,840 --> 00:26:04,060
a lot of the clouds and then I'm going

00:26:00,070 --> 00:26:05,500
to plot what we got on top and we can

00:26:04,060 --> 00:26:06,970
see we have a nice nice bit of coverage

00:26:05,500 --> 00:26:08,230
on Portland so we're going to take all

00:26:06,970 --> 00:26:10,630
these scenes we're going to mosaic them

00:26:08,230 --> 00:26:14,250
together or we're going to activate them

00:26:10,630 --> 00:26:14,250
download some and mosaic them together

00:26:22,979 --> 00:26:25,960
okay and so whether it's melody I'm

00:26:24,970 --> 00:26:27,850
going to I'm going to start walking to

00:26:25,960 --> 00:26:29,350
the next little example here so one of

00:26:27,850 --> 00:26:30,580
the like most common problems I've heard

00:26:29,350 --> 00:26:33,429
with people getting started with this

00:26:30,580 --> 00:26:34,749
data is I have this pixel now I want to

00:26:33,429 --> 00:26:36,489
know where it is in the world and what's

00:26:34,749 --> 00:26:38,019
there like I've found this thing that

00:26:36,489 --> 00:26:40,570
I'm interested in how do we look that up

00:26:38,019 --> 00:26:44,350
and the short of it is that we look that

00:26:40,570 --> 00:26:46,899
up by using OpenStreetMaps and we get to

00:26:44,350 --> 00:26:48,850
OpenStreetMaps from going from pixels to

00:26:46,899 --> 00:26:51,549
this thing called UTM Universal

00:26:48,850 --> 00:26:52,899
transverse Mercator to lat/long out then

00:26:51,549 --> 00:26:54,099
we can do our query and then we can map

00:26:52,899 --> 00:26:56,200
it back to our pixel so I'm gonna show

00:26:54,099 --> 00:26:57,749
you how to do that really quick and I

00:26:56,200 --> 00:27:00,399
should I should mention here that

00:26:57,749 --> 00:27:02,769
OpenStreetMaps is totally free to use

00:27:00,399 --> 00:27:05,259
and they're generally pretty awesome but

00:27:02,769 --> 00:27:06,970
the interfaces are kind of cryptic and

00:27:05,259 --> 00:27:08,320
so what we're going to do here is we're

00:27:06,970 --> 00:27:10,029
gonna actually use Jude all again to

00:27:08,320 --> 00:27:12,940
open our file and get what's called the

00:27:10,029 --> 00:27:17,849
geo transform and the projection

00:27:12,940 --> 00:27:20,440
reference out of our out of our geo tube

00:27:17,849 --> 00:27:22,570
so what I what I'm doing here is I'm

00:27:20,440 --> 00:27:24,460
using G doll I'm opening it up I'm

00:27:22,570 --> 00:27:26,590
taking the projection reference object

00:27:24,460 --> 00:27:27,940
and just shoving it into a variable I'm

00:27:26,590 --> 00:27:29,830
also taking the raw data and showing

00:27:27,940 --> 00:27:31,840
into a variable and then I'm also taking

00:27:29,830 --> 00:27:33,909
the transformer shoving it to a variable

00:27:31,840 --> 00:27:35,710
and then I'm just going through that

00:27:33,909 --> 00:27:37,269
first reference and finding out what UTM

00:27:35,710 --> 00:27:39,639
zone we're in because we need that UTM

00:27:37,269 --> 00:27:44,950
zone to figure out to calculate our

00:27:39,639 --> 00:27:47,289
lat/long I do that and here I'll see

00:27:44,950 --> 00:27:51,099
that all these images are in YouTube egn

00:27:47,289 --> 00:27:52,299
zone 10 in so what we'll do is we'll

00:27:51,099 --> 00:27:54,809
write a really really quick function

00:27:52,299 --> 00:28:00,220
here to convert a pixel position to UTM

00:27:54,809 --> 00:28:02,649
and we do that by getting basically

00:28:00,220 --> 00:28:07,059
using that transform object that GDL

00:28:02,649 --> 00:28:09,129
gives us this transform right here and

00:28:07,059 --> 00:28:10,450
it's basically just an affine transform

00:28:09,129 --> 00:28:13,080
which is the fancy word for there's some

00:28:10,450 --> 00:28:15,129
math in there but it's all pluses and

00:28:13,080 --> 00:28:16,299
multiplication and so I've defined that

00:28:15,129 --> 00:28:18,340
function right here and then I've also

00:28:16,299 --> 00:28:20,830
made a really quick draw point function

00:28:18,340 --> 00:28:21,700
and so what we should be able to do now

00:28:20,830 --> 00:28:25,720
is we should be able to take a random

00:28:21,700 --> 00:28:29,139
point on our scene open our file get

00:28:25,720 --> 00:28:33,009
that pixel in UTM convert that UTM to

00:28:29,139 --> 00:28:35,590
lat/long and then to query create this

00:28:33,009 --> 00:28:38,950
no button no man not some object

00:28:35,590 --> 00:28:40,810
and basically query what's on that point

00:28:38,950 --> 00:28:42,070
in the earth and we can display it so

00:28:40,810 --> 00:28:50,410
let's go ahead and do this little chunk

00:28:42,070 --> 00:28:52,030
here I should return and so whatever

00:28:50,410 --> 00:28:53,500
this pixel is right here this position

00:28:52,030 --> 00:28:56,650
that I defined three thousand fourteen

00:28:53,500 --> 00:28:58,030
hundred is seven nine thirty five North

00:28:56,650 --> 00:29:00,490
Choctaw Boulevard

00:28:58,030 --> 00:29:02,740
Kenton Portland blah blah blah blah blah

00:29:00,490 --> 00:29:03,940
so for completeness we should plot this

00:29:02,740 --> 00:29:06,280
and actually make sure this makes sense

00:29:03,940 --> 00:29:07,780
I'm going to need a Portland native here

00:29:06,280 --> 00:29:15,780
to confirm that this is roughly correct

00:29:07,780 --> 00:29:20,110
oh well this one is super cloudy so I

00:29:15,780 --> 00:29:22,740
did it is correct all right I did this

00:29:20,110 --> 00:29:24,880
yesterday this was all clear all right I

00:29:22,740 --> 00:29:28,720
did this in the neck it was all clear so

00:29:24,880 --> 00:29:30,100
anyway anyway so working with osm is

00:29:28,720 --> 00:29:32,140
super hard like I said before the

00:29:30,100 --> 00:29:33,580
interfaces are kind of cryptic I love

00:29:32,140 --> 00:29:35,050
the data to death but their pain to work

00:29:33,580 --> 00:29:37,150
with so the way I like to work with it

00:29:35,050 --> 00:29:39,730
is actually using this overpass turbo

00:29:37,150 --> 00:29:41,380
API and what this is is you can

00:29:39,730 --> 00:29:48,550
basically write this sort of cryptic

00:29:41,380 --> 00:29:50,230
query in here and overpass will will

00:29:48,550 --> 00:29:52,150
basically go and find stuff for you just

00:29:50,230 --> 00:29:54,010
like Google Maps would so I constructed

00:29:52,150 --> 00:29:57,040
a query here to find all them all the

00:29:54,010 --> 00:29:58,360
parks in Portland and I've already run

00:29:57,040 --> 00:29:59,560
this it takes like a couple minutes but

00:29:58,360 --> 00:30:02,740
you can see that it's actually defined

00:29:59,560 --> 00:30:04,450
all these parks I know this big one here

00:30:02,740 --> 00:30:06,460
I think this one might be one of the

00:30:04,450 --> 00:30:08,860
closest big ones to us this is cool

00:30:06,460 --> 00:30:14,140
circle but anyway what you can do is you

00:30:08,860 --> 00:30:15,610
can actually export this data as as geo

00:30:14,140 --> 00:30:17,080
jason which means you can work with it

00:30:15,610 --> 00:30:19,090
in our slippy map we can use it to crop

00:30:17,080 --> 00:30:19,600
stuff out which means we can do analysis

00:30:19,090 --> 00:30:21,670
with it

00:30:19,600 --> 00:30:23,590
so I've already saved that into the

00:30:21,670 --> 00:30:24,490
notebook and this is an example and so

00:30:23,590 --> 00:30:25,750
what we're going to do is we're going to

00:30:24,490 --> 00:30:27,400
use geo pandas which is just like a

00:30:25,750 --> 00:30:34,090
little syntactic sugar on top of pandas

00:30:27,400 --> 00:30:35,140
to load up this geo jason file and we're

00:30:34,090 --> 00:30:36,580
going to go through that to juice and

00:30:35,140 --> 00:30:38,190
file and just look at the size of the

00:30:36,580 --> 00:30:42,790
different parks that are in Portland

00:30:38,190 --> 00:30:44,290
let's do that all right so we've loaded

00:30:42,790 --> 00:30:45,100
the geo JSON file that we've gotten from

00:30:44,290 --> 00:30:46,990
OpenStreetMaps

00:30:45,100 --> 00:30:48,070
and I'm just printing the head here so

00:30:46,990 --> 00:30:49,120
we can see what's in here most of it's

00:30:48,070 --> 00:30:50,440
empty

00:30:49,120 --> 00:30:51,820
but there's actually some cool stuff in

00:30:50,440 --> 00:30:53,740
here I commented this out but you can

00:30:51,820 --> 00:30:55,200
actually if there is in

00:30:53,740 --> 00:30:57,880
OpenStreetMaps there's actually

00:30:55,200 --> 00:31:02,920
Wikipedia data so like it will return

00:30:57,880 --> 00:31:04,180
that which is pretty cool and so what

00:31:02,920 --> 00:31:05,830
I'm going to do now is I'm going to take

00:31:04,180 --> 00:31:07,150
that that data that we just got and I'm

00:31:05,830 --> 00:31:11,110
going to go put it in our local map so

00:31:07,150 --> 00:31:13,510
we can see what's up okay so I pulled

00:31:11,110 --> 00:31:16,420
this down from overpass turbo and now I

00:31:13,510 --> 00:31:18,610
can see in a my map where all these

00:31:16,420 --> 00:31:34,030
areas are overlapping you guys can see

00:31:18,610 --> 00:31:35,200
that okay so now we got that what we

00:31:34,030 --> 00:31:36,790
want to do is we actually want to start

00:31:35,200 --> 00:31:39,100
analyzing these parks for interesting

00:31:36,790 --> 00:31:41,880
data so the first step in analyzing

00:31:39,100 --> 00:31:44,290
these parks is that we need to go and

00:31:41,880 --> 00:31:45,790
get all the parks so some of these

00:31:44,290 --> 00:31:46,900
things can be chunked out into multiple

00:31:45,790 --> 00:31:48,400
bits you have these parks where it's

00:31:46,900 --> 00:31:50,140
like one corner over here in one corner

00:31:48,400 --> 00:31:52,179
over here so what we're going to have to

00:31:50,140 --> 00:31:54,010
do is we're going to have to group these

00:31:52,179 --> 00:31:55,300
parks together real quick and I'm going

00:31:54,010 --> 00:31:56,830
to group them together by name which is

00:31:55,300 --> 00:31:58,960
really great that's this is what like

00:31:56,830 --> 00:32:00,550
geo pandas is made for so we're just

00:31:58,960 --> 00:32:02,470
gonna run this really quick command and

00:32:00,550 --> 00:32:04,090
is I'm also going to have it print out

00:32:02,470 --> 00:32:09,309
the size of each of these parks just so

00:32:04,090 --> 00:32:11,290
we can see what we're dealing with okay

00:32:09,309 --> 00:32:13,390
so now I'm going to write two quick

00:32:11,290 --> 00:32:16,480
functions the first one is just going to

00:32:13,390 --> 00:32:18,429
pull a smaller chunk of Geo Jason out of

00:32:16,480 --> 00:32:19,929
that big geo JSON file that we we got

00:32:18,429 --> 00:32:22,000
it's basically just a dictionary and

00:32:19,929 --> 00:32:23,770
then I'm going to take that G tall

00:32:22,000 --> 00:32:25,270
command that we wrote before and I'm

00:32:23,770 --> 00:32:27,100
just basically going to take one of the

00:32:25,270 --> 00:32:30,610
my seam and I'm going to apply that

00:32:27,100 --> 00:32:32,230
command to my image so you can see that

00:32:30,610 --> 00:32:33,760
here for just basically going through

00:32:32,230 --> 00:32:34,300
this geo jason object and writing out

00:32:33,760 --> 00:32:37,480
the file

00:32:34,300 --> 00:32:40,540
and then this is just the same sort of

00:32:37,480 --> 00:32:43,780
geo jason or geo jason jidoka man where

00:32:40,540 --> 00:32:46,900
we go through and crop our scene out so

00:32:43,780 --> 00:32:50,679
I'm going to go ahead and run this if I

00:32:46,900 --> 00:32:53,559
do this first and it's just going to

00:32:50,679 --> 00:32:55,330
cook through really really quickly and

00:32:53,559 --> 00:32:58,960
Jeter's going to crop all these guys out

00:32:55,330 --> 00:33:00,250
for me and now I want to go and actually

00:32:58,960 --> 00:33:01,450
see what these guys look like so I'm

00:33:00,250 --> 00:33:02,860
going to make this a little bit easier

00:33:01,450 --> 00:33:04,120
on my notebook

00:33:02,860 --> 00:33:05,380
it's just a quick hack that I think

00:33:04,120 --> 00:33:06,820
everyone should be aware of still

00:33:05,380 --> 00:33:10,270
working with the TIFF files directly I'm

00:33:06,820 --> 00:33:11,620
going to use a tool in image magic which

00:33:10,270 --> 00:33:16,890
is like one of the best libraries ever

00:33:11,620 --> 00:33:16,890
to convert my TIFF files into JPEGs and

00:33:16,980 --> 00:33:21,520
then we can visualize them a lot easier

00:33:19,120 --> 00:33:23,559
so I'm going to run that and what we end

00:33:21,520 --> 00:33:28,030
up getting is something like this so we

00:33:23,559 --> 00:33:31,360
get all these nice little crop files of

00:33:28,030 --> 00:33:36,400
our parks and these are really nice and

00:33:31,360 --> 00:33:37,780
easy to work with all right so this is

00:33:36,400 --> 00:33:38,860
where you guys would probably want to

00:33:37,780 --> 00:33:42,940
start inserting your code if you want to

00:33:38,860 --> 00:33:45,059
do analysis so what I'm going to do here

00:33:42,940 --> 00:33:47,440
is I've written this sort of

00:33:45,059 --> 00:33:49,179
not-so-great function called calculate

00:33:47,440 --> 00:33:50,740
greenness and all this does is it looks

00:33:49,179 --> 00:33:53,440
at every single pixel in the image and

00:33:50,740 --> 00:33:55,090
takes the average of the red and green

00:33:53,440 --> 00:33:57,160
or the red and blue channels and looks

00:33:55,090 --> 00:33:59,350
at how much greener the green channel is

00:33:57,160 --> 00:34:01,630
over the red and blue Channel and then

00:33:59,350 --> 00:34:03,580
what I do is I calculate the number of

00:34:01,630 --> 00:34:05,830
just colored pixels in total and I get

00:34:03,580 --> 00:34:07,870
an average greenness over the other two

00:34:05,830 --> 00:34:09,609
channels for every park so this is a

00:34:07,870 --> 00:34:12,220
like rough proxy measurement for like

00:34:09,609 --> 00:34:15,399
how green the parks are so I go and can

00:34:12,220 --> 00:34:16,750
write this function and then I have a

00:34:15,399 --> 00:34:18,399
little list comprehension here where I

00:34:16,750 --> 00:34:20,109
can go and take each of my input image

00:34:18,399 --> 00:34:22,090
or all those cropped images that I made

00:34:20,109 --> 00:34:24,580
and run this function over it and save

00:34:22,090 --> 00:34:26,230
the result so there we've just

00:34:24,580 --> 00:34:30,940
calculated the greenness for every park

00:34:26,230 --> 00:34:36,040
in Portland and now what I can do is I

00:34:30,940 --> 00:34:38,350
can just go and plot all this data and

00:34:36,040 --> 00:34:39,790
here we go this is the greenness of the

00:34:38,350 --> 00:34:43,230
different parks in Portland all set up

00:34:39,790 --> 00:34:46,600
really easy to do and right now Luis

00:34:43,230 --> 00:34:50,619
Albania Park is ahead see if this

00:34:46,600 --> 00:34:52,570
actually works so what I'm going to do

00:34:50,619 --> 00:34:53,710
is I'm going to really display all my

00:34:52,570 --> 00:35:01,170
images but that someone is going to do

00:34:53,710 --> 00:35:01,170
it in sorted order of greenness here

00:35:04,970 --> 00:35:13,190
looks pretty green looks pretty green

00:35:08,109 --> 00:35:15,710
yeah it's super exciting right hmm all

00:35:13,190 --> 00:35:17,000
right wait wait wait wait so what we can

00:35:15,710 --> 00:35:18,740
do is we can also plot this on our map

00:35:17,000 --> 00:35:20,030
too so like we can actually put this up

00:35:18,740 --> 00:35:21,829
on the web and just have our daily

00:35:20,030 --> 00:35:24,230
update of what is super green in

00:35:21,829 --> 00:35:25,369
Portland today right which seems like

00:35:24,230 --> 00:35:28,579
something that should be happening in

00:35:25,369 --> 00:35:30,349
Portland cool and I am totally on time

00:35:28,579 --> 00:35:34,280
so we have one I have one last demo to

00:35:30,349 --> 00:35:35,869
show you guys and this one this one is

00:35:34,280 --> 00:35:40,640
super fun because I think this one is

00:35:35,869 --> 00:35:43,329
super powerful like we you know YouTube

00:35:40,640 --> 00:35:45,109
sort of dominates our lives anymore and

00:35:43,329 --> 00:35:46,549
satellite images are nice but sometimes

00:35:45,109 --> 00:35:48,680
you get this high-res satellite image

00:35:46,549 --> 00:35:50,390
and you really want to be able to focus

00:35:48,680 --> 00:35:52,280
on little things or you want to draw

00:35:50,390 --> 00:35:53,599
attention so I wanted to make a demo of

00:35:52,280 --> 00:35:55,700
where we can actually do these super

00:35:53,599 --> 00:35:57,289
cool flyovers of all this satellite data

00:35:55,700 --> 00:35:58,910
and I think this is really useful for

00:35:57,289 --> 00:36:03,230
stuff like if you want to go talk about

00:35:58,910 --> 00:36:05,329
a river ecosystem or a pipeline or sort

00:36:03,230 --> 00:36:06,650
of show relative position of say one

00:36:05,329 --> 00:36:08,119
smaller city that's having issues with

00:36:06,650 --> 00:36:10,490
respect to a bigger city that people

00:36:08,119 --> 00:36:12,650
might have heard of so what I'm going to

00:36:10,490 --> 00:36:16,970
do is this the exact same setup as

00:36:12,650 --> 00:36:19,250
before exact same little map and now

00:36:16,970 --> 00:36:29,529
what I'm going to do is I'm going to not

00:36:19,250 --> 00:36:29,529
just select an AO I do that over again

00:36:30,849 --> 00:36:34,609
there's like a little a Y and then I'm

00:36:33,230 --> 00:36:35,630
going to draw a path and this is the

00:36:34,609 --> 00:36:39,740
flat we're going to basically make a

00:36:35,630 --> 00:36:41,539
movie that is flying over this area so

00:36:39,740 --> 00:36:45,650
why don't we come down the river here

00:36:41,539 --> 00:36:48,920
we'll go here we go here go up here up

00:36:45,650 --> 00:36:51,109
here up here we'll go past where we are

00:36:48,920 --> 00:36:52,819
right now maybe stop right there all

00:36:51,109 --> 00:36:59,020
right so I've defined a path and I'm

00:36:52,819 --> 00:36:59,020
fine anyway same query

00:36:59,820 --> 00:37:06,990
cool and again we'll just plot what we

00:37:04,620 --> 00:37:08,430
got and this is the exact same

00:37:06,990 --> 00:37:12,000
boilerplate code there's nothing up my

00:37:08,430 --> 00:37:13,230
sleeves nothing fancy going on you see

00:37:12,000 --> 00:37:15,630
we get a bunch of overlapping scenes

00:37:13,230 --> 00:37:25,320
that look pretty good we're going to

00:37:15,630 --> 00:37:26,910
activate and download those scenes you

00:37:25,320 --> 00:37:34,080
see I said go get coffee here I would

00:37:26,910 --> 00:37:36,450
kill for a cup of coffee right now and

00:37:34,080 --> 00:37:37,890
so what we're going to do is you can see

00:37:36,450 --> 00:37:39,690
and I'm also get the head here while

00:37:37,890 --> 00:37:40,860
this is going on what we're going to do

00:37:39,690 --> 00:37:41,850
is we're actually going to go take all

00:37:40,860 --> 00:37:43,920
these things we're going to make them

00:37:41,850 --> 00:37:45,270
into a big mosaic remember your area and

00:37:43,920 --> 00:37:46,980
the way that's all going to work is that

00:37:45,270 --> 00:37:48,720
we're going to take this big huge giant

00:37:46,980 --> 00:37:50,370
image that we made we're going to build

00:37:48,720 --> 00:37:52,110
a little sub window and we're going to

00:37:50,370 --> 00:37:53,550
move the sub window between all the

00:37:52,110 --> 00:37:55,020
points so we have to like take our

00:37:53,550 --> 00:37:59,970
points that we define and we have to

00:37:55,020 --> 00:38:03,300
interpolate between them so that looks

00:37:59,970 --> 00:38:04,980
good going download all these and

00:38:03,300 --> 00:38:07,050
they're all ready so now I'm going to

00:38:04,980 --> 00:38:08,640
use G doll again same thing I'm just

00:38:07,050 --> 00:38:10,380
going to go make the seed alcohol and

00:38:08,640 --> 00:38:12,810
pass in all the scenes that I've found

00:38:10,380 --> 00:38:14,340
and this will take a thing because this

00:38:12,810 --> 00:38:15,510
is going to be a big huge image which is

00:38:14,340 --> 00:38:21,810
which is kind of cool it's going to be a

00:38:15,510 --> 00:38:23,100
huge chunk of Portland and then what

00:38:21,810 --> 00:38:25,460
we're just going to go visualize the

00:38:23,100 --> 00:38:25,460
output

00:38:27,480 --> 00:38:32,000
extra second cool

00:38:33,690 --> 00:38:38,009
and it's so big it even takes a second

00:38:35,279 --> 00:38:39,750
to load so this is should we case for a

00:38:38,009 --> 00:38:44,130
second on how beautiful Portland is

00:38:39,750 --> 00:38:46,559
today if that okay

00:38:44,130 --> 00:38:48,539
so now like I said all we need to do is

00:38:46,559 --> 00:38:50,369
move this crop window around this big

00:38:48,539 --> 00:38:51,750
huge image and we have a bunch of little

00:38:50,369 --> 00:38:53,009
images that we can then stitch together

00:38:51,750 --> 00:38:54,960
into a video so I'm going to find a

00:38:53,009 --> 00:38:56,039
quick crop function and I'm going to

00:38:54,960 --> 00:38:57,869
make this easy on myself so I'm going to

00:38:56,039 --> 00:39:00,269
find this crop function usually you do

00:38:57,869 --> 00:39:01,289
crop functions like top left and width

00:39:00,269 --> 00:39:02,670
and height this one's going to be based

00:39:01,289 --> 00:39:04,619
on the center and then the width and

00:39:02,670 --> 00:39:06,210
height I'm going to find a crop function

00:39:04,619 --> 00:39:14,039
and I'm going to quick test that it

00:39:06,210 --> 00:39:16,380
works and it crops cool unit test all

00:39:14,039 --> 00:39:17,759
right so there's one little trick that

00:39:16,380 --> 00:39:19,769
we have to figure out to make this work

00:39:17,759 --> 00:39:21,480
and that is to say that the points that

00:39:19,769 --> 00:39:23,970
I put in the slippy map above those are

00:39:21,480 --> 00:39:25,559
all that Long's and we need to get those

00:39:23,970 --> 00:39:27,589
in pixel values which is sort of the

00:39:25,559 --> 00:39:29,579
reverse of the problem we just saw and

00:39:27,589 --> 00:39:31,559
again we're going to use G dal to get

00:39:29,579 --> 00:39:34,859
that geo transform and then we're going

00:39:31,559 --> 00:39:36,240
to take that geo transform oh how does

00:39:34,859 --> 00:39:38,250
this work we're going to take that geo

00:39:36,240 --> 00:39:40,950
transform we're going to transform our

00:39:38,250 --> 00:39:45,720
points or transfer the corners of our

00:39:40,950 --> 00:39:47,490
image to get some as to get them as

00:39:45,720 --> 00:39:48,839
lat/long then we're going to take those

00:39:47,490 --> 00:39:50,849
lat/longs and we're going to like

00:39:48,839 --> 00:39:52,769
linearize the entire image I know it

00:39:50,849 --> 00:39:54,269
sounds fancy it's really not recently

00:39:52,769 --> 00:39:55,319
say if we have a lad over here and

00:39:54,269 --> 00:39:56,460
another lad over here we're going to

00:39:55,319 --> 00:39:58,140
subtract the difference so we know that

00:39:56,460 --> 00:39:59,549
it goes from here to here and we'll map

00:39:58,140 --> 00:40:01,079
each of those latitudes in between two

00:39:59,549 --> 00:40:03,750
pixels that's all this function is going

00:40:01,079 --> 00:40:05,250
to do so the first thing we're going to

00:40:03,750 --> 00:40:07,680
do is we're going to define this

00:40:05,250 --> 00:40:09,839
function called get extent and this just

00:40:07,680 --> 00:40:13,859
returns the corners those two corners in

00:40:09,839 --> 00:40:15,599
the image in a normal format and these

00:40:13,859 --> 00:40:20,430
are all I think going to be in UTM and

00:40:15,599 --> 00:40:22,319
so it just takes the corners and it

00:40:20,430 --> 00:40:24,180
sends them to array and then we're going

00:40:22,319 --> 00:40:27,180
to build this other function here called

00:40:24,180 --> 00:40:28,740
reproject coordinates what this does is

00:40:27,180 --> 00:40:30,390
this basically is calling out to GTL to

00:40:28,740 --> 00:40:33,509
get the transform again and it

00:40:30,390 --> 00:40:37,769
transforms each of those points from I

00:40:33,509 --> 00:40:39,180
believe you tune in to that long one so

00:40:37,769 --> 00:40:40,319
now we're just going to call it we're

00:40:39,180 --> 00:40:42,359
going to call these two functions that

00:40:40,319 --> 00:40:43,880
we wrote and reproject and we can get

00:40:42,359 --> 00:40:47,869
six

00:40:43,880 --> 00:40:49,880
I will do this at least one more time so

00:40:47,869 --> 00:40:52,190
here this is for this big image that we

00:40:49,880 --> 00:40:54,619
wrote this is the Latin long coordinates

00:40:52,190 --> 00:40:56,660
of the output of the of the corners of

00:40:54,619 --> 00:40:58,880
that image so now all I have to do is

00:40:56,660 --> 00:41:01,190
map each of those lat/long positions to

00:40:58,880 --> 00:41:03,200
the pixel positions inside our image and

00:41:01,190 --> 00:41:05,690
we can start cropping our image out and

00:41:03,200 --> 00:41:07,460
building our movie so this is like I

00:41:05,690 --> 00:41:09,890
said I called this poor man's lat/long

00:41:07,460 --> 00:41:10,549
it's it's a bit of a hack but it works

00:41:09,890 --> 00:41:12,109
pretty well we're just going to

00:41:10,549 --> 00:41:15,289
linearize the points and all we're doing

00:41:12,109 --> 00:41:17,539
is we just get the point center image we

00:41:15,289 --> 00:41:18,890
like I said we we have one point over

00:41:17,539 --> 00:41:21,980
here if we have another point you're

00:41:18,890 --> 00:41:26,569
just mapping two numbers together we're

00:41:21,980 --> 00:41:30,940
going to find that and we're going to

00:41:26,569 --> 00:41:30,940
drop it just to check our work again so

00:41:30,970 --> 00:41:35,630
we've just taken what we've done here is

00:41:33,920 --> 00:41:37,940
we've just taken those points that we've

00:41:35,630 --> 00:41:40,009
defined on that slippy map translate

00:41:37,940 --> 00:41:43,009
them from lat/long and got them into the

00:41:40,009 --> 00:41:46,910
pixel positions on this image which is

00:41:43,009 --> 00:41:48,890
pretty cool so now here's basically the

00:41:46,910 --> 00:41:50,630
last step we have points in space right

00:41:48,890 --> 00:41:52,700
and we need to basically chart a nice

00:41:50,630 --> 00:41:55,609
smooth path in between those points and

00:41:52,700 --> 00:41:56,240
space to maker or fly over movie so what

00:41:55,609 --> 00:41:57,920
we're going to do is we're going to

00:41:56,240 --> 00:41:59,450
write interpolation function and if you

00:41:57,920 --> 00:42:01,369
guys have never done this it's super fun

00:41:59,450 --> 00:42:03,470
all you do is you have like multiple

00:42:01,369 --> 00:42:04,849
points on a line and then you take your

00:42:03,470 --> 00:42:06,950
first point your second point you say

00:42:04,849 --> 00:42:08,509
recognize what is even bit of number

00:42:06,950 --> 00:42:10,609
spaces in between give me all the XY

00:42:08,509 --> 00:42:12,440
values in between and you can get super

00:42:10,609 --> 00:42:14,150
fancy with this you can do like splines

00:42:12,440 --> 00:42:14,960
and headings and changes around but

00:42:14,150 --> 00:42:17,119
we're going to keep this really simple

00:42:14,960 --> 00:42:19,819
because right now we're just trying to

00:42:17,119 --> 00:42:22,400
introduce our audience to this and then

00:42:19,819 --> 00:42:23,839
I'm just going to make another function

00:42:22,400 --> 00:42:25,369
here which is called build theme and

00:42:23,839 --> 00:42:27,710
what this will do is it'll just

00:42:25,369 --> 00:42:31,460
basically take our big image our crop

00:42:27,710 --> 00:42:33,710
window do some tests and then resize

00:42:31,460 --> 00:42:36,430
things down and then save it to a

00:42:33,710 --> 00:42:39,430
numbered file a sequential numbered file

00:42:36,430 --> 00:42:41,690
I'm going to sign these functions and

00:42:39,430 --> 00:42:43,849
I'm going to test all the stuff in my

00:42:41,690 --> 00:42:45,740
Jupiter notebook before I even run it so

00:42:43,849 --> 00:42:50,559
what we should see here is if all our

00:42:45,740 --> 00:42:50,559
points go around we're about ready to go

00:42:53,930 --> 00:43:03,029
looks about right right so this is what

00:42:56,249 --> 00:43:04,619
we're going to crop out all right so

00:43:03,029 --> 00:43:07,589
here's the Big Finish we're going to

00:43:04,619 --> 00:43:10,380
actually go and run this it'll take a

00:43:07,589 --> 00:43:12,150
second now I've said we're going to

00:43:10,380 --> 00:43:14,459
build a movie with that resolution of

00:43:12,150 --> 00:43:18,239
640 by 480 and we're going to load the

00:43:14,459 --> 00:43:19,289
image now I will do a scoop and line

00:43:18,239 --> 00:43:20,369
what we're going to use to actually

00:43:19,289 --> 00:43:22,199
stitch this movie together we're going

00:43:20,369 --> 00:43:25,739
to use a command line tool called a V

00:43:22,199 --> 00:43:27,269
calm is kind of like ffmpeg it's a

00:43:25,739 --> 00:43:30,119
pretty handy tool if you've never done

00:43:27,269 --> 00:43:31,559
this before it's a really clever tool

00:43:30,119 --> 00:43:32,609
for making movies or you can just

00:43:31,559 --> 00:43:34,890
generate a bunch of images and then

00:43:32,609 --> 00:43:36,569
splice them all together so this is

00:43:34,890 --> 00:43:39,680
finished and what I can do I'm just

00:43:36,569 --> 00:43:39,680
going to copy this command line

00:43:45,249 --> 00:43:48,399
thank you

00:43:50,140 --> 00:43:53,730
and this is going to cook

00:43:56,950 --> 00:44:10,510
and we're going to open this up there

00:43:59,680 --> 00:44:13,150
for the LCD and here we go we have a

00:44:10,510 --> 00:44:25,030
flyover in Portland and since it's a

00:44:13,150 --> 00:44:27,220
notebook right guys so these are

00:44:25,030 --> 00:44:29,020
notebooks and these are all open source

00:44:27,220 --> 00:44:31,990
and I've shown you guys where to get all

00:44:29,020 --> 00:44:34,750
this data so and how to use it and so I

00:44:31,990 --> 00:44:36,910
really hope that you all can go out and

00:44:34,750 --> 00:44:38,410
actually take the stuff and put it to

00:44:36,910 --> 00:44:40,240
good use so find something in your home

00:44:38,410 --> 00:44:41,589
like where you come from and figure out

00:44:40,240 --> 00:44:43,420
how satellite imagery can actually help

00:44:41,589 --> 00:44:46,670
you solve a problem because it's really

00:44:43,420 --> 00:44:58,579
powerful stuff all right thank you guys

00:44:46,670 --> 00:44:58,579
[Applause]

00:45:04,120 --> 00:45:06,750

YouTube URL: https://www.youtube.com/watch?v=rUUgLsspTZA


