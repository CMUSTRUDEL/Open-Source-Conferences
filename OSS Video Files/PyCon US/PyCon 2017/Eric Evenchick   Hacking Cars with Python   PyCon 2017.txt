Title: Eric Evenchick   Hacking Cars with Python   PyCon 2017
Publication date: 2017-05-21
Playlist: PyCon 2017
Description: 
	"Speaker: Eric Evenchick

Modern cars are networks of computers, and a high end vehicle could have nearly 100 different computers inside. These devices control everything from the engine to the airbags. By understanding how these systems work, we can interface with vehicles to read data, perform diagnostics, and even modify operation.

In this talk, we'll discuss pyvit, the Python Vehicle Interface Toolkit. This library, combined with some open source hardware, allows developers to talk to automotive controllers from Python. 

We will begin with an introduction to automotive networks, to provide a basis for understanding the tools. Next, we will look at the tools and show the basics of using them. Finally, we'll discuss real world applications of these tools, and how they're being used in the automotive world today.

Slides can be found at: https://speakerdeck.com/pycon2017 and https://github.com/PyCon/2017-slides"
Captions: 
	00:00:03,500 --> 00:00:09,300
good afternoon everyone our next speaker

00:00:06,480 --> 00:00:11,519
in the room is Aaron Evan chick and

00:00:09,300 --> 00:00:13,170
title of this talk is hacking cars with

00:00:11,519 --> 00:00:23,160
Bisons so please give a warm welcome to

00:00:13,170 --> 00:00:24,900
air hello welcome to the last talk slot

00:00:23,160 --> 00:00:27,119
thank you for sticking around for this

00:00:24,900 --> 00:00:28,170
one my name is Eric Evan chick and yeah

00:00:27,119 --> 00:00:30,810
today we'll be talking about hacking

00:00:28,170 --> 00:00:33,540
cars with Python a little bit about me I

00:00:30,810 --> 00:00:35,070
do security research for firm called

00:00:33,540 --> 00:00:37,350
botrytis partners we do a lot of stuff

00:00:35,070 --> 00:00:38,520
with like mobile and embedded and

00:00:37,350 --> 00:00:40,170
certainly historically I've done a lot

00:00:38,520 --> 00:00:41,850
of car security things which is what

00:00:40,170 --> 00:00:43,469
we're talking about today I also have a

00:00:41,850 --> 00:00:45,000
little company up in Canada called link

00:00:43,469 --> 00:00:46,770
layer labs that builds open-source

00:00:45,000 --> 00:00:48,510
hardware which we'll talk about a little

00:00:46,770 --> 00:00:50,730
bit today and also writes for this

00:00:48,510 --> 00:00:52,500
website called hackaday comm which I

00:00:50,730 --> 00:00:55,020
encourage you all to read as a shameless

00:00:52,500 --> 00:00:58,350
plug it's a blog about hardware hacking

00:00:55,020 --> 00:01:00,059
and and such but that's kind of enough

00:00:58,350 --> 00:01:02,640
about me what I'm curious about always

00:01:00,059 --> 00:01:05,220
when I talk about this is has anyone

00:01:02,640 --> 00:01:07,799
here done anything in the car hacking

00:01:05,220 --> 00:01:11,760
space you ever sent or received CANbus

00:01:07,799 --> 00:01:14,040
stuff a few hands that's cool and I

00:01:11,760 --> 00:01:17,700
assume like some people here probably

00:01:14,040 --> 00:01:19,290
use Python so it's kind of a good

00:01:17,700 --> 00:01:21,270
audience you know not too much for cars

00:01:19,290 --> 00:01:25,259
but lots of a Python and we'll go with

00:01:21,270 --> 00:01:28,530
that a little disclaimer though I don't

00:01:25,259 --> 00:01:30,299
want you to break your car and some of

00:01:28,530 --> 00:01:32,490
the diagnostic stuff you can do to cars

00:01:30,299 --> 00:01:35,490
gives you really high-level access and

00:01:32,490 --> 00:01:36,960
you literally can brick brick things you

00:01:35,490 --> 00:01:39,630
can also modify safety critical systems

00:01:36,960 --> 00:01:41,850
which is bad because yeah you don't want

00:01:39,630 --> 00:01:45,899
to want to do that when you're inside of

00:01:41,850 --> 00:01:48,390
a car it might be illegal if you say

00:01:45,899 --> 00:01:50,700
reset an odometer or change VIN numbers

00:01:48,390 --> 00:01:52,140
that's that's not cool so like don't do

00:01:50,700 --> 00:01:56,280
those things and proceed at your own

00:01:52,140 --> 00:01:57,689
risk and don't blame me yeah so first

00:01:56,280 --> 00:01:59,610
thing about cars or computers nowadays

00:01:57,689 --> 00:02:02,610
they're just robots that you happen to

00:01:59,610 --> 00:02:04,710
sit inside of and this happened for a

00:02:02,610 --> 00:02:06,479
few reasons the first one is safety

00:02:04,710 --> 00:02:08,819
you're probably familiar with you know

00:02:06,479 --> 00:02:11,039
airbags and other safety advances that

00:02:08,819 --> 00:02:12,989
have come in to cars one thing you might

00:02:11,039 --> 00:02:13,910
not know is that airbags are like really

00:02:12,989 --> 00:02:16,520
complex now

00:02:13,910 --> 00:02:18,980
some of them will actually detect things

00:02:16,520 --> 00:02:21,200
like how heavy the occupant is where

00:02:18,980 --> 00:02:23,450
their seat is whether their seat belt is

00:02:21,200 --> 00:02:26,240
actually done up and so on and so forth

00:02:23,450 --> 00:02:27,890
before firing the airbag and then using

00:02:26,240 --> 00:02:30,260
that data they actually determine how

00:02:27,890 --> 00:02:34,130
hard they should fire the airbag to

00:02:30,260 --> 00:02:35,780
provide the best crash resistance so you

00:02:34,130 --> 00:02:36,830
need a computer do that you can't can't

00:02:35,780 --> 00:02:39,020
do that with the mechanical system

00:02:36,830 --> 00:02:42,020
advanced features of course we have the

00:02:39,020 --> 00:02:44,720
Tesla autopilot there and also the

00:02:42,020 --> 00:02:46,970
infotainment systems generally called a

00:02:44,720 --> 00:02:49,040
das advanced driver assistance systems

00:02:46,970 --> 00:02:51,470
in the industry these are things like

00:02:49,040 --> 00:02:53,120
your auto braking your adaptive cruise

00:02:51,470 --> 00:02:54,830
you know you need computers to pull that

00:02:53,120 --> 00:02:56,990
off but the real reason is actually

00:02:54,830 --> 00:02:59,450
emissions this is why we got electronic

00:02:56,990 --> 00:03:01,160
engine controls in the first place there

00:02:59,450 --> 00:03:02,480
was requirements that went in to say hey

00:03:01,160 --> 00:03:04,460
you need to make those cars more

00:03:02,480 --> 00:03:07,310
efficient you need them to do less

00:03:04,460 --> 00:03:08,600
emissions so figure it out and the

00:03:07,310 --> 00:03:10,370
automotive companies went off and

00:03:08,600 --> 00:03:13,040
figured out all this cool stuff like

00:03:10,370 --> 00:03:14,750
exhaust gas recirculation and all sorts

00:03:13,040 --> 00:03:17,600
of fancy ways of controlling engines

00:03:14,750 --> 00:03:19,250
fuel injection the problem was it was

00:03:17,600 --> 00:03:22,070
hard to do so they needed computers to

00:03:19,250 --> 00:03:24,110
make it work but cars are also networks

00:03:22,070 --> 00:03:27,080
in fact there's a lot of computers in a

00:03:24,110 --> 00:03:28,370
car up to a hundred in a fancy car like

00:03:27,080 --> 00:03:29,960
the fancier your car is the more

00:03:28,370 --> 00:03:32,600
computers it has is just a rule of thumb

00:03:29,960 --> 00:03:35,060
you know the engine controller if your

00:03:32,600 --> 00:03:36,620
car has an internal combustion engine it

00:03:35,060 --> 00:03:38,900
probably has an engine controller if

00:03:36,620 --> 00:03:40,670
your car is unlike the super high-end it

00:03:38,900 --> 00:03:45,020
might have and I've literally seen this

00:03:40,670 --> 00:03:46,670
in the car an aromatherapy unit and that

00:03:45,020 --> 00:03:48,920
actually could be connected to the cars

00:03:46,670 --> 00:03:50,720
network automotive networks nowadays

00:03:48,920 --> 00:03:52,700
they're typically can bus controller

00:03:50,720 --> 00:03:54,830
area network that will come up a lot

00:03:52,700 --> 00:03:56,360
I'll call it can it's one way of

00:03:54,830 --> 00:03:57,890
networking stuff together there's a few

00:03:56,360 --> 00:03:59,900
older technologies there's some newer

00:03:57,890 --> 00:04:02,900
technologies the by-and-large things are

00:03:59,900 --> 00:04:04,790
still can and this shows you like why

00:04:02,900 --> 00:04:07,010
there's so many computers we have door

00:04:04,790 --> 00:04:09,200
controllers we have airbag controllers

00:04:07,010 --> 00:04:12,709
we have an engine controller a radio

00:04:09,200 --> 00:04:15,110
infotainment telematics for like OnStar

00:04:12,709 --> 00:04:16,730
and things like that body controls so on

00:04:15,110 --> 00:04:19,760
and so forth tons of parts they ought to

00:04:16,730 --> 00:04:20,989
talk so that brings us to canvas and

00:04:19,760 --> 00:04:22,100
it's important understand a little bit

00:04:20,989 --> 00:04:25,100
about this if you're going to play with

00:04:22,100 --> 00:04:26,639
cars if controller area network and the

00:04:25,100 --> 00:04:27,840
reason it exists for cars

00:04:26,639 --> 00:04:30,990
because it's cheap and the automotive

00:04:27,840 --> 00:04:32,550
industry is all about saving money it's

00:04:30,990 --> 00:04:34,229
really cheap to get work things together

00:04:32,550 --> 00:04:36,150
because unlike Ethernet you don't need a

00:04:34,229 --> 00:04:38,729
fire or a Mac really you just need this

00:04:36,150 --> 00:04:40,740
like cheap little transceiver chip the

00:04:38,729 --> 00:04:42,900
controller for it is onboard all these

00:04:40,740 --> 00:04:43,919
microcontrollers you know for a dollar

00:04:42,900 --> 00:04:46,199
you can get one of these

00:04:43,919 --> 00:04:48,439
microcontrollers like 10 20 cents you

00:04:46,199 --> 00:04:50,430
have a transceiver you're good to go and

00:04:48,439 --> 00:04:52,469
there's a bunch of different types so

00:04:50,430 --> 00:04:54,180
most you see is high-speed this is a

00:04:52,469 --> 00:04:55,849
differential thing so kind of like

00:04:54,180 --> 00:04:57,689
Ethernet you twist the wires together

00:04:55,849 --> 00:04:58,979
there's a low speed which is

00:04:57,689 --> 00:05:02,099
single-ended that's when you want to be

00:04:58,979 --> 00:05:03,750
even cheaper tolerant cans used in

00:05:02,099 --> 00:05:05,279
things like airbags for safety and

00:05:03,750 --> 00:05:06,900
there's this nuke and flexible data

00:05:05,279 --> 00:05:09,419
thing that lets you send more data

00:05:06,900 --> 00:05:11,189
faster but a typical structure you'll

00:05:09,419 --> 00:05:12,779
see is a bunch of controllers to do

00:05:11,189 --> 00:05:15,300
important things on a differential

00:05:12,779 --> 00:05:17,310
high-speed canvas in green here like

00:05:15,300 --> 00:05:18,629
your engine any lock breaks those are

00:05:17,310 --> 00:05:21,719
kind of important we want those to work

00:05:18,629 --> 00:05:23,729
quickly and transmission also needs to

00:05:21,719 --> 00:05:25,409
know about the engine pretty fast then

00:05:23,729 --> 00:05:27,479
you'll have controllers that Gateway

00:05:25,409 --> 00:05:29,099
messages through to a different can bus

00:05:27,479 --> 00:05:30,900
in this case it's a body control module

00:05:29,099 --> 00:05:33,150
that then gateways some of that across

00:05:30,900 --> 00:05:36,300
to say the instrument panel or the door

00:05:33,150 --> 00:05:38,400
modules and that's the topology that you

00:05:36,300 --> 00:05:40,650
see except in more complex vehicles you

00:05:38,400 --> 00:05:43,110
might have up to you know five six

00:05:40,650 --> 00:05:46,500
different can buses that are all gateway

00:05:43,110 --> 00:05:48,389
together in crazy ways but can itself is

00:05:46,500 --> 00:05:49,949
really simple it's a protocol that you

00:05:48,389 --> 00:05:52,319
can like learn in a day because only if

00:05:49,949 --> 00:05:53,909
like three things need to know about you

00:05:52,319 --> 00:05:55,740
have controllers and these are nodes of

00:05:53,909 --> 00:05:57,810
the network so an engine control unit

00:05:55,740 --> 00:06:00,419
might be one controller a body control

00:05:57,810 --> 00:06:01,589
unit might be another one so on and so

00:06:00,419 --> 00:06:04,860
forth they're all just connected

00:06:01,589 --> 00:06:07,319
together on this big wire that's the bus

00:06:04,860 --> 00:06:10,379
so this collection of them is called a

00:06:07,319 --> 00:06:12,930
bus and a frame you only really have to

00:06:10,379 --> 00:06:14,939
care about three things there's an ID

00:06:12,930 --> 00:06:18,060
and that's just a number that says this

00:06:14,939 --> 00:06:19,860
is what this frame means there is a data

00:06:18,060 --> 00:06:21,659
length code that tells you how many

00:06:19,860 --> 00:06:23,729
bytes are in that frame you can only

00:06:21,659 --> 00:06:26,009
have up to eight and then there are

00:06:23,729 --> 00:06:28,770
eight bytes of data that's it

00:06:26,009 --> 00:06:29,939
it's just ID they link to data if you're

00:06:28,770 --> 00:06:31,289
a programmer that's all you have to care

00:06:29,939 --> 00:06:32,879
about if you're doing like electrical

00:06:31,289 --> 00:06:34,919
stuff it's come more complicated but

00:06:32,879 --> 00:06:36,959
that's it it's just you know you have an

00:06:34,919 --> 00:06:39,779
ID you have your eight bytes you look at

00:06:36,959 --> 00:06:40,409
them you get your data there's two ways

00:06:39,779 --> 00:06:42,569
this is you

00:06:40,409 --> 00:06:44,219
one is just operational data that's what

00:06:42,569 --> 00:06:45,509
I like to call it and this is what's

00:06:44,219 --> 00:06:47,939
happening all the time in your car

00:06:45,509 --> 00:06:50,550
things are periodically broadcasting

00:06:47,939 --> 00:06:52,679
messages and they're being picked up by

00:06:50,550 --> 00:06:54,689
other controllers that want to know

00:06:52,679 --> 00:06:56,519
about that particular thing and then

00:06:54,689 --> 00:06:58,469
they use that to make decisions one

00:06:56,519 --> 00:07:00,659
example and we'll use this a bit is your

00:06:58,469 --> 00:07:02,729
engine controller may broadcast the

00:07:00,659 --> 00:07:05,219
engine speed and revolutions per minute

00:07:02,729 --> 00:07:07,559
your instrument panel might pick that up

00:07:05,219 --> 00:07:08,669
and display it on the tachometer if you

00:07:07,559 --> 00:07:10,830
have a car that still has a tachometer

00:07:08,669 --> 00:07:12,989
they're kind of going away but that's

00:07:10,830 --> 00:07:14,819
one example this obviously that's a very

00:07:12,989 --> 00:07:16,409
simple example you have more complex

00:07:14,819 --> 00:07:18,869
things like you might have a yaw rate

00:07:16,409 --> 00:07:20,729
sensor that is then connected to your

00:07:18,869 --> 00:07:23,039
traction control system and is measuring

00:07:20,729 --> 00:07:24,629
the yaw of the car and another sensor

00:07:23,039 --> 00:07:27,239
that's measuring the steering angle is

00:07:24,629 --> 00:07:29,909
receiving those two things yon steering

00:07:27,239 --> 00:07:31,619
angle over the canvas periodically being

00:07:29,909 --> 00:07:32,879
broadcast and whenever it things that

00:07:31,619 --> 00:07:34,949
you're steering this way and you're

00:07:32,879 --> 00:07:36,989
young the other way it's going to take

00:07:34,949 --> 00:07:39,389
some corrective action so that's how the

00:07:36,989 --> 00:07:41,819
operational data works just fixed

00:07:39,389 --> 00:07:44,129
broadcast times 10 milliseconds for one

00:07:41,819 --> 00:07:46,789
message 100 for another maybe based on

00:07:44,129 --> 00:07:48,839
how important it is really simple

00:07:46,789 --> 00:07:50,360
diagnostics is the more complicated one

00:07:48,839 --> 00:07:53,069
but also the more fun one to play with

00:07:50,360 --> 00:07:55,379
it's used during specific times and

00:07:53,069 --> 00:07:57,119
allows for like special interaction that

00:07:55,379 --> 00:07:59,789
you shouldn't have normally and it's a

00:07:57,119 --> 00:08:01,829
client-server approach so this

00:07:59,789 --> 00:08:04,469
operational data again it's broadcast

00:08:01,829 --> 00:08:06,029
it's periodic and it makes all the

00:08:04,469 --> 00:08:07,559
normal stuff that happens when you're

00:08:06,029 --> 00:08:09,509
driving your car works and you never

00:08:07,559 --> 00:08:10,769
think about it's just like turn the key

00:08:09,509 --> 00:08:12,569
and there's lots of canned messages

00:08:10,769 --> 00:08:14,159
flying around but don't worry about it

00:08:12,569 --> 00:08:16,259
your car still works they use

00:08:14,159 --> 00:08:18,659
proprietary encoding for this using a

00:08:16,259 --> 00:08:21,719
can database this is just saying that

00:08:18,659 --> 00:08:24,809
for this ID and these bytes it has this

00:08:21,719 --> 00:08:26,639
meaning and we can show how that works

00:08:24,809 --> 00:08:28,679
in a moment but what it lets us do is

00:08:26,639 --> 00:08:30,419
people hacking cars is get information

00:08:28,679 --> 00:08:33,059
about the vehicle if we can decode the

00:08:30,419 --> 00:08:35,009
messages we can log that data and find

00:08:33,059 --> 00:08:37,919
out you know hmm how's my engine

00:08:35,009 --> 00:08:40,079
performing or how's my electric vehicle

00:08:37,919 --> 00:08:42,539
battery degrading things like that and

00:08:40,079 --> 00:08:44,430
also we can control components by

00:08:42,539 --> 00:08:46,079
sending them our own messages and

00:08:44,430 --> 00:08:49,110
tricking them into doing what we want

00:08:46,079 --> 00:08:51,120
them to do so the way this works engine

00:08:49,110 --> 00:08:53,050
control module in this example that same

00:08:51,120 --> 00:08:55,180
8 byte frame

00:08:53,050 --> 00:08:58,390
and we would have this canned database

00:08:55,180 --> 00:09:00,279
file which is just a big text file

00:08:58,390 --> 00:09:02,380
actually that tells us how to decode

00:09:00,279 --> 00:09:04,420
every one of these frames and in this

00:09:02,380 --> 00:09:08,380
case it might tell us that bytes 0 & 1

00:09:04,420 --> 00:09:09,790
our engine rpm then we get o X 5 BC it's

00:09:08,380 --> 00:09:11,320
going to tell us the endedness it's

00:09:09,790 --> 00:09:13,089
going to tell us if it's signed and

00:09:11,320 --> 00:09:15,899
things like that but let's just take a

00:09:13,089 --> 00:09:19,269
simple example 5 BC convert that decimal

00:09:15,899 --> 00:09:20,589
1500 rpm so the instrument cluster will

00:09:19,269 --> 00:09:23,410
see that message and move your

00:09:20,589 --> 00:09:26,350
tachometer to 1500 rpm telling you that

00:09:23,410 --> 00:09:28,029
your engine is in fact spinning now you

00:09:26,350 --> 00:09:29,769
can also mess with it and tell it that

00:09:28,029 --> 00:09:31,930
it's spinning a lot faster so in this

00:09:29,769 --> 00:09:33,579
example it's a injection that we're

00:09:31,930 --> 00:09:36,399
doing and actually telling it that it's

00:09:33,579 --> 00:09:37,959
doing 8,000 rpm but the real fun part of

00:09:36,399 --> 00:09:42,130
this picture is this car actually has no

00:09:37,959 --> 00:09:44,620
engine in it at all huh so we're just

00:09:42,130 --> 00:09:46,930
we're just having fun and this is kind

00:09:44,620 --> 00:09:48,610
of a silly example but practical things

00:09:46,930 --> 00:09:50,380
that I've done with this is you pull the

00:09:48,610 --> 00:09:51,970
power steering module out of one car you

00:09:50,380 --> 00:09:53,709
want to use it in a different car you

00:09:51,970 --> 00:09:55,839
need to tell it that it has 12 volt

00:09:53,709 --> 00:09:57,190
power that the engine is running it

00:09:55,839 --> 00:09:58,959
wants to know these things or doesn't

00:09:57,190 --> 00:10:00,160
kill your 12-volt battery and you also

00:09:58,959 --> 00:10:02,260
need to tell it how fast the car is

00:10:00,160 --> 00:10:04,480
going because it will apply a lot of

00:10:02,260 --> 00:10:05,770
torque when you're going slow and not so

00:10:04,480 --> 00:10:08,140
much when you're going fast so you don't

00:10:05,770 --> 00:10:09,490
flip the car over and yeah you can

00:10:08,140 --> 00:10:11,740
actually implement those things yourself

00:10:09,490 --> 00:10:12,790
and take a power steering module and put

00:10:11,740 --> 00:10:16,600
it on the bench or whatever you'd like

00:10:12,790 --> 00:10:18,399
to do diagnostics this is used during

00:10:16,600 --> 00:10:20,320
manufacturing service end of life and

00:10:18,399 --> 00:10:21,820
forensics manufacturing to set your car

00:10:20,320 --> 00:10:23,649
up service to figure out what's wrong

00:10:21,820 --> 00:10:24,370
with it end of life to deploy your

00:10:23,649 --> 00:10:28,000
airbags

00:10:24,370 --> 00:10:30,130
oddly enough and forensics for if your

00:10:28,000 --> 00:10:33,490
airbags go up they can actually get some

00:10:30,130 --> 00:10:34,899
cool data but why you crashed your ads

00:10:33,490 --> 00:10:36,100
like for a ton of features we're going

00:10:34,899 --> 00:10:37,510
to talk about them but it usually

00:10:36,100 --> 00:10:39,880
requires special tools

00:10:37,510 --> 00:10:44,380
that's a GM tech - it is one of the GM

00:10:39,880 --> 00:10:45,820
tools it is rather expensive so first

00:10:44,380 --> 00:10:49,449
thing we need to know about diagnostics

00:10:45,820 --> 00:10:51,550
is this is OTP I said the can is eight

00:10:49,449 --> 00:10:53,170
bytes and that's a problem because VIN

00:10:51,550 --> 00:10:54,760
numbers are longer than eight bytes and

00:10:53,170 --> 00:10:56,709
you might want to send a VIN number over

00:10:54,760 --> 00:10:58,690
can VIN number being a vehicle

00:10:56,709 --> 00:11:01,270
identification number every car has a

00:10:58,690 --> 00:11:02,740
unique one so that's you know displayed

00:11:01,270 --> 00:11:05,020
on your windshield but how do we send

00:11:02,740 --> 00:11:06,819
this 17 character thing and eight bytes

00:11:05,020 --> 00:11:09,789
well we just combined

00:11:06,819 --> 00:11:12,189
frames together and is OTP also called

00:11:09,789 --> 00:11:15,309
can TP is just a transport protocol lets

00:11:12,189 --> 00:11:18,220
us do that so it allows 4095 whole bytes

00:11:15,309 --> 00:11:20,529
of transmission and flow control makes

00:11:18,220 --> 00:11:21,459
the whole thing work it's really nice

00:11:20,529 --> 00:11:22,779
when you're trying to do firmware

00:11:21,459 --> 00:11:25,869
updates because doing those eight bytes

00:11:22,779 --> 00:11:28,179
at the time is not not fun so once we

00:11:25,869 --> 00:11:30,249
have the ability to send 4095 bytes we

00:11:28,179 --> 00:11:31,359
need to get into the standards I can't

00:11:30,249 --> 00:11:33,279
talk about all of them because there's a

00:11:31,359 --> 00:11:37,179
million of them but basically all cars

00:11:33,279 --> 00:11:38,589
nowadays will do obd2 and this is the

00:11:37,179 --> 00:11:39,879
one that you're probably familiar with

00:11:38,589 --> 00:11:42,609
if you've ever played with cars and

00:11:39,879 --> 00:11:44,470
they'll do unified diagnostic services

00:11:42,609 --> 00:11:45,759
and this is one that you probably aren't

00:11:44,470 --> 00:11:47,529
familiar with unless you worked in the

00:11:45,759 --> 00:11:51,209
automotive industry or have played with

00:11:47,529 --> 00:11:55,269
this a lot there's other older ones Jade

00:11:51,209 --> 00:11:57,069
1850 and ISO 1991 41 some of these are

00:11:55,269 --> 00:11:58,989
still used a bit but they're not based

00:11:57,069 --> 00:12:02,619
on can and I don't have time to talk

00:11:58,989 --> 00:12:04,269
though over t2 this is the simplest

00:12:02,619 --> 00:12:06,069
thing to play with with a car if you own

00:12:04,269 --> 00:12:08,979
a car you might want to do this to save

00:12:06,069 --> 00:12:10,809
yourself some money if anything else you

00:12:08,979 --> 00:12:12,489
can read all these nice parameters about

00:12:10,809 --> 00:12:14,350
your car like how fast my engine

00:12:12,489 --> 00:12:15,999
spinning how fast am I going you can

00:12:14,350 --> 00:12:18,309
plot them and log them using some cool

00:12:15,999 --> 00:12:20,019
apps at least on Android you can also

00:12:18,309 --> 00:12:22,389
clear fault code so when that silly

00:12:20,019 --> 00:12:24,429
check engine light comes on you can turn

00:12:22,389 --> 00:12:26,799
it off and then it might come on again

00:12:24,429 --> 00:12:29,019
and you have a real problem but you know

00:12:26,799 --> 00:12:30,819
saves you the 50 bucks to get someone to

00:12:29,019 --> 00:12:32,739
actually do it for you and you can get

00:12:30,819 --> 00:12:36,459
the best reference of this is that

00:12:32,739 --> 00:12:38,619
Wikipedia page of obd2 pids it has

00:12:36,459 --> 00:12:40,749
everything you can request it's it's a

00:12:38,619 --> 00:12:43,419
beautiful Wikipedia page I always refer

00:12:40,749 --> 00:12:45,220
people there and yeah it has everything

00:12:43,419 --> 00:12:47,259
you need you can buy one of these cheap

00:12:45,220 --> 00:12:49,600
interfaces that's a Bluetooth one and

00:12:47,259 --> 00:12:52,839
get going pretty quick but you might get

00:12:49,600 --> 00:12:55,149
bored but how does OED work well okay we

00:12:52,839 --> 00:12:56,949
have a mode and a parameter ID so we say

00:12:55,149 --> 00:12:58,959
you know mode one is request some

00:12:56,949 --> 00:13:02,109
current data we say I want to request

00:12:58,959 --> 00:13:05,439
parameter D ID o x OC or something like

00:13:02,109 --> 00:13:07,689
that send that off to our engine control

00:13:05,439 --> 00:13:09,249
unit which is a server in this case it

00:13:07,689 --> 00:13:11,199
looks at that and then sends us back the

00:13:09,249 --> 00:13:13,989
current data so it sends mode adding

00:13:11,199 --> 00:13:15,519
ox40 to say this is a response it echoes

00:13:13,989 --> 00:13:18,009
that pidz so we know what we're actually

00:13:15,519 --> 00:13:21,180
getting and then senders the data it's a

00:13:18,009 --> 00:13:23,170
really simple request response structure

00:13:21,180 --> 00:13:25,000
but you might yeah I might get bored of

00:13:23,170 --> 00:13:28,000
OBD because like it's a finite list of

00:13:25,000 --> 00:13:29,560
these things and you know well once you

00:13:28,000 --> 00:13:31,810
go through them it's like I want more

00:13:29,560 --> 00:13:34,990
well unified diagnostic services is more

00:13:31,810 --> 00:13:37,210
it is what the actual OM uses for their

00:13:34,990 --> 00:13:38,920
diagnostic tools you have a client on

00:13:37,210 --> 00:13:40,330
the server again the client is the tool

00:13:38,920 --> 00:13:42,880
you're plugging in and the server is

00:13:40,330 --> 00:13:44,770
this engine control unit and it defines

00:13:42,880 --> 00:13:46,720
for these functional units that contain

00:13:44,770 --> 00:13:48,520
a total of 25 services we'll go over

00:13:46,720 --> 00:13:50,530
them pretty quick just to talk about the

00:13:48,520 --> 00:13:53,170
cool ones and it's available from the

00:13:50,530 --> 00:13:55,360
ISO is a PDF but that PDF cost one

00:13:53,170 --> 00:13:58,770
hundred ninety-eight it's check or no

00:13:55,360 --> 00:14:01,270
not check Swiss Swiss francs fed CHF

00:13:58,770 --> 00:14:03,460
yeah that's a lot of money for a PDF

00:14:01,270 --> 00:14:06,370
document and you know it's illegal for

00:14:03,460 --> 00:14:07,930
me to just give it to you so that's why

00:14:06,370 --> 00:14:09,700
while we get to the Python part of this

00:14:07,930 --> 00:14:14,380
it's more fun to implement that in

00:14:09,700 --> 00:14:16,720
Python than just hand around PDFs so how

00:14:14,380 --> 00:14:18,820
does DDS work very similar we say I want

00:14:16,720 --> 00:14:20,530
to do this service it has an ID and here

00:14:18,820 --> 00:14:22,270
are the parameters you send that off to

00:14:20,530 --> 00:14:24,430
the controller it thinks about it a bit

00:14:22,270 --> 00:14:26,140
and then sends you back a response you

00:14:24,430 --> 00:14:27,580
need to know how the service works to

00:14:26,140 --> 00:14:29,200
know how to encode those request

00:14:27,580 --> 00:14:32,080
parameters and how to decode those

00:14:29,200 --> 00:14:33,520
response parameters unfortunately you're

00:14:32,080 --> 00:14:34,810
going to have to buy the PDF and

00:14:33,520 --> 00:14:37,660
influent this all yourself in order to

00:14:34,810 --> 00:14:39,240
make that work but there's lots of fun

00:14:37,660 --> 00:14:41,560
things you can do once you get there

00:14:39,240 --> 00:14:43,390
there's this first functional unit which

00:14:41,560 --> 00:14:45,910
is all just about setting up the session

00:14:43,390 --> 00:14:48,100
so you know getting into the right mode

00:14:45,910 --> 00:14:50,380
getting security access if you need it

00:14:48,100 --> 00:14:52,480
you can reset them and change the bit

00:14:50,380 --> 00:14:53,860
rates and all that sort of stuff not

00:14:52,480 --> 00:14:56,050
much fun in here it's just you know set

00:14:53,860 --> 00:14:58,120
up but then we get to the cool stuff so

00:14:56,050 --> 00:15:00,460
there's just read data by identifiers

00:14:58,120 --> 00:15:02,830
there's just arbitrary IDs mapping -

00:15:00,460 --> 00:15:04,750
blocks of data and you can read them you

00:15:02,830 --> 00:15:06,130
can also write some of them which would

00:15:04,750 --> 00:15:08,800
change the functionality of that

00:15:06,130 --> 00:15:10,780
controller kind of exciting you can also

00:15:08,800 --> 00:15:12,670
read and write memory addresses if that

00:15:10,780 --> 00:15:14,290
functionality is enabled and some

00:15:12,670 --> 00:15:16,210
controllers leave that functionality

00:15:14,290 --> 00:15:17,830
enabled you can dump blocks of memory

00:15:16,210 --> 00:15:19,450
out of the controller pretty good if

00:15:17,830 --> 00:15:21,490
you're reverse engineering a system and

00:15:19,450 --> 00:15:22,750
there's some other you know scaling data

00:15:21,490 --> 00:15:24,730
to figure out how to convert to

00:15:22,750 --> 00:15:26,590
engineering units and periodic data

00:15:24,730 --> 00:15:28,150
identifiers will broadcast stuff to you

00:15:26,590 --> 00:15:30,550
but yeah this is the basic way to get

00:15:28,150 --> 00:15:32,020
data in and out you can do fault codes

00:15:30,550 --> 00:15:34,480
so you can read your fault codes and

00:15:32,020 --> 00:15:35,799
clear your fault codes

00:15:34,480 --> 00:15:37,779
useful if you're trying to fix a car

00:15:35,799 --> 00:15:39,459
nowadays you basically can't diagnose

00:15:37,779 --> 00:15:40,649
the car without being able to look at

00:15:39,459 --> 00:15:43,749
fault codes

00:15:40,649 --> 00:15:45,600
there's also input/output control this

00:15:43,749 --> 00:15:47,889
should never be enabled in production

00:15:45,600 --> 00:15:50,679
because what it does that lets you just

00:15:47,889 --> 00:15:52,720
like control the output pins of the ECU

00:15:50,679 --> 00:15:54,429
so you can just say like I would like

00:15:52,720 --> 00:15:58,049
pin five to go high right now and it

00:15:54,429 --> 00:16:00,639
will do it in practice not a good idea

00:15:58,049 --> 00:16:02,379
routine control is very exciting it does

00:16:00,639 --> 00:16:04,869
everything from let you recalibrate

00:16:02,379 --> 00:16:07,089
sensors to in fact deploy your airbags

00:16:04,869 --> 00:16:09,009
whenever you're in the special state end

00:16:07,089 --> 00:16:10,329
of life it just lets you run test

00:16:09,009 --> 00:16:12,519
routines that they left on those

00:16:10,329 --> 00:16:14,410
controllers and now you can choose one

00:16:12,519 --> 00:16:16,419
by index and tell it to start and it

00:16:14,410 --> 00:16:19,779
will do something you don't necessarily

00:16:16,419 --> 00:16:23,350
know what it's going to do but so you

00:16:19,779 --> 00:16:26,499
can run them and yeah the last thing is

00:16:23,350 --> 00:16:28,329
actually maybe the most scary it's

00:16:26,499 --> 00:16:29,619
actually upload and download data so

00:16:28,329 --> 00:16:32,079
this is how you change firmware on those

00:16:29,619 --> 00:16:33,579
controllers and yeah you can actually

00:16:32,079 --> 00:16:36,040
rewrite firmware to the engine

00:16:33,579 --> 00:16:37,989
controller in your car up until very

00:16:36,040 --> 00:16:39,669
recently most of that firmware was not

00:16:37,989 --> 00:16:42,399
signed or anything so you can actually

00:16:39,669 --> 00:16:44,499
just load your own program onto your

00:16:42,399 --> 00:16:46,839
onto your controller and then have a

00:16:44,499 --> 00:16:48,429
good time so there's like rest upload

00:16:46,839 --> 00:16:50,859
and download you transfer some data you

00:16:48,429 --> 00:16:52,359
request to transfer exit and you're done

00:16:50,859 --> 00:16:53,289
but that's a lot of services and you

00:16:52,359 --> 00:16:54,609
probably don't want to figure them all

00:16:53,289 --> 00:16:56,289
out yourself so let's talk about the

00:16:54,609 --> 00:16:59,589
tools and this is I promise where we get

00:16:56,289 --> 00:17:01,480
to Python starting with hardware

00:16:59,589 --> 00:17:03,970
you know official like the Tech 2 is

00:17:01,480 --> 00:17:05,500
expensive the cheap options they do OBD

00:17:03,970 --> 00:17:08,260
I recommend you get one if you're

00:17:05,500 --> 00:17:10,839
playing with cars they're cheap go on

00:17:08,260 --> 00:17:12,279
Amazon and search for like obd2 dongle

00:17:10,839 --> 00:17:15,010
and you'll find a bunch of them for 10

00:17:12,279 --> 00:17:17,199
bucks you can also use a cam 2 USB

00:17:15,010 --> 00:17:19,569
adapter I happen to make one that's open

00:17:17,199 --> 00:17:22,389
source it's blue this guy called contact

00:17:19,569 --> 00:17:24,909
and it will do that for you

00:17:22,389 --> 00:17:27,100
the problem is it only does can and you

00:17:24,909 --> 00:17:29,200
still need to do this is OTP thing and

00:17:27,100 --> 00:17:29,889
they need to do the UDS stuff and that's

00:17:29,200 --> 00:17:32,860
sounds hard

00:17:29,889 --> 00:17:34,330
so let's use Python and I came up with a

00:17:32,860 --> 00:17:35,559
bunch of scripts for doing this then

00:17:34,330 --> 00:17:37,779
finally decided that they might be

00:17:35,559 --> 00:17:39,909
useful for somebody else and then try to

00:17:37,779 --> 00:17:41,649
make it into a library so if you look at

00:17:39,909 --> 00:17:43,600
this and think yeah this is some

00:17:41,649 --> 00:17:47,320
interesting Python code that sucks

00:17:43,600 --> 00:17:48,490
that's probably true but I've been

00:17:47,320 --> 00:17:50,590
trying to make it better

00:17:48,490 --> 00:17:52,330
and you know if people are interested in

00:17:50,590 --> 00:17:53,890
cars and want to play with it and you

00:17:52,330 --> 00:17:56,080
want to help make it better that would

00:17:53,890 --> 00:17:58,780
be great so apply sign vehicle interface

00:17:56,080 --> 00:18:01,270
toolkit the whole idea is to provide

00:17:58,780 --> 00:18:03,940
ways to talk to cars and Python it does

00:18:01,270 --> 00:18:06,190
can it does the ISO TP step and it also

00:18:03,940 --> 00:18:08,740
does UDS and it makes your life a lot

00:18:06,190 --> 00:18:11,440
easier because if you want to request

00:18:08,740 --> 00:18:13,660
for example an ECU serial number that's

00:18:11,440 --> 00:18:16,270
a standardized data identifier that you

00:18:13,660 --> 00:18:18,150
need to read so you need to set up the

00:18:16,270 --> 00:18:21,640
interface will omit that for brevity but

00:18:18,150 --> 00:18:25,210
you set up your interface you then say I

00:18:21,640 --> 00:18:26,650
would like to request Oh X F 180c and it

00:18:25,210 --> 00:18:29,740
comes back with a data record and that's

00:18:26,650 --> 00:18:31,240
actually the serial number just in CODIS

00:18:29,740 --> 00:18:34,720
bytes there you smash them together you

00:18:31,240 --> 00:18:38,350
get a 32 32 bit serial number for that

00:18:34,720 --> 00:18:40,120
part another simple example if you want

00:18:38,350 --> 00:18:43,540
to make your dashboard light up like a

00:18:40,120 --> 00:18:45,400
Christmas tree you can reset all the

00:18:43,540 --> 00:18:47,770
controllers in your car using the ECU

00:18:45,400 --> 00:18:48,970
reset service this is usually pretty

00:18:47,770 --> 00:18:50,560
safe as long as you're not actually

00:18:48,970 --> 00:18:53,020
running your engine while you reset the

00:18:50,560 --> 00:18:55,240
controller don't recommend that you can

00:18:53,020 --> 00:18:58,060
do a hard reset or a soft reset there's

00:18:55,240 --> 00:19:01,120
various types but this library also aims

00:18:58,060 --> 00:19:03,070
to implement all of those kind of enums

00:19:01,120 --> 00:19:05,170
that you need that are only in this PDF

00:19:03,070 --> 00:19:07,330
that you need to buy so you can do you

00:19:05,170 --> 00:19:09,520
know easy reset that reset type hard

00:19:07,330 --> 00:19:11,170
reset and an i-5 let me just keep

00:19:09,520 --> 00:19:13,300
hitting tab until you get the one that

00:19:11,170 --> 00:19:15,970
you want so it's actually pretty easy to

00:19:13,300 --> 00:19:19,180
use and that's how I play with cars

00:19:15,970 --> 00:19:20,800
nowadays so this is you know this is fun

00:19:19,180 --> 00:19:23,620
to play around you can go into ipython

00:19:20,800 --> 00:19:26,170
set up your device and make requests got

00:19:23,620 --> 00:19:28,570
this sort of stuff and that was kind of

00:19:26,170 --> 00:19:30,970
where I was at with this until you know

00:19:28,570 --> 00:19:32,890
once I had it done and actually had UDS

00:19:30,970 --> 00:19:35,650
implemented I was like cool now I can

00:19:32,890 --> 00:19:38,230
build all these tools and that's where

00:19:35,650 --> 00:19:42,010
I'm at now so one tool that I've wanted

00:19:38,230 --> 00:19:44,130
forever this slides not supposed to make

00:19:42,010 --> 00:19:46,810
sense that's actually kind of the point

00:19:44,130 --> 00:19:49,090
it's one to live on forever is when you

00:19:46,810 --> 00:19:51,310
record one of these diagnostic tools the

00:19:49,090 --> 00:19:53,170
expensive official ones you know you

00:19:51,310 --> 00:19:54,610
might get it for like a day and you can

00:19:53,170 --> 00:19:56,560
play around a bit so you record all

00:19:54,610 --> 00:19:59,500
these traces what you're actually

00:19:56,560 --> 00:20:01,360
looking at here is a timestamp a can ID

00:19:59,500 --> 00:20:01,840
and then a bunch of data represented as

00:20:01,360 --> 00:20:03,340
hex

00:20:01,840 --> 00:20:04,630
so like you have it for a day and you

00:20:03,340 --> 00:20:07,450
like push all the buttons on it you

00:20:04,630 --> 00:20:08,530
record all these logs and then you have

00:20:07,450 --> 00:20:12,010
to look at them and figure out what they

00:20:08,530 --> 00:20:15,070
mean and it's not fun

00:20:12,010 --> 00:20:17,590
so in orange you have the is OTP stuff

00:20:15,070 --> 00:20:19,750
and then any of your service IDs and

00:20:17,590 --> 00:20:20,860
then there's negative responses in there

00:20:19,750 --> 00:20:22,990
you have to filter those out and then

00:20:20,860 --> 00:20:24,850
also like the memory management when

00:20:22,990 --> 00:20:27,970
these devices is pretty funny so you'll

00:20:24,850 --> 00:20:31,480
see you know some bytes like that 3 2 3

00:20:27,970 --> 00:20:34,030
6 3 8 3 2 repeats itself a few times

00:20:31,480 --> 00:20:35,740
that's just because they don't replace

00:20:34,030 --> 00:20:37,210
those bytes in the buffer and you just

00:20:35,740 --> 00:20:39,400
need to ignore them you need to know to

00:20:37,210 --> 00:20:41,320
do that and it is a mess

00:20:39,400 --> 00:20:47,290
so at a certain point you just realize

00:20:41,320 --> 00:20:48,910
that you need a tool and so this is

00:20:47,290 --> 00:20:50,470
currently as an example and I want to

00:20:48,910 --> 00:20:52,660
roll it out into a full tool it takes

00:20:50,470 --> 00:20:56,230
literally that data and turns it into

00:20:52,660 --> 00:20:58,510
this which is way more readable you know

00:20:56,230 --> 00:21:00,700
ok I'm doing diagnostic session control

00:20:58,510 --> 00:21:02,440
with session type 3 and this parameter

00:21:00,700 --> 00:21:05,380
record and then I'm doing it again

00:21:02,440 --> 00:21:07,060
because that's what this tool did I'm

00:21:05,380 --> 00:21:10,570
doing a read date of identifier I get

00:21:07,060 --> 00:21:12,190
back 0 5 1 3 and then I do another read

00:21:10,570 --> 00:21:15,520
dated identifier and get back this stuff

00:21:12,190 --> 00:21:16,810
which comes out to that s key string and

00:21:15,520 --> 00:21:18,640
you just keep going you can just you can

00:21:16,810 --> 00:21:20,950
keep doing this for all sorts of stuff

00:21:18,640 --> 00:21:24,820
but this was actually from reverse

00:21:20,950 --> 00:21:28,720
engineering of a CDR tool so it's a

00:21:24,820 --> 00:21:31,240
crash data recording tool your car has a

00:21:28,720 --> 00:21:33,520
black box in it hey Drake to you and

00:21:31,240 --> 00:21:35,170
it's actually the airbag unit so if you

00:21:33,520 --> 00:21:39,640
crash your car it's going to restore

00:21:35,170 --> 00:21:41,140
record about 5 seconds of data on what

00:21:39,640 --> 00:21:42,880
you were doing with the pedals how fast

00:21:41,140 --> 00:21:44,980
you were going was your seat belt done

00:21:42,880 --> 00:21:47,050
up what was the actual acceleration

00:21:44,980 --> 00:21:49,930
profile of the crash what airbags

00:21:47,050 --> 00:21:51,820
deployed so on and so forth depending on

00:21:49,930 --> 00:21:53,950
the car some cars support more of these

00:21:51,820 --> 00:21:56,230
some kind of support less but can be a

00:21:53,950 --> 00:21:57,460
lot of data this tool pulls all that

00:21:56,230 --> 00:21:59,290
data out so we were trying to reverse

00:21:57,460 --> 00:22:01,150
engineer those to be able to pull that

00:21:59,290 --> 00:22:03,370
ourselves and so actually if you take

00:22:01,150 --> 00:22:05,170
this ASCII string and you slam it into

00:22:03,370 --> 00:22:06,520
Google you'll find that's actually the

00:22:05,170 --> 00:22:07,720
part number for the occupant we're

00:22:06,520 --> 00:22:10,510
straight in touchable we were looking at

00:22:07,720 --> 00:22:13,180
and you can buy one for 188 dollars from

00:22:10,510 --> 00:22:15,160
Mopar kind of useful if you need a new

00:22:13,180 --> 00:22:17,310
airbag module but yeah

00:22:15,160 --> 00:22:21,970
this tool is still like very now demo

00:22:17,310 --> 00:22:24,070
comes out as as text but you know to

00:22:21,970 --> 00:22:27,310
live dangerously here we can we can do

00:22:24,070 --> 00:22:29,500
it with some more some more cards so

00:22:27,310 --> 00:22:32,230
this is apparently an Audi a4 we can do

00:22:29,500 --> 00:22:34,450
this on and we'll get out you know some

00:22:32,230 --> 00:22:36,400
different it works very differently we

00:22:34,450 --> 00:22:37,900
see we have this routine control instead

00:22:36,400 --> 00:22:40,840
so that's a different service and

00:22:37,900 --> 00:22:43,120
actually we see an error come up it's a

00:22:40,840 --> 00:22:44,980
request out of range so likely this was

00:22:43,120 --> 00:22:47,260
actually probing about some status for

00:22:44,980 --> 00:22:50,230
an airbag that this car didn't have so

00:22:47,260 --> 00:22:51,550
it just says not there sorry

00:22:50,230 --> 00:22:52,990
so that's a different you know different

00:22:51,550 --> 00:22:56,440
way the different vendors implemented

00:22:52,990 --> 00:22:59,950
that we can also look at there's a Prius

00:22:56,440 --> 00:23:01,780
these guys are tricky they use an

00:22:59,950 --> 00:23:04,330
unknown service they use their own

00:23:01,780 --> 00:23:06,370
special proprietary service but we can

00:23:04,330 --> 00:23:08,680
actually still see you know the data

00:23:06,370 --> 00:23:11,680
that was sent and received and get kind

00:23:08,680 --> 00:23:14,140
of an idea of how that's working uh what

00:23:11,680 --> 00:23:18,190
else do we have like looking at these uh

00:23:14,140 --> 00:23:19,780
Nissan Versa this one actually does read

00:23:18,190 --> 00:23:22,540
a memory by address so the way that they

00:23:19,780 --> 00:23:24,910
read out this airbag data is they peek

00:23:22,540 --> 00:23:28,450
at memory addresses inside of your

00:23:24,910 --> 00:23:30,250
airbag controller and you know read

00:23:28,450 --> 00:23:32,230
thirty-two pipes at a time out of it I

00:23:30,250 --> 00:23:34,930
haven't had the guts to try to do a

00:23:32,230 --> 00:23:39,040
write memory address on an airbag module

00:23:34,930 --> 00:23:40,360
but might be enabled who knows so yeah

00:23:39,040 --> 00:23:43,650
that's that's how that one worked and

00:23:40,360 --> 00:23:48,270
this is much nicer than looking at like

00:23:43,650 --> 00:23:50,650
you know looking at that I think anyway

00:23:48,270 --> 00:23:52,270
so it's a cool tool if you have

00:23:50,650 --> 00:23:52,480
something to diagnostic thing to play

00:23:52,270 --> 00:23:54,910
with

00:23:52,480 --> 00:23:56,260
just take a log and you know run it

00:23:54,910 --> 00:23:58,150
through here and you get that out and

00:23:56,260 --> 00:24:01,480
it's just a first example of once you

00:23:58,150 --> 00:24:03,900
have decent tools written for this you

00:24:01,480 --> 00:24:06,400
know how you can implement stuff on top

00:24:03,900 --> 00:24:08,920
so a little bit of the conclusions

00:24:06,400 --> 00:24:10,120
practical stuff because I'd like to

00:24:08,920 --> 00:24:11,950
leave people with something to do

00:24:10,120 --> 00:24:14,740
you should get nobody to device if you

00:24:11,950 --> 00:24:16,240
own a car because that one time your

00:24:14,740 --> 00:24:18,190
check engine light comes on and you want

00:24:16,240 --> 00:24:20,760
to know you can read the folk code kind

00:24:18,190 --> 00:24:24,070
of useful there ten dollars why not

00:24:20,760 --> 00:24:25,360
write to repair if you happen to be into

00:24:24,070 --> 00:24:27,250
this stuff you will be happy to know

00:24:25,360 --> 00:24:27,980
that there are some legal fights going

00:24:27,250 --> 00:24:29,679
on too

00:24:27,980 --> 00:24:31,790
give you the right to be able to do this

00:24:29,679 --> 00:24:33,230
you should look up right to repair in

00:24:31,790 --> 00:24:36,169
your state and see what's happening

00:24:33,230 --> 00:24:38,419
because I'm a Canadian but the u.s. kind

00:24:36,169 --> 00:24:41,360
of dictates how this works so please

00:24:38,419 --> 00:24:43,010
help us with right to repair and if

00:24:41,360 --> 00:24:45,049
you're interested in the community open

00:24:43,010 --> 00:24:46,760
garages is an awesome community of

00:24:45,049 --> 00:24:48,980
people hacking cars and if you're at

00:24:46,760 --> 00:24:51,590
DEFCON the DEFCON car hacking village is

00:24:48,980 --> 00:24:52,490
like a hands-on have fun with cars it's

00:24:51,590 --> 00:24:54,260
a great time

00:24:52,490 --> 00:24:55,880
they have like a capture the flag they

00:24:54,260 --> 00:24:58,179
have all sorts of stuff and I'm usually

00:24:55,880 --> 00:25:01,070
hanging out there so please do say hi

00:24:58,179 --> 00:25:02,809
the future well we have Ethernet based

00:25:01,070 --> 00:25:05,299
diagnostic stuff coming in we have

00:25:02,809 --> 00:25:08,030
Ethernet going into cars that'll be

00:25:05,299 --> 00:25:10,669
interesting we have can FD which is this

00:25:08,030 --> 00:25:12,169
new can with bigger frames and you know

00:25:10,669 --> 00:25:14,600
we'll need some new tools for that but

00:25:12,169 --> 00:25:15,980
it's not really any cars today vehicle

00:25:14,600 --> 00:25:18,470
api's are starting to become a thing

00:25:15,980 --> 00:25:20,870
tesla gives you a rest kind of api to

00:25:18,470 --> 00:25:24,520
your car for it a while ago came out

00:25:20,870 --> 00:25:26,960
with open XC which is an open access

00:25:24,520 --> 00:25:29,780
open source tool you can use to access

00:25:26,960 --> 00:25:31,880
data beyond just obd it actually uses

00:25:29,780 --> 00:25:34,549
UDS but they don't tell you that and

00:25:31,880 --> 00:25:37,309
more tools based on you know a library

00:25:34,549 --> 00:25:39,020
that does UDS and the cannon is OTP now

00:25:37,309 --> 00:25:42,110
it's pretty easy to write your own tools

00:25:39,020 --> 00:25:43,460
that lets do this stuff and if you have

00:25:42,110 --> 00:25:45,950
problems hopefully you'll help me fix

00:25:43,460 --> 00:25:48,950
them so that's it's kind of where I see

00:25:45,950 --> 00:25:51,020
this going I work on car projects a

00:25:48,950 --> 00:25:54,080
bunch and kind of make contributions to

00:25:51,020 --> 00:25:56,540
things as I need tools currently trying

00:25:54,080 --> 00:25:58,970
to take in electric vehicle powertrain

00:25:56,540 --> 00:26:01,580
out of a leaf and stick it in another

00:25:58,970 --> 00:26:02,720
car so yeah it's kind of tooling pretty

00:26:01,580 --> 00:26:05,870
useful when you're like what's what's

00:26:02,720 --> 00:26:08,150
going on in this canvas but that's my

00:26:05,870 --> 00:26:10,520
time and my pitch you can find the

00:26:08,150 --> 00:26:13,700
source code for all this stuff on github

00:26:10,520 --> 00:26:15,200
you can email me or Twitter's me or go

00:26:13,700 --> 00:26:16,940
to you know either those websites for

00:26:15,200 --> 00:26:18,320
more information on those things I think

00:26:16,940 --> 00:26:19,700
we have a couple minutes and I'm happy

00:26:18,320 --> 00:26:21,080
to take questions but thank you very

00:26:19,700 --> 00:26:22,850
much the people who had me here and

00:26:21,080 --> 00:26:24,180
thank you very much to sticking out for

00:26:22,850 --> 00:26:27,369
the whole time it's this

00:26:24,180 --> 00:26:27,369
[Music]

00:26:29,419 --> 00:26:36,390
hey dastan yeah cool I guess I can field

00:26:33,000 --> 00:26:37,980
questions so yeah so it's kind of a

00:26:36,390 --> 00:26:40,350
two-part one it seems like you're at the

00:26:37,980 --> 00:26:41,850
stage of messing this with this stuff

00:26:40,350 --> 00:26:43,760
where you're just poking one memory

00:26:41,850 --> 00:26:48,120
address like writing to it to see what

00:26:43,760 --> 00:26:49,860
what the value is what is like what is

00:26:48,120 --> 00:26:51,330
the level of right excess that you can

00:26:49,860 --> 00:26:52,950
get to this so like is it feasible to

00:26:51,330 --> 00:26:56,130
rewrite some functions of core

00:26:52,950 --> 00:26:57,750
functionality so in a lot of cases you

00:26:56,130 --> 00:27:00,570
can actually and this require some

00:26:57,750 --> 00:27:03,090
security access but most of those are

00:27:00,570 --> 00:27:05,100
pretty broken but in a lot of cases you

00:27:03,090 --> 00:27:06,600
can actually just change the entire form

00:27:05,100 --> 00:27:08,250
or binary running on the controller so

00:27:06,600 --> 00:27:10,529
you can even change whatever you want

00:27:08,250 --> 00:27:12,809
the harder part is actually getting that

00:27:10,529 --> 00:27:15,149
to work correctly you don't have the

00:27:12,809 --> 00:27:17,520
original firmware so you're going to

00:27:15,149 --> 00:27:21,419
need to either like patch the binary or

00:27:17,520 --> 00:27:23,190
write your own firmware for it but a lot

00:27:21,419 --> 00:27:25,140
of stuff that's a little bit more useful

00:27:23,190 --> 00:27:27,840
and interesting because of that is just

00:27:25,140 --> 00:27:29,190
peeking at the services themselves so

00:27:27,840 --> 00:27:30,720
there's let's say you want to implement

00:27:29,190 --> 00:27:32,130
something it unlocks your doors there

00:27:30,720 --> 00:27:33,809
might be a diagnostic service that

00:27:32,130 --> 00:27:35,760
unlocks your doors or a can frame you

00:27:33,809 --> 00:27:37,320
can send it unlocks your doors so then

00:27:35,760 --> 00:27:38,510
you can actually develop your own tools

00:27:37,320 --> 00:27:41,220
that do do that sort of functionality

00:27:38,510 --> 00:27:44,850
okay and just kind of a quick follow-up

00:27:41,220 --> 00:27:46,620
like how how like plug-and-play is it

00:27:44,850 --> 00:27:48,480
between manufacturers so if I have my

00:27:46,620 --> 00:27:50,429
Nissan Versa and I want to easy exited

00:27:48,480 --> 00:27:54,090
the restraint system from this Toyota I

00:27:50,429 --> 00:27:57,120
have here is that doable I wish

00:27:54,090 --> 00:27:59,100
so obd is very across the board everyone

00:27:57,120 --> 00:28:01,649
implements over these most of the same

00:27:59,100 --> 00:28:04,710
way actual functionalities on the other

00:28:01,649 --> 00:28:06,090
hand for so UDS the actual read data by

00:28:04,710 --> 00:28:08,700
identifier write data by identifier

00:28:06,090 --> 00:28:10,830
stuff that is standardized but what

00:28:08,700 --> 00:28:12,450
those data identifiers mean is not

00:28:10,830 --> 00:28:14,100
there's whole ranges that are

00:28:12,450 --> 00:28:16,740
manufacturers specific and they can

00:28:14,100 --> 00:28:19,230
define themselves and so you're kind of

00:28:16,740 --> 00:28:20,429
at the mercy of those people so one

00:28:19,230 --> 00:28:22,710
thing that's nice is you know if you

00:28:20,429 --> 00:28:25,200
have one OEM they tend to stick with it

00:28:22,710 --> 00:28:26,490
for all their cars there are exceptions

00:28:25,200 --> 00:28:28,110
even that where you'll find like

00:28:26,490 --> 00:28:29,460
different cars that have totally

00:28:28,110 --> 00:28:32,309
different can buses even though they

00:28:29,460 --> 00:28:34,950
came out of the same factory it really

00:28:32,309 --> 00:28:38,269
it really depends is the answer okay

00:28:34,950 --> 00:28:41,749
thank you a problem over here

00:28:38,269 --> 00:28:43,909
your tools for j1939 it does not yet but

00:28:41,749 --> 00:28:46,459
I want to write that or find someone who

00:28:43,909 --> 00:28:48,229
wants to help write that it does support

00:28:46,459 --> 00:28:49,969
so the idea is to make it very Hardware

00:28:48,229 --> 00:28:52,009
agnostic and then give you can frames

00:28:49,969 --> 00:28:55,089
and then make it pretty simple to you

00:28:52,009 --> 00:28:58,190
know work on those so the idea there is

00:28:55,089 --> 00:29:00,169
if you wanted to implement j1939 you can

00:28:58,190 --> 00:29:01,669
have whatever canned tool is supported

00:29:00,169 --> 00:29:03,679
by it and it should work across the

00:29:01,669 --> 00:29:04,729
board just a matter of like I need to

00:29:03,679 --> 00:29:09,139
implement j1939

00:29:04,729 --> 00:29:12,379
and buying pricey PDFs right yeah 19:39

00:29:09,139 --> 00:29:14,119
there's a lot more information on but if

00:29:12,379 --> 00:29:15,109
anyone wants that I meant to say that so

00:29:14,119 --> 00:29:16,489
they want to play around with this stuff

00:29:15,109 --> 00:29:19,279
if you stuck around you're probably

00:29:16,489 --> 00:29:20,809
actually somewhat adjusted I happen to

00:29:19,279 --> 00:29:23,989
have some of these tools which I don't

00:29:20,809 --> 00:29:25,789
really want a break through tsa so let

00:29:23,989 --> 00:29:27,320
me know I couldn't like and Olson that

00:29:25,789 --> 00:29:30,769
if you want to you know download this

00:29:27,320 --> 00:29:35,839
and actually have a can interface thank

00:29:30,769 --> 00:29:37,290
you all right thank you so much Eric

00:29:35,839 --> 00:29:44,579
thanks again everybody

00:29:37,290 --> 00:29:44,579

YouTube URL: https://www.youtube.com/watch?v=3bZNhMcv4Y8


