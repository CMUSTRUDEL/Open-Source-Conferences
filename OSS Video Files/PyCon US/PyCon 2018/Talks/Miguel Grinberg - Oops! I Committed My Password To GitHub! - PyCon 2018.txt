Title: Miguel Grinberg - Oops! I Committed My Password To GitHub! - PyCon 2018
Publication date: 2018-08-06
Playlist: Talks
Description: 
	Speaker: Miguel Grinberg

What do AWS, GitHub, Travis CI, DockerHub, Google, Stripe, New Relic, and the rest of the myriad of services that make our developer life easier have in common?
 They all give you secret keys to authenticate with. Did you ever commit one of these to source control by mistake? That happened to me more times than I'm willing to admit!

In this talk I'm going to go over the best practices to follow when when writing Python applications that prevent this type of accident.

Slides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides
Captions: 
	00:00:01,159 --> 00:00:07,529
joining us in Grand Ballroom see we have

00:00:05,549 --> 00:00:12,110
oops I committed my password to github

00:00:07,529 --> 00:00:22,470
by Miguel Greenberg a girl take it away

00:00:12,110 --> 00:00:25,710
thank you thank you it's a lot so this

00:00:22,470 --> 00:00:29,939
presentation is should be pretty simple

00:00:25,710 --> 00:00:31,830
I have eleven slides that's it and that

00:00:29,939 --> 00:00:34,649
counts this one and to think you won at

00:00:31,830 --> 00:00:37,320
the end so it's very short should be

00:00:34,649 --> 00:00:39,480
accessible regarding of your level of

00:00:37,320 --> 00:00:42,629
expertise with Python or with software

00:00:39,480 --> 00:00:44,489
development in general and especially

00:00:42,629 --> 00:00:47,460
for those of you who are beginners I

00:00:44,489 --> 00:00:49,260
hope that if you follow some of the tips

00:00:47,460 --> 00:00:52,100
that I'm going to share are you gonna be

00:00:49,260 --> 00:00:57,420
a little less of a beginner after this

00:00:52,100 --> 00:00:59,730
so in case you don't know me a little

00:00:57,420 --> 00:01:03,270
bit of introduction and why not

00:00:59,730 --> 00:01:06,990
self-promotion I am the author of the

00:01:03,270 --> 00:01:09,030
flask book from O'Reilly I'm gonna be at

00:01:06,990 --> 00:01:11,670
the arrival this afternoon during the

00:01:09,030 --> 00:01:15,540
break if you want to stop and chat

00:01:11,670 --> 00:01:19,189
I wrote the flask mega tutorial series

00:01:15,540 --> 00:01:21,570
of articles on my blog and later I

00:01:19,189 --> 00:01:28,049
expanded that and made it into an e-book

00:01:21,570 --> 00:01:31,020
and a video tutorial and from not too

00:01:28,049 --> 00:01:35,430
long ago I'm doing a live webcast once a

00:01:31,020 --> 00:01:38,340
month about flask related topics so I

00:01:35,430 --> 00:01:39,810
invite you to look me up on youtube if

00:01:38,340 --> 00:01:41,700
you want to catch the next one which is

00:01:39,810 --> 00:01:46,110
in a couple of weeks the topic is going

00:01:41,700 --> 00:01:47,939
to be circular imports ok curious in

00:01:46,110 --> 00:01:51,299
terms of work I am a software developer

00:01:47,939 --> 00:01:55,140
at Rackspace I work in the managed

00:01:51,299 --> 00:01:57,509
security division and everyday I work

00:01:55,140 --> 00:02:00,990
with api's micro services and of course

00:01:57,509 --> 00:02:02,939
security you have my blog address my

00:02:00,990 --> 00:02:05,670
github if you want to check out my open

00:02:02,939 --> 00:02:07,649
source projects and my Twitter if you

00:02:05,670 --> 00:02:11,370
want to catch announcements and stuff

00:02:07,649 --> 00:02:16,830
related to all the stuff that I did

00:02:11,370 --> 00:02:20,340
so okay so when when my talk was

00:02:16,830 --> 00:02:22,739
accepted up a few months ago I started

00:02:20,340 --> 00:02:25,349
doing sort of an informal survey so

00:02:22,739 --> 00:02:31,769
every time I chatted with someone about

00:02:25,349 --> 00:02:34,200
Python I asked this question so the vast

00:02:31,769 --> 00:02:36,299
majority of the people said yes they

00:02:34,200 --> 00:02:40,560
said that they did at some point or

00:02:36,299 --> 00:02:43,319
they're doing right now this you know

00:02:40,560 --> 00:02:45,120
laughing but according to my survey

00:02:43,319 --> 00:02:47,190
there's going to be a large percentage

00:02:45,120 --> 00:02:51,239
of you that are doing this so keep

00:02:47,190 --> 00:02:56,190
laughing that's fine well laughing at

00:02:51,239 --> 00:02:57,930
ourselves I've done it too so so very

00:02:56,190 --> 00:03:01,069
very small amount of people said no so

00:02:57,930 --> 00:03:04,769
I'm ignore those they're their studies

00:03:01,069 --> 00:03:06,269
statistically not important from the

00:03:04,769 --> 00:03:10,170
group that said yes which is the vast

00:03:06,269 --> 00:03:14,849
majority there were two main groups of

00:03:10,170 --> 00:03:17,790
answers so one group was yes I did by

00:03:14,849 --> 00:03:19,709
accident and and this is this is me I'm

00:03:17,790 --> 00:03:23,340
in this group this happened to me many

00:03:19,709 --> 00:03:25,920
times and if you can't imagine how you

00:03:23,340 --> 00:03:28,079
could end up with a passport committed

00:03:25,920 --> 00:03:31,109
to github or any source control by

00:03:28,079 --> 00:03:32,880
mistake or by accident I can tell you

00:03:31,109 --> 00:03:36,030
you know an example of what happened to

00:03:32,880 --> 00:03:38,220
me I was working on adding a feature to

00:03:36,030 --> 00:03:41,519
an application that's designed to run in

00:03:38,220 --> 00:03:43,260
the cloud so when I finished I wanted to

00:03:41,519 --> 00:03:46,079
test it but I wanted to test it locally

00:03:43,260 --> 00:03:47,880
before I committed it to the source

00:03:46,079 --> 00:03:49,769
control and which will trigger the

00:03:47,880 --> 00:03:52,349
deployment to the cloud so I wanted to

00:03:49,769 --> 00:03:54,389
make sure it worked so the problem is

00:03:52,349 --> 00:03:57,000
that this application was designed to

00:03:54,389 --> 00:03:59,639
run in the cloud so it used cloud api's

00:03:57,000 --> 00:04:04,019
to grab passwords to third-party

00:03:59,639 --> 00:04:04,349
services right so it didn't work on my

00:04:04,019 --> 00:04:07,260
machine

00:04:04,349 --> 00:04:10,109
so I had a great idea of commenting out

00:04:07,260 --> 00:04:12,329
all those lines that invoke cloud API is

00:04:10,109 --> 00:04:14,280
that get passwords and tokens in all

00:04:12,329 --> 00:04:18,539
those things and then right in the line

00:04:14,280 --> 00:04:20,820
above below it I just typed my password

00:04:18,539 --> 00:04:23,400
a password for a personal account of

00:04:20,820 --> 00:04:24,710
mine that that was you know that double

00:04:23,400 --> 00:04:27,229
make the thing work

00:04:24,710 --> 00:04:29,509
right so the idea was I will do a quick

00:04:27,229 --> 00:04:32,600
test make sure that everything works and

00:04:29,509 --> 00:04:34,100
do all that mess and then commit the

00:04:32,600 --> 00:04:36,199
problem is that when I did the test it

00:04:34,100 --> 00:04:39,919
didn't work right so I spent the next

00:04:36,199 --> 00:04:41,570
couple of hours debugging my code and by

00:04:39,919 --> 00:04:43,669
the time I was done and everything was

00:04:41,570 --> 00:04:45,949
working I forgot that I did this and I

00:04:43,669 --> 00:04:49,190
committed everything and in when my

00:04:45,949 --> 00:04:51,229
password right so I'm gonna bet that

00:04:49,190 --> 00:04:53,570
this is a story that many of you know

00:04:51,229 --> 00:04:56,380
right I'm sure it happened to many of

00:04:53,570 --> 00:04:59,030
you as well so this is the first group

00:04:56,380 --> 00:05:00,560
there was a a second group of people

00:04:59,030 --> 00:05:04,370
that answered with a much more

00:05:00,560 --> 00:05:06,440
interesting answer they said yeah I did

00:05:04,370 --> 00:05:09,860
it but it's fine it's not a problem and

00:05:06,440 --> 00:05:11,300
then they they use an excuse right they

00:05:09,860 --> 00:05:13,009
they have to put an excuse because

00:05:11,300 --> 00:05:18,080
they're looking at my face and you know

00:05:13,009 --> 00:05:20,449
I'm going red right so the most common

00:05:18,080 --> 00:05:22,820
excuse that I heard these people say and

00:05:20,449 --> 00:05:29,150
they said yeah it's fine because this is

00:05:22,820 --> 00:05:30,320
a private repo right very common so this

00:05:29,150 --> 00:05:32,510
could be a private repo on github

00:05:30,320 --> 00:05:36,110
bitbucket gitlab it doesn't really

00:05:32,510 --> 00:05:39,919
matter so they think that because it's

00:05:36,110 --> 00:05:44,360
private only them and their team can

00:05:39,919 --> 00:05:48,530
access it right well unfortunately that

00:05:44,360 --> 00:05:51,770
logic doesn't really work that well the

00:05:48,530 --> 00:05:53,750
private repos not encrypted so I don't

00:05:51,770 --> 00:05:55,639
know how many but there's a substantial

00:05:53,750 --> 00:05:58,400
number of github employees that will be

00:05:55,639 --> 00:06:00,740
able to see your code your repository

00:05:58,400 --> 00:06:03,949
it's exactly like a public repository

00:06:00,740 --> 00:06:05,780
but it's excluded for from view from

00:06:03,949 --> 00:06:07,940
people that are not in the team but from

00:06:05,780 --> 00:06:09,289
the inside you have can see it I don't

00:06:07,940 --> 00:06:12,919
know how you feel about that you might

00:06:09,289 --> 00:06:15,349
don't care I don't know but you know

00:06:12,919 --> 00:06:19,430
it's not you on your team you should

00:06:15,349 --> 00:06:21,050
consider that if if one day one member

00:06:19,430 --> 00:06:23,240
of your team needs to be let go from

00:06:21,050 --> 00:06:25,099
your company that person is going to

00:06:23,240 --> 00:06:29,360
know that password and it's not going to

00:06:25,099 --> 00:06:34,639
be in your team anymore right and who

00:06:29,360 --> 00:06:37,190
knows right so this is one excuse the

00:06:34,639 --> 00:06:38,150
other skills that I hear often is that

00:06:37,190 --> 00:06:40,490
yeah

00:06:38,150 --> 00:06:44,030
fine because all the passwords that we

00:06:40,490 --> 00:06:47,090
have in the code on github are for

00:06:44,030 --> 00:06:48,500
internal services so basically I can

00:06:47,090 --> 00:06:51,110
give you the password there's nothing

00:06:48,500 --> 00:06:52,670
you can do because the this password

00:06:51,110 --> 00:06:55,180
applies to the database that's not

00:06:52,670 --> 00:06:58,310
public you cannot get to it right so

00:06:55,180 --> 00:07:00,830
this is it comes from the idea that if

00:06:58,310 --> 00:07:03,560
you protect the perimeter of your cloud

00:07:00,830 --> 00:07:06,530
application inside it doesn't matter

00:07:03,560 --> 00:07:10,580
right you can you can be lousy with your

00:07:06,530 --> 00:07:14,840
security and I don't know the way I see

00:07:10,580 --> 00:07:16,760
it it's like having a a bank that that

00:07:14,840 --> 00:07:19,370
really doesn't lock the vault because

00:07:16,760 --> 00:07:23,540
the guard at the front door will never

00:07:19,370 --> 00:07:26,390
let the robbers in you know I mean the

00:07:23,540 --> 00:07:29,750
more stops you can put to prevent you

00:07:26,390 --> 00:07:33,170
know hacks the better and we know that

00:07:29,750 --> 00:07:34,910
you know hacks happen so while I'm

00:07:33,170 --> 00:07:36,620
hearing these excuses

00:07:34,910 --> 00:07:40,040
this is the picture that comes to my

00:07:36,620 --> 00:07:41,840
mind right so if you are in this group

00:07:40,040 --> 00:07:44,840
pretty sure that there are a bunch of

00:07:41,840 --> 00:07:45,560
you that are Apple to ask you to

00:07:44,840 --> 00:07:51,050
reconsider

00:07:45,560 --> 00:07:53,030
it's not a good idea so what I'm gonna

00:07:51,050 --> 00:07:54,440
do in the rest of the talk is I'm gonna

00:07:53,030 --> 00:07:57,650
I'm gonna assume that you are in the

00:07:54,440 --> 00:08:00,140
first class of people the people that do

00:07:57,650 --> 00:08:02,630
this by accident and I'm gonna tell you

00:08:00,140 --> 00:08:06,440
how to fix the mess after you've done it

00:08:02,630 --> 00:08:09,110
and next I'm gonna tell you how you can

00:08:06,440 --> 00:08:11,270
prevent it from happening next time so

00:08:09,110 --> 00:08:14,180
we're going to look at those things it's

00:08:11,270 --> 00:08:15,950
gonna be mostly in general it will apply

00:08:14,180 --> 00:08:18,140
to Python and it would apply to anything

00:08:15,950 --> 00:08:21,410
else any other technologies as well and

00:08:18,140 --> 00:08:24,380
then by the end I'm going to do a live

00:08:21,410 --> 00:08:26,390
demo specifically for Python and I'm

00:08:24,380 --> 00:08:29,210
going to show you how you can do it and

00:08:26,390 --> 00:08:31,820
I allocated five minutes for the demo so

00:08:29,210 --> 00:08:36,830
I promise you it's simple so you should

00:08:31,820 --> 00:08:40,190
you should try to do this the people

00:08:36,830 --> 00:08:43,280
that are on the on the right group you

00:08:40,190 --> 00:08:46,790
know if all the things that I'm going to

00:08:43,280 --> 00:08:48,050
say apply to you as well I think it's

00:08:46,790 --> 00:08:49,280
gonna be harder for you to implement

00:08:48,050 --> 00:08:51,350
these techniques because your

00:08:49,280 --> 00:08:52,100
application was designed with the idea

00:08:51,350 --> 00:08:53,839
that the power

00:08:52,100 --> 00:08:57,500
sores are in the code so you're gonna

00:08:53,839 --> 00:08:59,209
have to pre factor that and change the

00:08:57,500 --> 00:09:00,350
way your application works in addition

00:08:59,209 --> 00:09:05,420
to all the techniques that I'm gonna

00:09:00,350 --> 00:09:09,259
mention here so okay so let's say you

00:09:05,420 --> 00:09:11,209
you by mistake committed a secret it

00:09:09,259 --> 00:09:14,269
took any password you know one of those

00:09:11,209 --> 00:09:17,120
things to github so you're not panicking

00:09:14,269 --> 00:09:21,100
and the worst there the very first thing

00:09:17,120 --> 00:09:24,079
that may come to mind to fix this is to

00:09:21,100 --> 00:09:27,829
basically delete the password and make a

00:09:24,079 --> 00:09:30,709
new commit right this is not a great

00:09:27,829 --> 00:09:34,699
idea right because as as you very well

00:09:30,709 --> 00:09:37,430
know github I'm sorry good keeps a list

00:09:34,699 --> 00:09:39,589
of all those changes that you made to

00:09:37,430 --> 00:09:42,319
the code so the commit that includes

00:09:39,589 --> 00:09:43,970
your password it's going to be in the

00:09:42,319 --> 00:09:45,709
history of your project it's not not

00:09:43,970 --> 00:09:50,029
going to be the latest commit it's going

00:09:45,709 --> 00:09:53,089
to be one before and I am telling you

00:09:50,029 --> 00:09:56,209
that any half-decent hacker knows how to

00:09:53,089 --> 00:09:59,120
look for things in the entire history of

00:09:56,209 --> 00:10:02,089
your repository so not a good idea

00:09:59,120 --> 00:10:06,170
because your password is still there so

00:10:02,089 --> 00:10:09,139
we're not doing this so the next thing

00:10:06,170 --> 00:10:11,779
that you may think you may think that

00:10:09,139 --> 00:10:14,180
maybe you should rebase the commit and

00:10:11,779 --> 00:10:18,110
for those of you that don't know what

00:10:14,180 --> 00:10:20,329
this means in gear I I don't know if

00:10:18,110 --> 00:10:23,569
other source controls may have it too

00:10:20,329 --> 00:10:27,970
but in get a rebase is a technique that

00:10:23,569 --> 00:10:30,920
you can use to technique that you use to

00:10:27,970 --> 00:10:33,380
basically alter the history the commit

00:10:30,920 --> 00:10:35,269
history so you can go back to a commit

00:10:33,380 --> 00:10:40,130
that you've made and remove it or change

00:10:35,269 --> 00:10:44,329
it and this is better definitely better

00:10:40,130 --> 00:10:47,300
than just making a second commit but it

00:10:44,329 --> 00:10:50,389
also has a problem because of the way it

00:10:47,300 --> 00:10:52,939
works when you modify or delete a commit

00:10:50,389 --> 00:10:54,290
the the commit that you're changing does

00:10:52,939 --> 00:10:56,689
not go away immediately

00:10:54,290 --> 00:11:00,470
basically get puts it to the side and

00:10:56,689 --> 00:11:02,569
then if you make a change then it makes

00:11:00,470 --> 00:11:03,949
a new commit with the changed code the

00:11:02,569 --> 00:11:05,810
code that doesn't have the password and

00:11:03,949 --> 00:11:08,029
then the there

00:11:05,810 --> 00:11:10,490
original commit will stay instead of in

00:11:08,029 --> 00:11:13,370
an orphaned state for a while until it

00:11:10,490 --> 00:11:18,920
it'll be garbage collected but it

00:11:13,370 --> 00:11:21,320
doesn't go away the risk of that it's

00:11:18,920 --> 00:11:25,610
not super great there's another factor

00:11:21,320 --> 00:11:27,890
though if someone clones or updates your

00:11:25,610 --> 00:11:30,740
repository after you commit it your

00:11:27,890 --> 00:11:35,750
password but before you rebased

00:11:30,740 --> 00:11:37,430
that that commit then that person on the

00:11:35,750 --> 00:11:40,490
local machine they have your password

00:11:37,430 --> 00:11:43,990
and rebasing only fix it fixes the

00:11:40,490 --> 00:11:46,640
upstream repository right so use of that

00:11:43,990 --> 00:11:48,410
basic got into your repository at the

00:11:46,640 --> 00:11:50,900
time the password was there will still

00:11:48,410 --> 00:11:54,610
have the password on their machine so

00:11:50,900 --> 00:11:56,480
yeah this is not very good either I

00:11:54,610 --> 00:11:57,680
guess what I'm trying to say is that

00:11:56,480 --> 00:12:00,770
there's nothing you can do on your

00:11:57,680 --> 00:12:07,430
repository to prevent that password from

00:12:00,770 --> 00:12:09,080
from being out there right so to realize

00:12:07,430 --> 00:12:10,460
what what's the perfect solution for

00:12:09,080 --> 00:12:14,030
this you have to think a little bit

00:12:10,460 --> 00:12:16,190
outside the box so what would you need

00:12:14,030 --> 00:12:18,440
to realize is that that password it's

00:12:16,190 --> 00:12:21,890
out there there's nothing you can do to

00:12:18,440 --> 00:12:24,440
to control or basically make it

00:12:21,890 --> 00:12:26,870
disappear right so so the only solution

00:12:24,440 --> 00:12:28,610
that you have that's perfectly effective

00:12:26,870 --> 00:12:31,400
is to make sure that that password

00:12:28,610 --> 00:12:33,170
doesn't work anymore so you need to go

00:12:31,400 --> 00:12:34,550
and revoke the password that's the very

00:12:33,170 --> 00:12:37,580
first thing you need to do don't worry

00:12:34,550 --> 00:12:41,000
about the github I mean that may bring

00:12:37,580 --> 00:12:43,700
you shame but but this this is we're way

00:12:41,000 --> 00:12:44,990
more important okay so you need to go

00:12:43,700 --> 00:12:46,940
make sure that the password doesn't work

00:12:44,990 --> 00:12:48,500
it's not gonna work for you and more

00:12:46,940 --> 00:12:52,870
importantly it's not gonna go work for

00:12:48,500 --> 00:12:57,140
the hacker that may have gotten it so

00:12:52,870 --> 00:13:00,140
what this means it depends on the the

00:12:57,140 --> 00:13:02,270
password or the token in question if

00:13:00,140 --> 00:13:04,760
this is a password for a service that

00:13:02,270 --> 00:13:07,550
you host yourself like a database you

00:13:04,760 --> 00:13:10,880
need to go to your administration to

00:13:07,550 --> 00:13:13,550
database administration to whatever it

00:13:10,880 --> 00:13:16,880
is and change it just put put a new

00:13:13,550 --> 00:13:19,730
password if this is a token that you've

00:13:16,880 --> 00:13:23,839
got from a service a third party service

00:13:19,730 --> 00:13:27,230
say AWS slack you know anything you need

00:13:23,839 --> 00:13:28,999
to go to their control panel and there

00:13:27,230 --> 00:13:32,299
you're gonna find an option to revoke

00:13:28,999 --> 00:13:36,559
the token that you're using and then you

00:13:32,299 --> 00:13:39,949
request a new one so from the moment you

00:13:36,559 --> 00:13:42,439
do that you are 100% protected those

00:13:39,949 --> 00:13:44,689
secrets are not going to work anymore so

00:13:42,439 --> 00:13:48,079
now you're fine and now you can

00:13:44,689 --> 00:13:50,029
implement the new tokens or passwords in

00:13:48,079 --> 00:13:54,199
your application and hopefully don't do

00:13:50,029 --> 00:13:59,199
this mistake again so this is how you

00:13:54,199 --> 00:14:01,939
fix the mess so now let's talk about how

00:13:59,199 --> 00:14:07,759
to prevent this in you know the next

00:14:01,939 --> 00:14:10,459
time you do this so here are three

00:14:07,759 --> 00:14:12,319
examples of the things that you might do

00:14:10,459 --> 00:14:14,299
I mean these are the kind of things that

00:14:12,319 --> 00:14:16,429
I did many times and I ended up

00:14:14,299 --> 00:14:18,379
committing to github by mistake right

00:14:16,429 --> 00:14:20,959
you're just setting a password in the

00:14:18,379 --> 00:14:25,879
code or a secret key for for some

00:14:20,959 --> 00:14:27,699
service or a database URL so what I want

00:14:25,879 --> 00:14:30,289
you to do is to program yourself

00:14:27,699 --> 00:14:36,019
whenever you feel the urge to write this

00:14:30,289 --> 00:14:37,699
to change it to one of these so instead

00:14:36,019 --> 00:14:41,480
of hard-coding

00:14:37,699 --> 00:14:44,329
your secret you are going to keep the

00:14:41,480 --> 00:14:46,329
same variable that that's fine but read

00:14:44,329 --> 00:14:50,149
that secret from an environment variable

00:14:46,329 --> 00:14:53,299
and for those that are not familiar oh s

00:14:50,149 --> 00:14:56,329
dot environ in in python is a dictionary

00:14:53,299 --> 00:14:58,489
that contains the environment variables

00:14:56,329 --> 00:15:01,160
that will give into your process by the

00:14:58,489 --> 00:15:03,470
operating system so basically we're

00:15:01,160 --> 00:15:05,299
looking for something external we're

00:15:03,470 --> 00:15:08,149
importing the secret for from an

00:15:05,299 --> 00:15:11,720
external source and I'm showing here

00:15:08,149 --> 00:15:14,509
three variants the first one uses a the

00:15:11,720 --> 00:15:16,579
brackets this is a dictionary so if that

00:15:14,509 --> 00:15:18,439
variable is missing it's not defined in

00:15:16,579 --> 00:15:20,359
your environment then you're going to

00:15:18,439 --> 00:15:22,699
get an error so that the the application

00:15:20,359 --> 00:15:25,850
will stop and then you know okay I need

00:15:22,699 --> 00:15:28,819
to define this that this password in the

00:15:25,850 --> 00:15:31,220
environment before I rerun the second

00:15:28,819 --> 00:15:34,110
one uses the get method of the

00:15:31,220 --> 00:15:36,660
dictionary and the idea here is

00:15:34,110 --> 00:15:39,600
or the difference with the first is that

00:15:36,660 --> 00:15:41,279
if the variable is not defined instead

00:15:39,600 --> 00:15:44,009
of giving you an error it's gonna

00:15:41,279 --> 00:15:45,720
resolve to none so your variable it's

00:15:44,009 --> 00:15:48,540
gonna be none which in some cases is

00:15:45,720 --> 00:15:52,129
useful so you have the option to not

00:15:48,540 --> 00:15:54,839
have a password and finally the last one

00:15:52,129 --> 00:15:58,559
uses a second argument in the get method

00:15:54,839 --> 00:16:00,959
and the idea here is that you can

00:15:58,559 --> 00:16:04,829
provide a default if the variable is not

00:16:00,959 --> 00:16:06,389
defined and this is safe because you can

00:16:04,829 --> 00:16:09,439
see that the default that I'm using here

00:16:06,389 --> 00:16:12,239
doesn't have any secrets no passwords so

00:16:09,439 --> 00:16:14,220
you know perfectly safe to do that this

00:16:12,239 --> 00:16:17,790
is also useful if you want to integrate

00:16:14,220 --> 00:16:20,790
this with the DS cloud API is there

00:16:17,790 --> 00:16:23,549
provision your secrets so if the

00:16:20,790 --> 00:16:25,170
variable is defined you use that else in

00:16:23,549 --> 00:16:27,660
the second argument you can make the

00:16:25,170 --> 00:16:30,389
cloud API call and then this is

00:16:27,660 --> 00:16:33,600
perfectly fine to commit and use on

00:16:30,389 --> 00:16:36,589
production you can have the you know all

00:16:33,600 --> 00:16:40,649
the options in your in your application

00:16:36,589 --> 00:16:42,299
so if you've done that the next part is

00:16:40,649 --> 00:16:46,350
to put these secrets in the environment

00:16:42,299 --> 00:16:48,480
and there are a couple of places that

00:16:46,350 --> 00:16:50,009
you could do this if if these are

00:16:48,480 --> 00:16:53,149
secrets that are applied to multiple

00:16:50,009 --> 00:16:56,249
projects your operating system will have

00:16:53,149 --> 00:16:58,860
files config files where you can add

00:16:56,249 --> 00:17:01,129
these definitions they'll profile the

00:16:58,860 --> 00:17:04,949
Parsee you know that that type of file

00:17:01,129 --> 00:17:08,130
if your secrets are project specific

00:17:04,949 --> 00:17:11,039
which is more likely what I like to do

00:17:08,130 --> 00:17:12,809
is to have a dot M file in the project

00:17:11,039 --> 00:17:15,089
so this is a file that you put in there

00:17:12,809 --> 00:17:18,539
you write your passwords in that file

00:17:15,089 --> 00:17:20,039
and then of course you don't commit that

00:17:18,539 --> 00:17:22,860
file to source control so you need to

00:17:20,039 --> 00:17:24,750
make sure that that file is ignored by

00:17:22,860 --> 00:17:28,919
git and I'm going to show you how to do

00:17:24,750 --> 00:17:32,490
that I don't like to type passwords in

00:17:28,919 --> 00:17:35,010
the in the shell in the shell prompt one

00:17:32,490 --> 00:17:36,600
one thing that happens when you for any

00:17:35,010 --> 00:17:39,090
commands that you type in the shell is

00:17:36,600 --> 00:17:40,649
that they are stored by your shell in

00:17:39,090 --> 00:17:43,770
the history so that then you can do the

00:17:40,649 --> 00:17:46,380
you can use up arrow to see previous

00:17:43,770 --> 00:17:47,940
commands so your password if they're

00:17:46,380 --> 00:17:51,060
just gonna be a copy of your password

00:17:47,940 --> 00:17:55,770
in the shell history so not not ideal so

00:17:51,060 --> 00:17:59,070
I prefer to write them in a file so I'm

00:17:55,770 --> 00:18:05,940
going to go ahead and and show you how

00:17:59,070 --> 00:18:09,990
how I do this in Python so I a sort of a

00:18:05,940 --> 00:18:18,020
fake service so this is a very cool

00:18:09,990 --> 00:18:18,020
service has a very cool client oops

00:18:18,530 --> 00:18:25,740
so I have a new client and if I create

00:18:22,950 --> 00:18:26,880
an instance of this client I get an

00:18:25,740 --> 00:18:30,120
error it tells me that I need to

00:18:26,880 --> 00:18:34,380
authenticate and so then I can add a

00:18:30,120 --> 00:18:37,500
username and an API key this this is

00:18:34,380 --> 00:18:40,800
what this this fake service needs let's

00:18:37,500 --> 00:18:44,130
say like that and when I pass my

00:18:40,800 --> 00:18:46,380
credentials the service says it's ok and

00:18:44,130 --> 00:18:49,080
it shows me that it's got the

00:18:46,380 --> 00:18:51,090
credentials of course it's a very bad

00:18:49,080 --> 00:18:53,460
practice to show passwords when you

00:18:51,090 --> 00:18:55,680
write logging so I'm here I'm showing

00:18:53,460 --> 00:18:58,470
just the first and last letters just

00:18:55,680 --> 00:19:00,180
this is a security measure so let's say

00:18:58,470 --> 00:19:03,680
we need to write a script that uses this

00:19:00,180 --> 00:19:11,480
client so I'm going to write code or PI

00:19:03,680 --> 00:19:19,530
and I'm gonna do just the same thing and

00:19:11,480 --> 00:19:22,790
client ok so now I need to use my

00:19:19,530 --> 00:19:26,370
credentials here so I'm not going to

00:19:22,790 --> 00:19:31,080
write the password I'm gonna do the

00:19:26,370 --> 00:19:40,700
alternative so OS environ get and this

00:19:31,080 --> 00:19:40,700
is I have typo here get cool username

00:19:43,870 --> 00:19:58,720
and then I'm gonna have my API key get

00:19:51,059 --> 00:20:06,730
cool API key like that right so I need

00:19:58,720 --> 00:20:09,460
to import OS and that's it right this is

00:20:06,730 --> 00:20:12,480
this is all it takes to do this the

00:20:09,460 --> 00:20:13,809
right way so if I didn't make any

00:20:12,480 --> 00:20:17,530
mistakes

00:20:13,809 --> 00:20:18,750
I can now run this and it's going to

00:20:17,530 --> 00:20:21,790
tell me that I need to authenticate

00:20:18,750 --> 00:20:23,440
because I haven't defined these

00:20:21,790 --> 00:20:26,320
variables right so I use the dog head

00:20:23,440 --> 00:20:29,880
method so there none so they're not set

00:20:26,320 --> 00:20:36,390
so I'm going to create a dot end file

00:20:29,880 --> 00:20:42,120
and cool user name I'm gonna set it and

00:20:36,390 --> 00:20:46,630
cool API key and I'm gonna say that's it

00:20:42,120 --> 00:20:49,120
so now I have my daughter and file and I

00:20:46,630 --> 00:20:51,760
want to make sure so so this is a this

00:20:49,120 --> 00:20:54,040
is a git repository if I do get status

00:20:51,760 --> 00:20:56,410
now it shows me that I have the run file

00:20:54,040 --> 00:20:58,809
and I make committed by mistake as I

00:20:56,410 --> 00:21:02,500
said before so to prevent that I'm going

00:20:58,809 --> 00:21:04,870
to go to my get ignore which has a

00:21:02,500 --> 00:21:07,690
couple of things and I'm gonna add I'm

00:21:04,870 --> 00:21:12,010
gonna add dot F there the moment I do

00:21:07,690 --> 00:21:13,600
that if I do get status now it doesn't

00:21:12,010 --> 00:21:15,700
show up anymore so again we'll ignore it

00:21:13,600 --> 00:21:20,640
and that's what I want because I don't

00:21:15,700 --> 00:21:23,770
want to ever see that in terms of get so

00:21:20,640 --> 00:21:25,900
now I have the door time file and what's

00:21:23,770 --> 00:21:28,000
missing is that I need to import that

00:21:25,900 --> 00:21:30,880
into the environment and for that what I

00:21:28,000 --> 00:21:33,670
what I'd like to do is I use a Python

00:21:30,880 --> 00:21:36,460
package that I'm going to go ahead and

00:21:33,670 --> 00:21:37,750
install its called Python dot and it's

00:21:36,460 --> 00:21:42,420
specifically designed for this purpose

00:21:37,750 --> 00:21:46,690
and I'm going to go back into my

00:21:42,420 --> 00:21:52,120
application and I'm going to import from

00:21:46,690 --> 00:21:54,330
an import load door ends and then I'm

00:21:52,120 --> 00:21:57,029
gonna call load times and

00:21:54,330 --> 00:22:00,510
all this does is it finds a door and

00:21:57,029 --> 00:22:03,120
file in the current directory and if any

00:22:00,510 --> 00:22:11,730
any variables are there adds them to the

00:22:03,120 --> 00:22:16,730
environment so if I now run Kota PI now

00:22:11,730 --> 00:22:22,110
it works and if I go to my door m and

00:22:16,730 --> 00:22:25,309
just change anything now automatically

00:22:22,110 --> 00:22:28,110
you can see that things get updated so

00:22:25,309 --> 00:22:31,799
this is a pretty good way in my opinion

00:22:28,110 --> 00:22:37,100
to do this and it took me what maybe

00:22:31,799 --> 00:22:37,100
5-10 minutes probably less than 10 so I

00:22:37,340 --> 00:22:41,850
think that that's a very good way if

00:22:39,480 --> 00:22:44,250
you're doing something worse then this

00:22:41,850 --> 00:22:46,740
is age is better there are some cases

00:22:44,250 --> 00:22:49,049
where putting stuff in the environment

00:22:46,740 --> 00:22:51,600
may have some concerns the environment

00:22:49,049 --> 00:22:52,769
is not encrypted did this is fine if

00:22:51,600 --> 00:22:55,200
you're doing this on a development

00:22:52,769 --> 00:22:57,929
machine that you own that's that only

00:22:55,200 --> 00:22:59,580
you use but there are some situations if

00:22:57,929 --> 00:23:02,220
you're working on a shared machine we're

00:22:59,580 --> 00:23:05,519
using you know so many things in the

00:23:02,220 --> 00:23:07,919
environment might not be a good idea so

00:23:05,519 --> 00:23:09,889
there are a bunch of options these are

00:23:07,919 --> 00:23:12,899
when I mentioned cloud API so I'll get

00:23:09,889 --> 00:23:15,450
passwords I was specifically talking

00:23:12,899 --> 00:23:17,250
about some of these things that I don't

00:23:15,450 --> 00:23:21,000
have time to discuss but they're there

00:23:17,250 --> 00:23:23,970
and in general that these are more

00:23:21,000 --> 00:23:28,380
directed towards production systems if

00:23:23,970 --> 00:23:30,480
you are sort of I don't know if you

00:23:28,380 --> 00:23:31,980
don't have the also security if you're

00:23:30,480 --> 00:23:34,230
paranoid about security on your

00:23:31,980 --> 00:23:36,450
development machine and you want to post

00:23:34,230 --> 00:23:41,340
something like this it will be totally

00:23:36,450 --> 00:23:43,500
fine so to end this I'm gonna give you

00:23:41,340 --> 00:23:45,360
sort of a summary of things that you

00:23:43,500 --> 00:23:46,889
should all you shouldn't do so of course

00:23:45,360 --> 00:23:50,580
you should never write passwords in your

00:23:46,889 --> 00:23:53,730
code you should import them from the

00:23:50,580 --> 00:23:55,919
environment variables or from a more

00:23:53,730 --> 00:23:59,100
secure secret store like the ones that I

00:23:55,919 --> 00:24:02,490
showed you if you have any suspicion

00:23:59,100 --> 00:24:03,840
that a credential is compromised don't

00:24:02,490 --> 00:24:05,760
even think about it go and revoke it

00:24:03,840 --> 00:24:08,429
make sure that whenever you write an

00:24:05,760 --> 00:24:12,000
application you your application is

00:24:08,429 --> 00:24:14,010
prepared to basically roll new passwords

00:24:12,000 --> 00:24:18,210
for anything you should be able to

00:24:14,010 --> 00:24:19,919
change passwords easily if you're

00:24:18,210 --> 00:24:22,020
considering using a service and you see

00:24:19,919 --> 00:24:25,289
that that service did not provide a an

00:24:22,020 --> 00:24:28,409
easy way to revoke their tokens or

00:24:25,289 --> 00:24:32,039
passwords it's a bad idea if you need to

00:24:28,409 --> 00:24:33,960
put a per ticket to support to revoke a

00:24:32,039 --> 00:24:35,250
password and then wait two hours or more

00:24:33,960 --> 00:24:37,350
nope

00:24:35,250 --> 00:24:38,850
can do that you need to make sure that

00:24:37,350 --> 00:24:40,950
you can revoke a password when you click

00:24:38,850 --> 00:24:42,870
of a button it should be immediate

00:24:40,950 --> 00:24:46,470
because the more you wait the more at

00:24:42,870 --> 00:24:48,149
risk you are of course you should not

00:24:46,470 --> 00:24:50,460
use the same password for multiple

00:24:48,149 --> 00:24:52,799
services in the cases where you pick the

00:24:50,460 --> 00:24:54,870
passwords this is not that common

00:24:52,799 --> 00:24:57,750
because in general you you get a sign a

00:24:54,870 --> 00:24:59,909
token but for the things that that you

00:24:57,750 --> 00:25:01,919
control where you pick a password don't

00:24:59,909 --> 00:25:04,440
use the same one same for your own

00:25:01,919 --> 00:25:06,090
personal passwords same advice and then

00:25:04,440 --> 00:25:09,210
looking at this from the other side you

00:25:06,090 --> 00:25:11,250
should not use the same credentials for

00:25:09,210 --> 00:25:13,770
all the members of your team and the

00:25:11,250 --> 00:25:15,380
reason for that is that if someone

00:25:13,770 --> 00:25:17,610
deletes the database by mistake and

00:25:15,380 --> 00:25:19,470
you're all using the same password then

00:25:17,610 --> 00:25:21,690
you're not going to know who did it and

00:25:19,470 --> 00:25:24,629
I don't mean that as a way to punish it

00:25:21,690 --> 00:25:26,520
and punish the person only you know to

00:25:24,629 --> 00:25:28,740
train them right so that it doesn't

00:25:26,520 --> 00:25:32,340
happen again you should know who who

00:25:28,740 --> 00:25:35,129
makes those kind of kind of things so

00:25:32,340 --> 00:25:38,750
that is all I have I don't know if we

00:25:35,129 --> 00:25:38,750
have time for questions maybe we do

00:25:39,350 --> 00:25:43,169
thanks Miguel we have five minutes for

00:25:41,970 --> 00:25:46,169
questions so if you have questions

00:25:43,169 --> 00:25:48,779
please step up to the mic we ask that

00:25:46,169 --> 00:25:52,309
you only have asked one question so

00:25:48,779 --> 00:25:52,309
others have time to ask their so

00:25:57,820 --> 00:26:09,850
thank you that's a question I do thank

00:26:07,900 --> 00:26:11,470
you so much for the talk yeah I do

00:26:09,850 --> 00:26:12,580
talked a little bit just at the end if

00:26:11,470 --> 00:26:13,330
you have multiple people working on the

00:26:12,580 --> 00:26:14,710
same team

00:26:13,330 --> 00:26:15,940
does it make sense to have different

00:26:14,710 --> 00:26:18,280
passwords for different team members or

00:26:15,940 --> 00:26:20,170
does it make sense to have like no it

00:26:18,280 --> 00:26:22,900
makes sense that each person uses their

00:26:20,170 --> 00:26:24,820
own set of credentials and and it's only

00:26:22,900 --> 00:26:27,550
for accountability right you you want to

00:26:24,820 --> 00:26:30,400
know who that's what right if you're all

00:26:27,550 --> 00:26:32,650
use the same credentials it's kind of

00:26:30,400 --> 00:26:35,380
difficult to do you know if you need to

00:26:32,650 --> 00:26:37,330
investigate what happened you know to do

00:26:35,380 --> 00:26:39,580
any research you would not know because

00:26:37,330 --> 00:26:45,400
they all look the same all right thank

00:26:39,580 --> 00:26:48,520
you yeah thank you good talk

00:26:45,400 --> 00:26:51,910
Thanks so you're still vulnerable though

00:26:48,520 --> 00:26:53,140
to each member remembering to use this

00:26:51,910 --> 00:26:54,750
better practice that you just put

00:26:53,140 --> 00:26:59,470
together and to have to remember to

00:26:54,750 --> 00:27:01,810
ignore not the environment file oh good

00:26:59,470 --> 00:27:03,580
no okay so you could set up a like a

00:27:01,810 --> 00:27:04,750
global ignore for your team check it in

00:27:03,580 --> 00:27:06,790
first

00:27:04,750 --> 00:27:08,290
okay I'm sorry yeah I don't think I was

00:27:06,790 --> 00:27:10,780
very clear with this when you make a

00:27:08,290 --> 00:27:13,030
change to the gate ignore file you

00:27:10,780 --> 00:27:14,650
commit that change so any any member of

00:27:13,030 --> 00:27:15,880
your team when they cloned that

00:27:14,650 --> 00:27:18,460
repository they're gonna have that

00:27:15,880 --> 00:27:20,380
clause that ignores the door ends right

00:27:18,460 --> 00:27:21,940
so you do this when you set up the

00:27:20,380 --> 00:27:24,430
repository or when you start doing this

00:27:21,940 --> 00:27:25,870
and then from that point on you know

00:27:24,430 --> 00:27:31,780
it's gonna be ignored for everybody in

00:27:25,870 --> 00:27:34,590
the team that makes sense thanks for the

00:27:31,780 --> 00:27:37,780
talk so quick question about the MV file

00:27:34,590 --> 00:27:39,400
are you creating that file on every time

00:27:37,780 --> 00:27:42,340
you create a new instance of that server

00:27:39,400 --> 00:27:45,640
so I'm thinking yes yes you have to

00:27:42,340 --> 00:27:48,120
create the file you if it's too

00:27:45,640 --> 00:27:51,130
troublesome then you can store a copy

00:27:48,120 --> 00:27:53,980
with a template in the repository so you

00:27:51,130 --> 00:27:55,390
can say a dot M from template and then

00:27:53,980 --> 00:27:57,940
you can commit that because it doesn't

00:27:55,390 --> 00:27:59,890
have any secrets and then you copy that

00:27:57,940 --> 00:28:02,440
into a dot F and then you can't edit it

00:27:59,890 --> 00:28:04,950
each time you do an installation yes

00:28:02,440 --> 00:28:08,020
thanks

00:28:04,950 --> 00:28:10,360
hi this isn't super relevant to what

00:28:08,020 --> 00:28:11,470
you're talking about but do you have any

00:28:10,360 --> 00:28:13,899
sort of password man

00:28:11,470 --> 00:28:15,279
like desktop software that are secure

00:28:13,899 --> 00:28:17,139
that will scramble your passwords that

00:28:15,279 --> 00:28:19,509
you can retrieve and use for each time

00:28:17,139 --> 00:28:21,399
for all your different services I think

00:28:19,509 --> 00:28:24,429
there are many the one that I use is key

00:28:21,399 --> 00:28:27,659
pass but it's open source you can look

00:28:24,429 --> 00:28:27,659
at the code so I like that

00:28:28,649 --> 00:28:37,480
thank you for your talk my question the

00:28:31,779 --> 00:28:41,470
dot e and B file on production you where

00:28:37,480 --> 00:28:43,929
would that well okay so on production

00:28:41,470 --> 00:28:46,659
you may or may not use it so if the file

00:28:43,929 --> 00:28:49,360
isn't there then this package that I

00:28:46,659 --> 00:28:51,340
showed dot and Python dot F then it'll

00:28:49,360 --> 00:28:53,139
say ok fine there's no file and it'll do

00:28:51,340 --> 00:28:55,750
nothing right so it's not going to

00:28:53,139 --> 00:28:57,909
import anything and then if in

00:28:55,750 --> 00:29:01,029
production you use a different way for

00:28:57,909 --> 00:29:04,059
obtaining secrets then that's going to

00:29:01,029 --> 00:29:05,919
be how you get these these variables set

00:29:04,059 --> 00:29:08,610
right so you're going to use for example

00:29:05,919 --> 00:29:10,779
in the way I do it is in the default

00:29:08,610 --> 00:29:13,090
argument the second argument to the

00:29:10,779 --> 00:29:16,600
target then you're going to put there a

00:29:13,090 --> 00:29:20,320
cloud API that gets the secret from a

00:29:16,600 --> 00:29:23,080
production store in a secret store if

00:29:20,320 --> 00:29:26,080
you want though you can't set up a

00:29:23,080 --> 00:29:28,419
torrent file so you can set up maybe in

00:29:26,080 --> 00:29:31,779
an unstable if you use ansible for

00:29:28,419 --> 00:29:34,000
example the ansible playbook can set up

00:29:31,779 --> 00:29:38,940
a torrent file for you doing the

00:29:34,000 --> 00:29:41,940
deployment ok thank you yep thank you

00:29:38,940 --> 00:29:41,940

YouTube URL: https://www.youtube.com/watch?v=2uaTPmNvH0I


