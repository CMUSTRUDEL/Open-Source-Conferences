Title: Rae Knowler - Python, Locales and Writing Systems - PyCon 2018
Publication date: 2018-08-06
Playlist: Talks
Description: 
	Speaker: Rae Knowler

Python 3 removes a lot of the confusion around Unicode handling in Python, but that by no means fixes everything. Different locales and writing systems have unique behaviours that can trip you up. Hereâ€™s some of the worst ones and how to handle them correctly.

Slides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides
Captions: 
	00:00:02,689 --> 00:00:14,549
all right welcome to the last talk

00:00:09,599 --> 00:00:18,750
session here of the day we are very

00:00:14,549 --> 00:00:22,080
pleased to have Ray Miller here who will

00:00:18,750 --> 00:00:25,080
be talking about Python locales and

00:00:22,080 --> 00:00:28,380
writing systems if you have any

00:00:25,080 --> 00:00:30,900
questions perhaps you can catch ray

00:00:28,380 --> 00:00:33,180
afterwards we're not going to have the

00:00:30,900 --> 00:00:42,780
time to have questions here

00:00:33,180 --> 00:00:47,899
okay so here's ray hi hi thanks everyone

00:00:42,780 --> 00:00:49,890
thanks a lot this is pretty big room but

00:00:47,899 --> 00:00:55,860
I'm just gonna go for it

00:00:49,890 --> 00:00:57,480
okay welcome to this talk before I go

00:00:55,860 --> 00:01:00,239
into my actual topic I'm just gonna tell

00:00:57,480 --> 00:01:03,019
you a little bit about me as Ned's

00:01:00,239 --> 00:01:05,549
already introduced me my name is Ray

00:01:03,019 --> 00:01:09,720
that's my Twitter handle up so it's just

00:01:05,549 --> 00:01:12,119
my name it's terribly imaginative I'm a

00:01:09,720 --> 00:01:15,479
web developer who is British based in

00:01:12,119 --> 00:01:18,150
Switzerland and I mostly do Python PHP

00:01:15,479 --> 00:01:22,890
and kind of dabble and go and JavaScript

00:01:18,150 --> 00:01:24,840
I work for a company called leap leap

00:01:22,890 --> 00:01:27,080
are gay and they sponsored me to come

00:01:24,840 --> 00:01:30,890
here today which is really kind of them

00:01:27,080 --> 00:01:34,320
and I use they pronouns or anything

00:01:30,890 --> 00:01:35,549
non-gendered I thought it would be a bit

00:01:34,320 --> 00:01:37,290
pointless to put the picture of my

00:01:35,549 --> 00:01:40,470
lovely face on the slide since you know

00:01:37,290 --> 00:01:43,229
what I look like so this is beautiful

00:01:40,470 --> 00:01:47,159
sunny green Zurich where I where I'm

00:01:43,229 --> 00:01:51,540
based this is possibly the most

00:01:47,159 --> 00:01:53,759
important slide in in this whole sorry

00:01:51,540 --> 00:01:55,799
in this whole talk these are the

00:01:53,759 --> 00:01:58,350
languages I speak I'm a native speaker

00:01:55,799 --> 00:02:00,210
of English I speak reasonably good

00:01:58,350 --> 00:02:01,770
German having lived in the

00:02:00,210 --> 00:02:05,009
german-speaking country for a while and

00:02:01,770 --> 00:02:08,310
I am learning Swedish and Spanish on

00:02:05,009 --> 00:02:11,640
duolingo what this means is that I don't

00:02:08,310 --> 00:02:13,379
actually speak certainly not natively or

00:02:11,640 --> 00:02:13,760
fluently any of the languages we're

00:02:13,379 --> 00:02:16,069
going to be

00:02:13,760 --> 00:02:19,700
talking about in the session so if I

00:02:16,069 --> 00:02:21,409
make any terrible slip-ups and you speak

00:02:19,700 --> 00:02:23,180
one of the languages I would really love

00:02:21,409 --> 00:02:27,280
it if you came to me at the end and kind

00:02:23,180 --> 00:02:35,390
of corrected me but I'm gonna do my best

00:02:27,280 --> 00:02:39,680
so to get started everyone here is using

00:02:35,390 --> 00:02:42,970
Python 3 right yeah anyone still using

00:02:39,680 --> 00:02:45,260
Python 2 ok

00:02:42,970 --> 00:02:46,819
you're probably gonna have to get a move

00:02:45,260 --> 00:02:49,510
on but I know there are reasons why you

00:02:46,819 --> 00:02:51,680
probably can't switch right the second

00:02:49,510 --> 00:02:54,200
but I'd like to talk a little bit about

00:02:51,680 --> 00:02:58,190
one of the many excellent things about

00:02:54,200 --> 00:03:02,420
Python 3 which is by default in Python 3

00:02:58,190 --> 00:03:06,950
all strings are unicode whereas in

00:03:02,420 --> 00:03:11,120
Python 2 they were a ski and a ski is

00:03:06,950 --> 00:03:13,250
really just the it's a it's a set of

00:03:11,120 --> 00:03:15,310
characters which is the capital letters

00:03:13,250 --> 00:03:18,849
and small letters of the roman alphabet

00:03:15,310 --> 00:03:21,739
numbers some punctuation and stuff and

00:03:18,849 --> 00:03:23,959
you know this is great if you are an

00:03:21,739 --> 00:03:26,349
english-speaking person learning code in

00:03:23,959 --> 00:03:32,959
an english-speaking place which was me

00:03:26,349 --> 00:03:37,699
six years ago or so and also I won't get

00:03:32,959 --> 00:03:40,129
into what encoding necessarily means in

00:03:37,699 --> 00:03:41,569
this talk I've got some links at the end

00:03:40,129 --> 00:03:45,919
if you want to do a deeper dive into

00:03:41,569 --> 00:03:48,379
Unicode Python 3 also just assumes that

00:03:45,919 --> 00:03:52,310
your source files are encoded in utf-8

00:03:48,379 --> 00:03:55,340
which is a sensible value and and this

00:03:52,310 --> 00:03:56,840
means that if you are dealing with text

00:03:55,340 --> 00:03:59,389
strings and you want to include

00:03:56,840 --> 00:04:01,720
something that's non ASCII so you know

00:03:59,389 --> 00:04:06,349
to write the word Cafe for example with

00:04:01,720 --> 00:04:09,709
an accent on the e or to write something

00:04:06,349 --> 00:04:11,989
in German or French where there's quite

00:04:09,709 --> 00:04:14,349
a lot of other accents you don't have to

00:04:11,989 --> 00:04:17,449
specify them it's a Unicode string and

00:04:14,349 --> 00:04:19,220
if you're like me english-speaking

00:04:17,449 --> 00:04:21,739
person in Britain learning to program

00:04:19,220 --> 00:04:25,310
and then you move as I did to

00:04:21,739 --> 00:04:27,170
Switzerland and get your first job as a

00:04:25,310 --> 00:04:29,660
programmer which is basically

00:04:27,170 --> 00:04:31,790
munging strings that you've scraped off

00:04:29,660 --> 00:04:34,490
the web and they're all German and

00:04:31,790 --> 00:04:37,160
French place names if you start with

00:04:34,490 --> 00:04:39,980
Python 3 you will see a lot less of this

00:04:37,160 --> 00:04:42,050
error message and you'll be a lot less

00:04:39,980 --> 00:04:44,030
confused and like oh god I thought I

00:04:42,050 --> 00:04:46,450
could program how someone is paying for

00:04:44,030 --> 00:04:52,000
me and it turns out I'm terrible at this

00:04:46,450 --> 00:04:59,180
um so yeah bison 3 it's good

00:04:52,000 --> 00:05:01,820
however um there are a lot of cases

00:04:59,180 --> 00:05:05,240
where you might want to localize text

00:05:01,820 --> 00:05:08,660
using different alphabets and Roman 1

00:05:05,240 --> 00:05:10,850
the Latin one and then even if though

00:05:08,660 --> 00:05:14,000
you are dutifully using Python 3 and

00:05:10,850 --> 00:05:20,860
relying on its Unicode features you can

00:05:14,000 --> 00:05:20,860
still get in trouble how much trouble

00:05:21,370 --> 00:05:25,630
well I mean you could end up like these

00:05:24,950 --> 00:05:28,850
people

00:05:25,630 --> 00:05:31,460
this is Ramazan Taliban and Amina

00:05:28,850 --> 00:05:35,330
Taliban I hope I'm pronouncing that

00:05:31,460 --> 00:05:40,100
right they were a young married couple

00:05:35,330 --> 00:05:44,230
in Turkey a few years ago and they are

00:05:40,100 --> 00:05:46,730
now I'm afraid to say both dead

00:05:44,230 --> 00:05:48,980
you see the problem they were having was

00:05:46,730 --> 00:05:51,680
that they quite young I guess they were

00:05:48,980 --> 00:05:55,540
early 20s and they got married things

00:05:51,680 --> 00:05:58,460
were fine for a little while and then

00:05:55,540 --> 00:06:01,700
they started having arguments they split

00:05:58,460 --> 00:06:04,220
up Amina was living back as if her found

00:06:01,700 --> 00:06:05,930
her family's house but they couldn't

00:06:04,220 --> 00:06:07,700
leave it alone you know anyone who's

00:06:05,930 --> 00:06:10,160
been in a bad relationship that broke up

00:06:07,700 --> 00:06:11,510
can probably identify with this a bit

00:06:10,160 --> 00:06:13,970
they were texting each other all the

00:06:11,510 --> 00:06:16,310
time it's like what you said this you

00:06:13,970 --> 00:06:18,800
said that and then one day

00:06:16,310 --> 00:06:21,230
Ramazan unfortunately sent a text

00:06:18,800 --> 00:06:24,350
message which translated to something

00:06:21,230 --> 00:06:26,950
like you always change what you're

00:06:24,350 --> 00:06:29,420
saying when you run out of arguments

00:06:26,950 --> 00:06:34,040
Foreman was he sent it from his phone

00:06:29,420 --> 00:06:36,620
which included the the dopplers Turkish

00:06:34,040 --> 00:06:39,380
letter I you can see that in the title

00:06:36,620 --> 00:06:39,950
there and he sent it to a Mina's phone

00:06:39,380 --> 00:06:42,650
which did

00:06:39,950 --> 00:06:44,330
include this gif like her phone just

00:06:42,650 --> 00:06:48,140
couldn't handle it so it represented it

00:06:44,330 --> 00:06:48,980
with a normal normal what we usually use

00:06:48,140 --> 00:06:53,300
everyday here

00:06:48,980 --> 00:06:56,000
das is I and that meant that his nasty

00:06:53,300 --> 00:06:59,120
comment to his soon-to-be ex-wife turned

00:06:56,000 --> 00:07:02,060
out something quite obscene and she was

00:06:59,120 --> 00:07:03,320
horrified and infuriated shows her whole

00:07:02,060 --> 00:07:05,620
family the text message

00:07:03,320 --> 00:07:08,060
they were also horrified and infuriated

00:07:05,620 --> 00:07:10,790
Ramazan came over they met him at the

00:07:08,060 --> 00:07:13,760
door with knives and then in the ensuing

00:07:10,790 --> 00:07:17,960
kind of confusion both of these two

00:07:13,760 --> 00:07:22,030
young people ended up dead of a complete

00:07:17,960 --> 00:07:26,000
accident to do with character encoding

00:07:22,030 --> 00:07:27,950
now as far as I know neither of the cell

00:07:26,000 --> 00:07:30,290
phones that they were using had any

00:07:27,950 --> 00:07:34,100
Python in their actual source code

00:07:30,290 --> 00:07:36,280
I presume not but I just like you to

00:07:34,100 --> 00:07:40,250
kind of remind remember that sometimes

00:07:36,280 --> 00:07:43,010
character encoding is not just like an

00:07:40,250 --> 00:07:44,750
annoying consideration that you have to

00:07:43,010 --> 00:07:46,760
keep in mind because otherwise that's

00:07:44,750 --> 00:07:51,650
like me will come and tell you off it

00:07:46,760 --> 00:07:54,230
can be quite important also now that

00:07:51,650 --> 00:07:56,120
we've sort of gone past the the

00:07:54,230 --> 00:07:59,750
childhood bound family no one else in

00:07:56,120 --> 00:08:01,400
this talk will die unless like any one

00:07:59,750 --> 00:08:09,050
the audience is not well but I sincerely

00:08:01,400 --> 00:08:11,990
hope you all well okay so as I say they

00:08:09,050 --> 00:08:17,240
weren't using Python um but we are using

00:08:11,990 --> 00:08:19,280
Python and and we might want to we might

00:08:17,240 --> 00:08:22,640
want to work with the Doppler sandoz's

00:08:19,280 --> 00:08:26,030
eye you can see the four letters here I

00:08:22,640 --> 00:08:29,000
hope that's legible you have a dot less

00:08:26,030 --> 00:08:31,640
capital and small eye and you have the

00:08:29,000 --> 00:08:35,530
same two glyphs for Dossett and each of

00:08:31,640 --> 00:08:39,500
them has their own Unicode code point

00:08:35,530 --> 00:08:41,540
and of course if you capitalize a dot

00:08:39,500 --> 00:08:44,210
less eye it becomes a dot less capsule

00:08:41,540 --> 00:08:47,960
eye and it should D capitalize the same

00:08:44,210 --> 00:08:51,200
way unfortunately there is a bug in

00:08:47,960 --> 00:08:54,110
python which the last time I gave this

00:08:51,200 --> 00:08:54,300
talk someone told me very very sincerely

00:08:54,110 --> 00:08:57,510
the

00:08:54,300 --> 00:08:59,040
it had been fixed I think in Python 3.6

00:08:57,510 --> 00:09:05,820
but actually I believe it hasn't been

00:08:59,040 --> 00:09:08,550
fixed yet where if you say as I did you

00:09:05,820 --> 00:09:11,250
set your local local to Turkish utf-8

00:09:08,550 --> 00:09:16,829
and you make an array of the four

00:09:11,250 --> 00:09:19,200
letters I then you might want to say

00:09:16,829 --> 00:09:21,839
capitalize them all and then D

00:09:19,200 --> 00:09:25,470
capitalize them all and as you can see

00:09:21,839 --> 00:09:28,769
if if you read through my my output

00:09:25,470 --> 00:09:35,790
there in Turkish even using the right

00:09:28,769 --> 00:09:41,480
locale it just goes wrong a capitalist I

00:09:35,790 --> 00:09:41,480
always goes to a small dotted eye and

00:09:42,079 --> 00:09:47,640
vice versa

00:09:44,300 --> 00:09:49,800
so yeah actually if you're dealing with

00:09:47,640 --> 00:09:53,670
Turkish texts that you might want to

00:09:49,800 --> 00:09:57,149
just put in different cases you could be

00:09:53,670 --> 00:10:04,290
setting yourself up for a very bloody

00:09:57,149 --> 00:10:07,560
accident sorry I seem to be missing a

00:10:04,290 --> 00:10:13,520
slide here I will just summarize what I

00:10:07,560 --> 00:10:13,520
was going to say which is um the the

00:10:13,760 --> 00:10:19,040
there are two ways to get around this

00:10:16,020 --> 00:10:21,180
with python and one is to just make a

00:10:19,040 --> 00:10:23,459
translation table for yourself of the

00:10:21,180 --> 00:10:26,670
correct relationships between capsules

00:10:23,459 --> 00:10:31,790
and dotted nurse and use that when

00:10:26,670 --> 00:10:39,750
you're when you're translating text and

00:10:31,790 --> 00:10:41,490
the other is to I'm terribly sorry I

00:10:39,750 --> 00:10:43,709
missed a slide and the site of my

00:10:41,490 --> 00:10:47,370
speaking notes on it and I've now

00:10:43,709 --> 00:10:50,990
forgotten the name of the of the library

00:10:47,370 --> 00:11:00,050
I was going to tell you to import but

00:10:50,990 --> 00:11:00,050
there there is a they

00:11:00,720 --> 00:11:12,240
third party yes thank you oh come on how

00:11:10,630 --> 00:11:17,800
many cool developers do I have here

00:11:12,240 --> 00:11:20,079
hmm could be okay so I have my

00:11:17,800 --> 00:11:20,980
researchers in the front row trying to

00:11:20,079 --> 00:11:29,709
figure this out

00:11:20,980 --> 00:11:33,670
thank you yeah there's a an external si

00:11:29,709 --> 00:11:38,440
package that you can thank you can I

00:11:33,670 --> 00:11:44,240
have a round of applause thank you so

00:11:38,440 --> 00:11:46,470
much guys yes you can import the ICU

00:11:44,240 --> 00:11:52,180
[Music]

00:11:46,470 --> 00:11:54,100
package and that will that will allow

00:11:52,180 --> 00:11:56,950
you to correctly capitalize and D

00:11:54,100 --> 00:11:59,170
capitalized Turkish however if that's

00:11:56,950 --> 00:12:01,510
really if that's the only thing that you

00:11:59,170 --> 00:12:03,339
need it for I would suggest going with

00:12:01,510 --> 00:12:06,550
the small hand-built translation table

00:12:03,339 --> 00:12:11,079
because that's pretty heavy thing to

00:12:06,550 --> 00:12:14,110
include in your project yeah just be

00:12:11,079 --> 00:12:15,610
aware of this and my partner makes a

00:12:14,110 --> 00:12:17,260
game in Java and he actually had a

00:12:15,610 --> 00:12:20,350
really annoying bug which was caused by

00:12:17,260 --> 00:12:21,810
this exact same thing so it's definitely

00:12:20,350 --> 00:12:26,110
something to keep aware of

00:12:21,810 --> 00:12:30,579
okay so unintentionally this talk is

00:12:26,110 --> 00:12:33,820
kind of structured as an west2east

00:12:30,579 --> 00:12:37,810
journey around the world and so our next

00:12:33,820 --> 00:12:39,640
stop is going to be in Israel because I

00:12:37,810 --> 00:12:42,850
wants to talk about right-to-left rising

00:12:39,640 --> 00:12:44,709
systems and the the picture I picked to

00:12:42,850 --> 00:12:46,990
illustrate this is a street sign I

00:12:44,709 --> 00:12:49,209
really like it because you can see from

00:12:46,990 --> 00:12:51,760
the the font size exactly what's going

00:12:49,209 --> 00:12:54,390
on there the transliterated name of the

00:12:51,760 --> 00:12:56,560
street is sim tap i love bats looked and

00:12:54,390 --> 00:13:00,000
the same thing is written there at the

00:12:56,560 --> 00:13:00,000
top in hebrew right-to-left

00:13:00,660 --> 00:13:08,770
how do we handle this as programmers we

00:13:05,440 --> 00:13:10,870
have to be aware of something called the

00:13:08,770 --> 00:13:13,209
distinction between logical and visual

00:13:10,870 --> 00:13:17,600
ordering

00:13:13,209 --> 00:13:19,999
unicode doesn't really want to care

00:13:17,600 --> 00:13:22,970
about whether we're rising left to right

00:13:19,999 --> 00:13:25,579
or right to left all unicode cares about

00:13:22,970 --> 00:13:28,459
is the logical order so like if i am a

00:13:25,579 --> 00:13:32,269
person reading this string what order do

00:13:28,459 --> 00:13:35,720
the letters go into my brain makes sense

00:13:32,269 --> 00:13:37,970
however when we're out putting this for

00:13:35,720 --> 00:13:43,489
humans to read we need to take account

00:13:37,970 --> 00:13:46,279
of the the visual order obviously we

00:13:43,489 --> 00:13:49,249
need bi-directional support and that's

00:13:46,279 --> 00:13:50,959
not natively in python but luckily

00:13:49,249 --> 00:13:54,379
there's an open-source package called

00:13:50,959 --> 00:13:57,499
python by dye or by d i'm not quite sure

00:13:54,379 --> 00:13:59,209
how that's pronounced which will handle

00:13:57,499 --> 00:14:05,679
it for you you just pick and store it

00:13:59,209 --> 00:14:09,619
and then you can see that we have a

00:14:05,679 --> 00:14:15,709
hebrew string here which is written it's

00:14:09,619 --> 00:14:17,419
represented here left to right in the in

00:14:15,709 --> 00:14:20,089
the order of the characters like the

00:14:17,419 --> 00:14:24,589
logical order and yet if we get

00:14:20,089 --> 00:14:25,789
displayed then we output it in a normal

00:14:24,589 --> 00:14:29,239
output

00:14:25,789 --> 00:14:31,639
hebrew way and the string here says

00:14:29,239 --> 00:14:33,859
Academy of the Hebrew language thought

00:14:31,639 --> 00:14:36,859
that would be quite an appropriate

00:14:33,859 --> 00:14:38,480
example okay we have conquered

00:14:36,859 --> 00:14:40,459
right-to-left writing systems that was

00:14:38,480 --> 00:14:48,499
very easy we installed one library and

00:14:40,459 --> 00:14:50,539
we are doing good until we we switch

00:14:48,499 --> 00:14:52,429
country always sort of walk along a bit

00:14:50,539 --> 00:14:53,989
and we meet someone and who would write

00:14:52,429 --> 00:14:57,649
like us to write down some stuff in

00:14:53,989 --> 00:14:59,629
Arabic Arabic as you probably know is

00:14:57,649 --> 00:15:02,720
also a right-to-left writing system like

00:14:59,629 --> 00:15:04,249
Hebrew but it's more complicated in that

00:15:02,720 --> 00:15:06,709
the letters have different forms

00:15:04,249 --> 00:15:09,009
depending on where they are in the word

00:15:06,709 --> 00:15:11,569
like whether they're just on their own

00:15:09,009 --> 00:15:14,269
whether they're in the end middle or the

00:15:11,569 --> 00:15:16,129
beginning and the illustration they have

00:15:14,269 --> 00:15:19,429
here is just a screenshot from the

00:15:16,129 --> 00:15:22,009
Wikipedia page which gives some examples

00:15:19,429 --> 00:15:24,249
of how much the shape of the letters can

00:15:22,009 --> 00:15:24,249
change

00:15:24,610 --> 00:15:32,379
oh yeah and just just as a side note and

00:15:28,049 --> 00:15:34,600
there is a really I mean if you speak

00:15:32,379 --> 00:15:36,220
Arabic or if you're interested in this

00:15:34,600 --> 00:15:39,579
there's a really funny blog called no

00:15:36,220 --> 00:15:43,119
that's not Arabic which just shows lots

00:15:39,579 --> 00:15:48,160
of examples of stuff where you know like

00:15:43,119 --> 00:15:49,839
video games advertising sort of finds

00:15:48,160 --> 00:15:52,929
that people have posted up to give a

00:15:49,839 --> 00:15:55,720
kind of international feel where people

00:15:52,929 --> 00:15:58,689
have just written some text and like

00:15:55,720 --> 00:16:01,589
puts it in an Arab font and Arabic fonts

00:15:58,689 --> 00:16:04,059
and just assume that it's then Arabic

00:16:01,589 --> 00:16:09,160
but it's not because most of the time

00:16:04,059 --> 00:16:11,769
it's accidentally been reversed left to

00:16:09,160 --> 00:16:13,839
right and pretty much all of the time

00:16:11,769 --> 00:16:18,100
they don't consider these contextual

00:16:13,839 --> 00:16:19,809
forms which leads some really weird

00:16:18,100 --> 00:16:26,799
examples sometimes there's a link at the

00:16:19,809 --> 00:16:29,079
end of this talk okay luckily we we have

00:16:26,799 --> 00:16:32,939
an open-source library here to help us

00:16:29,079 --> 00:16:39,730
as well this is Python Arabic reshape er

00:16:32,939 --> 00:16:41,259
its it's a Python library that took it

00:16:39,730 --> 00:16:44,559
starts in I think

00:16:41,259 --> 00:16:47,589
Android's libraries and so it's been

00:16:44,559 --> 00:16:49,269
sort of pulled over for us and it's very

00:16:47,589 --> 00:16:51,419
easy to use I will just give you an

00:16:49,269 --> 00:16:54,220
example that's actually on their website

00:16:51,419 --> 00:16:56,769
you take a string of Arabic letters

00:16:54,220 --> 00:17:00,160
which are the correct letters and it

00:16:56,769 --> 00:17:02,350
then puts them into the correct the

00:17:00,160 --> 00:17:05,189
correct shapes so yeah that's now

00:17:02,350 --> 00:17:12,179
legible if you're an Arabic speaker and

00:17:05,189 --> 00:17:16,659
this says Arabic fantastic seems yeah

00:17:12,179 --> 00:17:19,329
seems appropriate okay we're now going

00:17:16,659 --> 00:17:22,720
to kind of skip over several countries

00:17:19,329 --> 00:17:27,250
and our round-the-world tour until we

00:17:22,720 --> 00:17:28,840
get to East Asia because I want to talk

00:17:27,250 --> 00:17:31,929
about full wits and half words the

00:17:28,840 --> 00:17:34,029
characters you probably do notice a

00:17:31,929 --> 00:17:36,830
difference between the two strings that

00:17:34,029 --> 00:17:41,150
other one is a lot wider

00:17:36,830 --> 00:17:44,540
and in fact if you if you happen to have

00:17:41,150 --> 00:17:47,870
looked on Japanese or Chinese websites

00:17:44,540 --> 00:17:54,230
that include English text the kind of

00:17:47,870 --> 00:17:55,700
the exact sort of aesthetic style of the

00:17:54,230 --> 00:17:57,260
top line will probably be quite familiar

00:17:55,700 --> 00:18:00,050
to you as well

00:17:57,260 --> 00:18:02,540
here's another one this is just a random

00:18:00,050 --> 00:18:05,360
font of my computer and you can see that

00:18:02,540 --> 00:18:10,100
the upper line doesn't even have any

00:18:05,360 --> 00:18:13,130
style to it so yeah as you can probably

00:18:10,100 --> 00:18:15,290
guess the top line includes full width

00:18:13,130 --> 00:18:17,570
characters and the bottom line includes

00:18:15,290 --> 00:18:20,240
half width characters

00:18:17,570 --> 00:18:21,800
what are they is and why do we have them

00:18:20,240 --> 00:18:26,300
in fonts and why are they there in

00:18:21,800 --> 00:18:29,420
Unicode this doesn't make any sense it

00:18:26,300 --> 00:18:33,970
makes sense if you need ever to write in

00:18:29,420 --> 00:18:38,360
Chinese or Japanese or actually Korean

00:18:33,970 --> 00:18:42,920
and there there are several different

00:18:38,360 --> 00:18:45,020
alphabets we might use these are hand

00:18:42,920 --> 00:18:48,590
characters they come from Japan sorry

00:18:45,020 --> 00:18:51,230
they come from Chinese but they are also

00:18:48,590 --> 00:18:54,590
quite often used just kind of imported

00:18:51,230 --> 00:18:56,600
in Japanese and Korean and they are full

00:18:54,590 --> 00:19:01,640
width you can see they they generally

00:18:56,600 --> 00:19:04,430
look like little squares then these are

00:19:01,640 --> 00:19:07,310
camera and these are Japanese characters

00:19:04,430 --> 00:19:09,140
and this is really the only place where

00:19:07,310 --> 00:19:11,720
we might have to deal with both full

00:19:09,140 --> 00:19:14,210
width and half width characters you can

00:19:11,720 --> 00:19:18,320
see obviously full width on top half

00:19:14,210 --> 00:19:21,380
width on the bottom and these are

00:19:18,320 --> 00:19:23,180
usually the characters used in displays

00:19:21,380 --> 00:19:26,900
electronic displays like on the till in

00:19:23,180 --> 00:19:29,690
a shop they were originally kind of

00:19:26,900 --> 00:19:32,840
square-ish like the hand characters but

00:19:29,690 --> 00:19:34,820
you can squeeze more in if you make them

00:19:32,840 --> 00:19:36,260
half width and so that's what people

00:19:34,820 --> 00:19:38,120
started doing when they were working on

00:19:36,260 --> 00:19:39,620
electronic displays and you can see

00:19:38,120 --> 00:19:41,420
they're all pretty simple so you don't

00:19:39,620 --> 00:19:46,310
lose a lot of information if you just

00:19:41,420 --> 00:19:48,500
squeeze them and then we have hiragana

00:19:46,310 --> 00:19:49,680
that's another set of Japanese

00:19:48,500 --> 00:19:52,540
characters

00:19:49,680 --> 00:19:55,090
that kind of round instead of square-ish

00:19:52,540 --> 00:19:57,090
like the camera and they're also always

00:19:55,090 --> 00:19:59,830
forward

00:19:57,090 --> 00:20:00,910
there are Korean characters as well but

00:19:59,830 --> 00:20:04,450
I'm going to pick those up in more

00:20:00,910 --> 00:20:08,740
detail in a second so here's how you

00:20:04,450 --> 00:20:12,130
write in China or Japan and if you want

00:20:08,740 --> 00:20:14,560
to include Roman letters in there as in

00:20:12,130 --> 00:20:16,750
this example you can tell that

00:20:14,560 --> 00:20:18,700
everything just looks way nicer much

00:20:16,750 --> 00:20:24,100
more legible much more kind of open and

00:20:18,700 --> 00:20:27,030
uniform if you treat the Roman

00:20:24,100 --> 00:20:29,590
characters as if they're also full width

00:20:27,030 --> 00:20:30,850
and sometimes this means sort of

00:20:29,590 --> 00:20:32,590
changing the shapes of the letters

00:20:30,850 --> 00:20:36,460
sometimes it just means putting more

00:20:32,590 --> 00:20:39,850
space between them so yeah that means

00:20:36,460 --> 00:20:42,400
that as well as kana Roman letters also

00:20:39,850 --> 00:20:46,240
have full widths and half width versions

00:20:42,400 --> 00:20:49,510
and if you are writing a Chinese with

00:20:46,240 --> 00:20:51,610
website and you think oh yeah okay this

00:20:49,510 --> 00:20:54,670
bit like this contact page has to be

00:20:51,610 --> 00:20:59,280
written in English as well or in French

00:20:54,670 --> 00:21:03,190
whatever you just kind of look for the

00:20:59,280 --> 00:21:05,050
Latin letters in your font and kind of

00:21:03,190 --> 00:21:07,210
put them in which means sometimes people

00:21:05,050 --> 00:21:09,220
end up using the the full width

00:21:07,210 --> 00:21:12,700
characters just for several whole

00:21:09,220 --> 00:21:16,180
paragraphs of English text it also means

00:21:12,700 --> 00:21:18,160
that font designers for Chinese and

00:21:16,180 --> 00:21:21,280
Japanese fonts usually don't put nearly

00:21:18,160 --> 00:21:22,900
as much design work into these letters

00:21:21,280 --> 00:21:27,250
as in to the ones people will use every

00:21:22,900 --> 00:21:31,720
day which means you often get this kind

00:21:27,250 --> 00:21:35,950
of very neglected looking sort of wonky

00:21:31,720 --> 00:21:37,900
feeling kind of ugly aspect to text in

00:21:35,950 --> 00:21:41,230
English on Chinese websites and I have

00:21:37,900 --> 00:21:44,740
to say I love it like there's something

00:21:41,230 --> 00:21:46,120
about it I just really enjoy okay so we

00:21:44,740 --> 00:21:48,400
know what these are and we know why we

00:21:46,120 --> 00:21:52,000
won't steal with them but how how can we

00:21:48,400 --> 00:21:55,750
do this in Python and once again it's

00:21:52,000 --> 00:22:00,700
just a pip install away there's a really

00:21:55,750 --> 00:22:03,040
great library called J a conf which will

00:22:00,700 --> 00:22:04,990
kind of which will convert text but

00:22:03,040 --> 00:22:09,310
in full width and half-wits it works on

00:22:04,990 --> 00:22:12,820
Roman letters as well as hiragana and

00:22:09,310 --> 00:22:15,640
katakana and so on and it does it does a

00:22:12,820 --> 00:22:18,010
lot of other different conversion as

00:22:15,640 --> 00:22:21,010
well but for the purposes of this talk

00:22:18,010 --> 00:22:23,830
here we are we have this top line is we

00:22:21,010 --> 00:22:28,540
have a string of Kanna that are Han Kaka

00:22:23,830 --> 00:22:30,220
no sorry Han Kaku or sorry I've written

00:22:28,540 --> 00:22:33,340
to the wrong way around we have at the

00:22:30,220 --> 00:22:36,220
top a string of Japanese kana which has

00:22:33,340 --> 00:22:38,830
n Kaku full-width and we want to

00:22:36,220 --> 00:22:43,480
transform them into Hancock ooh so we

00:22:38,830 --> 00:22:46,510
use the J icon of method z2 h zhen Kaku

00:22:43,480 --> 00:22:49,860
to Hancock ooh and then just to reverse

00:22:46,510 --> 00:22:52,600
we have h to Z so that's very simple and

00:22:49,860 --> 00:22:54,880
you can see it also works for Roman

00:22:52,600 --> 00:22:58,060
characters you just have to tell it

00:22:54,880 --> 00:22:59,680
these are ASCII so I guess actually that

00:22:58,060 --> 00:23:05,320
means it works on ASCII I haven't tried

00:22:59,680 --> 00:23:07,810
this with accented characters it works

00:23:05,320 --> 00:23:10,900
quite easily one thing I just like to

00:23:07,810 --> 00:23:13,360
point out is that you can see in the

00:23:10,900 --> 00:23:17,320
second line there where we have the full

00:23:13,360 --> 00:23:22,270
width string the space in the middle is

00:23:17,320 --> 00:23:24,420
actually a Unicode glyph which is which

00:23:22,270 --> 00:23:28,090
has the code point three zero zero zero

00:23:24,420 --> 00:23:33,420
and that is called the idea graphic

00:23:28,090 --> 00:23:37,050
space it's wider than a normal space and

00:23:33,420 --> 00:23:42,420
it's just one of sort of many many

00:23:37,050 --> 00:23:45,400
invisible species of Unicode characters

00:23:42,420 --> 00:23:47,680
yeah yeah obviously you wouldn't

00:23:45,400 --> 00:23:53,020
normally see it now you can see it like

00:23:47,680 --> 00:23:55,750
with x-ray okay I don't have that much

00:23:53,020 --> 00:23:57,910
longer so I might have to speed up a bit

00:23:55,750 --> 00:24:01,780
I told you I would pick up on Korean

00:23:57,910 --> 00:24:04,750
text and here it is the Korean alphabet

00:24:01,780 --> 00:24:07,560
is very special it's not really an

00:24:04,750 --> 00:24:10,060
alphabet it's a celebrity

00:24:07,560 --> 00:24:13,270
it was developed at the court of King

00:24:10,060 --> 00:24:16,120
Sejong the great around the middle of

00:24:13,270 --> 00:24:18,010
the 15th century and it's still used

00:24:16,120 --> 00:24:21,310
and this is one of my favorite sort of

00:24:18,010 --> 00:24:24,010
historical stories before this the all

00:24:21,310 --> 00:24:25,840
Korean writing was done in a very

00:24:24,010 --> 00:24:29,500
different style it was more pictographic

00:24:25,840 --> 00:24:31,360
like Chinese and very beautiful but took

00:24:29,500 --> 00:24:32,800
a long time to learn and a long time to

00:24:31,360 --> 00:24:34,930
read and write

00:24:32,800 --> 00:24:37,030
when Seoul said Jung just said to his

00:24:34,930 --> 00:24:39,070
experts at the court I don't like this

00:24:37,030 --> 00:24:42,010
this is not efficient please design me

00:24:39,070 --> 00:24:43,750
an efficient alphabet and they went away

00:24:42,010 --> 00:24:46,600
took some time and this is what they

00:24:43,750 --> 00:24:48,400
came up with and now everyone uses that

00:24:46,600 --> 00:24:52,840
you very rarely see the old style of

00:24:48,400 --> 00:24:55,930
writing so how does it work the

00:24:52,840 --> 00:24:59,440
different multicolored signs that you

00:24:55,930 --> 00:25:02,820
see here are different letters basically

00:24:59,440 --> 00:25:07,150
they each represent one phonetic sound

00:25:02,820 --> 00:25:11,620
so we have the yellow huhu we have the a

00:25:07,150 --> 00:25:13,330
which is that long ah I guess the long

00:25:11,620 --> 00:25:16,600
figure there in blue and then underneath

00:25:13,330 --> 00:25:21,580
that n mmm and then on the other side we

00:25:16,600 --> 00:25:26,020
have good and so taken together

00:25:21,580 --> 00:25:28,420
oh yeah and so we organized the the

00:25:26,020 --> 00:25:30,640
phonetic sounds the phonetic symbols

00:25:28,420 --> 00:25:33,610
into groups of two or three which are

00:25:30,640 --> 00:25:35,770
then really the actual letters that are

00:25:33,610 --> 00:25:38,250
printed and written and taken together

00:25:35,770 --> 00:25:45,190
this says Hangul which is the name of

00:25:38,250 --> 00:25:47,650
Korean writing okay here's a page that

00:25:45,190 --> 00:25:49,420
has a lot more detail probably more than

00:25:47,650 --> 00:25:54,700
you can take in but it's really

00:25:49,420 --> 00:25:58,450
interesting and now I have to talk about

00:25:54,700 --> 00:26:00,040
Unicode equivalents for a while you see

00:25:58,450 --> 00:26:02,830
there's lots of ways you can write the

00:26:00,040 --> 00:26:05,230
same thing and lots of ways in which you

00:26:02,830 --> 00:26:08,560
can write to different things that might

00:26:05,230 --> 00:26:10,000
actually mean the same thing and this

00:26:08,560 --> 00:26:14,290
becomes relevant when we're writing in

00:26:10,000 --> 00:26:16,660
Korean you see canonic in Unicode

00:26:14,290 --> 00:26:18,010
canonical equivalents this means you can

00:26:16,660 --> 00:26:18,670
build the same character in several

00:26:18,010 --> 00:26:21,190
different ways

00:26:18,670 --> 00:26:23,650
and they mean the same thing so Han

00:26:21,190 --> 00:26:25,690
written with the syllable block means

00:26:23,650 --> 00:26:27,460
exactly the same as Han just written

00:26:25,690 --> 00:26:28,970
with three letters and there might be

00:26:27,460 --> 00:26:30,049
cases when you're writing in Korea

00:26:28,970 --> 00:26:31,460
when you would write the lessor

00:26:30,049 --> 00:26:34,299
separately like that although it's not

00:26:31,460 --> 00:26:37,400
normal so yeah those mean the same thing

00:26:34,299 --> 00:26:40,190
and that means that we can write the

00:26:37,400 --> 00:26:42,500
syllable Han in two way to normal forms

00:26:40,190 --> 00:26:46,640
as they call it the decomposed one or

00:26:42,500 --> 00:26:49,580
less is part and the composed one which

00:26:46,640 --> 00:26:53,390
where you write them all together and in

00:26:49,580 --> 00:26:55,190
fact to use canonical equivalents you

00:26:53,390 --> 00:26:59,419
decompose all of your text and then

00:26:55,190 --> 00:27:04,820
recompose it into the sort of most like

00:26:59,419 --> 00:27:06,830
most standard way yeah Here I am with a

00:27:04,820 --> 00:27:11,059
Korean string this is just vanilla

00:27:06,830 --> 00:27:14,240
Python 3 and so for each character in

00:27:11,059 --> 00:27:17,240
that string there are two characters

00:27:14,240 --> 00:27:19,659
I just want to print the normalized

00:27:17,240 --> 00:27:23,090
decompose the decompose normalized

00:27:19,659 --> 00:27:24,950
version of that character start with two

00:27:23,090 --> 00:27:30,220
composed syllable blocks and I end up

00:27:24,950 --> 00:27:33,620
with two strings of three letters cool

00:27:30,220 --> 00:27:38,390
and yeah then I take it and I just print

00:27:33,620 --> 00:27:43,240
the composed normal form and we see what

00:27:38,390 --> 00:27:43,240
we would expect to two syllable books

00:27:46,510 --> 00:27:56,179
now Python handles this correctly but

00:27:52,190 --> 00:27:58,669
the thing that you have to remember is

00:27:56,179 --> 00:28:01,159
that when you are when you're writing an

00:27:58,669 --> 00:28:03,740
app or a website or something it's not

00:28:01,159 --> 00:28:04,940
just your Python code that all of your

00:28:03,740 --> 00:28:08,659
text and information is going to flow

00:28:04,940 --> 00:28:11,390
through and this is what I noticed when

00:28:08,659 --> 00:28:15,919
I was messing around with this just in

00:28:11,390 --> 00:28:19,610
the terminal as you can see so I wanted

00:28:15,919 --> 00:28:23,600
to print I wanted to use the unicode

00:28:19,610 --> 00:28:28,280
data library and normalize my string in

00:28:23,600 --> 00:28:30,230
the decomposed fashion so if we go back

00:28:28,280 --> 00:28:30,980
you can see yep my string is two

00:28:30,230 --> 00:28:36,409
syllable blocks

00:28:30,980 --> 00:28:41,720
I want to decompose it into two strings

00:28:36,409 --> 00:28:42,590
of three letters and then we're like but

00:28:41,720 --> 00:28:45,370
when I print

00:28:42,590 --> 00:28:48,140
this out sort of all on one line not

00:28:45,370 --> 00:28:49,789
doing it character by character what

00:28:48,140 --> 00:28:54,980
showed up in my terminal was actually

00:28:49,789 --> 00:28:58,279
this which doesn't look like this I

00:28:54,980 --> 00:29:01,880
expected just six letters did you do to

00:28:58,279 --> 00:29:04,760
do um but what I got was kind of a mesh

00:29:01,880 --> 00:29:07,210
something like this and I think that's

00:29:04,760 --> 00:29:10,549
because the the terminal I was using

00:29:07,210 --> 00:29:14,330
sort of it knows oh yeah okay so Han

00:29:10,549 --> 00:29:15,470
that's one letter one character and

00:29:14,330 --> 00:29:17,090
we're going to print ham and then we're

00:29:15,470 --> 00:29:19,399
going to print ghoul and that's also one

00:29:17,090 --> 00:29:21,440
character so it gave itself the space to

00:29:19,399 --> 00:29:23,630
print two characters but because this

00:29:21,440 --> 00:29:26,690
was decomposed it was actually needing

00:29:23,630 --> 00:29:29,960
to print six characters and it just kind

00:29:26,690 --> 00:29:31,580
of put them all on top of each other you

00:29:29,960 --> 00:29:34,130
can tell that python is doing the right

00:29:31,580 --> 00:29:36,220
thing here if I just show you how it

00:29:34,130 --> 00:29:39,080
looked when I just saved it to a file

00:29:36,220 --> 00:29:44,690
that's exactly what I wanted the

00:29:39,080 --> 00:29:46,370
decomposed characters okay so I have

00:29:44,690 --> 00:29:49,700
less than five minutes left when are

00:29:46,370 --> 00:29:55,100
going to talk about security pretty sure

00:29:49,700 --> 00:29:58,760
we can fit this in right okay no I don't

00:29:55,100 --> 00:30:00,080
think so I'm going to have to rush so

00:29:58,760 --> 00:30:03,140
I'm just going to give you a couple of

00:30:00,080 --> 00:30:06,200
tasters of the way we need to pay

00:30:03,140 --> 00:30:08,210
attention to Unicode issues when

00:30:06,200 --> 00:30:10,399
considering security for our websites

00:30:08,210 --> 00:30:14,539
and apps and so on which of course we

00:30:10,399 --> 00:30:17,690
always should so the first is sequel

00:30:14,539 --> 00:30:19,220
injection most of the time when we

00:30:17,690 --> 00:30:21,890
develop for the web these days we're

00:30:19,220 --> 00:30:23,690
using a framework and an ORM which

00:30:21,890 --> 00:30:26,120
should if you're using them correctly

00:30:23,690 --> 00:30:30,590
take care of this stuff for you but

00:30:26,120 --> 00:30:35,899
people don't always and and yeah you

00:30:30,590 --> 00:30:38,720
still need to know it okay so when we

00:30:35,899 --> 00:30:42,559
deal with a string to show like to write

00:30:38,720 --> 00:30:44,240
down that it's a string um you take the

00:30:42,559 --> 00:30:46,990
the characters that say your user has

00:30:44,240 --> 00:30:49,490
typed in and put them in quotation marks

00:30:46,990 --> 00:30:52,730
user types and I don't like raisins and

00:30:49,490 --> 00:30:55,090
we like represent this as quotation mark

00:30:52,730 --> 00:30:57,340
I don't like raisins quotation mark

00:30:55,090 --> 00:31:01,480
of course since we might also use an

00:30:57,340 --> 00:31:03,190
apostrophe in the string itself we

00:31:01,480 --> 00:31:06,220
escaped that with an escape character

00:31:03,190 --> 00:31:09,940
usually the backslash depending on what

00:31:06,220 --> 00:31:11,860
exactly we're doing it with it okay the

00:31:09,940 --> 00:31:14,499
backslash is of course a character it's

00:31:11,860 --> 00:31:20,230
represented in unicode and it has a code

00:31:14,499 --> 00:31:23,789
point which if you hex encode it is 0x

00:31:20,230 --> 00:31:26,970
to show it's a hex encoding and then 5c

00:31:23,789 --> 00:31:32,159
great okay

00:31:26,970 --> 00:31:35,049
the problem is as you get further up

00:31:32,159 --> 00:31:38,919
into the like along the unicode code

00:31:35,049 --> 00:31:39,789
points if you're just you know like a 1

00:31:38,919 --> 00:31:42,100
2 or 3

00:31:39,789 --> 00:31:45,929
whatever that's fine we can encode that

00:31:42,100 --> 00:31:48,220
in just one bite but as we get into

00:31:45,929 --> 00:31:51,909
characters that are added further up in

00:31:48,220 --> 00:31:54,850
in unicode we start needing to use 2 or

00:31:51,909 --> 00:31:59,350
4 bytes to represent them and here we

00:31:54,850 --> 00:32:01,570
have a a hand character actually which

00:31:59,350 --> 00:32:04,409
means grain or grain ready for thrashing

00:32:01,570 --> 00:32:08,379
I just picked it completely at random

00:32:04,409 --> 00:32:14,490
and you can see we need to use 2 bytes

00:32:08,379 --> 00:32:19,600
to encode that so it's oxp 8o x 5c

00:32:14,490 --> 00:32:22,929
now if I as a user inputs the character

00:32:19,600 --> 00:32:27,519
which is encoded as Oh X b8 and then an

00:32:22,929 --> 00:32:30,129
apostrophe and then some sequel sequel

00:32:27,519 --> 00:32:32,879
language into your system and I've

00:32:30,129 --> 00:32:37,360
written this is o x b8 just for kind of

00:32:32,879 --> 00:32:40,990
for clarity I think that character is

00:32:37,360 --> 00:32:42,369
actually a spacing Cydia like the little

00:32:40,990 --> 00:32:45,330
tail that you sometimes see on the

00:32:42,369 --> 00:32:48,340
bottom of letters just the tail

00:32:45,330 --> 00:32:51,460
okay I will explain this in then I'm

00:32:48,340 --> 00:32:55,710
done thank you okay so say I put this in

00:32:51,460 --> 00:32:59,019
and you very cleverly escape the

00:32:55,710 --> 00:33:01,090
apostrophe there with a backslash now

00:32:59,019 --> 00:33:02,980
when i when i read the string through

00:33:01,090 --> 00:33:07,659
like in my code to talk to the database

00:33:02,980 --> 00:33:08,470
IC o---- x b8 o x5 c which is to say

00:33:07,659 --> 00:33:12,070
gray

00:33:08,470 --> 00:33:15,220
and actually the input here is grain or

00:33:12,070 --> 00:33:17,770
one equals one and so if I just passed

00:33:15,220 --> 00:33:20,110
this into my dice places past four query

00:33:17,770 --> 00:33:23,950
like give the phone number of the user

00:33:20,110 --> 00:33:27,580
where the users name is blah or one

00:33:23,950 --> 00:33:30,940
equals one then I'm just going to output

00:33:27,580 --> 00:33:34,720
to this hacker every phone number of all

00:33:30,940 --> 00:33:40,870
ioan users in my database this is a

00:33:34,720 --> 00:33:42,670
security problem yeah so basically the

00:33:40,870 --> 00:33:47,320
workaround for the workaround for this

00:33:42,670 --> 00:33:49,660
one is use use a modern ORM and use it

00:33:47,320 --> 00:33:52,720
use it like you're supposed to use it

00:33:49,660 --> 00:33:55,540
like read the docs don't just kind of

00:33:52,720 --> 00:33:59,020
slam in your own SQL because you think

00:33:55,540 --> 00:34:01,510
you're clever okay I'm just about to

00:33:59,020 --> 00:34:05,620
finish up there's a bunch more detail

00:34:01,510 --> 00:34:08,590
there on this page and I've put another

00:34:05,620 --> 00:34:11,440
couple of examples in there in the

00:34:08,590 --> 00:34:16,150
slides that I will put up later just to

00:34:11,440 --> 00:34:19,650
come some conclusions there are loads of

00:34:16,150 --> 00:34:22,360
weird gotchas when you start using

00:34:19,650 --> 00:34:25,930
working with strings especially strings

00:34:22,360 --> 00:34:29,350
in different writing systems and user

00:34:25,930 --> 00:34:32,460
input and it's not easy but I hope you

00:34:29,350 --> 00:34:32,460
agree that it's really interesting

00:34:32,760 --> 00:34:37,420
secondly there are a lot of useful

00:34:35,410 --> 00:34:39,250
libraries out there you will almost

00:34:37,420 --> 00:34:41,440
certainly not be the first person to

00:34:39,250 --> 00:34:43,450
have your particular problem just go out

00:34:41,440 --> 00:34:44,950
and find someone who did have the

00:34:43,450 --> 00:34:46,890
problem also and very kindly made a

00:34:44,950 --> 00:34:49,660
library to help us all deal with it and

00:34:46,890 --> 00:34:51,370
then thirdly as soon as you can please

00:34:49,660 --> 00:34:55,350
switch to Python 3 because it's just

00:34:51,370 --> 00:35:04,989
better thank you

00:34:55,350 --> 00:35:04,989

YouTube URL: https://www.youtube.com/watch?v=EEV4G6rh-KQ


