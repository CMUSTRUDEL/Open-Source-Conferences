Title: Paul Vincent Craven - Easy 2D Game Creation With Arcade - PyCon 2018
Publication date: 2018-08-06
Playlist: Talks
Description: 
	Speaker: Paul Vincent Craven

Want to have fun with Python? Do something visual? Get started today? Learn how to draw, animate, and use sprites for games with the [Python Arcade](http://arcade.academy/) library.

"Arcade" is an easy-to-use Python library for creating 2D arcade games. We'll show you how to get started creating your own game, and find plenty of example code to get an idea of what you can do with this library. If you are familiar with PyGame, Arcade is easier, more powerful, and uses recent Python features like type hinting and decorators.

This talk is great for beginners, educators, and people who want to create their own arcade games.

Slides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides
Captions: 
	00:00:05,870 --> 00:00:13,740
welcome today's talk is easy to dig aim

00:00:10,349 --> 00:00:19,100
creation with arcades by Paul Vincent

00:00:13,740 --> 00:00:19,100
Kraven please give him a warm applause

00:00:23,330 --> 00:00:29,640
hi can you hear me okay all right

00:00:27,000 --> 00:00:32,369
I'm Paul Craven today I'm going to show

00:00:29,640 --> 00:00:36,809
you how to create 2d video games with

00:00:32,369 --> 00:00:38,879
Python and the arcade library you can

00:00:36,809 --> 00:00:42,059
explore and get more information

00:00:38,879 --> 00:00:45,570
available online by going to arcade dot

00:00:42,059 --> 00:00:48,480
academy there is a ton of information on

00:00:45,570 --> 00:00:50,940
this website it's designed to get you up

00:00:48,480 --> 00:00:55,079
and going creating 2d video games as

00:00:50,940 --> 00:00:57,239
fast and painlessly as possible there's

00:00:55,079 --> 00:00:59,579
also a link to the live versions of

00:00:57,239 --> 00:01:02,399
these slides so if you want the source

00:00:59,579 --> 00:01:07,950
code close by or follow any of the links

00:01:02,399 --> 00:01:10,020
you've got that available in order to

00:01:07,950 --> 00:01:13,200
get started you need to install the

00:01:10,020 --> 00:01:15,090
arcade library you can install the

00:01:13,200 --> 00:01:18,930
arcade library like pretty much any

00:01:15,090 --> 00:01:22,290
other package on pipe I usually just

00:01:18,930 --> 00:01:25,979
typing pip install arcade or for like

00:01:22,290 --> 00:01:30,540
Mac Linux pip 3 install arcade will work

00:01:25,979 --> 00:01:33,000
just fine our Kate does require Python 3

00:01:30,540 --> 00:01:34,619
6 or greater we use type penting and

00:01:33,000 --> 00:01:37,320
some of the new features in the language

00:01:34,619 --> 00:01:40,229
you also need some sort of hardware with

00:01:37,320 --> 00:01:42,210
OpenGL support but really for almost any

00:01:40,229 --> 00:01:45,119
semi modern hardware that's not a

00:01:42,210 --> 00:01:48,320
problem for further installation

00:01:45,119 --> 00:01:51,659
instructions you can see the link there

00:01:48,320 --> 00:01:53,460
if you want to create a game well the

00:01:51,659 --> 00:01:55,259
first step is to like open up a window

00:01:53,460 --> 00:01:56,790
and you need three lines of code in

00:01:55,259 --> 00:02:03,060
order to be able to do that

00:01:56,790 --> 00:02:05,579
first off import arcade number two call

00:02:03,060 --> 00:02:07,340
the open window function all you need to

00:02:05,579 --> 00:02:10,619
do is give it the width of the window

00:02:07,340 --> 00:02:13,560
the height of the window and a title for

00:02:10,619 --> 00:02:13,860
the window now actually with just these

00:02:13,560 --> 00:02:15,930
two

00:02:13,860 --> 00:02:19,110
lines of code it would open up a window

00:02:15,930 --> 00:02:21,090
but since your programs done it would

00:02:19,110 --> 00:02:23,070
open up a window and then just go away

00:02:21,090 --> 00:02:25,710
really fast you barely be able to see it

00:02:23,070 --> 00:02:27,510
so that's no good we need the third line

00:02:25,710 --> 00:02:29,670
of the code the third line of the code

00:02:27,510 --> 00:02:32,880
will keep the program running until you

00:02:29,670 --> 00:02:34,320
hit the close button that arrow is where

00:02:32,880 --> 00:02:39,120
we're going to eventually start putting

00:02:34,320 --> 00:02:41,820
in some drawing code let's get set up

00:02:39,120 --> 00:02:44,190
for drawing to get set up for drawing we

00:02:41,820 --> 00:02:46,680
need three more lines of code first we

00:02:44,190 --> 00:02:48,390
need to set the background color so when

00:02:46,680 --> 00:02:51,270
the screen gets cleared what color are

00:02:48,390 --> 00:02:54,330
we going to clear it - you can use named

00:02:51,270 --> 00:02:56,489
colors you can also use a tuple and give

00:02:54,330 --> 00:03:00,780
it amount of red green and blue if you

00:02:56,489 --> 00:03:02,610
want an exact color step number two we

00:03:00,780 --> 00:03:05,040
need to tell the screen tell the

00:03:02,610 --> 00:03:06,630
computer to clear the screen - the

00:03:05,040 --> 00:03:09,510
background color and get ready for

00:03:06,630 --> 00:03:12,000
drawing that's the start render command

00:03:09,510 --> 00:03:14,250
all our drawing commands are gonna go

00:03:12,000 --> 00:03:17,370
where that arrow is once we're done

00:03:14,250 --> 00:03:19,680
drawing call finish render that will

00:03:17,370 --> 00:03:21,840
flip the screen and we can see what

00:03:19,680 --> 00:03:23,970
we've actually drawn nothing of what

00:03:21,840 --> 00:03:28,950
we've drawn is actually shown until you

00:03:23,970 --> 00:03:31,260
run finish render okay let's actually

00:03:28,950 --> 00:03:33,690
get something to draw we're gonna create

00:03:31,260 --> 00:03:37,470
something simple like a smiley face we

00:03:33,690 --> 00:03:39,810
need a yellow circle for the face and -

00:03:37,470 --> 00:03:43,560
for the eyes one for the end an arc for

00:03:39,810 --> 00:03:45,930
the mouth fairly straightforward here we

00:03:43,560 --> 00:03:48,450
have the for drawing commands for the

00:03:45,930 --> 00:03:50,940
smiley face I've gone ahead and declared

00:03:48,450 --> 00:03:52,980
variables so that it makes it easier to

00:03:50,940 --> 00:03:55,739
see what I'm actually calling the

00:03:52,980 --> 00:03:57,780
function with but just for the record

00:03:55,739 --> 00:04:00,510
when you declare variables you should

00:03:57,780 --> 00:04:03,000
declare them on their own line not use

00:04:00,510 --> 00:04:04,799
semicolons but it's really hard to get

00:04:03,000 --> 00:04:08,430
all the stuff stuffed onto the slide

00:04:04,799 --> 00:04:10,680
without using semicolons we as three

00:04:08,430 --> 00:04:13,170
draw a circle filled commands one for

00:04:10,680 --> 00:04:15,150
the face two for the eyes the one for

00:04:13,170 --> 00:04:17,880
the face you can see basically we have a

00:04:15,150 --> 00:04:20,100
600 by 600 window so if we draw the face

00:04:17,880 --> 00:04:23,160
at 300 300 we've got our circle in the

00:04:20,100 --> 00:04:27,750
middle of the window and a radius of 200

00:04:23,160 --> 00:04:29,070
pixels we use an arc for the smile

00:04:27,750 --> 00:04:31,110
the Ark is one of the more complex

00:04:29,070 --> 00:04:33,360
drawing commands you can use because you

00:04:31,110 --> 00:04:36,090
need to give a width of the ark a height

00:04:33,360 --> 00:04:38,250
of the ark start angle that you want the

00:04:36,090 --> 00:04:41,220
ark to start at and an end angle that

00:04:38,250 --> 00:04:43,920
you want the ark to end at but that gets

00:04:41,220 --> 00:04:46,230
us our smile and you can see the full

00:04:43,920 --> 00:04:51,510
code for this at the link that's at the

00:04:46,230 --> 00:04:53,130
bottom of the slide there are several

00:04:51,510 --> 00:04:55,860
different drawing commands that are

00:04:53,130 --> 00:04:58,440
available for use in drawing primitive

00:04:55,860 --> 00:05:00,000
shapes you can draw a rectangle several

00:04:58,440 --> 00:05:03,900
different ways depending upon how you

00:05:00,000 --> 00:05:08,520
want to specify the coordinates you can

00:05:03,900 --> 00:05:12,690
also draw arcs ellipses lines polygons

00:05:08,520 --> 00:05:14,190
triangles texts you can rotate any of

00:05:12,690 --> 00:05:18,960
these as well just by adding in a

00:05:14,190 --> 00:05:20,490
rotation parameter textures textures

00:05:18,960 --> 00:05:23,850
allow you to load an image from the disk

00:05:20,490 --> 00:05:26,250
display it on the screen you can look up

00:05:23,850 --> 00:05:29,850
any of the details for these commands

00:05:26,250 --> 00:05:31,850
online at arcade academy and they're

00:05:29,850 --> 00:05:34,620
pretty straightforward to use

00:05:31,850 --> 00:05:36,960
now even with drawing primitives like

00:05:34,620 --> 00:05:39,510
that it's possible to create some pretty

00:05:36,960 --> 00:05:42,060
interesting images these are all images

00:05:39,510 --> 00:05:43,740
from students that I had who are just

00:05:42,060 --> 00:05:47,250
like two weeks into learning how to

00:05:43,740 --> 00:05:49,620
program they basically get experience

00:05:47,250 --> 00:05:53,040
working with variables working with

00:05:49,620 --> 00:05:56,870
numbers coordinate systems calling

00:05:53,040 --> 00:06:00,120
functions looking up documentation and

00:05:56,870 --> 00:06:02,460
it's a great way to start but even for

00:06:00,120 --> 00:06:04,050
expert programmers it's kind of fun just

00:06:02,460 --> 00:06:11,070
be able to easily whip something

00:06:04,050 --> 00:06:14,100
together and create some art ah but wait

00:06:11,070 --> 00:06:16,050
it's way better programming if we take

00:06:14,100 --> 00:06:18,150
our code and put it into functions

00:06:16,050 --> 00:06:20,430
because we don't want to leave our code

00:06:18,150 --> 00:06:22,650
all strewn about in some sort of global

00:06:20,430 --> 00:06:25,500
context we want to put our code in

00:06:22,650 --> 00:06:28,020
functions and we want people to be able

00:06:25,500 --> 00:06:30,540
to look at our image and say hey not

00:06:28,020 --> 00:06:33,000
only is this image good but we're coders

00:06:30,540 --> 00:06:37,770
we want people to say hey that code is

00:06:33,000 --> 00:06:39,990
beautiful too right okay so this is an

00:06:37,770 --> 00:06:41,770
image that I've got that has a couple

00:06:39,990 --> 00:06:43,930
functions one for drawing tree

00:06:41,770 --> 00:06:46,540
one for drying couple birds up there

00:06:43,930 --> 00:06:51,210
let's take a look at the tree drawing

00:06:46,540 --> 00:06:53,380
function this example for drawing a tree

00:06:51,210 --> 00:06:55,390
out of the previous image

00:06:53,380 --> 00:06:59,080
I've got line number up one up here

00:06:55,390 --> 00:07:01,060
defines a draw tree function and this is

00:06:59,080 --> 00:07:04,330
where if you name your code functions

00:07:01,060 --> 00:07:06,490
really well your code becomes self

00:07:04,330 --> 00:07:08,410
documenting even a non programmer can

00:07:06,490 --> 00:07:10,570
look at this and say hey well if the

00:07:08,410 --> 00:07:12,280
function name is called draw a pine tree

00:07:10,570 --> 00:07:13,930
there's a good chance that this has

00:07:12,280 --> 00:07:19,360
something to do with drawing the pine

00:07:13,930 --> 00:07:21,820
tree line number two let's draw a dark

00:07:19,360 --> 00:07:25,990
Treen green triangle for the top of the

00:07:21,820 --> 00:07:28,060
pine tree I need three XY coordinates

00:07:25,990 --> 00:07:31,000
for triangle one for each point in the

00:07:28,060 --> 00:07:34,330
Triangle and eye base where that is on

00:07:31,000 --> 00:07:37,000
the XY that was given on where this tree

00:07:34,330 --> 00:07:40,210
should go so that's the top of it the

00:07:37,000 --> 00:07:43,120
bottom of it is a simple rectangle for

00:07:40,210 --> 00:07:45,460
the brown trunk if you're new to

00:07:43,120 --> 00:07:48,310
programming this is a really good way to

00:07:45,460 --> 00:07:50,830
practice defining functions practice

00:07:48,310 --> 00:07:52,720
taking in parameters all while building

00:07:50,830 --> 00:07:59,350
up a library of different things that

00:07:52,720 --> 00:08:02,710
you can display in some sort of game the

00:07:59,350 --> 00:08:04,210
main function we need basically in order

00:08:02,710 --> 00:08:06,280
to start our game so we've got all the

00:08:04,210 --> 00:08:08,230
drawing functions how do we actually put

00:08:06,280 --> 00:08:10,180
the main part of our code in to a

00:08:08,230 --> 00:08:13,020
function and I've done this on step

00:08:10,180 --> 00:08:19,570
number one I've defined a main function

00:08:13,020 --> 00:08:21,310
step number at the bottom what number

00:08:19,570 --> 00:08:22,630
step number is that I can't see anyway

00:08:21,310 --> 00:08:24,160
step number two at the bottom I think it

00:08:22,630 --> 00:08:26,260
is I'm actually calling the main

00:08:24,160 --> 00:08:28,150
function I don't want to define the main

00:08:26,260 --> 00:08:29,350
function and then like not call it

00:08:28,150 --> 00:08:31,450
because nothing good will come out of

00:08:29,350 --> 00:08:33,640
that or like nothing at all right you

00:08:31,450 --> 00:08:36,120
could just call main with the open

00:08:33,640 --> 00:08:38,920
closed parenthesis that would be fine

00:08:36,120 --> 00:08:42,580
the if statement gives me the ability to

00:08:38,920 --> 00:08:44,950
import this module and not actually run

00:08:42,580 --> 00:08:47,290
the module if you want to keep the if

00:08:44,950 --> 00:08:49,120
statement looking at the middle section

00:08:47,290 --> 00:08:52,060
there and step three I'm calling all my

00:08:49,120 --> 00:08:54,730
functions that draw again good named

00:08:52,060 --> 00:08:55,480
functions a non programmer can look at

00:08:54,730 --> 00:08:59,310
this and have a

00:08:55,480 --> 00:08:59,310
really good idea of what's happening

00:08:59,670 --> 00:09:03,940
okay but if you're an experienced

00:09:02,440 --> 00:09:04,990
graphics programmer in the audience

00:09:03,940 --> 00:09:07,120
you're probably looking at this and

00:09:04,990 --> 00:09:09,760
going wait a minute everything of what

00:09:07,120 --> 00:09:13,120
I've showed you it's actually a really

00:09:09,760 --> 00:09:15,399
slow way of drawing think about it if

00:09:13,120 --> 00:09:17,860
you wanted to draw in a game a

00:09:15,399 --> 00:09:19,630
star-filled of something like with 200

00:09:17,860 --> 00:09:20,110
stars in it so you wanted to draw 200

00:09:19,630 --> 00:09:22,540
stars

00:09:20,110 --> 00:09:26,230
games normally run at like what 60

00:09:22,540 --> 00:09:28,570
frames per second so that means every 60

00:09:26,230 --> 00:09:33,730
times per second you're gonna need to

00:09:28,570 --> 00:09:38,440
draw 200 stars that's 12,000 stars being

00:09:33,730 --> 00:09:40,209
drawn per second it's much faster if I

00:09:38,440 --> 00:09:42,670
take those 200 stars

00:09:40,209 --> 00:09:45,190
load them on to the graphics card and

00:09:42,670 --> 00:09:48,399
then say hey graphics cards those stars

00:09:45,190 --> 00:09:51,459
draw now that takes 12,000 drawing

00:09:48,399 --> 00:09:53,260
commands down to 60 drawing commands our

00:09:51,459 --> 00:09:59,410
Kate supports this as well and it's

00:09:53,260 --> 00:10:01,029
really worth looking into okay we want

00:09:59,410 --> 00:10:03,519
to make our program into more of an

00:10:01,029 --> 00:10:05,380
interactive game we can use classes you

00:10:03,519 --> 00:10:06,670
can also use decorators I just don't

00:10:05,380 --> 00:10:10,180
really have time to cover that in this

00:10:06,670 --> 00:10:13,029
talk if you take on step one per one

00:10:10,180 --> 00:10:15,100
here I've defined my own class I've

00:10:13,029 --> 00:10:18,670
called it my game and I'm deriving it

00:10:15,100 --> 00:10:20,800
from arcades window class then all I

00:10:18,670 --> 00:10:23,800
need to do is override functions that

00:10:20,800 --> 00:10:26,769
are built into the window class add the

00:10:23,800 --> 00:10:29,139
functionality that I want step number

00:10:26,769 --> 00:10:31,480
two I'm adding functionality to the anit

00:10:29,139 --> 00:10:32,889
function so this is well you know with

00:10:31,480 --> 00:10:36,579
any class where you define all your

00:10:32,889 --> 00:10:38,290
instance variables step three in our

00:10:36,579 --> 00:10:39,910
setup method this is where you're going

00:10:38,290 --> 00:10:41,709
to want to create your characters make

00:10:39,910 --> 00:10:44,680
your walls your platforms your

00:10:41,709 --> 00:10:46,779
spaceships your unicorns whatever that's

00:10:44,680 --> 00:10:48,940
where you put that in the setup function

00:10:46,779 --> 00:10:51,910
you don't typically put it in the anit

00:10:48,940 --> 00:10:53,800
function if you put it in the setup

00:10:51,910 --> 00:10:57,220
function if you ever want to later on

00:10:53,800 --> 00:10:59,019
allow the user to restart the game then

00:10:57,220 --> 00:11:05,380
all you need to do is call setup again

00:10:59,019 --> 00:11:08,350
and well your setup step number four all

00:11:05,380 --> 00:11:09,370
the drawing code goes in that particular

00:11:08,350 --> 00:11:11,830
function

00:11:09,370 --> 00:11:14,940
so right after the start render that's

00:11:11,830 --> 00:11:21,400
where we're gonna put our drawing code

00:11:14,940 --> 00:11:23,590
okay continuing on the update function

00:11:21,400 --> 00:11:25,660
is where we put the code to move the

00:11:23,590 --> 00:11:28,930
objects in our game and run another game

00:11:25,660 --> 00:11:31,020
object like logic like detecting

00:11:28,930 --> 00:11:35,940
collisions that type of thing

00:11:31,020 --> 00:11:39,600
it is important keep the game logic code

00:11:35,940 --> 00:11:43,350
separate it from the game drawing code

00:11:39,600 --> 00:11:46,950
we can respond to user input if we want

00:11:43,350 --> 00:11:50,350
by overriding the other functions

00:11:46,950 --> 00:11:54,010
anytime the user hits a key that's item

00:11:50,350 --> 00:11:56,860
- it's called any time the user moves

00:11:54,010 --> 00:11:59,050
the mouse button the on mouse motion

00:11:56,860 --> 00:12:01,630
button is called any time the user

00:11:59,050 --> 00:12:05,350
presses the mouse button the on mouse

00:12:01,630 --> 00:12:07,450
press button is called there's a

00:12:05,350 --> 00:12:09,520
template for getting started with a game

00:12:07,450 --> 00:12:12,580
that's interactive like this it's at the

00:12:09,520 --> 00:12:15,100
URL down at the bottom and you can use

00:12:12,580 --> 00:12:18,520
that to start and basically fill in the

00:12:15,100 --> 00:12:20,020
code that you want to run I should note

00:12:18,520 --> 00:12:21,760
if you haven't seen it before if you're

00:12:20,020 --> 00:12:26,620
new to programming or at least Python

00:12:21,760 --> 00:12:28,930
the past keyword is what we use when we

00:12:26,620 --> 00:12:32,310
need code but we don't actually have

00:12:28,930 --> 00:12:34,780
code so it's really a placeholder and

00:12:32,310 --> 00:12:37,390
basically you end up wanting to remove

00:12:34,780 --> 00:12:40,150
the pass and put in the code that you

00:12:37,390 --> 00:12:41,890
want or if you don't have any code to

00:12:40,150 --> 00:12:43,330
put there just get rid of the function

00:12:41,890 --> 00:12:49,300
but you shouldn't leave pass in your

00:12:43,330 --> 00:12:51,610
final code it's just a placeholder okay

00:12:49,300 --> 00:12:53,500
so I've defined my class I do actually

00:12:51,610 --> 00:12:55,960
need to do something with a class after

00:12:53,500 --> 00:12:59,140
I define it so even for the most complex

00:12:55,960 --> 00:13:01,690
games to get it to run usually use code

00:12:59,140 --> 00:13:06,090
like this I basically define a main

00:13:01,690 --> 00:13:08,800
method create an instance of the class

00:13:06,090 --> 00:13:13,870
call set up and run it

00:13:08,800 --> 00:13:16,870
it's about all there is to it okay

00:13:13,870 --> 00:13:19,690
sprites sprites represent items on the

00:13:16,870 --> 00:13:23,200
screen you can interact with in this

00:13:19,690 --> 00:13:27,250
screenshot every single coin is a sprite

00:13:23,200 --> 00:13:29,860
the player is a sprite we manage sprites

00:13:27,250 --> 00:13:33,160
and lists this makes it easy to detect

00:13:29,860 --> 00:13:36,399
collisions and to update objects on the

00:13:33,160 --> 00:13:37,959
screen now let's go over the code for a

00:13:36,399 --> 00:13:43,149
simple program where the player can move

00:13:37,959 --> 00:13:45,250
around collecting coins it's easy to

00:13:43,149 --> 00:13:47,620
write code to create a sprite section

00:13:45,250 --> 00:13:50,050
one here creates the sprite all we need

00:13:47,620 --> 00:13:52,690
is an image on the disk we give it a

00:13:50,050 --> 00:13:54,699
path to the image on the disk optionally

00:13:52,690 --> 00:13:56,529
we can also give it a scaling factor so

00:13:54,699 --> 00:13:59,250
if the image on the disk is too big or

00:13:56,529 --> 00:14:02,649
too small you can scale it up and down

00:13:59,250 --> 00:14:06,970
section number two positions of sprite

00:14:02,649 --> 00:14:12,970
and three we add the sprite to a sprite

00:14:06,970 --> 00:14:15,310
list sprite lists are really important

00:14:12,970 --> 00:14:17,769
in creating your game there are a lot of

00:14:15,310 --> 00:14:20,949
built-in optimizations underneath the

00:14:17,769 --> 00:14:23,110
hood around the sprite list we use

00:14:20,949 --> 00:14:25,449
things called vertex buffers and texture

00:14:23,110 --> 00:14:26,949
buffers that allow us to turn thousands

00:14:25,449 --> 00:14:29,470
of drawing calls if you have a lot of

00:14:26,949 --> 00:14:31,720
sprites down to one drawing called your

00:14:29,470 --> 00:14:33,640
graphics card it's particularly

00:14:31,720 --> 00:14:36,220
beneficial for any groups of sprites

00:14:33,640 --> 00:14:38,380
that don't move like walls platforms

00:14:36,220 --> 00:14:41,620
that type of thing and you should always

00:14:38,380 --> 00:14:43,630
group sprites into sprites that move and

00:14:41,620 --> 00:14:44,920
sprites that don't move or some other

00:14:43,630 --> 00:14:46,300
grouping but you don't want to group

00:14:44,920 --> 00:14:49,360
sprites that move with sprites that

00:14:46,300 --> 00:14:51,220
don't move you can all see a sprite list

00:14:49,360 --> 00:14:53,050
to detect if one sprite is touching

00:14:51,220 --> 00:14:55,149
another sprite and there are

00:14:53,050 --> 00:14:58,149
optimizations behind that because if you

00:14:55,149 --> 00:15:00,279
think about it if you have a character

00:14:58,149 --> 00:15:01,600
or some other item in a game that's

00:15:00,279 --> 00:15:04,060
moving around and there are a lot of

00:15:01,600 --> 00:15:06,880
walls you could like have a thousand of

00:15:04,060 --> 00:15:09,250
wall sprites that means 60 times per

00:15:06,880 --> 00:15:10,899
second you need to make a thousand

00:15:09,250 --> 00:15:14,290
checks to see if it hits any of those

00:15:10,899 --> 00:15:16,329
walls sprite lists have built in spatial

00:15:14,290 --> 00:15:19,029
hashing so it actually keeps track of

00:15:16,329 --> 00:15:20,740
what sprites are close together so that

00:15:19,029 --> 00:15:24,760
you can take those thousand calls and

00:15:20,740 --> 00:15:27,160
just make a few calls sprites all lists

00:15:24,760 --> 00:15:30,399
also make for easier sprite management

00:15:27,160 --> 00:15:32,199
so that you can basically keep blazars

00:15:30,399 --> 00:15:34,750
separate from walls separate from

00:15:32,199 --> 00:15:37,019
characters coins enemies that type of

00:15:34,750 --> 00:15:37,019
thing

00:15:38,400 --> 00:15:43,690
okay the next bit of code puts the 50

00:15:41,530 --> 00:15:47,440
coin sprites in random positions on the

00:15:43,690 --> 00:15:54,040
screen the loop number one runs 50 times

00:15:47,440 --> 00:15:57,370
and the part number to positions the

00:15:54,040 --> 00:15:59,440
sprite into a random location and we can

00:15:57,370 --> 00:16:02,410
use similar techniques to play sprites

00:15:59,440 --> 00:16:05,470
in like a grid or some other pattern so

00:16:02,410 --> 00:16:10,750
as you can see it's really not too hard

00:16:05,470 --> 00:16:14,440
to do this drawing with sprites is easy

00:16:10,750 --> 00:16:16,510
the ondraw command in my game class just

00:16:14,440 --> 00:16:19,570
looks like this I call start render I

00:16:16,510 --> 00:16:22,060
start going through my sprite lists you

00:16:19,570 --> 00:16:24,700
draw them in a back to front order so in

00:16:22,060 --> 00:16:27,040
this case if I've got a wall and a coin

00:16:24,700 --> 00:16:28,870
in the same place the coin will be drawn

00:16:27,040 --> 00:16:35,350
on top of the wall because I drew the

00:16:28,870 --> 00:16:37,360
wall first sprite collisions you can

00:16:35,350 --> 00:16:39,370
detect if a sprite is hitting another

00:16:37,360 --> 00:16:42,220
sprite easily with the check for

00:16:39,370 --> 00:16:44,370
collision with list function I've given

00:16:42,220 --> 00:16:47,230
it two pieces of information my player

00:16:44,370 --> 00:16:50,050
the list of coin sprites it's going to

00:16:47,230 --> 00:16:53,770
return a list of every single coin I'm

00:16:50,050 --> 00:16:55,510
contacting if any then all I need to do

00:16:53,770 --> 00:16:58,210
is a loop through each coin that I'm

00:16:55,510 --> 00:17:01,330
contacting in this case I call the kill

00:16:58,210 --> 00:17:06,180
command gets rid of the coin and then I

00:17:01,330 --> 00:17:06,180
add one to my score this is easy code

00:17:06,750 --> 00:17:10,960
okay but I haven't yet said how to move

00:17:09,430 --> 00:17:12,820
sprites how do you get sprites to move

00:17:10,960 --> 00:17:14,110
how'd you get a player to move maybe you

00:17:12,820 --> 00:17:18,180
want to spruce up our game and have the

00:17:14,110 --> 00:17:20,860
coins move down something like that well

00:17:18,180 --> 00:17:22,270
before we get into that let's just sort

00:17:20,860 --> 00:17:27,310
of briefly talk about the coordinate

00:17:22,270 --> 00:17:30,070
system if I've got a window 800 wide 600

00:17:27,310 --> 00:17:33,040
tall lower left corner of that window is

00:17:30,070 --> 00:17:36,280
going to be 0 0 upper right corner of

00:17:33,040 --> 00:17:38,800
the windows gonna be 5 99 $7.99

00:17:36,280 --> 00:17:40,420
of course we computer scientists already

00:17:38,800 --> 00:17:43,150
start counting at 0 so there's not

00:17:40,420 --> 00:17:46,840
actually an 800 and 600 at a 800 by 600

00:17:43,150 --> 00:17:48,850
window anyway if the coin falls off the

00:17:46,840 --> 00:17:50,890
screen off the bottom then I know that

00:17:48,850 --> 00:17:52,510
the top y-coordinate

00:17:50,890 --> 00:17:55,840
of that sprite is going to be less than

00:17:52,510 --> 00:17:57,550
zero right so when it falls off the

00:17:55,840 --> 00:17:59,350
bottom I'm going to need logic to

00:17:57,550 --> 00:18:01,300
respawn the coin and I'm going to reap

00:17:59,350 --> 00:18:03,370
put the coin somewhere up above the

00:18:01,300 --> 00:18:05,470
screen so that it can slide back onto

00:18:03,370 --> 00:18:08,110
the screen I'm gonna do that somewhere

00:18:05,470 --> 00:18:10,390
20 to 100 pixels above the screen in

00:18:08,110 --> 00:18:16,090
that top box there then the coin will

00:18:10,390 --> 00:18:18,220
just slide on okay simplest part is

00:18:16,090 --> 00:18:20,050
moving the player moving the player if

00:18:18,220 --> 00:18:23,590
you remember there's a non mouse motion

00:18:20,050 --> 00:18:26,170
function in the window class just take

00:18:23,590 --> 00:18:28,540
the player sprite set its center to

00:18:26,170 --> 00:18:32,830
where the mouse is and and you're done

00:18:28,540 --> 00:18:34,870
that was easy okay the coins are the

00:18:32,830 --> 00:18:37,660
coins aren't quite as easy so in order

00:18:34,870 --> 00:18:40,420
to move the coins I'm going to step one

00:18:37,660 --> 00:18:42,640
create my own custom coin class so I can

00:18:40,420 --> 00:18:45,460
control the movement I'm going to drive

00:18:42,640 --> 00:18:47,620
from arcade sprite class so I get all

00:18:45,460 --> 00:18:51,460
the sprite functionality just need to

00:18:47,620 --> 00:18:53,650
add to it skip down to step four here

00:18:51,460 --> 00:18:55,120
I've got an update function there's an

00:18:53,650 --> 00:18:56,710
update function in the sprite class

00:18:55,120 --> 00:18:58,740
there's an update function for the

00:18:56,710 --> 00:19:01,180
window class this is in the sprite class

00:18:58,740 --> 00:19:03,670
this update function is gonna be called

00:19:01,180 --> 00:19:05,800
60 times per second every time it's

00:19:03,670 --> 00:19:08,290
called I take the y-coordinate subtract

00:19:05,800 --> 00:19:10,600
one so it's 60 frames per second I'm

00:19:08,290 --> 00:19:12,460
gonna move 60 pixels per second want it

00:19:10,600 --> 00:19:14,680
to go faster use a number bigger than

00:19:12,460 --> 00:19:19,780
one want it to go slower use a number

00:19:14,680 --> 00:19:21,970
smaller not too bad skip down our part

00:19:19,780 --> 00:19:22,720
number five basically yeah okay did that

00:19:21,970 --> 00:19:24,130
sorry

00:19:22,720 --> 00:19:28,510
part number six cease if the

00:19:24,130 --> 00:19:31,480
y-coordinate of the top of that sprite

00:19:28,510 --> 00:19:33,400
is less than 0 if the y-coordinate is

00:19:31,480 --> 00:19:36,000
less than 0 it's moved off the bottom of

00:19:33,400 --> 00:19:38,650
the screen I'm gonna reset the position

00:19:36,000 --> 00:19:42,010
that's where we're gonna jump up to part

00:19:38,650 --> 00:19:43,270
two and in part three there we basically

00:19:42,010 --> 00:19:46,330
just run the random number generator

00:19:43,270 --> 00:19:49,750
again giving it a random spot somewhere

00:19:46,330 --> 00:19:51,610
20 to 100 pixels above the height of the

00:19:49,750 --> 00:19:55,990
screen and then it'll eventually slide

00:19:51,610 --> 00:20:00,280
back onto the screen ok we're not done

00:19:55,990 --> 00:20:03,010
yet I've created a coin class I need to

00:20:00,280 --> 00:20:04,790
actually create instances of the coin

00:20:03,010 --> 00:20:07,130
class so back where we

00:20:04,790 --> 00:20:09,950
the 50 coins I need to take out where I

00:20:07,130 --> 00:20:13,100
create arcade sprite cross that out and

00:20:09,950 --> 00:20:14,480
put in my coin class this is actually

00:20:13,100 --> 00:20:15,950
one of the most frequent mistakes I get

00:20:14,480 --> 00:20:17,390
with new programmers they create the

00:20:15,950 --> 00:20:19,100
cool coin class that does everything

00:20:17,390 --> 00:20:20,480
that they want with their enemy and then

00:20:19,100 --> 00:20:24,410
they create something else totally

00:20:20,480 --> 00:20:26,510
different never even use it and the

00:20:24,410 --> 00:20:28,400
sprites still won't move though because

00:20:26,510 --> 00:20:30,140
I need to go back to the update function

00:20:28,400 --> 00:20:32,510
in the window and in the update function

00:20:30,140 --> 00:20:35,260
of the window I need to add part to here

00:20:32,510 --> 00:20:38,030
I need to call update on all the coins

00:20:35,260 --> 00:20:41,120
so I call update on all the coins now

00:20:38,030 --> 00:20:43,490
the coin update methods will run the

00:20:41,120 --> 00:20:48,080
coins will move down and I've got moving

00:20:43,490 --> 00:20:49,610
coins okay that's a dead simple example

00:20:48,080 --> 00:20:56,030
what sort of other things can you do

00:20:49,610 --> 00:20:59,450
with it here I need to start this cool

00:20:56,030 --> 00:21:01,190
okay so you can create platformers this

00:20:59,450 --> 00:21:03,230
should work here there we go

00:21:01,190 --> 00:21:05,420
yeah you can create platformers you can

00:21:03,230 --> 00:21:08,090
create platformers with ramps moving

00:21:05,420 --> 00:21:10,250
platforms there's a PI monk library for

00:21:08,090 --> 00:21:12,530
2d physics really cool to integrate that

00:21:10,250 --> 00:21:17,300
with this so you can do the 2d physics

00:21:12,530 --> 00:21:20,150
and then I had a student first semester

00:21:17,300 --> 00:21:21,920
student create a tower defense game

00:21:20,150 --> 00:21:24,040
which theoretically would come up if the

00:21:21,920 --> 00:21:26,810
Wi-Fi didn't convenient yeah there we go

00:21:24,040 --> 00:21:28,760
this is a really intense game where

00:21:26,810 --> 00:21:30,740
there's all sorts of sprites all sorts

00:21:28,760 --> 00:21:32,450
of explosions you can actually move

00:21:30,740 --> 00:21:36,170
yourself around there and cast spells

00:21:32,450 --> 00:21:37,790
and the Internet of course is not

00:21:36,170 --> 00:21:40,390
working while I'm doing this but anyway

00:21:37,790 --> 00:21:42,590
trust me it's like really cool and

00:21:40,390 --> 00:21:45,410
anyway it was a pretty amazing job you

00:21:42,590 --> 00:21:48,320
can create huge scrolling maps as well

00:21:45,410 --> 00:21:51,020
I've got an example on the later part of

00:21:48,320 --> 00:21:52,730
the video where we're moving around a

00:21:51,020 --> 00:21:55,700
really large procedurally generated

00:21:52,730 --> 00:22:01,100
dungeon with 10,000 wall sprites arcade

00:21:55,700 --> 00:22:03,820
keeps up with it just fine okay one of

00:22:01,100 --> 00:22:08,390
the best ways of learning is not by

00:22:03,820 --> 00:22:11,180
textbook but by example there's a lot of

00:22:08,390 --> 00:22:13,550
example codes all oriented towards

00:22:11,180 --> 00:22:15,050
teaching you particular techniques I've

00:22:13,550 --> 00:22:16,850
taught in terms of programming for like

00:22:15,050 --> 00:22:18,169
10 years now and all sorts of students

00:22:16,850 --> 00:22:19,549
have asked hey how do you

00:22:18,169 --> 00:22:22,190
this hey how do you do this from the

00:22:19,549 --> 00:22:24,049
video games and I've created a library

00:22:22,190 --> 00:22:26,509
that basically shows code samples on how

00:22:24,049 --> 00:22:28,220
to do it so if you want a space invaders

00:22:26,509 --> 00:22:30,619
type game we have somebody at the bottom

00:22:28,220 --> 00:22:32,809
shooting lasers going up example for

00:22:30,619 --> 00:22:35,600
that if you want to aim the bullets

00:22:32,809 --> 00:22:37,489
examples for that if you want to spruce

00:22:35,600 --> 00:22:39,679
up your game and have enemies fire back

00:22:37,489 --> 00:22:41,629
well I've got examples that show you how

00:22:39,679 --> 00:22:45,859
to have the enemies fire back on regular

00:22:41,629 --> 00:22:47,450
intervals random intervals you can

00:22:45,859 --> 00:22:50,509
actually have them aim at the player and

00:22:47,450 --> 00:22:53,299
then of course what good is any type of

00:22:50,509 --> 00:22:56,720
game without explosions so we got to

00:22:53,299 --> 00:22:58,249
show you how to do explosions right if

00:22:56,720 --> 00:23:00,470
you're in more of adventure type game

00:22:58,249 --> 00:23:02,269
I'll show you how to do games where you

00:23:00,470 --> 00:23:04,460
don't move through walls you can have

00:23:02,269 --> 00:23:07,190
players move around you can put coins in

00:23:04,460 --> 00:23:09,619
your game randomly but not on top of

00:23:07,190 --> 00:23:11,179
walls you can do scrolling screen

00:23:09,619 --> 00:23:13,159
scrolling screens are really easy if you

00:23:11,179 --> 00:23:14,480
want a side scroller or top-down where

00:23:13,159 --> 00:23:17,269
you only see part of the world at a time

00:23:14,480 --> 00:23:19,039
not difficult at all you can animate

00:23:17,269 --> 00:23:22,210
sprites kept a little feet to move get

00:23:19,039 --> 00:23:26,509
the coins to spin that type of thing you

00:23:22,210 --> 00:23:30,649
can use a map editor do ramps platforms

00:23:26,509 --> 00:23:32,179
there's a lot you can also besides

00:23:30,649 --> 00:23:35,539
having sprites move down you can have

00:23:32,179 --> 00:23:37,989
them bounce move in circles you can have

00:23:35,539 --> 00:23:41,239
them rotate and I get a little bit into

00:23:37,989 --> 00:23:44,059
procedurally generated mazes which is a

00:23:41,239 --> 00:23:47,539
great way to kind of get a eye on for

00:23:44,059 --> 00:23:49,519
like recursion you end up using

00:23:47,539 --> 00:23:53,029
recursion out of that some cellular

00:23:49,519 --> 00:23:54,739
autonomous for the procedurally

00:23:53,029 --> 00:23:57,100
generated caves anyway it's fun and

00:23:54,739 --> 00:23:58,299
there's a ton of examples out there for

00:23:57,100 --> 00:24:01,509
[Music]

00:23:58,299 --> 00:24:05,059
being able to steal from and make use of

00:24:01,509 --> 00:24:07,249
ok so what's next this is the arcade

00:24:05,059 --> 00:24:07,970
library and there's new things coming

00:24:07,249 --> 00:24:11,239
all the time

00:24:07,970 --> 00:24:14,600
the most recent updates are going to

00:24:11,239 --> 00:24:17,259
include isometric map support so it's

00:24:14,600 --> 00:24:20,929
kind of like the fake 3d version and

00:24:17,259 --> 00:24:22,489
there'll be support for that we do have

00:24:20,929 --> 00:24:24,350
examples on how to use a tiled map

00:24:22,489 --> 00:24:26,690
editor the tiled map editor if you

00:24:24,350 --> 00:24:29,809
haven't used it as a great free resource

00:24:26,690 --> 00:24:31,580
to lay out dungeons online or not online

00:24:29,809 --> 00:24:34,850
but you know you can use a program down

00:24:31,580 --> 00:24:36,170
lay out your dungeons and while there's

00:24:34,850 --> 00:24:38,270
some support for that there's going to

00:24:36,170 --> 00:24:40,460
be really good support pretty soon where

00:24:38,270 --> 00:24:44,390
it'll easily allow you to save and load

00:24:40,460 --> 00:24:47,060
up maps created in that editor in

00:24:44,390 --> 00:24:48,620
addition eventually we plan on adding

00:24:47,060 --> 00:24:51,860
support for better support for

00:24:48,620 --> 00:24:55,190
decorators particles effects and

00:24:51,860 --> 00:25:00,740
lighting and shaders are hopefully on

00:24:55,190 --> 00:25:02,540
tap here soon - I often get people that

00:25:00,740 --> 00:25:04,130
ask me questions how does this compare

00:25:02,540 --> 00:25:06,860
to PI game which is a little bit more

00:25:04,130 --> 00:25:07,610
well known I taught with PI game for a

00:25:06,860 --> 00:25:10,670
really long time

00:25:07,610 --> 00:25:14,840
I love PI game but PI game is really

00:25:10,670 --> 00:25:18,950
aged after a while and I spent time

00:25:14,840 --> 00:25:20,270
teaching some of my efforts around how

00:25:18,950 --> 00:25:21,530
to get around the weird things with PI

00:25:20,270 --> 00:25:23,990
game when I really wanted to teach

00:25:21,530 --> 00:25:26,030
computer science so I've worked really

00:25:23,990 --> 00:25:28,640
hard at everything that I learned out of

00:25:26,030 --> 00:25:30,830
teaching from PI game and I want this

00:25:28,640 --> 00:25:33,110
arcade library I've made it simpler and

00:25:30,830 --> 00:25:35,000
easier to use and tested it with all

00:25:33,110 --> 00:25:36,800
sorts of new programmers to make sure

00:25:35,000 --> 00:25:38,270
that they can get games up and going

00:25:36,800 --> 00:25:41,360
easier than they could with PI game

00:25:38,270 --> 00:25:46,010
which by itself is pretty easy it also

00:25:41,360 --> 00:25:47,660
uses OpenGL rather than an old SD l1

00:25:46,010 --> 00:25:50,720
library that's out of date and nobody

00:25:47,660 --> 00:25:53,960
supports anymore and it uses Python 3

00:25:50,720 --> 00:25:55,670
type hinting decorators you don't have

00:25:53,960 --> 00:26:00,050
to manually create an event loop it just

00:25:55,670 --> 00:26:01,160
promotes better programming if you think

00:26:00,050 --> 00:26:04,420
you might be interested in contributing

00:26:01,160 --> 00:26:06,740
to this the github is there the

00:26:04,420 --> 00:26:10,550
documentation for that website is all

00:26:06,740 --> 00:26:13,010
built the stuff that's in github so if

00:26:10,550 --> 00:26:14,390
you are just new to doing pull requests

00:26:13,010 --> 00:26:16,700
or do you want to do a simple pull

00:26:14,390 --> 00:26:18,440
request for changes like for changing

00:26:16,700 --> 00:26:20,720
grammar something this would be an

00:26:18,440 --> 00:26:24,590
awesome project to get started with and

00:26:20,720 --> 00:26:28,460
doing that there's also an open source

00:26:24,590 --> 00:26:31,730
book available in teaching a person how

00:26:28,460 --> 00:26:33,950
to program from no programming up to

00:26:31,730 --> 00:26:36,290
being able to creat create nested loops

00:26:33,950 --> 00:26:38,630
array backed grids that type of thing

00:26:36,290 --> 00:26:41,560
that's also linked to on the website and

00:26:38,630 --> 00:26:45,560
all the source code for that book is

00:26:41,560 --> 00:26:47,000
also online and I've worked on

00:26:45,560 --> 00:26:49,760
that in some form or fashion for about

00:26:47,000 --> 00:26:51,710
ten years now so if you want to take a

00:26:49,760 --> 00:26:56,900
look at that or suggest contributions

00:26:51,710 --> 00:26:58,730
that would be cool okay and if you want

00:26:56,900 --> 00:27:01,580
to contact me I would love to talk to

00:26:58,730 --> 00:27:03,560
people about Python and get a hold of me

00:27:01,580 --> 00:27:06,590
after the conference send me an email

00:27:03,560 --> 00:27:09,020
send me a tweet go onto the website

00:27:06,590 --> 00:27:11,780
there's also a support group on reddit

00:27:09,020 --> 00:27:14,300
if you do reddit you can go on reddit to

00:27:11,780 --> 00:27:16,730
that particular group ask questions all

00:27:14,300 --> 00:27:19,070
great I would love to hear from you any

00:27:16,730 --> 00:27:21,770
comments criticism suggestions that type

00:27:19,070 --> 00:27:23,810
of thing would be wonderful so that's

00:27:21,770 --> 00:27:27,400
all I've got I don't know if there's

00:27:23,810 --> 00:27:42,050
time for a question or two yes okay cool

00:27:27,400 --> 00:27:43,730
four to three questions hi thanks I was

00:27:42,050 --> 00:27:47,510
really cool can you tell me a little bit

00:27:43,730 --> 00:27:49,070
about distributing and and sort of yeah

00:27:47,510 --> 00:27:51,470
packaging and distributing games for

00:27:49,070 --> 00:27:54,950
others to play with this library oh boy

00:27:51,470 --> 00:27:57,020
I wish I could it's not good the end

00:27:54,950 --> 00:27:59,510
result it's not easy to do I'm not gonna

00:27:57,020 --> 00:28:02,930
lie with that you would really need to

00:27:59,510 --> 00:28:05,270
put Python in one directory the game in

00:28:02,930 --> 00:28:06,920
another directory and create a file to

00:28:05,270 --> 00:28:09,380
start it it's really the only way I know

00:28:06,920 --> 00:28:14,060
see X freeze and those types of tools

00:28:09,380 --> 00:28:17,000
I've not tried myself I saw that you

00:28:14,060 --> 00:28:19,670
were doing a lot of work using the

00:28:17,000 --> 00:28:23,020
actual pixel location do you handle

00:28:19,670 --> 00:28:25,970
scaling for a high-resolution displays

00:28:23,020 --> 00:28:29,150
yeah actually it's since it's all OpenGL

00:28:25,970 --> 00:28:31,430
you can actually easily use OpenGL to

00:28:29,150 --> 00:28:32,900
scale the display up and down all you

00:28:31,430 --> 00:28:34,760
need to do is set the viewport to

00:28:32,900 --> 00:28:37,400
something other than pixel by pixel

00:28:34,760 --> 00:28:43,640
resolution so you could scale it up or

00:28:37,400 --> 00:28:46,070
down that way rather easily so I do the

00:28:43,640 --> 00:28:49,160
hour of code at my daughter's elementary

00:28:46,070 --> 00:28:51,620
school and one of the challenges is that

00:28:49,160 --> 00:28:53,510
they're all in Google classroom and the

00:28:51,620 --> 00:28:56,090
systems administrators lock down all

00:28:53,510 --> 00:28:59,180
their computers they can't actually load

00:28:56,090 --> 00:29:03,320
the Python interpreter so I'm wondering

00:28:59,180 --> 00:29:05,180
you seen solutions to this where you

00:29:03,320 --> 00:29:06,680
have you can run the Python in an

00:29:05,180 --> 00:29:08,840
interpreter on the on the cloud for

00:29:06,680 --> 00:29:11,600
example for kids like a safe space for

00:29:08,840 --> 00:29:12,920
kids to run Python yeah unfortunately I

00:29:11,600 --> 00:29:14,390
don't think this would be a good

00:29:12,920 --> 00:29:16,910
solution for that particularly the

00:29:14,390 --> 00:29:19,310
OpenGL requirements and the graphics

00:29:16,910 --> 00:29:21,770
this would not probably work well at all

00:29:19,310 --> 00:29:23,330
i would i haven't recently tried running

00:29:21,770 --> 00:29:24,650
this on her as berry pie I would almost

00:29:23,330 --> 00:29:26,990
kind of wonder if something like that

00:29:24,650 --> 00:29:28,610
would make it possible to do cheap

00:29:26,990 --> 00:29:31,700
computers where people could have their

00:29:28,610 --> 00:29:32,870
own separate item but for running it in

00:29:31,700 --> 00:29:34,880
the cloud I really don't know of a

00:29:32,870 --> 00:29:41,450
solution particularly with this thank

00:29:34,880 --> 00:29:42,650
you look so like all the questions thank

00:29:41,450 --> 00:29:43,230
you so much for a great talk thank you

00:29:42,650 --> 00:29:47,190
very much

00:29:43,230 --> 00:29:47,190

YouTube URL: https://www.youtube.com/watch?v=DAWHMHMPVHU


