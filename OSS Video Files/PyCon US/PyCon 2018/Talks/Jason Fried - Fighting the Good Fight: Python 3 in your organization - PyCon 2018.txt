Title: Jason Fried - Fighting the Good Fight: Python 3 in your organization - PyCon 2018
Publication date: 2018-08-06
Playlist: Talks
Description: 
	Speaker: Jason Fried

Today, services built on Python 3.6.3 are widely used at Facebook. But as recently as May of 2014 it was actually impossible at all to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 while older Python 2 projects are actively migrated to Python 3. All accomplished by a small group of individual contributors in their spare time. Learn to fight the good fight and upgrade your organization to Python 3 like we did at Facebook.

Slides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides
Captions: 
	00:00:09,380 --> 00:00:14,639
hi welcome we're gonna get we're gonna

00:00:12,690 --> 00:00:16,760
get started here

00:00:14,639 --> 00:00:19,800
welcome to fighting the good fight

00:00:16,760 --> 00:00:22,080
Python 3 in your organization and the

00:00:19,800 --> 00:00:24,750
scrimpy talk from Jason freed who heads

00:00:22,080 --> 00:00:27,930
up the Python foundation team at

00:00:24,750 --> 00:00:31,230
Facebook and especially given the

00:00:27,930 --> 00:00:33,270
virtual end of term for Python to

00:00:31,230 --> 00:00:33,960
upcoming it's probably a pretty pretty

00:00:33,270 --> 00:00:36,840
prescient

00:00:33,960 --> 00:00:44,399
discussion topic so with that welcome

00:00:36,840 --> 00:00:46,230
Jason thank you hello my name is Jason

00:00:44,399 --> 00:00:48,360
freed and I'm reproductions near

00:00:46,230 --> 00:00:51,230
Facebook like he said I started working

00:00:48,360 --> 00:00:53,579
at Facebook on Halloween of 2013 and

00:00:51,230 --> 00:00:55,800
quickly after I started I had to teach

00:00:53,579 --> 00:00:59,399
myself Python because it was more

00:00:55,800 --> 00:01:02,579
socially acceptable than the Perl that I

00:00:59,399 --> 00:01:04,019
knew and since I had work to do and it

00:01:02,579 --> 00:01:06,840
was easy to get code reviewed if it was

00:01:04,019 --> 00:01:08,909
written in Python and Python was the

00:01:06,840 --> 00:01:10,170
only thing my first team really knew so

00:01:08,909 --> 00:01:14,159
if I sent them to other things they just

00:01:10,170 --> 00:01:16,259
don't know how to review it so later at

00:01:14,159 --> 00:01:18,780
some point I somehow became the driving

00:01:16,259 --> 00:01:20,820
force for Python 3 adoption at Facebook

00:01:18,780 --> 00:01:22,890
and I won't lie and said I did it I had

00:01:20,820 --> 00:01:25,380
a plan all along or I did it all alone

00:01:22,890 --> 00:01:27,479
but I was the primary driver and in the

00:01:25,380 --> 00:01:34,079
beginning all I ever wanted and all I

00:01:27,479 --> 00:01:35,490
ever needed is nice things so I kind of

00:01:34,079 --> 00:01:38,729
got started by helping out in the

00:01:35,490 --> 00:01:40,290
internal FP Python group and it was at

00:01:38,729 --> 00:01:41,820
first I was like usually the first guy

00:01:40,290 --> 00:01:44,430
to answer questions for for people

00:01:41,820 --> 00:01:46,710
asking coding questions and I kind of

00:01:44,430 --> 00:01:49,079
became famous or maybe infamous among

00:01:46,710 --> 00:01:50,700
the Python aces at Facebook when I saw

00:01:49,079 --> 00:01:51,390
issues or places where we were doing the

00:01:50,700 --> 00:01:54,240
wrong thing

00:01:51,390 --> 00:01:58,979
I didn't ask permission I just fixed it

00:01:54,240 --> 00:02:01,110
and you see I kind of built up this this

00:01:58,979 --> 00:02:03,210
over time people started to accept my

00:02:01,110 --> 00:02:05,490
expertise and this helped build

00:02:03,210 --> 00:02:05,729
credibility internally for what was to

00:02:05,490 --> 00:02:08,489
come

00:02:05,729 --> 00:02:10,800
so you see for code at Facebook it's not

00:02:08,489 --> 00:02:13,650
a top-down hierarchy of like control

00:02:10,800 --> 00:02:15,390
it's more of a meritocracy

00:02:13,650 --> 00:02:17,790
engineers of their ideas you have to

00:02:15,390 --> 00:02:20,280
convince your fellow engineers that your

00:02:17,790 --> 00:02:22,860
merits of the merits of your ideas and

00:02:20,280 --> 00:02:25,230
they have value because the power that

00:02:22,860 --> 00:02:27,269
they have everybody at Facebook as an

00:02:25,230 --> 00:02:30,470
engineer has just as much power to undo

00:02:27,269 --> 00:02:32,519
a change as you did to make that change

00:02:30,470 --> 00:02:34,650
this really worked well for me because

00:02:32,519 --> 00:02:37,829
I'm a nobody and I could step in and

00:02:34,650 --> 00:02:39,450
actually start making differences so

00:02:37,829 --> 00:02:41,220
changing something big at Facebook's

00:02:39,450 --> 00:02:44,159
scale is going to take some time and a

00:02:41,220 --> 00:02:45,750
lot of diplomacy checks so let me tell

00:02:44,159 --> 00:02:47,609
you the story about how I and a couple

00:02:45,750 --> 00:02:49,799
of engineers use our free time with no

00:02:47,609 --> 00:02:51,030
authority whatsoever made Python three

00:02:49,799 --> 00:02:55,170
of the dominant Python version of

00:02:51,030 --> 00:02:57,060
Facebook so in 2013 at the same time as

00:02:55,170 --> 00:02:59,220
we were getting access to Python to

00:02:57,060 --> 00:03:02,849
seven we were getting access to Python 3

00:02:59,220 --> 00:03:04,889
3 it was as part of a task to add Python

00:03:02,849 --> 00:03:08,730
3 support to the build system but that

00:03:04,889 --> 00:03:11,069
task had been blocked since 2012 and

00:03:08,730 --> 00:03:12,870
what it was blocked on was for there to

00:03:11,069 --> 00:03:15,510
be Python 3 support in the internal

00:03:12,870 --> 00:03:17,099
libraries which didn't because that was

00:03:15,510 --> 00:03:18,930
blocked on having Python 3 support in

00:03:17,099 --> 00:03:20,430
the build system a lot of a catch-22

00:03:18,930 --> 00:03:23,970
there where we were going

00:03:20,430 --> 00:03:25,980
so sure we had Python 3 3 was in our it

00:03:23,970 --> 00:03:27,000
was in our environment it was there but

00:03:25,980 --> 00:03:28,410
it was like you installing it on your

00:03:27,000 --> 00:03:30,780
laptop and saying okay I've grade to

00:03:28,410 --> 00:03:32,489
fight them three but sir we had access

00:03:30,780 --> 00:03:36,030
to it but was really theoretical nothing

00:03:32,489 --> 00:03:38,400
internally had support for Python 3 it

00:03:36,030 --> 00:03:41,129
also didn't help that at the time the

00:03:38,400 --> 00:03:44,669
the opinion of Python 3 at Facebook by

00:03:41,129 --> 00:03:45,840
the engineers was very negative most

00:03:44,669 --> 00:03:47,549
people in the company were either

00:03:45,840 --> 00:03:50,579
thinking hey we'll just stay on Python 2

00:03:47,549 --> 00:03:52,949
7 forever and some even talked about

00:03:50,579 --> 00:03:55,650
jumping ship completely to a different

00:03:52,949 --> 00:04:00,949
language and even I was not a fan of

00:03:55,650 --> 00:04:04,500
Python 3 I said this once in a in a

00:04:00,949 --> 00:04:06,930
discussion group and in my defense it

00:04:04,500 --> 00:04:08,790
did look pretty bleak in 2013 that we

00:04:06,930 --> 00:04:12,180
would ever be able to run Python 3 in

00:04:08,790 --> 00:04:14,190
production well at the time only one

00:04:12,180 --> 00:04:15,930
person called me out on that statement

00:04:14,190 --> 00:04:18,750
and challenged me to do something about

00:04:15,930 --> 00:04:20,039
it I didn't at first think maybe I

00:04:18,750 --> 00:04:23,669
should do something that was like a blow

00:04:20,039 --> 00:04:25,740
him off but I did stick in my head see I

00:04:23,669 --> 00:04:28,050
met it was pretty dark back then

00:04:25,740 --> 00:04:29,520
and but some things were changing there

00:04:28,050 --> 00:04:33,330
was a light at the end of the tunnel and

00:04:29,520 --> 00:04:36,180
it wasn't an oncoming train see in early

00:04:33,330 --> 00:04:39,569
2013 a linter was put in place that

00:04:36,180 --> 00:04:40,710
required the four infamous imports some

00:04:39,569 --> 00:04:43,289
people hate them some people love them

00:04:40,710 --> 00:04:46,500
but we these were added an attempt to

00:04:43,289 --> 00:04:47,759
extend the life of our Python 2 code so

00:04:46,500 --> 00:04:48,930
that we could still keep writing Python

00:04:47,759 --> 00:04:51,539
2 code and maybe it would still be

00:04:48,930 --> 00:04:53,729
compatible in the future but because we

00:04:51,539 --> 00:04:55,919
did this people use these everywhere at

00:04:53,729 --> 00:04:57,180
Facebook and they were just required to

00:04:55,919 --> 00:04:58,889
linter the url' engine you could knocked

00:04:57,180 --> 00:05:01,620
out of and you just did it to make the

00:04:58,889 --> 00:05:03,870
winter happy and we had to tackle all of

00:05:01,620 --> 00:05:05,340
our Unicode issues very early I'm sure

00:05:03,870 --> 00:05:07,199
we introduced a lot of other issues like

00:05:05,340 --> 00:05:09,599
we wrote functions that accepted bytes

00:05:07,199 --> 00:05:12,539
or Unicode or we used face string for

00:05:09,599 --> 00:05:14,520
his instance checking but for the most

00:05:12,539 --> 00:05:16,319
part these imports would make it easier

00:05:14,520 --> 00:05:19,819
in the future to convert those modules

00:05:16,319 --> 00:05:23,190
to Python 3 this leads us to thrift

00:05:19,819 --> 00:05:25,050
Apache thrift is a is a remote procedure

00:05:23,190 --> 00:05:27,569
call and serialization framework and

00:05:25,050 --> 00:05:29,370
it's how at face book services talk to

00:05:27,569 --> 00:05:31,259
each other and it is one thing that's

00:05:29,370 --> 00:05:33,659
ubiquitous at Facebook it's used

00:05:31,259 --> 00:05:35,580
everywhere and without support of thrift

00:05:33,659 --> 00:05:38,880
you could not go to Python 3 and it is

00:05:35,580 --> 00:05:40,289
one of those core blockers and it would

00:05:38,880 --> 00:05:43,949
stand under way so we had to tackle that

00:05:40,289 --> 00:05:45,900
early C in October 23rd the FB thrift

00:05:43,949 --> 00:05:47,490
team put up a poll for feature requests

00:05:45,900 --> 00:05:49,050
and they're like we're gonna change

00:05:47,490 --> 00:05:51,120
thrift what should we do and they put

00:05:49,050 --> 00:05:53,580
Python 3 is one of the arguments on the

00:05:51,120 --> 00:05:55,590
poll and strange enough it was popular

00:05:53,580 --> 00:05:57,719
in a company that hated Python 3 weird

00:05:55,590 --> 00:05:59,460
enough I voted for it because I thought

00:05:57,719 --> 00:06:02,460
the thrift pythor that I thought the

00:05:59,460 --> 00:06:04,110
thrift Python to like ecosystem really

00:06:02,460 --> 00:06:07,199
needed a good refactor it looked like he

00:06:04,110 --> 00:06:08,610
didn't come through Java so I wasn't on

00:06:07,199 --> 00:06:10,319
board with the PI through Python 3

00:06:08,610 --> 00:06:14,280
bandwagon but I did I voted for it but

00:06:10,319 --> 00:06:15,930
this was until October 16th of 2013 when

00:06:14,280 --> 00:06:18,330
Guido gave a talk at Yelp in San

00:06:15,930 --> 00:06:19,919
Francisco about tulip which would later

00:06:18,330 --> 00:06:22,560
become async i/o that you all know today

00:06:19,919 --> 00:06:25,259
I was already a fan of async programming

00:06:22,560 --> 00:06:27,659
in Python 2 but back then it was a very

00:06:25,259 --> 00:06:29,550
diverse and split up thing you you you

00:06:27,659 --> 00:06:30,599
couldn't just give you a library and

00:06:29,550 --> 00:06:32,789
people wouldn't run it like oh I'm

00:06:30,599 --> 00:06:35,880
running tornado you're doing twisted I'm

00:06:32,789 --> 00:06:38,070
sorry we can't talk but async i/o in my

00:06:35,880 --> 00:06:39,659
head open up this magical future where

00:06:38,070 --> 00:06:43,080
different async iframe

00:06:39,659 --> 00:06:46,020
could have interoperability and we could

00:06:43,080 --> 00:06:48,330
be free again so before the talk was

00:06:46,020 --> 00:06:50,699
even over I fiercely typing on my phone

00:06:48,330 --> 00:06:53,300
to the the thrift team at Facebook

00:06:50,699 --> 00:06:55,050
saying hey we need to support tulip now

00:06:53,300 --> 00:06:56,639
instead of have because they were like

00:06:55,050 --> 00:06:58,439
oh we can't do Python 3 support cuz we

00:06:56,639 --> 00:07:00,960
have to wait till Twisted gets Python 3

00:06:58,439 --> 00:07:03,000
support and G of n gets Python 3 Stroh's

00:07:00,960 --> 00:07:04,860
like no list of support tulip now and

00:07:03,000 --> 00:07:07,159
not bother with twistier Python 3

00:07:04,860 --> 00:07:09,090
because in the future it won't matter

00:07:07,159 --> 00:07:13,379
they can enter it will have

00:07:09,090 --> 00:07:15,180
interoperability so that said the thrift

00:07:13,379 --> 00:07:16,830
team would only have to support one a

00:07:15,180 --> 00:07:18,569
sync frame work and it would relieve

00:07:16,830 --> 00:07:20,789
some stress from their suicide after

00:07:18,569 --> 00:07:23,819
Guido gave the talk I was so pumped

00:07:20,789 --> 00:07:26,039
about the future of Python 3 and I was

00:07:23,819 --> 00:07:28,169
sold on Python 3 at that point and on

00:07:26,039 --> 00:07:31,020
October 19 three days later the thrift

00:07:28,169 --> 00:07:36,379
team put up a project roadmap and it

00:07:31,020 --> 00:07:39,060
included pythons support with tulip so

00:07:36,379 --> 00:07:41,159
back to the timeline of change in 2013

00:07:39,060 --> 00:07:42,810
it was all still pretty hopeless the

00:07:41,159 --> 00:07:46,050
idea that we would ship Python 3 to

00:07:42,810 --> 00:07:50,370
services to production was laughable if

00:07:46,050 --> 00:07:52,650
I wasn't so if I wanted to live to be a

00:07:50,370 --> 00:07:55,199
thing at face book and by extension

00:07:52,650 --> 00:07:57,330
Python 3 I would have to make sure that

00:07:55,199 --> 00:08:00,210
Python 3 was at least possible to use

00:07:57,330 --> 00:08:02,159
and Python users would hopefully just

00:08:00,210 --> 00:08:04,289
manifest if there was infrastructure to

00:08:02,159 --> 00:08:06,180
support them so I aided the FB thrift

00:08:04,289 --> 00:08:08,849
team with code reviews and porting help

00:08:06,180 --> 00:08:11,250
and by February 3rd of 2014 they shipped

00:08:08,849 --> 00:08:12,779
Python 3 support and thrift and then

00:08:11,250 --> 00:08:18,509
shortly after they actually shipped

00:08:12,779 --> 00:08:19,889
Tulip support awesome well not so fast

00:08:18,509 --> 00:08:23,460
for 6 months

00:08:19,889 --> 00:08:24,180
this support laid unused in our

00:08:23,460 --> 00:08:26,460
infrastructure

00:08:24,180 --> 00:08:28,020
nobody showed up we built the

00:08:26,460 --> 00:08:30,240
infrastructure and it was just sitting

00:08:28,020 --> 00:08:32,659
there it was like these cities in China

00:08:30,240 --> 00:08:34,680
that they built during expansive

00:08:32,659 --> 00:08:35,789
urbanization economic growth but they

00:08:34,680 --> 00:08:37,440
were left abandoned because they were

00:08:35,789 --> 00:08:41,159
waiting for all the rural inhabitants to

00:08:37,440 --> 00:08:43,019
move in so the users did not show up

00:08:41,159 --> 00:08:45,000
they didn't have plans to show up they

00:08:43,019 --> 00:08:48,589
didn't even know this thing existed they

00:08:45,000 --> 00:08:53,130
didn't care this was all about to change

00:08:48,589 --> 00:08:56,130
in August of 2014 I started a project

00:08:53,130 --> 00:08:58,050
to rewrite the infrastructure service

00:08:56,130 --> 00:09:00,990
that I had become the misfortune and

00:08:58,050 --> 00:09:03,630
owner of see it was the service was to

00:09:00,990 --> 00:09:06,900
distribute facebook.com/ and it was old

00:09:03,630 --> 00:09:10,080
and it was tired and it was complicated

00:09:06,900 --> 00:09:11,550
and really hard to maintain and so I

00:09:10,080 --> 00:09:13,650
decided I was gonna write the project

00:09:11,550 --> 00:09:15,720
was basically we're gonna completely

00:09:13,650 --> 00:09:17,880
rewrite it from the ground up we're

00:09:15,720 --> 00:09:20,040
using a modern infrastructure modern

00:09:17,880 --> 00:09:21,870
best practices encoding and I wanted the

00:09:20,040 --> 00:09:23,640
service to last for many years to come

00:09:21,870 --> 00:09:25,830
free from the crushing technical debt of

00:09:23,640 --> 00:09:30,030
its predecessor and I was gonna write it

00:09:25,830 --> 00:09:32,330
all in Python to ng of it well I kind of

00:09:30,030 --> 00:09:35,040
sat there it was like what am i doing

00:09:32,330 --> 00:09:37,260
it's like if it dawned on me that if I

00:09:35,040 --> 00:09:39,720
wrote this service in Python 2 it would

00:09:37,260 --> 00:09:43,050
be obsolete the moment I started writing

00:09:39,720 --> 00:09:45,480
it it would I would be baking into a

00:09:43,050 --> 00:09:47,010
technical debt that had that somebody at

00:09:45,480 --> 00:09:49,710
some future time would have to convert

00:09:47,010 --> 00:09:51,990
it to Python 3 and that bothered me

00:09:49,710 --> 00:09:54,090
because in my head the Python 3 future

00:09:51,990 --> 00:09:56,420
wasn't very far away I was pumped I was

00:09:54,090 --> 00:09:59,130
excited I believed it was there close

00:09:56,420 --> 00:10:02,520
through this I discovered change won't

00:09:59,130 --> 00:10:05,520
happen by itself somebody has to be the

00:10:02,520 --> 00:10:08,130
first one to make the change and for

00:10:05,520 --> 00:10:10,110
Facebook and Python 3 that person was

00:10:08,130 --> 00:10:11,490
going to meet me and for Python 3 in

00:10:10,110 --> 00:10:16,770
your organization I think that person

00:10:11,490 --> 00:10:18,480
should be you in the words mr. tribute

00:10:16,770 --> 00:10:21,270
to Gandhi the most be the change you

00:10:18,480 --> 00:10:23,250
want to see if I wanted Python 3 to be a

00:10:21,270 --> 00:10:25,530
thing at Facebook I would have to be

00:10:23,250 --> 00:10:28,530
that change so I started my project in

00:10:25,530 --> 00:10:29,270
Python 3 and of course everything was

00:10:28,530 --> 00:10:32,040
broken

00:10:29,270 --> 00:10:32,970
no wonder nobody was using Python 3 yet

00:10:32,040 --> 00:10:34,920
at Facebook so when I wrote my

00:10:32,970 --> 00:10:37,080
buildconfig for like an entry point the

00:10:34,920 --> 00:10:39,030
build system would give me it wouldn't

00:10:37,080 --> 00:10:40,740
even build the build system treated

00:10:39,030 --> 00:10:44,040
Python 3 like it was just a brand-new

00:10:40,740 --> 00:10:46,680
version of Python 2 7 the dependency

00:10:44,040 --> 00:10:48,360
trees refused to resolve although our

00:10:46,680 --> 00:10:50,610
third party wheel dependencies were only

00:10:48,360 --> 00:10:53,250
for Typhon two were only built against

00:10:50,610 --> 00:10:55,350
Python 2 and the thrift support that

00:10:53,250 --> 00:10:57,150
we'd landed those six months earlier was

00:10:55,350 --> 00:10:58,440
completely broken by Python 2 only

00:10:57,150 --> 00:11:01,470
regressions that have happened in that

00:10:58,440 --> 00:11:03,690
time span and we had a lot of these swig

00:11:01,470 --> 00:11:05,280
and boost wrappers around C++ that were

00:11:03,690 --> 00:11:06,810
broken and some one were still broken

00:11:05,280 --> 00:11:09,690
around handling of bye

00:11:06,810 --> 00:11:11,430
very data for Python 3 when I resolved

00:11:09,690 --> 00:11:13,950
enough of these issues to finally get my

00:11:11,430 --> 00:11:15,150
system to build so I could run it it

00:11:13,950 --> 00:11:18,630
immediately threw an exception at

00:11:15,150 --> 00:11:20,610
runtime and it wasn't even in my code it

00:11:18,630 --> 00:11:24,620
was deep down in the machinery that

00:11:20,610 --> 00:11:28,080
makes our entry points work at Facebook

00:11:24,620 --> 00:11:28,529
so this is why we really can't have nice

00:11:28,080 --> 00:11:30,060
things

00:11:28,529 --> 00:11:34,230
maybe the light at the end of the tunnel

00:11:30,060 --> 00:11:36,390
was a train after all but so while I was

00:11:34,230 --> 00:11:38,580
writing my project I was having to fix

00:11:36,390 --> 00:11:39,300
the world at least what I needed for

00:11:38,580 --> 00:11:41,100
Python 3

00:11:39,300 --> 00:11:43,440
I had to rebuild hundreds of third-party

00:11:41,100 --> 00:11:46,020
wheels to say that they were both 2 and

00:11:43,440 --> 00:11:48,000
3 in our build system and I had every

00:11:46,020 --> 00:11:49,920
time I need an internal library I had to

00:11:48,000 --> 00:11:54,420
do the work myself to turn it in a 2/3

00:11:49,920 --> 00:11:57,360
polyglot but there was a problem every

00:11:54,420 --> 00:11:58,860
day somebody would commit a change that

00:11:57,360 --> 00:12:00,390
would break me they would commit a

00:11:58,860 --> 00:12:02,910
Python to only regression into one of my

00:12:00,390 --> 00:12:04,140
dependencies or they would upgrade one

00:12:02,910 --> 00:12:06,060
of the versions of a third party wheel

00:12:04,140 --> 00:12:07,470
and they would only release a Python to

00:12:06,060 --> 00:12:10,740
version because they don't know about

00:12:07,470 --> 00:12:13,410
Python 3 so I became really tired of

00:12:10,740 --> 00:12:16,380
fighting regressions and I found that

00:12:13,410 --> 00:12:18,810
most of these regressions were while

00:12:16,380 --> 00:12:20,760
valid Python 2 code where were simple

00:12:18,810 --> 00:12:22,350
errors in Python 3 something that we

00:12:20,760 --> 00:12:24,900
could catch with a winter-like name

00:12:22,350 --> 00:12:27,780
errors or syntax errors that you could

00:12:24,900 --> 00:12:29,640
just fix if you knew they were there so

00:12:27,780 --> 00:12:31,500
I had to force a little bit of

00:12:29,640 --> 00:12:33,000
compliance now I said before Facebook is

00:12:31,500 --> 00:12:34,350
not the organization where you can force

00:12:33,000 --> 00:12:37,530
things you don't have that kind of power

00:12:34,350 --> 00:12:40,770
people just fun force them but if you do

00:12:37,530 --> 00:12:42,420
it the right way you know you can from

00:12:40,770 --> 00:12:46,170
the bottom up change the whole world

00:12:42,420 --> 00:12:47,700
well sometimes we engineers we can force

00:12:46,170 --> 00:12:49,800
that compliance if you if you do it just

00:12:47,700 --> 00:12:51,480
right so I learned quickly if you acted

00:12:49,800 --> 00:12:54,860
with Authority people would sometimes

00:12:51,480 --> 00:12:54,860
assume that you had that authority

00:12:55,780 --> 00:13:00,290
well I think I used up a good portion of

00:12:58,130 --> 00:13:02,840
my social capital in 2014 because I in

00:13:00,290 --> 00:13:05,690
late August I instituted an automatic hi

00:13:02,840 --> 00:13:08,000
flakes lender I'm not sure why I picked

00:13:05,690 --> 00:13:10,070
pipe flakes over flake 8 I think because

00:13:08,000 --> 00:13:11,720
we already had a pet bait winter but it

00:13:10,070 --> 00:13:13,220
was a good choice at the time because it

00:13:11,720 --> 00:13:15,320
didn't have a lot of false positives and

00:13:13,220 --> 00:13:17,150
I could I could justify its existence

00:13:15,320 --> 00:13:18,890
because we already had a pet bait winter

00:13:17,150 --> 00:13:22,940
and we all had the four the four lenders

00:13:18,890 --> 00:13:25,130
for import lenders for imports future

00:13:22,940 --> 00:13:26,810
import cylinder so there was I could say

00:13:25,130 --> 00:13:27,920
this is for code quality guys we're

00:13:26,810 --> 00:13:29,300
doing this or coke quality people like

00:13:27,920 --> 00:13:31,070
oh yeah that makes good sense

00:13:29,300 --> 00:13:33,290
well secretly I was doing it so it's not

00:13:31,070 --> 00:13:35,570
breaking Python 3 so what I did is I

00:13:33,290 --> 00:13:37,070
made sure that that PI flakes would run

00:13:35,570 --> 00:13:39,170
every time you put code up for review

00:13:37,070 --> 00:13:40,700
and it would run first in Python 2 and

00:13:39,170 --> 00:13:45,710
then it would run in python 3 and show

00:13:40,700 --> 00:13:48,380
you the errors for both so this would

00:13:45,710 --> 00:13:50,930
basically in effect cause people at PI a

00:13:48,380 --> 00:13:52,940
face book to write Python 3 code well at

00:13:50,930 --> 00:13:54,230
least sort of this allowed me to

00:13:52,940 --> 00:13:56,360
distribute the job of preventing

00:13:54,230 --> 00:14:00,740
regressions so that I can actually work

00:13:56,360 --> 00:14:03,560
on my project so linting is not a

00:14:00,740 --> 00:14:07,430
perfect science you really need unit

00:14:03,560 --> 00:14:08,570
tests so for most of the libraries that

00:14:07,430 --> 00:14:11,540
internally that I was going and I was

00:14:08,570 --> 00:14:13,040
converting for polyglot I would come

00:14:11,540 --> 00:14:15,140
behind them and I would say oh your

00:14:13,040 --> 00:14:17,330
config for unit tests also run under

00:14:15,140 --> 00:14:18,830
Python 3 they didn't know but I would

00:14:17,330 --> 00:14:20,000
just do it so that in the future they're

00:14:18,830 --> 00:14:21,890
maintainer z' would see that when they

00:14:20,000 --> 00:14:23,390
would try to commit new code that they

00:14:21,890 --> 00:14:25,850
would break these unit tests they didn't

00:14:23,390 --> 00:14:27,500
previously see and it turned out that

00:14:25,850 --> 00:14:29,180
they would fix them instead of

00:14:27,500 --> 00:14:31,220
committing it and if this was a much

00:14:29,180 --> 00:14:33,470
easier way than trying to issue a task

00:14:31,220 --> 00:14:36,800
to say hey you do had a regression fix

00:14:33,470 --> 00:14:39,620
it after the fact and it wasn't always

00:14:36,800 --> 00:14:41,420
easy for people to be compliant I had to

00:14:39,620 --> 00:14:43,130
be very responsive in the early days I

00:14:41,420 --> 00:14:46,970
was spent a ton of time ton of time

00:14:43,130 --> 00:14:48,500
going into code reviews and basically

00:14:46,970 --> 00:14:51,080
explained to people know the linters not

00:14:48,500 --> 00:14:53,690
wrong this is actually a problem in

00:14:51,080 --> 00:14:56,300
Python 3 and why they should care and

00:14:53,690 --> 00:14:59,090
because if people thought converting to

00:14:56,300 --> 00:15:01,400
Python 3 was hard it seemed hard they

00:14:59,090 --> 00:15:04,130
would not bother they would just regress

00:15:01,400 --> 00:15:06,860
to the let's stay in Python 3 forever or

00:15:04,130 --> 00:15:08,540
Python 2 forever mindset and so I ended

00:15:06,860 --> 00:15:11,270
up making it really easy for people

00:15:08,540 --> 00:15:12,740
just to do the right thing I hacked the

00:15:11,270 --> 00:15:15,170
internal build system so that it would

00:15:12,740 --> 00:15:17,240
include the the third-party module six

00:15:15,170 --> 00:15:19,400
and future in every single entry point

00:15:17,240 --> 00:15:21,980
so that they appeared to be like in the

00:15:19,400 --> 00:15:25,370
standard Lib so people could just write

00:15:21,980 --> 00:15:27,650
PI through PI or to threat / 3 compliant

00:15:25,370 --> 00:15:29,450
code without having to go out of their

00:15:27,650 --> 00:15:31,100
way and change their build configs and

00:15:29,450 --> 00:15:34,340
so like that so people just seem to do

00:15:31,100 --> 00:15:37,160
it it was easier just to shut the linter

00:15:34,340 --> 00:15:40,880
up and adversely me to then complain

00:15:37,160 --> 00:15:42,410
about it so people did I also fixed the

00:15:40,880 --> 00:15:46,730
defaults for third-party wheel builds

00:15:42,410 --> 00:15:49,880
will build wheel builds so that the

00:15:46,730 --> 00:15:51,740
build config template didn't just say

00:15:49,880 --> 00:15:53,840
Python - he would say Python 2 and 3

00:15:51,740 --> 00:15:54,620
this seems like a simple thing but we

00:15:53,840 --> 00:15:56,750
never thought of it before

00:15:54,620 --> 00:15:58,310
and so that what that did is instead of

00:15:56,750 --> 00:16:00,380
them just every time they would do a new

00:15:58,310 --> 00:16:03,340
version it would blow away my Python 3

00:16:00,380 --> 00:16:06,020
version it would build a brand new 2 & 3

00:16:03,340 --> 00:16:07,550
this removed the time consuming thing of

00:16:06,020 --> 00:16:12,920
me having to come back behind people and

00:16:07,550 --> 00:16:15,200
re-enable Python 3 support with all

00:16:12,920 --> 00:16:17,810
these things in place we really stopped

00:16:15,200 --> 00:16:20,170
the bleeding of Python 3 support but we

00:16:17,810 --> 00:16:22,790
weren't really gaining any any ground

00:16:20,170 --> 00:16:24,320
that year I joined the teaching rotation

00:16:22,790 --> 00:16:26,960
for a new higher class called Python at

00:16:24,320 --> 00:16:28,670
Facebook it informed new engineers about

00:16:26,960 --> 00:16:31,580
the reality of programming Python at

00:16:28,670 --> 00:16:33,800
Facebook and maybe hopefully prevent

00:16:31,580 --> 00:16:34,880
them from having any gotchas about like

00:16:33,800 --> 00:16:37,550
that will get in their way of doing

00:16:34,880 --> 00:16:39,500
their work the class because of the

00:16:37,550 --> 00:16:41,870
linters I'd put in place had already

00:16:39,500 --> 00:16:44,740
been instructing new hires that they're

00:16:41,870 --> 00:16:47,660
supposed to write 2 3 compatible code

00:16:44,740 --> 00:16:49,640
because and even in the slice is one day

00:16:47,660 --> 00:16:51,710
in the future may however dissin they

00:16:49,640 --> 00:16:52,670
may be we may switch to Python 3 so

00:16:51,710 --> 00:16:56,210
let's do the work now

00:16:52,670 --> 00:16:58,670
well writing 2/3 code and only ever

00:16:56,210 --> 00:17:01,370
testing it in Python 2 was not enough to

00:16:58,670 --> 00:17:03,890
advance Python at Facebook we wanted to

00:17:01,370 --> 00:17:06,260
get to a future where people wrote

00:17:03,890 --> 00:17:09,410
Python 3 for new code and only wrote to

00:17:06,260 --> 00:17:11,360
3 code for legacy projects so in 2015 I

00:17:09,410 --> 00:17:13,010
took matters into my own hands but yet

00:17:11,360 --> 00:17:14,710
again I made a change to the class

00:17:13,010 --> 00:17:20,330
slides and informed the other teachers

00:17:14,710 --> 00:17:21,610
the class now said for all new code at

00:17:20,330 --> 00:17:23,830
Facebook

00:17:21,610 --> 00:17:26,140
must be written in Python 3 if it's by

00:17:23,830 --> 00:17:28,570
that good and you should never write

00:17:26,140 --> 00:17:31,240
Python 2 code unless it's for a Legacy

00:17:28,570 --> 00:17:34,900
Project and even then it still must be

00:17:31,240 --> 00:17:37,120
2/3 compatible code because either the

00:17:34,900 --> 00:17:38,680
project will die then we lose the Python

00:17:37,120 --> 00:17:42,150
to go that's great or we're gonna have

00:17:38,680 --> 00:17:42,150
to convert it to Python 3 at some point

00:17:43,260 --> 00:17:49,180
so I taught new hires just expect

00:17:45,730 --> 00:17:51,910
everything should work and not if not

00:17:49,180 --> 00:17:53,350
file a task right like actually complain

00:17:51,910 --> 00:17:54,850
about it don't just accept that it

00:17:53,350 --> 00:17:56,920
doesn't work complain about it or try to

00:17:54,850 --> 00:18:01,690
fix it themselves and strangely enough

00:17:56,920 --> 00:18:02,890
that's what happened people did so this

00:18:01,690 --> 00:18:04,660
is a little saying we should throw

00:18:02,890 --> 00:18:07,330
around called educate for the future you

00:18:04,660 --> 00:18:08,560
want not the present you have there's a

00:18:07,330 --> 00:18:10,600
kind of a debate internally where this

00:18:08,560 --> 00:18:12,130
came from we just started using it I

00:18:10,600 --> 00:18:14,080
think I said it would crush snakes he

00:18:12,130 --> 00:18:16,720
said it but I started using a statement

00:18:14,080 --> 00:18:18,760
to justify the new car class using it as

00:18:16,720 --> 00:18:21,130
basically I don't know you could call it

00:18:18,760 --> 00:18:23,350
propaganda but using as a mechanism to

00:18:21,130 --> 00:18:25,540
drive change hell most of the core

00:18:23,350 --> 00:18:27,730
dependencies had already been converted

00:18:25,540 --> 00:18:30,310
in 2014 for my project so everything

00:18:27,730 --> 00:18:32,350
should have just worked all we needed

00:18:30,310 --> 00:18:34,540
was the people the people to show up to

00:18:32,350 --> 00:18:38,530
write new code to keep things from

00:18:34,540 --> 00:18:40,450
regressing and to move forward so in

00:18:38,530 --> 00:18:43,300
January 2015 I finally shipped my

00:18:40,450 --> 00:18:44,890
project took me almost a year because I

00:18:43,300 --> 00:18:46,150
had to fix everything and I spent a lot

00:18:44,890 --> 00:18:47,530
of the rest of the year just selling

00:18:46,150 --> 00:18:48,850
people on that project really this is a

00:18:47,530 --> 00:18:53,020
better version you should use this

00:18:48,850 --> 00:18:56,920
instead of the old system so but by this

00:18:53,020 --> 00:18:58,360
time a lot of the Allies to the Python 3

00:18:56,920 --> 00:19:00,070
conversion had had been made that had

00:18:58,360 --> 00:19:02,710
made themselves known people like Mukesh

00:19:00,070 --> 00:19:04,840
Longo a core Python developer he joined

00:19:02,710 --> 00:19:06,280
the company in 2013 and he was also

00:19:04,840 --> 00:19:08,320
doing stuff so together with a few

00:19:06,280 --> 00:19:12,370
others we really pushed the bar in 2015

00:19:08,320 --> 00:19:14,440
just by riding modern code Sicily we

00:19:12,370 --> 00:19:17,710
could all use these nice new things that

00:19:14,440 --> 00:19:19,020
were showing up but sage stranger things

00:19:17,710 --> 00:19:21,940
were going to happen

00:19:19,020 --> 00:19:29,830
Lukasz had somehow convinced instagram

00:19:21,940 --> 00:19:32,140
to move to Python 3 so in 2016 he and I

00:19:29,830 --> 00:19:34,300
formed as a brand new team dedicated to

00:19:32,140 --> 00:19:35,530
shepherding Python at Facebook

00:19:34,300 --> 00:19:38,290
that we called the ministry the Silly

00:19:35,530 --> 00:19:40,390
Walks now that there was that it was

00:19:38,290 --> 00:19:43,510
only the two of us but because we were

00:19:40,390 --> 00:19:45,400
the Python team that Authority perceived

00:19:43,510 --> 00:19:47,710
thing that actually started working more

00:19:45,400 --> 00:19:49,090
often people assumed that these guys are

00:19:47,710 --> 00:19:51,430
in charge of Python so we should listen

00:19:49,090 --> 00:19:53,710
to them so we gave a lot of validity to

00:19:51,430 --> 00:19:55,000
our efforts and our primary mission was

00:19:53,710 --> 00:19:59,320
supporting Instagram and there moved to

00:19:55,000 --> 00:20:03,780
Python 3 well I saw a slow but steady

00:19:59,320 --> 00:20:06,610
growth in Python 3 usage through through

00:20:03,780 --> 00:20:09,100
2016 internal discussions were commonly

00:20:06,610 --> 00:20:11,080
about Python 3 and every day we would

00:20:09,100 --> 00:20:12,940
hear new things about projects that were

00:20:11,080 --> 00:20:15,130
brand new that we're choosing Python 3

00:20:12,940 --> 00:20:16,920
for their code and obviously the tide of

00:20:15,130 --> 00:20:19,930
public opinion Facebook had turned

00:20:16,920 --> 00:20:21,760
Python 3 a use was growing even though

00:20:19,930 --> 00:20:23,500
it was not the default version in the

00:20:21,760 --> 00:20:25,210
internal build system for entry points

00:20:23,500 --> 00:20:27,490
you had to go out of your way to say I

00:20:25,210 --> 00:20:30,450
want Python 3 version normally we just

00:20:27,490 --> 00:20:33,010
give you two and we even used to say

00:20:30,450 --> 00:20:36,190
Python 2 will probably always be the

00:20:33,010 --> 00:20:38,080
default version of Python and Facebook

00:20:36,190 --> 00:20:41,830
just might I always say these always be

00:20:38,080 --> 00:20:56,620
and I'm usually wrong so but well not

00:20:41,830 --> 00:20:59,200
anymore on May 2nd of 2016 I made this

00:20:56,620 --> 00:21:01,750
internal post with signaling my

00:20:59,200 --> 00:21:04,770
intentions of changing the default

00:21:01,750 --> 00:21:08,650
version the build system to be Python 3

00:21:04,770 --> 00:21:10,060
and you know it basically had kind of

00:21:08,650 --> 00:21:11,650
arguments one of the main arguments was

00:21:10,060 --> 00:21:13,420
that well the legacy version of Python

00:21:11,650 --> 00:21:14,950
if you're using it for new project it

00:21:13,420 --> 00:21:17,230
wastes the company money since any

00:21:14,950 --> 00:21:19,090
project starting in Python 2 will at

00:21:17,230 --> 00:21:19,510
some point have to be upgraded to Python

00:21:19,090 --> 00:21:21,190
00:21:19,510 --> 00:21:23,460
so you're costing the company twice as

00:21:21,190 --> 00:21:25,900
much money to write the same code and

00:21:23,460 --> 00:21:27,490
the thing is like so why not save the

00:21:25,900 --> 00:21:29,740
technical debt and use modern Python to

00:21:27,490 --> 00:21:32,020
begin with the post actually received

00:21:29,740 --> 00:21:33,700
unanimous support by May 5th I had

00:21:32,020 --> 00:21:35,830
already modded all the existing Python

00:21:33,700 --> 00:21:38,500
to build configs and said ok I really

00:21:35,830 --> 00:21:40,990
want to legacy version of Python and and

00:21:38,500 --> 00:21:42,850
shipped it out with the millions of

00:21:40,990 --> 00:21:44,860
lines of Python coded in the thousands

00:21:42,850 --> 00:21:46,559
of entry points I didn't break anything

00:21:44,860 --> 00:21:48,240
nobody seemed to notice

00:21:46,559 --> 00:21:52,769
it just seemed like the next logical

00:21:48,240 --> 00:21:54,659
thing also in 2016 we formed what we

00:21:52,769 --> 00:21:56,999
lovingly call the shadowy Council for

00:21:54,659 --> 00:21:58,649
Python domination this internal

00:21:56,999 --> 00:22:00,360
messenger group was made up of all the

00:21:58,649 --> 00:22:02,249
allies throughout this process that have

00:22:00,360 --> 00:22:03,960
made themselves apparent they were

00:22:02,249 --> 00:22:05,639
active in Python 3 we used this group to

00:22:03,960 --> 00:22:07,320
keep abreast of any compatibility issues

00:22:05,639 --> 00:22:08,850
that may arise discuss it in about the

00:22:07,320 --> 00:22:11,009
future of the language of Facebook and

00:22:08,850 --> 00:22:11,789
to keep abreast of any dissenters to our

00:22:11,009 --> 00:22:14,100
evil plan

00:22:11,789 --> 00:22:18,049
so you see you can't do something like

00:22:14,100 --> 00:22:19,980
this alone you're gonna need help and

00:22:18,049 --> 00:22:21,389
you can need allies and when those

00:22:19,980 --> 00:22:24,960
Allie's come you should recruit those

00:22:21,389 --> 00:22:27,029
allies now there were about 10 people in

00:22:24,960 --> 00:22:30,409
total that really pushed Python 3 at

00:22:27,029 --> 00:22:32,909
Facebook for at least the Facebook side

00:22:30,409 --> 00:22:34,769
but only there was only ever three

00:22:32,909 --> 00:22:36,720
people that worked collaboratively at a

00:22:34,769 --> 00:22:38,429
time because people came and went it was

00:22:36,720 --> 00:22:41,929
no long it was never an official project

00:22:38,429 --> 00:22:41,929
we just had to do it in our free time so

00:22:44,480 --> 00:22:49,080
towards the end of 2016 we had a post

00:22:47,429 --> 00:22:51,809
from a project team that had converted

00:22:49,080 --> 00:22:53,549
to Python 3 and they really just ran 2

00:22:51,809 --> 00:22:55,440
to 3 on their code base they didn't do

00:22:53,549 --> 00:22:57,629
anything they just ran 2 to 3 the diff

00:22:55,440 --> 00:22:59,100
was tiny people just accepted it out of

00:22:57,629 --> 00:23:01,590
hand you know but they were very

00:22:59,100 --> 00:23:05,070
surprised by the results they saw a they

00:23:01,590 --> 00:23:06,570
basically it was it was they were just

00:23:05,070 --> 00:23:07,980
surprised that they were using half as

00:23:06,570 --> 00:23:10,590
much memory and the low was finishing

00:23:07,980 --> 00:23:12,899
much faster and we have many reports

00:23:10,590 --> 00:23:14,879
like this internally see one of the most

00:23:12,899 --> 00:23:17,309
outdated lies still lingers to this day

00:23:14,879 --> 00:23:19,710
I hear it from people I interview it's

00:23:17,309 --> 00:23:22,289
like is it Python to faster than Python

00:23:19,710 --> 00:23:24,059
3 well that may have been true in times

00:23:22,289 --> 00:23:27,419
of your where people had horse and

00:23:24,059 --> 00:23:29,100
buggies but today with modern code it's

00:23:27,419 --> 00:23:31,559
not true with normal code that people

00:23:29,100 --> 00:23:32,909
just write it's gonna be faster in

00:23:31,559 --> 00:23:38,369
Python 3 and that's what we're seeing at

00:23:32,909 --> 00:23:40,529
Facebook now by 2017 we were finally in

00:23:38,369 --> 00:23:42,090
this this glorious future where you

00:23:40,529 --> 00:23:44,460
could have nice things a future of

00:23:42,090 --> 00:23:47,789
modern Python but that Facebook was

00:23:44,460 --> 00:23:49,440
secured in a q1 or 2017 Instagram finish

00:23:47,789 --> 00:23:51,330
there their migration to Python 3 it

00:23:49,440 --> 00:23:53,009
freed up freed them up to start making

00:23:51,330 --> 00:23:57,090
use of these new technologies like async

00:23:53,009 --> 00:23:58,740
i/o and typing now operating Python

00:23:57,090 --> 00:24:00,150
versions no longer this dark scary

00:23:58,740 --> 00:24:02,190
future but it's like Christmas

00:24:00,150 --> 00:24:03,840
with every new feature release we now

00:24:02,190 --> 00:24:05,430
focus on problems like pet for eat for

00:24:03,840 --> 00:24:07,680
typing of our code base or migrating

00:24:05,430 --> 00:24:10,230
services that use async IO Python at

00:24:07,680 --> 00:24:11,550
Facebook is fun again last year we're

00:24:10,230 --> 00:24:13,290
able to start a project that replaced

00:24:11,550 --> 00:24:15,150
the FB thrift Python stack that I said

00:24:13,290 --> 00:24:16,980
needed a lot of work with a new async

00:24:15,150 --> 00:24:20,430
Iowan that takes full advantage of the

00:24:16,980 --> 00:24:23,130
async C++ work that they've done the

00:24:20,430 --> 00:24:24,660
problem that we have now is that service

00:24:23,130 --> 00:24:26,730
and library owners are asking internally

00:24:24,660 --> 00:24:28,080
can we get rid of Python to support oh

00:24:26,730 --> 00:24:30,870
yes you can

00:24:28,080 --> 00:24:32,880
but so we commonly see PI that Python 3

00:24:30,870 --> 00:24:34,500
only regressions now and legacy Python 2

00:24:32,880 --> 00:24:36,390
code the like the opposite problem I

00:24:34,500 --> 00:24:38,280
used to have and most of the time people

00:24:36,390 --> 00:24:40,070
reply with well can't you just use

00:24:38,280 --> 00:24:43,430
Python 3 why do I got to fix this oh

00:24:40,070 --> 00:24:46,370
what a wonderful world in which I live

00:24:43,430 --> 00:24:49,800
now I don't include 2018 in my timeline

00:24:46,370 --> 00:24:51,090
since that year much of 2017 weekend we

00:24:49,800 --> 00:24:53,520
were no longer in the trenches fighting

00:24:51,090 --> 00:24:54,810
the good fight we had already won the

00:24:53,520 --> 00:24:57,120
hearts and minds of the engineers at

00:24:54,810 --> 00:24:58,500
Facebook so at this point it was really

00:24:57,120 --> 00:25:00,180
victory we may have not have known it

00:24:58,500 --> 00:25:02,250
but it was victory where it mattered

00:25:00,180 --> 00:25:03,840
removing Python 2 was only a matter of

00:25:02,250 --> 00:25:06,780
time so what does it look like at

00:25:03,840 --> 00:25:09,510
Facebook today winded out q3 of 2014

00:25:06,780 --> 00:25:11,370
with four Python three entry points this

00:25:09,510 --> 00:25:13,170
has not changed for almost a year - q2

00:25:11,370 --> 00:25:15,000
of 2015 when we had a fifth entry point

00:25:13,170 --> 00:25:16,680
sadly I didn't keep any statistics after

00:25:15,000 --> 00:25:20,730
that for about a year you can see the

00:25:16,680 --> 00:25:23,010
Green Line but the day after a few days

00:25:20,730 --> 00:25:24,570
after I landed the the default Python 3

00:25:23,010 --> 00:25:26,160
my teammate Cooper put out a new

00:25:24,570 --> 00:25:27,150
automatic stats gathered that looked at

00:25:26,160 --> 00:25:32,190
the bill configs

00:25:27,150 --> 00:25:33,360
and counted them by python version so we

00:25:32,190 --> 00:25:36,870
were very surprised that we already at

00:25:33,360 --> 00:25:38,850
4% of people it wasn't default they were

00:25:36,870 --> 00:25:41,250
using it so that was cool but on March

00:25:38,850 --> 00:25:43,410
13 a marching us our March 19th of this

00:25:41,250 --> 00:25:45,720
year we crossed over the 50% line

00:25:43,410 --> 00:25:47,340
meaning that we have more Python 3

00:25:45,720 --> 00:25:50,220
running at Facebook than we have Python

00:25:47,340 --> 00:25:52,530
2 and today of the tens of thousands of

00:25:50,220 --> 00:25:54,570
entry points we're close to 55% of them

00:25:52,530 --> 00:25:56,430
being Python 3 and by that's by this

00:25:54,570 --> 00:25:57,140
time next year we will be a hundred and

00:25:56,430 --> 00:26:00,870
six percent

00:25:57,140 --> 00:26:04,110
sorry that's a bad statistics joke so

00:26:00,870 --> 00:26:06,480
furthermore Lukasz posted this tweeted

00:26:04,110 --> 00:26:08,070
this this year we were traveling to the

00:26:06,480 --> 00:26:10,800
double in facebook office to help a team

00:26:08,070 --> 00:26:12,390
convert to Python 3

00:26:10,800 --> 00:26:14,010
we've got supposed to it was a basically

00:26:12,390 --> 00:26:16,620
they saw 4x CPU improvement

00:26:14,010 --> 00:26:18,300
and a 50-percent memory win and this was

00:26:16,620 --> 00:26:20,070
a service that I said will probably

00:26:18,300 --> 00:26:23,070
always be running on Python 2 it's just

00:26:20,070 --> 00:26:23,820
one of those tons of dependencies hey I

00:26:23,070 --> 00:26:26,520
was wrong

00:26:23,820 --> 00:26:28,290
so don't lose hope even the things that

00:26:26,520 --> 00:26:30,030
are hopeless seem to change eventually

00:26:28,290 --> 00:26:32,250
and at Facebook now it's actually an

00:26:30,030 --> 00:26:34,260
embarrassment to say that your project

00:26:32,250 --> 00:26:37,590
runs only on Python - he asked me about

00:26:34,260 --> 00:26:39,150
they start to waffle I'm not sure but of

00:26:37,590 --> 00:26:41,130
the tens of millions of lines of Python

00:26:39,150 --> 00:26:42,600
code at Facebook 73% of them are Python

00:26:41,130 --> 00:26:44,310
3 and we've already announced an

00:26:42,600 --> 00:26:46,080
internal end-of-life date for Python 2

00:26:44,310 --> 00:26:48,360
and we'll be moving this year to make it

00:26:46,080 --> 00:26:50,730
impossible to ship new Python to build

00:26:48,360 --> 00:26:52,080
configs we started our we start out a

00:26:50,730 --> 00:26:53,580
goal with just being able to use Python

00:26:52,080 --> 00:26:55,470
3 in production so we could have the

00:26:53,580 --> 00:26:58,500
nice things and we ended up with so much

00:26:55,470 --> 00:27:01,740
more so let's review if you build it

00:26:58,500 --> 00:27:03,090
they will come sometimes but do you have

00:27:01,740 --> 00:27:04,860
to make it a possibility otherwise it

00:27:03,090 --> 00:27:06,420
never happened change has to start with

00:27:04,860 --> 00:27:09,120
somebody that somebody should be you

00:27:06,420 --> 00:27:10,380
take Python 3 for your next project get

00:27:09,120 --> 00:27:11,580
people to help you either they don't

00:27:10,380 --> 00:27:14,850
know you're helping you that's the point

00:27:11,580 --> 00:27:17,100
of linters and unit tests and finding

00:27:14,850 --> 00:27:18,750
your allies and recruit them if you're

00:27:17,100 --> 00:27:20,070
not training your new hires today you

00:27:18,750 --> 00:27:22,080
should be training your new hires train

00:27:20,070 --> 00:27:23,610
them for what you want set up something

00:27:22,080 --> 00:27:24,840
to get statistics because so you know

00:27:23,610 --> 00:27:26,460
what you're doing and it added a

00:27:24,840 --> 00:27:27,930
gamification internally people like oh

00:27:26,460 --> 00:27:31,080
we have a higher percentage of Python 3

00:27:27,930 --> 00:27:33,270
in our project and finally write some

00:27:31,080 --> 00:27:37,620
awesome stuff in Python 3 this will make

00:27:33,270 --> 00:27:38,850
people want to convert lastly before you

00:27:37,620 --> 00:27:40,980
discount me and say that oh he had some

00:27:38,850 --> 00:27:43,020
special ability or he'd do something or

00:27:40,980 --> 00:27:44,510
qualification drives effort I firmly

00:27:43,020 --> 00:27:47,790
believed that I was completely

00:27:44,510 --> 00:27:49,140
unqualified to drive this effort my

00:27:47,790 --> 00:27:51,120
assertion is that this change does

00:27:49,140 --> 00:27:53,640
require any special qualifications only

00:27:51,120 --> 00:27:55,830
the will and perseverance to make it

00:27:53,640 --> 00:27:57,600
happen if you believe it can happen

00:27:55,830 --> 00:28:00,690
other people will believe it can happen

00:27:57,600 --> 00:28:03,690
- so I got some photo credits to silence

00:28:00,690 --> 00:28:06,030
my lawyers of the various things I've

00:28:03,690 --> 00:28:07,860
used most of them taken from Wikimedia

00:28:06,030 --> 00:28:08,850
Commons and some of them just ripped off

00:28:07,860 --> 00:28:12,410
and changed my me

00:28:08,850 --> 00:28:12,410
so questions

00:28:18,380 --> 00:28:26,570
anyway Tom for two questions so we have

00:28:24,289 --> 00:28:28,970
time just a couple minutes so probably

00:28:26,570 --> 00:28:32,480
time for one or two questions for any

00:28:28,970 --> 00:28:41,000
brave souls what when I approach this

00:28:32,480 --> 00:28:43,009
mic so oh sorry so I work for Ford which

00:28:41,000 --> 00:28:45,320
is a like a hundred year old plus

00:28:43,009 --> 00:28:48,860
company where there's a little bit less

00:28:45,320 --> 00:28:51,830
of a culture of sort of anyone being

00:28:48,860 --> 00:28:53,779
able to contribute changes do you have

00:28:51,830 --> 00:28:56,179
any recommendations for how to go about

00:28:53,779 --> 00:28:58,039
navigating so on a traditional hierarchy

00:28:56,179 --> 00:29:00,200
where you have you have managers that

00:28:58,039 --> 00:29:01,940
kind of tell you what you have to do you

00:29:00,200 --> 00:29:03,649
usually can just find a manager that

00:29:01,940 --> 00:29:05,779
you're friendly with and you can sell

00:29:03,649 --> 00:29:07,490
them on it and you can work with them to

00:29:05,779 --> 00:29:09,230
sell their manager on it usually you get

00:29:07,490 --> 00:29:10,700
tie enough it's not as much so at

00:29:09,230 --> 00:29:12,950
Facebook the problem was like ten times

00:29:10,700 --> 00:29:15,919
worse so instead being able to convince

00:29:12,950 --> 00:29:19,129
one manager I had to convince thousands

00:29:15,919 --> 00:29:20,509
of people to do it and so it's usually

00:29:19,129 --> 00:29:22,190
it may be easier it could be harder to

00:29:20,509 --> 00:29:24,019
find help dogmatic the company is but

00:29:22,190 --> 00:29:26,269
it's usually you pick that manager who

00:29:24,019 --> 00:29:27,679
who can basically say yes we're gonna do

00:29:26,269 --> 00:29:29,539
this and you can still do the things

00:29:27,679 --> 00:29:31,820
like I did you say oh we need to do

00:29:29,539 --> 00:29:33,529
these things to improve our code quality

00:29:31,820 --> 00:29:34,940
and it'll like yeah that sounds great

00:29:33,529 --> 00:29:36,919
and you do these things that people

00:29:34,940 --> 00:29:43,429
slowly start fixing these issues because

00:29:36,919 --> 00:29:48,110
of the linter thank you I'm for one more

00:29:43,429 --> 00:29:49,879
question so I it seems like your

00:29:48,110 --> 00:29:52,820
transition was really aided by having

00:29:49,879 --> 00:29:55,629
like micro services as like your able to

00:29:52,820 --> 00:29:58,250
sort of attack this this like piecemeal

00:29:55,629 --> 00:30:00,110
project my project well we don't really

00:29:58,250 --> 00:30:01,789
have a lot of micro services at Facebook

00:30:00,110 --> 00:30:03,080
we have a lot of individual servers that

00:30:01,789 --> 00:30:04,700
kind of talk to each other I wouldn't

00:30:03,080 --> 00:30:07,820
call them micro service or InDesign but

00:30:04,700 --> 00:30:10,250
our code bases giant shared code base

00:30:07,820 --> 00:30:11,720
that anybody will link in to you and

00:30:10,250 --> 00:30:13,940
grab dependencies out of you so it is

00:30:11,720 --> 00:30:15,230
it's really you kind of take down your

00:30:13,940 --> 00:30:17,840
dependency tree and kind of update

00:30:15,230 --> 00:30:20,240
things and you just do the to polygon

00:30:17,840 --> 00:30:22,580
thing I guess my question is how would

00:30:20,240 --> 00:30:25,519
you approach this so my scenario where

00:30:22,580 --> 00:30:27,500
you have a two mono repo where it's

00:30:25,519 --> 00:30:30,080
every it's all or nothing just one giant

00:30:27,500 --> 00:30:31,200
service I would follow the instagrams

00:30:30,080 --> 00:30:33,750
keynote from last year

00:30:31,200 --> 00:30:35,130
about how to do a mono service and

00:30:33,750 --> 00:30:37,110
that's how they basically converted

00:30:35,130 --> 00:30:38,730
stuff to two to three they they made

00:30:37,110 --> 00:30:40,950
their unit test to run in Python 3 and

00:30:38,730 --> 00:30:44,670
then when all the tests passed they just

00:30:40,950 --> 00:30:45,500
made the switch cool yeah thanks all

00:30:44,670 --> 00:30:49,269
right thank you

00:30:45,500 --> 00:30:49,269

YouTube URL: https://www.youtube.com/watch?v=H4SS9yVWJYA


