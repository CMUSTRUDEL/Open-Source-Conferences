Title: Rachel Stephens: WhyPy? Understanding Trends Driving the Usage of Python
Publication date: 2019-10-22
Playlist: PyColorado 2019
Description: 
	How does Python fit among programming languages? Weâ€™ll start with a zoomed out view of programming language trends and then drill into Python specifically. Our goal is to explore where, why and how Python being used, and then discuss future opportunities and threats to the language.
Captions: 
	00:00:00,370 --> 00:00:46,200
[Music]

00:00:42,620 --> 00:00:48,239
here we go Rachel Stevens and I'm an

00:00:46,200 --> 00:00:51,079
analyst with a firm called red monk and

00:00:48,239 --> 00:00:53,760
our job is to understand technology

00:00:51,079 --> 00:00:55,760
preferences of developer populations and

00:00:53,760 --> 00:00:59,220
how those preferences help drive

00:00:55,760 --> 00:01:01,430
technology adoption patterns so part of

00:00:59,220 --> 00:01:03,269
what we do is kind of qualitative

00:01:01,430 --> 00:01:05,869
exploratory conversations with

00:01:03,269 --> 00:01:08,400
developers and vendors and enterprises

00:01:05,869 --> 00:01:10,860
we try to back that up where we can with

00:01:08,400 --> 00:01:13,080
quantitative data and that usually looks

00:01:10,860 --> 00:01:15,720
at publicly facing data sets around

00:01:13,080 --> 00:01:18,119
developer services and the goal overall

00:01:15,720 --> 00:01:20,820
is to try to triangulate any available

00:01:18,119 --> 00:01:22,410
data source that we can get to

00:01:20,820 --> 00:01:24,330
understand what a developer preference

00:01:22,410 --> 00:01:25,440
and trend looks like so I'm going to

00:01:24,330 --> 00:01:26,640
share some of those some of this is

00:01:25,440 --> 00:01:28,590
going to be qualitative some will be

00:01:26,640 --> 00:01:31,830
quantitative but the goal is to

00:01:28,590 --> 00:01:34,320
understand developers and we have

00:01:31,830 --> 00:01:35,850
actually done this as why do we care

00:01:34,320 --> 00:01:37,830
about developer preferences and we have

00:01:35,850 --> 00:01:39,270
found and if you're interested in more

00:01:37,830 --> 00:01:42,119
detail you can read my colleagues book

00:01:39,270 --> 00:01:44,910
the new kingmakers but the goal is to

00:01:42,119 --> 00:01:46,890
understand and help both developers and

00:01:44,910 --> 00:01:48,590
the managers of developers in particular

00:01:46,890 --> 00:01:51,479
to understand that developers have

00:01:48,590 --> 00:01:54,090
unprecedented unprecedented influence

00:01:51,479 --> 00:01:55,530
and part of this is because hardware and

00:01:54,090 --> 00:01:57,899
software is accessible in a way that

00:01:55,530 --> 00:01:59,610
it's never been before and developers

00:01:57,899 --> 00:02:03,030
don't need permission like they used to

00:01:59,610 --> 00:02:04,590
so if you think back to you know early

00:02:03,030 --> 00:02:06,390
2000s and you had to go through an

00:02:04,590 --> 00:02:07,770
entire procurement process to get

00:02:06,390 --> 00:02:08,940
something wrapped in stacked and you

00:02:07,770 --> 00:02:10,770
have to go through the process of

00:02:08,940 --> 00:02:12,569
getting licenses and that's just not the

00:02:10,770 --> 00:02:14,970
case today and a lot of instances

00:02:12,569 --> 00:02:18,720
developers have more choice part of that

00:02:14,970 --> 00:02:21,360
choice is driven by the rise of open

00:02:18,720 --> 00:02:23,370
source software where people can kick

00:02:21,360 --> 00:02:25,170
the tires on things

00:02:23,370 --> 00:02:27,090
bootstrap projects and get things

00:02:25,170 --> 00:02:29,370
started and then present the case to

00:02:27,090 --> 00:02:31,290
their managers about why they may or may

00:02:29,370 --> 00:02:33,000
not want to use a service without having

00:02:31,290 --> 00:02:36,120
to go through the entire procurement

00:02:33,000 --> 00:02:39,209
process part of it is driven from cloud

00:02:36,120 --> 00:02:41,190
technology where we have eliminated the

00:02:39,209 --> 00:02:43,440
need for upfront capital expense to get

00:02:41,190 --> 00:02:45,930
projects started and we've made new

00:02:43,440 --> 00:02:49,160
classes of hardware virtually accessible

00:02:45,930 --> 00:02:52,290
and on-demand resources easy to procure

00:02:49,160 --> 00:02:54,030
and part of this is our ability to

00:02:52,290 --> 00:02:55,830
collaborate as communities more

00:02:54,030 --> 00:02:58,320
effectively we can share best

00:02:55,830 --> 00:03:00,330
this is we can transfer our knowledge we

00:02:58,320 --> 00:03:02,790
can see and share code and we can

00:03:00,330 --> 00:03:05,360
collaborate so all of these things

00:03:02,790 --> 00:03:07,860
together have meant that there's been a

00:03:05,360 --> 00:03:10,050
recalibration of practical authority in

00:03:07,860 --> 00:03:11,910
technology choice and technology

00:03:10,050 --> 00:03:15,600
adoption is increasingly driven from the

00:03:11,910 --> 00:03:17,700
bottom up and this has ramifications for

00:03:15,600 --> 00:03:20,250
the technology industry overall

00:03:17,700 --> 00:03:22,470
and that's why red monk is really here

00:03:20,250 --> 00:03:24,390
is to help people understand what those

00:03:22,470 --> 00:03:26,280
developer and practitioner preferences

00:03:24,390 --> 00:03:30,510
are and how that impacts what's being

00:03:26,280 --> 00:03:32,220
used in the space today and language

00:03:30,510 --> 00:03:34,320
choice is an interesting thing for red

00:03:32,220 --> 00:03:36,480
monk because one of the primary ways

00:03:34,320 --> 00:03:37,980
that developer populations identify with

00:03:36,480 --> 00:03:40,140
the world is through their programming

00:03:37,980 --> 00:03:42,960
language of choice and so choice of

00:03:40,140 --> 00:03:44,940
language has kind of profound impacts on

00:03:42,960 --> 00:03:46,680
developer adoption patterns not within

00:03:44,940 --> 00:03:48,720
the length not only within the languages

00:03:46,680 --> 00:03:51,270
and themselves but also in the tools and

00:03:48,720 --> 00:03:54,570
frameworks that kind of exist around

00:03:51,270 --> 00:03:57,540
languages so that's why I'm super

00:03:54,570 --> 00:03:59,400
excited to talk to you about one of our

00:03:57,540 --> 00:04:01,500
projects and I realized that this is

00:03:59,400 --> 00:04:03,090
super hard to read so you don't have to

00:04:01,500 --> 00:04:07,140
worry about it pythons up there on the

00:04:03,090 --> 00:04:10,080
top right but one of our big projects

00:04:07,140 --> 00:04:13,650
that we've been doing since 2012 is

00:04:10,080 --> 00:04:17,359
trying to attempt to correlate language

00:04:13,650 --> 00:04:20,520
usage and language discussion so we

00:04:17,359 --> 00:04:22,410
don't view this and I like to reiterate

00:04:20,520 --> 00:04:24,240
this isn't like a definitive ranking

00:04:22,410 --> 00:04:27,360
system it's just trying to go into

00:04:24,240 --> 00:04:30,419
publicly available data sources via

00:04:27,360 --> 00:04:32,370
github and via Stack Overflow and see

00:04:30,419 --> 00:04:34,020
what's being used what's being talked

00:04:32,370 --> 00:04:37,500
about and how do those correlate

00:04:34,020 --> 00:04:40,880
together and then what we found is that

00:04:37,500 --> 00:04:43,320
people don't like that kind of

00:04:40,880 --> 00:04:46,050
wishy-washy nastain okay like for just

00:04:43,320 --> 00:04:47,820
correlating so we ended up by popular

00:04:46,050 --> 00:04:51,210
demand actually doing it as a ranking

00:04:47,820 --> 00:04:53,669
system and you can see right ABARES

00:04:51,210 --> 00:04:56,310
python has been top 5 for the duration

00:04:53,669 --> 00:04:58,580
of this analysis and is currently ranked

00:04:56,310 --> 00:05:03,060
at 3 with a steady trajectory

00:04:58,580 --> 00:05:05,629
way to go Python so I I think that it's

00:05:03,060 --> 00:05:07,969
interesting like we really do

00:05:05,629 --> 00:05:10,249
every time we run this and we try to run

00:05:07,969 --> 00:05:14,059
it two times a year we get a lot of

00:05:10,249 --> 00:05:17,659
questions smooth these questions are you

00:05:14,059 --> 00:05:19,099
you use Stack Overflow to measure

00:05:17,659 --> 00:05:20,749
discussion and that means that the

00:05:19,099 --> 00:05:22,759
languages that are harder to use are the

00:05:20,749 --> 00:05:24,919
languages that get more questions asked

00:05:22,759 --> 00:05:27,110
and that means that there's problems

00:05:24,919 --> 00:05:30,919
with your analysis and we don't disagree

00:05:27,110 --> 00:05:33,439
so just before we get questions where

00:05:30,919 --> 00:05:35,389
people say oh like my my community does

00:05:33,439 --> 00:05:37,099
all of their work via slack and so

00:05:35,389 --> 00:05:38,599
you're not capturing the real spirit of

00:05:37,099 --> 00:05:42,319
the community if you're only looking at

00:05:38,599 --> 00:05:45,469
Stack Overflow and we don't disagree but

00:05:42,319 --> 00:05:47,089
it's an imperfect measurement system to

00:05:45,469 --> 00:05:48,709
be sure so like take it all with a grain

00:05:47,089 --> 00:05:50,779
of salt but this is just trying to look

00:05:48,709 --> 00:05:53,809
at two really broad developer

00:05:50,779 --> 00:05:55,339
communities what do we see and we see

00:05:53,809 --> 00:06:02,180
Python as a healthy and engaged

00:05:55,339 --> 00:06:05,719
community so oh well in theory that's a

00:06:02,180 --> 00:06:08,360
picture of a sailboat I wanted to talk

00:06:05,719 --> 00:06:12,909
about headwinds and tailwind in the

00:06:08,360 --> 00:06:16,129
Python community and this is a

00:06:12,909 --> 00:06:18,169
discussion around why Python has done so

00:06:16,129 --> 00:06:21,349
well and some areas where other

00:06:18,169 --> 00:06:23,240
competing languages maybe have different

00:06:21,349 --> 00:06:24,680
things that are helping them do well so

00:06:23,240 --> 00:06:27,079
that we can kind of understand and

00:06:24,680 --> 00:06:29,029
compare and contrast overall communities

00:06:27,079 --> 00:06:31,339
at large so I'm gonna start with some

00:06:29,029 --> 00:06:34,569
things that that Python has going for it

00:06:31,339 --> 00:06:37,369
and one of it is its extensibility story

00:06:34,569 --> 00:06:39,139
so rather than having all the

00:06:37,369 --> 00:06:41,839
functionality built into its core Python

00:06:39,139 --> 00:06:44,689
byte design was highly extensible it's

00:06:41,839 --> 00:06:46,849
compact it's got a small core and a

00:06:44,689 --> 00:06:49,430
large library and easily extensible

00:06:46,849 --> 00:06:51,800
could interpreter you have the joy of

00:06:49,430 --> 00:06:53,779
the pip install which may make your life

00:06:51,800 --> 00:06:57,430
easier or may make it harder it depends

00:06:53,779 --> 00:06:59,749
but it's something that has been

00:06:57,430 --> 00:07:04,449
designed so that the language can be

00:06:59,749 --> 00:07:06,919
very general purpose we have traction in

00:07:04,449 --> 00:07:09,559
areas like web development then

00:07:06,919 --> 00:07:11,959
scripting and data science and machine

00:07:09,559 --> 00:07:14,180
learning but really what's cool about

00:07:11,959 --> 00:07:16,340
Python is the extensibility allows

00:07:14,180 --> 00:07:18,680
people to meet their needs

00:07:16,340 --> 00:07:21,140
the language in a way that a lot of

00:07:18,680 --> 00:07:23,810
other specifically designed languages

00:07:21,140 --> 00:07:27,260
can't do so the general purpose language

00:07:23,810 --> 00:07:28,970
means that people can do what they want

00:07:27,260 --> 00:07:30,650
with Python where they need it it can be

00:07:28,970 --> 00:07:32,060
used as a glue language it can be used

00:07:30,650 --> 00:07:36,020
as a scripting language it can be used

00:07:32,060 --> 00:07:39,800
all over the place because people have

00:07:36,020 --> 00:07:42,860
the ability to have the language meet

00:07:39,800 --> 00:07:45,440
their needs and this leads to mastery I

00:07:42,860 --> 00:07:47,570
think we talked about this end of python

00:07:45,440 --> 00:07:49,910
this morning and one of the things that

00:07:47,570 --> 00:07:52,190
is amazing about python is that it has

00:07:49,910 --> 00:07:56,570
this minimalist philosophy it's simple

00:07:52,190 --> 00:08:00,560
and readable it has a way that a lot of

00:07:56,570 --> 00:08:02,750
programming languages view cleverness in

00:08:00,560 --> 00:08:04,370
a positive light that's not the case for

00:08:02,750 --> 00:08:07,430
the Python community we want things to

00:08:04,370 --> 00:08:10,370
be comprehensible readable and this

00:08:07,430 --> 00:08:12,110
gives people the ability to read what

00:08:10,370 --> 00:08:14,360
their code is doing and against people

00:08:12,110 --> 00:08:16,970
the ability to come into the programming

00:08:14,360 --> 00:08:18,770
language community much easier python is

00:08:16,970 --> 00:08:20,840
routinely one of the languages that's

00:08:18,770 --> 00:08:22,940
used as a first programming language

00:08:20,840 --> 00:08:24,530
learned and that's because it's

00:08:22,940 --> 00:08:25,850
something that people can understand it

00:08:24,530 --> 00:08:29,570
so it's not just machine readable but

00:08:25,850 --> 00:08:31,730
it's human readable this gives people

00:08:29,570 --> 00:08:33,830
the ability to get to a flow state you

00:08:31,730 --> 00:08:36,380
can code in fewer steps less code is

00:08:33,830 --> 00:08:39,920
required to get to a solution and there

00:08:36,380 --> 00:08:42,530
are prescribed or prescriptive ways to

00:08:39,920 --> 00:08:43,940
do things so you are not guessing at

00:08:42,530 --> 00:08:46,580
what you should be doing there are ways

00:08:43,940 --> 00:08:49,640
that you can do this in a way that is

00:08:46,580 --> 00:08:51,680
make make sense for people and all over

00:08:49,640 --> 00:08:57,380
all of this combined leads to an

00:08:51,680 --> 00:08:59,210
approachable learning curve choice so I

00:08:57,380 --> 00:09:02,030
feel like choice is not something that

00:08:59,210 --> 00:09:03,710
is typically associated with Python

00:09:02,030 --> 00:09:06,410
based off of that kind of Python thing

00:09:03,710 --> 00:09:08,180
where we have ways to do it ways that

00:09:06,410 --> 00:09:09,950
people enjoy solving problems it's

00:09:08,180 --> 00:09:12,680
usually autonomy independence and

00:09:09,950 --> 00:09:13,940
creativity and I think that when we when

00:09:12,680 --> 00:09:16,310
we try to have a more prescriptive

00:09:13,940 --> 00:09:17,780
language sometimes we can forget that

00:09:16,310 --> 00:09:19,790
people have a lot of choice but one of

00:09:17,780 --> 00:09:21,670
the things that Python has going for it

00:09:19,790 --> 00:09:23,720
is because it's so general-purpose

00:09:21,670 --> 00:09:25,670
there's a lot of choice in coding

00:09:23,720 --> 00:09:27,110
methodology we have like object

00:09:25,670 --> 00:09:28,650
orientation we can use it in a

00:09:27,110 --> 00:09:31,380
procedural way we can use it

00:09:28,650 --> 00:09:33,810
functional way and so even if it's not

00:09:31,380 --> 00:09:37,020
something where you're going through and

00:09:33,810 --> 00:09:39,180
you are coming up with clever solutions

00:09:37,020 --> 00:09:41,730
because clever is not the thing that

00:09:39,180 --> 00:09:44,310
Python code should be it should be

00:09:41,730 --> 00:09:47,880
simple and beautiful but you can be

00:09:44,310 --> 00:09:49,800
really oriented to your code in

00:09:47,880 --> 00:09:51,210
different and flexible ways which i

00:09:49,800 --> 00:09:54,420
think is something that python has going

00:09:51,210 --> 00:09:57,360
for it and then the community I think

00:09:54,420 --> 00:10:01,670
the community around Python is uniquely

00:09:57,360 --> 00:10:04,650
amazing you have such a positive

00:10:01,670 --> 00:10:07,020
reputation in the world and the

00:10:04,650 --> 00:10:09,900
programming language communities can

00:10:07,020 --> 00:10:12,210
sometimes be hostile to newcomers to

00:10:09,900 --> 00:10:15,480
different ways of approaching things and

00:10:12,210 --> 00:10:18,810
the Python community overall has a very

00:10:15,480 --> 00:10:20,670
positive reputation of being friendly

00:10:18,810 --> 00:10:23,430
being welcoming being a place where

00:10:20,670 --> 00:10:27,120
people can grow and so that's something

00:10:23,430 --> 00:10:29,850
and that's not just me saying good

00:10:27,120 --> 00:10:31,860
things to all of you it's it's the

00:10:29,850 --> 00:10:33,450
amongst programming language communities

00:10:31,860 --> 00:10:34,560
you are viewed as one of the communities

00:10:33,450 --> 00:10:36,990
that is friendliest and most

00:10:34,560 --> 00:10:38,610
approachable for people so that's all of

00:10:36,990 --> 00:10:39,870
the things that python has going from

00:10:38,610 --> 00:10:41,910
out all of the things but some of the

00:10:39,870 --> 00:10:43,260
things that python has going for it has

00:10:41,910 --> 00:10:46,770
kind of tail winds that they're pushing

00:10:43,260 --> 00:10:48,990
the language community along so now

00:10:46,770 --> 00:10:50,820
we're gonna go into the part of what

00:10:48,990 --> 00:10:53,280
what what's happening in the world

00:10:50,820 --> 00:10:54,750
around Python and what is causing people

00:10:53,280 --> 00:10:58,080
to choose something other than Python

00:10:54,750 --> 00:11:00,240
when they're creating projects and in

00:10:58,080 --> 00:11:01,590
the spirit of understanding that

00:11:00,240 --> 00:11:03,360
sometimes our greatest strengths are

00:11:01,590 --> 00:11:05,960
often our weaknesses some of this is

00:11:03,360 --> 00:11:10,830
probably going to look a little familiar

00:11:05,960 --> 00:11:13,050
extensibility I think one of the things

00:11:10,830 --> 00:11:14,880
that we see a tread monk all the time is

00:11:13,050 --> 00:11:16,850
that the best tech doesn't always win I

00:11:14,880 --> 00:11:20,220
think I think we tend to think of

00:11:16,850 --> 00:11:22,230
programmers and engineers as highly

00:11:20,220 --> 00:11:24,840
rational beings and we're going to pick

00:11:22,230 --> 00:11:26,670
the biggest Estus most reliable tool and

00:11:24,840 --> 00:11:28,830
we're going to find the exact right tool

00:11:26,670 --> 00:11:30,750
for the job and we're going to choose

00:11:28,830 --> 00:11:33,660
the technologically superior solution

00:11:30,750 --> 00:11:35,040
and what we see time and time again is

00:11:33,660 --> 00:11:37,680
that just just not the case the best

00:11:35,040 --> 00:11:39,300
tech doesn't always win and it's not

00:11:37,680 --> 00:11:40,420
just what we're delivering but how we're

00:11:39,300 --> 00:11:41,829
delivering it

00:11:40,420 --> 00:11:43,930
things are packaged and how they're

00:11:41,829 --> 00:11:46,420
consumed and how they're accessible are

00:11:43,930 --> 00:11:51,310
extraordinarily important elements of

00:11:46,420 --> 00:11:53,230
adoption and the library compatibility

00:11:51,310 --> 00:11:56,139
and dependency management story of

00:11:53,230 --> 00:11:58,389
Python is notoriously difficult for

00:11:56,139 --> 00:12:00,880
people to manage the composability is a

00:11:58,389 --> 00:12:02,920
huge thing for making the language

00:12:00,880 --> 00:12:05,860
general-purpose and making the language

00:12:02,920 --> 00:12:08,290
do what people need the complexity that

00:12:05,860 --> 00:12:09,639
comes with that is a cost and that is

00:12:08,290 --> 00:12:12,670
something that is hard for people to

00:12:09,639 --> 00:12:15,010
manage and so there are definitely cases

00:12:12,670 --> 00:12:17,019
to be made for people who are trying to

00:12:15,010 --> 00:12:18,160
get started being able to get started

00:12:17,019 --> 00:12:21,730
with something that's a little bit

00:12:18,160 --> 00:12:23,949
easier to get set up sometimes and it

00:12:21,730 --> 00:12:27,160
that ties into the mastery component so

00:12:23,949 --> 00:12:28,810
I saw this the other day for remembering

00:12:27,160 --> 00:12:30,490
people who are getting started in the

00:12:28,810 --> 00:12:32,680
school year and you're just getting

00:12:30,490 --> 00:12:35,920
started in your computer science class

00:12:32,680 --> 00:12:37,630
and you're doing that first assignment

00:12:35,920 --> 00:12:40,149
and you can't even get all of your

00:12:37,630 --> 00:12:44,890
Python libraries installed correctly and

00:12:40,149 --> 00:12:46,660
does that mean does that mean I'm not

00:12:44,890 --> 00:12:47,709
going to be good at computer science and

00:12:46,660 --> 00:12:51,670
maybe do I need to pick a different

00:12:47,709 --> 00:12:53,890
major like there's this thing of trying

00:12:51,670 --> 00:12:56,380
to bring people on board and recognizing

00:12:53,890 --> 00:12:59,050
that it can be really hard for people to

00:12:56,380 --> 00:13:01,060
get through that first step and Python

00:12:59,050 --> 00:13:02,800
sometimes does not make that easy for

00:13:01,060 --> 00:13:05,350
people so even though it's a fantastic

00:13:02,800 --> 00:13:07,120
first language to learn and it has a

00:13:05,350 --> 00:13:09,190
learning curve once you get started the

00:13:07,120 --> 00:13:11,350
environment issues that people encounter

00:13:09,190 --> 00:13:13,690
getting started in Python are not

00:13:11,350 --> 00:13:16,420
insignificant and so anything we can do

00:13:13,690 --> 00:13:18,610
to try to help people get through that

00:13:16,420 --> 00:13:21,699
first setup thing is going to be an

00:13:18,610 --> 00:13:23,079
amazing thing for everybody in terms of

00:13:21,699 --> 00:13:24,610
both building the confidence of people

00:13:23,079 --> 00:13:27,399
who are coming into the language

00:13:24,610 --> 00:13:28,690
community and also making Python

00:13:27,399 --> 00:13:30,870
something that's more easily

00:13:28,690 --> 00:13:33,279
approachable for as it also says a

00:13:30,870 --> 00:13:34,600
professional like very experienced

00:13:33,279 --> 00:13:39,670
engineers who like had something that

00:13:34,600 --> 00:13:41,829
has benefits all over the place and I

00:13:39,670 --> 00:13:44,380
love this phrase so it's from Andrew

00:13:41,829 --> 00:13:47,199
clay Shafer he was with pivotal and it's

00:13:44,380 --> 00:13:49,810
minimum time to dopamine and part of it

00:13:47,199 --> 00:13:51,939
is like a yak shaving story like how

00:13:49,810 --> 00:13:53,529
much time are you spending doing fiddly

00:13:51,939 --> 00:13:54,939
tasks that kind of don't bare a

00:13:53,529 --> 00:13:59,079
relationship with what you're supposed

00:13:54,939 --> 00:14:00,790
to be working on and or sometimes it's

00:13:59,079 --> 00:14:02,350
thinking you're doing the right activity

00:14:00,790 --> 00:14:04,329
but you're focused on the wrong thing I

00:14:02,350 --> 00:14:06,790
think one of the things about dependency

00:14:04,329 --> 00:14:09,699
management is it can feel very ashamed

00:14:06,790 --> 00:14:11,199
for a lot of people and so that minimum

00:14:09,699 --> 00:14:12,670
time to bill Pamina of like how long

00:14:11,199 --> 00:14:14,379
does it take for you to do something

00:14:12,670 --> 00:14:16,059
cool how long does it take for you to

00:14:14,379 --> 00:14:17,639
get started and get excited about the

00:14:16,059 --> 00:14:20,889
project that you're working on is

00:14:17,639 --> 00:14:22,720
something that I think is great to keep

00:14:20,889 --> 00:14:24,040
in mind not just for programming

00:14:22,720 --> 00:14:26,230
languages in general but all of our

00:14:24,040 --> 00:14:28,660
projects like how how quickly can we get

00:14:26,230 --> 00:14:30,309
people to the point where they're

00:14:28,660 --> 00:14:32,259
feeling like they're successful with the

00:14:30,309 --> 00:14:33,670
technology and that's huge and so I

00:14:32,259 --> 00:14:35,079
think I think that's part of the

00:14:33,670 --> 00:14:36,550
dependency management story but also

00:14:35,079 --> 00:14:38,470
just like a broader narrative that I

00:14:36,550 --> 00:14:40,660
think is really important to think about

00:14:38,470 --> 00:14:46,620
in tech is helping people feel

00:14:40,660 --> 00:14:50,439
successful and this ties into efficiency

00:14:46,620 --> 00:14:54,040
Python is notoriously not the speediest

00:14:50,439 --> 00:14:56,709
language it's memory consumption and

00:14:54,040 --> 00:15:02,949
like resource footprint especially

00:14:56,709 --> 00:15:05,350
multi-threaded are not like the thing

00:15:02,949 --> 00:15:07,389
about interpreted languages is that the

00:15:05,350 --> 00:15:09,790
the gap between an interpreted language

00:15:07,389 --> 00:15:12,160
and a compiled language is getting

00:15:09,790 --> 00:15:15,040
smaller as hardware improves over time

00:15:12,160 --> 00:15:18,819
it's becoming less of an issue that said

00:15:15,040 --> 00:15:21,579
python was designed in a world that was

00:15:18,819 --> 00:15:23,980
not a multi-threaded world and the

00:15:21,579 --> 00:15:26,110
global interpreter global global

00:15:23,980 --> 00:15:27,910
interpreter lock sorry about that and

00:15:26,110 --> 00:15:30,730
it's me that hard for python to take

00:15:27,910 --> 00:15:33,279
advantage of concurrency it's um

00:15:30,730 --> 00:15:35,230
and one of the things that we think is

00:15:33,279 --> 00:15:37,449
interesting I'm not sure if I have a

00:15:35,230 --> 00:15:39,490
definitive position here but you hear a

00:15:37,449 --> 00:15:41,889
lot of chatter around the end of Moore's

00:15:39,490 --> 00:15:44,800
law and chips are going to start

00:15:41,889 --> 00:15:48,089
reaching a point in which it we're just

00:15:44,800 --> 00:15:50,139
not going to have the same speed price

00:15:48,089 --> 00:15:52,120
trade-offs that we've seen in the past

00:15:50,139 --> 00:15:53,139
and a lot of the new improvement in

00:15:52,120 --> 00:15:54,730
computing is coming around

00:15:53,139 --> 00:15:57,249
multi-threading and so what does that

00:15:54,730 --> 00:16:00,399
mean for Python if the way that we are

00:15:57,249 --> 00:16:02,860
improving our compute power changes how

00:16:00,399 --> 00:16:05,050
the language actually interacts with the

00:16:02,860 --> 00:16:07,210
we're underneath sigh I think that's

00:16:05,050 --> 00:16:08,770
definitely debatable and I'd be happy to

00:16:07,210 --> 00:16:10,570
talk with any of you after that but I

00:16:08,770 --> 00:16:12,700
think that's definitely an area where

00:16:10,570 --> 00:16:14,350
sometimes it leads people to move to

00:16:12,700 --> 00:16:16,030
language like go or something like that

00:16:14,350 --> 00:16:20,650
where it's designed to be more multi

00:16:16,030 --> 00:16:21,970
threaded none of my photos are going to

00:16:20,650 --> 00:16:27,220
load sorry so this is a picture of a

00:16:21,970 --> 00:16:29,650
beautiful fashion show one one of the

00:16:27,220 --> 00:16:32,530
things that I think is interesting is

00:16:29,650 --> 00:16:34,420
that we as a community tend to think of

00:16:32,530 --> 00:16:37,120
ourselves as very rational but we are

00:16:34,420 --> 00:16:39,010
very driven by trends and I think anyone

00:16:37,120 --> 00:16:41,800
who has heard the word kubernetes is

00:16:39,010 --> 00:16:44,860
probably going to agree with me there we

00:16:41,800 --> 00:16:47,470
have things that tend to take over the

00:16:44,860 --> 00:16:49,390
industry in terms of our attention span

00:16:47,470 --> 00:16:51,940
and in terms of how we think about

00:16:49,390 --> 00:16:54,370
things and one of the things that we

00:16:51,940 --> 00:16:57,190
have seen at red monk is a resurgence

00:16:54,370 --> 00:16:58,930
and statically typed languages so if we

00:16:57,190 --> 00:17:01,180
look at and I'll show that chart again

00:16:58,930 --> 00:17:03,490
but aesthetically type languages

00:17:01,180 --> 00:17:05,200
especially ones go typescript and rust

00:17:03,490 --> 00:17:08,410
are ones that we've seen huge amount of

00:17:05,200 --> 00:17:11,140
community traction for it means that the

00:17:08,410 --> 00:17:12,940
errors and so dynamically typed language

00:17:11,140 --> 00:17:16,120
errors show up at run time and we're not

00:17:12,940 --> 00:17:18,430
enforcing data type type safety can make

00:17:16,120 --> 00:17:20,950
it a little bit faster to debug and spot

00:17:18,430 --> 00:17:22,660
errors and type safety is something that

00:17:20,950 --> 00:17:24,730
we've seen in a lot of our fastest

00:17:22,660 --> 00:17:28,870
growing language communities so just

00:17:24,730 --> 00:17:30,970
something to be aware of and then

00:17:28,870 --> 00:17:33,070
finally choice I think one of the things

00:17:30,970 --> 00:17:35,470
that's interesting and we admittedly

00:17:33,070 --> 00:17:39,520
don't see this a lot but we see it some

00:17:35,470 --> 00:17:41,830
is so I'm sure some of you I'm sure

00:17:39,520 --> 00:17:44,260
everybody in here knows somebody who has

00:17:41,830 --> 00:17:49,600
refused to upgrade from 2.7 is that

00:17:44,260 --> 00:17:51,790
accurate so the thing that's interesting

00:17:49,600 --> 00:17:55,780
is the lack of backwards compatibility

00:17:51,790 --> 00:17:58,720
between 3 and 2.7 and the rise of more

00:17:55,780 --> 00:18:00,580
specialized languages means that if

00:17:58,720 --> 00:18:02,170
we're there are some shops where they're

00:18:00,580 --> 00:18:04,420
starting to refactor apps and it's not a

00:18:02,170 --> 00:18:06,790
guaranteed upgrade path to say on Python

00:18:04,420 --> 00:18:08,860
in that instance so sometimes people are

00:18:06,790 --> 00:18:10,990
refactoring to different languages

00:18:08,860 --> 00:18:13,540
rather than refactoring Python to 7 to

00:18:10,990 --> 00:18:14,830
Python 3 so just something to be aware

00:18:13,540 --> 00:18:17,020
of

00:18:14,830 --> 00:18:22,110
but again it's not a common use case

00:18:17,020 --> 00:18:25,210
that's something that is it's out there

00:18:22,110 --> 00:18:27,750
so I wanted to talk some given that

00:18:25,210 --> 00:18:31,960
python is such a general use language

00:18:27,750 --> 00:18:34,510
there are any number of languages that

00:18:31,960 --> 00:18:36,460
we could talk about in terms of

00:18:34,510 --> 00:18:38,289
alternative language choices I just

00:18:36,460 --> 00:18:41,760
picked a handful but there we can talk

00:18:38,289 --> 00:18:45,880
about a whole bunch of them so this is

00:18:41,760 --> 00:18:50,789
as a user of our I don't feel too bad

00:18:45,880 --> 00:18:55,840
about this cuz this made me laugh I

00:18:50,789 --> 00:18:57,640
think that there's a lot of there's a

00:18:55,840 --> 00:19:00,640
lot of choice and I think one of the

00:18:57,640 --> 00:19:02,350
things to remember about technology as

00:19:00,640 --> 00:19:04,000
technology is to trade-offs that's

00:19:02,350 --> 00:19:05,350
that's the discussion that should be

00:19:04,000 --> 00:19:09,760
happening anytime that we're making

00:19:05,350 --> 00:19:11,740
technology choices is that the world is

00:19:09,760 --> 00:19:15,490
not simple black and white all the time

00:19:11,740 --> 00:19:16,659
it's it's nuanced and it's a discussion

00:19:15,490 --> 00:19:19,000
of trying to understand what you're

00:19:16,659 --> 00:19:22,929
trying to accomplish and what you're

00:19:19,000 --> 00:19:25,270
trading to get that and so this is the

00:19:22,929 --> 00:19:28,480
chart will maybe come back to this a few

00:19:25,270 --> 00:19:33,330
times but this is that the language I

00:19:28,480 --> 00:19:37,780
want to talk about first is R so R is

00:19:33,330 --> 00:19:40,809
for better or worse very entrenched in

00:19:37,780 --> 00:19:42,909
the academic community so they have a

00:19:40,809 --> 00:19:44,830
clarity of purpose and design and then a

00:19:42,909 --> 00:19:46,720
user base that's getting people started

00:19:44,830 --> 00:19:48,309
early so I think a lot of the times if

00:19:46,720 --> 00:19:50,559
you're taking a stats class in

00:19:48,309 --> 00:19:53,590
particular you're probably learning are

00:19:50,559 --> 00:19:58,299
rather than Python and you can see some

00:19:53,590 --> 00:20:00,640
of this in the number of libraries that

00:19:58,299 --> 00:20:03,460
get ported between the languages we see

00:20:00,640 --> 00:20:05,230
more coming from R into Python rather

00:20:03,460 --> 00:20:09,820
than vice-versa so if you like the

00:20:05,230 --> 00:20:12,190
ggplot world and it's move over to

00:20:09,820 --> 00:20:14,559
python we haven't seen quite as similar

00:20:12,190 --> 00:20:16,330
and significant movement backwards and

00:20:14,559 --> 00:20:18,940
so i think it's interesting that some of

00:20:16,330 --> 00:20:20,950
the functionality of our is something

00:20:18,940 --> 00:20:22,750
that people are desiring in other places

00:20:20,950 --> 00:20:24,250
and that's something to be aware of and

00:20:22,750 --> 00:20:26,320
something that you can do it like

00:20:24,250 --> 00:20:27,470
pythons extensible so like if you want

00:20:26,320 --> 00:20:30,230
to start moving

00:20:27,470 --> 00:20:32,600
our users over maybe at some of those

00:20:30,230 --> 00:20:36,289
library supports that we can start

00:20:32,600 --> 00:20:38,390
building into Python typescript

00:20:36,289 --> 00:20:41,720
typescript is one of the fastest growing

00:20:38,390 --> 00:20:44,059
languages that we've seen so it's right

00:20:41,720 --> 00:20:46,730
there at number 12 and it has

00:20:44,059 --> 00:20:50,150
skyrocketed in the last couple of years

00:20:46,730 --> 00:20:52,520
and some of the things that have driven

00:20:50,150 --> 00:20:54,679
that is that it has optional type

00:20:52,520 --> 00:20:56,390
checking and it's dropping compatible

00:20:54,679 --> 00:20:57,890
JavaScript so it gets to take advantage

00:20:56,390 --> 00:21:00,169
of the ubiquity of the JavaScript

00:20:57,890 --> 00:21:03,140
JavaScript environment with some of

00:21:00,169 --> 00:21:05,150
those type safety features and I read an

00:21:03,140 --> 00:21:06,980
article earlier this year from guida

00:21:05,150 --> 00:21:09,260
where he was doing an interview where he

00:21:06,980 --> 00:21:11,559
expressed the desire to have some of

00:21:09,260 --> 00:21:14,539
that similar optional type safety

00:21:11,559 --> 00:21:16,370
explored and explored in the Python

00:21:14,539 --> 00:21:18,380
world I don't know where that project

00:21:16,370 --> 00:21:20,600
stands but I do think that that would be

00:21:18,380 --> 00:21:22,850
something that would be interesting for

00:21:20,600 --> 00:21:25,070
language communities to explore I'm

00:21:22,850 --> 00:21:28,730
given the current trend around static

00:21:25,070 --> 00:21:32,330
typing and then go-go is an interesting

00:21:28,730 --> 00:21:34,940
one because it's it's designed for a

00:21:32,330 --> 00:21:36,650
specialized to use case it's fast and

00:21:34,940 --> 00:21:38,450
it's flexible it's kind of back in

00:21:36,650 --> 00:21:39,770
design you start to see chatter around

00:21:38,450 --> 00:21:42,470
it being a scripting language I'm not

00:21:39,770 --> 00:21:44,960
sure where that has come from III think

00:21:42,470 --> 00:21:46,880
of it as a back-end language it has a

00:21:44,960 --> 00:21:49,610
lot of the same library compatibility

00:21:46,880 --> 00:21:52,940
dependency management issues that python

00:21:49,610 --> 00:21:54,799
has and it also has an added concern

00:21:52,940 --> 00:21:57,039
around kind of the independence of the

00:21:54,799 --> 00:21:59,870
community from the vendor it being a

00:21:57,039 --> 00:22:02,120
Google based project so I think that

00:21:59,870 --> 00:22:04,820
it's interesting I think it has the

00:22:02,120 --> 00:22:06,799
community has its own challenges but it

00:22:04,820 --> 00:22:08,150
does come up for us a lot in terms of

00:22:06,799 --> 00:22:10,940
people who are looking for something

00:22:08,150 --> 00:22:12,380
that is fast and flexible so those are

00:22:10,940 --> 00:22:15,039
just a few we can definitely talk about

00:22:12,380 --> 00:22:17,809
more if people have questions and then

00:22:15,039 --> 00:22:21,110
last thing I wanted to highlight as a

00:22:17,809 --> 00:22:23,390
potential area of concern is community

00:22:21,110 --> 00:22:25,340
and I know I just told you all great

00:22:23,390 --> 00:22:28,159
things I think that there at a broader

00:22:25,340 --> 00:22:30,380
level was some concern about guido

00:22:28,159 --> 00:22:32,630
stepping down as benevolent dictator for

00:22:30,380 --> 00:22:36,140
life particularly the way he stepped

00:22:32,630 --> 00:22:37,610
down because of his concerns around how

00:22:36,140 --> 00:22:40,260
to drive the future of the community and

00:22:37,610 --> 00:22:42,360
some of the different competing forces

00:22:40,260 --> 00:22:44,070
or frustrating to him and so I think

00:22:42,360 --> 00:22:45,960
that there is some concern about the

00:22:44,070 --> 00:22:49,760
future direction of Python and what that

00:22:45,960 --> 00:22:51,870
means for where the language is headed

00:22:49,760 --> 00:22:54,570
again I'm not gonna have a picture this

00:22:51,870 --> 00:23:01,080
is a picture of a Mentos truck about to

00:22:54,570 --> 00:23:03,030
crash into a Diet Coke truck the goal is

00:23:01,080 --> 00:23:05,640
I don't want anyone to think this is the

00:23:03,030 --> 00:23:08,700
end of the world it's not we're not

00:23:05,640 --> 00:23:10,320
about to we're not about to have the

00:23:08,700 --> 00:23:12,690
Python community fall to try your

00:23:10,320 --> 00:23:15,720
ubiquitous you are powerful language you

00:23:12,690 --> 00:23:19,080
are flexible you are general-purpose and

00:23:15,720 --> 00:23:21,720
you have a really devoted set of

00:23:19,080 --> 00:23:24,059
community and a devoted set of

00:23:21,720 --> 00:23:25,470
enterprise which I use in a loving way

00:23:24,059 --> 00:23:26,970
thoughts of people don't use the

00:23:25,470 --> 00:23:30,240
enterprise lobby but having an

00:23:26,970 --> 00:23:31,950
enterprise base is like you Python it's

00:23:30,240 --> 00:23:33,720
not going anywhere so all this wasn't

00:23:31,950 --> 00:23:37,020
the sky is falling talk so please don't

00:23:33,720 --> 00:23:38,460
take it that way but I did want you to

00:23:37,020 --> 00:23:40,650
just be aware of the broader landscape

00:23:38,460 --> 00:23:46,460
and what's going on around language

00:23:40,650 --> 00:23:50,160
community and python is beloved it's

00:23:46,460 --> 00:23:51,660
going to be here for a while and we just

00:23:50,160 --> 00:23:54,360
have to think about how it is that we

00:23:51,660 --> 00:23:56,669
can move together to help drive the

00:23:54,360 --> 00:23:59,700
language forward and I think part of

00:23:56,669 --> 00:24:03,480
that is thinking about what we can do it

00:23:59,700 --> 00:24:06,570
can feel kind of arbitrary to talk about

00:24:03,480 --> 00:24:08,730
all these like broad landscape things to

00:24:06,570 --> 00:24:11,940
a group of people who are here on a

00:24:08,730 --> 00:24:13,230
Sunday way to go but hey what you can do

00:24:11,940 --> 00:24:16,200
is you can be that community I think

00:24:13,230 --> 00:24:18,690
long stur long term like sustainable

00:24:16,200 --> 00:24:21,030
competitive advantage rarely comes from

00:24:18,690 --> 00:24:22,770
technology it comes from people and it

00:24:21,030 --> 00:24:25,049
comes from the community of people here

00:24:22,770 --> 00:24:27,240
and I think that you are a big part of

00:24:25,049 --> 00:24:28,950
what makes this language usable what

00:24:27,240 --> 00:24:31,679
makes it approachable what makes it fun

00:24:28,950 --> 00:24:33,960
for people is all of the work that we do

00:24:31,679 --> 00:24:36,120
to bring other people along with us and

00:24:33,960 --> 00:24:38,520
so that would be my call to action for

00:24:36,120 --> 00:24:40,169
all of you today is to continue being

00:24:38,520 --> 00:24:42,630
the community that people want to join

00:24:40,169 --> 00:24:45,690
and I would be happy to take any

00:24:42,630 --> 00:24:47,130
questions what types of customers does

00:24:45,690 --> 00:24:48,570
Redman cab and what are the most

00:24:47,130 --> 00:24:51,290
important insights that they're getting

00:24:48,570 --> 00:24:51,290
out of your reports

00:24:51,610 --> 00:24:57,670
we're kind of a mix of like a research

00:24:54,880 --> 00:24:59,950
firm and consulting firm so we consult

00:24:57,670 --> 00:25:01,450
with technology companies and we the

00:24:59,950 --> 00:25:04,540
reason they they want to consult with us

00:25:01,450 --> 00:25:07,120
is because we do research and so we have

00:25:04,540 --> 00:25:09,010
customers that range from like single

00:25:07,120 --> 00:25:11,590
person technology startups all the way

00:25:09,010 --> 00:25:13,450
up to like the like hyper scale cloud

00:25:11,590 --> 00:25:17,770
providers we have we have a wide range

00:25:13,450 --> 00:25:21,220
of people but in general it's trying to

00:25:17,770 --> 00:25:24,610
help everybody understand not just how

00:25:21,220 --> 00:25:25,960
to if I think high level is how to talk

00:25:24,610 --> 00:25:27,430
about your technology in a way that's

00:25:25,960 --> 00:25:31,360
compelling to people and different

00:25:27,430 --> 00:25:32,650
people need a different messaging and so

00:25:31,360 --> 00:25:34,000
it's trying to help them how do I

00:25:32,650 --> 00:25:35,800
connect with the developer community

00:25:34,000 --> 00:25:37,450
versus how do I connect with like a

00:25:35,800 --> 00:25:39,160
middle manager versus how do I connect

00:25:37,450 --> 00:25:41,200
with the CTO it's gonna take different

00:25:39,160 --> 00:25:43,150
tactics to reach those and so it's

00:25:41,200 --> 00:25:48,010
helping people kind of understand how to

00:25:43,150 --> 00:25:50,470
do that great talk

00:25:48,010 --> 00:25:52,390
my question has a long wind-up I promise

00:25:50,470 --> 00:25:55,840
to obey the Brandon Rhoads rule no

00:25:52,390 --> 00:25:58,600
question Redmont gets to look at lots of

00:25:55,840 --> 00:26:02,080
languages and then lots of segments

00:25:58,600 --> 00:26:04,570
where languages are used Russell Keith

00:26:02,080 --> 00:26:05,290
McGee gave a talk at PyCon about black

00:26:04,570 --> 00:26:07,300
swans

00:26:05,290 --> 00:26:10,480
Lucas long you gave a similar talk at

00:26:07,300 --> 00:26:12,460
Pyland inium about Python 2020 and both

00:26:10,480 --> 00:26:15,280
of them said a number of things

00:26:12,460 --> 00:26:19,540
including Python might not be

00:26:15,280 --> 00:26:21,340
competitive on modern web without

00:26:19,540 --> 00:26:25,180
getting into what that means and whether

00:26:21,340 --> 00:26:27,490
it's true if it were true how impactful

00:26:25,180 --> 00:26:32,410
would it be to pythons position on your

00:26:27,490 --> 00:26:36,100
graph if it became less used for web I

00:26:32,410 --> 00:26:40,270
think one part of that is that modern

00:26:36,100 --> 00:26:43,210
web is increasingly related to mobile

00:26:40,270 --> 00:26:45,550
and Python does not have a notoriously

00:26:43,210 --> 00:26:47,940
great footprint on mobile and so I think

00:26:45,550 --> 00:26:50,650
having a better mobile story would be

00:26:47,940 --> 00:26:54,190
tremendously helpful for that web story

00:26:50,650 --> 00:26:55,570
and I think that it's it's interesting

00:26:54,190 --> 00:26:57,130
because it's multi-purpose but I

00:26:55,570 --> 00:26:59,050
definitely do think of Python more as a

00:26:57,130 --> 00:27:02,009
back-end language more than a front-end

00:26:59,050 --> 00:27:04,029
language and so I think

00:27:02,009 --> 00:27:05,710
things like typescript where you're

00:27:04,029 --> 00:27:08,049
gonna have some of that interesting

00:27:05,710 --> 00:27:11,139
interplay with JavaScript I think that

00:27:08,049 --> 00:27:13,419
you can see typescript having a clear

00:27:11,139 --> 00:27:16,600
future story than something like Python

00:27:13,419 --> 00:27:19,809
in the web space but again I don't think

00:27:16,600 --> 00:27:21,809
pythons going anywhere overall it's just

00:27:19,809 --> 00:27:30,369
one of those things where it might be

00:27:21,809 --> 00:27:32,860
more of a challenge can't believe

00:27:30,369 --> 00:27:33,909
nobody's gonna call me out on CSS being

00:27:32,860 --> 00:27:37,139
in the language rink you know I was

00:27:33,909 --> 00:27:37,139
expecting to find

00:27:38,300 --> 00:27:56,180
[Applause]

00:27:43,010 --> 00:27:56,180

YouTube URL: https://www.youtube.com/watch?v=D8JvpiOvYJ8


