Title: Kristie Wirth: Stats Don't Have to Be Scary: Automatic a b Test Analysis Using Python
Publication date: 2019-10-22
Playlist: PyColorado 2019
Description: 
	Learn how my workplace manages to analyze dozens of concurrent A/B tests with millions of data points! Iâ€™ll discuss our previous manual analysis process, some things that have changed, and do a down-to-earth walkthrough of how you too can use Python to automate analyzing your tests.
Captions: 
	00:00:01,310 --> 00:00:46,790
[Music]

00:00:43,630 --> 00:00:48,530
all right so I am so excited to talk to

00:00:46,790 --> 00:00:51,800
you all today as mentioned I'm Christy

00:00:48,530 --> 00:00:53,210
Wirth I'm gonna talk about a/b testing

00:00:51,800 --> 00:00:55,820
which is a topic I'm really passionate

00:00:53,210 --> 00:00:57,950
about there is a lot of potential for

00:00:55,820 --> 00:00:59,780
how a/b testing can benefit a bunch of

00:00:57,950 --> 00:01:01,880
different businesses so I hope it's

00:00:59,780 --> 00:01:03,430
useful to you the other part of this

00:01:01,880 --> 00:01:05,840
that I'm really excited about is

00:01:03,430 --> 00:01:08,660
demystifying statistics I think they can

00:01:05,840 --> 00:01:10,820
have a sort of feel of scariness or

00:01:08,660 --> 00:01:12,110
complication that I'd want to really

00:01:10,820 --> 00:01:14,150
bring it down to earth and make all of

00:01:12,110 --> 00:01:20,360
this accessible for anyone whatever your

00:01:14,150 --> 00:01:22,009
role is but before I talk about my fun

00:01:20,360 --> 00:01:24,560
tool of how to automate some of the

00:01:22,009 --> 00:01:26,869
aspects of ami testing first I want to

00:01:24,560 --> 00:01:30,290
talk about what a/b testing is and why

00:01:26,869 --> 00:01:32,960
you might even want to do a/b testing so

00:01:30,290 --> 00:01:36,229
a B testing if you're not familiar it's

00:01:32,960 --> 00:01:37,790
when you have a a website with multiple

00:01:36,229 --> 00:01:39,500
versions of something and you want to

00:01:37,790 --> 00:01:42,530
test out some new feature that you have

00:01:39,500 --> 00:01:44,420
you want to see if users see this new

00:01:42,530 --> 00:01:46,700
feature will they be more likely to sign

00:01:44,420 --> 00:01:50,509
up or upgrade or whatever metric is

00:01:46,700 --> 00:01:53,030
important to your business sometimes

00:01:50,509 --> 00:01:55,729
when I talk about a/b testing to various

00:01:53,030 --> 00:01:58,640
engineers or people at my business they

00:01:55,729 --> 00:02:00,560
go Christy do I really have to do this

00:01:58,640 --> 00:02:03,350
fancy data thing that you're so excited

00:02:00,560 --> 00:02:06,080
about you know I have this feature I

00:02:03,350 --> 00:02:08,030
know it's gonna be great so how about I

00:02:06,080 --> 00:02:10,550
just did install this cool new thing on

00:02:08,030 --> 00:02:13,100
the website and then I don't know maybe

00:02:10,550 --> 00:02:14,630
we can collect some data before and

00:02:13,100 --> 00:02:16,660
after and then you can do your data

00:02:14,630 --> 00:02:20,690
magic and they'll be good enough right

00:02:16,660 --> 00:02:22,610
or maybe what you can do is I'll install

00:02:20,690 --> 00:02:24,950
the feature and we'll just see who does

00:02:22,610 --> 00:02:26,720
things with the feature or not and then

00:02:24,950 --> 00:02:29,450
we can compare those people and we can

00:02:26,720 --> 00:02:33,890
see the positive impact no a/b testing

00:02:29,450 --> 00:02:36,290
needed let's keep it simple but the

00:02:33,890 --> 00:02:38,390
problem with those approaches is that it

00:02:36,290 --> 00:02:40,849
doesn't actually give you the ability to

00:02:38,390 --> 00:02:42,800
say causal statements which is really

00:02:40,849 --> 00:02:45,530
important so what I mean what do I mean

00:02:42,800 --> 00:02:47,330
by causal statements causal statements

00:02:45,530 --> 00:02:50,150
are things like this when you want to

00:02:47,330 --> 00:02:52,670
say that installing my fancy new feature

00:02:50,150 --> 00:02:55,250
should lead to a 5 to 10

00:02:52,670 --> 00:02:56,599
an increase in an upgrade rate you

00:02:55,250 --> 00:02:58,520
probably want to say something like that

00:02:56,599 --> 00:02:59,660
not all the time but a lot of times when

00:02:58,520 --> 00:03:00,920
you have a new feature you want to be

00:02:59,660 --> 00:03:03,860
able to brag about it you want to

00:03:00,920 --> 00:03:05,090
understand the impact but you can't say

00:03:03,860 --> 00:03:08,480
those kinds of statements without a

00:03:05,090 --> 00:03:10,250
formal a be test so the reason that is

00:03:08,480 --> 00:03:14,239
is that if you do something like a

00:03:10,250 --> 00:03:15,650
before and after comparison the problem

00:03:14,239 --> 00:03:18,170
with that is that something else might

00:03:15,650 --> 00:03:20,510
have changed in that time frame that led

00:03:18,170 --> 00:03:22,489
to any effects that you're seeing so you

00:03:20,510 --> 00:03:24,260
can't attribute it to feature X that

00:03:22,489 --> 00:03:25,700
you've installed on the website it could

00:03:24,260 --> 00:03:28,790
be something else that happened during

00:03:25,700 --> 00:03:30,830
that time period if you do something

00:03:28,790 --> 00:03:33,170
like what users interact with the

00:03:30,830 --> 00:03:34,880
feature versus those who don't then

00:03:33,170 --> 00:03:37,730
you're missing out on any potential

00:03:34,880 --> 00:03:39,200
differences between those groups there

00:03:37,730 --> 00:03:40,760
could be something inherently different

00:03:39,200 --> 00:03:43,400
about users who interact with your

00:03:40,760 --> 00:03:45,950
feature versus users who don't maybe

00:03:43,400 --> 00:03:48,470
users who interact with whatever feature

00:03:45,950 --> 00:03:50,180
you've created are already more engaged

00:03:48,470 --> 00:03:52,190
with your website so they're already

00:03:50,180 --> 00:03:54,290
gonna be more likely to sign up or

00:03:52,190 --> 00:03:55,730
whatever you're measuring so you're not

00:03:54,290 --> 00:03:58,579
really measuring the impact of your

00:03:55,730 --> 00:04:00,440
feature and you might be thinking that

00:03:58,579 --> 00:04:01,970
some of that sounds like semantics why

00:04:00,440 --> 00:04:04,700
do you care about any of that

00:04:01,970 --> 00:04:07,220
and the reason all of that matters is

00:04:04,700 --> 00:04:10,489
because if you think that your feature

00:04:07,220 --> 00:04:12,500
caused some effect like higher signup

00:04:10,489 --> 00:04:14,900
rates but that's not actually what

00:04:12,500 --> 00:04:16,459
happened when you go on and install your

00:04:14,900 --> 00:04:18,470
cool new feature for all of the users

00:04:16,459 --> 00:04:20,870
you're not gonna see that effect

00:04:18,470 --> 00:04:22,760
continue over time so you'll have a

00:04:20,870 --> 00:04:24,140
project that seemed really great and

00:04:22,760 --> 00:04:25,850
then it flops when you actually start

00:04:24,140 --> 00:04:28,520
looking at the data so that's no good

00:04:25,850 --> 00:04:30,280
you don't want that the other part of

00:04:28,520 --> 00:04:32,900
that is that it can lead to

00:04:30,280 --> 00:04:35,990
misunderstandings about your users so

00:04:32,900 --> 00:04:38,030
you go on to pursue further projects

00:04:35,990 --> 00:04:41,000
based on what you think has an effect

00:04:38,030 --> 00:04:42,770
but really you didn't do an a/b test you

00:04:41,000 --> 00:04:44,570
don't know for sure you're doing a bunch

00:04:42,770 --> 00:04:46,610
of projects that don't lead to the

00:04:44,570 --> 00:04:51,800
effect that you're hoping for that's no

00:04:46,610 --> 00:04:53,840
good for example let's say you had the

00:04:51,800 --> 00:04:55,940
idea that you didn't do an a/b test

00:04:53,840 --> 00:04:58,190
because you said that who needs data

00:04:55,940 --> 00:05:00,260
I just want to install things so what

00:04:58,190 --> 00:05:02,660
you did is you figured out that you

00:05:00,260 --> 00:05:05,810
think adding a button to your web page

00:05:02,660 --> 00:05:07,910
sign-up rates well that's great so you

00:05:05,810 --> 00:05:11,330
add all of the buttons to all of your

00:05:07,910 --> 00:05:14,060
web pages that's and then all of a

00:05:11,330 --> 00:05:16,160
sudden you realize hmm the sign-up rates

00:05:14,060 --> 00:05:17,600
didn't move at all and maybe you sunk

00:05:16,160 --> 00:05:19,040
all of this time and effort and

00:05:17,600 --> 00:05:21,260
engineering into making the coolest

00:05:19,040 --> 00:05:23,270
buttons and somehow you're not seeing an

00:05:21,260 --> 00:05:24,710
impact at all so that's no good that's a

00:05:23,270 --> 00:05:27,230
somewhat silly example but you can

00:05:24,710 --> 00:05:29,600
imagine in other situations how you

00:05:27,230 --> 00:05:33,580
might pursue different projects based on

00:05:29,600 --> 00:05:33,580
misunderstandings and not see in effect

00:05:34,030 --> 00:05:37,820
so there's a lot of components to a/b

00:05:36,380 --> 00:05:39,770
testing I'm gonna go through some of the

00:05:37,820 --> 00:05:41,840
the logic of how it works and then later

00:05:39,770 --> 00:05:43,760
go through some of the code that it does

00:05:41,840 --> 00:05:46,130
some of this and how you might automate

00:05:43,760 --> 00:05:48,050
it yourself but let's start at the real

00:05:46,130 --> 00:05:50,330
basics what do you need to do in an a/b

00:05:48,050 --> 00:05:51,730
test well you need to assign people two

00:05:50,330 --> 00:05:53,750
conditions

00:05:51,730 --> 00:05:55,400
you've got a visitor come to your

00:05:53,750 --> 00:05:57,800
webpage and you need to put them into

00:05:55,400 --> 00:05:59,690
some sort of bucket so we've got the

00:05:57,800 --> 00:06:01,670
treatment bucket the treatment bucket is

00:05:59,690 --> 00:06:04,280
for people who see the fancy new feature

00:06:01,670 --> 00:06:06,740
and so they get to interact with that

00:06:04,280 --> 00:06:08,660
thing you've created and then you've

00:06:06,740 --> 00:06:10,220
also got the control bucket that is the

00:06:08,660 --> 00:06:12,170
group of people who are seeing the old

00:06:10,220 --> 00:06:15,770
version without anything fancy new

00:06:12,170 --> 00:06:17,330
installed right and how do you divide

00:06:15,770 --> 00:06:18,490
people into those buckets that's

00:06:17,330 --> 00:06:20,720
something you might need to think about

00:06:18,490 --> 00:06:23,120
that can be as simple as half-and-half

00:06:20,720 --> 00:06:25,040
you just sort of randomly put people in

00:06:23,120 --> 00:06:26,690
some of each but one thing you might not

00:06:25,040 --> 00:06:28,430
think about is the the risk of your

00:06:26,690 --> 00:06:30,470
experiment and I'd urge you to think

00:06:28,430 --> 00:06:33,410
about that as well so if you've done a

00:06:30,470 --> 00:06:35,900
huge redesign to your pricing page that

00:06:33,410 --> 00:06:37,669
could be amazing for users but it also

00:06:35,900 --> 00:06:39,890
could have a really unintended negative

00:06:37,669 --> 00:06:42,230
effect that all of a sudden people are

00:06:39,890 --> 00:06:44,030
not upgrading your revenues going down

00:06:42,230 --> 00:06:46,100
that's no good so you might want to do

00:06:44,030 --> 00:06:48,350
something more conservative where you

00:06:46,100 --> 00:06:50,930
only show 30% of new visitors to your

00:06:48,350 --> 00:06:52,760
website this new feature or maybe you're

00:06:50,930 --> 00:06:55,400
really worried you're kind of nervous

00:06:52,760 --> 00:06:56,660
just show 10% then if you realize

00:06:55,400 --> 00:06:58,669
partway through the experiment you're

00:06:56,660 --> 00:07:00,320
like completely ruining your upgrade

00:06:58,669 --> 00:07:05,000
rate then you can just stop it which is

00:07:00,320 --> 00:07:08,210
great to accomplish all of this stuff it

00:07:05,000 --> 00:07:09,710
might sound simple on hand but there's a

00:07:08,210 --> 00:07:11,419
couple things you need to consider of

00:07:09,710 --> 00:07:13,310
how you actually put people into buckets

00:07:11,419 --> 00:07:15,830
as well as just this percentages I'm

00:07:13,310 --> 00:07:18,050
talking about one thing that's important

00:07:15,830 --> 00:07:19,880
to have the same person always go to the

00:07:18,050 --> 00:07:21,800
same condition in a given experiment

00:07:19,880 --> 00:07:23,780
because you don't want your users to

00:07:21,800 --> 00:07:25,880
have this mismatched confusing

00:07:23,780 --> 00:07:27,410
experience it can be jarring if suddenly

00:07:25,880 --> 00:07:29,150
they're seeing the new feature one day

00:07:27,410 --> 00:07:31,250
the old feature the other day they're

00:07:29,150 --> 00:07:32,960
just completely getting flip flopped on

00:07:31,250 --> 00:07:35,180
your website that can be confusing so we

00:07:32,960 --> 00:07:37,000
don't want to do that but it's also

00:07:35,180 --> 00:07:39,770
really important that users see

00:07:37,000 --> 00:07:40,970
different things in different tests so

00:07:39,770 --> 00:07:42,500
if you have a bunch of tests you're

00:07:40,970 --> 00:07:44,720
running at the same time and we always

00:07:42,500 --> 00:07:47,390
have a bunch of hey be test going then

00:07:44,720 --> 00:07:49,310
it's really important that the same user

00:07:47,390 --> 00:07:50,510
isn't always in the treatment group for

00:07:49,310 --> 00:07:52,130
example they're not always seeing the

00:07:50,510 --> 00:07:54,500
new feature because then you run into

00:07:52,130 --> 00:07:56,900
this problem of well this person had

00:07:54,500 --> 00:07:58,580
higher signup rates which is great but

00:07:56,900 --> 00:08:00,590
was it this feature or was it this other

00:07:58,580 --> 00:08:02,390
test or was it this other test you can't

00:08:00,590 --> 00:08:04,070
really separate those if they're all

00:08:02,390 --> 00:08:08,090
related so you don't want them related

00:08:04,070 --> 00:08:10,010
at all so how do we do all that well we

00:08:08,090 --> 00:08:11,930
came up with a sort of clever process of

00:08:10,010 --> 00:08:14,750
how we assign people into conditions

00:08:11,930 --> 00:08:17,330
involved some math but stay with me it's

00:08:14,750 --> 00:08:19,640
gonna be great all right so we've got a

00:08:17,330 --> 00:08:22,580
given a/b test and that runs on

00:08:19,640 --> 00:08:25,250
something called an interstate so let's

00:08:22,580 --> 00:08:28,550
say we've got an a/b test it's running

00:08:25,250 --> 00:08:30,410
on interstate 227 and the interstate is

00:08:28,550 --> 00:08:32,420
a random prime number I'll tell you why

00:08:30,410 --> 00:08:36,380
that's important later but this is a B

00:08:32,420 --> 00:08:37,850
test 227 then we've got our interstate

00:08:36,380 --> 00:08:41,600
for that test and we split it up into

00:08:37,850 --> 00:08:43,100
lanes so here we decided we wanted half

00:08:41,600 --> 00:08:45,830
in half in each condition which is

00:08:43,100 --> 00:08:48,410
pretty standard and we put half in the

00:08:45,830 --> 00:08:50,870
control group so 0 to 113 that's about

00:08:48,410 --> 00:08:52,370
half of the interstate and then the

00:08:50,870 --> 00:08:53,810
other lane is going to be our treatment

00:08:52,370 --> 00:08:55,790
lane they're gonna see the fancy new

00:08:53,810 --> 00:08:59,600
feature that's about the other half of

00:08:55,790 --> 00:09:01,640
the interstate so we've got a visitor

00:08:59,600 --> 00:09:03,620
come along to our website and this

00:09:01,640 --> 00:09:06,200
little guy has an identity idea of

00:09:03,620 --> 00:09:08,090
something five six six four we're gonna

00:09:06,200 --> 00:09:11,540
sign him to a condition how do we do

00:09:08,090 --> 00:09:14,900
that well we do a little math we take

00:09:11,540 --> 00:09:18,530
the identity ID modulo the interstate

00:09:14,900 --> 00:09:21,590
and we get a number back and that number

00:09:18,530 --> 00:09:23,600
216 is in the treatment range of numbers

00:09:21,590 --> 00:09:25,190
so this person goes to the treatment and

00:09:23,600 --> 00:09:26,990
you might be thinking that sounds a

00:09:25,190 --> 00:09:29,089
needlessly complicated why are you doing

00:09:26,990 --> 00:09:32,029
this it's because of the reasons I

00:09:29,089 --> 00:09:33,829
and earlier so we want the same person

00:09:32,029 --> 00:09:36,470
in the same condition in the same test

00:09:33,829 --> 00:09:39,110
so what's important here is that in this

00:09:36,470 --> 00:09:40,790
math we include the identity ID as part

00:09:39,110 --> 00:09:43,220
of it so the same person is always going

00:09:40,790 --> 00:09:45,199
to go to the same place the other part

00:09:43,220 --> 00:09:47,360
of this math is we have the interstate

00:09:45,199 --> 00:09:49,189
in there so as long as our tests are

00:09:47,360 --> 00:09:50,389
running on different interstates then

00:09:49,189 --> 00:09:53,629
people are going to end up in different

00:09:50,389 --> 00:09:55,069
conditions and different tests in in

00:09:53,629 --> 00:09:57,589
case you're wondering what a modulo is

00:09:55,069 --> 00:09:59,209
that's when you do the division and then

00:09:57,589 --> 00:10:00,499
that's the remainder term left over if

00:09:59,209 --> 00:10:03,620
you remember long division in high

00:10:00,499 --> 00:10:05,689
school wherever you learned it so the

00:10:03,620 --> 00:10:08,930
module apart isn't horribly important

00:10:05,689 --> 00:10:10,819
that's more so just some sort of math

00:10:08,930 --> 00:10:12,800
that does something randomly that

00:10:10,819 --> 00:10:14,480
involves the identity ID and the

00:10:12,800 --> 00:10:16,730
interstate to accomplish the stuff that

00:10:14,480 --> 00:10:18,680
I talked about earlier the one other

00:10:16,730 --> 00:10:20,180
important point here is that the

00:10:18,680 --> 00:10:22,069
interstate is a prime number which I

00:10:20,180 --> 00:10:23,600
said earlier and that's important

00:10:22,069 --> 00:10:25,459
because if you do evenly divisible

00:10:23,600 --> 00:10:27,230
numbers then you get a lot of the same

00:10:25,459 --> 00:10:29,149
results you get a lot of people in the

00:10:27,230 --> 00:10:31,939
same conditions so we're just trying to

00:10:29,149 --> 00:10:34,429
do that randomization while also doing

00:10:31,939 --> 00:10:37,699
consistent in the same ways that we want

00:10:34,429 --> 00:10:39,170
it to be lots of things to consider so

00:10:37,699 --> 00:10:40,999
this is great we've got this fun little

00:10:39,170 --> 00:10:43,670
process it does all the things we wanted

00:10:40,999 --> 00:10:47,029
to do fantastic but the problem with

00:10:43,670 --> 00:10:49,819
this is that we made all of this really

00:10:47,029 --> 00:10:51,740
manual for a while so we told our poor

00:10:49,819 --> 00:10:54,410
engineers that they had to remember what

00:10:51,740 --> 00:10:57,259
prime numbers are they had to figure out

00:10:54,410 --> 00:10:58,939
something about a modulo and then they

00:10:57,259 --> 00:11:00,740
had to put people in these different

00:10:58,939 --> 00:11:02,990
buckets based on all that fancy math

00:11:00,740 --> 00:11:04,790
they were doing and remember these are

00:11:02,990 --> 00:11:06,529
the same engineers that were not even

00:11:04,790 --> 00:11:07,069
wanting to do an a/b test in the first

00:11:06,529 --> 00:11:09,110
place

00:11:07,069 --> 00:11:11,120
so and we didn't do a great job of

00:11:09,110 --> 00:11:12,740
explaining what I just told you now we

00:11:11,120 --> 00:11:14,120
should have told them that but we didn't

00:11:12,740 --> 00:11:16,040
tell them all those things and so

00:11:14,120 --> 00:11:17,990
engineers were confused rightfully so

00:11:16,040 --> 00:11:19,699
and they were putting different tests in

00:11:17,990 --> 00:11:22,189
the same interstate which defeats the

00:11:19,699 --> 00:11:24,259
whole process just mixing up various

00:11:22,189 --> 00:11:27,139
parts of the the arithmetic that needed

00:11:24,259 --> 00:11:30,019
to be set up it was very confusing so

00:11:27,139 --> 00:11:31,939
what I decided to do was automate a lot

00:11:30,019 --> 00:11:36,110
of this process and make the setup a bit

00:11:31,939 --> 00:11:38,990
easier what I did is I built a web app

00:11:36,110 --> 00:11:40,910
that accomplishes all of the logic that

00:11:38,990 --> 00:11:42,920
I just talked about but instead of

00:11:40,910 --> 00:11:45,799
manually having people code this in

00:11:42,920 --> 00:11:47,420
it generates code for you and what they

00:11:45,799 --> 00:11:49,730
could do is literally go to this web app

00:11:47,420 --> 00:11:51,949
call their experiment whatever they want

00:11:49,730 --> 00:11:54,290
to call it set up the percentage they

00:11:51,949 --> 00:11:55,579
want in the control which is based on

00:11:54,290 --> 00:11:58,519
all their talked about risk that I

00:11:55,579 --> 00:12:00,109
mentioned earlier it's often 50/50 but

00:11:58,519 --> 00:12:03,699
if it's something risky you might want a

00:12:00,109 --> 00:12:06,980
higher percentage in the control and

00:12:03,699 --> 00:12:09,109
that gave them some code back that was

00:12:06,980 --> 00:12:10,639
automatically generated they didn't have

00:12:09,109 --> 00:12:12,439
to worry about interstates they could

00:12:10,639 --> 00:12:14,660
totally forget that concept leave that

00:12:12,439 --> 00:12:16,549
to the data scientists and instead they

00:12:14,660 --> 00:12:18,619
get some code that works they can

00:12:16,549 --> 00:12:21,169
literally just copy and paste this it's

00:12:18,619 --> 00:12:23,980
got the name of the test set up in the

00:12:21,169 --> 00:12:27,230
format that we want so it's consistent

00:12:23,980 --> 00:12:28,819
also has the lanes defined nicely based

00:12:27,230 --> 00:12:30,369
on that control percentage but they

00:12:28,819 --> 00:12:32,419
don't even need to think about it and

00:12:30,369 --> 00:12:34,220
the interstate is automatically

00:12:32,419 --> 00:12:35,569
determined and I check to make sure that

00:12:34,220 --> 00:12:41,449
it's something that's not already being

00:12:35,569 --> 00:12:43,129
used and as a bonus I generated some

00:12:41,449 --> 00:12:44,720
front-end code too because you need to

00:12:43,129 --> 00:12:47,720
toggle the feature off and on in some

00:12:44,720 --> 00:12:49,429
fashion this is a bit more work in

00:12:47,720 --> 00:12:51,019
progress you need to add a bunch of

00:12:49,429 --> 00:12:52,910
stuff to actually toggle your feature

00:12:51,019 --> 00:12:57,009
but it's a great jumping-off point and

00:12:52,910 --> 00:12:57,009
it ensures some consistency in our code

00:12:57,819 --> 00:13:04,009
all right so I've talked a lot about the

00:13:01,790 --> 00:13:05,989
setup process but the big part here

00:13:04,009 --> 00:13:08,749
that's really exciting is the analysis

00:13:05,989 --> 00:13:10,610
portion of things so how does that look

00:13:08,749 --> 00:13:12,949
well first we need to actually get the

00:13:10,610 --> 00:13:15,649
data from the test somehow and this is

00:13:12,949 --> 00:13:16,610
going to involve a bunch of school which

00:13:15,649 --> 00:13:18,169
I'm not going to show you I'm going to

00:13:16,610 --> 00:13:20,389
show you the logic behind the sequel and

00:13:18,169 --> 00:13:22,489
you can look at that later so we've got

00:13:20,389 --> 00:13:25,369
a person come to our web page we need to

00:13:22,489 --> 00:13:27,230
assign them to some condition we do the

00:13:25,369 --> 00:13:28,759
fancy process behind the scenes that I

00:13:27,230 --> 00:13:30,319
talked about with the modulo and the

00:13:28,759 --> 00:13:31,759
lanes in the interstates and such and

00:13:30,319 --> 00:13:34,160
this person ends up in the treatment

00:13:31,759 --> 00:13:36,559
condition the point when the person

00:13:34,160 --> 00:13:38,959
appears in our study is called the birth

00:13:36,559 --> 00:13:41,329
event and that's some term I'll use a

00:13:38,959 --> 00:13:43,009
couple times later you can remember it's

00:13:41,329 --> 00:13:45,559
the birth event because they are born

00:13:43,009 --> 00:13:47,419
into the study they if they don't have a

00:13:45,559 --> 00:13:51,049
birth event they do not exist in our a/b

00:13:47,419 --> 00:13:52,819
test but once they are born into the

00:13:51,049 --> 00:13:55,819
study then we assign them to a condition

00:13:52,819 --> 00:13:56,660
based on that process we have someone

00:13:55,819 --> 00:13:58,160
else born in

00:13:56,660 --> 00:14:00,290
to the study this is the moment they

00:13:58,160 --> 00:14:03,379
visit the webpage with just before the

00:14:00,290 --> 00:14:04,759
new feature gets toggled off and on this

00:14:03,379 --> 00:14:07,579
person goes to the control condition

00:14:04,759 --> 00:14:10,639
based on all of that logic and so on and

00:14:07,579 --> 00:14:12,649
so forth we have a bunch of visitors the

00:14:10,639 --> 00:14:16,819
other important term here is the death

00:14:12,649 --> 00:14:18,379
event so the death event is the points

00:14:16,819 --> 00:14:20,839
that we care about the metric of

00:14:18,379 --> 00:14:22,850
interest so we want to know if someone's

00:14:20,839 --> 00:14:25,040
going to sign up more often with the new

00:14:22,850 --> 00:14:28,100
feature or upgrade or whatever feature

00:14:25,040 --> 00:14:29,480
you metric you care about so the death

00:14:28,100 --> 00:14:31,790
event is going to be the first time that

00:14:29,480 --> 00:14:33,740
someone ever does that event the first

00:14:31,790 --> 00:14:35,990
time they sign up and you can remember

00:14:33,740 --> 00:14:37,670
that sort of terminology because the

00:14:35,990 --> 00:14:41,329
death event is when they leave the study

00:14:37,670 --> 00:14:43,430
so if you have a if you sign up then we

00:14:41,329 --> 00:14:45,620
are no longer care what you do after

00:14:43,430 --> 00:14:50,300
that point you've reached the conclusion

00:14:45,620 --> 00:14:52,639
of the study it's also important to set

00:14:50,300 --> 00:14:54,879
a time frame for how we're going to

00:14:52,639 --> 00:14:58,120
calculate whether people convert or not

00:14:54,879 --> 00:15:00,589
so here we set a time frame of one day

00:14:58,120 --> 00:15:03,170
so what we want to know is do people

00:15:00,589 --> 00:15:04,339
have that death event within the time

00:15:03,170 --> 00:15:06,910
period of one day

00:15:04,339 --> 00:15:09,259
and this is a concept called censoring

00:15:06,910 --> 00:15:10,880
this is really important because we need

00:15:09,259 --> 00:15:13,220
to give everyone an equal chance of

00:15:10,880 --> 00:15:15,079
converting so if we have someone who

00:15:13,220 --> 00:15:17,630
just came to our webpage couple hours

00:15:15,079 --> 00:15:19,040
ago versus someone who came several

00:15:17,630 --> 00:15:21,709
months ago they're not going to have

00:15:19,040 --> 00:15:23,870
equal chances of signing up so instead

00:15:21,709 --> 00:15:26,209
it's important to set timeframes that we

00:15:23,870 --> 00:15:28,009
check for each individual person so once

00:15:26,209 --> 00:15:30,620
they've first visited the webpage on

00:15:28,009 --> 00:15:35,120
that given page with the feature we give

00:15:30,620 --> 00:15:36,380
them one day to sign up or not if they

00:15:35,120 --> 00:15:40,069
don't convert within that time frame

00:15:36,380 --> 00:15:42,680
that we don't count them the other thing

00:15:40,069 --> 00:15:44,300
I care about is exclusions so let's say

00:15:42,680 --> 00:15:47,600
I found out this person was an employee

00:15:44,300 --> 00:15:49,069
it's a peer then I would exclude them

00:15:47,600 --> 00:15:50,630
entirely from the study because I'm not

00:15:49,069 --> 00:15:54,139
going to include employees they're just

00:15:50,630 --> 00:15:56,149
testing stuff I also exclude spam users

00:15:54,139 --> 00:15:59,480
I don't want those people in the a/b

00:15:56,149 --> 00:16:01,519
testing as well as people who had their

00:15:59,480 --> 00:16:05,300
death event happened before their first

00:16:01,519 --> 00:16:07,630
birth of en't because if they already

00:16:05,300 --> 00:16:09,840
signed up they might not do it again

00:16:07,630 --> 00:16:11,610
sometimes they might do that death

00:16:09,840 --> 00:16:13,650
multiple times but people who've already

00:16:11,610 --> 00:16:16,170
done it once looked different probably

00:16:13,650 --> 00:16:18,210
than people who've done it the for the

00:16:16,170 --> 00:16:20,190
first time so we want to just only look

00:16:18,210 --> 00:16:22,260
at people who have not done the first

00:16:20,190 --> 00:16:23,760
thing yet they have not ever signed up

00:16:22,260 --> 00:16:29,370
we want to see if our feature is gonna

00:16:23,760 --> 00:16:31,200
influence that in addition we also

00:16:29,370 --> 00:16:34,530
exclude people who haven't had the first

00:16:31,200 --> 00:16:36,210
the entire time period yet so if I've

00:16:34,530 --> 00:16:38,190
set my time period at one day and

00:16:36,210 --> 00:16:40,410
someone only appeared in my study 5

00:16:38,190 --> 00:16:42,480
hours ago I'm gonna actually exclude

00:16:40,410 --> 00:16:43,800
them entirely at least for now because

00:16:42,480 --> 00:16:45,240
they don't have the same chance as

00:16:43,800 --> 00:16:47,070
everyone else in the study we really

00:16:45,240 --> 00:16:48,450
want to give people equal chances to be

00:16:47,070 --> 00:16:50,340
comparing apples to apples

00:16:48,450 --> 00:16:51,900
so we'll just completely take them out

00:16:50,340 --> 00:16:56,700
if it's been what less than one day

00:16:51,900 --> 00:16:59,010
since they appeared the next thing I've

00:16:56,700 --> 00:17:00,780
got to do is compute the time from the

00:16:59,010 --> 00:17:02,970
birth event to the death event so when

00:17:00,780 --> 00:17:05,160
they first appear in the webpage to

00:17:02,970 --> 00:17:06,870
whether or not the point when they sign

00:17:05,160 --> 00:17:09,600
up or upgrade or whatever I'm looking at

00:17:06,870 --> 00:17:11,610
if you see a null here that's because

00:17:09,600 --> 00:17:15,360
they never did that thing so that's

00:17:11,610 --> 00:17:16,740
fairly self-explanatory but what I've

00:17:15,360 --> 00:17:18,510
got to do with those is then mark them

00:17:16,740 --> 00:17:20,370
as successes or failures did they

00:17:18,510 --> 00:17:22,440
convert or not did they sign up or not

00:17:20,370 --> 00:17:26,100
and that's gonna be based on the time

00:17:22,440 --> 00:17:27,870
frame plus the censoring concept here

00:17:26,100 --> 00:17:31,590
pretty self-explanatory this person

00:17:27,870 --> 00:17:35,460
signed up within an hour success this

00:17:31,590 --> 00:17:38,780
person in two hours success this person

00:17:35,460 --> 00:17:41,280
never signed up clearly not a success

00:17:38,780 --> 00:17:43,110
this person signed up but it took him a

00:17:41,280 --> 00:17:45,720
really long time and since we have that

00:17:43,110 --> 00:17:47,910
time frame we're blindly looking at that

00:17:45,720 --> 00:17:50,220
time frame cut off and that's it so they

00:17:47,910 --> 00:17:53,790
signed out signed up outside the time

00:17:50,220 --> 00:17:57,630
frame cutting them out entirely it's so

00:17:53,790 --> 00:17:59,850
on and so forth and ultimately we're

00:17:57,630 --> 00:18:01,290
just gonna tally those numbers so we

00:17:59,850 --> 00:18:03,750
have our tree mate condition we've got

00:18:01,290 --> 00:18:05,730
our control we've got two people that

00:18:03,750 --> 00:18:08,070
converted one people who one person who

00:18:05,730 --> 00:18:10,050
didn't and so on and so forth now we

00:18:08,070 --> 00:18:13,830
have the data from our actual tests

00:18:10,050 --> 00:18:16,980
we're done right ah not quite that

00:18:13,830 --> 00:18:19,140
simple I want to bring us back to the

00:18:16,980 --> 00:18:21,930
main question of what we're trying to

00:18:19,140 --> 00:18:23,340
answer by doing an a/b test I want to

00:18:21,930 --> 00:18:25,470
know ultimately

00:18:23,340 --> 00:18:27,210
if I install some feature will it have

00:18:25,470 --> 00:18:28,710
an effect that's what you really want to

00:18:27,210 --> 00:18:30,810
know that's why you're doing an a/b test

00:18:28,710 --> 00:18:33,780
and not just installing it and ignoring

00:18:30,810 --> 00:18:35,580
the data entirely and what you might

00:18:33,780 --> 00:18:38,250
think is that you can just look at the

00:18:35,580 --> 00:18:39,570
results we calculated the counts and and

00:18:38,250 --> 00:18:40,730
figure it out from there what we would

00:18:39,570 --> 00:18:43,260
expect to see

00:18:40,730 --> 00:18:46,230
but what's challenging is that what you

00:18:43,260 --> 00:18:48,120
saw in the a/b test is at a particular

00:18:46,230 --> 00:18:49,530
moment in time a particular group of

00:18:48,120 --> 00:18:50,940
people and there's always some

00:18:49,530 --> 00:18:53,010
uncertainty that's what we like to talk

00:18:50,940 --> 00:18:55,230
about in statistics is uncertainty right

00:18:53,010 --> 00:18:57,180
and if you install this feature you're

00:18:55,230 --> 00:18:58,890
not gonna see exactly what you saw on

00:18:57,180 --> 00:19:02,100
the test you're gonna see something

00:18:58,890 --> 00:19:04,050
maybe similar ish so how do we actually

00:19:02,100 --> 00:19:06,000
figure out a prediction of what you're

00:19:04,050 --> 00:19:08,760
gonna see when you install it because

00:19:06,000 --> 00:19:10,530
that's what matters you knowing the data

00:19:08,760 --> 00:19:12,360
from the actual test you've done those

00:19:10,530 --> 00:19:14,190
counts you've gotten your fancy sequel

00:19:12,360 --> 00:19:14,750
set up you know who's converted and who

00:19:14,190 --> 00:19:17,940
hasn't

00:19:14,750 --> 00:19:19,890
but what actual conversion rates led to

00:19:17,940 --> 00:19:22,530
that that's the part that's a little

00:19:19,890 --> 00:19:24,960
tricky if we got two successes and one

00:19:22,530 --> 00:19:27,300
failure what's the actual underlying

00:19:24,960 --> 00:19:31,440
conversion rate maybe it's something

00:19:27,300 --> 00:19:33,690
like 68 percent or maybe it's 65 percent

00:19:31,440 --> 00:19:35,580
you don't know for sure if you kept

00:19:33,690 --> 00:19:37,710
collecting more data you might see

00:19:35,580 --> 00:19:39,930
something that more approximates that

00:19:37,710 --> 00:19:42,660
true conversion rate but you're not ever

00:19:39,930 --> 00:19:44,820
certain so what we want to figure out is

00:19:42,660 --> 00:19:46,800
what's the underlying conversion rate

00:19:44,820 --> 00:19:48,960
and how can we use that to predict what

00:19:46,800 --> 00:19:50,580
might actually happen not just what we

00:19:48,960 --> 00:19:54,300
saw with this particular testing group

00:19:50,580 --> 00:19:56,460
of people so I'm gonna walk through some

00:19:54,300 --> 00:20:01,200
code here that illustrates this and I'll

00:19:56,460 --> 00:20:04,020
certainly share all my snippets later so

00:20:01,200 --> 00:20:06,150
I started with some code that generates

00:20:04,020 --> 00:20:07,680
a bunch of values these are some some

00:20:06,150 --> 00:20:09,960
beta distributions that generate a

00:20:07,680 --> 00:20:12,210
hundred thousand values and what I'm

00:20:09,960 --> 00:20:15,000
doing is generating this distribution of

00:20:12,210 --> 00:20:16,830
possible conversion rates because like I

00:20:15,000 --> 00:20:19,110
mentioned we know the data we saw the

00:20:16,830 --> 00:20:21,780
data that is effect but what we don't

00:20:19,110 --> 00:20:23,310
know is the actual conversion rate so

00:20:21,780 --> 00:20:24,990
what I want to do is generate a whole

00:20:23,310 --> 00:20:26,850
bunch of possibilities and a hundred

00:20:24,990 --> 00:20:30,360
thousand is just a lot that's why I

00:20:26,850 --> 00:20:32,220
chose that and ultimately I do this

00:20:30,360 --> 00:20:34,350
based on the data we saw the number of

00:20:32,220 --> 00:20:36,669
successes the number of failures and I

00:20:34,350 --> 00:20:39,080
do this for the control group and the

00:20:36,669 --> 00:20:44,149
100,000 possible conversion rates that

00:20:39,080 --> 00:20:46,370
led to the data we saw and then want to

00:20:44,149 --> 00:20:47,840
do is subtract those from each other

00:20:46,370 --> 00:20:49,909
that's it these are just lists of

00:20:47,840 --> 00:20:52,340
numbers of just possible conversion

00:20:49,909 --> 00:20:54,710
rates and what I do is do the treatment

00:20:52,340 --> 00:20:56,299
- they control and why I do that is

00:20:54,710 --> 00:20:57,740
because I want to see the effect of my

00:20:56,299 --> 00:21:00,049
feature right you want to be able to say

00:20:57,740 --> 00:21:03,710
something like it's an increase of 1% or

00:21:00,049 --> 00:21:05,149
a decrease of 5% and how you do that is

00:21:03,710 --> 00:21:07,519
by looking at the difference between the

00:21:05,149 --> 00:21:09,380
control who saw nothing related to your

00:21:07,519 --> 00:21:10,850
feature and the treatment group who saw

00:21:09,380 --> 00:21:12,500
something related to your feature and

00:21:10,850 --> 00:21:14,620
the difference between those is the

00:21:12,500 --> 00:21:17,360
effect you might expect when installing

00:21:14,620 --> 00:21:19,159
so I subtract them I want to say how

00:21:17,360 --> 00:21:21,260
much higher or lower was the treatment

00:21:19,159 --> 00:21:22,519
when they saw that fancy feature but I

00:21:21,260 --> 00:21:27,710
also want to know it for a hundred

00:21:22,519 --> 00:21:29,269
thousand possible realities and there's

00:21:27,710 --> 00:21:31,309
always something about uncertainty this

00:21:29,269 --> 00:21:32,960
is statistics after all and so what I'm

00:21:31,309 --> 00:21:35,870
gonna do is set my threshold of how

00:21:32,960 --> 00:21:37,730
comfortable with uncertainty I am so

00:21:35,870 --> 00:21:40,490
here I'm setting this point zero zero

00:21:37,730 --> 00:21:43,340
two which translates to I'm comfortable

00:21:40,490 --> 00:21:44,960
with 0.2 percent uncertainty or in other

00:21:43,340 --> 00:21:47,419
words I want to be ninety-nine point

00:21:44,960 --> 00:21:48,950
eight percent sure about this which is

00:21:47,419 --> 00:21:50,990
pretty darn sure but I like to be sure

00:21:48,950 --> 00:21:53,059
you'll never be a hundred percent sure

00:21:50,990 --> 00:21:57,049
right there's always that level of

00:21:53,059 --> 00:21:59,149
ambiguity and then we're going to do is

00:21:57,049 --> 00:22:01,039
figure out the actual prediction I have

00:21:59,149 --> 00:22:03,260
right I figured out how sure I am I've

00:22:01,039 --> 00:22:04,820
got some list of effects but I don't

00:22:03,260 --> 00:22:07,210
have an actual prediction I'm gonna tell

00:22:04,820 --> 00:22:10,970
somebody so I gotta get to that point so

00:22:07,210 --> 00:22:13,429
I take my a hundred thousand effects my

00:22:10,970 --> 00:22:15,830
hundred thousand differences things like

00:22:13,429 --> 00:22:17,630
put increased point three percent or

00:22:15,830 --> 00:22:19,639
decreased point two percent whatever

00:22:17,630 --> 00:22:23,090
I've got that list I sort them from

00:22:19,639 --> 00:22:25,340
smallest to largest and I shave point

00:22:23,090 --> 00:22:27,950
one percent off the bottom and point two

00:22:25,340 --> 00:22:29,360
percent off the top and that gives me if

00:22:27,950 --> 00:22:31,760
you're following along ninety-nine point

00:22:29,360 --> 00:22:33,950
eight percent of my list of values which

00:22:31,760 --> 00:22:38,539
is also how sure I want to be worked out

00:22:33,950 --> 00:22:41,149
and then ultimately I've got to

00:22:38,539 --> 00:22:43,220
translate that list of values I've got

00:22:41,149 --> 00:22:45,260
this sort of range I've computed but I

00:22:43,220 --> 00:22:47,000
want to make that easier for the users

00:22:45,260 --> 00:22:48,700
I'm hoping you all are sort of following

00:22:47,000 --> 00:22:50,890
along with me but this is still

00:22:48,700 --> 00:22:52,810
bit complex so I want to simplify it in

00:22:50,890 --> 00:22:56,290
the actual automatic a be testing app

00:22:52,810 --> 00:22:58,300
that I did so what I do is give an

00:22:56,290 --> 00:23:00,070
actual simple recommendation statement

00:22:58,300 --> 00:23:01,570
based on the range that I've calculated

00:23:00,070 --> 00:23:03,790
which is that ninety-nine point eight

00:23:01,570 --> 00:23:06,040
percent range and that looks a little

00:23:03,790 --> 00:23:07,870
different based on the goal so a lot of

00:23:06,040 --> 00:23:09,580
times you might want to increase

00:23:07,870 --> 00:23:13,930
something you want to increase sign up

00:23:09,580 --> 00:23:16,090
etc if that's your goal if that's the

00:23:13,930 --> 00:23:18,430
ideal let's say you got back at this

00:23:16,090 --> 00:23:20,140
range based on all that computing we did

00:23:18,430 --> 00:23:21,820
in the last slide your ninety-nine point

00:23:20,140 --> 00:23:24,820
eight percent sure that you will see

00:23:21,820 --> 00:23:26,950
something that is either a three percent

00:23:24,820 --> 00:23:27,370
increase all the way up to a 12 percent

00:23:26,950 --> 00:23:29,860
increase

00:23:27,370 --> 00:23:31,600
that's our range of possibilities that

00:23:29,860 --> 00:23:35,260
we're thinking might happen that's the

00:23:31,600 --> 00:23:39,160
the middle 99.8% values of that list of

00:23:35,260 --> 00:23:41,590
values based on that what I have the

00:23:39,160 --> 00:23:43,960
automatic a be testing app tell you is

00:23:41,590 --> 00:23:45,490
to install and that kind of checks out

00:23:43,960 --> 00:23:47,860
if you think about it right because if

00:23:45,490 --> 00:23:50,490
you want something to increase and the

00:23:47,860 --> 00:23:52,630
only thing that comes back is increases

00:23:50,490 --> 00:23:54,550
its we don't know exactly what the

00:23:52,630 --> 00:23:56,200
increase is it might be three percent it

00:23:54,550 --> 00:23:57,760
might be six percent it might be 12

00:23:56,200 --> 00:24:00,340
percent but those are all still

00:23:57,760 --> 00:24:02,050
successes that's what you want so if

00:24:00,340 --> 00:24:06,400
you're only gonna get increases then you

00:24:02,050 --> 00:24:08,860
should probably install done the things

00:24:06,400 --> 00:24:10,480
were that get a bit more money is when

00:24:08,860 --> 00:24:12,640
you have a mix of decreases and

00:24:10,480 --> 00:24:14,920
increases you want to increase signup

00:24:12,640 --> 00:24:17,560
rate or upgrade rate and I tell you that

00:24:14,920 --> 00:24:20,020
based on the calculations you could have

00:24:17,560 --> 00:24:21,850
a decrease of one percent all the way up

00:24:20,020 --> 00:24:23,140
to an increase of 4 percent

00:24:21,850 --> 00:24:26,650
it's gonna be somewhere in that range

00:24:23,140 --> 00:24:28,210
based on the data I saw that's

00:24:26,650 --> 00:24:30,310
ultimately where I say something a bit

00:24:28,210 --> 00:24:31,720
more nuanced of it's up to you which

00:24:30,310 --> 00:24:33,670
sounds a bit muddy but I try to give

00:24:31,720 --> 00:24:35,580
some recommendation as well of what you

00:24:33,670 --> 00:24:37,960
might do with that up to you parts

00:24:35,580 --> 00:24:40,180
because ultimately it does depend on a

00:24:37,960 --> 00:24:41,530
couple different factors if your feature

00:24:40,180 --> 00:24:43,870
is really easy to install

00:24:41,530 --> 00:24:46,240
you might just go for it if it affects

00:24:43,870 --> 00:24:48,280
only a small number of people that might

00:24:46,240 --> 00:24:50,790
be not a big deal to have some amount of

00:24:48,280 --> 00:24:53,620
risk there a slight risk of a decrease

00:24:50,790 --> 00:24:56,830
the other thing to notice is that the

00:24:53,620 --> 00:24:59,200
range is weighted on the positive end of

00:24:56,830 --> 00:25:01,060
the scale right there are more positive

00:24:59,200 --> 00:25:01,690
numbers in that range than there are

00:25:01,060 --> 00:25:04,539
negative

00:25:01,690 --> 00:25:07,779
numbers so it increases more likely than

00:25:04,539 --> 00:25:09,820
a decrease so based on that you might go

00:25:07,779 --> 00:25:11,769
ahead and install but it depends if it's

00:25:09,820 --> 00:25:13,659
a lot of work yeah maybe you wanted to

00:25:11,769 --> 00:25:15,490
be more sure so there's a lot of nuance

00:25:13,659 --> 00:25:17,500
here that's hard to completely bake into

00:25:15,490 --> 00:25:19,779
an automatic tool but you can give your

00:25:17,500 --> 00:25:23,200
users the tools to make those kinds of

00:25:19,779 --> 00:25:24,759
decisions for themselves and just a

00:25:23,200 --> 00:25:26,620
hammer that home ultimately I'm looking

00:25:24,759 --> 00:25:28,090
at the lower end of the scale here

00:25:26,620 --> 00:25:31,409
because I'm caring about what is the

00:25:28,090 --> 00:25:33,730
worst possible thing that could happen

00:25:31,409 --> 00:25:35,950
conversely the logic on the decrease is

00:25:33,730 --> 00:25:37,990
very similar just flipped right if you

00:25:35,950 --> 00:25:39,909
want to decrease rate of support tickets

00:25:37,990 --> 00:25:41,559
or something like that then you're just

00:25:39,909 --> 00:25:43,269
kind of doing the opposite here if

00:25:41,559 --> 00:25:46,149
you've got back a range that only

00:25:43,269 --> 00:25:48,129
includes decreases yeah you should

00:25:46,149 --> 00:25:49,840
install that's um ninety-nine point

00:25:48,129 --> 00:25:53,860
eight percent sure some sort of decrease

00:25:49,840 --> 00:25:56,679
will happen you should install it and if

00:25:53,860 --> 00:26:00,429
the range is mixed then as you might

00:25:56,679 --> 00:26:01,720
predict it's ultimately up to you and

00:26:00,429 --> 00:26:02,860
just to be clear here I'm kind of

00:26:01,720 --> 00:26:05,019
looking at the other end of the spectrum

00:26:02,860 --> 00:26:06,519
what's the highest possible thing you

00:26:05,019 --> 00:26:07,960
know if you if you were trying to

00:26:06,519 --> 00:26:09,730
decrease support tickets and you could

00:26:07,960 --> 00:26:12,129
possibly get an eight percent increase

00:26:09,730 --> 00:26:13,570
of support tickets that's pretty high

00:26:12,129 --> 00:26:18,759
you might not want to install that

00:26:13,570 --> 00:26:20,440
feature I think it's backfiring so how

00:26:18,759 --> 00:26:22,360
do I do all this in the fancy web app so

00:26:20,440 --> 00:26:23,649
I'll walk through what it actually looks

00:26:22,360 --> 00:26:25,179
like but it's got all of these

00:26:23,649 --> 00:26:26,669
underlying concepts that I was talking

00:26:25,179 --> 00:26:29,200
about

00:26:26,669 --> 00:26:31,210
so now someone if they want results from

00:26:29,200 --> 00:26:33,370
their a/b test instead of manually

00:26:31,210 --> 00:26:36,929
asking a data person to do this analysis

00:26:33,370 --> 00:26:39,399
every single time and having that

00:26:36,929 --> 00:26:41,559
process just be kind of slow and Pudsey

00:26:39,399 --> 00:26:43,059
they can go to a web app and specify the

00:26:41,559 --> 00:26:46,210
the name of the experiment they're

00:26:43,059 --> 00:26:47,950
running choose it from the list the

00:26:46,210 --> 00:26:49,419
death event so the metric they care

00:26:47,950 --> 00:26:53,590
about what do you want to have an impact

00:26:49,419 --> 00:26:58,149
on do you want to increase or decrease

00:26:53,590 --> 00:26:59,500
that thing and what is the time window

00:26:58,149 --> 00:27:01,299
that you care about

00:26:59,500 --> 00:27:03,009
that's the censoring concept we talked

00:27:01,299 --> 00:27:04,990
about you have to be able to give

00:27:03,009 --> 00:27:06,850
everyone that equal chance right so

00:27:04,990 --> 00:27:08,529
maybe maybe it's one day maybe it's

00:27:06,850 --> 00:27:11,919
seven days depends on what you're

00:27:08,529 --> 00:27:14,139
looking at and they get back some pretty

00:27:11,919 --> 00:27:15,310
easy to use data so here's just an

00:27:14,139 --> 00:27:16,870
instrumentation check

00:27:15,310 --> 00:27:18,880
just to make sure your experiments

00:27:16,870 --> 00:27:20,230
running as expected this has some

00:27:18,880 --> 00:27:21,790
information about what percent of people

00:27:20,230 --> 00:27:24,160
is seeing the new version versus the

00:27:21,790 --> 00:27:25,390
control if you expected that to be 50/50

00:27:24,160 --> 00:27:26,980
then you're in good shape otherwise

00:27:25,390 --> 00:27:29,710
maybe you did something wrong with the

00:27:26,980 --> 00:27:33,430
setup and that's just a date range of

00:27:29,710 --> 00:27:35,020
how long it's been running this is the

00:27:33,430 --> 00:27:37,150
most important part this is the analysis

00:27:35,020 --> 00:27:39,610
message this is combining all of the

00:27:37,150 --> 00:27:40,870
logic that we've talked about ultimately

00:27:39,610 --> 00:27:43,150
I give them a really bold simple

00:27:40,870 --> 00:27:47,800
statement with a fun emoji that they

00:27:43,150 --> 00:27:49,030
should install and if you're following

00:27:47,800 --> 00:27:50,830
along that's because of the range

00:27:49,030 --> 00:27:53,950
everything is that predicted range that

00:27:50,830 --> 00:27:56,830
we talked about the 99.8% sure here this

00:27:53,950 --> 00:27:59,290
results got all positive numbers only

00:27:56,830 --> 00:28:03,310
increases are expected so this is where

00:27:59,290 --> 00:28:05,350
the install definitely comes up the

00:28:03,310 --> 00:28:06,730
install maybe message is a bit more

00:28:05,350 --> 00:28:09,640
nuanced there's some extra information

00:28:06,730 --> 00:28:12,190
in here but ultimately I'm telling them

00:28:09,640 --> 00:28:13,660
it's up to you there's a lot of factors

00:28:12,190 --> 00:28:15,160
that can influence why you may or may

00:28:13,660 --> 00:28:17,050
not want to install this and it's hard

00:28:15,160 --> 00:28:19,960
to automatically tell you exactly what

00:28:17,050 --> 00:28:21,610
to do here but here's the information

00:28:19,960 --> 00:28:23,860
you can use to make that kind of

00:28:21,610 --> 00:28:25,120
decision and I want to empower our users

00:28:23,860 --> 00:28:26,620
to be able to make that decision for

00:28:25,120 --> 00:28:28,900
themselves based on the different

00:28:26,620 --> 00:28:31,060
situations they're in here there's a mix

00:28:28,900 --> 00:28:33,190
it slightly weighted on the positive

00:28:31,060 --> 00:28:35,140
side they're hoping for an increase you

00:28:33,190 --> 00:28:38,490
might want to install here but it

00:28:35,140 --> 00:28:38,490
depends on some other things as well

00:28:38,910 --> 00:28:43,120
I've got a bunch of resources I'll

00:28:41,200 --> 00:28:45,730
certainly share my slides link on slack

00:28:43,120 --> 00:28:47,800
this is hopefully all the building

00:28:45,730 --> 00:28:50,110
blocks you need to make a similar web

00:28:47,800 --> 00:28:51,640
app for yourself so I've got the

00:28:50,110 --> 00:28:53,860
condition assignment code that I walked

00:28:51,640 --> 00:28:55,690
through in great detail here the actual

00:28:53,860 --> 00:28:57,850
sequel that I use to get those

00:28:55,690 --> 00:28:59,620
conversion rates has a lot of complex

00:28:57,850 --> 00:29:02,320
logic that we talked about exclusions

00:28:59,620 --> 00:29:03,820
the time periods all of that how I've

00:29:02,320 --> 00:29:06,220
actually got it set up in my web app is

00:29:03,820 --> 00:29:08,200
it's a string of sequel and I literally

00:29:06,220 --> 00:29:10,660
run that sequel differently based on

00:29:08,200 --> 00:29:12,430
what people select in the form and the

00:29:10,660 --> 00:29:14,890
web app so just populate that string

00:29:12,430 --> 00:29:16,660
with different values I've got the

00:29:14,890 --> 00:29:18,460
analysis code that we talked about but

00:29:16,660 --> 00:29:20,290
it does all of the simulations and the

00:29:18,460 --> 00:29:22,390
various possible conversion rates and

00:29:20,290 --> 00:29:23,860
there's just some bonus code for if you

00:29:22,390 --> 00:29:25,840
have to work with redshift like I

00:29:23,860 --> 00:29:27,190
unfortunately do there's some snippets

00:29:25,840 --> 00:29:28,179
I've figured out of how to make that a

00:29:27,190 --> 00:29:32,320
little easier

00:29:28,179 --> 00:29:34,869
your sequel alright so ultimately that's

00:29:32,320 --> 00:29:36,249
my presentation I've got my LinkedIn and

00:29:34,869 --> 00:29:39,100
github if you want to follow along and

00:29:36,249 --> 00:29:40,990
some stuff I'm working on my five second

00:29:39,100 --> 00:29:42,909
plug for where I work is that I have a

00:29:40,990 --> 00:29:44,980
lovely company called zapier that I work

00:29:42,909 --> 00:29:46,779
at and we're hiring so ask me about that

00:29:44,980 --> 00:29:47,980
if you'd like or just ask me questions

00:29:46,779 --> 00:29:50,289
later I don't have time for questions

00:29:47,980 --> 00:29:52,389
right now but I would love to chat with

00:29:50,289 --> 00:29:53,400
anyone during the conference so thank

00:29:52,389 --> 00:29:57,890
you so much

00:29:53,400 --> 00:30:11,180
[Applause]

00:29:57,890 --> 00:30:11,180

YouTube URL: https://www.youtube.com/watch?v=PqtgudgMmII


