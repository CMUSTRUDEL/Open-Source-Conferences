Title: DjangoCon US 2015 - Wagtail - Yet Another Django CMS by Tom Dyson
Publication date: 2017-11-03
Playlist: DjangoCon US 2015
Description: 
	Wagtail - Yet Another Django CMS by Tom Dyson

Wagtail was launched in February 2014, shortly after its first implementation for the Royal College of Art. It has been enthusiastically received by Django developers around the world, and now powers sites for small businesses, UN agencies, and global brands in tech, political and entertainment sectors. Tom will explain why his agency decided to build a new CMS, share some lessons learned in running a growing open source project, and outline Wagtail's roadmap to version 2 and beyond.

Help us caption & translate this video!

http://amara.org/v/HH7a/
Captions: 
	00:00:15,710 --> 00:00:23,010
hi everyone as Edward I said I'm the my

00:00:20,550 --> 00:00:26,970
name is Tom Dyson and I run torch box

00:00:23,010 --> 00:00:28,289
which is a UK agency we do digital work

00:00:26,970 --> 00:00:31,740
for people making the world a better

00:00:28,289 --> 00:00:35,730
place people like Greenpeace Oxfam Red

00:00:31,740 --> 00:00:37,489
Cross United Nations we built a content

00:00:35,730 --> 00:00:39,450
management system called wagtail and

00:00:37,489 --> 00:00:43,020
that's what I'm going to talk about for

00:00:39,450 --> 00:00:45,480
the next 25 minutes this isn't a

00:00:43,020 --> 00:00:47,460
particularly technical talk so if you're

00:00:45,480 --> 00:00:49,800
not so interested in this story behind

00:00:47,460 --> 00:00:52,410
why tell then you can just pretend to

00:00:49,800 --> 00:00:54,390
listen and you can use the time

00:00:52,410 --> 00:00:58,609
productively by building a little

00:00:54,390 --> 00:01:02,579
wagtail site so inspired by Microsoft

00:00:58,609 --> 00:01:03,989
I've got a promotional idea and if you

00:01:02,579 --> 00:01:06,090
showing me a wagtail site that you've

00:01:03,989 --> 00:01:11,010
built by the end of today i'll post your

00:01:06,090 --> 00:01:12,659
t-shirt here's the one minute version to

00:01:11,010 --> 00:01:15,630
help you get started this gets you as

00:01:12,659 --> 00:01:17,820
far as the admin interface if you don't

00:01:15,630 --> 00:01:19,950
have a photographic memory you could

00:01:17,820 --> 00:01:23,159
take a photo of the screen although that

00:01:19,950 --> 00:01:26,100
would give the game away here's a link

00:01:23,159 --> 00:01:28,619
for the extended ten minute version this

00:01:26,100 --> 00:01:31,979
shows you how to build your own page

00:01:28,619 --> 00:01:34,049
models and templates if you get stuck

00:01:31,979 --> 00:01:38,130
with anything I'd be very happy to help

00:01:34,049 --> 00:01:40,009
you off to it and finally for the super

00:01:38,130 --> 00:01:42,720
lazy you could just try out the demo

00:01:40,009 --> 00:01:44,579
this is running on a little docker

00:01:42,720 --> 00:01:47,490
container on my colleagues five-dollar

00:01:44,579 --> 00:01:50,000
digitalocean box so maybe don't all try

00:01:47,490 --> 00:01:50,000
this one at once

00:01:51,159 --> 00:01:57,579
the back to the story torch box has been

00:01:54,979 --> 00:02:01,970
working with Django since the early days

00:01:57,579 --> 00:02:03,590
my my brief my fleeting claim to fame in

00:02:01,970 --> 00:02:07,780
the Django community is that I made the

00:02:03,590 --> 00:02:10,759
first ever Django screencast in 2005

00:02:07,780 --> 00:02:14,690
soon after that I hired Simon Wilson and

00:02:10,759 --> 00:02:17,269
Andrew Godwin in fact the first version

00:02:14,690 --> 00:02:20,750
of South was built by Andrew for a torch

00:02:17,269 --> 00:02:23,180
box project we have a team of developers

00:02:20,750 --> 00:02:26,209
a torch box using Django to build things

00:02:23,180 --> 00:02:28,069
like SMS apps delivering personalized

00:02:26,209 --> 00:02:30,650
agricultural information to subsistence

00:02:28,069 --> 00:02:32,660
farmers in Kenya ecological footprint

00:02:30,650 --> 00:02:35,930
calculators grant management systems

00:02:32,660 --> 00:02:38,630
tools for booking beds in care homes but

00:02:35,930 --> 00:02:40,730
for the last five years for big public

00:02:38,630 --> 00:02:47,709
content managed web sites we've mainly

00:02:40,730 --> 00:02:51,680
used Drupal as anyone here use Drupal

00:02:47,709 --> 00:02:55,130
this may be about half of you it's easy

00:02:51,680 --> 00:02:57,980
to be rude about Drupal but it's it's

00:02:55,130 --> 00:03:01,130
very powerful it it has an enormous

00:02:57,980 --> 00:03:03,049
community the ecosystem of modules and

00:03:01,130 --> 00:03:06,160
Drupal is probably as big as the

00:03:03,049 --> 00:03:10,010
ecosystem of Django applications and

00:03:06,160 --> 00:03:12,380
most importantly you don't get fired for

00:03:10,010 --> 00:03:14,780
choosing Drupal that's especially true

00:03:12,380 --> 00:03:17,930
in the nonprofit space where most of

00:03:14,780 --> 00:03:19,430
toolboxes clients come from and we've

00:03:17,930 --> 00:03:21,799
made some Drupal sites that we're really

00:03:19,430 --> 00:03:24,859
proud of particularly perhaps Oxford

00:03:21,799 --> 00:03:26,680
University and the Royal Institute of

00:03:24,859 --> 00:03:29,780
Foreign Affairs both of these are

00:03:26,680 --> 00:03:32,480
high-profile sites big sites with masses

00:03:29,780 --> 00:03:34,370
of content high traffic they work well

00:03:32,480 --> 00:03:37,609
for their users and lots of people say

00:03:34,370 --> 00:03:40,180
nice things about them but Drupal has

00:03:37,609 --> 00:03:40,180
some big flaws

00:03:40,600 --> 00:03:46,030
the first of these is that configuration

00:03:43,120 --> 00:03:47,620
happens in the database you can imagine

00:03:46,030 --> 00:03:54,120
why a developer think this is a good

00:03:47,620 --> 00:03:57,580
idea but it becomes very painful when

00:03:54,120 --> 00:03:59,500
you move from developer to staging and

00:03:57,580 --> 00:04:01,390
then production environments and then

00:03:59,500 --> 00:04:02,560
your client calls you in this lism

00:04:01,390 --> 00:04:04,600
there's a problem that you can't

00:04:02,560 --> 00:04:07,380
replicate because they've configured

00:04:04,600 --> 00:04:10,030
things differently to your version and

00:04:07,380 --> 00:04:13,540
on a similar point Drupal is too

00:04:10,030 --> 00:04:15,130
flexible the power that Drupal gives

00:04:13,540 --> 00:04:17,260
administrators and particularly around

00:04:15,130 --> 00:04:19,210
creating new content types who the user

00:04:17,260 --> 00:04:22,830
interface and generating columns and

00:04:19,210 --> 00:04:25,570
tables becomes pain for developers

00:04:22,830 --> 00:04:28,240
performance is an issue most Drupal

00:04:25,570 --> 00:04:31,960
sites rely heavily on varnish and that's

00:04:28,240 --> 00:04:35,410
okay for a mainly static mainly mainly a

00:04:31,960 --> 00:04:37,060
read heavy site but varnish doesn't help

00:04:35,410 --> 00:04:41,370
the logged-in editors who have to put up

00:04:37,060 --> 00:04:44,770
with a sluggish authoring experience and

00:04:41,370 --> 00:04:47,280
when we deliver a Drupal site we have to

00:04:44,770 --> 00:04:51,730
train the editors it's not a disaster

00:04:47,280 --> 00:04:53,710
but I think ideally if you can sign up

00:04:51,730 --> 00:04:55,960
for a Netflix account or buy a book on

00:04:53,710 --> 00:04:58,240
Amazon then you ought to be able to

00:04:55,960 --> 00:04:59,860
understand the fundamentals of creating

00:04:58,240 --> 00:05:04,120
and managing content on a website on a

00:04:59,860 --> 00:05:06,720
CMS but drupal's worst sin in my opinion

00:05:04,120 --> 00:05:11,050
is that its opinionated about markup

00:05:06,720 --> 00:05:13,330
Drupal generates HTML for you this

00:05:11,050 --> 00:05:15,760
restricts our design in our UI choices

00:05:13,330 --> 00:05:18,730
and it makes site maintenance slower for

00:05:15,760 --> 00:05:22,560
our developers most importantly makes us

00:05:18,730 --> 00:05:22,560
more expensive for our clients

00:05:22,690 --> 00:05:27,590
so faced with these frustrations we

00:05:25,849 --> 00:05:29,900
persuaded one of our clients the royal

00:05:27,590 --> 00:05:33,830
college of art to commissioned us to

00:05:29,900 --> 00:05:37,190
build them a new CMS in Django we

00:05:33,830 --> 00:05:38,630
launched their site in late 2013 and we

00:05:37,190 --> 00:05:41,660
launched the open source project in

00:05:38,630 --> 00:05:44,860
february2014 at django weekend an

00:05:41,660 --> 00:05:47,930
excellent short conference in Cardiff I

00:05:44,860 --> 00:05:51,080
guess this was this was half about being

00:05:47,930 --> 00:05:53,630
a good open source citizen but half

00:05:51,080 --> 00:05:55,520
commercial we knew that we couldn't

00:05:53,630 --> 00:05:58,220
persuade new clients to let us use

00:05:55,520 --> 00:05:59,930
wagtail to build their sites if the only

00:05:58,220 --> 00:06:03,759
people maintaining it were a small

00:05:59,930 --> 00:06:03,759
company in the Oxfordshire countryside

00:06:05,110 --> 00:06:09,770
to be honest we weren't very well

00:06:07,909 --> 00:06:12,800
prepared to manage a reasonably sized

00:06:09,770 --> 00:06:14,419
open source project despite that

00:06:12,800 --> 00:06:17,900
everything seemed to go perfectly for

00:06:14,419 --> 00:06:19,849
the first few weeks on the day my

00:06:17,900 --> 00:06:21,949
colleague Matthew announced wagtail at

00:06:19,849 --> 00:06:23,449
django weekend I posted a link on hacker

00:06:21,949 --> 00:06:26,659
news and I asked a couple of friends

00:06:23,449 --> 00:06:28,430
with decent karma to upload it and it

00:06:26,659 --> 00:06:31,340
hit the front page and it stayed there

00:06:28,430 --> 00:06:32,870
for a while and for a few giddy days we

00:06:31,340 --> 00:06:36,380
were in the top trending projects on

00:06:32,870 --> 00:06:39,409
github and then the contributions came

00:06:36,380 --> 00:06:43,130
flooding in obscure European language

00:06:39,409 --> 00:06:45,199
translations feature suggestions one

00:06:43,130 --> 00:06:48,259
evening someone in Sweden noticed an

00:06:45,199 --> 00:06:51,050
issue in an edge case with admin

00:06:48,259 --> 00:06:55,280
permissions but by the morning someone

00:06:51,050 --> 00:06:58,039
in Mongolia had fixed it felt like we'd

00:06:55,280 --> 00:07:01,810
discovered perpetual motion people on

00:06:58,039 --> 00:07:01,810
the internet doing our work for free for

00:07:01,930 --> 00:07:07,580
three weeks our core team to developers

00:07:05,240 --> 00:07:09,169
worked hard on what we've thought was

00:07:07,580 --> 00:07:13,099
the most pressing issue our lack of

00:07:09,169 --> 00:07:15,409
tests we went from nor percent to eighty

00:07:13,099 --> 00:07:17,270
percent coverage pretty quickly and then

00:07:15,409 --> 00:07:19,400
we eat out a couple of percent every day

00:07:17,270 --> 00:07:24,259
until we plateaued it about in the low

00:07:19,400 --> 00:07:25,880
90s where we are now still documentation

00:07:24,259 --> 00:07:27,710
editions and thoughtfully worded

00:07:25,880 --> 00:07:30,949
enhancement suggestions kept flooding in

00:07:27,710 --> 00:07:32,599
in our weekly team meetings we were

00:07:30,949 --> 00:07:35,569
referring to these generous strangers by

00:07:32,599 --> 00:07:37,869
their first names have you seen jess is

00:07:35,569 --> 00:07:40,610
new work on refactoring the JavaScript

00:07:37,869 --> 00:07:45,110
did you see what Phil's ideas around

00:07:40,610 --> 00:07:47,839
documentation but after a couple of

00:07:45,110 --> 00:07:49,399
months we realized that as we were

00:07:47,839 --> 00:07:50,839
investing more and more time fixing the

00:07:49,399 --> 00:07:53,539
bugs that other people were kindly

00:07:50,839 --> 00:07:55,249
finding for us the volume of

00:07:53,539 --> 00:07:59,959
contributions started diminishing and

00:07:55,249 --> 00:08:01,490
the tone of engagement shifted it took

00:07:59,959 --> 00:08:03,589
us a while to work out what had happened

00:08:01,490 --> 00:08:08,809
and I think we've addressed most of

00:08:03,589 --> 00:08:11,059
those reasons so from my vast experience

00:08:08,809 --> 00:08:15,860
of launching one open source project

00:08:11,059 --> 00:08:19,729
these are my top tips the first is to

00:08:15,860 --> 00:08:24,289
use that energy of launch people want to

00:08:19,729 --> 00:08:26,089
be part of the new thing when we when we

00:08:24,289 --> 00:08:28,069
announced it on hacker news in it and it

00:08:26,089 --> 00:08:30,259
got onto the front page that's what you

00:08:28,069 --> 00:08:31,279
know that's what engaged people and made

00:08:30,259 --> 00:08:34,849
them want to be part of something that

00:08:31,279 --> 00:08:36,769
looked interesting I guess I'd imagine

00:08:34,849 --> 00:08:39,769
that there was going to be a gradual

00:08:36,769 --> 00:08:41,689
increase in an engagement but there was

00:08:39,769 --> 00:08:43,759
there was a big rush in those first two

00:08:41,689 --> 00:08:46,100
weeks that we've never really recaptured

00:08:43,759 --> 00:08:47,870
and I think if I were doing it again

00:08:46,100 --> 00:08:49,459
that I would make sure that we had even

00:08:47,870 --> 00:08:52,880
more resources available to support

00:08:49,459 --> 00:08:56,449
people and respond and feedback and that

00:08:52,880 --> 00:08:58,759
early not very facing the second point

00:08:56,449 --> 00:09:03,189
is about establishing a predictable

00:08:58,759 --> 00:09:06,500
rhythm for our work so this means being

00:09:03,189 --> 00:09:08,959
giving people clear indications about

00:09:06,500 --> 00:09:12,199
how often we're going to deliver new

00:09:08,959 --> 00:09:15,860
releases how the beta testing process

00:09:12,199 --> 00:09:19,189
works what the road map looks like in

00:09:15,860 --> 00:09:21,709
this case I think velocity isn't so

00:09:19,189 --> 00:09:24,380
important as just giving people the

00:09:21,709 --> 00:09:26,240
impression of constant motion that's

00:09:24,380 --> 00:09:30,500
what people want to see that it's it's

00:09:26,240 --> 00:09:31,639
steady and then it doesn't stop if I

00:09:30,500 --> 00:09:33,459
were doing it again I would start with

00:09:31,639 --> 00:09:35,509
better documentation particularly around

00:09:33,459 --> 00:09:39,019
making it really easy for people to get

00:09:35,509 --> 00:09:41,540
started and I would start with tests not

00:09:39,019 --> 00:09:43,699
because tests are critical for project

00:09:41,540 --> 00:09:45,319
is only two weeks old but because it

00:09:43,699 --> 00:09:47,920
avoids you having to answer snarky

00:09:45,319 --> 00:09:47,920
comments on reddit

00:09:49,560 --> 00:09:54,640
we made some assumptions about how

00:09:51,940 --> 00:09:57,850
developers work for example the torch

00:09:54,640 --> 00:10:00,399
box we use vagrant heavily it means that

00:09:57,850 --> 00:10:01,839
we get clean parity between our

00:10:00,399 --> 00:10:05,740
developer and production environments

00:10:01,839 --> 00:10:08,010
and it makes it much easier to get

00:10:05,740 --> 00:10:11,890
started on the new projects you can

00:10:08,010 --> 00:10:15,480
forego the the pain of installing lib

00:10:11,890 --> 00:10:17,830
jpg and the postgres drivers on OSX and

00:10:15,480 --> 00:10:19,510
and we imagine that everybody else felt

00:10:17,830 --> 00:10:21,130
the same way but it turns out that quite

00:10:19,510 --> 00:10:22,360
a big proportion of the Django developer

00:10:21,130 --> 00:10:24,310
community don't want to spin up a

00:10:22,360 --> 00:10:28,480
virtual machine just to test your shiny

00:10:24,310 --> 00:10:32,380
new content management system similarly

00:10:28,480 --> 00:10:33,790
we we use postgres and we you know we

00:10:32,380 --> 00:10:35,140
imagine that most of the world does too

00:10:33,790 --> 00:10:39,730
but it turns out that that's another

00:10:35,140 --> 00:10:41,320
case I think reducing barriers to

00:10:39,730 --> 00:10:43,630
installation is really important an

00:10:41,320 --> 00:10:45,880
example here is that we use sass to

00:10:43,630 --> 00:10:49,709
create the to manage the CSS for the

00:10:45,880 --> 00:10:52,270
admin interface and my colleagues had a

00:10:49,709 --> 00:10:54,820
philosophical objection to shipping that

00:10:52,270 --> 00:10:56,620
combine compiled CSS files in the

00:10:54,820 --> 00:10:59,170
repository so this meant that we

00:10:56,620 --> 00:11:02,050
required anyone using wagtail to have

00:10:59,170 --> 00:11:04,570
lips us which is again it's fine on

00:11:02,050 --> 00:11:06,730
vagrant but it's a it's a painter to

00:11:04,570 --> 00:11:09,760
build on OSX and other developer

00:11:06,730 --> 00:11:11,430
environments now I imagine there are a

00:11:09,760 --> 00:11:15,459
lot of people who again might have been

00:11:11,430 --> 00:11:17,110
interested in in white towel and and and

00:11:15,459 --> 00:11:18,670
seeing these posts and who would have

00:11:17,110 --> 00:11:20,890
tried it out and after 15 minutes got

00:11:18,670 --> 00:11:22,300
frustrated about having to build lips

00:11:20,890 --> 00:11:27,880
ass and gave up and probably never came

00:11:22,300 --> 00:11:32,230
back and finally this is a last point is

00:11:27,880 --> 00:11:34,480
about communications and I think it's

00:11:32,230 --> 00:11:36,670
easy to feel that if people aren't

00:11:34,480 --> 00:11:39,250
constantly replying to your tweets and

00:11:36,670 --> 00:11:41,589
blog posts and Google Group updates it

00:11:39,250 --> 00:11:43,630
doesn't mean that they're not there this

00:11:41,589 --> 00:11:47,890
point came home to me with a one of our

00:11:43,630 --> 00:11:50,950
first big wagtail climbs it's a big

00:11:47,890 --> 00:11:53,890
broadcaster in LA and I went out there

00:11:50,950 --> 00:11:55,600
for the meeting and it was surreal

00:11:53,890 --> 00:11:56,120
experience for me i was at sitting at

00:11:55,600 --> 00:11:59,540
this

00:11:56,120 --> 00:12:01,490
mahogany table leather armchairs just

00:11:59,540 --> 00:12:04,940
like in the films include a window I

00:12:01,490 --> 00:12:06,350
could see the Hollywood sign and the guy

00:12:04,940 --> 00:12:09,740
across the table who I'd never met was

00:12:06,350 --> 00:12:11,720
talking in talking with amazingly

00:12:09,740 --> 00:12:15,350
precise detail about the coding habits

00:12:11,720 --> 00:12:18,410
of my colleagues and you know I realized

00:12:15,350 --> 00:12:19,940
that even though people aren't writing

00:12:18,410 --> 00:12:22,460
to tell me that they're using an

00:12:19,940 --> 00:12:24,080
interesting this stuff you are under

00:12:22,460 --> 00:12:25,880
scrutiny people are interested in the

00:12:24,080 --> 00:12:27,740
fact that they're not communicating back

00:12:25,880 --> 00:12:29,630
with you doesn't mean that it's not

00:12:27,740 --> 00:12:34,370
important for you to keep posting and

00:12:29,630 --> 00:12:35,870
talking about your work so after we fix

00:12:34,370 --> 00:12:37,700
these problems and particularly the ones

00:12:35,870 --> 00:12:39,800
around documentation and tests and

00:12:37,700 --> 00:12:42,410
establishing a predictable rhythm for

00:12:39,800 --> 00:12:45,500
releases we started seeing some really

00:12:42,410 --> 00:12:47,570
high-quality contributions in particular

00:12:45,500 --> 00:12:50,450
there are two agencies on either side of

00:12:47,570 --> 00:12:52,460
the Tasman Sea they both decided to

00:12:50,450 --> 00:12:55,160
switch to whitetail wholesale and to

00:12:52,460 --> 00:12:59,510
invest in its development springload is

00:12:55,160 --> 00:13:01,640
an amazing agency in New Zealand they do

00:12:59,510 --> 00:13:02,870
they've been building wagtail sites for

00:13:01,640 --> 00:13:04,910
the Red Cross and the New Zealand

00:13:02,870 --> 00:13:06,980
government and they started prototyping

00:13:04,910 --> 00:13:10,070
a next-generation user interface with

00:13:06,980 --> 00:13:12,709
react take flights is another fantastic

00:13:10,070 --> 00:13:15,200
agency based in Hobart Tasmania who

00:13:12,709 --> 00:13:16,790
politely suggested and then implemented

00:13:15,200 --> 00:13:20,779
some fundamental changes that we should

00:13:16,790 --> 00:13:22,610
have seen before we started and then in

00:13:20,779 --> 00:13:25,130
the US we starting to get interesting I

00:13:22,610 --> 00:13:27,350
guess that's why I felt you know I

00:13:25,130 --> 00:13:31,220
should make this trip from from Oxford

00:13:27,350 --> 00:13:34,130
to Austin because I started seeing blog

00:13:31,220 --> 00:13:37,390
posts and work by really respected

00:13:34,130 --> 00:13:39,890
agencies like cactus and red says

00:13:37,390 --> 00:13:45,020
Lincoln loop reference wagtail in

00:13:39,890 --> 00:13:47,320
high-performance Django book Wharton

00:13:45,020 --> 00:13:51,370
School of Business here here and

00:13:47,320 --> 00:13:52,840
divx is anyone here from tiff Ock's I've

00:13:51,370 --> 00:13:53,890
never met anyone from tips but they're

00:13:52,840 --> 00:13:57,760
doing some really good stuff on water

00:13:53,890 --> 00:13:58,990
and then there's some big sites NBC

00:13:57,760 --> 00:14:02,050
their broadcaster I mentioned before

00:13:58,990 --> 00:14:04,440
they're building a a massive news sites

00:14:02,050 --> 00:14:07,720
on wagtail there's a political campaign

00:14:04,440 --> 00:14:09,580
and a tech giant both running sites that

00:14:07,720 --> 00:14:11,950
you've heard of but we're not allowed to

00:14:09,580 --> 00:14:13,960
talk about incidentally both of those

00:14:11,950 --> 00:14:15,510
sites use wagtails static site

00:14:13,960 --> 00:14:17,740
generation feature which isn't really

00:14:15,510 --> 00:14:20,680
prominent in the documentation but I

00:14:17,740 --> 00:14:24,690
think makes sense for for for sites

00:14:20,680 --> 00:14:27,370
where scale them security is paramount

00:14:24,690 --> 00:14:29,380
the UK and finish and US government's

00:14:27,370 --> 00:14:31,930
using wagtail and I know this because I

00:14:29,380 --> 00:14:35,020
can see their projects on github NASA

00:14:31,930 --> 00:14:38,170
and Oxfam be using my tail but so a porn

00:14:35,020 --> 00:14:41,260
sites and car manufacturers and this

00:14:38,170 --> 00:14:44,410
this is race an unexpected moral dilemma

00:14:41,260 --> 00:14:45,790
for us we wouldn't work for some of the

00:14:44,410 --> 00:14:48,220
organizations who are benefiting from

00:14:45,790 --> 00:14:51,130
using worked out because we don't like

00:14:48,220 --> 00:14:53,470
what they're doing I can't think of an

00:14:51,130 --> 00:14:55,750
obvious way around this as far as I know

00:14:53,470 --> 00:14:58,420
there are no open-source licenses which

00:14:55,750 --> 00:15:05,110
limit usage to organizations who conform

00:14:58,420 --> 00:15:08,320
to my fluffy liberal Western ethics so

00:15:05,110 --> 00:15:10,930
that's that's where we're at now and the

00:15:08,320 --> 00:15:15,850
next steps are really around defining

00:15:10,930 --> 00:15:17,080
our roadmap more clearly the killer

00:15:15,850 --> 00:15:18,370
feature I think of whitetail is

00:15:17,080 --> 00:15:20,260
something called stream field which is

00:15:18,370 --> 00:15:23,190
bit harder to explain than it is to

00:15:20,260 --> 00:15:27,160
demonstrate essentially it's a it's a

00:15:23,190 --> 00:15:30,490
content type that lets people build a

00:15:27,160 --> 00:15:32,230
sort of long-form narrative content rich

00:15:30,490 --> 00:15:34,570
content like we have used to seeing on

00:15:32,230 --> 00:15:37,030
media and more New York Times or The

00:15:34,570 --> 00:15:39,120
Guardian in the UK but without storing

00:15:37,030 --> 00:15:44,290
everything in a big blob of unmaintained

00:15:39,120 --> 00:15:46,510
HTML for those of you who heard Andrew

00:15:44,290 --> 00:15:49,450
Godwin's talk about database

00:15:46,510 --> 00:15:55,600
anti-patterns I was pleased that he he

00:15:49,450 --> 00:15:57,280
he thought that storing storing some CMS

00:15:55,600 --> 00:15:58,390
type content in JSON fields is the right

00:15:57,280 --> 00:15:59,170
way to go because that's our approach

00:15:58,390 --> 00:16:02,260
with with

00:15:59,170 --> 00:16:03,850
with with stream field but we've got

00:16:02,260 --> 00:16:05,560
ideas about making stream field even

00:16:03,850 --> 00:16:09,130
stronger and starting to remove the

00:16:05,560 --> 00:16:15,000
requirement to have WYSIWYG interfaces

00:16:09,130 --> 00:16:17,490
at all to have rich text editors at all

00:16:15,000 --> 00:16:19,810
otherwise in the roadmap we've got this

00:16:17,490 --> 00:16:22,149
support for int'l internationalization

00:16:19,810 --> 00:16:23,880
in wagtail but we need to we need to

00:16:22,149 --> 00:16:25,779
have a better built in interface for it

00:16:23,880 --> 00:16:29,320
whitetail stools versions of all the

00:16:25,779 --> 00:16:31,269
content but you can't currently revert

00:16:29,320 --> 00:16:34,690
to previous versions through the through

00:16:31,269 --> 00:16:37,720
the UI we want to have a cleaner

00:16:34,690 --> 00:16:39,820
separation of the internal API and and

00:16:37,720 --> 00:16:41,220
the user interface so we can start doing

00:16:39,820 --> 00:16:43,720
cooler stuff like the like the

00:16:41,220 --> 00:16:45,490
reactivates prototypes that springload

00:16:43,720 --> 00:16:47,110
have been doing and we want better

00:16:45,490 --> 00:16:48,670
support for really massive sites with

00:16:47,110 --> 00:16:53,589
millions of pages and terabytes of

00:16:48,670 --> 00:16:55,350
content on remote storage so we're

00:16:53,589 --> 00:16:59,320
identifying all this in the road map but

00:16:55,350 --> 00:17:02,380
more particularly we were using webs so

00:16:59,320 --> 00:17:04,660
you will know about peps python

00:17:02,380 --> 00:17:07,150
enhancement proposals which has been a

00:17:04,660 --> 00:17:09,160
very successful part of the Python

00:17:07,150 --> 00:17:11,199
community and has been adopted you may

00:17:09,160 --> 00:17:14,110
know by the Django community with depth

00:17:11,199 --> 00:17:17,500
and and you can imagine what what

00:17:14,110 --> 00:17:19,900
website this is our own version where we

00:17:17,500 --> 00:17:22,150
there's a github repository of a

00:17:19,900 --> 00:17:24,220
structured structured feature requests

00:17:22,150 --> 00:17:25,630
that explain the motivations behind er

00:17:24,220 --> 00:17:27,160
behind er feature and and the

00:17:25,630 --> 00:17:29,230
implications and how it might be dealt

00:17:27,160 --> 00:17:31,870
and I think under the idea of a wither

00:17:29,230 --> 00:17:33,850
with a web is that it's a package that

00:17:31,870 --> 00:17:36,250
another developer or agency could kick

00:17:33,850 --> 00:17:38,650
up and understand it the that by

00:17:36,250 --> 00:17:42,730
contributing they be delivering along

00:17:38,650 --> 00:17:47,110
there along the lines that we want to

00:17:42,730 --> 00:17:50,919
see wagtail grow finally I'm going to

00:17:47,110 --> 00:17:52,630
address the title of my talk why did we

00:17:50,919 --> 00:17:57,100
build yet another content management

00:17:52,630 --> 00:18:01,480
system as someone who used to code and

00:17:57,100 --> 00:18:03,640
now mainly managers coders I recognized

00:18:01,480 --> 00:18:09,070
the constant fight against not invented

00:18:03,640 --> 00:18:10,330
here and it's true that maybe we maybe

00:18:09,070 --> 00:18:11,670
would have been better open-source

00:18:10,330 --> 00:18:15,210
citizens

00:18:11,670 --> 00:18:16,650
we had contributed that effort to an

00:18:15,210 --> 00:18:19,950
existing platform rather than building

00:18:16,650 --> 00:18:22,950
our own there are as you know some very

00:18:19,950 --> 00:18:25,830
established projects mezzanine is one we

00:18:22,950 --> 00:18:27,960
reused mezzanine for project two years

00:18:25,830 --> 00:18:30,150
ago and we liked it in fact some of

00:18:27,960 --> 00:18:32,880
whitetail is inspired by by millions key

00:18:30,150 --> 00:18:35,700
principles and Django CMS of course is a

00:18:32,880 --> 00:18:38,190
very powerful very mature we recently

00:18:35,700 --> 00:18:40,710
inherited django Django CMS project for

00:18:38,190 --> 00:18:42,240
a UK government a project and it's going

00:18:40,710 --> 00:18:51,840
well but there's some fundamental

00:18:42,240 --> 00:18:54,870
differences in our approach one is

00:18:51,840 --> 00:18:58,890
around control versus flexibility this

00:18:54,870 --> 00:19:01,410
is a bit similar to the Drupal point in

00:18:58,890 --> 00:19:03,630
a way why Excel gives you less

00:19:01,410 --> 00:19:05,550
flexibility from an administrators point

00:19:03,630 --> 00:19:08,330
of view and at hands control to the

00:19:05,550 --> 00:19:11,010
developer so new fields are defined by

00:19:08,330 --> 00:19:13,200
developers we use migrations to make

00:19:11,010 --> 00:19:16,400
changes we standard Django templates the

00:19:13,200 --> 00:19:16,400
tools that you're used to working with

00:19:16,430 --> 00:19:22,230
Django CMS focus recently on front-end

00:19:19,980 --> 00:19:23,340
editing and WYSIWYG editing which is

00:19:22,230 --> 00:19:27,570
appealing and works in lots of

00:19:23,340 --> 00:19:29,970
situations but for us we we follow more

00:19:27,570 --> 00:19:33,210
the so-called coke model create one to

00:19:29,970 --> 00:19:37,140
publish every one and and that means

00:19:33,210 --> 00:19:39,630
having a a more focused editorial

00:19:37,140 --> 00:19:45,380
interface that that enhances the

00:19:39,630 --> 00:19:48,030
authoring experience aside from all that

00:19:45,380 --> 00:19:49,470
we had a basic commercial imperative to

00:19:48,030 --> 00:19:53,490
build the content management system that

00:19:49,470 --> 00:19:54,900
our clients wanted and in basic terms it

00:19:53,490 --> 00:19:58,680
was quicker for us to start from scratch

00:19:54,900 --> 00:20:01,410
and to build on an existing project but

00:19:58,680 --> 00:20:03,660
I don't think this is a problem the

00:20:01,410 --> 00:20:06,300
demand for new content manager sites is

00:20:03,660 --> 00:20:09,420
growing more quickly than the supply of

00:20:06,300 --> 00:20:11,220
new content management systems more

00:20:09,420 --> 00:20:14,550
quality tools in the Django ecosystem

00:20:11,220 --> 00:20:18,180
should be good for everyone and when

00:20:14,550 --> 00:20:21,120
you're newer cooler Django CMS hits

00:20:18,180 --> 00:20:22,010
hacker news next year I'll smile

00:20:21,120 --> 00:20:23,240
ruefully

00:20:22,010 --> 00:20:28,990
and I hope that you'll make fewer

00:20:23,240 --> 00:20:28,990
mistakes and we did thanks very much

00:20:42,480 --> 00:20:47,800
hi I'm excited to get started with

00:20:45,100 --> 00:20:50,860
wagtail I didn't understand your

00:20:47,800 --> 00:20:53,020
description of stream fields or webs and

00:20:50,860 --> 00:20:54,250
I wonder if you can demonstrate at one

00:20:53,020 --> 00:21:01,180
point you said it would probably be

00:20:54,250 --> 00:21:07,690
easier to show than to tell okay I think

00:21:01,180 --> 00:21:11,400
the way the best way to show webs so it

00:21:07,690 --> 00:21:11,400
might be tricky tricky for me to find it

00:21:18,130 --> 00:21:22,570
this isn't married on my screen tongue

00:21:19,810 --> 00:21:24,750
and hit the changa ones are a better

00:21:22,570 --> 00:21:24,750
example

00:21:29,200 --> 00:21:32,559
so an example

00:21:39,570 --> 00:21:45,240
so here's one which is a kind of

00:21:42,420 --> 00:21:49,280
template for a django enhancement

00:21:45,240 --> 00:21:51,630
proposal which shows the metadata and

00:21:49,280 --> 00:21:52,800
gives some of it and get some guidelines

00:21:51,630 --> 00:21:56,580
for how you might want to structure your

00:21:52,800 --> 00:21:59,220
your feature request hours are a bit

00:21:56,580 --> 00:22:00,570
simpler than this because I think we

00:21:59,220 --> 00:22:02,580
just want to make it easy to fit for

00:22:00,570 --> 00:22:06,000
people to get started but basically it's

00:22:02,580 --> 00:22:08,250
a structured standard way of describing

00:22:06,000 --> 00:22:10,440
features and their motivations that then

00:22:08,250 --> 00:22:13,290
gets agreed collaborated on in agreed

00:22:10,440 --> 00:22:16,170
and becomes part of an established

00:22:13,290 --> 00:22:17,310
roadmap I think I won't have time show

00:22:16,170 --> 00:22:18,810
stream field right now but I'd be very

00:22:17,310 --> 00:22:23,850
happy to demonstrate it people straight

00:22:18,810 --> 00:22:27,240
after this I I've been building awake

00:22:23,850 --> 00:22:29,490
tail cycle last month or so I've been

00:22:27,240 --> 00:22:31,740
really enjoying it and i highly suggest

00:22:29,490 --> 00:22:33,180
everyone here gives a shot and plays

00:22:31,740 --> 00:22:36,930
around a stream field and wraps her head

00:22:33,180 --> 00:22:38,910
around the idea and and see how it

00:22:36,930 --> 00:22:41,010
allows you to build your own widgets for

00:22:38,910 --> 00:22:44,040
different types of content one thing

00:22:41,010 --> 00:22:46,290
that I was noticing reviewing my coat

00:22:44,040 --> 00:22:48,390
over the last couple days is that I have

00:22:46,290 --> 00:22:50,730
a lot of hacky ways that I'm including

00:22:48,390 --> 00:22:53,610
resources for individual stream fields

00:22:50,730 --> 00:22:55,410
in such as having a widget that may be

00:22:53,610 --> 00:22:57,030
displayed six different times but needs

00:22:55,410 --> 00:22:59,580
an individual resource each time a

00:22:57,030 --> 00:23:02,160
little bit jQuery code and so it gets

00:22:59,580 --> 00:23:03,600
included eight times of the code I was

00:23:02,160 --> 00:23:07,110
wondering if there's any better way or

00:23:03,600 --> 00:23:08,790
any future plans to integrate some more

00:23:07,110 --> 00:23:12,000
front-end functionality ways to include

00:23:08,790 --> 00:23:14,250
resources in stream fields as we built

00:23:12,000 --> 00:23:16,440
this up because I see that just

00:23:14,250 --> 00:23:18,720
continuing and what we're building and

00:23:16,440 --> 00:23:23,490
expanding I think that's a really

00:23:18,720 --> 00:23:25,920
interesting point and and it's so

00:23:23,490 --> 00:23:27,540
important for us to to look at the way

00:23:25,920 --> 00:23:29,010
other people are using our software and

00:23:27,540 --> 00:23:30,270
i discovered this yesterday with with

00:23:29,010 --> 00:23:32,430
margie who just asked the first question

00:23:30,270 --> 00:23:33,630
I I went through the process for 10

00:23:32,430 --> 00:23:35,640
minutes of her setting up the site and

00:23:33,630 --> 00:23:38,100
immediately just looking over her

00:23:35,640 --> 00:23:40,350
shoulder noticed some things which are

00:23:38,100 --> 00:23:41,730
which are obvious to me but but but

00:23:40,350 --> 00:23:43,680
wouldn't be obvious to someone coming to

00:23:41,730 --> 00:23:44,970
this for the first time and similarly

00:23:43,680 --> 00:23:47,570
the way that we build our stream

00:23:44,970 --> 00:23:49,040
stringfield objects are

00:23:47,570 --> 00:23:50,480
in the same way that we made the

00:23:49,040 --> 00:23:53,000
mistakes about assumptions about the way

00:23:50,480 --> 00:23:54,710
developers work almost certainly is not

00:23:53,000 --> 00:23:56,240
going to be the case the same way that

00:23:54,710 --> 00:23:57,680
you're building stream filled objects I

00:23:56,240 --> 00:23:59,180
think one way of approaching this is

00:23:57,680 --> 00:24:03,710
maybe having a section the documentation

00:23:59,180 --> 00:24:07,400
around recipes so we can have some some

00:24:03,710 --> 00:24:09,650
some examples and and guidelines of how

00:24:07,400 --> 00:24:10,820
to do this in a maintainable way but

00:24:09,650 --> 00:24:13,040
also I'm sure that there are

00:24:10,820 --> 00:24:14,390
improvements the way that we can we can

00:24:13,040 --> 00:24:18,460
offer stream fields and particularly

00:24:14,390 --> 00:24:20,690
provide hooks around the round the

00:24:18,460 --> 00:24:22,850
JavaScript injection which means you

00:24:20,690 --> 00:24:27,200
know I had to repeat it many times the

00:24:22,850 --> 00:24:29,060
goods talk about that does anyone

00:24:27,200 --> 00:24:37,360
managed to make a wagtail site during

00:24:29,060 --> 00:24:37,360
their team the tool great five t-shirts

00:24:38,650 --> 00:24:41,980
think that's it

00:24:46,509 --> 00:24:53,559
do you have any tips if you have one of

00:24:49,659 --> 00:24:55,599
those other CMS's so Django CMS let's

00:24:53,559 --> 00:24:57,759
say if you wanted to migrate one of

00:24:55,599 --> 00:24:59,440
those sites to your system any any down

00:24:57,759 --> 00:25:04,329
tips that you might offer for something

00:24:59,440 --> 00:25:06,039
like that see I think this is somewhere

00:25:04,329 --> 00:25:07,869
where we can learn from from Drupal

00:25:06,039 --> 00:25:11,019
Drupal has a very good module CUDA

00:25:07,869 --> 00:25:14,499
migrate chimeras got a framework or a

00:25:11,019 --> 00:25:16,929
module that the way they approach is

00:25:14,499 --> 00:25:19,989
they have a kind of an interim database

00:25:16,929 --> 00:25:21,429
and and you write the rules that get in

00:25:19,989 --> 00:25:23,469
the interim database and then that

00:25:21,429 --> 00:25:26,319
becomes a common format that's easy to

00:25:23,469 --> 00:25:28,509
import I think we could we could do

00:25:26,319 --> 00:25:29,739
something similar to that I guess there

00:25:28,509 --> 00:25:31,599
are standard answer to that kind of

00:25:29,739 --> 00:25:33,069
question is why tell is just Django so

00:25:31,599 --> 00:25:35,679
anything that you would be able to do

00:25:33,069 --> 00:25:37,029
know to migrate any project into Django

00:25:35,679 --> 00:25:39,190
you should be able to do with wagtail I

00:25:37,029 --> 00:25:41,529
mean it'sit's that's a bit of a cop-out

00:25:39,190 --> 00:25:44,169
I think because there are you know

00:25:41,529 --> 00:25:46,209
they're there are some conventions that

00:25:44,169 --> 00:25:49,599
that we use that there may not be

00:25:46,209 --> 00:25:51,369
immediately obvious I think it's if our

00:25:49,599 --> 00:25:53,769
goal was you know mass adoption of

00:25:51,369 --> 00:25:55,959
whitetail which which perhaps it is then

00:25:53,769 --> 00:25:57,579
then I think providing some sort of

00:25:55,959 --> 00:26:01,779
simple and migration from common

00:25:57,579 --> 00:26:04,419
platforms would be a good move for us is

00:26:01,779 --> 00:26:07,059
there a way to hook it into an

00:26:04,419 --> 00:26:09,669
organization's existing user name and

00:26:07,059 --> 00:26:12,369
password infrastructure with ldap or

00:26:09,669 --> 00:26:13,719
Kerberos arena yeah that's a really

00:26:12,369 --> 00:26:15,249
common requirement and it's one that

00:26:13,719 --> 00:26:16,989
we've done many times in fact for our

00:26:15,249 --> 00:26:18,849
first ever worked our project the royal

00:26:16,989 --> 00:26:21,969
college of art that's all based on on

00:26:18,849 --> 00:26:23,919
ldap ldap is really you know Django is

00:26:21,969 --> 00:26:26,109
doing all the hard work for us but ldap

00:26:23,919 --> 00:26:28,929
is just a one line con change in

00:26:26,109 --> 00:26:33,819
importing nailed out library we've also

00:26:28,929 --> 00:26:38,009
done it with sam'l and Shibboleth first

00:26:33,819 --> 00:26:38,009
some other university sites

00:26:38,559 --> 00:26:46,460
so in wagtail a page is structured

00:26:42,950 --> 00:26:50,509
content and a block is also a structured

00:26:46,460 --> 00:26:53,539
content and you're currently using JSON

00:26:50,509 --> 00:26:55,789
for stream field and I'm interested to

00:26:53,539 --> 00:26:57,440
know because I've had situations where

00:26:55,789 --> 00:27:01,820
maybe I would want to pull out a

00:26:57,440 --> 00:27:04,669
particular block inside of a page would

00:27:01,820 --> 00:27:07,070
it be possible to use models so that

00:27:04,669 --> 00:27:08,480
it's represented in the database in that

00:27:07,070 --> 00:27:12,200
same way because when you think about

00:27:08,480 --> 00:27:15,559
how the page pages are represented in

00:27:12,200 --> 00:27:17,240
the Explorer it has like a path right

00:27:15,559 --> 00:27:19,820
but then you could infinitely nest

00:27:17,240 --> 00:27:22,220
blocks like blocks within blocks so then

00:27:19,820 --> 00:27:24,200
a block like 10 level Steve would

00:27:22,220 --> 00:27:27,340
technically also have a path within his

00:27:24,200 --> 00:27:31,460
own page so I'm just curious to know

00:27:27,340 --> 00:27:35,899
your thoughts on representing blocks and

00:27:31,460 --> 00:27:38,450
pages as being one type of data so one

00:27:35,899 --> 00:27:40,669
idea is that we do we we move away from

00:27:38,450 --> 00:27:42,320
the JSON representation to to modeling

00:27:40,669 --> 00:27:45,049
in a relational database I'm not sure

00:27:42,320 --> 00:27:47,450
that's necessary and particularly as you

00:27:45,049 --> 00:27:49,970
probably aware the JSON support in

00:27:47,450 --> 00:27:52,730
Postgres means that it is possible to

00:27:49,970 --> 00:27:55,460
index and filter on content within

00:27:52,730 --> 00:27:56,779
within JSON and performance for that is

00:27:55,460 --> 00:27:59,210
getting better and better and you know

00:27:56,779 --> 00:28:01,940
and I think postgres makes a fantastic

00:27:59,210 --> 00:28:04,249
document database in in competitions or

00:28:01,940 --> 00:28:05,809
something like Mungo so that's possibly

00:28:04,249 --> 00:28:10,639
one staple they will see that doesn't

00:28:05,809 --> 00:28:12,350
help my sequel use it so much things do

00:28:10,639 --> 00:28:16,249
get harder when you have when you have

00:28:12,350 --> 00:28:19,629
deep deep nesting and but at the moment

00:28:16,249 --> 00:28:19,629
JSON is handing it reasonably

00:28:22,960 --> 00:28:25,020

YouTube URL: https://www.youtube.com/watch?v=6j0NVq6g4FE


