Title: DjangoCon US 2015 - REST Easy — API Security Done Right by Jeff Schenck
Publication date: 2017-11-03
Playlist: DjangoCon US 2015
Description: 
	REST Easy — API Security Done Right by Jeff Schenck

Why REST
More and more of our web development is shifting to frontend web frameworks like Angular, Ember, and Backbone. And this is great! These frameworks can provide an amazing, responsive, beautiful experience to our users — and the only price we pay is having to write JavaScript. Well, having to write JavaScript and having to maintain a seriously robust, battle-hardened API for the frontend framework to talk to.

State of REST
Django REST Framework has clearly broken away with a ton of momentum, and with good reason. It's a solid framework, and the tools it provides right out of the box — serialization, validation, nested relationships — are splendid. It even provides basic authentication and authorization baked right in, which works great in the very simple cases.

However, when you start encountering slightly more complicated API permission setups, things start to get messy.

REST Security
There's a big tectonic shift when trading in your traditional request-response-Django site for a frontend-framework-API-Django site. Your application logic used to reside almost entirely server-side, but now it's split — half server-side, half browser-side. And the trick with browser-side code is it runs in a completely untrusted environment. So we're faced with a much more complicated security situation to batten down.

You need different authentication strategies: session auth, JWT token auth, API keys, signed URLs, and combinations thereof. You have different permission strategies: table-level, row-level, column-level, and combinations thereof. It gets real complicated.

REST Easy
I'll show how to use the tools at our disposal — Django groups and permissions, REST Frameworks's permission classes, third-party libraries — to cobble together a passable security setup for your API. You'll get plenty of code samples, detailing the kinds of setups we put together for our site and the custom tooling we built to do it.

Next-Level REST
We'll end by talking about how our tools can serve us better in the future. If Django is going to have a strong place in the future of the web, we need strong tooling for building APIs. This is how we'll get there.

Help us caption & translate this video!

http://amara.org/v/HGSf/
Captions: 
	00:00:15,830 --> 00:00:23,670
Thanks hi so thank you so much for being

00:00:20,820 --> 00:00:26,580
here for listening um I'm going to be

00:00:23,670 --> 00:00:30,150
talking about REST API is here and

00:00:26,580 --> 00:00:32,660
specifically security of REST API s and

00:00:30,150 --> 00:00:35,820
kind of even more specifically

00:00:32,660 --> 00:00:39,239
authorization authentication within your

00:00:35,820 --> 00:00:41,280
REST API so hopefully that's what you're

00:00:39,239 --> 00:00:44,670
all interested in there's gonna be a

00:00:41,280 --> 00:00:46,170
little bit of knowledge of Django rest

00:00:44,670 --> 00:00:48,210
framework that's gonna be helpful but

00:00:46,170 --> 00:00:50,219
hopefully if you haven't gotten a chance

00:00:48,210 --> 00:00:52,050
to play with it I'll give you a very

00:00:50,219 --> 00:00:54,420
quick primer that hopefully will kind of

00:00:52,050 --> 00:00:57,360
get you started there so what are we

00:00:54,420 --> 00:00:58,890
gonna go through today we're gonna talk

00:00:57,360 --> 00:01:02,309
about why restau why is this important

00:00:58,890 --> 00:01:04,409
right now why our REST API is a big deal

00:01:02,309 --> 00:01:05,970
what am I talking about them and why

00:01:04,409 --> 00:01:08,670
have they changed a little bit in their

00:01:05,970 --> 00:01:12,810
scope and caused all of these at least

00:01:08,670 --> 00:01:14,040
for me security considerations we're

00:01:12,810 --> 00:01:15,720
gonna talk a little bit about what the

00:01:14,040 --> 00:01:19,110
state of rest is today so if you're

00:01:15,720 --> 00:01:23,460
writing a jingle app and and you want to

00:01:19,110 --> 00:01:25,140
REST API what do you do and then we're

00:01:23,460 --> 00:01:26,780
gonna get into security a little bit a

00:01:25,140 --> 00:01:28,740
quick overview of kind of the

00:01:26,780 --> 00:01:32,250
considerations around security

00:01:28,740 --> 00:01:34,829
authorization when you're doing a REST

00:01:32,250 --> 00:01:36,360
API we're going to talk about some of

00:01:34,829 --> 00:01:40,979
the strategies that we've come up with

00:01:36,360 --> 00:01:43,920
to write clear maintainable permission

00:01:40,979 --> 00:01:45,000
schemes for your API and then we're

00:01:43,920 --> 00:01:49,500
gonna talk a little bit about what I

00:01:45,000 --> 00:01:51,420
hope happens tomorrow and you know I

00:01:49,500 --> 00:01:53,369
think our tooling is not quite there yet

00:01:51,420 --> 00:01:55,530
and I want to talk about how we might be

00:01:53,369 --> 00:01:58,560
able to get it there so that we can

00:01:55,530 --> 00:02:01,590
write really clear sane easy API

00:01:58,560 --> 00:02:02,729
permissioning all right so let's let's

00:02:01,590 --> 00:02:06,750
get started why are we talking about

00:02:02,729 --> 00:02:10,200
rest and the simple answer is all of

00:02:06,750 --> 00:02:13,860
these guys angular backbone

00:02:10,200 --> 00:02:17,150
and so on have just exploded in

00:02:13,860 --> 00:02:19,470
popularity in the last couple of years

00:02:17,150 --> 00:02:21,090
you know and there's there's there's all

00:02:19,470 --> 00:02:22,950
this growth they're really taking over a

00:02:21,090 --> 00:02:26,160
big chunk of what we do as well you know

00:02:22,950 --> 00:02:29,370
as web developers and so you know the

00:02:26,160 --> 00:02:31,110
more nuanced answer there then is I want

00:02:29,370 --> 00:02:34,099
to talk a little bit about kind of the

00:02:31,110 --> 00:02:36,690
the pieces of your app what's running

00:02:34,099 --> 00:02:38,819
what's running where and where these new

00:02:36,690 --> 00:02:40,430
JavaScript frameworks come into play and

00:02:38,819 --> 00:02:44,340
how that changes the game a little bit

00:02:40,430 --> 00:02:47,269
so you can break down your application

00:02:44,340 --> 00:02:50,280
into three basic components very roughly

00:02:47,269 --> 00:02:52,829
display logic right which is happening

00:02:50,280 --> 00:02:54,450
traditionally on the browser app logic

00:02:52,829 --> 00:02:58,019
which is kind of what's running your app

00:02:54,450 --> 00:03:00,030
and then data stores and the traditional

00:02:58,019 --> 00:03:03,569
way that you know historically these

00:03:00,030 --> 00:03:05,940
have been broken broken out is the

00:03:03,569 --> 00:03:07,530
display logic happens on the front end

00:03:05,940 --> 00:03:08,519
or in the browser right pretty

00:03:07,530 --> 00:03:10,110
straightforward and then your

00:03:08,519 --> 00:03:13,709
application logic and the data stores

00:03:10,110 --> 00:03:17,700
and all that all lives on the server the

00:03:13,709 --> 00:03:20,970
back end and you know historically we've

00:03:17,700 --> 00:03:22,410
used HTML CSS and JavaScript to talk to

00:03:20,970 --> 00:03:25,620
the browser and then the browser post

00:03:22,410 --> 00:03:28,019
some semi HTML form back to the server

00:03:25,620 --> 00:03:30,000
and it all worked really well until we

00:03:28,019 --> 00:03:32,370
wanted to do more things in the browser

00:03:30,000 --> 00:03:34,019
right and we came up with this ajax

00:03:32,370 --> 00:03:36,420
thing and we sort of shoehorned it in

00:03:34,019 --> 00:03:38,700
there and that worked fairly well for a

00:03:36,420 --> 00:03:41,060
while and things grew and grew and we

00:03:38,700 --> 00:03:44,310
started doing more and more of the

00:03:41,060 --> 00:03:47,310
application logic on the front end in

00:03:44,310 --> 00:03:49,260
the browser right and this is really you

00:03:47,310 --> 00:03:53,130
know with with angular and backbone and

00:03:49,260 --> 00:03:56,099
so on that's where this really kind of

00:03:53,130 --> 00:03:58,410
came into its own is huge portions of

00:03:56,099 --> 00:04:00,000
what was what's your you know your app

00:03:58,410 --> 00:04:01,709
logic which traditionally lived on a

00:04:00,000 --> 00:04:05,549
server is now happening in the browser

00:04:01,709 --> 00:04:08,250
right and it turned out that app logic

00:04:05,549 --> 00:04:11,579
needed to sit a little closer to your

00:04:08,250 --> 00:04:12,540
data right and so we came up with or you

00:04:11,579 --> 00:04:15,120
know it's been around for a little while

00:04:12,540 --> 00:04:17,130
but we started using rest really heavily

00:04:15,120 --> 00:04:20,880
to shovel that information back and

00:04:17,130 --> 00:04:22,530
forth that at a lower level between the

00:04:20,880 --> 00:04:27,540
front end in the backend because you do

00:04:22,530 --> 00:04:30,290
this app logic in the front so let's

00:04:27,540 --> 00:04:33,600
start talking about how we do that today

00:04:30,290 --> 00:04:37,139
the state of rest today this is just

00:04:33,600 --> 00:04:39,480
Google Trends which is you know take it

00:04:37,139 --> 00:04:42,960
for what it is but the blue line there

00:04:39,480 --> 00:04:46,889
is Django rest framework the other two

00:04:42,960 --> 00:04:48,060
lines are piston and tasty pie I think

00:04:46,889 --> 00:04:49,860
there's a couple of interesting things

00:04:48,060 --> 00:04:52,950
to note about this graph one is Django

00:04:49,860 --> 00:04:55,560
rest framework seems to be the clear

00:04:52,950 --> 00:04:56,850
winner of this crew at this point and

00:04:55,560 --> 00:04:59,550
it's really only happened in the last

00:04:56,850 --> 00:05:02,610
couple of years you know I think there's

00:04:59,550 --> 00:05:04,350
a huge community around this now and you

00:05:02,610 --> 00:05:06,720
know there's a lot of tooling around it

00:05:04,350 --> 00:05:09,240
which is great the other thing to note

00:05:06,720 --> 00:05:11,880
about this graph is just the magnitude

00:05:09,240 --> 00:05:14,390
in general right all three combined it's

00:05:11,880 --> 00:05:17,160
really exploded in the last year or two

00:05:14,390 --> 00:05:19,110
so this is this is you know to me this

00:05:17,160 --> 00:05:21,900
says this stuff's pretty important and

00:05:19,110 --> 00:05:24,419
growing in importance so I want to give

00:05:21,900 --> 00:05:27,330
you a real brief overview of what Django

00:05:24,419 --> 00:05:30,060
rest framework gives to you just so you

00:05:27,330 --> 00:05:31,830
get the ecosystem a little bit there's

00:05:30,060 --> 00:05:35,700
serializers which help you translate

00:05:31,830 --> 00:05:37,380
your django models your data into a

00:05:35,700 --> 00:05:39,960
representation to be sent down over the

00:05:37,380 --> 00:05:43,919
wire so json xml that sort of thing and

00:05:39,960 --> 00:05:47,720
to be re-employed on the way back

00:05:43,919 --> 00:05:51,780
there's views which kind of connect up

00:05:47,720 --> 00:05:54,270
the a query set so your data with that

00:05:51,780 --> 00:05:57,030
serializer and then you connect that to

00:05:54,270 --> 00:06:02,340
an endpoint you can serve in this case

00:05:57,030 --> 00:06:03,720
cats at at a given URL for your api it

00:06:02,340 --> 00:06:05,940
comes with a bunch of authentication

00:06:03,720 --> 00:06:08,070
stuff so it comes with a bunch of

00:06:05,940 --> 00:06:09,300
built-in ones there it's pluggable so

00:06:08,070 --> 00:06:12,479
you can down you know you can pip

00:06:09,300 --> 00:06:14,280
install some other ones but there's a

00:06:12,479 --> 00:06:16,530
really you know pretty straightforward

00:06:14,280 --> 00:06:19,289
framework for adding authentication into

00:06:16,530 --> 00:06:21,150
your api and then permissioning and

00:06:19,289 --> 00:06:25,520
we'll dive a little bit deeper into

00:06:21,150 --> 00:06:29,550
those two the rest of this this talk

00:06:25,520 --> 00:06:33,539
cool so let's talk about security

00:06:29,550 --> 00:06:36,510
authorization authentication in in the

00:06:33,539 --> 00:06:39,300
context of this REST API

00:06:36,510 --> 00:06:41,730
so you remember this diagram where a

00:06:39,300 --> 00:06:44,670
plod you know the front end the browser

00:06:41,730 --> 00:06:46,500
was swallowing up your app logic there's

00:06:44,670 --> 00:06:51,510
another important way to think about

00:06:46,500 --> 00:06:55,110
this I think which is a lot of your app

00:06:51,510 --> 00:06:57,300
logic is now running in this insecure

00:06:55,110 --> 00:07:00,810
browser environment right if you think

00:06:57,300 --> 00:07:03,600
about it we've been able to rely on the

00:07:00,810 --> 00:07:06,060
server being you know presumably secure

00:07:03,600 --> 00:07:09,060
write that code there you know you wrote

00:07:06,060 --> 00:07:12,540
it you know what's running the browser

00:07:09,060 --> 00:07:15,450
not so much right the browser anyone can

00:07:12,540 --> 00:07:17,850
do anything a nefarious agent can you

00:07:15,450 --> 00:07:19,530
know mess with whatever they want and as

00:07:17,850 --> 00:07:22,530
soon as we started doing more of the app

00:07:19,530 --> 00:07:24,990
logic in the browser and getting closer

00:07:22,530 --> 00:07:27,780
to the data store it opened up a lot of

00:07:24,990 --> 00:07:30,050
new security issues that I think that we

00:07:27,780 --> 00:07:32,640
you know we don't have a lot of practice

00:07:30,050 --> 00:07:35,310
working with as as web developers

00:07:32,640 --> 00:07:37,020
working in in Django more you know the

00:07:35,310 --> 00:07:38,610
historically the way jingoes worked so

00:07:37,020 --> 00:07:39,930
there's some new concepts to sort of

00:07:38,610 --> 00:07:44,730
wrap your head around here and some new

00:07:39,930 --> 00:07:46,770
security issues to be aware of all right

00:07:44,730 --> 00:07:48,210
so I want to go a quick overview of the

00:07:46,770 --> 00:07:50,460
kinds of authentication just to give you

00:07:48,210 --> 00:07:52,710
a sense of like what's involved here

00:07:50,460 --> 00:07:54,690
right why is this such a big problem

00:07:52,710 --> 00:07:57,440
it's sort of an N squared and cubed

00:07:54,690 --> 00:07:59,370
problem because there's so much going on

00:07:57,440 --> 00:08:01,170
authentication right there's a lot of

00:07:59,370 --> 00:08:02,670
different ways to authenticate many of

00:08:01,170 --> 00:08:04,290
these are built-in some of them you can

00:08:02,670 --> 00:08:06,180
you can pip install like I mentioned

00:08:04,290 --> 00:08:10,890
you've got it should be basic off

00:08:06,180 --> 00:08:12,960
jingoes session off token off o off JSON

00:08:10,890 --> 00:08:14,250
web token auth there's there's a lot of

00:08:12,960 --> 00:08:17,010
different mechanisms that you can

00:08:14,250 --> 00:08:19,470
install to do authentication and the key

00:08:17,010 --> 00:08:24,390
here is probably most of these web apps

00:08:19,470 --> 00:08:27,120
are not using just one right so you know

00:08:24,390 --> 00:08:29,820
you might use Django session off as kind

00:08:27,120 --> 00:08:31,440
of your main authentication format but

00:08:29,820 --> 00:08:32,910
then also if you're gonna do a password

00:08:31,440 --> 00:08:34,530
reset there's a token there and that's a

00:08:32,910 --> 00:08:35,969
different kind of authentication and

00:08:34,530 --> 00:08:37,440
maybe you want users to sign up with

00:08:35,969 --> 00:08:39,539
Facebook and then that's another kind of

00:08:37,440 --> 00:08:40,979
authentication and suddenly you've got

00:08:39,539 --> 00:08:42,360
all these different levels of

00:08:40,979 --> 00:08:45,360
authentication that you have to deal

00:08:42,360 --> 00:08:46,530
with and cross-reference with all the

00:08:45,360 --> 00:08:47,730
different kinds of permissions that you

00:08:46,530 --> 00:08:50,730
care about right and there's a

00:08:47,730 --> 00:08:53,580
of these as well so you can have table

00:08:50,730 --> 00:08:57,690
level permissions right can you access

00:08:53,580 --> 00:08:59,550
the cats or not there's row level

00:08:57,690 --> 00:09:01,260
permissions right is this your cat or is

00:08:59,550 --> 00:09:02,580
this someone else's cat and what does

00:09:01,260 --> 00:09:05,610
that mean for your permissions

00:09:02,580 --> 00:09:07,170
there's column level permissions so as

00:09:05,610 --> 00:09:09,360
much as we love cats let's talk about

00:09:07,170 --> 00:09:11,880
you know the user model right you might

00:09:09,360 --> 00:09:15,810
want your users to be able to set their

00:09:11,880 --> 00:09:17,700
name right change their name in in your

00:09:15,810 --> 00:09:19,580
website but you probably don't want them

00:09:17,700 --> 00:09:22,650
to be able to set the superuser flag

00:09:19,580 --> 00:09:24,000
right and so suddenly you've got these

00:09:22,650 --> 00:09:26,040
column level permissions where you have

00:09:24,000 --> 00:09:28,380
to say these kinds of users with these

00:09:26,040 --> 00:09:30,930
kinds of authentications should be able

00:09:28,380 --> 00:09:34,560
to touch these these columns not these

00:09:30,930 --> 00:09:36,840
columns and then HTTP verb permissions

00:09:34,560 --> 00:09:39,860
which roughly analogous to read write

00:09:36,840 --> 00:09:42,630
and that sort of thing read write delete

00:09:39,860 --> 00:09:44,430
you know and so you know like I was

00:09:42,630 --> 00:09:46,230
saying all of these things combined and

00:09:44,430 --> 00:09:47,700
you start to get this N squared or an

00:09:46,230 --> 00:09:49,500
acute problem because there are other

00:09:47,700 --> 00:09:51,990
other factors you need to take into

00:09:49,500 --> 00:09:53,310
account where there are a lot of

00:09:51,990 --> 00:09:55,170
different combinations a lot of

00:09:53,310 --> 00:09:56,850
different situations that you need to

00:09:55,170 --> 00:10:00,720
account for and it gets messy really

00:09:56,850 --> 00:10:02,550
really quickly if you're not careful so

00:10:00,720 --> 00:10:05,970
let's talk a little bit about how we do

00:10:02,550 --> 00:10:07,940
a good job of this today right what

00:10:05,970 --> 00:10:11,730
tools do we have at our disposal today

00:10:07,940 --> 00:10:15,990
to you know put some order into this and

00:10:11,730 --> 00:10:17,940
and make it maintainable make it safe so

00:10:15,990 --> 00:10:21,030
the first and really the biggest concept

00:10:17,940 --> 00:10:23,070
that I want you all to understand and

00:10:21,030 --> 00:10:26,070
take back and implement is small

00:10:23,070 --> 00:10:27,990
composable permissions take those

00:10:26,070 --> 00:10:29,910
permission classes in Django rest

00:10:27,990 --> 00:10:33,260
framework and make them as small and

00:10:29,910 --> 00:10:36,420
focused as possible and you'll see later

00:10:33,260 --> 00:10:38,580
we're gonna use we're going to use a

00:10:36,420 --> 00:10:41,940
tool to kind of compose those into more

00:10:38,580 --> 00:10:45,750
complicated permissions so you might

00:10:41,940 --> 00:10:48,410
have some HTTP verb permissions right so

00:10:45,750 --> 00:10:51,810
we can create one called is post

00:10:48,410 --> 00:10:53,820
subclass the permission class and then

00:10:51,810 --> 00:10:55,740
has permission this function that says

00:10:53,820 --> 00:10:58,470
you know does this person have this

00:10:55,740 --> 00:10:59,580
permission it really just checks is this

00:10:58,470 --> 00:11:02,430
a post

00:10:59,580 --> 00:11:04,800
and that's it right on its own pretty

00:11:02,430 --> 00:11:06,180
much useless probably but when we start

00:11:04,800 --> 00:11:08,760
composing it with other things you'll

00:11:06,180 --> 00:11:11,459
see the power of this and then so you

00:11:08,760 --> 00:11:13,920
might have one for is patch you might

00:11:11,459 --> 00:11:15,690
have one for all the HTTP verbs right

00:11:13,920 --> 00:11:18,450
and then these become tools in your tool

00:11:15,690 --> 00:11:22,079
chest that you can apply to more complex

00:11:18,450 --> 00:11:23,690
permissioning problems let's look at

00:11:22,079 --> 00:11:27,540
user status you might have an is

00:11:23,690 --> 00:11:31,350
authenticated permission right and this

00:11:27,540 --> 00:11:33,660
one that has permission just checks are

00:11:31,350 --> 00:11:36,269
you authenticate it there you go

00:11:33,660 --> 00:11:39,420
simple easy to unit tests easy to think

00:11:36,269 --> 00:11:40,980
about easy to reason about and they'll

00:11:39,420 --> 00:11:43,769
come together in really powerful ways a

00:11:40,980 --> 00:11:45,660
little later you might have one for is

00:11:43,769 --> 00:11:48,690
super user that checks the super user

00:11:45,660 --> 00:11:50,459
flag and then you know all the other

00:11:48,690 --> 00:11:52,470
authentication methods right so you'd go

00:11:50,459 --> 00:11:54,899
on and on and on so you know if you have

00:11:52,470 --> 00:11:57,209
Facebook authentication you'd have some

00:11:54,899 --> 00:12:00,329
of these for Facebook if you have that

00:11:57,209 --> 00:12:03,089
URL token as an Authenticator you'd have

00:12:00,329 --> 00:12:05,820
one of these for that right just really

00:12:03,089 --> 00:12:08,250
simple checks you're gonna do the same

00:12:05,820 --> 00:12:11,779
thing potentially for ownership right

00:12:08,250 --> 00:12:14,040
are you the owner of this cat and

00:12:11,779 --> 00:12:15,870
there's a little bit of a caveat here

00:12:14,040 --> 00:12:19,110
the way that Django rest framework is

00:12:15,870 --> 00:12:20,670
set up it's really hard to do this check

00:12:19,110 --> 00:12:23,149
in the has permission like you would

00:12:20,670 --> 00:12:27,149
want right so for list level permissions

00:12:23,149 --> 00:12:28,740
getting a bunch of cats for example you

00:12:27,149 --> 00:12:31,550
really end up having to implement that

00:12:28,740 --> 00:12:36,000
in the get query set method on the view

00:12:31,550 --> 00:12:36,899
on the view set which is which is one of

00:12:36,000 --> 00:12:39,600
the things that we're going to talk

00:12:36,899 --> 00:12:43,020
about hopefully making better in the

00:12:39,600 --> 00:12:45,990
future but then you see the house object

00:12:43,020 --> 00:12:48,300
permission which where you can kind of

00:12:45,990 --> 00:12:50,610
define does this user have permission to

00:12:48,300 --> 00:12:53,610
touch this object is pretty

00:12:50,610 --> 00:12:56,850
straightforward right or is this request

00:12:53,610 --> 00:12:59,250
user the owner of this cat object there

00:12:56,850 --> 00:13:00,540
you go and again you'll do this for all

00:12:59,250 --> 00:13:03,540
of the different components in your

00:13:00,540 --> 00:13:06,000
application that you care about all

00:13:03,540 --> 00:13:11,339
right so to put it all together we need

00:13:06,000 --> 00:13:13,060
a couple more power tools the first is a

00:13:11,339 --> 00:13:16,420
field restriction how

00:13:13,060 --> 00:13:18,550
or and I'll walk you through this but

00:13:16,420 --> 00:13:21,220
basically what we want out of this is

00:13:18,550 --> 00:13:22,960
you know I remember I mentioned if you

00:13:21,220 --> 00:13:25,090
want your users to be able to set their

00:13:22,960 --> 00:13:26,530
name on their account but you don't want

00:13:25,090 --> 00:13:29,110
them to be able to set the superuser

00:13:26,530 --> 00:13:30,580
flag this is how we're going to

00:13:29,110 --> 00:13:33,640
accomplish that sort of thing right

00:13:30,580 --> 00:13:36,580
we're going to it's basically it ends up

00:13:33,640 --> 00:13:38,160
being a a class constructor or class

00:13:36,580 --> 00:13:40,510
Factory

00:13:38,160 --> 00:13:42,670
I've capitalized this to make it look

00:13:40,510 --> 00:13:44,410
like a class I think that looks nice in

00:13:42,670 --> 00:13:46,630
the final product but technically this

00:13:44,410 --> 00:13:47,890
is a function if that bugs you when you

00:13:46,630 --> 00:13:51,460
do this you can you can go ahead and

00:13:47,890 --> 00:13:52,780
name it lower case but yeah so you're

00:13:51,460 --> 00:13:55,360
going to have a function that takes a

00:13:52,780 --> 00:13:58,960
set of fields right so like the name

00:13:55,360 --> 00:14:00,010
field but not the superuser field and

00:13:58,960 --> 00:14:01,990
what it's going to do is it's going to

00:14:00,010 --> 00:14:05,050
construct that permission class for you

00:14:01,990 --> 00:14:07,210
on demand it's going to create a set out

00:14:05,050 --> 00:14:09,960
of the fields and save that for later

00:14:07,210 --> 00:14:12,400
and then that permission class when it

00:14:09,960 --> 00:14:16,120
gets asked does the user have permission

00:14:12,400 --> 00:14:17,050
it's just gonna say hey all the fields

00:14:16,120 --> 00:14:20,890
that you're talking about in this

00:14:17,050 --> 00:14:22,630
request are they a strict subset of the

00:14:20,890 --> 00:14:24,970
allowable fields that this was created

00:14:22,630 --> 00:14:26,380
with right so you can say you know if

00:14:24,970 --> 00:14:28,450
you passed in you know you're doing is

00:14:26,380 --> 00:14:30,850
fields and you pass in just the name

00:14:28,450 --> 00:14:34,060
field then anyone who ever tries to

00:14:30,850 --> 00:14:36,970
touch the superuser flag will get denied

00:14:34,060 --> 00:14:38,290
by this permission right and you do

00:14:36,970 --> 00:14:41,050
essentially the same thing under the

00:14:38,290 --> 00:14:44,770
house object permission and then you

00:14:41,050 --> 00:14:46,180
return the permission class awesome so

00:14:44,770 --> 00:14:48,850
now we can restrict the columns that

00:14:46,180 --> 00:14:51,550
you're accessing this is a this is a

00:14:48,850 --> 00:14:54,640
tool that you know as you can see this

00:14:51,550 --> 00:14:55,870
is a basic version of it it's relatively

00:14:54,640 --> 00:14:58,180
straightforward to put together yourself

00:14:55,870 --> 00:14:59,020
but it's also something that you know

00:14:58,180 --> 00:15:00,700
we've written and we'd like to

00:14:59,020 --> 00:15:03,610
open-source so hopefully we can do that

00:15:00,700 --> 00:15:05,320
soon for you guys you know we'd love

00:15:03,610 --> 00:15:07,030
more batteries to be just out there and

00:15:05,320 --> 00:15:09,160
ready to use

00:15:07,030 --> 00:15:11,170
so the last power tool we need is this

00:15:09,160 --> 00:15:13,330
thing called rest condition so you can

00:15:11,170 --> 00:15:15,790
pimp install rest condition and this is

00:15:13,330 --> 00:15:18,760
really the crux of everything right it

00:15:15,790 --> 00:15:21,310
gives you these composers these ands and

00:15:18,760 --> 00:15:23,140
ORS and nots that you use to put these

00:15:21,310 --> 00:15:24,130
pieces together into more complicated

00:15:23,140 --> 00:15:27,069
permissions

00:15:24,130 --> 00:15:29,079
right so you could combine two things

00:15:27,069 --> 00:15:32,920
with an oar and you could describe a

00:15:29,079 --> 00:15:36,899
permission as if you have fou perm and

00:15:32,920 --> 00:15:40,420
not borrow perm or if you have baz perm

00:15:36,899 --> 00:15:42,370
then you have this permission right and

00:15:40,420 --> 00:15:44,470
so let me show you an example of how we

00:15:42,370 --> 00:15:48,069
build a relatively complex permission

00:15:44,470 --> 00:15:52,720
structure out of these tiny pieces and

00:15:48,069 --> 00:15:55,329
this rest condition stuff so we've got a

00:15:52,720 --> 00:15:57,850
view set here right we're gonna view

00:15:55,329 --> 00:15:59,380
some cats it's gonna have a lot of other

00:15:57,850 --> 00:16:00,670
stuff if you've written Django rest

00:15:59,380 --> 00:16:01,870
framework stuff this will have you know

00:16:00,670 --> 00:16:03,880
this view set will have lots of other

00:16:01,870 --> 00:16:06,790
things defined in it but what we care

00:16:03,880 --> 00:16:09,370
about is this permission classes where

00:16:06,790 --> 00:16:11,800
we're defining it at a base as this or

00:16:09,370 --> 00:16:14,620
and this is a pattern that you'll end up

00:16:11,800 --> 00:16:16,540
repeating again and again the base is

00:16:14,620 --> 00:16:19,680
just oaring together a bunch of

00:16:16,540 --> 00:16:22,209
different sets of permissions you know

00:16:19,680 --> 00:16:24,220
different kinds of people have different

00:16:22,209 --> 00:16:26,230
kinds of access and that's what you're

00:16:24,220 --> 00:16:29,230
describing here so for example this

00:16:26,230 --> 00:16:31,329
first one is if you if it's a get head

00:16:29,230 --> 00:16:33,819
or option so you know effectively

00:16:31,329 --> 00:16:38,139
read-only and you're an authenticated

00:16:33,819 --> 00:16:39,790
user great you're good to go or if it's

00:16:38,139 --> 00:16:41,410
a post or a patch and you're the owner

00:16:39,790 --> 00:16:43,899
of the cat and you're only touching the

00:16:41,410 --> 00:16:46,630
hair or grumpiness level then you're

00:16:43,899 --> 00:16:48,420
good to go or if you're a super user you

00:16:46,630 --> 00:16:51,399
could just do whatever you want right

00:16:48,420 --> 00:16:55,410
and so you can see this is you know it's

00:16:51,399 --> 00:16:58,449
not totally short it's not totally easy

00:16:55,410 --> 00:17:00,100
but it's a lot less messy and a lot less

00:16:58,449 --> 00:17:02,290
complicated than the alternative which

00:17:00,100 --> 00:17:04,569
is writing all of those things again and

00:17:02,290 --> 00:17:06,640
again for every view set right for every

00:17:04,569 --> 00:17:08,470
set of permissions so these kinds of

00:17:06,640 --> 00:17:11,530
composable things and you know it makes

00:17:08,470 --> 00:17:13,929
it much more readable much more

00:17:11,530 --> 00:17:15,970
maintainable to have these things as

00:17:13,929 --> 00:17:19,600
kind of composable base permission

00:17:15,970 --> 00:17:23,439
classes alright so let's talk a little

00:17:19,600 --> 00:17:26,439
bit about the World of Tomorrow right

00:17:23,439 --> 00:17:29,230
how can the world be better if we were

00:17:26,439 --> 00:17:33,040
to if we were to build some tooling

00:17:29,230 --> 00:17:34,450
around this so let's first give a quick

00:17:33,040 --> 00:17:36,460
overview of kind of the problems that

00:17:34,450 --> 00:17:39,370
exist here

00:17:36,460 --> 00:17:41,410
so there are a few a few things I think

00:17:39,370 --> 00:17:43,180
still plague us even with even with

00:17:41,410 --> 00:17:45,490
these kind of small composable

00:17:43,180 --> 00:17:48,190
permissions one is everything's end

00:17:45,490 --> 00:17:51,250
point based right we defined this on the

00:17:48,190 --> 00:17:53,290
view set class right which roughly

00:17:51,250 --> 00:17:58,120
analogous to an end point the cat's end

00:17:53,290 --> 00:17:59,680
point of your API right I think the the

00:17:58,120 --> 00:18:01,510
the easier way to reason about this

00:17:59,680 --> 00:18:05,020
stuff is to have it be role based right

00:18:01,510 --> 00:18:06,670
role based permissions so if you are a

00:18:05,020 --> 00:18:09,160
super user here's your list of

00:18:06,670 --> 00:18:10,870
permissions if you're a cat owner here's

00:18:09,160 --> 00:18:12,880
your list of permissions and then those

00:18:10,870 --> 00:18:15,910
all get combined but they get to find at

00:18:12,880 --> 00:18:19,360
a role-based level right much easier to

00:18:15,910 --> 00:18:20,880
reason about another thing that plagues

00:18:19,360 --> 00:18:25,090
us says this code is still scattered

00:18:20,880 --> 00:18:27,940
right you saw we've got has permission

00:18:25,090 --> 00:18:30,730
we've got has object permission some of

00:18:27,940 --> 00:18:32,650
it had to go in get query set and it's

00:18:30,730 --> 00:18:35,470
still scattered throughout every single

00:18:32,650 --> 00:18:37,000
view set definition all of those little

00:18:35,470 --> 00:18:39,970
composable permissions it's in lots of

00:18:37,000 --> 00:18:42,430
different places and centralizing all

00:18:39,970 --> 00:18:44,890
the permission code in one common place

00:18:42,430 --> 00:18:47,320
I think would help a lot in kind of

00:18:44,890 --> 00:18:48,970
reasoning about it right it's all right

00:18:47,320 --> 00:18:51,070
there

00:18:48,970 --> 00:18:53,340
as I mentioned batteries aren't entirely

00:18:51,070 --> 00:18:57,790
clean included here a lot of the

00:18:53,340 --> 00:19:00,460
authentication schemes are but you know

00:18:57,790 --> 00:19:02,080
that that is filled thing there are a

00:19:00,460 --> 00:19:04,090
lot of other pieces of this that we've

00:19:02,080 --> 00:19:05,680
had to write internally or working to

00:19:04,090 --> 00:19:07,600
open source those but in the meantime

00:19:05,680 --> 00:19:12,010
right these batteries are not really

00:19:07,600 --> 00:19:13,420
included and the default is confusing

00:19:12,010 --> 00:19:15,550
right

00:19:13,420 --> 00:19:16,930
do you default have permission or not

00:19:15,550 --> 00:19:18,850
have permission right the the more

00:19:16,930 --> 00:19:20,920
secure option is default now you don't

00:19:18,850 --> 00:19:23,170
have permission but the way this is

00:19:20,920 --> 00:19:25,480
working it's sort of confused in some

00:19:23,170 --> 00:19:27,430
some ways it's one in some ways it's the

00:19:25,480 --> 00:19:29,740
other and I think it'd be helpful to

00:19:27,430 --> 00:19:31,600
just standardize no one has any

00:19:29,740 --> 00:19:35,740
permissions unless you explicitly say so

00:19:31,600 --> 00:19:37,540
right so I want to tease you know

00:19:35,740 --> 00:19:40,180
imagine imagine what this might look

00:19:37,540 --> 00:19:42,370
like this is a you know none of this

00:19:40,180 --> 00:19:44,200
code has been written underneath the you

00:19:42,370 --> 00:19:45,880
know none of the code that would

00:19:44,200 --> 00:19:48,070
actually run this has been written but I

00:19:45,880 --> 00:19:49,210
want to give an example of maybe what

00:19:48,070 --> 00:19:52,090
this might look like

00:19:49,210 --> 00:19:53,590
right just to kind of tease the idea and

00:19:52,090 --> 00:19:55,840
hopefully if anyone here is interested

00:19:53,590 --> 00:19:57,550
in this I'm gonna be spending the rest

00:19:55,840 --> 00:19:59,230
of the week hacking on this and trying

00:19:57,550 --> 00:20:00,610
to get something together if you're

00:19:59,230 --> 00:20:00,880
interested in helping out I'd love your

00:20:00,610 --> 00:20:03,370
help

00:20:00,880 --> 00:20:05,160
I'd love to make this this a better you

00:20:03,370 --> 00:20:09,880
know a better situation for everybody

00:20:05,160 --> 00:20:12,280
but this is sort of a v1 idea of what

00:20:09,880 --> 00:20:14,080
the world could look like right you're

00:20:12,280 --> 00:20:16,810
defining a role based permission so

00:20:14,080 --> 00:20:19,020
anonymous user here right you're telling

00:20:16,810 --> 00:20:24,910
me is it active right for this request

00:20:19,020 --> 00:20:27,100
is this role active and then you just

00:20:24,910 --> 00:20:31,570
define the permissions there right so in

00:20:27,100 --> 00:20:34,390
this case for the Kat endpoint you can

00:20:31,570 --> 00:20:37,000
list or retrieve but because it's

00:20:34,390 --> 00:20:39,250
default no permissions you can't post

00:20:37,000 --> 00:20:41,860
you can't patch you can't delete right

00:20:39,250 --> 00:20:44,470
and this would go on of course for for

00:20:41,860 --> 00:20:47,260
other permissions and you'd go on and

00:20:44,470 --> 00:20:49,600
define other roles as well so there's a

00:20:47,260 --> 00:20:51,700
lot of nuance that isn't included here

00:20:49,600 --> 00:20:53,560
there's a lot that still needs to be

00:20:51,700 --> 00:20:55,930
figured out in the house kind of the way

00:20:53,560 --> 00:20:58,720
this would be implemented but I think

00:20:55,930 --> 00:21:00,280
making this this whole ecosystem a lot

00:20:58,720 --> 00:21:02,350
easier to reason about easier to

00:21:00,280 --> 00:21:05,170
maintain is gonna plug up some serious

00:21:02,350 --> 00:21:07,480
security holes I know you know we even

00:21:05,170 --> 00:21:10,150
with these composable permissions we've

00:21:07,480 --> 00:21:12,340
had security polls and I want to save

00:21:10,150 --> 00:21:14,410
people from that I think that's you know

00:21:12,340 --> 00:21:16,480
partly our fault right we wrote the code

00:21:14,410 --> 00:21:18,250
but partly the fault of the tools right

00:21:16,480 --> 00:21:21,210
the tools weren't helping us write

00:21:18,250 --> 00:21:23,950
secure code so that's what I want for us

00:21:21,210 --> 00:21:27,430
and like I said if you are interested in

00:21:23,950 --> 00:21:29,140
helping come find me so thanks so much

00:21:27,430 --> 00:21:30,820
I'm Jeff I have to give a quick plug to

00:21:29,140 --> 00:21:32,770
choose because they paid for me to be

00:21:30,820 --> 00:21:35,500
here so if you know anyone in San

00:21:32,770 --> 00:21:39,130
Francisco who wants better lunches at

00:21:35,500 --> 00:21:41,760
work let us know and yeah that's it

00:21:39,130 --> 00:21:41,760

YouTube URL: https://www.youtube.com/watch?v=2LWheXmsmHg


