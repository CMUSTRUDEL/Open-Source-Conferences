Title: DjangoCon US 2017 - Get a Jumpstart on Collaboration and Code Review in GitHub by Katherine Michel
Publication date: 2017-09-07
Playlist: DjangoCon US 2017
Description: 
	DjangoCon US 2017 - Get a Jumpstart on Collaboration and Code Review in GitHub by Katherine Michel

Even though open-source collaborators and code reviewers are needed more than ever, the few git learning resources that focus on these subjects are not beginner friendly. This is a missed opportunity! As the DjangoCon US Website Chair, I review pull requests submitted to the website repo. This has given me the opportunity to develop a beginner-friendly, best practice GitHub workflow. I can jumpstart your collaboration and code review skills by sharing what Iâ€™ve learned with you. This talk is for anyone, but one of my goals in giving it is to encourage other women to take leadership roles.

This talk was presented at: https://2017.djangocon.us/talks/get-a-jumpstart-on-collaboration-and-code-review-in-github/

LINKS:
Follow Carlos Martinez ðŸ‘‡
On Twitter: https://twitter.com/KatiMichel
Official homepage: https://katherinemichel.github.io

Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,000 --> 00:00:19,980
[Music]

00:00:15,289 --> 00:00:21,750
welcome everyone I am so thrilled to

00:00:19,980 --> 00:00:23,550
have the opportunity to share with you

00:00:21,750 --> 00:00:27,750
what I've learned is the django con u.s.

00:00:23,550 --> 00:00:29,700
website share I want to teach all of you

00:00:27,750 --> 00:00:32,279
a process that will get you started

00:00:29,700 --> 00:00:35,010
collaborating and doing code review as

00:00:32,279 --> 00:00:36,960
quickly as possible I'm going to show

00:00:35,010 --> 00:00:38,910
you a lot of screenshots and diagrams

00:00:36,960 --> 00:00:41,339
because I want you to understand what

00:00:38,910 --> 00:00:43,050
the process should look like but don't

00:00:41,339 --> 00:00:45,329
worry if you miss anything because at

00:00:43,050 --> 00:00:47,489
the end of my talk there will be a link

00:00:45,329 --> 00:00:49,230
to some useful resources including all

00:00:47,489 --> 00:00:51,690
of the commands I'll be showing you and

00:00:49,230 --> 00:00:55,140
my slides and a video my talk will be

00:00:51,690 --> 00:00:57,179
online later so firstly I want to tell

00:00:55,140 --> 00:00:59,069
you how I got started with open source

00:00:57,179 --> 00:01:01,530
contribution because it's a fun story

00:00:59,069 --> 00:01:04,979
and I think it will show you that there

00:01:01,530 --> 00:01:07,770
are unique ways to get involved so back

00:01:04,979 --> 00:01:10,590
in April of 2013 I signed up for github

00:01:07,770 --> 00:01:13,080
and I didn't know how to get started so

00:01:10,590 --> 00:01:14,910
my accounts at unused for about seven

00:01:13,080 --> 00:01:17,700
months and one day I was looking at

00:01:14,910 --> 00:01:21,600
Twitter and this man named Dan sinker

00:01:17,700 --> 00:01:24,630
had made this incredibly delicious taco

00:01:21,600 --> 00:01:27,150
meal and he decided to go on github and

00:01:24,630 --> 00:01:30,810
create a project to collaborate and

00:01:27,150 --> 00:01:33,060
sharing taco recipes so I went to the

00:01:30,810 --> 00:01:34,650
project information and there was one

00:01:33,060 --> 00:01:37,170
sentence that had a really drastic

00:01:34,650 --> 00:01:40,050
impact on me and it was are you new to

00:01:37,170 --> 00:01:43,710
get hub but want to contribute well that

00:01:40,050 --> 00:01:46,410
was me and I became extremely determined

00:01:43,710 --> 00:01:48,420
to contribute to that project and I did

00:01:46,410 --> 00:01:51,150
I submitted my first pull request there

00:01:48,420 --> 00:01:54,270
and it was a little bit addictive to be

00:01:51,150 --> 00:01:56,130
honest with you so I kept using git and

00:01:54,270 --> 00:01:58,440
github and I kept getting better at it

00:01:56,130 --> 00:02:01,200
and eventually I started to contribute

00:01:58,440 --> 00:02:03,210
to the Django con us website and this

00:02:01,200 --> 00:02:05,520
year I became website share and a

00:02:03,210 --> 00:02:07,650
maintainer and I'm going to use the

00:02:05,520 --> 00:02:11,430
Django con u.s. website as an example

00:02:07,650 --> 00:02:13,290
throughout my talk so firstly let's be

00:02:11,430 --> 00:02:16,290
clear about what github and get our

00:02:13,290 --> 00:02:19,200
github github as a website built on the

00:02:16,290 --> 00:02:22,000
version control system get github is a

00:02:19,200 --> 00:02:24,850
social network you can make a user

00:02:22,000 --> 00:02:26,800
file follow people follow their activity

00:02:24,850 --> 00:02:29,560
in your newsfeed and find interesting

00:02:26,800 --> 00:02:32,560
projects but the most important part of

00:02:29,560 --> 00:02:35,640
github is that users can store and work

00:02:32,560 --> 00:02:38,530
on code together in repositories for

00:02:35,640 --> 00:02:40,660
example if you go to the Django con US

00:02:38,530 --> 00:02:43,510
organization account you'll see a list

00:02:40,660 --> 00:02:45,730
of repos and at the top of this

00:02:43,510 --> 00:02:48,520
particular screenshot is the django con

00:02:45,730 --> 00:02:50,590
u.s. website repo so if you click on the

00:02:48,520 --> 00:02:52,120
hyperlink it will open up the repo and

00:02:50,590 --> 00:02:54,459
you can see the files and the folders

00:02:52,120 --> 00:02:57,070
and you can look through the website

00:02:54,459 --> 00:02:59,380
code for the website but when we are

00:02:57,070 --> 00:03:02,230
working on code we can't do everything

00:02:59,380 --> 00:03:04,870
in a website for example you might want

00:03:02,230 --> 00:03:06,790
to make a copy of the Django con Us

00:03:04,870 --> 00:03:09,640
website code in your local development

00:03:06,790 --> 00:03:12,250
environment on your computer and install

00:03:09,640 --> 00:03:14,530
whatever software is necessary and run

00:03:12,250 --> 00:03:16,570
the code in your local browser for

00:03:14,530 --> 00:03:19,690
instance if you want to add a feature or

00:03:16,570 --> 00:03:22,840
test a pull request branch this is where

00:03:19,690 --> 00:03:24,610
git is really useful it's installed in

00:03:22,840 --> 00:03:27,310
your local development environment and

00:03:24,610 --> 00:03:29,739
you can use it in your command line and

00:03:27,310 --> 00:03:32,080
get can make a snapshot of your project

00:03:29,739 --> 00:03:34,299
at any point in time and you can even

00:03:32,080 --> 00:03:37,209
revert back to that snapshot if you need

00:03:34,299 --> 00:03:39,310
to so on the screen is a screenshot of

00:03:37,209 --> 00:03:41,170
my local development environment and in

00:03:39,310 --> 00:03:43,540
the background I have github open in the

00:03:41,170 --> 00:03:45,910
browser and in front of that I have my

00:03:43,540 --> 00:03:49,030
local folder window and my command line

00:03:45,910 --> 00:03:51,070
and I could go to the repo and github

00:03:49,030 --> 00:03:54,640
and I can take the web address from the

00:03:51,070 --> 00:03:56,920
github repo and copy and paste it into a

00:03:54,640 --> 00:03:59,110
command in the command line and I can

00:03:56,920 --> 00:04:00,970
use that to make a copy of the repo in

00:03:59,110 --> 00:04:03,640
my local development environment which

00:04:00,970 --> 00:04:06,579
is called cloning so I can then make

00:04:03,640 --> 00:04:08,140
changes to the code and push the changes

00:04:06,579 --> 00:04:09,880
back to github and meanwhile other

00:04:08,140 --> 00:04:12,310
people will be doing the same thing on

00:04:09,880 --> 00:04:14,590
their computers and I'm gonna go much

00:04:12,310 --> 00:04:17,790
more into detail about that process in a

00:04:14,590 --> 00:04:20,560
few minutes but I want to tell you a

00:04:17,790 --> 00:04:22,750
concept that I think is really really

00:04:20,560 --> 00:04:25,620
important that I don't hear people talk

00:04:22,750 --> 00:04:28,720
about as your level of responsibility

00:04:25,620 --> 00:04:31,360
increases you need to be able to switch

00:04:28,720 --> 00:04:33,280
between multiple tasks for instance you

00:04:31,360 --> 00:04:35,409
might want to keep your main codebase

00:04:33,280 --> 00:04:37,659
up-to-date create one arm

00:04:35,409 --> 00:04:39,879
our features and do code review and you

00:04:37,659 --> 00:04:42,009
need to switch between these when I

00:04:39,879 --> 00:04:44,499
first started using github it was pretty

00:04:42,009 --> 00:04:47,259
common that I might go into a repo in my

00:04:44,499 --> 00:04:49,419
own personal account and click on the

00:04:47,259 --> 00:04:51,009
pencil icon and open a file and make a

00:04:49,419 --> 00:04:53,499
change and click Save

00:04:51,009 --> 00:04:55,659
well this is fine but imagine if you're

00:04:53,499 --> 00:04:57,399
working with multiple other people and

00:04:55,659 --> 00:04:59,499
you're all doing that it's not very

00:04:57,399 --> 00:05:01,209
practical for instance how would you

00:04:59,499 --> 00:05:03,369
give feedback if you're all just making

00:05:01,209 --> 00:05:05,409
changes so there's actually a way to

00:05:03,369 --> 00:05:07,809
make changes that enables you to switch

00:05:05,409 --> 00:05:09,669
between multiple tasks the way that you

00:05:07,809 --> 00:05:12,219
need to to collaborate and do code

00:05:09,669 --> 00:05:15,550
review and that is by using branches

00:05:12,219 --> 00:05:18,099
there are best practice and any github

00:05:15,550 --> 00:05:20,110
user can use them so for instance when

00:05:18,099 --> 00:05:22,360
you first create a repo by default

00:05:20,110 --> 00:05:24,879
you're working in a branch called master

00:05:22,360 --> 00:05:27,249
so say for instance you want to make a

00:05:24,879 --> 00:05:29,679
change to the master branch you can make

00:05:27,249 --> 00:05:32,649
a copy of the entire master branch and

00:05:29,679 --> 00:05:34,989
give it a new name and now there are two

00:05:32,649 --> 00:05:37,149
branches in the same repo the master

00:05:34,989 --> 00:05:39,369
branch and a feature branch and you can

00:05:37,149 --> 00:05:41,679
do this an unlimited number of times and

00:05:39,369 --> 00:05:44,199
you can switch between them to work on

00:05:41,679 --> 00:05:47,169
them so at some point the feature branch

00:05:44,199 --> 00:05:49,389
author may think that their branch is

00:05:47,169 --> 00:05:51,339
done and they submit a pull request and

00:05:49,389 --> 00:05:54,550
the feature branch becomes a pull

00:05:51,339 --> 00:05:56,289
request branch and if the changes are

00:05:54,550 --> 00:05:58,539
accepted they'll be merged into the

00:05:56,289 --> 00:06:00,969
master branch so the master branch will

00:05:58,539 --> 00:06:03,519
be like it was before except it will now

00:06:00,969 --> 00:06:05,019
have the changes in it but something

00:06:03,519 --> 00:06:07,419
interesting to know is that feature

00:06:05,019 --> 00:06:10,329
branches and pull request branches are

00:06:07,419 --> 00:06:13,539
both just examples of branches and they

00:06:10,329 --> 00:06:15,069
can be worked on in much the same way so

00:06:13,539 --> 00:06:19,119
let's go back to a screen shot of

00:06:15,069 --> 00:06:21,129
editing a file in github at the bottom

00:06:19,119 --> 00:06:23,559
before you click Save there's a radial

00:06:21,129 --> 00:06:26,110
button that you can click to indicate

00:06:23,559 --> 00:06:27,789
you want to create a new branch and you

00:06:26,110 --> 00:06:29,800
can give it a new name so now when you

00:06:27,789 --> 00:06:31,959
click to save the changes they won't

00:06:29,800 --> 00:06:35,469
save in the current file you'll have a

00:06:31,959 --> 00:06:37,479
new branch you can also create and work

00:06:35,469 --> 00:06:39,449
on branches through the command line and

00:06:37,479 --> 00:06:42,279
I'm going to show you that process later

00:06:39,449 --> 00:06:44,229
so in this talk we're going to determine

00:06:42,279 --> 00:06:46,839
which collaboration approach to use

00:06:44,229 --> 00:06:48,129
we're going to clone a repo into our

00:06:46,839 --> 00:06:50,919
local development and by

00:06:48,129 --> 00:06:53,080
create a feature branch make a change

00:06:50,919 --> 00:06:55,899
push the branch to the github repo we

00:06:53,080 --> 00:06:58,779
clone from and submit a pull request to

00:06:55,899 --> 00:07:00,550
the Django con us website repo and then

00:06:58,779 --> 00:07:02,739
we're going to review the two different

00:07:00,550 --> 00:07:05,139
types of pull requests as a Django con

00:07:02,739 --> 00:07:07,809
us website repo maintainer and then I'll

00:07:05,139 --> 00:07:09,550
have a few recommendations so let's

00:07:07,809 --> 00:07:13,179
determine which collaboration approach

00:07:09,550 --> 00:07:15,879
to use there is a fancy term that

00:07:13,179 --> 00:07:17,800
actually just means how people work on

00:07:15,879 --> 00:07:20,050
software together it's collaborative

00:07:17,800 --> 00:07:21,129
development model and there are two

00:07:20,050 --> 00:07:23,919
different models

00:07:21,129 --> 00:07:26,499
there's the shared repository model and

00:07:23,919 --> 00:07:28,869
the fork and pull model and the two

00:07:26,499 --> 00:07:31,089
different models typically correspond to

00:07:28,869 --> 00:07:33,909
two different account types and which

00:07:31,089 --> 00:07:37,149
model you use depends on whether or not

00:07:33,909 --> 00:07:38,879
you have write permission to the repo so

00:07:37,149 --> 00:07:41,499
there are two types of accounts

00:07:38,879 --> 00:07:44,199
organization accounts such as django con

00:07:41,499 --> 00:07:47,739
organization and user accounts such as

00:07:44,199 --> 00:07:49,899
my own personal account and write

00:07:47,739 --> 00:07:52,599
permission is really important in all

00:07:49,899 --> 00:07:55,449
this when a user has write permission to

00:07:52,599 --> 00:07:58,689
a repo it means that they can make

00:07:55,449 --> 00:08:00,550
changes directly inside of the repo so

00:07:58,689 --> 00:08:03,819
let's look at a couple examples of write

00:08:00,550 --> 00:08:05,110
permission and collaboration so first

00:08:03,819 --> 00:08:08,829
we'll look at the shared repository

00:08:05,110 --> 00:08:10,959
model a shared repository is typically

00:08:08,829 --> 00:08:12,639
found in an organization account which

00:08:10,959 --> 00:08:15,429
makes sense when you think of the word

00:08:12,639 --> 00:08:17,919
shared so for example this year I became

00:08:15,429 --> 00:08:20,709
a maintainer of the Django con us web

00:08:17,919 --> 00:08:23,559
site so I was given write permission to

00:08:20,709 --> 00:08:25,329
the Django con us repo which is a shared

00:08:23,559 --> 00:08:27,279
repository so along with the other

00:08:25,329 --> 00:08:29,679
maintainer x' who also have write

00:08:27,279 --> 00:08:33,579
permission I can may change this

00:08:29,679 --> 00:08:35,829
directly inside of the repo the forg and

00:08:33,579 --> 00:08:38,860
pull model and contrast is typically

00:08:35,829 --> 00:08:40,990
found in user account repos for example

00:08:38,860 --> 00:08:44,199
when I first came across the Django con

00:08:40,990 --> 00:08:46,389
us web site repo I wanted to contribute

00:08:44,199 --> 00:08:48,880
but I wasn't a maintainer so I didn't

00:08:46,389 --> 00:08:50,800
have write permission so I needed to

00:08:48,880 --> 00:08:54,519
make a copy of the repo which is called

00:08:50,800 --> 00:08:56,529
a fork into my own user account which I

00:08:54,519 --> 00:08:58,660
have write permission to so then I could

00:08:56,529 --> 00:09:01,720
make a change to it and I could submit a

00:08:58,660 --> 00:09:04,449
request a pull request to the Django con

00:09:01,720 --> 00:09:07,389
u.s. website repo so let's look at how

00:09:04,449 --> 00:09:09,790
we fork a repo for example if we go to

00:09:07,389 --> 00:09:13,000
the Django con Us website repo we can

00:09:09,790 --> 00:09:16,750
click the fork button or we can try to

00:09:13,000 --> 00:09:18,699
edit a file in a github repo that we do

00:09:16,750 --> 00:09:21,759
not have right permission to and github

00:09:18,699 --> 00:09:24,040
will automatically fork the repo into

00:09:21,759 --> 00:09:26,230
our user account and there will be a

00:09:24,040 --> 00:09:29,439
message notifying us that it has been

00:09:26,230 --> 00:09:32,829
fort and the fork message will basically

00:09:29,439 --> 00:09:34,689
lead us back to our user account and in

00:09:32,829 --> 00:09:36,879
the list of repos there will now be an

00:09:34,689 --> 00:09:39,490
entry for the fork it will say where it

00:09:36,879 --> 00:09:41,470
was forked from and if you click on the

00:09:39,490 --> 00:09:44,470
hyperlink it will open the repo and

00:09:41,470 --> 00:09:47,860
something useful to notice is that the

00:09:44,470 --> 00:09:50,500
repo you bar there the forked repo URL

00:09:47,860 --> 00:09:53,079
will have your user account name in it

00:09:50,500 --> 00:09:56,350
because it's a copy under your user

00:09:53,079 --> 00:09:58,480
account so the fork is an exact copy of

00:09:56,350 --> 00:10:01,060
the original repo at the time it was

00:09:58,480 --> 00:10:04,060
forked and you can basically make any

00:10:01,060 --> 00:10:05,560
change to it even delete it and the

00:10:04,060 --> 00:10:08,350
original repo is not going to be

00:10:05,560 --> 00:10:09,699
affected so now we're going to clone a

00:10:08,350 --> 00:10:12,759
repo into our local development

00:10:09,699 --> 00:10:13,420
environment create a feature branch make

00:10:12,759 --> 00:10:15,639
a change

00:10:13,420 --> 00:10:19,300
push the branch back to github and

00:10:15,639 --> 00:10:21,519
submit a pull request so I made a couple

00:10:19,300 --> 00:10:23,949
of diagrams that I hope will give you an

00:10:21,519 --> 00:10:26,230
idea of what what the process is like

00:10:23,949 --> 00:10:28,930
depending on which collaborative

00:10:26,230 --> 00:10:31,059
development model you're using so in the

00:10:28,930 --> 00:10:34,809
fork and pull model you fork the repo

00:10:31,059 --> 00:10:37,389
and you clone the fork and it's useful

00:10:34,809 --> 00:10:39,129
to know at this point that git will

00:10:37,389 --> 00:10:41,589
track some information about your

00:10:39,129 --> 00:10:45,069
project for instance it will know where

00:10:41,589 --> 00:10:46,839
your code was cloned from so in relation

00:10:45,069 --> 00:10:49,420
to the clone in your local development

00:10:46,839 --> 00:10:52,720
environment the github repo we cloned

00:10:49,420 --> 00:10:55,870
from is called a remote repo and get

00:10:52,720 --> 00:10:58,540
we'll call it origin and we can now use

00:10:55,870 --> 00:11:01,059
the name origin in our command line to

00:10:58,540 --> 00:11:03,399
refer to the remote repo so we can push

00:11:01,059 --> 00:11:05,259
and pull changes back and forth between

00:11:03,399 --> 00:11:07,779
the local development environment and

00:11:05,259 --> 00:11:10,000
the github repo so we make our changes

00:11:07,779 --> 00:11:13,809
and we push the changes back to the fork

00:11:10,000 --> 00:11:15,160
and we submit our pull request so this

00:11:13,809 --> 00:11:18,520
is what it looks like

00:11:15,160 --> 00:11:20,560
we use the shared repository model we

00:11:18,520 --> 00:11:23,590
don't need a fork now because we have

00:11:20,560 --> 00:11:26,290
write permission so we're simply cloning

00:11:23,590 --> 00:11:29,380
the shared repository and the shared

00:11:26,290 --> 00:11:32,290
repository on github is now our remote

00:11:29,380 --> 00:11:33,820
origin and we make our changes we push

00:11:32,290 --> 00:11:36,400
the change us back to the shared

00:11:33,820 --> 00:11:39,220
repository and we submit the pull

00:11:36,400 --> 00:11:41,650
request so now I'm going to show you a

00:11:39,220 --> 00:11:44,410
generic process that you can use

00:11:41,650 --> 00:11:46,630
regardless of which collaborative

00:11:44,410 --> 00:11:50,230
development model you're using we are

00:11:46,630 --> 00:11:52,720
simply cloning whichever repo you have

00:11:50,230 --> 00:11:54,430
write permission to so let's go back to

00:11:52,720 --> 00:11:56,590
the screenshot on my local development

00:11:54,430 --> 00:11:58,390
environment and I can see that I'm

00:11:56,590 --> 00:12:02,200
working in my home directory in this

00:11:58,390 --> 00:12:04,360
matters because the repo is going to be

00:12:02,200 --> 00:12:07,810
cloned into the directory we're working

00:12:04,360 --> 00:12:09,820
in so at the top of my command line and

00:12:07,810 --> 00:12:12,850
in front of my command prompt it has the

00:12:09,820 --> 00:12:15,520
name of my home directory so I'm going

00:12:12,850 --> 00:12:17,680
to type the command git clone and you

00:12:15,520 --> 00:12:21,010
can see the the little commands at the

00:12:17,680 --> 00:12:22,780
top get clone I'll type that into the

00:12:21,010 --> 00:12:25,030
command line and then I'll copy and

00:12:22,780 --> 00:12:28,810
paste the URL from the browser for the

00:12:25,030 --> 00:12:31,660
repo and then hit enter so there will

00:12:28,810 --> 00:12:33,700
now be a folder in my home directory by

00:12:31,660 --> 00:12:37,990
the same name as the github repo which

00:12:33,700 --> 00:12:40,420
is 2017 django con us and it's going to

00:12:37,990 --> 00:12:43,210
be filled with the contents of the repo

00:12:40,420 --> 00:12:45,640
so i now have a copy of the code on

00:12:43,210 --> 00:12:48,370
github and also a copy of my local

00:12:45,640 --> 00:12:50,830
development environment so I need to

00:12:48,370 --> 00:12:54,190
change directory into the folder in my

00:12:50,830 --> 00:12:58,690
command line so that I can work there so

00:12:54,190 --> 00:13:01,480
I type cd' 2017 django con us which is

00:12:58,690 --> 00:13:03,370
the name of the folder so I've also

00:13:01,480 --> 00:13:05,650
clicked on the folder manually in the

00:13:03,370 --> 00:13:08,050
folder window so I can see the contents

00:13:05,650 --> 00:13:12,070
visually but I can see that I'm working

00:13:08,050 --> 00:13:13,960
in the new folder because the name of it

00:13:12,070 --> 00:13:17,260
is at the top of my command line and in

00:13:13,960 --> 00:13:20,040
front of the prompt and hypothetically

00:13:17,260 --> 00:13:22,990
if I were to open up the github repo and

00:13:20,040 --> 00:13:25,960
open up the folder window in front of it

00:13:22,990 --> 00:13:28,690
I would be able to compare the files and

00:13:25,960 --> 00:13:30,550
see the corresponding files but the file

00:13:28,690 --> 00:13:32,530
on github there are going to render

00:13:30,550 --> 00:13:34,900
differently because they're rendered in

00:13:32,530 --> 00:13:38,290
the browser whereas the files locally

00:13:34,900 --> 00:13:40,270
are raw files so then you can use the

00:13:38,290 --> 00:13:42,360
command git branch to verify which

00:13:40,270 --> 00:13:44,590
branch you're checked out on and

00:13:42,360 --> 00:13:47,440
initially you will be on the default

00:13:44,590 --> 00:13:49,750
branch which in this case is master so

00:13:47,440 --> 00:13:52,180
then we create and checkout which means

00:13:49,750 --> 00:13:54,730
switch to a feature branch and we're

00:13:52,180 --> 00:13:56,890
going to call it example branch and we

00:13:54,730 --> 00:13:59,560
went to branch off of the branch that we

00:13:56,890 --> 00:14:01,750
intend our changes to be merged into and

00:13:59,560 --> 00:14:04,300
this is something really important to

00:14:01,750 --> 00:14:06,250
know when you switch branches in your

00:14:04,300 --> 00:14:08,980
local development environment the

00:14:06,250 --> 00:14:12,310
folders and the the files in the folder

00:14:08,980 --> 00:14:14,500
switch to the files of the branch and

00:14:12,310 --> 00:14:16,300
you might not notice it at first because

00:14:14,500 --> 00:14:18,400
when you create a branch it'll be an

00:14:16,300 --> 00:14:19,870
exact copy of another one but if you

00:14:18,400 --> 00:14:21,400
make a change and switch to another

00:14:19,870 --> 00:14:24,700
branch you'll notice that they're

00:14:21,400 --> 00:14:27,190
different so then we can open whatever

00:14:24,700 --> 00:14:29,770
file we want to change in a text editor

00:14:27,190 --> 00:14:32,200
and make our change and save it and then

00:14:29,770 --> 00:14:33,850
we need to add and commit our change to

00:14:32,200 --> 00:14:36,460
get version control and we're going to

00:14:33,850 --> 00:14:39,040
make a message by the way make sure your

00:14:36,460 --> 00:14:42,160
change works the change you're making to

00:14:39,040 --> 00:14:45,970
the code and probably make a message

00:14:42,160 --> 00:14:48,880
that's more clear than this and then

00:14:45,970 --> 00:14:51,670
push the new branch example branch to

00:14:48,880 --> 00:14:53,530
github to our origin the repo that we

00:14:51,670 --> 00:14:56,560
cloned from that we have write

00:14:53,530 --> 00:14:58,660
permission to so now if we go back to

00:14:56,560 --> 00:15:01,120
origin there will be a branch in our

00:14:58,660 --> 00:15:02,860
repo and there will be a message telling

00:15:01,120 --> 00:15:05,560
us that it's there and if you click on

00:15:02,860 --> 00:15:08,800
the branch tab you can choose the name

00:15:05,560 --> 00:15:11,020
of the branch and switch to the new

00:15:08,800 --> 00:15:13,450
branch and you can actually see the

00:15:11,020 --> 00:15:15,070
changes you've made and that's a way

00:15:13,450 --> 00:15:17,230
that you can look at different branches

00:15:15,070 --> 00:15:22,420
by toggling back and forth between the

00:15:17,230 --> 00:15:24,400
branches and the branch tab so now to

00:15:22,420 --> 00:15:27,220
submit the pull request if you're ready

00:15:24,400 --> 00:15:29,320
to do that we want to go to the repo

00:15:27,220 --> 00:15:31,690
that you want your changes to be merged

00:15:29,320 --> 00:15:34,390
into so we're gonna go to the Django con

00:15:31,690 --> 00:15:38,020
Us website repo if if we're not there

00:15:34,390 --> 00:15:40,150
already so there will also be a message

00:15:38,020 --> 00:15:41,769
there telling us about the branch if it

00:15:40,150 --> 00:15:45,339
was through of work because

00:15:41,769 --> 00:15:47,170
github will detect it so we want to

00:15:45,339 --> 00:15:50,230
click on the compare and pull request

00:15:47,170 --> 00:15:52,660
button and make sure the base branch is

00:15:50,230 --> 00:15:55,119
the branch you want your changes merged

00:15:52,660 --> 00:15:58,600
into and make sure the compare branches

00:15:55,119 --> 00:16:00,189
or a branch and create a title and

00:15:58,600 --> 00:16:02,799
perhaps a description for the pull

00:16:00,189 --> 00:16:06,040
request if your pull request is through

00:16:02,799 --> 00:16:09,100
a fork there will be a box checked by

00:16:06,040 --> 00:16:11,290
default that will give maintain errs the

00:16:09,100 --> 00:16:14,079
ability to edit the pull request so

00:16:11,290 --> 00:16:17,769
double check your changes and click pull

00:16:14,079 --> 00:16:19,720
request create pull request so now we're

00:16:17,769 --> 00:16:22,600
going to review the two different types

00:16:19,720 --> 00:16:27,459
of pull requests as a django con us web

00:16:22,600 --> 00:16:29,980
site repo maintainer so when the pull

00:16:27,459 --> 00:16:32,980
request has been submitted people who

00:16:29,980 --> 00:16:35,170
are maintainer x' for django con us web

00:16:32,980 --> 00:16:37,779
site repo will receive a notification

00:16:35,170 --> 00:16:38,949
either by browser or by email letting

00:16:37,779 --> 00:16:42,339
them know that there's a pull request

00:16:38,949 --> 00:16:44,829
and that notification will lead them to

00:16:42,339 --> 00:16:47,110
the pull request tab in the browser so

00:16:44,829 --> 00:16:49,209
then they want to look over the pull

00:16:47,110 --> 00:16:51,189
request information there will be the

00:16:49,209 --> 00:16:54,699
title and description and there will be

00:16:51,189 --> 00:16:57,699
a little hyperlink that says files

00:16:54,699 --> 00:17:00,970
changed and they can click on that to

00:16:57,699 --> 00:17:03,819
literally see a summary of what the

00:17:00,970 --> 00:17:05,559
changes are so underneath that there

00:17:03,819 --> 00:17:08,260
will be information about how to merge

00:17:05,559 --> 00:17:10,809
the pull request there will be a merge

00:17:08,260 --> 00:17:14,319
button that you can click to merge in

00:17:10,809 --> 00:17:17,350
the browser or there will be a link that

00:17:14,319 --> 00:17:19,959
says command line instructions so when

00:17:17,350 --> 00:17:22,270
you click on that link it will open up a

00:17:19,959 --> 00:17:24,730
set of instructions for how to review

00:17:22,270 --> 00:17:26,260
and merge the pull request in the local

00:17:24,730 --> 00:17:27,990
development environment these

00:17:26,260 --> 00:17:30,309
instructions will be different be

00:17:27,990 --> 00:17:33,039
different depending on whether the pull

00:17:30,309 --> 00:17:35,049
request was submitted through a fork or

00:17:33,039 --> 00:17:36,610
through a shared repository which I'm

00:17:35,049 --> 00:17:39,370
going to explain in a minute but first

00:17:36,610 --> 00:17:41,590
let's go over what the options are of

00:17:39,370 --> 00:17:44,830
what you can do when you review a pull

00:17:41,590 --> 00:17:47,590
request so the first two options would

00:17:44,830 --> 00:17:50,049
involve just clicking the merge button

00:17:47,590 --> 00:17:52,929
and github without running the code

00:17:50,049 --> 00:17:55,040
locally for example you might look at

00:17:52,929 --> 00:17:57,200
the pull request file

00:17:55,040 --> 00:17:59,840
and see that you don't need to make any

00:17:57,200 --> 00:18:02,810
change to what has been submitted and

00:17:59,840 --> 00:18:05,210
you might just click merge or you might

00:18:02,810 --> 00:18:07,490
look at that and see that there's just a

00:18:05,210 --> 00:18:10,010
small change that needs to be paid and

00:18:07,490 --> 00:18:12,110
similarly to how we edited a file

00:18:10,010 --> 00:18:14,210
earlier you might just go into the pull

00:18:12,110 --> 00:18:18,850
request file and make a small change and

00:18:14,210 --> 00:18:21,740
click merge the other options involve

00:18:18,850 --> 00:18:23,450
fetching the pull request branch into

00:18:21,740 --> 00:18:25,520
your local development environment and

00:18:23,450 --> 00:18:28,160
running the code there so say for

00:18:25,520 --> 00:18:30,290
instance you do that and you're happy

00:18:28,160 --> 00:18:32,570
with it no gene change needs to be made

00:18:30,290 --> 00:18:36,470
you can go back to the browser and just

00:18:32,570 --> 00:18:37,970
click merge or if a change needs to be

00:18:36,470 --> 00:18:40,010
made there are a few different things

00:18:37,970 --> 00:18:42,770
that can happen you can ask the pull

00:18:40,010 --> 00:18:46,220
request author to make it change to the

00:18:42,770 --> 00:18:49,400
pull request or you yourself can make a

00:18:46,220 --> 00:18:53,090
change to the pull request branch you

00:18:49,400 --> 00:18:56,960
could then push the additional change to

00:18:53,090 --> 00:18:59,720
the pull request branch on github or you

00:18:56,960 --> 00:19:01,670
can merge the branch with the branch

00:18:59,720 --> 00:19:04,070
that's intended and be merged with and

00:19:01,670 --> 00:19:07,670
you can do that locally and then push

00:19:04,070 --> 00:19:09,710
that live to the branch on github so

00:19:07,670 --> 00:19:12,650
this is why the pull requests

00:19:09,710 --> 00:19:15,350
instructions are different as a Django

00:19:12,650 --> 00:19:19,130
con us web site maintainer you're able

00:19:15,350 --> 00:19:22,340
to fetch updates from the Django con us

00:19:19,130 --> 00:19:24,200
web site repo into a hidden folder name

00:19:22,340 --> 00:19:27,950
dot get in your local development

00:19:24,200 --> 00:19:30,590
environment the updates will include the

00:19:27,950 --> 00:19:33,530
branches made directly to the Django con

00:19:30,590 --> 00:19:36,170
us web site repo they will not include

00:19:33,530 --> 00:19:39,020
branches made through a fork because

00:19:36,170 --> 00:19:41,390
those came from outside of the origin so

00:19:39,020 --> 00:19:43,070
branches made through a fork have to be

00:19:41,390 --> 00:19:46,100
pulled individually into our local

00:19:43,070 --> 00:19:47,510
development environment so I want to

00:19:46,100 --> 00:19:49,190
point out something and that is that

00:19:47,510 --> 00:19:51,640
even though these instructions the

00:19:49,190 --> 00:19:54,560
instructions from the pull request page

00:19:51,640 --> 00:19:56,090
for fetching the the branch locally even

00:19:54,560 --> 00:19:58,160
though they say that they're for a pull

00:19:56,090 --> 00:20:00,350
request they can actually be used by any

00:19:58,160 --> 00:20:02,780
maintainer to work on a branch that they

00:20:00,350 --> 00:20:05,090
have write permission to if a pull

00:20:02,780 --> 00:20:07,370
request has already been made the the

00:20:05,090 --> 00:20:08,190
changes will simply be added to the pull

00:20:07,370 --> 00:20:10,409
request

00:20:08,190 --> 00:20:13,440
up to the point that the pull request is

00:20:10,409 --> 00:20:15,389
merged so for a shared repository pull

00:20:13,440 --> 00:20:18,419
requests we use the command git fetch

00:20:15,389 --> 00:20:21,210
origin to fetch the updates into the dot

00:20:18,419 --> 00:20:23,460
git folder we create and check out to a

00:20:21,210 --> 00:20:26,039
new local branch which we gave and give

00:20:23,460 --> 00:20:28,590
a name to and we insert the pull request

00:20:26,039 --> 00:20:31,470
branch contents from the dot git folder

00:20:28,590 --> 00:20:34,169
into the new local branch by referring

00:20:31,470 --> 00:20:38,129
to the branch as origin forward slash in

00:20:34,169 --> 00:20:40,350
the branch name we can merge master into

00:20:38,129 --> 00:20:42,240
that feature branch to make sure it's up

00:20:40,350 --> 00:20:44,429
to date in case there were any changes

00:20:42,240 --> 00:20:48,389
made since the pull request was made and

00:20:44,429 --> 00:20:50,610
then similarly to before when we had a

00:20:48,389 --> 00:20:52,259
branch and we made a change and we added

00:20:50,610 --> 00:20:54,960
and committed the changes to version

00:20:52,259 --> 00:20:57,059
control if you do that to this pull

00:20:54,960 --> 00:20:58,889
request branch you can push the

00:20:57,059 --> 00:21:01,860
additional commits to the branch on

00:20:58,889 --> 00:21:04,169
github for a pull request submitted

00:21:01,860 --> 00:21:07,169
through a fork we create a new branch

00:21:04,169 --> 00:21:09,389
off master and pull in the contents of

00:21:07,169 --> 00:21:11,789
the pull request branch from the fork if

00:21:09,389 --> 00:21:15,629
we make a change we can also push the

00:21:11,789 --> 00:21:17,460
additional change to the fork to the

00:21:15,629 --> 00:21:20,970
fork branch if we have been given

00:21:17,460 --> 00:21:23,190
permission to edit the pull request so

00:21:20,970 --> 00:21:25,620
this piece of code would be if we decide

00:21:23,190 --> 00:21:27,929
to merge a pull request locally and push

00:21:25,620 --> 00:21:30,690
to the master branch you are checking

00:21:27,929 --> 00:21:32,669
out to the master branch merging the

00:21:30,690 --> 00:21:34,559
feature branch into the master branch

00:21:32,669 --> 00:21:38,129
then pushing the change to the live

00:21:34,559 --> 00:21:39,659
master branch on github so I want to

00:21:38,129 --> 00:21:42,929
just give you a few quick

00:21:39,659 --> 00:21:45,210
recommendations my first recommendation

00:21:42,929 --> 00:21:47,490
is that you go to the useful resources

00:21:45,210 --> 00:21:50,370
section and follow the links to the

00:21:47,490 --> 00:21:52,740
Django con us website repo documentation

00:21:50,370 --> 00:21:55,470
and read it and make your documentation

00:21:52,740 --> 00:21:58,080
in your own projects as welcoming and

00:21:55,470 --> 00:22:01,080
positive as ours is we have really great

00:21:58,080 --> 00:22:04,379
documentation my second recommendation

00:22:01,080 --> 00:22:06,840
is that if you have the authority go

00:22:04,379 --> 00:22:09,210
into a repo settings and click on the

00:22:06,840 --> 00:22:12,179
branches tab and protect your main

00:22:09,210 --> 00:22:14,519
branch or main branches so that they

00:22:12,179 --> 00:22:18,029
can't be deleted accidentally for

00:22:14,519 --> 00:22:19,740
example your master branch my third

00:22:18,029 --> 00:22:21,430
recommendation is that when you're

00:22:19,740 --> 00:22:24,910
looking for a project you can

00:22:21,430 --> 00:22:28,360
tribute to you can search by tag to find

00:22:24,910 --> 00:22:30,880
projects that use triaging triaging is

00:22:28,360 --> 00:22:33,220
where issues are sorted by difficulty

00:22:30,880 --> 00:22:35,980
level for instance as both a

00:22:33,220 --> 00:22:38,320
collaborator or a code reviewer you can

00:22:35,980 --> 00:22:40,300
actually cherry-pick issues and pull

00:22:38,320 --> 00:22:42,730
requests that fit your skill level and

00:22:40,300 --> 00:22:46,630
that can help you to level up over time

00:22:42,730 --> 00:22:49,600
and my fourth recommendation is that you

00:22:46,630 --> 00:22:52,510
practice your skills and workflow don't

00:22:49,600 --> 00:22:54,730
be afraid to delete your for instance

00:22:52,510 --> 00:22:57,190
your folder locally if you have to start

00:22:54,730 --> 00:22:59,230
over if that's what you need to do you

00:22:57,190 --> 00:23:02,470
can also use your own account as a

00:22:59,230 --> 00:23:05,050
sandbox you can actually create a repo

00:23:02,470 --> 00:23:08,890
and submit pull requests to yourself and

00:23:05,050 --> 00:23:10,990
practice that way and my last but

00:23:08,890 --> 00:23:12,940
definitely not least recommendation is

00:23:10,990 --> 00:23:16,060
that you become a contributor to the

00:23:12,940 --> 00:23:18,460
Django con Us website next year we have

00:23:16,060 --> 00:23:20,380
a diverse group of contributors of all

00:23:18,460 --> 00:23:23,350
skill levels and we're always looking

00:23:20,380 --> 00:23:25,930
for more contributors so let us know if

00:23:23,350 --> 00:23:29,500
you're interested and thank you

00:23:25,930 --> 00:23:31,690
everybody feel free to contact me check

00:23:29,500 --> 00:23:33,930
out the useful resources and I'm going

00:23:31,690 --> 00:23:35,410
to take questions in the hallway later

00:23:33,930 --> 00:23:43,569
thank you

00:23:35,410 --> 00:23:43,569

YouTube URL: https://www.youtube.com/watch?v=KCKPbsi88IU


