Title: DjangoCon US 2018 - Anatomy of Open edX - a modern online learning platforms... by Nate Aune
Publication date: 2018-11-10
Playlist: DjangoCon US 2018
Description: 
	DjangoCon US 2018 - Anatomy of Open edX - a modern online learning platform serving over 35 million users by Nate Aune

What does it take to build a web application that can serve millions of concurrent users? This talk will dissect Open edX, the open source online learning platform that powers edX.org and hundreds of other sites around the world.

Open edX is written in Django but relies on a slew of other software to work at scale. Weâ€™ll break down the components of the entire software architecture, and explain how each component is used. This will give attendees some insights into how they might architect their web application if theyâ€™re building software to serve a large audience.

Weâ€™ll discuss how Open edX utilizes both MySQL and MongoDB as data stores and why it uses MySQL for student data and MongoDB for course data. Weâ€™ll describe the queing architecture of Celery and RabbitMQ to process background jobs, and Hadoop for processing terabytes of learner analytics data.

DevOps enthusiasts will not be disappointed as weâ€™ll go into the use of Ansible and Terraform for deploying the entire suite of software in a consistent and repeatable way up to popular cloud providers such as AWS, Google Cloud and Azure.

What will attendees learn? The attendees will get a close look at a modern Django-based web application to see how itâ€™s architected, and come away with a better understanding of design decisions when building a web application that needs to serve 35M users from every country in the world. Attendees will also be equipped with the knowledge to run Open edX on their laptop or in the cloud, if they want to explore the software further.

This talk was presented at: https://2018.djangocon.us/talk/anatomy-of-open-edx-a-modern-online-over/

LINKS:
Follow Nate Aune ğŸ‘‡
On Twitter: https://twitter.com/natea
Official homepage: https://appsembler.com/blog

Follow DjangCon US ğŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ğŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,050 --> 00:00:07,709
[Music]

00:00:15,410 --> 00:00:20,460
why talk about open edx at django con

00:00:18,779 --> 00:00:24,090
well there's three three main reasons

00:00:20,460 --> 00:00:25,920
number one it's a django app number two

00:00:24,090 --> 00:00:30,000
it's a highly scalable app that's

00:00:25,920 --> 00:00:32,550
serving over 35 million users and number

00:00:30,000 --> 00:00:35,309
three it's open source which means it's

00:00:32,550 --> 00:00:38,430
an ideal project to study and to learn

00:00:35,309 --> 00:00:41,100
from so my name is nate ani in a former

00:00:38,430 --> 00:00:43,829
life I was a software engineer using

00:00:41,100 --> 00:00:46,260
Python almost exclusively for most of my

00:00:43,829 --> 00:00:48,600
professional career and nowadays I

00:00:46,260 --> 00:00:50,969
mostly wear a business hat and I run

00:00:48,600 --> 00:00:53,280
apps somewhere which is a small twenty

00:00:50,969 --> 00:00:56,309
person's startup whose mission is to

00:00:53,280 --> 00:00:59,460
close the skills gap by making education

00:00:56,309 --> 00:01:01,739
more accessible and scalable and no

00:00:59,460 --> 00:01:06,390
surprise open ax plays a key role in how

00:01:01,739 --> 00:01:08,220
we do that okay so here's what we're

00:01:06,390 --> 00:01:10,830
going to cover today what we're not

00:01:08,220 --> 00:01:12,799
going to talk about is open EDX from an

00:01:10,830 --> 00:01:15,750
end-user perspective so the student

00:01:12,799 --> 00:01:17,040
instructor author perspective there

00:01:15,750 --> 00:01:20,340
simply wasn't enough time to do both

00:01:17,040 --> 00:01:22,650
that and to talk about the technology so

00:01:20,340 --> 00:01:24,360
my hope for you today is that by the end

00:01:22,650 --> 00:01:27,210
of this talk you will want to go take an

00:01:24,360 --> 00:01:29,280
open EDX course you'll consider open EDX

00:01:27,210 --> 00:01:31,350
for your organization and if you're

00:01:29,280 --> 00:01:34,079
really curious you want to go download

00:01:31,350 --> 00:01:37,110
the code and start learning for yourself

00:01:34,079 --> 00:01:39,720
how it's put together okay so let's get

00:01:37,110 --> 00:01:42,299
started so there's been a lot of buzz in

00:01:39,720 --> 00:01:44,880
the last few years about MOOCs also

00:01:42,299 --> 00:01:46,560
known as massive open online courses and

00:01:44,880 --> 00:01:49,470
some of the services you may have heard

00:01:46,560 --> 00:01:51,030
of are like Coursera Udacity Khan

00:01:49,470 --> 00:01:53,820
Academy these are all examples of MOOC

00:01:51,030 --> 00:01:55,380
platforms which deliver online courses

00:01:53,820 --> 00:01:56,210
for free how many people here have taken

00:01:55,380 --> 00:01:58,770
a MOOC

00:01:56,210 --> 00:02:01,380
wow we got a lot of MOOC lovers in the

00:01:58,770 --> 00:02:05,219
room that's great so EDX is in the same

00:02:01,380 --> 00:02:08,099
camp as these other MOOC platforms but

00:02:05,219 --> 00:02:10,890
unlike Coursera and Udacity EDX is a

00:02:08,099 --> 00:02:13,930
nonprofit foundation that is open source

00:02:10,890 --> 00:02:16,430
the code that powers a text

00:02:13,930 --> 00:02:18,410
so we'll talk more about the open source

00:02:16,430 --> 00:02:21,320
project in a second but first why would

00:02:18,410 --> 00:02:23,660
you be interested in EDX well if you

00:02:21,320 --> 00:02:27,020
like to learn then EDX is a treasure

00:02:23,660 --> 00:02:29,240
trove as of yesterday there were 2400

00:02:27,020 --> 00:02:31,310
high quality courses from top

00:02:29,240 --> 00:02:33,830
universities and companies that you can

00:02:31,310 --> 00:02:34,400
take completely free of charge that's

00:02:33,830 --> 00:02:36,290
pretty cool

00:02:34,400 --> 00:02:41,330
how many folks here have taken in EDX

00:02:36,290 --> 00:02:44,300
course ok fair number of you so of those

00:02:41,330 --> 00:02:46,100
2,400 600 of them nearly a quarter of

00:02:44,300 --> 00:02:50,480
all the courses are computer science

00:02:46,100 --> 00:02:52,730
courses and of those 600 computer

00:02:50,480 --> 00:02:58,580
science courses almost 60 of them nearly

00:02:52,730 --> 00:03:00,800
10% our course is about Python and these

00:02:58,580 --> 00:03:03,680
courses are offered by 53 top

00:03:00,800 --> 00:03:06,410
universities including MIT Harvard UC

00:03:03,680 --> 00:03:07,610
Berkeley and it's not just universities

00:03:06,410 --> 00:03:09,890
who are offering these courses but

00:03:07,610 --> 00:03:12,410
there's also 62 organizations from such

00:03:09,890 --> 00:03:15,020
companies as Amazon IBM Red Hat

00:03:12,410 --> 00:03:17,230
Microsoft MongoDB as well as

00:03:15,020 --> 00:03:19,970
associations like the Linux Foundation

00:03:17,230 --> 00:03:23,780
w3c I Triple E even Amnesty

00:03:19,970 --> 00:03:26,090
International so who is taking these

00:03:23,780 --> 00:03:29,450
courses well it's not just college

00:03:26,090 --> 00:03:30,530
students but it's lifelong learners so

00:03:29,450 --> 00:03:32,420
these are people who are going through a

00:03:30,530 --> 00:03:34,519
career change they're learning new

00:03:32,420 --> 00:03:37,220
skills or maybe just taking a course for

00:03:34,519 --> 00:03:39,709
fun and to date EDX has attracted more

00:03:37,220 --> 00:03:42,739
than 17 million students from every

00:03:39,709 --> 00:03:45,160
country in the world so who's gonna go

00:03:42,739 --> 00:03:49,459
home tonight and enroll in an EDX course

00:03:45,160 --> 00:03:51,440
alright okay so now hopefully you know

00:03:49,459 --> 00:03:54,830
what EDX is if you didn't already know

00:03:51,440 --> 00:03:57,080
about it so what is open EDX so the open

00:03:54,830 --> 00:03:58,850
air platform is an open source web-based

00:03:57,080 --> 00:04:01,549
system for creating delivering and

00:03:58,850 --> 00:04:03,320
analyzing online courses at massive

00:04:01,549 --> 00:04:06,470
scale so as I mentioned earlier the

00:04:03,320 --> 00:04:08,000
entire code base is Jango with the small

00:04:06,470 --> 00:04:11,720
sprinkling of Ruby thrown in for good

00:04:08,000 --> 00:04:13,250
measure so what are people doing with

00:04:11,720 --> 00:04:17,239
open EDX well there are literally

00:04:13,250 --> 00:04:19,280
hundreds of open EDX sites offering

00:04:17,239 --> 00:04:20,660
training on every conceivable subject

00:04:19,280 --> 00:04:22,729
but I'm just going to show a couple

00:04:20,660 --> 00:04:24,760
examples which I think are relevant for

00:04:22,729 --> 00:04:27,080
this audience

00:04:24,760 --> 00:04:30,020
so as an open source come

00:04:27,080 --> 00:04:31,970
MongoDB has placed a high value on

00:04:30,020 --> 00:04:33,470
fostering and giving back to the

00:04:31,970 --> 00:04:35,780
community and early on they realized

00:04:33,470 --> 00:04:38,389
that a great way to do this is by making

00:04:35,780 --> 00:04:39,979
expert MongoDB training easily and

00:04:38,389 --> 00:04:42,050
freely available to anyone anywhere in

00:04:39,979 --> 00:04:44,840
the world so they launched MongoDB

00:04:42,050 --> 00:04:47,780
University back in 2012 and today they

00:04:44,840 --> 00:04:50,629
have 18 free courses from introductory

00:04:47,780 --> 00:04:52,639
level to a mastery level and over 1

00:04:50,629 --> 00:04:56,919
million learners have registered on the

00:04:52,639 --> 00:04:59,330
site a site which is powered by open EDX

00:04:56,919 --> 00:05:01,580
and taking a page out of the MongoDB

00:04:59,330 --> 00:05:03,710
playbook Redis labs also an open source

00:05:01,580 --> 00:05:06,110
company launched the reticent University

00:05:03,710 --> 00:05:07,879
earlier this year and they've already

00:05:06,110 --> 00:05:10,370
had thousands of learners enroll in

00:05:07,879 --> 00:05:12,110
these free courses so you might be

00:05:10,370 --> 00:05:12,530
asking well what's in it for these

00:05:12,110 --> 00:05:14,389
companies

00:05:12,530 --> 00:05:16,909
why give away courses instead of

00:05:14,389 --> 00:05:19,550
charging money for them well if you make

00:05:16,909 --> 00:05:22,340
an open source product you often don't

00:05:19,550 --> 00:05:24,979
know who's using your software so by

00:05:22,340 --> 00:05:27,409
offering training for free it's a way to

00:05:24,979 --> 00:05:28,729
find out who these people are and see if

00:05:27,409 --> 00:05:32,539
they might be interested in other

00:05:28,729 --> 00:05:34,340
services that you offer so one of the

00:05:32,539 --> 00:05:36,229
really unique aspects of the Redis

00:05:34,340 --> 00:05:38,690
University site is a focus on learning

00:05:36,229 --> 00:05:41,210
by doing and to make this super easy

00:05:38,690 --> 00:05:43,969
they're using our virtual labs tool to

00:05:41,210 --> 00:05:45,860
embed labs right within the course so

00:05:43,969 --> 00:05:47,840
this means that each learner has their

00:05:45,860 --> 00:05:49,789
own personal sandbox in which to do

00:05:47,840 --> 00:05:51,979
these exercises so all the learner has

00:05:49,789 --> 00:05:54,319
to do is click on this button that says

00:05:51,979 --> 00:05:58,060
click to launch your Python workbench

00:05:54,319 --> 00:06:00,860
lab and within seconds they see a URL

00:05:58,060 --> 00:06:03,560
for their own personal cloud based

00:06:00,860 --> 00:06:06,770
development vironment which looks like

00:06:03,560 --> 00:06:08,349
this so there's a file browser there's a

00:06:06,770 --> 00:06:10,580
code editor there's a linux shell

00:06:08,349 --> 00:06:12,979
everything the student needs to do the

00:06:10,580 --> 00:06:14,240
exercises they don't need to download or

00:06:12,979 --> 00:06:16,069
install any software under their

00:06:14,240 --> 00:06:17,990
computer because this environment is

00:06:16,069 --> 00:06:20,150
completely accessible using nothing but

00:06:17,990 --> 00:06:21,860
a web browser and the actual environment

00:06:20,150 --> 00:06:28,370
is running in a docker container on a

00:06:21,860 --> 00:06:30,259
server somewhere so the ability to embed

00:06:28,370 --> 00:06:32,539
these labs is one example of how

00:06:30,259 --> 00:06:35,930
extensible the open EDX platform is

00:06:32,539 --> 00:06:37,969
another example is this assessment in

00:06:35,930 --> 00:06:39,439
which the student input is evaluated

00:06:37,969 --> 00:06:41,869
against a Python expression

00:06:39,439 --> 00:06:43,639
so here we can see the student is being

00:06:41,869 --> 00:06:48,019
asked to enter two numbers that should

00:06:43,639 --> 00:06:49,879
sum to 10 very trivial example but the

00:06:48,019 --> 00:06:52,039
way that you author this would be going

00:06:49,879 --> 00:06:54,349
going into studio which is this very

00:06:52,039 --> 00:06:56,779
powerful course authoring tool here we

00:06:54,349 --> 00:06:57,860
see the course outline showing all the

00:06:56,779 --> 00:06:59,899
sections of the course that can be

00:06:57,860 --> 00:07:01,580
edited and if your login is a course

00:06:59,899 --> 00:07:04,389
author you can click on this section it

00:07:01,580 --> 00:07:06,979
says custom Python evaluating input and

00:07:04,389 --> 00:07:10,129
you'll see something like this which is

00:07:06,979 --> 00:07:13,309
a markup editor and it looks like we're

00:07:10,129 --> 00:07:16,879
editing HTML but lo and behold right up

00:07:13,309 --> 00:07:20,209
there in that red box what's that some

00:07:16,879 --> 00:07:21,769
Python code so you can actually embed

00:07:20,209 --> 00:07:23,479
Python scripts right within the

00:07:21,769 --> 00:07:25,519
assessment editor that evaluate the

00:07:23,479 --> 00:07:28,009
students input against the Python

00:07:25,519 --> 00:07:29,959
function and open EDX has a plug-in

00:07:28,009 --> 00:07:32,119
architecture called X blocks which lets

00:07:29,959 --> 00:07:35,169
you create virtually any kind of

00:07:32,119 --> 00:07:37,969
assessment imaginable

00:07:35,169 --> 00:07:39,529
all right so looking at any software

00:07:37,969 --> 00:07:42,050
product you want to see how it's growing

00:07:39,529 --> 00:07:44,209
who's adopting it and at what pace and

00:07:42,050 --> 00:07:46,249
it's no different with open source

00:07:44,209 --> 00:07:50,569
projects like open EDX so what do you

00:07:46,249 --> 00:07:51,829
look for in an open source project one

00:07:50,569 --> 00:07:54,800
thing I look at is whether there's a

00:07:51,829 --> 00:07:56,059
healthy community of participants these

00:07:54,800 --> 00:07:58,569
don't necessarily have to be developers

00:07:56,059 --> 00:08:02,029
in fact it's better if they're end-users

00:07:58,569 --> 00:08:04,969
so looking at EDX the mailing list has

00:08:02,029 --> 00:08:08,839
over 4,000 almost 4,000 members and

00:08:04,969 --> 00:08:11,509
around 50 to 120 posts every month which

00:08:08,839 --> 00:08:14,029
has diminished in the last year because

00:08:11,509 --> 00:08:16,879
of the rising popularity of slack which

00:08:14,029 --> 00:08:20,149
now has close to 3,000 members and 150

00:08:16,879 --> 00:08:21,529
to 300 weekly active users and there are

00:08:20,149 --> 00:08:25,279
there might even be a few people still

00:08:21,529 --> 00:08:26,749
chatting in the IRC channel so the

00:08:25,279 --> 00:08:28,550
membership of users on the open X lucky

00:08:26,749 --> 00:08:31,969
me has grown consistently over the last

00:08:28,550 --> 00:08:33,380
two and a half years another thing that

00:08:31,969 --> 00:08:35,620
you can look at is how many contributors

00:08:33,380 --> 00:08:37,879
there are and are those numbers going up

00:08:35,620 --> 00:08:39,889
so according to github the number of

00:08:37,879 --> 00:08:43,490
individual contributors is around 400

00:08:39,889 --> 00:08:47,449
and the repo has been forked over 2,000

00:08:43,490 --> 00:08:49,519
times and you can see that it's kind of

00:08:47,449 --> 00:08:51,380
flattening out and one of the one reason

00:08:49,519 --> 00:08:53,000
I suspect that the number of commits per

00:08:51,380 --> 00:08:55,310
month is flattened is that the codebase

00:08:53,000 --> 00:08:57,140
is getting more mature and the rate of

00:08:55,310 --> 00:08:59,720
change is not as rapid as it was in the

00:08:57,140 --> 00:09:01,400
earlier days and the innovation is also

00:08:59,720 --> 00:09:03,320
happening in other repos as they're

00:09:01,400 --> 00:09:04,670
breaking up this monolith codebase

00:09:03,320 --> 00:09:06,010
they're splitting it on into micro

00:09:04,670 --> 00:09:07,820
services so a lot of the innovative

00:09:06,010 --> 00:09:10,850
components of open etics are actually

00:09:07,820 --> 00:09:12,560
happening in different repos well the

00:09:10,850 --> 00:09:17,150
the core platform is not seeing as many

00:09:12,560 --> 00:09:18,890
changes so looking at this growth over

00:09:17,150 --> 00:09:20,600
the last four years you can see some

00:09:18,890 --> 00:09:23,200
pretty incredible growth especially in

00:09:20,600 --> 00:09:25,940
the last year as the number of sites and

00:09:23,200 --> 00:09:28,160
courses offered on open EDX have just

00:09:25,940 --> 00:09:31,580
shot up and in this graph the the sites

00:09:28,160 --> 00:09:33,980
are red in the courses are blue so to

00:09:31,580 --> 00:09:37,130
date they've identified over 1,500 open

00:09:33,980 --> 00:09:39,410
EDX sites and over 18,000 courses are

00:09:37,130 --> 00:09:41,770
offered and of course this doesn't count

00:09:39,410 --> 00:09:43,880
the the sites that they don't know about

00:09:41,770 --> 00:09:45,860
you might be asking well it's open

00:09:43,880 --> 00:09:46,610
source how do they know how many people

00:09:45,860 --> 00:09:50,240
are using the software

00:09:46,610 --> 00:09:52,760
well EDX very cleverly included a logo

00:09:50,240 --> 00:09:54,910
in the footer of every open EDX site

00:09:52,760 --> 00:09:57,710
that's being pulled from an s3 bucket

00:09:54,910 --> 00:10:00,680
that they manage and then they have a

00:09:57,710 --> 00:10:02,120
script that crawls all these sites to

00:10:00,680 --> 00:10:03,140
see how many courses they have and

00:10:02,120 --> 00:10:05,600
that's how they were able to generate

00:10:03,140 --> 00:10:07,460
these statistics and they've been

00:10:05,600 --> 00:10:08,839
running this script since 2014 and I

00:10:07,460 --> 00:10:13,040
just keep finding new ones popping up

00:10:08,839 --> 00:10:18,890
all over all over the place so with over

00:10:13,040 --> 00:10:20,900
17 million learners on edx.org and 18

00:10:18,890 --> 00:10:23,290
million on open EDX there's over 35

00:10:20,900 --> 00:10:26,360
million on the on the open EDX platform

00:10:23,290 --> 00:10:28,040
and last year was a really exciting

00:10:26,360 --> 00:10:31,640
times it was the first time that the

00:10:28,040 --> 00:10:35,089
number of open EDX sites and learners

00:10:31,640 --> 00:10:36,830
eclipsed that of edx.org and that number

00:10:35,089 --> 00:10:39,380
is just expected to keep growing as more

00:10:36,830 --> 00:10:41,210
organizations are adopting the platform

00:10:39,380 --> 00:10:44,360
I think I heard that the national

00:10:41,210 --> 00:10:49,400
government in China has something like

00:10:44,360 --> 00:10:50,900
17 million just in itself so what are

00:10:49,400 --> 00:10:53,420
some of these organizations well some of

00:10:50,900 --> 00:10:55,580
the biggest companies are using open EDX

00:10:53,420 --> 00:10:57,770
and some of the fastest growing

00:10:55,580 --> 00:11:02,270
technology companies have adopted open

00:10:57,770 --> 00:11:04,850
EDX these are just a few of the ones and

00:11:02,270 --> 00:11:06,200
the 17 of the sorry

00:11:04,850 --> 00:11:09,170
nine of the

00:11:06,200 --> 00:11:12,139
39 MOOC sites and class central are

00:11:09,170 --> 00:11:13,639
built on open EDX which is pretty

00:11:12,139 --> 00:11:18,410
incredible considering that no other

00:11:13,639 --> 00:11:20,899
platform even comes close we've also

00:11:18,410 --> 00:11:23,180
seen national platforms are choosing

00:11:20,899 --> 00:11:26,589
open EDX there are platforms from at

00:11:23,180 --> 00:11:28,760
least 10 national governments and

00:11:26,589 --> 00:11:30,410
because it's open source anyone can

00:11:28,760 --> 00:11:31,850
contribute translation files to

00:11:30,410 --> 00:11:33,649
translate it into their native language

00:11:31,850 --> 00:11:36,500
so to date there's been translation work

00:11:33,649 --> 00:11:39,560
done in 73 different languages including

00:11:36,500 --> 00:11:44,000
over 97 percent completed strings for

00:11:39,560 --> 00:11:46,279
French Spanish and Chinese so where all

00:11:44,000 --> 00:11:47,839
these contributions coming from well one

00:11:46,279 --> 00:11:50,630
of the great things about open source is

00:11:47,839 --> 00:11:53,420
the pace of innovation and open EDX has

00:11:50,630 --> 00:11:55,519
attracted code contributions from many

00:11:53,420 --> 00:11:57,470
companies and individuals and here you

00:11:55,519 --> 00:12:01,790
can see some of the top contributors

00:11:57,470 --> 00:12:03,769
include Stanford Google Microsoft MIT my

00:12:01,790 --> 00:12:05,990
company appsembler is is also

00:12:03,769 --> 00:12:07,730
contributing enhancements to the native

00:12:05,990 --> 00:12:08,269
mobile apps and figures which is a

00:12:07,730 --> 00:12:10,550
lightweight

00:12:08,269 --> 00:12:14,449
reporting app that sits on top of open

00:12:10,550 --> 00:12:16,100
EDX so looking over the last three years

00:12:14,449 --> 00:12:19,070
the number of contributing organizations

00:12:16,100 --> 00:12:23,209
continues to grow with over 50 who

00:12:19,070 --> 00:12:25,760
signed the contributors agreement and

00:12:23,209 --> 00:12:28,180
similar to the Python pep process

00:12:25,760 --> 00:12:30,350
whereby community members can propose

00:12:28,180 --> 00:12:32,510
improvements to the Python language open

00:12:30,350 --> 00:12:36,260
EDX has adopted something similar with

00:12:32,510 --> 00:12:38,779
the oaep or open EDX proposal process so

00:12:36,260 --> 00:12:44,029
there are 23 that have been adopted and

00:12:38,779 --> 00:12:45,440
many more that are under review so what

00:12:44,029 --> 00:12:47,570
has been said about the Python community

00:12:45,440 --> 00:12:49,040
I think can be said for open EDX you

00:12:47,570 --> 00:12:51,079
come for the code you stay for the

00:12:49,040 --> 00:12:52,819
community and I think this is one of

00:12:51,079 --> 00:12:56,149
those aspects of an open source project

00:12:52,819 --> 00:12:58,550
that cannot be underestimated we all

00:12:56,149 --> 00:13:01,370
know the Python and Django community is

00:12:58,550 --> 00:13:05,209
wonderfully welcoming diverse and

00:13:01,370 --> 00:13:06,529
inclusive this is a photo from the hack

00:13:05,209 --> 00:13:08,269
day at the open a news conference at

00:13:06,529 --> 00:13:10,970
Stanford a few years ago and there's

00:13:08,269 --> 00:13:12,949
been five annual conferences so far the

00:13:10,970 --> 00:13:15,010
last one is in Montreal and the next one

00:13:12,949 --> 00:13:18,970
will be right here in San Diego

00:13:15,010 --> 00:13:20,830
March so who here is curious to take a

00:13:18,970 --> 00:13:23,740
look at open EDX for their company or

00:13:20,830 --> 00:13:28,060
organization you've got a few people all

00:13:23,740 --> 00:13:29,440
right so what is open EDX made of most

00:13:28,060 --> 00:13:30,970
of us in the room are developers how

00:13:29,440 --> 00:13:33,580
many developers do we have raise your

00:13:30,970 --> 00:13:35,920
hand great how many of you are Python

00:13:33,580 --> 00:13:37,450
Django developers I expect most CVS

00:13:35,920 --> 00:13:39,610
right so I mentioned earlier that open

00:13:37,450 --> 00:13:42,550
EDX is a Python application using the

00:13:39,610 --> 00:13:44,740
Django web framework but it has a lot of

00:13:42,550 --> 00:13:46,090
code from other languages as well so

00:13:44,740 --> 00:13:47,860
before we look at the breakdown of

00:13:46,090 --> 00:13:50,020
languages does anyone want to guess how

00:13:47,860 --> 00:13:54,160
many Django is will fit in the EDX

00:13:50,020 --> 00:13:56,290
platform so Django is roughly two

00:13:54,160 --> 00:13:59,980
hundred twenty-eight thousand lines of

00:13:56,290 --> 00:14:01,510
code how many X's do you think or sorry

00:13:59,980 --> 00:14:11,460
how many Django is would fit in EDX

00:14:01,510 --> 00:14:15,280
platform anyone want to guess ten six

00:14:11,460 --> 00:14:17,610
three who said three all right you're

00:14:15,280 --> 00:14:20,230
pretty close it's one point eight seven

00:14:17,610 --> 00:14:22,990
so the EDX platform has around four

00:14:20,230 --> 00:14:25,450
hundred twenty seven thousand lines of

00:14:22,990 --> 00:14:27,670
code and that slide is actually old

00:14:25,450 --> 00:14:29,320
because they're now over 1 million lines

00:14:27,670 --> 00:14:33,820
of code just in the EDX platform

00:14:29,320 --> 00:14:36,070
repository but if you look at the the

00:14:33,820 --> 00:14:37,450
number of code lines and you subtract

00:14:36,070 --> 00:14:39,820
the number of comments and blank lines

00:14:37,450 --> 00:14:42,310
then it's it's roughly the same as that

00:14:39,820 --> 00:14:45,130
slide so it's predominately Python code

00:14:42,310 --> 00:14:50,200
65% and the next highest language is

00:14:45,130 --> 00:14:52,210
JavaScript at 26% all right so you might

00:14:50,200 --> 00:14:54,880
be asking yourself how does an

00:14:52,210 --> 00:14:57,640
application scale to serve that many

00:14:54,880 --> 00:14:59,200
users well if you're like me you like to

00:14:57,640 --> 00:15:01,000
take things apart and figure out how

00:14:59,200 --> 00:15:03,340
they're constructed what are these parts

00:15:01,000 --> 00:15:04,900
and how do they fit together so where do

00:15:03,340 --> 00:15:07,810
you start with the system is massive as

00:15:04,900 --> 00:15:09,670
open EDX well in the early days

00:15:07,810 --> 00:15:11,440
this is around 2013 there wasn't much

00:15:09,670 --> 00:15:14,470
documentation on open EDX who's still

00:15:11,440 --> 00:15:16,150
you know like a very it was a baby of an

00:15:14,470 --> 00:15:18,640
open-source project and this was the

00:15:16,150 --> 00:15:21,010
only known diagram describing the

00:15:18,640 --> 00:15:24,130
architecture and it was really

00:15:21,010 --> 00:15:27,430
intimidating you know you look at this

00:15:24,130 --> 00:15:28,920
thing you think oh over-engineered yes

00:15:27,430 --> 00:15:30,939
no maybe

00:15:28,920 --> 00:15:32,500
but one thing to remember when you're

00:15:30,939 --> 00:15:34,509
doing things on a small scale you can

00:15:32,500 --> 00:15:36,100
make certain design decisions that fall

00:15:34,509 --> 00:15:38,980
apart when you're operating at a large

00:15:36,100 --> 00:15:41,230
scale so here's a good example

00:15:38,980 --> 00:15:43,420
once EDX started collecting all this

00:15:41,230 --> 00:15:45,639
learner analytics data they needed a way

00:15:43,420 --> 00:15:48,069
to analyze it to figure out well how

00:15:45,639 --> 00:15:50,949
learners learned and as you can imagine

00:15:48,069 --> 00:15:53,399
if you have 17 million learners you're

00:15:50,949 --> 00:15:55,600
generating terabytes of data every day

00:15:53,399 --> 00:15:57,970
and this is a treasure trove if you're a

00:15:55,600 --> 00:15:59,920
researcher right so how do you process

00:15:57,970 --> 00:16:01,269
all this data and glean meaningful

00:15:59,920 --> 00:16:04,420
insights out of it

00:16:01,269 --> 00:16:07,870
so EDX built this what they call the EDX

00:16:04,420 --> 00:16:11,019
analytics pipeline which takes student

00:16:07,870 --> 00:16:13,120
data from my sequel it takes course data

00:16:11,019 --> 00:16:15,490
from MongoDB and then it takes events

00:16:13,120 --> 00:16:17,019
data from the tracking logs it

00:16:15,490 --> 00:16:19,660
aggregates them all and it pushes them

00:16:17,019 --> 00:16:21,790
up to Hadoop for processing and then

00:16:19,660 --> 00:16:25,300
finally the results are pushed back into

00:16:21,790 --> 00:16:27,279
a my sequel database and once all the

00:16:25,300 --> 00:16:29,290
results are in my sequel another django

00:16:27,279 --> 00:16:30,879
app called edx insights visualizes all

00:16:29,290 --> 00:16:33,399
this data and lots of pretty graphs

00:16:30,879 --> 00:16:35,680
showing student enrollment engagement

00:16:33,399 --> 00:16:38,290
performance and here we're looking at

00:16:35,680 --> 00:16:41,050
the number of video views per unit in

00:16:38,290 --> 00:16:44,740
the course and this one is the attention

00:16:41,050 --> 00:16:46,750
span on an individual video so if this

00:16:44,740 --> 00:16:52,089
is a four minute video you can see that

00:16:46,750 --> 00:16:53,800
people's attention kind of wavers not

00:16:52,089 --> 00:16:57,279
surprisingly we all have pretty short

00:16:53,800 --> 00:16:59,379
attention spans these days so to give

00:16:57,279 --> 00:17:02,439
you a sense of how massive this open EDX

00:16:59,379 --> 00:17:04,089
suite of components is that insights

00:17:02,439 --> 00:17:05,890
component they were just looking at is

00:17:04,089 --> 00:17:09,130
just one of many components it's the red

00:17:05,890 --> 00:17:11,589
box in the upper right hand corner so

00:17:09,130 --> 00:17:13,199
this diagram shows a slightly less

00:17:11,589 --> 00:17:15,280
intimidating and more colorful

00:17:13,199 --> 00:17:18,299
interpretation of the open EDX

00:17:15,280 --> 00:17:20,980
architecture so it's been divided into

00:17:18,299 --> 00:17:23,140
different layers of the stack so we have

00:17:20,980 --> 00:17:25,720
the learner and educator facing

00:17:23,140 --> 00:17:27,760
components along the top this is the LMS

00:17:25,720 --> 00:17:29,260
the learning management system the

00:17:27,760 --> 00:17:31,530
studio which is the course authoring

00:17:29,260 --> 00:17:35,980
environment insights which is that

00:17:31,530 --> 00:17:37,659
analytics service and then we have the

00:17:35,980 --> 00:17:41,710
backend services so this is like the

00:17:37,659 --> 00:17:42,470
forums student notes back-end queuing

00:17:41,710 --> 00:17:45,950
sir

00:17:42,470 --> 00:17:48,650
and then we have these async processing

00:17:45,950 --> 00:17:50,090
so this is you know celery workers and

00:17:48,650 --> 00:17:53,030
then on the bottom we have all the

00:17:50,090 --> 00:17:57,320
storage layers so my sequel s3

00:17:53,030 --> 00:17:59,300
elasticsearch memcache another way of

00:17:57,320 --> 00:18:01,880
looking at the architecture is to drill

00:17:59,300 --> 00:18:03,500
down a level deeper and separate

00:18:01,880 --> 00:18:05,240
components into four areas so we have

00:18:03,500 --> 00:18:06,980
the tools and clients across the top so

00:18:05,240 --> 00:18:14,720
these are like the mobile apps the API

00:18:06,980 --> 00:18:16,700
manager UX toolkits and then this bluish

00:18:14,720 --> 00:18:19,790
green area this is the the EDX platform

00:18:16,700 --> 00:18:21,290
codebase over here we have independently

00:18:19,790 --> 00:18:23,270
deployed applications which you can

00:18:21,290 --> 00:18:25,580
think of as like micro services so these

00:18:23,270 --> 00:18:28,550
kind of sit alongside EDX in and expose

00:18:25,580 --> 00:18:30,200
an API that EDX can talk to you and then

00:18:28,550 --> 00:18:33,470
you have the the persistent systems like

00:18:30,200 --> 00:18:35,570
on the last slide we don't have time to

00:18:33,470 --> 00:18:36,920
go into the details of each one and how

00:18:35,570 --> 00:18:38,660
it's used but you can see that it's a

00:18:36,920 --> 00:18:42,020
pretty complex system with a lot of

00:18:38,660 --> 00:18:43,700
moving parts yet another way of looking

00:18:42,020 --> 00:18:47,630
at the components is by audience so we

00:18:43,700 --> 00:18:50,030
have educators learners and business and

00:18:47,630 --> 00:18:55,430
I like to call this one the Mickey Mouse

00:18:50,030 --> 00:18:57,350
taming the monolith alright so how the

00:18:55,430 --> 00:18:59,210
heck do you deploy this thing well once

00:18:57,350 --> 00:19:01,010
you've dug into the codebase a bit and

00:18:59,210 --> 00:19:02,570
understand these pieces then you might

00:19:01,010 --> 00:19:03,920
start thinking like an implementer like

00:19:02,570 --> 00:19:05,750
how would I go about putting this thing

00:19:03,920 --> 00:19:09,860
in a production for my company or

00:19:05,750 --> 00:19:11,810
organization so well this set up is

00:19:09,860 --> 00:19:13,280
probably overkill for a small open EDX

00:19:11,810 --> 00:19:15,140
site this is what you'd be looking at if

00:19:13,280 --> 00:19:17,510
you were building a site like a textured

00:19:15,140 --> 00:19:19,940
org with scalability and high

00:19:17,510 --> 00:19:21,610
availability so you'll notice that the

00:19:19,940 --> 00:19:24,080
App servers are running in two different

00:19:21,610 --> 00:19:26,510
availability zones so if there's a

00:19:24,080 --> 00:19:28,550
problem in US East one B zone the

00:19:26,510 --> 00:19:30,610
traffic will still be routed to us East

00:19:28,550 --> 00:19:32,990
one C and your site won't go down

00:19:30,610 --> 00:19:36,080
so obviously setting all this up

00:19:32,990 --> 00:19:38,990
manually would be a huge pain so we

00:19:36,080 --> 00:19:42,040
leveraged a few open-source tools to

00:19:38,990 --> 00:19:45,260
make deployments reliable and repeatable

00:19:42,040 --> 00:19:46,520
so building the platform takes place in

00:19:45,260 --> 00:19:48,830
two phases the first phase is

00:19:46,520 --> 00:19:51,260
infrastructure provisioning and the

00:19:48,830 --> 00:19:54,050
second one is service configuration and

00:19:51,260 --> 00:19:55,610
the provisioning phase stands up all the

00:19:54,050 --> 00:19:57,890
required resources and tags

00:19:55,610 --> 00:20:01,010
with the role identifiers so that the

00:19:57,890 --> 00:20:03,020
configuration tool can come in and do

00:20:01,010 --> 00:20:04,790
the provisioning and configuration of

00:20:03,020 --> 00:20:06,980
all the services so we use a tool from

00:20:04,790 --> 00:20:09,620
hashey Corp called Terra form how many

00:20:06,980 --> 00:20:11,810
people here use tariff one okay we got a

00:20:09,620 --> 00:20:13,370
few people out here and then for

00:20:11,810 --> 00:20:15,170
configuring the services we use the

00:20:13,370 --> 00:20:17,000
recommended ansible which is also what

00:20:15,170 --> 00:20:19,610
EDX uses which is written in Python by

00:20:17,000 --> 00:20:22,730
the way and then we built this tool

00:20:19,610 --> 00:20:24,770
called axe which is the the Epson blur

00:20:22,730 --> 00:20:28,190
EDX tool it's sort of a wrapper around

00:20:24,770 --> 00:20:30,230
terraform and ansible to save keystrokes

00:20:28,190 --> 00:20:32,450
and ensure consistency so basically one

00:20:30,230 --> 00:20:34,640
of our engineers got tired of typing

00:20:32,450 --> 00:20:36,860
everything so he made this command-line

00:20:34,640 --> 00:20:39,380
tool so I'm gonna show a simple example

00:20:36,860 --> 00:20:41,390
of using acts with the helpers terraform

00:20:39,380 --> 00:20:42,920
and ansible to provision server

00:20:41,390 --> 00:20:45,950
resources and deploy the open edx

00:20:42,920 --> 00:20:47,510
application so this is an example

00:20:45,950 --> 00:20:49,580
directory layout for one of our

00:20:47,510 --> 00:20:52,250
customers jay frog and they're on the

00:20:49,580 --> 00:20:55,900
pro tier and hosting provider here

00:20:52,250 --> 00:20:55,900
called the platform is Google Cloud

00:20:56,000 --> 00:21:01,490
it could be AWS digitalocean even Azure

00:20:58,870 --> 00:21:04,180
terraform is cloud provider agnostic so

00:21:01,490 --> 00:21:07,990
you can use the same most of the same

00:21:04,180 --> 00:21:10,340
code to deploy to different providers

00:21:07,990 --> 00:21:13,070
we've also specified the Google compute

00:21:10,340 --> 00:21:16,580
engine project J frog Academy that's

00:21:13,070 --> 00:21:18,320
right here and then we're passing in the

00:21:16,580 --> 00:21:20,060
Google credentials using a JSON file

00:21:18,320 --> 00:21:22,190
that's stored securely in a shared key

00:21:20,060 --> 00:21:24,410
key base directory and then we're using

00:21:22,190 --> 00:21:26,630
ansible vault to store these secrets

00:21:24,410 --> 00:21:29,090
that ansible needs also in key base and

00:21:26,630 --> 00:21:33,620
lastly we're specifying here to use the

00:21:29,090 --> 00:21:35,450
ansible play book called ficus Pro damo

00:21:33,620 --> 00:21:36,710
and I'll walk through this file in a sec

00:21:35,450 --> 00:21:39,020
but first what do we mean when we say

00:21:36,710 --> 00:21:40,730
the pro tier well we offer our customers

00:21:39,020 --> 00:21:42,710
three different tiers depending on how

00:21:40,730 --> 00:21:45,800
much traffic they're expecting so basic

00:21:42,710 --> 00:21:47,660
is a single server Pro is application

00:21:45,800 --> 00:21:49,820
and database servers and an enterprise

00:21:47,660 --> 00:21:51,590
is like a multiple app servers with load

00:21:49,820 --> 00:21:55,130
balancing and master-slave replication

00:21:51,590 --> 00:21:58,280
for the database so for this example

00:21:55,130 --> 00:22:00,710
we're just we're looking at the probe so

00:21:58,280 --> 00:22:02,060
this ficus Pro dot yam will file might

00:22:00,710 --> 00:22:04,250
be a little bit hard for those of you in

00:22:02,060 --> 00:22:06,530
the back to read but this is a generic

00:22:04,250 --> 00:22:08,330
ansible playbook for all customers who

00:22:06,530 --> 00:22:09,420
are on the pro plan and running the

00:22:08,330 --> 00:22:10,950
ficus release of

00:22:09,420 --> 00:22:12,660
phonetics so I'm not going to walk

00:22:10,950 --> 00:22:13,980
through this entire file but you can see

00:22:12,660 --> 00:22:17,070
there are multiple plays within this

00:22:13,980 --> 00:22:20,580
playbook each which can execute multiple

00:22:17,070 --> 00:22:22,560
roles so there's a configure play

00:22:20,580 --> 00:22:25,650
at the top that installs the MongoDB

00:22:22,560 --> 00:22:27,840
server and some other services like

00:22:25,650 --> 00:22:30,030
elastic search and memcache and then

00:22:27,840 --> 00:22:32,340
there's a configure stateless EDX app

00:22:30,030 --> 00:22:37,320
instance play that configures a

00:22:32,340 --> 00:22:39,600
stateless X app server so that's a

00:22:37,320 --> 00:22:41,190
generic playbook but how do you override

00:22:39,600 --> 00:22:43,980
the defaults with customer specific

00:22:41,190 --> 00:22:47,940
values well EDX uses a file called

00:22:43,980 --> 00:22:49,710
server VARs dot Y amel to do that so

00:22:47,940 --> 00:22:51,690
this is the server virus EML files

00:22:49,710 --> 00:22:54,000
specific to the open EDX site for our

00:22:51,690 --> 00:22:55,920
customer jay frog and you can see that

00:22:54,000 --> 00:22:59,480
we're overriding the site so the name of

00:22:55,920 --> 00:23:01,880
the site J frog Academy we're also

00:22:59,480 --> 00:23:05,310
overriding the backups directory

00:23:01,880 --> 00:23:07,920
definition and the theme and the URL so

00:23:05,310 --> 00:23:10,380
all that can be configured in this yamo

00:23:07,920 --> 00:23:14,550
file that sort of extends that generic

00:23:10,380 --> 00:23:16,740
playbook and then lastly we have the

00:23:14,550 --> 00:23:18,960
inventory file and the inventory file

00:23:16,740 --> 00:23:21,690
tells ansible which servers to connect

00:23:18,960 --> 00:23:22,860
to and run these playbooks so obviously

00:23:21,690 --> 00:23:24,930
you would create this inventory file

00:23:22,860 --> 00:23:26,010
after terraform is finished provisioning

00:23:24,930 --> 00:23:27,660
the servers because you don't you don't

00:23:26,010 --> 00:23:32,550
necessarily know the IP addresses before

00:23:27,660 --> 00:23:34,860
you run terraform all right so so that

00:23:32,550 --> 00:23:37,490
was kind of an overview of that process

00:23:34,860 --> 00:23:41,610
so terraform has a three step process

00:23:37,490 --> 00:23:42,810
initialize plan and apply so this is the

00:23:41,610 --> 00:23:45,150
command that we use to run the first

00:23:42,810 --> 00:23:46,850
step initialize which initializes the

00:23:45,150 --> 00:23:49,560
working the terraform working directory

00:23:46,850 --> 00:23:51,150
and we're passing some parameters like

00:23:49,560 --> 00:23:53,550
the customer the environment the tier

00:23:51,150 --> 00:23:55,170
the plan you notice that we've also

00:23:53,550 --> 00:23:58,950
passed in this terraform plugins

00:23:55,170 --> 00:24:02,270
directory so terraform is extensible so

00:23:58,950 --> 00:24:05,160
you can build your own plug-ins for it

00:24:02,270 --> 00:24:06,540
and these parameters are sort of

00:24:05,160 --> 00:24:08,850
optional because we've defined them in

00:24:06,540 --> 00:24:11,100
our ax dot yellow file so I'm just

00:24:08,850 --> 00:24:13,920
showing them kind of for educational

00:24:11,100 --> 00:24:17,220
purposes ok then we run the plan command

00:24:13,920 --> 00:24:19,410
and this is sort of like a dry run so it

00:24:17,220 --> 00:24:21,570
doesn't actually provision any servers

00:24:19,410 --> 00:24:23,399
for you but it shows you what it's going

00:24:21,570 --> 00:24:24,989
to do and that way you can audit

00:24:23,399 --> 00:24:26,609
this plan and make sure it's going to do

00:24:24,989 --> 00:24:30,239
things correctly before you execute it

00:24:26,609 --> 00:24:31,889
for real and then we run the apply

00:24:30,239 --> 00:24:33,899
command to actually provision the

00:24:31,889 --> 00:24:36,419
resources and I should mention here that

00:24:33,899 --> 00:24:38,539
terraform is very powerful tool and it

00:24:36,419 --> 00:24:41,099
can obliterate your production servers

00:24:38,539 --> 00:24:43,649
and all of your customer data if you're

00:24:41,099 --> 00:24:45,029
not careful so before running terraform

00:24:43,649 --> 00:24:48,809
you should have a good understanding of

00:24:45,029 --> 00:24:50,399
how it works how it tracks the state of

00:24:48,809 --> 00:24:54,299
your infrastructure and how the plan and

00:24:50,399 --> 00:24:57,029
apply commands work so lastly we run the

00:24:54,299 --> 00:24:59,129
ansible using X as the wrapper to

00:24:57,029 --> 00:25:00,960
provision the application on to the

00:24:59,129 --> 00:25:02,999
newly created servers that terraform

00:25:00,960 --> 00:25:04,950
just spun up for us and when this

00:25:02,999 --> 00:25:07,190
command is finished we should have a

00:25:04,950 --> 00:25:11,099
fully production open etic site running

00:25:07,190 --> 00:25:13,519
specific to our customer jay frog simple

00:25:11,099 --> 00:25:13,519
right

00:25:13,759 --> 00:25:18,029
ok so if you just want to get open X

00:25:16,349 --> 00:25:19,469
running on your laptop and you don't

00:25:18,029 --> 00:25:22,379
want to mess with terraform and ansible

00:25:19,469 --> 00:25:24,389
edx has provided a local dev environment

00:25:22,379 --> 00:25:26,999
called dev stack that can be built

00:25:24,389 --> 00:25:28,379
easily using docker compose so I know I

00:25:26,999 --> 00:25:30,089
know just when you think I can't

00:25:28,379 --> 00:25:31,320
possibly throw any more technology at

00:25:30,089 --> 00:25:34,080
you

00:25:31,320 --> 00:25:36,539
now there's docker butt docker compose

00:25:34,080 --> 00:25:38,700
takes a lot of that complexity away

00:25:36,539 --> 00:25:40,759
because it automatically creates a

00:25:38,700 --> 00:25:43,440
working development environment for you

00:25:40,759 --> 00:25:45,330
so how does it work well there's a

00:25:43,440 --> 00:25:48,059
provided make file and you run these

00:25:45,330 --> 00:25:51,029
series of commands to spin up an entire

00:25:48,059 --> 00:25:53,309
multi node openedx stack with each

00:25:51,029 --> 00:25:54,989
service running in a separate container

00:25:53,309 --> 00:25:56,999
so it's like a production environment

00:25:54,989 --> 00:25:59,629
but without all the costs of spinning up

00:25:56,999 --> 00:26:03,029
servers on AWS so you run these commands

00:25:59,629 --> 00:26:04,950
go make a coffee when you come back

00:26:03,029 --> 00:26:06,749
you'll have the entire platform running

00:26:04,950 --> 00:26:08,999
on your laptop which is pretty cool

00:26:06,749 --> 00:26:11,309
and if you're intimidated by the command

00:26:08,999 --> 00:26:13,469
line docker for Mac ships with this GUI

00:26:11,309 --> 00:26:15,299
called kite Matic which you can use to

00:26:13,469 --> 00:26:17,460
inspect all the running containers so

00:26:15,299 --> 00:26:19,109
you can see in this red box over here we

00:26:17,460 --> 00:26:20,879
have eight different containers running

00:26:19,109 --> 00:26:22,739
a variety of services on different ports

00:26:20,879 --> 00:26:25,469
so we have the elasticsearch my

00:26:22,739 --> 00:26:30,179
sequel memcache plus all the edx

00:26:25,469 --> 00:26:31,769
services like lms studio ecommerce a lot

00:26:30,179 --> 00:26:33,450
of stuff so who's going to go home

00:26:31,769 --> 00:26:36,389
tonight and try to get diffs at running

00:26:33,450 --> 00:26:37,179
on the machine alright got a few takers

00:26:36,389 --> 00:26:40,719
a few Bri

00:26:37,179 --> 00:26:42,759
Sol's alright so I want to wrap up my

00:26:40,719 --> 00:26:45,999
talk by inviting you to come and explore

00:26:42,759 --> 00:26:47,889
this deep sea that is open edex and like

00:26:45,999 --> 00:26:50,409
many open source projects there's a

00:26:47,889 --> 00:26:51,669
whole ecosystem not just the core

00:26:50,409 --> 00:26:53,139
platform so what we've been taught

00:26:51,669 --> 00:26:55,989
talking about today is primarily this

00:26:53,139 --> 00:26:59,019
white circle over here which is the core

00:26:55,989 --> 00:27:02,139
this is governed by EDX it's a a GPL

00:26:59,019 --> 00:27:03,639
license piece of software but there are

00:27:02,139 --> 00:27:05,679
hundreds of plugins and extensions of

00:27:03,639 --> 00:27:08,259
and available for open EDX they're being

00:27:05,679 --> 00:27:09,839
developed by people like you and there's

00:27:08,259 --> 00:27:12,489
also a growing community of companies

00:27:09,839 --> 00:27:14,679
that are adopting open EDX for their own

00:27:12,489 --> 00:27:17,019
use as well as vendors who are providing

00:27:14,679 --> 00:27:19,839
commercial products based on open EDX

00:27:17,019 --> 00:27:21,729
and it's still a young project open EDX

00:27:19,839 --> 00:27:24,129
just celebrated its five-year birthday

00:27:21,729 --> 00:27:28,179
this year so there are a lot of

00:27:24,129 --> 00:27:29,469
opportunities to get involved so if you

00:27:28,179 --> 00:27:32,139
haven't been scared away by the

00:27:29,469 --> 00:27:34,629
complexity of open EDX and do you want

00:27:32,139 --> 00:27:36,279
to explore its labyrinth of code

00:27:34,629 --> 00:27:39,099
I recommend joining the slack community

00:27:36,279 --> 00:27:40,539
it's the first URL up there there's also

00:27:39,099 --> 00:27:42,899
a mailing list and of course you can get

00:27:40,539 --> 00:27:45,429
all the code and play books on github

00:27:42,899 --> 00:27:47,019
and this talk would not have been

00:27:45,429 --> 00:27:49,869
possible without the contributions

00:27:47,019 --> 00:27:51,969
phone'll Regis Nimisha and John mark so

00:27:49,869 --> 00:27:56,950
thank you all for letting me reuse your

00:27:51,969 --> 00:27:58,479
excellent materials and if you're

00:27:56,950 --> 00:27:59,979
interested in trying out open EDX and

00:27:58,479 --> 00:28:01,719
you don't want to invest the time in

00:27:59,979 --> 00:28:03,820
figuring all this stuff out my company

00:28:01,719 --> 00:28:05,679
appsembler makes an all-in-one SAS

00:28:03,820 --> 00:28:08,109
offering about bananers called Tahoe and

00:28:05,679 --> 00:28:10,749
Tahoe lets you build a branded open etic

00:28:08,109 --> 00:28:12,279
site in a matter of minutes so come find

00:28:10,749 --> 00:28:14,889
me after the talk if you want to learn

00:28:12,279 --> 00:28:17,259
more or you can just go to that URL oh

00:28:14,889 --> 00:28:20,289
and if you're into stickers I have these

00:28:17,259 --> 00:28:21,429
cool laptop stickers to give away and

00:28:20,289 --> 00:28:23,409
with that I want to thank you all for

00:28:21,429 --> 00:28:25,809
your attention being a great audience

00:28:23,409 --> 00:28:27,940
and I hope this piqued your interest in

00:28:25,809 --> 00:28:32,919
taking a closer look at open EDX thank

00:28:27,940 --> 00:28:35,859
you thank you for that very nice talk

00:28:32,919 --> 00:28:38,919
I'm a little curious about so open EDX

00:28:35,859 --> 00:28:43,899
came out of EDX and how long has EDX

00:28:38,919 --> 00:28:46,710
been around Eric started in 2011 2012

00:28:43,899 --> 00:28:49,169
and then they open sourced the code

00:28:46,710 --> 00:28:52,980
13 um I saw in the architecture diagram

00:28:49,169 --> 00:28:55,020
MongoDB and MySQL what a why both great

00:28:52,980 --> 00:28:59,220
question yeah I forgot to mention that

00:28:55,020 --> 00:29:01,049
so EDX looked at the different datastore

00:28:59,220 --> 00:29:02,970
options and at the time they were using

00:29:01,049 --> 00:29:04,470
Amazon so they chose my sequel because

00:29:02,970 --> 00:29:06,840
RDS was available

00:29:04,470 --> 00:29:08,820
Postgres wasn't yet available on Amazon

00:29:06,840 --> 00:29:11,760
so that was the reason for my sequel the

00:29:08,820 --> 00:29:15,360
reason for is that they found that

00:29:11,760 --> 00:29:18,270
MongoDB was a better storage layer for

00:29:15,360 --> 00:29:20,250
course data so rather than using a

00:29:18,270 --> 00:29:23,909
relational database it's more like an

00:29:20,250 --> 00:29:26,340
object store hi is axe open sourced and

00:29:23,909 --> 00:29:27,870
if not when will it be open source I

00:29:26,340 --> 00:29:30,690
knew someone was gonna ask that question

00:29:27,870 --> 00:29:33,360
we've been trying to open source axe for

00:29:30,690 --> 00:29:35,250
like the last year and it's it's it's an

00:29:33,360 --> 00:29:36,960
internal only tool at this point but we

00:29:35,250 --> 00:29:39,720
have every intention of open sourcing it

00:29:36,960 --> 00:29:44,270
have you come across any open EDX

00:29:39,720 --> 00:29:44,270
courses on building an open EDX course

00:29:45,080 --> 00:29:50,970
another great question I actually gave a

00:29:48,230 --> 00:29:54,059
tutorial at the last open EDX conference

00:29:50,970 --> 00:29:57,750
in Montreal and I delivered the training

00:29:54,059 --> 00:30:01,669
on open EDX so it was a open EDX course

00:29:57,750 --> 00:30:04,110
to teach people how to develop open EDX

00:30:01,669 --> 00:30:06,230
are there any options currently for

00:30:04,110 --> 00:30:09,960
being able to install it on kubernetes

00:30:06,230 --> 00:30:13,799
great question yes there is a team in

00:30:09,960 --> 00:30:17,039
France actually the we call them fund of

00:30:13,799 --> 00:30:20,370
the French University in America and

00:30:17,039 --> 00:30:23,460
they have got open access deployed on

00:30:20,370 --> 00:30:25,950
open shaft which is kubernetes space of

00:30:23,460 --> 00:30:27,659
course so it's still a pretty nascent

00:30:25,950 --> 00:30:28,919
project I think they're still kind of

00:30:27,659 --> 00:30:31,649
working out the kinks but it looks

00:30:28,919 --> 00:30:34,679
really promising so I was wondering

00:30:31,649 --> 00:30:38,279
you've got the ansible scripts and

00:30:34,679 --> 00:30:41,220
you've got docker containers mm-hmm and

00:30:38,279 --> 00:30:42,990
I'm guessing that there are things going

00:30:41,220 --> 00:30:44,669
on in the docker file that are also

00:30:42,990 --> 00:30:47,130
going on in the ansible scripts how do

00:30:44,669 --> 00:30:51,360
you keep those in sync or do you try to

00:30:47,130 --> 00:30:53,700
or yeah you've you've touched on a very

00:30:51,360 --> 00:30:56,940
big point of contention within the

00:30:53,700 --> 00:30:59,360
community there there's a movement to

00:30:56,940 --> 00:31:01,780
make everything docker file based

00:30:59,360 --> 00:31:05,360
but EDX has a huge investment in ansible

00:31:01,780 --> 00:31:08,720
so currently that the devstack that I

00:31:05,360 --> 00:31:11,240
showed kind of uses both they have

00:31:08,720 --> 00:31:12,500
docker files to kind of bootstrap the

00:31:11,240 --> 00:31:15,070
environment and then ansible kind of

00:31:12,500 --> 00:31:19,700
comes in and does its thing there is a

00:31:15,070 --> 00:31:22,010
an unofficial project called open EDX

00:31:19,700 --> 00:31:24,860
- docker which uses pure docker files

00:31:22,010 --> 00:31:26,600
and it doesn't use any ansible and I

00:31:24,860 --> 00:31:28,610
found that it's actually kind of breath

00:31:26,600 --> 00:31:30,440
fresh air to use that because it's very

00:31:28,610 --> 00:31:32,540
easy to understand

00:31:30,440 --> 00:31:34,760
whereas ansible is super powerful but it

00:31:32,540 --> 00:31:38,770
also you can get kind of mired in the

00:31:34,760 --> 00:31:41,390
complexity of it um I was wondering if

00:31:38,770 --> 00:31:44,450
for this project and I guess projects of

00:31:41,390 --> 00:31:46,460
this ilk like and maybe this is too

00:31:44,450 --> 00:31:49,580
complicated a question like a process of

00:31:46,460 --> 00:31:53,900
its starting close source having funding

00:31:49,580 --> 00:31:55,309
being a growing business that then gets

00:31:53,900 --> 00:31:57,380
to a point that it can transition to

00:31:55,309 --> 00:31:59,020
releasing the whole project as open

00:31:57,380 --> 00:32:02,630
source

00:31:59,020 --> 00:32:04,669
see if I understand the question you you

00:32:02,630 --> 00:32:06,320
mean like how EDX started out as closed

00:32:04,669 --> 00:32:08,870
and then they later open sources tell

00:32:06,320 --> 00:32:10,790
you me yeah and also how much that was

00:32:08,870 --> 00:32:12,850
the plan and if that's the plan how a

00:32:10,790 --> 00:32:15,440
business even like pitches that to

00:32:12,850 --> 00:32:18,169
people to fund them we're totally gonna

00:32:15,440 --> 00:32:20,660
make what we're building free and easy

00:32:18,169 --> 00:32:23,419
for other people to edit yeah how do you

00:32:20,660 --> 00:32:25,130
get people to fund you doing yeah well I

00:32:23,419 --> 00:32:28,160
think it helps it EDX as a nonprofit

00:32:25,130 --> 00:32:30,260
organization so they don't have a profit

00:32:28,160 --> 00:32:32,210
motive in the way that like a VC back

00:32:30,260 --> 00:32:35,860
startup you know

00:32:32,210 --> 00:32:35,860
we'd have a hard time making that case

00:32:36,070 --> 00:32:41,750
EDX also has backing from MIT and

00:32:38,690 --> 00:32:43,250
Harvard so they can kind of you know get

00:32:41,750 --> 00:32:46,970
by for a while without having to make a

00:32:43,250 --> 00:32:51,770
lot of revenue but I think it's an

00:32:46,970 --> 00:32:53,210
interesting question around how what's

00:32:51,770 --> 00:32:57,169
the trade-off right if you're making an

00:32:53,210 --> 00:32:59,750
open-source product and your competitors

00:32:57,169 --> 00:33:03,710
can take that product and then compete

00:32:59,750 --> 00:33:04,910
with you is that a good thing I guess

00:33:03,710 --> 00:33:08,420
you have to differentiate it in other

00:33:04,910 --> 00:33:09,940
ways let's think Nate again

00:33:08,420 --> 00:33:16,949
for the fascinating talk

00:33:09,940 --> 00:33:16,949

YouTube URL: https://www.youtube.com/watch?v=7BBvxn4o_uE


