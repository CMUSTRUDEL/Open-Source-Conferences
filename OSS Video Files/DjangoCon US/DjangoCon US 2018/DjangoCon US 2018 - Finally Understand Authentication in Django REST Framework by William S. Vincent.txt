Title: DjangoCon US 2018 - Finally Understand Authentication in Django REST Framework by William S. Vincent
Publication date: 2018-11-08
Playlist: DjangoCon US 2018
Description: 
	Traditional Django handles user authentication for us. REST Framework? Not so much. The abundance of choice is overwhelming and typically THE biggest obstacle for newcomers.

This talk is a deep dive on authentication in Django REST Framework. We’ll start with an overview of HTTP and REST APIs before demonstrating how to implement the 4 built-in auth modes and their respective pros/cons. Special attention will be paid to common gotchas such as, Why do I need “both” TokenAuth and SessionAuth? What are JWTs?

Next we’ll implement a real-world REST auth setup that includes user registration, password reset/confirm, social auth, and endpoints for sign up, log in, and log out. The third-party packages django-rest-auth and django-allauth will be used .

By the end of the talk attendees will understand the basics of REST authentication, the tradeoffs involved, and walk away with a working implementation to jumpstart their future projects.

This talk was presented at: https://2018.djangocon.us/talk/finally-understand-authentication-in/

LINKS:
Follow Will Vincent 👇
On Twitter: https://twitter.com/wsv3000
Official homepage: https://wsvincent.com

Follow DjangCon US 👇
https://twitter.com/djangocon

Follow DEFNA 👇
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,050 --> 00:00:07,709
[Music]

00:00:15,770 --> 00:00:20,070
okay we have display now so once again

00:00:18,330 --> 00:00:20,970
our speaker is will Vincent he'll be

00:00:20,070 --> 00:00:25,130
talking about figuring out

00:00:20,970 --> 00:00:25,130
authentication in Django rest framework

00:00:28,429 --> 00:00:33,630
thank you I'm honored to be here today

00:00:31,650 --> 00:00:36,660
it's my first django con and we're gonna

00:00:33,630 --> 00:00:38,219
talk about authentication which for me

00:00:36,660 --> 00:00:39,930
personally I think for many people is

00:00:38,219 --> 00:00:44,329
the hardest part about switching from a

00:00:39,930 --> 00:00:46,430
traditional Django web app to an API and

00:00:44,329 --> 00:00:48,420
before I start I want to talk about

00:00:46,430 --> 00:00:49,950
remind us where we all are

00:00:48,420 --> 00:00:52,590
I asked beforehand and many of you

00:00:49,950 --> 00:00:53,850
already use Django rest framework but if

00:00:52,590 --> 00:00:56,100
you remember when you started off as a

00:00:53,850 --> 00:00:58,710
web developer you know what did that

00:00:56,100 --> 00:01:01,590
look like you had an idea of you know I

00:00:58,710 --> 00:01:03,780
want to build a website so how do you do

00:01:01,590 --> 00:01:06,210
that right you think you go online you

00:01:03,780 --> 00:01:08,100
ask a friend you find out about HTML so

00:01:06,210 --> 00:01:09,900
there's your first language bill the

00:01:08,100 --> 00:01:12,689
page doesn't look good but you figure it

00:01:09,900 --> 00:01:16,130
out then you say I want color I want to

00:01:12,689 --> 00:01:18,060
change the shapes another language CSS

00:01:16,130 --> 00:01:19,799
figure that out now you're on two

00:01:18,060 --> 00:01:21,750
languages and you sort of have a website

00:01:19,799 --> 00:01:24,090
but then you want some interactivity

00:01:21,750 --> 00:01:25,799
right so then you say JavaScript so now

00:01:24,090 --> 00:01:28,530
it's a programming language it's your

00:01:25,799 --> 00:01:30,990
third one go online find some jQuery

00:01:28,530 --> 00:01:33,049
code slap it on it works I don't

00:01:30,990 --> 00:01:35,700
understand why but you have the widget

00:01:33,049 --> 00:01:37,380
right and there's a point to this and

00:01:35,700 --> 00:01:39,509
then you say I want to build an

00:01:37,380 --> 00:01:40,860
interactive database driven website or

00:01:39,509 --> 00:01:43,350
really you say I want to build Twitter

00:01:40,860 --> 00:01:45,060
or Instagram or some clone so then you

00:01:43,350 --> 00:01:47,670
ask someone a developer and they say we

00:01:45,060 --> 00:01:50,070
need to learn about databases and you

00:01:47,670 --> 00:01:52,380
could do it in JavaScript but Python is

00:01:50,070 --> 00:01:53,670
really awesome and so is Django so now

00:01:52,380 --> 00:01:55,409
you on your fourth language so now

00:01:53,670 --> 00:01:57,180
you're on Python and then you have to

00:01:55,409 --> 00:01:59,040
learn Django and then you have to learn

00:01:57,180 --> 00:02:01,020
web development and you stumble through

00:01:59,040 --> 00:02:03,329
and you get something up fingers crossed

00:02:01,020 --> 00:02:05,100
it just works and traditional Django

00:02:03,329 --> 00:02:07,140
authentication really is just taking

00:02:05,100 --> 00:02:09,750
care of care of for you you don't have

00:02:07,140 --> 00:02:11,370
to understand it but you're not done

00:02:09,750 --> 00:02:12,810
right someone comes to you and says hey

00:02:11,370 --> 00:02:13,880
we have a front-end person we need an

00:02:12,810 --> 00:02:16,100
API

00:02:13,880 --> 00:02:17,660
now it's what's an API how do I build in

00:02:16,100 --> 00:02:20,480
the API with django Django rest

00:02:17,660 --> 00:02:22,730
framework again you stumble through you

00:02:20,480 --> 00:02:24,890
look at official Docs and this is where

00:02:22,730 --> 00:02:25,970
I think a lot of people go you know Oh

00:02:24,890 --> 00:02:28,340
God

00:02:25,970 --> 00:02:30,800
because there's four built-in ways to do

00:02:28,340 --> 00:02:33,110
user authentication and there's over a

00:02:30,800 --> 00:02:35,900
dozen third-party packages there's JW

00:02:33,110 --> 00:02:37,640
T's there's Olaf and because you've a

00:02:35,900 --> 00:02:39,230
lot of people have kind of you learned

00:02:37,640 --> 00:02:41,000
what they needed to know they hit this

00:02:39,230 --> 00:02:43,550
point and they realize they don't know

00:02:41,000 --> 00:02:46,760
how HTTP works or the web works because

00:02:43,550 --> 00:02:48,050
with api's it gets real really fast so

00:02:46,760 --> 00:02:49,970
in this talk we're going to cover a lot

00:02:48,050 --> 00:02:51,890
of ground we're going to start with the

00:02:49,970 --> 00:02:53,330
fundamentals and we're going to build up

00:02:51,890 --> 00:02:55,510
we're going to cover all the built-in

00:02:53,330 --> 00:02:57,740
Django rest framework authentication

00:02:55,510 --> 00:02:59,030
options we're going to talk about JW

00:02:57,740 --> 00:03:00,920
tees

00:02:59,030 --> 00:03:04,250
I've got full complete working code

00:03:00,920 --> 00:03:07,340
examples and all the in a repo I'll link

00:03:04,250 --> 00:03:09,620
to at the end and I'm happy to take

00:03:07,340 --> 00:03:11,510
questions you can interrupt me as I go

00:03:09,620 --> 00:03:13,520
this stuff is confusing and I think it's

00:03:11,510 --> 00:03:14,720
good to remember what we ought many of

00:03:13,520 --> 00:03:18,470
us in the room already know but many

00:03:14,720 --> 00:03:20,180
people don't so this is me I'm a

00:03:18,470 --> 00:03:22,850
freelance software developer out of

00:03:20,180 --> 00:03:25,760
Boston I learned programming a little

00:03:22,850 --> 00:03:33,500
bit later in life when I was 32 I'm 38

00:03:25,760 --> 00:03:34,550
now okay don't do that screen and I've

00:03:33,500 --> 00:03:38,230
worked at a number of early-stage

00:03:34,550 --> 00:03:40,940
startups most notably Quizlet which is

00:03:38,230 --> 00:03:46,280
which is an IDI tech company in San

00:03:40,940 --> 00:03:48,020
Francisco all right I've also loved to

00:03:46,280 --> 00:03:51,350
teach I've taught the undergraduate

00:03:48,020 --> 00:03:52,580
level and I firmly believe because I

00:03:51,350 --> 00:03:54,020
came to coding a little bit later in

00:03:52,580 --> 00:03:56,510
life that the challenge is primarily

00:03:54,020 --> 00:03:57,650
that it's poorly explained a lot of

00:03:56,510 --> 00:03:59,510
people learn coding when they were

00:03:57,650 --> 00:04:01,910
younger and they've just forgotten how

00:03:59,510 --> 00:04:03,320
complicated it all is so a lot of what I

00:04:01,910 --> 00:04:05,660
do is I really like working with

00:04:03,320 --> 00:04:07,550
beginners and trying to demystify all

00:04:05,660 --> 00:04:09,980
this stuff because it's not sending

00:04:07,550 --> 00:04:11,930
people to the moon right but it still

00:04:09,980 --> 00:04:16,520
gets really complicated building crud

00:04:11,930 --> 00:04:19,250
with auth again and again and again all

00:04:16,520 --> 00:04:22,760
right I've also written too soon to be

00:04:19,250 --> 00:04:27,139
three books on Django started off as my

00:04:22,760 --> 00:04:31,430
own notes first one Django for beginners

00:04:27,139 --> 00:04:33,740
that's really annoying Jane good for

00:04:31,430 --> 00:04:35,419
beginners you build five apps starting

00:04:33,740 --> 00:04:37,310
with the low world rest api's with

00:04:35,419 --> 00:04:40,550
django that's where a lot of material

00:04:37,310 --> 00:04:41,689
for this talk comes from and then by the

00:04:40,550 --> 00:04:44,599
end of the year I'll have a third book

00:04:41,689 --> 00:04:46,939
Django for professionals again I'm

00:04:44,599 --> 00:04:51,110
always mystified at how people learn

00:04:46,939 --> 00:04:54,500
Django because I feel like there's a

00:04:51,110 --> 00:04:56,060
wide lack of good materials so a lot of

00:04:54,500 --> 00:04:57,939
these are my own internal notes as I was

00:04:56,060 --> 00:05:00,080
learning and then I put them to paper I

00:04:57,939 --> 00:05:02,150
also have a personal website with a

00:05:00,080 --> 00:05:03,500
whole bunch of articles on Django this

00:05:02,150 --> 00:05:05,360
is largely so I don't forget what I've

00:05:03,500 --> 00:05:06,979
learned right because you're frustrated

00:05:05,360 --> 00:05:09,349
with something you figure it out and

00:05:06,979 --> 00:05:11,060
then you kind of forget it

00:05:09,349 --> 00:05:12,650
so I've been writing for a couple years

00:05:11,060 --> 00:05:16,159
now in Django and it's only the last

00:05:12,650 --> 00:05:18,860
year that I get real traffic so now when

00:05:16,159 --> 00:05:21,830
I google stuff I often see my own post

00:05:18,860 --> 00:05:24,159
which is frustrating and flattering at

00:05:21,830 --> 00:05:26,360
the same time because I wish you know I

00:05:24,159 --> 00:05:29,150
went that further step wherever I'm

00:05:26,360 --> 00:05:30,080
stuck on but the point being like all of

00:05:29,150 --> 00:05:32,180
you should write about what you're

00:05:30,080 --> 00:05:34,699
learning when you're learning is the

00:05:32,180 --> 00:05:36,440
best time to teach it and it saves you

00:05:34,699 --> 00:05:37,759
time personally right I mean it's easier

00:05:36,440 --> 00:05:41,659
to put it online rather than have a

00:05:37,759 --> 00:05:45,740
notebook full of ideas and finally I

00:05:41,659 --> 00:05:47,839
have a github repo with Django X the

00:05:45,740 --> 00:05:50,150
Django starter project DRF X starter

00:05:47,839 --> 00:05:54,279
project again just basic stuff that I

00:05:50,150 --> 00:05:54,279
didn't see really covered anywhere with

00:05:55,150 --> 00:05:59,330
custom user models authentication all

00:05:57,589 --> 00:06:02,870
the good stuff alright so we're gonna

00:05:59,330 --> 00:06:05,270
start let's start here API application

00:06:02,870 --> 00:06:07,039
programming interface and this is just

00:06:05,270 --> 00:06:09,110
rules for how one computer talks to

00:06:07,039 --> 00:06:11,060
another many of us know this but many

00:06:09,110 --> 00:06:12,080
beginners hear the term tossed around I

00:06:11,060 --> 00:06:15,379
think it's important to talk about

00:06:12,080 --> 00:06:18,020
acronyms and specifically we're talking

00:06:15,379 --> 00:06:20,330
about web api's so that can be internal

00:06:18,020 --> 00:06:22,669
or external internal would be if your

00:06:20,330 --> 00:06:24,589
Instagram you have one database that

00:06:22,669 --> 00:06:28,520
wants to talk to your own iOS app

00:06:24,589 --> 00:06:30,650
Android app you know web app but it can

00:06:28,520 --> 00:06:32,270
also be external so you can also we can

00:06:30,650 --> 00:06:35,449
all go sign up for a developer key and

00:06:32,270 --> 00:06:37,190
consume the Instagram API so it's all

00:06:35,449 --> 00:06:40,380
the same database and with permissions

00:06:37,190 --> 00:06:41,220
and authorizations you can access it

00:06:40,380 --> 00:06:43,620
so we're gonna talk about the

00:06:41,220 --> 00:06:45,720
authorizations part excuse me

00:06:43,620 --> 00:06:48,810
authentication partner and we're talking

00:06:45,720 --> 00:06:50,820
about restful api is so graph QL is

00:06:48,810 --> 00:06:52,680
another type of web API that's really

00:06:50,820 --> 00:06:54,540
interesting we can talk about later but

00:06:52,680 --> 00:06:55,290
REST API is is the dominant pattern on

00:06:54,540 --> 00:06:57,650
the web today

00:06:55,290 --> 00:07:00,210
I've been around since about 2000 and

00:06:57,650 --> 00:07:01,920
there are you know entire books on what

00:07:00,210 --> 00:07:04,080
is restful and I don't want to get into

00:07:01,920 --> 00:07:06,660
that debate but I think we can all agree

00:07:04,080 --> 00:07:09,510
these are four of the major points a big

00:07:06,660 --> 00:07:15,500
one being that stateless so each back

00:07:09,510 --> 00:07:17,660
and forth each back and forth is

00:07:15,500 --> 00:07:19,680
self-contained so that helps with

00:07:17,660 --> 00:07:21,660
consistency but that means we have to

00:07:19,680 --> 00:07:23,610
manage state and specifically just

00:07:21,660 --> 00:07:25,380
because you authorize someone how do you

00:07:23,610 --> 00:07:28,170
know that they're still authorized we're

00:07:25,380 --> 00:07:29,720
gonna again that support common HTTP

00:07:28,170 --> 00:07:33,930
methods we're going to talk about those

00:07:29,720 --> 00:07:35,610
has URL endpoints so a URL instead of

00:07:33,930 --> 00:07:37,770
returning a web page with HTML CSS

00:07:35,610 --> 00:07:42,890
JavaScript will give us a resource

00:07:37,770 --> 00:07:46,830
typically data in JSON or XML format

00:07:42,890 --> 00:07:49,080
alright and Django rest framework is

00:07:46,830 --> 00:07:50,850
worth mentioning is not part of Django

00:07:49,080 --> 00:07:54,030
it's a third party package it's the most

00:07:50,850 --> 00:07:56,040
popular by far now it is deliberately

00:07:54,030 --> 00:07:58,400
very similar to Django itself so if you

00:07:56,040 --> 00:08:03,240
know Django you can get up and running

00:07:58,400 --> 00:08:04,890
pretty quickly and it's the default

00:08:03,240 --> 00:08:06,570
choice I think these days almost

00:08:04,890 --> 00:08:08,760
everyone is using it there are some

00:08:06,570 --> 00:08:10,740
other ones there's some new cool ones

00:08:08,760 --> 00:08:11,880
but if you're using an API with Django

00:08:10,740 --> 00:08:14,190
you're building with Django rest

00:08:11,880 --> 00:08:16,380
framework and again the value is that

00:08:14,190 --> 00:08:18,000
you can take your one database and you

00:08:16,380 --> 00:08:20,190
can do your react front-end your view

00:08:18,000 --> 00:08:26,810
front-end all the front ends you want go

00:08:20,190 --> 00:08:26,810
crazy all right who knows what that is

00:08:27,930 --> 00:08:31,169
yes internet cables so this is you know

00:08:29,790 --> 00:08:33,210
I could pick a bunch of different images

00:08:31,169 --> 00:08:36,330
this is the Internet right these are

00:08:33,210 --> 00:08:38,640
submarine cables can be underground

00:08:36,330 --> 00:08:40,320
cables telephone poles satellites cell

00:08:38,640 --> 00:08:43,050
phones but it literally is just a

00:08:40,320 --> 00:08:44,670
collection of tubes as a Senator Ted

00:08:43,050 --> 00:08:47,700
Stevens said I mean it really is right

00:08:44,670 --> 00:08:49,890
it's one big network and I think if you

00:08:47,700 --> 00:08:50,850
asked a layperson you know what is the

00:08:49,890 --> 00:08:52,020
difference between the Internet in the

00:08:50,850 --> 00:08:55,050
world wide web they wouldn't be able to

00:08:52,020 --> 00:08:56,790
tell you the difference so it's I find

00:08:55,050 --> 00:08:59,370
it's important to remember that start

00:08:56,790 --> 00:09:02,670
and build up you know notably it was

00:08:59,370 --> 00:09:05,970
only came around around the 1960s in the

00:09:02,670 --> 00:09:07,950
US with military government academics

00:09:05,970 --> 00:09:09,570
what was closed systems it was private

00:09:07,950 --> 00:09:12,600
networks that could only talk to one

00:09:09,570 --> 00:09:14,760
another and you know over time it was

00:09:12,600 --> 00:09:16,290
the idea came wouldn't it be nice if a

00:09:14,760 --> 00:09:19,110
computer in the United States could talk

00:09:16,290 --> 00:09:21,779
to a computer in Africa or China that'd

00:09:19,110 --> 00:09:25,410
be nice right and you'll know who this

00:09:21,779 --> 00:09:27,720
guy's right Sir Tim berners-lee so he

00:09:25,410 --> 00:09:30,180
had the same idea in the early 90s he

00:09:27,720 --> 00:09:34,140
used the scientist working at CERN the

00:09:30,180 --> 00:09:36,839
large largest particle accelerator

00:09:34,140 --> 00:09:39,779
laboratory in the world at the time and

00:09:36,839 --> 00:09:41,660
so big experiments lots of data being

00:09:39,779 --> 00:09:45,600
sent to scientists all over the world

00:09:41,660 --> 00:09:46,650
and he said well it'd be nice if I could

00:09:45,600 --> 00:09:50,040
share this more easily with other

00:09:46,650 --> 00:09:52,709
academics and what he did is he said

00:09:50,040 --> 00:09:54,959
there was an existing hypertext standard

00:09:52,709 --> 00:09:57,360
out there so documents with links that

00:09:54,959 --> 00:09:59,040
connect to other documents and he took

00:09:57,360 --> 00:10:03,360
that he put it on top of the Internet

00:09:59,040 --> 00:10:06,990
which already had tcp/ip DNS and so he

00:10:03,360 --> 00:10:09,779
invented a new protocol HTTP hypertext

00:10:06,990 --> 00:10:11,250
Transfer Protocol so this is the part

00:10:09,779 --> 00:10:13,500
that the journey I mentioned the

00:10:11,250 --> 00:10:15,209
beginning a lot of newcomers really

00:10:13,500 --> 00:10:16,620
don't dive into HTTP because stuff just

00:10:15,209 --> 00:10:19,350
works it's just handled for you and web

00:10:16,620 --> 00:10:21,930
frameworks but with an API you need to

00:10:19,350 --> 00:10:22,709
know it and again there's I think it's

00:10:21,930 --> 00:10:25,080
important to note there's other

00:10:22,709 --> 00:10:28,980
protocols there's SMTP for email there's

00:10:25,080 --> 00:10:30,540
FTP for file transfer so again you know

00:10:28,980 --> 00:10:33,660
web versus Internet the difference is

00:10:30,540 --> 00:10:37,200
the web uses HTTP and Web API is

00:10:33,660 --> 00:10:40,260
literally sit on top of HTTP so we need

00:10:37,200 --> 00:10:41,670
to know it so well how does HTTP work

00:10:40,260 --> 00:10:42,930
it's a request response cycle

00:10:41,670 --> 00:10:44,790
between the client which could be my

00:10:42,930 --> 00:10:46,020
computer and the server which would be

00:10:44,790 --> 00:10:48,240
another computer in a data center

00:10:46,020 --> 00:10:50,550
somewhere back and forth back and forth

00:10:48,240 --> 00:10:52,980
back and forth we're going to get into

00:10:50,550 --> 00:10:55,710
that more and more but you do things

00:10:52,980 --> 00:10:57,950
like get the home page here it is post

00:10:55,710 --> 00:11:00,720
this information to my blog here it is

00:10:57,950 --> 00:11:05,340
authenticate or authorize this user

00:11:00,720 --> 00:11:09,120
okay now you're authorized and quickly

00:11:05,340 --> 00:11:10,890
these are the HTTP HTTP verbs that we

00:11:09,120 --> 00:11:17,400
all know and love that correspond

00:11:10,890 --> 00:11:18,690
roughly to crud so if that's annoying I

00:11:17,400 --> 00:11:21,720
can try to fix that but I can also just

00:11:18,690 --> 00:11:22,830
talk through it so common HTTP verb

00:11:21,720 --> 00:11:25,710
these are the main ones

00:11:22,830 --> 00:11:29,070
create corresponds to post read to get

00:11:25,710 --> 00:11:31,250
update to put a patch I won't get into

00:11:29,070 --> 00:11:34,800
the differences and delete isn't delete

00:11:31,250 --> 00:11:35,910
and status codes right again when you're

00:11:34,800 --> 00:11:38,550
starting out learning these are the

00:11:35,910 --> 00:11:41,430
things you sometimes see and go right

00:11:38,550 --> 00:11:44,490
usually you see a 404 which you're on

00:11:41,430 --> 00:11:47,160
the wrong page or 500 the server really

00:11:44,490 --> 00:11:50,490
screwed up but there's also two hundreds

00:11:47,160 --> 00:11:52,380
around success 304 redirection these

00:11:50,490 --> 00:11:55,020
only really become important when you're

00:11:52,380 --> 00:11:58,560
building the API yourself so we'll talk

00:11:55,020 --> 00:12:01,020
a little bit about those all right so

00:11:58,560 --> 00:12:02,670
this is just we're going to start with a

00:12:01,020 --> 00:12:06,480
web page and then we move to an API so

00:12:02,670 --> 00:12:09,930
this is example com just as it is so I

00:12:06,480 --> 00:12:12,090
typed into my computer my my web browser

00:12:09,930 --> 00:12:14,310
there's actually a lot that happens but

00:12:12,090 --> 00:12:18,180
big picture I hit return a get request

00:12:14,310 --> 00:12:22,380
is sent to the server and sends back not

00:12:18,180 --> 00:12:24,600
this beautiful page but this right view

00:12:22,380 --> 00:12:27,650
source all the HTML so it's just sending

00:12:24,600 --> 00:12:31,560
us data but for a web page it's HTML CSS

00:12:27,650 --> 00:12:36,360
JavaScript all right now we're getting

00:12:31,560 --> 00:12:38,190
into HTTP so all of HTTP so what is in

00:12:36,360 --> 00:12:39,890
those messages you know when I was

00:12:38,190 --> 00:12:42,090
learning this stuff a while ago I

00:12:39,890 --> 00:12:44,370
couldn't find good explanations of it it

00:12:42,090 --> 00:12:45,780
just seemed mysterious long gobbly

00:12:44,370 --> 00:12:48,360
if I could even find what it looked like

00:12:45,780 --> 00:12:52,080
but it's not that bad right there's

00:12:48,360 --> 00:12:56,040
three parts requests

00:12:52,080 --> 00:12:59,550
has a start line header and it could

00:12:56,040 --> 00:13:00,810
have a body and a response has a status

00:12:59,550 --> 00:13:05,880
line header in a body we're gonna go

00:13:00,810 --> 00:13:06,840
into all three of those an actually a

00:13:05,880 --> 00:13:09,810
quick question for you guys

00:13:06,840 --> 00:13:16,560
before we get in do I have to have a

00:13:09,810 --> 00:13:21,120
header on a wrist on a request ok we'll

00:13:16,560 --> 00:13:24,830
vote on it who says no who says one

00:13:21,120 --> 00:13:30,900
header and who says more than one header

00:13:24,830 --> 00:13:34,620
ok so the answer is 4a I'll get to the

00:13:30,900 --> 00:13:39,990
answer in the next slide so this is the

00:13:34,620 --> 00:13:42,630
simplest start line you can do where we

00:13:39,990 --> 00:13:44,880
have our HTTP method so this is a get we

00:13:42,630 --> 00:13:48,420
say the domain we want to go to this our

00:13:44,880 --> 00:13:51,480
URL endpoint so example.com and you have

00:13:48,420 --> 00:13:54,690
to specify the HTTP version

00:13:51,480 --> 00:13:55,920
we're generally on 1.12 exists and it's

00:13:54,690 --> 00:14:00,240
really cool but we won't talk about

00:13:55,920 --> 00:14:02,940
today but this is I feel like this is

00:14:00,240 --> 00:14:04,080
karma for something I did right but this

00:14:02,940 --> 00:14:08,220
is as simple as it gets

00:14:04,080 --> 00:14:11,040
we're saying get this URL using HTTP

00:14:08,220 --> 00:14:14,550
this is what the raw status start line

00:14:11,040 --> 00:14:16,440
would look like and this is the response

00:14:14,550 --> 00:14:19,920
to get back so the server sends back to

00:14:16,440 --> 00:14:22,380
us in the status line not the start line

00:14:19,920 --> 00:14:25,290
okay you're using this version of HTTP

00:14:22,380 --> 00:14:27,960
and here's your status codes all good

00:14:25,290 --> 00:14:29,880
and below it will have information we'll

00:14:27,960 --> 00:14:31,580
get into all right headers so this is a

00:14:29,880 --> 00:14:35,610
trick question

00:14:31,580 --> 00:14:38,370
this is the with what 1.1 you have to

00:14:35,610 --> 00:14:39,840
have a host but that's it with a post

00:14:38,370 --> 00:14:43,530
you need more information you need a

00:14:39,840 --> 00:14:47,280
content length or transfer encoding but

00:14:43,530 --> 00:14:49,650
for a get request all you need is a host

00:14:47,280 --> 00:14:51,180
and I highlight this because I think for

00:14:49,650 --> 00:14:54,120
me headers is just a whole bunch of

00:14:51,180 --> 00:14:56,700
gobbledygook that I try to ignore it's

00:14:54,120 --> 00:14:58,320
really generated by the server and until

00:14:56,700 --> 00:14:59,760
I need something it's easy to ignore it

00:14:58,320 --> 00:15:02,220
but it's really really important right

00:14:59,760 --> 00:15:04,770
this is like the metadata in the head of

00:15:02,220 --> 00:15:05,410
our HTML documents you can't see it on

00:15:04,770 --> 00:15:07,360
the page

00:15:05,410 --> 00:15:09,250
but it's really important the client and

00:15:07,360 --> 00:15:12,660
the server both need it and as we'll see

00:15:09,250 --> 00:15:15,160
this is where the authentication happens

00:15:12,660 --> 00:15:16,660
so now we have two lines we have our

00:15:15,160 --> 00:15:18,850
start line we have our header in the

00:15:16,660 --> 00:15:21,579
request being sent to the server go get

00:15:18,850 --> 00:15:23,620
this and then here's the response with

00:15:21,579 --> 00:15:26,379
the header from the server now there

00:15:23,620 --> 00:15:27,759
probably are more headers than this the

00:15:26,379 --> 00:15:29,680
important thing is that this is the type

00:15:27,759 --> 00:15:31,750
of information that's in there things

00:15:29,680 --> 00:15:34,720
that are helpful the date telling us

00:15:31,750 --> 00:15:38,850
that's HTML that's utf-8 the content

00:15:34,720 --> 00:15:41,230
length lots of additional information

00:15:38,850 --> 00:15:45,610
can be included this is as simple as I

00:15:41,230 --> 00:15:48,160
can make it okay now we're in the body

00:15:45,610 --> 00:15:50,199
so now a body is optional right if

00:15:48,160 --> 00:15:51,670
you're doing a request you're not

00:15:50,199 --> 00:15:53,949
sending anything you're just saying give

00:15:51,670 --> 00:15:55,689
me the page back if you're doing a post

00:15:53,949 --> 00:15:57,279
you would send something and that would

00:15:55,689 --> 00:16:01,029
be there be a space and be on the other

00:15:57,279 --> 00:16:02,649
line and this is what the full HTTP

00:16:01,029 --> 00:16:06,100
response would look like from the server

00:16:02,649 --> 00:16:08,500
so again we have our status line up top

00:16:06,100 --> 00:16:10,800
in blue we have our headers and then

00:16:08,500 --> 00:16:14,560
this is just the HTML getting back to us

00:16:10,800 --> 00:16:15,939
so it's really not magic I think it can

00:16:14,560 --> 00:16:20,639
seem like magic but it's just three

00:16:15,939 --> 00:16:20,639
parts and back and forth back and forth

00:16:22,079 --> 00:16:27,160
all right and this is high level again

00:16:25,029 --> 00:16:29,550
this so we're asking for this is what

00:16:27,160 --> 00:16:33,459
you get back we'll get more into that

00:16:29,550 --> 00:16:36,519
all right so what's a REST API endpoint

00:16:33,459 --> 00:16:39,339
this is so now we're talking about not a

00:16:36,519 --> 00:16:42,459
webpage but an API but we're gonna get

00:16:39,339 --> 00:16:44,500
data the key difference is it's going to

00:16:42,459 --> 00:16:46,139
send us generally a resource which will

00:16:44,500 --> 00:16:48,759
often be in JSON format

00:16:46,139 --> 00:16:51,040
and this will often be located on a

00:16:48,759 --> 00:16:53,559
subdomain so you know github comm is

00:16:51,040 --> 00:16:56,170
where you go for github API github comm

00:16:53,559 --> 00:16:59,490
is where the API is Twitter has the same

00:16:56,170 --> 00:17:06,459
subdomain API Twitter comm it's just

00:16:59,490 --> 00:17:09,490
URLs but different rules not sure why

00:17:06,459 --> 00:17:12,370
this is here now but this is the repo

00:17:09,490 --> 00:17:13,959
with the examples for the code you can

00:17:12,370 --> 00:17:15,490
look at later oh that's right because I

00:17:13,959 --> 00:17:16,499
have an example there's an example in

00:17:15,490 --> 00:17:20,259
there that

00:17:16,499 --> 00:17:25,359
I'm gonna talk through but don't don't

00:17:20,259 --> 00:17:27,579
go load it yet so in this repo I have a

00:17:25,359 --> 00:17:33,129
very basic Ginga rest framework package

00:17:27,579 --> 00:17:35,739
where I have users and the users URL

00:17:33,129 --> 00:17:37,210
that just lists all users so again I'm

00:17:35,739 --> 00:17:42,549
trying to keep this as simple as I can

00:17:37,210 --> 00:17:43,779
to start we're using curl here which

00:17:42,549 --> 00:17:45,460
you've never if you've never used it

00:17:43,779 --> 00:17:47,230
before is a great command-line tool to

00:17:45,460 --> 00:17:49,509
make requests and this is kind of a

00:17:47,230 --> 00:17:51,639
greatest-hits version of curl notice

00:17:49,509 --> 00:17:53,950
we're not putting the get in there it

00:17:51,639 --> 00:17:55,929
assumes I get we could put the get in as

00:17:53,950 --> 00:17:57,190
well and it just gives us back what we

00:17:55,929 --> 00:17:59,559
really want doesn't have all the headers

00:17:57,190 --> 00:18:05,320
and everything else it's just the

00:17:59,559 --> 00:18:07,749
greatest hits version of our HTTP if you

00:18:05,320 --> 00:18:09,149
add the dash V for verbose tag now

00:18:07,749 --> 00:18:12,070
you're starting to see the full

00:18:09,149 --> 00:18:15,519
information right so up top you have our

00:18:12,070 --> 00:18:19,739
full request with our get our host and

00:18:15,519 --> 00:18:22,749
then our response again so we have the

00:18:19,739 --> 00:18:28,570
status line we have our headers and then

00:18:22,749 --> 00:18:31,919
we have been information down here this

00:18:28,570 --> 00:18:33,940
is what it looks like Rajee TP but

00:18:31,919 --> 00:18:36,070
Django rest framework gives us a really

00:18:33,940 --> 00:18:38,499
nice visual representation of it thanks

00:18:36,070 --> 00:18:40,149
to tom christie carlton gibson and

00:18:38,499 --> 00:18:41,859
others and it tells us the same

00:18:40,149 --> 00:18:44,200
information so we have our get request

00:18:41,859 --> 00:18:46,090
we have our URL and look it's the same

00:18:44,200 --> 00:18:48,220
information we have our there's our

00:18:46,090 --> 00:18:55,840
status slot our status information our

00:18:48,220 --> 00:18:57,669
headers and our the return the body so

00:18:55,840 --> 00:18:59,919
again it's possible if you're just

00:18:57,669 --> 00:19:01,659
starting out you just see this you don't

00:18:59,919 --> 00:19:03,609
really understand how it works you can

00:19:01,659 --> 00:19:06,070
use curl you can go dive in deeper and

00:19:03,609 --> 00:19:09,570
then I think there are responses that

00:19:06,070 --> 00:19:09,570
you see look make a lot more sense

00:19:10,320 --> 00:19:17,980
alright so now we're talking about

00:19:14,919 --> 00:19:20,639
authentication which I love this xkcd

00:19:17,980 --> 00:19:25,710
about authentication what is it

00:19:20,639 --> 00:19:29,619
authentication is saying who you are

00:19:25,710 --> 00:19:30,279
authorization is what can you do so we

00:19:29,619 --> 00:19:32,139
need a way

00:19:30,279 --> 00:19:33,969
again HTTP is stateless so it doesn't

00:19:32,139 --> 00:19:38,460
have any memory how do you know that

00:19:33,969 --> 00:19:38,460
I've logged in that I am who I say I am

00:19:42,719 --> 00:19:51,669
all right

00:19:45,389 --> 00:19:55,169
this is the most basic what do you guys

00:19:51,669 --> 00:19:55,169
think I should do this is annoying right

00:19:55,649 --> 00:19:59,499
I'm just gonna talk through it we're

00:19:57,820 --> 00:20:01,419
gonna go through it this is the most

00:19:59,499 --> 00:20:03,219
basic way it can be so this is a two

00:20:01,419 --> 00:20:05,679
back and forth have our get requests

00:20:03,219 --> 00:20:07,389
give me this resource we'll just assume

00:20:05,679 --> 00:20:09,909
the homepage is locked down for some

00:20:07,389 --> 00:20:13,119
reason so notice the server it sends us

00:20:09,909 --> 00:20:16,419
back not a 200 401 unauthorized which

00:20:13,119 --> 00:20:18,639
says no but it tells us in the header

00:20:16,419 --> 00:20:20,859
Thank You headers dub-dub-dub

00:20:18,639 --> 00:20:22,450
authenticate using in this case basic

00:20:20,859 --> 00:20:23,889
we'll get into the types but it's

00:20:22,450 --> 00:20:27,849
telling us you need to use basic

00:20:23,889 --> 00:20:29,889
authentication to validate who you are

00:20:27,849 --> 00:20:31,419
so we say no problem let me send that

00:20:29,889 --> 00:20:33,999
again I'm gonna use the authorize

00:20:31,419 --> 00:20:36,159
authorization header you know a lot of

00:20:33,999 --> 00:20:38,379
headers this is when we need and I'm

00:20:36,159 --> 00:20:40,179
including this long string we'll talk

00:20:38,379 --> 00:20:42,489
about how it's generated that proves Who

00:20:40,179 --> 00:20:45,549
I am the server says oh now you've got

00:20:42,489 --> 00:20:48,190
that string in the format I asked I know

00:20:45,549 --> 00:20:49,359
who you are this is this is basically

00:20:48,190 --> 00:20:51,330
what the talk is this is how

00:20:49,359 --> 00:20:55,659
authentication works

00:20:51,330 --> 00:20:58,570
broadly speaking all right so now Django

00:20:55,659 --> 00:21:01,269
rest framework for built-in types why

00:20:58,570 --> 00:21:03,609
write like why do what do we really care

00:21:01,269 --> 00:21:07,029
and we we do but we're gonna break down

00:21:03,609 --> 00:21:08,769
all four of them so there's basic basic

00:21:07,029 --> 00:21:10,839
authentication session authentication

00:21:08,769 --> 00:21:12,759
token authentication and remote user

00:21:10,839 --> 00:21:13,899
authentication I'm curious how many

00:21:12,759 --> 00:21:16,539
people have used remote user

00:21:13,899 --> 00:21:20,559
authentication in this room okay couple

00:21:16,539 --> 00:21:21,940
all right awesome all right so again

00:21:20,559 --> 00:21:22,599
this is the flow we're gonna get

00:21:21,940 --> 00:21:24,460
familiar with it

00:21:22,599 --> 00:21:26,369
so basic authentication the most basic

00:21:24,460 --> 00:21:28,899
type there is send me the resource

00:21:26,369 --> 00:21:33,190
server says who are you identify

00:21:28,899 --> 00:21:35,889
yourself the 401 status code and the

00:21:33,190 --> 00:21:38,379
authenticate header and would basically

00:21:35,889 --> 00:21:41,080
say here's my username and password I'll

00:21:38,379 --> 00:21:43,440
just put it in clear text base64 encode

00:21:41,080 --> 00:21:45,090
it and I'll have it in the header

00:21:43,440 --> 00:21:47,460
pass it back and forth the server says

00:21:45,090 --> 00:21:51,149
up that looks good we're good to go so

00:21:47,460 --> 00:21:52,500
now in every subsequent request in the

00:21:51,149 --> 00:21:54,950
header we're gonna include the username

00:21:52,500 --> 00:21:59,850
and password now that's nice and easy

00:21:54,950 --> 00:22:02,480
simple to understand it is we'll get to

00:21:59,850 --> 00:22:04,710
yep so full thing back and forth

00:22:02,480 --> 00:22:06,899
authenticate here's Who I am here's

00:22:04,710 --> 00:22:10,409
basic C foreign code so we could decode

00:22:06,899 --> 00:22:12,539
that I think it's WS V is the username

00:22:10,409 --> 00:22:14,129
and test pass one two three or something

00:22:12,539 --> 00:22:17,629
but you could just plug that and decode

00:22:14,129 --> 00:22:17,629
it there's nothing mysterious about that

00:22:18,320 --> 00:22:23,190
okay got ahead of myself and then how do

00:22:20,820 --> 00:22:25,409
you add it to an existing how do you add

00:22:23,190 --> 00:22:28,320
authentication it's really easy with the

00:22:25,409 --> 00:22:32,629
rest framework we go down to our default

00:22:28,320 --> 00:22:34,259
authentication classes boom right there

00:22:32,629 --> 00:22:36,750
that's really all you need

00:22:34,259 --> 00:22:37,919
all right so pros and cons the pros it's

00:22:36,750 --> 00:22:40,259
really simple if you're just starting

00:22:37,919 --> 00:22:41,940
out if you're prototyping it's fine like

00:22:40,259 --> 00:22:43,860
just you need to use something don't

00:22:41,940 --> 00:22:47,490
over complicate things unnecessarily a

00:22:43,860 --> 00:22:50,580
big believer in that the cons are it's

00:22:47,490 --> 00:22:53,580
sent in every request so it's a little

00:22:50,580 --> 00:22:55,379
bit inefficient passing the credentials

00:22:53,580 --> 00:22:59,549
in clear-text that's not good

00:22:55,379 --> 00:23:01,830
but for testing that's fine and you

00:22:59,549 --> 00:23:03,600
should always use you know HTTP you

00:23:01,830 --> 00:23:05,970
should anyways but again it's fine for

00:23:03,600 --> 00:23:09,299
prototyping don't get complicated you

00:23:05,970 --> 00:23:11,250
don't have to all right cookies and

00:23:09,299 --> 00:23:14,129
sessions like I still think cookies have

00:23:11,250 --> 00:23:16,250
a hilarious name because like this is

00:23:14,129 --> 00:23:18,149
what I think of I think of cookies still

00:23:16,250 --> 00:23:22,159
really we know it's just a string of

00:23:18,149 --> 00:23:22,159
information stored on your computer but

00:23:22,970 --> 00:23:27,570
cookies and sessions are important

00:23:25,169 --> 00:23:29,759
because this is how Django works some

00:23:27,570 --> 00:23:31,440
most web apps work and I think a lot of

00:23:29,759 --> 00:23:34,289
people who went on that progression I

00:23:31,440 --> 00:23:36,149
spoke of in the beginning they never

00:23:34,289 --> 00:23:37,230
really dive into what's a cookie in a

00:23:36,149 --> 00:23:41,700
session so we're going to talk about

00:23:37,230 --> 00:23:44,250
that briefly so similar flow client says

00:23:41,700 --> 00:23:46,950
hey I want this resource who are you

00:23:44,250 --> 00:23:48,600
I'll log in with credentials now notably

00:23:46,950 --> 00:23:50,159
what it'll do is it'll create two things

00:23:48,600 --> 00:23:54,149
the server will create a session object

00:23:50,159 --> 00:23:57,270
and an ID and it'll only send the ID

00:23:54,149 --> 00:24:00,420
back to the client so the client says

00:23:57,270 --> 00:24:02,580
okay here's the ID ID in every request

00:24:00,420 --> 00:24:05,640
in the header authenticate it we'll pass

00:24:02,580 --> 00:24:07,680
the ID so the ID is then used on the

00:24:05,640 --> 00:24:11,610
server to look up the full session

00:24:07,680 --> 00:24:16,890
object and we do that in every request

00:24:11,610 --> 00:24:21,270
where we need to be authenticated again

00:24:16,890 --> 00:24:25,020
it's a one line one line change Thank

00:24:21,270 --> 00:24:26,970
You Jenga risk framework and pros and

00:24:25,020 --> 00:24:30,330
cons my opinion on it

00:24:26,970 --> 00:24:33,090
pros are that it is secure it's what

00:24:30,330 --> 00:24:34,890
Django uses it works quite well you only

00:24:33,090 --> 00:24:36,570
have to validate once then you use the

00:24:34,890 --> 00:24:38,280
session ID to pass back and forth you're

00:24:36,570 --> 00:24:41,730
not putting the user name and password

00:24:38,280 --> 00:24:43,380
in every single request but there are

00:24:41,730 --> 00:24:48,290
some challenges it's not good for

00:24:43,380 --> 00:24:50,610
multiple front ends because the session

00:24:48,290 --> 00:24:53,690
you know how do you have if I'm logged

00:24:50,610 --> 00:24:56,010
in to my website and on my Iowa iOS app

00:24:53,690 --> 00:24:59,430
you can only have one session per user

00:24:56,010 --> 00:25:00,870
how do you how do you handle that also

00:24:59,430 --> 00:25:02,370
on large apps you can have problems of

00:25:00,870 --> 00:25:04,290
scale where you have multiple servers

00:25:02,370 --> 00:25:06,150
things are changing how do you keep the

00:25:04,290 --> 00:25:09,210
session object between multiple servers

00:25:06,150 --> 00:25:10,860
up-to-date that can be a challenge but

00:25:09,210 --> 00:25:12,570
basically you know cookie session that's

00:25:10,860 --> 00:25:14,760
the default way that traditional

00:25:12,570 --> 00:25:18,210
websites work it's quite secure Django

00:25:14,760 --> 00:25:21,110
uses it but there is another thing

00:25:18,210 --> 00:25:23,580
called tokens so token authentication is

00:25:21,110 --> 00:25:25,800
similar pattern who are you identify

00:25:23,580 --> 00:25:28,590
yourself here's my credentials okay

00:25:25,800 --> 00:25:31,430
great I'm creating a sign token now the

00:25:28,590 --> 00:25:36,390
token has all the information on it but

00:25:31,430 --> 00:25:39,150
it is excuse me as is signed so it can't

00:25:36,390 --> 00:25:42,600
be tampered with and then we check the

00:25:39,150 --> 00:25:47,640
token every request so let me explain a

00:25:42,600 --> 00:25:48,840
little bit more so again the important

00:25:47,640 --> 00:25:51,000
thing here and to me this was

00:25:48,840 --> 00:25:52,470
eye-opening and I think if this is your

00:25:51,000 --> 00:25:53,850
first time seeing this you know all

00:25:52,470 --> 00:25:55,950
that's happening is you're requesting

00:25:53,850 --> 00:25:59,190
the webpage the server is saying okay

00:25:55,950 --> 00:26:00,570
401 unauthorized so not a four or three

00:25:59,190 --> 00:26:02,910
you can't do it but you need to

00:26:00,570 --> 00:26:05,820
authenticate in and it's telling us now

00:26:02,910 --> 00:26:09,300
I want a token not basic but I want two

00:26:05,820 --> 00:26:10,050
token and then you send a long string

00:26:09,300 --> 00:26:13,670
your toe

00:26:10,050 --> 00:26:20,160
and with each request back and forth

00:26:13,670 --> 00:26:21,650
oops how do you add it okay

00:26:20,160 --> 00:26:23,640
it's a one-liner in the bottom and

00:26:21,650 --> 00:26:26,010
installed apps you have to add auth

00:26:23,640 --> 00:26:30,330
token this is so nice and

00:26:26,010 --> 00:26:32,280
straightforward I think and tokens right

00:26:30,330 --> 00:26:34,110
so tokens are easy to scale because

00:26:32,280 --> 00:26:37,530
you're it's being passed back and forth

00:26:34,110 --> 00:26:39,990
you don't have to worry about let me

00:26:37,530 --> 00:26:42,690
rephrase that you only validate the user

00:26:39,990 --> 00:26:44,970
once so as soon as you send your

00:26:42,690 --> 00:26:46,560
credentials get the token the token says

00:26:44,970 --> 00:26:49,470
has all the information on there that

00:26:46,560 --> 00:26:51,350
you need and you can have multiple

00:26:49,470 --> 00:26:54,120
sessions so you can have multiple tokens

00:26:51,350 --> 00:26:57,210
or you can pass the token separately

00:26:54,120 --> 00:26:59,520
from your computer from your from your

00:26:57,210 --> 00:27:02,250
phone there's not a session that you

00:26:59,520 --> 00:27:04,320
have to manage as well I didn't explain

00:27:02,250 --> 00:27:07,470
it very well I'll try again

00:27:04,320 --> 00:27:10,470
what are some cons debate you know token

00:27:07,470 --> 00:27:13,350
authentication it works but tokens never

00:27:10,470 --> 00:27:14,580
expire you can fix it but the you know

00:27:13,350 --> 00:27:16,170
the implementation here they don't

00:27:14,580 --> 00:27:17,670
expire you might have issues over

00:27:16,170 --> 00:27:22,370
refreshing them because if I steal your

00:27:17,670 --> 00:27:25,880
token I steal you so that's a problem

00:27:22,370 --> 00:27:28,710
and then remote user authentication so

00:27:25,880 --> 00:27:29,910
this is rarely used largely for internet

00:27:28,710 --> 00:27:31,670
sites I'd love to talk to some of you

00:27:29,910 --> 00:27:33,690
who've implemented it

00:27:31,670 --> 00:27:36,240
we're largely not going to cover it

00:27:33,690 --> 00:27:38,460
about web stuff but it's there for you

00:27:36,240 --> 00:27:39,780
if you want it and actually I would love

00:27:38,460 --> 00:27:42,450
to learn more about it it's a little bit

00:27:39,780 --> 00:27:46,080
mysterious to me all right so here's my

00:27:42,450 --> 00:27:49,710
quick takeaway when to use what so basic

00:27:46,080 --> 00:27:51,270
authentication it is insecure good for

00:27:49,710 --> 00:27:54,180
testing just get up and going don't

00:27:51,270 --> 00:27:55,800
complicate things sessions is fine if

00:27:54,180 --> 00:27:58,170
maybe you're just building a website you

00:27:55,800 --> 00:28:00,240
have a rest framework back-end and you

00:27:58,170 --> 00:28:03,090
have a react front-end and that's it you

00:28:00,240 --> 00:28:05,520
can use sessions it powers the

00:28:03,090 --> 00:28:08,790
visualizer the the GUI for Django rest

00:28:05,520 --> 00:28:11,280
framework tokens is probably the default

00:28:08,790 --> 00:28:14,250
that you want it's pretty secure you can

00:28:11,280 --> 00:28:17,010
do multiple front ends and then remote

00:28:14,250 --> 00:28:18,210
user authentication you know if you're

00:28:17,010 --> 00:28:19,639
asking me you probably shouldn't be

00:28:18,210 --> 00:28:22,080
using it

00:28:19,639 --> 00:28:26,809
all right JavaScript web tokens so this

00:28:22,080 --> 00:28:31,999
is an update on traditional tokens and

00:28:26,809 --> 00:28:31,999
I'm gonna quickly look at my slides and

00:28:33,139 --> 00:28:39,149
there's generally three parts right so

00:28:36,539 --> 00:28:42,019
we have in red we have a header we have

00:28:39,149 --> 00:28:44,549
a payload and we have a verify signature

00:28:42,019 --> 00:28:45,960
we're gonna break down each of those but

00:28:44,549 --> 00:28:47,039
basically the header specifies is the

00:28:45,960 --> 00:28:52,649
algorithm you can use lots of different

00:28:47,039 --> 00:28:55,049
types of algorithms to to vote to to

00:28:52,649 --> 00:28:58,710
sign it the payload has all in for all

00:28:55,049 --> 00:29:02,009
our information and this is just this is

00:28:58,710 --> 00:29:03,509
not in this is not encrypted by default

00:29:02,009 --> 00:29:06,690
we'll see that in a second that you can

00:29:03,509 --> 00:29:10,470
encrypt it and the third part at the

00:29:06,690 --> 00:29:11,519
bottom there's a verify signature which

00:29:10,470 --> 00:29:14,279
is generated from the header and the

00:29:11,519 --> 00:29:15,690
payload so again if someone gets your

00:29:14,279 --> 00:29:21,119
JavaScript web token they can

00:29:15,690 --> 00:29:22,379
impersonate you so be careful with it to

00:29:21,119 --> 00:29:24,240
me I think this is interesting like this

00:29:22,379 --> 00:29:24,960
is literally what that long string that

00:29:24,240 --> 00:29:28,889
first one

00:29:24,960 --> 00:29:30,539
it just says this and you can go prove

00:29:28,889 --> 00:29:33,990
this the case we're specifying an

00:29:30,539 --> 00:29:36,960
algorithm and the type JavaScript web

00:29:33,990 --> 00:29:39,539
token again you know so it's not magic

00:29:36,960 --> 00:29:41,159
this is the payload in this case we can

00:29:39,539 --> 00:29:43,080
put all sorts of information here we

00:29:41,159 --> 00:29:45,570
could say you know last time we logged

00:29:43,080 --> 00:29:48,809
in email whatever you want about the

00:29:45,570 --> 00:29:51,929
user in this case this is just my name

00:29:48,809 --> 00:29:54,539
and a message hi Django Khan and then

00:29:51,929 --> 00:29:57,539
this is the verify signature which is

00:29:54,539 --> 00:29:59,730
generated for us so sign signature means

00:29:57,539 --> 00:30:03,240
no one can tamper with it but they can

00:29:59,730 --> 00:30:06,389
still read it and again this is a great

00:30:03,240 --> 00:30:09,059
site JWT IO where you can plug in any

00:30:06,389 --> 00:30:10,710
JavaScript web token I and you can see

00:30:09,059 --> 00:30:12,450
if you put it on the left you can see it

00:30:10,710 --> 00:30:13,619
on the right you can also change it on

00:30:12,450 --> 00:30:16,999
the right and see a change on the left

00:30:13,619 --> 00:30:19,080
so again there's no magic here

00:30:16,999 --> 00:30:22,200
JavaScript web token let's just cram in

00:30:19,080 --> 00:30:27,750
a lot more information in the JSON

00:30:22,200 --> 00:30:31,409
format all right so how do we use them

00:30:27,750 --> 00:30:33,270
there's two dominant packages Django

00:30:31,409 --> 00:30:36,000
rest framework JWT and

00:30:33,270 --> 00:30:38,640
Django rest framework simple JWT simple

00:30:36,000 --> 00:30:40,710
JWT is a little more up-to-date so we're

00:30:38,640 --> 00:30:44,040
gonna use that one today but you have an

00:30:40,710 --> 00:30:46,380
existing API you just add the package

00:30:44,040 --> 00:30:51,440
and down here under default

00:30:46,380 --> 00:30:52,830
authentication packages you add it in

00:30:51,440 --> 00:30:55,470
that's it

00:30:52,830 --> 00:30:58,190
now you switched over to JW TS that's

00:30:55,470 --> 00:30:58,190
that's pretty nice

00:30:58,250 --> 00:31:01,650
it's more I could say about it but

00:31:00,060 --> 00:31:03,600
that's a quick high-level what are they

00:31:01,650 --> 00:31:05,790
why would you use them again

00:31:03,600 --> 00:31:07,920
it's amazing how simple it is to add it

00:31:05,790 --> 00:31:09,860
to your project and you can customize it

00:31:07,920 --> 00:31:13,860
a million ways to the Sun if you want

00:31:09,860 --> 00:31:15,930
so should you write pros and cons you

00:31:13,860 --> 00:31:18,000
can store more data it's signed which is

00:31:15,930 --> 00:31:20,460
nice you can encrypt it which is a good

00:31:18,000 --> 00:31:21,960
idea you can do things like set it to

00:31:20,460 --> 00:31:23,220
expire which is important for security

00:31:21,960 --> 00:31:25,020
so you can say this is only good for

00:31:23,220 --> 00:31:26,760
five minutes or whatever timeframe you

00:31:25,020 --> 00:31:30,180
want again because if someone captures

00:31:26,760 --> 00:31:31,740
your token they are you the cons are its

00:31:30,180 --> 00:31:33,240
size can grow large if you don't manage

00:31:31,740 --> 00:31:37,320
it properly and it's being sent on every

00:31:33,240 --> 00:31:39,900
request and response so that can be

00:31:37,320 --> 00:31:41,670
performance hit and this set up is more

00:31:39,900 --> 00:31:44,340
complicated you know so my rule of thumb

00:31:41,670 --> 00:31:46,560
would be I get asked should I use them

00:31:44,340 --> 00:31:48,390
if you have a reason to use them use

00:31:46,560 --> 00:31:52,940
them but don't just use it because it's

00:31:48,390 --> 00:31:52,940
the cool tech don't complicate things

00:31:53,780 --> 00:32:02,310
alright so now we are how we doing on

00:31:57,600 --> 00:32:04,410
timing by the way okay awesome so this

00:32:02,310 --> 00:32:07,800
is a for those of you who are new to

00:32:04,410 --> 00:32:10,440
REST API s this is a you just get up and

00:32:07,800 --> 00:32:13,050
go start a project with Django rest

00:32:10,440 --> 00:32:17,520
framework I recommend checking out and

00:32:13,050 --> 00:32:19,080
now I want to quickly step through how I

00:32:17,520 --> 00:32:21,660
would do a new project from scratch

00:32:19,080 --> 00:32:23,790
because I find this helpful again this

00:32:21,660 --> 00:32:26,850
is all documented in the repo so don't

00:32:23,790 --> 00:32:29,160
need to take notes or anything alright

00:32:26,850 --> 00:32:31,020
so I like pit bends you don't have to

00:32:29,160 --> 00:32:33,570
use it you can use pip but you install

00:32:31,020 --> 00:32:35,850
Django start with your shell start a new

00:32:33,570 --> 00:32:39,240
project we'll just going to create a

00:32:35,850 --> 00:32:41,040
simple users app here happy to take

00:32:39,240 --> 00:32:42,300
questions on this and you know you're in

00:32:41,040 --> 00:32:44,940
the virtual environment because you have

00:32:42,300 --> 00:32:47,850
parentheses around the name

00:32:44,940 --> 00:32:51,639
all right first thing custom user model

00:32:47,850 --> 00:32:52,809
I'm a big advocate of using explaining

00:32:51,639 --> 00:32:54,309
to beginners they need to use custom

00:32:52,809 --> 00:32:55,659
user models because I think if I could

00:32:54,309 --> 00:32:57,129
change something about Django this would

00:32:55,659 --> 00:32:59,379
be one of the big things is that it's

00:32:57,129 --> 00:33:00,820
really a gotcha you dive in using a user

00:32:59,379 --> 00:33:02,320
model maybe you build something up and

00:33:00,820 --> 00:33:03,519
then you want to change it and someone

00:33:02,320 --> 00:33:04,779
says oh you didn't know about custom

00:33:03,519 --> 00:33:09,070
user models it's in the documentation

00:33:04,779 --> 00:33:10,570
you know you're effed it's kind of

00:33:09,070 --> 00:33:12,700
unfair right and I understand you want

00:33:10,570 --> 00:33:14,470
to keep it simple but you can really

00:33:12,700 --> 00:33:16,960
simply implement a custom user model up

00:33:14,470 --> 00:33:20,409
front this is how I like to do it so you

00:33:16,960 --> 00:33:22,210
add users up down here we say okay we're

00:33:20,409 --> 00:33:26,139
going to extend our month we're gonna

00:33:22,210 --> 00:33:28,359
have a new model custom user and this is

00:33:26,139 --> 00:33:29,499
all you have to do you don't even have

00:33:28,359 --> 00:33:32,039
to put anything that you can just put

00:33:29,499 --> 00:33:34,749
pass I'm simply extending the built in

00:33:32,039 --> 00:33:38,499
I'm using abstract user here you could

00:33:34,749 --> 00:33:40,570
also do abstract base user don't use it

00:33:38,499 --> 00:33:43,359
until you need to be my rule of thumb

00:33:40,570 --> 00:33:45,879
abstract user just lets us easily extend

00:33:43,359 --> 00:33:47,440
it abstract base user you're rewriting a

00:33:45,879 --> 00:33:50,379
lot of Django if you need to do it

00:33:47,440 --> 00:33:54,759
otherwise don't but this is all you need

00:33:50,379 --> 00:33:58,679
right it's it's just this boom users app

00:33:54,759 --> 00:34:00,850
change your auth user model here it is I

00:33:58,679 --> 00:34:02,049
you know I always try to explain this

00:34:00,850 --> 00:34:04,679
more to beginners because I think it's

00:34:02,049 --> 00:34:07,809
not that bad and it's important to have

00:34:04,679 --> 00:34:09,909
alright and then we go through we are in

00:34:07,809 --> 00:34:11,980
our admin we want to be able to see the

00:34:09,909 --> 00:34:16,629
users app this is pretty straightforward

00:34:11,980 --> 00:34:18,700
to this crowd got a migrated our new app

00:34:16,629 --> 00:34:21,099
or excuse me make the migrations we

00:34:18,700 --> 00:34:23,139
migrate it create a super user so now

00:34:21,099 --> 00:34:24,760
you know this is also the gotcha don't

00:34:23,139 --> 00:34:26,319
migrate until you have your new custom

00:34:24,760 --> 00:34:29,079
user model that's important if you

00:34:26,319 --> 00:34:30,849
migrate upfront they admin all the other

00:34:29,079 --> 00:34:32,349
parts of Django are gonna be upset with

00:34:30,849 --> 00:34:34,270
you you have to weigh them that migrate

00:34:32,349 --> 00:34:37,389
that's a gotcha and then we run the

00:34:34,270 --> 00:34:38,859
server so that's it now you have custom

00:34:37,389 --> 00:34:40,720
user model now it's time for Django rest

00:34:38,859 --> 00:34:45,520
framework we can just install it again

00:34:40,720 --> 00:34:47,589
with pip F how do we add it you know we

00:34:45,520 --> 00:34:50,049
just added is a nice third-party app

00:34:47,589 --> 00:34:51,490
this is optional this actually maybe I

00:34:50,049 --> 00:34:52,599
put third-party about local doesn't

00:34:51,490 --> 00:34:55,899
matter as long as it's the bottom of

00:34:52,599 --> 00:34:58,150
installed apps we need rest underscore

00:34:55,899 --> 00:35:00,250
framework because we're gonna use tokens

00:34:58,150 --> 00:35:01,930
we also add the auth token but if we're

00:35:00,250 --> 00:35:06,069
using basic recession's we would not

00:35:01,930 --> 00:35:08,170
have to include that so now there's a

00:35:06,069 --> 00:35:10,270
gotcha here in the settings at the

00:35:08,170 --> 00:35:13,289
bottom by default rest framework gives

00:35:10,270 --> 00:35:16,500
you basic in session authentication

00:35:13,289 --> 00:35:19,750
implicitly so you can explicitly set it

00:35:16,500 --> 00:35:23,859
in this case we're using tokens so why

00:35:19,750 --> 00:35:25,569
do you have session and token it's

00:35:23,859 --> 00:35:27,730
because sessions is if you want to use

00:35:25,569 --> 00:35:29,109
the web interface you need to have

00:35:27,730 --> 00:35:30,549
sessions as well so generally speaking

00:35:29,109 --> 00:35:33,299
you're always going to have session and

00:35:30,549 --> 00:35:36,099
then you're going to have token or JWT I

00:35:33,299 --> 00:35:38,650
lost hours of my life figuring that out

00:35:36,099 --> 00:35:42,059
you need both sessions is to power the

00:35:38,650 --> 00:35:43,720
web interface for Django rest framework

00:35:42,059 --> 00:35:46,950
maybe I'm the only one who made that

00:35:43,720 --> 00:35:50,470
mistake all right now we migrate it now

00:35:46,950 --> 00:35:52,750
again how do we do our our endpoints so

00:35:50,470 --> 00:35:55,140
we could roll them our own for login and

00:35:52,750 --> 00:35:57,359
logout I like using Django rest off

00:35:55,140 --> 00:36:00,970
that's just a personal preference

00:35:57,359 --> 00:36:01,990
again we addressed off here I'm gonna go

00:36:00,970 --> 00:36:05,740
a little bit faster because there's

00:36:01,990 --> 00:36:06,339
notes in the repo I add the URL pattern

00:36:05,740 --> 00:36:09,339
for it

00:36:06,339 --> 00:36:13,180
just rest off include it nice and

00:36:09,339 --> 00:36:15,130
straightforward and it gives me the

00:36:13,180 --> 00:36:18,520
login and logout endpoints that we can

00:36:15,130 --> 00:36:20,950
now use very little code you know I

00:36:18,520 --> 00:36:23,140
could write my own but this is a package

00:36:20,950 --> 00:36:24,839
used by a number of people and until I

00:36:23,140 --> 00:36:28,059
need to rewrite it why do I rewrite it

00:36:24,839 --> 00:36:30,099
alright last thing we need sign up so

00:36:28,059 --> 00:36:32,849
Django all auth is how I like to do it I

00:36:30,099 --> 00:36:35,770
think most people in this room use that

00:36:32,849 --> 00:36:39,099
add a whole bunch of things here got to

00:36:35,770 --> 00:36:41,200
add sites account registration talk more

00:36:39,099 --> 00:36:42,490
about that but we don't have time this

00:36:41,200 --> 00:36:44,230
is an important one you have to add

00:36:42,490 --> 00:36:46,000
specify your email back-end because by

00:36:44,230 --> 00:36:48,369
default it will want to send something

00:36:46,000 --> 00:36:50,500
when someone logs in or excuse me signs

00:36:48,369 --> 00:36:51,430
up in this case we're just using consul

00:36:50,500 --> 00:36:53,440
it's just going to put it into our

00:36:51,430 --> 00:36:55,450
command line you could also have that so

00:36:53,440 --> 00:36:58,510
it'll change it so it will send an email

00:36:55,450 --> 00:37:00,640
through an email service and you need to

00:36:58,510 --> 00:37:04,839
add the site ID because it uses the

00:37:00,640 --> 00:37:06,250
site's framework in Django add just here

00:37:04,839 --> 00:37:09,160
at the bottom rest auth registration

00:37:06,250 --> 00:37:12,960
that's all you need migrate run server

00:37:09,160 --> 00:37:15,880
and now we have our sign up and

00:37:12,960 --> 00:37:17,769
so you know I went through that quickly

00:37:15,880 --> 00:37:18,069
if you think about what we just did

00:37:17,769 --> 00:37:20,079
there

00:37:18,069 --> 00:37:22,509
we built a Jenga project we built an API

00:37:20,079 --> 00:37:25,569
we have our users app we have log in log

00:37:22,509 --> 00:37:28,210
out and sign up and it's a couple dozen

00:37:25,569 --> 00:37:31,269
line lines of code that's pretty awesome

00:37:28,210 --> 00:37:32,829
and when I teach to beginners I really

00:37:31,269 --> 00:37:36,730
like to use that approach and try to

00:37:32,829 --> 00:37:37,869
make it as simple as possible okay we

00:37:36,730 --> 00:37:40,660
got serious

00:37:37,869 --> 00:37:43,210
I have source code up there Jango Khan

00:37:40,660 --> 00:37:45,279
2008 rest off again I've got a working

00:37:43,210 --> 00:37:48,220
basic concession implementation you can

00:37:45,279 --> 00:37:50,890
use and look at of token one and I have

00:37:48,220 --> 00:37:53,619
a working JWT these slides are also up

00:37:50,890 --> 00:37:55,119
as well and my information is on my

00:37:53,619 --> 00:37:57,930
website please feel free to email me

00:37:55,119 --> 00:38:06,449
with any questions thank you guys

00:37:57,930 --> 00:38:06,449

YouTube URL: https://www.youtube.com/watch?v=pY-oje5b5Qk


