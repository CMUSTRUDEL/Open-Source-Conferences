Title: DjangoCon US 2018 - Lightning Talks Day 2
Publication date: 2018-11-17
Playlist: DjangoCon US 2018
Description: 
	DjangoCon US 2018 - Lightning Talks Day 2
00:00 - Matt Shapman
05:52 - Ryan Sullivan
10:35 - Kyle Gibson
15:48 - Philip James
19:11 - Caz Downing-Bryant
24:06 - Andrew Pinkham
27:57 - Mariatta Wijaya

Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,050 --> 00:00:07,709
[Music]

00:00:21,910 --> 00:00:25,660
some ground rules last time I gave this

00:00:23,050 --> 00:00:26,770
it was a forty minute talk and I caught

00:00:25,660 --> 00:00:30,759
the Gengo cold

00:00:26,770 --> 00:00:33,460
so here's 35 slides in five minutes if I

00:00:30,759 --> 00:00:36,309
get through it in time without sneezing

00:00:33,460 --> 00:00:38,890
I expect wild applause thank you I'm

00:00:36,309 --> 00:00:40,690
Matt Chapman I work for impulse mobile

00:00:38,890 --> 00:00:42,670
I'm talking about cranial we're not

00:00:40,690 --> 00:00:44,890
gonna have time for this agenda we are

00:00:42,670 --> 00:00:47,140
you want to know what cranial is at its

00:00:44,890 --> 00:00:49,059
core it's an ontology to allow data

00:00:47,140 --> 00:00:50,320
engineers and data scientists and people

00:00:49,059 --> 00:00:52,239
working in different programming

00:00:50,320 --> 00:00:55,030
languages on different platforms to talk

00:00:52,239 --> 00:00:57,190
to each other in a common way about data

00:00:55,030 --> 00:00:59,469
engineering tasks data science tasks

00:00:57,190 --> 00:01:02,500
machine learning and related things it's

00:00:59,469 --> 00:01:06,009
also a Python library set of actually

00:01:02,500 --> 00:01:08,289
for Python libraries various modules and

00:01:06,009 --> 00:01:10,810
it implements many useful things

00:01:08,289 --> 00:01:14,110
it was developed at Tribune publishing

00:01:10,810 --> 00:01:16,119
for content recommendations for the

00:01:14,110 --> 00:01:17,979
Chicago Tribune the LA Times other major

00:01:16,119 --> 00:01:20,200
newspapers and other related machine

00:01:17,979 --> 00:01:22,210
learning services so if you use any of

00:01:20,200 --> 00:01:23,649
these technologies on this list there's

00:01:22,210 --> 00:01:25,539
a good chance there is something in

00:01:23,649 --> 00:01:28,000
cranial that might be useful to you and

00:01:25,539 --> 00:01:29,860
if you use any competitors to any of

00:01:28,000 --> 00:01:32,649
these technologies it should be very

00:01:29,860 --> 00:01:34,569
very easy for you to wrap your usage of

00:01:32,649 --> 00:01:35,830
those technologies in a simple class

00:01:34,569 --> 00:01:37,899
that will allow you to integrate with

00:01:35,830 --> 00:01:39,369
the rest of the cranial framework so

00:01:37,899 --> 00:01:42,069
these are some things that I believe if

00:01:39,369 --> 00:01:44,050
you believe these things - then you will

00:01:42,069 --> 00:01:45,520
love cranial if you don't I can't do

00:01:44,050 --> 00:01:46,810
anything for you by the way because I

00:01:45,520 --> 00:01:48,130
have to go through this so fast you're

00:01:46,810 --> 00:01:49,780
gonna have to read the slides while I'm

00:01:48,130 --> 00:01:50,920
talking there's some jokes hidden in

00:01:49,780 --> 00:01:53,289
there I'm not gonna have time to tell

00:01:50,920 --> 00:01:55,929
them good luck so what can cranial do

00:01:53,289 --> 00:01:57,729
for you the goal is that it will

00:01:55,929 --> 00:01:59,649
accelerate your time to market so that

00:01:57,729 --> 00:02:01,149
data scientists can build data models

00:01:59,649 --> 00:02:03,099
that are ready to go into production and

00:02:01,149 --> 00:02:05,200
do useful things like make predictions

00:02:03,099 --> 00:02:06,520
off of web requests or take data base

00:02:05,200 --> 00:02:09,250
inputs and transform them into useful

00:02:06,520 --> 00:02:11,140
outputs it should promote standard

00:02:09,250 --> 00:02:13,030
interfaces and reusable code if you use

00:02:11,140 --> 00:02:14,470
cranial on one project you should have

00:02:13,030 --> 00:02:17,140
lots of useful things you can use for

00:02:14,470 --> 00:02:18,280
your next project and it should allow

00:02:17,140 --> 00:02:19,750
you to move between different

00:02:18,280 --> 00:02:21,370
technologies very easily so if you're

00:02:19,750 --> 00:02:23,080
using one database to run project you

00:02:21,370 --> 00:02:25,239
hit scaling problems on that and you

00:02:23,080 --> 00:02:27,610
need to move up to Amazon redshift or

00:02:25,239 --> 00:02:29,560
Google bigquery or something like that

00:02:27,610 --> 00:02:31,270
it should be very very simple to swap

00:02:29,560 --> 00:02:32,770
those components out and have your

00:02:31,270 --> 00:02:34,630
software keep working the way you intend

00:02:32,770 --> 00:02:35,620
where Channel come from I told you it

00:02:34,630 --> 00:02:37,239
came from

00:02:35,620 --> 00:02:40,060
the content recommendation system work

00:02:37,239 --> 00:02:41,230
at a Tribune but it did prove successful

00:02:40,060 --> 00:02:43,480
the things we built there were very

00:02:41,230 --> 00:02:46,510
useful for other machine learning and

00:02:43,480 --> 00:02:47,799
data engineering tasks so one of the

00:02:46,510 --> 00:02:50,620
core objects that you need to know about

00:02:47,799 --> 00:02:52,030
and cranial is a model if you get

00:02:50,620 --> 00:02:54,220
nothing else you can think of a model as

00:02:52,030 --> 00:02:55,480
a pure function model transforms a

00:02:54,220 --> 00:02:57,099
record if you're implementing a model

00:02:55,480 --> 00:02:58,840
you only have to implement one method on

00:02:57,099 --> 00:03:01,269
that class it takes in a record it

00:02:58,840 --> 00:03:04,329
outputs a record where does the model

00:03:01,269 --> 00:03:06,879
come from you make them but they can be

00:03:04,329 --> 00:03:07,780
made of lots of things what is a record

00:03:06,879 --> 00:03:10,150
you probably want to know that at this

00:03:07,780 --> 00:03:12,489
point a record is like a key value data

00:03:10,150 --> 00:03:14,560
structure so a Python dictionary can be

00:03:12,489 --> 00:03:17,260
an example of a record so a model

00:03:14,560 --> 00:03:18,730
transforms records typically that runs

00:03:17,260 --> 00:03:20,079
inside of a service that does something

00:03:18,730 --> 00:03:22,540
useful the web service that takes web

00:03:20,079 --> 00:03:24,400
requests a executable the process is a

00:03:22,540 --> 00:03:27,519
CSV and puts out a different kind of CSV

00:03:24,400 --> 00:03:31,870
or puts things into a database or puts

00:03:27,519 --> 00:03:33,819
it on a streaming messaging broker so

00:03:31,870 --> 00:03:35,799
what's inside of a model you have

00:03:33,819 --> 00:03:37,629
multiple steps those steps can be simple

00:03:35,799 --> 00:03:39,700
functions they can also be other models

00:03:37,629 --> 00:03:42,280
so you can have models inside of models

00:03:39,700 --> 00:03:44,470
inside of models and do whatever kind of

00:03:42,280 --> 00:03:46,450
recursion you want that's maybe not

00:03:44,470 --> 00:03:48,880
necessarily the best way to compose

00:03:46,450 --> 00:03:50,950
models but it's doable much more

00:03:48,880 --> 00:03:54,340
interesting than static models that

00:03:50,950 --> 00:03:56,739
simply transform records through various

00:03:54,340 --> 00:03:57,819
steps our models that have state so if

00:03:56,739 --> 00:04:01,150
your front-end developer you're familiar

00:03:57,819 --> 00:04:04,269
with Redux I discovered Redux after

00:04:01,150 --> 00:04:05,829
developing cranial and it's all got all

00:04:04,269 --> 00:04:07,209
the same great ideas that we need to

00:04:05,829 --> 00:04:09,549
keep our state contained in one specific

00:04:07,209 --> 00:04:12,699
clear place that's separated this allows

00:04:09,549 --> 00:04:15,489
us to save our state for distributed

00:04:12,699 --> 00:04:17,109
systems for backup in recovery for point

00:04:15,489 --> 00:04:18,430
in time analysis lots of great things

00:04:17,109 --> 00:04:19,750
keep your state in one place whether

00:04:18,430 --> 00:04:24,430
using create a little or anything else

00:04:19,750 --> 00:04:26,410
so stateful model regular model has one

00:04:24,430 --> 00:04:27,580
method a stateful model has one more and

00:04:26,410 --> 00:04:29,229
your store stayed on it and you get a

00:04:27,580 --> 00:04:31,240
bunch of useful stuff for saving and

00:04:29,229 --> 00:04:32,620
loading States karena was actually

00:04:31,240 --> 00:04:35,919
developed around like a lot of machine

00:04:32,620 --> 00:04:37,539
learning is done on offline you take a

00:04:35,919 --> 00:04:38,979
bunch of data you train on it you

00:04:37,539 --> 00:04:40,030
produce a model you put that model into

00:04:38,979 --> 00:04:41,260
some kind of web service that makes

00:04:40,030 --> 00:04:43,030
predictions for weeks you collect more

00:04:41,260 --> 00:04:44,260
data then you train it again some weeks

00:04:43,030 --> 00:04:47,110
later or maybe it's better maybe it's

00:04:44,260 --> 00:04:48,610
where she uploaded cranial was designed

00:04:47,110 --> 00:04:49,360
thinking of that as just one way of

00:04:48,610 --> 00:04:52,030
doing

00:04:49,360 --> 00:04:53,199
machine learning but focused on online

00:04:52,030 --> 00:04:54,939
learning so that we are constantly

00:04:53,199 --> 00:04:56,080
training our model in production we're

00:04:54,939 --> 00:04:57,699
constantly learning whether that's one

00:04:56,080 --> 00:04:59,520
record at a time to hundreds of time

00:04:57,699 --> 00:05:01,960
retraining our model every two minutes

00:04:59,520 --> 00:05:03,550
cranials for online machine learning if

00:05:01,960 --> 00:05:05,080
using it for machine learning it's also

00:05:03,550 --> 00:05:08,020
got lots of other useful stuff listeners

00:05:05,080 --> 00:05:09,370
fetchers get data into your model if you

00:05:08,020 --> 00:05:11,439
need to scale up your training because

00:05:09,370 --> 00:05:13,150
you've got a huge data set need to train

00:05:11,439 --> 00:05:14,409
over millions records this chart shows

00:05:13,150 --> 00:05:17,080
you how to do it

00:05:14,409 --> 00:05:19,210
connectors are useful abstraction for

00:05:17,080 --> 00:05:20,379
putting things in byte streams a file as

00:05:19,210 --> 00:05:22,060
a byte stream you want to say things to

00:05:20,379 --> 00:05:23,139
files use the connector connectors and

00:05:22,060 --> 00:05:26,110
fetchers are a little different ones for

00:05:23,139 --> 00:05:27,789
data scientists ones for engineers we

00:05:26,110 --> 00:05:28,870
keep going at services that have other

00:05:27,789 --> 00:05:30,819
models in them can all talk to each

00:05:28,870 --> 00:05:32,110
other we have a messenger you use

00:05:30,819 --> 00:05:33,909
service discovery to help them find each

00:05:32,110 --> 00:05:35,979
other you can use a message broker if

00:05:33,909 --> 00:05:37,629
you want but you don't have to these

00:05:35,979 --> 00:05:38,830
things are all very similar but these

00:05:37,629 --> 00:05:40,300
slides will help you feel a little

00:05:38,830 --> 00:05:42,819
different messaging cues suck but they

00:05:40,300 --> 00:05:45,099
don't just use them correctly fetchers

00:05:42,819 --> 00:05:47,439
and listeners are all how you move

00:05:45,099 --> 00:05:48,390
data's around ETL is done to there's

00:05:47,439 --> 00:05:53,709
very fight that thank you

00:05:48,390 --> 00:05:53,709
[Applause]

00:05:56,700 --> 00:06:02,150
I'm gonna go with a vim Bond OS how many

00:05:59,610 --> 00:06:04,740
people here are familiar with Windows

00:06:02,150 --> 00:06:08,160
how many of you like developing on

00:06:04,740 --> 00:06:10,290
Windows yes thank you thank you

00:06:08,160 --> 00:06:12,120
I too like developing a witness how many

00:06:10,290 --> 00:06:16,050
people here are familiar with vim

00:06:12,120 --> 00:06:20,460
specifically it's a tool called named ve

00:06:16,050 --> 00:06:20,790
and V right so actually a good number of

00:06:20,460 --> 00:06:23,550
you

00:06:20,790 --> 00:06:27,090
how about virtual limb there you go

00:06:23,550 --> 00:06:29,100
that's a lot more vim sips standard with

00:06:27,090 --> 00:06:33,930
a standard with Python virtual limb

00:06:29,100 --> 00:06:39,690
doesn't Pippin also doesn't and I am I

00:06:33,930 --> 00:06:43,410
used to use virtual M on Linux in a in a

00:06:39,690 --> 00:06:45,870
VirtualBox and I had to be basically a

00:06:43,410 --> 00:06:48,330
Linux aside min to run my VirtualBox and

00:06:45,870 --> 00:06:50,430
then I had to map a whole bunch of stuff

00:06:48,330 --> 00:06:52,890
and I had to be networking guy oh and I

00:06:50,430 --> 00:06:55,380
had to secure Linux and I didn't really

00:06:52,890 --> 00:06:57,570
like doing that so after I destroyed my

00:06:55,380 --> 00:06:59,910
virtual box for the end of times I

00:06:57,570 --> 00:07:02,160
decided what if there I wonder if this

00:06:59,910 --> 00:07:03,510
way so Python works on Windows so if I

00:07:02,160 --> 00:07:05,700
could use something to manage my

00:07:03,510 --> 00:07:07,620
dependencies that ships with Python then

00:07:05,700 --> 00:07:08,880
it should probably also work on Windows

00:07:07,620 --> 00:07:10,500
so I give it a shot and oh my god it

00:07:08,880 --> 00:07:12,180
worked so here's the agenda pre-wet

00:07:10,500 --> 00:07:15,750
installing pycharm

00:07:12,180 --> 00:07:17,190
debugging let's go to prereqs I'm going

00:07:15,750 --> 00:07:19,440
to show you pycharm and how to debug and

00:07:17,190 --> 00:07:25,770
pie charts this talk won't even take

00:07:19,440 --> 00:07:29,730
five minutes it's amazing this is a

00:07:25,770 --> 00:07:32,610
command prompt it's windows so I can't

00:07:29,730 --> 00:07:38,250
zoom in I apologize they didn't say

00:07:32,610 --> 00:07:41,820
windows was good also when you get into

00:07:38,250 --> 00:07:44,820
compiling binaries go use Linux yeah I'm

00:07:41,820 --> 00:07:47,010
not saying Windows is good so first

00:07:44,820 --> 00:07:51,780
steps first we're gonna do this we're

00:07:47,010 --> 00:07:54,000
going to make a folder so then we're

00:07:51,780 --> 00:07:56,490
going to make a virtual environment and

00:07:54,000 --> 00:07:57,720
that we're going to move into it then

00:07:56,490 --> 00:08:00,270
we're going to make a virtual

00:07:57,720 --> 00:08:06,330
environment so python this is important

00:08:00,270 --> 00:08:08,460
python - m then bend so i said make me

00:08:06,330 --> 00:08:10,340
of m that was the first Bend and then I

00:08:08,460 --> 00:08:13,880
said name my vim vim

00:08:10,340 --> 00:08:15,889
because I don't really feel like oh I'm

00:08:13,880 --> 00:08:21,350
actually sort of deactivated because I'm

00:08:15,889 --> 00:08:25,780
in another BIM right now so through the

00:08:21,350 --> 00:08:25,780
magic of through the magic of television

00:08:28,810 --> 00:08:56,630
the Fate activate VIN script activate to

00:08:44,630 --> 00:08:59,170
beat me to any how it works okay so

00:08:56,630 --> 00:09:01,460
[Applause]

00:08:59,170 --> 00:09:04,430
we're just gonna go and say through the

00:09:01,460 --> 00:09:06,950
magic of television here is one of them

00:09:04,430 --> 00:09:09,140
that I already did we're gonna open this

00:09:06,950 --> 00:09:11,089
directory and PyCharm you're gonna

00:09:09,140 --> 00:09:12,620
notice that python has no idea what to

00:09:11,089 --> 00:09:14,570
do with it but it starts to figure stuff

00:09:12,620 --> 00:09:15,709
out because that's a part I'm as good at

00:09:14,570 --> 00:09:18,770
that's what that little bar and the

00:09:15,709 --> 00:09:20,540
coroner is doing and still figuring

00:09:18,770 --> 00:09:25,209
things out the only thing that I

00:09:20,540 --> 00:09:27,560
installed in here was well was Django I

00:09:25,209 --> 00:09:29,300
made it to the bottom of these steps but

00:09:27,560 --> 00:09:32,870
because I'm running out of time and I'm

00:09:29,300 --> 00:09:35,990
not going to type those in pycharm is

00:09:32,870 --> 00:09:38,650
still figuring things out through the

00:09:35,990 --> 00:09:38,650
magic of television

00:09:45,059 --> 00:09:48,379
through the magic of television

00:09:53,639 --> 00:10:00,999
hi times not gonna play nice with me if

00:09:58,889 --> 00:10:04,240
everything works the way it's supposed

00:10:00,999 --> 00:10:08,319
to work quickly then you will end up

00:10:04,240 --> 00:10:10,569
with Python connected to the directory

00:10:08,319 --> 00:10:12,779
where you started your project inside of

00:10:10,569 --> 00:10:16,329
them having installed Django and Python

00:10:12,779 --> 00:10:17,589
will automatically identify everything

00:10:16,329 --> 00:10:18,999
about your project the fact that it's

00:10:17,589 --> 00:10:23,589
Django and all you will have to do is

00:10:18,999 --> 00:10:25,660
take play at which point you will have

00:10:23,589 --> 00:10:28,180
an application oh and this is Tim's blog

00:10:25,660 --> 00:10:31,230
project it's called Peregrine and it's

00:10:28,180 --> 00:10:36,820
awesome you guys can all check it out

00:10:31,230 --> 00:10:36,820
[Applause]

00:10:40,440 --> 00:10:44,430
the most important decision that

00:10:42,360 --> 00:10:47,820
businesspeople make are not what

00:10:44,430 --> 00:10:49,709
decisions but who decisions this is Jim

00:10:47,820 --> 00:10:55,019
Collins the author of good to great is

00:10:49,709 --> 00:10:57,269
anyone here responsible for hiring are

00:10:55,019 --> 00:11:01,199
any of you confident about your hiring

00:10:57,269 --> 00:11:03,420
process got one back there Irene is one

00:11:01,199 --> 00:11:05,370
of the most difficult time-consuming and

00:11:03,420 --> 00:11:07,470
critically important responsibilities

00:11:05,370 --> 00:11:10,620
that I have the average hiring mistake

00:11:07,470 --> 00:11:14,100
costs a company 15 times that person's

00:11:10,620 --> 00:11:17,040
base salary miss hiring a 100k employee

00:11:14,100 --> 00:11:18,990
will cost you 1.5 million dollars on

00:11:17,040 --> 00:11:21,540
average according to management guru

00:11:18,990 --> 00:11:24,690
Peter Drucker and others 50% of all

00:11:21,540 --> 00:11:26,730
hiring decisions are mistakes executive

00:11:24,690 --> 00:11:29,610
discretionary time is overwhelmingly

00:11:26,730 --> 00:11:31,500
less than 5 to 10 hours per week with

00:11:29,610 --> 00:11:34,800
the rest of the time consumed by

00:11:31,500 --> 00:11:37,190
meetings reports one-on-ones etc when an

00:11:34,800 --> 00:11:39,630
urgent need for hiring comes along

00:11:37,190 --> 00:11:41,970
prioritizing the time needed is deeply

00:11:39,630 --> 00:11:44,430
and profoundly inconvenient changing

00:11:41,970 --> 00:11:46,740
priorities is hard so many managers will

00:11:44,430 --> 00:11:48,480
force fit their hiring activities into

00:11:46,740 --> 00:11:50,850
the small slices of time on their

00:11:48,480 --> 00:11:52,500
calendars hurried interviews result in

00:11:50,850 --> 00:11:54,529
decisions being made based on gut

00:11:52,500 --> 00:11:56,670
feelings and first impressions the

00:11:54,529 --> 00:11:59,010
structure of the typical interview

00:11:56,670 --> 00:12:00,959
process often discourages frank

00:11:59,010 --> 00:12:02,819
conversation and rarely leaves time

00:12:00,959 --> 00:12:05,459
enough for intelligent questions

00:12:02,819 --> 00:12:07,889
one of the basic failures in the hiring

00:12:05,459 --> 00:12:10,800
process is too much reliance on the

00:12:07,889 --> 00:12:12,690
resume what is a resume it is generally

00:12:10,800 --> 00:12:14,579
a record of a person's career with all

00:12:12,690 --> 00:12:17,130
the accomplishments embellished and all

00:12:14,579 --> 00:12:19,500
the failures removed if this sounds like

00:12:17,130 --> 00:12:22,529
your hiring process here's what you need

00:12:19,500 --> 00:12:25,560
to do make hiring your top priority

00:12:22,529 --> 00:12:27,480
dedicate no less than 50% of your time

00:12:25,560 --> 00:12:29,699
to hiring activities this means

00:12:27,480 --> 00:12:31,529
attending fewer meetings and delegating

00:12:29,699 --> 00:12:33,779
perhaps temporarily more of your

00:12:31,529 --> 00:12:36,870
responsibilities trust your team and

00:12:33,779 --> 00:12:39,449
rely on them define a thorough hiring

00:12:36,870 --> 00:12:41,339
process before you start hiring I

00:12:39,449 --> 00:12:43,949
recommend modeling your hiring process

00:12:41,339 --> 00:12:46,589
after the book who the a method for

00:12:43,949 --> 00:12:47,010
hiring so what does my hiring process

00:12:46,589 --> 00:12:49,110
look like

00:12:47,010 --> 00:12:51,689
first who am I looking to hire a

00:12:49,110 --> 00:12:52,259
candidate who is at least a 90 percent

00:12:51,689 --> 00:12:54,749
chance

00:12:52,259 --> 00:12:57,109
of achieving a set of outcomes that only

00:12:54,749 --> 00:13:00,629
the top 10% of candidates could achieve

00:12:57,109 --> 00:13:02,699
next I create a hiring blueprint this is

00:13:00,629 --> 00:13:04,829
called a scorecard in the who book that

00:13:02,699 --> 00:13:06,809
defines what would change in the

00:13:04,829 --> 00:13:09,319
organization if the right person was

00:13:06,809 --> 00:13:11,669
hired right now a list of outcomes

00:13:09,319 --> 00:13:14,369
exactly what must be accomplished

00:13:11,669 --> 00:13:16,410
ideally only achievable by the top 10%

00:13:14,369 --> 00:13:18,539
of possible candidates a list of

00:13:16,410 --> 00:13:20,399
competencies that are required to fit

00:13:18,539 --> 00:13:22,919
with the culture of the company and team

00:13:20,399 --> 00:13:24,749
while achieving those outcomes the

00:13:22,919 --> 00:13:26,609
blueprint is critical it forces you to

00:13:24,749 --> 00:13:28,379
be crystal clear about what you really

00:13:26,609 --> 00:13:30,359
want the person you're hiring to

00:13:28,379 --> 00:13:31,979
accomplish it also creates a consensus

00:13:30,359 --> 00:13:33,479
on the team about the expectations for

00:13:31,979 --> 00:13:34,799
the candidate and you can share it with

00:13:33,479 --> 00:13:37,829
your candidate to properly set

00:13:34,799 --> 00:13:40,289
expectations for the role next create a

00:13:37,829 --> 00:13:42,149
pitch for the position this is more than

00:13:40,289 --> 00:13:44,009
just a job description most of the

00:13:42,149 --> 00:13:45,660
candidates we want to hire already have

00:13:44,009 --> 00:13:47,939
jobs and they're not actively looking

00:13:45,660 --> 00:13:49,829
why should one of those candidates leave

00:13:47,939 --> 00:13:52,350
their job and come work on our team

00:13:49,829 --> 00:13:54,449
a successful hiring pitch will go beyond

00:13:52,350 --> 00:13:56,489
just a list of responsibilities by

00:13:54,449 --> 00:13:58,350
including the following components the

00:13:56,489 --> 00:13:59,939
team company mission a purpose that

00:13:58,350 --> 00:14:02,519
candidates should really get excited

00:13:59,939 --> 00:14:05,069
about minimum requirements this conveys

00:14:02,519 --> 00:14:07,259
that we have standards responsibilities

00:14:05,069 --> 00:14:10,230
what will I actually be doing day to day

00:14:07,259 --> 00:14:11,129
highly desired skills these are things

00:14:10,230 --> 00:14:13,649
that we really need help with

00:14:11,129 --> 00:14:16,169
compensation salary range of possible

00:14:13,649 --> 00:14:18,660
PTO holidays and other relevant benefits

00:14:16,169 --> 00:14:21,749
and the interview process if they apply

00:14:18,660 --> 00:14:24,509
what's the expected commitment about us

00:14:21,749 --> 00:14:27,569
relevant fun facts about our company and

00:14:24,509 --> 00:14:29,819
team my team prefers to write code that

00:14:27,569 --> 00:14:31,739
is aesthetic readable and solves

00:14:29,819 --> 00:14:34,499
problems and high-pressure interviews

00:14:31,739 --> 00:14:36,239
are not a good indicator of that a work

00:14:34,499 --> 00:14:38,730
sample project is a simplified version

00:14:36,239 --> 00:14:41,339
of a problem that we've had to solve

00:14:38,730 --> 00:14:43,709
create a small task or project that

00:14:41,339 --> 00:14:45,600
accurately represents the role and can

00:14:43,709 --> 00:14:47,789
be completed in less than one hour with

00:14:45,600 --> 00:14:49,889
the following criteria timed because

00:14:47,789 --> 00:14:51,449
untimed projects ask too much of

00:14:49,889 --> 00:14:52,819
candidates and biased towards candidates

00:14:51,449 --> 00:14:55,139
with fewer outside commitments

00:14:52,819 --> 00:14:56,999
representative it aligns with what their

00:14:55,139 --> 00:14:59,189
day-to-day work will look like unique

00:14:56,999 --> 00:15:01,889
they've never seen this problem exactly

00:14:59,189 --> 00:15:03,959
before engaging the problem can be split

00:15:01,889 --> 00:15:05,760
into phases that build upon each other

00:15:03,959 --> 00:15:08,250
in summary

00:15:05,760 --> 00:15:11,310
create your hiring blueprint to create

00:15:08,250 --> 00:15:14,250
the pitch three create a small and large

00:15:11,310 --> 00:15:16,079
work sample for every candidate is

00:15:14,250 --> 00:15:18,750
required to complete the same initial

00:15:16,079 --> 00:15:21,209
work sample five score all work samples

00:15:18,750 --> 00:15:23,100
into the same rubric six scheduled phone

00:15:21,209 --> 00:15:25,470
conversations with the top 10% of

00:15:23,100 --> 00:15:26,760
candidates seven scheduled the larger

00:15:25,470 --> 00:15:29,399
work sample with enters interested

00:15:26,760 --> 00:15:31,829
candidates eight score all using the

00:15:29,399 --> 00:15:33,930
same rubric nine scheduled on-site

00:15:31,829 --> 00:15:36,240
face-to-face interviews to evaluate for

00:15:33,930 --> 00:15:37,949
cultural fit and ten if you find the

00:15:36,240 --> 00:15:39,540
candidate who has at least a 90% chance

00:15:37,949 --> 00:15:41,339
of achieving the set of outcomes you

00:15:39,540 --> 00:15:42,930
define do everything you can to hire

00:15:41,339 --> 00:15:44,460
that person you have any questions or

00:15:42,930 --> 00:15:49,909
comments feel free to talk to me

00:15:44,460 --> 00:15:49,909
[Applause]

00:15:52,640 --> 00:15:56,660
great your friends I'm gonna keep going

00:15:54,980 --> 00:15:57,920
so I'm here to talk about elephants and

00:15:56,660 --> 00:15:59,150
snakes but in order to talk about

00:15:57,920 --> 00:16:00,920
elephants and snakes I have to talk

00:15:59,150 --> 00:16:02,360
about birds specifically the big blue

00:16:00,920 --> 00:16:04,760
bird that encourages myself and many

00:16:02,360 --> 00:16:06,400
others to put that at fellini on our

00:16:04,760 --> 00:16:08,480
slides and business cards and websites

00:16:06,400 --> 00:16:10,970
I'm talking about Twitter of course

00:16:08,480 --> 00:16:13,430
Twitter is great it's where we find work

00:16:10,970 --> 00:16:17,920
or chat with our peers or share our

00:16:13,430 --> 00:16:20,060
favorite activities or even find romance

00:16:17,920 --> 00:16:22,130
Twitter is also awful

00:16:20,060 --> 00:16:23,990
it's the place where the most misguided

00:16:22,130 --> 00:16:25,730
amongst us feel free to express every

00:16:23,990 --> 00:16:28,010
negative opinion where we are constantly

00:16:25,730 --> 00:16:30,170
inundated with reminders of violence or

00:16:28,010 --> 00:16:31,490
targeted with violence ourselves where

00:16:30,170 --> 00:16:33,680
it seems like the political bombs are

00:16:31,490 --> 00:16:35,420
always going off and where it feels like

00:16:33,680 --> 00:16:38,060
we have to wade through toxic waste just

00:16:35,420 --> 00:16:40,340
to get to the parts that we like this is

00:16:38,060 --> 00:16:42,230
not to blame most of the people who work

00:16:40,340 --> 00:16:43,490
at Twitter I know many Twitter folks I'm

00:16:42,230 --> 00:16:44,840
sure people in this room know but many

00:16:43,490 --> 00:16:47,060
Twitter folks some of you in this room

00:16:44,840 --> 00:16:48,320
might be Twitter folks and I firmly

00:16:47,060 --> 00:16:50,060
believe that most people at Twitter

00:16:48,320 --> 00:16:52,490
don't wake up in the morning and go I

00:16:50,060 --> 00:16:55,280
can't wait for another day providing an

00:16:52,490 --> 00:16:56,960
outlet for white supremacists but

00:16:55,280 --> 00:16:58,430
twitter has misaligned incentives than

00:16:56,960 --> 00:17:00,950
most of its user base because it is a

00:16:58,430 --> 00:17:02,630
business and a bit and an ad business to

00:17:00,950 --> 00:17:05,180
boot and those businesses need to make

00:17:02,630 --> 00:17:06,890
money there is an alternative however

00:17:05,180 --> 00:17:08,110
and that alternative is the Fed averse

00:17:06,890 --> 00:17:10,880
and its most popular implementation

00:17:08,110 --> 00:17:12,589
mastodons macedon is an open source

00:17:10,880 --> 00:17:15,140
micro blogging service that looks very

00:17:12,589 --> 00:17:17,240
much like TweetDeck circa 2012 and it's

00:17:15,140 --> 00:17:19,699
based on a w3c standard called activity

00:17:17,240 --> 00:17:21,890
pub because it's based on an open

00:17:19,699 --> 00:17:23,810
federated standard anyone can write

00:17:21,890 --> 00:17:24,980
clients and servers that talk to all the

00:17:23,810 --> 00:17:27,829
other clients and servers on the

00:17:24,980 --> 00:17:29,660
federated Network what this means is

00:17:27,829 --> 00:17:31,010
instead of having one big watering hole

00:17:29,660 --> 00:17:32,600
where the rules are opaque and you're

00:17:31,010 --> 00:17:34,700
never quite sure who you're talking to

00:17:32,600 --> 00:17:35,960
you now have a field of connected

00:17:34,700 --> 00:17:37,790
communities that can all talk to each

00:17:35,960 --> 00:17:39,140
other and where you most likely know the

00:17:37,790 --> 00:17:41,240
rules of the smaller community you're

00:17:39,140 --> 00:17:44,000
part of and probably know the admins by

00:17:41,240 --> 00:17:45,410
name that's part of the power of macedon

00:17:44,000 --> 00:17:47,060
that every community can define its own

00:17:45,410 --> 00:17:48,920
codes of behavior and still connect to

00:17:47,060 --> 00:17:50,510
the rest of the world the admins of each

00:17:48,920 --> 00:17:52,220
server can respond to complaints and

00:17:50,510 --> 00:17:55,070
enforce the kinds of communities we want

00:17:52,220 --> 00:17:56,900
to be part of there are over 1.6 million

00:17:55,070 --> 00:17:58,250
users in the federated Network and

00:17:56,900 --> 00:18:01,250
they're all part of smaller communities

00:17:58,250 --> 00:18:02,780
working together it's kind of hard to

00:18:01,250 --> 00:18:05,000
overstate how much power there is for

00:18:02,780 --> 00:18:06,240
creating communities in Macedon admins

00:18:05,000 --> 00:18:08,850
can set code of codes of

00:18:06,240 --> 00:18:10,710
conduct upload custom emoji mute or

00:18:08,850 --> 00:18:12,510
block users and even mute or blocked bad

00:18:10,710 --> 00:18:13,770
actor servers if the community decides

00:18:12,510 --> 00:18:16,710
they're taking more away from the

00:18:13,770 --> 00:18:18,030
conversation than they're adding but

00:18:16,710 --> 00:18:19,679
this is a Python comer specifically a

00:18:18,030 --> 00:18:21,480
django conference for developers

00:18:19,679 --> 00:18:22,950
especially Python developers there's a

00:18:21,480 --> 00:18:24,720
full set of clients and libraries to

00:18:22,950 --> 00:18:26,640
build any kind of experience you want on

00:18:24,720 --> 00:18:28,710
top of activity pub and the Macedon

00:18:26,640 --> 00:18:30,270
software no arbitrary limits from

00:18:28,710 --> 00:18:32,280
Twitter no ever shifting usage

00:18:30,270 --> 00:18:35,940
guidelines just a public API that you

00:18:32,280 --> 00:18:37,650
can build against we can have all the

00:18:35,940 --> 00:18:39,390
things we like from the community we've

00:18:37,650 --> 00:18:40,860
built on Twitter without having to feel

00:18:39,390 --> 00:18:43,140
like we're swimming in that toxic waste

00:18:40,860 --> 00:18:45,270
dump we will have to accept a less

00:18:43,140 --> 00:18:46,890
polished experience for now and the fact

00:18:45,270 --> 00:18:49,110
that not everyone we want to follow us

00:18:46,890 --> 00:18:50,700
on Macedon yet but every friend we

00:18:49,110 --> 00:18:52,260
convince to try something new makes the

00:18:50,700 --> 00:18:53,910
network stronger and helps us take back

00:18:52,260 --> 00:18:58,140
control over the communities we care

00:18:53,910 --> 00:18:59,730
about so I hope if at least it convinced

00:18:58,140 --> 00:19:01,740
you to give Macedon a try I would love

00:18:59,730 --> 00:19:02,790
for you to come up and talk to me more

00:19:01,740 --> 00:19:03,300
about this throughout the rest of the

00:19:02,790 --> 00:19:04,860
conference

00:19:03,300 --> 00:19:06,630
maybe talk about the servers that I'm

00:19:04,860 --> 00:19:09,920
currently admitting and I hope to see

00:19:06,630 --> 00:19:13,939
you on Mastodon thank you so much

00:19:09,920 --> 00:19:13,939
[Applause]

00:19:17,010 --> 00:19:22,800
all right so my name is Kaz and that's

00:19:20,580 --> 00:19:24,030
my dog ADA that's her Instagram if you

00:19:22,800 --> 00:19:27,750
want to get ahold of me on social media

00:19:24,030 --> 00:19:29,790
that's kind of the only way to really so

00:19:27,750 --> 00:19:31,530
I'm a tech lead at Rover what's that

00:19:29,790 --> 00:19:33,720
mean it means I don't write quite as

00:19:31,530 --> 00:19:35,340
much code as I used to write but I write

00:19:33,720 --> 00:19:37,020
a lot more plans and a lot more tickets

00:19:35,340 --> 00:19:40,230
so I'm gonna talk to you today about

00:19:37,020 --> 00:19:42,060
that I'm gonna start with one of my

00:19:40,230 --> 00:19:44,340
favorite quotes from a great American

00:19:42,060 --> 00:19:46,280
philosopher which is that everyone has a

00:19:44,340 --> 00:19:48,780
plan until they get punched in the face

00:19:46,280 --> 00:19:52,160
so pretty much all my plans start with

00:19:48,780 --> 00:19:54,060
step one get punched in the mouth

00:19:52,160 --> 00:19:56,460
preferably before you start shipping

00:19:54,060 --> 00:19:59,430
code so really one of the best reasons

00:19:56,460 --> 00:20:00,930
to write a plan is that it lets you kind

00:19:59,430 --> 00:20:02,760
of explore what you're gonna do before

00:20:00,930 --> 00:20:04,140
you go do it and maybe find some of

00:20:02,760 --> 00:20:07,200
those places where you might get punched

00:20:04,140 --> 00:20:09,090
in the mouth before they happen so what

00:20:07,200 --> 00:20:11,100
are we putting our plans are over we put

00:20:09,090 --> 00:20:13,260
first of all like what we're doing like

00:20:11,100 --> 00:20:15,750
a recent plan that we did was we're

00:20:13,260 --> 00:20:17,580
gonna add support for adding cats so

00:20:15,750 --> 00:20:19,110
what we're gonna do we're going to make

00:20:17,580 --> 00:20:21,510
it so you can add a cat on Rover as

00:20:19,110 --> 00:20:23,820
easily as you can add a dog and then why

00:20:21,510 --> 00:20:25,370
are we doing it in this case cuz there's

00:20:23,820 --> 00:20:27,660
a lot of cat owners out there and

00:20:25,370 --> 00:20:29,460
previously it was like to make a cat you

00:20:27,660 --> 00:20:32,670
had to make a dog whose breed was cat

00:20:29,460 --> 00:20:35,040
and that's just as a cat owner no no so

00:20:32,670 --> 00:20:36,360
then the meat of the plan is how we're

00:20:35,040 --> 00:20:38,700
gonna do it we have kind of a checklist

00:20:36,360 --> 00:20:39,960
of things so kind of an overview of what

00:20:38,700 --> 00:20:41,790
we're gonna do to the code base not

00:20:39,960 --> 00:20:43,290
necessarily like line for line here's

00:20:41,790 --> 00:20:44,610
what we're gonna do but maybe like okay

00:20:43,290 --> 00:20:46,380
we're gonna go in this app do you kind

00:20:44,610 --> 00:20:48,060
of these things here and go in this

00:20:46,380 --> 00:20:50,700
other app do this take inspiration from

00:20:48,060 --> 00:20:53,010
XYZ then a plan of how we're gonna test

00:20:50,700 --> 00:20:55,200
it how we're gonna monitor it how to

00:20:53,010 --> 00:20:56,730
document it and then any kind of data

00:20:55,200 --> 00:20:58,740
storage requirements that we might have

00:20:56,730 --> 00:21:01,410
are we adding tables as their you know

00:20:58,740 --> 00:21:03,570
user security implications to that do we

00:21:01,410 --> 00:21:06,660
have to follow gdpr for these tables etc

00:21:03,570 --> 00:21:09,630
and then the most important part of a

00:21:06,660 --> 00:21:11,460
plan is getting it reviewed we have a

00:21:09,630 --> 00:21:13,200
pretty large organization so we kind of

00:21:11,460 --> 00:21:14,940
have to be circumspect about who we

00:21:13,200 --> 00:21:17,400
asked to review our plans to not just

00:21:14,940 --> 00:21:18,660
ask too much time of them so if I'm

00:21:17,400 --> 00:21:19,710
making a lot of front-end changes in my

00:21:18,660 --> 00:21:21,210
plan I'm gonna have a front-end engineer

00:21:19,710 --> 00:21:22,980
look at it if I'm gonna touch the

00:21:21,210 --> 00:21:24,840
database have a database engineer look

00:21:22,980 --> 00:21:26,040
on it on a smaller team you might just

00:21:24,840 --> 00:21:27,930
have everybody look at it so they kind

00:21:26,040 --> 00:21:29,430
of know what you're doing and on a team

00:21:27,930 --> 00:21:30,460
of one like it's still a good idea to

00:21:29,430 --> 00:21:31,840
write a plan and then

00:21:30,460 --> 00:21:33,070
sleep on it and like look at it again

00:21:31,840 --> 00:21:35,770
the next day see if this still makes

00:21:33,070 --> 00:21:38,260
sense and you know be ready to make

00:21:35,770 --> 00:21:39,190
changes like a plans if you're gonna

00:21:38,260 --> 00:21:41,440
have it reviewed it's gonna be a lot

00:21:39,190 --> 00:21:43,060
like a code review don't take things

00:21:41,440 --> 00:21:45,580
personally if people are like hey do

00:21:43,060 --> 00:21:48,100
this a different way it's generally from

00:21:45,580 --> 00:21:49,960
their own past mistakes and if you're

00:21:48,100 --> 00:21:54,130
reviewing a plan be constructive just

00:21:49,960 --> 00:21:57,070
like code reviews more fun part for me

00:21:54,130 --> 00:21:58,840
is writing tickets so tickets can be as

00:21:57,070 --> 00:22:01,660
simple as just a you know to-do list

00:21:58,840 --> 00:22:03,040
that you have and here's my thoughts on

00:22:01,660 --> 00:22:05,200
tickets they're a way to encapsulate

00:22:03,040 --> 00:22:07,510
work there's many different ways to

00:22:05,200 --> 00:22:09,130
write them my way is one of ways to

00:22:07,510 --> 00:22:11,500
write them it's probably definitely not

00:22:09,130 --> 00:22:13,300
the best way to do so however you know

00:22:11,500 --> 00:22:15,790
it's been used without catastrophic

00:22:13,300 --> 00:22:18,490
results and ideally tickets make work

00:22:15,790 --> 00:22:21,010
more efficient so what goes into a good

00:22:18,490 --> 00:22:23,500
ticket well a ticket should describe a

00:22:21,010 --> 00:22:25,030
reasonably sized a bit of work it could

00:22:23,500 --> 00:22:26,530
be anything from a few minutes to a few

00:22:25,030 --> 00:22:28,210
days worth of work but if it gets any

00:22:26,530 --> 00:22:30,310
bigger than that like maybe it should be

00:22:28,210 --> 00:22:32,710
smaller break it into more discrete

00:22:30,310 --> 00:22:35,140
steps and a ticket should contain at

00:22:32,710 --> 00:22:37,600
minimum a title and a definition of done

00:22:35,140 --> 00:22:39,280
and a ticket could also contain some

00:22:37,600 --> 00:22:41,350
implementation notes if there's more

00:22:39,280 --> 00:22:43,480
details than can fit in a title and a

00:22:41,350 --> 00:22:46,450
definition of done it's also known as

00:22:43,480 --> 00:22:48,430
the description so what's a title a

00:22:46,450 --> 00:22:50,290
title sums up a ticket in a sentence or

00:22:48,430 --> 00:22:52,150
less and it should be written like a

00:22:50,290 --> 00:22:54,370
good commit message it should be short

00:22:52,150 --> 00:22:56,530
should be descriptive and it should be

00:22:54,370 --> 00:22:58,000
completely devoid of unnecessary detail

00:22:56,530 --> 00:23:00,460
that's what everything else in the

00:22:58,000 --> 00:23:01,960
tickets for it should describe the work

00:23:00,460 --> 00:23:04,030
at a high enough level that anyone who

00:23:01,960 --> 00:23:08,170
is read the underlying plan can explain

00:23:04,030 --> 00:23:10,240
why this works being done so what's the

00:23:08,170 --> 00:23:12,400
definition of done its to me the most

00:23:10,240 --> 00:23:14,110
important part of a ticket it doesn't

00:23:12,400 --> 00:23:16,960
describe what needs to be done

00:23:14,110 --> 00:23:18,520
it describes the end state once this has

00:23:16,960 --> 00:23:21,370
been done once this work has been done

00:23:18,520 --> 00:23:23,770
so instead of describing you know a path

00:23:21,370 --> 00:23:26,050
to this state by describing an end state

00:23:23,770 --> 00:23:28,360
the focus is placed on the outcome not

00:23:26,050 --> 00:23:30,160
on the process that removes a lot of

00:23:28,360 --> 00:23:32,830
ambiguity you can say is this done while

00:23:30,160 --> 00:23:34,150
is this true and it also lets the person

00:23:32,830 --> 00:23:35,590
who's actually doing the ticket you know

00:23:34,150 --> 00:23:39,070
have some amount of flexibility in

00:23:35,590 --> 00:23:40,720
creativity and then finally if a tickets

00:23:39,070 --> 00:23:42,400
really complex or their references and

00:23:40,720 --> 00:23:43,690
assets that Allah sister be needed in

00:23:42,400 --> 00:23:44,290
the implementation if there's details

00:23:43,690 --> 00:23:46,090
there's link

00:23:44,290 --> 00:23:48,580
there's files that should be added as

00:23:46,090 --> 00:23:50,800
notes there you know kind of the most

00:23:48,580 --> 00:23:52,060
freeform part of the ticket and really a

00:23:50,800 --> 00:23:53,770
good sign of when you should add notes

00:23:52,060 --> 00:23:54,850
is if the definition of done starts

00:23:53,770 --> 00:23:56,590
growing beyond a sentence or two

00:23:54,850 --> 00:23:59,050
generally a sign that you should

00:23:56,590 --> 00:24:01,420
probably write some notes and that's all

00:23:59,050 --> 00:24:05,230
I got here's some pictures of my dog for

00:24:01,420 --> 00:24:07,470
listening to me rant thank you very much

00:24:05,230 --> 00:24:07,470
guys

00:24:11,280 --> 00:24:16,470
so hi my name is Andrew Pinkham I am the

00:24:14,880 --> 00:24:17,940
founder of Jambo and software which is a

00:24:16,470 --> 00:24:21,120
consulting company that spends a whole

00:24:17,940 --> 00:24:22,950
lot time building in Django and a proud

00:24:21,120 --> 00:24:24,810
Django con sponsor

00:24:22,950 --> 00:24:28,530
we're a consulting company we build

00:24:24,810 --> 00:24:31,800
things as well as consult we built this

00:24:28,530 --> 00:24:33,270
thing called search cycle which is a an

00:24:31,800 --> 00:24:34,770
automated system for provisioning

00:24:33,270 --> 00:24:36,750
installing and checking security

00:24:34,770 --> 00:24:39,300
certificates in the cloud so if you're

00:24:36,750 --> 00:24:40,050
interested in automated security on AWS

00:24:39,300 --> 00:24:42,750
or a sure

00:24:40,050 --> 00:24:44,400
please come chat with me in the

00:24:42,750 --> 00:24:46,350
community though I am probably best

00:24:44,400 --> 00:24:49,770
known for my book Django and leash which

00:24:46,350 --> 00:24:52,080
was published by Pearson in 2015 and

00:24:49,770 --> 00:24:53,670
which we are doing a video series so

00:24:52,080 --> 00:24:55,740
that should be the first video series

00:24:53,670 --> 00:24:57,930
should be coming out November and

00:24:55,740 --> 00:24:59,790
beginning of December hopefully on

00:24:57,930 --> 00:25:01,980
safari books online but I'm actually

00:24:59,790 --> 00:25:05,670
here today to talk to you about coverage

00:25:01,980 --> 00:25:08,610
for Django templates or so I had sort of

00:25:05,670 --> 00:25:10,350
initially planned so when I told someone

00:25:08,610 --> 00:25:11,550
this morning that I was going to be

00:25:10,350 --> 00:25:12,990
talking about coverage for Django

00:25:11,550 --> 00:25:15,330
templates and they said that sounds

00:25:12,990 --> 00:25:18,420
horribly horribly boring you just talked

00:25:15,330 --> 00:25:21,120
about the hamster on your shirt um

00:25:18,420 --> 00:25:24,900
here's a problem there isn't a hamster

00:25:21,120 --> 00:25:25,590
on my shirt this is impossible that's

00:25:24,900 --> 00:25:29,850
right

00:25:25,590 --> 00:25:31,380
Thank You person in the crowd so this is

00:25:29,850 --> 00:25:34,230
this is a bear from the bravest warriors

00:25:31,380 --> 00:25:36,870
YouTube show and impossibear comes with

00:25:34,230 --> 00:25:39,330
a gas-powered stick which is what it

00:25:36,870 --> 00:25:42,660
says on my shirt it's great because it's

00:25:39,330 --> 00:25:45,180
a stick that never runs out of gas and

00:25:42,660 --> 00:25:47,970
in like impossibear I would like to give

00:25:45,180 --> 00:25:49,560
you a gas powered stick so I'm going to

00:25:47,970 --> 00:25:53,820
tell you about coverage for Django

00:25:49,560 --> 00:25:54,750
templates so this is this is fairly

00:25:53,820 --> 00:25:56,220
straightforward right when you are

00:25:54,750 --> 00:25:59,100
testing with Django you are either going

00:25:56,220 --> 00:26:01,380
to be using the Django unit test space -

00:25:59,100 --> 00:26:03,780
Django run system maybe you've gone nuts

00:26:01,380 --> 00:26:05,100
and you've brought in PI tests with PI

00:26:03,780 --> 00:26:08,550
tests Django which is actually super

00:26:05,100 --> 00:26:10,860
cool um and while you are testing your

00:26:08,550 --> 00:26:13,130
your Python you might bring in coverage

00:26:10,860 --> 00:26:17,960
written by

00:26:13,130 --> 00:26:19,160
I'm going to suddenly thank you but so

00:26:17,960 --> 00:26:21,560
that's great for your Python but how do

00:26:19,160 --> 00:26:23,270
you go ahead and test your Django

00:26:21,560 --> 00:26:24,920
templates well lo and behold Ned has

00:26:23,270 --> 00:26:26,540
also gone ahead and written something

00:26:24,920 --> 00:26:29,000
called the Django coverage plugin and

00:26:26,540 --> 00:26:31,310
you can just pip install it and then add

00:26:29,000 --> 00:26:33,980
it to plugins and you're off to the

00:26:31,310 --> 00:26:35,660
races so lo and behold this is actual

00:26:33,980 --> 00:26:36,890
output from a test you can see that it

00:26:35,660 --> 00:26:38,960
goes through and it runs the test and

00:26:36,890 --> 00:26:41,390
then in the coverage output you can see

00:26:38,960 --> 00:26:43,340
that it is included not only Python but

00:26:41,390 --> 00:26:45,620
it's also included the HTML templates

00:26:43,340 --> 00:26:47,780
and you can see that I have missed a few

00:26:45,620 --> 00:26:50,450
and this is the cool thing here is that

00:26:47,780 --> 00:26:52,910
it's useful not only for testing the

00:26:50,450 --> 00:26:55,010
conditions and branches in your template

00:26:52,910 --> 00:26:57,410
logic it's also useful if you were doing

00:26:55,010 --> 00:26:59,690
any sort of integration testing so here

00:26:57,410 --> 00:27:02,300
I've actually pulled in I'm writing

00:26:59,690 --> 00:27:05,180
templates for Django registration but I

00:27:02,300 --> 00:27:08,090
have failed to test some of the the

00:27:05,180 --> 00:27:10,670
integration behavior on my website so

00:27:08,090 --> 00:27:12,800
again helpful not only for your own

00:27:10,670 --> 00:27:14,840
template code but also for indirect

00:27:12,800 --> 00:27:17,930
information about the integration with

00:27:14,840 --> 00:27:19,610
third-party tools part of the reason I'm

00:27:17,930 --> 00:27:22,070
bringing this up is because I'm actually

00:27:19,610 --> 00:27:24,500
the newest Co maintainer on the project

00:27:22,070 --> 00:27:27,050
with Ned and Pam so I'm going to be

00:27:24,500 --> 00:27:29,660
interested in improving documentation

00:27:27,050 --> 00:27:31,280
logging and use so on top of trying to

00:27:29,660 --> 00:27:33,830
make it so that you have the ability to

00:27:31,280 --> 00:27:37,670
test your templates I am interested in

00:27:33,830 --> 00:27:39,110
hearing what you how have you sort of

00:27:37,670 --> 00:27:41,570
what is your experience with this if

00:27:39,110 --> 00:27:43,360
you're new to this I would like to try

00:27:41,570 --> 00:27:46,070
and help you get started with the the

00:27:43,360 --> 00:27:47,600
coverage template plugin and if you are

00:27:46,070 --> 00:27:50,390
already using this I would like to hear

00:27:47,600 --> 00:27:50,990
about your experience so thank you very

00:27:50,390 --> 00:27:53,400
much

00:27:50,990 --> 00:27:59,049
I hope that was informative

00:27:53,400 --> 00:27:59,049
[Applause]

00:28:01,980 --> 00:28:06,539
thank you hi yes my name is Mary era and

00:28:04,830 --> 00:28:08,730
you can follow me on Twitter I am one of

00:28:06,539 --> 00:28:11,299
the Python core developers one of my

00:28:08,730 --> 00:28:14,460
favorite favorite features of Python is

00:28:11,299 --> 00:28:17,130
called f strings and you're probably

00:28:14,460 --> 00:28:19,710
wondering what for some of you who

00:28:17,130 --> 00:28:22,169
haven't upgraded to the relay newer

00:28:19,710 --> 00:28:25,080
Python version still using Python 2/7

00:28:22,169 --> 00:28:28,289
you're wondering what are f strings it's

00:28:25,080 --> 00:28:31,789
the new way to format strings and you

00:28:28,289 --> 00:28:35,010
can do this if you have Python 3 6 and

00:28:31,789 --> 00:28:37,200
how do you do it so remember how you use

00:28:35,010 --> 00:28:42,210
to format by format strings like this

00:28:37,200 --> 00:28:44,639
with something don't do this don't ever

00:28:42,210 --> 00:28:46,080
do this don't make me see this kind of

00:28:44,639 --> 00:28:49,169
code when you make pull requests to

00:28:46,080 --> 00:28:50,760
Python don't there are and if there is a

00:28:49,169 --> 00:28:53,610
different way to format strings with

00:28:50,760 --> 00:28:57,659
string format write using curly braces

00:28:53,610 --> 00:29:00,389
passing in variables in there f strings

00:28:57,659 --> 00:29:03,330
works very similar to that basically you

00:29:00,389 --> 00:29:06,450
cut off the dot format in the back there

00:29:03,330 --> 00:29:09,240
and just put an F in front that's that's

00:29:06,450 --> 00:29:11,429
it that's enough strings and let's learn

00:29:09,240 --> 00:29:13,649
about some more terminologies of F

00:29:11,429 --> 00:29:15,919
strings so things inside the curly

00:29:13,649 --> 00:29:19,980
braces there those are called

00:29:15,919 --> 00:29:23,480
expressions and things outside of the

00:29:19,980 --> 00:29:27,809
curly braces are called the literal and

00:29:23,480 --> 00:29:30,539
you can definitely use capital F in an

00:29:27,809 --> 00:29:34,260
AB string if you're just feeling excited

00:29:30,539 --> 00:29:37,200
about it like yes you can put capital F

00:29:34,260 --> 00:29:39,720
it works and you can use it with single

00:29:37,200 --> 00:29:44,190
quote double quote um double triple

00:29:39,720 --> 00:29:48,149
quotes triple single quotes all of this

00:29:44,190 --> 00:29:52,289
works whichever you like you can combine

00:29:48,149 --> 00:29:55,710
it with draw strings into row F strings

00:29:52,289 --> 00:29:59,039
and you can do it like F and R or F that

00:29:55,710 --> 00:30:04,230
works but you cannot combine it with

00:29:59,039 --> 00:30:06,700
unicode strings so you cannot have U and

00:30:04,230 --> 00:30:10,060
F or the other way around

00:30:06,700 --> 00:30:11,200
not FB or the other way around that

00:30:10,060 --> 00:30:14,890
doesn't work

00:30:11,200 --> 00:30:17,440
you'll get syntax error you can call

00:30:14,890 --> 00:30:21,400
functions inside the expression part

00:30:17,440 --> 00:30:24,550
passing parameters like that you can use

00:30:21,400 --> 00:30:27,280
format specifiers so here is an example

00:30:24,550 --> 00:30:33,760
of formatting date/time object inside

00:30:27,280 --> 00:30:35,890
the expression of f strings so use it it

00:30:33,760 --> 00:30:37,170
is actually faster than string format

00:30:35,890 --> 00:30:40,660
oops

00:30:37,170 --> 00:30:42,940
you can get it if you have Python 3 6 if

00:30:40,660 --> 00:30:46,570
you use Python 3 7 that's great

00:30:42,940 --> 00:30:50,740
3/8 is due to out soon

00:30:46,570 --> 00:30:55,630
January alpha 3 8 0 alpha 1 will come

00:30:50,740 --> 00:30:57,790
out January yes and you can get this for

00:30:55,630 --> 00:31:03,010
free free of charge you don't have to

00:30:57,790 --> 00:31:05,860
pay anything go to python.org if you are

00:31:03,010 --> 00:31:08,500
not using Windows or Mac maybe you want

00:31:05,860 --> 00:31:11,320
to build it from source or if it doesn't

00:31:08,500 --> 00:31:14,140
come from in your operating system maybe

00:31:11,320 --> 00:31:16,990
you should just consider changing a

00:31:14,140 --> 00:31:21,490
different operating systems like one of

00:31:16,990 --> 00:31:22,750
these all of this works so if you really

00:31:21,490 --> 00:31:24,700
really want to know more if you're

00:31:22,750 --> 00:31:27,610
excited about this I actually gave a

00:31:24,700 --> 00:31:29,800
really longer talk about L strings yes

00:31:27,610 --> 00:31:33,130
it was possible I gave it a talk at

00:31:29,800 --> 00:31:35,380
PyCon Canada last year all about pep for

00:31:33,130 --> 00:31:40,000
98 that's the pep that proposes and

00:31:35,380 --> 00:31:42,580
implements F strings yeah and I have

00:31:40,000 --> 00:31:45,370
lots of stickers use it proudly put it

00:31:42,580 --> 00:31:50,340
on your laptop I still have a little ash

00:31:45,370 --> 00:31:53,800
left that's all please use a strings um

00:31:50,340 --> 00:31:56,490
while you're going to Python dork and

00:31:53,800 --> 00:31:59,500
downloading the new version of Python

00:31:56,490 --> 00:32:02,530
may I ask you all to please do fill in

00:31:59,500 --> 00:32:05,620
this Python developers survey to help

00:32:02,530 --> 00:32:08,890
the PSF Python Software Foundation who

00:32:05,620 --> 00:32:11,860
helps the community who helps run Python

00:32:08,890 --> 00:32:15,900
infrastructure help fill in this survey

00:32:11,860 --> 00:32:15,900
and yeah thank you

00:32:17,320 --> 00:32:24,329
Thank You Marietta

00:32:18,990 --> 00:32:24,329

YouTube URL: https://www.youtube.com/watch?v=L42AX0HrRFg


