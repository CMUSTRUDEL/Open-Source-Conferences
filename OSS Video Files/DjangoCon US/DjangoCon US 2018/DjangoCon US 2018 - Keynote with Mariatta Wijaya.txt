Title: DjangoCon US 2018 - Keynote with Mariatta Wijaya
Publication date: 2018-11-08
Playlist: DjangoCon US 2018
Description: 
	DjangoCon US 2018 - Keynote with Mariatta Wijaya

Managing a large open source project like CPython is no easy task. Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together. Even if youâ€™re not managing a large project, you can still build your own bot! Hear some ideas on what you can automate on GitHub and personalize your bot based on your own workflow. All you need is Python. Donâ€™t be a robot; build the bot.

This talk was presented at: https://2018.djangocon.us/talk/keynote-with-mariatta-wijaya/

LINKS:
Follow Mariatta Wijaya ðŸ‘‡
On Twitter: https://twitter.com/mariatta
Official homepage: https://mariatta.ca
Github: https://github.com/Mariatta/

Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,050 --> 00:00:07,709
[Music]

00:00:15,859 --> 00:00:21,420
thank you so much for having me here

00:00:18,119 --> 00:00:24,890
um it's really an honor to be keynoting

00:00:21,420 --> 00:00:29,519
at GenCon the jungle community here is

00:00:24,890 --> 00:00:32,279
really special to me my first conference

00:00:29,519 --> 00:00:35,460
talk ever was Django Cone in

00:00:32,279 --> 00:00:38,460
Philadelphia only two years ago the year

00:00:35,460 --> 00:00:41,040
the year after that I spoke at seven

00:00:38,460 --> 00:00:44,550
conferences five countries three

00:00:41,040 --> 00:00:46,829
Carlin's it's awesome so I really feel

00:00:44,550 --> 00:00:48,210
excited to be back in and thank you so

00:00:46,829 --> 00:00:53,309
much for inviting me as a keynote

00:00:48,210 --> 00:00:57,059
speaker thank you before I start just I

00:00:53,309 --> 00:01:00,690
have a few brief announcements jackie is

00:00:57,059 --> 00:01:02,399
hiring go them I cascades it's a

00:01:00,690 --> 00:01:05,580
conference happening in Seattle in

00:01:02,399 --> 00:01:08,310
February and CFP still open please

00:01:05,580 --> 00:01:10,650
submit a talk and feel free to follow me

00:01:08,310 --> 00:01:14,100
on Twitter but my next tweet probably

00:01:10,650 --> 00:01:16,259
about my ice cream selfie so today I'm

00:01:14,100 --> 00:01:18,360
here to talk to you about core Python

00:01:16,259 --> 00:01:22,890
development I'm a Python code available

00:01:18,360 --> 00:01:25,950
and there is this one question that I

00:01:22,890 --> 00:01:29,840
receive again and again and I think

00:01:25,950 --> 00:01:33,920
every core developer is iffy to that is

00:01:29,840 --> 00:01:37,390
when can you merge my poll requests

00:01:33,920 --> 00:01:40,909
I'm sorry it's just

00:01:37,390 --> 00:01:45,080
today there are close to 1000 open open

00:01:40,909 --> 00:01:48,770
pull requests to see Python the problem

00:01:45,080 --> 00:01:52,850
is we're we're outnumbered there are

00:01:48,770 --> 00:01:55,509
only so few of us who can merge your

00:01:52,850 --> 00:01:59,869
poor requests meanwhile there are like

00:01:55,509 --> 00:02:01,820
hundreds thousands of you contributing

00:01:59,869 --> 00:02:04,130
and I really really appreciate all your

00:02:01,820 --> 00:02:04,640
contributions they are welcome but I'm

00:02:04,130 --> 00:02:08,450
sorry

00:02:04,640 --> 00:02:11,200
we just can't possibly go through all of

00:02:08,450 --> 00:02:18,440
them quickly we don't have enough time

00:02:11,200 --> 00:02:20,239
I'm sorry I'm Canadian and the other

00:02:18,440 --> 00:02:23,480
problem is our workflow is pretty

00:02:20,239 --> 00:02:32,180
complicated like for every single one

00:02:23,480 --> 00:02:33,890
pull request that comes okay for every

00:02:32,180 --> 00:02:36,890
single pull request that comes we need

00:02:33,890 --> 00:02:40,489
to ask all of these questions bug or

00:02:36,890 --> 00:02:43,730
feature it's really important did you

00:02:40,489 --> 00:02:48,260
sign the CLA you do you wrote test or

00:02:43,730 --> 00:02:50,420
the test past half did test it do you

00:02:48,260 --> 00:02:52,940
is there an issue created if somebody

00:02:50,420 --> 00:02:55,570
actually asked for this change you write

00:02:52,940 --> 00:03:00,650
a news and three bla bla bla backport

00:02:55,570 --> 00:03:06,380
it's very complicated and we do this for

00:03:00,650 --> 00:03:08,150
every single pour request so today I

00:03:06,380 --> 00:03:12,519
just want to focus on one of these

00:03:08,150 --> 00:03:14,750
issues the issue with backporting

00:03:12,519 --> 00:03:18,079
perhaps you don't even know what is

00:03:14,750 --> 00:03:21,980
backward and why is it even important

00:03:18,079 --> 00:03:25,430
for Python so backporting is the act of

00:03:21,980 --> 00:03:28,700
applying changes from the newer version

00:03:25,430 --> 00:03:32,269
software to the older versions of the

00:03:28,700 --> 00:03:35,000
same software and perhaps it will help

00:03:32,269 --> 00:03:38,840
if you realize that python still

00:03:35,000 --> 00:03:42,680
maintains these different versions the

00:03:38,840 --> 00:03:47,120
master branch will become Python 3/8 the

00:03:42,680 --> 00:03:47,870
alpha release is due January 3 7 1 and 3

00:03:47,120 --> 00:03:50,030
6 7

00:03:47,870 --> 00:03:52,970
still maintained we still accept bug

00:03:50,030 --> 00:03:58,340
fixes to those and it's due to be out

00:03:52,970 --> 00:04:01,090
October 20th back ports is how you will

00:03:58,340 --> 00:04:03,200
receive three seven one three six seven

00:04:01,090 --> 00:04:06,379
we thought back boring

00:04:03,200 --> 00:04:09,980
you will not get that so it's very

00:04:06,379 --> 00:04:12,349
important process in our development so

00:04:09,980 --> 00:04:13,940
let's think about this scenario say

00:04:12,349 --> 00:04:16,280
you're using Python you're using f

00:04:13,940 --> 00:04:18,350
strings Python three six and then you

00:04:16,280 --> 00:04:21,079
discover back maybe there's probably the

00:04:18,350 --> 00:04:23,389
documentation or whatnot you come to the

00:04:21,079 --> 00:04:25,789
back tracker and tell me hey there's a

00:04:23,389 --> 00:04:29,030
problem with our strings and because

00:04:25,789 --> 00:04:32,240
it's AB strings you thought alright this

00:04:29,030 --> 00:04:35,660
applies to Python 3 six then you decided

00:04:32,240 --> 00:04:40,520
to help and fix the bug making a pull

00:04:35,660 --> 00:04:42,830
request to the three six branch but

00:04:40,520 --> 00:04:45,350
that's that's that's not how it works

00:04:42,830 --> 00:04:47,539
this happens all the time people making

00:04:45,350 --> 00:04:50,000
pull requests to the wrong branch and we

00:04:47,539 --> 00:04:53,419
have to tell them no close that please

00:04:50,000 --> 00:04:56,150
read the Deaf guide this is how it

00:04:53,419 --> 00:04:57,800
really works you discover a bug in a

00:04:56,150 --> 00:05:00,500
strings that's fine please do tell us

00:04:57,800 --> 00:05:01,130
about it but then we're going to tell

00:05:00,500 --> 00:05:03,110
you that

00:05:01,130 --> 00:05:07,849
alright this applies to all these

00:05:03,110 --> 00:05:11,870
branches but first please make the pull

00:05:07,849 --> 00:05:15,349
request to the master branch we're going

00:05:11,870 --> 00:05:16,880
to review it criticize it make sure you

00:05:15,349 --> 00:05:19,669
sign the CLA make sure you have test

00:05:16,880 --> 00:05:22,699
write the dogs and everything once we're

00:05:19,669 --> 00:05:26,419
happy with that we'll merge it only

00:05:22,699 --> 00:05:29,419
after we merge it will backbone it okay

00:05:26,419 --> 00:05:34,630
sounds simple right back porting now

00:05:29,419 --> 00:05:34,630
let's go to figure out how this happens

00:05:34,870 --> 00:05:40,030
this is how we used to do it to back

00:05:38,570 --> 00:05:43,750
port a single commit

00:05:40,030 --> 00:05:47,630
we need to type out all of these lines

00:05:43,750 --> 00:05:50,120
get fetch create a branch cherry-pick

00:05:47,630 --> 00:05:52,760
push it through master a push it to

00:05:50,120 --> 00:05:56,150
origin check out another branch delete

00:05:52,760 --> 00:05:58,789
it stop leave the terminal go to the

00:05:56,150 --> 00:06:02,440
github create a pull request and go back

00:05:58,789 --> 00:06:02,440
and do all over again

00:06:02,559 --> 00:06:07,819
it's tedious it's a lot of work you're

00:06:05,779 --> 00:06:13,879
typing a lot of things and it's boring

00:06:07,819 --> 00:06:16,249
repetitive tasks so thankfully we figure

00:06:13,879 --> 00:06:19,189
out a way to make it a little bit better

00:06:16,249 --> 00:06:22,669
so I wrote this utility script called

00:06:19,189 --> 00:06:26,059
cherry picker and it's on PI bi so all

00:06:22,669 --> 00:06:29,979
we need to do is install this instead of

00:06:26,059 --> 00:06:35,300
typing out all those really long lines

00:06:29,979 --> 00:06:37,099
we type one line great and it takes care

00:06:35,300 --> 00:06:39,740
of all those boring details deleting

00:06:37,099 --> 00:06:42,229
brand creating branch it even opens up

00:06:39,740 --> 00:06:45,229
the web browser pointing to the github

00:06:42,229 --> 00:06:48,319
pull request creation so it's much

00:06:45,229 --> 00:06:53,329
simpler and you think that we'll be

00:06:48,319 --> 00:06:58,069
happy with this I was not I I have

00:06:53,329 --> 00:07:03,619
problems problem is I have to be on a

00:06:58,069 --> 00:07:06,439
computer that's a blocker for me like if

00:07:03,619 --> 00:07:10,969
I was able to review pull requests on a

00:07:06,439 --> 00:07:15,199
phone why do I have to move and wait

00:07:10,969 --> 00:07:18,349
until I go to my computer to finish the

00:07:15,199 --> 00:07:20,629
backboard I want to be able to do it

00:07:18,349 --> 00:07:23,119
from like if I'm vacationing on a beach

00:07:20,629 --> 00:07:25,490
on my phone reveal pull request merge it

00:07:23,119 --> 00:07:29,449
back ported I don't want to be on the

00:07:25,490 --> 00:07:32,119
computer that's a problem and because

00:07:29,449 --> 00:07:37,519
sometimes I have to wait until I'm back

00:07:32,119 --> 00:07:41,329
on the computer I forgot to do it so

00:07:37,519 --> 00:07:46,039
backwards were missed and people start

00:07:41,329 --> 00:07:51,559
asking me to do it the other problem is

00:07:46,039 --> 00:07:55,119
I started receiving back reports when

00:07:51,559 --> 00:07:58,610
people complain that it was a pain

00:07:55,119 --> 00:08:01,249
having to install cherry picker because

00:07:58,610 --> 00:08:06,139
they didn't have item 36 yet it's a pain

00:08:01,249 --> 00:08:08,100
for them to install Python 3 6i they

00:08:06,139 --> 00:08:10,210
missing out on a strings

00:08:08,100 --> 00:08:13,400
[Laughter]

00:08:10,210 --> 00:08:15,980
and the other problem is some people use

00:08:13,400 --> 00:08:20,120
it on windows and it's actually it's

00:08:15,980 --> 00:08:22,700
great my son on Windows is awesome the

00:08:20,120 --> 00:08:26,000
problem is me I don't have Windows

00:08:22,700 --> 00:08:29,180
machine so I don't know how to help them

00:08:26,000 --> 00:08:34,880
how to support them so it's a problem

00:08:29,180 --> 00:08:40,510
for me but even though it's simple it's

00:08:34,880 --> 00:08:44,060
still just boring I I do not get smarter

00:08:40,510 --> 00:08:49,540
running cherry-picker I don't earn

00:08:44,060 --> 00:08:49,540
anything it's not intelligent activity

00:08:49,870 --> 00:08:56,810
it's boring and I don't feel it's worth

00:08:53,360 --> 00:09:01,700
my time doing but it's important we need

00:08:56,810 --> 00:09:04,960
it and in fact it was during my con in

00:09:01,700 --> 00:09:07,930
Portland last year I spoke at another

00:09:04,960 --> 00:09:10,700
contributor and he asked the same thing

00:09:07,930 --> 00:09:16,790
would you review my request and would

00:09:10,700 --> 00:09:19,610
you and I'm sorry I like I think I made

00:09:16,790 --> 00:09:24,470
up excuses I'm a little bit but by

00:09:19,610 --> 00:09:24,740
parting and it was him who suggested

00:09:24,470 --> 00:09:28,430
that

00:09:24,740 --> 00:09:32,750
okay how about co2 vapors don't worry

00:09:28,430 --> 00:09:34,850
about this let contributors hundreds of

00:09:32,750 --> 00:09:39,880
contributors take care of this for you

00:09:34,850 --> 00:09:45,080
let us do the backbones and I feel like

00:09:39,880 --> 00:09:48,650
it sounds like good idea at first but I

00:09:45,080 --> 00:09:51,940
don't know I don't think his time your

00:09:48,650 --> 00:09:55,550
time is any less valid than their mind

00:09:51,940 --> 00:09:57,490
if I'm not willing to do this I don't

00:09:55,550 --> 00:10:04,010
think it's worth my time

00:09:57,490 --> 00:10:07,250
why should I ask you to do it so it's

00:10:04,010 --> 00:10:09,880
time to build a bot automate this the

00:10:07,250 --> 00:10:12,680
sooner we have the bought the better

00:10:09,880 --> 00:10:15,380
problem is I didn't actually know how to

00:10:12,680 --> 00:10:17,600
build a bot at that time I actually was

00:10:15,380 --> 00:10:22,670
waiting for another Corps available to

00:10:17,600 --> 00:10:25,340
build the bot but time passed and we

00:10:22,670 --> 00:10:27,890
we need them so I thought maybe it's

00:10:25,340 --> 00:10:31,130
good opportunity for me to learn how to

00:10:27,890 --> 00:10:34,600
be the boss so I started learning I

00:10:31,130 --> 00:10:39,440
started reading github developer guide

00:10:34,600 --> 00:10:40,940
and I learned about web hooks so

00:10:39,440 --> 00:10:44,450
basically you can configure your

00:10:40,940 --> 00:10:48,430
repository you can add web hooks to your

00:10:44,450 --> 00:10:50,600
github repo and let github notifies you

00:10:48,430 --> 00:10:53,480
whenever there's something happens

00:10:50,600 --> 00:10:55,850
inside your repo it can sense you events

00:10:53,480 --> 00:10:58,010
like hey there's a new pull request

00:10:55,850 --> 00:11:00,950
somebody open it somebody closed it or

00:10:58,010 --> 00:11:05,300
it can tells you about there's change in

00:11:00,950 --> 00:11:08,240
status if I do commit the status change

00:11:05,300 --> 00:11:10,580
to pending success failure all that it

00:11:08,240 --> 00:11:14,300
can tell you about pull request review

00:11:10,580 --> 00:11:16,930
was submitted dismissed there's a lot of

00:11:14,300 --> 00:11:19,450
different events that you can you can

00:11:16,930 --> 00:11:24,790
subscribe to

00:11:19,450 --> 00:11:27,320
so when github sends you all these

00:11:24,790 --> 00:11:30,020
webhook events it will actually make a

00:11:27,320 --> 00:11:32,690
post request to a certain URL you just

00:11:30,020 --> 00:11:35,540
need to tell github where to send that

00:11:32,690 --> 00:11:37,700
post request so that's where your bot

00:11:35,540 --> 00:11:41,720
will be you will be creating a web

00:11:37,700 --> 00:11:44,720
service anything you want plus Django

00:11:41,720 --> 00:11:48,650
but it's a web service with a URL for

00:11:44,720 --> 00:11:51,200
github to send that request now for

00:11:48,650 --> 00:11:55,990
Python of course we're going to build it

00:11:51,200 --> 00:12:00,560
with Python and pretty much in PSX

00:11:55,990 --> 00:12:02,540
infrastructure run on Heroku so that's

00:12:00,560 --> 00:12:07,820
what I started learning like how to

00:12:02,540 --> 00:12:11,060
build things web services with Python on

00:12:07,820 --> 00:12:15,050
Heroku so that this is how the web hooks

00:12:11,060 --> 00:12:18,440
work that's one direction the other

00:12:15,050 --> 00:12:22,370
direction is how do you want you want to

00:12:18,440 --> 00:12:26,390
make actions to get up from your web

00:12:22,370 --> 00:12:28,460
service maybe you want to be able to

00:12:26,390 --> 00:12:31,190
create for requests you want to be able

00:12:28,460 --> 00:12:33,440
to merge pull request leave comments

00:12:31,190 --> 00:12:35,120
apply labels and all that turns out

00:12:33,440 --> 00:12:36,680
there are a lot of things you can do

00:12:35,120 --> 00:12:40,999
whatever you

00:12:36,680 --> 00:12:44,119
on github on the web by yourself there

00:12:40,999 --> 00:12:47,329
is an API for it so it got me really

00:12:44,119 --> 00:12:50,389
excited so I thought okay now I think I

00:12:47,329 --> 00:12:52,399
understand how to build a bot and I

00:12:50,389 --> 00:12:55,369
started thinking like this is how it

00:12:52,399 --> 00:12:58,279
will work I will subscribe to the pr

00:12:55,369 --> 00:13:01,279
merge event have my bot run cherry

00:12:58,279 --> 00:13:04,639
picker and then I'm going to open a pull

00:13:01,279 --> 00:13:07,850
request with the REST API sounds simple

00:13:04,639 --> 00:13:11,119
but remember cherry picker was really

00:13:07,850 --> 00:13:15,290
running git cherry-pick so it needs a

00:13:11,119 --> 00:13:21,290
copy it needs to first clone cpython

00:13:15,290 --> 00:13:27,740
repo right remember C Python is 27 years

00:13:21,290 --> 00:13:31,699
old it's big cloning C Python takes two

00:13:27,740 --> 00:13:36,679
minutes at least it's long and then I

00:13:31,699 --> 00:13:43,850
discovered something in Heroku request

00:13:36,679 --> 00:13:46,550
times out after thirty seconds I didn't

00:13:43,850 --> 00:13:49,600
know I've never built but I never do

00:13:46,550 --> 00:13:53,870
anything with Haruka so I checked with

00:13:49,600 --> 00:13:55,639
with owner PSF infrastructure he was for

00:13:53,870 --> 00:13:58,519
infrastructure for PSF is the director

00:13:55,639 --> 00:14:00,410
of it for a second and I thought maybe

00:13:58,519 --> 00:14:02,920
we need to set up our own server not

00:14:00,410 --> 00:14:06,110
Heroku something that's not limited by

00:14:02,920 --> 00:14:07,579
30 seconds of timers or anything but he

00:14:06,110 --> 00:14:10,970
said yes totally

00:14:07,579 --> 00:14:15,199
we can do this in Morocco you will use

00:14:10,970 --> 00:14:17,449
salary do it in the background I know in

00:14:15,199 --> 00:14:21,490
a worker Dino as a background task and

00:14:17,449 --> 00:14:24,290
there is no times out on it all right

00:14:21,490 --> 00:14:27,559
okay I'm learning Heroku I'm willing

00:14:24,290 --> 00:14:29,509
about github API so now I don't know how

00:14:27,559 --> 00:14:33,470
salamy works I guess I will learn about

00:14:29,509 --> 00:14:36,199
it too so he sent me documentation to

00:14:33,470 --> 00:14:39,079
salary it was very straightforward I was

00:14:36,199 --> 00:14:42,949
able to figure it out quickly so sorry

00:14:39,079 --> 00:14:43,490
so this is how it works now this is the

00:14:42,949 --> 00:14:46,759
bot

00:14:43,490 --> 00:14:49,820
I will have a web service all it does is

00:14:46,759 --> 00:14:52,250
it receives the web book event

00:14:49,820 --> 00:14:56,810
and then it's going to just start a

00:14:52,250 --> 00:14:58,730
background task on salary that is so the

00:14:56,810 --> 00:15:01,700
background test is we'll do all those

00:14:58,730 --> 00:15:03,770
long-running things like cloning cpython

00:15:01,700 --> 00:15:08,240
running cherry picker opening pull

00:15:03,770 --> 00:15:13,430
request happens in the background this

00:15:08,240 --> 00:15:15,470
one is called Miss Islington so mrs.

00:15:13,430 --> 00:15:22,340
Lincoln is open source you can check out

00:15:15,470 --> 00:15:25,580
the code it is Python 3 6 it uses a io

00:15:22,340 --> 00:15:29,390
HTTP which is an async web server and

00:15:25,580 --> 00:15:32,000
client but the real magic that let's

00:15:29,390 --> 00:15:37,610
building but working with github API

00:15:32,000 --> 00:15:39,740
easy its github github is a library

00:15:37,610 --> 00:15:42,500
maintained by Brad cannon who is another

00:15:39,740 --> 00:15:45,350
Python core developer this is the

00:15:42,500 --> 00:15:47,240
library you want to use if you want to

00:15:45,350 --> 00:15:49,400
build your own integrations

00:15:47,240 --> 00:15:55,150
with github you want to build BOTS with

00:15:49,400 --> 00:16:01,940
Python 3 6 and above your scheduler and

00:15:55,150 --> 00:16:06,050
you've seen the diagram it seems it

00:16:01,940 --> 00:16:08,390
seems straightforward this is the actual

00:16:06,050 --> 00:16:12,170
code from Miss Islington from top to

00:16:08,390 --> 00:16:14,330
bottom I will tell it when I receive the

00:16:12,170 --> 00:16:17,990
pull request close event that's the

00:16:14,330 --> 00:16:20,180
first line I'm going to check if the

00:16:17,990 --> 00:16:23,030
pull request has been merged that's

00:16:20,180 --> 00:16:25,550
that's the if statement from there I

00:16:23,030 --> 00:16:29,240
will receive the commit hash I will note

00:16:25,550 --> 00:16:33,140
which branches if we tell it to back

00:16:29,240 --> 00:16:36,410
port it will check the labels and then

00:16:33,140 --> 00:16:38,330
basically in the end that's the the back

00:16:36,410 --> 00:16:42,350
port test delay that's that's the

00:16:38,330 --> 00:16:46,400
command to start a salary task it's it's

00:16:42,350 --> 00:16:50,300
simple it's easy this is how this is

00:16:46,400 --> 00:16:54,560
possible because of gadget up and when

00:16:50,300 --> 00:16:59,330
we built the but we deployed it it

00:16:54,560 --> 00:17:01,400
actually worked and it was exciting this

00:16:59,330 --> 00:17:03,680
is the very first time ever

00:17:01,400 --> 00:17:07,929
three of our bots

00:17:03,680 --> 00:17:10,970
talk to each other automatically I

00:17:07,929 --> 00:17:13,309
didn't realize this to work actually I

00:17:10,970 --> 00:17:20,030
didn't expect it to work because I

00:17:13,309 --> 00:17:22,910
didn't wrote any unit tests I didn't

00:17:20,030 --> 00:17:25,449
know how to write this at a time but it

00:17:22,910 --> 00:17:28,459
worked and it's like magic and now like

00:17:25,449 --> 00:17:33,320
how the problems I used to have with

00:17:28,459 --> 00:17:36,470
cherry picker it's gone I can't do this

00:17:33,320 --> 00:17:39,559
from my phone I know I'm gonna forget

00:17:36,470 --> 00:17:40,040
about it I don't receive back reports

00:17:39,559 --> 00:17:42,530
anymore

00:17:40,040 --> 00:17:45,559
because I only need to make sure it

00:17:42,530 --> 00:17:47,780
works with the pot and it's not on the

00:17:45,559 --> 00:17:52,550
body because I'm like it's fun working

00:17:47,780 --> 00:17:55,100
with Miss like this one so but now there

00:17:52,550 --> 00:18:00,920
is another problem it's still taking

00:17:55,100 --> 00:18:06,970
time the time is related to part of our

00:18:00,920 --> 00:18:06,970
other workflow waiting for tests to pass

00:18:07,150 --> 00:18:14,770
cpython runs lots of tests and status

00:18:11,600 --> 00:18:20,030
checks like this we use trophies appear

00:18:14,770 --> 00:18:26,330
zero pipelines waiting for all of this

00:18:20,030 --> 00:18:31,670
to finish on good days takes at least 30

00:18:26,330 --> 00:18:34,760
minutes for one pair it's long I'm not

00:18:31,670 --> 00:18:36,590
gonna wait for this so I need to do

00:18:34,760 --> 00:18:39,440
something else try to come back to it

00:18:36,590 --> 00:18:41,030
later check it with finish if not okay

00:18:39,440 --> 00:18:45,350
win again come back again

00:18:41,030 --> 00:18:49,880
is it done and so on like it's it's

00:18:45,350 --> 00:18:52,670
boring it's long that's a person waiting

00:18:49,880 --> 00:18:59,780
for time to pass spider webs that's the

00:18:52,670 --> 00:19:02,600
form wouldn't it be nice if I have a bot

00:18:59,780 --> 00:19:03,410
that waits for this and just tell me

00:19:02,600 --> 00:19:07,490
when it's done

00:19:03,410 --> 00:19:09,830
like that right so yes we kept our

00:19:07,490 --> 00:19:13,040
little base we have this spoiler it

00:19:09,830 --> 00:19:14,780
works this is how it I got inspired and

00:19:13,040 --> 00:19:16,920
I started figuring out how to build a

00:19:14,780 --> 00:19:20,160
body that does this

00:19:16,920 --> 00:19:23,250
so basically that is the status even

00:19:20,160 --> 00:19:26,400
when you can subscribe to and then it

00:19:23,250 --> 00:19:29,880
will give you the commit hash and you

00:19:26,400 --> 00:19:32,250
can make another API call to get the

00:19:29,880 --> 00:19:34,020
combined status all the status of the

00:19:32,250 --> 00:19:39,690
Singapore request of the single commit

00:19:34,020 --> 00:19:43,160
and then you can post a comment saying

00:19:39,690 --> 00:19:46,830
that whether it is finished or not

00:19:43,160 --> 00:19:50,610
now here comes one problem as I was

00:19:46,830 --> 00:19:53,010
trying to build this I didn't know which

00:19:50,610 --> 00:19:56,010
pull request that commit comes from that

00:19:53,010 --> 00:19:58,200
web hook even in the first that didn't

00:19:56,010 --> 00:20:01,530
tell me which pull request is from just

00:19:58,200 --> 00:20:04,710
the commit hash and it took me time to

00:20:01,530 --> 00:20:06,960
figure it out I searched in the pull

00:20:04,710 --> 00:20:09,750
request documentation I searched and

00:20:06,960 --> 00:20:15,720
issues documentation could not figure

00:20:09,750 --> 00:20:21,840
out which pull request contains this

00:20:15,720 --> 00:20:26,490
commit hash the answer was buried hidden

00:20:21,840 --> 00:20:28,770
in the search issues API so it actually

00:20:26,490 --> 00:20:31,200
says this like you can use if you know

00:20:28,770 --> 00:20:35,190
the commit you can use this issue's api

00:20:31,200 --> 00:20:38,100
to search for requests alright so i

00:20:35,190 --> 00:20:40,429
wrote out this utility function it's

00:20:38,100 --> 00:20:43,919
pretty straightforward that's the URL

00:20:40,429 --> 00:20:47,960
basically just pass in the commit hash

00:20:43,919 --> 00:20:51,360
make a request using github and i get it

00:20:47,960 --> 00:20:53,850
so it looks more like this now i receive

00:20:51,360 --> 00:20:55,640
the web event i'm gonna get combined

00:20:53,850 --> 00:20:59,549
status now i know it

00:20:55,640 --> 00:21:01,860
now if it's finished I'm going to figure

00:20:59,549 --> 00:21:05,360
out the pull request containing that and

00:21:01,860 --> 00:21:09,530
then post a comment in that pull request

00:21:05,360 --> 00:21:13,309
so that's that's how it works and now

00:21:09,530 --> 00:21:17,160
all my problems really really gone

00:21:13,309 --> 00:21:19,770
not only I figure out how to take care

00:21:17,160 --> 00:21:22,830
of the backboard waiting for testing

00:21:19,770 --> 00:21:25,350
pass is no longer boring like I feel so

00:21:22,830 --> 00:21:28,140
accomplished like my life is complete

00:21:25,350 --> 00:21:31,160
yeah let's start figuring out how to fix

00:21:28,140 --> 00:21:31,160
these other issues

00:21:31,470 --> 00:21:42,240
and this email came from another core

00:21:36,100 --> 00:21:45,310
developer Victor he said hello what if

00:21:42,240 --> 00:21:48,090
what if we let mrs. link multiple

00:21:45,310 --> 00:21:48,090
requests herself

00:21:49,140 --> 00:21:55,150
sure

00:21:51,330 --> 00:22:01,720
you want a bot that multiple requests to

00:21:55,150 --> 00:22:07,000
see Python you're asking can we give

00:22:01,720 --> 00:22:09,490
Python commitment to a but we don't even

00:22:07,000 --> 00:22:13,740
do this easily to people real

00:22:09,490 --> 00:22:19,210
intelligence human doing this to a bot

00:22:13,740 --> 00:22:25,570
okay I guess Python with strings maybe

00:22:19,210 --> 00:22:28,840
it's okay so we did it we built a bot

00:22:25,570 --> 00:22:31,840
that merge code into the sea Python and

00:22:28,840 --> 00:22:34,360
it is written with Python this is this

00:22:31,840 --> 00:22:38,560
is the code with using github I think I

00:22:34,360 --> 00:22:41,140
owe this is how we merge code to see

00:22:38,560 --> 00:22:45,340
Python you just need to you call that

00:22:41,140 --> 00:22:48,730
API gh put so making a put request to

00:22:45,340 --> 00:22:53,610
get up past the commit title commit

00:22:48,730 --> 00:23:00,730
message squash commit hash that's all

00:22:53,610 --> 00:23:04,470
simple that's how we did it so now our

00:23:00,730 --> 00:23:07,600
workflow looks like this if you realize

00:23:04,470 --> 00:23:13,330
just how little core developers are

00:23:07,600 --> 00:23:19,990
doing now the bot does all the boring

00:23:13,330 --> 00:23:23,920
things and this is this is awesome

00:23:19,990 --> 00:23:26,290
like now core availables get to spend

00:23:23,920 --> 00:23:28,600
more time doing the important things

00:23:26,290 --> 00:23:31,180
like actually reviewing pull requests

00:23:28,600 --> 00:23:33,790
they're not bothered by waiting for your

00:23:31,180 --> 00:23:39,510
tests to pass they don't even merge it

00:23:33,790 --> 00:23:44,130
let the but do it at this time

00:23:39,510 --> 00:23:48,630
I realized something first I didn't

00:23:44,130 --> 00:23:54,930
expect it we would ever want to let

00:23:48,630 --> 00:23:57,270
about do this but now we have it we

00:23:54,930 --> 00:24:00,030
can't live without it if we are back to

00:23:57,270 --> 00:24:05,070
this everybody is going to be mad like

00:24:00,030 --> 00:24:06,780
telling me enable mystic them again we

00:24:05,070 --> 00:24:08,490
thought we were happy with just this

00:24:06,780 --> 00:24:14,550
this is what we wanted in the first

00:24:08,490 --> 00:24:19,320
place but this once we learn more of how

00:24:14,550 --> 00:24:21,300
to build more automation more bots we

00:24:19,320 --> 00:24:24,090
really can't live without we let it I

00:24:21,300 --> 00:24:27,540
know I know some other people now asking

00:24:24,090 --> 00:24:32,070
me to do more BOTS for cpython we're

00:24:27,540 --> 00:24:36,600
spoiled but now that I know how to build

00:24:32,070 --> 00:24:40,580
BOTS I started asking myself like all

00:24:36,600 --> 00:24:43,230
right I realize how simple it was I

00:24:40,580 --> 00:24:45,990
started asking like what other BOTS can

00:24:43,230 --> 00:24:49,290
I built I'm sure I can find more boring

00:24:45,990 --> 00:24:52,500
things in my life and let the bots do it

00:24:49,290 --> 00:24:55,770
for me and i in fact I now get grumpy

00:24:52,500 --> 00:24:59,790
when I know that BOTS can do this why do

00:24:55,770 --> 00:25:01,380
i why am I still doing this so one of

00:24:59,790 --> 00:25:05,010
the bots I'm still working is called

00:25:01,380 --> 00:25:09,420
blackout this is this is a project I

00:25:05,010 --> 00:25:12,230
wanna finish soon black is an

00:25:09,420 --> 00:25:16,110
uncompromising code formatter for Python

00:25:12,230 --> 00:25:17,970
and it first came out I got excited I

00:25:16,110 --> 00:25:19,230
love it I want this I want black

00:25:17,970 --> 00:25:22,770
everywhere I can

00:25:19,230 --> 00:25:25,110
I would integrate it in my life and then

00:25:22,770 --> 00:25:30,240
I read the instruction on how to

00:25:25,110 --> 00:25:33,980
integrate black into my life and there

00:25:30,240 --> 00:25:37,800
is this long list of instructions like

00:25:33,980 --> 00:25:39,270
if you use this ID download this ID if

00:25:37,800 --> 00:25:43,860
you use that idea download this plug-in

00:25:39,270 --> 00:25:52,240
and I'm free commit configure it and I'm

00:25:43,860 --> 00:25:56,290
like I need something

00:25:52,240 --> 00:25:58,180
Oh what if I have more than one computer

00:25:56,290 --> 00:26:04,450
I have to download the same thing again

00:25:58,180 --> 00:26:09,220
no I don't want to do it so I wrote a

00:26:04,450 --> 00:26:12,010
bot that runs black so basically I don't

00:26:09,220 --> 00:26:17,170
even need to install black again or

00:26:12,010 --> 00:26:20,730
update it on my computer I I just tell

00:26:17,170 --> 00:26:24,250
the bot ok I apply the label black out

00:26:20,730 --> 00:26:25,420
the bot for message for me that's it

00:26:24,250 --> 00:26:27,580
nobody needs to argue

00:26:25,420 --> 00:26:32,430
nobody needs to install a plug-in or

00:26:27,580 --> 00:26:35,410
what I will let the boat do it I'm I

00:26:32,430 --> 00:26:38,590
have this working and yes I'm still not

00:26:35,410 --> 00:26:41,560
fully satisfied with how it works so

00:26:38,590 --> 00:26:43,390
this is my next project if you're

00:26:41,560 --> 00:26:49,030
interested that's the source code black

00:26:43,390 --> 00:26:51,790
out mariotta bat out I use this other

00:26:49,030 --> 00:26:54,700
bot called pipe basically it's a service

00:26:51,790 --> 00:26:58,960
that helps keeps my Python dependencies

00:26:54,700 --> 00:27:02,530
up to date and it's really useful I I

00:26:58,960 --> 00:27:05,440
recommend you use it it's free for open

00:27:02,530 --> 00:27:07,300
source projects so when one of your

00:27:05,440 --> 00:27:10,180
dependencies has an update they made a

00:27:07,300 --> 00:27:13,590
new release to IPI you get a pull

00:27:10,180 --> 00:27:19,750
request updating your requirements well

00:27:13,590 --> 00:27:21,460
it's great my problem is I have to wait

00:27:19,750 --> 00:27:24,300
for the test to pass before I can merge

00:27:21,460 --> 00:27:29,680
it and then I have to merge it and

00:27:24,300 --> 00:27:32,490
delete the branch if a bot can create a

00:27:29,680 --> 00:27:38,980
pull request why can it merge in itself

00:27:32,490 --> 00:27:42,100
why do I have to wait for this in my

00:27:38,980 --> 00:27:45,790
mind throughout this whole workflow the

00:27:42,100 --> 00:27:47,440
only thing that requires human

00:27:45,790 --> 00:27:51,480
intelligence that requires my

00:27:47,440 --> 00:27:54,730
involvement is revealing the changelog

00:27:51,480 --> 00:27:59,320
and to be honest I don't even review

00:27:54,730 --> 00:28:03,670
change lot anymore as long as my

00:27:59,320 --> 00:28:09,520
coverage didn't drop margin right

00:28:03,670 --> 00:28:11,500
I know a baaad can merge this so this is

00:28:09,520 --> 00:28:15,790
an actual open pool request in this

00:28:11,500 --> 00:28:19,390
Islington and I'm purposely I don't want

00:28:15,790 --> 00:28:22,330
to merge this because I I refuse to

00:28:19,390 --> 00:28:25,990
press that green button because I know a

00:28:22,330 --> 00:28:27,940
bot can do it so if if paya doesn't

00:28:25,990 --> 00:28:30,520
provide order manage ability soon enough

00:28:27,940 --> 00:28:34,630
I'm going to build my own bar that just

00:28:30,520 --> 00:28:40,200
merge and delete the branch like build

00:28:34,630 --> 00:28:44,260
the bottle this is an idea that I have

00:28:40,200 --> 00:28:48,160
I've been working on adding the PSF Code

00:28:44,260 --> 00:28:50,350
of Conduct to some of our github

00:28:48,160 --> 00:28:52,840
repositories so I added the code of

00:28:50,350 --> 00:28:58,210
conduct to see Python to the Deaf guide

00:28:52,840 --> 00:29:03,580
taps core workflow by working on this I

00:28:58,210 --> 00:29:08,049
meant I copy paste things and you know

00:29:03,580 --> 00:29:11,980
it's boring basically I create the same

00:29:08,049 --> 00:29:14,740
pull request again and again I think

00:29:11,980 --> 00:29:19,500
about could totally do this there should

00:29:14,740 --> 00:29:23,350
be a bot that can go through every

00:29:19,500 --> 00:29:25,990
public repos under Python organization

00:29:23,350 --> 00:29:29,679
and add the code of conduct

00:29:25,990 --> 00:29:31,570
I think it's important to help so I wish

00:29:29,679 --> 00:29:36,429
that such a bother can just create this

00:29:31,570 --> 00:29:39,490
for me merge it itself delete the branch

00:29:36,429 --> 00:29:45,030
don't I don't need to be bothered

00:29:39,490 --> 00:29:45,030
because a bot can totally do this

00:29:47,490 --> 00:29:52,730
since last month I've been taking a

00:29:50,370 --> 00:29:55,700
break from any volunteering activities

00:29:52,730 --> 00:29:59,460
not contributing to open source since

00:29:55,700 --> 00:30:05,520
September of yes September and also this

00:29:59,460 --> 00:30:08,510
month so I figured maybe I should happen

00:30:05,520 --> 00:30:11,580
similar to out of office auto-replies

00:30:08,510 --> 00:30:15,440
have an out of it out of open source

00:30:11,580 --> 00:30:19,920
auto-reply on github so if you all

00:30:15,440 --> 00:30:22,700
mention me on github this month my butt

00:30:19,920 --> 00:30:25,230
will tell you that I'm sorry

00:30:22,700 --> 00:30:30,000
Mario's not gonna look at this form

00:30:25,230 --> 00:30:31,950
until November I kind of didn't want to

00:30:30,000 --> 00:30:34,830
include this here just because it may be

00:30:31,950 --> 00:30:36,720
seen as product pitch but a lot of

00:30:34,830 --> 00:30:40,650
people asking me how they can set this

00:30:36,720 --> 00:30:44,700
up for themselves this is done by the

00:30:40,650 --> 00:30:48,900
appeal this is a multi-step that pies

00:30:44,700 --> 00:30:51,870
appear it's triggered by if there is a

00:30:48,900 --> 00:30:55,560
new mention of me I still have to filter

00:30:51,870 --> 00:30:58,530
it like if if the mention is outside of

00:30:55,560 --> 00:31:01,980
the appeal so if my co-workers mentioned

00:30:58,530 --> 00:31:05,940
needs fine but everybody else they will

00:31:01,980 --> 00:31:09,740
get this message I still get to run

00:31:05,940 --> 00:31:13,080
Python I there's a step for me that I

00:31:09,740 --> 00:31:16,530
need to extract out the pull request

00:31:13,080 --> 00:31:20,070
well number where the mention happened

00:31:16,530 --> 00:31:23,580
and then I tell the appeal to create the

00:31:20,070 --> 00:31:27,630
comment so if you're interested talk to

00:31:23,580 --> 00:31:29,340
them Bianchi triodes appeal they've

00:31:27,630 --> 00:31:31,530
basically needs a part and he didn't

00:31:29,340 --> 00:31:33,570
even realize it

00:31:31,530 --> 00:31:36,090
he earlier this year he has on Twitter

00:31:33,570 --> 00:31:38,910
like is there an easy way to allow

00:31:36,090 --> 00:31:40,200
issues but not pull requests and he had

00:31:38,910 --> 00:31:44,030
good reason for doing this

00:31:40,200 --> 00:31:48,360
I think one of the reply was moved to

00:31:44,030 --> 00:31:53,370
something else that doesn't sound really

00:31:48,360 --> 00:31:55,950
easy you can totally do a bot that takes

00:31:53,370 --> 00:32:02,060
care of this it's it's as simple as this

00:31:55,950 --> 00:32:02,060
received opinion event close it

00:32:02,250 --> 00:32:07,649
much simpler than mrs. Lincoln

00:32:04,720 --> 00:32:11,889
I know this can be done I'd wrote it

00:32:07,649 --> 00:32:13,240
those are those other lines of course

00:32:11,889 --> 00:32:20,860
you need to write in order to accomplish

00:32:13,240 --> 00:32:25,779
this it's easy so I hope that I've given

00:32:20,860 --> 00:32:31,029
your ideas to automate your life I mean

00:32:25,779 --> 00:32:33,190
I get I've used github examples kit have

00:32:31,029 --> 00:32:35,379
bought examples throughout this talk

00:32:33,190 --> 00:32:40,779
just because that's where I spent my

00:32:35,379 --> 00:32:44,049
life most of the time but don't be

00:32:40,779 --> 00:32:50,230
limited to just get habits automate your

00:32:44,049 --> 00:32:52,889
life don't be a robot build about and if

00:32:50,230 --> 00:32:56,679
it if it is get have bought your after I

00:32:52,889 --> 00:33:01,960
did wrote a tutorial telling you how to

00:32:56,679 --> 00:33:05,590
do it go Derrick github a tutorial but

00:33:01,960 --> 00:33:07,509
yeah automate don't don't do the boring

00:33:05,590 --> 00:33:10,240
things you know look at your own life

00:33:07,509 --> 00:33:15,789
I'm sure you will find even more boring

00:33:10,240 --> 00:33:17,860
things so thank you so much my name is

00:33:15,789 --> 00:33:19,960
Mary era thanks for coming to my talk I

00:33:17,860 --> 00:33:21,970
hope you enjoy it follow me on Twitter

00:33:19,960 --> 00:33:24,730
or if you would like to get in touch you

00:33:21,970 --> 00:33:25,550
can email me Mary at python.org thank

00:33:24,730 --> 00:33:33,090
you so much

00:33:25,550 --> 00:33:35,150
[Applause]

00:33:33,090 --> 00:33:35,150

YouTube URL: https://www.youtube.com/watch?v=uOLs3QeZy7M


