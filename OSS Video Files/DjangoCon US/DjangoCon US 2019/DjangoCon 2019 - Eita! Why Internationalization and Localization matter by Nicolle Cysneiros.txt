Title: DjangoCon 2019 - Eita! Why Internationalization and Localization matter by Nicolle Cysneiros
Publication date: 2019-10-25
Playlist: DjangoCon US 2019
Description: 
	DjangoCon 2019 - Eita! Why Internationalization and Localization matter by Nicolle Cysneiros

Translation of terms is only one step in the whole Internationalization and Localization process. This talk will go through the definition of i18n and l10n as well as show the main tools available for developers to support multiple languages and regional related preferences in their application.

This talk was presented at: https://2019.djangocon.us/talks/eita-why-internationalization-and-matter/

LINKS:
Follow Nicolle Cysneiros ðŸ‘‡
On Twitter: https://twitter.com/nicysneiros


Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/

Intro music: "This Is How We Quirk It" by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.
Captions: 
	00:00:00,000 --> 00:00:19,700
[Music]

00:00:15,730 --> 00:00:22,810
hello everyone my name is Nicole and I'm

00:00:19,700 --> 00:00:25,189
here today to talk about

00:00:22,810 --> 00:00:30,650
internationalization and localization

00:00:25,189 --> 00:00:34,330
and why they are important process in

00:00:30,650 --> 00:00:37,460
processes in your application in general

00:00:34,330 --> 00:00:42,680
does anyone here besides the Brazilian

00:00:37,460 --> 00:00:43,670
people knows what a term means no one

00:00:42,680 --> 00:00:47,059
okay

00:00:43,670 --> 00:00:48,860
so don't worry it's not a bad language I

00:00:47,059 --> 00:00:50,449
know that's the common thing to do when

00:00:48,860 --> 00:00:52,220
you learn a new language that you learn

00:00:50,449 --> 00:00:55,250
the curse words first I don't know

00:00:52,220 --> 00:00:57,290
what's up with that but I swear it's not

00:00:55,250 --> 00:00:59,989
a bad language it's just an expression

00:00:57,290 --> 00:01:02,750
that we use when something unexpected

00:00:59,989 --> 00:01:06,140
happens and by the end of the

00:01:02,750 --> 00:01:17,750
presentation you will know why this word

00:01:06,140 --> 00:01:21,530
is there and and why do I have a

00:01:17,750 --> 00:01:24,890
Brazilian Portuguese word in the title

00:01:21,530 --> 00:01:27,409
of my presentation well I am from Brazil

00:01:24,890 --> 00:01:30,920
I am a full-stack developer at leather

00:01:27,409 --> 00:01:34,670
coats I work mainly with Python in the

00:01:30,920 --> 00:01:36,710
backend especially jungle and I have

00:01:34,670 --> 00:01:40,490
some works on JavaScript on the

00:01:36,710 --> 00:01:44,030
front-end also I am a huge fan of the

00:01:40,490 --> 00:01:47,060
Python community I am part of the Python

00:01:44,030 --> 00:01:50,539
users group and our pilots group in my

00:01:47,060 --> 00:01:54,950
city Recife and I also organized the

00:01:50,539 --> 00:01:57,259
jungle girls back in 2017 and this year

00:01:54,950 --> 00:02:00,499
I had the pleasure of organizing a

00:01:57,259 --> 00:02:04,249
Python or desti which is like a regional

00:02:00,499 --> 00:02:07,310
Python in our region so Brazil is huge

00:02:04,249 --> 00:02:09,170
and so effect in this map here my city

00:02:07,310 --> 00:02:11,680
over there

00:02:09,170 --> 00:02:14,660
and it's a very sunny region it has a

00:02:11,680 --> 00:02:16,760
lot of great beaches for visit so if

00:02:14,660 --> 00:02:19,099
anyone wants to spend some vacation in

00:02:16,760 --> 00:02:22,220
Brazil I recommend you to visit Recife

00:02:19,099 --> 00:02:25,390
and give it a chance to amaze you as it

00:02:22,220 --> 00:02:25,390
amazes me every day

00:02:25,540 --> 00:02:29,950
and as I said I work at lab coats

00:02:27,550 --> 00:02:37,030
leather coats is a software studio based

00:02:29,950 --> 00:02:40,720
in Brazil and it is specialized in

00:02:37,030 --> 00:02:42,819
creating custom web products fitted for

00:02:40,720 --> 00:02:45,610
specific needs so I believe that

00:02:42,819 --> 00:02:49,150
software should be built by fulfilling

00:02:45,610 --> 00:02:51,310
clients and user expectations so our

00:02:49,150 --> 00:02:55,060
software is always aimed at solving

00:02:51,310 --> 00:02:58,000
problems and optimizing processes it's

00:02:55,060 --> 00:02:59,860
an incredible honor for us to be here to

00:02:58,000 --> 00:03:02,560
be part of this conference to be giving

00:02:59,860 --> 00:03:05,709
talks in this posturing two of my

00:03:02,560 --> 00:03:07,360
co-workers will be giving talks here we

00:03:05,709 --> 00:03:10,299
will have the one that will talk about

00:03:07,360 --> 00:03:12,549
that technical debt that tomorrow and

00:03:10,299 --> 00:03:15,700
also Renato will be discussing about

00:03:12,549 --> 00:03:17,980
drug authentication on Wednesday so if

00:03:15,700 --> 00:03:21,579
you guys are interested in these topics

00:03:17,980 --> 00:03:29,709
just stay tuned in look for their talks

00:03:21,579 --> 00:03:31,989
on the next day's ok so this is the

00:03:29,709 --> 00:03:35,400
agenda of this presentation we will be

00:03:31,989 --> 00:03:37,450
discussing about the definition of

00:03:35,400 --> 00:03:42,190
internationalization and localization

00:03:37,450 --> 00:03:44,260
and why they matter for your application

00:03:42,190 --> 00:03:46,090
why you should know about this then I

00:03:44,260 --> 00:03:47,769
will go over some of the

00:03:46,090 --> 00:03:51,370
internationalization tools that we have

00:03:47,769 --> 00:03:53,590
available to build our Python or jungle

00:03:51,370 --> 00:03:56,319
applications and last but definitely not

00:03:53,590 --> 00:04:00,489
not less important I will be present to

00:03:56,319 --> 00:04:03,549
you how we had to adapt our development

00:04:00,489 --> 00:04:05,470
flow to take internationalization into

00:04:03,549 --> 00:04:08,760
account so I'm going to share a little

00:04:05,470 --> 00:04:11,470
bit of our experience working with it

00:04:08,760 --> 00:04:13,389
okay so let's start addressing the

00:04:11,470 --> 00:04:16,209
difference between localization and

00:04:13,389 --> 00:04:22,450
internationalization um funny story I

00:04:16,209 --> 00:04:25,660
didn't know what I 18 N or L n l10n

00:04:22,450 --> 00:04:28,020
meant until really recently where I

00:04:25,660 --> 00:04:33,099
learned that they are nÃºmero animals

00:04:28,020 --> 00:04:35,870
which means that we have that there are

00:04:33,099 --> 00:04:38,450
18 letters between I and n in

00:04:35,870 --> 00:04:40,730
internationalization world in the same

00:04:38,450 --> 00:04:43,820
thing for localization like we have ten

00:04:40,730 --> 00:04:45,350
letters between L and n just curious

00:04:43,820 --> 00:04:47,000
fact for you guys because I didn't know

00:04:45,350 --> 00:04:50,840
when I started working on this and I

00:04:47,000 --> 00:04:52,730
just discovered later on so localization

00:04:50,840 --> 00:04:56,060
is the process of adapting an

00:04:52,730 --> 00:04:59,150
application a product or even a document

00:04:56,060 --> 00:05:03,200
to be more user friendly to customers

00:04:59,150 --> 00:05:05,960
from different countries and cultures on

00:05:03,200 --> 00:05:09,139
the other hand internationalization is

00:05:05,960 --> 00:05:12,290
the process of enabling localization of

00:05:09,139 --> 00:05:15,169
the product on the application so it's

00:05:12,290 --> 00:05:19,100
like implementing a software in a way

00:05:15,169 --> 00:05:21,680
that it will know how and when to show

00:05:19,100 --> 00:05:25,760
different content depending on the

00:05:21,680 --> 00:05:27,500
customer super KO and Django

00:05:25,760 --> 00:05:30,139
documentation perfectly summarizes this

00:05:27,500 --> 00:05:33,490
difference by saying that localization

00:05:30,139 --> 00:05:35,630
is done by translators and

00:05:33,490 --> 00:05:40,030
internationalization is done by

00:05:35,630 --> 00:05:43,430
developers however this simplified

00:05:40,030 --> 00:05:44,870
definition of internationalization and

00:05:43,430 --> 00:05:47,780
localization may give the wrong

00:05:44,870 --> 00:05:50,000
impression that this is just about

00:05:47,780 --> 00:05:52,370
translating this is just about you lady

00:05:50,000 --> 00:05:54,880
in your app but actually this process

00:05:52,370 --> 00:05:58,520
entails several other adaptations that

00:05:54,880 --> 00:06:01,100
you need to make sure that you review

00:05:58,520 --> 00:06:02,840
them to make your users from different

00:06:01,100 --> 00:06:05,720
cultures feel more comfortable using

00:06:02,840 --> 00:06:08,990
your product so I will go over some of

00:06:05,720 --> 00:06:13,130
these examples that we need to take care

00:06:08,990 --> 00:06:16,729
of here we have a map in the straitened

00:06:13,130 --> 00:06:18,350
a usage of different formats of date in

00:06:16,729 --> 00:06:21,440
the world

00:06:18,350 --> 00:06:26,810
as you can see countries colored with CN

00:06:21,440 --> 00:06:31,850
blue green and grey they accept the

00:06:26,810 --> 00:06:34,820
format day month year the ones colored

00:06:31,850 --> 00:06:38,630
in yellow green and grey they accept the

00:06:34,820 --> 00:06:42,500
format year month and day and as you can

00:06:38,630 --> 00:06:47,570
see very few countries actually accept

00:06:42,500 --> 00:06:49,280
the end-user format month day year so

00:06:47,570 --> 00:06:51,740
let's say that you have a company

00:06:49,280 --> 00:06:54,080
based in the US and your product is

00:06:51,740 --> 00:06:56,720
shipped worldwide how are you going to

00:06:54,080 --> 00:06:58,400
show to they were on the websites they

00:06:56,720 --> 00:07:01,430
expect to deliver data to your customer

00:06:58,400 --> 00:07:04,520
in Mexico you don't want to flip day and

00:07:01,430 --> 00:07:09,950
month around it's going to be confusing

00:07:04,520 --> 00:07:11,960
for them so how can you do this this is

00:07:09,950 --> 00:07:14,240
another map very similar but this one

00:07:11,960 --> 00:07:18,200
actually illustrates the number format

00:07:14,240 --> 00:07:20,810
used in different parts of the globe the

00:07:18,200 --> 00:07:24,110
country is colored in green use coma as

00:07:20,810 --> 00:07:28,490
decimal separators and dot as thousand

00:07:24,110 --> 00:07:30,740
separators the countries in blue they

00:07:28,490 --> 00:07:34,010
format the numbers they are the way

00:07:30,740 --> 00:07:37,160
around so dots are four decimal

00:07:34,010 --> 00:07:37,880
separator and comma is used for thousand

00:07:37,160 --> 00:07:41,180
separators

00:07:37,880 --> 00:07:42,830
so this can be very confusing so how

00:07:41,180 --> 00:07:45,950
you're going to show the same number

00:07:42,830 --> 00:07:48,560
formatted for your American user or your

00:07:45,950 --> 00:07:51,520
let's say Brazilian user so it is

00:07:48,560 --> 00:07:53,690
something you need to pay attention to

00:07:51,520 --> 00:07:55,700
talking about prices I don't know

00:07:53,690 --> 00:07:58,010
another example is about curious

00:07:55,700 --> 00:08:00,110
conversion so if I'm browsing through

00:07:58,010 --> 00:08:03,380
Amazon I don't want to see the products

00:08:00,110 --> 00:08:04,880
in US dollars I want to see them in my

00:08:03,380 --> 00:08:05,990
local currency I want to see them in

00:08:04,880 --> 00:08:08,150
Brazilian Rio

00:08:05,990 --> 00:08:10,640
that's our currency so it's important to

00:08:08,150 --> 00:08:14,150
provide to provide these prices and

00:08:10,640 --> 00:08:17,570
other values correctly converted to your

00:08:14,150 --> 00:08:20,090
user another interesting one is

00:08:17,570 --> 00:08:23,390
bi-directional text and Unicode

00:08:20,090 --> 00:08:27,020
characters is a very combination when

00:08:23,390 --> 00:08:29,090
bringing applications international it

00:08:27,020 --> 00:08:33,440
is example here we can see that the

00:08:29,090 --> 00:08:35,780
Wikipedia page adapts according to the

00:08:33,440 --> 00:08:38,750
selected language so here we have the

00:08:35,780 --> 00:08:40,760
set up in English with the navigation

00:08:38,750 --> 00:08:47,720
bar on the left which is pretty common

00:08:40,760 --> 00:08:50,089
for most pages on the web and here we

00:08:47,720 --> 00:08:52,610
have the same page but configured for

00:08:50,089 --> 00:08:56,570
Arabic and as we can notice the

00:08:52,610 --> 00:08:59,870
navigation bar migrated from the left to

00:08:56,570 --> 00:09:01,880
the right side because the language is

00:08:59,870 --> 00:09:05,510
written and

00:09:01,880 --> 00:09:08,270
from right to left so that's why you

00:09:05,510 --> 00:09:10,730
need to meet an adapt and an adoption on

00:09:08,270 --> 00:09:14,930
your layout your page layout not only

00:09:10,730 --> 00:09:18,200
your translation and there are several

00:09:14,930 --> 00:09:20,120
other aspects that we need to take into

00:09:18,200 --> 00:09:23,840
consideration when localizing our apps

00:09:20,120 --> 00:09:27,620
there are some countries that still use

00:09:23,840 --> 00:09:30,470
in imperial unit instead of the nice and

00:09:27,620 --> 00:09:32,090
round metric system so yeah this is

00:09:30,470 --> 00:09:34,070
something that we still need to worry

00:09:32,090 --> 00:09:37,730
about so you may need to convert some

00:09:34,070 --> 00:09:39,890
measures on your application there are

00:09:37,730 --> 00:09:42,310
some legal requirements that may differ

00:09:39,890 --> 00:09:45,680
from country to country for instance

00:09:42,310 --> 00:09:47,660
betting those betting sites for sports

00:09:45,680 --> 00:09:50,030
or something like this all right

00:09:47,660 --> 00:09:53,150
forbidden in Brazil so if you if this is

00:09:50,030 --> 00:09:57,160
a your business you may need to consider

00:09:53,150 --> 00:10:00,440
another route instead of going to Brazil

00:09:57,160 --> 00:10:02,930
when sorting and presenting a list the

00:10:00,440 --> 00:10:06,200
way address and personal names are

00:10:02,930 --> 00:10:09,170
formatted so should the family name it

00:10:06,200 --> 00:10:12,940
goes first or the given name also

00:10:09,170 --> 00:10:18,290
timezone calendar is special holidays

00:10:12,940 --> 00:10:21,230
and I know that we as developers we are

00:10:18,290 --> 00:10:24,320
so used to write code it's a commutation

00:10:21,230 --> 00:10:27,500
in English that we may not realize that

00:10:24,320 --> 00:10:30,580
actually there are only 360 million

00:10:27,500 --> 00:10:34,280
native English speakers in the world and

00:10:30,580 --> 00:10:36,230
I know that's very useful to have a

00:10:34,280 --> 00:10:39,880
common language for us to communicate

00:10:36,230 --> 00:10:43,340
especially with teams across the world

00:10:39,880 --> 00:10:45,740
but regarding your final user for the

00:10:43,340 --> 00:10:49,190
product that you are developing English

00:10:45,740 --> 00:10:52,610
may not be that universal truth for them

00:10:49,190 --> 00:10:54,650
so even if the user knows how to read

00:10:52,610 --> 00:10:57,200
and speak in English they may have

00:10:54,650 --> 00:11:00,350
learned sister their babies I don't know

00:10:57,200 --> 00:11:03,320
but it doesn't mean that they wouldn't

00:11:00,350 --> 00:11:06,920
be more comfortable interacting with

00:11:03,320 --> 00:11:09,620
your application using their native

00:11:06,920 --> 00:11:11,840
language in fact from the top 10

00:11:09,620 --> 00:11:14,900
countries with most people use Internet

00:11:11,840 --> 00:11:15,710
only one is a native english-speaking

00:11:14,900 --> 00:11:17,450
countries so

00:11:15,710 --> 00:11:20,060
if you want to grab a share of the other

00:11:17,450 --> 00:11:22,279
market you must be different you must

00:11:20,060 --> 00:11:26,770
bring something new by catching new

00:11:22,279 --> 00:11:26,770
clients with an amazing user experience

00:11:26,860 --> 00:11:34,460
so yeah I hope that I gave you enough

00:11:30,339 --> 00:11:36,529
facts to point that I could have

00:11:34,460 --> 00:11:39,440
convinced you that about the importance

00:11:36,529 --> 00:11:41,660
of localizing your apps so now you must

00:11:39,440 --> 00:11:44,330
have been wondering how we can do this

00:11:41,660 --> 00:11:46,430
in our Python programs so I'm going to

00:11:44,330 --> 00:11:49,670
review a couple of tools here that can

00:11:46,430 --> 00:11:52,250
help us with this task the first one I'm

00:11:49,670 --> 00:11:54,910
going to start with is they look at tax

00:11:52,250 --> 00:11:58,400
package from the translation project

00:11:54,910 --> 00:12:00,500
this package as actually offers a

00:11:58,400 --> 00:12:04,070
runtime library that supports the

00:12:00,500 --> 00:12:06,350
retrieval of translated messages a set

00:12:04,070 --> 00:12:09,740
of conventions about how programs should

00:12:06,350 --> 00:12:11,990
be written to support message catalogs a

00:12:09,740 --> 00:12:14,000
library supporting the supporting the

00:12:11,990 --> 00:12:18,830
parsing in formatting of files

00:12:14,000 --> 00:12:22,070
containing translated messages so how

00:12:18,830 --> 00:12:25,520
does it work this is just a simple hello

00:12:22,070 --> 00:12:31,190
world type of app I called it I have

00:12:25,520 --> 00:12:33,410
dots PI right where we are using the cat

00:12:31,190 --> 00:12:38,050
text python module to create a

00:12:33,410 --> 00:12:40,790
translation object for our app domain

00:12:38,050 --> 00:12:43,790
specifying the local directories that I

00:12:40,790 --> 00:12:46,279
called ok oh and the language that I

00:12:43,790 --> 00:12:50,839
want to translate my strings to I'm

00:12:46,279 --> 00:12:53,600
starting with English from the US then

00:12:50,839 --> 00:12:57,529
I'm assigning the cat text function to

00:12:53,600 --> 00:13:01,310
underscore and flagging the shrink hello

00:12:57,529 --> 00:13:05,779
world here we have a string that I want

00:13:01,310 --> 00:13:08,540
to make it possible to translate after

00:13:05,779 --> 00:13:12,860
flagging oh that was later both strings

00:13:08,540 --> 00:13:17,120
in my code we can collect them using the

00:13:12,860 --> 00:13:20,270
ignore X get text comment lining too so

00:13:17,120 --> 00:13:22,490
this tool just generates a Pio file

00:13:20,270 --> 00:13:24,079
containing all the strings that we have

00:13:22,490 --> 00:13:26,090
flagged with that function they

00:13:24,079 --> 00:13:32,430
underscore function in our code

00:13:26,090 --> 00:13:34,320
so what's the PIO file what this thing

00:13:32,430 --> 00:13:36,780
that it generates the PIO file which

00:13:34,320 --> 00:13:40,500
stands for a portable portable object

00:13:36,780 --> 00:13:44,280
file contains a list it's just a list of

00:13:40,500 --> 00:13:47,490
entries and this is the basic structure

00:13:44,280 --> 00:13:50,190
for an a tree so we may add some

00:13:47,490 --> 00:13:53,550
comments for translators some references

00:13:50,190 --> 00:13:56,460
or flags for the string and then we have

00:13:53,550 --> 00:13:58,020
the entry ID which is going to be the

00:13:56,460 --> 00:14:01,290
untranslated the string that we just

00:13:58,020 --> 00:14:04,700
flagged in our code and the entry string

00:14:01,290 --> 00:14:08,880
representing they translated the string

00:14:04,700 --> 00:14:12,810
so when I run the comment X cat text in

00:14:08,880 --> 00:14:15,720
the command line passing my ATM file as

00:14:12,810 --> 00:14:18,600
input this is the pure file that it

00:14:15,720 --> 00:14:20,690
generated at the top we can see that we

00:14:18,600 --> 00:14:24,900
have some metadata about the file

00:14:20,690 --> 00:14:26,520
especially handy for giving some

00:14:24,900 --> 00:14:29,880
information about the project about the

00:14:26,520 --> 00:14:33,120
translation process and down here we

00:14:29,880 --> 00:14:35,010
have a reference for where the code for

00:14:33,120 --> 00:14:40,140
writing the code that shrinking from so

00:14:35,010 --> 00:14:45,750
line seven line seven of my ETA F dot P

00:14:40,140 --> 00:14:48,150
I py file then I have my untranslated

00:14:45,750 --> 00:14:53,150
string as the entry ID in the next line

00:14:48,150 --> 00:14:56,370
and an empty string in the entry string

00:14:53,150 --> 00:14:58,200
if no translated string is provided for

00:14:56,370 --> 00:14:59,670
a certain entry I don't know what you

00:14:58,200 --> 00:15:02,430
don't have stood the translation for

00:14:59,670 --> 00:15:05,270
that the entry ID will be returned so

00:15:02,430 --> 00:15:08,700
the entry ID will be shown to the user

00:15:05,270 --> 00:15:11,040
okay so I have my pure file and now I

00:15:08,700 --> 00:15:13,620
can start actually translating the terms

00:15:11,040 --> 00:15:15,660
that I have collected before in this

00:15:13,620 --> 00:15:18,660
example I'm translating our simple app

00:15:15,660 --> 00:15:21,900
to Portuguese so I copied the file the

00:15:18,660 --> 00:15:23,970
PIO file and generated generated by the

00:15:21,900 --> 00:15:24,990
X context comment and started to

00:15:23,970 --> 00:15:27,900
translated my terms

00:15:24,990 --> 00:15:29,520
so I already put there aa mundo that's

00:15:27,900 --> 00:15:32,580
the translation for who a word in

00:15:29,520 --> 00:15:36,210
Portuguese one thing that's important to

00:15:32,580 --> 00:15:38,850
notice is that they do get text library

00:15:36,210 --> 00:15:39,510
is going to look for your translated

00:15:38,850 --> 00:15:43,730
appeal

00:15:39,510 --> 00:15:45,779
in a specific folder path structure

00:15:43,730 --> 00:15:50,070
which is going to be your local

00:15:45,779 --> 00:15:52,019
directory then the language folder and

00:15:50,070 --> 00:15:55,290
the sign the language folder you must

00:15:52,019 --> 00:15:57,810
have a LC underscore messages folder and

00:15:55,290 --> 00:16:01,529
inside that folder you will have your

00:15:57,810 --> 00:16:04,620
Pio file and that's why I have to move

00:16:01,529 --> 00:16:10,529
around and change my folder structure to

00:16:04,620 --> 00:16:12,660
look like that now I have to Pio files

00:16:10,529 --> 00:16:14,820
for the two languages that I want to

00:16:12,660 --> 00:16:18,680
give support in my app English and

00:16:14,820 --> 00:16:22,680
Portuguese and I organized my directory

00:16:18,680 --> 00:16:25,560
in a specific way that's expected by the

00:16:22,680 --> 00:16:28,110
library so in order to use the

00:16:25,560 --> 00:16:30,870
translated strings in my code I just

00:16:28,110 --> 00:16:34,380
need to compile the PIO file into mo

00:16:30,870 --> 00:16:36,930
files using the message format command

00:16:34,380 --> 00:16:38,639
for each bo file so I just need to go

00:16:36,930 --> 00:16:43,470
over each one of them and then compile

00:16:38,639 --> 00:16:46,110
each one of them now I'm able to change

00:16:43,470 --> 00:16:51,360
the language on my program to as many

00:16:46,110 --> 00:16:53,699
language as I have feels Bo files for so

00:16:51,360 --> 00:16:57,240
I just need to change in my translation

00:16:53,699 --> 00:16:59,490
function over there and if we run this

00:16:57,240 --> 00:17:03,800
code it's going to patiently be

00:16:59,490 --> 00:17:03,800
translated to hola mundo in Portuguese

00:17:03,919 --> 00:17:09,679
another useful internationalization

00:17:06,510 --> 00:17:13,980
service is the Python volcano module

00:17:09,679 --> 00:17:17,400
this module actually has access to the

00:17:13,980 --> 00:17:19,860
POSIX local database and it's very handy

00:17:17,400 --> 00:17:23,490
for formatting dates numbers and

00:17:19,860 --> 00:17:25,500
currency let's take a look at an example

00:17:23,490 --> 00:17:28,590
of date number a currency formatting use

00:17:25,500 --> 00:17:32,309
this library here I am importing the

00:17:28,590 --> 00:17:35,309
module changing all the locale to US

00:17:32,309 --> 00:17:40,530
English and retrieving the local

00:17:35,309 --> 00:17:43,520
conventions then I proceed to format a

00:17:40,530 --> 00:17:48,169
given date and price just an example

00:17:43,520 --> 00:17:50,669
using the Loki o dot format method I can

00:17:48,169 --> 00:17:52,010
format my number without worrying about

00:17:50,669 --> 00:17:54,200
Des Moines

00:17:52,010 --> 00:17:57,500
and separators I'm just passing the

00:17:54,200 --> 00:18:00,620
grouping as true so I want to use the

00:17:57,500 --> 00:18:03,950
thousand separators in there using the

00:18:00,620 --> 00:18:06,350
percent X directory directive to format

00:18:03,950 --> 00:18:08,300
date it will display the month and year

00:18:06,350 --> 00:18:10,820
in the correct order of my locale and

00:18:08,300 --> 00:18:14,260
from the local conventions I'm able to

00:18:10,820 --> 00:18:16,640
get the curacy symbol for that location

00:18:14,260 --> 00:18:18,800
so here's the output for that Python

00:18:16,640 --> 00:18:22,340
code we can see that the date is

00:18:18,800 --> 00:18:24,440
following the format month date year the

00:18:22,340 --> 00:18:26,960
decimal separator is adults while the

00:18:24,440 --> 00:18:29,570
thousand separator is a comma and we

00:18:26,960 --> 00:18:33,230
have the dollar sign representing the US

00:18:29,570 --> 00:18:35,780
currency so if I go back there in the

00:18:33,230 --> 00:18:38,240
same code and just change the location

00:18:35,780 --> 00:18:40,790
to this Brazil and run the same code

00:18:38,240 --> 00:18:43,310
again we will get a different output

00:18:40,790 --> 00:18:45,740
based on Brazilian conventions for

00:18:43,310 --> 00:18:48,980
formatting the eighties that day month

00:18:45,740 --> 00:18:52,850
year and we will also have coma as a

00:18:48,980 --> 00:18:55,220
decimal separator dot style dot a

00:18:52,850 --> 00:18:57,080
thousand separators and they are closed

00:18:55,220 --> 00:19:02,300
dollar sign which represents the

00:18:57,080 --> 00:19:04,670
Brazilian currency real okay now that we

00:19:02,300 --> 00:19:08,210
know how to translate in format numbers

00:19:04,670 --> 00:19:10,190
and dates using just Python I want to

00:19:08,210 --> 00:19:13,220
show you how jungle can make our lives

00:19:10,190 --> 00:19:16,640
these years let's start with

00:19:13,220 --> 00:19:18,230
translations so by default a

00:19:16,640 --> 00:19:20,420
nationalisation is enabled when you

00:19:18,230 --> 00:19:24,280
create your jungle jungle project using

00:19:20,420 --> 00:19:27,440
John and Amin the translation module

00:19:24,280 --> 00:19:30,710
encapsulate that video library and

00:19:27,440 --> 00:19:34,130
provides the get text function already

00:19:30,710 --> 00:19:36,020
set up with the translation object in

00:19:34,130 --> 00:19:38,960
the destination the official object is a

00:19:36,020 --> 00:19:42,380
read set up base or the accept language

00:19:38,960 --> 00:19:43,750
header that's passed by the browser in

00:19:42,380 --> 00:19:46,970
your request

00:19:43,750 --> 00:19:49,670
so all that part o that Python code that

00:19:46,970 --> 00:19:52,370
we did before setting out or the

00:19:49,670 --> 00:19:54,320
translation and assigning the get text

00:19:52,370 --> 00:19:58,190
function this is already capsulated by

00:19:54,320 --> 00:20:00,650
jungle and we can just jump ahead and

00:19:58,190 --> 00:20:02,950
just using the get text function in our

00:20:00,650 --> 00:20:02,950
view

00:20:04,240 --> 00:20:09,560
for translations we can flag

00:20:06,820 --> 00:20:12,920
translatable strings in both Python and

00:20:09,560 --> 00:20:16,220
the template code besides they stated

00:20:12,920 --> 00:20:20,540
get text function that I just showed you

00:20:16,220 --> 00:20:23,930
jungle also have the ability of lazy

00:20:20,540 --> 00:20:25,970
translation so the factory which means

00:20:23,930 --> 00:20:28,280
that the flagged string will only be

00:20:25,970 --> 00:20:32,110
translated when the value is used in a

00:20:28,280 --> 00:20:34,190
string context such as a template Henry

00:20:32,110 --> 00:20:37,460
this is especially useful for

00:20:34,190 --> 00:20:41,660
translating like rebels name or the help

00:20:37,460 --> 00:20:43,790
text attributes in your jungle model on

00:20:41,660 --> 00:20:46,580
the other hand we can use some special

00:20:43,790 --> 00:20:49,280
tags in our template code to once we

00:20:46,580 --> 00:20:51,860
load the internationalization tags the

00:20:49,280 --> 00:20:54,680
trance template tag translates just a

00:20:51,860 --> 00:20:57,620
single string Y or the block Transtech

00:20:54,680 --> 00:21:02,560
cane Marcos relatable a huge block of

00:20:57,620 --> 00:21:06,470
strings if you want to so it's up to you

00:21:02,560 --> 00:21:08,960
regarding that those Dino comments

00:21:06,470 --> 00:21:10,220
command line interface generally me also

00:21:08,960 --> 00:21:13,870
provides Sacrement

00:21:10,220 --> 00:21:13,870
comment for those for that one

00:21:14,620 --> 00:21:19,340
especially the two that I just showed

00:21:17,060 --> 00:21:21,080
you to collect all strings my

00:21:19,340 --> 00:21:23,480
exceptionally translatable in the code

00:21:21,080 --> 00:21:26,780
you just need to run junghwa to me make

00:21:23,480 --> 00:21:28,790
messages comment for each locale that

00:21:26,780 --> 00:21:31,370
you want to give support to so you just

00:21:28,790 --> 00:21:34,850
leave just need to run this comment for

00:21:31,370 --> 00:21:37,690
every language and once you created your

00:21:34,850 --> 00:21:40,010
locale folder in your project workspace

00:21:37,690 --> 00:21:42,860
jungle is already going to create the

00:21:40,010 --> 00:21:45,730
correct folder structure for you with

00:21:42,860 --> 00:21:50,720
the LC messages folder and everything

00:21:45,730 --> 00:21:52,250
and to compile LPO files you just need

00:21:50,720 --> 00:21:55,880
to really drag what you mean compile

00:21:52,250 --> 00:21:59,600
messages if you don't specify a locale

00:21:55,880 --> 00:22:00,650
it's just going to compile everything

00:21:59,600 --> 00:22:07,190
that it finds

00:22:00,650 --> 00:22:10,460
so you're good to go I'm going to show

00:22:07,190 --> 00:22:12,380
you a little bit how does this work on

00:22:10,460 --> 00:22:16,760
the browser so you can understand what I

00:22:12,380 --> 00:22:22,840
mean by not needing to do anything

00:22:16,760 --> 00:22:22,840
oh just change here

00:22:47,970 --> 00:22:55,710
okay so you guys can see that right so I

00:22:51,160 --> 00:22:55,710
have here a simple page hello world

00:22:55,840 --> 00:23:03,670
it's just returning that string okay my

00:23:01,030 --> 00:23:05,890
view is just like sending this string

00:23:03,670 --> 00:23:09,970
back to the template and rendering the

00:23:05,890 --> 00:23:12,160
template that's simple as this so if I

00:23:09,970 --> 00:23:14,410
go here to my settings in I'm using this

00:23:12,160 --> 00:23:17,340
in Chrome but they should be able to

00:23:14,410 --> 00:23:20,590
change in any browser that you may use

00:23:17,340 --> 00:23:22,750
if I change here my language to

00:23:20,590 --> 00:23:28,300
Portuguese as my preference and move

00:23:22,750 --> 00:23:31,809
that to the table and reload my page

00:23:28,300 --> 00:23:34,809
it's going to identify that and

00:23:31,809 --> 00:23:36,550
translate my message to Portuguese so

00:23:34,809 --> 00:23:38,080
what just happened is that I changed the

00:23:36,550 --> 00:23:40,630
settings of my browser to instead of

00:23:38,080 --> 00:23:42,520
passing English in the accept language

00:23:40,630 --> 00:23:46,420
header it's going to be passing

00:23:42,520 --> 00:23:49,000
Portuguese so as I was able to generate

00:23:46,420 --> 00:23:51,460
a profile for Portuguese translated all

00:23:49,000 --> 00:23:54,850
the terms and compiled that jungle

00:23:51,460 --> 00:23:59,110
already already captures they accept

00:23:54,850 --> 00:24:01,440
header language and makes the correct

00:23:59,110 --> 00:24:06,720
configuration on the guinot cat text

00:24:01,440 --> 00:24:06,720
module so yeah

00:24:25,630 --> 00:24:33,410
so now about format localization from a

00:24:30,830 --> 00:24:35,330
localization is also enabled by default

00:24:33,410 --> 00:24:38,720
when you created your your jungle

00:24:35,330 --> 00:24:40,670
project it formats dates times and

00:24:38,720 --> 00:24:43,910
numbers displayed based on the current

00:24:40,670 --> 00:24:46,850
locale this locale is also obtained from

00:24:43,910 --> 00:24:50,240
the acceptor language header so it works

00:24:46,850 --> 00:24:53,330
the same way as a translation bit just a

00:24:50,240 --> 00:24:56,179
special reminder that to enable

00:24:53,330 --> 00:24:59,000
thousands separators by default in when

00:24:56,179 --> 00:25:02,179
you display any value on your job

00:24:59,000 --> 00:25:04,429
application you may want to use they use

00:25:02,179 --> 00:25:07,010
thousand separator studies in your

00:25:04,429 --> 00:25:11,260
project settings just if you're going to

00:25:07,010 --> 00:25:16,570
use in every every value that you have

00:25:11,260 --> 00:25:20,570
so here I have a small example about

00:25:16,570 --> 00:25:22,549
also paid in price and we have a form

00:25:20,570 --> 00:25:25,490
here that has a date there's a date a

00:25:22,549 --> 00:25:27,500
date field and a price this is a test

00:25:25,490 --> 00:25:32,540
more field and to make sure that it's

00:25:27,500 --> 00:25:34,490
going to to take the user work heyo into

00:25:32,540 --> 00:25:37,490
consideration when receiving the input

00:25:34,490 --> 00:25:39,679
in the form I just need to indicate the

00:25:37,490 --> 00:25:42,679
localized attribute for each one of this

00:25:39,679 --> 00:25:45,260
field so indicate that as true so they

00:25:42,679 --> 00:25:48,460
should be good to go and receive the

00:25:45,260 --> 00:25:56,090
correct value based on the user location

00:25:48,460 --> 00:25:59,270
so let's see an example of that if I

00:25:56,090 --> 00:26:04,030
change here now I have a symbol that for

00:25:59,270 --> 00:26:09,559
that form in a template and here

00:26:04,030 --> 00:26:12,679
reminding that I am in Portuguese so I'm

00:26:09,559 --> 00:26:14,030
located of Brazil so let's say that I'm

00:26:12,679 --> 00:26:17,240
here and I forgot about that

00:26:14,030 --> 00:26:23,290
and I just want to input the current

00:26:17,240 --> 00:26:28,669
state so let's say September 23rd of

00:26:23,290 --> 00:26:31,179
2019 and then I'm going to put any price

00:26:28,669 --> 00:26:31,179
here

00:26:31,260 --> 00:26:37,049
and if I hit submit it's going to give

00:26:34,080 --> 00:26:39,480
me an error because hey this is an arrow

00:26:37,049 --> 00:26:42,390
in Portuguese that's saying please input

00:26:39,480 --> 00:26:45,750
a valid date so it's not considering my

00:26:42,390 --> 00:26:47,700
input as valid because for them they're

00:26:45,750 --> 00:26:50,160
expecting the format of Brazil okay

00:26:47,700 --> 00:26:55,760
which is day month year and we don't

00:26:50,160 --> 00:27:02,630
have twenty third month in the year so

00:26:55,760 --> 00:27:04,710
if I change my okay you back to English

00:27:02,630 --> 00:27:07,290
it should be good to go

00:27:04,710 --> 00:27:12,090
but you notice one thing that came out

00:27:07,290 --> 00:27:14,520
wrong my price I had comma as decimal

00:27:12,090 --> 00:27:19,890
separator but I changed my locale to

00:27:14,520 --> 00:27:22,169
English so now it captured my coma as a

00:27:19,890 --> 00:27:26,340
thousand separators so now my price

00:27:22,169 --> 00:27:27,570
jumped to twelve thousand over there so

00:27:26,340 --> 00:27:31,049
this is something that you need to pay

00:27:27,570 --> 00:27:33,410
attention to and here we have the format

00:27:31,049 --> 00:27:38,160
so if I go back here and just change

00:27:33,410 --> 00:27:40,860
back again to my previous locale and

00:27:38,160 --> 00:27:43,830
reload the page it's going to give me to

00:27:40,860 --> 00:27:46,860
date in Portuguese and also the thousand

00:27:43,830 --> 00:27:49,799
separator now is a dot and the decimal

00:27:46,860 --> 00:27:53,270
separator is a comma so just to

00:27:49,799 --> 00:27:53,270
illustrate how that works

00:27:57,550 --> 00:28:05,000
and now I would like to give you some

00:28:03,110 --> 00:28:06,920
informations about times on how time

00:28:05,000 --> 00:28:09,860
zone would work in jungle I know this is

00:28:06,920 --> 00:28:11,630
a pretty difficult topic it's very hard

00:28:09,860 --> 00:28:12,140
to work with time zones at least I think

00:28:11,630 --> 00:28:14,840
so

00:28:12,140 --> 00:28:17,570
it's very confusing I mean I am just

00:28:14,840 --> 00:28:19,760
like right now because it's like four

00:28:17,570 --> 00:28:22,610
hours of difference from Recife to

00:28:19,760 --> 00:28:27,080
result in this time zone so it's quite

00:28:22,610 --> 00:28:32,300
messy but how time zone would work in

00:28:27,080 --> 00:28:34,190
jungle so if you if you enable time zone

00:28:32,300 --> 00:28:36,410
on your project all that time

00:28:34,190 --> 00:28:40,070
information is going to be stored in the

00:28:36,410 --> 00:28:42,800
database in UTC time zone if that is

00:28:40,070 --> 00:28:45,710
your default time zone that you put in

00:28:42,800 --> 00:28:47,990
your settings only aware date/time

00:28:45,710 --> 00:28:49,670
objects will be used internally for any

00:28:47,990 --> 00:28:53,150
calculations and comparisons that you

00:28:49,670 --> 00:28:55,220
want to do and these date/time objects

00:28:53,150 --> 00:28:57,230
will be converted to your user time zone

00:28:55,220 --> 00:29:01,940
when display information in the

00:28:57,230 --> 00:29:05,750
templates or forms one important thing

00:29:01,940 --> 00:29:07,880
that we need to understand too before

00:29:05,750 --> 00:29:10,040
working with time zones in jungle is the

00:29:07,880 --> 00:29:13,490
difference between naive and aware day

00:29:10,040 --> 00:29:17,560
time objects so now if the time objects

00:29:13,490 --> 00:29:20,840
don't have the TZ info attribute

00:29:17,560 --> 00:29:23,690
configured in the object and this

00:29:20,840 --> 00:29:26,510
attribute is just a value that indicates

00:29:23,690 --> 00:29:29,690
an offset it is the offset of the time

00:29:26,510 --> 00:29:31,850
zone so if you just want to do a time

00:29:29,690 --> 00:29:35,150
stamp using the date time default

00:29:31,850 --> 00:29:38,780
library and use the function now by

00:29:35,150 --> 00:29:42,410
default it's going to give you naive day

00:29:38,780 --> 00:29:45,140
time object however when you are working

00:29:42,410 --> 00:29:46,880
with time zones in Django as I said

00:29:45,140 --> 00:29:49,220
before you need to work with aware the

00:29:46,880 --> 00:29:54,050
time objects that have that TZ full

00:29:49,220 --> 00:29:58,070
attribute set so jungle red gives you a

00:29:54,050 --> 00:30:00,140
time zone module that can facilitate

00:29:58,070 --> 00:30:03,770
that for you so whenever you need to

00:30:00,140 --> 00:30:05,630
create a time stein taking into

00:30:03,770 --> 00:30:07,820
consideration the time zone that's aware

00:30:05,630 --> 00:30:10,400
hour where the time object you just need

00:30:07,820 --> 00:30:15,260
to use that and use the now function

00:30:10,400 --> 00:30:18,800
to do that another interesting thing

00:30:15,260 --> 00:30:22,370
about time zones is how to determine the

00:30:18,800 --> 00:30:24,080
current time zone for your user so when

00:30:22,370 --> 00:30:27,320
we thought before about translations and

00:30:24,080 --> 00:30:31,840
for money I said that the accept

00:30:27,320 --> 00:30:36,110
language header was being used and was

00:30:31,840 --> 00:30:38,170
affirmed by the browser but we can't use

00:30:36,110 --> 00:30:43,940
that information to determine the local

00:30:38,170 --> 00:30:46,040
time zone if you say that your your

00:30:43,940 --> 00:30:48,170
language is English from the United

00:30:46,040 --> 00:30:51,770
States this doesn't mean it doesn't

00:30:48,170 --> 00:30:54,950
inform me which time zone you're in you

00:30:51,770 --> 00:30:57,740
can be in the west coast in the their

00:30:54,950 --> 00:30:59,960
articles so which time zone you're in so

00:30:57,740 --> 00:31:03,470
the jungle documentation actually

00:30:59,960 --> 00:31:07,190
invites you to actually let the user

00:31:03,470 --> 00:31:10,280
select the time zone and buy you can

00:31:07,190 --> 00:31:12,650
store these in the session or you can

00:31:10,280 --> 00:31:15,790
sort that in a user profile if that's

00:31:12,650 --> 00:31:18,380
something that your application have

00:31:15,790 --> 00:31:20,690
another option would be also to discover

00:31:18,380 --> 00:31:24,080
the users time zone using some

00:31:20,690 --> 00:31:27,770
JavaScript libraries me personally I

00:31:24,080 --> 00:31:30,440
have worked with moments j/s time zone

00:31:27,770 --> 00:31:32,320
and I was able to figure out the time

00:31:30,440 --> 00:31:35,780
zone for the user pretty easily pretty

00:31:32,320 --> 00:31:43,040
straightforward so you can try to do

00:31:35,780 --> 00:31:48,140
this with JavaScript each oh so I have

00:31:43,040 --> 00:31:53,210
just a example here for time zones I

00:31:48,140 --> 00:32:02,929
have some alarms set up I think but I'm

00:31:53,210 --> 00:32:04,910
trying to set my signs own so here all

00:32:02,929 --> 00:32:09,550
this information about like all these

00:32:04,910 --> 00:32:13,309
list of time zones you can grab from the

00:32:09,550 --> 00:32:15,050
PI TZ module that is a red start when

00:32:13,309 --> 00:32:17,540
you start jungle so you can have access

00:32:15,050 --> 00:32:21,400
of all this list this is an all time

00:32:17,540 --> 00:32:23,750
zones that they support so I'm here in

00:32:21,400 --> 00:32:26,510
receive his time zone so let me

00:32:23,750 --> 00:32:33,100
that too I think that he is Los Angeles

00:32:26,510 --> 00:32:33,100
right so if I change here to America I

00:32:38,230 --> 00:32:54,169
can't find it yeah oh yeah

00:32:49,760 --> 00:32:56,780
found it thank you so now I'll set my

00:32:54,169 --> 00:33:03,559
time zone to Los Angeles and it's going

00:32:56,780 --> 00:33:08,630
to store in my session so now I can set

00:33:03,559 --> 00:33:14,480
an alarm let's say for tomorrow and I

00:33:08,630 --> 00:33:20,570
want to wake up at 7:00 so here I have

00:33:14,480 --> 00:33:24,620
mine in so if I go here to my jungle

00:33:20,570 --> 00:33:27,320
demean it's going to show me that object

00:33:24,620 --> 00:33:29,600
let me it's a little bit here it's going

00:33:27,320 --> 00:33:34,370
to show me that our mob site that we

00:33:29,600 --> 00:33:43,760
just did but if I go back and change

00:33:34,370 --> 00:33:46,909
back to receiving it's going to show me

00:33:43,760 --> 00:33:49,400
a different hour because in Recife we

00:33:46,909 --> 00:33:53,539
are five hours ahead so it's going to

00:33:49,400 --> 00:33:57,110
give me another time and here in my

00:33:53,539 --> 00:33:59,630
admin it's going to give me a note down

00:33:57,110 --> 00:34:02,120
here that's going to indicate how many

00:33:59,630 --> 00:34:05,510
hours I am different from my original

00:34:02,120 --> 00:34:07,309
date that was set by the user so this is

00:34:05,510 --> 00:34:09,740
this can be very helpful for you when

00:34:07,309 --> 00:34:11,480
you try to troubleshooting something if

00:34:09,740 --> 00:34:14,179
something happens your user puts some

00:34:11,480 --> 00:34:16,609
date in and you don't know what the time

00:34:14,179 --> 00:34:19,510
zone was this can give you some more

00:34:16,609 --> 00:34:19,510
information about that

00:34:27,520 --> 00:34:34,010
okay so now we know how to do formatting

00:34:31,399 --> 00:34:36,710
of dates and numbers we do know how to

00:34:34,010 --> 00:34:40,250
do translations we know how to work with

00:34:36,710 --> 00:34:42,260
time zones but this is how does this

00:34:40,250 --> 00:34:45,500
change the development process if it

00:34:42,260 --> 00:34:47,419
changed at all so we had the opportunity

00:34:45,500 --> 00:34:51,169
of working in an internationalization

00:34:47,419 --> 00:34:53,240
project back at lab codes and one of the

00:34:51,169 --> 00:34:56,179
main things that we had to change was

00:34:53,240 --> 00:34:58,580
our deploy process so we need we needed

00:34:56,179 --> 00:35:01,370
to adapt our deploy process to include

00:34:58,580 --> 00:35:04,790
the translation process in between so

00:35:01,370 --> 00:35:07,640
yeah we had this stage the poi where we

00:35:04,790 --> 00:35:10,100
would put our changes in and then wait

00:35:07,640 --> 00:35:12,430
for summer validations for the client in

00:35:10,100 --> 00:35:17,090
order to proceed to production but now

00:35:12,430 --> 00:35:20,660
we had to not only put everything in

00:35:17,090 --> 00:35:23,900
stage we also had to send any new or any

00:35:20,660 --> 00:35:25,760
updated terms to translators so let's

00:35:23,900 --> 00:35:29,120
say that I just build a new a new page

00:35:25,760 --> 00:35:32,000
on my web app that has this I don't know

00:35:29,120 --> 00:35:34,070
dozens of new words that I just created

00:35:32,000 --> 00:35:35,930
so I need to pass everything to the

00:35:34,070 --> 00:35:38,780
translators so they can translate that

00:35:35,930 --> 00:35:43,370
to all the languages that we support in

00:35:38,780 --> 00:35:45,470
that application now we also needed to

00:35:43,370 --> 00:35:47,600
take care of integration tests for

00:35:45,470 --> 00:35:49,820
different locales so now whenever we

00:35:47,600 --> 00:35:52,250
were doing or the testers were doing any

00:35:49,820 --> 00:35:54,380
tests they would not only test the

00:35:52,250 --> 00:35:57,290
functionality per se but also if that

00:35:54,380 --> 00:36:01,220
working different locales in different

00:35:57,290 --> 00:36:03,410
countries and our deploy our production

00:36:01,220 --> 00:36:06,140
deploy would only be approved when all

00:36:03,410 --> 00:36:07,700
terms were being translated so it was

00:36:06,140 --> 00:36:11,090
something that we need to take into

00:36:07,700 --> 00:36:12,890
consideration because the deploy the the

00:36:11,090 --> 00:36:15,530
production of oil would not only depend

00:36:12,890 --> 00:36:16,880
on my team on our team of developers

00:36:15,530 --> 00:36:20,120
that were closer

00:36:16,880 --> 00:36:22,670
we were also dependent on translator the

00:36:20,120 --> 00:36:23,870
translator the translation team so this

00:36:22,670 --> 00:36:27,860
something that you need to take into

00:36:23,870 --> 00:36:29,420
consideration and yeah that's basically

00:36:27,860 --> 00:36:31,990
the message that I will to pass you guys

00:36:29,420 --> 00:36:34,580
I hope that you find that

00:36:31,990 --> 00:36:37,040
internationalization is actually a

00:36:34,580 --> 00:36:38,380
fundamental step in design and

00:36:37,040 --> 00:36:42,609
development process

00:36:38,380 --> 00:36:45,190
don't do as we did because we had a

00:36:42,609 --> 00:36:48,700
project that was up and running several

00:36:45,190 --> 00:36:51,520
months several users and we suddenly got

00:36:48,700 --> 00:36:55,150
the news that we needed to explain to

00:36:51,520 --> 00:36:58,230
support Canadian users and we had to

00:36:55,150 --> 00:37:01,570
translate everything to French we had to

00:36:58,230 --> 00:37:06,089
convert our prices in unit of measures

00:37:01,570 --> 00:37:10,000
for to accommodate Canadian users so

00:37:06,089 --> 00:37:12,369
when we got the news we were very

00:37:10,000 --> 00:37:15,730
shocked and that's where the ATAR comes

00:37:12,369 --> 00:37:18,280
from because we had a lot on our plate

00:37:15,730 --> 00:37:20,680
and we still had to do this so don't do

00:37:18,280 --> 00:37:22,180
as we did my recommendation would be if

00:37:20,680 --> 00:37:24,730
you were in the beginning of your

00:37:22,180 --> 00:37:27,310
project pay attention to data try to

00:37:24,730 --> 00:37:30,430
include internationalization in the

00:37:27,310 --> 00:37:31,900
design process of your application if

00:37:30,430 --> 00:37:34,570
that's not the case if you're already

00:37:31,900 --> 00:37:38,440
down the road here just building it or

00:37:34,570 --> 00:37:40,240
even just maintain it my recommendation

00:37:38,440 --> 00:37:44,349
would be to follow the Boy Scout rule

00:37:40,240 --> 00:37:47,079
and try to flag all the strings whenever

00:37:44,349 --> 00:37:49,720
you are working with a piece of the code

00:37:47,079 --> 00:37:54,579
try to look for any strings that haven't

00:37:49,720 --> 00:37:56,950
been translated yet or mark any numbers

00:37:54,579 --> 00:37:58,869
that need to be especially formatted for

00:37:56,950 --> 00:38:01,420
different countries

00:37:58,869 --> 00:38:05,319
so you can do this side by side even

00:38:01,420 --> 00:38:06,700
though it's not requirement right now

00:38:05,319 --> 00:38:10,630
but trust me it's going to be a

00:38:06,700 --> 00:38:14,050
requirement soon so just follow this

00:38:10,630 --> 00:38:16,750
these I hope this is a nice information

00:38:14,050 --> 00:38:18,730
for you guys and yeah that's it I hope

00:38:16,750 --> 00:38:22,829
you enjoyed and you leave here with some

00:38:18,730 --> 00:38:22,829
more information and that's it Thanks

00:38:23,560 --> 00:38:30,430
I actually have a question on the

00:38:27,660 --> 00:38:33,580
regarding the deployment process do your

00:38:30,430 --> 00:38:35,350
translators use edit the PIO file

00:38:33,580 --> 00:38:39,070
directly usually or how does that

00:38:35,350 --> 00:38:41,920
handoff work actually we integrated with

00:38:39,070 --> 00:38:43,780
a translation platform we have several

00:38:41,920 --> 00:38:47,230
of them if you type in and Google we

00:38:43,780 --> 00:38:49,840
have several examples because typing in

00:38:47,230 --> 00:38:52,660
the Pio file it's very like supply text

00:38:49,840 --> 00:38:56,740
it's not very usable so what we did we

00:38:52,660 --> 00:38:59,230
uploaded these using their API - I don't

00:38:56,740 --> 00:39:01,660
know trans fax or is Matt link we have

00:38:59,230 --> 00:39:03,880
several platforms that do this and they

00:39:01,660 --> 00:39:06,370
just like press it out and then show to

00:39:03,880 --> 00:39:09,160
the translator in a very much nicer way

00:39:06,370 --> 00:39:12,040
so they could work the translations it

00:39:09,160 --> 00:39:13,570
gives some like suggestions and it can

00:39:12,040 --> 00:39:16,570
give you some more context about the

00:39:13,570 --> 00:39:19,600
string it's it's a really nice to we

00:39:16,570 --> 00:39:24,130
have several so we actually use that to

00:39:19,600 --> 00:39:25,930
make it easier for the translators how

00:39:24,130 --> 00:39:28,120
do you handle translation when you're

00:39:25,930 --> 00:39:33,160
dealing with the front-end like say

00:39:28,120 --> 00:39:35,710
react or who actually jungle has a

00:39:33,160 --> 00:39:38,770
catalog for working with JavaScript it

00:39:35,710 --> 00:39:41,410
can't capture like it exposes they get

00:39:38,770 --> 00:39:44,620
text function to your JavaScript code

00:39:41,410 --> 00:39:46,330
and you can do that there in this

00:39:44,620 --> 00:39:48,580
project that we have - we had to

00:39:46,330 --> 00:39:52,530
internationalize I was using angular one

00:39:48,580 --> 00:39:55,540
actually and we used their system of

00:39:52,530 --> 00:39:59,320
translating it was basically just like

00:39:55,540 --> 00:40:02,050
some a huge dict with the mapping

00:39:59,320 --> 00:40:03,910
between the key and the words to be

00:40:02,050 --> 00:40:06,340
translated and you just need to put in

00:40:03,910 --> 00:40:08,710
the correct folder it worked pretty

00:40:06,340 --> 00:40:10,930
similar to what yoga does one thing

00:40:08,710 --> 00:40:15,520
though that we noticed that we were

00:40:10,930 --> 00:40:18,640
using some strings in the CSS file like

00:40:15,520 --> 00:40:19,690
for arrows and stuff like yes or no

00:40:18,640 --> 00:40:22,630
thing

00:40:19,690 --> 00:40:24,760
so we had to change that because I don't

00:40:22,630 --> 00:40:26,200
know how to do with translation in CSS

00:40:24,760 --> 00:40:27,850
and probably it's not a good idea

00:40:26,200 --> 00:40:30,970
because it's not good to have like a

00:40:27,850 --> 00:40:32,230
string hard-coded new yes s so these are

00:40:30,970 --> 00:40:34,120
something that they figure out in the

00:40:32,230 --> 00:40:36,849
process so we need to change that and

00:40:34,120 --> 00:40:40,599
put the strings back in JavaScript where

00:40:36,849 --> 00:40:42,190
could translate thank you I actually

00:40:40,599 --> 00:40:45,700
have a couple of questions one of them

00:40:42,190 --> 00:40:49,779
is I need tips on how to handle the

00:40:45,700 --> 00:40:53,680
front-end design for right-left text for

00:40:49,779 --> 00:40:56,829
the Arabic text we didn't do that when I

00:40:53,680 --> 00:41:00,099
saw that in Wikipedia did that I was

00:40:56,829 --> 00:41:02,769
also curious but I didn't had the chance

00:41:00,099 --> 00:41:05,109
to research how they do this but it's

00:41:02,769 --> 00:41:07,210
it's pretty amazing I don't know how how

00:41:05,109 --> 00:41:08,769
they they did that but hopefully not

00:41:07,210 --> 00:41:10,720
something like if an else in your code

00:41:08,769 --> 00:41:14,190
but something a little bit smarter but I

00:41:10,720 --> 00:41:16,630
don't know how and my second question is

00:41:14,190 --> 00:41:18,220
how do you handle translation for things

00:41:16,630 --> 00:41:20,799
that you store in the database will you

00:41:18,220 --> 00:41:24,660
keep multiple fields for each language

00:41:20,799 --> 00:41:29,099
or how would you recommend doing that

00:41:24,660 --> 00:41:32,440
well actually we we didn't have to

00:41:29,099 --> 00:41:34,779
change anything our database for that

00:41:32,440 --> 00:41:38,319
project but currently we are in this

00:41:34,779 --> 00:41:41,170
stage of translating something that we

00:41:38,319 --> 00:41:46,329
have in a datastore we are actually

00:41:41,170 --> 00:41:49,869
using last search for a lot of things so

00:41:46,329 --> 00:41:52,329
what we did we have this child document

00:41:49,869 --> 00:41:55,479
for each one of the documents with those

00:41:52,329 --> 00:41:58,869
strings we actually extracted those

00:41:55,479 --> 00:42:01,599
strings put the key the idea the string

00:41:58,869 --> 00:42:04,029
ID in it and then we have child

00:42:01,599 --> 00:42:06,910
documents for each one of them for each

00:42:04,029 --> 00:42:08,950
language that we want to provide to so

00:42:06,910 --> 00:42:11,469
this is a tricky part whenever we

00:42:08,950 --> 00:42:13,359
retrieve that document we need to check

00:42:11,469 --> 00:42:17,079
what's the language that the user

00:42:13,359 --> 00:42:21,069
requested and then do them mapping

00:42:17,079 --> 00:42:23,170
correctly I don't know how we would do

00:42:21,069 --> 00:42:26,650
this in a relational database because I

00:42:23,170 --> 00:42:29,019
have had a chance to work on it but on a

00:42:26,650 --> 00:42:32,200
last search this is how we are doing it

00:42:29,019 --> 00:42:33,999
it it seems to work but I'm not sure

00:42:32,200 --> 00:42:36,369
about the performance I'm so afraid that

00:42:33,999 --> 00:42:39,430
there is something in there that we will

00:42:36,369 --> 00:42:43,569
had will have trouble but is a work in

00:42:39,430 --> 00:42:45,609
progress all right that's all the time

00:42:43,569 --> 00:42:47,529
we have for questions thank you so much

00:42:45,609 --> 00:42:49,230
for all your hard work here is a towel

00:42:47,529 --> 00:42:53,780
thank you

00:42:49,230 --> 00:43:07,089
[Applause]

00:42:53,780 --> 00:43:07,089

YouTube URL: https://www.youtube.com/watch?v=2WvNszxjaFE


