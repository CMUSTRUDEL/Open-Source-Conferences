Title: DjangoCon 2019 - The Unspeakable Horror of Discovering You Didn't Write Tests by Melanie Crutchfield
Publication date: 2019-10-25
Playlist: DjangoCon US 2019
Description: 
	DjangoCon 2019 - The Unspeakable Horror of Discovering You Didn't Write Tests by Melanie Crutchfield

PSA: if you don't write tests, you'll instead write code for a time machine to go back & train a band of feisty raccoons to dump grape jelly on the head of your past self because you'll have realized she is a terrible, lazy, awful person.

How do I know?

Because I didn't write tests.

This talk was presented at: https://2019.djangocon.us/talks/the-unspeakable-horror-of-discovering-t/

LINKS:
Follow Melanie Crutchfield ğŸ‘‡
On Twitter: https://twitter.com/hellomelaniec
Official homepage: https://melaniecrutchfield.com

Follow DjangCon US ğŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ğŸ‘‡
https://twitter.com/defnado
https://www.defna.org/

Intro music: "This Is How We Quirk It" by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.
Captions: 
	00:00:00,000 --> 00:00:12,679
[Music]

00:00:14,500 --> 00:00:18,890
super glad that we're bonded already

00:00:16,730 --> 00:00:20,779
like this makes me feel good because I'm

00:00:18,890 --> 00:00:22,369
guessing some of your hangry but now

00:00:20,779 --> 00:00:25,189
that we have this thing that we share

00:00:22,369 --> 00:00:29,230
you're not going to attack me which is

00:00:25,189 --> 00:00:29,230
good because I cannot defend myself so

00:00:30,070 --> 00:00:35,330
this is me I'm hello Melanie see almost

00:00:33,320 --> 00:00:37,100
everywhere on the internet so feel free

00:00:35,330 --> 00:00:39,460
to stalk me um

00:00:37,100 --> 00:00:41,809
don't nope taking that back right away

00:00:39,460 --> 00:00:43,659
that was close

00:00:41,809 --> 00:00:46,699
so and I'm gonna talk to you about

00:00:43,659 --> 00:00:50,019
testing about a cautionary tale of

00:00:46,699 --> 00:00:55,220
discovering that you did not write tests

00:00:50,019 --> 00:00:58,610
so it begins um would you ever have

00:00:55,220 --> 00:01:00,519
those things where you think like I'm

00:00:58,610 --> 00:01:03,460
totally going to learn that thing later

00:01:00,519 --> 00:01:07,820
but you also have this feeling like

00:01:03,460 --> 00:01:10,010
later is like never is what that means

00:01:07,820 --> 00:01:14,330
it's a a word that you say that means

00:01:10,010 --> 00:01:15,560
another word hands yes people yep that

00:01:14,330 --> 00:01:18,049
guy over there doesn't feel vulnerable

00:01:15,560 --> 00:01:24,380
enough yet yeah that's okay

00:01:18,049 --> 00:01:27,280
I see you it's alright so I am a

00:01:24,380 --> 00:01:29,659
community taught developer in that

00:01:27,280 --> 00:01:32,649
everything that I learned was completely

00:01:29,659 --> 00:01:35,859
guided and informed by the san diego

00:01:32,649 --> 00:01:38,359
python user group and san diego pilotis

00:01:35,859 --> 00:01:40,969
which was a really wonderful experience

00:01:38,359 --> 00:01:43,369
for me because it made a career in tech

00:01:40,969 --> 00:01:46,700
possible for me it made it made learning

00:01:43,369 --> 00:01:49,939
accessible the only downside though is

00:01:46,700 --> 00:01:52,460
that there's no one to make you do the

00:01:49,939 --> 00:01:55,640
things that you should do but don't want

00:01:52,460 --> 00:01:58,100
to do kind of no one there to like give

00:01:55,640 --> 00:02:02,469
you your developer vitamins so to speak

00:01:58,100 --> 00:02:05,649
right so when I started learning Python

00:02:02,469 --> 00:02:08,179
there were a bunch of people that said

00:02:05,649 --> 00:02:11,210
you should learn Django like Django is a

00:02:08,179 --> 00:02:13,790
really good thing and after a bit of

00:02:11,210 --> 00:02:16,370
like kind of ignoring and running away I

00:02:13,790 --> 00:02:20,030
did and I made this thing called five up

00:02:16,370 --> 00:02:21,360
it sends happy texts every day unless

00:02:20,030 --> 00:02:23,190
you

00:02:21,360 --> 00:02:26,040
in the United States or you have a weird

00:02:23,190 --> 00:02:29,360
carrier I'm sorry international stuff is

00:02:26,040 --> 00:02:33,360
hard and I'm going to learn that later

00:02:29,360 --> 00:02:35,070
so where the point here is that I took

00:02:33,360 --> 00:02:36,810
my developer vitamins I learned

00:02:35,070 --> 00:02:38,520
something new and that's very fortunate

00:02:36,810 --> 00:02:42,900
because that's how I make my living

00:02:38,520 --> 00:02:45,930
today so after that my sweet sweet

00:02:42,900 --> 00:02:49,080
community so just that I learned testing

00:02:45,930 --> 00:02:52,070
I didn't know exactly what that entailed

00:02:49,080 --> 00:02:55,140
but I did know that it sounded scary and

00:02:52,070 --> 00:03:00,980
so I told them I would for sure

00:02:55,140 --> 00:03:05,130
completely learn that later on after not

00:03:00,980 --> 00:03:07,350
learning it at all so I kind of limped

00:03:05,130 --> 00:03:10,590
along like this like I absorbed a little

00:03:07,350 --> 00:03:14,040
bits and pieces of testing but mostly

00:03:10,590 --> 00:03:17,720
kind of ran away from testing until I

00:03:14,040 --> 00:03:20,640
got a fancy job that required testing

00:03:17,720 --> 00:03:22,680
and not like Sabrina the engineering

00:03:20,640 --> 00:03:24,900
manager is gonna be disappointed and you

00:03:22,680 --> 00:03:27,630
know if you don't do your tests but

00:03:24,900 --> 00:03:29,280
rather like you're gonna try to deploy

00:03:27,630 --> 00:03:30,140
and your deploy is gonna barf on your

00:03:29,280 --> 00:03:34,260
face

00:03:30,140 --> 00:03:35,519
Jenkins anyone the disapproving scowl of

00:03:34,260 --> 00:03:37,500
Jenkins

00:03:35,519 --> 00:03:39,299
it doesn't actually ever scowl if you've

00:03:37,500 --> 00:03:44,310
never used it was a very pleasant person

00:03:39,299 --> 00:03:47,090
ruining your day anyway so I took my

00:03:44,310 --> 00:03:52,320
medicine and something weird happened I

00:03:47,090 --> 00:03:54,690
got addicted to testing testing my code

00:03:52,320 --> 00:03:58,380
is the only thing that really makes

00:03:54,690 --> 00:04:00,060
sense to me now it's kind of like when

00:03:58,380 --> 00:04:02,340
you start eating kale because Michelle

00:04:00,060 --> 00:04:04,500
Obama was like hey let's super good for

00:04:02,340 --> 00:04:08,970
you and you just like want to make her

00:04:04,500 --> 00:04:10,530
proud and happy in her heart and then

00:04:08,970 --> 00:04:13,019
one day you go to a restaurant and you

00:04:10,530 --> 00:04:16,650
order a kale salad because it sounds

00:04:13,019 --> 00:04:19,799
good and then you think Michelle Obama

00:04:16,650 --> 00:04:21,750
you beautiful dynamic trickster because

00:04:19,799 --> 00:04:23,100
now you like kale which by the way if

00:04:21,750 --> 00:04:24,870
you want to know where my favorite kale

00:04:23,100 --> 00:04:26,990
salad is in San Diego you can let me

00:04:24,870 --> 00:04:31,080
know later and I'll totally tell you

00:04:26,990 --> 00:04:34,980
it's good kale is good what so that was

00:04:31,080 --> 00:04:40,080
me Riley was Michelle

00:04:34,980 --> 00:04:44,310
testing scale I was me because that

00:04:40,080 --> 00:04:46,850
makes sense and all of a sudden I wanted

00:04:44,310 --> 00:04:49,440
that disgusting vegetable that's true I

00:04:46,850 --> 00:04:51,030
think some of you like kale like from

00:04:49,440 --> 00:04:53,870
birth because no one's agreeing with me

00:04:51,030 --> 00:04:56,430
that it's actually revolting but anyway

00:04:53,870 --> 00:04:58,950
so one day I realized it had been a

00:04:56,430 --> 00:05:01,230
while since I had looked at the 5 up

00:04:58,950 --> 00:05:04,410
code and I should probably go in like

00:05:01,230 --> 00:05:06,270
Spurs stuff up a little bit so I opened

00:05:04,410 --> 00:05:09,240
it up and I was thinking like ok I'll

00:05:06,270 --> 00:05:11,040
upgrade to Python 3 and then I'll run

00:05:09,240 --> 00:05:14,040
the test and see what breaks then I'll

00:05:11,040 --> 00:05:17,520
go to fix oh my god like there was not a

00:05:14,040 --> 00:05:21,320
single test like not even like one

00:05:17,520 --> 00:05:24,540
little disgusting kale leaf to work with

00:05:21,320 --> 00:05:26,550
nothing which is like genuinely

00:05:24,540 --> 00:05:28,380
terrifying at this point and this was

00:05:26,550 --> 00:05:30,690
not going to work with me because I am

00:05:28,380 --> 00:05:32,180
now the testing spoiled monster you see

00:05:30,690 --> 00:05:35,610
before you

00:05:32,180 --> 00:05:37,740
so now that we've got Melanie the

00:05:35,610 --> 00:05:41,340
testing heroes origin story out of the

00:05:37,740 --> 00:05:43,410
way let's do this so the first thing

00:05:41,340 --> 00:05:45,330
we're gonna do is bring in some buddies

00:05:43,410 --> 00:05:47,880
because lord knows I should not be left

00:05:45,330 --> 00:05:50,400
to my own devices here and so here are

00:05:47,880 --> 00:05:56,310
the majors we're gonna install pi test

00:05:50,400 --> 00:05:58,230
and PI test Django selenium and PI test

00:05:56,310 --> 00:06:01,440
Cove these are handy because you can

00:05:58,230 --> 00:06:03,900
just pip install all of them PI test

00:06:01,440 --> 00:06:06,840
here is just kind of like a little bit

00:06:03,900 --> 00:06:09,450
of a sweeter way to use to do theis

00:06:06,840 --> 00:06:12,060
testing as compared to pythons built in

00:06:09,450 --> 00:06:13,800
unit tests you can google that and look

00:06:12,060 --> 00:06:16,590
at all the wonders of it but you can

00:06:13,800 --> 00:06:18,770
trust me on that also PI tests Django

00:06:16,590 --> 00:06:22,200
makes pie tests play nicely with Django

00:06:18,770 --> 00:06:24,980
selenium is going to allow our tests to

00:06:22,200 --> 00:06:26,580
pretend to be a user in a live browser

00:06:24,980 --> 00:06:29,160
it's very amazing

00:06:26,580 --> 00:06:31,950
and then lastly my favorite magic here

00:06:29,160 --> 00:06:34,470
is PI test Cove which is going to show

00:06:31,950 --> 00:06:36,690
us which code we've tested in which we

00:06:34,470 --> 00:06:39,740
haven't so let's talk about that last

00:06:36,690 --> 00:06:39,740
one for just a mo

00:06:40,790 --> 00:06:46,589
pi test curve

00:06:43,409 --> 00:06:50,099
is a plugin that implements coverage

00:06:46,589 --> 00:06:52,409
shop hi in a way that like works nicely

00:06:50,099 --> 00:06:56,279
with PI test which is why it's PI test

00:06:52,409 --> 00:06:59,249
code coverage top high is a tool for

00:06:56,279 --> 00:07:03,209
measuring how much of your code is run

00:06:59,249 --> 00:07:06,149
when your tests are run this is what I

00:07:03,209 --> 00:07:07,649
mean when I say code coverage in case

00:07:06,149 --> 00:07:10,939
some of you were like stop just saying

00:07:07,649 --> 00:07:14,719
words on us geez so but you want to be a

00:07:10,939 --> 00:07:17,669
little bit cautious here though because

00:07:14,719 --> 00:07:20,429
PI test curve is only going to tell you

00:07:17,669 --> 00:07:21,839
that your code is being executed it's

00:07:20,429 --> 00:07:24,269
not going to tell you that you are

00:07:21,839 --> 00:07:26,819
executing it in a way that is all at all

00:07:24,269 --> 00:07:31,289
reasonable so you can think of it as a

00:07:26,819 --> 00:07:33,419
guide as in a ruler not a guide like a

00:07:31,289 --> 00:07:35,909
wilderness guide who's going to tell you

00:07:33,419 --> 00:07:38,969
that you're gonna put a bee's nest thing

00:07:35,909 --> 00:07:42,329
on your face I don't think everyone

00:07:38,969 --> 00:07:44,550
hikes the way I hike anyway but the

00:07:42,329 --> 00:07:47,669
measurement itself is pretty cool in

00:07:44,550 --> 00:07:50,369
handy so before we begin writing any

00:07:47,669 --> 00:07:52,139
tests we are going to try to get an idea

00:07:50,369 --> 00:07:55,199
of what we're up against and we can do

00:07:52,139 --> 00:07:59,490
that using PI test curve this command

00:07:55,199 --> 00:08:01,909
here runs PI test it asks for a coverage

00:07:59,490 --> 00:08:06,209
report to blueprint into the terminal

00:08:01,909 --> 00:08:07,439
and then it asks basically PI tests to

00:08:06,209 --> 00:08:09,569
skip over anything that's already

00:08:07,439 --> 00:08:11,969
covered 100% so if there's a file that's

00:08:09,569 --> 00:08:14,219
already covered it just ignores it and

00:08:11,969 --> 00:08:19,139
then it's also going to print out the

00:08:14,219 --> 00:08:21,179
exact lines that were not run for us so

00:08:19,139 --> 00:08:24,119
you can see at this point that our

00:08:21,179 --> 00:08:26,339
coverage is pretty abysmal and whatever

00:08:24,119 --> 00:08:28,979
coverage we do have is probably just

00:08:26,339 --> 00:08:31,169
because it's an empty file like an empty

00:08:28,979 --> 00:08:33,659
and knit PI file would fall into that

00:08:31,169 --> 00:08:37,139
example so our code coverage is

00:08:33,659 --> 00:08:39,539
currently at 28% leaving 72 percent of

00:08:37,139 --> 00:08:41,849
our code untested and able to eat our

00:08:39,539 --> 00:08:44,339
users when we're not looking which is

00:08:41,849 --> 00:08:47,970
not ideal at just in case anyone was

00:08:44,339 --> 00:08:50,639
doing that eating the user thing so

00:08:47,970 --> 00:08:52,110
testing isn't going to help us like it's

00:08:50,639 --> 00:08:54,180
not going to avoid all of the bugs you

00:08:52,110 --> 00:08:56,760
can't catch everything but it is helpful

00:08:54,180 --> 00:08:59,029
to push us in the right direction

00:08:56,760 --> 00:09:01,949
so now that we've got all of our tools

00:08:59,029 --> 00:09:05,970
let's write our first test it's gonna be

00:09:01,949 --> 00:09:07,350
a functional test so there's a couple of

00:09:05,970 --> 00:09:11,850
words that you'll hear thrown around

00:09:07,350 --> 00:09:13,949
with testing and Jago specifically and

00:09:11,850 --> 00:09:17,339
the terms that you'll hear are

00:09:13,949 --> 00:09:18,930
functional tests and unit tests we're

00:09:17,339 --> 00:09:21,060
gonna get to unit tests a little bit

00:09:18,930 --> 00:09:24,449
later but here's what I want to say

00:09:21,060 --> 00:09:27,440
about functional tests they have nothing

00:09:24,449 --> 00:09:31,110
to do with functions as in like def

00:09:27,440 --> 00:09:33,720
fancy thing functions are very common in

00:09:31,110 --> 00:09:35,459
Python so it makes sense that you would

00:09:33,720 --> 00:09:37,019
think like a functional test has

00:09:35,459 --> 00:09:38,550
something to do with my functions but

00:09:37,019 --> 00:09:42,839
surprise they don't and everything's

00:09:38,550 --> 00:09:45,540
confusing yay so here's what functional

00:09:42,839 --> 00:09:48,209
tests are about it's kind of asking the

00:09:45,540 --> 00:09:51,360
question does my code do what I intended

00:09:48,209 --> 00:09:54,810
to do does it function at all right

00:09:51,360 --> 00:09:56,639
and since we're working in Jango a good

00:09:54,810 --> 00:09:58,680
example of this would be asking like

00:09:56,639 --> 00:10:01,769
okay if I visit this page and I click

00:09:58,680 --> 00:10:08,730
this thing does it do what I anticipate

00:10:01,769 --> 00:10:11,279
it will do right without testing you're

00:10:08,730 --> 00:10:13,170
forced to kind of you know maybe you

00:10:11,279 --> 00:10:16,709
spin up your server go visit the site

00:10:13,170 --> 00:10:18,660
right and click everything you know just

00:10:16,709 --> 00:10:20,250
see what happens but you also better

00:10:18,660 --> 00:10:22,410
hope that you're gonna click everything

00:10:20,250 --> 00:10:24,180
that your user will click and in the

00:10:22,410 --> 00:10:26,339
ways that they will click it which

00:10:24,180 --> 00:10:28,260
interestingly enough users are

00:10:26,339 --> 00:10:30,930
especially adept at finding the one

00:10:28,260 --> 00:10:33,019
thing that you did not click it's up to

00:10:30,930 --> 00:10:35,310
you if that's what you want to do but

00:10:33,019 --> 00:10:39,050
I'm gonna say pass on that one

00:10:35,310 --> 00:10:42,569
so we are going to manually ditch the

00:10:39,050 --> 00:10:44,910
clicking around and automate it instead

00:10:42,569 --> 00:10:46,350
because we are lazy smart which is a

00:10:44,910 --> 00:10:49,829
term that I've come up with it you're

00:10:46,350 --> 00:10:51,269
welcome to put on your resume we're

00:10:49,829 --> 00:10:54,120
going to start with a super basic test

00:10:51,269 --> 00:10:56,399
and if we kind of look around here at

00:10:54,120 --> 00:10:58,740
the code we're gonna see that if our

00:10:56,399 --> 00:11:01,529
site is functioning properly we should

00:10:58,740 --> 00:11:05,490
be able to find the title page and find

00:11:01,529 --> 00:11:08,430
some content so let's write a test to

00:11:05,490 --> 00:11:10,600
see if selenium one of the fancy tools

00:11:08,430 --> 00:11:14,350
that we installed can find them

00:11:10,600 --> 00:11:16,780
I do want to mention that selenium needs

00:11:14,350 --> 00:11:18,940
a little bit more set up with a thing

00:11:16,780 --> 00:11:21,550
called gecko driver and doing that can

00:11:18,940 --> 00:11:23,410
be like a little bit wobbly I don't have

00:11:21,550 --> 00:11:26,560
notes on it in this talk so you'll have

00:11:23,410 --> 00:11:29,410
to google it but once you set it up

00:11:26,560 --> 00:11:33,100
because you are brave and smart you will

00:11:29,410 --> 00:11:35,790
write tests kind of like this so here

00:11:33,100 --> 00:11:38,950
selenium is going to launch a browser

00:11:35,790 --> 00:11:40,240
visit the page and then poke around to

00:11:38,950 --> 00:11:42,520
see if it can find the elements that

00:11:40,240 --> 00:11:45,190
we're looking for I personally think

00:11:42,520 --> 00:11:46,300
this is amazing so in real life you'll

00:11:45,190 --> 00:11:49,540
be doing things that are much more

00:11:46,300 --> 00:11:52,300
complicated than this but this is a nice

00:11:49,540 --> 00:11:54,280
example to kind of get our bearings so

00:11:52,300 --> 00:11:56,320
PI tests this is one of the things I

00:11:54,280 --> 00:11:59,740
like about PI test is that you can just

00:11:56,320 --> 00:12:02,730
use the word assert so we're going to

00:11:59,740 --> 00:12:05,080
assert that 5up is in the browser title

00:12:02,730 --> 00:12:08,250
and then we're gonna look in the browser

00:12:05,080 --> 00:12:10,690
text to see if we can find how it works

00:12:08,250 --> 00:12:14,350
and then we're gonna look and see if we

00:12:10,690 --> 00:12:20,020
can find a link on the page called frog

00:12:14,350 --> 00:12:23,800
fart party rats our test failed you can

00:12:20,020 --> 00:12:25,960
see up at the top that we have an F and

00:12:23,800 --> 00:12:29,820
the reason it failed is because there is

00:12:25,960 --> 00:12:32,410
no link with a text frog fart party

00:12:29,820 --> 00:12:34,630
because that would be really weird and

00:12:32,410 --> 00:12:36,940
I'm a little surprised that some of you

00:12:34,630 --> 00:12:38,530
looked like that would be normal and you

00:12:36,940 --> 00:12:41,080
would expect me to have that on my

00:12:38,530 --> 00:12:44,350
website we just met and already your

00:12:41,080 --> 00:12:47,620
standards are really quite low so but if

00:12:44,350 --> 00:12:51,690
we take it out the test will pass which

00:12:47,620 --> 00:12:54,040
PI test expresses gleefully with a dot

00:12:51,690 --> 00:12:58,510
take that home and put it on your fridge

00:12:54,040 --> 00:13:02,020
so we'll see also that our coverage has

00:12:58,510 --> 00:13:03,910
gone up at this point which is great

00:13:02,020 --> 00:13:07,210
now the bits here where we're like

00:13:03,910 --> 00:13:08,680
setting up the driver and doing all the

00:13:07,210 --> 00:13:11,110
stuff like this is stuff that we will

00:13:08,680 --> 00:13:14,080
repeat and it will get laborious if we

00:13:11,110 --> 00:13:17,200
do it every time so let's set up a quick

00:13:14,080 --> 00:13:19,540
little helper here again don't remember

00:13:17,200 --> 00:13:22,060
about remembering this stuff like that's

00:13:19,540 --> 00:13:23,750
what Google's for right but this is

00:13:22,060 --> 00:13:26,180
going to be an important part

00:13:23,750 --> 00:13:27,500
our tests that we're going to do next so

00:13:26,180 --> 00:13:31,340
just kind of keep that in mind that

00:13:27,500 --> 00:13:34,490
we're doing some imports here from

00:13:31,340 --> 00:13:36,680
context live and Django and selenium and

00:13:34,490 --> 00:13:39,910
then we're gonna make a setup class and

00:13:36,680 --> 00:13:42,860
our class method rather and a teardown

00:13:39,910 --> 00:13:44,300
and so the point here with stuff like

00:13:42,860 --> 00:13:46,040
this is that we're gonna do a little bit

00:13:44,300 --> 00:13:50,150
of prep work and it's gonna allow us to

00:13:46,040 --> 00:13:52,700
power through tests later alrighty so

00:13:50,150 --> 00:13:55,760
this wee little tests is going to check

00:13:52,700 --> 00:13:58,520
and see if we can log in so it's kind of

00:13:55,760 --> 00:14:01,730
important that your users can log in and

00:13:58,520 --> 00:14:04,310
the nice thing about this is that it's

00:14:01,730 --> 00:14:06,170
gonna hit our HTML page right so the

00:14:04,310 --> 00:14:08,210
page has to exist we have to know that

00:14:06,170 --> 00:14:10,610
it renders but it's also going to hit

00:14:08,210 --> 00:14:11,930
this form and it's gonna have to

00:14:10,610 --> 00:14:13,490
interact with the user

00:14:11,930 --> 00:14:16,090
so there's several things that we're

00:14:13,490 --> 00:14:18,470
testing all at once which is pretty nice

00:14:16,090 --> 00:14:20,900
and it kind of illustrates the power of

00:14:18,470 --> 00:14:24,020
testing because if I change my CSS code

00:14:20,900 --> 00:14:25,640
I should still be able to interact with

00:14:24,020 --> 00:14:27,890
the form right the form shouldn't just

00:14:25,640 --> 00:14:30,290
blow up because I made it purple and

00:14:27,890 --> 00:14:32,180
same thing with our users so kind of

00:14:30,290 --> 00:14:36,350
cool so stepping through the code will

00:14:32,180 --> 00:14:39,400
see that we made a user here and then we

00:14:36,350 --> 00:14:44,210
set up the browser that we set up in our

00:14:39,400 --> 00:14:47,600
utility and then we're going to find the

00:14:44,210 --> 00:14:50,030
username field and selenium allows you

00:14:47,600 --> 00:14:52,130
to enter an email address in there which

00:14:50,030 --> 00:14:54,640
is pretty cool and then we'll find the

00:14:52,130 --> 00:15:00,230
password element and do the same thing

00:14:54,640 --> 00:15:02,390
and then we can click Submit and then if

00:15:00,230 --> 00:15:05,360
all of that worked properly we should be

00:15:02,390 --> 00:15:09,110
able to find hi username in the text and

00:15:05,360 --> 00:15:11,240
if it does what are you two dots

00:15:09,110 --> 00:15:16,580
holy smokes we're gonna need a bigger

00:15:11,240 --> 00:15:20,300
refrigerator so this is why to me it's

00:15:16,580 --> 00:15:21,560
so disturbing to not have tests because

00:15:20,300 --> 00:15:23,660
without them you just kind of have to

00:15:21,560 --> 00:15:25,910
hope that would ever change you made

00:15:23,660 --> 00:15:28,370
didn't break anything and as your

00:15:25,910 --> 00:15:30,140
project grows and it's getting larger if

00:15:28,370 --> 00:15:32,450
you don't have tests and you really have

00:15:30,140 --> 00:15:35,150
to start to rely on yourself to be some

00:15:32,450 --> 00:15:37,100
kind of like super I'm gonna mega

00:15:35,150 --> 00:15:40,430
developer or whatever

00:15:37,100 --> 00:15:43,580
and I know that that's not me um that

00:15:40,430 --> 00:15:46,130
might be you all so let's not talk later

00:15:43,580 --> 00:15:47,930
cuz I don't like you already just

00:15:46,130 --> 00:15:51,080
kidding you can be smart all you want

00:15:47,930 --> 00:15:52,670
but also please let's not talk anyway at

00:15:51,080 --> 00:15:56,990
least not about code we can talk about

00:15:52,670 --> 00:16:03,500
cats I'm giving a talk here about stuff

00:15:56,990 --> 00:16:04,940
here we go so now when we run our tests

00:16:03,500 --> 00:16:07,580
with that command that we did earlier

00:16:04,940 --> 00:16:10,130
you can see that we've really bumped up

00:16:07,580 --> 00:16:12,200
the coverage here and then now we'll

00:16:10,130 --> 00:16:14,990
just go back and see what else isn't

00:16:12,200 --> 00:16:17,720
covered and work on that so let's move

00:16:14,990 --> 00:16:19,010
on to unit tests now the phrase unit

00:16:17,720 --> 00:16:20,830
tests made me think that there was

00:16:19,010 --> 00:16:24,560
something in Python they called a unit

00:16:20,830 --> 00:16:26,180
like maybe it's a like entire Python

00:16:24,560 --> 00:16:31,100
file or it's a function or it's

00:16:26,180 --> 00:16:33,830
something but it doesn't mean that what

00:16:31,100 --> 00:16:37,070
it really means is like chunk testing or

00:16:33,830 --> 00:16:39,020
you know it's testing or niblet

00:16:37,070 --> 00:16:44,860
testing just like a bit like we're gonna

00:16:39,020 --> 00:16:48,290
test a bit of code splotch a blob scrap

00:16:44,860 --> 00:16:50,900
a morsel anyone else can join in here a

00:16:48,290 --> 00:16:52,070
bang that's the thing did you know that

00:16:50,900 --> 00:16:57,350
an apportionment

00:16:52,070 --> 00:17:00,770
I like that thesaurus really cool anyway

00:16:57,350 --> 00:17:02,090
so um also names are completely

00:17:00,770 --> 00:17:04,420
arbitrary and nothing means anything

00:17:02,090 --> 00:17:06,620
because everyone argues about what

00:17:04,420 --> 00:17:09,050
functional test is and what a unit test

00:17:06,620 --> 00:17:10,459
is so whatever we decide here someone

00:17:09,050 --> 00:17:11,839
outside especially that super

00:17:10,459 --> 00:17:16,459
knowledgeable developer is going to

00:17:11,839 --> 00:17:18,680
argue with us about it so they argue

00:17:16,459 --> 00:17:20,030
about unit tests and in functional tests

00:17:18,680 --> 00:17:23,060
and we can use all of these words

00:17:20,030 --> 00:17:25,790
there's also end-to-end tests structural

00:17:23,060 --> 00:17:30,920
tests pregnancy tests and integration

00:17:25,790 --> 00:17:33,920
tests and cake testers not all of those

00:17:30,920 --> 00:17:36,320
are related but you know at any rate

00:17:33,920 --> 00:17:39,560
don't try to know stuff like that's the

00:17:36,320 --> 00:17:40,220
point here knowing stuff is impossible I

00:17:39,560 --> 00:17:43,930
mean look at that

00:17:40,220 --> 00:17:49,000
like sad really dapper man like he's so

00:17:43,930 --> 00:17:50,570
so confused like let's just do stuff so

00:17:49,000 --> 00:17:53,090
I'm going to think

00:17:50,570 --> 00:17:54,259
of unit tests as making sure like the

00:17:53,090 --> 00:17:56,200
models and the functions in the

00:17:54,259 --> 00:17:59,059
behind-the-scenes stuff works properly

00:17:56,200 --> 00:18:00,889
so in five ups case one of the things

00:17:59,059 --> 00:18:04,039
that happens without the user knowing

00:18:00,889 --> 00:18:05,870
about it is schedule a scheduling works

00:18:04,039 --> 00:18:08,389
in five up in two ways

00:18:05,870 --> 00:18:10,130
we at the beginning of every day take

00:18:08,389 --> 00:18:12,230
all of the users and separate them into

00:18:10,130 --> 00:18:15,100
three groups and then each one of those

00:18:12,230 --> 00:18:19,159
groups get a different sending schedule

00:18:15,100 --> 00:18:21,080
now I did this because I didn't want

00:18:19,159 --> 00:18:23,210
like a bunch of five users to be at a

00:18:21,080 --> 00:18:24,710
table and I'll get five up users and

00:18:23,210 --> 00:18:26,450
they all get their messages at the same

00:18:24,710 --> 00:18:28,279
time he's five o'clock and they're like

00:18:26,450 --> 00:18:29,720
oh they're five phones vibrate in their

00:18:28,279 --> 00:18:31,460
line and that's boring that's our five

00:18:29,720 --> 00:18:34,940
of thing and then it like takes the

00:18:31,460 --> 00:18:36,799
magic out of it right also we like

00:18:34,940 --> 00:18:40,340
novelty as humans so I was trying to

00:18:36,799 --> 00:18:43,399
really play up to that one anyway that's

00:18:40,340 --> 00:18:46,909
what's going on so if my code is working

00:18:43,399 --> 00:18:49,730
properly and I give it 10 users when I

00:18:46,909 --> 00:18:51,830
run a divided users function that I've

00:18:49,730 --> 00:18:56,720
created it should give me three groups

00:18:51,830 --> 00:19:02,269
back with two of the groups having three

00:18:56,720 --> 00:19:05,600
users and one having four users so if we

00:19:02,269 --> 00:19:08,090
test that what we'll do is make a

00:19:05,600 --> 00:19:10,250
handful of users Django's is gonna throw

00:19:08,090 --> 00:19:12,190
these in a test database and then toss

00:19:10,250 --> 00:19:14,809
them out when we're done which is great

00:19:12,190 --> 00:19:18,679
and then we're going to call the divide

00:19:14,809 --> 00:19:21,139
users function on those users with those

00:19:18,679 --> 00:19:24,289
users as an argument and then at the

00:19:21,139 --> 00:19:26,779
bottom will assert how many should be in

00:19:24,289 --> 00:19:29,509
each group and if we add up all of the

00:19:26,779 --> 00:19:30,860
users they should it should equal the

00:19:29,509 --> 00:19:34,820
same number of users that are in the

00:19:30,860 --> 00:19:37,450
database if the tests pass then we know

00:19:34,820 --> 00:19:43,730
that where our code is working properly

00:19:37,450 --> 00:19:46,210
and that like we're kind of awesome what

00:19:43,730 --> 00:19:46,210
now

00:19:48,190 --> 00:19:56,510
napping cuz all that was really hard and

00:19:51,710 --> 00:19:57,740
then we do more of the same stuff we

00:19:56,510 --> 00:20:00,050
should think about what could go wrong

00:19:57,740 --> 00:20:02,660
and test for that and we'll think about

00:20:00,050 --> 00:20:05,780
what can go right and test for that also

00:20:02,660 --> 00:20:08,030
and with lots of kindness and generosity

00:20:05,780 --> 00:20:10,970
toward ourselves because we will not

00:20:08,030 --> 00:20:13,550
always get it right we look through and

00:20:10,970 --> 00:20:16,550
try to test everything that we can test

00:20:13,550 --> 00:20:19,850
for dream it all up and see what we can

00:20:16,550 --> 00:20:23,830
do aim for 100% test coverage and when

00:20:19,850 --> 00:20:26,540
you get there you're done for forever

00:20:23,830 --> 00:20:29,990
unless you add any features at all or

00:20:26,540 --> 00:20:31,910
anything ever changes but other than

00:20:29,990 --> 00:20:36,050
that you're totally done forever yay for

00:20:31,910 --> 00:20:39,950
you okay let's go over what we've

00:20:36,050 --> 00:20:43,550
learned first of all we've got some good

00:20:39,950 --> 00:20:46,880
tools that are gonna help us pi test pi

00:20:43,550 --> 00:20:49,570
test curve selenium and pi test Django

00:20:46,880 --> 00:20:52,220
all super awesome tools and resources

00:20:49,570 --> 00:20:55,190
second thing we learned is that using

00:20:52,220 --> 00:20:57,410
coverage can help reveal spots that you

00:20:55,190 --> 00:21:02,210
haven't tested and help you get your

00:20:57,410 --> 00:21:04,910
footing third selenium lets us

00:21:02,210 --> 00:21:10,090
impersonate a user quickly and lazily

00:21:04,910 --> 00:21:12,620
which the best way to do anything for us

00:21:10,090 --> 00:21:15,080
people use words like functional tests

00:21:12,620 --> 00:21:17,120
and unit tests in a variety of ways but

00:21:15,080 --> 00:21:19,309
the important thing to note is that we

00:21:17,120 --> 00:21:21,590
want our websites and our code to work

00:21:19,309 --> 00:21:23,390
in the way that we as developers would

00:21:21,590 --> 00:21:27,220
expect them to work and also in the ways

00:21:23,390 --> 00:21:27,220
that our users would expect them to work

00:21:27,490 --> 00:21:34,550
also Michelle Obama is amazing and she

00:21:30,410 --> 00:21:37,220
should totally be my best friend the

00:21:34,550 --> 00:21:39,860
last thing that I want to say is that I

00:21:37,220 --> 00:21:44,510
wish someone had told me the real

00:21:39,860 --> 00:21:47,929
benefits of testing which is mental

00:21:44,510 --> 00:21:52,429
freedom and a safety net to know that I

00:21:47,929 --> 00:21:54,170
can try new things and I have this kind

00:21:52,429 --> 00:21:58,100
of tool that will keep me on track and

00:21:54,170 --> 00:21:59,809
bolster my confidence and it's work like

00:21:58,100 --> 00:22:01,880
I'm not going to lie about that

00:21:59,809 --> 00:22:04,190
and I didn't even get into

00:22:01,880 --> 00:22:06,500
walking and fixtures which are a genuine

00:22:04,190 --> 00:22:12,560
nightmare and I'm going to really get

00:22:06,500 --> 00:22:15,500
good at them later on but it's really

00:22:12,560 --> 00:22:17,930
really worth it so if you've been

00:22:15,500 --> 00:22:20,960
waiting for some kind of magical time to

00:22:17,930 --> 00:22:24,700
decide to learn testing I really really

00:22:20,960 --> 00:22:29,490
hope it's now thank you

00:22:24,700 --> 00:22:42,799
[Applause]

00:22:29,490 --> 00:22:42,799

YouTube URL: https://www.youtube.com/watch?v=wvrr9-UUBn0


