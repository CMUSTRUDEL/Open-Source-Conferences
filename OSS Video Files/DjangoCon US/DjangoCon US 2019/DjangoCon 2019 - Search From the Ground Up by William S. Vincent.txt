Title: DjangoCon 2019 - Search From the Ground Up by William S. Vincent
Publication date: 2019-10-25
Playlist: DjangoCon US 2019
Description: 
	DjangoCon 2019 - Search From the Ground Up by William S. Vincent

Search is notoriously hard. Even a basic implementation trips up many beginners while advanced search is PhD-level complex.

This is a bottoms-up look at how to add increasing levels of search to any Django site. From filters and Q objects to Postgres full text search and beyond we'll cover it all.

This talk was presented at: https://2019.djangocon.us/talks/search-from-the-ground-up/

LINKS:
Follow William S. Vincent ğŸ‘‡
On Twitter: https://twitter.com/wsv3000
Official homepage: https://wsvincent.com/

Follow DjangCon US ğŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ğŸ‘‡
https://twitter.com/defnado
https://www.defna.org/

Intro music: "This Is How We Quirk It" by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.
Captions: 
	00:00:00,000 --> 00:00:12,679
[Music]

00:00:14,260 --> 00:00:19,010
hi everyone thanks for being here so

00:00:17,210 --> 00:00:21,080
this is a talk on search it's a

00:00:19,010 --> 00:00:23,150
practical hands-on introduction to

00:00:21,080 --> 00:00:25,310
search in Django and it's basically

00:00:23,150 --> 00:00:27,470
everything I can cram into 25 minutes so

00:00:25,310 --> 00:00:28,960
I might go a little fast but thank you

00:00:27,470 --> 00:00:32,090
for being here the last one of the day

00:00:28,960 --> 00:00:33,559
so I mean explain how search works how

00:00:32,090 --> 00:00:35,660
to implement basic search there's going

00:00:33,559 --> 00:00:37,879
to be code full text search using

00:00:35,660 --> 00:00:40,220
Postgres which is built into Django and

00:00:37,879 --> 00:00:42,350
then touch upon more advanced options

00:00:40,220 --> 00:00:43,610
like elastic search so if you don't know

00:00:42,350 --> 00:00:45,260
anything about search you're gonna walk

00:00:43,610 --> 00:00:48,199
away understanding how it works how to

00:00:45,260 --> 00:00:49,339
implement it in Django as well as maybe

00:00:48,199 --> 00:00:52,339
some thoughts about how to think about

00:00:49,339 --> 00:00:54,260
it in your large-scale projects but so

00:00:52,339 --> 00:00:57,080
why search so this is the experience I

00:00:54,260 --> 00:00:59,089
had personally with adding search almost

00:00:57,080 --> 00:01:01,280
every modern website needs search and

00:00:59,089 --> 00:01:03,110
Django despite being batteries included

00:01:01,280 --> 00:01:05,900
doesn't have search it's up to the

00:01:03,110 --> 00:01:07,610
developer so there's no hand-holding and

00:01:05,900 --> 00:01:09,380
there really isn't a dominant third

00:01:07,610 --> 00:01:10,280
party package there was Django haystack

00:01:09,380 --> 00:01:12,650
which still works

00:01:10,280 --> 00:01:14,659
I used it professionally but now with

00:01:12,650 --> 00:01:16,579
Postgres there's some other options but

00:01:14,659 --> 00:01:18,079
it's really sort of a you build your

00:01:16,579 --> 00:01:20,450
site in Django and then you go I need

00:01:18,079 --> 00:01:22,039
search how do I do that

00:01:20,450 --> 00:01:24,070
so this happened to me my first major

00:01:22,039 --> 00:01:25,700
site was a school search site so

00:01:24,070 --> 00:01:27,250
kindergarten through twelfth grade

00:01:25,700 --> 00:01:30,530
schools in United States

00:01:27,250 --> 00:01:32,179
120,000 rows so that's not that big on

00:01:30,530 --> 00:01:34,520
the spectrum but search was pretty

00:01:32,179 --> 00:01:36,859
important for a school search site and I

00:01:34,520 --> 00:01:38,630
was utterly lost by all this and I think

00:01:36,859 --> 00:01:40,609
it's because to know how to do search

00:01:38,630 --> 00:01:42,140
you have to understand Django probably

00:01:40,609 --> 00:01:43,579
an intermediate level you have to know

00:01:42,140 --> 00:01:46,969
forms you have to understand how to pass

00:01:43,579 --> 00:01:48,380
logic filtering and so I was totally

00:01:46,969 --> 00:01:50,600
overwhelmed and then you learned that

00:01:48,380 --> 00:01:52,520
search is really really really hard how

00:01:50,600 --> 00:01:55,369
to do to do well so there's all these

00:01:52,520 --> 00:01:58,579
levels to it and you know if you're on

00:01:55,369 --> 00:02:00,140
an e-commerce site search is probably

00:01:58,579 --> 00:02:02,390
the most important thing so it's good to

00:02:00,140 --> 00:02:04,249
get it done well okay that worked great

00:02:02,390 --> 00:02:07,219
so there's working code examples I'll

00:02:04,249 --> 00:02:10,069
have a link to this at the end for the

00:02:07,219 --> 00:02:13,580
basic search and full text postcard

00:02:10,069 --> 00:02:15,590
search so very quickly I'm the author of

00:02:13,580 --> 00:02:17,420
three books on Django I co-host a weekly

00:02:15,590 --> 00:02:18,980
podcast called Django chat with Carlton

00:02:17,420 --> 00:02:20,569
Gibson that actually came about because

00:02:18,980 --> 00:02:22,430
last year was my first time at Django

00:02:20,569 --> 00:02:23,670
con and I had so many good chats with

00:02:22,430 --> 00:02:26,460
people that I

00:02:23,670 --> 00:02:27,810
to replicate that we have an interview

00:02:26,460 --> 00:02:29,640
with David Hannum IRA Hansen coming out

00:02:27,810 --> 00:02:31,230
tomorrow and I have a personal site

00:02:29,640 --> 00:02:33,270
writing about Django so the last two

00:02:31,230 --> 00:02:34,830
years I've been able to work full time

00:02:33,270 --> 00:02:37,740
on teaching Gengo which is pretty

00:02:34,830 --> 00:02:39,390
awesome for me okay so this is kind of

00:02:37,740 --> 00:02:42,420
the journey we're gonna go on where we

00:02:39,390 --> 00:02:44,100
have basic search which is filters you

00:02:42,420 --> 00:02:45,510
can do Q objects we'll get into that I

00:02:44,100 --> 00:02:48,240
would say the next step would be

00:02:45,510 --> 00:02:50,310
Postgres built-in full-text search and

00:02:48,240 --> 00:02:52,890
then after that you have hosted

00:02:50,310 --> 00:02:54,900
solutions so there are many here is just

00:02:52,890 --> 00:02:57,300
to algo Lea is fantastic

00:02:54,900 --> 00:02:59,190
swift type is hosted elasticsearch and

00:02:57,300 --> 00:03:00,570
then you have really the full-blown

00:02:59,190 --> 00:03:04,320
services where you're spinning up your

00:03:00,570 --> 00:03:05,370
own servers elastic and solar so that's

00:03:04,320 --> 00:03:06,510
kind of the progression and I would

00:03:05,370 --> 00:03:08,430
suggest that you baby step your way

00:03:06,510 --> 00:03:11,010
along this it's tempting to just jump to

00:03:08,430 --> 00:03:14,040
elastic and you may well need that but

00:03:11,010 --> 00:03:15,959
is a lot to do and do well so as with

00:03:14,040 --> 00:03:17,600
many things don't add stuff you don't

00:03:15,959 --> 00:03:19,830
need until you really need it

00:03:17,600 --> 00:03:21,420
all right so this is how certainly for a

00:03:19,830 --> 00:03:23,280
beginner this is how search looks it's

00:03:21,420 --> 00:03:26,519
just all magic you have no idea how it's

00:03:23,280 --> 00:03:28,769
working and if you think about it it's

00:03:26,519 --> 00:03:30,090
really you have a forum and forums turn

00:03:28,769 --> 00:03:31,620
out to be pretty complicated and kind of

00:03:30,090 --> 00:03:33,989
hard and scary once we understand web

00:03:31,620 --> 00:03:35,310
security the magic is how do you pass

00:03:33,989 --> 00:03:38,370
the query if you've never done that

00:03:35,310 --> 00:03:39,510
before that's that's just the scary part

00:03:38,370 --> 00:03:40,709
and there's a lot of different ways to

00:03:39,510 --> 00:03:42,420
do it I'm going to show you what I think

00:03:40,709 --> 00:03:44,670
is an elegant way to do it but there's a

00:03:42,420 --> 00:03:46,410
lot of different ways to pass that and

00:03:44,670 --> 00:03:48,150
then the results so if it looks like a

00:03:46,410 --> 00:03:50,670
list view that's because it basically is

00:03:48,150 --> 00:03:52,079
a filtered list view and I'm going to

00:03:50,670 --> 00:03:54,299
show you how to do that and if you

00:03:52,079 --> 00:03:55,980
notice like I've typed in Massachusetts

00:03:54,299 --> 00:03:58,079
here and the results have ma which is

00:03:55,980 --> 00:03:59,579
the abbreviations if you think about it

00:03:58,079 --> 00:04:02,459
how did it know that Massachusetts map

00:03:59,579 --> 00:04:04,470
to MA it wouldn't know that just based

00:04:02,459 --> 00:04:06,840
on a query so that's the kind of thing

00:04:04,470 --> 00:04:08,100
if you haven't implemented search before

00:04:06,840 --> 00:04:09,810
you just take for granted that

00:04:08,100 --> 00:04:12,690
everything is Google but Google is

00:04:09,810 --> 00:04:14,790
really good for a reason and so you know

00:04:12,690 --> 00:04:17,729
basic search you'd have to add some good

00:04:14,790 --> 00:04:21,450
logic to map a full name to the

00:04:17,729 --> 00:04:22,710
abbreviation abbreviation okay so I'm

00:04:21,450 --> 00:04:24,120
gonna walk through quickly how to start

00:04:22,710 --> 00:04:25,650
a new project from scratch because I'm a

00:04:24,120 --> 00:04:28,770
big believer and not err dropping people

00:04:25,650 --> 00:04:30,690
into existing code bases but I'm gonna

00:04:28,770 --> 00:04:32,099
go a little bit fast on this this is one

00:04:30,690 --> 00:04:33,990
way to do it it's how I like to do it

00:04:32,099 --> 00:04:37,240
multiple ways to do it but this works

00:04:33,990 --> 00:04:40,180
for me so we first we got to set it up

00:04:37,240 --> 00:04:42,250
so we're gonna install Gengo you know

00:04:40,180 --> 00:04:44,050
pip em I like it you could use pip it

00:04:42,250 --> 00:04:45,849
really doesn't matter TIFF em shell

00:04:44,050 --> 00:04:47,530
start your virtual environment start the

00:04:45,849 --> 00:04:50,410
project we're calling it City search

00:04:47,530 --> 00:04:52,330
project I've added the period this is an

00:04:50,410 --> 00:04:53,349
optional one that can trip people up if

00:04:52,330 --> 00:04:55,840
you don't add it

00:04:53,349 --> 00:04:57,789
Jango will create a additional directory

00:04:55,840 --> 00:04:59,050
I like to add the period just not to

00:04:57,789 --> 00:05:00,849
have that redundancy and I find

00:04:59,050 --> 00:05:03,460
deployments a little bit easier it's an

00:05:00,849 --> 00:05:04,419
optional one but in my books this is

00:05:03,460 --> 00:05:05,470
something where people say it's not

00:05:04,419 --> 00:05:06,880
working it's because they missed the

00:05:05,470 --> 00:05:09,340
period even though I said use the period

00:05:06,880 --> 00:05:12,789
so that's a be aware if you're a

00:05:09,340 --> 00:05:14,590
beginner about that migrate the database

00:05:12,789 --> 00:05:17,009
to initialize it and then we're starting

00:05:14,590 --> 00:05:19,479
an app called cities it's pretty basic

00:05:17,009 --> 00:05:20,800
you know as you this room probably knows

00:05:19,479 --> 00:05:22,389
just because we added the app doesn't

00:05:20,800 --> 00:05:25,120
mean Django knows about it until we add

00:05:22,389 --> 00:05:27,490
it into the settings file and this long

00:05:25,120 --> 00:05:29,169
example there's an app config file now

00:05:27,490 --> 00:05:30,520
so you could just call it cities and

00:05:29,169 --> 00:05:32,380
that would work but you're missing out

00:05:30,520 --> 00:05:34,780
on a lot of extra goodies so as a best

00:05:32,380 --> 00:05:36,190
practice do the full name add it at the

00:05:34,780 --> 00:05:38,289
bottom it's going to load top to bottom

00:05:36,190 --> 00:05:41,620
and you would want things like admin and

00:05:38,289 --> 00:05:43,599
stuff there on top most of the time okay

00:05:41,620 --> 00:05:46,509
models this is a very basic model we

00:05:43,599 --> 00:05:49,120
just have name and state I've added a

00:05:46,509 --> 00:05:51,280
meta class because by default Django

00:05:49,120 --> 00:05:52,870
we'll just toss an S on it to make it

00:05:51,280 --> 00:05:54,400
plural so cities with an S is wrong

00:05:52,870 --> 00:05:57,849
there's a lot of different ways you can

00:05:54,400 --> 00:05:58,960
configure meta this is one of them so I

00:05:57,849 --> 00:06:02,349
suggest you look into meta if you

00:05:58,960 --> 00:06:04,539
haven't okay we migrated this is another

00:06:02,349 --> 00:06:06,849
one I like to add the app name on make

00:06:04,539 --> 00:06:08,289
migrations because if you don't it will

00:06:06,849 --> 00:06:10,360
migrate all the things that have changed

00:06:08,289 --> 00:06:11,919
so if I had two apps right now it would

00:06:10,360 --> 00:06:14,740
put both of them in the migrations file

00:06:11,919 --> 00:06:17,289
and that makes it a lot harder post talk

00:06:14,740 --> 00:06:19,349
to go through and debug things so I like

00:06:17,289 --> 00:06:22,930
to always keep them as small as possible

00:06:19,349 --> 00:06:25,389
migrate it create super user you guys

00:06:22,930 --> 00:06:27,550
know how to do that and then admin you

00:06:25,389 --> 00:06:29,380
have to update the admin this is pretty

00:06:27,550 --> 00:06:32,800
basic but if you don't add the admin it

00:06:29,380 --> 00:06:34,360
also won't show up and then this is what

00:06:32,800 --> 00:06:37,000
the data we're working with so just four

00:06:34,360 --> 00:06:38,620
states pretty basic I'll show it to you

00:06:37,000 --> 00:06:45,339
and we're gonna do search and filtering

00:06:38,620 --> 00:06:46,960
on this okay let me just update this so

00:06:45,339 --> 00:06:50,710
I can see a little better so as a

00:06:46,960 --> 00:06:51,160
teacher this is what people have trouble

00:06:50,710 --> 00:06:53,050
with

00:06:51,160 --> 00:06:55,300
with Django understanding that you need

00:06:53,050 --> 00:06:57,730
four files and would ever order to have

00:06:55,300 --> 00:06:59,260
one webpage if they've never used a web

00:06:57,730 --> 00:07:00,640
framework before this is a really tough

00:06:59,260 --> 00:07:02,560
one and they're gonna blame Django for

00:07:00,640 --> 00:07:04,120
it even though it's just kind of how it

00:07:02,560 --> 00:07:06,370
is if they've used rails or an MVC

00:07:04,120 --> 00:07:08,050
framework it'll make more sense but if

00:07:06,370 --> 00:07:09,310
someone's struggling with Django it's

00:07:08,050 --> 00:07:11,050
probably this and from my experience

00:07:09,310 --> 00:07:13,510
they just need a lot of reps to

00:07:11,050 --> 00:07:15,010
understand how these work together and

00:07:13,510 --> 00:07:16,480
again the fact that the order doesn't

00:07:15,010 --> 00:07:18,610
matter you need them all at once and

00:07:16,480 --> 00:07:21,520
they're all interconnected is a really

00:07:18,610 --> 00:07:23,560
big leap for beginners but we're gonna

00:07:21,520 --> 00:07:25,630
build a homepage with a form and then a

00:07:23,560 --> 00:07:28,960
search page with results so again trying

00:07:25,630 --> 00:07:30,190
to keep this as simple as we can all

00:07:28,960 --> 00:07:32,920
right so blasting through these steps

00:07:30,190 --> 00:07:36,730
this is the project level URLs file we

00:07:32,920 --> 00:07:39,850
use include we're adding cities then we

00:07:36,730 --> 00:07:41,290
have to create the URLs PI file which

00:07:39,850 --> 00:07:45,460
would be nice if it was in the apps but

00:07:41,290 --> 00:07:47,170
it's not so we're calling at slash

00:07:45,460 --> 00:07:49,420
search that's our search results page

00:07:47,170 --> 00:07:52,030
and then we have our home page so these

00:07:49,420 --> 00:07:53,800
are views which we will create do note

00:07:52,030 --> 00:07:55,240
that there's a name added so this is

00:07:53,800 --> 00:07:57,160
optional but this is definitely a best

00:07:55,240 --> 00:07:59,080
practice to add a name if you want to

00:07:57,160 --> 00:08:01,290
reverses refer to them in templates I

00:07:59,080 --> 00:08:04,840
would say always add a name to your URLs

00:08:01,290 --> 00:08:06,340
you will need it again this is a view

00:08:04,840 --> 00:08:08,410
trying to keep this as vanilla as

00:08:06,340 --> 00:08:10,510
possible so we're just using generic

00:08:08,410 --> 00:08:12,370
class-based views template view just to

00:08:10,510 --> 00:08:15,760
display the page the template would be

00:08:12,370 --> 00:08:17,110
home to HTML and then ListView there's a

00:08:15,760 --> 00:08:18,880
lot of different ways to do this this is

00:08:17,110 --> 00:08:20,380
the simplest most elegant way I could

00:08:18,880 --> 00:08:23,470
come up with but I'm certainly open to

00:08:20,380 --> 00:08:25,840
other suggestions after the after if you

00:08:23,470 --> 00:08:27,820
all have better ideas template structure

00:08:25,840 --> 00:08:31,060
so here's another choice in Django the

00:08:27,820 --> 00:08:32,770
trips up beginners by default django

00:08:31,060 --> 00:08:34,599
template loader will look within the app

00:08:32,770 --> 00:08:37,539
for a folder or directory called

00:08:34,599 --> 00:08:40,180
templates then repeat the app name and

00:08:37,539 --> 00:08:43,300
then the file this works if you want to

00:08:40,180 --> 00:08:45,670
package your apps like a third party app

00:08:43,300 --> 00:08:47,590
but personally I find this confusing I

00:08:45,670 --> 00:08:49,420
like to have all my apps in one place so

00:08:47,590 --> 00:08:53,080
you can optionally create a project

00:08:49,420 --> 00:08:54,040
level templates folder where the files

00:08:53,080 --> 00:08:56,470
are within there you can create

00:08:54,040 --> 00:08:59,110
directories within templates this is a

00:08:56,470 --> 00:09:02,050
choice I default the project level this

00:08:59,110 --> 00:09:03,450
troops trips people up this would be the

00:09:02,050 --> 00:09:05,320
code you would add to your settings file

00:09:03,450 --> 00:09:07,360
and the important thing is

00:09:05,320 --> 00:09:09,220
this doesn't mean that Jango won't look

00:09:07,360 --> 00:09:11,080
within the app for a templates directory

00:09:09,220 --> 00:09:14,700
it will just also look here so you want

00:09:11,080 --> 00:09:18,790
to be clear on how you structure things

00:09:14,700 --> 00:09:21,040
okay super basic template home page home

00:09:18,790 --> 00:09:23,890
page and then here's a search template

00:09:21,040 --> 00:09:25,780
with the result somewhat awkwardly put

00:09:23,890 --> 00:09:29,410
in there so we're just looping over

00:09:25,780 --> 00:09:30,550
again for beginners so for city we could

00:09:29,410 --> 00:09:32,710
call it anything we want we're just

00:09:30,550 --> 00:09:34,480
picking the variable city object list

00:09:32,710 --> 00:09:36,070
where does that come from that really

00:09:34,480 --> 00:09:37,360
trips people up it's just built into

00:09:36,070 --> 00:09:40,330
list view and you kind of have to know

00:09:37,360 --> 00:09:41,860
it you can and should rename that to

00:09:40,330 --> 00:09:43,990
city list or something else but the

00:09:41,860 --> 00:09:47,110
default is object list and then we're

00:09:43,990 --> 00:09:51,610
just mapping over our four results so

00:09:47,110 --> 00:09:54,070
super basic by design and now we get to

00:09:51,610 --> 00:09:55,510
search so this is how I would implement

00:09:54,070 --> 00:09:57,970
basic search this will work on a lot of

00:09:55,510 --> 00:09:59,620
sites and scale pretty well and remember

00:09:57,970 --> 00:10:03,640
it's just a form with the search query

00:09:59,620 --> 00:10:06,490
and we pass it a filter on it unless you

00:10:03,640 --> 00:10:07,750
that's the most basic way to do it in

00:10:06,490 --> 00:10:09,460
the real world you might want to look at

00:10:07,750 --> 00:10:11,920
the Jango filter third party package

00:10:09,460 --> 00:10:13,660
that Carlton Gibson maintains that has a

00:10:11,920 --> 00:10:15,550
lot of nice additional features we're

00:10:13,660 --> 00:10:18,070
not gonna use that you also definitely

00:10:15,550 --> 00:10:20,470
want to add validation to your forms

00:10:18,070 --> 00:10:22,120
we're not going to include that here so

00:10:20,470 --> 00:10:24,310
you could use this on your personal side

00:10:22,120 --> 00:10:27,730
I wouldn't mimic this code on you know

00:10:24,310 --> 00:10:31,000
an e-commerce site okay so filtering so

00:10:27,730 --> 00:10:33,190
this is how do you update the query set

00:10:31,000 --> 00:10:36,850
this is one way to do it I like to do it

00:10:33,190 --> 00:10:41,290
we update the get query set method and

00:10:36,850 --> 00:10:42,880
we're using I contains so we're updating

00:10:41,290 --> 00:10:44,110
the method the name that's the name of

00:10:42,880 --> 00:10:45,730
our field I probably should have called

00:10:44,110 --> 00:10:49,060
that something else that's the name of

00:10:45,730 --> 00:10:50,620
the city i contains that's a case

00:10:49,060 --> 00:10:52,390
insensitive if you didn't have the eye

00:10:50,620 --> 00:10:53,050
it just contains it would be case

00:10:52,390 --> 00:10:54,520
sensitive

00:10:53,050 --> 00:10:56,590
you probably almost always want to use I

00:10:54,520 --> 00:10:58,870
contains and then we're hard coding in

00:10:56,590 --> 00:11:00,520
Boston so if you look below that's why

00:10:58,870 --> 00:11:02,680
the result is just Boston I'm just

00:11:00,520 --> 00:11:06,100
hard-coding saying basically do a filter

00:11:02,680 --> 00:11:07,480
and find Boston we're not getting a

00:11:06,100 --> 00:11:09,160
query from the forum yet we're just

00:11:07,480 --> 00:11:12,100
starting with filtering the results and

00:11:09,160 --> 00:11:14,800
then we'll add the form in you can

00:11:12,100 --> 00:11:17,530
change filters so this is an example

00:11:14,800 --> 00:11:19,220
we've used include on the state I'm not

00:11:17,530 --> 00:11:21,560
sure why you'd want to use

00:11:19,220 --> 00:11:22,730
New York and why but you could you can

00:11:21,560 --> 00:11:25,339
chain them together but you'll quickly

00:11:22,730 --> 00:11:27,740
find that ands are quite limited what

00:11:25,339 --> 00:11:30,379
you really want is an or and you can do

00:11:27,740 --> 00:11:33,230
that with a queue object so this lets

00:11:30,379 --> 00:11:34,579
you do more complex boolean logic like

00:11:33,230 --> 00:11:37,459
an order so in this case we're saying

00:11:34,579 --> 00:11:39,620
search on the name Boston or the state

00:11:37,459 --> 00:11:42,620
New York these are the two results that

00:11:39,620 --> 00:11:44,240
you would get so this is basic search

00:11:42,620 --> 00:11:46,069
you use queue objects you can get pretty

00:11:44,240 --> 00:11:48,050
far with this it's not really not much

00:11:46,069 --> 00:11:49,490
code and you know if you just have a

00:11:48,050 --> 00:11:53,439
personal site it's a blog or something

00:11:49,490 --> 00:11:53,439
this is probably most of what you need

00:11:53,560 --> 00:11:58,250
forms okay

00:11:55,189 --> 00:11:59,269
so again you this may be redundant for

00:11:58,250 --> 00:12:01,459
the people in the room but there's two

00:11:59,269 --> 00:12:03,709
types of forms get and post a get

00:12:01,459 --> 00:12:05,720
bundles up our data and turns into a

00:12:03,709 --> 00:12:09,079
string in the destination URL so if you

00:12:05,720 --> 00:12:10,790
look up the top one you'll see San Diego

00:12:09,079 --> 00:12:13,189
so that was the search term in the URL

00:12:10,790 --> 00:12:15,139
so you use get when it does an effect

00:12:13,189 --> 00:12:17,449
state doesn't touch the database so like

00:12:15,139 --> 00:12:19,160
a search this is how Google does it you

00:12:17,449 --> 00:12:20,779
could also do a post when you do want to

00:12:19,160 --> 00:12:23,839
encode it for transmission send it to

00:12:20,779 --> 00:12:26,089
the server credit card information posts

00:12:23,839 --> 00:12:29,300
are really dangerous and you definitely

00:12:26,089 --> 00:12:29,959
want to have some security there which

00:12:29,300 --> 00:12:33,110
we'll talk about

00:12:29,959 --> 00:12:36,439
so for search use a get I've seen people

00:12:33,110 --> 00:12:37,459
do search with posts you can do it I

00:12:36,439 --> 00:12:41,509
don't know why you would do it but you

00:12:37,459 --> 00:12:44,930
could do it so use it get alright this

00:12:41,509 --> 00:12:46,430
is a very basic raw HTML form Django has

00:12:44,930 --> 00:12:47,870
its own forms which we'll use but if you

00:12:46,430 --> 00:12:50,300
want to just do it raw this is how you

00:12:47,870 --> 00:12:52,339
would structure it so if you look and

00:12:50,300 --> 00:12:54,829
you can see that the action says go to

00:12:52,339 --> 00:12:57,019
the search results named URL that's the

00:12:54,829 --> 00:12:58,370
name of the URL that we had so after

00:12:57,019 --> 00:12:59,930
you've gone you clicked enter on the

00:12:58,370 --> 00:13:02,240
form it will send you the search results

00:12:59,930 --> 00:13:04,430
page we specify the method it could be

00:13:02,240 --> 00:13:06,800
post but it's going to be get and then

00:13:04,430 --> 00:13:08,569
the input name we could call this

00:13:06,800 --> 00:13:10,639
whatever we want the default is call it

00:13:08,569 --> 00:13:12,470
Q but you could call it anything it's

00:13:10,639 --> 00:13:14,689
just the default is to call it Q and

00:13:12,470 --> 00:13:19,639
this will have this nice little form as

00:13:14,689 --> 00:13:20,990
a result and so this is what it would

00:13:19,639 --> 00:13:24,350
give us though so if you look on this

00:13:20,990 --> 00:13:26,180
page the search results page the query

00:13:24,350 --> 00:13:27,829
is in the URL but it's not in the

00:13:26,180 --> 00:13:30,019
results and that's because we haven't

00:13:27,829 --> 00:13:32,120
passed it in so that's the last piece of

00:13:30,019 --> 00:13:32,990
the puzzle got the query we put it in

00:13:32,120 --> 00:13:35,300
the URL but we have

00:13:32,990 --> 00:13:36,830
pass it into the view so it's not it's

00:13:35,300 --> 00:13:40,279
just hard coded what we had in the view

00:13:36,830 --> 00:13:42,230
before so when I'm teaching this to

00:13:40,279 --> 00:13:44,240
people in person it's kind of this step

00:13:42,230 --> 00:13:47,089
of combining it all and putting the

00:13:44,240 --> 00:13:49,940
query in and passing the logic that is

00:13:47,089 --> 00:13:51,350
an aha moment for people this is how you

00:13:49,940 --> 00:13:54,800
would do it so you can create a variable

00:13:51,350 --> 00:13:57,020
query get the cue object and then pass

00:13:54,800 --> 00:14:01,550
in that variable instead of the

00:13:57,020 --> 00:14:04,279
hard-coded values so this is how I would

00:14:01,550 --> 00:14:06,950
do this but there's a much better way

00:14:04,279 --> 00:14:08,990
which is to use Django forms so we take

00:14:06,950 --> 00:14:11,300
advantage of all the Django security

00:14:08,990 --> 00:14:12,860
work because again forms are dangerous

00:14:11,300 --> 00:14:14,440
there's cross-site scripting there's

00:14:12,860 --> 00:14:16,970
CSRF there's sequel injection

00:14:14,440 --> 00:14:18,890
clickjacking a whole host of things

00:14:16,970 --> 00:14:20,839
most of those are more relevant with

00:14:18,890 --> 00:14:22,520
posts rather than gets but you might as

00:14:20,839 --> 00:14:23,630
well just take it also has a validation

00:14:22,520 --> 00:14:25,760
you might as well take the work of

00:14:23,630 --> 00:14:28,520
Django so to do that you would create a

00:14:25,760 --> 00:14:32,680
forms pie file in the app directory

00:14:28,520 --> 00:14:34,940
again as simple as I can make this and

00:14:32,680 --> 00:14:37,160
then just in your view instead of using

00:14:34,940 --> 00:14:40,010
template view you would use form view so

00:14:37,160 --> 00:14:41,720
you import the form view you would pull

00:14:40,010 --> 00:14:45,290
in search form you can just do dot forms

00:14:41,720 --> 00:14:47,630
because it's a relative link in the same

00:14:45,290 --> 00:14:52,430
directory and then specify the form

00:14:47,630 --> 00:14:54,860
class and then this is what the template

00:14:52,430 --> 00:14:56,930
looks like so this is a lot cleaner if

00:14:54,860 --> 00:14:59,120
it was a post we would add the double

00:14:56,930 --> 00:15:01,220
brackets CSRF tags but again we don't

00:14:59,120 --> 00:15:03,589
need that because it's a get so this is

00:15:01,220 --> 00:15:05,240
really not much code and we're really

00:15:03,589 --> 00:15:08,089
taking advantage of Django and we've

00:15:05,240 --> 00:15:11,779
gotten most of the way there but our

00:15:08,089 --> 00:15:13,430
search is pretty basic it's not enough

00:15:11,779 --> 00:15:15,260
for an e-commerce site and really

00:15:13,430 --> 00:15:17,020
probably not enough if you're a Django

00:15:15,260 --> 00:15:19,399
not and you wanna do a little bit better

00:15:17,020 --> 00:15:21,709
so full-text search this is the kind of

00:15:19,399 --> 00:15:23,540
search that we're all used to kind of in

00:15:21,709 --> 00:15:25,100
the real world so I'm gonna talk through

00:15:23,540 --> 00:15:27,170
how it works how to implement it and

00:15:25,100 --> 00:15:29,899
built in django support which was added

00:15:27,170 --> 00:15:31,160
a couple years ago so again just a

00:15:29,899 --> 00:15:34,730
reminder this is the journey we're on

00:15:31,160 --> 00:15:36,500
we're gonna start with Postgres and i'll

00:15:34,730 --> 00:15:39,620
show you how to do that so this is a

00:15:36,500 --> 00:15:41,750
definition of full-text search so search

00:15:39,620 --> 00:15:44,480
a documents a document is any large body

00:15:41,750 --> 00:15:47,059
of text so it could be a newspaper

00:15:44,480 --> 00:15:50,059
article a book and email address

00:15:47,059 --> 00:15:51,649
just a blob of stuff the query we can

00:15:50,059 --> 00:15:53,479
add abstractions to decipher the meaning

00:15:51,649 --> 00:15:55,579
so we can add some intelligence to the

00:15:53,479 --> 00:15:56,929
query and then relevance this is like

00:15:55,579 --> 00:16:00,259
the million dollar question how do you

00:15:56,929 --> 00:16:02,869
have good results not just naive results

00:16:00,259 --> 00:16:04,669
so we'll go through how to do that

00:16:02,869 --> 00:16:07,999
post-crisis had support for 10 years

00:16:04,669 --> 00:16:08,929
built in and then starting with 110 in

00:16:07,999 --> 00:16:11,719
00:16:08,929 --> 00:16:13,899
marked a man led gen would have built-in

00:16:11,719 --> 00:16:15,649
support to make this a lot easier

00:16:13,899 --> 00:16:17,629
unfortunately it doesn't exist for any

00:16:15,649 --> 00:16:19,069
of the other databases currently though

00:16:17,629 --> 00:16:21,769
most of them do have their own full-text

00:16:19,069 --> 00:16:24,289
search capabilities so that'll be a fun

00:16:21,769 --> 00:16:26,599
thing to work on for someone alright so

00:16:24,289 --> 00:16:27,919
full-text search features so this is

00:16:26,599 --> 00:16:29,749
basically the laundry list of why you

00:16:27,919 --> 00:16:31,639
would use search and I'll go through

00:16:29,749 --> 00:16:32,749
them quickly so rankings you want to

00:16:31,639 --> 00:16:34,249
rank things this is how you get it

00:16:32,749 --> 00:16:36,079
relevance so maybe you want to have

00:16:34,249 --> 00:16:39,229
different weights so if someone searches

00:16:36,079 --> 00:16:40,399
on a name of a city or a state it might

00:16:39,229 --> 00:16:42,019
be more important one of the other

00:16:40,399 --> 00:16:44,239
especially if you have a lot of fields

00:16:42,019 --> 00:16:47,209
this is what you tweak and fiddle around

00:16:44,239 --> 00:16:50,209
with in practice to have your search be

00:16:47,209 --> 00:16:51,739
good indexes again speaking of

00:16:50,209 --> 00:16:53,119
performance if you've got a million rows

00:16:51,739 --> 00:16:55,939
in your database doing a filter on that

00:16:53,119 --> 00:16:59,239
will not be very fast so you can

00:16:55,939 --> 00:17:01,579
pre-process your search and then create

00:16:59,239 --> 00:17:04,399
indexes the key thing here is whether

00:17:01,579 --> 00:17:05,899
the data is static or dynamic if it's

00:17:04,399 --> 00:17:08,299
there's two types of indexes if it's

00:17:05,899 --> 00:17:11,299
static you to use a gem this is built

00:17:08,299 --> 00:17:13,189
into Postgres and dynamic a gist so this

00:17:11,299 --> 00:17:14,809
gets into the trade-offs you know how

00:17:13,189 --> 00:17:18,169
often does it need to be updated every

00:17:14,809 --> 00:17:20,329
second every hour every day these are

00:17:18,169 --> 00:17:22,339
things you probably just want to test in

00:17:20,329 --> 00:17:24,199
the real world rather than guessing but

00:17:22,339 --> 00:17:27,049
that's sort of fun optimizations you can

00:17:24,199 --> 00:17:29,149
do phrase search this is a big one so

00:17:27,049 --> 00:17:30,799
this we can do intelligence basically we

00:17:29,149 --> 00:17:34,519
could say we could match jumping quickly

00:17:30,799 --> 00:17:37,519
to to jump very quickly again you know

00:17:34,519 --> 00:17:40,340
do the human language has all these sort

00:17:37,519 --> 00:17:42,110
of intuitive things that we know and we

00:17:40,340 --> 00:17:44,149
can get at that with phrase search and

00:17:42,110 --> 00:17:46,159
it's also language specific so English

00:17:44,149 --> 00:17:47,659
has its own rules Portuguese Spanish

00:17:46,159 --> 00:17:50,059
would have their own and their libraries

00:17:47,659 --> 00:17:53,629
that will help us with that stop words

00:17:50,059 --> 00:17:56,179
so common words like the have no real

00:17:53,629 --> 00:17:58,610
meaning so it just stripped those out by

00:17:56,179 --> 00:18:00,650
default stemming you were dirt reduce a

00:17:58,610 --> 00:18:02,690
word to its base stem so

00:18:00,650 --> 00:18:04,940
and this is an algorithm again it's

00:18:02,690 --> 00:18:07,429
built-in so for example fishing fishes

00:18:04,940 --> 00:18:11,990
Fisher it would know that that matches

00:18:07,429 --> 00:18:13,279
to fish and vice versa accent multiple

00:18:11,990 --> 00:18:15,650
language support against a lot of

00:18:13,279 --> 00:18:17,270
languages in the world and JSON be if

00:18:15,650 --> 00:18:19,730
you're manipulating JSON this is a more

00:18:17,270 --> 00:18:22,070
performant way to do that this was added

00:18:19,730 --> 00:18:24,409
recently but I don't have time to get

00:18:22,070 --> 00:18:26,690
into it okay so this is basically how it

00:18:24,409 --> 00:18:29,179
works so it pre processes the search so

00:18:26,690 --> 00:18:31,640
we start with the document turn it into

00:18:29,179 --> 00:18:33,440
a token and this process this treats

00:18:31,640 --> 00:18:35,600
things differently so it looks at the

00:18:33,440 --> 00:18:36,890
text and says well this is a number this

00:18:35,600 --> 00:18:39,140
is a word this is a phrase this is an

00:18:36,890 --> 00:18:42,110
email and Postgres uses a parser for

00:18:39,140 --> 00:18:43,730
this then it turns them into lexemes so

00:18:42,110 --> 00:18:46,460
this is a string that's been normalized

00:18:43,730 --> 00:18:49,190
so this would be like upper and lower

00:18:46,460 --> 00:18:52,940
case are the same remove suffixes like S

00:18:49,190 --> 00:18:55,039
or ES and English stop words you can use

00:18:52,940 --> 00:18:57,830
a dictionary for synonyms thesaurus

00:18:55,039 --> 00:18:59,929
different spellings color with a with or

00:18:57,830 --> 00:19:02,059
without a you this is where a lot of the

00:18:59,929 --> 00:19:04,159
intelligence comes in and then once we

00:19:02,059 --> 00:19:06,919
have this pre-processed document then we

00:19:04,159 --> 00:19:08,480
can optimize it by adding an index so

00:19:06,919 --> 00:19:09,890
let me give you a little more examples

00:19:08,480 --> 00:19:12,799
of that because that's really the heart

00:19:09,890 --> 00:19:14,809
of it but it takes some time to get that

00:19:12,799 --> 00:19:16,760
so these are the two data types that

00:19:14,809 --> 00:19:19,130
Postgres gives us ts vector which is the

00:19:16,760 --> 00:19:20,750
pre process documents and then TS query

00:19:19,130 --> 00:19:22,039
which is the process queries so we can

00:19:20,750 --> 00:19:23,630
basically apply intelligence to both

00:19:22,039 --> 00:19:27,260
sides of the equation to have better

00:19:23,630 --> 00:19:28,880
search I'll give you examples so the

00:19:27,260 --> 00:19:31,279
quick brown fox jumps over the lazy dog

00:19:28,880 --> 00:19:32,840
is a standard phrase used because it

00:19:31,279 --> 00:19:35,570
uses every letter in the English

00:19:32,840 --> 00:19:37,880
language this is the vector so this

00:19:35,570 --> 00:19:39,260
would this is pre-processing the

00:19:37,880 --> 00:19:41,840
document itself this is how it looks to

00:19:39,260 --> 00:19:44,929
the computer so it's taking the lexeme

00:19:41,840 --> 00:19:47,330
which is so for example so Brown its

00:19:44,929 --> 00:19:50,210
position is the third position but then

00:19:47,330 --> 00:19:53,210
if you look at jump the actual word is

00:19:50,210 --> 00:19:55,880
jumps but it's made it into jump that's

00:19:53,210 --> 00:20:00,080
the stem so the position matters for

00:19:55,880 --> 00:20:02,960
relevancy MA it was this a very simple

00:20:00,080 --> 00:20:07,789
way of showing you how it's changed by

00:20:02,960 --> 00:20:09,500
the computer to be into a TS vector we

00:20:07,789 --> 00:20:11,750
can do the same thing with queries so

00:20:09,500 --> 00:20:13,820
this is to normalize our that we can

00:20:11,750 --> 00:20:14,540
check against our vector again using the

00:20:13,820 --> 00:20:17,090
same phrase

00:20:14,540 --> 00:20:19,880
there is a match operator which is

00:20:17,090 --> 00:20:21,950
double at so if you typed in dog that

00:20:19,880 --> 00:20:24,470
would match dogs would also match

00:20:21,950 --> 00:20:25,910
because it knows to strip out the S dog

00:20:24,470 --> 00:20:29,300
food would not because that's not a

00:20:25,910 --> 00:20:31,250
relevant phrase jumping would because it

00:20:29,300 --> 00:20:33,110
sees jumps and it can take the stem and

00:20:31,250 --> 00:20:35,450
do jumping so there's a lot that you get

00:20:33,110 --> 00:20:38,510
out of the box and then you also need to

00:20:35,450 --> 00:20:41,300
customize these things over time and

00:20:38,510 --> 00:20:42,500
then there's four default operators so

00:20:41,300 --> 00:20:45,560
you're pretty much always going to use a

00:20:42,500 --> 00:20:48,050
match so if you had dogs and foxes that

00:20:45,560 --> 00:20:53,810
would result to true you can have ands

00:20:48,050 --> 00:20:56,090
ORS or even negations okay getting close

00:20:53,810 --> 00:20:57,560
to thee oh yeah conclusion so this is

00:20:56,090 --> 00:21:00,140
what Django gives us this is what the

00:20:57,560 --> 00:21:02,300
built-in package these are five classes

00:21:00,140 --> 00:21:05,060
built into Django that link with

00:21:02,300 --> 00:21:06,170
Postgres and save us a lot of work the

00:21:05,060 --> 00:21:08,240
big assumption of course is that you

00:21:06,170 --> 00:21:09,950
have Django set up with Postgres and how

00:21:08,240 --> 00:21:12,080
you do that is no easy thing for a

00:21:09,950 --> 00:21:14,170
beginner I like doing it with docker

00:21:12,080 --> 00:21:16,220
there's a lot of different ways to do it

00:21:14,170 --> 00:21:17,720
in the source code I have a docker

00:21:16,220 --> 00:21:20,210
implementation so you can just run a

00:21:17,720 --> 00:21:22,250
command and get it going in my book

00:21:20,210 --> 00:21:25,370
Django for professionals I talk through

00:21:22,250 --> 00:21:27,400
how to set up from scratch Python Django

00:21:25,370 --> 00:21:29,630
and Postgres that's available for free

00:21:27,400 --> 00:21:33,620
but let me just say assume it's

00:21:29,630 --> 00:21:36,170
installed all right so search vector so

00:21:33,620 --> 00:21:37,490
this is the ability to add oh I guess I

00:21:36,170 --> 00:21:39,950
didn't talk through what they do that's

00:21:37,490 --> 00:21:44,150
okay the ability to add multiple fields

00:21:39,950 --> 00:21:47,030
so in this case it doesn't make as much

00:21:44,150 --> 00:21:50,230
sense with four city fields but this

00:21:47,030 --> 00:21:53,570
works and if you added a real document

00:21:50,230 --> 00:21:56,390
you get better results so you can see

00:21:53,570 --> 00:22:01,430
that you can add in multiple fields here

00:21:56,390 --> 00:22:03,580
as a search vector just use this code

00:22:01,430 --> 00:22:06,050
and try it out and it will work for you

00:22:03,580 --> 00:22:08,480
now search query so we can add stemming

00:22:06,050 --> 00:22:12,320
or stop words it will basically apply

00:22:08,480 --> 00:22:16,220
logic to our query added playas apply a

00:22:12,320 --> 00:22:17,960
stemming algorithm again overly simple

00:22:16,220 --> 00:22:19,730
example but this works and especially if

00:22:17,960 --> 00:22:22,670
you update the data we're dealing with

00:22:19,730 --> 00:22:24,440
you'll get more interesting results the

00:22:22,670 --> 00:22:27,260
last one is search rank so this is how

00:22:24,440 --> 00:22:27,890
you would do relevancy so in this case

00:22:27,260 --> 00:22:30,650
I've

00:22:27,890 --> 00:22:34,040
a vector2 state so I'm saying you state

00:22:30,650 --> 00:22:37,190
we're using just rank so the result

00:22:34,040 --> 00:22:38,510
would be because I'm ranking on state it

00:22:37,190 --> 00:22:40,430
would show the two results for

00:22:38,510 --> 00:22:42,230
Massachusetts because there's two states

00:22:40,430 --> 00:22:44,630
of Massachusetts and then one for New

00:22:42,230 --> 00:22:45,890
York and one for California again

00:22:44,630 --> 00:22:47,930
there's more information in the Django

00:22:45,890 --> 00:22:49,640
Docs but this is a working example and

00:22:47,930 --> 00:22:54,230
if you update the data you can play

00:22:49,640 --> 00:22:56,180
around with it okay so that was a bit

00:22:54,230 --> 00:22:57,560
fast but I wanted to walk through all

00:22:56,180 --> 00:22:59,990
the steps and give you a sense of what

00:22:57,560 --> 00:23:01,340
Django can do out of the box once you

00:22:59,990 --> 00:23:03,830
move beyond the basics definitely add

00:23:01,340 --> 00:23:06,620
validation to your forms but you can get

00:23:03,830 --> 00:23:08,990
a basic search up and running it would

00:23:06,620 --> 00:23:11,960
be a really cool talk to compare built

00:23:08,990 --> 00:23:14,060
in Postgres with elastic I'm sure

00:23:11,960 --> 00:23:16,550
there's a lot of pros and cons but for

00:23:14,060 --> 00:23:17,450
the needs of basic to intermediate site

00:23:16,550 --> 00:23:21,080
this will get you most of the way there

00:23:17,450 --> 00:23:22,680
and yeah slides in source code thanks

00:23:21,080 --> 00:23:25,940
for your time

00:23:22,680 --> 00:23:39,319
[Applause]

00:23:25,940 --> 00:23:39,319

YouTube URL: https://www.youtube.com/watch?v=is3R8d420D4


