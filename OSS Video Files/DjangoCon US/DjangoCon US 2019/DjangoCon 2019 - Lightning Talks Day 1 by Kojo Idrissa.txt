Title: DjangoCon 2019 - Lightning Talks Day 1 by Kojo Idrissa
Publication date: 2019-10-25
Playlist: DjangoCon US 2019
Description: 
	DjangoCon 2019 - Lightning Talks Day 1 by Various Speakers

Wayne Merry 00:00
Ayaz Amlani 5:24
Tyler Rudie 9:37
Pandy Knight 14:30
Dustin Ingram 18:32
Paul Stieber 22:23
Dawn Wages 26:16

This talk was presented at: https://2019.djangocon.us/talk/lightning-talks/

LINKS:
Follow Kojo Idrissa ðŸ‘‡
On Twitter: https://twitter.com/Transition
Official homepage: http://kojoidrissa.com/

Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/

Intro music: "This Is How We Quirk It" by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.
Captions: 
	00:00:00,000 --> 00:00:08,890
[Music]

00:00:10,670 --> 00:00:17,350
you

00:00:11,600 --> 00:00:17,350
[Music]

00:00:17,590 --> 00:00:21,310
right sir my lightning talks about

00:00:19,539 --> 00:00:24,430
speaking to government about mental

00:00:21,310 --> 00:00:28,989
health mental health is a rising

00:00:24,430 --> 00:00:30,550
challenge in in the world today few of

00:00:28,989 --> 00:00:35,309
us will go through life without any

00:00:30,550 --> 00:00:38,110
impact from mental illness in our lives

00:00:35,309 --> 00:00:40,269
so mental health leads are rising

00:00:38,110 --> 00:00:42,670
throughout the community the rates of

00:00:40,269 --> 00:00:44,409
depression and anxiety orders of

00:00:42,670 --> 00:00:47,710
magnitude greater now than what they

00:00:44,409 --> 00:00:49,619
were a generation or two ago we're

00:00:47,710 --> 00:00:54,010
seeing things like impostor syndrome

00:00:49,619 --> 00:00:56,290
burnout rising significantly in

00:00:54,010 --> 00:00:59,040
Australia suicide is the leading cause

00:00:56,290 --> 00:01:01,360
of death for people under the age of 45

00:00:59,040 --> 00:01:03,430
we also have traditional mental

00:01:01,360 --> 00:01:05,950
illnesses such as bipolar disorder and

00:01:03,430 --> 00:01:08,320
schizophrenia 30 years ago some people

00:01:05,950 --> 00:01:10,000
felt that's all mental illness was but

00:01:08,320 --> 00:01:15,880
now we understand it's much broader than

00:01:10,000 --> 00:01:17,740
that our community is changing two

00:01:15,880 --> 00:01:20,920
generations ago you could expect to go

00:01:17,740 --> 00:01:22,329
to school and get an education and then

00:01:20,920 --> 00:01:24,700
at the end of that education and go get

00:01:22,329 --> 00:01:28,689
a job and then work in that job until

00:01:24,700 --> 00:01:31,270
you retire 30 years later and that's the

00:01:28,689 --> 00:01:33,670
extent of of what you need to do now

00:01:31,270 --> 00:01:36,280
we're rescaling throughout our working

00:01:33,670 --> 00:01:40,329
lives we might work for five or even

00:01:36,280 --> 00:01:43,420
more careers our physical environment is

00:01:40,329 --> 00:01:45,700
very different but they used to be used

00:01:43,420 --> 00:01:50,319
to be very structured we used to have a

00:01:45,700 --> 00:01:53,649
lot of social constructs such as clubs

00:01:50,319 --> 00:01:55,780
or religion or various ways where we

00:01:53,649 --> 00:01:57,539
would be interacting with the same kind

00:01:55,780 --> 00:02:03,249
of people for an extended period of time

00:01:57,539 --> 00:02:07,749
but now now that's an ingrate straight a

00:02:03,249 --> 00:02:09,850
great state of flux when it comes to

00:02:07,749 --> 00:02:12,819
clubs and communities fewer and fewer

00:02:09,850 --> 00:02:14,770
people engaging in such things

00:02:12,819 --> 00:02:17,170
so our relationships are becoming much

00:02:14,770 --> 00:02:18,970
more transitory even in the work

00:02:17,170 --> 00:02:22,060
environment we may be working remotely

00:02:18,970 --> 00:02:24,670
and not work in connecting with people

00:02:22,060 --> 00:02:27,099
on that one-to-one basis and social

00:02:24,670 --> 00:02:30,610
networks are a poor replacement for that

00:02:27,099 --> 00:02:33,500
individual whites of the eyes connection

00:02:30,610 --> 00:02:35,780
so in response the Victorian government

00:02:33,500 --> 00:02:38,420
in Australia is has a commission about

00:02:35,780 --> 00:02:40,670
what a modern mental health system

00:02:38,420 --> 00:02:42,890
should look like and I've been

00:02:40,670 --> 00:02:45,079
encouraged among with others is this is

00:02:42,890 --> 00:02:48,049
the time to communicate to government

00:02:45,079 --> 00:02:51,680
about what a mental health system should

00:02:48,049 --> 00:02:53,810
look like and some of the ideas that we

00:02:51,680 --> 00:02:57,140
have to to put into that submission a

00:02:53,810 --> 00:02:58,700
concepts of mental wellness so not just

00:02:57,140 --> 00:03:01,099
waiting until we're actually are

00:02:58,700 --> 00:03:03,920
depressed or have a level of anxiety

00:03:01,099 --> 00:03:06,950
that that puts us out of control but how

00:03:03,920 --> 00:03:08,629
do we stay in a good place a number of

00:03:06,950 --> 00:03:11,810
talks are Django Khan's over the past

00:03:08,629 --> 00:03:14,840
have looked at things like impostor

00:03:11,810 --> 00:03:17,150
syndrome and how do we personally manage

00:03:14,840 --> 00:03:19,010
that but sometimes these issues can be

00:03:17,150 --> 00:03:22,250
beyond what we can just personally

00:03:19,010 --> 00:03:24,019
manage how does the state help us I've

00:03:22,250 --> 00:03:26,629
been looking at schema therapy and that

00:03:24,019 --> 00:03:29,030
is effective in situations where

00:03:26,629 --> 00:03:31,459
cognitive behavioral therapy has proven

00:03:29,030 --> 00:03:34,639
to be ineffective there's been exciting

00:03:31,459 --> 00:03:37,940
research looking at psychedelics and how

00:03:34,639 --> 00:03:39,980
they can really affect change one

00:03:37,940 --> 00:03:43,489
particular study with Rick Doblin has

00:03:39,980 --> 00:03:45,859
been looking at MDMA with soldiers that

00:03:43,489 --> 00:03:49,669
have been suffering from PTSD so there's

00:03:45,859 --> 00:03:51,949
lots of things out there but government

00:03:49,669 --> 00:03:53,299
often isn't aware of these things or if

00:03:51,949 --> 00:03:56,480
they are it's disconnected

00:03:53,299 --> 00:03:58,430
so there's an opportunity to talk and

00:03:56,480 --> 00:03:59,840
the what going on in Victoria has been

00:03:58,430 --> 00:04:02,659
watched by other states in Australia

00:03:59,840 --> 00:04:05,090
it's been watched by governments here in

00:04:02,659 --> 00:04:09,139
the United States so it's a bit of a

00:04:05,090 --> 00:04:11,239
it's a bit of a template for for what

00:04:09,139 --> 00:04:13,639
may be an effective mental health system

00:04:11,239 --> 00:04:15,680
going forward so it is time to talk and

00:04:13,639 --> 00:04:18,250
so what I'm doing is I'm preparing a

00:04:15,680 --> 00:04:21,889
submission to the Royal Commission and

00:04:18,250 --> 00:04:24,620
and my invitation is while we're at this

00:04:21,889 --> 00:04:27,199
conference if you've got ideas come and

00:04:24,620 --> 00:04:29,240
talk to me if your ideas are significant

00:04:27,199 --> 00:04:30,680
enough you might wish to consider

00:04:29,240 --> 00:04:32,240
putting your own submission in to the

00:04:30,680 --> 00:04:34,250
Royal Commission you don't need to be

00:04:32,240 --> 00:04:36,740
from Australia or for Victoria to

00:04:34,250 --> 00:04:39,529
actually do this anyone in this room can

00:04:36,740 --> 00:04:43,310
put a submission in so that's the

00:04:39,529 --> 00:04:43,760
opportunity talk to me or make your own

00:04:43,310 --> 00:04:47,690
submission

00:04:43,760 --> 00:04:50,000
to the Royal Commission they're going to

00:04:47,690 --> 00:04:53,120
be an interim report next month and so

00:04:50,000 --> 00:04:55,850
the plan is to submit into between the

00:04:53,120 --> 00:05:02,050
interim and the final reports and that's

00:04:55,850 --> 00:05:02,050
about it thank you when

00:05:05,970 --> 00:05:08,940
my name is AI Azam Lonnie I'm from

00:05:07,950 --> 00:05:11,520
Dallas Texas

00:05:08,940 --> 00:05:13,470
I love Python I've been coding for about

00:05:11,520 --> 00:05:15,150
four years using Python as my first real

00:05:13,470 --> 00:05:17,820
language not like a markup language or

00:05:15,150 --> 00:05:19,530
design language so what I'm gonna be

00:05:17,820 --> 00:05:21,030
doing is actually doing a live demo with

00:05:19,530 --> 00:05:22,500
you guys going and grabbing data from an

00:05:21,030 --> 00:05:24,390
API a lot of you guys your first time

00:05:22,500 --> 00:05:26,790
here you're gonna be grabbing data from

00:05:24,390 --> 00:05:28,620
Django rest framework views you need to

00:05:26,790 --> 00:05:30,720
understand what an API is how to get

00:05:28,620 --> 00:05:33,000
these objects from an API and how to

00:05:30,720 --> 00:05:34,110
display them in your views so you can

00:05:33,000 --> 00:05:35,130
actually follow along with me if you'd

00:05:34,110 --> 00:05:37,710
like we're gonna start by going to

00:05:35,130 --> 00:05:39,030
Google and you can type in Bitcoin price

00:05:37,710 --> 00:05:42,360
API and that's what we're gonna get

00:05:39,030 --> 00:05:44,700
today you can grab a link this is the

00:05:42,360 --> 00:05:47,370
Bitcoin price it'll give you an API

00:05:44,700 --> 00:05:49,050
endpoint I'm using a free program called

00:05:47,370 --> 00:05:49,350
postman just to make this look nice for

00:05:49,050 --> 00:05:53,490
you

00:05:49,350 --> 00:05:54,990
and in postman you can grab an API and

00:05:53,490 --> 00:05:57,330
you can say I want to view this in

00:05:54,990 --> 00:05:59,730
actual JSON data which is what you would

00:05:57,330 --> 00:06:01,410
normally do and you can see that these

00:05:59,730 --> 00:06:04,170
are the keys that you'll want so if we

00:06:01,410 --> 00:06:06,360
want to get this price of Bitcoin we're

00:06:04,170 --> 00:06:10,020
gonna need to be able to say okay hey we

00:06:06,360 --> 00:06:12,600
need the BPI USD rate these are the keys

00:06:10,020 --> 00:06:15,270
you'll need to get this data which is

00:06:12,600 --> 00:06:17,850
what we're doing in this live demo let's

00:06:15,270 --> 00:06:19,800
get started so first we'll need a URL

00:06:17,850 --> 00:06:21,210
and actually first we'll need to import

00:06:19,800 --> 00:06:22,830
our libraries so there are two libraries

00:06:21,210 --> 00:06:24,120
you're gonna need when you're working

00:06:22,830 --> 00:06:27,000
with these projects one is called

00:06:24,120 --> 00:06:29,610
requests ok this is really easy to

00:06:27,000 --> 00:06:32,390
install you can look it up it says pip

00:06:29,610 --> 00:06:34,650
install requests pretty pretty simple

00:06:32,390 --> 00:06:37,320
once you pip install requests you have

00:06:34,650 --> 00:06:39,360
it JSON comes included with Python it's

00:06:37,320 --> 00:06:42,240
the second library you'll need import

00:06:39,360 --> 00:06:44,070
JSON this comes included with python you

00:06:42,240 --> 00:06:45,330
just have to import it ok with JSON

00:06:44,070 --> 00:06:47,900
there are two functions that you'll

00:06:45,330 --> 00:06:50,790
mainly mean these are dumps and loads

00:06:47,900 --> 00:06:53,790
dumps takes an object and turns it into

00:06:50,790 --> 00:06:55,740
a string loads takes a string and turns

00:06:53,790 --> 00:06:58,560
it into a date JSON object that you can

00:06:55,740 --> 00:07:00,060
now play with the Python alright so

00:06:58,560 --> 00:07:04,800
let's do this first we're gonna take our

00:07:00,060 --> 00:07:13,140
URL and save it as a string that we're

00:07:04,800 --> 00:07:16,500
gonna access then we're going to do a

00:07:13,140 --> 00:07:22,110
request dot get

00:07:16,500 --> 00:07:24,330
to get this URL if I can't type then

00:07:22,110 --> 00:07:27,930
we're gonna say our data is going to be

00:07:24,330 --> 00:07:30,750
equal to that content page dot content

00:07:27,930 --> 00:07:35,370
which is just like a string version of

00:07:30,750 --> 00:07:38,640
this page of this API data so if I print

00:07:35,370 --> 00:07:40,170
this page right now this data you'll see

00:07:38,640 --> 00:07:43,500
I'll just get a string but I won't be

00:07:40,170 --> 00:07:45,720
able to do anything with it it'll just

00:07:43,500 --> 00:07:48,230
return to me this string with all of the

00:07:45,720 --> 00:07:51,060
data that you saw here not very pretty

00:07:48,230 --> 00:07:53,160
so how can i play with the string data I

00:07:51,060 --> 00:07:58,140
just literally have to load it into JSON

00:07:53,160 --> 00:08:00,180
JSON dot loads mic my string and now I

00:07:58,140 --> 00:08:02,370
have a Python object that I can play

00:08:00,180 --> 00:08:04,710
with and so if I want to grab something

00:08:02,370 --> 00:08:07,440
here I just put in the keys and I can

00:08:04,710 --> 00:08:10,350
look the keys that I need are BPI USD

00:08:07,440 --> 00:08:19,080
rate so let's do that

00:08:10,350 --> 00:08:22,110
BPI USD rate and I should now just get

00:08:19,080 --> 00:08:23,880
the price so I just grab data from an

00:08:22,110 --> 00:08:25,530
API within less than five minutes and a

00:08:23,880 --> 00:08:26,700
live demo you guys can do this too

00:08:25,530 --> 00:08:28,860
especially if it's your first time here

00:08:26,700 --> 00:08:30,570
at Jango Khan I encourage you to go back

00:08:28,860 --> 00:08:34,229
and do this on your own practice this is

00:08:30,570 --> 00:08:36,419
what I teach my students at home and I

00:08:34,229 --> 00:08:37,800
tried to do it beforehand and yeah it

00:08:36,419 --> 00:08:40,589
looks like I was able to do it just fine

00:08:37,800 --> 00:08:42,750
so these are the same steps that you're

00:08:40,589 --> 00:08:44,790
gonna take every single time okay so all

00:08:42,750 --> 00:08:46,650
you really need to do is like save all

00:08:44,790 --> 00:08:48,690
this in a function and pass a URL and

00:08:46,650 --> 00:08:51,930
you can do this over and over and over

00:08:48,690 --> 00:08:53,190
again I hope that you can see how easy

00:08:51,930 --> 00:08:54,300
it was and this gives you the confidence

00:08:53,190 --> 00:08:56,100
to do it on your own if you've never

00:08:54,300 --> 00:08:57,660
done it if you have any questions I

00:08:56,100 --> 00:09:02,520
probably have like 30 seconds to a

00:08:57,660 --> 00:09:04,580
minute feel free now nothing yeah go

00:09:02,520 --> 00:09:04,580
ahead

00:09:06,720 --> 00:09:10,600
yeah you can you can use requests to

00:09:09,100 --> 00:09:12,760
just put it in a JSON - yeah you're

00:09:10,600 --> 00:09:14,260
absolutely right and a lot of libraries

00:09:12,760 --> 00:09:17,020
like I believe like Django comes with

00:09:14,260 --> 00:09:18,670
its own HTTP don't request library you

00:09:17,020 --> 00:09:21,550
can even say just return it in JSON

00:09:18,670 --> 00:09:23,650
format the only reason I didn't do that

00:09:21,550 --> 00:09:25,450
is because a lot of times these API

00:09:23,650 --> 00:09:26,800
endpoints are not API endpoints that

00:09:25,450 --> 00:09:28,090
you're getting data from you're just

00:09:26,800 --> 00:09:29,860
getting data from a website you're

00:09:28,090 --> 00:09:31,690
scraping it so you need the JSON library

00:09:29,860 --> 00:09:33,190
to do that okay thank you guys so much

00:09:31,690 --> 00:09:34,680
for your time I really appreciate it

00:09:33,190 --> 00:09:39,630
welcomes Django

00:09:34,680 --> 00:09:43,690
[Applause]

00:09:39,630 --> 00:09:46,180
so a quick question how many actually

00:09:43,690 --> 00:09:50,860
backup your application with a sequel

00:09:46,180 --> 00:09:54,160
backup how many people are not actually

00:09:50,860 --> 00:09:56,170
backing up their application again maybe

00:09:54,160 --> 00:09:59,740
we will have today something that's a

00:09:56,170 --> 00:10:04,029
little bit cheap and easy I ran into an

00:09:59,740 --> 00:10:07,330
issue I use Django and Siemens as a data

00:10:04,029 --> 00:10:10,149
pipeline so I passed it in for your rest

00:10:07,330 --> 00:10:12,970
it goes and does stuff it's basically

00:10:10,149 --> 00:10:17,050
making my job a lot easier so thank you

00:10:12,970 --> 00:10:21,790
to the guys who write Django my my boss

00:10:17,050 --> 00:10:25,029
thinks you also I needed to be I had two

00:10:21,790 --> 00:10:26,920
goals one I needed to be able to get my

00:10:25,029 --> 00:10:29,589
site backed up because the last thing I

00:10:26,920 --> 00:10:31,570
need is that data going away the other

00:10:29,589 --> 00:10:33,339
thing was as I needed to get production

00:10:31,570 --> 00:10:36,970
data into my development environment so

00:10:33,339 --> 00:10:40,920
I could actually test this so I wrote

00:10:36,970 --> 00:10:45,940
something wrapped around dumb data so I

00:10:40,920 --> 00:10:48,760
greet and if you guys know the way

00:10:45,940 --> 00:10:50,440
around this that doesn't require doing

00:10:48,760 --> 00:10:52,540
the shell this only works on Linux and

00:10:50,440 --> 00:10:55,029
I'm interested if you guys want me to

00:10:52,540 --> 00:10:59,770
actually put more data into time into

00:10:55,029 --> 00:11:03,660
this basically this is how you wrap

00:10:59,770 --> 00:11:07,540
around the dump data command inside of

00:11:03,660 --> 00:11:08,050
Django I'm indenting it because I'm

00:11:07,540 --> 00:11:11,020
human

00:11:08,050 --> 00:11:15,010
I cannot read JSON data no one answered

00:11:11,020 --> 00:11:17,980
giant blob I also had a requirement

00:11:15,010 --> 00:11:21,150
because that imposed on myself that it

00:11:17,980 --> 00:11:24,820
can't be one whole file I've had

00:11:21,150 --> 00:11:27,100
incidents where one part of the out of

00:11:24,820 --> 00:11:28,450
my application that has tons of data it

00:11:27,100 --> 00:11:31,540
doesn't have to be restored

00:11:28,450 --> 00:11:34,649
or I don't want to import it and wait

00:11:31,540 --> 00:11:38,620
for that so I have it this thing dumped

00:11:34,649 --> 00:11:43,839
each model of each application one at a

00:11:38,620 --> 00:11:49,740
time into its own JSON file the backup

00:11:43,839 --> 00:11:54,300
model here does that so you will take in

00:11:49,740 --> 00:11:56,970
the target which is the dotted notation

00:11:54,300 --> 00:12:02,660
of the model and at the time so I can

00:11:56,970 --> 00:12:07,820
say give that to the file name and

00:12:02,660 --> 00:12:09,810
that's pulling from this lip here

00:12:07,820 --> 00:12:14,490
basically loops through every

00:12:09,810 --> 00:12:17,340
application if I blacklist a a app

00:12:14,490 --> 00:12:21,600
inside of Django usually because I'm not

00:12:17,340 --> 00:12:24,270
using those those tables I can then save

00:12:21,600 --> 00:12:30,020
each file out to a folder the folder

00:12:24,270 --> 00:12:35,270
then I also have to for some odd reason

00:12:30,020 --> 00:12:39,330
why often auth token and content types

00:12:35,270 --> 00:12:42,980
which often content types are Django

00:12:39,330 --> 00:12:47,010
native apps for the authentication and

00:12:42,980 --> 00:12:52,050
content type I believe is part of the

00:12:47,010 --> 00:12:59,820
migrations do not like me breaking them

00:12:52,050 --> 00:13:02,550
down then after that there is a I copy

00:12:59,820 --> 00:13:08,310
out my media folder because not all data

00:13:02,550 --> 00:13:12,230
is in the actual database then I tar it

00:13:08,310 --> 00:13:15,750
all up removed what I cut saved out and

00:13:12,230 --> 00:13:18,510
yes I have a bad habit of doing an

00:13:15,750 --> 00:13:20,730
exception se print e because this is

00:13:18,510 --> 00:13:23,280
caught by the utility that shells into

00:13:20,730 --> 00:13:30,330
my my box and says run the backup

00:13:23,280 --> 00:13:33,210
I do register it as a task within Django

00:13:30,330 --> 00:13:35,840
itself and I need to put in a document

00:13:33,210 --> 00:13:41,010
on how to action ARRG so this is a

00:13:35,840 --> 00:13:44,520
management command and I've been using

00:13:41,010 --> 00:13:46,740
this for last three months getting data

00:13:44,520 --> 00:13:48,360
off of my server and into the tape

00:13:46,740 --> 00:13:51,560
backup without having to pay a license

00:13:48,360 --> 00:13:51,560
for CommVault

00:13:52,700 --> 00:13:59,090
what I will do is I'll dump this Geist

00:13:55,970 --> 00:14:02,960
into the general general on slack if you

00:13:59,090 --> 00:14:06,590
want to have a question or right now

00:14:02,960 --> 00:14:09,380
this only works on Linux but I'm willing

00:14:06,590 --> 00:14:11,330
to actually put in some time to get it

00:14:09,380 --> 00:14:16,880
to run on Windows or Mac if you guys are

00:14:11,330 --> 00:14:18,770
interested gods questions it's one of

00:14:16,880 --> 00:14:21,230
those create those technical depth

00:14:18,770 --> 00:14:23,920
things that will will come back and bite

00:14:21,230 --> 00:14:23,920
you in the rear end

00:14:26,740 --> 00:14:32,490
[Applause]

00:14:32,560 --> 00:14:42,950
shishah Neha Waja Andi was such a joy

00:14:38,570 --> 00:14:47,630
what song Barda malai dan what Jude sigh

00:14:42,950 --> 00:14:50,030
Raleigh North Carolina how many people

00:14:47,630 --> 00:14:52,160
understood that couple oh yeah

00:14:50,030 --> 00:14:54,200
I'm speaking Mandarin Chinese awesome

00:14:52,160 --> 00:14:56,600
now the problem is most people didn't

00:14:54,200 --> 00:14:58,430
understand that because we need

00:14:56,600 --> 00:14:59,630
translations in our apps they will

00:14:58,430 --> 00:15:06,280
understand when we don't know the

00:14:59,630 --> 00:15:06,280
language sorry a little finicky there

00:15:09,550 --> 00:15:14,420
okay so a full introduction my name is

00:15:12,590 --> 00:15:16,880
Andy night you may also know me as Pandi

00:15:14,420 --> 00:15:23,150
or the automation Panda and you might be

00:15:16,880 --> 00:15:25,790
wondering why you may be wondering why

00:15:23,150 --> 00:15:28,430
I'm speaking to you in Chinese well my

00:15:25,790 --> 00:15:30,380
family is from China here's a picture of

00:15:28,430 --> 00:15:32,480
myself with my wife in the middle and

00:15:30,380 --> 00:15:34,430
her mom this is taken as Shandong

00:15:32,480 --> 00:15:36,800
Province they're from China they speak

00:15:34,430 --> 00:15:39,380
Mandarin why does this apply to Django

00:15:36,800 --> 00:15:42,910
well we have a little bit of a story my

00:15:39,380 --> 00:15:47,120
wife and her mom oh come on

00:15:42,910 --> 00:15:49,010
technical difficulties so my wife and

00:15:47,120 --> 00:15:51,830
her mom run an export business where we

00:15:49,010 --> 00:15:53,870
ship stuff to China and they were

00:15:51,830 --> 00:15:56,270
struggling to keep up their orders so I

00:15:53,870 --> 00:15:59,450
developed a django application for them

00:15:56,270 --> 00:16:01,820
where I used the administer show they're

00:15:59,450 --> 00:16:03,230
full order processing and state and all

00:16:01,820 --> 00:16:05,090
the stuff that has to go with the orders

00:16:03,230 --> 00:16:06,530
Django is wonderful I love it that's why

00:16:05,090 --> 00:16:10,580
I'm here today because I started Django

00:16:06,530 --> 00:16:14,360
with that project oh my gosh I hope this

00:16:10,580 --> 00:16:16,550
isn't being recorded so so I use

00:16:14,360 --> 00:16:18,320
chancres admin site I hosted on Heroku

00:16:16,550 --> 00:16:20,660
it's still being used today we can take

00:16:18,320 --> 00:16:23,750
images and put them in Amazon s3 so

00:16:20,660 --> 00:16:27,950
awesome but the problem is English is

00:16:23,750 --> 00:16:29,390
not Chinese and I speak English I speak

00:16:27,950 --> 00:16:31,550
just very very little bit of

00:16:29,390 --> 00:16:32,690
conversational Chinese my wife speaks

00:16:31,550 --> 00:16:35,240
both English and Chinese

00:16:32,690 --> 00:16:37,340
but mama she does not speak English at

00:16:35,240 --> 00:16:39,980
all yet we all have to use this

00:16:37,340 --> 00:16:41,510
application for the business so the

00:16:39,980 --> 00:16:44,800
solution is let's translate the entire

00:16:41,510 --> 00:16:49,610
application between English and Chinese

00:16:44,800 --> 00:16:57,520
not now there we go no oh boy okay so

00:16:49,610 --> 00:17:00,580
I'll show you the application here so

00:16:57,520 --> 00:17:00,580
[Music]

00:17:01,510 --> 00:17:05,390
get it a little bigger here so this is

00:17:03,800 --> 00:17:08,030
just the basic Django admin site and

00:17:05,390 --> 00:17:09,890
Chinese export order system if I go to

00:17:08,030 --> 00:17:12,410
something like orders we can see all of

00:17:09,890 --> 00:17:13,339
the orders but most of this stuff is in

00:17:12,410 --> 00:17:14,930
English right

00:17:13,339 --> 00:17:17,179
I found a way that you can actually

00:17:14,930 --> 00:17:18,860
translate the Django admin and I create

00:17:17,179 --> 00:17:22,699
a cool little little widget here at the

00:17:18,860 --> 00:17:25,250
top where I can click the flag and boom

00:17:22,699 --> 00:17:27,679
everything's a Mandarin look at this so

00:17:25,250 --> 00:17:30,260
awesome it's a little bit of a trick to

00:17:27,679 --> 00:17:32,020
get translations working in the admin

00:17:30,260 --> 00:17:34,130
for any language job not just Chinese

00:17:32,020 --> 00:17:35,480
you have to make sure that you do

00:17:34,130 --> 00:17:39,400
translation strings on all of your

00:17:35,480 --> 00:17:41,450
models that's the big thing the

00:17:39,400 --> 00:17:44,900
administration's on its its core pages

00:17:41,450 --> 00:17:46,730
which is really nice but I look at one

00:17:44,900 --> 00:17:49,010
of these orders right you can see all

00:17:46,730 --> 00:17:50,750
the fields themselves are in Mandarin

00:17:49,010 --> 00:17:52,309
and if I ever need to switch back to

00:17:50,750 --> 00:17:53,960
English because let's say now I'm

00:17:52,309 --> 00:17:57,020
looking at this I haven't I have no idea

00:17:53,960 --> 00:17:59,000
what any of this is I can choose back

00:17:57,020 --> 00:18:00,410
like oh this is the customer and this is

00:17:59,000 --> 00:18:02,780
the status and this is all the cool

00:18:00,410 --> 00:18:04,220
stuff so if you want to learn how to do

00:18:02,780 --> 00:18:06,559
this yourself I've written a blog

00:18:04,220 --> 00:18:08,960
article on automation panda comm it's

00:18:06,559 --> 00:18:10,610
called Django admin translations I'll

00:18:08,960 --> 00:18:12,800
show you how to do full translations of

00:18:10,610 --> 00:18:14,660
the entire app as well as parts for the

00:18:12,800 --> 00:18:16,730
admin in addition to that cool flag

00:18:14,660 --> 00:18:18,320
little widget at the top so again my

00:18:16,730 --> 00:18:20,000
name is Pandi thank you for listening to

00:18:18,320 --> 00:18:21,170
my awesome story of how I use Jango to

00:18:20,000 --> 00:18:23,090
help my family solve a business problem

00:18:21,170 --> 00:18:24,650
you can follow me on twitter at

00:18:23,090 --> 00:18:26,150
automation panda comm and if you want

00:18:24,650 --> 00:18:29,860
some cool panda stickers come find me

00:18:26,150 --> 00:18:29,860
sometime during the conference thank you

00:18:29,960 --> 00:18:33,210
[Applause]

00:18:34,560 --> 00:18:38,970
hey so I'm Dustin I work at Google I do

00:18:37,410 --> 00:18:41,100
developer advocacy so I care about

00:18:38,970 --> 00:18:42,240
Google cloud and Python and it actually

00:18:41,100 --> 00:18:44,040
kind of looks like this because a lot of

00:18:42,240 --> 00:18:45,270
things have Python one of my new

00:18:44,040 --> 00:18:46,020
products doesn't have Python it's called

00:18:45,270 --> 00:18:48,240
cloud run

00:18:46,020 --> 00:18:49,380
it's called stateless HTTP containers in

00:18:48,240 --> 00:18:51,360
a fully managed environment but really

00:18:49,380 --> 00:18:53,040
that's just docker images as a service

00:18:51,360 --> 00:18:54,780
which means that if you create a docker

00:18:53,040 --> 00:18:56,850
image that listens for requests on

00:18:54,780 --> 00:18:58,260
localhost listens on specific port and

00:18:56,850 --> 00:19:01,650
starts h-2b server in four minutes

00:18:58,260 --> 00:19:03,210
that's plenty of time it works so you

00:19:01,650 --> 00:19:04,800
can do like a little flask app like this

00:19:03,210 --> 00:19:06,420
and do your requirements not text and

00:19:04,800 --> 00:19:08,700
write a docker file that looks like this

00:19:06,420 --> 00:19:09,960
and you deploy it and it's awesome the

00:19:08,700 --> 00:19:11,670
cool thing about this is it uses the

00:19:09,960 --> 00:19:15,060
Python base image here in this example

00:19:11,670 --> 00:19:16,500
so if you look at the container contract

00:19:15,060 --> 00:19:18,660
for cloud run it actually says that you

00:19:16,500 --> 00:19:20,670
can use any programming language of your

00:19:18,660 --> 00:19:23,160
choice and any base image provided that

00:19:20,670 --> 00:19:25,230
it respects the requirements I listed

00:19:23,160 --> 00:19:26,730
before so when I saw this I didn't think

00:19:25,230 --> 00:19:29,850
if this so much has a feature but more

00:19:26,730 --> 00:19:32,190
of like a challenge like hmm what could

00:19:29,850 --> 00:19:34,530
I possibly run like could I run a super

00:19:32,190 --> 00:19:36,870
super old version of Python instead this

00:19:34,530 --> 00:19:38,670
is what I did I went to python.org and I

00:19:36,870 --> 00:19:40,260
went to the download section and I

00:19:38,670 --> 00:19:41,790
scrolled down because I was looking for

00:19:40,260 --> 00:19:44,190
a specific release but this just lists

00:19:41,790 --> 00:19:46,440
releases of Python 3 and 2 so I click

00:19:44,190 --> 00:19:48,510
view older releases and I got this page

00:19:46,440 --> 00:19:49,830
which is older source releases but these

00:19:48,510 --> 00:19:52,370
are mostly just binaries I clicked on

00:19:49,830 --> 00:19:54,930
older source releases I got on this page

00:19:52,370 --> 00:19:56,700
which is a legacy dot python.org what

00:19:54,930 --> 00:19:59,580
you know is awesome and I scroll down

00:19:56,700 --> 00:20:01,200
here and I found python 1.0.1 which is

00:19:59,580 --> 00:20:04,590
uploaded here in 2002 it actually came

00:20:01,200 --> 00:20:06,390
out in the 90s so all I need to do is

00:20:04,590 --> 00:20:08,250
make a really small patch actually just

00:20:06,390 --> 00:20:09,810
change one function and I was able to

00:20:08,250 --> 00:20:12,060
get this compiled on the latest version

00:20:09,810 --> 00:20:13,980
of a bun too so with a small docker file

00:20:12,060 --> 00:20:16,130
like this I could inherit from Ubuntu

00:20:13,980 --> 00:20:19,380
install some necessary dependencies

00:20:16,130 --> 00:20:21,720
download the source apply my patch and

00:20:19,380 --> 00:20:24,690
they can configure it and then I execute

00:20:21,720 --> 00:20:27,230
a Python command and I get a rebel I get

00:20:24,690 --> 00:20:30,420
a Python shell and I actually get root

00:20:27,230 --> 00:20:32,340
awesome cool the fun thing about this

00:20:30,420 --> 00:20:34,560
Python version though is it's so old

00:20:32,340 --> 00:20:35,550
that it doesn't have the - version flag

00:20:34,560 --> 00:20:38,070
so I can actually show you what you

00:20:35,550 --> 00:20:42,040
version it is but trust me it's one zero

00:20:38,070 --> 00:20:45,010
one yeah

00:20:42,040 --> 00:20:46,240
but the Python wrapper works and it's

00:20:45,010 --> 00:20:48,280
really cool and you can see it's Python

00:20:46,240 --> 00:20:50,410
one zero one there and the thing about

00:20:48,280 --> 00:20:51,790
this though doesn't have the base HTTP

00:20:50,410 --> 00:20:52,840
server HTTP server at all because it

00:20:51,790 --> 00:20:55,000
didn't exist yet in this version of

00:20:52,840 --> 00:20:55,780
Python so what I did is I went back to

00:20:55,000 --> 00:20:57,340
this page

00:20:55,780 --> 00:20:58,770
1.3 instead because I didn't feel like

00:20:57,340 --> 00:21:02,680
backporting which happily came out in

00:20:58,770 --> 00:21:05,380
2002 instead of to understand why again

00:21:02,680 --> 00:21:07,450
a patch again the docker file again I

00:21:05,380 --> 00:21:10,510
get rude version still doesn't exist but

00:21:07,450 --> 00:21:14,650
I can import base HTTP server which is

00:21:10,510 --> 00:21:15,550
awesome internet so with that you can

00:21:14,650 --> 00:21:16,990
write something that kind of if you

00:21:15,550 --> 00:21:18,580
screen out it looks like a flask app but

00:21:16,990 --> 00:21:20,680
really it's using this little handler

00:21:18,580 --> 00:21:22,120
thing to write do do a git and here it

00:21:20,680 --> 00:21:24,220
says hello from Python it includes to

00:21:22,120 --> 00:21:26,830
stock version and then I just run that

00:21:24,220 --> 00:21:28,720
forever and then I build a docker base

00:21:26,830 --> 00:21:30,370
image so you can put these on docker hub

00:21:28,720 --> 00:21:32,080
so you you've docker base images to give

00:21:30,370 --> 00:21:34,900
you this version of Python for 1.0.1

00:21:32,080 --> 00:21:36,550
21.3 cool so then I can write on another

00:21:34,900 --> 00:21:39,670
docker file that inherits from that base

00:21:36,550 --> 00:21:42,190
image copies my app in runs on specific

00:21:39,670 --> 00:21:44,170
port and runs the app so it does all

00:21:42,190 --> 00:21:47,110
those things that's important runs yep

00:21:44,170 --> 00:21:50,350
and with just those two files docker

00:21:47,110 --> 00:21:52,300
file and a Popeye I can first build my

00:21:50,350 --> 00:21:53,830
image with g-cloud so it does a bunch of

00:21:52,300 --> 00:21:57,220
stuff and eventually it says success but

00:21:53,830 --> 00:21:59,140
really those exist and then I can deploy

00:21:57,220 --> 00:22:01,510
it to cloud run with this command and

00:21:59,140 --> 00:22:02,620
then I get a URL and I can go and this

00:22:01,510 --> 00:22:06,000
is that you're honest says hello from

00:22:02,620 --> 00:22:09,220
Python 1.3 all right we did it

00:22:06,000 --> 00:22:12,010
we'd say 5.3 so we can run a service

00:22:09,220 --> 00:22:13,150
runtime with Python 3 now so here's some

00:22:12,010 --> 00:22:14,800
links if you're interested in doing

00:22:13,150 --> 00:22:17,020
something like this I will say Brian

00:22:14,800 --> 00:22:20,200
don't want to try this at home try it at

00:22:17,020 --> 00:22:26,190
work instead thanks I'm Dustin

00:22:20,200 --> 00:22:33,520
[Applause]

00:22:26,190 --> 00:22:35,350
hi I'm Paul so I made this little pet

00:22:33,520 --> 00:22:39,700
project it combines

00:22:35,350 --> 00:22:52,270
Gengo filter with this little JavaScript

00:22:39,700 --> 00:22:54,390
plug-in called data tables so why would

00:22:52,270 --> 00:22:59,470
you want to combine Jenko filter and

00:22:54,390 --> 00:23:07,570
data tables Jay yes you may ask it's a

00:22:59,470 --> 00:23:13,480
great question well the answer is jingle

00:23:07,570 --> 00:23:17,830
filter is awesome and dude tables is

00:23:13,480 --> 00:23:19,630
awesome but there wasn't there wasn't a

00:23:17,830 --> 00:23:25,080
really clear way for me to combine them

00:23:19,630 --> 00:23:25,080
so I built a way

00:23:39,800 --> 00:23:45,480
so in my demo project I have a silly

00:23:43,410 --> 00:23:50,809
little model that just first-name

00:23:45,480 --> 00:23:54,330
lastname some rolodex fields and I

00:23:50,809 --> 00:23:58,550
created like 10,000 records here and

00:23:54,330 --> 00:24:00,929
normally if you were to build this with

00:23:58,550 --> 00:24:04,620
jingle filter and try to render

00:24:00,929 --> 00:24:12,540
everything it would obviously take too

00:24:04,620 --> 00:24:18,840
long to display it on the page so Dave

00:24:12,540 --> 00:24:22,790
tables has this Ajax feature where it

00:24:18,840 --> 00:24:42,420
will do pagination among other things

00:24:22,790 --> 00:24:43,860
and so my demo project I have you take

00:24:42,420 --> 00:24:48,330
the value

00:24:43,860 --> 00:24:52,920
response that data tables jjs gives to

00:24:48,330 --> 00:24:55,679
you and then query the data that you

00:24:52,920 --> 00:24:58,970
want and send it back in the format that

00:24:55,679 --> 00:24:58,970
it's expecting in JSON

00:25:07,440 --> 00:25:14,970
so just to give you an idea this is some

00:25:13,120 --> 00:25:18,790
of the stuff you have to do to

00:25:14,970 --> 00:25:30,100
initialize data tables and right here is

00:25:18,790 --> 00:25:33,970
the URL my endpoint and to kind of tie

00:25:30,100 --> 00:25:40,030
this all together I have a little bit of

00:25:33,970 --> 00:25:42,640
JavaScript here and all the JavaScript

00:25:40,030 --> 00:25:52,480
does is take any values that you put in

00:25:42,640 --> 00:25:58,210
these fields packages it up into the

00:25:52,480 --> 00:26:03,670
initialize function so Dave tables knows

00:25:58,210 --> 00:26:06,490
what to do with it so that's all I got

00:26:03,670 --> 00:26:09,570
for you if you find this interesting

00:26:06,490 --> 00:26:09,570
here's the link to it

00:26:10,680 --> 00:26:19,130
Thanks

00:26:13,330 --> 00:26:23,210
[Applause]

00:26:19,130 --> 00:26:26,809
I am Don wages um you may have seen me

00:26:23,210 --> 00:26:29,480
on the interwebs twittering I do that I

00:26:26,809 --> 00:26:32,630
do that a fair amount okay there you go

00:26:29,480 --> 00:26:35,900
that works I'm a freelance developer and

00:26:32,630 --> 00:26:37,190
I do reaction jingo jango girls is

00:26:35,900 --> 00:26:39,410
amazing if you're not familiar with

00:26:37,190 --> 00:26:42,200
django girls it's amazing I came in

00:26:39,410 --> 00:26:43,940
through 2016 there's a first thing that

00:26:42,200 --> 00:26:47,179
made me feel like it could be a real

00:26:43,940 --> 00:26:48,940
software engineer and now this is how I

00:26:47,179 --> 00:26:52,059
pay my bills so that's like I don't know

00:26:48,940 --> 00:26:55,220
and I switched from project management

00:26:52,059 --> 00:26:56,450
successfully about a year ago I'm about

00:26:55,220 --> 00:26:59,419
to anniversary but I've been doing

00:26:56,450 --> 00:27:01,429
Django since 2016 so I've been

00:26:59,419 --> 00:27:03,860
volunteering and working with black and

00:27:01,429 --> 00:27:05,570
pink anyone familiar with the nonprofit

00:27:03,860 --> 00:27:07,220
organization black and pink raise your

00:27:05,570 --> 00:27:09,679
hands okay

00:27:07,220 --> 00:27:12,350
cool a few people so they've been around

00:27:09,679 --> 00:27:13,880
for 15 years don't need to read all of

00:27:12,350 --> 00:27:16,700
this there is a link and I'm just gonna

00:27:13,880 --> 00:27:20,000
tell you the synopsis they their

00:27:16,700 --> 00:27:24,080
objective is to match free world people

00:27:20,000 --> 00:27:28,039
with LGBTQ and hiv-positive prisoner

00:27:24,080 --> 00:27:30,559
members incarcerated so it started out

00:27:28,039 --> 00:27:32,870
really really basic and fundamental just

00:27:30,559 --> 00:27:35,630
like Excel documents and it's just hard

00:27:32,870 --> 00:27:37,720
to navigate and then we have Django and

00:27:35,630 --> 00:27:40,010
we all kind of understand the really

00:27:37,720 --> 00:27:42,140
effective use case that Django will

00:27:40,010 --> 00:27:43,900
provide also with the Django admin

00:27:42,140 --> 00:27:47,450
there's a lot of support that they want

00:27:43,900 --> 00:27:52,070
for their teams and case management of

00:27:47,450 --> 00:27:55,549
these highly vulnerable populations so

00:27:52,070 --> 00:27:56,240
they're over overall goals a lot are in

00:27:55,549 --> 00:27:58,880
the background

00:27:56,240 --> 00:28:03,289
I'm back-end with kind of CM CMS kinds

00:27:58,880 --> 00:28:05,090
of things and safety and then also to

00:28:03,289 --> 00:28:08,000
kind of quantify what their success

00:28:05,090 --> 00:28:09,470
metrics are there's also a lot of things

00:28:08,000 --> 00:28:11,299
that we would want from the outside

00:28:09,470 --> 00:28:12,980
world population interacting with the

00:28:11,299 --> 00:28:17,090
database and with the incarcerated

00:28:12,980 --> 00:28:20,539
members like adding ability to donate

00:28:17,090 --> 00:28:22,880
easily with act blue and also sending up

00:28:20,539 --> 00:28:24,260
out updates and things like that and

00:28:22,880 --> 00:28:28,820
encouraging people to continue to

00:28:24,260 --> 00:28:32,630
contact their incarcerated and pals so

00:28:28,820 --> 00:28:34,670
some things that I want to highlight

00:28:32,630 --> 00:28:37,070
we are going to be sprinting on it yay

00:28:34,670 --> 00:28:38,930
on Thursday Thursday only I'm sorry I

00:28:37,070 --> 00:28:42,380
have a flight on Friday

00:28:38,930 --> 00:28:44,480
but please come and help me sprint on

00:28:42,380 --> 00:28:46,970
such a really great cause we have a lot

00:28:44,480 --> 00:28:48,920
of really great minds here I want to say

00:28:46,970 --> 00:28:51,020
that we did start sprinting on it at

00:28:48,920 --> 00:28:53,180
PyCon UK and we logged a lot of really

00:28:51,020 --> 00:28:58,010
awesome issues had great contributions

00:28:53,180 --> 00:29:01,960
and I know we can one up icon UK so some

00:28:58,010 --> 00:29:05,750
things that we are we need help with are

00:29:01,960 --> 00:29:07,700
we want to add wagtail in there d ref

00:29:05,750 --> 00:29:09,290
renderer that was talked about at Tim

00:29:07,700 --> 00:29:12,320
Allen's talk that was like that would be

00:29:09,290 --> 00:29:14,450
really really cool we have safety bandit

00:29:12,320 --> 00:29:17,390
docker we need to stay um have a staging

00:29:14,450 --> 00:29:22,220
server Redis ansible digitalocean react

00:29:17,390 --> 00:29:25,490
15 Redux PostgreSQL Django rest

00:29:22,220 --> 00:29:27,620
framework Factory boy we want to have

00:29:25,490 --> 00:29:29,890
some demo data and data in there we need

00:29:27,620 --> 00:29:34,340
set up scripts to be kind of fixed and

00:29:29,890 --> 00:29:36,400
helped so if you know bash ui/ux because

00:29:34,340 --> 00:29:38,990
the front-end is kind of just a little

00:29:36,400 --> 00:29:42,260
we I do django first and then I did

00:29:38,990 --> 00:29:43,790
JavaScript so you know and security

00:29:42,260 --> 00:29:46,190
security security so we have a highly

00:29:43,790 --> 00:29:48,290
vulnerable population currently the code

00:29:46,190 --> 00:29:50,810
is closed and we were sprinting on it so

00:29:48,290 --> 00:29:54,440
I will give you access to that and then

00:29:50,810 --> 00:29:56,180
once the security is all covered then we

00:29:54,440 --> 00:29:58,520
can open it up because it's just a very

00:29:56,180 --> 00:30:01,460
highly vulnerable population and we've

00:29:58,520 --> 00:30:02,810
also added black on there so these are

00:30:01,460 --> 00:30:05,420
the things if any of those sound like

00:30:02,810 --> 00:30:09,560
your skill sets please come and see me

00:30:05,420 --> 00:30:12,770
and you can also Twitter at me and yeah

00:30:09,560 --> 00:30:14,990
here's one of my one of my tweets so we

00:30:12,770 --> 00:30:16,700
are welcomed with first-timers I mean

00:30:14,990 --> 00:30:19,610
documentation is a thing that we need to

00:30:16,700 --> 00:30:22,490
do so all levels will be incredibly

00:30:19,610 --> 00:30:27,020
valuable and I'm just a very thankful

00:30:22,490 --> 00:30:29,510
person you know yeah oh and we are

00:30:27,020 --> 00:30:31,670
karaoking at the hive after reception we

00:30:29,510 --> 00:30:35,390
haven't picked a time please

00:30:31,670 --> 00:30:39,510
join the slack and look at the gathering

00:30:35,390 --> 00:30:41,400
social channel thing and I'll be singing

00:30:39,510 --> 00:30:43,140
something I'm not so well but you know

00:30:41,400 --> 00:30:44,540
it'll happen and I'll embarrass myself

00:30:43,140 --> 00:30:48,900
and you can embarrass yourself with me

00:30:44,540 --> 00:30:51,610
anyway that's me thank you

00:30:48,900 --> 00:31:04,900
[Applause]

00:30:51,610 --> 00:31:04,900

YouTube URL: https://www.youtube.com/watch?v=b5jS4mLR1N0


