Title: DjangoCon US 2016 - Dispelling The 'Genius Programmer' Myth Through Code Review by Ashwini Oruganti
Publication date: 2016-08-11
Playlist: DjangoCon US 2016
Description: 
	DjangoCon US 2016 - Dispelling The 'Genius Programmer' Myth Through Code Review by Ashwini Oruganti

Open source libraries have high quality standards. And understandably so, since the more important and widely used a project becomes, the more essential it is to maintain it. But this at times affects one of the fundamental advantages of open source software - contributions. Strict quality requirements and harsh code reviews make the process of contributing patches discouraging, disappointing, and even stressful.

In this talk, I will discuss tools and processes used by major Python libraries to maintain a high level of code quality and a robust code review culture. I will work through a list of people's code review fears with personal anecdotes, and how to deal with them and be more receptive to critical feedback. Through real examples taken from popular open source Python libraries, I will try to show what makes a good code review, what makes a bad code review, and what minor changes can turn the latter into the former.

This talk was presented at: https://2016.djangocon.us/schedule/presentation/32/

LINKS:
Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,000 --> 00:00:02,450
come on

00:00:14,580 --> 00:00:23,410
okay good morning everyone I'm a

00:00:21,520 --> 00:00:26,200
software engineer living in San

00:00:23,410 --> 00:00:29,349
Francisco you may know me from one or

00:00:26,200 --> 00:00:31,869
more of these other places this is my

00:00:29,349 --> 00:00:34,690
first Django gone ever and also by first

00:00:31,869 --> 00:00:42,329
time in Philadelphia so really excited

00:00:34,690 --> 00:00:46,179
to be here the campus is like amazing so

00:00:42,329 --> 00:00:49,390
ever since I was a kid I had always

00:00:46,179 --> 00:00:53,530
wanted to be good at things without

00:00:49,390 --> 00:00:56,140
trying the first time I came across a

00:00:53,530 --> 00:00:59,499
piano I tried to play my favorite song

00:00:56,140 --> 00:01:01,449
on it and I somehow expected to get it

00:00:59,499 --> 00:01:07,990
alright without like any training

00:01:01,449 --> 00:01:10,870
whatsoever I fail the first time I tried

00:01:07,990 --> 00:01:13,510
to ride a bike I wanted to get a ride

00:01:10,870 --> 00:01:18,400
and once again and like not fun at all I

00:01:13,510 --> 00:01:22,600
did fall and I say these things as if

00:01:18,400 --> 00:01:26,620
the older me is any wiser but that's not

00:01:22,600 --> 00:01:29,740
really true so every time even today

00:01:26,620 --> 00:01:32,590
when I try to do something new I still

00:01:29,740 --> 00:01:36,730
hopes to give excellent results by first

00:01:32,590 --> 00:01:41,290
attempt Ready Set faults and failures

00:01:36,730 --> 00:01:45,130
later now I knew that this is not how

00:01:41,290 --> 00:01:48,400
things work I had hoped the same when I

00:01:45,130 --> 00:01:51,070
started programming it was like you can

00:01:48,400 --> 00:01:54,610
say I was lazy or that popular culture

00:01:51,070 --> 00:01:58,030
makes success story sound like a lenders

00:01:54,610 --> 00:02:01,270
Allah takes that a successful person has

00:01:58,030 --> 00:02:03,850
an intellectual gift that is far greater

00:02:01,270 --> 00:02:06,700
than what most people have in a given

00:02:03,850 --> 00:02:10,509
area and not just programming that's

00:02:06,700 --> 00:02:14,230
like mathematics music dancing running

00:02:10,509 --> 00:02:16,660
any athletic sport and by that natural

00:02:14,230 --> 00:02:20,460
ability they're going to fire Excel the

00:02:16,660 --> 00:02:22,850
rest of us and almost as if by destiny

00:02:20,460 --> 00:02:28,230
right you can eat it up crushing destiny

00:02:22,850 --> 00:02:32,640
so in 2009 foods and been to engineers

00:02:28,230 --> 00:02:36,600
from google deeply analyzed this they've

00:02:32,640 --> 00:02:40,050
crafted a myth behind this the ideal

00:02:36,600 --> 00:02:43,290
programmer they say hey here's a genius

00:02:40,050 --> 00:02:45,990
the genius goes off in a game right this

00:02:43,290 --> 00:02:49,860
brilliant thing reveals it to the world

00:02:45,990 --> 00:02:52,590
and becomes famous forever I mean I hear

00:02:49,860 --> 00:02:57,780
it often I'm sure those of you who are

00:02:52,590 --> 00:03:00,900
software engineers improve like as a in

00:02:57,780 --> 00:03:04,590
a professional capacity also hear it so

00:03:00,900 --> 00:03:09,030
often that X right excellent code x is

00:03:04,590 --> 00:03:11,490
really smart so i started investigating

00:03:09,030 --> 00:03:15,500
what what things genius programmers are

00:03:11,490 --> 00:03:19,920
like where do they get their ideas from

00:03:15,500 --> 00:03:23,910
how can they look at a piece of code and

00:03:19,920 --> 00:03:27,990
say hey that won't work hey that won't

00:03:23,910 --> 00:03:32,460
scale it is true that while being

00:03:27,990 --> 00:03:35,160
skilled and talented helped i realized

00:03:32,460 --> 00:03:38,790
that a large part of this is because

00:03:35,160 --> 00:03:42,560
these experts have put in a lot of

00:03:38,790 --> 00:03:45,990
deliberate practice behind their work

00:03:42,560 --> 00:03:49,200
they've iterated through so many failure

00:03:45,990 --> 00:03:53,060
modes so much that now when they work

00:03:49,200 --> 00:03:56,930
with all appears to be instantaneous and

00:03:53,060 --> 00:04:01,290
when you get to that level of specifics

00:03:56,930 --> 00:04:05,010
you realize that there's no reason why

00:04:01,290 --> 00:04:10,490
these things cannot be doc practiced or

00:04:05,010 --> 00:04:14,670
learn a great way perhaps the best way

00:04:10,490 --> 00:04:18,630
to become an expert programmer is to

00:04:14,670 --> 00:04:21,570
have one teach you unfortunately just

00:04:18,630 --> 00:04:25,920
simply walking up to one and being I

00:04:21,570 --> 00:04:28,050
hate each be like make me like you that

00:04:25,920 --> 00:04:31,950
won't work that doesn't always work at

00:04:28,050 --> 00:04:33,090
least I know this because I've tried so

00:04:31,950 --> 00:04:35,520
a good

00:04:33,090 --> 00:04:38,910
energy here is to ask them to review

00:04:35,520 --> 00:04:42,870
something that you've done and gather

00:04:38,910 --> 00:04:45,800
feedback and it's even better if that

00:04:42,870 --> 00:04:51,120
something is a project they care about

00:04:45,800 --> 00:04:54,510
and often the projects that programmers

00:04:51,120 --> 00:04:58,410
care deeply about our their own open

00:04:54,510 --> 00:05:02,940
source libraries so go contribute to

00:04:58,410 --> 00:05:05,370
their projects if you haven't already

00:05:02,940 --> 00:05:08,040
made any open source contributions yet

00:05:05,370 --> 00:05:11,570
think about how you would want that

00:05:08,040 --> 00:05:15,900
experience to be if you have already

00:05:11,570 --> 00:05:19,110
think about your experiences so far do

00:05:15,900 --> 00:05:23,729
you feel happy accomplished or rewarded

00:05:19,110 --> 00:05:26,520
if your batch is accepted and merged do

00:05:23,729 --> 00:05:31,440
you feel valued if someone thanks you

00:05:26,520 --> 00:05:35,130
for your time I know I definitely do and

00:05:31,440 --> 00:05:38,160
most people agree successful

00:05:35,130 --> 00:05:42,030
contributions make us feel happy and

00:05:38,160 --> 00:05:44,820
productive and I don't just mean a

00:05:42,030 --> 00:05:47,669
successful merge by a contribution when

00:05:44,820 --> 00:05:49,979
I say contribution I mean right from the

00:05:47,669 --> 00:05:53,220
point where one starts working on an

00:05:49,979 --> 00:05:55,680
issue to when the main dinners are other

00:05:53,220 --> 00:05:58,650
community members start reviewing their

00:05:55,680 --> 00:06:03,510
code finally when the said contribution

00:05:58,650 --> 00:06:07,470
gets merged so let's assume we all buy

00:06:03,510 --> 00:06:10,110
into that that we all want to see more

00:06:07,470 --> 00:06:12,840
successful contributions and we want our

00:06:10,110 --> 00:06:15,210
patches to get accepted also as main

00:06:12,840 --> 00:06:18,419
dinners we want more quality patches for

00:06:15,210 --> 00:06:21,380
our software this leads us to the next

00:06:18,419 --> 00:06:24,660
part how do we make this process

00:06:21,380 --> 00:06:30,930
painless for contributors and efficient

00:06:24,660 --> 00:06:34,440
for maintainer and more selfishly how do

00:06:30,930 --> 00:06:37,110
I become an expert contributor and how

00:06:34,440 --> 00:06:39,389
do I get more people to work on

00:06:37,110 --> 00:06:43,590
improving the library I main theme and

00:06:39,389 --> 00:06:44,700
care about before we address those

00:06:43,590 --> 00:06:48,540
issues

00:06:44,700 --> 00:06:52,590
we have a problem this this whole part

00:06:48,540 --> 00:06:56,090
about a non-expert seeking feedback from

00:06:52,590 --> 00:07:00,750
the expert this part is a little scary

00:06:56,090 --> 00:07:03,660
it means that you have to sometimes show

00:07:00,750 --> 00:07:07,800
people go that you wrote that isn't

00:07:03,660 --> 00:07:11,400
already in a great shape and people want

00:07:07,800 --> 00:07:17,630
to be seen as clever and however people

00:07:11,400 --> 00:07:20,280
don't make mistakes right wrong this

00:07:17,630 --> 00:07:22,890
well let's take an example from Python

00:07:20,280 --> 00:07:26,280
there is thus library called there is a

00:07:22,890 --> 00:07:28,470
part of Python called async I oh but a

00:07:26,280 --> 00:07:31,950
lot of people have been really excited

00:07:28,470 --> 00:07:37,230
about recently it looks quite good now

00:07:31,950 --> 00:07:39,660
but taking a look into its history shows

00:07:37,230 --> 00:07:44,210
that a lot of discussions took place

00:07:39,660 --> 00:07:47,130
during its inception somewhere in person

00:07:44,210 --> 00:07:50,400
somewhere online somewhere on mailing

00:07:47,130 --> 00:07:53,610
lists and there are many iterations of

00:07:50,400 --> 00:07:58,410
design reviews and quite some rewrites

00:07:53,610 --> 00:08:00,840
and that is how we got that we got to

00:07:58,410 --> 00:08:02,550
the current state of facing cayo a lot

00:08:00,840 --> 00:08:08,160
of people were involved in it one person

00:08:02,550 --> 00:08:12,500
alone did not write it collaboration is

00:08:08,160 --> 00:08:16,410
not just essential it's a prerequisite

00:08:12,500 --> 00:08:20,670
it's a must-have it is not a nice to

00:08:16,410 --> 00:08:23,610
have and no one thinks no one builds

00:08:20,670 --> 00:08:28,470
things alone like not Guido not Jessica

00:08:23,610 --> 00:08:31,080
not glyph not get it and the experienced

00:08:28,470 --> 00:08:34,200
programmers just lead their projects

00:08:31,080 --> 00:08:36,300
they encourage collaboration and build a

00:08:34,200 --> 00:08:41,790
community around the things to care

00:08:36,300 --> 00:08:45,060
about that's it it is sometimes

00:08:41,790 --> 00:08:47,550
frustrating to contribute when the main

00:08:45,060 --> 00:08:51,540
tanners would just merge your passion

00:08:47,550 --> 00:08:55,530
and throw Olympics at you and suggest an

00:08:51,540 --> 00:08:57,360
improved implementation and request a

00:08:55,530 --> 00:09:00,269
rewrite but

00:08:57,360 --> 00:09:02,640
have good reason to do it once your part

00:09:00,269 --> 00:09:04,579
is immersed in they are the ones who

00:09:02,640 --> 00:09:07,950
will lead to maintain it from there

00:09:04,579 --> 00:09:09,600
their goal is to make that process that

00:09:07,950 --> 00:09:13,110
that process of maintaining it as

00:09:09,600 --> 00:09:15,510
painless as possible because all this is

00:09:13,110 --> 00:09:18,720
happening on volunteer time especially

00:09:15,510 --> 00:09:22,380
for open source libraries that have been

00:09:18,720 --> 00:09:25,200
here for a while at by God this year

00:09:22,380 --> 00:09:27,720
there was an amazing doc bye Auggie and

00:09:25,200 --> 00:09:30,990
Nathaniel where they showed a slide with

00:09:27,720 --> 00:09:35,160
never ending lines of poorly organized

00:09:30,990 --> 00:09:38,310
code the slide was animated and pretty

00:09:35,160 --> 00:09:40,380
and really well written but every

00:09:38,310 --> 00:09:43,260
maintainer in the room vinced at the

00:09:40,380 --> 00:09:46,290
side of that slide they recognized the

00:09:43,260 --> 00:09:49,019
theme of maintaining such a project they

00:09:46,290 --> 00:09:51,600
all secretly hoped that their work

00:09:49,019 --> 00:09:55,709
doesn't know and doesn't ever look like

00:09:51,600 --> 00:09:59,339
that so every time someone mentions

00:09:55,709 --> 00:10:02,550
peppy lenders code coverage continuous

00:09:59,339 --> 00:10:05,040
integration table tools or just more

00:10:02,550 --> 00:10:07,079
tests or more documentation for tests

00:10:05,040 --> 00:10:09,269
they're not trying to block your

00:10:07,079 --> 00:10:13,190
progress by being nitpicky they are

00:10:09,269 --> 00:10:15,480
trying to maintain code quality and

00:10:13,190 --> 00:10:20,250
there are always things you can do to

00:10:15,480 --> 00:10:22,250
get around those knipex look for example

00:10:20,250 --> 00:10:24,750
look for Gooding standard guidelines

00:10:22,250 --> 00:10:27,560
every large open source project

00:10:24,750 --> 00:10:30,870
welcoming contributions should have one

00:10:27,560 --> 00:10:33,630
but making sure your code follows these

00:10:30,870 --> 00:10:36,540
basic guidelines before you submit it

00:10:33,630 --> 00:10:42,750
for review you're making their viewers

00:10:36,540 --> 00:10:46,320
job a lot easier and you but like before

00:10:42,750 --> 00:10:48,680
you actually go on to contribute knowing

00:10:46,320 --> 00:10:51,180
the process is useful at the same time

00:10:48,680 --> 00:10:54,470
it's also important to respect the

00:10:51,180 --> 00:10:59,459
process many open-source libraries have

00:10:54,470 --> 00:11:02,490
these vet established steps or processes

00:10:59,459 --> 00:11:04,290
that they like following sometimes it

00:11:02,490 --> 00:11:08,640
can be hard to understand why this

00:11:04,290 --> 00:11:09,710
process was choosen or why it is so

00:11:08,640 --> 00:11:11,780
important

00:11:09,710 --> 00:11:15,650
the process may be wrong it may look

00:11:11,780 --> 00:11:19,370
long or you may be missing some context

00:11:15,650 --> 00:11:22,820
I would recommend saving that fight for

00:11:19,370 --> 00:11:24,620
later never forget that the reason you

00:11:22,820 --> 00:11:29,390
started doing this in the first place

00:11:24,620 --> 00:11:32,030
was to learn you can always go and teach

00:11:29,390 --> 00:11:33,980
the process or modify it or ask

00:11:32,030 --> 00:11:36,260
questions well you can ask questions

00:11:33,980 --> 00:11:41,450
even initially I don't think anyone but

00:11:36,260 --> 00:11:44,530
mind that but as as about the fight to

00:11:41,450 --> 00:11:47,930
change it you can save it for later I

00:11:44,530 --> 00:11:52,370
doubt every potential code reviewer in

00:11:47,930 --> 00:11:55,790
this room would thank you for this it

00:11:52,370 --> 00:11:59,300
makes their lives very very difficult if

00:11:55,790 --> 00:12:03,020
you submit like the huge boat request

00:11:59,300 --> 00:12:07,550
with lots of changes and this is not

00:12:03,020 --> 00:12:10,430
just for new contributors I'll I like an

00:12:07,550 --> 00:12:13,580
example from twisted where someone a

00:12:10,430 --> 00:12:15,980
longtime contributor made some really

00:12:13,580 --> 00:12:19,940
amazing changes to the logging system of

00:12:15,980 --> 00:12:23,810
trusted the only problem was that that

00:12:19,940 --> 00:12:26,060
diff was extremely large dando despite

00:12:23,810 --> 00:12:29,450
having an active development community

00:12:26,060 --> 00:12:32,930
the death star sat in the review you for

00:12:29,450 --> 00:12:36,770
ages we finally had to like dedicate one

00:12:32,930 --> 00:12:41,290
whole sprint day icon to review it and

00:12:36,770 --> 00:12:44,450
get it merged so gather feedback early

00:12:41,290 --> 00:12:47,680
even if things don't feel complete show

00:12:44,450 --> 00:12:51,020
your code that's the right thing to do

00:12:47,680 --> 00:12:53,540
also respect the maintenance time it's

00:12:51,020 --> 00:12:55,340
okay to ask them questions and ask them

00:12:53,540 --> 00:12:58,580
to elaborate on their comments and

00:12:55,340 --> 00:13:01,490
suggestions but respectfully not in an

00:12:58,580 --> 00:13:04,790
argument of honor and who knows maybe

00:13:01,490 --> 00:13:06,440
you were right all along maybe the

00:13:04,790 --> 00:13:12,470
expert programmer made a mistake right

00:13:06,440 --> 00:13:16,030
happens it happens a lot I see all this

00:13:12,470 --> 00:13:19,670
but I know criticism is hard to dig even

00:13:16,030 --> 00:13:21,830
when it is presented objectively without

00:13:19,670 --> 00:13:23,120
judgment or prejudice and the nicest

00:13:21,830 --> 00:13:28,520
possible manner

00:13:23,120 --> 00:13:30,800
and that's really just human nature let

00:13:28,520 --> 00:13:33,800
me show you an example from one of my

00:13:30,800 --> 00:13:36,770
first contributions to twisted where I

00:13:33,800 --> 00:13:39,050
was working on implementing implementing

00:13:36,770 --> 00:13:41,570
some endpoint api's and there was just

00:13:39,050 --> 00:13:45,640
one thing that kept showing up on my

00:13:41,570 --> 00:13:48,050
code reviews repeatedly white space

00:13:45,640 --> 00:13:51,740
because I was getting the same feedback

00:13:48,050 --> 00:13:54,830
over and over I realized that maybe I'm

00:13:51,740 --> 00:13:57,410
making a systematic mistake maybe the

00:13:54,830 --> 00:14:00,589
answer to this is not me going and

00:13:57,410 --> 00:14:03,620
fixing white space maybe I need a

00:14:00,589 --> 00:14:06,680
systematic solution for this so I dug

00:14:03,620 --> 00:14:09,620
around I ask the experts and figured

00:14:06,680 --> 00:14:11,240
that it is possible to configure your

00:14:09,620 --> 00:14:13,630
text editor to take care of the white

00:14:11,240 --> 00:14:16,490
spaces so you don't have to bother and

00:14:13,630 --> 00:14:18,830
this Ruby you shade the way for my

00:14:16,490 --> 00:14:20,330
future system setups as well now every

00:14:18,830 --> 00:14:21,980
time I set up a new system the first

00:14:20,330 --> 00:14:24,110
thing I do is to configure my text

00:14:21,980 --> 00:14:27,500
editor to automate as much code cleanup

00:14:24,110 --> 00:14:29,300
as possible and I rarely saw review

00:14:27,500 --> 00:14:33,589
comments about white space again for

00:14:29,300 --> 00:14:36,589
that project or any other so embrace

00:14:33,589 --> 00:14:39,800
failures it is easier said than done i

00:14:36,589 --> 00:14:41,690
know i am still pleasantly surprised

00:14:39,800 --> 00:14:43,640
that everyone in the twisted and Python

00:14:41,690 --> 00:14:46,310
community associates me with all the

00:14:43,640 --> 00:14:50,000
things that I've built and not with my

00:14:46,310 --> 00:14:52,040
wife's white face mistakes but what's

00:14:50,000 --> 00:14:53,870
more important is that you learn from

00:14:52,040 --> 00:14:56,420
the mistakes and don't feel on the same

00:14:53,870 --> 00:14:59,060
thing repeatedly rather than being

00:14:56,420 --> 00:15:02,020
embarrassed by them consider them to be

00:14:59,060 --> 00:15:07,070
context around your thought process and

00:15:02,020 --> 00:15:10,339
document them intensively then you look

00:15:07,070 --> 00:15:14,270
back I know documenting like mistakes is

00:15:10,339 --> 00:15:16,760
it it is not easy then you look fat

00:15:14,270 --> 00:15:19,400
surely they'll be cases where you go hey

00:15:16,760 --> 00:15:22,790
that was some complete nonsense I wrote

00:15:19,400 --> 00:15:26,240
what was wrong with me I also be cases

00:15:22,790 --> 00:15:28,670
off well that approach led me nowhere or

00:15:26,240 --> 00:15:32,030
it makes the system fail let's not

00:15:28,670 --> 00:15:35,080
repeat it or you might say oh that's why

00:15:32,030 --> 00:15:38,130
I did it it makes sense that context

00:15:35,080 --> 00:15:40,450
might help in fixing broken bikes later

00:15:38,130 --> 00:15:43,540
so that's a lot of thing for

00:15:40,450 --> 00:15:46,000
contributors I my doc is not not just

00:15:43,540 --> 00:15:47,890
for them I also have some things to say

00:15:46,000 --> 00:15:54,370
to potential gold reviewers and my

00:15:47,890 --> 00:15:56,770
maintainer friends here hello when you

00:15:54,370 --> 00:16:01,210
communicate are you clear and effective

00:15:56,770 --> 00:16:04,990
do you understand are your reviews non

00:16:01,210 --> 00:16:08,020
personal and educational but well when I

00:16:04,990 --> 00:16:10,600
see not personal that is for the review

00:16:08,020 --> 00:16:13,240
on the code itself the only personal

00:16:10,600 --> 00:16:15,250
part of the review should be the part

00:16:13,240 --> 00:16:16,600
where you thank people for their time

00:16:15,250 --> 00:16:21,910
and effort and that part should

00:16:16,600 --> 00:16:23,830
definitely exist people have their

00:16:21,910 --> 00:16:26,590
quirks I for example like desktop

00:16:23,830 --> 00:16:28,780
strings I do the extent where it then do

00:16:26,590 --> 00:16:31,390
not look at the company goat itself

00:16:28,780 --> 00:16:33,610
until the batch has unit tests with dark

00:16:31,390 --> 00:16:36,430
strings that tells me exactly what's

00:16:33,610 --> 00:16:38,980
happening this may or may not always be

00:16:36,430 --> 00:16:41,260
important for all projects but it

00:16:38,980 --> 00:16:43,660
matters to me so when I build and

00:16:41,260 --> 00:16:46,240
develop a library when I maintain a

00:16:43,660 --> 00:16:48,220
library I below the doc strings are

00:16:46,240 --> 00:16:51,430
important to me and I will likely look

00:16:48,220 --> 00:16:54,640
for them in any poor request that sounds

00:16:51,430 --> 00:16:57,790
fair if I just document that in the

00:16:54,640 --> 00:16:58,930
contributing guidelines because I'm the

00:16:57,790 --> 00:17:01,090
main dinner and I have clearly

00:16:58,930 --> 00:17:04,000
communicated a prerequisite for making

00:17:01,090 --> 00:17:05,800
changes to my project it is not enough

00:17:04,000 --> 00:17:08,860
to just document it though you have to

00:17:05,800 --> 00:17:12,010
also make it visible listed for example

00:17:08,860 --> 00:17:15,250
had like five contributing document

00:17:12,010 --> 00:17:19,350
documents that were developed over the

00:17:15,250 --> 00:17:22,660
years and we tried for a long time to

00:17:19,350 --> 00:17:24,670
make build one single document out of

00:17:22,660 --> 00:17:27,250
them I think I wrote the sixth one that

00:17:24,670 --> 00:17:29,470
was aimed at collaborating all five and

00:17:27,250 --> 00:17:32,260
that still hasn't been completed so we

00:17:29,470 --> 00:17:36,340
have six contributing documentation

00:17:32,260 --> 00:17:38,220
that's not really visible and that's

00:17:36,340 --> 00:17:40,630
also not the right way to go about

00:17:38,220 --> 00:17:44,710
telling your contributors what you care

00:17:40,630 --> 00:17:46,990
about and still even if you do that even

00:17:44,710 --> 00:17:47,480
if you document it visibly people might

00:17:46,990 --> 00:17:50,780
miss

00:17:47,480 --> 00:17:54,770
people might overlook some seemingly

00:17:50,780 --> 00:17:57,860
obvious points that does not make them

00:17:54,770 --> 00:18:00,080
blind please don't be unkind about it

00:17:57,860 --> 00:18:04,100
they do not deserve and kindness for

00:18:00,080 --> 00:18:07,270
this I was going around and asking my

00:18:04,100 --> 00:18:11,120
friends about their worst code review

00:18:07,270 --> 00:18:13,059
experiences yeah who maintains a bunch

00:18:11,120 --> 00:18:15,890
of open-source libraries including

00:18:13,059 --> 00:18:18,890
requests said that one of their views he

00:18:15,890 --> 00:18:21,830
regrets the most is from the requests

00:18:18,890 --> 00:18:23,870
library in a bow request there was one

00:18:21,830 --> 00:18:26,660
point where instead of describing why

00:18:23,870 --> 00:18:32,120
something was a bad idea he just wrote

00:18:26,660 --> 00:18:34,580
this fellow the code and the contributor

00:18:32,120 --> 00:18:38,900
politely ask for more context behind all

00:18:34,580 --> 00:18:41,690
the notes and he'd slain the saw the

00:18:38,900 --> 00:18:44,929
this line was fixed and the poor request

00:18:41,690 --> 00:18:47,210
was merged eventually but Yun said that

00:18:44,929 --> 00:18:49,280
things could have gone so much better

00:18:47,210 --> 00:18:50,870
and smoother had he objectively

00:18:49,280 --> 00:18:55,220
described the point the first time

00:18:50,870 --> 00:18:57,890
itself it might it might not feel like

00:18:55,220 --> 00:18:59,299
it's important while you're doing a code

00:18:57,890 --> 00:19:02,570
review if you've seen the same thing

00:18:59,299 --> 00:19:07,960
being done over and over again but it's

00:19:02,570 --> 00:19:11,480
still worth the effort to explain why

00:19:07,960 --> 00:19:14,840
this reminded me of the time when I was

00:19:11,480 --> 00:19:18,500
making a logical error in my code which

00:19:14,840 --> 00:19:21,380
was not so obvious to me I think it was

00:19:18,500 --> 00:19:23,870
about how I was organizing my if-else

00:19:21,380 --> 00:19:27,200
statements and my review where my

00:19:23,870 --> 00:19:29,240
fatigue provided a self-contained

00:19:27,200 --> 00:19:31,970
example to help me understand the error

00:19:29,240 --> 00:19:35,870
that I was doing and described in detail

00:19:31,970 --> 00:19:39,260
why this was important and I never made

00:19:35,870 --> 00:19:41,750
the same mistake again it is important

00:19:39,260 --> 00:19:44,510
to treat people as reasonable human

00:19:41,750 --> 00:19:47,990
beings who can have who with whom you

00:19:44,510 --> 00:19:49,820
can have a logical discussion make your

00:19:47,990 --> 00:19:54,860
case described by the change you're

00:19:49,820 --> 00:19:57,590
suggesting is necessary on this slide

00:19:54,860 --> 00:19:59,149
there's a review that I once got for

00:19:57,590 --> 00:20:01,820
super confident

00:19:59,149 --> 00:20:03,950
gated implement implementation that was

00:20:01,820 --> 00:20:06,919
doing for twisted I've been working on

00:20:03,950 --> 00:20:09,549
this for weeks and when I submitted it

00:20:06,919 --> 00:20:12,589
for review again after a lot of items

00:20:09,549 --> 00:20:16,359
this is what I got it started with a

00:20:12,589 --> 00:20:20,779
thank you that's nice it says that

00:20:16,359 --> 00:20:23,989
things looked good that's nicer it done

00:20:20,779 --> 00:20:26,659
mentions that my my branch needs a lot

00:20:23,989 --> 00:20:28,070
of changes well that's okay because I'm

00:20:26,659 --> 00:20:29,779
already happy from the first two

00:20:28,070 --> 00:20:35,330
sentences now to actually care about

00:20:29,779 --> 00:20:38,059
what the next line says really and it

00:20:35,330 --> 00:20:41,989
like even ends with the smiley like how

00:20:38,059 --> 00:20:44,419
you exploit programmers use smileys it

00:20:41,989 --> 00:20:47,960
also reassures me that I'm going in the

00:20:44,419 --> 00:20:51,169
right direction so I think this was a

00:20:47,960 --> 00:20:52,700
great build review I think that even

00:20:51,169 --> 00:20:55,399
though the changes took me days to

00:20:52,700 --> 00:20:58,339
complete and it was a while before this

00:20:55,399 --> 00:21:02,330
thing was merged I feel like the kind of

00:20:58,339 --> 00:21:05,239
happiness this review gave me was was

00:21:02,330 --> 00:21:07,309
really nice and rarely seen so work with

00:21:05,239 --> 00:21:09,950
your contributors be Edgar easing

00:21:07,309 --> 00:21:11,299
affects them for their time and tell

00:21:09,950 --> 00:21:12,919
them early if they're taking the right

00:21:11,299 --> 00:21:16,729
or wrong approach so they know when to

00:21:12,919 --> 00:21:18,769
abandon a particular track I have said a

00:21:16,729 --> 00:21:21,019
lot of things in the last 20 years old

00:21:18,769 --> 00:21:23,269
my dad's up to both contributors and

00:21:21,019 --> 00:21:25,309
bein dinners and I know these things

00:21:23,269 --> 00:21:27,589
because I was a contributor for a long

00:21:25,309 --> 00:21:30,710
time before putting on my maintainer had

00:21:27,589 --> 00:21:32,539
and that new have taught me a lot of

00:21:30,710 --> 00:21:35,570
things and brought with it a massive

00:21:32,539 --> 00:21:39,830
change in perspective the most important

00:21:35,570 --> 00:21:43,639
one being that you you you're always

00:21:39,830 --> 00:21:46,429
qualified for many years I did not

00:21:43,639 --> 00:21:48,710
review a lot of twisted code I I

00:21:46,429 --> 00:21:50,929
contributed a lot I build a lot of

00:21:48,710 --> 00:21:54,349
things I responded and participated in

00:21:50,929 --> 00:21:56,690
discussions but i rarely reviewed actual

00:21:54,349 --> 00:21:58,309
code from other people the reason being

00:21:56,690 --> 00:22:00,589
that the people that i was working with

00:21:58,309 --> 00:22:02,869
were excellent expert programmers and

00:22:00,589 --> 00:22:05,839
the reviews were thorough educational

00:22:02,869 --> 00:22:07,789
and to so awesome i thought that that

00:22:05,839 --> 00:22:10,369
was a prerequisite for reviewing code

00:22:07,789 --> 00:22:11,360
and i did not feel I was knowledgeable

00:22:10,369 --> 00:22:14,660
enough to do that

00:22:11,360 --> 00:22:17,270
what I didn't know was that good gold

00:22:14,660 --> 00:22:19,880
reviews also come with practice being an

00:22:17,270 --> 00:22:24,020
expert isn't a prerequisite it is a

00:22:19,880 --> 00:22:25,549
result of continuous practice and that's

00:22:24,020 --> 00:22:29,240
why there is a community to work with

00:22:25,549 --> 00:22:31,820
right so once again contributors you

00:22:29,240 --> 00:22:35,090
will need to work with the main dinners

00:22:31,820 --> 00:22:37,700
and meet them halfway and my maintain

00:22:35,090 --> 00:22:40,370
your friends here you will have to read

00:22:37,700 --> 00:22:45,549
the Contra beauties halfway be nice kind

00:22:40,370 --> 00:22:45,549
and respectful thank you

00:22:50,940 --> 00:22:56,010
thank you so much everything that was

00:22:53,050 --> 00:22:58,810
amazing we have time for one question

00:22:56,010 --> 00:23:00,100
fantastic tool I'm interested in getting

00:22:58,810 --> 00:23:01,630
from the perspective of project

00:23:00,100 --> 00:23:03,970
maintainers I suppose also from

00:23:01,630 --> 00:23:06,370
contributing what's your opinion about

00:23:03,970 --> 00:23:07,990
automated tools for doing some of these

00:23:06,370 --> 00:23:10,120
review process things like the white

00:23:07,990 --> 00:23:11,560
space trailing and even some of the

00:23:10,120 --> 00:23:13,780
style guide stuff the tray was talking

00:23:11,560 --> 00:23:15,100
about the previous tool can be picked up

00:23:13,780 --> 00:23:16,810
automated and you can write little

00:23:15,100 --> 00:23:18,040
programs that'll just jump in

00:23:16,810 --> 00:23:19,120
automatically say oh by the way you've

00:23:18,040 --> 00:23:20,500
got charlie white space oh by the way

00:23:19,120 --> 00:23:23,100
this thing is a small an ad character

00:23:20,500 --> 00:23:25,690
whatever the problem happens to be

00:23:23,100 --> 00:23:28,510
that's incredibly impersonal it's

00:23:25,690 --> 00:23:30,100
completely robotic but it's a robot do

00:23:28,510 --> 00:23:31,860
you think that's a good approach or a

00:23:30,100 --> 00:23:34,270
bad approach for project two adult I

00:23:31,860 --> 00:23:37,240
thank you for your question I definitely

00:23:34,270 --> 00:23:39,760
think that's a really good approach this

00:23:37,240 --> 00:23:41,470
whole like all through the stop the

00:23:39,760 --> 00:23:44,650
point that have been trying to convey

00:23:41,470 --> 00:23:47,890
for reviewers was that your review needs

00:23:44,650 --> 00:23:53,050
to be not personal no one takes what a

00:23:47,890 --> 00:23:55,180
robot says personally so I think if the

00:23:53,050 --> 00:23:56,920
more robots in your goed review process

00:23:55,180 --> 00:24:01,690
the better it is because the morn on

00:23:56,920 --> 00:24:04,260
First Alert code review is all right

00:24:01,690 --> 00:24:04,260

YouTube URL: https://www.youtube.com/watch?v=pd7_TXl4yFI


