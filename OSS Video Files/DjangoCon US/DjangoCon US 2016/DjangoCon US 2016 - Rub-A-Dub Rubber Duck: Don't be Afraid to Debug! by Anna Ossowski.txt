Title: DjangoCon US 2016 - Rub-A-Dub Rubber Duck: Don't be Afraid to Debug! by Anna Ossowski
Publication date: 2016-08-11
Playlist: DjangoCon US 2016
Description: 
	DjangoCon US 2016 - Rub-A-Dub Rubber Duck: Don't be Afraid to Debug! by Anna Ossowski

Everyone of us knows this scenario, it's part of the daily life of a programmer: You build something and it doesnâ€™t work. You run into a bug, you find a problem, you break your code - and then you have to figure out how to fix it again. This can take 5 minutes, several hours, sometimes even several days. Sometimes you get really frustrated and are about to give up but when you finally find the solution it's the greatest feeling in the world. Do you want to learn how to proceed when your code doesnâ€™t work? Do you want to learn how you can become a better problem solver? Do you want to learn how a rubber duck can help you? Then this talk is for you :) In this talk I will present strategies on how to proceed when you run into a bug or other coding problems. I will also talk about what you can do in order to prevent frustration and how you can learn to be more confident when encountering bugs. My goal is to show that bugs are nothing to be scared of, that you can fix (almost) everything and shouldnâ€™t be afraid of breaking things, and that debugging can be easier than you think it might be if you approach it the right way. Breaking things is the first step to learning how to fix them! This talk is inspired by a blog post I wrote a while ago, which you can find here().

Introduction - Who am I? What is this talk about? (2 minutes)
What is a bug?/What is debugging? (5 minutes)
Why breaking things is great - Donâ€™t be afraid to break things (3 minutes)
Why a rubber duck? - Debugging strategies (10 minutes)

Reading error messages the right way
How Google can help
Rubber ducks, hypothesis, testing different approaches/solutions
Reproducing bugs
Breaking your code down into smaller pieces
Drawing diagrams of code/writing pseudocode
Reading documentation
Debugging tools like the django-debug toolbar
What to do when frustration kicks in (3 minutes)

Where/how to get help (2 minutes)
Q&A (5 minutes)

This talk was presented at: https://2016.djangocon.us/schedule/presentation/13/

LINKS:
Follow DjangCon US ðŸ‘‡
https://twitter.com/djangocon

Follow DEFNA ðŸ‘‡
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,000 --> 00:00:02,450
come on

00:00:14,049 --> 00:00:18,470
hello everyone I hope you had a great

00:00:16,280 --> 00:00:20,180
time in a great morning here Django con

00:00:18,470 --> 00:00:21,920
us and thank you so much for attending

00:00:20,180 --> 00:00:24,050
my talk it's my first time in

00:00:21,920 --> 00:00:25,820
Philadelphia and I'm really excited to

00:00:24,050 --> 00:00:27,590
be here and it's my second time that I

00:00:25,820 --> 00:00:30,470
get to speak at django con and I'm

00:00:27,590 --> 00:00:33,649
really really excited so I'm Anna I'm

00:00:30,470 --> 00:00:35,510
from Germany I have a degree in English

00:00:33,649 --> 00:00:37,339
and Catholic theology some of you may

00:00:35,510 --> 00:00:38,870
have identified William Shakespeare and

00:00:37,339 --> 00:00:40,850
Pope Francis on my slide and Pope

00:00:38,870 --> 00:00:45,109
Francis was actually in Philadelphia not

00:00:40,850 --> 00:00:47,600
too long ago but about two years ago I

00:00:45,109 --> 00:00:50,089
got involved in Python and I now work

00:00:47,600 --> 00:00:53,420
for Algeria and the pinnix project as a

00:00:50,089 --> 00:00:55,429
community manager besides work I'm also

00:00:53,420 --> 00:00:58,249
involved in a few other volunteer

00:00:55,429 --> 00:01:00,530
related things I am Django con us

00:00:58,249 --> 00:01:03,679
communications chair I'm a former member

00:01:00,530 --> 00:01:06,080
of the psf board of directors I am pike

00:01:03,679 --> 00:01:09,310
on US open spaces chair and I'm one of

00:01:06,080 --> 00:01:12,230
the leaders as a PI ladies remote group

00:01:09,310 --> 00:01:13,610
and today i'm here to present my talk

00:01:12,230 --> 00:01:17,630
with the title rubber duck rubber duck

00:01:13,610 --> 00:01:19,100
don't be afraid to debug so it's all

00:01:17,630 --> 00:01:20,480
it's going to be all about rubber ducks

00:01:19,100 --> 00:01:22,460
as you might have seen we set up a

00:01:20,480 --> 00:01:24,080
little rubber duck pond over here so

00:01:22,460 --> 00:01:27,890
you're all welcome to take a rubber duck

00:01:24,080 --> 00:01:30,470
when you leave let me show you something

00:01:27,890 --> 00:01:32,780
first so this used to be me when I

00:01:30,470 --> 00:01:37,810
countered a bug in my code really

00:01:32,780 --> 00:01:37,810
frustrated and angry and this is me now

00:01:38,170 --> 00:01:42,890
so the goal of this talk is for you to

00:01:40,850 --> 00:01:45,380
hopefully feel like a warrior and feel

00:01:42,890 --> 00:01:47,540
prepared and brave when you get when you

00:01:45,380 --> 00:01:50,090
encounter bugs in your code and to not

00:01:47,540 --> 00:01:52,280
be frustrated and upset and scared by

00:01:50,090 --> 00:01:56,030
them anymore because really books are

00:01:52,280 --> 00:01:57,890
nothing to be scared of I'm an English

00:01:56,030 --> 00:02:00,260
major sale of dictionaries I love

00:01:57,890 --> 00:02:03,170
definition so let's first first let's

00:02:00,260 --> 00:02:04,720
take a look at what a bag actually is so

00:02:03,170 --> 00:02:08,000
when you type in the bug into the

00:02:04,720 --> 00:02:10,310
merriam-webster dictionary you can you

00:02:08,000 --> 00:02:12,500
get all of these wonderful definitions a

00:02:10,310 --> 00:02:13,090
book can be an insect or germ it can be

00:02:12,500 --> 00:02:15,340
an institute

00:02:13,090 --> 00:02:17,560
enthusiastic prominent or crazy person

00:02:15,340 --> 00:02:20,260
it can be a conceal listening device

00:02:17,560 --> 00:02:22,060
away to loans for jockeys that's all

00:02:20,260 --> 00:02:23,890
interesting i did not know that the word

00:02:22,060 --> 00:02:25,540
book had so many definitions but

00:02:23,890 --> 00:02:27,459
unfortunately we're not interested in

00:02:25,540 --> 00:02:32,650
any of those today the one we're

00:02:27,459 --> 00:02:35,290
interested in is this one a back is a

00:02:32,650 --> 00:02:37,360
defect fault floor and perfection or in

00:02:35,290 --> 00:02:40,420
other words something causes your code

00:02:37,360 --> 00:02:43,480
not to work now we know what a bug is

00:02:40,420 --> 00:02:45,549
but what's actually debugging to debug

00:02:43,480 --> 00:02:47,319
means to make to remove mistakes from

00:02:45,549 --> 00:02:51,010
your program or in simpler words make

00:02:47,319 --> 00:02:54,220
your coat work so we know we have that

00:02:51,010 --> 00:02:55,540
figure it out if there's one thing I

00:02:54,220 --> 00:02:57,040
want you to take away from this talk I

00:02:55,540 --> 00:03:00,069
already said that I want you to take

00:02:57,040 --> 00:03:02,290
away that breaking coat is nothing to be

00:03:00,069 --> 00:03:04,510
scared of who of you like I don't know

00:03:02,290 --> 00:03:06,700
who how many of you have our beginners

00:03:04,510 --> 00:03:08,620
or I guess there's a few advanced people

00:03:06,700 --> 00:03:10,750
here two of you at one point in their

00:03:08,620 --> 00:03:13,090
programming career have been scared of

00:03:10,750 --> 00:03:17,170
bugs or debugging a program that's

00:03:13,090 --> 00:03:19,120
pretty much everyone and I hope that

00:03:17,170 --> 00:03:20,950
within the next 25 minutes you will

00:03:19,120 --> 00:03:22,630
learn at breaking things is pretty great

00:03:20,950 --> 00:03:24,850
because breaking things gives us the

00:03:22,630 --> 00:03:26,980
opportunity to learn how to fix them

00:03:24,850 --> 00:03:31,260
again and I'll tell you a little secret

00:03:26,980 --> 00:03:33,790
most things encoding can be fixed again

00:03:31,260 --> 00:03:35,349
you may not be able to debug it yourself

00:03:33,790 --> 00:03:37,569
but there's always someone who can help

00:03:35,349 --> 00:03:40,150
and if nothing else works you'll just do

00:03:37,569 --> 00:03:42,459
it over again um let me tell you what

00:03:40,150 --> 00:03:45,060
anecdote which has to deal with this

00:03:42,459 --> 00:03:47,440
picture so I love my mom she's

00:03:45,060 --> 00:03:50,260
technically technically challenged pedal

00:03:47,440 --> 00:03:52,840
of her and last year she broke the on

00:03:50,260 --> 00:03:55,599
and off button on her pc she had pushed

00:03:52,840 --> 00:03:57,549
it and she had pushed it in way too far

00:03:55,599 --> 00:03:59,859
and she was like I don't know what to do

00:03:57,549 --> 00:04:02,620
with this will you repaired for me and

00:03:59,859 --> 00:04:03,940
so I said mom I have no idea how to do

00:04:02,620 --> 00:04:06,700
this because I'm not a heart where

00:04:03,940 --> 00:04:09,489
person I had never taken a PC apart but

00:04:06,700 --> 00:04:10,870
I figured well we don't really want to

00:04:09,489 --> 00:04:12,099
spend the money and have it repaired

00:04:10,870 --> 00:04:14,530
professionally and we don't have the

00:04:12,099 --> 00:04:16,329
time to do that either and so what did i

00:04:14,530 --> 00:04:18,639
do I turn to my friend google and i

00:04:16,329 --> 00:04:20,530
googled how to take her pc apart and i

00:04:18,639 --> 00:04:21,410
took it apart and i fixed the on/off

00:04:20,530 --> 00:04:24,290
button

00:04:21,410 --> 00:04:25,850
it's it's not a perfect solution you

00:04:24,290 --> 00:04:27,830
still have to press it kind of hard to

00:04:25,850 --> 00:04:31,850
turn it on but that was a year ago and

00:04:27,830 --> 00:04:35,000
it still works so that was me debugging

00:04:31,850 --> 00:04:36,800
a real world problem and I found a

00:04:35,000 --> 00:04:39,500
solution that worked for us it's not the

00:04:36,800 --> 00:04:41,480
perfect solution but it works and when

00:04:39,500 --> 00:04:43,850
you when you're coding you have to

00:04:41,480 --> 00:04:45,440
remember that sometimes you have to

00:04:43,850 --> 00:04:47,300
consider if you want the perfect

00:04:45,440 --> 00:04:50,270
solution if you just want any solutions

00:04:47,300 --> 00:04:51,890
sometimes any solution might work for

00:04:50,270 --> 00:04:53,870
the moment and then you can always go

00:04:51,890 --> 00:04:57,140
better go back and make it better next

00:04:53,870 --> 00:04:59,090
time let's take a look at a few

00:04:57,140 --> 00:05:01,430
debugging strategies and learn how

00:04:59,090 --> 00:05:03,500
rubber ducks can help us and please keep

00:05:01,430 --> 00:05:05,810
in mind that this is not an exhaustive

00:05:03,500 --> 00:05:08,030
list of debugging strategies nor did I

00:05:05,810 --> 00:05:09,850
choose a very technical approach and

00:05:08,030 --> 00:05:13,220
purpose I wanted to keep this simple

00:05:09,850 --> 00:05:14,660
because this talk is aimed at beginners

00:05:13,220 --> 00:05:18,190
or just people who want to learn

00:05:14,660 --> 00:05:20,690
something different about debugging

00:05:18,190 --> 00:05:25,160
let's start with error messages actually

00:05:20,690 --> 00:05:28,010
in please note okay error messages are

00:05:25,160 --> 00:05:29,750
pretty crucial to debugging and error

00:05:28,010 --> 00:05:31,370
messages are nothing to be scared of i

00:05:29,750 --> 00:05:33,260
remember when i started programming in

00:05:31,370 --> 00:05:35,930
python and i saw an error message in my

00:05:33,260 --> 00:05:37,850
console I was so scared because I had no

00:05:35,930 --> 00:05:40,460
idea how to read it I had no idea what

00:05:37,850 --> 00:05:42,290
was wrong and it was just very scary but

00:05:40,460 --> 00:05:43,820
once you start getting more into

00:05:42,290 --> 00:05:46,100
programming you will notice that error

00:05:43,820 --> 00:05:48,410
messages actually a very useful feature

00:05:46,100 --> 00:05:50,060
because they help you a ton they help

00:05:48,410 --> 00:05:51,620
you figure out what is wrong with your

00:05:50,060 --> 00:05:54,770
code you just have to learn how to read

00:05:51,620 --> 00:05:57,440
them and in Python we have three types

00:05:54,770 --> 00:05:59,540
of error messages the first type of the

00:05:57,440 --> 00:06:01,610
so-called syntax errors I'm going to put

00:05:59,540 --> 00:06:03,919
up these slides on slide deck afterwards

00:06:01,610 --> 00:06:05,600
so you can read what's on this light

00:06:03,919 --> 00:06:06,890
later i'm not going to point it out now

00:06:05,600 --> 00:06:10,610
because i'm going to run out of time

00:06:06,890 --> 00:06:13,130
probably the syntax errors are basically

00:06:10,610 --> 00:06:15,320
errors in the Python language and Python

00:06:13,130 --> 00:06:17,540
will find these kind of errors as it

00:06:15,320 --> 00:06:20,300
parses the program before it executes

00:06:17,540 --> 00:06:22,010
the program so basically syntax errors

00:06:20,300 --> 00:06:24,260
or mistakes in Python like you would

00:06:22,010 --> 00:06:28,990
make grammatical mistakes in English for

00:06:24,260 --> 00:06:32,210
example let's look at a very simple

00:06:28,990 --> 00:06:34,780
example when I run this code i get the

00:06:32,210 --> 00:06:34,780
following error message

00:06:34,830 --> 00:06:39,850
you can see that the parser repeats the

00:06:37,720 --> 00:06:41,590
line and displays an arrow pointing at

00:06:39,850 --> 00:06:43,510
the earliest point in the land where the

00:06:41,590 --> 00:06:46,510
error was detected the error is detected

00:06:43,510 --> 00:06:48,850
at the token preceding the arrow so you

00:06:46,510 --> 00:06:52,000
can see here that the arrow is here at

00:06:48,850 --> 00:06:53,890
my closing bracket so we know that the

00:06:52,000 --> 00:06:56,830
error must appear after the closing

00:06:53,890 --> 00:06:58,750
bracket and Python is also so smart to

00:06:56,830 --> 00:07:00,670
tell us which file and which line the

00:06:58,750 --> 00:07:03,640
error occurs and so I named this file

00:07:00,670 --> 00:07:06,040
very creatively example 1 dot pi and my

00:07:03,640 --> 00:07:08,440
program has two lines and Python says

00:07:06,040 --> 00:07:10,990
it's in line the error is in line number

00:07:08,440 --> 00:07:15,940
one so who have you know what is causing

00:07:10,990 --> 00:07:17,920
the error yes right I forgot to add a

00:07:15,940 --> 00:07:20,140
colon and that is something that will

00:07:17,920 --> 00:07:24,190
happen all the time you just forget one

00:07:20,140 --> 00:07:27,760
simple letter or sign and it causes the

00:07:24,190 --> 00:07:29,950
program not to run correctly and if you

00:07:27,760 --> 00:07:32,230
can't see anything with that anything

00:07:29,950 --> 00:07:34,060
wrong in your code if Python says line

00:07:32,230 --> 00:07:35,220
number one is wrong and you look through

00:07:34,060 --> 00:07:37,660
the line and there's nothing wrong

00:07:35,220 --> 00:07:39,760
sometimes the Python interpreter is not

00:07:37,660 --> 00:07:42,040
always right so look if there is nothing

00:07:39,760 --> 00:07:45,280
wrong in that line look in the preceding

00:07:42,040 --> 00:07:47,350
lines of code the second type of error

00:07:45,280 --> 00:07:49,870
messages are the so-called runtime

00:07:47,350 --> 00:07:52,480
errors or exceptions these errors occur

00:07:49,870 --> 00:07:54,460
when your program is syntactically

00:07:52,480 --> 00:07:56,380
correct which means it is free of syntax

00:07:54,460 --> 00:07:59,320
error so Python will park the program

00:07:56,380 --> 00:08:01,960
and it'll be fine but then it will

00:07:59,320 --> 00:08:04,780
execute the program and it'll stop

00:08:01,960 --> 00:08:06,670
executing it because it finds an a

00:08:04,780 --> 00:08:08,800
runtime error neck and exception and

00:08:06,670 --> 00:08:12,070
when Python does that we call that it

00:08:08,800 --> 00:08:14,080
crashes the pure program crashes let's

00:08:12,070 --> 00:08:16,060
look at some examples of runtime errors

00:08:14,080 --> 00:08:18,010
so we have the division by zero error

00:08:16,060 --> 00:08:20,950
peasant Python gives us this error

00:08:18,010 --> 00:08:23,560
because we're trying to divide 550 and

00:08:20,950 --> 00:08:27,630
that just doesn't work so it says are 0

00:08:23,560 --> 00:08:30,010
division error then and the tells us

00:08:27,630 --> 00:08:32,470
where the lot where the error occurs

00:08:30,010 --> 00:08:34,270
here is just as stdin which means

00:08:32,470 --> 00:08:36,640
standard input because i typed in the

00:08:34,270 --> 00:08:39,880
code in the console and i didn't save a

00:08:36,640 --> 00:08:42,380
file and it tells us in line number one

00:08:39,880 --> 00:08:48,650
and it also tells us that the error

00:08:42,380 --> 00:08:50,600
occurred as a traceback another type of

00:08:48,650 --> 00:08:52,010
runtime error is using it as using an

00:08:50,600 --> 00:08:54,530
identifier which has not been identified

00:08:52,010 --> 00:08:57,140
so you can see that i'm trying to do 2

00:08:54,530 --> 00:08:59,180
plus django pony and pass on says on

00:08:57,140 --> 00:09:02,990
name error the name django pony has not

00:08:59,180 --> 00:09:04,940
been defined then we have the performing

00:09:02,990 --> 00:09:07,160
an operation and incompatible types so

00:09:04,940 --> 00:09:09,710
you can see we're trying to do 7 plus 7

00:09:07,160 --> 00:09:17,810
and Python says type error why does this

00:09:09,710 --> 00:09:19,700
not work right and then we have two

00:09:17,810 --> 00:09:22,610
other types common types of runtime

00:09:19,700 --> 00:09:24,950
errors when a list or dictionary or an

00:09:22,610 --> 00:09:27,110
object doesn't exist or we're trying to

00:09:24,950 --> 00:09:30,440
exact the to access of file which

00:09:27,110 --> 00:09:32,570
doesn't exist and whenever we're as

00:09:30,440 --> 00:09:35,510
programmers we work with users all the

00:09:32,570 --> 00:09:40,250
time and we work we work with people and

00:09:35,510 --> 00:09:42,950
people make mistakes and sometimes you

00:09:40,250 --> 00:09:46,820
can predict that a certain part of your

00:09:42,950 --> 00:09:48,770
program is might cause errors so if

00:09:46,820 --> 00:09:50,180
you're accessing a file for example and

00:09:48,770 --> 00:09:52,310
you might know all the users going to

00:09:50,180 --> 00:09:54,320
type in the wrong file or the file might

00:09:52,310 --> 00:09:58,130
not exist you can prevent your program

00:09:54,320 --> 00:10:01,820
from crashing by using a try and accept

00:09:58,130 --> 00:10:03,350
block so first the try class is executed

00:10:01,820 --> 00:10:05,780
and the user is prompted to enter a

00:10:03,350 --> 00:10:07,640
number here in my example and if no

00:10:05,780 --> 00:10:10,220
exception occurs the program will run

00:10:07,640 --> 00:10:11,930
but if an exception occurs which means

00:10:10,220 --> 00:10:14,720
if the user it doesn't enter a number

00:10:11,930 --> 00:10:16,820
and enter something invalid the except

00:10:14,720 --> 00:10:20,450
clause will run an hour program will not

00:10:16,820 --> 00:10:22,160
crash so you can see that I was prompted

00:10:20,450 --> 00:10:24,500
to enter a number and attempt and Anna

00:10:22,160 --> 00:10:26,600
which is obviously not a number so then

00:10:24,500 --> 00:10:29,120
instead of getting an error message and

00:10:26,600 --> 00:10:30,680
instead of my program crashing Python

00:10:29,120 --> 00:10:32,720
tells me sorry that was not a valid

00:10:30,680 --> 00:10:34,340
number because I had told Python and the

00:10:32,720 --> 00:10:36,380
except Clause that's what I would like

00:10:34,340 --> 00:10:38,360
for my user to see and then I was

00:10:36,380 --> 00:10:40,430
prompted to enter a number again and I

00:10:38,360 --> 00:10:43,700
entered number three this time which

00:10:40,430 --> 00:10:46,010
means my program ran this time had I

00:10:43,700 --> 00:10:47,480
entered my name my name again then it

00:10:46,010 --> 00:10:49,160
would have done the same thing over and

00:10:47,480 --> 00:10:49,699
over and over again but it would not

00:10:49,160 --> 00:10:53,059
have

00:10:49,699 --> 00:10:55,100
and the third type of errors in probably

00:10:53,059 --> 00:10:56,899
the heart hardest one to the back are

00:10:55,100 --> 00:11:00,049
their so-called logical errors they

00:10:56,899 --> 00:11:02,540
occur when your program is free of

00:11:00,049 --> 00:11:04,730
syntax errors and free of runtime errors

00:11:02,540 --> 00:11:06,499
but there's something wrong in the logic

00:11:04,730 --> 00:11:08,809
of your program and you will have to

00:11:06,499 --> 00:11:10,669
find these errors by basically reviewing

00:11:08,809 --> 00:11:13,309
parts of your code because there won't

00:11:10,669 --> 00:11:15,049
be an error message so you kind of have

00:11:13,309 --> 00:11:18,199
to figure out how to solve this and I

00:11:15,049 --> 00:11:19,790
will tell you how and this was just a

00:11:18,199 --> 00:11:21,739
very brief introduction to error message

00:11:19,790 --> 00:11:23,629
to error messages there's a whole

00:11:21,739 --> 00:11:26,209
science to it so I would recommend these

00:11:23,629 --> 00:11:27,619
two sources they're pretty beginner

00:11:26,209 --> 00:11:30,049
friendly and they helped me a lot while

00:11:27,619 --> 00:11:32,179
preparing my talk so again I will put my

00:11:30,049 --> 00:11:35,949
slides up on speaker deck afterwards so

00:11:32,179 --> 00:11:38,929
you can find them there okay so

00:11:35,949 --> 00:11:41,359
sometimes though you'll stumble across

00:11:38,929 --> 00:11:43,249
error messages and you still don't know

00:11:41,359 --> 00:11:45,709
what Python once or you just don't know

00:11:43,249 --> 00:11:47,509
what is wrong so we're programmers and

00:11:45,709 --> 00:11:56,230
what do programmers turn to when they

00:11:47,509 --> 00:11:56,230
don't know what works oh yes or Google

00:11:56,799 --> 00:12:02,509
Google can actually be a very helpful

00:11:59,179 --> 00:12:04,220
tool but be cautious when using Google

00:12:02,509 --> 00:12:06,139
because Google can cause a lot of

00:12:04,220 --> 00:12:08,809
frustrations because Google will only

00:12:06,139 --> 00:12:11,720
work if you tell it very precisely what

00:12:08,809 --> 00:12:13,669
is wrong with your code sometimes

00:12:11,720 --> 00:12:15,559
copying and pasting code into Google

00:12:13,669 --> 00:12:17,959
Network and you might be able to pull up

00:12:15,559 --> 00:12:19,910
just the right stackoverflow answer but

00:12:17,959 --> 00:12:22,699
it doesn't always work that way so I'll

00:12:19,910 --> 00:12:24,799
give you an example this is me explain

00:12:22,699 --> 00:12:26,899
to Google very poorly what the problem

00:12:24,799 --> 00:12:28,850
is I made some changes to my code but I

00:12:26,899 --> 00:12:30,350
can't access my website on the internet

00:12:28,850 --> 00:12:33,109
and I don't know why and its really

00:12:30,350 --> 00:12:36,049
frustrating please help me google this

00:12:33,109 --> 00:12:38,839
is me over exaggerating but you know and

00:12:36,049 --> 00:12:40,549
so you can see the results I get they're

00:12:38,839 --> 00:12:43,579
not very helpful at all they don't even

00:12:40,549 --> 00:12:47,059
mention Django anywhere close you said

00:12:43,579 --> 00:12:49,309
the top 4 results and this is me doing a

00:12:47,059 --> 00:12:52,789
little better at least now I get results

00:12:49,309 --> 00:12:55,069
that mentioned Django and this is me

00:12:52,789 --> 00:12:56,689
being pretty precise Django can't access

00:12:55,069 --> 00:12:58,639
development server and browser and you

00:12:56,689 --> 00:13:00,709
can see that i get for stack overflow

00:12:58,639 --> 00:13:02,149
results and i clicked through all of

00:13:00,709 --> 00:13:02,730
them and they were all actually pretty

00:13:02,149 --> 00:13:04,769
helpful

00:13:02,730 --> 00:13:09,980
so just keep in mind if you use google

00:13:04,769 --> 00:13:12,389
you have to be pretty precise and

00:13:09,980 --> 00:13:14,820
another technique we're going to talk

00:13:12,389 --> 00:13:17,010
about now is and which program are

00:13:14,820 --> 00:13:19,019
square x is the so-called rubber duck

00:13:17,010 --> 00:13:21,540
debugging if you've never heard of it

00:13:19,019 --> 00:13:23,459
before you might think it's sort of

00:13:21,540 --> 00:13:29,160
crazy but rubber ducks can actually be

00:13:23,459 --> 00:13:31,560
very helpful so these are some ducks

00:13:29,160 --> 00:13:33,690
from the famous sandbar in Lawrence

00:13:31,560 --> 00:13:36,089
Kansas sort of taking a vacation in San

00:13:33,690 --> 00:13:38,519
Diego and you can see that I have one of

00:13:36,089 --> 00:13:40,380
me one of them with me here so

00:13:38,519 --> 00:13:45,240
programmers love and swear by rubber

00:13:40,380 --> 00:13:48,269
ducks and here's how it works so you

00:13:45,240 --> 00:13:51,060
take a rubber duck and you set it on

00:13:48,269 --> 00:13:52,740
your desk just like I did here and then

00:13:51,060 --> 00:13:54,839
you basically explained to your rubber

00:13:52,740 --> 00:13:57,149
duck what the problem is and the idea is

00:13:54,839 --> 00:14:00,149
by speaking out loud and kind of like

00:13:57,149 --> 00:14:02,490
forming the idea and the problem in your

00:14:00,149 --> 00:14:03,839
head you get an idea what might be wrong

00:14:02,490 --> 00:14:05,610
with the problem and you might not

00:14:03,839 --> 00:14:07,769
always be one of the both the program

00:14:05,610 --> 00:14:09,750
and you might not always be able to

00:14:07,769 --> 00:14:12,240
solve the problem yourself but at least

00:14:09,750 --> 00:14:15,029
you get a better idea you actually learn

00:14:12,240 --> 00:14:17,040
to face what your problem is or you

00:14:15,029 --> 00:14:19,079
might it might be able to help you

00:14:17,040 --> 00:14:24,060
Google what the problem is so the idea

00:14:19,079 --> 00:14:26,399
is to put it in more precise words other

00:14:24,060 --> 00:14:31,260
times rubber duck debugging won't lead

00:14:26,399 --> 00:14:33,899
you to a solution so that when you can

00:14:31,260 --> 00:14:37,860
turn the stack overflow or Google or IRC

00:14:33,899 --> 00:14:39,750
or various slag channels another good

00:14:37,860 --> 00:14:42,000
way to debug programs is to come up with

00:14:39,750 --> 00:14:44,459
different hypotheses you look at your

00:14:42,000 --> 00:14:46,920
code and you just set up one two three

00:14:44,459 --> 00:14:48,300
hypotheses what could be wrong with your

00:14:46,920 --> 00:14:50,370
coat and then you start going through

00:14:48,300 --> 00:14:52,740
them and like verifying or falsifying

00:14:50,370 --> 00:14:54,420
them just write it down because if you

00:14:52,740 --> 00:14:56,610
keep it like all in your head then you

00:14:54,420 --> 00:15:00,740
might get confused so actually take a

00:14:56,610 --> 00:15:00,740
piece of paper and write down your ideas

00:15:08,080 --> 00:15:12,250
and as I said before you can take a

00:15:10,420 --> 00:15:14,230
rubber duck home with you later my boss

00:15:12,250 --> 00:15:16,570
was who's not here today because he's

00:15:14,230 --> 00:15:18,070
very sick but he was so generous to let

00:15:16,570 --> 00:15:19,990
me order all of these rubber ducks for

00:15:18,070 --> 00:15:22,390
you so you can take one home later and

00:15:19,990 --> 00:15:24,610
we have 200 of them so please take two

00:15:22,390 --> 00:15:26,230
or three and please tweet me pictures of

00:15:24,610 --> 00:15:28,390
your rubber ducks I love seeing pictures

00:15:26,230 --> 00:15:32,710
of rubber dicks so take one home and

00:15:28,390 --> 00:15:35,290
tweet me pictures what's also helpful is

00:15:32,710 --> 00:15:38,080
breaking your code down into blocks so

00:15:35,290 --> 00:15:40,270
we have functions for example and you

00:15:38,080 --> 00:15:42,550
break down your code into self

00:15:40,270 --> 00:15:44,830
containing blocks and then you comment

00:15:42,550 --> 00:15:46,930
them out and then you can see how this

00:15:44,830 --> 00:15:48,430
section is okay it's not causing the

00:15:46,930 --> 00:15:51,250
error but then the other section might

00:15:48,430 --> 00:15:53,470
cause the error what's also helpful is

00:15:51,250 --> 00:15:55,360
when you write code red ten or twenty

00:15:53,470 --> 00:15:57,550
lines of code and then then put in a

00:15:55,360 --> 00:15:59,740
print statement and run the code and see

00:15:57,550 --> 00:16:01,720
if it works and if it's causing an error

00:15:59,740 --> 00:16:03,430
you know it's probably within the last

00:16:01,720 --> 00:16:05,050
ten or twenty lines of code you just

00:16:03,430 --> 00:16:06,760
wrote if it's not causing an error right

00:16:05,050 --> 00:16:09,460
the next ten or twenty lines and see if

00:16:06,760 --> 00:16:11,260
it's causing an error then and repeat

00:16:09,460 --> 00:16:13,680
that if nothing else works if you have a

00:16:11,260 --> 00:16:17,110
program running let's say you have a

00:16:13,680 --> 00:16:19,150
file of like 50 lines of code try and

00:16:17,110 --> 00:16:21,280
open up a new and empty file and copy

00:16:19,150 --> 00:16:23,320
and paste lines of code from your

00:16:21,280 --> 00:16:27,250
existing program into the new program

00:16:23,320 --> 00:16:29,920
and just it just helps being organized

00:16:27,250 --> 00:16:31,750
and trying to debug your program that

00:16:29,920 --> 00:16:34,510
way by breaking it into smaller chunks

00:16:31,750 --> 00:16:36,460
of code it's much easier to debug 10

00:16:34,510 --> 00:16:42,070
lines of code onto than to look through

00:16:36,460 --> 00:16:44,440
a thousand lines of code commenting out

00:16:42,070 --> 00:16:46,000
parts of code or writing pseudocode can

00:16:44,440 --> 00:16:47,380
also be very helpful especially if

00:16:46,000 --> 00:16:49,810
you're working with coat that is not

00:16:47,380 --> 00:16:52,870
your own just go through the code and

00:16:49,810 --> 00:16:56,170
try to translate code into English or

00:16:52,870 --> 00:16:57,550
whatever your mother tongue is just make

00:16:56,170 --> 00:17:01,270
sure you understand what the code is

00:16:57,550 --> 00:17:03,730
doing how it is how it is executed draw

00:17:01,270 --> 00:17:05,890
diagrams like how do different parts of

00:17:03,730 --> 00:17:08,320
code interact with each other how are

00:17:05,890 --> 00:17:10,000
they executed in which order just try to

00:17:08,320 --> 00:17:12,220
understand your program which will help

00:17:10,000 --> 00:17:15,760
you debug it

00:17:12,220 --> 00:17:18,380
when you're following a tutorial or

00:17:15,760 --> 00:17:20,480
documentation and you run into a buck

00:17:18,380 --> 00:17:22,699
there are two possibilities either you

00:17:20,480 --> 00:17:24,439
made a mistake or there is a mistake in

00:17:22,699 --> 00:17:26,030
the tutorial so if you're going through

00:17:24,439 --> 00:17:28,549
the Django girls tutorial or any other

00:17:26,030 --> 00:17:30,230
Django tutorial just ask yourself these

00:17:28,549 --> 00:17:32,090
questions when you encounter a book is

00:17:30,230 --> 00:17:34,309
the indentation correct did you forget

00:17:32,090 --> 00:17:36,440
any comments or brackets are there any

00:17:34,309 --> 00:17:38,450
typos or did you leave out a whole line

00:17:36,440 --> 00:17:40,520
of code actually that happens all the

00:17:38,450 --> 00:17:42,530
time if you're not copying and pasting

00:17:40,520 --> 00:17:44,659
code but actually typing it you leave

00:17:42,530 --> 00:17:45,980
step out really early and by the way

00:17:44,659 --> 00:17:47,840
when you're doing a tutorial i would

00:17:45,980 --> 00:17:50,179
highly recommend actually typing the

00:17:47,840 --> 00:17:53,690
code yourself and not copying and

00:17:50,179 --> 00:17:56,390
pasting and after you double-check and

00:17:53,690 --> 00:17:58,250
you're absolutely sure that you did not

00:17:56,390 --> 00:18:00,500
make a mistake i would highly encourage

00:17:58,250 --> 00:18:03,169
you to check if the documentation or

00:18:00,500 --> 00:18:04,730
tutorial is up on github and if it is go

00:18:03,169 --> 00:18:07,280
through the issues and see if someone

00:18:04,730 --> 00:18:09,740
else reported that book and if they did

00:18:07,280 --> 00:18:11,419
then you know it's a book in the

00:18:09,740 --> 00:18:13,400
tutorial it's not something you did and

00:18:11,419 --> 00:18:15,950
if it's not I would HIGHLY encourage you

00:18:13,400 --> 00:18:17,900
to report that issue and if it ends up

00:18:15,950 --> 00:18:20,630
not being an issue at all some friendly

00:18:17,900 --> 00:18:22,610
person will tell you that it's not an

00:18:20,630 --> 00:18:25,460
issue but they may be able to help you

00:18:22,610 --> 00:18:27,350
find the solution but if it if it is an

00:18:25,460 --> 00:18:29,450
issue and you actually helped a lot of

00:18:27,350 --> 00:18:31,309
people by reporting it and in the case

00:18:29,450 --> 00:18:34,130
of Jango you would go to Coto Django

00:18:31,309 --> 00:18:39,799
project calm and reported in the Django

00:18:34,130 --> 00:18:41,590
bug tracker by creating a new ticket now

00:18:39,799 --> 00:18:45,320
you may have heard people talk about

00:18:41,590 --> 00:18:47,900
reproducing books for a long time I

00:18:45,320 --> 00:18:53,780
honestly had no idea what reproducing

00:18:47,900 --> 00:18:56,179
bugs is and I so after you report a bug

00:18:53,780 --> 00:18:58,220
and Django a friendly Django core

00:18:56,179 --> 00:19:01,690
developer other Django developer will go

00:18:58,220 --> 00:19:01,690
and look through

00:19:02,100 --> 00:19:10,230
if it's you distracting they will look

00:19:08,190 --> 00:19:12,360
at your back and we will try to

00:19:10,230 --> 00:19:14,850
reproduce it and on their own computer

00:19:12,360 --> 00:19:16,770
and their own development environment

00:19:14,850 --> 00:19:18,539
and why they do that is they want to

00:19:16,770 --> 00:19:20,220
figure out is it really a bug and Django

00:19:18,539 --> 00:19:22,799
or does it have something to do with

00:19:20,220 --> 00:19:24,480
your set up with your computer something

00:19:22,799 --> 00:19:26,280
like that and that's actually pretty

00:19:24,480 --> 00:19:27,870
smart because if it's not a bug in

00:19:26,280 --> 00:19:29,970
Django then we don't need to go ahead

00:19:27,870 --> 00:19:32,280
and try to fix something that really

00:19:29,970 --> 00:19:35,039
does not it does not need to be fixed

00:19:32,280 --> 00:19:36,929
and if you're debugging something try

00:19:35,039 --> 00:19:39,419
and if you've been doing it for a long

00:19:36,929 --> 00:19:41,309
time try and ask a friend hey can you

00:19:39,419 --> 00:19:42,960
reproduce that book for me in your own

00:19:41,309 --> 00:19:46,850
development environment or on your

00:19:42,960 --> 00:19:49,799
computer and if they can reproduce it

00:19:46,850 --> 00:19:51,000
then you know it's actually a book and

00:19:49,799 --> 00:19:52,230
something else and if they can't

00:19:51,000 --> 00:19:54,230
reproduce it then you know it has

00:19:52,230 --> 00:19:56,580
something to do with your setup and

00:19:54,230 --> 00:19:58,110
while their reproduce well they

00:19:56,580 --> 00:19:59,760
reproduce it they will have to go

00:19:58,110 --> 00:20:01,110
through the same steps you took while

00:19:59,760 --> 00:20:02,580
encountering the book and they may

00:20:01,110 --> 00:20:06,350
actually be able to help you figure out

00:20:02,580 --> 00:20:06,350
which step you got wrong

00:20:12,590 --> 00:20:17,510
so these approaches i talked about our

00:20:15,710 --> 00:20:21,200
pretty hands-on they're not very

00:20:17,510 --> 00:20:24,020
scientific but there's also tools that

00:20:21,200 --> 00:20:26,840
you can use that will help you debug

00:20:24,020 --> 00:20:29,840
other smart people wrote the django

00:20:26,840 --> 00:20:32,809
debug tool bar the pdb pie flakes pilon

00:20:29,840 --> 00:20:36,860
pet checker pep aid so and there's other

00:20:32,809 --> 00:20:38,690
tools too so if you want to take a less

00:20:36,860 --> 00:20:40,220
hands-on approach please feel free to

00:20:38,690 --> 00:20:42,919
check these out I don't I didn't mention

00:20:40,220 --> 00:20:44,330
them because I wanted to go wanted to

00:20:42,919 --> 00:20:45,590
follow a simpler approach but I just

00:20:44,330 --> 00:20:49,130
wanted to make you aware that they are

00:20:45,590 --> 00:20:52,250
there now our arison code and debugging

00:20:49,130 --> 00:20:54,649
can be very frustrating it's not a nice

00:20:52,250 --> 00:20:57,730
emotion to be frustrated all the time as

00:20:54,649 --> 00:21:00,320
I saw on Twitter well ago someone said

00:20:57,730 --> 00:21:02,090
well writing code you feel like a king

00:21:00,320 --> 00:21:04,370
or queen one day and then you feel like

00:21:02,090 --> 00:21:07,640
an absolute failure the other day when

00:21:04,370 --> 00:21:09,230
when your coat just doesn't work but how

00:21:07,640 --> 00:21:10,909
do you deal with frustration and they're

00:21:09,230 --> 00:21:13,340
healthy where we're all programmers we

00:21:10,909 --> 00:21:15,890
deal with frustration on a daily basis

00:21:13,340 --> 00:21:18,980
and like Patrick here we don't want to

00:21:15,890 --> 00:21:20,539
strive our macbooks so obviously

00:21:18,980 --> 00:21:23,140
everyone is different but there are a

00:21:20,539 --> 00:21:25,340
few things that you can do that help me

00:21:23,140 --> 00:21:28,730
first of all I would like to recommend

00:21:25,340 --> 00:21:30,830
that you ask for help after a certain

00:21:28,730 --> 00:21:32,600
amount of time don't try and debug your

00:21:30,830 --> 00:21:34,669
code for five hours at a time because

00:21:32,600 --> 00:21:36,080
you probably won't find the solution and

00:21:34,669 --> 00:21:39,620
you will just get more and more

00:21:36,080 --> 00:21:41,450
frustrated just try to debug it for 30

00:21:39,620 --> 00:21:43,850
minutes and if you can't do it try to

00:21:41,450 --> 00:21:46,130
ask someone for help step away from the

00:21:43,850 --> 00:21:49,429
computer for a while take a nap go for a

00:21:46,130 --> 00:21:51,350
walk go to your happy place color in

00:21:49,429 --> 00:21:54,169
your coloring book that's what I do just

00:21:51,350 --> 00:21:56,690
do something different or a lot of times

00:21:54,169 --> 00:21:58,309
I go to bed and I get a good nights of

00:21:56,690 --> 00:21:59,659
sleep and I wake up in the morning and

00:21:58,309 --> 00:22:02,330
the solution popped into my head

00:21:59,659 --> 00:22:04,190
magically maybe you know the feeling

00:22:02,330 --> 00:22:06,110
when you xterra at your computer for a

00:22:04,190 --> 00:22:08,480
while and you do not see the mistake and

00:22:06,110 --> 00:22:10,460
then you just give yourself a break or

00:22:08,480 --> 00:22:13,990
it lets someone else look at it and then

00:22:10,460 --> 00:22:17,419
you finally see what was wrong all along

00:22:13,990 --> 00:22:19,490
I look for a different solution if one

00:22:17,419 --> 00:22:21,010
person cannot help you or they can't

00:22:19,490 --> 00:22:23,170
explain something in a ver

00:22:21,010 --> 00:22:25,330
a efficient way for you ask a different

00:22:23,170 --> 00:22:27,910
person i remember when i did the code

00:22:25,330 --> 00:22:29,950
Academy python tutorial there was a

00:22:27,910 --> 00:22:32,140
section on binary numbers and I totally

00:22:29,950 --> 00:22:33,700
did not get that concept at all and my

00:22:32,140 --> 00:22:36,010
friend tried to explain it to me all

00:22:33,700 --> 00:22:38,260
night and I still didn't understand it

00:22:36,010 --> 00:22:40,900
so then I found a short YouTube video a

00:22:38,260 --> 00:22:42,760
two-minute youtube video and afterwards

00:22:40,900 --> 00:22:45,070
at clicked for me so it wasn't that I

00:22:42,760 --> 00:22:46,450
was too stupid to understand binary

00:22:45,070 --> 00:22:48,910
numbers I just needed a different

00:22:46,450 --> 00:22:50,470
solution so if that happens to you don't

00:22:48,910 --> 00:22:52,540
blame it on you or on the person

00:22:50,470 --> 00:22:55,930
explaining it to you you just need a

00:22:52,540 --> 00:22:57,220
different explanation and here's one

00:22:55,930 --> 00:23:00,310
thing I want you to remember remember

00:22:57,220 --> 00:23:01,960
you are not the code you write code is

00:23:00,310 --> 00:23:03,850
just code and you're still a wonderful

00:23:01,960 --> 00:23:07,480
person even if your code doesn't work

00:23:03,850 --> 00:23:09,430
one day so remember that take a sticky

00:23:07,480 --> 00:23:13,420
note and put it on your desk you're not

00:23:09,430 --> 00:23:15,700
the coat you right you're not a failure

00:23:13,420 --> 00:23:19,510
your code may fail but you're not a

00:23:15,700 --> 00:23:20,920
failure you be you not being able to

00:23:19,510 --> 00:23:22,750
debug your code may have a million

00:23:20,920 --> 00:23:26,560
reasons but it has nothing to do with

00:23:22,750 --> 00:23:29,460
you being stupid or any other issues you

00:23:26,560 --> 00:23:32,020
may have and if you can find a solution

00:23:29,460 --> 00:23:34,360
here's a few things you can turn to that

00:23:32,020 --> 00:23:36,580
I already mentioned stack overflow is

00:23:34,360 --> 00:23:38,170
pretty it's a pretty great tool there

00:23:36,580 --> 00:23:40,120
are some nasty people on there but

00:23:38,170 --> 00:23:43,570
usually you can find a good solution it

00:23:40,120 --> 00:23:46,600
is true slag we have there's a lot of

00:23:43,570 --> 00:23:47,980
slack channels there's the we have a sec

00:23:46,600 --> 00:23:51,010
channel for pinnix where we're always

00:23:47,980 --> 00:23:52,480
happy to answer questions the PI ladies

00:23:51,010 --> 00:23:54,310
have a slack tranel the Django girls

00:23:52,480 --> 00:23:57,430
have a slag channel you can turn to the

00:23:54,310 --> 00:23:59,290
Django girls get er IRC go to your local

00:23:57,430 --> 00:24:02,410
meetup sometimes Twitter can be very

00:23:59,290 --> 00:24:03,850
helpful don't be afraid to pink people

00:24:02,410 --> 00:24:05,950
on Twitter or to just email them

00:24:03,850 --> 00:24:07,510
especially if you know that they're an

00:24:05,950 --> 00:24:10,360
expert in the field you have you're

00:24:07,510 --> 00:24:12,850
struggling with just turn to them for

00:24:10,360 --> 00:24:15,640
help and use the hashtag Python or

00:24:12,850 --> 00:24:17,920
Django on Twitter and when your code

00:24:15,640 --> 00:24:21,970
finally works I hope you'll do they're

00:24:17,920 --> 00:24:24,430
happy to end and that's all i have for

00:24:21,970 --> 00:24:26,230
you today I won't be doing a Q&A because

00:24:24,430 --> 00:24:28,780
I prefer chatting to people one-on-one

00:24:26,230 --> 00:24:31,180
but I'll be here all week so if you'd

00:24:28,780 --> 00:24:32,160
like to chat with me come see me now or

00:24:31,180 --> 00:24:35,910
during the next

00:24:32,160 --> 00:24:37,380
ace or tweet me at OSS Anna 16 and I'd

00:24:35,910 --> 00:24:40,410
love to hear from you and please all

00:24:37,380 --> 00:24:43,260
grab a rubber duck don't forget to grab

00:24:40,410 --> 00:24:46,710
a rubber duck and tweet them to me um I

00:24:43,260 --> 00:24:51,600
had to put this in its I thought it was

00:24:46,710 --> 00:24:53,160
funny so now and go break all the things

00:24:51,600 --> 00:24:55,530
take them apart put them back together

00:24:53,160 --> 00:24:57,630
fix them be confident and always

00:24:55,530 --> 00:25:00,950
remember that there's a solution for

00:24:57,630 --> 00:25:00,950

YouTube URL: https://www.youtube.com/watch?v=RoNxR803gs4


