Title: DjangoCon US 2016 - Angular 2 and You by Pam Selle
Publication date: 2016-08-13
Playlist: DjangoCon US 2016
Description: 
	Angular 2 and You by Pam Selle

AngularJS is one of, if not the, most popular JavaScript framework out there today. But a new day is coming: The dawn of Angular 2! Angular comes with a robust community and standard of practice, but Angular 2 is something even more intriguing: a JavaScript framework based on components (not unlike React!), with an eye towards complying with future web standards.

In this talk, we’ll cover the broad strokes of Angular 2, including some of the big game changers: web components and “choose your own language” support, and how it integrates into back-ends like Django to provide some structure to your front-end. You'll learn about Angular 2's approach to the "JavaScript framework" problem, how components create modularity in your application, and a little bit about the JavaScript build toolchain (mysterious to many!) that the JavaScript world is constantly debating over.

This talk was presented at: https://2016.djangocon.us/schedule/presentation/42/

LINKS:
Follow DjangCon US 👇
https://twitter.com/djangocon

Follow DEFNA 👇
https://twitter.com/defnado
https://www.defna.org/
Captions: 
	00:00:00,000 --> 00:00:02,450
come on

00:00:14,930 --> 00:00:19,710
welcome

00:00:16,170 --> 00:00:21,810
I place to be at Jango chi felly you can

00:00:19,710 --> 00:00:24,330
find me on the internet at Pama sore and

00:00:21,810 --> 00:00:29,489
my also dinosaur related blog the web

00:00:24,330 --> 00:00:30,750
before calm I am Philadelphia I'm also a

00:00:29,489 --> 00:00:32,640
Google developer expert in web

00:00:30,750 --> 00:00:36,540
technology currently a software

00:00:32,640 --> 00:00:38,430
engineering lead at i/o pipe so let's

00:00:36,540 --> 00:00:41,480
talk about what's going on with enjo -

00:00:38,430 --> 00:00:44,039
let's just get right into it so if you

00:00:41,480 --> 00:00:46,379
I'm going to presumably for angular as a

00:00:44,039 --> 00:00:48,090
major web framework and what we're going

00:00:46,379 --> 00:00:51,359
to be talking about today is angular 2

00:00:48,090 --> 00:00:53,489
which is the next awesome version of

00:00:51,359 --> 00:00:56,370
angular if you want to find more about

00:00:53,489 --> 00:00:58,589
it it's at angular kayo and it's quite

00:00:56,370 --> 00:01:00,379
different than angular 1 so we're going

00:00:58,589 --> 00:01:04,080
to talk about that today

00:01:00,379 --> 00:01:08,640
so the path from angular 1 to 2 it was

00:01:04,080 --> 00:01:11,130
blogged about in 2014 in March with some

00:01:08,640 --> 00:01:12,690
stated goals to be more modular to

00:01:11,130 --> 00:01:14,370
support the newest versions of

00:01:12,690 --> 00:01:17,520
JavaScript at the time it was turned

00:01:14,370 --> 00:01:20,030
akima scripts 6 simplified pencil

00:01:17,520 --> 00:01:22,619
injection make templating easier

00:01:20,030 --> 00:01:24,630
simplified directives which have been a

00:01:22,619 --> 00:01:27,570
point of confusion in the angular world

00:01:24,630 --> 00:01:30,210
and the beta for a neo 2 or it's

00:01:27,570 --> 00:01:32,759
released in December 2015 now looking on

00:01:30,210 --> 00:01:35,100
the back on that now feels like not that

00:01:32,759 --> 00:01:37,920
long it felt like a long time when

00:01:35,100 --> 00:01:39,689
watching that designed for us especially

00:01:37,920 --> 00:01:42,119
with all the problems of how awesome

00:01:39,689 --> 00:01:43,619
angular 2 is going to be it was

00:01:42,119 --> 00:01:47,159
definitely there was definitely a lot of

00:01:43,619 --> 00:01:50,880
anticipation about the framework so what

00:01:47,159 --> 00:01:52,049
makes angular 2 so special so there's

00:01:50,880 --> 00:01:54,810
three things I'm going to talk about

00:01:52,049 --> 00:01:56,880
today with how angular 2 is so special

00:01:54,810 --> 00:01:59,950
and I'm also then after that we're going

00:01:56,880 --> 00:02:03,549
to talk about how angular 2 will play in

00:01:59,950 --> 00:02:07,000
Shango environment so building for any

00:02:03,549 --> 00:02:07,950
deployment target so this is really

00:02:07,000 --> 00:02:10,989
awesome

00:02:07,950 --> 00:02:13,780
Hey too fast

00:02:10,989 --> 00:02:15,940
all right angular 2 is not tied to the

00:02:13,780 --> 00:02:18,970
dock so the definite logic model is that

00:02:15,940 --> 00:02:21,670
yeah we get to control the you know the

00:02:18,970 --> 00:02:23,410
client anything or to is does not have a

00:02:21,670 --> 00:02:26,349
con it doesn't have to be hype the

00:02:23,410 --> 00:02:28,510
concept of a Dom whereas you know one

00:02:26,349 --> 00:02:30,400
has this limitation so if you want to

00:02:28,510 --> 00:02:31,840
use angular 1 somewhere that means that

00:02:30,400 --> 00:02:33,790
wherever you want to use it need to

00:02:31,840 --> 00:02:36,400
understand some kind of document object

00:02:33,790 --> 00:02:38,709
model not so in angular 2 that's

00:02:36,400 --> 00:02:40,000
actually really awesome because that

00:02:38,709 --> 00:02:42,519
means you can run it in places that

00:02:40,000 --> 00:02:44,290
don't have a browser that's aren't a

00:02:42,519 --> 00:02:46,239
browser environment so anywhere you can

00:02:44,290 --> 00:02:50,680
bring web technology which is actually a

00:02:46,239 --> 00:02:53,410
lot of places you can take angular 2 so

00:02:50,680 --> 00:02:55,480
kind of the biggest example of this is

00:02:53,410 --> 00:02:58,150
being able to use native script which is

00:02:55,480 --> 00:03:00,040
an open source cross-platform framework

00:02:58,150 --> 00:03:02,769
for deploying mobile apps and you can

00:03:00,040 --> 00:03:05,260
use a or two and native script so you

00:03:02,769 --> 00:03:07,510
could actually share code across your

00:03:05,260 --> 00:03:09,519
web and mobile apps so that's pretty

00:03:07,510 --> 00:03:11,170
awesome and especially the way anger 2

00:03:09,519 --> 00:03:13,239
is architected with components which

00:03:11,170 --> 00:03:15,760
we'll talk about in a minute

00:03:13,239 --> 00:03:18,690
makes code reuse really accessible which

00:03:15,760 --> 00:03:20,769
is always a big dream in web development

00:03:18,690 --> 00:03:23,829
so choose your own language

00:03:20,769 --> 00:03:27,250
so whereas angular 1 is a JavaScript

00:03:23,829 --> 00:03:28,450
framework angular 2 is prime of a as

00:03:27,250 --> 00:03:32,530
long as it compiles to JavaScript

00:03:28,450 --> 00:03:35,709
framework with especially a big focus on

00:03:32,530 --> 00:03:38,470
tight script so the this is actually the

00:03:35,709 --> 00:03:39,760
drop-down in the angular Doc's so you

00:03:38,470 --> 00:03:43,170
see you've got high scripts for

00:03:39,760 --> 00:03:46,630
JavaScript or dart which is a language a

00:03:43,170 --> 00:03:49,180
champion by Google but let's talk about

00:03:46,630 --> 00:03:51,940
high script for a minute so high script

00:03:49,180 --> 00:03:54,340
is a project championed by Microsoft

00:03:51,940 --> 00:03:56,739
it's a superset of JavaScript providing

00:03:54,340 --> 00:04:00,310
among things optional static typing

00:03:56,739 --> 00:04:02,849
including you know I know Hopper's will

00:04:00,310 --> 00:04:02,849
talk about types

00:04:03,300 --> 00:04:08,890
types of really awesome really liked

00:04:06,160 --> 00:04:13,960
those so they're nice to have when you

00:04:08,890 --> 00:04:15,820
can get them so you can you get types

00:04:13,960 --> 00:04:17,320
with tight script totally optional you

00:04:15,820 --> 00:04:18,760
don't have to annotate pipes and if you

00:04:17,320 --> 00:04:22,090
do want to annotate you can always punch

00:04:18,760 --> 00:04:23,920
and say any but you can then also with

00:04:22,090 --> 00:04:25,900
typescript compile the newest JavaScript

00:04:23,920 --> 00:04:27,400
standards to older environments which

00:04:25,900 --> 00:04:31,030
means you get features like modulus

00:04:27,400 --> 00:04:34,060
lambdas classes the spread operator for

00:04:31,030 --> 00:04:35,620
of stuff like that and that's in the

00:04:34,060 --> 00:04:37,330
newer versions of JavaScript and the

00:04:35,620 --> 00:04:40,570
typescript compiler does all the work

00:04:37,330 --> 00:04:43,120
for you to compile that to run in in

00:04:40,570 --> 00:04:44,740
another environment so that you can just

00:04:43,120 --> 00:04:48,280
focus on writing beautiful typescript

00:04:44,740 --> 00:04:50,520
code and not on whether the browser

00:04:48,280 --> 00:04:54,160
you're going to deploy to supports it

00:04:50,520 --> 00:04:55,930
and the other thing is that part of the

00:04:54,160 --> 00:04:59,200
design of typescript is that javascript

00:04:55,930 --> 00:05:00,280
es5 is valid typescript code so it kind

00:04:59,200 --> 00:05:01,690
of follows the you know if you're

00:05:00,280 --> 00:05:04,660
familiar with staff it kind of follows

00:05:01,690 --> 00:05:07,960
that model of all you is change the end

00:05:04,660 --> 00:05:11,260
of the file and goes from JSF TF and

00:05:07,960 --> 00:05:13,390
tada is a type script file and then that

00:05:11,260 --> 00:05:14,710
way you can migrate gradually to

00:05:13,390 --> 00:05:17,880
typescript if you so choose

00:05:14,710 --> 00:05:20,350
if you're in a migration type situation

00:05:17,880 --> 00:05:22,090
so the big question is always do I have

00:05:20,350 --> 00:05:26,500
to use typescript to use angular 2 and

00:05:22,090 --> 00:05:27,790
well no but I like you saw the drop-down

00:05:26,500 --> 00:05:29,680
you saw it there there's multiple

00:05:27,790 --> 00:05:31,570
options it's also like if you wanted to

00:05:29,680 --> 00:05:32,979
write something that you know as long as

00:05:31,570 --> 00:05:34,030
it can interface with JavaScript you

00:05:32,979 --> 00:05:38,229
could probably interface with a new or

00:05:34,030 --> 00:05:40,990
two then you know use what you want but

00:05:38,229 --> 00:05:43,240
it's pretty awesome use high script it's

00:05:40,990 --> 00:05:45,250
pretty fun it also a lot of

00:05:43,240 --> 00:05:46,780
documentation for a go to the best

00:05:45,250 --> 00:05:48,669
documentation isn't I scripts so even

00:05:46,780 --> 00:05:50,740
though they have the other options the

00:05:48,669 --> 00:05:52,330
best documentation is in typescript so

00:05:50,740 --> 00:05:54,220
it doesn't makes a lot of sense there's

00:05:52,330 --> 00:05:56,950
a good IDE to port if you use an IEE

00:05:54,220 --> 00:06:01,180
or even sublime text great types of

00:05:56,950 --> 00:06:03,669
typescript support alright let's talk

00:06:01,180 --> 00:06:04,780
about web components so before I talk

00:06:03,669 --> 00:06:07,020
about you know - I'm going to talk about

00:06:04,780 --> 00:06:09,970
web components are just for quick review

00:06:07,020 --> 00:06:13,150
so a web component consists of three

00:06:09,970 --> 00:06:15,220
parts so you have markup behavior and

00:06:13,150 --> 00:06:18,910
presentation together

00:06:15,220 --> 00:06:20,170
beautiful package of a web component so

00:06:18,910 --> 00:06:23,010
let me introduce you to a web component

00:06:20,170 --> 00:06:27,670
that you're probably familiar with okay

00:06:23,010 --> 00:06:28,660
all right so this is a select tag it has

00:06:27,670 --> 00:06:32,680
markup

00:06:28,660 --> 00:06:34,870
it has presentation and it has an API so

00:06:32,680 --> 00:06:37,690
you know how to get value out of select

00:06:34,870 --> 00:06:40,510
tag so where's this let type in exists

00:06:37,690 --> 00:06:41,980
right and every time you want to do

00:06:40,510 --> 00:06:44,650
something like a select tag you've had

00:06:41,980 --> 00:06:46,420
to you know write a separate you know

00:06:44,650 --> 00:06:47,950
HTML file write a separate JavaScript

00:06:46,420 --> 00:06:49,150
file and you know why are them all

00:06:47,950 --> 00:06:51,570
together and then there's a million

00:06:49,150 --> 00:06:53,500
plug-ins for it I mean you can think of

00:06:51,570 --> 00:06:53,770
components like this that we do this all

00:06:53,500 --> 00:06:56,950
the time

00:06:53,770 --> 00:06:59,140
carousels or you know menus stuff like

00:06:56,950 --> 00:07:01,000
that and so the idea with web components

00:06:59,140 --> 00:07:03,160
is you don't have to you know champion

00:07:01,000 --> 00:07:05,470
these things to become native like this

00:07:03,160 --> 00:07:07,570
wet tag which is native you can write

00:07:05,470 --> 00:07:09,550
your own web component and then share it

00:07:07,570 --> 00:07:10,120
with all your friends and you know have

00:07:09,550 --> 00:07:13,030
lots of fun

00:07:10,120 --> 00:07:14,020
so what was really awesome for

00:07:13,030 --> 00:07:17,530
definitely direction the web that's

00:07:14,020 --> 00:07:19,600
going in and in fact the web the idea of

00:07:17,530 --> 00:07:21,340
web components actually refers to a set

00:07:19,600 --> 00:07:24,460
of API eyes and these with API so refers

00:07:21,340 --> 00:07:26,490
to so you've got custom elements HTML

00:07:24,460 --> 00:07:28,419
imports templates in the shadow Dom so

00:07:26,490 --> 00:07:32,050
many of these might sound familiar

00:07:28,419 --> 00:07:34,990
some of them might be new but the thing

00:07:32,050 --> 00:07:37,240
is interesting / not so fun about them

00:07:34,990 --> 00:07:40,180
is that browser support is not across

00:07:37,240 --> 00:07:42,220
the board so that means that in order to

00:07:40,180 --> 00:07:45,430
use the web components API as you either

00:07:42,220 --> 00:07:47,740
need to get a polyfill or you need to

00:07:45,430 --> 00:07:49,419
you know you probably want to polyfill

00:07:47,740 --> 00:07:51,220
and then you want to use something on

00:07:49,419 --> 00:07:54,729
top of that polyfill like polymer or

00:07:51,220 --> 00:07:58,390
xTag however these polyfills they aren't

00:07:54,729 --> 00:07:59,800
super performing so the direction is web

00:07:58,390 --> 00:08:01,810
so basically the direction is web

00:07:59,800 --> 00:08:04,540
components but should you use web

00:08:01,810 --> 00:08:07,690
components right now probably not you

00:08:04,540 --> 00:08:09,820
should be aware of them so this is where

00:08:07,690 --> 00:08:11,410
we get to go to so one of your best bets

00:08:09,820 --> 00:08:13,600
for using something like web components

00:08:11,410 --> 00:08:16,300
is using something like a neo - which

00:08:13,600 --> 00:08:17,190
has a component you know it has the idea

00:08:16,300 --> 00:08:19,310
of components and then

00:08:17,190 --> 00:08:22,170
actually plans for them to be a

00:08:19,310 --> 00:08:24,150
compatible future forward with the web

00:08:22,170 --> 00:08:26,520
component specification so that's pretty

00:08:24,150 --> 00:08:28,170
awesome so you can just use something

00:08:26,520 --> 00:08:29,820
that actually works and that's really

00:08:28,170 --> 00:08:31,410
performant that that was a priority and

00:08:29,820 --> 00:08:32,820
you know to remember is we want to be

00:08:31,410 --> 00:08:38,250
super Foreman super fast

00:08:32,820 --> 00:08:40,250
uh but you get you know okay you know be

00:08:38,250 --> 00:08:42,000
aware of this new thing coming forward

00:08:40,250 --> 00:08:43,950
you won't learn more about web

00:08:42,000 --> 00:08:45,540
components this is definitely the place

00:08:43,950 --> 00:08:47,370
to learn about web components web

00:08:45,540 --> 00:08:51,420
component org kind of like the home page

00:08:47,370 --> 00:08:52,920
for all things web components let's talk

00:08:51,420 --> 00:08:55,590
about components in angular 2 and what

00:08:52,920 --> 00:08:58,590
they look like so here's a typescript

00:08:55,590 --> 00:09:00,840
web component so if you're right vanilla

00:08:58,590 --> 00:09:02,040
JavaScript much this will and haven't

00:09:00,840 --> 00:09:04,380
write written typescript this might look

00:09:02,040 --> 00:09:08,310
a little weird however it looks pretty

00:09:04,380 --> 00:09:10,350
similar to two es6 or es2015 type stuff

00:09:08,310 --> 00:09:13,020
you got a class keyword in there you

00:09:10,350 --> 00:09:15,360
have a component there in in angular

00:09:13,020 --> 00:09:16,230
it's considered an annotation but you

00:09:15,360 --> 00:09:18,720
can probably think of it like a

00:09:16,230 --> 00:09:22,800
decorator so adds metadata about the

00:09:18,720 --> 00:09:24,600
code it's with us and so our component

00:09:22,800 --> 00:09:27,180
annotation says we want to target a

00:09:24,600 --> 00:09:29,100
particular selector say hello and we're

00:09:27,180 --> 00:09:30,540
going to do some data binding you can

00:09:29,100 --> 00:09:32,970
see it type annotation there that name

00:09:30,540 --> 00:09:35,370
is a string and so this is a super

00:09:32,970 --> 00:09:36,990
simple hello world component you're

00:09:35,370 --> 00:09:40,380
writing the same thing yes five it looks

00:09:36,990 --> 00:09:43,530
like this which isn't so different it's

00:09:40,380 --> 00:09:45,360
just it's using the same DSL so the same

00:09:43,530 --> 00:09:48,330
domain-specific language which is nice

00:09:45,360 --> 00:09:49,680
so once you know the the angular two way

00:09:48,330 --> 00:09:53,760
of doing things you can kind of bounce

00:09:49,680 --> 00:09:55,520
between them if you want to and and so

00:09:53,760 --> 00:09:57,900
on we got some node type annotations

00:09:55,520 --> 00:09:59,070
it's just you know playing with

00:09:57,900 --> 00:10:04,530
JavaScript functions plain old

00:09:59,070 --> 00:10:07,680
JavaScript objects assignment drivers so

00:10:04,530 --> 00:10:09,390
in a newer one you did a lot of things

00:10:07,680 --> 00:10:11,610
with directive it felt like if you ever

00:10:09,390 --> 00:10:13,890
developed in any or one project to me it

00:10:11,610 --> 00:10:16,200
felt like if there was like a question

00:10:13,890 --> 00:10:18,630
the answer was a directive like like

00:10:16,200 --> 00:10:20,010
much of the time if it wasn't related to

00:10:18,630 --> 00:10:23,250
like that you gotta and that's a service

00:10:20,010 --> 00:10:23,840
but if you want to modify a presentation

00:10:23,250 --> 00:10:26,210
if you

00:10:23,840 --> 00:10:29,030
- you know create a create a new element

00:10:26,210 --> 00:10:33,290
it's also a directive so everything is

00:10:29,030 --> 00:10:36,620
the directive basically okay and so what

00:10:33,290 --> 00:10:39,890
was it directive anyway so in a Oh -

00:10:36,620 --> 00:10:41,210
this is a directive an action so ng if

00:10:39,890 --> 00:10:44,330
it looks a little different in your -

00:10:41,210 --> 00:10:46,130
you have a little asterisk there which

00:10:44,330 --> 00:10:47,720
is actually a nice way of showing you

00:10:46,130 --> 00:10:50,180
that the directive is going to change

00:10:47,720 --> 00:10:54,080
what is going to be outputted in the

00:10:50,180 --> 00:10:56,480
presentation so ng if is going to do it

00:10:54,080 --> 00:10:58,280
also helps anywhere to break out the

00:10:56,480 --> 00:10:59,930
code when it's doing is parsing so it

00:10:58,280 --> 00:11:02,870
actually does serve a really nice

00:10:59,930 --> 00:11:04,400
purpose for them too but NGS is true

00:11:02,870 --> 00:11:06,140
then it will display this link if it's

00:11:04,400 --> 00:11:07,460
false once played only pretty

00:11:06,140 --> 00:11:09,350
straightforward but so that's a

00:11:07,460 --> 00:11:12,140
directive it's a it's a thing you're

00:11:09,350 --> 00:11:14,360
going to put on your HTML to modify

00:11:12,140 --> 00:11:18,110
what's going to happen that in your in

00:11:14,360 --> 00:11:20,030
your application so you keep threatening

00:11:18,110 --> 00:11:22,910
so we just signing or to a directive in

00:11:20,030 --> 00:11:24,650
a or - but they go in components so I

00:11:22,910 --> 00:11:26,900
really this is probably my favorite

00:11:24,650 --> 00:11:28,520
thing about Amy or - is that if you are

00:11:26,900 --> 00:11:30,470
not familiar with a year one and you're

00:11:28,520 --> 00:11:32,600
coming here like I would say just go

00:11:30,470 --> 00:11:34,550
forth and still Lana Taylor - and don't

00:11:32,600 --> 00:11:37,130
confuse yourself in a door one because

00:11:34,550 --> 00:11:38,950
it's quite different and to me wrapping

00:11:37,130 --> 00:11:41,840
my head around components which are

00:11:38,950 --> 00:11:43,730
markup behavior and presentation is a

00:11:41,840 --> 00:11:46,520
lot easier than trying to figure out

00:11:43,730 --> 00:11:49,280
what a directive is so you can keep

00:11:46,520 --> 00:11:53,210
directive which our annotations on your

00:11:49,280 --> 00:11:54,320
HTML but they go in components so here's

00:11:53,210 --> 00:11:56,090
an example of a component with a

00:11:54,320 --> 00:11:58,250
directive which is super filling super

00:11:56,090 --> 00:12:02,270
important which checks at this July 2016

00:11:58,250 --> 00:12:10,010
and if so it will say hello jingle say

00:12:02,270 --> 00:12:11,510
hello Jago can't pop up target ah anyway

00:12:10,010 --> 00:12:13,990
I was gonna try and scroll it right but

00:12:11,510 --> 00:12:16,640
you can believe me that it says 2016 uh

00:12:13,990 --> 00:12:19,780
and will also see it in the example app

00:12:16,640 --> 00:12:21,800
so it does say help with Django Khan

00:12:19,780 --> 00:12:25,130
alright well I think I said my angular

00:12:21,800 --> 00:12:27,890
and Django now so you know give me a go

00:12:25,130 --> 00:12:29,570
talk at a Django conference uh but it's

00:12:27,890 --> 00:12:33,740
also your talk about web technology in

00:12:29,570 --> 00:12:33,930
general so beauty is Django and certain

00:12:33,740 --> 00:12:35,790
thing

00:12:33,930 --> 00:12:37,770
in the Jago ecosystem make it really

00:12:35,790 --> 00:12:40,380
easy to write your API once use

00:12:37,770 --> 00:12:41,880
everywhere so you write an API you

00:12:40,380 --> 00:12:44,880
consume it in this app consuming that

00:12:41,880 --> 00:12:45,089
app you know save yeah that's what it's

00:12:44,880 --> 00:12:47,910
for

00:12:45,089 --> 00:12:49,620
so you can write your API in Django and

00:12:47,910 --> 00:12:51,300
then consume it with your 8002 app

00:12:49,620 --> 00:12:53,399
that's probably the best way to use in

00:12:51,300 --> 00:12:54,810
your to in the Django ecosystem I would

00:12:53,399 --> 00:12:58,440
not recommend doing something like a

00:12:54,810 --> 00:13:01,740
like franken you know serve some things

00:12:58,440 --> 00:13:03,750
with the you know from server serve some

00:13:01,740 --> 00:13:06,990
things with angular you kind of want to

00:13:03,750 --> 00:13:08,160
go in one direction or the other if you

00:13:06,990 --> 00:13:10,140
want to do some server-side rendering

00:13:08,160 --> 00:13:13,350
that's a different thing to but that's a

00:13:10,140 --> 00:13:16,620
different talk so if you're gonna write

00:13:13,350 --> 00:13:18,450
API well the kind of common ways to do

00:13:16,620 --> 00:13:20,399
this in the Django world would be with

00:13:18,450 --> 00:13:23,660
the Django rest framework there's only

00:13:20,399 --> 00:13:26,490
you go to the Django rest tutorial nice

00:13:23,660 --> 00:13:28,110
it's a really cool framework so um so

00:13:26,490 --> 00:13:29,100
I'll like show it and then the rest of

00:13:28,110 --> 00:13:29,520
you'll be like why and I go that

00:13:29,100 --> 00:13:32,250
tutorial

00:13:29,520 --> 00:13:35,399
um and then tasty pie which makes it

00:13:32,250 --> 00:13:37,440
really easy to make api's so Jane

00:13:35,399 --> 00:13:39,660
Burress powerful and flexible web

00:13:37,440 --> 00:13:42,209
browser will API other awesomeness go to

00:13:39,660 --> 00:13:43,470
a Django rest tutorial and learn all

00:13:42,209 --> 00:13:46,380
about it

00:13:43,470 --> 00:13:48,390
so let's actually look at that I believe

00:13:46,380 --> 00:13:51,720
this time for that now yeah so our API

00:13:48,390 --> 00:13:53,700
is dinosaurs as a service which is a

00:13:51,720 --> 00:13:55,589
super important service the world needs

00:13:53,700 --> 00:13:59,880
today if you want to talk about funding

00:13:55,589 --> 00:14:08,610
the coffee afterward so so let's look at

00:13:59,880 --> 00:14:13,820
that API so so to get this started um I

00:14:08,610 --> 00:14:17,579
mean I did the bigger sure thank you

00:14:13,820 --> 00:14:20,160
yeah um so this UI is pretty much all

00:14:17,579 --> 00:14:22,860
whoa it's all from Django rest like I

00:14:20,160 --> 00:14:25,290
did the configuring and stuff I made a

00:14:22,860 --> 00:14:27,720
model put some data on the model is the

00:14:25,290 --> 00:14:30,690
Django thing but most of it is this

00:14:27,720 --> 00:14:33,149
beautiful UI is browsable is all the

00:14:30,690 --> 00:14:33,810
Django rest framework so if I click on

00:14:33,149 --> 00:14:36,120
my dinosaur

00:14:33,810 --> 00:14:39,090
and point which is cool that I can click

00:14:36,120 --> 00:14:44,340
on it that's really awesome um so I see

00:14:39,090 --> 00:14:45,779
my my dinosaurs uh you I want to ask you

00:14:44,340 --> 00:14:57,510
to suggest a dinosaur we got suggestion

00:14:45,779 --> 00:14:59,430
on that I can spell couple of that like

00:14:57,510 --> 00:15:02,700
we just like it just does this

00:14:59,430 --> 00:15:04,529
it's Jenga rest just works love it so we

00:15:02,700 --> 00:15:08,970
just added t-rex if we go back and we

00:15:04,529 --> 00:15:13,920
look at our dinosaurs we have t-rex so

00:15:08,970 --> 00:15:15,570
this is running on localhost 8080 Euler

00:15:13,920 --> 00:15:19,620
to running over here so you see we have

00:15:15,570 --> 00:15:21,390
to have the django con that that

00:15:19,620 --> 00:15:23,730
directive is running and saying yes it's

00:15:21,390 --> 00:15:26,250
July 2016 so it's django con and we see

00:15:23,730 --> 00:15:28,529
are dinosaurs listed out here so it's

00:15:26,250 --> 00:15:31,500
interacting with the api to present this

00:15:28,529 --> 00:15:33,600
to our you know our simple application

00:15:31,500 --> 00:15:43,740
and all this code is develop online if

00:15:33,600 --> 00:15:46,860
you want to see the example later oh so

00:15:43,740 --> 00:15:48,480
if I had made a code change yeah if I

00:15:46,860 --> 00:15:50,970
made it cut so I have it set with live

00:15:48,480 --> 00:15:52,200
reloads if I made the question was I'm

00:15:50,970 --> 00:15:57,810
joining to refresh your seats you guys

00:15:52,200 --> 00:15:59,460
uh yes um but yes there would be ways

00:15:57,810 --> 00:16:00,780
for you to not have to you can set up

00:15:59,460 --> 00:16:03,540
especially an awesome thing about

00:16:00,780 --> 00:16:05,460
angular 2 which I did put in here but

00:16:03,540 --> 00:16:08,280
it's generally awesome is that the way

00:16:05,460 --> 00:16:11,040
you get your data by default is through

00:16:08,280 --> 00:16:13,740
observables and not promises so a

00:16:11,040 --> 00:16:15,480
promise in JavaScript is like go and get

00:16:13,740 --> 00:16:16,800
me some data and then like let me know

00:16:15,480 --> 00:16:20,070
when you're done and then there's some

00:16:16,800 --> 00:16:22,110
data and observable is more like and go

00:16:20,070 --> 00:16:24,089
get me some data and they give me data

00:16:22,110 --> 00:16:27,930
as you have it and that's pretty awesome

00:16:24,089 --> 00:16:29,850
so if we actually set up hey you know we

00:16:27,930 --> 00:16:31,699
could set up a WebSocket something like

00:16:29,850 --> 00:16:33,589
that and send an event

00:16:31,699 --> 00:16:36,410
like there's a bunch of ways we could do

00:16:33,589 --> 00:16:44,600
that in order to get a get the t-rex

00:16:36,410 --> 00:16:46,009
once it was added live so here's

00:16:44,600 --> 00:16:48,529
something easier to code then this is

00:16:46,009 --> 00:16:50,930
already in texture and the example code

00:16:48,529 --> 00:16:53,180
is in typescript but so this is a big

00:16:50,930 --> 00:16:55,550
wall of text so plus instead look it a

00:16:53,180 --> 00:16:59,540
little bit less of it so this is the

00:16:55,550 --> 00:17:02,300
important bit of the Dinos service so

00:16:59,540 --> 00:17:03,649
the services with our inning or two are

00:17:02,300 --> 00:17:05,780
going to be if you have a data source

00:17:03,649 --> 00:17:08,209
and you want to cap the data source to

00:17:05,780 --> 00:17:10,039
speak you're going to use a service it

00:17:08,209 --> 00:17:14,209
makes sense conceptually go with it um

00:17:10,039 --> 00:17:15,679
or it will eventually so you have

00:17:14,209 --> 00:17:18,740
service and then you have a little get

00:17:15,679 --> 00:17:21,949
diagnose method and it uses the HTTP

00:17:18,740 --> 00:17:23,299
service to get this API this actually

00:17:21,949 --> 00:17:25,610
turns it into a promise and just uses

00:17:23,299 --> 00:17:28,100
promises to keep things more promise

00:17:25,610 --> 00:17:30,789
like and not observable and then it just

00:17:28,100 --> 00:17:32,960
throws a data at the browser so says

00:17:30,789 --> 00:17:36,409
there's a component that's consuming the

00:17:32,960 --> 00:17:38,570
service but you're going to run into

00:17:36,409 --> 00:17:41,900
this problem and that it scores so

00:17:38,570 --> 00:17:44,090
cross-origin request ah but it's not a

00:17:41,900 --> 00:17:45,799
bad because we're working in Django and

00:17:44,090 --> 00:17:49,010
so there's a Django package which you

00:17:45,799 --> 00:17:51,799
know you install it you add it to the

00:17:49,010 --> 00:17:53,390
middleware and you have a course policy

00:17:51,799 --> 00:17:55,309
that's pretty awesome

00:17:53,390 --> 00:17:57,159
so one of those nice benefits of being

00:17:55,309 --> 00:17:59,240
able to build your API quickly in Django

00:17:57,159 --> 00:18:01,220
you know run into a little problem

00:17:59,240 --> 00:18:06,230
there's a gaggle brought a package to

00:18:01,220 --> 00:18:08,510
fix your problem fetch a script and so

00:18:06,230 --> 00:18:10,340
let's look at the dinosaur component so

00:18:08,510 --> 00:18:12,679
okay fire service is where we're going

00:18:10,340 --> 00:18:13,850
to get our data right then our component

00:18:12,679 --> 00:18:15,500
is going to be the thing that's actually

00:18:13,850 --> 00:18:19,059
going to display on the page so it has

00:18:15,500 --> 00:18:21,980
the - you know to beat it to death the

00:18:19,059 --> 00:18:23,840
presentation the mark-up behavior so

00:18:21,980 --> 00:18:24,580
this is an annotation that is all our

00:18:23,840 --> 00:18:26,410
guys we're

00:18:24,580 --> 00:18:28,300
dinosaurs and then there's a little

00:18:26,410 --> 00:18:31,450
template and you'll notice that the

00:18:28,300 --> 00:18:34,450
template has a directive and ng4 and it

00:18:31,450 --> 00:18:38,020
just says let Dino of dinos where dinos

00:18:34,450 --> 00:18:39,940
is that that set of dinosaurs we get as

00:18:38,020 --> 00:18:42,300
a response from the API and then this

00:18:39,940 --> 00:18:45,760
displays this BTS in an unordered list

00:18:42,300 --> 00:18:48,070
and this is the the rest of the

00:18:45,760 --> 00:18:49,450
component this is the JavaScript part so

00:18:48,070 --> 00:18:51,220
those who are close on the same file but

00:18:49,450 --> 00:18:54,010
just broken out to make it a little bit

00:18:51,220 --> 00:18:56,050
easier green and so we've got it

00:18:54,010 --> 00:18:57,670
implements on an it because when we want

00:18:56,050 --> 00:18:59,470
with a component boot so we want it to

00:18:57,670 --> 00:19:01,930
make a request to our service and so

00:18:59,470 --> 00:19:03,220
when it in its we say we want you to go

00:19:01,930 --> 00:19:06,280
get dinos

00:19:03,220 --> 00:19:09,010
and since Dinah's returns a promise we

00:19:06,280 --> 00:19:10,240
get to use then and catch and set our

00:19:09,010 --> 00:19:12,340
our dinos

00:19:10,240 --> 00:19:14,260
which fruit see this is the type system

00:19:12,340 --> 00:19:18,220
as I punted and made I know as a type of

00:19:14,260 --> 00:19:25,620
any it could this in a register or no

00:19:18,220 --> 00:19:28,090
three of objects and error is any so

00:19:25,620 --> 00:19:30,100
yeah so this is a bit in the dinosaur

00:19:28,090 --> 00:19:32,440
component where this is dependency

00:19:30,100 --> 00:19:35,200
injection in action which is pretty nice

00:19:32,440 --> 00:19:36,910
so it's worth instead of saying Dinitz

00:19:35,200 --> 00:19:38,410
new you know guys your service equals

00:19:36,910 --> 00:19:40,870
new dinosaur service which would be one

00:19:38,410 --> 00:19:42,970
JavaScript way of saying this dependency

00:19:40,870 --> 00:19:44,650
injection says in the constructor we're

00:19:42,970 --> 00:19:47,770
passing private dinosaur service which

00:19:44,650 --> 00:19:49,210
is a dinosaur service so in the type

00:19:47,770 --> 00:19:50,910
annotation this kind of makes sense so

00:19:49,210 --> 00:19:53,860
we're getting dinosaur service of

00:19:50,910 --> 00:19:56,740
because we the big the capital dinosaur

00:19:53,860 --> 00:19:58,510
service is what we brought in and then

00:19:56,740 --> 00:20:01,560
lower case dinosaur service is what

00:19:58,510 --> 00:20:05,230
we're actually using in our component

00:20:01,560 --> 00:20:08,140
and then on an it is that boot process

00:20:05,230 --> 00:20:10,150
where we get dinos on the components

00:20:08,140 --> 00:20:12,160
initialization there's also component

00:20:10,150 --> 00:20:14,140
teardown in Kate there's a hook for that

00:20:12,160 --> 00:20:17,710
in case you need to turn out components

00:20:14,140 --> 00:20:20,860
when they're destroyed so the example

00:20:17,710 --> 00:20:23,560
app is at a Jenga risk and go to example

00:20:20,860 --> 00:20:24,150
I'll tweet it so that you don't have to

00:20:23,560 --> 00:20:27,660
memorize it

00:20:24,150 --> 00:20:30,700
and all these slides are available at a

00:20:27,660 --> 00:20:33,610
PLA back github diet slash angular 2 and

00:20:30,700 --> 00:20:35,740
you so thank you very much

00:20:33,610 --> 00:20:36,130
if you want to get in touch with me pama

00:20:35,740 --> 00:20:38,230
sword

00:20:36,130 --> 00:20:40,630
or I also have a podcast with some

00:20:38,230 --> 00:20:43,200
friends called terrine incomplete if you

00:20:40,630 --> 00:20:46,500
get the joke you like the podcast and

00:20:43,200 --> 00:20:46,500
thank so much

00:20:53,450 --> 00:21:00,170
oh did you show us the index.html Oh

00:20:59,090 --> 00:21:08,000
totally yeah

00:21:00,170 --> 00:21:09,650
um so the index.html is um it uses this

00:21:08,000 --> 00:21:11,060
many names like in a JavaScript back you

00:21:09,650 --> 00:21:14,450
can choose like you want to do like web

00:21:11,060 --> 00:21:16,610
pack or both this uses the the angular

00:21:14,450 --> 00:21:20,510
documentation uses systemjs so that's

00:21:16,610 --> 00:21:23,000
just what I use um so it it consumes

00:21:20,510 --> 00:21:24,590
these things and the system J's config

00:21:23,000 --> 00:21:26,120
one of the reasons why is if you look at

00:21:24,590 --> 00:21:28,700
the system dance so this is just this is

00:21:26,120 --> 00:21:34,760
index but then system JSP Vega looks

00:21:28,700 --> 00:21:37,430
like this so that's kind of gnarly so I

00:21:34,760 --> 00:21:39,910
kind of let them handle that and then it

00:21:37,430 --> 00:21:39,910
works

00:21:53,890 --> 00:21:55,950

YouTube URL: https://www.youtube.com/watch?v=QlZbj8UAYkw


