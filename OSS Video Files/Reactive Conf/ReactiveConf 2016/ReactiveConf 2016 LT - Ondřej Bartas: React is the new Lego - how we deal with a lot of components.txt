Title: ReactiveConf 2016 LT - Ondřej Bartas: React is the new Lego - how we deal with a lot of components
Publication date: 2016-11-26
Playlist: ReactiveConf 2016
Description: 
	https://reactiveconf.com 

Meet those driving the change! World-renowned mobile and web innovators got together for three days in one town.

ReactiveConf, October 26 - 28 2016, Bratislava, Slovakia

For inspiration, look at one of the most-starred Lightning Talks proposals for ReactiveConf 2016.

---

Ondřej Bartas: React is the new Lego - how we deal with a lot of components

At Blueberry, we’ve been frustrated with maintaining and getting oriented in our React components and their props. That’s why we made a tool for automatically generating a component library from a project’s components. We named it BlueKit and released it as open-source.

Developers, designers, and other project members can use the generated library to browse through components in a project, tweak their props, and see a live preview of these changes. I’ll talk about the problems that inspired us to make BlueKit and how it can help React devs with their projects.

https://gist.github.com/ondrejbartas/9201a080f820779f100027e576cc534e

---

Do you see yourself on the ReactiveConf stage? Do you want to become the next #ReactJS superstar? If you think you have a great idea everybody in the community should know about, join Lightning Talks, and share the spotlight with the best React experts at ReactiveConf next year!

All you need to do to become a part of them is to submit your proposal to Gist and leave the rest to the community.

The ten most-starred proposals will join our line-up, and the top three ones will get a free ReactiveConf ticket with an invitation to an exclusive dinner with our speakers and VIP guests.

Have you heard about ReactiveConf? According to tech superstars such as David Nolen, Richard Feldman, or Brent Vatne, it’s the best conference on web and mobile app development! It focuses on all things React and beyond and takes place annually in Bratislava, Slovakia.

In 2016, more than 700 attendees from all over the world spent three days in Bratislava getting inspired, sharing amazing new ideas, and meeting more than 30 awesome speakers from companies such as Google, Cognitect, NoRedInk, RethinkDB, Airbnb, Microsoft, Facebook, and the list could go on forever.

If you want to be part of the next event, get your tickets now at https://reactiveconf.com, and React with us!
Captions: 
	00:00:04,740 --> 00:00:11,080
hi guys I'm on tape artists and I've

00:00:08,020 --> 00:00:14,110
work at blueberry dot IO and we are

00:00:11,080 --> 00:00:16,930
located in Prague and we are using crack

00:00:14,110 --> 00:00:19,180
for almost two years and in the

00:00:16,930 --> 00:00:21,810
beginning we have something like this we

00:00:19,180 --> 00:00:26,529
were using crowd as template engine and

00:00:21,810 --> 00:00:28,930
well it's not so good when you use like

00:00:26,529 --> 00:00:31,989
lot of days and like original elements

00:00:28,930 --> 00:00:36,610
from the dome so when you have this very

00:00:31,989 --> 00:00:38,200
sign up form ah let's talk it up this

00:00:36,610 --> 00:00:39,820
sign up form is for our dry this

00:00:38,200 --> 00:00:41,350
dinosaur which is basically grey sky

00:00:39,820 --> 00:00:45,580
because it doesn't have any style any

00:00:41,350 --> 00:00:48,640
cars anything and then somebody came to

00:00:45,580 --> 00:00:50,890
our our forum and edit some styles edit

00:00:48,640 --> 00:00:53,470
some classes and our dinosaur is now

00:00:50,890 --> 00:00:55,510
very nice card but whatever in the

00:00:53,470 --> 00:00:58,000
meantime somebody could be pasted our

00:00:55,510 --> 00:01:01,270
signup form and created sign in form and

00:00:58,000 --> 00:01:03,610
so we end up with two dinosaurs and

00:01:01,270 --> 00:01:06,040
those two dinosaurs were very very

00:01:03,610 --> 00:01:07,930
different and this is something which is

00:01:06,040 --> 00:01:09,760
inconsistency in your application and

00:01:07,930 --> 00:01:11,860
it's horrible because sometimes you

00:01:09,760 --> 00:01:15,570
update something edit some for example

00:01:11,860 --> 00:01:18,460
but embedding whatever and it didn't

00:01:15,570 --> 00:01:21,760
it's not the same everywhere in the page

00:01:18,460 --> 00:01:26,290
so basically we need to somehow extract

00:01:21,760 --> 00:01:28,299
the small parts and by this extraction

00:01:26,290 --> 00:01:32,740
is very easy because we are able to find

00:01:28,299 --> 00:01:34,930
out the small components and then we are

00:01:32,740 --> 00:01:37,720
able to compose them in higher order

00:01:34,930 --> 00:01:41,020
components or in a bigger component easy

00:01:37,720 --> 00:01:42,850
and when somebody just stall them it's

00:01:41,020 --> 00:01:45,280
not so big deal because you will end up

00:01:42,850 --> 00:01:47,590
with scored components and then you will

00:01:45,280 --> 00:01:49,350
end up with both two dinosaurs which are

00:01:47,590 --> 00:01:51,850
basically exactly the same with

00:01:49,350 --> 00:01:55,000
different functionality but it's look

00:01:51,850 --> 00:01:58,360
same but main problem with this approach

00:01:55,000 --> 00:01:59,950
is that you will end up with lots lots

00:01:58,360 --> 00:02:01,119
of components basically in our

00:01:59,950 --> 00:02:04,299
application one of our production

00:02:01,119 --> 00:02:06,250
application we have like 125 components

00:02:04,299 --> 00:02:10,509
which are just like building blocks of

00:02:06,250 --> 00:02:13,090
our application and for developer to

00:02:10,509 --> 00:02:14,590
recognize which function or sorry which

00:02:13,090 --> 00:02:16,630
component you would like to use

00:02:14,590 --> 00:02:19,580
somewhere into application it

00:02:16,630 --> 00:02:22,520
it's kind not so good so you need to

00:02:19,580 --> 00:02:24,530
find out how to deliver to develop a

00:02:22,520 --> 00:02:26,780
developer those components so you need

00:02:24,530 --> 00:02:29,240
to find out how to write some style

00:02:26,780 --> 00:02:31,550
guide or some playground where you are

00:02:29,240 --> 00:02:33,040
able to show possibilities of those

00:02:31,550 --> 00:02:35,600
components which you already have in

00:02:33,040 --> 00:02:37,700
application so you will not end up with

00:02:35,600 --> 00:02:39,680
duplicating your own work again and

00:02:37,700 --> 00:02:45,040
again so you want to end up with two

00:02:39,680 --> 00:02:48,440
buttons for example and it's funny 2015

00:02:45,040 --> 00:02:51,680
last year here we started to work on

00:02:48,440 --> 00:02:54,080
some prototype and we built brew kit

00:02:51,680 --> 00:02:57,650
which we firstly introduced in our

00:02:54,080 --> 00:03:01,940
meetup like five months ago and Brooklyn

00:02:57,650 --> 00:03:05,870
is a very simple component which is

00:03:01,940 --> 00:03:08,000
using some god task wishes doing a SD

00:03:05,870 --> 00:03:09,590
transformational around 2 euro / or

00:03:08,000 --> 00:03:11,900
components which we have in the project

00:03:09,590 --> 00:03:15,350
and it generally basically all the

00:03:11,900 --> 00:03:19,970
components in very unified view where

00:03:15,350 --> 00:03:22,640
you are able to find out which props the

00:03:19,970 --> 00:03:26,150
component has you are able to play with

00:03:22,640 --> 00:03:28,970
the with the props and you are able to

00:03:26,150 --> 00:03:33,049
see all the variants for a given probe

00:03:28,970 --> 00:03:35,260
for example so this will help you to

00:03:33,049 --> 00:03:38,390
find out edge cases of the components

00:03:35,260 --> 00:03:41,570
styling and other parts you are able to

00:03:38,390 --> 00:03:43,430
play with the component because we think

00:03:41,570 --> 00:03:45,590
about how we are using our components in

00:03:43,430 --> 00:03:48,140
normal relax applications so for example

00:03:45,590 --> 00:03:50,810
when you have unchanged and value in the

00:03:48,140 --> 00:03:53,540
same component as the props you mostly

00:03:50,810 --> 00:03:56,150
use unchanged as changing the value in

00:03:53,540 --> 00:03:58,040
the in the in the prop so when you call

00:03:56,150 --> 00:03:59,840
the unchanged it will update the value

00:03:58,040 --> 00:04:06,019
which is given to your component in the

00:03:59,840 --> 00:04:09,049
preview and how we use it in normal life

00:04:06,019 --> 00:04:12,530
we are using it mostly for the designers

00:04:09,049 --> 00:04:14,870
so they are able to tell us hey this

00:04:12,530 --> 00:04:16,250
component doesn't look so good and the

00:04:14,870 --> 00:04:18,260
second thing is when we are designing

00:04:16,250 --> 00:04:22,040
the components we are always thinking

00:04:18,260 --> 00:04:24,740
about exactly only one component so we

00:04:22,040 --> 00:04:28,160
are able to say hey this component will

00:04:24,740 --> 00:04:29,520
have this API and so this component is

00:04:28,160 --> 00:04:32,970
more testable

00:04:29,520 --> 00:04:34,560
it's allow us to play with it all

00:04:32,970 --> 00:04:38,669
together when you are developing

00:04:34,560 --> 00:04:40,680
basically so on the right side I have

00:04:38,669 --> 00:04:42,810
editor on left side I have blue kids and

00:04:40,680 --> 00:04:46,020
it's helping me for example of an eye at

00:04:42,810 --> 00:04:48,000
a new color and save the file is

00:04:46,020 --> 00:04:51,120
automatically creating new variant so I

00:04:48,000 --> 00:04:53,310
can see how it's working I can say hey I

00:04:51,120 --> 00:04:57,090
don't want a simple button but i will

00:04:53,310 --> 00:05:03,000
dryer active and for example here i will

00:04:57,090 --> 00:05:08,599
change hi hello or i can change it to

00:05:03,000 --> 00:05:08,599

YouTube URL: https://www.youtube.com/watch?v=Dqq1p9aIPQQ


