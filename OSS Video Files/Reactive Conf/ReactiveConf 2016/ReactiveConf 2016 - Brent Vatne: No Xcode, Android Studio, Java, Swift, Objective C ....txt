Title: ReactiveConf 2016 - Brent Vatne: No Xcode, Android Studio, Java, Swift, Objective C ...
Publication date: 2016-11-24
Playlist: ReactiveConf 2016
Description: 
	https://reactiveconf.com 

Meet those driving the change! World-renowned mobile and web innovators got together for three days in one town.

ReactiveConf, October 26 - 28 2016, Bratislava, Slovakia

---

React Native is a flexible & pragmatic tool that lets you mix JavaScript and native code with minimal friction. But for some large subset of apps, there is no need for any app-specific native code, as long as a rich library of native APIs are exposed. If we are explicit about constraining our environment to only JavaScript, our apps gain some very useful properties. Just look at how easy it is to throw together a simple app and share it on the web. Let’s look at how far just JavaScript can get us with mobile apps, building on top of React Native.

---

Have you heard about ReactiveConf? According to tech superstars such as David Nolen, Richard Feldman, or Brent Vatne, it’s the best conference on web and mobile app development! It focuses on all things React and beyond and takes place annually in Bratislava, Slovakia.

In 2016, more than 700 attendees from all over the world spent three days in Bratislava getting inspired, sharing amazing new ideas, and meeting more than 30 awesome speakers from companies such as Google, Cognitect, NoRedInk, RethinkDB, Airbnb, Microsoft, Facebook, and the list could go on forever.

If you want to be part of the next event, get your tickets now at https://reactiveconf.com, and React with us!
Captions: 
	00:00:05,740 --> 00:00:12,019
okay we're trying TV show or something

00:00:08,149 --> 00:00:13,879
yeah just this just a show so um you're

00:00:12,019 --> 00:00:15,730
like working here that's cool only for a

00:00:13,879 --> 00:00:18,260
little while I'm opening my own business

00:00:15,730 --> 00:00:20,210
actually I should talk to you about it

00:00:18,260 --> 00:00:23,419
I'm looking for smart people like you

00:00:20,210 --> 00:00:26,779
large I should get your number yeah

00:00:23,419 --> 00:00:29,630
definitely Abby Cadabby cool I'd like to

00:00:26,779 --> 00:00:32,710
talk to you both about a good

00:00:29,630 --> 00:00:35,780
opportunity for you and your loved ones

00:00:32,710 --> 00:00:37,370
we all have dreams I know I do

00:00:35,780 --> 00:00:39,200
I'd like to talk to you about an

00:00:37,370 --> 00:00:41,540
exciting opportunity that people are

00:00:39,200 --> 00:00:43,880
talking about we're gonna get going

00:00:41,540 --> 00:00:45,380
okay it was good to see you call hey I

00:00:43,880 --> 00:00:46,790
should get your number yeah definitely

00:00:45,380 --> 00:00:49,360
well I'll call you because I think he

00:00:46,790 --> 00:00:52,280
has it in this book nice to meet you

00:00:49,360 --> 00:00:53,750
all right so the point of that is I

00:00:52,280 --> 00:00:55,550
think sometimes when people talk about

00:00:53,750 --> 00:00:57,440
their startup or open source project

00:00:55,550 --> 00:00:58,910
they sort of sound like that I really

00:00:57,440 --> 00:01:01,240
hope that I don't I'm gonna be talking

00:00:58,910 --> 00:01:04,939
about exponent a decent amount here so

00:01:01,240 --> 00:01:07,280
yeah I hope not so let's start right

00:01:04,939 --> 00:01:08,689
with that so exponent is a free and open

00:01:07,280 --> 00:01:11,960
source project that's built on top of

00:01:08,689 --> 00:01:14,650
react native and it's made by several of

00:01:11,960 --> 00:01:18,380
the core contributors to reactive itself

00:01:14,650 --> 00:01:20,390
exponent provides a native runtime so

00:01:18,380 --> 00:01:22,460
you only need to write JavaScript

00:01:20,390 --> 00:01:24,260
it makes the react native workflow more

00:01:22,460 --> 00:01:26,690
like the web workflow even more so than

00:01:24,260 --> 00:01:30,770
it already is they're like think it's

00:01:26,690 --> 00:01:32,690
sort of like rails 4 react native so

00:01:30,770 --> 00:01:36,320
like where did this come from what was

00:01:32,690 --> 00:01:38,600
what was the idea for it so what

00:01:36,320 --> 00:01:40,700
happened was exponent was founded by a

00:01:38,600 --> 00:01:42,080
guy named Charlie Cheever who was a

00:01:40,700 --> 00:01:44,510
co-founder of a company called Korah

00:01:42,080 --> 00:01:46,040
which is like a question/answer site and

00:01:44,510 --> 00:01:47,960
he was also an early Facebook employee

00:01:46,040 --> 00:01:50,240
and his co-founder was James

00:01:47,960 --> 00:01:53,060
idées who worked at Microsoft and Google

00:01:50,240 --> 00:01:55,909
and Facebook and then they they sort of

00:01:53,060 --> 00:01:57,560
went off on their own and and and

00:01:55,909 --> 00:02:00,110
decided they were going to look at the

00:01:57,560 --> 00:02:02,420
the problem with mobile development so

00:02:00,110 --> 00:02:05,240
Charlie when he was at Quora led the

00:02:02,420 --> 00:02:07,760
efforts for the development of the iOS

00:02:05,240 --> 00:02:09,470
and Android mobile apps and he just

00:02:07,760 --> 00:02:11,390
found it to be incredibly painful just

00:02:09,470 --> 00:02:15,040
like most people who have built mobile

00:02:11,390 --> 00:02:18,489
apps so

00:02:15,040 --> 00:02:19,840
when he left and he got James within me

00:02:18,489 --> 00:02:21,310
they were like okay we kind of asked

00:02:19,840 --> 00:02:23,140
this question like what's the ideal

00:02:21,310 --> 00:02:25,959
workflow or like what should this really

00:02:23,140 --> 00:02:28,540
look like to build native mobile apps on

00:02:25,959 --> 00:02:31,120
on both platforms so here are some of

00:02:28,540 --> 00:02:33,269
the sort of criteria so there's need to

00:02:31,120 --> 00:02:35,739
have a native platform components right

00:02:33,269 --> 00:02:38,319
so you need to use the the components

00:02:35,739 --> 00:02:40,599
that ship with the platform something

00:02:38,319 --> 00:02:43,799
that doesn't do this clearly is Cordova

00:02:40,599 --> 00:02:49,000
where you kind of recreate the

00:02:43,799 --> 00:02:50,920
components using HTML and CSS it should

00:02:49,000 --> 00:02:52,480
be all in one language so you shouldn't

00:02:50,920 --> 00:02:54,909
be writing Java on one platform and

00:02:52,480 --> 00:02:56,200
objective-c or Swift on another you

00:02:54,909 --> 00:03:01,120
should just use one language on both

00:02:56,200 --> 00:03:04,260
platforms and preferably also a the same

00:03:01,120 --> 00:03:07,090
sort of abstractions to build the UI

00:03:04,260 --> 00:03:09,099
should be able to share the code across

00:03:07,090 --> 00:03:10,690
platforms and so this might sound a lot

00:03:09,099 --> 00:03:13,150
like the previous point and it is very

00:03:10,690 --> 00:03:15,099
related but it's worth pointing out that

00:03:13,150 --> 00:03:16,659
something like xamarin although you're

00:03:15,099 --> 00:03:18,180
using c-sharp everywhere you actually

00:03:16,659 --> 00:03:21,220
don't really get that much code sharing

00:03:18,180 --> 00:03:23,790
so that's an important thing to

00:03:21,220 --> 00:03:23,790
distinguish there

00:03:24,449 --> 00:03:29,829
feather one is shared configuration

00:03:26,739 --> 00:03:31,780
across platforms so that might be

00:03:29,829 --> 00:03:35,650
something like locking the orientation

00:03:31,780 --> 00:03:39,069
or like the app icon or whatever various

00:03:35,650 --> 00:03:40,480
things like that another one there

00:03:39,069 --> 00:03:42,250
should be a single workflow so you

00:03:40,480 --> 00:03:43,449
shouldn't have to open up an IDE they

00:03:42,250 --> 00:03:46,900
build for one thing and then a different

00:03:43,449 --> 00:03:49,599
ID to build for another platform when

00:03:46,900 --> 00:03:50,799
you build your binary to ship it you

00:03:49,599 --> 00:03:53,139
should just do it in the same way for

00:03:50,799 --> 00:03:56,470
both platforms it should also be

00:03:53,139 --> 00:03:58,959
possible to make app for other platform

00:03:56,470 --> 00:04:00,819
using any of the major major operating

00:03:58,959 --> 00:04:06,280
systems so you should be able to on

00:04:00,819 --> 00:04:09,129
Linux build an iOS app for example there

00:04:06,280 --> 00:04:11,349
should be a comprehensive set of native

00:04:09,129 --> 00:04:14,470
API so you should have access to the

00:04:11,349 --> 00:04:16,060
hardware capabilities and everything

00:04:14,470 --> 00:04:18,039
that you can sort of do here I say from

00:04:16,060 --> 00:04:21,609
JavaScript but whatever the language is

00:04:18,039 --> 00:04:23,409
that you choose almost done this list so

00:04:21,609 --> 00:04:25,510
fast feedback that's another really

00:04:23,409 --> 00:04:27,400
important thing so you need to be able

00:04:25,510 --> 00:04:28,500
to have something like live reload or

00:04:27,400 --> 00:04:31,780
hot

00:04:28,500 --> 00:04:33,880
not the usual pick a change compile

00:04:31,780 --> 00:04:37,540
navigate there see what happens sort of

00:04:33,880 --> 00:04:41,890
loop another really important one is it

00:04:37,540 --> 00:04:44,080
should be URL based now I guess it

00:04:41,890 --> 00:04:46,510
doesn't necessarily have to be URL basis

00:04:44,080 --> 00:04:48,190
but the key thing here is that URLs are

00:04:46,510 --> 00:04:52,990
kind of the best system that we know of

00:04:48,190 --> 00:04:56,260
currently or sharing apps or documents

00:04:52,990 --> 00:04:59,050
in in a very easy way so you're all base

00:04:56,260 --> 00:05:02,080
is just sort of a simple employ to think

00:04:59,050 --> 00:05:03,940
about that should be instant deployment

00:05:02,080 --> 00:05:06,220
so we've been talking about code part

00:05:03,940 --> 00:05:07,480
ship it already that should just be a

00:05:06,220 --> 00:05:10,150
given right you shouldn't have to go

00:05:07,480 --> 00:05:12,070
through a publication process that's

00:05:10,150 --> 00:05:13,510
approved by a third party anytime you

00:05:12,070 --> 00:05:16,930
want to make a small bug fix in your app

00:05:13,510 --> 00:05:18,070
and lastly you should have escape

00:05:16,930 --> 00:05:20,530
hatches so if you don't have direct

00:05:18,070 --> 00:05:22,120
access to native api's but you're using

00:05:20,530 --> 00:05:23,890
some sort of layer that gives you

00:05:22,120 --> 00:05:27,430
compatibility on both platforms you

00:05:23,890 --> 00:05:29,440
should be able to say okay I am going to

00:05:27,430 --> 00:05:32,760
opt out of this at this point and I'm

00:05:29,440 --> 00:05:37,330
going to use the native api's directly

00:05:32,760 --> 00:05:39,400
so if we look at kind of a grid of how

00:05:37,330 --> 00:05:41,800
this compares when we look at react

00:05:39,400 --> 00:05:43,270
native and exponent and exponent

00:05:41,800 --> 00:05:47,640
obviously being built on top of react

00:05:43,270 --> 00:05:52,000
native and the web we could see that

00:05:47,640 --> 00:05:54,310
simply by just looking at the values

00:05:52,000 --> 00:05:56,410
that are there that web is a lot more

00:05:54,310 --> 00:05:57,850
similar with exponent than react native

00:05:56,410 --> 00:05:59,890
it leaves the cording to the evaluations

00:05:57,850 --> 00:06:02,290
that I've made here and so I'm going to

00:05:59,890 --> 00:06:05,410
now in the following slides kind of show

00:06:02,290 --> 00:06:09,130
you what exponent does to satisfy these

00:06:05,410 --> 00:06:12,340
kind of criteria so platform native UI I

00:06:09,130 --> 00:06:14,080
mean that once I think very clear right

00:06:12,340 --> 00:06:15,790
if it everybody knows about react native

00:06:14,080 --> 00:06:18,340
already that's something that's

00:06:15,790 --> 00:06:19,990
happening you can see that the platform

00:06:18,340 --> 00:06:23,190
made of you I am on the other side is

00:06:19,990 --> 00:06:27,220
like divs and h1 and stuff like that

00:06:23,190 --> 00:06:29,770
checkboxes it's text input so this is

00:06:27,220 --> 00:06:31,150
just our app that shows you the the

00:06:29,770 --> 00:06:33,720
platform components that are built into

00:06:31,150 --> 00:06:33,720
exponent

00:06:34,530 --> 00:06:39,330
one language and shared code across

00:06:36,569 --> 00:06:42,629
platforms this again is very similar to

00:06:39,330 --> 00:06:46,289
react native but a key distinction is

00:06:42,629 --> 00:06:48,210
that you aren't writing any native code

00:06:46,289 --> 00:06:49,740
and any native code that you write

00:06:48,210 --> 00:06:51,300
you're not going to be able to share

00:06:49,740 --> 00:06:52,740
across platforms unless you write it and

00:06:51,300 --> 00:06:56,460
see and then write some bindings and

00:06:52,740 --> 00:06:59,729
whatnot so numbers that are often cited

00:06:56,460 --> 00:07:01,169
of like we got 85% code reuse across

00:06:59,729 --> 00:07:03,000
platforms that's usually referring to

00:07:01,169 --> 00:07:04,710
like the JavaScript code reuse not

00:07:03,000 --> 00:07:07,169
necessarily the case the native code

00:07:04,710 --> 00:07:12,229
reads so we're using exponent you'll get

00:07:07,169 --> 00:07:16,590
a much higher actual like comprehensive

00:07:12,229 --> 00:07:18,569
code reuse hopefully number then what it

00:07:16,590 --> 00:07:20,460
would be if you were writing some native

00:07:18,569 --> 00:07:22,440
code on both platforms another one is

00:07:20,460 --> 00:07:24,330
the configuration of course the

00:07:22,440 --> 00:07:25,919
configuration files for iOS and Android

00:07:24,330 --> 00:07:29,279
very different and you can't share those

00:07:25,919 --> 00:07:35,460
and those are also not included in this

00:07:29,279 --> 00:07:37,590
number typically another thing is this

00:07:35,460 --> 00:07:39,810
is very similar like react native you

00:07:37,590 --> 00:07:40,919
can do this as well but it's quite nice

00:07:39,810 --> 00:07:45,560
when you're just working with the one

00:07:40,919 --> 00:07:47,370
language that like making another

00:07:45,560 --> 00:07:49,139
language that's like you compile the

00:07:47,370 --> 00:07:51,500
JavaScript language work on your

00:07:49,139 --> 00:07:54,029
platform it is a little bit easier than

00:07:51,500 --> 00:07:58,259
when it's sort of a wild west of

00:07:54,029 --> 00:08:00,839
installing and writing native api's left

00:07:58,259 --> 00:08:02,639
and right like most people have to deal

00:08:00,839 --> 00:08:05,190
with when they work on brownfield apps

00:08:02,639 --> 00:08:07,469
like what Leland I was going through so

00:08:05,190 --> 00:08:09,210
this is for example a closure script

00:08:07,469 --> 00:08:11,120
template so you can create a new closure

00:08:09,210 --> 00:08:13,319
script project just from line again

00:08:11,120 --> 00:08:15,089
there's a link on the bottom there to

00:08:13,319 --> 00:08:17,699
medium post about it you just say the

00:08:15,089 --> 00:08:19,889
line new exponent and then specify

00:08:17,699 --> 00:08:21,389
whether you want to use ohm or Rajon and

00:08:19,889 --> 00:08:26,490
it just creates the project in this

00:08:21,389 --> 00:08:27,900
works shared configuration what that

00:08:26,490 --> 00:08:30,300
looks like in exponent is you have this

00:08:27,900 --> 00:08:33,120
one configuration file it's just a JSON

00:08:30,300 --> 00:08:34,740
file so you can see in the video what's

00:08:33,120 --> 00:08:37,680
happening is I'm changing the loading

00:08:34,740 --> 00:08:42,620
icon' URL that we use for the app and it

00:08:37,680 --> 00:08:42,620
just updates go

00:08:44,720 --> 00:08:52,260
alright one workflow so rather than

00:08:48,959 --> 00:08:54,240
using Android studio or Xcode we have

00:08:52,260 --> 00:08:56,990
something called X PE which stands for

00:08:54,240 --> 00:08:59,610
exponent development environment

00:08:56,990 --> 00:09:02,970
important distinguishing feature I guess

00:08:59,610 --> 00:09:05,430
of XDA versus the other tools is that we

00:09:02,970 --> 00:09:07,890
don't actually try and integrate a like

00:09:05,430 --> 00:09:09,560
a code editor inside of there this just

00:09:07,890 --> 00:09:14,399
provides the tools that you need to

00:09:09,560 --> 00:09:18,720
create a new app log debug deploy things

00:09:14,399 --> 00:09:20,550
like that personally I use vim for

00:09:18,720 --> 00:09:22,920
everything and I don't like it when a

00:09:20,550 --> 00:09:24,589
certain platform imposes some

00:09:22,920 --> 00:09:26,490
requirement that I have to use their ID

00:09:24,589 --> 00:09:28,649
and I think a lot of people are pretty

00:09:26,490 --> 00:09:30,600
similar so within our company you know

00:09:28,649 --> 00:09:33,540
we have people who use nuclide blue spam

00:09:30,600 --> 00:09:35,940
use Emacs and you know Visual Studio

00:09:33,540 --> 00:09:38,850
code is also a great editor so there's a

00:09:35,940 --> 00:09:41,910
lot of stuff that I think people prefer

00:09:38,850 --> 00:09:43,830
to do rather than use Xcode or Android

00:09:41,910 --> 00:09:45,270
studio so what happened in this

00:09:43,830 --> 00:09:47,130
recording is just that I created a new

00:09:45,270 --> 00:09:50,070
project from a template I open it in the

00:09:47,130 --> 00:09:52,140
simulator XD just like downloaded the

00:09:50,070 --> 00:09:54,510
latest version of exponent started it up

00:09:52,140 --> 00:09:57,000
created a tunnel so this URL that you

00:09:54,510 --> 00:09:58,589
see in that bar there is actually a URL

00:09:57,000 --> 00:10:01,680
that anybody can access in the world

00:09:58,589 --> 00:10:03,029
cheese and rock to create a tunnel so

00:10:01,680 --> 00:10:04,980
it's super easy to share your project

00:10:03,029 --> 00:10:09,600
immediately within seconds anyone can

00:10:04,980 --> 00:10:10,920
access it ok so that app yeah sure let's

00:10:09,600 --> 00:10:13,649
say it looks great the template that's

00:10:10,920 --> 00:10:16,709
that's what we want so here I'm going to

00:10:13,649 --> 00:10:19,279
build the apk for submission to the Play

00:10:16,709 --> 00:10:22,290
Store so I just run ext build Android

00:10:19,279 --> 00:10:24,450
and that goes ahead and publishes the

00:10:22,290 --> 00:10:25,980
latest version of the app so that

00:10:24,450 --> 00:10:28,620
basically generates the JavaScript

00:10:25,980 --> 00:10:31,290
bundle which is the app in one minute

00:10:28,620 --> 00:10:36,240
I'd bundle JavaScript file I pushes it

00:10:31,290 --> 00:10:39,149
to our servers actually to s3 and at

00:10:36,240 --> 00:10:41,399
that point it starts a build on one of

00:10:39,149 --> 00:10:43,829
our build servers what happens when it's

00:10:41,399 --> 00:10:46,500
done is you get this URL that has the

00:10:43,829 --> 00:10:49,260
apk you can download that and you can

00:10:46,500 --> 00:10:52,680
test it out by just doing ADB install

00:10:49,260 --> 00:10:55,600
and so that will just install the app

00:10:52,680 --> 00:10:57,519
onto your phone like this

00:10:55,600 --> 00:11:00,160
and there you go you have a standalone

00:10:57,519 --> 00:11:02,230
app when you want to submit it to Play

00:11:00,160 --> 00:11:05,110
Store you can just go to the Play Store

00:11:02,230 --> 00:11:08,709
press upload apk drag it in and you're

00:11:05,110 --> 00:11:10,089
done so that's that's yeah pretty simple

00:11:08,709 --> 00:11:12,759
I mean it's the exact same process on

00:11:10,089 --> 00:11:14,139
iOS with the exception of in that last

00:11:12,759 --> 00:11:16,130
step obviously rather than going to the

00:11:14,139 --> 00:11:17,850
Play Store you go to the Apple App Store

00:11:16,130 --> 00:11:20,170
[Music]

00:11:17,850 --> 00:11:22,420
that's something that we ultimately want

00:11:20,170 --> 00:11:24,130
to also automate in the future so it

00:11:22,420 --> 00:11:25,389
would be the same deployment process we

00:11:24,130 --> 00:11:26,920
would just have to ask for slightly

00:11:25,389 --> 00:11:28,509
different metadata because the stores

00:11:26,920 --> 00:11:31,720
have slightly different requirements in

00:11:28,509 --> 00:11:33,600
that regard so okay once our app is live

00:11:31,720 --> 00:11:35,769
on the store we've you know we've heard

00:11:33,600 --> 00:11:38,259
talked about code push and whatnot so

00:11:35,769 --> 00:11:41,470
far so with exponent that's just built

00:11:38,259 --> 00:11:43,959
in right away so this app is live on the

00:11:41,470 --> 00:11:47,769
store I make a change I hit publish and

00:11:43,959 --> 00:11:55,360
then go into the app and I'll just close

00:11:47,769 --> 00:11:58,389
it and reopen it and once it loads then

00:11:55,360 --> 00:12:01,329
it has the update so this would go to

00:11:58,389 --> 00:12:02,500
anybody who has the app and it's really

00:12:01,329 --> 00:12:06,759
that simple for the workflow and it's

00:12:02,500 --> 00:12:09,269
the exact same on iOS and Android okay

00:12:06,759 --> 00:12:11,649
in terms of comprehensive native API so

00:12:09,269 --> 00:12:14,110
I've said so far right we only use

00:12:11,649 --> 00:12:16,089
JavaScript so obviously we need to have

00:12:14,110 --> 00:12:17,889
a lot of capabilities exposed to

00:12:16,089 --> 00:12:21,220
JavaScript on the web you have

00:12:17,889 --> 00:12:23,649
html5 api's like canvas and WebGL and

00:12:21,220 --> 00:12:26,050
web audio and you know time like this is

00:12:23,649 --> 00:12:30,490
very rich set of API WebRTC is another

00:12:26,050 --> 00:12:33,790
one so you know if you if you can't just

00:12:30,490 --> 00:12:35,589
drop down and write native code there

00:12:33,790 --> 00:12:39,009
needs to be this very rich set of API is

00:12:35,589 --> 00:12:41,079
available so here are a few examples of

00:12:39,009 --> 00:12:42,819
some things that we built one is push

00:12:41,079 --> 00:12:46,990
notifications right very popular feature

00:12:42,819 --> 00:12:49,360
on mobile devices so here's sort of what

00:12:46,990 --> 00:12:51,670
that would look like using the app you

00:12:49,360 --> 00:12:53,740
grab the push token send it to your

00:12:51,670 --> 00:12:56,110
server and you save it so the code for

00:12:53,740 --> 00:12:57,459
that don't worry about the specifics

00:12:56,110 --> 00:12:59,740
essentially I just asked for the

00:12:57,459 --> 00:13:01,120
permission grab the token and then you

00:12:59,740 --> 00:13:04,449
send it to your server along with some

00:13:01,120 --> 00:13:07,779
user data the post requests so yeah all

00:13:04,449 --> 00:13:09,190
from JavaScript then when you want to

00:13:07,779 --> 00:13:11,260
actually send

00:13:09,190 --> 00:13:13,860
notification what you do is your

00:13:11,260 --> 00:13:16,570
back-end would do a post request to our

00:13:13,860 --> 00:13:18,130
notification back-end along with that

00:13:16,570 --> 00:13:20,320
token and the message and whatever data

00:13:18,130 --> 00:13:22,060
and we take care of doing all the rest

00:13:20,320 --> 00:13:25,450
of it you don't have to think about it

00:13:22,060 --> 00:13:27,580
and that just looks like this though we

00:13:25,450 --> 00:13:30,880
just have a few server SDK libraries

00:13:27,580 --> 00:13:33,250
that you can install and call Sam push

00:13:30,880 --> 00:13:37,150
notification push notification asing

00:13:33,250 --> 00:13:38,920
this of course a big part of question

00:13:37,150 --> 00:13:41,080
terrific ations is also handling the

00:13:38,920 --> 00:13:42,670
incoming pushes so when you receive it

00:13:41,080 --> 00:13:43,900
and you select it you want to respond to

00:13:42,670 --> 00:13:46,990
that somehow maybe you want to show a

00:13:43,900 --> 00:13:49,510
notification or something like that so

00:13:46,990 --> 00:13:52,300
in this case it's as simple as importing

00:13:49,510 --> 00:13:53,650
notifications API and then adding a

00:13:52,300 --> 00:13:55,210
listener to it and whenever a

00:13:53,650 --> 00:13:57,190
notification comes in you can respond to

00:13:55,210 --> 00:13:58,690
it in this way the origin will say if it

00:13:57,190 --> 00:14:00,700
was selected or if it was just received

00:13:58,690 --> 00:14:02,080
and then you can navigate to some part

00:14:00,700 --> 00:14:05,500
of your app where short alert or do

00:14:02,080 --> 00:14:08,140
whatever needed to do another one is a

00:14:05,500 --> 00:14:10,570
mic camera everybody likes to use camera

00:14:08,140 --> 00:14:13,990
and their apps somewhere barcode scanner

00:14:10,570 --> 00:14:15,220
was very highly requested so we've just

00:14:13,990 --> 00:14:18,400
implemented that it's coming out in the

00:14:15,220 --> 00:14:19,990
next release of exponent video right

00:14:18,400 --> 00:14:24,160
there as well

00:14:19,990 --> 00:14:26,920
Leland and Airbnb implemented a really

00:14:24,160 --> 00:14:28,330
great map view component and so that's

00:14:26,920 --> 00:14:31,750
just included an exponent by default

00:14:28,330 --> 00:14:32,920
which saves you I mean it's it doesn't

00:14:31,750 --> 00:14:34,510
take that long to install it might take

00:14:32,920 --> 00:14:36,880
you 10 or 15 minutes to get it running

00:14:34,510 --> 00:14:38,410
on iOS and Android with Lane react

00:14:36,880 --> 00:14:40,270
native but I mean that's 10 or 15

00:14:38,410 --> 00:14:44,430
minutes that you probably don't need to

00:14:40,270 --> 00:14:46,590
spend if you just use exponent for it

00:14:44,430 --> 00:14:50,410
another thing that we're working on is

00:14:46,590 --> 00:14:53,020
WebGL so we want to basically just get a

00:14:50,410 --> 00:14:55,720
spec compliant WebGL implementation and

00:14:53,020 --> 00:14:57,550
exponent our next release will include

00:14:55,720 --> 00:14:59,230
an experimental version of this as you

00:14:57,550 --> 00:15:01,120
can see it's embedded inside of just a

00:14:59,230 --> 00:15:05,980
regular scroll video each of these views

00:15:01,120 --> 00:15:07,810
has some fancy GL stuff just uses right

00:15:05,980 --> 00:15:09,040
you can use shaders like this probably a

00:15:07,810 --> 00:15:13,110
lot of you have no idea what that is

00:15:09,040 --> 00:15:13,110
we're on the same page I have no idea

00:15:13,830 --> 00:15:18,640
thankfully this also works with three

00:15:16,030 --> 00:15:21,970
j/s so you can do fancy stuff like that

00:15:18,640 --> 00:15:22,540
or I mean if you want a bunch of objects

00:15:21,970 --> 00:15:24,430
actually

00:15:22,540 --> 00:15:26,950
even this works a lot quicker on the

00:15:24,430 --> 00:15:28,780
device the recording was slower with

00:15:26,950 --> 00:15:31,210
anyways you try it out

00:15:28,780 --> 00:15:36,510
well like next week and what does that

00:15:31,210 --> 00:15:39,460
look like thankfully a lot more sing and

00:15:36,510 --> 00:15:41,230
native animations that's obviously

00:15:39,460 --> 00:15:42,670
another really important API this isn't

00:15:41,230 --> 00:15:44,140
something that's available on the web

00:15:42,670 --> 00:15:48,190
either the closest you have to that is

00:15:44,140 --> 00:15:49,540
like CSS animations so Christophe talked

00:15:48,190 --> 00:15:51,400
about this yesterday I'm not going to go

00:15:49,540 --> 00:15:52,930
into too much detail about it but you

00:15:51,400 --> 00:15:55,210
can really create a lot of effects using

00:15:52,930 --> 00:15:56,890
native animations we saw a little bit in

00:15:55,210 --> 00:15:59,650
Leland stock the shared element

00:15:56,890 --> 00:16:03,760
transitions this is actually implemented

00:15:59,650 --> 00:16:07,060
early in JavaScript and using the native

00:16:03,760 --> 00:16:10,570
animated module to the other transitions

00:16:07,060 --> 00:16:15,990
without pausing you jank and then on

00:16:10,570 --> 00:16:19,120
these sides here is a huge gallery so

00:16:15,990 --> 00:16:21,970
that's a animation we're animating the

00:16:19,120 --> 00:16:26,200
the scale of an image in response to a

00:16:21,970 --> 00:16:27,940
scroll event unfortunately the only

00:16:26,200 --> 00:16:30,190
gestures that we can actually perform

00:16:27,940 --> 00:16:33,280
Lee animate in response to see right now

00:16:30,190 --> 00:16:33,820
our gestures that come from a scroll

00:16:33,280 --> 00:16:36,340
view

00:16:33,820 --> 00:16:38,710
so again referring back to Christophe

00:16:36,340 --> 00:16:40,660
stock he's working on an improved

00:16:38,710 --> 00:16:43,510
gesture system which would allow you to

00:16:40,660 --> 00:16:46,300
then run any native animations in

00:16:43,510 --> 00:16:49,030
response to gestures currently what you

00:16:46,300 --> 00:16:50,260
have to do is unfortunately hopefully

00:16:49,030 --> 00:16:52,810
you all remember if not go back and

00:16:50,260 --> 00:16:56,650
watch the talk Paul back into JavaScript

00:16:52,810 --> 00:16:58,750
every time every time the frame tick bar

00:16:56,650 --> 00:17:00,730
is a new frame and get the new value

00:16:58,750 --> 00:17:06,100
update that value send it back to native

00:17:00,730 --> 00:17:07,959
and there's a bunch of api's like we can

00:17:06,100 --> 00:17:09,280
check out our documentation for that but

00:17:07,959 --> 00:17:12,520
of course there's still so many more to

00:17:09,280 --> 00:17:14,500
do I mean they the amount of native SDKs

00:17:12,520 --> 00:17:16,570
that existed it's crazy like the web has

00:17:14,500 --> 00:17:17,740
the huge set of api's as well we

00:17:16,570 --> 00:17:19,510
recognize this this is an ongoing

00:17:17,740 --> 00:17:23,070
project if anyone wants to contribute

00:17:19,510 --> 00:17:25,449
api's like definitely get in touch there

00:17:23,070 --> 00:17:28,270
there's a list of things that are on our

00:17:25,449 --> 00:17:32,710
radar at least that were looking into

00:17:28,270 --> 00:17:35,270
and/or currently building so going back

00:17:32,710 --> 00:17:36,890
to this

00:17:35,270 --> 00:17:40,070
there's a really important point here

00:17:36,890 --> 00:17:44,750
which is the escape hatches point the

00:17:40,070 --> 00:17:45,950
top right so react native you know I've

00:17:44,750 --> 00:17:47,360
been talking all this time about oh you

00:17:45,950 --> 00:17:49,940
do all this from JavaScript it's great

00:17:47,360 --> 00:17:51,559
but it is really really awesome with

00:17:49,940 --> 00:17:53,120
react native that as soon as you run

00:17:51,559 --> 00:17:56,210
into a problem you're like okay I'm just

00:17:53,120 --> 00:17:58,280
going to write this in Objective C or

00:17:56,210 --> 00:17:59,150
Java I mean it's as much as it sucks to

00:17:58,280 --> 00:18:03,080
have to do that

00:17:59,150 --> 00:18:05,299
it sometimes is a necessity and so

00:18:03,080 --> 00:18:07,250
basically you know how do we deal with

00:18:05,299 --> 00:18:10,280
that with exponent it's certainly the

00:18:07,250 --> 00:18:12,500
biggest trade-off that that you have

00:18:10,280 --> 00:18:15,230
when you choose to use exponent and in

00:18:12,500 --> 00:18:17,150
the short term it could be a problem you

00:18:15,230 --> 00:18:19,250
could contribute back and add the API to

00:18:17,150 --> 00:18:22,220
our client

00:18:19,250 --> 00:18:24,169
but what we're actually doing that

00:18:22,220 --> 00:18:26,120
hopefully within the next few months

00:18:24,169 --> 00:18:27,830
should be ready is we're working on

00:18:26,120 --> 00:18:31,190
something called exponent view which is

00:18:27,830 --> 00:18:33,230
a lot like great react app eject but a

00:18:31,190 --> 00:18:35,929
less sort of harsh version of that where

00:18:33,230 --> 00:18:38,210
rather than completely ejecting it's

00:18:35,929 --> 00:18:39,650
sort of like a soft eject so if you want

00:18:38,210 --> 00:18:41,540
to you can come back into exponent

00:18:39,650 --> 00:18:44,330
entirely and you don't lose out on all

00:18:41,540 --> 00:18:47,169
the benefits that you get from being an

00:18:44,330 --> 00:18:47,169
exponent in the first place

00:18:47,230 --> 00:18:55,400
so yeah saponin makes rails more like

00:18:50,780 --> 00:18:58,309
react native or strong it makes react

00:18:55,400 --> 00:19:00,230
native more like the web you think of it

00:18:58,309 --> 00:19:03,410
as like react native on Rails sort of

00:19:00,230 --> 00:19:05,450
it's free and open source I really

00:19:03,410 --> 00:19:08,030
recommend that you give it a try

00:19:05,450 --> 00:19:10,000
and one last thing I wanted to talk

00:19:08,030 --> 00:19:14,540
about is agent conference coming in

00:19:10,000 --> 00:19:16,460
January in dornberger Austria and Daniel

00:19:14,540 --> 00:19:17,720
rudder is here right there so if you

00:19:16,460 --> 00:19:19,370
want to talk to him about it he's an

00:19:17,720 --> 00:19:21,620
organizer and I mentioned that because

00:19:19,370 --> 00:19:24,860
there's an extra motivation attached to

00:19:21,620 --> 00:19:27,350
it where the other organizer just told

00:19:24,860 --> 00:19:30,890
me right now that he's saying he'll give

00:19:27,350 --> 00:19:33,470
two VIP tickets to attendees at this

00:19:30,890 --> 00:19:35,900
conference all you need to do is create

00:19:33,470 --> 00:19:38,720
something in an exponent send it to me

00:19:35,900 --> 00:19:40,280
by next Friday I'll just pick my two

00:19:38,720 --> 00:19:44,179
favorite ones sorry heavily biased

00:19:40,280 --> 00:19:46,460
process but the the my two favorites

00:19:44,179 --> 00:19:48,290
will get VIP tickets which means

00:19:46,460 --> 00:19:50,300
can go skiing you get your ski pass

00:19:48,290 --> 00:19:52,310
covered in one of the best resorts in

00:19:50,300 --> 00:19:53,120
the world in Austria and go to a

00:19:52,310 --> 00:19:54,410
conference we're talking about

00:19:53,120 --> 00:19:57,320
JavaScript and all sorts of fun things

00:19:54,410 --> 00:20:01,250
so yeah you needed some more motivation

00:19:57,320 --> 00:20:04,310
you try that out also a bunch of other

00:20:01,250 --> 00:20:06,410
cool conferences so yeah I was gonna end

00:20:04,310 --> 00:20:08,420
it there but it looks like I still have

00:20:06,410 --> 00:20:09,680
a little bit of time so I want to talk

00:20:08,420 --> 00:20:10,390
about some other exciting things to look

00:20:09,680 --> 00:20:14,000
forward to

00:20:10,390 --> 00:20:15,170
so react fiber is really awesome if you

00:20:14,000 --> 00:20:16,970
use react and you haven't looked into

00:20:15,170 --> 00:20:19,100
that yet I mean it's totally

00:20:16,970 --> 00:20:22,070
experimental at this point it's far from

00:20:19,100 --> 00:20:25,570
being complete as you can see from is

00:20:22,070 --> 00:20:28,820
fiber ready yet calm clearly it's not

00:20:25,570 --> 00:20:30,880
but that bar at the top shows the number

00:20:28,820 --> 00:20:33,920
of unit tests that are currently passing

00:20:30,880 --> 00:20:36,410
so fiber is really exciting because it

00:20:33,920 --> 00:20:39,520
allows you to AHS reconciliation on

00:20:36,410 --> 00:20:41,660
parts of the tree and potentially

00:20:39,520 --> 00:20:43,910
prioritize certain things like an

00:20:41,660 --> 00:20:45,650
animation is occurring to make sure that

00:20:43,910 --> 00:20:48,050
that is able to be updated on every

00:20:45,650 --> 00:20:49,790
frame or that you're able to respond to

00:20:48,050 --> 00:20:52,450
a gesture immediately and that doesn't

00:20:49,790 --> 00:20:55,130
get blocked due to the synchronous

00:20:52,450 --> 00:20:56,570
reconciliation process another thing

00:20:55,130 --> 00:20:58,700
that's I think is really exciting to

00:20:56,570 --> 00:21:00,560
look forward to is web workers are

00:20:58,700 --> 00:21:02,390
partially implemented on react native

00:21:00,560 --> 00:21:06,740
for Android but I think it's an area

00:21:02,390 --> 00:21:08,810
that has a lot of potential so one of

00:21:06,740 --> 00:21:10,880
Ryan's co-workers at Microsoft actually

00:21:08,810 --> 00:21:12,170
got react running inside of a web worker

00:21:10,880 --> 00:21:13,490
I think that's really neat but there's

00:21:12,170 --> 00:21:17,630
also a lot of other stuff that you can

00:21:13,490 --> 00:21:18,920
do with it like for example with the

00:21:17,630 --> 00:21:21,410
barcode scanner that we have right now

00:21:18,920 --> 00:21:23,120
that is currently just implemented

00:21:21,410 --> 00:21:24,320
natively but there's no reason why if

00:21:23,120 --> 00:21:27,680
you didn't have the correct primitives

00:21:24,320 --> 00:21:29,450
that you couldn't send over or hopefully

00:21:27,680 --> 00:21:32,000
not have to serialize all the image data

00:21:29,450 --> 00:21:35,150
but somehow communicate the image data

00:21:32,000 --> 00:21:37,640
from the camera to a web worker have the

00:21:35,150 --> 00:21:41,530
web worker do some sort of processing on

00:21:37,640 --> 00:21:43,520
it and find match you know whatever

00:21:41,530 --> 00:21:45,350
pattern you're looking for in that image

00:21:43,520 --> 00:21:46,760
whether like snap code kind of thing or

00:21:45,350 --> 00:21:48,380
something like that I think there's just

00:21:46,760 --> 00:21:51,350
a lot of a lot of different areas where

00:21:48,380 --> 00:21:53,510
web workers would be really useful as we

00:21:51,350 --> 00:21:55,340
kind of sometimes need concept of

00:21:53,510 --> 00:21:56,740
threading so that's basically all I

00:21:55,340 --> 00:22:05,260
wanted to talk about

00:21:56,740 --> 00:22:08,010
oh yeah thank you awesome thank you very

00:22:05,260 --> 00:22:12,250
much let's look at the questions and

00:22:08,010 --> 00:22:15,040
we're back okay oh cool okay what do you

00:22:12,250 --> 00:22:16,330
think about the deco IDE for react

00:22:15,040 --> 00:22:16,750
native development I think it's really

00:22:16,330 --> 00:22:18,700
awesome

00:22:16,750 --> 00:22:20,620
they actually have also done some work

00:22:18,700 --> 00:22:21,550
with Airbnb some really cool stuff that

00:22:20,620 --> 00:22:23,590
I don't think they're talking about

00:22:21,550 --> 00:22:25,300
publicly yet but keep an eye open for

00:22:23,590 --> 00:22:26,440
some of that maybe Leyland will talk to

00:22:25,300 --> 00:22:30,190
you about it I don't think it's my place

00:22:26,440 --> 00:22:31,929
to discuss it but they are working on it

00:22:30,190 --> 00:22:34,120
a lot and making tons of improvements

00:22:31,929 --> 00:22:35,070
I'm really excited for I think what that

00:22:34,120 --> 00:22:38,530
could be

00:22:35,070 --> 00:22:41,110
personally I don't build apps using like

00:22:38,530 --> 00:22:44,920
visual tools like that but I do see how

00:22:41,110 --> 00:22:48,250
I think that code could be kind of an

00:22:44,920 --> 00:22:50,679
exception to that in that it it isn't

00:22:48,250 --> 00:22:52,450
focused on like drag-and-drop components

00:22:50,679 --> 00:22:54,220
into your app where you move it around

00:22:52,450 --> 00:22:57,490
and manipulate everything visually but

00:22:54,220 --> 00:22:59,530
it's a combination of code and seeing

00:22:57,490 --> 00:23:01,480
the changes as they happen and being

00:22:59,530 --> 00:23:05,500
able to sort of intelligently analyze

00:23:01,480 --> 00:23:08,380
your code and make changes that yeah you

00:23:05,500 --> 00:23:09,580
can see reflected right away so yeah I'm

00:23:08,380 --> 00:23:12,190
actually doing a workshop that react

00:23:09,580 --> 00:23:14,830
Europe with Devon who's one of their

00:23:12,190 --> 00:23:22,330
creators of deco so check that out if

00:23:14,830 --> 00:23:24,550
you want to give as well one feature one

00:23:22,330 --> 00:23:27,940
engineer but the team of 10 engineers

00:23:24,550 --> 00:23:32,650
for a framework I don't know what that

00:23:27,940 --> 00:23:34,000
means if some whoever asks that question

00:23:32,650 --> 00:23:35,740
you want to clarify I'm happy to answer

00:23:34,000 --> 00:23:39,070
or try to answer I just have no idea

00:23:35,740 --> 00:23:42,309
what it means okay you can post it again

00:23:39,070 --> 00:23:44,170
but maybe put it more yeah why not

00:23:42,309 --> 00:23:49,900
Sinatra for react native I guess because

00:23:44,170 --> 00:23:51,610
that's just react native so yeah are

00:23:49,900 --> 00:23:53,860
there any big scaled apps that use

00:23:51,610 --> 00:23:55,780
exponent today there's one I would say

00:23:53,860 --> 00:23:58,840
the largest one that uses exponent right

00:23:55,780 --> 00:24:01,420
now is an app called list I spoke about

00:23:58,840 --> 00:24:03,340
of that react Europe so if you want to

00:24:01,420 --> 00:24:04,540
check out that talk I go into detail

00:24:03,340 --> 00:24:07,900
about some of the challenges that we had

00:24:04,540 --> 00:24:10,000
in it it is a medium scale app it was

00:24:07,900 --> 00:24:13,780
featured on the Google Play so

00:24:10,000 --> 00:24:16,510
we partnered with I don't know if anyone

00:24:13,780 --> 00:24:19,030
watches the office but there's a really

00:24:16,510 --> 00:24:21,789
funny guy Brian from the office is BJ

00:24:19,030 --> 00:24:24,340
Novak it's his sort of company and so we

00:24:21,789 --> 00:24:26,169
got some nice promotion through various

00:24:24,340 --> 00:24:27,700
talk shows that was brought a lot of

00:24:26,169 --> 00:24:29,620
traffic through it and it has a decent

00:24:27,700 --> 00:24:31,960
amount of traction so definitely check

00:24:29,620 --> 00:24:34,360
that out we we only did the Android app

00:24:31,960 --> 00:24:36,700
for that and so we built that for them

00:24:34,360 --> 00:24:39,070
as a way to drive exponent forward and

00:24:36,700 --> 00:24:40,270
then hand it off to them so for more

00:24:39,070 --> 00:24:42,880
information about I just check out the

00:24:40,270 --> 00:24:48,520
react native talk or react Europe rather

00:24:42,880 --> 00:24:55,120
about that does exponents all the async

00:24:48,520 --> 00:24:56,470
interactions bombing so like I guess the

00:24:55,120 --> 00:24:59,260
async interaction problem was

00:24:56,470 --> 00:25:00,789
specifically the I mean there are a lot

00:24:59,260 --> 00:25:02,950
of things that he mentioned in terms of

00:25:00,789 --> 00:25:04,270
async interactions right there where was

00:25:02,950 --> 00:25:07,210
like the portrait and landscape

00:25:04,270 --> 00:25:12,309
orientation there was gestures

00:25:07,210 --> 00:25:14,470
animations so animations yes gestures I

00:25:12,309 --> 00:25:16,539
mean nobody has a solution for that yet

00:25:14,470 --> 00:25:19,299
we hope to adopt what Christophe is

00:25:16,539 --> 00:25:21,429
working on we actually hired Christophe

00:25:19,299 --> 00:25:23,020
originally as a contractor to help us

00:25:21,429 --> 00:25:24,880
build out the native animation stuff and

00:25:23,020 --> 00:25:26,890
we'd be happy to do the same Christophe

00:25:24,880 --> 00:25:29,200
you're listening as I've told you really

00:25:26,890 --> 00:25:33,429
over the last few days for the gesture

00:25:29,200 --> 00:25:34,780
stuff so hopefully you know where we

00:25:33,429 --> 00:25:36,400
want to make it really easy to build

00:25:34,780 --> 00:25:37,690
these apps and it's something that would

00:25:36,400 --> 00:25:40,600
be upstream and react native though

00:25:37,690 --> 00:25:43,380
ultimately so if if it does then it

00:25:40,600 --> 00:25:46,030
would be part of react native as well

00:25:43,380 --> 00:25:50,080
how do you sign an Apple app without

00:25:46,030 --> 00:25:52,330
Xcode you have to login to your Apple

00:25:50,080 --> 00:25:55,960
Developer account and then it rates the

00:25:52,330 --> 00:26:01,059
appropriate stuff for you we download

00:25:55,960 --> 00:26:03,070
that and then we build what about the

00:26:01,059 --> 00:26:06,610
logs how difficult is it to follow the

00:26:03,070 --> 00:26:10,929
errors I assume this means okay I guess

00:26:06,610 --> 00:26:12,220
it's probably develop and it's the same

00:26:10,929 --> 00:26:13,510
as react native

00:26:12,220 --> 00:26:16,179
[Music]

00:26:13,510 --> 00:26:17,830
I mean it really depends I mean react

00:26:16,179 --> 00:26:20,710
it's not always great for errors

00:26:17,830 --> 00:26:22,780
especially when you're using promises

00:26:20,710 --> 00:26:24,700
and I think that's been discussed quite

00:26:22,780 --> 00:26:27,490
a bit already you know it's very easy

00:26:24,700 --> 00:26:29,410
for promises to just have their errors

00:26:27,490 --> 00:26:31,179
be swallowed somewhere and you have no

00:26:29,410 --> 00:26:34,660
idea where it came from

00:26:31,179 --> 00:26:36,429
so yeah if you if you're careful if you

00:26:34,660 --> 00:26:39,549
build I mean wouldn't be much different

00:26:36,429 --> 00:26:42,600
from the web essentially in reusing rags

00:26:39,549 --> 00:26:42,600
there as well

00:26:42,850 --> 00:26:49,720
can you handle background notifications

00:26:45,960 --> 00:26:53,230
um I think that's a push notification

00:26:49,720 --> 00:26:54,880
I'm not familiar with um do you want to

00:26:53,230 --> 00:26:59,890
ask that again and clarify it I'd be

00:26:54,880 --> 00:27:02,860
happy to answer that Oh Meg you've shown

00:26:59,890 --> 00:27:04,490
lots of slick UX patterns on screen oh I

00:27:02,860 --> 00:27:06,370
do on screen yeah

00:27:04,490 --> 00:27:08,290
[Music]

00:27:06,370 --> 00:27:10,900
are they available anywhere for

00:27:08,290 --> 00:27:14,740
reference yeah most of them are either

00:27:10,900 --> 00:27:16,809
on the exponent gist github account or

00:27:14,740 --> 00:27:22,510
on my personal one which is Brent Patton

00:27:16,809 --> 00:27:24,370
he come find me later and I can show you

00:27:22,510 --> 00:27:26,020
the specific repos that correspond to

00:27:24,370 --> 00:27:28,720
that but we you know we're open source

00:27:26,020 --> 00:27:29,950
company if something is an open source

00:27:28,720 --> 00:27:33,730
from there yet I'd be happy just open

00:27:29,950 --> 00:27:35,020
source it for you and give you so push

00:27:33,730 --> 00:27:36,790
notifications are sent through your

00:27:35,020 --> 00:27:40,510
servers yes they are sent through our

00:27:36,790 --> 00:27:42,160
servers sounds like a lot of work if you

00:27:40,510 --> 00:27:44,230
need component that don't exist in

00:27:42,160 --> 00:27:47,830
component burn exponent how do you solve

00:27:44,230 --> 00:27:49,330
that so as I was saying here the end we

00:27:47,830 --> 00:27:52,090
have this idea of an exponent view where

00:27:49,330 --> 00:27:54,910
you can sort of partially eject from

00:27:52,090 --> 00:27:56,200
exponent and then essentially you can

00:27:54,910 --> 00:27:57,790
think of exponent view at least the

00:27:56,200 --> 00:27:59,620
concept that we have right now I mean

00:27:57,790 --> 00:28:01,270
this isn't completely implemented right

00:27:59,620 --> 00:28:03,190
it's a work in progress but the idea

00:28:01,270 --> 00:28:05,169
would be like it's like a UI webview

00:28:03,190 --> 00:28:06,580
kind of thing but rather than that you

00:28:05,169 --> 00:28:08,500
have this exponent view where you have

00:28:06,580 --> 00:28:10,750
your react native view inside and then

00:28:08,500 --> 00:28:13,030
you can write any react native modules

00:28:10,750 --> 00:28:16,120
and those will just be pulled in and so

00:28:13,030 --> 00:28:19,120
it should hopefully be quite easy once

00:28:16,120 --> 00:28:21,429
that is available unfortunately you

00:28:19,120 --> 00:28:22,780
won't be able to use our build system in

00:28:21,429 --> 00:28:25,950
that case so you couldn't use the XP

00:28:22,780 --> 00:28:25,950
build iOS or Android

00:28:27,759 --> 00:28:34,989
we'll exponent work with old Mobile's so

00:28:31,029 --> 00:28:37,029
react native I believe supports 4.1 and

00:28:34,989 --> 00:28:40,929
higher for Android basically anything

00:28:37,029 --> 00:28:43,509
that has the choreographer API exponent

00:28:40,929 --> 00:28:45,849
supports slightly newer versions only I

00:28:43,509 --> 00:28:48,070
believe we're 4.4 and higher we just

00:28:45,849 --> 00:28:51,669
have some different requirements so it

00:28:48,070 --> 00:28:54,399
only goes that low iOS I believe react

00:28:51,669 --> 00:28:56,559
native only sports iOS 8 and higher now

00:28:54,399 --> 00:28:58,659
so we would be the same there as well I

00:28:56,559 --> 00:29:02,109
mean that said the update cadence for

00:28:58,659 --> 00:29:03,190
iOS once iOS 10 is released like I felt

00:29:02,109 --> 00:29:04,570
like I didn't even have a choice I just

00:29:03,190 --> 00:29:07,059
woke up one morning and I always tended

00:29:04,570 --> 00:29:08,379
my phone because I was like stop asking

00:29:07,059 --> 00:29:11,109
me to upgrade and that actually only

00:29:08,379 --> 00:29:14,249
press the wrong button somehow and my

00:29:11,109 --> 00:29:16,599
battery kept dying all the time now yeah

00:29:14,249 --> 00:29:18,339
well I think I exhausted the questions

00:29:16,599 --> 00:29:20,729
very great thank you very much friend

00:29:18,339 --> 00:29:20,729

YouTube URL: https://www.youtube.com/watch?v=kpeoddFXWfc


