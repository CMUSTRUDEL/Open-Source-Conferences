Title: Pyramids Be Gone | Thomas Parslow | ReactiveConf2015
Publication date: 2017-06-29
Playlist: ReactiveConf 2015
Description: 
	I created this video with the YouTube Video Editor (https://www.youtube.com/editor)
Captions: 
	00:00:04,490 --> 00:00:12,740
hi yeah I'm Tom Parslow tell you about

00:00:08,740 --> 00:00:19,039
new syntax coming in JavaScript soonish

00:00:12,740 --> 00:00:23,150
in probably in es7 up here okay sorry so

00:00:19,039 --> 00:00:25,910
first a bit of JavaScript it's where

00:00:23,150 --> 00:00:28,099
we're loading something probably from a

00:00:25,910 --> 00:00:30,560
file like through web request or

00:00:28,099 --> 00:00:31,849
something we're then taking the result

00:00:30,560 --> 00:00:32,930
of that loading something else when the

00:00:31,849 --> 00:00:35,660
second result of that loading something

00:00:32,930 --> 00:00:38,030
else that's all nice and simple and

00:00:35,660 --> 00:00:41,089
straightforward but the problem is we

00:00:38,030 --> 00:00:43,100
can't like that because those are

00:00:41,089 --> 00:00:45,229
synchronous operations and this will

00:00:43,100 --> 00:00:48,110
only work with synchronous it's tough so

00:00:45,229 --> 00:00:51,710
this is synchronous code so what do we

00:00:48,110 --> 00:00:57,320
do we transform it into a callback

00:00:51,710 --> 00:00:59,449
version so that's doing the same

00:00:57,320 --> 00:01:01,790
logically that's the same thing except

00:00:59,449 --> 00:01:04,909
now it's a synchronous and it's just got

00:01:01,790 --> 00:01:08,869
a lot of extra noise we have to pass

00:01:04,909 --> 00:01:11,149
errors back up what manually that kind

00:01:08,869 --> 00:01:16,520
of stuff and we've got an inverted

00:01:11,149 --> 00:01:20,719
pyramid oh no some indentation so yeah

00:01:16,520 --> 00:01:23,090
we might replace that with some promises

00:01:20,719 --> 00:01:24,530
based code and that I think's a little

00:01:23,090 --> 00:01:27,530
better it's not always it's got problems

00:01:24,530 --> 00:01:31,270
but yeah we get rid of some of that

00:01:27,530 --> 00:01:33,770
indentation we can we don't need to

00:01:31,270 --> 00:01:37,939
manually handle the error at every

00:01:33,770 --> 00:01:39,740
single step but there's still a fair

00:01:37,939 --> 00:01:45,469
amount sort of extra stuff going on

00:01:39,740 --> 00:01:49,579
there and yeah when we when things are

00:01:45,469 --> 00:01:50,780
complicated you know things break and I

00:01:49,579 --> 00:01:56,149
just wanted to put that give in i really

00:01:50,780 --> 00:01:59,780
like that gif so coming back to the

00:01:56,149 --> 00:02:01,130
original codes it's nice i mean like

00:01:59,780 --> 00:02:04,639
wouldn't it be nice if we could just

00:02:01,130 --> 00:02:06,979
write that and with the with the new

00:02:04,639 --> 00:02:11,770
async await syntax coming we pretty much

00:02:06,979 --> 00:02:15,260
can so you can add a few extra key words

00:02:11,770 --> 00:02:16,860
the async keyword says that this is

00:02:15,260 --> 00:02:18,270
going to be on a synchronous function so

00:02:16,860 --> 00:02:21,600
it's going to not return immediately

00:02:18,270 --> 00:02:22,980
it's going to return but it's going to

00:02:21,600 --> 00:02:26,220
have sort of a synchronous stuff within

00:02:22,980 --> 00:02:28,020
it and then inside of each of those in

00:02:26,220 --> 00:02:32,070
front of each of those synchronous calls

00:02:28,020 --> 00:02:33,930
are we put an await keywords and this is

00:02:32,070 --> 00:02:35,670
all working with the same semantics as

00:02:33,930 --> 00:02:36,930
promises in fact it all is promises

00:02:35,670 --> 00:02:39,690
underneath then it interrupts with

00:02:36,930 --> 00:02:41,610
promises so these load jason functions

00:02:39,690 --> 00:02:42,810
they could be async functions written

00:02:41,610 --> 00:02:47,220
like this but it could also just be

00:02:42,810 --> 00:02:48,570
promise functions and likewise this

00:02:47,220 --> 00:02:50,100
function here that we're creating this

00:02:48,570 --> 00:02:53,700
first chapter title this is now

00:02:50,100 --> 00:02:55,110
returning a promise so we can use it

00:02:53,700 --> 00:02:56,820
from other codes that doesn't need to

00:02:55,110 --> 00:02:58,080
know doesn't need to be using out the

00:02:56,820 --> 00:03:01,530
other code that can be just using

00:02:58,080 --> 00:03:06,080
regular promise stuff we could also use

00:03:01,530 --> 00:03:09,600
it from another a sink a sinc function

00:03:06,080 --> 00:03:13,340
and forever handling so error handling

00:03:09,600 --> 00:03:16,650
is going to go into a promise fail state

00:03:13,340 --> 00:03:18,630
but we if we want to capture errors we

00:03:16,650 --> 00:03:20,310
can do that just using the try-catch

00:03:18,630 --> 00:03:23,190
thing just like we would with an

00:03:20,310 --> 00:03:25,260
exception in synchronous code and

00:03:23,190 --> 00:03:26,700
likewise if we want to return an error

00:03:25,260 --> 00:03:29,040
so if we want to make the promise that

00:03:26,700 --> 00:03:32,040
this function returns be in the error

00:03:29,040 --> 00:03:35,670
state then we can just throw an error

00:03:32,040 --> 00:03:36,900
and that becomes the error and the yeah

00:03:35,670 --> 00:03:41,790
and that becomes an error state to

00:03:36,900 --> 00:03:47,820
promise so browser support there isn't a

00:03:41,790 --> 00:03:51,090
yet but you know hopefully soon it sits

00:03:47,820 --> 00:03:53,459
in the xmas script spec so in the spec

00:03:51,090 --> 00:03:55,610
process and they're hoping it's going to

00:03:53,459 --> 00:04:00,239
get in there soon or get into browsers

00:03:55,610 --> 00:04:03,209
at some point maybe hopefully but i'm

00:04:00,239 --> 00:04:04,980
still then we have babel so i guess a

00:04:03,209 --> 00:04:08,430
lot you've been doing that for lots of

00:04:04,980 --> 00:04:10,320
other es6 features at the moment it also

00:04:08,430 --> 00:04:12,299
supports async await so you if you're

00:04:10,320 --> 00:04:14,970
using babel or if you are willing to use

00:04:12,299 --> 00:04:17,150
babel right now you can start using you

00:04:14,970 --> 00:04:20,900
can start using async await right away

00:04:17,150 --> 00:04:20,900

YouTube URL: https://www.youtube.com/watch?v=ir1yh3k_Gjk


