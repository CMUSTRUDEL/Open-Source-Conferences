Title: React Native and Raspberry Arduino | Christopher Dro | ReactiveConf 2015
Publication date: 2017-06-29
Playlist: ReactiveConf 2015
Description: 
	I created this video with the YouTube Video Editor (https://www.youtube.com/editor)
Captions: 
	00:00:05,710 --> 00:00:10,820
so yeah I'd like to show you guys

00:00:08,150 --> 00:00:13,969
on how we can use react to interact with

00:00:10,820 --> 00:00:16,580
hardware holding here is Arduino Uno

00:00:13,969 --> 00:00:19,970
board and connected to it is an LED bulb

00:00:16,580 --> 00:00:21,230
connected to pin 13 and to save me some

00:00:19,970 --> 00:00:23,330
time and to give you guys all a little

00:00:21,230 --> 00:00:26,590
demo of Joshua's talked to on the react

00:00:23,330 --> 00:00:32,650
native playground I'm gonna go ahead and

00:00:26,590 --> 00:00:32,650
load up the app on the playground just

00:00:35,470 --> 00:00:43,730
hoping the internet works here there we

00:00:37,850 --> 00:00:45,950
go so instead of running this through

00:00:43,730 --> 00:00:48,500
the simulator I'm actually going to use

00:00:45,950 --> 00:00:50,870
the option to run up my device we have

00:00:48,500 --> 00:00:52,520
an app available for Android and iOS so

00:00:50,870 --> 00:00:54,170
if you guys have a chance to download it

00:00:52,520 --> 00:00:54,559
before tomorrow and take a peek it'll be

00:00:54,170 --> 00:00:57,890
great

00:00:54,559 --> 00:01:00,950
so I'm gonna go ahead here and load the

00:00:57,890 --> 00:01:07,039
playground app and I'm gonna go ahead

00:01:00,950 --> 00:01:08,840
and try to scan this code there we go

00:01:07,039 --> 00:01:13,490
and this should just lo us a really

00:01:08,840 --> 00:01:15,619
simple switch that if connection works

00:01:13,490 --> 00:01:19,729
there we go and hopefully the magic

00:01:15,619 --> 00:01:21,979
works and it does not

00:01:19,729 --> 00:01:26,210
it's it's because of me of course yeah

00:01:21,979 --> 00:01:27,560
once I get work yeah so they just make

00:01:26,210 --> 00:01:29,360
sure the board is ready okay you have

00:01:27,560 --> 00:01:36,460
that one more try so that wasn't it okay

00:01:29,360 --> 00:01:36,460
yeah give it one more try there we go

00:01:37,840 --> 00:01:47,000
there we go so we got that the fling so

00:01:44,840 --> 00:01:48,770
I also have a demo for Android

00:01:47,000 --> 00:01:50,539
unfortunately I can't project it on the

00:01:48,770 --> 00:01:52,490
screen but maybe if I hold it up here

00:01:50,539 --> 00:01:59,030
you guys can kind of visually see me

00:01:52,490 --> 00:02:00,619
scan the same QR code with Android there

00:01:59,030 --> 00:02:04,310
we go so it's fetching the J's bundle

00:02:00,619 --> 00:02:06,079
and this should load another switch just

00:02:04,310 --> 00:02:08,450
gonna take a little bit the connections

00:02:06,079 --> 00:02:09,739
kind of tricky and there's an on and off

00:02:08,450 --> 00:02:12,880
switch I better hit that on right now

00:02:09,739 --> 00:02:16,310
and there we go we got it blinking again

00:02:12,880 --> 00:02:17,390
so that takes care of mobile but now we

00:02:16,310 --> 00:02:19,760
want to talk about how we can interact

00:02:17,390 --> 00:02:21,170
this with web so it's a little bit too

00:02:19,760 --> 00:02:22,489
much to ask for people every time when

00:02:21,170 --> 00:02:25,790
they approach a device like this to

00:02:22,489 --> 00:02:27,950
enter the URL so how many people here

00:02:25,790 --> 00:02:32,000
are familiar with Google's new beacon

00:02:27,950 --> 00:02:35,120
protocol Eddystone anybody one okay so

00:02:32,000 --> 00:02:36,560
with Eddystone it's pretty similar to a

00:02:35,120 --> 00:02:37,670
beacon but with one significant

00:02:36,560 --> 00:02:40,579
difference is that we're able to

00:02:37,670 --> 00:02:43,130
actually broadcast URLs via Bluetooth

00:02:40,579 --> 00:02:44,870
Low Energy so this thing is fairly new

00:02:43,130 --> 00:02:48,200
but one interesting way to interact with

00:02:44,870 --> 00:02:50,900
it is using Chrome on iOS so I'm gonna

00:02:48,200 --> 00:02:51,769
go ahead and pull down my notification

00:02:50,900 --> 00:02:53,889
then you say right there it says

00:02:51,769 --> 00:02:57,380
scanning for physical web objects and

00:02:53,889 --> 00:03:00,579
it's gonna redirect me to a website

00:02:57,380 --> 00:03:00,579
that's gonna have it on an off button

00:03:00,880 --> 00:03:07,239
okay you got it I'm gonna turn it on

00:03:04,540 --> 00:03:09,920
we've got a blinking let's turn it off

00:03:07,239 --> 00:03:11,060
perfect so real quick let me jump and

00:03:09,920 --> 00:03:12,500
show you guys the code that's actually

00:03:11,060 --> 00:03:15,470
making this all work let's start from

00:03:12,500 --> 00:03:17,480
the server so the server is all written

00:03:15,470 --> 00:03:19,880
in JavaScript the main library being

00:03:17,480 --> 00:03:21,739
used as johnny-five which is basically a

00:03:19,880 --> 00:03:24,829
j/s wrapper for the Fermata protocol

00:03:21,739 --> 00:03:28,220
used by arduino so here we're just

00:03:24,829 --> 00:03:30,200
creating HTTP server when the board is

00:03:28,220 --> 00:03:32,310
ready we're gonna go ahead and register

00:03:30,200 --> 00:03:35,130
an LED on pin

00:03:32,310 --> 00:03:38,010
13 gonna start the HTTP server on port

00:03:35,130 --> 00:03:39,510
3000 and start advertising the URL and

00:03:38,010 --> 00:03:40,349
how this works right now is we're using

00:03:39,510 --> 00:03:41,910
socket IO

00:03:40,349 --> 00:03:44,880
with WebSockets and here we're setting

00:03:41,910 --> 00:03:46,470
up the connection and a listener on when

00:03:44,880 --> 00:03:49,380
the LED is on we're just gonna go ahead

00:03:46,470 --> 00:03:51,030
and blink the LED and when we send the

00:03:49,380 --> 00:03:55,800
LED off we're gonna go ahead and stop it

00:03:51,030 --> 00:03:58,170
the cool thing here is on the code for

00:03:55,800 --> 00:03:59,940
Android and iOS is exactly the same

00:03:58,170 --> 00:04:02,099
there's really no difference just copy

00:03:59,940 --> 00:04:04,830
and paste it over you can see we have

00:04:02,099 --> 00:04:06,480
the component life cycles here on

00:04:04,830 --> 00:04:07,980
initial state we're going in and

00:04:06,480 --> 00:04:10,500
creating a new IO right now it's

00:04:07,980 --> 00:04:14,549
pointing to an Iraq that I'm running on

00:04:10,500 --> 00:04:16,590
my local host again Android the same and

00:04:14,549 --> 00:04:18,150
the web version is pretty much the same

00:04:16,590 --> 00:04:19,769
the only difference here is instead of

00:04:18,150 --> 00:04:22,320
rendering a switch I'm rendering a

00:04:19,769 --> 00:04:23,910
button so I think the cool thing here to

00:04:22,320 --> 00:04:25,440
think about is that from the board all

00:04:23,910 --> 00:04:26,639
the way up to our clients both the web

00:04:25,440 --> 00:04:28,290
and mobile we're programming this all

00:04:26,639 --> 00:04:30,180
with JavaScript and that they're all

00:04:28,290 --> 00:04:32,419
sharing the main dependency what we're

00:04:30,180 --> 00:04:34,200
using for this is socket dot IO

00:04:32,419 --> 00:04:35,610
so if you guys have any other questions

00:04:34,200 --> 00:04:38,720
you can definitely reach out to me

00:04:35,610 --> 00:04:42,470
tomorrow I'll be around so hopefully

00:04:38,720 --> 00:04:42,470

YouTube URL: https://www.youtube.com/watch?v=MbfdGilJig0


