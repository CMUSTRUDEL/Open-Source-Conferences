Title: Elm Stylesheets | Richard Feldman | ReactiveConf 2015
Publication date: 2017-06-29
Playlist: ReactiveConf 2015
Description: 
	I created this video with the YouTube Video Editor (https://www.youtube.com/editor)
Captions: 
	00:00:04,520 --> 00:00:08,090
I'm Richard Feldman so I had no idea

00:00:06,590 --> 00:00:10,070
that I was going to be this well set up

00:00:08,090 --> 00:00:12,020
but as it turns out Marc's awesome

00:00:10,070 --> 00:00:13,670
talked earlier about CSS modules at the

00:00:12,020 --> 00:00:16,070
end of it he talked about the idea of

00:00:13,670 --> 00:00:17,930
what if you had a CSS preprocessor where

00:00:16,070 --> 00:00:19,850
the language was JavaScript you could

00:00:17,930 --> 00:00:22,340
just write JavaScript code and then have

00:00:19,850 --> 00:00:24,050
it output a CSS file that's what this is

00:00:22,340 --> 00:00:25,430
except Elm code instead of JavaScript

00:00:24,050 --> 00:00:27,440
and we'll see why that's awesome in a

00:00:25,430 --> 00:00:29,300
second this is just a proof of concept

00:00:27,440 --> 00:00:29,840
this is not production ready but it

00:00:29,300 --> 00:00:32,239
totally works

00:00:29,840 --> 00:00:34,879
so here we have the beautiful reactive

00:00:32,239 --> 00:00:37,250
2015 web site except that I rewrote the

00:00:34,879 --> 00:00:38,930
header styles in Elm style sheets so

00:00:37,250 --> 00:00:41,300
that's what this looks like this is all

00:00:38,930 --> 00:00:42,920
just pure vanilla Elm code I made a

00:00:41,300 --> 00:00:44,660
little DSL using the fact that you can

00:00:42,920 --> 00:00:47,899
write custom operators in elm so we have

00:00:44,660 --> 00:00:49,309
got header nav nav link is a class who

00:00:47,899 --> 00:00:51,680
got a little dot to indicate that it's a

00:00:49,309 --> 00:00:53,570
class at a pound side for reactive logo

00:00:51,680 --> 00:00:55,760
so that's an ID and another ID for buy

00:00:53,570 --> 00:00:57,829
tickets so the one of the first things

00:00:55,760 --> 00:00:59,390
that you want with any good CSS

00:00:57,829 --> 00:01:00,920
preprocessors you want the ability to

00:00:59,390 --> 00:01:02,540
use variables for code reuse

00:01:00,920 --> 00:01:04,189
so let's look at this background color

00:01:02,540 --> 00:01:05,840
attribute here so that's for this buy

00:01:04,189 --> 00:01:07,430
tickets button we got this nice green on

00:01:05,840 --> 00:01:09,499
the background I'm gonna go ahead and

00:01:07,430 --> 00:01:12,499
pull that out and rename that to

00:01:09,499 --> 00:01:14,810
reactive green okay and I'm gonna pull

00:01:12,499 --> 00:01:18,020
that up here and say reactive green

00:01:14,810 --> 00:01:20,869
equals okay cool and I'm actually gonna

00:01:18,020 --> 00:01:22,399
use that to give these links the same

00:01:20,869 --> 00:01:25,189
color so I'm gonna go down to my nav

00:01:22,399 --> 00:01:27,159
link class and replace its color with

00:01:25,189 --> 00:01:30,829
reactive green where you can pilot

00:01:27,159 --> 00:01:36,630
compiler was super fast boom green links

00:01:30,829 --> 00:01:38,369
cool okay oh thanks

00:01:36,630 --> 00:01:42,840
that's encouraging because I haven't

00:01:38,369 --> 00:01:44,970
gone to the cool stuff yet okay so we

00:01:42,840 --> 00:01:46,380
did the bare minimum but we could have

00:01:44,970 --> 00:01:48,690
done that in JavaScript that's something

00:01:46,380 --> 00:01:49,920
that any CSS preprocessor can do how

00:01:48,690 --> 00:01:51,689
about this let's do something that we

00:01:49,920 --> 00:01:52,320
can't see in JavaScript as the

00:01:51,689 --> 00:01:54,240
preprocessor

00:01:52,320 --> 00:01:56,159
let's change background color to a crown

00:01:54,240 --> 00:01:58,259
color and rerun that again

00:01:56,159 --> 00:01:59,789
naming error cannot find variable a

00:01:58,259 --> 00:02:01,140
crown color actually gives us a little

00:01:59,789 --> 00:02:03,060
red underline under the thing that's

00:02:01,140 --> 00:02:05,580
broken the line number maybe you want

00:02:03,060 --> 00:02:07,979
one of the following background color so

00:02:05,580 --> 00:02:09,600
I didn't write this this is just Elms

00:02:07,979 --> 00:02:11,130
compiler Elms compiler is just this

00:02:09,600 --> 00:02:14,819
awesome and when you write stuff in elm

00:02:11,130 --> 00:02:17,610
your life is this awesome which is why

00:02:14,819 --> 00:02:19,650
when we switched from react to element

00:02:17,610 --> 00:02:21,330
no red ink in production we basically

00:02:19,650 --> 00:02:22,950
just stopped getting runtime exceptions

00:02:21,330 --> 00:02:24,090
for my Alva code because the compiler is

00:02:22,950 --> 00:02:25,860
just really good at catching this stuff

00:02:24,090 --> 00:02:28,410
and it would be also if we could get

00:02:25,860 --> 00:02:30,030
that in our style sheets as well another

00:02:28,410 --> 00:02:32,519
cool thing so let's say I change padding

00:02:30,030 --> 00:02:33,180
from 12 pixels to lol pixels what is

00:02:32,519 --> 00:02:36,150
that gonna do

00:02:33,180 --> 00:02:37,410
tight mismatched padding lol pixels

00:02:36,150 --> 00:02:39,150
function padding is expecting the first

00:02:37,410 --> 00:02:42,019
argument to be number but it is a string

00:02:39,150 --> 00:02:44,940
so again it's not just miss you know

00:02:42,019 --> 00:02:46,890
making typos it's also type mismatches

00:02:44,940 --> 00:02:48,510
again this is just a thing that happens

00:02:46,890 --> 00:02:49,680
with the own compiler it's just the fact

00:02:48,510 --> 00:02:52,140
that I wrote this an L means that I get

00:02:49,680 --> 00:02:53,670
this for free it's pretty awesome

00:02:52,140 --> 00:02:54,840
it's kind of weird to me that I've heard

00:02:53,670 --> 00:02:57,060
you know a number of times at the

00:02:54,840 --> 00:02:58,380
conference people talking about Elm in

00:02:57,060 --> 00:03:00,540
the Elm architecture and how it's

00:02:58,380 --> 00:03:02,100
inspiring lots of cool tools but from my

00:03:00,540 --> 00:03:03,120
perspective the coolest part about LM is

00:03:02,100 --> 00:03:04,560
the stuff that you can't get in

00:03:03,120 --> 00:03:05,940
JavaScript namely the compiler that's

00:03:04,560 --> 00:03:07,440
just got your back and just saves you

00:03:05,940 --> 00:03:11,670
from all these errors reaching your end

00:03:07,440 --> 00:03:13,260
users one more thing so at the end of

00:03:11,670 --> 00:03:15,269
marks awesome talk Andre asked a

00:03:13,260 --> 00:03:17,370
question which was what about constant

00:03:15,269 --> 00:03:18,930
sharing which is a great question let's

00:03:17,370 --> 00:03:21,000
look at how that works in this land so

00:03:18,930 --> 00:03:22,890
we've got to be here view this is what's

00:03:21,000 --> 00:03:25,380
actually rendering this using Elms

00:03:22,890 --> 00:03:26,880
little DSL for virtual Dom stuff so it's

00:03:25,380 --> 00:03:29,810
the same kind of ideas react except

00:03:26,880 --> 00:03:31,980
instead of JSX it's just more pure Elm

00:03:29,810 --> 00:03:34,230
okay so let's say I want to change

00:03:31,980 --> 00:03:36,660
reactive logo to just logo so I change

00:03:34,230 --> 00:03:39,239
it to logo and I compile it it says up

00:03:36,660 --> 00:03:41,760
cannot find variable logo okay cool so

00:03:39,239 --> 00:03:43,709
it new in the view logo was no longer a

00:03:41,760 --> 00:03:45,389
thing that's because we've got this this

00:03:43,709 --> 00:03:47,370
constants file here and I didn't update

00:03:45,389 --> 00:03:49,650
it over here so we have all of our CSS

00:03:47,370 --> 00:03:51,000
IDs and I forgot to update it okay

00:03:49,650 --> 00:03:54,060
now I updated it in the constants file

00:03:51,000 --> 00:03:55,829
so we're good right no we're not because

00:03:54,060 --> 00:03:57,659
the stylesheet is using that same

00:03:55,829 --> 00:03:59,430
constants file and the compiler will

00:03:57,659 --> 00:04:01,319
tell you if you mess it up and you don't

00:03:59,430 --> 00:04:03,540
keep them in sync so now that little

00:04:01,319 --> 00:04:06,120
pound reactive logo definition knows

00:04:03,540 --> 00:04:08,069
about the fact that we didn't have that

00:04:06,120 --> 00:04:10,500
so if I update that now it will compile

00:04:08,069 --> 00:04:15,209
i refresh the page now I look at this

00:04:10,500 --> 00:04:16,680
guy we can see that it is now id logo

00:04:15,209 --> 00:04:18,600
and the style here is coming not from

00:04:16,680 --> 00:04:20,639
inline styles but from our actual style

00:04:18,600 --> 00:04:24,300
sheet using that pound logo that was

00:04:20,639 --> 00:04:25,919
automatically generated so using this

00:04:24,300 --> 00:04:30,210
and this goes the other way too by the

00:04:25,919 --> 00:04:32,190
way so if I update it over here but if I

00:04:30,210 --> 00:04:33,570
make it so that the the view is trying

00:04:32,190 --> 00:04:35,880
to reference something that no longer

00:04:33,570 --> 00:04:37,979
exists in the other two same issue so

00:04:35,880 --> 00:04:39,479
they have to all be in sync so what this

00:04:37,979 --> 00:04:41,580
means is that you can now live in a

00:04:39,479 --> 00:04:44,250
world where when you want to go and

00:04:41,580 --> 00:04:46,020
delete a CSS class or a CSS ID that you

00:04:44,250 --> 00:04:47,550
don't think you're using anymore the

00:04:46,020 --> 00:04:48,660
compiler will actually tell you if

00:04:47,550 --> 00:04:49,979
you're using it somewhere it'll give you

00:04:48,660 --> 00:04:52,259
an error if you deleted that and it's

00:04:49,979 --> 00:04:54,120
still being referenced somewhere awesome

00:04:52,259 --> 00:04:55,590
that's something I've wanted in CSS for

00:04:54,120 --> 00:04:57,300
years and this is a proof of concept

00:04:55,590 --> 00:04:58,949
that it can actually be done you have

00:04:57,300 --> 00:05:03,320
any other questions I marty Feldman on

00:04:58,949 --> 00:05:03,320

YouTube URL: https://www.youtube.com/watch?v=R121YzswY_4


