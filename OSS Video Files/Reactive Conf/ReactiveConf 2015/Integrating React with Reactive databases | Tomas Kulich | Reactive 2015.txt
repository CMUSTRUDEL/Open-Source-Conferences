Title: Integrating React with Reactive databases | Tomas Kulich | Reactive 2015
Publication date: 2017-06-29
Playlist: ReactiveConf 2015
Description: 
	React is a great tool for synchronizing data with views on the client side. However, to achieve perfect real-time experience one also needs to synchronize server data with client data. Unfortunately the nowadays widely used REST-like API is rather suited to one-time fetches, usually resulting in stale client data. Reactive databases such as Firebase seek to be the solution to this problem. 
I will show how Firebase can be integrated with React (spoiler alert: it can be done in a beautiful way) to get what-you-see-is-what-it-really-is kind of UX and how the FLUX pattern helps us to keep database updates clean. Since Firebase-like databases are quite fresh and immature, you may get an inspiration for a nice Friday-night project here.

Tomas is a former university assistant professor at the Faculty of Informatics, Comenius University, Bratislava. 
He found his passion as the founder
and CTO of VacuumLabs.
Captions: 
	00:00:04,630 --> 00:00:08,960
recently I had an interesting

00:00:06,590 --> 00:00:10,850
conversation with a friend of mine he

00:00:08,960 --> 00:00:13,639
asked me what we do at vacuum labs so I

00:00:10,850 --> 00:00:15,440
try to explain to him that we do mostly

00:00:13,639 --> 00:00:18,440
web development and mobile development

00:00:15,440 --> 00:00:21,020
which surprised him he was like man

00:00:18,440 --> 00:00:24,080
isn't it all too easy it is challenging

00:00:21,020 --> 00:00:26,000
for you to do web applications so I

00:00:24,080 --> 00:00:28,039
tried to explain to him that web

00:00:26,000 --> 00:00:31,490
development if done right can be rather

00:00:28,039 --> 00:00:35,030
tricky and challenging thing to do but

00:00:31,490 --> 00:00:38,150
obviously I failed to persuade him

00:00:35,030 --> 00:00:40,640
because he went don't like okay so you

00:00:38,150 --> 00:00:43,220
got some user screen user clicks

00:00:40,640 --> 00:00:46,130
something you fetch the data from the

00:00:43,220 --> 00:00:48,739
server you display the data you provide

00:00:46,130 --> 00:00:50,660
user with a new screen some time passes

00:00:48,739 --> 00:00:52,820
user click something else you first some

00:00:50,660 --> 00:00:57,700
new data this plane and so on and so on

00:00:52,820 --> 00:01:00,649
and so on where is the glory in debt and

00:00:57,700 --> 00:01:03,290
these tricky because this actually sort

00:01:00,649 --> 00:01:06,020
of proves my point the web development

00:01:03,290 --> 00:01:09,259
is hard because even in this very very

00:01:06,020 --> 00:01:11,090
very simplified idea of how web

00:01:09,259 --> 00:01:14,810
application might work there is already

00:01:11,090 --> 00:01:18,499
a design flaw or at least design could

00:01:14,810 --> 00:01:21,189
be done better think the issue is how we

00:01:18,499 --> 00:01:25,009
treat data we get data from the server

00:01:21,189 --> 00:01:28,009
we displayed on clean screen and that's

00:01:25,009 --> 00:01:30,560
it from that moment the data start

00:01:28,009 --> 00:01:33,619
becoming stale and less time as the

00:01:30,560 --> 00:01:36,380
advances the data becomes even more and

00:01:33,619 --> 00:01:38,149
more stale so finally we end up

00:01:36,380 --> 00:01:41,319
displaying something completely may be

00:01:38,149 --> 00:01:45,020
irrelevant to our user which is not good

00:01:41,319 --> 00:01:48,529
now we see many solutions to this

00:01:45,020 --> 00:01:50,419
problem around us many projects just

00:01:48,529 --> 00:01:53,329
tend to ignore this thing whatsoever

00:01:50,419 --> 00:01:57,349
okay so users refresh the webpage

00:01:53,329 --> 00:02:00,259
whatever Facebook solve this entry

00:01:57,349 --> 00:02:04,489
interestingly they simply refreshes

00:02:00,259 --> 00:02:07,279
several parts of their webpage and this

00:02:04,489 --> 00:02:09,140
is done in really ad hoc way so when you

00:02:07,279 --> 00:02:11,590
are looking at Facebook everything on

00:02:09,140 --> 00:02:14,390
the screen has different staleness

00:02:11,590 --> 00:02:17,150
basically github it have been doing

00:02:14,390 --> 00:02:18,560
especially bad job about this I don't

00:02:17,150 --> 00:02:20,870
know how about you

00:02:18,560 --> 00:02:22,370
meet always happens that I see the

00:02:20,870 --> 00:02:24,800
github oh there are five per request

00:02:22,370 --> 00:02:28,130
waiting for me it's gonna be a long

00:02:24,800 --> 00:02:31,880
evening I click on the pull request top

00:02:28,130 --> 00:02:33,739
and suddenly there is none of them what

00:02:31,880 --> 00:02:39,140
happened ok so i guess i have a free

00:02:33,739 --> 00:02:42,470
evening after all good so the solutions

00:02:39,140 --> 00:02:44,360
we see around us are not perfect what

00:02:42,470 --> 00:02:47,510
would we like to see you would like to

00:02:44,360 --> 00:02:49,819
get this would be this will be the holy

00:02:47,510 --> 00:02:52,040
grail if we can just achieve this we

00:02:49,819 --> 00:02:54,260
would like to display always fresh data

00:02:52,040 --> 00:02:57,380
as fresh as they are in our databases

00:02:54,260 --> 00:03:00,440
and we would like to do only a little

00:02:57,380 --> 00:03:03,080
extra work to make this make this happen

00:03:00,440 --> 00:03:07,819
because usually we cannot effort to

00:03:03,080 --> 00:03:11,540
invest much in this I'd like to show you

00:03:07,819 --> 00:03:15,860
one solution which aims for this space

00:03:11,540 --> 00:03:18,380
is called firebase its database solution

00:03:15,860 --> 00:03:22,970
its database as a service it ransom

00:03:18,380 --> 00:03:24,709
cloud but first one disclaimer it's

00:03:22,970 --> 00:03:26,690
richard etheridge wiki said not

00:03:24,709 --> 00:03:29,420
everything is awesome and firebase is

00:03:26,690 --> 00:03:32,120
definitely one of those things it's by

00:03:29,420 --> 00:03:34,730
no means awesome but ever it has some

00:03:32,120 --> 00:03:36,380
really interesting properties and it

00:03:34,730 --> 00:03:39,500
could be a real blessing for your

00:03:36,380 --> 00:03:43,459
project if it's the right type of

00:03:39,500 --> 00:03:47,959
project so choose wisely few attributes

00:03:43,459 --> 00:03:52,040
of a firebase as I said its database as

00:03:47,959 --> 00:03:54,889
a service it runs in cloud and your

00:03:52,040 --> 00:03:58,160
client queries directly the firebase

00:03:54,889 --> 00:04:00,739
server it completely bypasses your

00:03:58,160 --> 00:04:04,850
server which is really interesting thing

00:04:00,739 --> 00:04:10,430
I'll get to this later it's data model

00:04:04,850 --> 00:04:13,280
it's a little bit no SQL ish it's one

00:04:10,430 --> 00:04:20,120
big JSON document or one big nested

00:04:13,280 --> 00:04:24,470
records if map this is example of right

00:04:20,120 --> 00:04:26,900
api have you put data in the firebase so

00:04:24,470 --> 00:04:31,310
in this case i query for a specific

00:04:26,900 --> 00:04:32,330
location in the firebase so it's even /

00:04:31,310 --> 00:04:35,629
00:04:32,330 --> 00:04:38,720
I get the so called fibrous firebase

00:04:35,629 --> 00:04:40,699
reference and I can set this reference

00:04:38,720 --> 00:04:44,719
to whatever I want so in this case it's

00:04:40,699 --> 00:04:47,509
Bratislava you can do this directly from

00:04:44,719 --> 00:04:51,469
browser there is no server code needed

00:04:47,509 --> 00:04:53,479
to do this and this is the rate API

00:04:51,469 --> 00:04:55,849
that's the killer feature of firebase

00:04:53,479 --> 00:04:57,800
have you read data from it so once again

00:04:55,849 --> 00:05:01,669
you navigate to one specific location

00:04:57,800 --> 00:05:04,580
and then you subscribe to some events

00:05:01,669 --> 00:05:06,979
which are affecting this location so in

00:05:04,580 --> 00:05:10,669
this case I'm subscribing to value event

00:05:06,979 --> 00:05:13,370
which means whenever the data in the sub

00:05:10,669 --> 00:05:15,289
document rooted here changes this

00:05:13,370 --> 00:05:17,629
callback is executed for me with the

00:05:15,289 --> 00:05:22,250
proper value being the value of the sub

00:05:17,629 --> 00:05:25,250
document below me so with firebase you

00:05:22,250 --> 00:05:30,349
don't query for data you subscribe for

00:05:25,250 --> 00:05:32,960
data you create some subscriptions now

00:05:30,349 --> 00:05:37,129
let me show you how this concept can be

00:05:32,960 --> 00:05:42,860
used in building real web apps so first

00:05:37,129 --> 00:05:47,300
I show you what would we get oh yeah

00:05:42,860 --> 00:05:49,460
this is an example from vodacom we are

00:05:47,300 --> 00:05:51,469
currently building a new version of the

00:05:49,460 --> 00:05:55,479
website I don't know you even know

00:05:51,469 --> 00:05:58,430
worried that com start up it provides

00:05:55,479 --> 00:06:00,889
correcting grammars if your document by

00:05:58,430 --> 00:06:04,190
human editors so we submit some

00:06:00,889 --> 00:06:08,089
documents and they come back polished

00:06:04,190 --> 00:06:11,750
and shiny one of the core feature is

00:06:08,089 --> 00:06:13,940
that you can select your editor team so

00:06:11,750 --> 00:06:16,129
here I have four guys in my editor team

00:06:13,940 --> 00:06:18,529
it's all working progress this is really

00:06:16,129 --> 00:06:21,969
really roll version of the application

00:06:18,529 --> 00:06:24,349
there is no fancy graphics right now but

00:06:21,969 --> 00:06:26,960
what I want to show you is already there

00:06:24,349 --> 00:06:31,690
so let me show you what happens if I try

00:06:26,960 --> 00:06:31,690
to add some new editors the team

00:06:34,529 --> 00:06:45,929
now check out how the screen in between

00:06:41,069 --> 00:06:49,079
a screen the background screen reacts to

00:06:45,929 --> 00:06:51,479
whatever I do to the overlay i remove

00:06:49,079 --> 00:06:58,679
editor from overlay is also removed from

00:06:51,479 --> 00:07:00,929
the background screen it's nice this has

00:06:58,679 --> 00:07:05,519
nothing to do with firebase yet this is

00:07:00,929 --> 00:07:07,709
just the direct is awesome okay so now

00:07:05,519 --> 00:07:14,189
for some serious stuff I open the second

00:07:07,709 --> 00:07:16,829
browser so i have now to completely

00:07:14,189 --> 00:07:20,129
separated chromium instances is actually

00:07:16,829 --> 00:07:22,439
the similar demonstration how Victor

00:07:20,129 --> 00:07:26,939
Chris Schenkel was giving few minutes

00:07:22,439 --> 00:07:29,309
ago so I had to completely separated

00:07:26,939 --> 00:07:30,899
chromium instances I'm just locked in as

00:07:29,309 --> 00:07:34,079
the same person and I'm looking at the

00:07:30,899 --> 00:07:37,079
same page basically here is the overview

00:07:34,079 --> 00:07:39,929
the overlay and here is the editor steam

00:07:37,079 --> 00:07:42,149
summary so it looks it'll be different

00:07:39,929 --> 00:07:56,789
now let me show you how these two things

00:07:42,149 --> 00:07:59,279
synchronizes okay so whatever I do in

00:07:56,789 --> 00:08:02,399
the left in tears immediately on the

00:07:59,279 --> 00:08:05,869
right and vice versa did you get it or

00:08:02,399 --> 00:08:12,809
should I okay so nice it is clearly a

00:08:05,869 --> 00:08:14,879
perfect I prepare a video because I have

00:08:12,809 --> 00:08:20,489
the feeling that the wish we might not

00:08:14,879 --> 00:08:22,499
be as good as I would like okay so how

00:08:20,489 --> 00:08:27,659
can you build such an application with

00:08:22,499 --> 00:08:29,879
firebase i will show you one problem we

00:08:27,659 --> 00:08:33,149
had to solve and i will show you how we

00:08:29,879 --> 00:08:36,029
how we do it the thing is subscription

00:08:33,149 --> 00:08:38,370
management imagine imagine this very

00:08:36,029 --> 00:08:41,519
simple app there is a listing of events

00:08:38,370 --> 00:08:45,379
i want to attend on the left and then

00:08:41,519 --> 00:08:47,940
there is some even details on the right

00:08:45,379 --> 00:08:51,120
now what the application has

00:08:47,940 --> 00:08:53,790
to do when i click on the left item

00:08:51,120 --> 00:08:56,100
number four I have to make a

00:08:53,790 --> 00:08:58,980
subscription to firebase subscribe to

00:08:56,100 --> 00:09:01,800
correct source of the data when this

00:08:58,980 --> 00:09:05,820
data rise I must display this data in

00:09:01,800 --> 00:09:09,390
the right panel now if this data changes

00:09:05,820 --> 00:09:12,090
I have to refresh the right panel now if

00:09:09,390 --> 00:09:14,340
user clicks third event I have to

00:09:12,090 --> 00:09:18,180
destroy it all subscription and create

00:09:14,340 --> 00:09:21,540
new one for another piece of data from

00:09:18,180 --> 00:09:23,640
the firebase now the question is who

00:09:21,540 --> 00:09:26,550
should do this who should create and

00:09:23,640 --> 00:09:29,400
destroy subscription we're in standard

00:09:26,550 --> 00:09:33,050
react flux architecture should such code

00:09:29,400 --> 00:09:35,400
be placed where should it be written so

00:09:33,050 --> 00:09:39,810
we were thinking about this for some

00:09:35,400 --> 00:09:43,860
time and yeah so there is this key

00:09:39,810 --> 00:09:46,920
observation that subscription to

00:09:43,860 --> 00:09:49,230
firebase they have some lifecycle events

00:09:46,920 --> 00:09:51,170
that created then they last for some

00:09:49,230 --> 00:09:54,390
time and then they are destroyed and

00:09:51,170 --> 00:09:56,760
it's not only that that creation and

00:09:54,390 --> 00:10:00,060
destruction of the subscription The

00:09:56,760 --> 00:10:02,520
Times seems to coincide with times of

00:10:00,060 --> 00:10:08,220
mounting and unmounting some document so

00:10:02,520 --> 00:10:12,480
some some element so we came up with

00:10:08,220 --> 00:10:15,060
this solution we created react element

00:10:12,480 --> 00:10:16,620
with no visual representation just for

00:10:15,060 --> 00:10:20,640
managing the subscription with with

00:10:16,620 --> 00:10:24,150
firebase for us and then we use react to

00:10:20,640 --> 00:10:26,460
take care of every everything else so I

00:10:24,150 --> 00:10:29,490
now now go little bit technical I show

00:10:26,460 --> 00:10:31,620
you the actual code how this is done so

00:10:29,490 --> 00:10:36,150
this is listen even details listener

00:10:31,620 --> 00:10:38,670
component it's pretty valid react

00:10:36,150 --> 00:10:41,850
component it start with the big letter

00:10:38,670 --> 00:10:44,760
everything is okay yet it's created by

00:10:41,850 --> 00:10:48,420
listen firebase function call this takes

00:10:44,760 --> 00:10:51,089
two arguments the first argument is what

00:10:48,420 --> 00:10:53,490
do I won't listen to so this function

00:10:51,089 --> 00:10:56,100
that takes some properties and it

00:10:53,490 --> 00:10:58,110
constructs firebase reference to which I

00:10:56,100 --> 00:11:00,060
want to listen to in this case it's

00:10:58,110 --> 00:11:04,260
events /

00:11:00,060 --> 00:11:07,470
props ID and the second argument tells

00:11:04,260 --> 00:11:10,170
what do I want to do with the data once

00:11:07,470 --> 00:11:13,530
I get it so in this case I want to

00:11:10,170 --> 00:11:16,560
dispatch this data as a payload of some

00:11:13,530 --> 00:11:21,330
action such that the data can be put to

00:11:16,560 --> 00:11:23,910
the application state so once I have

00:11:21,330 --> 00:11:27,480
this react component I can use it like

00:11:23,910 --> 00:11:30,330
this this is some hypothetical very

00:11:27,480 --> 00:11:34,100
simplified version of render method of

00:11:30,330 --> 00:11:36,450
the right panel so first what I do i

00:11:34,100 --> 00:11:40,380
render this listen even details

00:11:36,450 --> 00:11:42,600
component with the proper ID then I

00:11:40,380 --> 00:11:45,990
check whether the event data is already

00:11:42,600 --> 00:11:49,230
there because if I first come to the

00:11:45,990 --> 00:11:51,150
application the synchronization with

00:11:49,230 --> 00:11:54,360
firebase it takes item literally it's

00:11:51,150 --> 00:11:56,580
networking so in the first render the

00:11:54,360 --> 00:11:58,770
data will probably not be there so in

00:11:56,580 --> 00:12:02,100
case the even this now I just display

00:11:58,770 --> 00:12:03,870
loading message however if I have the

00:12:02,100 --> 00:12:06,360
data display the proper representation

00:12:03,870 --> 00:12:09,060
of the right panel with all the data

00:12:06,360 --> 00:12:12,450
there should be so once again what will

00:12:09,060 --> 00:12:16,020
happen as time goes when user first

00:12:12,450 --> 00:12:20,010
comes to this side so on the first

00:12:16,020 --> 00:12:22,770
render to listen even details component

00:12:20,010 --> 00:12:26,070
is rendered which has no visual effect

00:12:22,770 --> 00:12:29,700
just the connection to the firebase is

00:12:26,070 --> 00:12:32,280
created and then since since even is

00:12:29,700 --> 00:12:37,500
probably now on the first render the

00:12:32,280 --> 00:12:39,530
loading message is displayed now since I

00:12:37,500 --> 00:12:44,010
created subscription to some specific

00:12:39,530 --> 00:12:47,340
firebase location after a few aisles the

00:12:44,010 --> 00:12:50,790
data arrives the data got dispatched at

00:12:47,340 --> 00:12:53,250
we as we so already the applications

00:12:50,790 --> 00:12:55,890
taint is change change and the whole

00:12:53,250 --> 00:12:58,830
thing gets rendered so the render is

00:12:55,890 --> 00:13:01,350
called second time this time I leave the

00:12:58,830 --> 00:13:04,800
list even please listen even list

00:13:01,350 --> 00:13:07,500
details with summer impact it stays as

00:13:04,800 --> 00:13:09,240
it is but now I have the even data so

00:13:07,500 --> 00:13:11,400
instead of rendering loading message i

00:13:09,240 --> 00:13:18,990
render full representation of the right

00:13:11,400 --> 00:13:21,090
as it should be okay so once again the

00:13:18,990 --> 00:13:25,760
worldly application now in the right

00:13:21,090 --> 00:13:30,990
browser I open this firebase life editor

00:13:25,760 --> 00:13:35,640
you can inspect and edit your data this

00:13:30,990 --> 00:13:39,000
comes as with with firebase now down

00:13:35,640 --> 00:13:42,720
here as you can see there are my some

00:13:39,000 --> 00:13:47,930
info about my account so as you can see

00:13:42,720 --> 00:13:47,930
right now I'm admit I'm administrator

00:13:49,610 --> 00:13:57,710
which means i can go here and with it /

00:13:54,120 --> 00:14:01,110
admin URL and what i got here is

00:13:57,710 --> 00:14:03,450
administrative page i can change other

00:14:01,110 --> 00:14:06,870
people's accounts here now hope you'll

00:14:03,450 --> 00:14:10,710
help oh if i change my my role from

00:14:06,870 --> 00:14:13,980
admin to just plain user boom suddenly

00:14:10,710 --> 00:14:16,050
this there was no reload it all happened

00:14:13,980 --> 00:14:17,550
out on automatically and i just got this

00:14:16,050 --> 00:14:20,960
message than what permissions are not

00:14:17,550 --> 00:14:23,460
good enough for demonstrating the page

00:14:20,960 --> 00:14:26,970
okay but i still can access dashboard

00:14:23,460 --> 00:14:30,690
and use the MS normal user until i block

00:14:26,970 --> 00:14:33,900
my account so now it's blocked and yeah

00:14:30,690 --> 00:14:35,760
once again no refresh here and now i

00:14:33,900 --> 00:14:40,520
cannot do it literally anything with the

00:14:35,760 --> 00:14:43,020
app which is kind of boring so i add i

00:14:40,520 --> 00:14:45,900
unblock my account once again which

00:14:43,020 --> 00:14:50,700
means i can use it as a normal user now

00:14:45,900 --> 00:14:52,920
I visit / admin page okay still don't

00:14:50,700 --> 00:14:55,440
have permissions and cool in my opinion

00:14:52,920 --> 00:14:59,220
I don't think it's firebase fault

00:14:55,440 --> 00:15:02,960
actually I don't know any solution that

00:14:59,220 --> 00:15:05,660
would solve all of these things advanced

00:15:02,960 --> 00:15:11,340
so several issues i would expect from

00:15:05,660 --> 00:15:14,880
holy grail database the first thing is

00:15:11,340 --> 00:15:16,740
that with firebase your client talks

00:15:14,880 --> 00:15:19,230
directly to the database which is cool

00:15:16,740 --> 00:15:24,660
it's cool because you don't have to

00:15:19,230 --> 00:15:28,869
write a lot of rate and points

00:15:24,660 --> 00:15:32,290
like this I don't know how about you I

00:15:28,869 --> 00:15:35,199
don't like writing these guys from rough

00:15:32,290 --> 00:15:37,629
ql obviously also don't like writing

00:15:35,199 --> 00:15:40,929
these the thing is rest and rest

00:15:37,629 --> 00:15:44,399
endpoints just for reading data you have

00:15:40,929 --> 00:15:47,079
to write them you have to maintain them

00:15:44,399 --> 00:15:50,199
quite often in the different versions of

00:15:47,079 --> 00:15:54,220
your API still they add quite small

00:15:50,199 --> 00:15:55,809
value to your project they don't do

00:15:54,220 --> 00:15:57,339
anything useful with the data usually

00:15:55,809 --> 00:15:59,769
they just grab the data from the

00:15:57,339 --> 00:16:02,350
firebase cellular eyes it and send it

00:15:59,769 --> 00:16:07,540
through the wire there is much not much

00:16:02,350 --> 00:16:10,209
value added and in ideal universe in

00:16:07,540 --> 00:16:14,980
ideal world or during this one we could

00:16:10,209 --> 00:16:20,139
get rid of basically all our rate API

00:16:14,980 --> 00:16:24,939
just by providing general SQL handler

00:16:20,139 --> 00:16:28,419
API this works really simple you just

00:16:24,939 --> 00:16:30,939
provide this / SQL URL any client can

00:16:28,419 --> 00:16:33,160
submit any query they want you just

00:16:30,939 --> 00:16:35,230
execute the query completely blindly

00:16:33,160 --> 00:16:37,929
whatever it is and send back the result

00:16:35,230 --> 00:16:41,290
there is one API which is sufficient for

00:16:37,929 --> 00:16:47,980
all your app great isn't it of course is

00:16:41,290 --> 00:16:51,040
not because this can happen so it is no

00:16:47,980 --> 00:16:55,209
go for us and suddenly there cannot be

00:16:51,040 --> 00:16:57,699
much done about this with SQL it's very

00:16:55,209 --> 00:17:00,459
hard to introspect the query to analyze

00:16:57,699 --> 00:17:02,649
it and to see what the clients are

00:17:00,459 --> 00:17:07,419
really trying to do when they submit

00:17:02,649 --> 00:17:10,029
such query firebase has this validation

00:17:07,419 --> 00:17:12,850
mechanism well fibrous has to address it

00:17:10,029 --> 00:17:14,709
this somehow yeah because client talks

00:17:12,850 --> 00:17:18,519
directly to the firebase with with no

00:17:14,709 --> 00:17:21,130
server involved so what I do is this

00:17:18,519 --> 00:17:25,059
they created validation rules each

00:17:21,130 --> 00:17:27,909
validation rule guards some specific

00:17:25,059 --> 00:17:31,299
location in the firebase so in this case

00:17:27,909 --> 00:17:35,260
we are guarding location user / some ID

00:17:31,299 --> 00:17:36,920
and the guarding function is basically

00:17:35,260 --> 00:17:39,140
some some snippet in in

00:17:36,920 --> 00:17:41,990
subset of JavaScript that takes three

00:17:39,140 --> 00:17:44,000
arguments who is trying to do what is he

00:17:41,990 --> 00:17:46,790
trying to do and was the actual state of

00:17:44,000 --> 00:17:49,430
the DB so depending on these three

00:17:46,790 --> 00:17:51,830
things you may say whether the epic the

00:17:49,430 --> 00:17:57,770
action is correct or not whether you

00:17:51,830 --> 00:18:00,650
should allow it or not and it's an

00:17:57,770 --> 00:18:03,860
interesting validation mechanism but

00:18:00,650 --> 00:18:07,550
it's in these cases such as this is not

00:18:03,860 --> 00:18:13,130
enough in this case I have three event

00:18:07,550 --> 00:18:15,590
object and to users objects and I linked

00:18:13,130 --> 00:18:19,220
them together with some string IDs so

00:18:15,590 --> 00:18:23,780
here John has ID for and that means his

00:18:19,220 --> 00:18:26,840
owner of those two events now what I do

00:18:23,780 --> 00:18:30,170
is I separated John data to different

00:18:26,840 --> 00:18:33,380
sub documents in my firebase which makes

00:18:30,170 --> 00:18:37,040
it pretty hard to validate it's pretty

00:18:33,380 --> 00:18:41,360
hard to do validation rules right in

00:18:37,040 --> 00:18:45,170
such a case actually if I was such that

00:18:41,360 --> 00:18:47,120
only John can edit his data it's not

00:18:45,170 --> 00:18:49,280
even possible to variety validation rule

00:18:47,120 --> 00:18:50,840
for for this case without tweaking the

00:18:49,280 --> 00:18:55,310
database schema at least for a little

00:18:50,840 --> 00:18:59,720
bit so that's set so this is what we got

00:18:55,310 --> 00:19:02,900
with SQL our query query validating

00:18:59,720 --> 00:19:05,660
capabilities are pretty much

00:19:02,900 --> 00:19:07,910
non-existent with firebase it's also i'm

00:19:05,660 --> 00:19:09,980
not sure who's the winner here and

00:19:07,910 --> 00:19:13,630
whether we know it yet maybe something

00:19:09,980 --> 00:19:15,980
like graphic UL / FL color we'll see

00:19:13,630 --> 00:19:18,890
okay so this is the big issue number one

00:19:15,980 --> 00:19:21,530
this big issue number to have you do

00:19:18,890 --> 00:19:23,450
updates to your database with firebase

00:19:21,530 --> 00:19:25,880
is really really simple and

00:19:23,450 --> 00:19:28,130
straightforward is as I said before you

00:19:25,880 --> 00:19:31,910
just take the reference in and set it to

00:19:28,130 --> 00:19:34,040
whatever you want it to be and yeah that

00:19:31,910 --> 00:19:35,900
works somehow but if you want something

00:19:34,040 --> 00:19:39,320
more complicated like transactions you

00:19:35,900 --> 00:19:41,510
just nope there are some things in

00:19:39,320 --> 00:19:45,490
firebase which you can use but all of

00:19:41,510 --> 00:19:47,870
them has really transactional kind of

00:19:45,490 --> 00:19:50,820
capabilities so what we did about this

00:19:47,870 --> 00:19:53,070
we created our own firebase

00:19:50,820 --> 00:19:55,769
expansion it's called five base

00:19:53,070 --> 00:19:58,799
transactions you can find it open source

00:19:55,769 --> 00:20:01,019
on github how this works you run the

00:19:58,799 --> 00:20:02,669
thing on their server it start

00:20:01,019 --> 00:20:05,340
monitoring the firebase and

00:20:02,669 --> 00:20:08,880
transactionally applies whatever is

00:20:05,340 --> 00:20:13,529
needed to be applied for the client

00:20:08,880 --> 00:20:15,750
perspective if John won't pay Emily ten

00:20:13,529 --> 00:20:19,380
bucks then instead of directly

00:20:15,750 --> 00:20:22,590
manipulating the database he submits the

00:20:19,380 --> 00:20:26,279
action action is object such as this one

00:20:22,590 --> 00:20:31,320
so John submits the object saying I want

00:20:26,279 --> 00:20:34,440
to pay from John to Emily ten bucks it's

00:20:31,320 --> 00:20:36,899
sort of flux inspired yeah instead of

00:20:34,440 --> 00:20:38,850
doing the change directly you just push

00:20:36,899 --> 00:20:43,649
them descriptor there and let someone

00:20:38,850 --> 00:20:46,110
else to do the job so John submits that

00:20:43,649 --> 00:20:50,610
object to the firebase it gets spotted

00:20:46,110 --> 00:20:53,340
by firebase transactions the system

00:20:50,610 --> 00:20:55,350
applies the transaction in a

00:20:53,340 --> 00:20:57,570
transactional manner with all the acid

00:20:55,350 --> 00:21:00,539
goodness acid goodness you might want

00:20:57,570 --> 00:21:05,759
and the results are then broadcasted

00:21:00,539 --> 00:21:08,580
back to to John this is quite nice

00:21:05,759 --> 00:21:13,169
project in my opinion I'm loving it the

00:21:08,580 --> 00:21:15,269
one thing however with the old fire

00:21:13,169 --> 00:21:17,789
based approach that there was one good

00:21:15,269 --> 00:21:21,809
thing about it whatever you do you get

00:21:17,789 --> 00:21:24,360
the response immediately the firebase

00:21:21,809 --> 00:21:26,159
client optimistically applies the change

00:21:24,360 --> 00:21:27,779
for you and you are notified about it

00:21:26,159 --> 00:21:29,909
immediately in the same even loop as you

00:21:27,779 --> 00:21:31,769
did the change with firebase

00:21:29,909 --> 00:21:34,950
transactions you have to wait a little

00:21:31,769 --> 00:21:38,639
bit until the transaction is spotted

00:21:34,950 --> 00:21:42,539
executed and you get the result back so

00:21:38,639 --> 00:21:46,049
what we would need is somehow we would

00:21:42,539 --> 00:21:48,120
need optimistically update the client

00:21:46,049 --> 00:21:54,120
state based on transactions he is trying

00:21:48,120 --> 00:21:57,179
to do and there is the last thing in the

00:21:54,120 --> 00:22:00,659
biggest one I'm not sure if one big JSON

00:21:57,179 --> 00:22:03,789
document is really the cool thing we

00:22:00,659 --> 00:22:07,779
want to store our data into

00:22:03,789 --> 00:22:10,659
oh there are several problems to it the

00:22:07,779 --> 00:22:13,299
one was validations automatically when

00:22:10,659 --> 00:22:16,210
you have to link different parts of the

00:22:13,299 --> 00:22:19,450
firebase document with some string

00:22:16,210 --> 00:22:23,080
generated ID you are losing something

00:22:19,450 --> 00:22:24,999
you can do validations right and since

00:22:23,080 --> 00:22:26,649
we have really really simple data model

00:22:24,999 --> 00:22:29,080
and really really simple and limited

00:22:26,649 --> 00:22:30,940
query language we cannot even fetch all

00:22:29,080 --> 00:22:33,999
the data we need for a certain view in

00:22:30,940 --> 00:22:36,340
one query we have to do multiple queries

00:22:33,999 --> 00:22:38,080
in multiple batches so there are

00:22:36,340 --> 00:22:40,690
multiple are round trips to server

00:22:38,080 --> 00:22:43,840
necessary just to get data from for one

00:22:40,690 --> 00:22:47,409
view so those are the limitations of the

00:22:43,840 --> 00:22:51,609
system and from Rio what I really like

00:22:47,409 --> 00:22:55,440
is data model of data make you may have

00:22:51,609 --> 00:22:57,940
heard about it before even today it's a

00:22:55,440 --> 00:23:02,320
database solution developed by cognitive

00:22:57,940 --> 00:23:04,299
company sadly it's closed source and it

00:23:02,320 --> 00:23:08,159
has real interesting data model and

00:23:04,299 --> 00:23:10,389
really simple it just consists of of

00:23:08,159 --> 00:23:13,330
entities in this case we have user

00:23:10,389 --> 00:23:15,249
entity and hidden entity each entity can

00:23:13,330 --> 00:23:18,129
have some primitive attributes such as

00:23:15,249 --> 00:23:20,440
string name of user and then the

00:23:18,129 --> 00:23:22,960
reference is between those entities so

00:23:20,440 --> 00:23:26,139
in this case user attends multiple

00:23:22,960 --> 00:23:29,519
events those references are building

00:23:26,139 --> 00:23:32,950
concept in da Tomac there is no explicit

00:23:29,519 --> 00:23:36,970
string key by which i would i would

00:23:32,950 --> 00:23:41,080
match user to even and this is really

00:23:36,970 --> 00:23:44,080
cool this is how you do queries in data

00:23:41,080 --> 00:23:48,309
making all these keywords in the middle

00:23:44,080 --> 00:23:50,440
our names of a certain references I have

00:23:48,309 --> 00:23:54,849
in the system so in this case I'm

00:23:50,440 --> 00:23:57,519
querying giving all names name which

00:23:54,849 --> 00:24:00,999
belongs to a person person who attend

00:23:57,519 --> 00:24:03,059
some event even that serve certain food

00:24:00,999 --> 00:24:07,299
which contains some ingredient

00:24:03,059 --> 00:24:09,759
ingredient with name chocolate yeah so

00:24:07,299 --> 00:24:14,139
basically basically give me all names of

00:24:09,759 --> 00:24:17,259
all chocolate eaters here and that's a

00:24:14,139 --> 00:24:17,740
really powerful query language let me

00:24:17,259 --> 00:24:19,330
guess

00:24:17,740 --> 00:24:22,300
so there is a lot of goodness in the

00:24:19,330 --> 00:24:25,809
system not only that as he also heard

00:24:22,300 --> 00:24:28,480
today that the atomic has also been weak

00:24:25,809 --> 00:24:32,290
like in browser implementation it's

00:24:28,480 --> 00:24:34,900
called data script so yeah so it's great

00:24:32,290 --> 00:24:38,650
so why don't use that to make post data

00:24:34,900 --> 00:24:42,460
script right now for our web apps and

00:24:38,650 --> 00:24:44,350
there is a problem it's that the data

00:24:42,460 --> 00:24:48,360
may query languages has poor

00:24:44,350 --> 00:24:50,980
reversibility now what do I mean by that

00:24:48,360 --> 00:24:54,820
imagine what happens inside the head of

00:24:50,980 --> 00:24:56,890
production firebase there are thousand

00:24:54,820 --> 00:25:00,190
subscribers from moved from multiple

00:24:56,890 --> 00:25:03,720
clients here thousand subscriptions and

00:25:00,190 --> 00:25:06,730
our single change come to the database

00:25:03,720 --> 00:25:08,860
what firebase must do is really quickly

00:25:06,730 --> 00:25:11,580
determine which subscriptions are

00:25:08,860 --> 00:25:13,990
affected by this change and how and by

00:25:11,580 --> 00:25:15,970
really quickly I mean really really

00:25:13,990 --> 00:25:17,890
quickly firebase cannot afford even a

00:25:15,970 --> 00:25:21,700
linear scan through all these

00:25:17,890 --> 00:25:24,220
subscriptions and luckily for firebase

00:25:21,700 --> 00:25:26,530
guys that credit language is so simple

00:25:24,220 --> 00:25:29,380
that it is possible to achieve really

00:25:26,530 --> 00:25:34,110
really quickly I just have a quick quiz

00:25:29,380 --> 00:25:38,679
for you given this change in the blue

00:25:34,110 --> 00:25:40,750
rectangle which of these four

00:25:38,679 --> 00:25:43,710
subscriptions we have here are affected

00:25:40,750 --> 00:25:43,710
by this change

00:25:50,040 --> 00:25:56,680
yeah exactly second and for it's really

00:25:54,400 --> 00:26:00,010
no brainer yeah the first and third

00:25:56,680 --> 00:26:02,070
subscription or subscribe to to

00:26:00,010 --> 00:26:05,410
something completely different that the

00:26:02,070 --> 00:26:08,890
the second and for probably will be

00:26:05,410 --> 00:26:10,780
affected by the side of change so this

00:26:08,890 --> 00:26:13,750
is a really easy thing to do however

00:26:10,780 --> 00:26:15,340
with this query if I ask you what will

00:26:13,750 --> 00:26:19,480
happen to the result of this query if

00:26:15,340 --> 00:26:22,840
some new food is served somewhere or

00:26:19,480 --> 00:26:25,170
some food get some new ingredient it's

00:26:22,840 --> 00:26:28,540
much more complicated to analyze and

00:26:25,170 --> 00:26:30,150
this is just some subset of what dynamic

00:26:28,540 --> 00:26:33,250
query language can do we introducing

00:26:30,150 --> 00:26:37,330
aggregation or negation and logical

00:26:33,250 --> 00:26:41,740
expressions here and so on yeah so this

00:26:37,330 --> 00:26:44,890
is complicated so yeah this is rather

00:26:41,740 --> 00:26:46,990
inconclusive summary I think that the

00:26:44,890 --> 00:26:49,330
reactivity is a great feature and I

00:26:46,990 --> 00:26:51,670
really love it especially when we can do

00:26:49,330 --> 00:26:53,830
it cheap and I believe we can do it

00:26:51,670 --> 00:26:57,580
cheap if we only have the right tools

00:26:53,830 --> 00:27:01,000
for it however developing these tools

00:26:57,580 --> 00:27:02,740
seems to be extremely hard job and it's

00:27:01,000 --> 00:27:06,070
because there are several sub problems

00:27:02,740 --> 00:27:08,950
which must be solved advanced it's

00:27:06,070 --> 00:27:13,650
really hard to separate these things and

00:27:08,950 --> 00:27:16,390
solve this psaltis in isolation Oh

00:27:13,650 --> 00:27:20,650
firebase graph ql real a file called

00:27:16,390 --> 00:27:23,770
atomic data all the solutions solves

00:27:20,650 --> 00:27:26,260
some part of this problem but not none

00:27:23,770 --> 00:27:29,200
of this solution solves all advanced and

00:27:26,260 --> 00:27:33,970
we need all add-ons so I think there is

00:27:29,200 --> 00:27:36,790
a great great change great opportunity

00:27:33,970 --> 00:27:41,490
in front of us and let's get to work and

00:27:36,790 --> 00:27:41,490
let's do it thank

00:27:45,140 --> 00:27:51,170
awesome thank you so much let's have a

00:27:49,200 --> 00:27:54,960
look at slider if you have some

00:27:51,170 --> 00:27:58,940
questions I'm tastic we have some spare

00:27:54,960 --> 00:28:04,650
time yet so so we can go through them oh

00:27:58,940 --> 00:28:08,010
so the clout think I see do you worry no

00:28:04,650 --> 00:28:10,620
I don't actually it's hosted in Google

00:28:08,010 --> 00:28:12,510
servers I'm already already quite

00:28:10,620 --> 00:28:18,840
dependent on Google probably I will die

00:28:12,510 --> 00:28:22,230
if Google just shut down so yeah but it

00:28:18,840 --> 00:28:26,429
to be completely honest firebase is

00:28:22,230 --> 00:28:29,700
quite simple I mean if I get really

00:28:26,429 --> 00:28:32,160
pissed off by Google I believe I could

00:28:29,700 --> 00:28:35,309
do my own version of firebase doing some

00:28:32,160 --> 00:28:39,780
I don't even need half of the features

00:28:35,309 --> 00:28:43,290
there are we actually even had project

00:28:39,780 --> 00:28:46,890
we was aiming for the same thing as far

00:28:43,290 --> 00:28:48,809
as it was called clean sink we just get

00:28:46,890 --> 00:28:50,820
tired of maintaining the things so we

00:28:48,809 --> 00:29:03,600
switch to something which is maintained

00:28:50,820 --> 00:29:05,190
for us so no no I'm not afraid yeah how

00:29:03,600 --> 00:29:07,410
is it different from using web sockets

00:29:05,190 --> 00:29:12,809
with readies pops up across however

00:29:07,410 --> 00:29:18,960
company okay oh this is actually like

00:29:12,809 --> 00:29:22,050
one layer about this this stuff 05 base

00:29:18,960 --> 00:29:25,800
is also based on web sockets it's just

00:29:22,050 --> 00:29:29,490
you have like real data base with ya

00:29:25,800 --> 00:29:31,920
more power about your resources or I

00:29:29,490 --> 00:29:34,740
don't know exactly what guarantees ready

00:29:31,920 --> 00:29:39,170
gives you but i think this more this has

00:29:34,740 --> 00:29:43,050
more power in it there is for example

00:29:39,170 --> 00:29:44,880
quite nice offline support i'm not sure

00:29:43,050 --> 00:29:46,950
about this solution if you do some

00:29:44,880 --> 00:29:49,380
changes to our local fire based client

00:29:46,950 --> 00:29:52,910
even if no connectivity when the

00:29:49,380 --> 00:29:56,640
connectivity is regained again all those

00:29:52,910 --> 00:29:58,770
all those changes you did

00:29:56,640 --> 00:30:02,390
while in offline are propagated to

00:29:58,770 --> 00:30:07,250
server and so there is a lot of all of

00:30:02,390 --> 00:30:11,340
stuff with firebase does for you and

00:30:07,250 --> 00:30:19,040
yeah I better I like reinventing

00:30:11,340 --> 00:30:22,200
reinventing the wheel whether we do

00:30:19,040 --> 00:30:25,920
store all our data on firebase yes we do

00:30:22,200 --> 00:30:28,950
for certain projects once you start

00:30:25,920 --> 00:30:31,710
using firebase there is for us there is

00:30:28,950 --> 00:30:35,940
no reason not to use it it's quick it's

00:30:31,710 --> 00:30:38,130
powerful so why not I can imagine that

00:30:35,940 --> 00:30:40,950
for certain project it may have some

00:30:38,130 --> 00:30:43,440
benefit to split your data between

00:30:40,950 --> 00:30:46,080
Samsung server part and then some some

00:30:43,440 --> 00:30:50,580
part with you like creating some some

00:30:46,080 --> 00:30:52,890
client view that would be just for for

00:30:50,580 --> 00:30:54,720
displaying data to client and that could

00:30:52,890 --> 00:30:59,280
be firebase and apart from that you can

00:30:54,720 --> 00:31:01,800
have some standard relational database

00:30:59,280 --> 00:31:12,350
you say but we are not doing it right

00:31:01,800 --> 00:31:14,850
now meteors react integration oh no I

00:31:12,350 --> 00:31:20,520
don't know how this works I know meteor

00:31:14,850 --> 00:31:24,750
a little I know they are doing they they

00:31:20,520 --> 00:31:31,440
sink database to your client based

00:31:24,750 --> 00:31:34,140
on queering block but iiii think meteor

00:31:31,440 --> 00:31:38,180
is doing quite similar thing then

00:31:34,140 --> 00:31:41,700
comparing to to what firebase is doing

00:31:38,180 --> 00:31:45,380
also the set of currencies you get /

00:31:41,700 --> 00:31:47,850
don't get looks pretty much same to me

00:31:45,380 --> 00:31:51,450
what I like about firebase is that is

00:31:47,850 --> 00:31:55,130
much more lightweight compared to meteor

00:31:51,450 --> 00:31:58,920
firebase is just database with a decent

00:31:55,130 --> 00:32:02,820
client library it is not 0 pini ated

00:31:58,920 --> 00:32:06,540
about how you should do other stuff for

00:32:02,820 --> 00:32:09,440
my point of view meteor dust too much

00:32:06,540 --> 00:32:09,440
thing at once

00:32:10,080 --> 00:32:18,850
yeah so how does it work on poor

00:32:12,820 --> 00:32:20,289
connection or offline as I said oh usual

00:32:18,850 --> 00:32:22,720
you are not even aware that you are

00:32:20,289 --> 00:32:27,640
offline you can click to the firebase

00:32:22,720 --> 00:32:32,470
the client behaves as if it was online

00:32:27,640 --> 00:32:34,480
all the changes you two are properly all

00:32:32,470 --> 00:32:37,480
the callbacks are there if you even

00:32:34,480 --> 00:32:39,340
subscribe to name of some event and then

00:32:37,480 --> 00:32:42,850
you change it while offline you still

00:32:39,340 --> 00:32:45,760
get the call back so everything works as

00:32:42,850 --> 00:32:51,039
it should but there is no connectivity

00:32:45,760 --> 00:32:55,240
you lose changes from other people from

00:32:51,039 --> 00:32:58,960
outside of the road but it's really cool

00:32:55,240 --> 00:33:00,730
that someone wrote such a client yeah

00:32:58,960 --> 00:33:03,240
you don't have to do it when you are

00:33:00,730 --> 00:33:06,909
doing your app you can just focus on

00:33:03,240 --> 00:33:10,440
your whatever brings value their product

00:33:06,909 --> 00:33:16,269
we don't have to redo the thinking part

00:33:10,440 --> 00:33:18,250
so let's do two more questions here as a

00:33:16,269 --> 00:33:19,779
service owned by Google is the open

00:33:18,250 --> 00:33:23,350
source or is there a way to run it

00:33:19,779 --> 00:33:25,330
locally no sadly no I would really love

00:33:23,350 --> 00:33:27,730
to see a project that would allow this

00:33:25,330 --> 00:33:32,880
so if anyone is in the mood for some

00:33:27,730 --> 00:33:38,429
packing I'm totally in let's create this

00:33:32,880 --> 00:33:38,429
and let's create the open source and

00:33:46,320 --> 00:33:58,630
yeah I think we already compared it to

00:33:49,539 --> 00:34:09,960
so we're here how do we write our tests

00:33:58,630 --> 00:34:09,960
oh well we have some tests which

00:34:10,210 --> 00:34:18,829
sorry quote here someplace which can be

00:34:16,399 --> 00:34:21,289
run without firebase that's easy this is

00:34:18,829 --> 00:34:23,899
the part when you just update the

00:34:21,289 --> 00:34:25,549
upstate with with some daytime and see

00:34:23,899 --> 00:34:29,779
see what the direction was was really

00:34:25,549 --> 00:34:33,349
applied how have you want it and yeah I

00:34:29,779 --> 00:34:36,079
have written some tests which can run

00:34:33,349 --> 00:34:39,559
only online so i have this testing

00:34:36,079 --> 00:34:41,889
firebase no i won't show it now i'll

00:34:39,559 --> 00:34:44,690
show too if you are interested lighter I

00:34:41,889 --> 00:34:47,839
simply have some production firebase and

00:34:44,690 --> 00:34:50,240
yeah most of the time I have my internet

00:34:47,839 --> 00:34:53,599
connections with no problem even tools

00:34:50,240 --> 00:34:56,779
such as Circle C I you can connect from

00:34:53,599 --> 00:34:59,569
Circle C I to firebase and the pests are

00:34:56,779 --> 00:35:03,529
running with existing firebase instance

00:34:59,569 --> 00:35:06,049
so it's not problem everything is online

00:35:03,529 --> 00:35:07,940
today so this works great okay so i

00:35:06,049 --> 00:35:10,009
think that's it thank you very much for

00:35:07,940 --> 00:35:12,759
retention i will love to discuss these

00:35:10,009 --> 00:35:12,759

YouTube URL: https://www.youtube.com/watch?v=EQOX19v_apA


