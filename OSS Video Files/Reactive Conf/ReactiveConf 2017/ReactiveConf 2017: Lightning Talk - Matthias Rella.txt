Title: ReactiveConf 2017: Lightning Talk - Matthias Rella
Publication date: 2017-11-24
Playlist: ReactiveConf 2017
Description: 
	Main stage talk

https://reactiveconf.com/
25th - 27th October 2017, Bratislava, Slovakia
Captions: 
	00:00:02,040 --> 00:00:07,440
[Music]

00:00:19,830 --> 00:00:25,200
hi everybody my name is Matias I come

00:00:23,700 --> 00:00:28,410
from lower austria where i live with my

00:00:25,200 --> 00:00:29,070
wife and my two kids just want to greet

00:00:28,410 --> 00:00:31,470
them shortly

00:00:29,070 --> 00:00:35,400
all I'm gonna leave they're probably

00:00:31,470 --> 00:00:41,070
watching the livestream so I'm a web

00:00:35,400 --> 00:00:44,040
developer using elm in production and I

00:00:41,070 --> 00:00:47,040
want to show you today how easy it is to

00:00:44,040 --> 00:00:50,670
build a visual and reactive application

00:00:47,040 --> 00:00:54,229
in L and the showcase here is building a

00:00:50,670 --> 00:00:58,350
framework for crazy-like presentations

00:00:54,229 --> 00:01:00,059
Prezi is a presentation software where

00:00:58,350 --> 00:01:03,600
you draw all your presentation content

00:01:00,059 --> 00:01:05,460
on one big page and you define frames

00:01:03,600 --> 00:01:08,490
and regions where you want to zoom in to

00:01:05,460 --> 00:01:14,040
where you want to move to in order to go

00:01:08,490 --> 00:01:17,670
through your presentation so what's the

00:01:14,040 --> 00:01:21,270
big picture of Elm the ARM architecture

00:01:17,670 --> 00:01:23,970
is a model view controller architecture

00:01:21,270 --> 00:01:26,520
which is event-driven so we have two

00:01:23,970 --> 00:01:30,150
events from the outside from the user or

00:01:26,520 --> 00:01:33,480
from the web we map them into our

00:01:30,150 --> 00:01:35,760
application through subscriptions map

00:01:33,480 --> 00:01:39,600
them to a message type posted message

00:01:35,760 --> 00:01:42,030
type on into the update function which

00:01:39,600 --> 00:01:45,240
updates our model which is then rendered

00:01:42,030 --> 00:01:47,340
by the view and presented to the user so

00:01:45,240 --> 00:01:50,280
how would we build a Prezi live

00:01:47,340 --> 00:01:54,090
presentation framework using this

00:01:50,280 --> 00:01:57,090
architecture so first we define our

00:01:54,090 --> 00:01:59,790
model we need a list of frames and

00:01:57,090 --> 00:02:01,670
there's always one current frame the

00:01:59,790 --> 00:02:05,120
frame we are currently viewing on and

00:02:01,670 --> 00:02:07,350
the second thing we need is the

00:02:05,120 --> 00:02:09,720
transition state so whenever we are

00:02:07,350 --> 00:02:11,670
moving from one frame to the other we

00:02:09,720 --> 00:02:15,120
have an transition so this is a 0 1

00:02:11,670 --> 00:02:17,730
relationship what does this look like in

00:02:15,120 --> 00:02:18,690
Elm code so for this case we use a

00:02:17,730 --> 00:02:21,569
record type

00:02:18,690 --> 00:02:24,390
we have frames the list of frames the

00:02:21,569 --> 00:02:26,670
current frame and the transition state

00:02:24,390 --> 00:02:29,940
and that transition state is of type

00:02:26,670 --> 00:02:32,750
maybe transition so this one lets us

00:02:29,940 --> 00:02:35,960
define let us explicitly

00:02:32,750 --> 00:02:38,300
cero one relationship in elm so any null

00:02:35,960 --> 00:02:40,700
point exception is eliminated at runtime

00:02:38,300 --> 00:02:45,170
and actually any runtime exception is

00:02:40,700 --> 00:02:48,380
limited with elm okay now what does if

00:02:45,170 --> 00:02:51,709
you look like here we are using SVG for

00:02:48,380 --> 00:02:53,300
present presenting our content and SVG

00:02:51,709 --> 00:02:55,760
has this really useful

00:02:53,300 --> 00:02:58,550
attribute the few box which lets us

00:02:55,760 --> 00:03:01,220
define a frame within our SVG drawing

00:02:58,550 --> 00:03:03,680
which we want to be scaled up to our

00:03:01,220 --> 00:03:06,380
viewport and that's what it looks like

00:03:03,680 --> 00:03:09,560
in HTML we have two SPG element give it

00:03:06,380 --> 00:03:10,910
this view box attribute and the XY

00:03:09,560 --> 00:03:13,640
coordinates in the width and height

00:03:10,910 --> 00:03:16,130
dimensions and within the SVG element we

00:03:13,640 --> 00:03:19,070
have our presentation content what does

00:03:16,130 --> 00:03:22,580
it look like in Elm code don't be

00:03:19,070 --> 00:03:25,160
frightened that's the few function it

00:03:22,580 --> 00:03:28,700
gets a model as its input and outputs

00:03:25,160 --> 00:03:32,180
HTML and within the view function we

00:03:28,700 --> 00:03:35,000
create this SVG element so we say SVG

00:03:32,180 --> 00:03:37,820
and give it a list of attributes the

00:03:35,000 --> 00:03:40,820
width height and a few box attribute the

00:03:37,820 --> 00:03:44,209
view bird box attribute gets the values

00:03:40,820 --> 00:03:46,280
from this current frame and in the lower

00:03:44,209 --> 00:03:52,100
part of this function we add our

00:03:46,280 --> 00:03:54,459
presentation content okay now for the

00:03:52,100 --> 00:03:57,500
most important part of this presentation

00:03:54,459 --> 00:04:00,080
how do we make it move how do we make it

00:03:57,500 --> 00:04:03,070
reactive actually and that goes through

00:04:00,080 --> 00:04:06,500
subscriptions so first we need to define

00:04:03,070 --> 00:04:09,440
what kind of messages we expect in our

00:04:06,500 --> 00:04:11,299
application here we expect fourth this

00:04:09,440 --> 00:04:15,019
is going to use a one's to move forward

00:04:11,299 --> 00:04:16,910
in his presentation and tick this we

00:04:15,019 --> 00:04:18,410
need when we need to animate the

00:04:16,910 --> 00:04:22,729
transition so when we move from one

00:04:18,410 --> 00:04:25,640
frame to the other and float here is the

00:04:22,729 --> 00:04:29,810
time Delta between two animation frames

00:04:25,640 --> 00:04:35,660
of the browser so having these messages

00:04:29,810 --> 00:04:38,090
defined we define our subscriptions so

00:04:35,660 --> 00:04:40,550
here we want to subscribe to mouse

00:04:38,090 --> 00:04:42,500
clicks this is what Mouse dot clicks

00:04:40,550 --> 00:04:45,530
does so whenever the user clicks

00:04:42,500 --> 00:04:46,460
anywhere on the screen we map that it

00:04:45,530 --> 00:04:49,639
went to the

00:04:46,460 --> 00:04:54,440
fourth message and in the case we have a

00:04:49,639 --> 00:04:57,889
transition then we subscribe to the

00:04:54,440 --> 00:05:01,039
animation frame dot devs subscription

00:04:57,889 --> 00:05:05,330
which hooks into the browser's window

00:05:01,039 --> 00:05:07,550
dot requestanimationframe and gets the

00:05:05,330 --> 00:05:12,650
time delta from there and passes it on

00:05:07,550 --> 00:05:13,639
to our tick message so we can write very

00:05:12,650 --> 00:05:17,210
declaratively

00:05:13,639 --> 00:05:22,520
our our subscriptions to two events in

00:05:17,210 --> 00:05:23,780
Elm so having these two messages final

00:05:22,520 --> 00:05:26,000
thing we need to define is the update

00:05:23,780 --> 00:05:29,240
function so what does the update

00:05:26,000 --> 00:05:32,060
function signature look like we have the

00:05:29,240 --> 00:05:34,940
message coming in the current modern

00:05:32,060 --> 00:05:37,310
state and the output an updated model

00:05:34,940 --> 00:05:39,830
state and in our update function we

00:05:37,310 --> 00:05:42,229
evaluate this message so in case of

00:05:39,830 --> 00:05:43,849
Forth we do something and in case of

00:05:42,229 --> 00:05:46,550
tick we do something I'm not going into

00:05:43,849 --> 00:05:48,050
detail here it's just pulling out the

00:05:46,550 --> 00:05:51,530
first frame from the list of frames

00:05:48,050 --> 00:05:54,949
putting it into the transition state and

00:05:51,530 --> 00:05:57,409
in case of tick we checking Easter

00:05:54,949 --> 00:06:00,860
already a transition going on we update

00:05:57,409 --> 00:06:04,460
the progress value and finally update

00:06:00,860 --> 00:06:06,590
the current frame doing some math

00:06:04,460 --> 00:06:09,349
applying this new progress value and

00:06:06,590 --> 00:06:11,479
stuff so finally that's all we need to

00:06:09,349 --> 00:06:13,820
do in order to build pretty light

00:06:11,479 --> 00:06:16,849
presentations in Elm the final thing we

00:06:13,820 --> 00:06:21,259
need to do is to wire all those parts up

00:06:16,849 --> 00:06:22,969
and that's what happens here in HTML dot

00:06:21,259 --> 00:06:27,070
program this is a function coming from

00:06:22,969 --> 00:06:29,360
Elms from one of em's core libraries

00:06:27,070 --> 00:06:31,070
calling them into the main in the main

00:06:29,360 --> 00:06:33,199
function of Elm the main function is the

00:06:31,070 --> 00:06:35,389
main entry point of any Elm program and

00:06:33,199 --> 00:06:38,180
here in HTML the program let me start

00:06:35,389 --> 00:06:41,719
from the bottom we define our

00:06:38,180 --> 00:06:44,960
subscription function and a few function

00:06:41,719 --> 00:06:46,789
we set our update function here we need

00:06:44,960 --> 00:06:48,800
to wrap it a little bit um and not

00:06:46,789 --> 00:06:52,610
explain this in detail viruses needed

00:06:48,800 --> 00:06:55,490
and finally in it is our initial model

00:06:52,610 --> 00:06:57,469
state where we want our application to

00:06:55,490 --> 00:06:59,960
start from this might look something

00:06:57,469 --> 00:07:00,720
like this for example we have a current

00:06:59,960 --> 00:07:03,360
frame with

00:07:00,720 --> 00:07:04,680
these values the transition is set to

00:07:03,360 --> 00:07:06,450
nothing because in the beginning we

00:07:04,680 --> 00:07:08,580
don't have any transitions of course and

00:07:06,450 --> 00:07:13,740
we have our list of friends that's all

00:07:08,580 --> 00:07:15,600
we need to do so event more interested

00:07:13,740 --> 00:07:17,610
in this stuff I've created a little web

00:07:15,600 --> 00:07:21,360
app where you can run your own pretty

00:07:17,610 --> 00:07:23,580
light presentation with with ease you

00:07:21,360 --> 00:07:25,260
just have to create a vector graphics

00:07:23,580 --> 00:07:26,760
file put it in there and it runs you

00:07:25,260 --> 00:07:28,680
don't have to code actually anything but

00:07:26,760 --> 00:07:36,660
you can also find all the links and

00:07:28,680 --> 00:07:38,970
sources there thank you not yes thank

00:07:36,660 --> 00:07:48,050
you very much let's look into slide oh

00:07:38,970 --> 00:07:51,480
if we have a question or not or not or

00:07:48,050 --> 00:07:54,050
we can do the analog old-school way of

00:07:51,480 --> 00:07:58,070
if you raise your hand and have a

00:07:54,050 --> 00:08:08,370
impressive voice you can ask a question

00:07:58,070 --> 00:08:11,040
yes no no of course praise it does way

00:08:08,370 --> 00:08:12,600
way more things to be performant and to

00:08:11,040 --> 00:08:15,210
have it really useful for production

00:08:12,600 --> 00:08:17,910
this is a showcase ok it's not meant for

00:08:15,210 --> 00:08:20,700
so the question was about four little

00:08:17,910 --> 00:08:22,710
presentations like this one this one is

00:08:20,700 --> 00:08:26,850
mating with this framework by the way I

00:08:22,710 --> 00:08:29,729
haven't mentioned it actually yeah well

00:08:26,850 --> 00:08:31,740
awesome ideas thank you very much

00:08:29,729 --> 00:08:35,240
teammate meet me at the Elm workshop

00:08:31,740 --> 00:08:35,240
tomorrow we'll also be there

00:08:40,690 --> 00:08:42,750

YouTube URL: https://www.youtube.com/watch?v=6veWFNiub9c


