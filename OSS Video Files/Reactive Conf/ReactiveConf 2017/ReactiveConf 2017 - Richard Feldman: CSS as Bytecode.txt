Title: ReactiveConf 2017 - Richard Feldman: CSS as Bytecode
Publication date: 2017-11-20
Playlist: ReactiveConf 2017
Description: 
	Main stage talk

https://reactiveconf.com/
25th - 27th October 2017, Bratislava, Slovakia
Captions: 
	00:00:02,020 --> 00:00:08,639
[Music]

00:00:14,570 --> 00:00:19,460
all right welcome this is CSS as

00:00:16,880 --> 00:00:21,260
bytecode I'm Richard Feldman so first of

00:00:19,460 --> 00:00:23,750
all hello everyone it's lava good to be

00:00:21,260 --> 00:00:25,700
back good to see everybody

00:00:23,750 --> 00:00:29,119
so one start off with a quick question

00:00:25,700 --> 00:00:31,730
so let's imagine that a designer comes

00:00:29,119 --> 00:00:34,580
to you with this glorious mock-up this

00:00:31,730 --> 00:00:35,840
extremely complicated web page and just

00:00:34,580 --> 00:00:37,730
imagine that you're sitting in front of

00:00:35,840 --> 00:00:39,800
your laptop with your fingers above your

00:00:37,730 --> 00:00:41,660
keys and you're thinking okay I'm gonna

00:00:39,800 --> 00:00:43,879
start implementing this how many you go

00:00:41,660 --> 00:00:46,070
quick show of hands could start

00:00:43,879 --> 00:00:49,070
implementing this this horizontally and

00:00:46,070 --> 00:00:50,660
vertically centered box without looking

00:00:49,070 --> 00:00:56,300
anything up just immediately start

00:00:50,660 --> 00:00:58,969
typing okay that's like as yeah single

00:00:56,300 --> 00:01:00,260
digit percentage maybe and like keep in

00:00:58,969 --> 00:01:00,949
mind this is this is a roomful of

00:01:00,260 --> 00:01:02,600
experts

00:01:00,949 --> 00:01:04,940
right I mean we are front-end developers

00:01:02,600 --> 00:01:07,070
this is what we do and when I'm using

00:01:04,940 --> 00:01:09,259
like Google slides which is what I use

00:01:07,070 --> 00:01:10,850
to make this talk like this is the UI

00:01:09,259 --> 00:01:12,350
for horizontally and vertically

00:01:10,850 --> 00:01:13,820
centering things I'm like if I wanted

00:01:12,350 --> 00:01:16,550
horizonte centered there aren't even any

00:01:13,820 --> 00:01:18,170
text in these UI just click this icon if

00:01:16,550 --> 00:01:22,040
I wanted vertically centered I click

00:01:18,170 --> 00:01:23,570
this icon so so why is this different I

00:01:22,040 --> 00:01:25,880
mean and and what are the consequences

00:01:23,570 --> 00:01:28,040
of this but there's sort of like a lot

00:01:25,880 --> 00:01:30,350
of things like this in CSS were these

00:01:28,040 --> 00:01:32,630
things that feel like they ought to be

00:01:30,350 --> 00:01:34,880
straightforward turn out not to be and

00:01:32,630 --> 00:01:37,579
they sort of accumulate and they end up

00:01:34,880 --> 00:01:39,829
with a lot of frustration this is a this

00:01:37,579 --> 00:01:41,150
is a sentiment that that quite a lot of

00:01:39,829 --> 00:01:42,860
people seem to resonate with at least

00:01:41,150 --> 00:01:45,259
based on the number of retweets and

00:01:42,860 --> 00:01:48,770
lights and number of people laughing in

00:01:45,259 --> 00:01:50,350
the audience right now and so I think

00:01:48,770 --> 00:01:52,790
it's a reasonable question to ask like

00:01:50,350 --> 00:01:54,380
why what why is there so much

00:01:52,790 --> 00:01:57,920
frustration out there why are so many

00:01:54,380 --> 00:02:01,009
people frustrated by using CSS so to lay

00:01:57,920 --> 00:02:02,390
out their websites and I learned

00:02:01,009 --> 00:02:03,890
something about this and I think I have

00:02:02,390 --> 00:02:05,899
a plausible answer to this question

00:02:03,890 --> 00:02:08,810
which is just that CSS was never

00:02:05,899 --> 00:02:11,120
intended to create user interfaces

00:02:08,810 --> 00:02:12,650
that's not what it was designed for and

00:02:11,120 --> 00:02:14,530
I kind of found this out when I was

00:02:12,650 --> 00:02:16,519
reading about the history of CSS in this

00:02:14,530 --> 00:02:19,370
extremely entertaining article the

00:02:16,519 --> 00:02:21,709
languages that almost became CSS by Zack

00:02:19,370 --> 00:02:23,209
Blum if you've never read this article I

00:02:21,709 --> 00:02:25,340
highly recommend checking it out because

00:02:23,209 --> 00:02:26,480
I kind of talks about it just goes to

00:02:25,340 --> 00:02:28,160
the history of like how did we end up

00:02:26,480 --> 00:02:30,710
with with the layout and stylings

00:02:28,160 --> 00:02:32,920
that we did and he starts with talking

00:02:30,710 --> 00:02:35,270
about back in 1991 Sir Tim berners-lee

00:02:32,920 --> 00:02:38,960
introduces the hypertext markup language

00:02:35,270 --> 00:02:40,640
which had an extremely fancy logo and

00:02:38,960 --> 00:02:43,310
this was just for content like it was

00:02:40,640 --> 00:02:44,780
for writing semantic content that you

00:02:43,310 --> 00:02:46,460
would send out to people over the web

00:02:44,780 --> 00:02:48,500
and that was all it was no styling

00:02:46,460 --> 00:02:49,810
whatsoever in the initial draft of HTML

00:02:48,500 --> 00:02:52,040
it's just a way to structure content

00:02:49,810 --> 00:02:54,590
then at some point people got the site's

00:02:52,040 --> 00:02:56,870
yeah hey maybe this content might like

00:02:54,590 --> 00:02:58,580
to be styled which you think yeah that's

00:02:56,870 --> 00:03:00,230
pretty reasonable idea right see this

00:02:58,580 --> 00:03:03,410
big wall of text it'd be nicer if it

00:03:00,230 --> 00:03:04,610
were styled said yeah you know but let's

00:03:03,410 --> 00:03:06,290
take it a step further we got this good

00:03:04,610 --> 00:03:08,300
idea we're gonna separate the content

00:03:06,290 --> 00:03:09,920
from the presentation we're gonna do

00:03:08,300 --> 00:03:11,570
couple these it's gonna be a separation

00:03:09,920 --> 00:03:14,990
of concerns and here's why we're gonna

00:03:11,570 --> 00:03:16,880
do that the idea is the authors are

00:03:14,990 --> 00:03:19,880
gonna create the content and describe it

00:03:16,880 --> 00:03:22,370
using HTML and then when it arrives in

00:03:19,880 --> 00:03:23,840
my browser I'm going to style it like

00:03:22,370 --> 00:03:25,880
the end users are gonna write style

00:03:23,840 --> 00:03:27,890
sheets to style the content because hey

00:03:25,880 --> 00:03:29,210
what if I like a different font than

00:03:27,890 --> 00:03:30,470
somebody else likes I want to see my

00:03:29,210 --> 00:03:32,360
articles in that font I like different

00:03:30,470 --> 00:03:33,920
colors like maybe I want to use

00:03:32,360 --> 00:03:35,990
different colors for some articles and

00:03:33,920 --> 00:03:38,540
different yeah like this is this is the

00:03:35,990 --> 00:03:40,130
idea this was the design goal so we've

00:03:38,540 --> 00:03:41,780
sort of like retcon to this thing that

00:03:40,130 --> 00:03:43,850
like the separation of concerns was for

00:03:41,780 --> 00:03:45,380
programmers but it wasn't like if you

00:03:43,850 --> 00:03:47,360
look back like yet the whole idea was

00:03:45,380 --> 00:03:48,709
that the separation of concerns was

00:03:47,360 --> 00:03:50,870
because there were gonna be different

00:03:48,709 --> 00:03:53,930
people doing the content authoring from

00:03:50,870 --> 00:03:55,310
the people doing the styling so this is

00:03:53,930 --> 00:03:57,230
the idea and there were these proposals

00:03:55,310 --> 00:03:59,270
for how to describe these these

00:03:57,230 --> 00:04:02,600
user-defined style sheets this was one

00:03:59,270 --> 00:04:04,550
pwp that's not what we ended up with

00:04:02,600 --> 00:04:06,530
there was another one called fossee

00:04:04,550 --> 00:04:09,140
which is like very XML flavored like a

00:04:06,530 --> 00:04:11,030
little bit later there was d ssssss I'll

00:04:09,140 --> 00:04:14,390
out there's like a thousand s is in

00:04:11,030 --> 00:04:15,440
there this is kind of Lisp looking and

00:04:14,390 --> 00:04:16,220
there were also some people who thought

00:04:15,440 --> 00:04:19,190
this was a bad idea

00:04:16,220 --> 00:04:20,780
so here's somebody this quote style

00:04:19,190 --> 00:04:22,490
sheets are an artificial construct

00:04:20,780 --> 00:04:24,200
inflicted on us because of the whole non

00:04:22,490 --> 00:04:26,300
presentation philosophy we've been using

00:04:24,200 --> 00:04:28,010
I find it somewhat reassuring to know

00:04:26,300 --> 00:04:29,330
that people still argued angrily on the

00:04:28,010 --> 00:04:31,700
internet before like Twitter and reddit

00:04:29,330 --> 00:04:33,380
this is cool is 1994 I mean we you know

00:04:31,700 --> 00:04:36,530
we've been doing this stuff for longer

00:04:33,380 --> 00:04:38,270
than I realized and so this was like a

00:04:36,530 --> 00:04:40,160
controversial thing this was not like Oh

00:04:38,270 --> 00:04:41,370
CSS obviously I mean like for us it's

00:04:40,160 --> 00:04:43,290
easy to you know

00:04:41,370 --> 00:04:44,970
have been become accustomed to this

00:04:43,290 --> 00:04:46,260
being the way that always was but this

00:04:44,970 --> 00:04:49,139
wasn't the way that it always was this

00:04:46,260 --> 00:04:51,449
is just where we ended up after in 1996

00:04:49,139 --> 00:04:54,210
browsers sort of ended up standardizing

00:04:51,449 --> 00:04:56,430
on CSS that's that's what they decided

00:04:54,210 --> 00:04:59,520
to go with as the way for these user

00:04:56,430 --> 00:05:01,050
defined style sheets so a success great

00:04:59,520 --> 00:05:04,410
now end users could finally style

00:05:01,050 --> 00:05:08,400
content mission accomplished okay

00:05:04,410 --> 00:05:10,560
fast-forward 20 years to the present CSS

00:05:08,400 --> 00:05:13,199
being I guess it's 21 years now css3

00:05:10,560 --> 00:05:15,780
1996 and now the web has become the

00:05:13,199 --> 00:05:18,270
biggest user interface delivery platform

00:05:15,780 --> 00:05:20,190
in history so this is what the web is

00:05:18,270 --> 00:05:21,560
sort of like best at I mean yes there's

00:05:20,190 --> 00:05:23,400
definitely still plenty of content

00:05:21,560 --> 00:05:26,520
granted it's being styled by

00:05:23,400 --> 00:05:27,930
professionals not by end-users and but

00:05:26,520 --> 00:05:29,310
but really the thing that's sort of like

00:05:27,930 --> 00:05:30,830
made the web take off is the fact that

00:05:29,310 --> 00:05:33,300
it turns out to be a fantastic

00:05:30,830 --> 00:05:35,729
application delivery platform the most

00:05:33,300 --> 00:05:37,620
successful one in history so what CSS

00:05:35,729 --> 00:05:39,380
was originally designed for was end

00:05:37,620 --> 00:05:41,280
users styling the content that they read

00:05:39,380 --> 00:05:42,810
and if you think about it like in that

00:05:41,280 --> 00:05:44,430
system like what why would you bother

00:05:42,810 --> 00:05:46,680
making it easy to horizontally and

00:05:44,430 --> 00:05:48,270
vertically senator senator content like

00:05:46,680 --> 00:05:49,320
imagine the last time you were reading

00:05:48,270 --> 00:05:50,760
an article and like right in the middle

00:05:49,320 --> 00:05:51,930
of the article is like boom on your

00:05:50,760 --> 00:05:53,160
screen there's something that's like

00:05:51,930 --> 00:05:55,320
vertically and horizontally centered

00:05:53,160 --> 00:05:56,700
it'd be weird like when you're reading a

00:05:55,320 --> 00:05:58,050
block of text you just care about the

00:05:56,700 --> 00:06:00,389
flow from left to right and top to

00:05:58,050 --> 00:06:02,490
bottom or right to left as the case may

00:06:00,389 --> 00:06:04,590
be depending on your language but but

00:06:02,490 --> 00:06:07,169
this is not really something that comes

00:06:04,590 --> 00:06:09,300
up in that use case and there's a lot of

00:06:07,169 --> 00:06:10,560
things like this where there's some set

00:06:09,300 --> 00:06:12,060
of things that you really want if you're

00:06:10,560 --> 00:06:13,380
building user interfaces there's a

00:06:12,060 --> 00:06:15,240
completely different set of things that

00:06:13,380 --> 00:06:17,250
you want if you're trying to design for

00:06:15,240 --> 00:06:18,870
these design goals of separating the

00:06:17,250 --> 00:06:21,360
people who are writing the content from

00:06:18,870 --> 00:06:23,130
the people who are styling it so as we

00:06:21,360 --> 00:06:24,270
now know 20 years later this is not

00:06:23,130 --> 00:06:27,240
actually something that a lot of people

00:06:24,270 --> 00:06:28,560
want so much that in facts like some

00:06:27,240 --> 00:06:30,389
browsers have been taking this out like

00:06:28,560 --> 00:06:32,220
they've removed the ability to have and

00:06:30,389 --> 00:06:33,539
user customized style sheets in the

00:06:32,220 --> 00:06:35,250
browser at all and you actually have to

00:06:33,539 --> 00:06:38,700
install an extension if you want to be

00:06:35,250 --> 00:06:39,900
able to do that so that was what it was

00:06:38,700 --> 00:06:41,970
designed for and then what it actually

00:06:39,900 --> 00:06:44,220
ended up being used for is creators

00:06:41,970 --> 00:06:47,190
styling content and of course building

00:06:44,220 --> 00:06:50,159
user interfaces so we have somewhat of a

00:06:47,190 --> 00:06:51,360
similar situation when when you think

00:06:50,159 --> 00:06:53,370
about like what we're all this

00:06:51,360 --> 00:06:55,230
frustration is coming from with with

00:06:53,370 --> 00:06:58,110
JavaScript from 1995

00:06:55,230 --> 00:06:59,910
so 1985 JavaScript's created a famously

00:06:58,110 --> 00:07:01,740
the story goes that the Brendan Eich

00:06:59,910 --> 00:07:02,880
designed it in 10 days and what he was

00:07:01,740 --> 00:07:05,190
doing in those 10 days is he was

00:07:02,880 --> 00:07:07,050
designing it to build gigantic

00:07:05,190 --> 00:07:08,400
multibillion-dollar web apps that was

00:07:07,050 --> 00:07:11,370
what he knew that JavaScript would be

00:07:08,400 --> 00:07:12,600
used for no that was that was not the

00:07:11,370 --> 00:07:13,980
plan but that was what ended up

00:07:12,600 --> 00:07:15,390
happening again because the web turned

00:07:13,980 --> 00:07:17,040
out to be such a great delivery platform

00:07:15,390 --> 00:07:18,390
for this but that was not what it was

00:07:17,040 --> 00:07:20,610
designed for it was just designed to

00:07:18,390 --> 00:07:22,680
make like basic real time interactivity

00:07:20,610 --> 00:07:25,050
the alternative was like plugins like

00:07:22,680 --> 00:07:26,430
Java applets these these really

00:07:25,050 --> 00:07:27,780
heavyweight things it was designed to be

00:07:26,430 --> 00:07:30,570
something lightweight and kind of kind

00:07:27,780 --> 00:07:32,460
of easy it was not intended for the

00:07:30,570 --> 00:07:35,340
these enormous code bases that we now

00:07:32,460 --> 00:07:37,020
have but we've actually ended up

00:07:35,340 --> 00:07:38,430
figuring out some ways that we can solve

00:07:37,020 --> 00:07:40,350
these problems for ourselves this sort

00:07:38,430 --> 00:07:42,900
of like design goal mismatch with things

00:07:40,350 --> 00:07:44,430
like compiled to j/s so we now have many

00:07:42,900 --> 00:07:47,460
tools which compiled to j/s while

00:07:44,430 --> 00:07:48,690
keeping the familiar JS semantics so we

00:07:47,460 --> 00:07:50,160
have things like CoffeeScript so

00:07:48,690 --> 00:07:52,590
CoffeeScript was really popular for a

00:07:50,160 --> 00:07:53,910
long time right CoffeeScript code run it

00:07:52,590 --> 00:07:54,990
through a compiler end up with

00:07:53,910 --> 00:07:57,060
JavaScript that you hand off to the

00:07:54,990 --> 00:07:58,920
browser that kind of got replaced by a

00:07:57,060 --> 00:08:01,080
different compile to j a solution babel

00:07:58,920 --> 00:08:04,050
which is compiling a future speck of j s

00:08:01,080 --> 00:08:05,970
or the current spec of j s into legacy

00:08:04,050 --> 00:08:08,280
javascript for that older browsers can

00:08:05,970 --> 00:08:09,840
support same idea just compile to j s

00:08:08,280 --> 00:08:11,190
and of course we have things like

00:08:09,840 --> 00:08:13,860
typescript that are getting more popular

00:08:11,190 --> 00:08:15,270
which are compiled to j s still same j s

00:08:13,860 --> 00:08:16,980
semantics like all of your javascript

00:08:15,270 --> 00:08:18,570
knowledge very much directly translates

00:08:16,980 --> 00:08:19,800
to using any of these three but

00:08:18,570 --> 00:08:22,560
typescript adds things like a type

00:08:19,800 --> 00:08:25,170
checker and some other niceties we've

00:08:22,560 --> 00:08:27,180
also seen more ambitious compiled at JS

00:08:25,170 --> 00:08:29,130
projects so these are compiled to j s

00:08:27,180 --> 00:08:31,170
projects that have no semantic relation

00:08:29,130 --> 00:08:32,460
to javascript so we've seen a couple of

00:08:31,170 --> 00:08:33,750
these of the conference first closure

00:08:32,460 --> 00:08:35,430
script David Nolan talked about that

00:08:33,750 --> 00:08:38,310
yesterday and see a little bit of reason

00:08:35,430 --> 00:08:40,349
ml later today Jared Forsyth and me

00:08:38,310 --> 00:08:41,849
talked about Elam

00:08:40,349 --> 00:08:43,229
so these are languages where they're

00:08:41,849 --> 00:08:45,000
saying you know what we don't actually

00:08:43,229 --> 00:08:47,700
have a semantic relationship to

00:08:45,000 --> 00:08:49,500
JavaScript to to us javascript is byte

00:08:47,700 --> 00:08:51,210
code it's something that we use purely

00:08:49,500 --> 00:08:53,010
as a compilation target because we want

00:08:51,210 --> 00:08:54,510
to get stuff done not because we

00:08:53,010 --> 00:08:57,120
actually want to embrace the original

00:08:54,510 --> 00:08:59,370
design of JavaScript itself so this idea

00:08:57,120 --> 00:09:02,040
of JavaScript as bytecode is what these

00:08:59,370 --> 00:09:04,080
languages are doing similarly we also

00:09:02,040 --> 00:09:06,390
have compiled CSS solutions that make

00:09:04,080 --> 00:09:07,800
CSS a little bit nicer so we have again

00:09:06,390 --> 00:09:09,400
the many of these things that sort of

00:09:07,800 --> 00:09:11,590
keep CSS semantics in

00:09:09,400 --> 00:09:13,300
tact so like SAS for example if you know

00:09:11,590 --> 00:09:14,710
CSS a lot of that knowledge is gonna

00:09:13,300 --> 00:09:15,610
translate to SAS but pretty much all of

00:09:14,710 --> 00:09:18,040
it

00:09:15,610 --> 00:09:20,350
same thing with jss which was also at

00:09:18,040 --> 00:09:22,480
the conference you know they're adding

00:09:20,350 --> 00:09:24,520
additional capabilities different API is

00:09:22,480 --> 00:09:26,950
different ways of presenting CSS but at

00:09:24,520 --> 00:09:28,840
the end of the day ultimately it's

00:09:26,950 --> 00:09:30,870
incumbent on you to have that CSS

00:09:28,840 --> 00:09:32,050
knowledge to be able to use these tools

00:09:30,870 --> 00:09:35,050
okay

00:09:32,050 --> 00:09:37,630
what about something that has no

00:09:35,050 --> 00:09:40,570
relation to CSS what about something

00:09:37,630 --> 00:09:43,210
that says CSS is just a compilation

00:09:40,570 --> 00:09:44,530
target it's just byte code like these

00:09:43,210 --> 00:09:45,460
languages that are doing the same thing

00:09:44,530 --> 00:09:49,900
for JavaScript

00:09:45,460 --> 00:09:52,720
what goes in that box well let me

00:09:49,900 --> 00:09:54,730
introduce you to style elements so style

00:09:52,720 --> 00:09:57,250
elements is a library created by Matt

00:09:54,730 --> 00:10:00,760
Griffith and he introduced it at Elm

00:09:57,250 --> 00:10:02,860
Europe last year in Paris and this is a

00:10:00,760 --> 00:10:05,830
library that is written in Elm didn't

00:10:02,860 --> 00:10:08,740
have to be but you know it was and it is

00:10:05,830 --> 00:10:12,160
it compiles to JavaScript the Elm and

00:10:08,740 --> 00:10:15,040
CSS and dom there was a complete user

00:10:12,160 --> 00:10:16,450
interface abstraction like literally it

00:10:15,040 --> 00:10:17,800
is conceivably possible that someone

00:10:16,450 --> 00:10:20,170
could use this library without knowing

00:10:17,800 --> 00:10:22,360
JavaScript without knowing CSS without

00:10:20,170 --> 00:10:23,980
even knowing how the Dom works and still

00:10:22,360 --> 00:10:26,170
make a completely functional user

00:10:23,980 --> 00:10:29,020
interface that works and can be deployed

00:10:26,170 --> 00:10:31,330
on the web that's the dream and it's

00:10:29,020 --> 00:10:33,190
reality and this is done using clean

00:10:31,330 --> 00:10:35,140
slate semantics like really going back

00:10:33,190 --> 00:10:37,060
to the drawing board and saying not how

00:10:35,140 --> 00:10:39,520
can I translate this concept from CSS

00:10:37,060 --> 00:10:41,230
and make it nicer but rather forget CSS

00:10:39,520 --> 00:10:43,360
forget JavaScript forget all of that and

00:10:41,230 --> 00:10:44,830
just say I want to build user interfaces

00:10:43,360 --> 00:10:47,290
and I want to deploy them on the web

00:10:44,830 --> 00:10:48,670
what's a nice system for doing that this

00:10:47,290 --> 00:10:50,350
is a totally different design goal than

00:10:48,670 --> 00:10:51,610
what we had back in the 90s when this

00:10:50,350 --> 00:10:54,310
stuff was still early days and we were

00:10:51,610 --> 00:10:55,840
still figuring it all out so some of the

00:10:54,310 --> 00:10:57,490
design goals and a more concrete sense

00:10:55,840 --> 00:10:59,710
want us to say we want to create

00:10:57,490 --> 00:11:00,910
maintainable user interfaces so this is

00:10:59,710 --> 00:11:03,280
where a lot of this frustration comes

00:11:00,910 --> 00:11:04,600
from is that CSS and you know not only

00:11:03,280 --> 00:11:06,040
was it not designed for user interfaces

00:11:04,600 --> 00:11:09,100
but it certainly wasn't designed for a

00:11:06,040 --> 00:11:10,270
large scaling user interfaces like we've

00:11:09,100 --> 00:11:11,440
we've heard from a number of people over

00:11:10,270 --> 00:11:12,880
the course of the conference about

00:11:11,440 --> 00:11:14,830
scaling challenges that people have run

00:11:12,880 --> 00:11:16,450
into this is just as much a challenge in

00:11:14,830 --> 00:11:19,840
CSS as it is in JavaScript

00:11:16,450 --> 00:11:22,030
if not more another design goal long

00:11:19,840 --> 00:11:23,230
term cross-platform support if you're

00:11:22,030 --> 00:11:25,570
building a system for

00:11:23,230 --> 00:11:27,190
describing user interfaces there's lots

00:11:25,570 --> 00:11:28,570
of different platforms react native has

00:11:27,190 --> 00:11:31,030
shown that there's a lot of value in

00:11:28,570 --> 00:11:32,320
being able to have one code base that is

00:11:31,030 --> 00:11:35,650
shared across multiple different

00:11:32,320 --> 00:11:37,540
platforms iOS Android Mac OS things like

00:11:35,650 --> 00:11:39,250
that if you're designing this for this

00:11:37,540 --> 00:11:40,450
use case up front you can do a lot of

00:11:39,250 --> 00:11:43,210
work towards making that a better

00:11:40,450 --> 00:11:46,150
experience and finally have one

00:11:43,210 --> 00:11:48,100
compatibility table I love can I use com

00:11:46,150 --> 00:11:50,980
I would love even more if I didn't have

00:11:48,100 --> 00:11:53,230
to use it just being able to say if you

00:11:50,980 --> 00:11:55,000
use this library you can depend on being

00:11:53,230 --> 00:11:56,650
able to support these browsers any

00:11:55,000 --> 00:11:58,270
layout primitives you want to use in

00:11:56,650 --> 00:11:59,560
this live library they will all work as

00:11:58,270 --> 00:12:00,400
far back as these browsers you don't

00:11:59,560 --> 00:12:03,820
have to go look them up on a

00:12:00,400 --> 00:12:06,310
case-by-case basis okay so these are the

00:12:03,820 --> 00:12:07,660
design goals with that in mind I'm going

00:12:06,310 --> 00:12:08,980
to introduce you to this new set of

00:12:07,660 --> 00:12:10,570
layout primitive we're gonna look at a

00:12:08,980 --> 00:12:11,620
user interface that I built using style

00:12:10,570 --> 00:12:14,290
elements and we're gonna walk through

00:12:11,620 --> 00:12:15,580
the concepts of working it out I realize

00:12:14,290 --> 00:12:17,200
most people in here are not probably not

00:12:15,580 --> 00:12:18,580
Ellyn programmers so I'm gonna speak in

00:12:17,200 --> 00:12:20,620
pretty general terms but we are gonna

00:12:18,580 --> 00:12:21,640
see a little bit of code later but what

00:12:20,620 --> 00:12:24,870
I asked you is that when we're going

00:12:21,640 --> 00:12:27,250
through this just try to clear your mind

00:12:24,870 --> 00:12:28,990
don't be thinking like hey how would I

00:12:27,250 --> 00:12:30,790
do this in CSS or what is that compiling

00:12:28,990 --> 00:12:32,140
- under the hood just put yourself in

00:12:30,790 --> 00:12:33,610
the mindset of someone who's learning

00:12:32,140 --> 00:12:35,290
this stuff for the first time and saying

00:12:33,610 --> 00:12:38,260
I'm going to learn this new set of

00:12:35,290 --> 00:12:42,190
primitives for how to do layout in the

00:12:38,260 --> 00:12:43,960
browser alright let's do this so here's

00:12:42,190 --> 00:12:46,600
the the very simple application that I

00:12:43,960 --> 00:12:47,740
put together it's got a little bit of

00:12:46,600 --> 00:12:50,080
layout stuff going on we got a little

00:12:47,740 --> 00:12:52,030
logo type thing over here the upper-left

00:12:50,080 --> 00:12:53,650
CSS is byte code says built with elm in

00:12:52,030 --> 00:12:55,060
the middle it's little tagline got a

00:12:53,650 --> 00:12:57,160
drop-down menu over here with a little

00:12:55,060 --> 00:12:59,830
bit of hovering for stuff like that so

00:12:57,160 --> 00:13:01,450
this is this is sort of the typical type

00:12:59,830 --> 00:13:03,610
of thing that you might imagine seeing

00:13:01,450 --> 00:13:04,870
in a web app I've also made it so that

00:13:03,610 --> 00:13:06,010
we've got a little vertical and

00:13:04,870 --> 00:13:07,210
horizontal centering in the middle there

00:13:06,010 --> 00:13:08,680
so we can see what that looks like and

00:13:07,210 --> 00:13:10,740
as I see how that's when it stretches

00:13:08,680 --> 00:13:13,210
the image of beautiful bratislava castle

00:13:10,740 --> 00:13:15,640
with the reactive logo staying centered

00:13:13,210 --> 00:13:17,440
no matter how far I do it you might also

00:13:15,640 --> 00:13:18,700
notice that if you look at that tagline

00:13:17,440 --> 00:13:21,040
in the middle of it says built with Elm

00:13:18,700 --> 00:13:22,780
this is a bit responsive so as I shrink

00:13:21,040 --> 00:13:24,310
it that tagline goes away beyond a

00:13:22,780 --> 00:13:26,350
certain point and also you might notice

00:13:24,310 --> 00:13:26,710
that CSS has byte codes in the upper

00:13:26,350 --> 00:13:29,050
left

00:13:26,710 --> 00:13:30,280
the menus in the upper right as I shrink

00:13:29,050 --> 00:13:31,780
it down further and further those go

00:13:30,280 --> 00:13:33,160
away and we end up with just the menu

00:13:31,780 --> 00:13:35,140
that's just centered so this sort of

00:13:33,160 --> 00:13:39,790
shrinks all the way down and

00:13:35,140 --> 00:13:41,560
and is responsive okay so let's walk

00:13:39,790 --> 00:13:46,120
through how that's built using style

00:13:41,560 --> 00:13:47,200
elements so first thing to note is we're

00:13:46,120 --> 00:13:49,180
gonna introduce you to a new layout

00:13:47,200 --> 00:13:51,579
primitive this layout primitive is

00:13:49,180 --> 00:13:52,990
called a column and the idea behind a

00:13:51,579 --> 00:13:55,120
column is that it flows from top to

00:13:52,990 --> 00:13:56,200
bottom as you add elements to the column

00:13:55,120 --> 00:13:57,820
like cells in a column

00:13:56,200 --> 00:14:00,250
they just keep adding from top to bottom

00:13:57,820 --> 00:14:03,100
stacked on top of each other so there

00:14:00,250 --> 00:14:05,560
are two elements in this column the top

00:14:03,100 --> 00:14:07,000
one is our header bar and the second one

00:14:05,560 --> 00:14:08,529
is everything else like that the big

00:14:07,000 --> 00:14:11,110
image with the the centered other image

00:14:08,529 --> 00:14:12,760
inside of it so this is a column layout

00:14:11,110 --> 00:14:15,610
this is our first layout primitive and

00:14:12,760 --> 00:14:17,350
style elements okay so that's the

00:14:15,610 --> 00:14:19,120
conceptual idea now if we zoom in a

00:14:17,350 --> 00:14:20,980
little bit on that first cell in the

00:14:19,120 --> 00:14:23,829
column the first element there that is a

00:14:20,980 --> 00:14:25,690
row so this is a row as opposed to a

00:14:23,829 --> 00:14:27,610
column rows are laid out left to right

00:14:25,690 --> 00:14:29,890
so as you add more elements to a row

00:14:27,610 --> 00:14:31,600
they get added on to the end so we have

00:14:29,890 --> 00:14:33,579
three elements in here first one is the

00:14:31,600 --> 00:14:37,240
logo second one is the tagline there is

00:14:33,579 --> 00:14:38,440
the menu so again one two three as we

00:14:37,240 --> 00:14:40,240
add more things that get added to the

00:14:38,440 --> 00:14:42,279
right okay

00:14:40,240 --> 00:14:43,779
now let's zoom in on this one this one

00:14:42,279 --> 00:14:44,980
we can layout using the same primitives

00:14:43,779 --> 00:14:46,870
that we just talked about this is

00:14:44,980 --> 00:14:48,660
another row laid out left to right so

00:14:46,870 --> 00:14:50,800
again three elements inside of it

00:14:48,660 --> 00:14:52,600
there's also spacing in between these

00:14:50,800 --> 00:14:54,670
this is a new concept that style

00:14:52,600 --> 00:14:57,399
elements introduces we're describing how

00:14:54,670 --> 00:14:58,839
to space things out within a row so what

00:14:57,399 --> 00:15:01,360
this is saying is let's say I give it a

00:14:58,839 --> 00:15:03,430
spacing of five pixels what that's gonna

00:15:01,360 --> 00:15:04,870
say is each element inside this row is

00:15:03,430 --> 00:15:06,699
going to have five pixels in between

00:15:04,870 --> 00:15:08,410
them so we can increase that if we want

00:15:06,699 --> 00:15:10,089
to have more spacing say like ten pixels

00:15:08,410 --> 00:15:12,399
or we can decrease that and have them

00:15:10,089 --> 00:15:15,190
more tightly packed that's the idea

00:15:12,399 --> 00:15:17,079
spacing so this is another one of our

00:15:15,190 --> 00:15:18,610
layout primitives then we have the

00:15:17,079 --> 00:15:20,709
drop-down menu that appears below it

00:15:18,610 --> 00:15:22,540
again internally this is laid out as a

00:15:20,709 --> 00:15:24,040
column right top to bottom if we add

00:15:22,540 --> 00:15:25,690
another element in there the fourth

00:15:24,040 --> 00:15:26,860
element would come below sign-out it

00:15:25,690 --> 00:15:29,589
would be at the very bottom of that

00:15:26,860 --> 00:15:31,720
column another layout primitive we have

00:15:29,589 --> 00:15:33,910
here is these are not organized using

00:15:31,720 --> 00:15:35,680
spacing which would put gaps between

00:15:33,910 --> 00:15:37,660
them but we care about the hitbox here

00:15:35,680 --> 00:15:38,860
right when we hover over these things

00:15:37,660 --> 00:15:41,470
and we want to click on them we're gonna

00:15:38,860 --> 00:15:42,970
have a nice juicy hitbox like anywhere

00:15:41,470 --> 00:15:44,500
in this area around account we want to

00:15:42,970 --> 00:15:47,709
be able to click and have it follow that

00:15:44,500 --> 00:15:48,970
link so for this we use padding so

00:15:47,709 --> 00:15:51,279
padding is a way of

00:15:48,970 --> 00:15:53,019
bandung an element size spacing does not

00:15:51,279 --> 00:15:55,389
expand the element size but padding does

00:15:53,019 --> 00:15:58,329
so if we want a bigger hitbox padding is

00:15:55,389 --> 00:16:00,610
kind of the thing to to go for okay so

00:15:58,329 --> 00:16:02,259
we've got our column we've got we've got

00:16:00,610 --> 00:16:04,750
our padding going on we've got our nice

00:16:02,259 --> 00:16:06,699
hit boxes and we've got our row above

00:16:04,750 --> 00:16:08,829
that I think that you might wonder is

00:16:06,699 --> 00:16:09,250
how do we get these to be organized this

00:16:08,829 --> 00:16:10,720
way

00:16:09,250 --> 00:16:11,949
I mean previously we saw how to nest

00:16:10,720 --> 00:16:13,779
things you can put rose inside of

00:16:11,949 --> 00:16:15,040
columns columns inside of rows but this

00:16:13,779 --> 00:16:16,810
is sort of breaking out of that mold

00:16:15,040 --> 00:16:18,519
this is something we want to say this

00:16:16,810 --> 00:16:20,800
drop down I want that to be below the

00:16:18,519 --> 00:16:23,259
menu how do you say that how do you

00:16:20,800 --> 00:16:24,819
describe the idea of one element being

00:16:23,259 --> 00:16:27,670
below another one no matter where that

00:16:24,819 --> 00:16:30,279
other one is in the layout well we have

00:16:27,670 --> 00:16:32,050
a function called below and you give it

00:16:30,279 --> 00:16:33,040
two arguments first you say the thing

00:16:32,050 --> 00:16:34,899
that you want to put below the other

00:16:33,040 --> 00:16:36,610
thing and then you give it the thing you

00:16:34,899 --> 00:16:38,170
want to put it below and that's it and

00:16:36,610 --> 00:16:40,720
now it just says this is just going to

00:16:38,170 --> 00:16:44,470
be positioned below the other one that's

00:16:40,720 --> 00:16:46,509
the whole deal okay so to sum up just to

00:16:44,470 --> 00:16:48,759
recap what we what we talked about we

00:16:46,509 --> 00:16:50,829
have this whole page as a column it's

00:16:48,759 --> 00:16:52,540
got two elements inside of it first the

00:16:50,829 --> 00:16:54,040
nav bar and then the second being the

00:16:52,540 --> 00:16:55,720
rest of the body if we added a third one

00:16:54,040 --> 00:16:58,899
it would go below because columns go

00:16:55,720 --> 00:17:01,059
from top to bottom that first nav bar is

00:16:58,899 --> 00:17:02,829
a row within that row we've got three

00:17:01,059 --> 00:17:03,819
elements one two and three we added a

00:17:02,829 --> 00:17:05,620
fourth one it would go on the right

00:17:03,819 --> 00:17:07,539
because rows go from left to right and

00:17:05,620 --> 00:17:09,760
within that row we have another row

00:17:07,539 --> 00:17:12,970
which is used to style the menu bar

00:17:09,760 --> 00:17:15,339
itself beneath that we have a column and

00:17:12,970 --> 00:17:18,039
it's got three elements inside of it and

00:17:15,339 --> 00:17:21,159
the way that we positioned the one below

00:17:18,039 --> 00:17:24,429
the other is by using below passing in

00:17:21,159 --> 00:17:26,319
the the to the menu and then the thing

00:17:24,429 --> 00:17:28,720
that we want to go below the menu okay

00:17:26,319 --> 00:17:30,820
using that knowledge let's see if anyone

00:17:28,720 --> 00:17:32,590
can guess how we would go about laying

00:17:30,820 --> 00:17:35,049
out but logo in the upper left which has

00:17:32,590 --> 00:17:36,760
two pieces to it it has CSS which is in

00:17:35,049 --> 00:17:39,940
white and then it has AZ byte code which

00:17:36,760 --> 00:17:41,409
is in green you may imagine to guess

00:17:39,940 --> 00:17:43,419
let's sit let's just think about the

00:17:41,409 --> 00:17:45,010
three pin is that we've got row column

00:17:43,419 --> 00:17:48,250
below quick show of hands who thinks

00:17:45,010 --> 00:17:52,809
it's below who thinks it's column who

00:17:48,250 --> 00:17:54,460
thinks it's row yes all right yeah it's

00:17:52,809 --> 00:17:56,380
it's just another row is the same way as

00:17:54,460 --> 00:17:57,669
the as the menu in the upper right so

00:17:56,380 --> 00:17:59,409
it's got two elements in it the first

00:17:57,669 --> 00:18:01,690
one for the white portion second portion

00:17:59,409 --> 00:18:02,590
for the green portion speaking of

00:18:01,690 --> 00:18:04,510
portions

00:18:02,590 --> 00:18:07,090
you might also be wondering okay so if

00:18:04,510 --> 00:18:09,730
these things are stacked why is it that

00:18:07,090 --> 00:18:11,289
this navbar doesn't have these things

00:18:09,730 --> 00:18:13,539
stacked up all the way on the left why

00:18:11,289 --> 00:18:15,549
are they distributed this way so you can

00:18:13,539 --> 00:18:16,929
give each element to width and in this

00:18:15,549 --> 00:18:19,330
case what we're giving it is a width

00:18:16,929 --> 00:18:21,490
that's not a hard-coded fixed value but

00:18:19,330 --> 00:18:21,909
rather a portion so in this case I'm

00:18:21,490 --> 00:18:23,710
saying

00:18:21,909 --> 00:18:25,450
Philip portion one for each of them and

00:18:23,710 --> 00:18:28,150
that means you get to have one portion

00:18:25,450 --> 00:18:30,159
of the entire space so each of these

00:18:28,150 --> 00:18:31,480
gets what a fill portion one if I'd made

00:18:30,159 --> 00:18:33,070
the middle one have fill portion two

00:18:31,480 --> 00:18:34,899
then it would be twice as wide as the

00:18:33,070 --> 00:18:36,220
others but still all three of them put

00:18:34,899 --> 00:18:38,440
together it would fill that entire space

00:18:36,220 --> 00:18:40,630
so fill portion is just one of the other

00:18:38,440 --> 00:18:43,659
alternative ways to describe how wide

00:18:40,630 --> 00:18:45,010
you want something to be okay you might

00:18:43,659 --> 00:18:47,470
also notice that these are aligned

00:18:45,010 --> 00:18:49,600
differently so the the logo in the upper

00:18:47,470 --> 00:18:51,100
left is left-aligned that built without

00:18:49,600 --> 00:18:53,320
tagging in the middle is Center aligned

00:18:51,100 --> 00:18:55,120
and on the on the right we have the menu

00:18:53,320 --> 00:18:58,080
being right aligned how do we do that

00:18:55,120 --> 00:19:01,570
well some new primitives align left

00:18:58,080 --> 00:19:03,070
center and align right that's it we just

00:19:01,570 --> 00:19:04,539
described them in terms of their

00:19:03,070 --> 00:19:06,370
alignments in the same terminology that

00:19:04,539 --> 00:19:09,760
you might use in like a word processing

00:19:06,370 --> 00:19:12,190
system okay that brings us to the last

00:19:09,760 --> 00:19:15,130
bit which is this logo which is centered

00:19:12,190 --> 00:19:17,649
in the middle of this other image so

00:19:15,130 --> 00:19:20,080
style elements has you know images that

00:19:17,649 --> 00:19:22,000
that you can use to you know position

00:19:20,080 --> 00:19:24,159
however you want and it also has a

00:19:22,000 --> 00:19:26,169
notion of within so within basically

00:19:24,159 --> 00:19:27,909
says I want to use one of these elements

00:19:26,169 --> 00:19:29,830
as sort of a container for another

00:19:27,909 --> 00:19:31,299
element so we talked about how this is a

00:19:29,830 --> 00:19:33,100
column with two elements in it the

00:19:31,299 --> 00:19:34,809
bottom column we're saying okay I want

00:19:33,100 --> 00:19:37,990
to put that logo within the other

00:19:34,809 --> 00:19:39,399
element so now whenever I specify this

00:19:37,990 --> 00:19:41,760
things centering properties it's going

00:19:39,399 --> 00:19:45,159
to be within the context of that

00:19:41,760 --> 00:19:47,500
containing element so this brings us to

00:19:45,159 --> 00:19:48,730
the live coding portion of the demo so

00:19:47,500 --> 00:19:49,960
here we have a version of this where I

00:19:48,730 --> 00:19:51,730
have not specified any

00:19:49,960 --> 00:19:54,039
centering information at all so we have

00:19:51,730 --> 00:19:56,049
we have to come flow go and no nothing

00:19:54,039 --> 00:19:58,000
at all going on over here I'm gonna add

00:19:56,049 --> 00:20:01,210
Center and hit save and it's gonna

00:19:58,000 --> 00:20:03,909
reload and this happened to me yesterday

00:20:01,210 --> 00:20:06,760
with a lightning talk eventually the

00:20:03,909 --> 00:20:10,570
websocket gets disconnected so so now

00:20:06,760 --> 00:20:12,640
it's centered well let's go back and do

00:20:10,570 --> 00:20:14,559
it with that okay so we start off with

00:20:12,640 --> 00:20:16,880
it in the upper left and then we add

00:20:14,559 --> 00:20:18,170
Center and now it is horizontal

00:20:16,880 --> 00:20:20,390
centered and if we wanted to be

00:20:18,170 --> 00:20:23,500
vertically centered we had vertical

00:20:20,390 --> 00:20:26,500
center and now it's vertically centered

00:20:23,500 --> 00:20:26,500
tada

00:20:29,440 --> 00:20:34,430
so a funny story about vertical

00:20:31,520 --> 00:20:36,170
centering is that this is actually how

00:20:34,430 --> 00:20:38,150
Elm was created the programming language

00:20:36,170 --> 00:20:40,100
was Evan ship flicky was working at

00:20:38,150 --> 00:20:41,990
Google and he was helping out a friend

00:20:40,100 --> 00:20:43,220
he worked on Gmail on the back end and

00:20:41,990 --> 00:20:45,890
he was helping out a friend on the front

00:20:43,220 --> 00:20:47,360
end who was really wrestling with trying

00:20:45,890 --> 00:20:48,860
to vertically send her something and it

00:20:47,360 --> 00:20:50,270
ended up they conclude that it was so

00:20:48,860 --> 00:20:51,410
difficult they decided that they just

00:20:50,270 --> 00:20:53,060
didn't want to vertically center it

00:20:51,410 --> 00:20:56,600
after all and we're just gonna go do

00:20:53,060 --> 00:20:58,340
something else and now five years later

00:20:56,600 --> 00:20:59,750
somebody has built his programming

00:20:58,340 --> 00:21:01,040
language on top of his programming

00:20:59,750 --> 00:21:04,160
language highway to make vertical

00:21:01,040 --> 00:21:06,170
centering much easier and it's it's

00:21:04,160 --> 00:21:08,870
responsive so speaking of responsiveness

00:21:06,170 --> 00:21:13,640
let's talk about that so responsiveness

00:21:08,870 --> 00:21:15,080
how does that work in this system so we

00:21:13,640 --> 00:21:17,360
saw that there are sort of three break

00:21:15,080 --> 00:21:19,340
points here so this is the the main way

00:21:17,360 --> 00:21:21,140
that things look when it gets a little

00:21:19,340 --> 00:21:22,400
bit smaller the built with Elm tagline

00:21:21,140 --> 00:21:26,500
disappears and when it gets even smaller

00:21:22,400 --> 00:21:30,200
we're down to just the menu here okay so

00:21:26,500 --> 00:21:31,850
basically Elm has conditionals being a

00:21:30,200 --> 00:21:33,710
turing-complete programming language and

00:21:31,850 --> 00:21:36,320
you can know certain things such as

00:21:33,710 --> 00:21:37,790
what's the viewport width so if the

00:21:36,320 --> 00:21:40,040
viewport width is less than 640 then

00:21:37,790 --> 00:21:42,200
we're gonna say render the menu centered

00:21:40,040 --> 00:21:43,910
so menu here is a function and it's just

00:21:42,200 --> 00:21:46,040
accepting how do you want it to be

00:21:43,910 --> 00:21:47,600
aligned this is just a function that I

00:21:46,040 --> 00:21:49,310
wrote I wrote a function called menu I

00:21:47,600 --> 00:21:50,360
said I'm going to accept the alignment

00:21:49,310 --> 00:21:52,130
because I want the alignment to be

00:21:50,360 --> 00:21:54,230
different depending on how I'm doing

00:21:52,130 --> 00:21:56,030
this responsive layout if you pour it

00:21:54,230 --> 00:21:58,010
with is less than 1024 then I'm gonna

00:21:56,030 --> 00:22:00,500
say list out a pen so this is a way to

00:21:58,010 --> 00:22:01,670
combine two lists together I'm gonna say

00:22:00,500 --> 00:22:03,350
I want to have a list of these things I

00:22:01,670 --> 00:22:04,670
want to have first the logo and then the

00:22:03,350 --> 00:22:06,380
menu but I want the menu to be aligned

00:22:04,670 --> 00:22:07,370
right so here's the logo and then here's

00:22:06,380 --> 00:22:10,010
the right aligned menu

00:22:07,370 --> 00:22:12,020
finally else we have take the logo and

00:22:10,010 --> 00:22:14,180
the tag line with the right aligned menu

00:22:12,020 --> 00:22:15,980
so that's it I didn't actually introduce

00:22:14,180 --> 00:22:17,270
any new layout primitives all I did was

00:22:15,980 --> 00:22:18,770
just use the fact that I already have a

00:22:17,270 --> 00:22:20,540
Turing complete language to just

00:22:18,770 --> 00:22:24,710
describe how I wanted my responsive

00:22:20,540 --> 00:22:27,440
layout to work as simple as that okay

00:22:24,710 --> 00:22:29,030
that brings us to accessibility so this

00:22:27,440 --> 00:22:30,500
is another thing that is sort of opt-in

00:22:29,030 --> 00:22:32,210
and CSS and

00:22:30,500 --> 00:22:34,580
the idea here is to make accessibility

00:22:32,210 --> 00:22:36,020
more the default and less something that

00:22:34,580 --> 00:22:37,850
people throw on as an afterthought

00:22:36,020 --> 00:22:39,320
so my co-worker Tessa Kelly made this

00:22:37,850 --> 00:22:41,539
awesome package called accessible HTML

00:22:39,320 --> 00:22:43,789
which is a way to help you write

00:22:41,539 --> 00:22:45,350
accessible HTML and elm and one of the

00:22:43,789 --> 00:22:47,030
things that she did in that package is

00:22:45,350 --> 00:22:48,440
make it so that alt text or images

00:22:47,030 --> 00:22:50,690
becomes a required argument you just

00:22:48,440 --> 00:22:52,370
can't forget to do it if you don't put

00:22:50,690 --> 00:22:54,289
all texts your code just doesn't compile

00:22:52,370 --> 00:22:55,400
now of course you can put empty string

00:22:54,289 --> 00:22:56,750
if you really genuinely think that

00:22:55,400 --> 00:22:59,390
there's there's nothing semantically

00:22:56,750 --> 00:23:00,770
there but the idea here is to make it so

00:22:59,390 --> 00:23:02,150
that accessibility is no longer an

00:23:00,770 --> 00:23:03,530
afterthought it's something that's just

00:23:02,150 --> 00:23:05,690
like front and center and not something

00:23:03,530 --> 00:23:06,530
you can forget about and style elements

00:23:05,690 --> 00:23:08,390
does a lot of these same things

00:23:06,530 --> 00:23:12,440
especially with form elements not just

00:23:08,390 --> 00:23:14,330
with images okay so we've seen these

00:23:12,440 --> 00:23:16,309
these set of primitives that we use to

00:23:14,330 --> 00:23:18,530
build this layout right row-column blown

00:23:16,309 --> 00:23:20,900
within spacing padding alignment and

00:23:18,530 --> 00:23:23,030
fill portion and we've also seen how to

00:23:20,900 --> 00:23:24,200
make this thing responsive so earlier I

00:23:23,030 --> 00:23:26,600
asked you to sort of like clear your

00:23:24,200 --> 00:23:28,250
mind and forget everything about CSS but

00:23:26,600 --> 00:23:29,690
now I'm gonna take that back and say

00:23:28,250 --> 00:23:31,309
okay let's let's actually think about

00:23:29,690 --> 00:23:32,900
this like think about how you would

00:23:31,309 --> 00:23:35,990
build the same layout the same

00:23:32,900 --> 00:23:37,190
responsive thing in CSS what are the

00:23:35,990 --> 00:23:39,020
primitives you would use how do they

00:23:37,190 --> 00:23:41,210
compare to these this is a side-by-side

00:23:39,020 --> 00:23:43,130
comparison we can now do and say like

00:23:41,210 --> 00:23:45,590
what's the experience of building a user

00:23:43,130 --> 00:23:47,120
interface in this system versus in CSS

00:23:45,590 --> 00:23:48,440
what's that gonna be like what's it

00:23:47,120 --> 00:23:50,059
gonna be like the first time I build it

00:23:48,440 --> 00:23:52,640
what's it gonna be like over time is I

00:23:50,059 --> 00:23:54,049
got to maintain it so you can actually

00:23:52,640 --> 00:23:56,390
have a system that's designed for

00:23:54,049 --> 00:23:57,830
maintainability we can have a system

00:23:56,390 --> 00:23:59,419
that's asking questions like hey how

00:23:57,830 --> 00:24:00,710
should deeply nested layouts interact

00:23:59,419 --> 00:24:03,110
this is not something that was on

00:24:00,710 --> 00:24:04,760
anyone's radar when CSS was first being

00:24:03,110 --> 00:24:05,690
developed because deeply nested layouts

00:24:04,760 --> 00:24:07,400
were a UI thing

00:24:05,690 --> 00:24:09,250
who's got deeply nested layouts inside

00:24:07,400 --> 00:24:11,090
an article that just doesn't come up

00:24:09,250 --> 00:24:13,730
questions like how can we make

00:24:11,090 --> 00:24:15,289
consistent api's it's really important

00:24:13,730 --> 00:24:16,970
that the web be backwards compatible

00:24:15,289 --> 00:24:18,559
that websites from back in the day still

00:24:16,970 --> 00:24:20,539
work in modern browsers which means you

00:24:18,559 --> 00:24:23,570
really can't delete things from the CSS

00:24:20,539 --> 00:24:25,549
API for HTML or from JavaScript now if

00:24:23,570 --> 00:24:26,419
they're byte code that's okay but if

00:24:25,549 --> 00:24:27,559
you're trying to work with them as

00:24:26,419 --> 00:24:29,240
first-class things man this is just

00:24:27,559 --> 00:24:31,789
inevitably going to be bloat there can't

00:24:29,240 --> 00:24:33,350
not be bloat the style elements is freed

00:24:31,789 --> 00:24:36,169
from that constraint it can make API

00:24:33,350 --> 00:24:38,570
changes and as the library evolves over

00:24:36,169 --> 00:24:40,280
time and then finally there's this

00:24:38,570 --> 00:24:41,860
mantra of sort of if it compiles it

00:24:40,280 --> 00:24:43,730
styles this is like an aspiration

00:24:41,860 --> 00:24:44,300
something that people report when

00:24:43,730 --> 00:24:46,700
they're using

00:24:44,300 --> 00:24:48,830
is this feeling of if it compiles it

00:24:46,700 --> 00:24:51,200
just works and silo elements is is

00:24:48,830 --> 00:24:53,450
aspires to bring that same feeling to

00:24:51,200 --> 00:24:55,010
styling things like if it compiles if

00:24:53,450 --> 00:24:56,480
the compiler says this looks good the

00:24:55,010 --> 00:24:58,490
idea is that it should work and it

00:24:56,480 --> 00:24:59,960
should give you what you expect so

00:24:58,490 --> 00:25:01,490
having settled this I do want to caution

00:24:59,960 --> 00:25:03,260
you like this is a massive effort and

00:25:01,490 --> 00:25:04,580
it's under heavy development this is not

00:25:03,260 --> 00:25:06,620
something I would say run out and start

00:25:04,580 --> 00:25:08,390
using this right now because I mean it's

00:25:06,620 --> 00:25:11,120
a huge effort to try and design a new

00:25:08,390 --> 00:25:12,890
layout system from scratch having said

00:25:11,120 --> 00:25:14,750
that there are some enthusiastic early

00:25:12,890 --> 00:25:16,820
adopters some brave souls including

00:25:14,750 --> 00:25:18,830
Oliver here who reported this nel and

00:25:16,820 --> 00:25:20,990
slack and you probably can't see these

00:25:18,830 --> 00:25:22,730
numbers but I'll bottom-line it for you

00:25:20,990 --> 00:25:23,840
he had twenty five thousand lines of

00:25:22,730 --> 00:25:25,190
code and he put it down to fifteen

00:25:23,840 --> 00:25:28,100
thousand lines of code when he replaced

00:25:25,190 --> 00:25:29,990
his SAS with style elements now granted

00:25:28,100 --> 00:25:31,730
lines of code is not a metric that tells

00:25:29,990 --> 00:25:32,930
you a whole lot of information but that

00:25:31,730 --> 00:25:34,370
is the type of thing that at least makes

00:25:32,930 --> 00:25:36,620
me sit up in my chair and go okay that's

00:25:34,370 --> 00:25:39,170
that's that's a lot that's a pretty

00:25:36,620 --> 00:25:41,360
substantial change and as he didn't

00:25:39,170 --> 00:25:42,410
quite say in this quote he ended up

00:25:41,360 --> 00:25:45,140
feeling that it was a lot more

00:25:42,410 --> 00:25:46,850
maintainable over the long term if you

00:25:45,140 --> 00:25:48,740
like this idea of clean slate semantics

00:25:46,850 --> 00:25:50,090
I highly recommend checking out Elm so

00:25:48,740 --> 00:25:52,340
we've been using it at work at no red

00:25:50,090 --> 00:25:53,660
ink we've still had no runtime

00:25:52,340 --> 00:25:56,000
exceptions from our alum code because

00:25:53,660 --> 00:25:57,950
the compiler is amazing in two years two

00:25:56,000 --> 00:25:58,460
hundred thousand lines of code still has

00:25:57,950 --> 00:26:00,080
not happened

00:25:58,460 --> 00:26:01,670
our legacy JavaScript still throws

00:26:00,080 --> 00:26:04,400
plenty of runtime exceptions but that's

00:26:01,670 --> 00:26:06,050
okay it's mostly hell now so that part

00:26:04,400 --> 00:26:07,910
of the code base has been excellent it's

00:26:06,050 --> 00:26:09,770
got its own separate package ecosystem

00:26:07,910 --> 00:26:11,480
that's totally separate so we don't

00:26:09,770 --> 00:26:14,000
actually use NPM for any of our package

00:26:11,480 --> 00:26:15,770
needs and semantic versioning is

00:26:14,000 --> 00:26:17,450
automatically enforced like across every

00:26:15,770 --> 00:26:19,190
package in the library if I try to

00:26:17,450 --> 00:26:20,660
publish a package that makes a breaking

00:26:19,190 --> 00:26:22,430
change and I don't bump the major

00:26:20,660 --> 00:26:23,900
version number alum package literally

00:26:22,430 --> 00:26:25,520
will not let me publish it it'll say

00:26:23,900 --> 00:26:27,710
nope that was a breaking change you need

00:26:25,520 --> 00:26:28,940
to bump the major version number all of

00:26:27,710 --> 00:26:31,640
these things are possible because Elm

00:26:28,940 --> 00:26:33,380
has this idea of clean slate semantics

00:26:31,640 --> 00:26:34,940
and just saying we're gonna say

00:26:33,380 --> 00:26:36,500
JavaScript is byte code we're gonna

00:26:34,940 --> 00:26:39,110
compile to JavaScript and we're not

00:26:36,500 --> 00:26:40,250
going to keep any of the semantics with

00:26:39,110 --> 00:26:42,740
it you'd like to learn more about

00:26:40,250 --> 00:26:44,570
element general there's a guide l9 org

00:26:42,740 --> 00:26:45,860
there's an awesome slack channel with

00:26:44,570 --> 00:26:47,960
people who are super helpful and

00:26:45,860 --> 00:26:49,730
beginner friendly I'm writing a book

00:26:47,960 --> 00:26:51,380
shameless plug ailment action formatting

00:26:49,730 --> 00:26:53,060
publications it's available for early

00:26:51,380 --> 00:26:55,430
access and I'm doing a free workshop

00:26:53,060 --> 00:26:57,570
tomorrow so if you'd like to come I

00:26:55,430 --> 00:26:58,889
believe there's still some seats left

00:26:57,570 --> 00:27:02,820
which may not be true now that I've said

00:26:58,889 --> 00:27:04,950
that to sum up so CSS was never intended

00:27:02,820 --> 00:27:09,389
to create user interfaces we know this

00:27:04,950 --> 00:27:12,600
but we can build a new foundation by

00:27:09,389 --> 00:27:14,720
treating CSS as white code thanks very

00:27:12,600 --> 00:27:14,720
much

00:27:24,450 --> 00:27:26,510

YouTube URL: https://www.youtube.com/watch?v=bt1TzVngOqY


