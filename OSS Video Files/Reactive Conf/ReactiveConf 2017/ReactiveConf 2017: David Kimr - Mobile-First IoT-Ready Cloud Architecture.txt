Title: ReactiveConf 2017: David Kimr - Mobile-First IoT-Ready Cloud Architecture
Publication date: 2017-11-20
Playlist: ReactiveConf 2017
Description: 
	Festival Friday

https://reactiveconf.com/
25th - 27th October 2017, Bratislava, Slovakia
Captions: 
	00:00:02,500 --> 00:00:08,639
[Music]

00:00:09,180 --> 00:00:11,240
you

00:00:14,769 --> 00:00:21,160
Oh guys I think I know real question

00:00:19,050 --> 00:00:26,500
everybody's thinking about was this

00:00:21,160 --> 00:00:28,570
device I go answer that later if you

00:00:26,500 --> 00:00:31,480
keep your entice your attention you you

00:00:28,570 --> 00:00:34,390
you will get your answer I am David

00:00:31,480 --> 00:00:36,840
Kimura I am CTO of unicorn and my

00:00:34,390 --> 00:00:39,550
today's mission is to introduce your

00:00:36,840 --> 00:00:43,360
mobile first I will record architecture

00:00:39,550 --> 00:00:45,640
and I will start with some reasoning why

00:00:43,360 --> 00:00:46,629
we are doing such a thing and what is

00:00:45,640 --> 00:00:51,010
this all about

00:00:46,629 --> 00:00:53,320
so one slide about unicorn I promise you

00:00:51,010 --> 00:00:57,310
our company which is working for more

00:00:53,320 --> 00:01:03,100
than 300 projects for more than 1.5

00:00:57,310 --> 00:01:05,409
million users and we have about 1,000 60

00:01:03,100 --> 00:01:08,320
co-workers which are working in ID so it

00:01:05,409 --> 00:01:10,570
is a huge mass of developers so when we

00:01:08,320 --> 00:01:13,030
want to introduce some changing the way

00:01:10,570 --> 00:01:15,939
how they work it's not so easy imagine

00:01:13,030 --> 00:01:18,159
that you need to teach to teach almost

00:01:15,939 --> 00:01:20,709
2,000 people how to develop new

00:01:18,159 --> 00:01:23,889
progressive web applications how to

00:01:20,709 --> 00:01:25,869
switch from C++ and other languages from

00:01:23,889 --> 00:01:28,749
the patterns they are used to used to

00:01:25,869 --> 00:01:31,979
use and how to made our customers to

00:01:28,749 --> 00:01:34,950
accept such a change and I will show you

00:01:31,979 --> 00:01:37,060
part of our journey we are doing today

00:01:34,950 --> 00:01:40,060
yeah no don't only working for

00:01:37,060 --> 00:01:43,450
enterprises but we are working for and

00:01:40,060 --> 00:01:46,029
users as well because we are users of

00:01:43,450 --> 00:01:50,249
the Plus for.net service which is more

00:01:46,029 --> 00:01:54,310
than 100,000 users online every day so

00:01:50,249 --> 00:01:55,630
we have both large companies working we

00:01:54,310 --> 00:01:59,169
are working for and delivering

00:01:55,630 --> 00:02:01,689
information systems and we have Commons

00:01:59,169 --> 00:02:03,009
and users mostly on chip market which

00:02:01,689 --> 00:02:07,810
are using this phosphor about med

00:02:03,009 --> 00:02:11,860
service so and my mission is to make or

00:02:07,810 --> 00:02:15,400
enterprise developers 1,600 to produce

00:02:11,860 --> 00:02:18,849
to create progressive applications with

00:02:15,400 --> 00:02:21,280
love no and it's not so easy how it

00:02:18,849 --> 00:02:22,870
could look like because for example most

00:02:21,280 --> 00:02:23,790
of our developers think that javascript

00:02:22,870 --> 00:02:27,250
is evil

00:02:23,790 --> 00:02:30,400
it's it's not programming language is

00:02:27,250 --> 00:02:33,190
something you use just to handle your

00:02:30,400 --> 00:02:35,950
clicks on page SEO generator on server

00:02:33,190 --> 00:02:38,110
because most of our systems are looking

00:02:35,950 --> 00:02:40,030
like this now not only because we want

00:02:38,110 --> 00:02:42,700
to develop them did way because our

00:02:40,030 --> 00:02:44,800
customers demand to beat them you know I

00:02:42,700 --> 00:02:46,990
can show you this is how our clients are

00:02:44,800 --> 00:02:50,140
have to what happened they have to use

00:02:46,990 --> 00:02:52,780
in work it's it's one of the systems we

00:02:50,140 --> 00:02:55,030
produced now it doesn't look bad

00:02:52,780 --> 00:02:58,000
it looks maybe better than many other

00:02:55,030 --> 00:03:02,050
systems they have from other from from

00:02:58,000 --> 00:03:03,430
other vendors another one actually what

00:03:02,050 --> 00:03:05,200
this one looks pretty cool

00:03:03,430 --> 00:03:07,240
but there are no responds every day

00:03:05,200 --> 00:03:09,400
nobody thinks about how to use it on

00:03:07,240 --> 00:03:11,920
touch friendly devices about mobile

00:03:09,400 --> 00:03:14,920
devices this is the reality and this is

00:03:11,920 --> 00:03:18,430
very where we do now most of most of our

00:03:14,920 --> 00:03:21,040
money but in private all of them are

00:03:18,430 --> 00:03:23,350
using apps like this you know even in

00:03:21,040 --> 00:03:25,240
work I've noticed our co-workers that

00:03:23,350 --> 00:03:27,460
they are using such an information

00:03:25,240 --> 00:03:29,860
systems for their work and next to their

00:03:27,460 --> 00:03:31,480
laptop there's their phone line and they

00:03:29,860 --> 00:03:33,790
are using Facebook and other social

00:03:31,480 --> 00:03:35,560
networks and they are no you know they

00:03:33,790 --> 00:03:37,870
are not prohibited to use it from from

00:03:35,560 --> 00:03:40,420
the big screen but they simply don't

00:03:37,870 --> 00:03:42,820
want to because they prefer to do it on

00:03:40,420 --> 00:03:45,670
touch friendly device and it's better

00:03:42,820 --> 00:03:49,030
for them so another of another example

00:03:45,670 --> 00:03:50,920
and the question is do do enterprise

00:03:49,030 --> 00:03:55,240
customers want to look at their systems

00:03:50,920 --> 00:03:58,720
like this do you think they do I think

00:03:55,240 --> 00:04:03,130
should I do because you know everything

00:03:58,720 --> 00:04:06,760
around looks nice just the working thing

00:04:03,130 --> 00:04:09,820
I didn't want to say looks like

00:04:06,760 --> 00:04:11,560
that prep so so I'm sure they want way

00:04:09,820 --> 00:04:13,900
maybe they don't they can't imagine it's

00:04:11,560 --> 00:04:15,970
possible they don't think that it's

00:04:13,900 --> 00:04:18,310
possible for example to sell and buy

00:04:15,970 --> 00:04:20,440
electricity across the board from their

00:04:18,310 --> 00:04:22,300
mobile device because now they are using

00:04:20,440 --> 00:04:24,810
you know big screens and several several

00:04:22,300 --> 00:04:26,800
displays just to monitor all the flows

00:04:24,810 --> 00:04:28,990
for example yeah we are developing

00:04:26,800 --> 00:04:30,490
systems which is selling and buying all

00:04:28,990 --> 00:04:34,570
the electricity which is going through

00:04:30,490 --> 00:04:36,550
the cables to UK and Ireland so they

00:04:34,570 --> 00:04:37,030
don't even imagine that it's possible to

00:04:36,550 --> 00:04:39,910
do it

00:04:37,030 --> 00:04:42,760
mobile devices and and to do it you know

00:04:39,910 --> 00:04:45,010
somewhere elastin in the office but I'm

00:04:42,760 --> 00:04:46,690
sure they will find out so you want to

00:04:45,010 --> 00:04:51,670
be ready and we have repairing the big

00:04:46,690 --> 00:04:54,970
change so you know that all systems even

00:04:51,670 --> 00:04:57,640
enterprise systems now have to flow

00:04:54,970 --> 00:05:01,450
market trends so yes you have to be used

00:04:57,640 --> 00:05:04,000
from from smartphones first everything

00:05:01,450 --> 00:05:06,270
is mobile first of course tablets

00:05:04,000 --> 00:05:09,550
laptops and then the other devices

00:05:06,270 --> 00:05:12,370
sometimes even from desktop computers if

00:05:09,550 --> 00:05:14,680
they have them many of them still have

00:05:12,370 --> 00:05:16,480
desktop computers every under developers

00:05:14,680 --> 00:05:18,310
are sometimes surprised and they come to

00:05:16,480 --> 00:05:20,320
customer sites and they see all those

00:05:18,310 --> 00:05:24,820
big machines you know lying on the

00:05:20,320 --> 00:05:26,680
tables and but you can still develop

00:05:24,820 --> 00:05:28,900
applications which are working both from

00:05:26,680 --> 00:05:31,990
mobile device and from the desktop on

00:05:28,900 --> 00:05:33,780
the other side and IOT comes implies

00:05:31,990 --> 00:05:36,880
because everybody talks you know

00:05:33,780 --> 00:05:39,210
everybody talks about IOT still you know

00:05:36,880 --> 00:05:42,970
if JavaScript world is a mess and

00:05:39,210 --> 00:05:44,910
there's every month maybe every week new

00:05:42,970 --> 00:05:47,620
framework starting and you start coming

00:05:44,910 --> 00:05:51,580
under standards for the past week are

00:05:47,620 --> 00:05:52,750
not not used to this week so IOT is even

00:05:51,580 --> 00:05:54,640
bigger mess because there are no

00:05:52,750 --> 00:05:56,080
standards no frameworks but everybody's

00:05:54,640 --> 00:05:59,620
thinking about how they can incorporate

00:05:56,080 --> 00:06:02,290
IOT in their business so what we started

00:05:59,620 --> 00:06:05,110
to do two years ago is to develop you

00:06:02,290 --> 00:06:07,270
know one architecture one framework one

00:06:05,110 --> 00:06:10,000
development process to cover all these

00:06:07,270 --> 00:06:12,160
issues to cover to develop front-end

00:06:10,000 --> 00:06:14,920
applications which scale well from

00:06:12,160 --> 00:06:18,520
mobile device to big screens to develop

00:06:14,920 --> 00:06:23,290
servers which can serve data both to

00:06:18,520 --> 00:06:24,910
front ends and to IOT devices and if at

00:06:23,290 --> 00:06:27,430
least possible to develop it with one

00:06:24,910 --> 00:06:29,410
standard because if you have two

00:06:27,430 --> 00:06:32,040
thousand developers and let them to use

00:06:29,410 --> 00:06:35,200
any technology they want it's very

00:06:32,040 --> 00:06:37,960
costly very very costly because you know

00:06:35,200 --> 00:06:41,050
every developer in our company takes

00:06:37,960 --> 00:06:43,480
like four projects a year so if he has

00:06:41,050 --> 00:06:45,460
to switch technology on every project it

00:06:43,480 --> 00:06:47,770
means that about four months a year he's

00:06:45,460 --> 00:06:50,860
not productive and he is learning new

00:06:47,770 --> 00:06:52,509
things new technology I definitely

00:06:50,860 --> 00:06:57,009
push our developers to learn new things

00:06:52,509 --> 00:07:00,520
and new technology but it's better to do

00:06:57,009 --> 00:07:03,550
it you know in designs time not during

00:07:00,520 --> 00:07:05,439
the project because if you do projects

00:07:03,550 --> 00:07:07,689
you need to add value to your customers

00:07:05,439 --> 00:07:09,879
you need to earn money you need to be

00:07:07,689 --> 00:07:12,129
successful only successful projects are

00:07:09,879 --> 00:07:14,939
that stage we had that are in time and

00:07:12,129 --> 00:07:19,449
budget and that look sexy and work

00:07:14,939 --> 00:07:21,310
quality so for us it's very important to

00:07:19,449 --> 00:07:23,740
have one architecture to cover all all

00:07:21,310 --> 00:07:25,569
of those things so we call it mobile

00:07:23,740 --> 00:07:27,639
first I will tear a clock architecture

00:07:25,569 --> 00:07:30,340
and we said that we have to be experts

00:07:27,639 --> 00:07:33,699
in developing front ends which will

00:07:30,340 --> 00:07:36,310
scale from mobile to big devices to be

00:07:33,699 --> 00:07:37,900
experts to develop api's and to develop

00:07:36,310 --> 00:07:41,979
server-side functionality which can

00:07:37,900 --> 00:07:45,340
serve all those devices on unified way

00:07:41,979 --> 00:07:48,219
and to be expressed how to connect IOT

00:07:45,340 --> 00:07:50,460
devices to this architecture not to

00:07:48,219 --> 00:07:51,759
develop some other infrastructure

00:07:50,460 --> 00:07:55,150
otherwise

00:07:51,759 --> 00:07:58,300
so this is our architecture and I will I

00:07:55,150 --> 00:08:00,900
will give you some glimpses how it's

00:07:58,300 --> 00:08:04,389
organized and what it can do

00:08:00,900 --> 00:08:07,089
first it's not just a framework no

00:08:04,389 --> 00:08:08,440
because for us extremely important to

00:08:07,089 --> 00:08:11,650
live and to and the development process

00:08:08,440 --> 00:08:14,259
so it's both components reference

00:08:11,650 --> 00:08:16,389
architecture but process import is

00:08:14,259 --> 00:08:18,789
important the development process the

00:08:16,389 --> 00:08:22,000
way how you organize your work the way

00:08:18,789 --> 00:08:24,159
how you test everything around do they

00:08:22,000 --> 00:08:26,379
have you teach how have you teacher your

00:08:24,159 --> 00:08:28,060
people this architecture how you support

00:08:26,379 --> 00:08:29,409
them when you have problems so you have

00:08:28,060 --> 00:08:31,449
to establish all those things for our

00:08:29,409 --> 00:08:34,060
architecture and now I think we aren't

00:08:31,449 --> 00:08:36,640
productive nodes so our architecture

00:08:34,060 --> 00:08:39,640
covers from technical point of view like

00:08:36,640 --> 00:08:43,800
five areas I will touch four of them the

00:08:39,640 --> 00:08:46,300
first one is 4/10 no and I said this

00:08:43,800 --> 00:08:48,640
decision will be strongly opinionated so

00:08:46,300 --> 00:08:50,949
there's first opinion we think that

00:08:48,640 --> 00:08:53,860
native applications on mobile or mobile

00:08:50,949 --> 00:08:55,480
devices it's a temporary thing because

00:08:53,860 --> 00:08:57,579
it doesn't make sense to develop the

00:08:55,480 --> 00:08:59,230
same user interface three times in three

00:08:57,579 --> 00:09:02,290
different languages because if you want

00:08:59,230 --> 00:09:02,589
to have your applications to look sexy

00:09:02,290 --> 00:09:04,660
today

00:09:02,589 --> 00:09:07,960
you usually develop

00:09:04,660 --> 00:09:09,640
interface in Swift on iOS the new

00:09:07,960 --> 00:09:12,250
develop second interface in Java on

00:09:09,640 --> 00:09:15,100
Android and you or maybe Kotlin because

00:09:12,250 --> 00:09:17,140
cotton is now cool and then you develop

00:09:15,100 --> 00:09:19,810
a third one in some JavaScript

00:09:17,140 --> 00:09:22,570
maybe CoffeeScript or two or other

00:09:19,810 --> 00:09:25,060
dialect of JavaScript for the front-end

00:09:22,570 --> 00:09:26,590
and if you maybe if you start the

00:09:25,060 --> 00:09:28,810
application it still doesn't look like a

00:09:26,590 --> 00:09:30,970
big mess but then you want to update the

00:09:28,810 --> 00:09:34,570
application and every update you have to

00:09:30,970 --> 00:09:36,370
do three times and then you touch it if

00:09:34,570 --> 00:09:38,230
you want to deploy your new

00:09:36,370 --> 00:09:41,440
functionality you have different life

00:09:38,230 --> 00:09:43,150
cycles in each ups torso to synchronize

00:09:41,440 --> 00:09:45,040
that your functionality is ready at

00:09:43,150 --> 00:09:48,190
exactly the same same time it's

00:09:45,040 --> 00:09:50,170
impossible so still a lot of money and

00:09:48,190 --> 00:09:52,420
it slows you down so if you want to

00:09:50,170 --> 00:09:54,310
deploy new functionality you develop

00:09:52,420 --> 00:09:57,640
three times three times test three times

00:09:54,310 --> 00:09:59,290
deploys processes you are slow than your

00:09:57,640 --> 00:10:03,700
competition so we're gonna lose and

00:09:59,290 --> 00:10:06,520
that's why I think that even on mobile

00:10:03,700 --> 00:10:10,210
devices the future is an html5

00:10:06,520 --> 00:10:12,610
JavaScript so we decided to completely

00:10:10,210 --> 00:10:15,460
omit native applications and focus just

00:10:12,610 --> 00:10:17,920
on HTML and JavaScript and we think that

00:10:15,460 --> 00:10:19,540
all Chrome on mobile devices which are

00:10:17,920 --> 00:10:22,870
on the market today are powerful enough

00:10:19,540 --> 00:10:24,940
to support this even you have mobile web

00:10:22,870 --> 00:10:26,920
applications especially Android it works

00:10:24,940 --> 00:10:29,620
works pretty well so when you install

00:10:26,920 --> 00:10:32,080
your application on your screen it looks

00:10:29,620 --> 00:10:33,730
like common application when you switch

00:10:32,080 --> 00:10:36,490
on your task list you will find it there

00:10:33,730 --> 00:10:37,930
so from the user point of view is just a

00:10:36,490 --> 00:10:41,290
different way hope to gain an app on

00:10:37,930 --> 00:10:43,780
your on your phone and that's all so on

00:10:41,290 --> 00:10:46,450
iOS it's a bit worse but still working

00:10:43,780 --> 00:10:48,370
quite well so the first strong decision

00:10:46,450 --> 00:10:50,800
is to do it just once for all the

00:10:48,370 --> 00:10:54,760
devices so we one who buys for all front

00:10:50,800 --> 00:10:57,160
ends in you five second thing or IOT I

00:10:54,760 --> 00:10:58,810
would touch it later and for a surrogate

00:10:57,160 --> 00:11:01,780
the situation's will be difficult

00:10:58,810 --> 00:11:03,670
difficult but we have to because we have

00:11:01,780 --> 00:11:07,500
to manage all the environments of our

00:11:03,670 --> 00:11:10,630
customers and the third thing is cloud

00:11:07,500 --> 00:11:12,910
because you know we are used to deploy

00:11:10,630 --> 00:11:15,480
our systems on-premise because most of

00:11:12,910 --> 00:11:16,570
our customers are banks telco big

00:11:15,480 --> 00:11:19,930
transmen

00:11:16,570 --> 00:11:23,230
systems for electricity so they are used

00:11:19,930 --> 00:11:25,570
to to have big big data centers with

00:11:23,230 --> 00:11:28,350
their own machines and want to deploy on

00:11:25,570 --> 00:11:30,910
premise but even that is changing no

00:11:28,350 --> 00:11:32,950
most of the products produces as public

00:11:30,910 --> 00:11:34,840
clouds are pushing then rather giving

00:11:32,950 --> 00:11:37,270
them very good sauce offers they are

00:11:34,840 --> 00:11:40,210
meeting the legislation which is

00:11:37,270 --> 00:11:41,920
necessary for for using those those

00:11:40,210 --> 00:11:45,370
public clouds for mission-critical

00:11:41,920 --> 00:11:48,220
applications so I think it's changing so

00:11:45,370 --> 00:11:50,440
we completely switch the mindset first

00:11:48,220 --> 00:11:52,150
we developed applications on-premise and

00:11:50,440 --> 00:11:54,040
then we thought about how to put it in

00:11:52,150 --> 00:11:56,590
the cloud now we are developing

00:11:54,040 --> 00:11:58,450
applications for the cloud and if it's

00:11:56,590 --> 00:12:01,330
absolutely necessary we are thinking

00:11:58,450 --> 00:12:02,590
about how to deploy on premise so if you

00:12:01,330 --> 00:12:04,690
change the mindset it's still possible

00:12:02,590 --> 00:12:06,160
to deploy on premise but it's much

00:12:04,690 --> 00:12:07,660
easier to deploy in the cloud and you

00:12:06,160 --> 00:12:10,540
are much more ready for a future

00:12:07,660 --> 00:12:12,430
so you cloud it's a piece of software

00:12:10,540 --> 00:12:16,810
which unifies all the public pulse I

00:12:12,430 --> 00:12:19,150
will show you first of all to face our

00:12:16,810 --> 00:12:21,400
front end we had quite difficult

00:12:19,150 --> 00:12:22,960
decisions two years ago which framework

00:12:21,400 --> 00:12:24,670
to use as a basement we didn't want to

00:12:22,960 --> 00:12:26,110
start from scratch of course in

00:12:24,670 --> 00:12:29,260
JavaScript doesn't make sense

00:12:26,110 --> 00:12:32,740
so the finalists were angular in that

00:12:29,260 --> 00:12:34,750
time it was angular 1 and react so we

00:12:32,740 --> 00:12:36,940
decided for react not because it was

00:12:34,750 --> 00:12:40,480
better but because we had to decide you

00:12:36,940 --> 00:12:44,110
know it's again a strong opinion we

00:12:40,480 --> 00:12:46,330
can't afford to support five or seven

00:12:44,110 --> 00:12:48,310
front-end frameworks even if they are

00:12:46,330 --> 00:12:49,990
actually good because for all of them

00:12:48,310 --> 00:12:53,590
you have to have the infrastructure

00:12:49,990 --> 00:12:56,590
about teaching people supporting them so

00:12:53,590 --> 00:12:58,990
for our this important that we have to

00:12:56,590 --> 00:13:01,120
choose one of the best and stay with it

00:12:58,990 --> 00:13:03,370
so we recited for react I think the

00:13:01,120 --> 00:13:07,570
design was good I still write in this

00:13:03,370 --> 00:13:11,530
time and then we did some more decisions

00:13:07,570 --> 00:13:13,000
like our people are used to develop

00:13:11,530 --> 00:13:15,670
applications and generate most of the

00:13:13,000 --> 00:13:17,890
HTML on the server to do all the logic

00:13:15,670 --> 00:13:19,630
about navigation and about it on the

00:13:17,890 --> 00:13:21,670
server not just how people it's in the

00:13:19,630 --> 00:13:23,110
enterprise world is the rewriting it's

00:13:21,670 --> 00:13:26,560
most of the systems are developed this

00:13:23,110 --> 00:13:28,630
way so we completely switch it we said

00:13:26,560 --> 00:13:29,840
that we will do just single page

00:13:28,630 --> 00:13:32,390
applications and

00:13:29,840 --> 00:13:34,250
all the front end logic they'll go back

00:13:32,390 --> 00:13:36,080
to the front end as it used to be when

00:13:34,250 --> 00:13:40,370
you when you develop fixed applications

00:13:36,080 --> 00:13:44,120
and C++ and other languages so this one

00:13:40,370 --> 00:13:48,230
this decision it's tough because before

00:13:44,120 --> 00:13:51,320
we did we had a statistics that about 95

00:13:48,230 --> 00:13:53,870
percent of code is made on the server so

00:13:51,320 --> 00:13:57,050
it made in Java it's made in c-sharp on

00:13:53,870 --> 00:13:58,790
other other several languages just 5% of

00:13:57,050 --> 00:14:01,880
the of all lines of code in a common

00:13:58,790 --> 00:14:05,660
project was in JavaScript now it's 60

00:14:01,880 --> 00:14:08,210
percent 60 it's a huge difference so it

00:14:05,660 --> 00:14:10,220
means that you have to switch most of

00:14:08,210 --> 00:14:12,020
your developers more than half of them

00:14:10,220 --> 00:14:13,340
to be front-end developers and to be

00:14:12,020 --> 00:14:16,910
Java stereo lovers

00:14:13,340 --> 00:14:19,790
so and the other thing was that it was

00:14:16,910 --> 00:14:23,360
just 5% so usually in the project if

00:14:19,790 --> 00:14:26,000
someone was dumped was to dumped to

00:14:23,360 --> 00:14:28,130
develop Java on the server so let's put

00:14:26,000 --> 00:14:32,000
in on JavaScript even sometimes arrive

00:14:28,130 --> 00:14:33,530
probably somehow but now most of the

00:14:32,000 --> 00:14:35,120
important programming and difficult

00:14:33,530 --> 00:14:37,430
programming it's done on the front and

00:14:35,120 --> 00:14:39,440
again so you need to have first client

00:14:37,430 --> 00:14:42,890
little first class developers on

00:14:39,440 --> 00:14:45,050
front-end and servers became easy

00:14:42,890 --> 00:14:47,450
because it's just API you know get some

00:14:45,050 --> 00:14:49,790
data you store it or retrieve some data

00:14:47,450 --> 00:14:52,070
from your storage and send it back to

00:14:49,790 --> 00:14:53,630
the front end and all the magic goes

00:14:52,070 --> 00:14:55,790
goes on the front I get the front end

00:14:53,630 --> 00:14:57,440
again but it's good to know because if

00:14:55,790 --> 00:15:00,320
you are developing applications where

00:14:57,440 --> 00:15:02,680
most of the powers on the front end even

00:15:00,320 --> 00:15:05,690
for our customers is very good because

00:15:02,680 --> 00:15:07,940
you know imagine that you are coming to

00:15:05,690 --> 00:15:10,550
your bank and telling your bank here's

00:15:07,940 --> 00:15:13,070
my device I bought it I pay for the

00:15:10,550 --> 00:15:15,650
internet please put your application on

00:15:13,070 --> 00:15:17,800
my device and use my processor use my

00:15:15,650 --> 00:15:20,000
memory for doing your business with me

00:15:17,800 --> 00:15:21,770
it's a pretty cool message for all the

00:15:20,000 --> 00:15:24,350
enterprises that they can do it this way

00:15:21,770 --> 00:15:26,930
so they can have much more much smaller

00:15:24,350 --> 00:15:28,370
servers much more infrastructure which

00:15:26,930 --> 00:15:31,220
is necessary to support such an

00:15:28,370 --> 00:15:34,670
applications than they had before so

00:15:31,220 --> 00:15:36,650
it's pretty cool and so it was single

00:15:34,670 --> 00:15:38,300
page application and we have to change

00:15:36,650 --> 00:15:40,190
the design process you have to solve a

00:15:38,300 --> 00:15:43,520
lot of things because if you try to just

00:15:40,190 --> 00:15:45,830
establish your work your your workspace

00:15:43,520 --> 00:15:50,930
everybody try to establish react to the

00:15:45,830 --> 00:15:54,190
plaque and so yeah so it you know it

00:15:50,930 --> 00:15:57,110
takes days now to have it up and running

00:15:54,190 --> 00:16:00,080
exactly in the way you want it it takes

00:15:57,110 --> 00:16:01,760
days if you start with it so we don't we

00:16:00,080 --> 00:16:04,100
can't afford to do this in every project

00:16:01,760 --> 00:16:06,260
so we now have workspace which can be

00:16:04,100 --> 00:16:09,050
set up in 15 minutes for any developer

00:16:06,260 --> 00:16:11,060
eg starting in a project his front end

00:16:09,050 --> 00:16:13,310
development workspace is ready in 15

00:16:11,060 --> 00:16:14,930
minutes and it's ready to develop it's

00:16:13,310 --> 00:16:17,680
ready to deploy in the cloud which is

00:16:14,930 --> 00:16:20,420
done with one command line command and

00:16:17,680 --> 00:16:22,670
he can start working and can start to be

00:16:20,420 --> 00:16:26,810
productive so those things were

00:16:22,670 --> 00:16:30,560
necessary to me to be to be soft on the

00:16:26,810 --> 00:16:32,420
server side a situation is different the

00:16:30,560 --> 00:16:34,910
one biggest of change change I taught

00:16:32,420 --> 00:16:37,220
you that is 60% of volt is now in

00:16:34,910 --> 00:16:39,560
JavaScript so it does make sense to

00:16:37,220 --> 00:16:42,800
develop server in JavaScript as well

00:16:39,560 --> 00:16:45,050
because if you try to develop rich

00:16:42,800 --> 00:16:46,850
front-end in JavaScript a lot of lines

00:16:45,050 --> 00:16:49,130
of code in JavaScript and now you you

00:16:46,850 --> 00:16:51,140
have to switch to to your back-end and

00:16:49,130 --> 00:16:53,450
switch the language even if you switch

00:16:51,140 --> 00:16:55,370
to Java which is quite similar it's very

00:16:53,450 --> 00:16:57,170
difficult and during the development

00:16:55,370 --> 00:17:01,779
process you switch several times a day

00:16:57,170 --> 00:17:04,040
so it's a lot of work and a lot of time

00:17:01,779 --> 00:17:06,860
you-you-you-you spent on switching

00:17:04,040 --> 00:17:09,079
languages so it completely makes sense

00:17:06,860 --> 00:17:12,110
to develop in JavaScript on servers

00:17:09,079 --> 00:17:14,510
unfortunately our enterprise clients are

00:17:12,110 --> 00:17:16,850
not ready to deploy their servers on low

00:17:14,510 --> 00:17:19,850
GS but I think they will because they

00:17:16,850 --> 00:17:21,470
will find the right value so I think the

00:17:19,850 --> 00:17:24,290
future is in no js' in that way

00:17:21,470 --> 00:17:26,179
especially when still fruit and will be

00:17:24,290 --> 00:17:28,490
in javascript but we have to saw for

00:17:26,179 --> 00:17:31,460
Java we have to support software dotnet

00:17:28,490 --> 00:17:33,110
it means c-sharp of course and for some

00:17:31,460 --> 00:17:35,270
other reasons we support Ruby as well

00:17:33,110 --> 00:17:39,140
because we have a quite quite large

00:17:35,270 --> 00:17:41,390
client base which are using Ruby so we

00:17:39,140 --> 00:17:43,309
have our surrogate already for all those

00:17:41,390 --> 00:17:45,380
technologies and it's micro-service

00:17:43,309 --> 00:17:47,570
architecture so it doesn't matter which

00:17:45,380 --> 00:17:48,920
service is is developed in visual

00:17:47,570 --> 00:17:51,290
English you can cooperate they have

00:17:48,920 --> 00:17:53,360
unified interface so you can have

00:17:51,290 --> 00:17:55,480
application which deploys cellar

00:17:53,360 --> 00:17:57,910
containers in Java several containers

00:17:55,480 --> 00:18:00,250
no no Jess and then it integrates to our

00:17:57,910 --> 00:18:01,750
application which API is written

00:18:00,250 --> 00:18:04,000
completely in c-sharp and it works

00:18:01,750 --> 00:18:06,340
together because of the others unified

00:18:04,000 --> 00:18:09,070
protocol unified interface of course

00:18:06,340 --> 00:18:14,010
best based on rest on J's and what what

00:18:09,070 --> 00:18:17,170
else we had to develop or introduced

00:18:14,010 --> 00:18:19,560
unified authentication so we choose YDC

00:18:17,170 --> 00:18:22,390
as a web standard you know it's it's all

00:18:19,560 --> 00:18:25,210
version 2 combined combined with open

00:18:22,390 --> 00:18:28,660
connect and this is a basement for all

00:18:25,210 --> 00:18:30,780
our servers for authentication we

00:18:28,660 --> 00:18:34,360
prepare Kappa gateway which can wrote

00:18:30,780 --> 00:18:35,860
dynamically a lot of lot of requests so

00:18:34,360 --> 00:18:38,440
you can scale your applications

00:18:35,860 --> 00:18:41,770
dynamically as you need and that's the

00:18:38,440 --> 00:18:45,220
next thing about your new cloud it's a

00:18:41,770 --> 00:18:47,920
thin layer on top of most popular public

00:18:45,220 --> 00:18:50,590
clouds like first one is either Amazon

00:18:47,920 --> 00:18:52,870
is there we have Google Cloud Services

00:18:50,590 --> 00:18:56,260
and now now we are introducing IBM

00:18:52,870 --> 00:18:58,120
bluemix and the thing is that all of

00:18:56,260 --> 00:19:00,640
them are great or they're not perfectly

00:18:58,120 --> 00:19:02,350
usable but each of them is different if

00:19:00,640 --> 00:19:04,540
you try to deploy our application to

00:19:02,350 --> 00:19:06,850
public cloud for a first time it again

00:19:04,540 --> 00:19:08,500
takes days before you find out how to

00:19:06,850 --> 00:19:10,120
configure especially if it's not one

00:19:08,500 --> 00:19:12,280
server but you need to have several

00:19:10,120 --> 00:19:14,320
services connected together just the

00:19:12,280 --> 00:19:16,980
visibility and security takes days to

00:19:14,320 --> 00:19:19,600
establish so we developed a thin layer

00:19:16,980 --> 00:19:21,670
ritual which wraps all those public

00:19:19,600 --> 00:19:23,710
public clouds and when you develop you

00:19:21,670 --> 00:19:25,600
don't care if it will run on premise

00:19:23,710 --> 00:19:28,660
river run on IBM bluemix or in nature

00:19:25,600 --> 00:19:32,170
the code is exactly the same to the

00:19:28,660 --> 00:19:34,180
other line of code so developers are

00:19:32,170 --> 00:19:36,130
developing on their local machines they

00:19:34,180 --> 00:19:38,890
can deploy our test environment in the

00:19:36,130 --> 00:19:41,350
cloud if customer wants to have it in

00:19:38,890 --> 00:19:44,410
IBM bluemix we can incorporate IBM

00:19:41,350 --> 00:19:46,960
bluemix even his subscription or we can

00:19:44,410 --> 00:19:50,050
provide it on on on the subscriptions we

00:19:46,960 --> 00:19:52,540
have and it's totally unified and

00:19:50,050 --> 00:19:54,940
totally flexible the second thing is

00:19:52,540 --> 00:19:57,940
which is very very very important if you

00:19:54,940 --> 00:19:59,500
develop applications on-premise you can

00:19:57,940 --> 00:20:01,330
have different mindset because for

00:19:59,500 --> 00:20:03,370
example if you are coding thinking about

00:20:01,330 --> 00:20:05,710
performance you have to tell the

00:20:03,370 --> 00:20:08,770
customer how much however I

00:20:05,710 --> 00:20:12,370
he has to buy so you are thinking about

00:20:08,770 --> 00:20:14,289
Peaks you add something on top of the

00:20:12,370 --> 00:20:17,020
peak and this is the amount of hardware

00:20:14,289 --> 00:20:18,429
you have to buy you know if you deploy

00:20:17,020 --> 00:20:20,590
in the cloud so if you're smart enough

00:20:18,429 --> 00:20:22,870
and you can do elastic scaling like if

00:20:20,590 --> 00:20:24,760
your performance goes up you are adding

00:20:22,870 --> 00:20:26,830
servers and if it go down you are

00:20:24,760 --> 00:20:29,620
switching them switching them down or

00:20:26,830 --> 00:20:31,990
the clouds are re very counted by by

00:20:29,620 --> 00:20:33,850
second so you pay just for a second the

00:20:31,990 --> 00:20:36,130
servers are running the new thinking

00:20:33,850 --> 00:20:38,710
about the lowest performance you need to

00:20:36,130 --> 00:20:41,260
deploy this is what you buy from your

00:20:38,710 --> 00:20:43,630
cloud provider and then you establish

00:20:41,260 --> 00:20:46,270
some elastic scaling which will add

00:20:43,630 --> 00:20:49,419
servers as necessary and switch them off

00:20:46,270 --> 00:20:53,350
you don't need it so again different

00:20:49,419 --> 00:20:54,880
mindset and sometimes a lot of companies

00:20:53,350 --> 00:20:57,309
are doing one mistake when they are

00:20:54,880 --> 00:21:00,039
moving to cloud that they are using you

00:20:57,309 --> 00:21:02,169
know the same the same performance

00:21:00,039 --> 00:21:05,080
performance measurements and the same

00:21:02,169 --> 00:21:07,690
amount of hardware and they just they're

00:21:05,080 --> 00:21:10,210
twice in crowds and then they find out

00:21:07,690 --> 00:21:12,549
that it's five times more expensive it's

00:21:10,210 --> 00:21:14,350
the reality if you buy our servers even

00:21:12,549 --> 00:21:16,059
if you count all our people so in

00:21:14,350 --> 00:21:18,700
Central Europe we have a long term

00:21:16,059 --> 00:21:20,590
statistics it's five times cheaper to

00:21:18,700 --> 00:21:23,140
have your hardware with your own people

00:21:20,590 --> 00:21:26,110
working on it then to have it in a cloud

00:21:23,140 --> 00:21:28,210
if you do if you don't do a stack

00:21:26,110 --> 00:21:29,500
scaling if you switch to elastic scaling

00:21:28,210 --> 00:21:33,190
it's completely different story

00:21:29,500 --> 00:21:35,409
and your hardware always have limits and

00:21:33,190 --> 00:21:37,779
if you wanted to add servers it's take

00:21:35,409 --> 00:21:40,330
it takes days you know if you want to

00:21:37,779 --> 00:21:43,870
have to add some performance in Azure it

00:21:40,330 --> 00:21:46,809
takes seconds and for most applications

00:21:43,870 --> 00:21:48,850
it's almost limitless and if it's not

00:21:46,809 --> 00:21:51,130
powerful enough we have another region

00:21:48,850 --> 00:21:54,220
which is Amazon AVS so we can we can

00:21:51,130 --> 00:21:56,710
switch switch to the traffic there so

00:21:54,220 --> 00:21:58,299
this is very powerful and if you if your

00:21:56,710 --> 00:22:02,049
architecture is ready for such a thing

00:21:58,299 --> 00:22:05,289
you can you can save a lot of money and

00:22:02,049 --> 00:22:09,130
the other thing is that the very how we

00:22:05,289 --> 00:22:11,770
how we wrap the cloud is contrary based

00:22:09,130 --> 00:22:13,809
architecture because just to buy hosts

00:22:11,770 --> 00:22:15,880
in cloud doesn't make sense the best way

00:22:13,809 --> 00:22:18,290
how to deploy is to use some containers

00:22:15,880 --> 00:22:21,500
we are using the current Lucas form

00:22:18,290 --> 00:22:23,600
so you are developing locally use of

00:22:21,500 --> 00:22:25,670
your doctor environment locally on your

00:22:23,600 --> 00:22:29,630
laptop so you can test even oil

00:22:25,670 --> 00:22:31,760
containers on the bite level on your

00:22:29,630 --> 00:22:35,840
laptop and then you can deploy it to the

00:22:31,760 --> 00:22:38,000
cloud easily so those are the three most

00:22:35,840 --> 00:22:41,270
important parts of our architecture and

00:22:38,000 --> 00:22:45,290
now we are ready to to to deploy of

00:22:41,270 --> 00:22:47,720
course I forgot about IOT so LT is

00:22:45,290 --> 00:22:50,330
important nobody knows for what but

00:22:47,720 --> 00:22:52,070
everybody knows it's important our

00:22:50,330 --> 00:22:53,900
customers think about IOT but we

00:22:52,070 --> 00:22:58,940
couldn't find a business case for IOT

00:22:53,900 --> 00:23:00,830
how we how we will start so first we

00:22:58,940 --> 00:23:02,510
needed some you know reference

00:23:00,830 --> 00:23:04,130
application for our architecture and

00:23:02,510 --> 00:23:06,380
when you are developing on special and

00:23:04,130 --> 00:23:07,970
front-end it's a long time tradition for

00:23:06,380 --> 00:23:10,580
every framework that they would ever

00:23:07,970 --> 00:23:13,810
introduce an eShop if you think about

00:23:10,580 --> 00:23:16,910
all the frameworks you saw ember.js

00:23:13,810 --> 00:23:19,310
dotnet framework asp.net all the

00:23:16,910 --> 00:23:21,950
reference reference applications

00:23:19,310 --> 00:23:26,020
provided from from the vendor who are

00:23:21,950 --> 00:23:28,270
usually shop so we decided to provide

00:23:26,020 --> 00:23:32,210
reference architecture in shop as well

00:23:28,270 --> 00:23:35,240
so we introduced this IOT device first

00:23:32,210 --> 00:23:43,670
maybe I will show you the shop live

00:23:35,240 --> 00:23:47,810
demonstration now I'm brave okay I will

00:23:43,670 --> 00:23:54,020
just check if I'm if I'm locked let's

00:23:47,810 --> 00:23:56,090
switch to English and this is a very

00:23:54,020 --> 00:23:56,840
special issue of you know it has just

00:23:56,090 --> 00:24:00,440
free products

00:23:56,840 --> 00:24:03,470
it's a petty shop you can see it has a

00:24:00,440 --> 00:24:05,480
special special thing for for dogs it's

00:24:03,470 --> 00:24:08,960
rabbit ears I have free dogs they love

00:24:05,480 --> 00:24:10,430
them you know so if you want them to

00:24:08,960 --> 00:24:14,030
behave nice you can show them rabbit

00:24:10,430 --> 00:24:16,370
ears yeah okay yeah so we have rabbit

00:24:14,030 --> 00:24:19,100
ears for dogs there has to be something

00:24:16,370 --> 00:24:23,060
for the dog lovers as well so we have a

00:24:19,100 --> 00:24:25,850
smoke needle and something for vice as

00:24:23,060 --> 00:24:27,180
well so we have gummy bears just this

00:24:25,850 --> 00:24:29,310
free product

00:24:27,180 --> 00:24:33,180
and you can buy it of course from a

00:24:29,310 --> 00:24:36,360
mobile nobody on a reactive conference

00:24:33,180 --> 00:24:38,820
will be surprised that if you if you

00:24:36,360 --> 00:24:40,710
switch to smaller smaller factor it will

00:24:38,820 --> 00:24:44,610
work completely mobile I never feel

00:24:40,710 --> 00:24:47,670
everything changes it's perfect but it's

00:24:44,610 --> 00:24:51,560
not the most funny thing on it but what

00:24:47,670 --> 00:24:54,690
if your dog could order their goodies

00:24:51,560 --> 00:24:56,220
that would be nice isn't that so we

00:24:54,690 --> 00:24:59,520
developed this device you know it's

00:24:56,220 --> 00:25:01,100
based on an arena and if a dog comes to

00:24:59,520 --> 00:25:05,970
this device and parks

00:25:01,100 --> 00:25:08,100
it will order rabbit ears you can try if

00:25:05,970 --> 00:25:13,110
you want anybody want anybody want to

00:25:08,100 --> 00:25:14,580
bark don't be shy but you can't back

00:25:13,110 --> 00:25:17,850
from that side because the near

00:25:14,580 --> 00:25:20,370
neighbor's dog could could order so so

00:25:17,850 --> 00:25:23,730
there's a proximity sensor so the dog

00:25:20,370 --> 00:25:26,910
has to be about like like 50 centimeters

00:25:23,730 --> 00:25:29,430
from from the sensor so we can try or

00:25:26,910 --> 00:25:39,450
maybe I got to show you the orders it's

00:25:29,430 --> 00:25:43,620
very easy many orders and we will try if

00:25:39,450 --> 00:25:45,540
we can we can order of course sometimes

00:25:43,620 --> 00:25:48,090
even even the dog lover want to order so

00:25:45,540 --> 00:25:51,390
there's a special button it's might on

00:25:48,090 --> 00:25:54,210
the 3d printer of course yeah so first

00:25:51,390 --> 00:25:56,970
we can try if I can order some smoke

00:25:54,210 --> 00:26:00,720
knee by it it's connected through Wi-Fi

00:25:56,970 --> 00:26:02,700
and it was okay so we should seen in

00:26:00,720 --> 00:26:04,910
couple of couple of seconds that there

00:26:02,700 --> 00:26:15,690
will be another order for smoke knee and

00:26:04,910 --> 00:26:21,590
we can try to bark but okay use new

00:26:15,690 --> 00:26:21,590
smoke knee and our dog is coming

00:26:23,980 --> 00:26:28,220
students in our University bulbous it's

00:26:26,810 --> 00:26:31,640
perfect you know of course it's not

00:26:28,220 --> 00:26:32,900
production ready yeah but you can

00:26:31,640 --> 00:26:35,270
imagine that if you have such a

00:26:32,900 --> 00:26:36,740
prototype you can order some guys in

00:26:35,270 --> 00:26:38,720
China and I hope you do this produced

00:26:36,740 --> 00:26:41,540
this in millions and it will be Desai's

00:26:38,720 --> 00:26:45,320
so there's no problem with the design of

00:26:41,540 --> 00:26:47,750
it if it works it can be some it can can

00:26:45,320 --> 00:26:50,480
be small and it can be localized we just

00:26:47,750 --> 00:26:52,580
need to find out enough dog lovers which

00:26:50,480 --> 00:26:58,900
will allow their dogs to order a food by

00:26:52,580 --> 00:26:58,900
themselves and so and it's here you know

00:27:00,220 --> 00:27:06,050
so this looks very funny and very easy

00:27:03,950 --> 00:27:08,980
but it's a prototype oh it could work

00:27:06,050 --> 00:27:12,380
actually it uses microsoft azure IOT hub

00:27:08,980 --> 00:27:15,200
to connect to our architecture hey I see

00:27:12,380 --> 00:27:18,200
Microsoft there perfect yeah very good

00:27:15,200 --> 00:27:22,520
technology most of our cloud runs in a

00:27:18,200 --> 00:27:24,530
rounds in Azure now so and so but you

00:27:22,520 --> 00:27:26,480
can do it with Amazon IOT as well I'm

00:27:24,530 --> 00:27:30,200
not ready to show you but you have to

00:27:26,480 --> 00:27:31,460
believe me and this I have is perfect

00:27:30,200 --> 00:27:34,580
because this is something which can

00:27:31,460 --> 00:27:36,710
unify the mess of IOT things because it

00:27:34,580 --> 00:27:38,810
can you know there are a lot of

00:27:36,710 --> 00:27:41,120
standards about connect IOT devices and

00:27:38,810 --> 00:27:42,980
a lot of protocols and if you want to do

00:27:41,120 --> 00:27:45,140
it by yourself it's a lot of lot of work

00:27:42,980 --> 00:27:47,840
a lot of lot of maintenance and algae

00:27:45,140 --> 00:27:50,990
hops integrates now about 6000 devices

00:27:47,840 --> 00:27:53,570
at 6000 protocols so you just connect

00:27:50,990 --> 00:27:54,950
your IOT device to IOT hub and then you

00:27:53,570 --> 00:27:57,710
have unified interface how to how to

00:27:54,950 --> 00:27:59,990
communicate with it so this is the way

00:27:57,710 --> 00:28:02,720
how you can for example integrate IOT to

00:27:59,990 --> 00:28:04,430
your application and this is all Orisha

00:28:02,720 --> 00:28:06,860
pandas working and now if when I switch

00:28:04,430 --> 00:28:14,470
to bottom of slides because yeah at the

00:28:06,860 --> 00:28:14,470
end of the presentation you can see

00:28:17,650 --> 00:28:22,930
that many more applications are now

00:28:20,300 --> 00:28:25,130
developed in this architecture actually

00:28:22,930 --> 00:28:27,920
we have five complications running

00:28:25,130 --> 00:28:29,690
scorer out August care provider in in

00:28:27,920 --> 00:28:32,480
Czech Republic for example application

00:28:29,690 --> 00:28:34,460
which is which is used for all the

00:28:32,480 --> 00:28:36,800
ultras services around the world just

00:28:34,460 --> 00:28:38,390
using our framework you know to check

00:28:36,800 --> 00:28:41,870
out check in the car in the service and

00:28:38,390 --> 00:28:43,850
check out and many more so now about 5%

00:28:41,870 --> 00:28:46,280
of our of our clients are using this

00:28:43,850 --> 00:28:48,560
architecture and we want to persuade

00:28:46,280 --> 00:28:50,510
them that each of them should start

00:28:48,560 --> 00:28:52,760
their their applications to be mobile

00:28:50,510 --> 00:28:56,180
first I'll give ready and running in the

00:28:52,760 --> 00:29:00,380
cloud so if you have any questions now

00:28:56,180 --> 00:29:02,120
this time or I will be outside for a

00:29:00,380 --> 00:29:04,430
couple of minutes so I don't want to

00:29:02,120 --> 00:29:07,100
block another another speaker so thank

00:29:04,430 --> 00:29:08,820
you for for coming can hope you oh I see

00:29:07,100 --> 00:29:13,250
you next time

00:29:08,820 --> 00:29:13,250
[Applause]

00:29:17,830 --> 00:29:19,890

YouTube URL: https://www.youtube.com/watch?v=Hg6Vma2Cldw


