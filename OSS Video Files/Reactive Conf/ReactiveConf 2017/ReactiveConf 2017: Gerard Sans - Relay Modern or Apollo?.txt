Title: ReactiveConf 2017: Gerard Sans - Relay Modern or Apollo?
Publication date: 2017-11-20
Playlist: ReactiveConf 2017
Description: 
	Discovery stage

https://reactiveconf.com/
25th - 27th October 2017, Bratislava, Slovakia
Captions: 
	00:00:02,020 --> 00:00:07,440
[Music]

00:00:07,960 --> 00:00:10,020
you

00:00:14,559 --> 00:00:23,470
okay hello everyone we are going to talk

00:00:19,630 --> 00:00:26,789
about comparing real a modern and Apollo

00:00:23,470 --> 00:00:30,700
at this talk at the reactive curve and

00:00:26,789 --> 00:00:32,680
I'm pretty excited about these two

00:00:30,700 --> 00:00:35,530
clients I don't know if you have been

00:00:32,680 --> 00:00:37,780
following graphic well this past year

00:00:35,530 --> 00:00:41,829
but we have seen a lot of changes going

00:00:37,780 --> 00:00:45,129
on and I'm going to cover one of the

00:00:41,829 --> 00:00:47,019
more the most common questions and when

00:00:45,129 --> 00:00:50,710
you start a new graphic well project

00:00:47,019 --> 00:00:53,170
you're probably thinking okay so cool

00:00:50,710 --> 00:00:54,850
yeah we are going to use this new

00:00:53,170 --> 00:00:58,539
technology from facebook which is

00:00:54,850 --> 00:01:00,519
graphic well but then the next thing

00:00:58,539 --> 00:01:03,640
that you will be thinking of is which

00:01:00,519 --> 00:01:06,010
client you're going to use and actually

00:01:03,640 --> 00:01:07,540
we have these two different options and

00:01:06,010 --> 00:01:10,600
I'm going to go through the different

00:01:07,540 --> 00:01:13,690
features so you can have this overall

00:01:10,600 --> 00:01:16,810
picture of what you can use from each of

00:01:13,690 --> 00:01:18,370
these two different clients before I go

00:01:16,810 --> 00:01:20,369
into the details I want to introduce

00:01:18,370 --> 00:01:23,380
myself

00:01:20,369 --> 00:01:26,229
so I'm a Google developer expert and

00:01:23,380 --> 00:01:29,350
this is a title that Google gives to

00:01:26,229 --> 00:01:32,020
some of the most active community

00:01:29,350 --> 00:01:34,420
contributors and it allows me to go to a

00:01:32,020 --> 00:01:38,590
lot of conferences and events like this

00:01:34,420 --> 00:01:40,719
one so it's pretty fun I also do some

00:01:38,590 --> 00:01:43,390
other things like I was at the panel

00:01:40,719 --> 00:01:45,490
before and I also do this master of

00:01:43,390 --> 00:01:49,450
ceremonies and this is something that I

00:01:45,490 --> 00:01:53,399
do besides speaking which you can see

00:01:49,450 --> 00:01:55,840
maybe recognize some of the people

00:01:53,399 --> 00:01:58,450
besides doing these events and

00:01:55,840 --> 00:02:01,960
conferences I also do quite a lot of

00:01:58,450 --> 00:02:06,850
blogs and around this topic of graphic

00:02:01,960 --> 00:02:10,780
well I wrote this little block comparing

00:02:06,850 --> 00:02:13,720
graphic well using react and angular

00:02:10,780 --> 00:02:16,930
which is quite interesting and actually

00:02:13,720 --> 00:02:20,500
I come with an angular background but I

00:02:16,930 --> 00:02:24,420
got into react by using this graph quad

00:02:20,500 --> 00:02:24,420
technology which is quite interesting

00:02:25,240 --> 00:02:30,370
as a speaker I've been giving talks for

00:02:27,940 --> 00:02:34,000
the last two years and you can see that

00:02:30,370 --> 00:02:37,600
I'm all over the place the only thing

00:02:34,000 --> 00:02:40,660
that it's not done is Moscow which I'm

00:02:37,600 --> 00:02:42,180
going to be in December looking forward

00:02:40,660 --> 00:02:47,590
to it

00:02:42,180 --> 00:02:50,500
I've spoken at 5:55 events which is

00:02:47,590 --> 00:02:54,430
quite a lot if you count 12 months

00:02:50,500 --> 00:02:59,350
that's 24 so I've done more than double

00:02:54,430 --> 00:03:01,600
that number obviously I've started doing

00:02:59,350 --> 00:03:04,000
trainings because of these materials

00:03:01,600 --> 00:03:06,310
that I was preparing for conference

00:03:04,000 --> 00:03:08,860
talks and I started doing trainings

00:03:06,310 --> 00:03:11,350
which you can follow I don't have any

00:03:08,860 --> 00:03:14,680
specific trainings on react or graphic

00:03:11,350 --> 00:03:18,730
well but maybe next year I can I can

00:03:14,680 --> 00:03:22,270
work on some of them in London

00:03:18,730 --> 00:03:24,430
I run a community related to graphic

00:03:22,270 --> 00:03:27,790
well which is graphical London and you

00:03:24,430 --> 00:03:30,280
can see that it's pretty popular we can

00:03:27,790 --> 00:03:32,950
we can publish all of the meetups that

00:03:30,280 --> 00:03:37,440
we do so you can follow these different

00:03:32,950 --> 00:03:39,880
talks that we cover this year we had

00:03:37,440 --> 00:03:43,120
they created one of the creators of

00:03:39,880 --> 00:03:45,550
graphic well and some other people from

00:03:43,120 --> 00:03:46,960
the Apollo team and these are really

00:03:45,550 --> 00:03:51,490
interesting talks that you can follow

00:03:46,960 --> 00:03:54,370
from anywhere this year I also

00:03:51,490 --> 00:03:56,860
participated in this boot camp which is

00:03:54,370 --> 00:04:00,250
quite interesting which is reacting

00:03:56,860 --> 00:04:03,730
flip-flops and this this is this year so

00:04:00,250 --> 00:04:06,730
this is a calming event and well

00:04:03,730 --> 00:04:09,700
actually it has has passed already but

00:04:06,730 --> 00:04:11,680
the one that I was attending this year

00:04:09,700 --> 00:04:16,540
earlier this year was the one from Max

00:04:11,680 --> 00:04:19,720
and Nick and you can see I I was invited

00:04:16,540 --> 00:04:22,780
to do a small talk on graph quayle you

00:04:19,720 --> 00:04:24,190
can see me here this bootcamp is quite

00:04:22,780 --> 00:04:28,270
cool because you can also do some

00:04:24,190 --> 00:04:30,940
surfing lessons not related to so any

00:04:28,270 --> 00:04:31,810
development and yeah the location was

00:04:30,940 --> 00:04:35,370
really great

00:04:31,810 --> 00:04:37,620
this is Canary Islands so that was fun

00:04:35,370 --> 00:04:41,990
you can see some some

00:04:37,620 --> 00:04:45,000
pictures here doing crazy things okay so

00:04:41,990 --> 00:04:48,270
let's jump into the topic so one way to

00:04:45,000 --> 00:04:50,699
look into these different clients in

00:04:48,270 --> 00:04:53,760
graphic well is looking at the timeline

00:04:50,699 --> 00:04:59,550
so what has happened in this past years

00:04:53,760 --> 00:05:05,040
and it all starts in 2012 and Facebook

00:04:59,550 --> 00:05:09,870
release this new client that is using

00:05:05,040 --> 00:05:12,479
native mobile native which is very much

00:05:09,870 --> 00:05:14,580
like this screenshot that I added here

00:05:12,479 --> 00:05:16,830
and probably you have been using this

00:05:14,580 --> 00:05:19,320
client at the time or maybe later and

00:05:16,830 --> 00:05:22,500
that was already using this graph cual

00:05:19,320 --> 00:05:25,410
technology and this was created by

00:05:22,500 --> 00:05:30,000
Facebook to migrate from HTML 5 to

00:05:25,410 --> 00:05:33,710
native mobile apps so it's it's been

00:05:30,000 --> 00:05:38,630
used in production for quite a long time

00:05:33,710 --> 00:05:41,880
it's not until 2015 that graph well goes

00:05:38,630 --> 00:05:43,440
open-source and this is a time when

00:05:41,880 --> 00:05:46,860
Facebook decides to open source the

00:05:43,440 --> 00:05:49,289
project and they create what's the first

00:05:46,860 --> 00:05:57,410
implementation of relay which is now

00:05:49,289 --> 00:05:57,410
called relay classic then in 2016

00:05:57,740 --> 00:06:04,080
github announces the all of the public

00:06:01,620 --> 00:06:09,240
API s will be using RAF quail and that's

00:06:04,080 --> 00:06:12,479
a big milestone for graphic well for the

00:06:09,240 --> 00:06:15,150
technology to reach more developers and

00:06:12,479 --> 00:06:19,590
you can use these api's with any

00:06:15,150 --> 00:06:21,720
graphical client there's also a few

00:06:19,590 --> 00:06:24,660
other changes we have the new website

00:06:21,720 --> 00:06:29,039
from graph quail which is graphic well

00:06:24,660 --> 00:06:32,490
org and we have the first conference

00:06:29,039 --> 00:06:34,550
focus only in graph quail which is the

00:06:32,490 --> 00:06:36,710
graph called cement in San Francisco

00:06:34,550 --> 00:06:40,740
actually this conference is happening

00:06:36,710 --> 00:06:43,020
right now so if you are following graph

00:06:40,740 --> 00:06:44,789
call summit in San Francisco you can

00:06:43,020 --> 00:06:47,000
follow some of the content being

00:06:44,789 --> 00:06:49,520
produced there

00:06:47,000 --> 00:06:51,530
and we are going to talk about the new

00:06:49,520 --> 00:06:54,800
version of Apollo client and that's

00:06:51,530 --> 00:06:56,990
Apollo client version 2 and I'm hoping

00:06:54,800 --> 00:07:01,360
that they will release it during this

00:06:56,990 --> 00:07:04,010
conference so just stay tuned

00:07:01,360 --> 00:07:06,590
this year we have got some other

00:07:04,010 --> 00:07:08,720
highlights around Graff quail and

00:07:06,590 --> 00:07:10,910
earlier this year we got the first

00:07:08,720 --> 00:07:15,680
version of Apollo client which is Apollo

00:07:10,910 --> 00:07:19,370
Klein 1.0 and later on just a couple of

00:07:15,680 --> 00:07:21,169
months ago we got the first the second

00:07:19,370 --> 00:07:24,200
version of relay which is called relay

00:07:21,169 --> 00:07:26,210
motor and that's more or less what

00:07:24,200 --> 00:07:29,960
triggered the talk that I'm going to

00:07:26,210 --> 00:07:35,480
cover today how we compare these two

00:07:29,960 --> 00:07:38,270
clients and as you can see him these are

00:07:35,480 --> 00:07:41,570
quite recent in time so they are more or

00:07:38,270 --> 00:07:44,090
less giving you the same features and

00:07:41,570 --> 00:07:45,919
I'm going to try to answer the questions

00:07:44,090 --> 00:07:51,200
about which of the two clients you

00:07:45,919 --> 00:07:55,430
should use one way of looking at this is

00:07:51,200 --> 00:07:59,900
by looking at how popular these projects

00:07:55,430 --> 00:08:02,690
are in NPM and I'd like to I like to

00:07:59,900 --> 00:08:06,640
look into these graphics and you can see

00:08:02,690 --> 00:08:10,280
that in orange we have Apollo client

00:08:06,640 --> 00:08:13,580
which is version 1 and then we have

00:08:10,280 --> 00:08:19,280
relay at the bottom so you can see that

00:08:13,580 --> 00:08:21,080
it's slightly more popular but that's

00:08:19,280 --> 00:08:25,120
not the only thing that we are going to

00:08:21,080 --> 00:08:27,830
cover today but that's just a start

00:08:25,120 --> 00:08:30,890
there's some tooling that has been

00:08:27,830 --> 00:08:33,010
released this year and probably the most

00:08:30,890 --> 00:08:36,080
interesting is this tool called

00:08:33,010 --> 00:08:39,440
Launchpad and it allows you to create

00:08:36,080 --> 00:08:47,510
graphical servers online and share the

00:08:39,440 --> 00:08:51,020
endpoint to build any clients there's

00:08:47,510 --> 00:08:52,940
also a new website that was just

00:08:51,020 --> 00:08:55,760
recently released and this is graph

00:08:52,940 --> 00:08:58,310
Qualcomm and that will give you a lot of

00:08:55,760 --> 00:08:59,720
you know the tutorials and guides for

00:08:58,310 --> 00:09:00,529
the different technologies that you can

00:08:59,720 --> 00:09:03,079
use

00:09:00,529 --> 00:09:06,620
Groff quail and this is I would say they

00:09:03,079 --> 00:09:09,079
go to a website the other website that I

00:09:06,620 --> 00:09:15,430
shown before that was graphic well.org

00:09:09,079 --> 00:09:18,889
this is also still a good reference site

00:09:15,430 --> 00:09:20,870
and I couldn't forget about the

00:09:18,889 --> 00:09:23,029
graphical summit which is happening

00:09:20,870 --> 00:09:25,579
right now oh it's going to start in the

00:09:23,029 --> 00:09:28,879
next couple of hours so we are pretty

00:09:25,579 --> 00:09:33,110
exciting about learning about this new

00:09:28,879 --> 00:09:36,769
Apollo Tryon dot 2.0 and we are going to

00:09:33,110 --> 00:09:41,779
have you know some some guests talking

00:09:36,769 --> 00:09:43,819
about this we'll see how we do that so

00:09:41,779 --> 00:09:48,470
let's start talking about real a modern

00:09:43,819 --> 00:09:52,069
so real a modern is the library built by

00:09:48,470 --> 00:09:55,629
Facebook and we have now real a classic

00:09:52,069 --> 00:09:58,879
and real a modern and that's going to

00:09:55,629 --> 00:10:02,930
have some interesting features as you

00:09:58,879 --> 00:10:06,050
know this is created by Facebook and we

00:10:02,930 --> 00:10:09,079
are talking now about release 1.4 dot

00:10:06,050 --> 00:10:13,160
one and that's the latest release of a

00:10:09,079 --> 00:10:16,129
real a modern these integrates only with

00:10:13,160 --> 00:10:21,139
react so if you are using react that

00:10:16,129 --> 00:10:24,680
could be a good option for you we have

00:10:21,139 --> 00:10:26,629
seen how many downloads we we have for

00:10:24,680 --> 00:10:28,459
these two different clients there's also

00:10:26,629 --> 00:10:32,329
the stars I don't know if you look at

00:10:28,459 --> 00:10:35,689
the stars at github but that's some some

00:10:32,329 --> 00:10:39,170
data that we can use and probably the

00:10:35,689 --> 00:10:43,309
most important is that they are using

00:10:39,170 --> 00:10:47,779
now MIT license and this is starting

00:10:43,309 --> 00:10:52,269
with this one dot 4.1 release so you can

00:10:47,779 --> 00:10:54,829
now use these Apollo relay modern

00:10:52,269 --> 00:10:57,019
without worrying about the licensing

00:10:54,829 --> 00:11:00,740
which has been one of the worries by

00:10:57,019 --> 00:11:05,660
using these libraries so what features

00:11:00,740 --> 00:11:08,179
give you the main focus of relay modern

00:11:05,660 --> 00:11:11,059
is performance so that's something that

00:11:08,179 --> 00:11:12,110
you have to take into account when using

00:11:11,059 --> 00:11:15,529
this

00:11:12,110 --> 00:11:20,450
library the main the way that achieves

00:11:15,529 --> 00:11:23,450
is is by using a specific compiler and

00:11:20,450 --> 00:11:26,510
available plugin that will go and check

00:11:23,450 --> 00:11:29,810
all of your queries and find the most

00:11:26,510 --> 00:11:34,190
performant usage for them so that will

00:11:29,810 --> 00:11:36,800
be part of the building process during

00:11:34,190 --> 00:11:39,589
this time there will be some

00:11:36,800 --> 00:11:41,930
optimizations that will be applied and

00:11:39,589 --> 00:11:44,420
this is something that you can you can

00:11:41,930 --> 00:11:47,959
see the improvements of performance in

00:11:44,420 --> 00:11:52,100
when you try some of the proof of

00:11:47,959 --> 00:11:54,800
concepts what happens when you use real

00:11:52,100 --> 00:11:57,260
a modern is that you will start seeing

00:11:54,800 --> 00:12:00,170
how Facebook manage different

00:11:57,260 --> 00:12:01,880
abstractions and it just depends how

00:12:00,170 --> 00:12:04,810
familiar you are with these abstractions

00:12:01,880 --> 00:12:07,029
that you will find it easy to use

00:12:04,810 --> 00:12:10,490
there's a concept that is called

00:12:07,029 --> 00:12:15,050
colocation that it's very interesting we

00:12:10,490 --> 00:12:17,060
will have the queries which they use in

00:12:15,050 --> 00:12:19,250
the form of fragments together with the

00:12:17,060 --> 00:12:23,720
different components and that will give

00:12:19,250 --> 00:12:25,940
us some interesting properties they also

00:12:23,720 --> 00:12:29,870
use a custom implementation of the store

00:12:25,940 --> 00:12:34,310
and that can be that can be a good thing

00:12:29,870 --> 00:12:36,529
or a bad thing for Apollo we can see

00:12:34,310 --> 00:12:38,269
that they are using Redux and if you are

00:12:36,529 --> 00:12:40,790
familiar with Redux it will be very

00:12:38,269 --> 00:12:44,420
familiar to you with real a modern they

00:12:40,790 --> 00:12:46,370
use this custom store that will will

00:12:44,420 --> 00:12:51,430
mean that you need to learn a different

00:12:46,370 --> 00:12:54,740
stack then we can see these different

00:12:51,430 --> 00:12:57,380
concepts we have connections recourse

00:12:54,740 --> 00:12:59,089
and fields and these are not specific to

00:12:57,380 --> 00:13:01,940
graph coil so these are some other

00:12:59,089 --> 00:13:06,610
concepts that you we have to learn which

00:13:01,940 --> 00:13:06,610
are more in these Facebook abstractions

00:13:06,880 --> 00:13:12,079
we also have the concept of the viewer

00:13:09,440 --> 00:13:14,750
which is the user accessing this

00:13:12,079 --> 00:13:19,760
information and also some helpers to do

00:13:14,750 --> 00:13:22,040
pagination these abstractions will help

00:13:19,760 --> 00:13:25,339
you if you are implementing these use

00:13:22,040 --> 00:13:26,110
cases so that's also a good thing when

00:13:25,339 --> 00:13:28,480
you are trying to

00:13:26,110 --> 00:13:30,250
some more complex applications some of

00:13:28,480 --> 00:13:34,959
the code that you will have to write it

00:13:30,250 --> 00:13:38,079
will be available to you let's look now

00:13:34,959 --> 00:13:41,589
into Apollo client and this is the other

00:13:38,079 --> 00:13:46,750
popular much much popular library to

00:13:41,589 --> 00:13:50,560
implement our graph called science so as

00:13:46,750 --> 00:13:54,160
an overview this project is maintained

00:13:50,560 --> 00:13:57,970
by a meteor and the last release is

00:13:54,160 --> 00:14:02,170
1.9.3 just to mention again that they

00:13:57,970 --> 00:14:04,149
are about to release Apollo tool and

00:14:02,170 --> 00:14:05,769
probably the most interesting thing is

00:14:04,149 --> 00:14:08,980
that they integrate with different

00:14:05,769 --> 00:14:10,870
frameworks it's not only integrated with

00:14:08,980 --> 00:14:15,430
react but it can also be used with

00:14:10,870 --> 00:14:18,880
angular and vo so it's interesting for

00:14:15,430 --> 00:14:21,220
these other frameworks it's also a

00:14:18,880 --> 00:14:24,850
popular project so you can you can see

00:14:21,220 --> 00:14:27,820
him from the stars and some of the main

00:14:24,850 --> 00:14:30,760
features I would say that Apollo Kline

00:14:27,820 --> 00:14:35,380
is more community driven you can see a

00:14:30,760 --> 00:14:39,699
lot of more collaborations from the

00:14:35,380 --> 00:14:42,339
community there's this simplicity when

00:14:39,699 --> 00:14:44,350
you are building the different features

00:14:42,339 --> 00:14:47,440
from graph well you won't have to

00:14:44,350 --> 00:14:49,149
introduce any extra abstractions we were

00:14:47,440 --> 00:14:55,660
talking about these abstractions like

00:14:49,149 --> 00:14:58,290
the pagination from the relay modern so

00:14:55,660 --> 00:15:00,940
you don't have these extra layers of

00:14:58,290 --> 00:15:05,649
abstractions which makes development a

00:15:00,940 --> 00:15:08,769
little bit simpler and it uses familiar

00:15:05,649 --> 00:15:10,209
libraries like redux so that's something

00:15:08,769 --> 00:15:14,560
that you need to take into account if

00:15:10,209 --> 00:15:16,240
your team is familiar with those the

00:15:14,560 --> 00:15:19,870
integration with other frameworks we

00:15:16,240 --> 00:15:23,850
have covered and I also have some points

00:15:19,870 --> 00:15:27,910
here for Apollo tool and I'm going to go

00:15:23,850 --> 00:15:31,180
quickly over them so there's this new

00:15:27,910 --> 00:15:34,510
concept of modular network layer and

00:15:31,180 --> 00:15:37,630
that's using a observables from our xes

00:15:34,510 --> 00:15:39,570
that's an addition for the new version

00:15:37,630 --> 00:15:42,890
we can also use some new

00:15:39,570 --> 00:15:45,900
directives that were not implemented

00:15:42,890 --> 00:15:51,570
before so we can use this life and

00:15:45,900 --> 00:15:55,080
differ in our queries this this is also

00:15:51,570 --> 00:15:58,170
introducing other stores so we can

00:15:55,080 --> 00:16:00,750
abstract the store and use for example

00:15:58,170 --> 00:16:04,950
more vex or some other stores that you

00:16:00,750 --> 00:16:07,980
may be using today there's this large

00:16:04,950 --> 00:16:09,980
improvement on the bundle size and we

00:16:07,980 --> 00:16:15,000
have seen a lot of the frameworks

00:16:09,980 --> 00:16:17,160
putting a lot of focus on making the

00:16:15,000 --> 00:16:19,650
bundles smaller that will make your

00:16:17,160 --> 00:16:22,080
application faster on the initial load

00:16:19,650 --> 00:16:27,120
and this can also be critical for mobile

00:16:22,080 --> 00:16:29,100
applications it's much faster than the

00:16:27,120 --> 00:16:32,880
previous version and there's some new

00:16:29,100 --> 00:16:36,210
implementations involving the local

00:16:32,880 --> 00:16:38,730
catch and this will be when you are

00:16:36,210 --> 00:16:42,090
using large data sets so these are a few

00:16:38,730 --> 00:16:45,930
interesting new additions the migration

00:16:42,090 --> 00:16:48,810
is not complicated at all and maybe I'm

00:16:45,930 --> 00:16:52,230
just pointing some of these new features

00:16:48,810 --> 00:16:55,020
but we have we have some guests from the

00:16:52,230 --> 00:16:58,560
app follow try and I think they can give

00:16:55,020 --> 00:17:06,880
you some more details so you can don't

00:16:58,560 --> 00:17:09,250
be don't be shy yeah come on

00:17:06,880 --> 00:17:12,760
so we have you can comment from this

00:17:09,250 --> 00:17:17,829
side so we have Julie and Peggy from the

00:17:12,760 --> 00:18:02,350
Apolo Kim maybe maybe you can give some

00:17:17,829 --> 00:18:04,510
extra details on this but then you can

00:18:02,350 --> 00:18:07,440
swap that out for example if you have

00:18:04,510 --> 00:18:10,380
really large nested we have a

00:18:07,440 --> 00:18:13,000
community-driven graph

00:18:10,380 --> 00:18:15,850
great and performant especially for

00:18:13,000 --> 00:18:17,380
weeds or in the future we kind of see

00:18:15,850 --> 00:18:20,110
the community building their own custom

00:18:17,380 --> 00:18:22,360
caches maybe for a sink storage and

00:18:20,110 --> 00:18:25,570
react native for example or introducing

00:18:22,360 --> 00:18:26,830
a cache for Bob X so that's kind of all

00:18:25,570 --> 00:18:29,110
the exciting developments that are

00:18:26,830 --> 00:18:31,299
happening with the cache and then our

00:18:29,110 --> 00:18:33,100
new network staff called Apollo Ling is

00:18:31,299 --> 00:18:35,320
really great because it allows you to

00:18:33,100 --> 00:18:37,600
hook into the request cycle at any point

00:18:35,320 --> 00:18:40,299
so it allows you to do really cool stuff

00:18:37,600 --> 00:18:43,000
with directives it's observable ways so

00:18:40,299 --> 00:18:46,419
you can return multiple results from

00:18:43,000 --> 00:18:47,830
your graph QL operation and yeah we're

00:18:46,419 --> 00:18:49,659
really excited about it if you want to

00:18:47,830 --> 00:18:50,610
learn more come check out my talk

00:18:49,659 --> 00:18:54,770
tomorrow I'll be

00:18:50,610 --> 00:18:54,770
main stage I think right before lunch

00:18:55,850 --> 00:19:10,890
yeah you need maybe so I wanted a lot of

00:19:07,020 --> 00:19:12,960
what like that game drug already said my

00:19:10,890 --> 00:19:14,940
other talk was about real time and I

00:19:12,960 --> 00:19:17,040
don't think it's interesting right now

00:19:14,940 --> 00:19:19,980
I'll just like Peggy said it's way

00:19:17,040 --> 00:19:22,320
easier and better now to integrate real

00:19:19,980 --> 00:19:25,410
time capabilities like subscriptions and

00:19:22,320 --> 00:19:29,370
life into graphical into a photo plan

00:19:25,410 --> 00:19:32,160
2.0 and is also as an angular developer

00:19:29,370 --> 00:19:35,340
I had to mention that a follow up client

00:19:32,160 --> 00:19:36,750
2.0 is a huge step or angular and it's

00:19:35,340 --> 00:19:40,440
actually the first time that we're gonna

00:19:36,750 --> 00:19:43,500
release Apollo angular is one point O is

00:19:40,440 --> 00:19:47,040
like an official release because now you

00:19:43,500 --> 00:19:50,130
can use follow a follow angular like the

00:19:47,040 --> 00:19:53,730
rapper for angular around Apollo client

00:19:50,130 --> 00:19:57,210
with ng rx like the official score from

00:19:53,730 --> 00:20:01,320
the angular team written by warmin but

00:19:57,210 --> 00:20:03,330
also with the with the link of the of

00:20:01,320 --> 00:20:06,990
the network layer using the angular as

00:20:03,330 --> 00:20:10,980
HTTP service which actually gave us like

00:20:06,990 --> 00:20:12,960
a really nice thing where now you can

00:20:10,980 --> 00:20:14,820
use Apollo client to point out with

00:20:12,960 --> 00:20:17,340
native script and angular just out of

00:20:14,820 --> 00:20:19,919
the box so this is very very powerful

00:20:17,340 --> 00:20:23,370
all this work on the angular side was

00:20:19,919 --> 00:20:25,710
done not by me but by a Camille we

00:20:23,370 --> 00:20:29,549
should done the whole releasing process

00:20:25,710 --> 00:20:31,620
of decoding for death so yeah it was an

00:20:29,549 --> 00:20:35,850
amazing thing it was all possible too

00:20:31,620 --> 00:20:39,150
thanks to a client yeah well that's

00:20:35,850 --> 00:20:42,530
awesome well we couldn't we couldn't

00:20:39,150 --> 00:20:45,330
miss this you know contribution from

00:20:42,530 --> 00:20:47,610
from some of the team members of Apollo

00:20:45,330 --> 00:20:48,950
client so that was that was great thank

00:20:47,610 --> 00:20:54,929
you

00:20:48,950 --> 00:21:00,480
okay let's see okay let's move quickly

00:20:54,929 --> 00:21:03,090
so we are going to use project

00:21:00,480 --> 00:21:04,530
implementing an Instagram clone so

00:21:03,090 --> 00:21:07,350
that's going to be

00:21:04,530 --> 00:21:11,490
they told I'm going to use to compare

00:21:07,350 --> 00:21:13,260
these two different clients and this is

00:21:11,490 --> 00:21:15,720
the overall architecture so I'm going to

00:21:13,260 --> 00:21:18,810
use react and then these two different

00:21:15,720 --> 00:21:22,260
clients on the server side I'm going to

00:21:18,810 --> 00:21:25,140
use this graph call which is a graph

00:21:22,260 --> 00:21:30,060
called server as a service which I can

00:21:25,140 --> 00:21:33,180
just quickly configure to get my graph

00:21:30,060 --> 00:21:37,320
call schema working without much much

00:21:33,180 --> 00:21:39,930
more work so the schema is going to be

00:21:37,320 --> 00:21:41,910
really easy if if you are not familiar

00:21:39,930 --> 00:21:44,160
with a graph call schema

00:21:41,910 --> 00:21:46,800
this is just defining some of the types

00:21:44,160 --> 00:21:49,380
that I'm going to use fetch from my

00:21:46,800 --> 00:21:51,660
clients and these are some of the fields

00:21:49,380 --> 00:21:54,540
so basically have this description and

00:21:51,660 --> 00:21:58,380
I'm going to allow the users to post

00:21:54,540 --> 00:21:59,870
some pictures and I'm going to use this

00:21:58,380 --> 00:22:02,490
little schema

00:21:59,870 --> 00:22:04,350
maybe you recognize the type for the

00:22:02,490 --> 00:22:06,690
strings the only thing maybe that is not

00:22:04,350 --> 00:22:12,480
familiar is this exclamation point and

00:22:06,690 --> 00:22:15,660
that's to make this fields mandatory in

00:22:12,480 --> 00:22:18,980
order to put this live I'm going to use

00:22:15,660 --> 00:22:21,630
what it's called a graph cool CLI and

00:22:18,980 --> 00:22:24,210
just by using the schema that I just

00:22:21,630 --> 00:22:27,570
show you I can run some common line

00:22:24,210 --> 00:22:31,140
commands and put this on the graph Cola

00:22:27,570 --> 00:22:34,050
server and start using it right away so

00:22:31,140 --> 00:22:39,750
that's something that you may want to to

00:22:34,050 --> 00:22:42,060
do and use for proof of concepts so

00:22:39,750 --> 00:22:43,590
what's what's the setup like for this

00:22:42,060 --> 00:22:51,960
two different clients

00:22:43,590 --> 00:22:54,000
so what I'll set up this this solution I

00:22:51,960 --> 00:22:56,600
found out different things so I'm going

00:22:54,000 --> 00:23:00,500
to give a overview of the different

00:22:56,600 --> 00:23:04,080
findings so one of the things that I

00:23:00,500 --> 00:23:06,960
found with real a modern is that I had

00:23:04,080 --> 00:23:09,960
to introduce this compiler so there is

00:23:06,960 --> 00:23:12,000
an extra dependency and that's going to

00:23:09,960 --> 00:23:14,780
give me also some perform performance

00:23:12,000 --> 00:23:18,080
improvements as I was explaining before

00:23:14,780 --> 00:23:20,960
there's also some new and

00:23:18,080 --> 00:23:22,850
that I need to be aware we have this

00:23:20,960 --> 00:23:26,870
network and store and that's going to

00:23:22,850 --> 00:23:29,000
handle communications with the graphical

00:23:26,870 --> 00:23:33,139
server and the story is going to have

00:23:29,000 --> 00:23:36,740
the catch on the client we're going to

00:23:33,139 --> 00:23:39,500
use this via and attribute and that's

00:23:36,740 --> 00:23:41,179
how it's going to be set up on the

00:23:39,500 --> 00:23:45,200
client so this is more or less an over

00:23:41,179 --> 00:23:47,510
an over all of the set up for real a

00:23:45,200 --> 00:23:50,419
modern for a line we have some

00:23:47,510 --> 00:23:52,700
other dependencies what we are using is

00:23:50,419 --> 00:23:57,710
graph qual tach and that's going to be

00:23:52,700 --> 00:23:59,269
on our queries then on the setup of the

00:23:57,710 --> 00:24:01,760
Apollo client we have this network

00:23:59,269 --> 00:24:05,899
interface that is setting up the

00:24:01,760 --> 00:24:08,480
communications usually we are going to

00:24:05,899 --> 00:24:12,950
introduce a high order component that's

00:24:08,480 --> 00:24:15,679
going to be the Apollo provider and I'm

00:24:12,950 --> 00:24:19,639
going to rate these two different

00:24:15,679 --> 00:24:23,750
clients with three stars i I don't think

00:24:19,639 --> 00:24:26,059
there was anything complex by doing this

00:24:23,750 --> 00:24:29,000
setup so I was able to set up these two

00:24:26,059 --> 00:24:31,490
different clients pretty easily just had

00:24:29,000 --> 00:24:34,460
to define this end point on the graph

00:24:31,490 --> 00:24:38,809
cool graphical server and it was it was

00:24:34,460 --> 00:24:41,659
working right away I'm going to cover

00:24:38,809 --> 00:24:44,240
the different queries that we have we

00:24:41,659 --> 00:24:46,490
have queries mutations and subscriptions

00:24:44,240 --> 00:24:48,769
so I'm going to cover these three

00:24:46,490 --> 00:24:50,990
different areas and what were the

00:24:48,769 --> 00:24:54,380
difficulties while trying to implement

00:24:50,990 --> 00:24:58,100
those so queries work in graphic will

00:24:54,380 --> 00:25:00,799
work in this way we can use this query

00:24:58,100 --> 00:25:03,860
API and that will go through the schema

00:25:00,799 --> 00:25:06,200
and fetch some data that usually will

00:25:03,860 --> 00:25:10,370
come from a database and in our case is

00:25:06,200 --> 00:25:12,710
using this graph call so let's see what

00:25:10,370 --> 00:25:15,049
I found out so in order to run the

00:25:12,710 --> 00:25:16,970
queries we have this concept of query

00:25:15,049 --> 00:25:19,850
render and that's going to be a

00:25:16,970 --> 00:25:23,990
component that will require this

00:25:19,850 --> 00:25:26,629
environment and query objects the

00:25:23,990 --> 00:25:29,960
actually query generation is automated

00:25:26,629 --> 00:25:32,240
we are using this concept of

00:25:29,960 --> 00:25:35,029
means and it's going to execute the

00:25:32,240 --> 00:25:37,760
queries for me and compose them in a way

00:25:35,029 --> 00:25:40,610
that I don't have to worry so I can set

00:25:37,760 --> 00:25:43,309
up my projects by using these quality

00:25:40,610 --> 00:25:49,100
render components and these are going to

00:25:43,309 --> 00:25:52,700
be my sap for me so that means that this

00:25:49,100 --> 00:25:57,409
is a little bit more opinionated so I

00:25:52,700 --> 00:26:01,990
need to use this relay modern approach

00:25:57,409 --> 00:26:05,270
to build my an architect my application

00:26:01,990 --> 00:26:07,730
when we move into Apollo client what we

00:26:05,270 --> 00:26:10,370
use is this graphical high order

00:26:07,730 --> 00:26:15,500
components which is quite familiar in

00:26:10,370 --> 00:26:19,340
react what we do is we have this manual

00:26:15,500 --> 00:26:21,440
query generation we are not using the

00:26:19,340 --> 00:26:24,200
client to build it so it's our

00:26:21,440 --> 00:26:27,380
responsibility to build these queries

00:26:24,200 --> 00:26:30,049
trees it's a little bit more flexible so

00:26:27,380 --> 00:26:32,750
we can achieve more control on what we

00:26:30,049 --> 00:26:37,130
want to be old and I'm going to rate

00:26:32,750 --> 00:26:39,289
this in with two stars so there's some

00:26:37,130 --> 00:26:42,830
complexity involved when I want to

00:26:39,289 --> 00:26:45,919
architect my solution by using either of

00:26:42,830 --> 00:26:49,159
the two clients some some of the

00:26:45,919 --> 00:26:52,820
features good in real a modern I cannot

00:26:49,159 --> 00:26:55,279
find them in Apollo client but they they

00:26:52,820 --> 00:26:58,039
end up in the same in the same middle

00:26:55,279 --> 00:27:02,779
place so if you want some more

00:26:58,039 --> 00:27:04,909
opinionated approach real a modern could

00:27:02,779 --> 00:27:08,799
be a good option for you if you want

00:27:04,909 --> 00:27:12,440
more control you can use Apollo client

00:27:08,799 --> 00:27:17,270
for mutations mutations is the way how

00:27:12,440 --> 00:27:23,330
we modify our data model and we are

00:27:17,270 --> 00:27:25,610
using this mutation API and in relay

00:27:23,330 --> 00:27:27,950
model we use what is called commit

00:27:25,610 --> 00:27:32,570
mutation and we use this environment

00:27:27,950 --> 00:27:36,409
which sets the network and the store and

00:27:32,570 --> 00:27:41,090
we're using these abstractions to update

00:27:36,409 --> 00:27:43,970
our schema and we introduce these

00:27:41,090 --> 00:27:46,430
concepts of connection we also in

00:27:43,970 --> 00:27:48,920
to use fields and what is called lien

00:27:46,430 --> 00:27:50,810
records and this will be handling the

00:27:48,920 --> 00:27:54,980
mutations the changes that we do in our

00:27:50,810 --> 00:27:57,770
schema the good thing is that these will

00:27:54,980 --> 00:28:01,160
handle optimistic updates for us so it

00:27:57,770 --> 00:28:03,680
gives us some extra features when we

00:28:01,160 --> 00:28:07,730
implement the same mutations in a polar

00:28:03,680 --> 00:28:12,050
client we use what is a common approach

00:28:07,730 --> 00:28:15,650
in react we use properties probes to run

00:28:12,050 --> 00:28:17,780
these mutations and that is also using

00:28:15,650 --> 00:28:20,720
graph coil a higher order component

00:28:17,780 --> 00:28:28,400
which in this case is using the mutate

00:28:20,720 --> 00:28:31,370
API then we can use these reducers and

00:28:28,400 --> 00:28:34,070
arguments to actually update the store

00:28:31,370 --> 00:28:37,940
and this is also familiar if you are

00:28:34,070 --> 00:28:40,030
using a Redux in your team it also

00:28:37,940 --> 00:28:43,970
handles optimistic updates so that's

00:28:40,030 --> 00:28:46,370
paired with relay model and I'm going to

00:28:43,970 --> 00:28:49,190
rate a Pollock line is slightly better

00:28:46,370 --> 00:28:51,920
because I think that the approach is a

00:28:49,190 --> 00:28:53,840
little bit easier when running the

00:28:51,920 --> 00:28:56,630
mutations it also follows the same

00:28:53,840 --> 00:29:01,370
approach with queries so it makes it a

00:28:56,630 --> 00:29:03,140
little bit easier on relate modern we

00:29:01,370 --> 00:29:06,800
introduce new abstractions

00:29:03,140 --> 00:29:09,200
I guess that the benefit of this is when

00:29:06,800 --> 00:29:12,020
your solution gets more complex these

00:29:09,200 --> 00:29:14,570
abstractions will shine but for easy

00:29:12,020 --> 00:29:19,340
proof of concepts they get a little bit

00:29:14,570 --> 00:29:21,170
into into the way subscriptions so this

00:29:19,340 --> 00:29:23,650
is the last area I'm going to look and

00:29:21,170 --> 00:29:27,980
this is how we achieve real time and

00:29:23,650 --> 00:29:31,910
this is real interesting feature that we

00:29:27,980 --> 00:29:33,500
have not before and this is from open

00:29:31,910 --> 00:29:37,640
source project so this is something that

00:29:33,500 --> 00:29:40,190
you should look into subscriptions work

00:29:37,640 --> 00:29:43,910
in a little bit different way that

00:29:40,190 --> 00:29:46,760
queries and mutations what we are what

00:29:43,910 --> 00:29:48,890
we do is we subscribe to mutations on

00:29:46,760 --> 00:29:51,370
the on the server side and this will

00:29:48,890 --> 00:29:54,290
create events that then will be

00:29:51,370 --> 00:29:57,059
broadcasting so we have a separate store

00:29:54,290 --> 00:29:59,519
that is recording these events

00:29:57,059 --> 00:30:05,730
then this will be broadcasted to the

00:29:59,519 --> 00:30:08,340
client so let's see the differences

00:30:05,730 --> 00:30:11,100
between implementing a real-time with

00:30:08,340 --> 00:30:13,559
these two different clients the way we

00:30:11,100 --> 00:30:16,740
do that with relay model is by using

00:30:13,559 --> 00:30:18,809
this request subscription and that also

00:30:16,740 --> 00:30:22,019
uses this environment that we define

00:30:18,809 --> 00:30:23,759
during setup we're going also to use the

00:30:22,019 --> 00:30:25,769
same abstractions that we use for

00:30:23,759 --> 00:30:28,970
mutation so we have the connection we

00:30:25,769 --> 00:30:33,539
also have the fields and link records

00:30:28,970 --> 00:30:36,289
for Apollo we have a different API we

00:30:33,539 --> 00:30:39,690
are using subscribe to more in this case

00:30:36,289 --> 00:30:42,299
we're also using the familiar approach

00:30:39,690 --> 00:30:44,429
of using reducers and passing arguments

00:30:42,299 --> 00:30:48,149
so that's a little a little bit easier

00:30:44,429 --> 00:30:50,879
and in this case I'm going to rate both

00:30:48,149 --> 00:30:54,090
with two stars subscription is still I

00:30:50,879 --> 00:30:58,139
guess still in early stages but they

00:30:54,090 --> 00:31:00,389
were really easy to implement anyway so

00:30:58,139 --> 00:31:04,580
in the final round which is more or less

00:31:00,389 --> 00:31:08,490
the final overview I'm going to say that

00:31:04,580 --> 00:31:11,490
relay modern is an awesome option it's

00:31:08,490 --> 00:31:13,259
familiar if you know the Facebook way if

00:31:11,490 --> 00:31:17,059
you are familiar with these concepts

00:31:13,259 --> 00:31:20,330
from relay classic it will be a good

00:31:17,059 --> 00:31:23,580
option for you we have this viewer

00:31:20,330 --> 00:31:25,740
connectors pagination cover for you so

00:31:23,580 --> 00:31:28,440
you don't have to implement them there's

00:31:25,740 --> 00:31:32,190
also a lot of improvements when you have

00:31:28,440 --> 00:31:34,379
complex schemas and the compiler will

00:31:32,190 --> 00:31:38,309
just optimize those for you so you don't

00:31:34,379 --> 00:31:42,779
have to worry for Apollo Klein is also

00:31:38,309 --> 00:31:45,179
another awesome option if you need to

00:31:42,779 --> 00:31:47,039
use other frameworks other than react is

00:31:45,179 --> 00:31:50,789
definitely an option that you should

00:31:47,039 --> 00:31:53,519
look into if you also familiar with read

00:31:50,789 --> 00:31:55,950
axe that's an option that you can use

00:31:53,519 --> 00:31:58,259
behind the scenes and there's less

00:31:55,950 --> 00:32:01,169
concepts to learn so if you need to get

00:31:58,259 --> 00:32:04,769
results quick Apollo Klein is definitely

00:32:01,169 --> 00:32:07,769
for you I'm going to rate both as an ops

00:32:04,769 --> 00:32:10,659
awesome option so I don't know if I I

00:32:07,769 --> 00:32:14,529
could give you enough details but

00:32:10,659 --> 00:32:16,869
I hope you you enjoy the journey if you

00:32:14,529 --> 00:32:20,019
want to know more I have this proof of

00:32:16,869 --> 00:32:23,979
concept using both libraries so you can

00:32:20,019 --> 00:32:26,109
see it by yourself and there's also some

00:32:23,979 --> 00:32:30,009
more detail in this blog post that I

00:32:26,109 --> 00:32:33,940
wrote some time ago this is a tool

00:32:30,009 --> 00:32:36,190
similar to the sliders lido that we are

00:32:33,940 --> 00:32:38,859
using during the conference and you can

00:32:36,190 --> 00:32:43,869
see some of these concepts implemented

00:32:38,859 --> 00:32:46,230
in a more complex application that was

00:32:43,869 --> 00:32:51,220
all thank you very much

00:32:46,230 --> 00:32:51,220

YouTube URL: https://www.youtube.com/watch?v=HV3Bj9iE75M


