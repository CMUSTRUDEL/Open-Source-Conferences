Title: ReactiveConf 2016 LT - Gregory Shehet: Road from UndefinedLand
Publication date: 2016-11-24
Playlist: ReactiveConf 2016 Lightning Talks
Description: 
	https://reactiveconf.com 

Meet those driving the change! World-renowned mobile and web innovators got together for three days in one town.

ReactiveConf, October 26 - 28 2016, Bratislava, Slovakia

For inspiration, look at one of the most-starred Lightning Talks proposals for ReactiveConf 2016.

---

Gregory Shehet: Road from UndefinedLand

I work at Grammarly. We like React and happily use it in our applications. However, sometimes something goes wrong and bugs creep into the code. Here comes testing. It helps make us confident about the quality of our code.

https://gist.github.com/A-gambit/1ded6bf07cf4a497fc6eeb3e082ac612

---

Do you see yourself on the ReactiveConf stage? Do you want to become the next #ReactJS superstar? If you think you have a great idea everybody in the community should know about, join Lightning Talks, and share the spotlight with the best React experts at ReactiveConf next year!

All you need to do to become a part of them is to submit your proposal to Gist and leave the rest to the community.

The ten most-starred proposals will join our line-up, and the top three ones will get a free ReactiveConf ticket with an invitation to an exclusive dinner with our speakers and VIP guests.

Have you heard about ReactiveConf? According to tech superstars such as David Nolen, Richard Feldman, or Brent Vatne, itâ€™s the best conference on web and mobile app development! It focuses on all things React and beyond and takes place annually in Bratislava, Slovakia.

In 2016, more than 700 attendees from all over the world spent three days in Bratislava getting inspired, sharing amazing new ideas, and meeting more than 30 awesome speakers from companies such as Google, Cognitect, NoRedInk, RethinkDB, Airbnb, Microsoft, Facebook, and the list could go on forever.

If you want to be part of the next event, get your tickets now at https://reactiveconf.com, and React with us!
Captions: 
	00:00:04,550 --> 00:00:09,559
hi guys my name is shaked gregory isaacs

00:00:07,430 --> 00:00:12,410
engineer and grammarian now wrote from

00:00:09,559 --> 00:00:14,480
Underland and the fund one I work in

00:00:12,410 --> 00:00:17,630
grammarly and we developed the best

00:00:14,480 --> 00:00:19,520
grammar checker to our main project our

00:00:17,630 --> 00:00:21,650
web editor and extension which help

00:00:19,520 --> 00:00:24,410
users to correct their mistakes in the

00:00:21,650 --> 00:00:26,689
browser and too we at the vapor and

00:00:24,410 --> 00:00:28,669
Twitter up a new sink and sometimes such

00:00:26,689 --> 00:00:30,739
a situation appear when user come to

00:00:28,669 --> 00:00:34,070
protein tower error metrics are rising

00:00:30,739 --> 00:00:37,550
and we receive a roar and panic began

00:00:34,070 --> 00:00:40,370
and twin dissent in thousand tangent and

00:00:37,550 --> 00:00:42,739
defiant is not a function and after that

00:00:40,370 --> 00:00:45,679
post-mortem appear where we said that we

00:00:42,739 --> 00:00:48,140
are gradual skip developer at it's only

00:00:45,679 --> 00:00:50,870
JavaScript it's a bad language / 15 days

00:00:48,140 --> 00:00:53,059
there is no type there and we try to use

00:00:50,870 --> 00:00:56,239
a type checking like four types crib

00:00:53,059 --> 00:00:59,059
bite and defined to be again in budget

00:00:56,239 --> 00:01:02,329
way so here testing come it helped us to

00:00:59,059 --> 00:01:04,300
be quite for our court so we in memory I

00:01:02,329 --> 00:01:07,400
just write user engine test and

00:01:04,300 --> 00:01:10,850
everything is ok we play with selenium

00:01:07,400 --> 00:01:15,230
but we understand that we can smoke any

00:01:10,850 --> 00:01:18,230
RP every pair and some think some of the

00:01:15,230 --> 00:01:20,150
tests go down so here Rock calm each

00:01:18,230 --> 00:01:22,970
help us not only to create the gradual

00:01:20,150 --> 00:01:26,510
JavaScript application each help us to

00:01:22,970 --> 00:01:29,240
render our visual dome in memory so unit

00:01:26,510 --> 00:01:32,570
s time and address we try addressed and

00:01:29,240 --> 00:01:34,880
we have their own build system which is

00:01:32,570 --> 00:01:37,160
not very good configurable with jest so

00:01:34,880 --> 00:01:40,400
we think to find something really simple

00:01:37,160 --> 00:01:43,190
and it's a tape f / famous open source

00:01:40,400 --> 00:01:45,440
or sub stack and it's pretty simple it

00:01:43,190 --> 00:01:47,990
have only a few masses like equal

00:01:45,440 --> 00:01:51,050
difficult user error and its end and

00:01:47,990 --> 00:01:54,290
also we try to use enzyme library which

00:01:51,050 --> 00:01:56,180
web by engineers of Airbnb thank rly

00:01:54,290 --> 00:02:00,470
what well Richardson who will tell us

00:01:56,180 --> 00:02:02,420
about your native tomorrow engine

00:02:00,470 --> 00:02:06,230
Romilly willing to improve the situation

00:02:02,420 --> 00:02:09,519
we step and I write a tape in the

00:02:06,230 --> 00:02:14,000
library which update functionality of

00:02:09,519 --> 00:02:16,700
really poor tape and each have three

00:02:14,000 --> 00:02:18,240
types of methods the first type is

00:02:16,700 --> 00:02:22,620
simple testing which

00:02:18,240 --> 00:02:24,840
@g variable all and all child masses

00:02:22,620 --> 00:02:28,260
like type checking some error checking

00:02:24,840 --> 00:02:30,450
and others and the second one is more

00:02:28,260 --> 00:02:32,850
interesting is enzyme testing for

00:02:30,450 --> 00:02:36,540
example we have a component fool which

00:02:32,850 --> 00:02:40,050
render a de su casa nephew and text

00:02:36,540 --> 00:02:43,650
which sent each in the props and we

00:02:40,050 --> 00:02:46,380
shall render a local component and if

00:02:43,650 --> 00:02:49,830
you write tests in a simple type way we

00:02:46,380 --> 00:02:53,460
every time right t equal some rapper

00:02:49,830 --> 00:02:56,280
some in zim message let's cause for

00:02:53,460 --> 00:02:59,460
example text on something else and if

00:02:56,280 --> 00:03:03,390
you write a you say happens in library

00:02:59,460 --> 00:03:07,530
we t available we have the enzyme acids

00:03:03,390 --> 00:03:11,910
like text prob style and others but now

00:03:07,530 --> 00:03:13,980
we have to use G every time and Troy

00:03:11,910 --> 00:03:17,340
trapper every time and it will be better

00:03:13,980 --> 00:03:22,710
maybe to create some tests rocker so

00:03:17,340 --> 00:03:24,900
here this wrapper method calm so we in

00:03:22,710 --> 00:03:27,510
each other's wrapper and now we can

00:03:24,900 --> 00:03:31,710
write wrapper and has class and each

00:03:27,510 --> 00:03:36,210
will check in wine automatically so our

00:03:31,710 --> 00:03:38,220
code became much more cleaner and so we

00:03:36,210 --> 00:03:43,650
write record I've retirement we can use

00:03:38,220 --> 00:03:46,500
a chain so al upon now gene test in

00:03:43,650 --> 00:03:49,650
react is very powerful and we refactor a

00:03:46,500 --> 00:03:53,040
lot of integration java test in unit one

00:03:49,650 --> 00:03:55,590
and also in you project we use a just

00:03:53,040 --> 00:03:59,850
and two in future you will see the

00:03:55,590 --> 00:04:03,080
jasons in library so thank you and

00:03:59,850 --> 00:04:03,080

YouTube URL: https://www.youtube.com/watch?v=_fvzOpBhk_I


