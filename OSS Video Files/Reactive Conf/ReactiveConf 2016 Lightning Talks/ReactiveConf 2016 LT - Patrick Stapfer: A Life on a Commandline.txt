Title: ReactiveConf 2016 LT - Patrick Stapfer: A Life on a Commandline
Publication date: 2016-11-26
Playlist: ReactiveConf 2016 Lightning Talks
Description: 
	https://reactiveconf.com 

Meet those driving the change! World-renowned mobile and web innovators got together for three days in one town.

ReactiveConf, October 26 - 28 2016, Bratislava, Slovakia

For inspiration, look at one of the most-starred Lightning Talks proposals for ReactiveConf 2016.

---

As a JavaScript developer, could you imagine using something else than Atom, Sublime or other IDE-like text-editors? In their daily work, people wrangle a lot with different applications, editors, windows, browsers and loose a lot of time because tools getting in their way.

A lot of people are using the terminal already. So why not just leverage it to its full extent? In this lightning talk, I will present how I will do regular JS / React programming just in one terminal window.

https://gist.github.com/ryyppy/9b9b46836a1caf0f1dfbc44032de7ff7

---

Do you see yourself on the ReactiveConf stage? Do you want to become the next #ReactJS superstar? If you think you have a great idea everybody in the community should know about, join Lightning Talks, and share the spotlight with the best React experts at ReactiveConf next year!

All you need to do to become a part of them is to submit your proposal to Gist and leave the rest to the community.

The ten most-starred proposals will join our line-up, and the top three ones will get a free ReactiveConf ticket with an invitation to an exclusive dinner with our speakers and VIP guests.

Have you heard about ReactiveConf? According to tech superstars such as David Nolen, Richard Feldman, or Brent Vatne, itâ€™s the best conference on web and mobile app development! It focuses on all things React and beyond and takes place annually in Bratislava, Slovakia.

In 2016, more than 700 attendees from all over the world spent three days in Bratislava getting inspired, sharing amazing new ideas, and meeting more than 30 awesome speakers from companies such as Google, Cognitect, NoRedInk, RethinkDB, Airbnb, Microsoft, Facebook, and the list could go on forever.

If you want to be part of the next event, get your tickets now at https://reactiveconf.com, and React with us!
Captions: 
	00:00:04,560 --> 00:00:09,840
I'm during my work I'm traveling a lot

00:00:07,500 --> 00:00:12,059
so I've been thinking about about my

00:00:09,840 --> 00:00:13,950
workflow like maturing what I'm using I

00:00:12,059 --> 00:00:15,870
don't want to be dependent on the

00:00:13,950 --> 00:00:17,010
hardware like the monitors I have I

00:00:15,870 --> 00:00:19,410
don't want to be dependent on the mouse

00:00:17,010 --> 00:00:21,090
so I'm going to explain to you how I

00:00:19,410 --> 00:00:22,830
work on the command line because the

00:00:21,090 --> 00:00:25,740
command line is the most common tool

00:00:22,830 --> 00:00:28,380
every one of us uses in the JavaScript

00:00:25,740 --> 00:00:31,260
world so first of all I'm introducing to

00:00:28,380 --> 00:00:34,170
you Tmax so I created a session already

00:00:31,260 --> 00:00:36,000
to make things faster so what is T MUX

00:00:34,170 --> 00:00:38,760
you see it's like a small operating

00:00:36,000 --> 00:00:41,339
system in your terminal you have Windows

00:00:38,760 --> 00:00:43,949
on the bottom and you can switch through

00:00:41,339 --> 00:00:47,370
windows and you can see I have a metal

00:00:43,949 --> 00:00:49,710
key control J and if I press n I

00:00:47,370 --> 00:00:53,370
switched to the window so if I output

00:00:49,710 --> 00:00:55,109
the project here I can say ctrl J P to

00:00:53,370 --> 00:00:57,120
go back to the other window if I press

00:00:55,109 --> 00:01:00,359
ctrl J and L I can alternate between

00:00:57,120 --> 00:01:02,249
those two but this is very fast you have

00:01:00,359 --> 00:01:03,809
to focus always on one window this is

00:01:02,249 --> 00:01:05,690
one thing I really like about that

00:01:03,809 --> 00:01:09,740
alright so I prepared a little project

00:01:05,690 --> 00:01:12,600
with some source code and yeah I

00:01:09,740 --> 00:01:16,070
prepared the project to run with chest

00:01:12,600 --> 00:01:19,829
you stay to the Austrian roots I think

00:01:16,070 --> 00:01:22,560
all right oh I think it's all right oh

00:01:19,829 --> 00:01:24,810
okay sorry yeah it's a unit test so

00:01:22,560 --> 00:01:25,799
that's the reason why we have them so we

00:01:24,810 --> 00:01:28,380
try to fix the error

00:01:25,799 --> 00:01:30,270
all right okay there is something

00:01:28,380 --> 00:01:33,030
missing so we need some fixture data and

00:01:30,270 --> 00:01:36,420
we do this very fancy we press ctrl J

00:01:33,030 --> 00:01:39,869
and pipe and there should be some file

00:01:36,420 --> 00:01:42,509
like rest URL yeah so here we have a URL

00:01:39,869 --> 00:01:44,250
provided by the back-end team but we

00:01:42,509 --> 00:01:47,130
don't copy that we just close this

00:01:44,250 --> 00:01:48,899
window we do this fancy in vim so what

00:01:47,130 --> 00:01:51,090
do we do is we press column to enter the

00:01:48,899 --> 00:01:55,969
command line on the bottom and we say

00:01:51,090 --> 00:01:59,250
read and we just call zero or curl and

00:01:55,969 --> 00:02:00,929
yeah make it fancy just catch rest URL

00:01:59,250 --> 00:02:03,329
and if this works and Internet

00:02:00,929 --> 00:02:05,289
connections fine yeah all right read it

00:02:03,329 --> 00:02:09,379
for the buffer thank you

00:02:05,289 --> 00:02:11,030
all right but you can see uh yeah this

00:02:09,379 --> 00:02:12,709
is not very nice we have a lot of

00:02:11,030 --> 00:02:16,910
datasets and it's not very well

00:02:12,709 --> 00:02:20,569
formatted so what are we going to do is

00:02:16,910 --> 00:02:22,730
having a problem right alright so we

00:02:20,569 --> 00:02:24,950
press a capitalized bead to mark the

00:02:22,730 --> 00:02:27,590
whole file and then we press column you

00:02:24,950 --> 00:02:29,450
see we mark this and we just run it

00:02:27,590 --> 00:02:31,400
through Python and there is something

00:02:29,450 --> 00:02:34,250
which is called a singer tools delivered

00:02:31,400 --> 00:02:36,980
with your patent yeah right okay cool

00:02:34,250 --> 00:02:38,569
but for Center chickens which ruler we

00:02:36,980 --> 00:02:41,480
don't we don't need all the data we just

00:02:38,569 --> 00:02:43,099
go forth one so we go 12 up and then be

00:02:41,480 --> 00:02:46,010
deleted I on the bottom you see what I'm

00:02:43,099 --> 00:02:49,250
pressing by the way so alright but you

00:02:46,010 --> 00:02:50,420
see you're a human linter you see oh we

00:02:49,250 --> 00:02:51,049
have table of course we don't want them

00:02:50,420 --> 00:02:54,040
okay

00:02:51,049 --> 00:02:57,890
what we do is we go in the command line

00:02:54,040 --> 00:03:00,530
the buffer substitute double quotes with

00:02:57,890 --> 00:03:03,650
single quotes G on all M that's it

00:03:00,530 --> 00:03:05,360
alright it's the first thing then we

00:03:03,650 --> 00:03:07,970
don't want attributes to have single

00:03:05,360 --> 00:03:10,970
quotes right we want them to be normal

00:03:07,970 --> 00:03:12,859
so we delete surroundings single quotes

00:03:10,970 --> 00:03:14,810
nope elites are on extinct words yeah

00:03:12,859 --> 00:03:16,250
deletes are on a synchronous really okay

00:03:14,810 --> 00:03:18,620
this is very tedious we do a marked rule

00:03:16,250 --> 00:03:20,389
for that so we go up press Q to enter

00:03:18,620 --> 00:03:23,060
Mac remote and then we define a key like

00:03:20,389 --> 00:03:26,230
cube so we go down one go to the

00:03:23,060 --> 00:03:30,139
beginning delete surrounding sang and

00:03:26,230 --> 00:03:32,900
rescue to finish the recording so when

00:03:30,139 --> 00:03:36,109
we go ahead and just say execute like we

00:03:32,900 --> 00:03:37,459
say at Q we do the macro at QB to the

00:03:36,109 --> 00:03:39,560
market but this is also tedious so we

00:03:37,459 --> 00:03:45,400
will just do you see the relative line

00:03:39,560 --> 00:03:49,310
numbers on the side so we say 5 @ Q done

00:03:45,400 --> 00:03:53,930
alright cool so now we have this so the

00:03:49,310 --> 00:03:58,700
test should oh right oh no tests cases

00:03:53,930 --> 00:04:02,000
ok we do a fuzzy find we do a fossa find

00:03:58,700 --> 00:04:03,980
Forex test so you can find it here all

00:04:02,000 --> 00:04:05,959
right ok I forgot to test so now I'll

00:04:03,980 --> 00:04:08,090
show you snippets so if we do this

00:04:05,959 --> 00:04:10,669
describe I define a snippet for the

00:04:08,090 --> 00:04:12,470
price control okay now it expands when I

00:04:10,669 --> 00:04:16,070
say found here layer press ctrl K to go

00:04:12,470 --> 00:04:22,250
into the body press it ctrl K

00:04:16,070 --> 00:04:27,020
should not find Charles and yeah we just

00:04:22,250 --> 00:04:29,750
do the logic users and we say test which

00:04:27,020 --> 00:04:32,720
should deliver undefined and oh one

00:04:29,750 --> 00:04:36,650
thing flow right we should enable flow

00:04:32,720 --> 00:04:38,270
as well so we just do this and now we

00:04:36,650 --> 00:04:40,520
should get recommendations because the

00:04:38,270 --> 00:04:43,280
chest API is so hard to remember every

00:04:40,520 --> 00:04:45,800
time so as they expect return and if I

00:04:43,280 --> 00:04:46,250
press the top we should get out to

00:04:45,800 --> 00:04:50,720
completion

00:04:46,250 --> 00:04:53,360
yes that's nice so to be undefined yeah

00:04:50,720 --> 00:04:57,110
we do this and if everything worked

00:04:53,360 --> 00:04:59,990
yeah everything passed so how many was

00:04:57,110 --> 00:05:02,600
what's the time hmm out of time says

00:04:59,990 --> 00:05:05,140
right now yeah thank you very much

00:05:02,600 --> 00:05:05,140

YouTube URL: https://www.youtube.com/watch?v=zyLpvEyv7l0


