Title: ReactiveConf 2016 LT - Javi Velasco: Styling in React
Publication date: 2016-11-24
Playlist: ReactiveConf 2016 Lightning Talks
Description: 
	https://reactiveconf.com 

Meet those driving the change! World-renowned mobile and web innovators got together for three days in one town.

ReactiveConf, October 26 - 28 2016, Bratislava, Slovakia

For inspiration, look at one of the most-starred Lightning Talks proposals for ReactiveConf 2016.

---

Javi Velasco: Styling in React

Recently I wrote a small package called react-css-themr, which allows you to separate styles from components, plus an easy API to compose and inject styles. Currently I’m migrating React Toolbox to this approach and, although I don’t know yet how this will it work, I’m sure it’s gonna change how we handle styling for vendor components, making easier to customize this and any other library.
I would like to tell you how it went in a lighning talk at Reactive 2016, dropping some thoughts about styling components in React. Star this gist if you want to give your support!

https://gist.github.com/javivelasco/1a095a673c221bc5c69246a4519b353a

---

Do you see yourself on the ReactiveConf stage? Do you want to become the next #ReactJS superstar? If you think you have a great idea everybody in the community should know about, join Lightning Talks, and share the spotlight with the best React experts at ReactiveConf next year!

All you need to do to become a part of them is to submit your proposal to Gist and leave the rest to the community.

The ten most-starred proposals will join our line-up, and the top three ones will get a free ReactiveConf ticket with an invitation to an exclusive dinner with our speakers and VIP guests.

Have you heard about ReactiveConf? According to tech superstars such as David Nolen, Richard Feldman, or Brent Vatne, it’s the best conference on web and mobile app development! It focuses on all things React and beyond and takes place annually in Bratislava, Slovakia.

In 2016, more than 700 attendees from all over the world spent three days in Bratislava getting inspired, sharing amazing new ideas, and meeting more than 30 awesome speakers from companies such as Google, Cognitect, NoRedInk, RethinkDB, Airbnb, Microsoft, Facebook, and the list could go on forever.

If you want to be part of the next event, get your tickets now at https://reactiveconf.com, and React with us!
Captions: 
	00:00:04,720 --> 00:00:08,889
I'm having Alaska I that's my dog that's

00:00:07,389 --> 00:00:10,900
me that's my name I'm a Twitter handle

00:00:08,889 --> 00:00:12,969
in case you want to reach me or whatever

00:00:10,900 --> 00:00:14,529
I work for a company called audience we

00:00:12,969 --> 00:00:16,689
are doing a lot of great stuff with the

00:00:14,529 --> 00:00:17,680
Twitter API so if you want to know more

00:00:16,689 --> 00:00:20,769
about your audience you should

00:00:17,680 --> 00:00:22,960
definitely check it in I am I am also

00:00:20,769 --> 00:00:25,359
the author of a lyrical react toolbox

00:00:22,960 --> 00:00:28,119
react toolbox is a library of material

00:00:25,359 --> 00:00:31,630
design components but a little special

00:00:28,119 --> 00:00:33,640
is that we are actually using CSS models

00:00:31,630 --> 00:00:35,739
to style of components so you are

00:00:33,640 --> 00:00:37,510
getting the benefits of traditional CSS

00:00:35,739 --> 00:00:40,210
but also you are getting some issues

00:00:37,510 --> 00:00:42,510
that come with CSS models like

00:00:40,210 --> 00:00:45,130
configuration customization and I mean

00:00:42,510 --> 00:00:47,050
first of all configuration we can't

00:00:45,130 --> 00:00:49,090
force people to use any tool we can

00:00:47,050 --> 00:00:51,790
force people to use CSS models and also

00:00:49,090 --> 00:00:54,130
configure it webpart is not easy at all

00:00:51,790 --> 00:00:56,050
so in the first version of react toolbox

00:00:54,130 --> 00:00:58,570
that's how a component would look like

00:00:56,050 --> 00:01:00,610
and we are importing there the style

00:00:58,570 --> 00:01:03,640
model straight and then using it to

00:01:00,610 --> 00:01:06,579
render the HTML and that's kind of

00:01:03,640 --> 00:01:08,079
shitty because if you don't have CSS

00:01:06,579 --> 00:01:10,270
model properly configure it's not going

00:01:08,079 --> 00:01:13,330
to work so I think that it's way better

00:01:10,270 --> 00:01:15,490
if you just get a team property and use

00:01:13,330 --> 00:01:17,140
it in your render markup like this so

00:01:15,490 --> 00:01:20,200
the responsibility of injecting that

00:01:17,140 --> 00:01:22,300
team codes from up so you would be

00:01:20,200 --> 00:01:24,159
importing a real toolbox component when

00:01:22,300 --> 00:01:27,580
you are going to use it and defining a

00:01:24,159 --> 00:01:30,070
team which is just up the CSS model how

00:01:27,580 --> 00:01:33,040
a CSS model is resolved and injecting it

00:01:30,070 --> 00:01:33,580
into the into the component so to help

00:01:33,040 --> 00:01:35,560
you with that

00:01:33,580 --> 00:01:37,450
because this kind of we trying to

00:01:35,560 --> 00:01:39,909
inject in every single component this

00:01:37,450 --> 00:01:42,220
theme I wrote this small module called

00:01:39,909 --> 00:01:44,200
react CSS steamer it's implemented using

00:01:42,220 --> 00:01:46,890
the common pattern of a higher-order

00:01:44,200 --> 00:01:51,280
component and a provider component and

00:01:46,890 --> 00:01:53,320
using it looks like this you will import

00:01:51,280 --> 00:01:55,360
this higher-order component from react

00:01:53,320 --> 00:01:57,670
CSS steamer and then you can use it

00:01:55,360 --> 00:01:59,409
assigning an unique identifier for your

00:01:57,670 --> 00:02:02,950
component in the scope of your whole

00:01:59,409 --> 00:02:05,170
application then up in your the root of

00:02:02,950 --> 00:02:07,780
your application you would define Adeem

00:02:05,170 --> 00:02:10,509
like just like this using that a unique

00:02:07,780 --> 00:02:12,790
identifier and assign the CSS model so

00:02:10,509 --> 00:02:16,569
every component can grab their own from

00:02:12,790 --> 00:02:18,520
the context so using this like that is

00:02:16,569 --> 00:02:21,430
like kind of strange so

00:02:18,520 --> 00:02:23,230
it's very we are providing a default DMV

00:02:21,430 --> 00:02:25,300
AES so you can import it from react

00:02:23,230 --> 00:02:27,340
toolbox and get the default styles in

00:02:25,300 --> 00:02:29,230
there but still I want to keep in place

00:02:27,340 --> 00:02:31,900
the CSS requests because it's handy for

00:02:29,230 --> 00:02:34,390
people that already have CSS models

00:02:31,900 --> 00:02:36,880
configuring their project so if you want

00:02:34,390 --> 00:02:39,520
to do that straight importing from the

00:02:36,880 --> 00:02:42,400
index which i think is the best so far

00:02:39,520 --> 00:02:45,970
you would be importing the CSS in that

00:02:42,400 --> 00:02:47,530
index file and then decorating the

00:02:45,970 --> 00:02:49,540
component using the dimmer but it's not

00:02:47,530 --> 00:02:51,820
going to work because dependency should

00:02:49,540 --> 00:02:53,950
come with the CSS too and also you can

00:02:51,820 --> 00:02:56,410
decorate only once so this is the

00:02:53,950 --> 00:02:59,140
pattern that emerged from them from that

00:02:56,410 --> 00:03:00,850
point it's about using a factory

00:02:59,140 --> 00:03:02,710
function receiving all components other

00:03:00,850 --> 00:03:04,990
uses inside the same component and

00:03:02,710 --> 00:03:06,670
finally you're returning that component

00:03:04,990 --> 00:03:09,420
so you are free to importing the

00:03:06,670 --> 00:03:12,370
component definition all of these

00:03:09,420 --> 00:03:14,710
components that are raw and then use

00:03:12,370 --> 00:03:17,530
that Factory to return a new component

00:03:14,710 --> 00:03:20,350
and also you can expose the same factory

00:03:17,530 --> 00:03:23,580
so later in the index you can use the

00:03:20,350 --> 00:03:25,870
same button factory and require other

00:03:23,580 --> 00:03:28,380
components that are already applying the

00:03:25,870 --> 00:03:31,390
CSS for you as well so then you can

00:03:28,380 --> 00:03:33,600
build a new button and expose it from

00:03:31,390 --> 00:03:36,490
the index so this way you can require

00:03:33,600 --> 00:03:38,860
components with CSS and with all CSS

00:03:36,490 --> 00:03:41,170
modules but what about customization

00:03:38,860 --> 00:03:43,810
it's also you have to think that this is

00:03:41,170 --> 00:03:45,670
your CSS and as CSS models is nothing

00:03:43,810 --> 00:03:47,650
but a bunch of class names and so it's

00:03:45,670 --> 00:03:50,200
implementing kind of a contract kind of

00:03:47,650 --> 00:03:52,060
an API of class names so you can pass

00:03:50,200 --> 00:03:54,010
your own but you just want to pass what

00:03:52,060 --> 00:03:55,660
you need so if you want to cause to

00:03:54,010 --> 00:03:56,860
customize a component like this for

00:03:55,660 --> 00:04:00,250
example I want to set the background

00:03:56,860 --> 00:04:03,160
blue for a room for just a button you

00:04:00,250 --> 00:04:05,590
can pass it like that and react image is

00:04:03,160 --> 00:04:07,480
going to create that class named

00:04:05,590 --> 00:04:09,160
appropriate class name for you but you

00:04:07,480 --> 00:04:10,750
still have to do what selector

00:04:09,160 --> 00:04:13,330
priorities but it's pretty much working

00:04:10,750 --> 00:04:18,489
right so and what about Demming we are

00:04:13,330 --> 00:04:20,739
using a post CSS to customize things

00:04:18,489 --> 00:04:22,930
like primarycolour secondarycolour and

00:04:20,739 --> 00:04:24,460
stuff like that so we are shipping the

00:04:22,930 --> 00:04:27,130
variable the the

00:04:24,460 --> 00:04:29,740
CSS variables that works with any

00:04:27,130 --> 00:04:31,479
browser but Internet Explorer is not

00:04:29,740 --> 00:04:33,340
working yet so maybe you want to

00:04:31,479 --> 00:04:35,259
transform the CSS by this feel it's

00:04:33,340 --> 00:04:37,060
awesome we are cheap in a script so it's

00:04:35,259 --> 00:04:38,530
really easy non it don't need any setup

00:04:37,060 --> 00:04:41,050
just run the script and generate your

00:04:38,530 --> 00:04:42,400
team CSS at the BTS and you're done so I

00:04:41,050 --> 00:04:46,169
want to show you something very very

00:04:42,400 --> 00:04:48,130
very briefly which is how the new

00:04:46,169 --> 00:04:50,620
playground is going to look like in

00:04:48,130 --> 00:04:53,440
react toolbox this is working just in

00:04:50,620 --> 00:04:55,539
the browser and it's using it's finding

00:04:53,440 --> 00:04:59,080
some components from react toolbox and

00:04:55,539 --> 00:05:00,400
then you can define that API with the

00:04:59,080 --> 00:05:01,780
inner knob for example this is an

00:05:00,400 --> 00:05:04,000
internal class name and that's all

00:05:01,780 --> 00:05:07,949
moment of surprise yeah thank you

00:05:04,000 --> 00:05:07,949

YouTube URL: https://www.youtube.com/watch?v=Ibr3bNIcr_M


