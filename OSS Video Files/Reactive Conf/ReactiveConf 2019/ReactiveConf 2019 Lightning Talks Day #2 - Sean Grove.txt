Title: ReactiveConf 2019 Lightning Talks Day #2 - Sean Grove
Publication date: 2019-10-31
Playlist: ReactiveConf 2019
Description: 
	Oct 30 - Nov 1, 2019
Prague, Czech Republic
https://reactiveconf.com/
Millennium stage
Captions: 
	00:00:02,750 --> 00:00:11,850
[Music]

00:00:16,220 --> 00:00:21,840
all right I'm just going to dive in what

00:00:19,529 --> 00:00:23,519
I want to talk about today is some graph

00:00:21,840 --> 00:00:25,260
QL tooling that I think is really cool

00:00:23,519 --> 00:00:28,170
it's all open source it can work with

00:00:25,260 --> 00:00:30,420
any graph QL server including yours I'm

00:00:28,170 --> 00:00:33,000
gonna talk a bit about the Explorer some

00:00:30,420 --> 00:00:35,940
export some code ransom search and some

00:00:33,000 --> 00:00:37,920
futuristic stuff all right so if you

00:00:35,940 --> 00:00:40,890
know graph QL you probably know

00:00:37,920 --> 00:00:43,079
graphical and if you haven't used the

00:00:40,890 --> 00:00:45,420
graphical extension here the Explorer

00:00:43,079 --> 00:00:48,750
you are missing out this is by far the

00:00:45,420 --> 00:00:50,969
best way to explore any API so I can do

00:00:48,750 --> 00:00:52,199
here is visually open up and say hey I

00:00:50,969 --> 00:00:54,930
want to do maybe he searched through

00:00:52,199 --> 00:00:57,090
this graphical API I see that hey

00:00:54,930 --> 00:00:58,500
there's Spotify in there I could just

00:00:57,090 --> 00:01:00,780
kind of explore see the fields and I see

00:00:58,500 --> 00:01:02,730
there's a search and over here I can say

00:01:00,780 --> 00:01:05,760
win win win I want to search for all

00:01:02,730 --> 00:01:07,020
that any tracks that match that I want

00:01:05,760 --> 00:01:09,270
to get some properties from them maybe

00:01:07,020 --> 00:01:13,460
their ID and their name then I go ahead

00:01:09,270 --> 00:01:15,960
and run that and I'll log in to Spotify

00:01:13,460 --> 00:01:18,509
and there we go I'm making some API

00:01:15,960 --> 00:01:21,840
calls to Spotify which is pretty cool so

00:01:18,509 --> 00:01:23,310
I'm gonna call this one search but I

00:01:21,840 --> 00:01:25,979
want to actually also run some mutations

00:01:23,310 --> 00:01:27,900
I want to have maybe a pause and this is

00:01:25,979 --> 00:01:30,060
going to go into Spotify it's gonna

00:01:27,900 --> 00:01:32,280
pause the player and then having

00:01:30,060 --> 00:01:34,320
modified that player it's going to

00:01:32,280 --> 00:01:36,000
return to me the new state and I want to

00:01:34,320 --> 00:01:38,250
know hey given that I just paused it are

00:01:36,000 --> 00:01:41,750
you playing and what's your progress and

00:01:38,250 --> 00:01:43,979
we'll add just two more one is next and

00:01:41,750 --> 00:01:48,090
it's the same idea so it's gonna be

00:01:43,979 --> 00:01:50,909
Spotify skip the next track having

00:01:48,090 --> 00:01:56,040
modified the player let me know this and

00:01:50,909 --> 00:01:57,930
one more which is resumed and the cool

00:01:56,040 --> 00:01:59,850
thing is with the way graph fuel is so

00:01:57,930 --> 00:02:01,259
introspective all we can introspect the

00:01:59,850 --> 00:02:02,850
entire scheme over here which is how we

00:02:01,259 --> 00:02:04,229
can actually pull out all of these

00:02:02,850 --> 00:02:07,590
fields and we can see all of the

00:02:04,229 --> 00:02:10,080
operations so I do this resume is

00:02:07,590 --> 00:02:12,540
playing but once we've built up all

00:02:10,080 --> 00:02:13,800
these different operations the queries

00:02:12,540 --> 00:02:15,570
themselves are also

00:02:13,800 --> 00:02:17,640
respectable so you can see here that

00:02:15,570 --> 00:02:19,680
like it can enumerate all of those

00:02:17,640 --> 00:02:22,590
operations that I just did so if I

00:02:19,680 --> 00:02:25,490
search here or if I do

00:02:22,590 --> 00:02:30,390
pause it'll run that and pause my player

00:02:25,490 --> 00:02:32,580
and this is really cool but this is not

00:02:30,390 --> 00:02:34,860
a necessarily useful context it's really

00:02:32,580 --> 00:02:37,500
great for exploring it's by far like the

00:02:34,860 --> 00:02:38,940
most joyous way to experience an API but

00:02:37,500 --> 00:02:40,710
really what you want to do after you

00:02:38,940 --> 00:02:43,320
experience an API is put into a useful

00:02:40,710 --> 00:02:44,940
context so what we did is we built a

00:02:43,320 --> 00:02:48,060
code Explorer which does the same thing

00:02:44,940 --> 00:02:50,100
it actually introspects all of your code

00:02:48,060 --> 00:02:52,200
over here and it generates an entire

00:02:50,100 --> 00:02:53,970
react application based off of it so you

00:02:52,200 --> 00:02:57,240
can see here that if we change this and

00:02:53,970 --> 00:03:00,870
we say reactive conf or we call it

00:02:57,240 --> 00:03:02,280
search you can see that the code that is

00:03:00,870 --> 00:03:05,520
generated over on the right actually

00:03:02,280 --> 00:03:08,430
updates and this code actually embeds

00:03:05,520 --> 00:03:11,400
the best practices for using a graph QL

00:03:08,430 --> 00:03:13,140
API so if you're an API provider you can

00:03:11,400 --> 00:03:14,790
actually embed all of the best practices

00:03:13,140 --> 00:03:17,460
for how your users are supposed to be

00:03:14,790 --> 00:03:18,900
using your application and if you want

00:03:17,460 --> 00:03:20,760
you can just click a button here and

00:03:18,900 --> 00:03:23,310
this is literally going to create a

00:03:20,760 --> 00:03:27,000
brand new code sandbox here I'm gonna go

00:03:23,310 --> 00:03:28,260
ahead and run it and it's gonna say hey

00:03:27,000 --> 00:03:32,550
you're not logged in to Spotify so I'll

00:03:28,260 --> 00:03:35,070
go ahead and log in and now if I open up

00:03:32,550 --> 00:03:37,620
my Spotify player and I put them

00:03:35,070 --> 00:03:40,100
side-by-side and I come in here and I'm

00:03:37,620 --> 00:03:45,330
gonna say I want to pause my player and

00:03:40,100 --> 00:03:48,510
I want to now resume and I want to go

00:03:45,330 --> 00:03:51,209
next and I actually built an entire

00:03:48,510 --> 00:03:53,370
Spotify player and a react application

00:03:51,209 --> 00:03:54,630
just by clicking around and it's

00:03:53,370 --> 00:03:57,570
deployed where anyone could go to this

00:03:54,630 --> 00:04:00,030
up application and control their Spotify

00:03:57,570 --> 00:04:03,480
player so I think that's being able to

00:04:00,030 --> 00:04:04,790
explore an export is huge and I want to

00:04:03,480 --> 00:04:08,070
show one other feature that we are

00:04:04,790 --> 00:04:10,620
pretty excited about which is searching

00:04:08,070 --> 00:04:12,780
through an API because api's get bigger

00:04:10,620 --> 00:04:14,519
and bigger and bigger and let's say for

00:04:12,780 --> 00:04:16,859
example I know somewhere in this API

00:04:14,519 --> 00:04:18,570
there's like an email field but I don't

00:04:16,859 --> 00:04:20,130
know where it is I don't have to reverse

00:04:18,570 --> 00:04:21,870
the docs I don't have to traverse the

00:04:20,130 --> 00:04:23,700
graph computers are like really good at

00:04:21,870 --> 00:04:25,080
that so this is literally going to

00:04:23,700 --> 00:04:27,600
search through the entire graph QL

00:04:25,080 --> 00:04:29,190
schema in there and find all the fields

00:04:27,600 --> 00:04:30,930
that have something about emailing them

00:04:29,190 --> 00:04:33,660
and whenever I click it it will build up

00:04:30,930 --> 00:04:35,070
that entire structure for me so for

00:04:33,660 --> 00:04:39,690
example if I know that I want to have

00:04:35,070 --> 00:04:41,010
maybe tracks in here somewhere so I'll

00:04:39,690 --> 00:04:45,780
come down here and I see the FedEx has

00:04:41,010 --> 00:04:48,390
some and I see that YouTube has some so

00:04:45,780 --> 00:04:50,040
I do track kind and it builds up that so

00:04:48,390 --> 00:04:52,350
I can basically say somewhere inside of

00:04:50,040 --> 00:04:54,360
this API give me this feel built up the

00:04:52,350 --> 00:04:56,460
whole query and then generate an entire

00:04:54,360 --> 00:04:57,840
react application that I can just push

00:04:56,460 --> 00:04:59,880
and start tweaking that works

00:04:57,840 --> 00:05:02,160
immediately it's an entirely new way of

00:04:59,880 --> 00:05:04,980
experience API is it's all open source

00:05:02,160 --> 00:05:09,530
if you are an API provider you should be

00:05:04,980 --> 00:05:09,530
offering this for your users thank you

00:05:11,510 --> 00:05:17,670
that was Shawn grow we have questions

00:05:14,550 --> 00:05:20,760
for you our graph QL servers say from no

00:05:17,670 --> 00:05:22,800
SQL injection attacks yeah so graph QL

00:05:20,760 --> 00:05:24,930
and sequel are two separate technologies

00:05:22,800 --> 00:05:28,470
you can overlay graph KL on top of

00:05:24,930 --> 00:05:31,260
sequel in fact there are several really

00:05:28,470 --> 00:05:34,350
amazing open source projects like post

00:05:31,260 --> 00:05:37,530
graph file and Hazara that do that they

00:05:34,350 --> 00:05:40,230
are by far the safest way of exposing

00:05:37,530 --> 00:05:42,660
your database to the front end so yes

00:05:40,230 --> 00:05:44,880
you can if you wanted to you could

00:05:42,660 --> 00:05:47,010
figure out a way I'm sure to offer a

00:05:44,880 --> 00:05:50,100
server that enabled no sequel injection

00:05:47,010 --> 00:05:53,340
attacks but by default no graph killas

00:05:50,100 --> 00:05:57,000
is not going to enable that and what are

00:05:53,340 --> 00:05:59,280
the most evident pros of graph QL well

00:05:57,000 --> 00:05:59,970
comparing to REST API what a great

00:05:59,280 --> 00:06:03,570
question

00:05:59,970 --> 00:06:05,880
so I just generated an entire react

00:06:03,570 --> 00:06:08,130
application I explored different API I

00:06:05,880 --> 00:06:10,890
was able to iterate and test and get

00:06:08,130 --> 00:06:14,160
data back immediately try doing that

00:06:10,890 --> 00:06:17,040
with any REST API it is day and night

00:06:14,160 --> 00:06:19,080
difference so at the very least there

00:06:17,040 --> 00:06:21,480
are benefits for a provider but from a

00:06:19,080 --> 00:06:24,570
consumers point of view it's day and

00:06:21,480 --> 00:06:27,660
night difference when should one decide

00:06:24,570 --> 00:06:29,700
to use elastic SQL DB instead of cluster

00:06:27,660 --> 00:06:31,770
of single DB so I generally find that

00:06:29,700 --> 00:06:33,270
classic sequel DBS are really good ways

00:06:31,770 --> 00:06:34,400
of trolling people whenever they're on

00:06:33,270 --> 00:06:37,170
stage

00:06:34,400 --> 00:06:39,150
yeah but if you want to cluster that

00:06:37,170 --> 00:06:40,980
that will actually enable you to troll

00:06:39,150 --> 00:06:43,170
multiple speakers I think at one time I

00:06:40,980 --> 00:06:44,940
love how you're looking at me like you

00:06:43,170 --> 00:06:47,100
know I I know what you're talking about

00:06:44,940 --> 00:06:49,860
which I don't which we figured out why

00:06:47,100 --> 00:06:51,920
do by the way I read the questions but

00:06:49,860 --> 00:06:55,160
thank you so much Sean you're amazing

00:06:51,920 --> 00:06:55,160

YouTube URL: https://www.youtube.com/watch?v=QFbTmyJFr4g


