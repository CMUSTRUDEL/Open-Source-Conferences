Title: ReactiveConf 2019 - Mark Dalgleish: Rethinking Design Practices
Publication date: 2019-11-01
Playlist: ReactiveConf 2019
Description: 
	Oct 30 - Nov 1, 2019
Prague, Czech Republic
https://reactiveconf.com/
Millennium stage
-------------------------------------------------------------------
Thanks to modern component-oriented architectures, the front-end community has been naturally gravitating towards design systems as a way of standardising our respective design languages into reusable components. When done successfully, it suddenly becomes trivial to translate standard designs into code. In fact, we may even find that this translation step starts to feel somewhat redundant. In a world of components, how should our design processes change? How should our tooling change? How should we, as front-end developers, better enable this change? In this talk, we’ll look at the current state of design and development, and where we could go – if we’re willing to push for it.
Captions: 
	00:00:04,010 --> 00:00:07,860
[Music]

00:00:16,040 --> 00:00:19,710
hi everyone as you heard my name is Mark

00:00:18,599 --> 00:00:21,960
Douglas I'm here all the way from

00:00:19,710 --> 00:00:23,520
Melbourne Australia thank you so much

00:00:21,960 --> 00:00:26,520
for having me here today in such a

00:00:23,520 --> 00:00:27,720
beautiful city now one of my passions if

00:00:26,520 --> 00:00:29,430
you follow me on Twitter this is no

00:00:27,720 --> 00:00:31,529
secret to you one of my passions is

00:00:29,430 --> 00:00:33,840
design and particularly the intersection

00:00:31,529 --> 00:00:36,360
of design with technology and how it

00:00:33,840 --> 00:00:38,010
affects the way we build applications so

00:00:36,360 --> 00:00:39,870
for the purposes of today what I really

00:00:38,010 --> 00:00:41,760
want to talk about is rethinking design

00:00:39,870 --> 00:00:44,969
practices in our daily work and what we

00:00:41,760 --> 00:00:47,219
can do to help achieve this now I think

00:00:44,969 --> 00:00:48,629
our industry is at a crossroads I talk

00:00:47,219 --> 00:00:50,249
to a lot of people who are working in

00:00:48,629 --> 00:00:52,789
the space and everyone says the same

00:00:50,249 --> 00:00:55,230
thing everyone's struggling with this

00:00:52,789 --> 00:00:57,089
our design systems aren't fully

00:00:55,230 --> 00:00:59,280
delivering on their potential the more

00:00:57,089 --> 00:01:01,319
and more we invest in design in code the

00:00:59,280 --> 00:01:02,879
more we feel this disconnect between the

00:01:01,319 --> 00:01:06,300
two disciplines and everyone's

00:01:02,879 --> 00:01:08,340
struggling to make sense of it our

00:01:06,300 --> 00:01:10,140
design is increasingly defined in code

00:01:08,340 --> 00:01:12,540
this is something that we're pouring all

00:01:10,140 --> 00:01:14,820
of our efforts into and yet design

00:01:12,540 --> 00:01:16,170
workflows are struggling to keep up last

00:01:14,820 --> 00:01:18,330
year I was here on this very stage

00:01:16,170 --> 00:01:20,550
talking about how we can export from our

00:01:18,330 --> 00:01:23,070
react based component library as we have

00:01:20,550 --> 00:01:25,170
into a static design tool like sketch

00:01:23,070 --> 00:01:26,610
and then I talked more about other

00:01:25,170 --> 00:01:30,330
design tools that are trying to embrace

00:01:26,610 --> 00:01:32,520
components as a first-class medium but

00:01:30,330 --> 00:01:35,280
ultimately no one's fully cracked it yet

00:01:32,520 --> 00:01:38,100
we're all struggling with this so our

00:01:35,280 --> 00:01:39,750
industry has a choice to make there's

00:01:38,100 --> 00:01:41,160
two radically different ways we can

00:01:39,750 --> 00:01:43,110
tackle this problem the first is

00:01:41,160 --> 00:01:45,030
obviously the most attractive at first

00:01:43,110 --> 00:01:47,070
glance which is bringing code and the

00:01:45,030 --> 00:01:48,480
work that we're doing into design tools

00:01:47,070 --> 00:01:51,390
and this is what we're seeing with newer

00:01:48,480 --> 00:01:53,490
tools like the frame racks but there's

00:01:51,390 --> 00:01:55,440
also another angle which is actually

00:01:53,490 --> 00:01:59,520
embracing code as a design medium and

00:01:55,440 --> 00:02:01,680
designing in code itself designing a

00:01:59,520 --> 00:02:02,790
code is the angle that I'm gonna look at

00:02:01,680 --> 00:02:04,350
today and it's the one that really

00:02:02,790 --> 00:02:05,730
excites me the most I think because I

00:02:04,350 --> 00:02:07,500
think it really has the most potential

00:02:05,730 --> 00:02:10,319
to change the way we think about design

00:02:07,500 --> 00:02:13,050
as an industry and that's because by

00:02:10,319 --> 00:02:15,870
working in design in code as a design

00:02:13,050 --> 00:02:17,849
medium designers and developers will

00:02:15,870 --> 00:02:19,030
literally speak the same language with

00:02:17,849 --> 00:02:20,890
design systems we talk

00:02:19,030 --> 00:02:22,870
a lot about trying to speak the same

00:02:20,890 --> 00:02:25,420
language and these new tools that we're

00:02:22,870 --> 00:02:27,490
looking at might get some ways towards

00:02:25,420 --> 00:02:29,440
us thinking the same ways but ultimately

00:02:27,490 --> 00:02:31,270
we express ourselves very differently I

00:02:29,440 --> 00:02:32,709
think I think if we break down the walls

00:02:31,270 --> 00:02:34,000
between code and design there's a

00:02:32,709 --> 00:02:35,680
massive opportunity there for us to

00:02:34,000 --> 00:02:40,180
change the way we think and the way we

00:02:35,680 --> 00:02:41,950
work now I work at seek in Melbourne in

00:02:40,180 --> 00:02:43,690
Australia this is a this is a household

00:02:41,950 --> 00:02:46,060
name obviously less than well known here

00:02:43,690 --> 00:02:49,000
it's the leading job site there there

00:02:46,060 --> 00:02:51,550
and I at seek I work on the design

00:02:49,000 --> 00:02:53,290
system among other things braid is our

00:02:51,550 --> 00:02:54,550
design system which is open source so if

00:02:53,290 --> 00:02:56,110
you want to go have a look at it and see

00:02:54,550 --> 00:02:59,620
what we're doing in this boat in this

00:02:56,110 --> 00:03:01,150
space please go check that out now what

00:02:59,620 --> 00:03:02,680
I want to talk to you with today is how

00:03:01,150 --> 00:03:04,510
we're solving this and some of the hard

00:03:02,680 --> 00:03:06,160
lessons we've learned along the way and

00:03:04,510 --> 00:03:08,110
what we're trying to do into the future

00:03:06,160 --> 00:03:09,190
so hopefully this resonates with you and

00:03:08,110 --> 00:03:11,319
it's something that you can take into

00:03:09,190 --> 00:03:14,670
your work when you when you resume that

00:03:11,319 --> 00:03:16,420
next week so there's three top

00:03:14,670 --> 00:03:18,670
high-level things I want to cover today

00:03:16,420 --> 00:03:20,560
the first of which is tooling the second

00:03:18,670 --> 00:03:22,720
which is the extract abstractions you

00:03:20,560 --> 00:03:25,480
need in your design systems to achieve

00:03:22,720 --> 00:03:27,310
this this goal and the last is the

00:03:25,480 --> 00:03:30,190
workflow that we want to build on top of

00:03:27,310 --> 00:03:32,170
that so let's start at the top which is

00:03:30,190 --> 00:03:33,730
with the tooling now it was actually

00:03:32,170 --> 00:03:35,650
again on this stage last year that I

00:03:33,730 --> 00:03:37,000
unveiled for the first time a tool that

00:03:35,650 --> 00:03:38,650
I'd been working on and that we'd been

00:03:37,000 --> 00:03:40,480
using at seek called playroom now

00:03:38,650 --> 00:03:42,549
playroom is a tool for letting you

00:03:40,480 --> 00:03:44,680
design in the browser with components

00:03:42,549 --> 00:03:46,450
that you've built but the key

00:03:44,680 --> 00:03:48,519
differentiator over other tools is that

00:03:46,450 --> 00:03:50,140
playroom treats JSX as a design tool

00:03:48,519 --> 00:03:53,980
rather than trying to abstract it away

00:03:50,140 --> 00:03:55,870
behind a drag-and-drop UI so in practice

00:03:53,980 --> 00:03:58,359
it looks something like this you can see

00:03:55,870 --> 00:03:59,890
there at the bottom a pane of JSX that

00:03:58,359 --> 00:04:01,630
you can write and you have full access

00:03:59,890 --> 00:04:02,470
to the component library that you've

00:04:01,630 --> 00:04:04,480
plugged into it

00:04:02,470 --> 00:04:06,160
it supports theming which is something

00:04:04,480 --> 00:04:07,600
that we needed for our system so as you

00:04:06,160 --> 00:04:10,359
can see along the top there there is an

00:04:07,600 --> 00:04:11,440
iframe for every single theme off the

00:04:10,359 --> 00:04:12,700
screen to the right if you were to

00:04:11,440 --> 00:04:14,530
scroll across you would also see

00:04:12,700 --> 00:04:16,959
different screen sizes so it's useful as

00:04:14,530 --> 00:04:19,209
a responsive design tool as well so here

00:04:16,959 --> 00:04:20,950
you can see you're describing the UI in

00:04:19,209 --> 00:04:22,539
the components that you've that you've

00:04:20,950 --> 00:04:24,010
developed and if you find that

00:04:22,539 --> 00:04:25,840
something's missing it's up to you to

00:04:24,010 --> 00:04:27,310
plug that in as part of your component

00:04:25,840 --> 00:04:30,280
library so this has been an invaluable

00:04:27,310 --> 00:04:31,720
tool for us to be able to get our design

00:04:30,280 --> 00:04:32,530
systems circulated throughout the

00:04:31,720 --> 00:04:34,540
company

00:04:32,530 --> 00:04:36,490
and that's because of two important

00:04:34,540 --> 00:04:38,680
factors the first one is that it's zero

00:04:36,490 --> 00:04:40,390
install it's web-based so people don't

00:04:38,680 --> 00:04:41,800
need to setup a complicated developer

00:04:40,390 --> 00:04:43,030
environment this is particularly

00:04:41,800 --> 00:04:45,010
important if you're trying to reach out

00:04:43,030 --> 00:04:46,630
to non developers the fact that they can

00:04:45,010 --> 00:04:48,220
just click a link from the design system

00:04:46,630 --> 00:04:50,560
website and have that up and running has

00:04:48,220 --> 00:04:51,910
been invaluable and the second part of

00:04:50,560 --> 00:04:53,770
it of course being in the web browser

00:04:51,910 --> 00:04:55,990
means that we are able to have shareable

00:04:53,770 --> 00:04:58,270
URLs so someone can throw together a UI

00:04:55,990 --> 00:05:00,550
design very quickly send it to someone

00:04:58,270 --> 00:05:02,110
in slack and get some feedback and maybe

00:05:00,550 --> 00:05:04,330
they change it send it back and forth

00:05:02,110 --> 00:05:06,190
again this has been invaluable for us to

00:05:04,330 --> 00:05:09,190
circulate the knowledge of the design

00:05:06,190 --> 00:05:10,990
system within the company for me as a

00:05:09,190 --> 00:05:13,419
developer working on our component

00:05:10,990 --> 00:05:15,790
library this has been a crucial tool for

00:05:13,419 --> 00:05:17,740
me to test drive your design language so

00:05:15,790 --> 00:05:19,660
what what this does for me is it lets me

00:05:17,740 --> 00:05:21,970
simulate that end user experience of

00:05:19,660 --> 00:05:23,800
having a blank canvas in theory if my

00:05:21,970 --> 00:05:25,990
design system is powerful enough I

00:05:23,800 --> 00:05:28,540
should be able to compose up a brand new

00:05:25,990 --> 00:05:29,950
UI from scratch very quickly and if I

00:05:28,540 --> 00:05:31,780
can't then obviously I have some more

00:05:29,950 --> 00:05:35,800
work to do and this has been the best

00:05:31,780 --> 00:05:36,820
way for me to get that feeling so the

00:05:35,800 --> 00:05:38,470
next thing I want to talk about is

00:05:36,820 --> 00:05:40,330
abstractions and of course the design

00:05:38,470 --> 00:05:43,570
system is ultimately one big abstraction

00:05:40,330 --> 00:05:44,710
but it's all the the big message I want

00:05:43,570 --> 00:05:46,630
to give a cross to you today is that

00:05:44,710 --> 00:05:49,060
your job as a design system developer is

00:05:46,630 --> 00:05:50,740
to accurately model the way designers

00:05:49,060 --> 00:05:53,070
think it's effectively domain-driven

00:05:50,740 --> 00:05:55,030
design for the world of visual design

00:05:53,070 --> 00:05:58,479
designers should be able to make sense

00:05:55,030 --> 00:05:59,830
of the code you're writing and in order

00:05:58,479 --> 00:06:01,300
to achieve this we need to build up in

00:05:59,830 --> 00:06:03,700
layers of course but each of these

00:06:01,300 --> 00:06:06,100
layers discretely needs to make sense

00:06:03,700 --> 00:06:07,870
and from a designer's perspective so the

00:06:06,100 --> 00:06:09,640
first stop along the way is design

00:06:07,870 --> 00:06:11,890
tokens or you can think of these as your

00:06:09,640 --> 00:06:13,570
theme variables so this is where you

00:06:11,890 --> 00:06:16,120
centrally define your palette of

00:06:13,570 --> 00:06:17,800
typography spacing color borders shadows

00:06:16,120 --> 00:06:20,680
breakpoints things like this

00:06:17,800 --> 00:06:22,900
you could go on and on ideally this

00:06:20,680 --> 00:06:24,520
palette is relatively limited design at

00:06:22,900 --> 00:06:26,169
scale is all about constraints and

00:06:24,520 --> 00:06:28,660
limiting yourself to that repeatable

00:06:26,169 --> 00:06:31,660
palette that that ultimately defines

00:06:28,660 --> 00:06:33,790
your brand so a good example of this is

00:06:31,660 --> 00:06:36,310
something like spacing in a system

00:06:33,790 --> 00:06:38,380
rather than having random numbers

00:06:36,310 --> 00:06:40,090
everywhere for spacing things out

00:06:38,380 --> 00:06:41,500
you should try and constrain yourself to

00:06:40,090 --> 00:06:42,940
a limited palette like this this is

00:06:41,500 --> 00:06:45,280
actually the palette we use in braids

00:06:42,940 --> 00:06:46,120
and you see we go from xx small all the

00:06:45,280 --> 00:06:48,070
way up to xx

00:06:46,120 --> 00:06:50,410
and all of these are multiples of our

00:06:48,070 --> 00:06:52,660
grid which is four pixels so that means

00:06:50,410 --> 00:06:53,830
that when you're designing a UI you're

00:06:52,660 --> 00:06:55,780
pulling from this pallet when you're

00:06:53,830 --> 00:06:57,970
spacing things out there's a lot less

00:06:55,780 --> 00:07:01,389
room for you to diverge across different

00:06:57,970 --> 00:07:03,160
screens once you've got your design

00:07:01,389 --> 00:07:04,330
tokens in place you can build up into

00:07:03,160 --> 00:07:07,900
primitives which is where you ultimately

00:07:04,330 --> 00:07:09,490
wire them up to components a big

00:07:07,900 --> 00:07:10,990
inspiration for me in this space was

00:07:09,490 --> 00:07:13,540
styled system if you haven't seen this

00:07:10,990 --> 00:07:15,010
this is really incredible library we

00:07:13,540 --> 00:07:16,660
don't use it ourselves but we've taken a

00:07:15,010 --> 00:07:18,370
lot of inspiration from it and taken a

00:07:16,660 --> 00:07:19,540
lot of ideas from it which is something

00:07:18,370 --> 00:07:23,350
I think you should do either way

00:07:19,540 --> 00:07:24,639
regardless of what you're doing at the

00:07:23,350 --> 00:07:26,500
end of the day it really just boils down

00:07:24,639 --> 00:07:28,720
to this idea of having a primitive

00:07:26,500 --> 00:07:30,370
component like box which is what gives

00:07:28,720 --> 00:07:32,530
you the convenience of pulling out these

00:07:30,370 --> 00:07:34,240
design tokens and wiring them up to an

00:07:32,530 --> 00:07:37,060
element on the screen as quickly and

00:07:34,240 --> 00:07:38,860
easily as possible so as a practical

00:07:37,060 --> 00:07:40,720
example here we see in playroom I'm

00:07:38,860 --> 00:07:42,550
rendering a box and I'm setting a

00:07:40,720 --> 00:07:44,979
background color of positive life and

00:07:42,550 --> 00:07:46,419
I'm setting the padding to be medium so

00:07:44,979 --> 00:07:48,310
you'll notice here that I don't have to

00:07:46,419 --> 00:07:49,960
create a style sheet and wire it up to

00:07:48,310 --> 00:07:51,669
the element I don't have to pull

00:07:49,960 --> 00:07:53,560
variables off a theme and put them on

00:07:51,669 --> 00:07:55,900
the right CSS properties I just have

00:07:53,560 --> 00:07:58,720
these top-level props on that component

00:07:55,900 --> 00:08:00,310
ready to go with types defined for that

00:07:58,720 --> 00:08:03,160
and everything given it in our case it's

00:08:00,310 --> 00:08:04,780
writing Aaron in typescript so this is a

00:08:03,160 --> 00:08:06,910
really good way to speed up the

00:08:04,780 --> 00:08:08,349
development of new UI and in a playroom

00:08:06,910 --> 00:08:10,389
environment means all of your hard work

00:08:08,349 --> 00:08:13,750
is available to anyone regardless of

00:08:10,389 --> 00:08:16,510
their development expertise one of the

00:08:13,750 --> 00:08:18,639
best ideas of styled system that you

00:08:16,510 --> 00:08:22,450
should definitely steal is this idea of

00:08:18,639 --> 00:08:24,910
responsive props basically the idea is

00:08:22,450 --> 00:08:27,789
this that if you wanted to find padding

00:08:24,910 --> 00:08:29,380
for example on an element typically you

00:08:27,789 --> 00:08:31,000
might pass a single value of small or

00:08:29,380 --> 00:08:32,860
large but in this case I'm passing an

00:08:31,000 --> 00:08:34,959
array literal that has two values of

00:08:32,860 --> 00:08:36,039
small and large so in this case what I'm

00:08:34,959 --> 00:08:37,959
saying is that on mobile

00:08:36,039 --> 00:08:39,520
I want the padding to be small and on

00:08:37,959 --> 00:08:41,979
desktop I want the pattern to be large

00:08:39,520 --> 00:08:43,180
again I'm not having to write a style

00:08:41,979 --> 00:08:44,740
sheet here and I'm not having to write a

00:08:43,180 --> 00:08:46,900
media query and make sure I've got all

00:08:44,740 --> 00:08:48,279
the rules correct these sizes are

00:08:46,900 --> 00:08:49,630
already predefined on our primitive

00:08:48,279 --> 00:08:51,209
component and so now it's very

00:08:49,630 --> 00:08:55,680
expressive for me at this higher level

00:08:51,209 --> 00:08:58,030
to build up something as dynamic as this

00:08:55,680 --> 00:08:59,920
so in practice again it looks like this

00:08:58,030 --> 00:09:01,600
so they're at that example we saw before

00:08:59,920 --> 00:09:03,550
now we're using a responsive prop for

00:09:01,600 --> 00:09:05,529
the padding and because I'm changing

00:09:03,550 --> 00:09:07,570
that second value the mobile view is

00:09:05,529 --> 00:09:09,399
staying untouched but the desktops

00:09:07,570 --> 00:09:12,519
padding is changing so it gives you a

00:09:09,399 --> 00:09:16,060
lot of flexibility very quickly to try

00:09:12,519 --> 00:09:17,980
out different designs the goal here is

00:09:16,060 --> 00:09:19,300
to make writing CSS the exception you

00:09:17,980 --> 00:09:20,589
want to be operating at the component

00:09:19,300 --> 00:09:22,149
level as much as you can and getting

00:09:20,589 --> 00:09:25,839
these perimeters right is a key way to

00:09:22,149 --> 00:09:26,949
enable this of course with these

00:09:25,839 --> 00:09:28,990
primitives you're going to build higher

00:09:26,949 --> 00:09:30,550
level things like buttons fields menus

00:09:28,990 --> 00:09:32,350
and so on these things are a lot less

00:09:30,550 --> 00:09:33,910
contentious they are easier to get right

00:09:32,350 --> 00:09:35,470
they're much more easily understood by

00:09:33,910 --> 00:09:36,820
non developers so I'm not going to go

00:09:35,470 --> 00:09:38,920
into much detail here on this I'm going

00:09:36,820 --> 00:09:41,889
to assume you should have not too much

00:09:38,920 --> 00:09:43,180
trouble with these where things do get a

00:09:41,889 --> 00:09:44,740
bit trickier though is when you come to

00:09:43,180 --> 00:09:46,329
the world of layout this one takes a

00:09:44,740 --> 00:09:47,589
little bit more consideration and in

00:09:46,329 --> 00:09:49,089
fact in our case it took us quite a

00:09:47,589 --> 00:09:51,670
while to really figure out the best

00:09:49,089 --> 00:09:53,860
approach for this so this is ultimately

00:09:51,670 --> 00:09:55,269
what we've landed on and for me that the

00:09:53,860 --> 00:09:57,160
biggest inspiration here was a really

00:09:55,269 --> 00:09:59,949
great article by Nathan Curtis from 8

00:09:57,160 --> 00:10:01,720
shapes I called space in design systems

00:09:59,949 --> 00:10:04,209
and he goes really deep on this topic of

00:10:01,720 --> 00:10:06,399
how you look at a UI like this and break

00:10:04,209 --> 00:10:07,899
it down into its discrete parts in terms

00:10:06,399 --> 00:10:09,760
of white space what are the different

00:10:07,899 --> 00:10:11,560
moving parts what do we call them how do

00:10:09,760 --> 00:10:12,970
you standardize this and this is really

00:10:11,560 --> 00:10:14,980
critical for us if we're trying to build

00:10:12,970 --> 00:10:19,839
out design systems that make this sort

00:10:14,980 --> 00:10:21,610
of layout as easy as possible one really

00:10:19,839 --> 00:10:22,839
important rule if you want to do layout

00:10:21,610 --> 00:10:24,880
well and I've learned this the hard way

00:10:22,839 --> 00:10:26,890
as the components shouldn't contain

00:10:24,880 --> 00:10:28,630
surrounding white space if you render a

00:10:26,890 --> 00:10:30,040
component on the screen there should be

00:10:28,630 --> 00:10:32,980
nothing around it in terms of white

00:10:30,040 --> 00:10:34,839
space and that's because white space is

00:10:32,980 --> 00:10:36,399
owned by layout components these are

00:10:34,839 --> 00:10:38,320
these two concerns you need to separate

00:10:36,399 --> 00:10:41,440
when it comes to to laying out a screen

00:10:38,320 --> 00:10:43,630
and components but there's a problem

00:10:41,440 --> 00:10:46,360
it's easy enough to get people to accept

00:10:43,630 --> 00:10:47,890
this rule but the browser itself

00:10:46,360 --> 00:10:50,079
actually breaks this rule right out of

00:10:47,890 --> 00:10:52,600
the gate what do I mean by that so if I

00:10:50,079 --> 00:10:54,220
render a piece of text and I inspect it

00:10:52,600 --> 00:10:56,139
and developer tools this probably looks

00:10:54,220 --> 00:10:58,630
normal to you this looked normal to me

00:10:56,139 --> 00:11:00,010
until about a couple months ago but

00:10:58,630 --> 00:11:01,569
there's a big problem here this is

00:11:00,010 --> 00:11:04,089
breaking the rule that we just said

00:11:01,569 --> 00:11:06,459
which is having 0 surrounding white

00:11:04,089 --> 00:11:08,019
space on our components from a design

00:11:06,459 --> 00:11:10,480
perspective if you talk to a designer

00:11:08,019 --> 00:11:12,460
about this the top of this of this

00:11:10,480 --> 00:11:14,380
element is the top of the capital letter

00:11:12,460 --> 00:11:16,840
and the bottom of this element visually

00:11:14,380 --> 00:11:18,310
is the baseline of the text and yet the

00:11:16,840 --> 00:11:19,840
browser's given us a chunk of white

00:11:18,310 --> 00:11:21,790
space at the top and a chunk of white

00:11:19,840 --> 00:11:23,650
space at the bottom so that means now

00:11:21,790 --> 00:11:24,790
that in our design system without

00:11:23,650 --> 00:11:27,460
realizing it we're probably gonna be

00:11:24,790 --> 00:11:28,930
fighting this if you look back at your

00:11:27,460 --> 00:11:29,950
work over the years once you see this

00:11:28,930 --> 00:11:31,330
you'll probably realize that you've

00:11:29,950 --> 00:11:34,570
spent a lot of time fighting this

00:11:31,330 --> 00:11:36,220
problem so that means in practice when

00:11:34,570 --> 00:11:38,920
you stack a bunch of headings for

00:11:36,220 --> 00:11:40,750
example there's going to be some space

00:11:38,920 --> 00:11:42,700
between them it's gonna look something

00:11:40,750 --> 00:11:43,810
like this now again this might seem

00:11:42,700 --> 00:11:45,460
normal to you at first glance but

00:11:43,810 --> 00:11:46,840
imagine if these were buttons for

00:11:45,460 --> 00:11:48,640
example there would be zero space

00:11:46,840 --> 00:11:50,320
between those buttons but because we've

00:11:48,640 --> 00:11:53,260
used text here we have space between

00:11:50,320 --> 00:11:55,990
them from a visual design standpoint if

00:11:53,260 --> 00:11:57,520
you are critiquing this the first thing

00:11:55,990 --> 00:11:59,440
you might notice is the fact that the

00:11:57,520 --> 00:12:01,780
white space is not balanced around the

00:11:59,440 --> 00:12:04,000
the internals of this card so the

00:12:01,780 --> 00:12:05,680
left-hand gutter there is more narrow

00:12:04,000 --> 00:12:07,600
than the space at the top and bottom of

00:12:05,680 --> 00:12:09,340
the card and there's really no way for

00:12:07,600 --> 00:12:11,740
us to fix this at the component level

00:12:09,340 --> 00:12:15,460
the component itself the h1 in this case

00:12:11,740 --> 00:12:17,500
is doing the wrong thing so how do we

00:12:15,460 --> 00:12:19,240
fix this we've we've come up with a with

00:12:17,500 --> 00:12:21,670
a solution internally for how we do this

00:12:19,240 --> 00:12:24,250
there's two steps to it the first is we

00:12:21,670 --> 00:12:25,930
use a transform to pull the text down so

00:12:24,250 --> 00:12:28,030
that its baseline sits on the bottom of

00:12:25,930 --> 00:12:30,040
the container and then we effectively

00:12:28,030 --> 00:12:31,720
crop the top of the text node by

00:12:30,040 --> 00:12:35,110
rendering a pseudo element before it

00:12:31,720 --> 00:12:36,940
with a margin top of - a height

00:12:35,110 --> 00:12:38,740
correction that we've calculated so I've

00:12:36,940 --> 00:12:40,390
made a bunch of calculations here that

00:12:38,740 --> 00:12:42,100
you need to do based on the properties

00:12:40,390 --> 00:12:44,470
of the font the cap height and the

00:12:42,100 --> 00:12:46,270
descender height if you want to see the

00:12:44,470 --> 00:12:48,160
the the specifics of this go check out

00:12:46,270 --> 00:12:49,930
braid design system on github and you'll

00:12:48,160 --> 00:12:51,940
see the the the more long-form version

00:12:49,930 --> 00:12:54,040
of this but that's really the concept is

00:12:51,940 --> 00:12:56,230
pull the text down crop the tip the top

00:12:54,040 --> 00:12:57,700
of the node off and so that means that

00:12:56,230 --> 00:12:59,320
when we render our stack of headings

00:12:57,700 --> 00:13:01,660
rather than H ones it's going to behave

00:12:59,320 --> 00:13:04,000
more correctly in regards to our system

00:13:01,660 --> 00:13:05,470
because now you'll see that the top of

00:13:04,000 --> 00:13:06,850
that capital letter at the very top of

00:13:05,470 --> 00:13:08,410
the card is balanced in terms of

00:13:06,850 --> 00:13:11,050
whitespace of the top and the left hand

00:13:08,410 --> 00:13:13,360
side there is no space between each of

00:13:11,050 --> 00:13:15,280
those text nodes and then the the

00:13:13,360 --> 00:13:17,350
baseline of that last one again is

00:13:15,280 --> 00:13:20,380
evenly spaced with that left hand gutter

00:13:17,350 --> 00:13:21,970
this is critical to building a system

00:13:20,380 --> 00:13:23,260
that's predictable that works the way

00:13:21,970 --> 00:13:25,620
designers think and that's ultimately

00:13:23,260 --> 00:13:25,620
our goal

00:13:25,940 --> 00:13:29,699
so the important thing now is that text

00:13:28,199 --> 00:13:31,290
behaves like every other component in

00:13:29,699 --> 00:13:34,230
our system so we're free to build better

00:13:31,290 --> 00:13:35,910
abstractions on top of this and we're

00:13:34,230 --> 00:13:37,529
mapping to the designers mental model

00:13:35,910 --> 00:13:42,120
again ultimately that's the goal of a

00:13:37,529 --> 00:13:44,250
design system now that we've sorted out

00:13:42,120 --> 00:13:47,069
the white space around text which is the

00:13:44,250 --> 00:13:48,660
most common part of your UI we we're

00:13:47,069 --> 00:13:50,279
free to build good layout components on

00:13:48,660 --> 00:13:52,560
top so I'm going to show you what this

00:13:50,279 --> 00:13:54,000
means in in with a few examples I'm

00:13:52,560 --> 00:13:55,529
gonna start with my favorite which is

00:13:54,000 --> 00:13:58,589
the stack component this is probably the

00:13:55,529 --> 00:14:00,449
most widely used one in our system at a

00:13:58,589 --> 00:14:01,980
code level a stack looks like this it's

00:14:00,449 --> 00:14:03,839
a component that you wrap around a bunch

00:14:01,980 --> 00:14:07,680
of child nodes and then you define the

00:14:03,839 --> 00:14:09,120
space between them so visually it looks

00:14:07,680 --> 00:14:11,009
like this so you can see here I've got a

00:14:09,120 --> 00:14:12,990
heading I've got some text I've got an

00:14:11,009 --> 00:14:15,480
action an action bar at the bottom and

00:14:12,990 --> 00:14:17,730
I'm tweaking that space prop to go from

00:14:15,480 --> 00:14:19,290
small medium large and so on and you'll

00:14:17,730 --> 00:14:21,329
see that it's fanning out all of its

00:14:19,290 --> 00:14:23,639
child nodes evenly but only space

00:14:21,329 --> 00:14:24,839
between them not above and below so that

00:14:23,639 --> 00:14:27,269
means that the top of that capital

00:14:24,839 --> 00:14:30,060
letter on the heading title there is

00:14:27,269 --> 00:14:31,620
hitting the top of the padding of the

00:14:30,060 --> 00:14:33,899
bottom of the padding of that card and

00:14:31,620 --> 00:14:35,699
that marries up with what we see at the

00:14:33,899 --> 00:14:40,769
bottom was the the button hitting the

00:14:35,699 --> 00:14:42,509
the padding at the bottom in line is

00:14:40,769 --> 00:14:44,579
another good layout component which is

00:14:42,509 --> 00:14:46,079
used for things like laying out badges

00:14:44,579 --> 00:14:48,120
at the top of a card which you'll see

00:14:46,079 --> 00:14:50,579
shortly again at a code level it looks

00:14:48,120 --> 00:14:52,170
the same as stack you put a bunch of

00:14:50,579 --> 00:14:54,420
child nodes in it you define the space

00:14:52,170 --> 00:14:56,610
between them but in this case what an

00:14:54,420 --> 00:14:58,319
inline is for is for flowing content

00:14:56,610 --> 00:15:00,449
like this so again I talked about badges

00:14:58,319 --> 00:15:01,949
this is a very common UI pattern so what

00:15:00,449 --> 00:15:03,750
we're saying is that with a single prop

00:15:01,949 --> 00:15:05,699
we want to evenly spaced spaced out

00:15:03,750 --> 00:15:08,040
horizontally and vertically between our

00:15:05,699 --> 00:15:09,870
badges and the key thing is that we're

00:15:08,040 --> 00:15:11,339
making sure within this component that

00:15:09,870 --> 00:15:13,889
we don't introduce that surrounding

00:15:11,339 --> 00:15:16,620
whitespace that last line of badges will

00:15:13,889 --> 00:15:18,089
not have a row of white space below at

00:15:16,620 --> 00:15:19,170
the bottom of the container hits right

00:15:18,089 --> 00:15:21,360
up against the bottom of those badges

00:15:19,170 --> 00:15:24,180
and if it doesn't wrap then it takes up

00:15:21,360 --> 00:15:26,699
a single line so now very quickly we can

00:15:24,180 --> 00:15:28,829
operate at this fire level thinking like

00:15:26,699 --> 00:15:30,750
a designer making a single decision that

00:15:28,829 --> 00:15:34,920
impacts this entire component in terms

00:15:30,750 --> 00:15:36,149
of spacing columns is a little easier to

00:15:34,920 --> 00:15:37,759
deal with because everyone knows what

00:15:36,149 --> 00:15:40,970
columns are

00:15:37,759 --> 00:15:42,709
here's what it looks like now this one's

00:15:40,970 --> 00:15:46,279
a lot simpler as I said but you'll see

00:15:42,709 --> 00:15:47,720
here that that the layout is honoring

00:15:46,279 --> 00:15:49,129
those design tokens that we've just

00:15:47,720 --> 00:15:51,199
specified earlier so just by changing

00:15:49,129 --> 00:15:55,369
this one prop the space between our

00:15:51,199 --> 00:15:57,470
columns is fanning out evenly but the

00:15:55,369 --> 00:15:59,329
great thing about our system building up

00:15:57,470 --> 00:16:01,279
in layers is that the responsive props

00:15:59,329 --> 00:16:04,309
that we defined as a feature down at the

00:16:01,279 --> 00:16:05,929
box layer is potentially available up at

00:16:04,309 --> 00:16:07,519
these higher components so in this case

00:16:05,929 --> 00:16:09,589
the columns component actually does

00:16:07,519 --> 00:16:11,689
support responsive props so if you want

00:16:09,589 --> 00:16:13,519
to say that your columns have small

00:16:11,689 --> 00:16:15,649
space between them on mobile and large

00:16:13,519 --> 00:16:17,689
space on desktop you can express it as

00:16:15,649 --> 00:16:20,109
easily as this which consumers if your

00:16:17,689 --> 00:16:22,339
design system no doubt will appreciate

00:16:20,109 --> 00:16:24,379
again the key thing here is that we

00:16:22,339 --> 00:16:26,449
mapped to the designers mental model in

00:16:24,379 --> 00:16:27,679
terms of the way they manage white space

00:16:26,449 --> 00:16:29,569
because if you ever watch a designer

00:16:27,679 --> 00:16:31,790
work they tend to drop the elements they

00:16:29,569 --> 00:16:34,459
want on the screen as a first pass and

00:16:31,790 --> 00:16:35,660
then as a second pass they're dealing

00:16:34,459 --> 00:16:37,279
with the white space they're dealing

00:16:35,660 --> 00:16:38,779
with the layout then they're nudging

00:16:37,279 --> 00:16:40,879
things up and down to make sure that

00:16:38,779 --> 00:16:42,679
things sit correctly on the screen and

00:16:40,879 --> 00:16:47,299
this as a component system is basically

00:16:42,679 --> 00:16:48,799
giving them that same mental model now

00:16:47,299 --> 00:16:51,169
up to this point if you've done your job

00:16:48,799 --> 00:16:52,939
well your components should make sense

00:16:51,169 --> 00:16:54,499
to non developers they should be able to

00:16:52,939 --> 00:16:58,129
look at the code that you're writing and

00:16:54,499 --> 00:16:59,540
and be able to follow it completely and

00:16:58,129 --> 00:17:00,799
not only that but they should actually

00:16:59,540 --> 00:17:02,239
be able to start to roll up their

00:17:00,799 --> 00:17:04,519
sleeves and write it themselves and

00:17:02,239 --> 00:17:05,569
that's really the idea with this tool is

00:17:04,519 --> 00:17:07,279
that you're creating an environment

00:17:05,569 --> 00:17:08,360
that's a lot more inviting for people

00:17:07,279 --> 00:17:10,370
who are not as experienced with

00:17:08,360 --> 00:17:12,439
development because you've you've

00:17:10,370 --> 00:17:13,939
trimmed away everything that's that's a

00:17:12,439 --> 00:17:15,409
tricky about react in terms of your

00:17:13,939 --> 00:17:16,850
development environment even the fact

00:17:15,409 --> 00:17:18,829
that you have to write a function that

00:17:16,850 --> 00:17:20,179
returns JSX is gone and you're just

00:17:18,829 --> 00:17:22,309
writing the raw JSX

00:17:20,179 --> 00:17:24,319
and so now we have a tool that we can

00:17:22,309 --> 00:17:26,179
use to bring other people along with us

00:17:24,319 --> 00:17:27,709
on this journey and start to learn the

00:17:26,179 --> 00:17:28,399
components in our system and try them

00:17:27,709 --> 00:17:31,580
for themselves

00:17:28,399 --> 00:17:33,350
I think this opens the opportunity for

00:17:31,580 --> 00:17:35,210
us to start to make code part of the

00:17:33,350 --> 00:17:39,139
design process if we've done our job

00:17:35,210 --> 00:17:40,880
well this should be possible so to me

00:17:39,139 --> 00:17:42,860
what this means is prototyping in code

00:17:40,880 --> 00:17:44,870
there's still a room there's always

00:17:42,860 --> 00:17:46,669
going to be room for pencil and paper at

00:17:44,870 --> 00:17:48,470
the very least and even tools like

00:17:46,669 --> 00:17:50,100
sketch are great for trying out rough

00:17:48,470 --> 00:17:52,500
ideas before you want to invest

00:17:50,100 --> 00:17:54,450
heavily but what I want to push for is

00:17:52,500 --> 00:17:56,940
this idea of getting into codes sooner

00:17:54,450 --> 00:17:58,740
than we do today often we treat coders

00:17:56,940 --> 00:18:00,780
that as the is the thing we do at the

00:17:58,740 --> 00:18:02,940
very end of a design process when we're

00:18:00,780 --> 00:18:04,470
ready to ship to production I think we

00:18:02,940 --> 00:18:05,970
need to change that around and get code

00:18:04,470 --> 00:18:06,590
in there much much earlier than we do

00:18:05,970 --> 00:18:09,630
today

00:18:06,590 --> 00:18:12,289
so how can we help there's a lot of work

00:18:09,630 --> 00:18:14,669
here for us to do to make this happen

00:18:12,289 --> 00:18:16,169
from a from a cultural perspective I

00:18:14,669 --> 00:18:17,850
think we need to get involved with

00:18:16,169 --> 00:18:20,250
design we need to start sitting with

00:18:17,850 --> 00:18:21,690
designers in their own spaces seeing how

00:18:20,250 --> 00:18:23,100
they work and really trying to

00:18:21,690 --> 00:18:24,960
understand what they need from the

00:18:23,100 --> 00:18:27,000
system hopefully you've been doing this

00:18:24,960 --> 00:18:28,770
already to build a design system that

00:18:27,000 --> 00:18:30,240
even when you've got that far you can

00:18:28,770 --> 00:18:33,870
need to keep doing this this is really

00:18:30,240 --> 00:18:35,220
critical in particular I think you need

00:18:33,870 --> 00:18:37,110
to pay attention to how designers

00:18:35,220 --> 00:18:39,179
iterate because if we if we want to be

00:18:37,110 --> 00:18:40,799
able to design in code our code needs to

00:18:39,179 --> 00:18:41,970
be flexible enough to deal with all the

00:18:40,799 --> 00:18:43,950
different iterations that they go

00:18:41,970 --> 00:18:46,950
through so keeping an eye on this is

00:18:43,950 --> 00:18:48,630
really important this is quite a big

00:18:46,950 --> 00:18:49,080
leap obviously and I'm very aware of

00:18:48,630 --> 00:18:51,480
that

00:18:49,080 --> 00:18:53,700
and so what you need to do is find those

00:18:51,480 --> 00:18:55,080
early adopters and offer constant

00:18:53,700 --> 00:18:56,789
support to them so in our case what

00:18:55,080 --> 00:18:59,010
we're doing is we're running a slack

00:18:56,789 --> 00:19:01,140
channel internally for people who need

00:18:59,010 --> 00:19:02,760
design support with our system and we've

00:19:01,140 --> 00:19:04,440
tried to make it as much as possible a

00:19:02,760 --> 00:19:06,330
place where people feel welcome to ask

00:19:04,440 --> 00:19:08,190
questions to surface the problems

00:19:06,330 --> 00:19:09,990
they're having to share playroom links

00:19:08,190 --> 00:19:11,490
around and get feedback and we've had

00:19:09,990 --> 00:19:14,760
some early wins there and it's and it's

00:19:11,490 --> 00:19:16,740
been really positive for us once you

00:19:14,760 --> 00:19:19,710
start to go out outside that group of

00:19:16,740 --> 00:19:21,659
early adopters a really good strategy is

00:19:19,710 --> 00:19:22,950
to encourage pairing between designers

00:19:21,659 --> 00:19:24,750
and developers which probably should be

00:19:22,950 --> 00:19:26,970
happening anyway but this starts to give

00:19:24,750 --> 00:19:30,000
you a place to do that in a dedicated

00:19:26,970 --> 00:19:31,710
way so if you sit down a developer with

00:19:30,000 --> 00:19:33,330
a designer in front of this tool and

00:19:31,710 --> 00:19:35,850
they start to try and translate their

00:19:33,330 --> 00:19:38,960
early concept of work into JSX that

00:19:35,850 --> 00:19:41,970
feedback loop gets nice and tight now

00:19:38,960 --> 00:19:44,610
what I want to what I want to propose is

00:19:41,970 --> 00:19:46,380
this idea as jeaious this idea of JSX as

00:19:44,610 --> 00:19:48,390
a design tool for everyone not just for

00:19:46,380 --> 00:19:50,280
developers I think it opens up the door

00:19:48,390 --> 00:19:51,750
to making our design language something

00:19:50,280 --> 00:19:53,850
that can be expressed very quickly and

00:19:51,750 --> 00:19:56,900
easily in a way that really crosses this

00:19:53,850 --> 00:20:00,240
boundary between design and development

00:19:56,900 --> 00:20:02,250
that means us as a community need to

00:20:00,240 --> 00:20:03,360
welcome designers into the fold at large

00:20:02,250 --> 00:20:05,220
and within our

00:20:03,360 --> 00:20:06,630
the companies we work in this is the

00:20:05,220 --> 00:20:07,799
really critical step I think that we

00:20:06,630 --> 00:20:09,570
need to get right getting things

00:20:07,799 --> 00:20:11,280
technically right is not enough we need

00:20:09,570 --> 00:20:13,080
to move the needle on the design process

00:20:11,280 --> 00:20:15,630
itself and I really think there's an

00:20:13,080 --> 00:20:17,490
opportunity here for us to do it in

00:20:15,630 --> 00:20:19,740
order to do this we need to use code

00:20:17,490 --> 00:20:21,809
oriented design tools and maybe build

00:20:19,740 --> 00:20:23,940
them for yourself if you need to you

00:20:21,809 --> 00:20:26,370
know take playroom for kit and add your

00:20:23,940 --> 00:20:27,900
own features if you like you know design

00:20:26,370 --> 00:20:29,429
systems themselves we need to make sure

00:20:27,900 --> 00:20:31,320
we create the right abstractions and

00:20:29,429 --> 00:20:33,540
right meaning mapping to the way

00:20:31,320 --> 00:20:34,770
designers think about things in order to

00:20:33,540 --> 00:20:36,450
achieve that we need to work closely

00:20:34,770 --> 00:20:38,820
with designers and make make sure that

00:20:36,450 --> 00:20:40,919
we really deliver on the potential that

00:20:38,820 --> 00:20:43,020
they need and then finally we need to

00:20:40,919 --> 00:20:44,580
actively support new workflows that are

00:20:43,020 --> 00:20:47,309
opened up as a result of this it's

00:20:44,580 --> 00:20:48,570
really our job to do this so if we

00:20:47,309 --> 00:20:50,460
really want to do this if we really

00:20:48,570 --> 00:20:54,030
really want to start rethinking design

00:20:50,460 --> 00:20:55,410
practices you know this isn't going to

00:20:54,030 --> 00:20:57,690
happen without the people in this room

00:20:55,410 --> 00:20:58,710
so hopefully this is resonating with you

00:20:57,690 --> 00:21:00,660
and hopefully you think this is

00:20:58,710 --> 00:21:02,130
something that is possible and has the

00:21:00,660 --> 00:21:03,900
potential to really improve the quality

00:21:02,130 --> 00:21:05,790
of the products we ship to the end our

00:21:03,900 --> 00:21:06,750
end users and let us move a lot faster

00:21:05,790 --> 00:21:08,820
while we do it

00:21:06,750 --> 00:21:10,830
so I'm hoping you'll join me on that

00:21:08,820 --> 00:21:13,169
journey and I'd love to really change

00:21:10,830 --> 00:21:15,990
the way we think about design that's it

00:21:13,169 --> 00:21:19,140
for me thank you for listening and thank

00:21:15,990 --> 00:21:21,870
you Mark

00:21:19,140 --> 00:21:24,179
dela gleesh everyone the co-creator of

00:21:21,870 --> 00:21:27,090
CSS and Mark we have bunch of questions

00:21:24,179 --> 00:21:29,040
I like the idea of layout components but

00:21:27,090 --> 00:21:34,140
don't developers get worried about the

00:21:29,040 --> 00:21:37,169
extra Dom it brings um yeah so I put

00:21:34,140 --> 00:21:39,150
this in the category of I'm happy to

00:21:37,169 --> 00:21:39,990
cross that bridge when I come to it you

00:21:39,150 --> 00:21:42,059
know I don't I do

00:21:39,990 --> 00:21:44,250
I think the bigger that you have two

00:21:42,059 --> 00:21:45,720
competing problems here and there's

00:21:44,250 --> 00:21:47,280
always a cost to abstractions but I

00:21:45,720 --> 00:21:51,059
think that this abstraction is worth it

00:21:47,280 --> 00:21:55,890
but we'll see our stack and inline based

00:21:51,059 --> 00:21:58,049
on the wild card selectors know from

00:21:55,890 --> 00:21:59,580
memory we wrap each child in a container

00:21:58,049 --> 00:22:02,730
I think but I could be wrong I'd have to

00:21:59,580 --> 00:22:04,140
double-check it's nice to know that you

00:22:02,730 --> 00:22:06,059
have to double-check something yeah you

00:22:04,140 --> 00:22:07,830
know there are tools for developers to

00:22:06,059 --> 00:22:09,480
help them use normal web heading some

00:22:07,830 --> 00:22:12,030
design wouldn't be easier to provide

00:22:09,480 --> 00:22:14,970
them this then redefine basic

00:22:12,030 --> 00:22:16,269
fundamental element so I'm not sure I

00:22:14,970 --> 00:22:18,639
understand the question

00:22:16,269 --> 00:22:21,429
either but you know I tend to not to

00:22:18,639 --> 00:22:23,769
understand those questions let's be

00:22:21,429 --> 00:22:25,690
honest no I thought JavaScript was

00:22:23,769 --> 00:22:26,169
something that Java wrote it's not I

00:22:25,690 --> 00:22:27,549
know

00:22:26,169 --> 00:22:30,219
I mean I'll adjust the last point I

00:22:27,549 --> 00:22:32,080
guess redefine basic fundamental element

00:22:30,219 --> 00:22:33,339
I actually think this is the crux of

00:22:32,080 --> 00:22:35,139
some of the issues we have trying to

00:22:33,339 --> 00:22:36,639
cross this divide because effectively

00:22:35,139 --> 00:22:38,200
what you're doing is you're calling out

00:22:36,639 --> 00:22:40,719
what the browser's doing natively as

00:22:38,200 --> 00:22:42,459
being incorrect you know and and that

00:22:40,719 --> 00:22:44,619
actually I would say that goes against

00:22:42,459 --> 00:22:46,989
our nature to do that like I was kind of

00:22:44,619 --> 00:22:49,299
I was unable to find this issue for

00:22:46,989 --> 00:22:50,889
quite a while because I just took for

00:22:49,299 --> 00:22:53,379
granted that that's you know that's the

00:22:50,889 --> 00:22:54,999
way things work it's one of those things

00:22:53,379 --> 00:22:56,919
you don't question but it took me

00:22:54,999 --> 00:22:58,629
sitting with designers and really

00:22:56,919 --> 00:23:00,309
talking through why they're struggling

00:22:58,629 --> 00:23:02,529
with the design system and why it's not

00:23:00,309 --> 00:23:04,539
doing what they expect to really

00:23:02,529 --> 00:23:07,450
understand why this extra whitespace

00:23:04,539 --> 00:23:10,450
around text nodes is a problem and now

00:23:07,450 --> 00:23:12,669
that we've made that change for me

00:23:10,450 --> 00:23:14,799
there's no going back I think that it

00:23:12,669 --> 00:23:18,399
makes things all that much easier to

00:23:14,799 --> 00:23:20,139
make predictable UI Omari of last

00:23:18,399 --> 00:23:25,329
question and it plans to support other

00:23:20,139 --> 00:23:26,919
css3 compilers besides GSA's I'd say no

00:23:25,329 --> 00:23:30,909
and I think that for me that the big

00:23:26,919 --> 00:23:32,649
reason is that I I genuinely think JSX

00:23:30,909 --> 00:23:33,909
is something that that actually makes

00:23:32,649 --> 00:23:36,759
this possible

00:23:33,909 --> 00:23:38,559
so I've worked with react without JSX

00:23:36,759 --> 00:23:41,889
before just using the function syntax so

00:23:38,559 --> 00:23:44,320
I did that quite early on and you know

00:23:41,889 --> 00:23:46,499
if I had to I could make that work you

00:23:44,320 --> 00:23:49,179
know I'd still be using react probably

00:23:46,499 --> 00:23:50,559
but I think what JSX does is it really

00:23:49,179 --> 00:23:52,269
lowers the barrier to entry for people

00:23:50,559 --> 00:23:54,759
who maybe have just dabbled with a bit

00:23:52,269 --> 00:23:56,379
of HTML but coding wasn't really their

00:23:54,759 --> 00:23:57,759
thing and I think you get a lot of that

00:23:56,379 --> 00:23:59,919
in the design space a lot of designers

00:23:57,759 --> 00:24:03,700
who've dabbled with the web but haven't

00:23:59,919 --> 00:24:05,200
gone very deep JSX I think makes it that

00:24:03,700 --> 00:24:08,709
much more approachable for people who

00:24:05,200 --> 00:24:11,480
don't have a technical background thank

00:24:08,709 --> 00:24:14,640
you so much there was Mark Douglas

00:24:11,480 --> 00:24:14,640

YouTube URL: https://www.youtube.com/watch?v=jnV1u67_yVg


