Title: Reactive Online Meetup|GraphQL experience
Publication date: 2020-09-18
Playlist: Reactive Online Meetups
Description: 
	STAY TUNED FOR NEXT EDITION!

𝗦𝗣𝗘𝗔𝗞𝗘𝗥𝗦
#metatalk - Alexandr Goncharov - Graph Databases beyond GraphQL
#devtalk - Gerard Sans - Offline-first made easy with GraphQL and Amplify DataStore
host - Andrej Skok - Vacuumlabs team
--------------------
ALEXANDR GONCHAROV 
#metatalk 15min 

TALK
Graph Databases beyond GraphQL

TALK ABSTRACT
Many great projects were created and succeeded with the help of GraphQL. Let's connect another node to our community's knowledge graph with a deeper understanding of native graph databases as an example of Neo4j.

In this talk, we will discuss a different view on data architecture, contrast it with relational databases, and provide analogies with GraphQL. Along the way, I'll share my experience of using graph databases on production with highly connected data projects.


-------------------------------------------------------------------------
GERARD SANS
#devtalk 45-50min

TALK
Offline-first made easy with GraphQL and Amplify DataStore

TALK ABSTRACT
During this talk, we will focus on offline-first applications, what challenges they try to solve, and how easy it is to build one with Amplify DataStore. Amplify DataStore is an on-device persistent repository for interacting with local data and able to automatically synchronize via GraphQL

--------------------
Captions: 
	00:00:04,560 --> 00:00:10,240
hello everyone

00:00:06,879 --> 00:00:14,320
uh welcome to our named uh react online

00:00:10,240 --> 00:00:14,719
uh online meetup uh we are here after a

00:00:14,320 --> 00:00:17,840
six

00:00:14,719 --> 00:00:21,279
week pause so we hope that you

00:00:17,840 --> 00:00:23,279
all are well rested after the summer and

00:00:21,279 --> 00:00:26,320
all the vacations

00:00:23,279 --> 00:00:27,599
probably in current situation only walks

00:00:26,320 --> 00:00:30,240
in the nature

00:00:27,599 --> 00:00:32,239
where on the list but we are really

00:00:30,240 --> 00:00:33,360
excited now that you made the decision

00:00:32,239 --> 00:00:36,000
to join us today

00:00:33,360 --> 00:00:37,200
for for the online meetup and during the

00:00:36,000 --> 00:00:40,239
summer we were not

00:00:37,200 --> 00:00:42,239
slacking around just like that

00:00:40,239 --> 00:00:43,280
but we were working really hard to bring

00:00:42,239 --> 00:00:46,239
you

00:00:43,280 --> 00:00:49,280
the next meet up which will be about the

00:00:46,239 --> 00:00:52,719
hot topic right now and that is graphql

00:00:49,280 --> 00:00:56,079
so you can look forward to to that talks

00:00:52,719 --> 00:00:58,719
currently the first is from our speaker

00:00:56,079 --> 00:00:59,520
alexander goncaro about graphql that

00:00:58,719 --> 00:01:02,320
bases beyond

00:00:59,520 --> 00:01:03,520
graphql and the second one about well

00:01:02,320 --> 00:01:06,240
known

00:01:03,520 --> 00:01:07,200
for people who are watching this for

00:01:06,240 --> 00:01:10,400
longer time

00:01:07,200 --> 00:01:14,000
gerard sans who was host

00:01:10,400 --> 00:01:16,320
at some meetups about offline first

00:01:14,000 --> 00:01:17,759
made easy with graphql and amplify

00:01:16,320 --> 00:01:20,479
datastore

00:01:17,759 --> 00:01:21,200
just to introduce myself i will be host

00:01:20,479 --> 00:01:23,840
today

00:01:21,200 --> 00:01:24,880
evening and my name is andy i'm from

00:01:23,840 --> 00:01:27,840
vacuum labs

00:01:24,880 --> 00:01:29,680
which is a company that stays behind the

00:01:27,840 --> 00:01:32,960
reactive conf

00:01:29,680 --> 00:01:35,200
from its beginning in 2015 vacuum labs

00:01:32,960 --> 00:01:37,280
is focused on providing flexible and

00:01:35,200 --> 00:01:39,040
reliable software engineers to clients

00:01:37,280 --> 00:01:44,240
all over the world

00:01:39,040 --> 00:01:47,360
uh focusing mainly on fintech and crypto

00:01:44,240 --> 00:01:49,680
uh the first or the two things

00:01:47,360 --> 00:01:50,399
that are worth mentioning just before

00:01:49,680 --> 00:01:54,000
the

00:01:50,399 --> 00:01:57,280
meet up or the talks starts is that

00:01:54,000 --> 00:02:00,320
qa q a

00:01:57,280 --> 00:02:03,840
that means that you can ask

00:02:00,320 --> 00:02:07,280
questions during the meet up in the chat

00:02:03,840 --> 00:02:11,120
which is accessible in your zoom windows

00:02:07,280 --> 00:02:13,920
on the lower left left side we will get

00:02:11,120 --> 00:02:14,800
eventually to all the questions after

00:02:13,920 --> 00:02:17,920
the talk

00:02:14,800 --> 00:02:18,560
so feel free to ask i will then read

00:02:17,920 --> 00:02:22,000
them

00:02:18,560 --> 00:02:24,800
aloud and the speaker will answer

00:02:22,000 --> 00:02:27,040
uh if we will not manage to answer all

00:02:24,800 --> 00:02:29,520
the questions we will move to slack

00:02:27,040 --> 00:02:32,879
which is the second point that there is

00:02:29,520 --> 00:02:32,879
uh active slack channel

00:02:34,840 --> 00:02:38,560
reactiveonlinemeetup.slike.com

00:02:36,080 --> 00:02:41,120
where you can find the channel to this

00:02:38,560 --> 00:02:43,040
meetup and also the previous meetups so

00:02:41,120 --> 00:02:45,440
you can check out the history

00:02:43,040 --> 00:02:47,519
uh there was uh some really great

00:02:45,440 --> 00:02:48,000
discussion about microfrontends last

00:02:47,519 --> 00:02:50,400
time

00:02:48,000 --> 00:02:52,160
so so you can watch it there you find

00:02:50,400 --> 00:02:55,200
the recording and everything

00:02:52,160 --> 00:02:57,680
so uh it's a great community there and

00:02:55,200 --> 00:02:58,480
some active discussion so feel free to

00:02:57,680 --> 00:03:01,519
join

00:02:58,480 --> 00:03:05,840
uh and also continue to talk with the

00:03:01,519 --> 00:03:05,840
speakers which are present there

00:03:07,120 --> 00:03:13,680
so that's pretty much it from me for for

00:03:10,319 --> 00:03:16,879
for for now and uh

00:03:13,680 --> 00:03:20,080
let's uh jump in uh

00:03:16,879 --> 00:03:22,879
directly to to the first death talk uh

00:03:20,080 --> 00:03:25,599
from alexander goncaro so alex hey are

00:03:22,879 --> 00:03:25,599
you here how are you

00:03:28,239 --> 00:03:34,239
good day i'm good how are you dude

00:03:31,519 --> 00:03:36,080
i'm also great i'm excited for it for

00:03:34,239 --> 00:03:39,360
the talk

00:03:36,080 --> 00:03:41,440
we all have all have been hearing about

00:03:39,360 --> 00:03:44,239
the graphql for a really long time

00:03:41,440 --> 00:03:45,040
some of us have definitely tried it some

00:03:44,239 --> 00:03:48,000
maybe not

00:03:45,040 --> 00:03:48,560
so we are really all excited about the

00:03:48,000 --> 00:03:50,799
rough

00:03:48,560 --> 00:03:50,799
day

00:03:52,480 --> 00:03:58,480
i would be happy to provide some other

00:03:56,239 --> 00:04:00,799
side of graphs and it's also going to

00:03:58,480 --> 00:04:05,120
touch on graphql as well so we'll see

00:04:00,799 --> 00:04:08,560
i hope people like it yep for sure

00:04:05,120 --> 00:04:12,840
uh so stage is yours let's go for it

00:04:08,560 --> 00:04:15,840
let's go first thank you thank you so

00:04:12,840 --> 00:04:15,840
much

00:04:18,160 --> 00:04:23,840
so thank you everyone for your time

00:04:21,600 --> 00:04:24,960
and thank you for joining i hope you

00:04:23,840 --> 00:04:28,240
like this talk

00:04:24,960 --> 00:04:29,680
and it's about graph databases

00:04:28,240 --> 00:04:33,520
and it's something that goes beyond

00:04:29,680 --> 00:04:36,080
graphql and we'll see why in a minute

00:04:33,520 --> 00:04:37,520
so allow me to quickly give small

00:04:36,080 --> 00:04:40,800
disclaimer is that

00:04:37,520 --> 00:04:41,440
graphql is not graph database at least

00:04:40,800 --> 00:04:44,639
in

00:04:41,440 --> 00:04:47,520
a native way but graphql can be used

00:04:44,639 --> 00:04:48,880
with graph databases without something

00:04:47,520 --> 00:04:51,520
really powerful

00:04:48,880 --> 00:04:53,199
so let's see what all the fuss is about

00:04:51,520 --> 00:04:56,720
what's the graph

00:04:53,199 --> 00:04:58,880
and let's start simple we can see that

00:04:56,720 --> 00:05:02,880
we have some like schema here which is

00:04:58,880 --> 00:05:03,440
adam eve and to these nodes we would

00:05:02,880 --> 00:05:05,919
refer

00:05:03,440 --> 00:05:06,960
as entities or vertices or rather some

00:05:05,919 --> 00:05:08,960
objects

00:05:06,960 --> 00:05:11,360
but these objects can have some

00:05:08,960 --> 00:05:14,000
connection or relationship between them

00:05:11,360 --> 00:05:15,919
and that's essentially what the graph is

00:05:14,000 --> 00:05:18,479
it's pretty simple right

00:05:15,919 --> 00:05:19,600
well it can get really complicated

00:05:18,479 --> 00:05:23,840
really fast

00:05:19,600 --> 00:05:24,160
but that's fine don't worry so just to

00:05:23,840 --> 00:05:27,199
sum

00:05:24,160 --> 00:05:29,199
up my name is alex i work at muse

00:05:27,199 --> 00:05:30,800
as a front-end developer and you can see

00:05:29,199 --> 00:05:34,080
it's all in the graph

00:05:30,800 --> 00:05:34,080
so that's easy right

00:05:34,240 --> 00:05:38,240
but do we actually need graph databases

00:05:36,639 --> 00:05:39,600
in general

00:05:38,240 --> 00:05:42,320
that's a good question because we've

00:05:39,600 --> 00:05:44,240
been solving all the databases stuff

00:05:42,320 --> 00:05:48,160
with relational databases

00:05:44,240 --> 00:05:49,520
pretty solid in the last decade

00:05:48,160 --> 00:05:51,199
if you would like to represent such

00:05:49,520 --> 00:05:54,240
schema as room

00:05:51,199 --> 00:05:55,440
and category you would probably easily

00:05:54,240 --> 00:05:57,840
could create sound like this

00:05:55,440 --> 00:05:59,600
you have a table of type room you have a

00:05:57,840 --> 00:06:01,680
table room category

00:05:59,600 --> 00:06:02,639
and you can create a join table or

00:06:01,680 --> 00:06:04,960
bridge table

00:06:02,639 --> 00:06:07,440
that basically can provide you with many

00:06:04,960 --> 00:06:08,560
many uh many-to-many relationship pretty

00:06:07,440 --> 00:06:11,120
easily

00:06:08,560 --> 00:06:11,919
and if you like to go somewhere deeper

00:06:11,120 --> 00:06:14,960
you can make

00:06:11,919 --> 00:06:18,840
multiple of these and this seems to

00:06:14,960 --> 00:06:20,000
work really good and nobody seems to be

00:06:18,840 --> 00:06:21,919
complaining

00:06:20,000 --> 00:06:24,479
but here's the thing like this

00:06:21,919 --> 00:06:27,120
relationship's never present

00:06:24,479 --> 00:06:28,319
we have some limitations on this foreign

00:06:27,120 --> 00:06:30,319
keys

00:06:28,319 --> 00:06:31,360
but if i'll just shuffle around some

00:06:30,319 --> 00:06:34,160
cards around

00:06:31,360 --> 00:06:35,520
you already have a really hard time to

00:06:34,160 --> 00:06:39,120
replicate it

00:06:35,520 --> 00:06:41,440
because we only rely on these ideas

00:06:39,120 --> 00:06:43,440
so these relationships are actually

00:06:41,440 --> 00:06:47,120
delusional

00:06:43,440 --> 00:06:49,919
okay many actually call this

00:06:47,120 --> 00:06:51,680
as really really smart way object

00:06:49,919 --> 00:06:54,560
relational impedance mismatch

00:06:51,680 --> 00:06:54,960
and it's something that orm help us to

00:06:54,560 --> 00:06:58,400
solve

00:06:54,960 --> 00:07:00,800
or rather abstract from but let's not

00:06:58,400 --> 00:07:04,000
focus on it too much

00:07:00,800 --> 00:07:06,240
the thing is rams is that all rams

00:07:04,000 --> 00:07:07,520
have problems with drawings because once

00:07:06,240 --> 00:07:09,360
you start to forget about these

00:07:07,520 --> 00:07:09,919
relationships and how it works under the

00:07:09,360 --> 00:07:11,759
hood

00:07:09,919 --> 00:07:14,240
you're actually hitting performance

00:07:11,759 --> 00:07:17,039
really badly

00:07:14,240 --> 00:07:19,120
and many people of you already start to

00:07:17,039 --> 00:07:22,160
use graphql right

00:07:19,120 --> 00:07:24,479
it's wonderful technology but usually

00:07:22,160 --> 00:07:26,560
case how to represent it right now is

00:07:24,479 --> 00:07:30,160
that we have some client

00:07:26,560 --> 00:07:32,479
which goes to the graphql endpoint

00:07:30,160 --> 00:07:33,680
which is somewhere next to back end or

00:07:32,479 --> 00:07:36,560
at least somewhere

00:07:33,680 --> 00:07:38,400
near it and this back-end then generates

00:07:36,560 --> 00:07:41,039
sql query

00:07:38,400 --> 00:07:42,240
well which is good but the thing is it's

00:07:41,039 --> 00:07:44,639
not graph all the way

00:07:42,240 --> 00:07:46,240
and this conversion feels some sound

00:07:44,639 --> 00:07:47,199
like that to me like really all the

00:07:46,240 --> 00:07:50,879
parts are here

00:07:47,199 --> 00:07:52,720
but somehow it's not solid

00:07:50,879 --> 00:07:54,319
now let's talk about a bit more

00:07:52,720 --> 00:07:57,440
interesting case

00:07:54,319 --> 00:07:58,479
let's put our graphql gateway somewhere

00:07:57,440 --> 00:08:01,840
next to back end

00:07:58,479 --> 00:08:03,919
but it's totally independent so it can

00:08:01,840 --> 00:08:05,680
work with back-end logic or business

00:08:03,919 --> 00:08:07,440
logic whenever it needs to

00:08:05,680 --> 00:08:09,120
but sometimes you would actually can

00:08:07,440 --> 00:08:12,319
avoid back-end altogether

00:08:09,120 --> 00:08:15,680
in some way just using the gateway

00:08:12,319 --> 00:08:16,879
and this way you can provide some public

00:08:15,680 --> 00:08:19,759
apis

00:08:16,879 --> 00:08:21,039
without even utilizing any kind of

00:08:19,759 --> 00:08:24,479
business logic which is

00:08:21,039 --> 00:08:26,879
actually really good and on top of that

00:08:24,479 --> 00:08:27,840
all your connections are actually graph

00:08:26,879 --> 00:08:29,840
based

00:08:27,840 --> 00:08:31,280
and that provides some really powerful

00:08:29,840 --> 00:08:34,399
outcomes

00:08:31,280 --> 00:08:38,399
to which we cannot talk in a second so

00:08:34,399 --> 00:08:38,399
do we actually need graph databases

00:08:38,479 --> 00:08:43,839
the usual way to approach it if you have

00:08:41,599 --> 00:08:44,640
really highly connected data probably

00:08:43,839 --> 00:08:47,839
yes

00:08:44,640 --> 00:08:50,560
but let's go in some specific scenarios

00:08:47,839 --> 00:08:52,160
for detection you have a lot of data you

00:08:50,560 --> 00:08:52,959
don't exactly know how things are

00:08:52,160 --> 00:08:54,720
connected

00:08:52,959 --> 00:08:57,680
and you need to find something well

00:08:54,720 --> 00:09:01,600
usually graphs are really good with that

00:08:57,680 --> 00:09:05,360
ai you think about simple neural network

00:09:01,600 --> 00:09:08,240
or perceptron well it's actually a graph

00:09:05,360 --> 00:09:11,360
where weights of the neural network is

00:09:08,240 --> 00:09:13,279
actually on edges of this network

00:09:11,360 --> 00:09:15,040
another good example for it

00:09:13,279 --> 00:09:17,839
recommendations engine

00:09:15,040 --> 00:09:19,200
well it's just a huge neural network if

00:09:17,839 --> 00:09:24,000
you think about it

00:09:19,200 --> 00:09:26,320
this applied analytics on it works good

00:09:24,000 --> 00:09:28,000
another approach uh is network

00:09:26,320 --> 00:09:30,160
operations and mapping

00:09:28,000 --> 00:09:31,120
this is if you would like to imagine it

00:09:30,160 --> 00:09:33,680
imagine you have

00:09:31,120 --> 00:09:35,279
a country and it's provided this

00:09:33,680 --> 00:09:38,000
internet via service

00:09:35,279 --> 00:09:38,399
networks of routers and you want to find

00:09:38,000 --> 00:09:41,760
out

00:09:38,399 --> 00:09:42,959
one if it fails it actually can cut off

00:09:41,760 --> 00:09:47,519
half of the country

00:09:42,959 --> 00:09:49,600
well that's where graphs shine okay

00:09:47,519 --> 00:09:51,440
but if you like to use graph databases

00:09:49,600 --> 00:09:54,399
you have to understand

00:09:51,440 --> 00:09:56,480
like one thing only in graphs nodes are

00:09:54,399 --> 00:09:58,959
just as important as relationships

00:09:56,480 --> 00:10:00,560
and that's super powerful and you would

00:09:58,959 --> 00:10:02,000
like to use graph

00:10:00,560 --> 00:10:04,640
you would probably use some kind of

00:10:02,000 --> 00:10:08,079
query language for it cipher

00:10:04,640 --> 00:10:10,320
is very popular it's from neo4j

00:10:08,079 --> 00:10:11,360
it's all right there is a gremlin as

00:10:10,320 --> 00:10:14,160
well

00:10:11,360 --> 00:10:14,959
and actually last year september it was

00:10:14,160 --> 00:10:18,160
proposed

00:10:14,959 --> 00:10:21,839
to go with gql which is

00:10:18,160 --> 00:10:24,240
actually a standard what this should be

00:10:21,839 --> 00:10:25,920
we'll see for it but i have more happy

00:10:24,240 --> 00:10:28,959
news for you

00:10:25,920 --> 00:10:30,480
the graphql actually is gained as a

00:10:28,959 --> 00:10:33,839
really standard language for

00:10:30,480 --> 00:10:37,519
current databases if you take a d graph

00:10:33,839 --> 00:10:40,959
it actually utilizes graphql so that's

00:10:37,519 --> 00:10:43,519
good news so why graphs

00:10:40,959 --> 00:10:46,160
if i would ask you to create some kind

00:10:43,519 --> 00:10:47,680
of system or some thinking process there

00:10:46,160 --> 00:10:50,880
is a good chance that you

00:10:47,680 --> 00:10:51,440
go ahead and start drawing umls or mind

00:10:50,880 --> 00:10:53,519
maps

00:10:51,440 --> 00:10:54,640
or whiteboards and most of the time

00:10:53,519 --> 00:10:56,800
they're probably going to be looking

00:10:54,640 --> 00:10:59,120
some like graphs to you

00:10:56,800 --> 00:11:01,200
which is exactly how thinking process

00:10:59,120 --> 00:11:03,600
it's natural

00:11:01,200 --> 00:11:06,480
so with this in mind allow me to do some

00:11:03,600 --> 00:11:06,480
small demo for you

00:11:06,560 --> 00:11:10,240
this is something specific for our

00:11:08,560 --> 00:11:12,480
system at use

00:11:10,240 --> 00:11:14,800
but i i think you're going to be like

00:11:12,480 --> 00:11:17,600
really easy with it

00:11:14,800 --> 00:11:18,560
uh we would like to select some room

00:11:17,600 --> 00:11:21,440
with name

00:11:18,560 --> 00:11:22,480
701 and if you look at it this is cipher

00:11:21,440 --> 00:11:25,760
query

00:11:22,480 --> 00:11:26,320
but if you transfer translate it to sql

00:11:25,760 --> 00:11:27,839
language

00:11:26,320 --> 00:11:31,279
it's something like that it's not too

00:11:27,839 --> 00:11:34,320
complicated let's run it

00:11:31,279 --> 00:11:37,200
okay i just got some results

00:11:34,320 --> 00:11:37,600
some kind of room here so if i click on

00:11:37,200 --> 00:11:41,040
it

00:11:37,600 --> 00:11:42,160
that's a room just a specific our system

00:11:41,040 --> 00:11:43,920
it's also resource

00:11:42,160 --> 00:11:46,240
because we believe that room is a

00:11:43,920 --> 00:11:48,079
resource of the hotel

00:11:46,240 --> 00:11:49,920
and you can see some properties over

00:11:48,079 --> 00:11:52,000
here as well now

00:11:49,920 --> 00:11:53,600
let's just forget that we are like

00:11:52,000 --> 00:11:56,639
computer scientists

00:11:53,600 --> 00:11:59,600
all of this we just playing again here

00:11:56,639 --> 00:12:01,279
if i double click on this note wow some

00:11:59,600 --> 00:12:03,279
new stuff pops up

00:12:01,279 --> 00:12:05,519
we can actually traverse graph without

00:12:03,279 --> 00:12:06,959
any knowledge of coding whatsoever we're

00:12:05,519 --> 00:12:09,760
just playing the game

00:12:06,959 --> 00:12:11,040
and we can see that this perfect hotel

00:12:09,760 --> 00:12:12,160
and this room they have some

00:12:11,040 --> 00:12:14,240
relationship between

00:12:12,160 --> 00:12:16,639
each other and it's actually a room

00:12:14,240 --> 00:12:19,279
belongs to this hotel

00:12:16,639 --> 00:12:20,720
it's good but we also have an order

00:12:19,279 --> 00:12:23,680
connected to this room

00:12:20,720 --> 00:12:24,000
let's click on it whoa some more new

00:12:23,680 --> 00:12:27,360
stuff

00:12:24,000 --> 00:12:30,720
comes up it's actually a reservation

00:12:27,360 --> 00:12:33,839
and it has some people attached to it

00:12:30,720 --> 00:12:36,959
so we have like this good friend of us

00:12:33,839 --> 00:12:40,320
we have a person who made a reservation

00:12:36,959 --> 00:12:42,880
and we have some companions so

00:12:40,320 --> 00:12:43,839
it's really easy it's interesting and

00:12:42,880 --> 00:12:46,480
it's fun

00:12:43,839 --> 00:12:47,519
we can go ahead and see all the way so

00:12:46,480 --> 00:12:50,480
here's the bill

00:12:47,519 --> 00:12:51,600
this bill has a payment payment is

00:12:50,480 --> 00:12:54,800
processed

00:12:51,600 --> 00:12:56,720
and it processed with this payment card

00:12:54,800 --> 00:12:57,839
and if you click on the payment card as

00:12:56,720 --> 00:12:59,600
well what we see

00:12:57,839 --> 00:13:00,880
is that this payment card connected to

00:12:59,600 --> 00:13:02,720
the worker

00:13:00,880 --> 00:13:04,399
now remember i've been talking about

00:13:02,720 --> 00:13:07,519
fraud detection

00:13:04,399 --> 00:13:11,279
imagine if this order would have somehow

00:13:07,519 --> 00:13:13,120
really strange total well

00:13:11,279 --> 00:13:14,480
even without technical knowledge we will

00:13:13,120 --> 00:13:16,959
be able to traverse

00:13:14,480 --> 00:13:18,839
this order to the person who works at

00:13:16,959 --> 00:13:22,560
this hotel

00:13:18,839 --> 00:13:23,120
aha so this is interesting and we can

00:13:22,560 --> 00:13:26,480
actually

00:13:23,120 --> 00:13:29,760
action on it but let's not do that

00:13:26,480 --> 00:13:29,760
let's do some other example

00:13:29,920 --> 00:13:33,040
i know that it's like scary times right

00:13:32,480 --> 00:13:35,600
now

00:13:33,040 --> 00:13:37,440
but that's also specific to our industry

00:13:35,600 --> 00:13:40,720
and the world in general

00:13:37,440 --> 00:13:44,240
let's try to find out if our

00:13:40,720 --> 00:13:46,079
friend john over here has somebody who

00:13:44,240 --> 00:13:47,440
is connected to corona or is infected

00:13:46,079 --> 00:13:50,560
with corona

00:13:47,440 --> 00:13:53,760
let's try it so to do that i have

00:13:50,560 --> 00:13:53,760
another query prepared

00:13:54,399 --> 00:13:59,760
it's really simple if you just read it

00:13:56,160 --> 00:14:03,120
out loud so i'm looking for the path

00:13:59,760 --> 00:14:05,360
from customer which is our

00:14:03,120 --> 00:14:07,839
friend john over here that's his email

00:14:05,360 --> 00:14:10,880
so i just find the person by email

00:14:07,839 --> 00:14:13,600
and i just go ahead and say

00:14:10,880 --> 00:14:14,320
whatever the relationships between like

00:14:13,600 --> 00:14:17,040
this

00:14:14,320 --> 00:14:17,600
node and this node i don't care if

00:14:17,040 --> 00:14:21,600
they're just

00:14:17,600 --> 00:14:23,760
up to four whatever it can be

00:14:21,600 --> 00:14:25,600
and here's we have infection which is

00:14:23,760 --> 00:14:26,959
copied

00:14:25,600 --> 00:14:28,720
and we would like to find this path

00:14:26,959 --> 00:14:31,760
let's try it

00:14:28,720 --> 00:14:36,079
so i'll just run this query and

00:14:31,760 --> 00:14:38,480
let's see okay we found something

00:14:36,079 --> 00:14:39,920
so this is our friend he has a

00:14:38,480 --> 00:14:42,880
reservation with

00:14:39,920 --> 00:14:45,600
a companion and companion is actually

00:14:42,880 --> 00:14:48,000
infected with covet oh that's scary

00:14:45,600 --> 00:14:50,320
but if you look at this relationship we

00:14:48,000 --> 00:14:52,000
can see that it actually was created

00:14:50,320 --> 00:14:54,079
actually several months ago so it might

00:14:52,000 --> 00:14:57,360
be not even relevant anymore

00:14:54,079 --> 00:14:58,000
we should not be so afraid though but we

00:14:57,360 --> 00:15:01,760
can go

00:14:58,000 --> 00:15:04,880
somewhere deeper what if we try

00:15:01,760 --> 00:15:04,880
to do something like that

00:15:05,040 --> 00:15:09,360
first of all what we do is that we also

00:15:07,680 --> 00:15:10,399
find this infection and we find this

00:15:09,360 --> 00:15:13,440
connection

00:15:10,399 --> 00:15:17,519
but we specify that it's up to

00:15:13,440 --> 00:15:19,680
seven hops and we also say that the

00:15:17,519 --> 00:15:20,880
uh infection period was somewhere

00:15:19,680 --> 00:15:24,839
between

00:15:20,880 --> 00:15:26,639
uh 7th of september and 24th of

00:15:24,839 --> 00:15:29,759
september

00:15:26,639 --> 00:15:33,199
let's try to see what happens

00:15:29,759 --> 00:15:34,000
okay we found something so we see that

00:15:33,199 --> 00:15:36,240
our friend

00:15:34,000 --> 00:15:37,680
over here has a reservation with a

00:15:36,240 --> 00:15:40,959
friend

00:15:37,680 --> 00:15:42,240
who visited a restaurant by the way if

00:15:40,959 --> 00:15:44,240
you're gonna be in prague i highly

00:15:42,240 --> 00:15:47,279
recommend this hanabi restaurant

00:15:44,240 --> 00:15:50,240
called sushi there and there is another

00:15:47,279 --> 00:15:52,880
person who visited this restaurant

00:15:50,240 --> 00:15:54,959
and he lives with someone who is

00:15:52,880 --> 00:15:56,720
infected with this corona

00:15:54,959 --> 00:15:58,959
and the infection happened 11th of

00:15:56,720 --> 00:16:01,040
september

00:15:58,959 --> 00:16:02,959
like it's sad news but at the same time

00:16:01,040 --> 00:16:05,600
we can action on it and even warn

00:16:02,959 --> 00:16:07,440
someone or we can say that this room has

00:16:05,600 --> 00:16:09,440
uh has to have a

00:16:07,440 --> 00:16:11,360
more thorough cleaning so this is

00:16:09,440 --> 00:16:14,240
something we can action on

00:16:11,360 --> 00:16:14,639
and what i wanted to stress out over

00:16:14,240 --> 00:16:18,079
here

00:16:14,639 --> 00:16:21,199
is that this query over here

00:16:18,079 --> 00:16:24,720
does not specify every relationships

00:16:21,199 --> 00:16:25,920
and it just really performed in terms of

00:16:24,720 --> 00:16:27,360
hopping around

00:16:25,920 --> 00:16:29,199
it's something really hard to do with

00:16:27,360 --> 00:16:30,800
sql or actually i would say it's

00:16:29,199 --> 00:16:34,160
impossible

00:16:30,800 --> 00:16:37,839
so that's where graphs shine so let's go

00:16:34,160 --> 00:16:37,839
back to our presentation over here

00:16:37,920 --> 00:16:42,800
there are a lot of myths about graph

00:16:40,079 --> 00:16:42,800
databases

00:16:43,519 --> 00:16:48,160
the most usual one the graphs are really

00:16:46,800 --> 00:16:51,519
slow to write to

00:16:48,160 --> 00:16:54,720
and that's really strange but i tried

00:16:51,519 --> 00:16:57,759
to write a hundred thousand

00:16:54,720 --> 00:17:00,880
random users into database

00:16:57,759 --> 00:17:05,199
it took me like 15 seconds on graph

00:17:00,880 --> 00:17:06,880
neo4j actually and 24 seconds on sql

00:17:05,199 --> 00:17:09,280
it proves absolutely nothing we're just

00:17:06,880 --> 00:17:12,000
comparing oranges to apples and

00:17:09,280 --> 00:17:13,199
it's just two different things but just

00:17:12,000 --> 00:17:17,280
be aware

00:17:13,199 --> 00:17:19,520
the right is actually not not important

00:17:17,280 --> 00:17:20,400
now joint limits that's something i

00:17:19,520 --> 00:17:24,400
often hear

00:17:20,400 --> 00:17:26,000
about people who use graphql because

00:17:24,400 --> 00:17:28,000
people say like don't go too deep into

00:17:26,000 --> 00:17:29,679
relationship and the reason they say

00:17:28,000 --> 00:17:31,679
gondola too deep is actually because of

00:17:29,679 --> 00:17:32,559
sql because sql have to do all these

00:17:31,679 --> 00:17:34,559
joints

00:17:32,559 --> 00:17:36,640
in graphs as we've just seen it's

00:17:34,559 --> 00:17:38,640
actually really natural to traverse

00:17:36,640 --> 00:17:40,880
all these relationships it can do it

00:17:38,640 --> 00:17:43,600
pretty fast

00:17:40,880 --> 00:17:44,840
so that's another myth but if you like

00:17:43,600 --> 00:17:46,960
to compare

00:17:44,840 --> 00:17:48,720
things graphs are really good with

00:17:46,960 --> 00:17:51,039
connected data

00:17:48,720 --> 00:17:51,760
and in an obvious relationship as you

00:17:51,039 --> 00:17:54,720
would like to do

00:17:51,760 --> 00:17:56,720
this example before or if you would go

00:17:54,720 --> 00:18:00,000
to some

00:17:56,720 --> 00:18:02,400
pro detection it's also really good in

00:18:00,000 --> 00:18:03,520
a path of three traversal as you can see

00:18:02,400 --> 00:18:07,039
but if you're talking about

00:18:03,520 --> 00:18:09,520
sql and low connected data it wins

00:18:07,039 --> 00:18:11,679
if it's strict relationships it wins if

00:18:09,520 --> 00:18:14,960
it's flood structure it wins

00:18:11,679 --> 00:18:15,520
so we have to understand too and if you

00:18:14,960 --> 00:18:18,559
like to

00:18:15,520 --> 00:18:21,440
get some shiny slide to put so

00:18:18,559 --> 00:18:23,760
graphql has minuses as well of course

00:18:21,440 --> 00:18:25,919
it's not very popular

00:18:23,760 --> 00:18:29,039
while sql you can probably find it on

00:18:25,919 --> 00:18:31,840
any any shared hosting whatsoever

00:18:29,039 --> 00:18:33,520
grab the database actually provides that

00:18:31,840 --> 00:18:34,960
a deduplication

00:18:33,520 --> 00:18:36,559
where you don't have to create several

00:18:34,960 --> 00:18:37,520
instances of thing just to make things

00:18:36,559 --> 00:18:39,200
faster

00:18:37,520 --> 00:18:42,480
you can actually create single node and

00:18:39,200 --> 00:18:45,280
it has multiple labels while in

00:18:42,480 --> 00:18:47,679
sql you have to duplicate data sometimes

00:18:45,280 --> 00:18:50,320
so that there is no joins

00:18:47,679 --> 00:18:50,880
and if you ask me how would i use it

00:18:50,320 --> 00:18:53,600
well

00:18:50,880 --> 00:18:54,960
i would use graphs in my social network

00:18:53,600 --> 00:18:58,080
but i totally

00:18:54,960 --> 00:19:00,720
would use sql for my bank account

00:18:58,080 --> 00:19:02,480
so thank you so much i hope you enjoyed

00:19:00,720 --> 00:19:04,720
it if you have any questions

00:19:02,480 --> 00:19:06,559
help fire away or you can ask them

00:19:04,720 --> 00:19:09,120
directly on my twitter

00:19:06,559 --> 00:19:10,080
as well i recommend to join news devs

00:19:09,120 --> 00:19:12,400
twitter

00:19:10,080 --> 00:19:13,919
there is a lot of cool articles people

00:19:12,400 --> 00:19:16,400
are really good there

00:19:13,919 --> 00:19:18,400
and the most important part go ahead and

00:19:16,400 --> 00:19:20,880
try graphs yourself

00:19:18,400 --> 00:19:22,000
it's really easy just search for neo4j

00:19:20,880 --> 00:19:24,080
or dgraph

00:19:22,000 --> 00:19:26,160
they're both good neo4j is a bit more

00:19:24,080 --> 00:19:27,520
academical while the graph is a bit more

00:19:26,160 --> 00:19:30,400
practical

00:19:27,520 --> 00:19:33,039
but you can have a feel above them so

00:19:30,400 --> 00:19:33,039
thank you so much

00:19:36,880 --> 00:19:40,080
thank you thank you alexander very much

00:19:38,799 --> 00:19:41,360
for your presentation was really

00:19:40,080 --> 00:19:43,760
insightful

00:19:41,360 --> 00:19:44,559
uh i don't think that we have any

00:19:43,760 --> 00:19:47,679
questions

00:19:44,559 --> 00:19:50,400
in the in the chat uh but i

00:19:47,679 --> 00:19:51,600
would have a few by myself if you allow

00:19:50,400 --> 00:19:54,960
absolutely the

00:19:51,600 --> 00:19:56,880
the first is that uh

00:19:54,960 --> 00:19:58,880
i'm pre i'm pretty used to just

00:19:56,880 --> 00:20:01,919
traversing the the data or

00:19:58,880 --> 00:20:03,600
some visualization of data in the sql

00:20:01,919 --> 00:20:05,679
that's pretty straightforward you have

00:20:03,600 --> 00:20:08,240
just a bunch of tables

00:20:05,679 --> 00:20:09,120
you can imagine it like an excel and you

00:20:08,240 --> 00:20:11,600
just browse

00:20:09,120 --> 00:20:13,200
data there maybe maybe do some

00:20:11,600 --> 00:20:16,320
aggregations or something

00:20:13,200 --> 00:20:19,520
or some functions over over the rows

00:20:16,320 --> 00:20:21,280
and that that can be pretty simple or

00:20:19,520 --> 00:20:24,559
it's something that i'm used to

00:20:21,280 --> 00:20:26,000
uh how do you just visualize and maybe

00:20:24,559 --> 00:20:28,400
traverse data in this

00:20:26,000 --> 00:20:30,400
graph databases because from my point of

00:20:28,400 --> 00:20:33,520
view it currently seems like

00:20:30,400 --> 00:20:37,039
that something which is

00:20:33,520 --> 00:20:39,679
maybe moderately populated uh

00:20:37,039 --> 00:20:41,520
a database with a lot of relationships

00:20:39,679 --> 00:20:44,480
maybe a a

00:20:41,520 --> 00:20:45,200
a little messy because for example i had

00:20:44,480 --> 00:20:48,720
the

00:20:45,200 --> 00:20:52,720
i i had this uh this javascript

00:20:48,720 --> 00:20:54,799
bundle which i try to do or maybe better

00:20:52,720 --> 00:20:56,320
i try to visualize the relationships

00:20:54,799 --> 00:21:00,159
between my files

00:20:56,320 --> 00:21:03,760
in the javascript project who is import

00:21:00,159 --> 00:21:06,880
importing what so so-so and this

00:21:03,760 --> 00:21:07,919
even for a moderately big project was a

00:21:06,880 --> 00:21:10,559
little messy

00:21:07,919 --> 00:21:11,919
like my computer was burning absolutely

00:21:10,559 --> 00:21:14,320
if i tried to zoom in

00:21:11,919 --> 00:21:15,679
on some specific relationship or some

00:21:14,320 --> 00:21:18,080
specific subgraph

00:21:15,679 --> 00:21:19,440
so do you have experience with this is

00:21:18,080 --> 00:21:23,360
there some some

00:21:19,440 --> 00:21:25,360
good way to to do this uh

00:21:23,360 --> 00:21:27,039
well that's that's really really good

00:21:25,360 --> 00:21:28,960
example um

00:21:27,039 --> 00:21:30,720
first of all what you've just seen is a

00:21:28,960 --> 00:21:33,120
native

00:21:30,720 --> 00:21:34,799
browser for neo4j and it's actually

00:21:33,120 --> 00:21:36,960
pretty performant i have to say

00:21:34,799 --> 00:21:38,000
i think it utilizes d3 if i'm not

00:21:36,960 --> 00:21:41,120
mistaken

00:21:38,000 --> 00:21:44,799
but it's quite all right

00:21:41,120 --> 00:21:46,799
like i didn't try such issue whatsoever

00:21:44,799 --> 00:21:49,120
but what i tried is when i have like a

00:21:46,799 --> 00:21:51,120
lot of data it's of course to filter it

00:21:49,120 --> 00:21:53,280
and it's possible to hide some things

00:21:51,120 --> 00:21:54,240
because it's just visually impossible to

00:21:53,280 --> 00:21:57,440
get everything

00:21:54,240 --> 00:21:59,440
by yourself and one thing

00:21:57,440 --> 00:22:00,480
is possible of course to return what you

00:21:59,440 --> 00:22:02,799
need to see

00:22:00,480 --> 00:22:04,240
and another thing that i didn't show

00:22:02,799 --> 00:22:05,440
here because usually it's not so

00:22:04,240 --> 00:22:09,120
impressive for people

00:22:05,440 --> 00:22:11,280
but uh in neo4j you can actually display

00:22:09,120 --> 00:22:12,720
data in different ways you can display

00:22:11,280 --> 00:22:14,000
it as graphs you can display it as

00:22:12,720 --> 00:22:18,640
tables and even can

00:22:14,000 --> 00:22:22,159
display it as raw data which is scary

00:22:18,640 --> 00:22:23,360
but think about your question i think

00:22:22,159 --> 00:22:24,159
it's going to be really hard to

00:22:23,360 --> 00:22:27,039
visualize

00:22:24,159 --> 00:22:28,559
like file structure easily there it's

00:22:27,039 --> 00:22:31,840
going to be really messy

00:22:28,559 --> 00:22:35,600
and i think somebody even done this uh

00:22:31,840 --> 00:22:38,799
3d space these graphs and notes

00:22:35,600 --> 00:22:40,640
going all minority report there which is

00:22:38,799 --> 00:22:43,760
actually amazing this vr

00:22:40,640 --> 00:22:46,880
so that's something you can try

00:22:43,760 --> 00:22:49,520
yeah yeah because uh the the relation

00:22:46,880 --> 00:22:50,080
relational database or the the simple

00:22:49,520 --> 00:22:52,960
table

00:22:50,080 --> 00:22:54,240
is is by definition it's just to

00:22:52,960 --> 00:22:57,440
two-dimensional

00:22:54,240 --> 00:22:58,000
uh but but these graphs i can definitely

00:22:57,440 --> 00:23:01,039
image

00:22:58,000 --> 00:23:04,880
imagine this going 3d or or even

00:23:01,039 --> 00:23:07,600
even something something more

00:23:04,880 --> 00:23:08,320
totally something more expressive than

00:23:07,600 --> 00:23:11,360
just

00:23:08,320 --> 00:23:13,919
looking at uh like it's plotted

00:23:11,360 --> 00:23:14,799
on the on the on the plane and you just

00:23:13,919 --> 00:23:17,520
have to zoom in

00:23:14,799 --> 00:23:18,880
and look at all the arrows just going

00:23:17,520 --> 00:23:23,039
one through the other

00:23:18,880 --> 00:23:26,320
and and just couldn't make the sense

00:23:23,039 --> 00:23:28,720
out of it i can imagine like like you

00:23:26,320 --> 00:23:30,400
can grab your files and delete them

00:23:28,720 --> 00:23:32,080
there is a virtual trash you just put

00:23:30,400 --> 00:23:34,960
there yeah

00:23:32,080 --> 00:23:36,880
yeah yeah that's it we have one question

00:23:34,960 --> 00:23:40,320
from the audience and that's a

00:23:36,880 --> 00:23:43,840
technical one uh does neo neo4j

00:23:40,320 --> 00:23:46,080
support uh gql

00:23:43,840 --> 00:23:46,960
actually i'm not sure that gql is

00:23:46,080 --> 00:23:50,080
actually yet

00:23:46,960 --> 00:23:52,000
uh ready so

00:23:50,080 --> 00:23:54,159
i don't think it at this moment does

00:23:52,000 --> 00:23:56,480
support it so there is no agreement

00:23:54,159 --> 00:23:57,679
at the point how it's going to be they

00:23:56,480 --> 00:23:59,440
do try it and

00:23:57,679 --> 00:24:01,760
recently they actually published a post

00:23:59,440 --> 00:24:04,559
that they they tried to cooperate on it

00:24:01,760 --> 00:24:04,880
i'm not sure it is off yet but if you

00:24:04,559 --> 00:24:07,919
say

00:24:04,880 --> 00:24:10,240
gql in terms of gql as standard uh

00:24:07,919 --> 00:24:11,360
graph language or you'd say in gql's

00:24:10,240 --> 00:24:14,240
graphql

00:24:11,360 --> 00:24:16,640
because i would say that that this is

00:24:14,240 --> 00:24:17,200
meant as a gql as the standard you

00:24:16,640 --> 00:24:19,679
mentioned

00:24:17,200 --> 00:24:20,720
as i understand it from this question

00:24:19,679 --> 00:24:23,919
because yeah

00:24:20,720 --> 00:24:27,360
i think gql is not out yet

00:24:23,919 --> 00:24:29,679
oh okay okay so so this does as far as

00:24:27,360 --> 00:24:29,679
i know

00:24:29,730 --> 00:24:34,960
[Music]

00:24:31,679 --> 00:24:36,240
and there is another one from from the

00:24:34,960 --> 00:24:39,200
same person

00:24:36,240 --> 00:24:40,159
uh and also pretty specific do you know

00:24:39,200 --> 00:24:42,559
how much the d

00:24:40,159 --> 00:24:43,200
graph enterprise package self-hosted

00:24:42,559 --> 00:24:45,840
cost

00:24:43,200 --> 00:24:47,360
or what figures to expect they do not

00:24:45,840 --> 00:24:49,039
list the pricing on their website and

00:24:47,360 --> 00:24:51,360
i'm particularly interested in access

00:24:49,039 --> 00:24:53,600
control list feature

00:24:51,360 --> 00:24:55,520
i'm not aware about that to be honest

00:24:53,600 --> 00:24:57,679
like i bumped into

00:24:55,520 --> 00:24:59,360
the graph quite recently i didn't have

00:24:57,679 --> 00:25:02,320
much experience with them i just

00:24:59,360 --> 00:25:04,960
played it with it a bit most of the time

00:25:02,320 --> 00:25:08,480
i was using neo4j but the graph is

00:25:04,960 --> 00:25:08,480
surely interesting kit on the block

00:25:08,799 --> 00:25:12,640
okay on the next question interesting

00:25:12,159 --> 00:25:15,600
one

00:25:12,640 --> 00:25:16,640
can you enforce some kind of schema in

00:25:15,600 --> 00:25:19,279
neo4j

00:25:16,640 --> 00:25:20,799
or or d graph or are they totally schema

00:25:19,279 --> 00:25:24,000
less like mongodb

00:25:20,799 --> 00:25:26,840
for example they are schemeless so it it

00:25:24,000 --> 00:25:29,760
comes up with all the trade-offs

00:25:26,840 --> 00:25:33,200
yep you're okay uh

00:25:29,760 --> 00:25:33,760
and maybe my last question for you would

00:25:33,200 --> 00:25:37,760
be

00:25:33,760 --> 00:25:41,520
that there is a lot of theory about just

00:25:37,760 --> 00:25:43,679
optimizing your queries in in in sql

00:25:41,520 --> 00:25:45,600
and how to write performance queries and

00:25:43,679 --> 00:25:48,240
also the engines

00:25:45,600 --> 00:25:48,799
like postgresql are heavily optimized

00:25:48,240 --> 00:25:51,760
and doing

00:25:48,799 --> 00:25:52,960
a lot of like magic and heuristics just

00:25:51,760 --> 00:25:56,000
to make it run

00:25:52,960 --> 00:25:59,120
really fast uh

00:25:56,000 --> 00:25:59,600
and uh i can imagine that at least from

00:25:59,120 --> 00:26:03,120
what i

00:25:59,600 --> 00:26:06,159
what i recall from from from college

00:26:03,120 --> 00:26:08,240
is that the just going through the

00:26:06,159 --> 00:26:08,960
graphs or doing some computation over

00:26:08,240 --> 00:26:11,760
graph

00:26:08,960 --> 00:26:12,880
is is not always performant when when we

00:26:11,760 --> 00:26:15,760
are looking at some

00:26:12,880 --> 00:26:17,679
dextra algorithms or or something which

00:26:15,760 --> 00:26:20,000
is done over a graph

00:26:17,679 --> 00:26:21,840
like you can expect some higher time

00:26:20,000 --> 00:26:25,440
complexity or or something

00:26:21,840 --> 00:26:27,440
so is there some some theory or or some

00:26:25,440 --> 00:26:30,159
some comprehensive

00:26:27,440 --> 00:26:30,880
like notion or or book or community

00:26:30,159 --> 00:26:33,760
about

00:26:30,880 --> 00:26:36,159
how to write performant queries over the

00:26:33,760 --> 00:26:37,840
graph databases

00:26:36,159 --> 00:26:39,440
first of all the thing i would totally

00:26:37,840 --> 00:26:42,000
recommend is uh

00:26:39,440 --> 00:26:43,440
most of the time the good uh graph

00:26:42,000 --> 00:26:46,159
structure helps

00:26:43,440 --> 00:26:47,679
that's one thing so you avoid all these

00:26:46,159 --> 00:26:50,720
loops and all of things

00:26:47,679 --> 00:26:52,799
yeah uh other thing is of course um as

00:26:50,720 --> 00:26:55,520
just with sql you can do

00:26:52,799 --> 00:26:56,400
so called um explain and it's going to

00:26:55,520 --> 00:26:58,240
tell you how the

00:26:56,400 --> 00:26:59,440
the graph was traversed and how it was

00:26:58,240 --> 00:27:02,400
working

00:26:59,440 --> 00:27:04,159
uh talking about even algorithms uh

00:27:02,400 --> 00:27:06,720
neo4j community has a

00:27:04,159 --> 00:27:08,720
standard library for algorithms and they

00:27:06,720 --> 00:27:12,080
actually provide exactly the extra

00:27:08,720 --> 00:27:15,279
like uh a lot of them like

00:27:12,080 --> 00:27:16,559
uh all shortest path all of it would be

00:27:15,279 --> 00:27:18,880
just work for you

00:27:16,559 --> 00:27:21,279
out of the box so of course you have to

00:27:18,880 --> 00:27:25,679
understand it but at the same time

00:27:21,279 --> 00:27:25,679
some of things just go for free for you

00:27:26,480 --> 00:27:30,399
okay sounds interesting i would

00:27:28,159 --> 00:27:30,960
definitely dig deeper in some of my free

00:27:30,399 --> 00:27:33,039
time

00:27:30,960 --> 00:27:35,039
uh that was a great inspiration thank

00:27:33,039 --> 00:27:38,080
you again thank you thank you very much

00:27:35,039 --> 00:27:41,440
thank you thanks a lot

00:27:38,080 --> 00:27:45,840
have a great evening oh youtube cheers

00:27:41,440 --> 00:27:49,360
and cheers let's move to our second talk

00:27:45,840 --> 00:27:51,360
by gerard gerard are you here

00:27:49,360 --> 00:27:54,159
hello how are you gerard ready for the

00:27:51,360 --> 00:27:58,240
talk very good very good

00:27:54,159 --> 00:28:00,799
i'm ready so we are all excited so

00:27:58,240 --> 00:28:02,559
i will not delay it any further just go

00:28:00,799 --> 00:28:05,600
ahead the stage is yours

00:28:02,559 --> 00:28:08,080
okay let me share the screen very

00:28:05,600 --> 00:28:08,080
quickly

00:28:12,640 --> 00:28:19,600
all right so here we are

00:28:16,159 --> 00:28:23,279
this is a this is my first talk

00:28:19,600 --> 00:28:25,520
after lockdown so i'm pretty excited

00:28:23,279 --> 00:28:27,120
and we are going to talk about offline

00:28:25,520 --> 00:28:30,240
first and

00:28:27,120 --> 00:28:31,039
also how we can make it easy using

00:28:30,240 --> 00:28:33,600
graphql

00:28:31,039 --> 00:28:34,159
and amplify data store so i'm going to

00:28:33,600 --> 00:28:37,279
introduce

00:28:34,159 --> 00:28:39,840
amplify um during this talk

00:28:37,279 --> 00:28:40,960
and then how amplify uses graphql to

00:28:39,840 --> 00:28:44,000
make this

00:28:40,960 --> 00:28:47,679
possible so let's let's start

00:28:44,000 --> 00:28:47,679
with a little bit of an intro

00:28:48,880 --> 00:28:55,039
[Music]

00:28:50,559 --> 00:28:55,919
okay all right so i like to i like to

00:28:55,039 --> 00:28:58,960
start my

00:28:55,919 --> 00:29:02,399
my talks making sure that everyone

00:28:58,960 --> 00:29:05,679
knows who i am so this is uh my name

00:29:02,399 --> 00:29:09,440
uh gerard sans and i've been

00:29:05,679 --> 00:29:12,799
doing talks for quite a while now i'm

00:29:09,440 --> 00:29:16,000
a developer advocate at aws

00:29:12,799 --> 00:29:16,640
and you can see here some pictures with

00:29:16,000 --> 00:29:19,840
uh

00:29:16,640 --> 00:29:22,880
with percy also you can see my

00:29:19,840 --> 00:29:25,679
my cap santa cruz cap

00:29:22,880 --> 00:29:28,080
and some of the places that i've been i

00:29:25,679 --> 00:29:31,679
mean of course this was before

00:29:28,080 --> 00:29:34,799
before you know uh copy it but

00:29:31,679 --> 00:29:37,600
yeah i i think i was very lucky to do

00:29:34,799 --> 00:29:38,399
all this traveling before before that of

00:29:37,600 --> 00:29:41,200
course

00:29:38,399 --> 00:29:42,159
whenever everything resumes i will try

00:29:41,200 --> 00:29:45,440
to get back

00:29:42,159 --> 00:29:46,480
on uh on my travels but let's get

00:29:45,440 --> 00:29:50,240
started

00:29:46,480 --> 00:29:53,039
so what what does it mean offline first

00:29:50,240 --> 00:29:55,600
and i want to cover this because a lot

00:29:53,039 --> 00:29:55,919
of uh i think a lot of web developers

00:29:55,600 --> 00:29:58,399
they

00:29:55,919 --> 00:29:59,039
don't they don't really understand what

00:29:58,399 --> 00:30:02,240
means

00:29:59,039 --> 00:30:04,240
offline because i mean web is online no

00:30:02,240 --> 00:30:06,320
i mean it's a little bit confusing

00:30:04,240 --> 00:30:08,240
so what what do i mean with offline

00:30:06,320 --> 00:30:11,440
first well let's start

00:30:08,240 --> 00:30:14,000
with this i don't know if you

00:30:11,440 --> 00:30:14,960
if you have ever tried so whenever you

00:30:14,000 --> 00:30:18,559
are offline

00:30:14,960 --> 00:30:21,039
and you get the dinosaur in uh in chrome

00:30:18,559 --> 00:30:21,679
you can actually you can actually play a

00:30:21,039 --> 00:30:23,679
game

00:30:21,679 --> 00:30:25,039
and you can see the dinosaur i mean you

00:30:23,679 --> 00:30:27,840
can use the spacebar

00:30:25,039 --> 00:30:29,360
and just you know try try to beat the

00:30:27,840 --> 00:30:32,320
score

00:30:29,360 --> 00:30:33,120
i mean this is this is fine and and

00:30:32,320 --> 00:30:36,399
funny but

00:30:33,120 --> 00:30:38,720
if i want to if i want to access my app

00:30:36,399 --> 00:30:39,920
i want to see my app i don't want to see

00:30:38,720 --> 00:30:41,360
a game

00:30:39,920 --> 00:30:43,120
[Music]

00:30:41,360 --> 00:30:46,080
so that's that's not really a good

00:30:43,120 --> 00:30:46,080
experience is it

00:30:46,960 --> 00:30:52,559
so what means offline first for web well

00:30:50,240 --> 00:30:53,840
the first thing is that we don't want to

00:30:52,559 --> 00:30:56,399
get the dinosaur

00:30:53,840 --> 00:30:58,240
i mean we want to be offline ready and

00:30:56,399 --> 00:31:01,039
we want our users to be

00:30:58,240 --> 00:31:03,200
able to use their app so that will be

00:31:01,039 --> 00:31:06,720
the first

00:31:03,200 --> 00:31:09,679
the next thing is provide a great

00:31:06,720 --> 00:31:10,399
a great user experience and that means

00:31:09,679 --> 00:31:13,120
that

00:31:10,399 --> 00:31:15,440
for all the life cycle of the app we

00:31:13,120 --> 00:31:17,120
want to provide the best user experience

00:31:15,440 --> 00:31:20,159
we don't want the user to be

00:31:17,120 --> 00:31:22,240
going through pop-ups or be granting

00:31:20,159 --> 00:31:25,919
access to different areas i mean we

00:31:22,240 --> 00:31:29,279
we just want to simply simply

00:31:25,919 --> 00:31:34,000
transition from online to offline and

00:31:29,279 --> 00:31:37,360
from offline to online and the user just

00:31:34,000 --> 00:31:39,440
can use the app without having to think

00:31:37,360 --> 00:31:42,080
about it too much

00:31:39,440 --> 00:31:44,000
and of course one of the first things

00:31:42,080 --> 00:31:47,279
that you will think about

00:31:44,000 --> 00:31:49,519
when you are offline is

00:31:47,279 --> 00:31:50,559
what happens with the data i mean if i'm

00:31:49,519 --> 00:31:53,679
if i'm using

00:31:50,559 --> 00:31:54,399
you know some app that has no data like

00:31:53,679 --> 00:31:57,279
a game

00:31:54,399 --> 00:31:58,480
i can i can play the game but maybe i

00:31:57,279 --> 00:32:01,279
want to store

00:31:58,480 --> 00:32:02,960
the score so i will need some some way

00:32:01,279 --> 00:32:06,640
to store that data

00:32:02,960 --> 00:32:10,240
and we're going to cover that later on

00:32:06,640 --> 00:32:11,120
we also want to get some native like

00:32:10,240 --> 00:32:14,240
features

00:32:11,120 --> 00:32:15,840
and and this will come with progressive

00:32:14,240 --> 00:32:19,279
web apps we will get a lot

00:32:15,840 --> 00:32:21,760
from from progressive web apps but

00:32:19,279 --> 00:32:23,039
that's also the features that you expect

00:32:21,760 --> 00:32:25,760
when you are using

00:32:23,039 --> 00:32:25,760
your mobile

00:32:27,519 --> 00:32:30,640
and then of course if we are storing

00:32:29,600 --> 00:32:33,279
this data

00:32:30,640 --> 00:32:34,240
while we are offline we want this data

00:32:33,279 --> 00:32:37,200
to

00:32:34,240 --> 00:32:38,240
to be safe we don't we want it to be

00:32:37,200 --> 00:32:40,399
secure

00:32:38,240 --> 00:32:42,399
and we want this data to be shared i

00:32:40,399 --> 00:32:44,880
mean as long as we are offline

00:32:42,399 --> 00:32:45,440
we can store it on the device but as

00:32:44,880 --> 00:32:47,919
long

00:32:45,440 --> 00:32:48,880
as we go online later on we want this

00:32:47,919 --> 00:32:52,080
data to

00:32:48,880 --> 00:32:55,039
transition to to online without

00:32:52,080 --> 00:32:56,159
us having to interact too much with this

00:32:55,039 --> 00:32:59,279
and we just want

00:32:56,159 --> 00:33:00,799
to just use the app and in the

00:32:59,279 --> 00:33:03,360
background this data can

00:33:00,799 --> 00:33:04,159
be then synchronized so that's that's

00:33:03,360 --> 00:33:07,519
more or less

00:33:04,159 --> 00:33:11,200
what i wanted to cover i don't know if

00:33:07,519 --> 00:33:13,919
a lot of you have tried to get

00:33:11,200 --> 00:33:14,480
this working for any of your web apps

00:33:13,919 --> 00:33:16,080
but

00:33:14,480 --> 00:33:17,919
these are some things to take into

00:33:16,080 --> 00:33:21,120
account so yeah

00:33:17,919 --> 00:33:23,679
we are done with the first section

00:33:21,120 --> 00:33:25,039
so you can feel very proud i mean this

00:33:23,679 --> 00:33:28,399
is going to be fun

00:33:25,039 --> 00:33:31,360
i hope for everyone so just

00:33:28,399 --> 00:33:32,720
pat in the back you did great on the

00:33:31,360 --> 00:33:35,360
first section

00:33:32,720 --> 00:33:36,799
if you have any questions just ask me at

00:33:35,360 --> 00:33:38,720
the end

00:33:36,799 --> 00:33:40,320
so let's cover progressive web apps i

00:33:38,720 --> 00:33:43,360
mean we talk about

00:33:40,320 --> 00:33:43,760
these native like features so a lot of

00:33:43,360 --> 00:33:46,799
these

00:33:43,760 --> 00:33:48,880
we will get from progressive web apps

00:33:46,799 --> 00:33:50,640
but what are exactly progressive web

00:33:48,880 --> 00:33:54,240
apps i mean if we put

00:33:50,640 --> 00:33:54,720
in this in these axis capabilities and

00:33:54,240 --> 00:33:57,600
reach

00:33:54,720 --> 00:33:59,360
we have different types of apps first we

00:33:57,600 --> 00:34:02,399
have native applications

00:33:59,360 --> 00:34:03,919
which has the most capabilities but they

00:34:02,399 --> 00:34:07,039
also have some issues

00:34:03,919 --> 00:34:09,280
when you want to use these

00:34:07,039 --> 00:34:11,119
applications in different operative

00:34:09,280 --> 00:34:15,119
systems and devices

00:34:11,119 --> 00:34:17,679
so it's not is not always compatible

00:34:15,119 --> 00:34:18,320
if we build a native app for example for

00:34:17,679 --> 00:34:20,480
android

00:34:18,320 --> 00:34:21,440
it won't work in all devices it will

00:34:20,480 --> 00:34:26,480
only work for

00:34:21,440 --> 00:34:28,639
android so pwa

00:34:26,480 --> 00:34:30,639
applications come more or less in the

00:34:28,639 --> 00:34:33,520
middle they give you

00:34:30,639 --> 00:34:34,399
similar capabilities for the but they

00:34:33,520 --> 00:34:37,760
have

00:34:34,399 --> 00:34:41,200
more reach they can be used in more uh

00:34:37,760 --> 00:34:43,200
places and devices which makes them

00:34:41,200 --> 00:34:45,679
really interesting

00:34:43,200 --> 00:34:47,119
and then finally we have web or single

00:34:45,679 --> 00:34:50,159
page applications

00:34:47,119 --> 00:34:51,200
which is probably what we are use more

00:34:50,159 --> 00:34:54,320
used

00:34:51,200 --> 00:34:55,520
really so these are a little bit of the

00:34:54,320 --> 00:34:57,359
different options

00:34:55,520 --> 00:35:00,560
and we are going to look into the middle

00:34:57,359 --> 00:35:02,160
one the progressive web apps

00:35:00,560 --> 00:35:03,760
so what are the core requirements for

00:35:02,160 --> 00:35:06,880
progressive web apps

00:35:03,760 --> 00:35:11,119
well the first one is security and

00:35:06,880 --> 00:35:15,119
progressive web apps uh only work

00:35:11,119 --> 00:35:18,000
when using https and the main reason is

00:35:15,119 --> 00:35:19,119
because we have this data stored in the

00:35:18,000 --> 00:35:22,079
device

00:35:19,119 --> 00:35:23,359
we want to be sure that this data is

00:35:22,079 --> 00:35:25,839
securely transferred

00:35:23,359 --> 00:35:26,800
we don't want anyone to be looking at

00:35:25,839 --> 00:35:29,119
this data or

00:35:26,800 --> 00:35:30,880
tampering with this data another thing

00:35:29,119 --> 00:35:33,200
is that we don't want

00:35:30,880 --> 00:35:34,560
to store any code that could be

00:35:33,200 --> 00:35:37,520
malicious

00:35:34,560 --> 00:35:38,720
when we are using pwas we are going to

00:35:37,520 --> 00:35:41,359
install

00:35:38,720 --> 00:35:41,839
some assets some javascript and some

00:35:41,359 --> 00:35:43,839
other

00:35:41,839 --> 00:35:45,680
resources and we want to make sure that

00:35:43,839 --> 00:35:48,800
these resources are safe

00:35:45,680 --> 00:35:50,560
so we need this channel and needs to be

00:35:48,800 --> 00:35:52,240
secure

00:35:50,560 --> 00:35:53,839
the next thing is we are going to be

00:35:52,240 --> 00:35:56,960
using what is called

00:35:53,839 --> 00:35:58,480
a service worker and the service worker

00:35:56,960 --> 00:36:01,440
is mainly going to give us

00:35:58,480 --> 00:36:02,800
offline so all of these offline features

00:36:01,440 --> 00:36:04,720
we are going to get

00:36:02,800 --> 00:36:06,400
mostly from the service worker and i'm

00:36:04,720 --> 00:36:10,079
going to cover this a little bit

00:36:06,400 --> 00:36:12,640
uh more later the next thing that i want

00:36:10,079 --> 00:36:15,680
to talk is about the web

00:36:12,640 --> 00:36:17,119
app manifest and this is how the

00:36:15,680 --> 00:36:20,320
application

00:36:17,119 --> 00:36:21,040
will be themed and will be configured to

00:36:20,320 --> 00:36:23,040
be

00:36:21,040 --> 00:36:24,079
used as an application in different

00:36:23,040 --> 00:36:26,960
devices

00:36:24,079 --> 00:36:27,760
so for example when we are installing

00:36:26,960 --> 00:36:31,280
our

00:36:27,760 --> 00:36:34,320
pwa app in the desktop it will

00:36:31,280 --> 00:36:37,119
tell uh by using the manifest

00:36:34,320 --> 00:36:38,000
how this application will look like to

00:36:37,119 --> 00:36:40,480
the user

00:36:38,000 --> 00:36:41,520
and this is the same for example if we

00:36:40,480 --> 00:36:45,280
are using

00:36:41,520 --> 00:36:47,599
uh ios uh phone

00:36:45,280 --> 00:36:49,839
and that's gonna give us the

00:36:47,599 --> 00:36:52,480
configuration for that specific

00:36:49,839 --> 00:36:52,480
device

00:36:53,760 --> 00:37:00,560
so how the service worker help us online

00:36:57,359 --> 00:37:01,520
so let's see how that would work imagine

00:37:00,560 --> 00:37:03,760
we have our

00:37:01,520 --> 00:37:05,440
single page application we have this

00:37:03,760 --> 00:37:08,560
index html

00:37:05,440 --> 00:37:11,599
page and in our browser we are

00:37:08,560 --> 00:37:12,960
going to request that page one thing

00:37:11,599 --> 00:37:14,880
that we have now

00:37:12,960 --> 00:37:16,640
when using a service worker is it's

00:37:14,880 --> 00:37:19,680
gonna be sitting

00:37:16,640 --> 00:37:22,240
in the middle so when i request

00:37:19,680 --> 00:37:23,119
for example the code for the app and

00:37:22,240 --> 00:37:25,200
some

00:37:23,119 --> 00:37:27,359
image it will go through the service

00:37:25,200 --> 00:37:28,079
worker and the service worker is going

00:37:27,359 --> 00:37:30,560
to

00:37:28,079 --> 00:37:32,480
look at these requests and then make

00:37:30,560 --> 00:37:35,680
some actions

00:37:32,480 --> 00:37:36,960
in this instance because it's the first

00:37:35,680 --> 00:37:40,400
time that i'm going to

00:37:36,960 --> 00:37:42,720
request this single page application

00:37:40,400 --> 00:37:43,599
it's going to let this request go

00:37:42,720 --> 00:37:45,680
through

00:37:43,599 --> 00:37:46,720
but it's also going to do a very smart

00:37:45,680 --> 00:37:50,960
thing

00:37:46,720 --> 00:37:54,079
it's going to catch these assets on

00:37:50,960 --> 00:37:57,839
the device cache and this will change

00:37:54,079 --> 00:38:00,800
depending on where this pwa is

00:37:57,839 --> 00:38:01,920
executing but it's going to store these

00:38:00,800 --> 00:38:05,599
files

00:38:01,920 --> 00:38:08,480
and the next time is gonna

00:38:05,599 --> 00:38:09,040
request these resources is gonna use the

00:38:08,480 --> 00:38:12,320
catch

00:38:09,040 --> 00:38:14,880
but we got these assets

00:38:12,320 --> 00:38:16,079
now going back to the browser this is

00:38:14,880 --> 00:38:18,160
the last step

00:38:16,079 --> 00:38:19,359
so this is how the service worker has

00:38:18,160 --> 00:38:21,520
been uh

00:38:19,359 --> 00:38:23,359
helping us in that so let's move to

00:38:21,520 --> 00:38:24,560
another scenario

00:38:23,359 --> 00:38:27,040
and this is probably the most

00:38:24,560 --> 00:38:30,240
interesting for the service worker

00:38:27,040 --> 00:38:31,599
so now we are offline we just go offline

00:38:30,240 --> 00:38:34,880
it could be you know you could

00:38:31,599 --> 00:38:35,520
turn the wi-fi on your desktop you could

00:38:34,880 --> 00:38:38,320
also be

00:38:35,520 --> 00:38:39,599
using your mobile uh maybe you're going

00:38:38,320 --> 00:38:42,720
into the underground

00:38:39,599 --> 00:38:43,760
so you are now offline and for some

00:38:42,720 --> 00:38:47,359
reason

00:38:43,760 --> 00:38:48,960
you hit refresh i mean why why would you

00:38:47,359 --> 00:38:49,680
hit refresh when you are in the

00:38:48,960 --> 00:38:52,880
underground

00:38:49,680 --> 00:38:55,599
on a web application well that's where

00:38:52,880 --> 00:38:59,119
the service worker is going to help you

00:38:55,599 --> 00:39:02,079
so you hit refresh you are very daring

00:38:59,119 --> 00:39:02,880
and you're just going to request these

00:39:02,079 --> 00:39:05,599
assets

00:39:02,880 --> 00:39:07,520
i mean this makes our service single

00:39:05,599 --> 00:39:09,119
page application so the service worker

00:39:07,520 --> 00:39:12,000
is going to look at these

00:39:09,119 --> 00:39:14,560
requests and it's going to say oh look i

00:39:12,000 --> 00:39:16,720
think i have this on my couch

00:39:14,560 --> 00:39:17,760
so it's gonna hit the catch and it's

00:39:16,720 --> 00:39:20,880
gonna

00:39:17,760 --> 00:39:22,000
ignore the network so somehow the

00:39:20,880 --> 00:39:25,119
service worker

00:39:22,000 --> 00:39:28,240
allow us to just avoid the network

00:39:25,119 --> 00:39:28,960
when it's offline but still we get the

00:39:28,240 --> 00:39:30,800
full app

00:39:28,960 --> 00:39:32,560
i mean here we get in the javascript

00:39:30,800 --> 00:39:35,839
we're also getting the images

00:39:32,560 --> 00:39:40,320
and the user can can keep using the app

00:39:35,839 --> 00:39:40,320
as if it was online so it's wonderful

00:39:41,359 --> 00:39:46,880
this is this is the reaction from people

00:39:44,560 --> 00:39:47,920
looking at service worker magic for the

00:39:46,880 --> 00:39:50,960
first time

00:39:47,920 --> 00:39:53,680
i mean look at this space

00:39:50,960 --> 00:39:55,200
nice so we i think we we have covered

00:39:53,680 --> 00:39:57,760
progressive web apps

00:39:55,200 --> 00:39:58,880
we have cover service workers so let's

00:39:57,760 --> 00:40:01,599
move on

00:39:58,880 --> 00:40:02,240
and the next thing that i want to cover

00:40:01,599 --> 00:40:06,880
is

00:40:02,240 --> 00:40:10,480
aws amplify and aws amplify

00:40:06,880 --> 00:40:11,599
is covering what we call full stack

00:40:10,480 --> 00:40:15,040
serverless

00:40:11,599 --> 00:40:16,800
and that means that we cover anything

00:40:15,040 --> 00:40:20,319
from the client

00:40:16,800 --> 00:40:23,680
up to the back end up to the cloud

00:40:20,319 --> 00:40:26,960
and including everything in between and

00:40:23,680 --> 00:40:28,240
aws amplify will help you develop this

00:40:26,960 --> 00:40:30,720
kind of apps

00:40:28,240 --> 00:40:32,560
today the app that i'm going to show you

00:40:30,720 --> 00:40:35,440
it's using view

00:40:32,560 --> 00:40:36,560
but everything else is using amplify to

00:40:35,440 --> 00:40:41,040
make it

00:40:36,560 --> 00:40:45,119
happen so let's look at how aws amplify

00:40:41,040 --> 00:40:48,640
uh works so adobe's amplify it's

00:40:45,119 --> 00:40:50,160
working for ios android web and react

00:40:48,640 --> 00:40:54,079
native

00:40:50,160 --> 00:40:56,960
these are some options that uh we offer

00:40:54,079 --> 00:40:58,720
and you can see that amplify is based on

00:40:56,960 --> 00:41:02,079
the amplified framework

00:40:58,720 --> 00:41:03,520
some developer tools and then the cloud

00:41:02,079 --> 00:41:05,760
services

00:41:03,520 --> 00:41:07,359
and what we are going to use is the

00:41:05,760 --> 00:41:10,480
amplify cli

00:41:07,359 --> 00:41:12,960
to run all of the different

00:41:10,480 --> 00:41:14,079
categories what we call categories or

00:41:12,960 --> 00:41:17,359
services

00:41:14,079 --> 00:41:21,200
and we are going to add this to our app

00:41:17,359 --> 00:41:23,599
and amplify its features

00:41:21,200 --> 00:41:24,640
so here are some of the commands that

00:41:23,599 --> 00:41:28,400
you can use

00:41:24,640 --> 00:41:30,160
on the amplify cli and anytime that you

00:41:28,400 --> 00:41:34,000
start a new project you will call

00:41:30,160 --> 00:41:36,319
amplify init then you can add

00:41:34,000 --> 00:41:38,079
what we call categories which i'm going

00:41:36,319 --> 00:41:40,720
to introduce

00:41:38,079 --> 00:41:41,599
later and then once you are happy you

00:41:40,720 --> 00:41:45,440
can push

00:41:41,599 --> 00:41:48,720
these categories into the cloud

00:41:45,440 --> 00:41:52,079
so you can provision all of these

00:41:48,720 --> 00:41:55,119
services so you can you can run

00:41:52,079 --> 00:41:57,520
your app in the in the cloud

00:41:55,119 --> 00:41:59,200
later on if you need to change anything

00:41:57,520 --> 00:42:00,319
any of the categories of any of the

00:41:59,200 --> 00:42:03,359
resources you can

00:42:00,319 --> 00:42:05,520
still run amplify update and that will

00:42:03,359 --> 00:42:08,640
allow you to make any changes

00:42:05,520 --> 00:42:11,040
so this is uh how you're going to be

00:42:08,640 --> 00:42:13,119
interacting with amplify

00:42:11,040 --> 00:42:14,319
so let's see what what what are these

00:42:13,119 --> 00:42:17,200
categories i mean

00:42:14,319 --> 00:42:18,960
these categories are mainly backed up by

00:42:17,200 --> 00:42:22,240
aws services

00:42:18,960 --> 00:42:25,119
and you can see here some of them

00:42:22,240 --> 00:42:26,240
so these are covering our authentication

00:42:25,119 --> 00:42:29,040
api

00:42:26,240 --> 00:42:31,680
that's going to uh provide us either

00:42:29,040 --> 00:42:35,520
rest apis or graphql apis

00:42:31,680 --> 00:42:39,040
we also have bots analytics

00:42:35,520 --> 00:42:42,240
extended reality there's also

00:42:39,040 --> 00:42:44,000
features for storage functions

00:42:42,240 --> 00:42:46,800
i mean there's everything in there

00:42:44,000 --> 00:42:49,119
hosting also notifications

00:42:46,800 --> 00:42:50,400
and we also added a lot of features for

00:42:49,119 --> 00:42:52,720
machine learning

00:42:50,400 --> 00:42:53,520
and artificial intelligence so you can

00:42:52,720 --> 00:42:58,560
also add

00:42:53,520 --> 00:43:00,960
these features to your apps very easily

00:42:58,560 --> 00:43:02,319
for this app that i'm going to show you

00:43:00,960 --> 00:43:04,560
and that i'm going to be

00:43:02,319 --> 00:43:08,640
making offline first i'm going to use

00:43:04,560 --> 00:43:08,640
auth and api for graphql

00:43:09,440 --> 00:43:13,599
so that's a lot i hope i hope i didn't

00:43:12,800 --> 00:43:16,480
lost you

00:43:13,599 --> 00:43:17,280
in the process so let's let's look at

00:43:16,480 --> 00:43:20,400
this app

00:43:17,280 --> 00:43:20,640
so i'm going to be building a chat which

00:43:20,400 --> 00:43:24,160
i

00:43:20,640 --> 00:43:25,839
i've called chatty and this is also part

00:43:24,160 --> 00:43:28,480
of a tutorial you can uh

00:43:25,839 --> 00:43:30,240
you can navigate to these following this

00:43:28,480 --> 00:43:32,960
bitly chatty

00:43:30,240 --> 00:43:34,800
view tutorial and you can follow the

00:43:32,960 --> 00:43:36,000
instructions there so mainly what i'm

00:43:34,800 --> 00:43:39,119
going to do

00:43:36,000 --> 00:43:43,440
in the next part of this talk

00:43:39,119 --> 00:43:47,040
is i'm going to make chatty a pwa app

00:43:43,440 --> 00:43:50,400
so that's going to be our next section

00:43:47,040 --> 00:43:54,079
so this is how it looks it's mainly

00:43:50,400 --> 00:43:56,800
a chat room where people can register

00:43:54,079 --> 00:43:58,640
and then it's kind of a puri you can go

00:43:56,800 --> 00:43:59,440
and everybody's just chatting on the

00:43:58,640 --> 00:44:02,480
same room

00:43:59,440 --> 00:44:03,839
i mean i could add more rooms but at

00:44:02,480 --> 00:44:06,839
this point it's just

00:44:03,839 --> 00:44:08,400
one big room just to demonstrate the

00:44:06,839 --> 00:44:10,800
features and

00:44:08,400 --> 00:44:12,079
this is going to demonstrate amplify

00:44:10,800 --> 00:44:14,640
data store

00:44:12,079 --> 00:44:15,680
which i'm going to cover uh right now

00:44:14,640 --> 00:44:18,000
maybe i can

00:44:15,680 --> 00:44:19,920
i can start doing a little demo let's

00:44:18,000 --> 00:44:23,599
see if

00:44:19,920 --> 00:44:26,640
if i can run a demo let me see

00:44:23,599 --> 00:44:29,440
here okay i

00:44:26,640 --> 00:44:30,079
hidden the i hidden the url so you

00:44:29,440 --> 00:44:33,839
cannot

00:44:30,079 --> 00:44:36,000
you know start sending messages

00:44:33,839 --> 00:44:37,359
but i'm going to um i'm going to do

00:44:36,000 --> 00:44:39,760
something

00:44:37,359 --> 00:44:40,960
just to show you how it works i'm using

00:44:39,760 --> 00:44:43,520
uh my phone

00:44:40,960 --> 00:44:44,640
and i have a chrome and a firefox

00:44:43,520 --> 00:44:48,839
instance

00:44:44,640 --> 00:44:50,640
and i'm just going to send a message

00:44:48,839 --> 00:44:54,000
here

00:44:50,640 --> 00:44:57,599
let's put graphql is

00:44:54,000 --> 00:45:02,560
cool and i can also show

00:44:57,599 --> 00:45:02,560
how i can use emojis

00:45:03,359 --> 00:45:09,280
okay let's see if it works yes so i've

00:45:06,480 --> 00:45:10,720
i've been using uh another client i mean

00:45:09,280 --> 00:45:13,599
i'm using the same

00:45:10,720 --> 00:45:14,319
uh jrr sounds and i'm using the same uh

00:45:13,599 --> 00:45:16,880
user

00:45:14,319 --> 00:45:17,440
and you can see that it has been updated

00:45:16,880 --> 00:45:21,119
on

00:45:17,440 --> 00:45:24,000
my desktop so now i have my mobile

00:45:21,119 --> 00:45:26,160
talking to my desktop and they are all

00:45:24,000 --> 00:45:27,520
synchronized i also have another

00:45:26,160 --> 00:45:29,440
just to make it a little bit more

00:45:27,520 --> 00:45:30,400
interesting i have another account which

00:45:29,440 --> 00:45:33,200
is a robot

00:45:30,400 --> 00:45:35,119
i mean he's not a robot it's me but i

00:45:33,200 --> 00:45:38,400
can also

00:45:35,119 --> 00:45:38,400
i can also write here

00:45:42,720 --> 00:45:48,240
okay so this is the robot

00:45:45,760 --> 00:45:49,200
boring blah blah blah okay so this is

00:45:48,240 --> 00:45:51,040
this is the

00:45:49,200 --> 00:45:52,400
this is the demo you can see that it's

00:45:51,040 --> 00:45:55,520
just a chat but

00:45:52,400 --> 00:45:58,800
let me show you how

00:45:55,520 --> 00:46:01,119
how is using amplify data store and

00:45:58,800 --> 00:46:01,839
i'm going to be looking at the storage

00:46:01,119 --> 00:46:03,599
and this is

00:46:01,839 --> 00:46:06,319
this is what we are going to be using we

00:46:03,599 --> 00:46:09,200
are using indexed tv

00:46:06,319 --> 00:46:11,760
and i'm going to show you how the data

00:46:09,200 --> 00:46:15,040
store is working behind the scenes so

00:46:11,760 --> 00:46:16,079
here are different fields and i want to

00:46:15,040 --> 00:46:18,480
show you

00:46:16,079 --> 00:46:19,760
the user chatty and this is the

00:46:18,480 --> 00:46:22,720
information

00:46:19,760 --> 00:46:24,400
from the different messages so this is

00:46:22,720 --> 00:46:27,119
the last message

00:46:24,400 --> 00:46:27,119
that we saw

00:46:27,680 --> 00:46:31,599
and this is the local storage so this is

00:46:30,079 --> 00:46:34,640
this is very good

00:46:31,599 --> 00:46:37,920
for getting that offline feature so

00:46:34,640 --> 00:46:38,880
right now i'm online but if i went

00:46:37,920 --> 00:46:41,200
offline

00:46:38,880 --> 00:46:43,040
this will be where my data will be

00:46:41,200 --> 00:46:44,960
stored

00:46:43,040 --> 00:46:47,119
so that's that's a really good feature

00:46:44,960 --> 00:46:49,359
that comes from amplify

00:46:47,119 --> 00:46:51,520
data store so let's let's go back to the

00:46:49,359 --> 00:46:55,440
slides i mean this is just to show you

00:46:51,520 --> 00:46:58,560
how is uh working on the browser

00:46:55,440 --> 00:47:00,880
and here i'm going to show you

00:46:58,560 --> 00:47:02,400
more or less what is the architecture

00:47:00,880 --> 00:47:03,839
for this app

00:47:02,400 --> 00:47:06,160
and this is the app that is already

00:47:03,839 --> 00:47:08,480
working so it's still not

00:47:06,160 --> 00:47:10,000
ready for offline but it has like some

00:47:08,480 --> 00:47:14,160
offline features

00:47:10,000 --> 00:47:17,040
and here we can see that's the hosting

00:47:14,160 --> 00:47:19,599
so i'm hosting all of my assets using

00:47:17,040 --> 00:47:23,040
aws amplify and that gives me

00:47:19,599 --> 00:47:25,680
a public uh https

00:47:23,040 --> 00:47:28,079
url that i can use and this is how i'm

00:47:25,680 --> 00:47:29,280
able to use it on my phone and also my

00:47:28,079 --> 00:47:32,480
desktop

00:47:29,280 --> 00:47:35,040
then i'm also using an authentication

00:47:32,480 --> 00:47:37,760
so i don't want anyone to be you know

00:47:35,040 --> 00:47:40,559
writing messages to my

00:47:37,760 --> 00:47:42,000
chat room so i'm going to be asking

00:47:40,559 --> 00:47:44,559
people to register

00:47:42,000 --> 00:47:46,319
and then i can see also what is the user

00:47:44,559 --> 00:47:49,359
writing these messages

00:47:46,319 --> 00:47:51,200
i didn't cover this on my demo but maybe

00:47:49,359 --> 00:47:54,480
that now it's a good time because

00:47:51,200 --> 00:47:56,960
probably most of you don't know exactly

00:47:54,480 --> 00:47:59,920
what that means so let me just hide this

00:47:56,960 --> 00:48:00,559
for a moment and just quickly show you

00:47:59,920 --> 00:48:03,599
what's

00:48:00,559 --> 00:48:07,119
what's that uh how is that looking

00:48:03,599 --> 00:48:08,079
so i'm going to just log in just to show

00:48:07,119 --> 00:48:11,200
you

00:48:08,079 --> 00:48:12,559
how this is the this is the control that

00:48:11,200 --> 00:48:15,839
comes

00:48:12,559 --> 00:48:17,920
with amplify so you actually just need

00:48:15,839 --> 00:48:19,280
to add it and once you add it you just

00:48:17,920 --> 00:48:22,720
get this information

00:48:19,280 --> 00:48:26,079
so this is a this is what i skip

00:48:22,720 --> 00:48:30,800
more or less and that's

00:48:26,079 --> 00:48:30,800
being implemented using amazon cognito

00:48:30,880 --> 00:48:35,200
the thing that we are going to focus for

00:48:33,520 --> 00:48:38,640
amplified data store

00:48:35,200 --> 00:48:41,040
is the bit that uses appsing and also

00:48:38,640 --> 00:48:44,079
amazon dynamodb

00:48:41,040 --> 00:48:45,440
so far i've showed you indexeddb that's

00:48:44,079 --> 00:48:47,440
on the browser

00:48:45,440 --> 00:48:49,680
but the browser is going to be

00:48:47,440 --> 00:48:52,000
communicating using graphql

00:48:49,680 --> 00:48:54,400
with appsync which is a service that

00:48:52,000 --> 00:48:57,520
provides a graphql api

00:48:54,400 --> 00:49:00,640
and the resolvers to store and do

00:48:57,520 --> 00:49:02,400
all of the crap operations and amazon

00:49:00,640 --> 00:49:06,160
dynamodb will be our

00:49:02,400 --> 00:49:08,400
data source so that's the architecture

00:49:06,160 --> 00:49:11,920
we are going for

00:49:08,400 --> 00:49:14,079
and the way we can get that architecture

00:49:11,920 --> 00:49:15,280
using the amplify cli is just running

00:49:14,079 --> 00:49:18,000
some commands

00:49:15,280 --> 00:49:18,640
so we are going to initialize our app

00:49:18,000 --> 00:49:22,480
running

00:49:18,640 --> 00:49:25,920
amplify init then i'm going to add

00:49:22,480 --> 00:49:26,960
authorization and i'm going to skip this

00:49:25,920 --> 00:49:30,079
because it's part

00:49:26,960 --> 00:49:32,000
of the chatty view app

00:49:30,079 --> 00:49:33,680
and and then we are going to add the

00:49:32,000 --> 00:49:36,800
graphql api

00:49:33,680 --> 00:49:38,000
once i'm done i'm going to be calling

00:49:36,800 --> 00:49:40,880
amplify push

00:49:38,000 --> 00:49:41,359
and get all of these services set up for

00:49:40,880 --> 00:49:46,160
me

00:49:41,359 --> 00:49:47,599
as i show you in the that diagram before

00:49:46,160 --> 00:49:50,000
one of the first things that i'm going

00:49:47,599 --> 00:49:52,800
to be doing following that

00:49:50,000 --> 00:49:55,119
process that i just showed you is using

00:49:52,800 --> 00:49:56,480
a graphql schema and this is the graphql

00:49:55,119 --> 00:49:58,079
schema that i'm using

00:49:56,480 --> 00:50:01,200
and that you have seen also in the

00:49:58,079 --> 00:50:04,720
browser in the data store in the browser

00:50:01,200 --> 00:50:08,079
so this is using this graphql directive

00:50:04,720 --> 00:50:10,240
which is called add model and that's

00:50:08,079 --> 00:50:12,960
going to create the graphql api

00:50:10,240 --> 00:50:13,280
the resolvers and also all of the logic

00:50:12,960 --> 00:50:16,640
that

00:50:13,280 --> 00:50:17,359
creates updates and deletes uh these

00:50:16,640 --> 00:50:20,640
records

00:50:17,359 --> 00:50:23,280
these messages on the amazon dynamodb

00:50:20,640 --> 00:50:24,559
so this is all done for me which is uh

00:50:23,280 --> 00:50:27,119
very nice

00:50:24,559 --> 00:50:28,000
and the way it's going to work is it's

00:50:27,119 --> 00:50:30,400
going to use

00:50:28,000 --> 00:50:31,440
these type definitions and field

00:50:30,400 --> 00:50:35,520
definitions

00:50:31,440 --> 00:50:38,559
to do all of that work and i just use

00:50:35,520 --> 00:50:41,359
an id the user because i want to know

00:50:38,559 --> 00:50:42,160
what user wrote what message and then

00:50:41,359 --> 00:50:45,119
the message

00:50:42,160 --> 00:50:45,760
and also some way of knowing when that

00:50:45,119 --> 00:50:48,800
message

00:50:45,760 --> 00:50:49,839
is being created so then i can show a

00:50:48,800 --> 00:50:52,960
message you know

00:50:49,839 --> 00:50:55,599
before or after another i can sort those

00:50:52,960 --> 00:50:59,359
messages so this is i think it's pretty

00:50:55,599 --> 00:51:00,960
straightforward graphql type

00:50:59,359 --> 00:51:03,599
and that's the only thing that you need

00:51:00,960 --> 00:51:05,599
to create this chatty app so that's

00:51:03,599 --> 00:51:08,160
that's something that i did before

00:51:05,599 --> 00:51:10,319
and you can you can check it following

00:51:08,160 --> 00:51:11,040
uh the project the url that i gave

00:51:10,319 --> 00:51:13,920
before

00:51:11,040 --> 00:51:15,440
on the recording and amplify data store

00:51:13,920 --> 00:51:18,480
will behave different

00:51:15,440 --> 00:51:21,440
uh when it's offline and when it goes

00:51:18,480 --> 00:51:22,800
online so let's cover how it works when

00:51:21,440 --> 00:51:25,119
it's offline

00:51:22,800 --> 00:51:25,920
so the first thing that is going to use

00:51:25,119 --> 00:51:28,559
is

00:51:25,920 --> 00:51:30,720
the models and these models have been

00:51:28,559 --> 00:51:31,440
created during the steps that i show you

00:51:30,720 --> 00:51:34,960
before

00:51:31,440 --> 00:51:36,480
and that will be our api and this api is

00:51:34,960 --> 00:51:38,960
actually not graphql

00:51:36,480 --> 00:51:39,839
so you don't have to write any graphql

00:51:38,960 --> 00:51:43,040
query

00:51:39,839 --> 00:51:46,480
but it will be the graphql

00:51:43,040 --> 00:51:48,079
engine that will create these uh graphql

00:51:46,480 --> 00:51:50,079
queries for you

00:51:48,079 --> 00:51:51,359
so that's the store engine and that's

00:51:50,079 --> 00:51:53,599
going to use

00:51:51,359 --> 00:51:55,200
in different devices is going to use

00:51:53,599 --> 00:51:59,599
either indexeddb

00:51:55,200 --> 00:52:01,680
or sql lite and that's what i show you

00:51:59,599 --> 00:52:03,520
in the demo so let's see that

00:52:01,680 --> 00:52:06,319
information again

00:52:03,520 --> 00:52:06,319
very quickly

00:52:06,720 --> 00:52:09,839
this is this information here so this is

00:52:09,359 --> 00:52:13,119
the

00:52:09,839 --> 00:52:14,079
indexeddb database and actually the

00:52:13,119 --> 00:52:17,440
information

00:52:14,079 --> 00:52:19,440
for chatty for my app is here as i

00:52:17,440 --> 00:52:22,640
showed you before

00:52:19,440 --> 00:52:25,760
and this is following my schema

00:52:22,640 --> 00:52:28,240
plus some other internal fields

00:52:25,760 --> 00:52:29,680
that are created in order to do the

00:52:28,240 --> 00:52:32,000
synchronizing

00:52:29,680 --> 00:52:34,480
whenever i'm online so let's go back to

00:52:32,000 --> 00:52:36,960
the slides

00:52:34,480 --> 00:52:38,720
so this is covering when i'm offline and

00:52:36,960 --> 00:52:42,000
this is great because then

00:52:38,720 --> 00:52:44,720
i can actually very securely store

00:52:42,000 --> 00:52:46,160
any data any updates any deletes

00:52:44,720 --> 00:52:49,680
anything that i i

00:52:46,160 --> 00:52:53,119
do while i'm offline and then i can keep

00:52:49,680 --> 00:52:53,680
these changes and share them when i'm

00:52:53,119 --> 00:52:56,000
online

00:52:53,680 --> 00:52:57,119
so let's look what happens when i go

00:52:56,000 --> 00:52:59,440
online

00:52:57,119 --> 00:53:00,240
well the way it works with amplifi data

00:52:59,440 --> 00:53:03,680
store

00:53:00,240 --> 00:53:06,240
is the storage engine is going to be

00:53:03,680 --> 00:53:07,760
communicating with the sync engine and

00:53:06,240 --> 00:53:10,480
this is going to make

00:53:07,760 --> 00:53:12,400
this very easy and one thing that you

00:53:10,480 --> 00:53:15,760
can imagine i mean in a chat

00:53:12,400 --> 00:53:19,119
in a chat application there's no many

00:53:15,760 --> 00:53:21,520
room for errors because everyone has

00:53:19,119 --> 00:53:22,480
different messages we are not sharing

00:53:21,520 --> 00:53:25,520
data

00:53:22,480 --> 00:53:28,079
but you could imagine a scenario

00:53:25,520 --> 00:53:29,119
where i'm actually trying to change the

00:53:28,079 --> 00:53:31,839
same data

00:53:29,119 --> 00:53:33,040
and this is when this sync engine can

00:53:31,839 --> 00:53:35,359
play

00:53:33,040 --> 00:53:36,240
a better role because it can resolve

00:53:35,359 --> 00:53:39,200
conflicts

00:53:36,240 --> 00:53:40,000
pretty much like when you are using

00:53:39,200 --> 00:53:42,559
github

00:53:40,000 --> 00:53:43,119
and there is a conflict there is some uh

00:53:42,559 --> 00:53:46,240
clash

00:53:43,119 --> 00:53:48,480
between the data for the chat app

00:53:46,240 --> 00:53:50,319
that's not going to happen and just the

00:53:48,480 --> 00:53:52,160
data is going to be shared

00:53:50,319 --> 00:53:53,680
and the way it's going to work is going

00:53:52,160 --> 00:53:56,319
to use graphql

00:53:53,680 --> 00:53:58,319
and it's going to execute you know the

00:53:56,319 --> 00:54:01,119
different

00:53:58,319 --> 00:54:02,319
messages that i've used or i create or

00:54:01,119 --> 00:54:04,960
i've

00:54:02,319 --> 00:54:06,720
manipulated while i was offline and it's

00:54:04,960 --> 00:54:11,119
going to execute those

00:54:06,720 --> 00:54:14,319
through the graphql api in in hopsin

00:54:11,119 --> 00:54:18,079
okay so that's a lot of

00:54:14,319 --> 00:54:21,200
information to take in so how that

00:54:18,079 --> 00:54:24,079
looks like well we have different

00:54:21,200 --> 00:54:24,720
uh imports here one i'm going to show

00:54:24,079 --> 00:54:27,760
you

00:54:24,720 --> 00:54:29,440
is the models these models were created

00:54:27,760 --> 00:54:31,599
using the graphql schema

00:54:29,440 --> 00:54:33,040
so that's going to follow exactly the

00:54:31,599 --> 00:54:36,000
definition that you use

00:54:33,040 --> 00:54:37,680
in your schema and it's just using this

00:54:36,000 --> 00:54:40,079
data store save

00:54:37,680 --> 00:54:40,880
and is using the model to create a new

00:54:40,079 --> 00:54:43,119
object

00:54:40,880 --> 00:54:44,319
and as you can see there's no graphql

00:54:43,119 --> 00:54:47,760
involved which is

00:54:44,319 --> 00:54:49,440
uh quite interesting that's going to

00:54:47,760 --> 00:54:53,440
create a record

00:54:49,440 --> 00:54:56,640
in our indexeddb database

00:54:53,440 --> 00:54:59,440
and whenever i go online or offline

00:54:56,640 --> 00:55:00,160
it's gonna look if there are any changes

00:54:59,440 --> 00:55:03,200
and run

00:55:00,160 --> 00:55:03,839
graphql queries to synchronize so that's

00:55:03,200 --> 00:55:07,119
going to

00:55:03,839 --> 00:55:09,599
be happening behind the scenes so as

00:55:07,119 --> 00:55:10,240
a developer or even as the user i won't

00:55:09,599 --> 00:55:12,559
see

00:55:10,240 --> 00:55:15,280
i won't be involved in that so that's

00:55:12,559 --> 00:55:18,480
going to be happening automatically

00:55:15,280 --> 00:55:19,599
and the way queries work is very similar

00:55:18,480 --> 00:55:23,599
so we are using these

00:55:19,599 --> 00:55:26,400
models i get the model from my graphql

00:55:23,599 --> 00:55:27,040
schema and then i can just run some

00:55:26,400 --> 00:55:28,960
queries

00:55:27,040 --> 00:55:30,960
and i can use for example these

00:55:28,960 --> 00:55:33,200
predicates all which is just

00:55:30,960 --> 00:55:34,480
a filter so i want to get like all of

00:55:33,200 --> 00:55:36,160
the messages

00:55:34,480 --> 00:55:37,680
and that's what i'm going to be using in

00:55:36,160 --> 00:55:40,559
my code

00:55:37,680 --> 00:55:40,960
so that's a little bit of an intro of

00:55:40,559 --> 00:55:42,960
how

00:55:40,960 --> 00:55:44,480
amplify data store works and how it's

00:55:42,960 --> 00:55:49,040
going to help us

00:55:44,480 --> 00:55:51,520
implement this offline first application

00:55:49,040 --> 00:55:52,160
so we are right on the money and we are

00:55:51,520 --> 00:55:54,799
now

00:55:52,160 --> 00:55:56,400
progressing after section after section

00:55:54,799 --> 00:55:57,119
after section we are making good

00:55:56,400 --> 00:55:59,599
progress

00:55:57,119 --> 00:56:00,400
let's see the time i still have some

00:55:59,599 --> 00:56:03,680
time

00:56:00,400 --> 00:56:04,240
so let's make it a pwa and we have

00:56:03,680 --> 00:56:07,040
covered

00:56:04,240 --> 00:56:10,000
what are the features that we are after

00:56:07,040 --> 00:56:13,599
so let's see how we do that

00:56:10,000 --> 00:56:17,119
and when using view we can run

00:56:13,599 --> 00:56:19,839
a view cli plugin which is called

00:56:17,119 --> 00:56:20,720
pwa so it's very easy to remember and we

00:56:19,839 --> 00:56:24,400
just need to run

00:56:20,720 --> 00:56:26,319
view at view pwa

00:56:24,400 --> 00:56:28,319
that's going to make some changes in

00:56:26,319 --> 00:56:30,960
your view app

00:56:28,319 --> 00:56:32,720
and mainly it's going to make a change

00:56:30,960 --> 00:56:35,359
on your main

00:56:32,720 --> 00:56:37,040
gs file and it's going to import this

00:56:35,359 --> 00:56:39,119
register service worker

00:56:37,040 --> 00:56:40,559
i mean if you remember when i talk about

00:56:39,119 --> 00:56:42,720
the service worker

00:56:40,559 --> 00:56:43,599
that's going to catch any of the

00:56:42,720 --> 00:56:46,640
requests

00:56:43,599 --> 00:56:48,480
so we can use these assets while offline

00:56:46,640 --> 00:56:50,720
so this is this is very good

00:56:48,480 --> 00:56:52,559
in that direction so we are getting a

00:56:50,720 --> 00:56:55,680
service worker

00:56:52,559 --> 00:56:57,839
right after running one command

00:56:55,680 --> 00:56:58,960
so that's really good the next thing we

00:56:57,839 --> 00:57:02,000
do need to do is

00:56:58,960 --> 00:57:04,640
just build i mean we want to test

00:57:02,000 --> 00:57:06,079
that the service worker is is fine and

00:57:04,640 --> 00:57:06,640
that's going to create a lot of

00:57:06,079 --> 00:57:10,079
different

00:57:06,640 --> 00:57:12,319
uh resources here this is very similar

00:57:10,079 --> 00:57:14,720
if you have published any view

00:57:12,319 --> 00:57:15,760
applications so that's pretty much

00:57:14,720 --> 00:57:18,000
standard

00:57:15,760 --> 00:57:19,599
the only thing is that we get a version

00:57:18,000 --> 00:57:22,480
attached to every file

00:57:19,599 --> 00:57:24,319
so we can then tell the device that

00:57:22,480 --> 00:57:27,440
there's a change on that file and that

00:57:24,319 --> 00:57:29,440
file is going to be replaced

00:57:27,440 --> 00:57:31,040
so the next thing that i want to focus

00:57:29,440 --> 00:57:34,960
is this manifest

00:57:31,040 --> 00:57:37,599
and this is how the pwa is going to

00:57:34,960 --> 00:57:38,640
behave when we install it so we can

00:57:37,599 --> 00:57:41,680
define

00:57:38,640 --> 00:57:44,880
the behavior and some of the different

00:57:41,680 --> 00:57:46,559
configuration values there's also this

00:57:44,880 --> 00:57:49,760
precache manifest

00:57:46,559 --> 00:57:54,400
and this is all of the files that i want

00:57:49,760 --> 00:57:56,720
my service worker to install when i'm

00:57:54,400 --> 00:57:58,559
using the pwa for the first time so

00:57:56,720 --> 00:58:01,040
that's going to be part of the install

00:57:58,559 --> 00:58:01,920
and that's going to tell the service

00:58:01,040 --> 00:58:05,200
worker

00:58:01,920 --> 00:58:09,200
what files i want on my device

00:58:05,200 --> 00:58:11,280
before the user starts using the app

00:58:09,200 --> 00:58:13,040
okay and then of course the service

00:58:11,280 --> 00:58:15,520
worker and that's the implementation of

00:58:13,040 --> 00:58:18,799
our service worker

00:58:15,520 --> 00:58:22,000
so if we want to run this

00:58:18,799 --> 00:58:24,960
locally we can use this uh

00:58:22,000 --> 00:58:26,240
http server and this is probably the the

00:58:24,960 --> 00:58:28,240
nicest option

00:58:26,240 --> 00:58:30,319
you don't want to be deploying this

00:58:28,240 --> 00:58:31,520
every time that you make a small change

00:58:30,319 --> 00:58:34,000
so that's that would be my

00:58:31,520 --> 00:58:37,280
recommendation for for local testing

00:58:34,000 --> 00:58:40,720
and that will work as as expected

00:58:37,280 --> 00:58:43,760
so use use that but

00:58:40,720 --> 00:58:44,880
still so that's probably the only thing

00:58:43,760 --> 00:58:47,920
that you have to do

00:58:44,880 --> 00:58:50,799
and you will get working unless you have

00:58:47,920 --> 00:58:51,200
other things going on so for example in

00:58:50,799 --> 00:58:54,720
my

00:58:51,200 --> 00:58:57,760
app i have a svg and that's the logo

00:58:54,720 --> 00:58:58,880
but the logo doesn't come you know by

00:58:57,760 --> 00:59:03,119
default

00:58:58,880 --> 00:59:06,559
and of course this setup from the pwa

00:59:03,119 --> 00:59:08,000
bu cli plugin didn't cover that i mean

00:59:06,559 --> 00:59:09,119
this is something that i need to

00:59:08,000 --> 00:59:11,599
customize

00:59:09,119 --> 00:59:13,920
but that's one of the issues that i

00:59:11,599 --> 00:59:14,640
found when i was doing this work so i

00:59:13,920 --> 00:59:17,680
had to

00:59:14,640 --> 00:59:19,599
think okay what resources i need when

00:59:17,680 --> 00:59:21,680
the application is offline

00:59:19,599 --> 00:59:22,880
and then obviously i realized when i was

00:59:21,680 --> 00:59:25,200
testing so this is

00:59:22,880 --> 00:59:26,240
this is the first so one thing that you

00:59:25,200 --> 00:59:29,520
can do is

00:59:26,240 --> 00:59:32,319
change the setup that comes by default

00:59:29,520 --> 00:59:33,920
and use a custom configuration and this

00:59:32,319 --> 00:59:37,119
is what involves

00:59:33,920 --> 00:59:39,119
so we need to take the manifest one of

00:59:37,119 --> 00:59:41,520
the things that i want to um

00:59:39,119 --> 00:59:44,480
show you is probably the manifest so

00:59:41,520 --> 00:59:47,839
let's look at the manifest

00:59:44,480 --> 00:59:51,040
let's this is the this is the solution

00:59:47,839 --> 00:59:53,920
and this is what the manifest contains

00:59:51,040 --> 00:59:55,520
so we have like some properties for the

00:59:53,920 --> 00:59:58,559
name of the application

00:59:55,520 --> 01:00:02,000
what would be the color of the theme

00:59:58,559 --> 01:00:04,880
some icons these icons are here

01:00:02,000 --> 01:00:05,200
for different uh devices so this is uh

01:00:04,880 --> 01:00:08,240
for

01:00:05,200 --> 01:00:11,680
android devices and there's also

01:00:08,240 --> 01:00:12,480
uh what is the way that i want to

01:00:11,680 --> 01:00:14,559
display

01:00:12,480 --> 01:00:16,000
this application in this case i'm going

01:00:14,559 --> 01:00:20,160
to use standalone

01:00:16,000 --> 01:00:23,200
so it will look like a separate app

01:00:20,160 --> 01:00:27,240
one one thing that we'll do

01:00:23,200 --> 01:00:31,440
is also change the result of my

01:00:27,240 --> 01:00:34,960
index.html so if i go to the this folder

01:00:31,440 --> 01:00:37,520
when i build this app i can see

01:00:34,960 --> 01:00:39,119
where this information is going some of

01:00:37,520 --> 01:00:42,400
the information is going to go

01:00:39,119 --> 01:00:45,599
into my metadata here and

01:00:42,400 --> 01:00:47,599
that's gonna provide these uh different

01:00:45,599 --> 01:00:49,680
experiences

01:00:47,599 --> 01:00:51,599
you can see for example this is for a

01:00:49,680 --> 01:00:52,720
microsoft application and that's using

01:00:51,599 --> 01:00:55,119
the black

01:00:52,720 --> 01:00:56,720
color and this is exactly what we've

01:00:55,119 --> 01:00:59,440
seen here

01:00:56,720 --> 01:01:00,319
so we can see how this configuration in

01:00:59,440 --> 01:01:03,760
the manifest

01:01:00,319 --> 01:01:07,200
is telling the compiler

01:01:03,760 --> 01:01:11,359
how to set my index.html

01:01:07,200 --> 01:01:13,680
file in a right in the right way

01:01:11,359 --> 01:01:15,680
so that's that's what covers the

01:01:13,680 --> 01:01:20,640
manifest so that's going to give that

01:01:15,680 --> 01:01:24,160
application feeling and let's see

01:01:20,640 --> 01:01:26,000
let's see let's go back

01:01:24,160 --> 01:01:27,280
let's go back to the custom

01:01:26,000 --> 01:01:31,440
configuration

01:01:27,280 --> 01:01:31,440
and okay

01:01:32,000 --> 01:01:36,559
so here we can see that the manifest now

01:01:34,720 --> 01:01:39,040
it's on a

01:01:36,559 --> 01:01:40,240
correct file and this view config file

01:01:39,040 --> 01:01:42,160
will allow it to

01:01:40,240 --> 01:01:43,680
interrupt you but you are not sharing

01:01:42,160 --> 01:01:47,440
your screen so

01:01:43,680 --> 01:01:50,000
oh could you fix that uh sure

01:01:47,440 --> 01:01:52,000
so here we can see for the custom

01:01:50,000 --> 01:01:54,559
configuration i need to add a new

01:01:52,000 --> 01:01:55,520
file which is this view config file and

01:01:54,559 --> 01:01:58,640
then i can

01:01:55,520 --> 01:02:00,960
i can move the manifest from my uh

01:01:58,640 --> 01:02:02,799
this folder to my public folder so then

01:02:00,960 --> 01:02:06,160
i can manipulate

01:02:02,799 --> 01:02:09,440
the manifest and then i can also set

01:02:06,160 --> 01:02:09,839
some of these uh configuration here on

01:02:09,440 --> 01:02:13,920
this

01:02:09,839 --> 01:02:16,880
pwa property so let's go

01:02:13,920 --> 01:02:18,319
and check some of this so this is just a

01:02:16,880 --> 01:02:21,119
different way of

01:02:18,319 --> 01:02:22,960
setting the manifest and the properties

01:02:21,119 --> 01:02:26,079
some of these properties now i can

01:02:22,960 --> 01:02:30,319
access them from here also making it

01:02:26,079 --> 01:02:32,839
available for apple mobile devices

01:02:30,319 --> 01:02:34,480
and also setting some of these

01:02:32,839 --> 01:02:37,839
configurations

01:02:34,480 --> 01:02:40,720
the plugin that we are using

01:02:37,839 --> 01:02:42,319
is work it's called workbox and the

01:02:40,720 --> 01:02:44,960
custom configuration

01:02:42,319 --> 01:02:46,880
is needs to be set inject manifest so

01:02:44,960 --> 01:02:50,079
that's going to use the manifest

01:02:46,880 --> 01:02:52,559
that i'm setting out in this file

01:02:50,079 --> 01:02:53,920
that also points to the service worker

01:02:52,559 --> 01:02:56,880
and this is a

01:02:53,920 --> 01:02:57,760
the service worker that i'm going to be

01:02:56,880 --> 01:03:00,559
using

01:02:57,760 --> 01:03:02,000
for my app so we just move some of the

01:03:00,559 --> 01:03:05,119
default configuration into

01:03:02,000 --> 01:03:07,920
this file and now we can play with all

01:03:05,119 --> 01:03:08,480
these features one thing that you need

01:03:07,920 --> 01:03:11,039
to do

01:03:08,480 --> 01:03:12,480
when you do this custom configuration is

01:03:11,039 --> 01:03:15,039
actually you need to

01:03:12,480 --> 01:03:17,280
develop this service worker i mean

01:03:15,039 --> 01:03:20,319
there's a lot of templates out there

01:03:17,280 --> 01:03:24,400
this one is just showing what i've used

01:03:20,319 --> 01:03:27,520
so i can prefix the entry

01:03:24,400 --> 01:03:28,480
of my cache and i can use amplified at

01:03:27,520 --> 01:03:31,839
the store

01:03:28,480 --> 01:03:33,280
i can also set how is this service

01:03:31,839 --> 01:03:36,400
worker going to behave

01:03:33,280 --> 01:03:37,760
and these are different um settings that

01:03:36,400 --> 01:03:40,480
i can set up

01:03:37,760 --> 01:03:42,079
mostly these are referring of when there

01:03:40,480 --> 01:03:45,200
is a new version

01:03:42,079 --> 01:03:48,240
how i want the service worker to behave

01:03:45,200 --> 01:03:50,480
for this setup it's just going to take

01:03:48,240 --> 01:03:53,280
the latest version is going to use it

01:03:50,480 --> 01:03:56,079
as quick as possible there's other

01:03:53,280 --> 01:03:58,160
settings that i can ask the user

01:03:56,079 --> 01:03:59,119
and maybe you have seen this in some

01:03:58,160 --> 01:04:01,359
applications

01:03:59,119 --> 01:04:02,400
and then you can just refresh and pick

01:04:01,359 --> 01:04:05,760
uh show

01:04:02,400 --> 01:04:07,520
a pop-up and then make the user click

01:04:05,760 --> 01:04:08,960
decide if they want to go with the

01:04:07,520 --> 01:04:12,000
latest version or keep

01:04:08,960 --> 01:04:14,559
keep the the current one

01:04:12,000 --> 01:04:16,559
this is how i fix the error so one thing

01:04:14,559 --> 01:04:20,319
that i had to do is i need to add

01:04:16,559 --> 01:04:23,359
this uh svg file uh manually

01:04:20,319 --> 01:04:24,160
and that's pretty much it the rest is

01:04:23,359 --> 01:04:27,280
exactly

01:04:24,160 --> 01:04:27,760
as the default uh behavior so that's the

01:04:27,280 --> 01:04:30,799
only

01:04:27,760 --> 01:04:33,680
change that i had to do so it's i think

01:04:30,799 --> 01:04:36,960
i think it's reasonable

01:04:33,680 --> 01:04:40,160
so now we got the pwa

01:04:36,960 --> 01:04:43,280
uh working i got also another

01:04:40,160 --> 01:04:44,000
cat here for a little mental break for

01:04:43,280 --> 01:04:47,680
you

01:04:44,000 --> 01:04:51,039
so let's go and see what is this

01:04:47,680 --> 01:04:54,559
new chatty pwa app you know

01:04:51,039 --> 01:04:57,760
giving to us so we got this new um

01:04:54,559 --> 01:04:59,520
version of our app and now we can use it

01:04:57,760 --> 01:05:01,200
in different places so now

01:04:59,520 --> 01:05:03,520
it's interesting because we can use it

01:05:01,200 --> 01:05:04,559
on web on the browser but we can also

01:05:03,520 --> 01:05:08,079
use it in

01:05:04,559 --> 01:05:11,280
our mobile as if it was a mobile

01:05:08,079 --> 01:05:13,920
app we can install it on our home screen

01:05:11,280 --> 01:05:15,200
we can play with it we can use it as if

01:05:13,920 --> 01:05:18,400
it was another app

01:05:15,200 --> 01:05:20,799
it looks like a standalone app

01:05:18,400 --> 01:05:22,559
so it's pretty cool there's also the

01:05:20,799 --> 01:05:25,200
desktop option so i can also

01:05:22,559 --> 01:05:26,000
install it in my mac in my windows in my

01:05:25,200 --> 01:05:30,319
linux

01:05:26,000 --> 01:05:33,280
so that's kind of a kind of awesome

01:05:30,319 --> 01:05:34,160
i did some screenshots and i asked some

01:05:33,280 --> 01:05:37,599
friends to

01:05:34,160 --> 01:05:40,240
just screen capture i mean this is

01:05:37,599 --> 01:05:41,520
this is a little bit uh so you need to

01:05:40,240 --> 01:05:44,480
look for the chatty

01:05:41,520 --> 01:05:46,400
this is how it looks in android on the

01:05:44,480 --> 01:05:49,119
left and

01:05:46,400 --> 01:05:51,280
on an iphone on the right you can see

01:05:49,119 --> 01:05:54,960
that they look exactly like a

01:05:51,280 --> 01:05:57,440
native app but they have pwas

01:05:54,960 --> 01:05:58,640
and then when they are using the app

01:05:57,440 --> 01:06:02,000
they look exactly

01:05:58,640 --> 01:06:04,960
as you would expect so this is this is a

01:06:02,000 --> 01:06:05,359
what you get so that's i think that's

01:06:04,960 --> 01:06:08,000
pretty

01:06:05,359 --> 01:06:08,720
pretty cool another thing that we get is

01:06:08,000 --> 01:06:12,160
um

01:06:08,720 --> 01:06:15,200
we get all of the performance

01:06:12,160 --> 01:06:16,480
uh coming from this service worker i

01:06:15,200 --> 01:06:18,480
mean if you are

01:06:16,480 --> 01:06:19,760
even if you are online because you have

01:06:18,480 --> 01:06:22,799
this catch

01:06:19,760 --> 01:06:25,839
uh content you will get this first

01:06:22,799 --> 01:06:26,480
load really fast you just need to go

01:06:25,839 --> 01:06:29,440
through that

01:06:26,480 --> 01:06:30,799
install phase but once you have your

01:06:29,440 --> 01:06:32,720
assets installed

01:06:30,799 --> 01:06:34,079
the first load will be really fast for

01:06:32,720 --> 01:06:36,319
your users and

01:06:34,079 --> 01:06:38,799
they also will be able to use your app

01:06:36,319 --> 01:06:38,799
offline

01:06:38,880 --> 01:06:44,640
but it's not really 100 online ready and

01:06:42,880 --> 01:06:48,079
why is that

01:06:44,640 --> 01:06:50,480
well it it survives offline

01:06:48,079 --> 01:06:52,319
and let me just show you i mean i think

01:06:50,480 --> 01:06:54,720
we are in a good

01:06:52,319 --> 01:06:55,440
we are in a good time now for uh a

01:06:54,720 --> 01:06:58,720
little bit

01:06:55,440 --> 01:07:01,680
harder setup

01:06:58,720 --> 01:07:04,160
and i'm going just to use these versions

01:07:01,680 --> 01:07:07,440
here i'm going to go offline don't do it

01:07:04,160 --> 01:07:09,440
don't do it at home it seems like gerard

01:07:07,440 --> 01:07:13,200
is trying to demonstrate

01:07:09,440 --> 01:07:16,720
the offline capabilities really hard

01:07:13,200 --> 01:07:19,200
but okay fun aside uh

01:07:16,720 --> 01:07:20,720
let's wait a couple of seconds till he

01:07:19,200 --> 01:07:23,440
reconnects

01:07:20,720 --> 01:07:25,520
so i i guess dirt went like a bit too

01:07:23,440 --> 01:07:28,799
hard with presentation and it's it's

01:07:25,520 --> 01:07:30,880
it happens yeah yeah

01:07:28,799 --> 01:07:31,920
some technical issues they are always

01:07:30,880 --> 01:07:36,480
there

01:07:31,920 --> 01:07:39,680
uh so so sure uh i definitely have a few

01:07:36,480 --> 01:07:43,039
more questions uh for for you

01:07:39,680 --> 01:07:46,799
uh if you if you allow uh

01:07:43,039 --> 01:07:49,039
and if you don't want me first i i just

01:07:46,799 --> 01:07:50,880
looked at the chat and i noticed vaslav

01:07:49,039 --> 01:07:54,480
actually asked a question about

01:07:50,880 --> 01:07:56,319
uh schema and i double checked that

01:07:54,480 --> 01:07:58,640
so i have some corrections to make d

01:07:56,319 --> 01:08:02,640
graph actually does support schema

01:07:58,640 --> 01:08:04,640
so that's small thing to notice and it

01:08:02,640 --> 01:08:06,160
actually supports graphql schema which

01:08:04,640 --> 01:08:10,799
is highly enforceable so

01:08:06,160 --> 01:08:13,359
that's something might help people

01:08:10,799 --> 01:08:14,000
yeah so that was uh for vat slab

01:08:13,359 --> 01:08:15,599
question

01:08:14,000 --> 01:08:18,319
whether you can enforce some kind of

01:08:15,599 --> 01:08:21,520
schema in a neo4j

01:08:18,319 --> 01:08:23,759
but it's only for graphql graph

01:08:21,520 --> 01:08:24,560
it's only for the graph for for neo4j

01:08:23,759 --> 01:08:27,440
node

01:08:24,560 --> 01:08:27,839
now you can enforce some uh limitations

01:08:27,440 --> 01:08:30,880
there

01:08:27,839 --> 01:08:35,440
and like it's like uh

01:08:30,880 --> 01:08:35,440
an sql you have some something like that

01:08:36,839 --> 01:08:41,759
yeah

01:08:38,719 --> 01:08:44,000
uh duchamp is asking uh in the chat uh

01:08:41,759 --> 01:08:46,719
whether you can provide more examples

01:08:44,000 --> 01:08:47,839
which apps are good for gravity db and

01:08:46,719 --> 01:08:51,679
which are not

01:08:47,839 --> 01:08:54,480
also does the query result returns json

01:08:51,679 --> 01:08:57,600
which is more of a technical one

01:08:54,480 --> 01:08:59,920
so let's go one by one uh as i said

01:08:57,600 --> 01:09:02,239
if you have a lot of connected data then

01:08:59,920 --> 01:09:05,279
i totally recommend graph db

01:09:02,239 --> 01:09:06,319
like you can imagine like a lot of

01:09:05,279 --> 01:09:08,319
people connected

01:09:06,319 --> 01:09:09,600
so social network for sure it's a really

01:09:08,319 --> 01:09:11,600
good example like

01:09:09,600 --> 01:09:13,839
people like each other connect share

01:09:11,600 --> 01:09:14,640
stuff so that's really good example for

01:09:13,839 --> 01:09:16,319
it

01:09:14,640 --> 01:09:18,799
and actually i think even facebook they

01:09:16,319 --> 01:09:21,359
run some kind of graph database uh

01:09:18,799 --> 01:09:23,440
under the hood for like people finding

01:09:21,359 --> 01:09:25,679
all like connection point

01:09:23,440 --> 01:09:27,520
talking about the way the data returned

01:09:25,679 --> 01:09:29,600
it can be different

01:09:27,520 --> 01:09:30,960
like if you talk in neo4j there are

01:09:29,600 --> 01:09:34,080
several protocols

01:09:30,960 --> 01:09:37,120
uh it can be actually even

01:09:34,080 --> 01:09:38,239
json it had been binary it's bought

01:09:37,120 --> 01:09:40,880
protocol

01:09:38,239 --> 01:09:41,759
and the other thing uh the rest is

01:09:40,880 --> 01:09:44,319
actually

01:09:41,759 --> 01:09:46,640
up to how you set up so you can even

01:09:44,319 --> 01:09:49,839
connect uh graphql there

01:09:46,640 --> 01:09:50,560
as a basically precursor as i showed in

01:09:49,839 --> 01:09:52,480
slides

01:09:50,560 --> 01:09:55,359
and it will return to you the data as

01:09:52,480 --> 01:09:55,359
graphql data

01:10:00,840 --> 01:10:07,600
and maybe it will be sort of

01:10:04,480 --> 01:10:09,360
the amateur question but i i wanted to

01:10:07,600 --> 01:10:12,480
ask whether you had a

01:10:09,360 --> 01:10:14,480
practical practical case or or whether

01:10:12,480 --> 01:10:16,880
you wanted to

01:10:14,480 --> 01:10:17,520
or if you can find the case where you

01:10:16,880 --> 01:10:20,560
would need

01:10:17,520 --> 01:10:22,800
sort of the hybrid database that's

01:10:20,560 --> 01:10:24,400
okay there is a lot of relationships but

01:10:22,800 --> 01:10:27,679
for uh for a certain

01:10:24,400 --> 01:10:29,280
entity there would be a a really great

01:10:27,679 --> 01:10:32,640
use case to use

01:10:29,280 --> 01:10:34,000
just uh the relation relational database

01:10:32,640 --> 01:10:38,400
the diploma

01:10:34,000 --> 01:10:38,800
uh table to to to to store the data as a

01:10:38,400 --> 01:10:42,640
list

01:10:38,800 --> 01:10:48,239
sort of absolutely i i completely

01:10:42,640 --> 01:10:48,239
i completely of course i i was offline

01:10:50,800 --> 01:10:57,360
all right sorry about that i i

01:10:55,120 --> 01:10:58,400
i'm a little bit crazy and i didn't

01:10:57,360 --> 01:11:01,679
realize

01:10:58,400 --> 01:11:04,320
that yeah no no no worries

01:11:01,679 --> 01:11:05,600
no worries gerard uh we realized and

01:11:04,320 --> 01:11:10,400
made a few jokes

01:11:05,600 --> 01:11:13,679
whether you are testing this amplify uh

01:11:10,400 --> 01:11:16,960
something in in some some real for real

01:11:13,679 --> 01:11:19,840
and in this uh kind of hard use case

01:11:16,960 --> 01:11:20,800
uh in front of the audience yeah yeah

01:11:19,840 --> 01:11:24,159
yeah

01:11:20,800 --> 01:11:26,560
i mean that's uh that's embarrassing

01:11:24,159 --> 01:11:28,880
yeah if that if that's the case it's not

01:11:26,560 --> 01:11:28,880
working

01:11:29,199 --> 01:11:32,239
it's working it's working it's working

01:11:31,920 --> 01:11:34,560
but

01:11:32,239 --> 01:11:36,320
uh there's other ways there's other ways

01:11:34,560 --> 01:11:36,719
i mean i just i just need to go through

01:11:36,320 --> 01:11:38,960
uh

01:11:36,719 --> 01:11:39,760
if we have time i have like a couple of

01:11:38,960 --> 01:11:43,040
uh

01:11:39,760 --> 01:11:45,360
slides yeah

01:11:43,040 --> 01:11:46,960
sure uh but we were in the middle of the

01:11:45,360 --> 01:11:49,600
conversation with alex but

01:11:46,960 --> 01:11:50,000
alex if we can postpone it and jared you

01:11:49,600 --> 01:11:52,560
can

01:11:50,000 --> 01:11:53,840
just fluently continue where you left

01:11:52,560 --> 01:11:56,000
off

01:11:53,840 --> 01:11:57,600
so you can finish your talk okay let's

01:11:56,000 --> 01:12:00,080
let's go back to the demo

01:11:57,600 --> 01:12:00,640
i mean the demo is it's possible but

01:12:00,080 --> 01:12:03,760
okay

01:12:00,640 --> 01:12:05,120
let's so we we covered all of these so

01:12:03,760 --> 01:12:07,679
we got

01:12:05,120 --> 01:12:08,960
we got actually almost everything the

01:12:07,679 --> 01:12:11,920
only problem is that

01:12:08,960 --> 01:12:13,040
whenever we are offline the user doesn't

01:12:11,920 --> 01:12:16,159
know

01:12:13,040 --> 01:12:20,480
doesn't know if it's offline or not

01:12:16,159 --> 01:12:22,239
what i did is i added this feature

01:12:20,480 --> 01:12:24,960
which i'm going gonna show you and this

01:12:22,239 --> 01:12:29,360
is uh just adding a new property

01:12:24,960 --> 01:12:32,480
and what i'm gonna use is the data store

01:12:29,360 --> 01:12:34,880
it's gonna provide me a event

01:12:32,480 --> 01:12:36,000
with the network status and i'm gonna

01:12:34,880 --> 01:12:39,760
use that

01:12:36,000 --> 01:12:41,360
to change that property offline

01:12:39,760 --> 01:12:43,199
and then i can use that to show a

01:12:41,360 --> 01:12:44,080
message and that's the only thing that i

01:12:43,199 --> 01:12:47,520
had to do

01:12:44,080 --> 01:12:49,600
to make this uh work and that

01:12:47,520 --> 01:12:51,520
that's the demo so i'm gonna i'm gonna

01:12:49,600 --> 01:12:54,480
demonstrate now i hope i don't

01:12:51,520 --> 01:12:55,440
i don't mess it up again and of course

01:12:54,480 --> 01:12:59,600
there's another way

01:12:55,440 --> 01:13:02,320
of making the app you know offline oops

01:12:59,600 --> 01:13:05,520
and this is just changing this i mean

01:13:02,320 --> 01:13:07,600
this is not going to break anything

01:13:05,520 --> 01:13:08,880
and you can see the message so this is

01:13:07,600 --> 01:13:12,159
now detecting uh

01:13:08,880 --> 01:13:12,960
if i'm offline or not this is just to

01:13:12,159 --> 01:13:15,360
show you

01:13:12,960 --> 01:13:16,840
that that's working and another thing

01:13:15,360 --> 01:13:19,679
that you can see

01:13:16,840 --> 01:13:21,679
is i can actually show you i can

01:13:19,679 --> 01:13:22,719
actually show you so i'm gonna i'm gonna

01:13:21,679 --> 01:13:26,080
go offline

01:13:22,719 --> 01:13:32,880
and i'm going i'm going to write another

01:13:26,080 --> 01:13:36,080
this is another

01:13:32,880 --> 01:13:37,280
message and now i'm offline i mean it's

01:13:36,080 --> 01:13:39,600
only my browser

01:13:37,280 --> 01:13:42,400
and i'm gonna clear this so you can see

01:13:39,600 --> 01:13:45,360
how the synchronization happens

01:13:42,400 --> 01:13:46,880
and here i'm gonna very quickly go to

01:13:45,360 --> 01:13:51,040
the application

01:13:46,880 --> 01:13:54,320
and i'm going to look at my

01:13:51,040 --> 01:13:56,239
data on amplify data store and i'm gonna

01:13:54,320 --> 01:13:59,360
look at the last message

01:13:56,239 --> 01:14:02,719
and here my last message

01:13:59,360 --> 01:14:05,679
is the previous one

01:14:02,719 --> 01:14:07,040
which i i obviously messed up this is an

01:14:05,679 --> 01:14:07,840
offline message i mean this is the

01:14:07,040 --> 01:14:10,560
previous one

01:14:07,840 --> 01:14:11,840
which is already here but i'm going to

01:14:10,560 --> 01:14:13,760
create another message

01:14:11,840 --> 01:14:16,480
while offline which is the demo that i

01:14:13,760 --> 01:14:19,120
wanted to do so i'm going to create that

01:14:16,480 --> 01:14:19,840
and this is going to add a new entry

01:14:19,120 --> 01:14:22,880
here

01:14:19,840 --> 01:14:23,600
and i'm going to refresh and i get the

01:14:22,880 --> 01:14:26,320
new

01:14:23,600 --> 01:14:26,800
message so this is the message that i

01:14:26,320 --> 01:14:29,760
created

01:14:26,800 --> 01:14:31,360
offline of course what i want to see now

01:14:29,760 --> 01:14:35,760
is i want to go

01:14:31,360 --> 01:14:39,199
online and i want to see a graphql query

01:14:35,760 --> 01:14:41,600
being executed and i see it here

01:14:39,199 --> 01:14:43,679
so let's see which one is the graphql

01:14:41,600 --> 01:14:47,600
query

01:14:43,679 --> 01:14:50,960
and here i can see

01:14:47,600 --> 01:14:52,320
that there's a create chatty this is uh

01:14:50,960 --> 01:14:55,679
the result

01:14:52,320 --> 01:15:01,120
but i want to see the actual query

01:14:55,679 --> 01:15:01,120
and the query is a mutation let's see

01:15:02,800 --> 01:15:05,760
let's see if i can

01:15:08,800 --> 01:15:11,840
well this is the the mutation here you

01:15:11,040 --> 01:15:14,480
can see it

01:15:11,840 --> 01:15:15,679
uh now on the message you can see

01:15:14,480 --> 01:15:18,480
there's an input

01:15:15,679 --> 01:15:18,880
this is an argument and that's going to

01:15:18,480 --> 01:15:23,360
call

01:15:18,880 --> 01:15:27,360
create create chatty with

01:15:23,360 --> 01:15:30,719
an input which is the information

01:15:27,360 --> 01:15:33,840
from my message in this case

01:15:30,719 --> 01:15:34,880
is when it was created the id this is

01:15:33,840 --> 01:15:37,199
another offline

01:15:34,880 --> 01:15:38,880
offline message and the user and that's

01:15:37,199 --> 01:15:42,560
going to execute this

01:15:38,880 --> 01:15:46,320
graphql query which is a mutation

01:15:42,560 --> 01:15:47,600
and that's going to up upgrade the rest

01:15:46,320 --> 01:15:50,880
of the clients any

01:15:47,600 --> 01:15:51,440
any other applications and devices that

01:15:50,880 --> 01:15:54,640
are

01:15:51,440 --> 01:15:57,679
listening to this

01:15:54,640 --> 01:16:00,239
graphql api they are going to receive

01:15:57,679 --> 01:16:01,440
the subscription update from this

01:16:00,239 --> 01:16:04,719
mutation

01:16:01,440 --> 01:16:06,560
so that's that's finally the demo

01:16:04,719 --> 01:16:08,400
and of course now because i'm online

01:16:06,560 --> 01:16:10,960
this message has been now

01:16:08,400 --> 01:16:12,239
shared with the other clients so this is

01:16:10,960 --> 01:16:15,120
uh this is the demo

01:16:12,239 --> 01:16:16,880
i mean sorry about i this is the first

01:16:15,120 --> 01:16:18,719
time i did this talk and it's a little

01:16:16,880 --> 01:16:22,080
bit embarrassing

01:16:18,719 --> 01:16:24,000
but okay so that's the change uh when

01:16:22,080 --> 01:16:26,480
it's offline

01:16:24,000 --> 01:16:27,679
and this is a little bit of a overview

01:16:26,480 --> 01:16:30,480
summarizing

01:16:27,679 --> 01:16:31,760
uh of course pwas are faster because we

01:16:30,480 --> 01:16:34,480
have this pre-catch

01:16:31,760 --> 01:16:35,840
content they can work offline they can

01:16:34,480 --> 01:16:39,199
work as a separate

01:16:35,840 --> 01:16:42,640
full screen app on different devices

01:16:39,199 --> 01:16:45,760
they also have native like features

01:16:42,640 --> 01:16:49,440
so yeah i hope i

01:16:45,760 --> 01:16:52,640
i explained i covered how offline

01:16:49,440 --> 01:16:53,280
first apps should be implemented and how

01:16:52,640 --> 01:16:57,040
we

01:16:53,280 --> 01:17:00,400
use pwas to do that so that's

01:16:57,040 --> 01:17:01,120
mainly the end slide everything is

01:17:00,400 --> 01:17:05,520
possible

01:17:01,120 --> 01:17:07,920
you get this cat in the universe

01:17:05,520 --> 01:17:08,800
as a background djing a pizza so

01:17:07,920 --> 01:17:12,090
everything is

01:17:08,800 --> 01:17:14,719
everything is cool and if you want

01:17:12,090 --> 01:17:17,920
[Music]

01:17:14,719 --> 01:17:18,800
just go and try it you can get all of

01:17:17,920 --> 01:17:22,400
the source

01:17:18,800 --> 01:17:24,880
uh from the pwa settings that i i show

01:17:22,400 --> 01:17:26,960
here you can also go through the

01:17:24,880 --> 01:17:28,480
tutorial that i showed before

01:17:26,960 --> 01:17:30,400
and that's uh that's pretty much it

01:17:28,480 --> 01:17:34,000
thanks thanks for listening and sorry

01:17:30,400 --> 01:17:38,320
sorry again for that uh issue

01:17:34,000 --> 01:17:38,320
so that's that's all uh thanks

01:17:40,640 --> 01:17:44,320
thank you no worries no worries there

01:17:43,280 --> 01:17:48,159
are

01:17:44,320 --> 01:17:51,520
these things may happen uh

01:17:48,159 --> 01:17:53,360
it's really ironic that it happens once

01:17:51,520 --> 01:17:55,280
you were talking about the offline

01:17:53,360 --> 01:17:56,480
capabilities and how to improve the

01:17:55,280 --> 01:17:59,840
offline ux

01:17:56,480 --> 01:18:03,840
uh which is pretty funny uh

01:17:59,840 --> 01:18:04,239
on its own so okay so so it was it was

01:18:03,840 --> 01:18:07,360
great

01:18:04,239 --> 01:18:09,920
either way uh i'm used to hearing

01:18:07,360 --> 01:18:11,300
awesome talks by you and this was no

01:18:09,920 --> 01:18:12,719
less awesome

01:18:11,300 --> 01:18:15,040
[Music]

01:18:12,719 --> 01:18:17,679
despite the technical difficulties so no

01:18:15,040 --> 01:18:21,199
worries there for sure

01:18:17,679 --> 01:18:24,800
we have a couple of questions here ready

01:18:21,199 --> 01:18:24,800
so let's dive into them

01:18:25,679 --> 01:18:31,040
so this one is is pretty specific

01:18:28,880 --> 01:18:32,000
uh but hopefully you will understand it

01:18:31,040 --> 01:18:33,600
properly

01:18:32,000 --> 01:18:36,480
uh do you have experience with

01:18:33,600 --> 01:18:38,640
combination of amplify and terraform

01:18:36,480 --> 01:18:40,480
usually our devops guys want to know

01:18:38,640 --> 01:18:43,360
exactly what they need to

01:18:40,480 --> 01:18:45,199
spin up in cloud my experience is that

01:18:43,360 --> 01:18:48,480
you want to test amplify

01:18:45,199 --> 01:18:49,840
in in company and all you get is a lot

01:18:48,480 --> 01:18:52,239
of permissions denied

01:18:49,840 --> 01:18:54,640
and if you run it in your personal

01:18:52,239 --> 01:18:57,120
account i had hard time to let amplify

01:18:54,640 --> 01:18:57,920
to describe in detail what it is

01:18:57,120 --> 01:19:00,159
creating

01:18:57,920 --> 01:19:03,120
so i can provide list of resources and

01:19:00,159 --> 01:19:07,280
permissions to our platform guys

01:19:03,120 --> 01:19:10,159
yeah yeah yeah i mean um so amplify

01:19:07,280 --> 01:19:12,159
it's um you know it's covering this full

01:19:10,159 --> 01:19:16,080
stack serverless apps

01:19:12,159 --> 01:19:19,280
and the idea is it is for people

01:19:16,080 --> 01:19:22,000
that is not you know experienced in

01:19:19,280 --> 01:19:22,960
in the cloud you can also use it as an

01:19:22,000 --> 01:19:25,360
expert

01:19:22,960 --> 01:19:26,000
but this is this is more a tool for

01:19:25,360 --> 01:19:29,199
people that

01:19:26,000 --> 01:19:31,600
wants to start using the cloud but it's

01:19:29,199 --> 01:19:34,640
not experience it's not as experienced

01:19:31,600 --> 01:19:36,640
and that's why the cli it's so important

01:19:34,640 --> 01:19:39,440
so you can run some commands

01:19:36,640 --> 01:19:40,480
and these commands of course they have

01:19:39,440 --> 01:19:43,760
what

01:19:40,480 --> 01:19:44,400
the technology being used is cloud cloud

01:19:43,760 --> 01:19:47,440
formation

01:19:44,400 --> 01:19:50,560
templates so this will be the commands

01:19:47,440 --> 01:19:53,040
that will be executed on the

01:19:50,560 --> 01:19:55,440
on the cloud to create all of these

01:19:53,040 --> 01:19:57,600
services that we are going to consume

01:19:55,440 --> 01:19:58,560
and the services that you need on the

01:19:57,600 --> 01:20:00,960
back end

01:19:58,560 --> 01:20:01,760
so you can run everything and everything

01:20:00,960 --> 01:20:04,960
works

01:20:01,760 --> 01:20:06,000
of course i mean if you are asking how

01:20:04,960 --> 01:20:08,800
can i get

01:20:06,000 --> 01:20:10,320
my hands into these templates i mean i

01:20:08,800 --> 01:20:12,800
wouldn't recommend you to go

01:20:10,320 --> 01:20:13,760
and do that because i mean it can break

01:20:12,800 --> 01:20:16,560
everything

01:20:13,760 --> 01:20:18,080
so it's more it's more like can i have

01:20:16,560 --> 01:20:20,159
access to your bundles

01:20:18,080 --> 01:20:21,280
i mean why you want to have access to my

01:20:20,159 --> 01:20:23,360
bundles

01:20:21,280 --> 01:20:25,440
it's dangerous i think if you try to

01:20:23,360 --> 01:20:27,360
change the javascript in a bundle

01:20:25,440 --> 01:20:29,679
it's probably going to break no i mean

01:20:27,360 --> 01:20:32,320
it's not it's not a good thing

01:20:29,679 --> 01:20:33,199
but of course if you are you know

01:20:32,320 --> 01:20:35,360
experienced

01:20:33,199 --> 01:20:36,320
and you are thinking like oh i would

01:20:35,360 --> 01:20:38,880
like to see

01:20:36,320 --> 01:20:39,679
these templates so i can look how

01:20:38,880 --> 01:20:43,120
amplify

01:20:39,679 --> 01:20:46,000
how the amplified team is thinking about

01:20:43,120 --> 01:20:47,120
this and then seeing like maybe you i

01:20:46,000 --> 01:20:49,199
mean maybe you agree

01:20:47,120 --> 01:20:50,639
maybe you don't agree on the you know on

01:20:49,199 --> 01:20:53,600
the configuration

01:20:50,639 --> 01:20:54,480
and then you can maybe take that and

01:20:53,600 --> 01:20:57,040
change it

01:20:54,480 --> 01:20:58,159
and that that would be terraform i mean

01:20:57,040 --> 01:21:01,199
if you're using uh

01:20:58,159 --> 01:21:03,679
cloud formation templates on your own

01:21:01,199 --> 01:21:05,360
you can just decide everything of course

01:21:03,679 --> 01:21:07,679
amplify as a cli

01:21:05,360 --> 01:21:09,520
it's giving you like some nice defaults

01:21:07,679 --> 01:21:13,600
and it's giving you like some

01:21:09,520 --> 01:21:16,639
you know how it's called uh

01:21:13,600 --> 01:21:17,760
strong opinions about things so you

01:21:16,639 --> 01:21:21,280
would say like oh

01:21:17,760 --> 01:21:24,320
we decided that this is the best for

01:21:21,280 --> 01:21:25,440
this beginner user or we think that when

01:21:24,320 --> 01:21:28,719
you set up

01:21:25,440 --> 01:21:32,480
a web application this is the best

01:21:28,719 --> 01:21:33,600
setup but you may agree you may not

01:21:32,480 --> 01:21:35,280
agree i mean

01:21:33,600 --> 01:21:36,880
you know there's a lot of different

01:21:35,280 --> 01:21:39,760
opinions so you may say

01:21:36,880 --> 01:21:41,440
oh i don't like this template it's okay

01:21:39,760 --> 01:21:43,600
you don't like the template but this is

01:21:41,440 --> 01:21:46,000
the template we are using

01:21:43,600 --> 01:21:48,320
it's a of course if you want to go to

01:21:46,000 --> 01:21:50,800
another level a more advanced level

01:21:48,320 --> 01:21:52,080
then you can decide every single detail

01:21:50,800 --> 01:21:54,560
but amplify

01:21:52,080 --> 01:21:56,080
has made these decisions for you so it's

01:21:54,560 --> 01:21:58,960
giving you like a nice

01:21:56,080 --> 01:22:00,320
you know experience overall so that's i

01:21:58,960 --> 01:22:03,600
mean that's a compromise

01:22:00,320 --> 01:22:05,360
um what i would say is that if you are

01:22:03,600 --> 01:22:07,760
in a

01:22:05,360 --> 01:22:10,000
business environment of course there's a

01:22:07,760 --> 01:22:13,199
lot of rules there's a lot of policies

01:22:10,000 --> 01:22:16,239
there's a lot of settings just

01:22:13,199 --> 01:22:16,560
that the organization decided on their

01:22:16,239 --> 01:22:19,360
own

01:22:16,560 --> 01:22:19,760
there's no way that a tool will will

01:22:19,360 --> 01:22:22,239
know

01:22:19,760 --> 01:22:22,800
i mean how how amplified will know that

01:22:22,239 --> 01:22:25,840
you

01:22:22,800 --> 01:22:26,400
decided to close a port or decided to

01:22:25,840 --> 01:22:28,960
make

01:22:26,400 --> 01:22:30,639
something uh unavailable so it's not

01:22:28,960 --> 01:22:33,440
that easy i don't think there's a

01:22:30,639 --> 01:22:34,239
an easy way to answer that question the

01:22:33,440 --> 01:22:37,040
only

01:22:34,239 --> 01:22:38,800
issue with amplify is that it has like

01:22:37,040 --> 01:22:41,440
some strong opinions

01:22:38,800 --> 01:22:42,400
sometimes these opinions will have you

01:22:41,440 --> 01:22:44,800
know

01:22:42,400 --> 01:22:46,880
issues but that's because you change

01:22:44,800 --> 01:22:48,719
something it's not because of amplify is

01:22:46,880 --> 01:22:51,199
because you decided to close

01:22:48,719 --> 01:22:53,040
some port so you decided to i mean this

01:22:51,199 --> 01:22:56,800
is your security policies

01:22:53,040 --> 01:22:56,800
it has nothing to do with amplify

01:22:56,960 --> 01:23:01,679
lucian i hope that this answer was

01:22:59,600 --> 01:23:04,880
enough it was quite understandable

01:23:01,679 --> 01:23:07,840
uh that thank thanks a lot to gerard

01:23:04,880 --> 01:23:09,120
you lucian ask some more uh if this was

01:23:07,840 --> 01:23:12,560
not sufficient

01:23:09,120 --> 01:23:14,560
uh next question yeah next question is

01:23:12,560 --> 01:23:18,239
how do you handle sync conflicts

01:23:14,560 --> 01:23:20,800
if you can go into more detail there or

01:23:18,239 --> 01:23:22,159
yeah yeah sure so there's the strategy

01:23:20,800 --> 01:23:25,280
that um

01:23:22,159 --> 01:23:26,560
that by default is set up is the last

01:23:25,280 --> 01:23:28,400
wins

01:23:26,560 --> 01:23:30,159
so if there's i mean this is also used

01:23:28,400 --> 01:23:32,320
in databases so what

01:23:30,159 --> 01:23:33,280
what happens is if you change the same

01:23:32,320 --> 01:23:35,440
value

01:23:33,280 --> 01:23:36,639
but you change the same value later like

01:23:35,440 --> 01:23:39,600
you come later

01:23:36,639 --> 01:23:41,600
that second change is gonna win and this

01:23:39,600 --> 01:23:42,400
is the easiest one i mean if you think

01:23:41,600 --> 01:23:45,360
about it

01:23:42,400 --> 01:23:47,040
you get like two mutations from graphql

01:23:45,360 --> 01:23:47,600
you you don't need to do anything it's

01:23:47,040 --> 01:23:50,320
just

01:23:47,600 --> 01:23:50,880
you know the last mutation changes the

01:23:50,320 --> 01:23:54,639
value

01:23:50,880 --> 01:23:57,920
it was 5 then it was 10 so it's 10 now

01:23:54,639 --> 01:24:00,560
and if it's the opposite order

01:23:57,920 --> 01:24:02,480
then it's going to be 5 because if the

01:24:00,560 --> 01:24:03,520
first change is 10 but the second change

01:24:02,480 --> 01:24:06,800
is five then

01:24:03,520 --> 01:24:09,840
wins the last one wins uh not

01:24:06,800 --> 01:24:13,040
every system can work well with that

01:24:09,840 --> 01:24:16,560
so if you have uh if you have

01:24:13,040 --> 01:24:19,360
like some way of uh a way to decide

01:24:16,560 --> 01:24:20,960
you can do the same with you know github

01:24:19,360 --> 01:24:23,360
so there's a conflict

01:24:20,960 --> 01:24:24,719
you can either decide i mean you can

01:24:23,360 --> 01:24:27,520
also show like a

01:24:24,719 --> 01:24:28,480
pop-up to the user and say look there's

01:24:27,520 --> 01:24:31,280
a conflict

01:24:28,480 --> 01:24:32,080
how you how you want to sort it out so

01:24:31,280 --> 01:24:34,960
that's also

01:24:32,080 --> 01:24:36,080
an option that you can implement or you

01:24:34,960 --> 01:24:39,760
can also

01:24:36,080 --> 01:24:42,080
use an implementation using a lambda

01:24:39,760 --> 01:24:43,760
and then you can see both changes and

01:24:42,080 --> 01:24:44,239
then you can decide like what i'm going

01:24:43,760 --> 01:24:47,600
to do

01:24:44,239 --> 01:24:51,280
what i'm going to do with this situation

01:24:47,600 --> 01:24:52,000
yeah but but if you as i understand it

01:24:51,280 --> 01:24:55,120
that

01:24:52,000 --> 01:24:58,960
the default is that the latest wins yes

01:24:55,120 --> 01:25:00,800
and you cannot influence it anyhow

01:24:58,960 --> 01:25:03,040
oh no you can influence it if you want

01:25:00,800 --> 01:25:04,719
to change that conflict resolution you

01:25:03,040 --> 01:25:08,000
can use

01:25:04,719 --> 01:25:11,360
uh anything between the whole behavior

01:25:08,000 --> 01:25:13,679
to a custom behavior with will be

01:25:11,360 --> 01:25:15,600
using a lambda and then the function

01:25:13,679 --> 01:25:18,639
will decide so you can

01:25:15,600 --> 01:25:20,800
then do i mean maybe you want to show

01:25:18,639 --> 01:25:24,080
a pop-up to the user so the user can

01:25:20,800 --> 01:25:26,239
decide or maybe you have a way to decide

01:25:24,080 --> 01:25:28,639
okay but it's custom it can be because

01:25:26,239 --> 01:25:32,320
you can implement something

01:25:28,639 --> 01:25:34,719
up to a custom uh um

01:25:32,320 --> 01:25:36,800
sounds great uh the next question is is

01:25:34,719 --> 01:25:40,239
the whole state only in

01:25:36,800 --> 01:25:43,520
indexeddb yes

01:25:40,239 --> 01:25:46,320
yes it is so that was answered

01:25:43,520 --> 01:25:49,679
and about the cost of amplify what's the

01:25:46,320 --> 01:25:53,040
minimal cost for the amplify stack

01:25:49,679 --> 01:25:55,840
so when you when you want to use amplify

01:25:53,040 --> 01:25:58,480
you need to create a aws account

01:25:55,840 --> 01:25:59,840
and usually when you create aws account

01:25:58,480 --> 01:26:02,800
for the first time

01:25:59,840 --> 01:26:04,239
you have a an option which is called the

01:26:02,800 --> 01:26:06,880
free tire

01:26:04,239 --> 01:26:07,600
which lasts for one year and then

01:26:06,880 --> 01:26:09,360
there's a

01:26:07,600 --> 01:26:11,280
you know there's some quarters i mean

01:26:09,360 --> 01:26:13,440
this is not unlimited

01:26:11,280 --> 01:26:15,199
but it's pretty good it's pretty good i

01:26:13,440 --> 01:26:17,199
mean it just depends what you are doing

01:26:15,199 --> 01:26:20,320
because you can do anything from

01:26:17,199 --> 01:26:23,440
you know machine learning to uh use

01:26:20,320 --> 01:26:25,760
a database or there's so many services

01:26:23,440 --> 01:26:26,560
you need to look at the service and of

01:26:25,760 --> 01:26:29,120
course

01:26:26,560 --> 01:26:30,880
i mean this is good enough to try it and

01:26:29,120 --> 01:26:33,520
of course if you want to use it

01:26:30,880 --> 01:26:37,280
in a you know production app then you

01:26:33,520 --> 01:26:40,560
need to do some calculations

01:26:37,280 --> 01:26:41,920
but usually the price is uh is is quite

01:26:40,560 --> 01:26:44,400
cheap

01:26:41,920 --> 01:26:46,639
i mean of course depending on usage but

01:26:44,400 --> 01:26:50,400
you can you can get like a year

01:26:46,639 --> 01:26:54,159
like a year worth of uh tests

01:26:50,400 --> 01:26:55,920
let's say the experiment yeah

01:26:54,159 --> 01:26:57,360
yeah because it's pretty pretty hard to

01:26:55,920 --> 01:26:59,920
define what the minimal cost

01:26:57,360 --> 01:27:01,760
is like the minimal cost is that what

01:26:59,920 --> 01:27:04,000
nobody is using it but it's

01:27:01,760 --> 01:27:05,120
somehow running and is ready or was the

01:27:04,000 --> 01:27:07,920
minimal cost

01:27:05,120 --> 01:27:08,960
uh but yeah that was quite a sufficient

01:27:07,920 --> 01:27:11,920
answer you have

01:27:08,960 --> 01:27:12,480
some year for up to one year where you

01:27:11,920 --> 01:27:15,199
can

01:27:12,480 --> 01:27:16,800
try it and it's pretty reasonable and

01:27:15,199 --> 01:27:19,360
then

01:27:16,800 --> 01:27:21,600
it's reasonably cheap unless you are

01:27:19,360 --> 01:27:25,440
just a heavy user

01:27:21,600 --> 01:27:29,840
doesn't it it probably is sums up

01:27:25,440 --> 01:27:33,120
obviously uh okay that was all from

01:27:29,840 --> 01:27:35,199
the audience so thanks a lot uh

01:27:33,120 --> 01:27:36,400
gerard for answering all the questions

01:27:35,199 --> 01:27:39,760
which were here

01:27:36,400 --> 01:27:42,800
uh and uh once again no no worries

01:27:39,760 --> 01:27:43,840
uh it was it was really great so thank

01:27:42,800 --> 01:27:47,520
you for

01:27:43,840 --> 01:27:51,199
for giving us a heads up my pleasure

01:27:47,520 --> 01:27:51,199
for the aws amplified

01:27:51,760 --> 01:27:57,120
okay guys so let's wrap it up

01:27:58,840 --> 01:28:03,600
uh uh

01:28:01,040 --> 01:28:04,320
i will invite you all to our slack

01:28:03,600 --> 01:28:07,360
channel

01:28:04,320 --> 01:28:12,320
so feel free to discuss some more there

01:28:07,360 --> 01:28:12,320
if you feel like it go to go to

01:28:12,840 --> 01:28:17,199
reactiveonlinemeetups.like.com

01:28:14,159 --> 01:28:19,679
uh join uh there is a history

01:28:17,199 --> 01:28:21,199
uh with all the previous talks uh there

01:28:19,679 --> 01:28:24,480
will be discussion to the

01:28:21,199 --> 01:28:26,800
current current talks uh also

01:28:24,480 --> 01:28:28,560
speakers are there available so feel

01:28:26,800 --> 01:28:32,000
free to ask there

01:28:28,560 --> 01:28:34,800
uh also you will have an uh uh

01:28:32,000 --> 01:28:35,440
you will have an option to to give us a

01:28:34,800 --> 01:28:38,400
feedback

01:28:35,440 --> 01:28:39,360
and fill the feedback form uh for us

01:28:38,400 --> 01:28:42,239
after

01:28:39,360 --> 01:28:43,440
this this stream is over so please do so

01:28:42,239 --> 01:28:46,800
give us some suggestion

01:28:43,440 --> 01:28:50,560
how to improve uh please do not mention

01:28:46,800 --> 01:28:51,040
that uh some some someone went offline

01:28:50,560 --> 01:28:53,040
during

01:28:51,040 --> 01:28:54,639
during this talk this is something which

01:28:53,040 --> 01:28:58,560
you just cannot influence

01:28:54,639 --> 01:29:01,600
so just please be reasonable there uh

01:28:58,560 --> 01:29:02,800
and and and give us give us your

01:29:01,600 --> 01:29:05,040
opinions uh

01:29:02,800 --> 01:29:06,000
maybe some topic suggestions we will

01:29:05,040 --> 01:29:08,639
just go through

01:29:06,000 --> 01:29:09,199
everything and we will try to reflect it

01:29:08,639 --> 01:29:12,320
and

01:29:09,199 --> 01:29:15,040
improve ourselves uh and yeah

01:29:12,320 --> 01:29:16,560
that's it uh enjoy the rest of the

01:29:15,040 --> 01:29:18,719
evening to all of you

01:29:16,560 --> 01:29:20,719
uh thank you for joining today there

01:29:18,719 --> 01:29:23,840
will be another editions of the

01:29:20,719 --> 01:29:25,520
reactive uh online meetups so just stay

01:29:23,840 --> 01:29:28,239
tuned

01:29:25,520 --> 01:29:29,199
we will inform about the topic speakers

01:29:28,239 --> 01:29:31,679
and the date

01:29:29,199 --> 01:29:33,440
about everything on the social networks

01:29:31,679 --> 01:29:36,639
twitter and facebook

01:29:33,440 --> 01:29:46,320
so stay tuned thank you

01:29:36,639 --> 01:29:46,320

YouTube URL: https://www.youtube.com/watch?v=rTM7pITIB44


