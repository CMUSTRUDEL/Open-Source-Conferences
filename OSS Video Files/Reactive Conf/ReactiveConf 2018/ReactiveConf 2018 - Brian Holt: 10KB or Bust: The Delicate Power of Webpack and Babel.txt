Title: ReactiveConf 2018 - Brian Holt: 10KB or Bust: The Delicate Power of Webpack and Babel
Publication date: 2018-11-05
Playlist: ReactiveConf 2018
Description: 
	29th - 31st October 2018, Prague, Czech Republic
https://reactiveconf.com/
Main stage
-------------------------------------------------------------------
10KB or Bust: The Delicate Power of Webpack and Babel

Your app is bigger and slower than it needs to be. Without rewriting app code we can squeeze more performance out of your code by tweaking Webpack and Babel. These tools are immensely powerful but itâ€™s a delicate dance to get them to play nice. This talk is full of tips and tricks to get you there.
Captions: 
	00:00:05,220 --> 00:00:20,279
I need you all to imagine for a second

00:00:15,570 --> 00:00:23,519
that you are all now investors in

00:00:20,279 --> 00:00:25,769
Silicon Valley I need you to be part of

00:00:23,519 --> 00:00:29,249
this the actual theatrical experience

00:00:25,769 --> 00:00:31,439
with me so if you're gonna be investors

00:00:29,249 --> 00:00:33,960
in Silicon Valley you're gonna need the

00:00:31,439 --> 00:00:37,560
uniform so I need all of you to put on

00:00:33,960 --> 00:00:39,900
your finest Patagonia I need you to put

00:00:37,560 --> 00:00:44,430
on your best all Birds

00:00:39,900 --> 00:00:47,190
and above all if you're gonna be a VC in

00:00:44,430 --> 00:00:48,690
Silicon Valley you need a vest I don't

00:00:47,190 --> 00:00:53,750
know why but you just have to wear a

00:00:48,690 --> 00:00:56,970
vest it's very very important so I as a

00:00:53,750 --> 00:01:00,990
VCS I'm now going to pitch you my best

00:00:56,970 --> 00:01:02,820
idea for a company so someone come up

00:01:00,990 --> 00:01:09,780
with their brand new iPhone this is the

00:01:02,820 --> 00:01:12,210
iPhone xx XS and our friend here she

00:01:09,780 --> 00:01:15,330
needs to get somewhere really really

00:01:12,210 --> 00:01:18,060
quickly really quickly so she's gonna

00:01:15,330 --> 00:01:19,710
call a helicopter so we're gonna build

00:01:18,060 --> 00:01:22,080
over four helicopters because this is a

00:01:19,710 --> 00:01:26,550
great idea you didn't know that you need

00:01:22,080 --> 00:01:28,380
this but now you do so if he she could

00:01:26,550 --> 00:01:30,870
be calling this just from somewhere in

00:01:28,380 --> 00:01:33,810
Prague maybe maybe from the castle

00:01:30,870 --> 00:01:35,670
somewhere or from Charles Bridge or

00:01:33,810 --> 00:01:39,690
something like that but maybe she needs

00:01:35,670 --> 00:01:42,030
to call her helicopter from the jungle I

00:01:39,690 --> 00:01:44,909
don't know maybe she's in the jungle and

00:01:42,030 --> 00:01:46,979
she needs a helicopter maybe she's in

00:01:44,909 --> 00:01:50,130
the desert she might need a helicopter

00:01:46,979 --> 00:01:51,930
there right he's a very important thing

00:01:50,130 --> 00:01:53,580
so if she's gonna be able to call these

00:01:51,930 --> 00:01:55,260
things from there we're gonna have to be

00:01:53,580 --> 00:01:57,030
very off line sensitive right so we're

00:01:55,260 --> 00:01:59,850
gonna have service workers and things

00:01:57,030 --> 00:02:02,100
like that and I mean people that need

00:01:59,850 --> 00:02:03,390
helicopters have all sorts of phone

00:02:02,100 --> 00:02:08,310
needs right they might have the latest

00:02:03,390 --> 00:02:11,239
iPhone like her xxx s she might have an

00:02:08,310 --> 00:02:11,239
old version of Android

00:02:11,569 --> 00:02:15,600
she might have a flip phone right people

00:02:13,980 --> 00:02:17,490
flip phones need helicopters right

00:02:15,600 --> 00:02:19,680
that's a that's a thing so we're gonna

00:02:17,490 --> 00:02:21,990
have to write a Java applet for that and

00:02:19,680 --> 00:02:24,150
maybe I mean even between playing games

00:02:21,990 --> 00:02:25,260
of snake she just needs to like get that

00:02:24,150 --> 00:02:27,959
as well so we're gonna have to build our

00:02:25,260 --> 00:02:32,420
app for this as well and most

00:02:27,959 --> 00:02:38,240
importantly we need it for this platform

00:02:32,420 --> 00:02:38,240
it's Windows Phone it's the best one so

00:02:39,110 --> 00:02:45,900
who's ready to fund my idea I don't see

00:02:43,530 --> 00:02:47,580
many hands and you must have them like

00:02:45,900 --> 00:02:52,110
unlimited money if you're gonna fund

00:02:47,580 --> 00:02:54,060
that idea why why would you not fund

00:02:52,110 --> 00:02:55,920
this idea well one it's a terrible idea

00:02:54,060 --> 00:02:58,380
that's that's the first reason but

00:02:55,920 --> 00:03:00,330
secondly I was just focused on the

00:02:58,380 --> 00:03:03,480
totally the wrong things right like I

00:03:00,330 --> 00:03:05,850
was focused on ok I need to call a

00:03:03,480 --> 00:03:09,150
helicopter and I also needed to work on

00:03:05,850 --> 00:03:10,709
super old phones that makes zero sense

00:03:09,150 --> 00:03:12,330
if someone's gonna be ordering a

00:03:10,709 --> 00:03:14,489
helicopter they're probably gonna have

00:03:12,330 --> 00:03:17,930
an iPhone right just kind of makes sense

00:03:14,489 --> 00:03:22,069
they're probably not using Windows Phone

00:03:17,930 --> 00:03:26,870
that's probably gonna get me fired ok

00:03:22,069 --> 00:03:29,810
I have a second idea for you so we're

00:03:26,870 --> 00:03:32,480
gonna build a new e-commerce experience

00:03:29,810 --> 00:03:37,310
and we're gonna build it specifically

00:03:32,480 --> 00:03:39,260
for India right but the the the crown

00:03:37,310 --> 00:03:41,349
jewel of that this is only gonna work on

00:03:39,260 --> 00:03:43,819
iPhone XS Macs

00:03:41,349 --> 00:03:46,609
now why is that a terrible idea

00:03:43,819 --> 00:03:48,260
you're gonna fund that one I don't see

00:03:46,609 --> 00:03:50,209
many hands for that one either because

00:03:48,260 --> 00:03:52,040
they're like the iPhone has no

00:03:50,209 --> 00:03:53,959
penetration in India so why would I

00:03:52,040 --> 00:03:58,510
start building an e-commerce experience

00:03:53,959 --> 00:04:00,379
only for one particular phone for India

00:03:58,510 --> 00:04:03,349
so hopefully you're getting the idea

00:04:00,379 --> 00:04:07,969
here if I'm trying to mismatch product

00:04:03,349 --> 00:04:09,769
ideas with demographics so this talks

00:04:07,969 --> 00:04:13,069
called 10 kilobytes our bust the

00:04:09,769 --> 00:04:15,530
delicate power of web pack and Babel I

00:04:13,069 --> 00:04:19,880
work for this tiny startup you might

00:04:15,530 --> 00:04:23,360
have heard of it we prefer Microsoft is

00:04:19,880 --> 00:04:25,370
actually how you pronounce it do a

00:04:23,360 --> 00:04:27,560
podcast on the side sometimes called

00:04:25,370 --> 00:04:29,570
fronting happy hour it's mostly us just

00:04:27,560 --> 00:04:32,389
drinking and ranting about JavaScript

00:04:29,570 --> 00:04:34,370
it's kind of fun sometimes you can find

00:04:32,389 --> 00:04:37,610
me on front of masters these are some of

00:04:34,370 --> 00:04:40,370
the other places that I've worked and I

00:04:37,610 --> 00:04:42,590
currently live in Seattle

00:04:40,370 --> 00:04:44,120
you used to be from Utah and I also

00:04:42,590 --> 00:04:49,159
lived in Torino for two and a half years

00:04:44,120 --> 00:04:52,270
so go Aventis and I just show my puppy

00:04:49,159 --> 00:05:00,949
cousins pictures adorable okay moving on

00:04:52,270 --> 00:05:03,949
so this tweet bothers me factor it's a

00:05:00,949 --> 00:05:05,840
year since this is tweeted it bothers me

00:05:03,949 --> 00:05:07,969
I agree with the fundamental premise

00:05:05,840 --> 00:05:10,520
here but I also just hate the way this

00:05:07,969 --> 00:05:12,650
is phrased so let me read it for you I

00:05:10,520 --> 00:05:14,240
only ask the frameworks put warnings on

00:05:12,650 --> 00:05:18,259
their products when they can't be

00:05:14,240 --> 00:05:20,360
accessible eg this site is best viewed

00:05:18,259 --> 00:05:22,580
with a high net worth right like this is

00:05:20,360 --> 00:05:24,440
the most condescending just terrible

00:05:22,580 --> 00:05:26,169
stuff that I have ever read but I also

00:05:24,440 --> 00:05:29,419
agree with the kind of the premise here

00:05:26,169 --> 00:05:31,099
but I mean come on like no one sets out

00:05:29,419 --> 00:05:32,630
and goes to work and was like I'm gonna

00:05:31,099 --> 00:05:33,660
screw over people that don't have nice

00:05:32,630 --> 00:05:36,570
phones right

00:05:33,660 --> 00:05:39,600
I hope no one's doing that otherwise you

00:05:36,570 --> 00:05:40,800
suck like we're trying our best right

00:05:39,600 --> 00:05:43,290
like we go into work and we're just

00:05:40,800 --> 00:05:46,560
trying to ship product and if our

00:05:43,290 --> 00:05:48,120
product demands that we ship for like

00:05:46,560 --> 00:05:49,920
low-end phones and stuff like that we

00:05:48,120 --> 00:05:51,690
try and do that but otherwise we're just

00:05:49,920 --> 00:05:54,420
trying to ship features and fix bugs

00:05:51,690 --> 00:05:55,980
right you're trying to survive like on a

00:05:54,420 --> 00:05:58,230
fundamental level you are try not to get

00:05:55,980 --> 00:06:00,690
fired and your company is trying to stay

00:05:58,230 --> 00:06:02,640
afloat so no one's setting out to do

00:06:00,690 --> 00:06:07,050
this we're just not prioritizing these

00:06:02,640 --> 00:06:09,270
things sometimes so what I kind of want

00:06:07,050 --> 00:06:11,270
to talk to you here about is that not

00:06:09,270 --> 00:06:14,820
every app needs to work on a 2g

00:06:11,270 --> 00:06:18,750
low-power phone you need to know who

00:06:14,820 --> 00:06:20,730
you're selling to right as front end

00:06:18,750 --> 00:06:22,440
developers or as I imagine many of you

00:06:20,730 --> 00:06:24,450
are it just developers in general or

00:06:22,440 --> 00:06:25,530
designers or product managers or

00:06:24,450 --> 00:06:28,530
whatever you are I hope you're looking

00:06:25,530 --> 00:06:30,060
at your analytics if I ask you who are

00:06:28,530 --> 00:06:31,620
your users where are they coming from

00:06:30,060 --> 00:06:33,240
what devices are they using what

00:06:31,620 --> 00:06:35,490
operating systems are they using how

00:06:33,240 --> 00:06:36,780
fast is their connection these are

00:06:35,490 --> 00:06:39,840
questions you should probably be

00:06:36,780 --> 00:06:41,430
somewhat familiar with and if not you

00:06:39,840 --> 00:06:42,870
should go ask about that because if

00:06:41,430 --> 00:06:45,510
you're not building your application for

00:06:42,870 --> 00:06:47,790
your users who are you building it for

00:06:45,510 --> 00:06:49,169
and the answer that's probably yourself

00:06:47,790 --> 00:06:51,270
right you're probably building it to

00:06:49,169 --> 00:06:53,550
make it look nice on your phone and hope

00:06:51,270 --> 00:06:58,530
it works on other phones works on my

00:06:53,550 --> 00:07:00,090
machine that being said today we're

00:06:58,530 --> 00:07:01,890
gonna we're gonna be talking about

00:07:00,090 --> 00:07:03,480
teaching and low-power devices because

00:07:01,890 --> 00:07:04,950
if you're building for that it's it's

00:07:03,480 --> 00:07:09,450
going to probably look good on other

00:07:04,950 --> 00:07:11,610
devices as well so I think it's useful

00:07:09,450 --> 00:07:13,020
to see these numbers up front I've the

00:07:11,610 --> 00:07:18,330
entire time I've been in Prague I've had

00:07:13,020 --> 00:07:22,680
great 4G LTE it's gone super fast so you

00:07:18,330 --> 00:07:25,770
are in the same boat I am in Seattle so

00:07:22,680 --> 00:07:28,440
2g when I say 2g I'm talking about more

00:07:25,770 --> 00:07:32,250
or less 14 kilobits per second when I

00:07:28,440 --> 00:07:34,260
talk about 3G going by CDMA which is the

00:07:32,250 --> 00:07:36,169
American way of doing it

00:07:34,260 --> 00:07:39,180
it's a hundred and forty four kilobits

00:07:36,169 --> 00:07:42,030
4G is about a hundred thousand kilobits

00:07:39,180 --> 00:07:43,710
per second and gigabit fiber is about a

00:07:42,030 --> 00:07:45,630
million kilobits per second so I think

00:07:43,710 --> 00:07:47,470
it's useful to see how disparate those

00:07:45,630 --> 00:07:49,300
those things are so if you do it

00:07:47,470 --> 00:07:51,820
you're working on your project and it's

00:07:49,300 --> 00:07:53,500
really fast and you're on gigabit you're

00:07:51,820 --> 00:07:56,920
not seeing what it's like on 14 right

00:07:53,500 --> 00:08:01,300
that's quite a bit slower how many of

00:07:56,920 --> 00:08:03,340
you recognize this quite a few this was

00:08:01,300 --> 00:08:05,500
my childhood I spent a bunch of time on

00:08:03,340 --> 00:08:08,800
this thing listening to its sweet song

00:08:05,500 --> 00:08:12,930
is it dialed into the internet I can

00:08:08,800 --> 00:08:12,930
still hear it in my head all right

00:08:13,230 --> 00:08:20,290
this thing was 56 kilobits per second so

00:08:18,160 --> 00:08:25,180
I want you to imagine for a second

00:08:20,290 --> 00:08:29,110
2g is 14 kilobits per second this thing

00:08:25,180 --> 00:08:32,409
that we were using G's 20 years ago

00:08:29,110 --> 00:08:34,500
right something like that it's like four

00:08:32,409 --> 00:08:38,409
times faster than that

00:08:34,500 --> 00:08:40,090
like that's that's a that's a tough pill

00:08:38,409 --> 00:08:42,580
to swallow right like I remember like

00:08:40,090 --> 00:08:45,010
leaving my computer on to download demos

00:08:42,580 --> 00:08:48,430
overnight right my parents would get

00:08:45,010 --> 00:08:51,250
furious me excited run up the pill but

00:08:48,430 --> 00:08:54,339
it's actually worse than that right it's

00:08:51,250 --> 00:08:56,650
worse than that because 2g is slower

00:08:54,339 --> 00:08:58,960
than that device but it's worse now

00:08:56,650 --> 00:09:00,580
because websites are so much bigger than

00:08:58,960 --> 00:09:03,100
they used to be right like everyone was

00:09:00,580 --> 00:09:05,140
on 56k back in the day so they were

00:09:03,100 --> 00:09:09,310
designing websites to be loaded on that

00:09:05,140 --> 00:09:10,750
but now websites are on you know gigabit

00:09:09,310 --> 00:09:13,990
and they're all being designed out of

00:09:10,750 --> 00:09:16,930
San Francisco and like these big western

00:09:13,990 --> 00:09:18,160
cities like Prague and we're designing

00:09:16,930 --> 00:09:19,780
for ourselves we're not necessary

00:09:18,160 --> 00:09:28,210
designing for our users that kind of

00:09:19,780 --> 00:09:28,750
sucks so I'm gonna start loading this

00:09:28,210 --> 00:09:31,810
for you

00:09:28,750 --> 00:09:34,780
and we're gonna watch linkedin.com load

00:09:31,810 --> 00:09:36,730
on 2g now I want everyone to put their

00:09:34,780 --> 00:09:37,720
phones away I see anyone with their

00:09:36,730 --> 00:09:40,240
phone I'm gonna throw something at you

00:09:37,720 --> 00:09:45,430
you need you to watch this I need you to

00:09:40,240 --> 00:09:47,290
suffer right now okay how we are 20

00:09:45,430 --> 00:09:49,720
seconds into this and nothing has showed

00:09:47,290 --> 00:09:53,710
up I promise it's working like you can

00:09:49,720 --> 00:09:56,260
see the spinning at the top right 28

00:09:53,710 --> 00:09:59,070
seconds and we finally get a loading

00:09:56,260 --> 00:09:59,070
spitter right

00:09:59,660 --> 00:10:07,260
now how many you think any user would

00:10:03,089 --> 00:10:09,779
have stayed past this point okay we are

00:10:07,260 --> 00:10:11,700
now 45 seconds in we're starting to have

00:10:09,779 --> 00:10:14,790
like basically the first useful paint

00:10:11,700 --> 00:10:17,310
right this is a multi-billion dollar

00:10:14,790 --> 00:10:19,380
company that Microsoft bought I think

00:10:17,310 --> 00:10:19,800
for 17 billion dollars or something like

00:10:19,380 --> 00:10:23,730
that

00:10:19,800 --> 00:10:24,420
and it's having a tough time loading at

00:10:23,730 --> 00:10:26,430
all

00:10:24,420 --> 00:10:27,870
now to be fair linkedin has other

00:10:26,430 --> 00:10:29,700
strategies for loading on low-power

00:10:27,870 --> 00:10:31,290
devices I'm taking the desktop

00:10:29,700 --> 00:10:34,110
experience and loading on 2g it's not

00:10:31,290 --> 00:10:34,890
totally apples to apples but it's kind

00:10:34,110 --> 00:10:37,080
of ridiculous

00:10:34,890 --> 00:10:41,850
we're 1.2 minutes in and it's still not

00:10:37,080 --> 00:10:46,410
fully finished are we done yet we're

00:10:41,850 --> 00:10:47,820
done yet that took 1.3 minutes okay now

00:10:46,410 --> 00:10:49,860
I just want to contrast this an

00:10:47,820 --> 00:10:52,200
experience for you this is a different

00:10:49,860 --> 00:10:55,740
website called treebo com it's a Motel

00:10:52,200 --> 00:10:57,600
chain and in India and this is the exact

00:10:55,740 --> 00:11:03,080
same speed okay are you ready for this

00:10:57,600 --> 00:11:05,880
I'm gonna press the button now that's

00:11:03,080 --> 00:11:12,240
unbelievable right yeah that's that's

00:11:05,880 --> 00:11:14,730
worthy of applause so they loaded the

00:11:12,240 --> 00:11:16,380
entire website in 12 seconds but it the

00:11:14,730 --> 00:11:19,230
first useful paint was less than a

00:11:16,380 --> 00:11:20,520
second on 2g right and the techniques

00:11:19,230 --> 00:11:23,700
they used on this are not terribly

00:11:20,520 --> 00:11:26,250
difficult addy Osmani of Google has an

00:11:23,700 --> 00:11:30,300
amazing write up like on how they did it

00:11:26,250 --> 00:11:31,740
and you absolutely should read it so if

00:11:30,300 --> 00:11:33,440
this is a competition than San

00:11:31,740 --> 00:11:38,430
Francisco's getting at the peach kicked

00:11:33,440 --> 00:11:39,690
in the worst way so hopefully at this

00:11:38,430 --> 00:11:42,420
point you're sitting there I was like I

00:11:39,690 --> 00:11:44,190
feel bad right I want you to feel bad

00:11:42,420 --> 00:11:46,920
I've been trying to shame you since I

00:11:44,190 --> 00:11:48,300
got up on the stage so this is how I

00:11:46,920 --> 00:11:50,459
feel most of the time when I'm trying to

00:11:48,300 --> 00:11:53,040
like you know I know something needs to

00:11:50,459 --> 00:11:54,089
be done but I don't know what to do just

00:11:53,040 --> 00:12:00,630
feel like I'm floating out in space

00:11:54,089 --> 00:12:02,779
right this dog is my spirit animal so

00:12:00,630 --> 00:12:05,490
I'm gonna give you a bunch of tips

00:12:02,779 --> 00:12:07,020
things you can do some of them will be

00:12:05,490 --> 00:12:09,120
very easy for you to accomplish things

00:12:07,020 --> 00:12:11,020
that you should go do right now and some

00:12:09,120 --> 00:12:12,970
of the things are going to be like

00:12:11,020 --> 00:12:14,680
should change your entire stack right so

00:12:12,970 --> 00:12:16,480
some of them are not necessarily as easy

00:12:14,680 --> 00:12:18,730
but you can consider maybe when you're

00:12:16,480 --> 00:12:21,250
starting your next project so the first

00:12:18,730 --> 00:12:25,180
thing you should consider is question

00:12:21,250 --> 00:12:27,190
your framework right if you choose

00:12:25,180 --> 00:12:29,410
angular which angular is a fantastic

00:12:27,190 --> 00:12:31,600
framework I know some of the core team

00:12:29,410 --> 00:12:32,950
members and they're just doing amazing

00:12:31,600 --> 00:12:35,800
things with the technology but if you

00:12:32,950 --> 00:12:38,860
choose angular today using the current

00:12:35,800 --> 00:12:40,990
compiler you're out of the gate like 62

00:12:38,860 --> 00:12:43,780
kilobits right which means that without

00:12:40,990 --> 00:12:47,380
having written any app code or importing

00:12:43,780 --> 00:12:49,170
any other modules you're in 2 seconds 2

00:12:47,380 --> 00:12:53,070
seconds of loading just your framework

00:12:49,170 --> 00:12:55,750
that sucks right that sucks a little bit

00:12:53,070 --> 00:12:59,290
react which is my tool of choice even

00:12:55,750 --> 00:13:01,480
then you're still in a second right view

00:12:59,290 --> 00:13:03,340
0.7 seconds and so when you start

00:13:01,480 --> 00:13:05,110
getting into things like Inferno and

00:13:03,340 --> 00:13:08,110
pre-act and spelt and some of these a

00:13:05,110 --> 00:13:09,190
little more focused frameworks then you

00:13:08,110 --> 00:13:10,750
can start getting into these like the

00:13:09,190 --> 00:13:12,280
0.1 seconds right and that like that's

00:13:10,750 --> 00:13:13,630
acceptable so that's something you might

00:13:12,280 --> 00:13:18,400
think about if you're targeting those

00:13:13,630 --> 00:13:20,610
kind of users Babel preset em you should

00:13:18,400 --> 00:13:25,270
upgrade to Babel seven when that's

00:13:20,610 --> 00:13:27,670
convenient for you and you should

00:13:25,270 --> 00:13:31,030
specifically upgrade to preset em Babel

00:13:27,670 --> 00:13:32,320
preset es2015 is deprecated you should

00:13:31,030 --> 00:13:34,510
not be using that anymore

00:13:32,320 --> 00:13:35,770
it's yelling at you and your console if

00:13:34,510 --> 00:13:37,270
you are still using it but if you are

00:13:35,770 --> 00:13:39,490
this is something you should definitely

00:13:37,270 --> 00:13:41,200
go change and you can just go change to

00:13:39,490 --> 00:13:44,440
preset em and it should just work the

00:13:41,200 --> 00:13:47,260
same way reason being here is preset em

00:13:44,440 --> 00:13:49,710
as we get newer newer browsers will

00:13:47,260 --> 00:13:53,560
compile less and less of your app and

00:13:49,710 --> 00:13:55,870
yes Babel preset es 2015 will forever

00:13:53,560 --> 00:13:58,150
transpile all of your app into es 5

00:13:55,870 --> 00:14:01,420
which is not necessarily going to match

00:13:58,150 --> 00:14:04,990
your demographics this is an advanced

00:14:01,420 --> 00:14:07,540
technique it's Christopher Baxter again

00:14:04,990 --> 00:14:11,590
from Google who I used to work with at

00:14:07,540 --> 00:14:12,940
Netflix and LinkedIn wrote it some blog

00:14:11,590 --> 00:14:15,190
posts about how you can do this you can

00:14:12,940 --> 00:14:16,900
basically transpile your app twice once

00:14:15,190 --> 00:14:19,900
for new browsers and once for old block

00:14:16,900 --> 00:14:21,740
browsers and then using the script type

00:14:19,900 --> 00:14:23,690
equals module

00:14:21,740 --> 00:14:25,340
target different browsers because only

00:14:23,690 --> 00:14:27,980
newer browsers will download the type

00:14:25,340 --> 00:14:29,360
hickel's module there's some more nuance

00:14:27,980 --> 00:14:34,610
to it you should definitely read the

00:14:29,360 --> 00:14:37,880
blog post on it tree-shaking it's an

00:14:34,610 --> 00:14:41,870
interesting one so this particular bit

00:14:37,880 --> 00:14:44,360
of code up here once you compile it and

00:14:41,870 --> 00:14:47,690
not gzip it is seventy three point three

00:14:44,360 --> 00:14:51,590
kilobits kilobytes rather of code which

00:14:47,690 --> 00:14:53,810
is unbelievable right to effective lines

00:14:51,590 --> 00:14:55,610
of code and I yield it's seventy three

00:14:53,810 --> 00:14:58,010
point three kilobytes of data why

00:14:55,610 --> 00:15:02,660
because this is loading all of lodash

00:14:58,010 --> 00:15:04,580
for one call and that kind of sucks who

00:15:02,660 --> 00:15:11,740
in here thinks that you've used every

00:15:04,580 --> 00:15:14,270
method in lo - nope good no one's lying

00:15:11,740 --> 00:15:16,010
no one right there's like 200 methods

00:15:14,270 --> 00:15:18,050
and you use like three of them and then

00:15:16,010 --> 00:15:21,620
you don't use the other ones right yet

00:15:18,050 --> 00:15:25,050
we all loaded in our application so

00:15:21,620 --> 00:15:26,410
let's talk about how you can actually

00:15:25,050 --> 00:15:28,730
[Music]

00:15:26,410 --> 00:15:30,860
load less of it so the important part

00:15:28,730 --> 00:15:33,560
that you want to see here is modules

00:15:30,860 --> 00:15:36,770
false they're right oops

00:15:33,560 --> 00:15:39,020
modules false that's telling babble to

00:15:36,770 --> 00:15:42,770
not transpile the modules to let webpack

00:15:39,020 --> 00:15:45,470
or whatever bundler you're using compile

00:15:42,770 --> 00:15:49,130
it because at that point then it can use

00:15:45,470 --> 00:15:52,790
the new es6 modules ESM modules which is

00:15:49,130 --> 00:15:55,370
redundant the new ES modules to do

00:15:52,790 --> 00:15:57,740
tree-shaking which were do live coding

00:15:55,370 --> 00:16:01,060
inclusion right tree-shaking is

00:15:57,740 --> 00:16:03,230
synonymous with live code conclusion

00:16:01,060 --> 00:16:04,880
browsers last two versions this is an

00:16:03,230 --> 00:16:07,190
anti-pattern you should not be doing

00:16:04,880 --> 00:16:08,780
this anymore the reason being is this

00:16:07,190 --> 00:16:11,600
will do last two versions of all

00:16:08,780 --> 00:16:13,490
browsers including dead browsers so

00:16:11,600 --> 00:16:15,140
you'll forever be doing basically what I

00:16:13,490 --> 00:16:17,330
was telling before you'll be trans

00:16:15,140 --> 00:16:19,610
playing oh love your code for every

00:16:17,330 --> 00:16:24,280
browser so this is what you should be

00:16:19,610 --> 00:16:24,280
doing now 0.25% and not dead

00:16:24,400 --> 00:16:28,040
modules false that's what I was talking

00:16:26,420 --> 00:16:30,860
about before so going back to our

00:16:28,040 --> 00:16:32,660
original example here if you just do

00:16:30,860 --> 00:16:34,540
that and allow tree-shaking to happen

00:16:32,660 --> 00:16:37,660
which is Louet lo - -

00:16:34,540 --> 00:16:41,770
yes is doing then we're let able to get

00:16:37,660 --> 00:16:43,510
11.1 kilobytes kilobytes so you can

00:16:41,770 --> 00:16:45,610
visualize that this is the one that I

00:16:43,510 --> 00:16:49,060
just showed you and this is the first

00:16:45,610 --> 00:16:50,650
one right so you can see this is not

00:16:49,060 --> 00:16:54,160
loading very many modules this is

00:16:50,650 --> 00:16:56,500
loading everything in lo - so definitely

00:16:54,160 --> 00:16:59,200
something you should be doing tree

00:16:56,500 --> 00:17:01,180
shaking is no silver bullet I thought

00:16:59,200 --> 00:17:05,470
that was very clever apparently no one

00:17:01,180 --> 00:17:10,959
thinks I'm funny thank you that was the

00:17:05,470 --> 00:17:13,240
best pity clap I ever caught if you do

00:17:10,959 --> 00:17:15,430
if your tree shaking something like you

00:17:13,240 --> 00:17:17,350
know react right react doesn't have any

00:17:15,430 --> 00:17:18,880
dead code to eliminate or at least has a

00:17:17,350 --> 00:17:21,030
very little dead code to eliminate so

00:17:18,880 --> 00:17:23,860
you're not really doing very much right

00:17:21,030 --> 00:17:26,110
dead code elimination or rather live

00:17:23,860 --> 00:17:27,850
code inclusion is much more useful for

00:17:26,110 --> 00:17:30,190
things like low - and jQuery where

00:17:27,850 --> 00:17:31,630
you're not using everything use

00:17:30,190 --> 00:17:36,070
built-ins this is another feature of

00:17:31,630 --> 00:17:38,080
Babel so the basic idea here is use

00:17:36,070 --> 00:17:42,250
built-ins usage this is new with Babel

00:17:38,080 --> 00:17:44,110
seven I believe it will only import the

00:17:42,250 --> 00:17:46,390
polyfills that you need at the time

00:17:44,110 --> 00:17:47,830
right so if it detects that your

00:17:46,390 --> 00:17:49,870
environment doesn't support promises

00:17:47,830 --> 00:17:52,750
it'll wait for you to actually use

00:17:49,870 --> 00:17:55,500
promises before importing the polyfill

00:17:52,750 --> 00:17:57,940
for it which is really great

00:17:55,500 --> 00:17:59,500
loose mode this one's been around for a

00:17:57,940 --> 00:18:02,080
long time but just to kind of show you

00:17:59,500 --> 00:18:04,300
here this is the polyfill for classes on

00:18:02,080 --> 00:18:07,480
the left and the one on the right is the

00:18:04,300 --> 00:18:09,010
polyfill for classes in loose mode but

00:18:07,480 --> 00:18:10,960
the idea behind loose mode is that

00:18:09,010 --> 00:18:13,540
something like classes has a lot of edge

00:18:10,960 --> 00:18:15,490
cases and most time you're not doing

00:18:13,540 --> 00:18:17,710
crazy stuff with that will reach those

00:18:15,490 --> 00:18:19,090
edge cases so you're safe to kind of

00:18:17,710 --> 00:18:20,950
just assume that you're gonna use it in

00:18:19,090 --> 00:18:23,440
the same way and that's what loose mode

00:18:20,950 --> 00:18:26,770
is I've been using loose mode for maybe

00:18:23,440 --> 00:18:28,780
I don't how long has it been called

00:18:26,770 --> 00:18:30,220
Babel for a couple years anyway and I've

00:18:28,780 --> 00:18:31,510
never had any problem with it so I would

00:18:30,220 --> 00:18:32,920
suggest most of you at least try

00:18:31,510 --> 00:18:37,480
switching to loose mode and see if it

00:18:32,920 --> 00:18:38,710
works for you please build using no

00:18:37,480 --> 00:18:41,010
Devon equals production this is

00:18:38,710 --> 00:18:43,990
literally free performance slack

00:18:41,010 --> 00:18:47,290
famously shipped the development version

00:18:43,990 --> 00:18:48,360
of react for years right and it's slower

00:18:47,290 --> 00:18:50,940
because it has all the

00:18:48,360 --> 00:18:52,860
koten it's bigger it's just a bad thing

00:18:50,940 --> 00:18:54,210
so you should definitely be building

00:18:52,860 --> 00:18:58,650
your application with node M equals

00:18:54,210 --> 00:19:00,809
production code splitting so the name of

00:18:58,650 --> 00:19:01,920
the talk is 10 kilobytes Arbus the only

00:19:00,809 --> 00:19:07,140
way that you're going to be able to do

00:19:01,920 --> 00:19:09,330
that is by doing code splitting yeah the

00:19:07,140 --> 00:19:13,710
idea behind code splitting is that you

00:19:09,330 --> 00:19:15,270
defer loading important modules that are

00:19:13,710 --> 00:19:17,160
not needed for the first paint until

00:19:15,270 --> 00:19:18,540
after the first paint so it's kind of a

00:19:17,160 --> 00:19:19,980
misnomer your app will still be bigger

00:19:18,540 --> 00:19:22,440
than 10 kilobytes but your initial

00:19:19,980 --> 00:19:24,960
payload you should be aiming for as low

00:19:22,440 --> 00:19:26,580
as possible you should be identifying

00:19:24,960 --> 00:19:30,270
the key module as the key code that you

00:19:26,580 --> 00:19:35,220
need to be able to get their source Maps

00:19:30,270 --> 00:19:37,200
do not ship ship source maps in line in

00:19:35,220 --> 00:19:40,169
your production code I wish this I

00:19:37,200 --> 00:19:42,600
didn't have to say that but I've seen it

00:19:40,169 --> 00:19:44,220
right if you ship source maps in line in

00:19:42,600 --> 00:19:47,549
your production code it will quadruple

00:19:44,220 --> 00:19:48,929
at least the size of your production

00:19:47,549 --> 00:19:52,040
bundle so please make sure that you're

00:19:48,929 --> 00:19:56,580
not doing that scope wasting this was

00:19:52,040 --> 00:19:58,380
something that roll-up kind of brought

00:19:56,580 --> 00:19:59,880
to the scene for the front-end community

00:19:58,380 --> 00:20:02,840
and then a bunch of the other bundlers

00:19:59,880 --> 00:20:07,890
have adopted it the basic gist here is

00:20:02,840 --> 00:20:11,010
line 4 on the left that webpack require

00:20:07,890 --> 00:20:12,860
method right there it's not free in fact

00:20:11,010 --> 00:20:15,210
it's a little it's quite expensive

00:20:12,860 --> 00:20:16,950
whereas you can see on the right there

00:20:15,210 --> 00:20:18,809
that function helper right there

00:20:16,950 --> 00:20:20,490
it gets actually in line right there and

00:20:18,809 --> 00:20:22,110
you get a bunch of performances so it'll

00:20:20,490 --> 00:20:23,880
actually inline those smaller functions

00:20:22,110 --> 00:20:26,070
right there so it's within the same

00:20:23,880 --> 00:20:28,860
scope it's much much faster you'll get a

00:20:26,070 --> 00:20:34,980
bunch of performance wins that way at

00:20:28,860 --> 00:20:35,160
runtime image skeletons so don't get me

00:20:34,980 --> 00:20:37,380
wrong

00:20:35,160 --> 00:20:39,240
10 kilobytes of JavaScript is not the

00:20:37,380 --> 00:20:40,679
same as 10 kilobytes of images images

00:20:39,240 --> 00:20:41,880
are far cheaper in the sense that they

00:20:40,679 --> 00:20:46,020
just have to be parsed and displayed

00:20:41,880 --> 00:20:48,030
whereas javascript has to be like

00:20:46,020 --> 00:20:50,730
executed and tokenized and all that kind

00:20:48,030 --> 00:20:52,350
of stuff so images are not the same so

00:20:50,730 --> 00:20:54,299
eliminating 10 kilobytes of JavaScript

00:20:52,350 --> 00:20:56,520
is far better than images but at the

00:20:54,299 --> 00:20:59,450
same time images are really cheap to

00:20:56,520 --> 00:21:01,550
optimize of one of my favorite

00:20:59,450 --> 00:21:03,050
Methos is using image skeletons which is

00:21:01,550 --> 00:21:04,910
loading like the bare minimum amount of

00:21:03,050 --> 00:21:06,620
images that you need just so that your

00:21:04,910 --> 00:21:08,330
user can use your interface and then

00:21:06,620 --> 00:21:11,930
after the initial paint going through

00:21:08,330 --> 00:21:14,210
and loading the actual full image so you

00:21:11,930 --> 00:21:15,800
can see here these are just using SVG's

00:21:14,210 --> 00:21:18,110
to approximate what the images are and

00:21:15,800 --> 00:21:20,600
these SPG's are like bytes instead of

00:21:18,110 --> 00:21:24,200
kilobytes or megabytes so this is one

00:21:20,600 --> 00:21:25,940
method using SVG's this one's really

00:21:24,200 --> 00:21:28,070
cool because it's like someone went

00:21:25,940 --> 00:21:29,780
through and actually designed the

00:21:28,070 --> 00:21:31,300
outlines and then you load the image on

00:21:29,780 --> 00:21:33,500
top of it it's kind of a cool effect

00:21:31,300 --> 00:21:36,380
this is actually one of my favorite ones

00:21:33,500 --> 00:21:37,970
it's really easy to animate SVG's and so

00:21:36,380 --> 00:21:39,440
you can actually animate it together and

00:21:37,970 --> 00:21:41,090
then load the image behind it while it's

00:21:39,440 --> 00:21:45,590
animating it's kind of another cool

00:21:41,090 --> 00:21:48,710
effect or you can use one of these

00:21:45,590 --> 00:21:50,420
others a little bit easier options blur

00:21:48,710 --> 00:21:53,000
up is one that famously Facebook has

00:21:50,420 --> 00:21:56,870
done solid color placeholders or just

00:21:53,000 --> 00:21:58,280
having a box there see this was just an

00:21:56,870 --> 00:21:59,960
example project that I pulled down I was

00:21:58,280 --> 00:22:03,230
able to cut out like two or three

00:21:59,960 --> 00:22:05,750
megabytes of code of just bundle size by

00:22:03,230 --> 00:22:09,080
taking out the images this was including

00:22:05,750 --> 00:22:11,990
all of its images in the bundles so this

00:22:09,080 --> 00:22:14,470
is just kind of a summary of how you can

00:22:11,990 --> 00:22:14,470
get there

00:22:15,320 --> 00:22:18,590
I don't really time to get into it but

00:22:16,940 --> 00:22:20,300
there's some tips into this slide deck

00:22:18,590 --> 00:22:22,910
of how you can do this with functions as

00:22:20,300 --> 00:22:24,830
well and kind of optimize your back-end

00:22:22,910 --> 00:22:27,020
for as well I used Microsoft Azure for

00:22:24,830 --> 00:22:31,370
the examples but you could do these

00:22:27,020 --> 00:22:34,100
things just as easily with with lambdas

00:22:31,370 --> 00:22:36,740
or anything like that one of my favorite

00:22:34,100 --> 00:22:38,800
ones here but your basic gist is that

00:22:36,740 --> 00:22:40,430
you want to reduce your time to first by

00:22:38,800 --> 00:22:42,350
there's something called the server

00:22:40,430 --> 00:22:43,820
timings API where you can actually ship

00:22:42,350 --> 00:22:45,770
what your back-end is doing to the

00:22:43,820 --> 00:22:47,300
chrome dev tools and the dev tools are

00:22:45,770 --> 00:22:49,070
actually able to read that so you can

00:22:47,300 --> 00:22:51,140
actually see here I can see how long my

00:22:49,070 --> 00:22:53,390
SQL is taking and so you can go and yell

00:22:51,140 --> 00:22:57,050
at your back-end dev to you know fix

00:22:53,390 --> 00:23:01,760
their stuff and I always like blaming

00:22:57,050 --> 00:23:03,650
things on other people compress your

00:23:01,760 --> 00:23:06,470
responses I worked at a company that

00:23:03,650 --> 00:23:08,300
will remain nameless that was not

00:23:06,470 --> 00:23:10,910
compressing any of their API responses

00:23:08,300 --> 00:23:12,680
and like that's that's just free web

00:23:10,910 --> 00:23:14,540
performance like that's just like

00:23:12,680 --> 00:23:16,970
please go make sure that all of your API

00:23:14,540 --> 00:23:18,070
responses are getting gzipped on the way

00:23:16,970 --> 00:23:20,270
down

00:23:18,070 --> 00:23:21,470
check out brought Lee that's another

00:23:20,270 --> 00:23:24,410
form of compression

00:23:21,470 --> 00:23:26,930
that's not gzip link didn't tried this

00:23:24,410 --> 00:23:30,170
and it was able to reduce p90

00:23:26,930 --> 00:23:32,180
performance which is basically like 90%

00:23:30,170 --> 00:23:36,620
of the 90th percentile of your users

00:23:32,180 --> 00:23:41,750
right and even saw some wins in India

00:23:36,620 --> 00:23:44,090
with it and the support for bratli is

00:23:41,750 --> 00:23:46,520
actually quite good now so I think this

00:23:44,090 --> 00:23:48,080
was like yeah was 70% of global users

00:23:46,520 --> 00:23:51,470
who are using devices that support

00:23:48,080 --> 00:23:54,590
broadly so the the trade-off for bratli

00:23:51,470 --> 00:23:56,330
is that it's much slower to do so if I'm

00:23:54,590 --> 00:23:59,800
compressing like my static assets using

00:23:56,330 --> 00:24:02,120
broadly it takes longer than gzip but

00:23:59,800 --> 00:24:05,320
usually that's an okay trade-off for you

00:24:02,120 --> 00:24:07,730
to make so just keep that in mind

00:24:05,320 --> 00:24:10,670
cold start cold start is always a prompt

00:24:07,730 --> 00:24:13,310
problem for all functions of the service

00:24:10,670 --> 00:24:14,690
or server this kind of stuff so we have

00:24:13,310 --> 00:24:16,220
something called as your function pack

00:24:14,690 --> 00:24:23,030
which will actually do all the note

00:24:16,220 --> 00:24:27,770
module resolution stuff for you so kind

00:24:23,030 --> 00:24:29,030
of just to wrap up here you have to know

00:24:27,770 --> 00:24:30,470
your audience you have to know who

00:24:29,030 --> 00:24:33,800
you're building for right if I'm

00:24:30,470 --> 00:24:36,620
building for uber for helicopters right

00:24:33,800 --> 00:24:38,660
I don't need to work on you know snake

00:24:36,620 --> 00:24:40,910
phones or Windows Phone right like I can

00:24:38,660 --> 00:24:43,460
design my application for my users that

00:24:40,910 --> 00:24:44,840
are using it but by the same token we

00:24:43,460 --> 00:24:46,280
kind of have like the web is for

00:24:44,840 --> 00:24:47,780
everyone it's not just for people with

00:24:46,280 --> 00:24:49,340
fast computers and fast internet

00:24:47,780 --> 00:24:51,470
connections and people that can afford

00:24:49,340 --> 00:24:54,470
to be at these conferences like me right

00:24:51,470 --> 00:24:57,680
it's for everyone so it it's our ethical

00:24:54,470 --> 00:24:59,140
duty as web developers to make sure that

00:24:57,680 --> 00:25:01,460
we're reaching everyone we can

00:24:59,140 --> 00:25:04,040
accessibility is a part of that web

00:25:01,460 --> 00:25:05,540
performance is part of that so just kind

00:25:04,040 --> 00:25:09,380
of keep that in mind while you're

00:25:05,540 --> 00:25:10,660
building these sorts of things so thank

00:25:09,380 --> 00:25:15,580
you

00:25:10,660 --> 00:25:18,500
[Applause]

00:25:15,580 --> 00:25:20,210
let's give it up for Brian Brian you

00:25:18,500 --> 00:25:20,450
ready for some questions yeah let's do

00:25:20,210 --> 00:25:22,429
it

00:25:20,450 --> 00:25:23,960
great first one what would be the

00:25:22,429 --> 00:25:26,299
loading time of LinkedIn's mobile

00:25:23,960 --> 00:25:28,160
webpage on 2g done because you've

00:25:26,299 --> 00:25:28,700
compared desktop to mobile for some

00:25:28,160 --> 00:25:30,799
reason

00:25:28,700 --> 00:25:32,240
yeah it's cuz I'm a jerk I wanted to I

00:25:30,799 --> 00:25:34,790
did it for effect cuz I wanted to show

00:25:32,240 --> 00:25:36,049
you what how bad it can really be and I

00:25:34,790 --> 00:25:39,280
picked on LinkedIn because I worked

00:25:36,049 --> 00:25:39,280
there and so I was part of the problem

00:25:39,309 --> 00:25:43,700
so you can do what's called adaptive

00:25:41,780 --> 00:25:47,419
design so you can actually ship like

00:25:43,700 --> 00:25:49,010
different HTML and CSS you can do all

00:25:47,419 --> 00:25:51,320
sorts of deferment fraud but

00:25:49,010 --> 00:25:54,080
specifically LinkedIn has like a Android

00:25:51,320 --> 00:25:56,179
Lite app application that's really small

00:25:54,080 --> 00:25:59,210
and designed for low bandwidth networks

00:25:56,179 --> 00:26:03,530
so to be fair to LinkedIn it's they do

00:25:59,210 --> 00:26:05,090
an okay job all right what about the

00:26:03,530 --> 00:26:08,540
impact of user tracking in other

00:26:05,090 --> 00:26:10,390
analytics scripts ads etc that stuff's

00:26:08,540 --> 00:26:12,830
really tough because a lot of those

00:26:10,390 --> 00:26:14,480
vendors want to be like loaded up front

00:26:12,830 --> 00:26:15,799
and I'm I always pushed back I was

00:26:14,480 --> 00:26:17,270
trying to fur it to like so it's one of

00:26:15,799 --> 00:26:20,780
the last things I do you will definitely

00:26:17,270 --> 00:26:22,610
drop pieces of analytics if you defer to

00:26:20,780 --> 00:26:24,260
the end and not do it in the head but I

00:26:22,610 --> 00:26:26,120
think the web performance is worth it so

00:26:24,260 --> 00:26:28,070
I would definitely push against your

00:26:26,120 --> 00:26:30,049
data science team or your marketing team

00:26:28,070 --> 00:26:35,210
or whoever is like you can load tag

00:26:30,049 --> 00:26:36,950
manager later it's gonna be okay all

00:26:35,210 --> 00:26:38,720
right why optimize for people with slow

00:26:36,950 --> 00:26:41,809
connectivity but not for ones with old

00:26:38,720 --> 00:26:45,260
devices Android 4.0 Windows XP exactly

00:26:41,809 --> 00:26:46,880
that's a good question it comes down to

00:26:45,260 --> 00:26:49,100
your demographic like I used to work at

00:26:46,880 --> 00:26:50,840
a company that the state of Utah was one

00:26:49,100 --> 00:26:52,880
of our biggest users of our application

00:26:50,840 --> 00:26:54,770
and the state of Utah only has been to

00:26:52,880 --> 00:26:56,630
XP so we had to work on Internet

00:26:54,770 --> 00:26:59,360
Explorer 6 that was just a big part of

00:26:56,630 --> 00:27:03,440
it right but when I worked at Netflix we

00:26:59,360 --> 00:27:05,270
didn't exported in really look at it

00:27:03,440 --> 00:27:06,260
Windows XP so it depends on her users

00:27:05,270 --> 00:27:09,110
are and that's something you should be

00:27:06,260 --> 00:27:11,559
looking into ok what tips would you

00:27:09,110 --> 00:27:13,790
recommend for improving first penc time

00:27:11,559 --> 00:27:15,980
reducing time to first byte and that's

00:27:13,790 --> 00:27:20,120
always kind of that's kind of the

00:27:15,980 --> 00:27:22,120
easiest one right deferring all of your

00:27:20,120 --> 00:27:24,830
unnecessary JavaScript until later

00:27:22,120 --> 00:27:25,789
inlining critical CSS those are all

00:27:24,830 --> 00:27:29,299
things are going to help with

00:27:25,789 --> 00:27:31,249
your first pain for sure mm-hmm if the

00:27:29,299 --> 00:27:33,169
LinkedIn team leverage the suggestions

00:27:31,249 --> 00:27:35,269
you made would they see a significant

00:27:33,169 --> 00:27:38,119
boost in load times or can you explain

00:27:35,269 --> 00:27:41,889
what they are doing wrong I don't want

00:27:38,119 --> 00:27:41,889
to throw my old colleagues under the bus

00:27:42,609 --> 00:27:48,139
do it I'm kidding

00:27:45,440 --> 00:27:48,499
anyone here from LinkedIn just didn't

00:27:48,139 --> 00:27:50,509
happen

00:27:48,499 --> 00:27:53,690
they're doing some pretty amazing stuff

00:27:50,509 --> 00:27:56,479
with glimmer and like glimmer 2.0 that I

00:27:53,690 --> 00:27:59,090
think will help a lot I think they've

00:27:56,479 --> 00:28:02,599
done some pretty crazy things with their

00:27:59,090 --> 00:28:04,429
ember that it's on the engineering side

00:28:02,599 --> 00:28:06,769
it's not necessarily on the ember side

00:28:04,429 --> 00:28:08,690
so they're gonna have to resolve some of

00:28:06,769 --> 00:28:10,879
those issues and it's just they have a

00:28:08,690 --> 00:28:12,169
lot of JavaScript and a lot of CSS and

00:28:10,879 --> 00:28:15,739
they're just gonna have to reduce those

00:28:12,169 --> 00:28:17,239
things down to smaller sizes to have

00:28:15,739 --> 00:28:19,489
hard problems going on right now for

00:28:17,239 --> 00:28:22,210
sure all right Dan would like to know

00:28:19,489 --> 00:28:24,710
how can we accomplish code splitting

00:28:22,210 --> 00:28:26,840
that's another 25 minute talk right

00:28:24,710 --> 00:28:27,889
there but I think the best answer is

00:28:26,840 --> 00:28:30,710
that you have to use what's called

00:28:27,889 --> 00:28:33,190
dynamic import or the old way of doing

00:28:30,710 --> 00:28:35,509
it would be required dot and sure and

00:28:33,190 --> 00:28:38,539
most bundlers are smart enough to see

00:28:35,509 --> 00:28:41,119
like oh you're using dynamic import here

00:28:38,539 --> 00:28:45,950
this is a code splitting point and then

00:28:41,119 --> 00:28:47,269
it can split that bundle out beyond that

00:28:45,950 --> 00:28:48,649
you probably just read a blog there's

00:28:47,269 --> 00:28:52,549
lots of blog posts on that kind of stuff

00:28:48,649 --> 00:28:55,549
so we had some problems with three

00:28:52,549 --> 00:29:00,080
shaking shaking three shaken doesn't

00:28:55,549 --> 00:29:03,590
work with all NPM module truth it

00:29:00,080 --> 00:29:09,979
doesn't work with all MPM modules I mean

00:29:03,590 --> 00:29:12,080
I I believe you it should work with most

00:29:09,979 --> 00:29:13,489
NPM modules the only one thing I could

00:29:12,080 --> 00:29:16,359
see running into is if you're like

00:29:13,489 --> 00:29:18,349
polluting global namespace which

00:29:16,359 --> 00:29:20,539
hopefully most of your modules aren't

00:29:18,349 --> 00:29:21,979
doing that kind of stuff but if that

00:29:20,539 --> 00:29:24,440
could be a problem but for the most part

00:29:21,979 --> 00:29:26,859
it should work with almost it almost

00:29:24,440 --> 00:29:26,859
anything

00:29:26,910 --> 00:29:32,360
please Brian what's the name of your

00:29:28,920 --> 00:29:34,860
puppy Luna her name is Luna she's cutie

00:29:32,360 --> 00:29:37,340
and final question what do you think of

00:29:34,860 --> 00:29:41,250
nan Jason marshalling like protobuf I

00:29:37,340 --> 00:29:42,960
don't know enough to talk about it but

00:29:41,250 --> 00:29:44,670
I'm happy to happen like an offline

00:29:42,960 --> 00:29:46,110
conversation about it once I look at

00:29:44,670 --> 00:29:48,870
what it actually is I have no idea what

00:29:46,110 --> 00:29:50,710
it is all right let's put our hands

00:29:48,870 --> 00:29:53,920
together for Brian

00:29:50,710 --> 00:29:53,920

YouTube URL: https://www.youtube.com/watch?v=BBU9B3S_SrU


