Title: ReactiveConf 2018 - Mark Dalgleish: Sketching in the Browser
Publication date: 2018-11-02
Playlist: ReactiveConf 2018
Description: 
	29th - 31st October 2018, Prague, Czech Republic
https://reactiveconf.com/
Main stage
-------------------------------------------------------------------
Sketching in the Browser

Keeping developers and designers in sync is an ongoing challenge for our industry, with each discipline working in completely different mediums. In the past few years, we've seen mass adoption of component systems with locally-scoped styles, which has led directly to the emergence of tools like react-sketchapp and html-sketchapp that allow us to generate static design assets from real production code. Now, we're beginning to see a real feedback loop from development back into designâ€”but what does this mean for traditional design processes? What does this mean for the future of front-end development? In this talk, Mark began to answer these questions by running through a real-world example of this technique, had a closer look at how it all works, and showed you how you can start experimenting with this yourself.
Captions: 
	00:00:02,040 --> 00:00:08,610
[Music]

00:00:12,049 --> 00:00:17,400
all right

00:00:13,820 --> 00:00:19,590
so hello Prague as you heard my name is

00:00:17,400 --> 00:00:21,210
Mark Dalgleish and I am here all the way

00:00:19,590 --> 00:00:23,100
from Melbourne Australia which is a very

00:00:21,210 --> 00:00:26,220
very long trip for me but very happy to

00:00:23,100 --> 00:00:28,320
be here now I'm here because I am a

00:00:26,220 --> 00:00:29,369
massive fan of component architectures I

00:00:28,320 --> 00:00:31,140
think that's something that most of us

00:00:29,369 --> 00:00:33,300
have in common but I'm also really

00:00:31,140 --> 00:00:35,550
passionate about design systems and how

00:00:33,300 --> 00:00:37,350
the two of these can come together to

00:00:35,550 --> 00:00:39,359
really improve the way we think about

00:00:37,350 --> 00:00:42,359
our work the way we bring design into

00:00:39,359 --> 00:00:44,579
our work every day now my work in the

00:00:42,359 --> 00:00:46,050
space is what led me to the creation of

00:00:44,579 --> 00:00:48,870
CSS modules something that I'm sure a

00:00:46,050 --> 00:00:50,429
lot of you are familiar with but what

00:00:48,870 --> 00:00:52,469
I'm especially excited about is what it

00:00:50,429 --> 00:00:54,120
means for the future of design and

00:00:52,469 --> 00:00:55,829
changing the way we think about how we

00:00:54,120 --> 00:00:59,159
build things and how do we integrate

00:00:55,829 --> 00:01:01,049
with designers at our companies so I

00:00:59,159 --> 00:01:03,239
work in Melbourne at a company called

00:01:01,049 --> 00:01:06,510
seek they're the leading job site there

00:01:03,239 --> 00:01:08,490
they're basically a household name my

00:01:06,510 --> 00:01:10,260
work there really revolves around this

00:01:08,490 --> 00:01:11,850
in a large way which is the Sikh style

00:01:10,260 --> 00:01:13,110
guide this is our react component

00:01:11,850 --> 00:01:15,420
library and the accompanying design

00:01:13,110 --> 00:01:16,710
system this is the website which is open

00:01:15,420 --> 00:01:19,770
source so you can go check that out if

00:01:16,710 --> 00:01:22,140
you're interested but of course like

00:01:19,770 --> 00:01:24,960
most design systems it didn't start this

00:01:22,140 --> 00:01:27,570
way it didn't come out fully formed it

00:01:24,960 --> 00:01:31,110
began its life as a humble static style

00:01:27,570 --> 00:01:33,840
guide created by our design team so way

00:01:31,110 --> 00:01:35,310
back in the early days sketch was

00:01:33,840 --> 00:01:37,200
starting to catch on with our designers

00:01:35,310 --> 00:01:39,870
and this became the platform for

00:01:37,200 --> 00:01:41,910
creating some shared assets we created

00:01:39,870 --> 00:01:43,680
our first sketch style guide assets file

00:01:41,910 --> 00:01:45,890
which was actually open sourced as well

00:01:43,680 --> 00:01:48,180
and this was used by our design team

00:01:45,890 --> 00:01:50,190
really humble beginnings compared to

00:01:48,180 --> 00:01:51,900
where we are today but this was a really

00:01:50,190 --> 00:01:53,940
important first step in terms of getting

00:01:51,900 --> 00:01:57,030
our design team to agree on what it is

00:01:53,940 --> 00:02:00,960
that makes a siik product look like a

00:01:57,030 --> 00:02:02,880
see product later down the track there

00:02:00,960 --> 00:02:04,590
was a need to start to standardize the

00:02:02,880 --> 00:02:06,030
symbols and their usage across different

00:02:04,590 --> 00:02:07,680
documents and we looked into tooling

00:02:06,030 --> 00:02:10,229
like craft which is a suite of sketch

00:02:07,680 --> 00:02:12,000
plugins from envision the most notable

00:02:10,229 --> 00:02:13,920
of which in this context is their

00:02:12,000 --> 00:02:16,319
library plugin which allows you to share

00:02:13,920 --> 00:02:18,030
sketch symbols across documents now

00:02:16,319 --> 00:02:20,220
symbols are basically the sketch version

00:02:18,030 --> 00:02:22,590
components there is reusable bits of UI

00:02:20,220 --> 00:02:24,480
and so this way you could synchronize to

00:02:22,590 --> 00:02:26,819
a centralized library keep it up-to-date

00:02:24,480 --> 00:02:28,140
and that it's something like this is a

00:02:26,819 --> 00:02:29,400
big game-changer in the world of design

00:02:28,140 --> 00:02:30,930
they don't have access to the same

00:02:29,400 --> 00:02:32,520
tooling we do that we take for granted

00:02:30,930 --> 00:02:35,010
these things are really a big step

00:02:32,520 --> 00:02:36,930
forward but what we've quickly

00:02:35,010 --> 00:02:39,450
discovered that is that it took a lot of

00:02:36,930 --> 00:02:41,580
work keeping this thing up to date is no

00:02:39,450 --> 00:02:43,290
small feat it's essentially a full-time

00:02:41,580 --> 00:02:45,810
job if you really want to do it justice

00:02:43,290 --> 00:02:47,340
and the the key problem that we

00:02:45,810 --> 00:02:49,140
discovered that most people discover in

00:02:47,340 --> 00:02:51,300
this space is how do you stay in sync

00:02:49,140 --> 00:02:53,280
with the code the code is quickly

00:02:51,300 --> 00:02:54,540
evolving on a daily basis particularly

00:02:53,280 --> 00:02:57,660
in the world of continuous delivery

00:02:54,540 --> 00:03:00,000
where the design as users experience it

00:02:57,660 --> 00:03:01,620
is constantly evolving so these

00:03:00,000 --> 00:03:03,870
libraries struggle to keep up if they're

00:03:01,620 --> 00:03:05,250
created in this static fashion so it's

00:03:03,870 --> 00:03:07,980
something that we've always been trying

00:03:05,250 --> 00:03:09,810
to solve it was around this time back

00:03:07,980 --> 00:03:11,819
then that we first started working with

00:03:09,810 --> 00:03:15,989
react and creating our first react

00:03:11,819 --> 00:03:18,000
project in production react as I'm sure

00:03:15,989 --> 00:03:19,709
you're aware is all about going all-in

00:03:18,000 --> 00:03:21,959
on component architectures

00:03:19,709 --> 00:03:23,820
react was the first library we use that

00:03:21,959 --> 00:03:25,410
embraced components to the degree that

00:03:23,820 --> 00:03:27,600
you built your whole application out of

00:03:25,410 --> 00:03:30,000
components and it really changed the way

00:03:27,600 --> 00:03:31,890
we think about UI we worked really hard

00:03:30,000 --> 00:03:34,110
to scope all of our Styles to every

00:03:31,890 --> 00:03:35,940
component manually with BEM which

00:03:34,110 --> 00:03:38,459
eventually led to the standardization of

00:03:35,940 --> 00:03:40,049
it as a automated pattern via CSS

00:03:38,459 --> 00:03:42,120
modules which again I'm sure many of you

00:03:40,049 --> 00:03:45,360
have familiar with if not using in

00:03:42,120 --> 00:03:47,100
production now our style guide began its

00:03:45,360 --> 00:03:48,989
life as a folder in this project we just

00:03:47,100 --> 00:03:51,120
created six style guide and we started

00:03:48,989 --> 00:03:53,220
putting the commonly used components in

00:03:51,120 --> 00:03:54,690
there with a vision to pull it out into

00:03:53,220 --> 00:03:57,000
its own repository one day which of

00:03:54,690 --> 00:03:59,640
course we did this is our open source

00:03:57,000 --> 00:04:01,530
style guide on github this quickly got

00:03:59,640 --> 00:04:03,660
picked up by multiple teams at seek and

00:04:01,530 --> 00:04:05,100
spread virally it was never enforced

00:04:03,660 --> 00:04:07,079
it's even to this day we don't

00:04:05,100 --> 00:04:09,120
technically enforce it it just proved

00:04:07,079 --> 00:04:10,799
itself as such a valuable tool to

00:04:09,120 --> 00:04:13,640
improve the productivity of developers

00:04:10,799 --> 00:04:15,870
that it just caught on like wildfire the

00:04:13,640 --> 00:04:18,090
challenge of course now is that as you

00:04:15,870 --> 00:04:19,229
start to invest further and further in

00:04:18,090 --> 00:04:20,579
these standardized tooling how do you

00:04:19,229 --> 00:04:23,340
feed that back into the design process

00:04:20,579 --> 00:04:24,570
the designers ideally would like to make

00:04:23,340 --> 00:04:27,539
use of this hard work that we've done

00:04:24,570 --> 00:04:29,400
standardizing these things luckily we're

00:04:27,539 --> 00:04:31,169
not the only ones struggling with this

00:04:29,400 --> 00:04:33,120
problem Airbnb have

00:04:31,169 --> 00:04:35,310
famously putting a lot of hard work into

00:04:33,120 --> 00:04:36,509
this space the most notable of which for

00:04:35,310 --> 00:04:39,509
this audience of course is react

00:04:36,509 --> 00:04:41,460
Sketchup reacts sketcher allows you to

00:04:39,509 --> 00:04:43,110
take react code like you see there on

00:04:41,460 --> 00:04:44,550
the left and render it into a design

00:04:43,110 --> 00:04:46,379
environment like we see in sketched

00:04:44,550 --> 00:04:47,789
there on the right and this was it an

00:04:46,379 --> 00:04:49,229
incredible breakthrough in terms of

00:04:47,789 --> 00:04:50,819
breaking down the barrier between these

00:04:49,229 --> 00:04:52,800
two domains and making it so that once

00:04:50,819 --> 00:04:53,909
you invest on that left-hand side you

00:04:52,800 --> 00:04:55,349
can feed it right back into the

00:04:53,909 --> 00:04:57,719
right-hand side for the next round of

00:04:55,349 --> 00:04:59,249
design John Gould who was working on

00:04:57,719 --> 00:05:01,379
this at Airbnb at the time said in

00:04:59,249 --> 00:05:03,629
sketch we use symbols and overrides in

00:05:01,379 --> 00:05:05,490
react we use components and properties

00:05:03,629 --> 00:05:07,589
the concepts are so similar that it

00:05:05,490 --> 00:05:09,150
seems silly not to unify them and the

00:05:07,589 --> 00:05:10,469
exciting thing there really is the fact

00:05:09,150 --> 00:05:11,969
that designers and developers are

00:05:10,469 --> 00:05:14,759
finally starting to speak the same

00:05:11,969 --> 00:05:16,710
language the the way we architect our

00:05:14,759 --> 00:05:18,210
systems really maps to the way designers

00:05:16,710 --> 00:05:21,330
think about laying out their screens as

00:05:18,210 --> 00:05:22,979
well so in practice what that looks like

00:05:21,330 --> 00:05:24,240
with the tooling that they use in Airbnb

00:05:22,979 --> 00:05:26,219
you can see there's some extra sketch

00:05:24,240 --> 00:05:27,810
plug-in magic they've got there but

00:05:26,219 --> 00:05:29,789
they've got a a pane on the left where

00:05:27,810 --> 00:05:31,620
they're selecting components from the

00:05:29,789 --> 00:05:33,689
component library they're plugging in

00:05:31,620 --> 00:05:35,339
the the options via the props in each

00:05:33,689 --> 00:05:37,409
field they're creating an instance of a

00:05:35,339 --> 00:05:39,569
react component and dragging that onto

00:05:37,409 --> 00:05:41,189
the art board so if you're creating a

00:05:39,569 --> 00:05:42,599
standard design you can see that you're

00:05:41,189 --> 00:05:44,399
you're operating at a speed that just

00:05:42,599 --> 00:05:46,050
was not possible before at a level of

00:05:44,399 --> 00:05:48,240
fidelity that matches what will actually

00:05:46,050 --> 00:05:50,099
go into production and it's doing it in

00:05:48,240 --> 00:05:51,960
the designers native environment we're

00:05:50,099 --> 00:05:53,759
not having to convince the designers to

00:05:51,960 --> 00:05:55,560
move to a different tool if this is what

00:05:53,759 --> 00:05:57,479
they're using we've already met them on

00:05:55,560 --> 00:06:00,389
their home turf which i think is the

00:05:57,479 --> 00:06:01,770
most exciting part unfortunately when I

00:06:00,389 --> 00:06:03,930
looked into implementing this it did

00:06:01,770 --> 00:06:05,399
come with a few requirements the first

00:06:03,930 --> 00:06:07,499
one the most obvious one is that you

00:06:05,399 --> 00:06:09,449
have to use react that's obviously not

00:06:07,499 --> 00:06:11,249
an issue for us in in that we are using

00:06:09,449 --> 00:06:12,449
react for a component library but

00:06:11,249 --> 00:06:14,189
there's already a lot of people out

00:06:12,449 --> 00:06:16,169
there that this is this is a problem for

00:06:14,189 --> 00:06:18,060
them already again luckily it wasn't a

00:06:16,169 --> 00:06:20,159
problem for us the next problem is that

00:06:18,060 --> 00:06:22,560
we had to write our Styles in JavaScript

00:06:20,159 --> 00:06:24,659
we use CSS modules for a text stack

00:06:22,560 --> 00:06:26,219
we're not against writing styles in

00:06:24,659 --> 00:06:28,529
JavaScript but this is a this is a big

00:06:26,219 --> 00:06:30,779
migration right to move your entire text

00:06:28,529 --> 00:06:32,550
stack based on the promise of this

00:06:30,779 --> 00:06:34,169
design tool integration so that was a

00:06:32,550 --> 00:06:36,029
bit of a challenge and the next problem

00:06:34,169 --> 00:06:38,219
of course is that you have to build your

00:06:36,029 --> 00:06:40,169
component library with cross platform

00:06:38,219 --> 00:06:41,849
primitives like view text image

00:06:40,169 --> 00:06:44,070
essentially the way to think about it is

00:06:41,849 --> 00:06:45,300
you're building a react native up and

00:06:44,070 --> 00:06:47,340
you're reporting it to the different

00:06:45,300 --> 00:06:48,660
platforms one of which is sketch so you

00:06:47,340 --> 00:06:50,700
need to use something like react

00:06:48,660 --> 00:06:52,290
primitives and it's it's again it's a

00:06:50,700 --> 00:06:54,450
whole technical shift in how you build

00:06:52,290 --> 00:06:56,580
your components so that's a lot to take

00:06:54,450 --> 00:06:58,020
on in terms of you you just want to

00:06:56,580 --> 00:06:59,400
integrate with a design school but you

00:06:58,020 --> 00:07:02,070
actually to react attacked your app but

00:06:59,400 --> 00:07:04,890
that's a big change so we were quite

00:07:02,070 --> 00:07:07,430
disappointed about this we couldn't

00:07:04,890 --> 00:07:09,930
really justify such a big migration and

00:07:07,430 --> 00:07:11,550
we do have concerns about those changes

00:07:09,930 --> 00:07:13,410
in the tech stack as well so it's it's

00:07:11,550 --> 00:07:14,820
not even that it's an obviously good

00:07:13,410 --> 00:07:16,470
move for us there's there's some debate

00:07:14,820 --> 00:07:19,530
to be had there but if you look at that

00:07:16,470 --> 00:07:21,360
list again when you think about the vast

00:07:19,530 --> 00:07:22,650
majority of react apps out in the wild

00:07:21,360 --> 00:07:25,560
and I'm thinking of course of yours as

00:07:22,650 --> 00:07:27,420
well I would say it's actually quite

00:07:25,560 --> 00:07:29,370
rare for even in the in the reactor

00:07:27,420 --> 00:07:31,650
community for all of these things to be

00:07:29,370 --> 00:07:33,960
met within a single project particularly

00:07:31,650 --> 00:07:35,490
the last one it's such a different way

00:07:33,960 --> 00:07:38,040
of architecting things that it's it's

00:07:35,490 --> 00:07:39,390
really not that common so luckily we

00:07:38,040 --> 00:07:41,610
weren't the only ones facing this

00:07:39,390 --> 00:07:43,050
problem as I alluded to Konrad's why not

00:07:41,610 --> 00:07:44,910
who at the time was working at brainley

00:07:43,050 --> 00:07:46,290
I was looking at this problem and he

00:07:44,910 --> 00:07:48,660
said we were unable to quickly work

00:07:46,290 --> 00:07:50,250
around these limitations so we created

00:07:48,660 --> 00:07:52,290
HTML Sketch up and as the name might

00:07:50,250 --> 00:07:53,970
imply it's a more generalized version of

00:07:52,290 --> 00:07:56,610
this problem so here you can see it's

00:07:53,970 --> 00:07:57,990
rendering a variety of web pages all of

00:07:56,610 --> 00:07:59,940
which have different text backs behind

00:07:57,990 --> 00:08:01,350
them not all of them are JavaScript

00:07:59,940 --> 00:08:03,240
based you can see they we've got Twitter

00:08:01,350 --> 00:08:05,040
we've got Stack Overflow DuckDuckGo

00:08:03,240 --> 00:08:07,410
which is where Conrad now actually works

00:08:05,040 --> 00:08:08,790
which is cool and their style guide

00:08:07,410 --> 00:08:10,140
there on the left so all of these things

00:08:08,790 --> 00:08:13,680
are being rendered out of the browser

00:08:10,140 --> 00:08:15,360
into sketch in a generalized fashion it

00:08:13,680 --> 00:08:17,010
this is made possible because sketch has

00:08:15,360 --> 00:08:18,960
an open file format if you take any

00:08:17,010 --> 00:08:20,610
sketch file rename it to dot zip and

00:08:18,960 --> 00:08:22,590
open it you'll see something like this

00:08:20,610 --> 00:08:24,690
this series of JSON files some folders

00:08:22,590 --> 00:08:26,940
with thumbnails and things like that if

00:08:24,690 --> 00:08:28,320
you drill down into the Jason you can

00:08:26,940 --> 00:08:29,940
see that it's quite human readable

00:08:28,320 --> 00:08:32,580
definitely to the degree that you can

00:08:29,940 --> 00:08:33,719
see how you could not it would wouldn't

00:08:32,580 --> 00:08:36,650
be too difficult to write code you

00:08:33,719 --> 00:08:40,110
didn't generate this automatically

00:08:36,650 --> 00:08:41,969
so HTML Sketchup gives you access to

00:08:40,110 --> 00:08:44,099
these variety of classes that you can

00:08:41,969 --> 00:08:46,920
instantiate document page text symbol

00:08:44,099 --> 00:08:49,260
master and so on and a series of helpful

00:08:46,920 --> 00:08:50,010
functions that can also create these for

00:08:49,260 --> 00:08:52,050
you

00:08:50,010 --> 00:08:53,850
the most useful of which for for my

00:08:52,050 --> 00:08:56,040
purposes was node to sketch layers which

00:08:53,850 --> 00:08:57,750
allows you to take a single dom node and

00:08:56,040 --> 00:09:00,990
translate it into a seer

00:08:57,750 --> 00:09:02,700
of sketch layers automatically at the

00:09:00,990 --> 00:09:04,710
other end of this process you end up

00:09:02,700 --> 00:09:07,530
with two JSON files document a sketch

00:09:04,710 --> 00:09:09,180
Jason and page a sketch Jason these are

00:09:07,530 --> 00:09:11,370
just conventions you might be wondering

00:09:09,180 --> 00:09:13,110
what the a sketch means and it's short

00:09:11,370 --> 00:09:14,460
for almost sketch now unfortunately

00:09:13,110 --> 00:09:16,380
there's a couple of limitations that

00:09:14,460 --> 00:09:19,530
stop you from creating a completely

00:09:16,380 --> 00:09:21,720
valid sketch file programmatically the

00:09:19,530 --> 00:09:23,520
last mile needs to be done by a sketch

00:09:21,720 --> 00:09:26,820
plugin where you can import the file but

00:09:23,520 --> 00:09:28,470
otherwise it's most of the way there so

00:09:26,820 --> 00:09:30,020
once I saw this I was super excited

00:09:28,470 --> 00:09:32,010
about it I had to take it for a spin

00:09:30,020 --> 00:09:34,200
what I did is I pointed it at our

00:09:32,010 --> 00:09:36,000
website and took a snapshot and this is

00:09:34,200 --> 00:09:37,320
what I got it got most of it right the

00:09:36,000 --> 00:09:39,150
only thing that really got the moat the

00:09:37,320 --> 00:09:40,740
main thing I got wrong was was the the

00:09:39,150 --> 00:09:43,380
SVG icons were missing which they've

00:09:40,740 --> 00:09:45,270
since fixed the next step was to take

00:09:43,380 --> 00:09:46,680
our symbols sorry and when our place the

00:09:45,270 --> 00:09:48,720
react components and convert them into

00:09:46,680 --> 00:09:50,940
symbols so I started with the humble

00:09:48,720 --> 00:09:53,550
button rendered a few variations of the

00:09:50,940 --> 00:09:55,020
button and translated it into sketch on

00:09:53,550 --> 00:09:57,330
the right there which was pretty

00:09:55,020 --> 00:10:00,840
straightforward we did this by coming up

00:09:57,330 --> 00:10:02,310
with a convention of a sketch JS file

00:10:00,840 --> 00:10:04,290
they sat next to the component of the

00:10:02,310 --> 00:10:05,790
same name and we would export the

00:10:04,290 --> 00:10:07,560
symbols from that which was an object

00:10:05,790 --> 00:10:09,120
mapping the name of the symbol to a

00:10:07,560 --> 00:10:11,580
react element that we wanted to render

00:10:09,120 --> 00:10:13,320
we did the same thing for textiles as

00:10:11,580 --> 00:10:14,910
well which sketched support so here's

00:10:13,320 --> 00:10:17,010
our different entries in our type

00:10:14,910 --> 00:10:19,200
hierarchy and when you jump over to a

00:10:17,010 --> 00:10:21,360
sketch what you would see is this style

00:10:19,200 --> 00:10:22,860
text menu with again all the entries in

00:10:21,360 --> 00:10:25,410
our type hierarchy showing up there in

00:10:22,860 --> 00:10:27,630
the design environment our colors were

00:10:25,410 --> 00:10:29,790
also Devine defined in the style guide

00:10:27,630 --> 00:10:31,860
there we would iterate over those and

00:10:29,790 --> 00:10:33,839
render them to the screen and for each

00:10:31,860 --> 00:10:35,730
of those we would then again using HTML

00:10:33,839 --> 00:10:37,350
sketch up pull them into sketch where

00:10:35,730 --> 00:10:40,260
they would become document colors part

00:10:37,350 --> 00:10:41,970
of the standard palette there the other

00:10:40,260 --> 00:10:44,130
thing that we needed of course is having

00:10:41,970 --> 00:10:45,360
a responsive design system is that we

00:10:44,130 --> 00:10:46,710
wanted to be able to render each of

00:10:45,360 --> 00:10:49,200
these for every single supported

00:10:46,710 --> 00:10:51,240
viewport size that we want in inside of

00:10:49,200 --> 00:10:53,160
sketch so in our case we defined which

00:10:51,240 --> 00:10:54,750
sizes we want to provide text for and

00:10:53,160 --> 00:10:56,610
which sizes we want to provide symbols

00:10:54,750 --> 00:10:58,620
for we gave them a name a width on a

00:10:56,610 --> 00:11:00,420
height and for each of these we would

00:10:58,620 --> 00:11:01,920
get a corresponding entry in sketch so

00:11:00,420 --> 00:11:04,470
here you would have desktop in mobile

00:11:01,920 --> 00:11:06,720
text in this early example and a symbol

00:11:04,470 --> 00:11:08,160
would have desktop mobile mobile plus so

00:11:06,720 --> 00:11:10,640
you'd have consistent rendering across

00:11:08,160 --> 00:11:11,930
all screen sizes

00:11:10,640 --> 00:11:13,760
what their culminated in was a

00:11:11,930 --> 00:11:15,920
single-page a hidden route and out in

00:11:13,760 --> 00:11:18,440
our style guide safe we're top to bottom

00:11:15,920 --> 00:11:20,390
we would render all of these symbols and

00:11:18,440 --> 00:11:21,980
all these textiles and colors on a

00:11:20,390 --> 00:11:23,870
single page where we couldn't in one

00:11:21,980 --> 00:11:28,010
pass read these all and import them into

00:11:23,870 --> 00:11:29,810
sketch so I was super excited to be able

00:11:28,010 --> 00:11:31,760
to actually formalize this in our

00:11:29,810 --> 00:11:34,190
component library I opened the P R that

00:11:31,760 --> 00:11:37,340
that would generate that sketch file for

00:11:34,190 --> 00:11:40,040
us and it really took off

00:11:37,340 --> 00:11:41,870
but HTML Sketchup was only one part of

00:11:40,040 --> 00:11:44,120
the puzzle and by that I mean the amount

00:11:41,870 --> 00:11:45,500
of code required to to get this

00:11:44,120 --> 00:11:47,630
happening into end was a little more

00:11:45,500 --> 00:11:49,190
than I expected if you look at this API

00:11:47,630 --> 00:11:51,050
that HTML sketch I provided it's

00:11:49,190 --> 00:11:53,090
relatively low-level you're creating

00:11:51,050 --> 00:11:54,680
instances of those objects that we saw

00:11:53,090 --> 00:11:56,480
in the Jason before and you've got some

00:11:54,680 --> 00:11:57,710
utilities but beyond that there was a

00:11:56,480 --> 00:12:00,140
little bit more workflow we had to

00:11:57,710 --> 00:12:02,780
implement the first thing we had to do

00:12:00,140 --> 00:12:04,490
was write and compile a script that ran

00:12:02,780 --> 00:12:06,590
HTML sketch up in the context of the

00:12:04,490 --> 00:12:09,140
document and that was a sizable script

00:12:06,590 --> 00:12:11,300
in and of itself we then had to start a

00:12:09,140 --> 00:12:13,100
static web server pointed at this file

00:12:11,300 --> 00:12:15,590
we had to open puppeteer a headless

00:12:13,100 --> 00:12:17,480
Chrome at the correct URL we had to

00:12:15,590 --> 00:12:18,620
inject this compiled script from step

00:12:17,480 --> 00:12:21,290
one into the page

00:12:18,620 --> 00:12:23,150
we had to execute methods in that

00:12:21,290 --> 00:12:25,390
function by which would capture the

00:12:23,150 --> 00:12:27,710
symbols resize the window and repeat

00:12:25,390 --> 00:12:30,050
finally we would have to write the jason

00:12:27,710 --> 00:12:31,970
to the disk shut down that static web

00:12:30,050 --> 00:12:33,530
server shut down puppeteer and of course

00:12:31,970 --> 00:12:35,510
if anything went wrong along the way we

00:12:33,530 --> 00:12:37,220
would have to catch the error shut down

00:12:35,510 --> 00:12:38,240
everything gracefully that's sort of

00:12:37,220 --> 00:12:40,730
things so there's quite a bit of work

00:12:38,240 --> 00:12:42,320
required to set that up so I had an idea

00:12:40,730 --> 00:12:44,390
of course generally what I find is that

00:12:42,320 --> 00:12:45,950
whenever you have a big list of steps

00:12:44,390 --> 00:12:47,780
that are required and corresponding

00:12:45,950 --> 00:12:49,790
dependencies to perform something that

00:12:47,780 --> 00:12:51,830
in your head is just a single simple

00:12:49,790 --> 00:12:53,960
task I just want to capture some symbols

00:12:51,830 --> 00:12:55,790
in the page there's generally an

00:12:53,960 --> 00:12:57,470
opportunity for a library and of course

00:12:55,790 --> 00:13:00,530
that's what we did we created an open

00:12:57,470 --> 00:13:03,380
source HTML Sketchup CLI as the name

00:13:00,530 --> 00:13:05,030
might suggest it's a CLI tool that wraps

00:13:03,380 --> 00:13:08,030
up this process around HTML Sketch up

00:13:05,030 --> 00:13:09,650
for you so it's as simple as this to run

00:13:08,030 --> 00:13:12,260
you run HTML sketch up pointing at a

00:13:09,650 --> 00:13:14,630
file and tell it which director you want

00:13:12,260 --> 00:13:16,610
to output to there's a few more options

00:13:14,630 --> 00:13:18,380
available so in the cases of our system

00:13:16,610 --> 00:13:20,870
what we have is we actually serve a

00:13:18,380 --> 00:13:22,700
static site out of Doc's slash dist

00:13:20,870 --> 00:13:24,230
because we have the whole documentation

00:13:22,700 --> 00:13:26,240
inside that it's part of

00:13:24,230 --> 00:13:27,980
we tell it which URL we want to point to

00:13:26,240 --> 00:13:30,260
and we tell it where we want to compile

00:13:27,980 --> 00:13:31,760
out to and then we also say that our

00:13:30,260 --> 00:13:35,900
viewports our desktop and mobile these

00:13:31,760 --> 00:13:37,940
resolutions what's required to make it

00:13:35,900 --> 00:13:39,320
as simple as this to use is that you

00:13:37,940 --> 00:13:42,290
have to wrap the elements in the page

00:13:39,320 --> 00:13:44,600
with elements with data sketch symbol

00:13:42,290 --> 00:13:46,250
text and color attributes so this way

00:13:44,600 --> 00:13:48,260
you can annotate what parts of the page

00:13:46,250 --> 00:13:50,690
need to be exported as symbols or

00:13:48,260 --> 00:13:52,100
textiles or colors and also describe

00:13:50,690 --> 00:13:55,640
what the name should be once it's

00:13:52,100 --> 00:13:58,460
imported into sketch so we ship that as

00:13:55,640 --> 00:13:59,600
a standalone open-source library that

00:13:58,460 --> 00:14:01,490
you can use as well and your own

00:13:59,600 --> 00:14:03,860
projects and when we imported it back

00:14:01,490 --> 00:14:05,660
into the the style guide where it began

00:14:03,860 --> 00:14:07,279
and deleted all of our custom code it

00:14:05,660 --> 00:14:09,589
looks something like this so quite a lot

00:14:07,279 --> 00:14:11,570
of boilerplate wiring code was able to

00:14:09,589 --> 00:14:12,740
be removed from our project so this is

00:14:11,570 --> 00:14:14,180
the difference of course in the amount

00:14:12,740 --> 00:14:17,450
of work it would be required for you to

00:14:14,180 --> 00:14:18,950
integrate this into your own work the

00:14:17,450 --> 00:14:20,570
exciting thing for me is this now forms

00:14:18,950 --> 00:14:21,740
part of our continuous design pipeline

00:14:20,570 --> 00:14:24,500
bringing the world of continuous

00:14:21,740 --> 00:14:26,089
delivery to design with every merge the

00:14:24,500 --> 00:14:28,490
master we deploy to get hub pages with a

00:14:26,089 --> 00:14:30,200
really great CLI tool gh-pages we

00:14:28,490 --> 00:14:31,820
publish to NPM automatically with the

00:14:30,200 --> 00:14:33,350
versioning taken care of for you with

00:14:31,820 --> 00:14:35,060
semantic release if you haven't checked

00:14:33,350 --> 00:14:37,580
out semantic release please do I am a

00:14:35,060 --> 00:14:39,709
huge fan and finally now we also

00:14:37,580 --> 00:14:41,900
generate these almost sketch files on

00:14:39,709 --> 00:14:43,520
every build so very easily at the end of

00:14:41,900 --> 00:14:44,980
every build process we can get those

00:14:43,520 --> 00:14:47,390
types of files and pull them into sketch

00:14:44,980 --> 00:14:49,250
from a designer's perspective it looks

00:14:47,390 --> 00:14:51,020
something like this they can open the

00:14:49,250 --> 00:14:53,060
sketch file add it as a library and then

00:14:51,020 --> 00:14:55,339
in any document that they're working on

00:14:53,060 --> 00:14:56,900
at any point they can drill down into

00:14:55,339 --> 00:14:59,330
this dedicated menu that's permanently

00:14:56,900 --> 00:15:00,470
in their environment they can select a

00:14:59,330 --> 00:15:02,959
component from the list of components

00:15:00,470 --> 00:15:04,790
where each component name of course maps

00:15:02,959 --> 00:15:06,380
to the corresponding code they can see

00:15:04,790 --> 00:15:07,520
the all the different variations of

00:15:06,380 --> 00:15:10,640
those components and the different

00:15:07,520 --> 00:15:12,800
screen sizes putting that together into

00:15:10,640 --> 00:15:14,360
an actual design this is about one

00:15:12,800 --> 00:15:16,730
minutes worth of work sped up of

00:15:14,360 --> 00:15:18,260
creating a simple sign-in form but

00:15:16,730 --> 00:15:19,910
something that you know can be built

00:15:18,260 --> 00:15:21,830
easily out of standardized components

00:15:19,910 --> 00:15:22,790
can be done very quickly and sketched so

00:15:21,830 --> 00:15:25,130
they don't have to reinvent the wheel

00:15:22,790 --> 00:15:26,810
and it's very easy to work with and the

00:15:25,130 --> 00:15:28,970
designers really really appreciate this

00:15:26,810 --> 00:15:31,040
work and it also doubles as inline

00:15:28,970 --> 00:15:33,589
documentation for what's in the style

00:15:31,040 --> 00:15:35,900
guide and what are things called but

00:15:33,589 --> 00:15:37,310
this is just the beginning really this

00:15:35,900 --> 00:15:39,020
this new way of

00:15:37,310 --> 00:15:40,520
talking about designing and using

00:15:39,020 --> 00:15:42,590
components as the basis for future

00:15:40,520 --> 00:15:44,750
designs it's something to be formalizing

00:15:42,590 --> 00:15:46,070
a new round of tooling the most obvious

00:15:44,750 --> 00:15:48,320
one that's getting the most buzz is

00:15:46,070 --> 00:15:50,150
framer X frame X is a design tool that's

00:15:48,320 --> 00:15:51,680
built on this idea from the ground up

00:15:50,150 --> 00:15:54,140
very much inspired by the work with

00:15:51,680 --> 00:15:55,430
react Sketchup so they have components

00:15:54,140 --> 00:15:57,380
there on the left and they even have a

00:15:55,430 --> 00:15:59,420
component store where you can install

00:15:57,380 --> 00:16:01,250
entire libraries of components these

00:15:59,420 --> 00:16:02,930
components under the hood are all built

00:16:01,250 --> 00:16:04,940
using react so the code that you're

00:16:02,930 --> 00:16:06,440
using in your production code could be

00:16:04,940 --> 00:16:08,089
migrated into this environment for

00:16:06,440 --> 00:16:09,950
designers to use but it's very much

00:16:08,089 --> 00:16:11,330
built for designers but it's not the

00:16:09,950 --> 00:16:13,130
only one there's tools like composite

00:16:11,330 --> 00:16:15,230
allowed for maintaining design systems

00:16:13,130 --> 00:16:19,040
and compositor zero for combining them

00:16:15,230 --> 00:16:21,260
into UI prototypes got tools like haiku

00:16:19,040 --> 00:16:22,970
that allow you to create animations and

00:16:21,260 --> 00:16:25,040
export them as components and publish

00:16:22,970 --> 00:16:26,720
them as NPM packages which is really

00:16:25,040 --> 00:16:29,779
amazing the way they're bringing these

00:16:26,720 --> 00:16:31,670
two worlds together UX pin is already a

00:16:29,779 --> 00:16:33,920
big player in that in the design tool

00:16:31,670 --> 00:16:38,000
space and they're working on a component

00:16:33,920 --> 00:16:39,830
based code based can design tool module

00:16:38,000 --> 00:16:42,500
studio is another tool that's actually

00:16:39,830 --> 00:16:44,150
just had a Kickstarter open up so if

00:16:42,500 --> 00:16:45,560
you're interested throw some money their

00:16:44,150 --> 00:16:48,440
way they're also working hard to bring

00:16:45,560 --> 00:16:49,970
this idea to life and finally interplay

00:16:48,440 --> 00:16:51,950
is another tool that I'm really excited

00:16:49,970 --> 00:16:53,810
about it's one that's actually being

00:16:51,950 --> 00:16:55,670
partly built out of Australia so I'm

00:16:53,810 --> 00:16:57,589
friends with one of the developers and

00:16:55,670 --> 00:16:59,120
this is actually showing you what it

00:16:57,589 --> 00:17:00,950
looks like with our own design system

00:16:59,120 --> 00:17:03,080
integrated into it so dragging and

00:17:00,950 --> 00:17:05,329
dropping components from that side side

00:17:03,080 --> 00:17:07,550
bar on the Left customizing the props

00:17:05,329 --> 00:17:09,949
looking at live previews in simulated

00:17:07,550 --> 00:17:11,560
browser mobile browser environments that

00:17:09,949 --> 00:17:13,880
sort of thing really impressive stuff

00:17:11,560 --> 00:17:15,020
these tools are truly embracing the

00:17:13,880 --> 00:17:17,199
Design Systems era

00:17:15,020 --> 00:17:19,579
we're not hacking our way into old

00:17:17,199 --> 00:17:21,800
legacies the whole illustration tools

00:17:19,579 --> 00:17:23,380
these are component based design tools

00:17:21,800 --> 00:17:25,550
for the kind of work that we're doing

00:17:23,380 --> 00:17:28,220
and it's creating that feedback loop

00:17:25,550 --> 00:17:29,750
from design to code and back so once you

00:17:28,220 --> 00:17:31,370
implement it in code it doesn't stay

00:17:29,750 --> 00:17:35,150
there it feeds back into the next round

00:17:31,370 --> 00:17:36,770
of design that really starts to change

00:17:35,150 --> 00:17:38,540
the nature of our work and the way we

00:17:36,770 --> 00:17:40,370
think about our responsibilities in

00:17:38,540 --> 00:17:42,380
terms of design because now as

00:17:40,370 --> 00:17:44,450
developers we are custodians of design

00:17:42,380 --> 00:17:46,010
not merely implementers we don't just

00:17:44,450 --> 00:17:47,900
take specs and build them and ship them

00:17:46,010 --> 00:17:49,840
we're actually building the basis of the

00:17:47,900 --> 00:17:53,860
next round of design and the in

00:17:49,840 --> 00:17:55,510
puts into future towing this is because

00:17:53,860 --> 00:17:57,039
effectively what we're seeing thanks to

00:17:55,510 --> 00:17:59,340
this new round of design tools as the

00:17:57,039 --> 00:18:01,539
components are the new design API

00:17:59,340 --> 00:18:03,070
they're the contract between designers

00:18:01,539 --> 00:18:05,110
and developers if we want to start

00:18:03,070 --> 00:18:07,720
collaborating and our component api's

00:18:05,110 --> 00:18:10,059
have to be really good but it takes a

00:18:07,720 --> 00:18:11,980
different way of thinking so how do we

00:18:10,059 --> 00:18:14,500
force ourselves to think component first

00:18:11,980 --> 00:18:17,350
as developers it's all too easy for us

00:18:14,500 --> 00:18:20,470
to create escape hatches hack inline

00:18:17,350 --> 00:18:22,630
style sheets and hack away around the

00:18:20,470 --> 00:18:24,010
gaps in a component system these design

00:18:22,630 --> 00:18:25,270
tools won't make that so easy for

00:18:24,010 --> 00:18:27,730
designers we really have to get our

00:18:25,270 --> 00:18:29,890
component api's right the way we've

00:18:27,730 --> 00:18:31,870
started to address this at sea is with

00:18:29,890 --> 00:18:33,909
this tool I threw together a while back

00:18:31,870 --> 00:18:36,789
called the we called the sik style guide

00:18:33,909 --> 00:18:38,140
sandbox and what it provides is a panel

00:18:36,789 --> 00:18:40,270
at the bottom there where you just write

00:18:38,140 --> 00:18:41,890
JSX we try to keep it as simple as

00:18:40,270 --> 00:18:45,279
possible so it's a bit more approachable

00:18:41,890 --> 00:18:48,130
for non developers so all you have to do

00:18:45,279 --> 00:18:50,020
is write the JSX and as you type in line

00:18:48,130 --> 00:18:52,360
in these iframes at the top it renders a

00:18:50,020 --> 00:18:53,919
different screen sizes so it does a

00:18:52,360 --> 00:18:55,240
really good job of showing what's

00:18:53,919 --> 00:18:56,980
possible with everything that's built

00:18:55,240 --> 00:18:59,460
into the system and it gives you a good

00:18:56,980 --> 00:19:01,600
sense of maybe what's missing as well

00:18:59,460 --> 00:19:03,309
it's giving you that code oriented

00:19:01,600 --> 00:19:04,510
design environment so as you get closer

00:19:03,309 --> 00:19:06,549
to production and closer to

00:19:04,510 --> 00:19:08,020
implementation you can start to test the

00:19:06,549 --> 00:19:10,929
boundaries of what your design system

00:19:08,020 --> 00:19:12,399
provides so you can design in the final

00:19:10,929 --> 00:19:13,840
medium this is really valuable when

00:19:12,399 --> 00:19:15,700
you're starting to collaborate again

00:19:13,840 --> 00:19:17,500
closer to implementation with designers

00:19:15,700 --> 00:19:19,419
it allows you to create those quick

00:19:17,500 --> 00:19:20,919
mock-ups and prototypes this is

00:19:19,419 --> 00:19:23,260
something that was hugely valuable to us

00:19:20,919 --> 00:19:24,850
we could evaluate the flexibility of our

00:19:23,260 --> 00:19:26,740
design system and as someone who works

00:19:24,850 --> 00:19:28,390
on a design system full-time this is

00:19:26,740 --> 00:19:30,010
proved to be invaluable having that

00:19:28,390 --> 00:19:31,710
blank slate to be able to trial the

00:19:30,010 --> 00:19:34,779
components in different combinations and

00:19:31,710 --> 00:19:36,220
finally we're where we've also got a lot

00:19:34,779 --> 00:19:38,860
of usage out of it is the fact that as

00:19:36,220 --> 00:19:41,350
you type the code is stored in the URL

00:19:38,860 --> 00:19:43,270
and base64 encoded so you can copy and

00:19:41,350 --> 00:19:44,980
paste URLs around we often find

00:19:43,270 --> 00:19:47,169
ourselves lacking these prototypes to

00:19:44,980 --> 00:19:49,000
each other and it's also doubled as a

00:19:47,169 --> 00:19:50,380
way to test out new components as

00:19:49,000 --> 00:19:53,470
they're being proposed which is really

00:19:50,380 --> 00:19:54,760
great now as you can imagine it's in my

00:19:53,470 --> 00:19:56,710
nature to look at something like that

00:19:54,760 --> 00:19:58,929
and say that is too useful not to share

00:19:56,710 --> 00:20:01,630
it was all hard-coded in hell our own

00:19:58,929 --> 00:20:03,490
personal website there were definitely

00:20:01,630 --> 00:20:05,500
cases where we started to

00:20:03,490 --> 00:20:07,120
need to use it outside of that context

00:20:05,500 --> 00:20:09,700
and so I wanted to be able to extract it

00:20:07,120 --> 00:20:12,130
so I'm here today to announce for the

00:20:09,700 --> 00:20:14,860
first time publicly that this is now

00:20:12,130 --> 00:20:16,660
going to be available to you as playroom

00:20:14,860 --> 00:20:19,059
playroom is a new tool that's just open

00:20:16,660 --> 00:20:20,640
sourced this morning you can go over to

00:20:19,059 --> 00:20:24,309
MPN and install it right now

00:20:20,640 --> 00:20:26,440
so npm install' playroom and of course

00:20:24,309 --> 00:20:28,900
like any good JavaScript tool it's got

00:20:26,440 --> 00:20:31,030
its own dedicated config file you can

00:20:28,900 --> 00:20:32,559
define your components your themes it's

00:20:31,030 --> 00:20:34,900
also supports rendering multiple themes

00:20:32,559 --> 00:20:36,250
you can customize a frame component that

00:20:34,900 --> 00:20:37,510
wraps every single one of those frames

00:20:36,250 --> 00:20:39,670
that's where you need to do the wiring

00:20:37,510 --> 00:20:41,350
for things like a theming or if you need

00:20:39,670 --> 00:20:43,450
to customize if you're using a CSS

00:20:41,350 --> 00:20:45,070
andreas library you can customize the

00:20:43,450 --> 00:20:46,809
widths that you want to render it you

00:20:45,070 --> 00:20:48,850
can provide the example code customize

00:20:46,809 --> 00:20:51,250
the web pack config if needed and you

00:20:48,850 --> 00:20:53,620
can define an output path so once you've

00:20:51,250 --> 00:20:55,929
done all that and you run the playroom

00:20:53,620 --> 00:20:57,309
command it opens up this environment for

00:20:55,929 --> 00:20:59,200
you you can see now we've stripped away

00:20:57,309 --> 00:21:00,850
our six specific branding tried to make

00:20:59,200 --> 00:21:02,980
it look a bit more like a standard

00:21:00,850 --> 00:21:04,929
design tool and that code down the

00:21:02,980 --> 00:21:06,040
bottom again is exactly the components

00:21:04,929 --> 00:21:07,480
that you've exposed in your

00:21:06,040 --> 00:21:09,490
configuration so if you've got a design

00:21:07,480 --> 00:21:11,260
system you can quickly get up and

00:21:09,490 --> 00:21:14,410
running with this environment based on

00:21:11,260 --> 00:21:16,690
your own your own components as I said

00:21:14,410 --> 00:21:18,100
it also supports theming so I won't go

00:21:16,690 --> 00:21:20,050
into detail but we're also working on a

00:21:18,100 --> 00:21:22,270
new themed design system that's separate

00:21:20,050 --> 00:21:24,429
to our existing one we need to support

00:21:22,270 --> 00:21:25,809
multiple brands and this has proved

00:21:24,429 --> 00:21:28,179
invaluable for us to start to get a

00:21:25,809 --> 00:21:29,440
sense of for a single set of JSX how

00:21:28,179 --> 00:21:31,020
does this project across the different

00:21:29,440 --> 00:21:33,250
brands at the different screen sizes

00:21:31,020 --> 00:21:35,620
tooling like this just did not exist for

00:21:33,250 --> 00:21:37,240
us to give us that sense of of how well

00:21:35,620 --> 00:21:40,240
our component library is scaling across

00:21:37,240 --> 00:21:41,470
the brands once you're ready for

00:21:40,240 --> 00:21:43,450
production you can run player and build

00:21:41,470 --> 00:21:45,280
you get a standalone bundle that you can

00:21:43,450 --> 00:21:46,809
then deploy to production whether that's

00:21:45,280 --> 00:21:48,700
part of your existing design system

00:21:46,809 --> 00:21:50,350
documentation or a standalone site is up

00:21:48,700 --> 00:21:53,050
to you but you've got that bundle ready

00:21:50,350 --> 00:21:55,240
to go now in my mind what this is

00:21:53,050 --> 00:21:56,860
starting to do is is form part of a

00:21:55,240 --> 00:21:58,450
suite of tools that are trying to solve

00:21:56,860 --> 00:22:00,370
different problems in the design system

00:21:58,450 --> 00:22:01,660
space you've got existing tooling like

00:22:00,370 --> 00:22:02,740
story book that shows you what your

00:22:01,660 --> 00:22:04,390
components look like in all their

00:22:02,740 --> 00:22:05,590
different supported States you've got

00:22:04,390 --> 00:22:07,390
tools like style guidance that will

00:22:05,590 --> 00:22:08,890
generate you a documentation site and

00:22:07,390 --> 00:22:10,750
tell you what all the options for all

00:22:08,890 --> 00:22:12,520
your components are and now you've got

00:22:10,750 --> 00:22:14,290
playroom that's filling the gap of how

00:22:12,520 --> 00:22:17,050
do you exercise your component live with

00:22:14,290 --> 00:22:17,350
library on a blank slate showing people

00:22:17,050 --> 00:22:19,390
risk

00:22:17,350 --> 00:22:21,070
what your system can achieve what the

00:22:19,390 --> 00:22:24,039
edges are what new components are doing

00:22:21,070 --> 00:22:25,390
for you and so on so we've covered a lot

00:22:24,039 --> 00:22:27,730
of ground today and I'm almost out of

00:22:25,390 --> 00:22:28,990
time what does this mean for the future

00:22:27,730 --> 00:22:31,120
of front-end development there's some

00:22:28,990 --> 00:22:32,620
huge changes happening here in a really

00:22:31,120 --> 00:22:35,140
different way of thinking what does this

00:22:32,620 --> 00:22:37,330
mean for us it's bringing design to

00:22:35,140 --> 00:22:38,919
development of course design systems are

00:22:37,330 --> 00:22:40,870
really built on the idea of trying to

00:22:38,919 --> 00:22:42,460
formalize the way designers think about

00:22:40,870 --> 00:22:43,990
their work and capturing it as

00:22:42,460 --> 00:22:45,730
accurately as possible in a component

00:22:43,990 --> 00:22:48,039
system and really trying to make the

00:22:45,730 --> 00:22:49,929
components as useful as possible for

00:22:48,039 --> 00:22:52,720
developers while being as true to the

00:22:49,929 --> 00:22:54,250
vision of designers as possible but it's

00:22:52,720 --> 00:22:56,530
also trying to do the reverse it's

00:22:54,250 --> 00:22:57,580
bringing development to design it's

00:22:56,530 --> 00:22:59,320
trying to make it so that once you

00:22:57,580 --> 00:23:01,450
formalize your design system in code

00:22:59,320 --> 00:23:03,419
that code is not just for developers but

00:23:01,450 --> 00:23:05,679
it's an input into design tools

00:23:03,419 --> 00:23:07,630
prototyping tools mock-up tools the next

00:23:05,679 --> 00:23:10,059
round of design and so we can start to

00:23:07,630 --> 00:23:13,179
agree on that component API as an entire

00:23:10,059 --> 00:23:15,390
industry as an entire company and

00:23:13,179 --> 00:23:17,620
working across those boundaries and

00:23:15,390 --> 00:23:19,330
we're just getting started so as I

00:23:17,620 --> 00:23:21,250
alluded to before there's a whole suite

00:23:19,330 --> 00:23:22,150
of new tools coming out the challenge

00:23:21,250 --> 00:23:23,620
there of course is that we're going to

00:23:22,150 --> 00:23:25,240
have to convince the designers to start

00:23:23,620 --> 00:23:27,760
using these tools but in the meantime

00:23:25,240 --> 00:23:30,039
tools like HTML Sketchup and HTML

00:23:27,760 --> 00:23:31,600
Sketchup CLI getting ourselves into the

00:23:30,039 --> 00:23:33,340
tooling that designers are using already

00:23:31,600 --> 00:23:35,049
is a really important first step and

00:23:33,340 --> 00:23:36,789
starting to train them to think this way

00:23:35,049 --> 00:23:38,679
and of course tools like player am I

00:23:36,789 --> 00:23:40,150
going to let us as developers ready

00:23:38,679 --> 00:23:41,799
ourselves for the next round of tooling

00:23:40,150 --> 00:23:43,480
so I hope you join me on this journey

00:23:41,799 --> 00:23:45,100
and I hope you'll make really good

00:23:43,480 --> 00:23:46,690
component libraries for yourselves and

00:23:45,100 --> 00:23:48,700
for your companies for your for your

00:23:46,690 --> 00:23:50,860
fellow developers and designers and

00:23:48,700 --> 00:23:52,270
please join me on this journey try all

00:23:50,860 --> 00:23:54,730
the new tooling and let me know what you

00:23:52,270 --> 00:23:57,390
think that's it for me thank you so much

00:23:54,730 --> 00:23:57,390
for listening

00:23:59,100 --> 00:24:01,160

YouTube URL: https://www.youtube.com/watch?v=mrbkDdhtTKM


