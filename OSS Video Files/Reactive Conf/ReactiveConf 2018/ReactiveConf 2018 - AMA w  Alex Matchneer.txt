Title: ReactiveConf 2018 - AMA w  Alex Matchneer
Publication date: 2018-11-05
Playlist: ReactiveConf 2018
Description: 
	29th - 31st October 2018, Prague, Czech Republic
https://reactiveconf.com/
Discovery stage
-------------------------------------------------------------------
Ask Me Anything session, moderated by Gerard Sans.
Based on Alex's previous talk on ReactiveConf Main stage: https://www.youtube.com/watch?v=0HDhDQ_yde0&t=778s
Captions: 
	00:00:02,490 --> 00:00:08,960
[Music]

00:00:12,430 --> 00:00:18,290
ok let's get started so we have Alex

00:00:15,410 --> 00:00:23,330
much near coming from New York and he

00:00:18,290 --> 00:00:26,149
was doing a talk about this system where

00:00:23,330 --> 00:00:28,070
he had to synchronize in real time and

00:00:26,149 --> 00:00:32,000
figure it out how the different

00:00:28,070 --> 00:00:33,829
information was in sync and I guess we

00:00:32,000 --> 00:00:36,140
get a lot of you know feedback from that

00:00:33,829 --> 00:00:38,059
talk and we want to cover some of the

00:00:36,140 --> 00:00:40,820
questions that may have rise during

00:00:38,059 --> 00:00:43,370
during that time and also if you have

00:00:40,820 --> 00:00:48,530
other other questions that you want to

00:00:43,370 --> 00:00:50,960
ask him let's let's start with like what

00:00:48,530 --> 00:00:53,600
what do you think have been the most

00:00:50,960 --> 00:00:56,210
challenging times to implement this this

00:00:53,600 --> 00:00:58,790
type of system I think a lot of it has

00:00:56,210 --> 00:01:01,489
to do with not being able to really look

00:00:58,790 --> 00:01:03,079
anywhere for advice because the only app

00:01:01,489 --> 00:01:05,360
that seemed to do the same kind of thing

00:01:03,079 --> 00:01:07,400
was uber and at the time they didn't

00:01:05,360 --> 00:01:09,680
really have they didn't really share how

00:01:07,400 --> 00:01:11,689
they were building these things and on

00:01:09,680 --> 00:01:13,970
top of that you know I had a lot of

00:01:11,689 --> 00:01:15,950
experience working on ember and working

00:01:13,970 --> 00:01:19,190
on like the the router and how it parses

00:01:15,950 --> 00:01:21,050
URLs and so my mind set for how to

00:01:19,190 --> 00:01:22,760
tackle these problems was very geared

00:01:21,050 --> 00:01:25,250
toward keeping the constraints of

00:01:22,760 --> 00:01:27,350
clicking around in a browser and in mind

00:01:25,250 --> 00:01:28,610
and I think having these like deeply

00:01:27,350 --> 00:01:29,990
ingrained patterns for how I build

00:01:28,610 --> 00:01:33,200
things that was really hard to like pull

00:01:29,990 --> 00:01:35,120
away from that and rethink the the

00:01:33,200 --> 00:01:37,100
specific problem so just as a reminder

00:01:35,120 --> 00:01:39,170
the problem is you have two different

00:01:37,100 --> 00:01:41,869
kinds of apps you know take the uber

00:01:39,170 --> 00:01:43,670
example of a passenger and driver and

00:01:41,869 --> 00:01:45,650
they need to keep in sync with each

00:01:43,670 --> 00:01:48,350
other in order for the product to work

00:01:45,650 --> 00:01:51,830
in order for passengers to find drivers

00:01:48,350 --> 00:01:53,930
and whatnot if anything breaks down in

00:01:51,830 --> 00:01:56,630
their connections to the server or their

00:01:53,930 --> 00:01:59,240
their app code is written poorly it has

00:01:56,630 --> 00:02:00,770
a bug that that doesn't follow what this

00:01:59,240 --> 00:02:02,210
server tells it is at state then the

00:02:00,770 --> 00:02:04,010
whole thing kind of kind of breaks down

00:02:02,210 --> 00:02:05,830
so in our case we've got shoppers that

00:02:04,010 --> 00:02:08,119
need to be in sync with that in-store

00:02:05,830 --> 00:02:11,000
merchant app as they're walking around

00:02:08,119 --> 00:02:12,590
grocery stores and scanning and keeping

00:02:11,000 --> 00:02:14,810
those apps in sync and kind of knowing

00:02:12,590 --> 00:02:17,629
how to write code that felt clean and

00:02:14,810 --> 00:02:20,319
was kind of consistent across the code

00:02:17,629 --> 00:02:23,090
bases was very difficult yeah and

00:02:20,319 --> 00:02:26,000
there's also a lot of innovation and

00:02:23,090 --> 00:02:28,340
space and I can imagine you know it can

00:02:26,000 --> 00:02:30,680
get pretty tough when you know the

00:02:28,340 --> 00:02:32,900
competitor is adding new features and

00:02:30,680 --> 00:02:34,519
you maybe are still stabilizing some of

00:02:32,900 --> 00:02:36,680
the code that you are that you have

00:02:34,519 --> 00:02:39,110
released I mean this seems like a

00:02:36,680 --> 00:02:42,799
challenging and challenging development

00:02:39,110 --> 00:02:44,599
sure oh I'm not I got a handful of ideas

00:02:42,799 --> 00:02:45,769
of who the competitors are I know some

00:02:44,599 --> 00:02:47,930
of them have kind of like fallen away

00:02:45,769 --> 00:02:49,519
and some of them kind of approached the

00:02:47,930 --> 00:02:51,980
product differently is that they haven't

00:02:49,519 --> 00:02:54,590
had to solve the same problems as us so

00:02:51,980 --> 00:02:56,269
I can't even it's it's hard even to look

00:02:54,590 --> 00:02:58,280
to them as like oh they did it this

00:02:56,269 --> 00:03:00,440
clever way okay now I'm gonna adapt it's

00:02:58,280 --> 00:03:04,069
all kind of just kind of feeling my way

00:03:00,440 --> 00:03:07,010
around the dark and maybe maybe you want

00:03:04,069 --> 00:03:09,410
to give like a little intro so maybe for

00:03:07,010 --> 00:03:12,650
the people that maybe are joining just

00:03:09,410 --> 00:03:15,170
now so what what is the app what is

00:03:12,650 --> 00:03:17,150
basically the the main features and kind

00:03:15,170 --> 00:03:19,489
of a nice intro for for the people to

00:03:17,150 --> 00:03:21,110
join the conversation sure it might

00:03:19,489 --> 00:03:23,299
actually be easier if I jump - laughs -

00:03:21,110 --> 00:03:25,310
sure again there's two slides from the

00:03:23,299 --> 00:03:32,389
talk yesterday that kind of reintroduce

00:03:25,310 --> 00:03:34,549
it pretty well so these are showing up

00:03:32,389 --> 00:03:36,680
all right so this is mobile checkout and

00:03:34,549 --> 00:03:38,870
this is an app that we built that's kind

00:03:36,680 --> 00:03:40,790
of white label so different companies

00:03:38,870 --> 00:03:43,310
have bought this and it's been branded

00:03:40,790 --> 00:03:46,190
to them and put to the upload to the App

00:03:43,310 --> 00:03:48,109
Store and Play Store and it's built with

00:03:46,190 --> 00:03:49,459
ember in Cordova so not not react native

00:03:48,109 --> 00:03:51,919
like I think a lot of people here are

00:03:49,459 --> 00:03:54,560
using and the idea is that you open the

00:03:51,919 --> 00:03:55,880
app and you geolocate it finds the

00:03:54,560 --> 00:03:57,680
nearest store you say they're gonna

00:03:55,880 --> 00:03:59,269
start shopping and then you can start

00:03:57,680 --> 00:04:01,880
pulling items off the shelf and scanning

00:03:59,269 --> 00:04:04,489
it and seeing the prices live calculated

00:04:01,880 --> 00:04:06,230
with real you know prices and from there

00:04:04,489 --> 00:04:08,510
from the database with taxation and

00:04:06,230 --> 00:04:10,459
coupons and all the complicated corner

00:04:08,510 --> 00:04:12,739
cases and then you sort of review your

00:04:10,459 --> 00:04:14,060
purchased you checkout and 90% of the

00:04:12,739 --> 00:04:16,940
time you just walk out of the store and

00:04:14,060 --> 00:04:19,359
every so often you have to do a security

00:04:16,940 --> 00:04:21,859
check and this is a little video demo of

00:04:19,359 --> 00:04:25,340
pulling some gummi bears off the wall

00:04:21,859 --> 00:04:26,539
scanning it and having it you know I

00:04:25,340 --> 00:04:28,870
could probably position this a little

00:04:26,539 --> 00:04:28,870
bit better

00:04:30,830 --> 00:04:36,620
well anyway I'll show it one more time

00:04:33,550 --> 00:04:39,440
so pulling some Haribo gummi bears off

00:04:36,620 --> 00:04:41,030
the wall putting the barcode in there it

00:04:39,440 --> 00:04:42,740
scans it adds it to the cart and then

00:04:41,030 --> 00:04:44,090
you can sort of review the purchase

00:04:42,740 --> 00:04:46,490
you're about to make and I recorded that

00:04:44,090 --> 00:04:49,460
on my phone at the livest or the fairway

00:04:46,490 --> 00:04:50,389
market store in New York City it's

00:04:49,460 --> 00:04:51,919
really nice to be able to use your own

00:04:50,389 --> 00:04:54,620
product you know two blocks away from

00:04:51,919 --> 00:04:56,810
where you work and this is kind of where

00:04:54,620 --> 00:04:58,940
we're at so that's a basic introduction

00:04:56,810 --> 00:05:00,500
of what we've had to build what it

00:04:58,940 --> 00:05:02,870
doesn't show about the real-time thing

00:05:00,500 --> 00:05:05,030
is that there's also a merchant app

00:05:02,870 --> 00:05:06,430
that's good that can that's like the

00:05:05,030 --> 00:05:08,780
cashiers are using and they can see

00:05:06,430 --> 00:05:10,490
everybody that's scanning gummy bears

00:05:08,780 --> 00:05:12,349
and seeing like how they're building up

00:05:10,490 --> 00:05:14,569
their carts and if they have to do this

00:05:12,349 --> 00:05:16,340
security check they they're gonna get

00:05:14,569 --> 00:05:18,169
alerted to come over and like double

00:05:16,340 --> 00:05:20,750
check the bag and say good to go and

00:05:18,169 --> 00:05:22,490
that's that's the most complicated and

00:05:20,750 --> 00:05:24,199
most sensitive part of this whole

00:05:22,490 --> 00:05:26,180
product set that stage that's sort of

00:05:24,199 --> 00:05:28,099
like nail by D stage of like uh of like

00:05:26,180 --> 00:05:30,530
that they actually have to do some stuff

00:05:28,099 --> 00:05:32,120
and everything needs to work and no one

00:05:30,530 --> 00:05:34,310
can have a connection out edge it's it's

00:05:32,120 --> 00:05:36,469
like it's really odd that that seems

00:05:34,310 --> 00:05:39,199
that seems quite complicated yeah but

00:05:36,469 --> 00:05:42,319
thanks thanks for the intro sure we'll

00:05:39,199 --> 00:05:45,860
take some some of the questions let's

00:05:42,319 --> 00:05:48,319
see what we have so what can you tell us

00:05:45,860 --> 00:05:50,960
about this the server-side architecture

00:05:48,319 --> 00:05:54,469
so so I can tell you a little bit about

00:05:50,960 --> 00:05:57,169
where we are now and where we are headed

00:05:54,469 --> 00:05:58,460
so we're kind of finishing up this some

00:05:57,169 --> 00:06:00,289
of the realizations for how to better

00:05:58,460 --> 00:06:02,810
architect the client-side which includes

00:06:00,289 --> 00:06:04,639
everything I presented on and I

00:06:02,810 --> 00:06:07,460
mentioned the talk that server side is

00:06:04,639 --> 00:06:10,490
deafening stone component what where we

00:06:07,460 --> 00:06:13,039
are now is that we have a kind of messy

00:06:10,490 --> 00:06:15,110
approach where when we can send the

00:06:13,039 --> 00:06:16,759
payload updates of like purchase just

00:06:15,110 --> 00:06:18,050
changes we can send the whole thing and

00:06:16,759 --> 00:06:20,180
other times we're just sending some

00:06:18,050 --> 00:06:22,099
information that this has changed and

00:06:20,180 --> 00:06:24,169
it's just a cue to all connected clients

00:06:22,099 --> 00:06:28,810
just like hit some Ajax requests and

00:06:24,169 --> 00:06:31,039
pull the latest data those work but I

00:06:28,810 --> 00:06:33,229
feel oh so specifically we're using

00:06:31,039 --> 00:06:35,330
rails and we're using action cable which

00:06:33,229 --> 00:06:37,090
has been around since rails 5 and we

00:06:35,330 --> 00:06:39,050
waited a little bit for it to kind of

00:06:37,090 --> 00:06:40,699
settle before we took it in because

00:06:39,050 --> 00:06:42,610
rails is already I think on six at this

00:06:40,699 --> 00:06:45,460
point

00:06:42,610 --> 00:06:47,620
but we're using that so that our rails

00:06:45,460 --> 00:06:49,150
servers directly can maintain this

00:06:47,620 --> 00:06:51,310
persistent connection and we're hosting

00:06:49,150 --> 00:06:56,159
over Heroku which has had WebSockets

00:06:51,310 --> 00:07:00,449
support for a few years now what we are

00:06:56,159 --> 00:07:04,479
planning to move to is something like

00:07:00,449 --> 00:07:08,500
firebase so firebase is I think probably

00:07:04,479 --> 00:07:10,840
the easiest but also pretty robust real

00:07:08,500 --> 00:07:12,550
time database that you can use it's got

00:07:10,840 --> 00:07:14,729
a very simple model where your entire

00:07:12,550 --> 00:07:17,800
database is just a giant JSON blob and

00:07:14,729 --> 00:07:19,180
you can subscribe to sort of subtrees of

00:07:17,800 --> 00:07:21,099
that and the subtrees can have their

00:07:19,180 --> 00:07:23,740
different rules for who's allowed to

00:07:21,099 --> 00:07:25,389
read it and write to it and almost wish

00:07:23,740 --> 00:07:26,710
I had made a diagram for this but this

00:07:25,389 --> 00:07:30,099
what we're heading to and what I can

00:07:26,710 --> 00:07:32,379
recommend for people there's a lot of

00:07:30,099 --> 00:07:34,210
ways to use firebase incorrectly what I

00:07:32,379 --> 00:07:37,060
would recommend is an approach where you

00:07:34,210 --> 00:07:40,029
have your server that publishes all of

00:07:37,060 --> 00:07:42,000
the changes to firebase and treats

00:07:40,029 --> 00:07:47,050
firebase as kind of a like real-time

00:07:42,000 --> 00:07:48,460
read-only replica of your postgrads or

00:07:47,050 --> 00:07:49,779
whatever database that you're using on

00:07:48,460 --> 00:07:51,759
your server that you've already built up

00:07:49,779 --> 00:07:53,469
at this point publish all your changes

00:07:51,759 --> 00:07:56,259
to firebase and then have all of your

00:07:53,469 --> 00:07:58,529
clients just read only and just

00:07:56,259 --> 00:08:00,969
subscribe to updates from from firebase

00:07:58,529 --> 00:08:05,139
it's kind of got this unidirectional

00:08:00,969 --> 00:08:06,550
circular flow to it and it's in contrast

00:08:05,139 --> 00:08:08,500
it's to how I think a lot of people

00:08:06,550 --> 00:08:10,629
think they want to use firebase at first

00:08:08,500 --> 00:08:13,060
which is have all the clients like read

00:08:10,629 --> 00:08:14,409
and write to it but there's things that

00:08:13,060 --> 00:08:16,270
you need to be able to do that firebase

00:08:14,409 --> 00:08:18,599
is not very good at such as you know

00:08:16,270 --> 00:08:21,039
transactions our app has to deal with

00:08:18,599 --> 00:08:22,569
you know money changing hands and

00:08:21,039 --> 00:08:24,129
walking out of stores of physical goods

00:08:22,569 --> 00:08:26,979
so we can't have anything where the

00:08:24,129 --> 00:08:28,719
merchant and the the shopper are like

00:08:26,979 --> 00:08:31,060
writing to the same thing and saying

00:08:28,719 --> 00:08:33,760
like subtract you know 30 dollars from

00:08:31,060 --> 00:08:37,000
this thing that's not really a good way

00:08:33,760 --> 00:08:39,810
to use firebase so that is what we are

00:08:37,000 --> 00:08:43,390
the the sort of circular firebase as a

00:08:39,810 --> 00:08:44,829
read-only replica of of our post-grad

00:08:43,390 --> 00:08:49,449
server is kind of where we're heading

00:08:44,829 --> 00:08:51,250
and the only difference is that we we

00:08:49,449 --> 00:08:53,890
actually need to offer our product as a

00:08:51,250 --> 00:08:55,420
self hosted solution and firebase as far

00:08:53,890 --> 00:08:57,340
as I know is only something that's on

00:08:55,420 --> 00:08:59,800
the cloud that you have to pay for and

00:08:57,340 --> 00:09:01,510
so we are not actually going to

00:08:59,800 --> 00:09:03,760
specifically use firebase but we are

00:09:01,510 --> 00:09:07,240
probably going to build our own similar

00:09:03,760 --> 00:09:08,590
thing where it's just take take all the

00:09:07,240 --> 00:09:10,600
stuff that we currently have in rails

00:09:08,590 --> 00:09:12,910
that like rights to action cable take

00:09:10,600 --> 00:09:14,440
that out of there and have a separate

00:09:12,910 --> 00:09:16,120
server maintain the WebSocket

00:09:14,440 --> 00:09:18,190
connections so that all rails has to do

00:09:16,120 --> 00:09:20,770
is kind of have this request response

00:09:18,190 --> 00:09:23,200
style format where it validates the data

00:09:20,770 --> 00:09:25,060
you're sending to it does all the sort

00:09:23,200 --> 00:09:26,200
of low-level post grows transactions to

00:09:25,060 --> 00:09:28,240
make sure you're safe and then when

00:09:26,200 --> 00:09:30,760
everything's done publish to firebase

00:09:28,240 --> 00:09:32,230
and let it do its job that's where

00:09:30,760 --> 00:09:34,390
things are going we're not there yet but

00:09:32,230 --> 00:09:35,830
that is kind of if you're solving

00:09:34,390 --> 00:09:39,510
similar kinds of problems I definitely

00:09:35,830 --> 00:09:41,890
recommend that approach for server-side

00:09:39,510 --> 00:09:44,620
thinking thinking about the architecture

00:09:41,890 --> 00:09:46,000
that you were mentioning what is what is

00:09:44,620 --> 00:09:51,430
this scale that you are dealing with

00:09:46,000 --> 00:09:53,110
like of notifications of messages just

00:09:51,430 --> 00:09:57,490
we're certainly not having to deal with

00:09:53,110 --> 00:09:59,710
the kinds of problems of uber we know

00:09:57,490 --> 00:10:02,010
there would be nice problems to have but

00:09:59,710 --> 00:10:04,450
all the decisions that we're making are

00:10:02,010 --> 00:10:07,210
kind of predicting the future because

00:10:04,450 --> 00:10:09,550
things are looking pretty good at the

00:10:07,210 --> 00:10:12,300
moment you know where we're deployed or

00:10:09,550 --> 00:10:15,280
doing well and we're kind of integrating

00:10:12,300 --> 00:10:20,230
more more stores and opening up in more

00:10:15,280 --> 00:10:22,690
places so I don't know how to how to

00:10:20,230 --> 00:10:24,990
exactly how to quantify it but we're not

00:10:22,690 --> 00:10:27,280
at a scale where we're getting crucially

00:10:24,990 --> 00:10:28,660
we're running up against like massive

00:10:27,280 --> 00:10:30,400
performance issues but we don't want to

00:10:28,660 --> 00:10:34,480
build we don't really feel great about

00:10:30,400 --> 00:10:36,160
continuing to build on action cable some

00:10:34,480 --> 00:10:39,580
of that is not just like network traffic

00:10:36,160 --> 00:10:42,160
scale but also just like dealing with

00:10:39,580 --> 00:10:44,140
the corner cases connection loss keeping

00:10:42,160 --> 00:10:45,880
track of mix missed messages that you

00:10:44,140 --> 00:10:47,500
still need to send to the client there's

00:10:45,880 --> 00:10:48,910
it's a whole category of problems it's

00:10:47,500 --> 00:10:51,070
like gets Messier and uglier to deal

00:10:48,910 --> 00:10:53,620
with as more people start to use it and

00:10:51,070 --> 00:10:55,420
so we're trying to get off the system

00:10:53,620 --> 00:10:57,010
where our rails side has to kind of

00:10:55,420 --> 00:10:58,960
handle that sensitive subscription stuff

00:10:57,010 --> 00:11:02,620
as as soon as possible put it onto

00:10:58,960 --> 00:11:03,700
something like like very simple but good

00:11:02,620 --> 00:11:06,320
at handling that problem such as a

00:11:03,700 --> 00:11:09,680
firebase issued saying

00:11:06,320 --> 00:11:13,000
cool let's see let's see if we have any

00:11:09,680 --> 00:11:16,670
questions here from from the people here

00:11:13,000 --> 00:11:20,260
no ok I'll take another one from sliggoo

00:11:16,670 --> 00:11:20,260
oh ok

00:11:42,860 --> 00:11:48,590
so is the main part of the question

00:11:46,490 --> 00:11:49,990
about like what are the what are the

00:11:48,590 --> 00:12:14,030
implications on it's like stateless

00:11:49,990 --> 00:12:15,500
servers an anti-pattern well it's the

00:12:14,030 --> 00:12:19,430
hardest part if you have to have that

00:12:15,500 --> 00:12:21,050
kind of state do we have to repeat the

00:12:19,430 --> 00:12:27,400
questions for cuz I'm not sure what yeah

00:12:21,050 --> 00:12:30,290
if you want oh great

00:12:27,400 --> 00:12:33,350
sure um let me just read it one more

00:12:30,290 --> 00:12:34,760
time okay so the idea I mentioned

00:12:33,350 --> 00:12:37,070
yesterday that you have a sort of

00:12:34,760 --> 00:12:39,440
shopping session or your purchase state

00:12:37,070 --> 00:12:40,940
and that is that's just like something

00:12:39,440 --> 00:12:42,290
that lives in the database is like while

00:12:40,940 --> 00:12:43,790
that session is active you can look in

00:12:42,290 --> 00:12:45,890
postgrads and pull that off there and

00:12:43,790 --> 00:12:48,710
see like state equals in cart or

00:12:45,890 --> 00:12:52,190
whatever that is a kind of logical

00:12:48,710 --> 00:12:54,650
session as far as the like session of an

00:12:52,190 --> 00:12:55,970
active like WebSocket connection to our

00:12:54,650 --> 00:12:57,500
server that's a different kind of

00:12:55,970 --> 00:12:59,870
session and that's the kind of stuff

00:12:57,500 --> 00:13:02,390
that I want to offload to something like

00:12:59,870 --> 00:13:04,280
firebase that's good at just like if we

00:13:02,390 --> 00:13:06,410
have to have a connection to the server

00:13:04,280 --> 00:13:07,610
that's stateful I mean by stateful I

00:13:06,410 --> 00:13:08,840
mean like the server needs to know what

00:13:07,610 --> 00:13:10,520
it's already sent to that client needs

00:13:08,840 --> 00:13:13,970
to know what its acknowledged all these

00:13:10,520 --> 00:13:15,710
like little things that I would love to

00:13:13,970 --> 00:13:17,510
encapsulate that in a separate system

00:13:15,710 --> 00:13:20,120
where that doesn't have to encumber our

00:13:17,510 --> 00:13:22,850
main rails set up because that stuff

00:13:20,120 --> 00:13:26,270
gets that's stuff gets pretty pretty

00:13:22,850 --> 00:13:28,010
ugly and again I can't mention so much

00:13:26,270 --> 00:13:30,200
about like what is the limit before it

00:13:28,010 --> 00:13:31,820
starts to not scale I just know that I

00:13:30,200 --> 00:13:33,260
would like to take some of the ugliness

00:13:31,820 --> 00:13:34,880
out of our main part of the codebase and

00:13:33,260 --> 00:13:36,020
just put it on the thing that's good at

00:13:34,880 --> 00:13:38,540
keeping things in sync with the server

00:13:36,020 --> 00:13:40,400
and that would be firebase or whatever

00:13:38,540 --> 00:13:45,910
it is your firebase like a component to

00:13:40,400 --> 00:13:48,880
your real-time servers architecture also

00:13:45,910 --> 00:13:52,300
I think the next question we can leave

00:13:48,880 --> 00:13:56,650
it for later is asking why is a little

00:13:52,300 --> 00:13:59,440
bit unrelated okay but I like to point

00:13:56,650 --> 00:14:03,430
to the second one so how is the

00:13:59,440 --> 00:14:05,230
performance by using a Cordova I would

00:14:03,430 --> 00:14:07,180
say that there are apps where you would

00:14:05,230 --> 00:14:09,280
not be able to build the app in Cordova

00:14:07,180 --> 00:14:12,160
and be happy with the performance but

00:14:09,280 --> 00:14:14,650
our app does not really hit those pain

00:14:12,160 --> 00:14:19,570
points and I showed you that example

00:14:14,650 --> 00:14:21,700
with the scanning the scanning the gummy

00:14:19,570 --> 00:14:25,330
bears off the off the wall and then

00:14:21,700 --> 00:14:27,430
having it show up in your cart so what's

00:14:25,330 --> 00:14:29,380
happening is there is that just as a

00:14:27,430 --> 00:14:31,510
reminder so Cordova is the the

00:14:29,380 --> 00:14:33,490
technology that takes a mobile app that

00:14:31,510 --> 00:14:36,160
you've built using web technology with

00:14:33,490 --> 00:14:37,630
your favorite jes framework we use Ember

00:14:36,160 --> 00:14:40,450
if you could use it with react and then

00:14:37,630 --> 00:14:41,950
it basically packaged that up into an

00:14:40,450 --> 00:14:44,560
iOS app an Android app that are both

00:14:41,950 --> 00:14:47,440
like viewing your app through through a

00:14:44,560 --> 00:14:49,390
webview it's not going to be as

00:14:47,440 --> 00:14:51,100
performant and there's definitely gonna

00:14:49,390 --> 00:14:52,390
be some corner cases that where you

00:14:51,100 --> 00:14:56,200
might prefer something like react native

00:14:52,390 --> 00:14:57,400
but already from that demo you can see

00:14:56,200 --> 00:14:59,500
that that was a webview with a

00:14:57,400 --> 00:15:02,770
transparent background over a native

00:14:59,500 --> 00:15:04,390
camera view and for the most part that

00:15:02,770 --> 00:15:06,040
works just fine I think there's a

00:15:04,390 --> 00:15:09,100
handful of screens where I'm just like

00:15:06,040 --> 00:15:11,470
this is a little clunky but we never

00:15:09,100 --> 00:15:12,880
have anything with like a screen that's

00:15:11,470 --> 00:15:14,800
just got hundreds and hundreds of items

00:15:12,880 --> 00:15:16,300
or you you scrolling through it and you

00:15:14,800 --> 00:15:18,010
have to think of clever ways to avoid

00:15:16,300 --> 00:15:19,480
like rendering too many list items at

00:15:18,010 --> 00:15:21,670
the same time some of those things might

00:15:19,480 --> 00:15:24,360
be more problematic if you're just using

00:15:21,670 --> 00:15:26,590
Cordova and rendering something

00:15:24,360 --> 00:15:28,090
rendering just a huge screen with lots

00:15:26,590 --> 00:15:29,380
of nesting and all this stuff but it

00:15:28,090 --> 00:15:31,990
doesn't it hasn't really been a problem

00:15:29,380 --> 00:15:34,120
for our kind of app so I would say get

00:15:31,990 --> 00:15:35,920
understanding of what you have to render

00:15:34,120 --> 00:15:38,620
in your app and try imagine the worst

00:15:35,920 --> 00:15:40,750
case and then see whether or something

00:15:38,620 --> 00:15:42,340
like whatever would be fine or whether

00:15:40,750 --> 00:15:46,030
you just want to use react native which

00:15:42,340 --> 00:15:47,860
obviously makes tons of sense to you

00:15:46,030 --> 00:15:51,040
were mentioning when we were preparing

00:15:47,860 --> 00:15:53,770
for the photo session that you you had

00:15:51,040 --> 00:15:57,700
some issue is is this somewhat related

00:15:53,770 --> 00:15:59,110
to this conversation or remember some

00:15:57,700 --> 00:16:02,590
issue regard

00:15:59,110 --> 00:16:06,590
integration with the native platform Oh

00:16:02,590 --> 00:16:09,800
I would just say that I think we were

00:16:06,590 --> 00:16:11,600
talking about oh right just if you go

00:16:09,800 --> 00:16:15,200
down the Cordova route Cordova's got a

00:16:11,600 --> 00:16:17,480
whole like community of plugins that

00:16:15,200 --> 00:16:18,890
some are well maintained or something

00:16:17,480 --> 00:16:20,540
some are just these like plugins that

00:16:18,890 --> 00:16:22,900
someone threw out there I mean it's a

00:16:20,540 --> 00:16:24,830
sort of common JavaScript problem that

00:16:22,900 --> 00:16:26,150
someone is probably written in the

00:16:24,830 --> 00:16:27,440
module that you're looking for but it's

00:16:26,150 --> 00:16:31,130
really hard to tell whether there's any

00:16:27,440 --> 00:16:32,840
sort of community like consensus around

00:16:31,130 --> 00:16:34,550
this being the way to go and sometimes

00:16:32,840 --> 00:16:36,050
it's that way with Cordova plugins and

00:16:34,550 --> 00:16:38,180
that means sometimes you have to really

00:16:36,050 --> 00:16:41,600
get your hands dirty and fix some like

00:16:38,180 --> 00:16:43,400
low-level iOS or Android bug and so just

00:16:41,600 --> 00:16:48,380
an example of the kind of things I have

00:16:43,400 --> 00:16:50,450
to maintain using Cordova is that we we

00:16:48,380 --> 00:16:52,070
got a variety of these barcode scanner

00:16:50,450 --> 00:16:53,690
libraries that we have to integrate with

00:16:52,070 --> 00:16:55,880
and and one of them had an issue with

00:16:53,690 --> 00:16:57,380
how it was it's kinda like a

00:16:55,880 --> 00:16:59,480
multi-threaded issue or it's taking

00:16:57,380 --> 00:17:01,400
frames from the camera and trying not to

00:16:59,480 --> 00:17:03,860
overload the portion of the CPU that's

00:17:01,400 --> 00:17:05,750
like scanning for barcodes and there's

00:17:03,860 --> 00:17:07,190
an issue where the queue was getting

00:17:05,750 --> 00:17:09,860
filled up with a bunch of stale frames

00:17:07,190 --> 00:17:11,720
and causing issues in some cases so if

00:17:09,860 --> 00:17:13,400
you go down this route I mean this would

00:17:11,720 --> 00:17:15,050
be true with react native as well but

00:17:13,400 --> 00:17:17,900
it's there's definitely some times where

00:17:15,050 --> 00:17:20,839
you really have to know Java on the

00:17:17,900 --> 00:17:25,339
Android side or Swift or objective-c on

00:17:20,839 --> 00:17:27,770
the iOS side to to maintain a product

00:17:25,339 --> 00:17:30,830
like this where are you able to fix it

00:17:27,770 --> 00:17:33,860
yeah it's awesome yeah I feel like I got

00:17:30,830 --> 00:17:36,440
lucky but it then it may will it may

00:17:33,860 --> 00:17:38,660
feel confusing but then if you can fix

00:17:36,440 --> 00:17:40,520
it and it's it's also a great challenge

00:17:38,660 --> 00:17:44,150
yeah the solution was to put a bunch of

00:17:40,520 --> 00:17:46,760
console logs everywhere of course I mean

00:17:44,150 --> 00:17:49,790
when you were mentioning these different

00:17:46,760 --> 00:17:52,370
qualities on on these plugins I mean it

00:17:49,790 --> 00:17:54,470
feels it feels more like JavaScript I

00:17:52,370 --> 00:17:56,720
mean you're have you used have a script

00:17:54,470 --> 00:18:00,380
like micro libraries and the different

00:17:56,720 --> 00:18:02,720
sets of you know quality around around

00:18:00,380 --> 00:18:05,450
the board of different options you need

00:18:02,720 --> 00:18:08,540
to do some you know research try to find

00:18:05,450 --> 00:18:10,880
the one that will work for you but then

00:18:08,540 --> 00:18:13,460
sometimes you need to work around the

00:18:10,880 --> 00:18:15,860
issues of the particular library and

00:18:13,460 --> 00:18:18,590
it's it's good that you can find you

00:18:15,860 --> 00:18:22,730
know some sort of solution even if it's

00:18:18,590 --> 00:18:24,320
not 100% well sometimes it's like you

00:18:22,730 --> 00:18:25,550
can find the library and it doesn't

00:18:24,320 --> 00:18:27,320
really help you that somebody made it

00:18:25,550 --> 00:18:29,510
all it does is validate that someone's

00:18:27,320 --> 00:18:31,190
run into a problem that's they've sort

00:18:29,510 --> 00:18:33,250
of tried to solve but who knows if it's

00:18:31,190 --> 00:18:35,300
it's really your exact use case though

00:18:33,250 --> 00:18:37,990
validates your problems are real but not

00:18:35,300 --> 00:18:40,730
maybe that means Alt key that means

00:18:37,990 --> 00:18:45,800
let's pick another another question and

00:18:40,730 --> 00:18:48,140
we still have room for four more so

00:18:45,800 --> 00:18:50,330
which is the better use of WebSockets

00:18:48,140 --> 00:18:54,260
so between WebSockets or push

00:18:50,330 --> 00:18:56,600
notifications which one of them do you

00:18:54,260 --> 00:19:00,470
think you can combine for different

00:18:56,600 --> 00:19:02,630
cases just to be clear so push

00:19:00,470 --> 00:19:04,850
notifications refers to I mean assuming

00:19:02,630 --> 00:19:07,340
means the sort of native supported thing

00:19:04,850 --> 00:19:09,350
where like if your apps not even active

00:19:07,340 --> 00:19:12,620
you'll you'll see something from from

00:19:09,350 --> 00:19:16,700
iOS or Android and top bar that some

00:19:12,620 --> 00:19:17,510
messages come through temporarily we're

00:19:16,700 --> 00:19:19,340
not actually using push notifications

00:19:17,510 --> 00:19:22,940
for anything but we are going to be

00:19:19,340 --> 00:19:25,430
bringing it back shortly so for for

00:19:22,940 --> 00:19:27,950
something that needs to keep in sync you

00:19:25,430 --> 00:19:29,720
really want to persistent connection so

00:19:27,950 --> 00:19:31,070
there's kind of this you know push

00:19:29,720 --> 00:19:32,900
notifications are very much like an

00:19:31,070 --> 00:19:35,090
event based system like fire an event

00:19:32,900 --> 00:19:37,010
and hope and expect iOS to actually

00:19:35,090 --> 00:19:39,830
deliver to your system and you can use

00:19:37,010 --> 00:19:41,450
event-driven systems to solve the like

00:19:39,830 --> 00:19:44,030
how do I keep data in sync but

00:19:41,450 --> 00:19:46,190
ultimately the end goal is like whatever

00:19:44,030 --> 00:19:48,110
value however you get the information I

00:19:46,190 --> 00:19:49,520
want like this piece of data that I have

00:19:48,110 --> 00:19:52,010
to be the latest version of what this

00:19:49,520 --> 00:19:53,870
has and sometimes if an event can fail

00:19:52,010 --> 00:19:55,930
to deliver and in that case you need

00:19:53,870 --> 00:19:58,280
some other mechanisms to just be like

00:19:55,930 --> 00:19:59,600
why haven't I heard from you for a while

00:19:58,280 --> 00:20:01,630
maybe I'm gonna like kill this

00:19:59,600 --> 00:20:04,340
connection and get another thing and so

00:20:01,630 --> 00:20:05,960
this comparison of WebSocket versus push

00:20:04,340 --> 00:20:08,690
notifications I'm not really sure how

00:20:05,960 --> 00:20:10,310
you'd really robustly solve the syncing

00:20:08,690 --> 00:20:12,470
problem with just push notifications

00:20:10,310 --> 00:20:14,540
you're gonna want to use WebSockets and

00:20:12,470 --> 00:20:15,710
in the course of one user using the app

00:20:14,540 --> 00:20:16,809
you might have a few different

00:20:15,710 --> 00:20:18,919
connections that you

00:20:16,809 --> 00:20:20,659
disconnect or reconnect over time to

00:20:18,919 --> 00:20:24,200
really make sure that you're you're

00:20:20,659 --> 00:20:25,669
getting the the latest one case that we

00:20:24,200 --> 00:20:28,639
that there's no other option than he

00:20:25,669 --> 00:20:31,580
used push notifications is so one of the

00:20:28,639 --> 00:20:33,230
integrations we did is for the for coal

00:20:31,580 --> 00:20:34,580
right group which is a sort of a

00:20:33,230 --> 00:20:36,230
conglomerate that maintains a bunch of

00:20:34,580 --> 00:20:38,749
different stores and so we one of our

00:20:36,230 --> 00:20:41,600
apps is the scan Pago app that is live

00:20:38,749 --> 00:20:45,470
at in Belgium for a few Spahr and okay

00:20:41,600 --> 00:20:47,869
stores and the only payment option that

00:20:45,470 --> 00:20:49,730
really worked for Belgian users was this

00:20:47,869 --> 00:20:51,590
Bank contact app where you have to leave

00:20:49,730 --> 00:20:53,119
our app so you can finish paying and in

00:20:51,590 --> 00:20:56,299
this app that apparently everybody just

00:20:53,119 --> 00:20:57,529
has their but at the end of it depending

00:20:56,299 --> 00:20:59,539
on whether you're using your banking app

00:20:57,529 --> 00:21:01,879
or your bank contact app it might not

00:20:59,539 --> 00:21:04,460
redirect back to our app and so the only

00:21:01,879 --> 00:21:06,139
solution to make sure that they got

00:21:04,460 --> 00:21:08,960
something that they can tap to go back

00:21:06,139 --> 00:21:11,269
and finish the process is to fire a push

00:21:08,960 --> 00:21:13,820
notification and so that will like be

00:21:11,269 --> 00:21:16,070
our controlled little snippet of UI that

00:21:13,820 --> 00:21:17,960
that we can actually display over

00:21:16,070 --> 00:21:20,210
someone else's app to fix that problem

00:21:17,960 --> 00:21:21,259
but generally speaking if it's just if

00:21:20,210 --> 00:21:22,749
you're staying in your app you need to

00:21:21,259 --> 00:21:27,070
keep in sync you want something like

00:21:22,749 --> 00:21:30,169
WebSockets as your live connection I

00:21:27,070 --> 00:21:33,799
guess it will depend on the how much

00:21:30,169 --> 00:21:35,269
reliable and how much it can cover you

00:21:33,799 --> 00:21:37,669
know the feature that you actually want

00:21:35,269 --> 00:21:40,340
to implement but for some cases you

00:21:37,669 --> 00:21:42,769
really want to know that the client has

00:21:40,340 --> 00:21:44,929
received for sure and the thing I

00:21:42,769 --> 00:21:46,519
mentioned yesterday I wanted seems

00:21:44,929 --> 00:21:49,549
arbitrary at the time but I kind of like

00:21:46,519 --> 00:21:50,960
try to like decide these or define these

00:21:49,549 --> 00:21:52,639
like three different degrees of real

00:21:50,960 --> 00:21:54,619
time because if you just need something

00:21:52,639 --> 00:21:55,850
to be better than a button that you have

00:21:54,619 --> 00:21:57,679
to manually refresh then you can

00:21:55,850 --> 00:21:59,480
probably use like push notifications

00:21:57,679 --> 00:22:01,549
just be like stuff change get the latest

00:21:59,480 --> 00:22:04,159
and if it fails to deliver it's not

00:22:01,549 --> 00:22:05,690
going to break your product but beyond

00:22:04,159 --> 00:22:07,249
that there's more involved degrees of

00:22:05,690 --> 00:22:09,679
real time where you want something more

00:22:07,249 --> 00:22:11,559
like WebSockets to have a better

00:22:09,679 --> 00:22:15,289
guarantee that things are in sync

00:22:11,559 --> 00:22:16,460
awesome so we will pick the last one and

00:22:15,289 --> 00:22:20,720
then we will do like some kind of

00:22:16,460 --> 00:22:24,350
wrap-up for this one is did adding real

00:22:20,720 --> 00:22:26,989
time to an existing mobile app bring

00:22:24,350 --> 00:22:28,650
some high battery consumption issues

00:22:26,989 --> 00:22:31,610
that in your ex

00:22:28,650 --> 00:22:36,330
not compared to having a camera view

00:22:31,610 --> 00:22:40,290
behind your web view that was the worst

00:22:36,330 --> 00:22:41,490
part and still is so it's not like we

00:22:40,290 --> 00:22:42,660
started out with the version of the app

00:22:41,490 --> 00:22:43,950
that didn't have a camera and didn't

00:22:42,660 --> 00:22:48,060
have real time it's had to be that way

00:22:43,950 --> 00:22:50,220
from the beginning but I think I think

00:22:48,060 --> 00:22:52,530
we would consider the impact on battery

00:22:50,220 --> 00:22:53,790
if our app had to be alive in the

00:22:52,530 --> 00:22:55,680
background some apps just are like

00:22:53,790 --> 00:22:57,990
constantly monitoring your location or

00:22:55,680 --> 00:22:59,490
like constant monitoring for updates and

00:22:57,990 --> 00:23:01,020
there are ways that you can make poor

00:22:59,490 --> 00:23:03,060
use of network connections to always

00:23:01,020 --> 00:23:05,010
turn on the signal connection but in our

00:23:03,060 --> 00:23:07,050
case the app is probably going to use

00:23:05,010 --> 00:23:08,220
your battery for like the five minutes

00:23:07,050 --> 00:23:10,380
that you're shopping and then you turn

00:23:08,220 --> 00:23:11,580
it off and you're done it's not a huge

00:23:10,380 --> 00:23:13,110
problem that we try to solve though

00:23:11,580 --> 00:23:15,210
lately I guess we have tried to come up

00:23:13,110 --> 00:23:17,640
with solutions when you start off low on

00:23:15,210 --> 00:23:20,910
battery how can we still make sure that

00:23:17,640 --> 00:23:26,840
you'll get through the process awesome

00:23:20,910 --> 00:23:29,640
well that was our aim AMA we of course

00:23:26,840 --> 00:23:32,190
recommend you to contact him you know

00:23:29,640 --> 00:23:34,110
after the session there's still maybe a

00:23:32,190 --> 00:23:36,990
couple of hours that maybe they can

00:23:34,110 --> 00:23:39,960
reach you diesel e and otherwise I mean

00:23:36,990 --> 00:23:42,780
feel free to write more questions on the

00:23:39,960 --> 00:23:45,030
on this little up I love all these

00:23:42,780 --> 00:23:48,420
questions I can Santa can answer yeah I

00:23:45,030 --> 00:23:50,550
mean maybe if you are here and you wrote

00:23:48,420 --> 00:23:53,160
these questions maybe you can try to get

00:23:50,550 --> 00:23:55,950
an answer from him right here right now

00:23:53,160 --> 00:23:58,380
sometime well thanks again for joining

00:23:55,950 --> 00:24:00,990
this session and answering all these

00:23:58,380 --> 00:24:04,430
questions thanks for having yeah that's

00:24:00,990 --> 00:24:04,430
all great choose

00:24:05,140 --> 00:24:07,200

YouTube URL: https://www.youtube.com/watch?v=5d_D_dA9tNo


