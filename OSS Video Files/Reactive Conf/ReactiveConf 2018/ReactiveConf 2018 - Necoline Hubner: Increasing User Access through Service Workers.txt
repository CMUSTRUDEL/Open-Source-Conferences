Title: ReactiveConf 2018 - Necoline Hubner: Increasing User Access through Service Workers
Publication date: 2018-11-02
Playlist: ReactiveConf 2018
Description: 
	29th - 31st October 2018, Prague, Czech Republic
https://reactiveconf.com/
Main stage
-------------------------------------------------------------------
Increasing User Access through Service Workers

A majority of people that access the web do so in spotty internet conditions. Whether users are accessing the web on the subway or attempting to connect with the world in a remote location somewhere on the globe, the ability to access a usable web platform in all conditions can become a norm. This talk will take a deep dive into service workers and the ways you can integrate them into your apps to create a seamless web experience for users everywhere.
Captions: 
	00:00:02,490 --> 00:00:08,960
[Music]

00:00:12,760 --> 00:00:17,600
hello everyone it's great to be here

00:00:15,410 --> 00:00:21,099
today like you mentioned my name is

00:00:17,600 --> 00:00:23,900
Nikolina Hubner I live in San Francisco

00:00:21,099 --> 00:00:26,720
that's where my nonprofit is based out

00:00:23,900 --> 00:00:30,619
of and before that I was working for

00:00:26,720 --> 00:00:33,020
Google and before that I not originally

00:00:30,619 --> 00:00:36,170
a developer I started out working with

00:00:33,020 --> 00:00:39,370
refugees on the resettlement side so

00:00:36,170 --> 00:00:42,949
when I was able to combine my work with

00:00:39,370 --> 00:00:44,570
technology and refugees it was it was

00:00:42,949 --> 00:00:46,609
really exciting to be able to combine my

00:00:44,570 --> 00:00:51,739
interests of my passions all in the same

00:00:46,609 --> 00:00:54,109
place so Rhys is a nonprofit that works

00:00:51,739 --> 00:00:57,079
in refugee camps to create solutions

00:00:54,109 --> 00:00:59,690
using technology and we're focused

00:00:57,079 --> 00:01:02,449
specifically on improving attendance for

00:00:59,690 --> 00:01:04,580
girls and schools and there's a lot of

00:01:02,449 --> 00:01:07,280
programs that currently exist to help

00:01:04,580 --> 00:01:09,350
out with this particular issue and what

00:01:07,280 --> 00:01:11,510
we're interested in is learning how

00:01:09,350 --> 00:01:14,630
things are working and how things can be

00:01:11,510 --> 00:01:17,020
improved with the use of technology they

00:01:14,630 --> 00:01:20,120
have through these large organizations

00:01:17,020 --> 00:01:22,460
large software programs to help out with

00:01:20,120 --> 00:01:25,220
coordinating work but as soon as you get

00:01:22,460 --> 00:01:27,710
into the field there is a limited access

00:01:25,220 --> 00:01:30,200
to general infrastructure so people

00:01:27,710 --> 00:01:32,000
resort to pen and paper mechanisms to

00:01:30,200 --> 00:01:35,780
keep it track of the work that they're

00:01:32,000 --> 00:01:38,240
doing so I just spent the last month in

00:01:35,780 --> 00:01:40,700
Kakuma which is a refugee camp in the

00:01:38,240 --> 00:01:43,010
north of Kenya and I was interviewing

00:01:40,700 --> 00:01:45,380
teachers and aid workers to get an idea

00:01:43,010 --> 00:01:47,840
of what they do and what works and

00:01:45,380 --> 00:01:49,610
what's challenging for them and one

00:01:47,840 --> 00:01:53,480
thing that they said is that they've got

00:01:49,610 --> 00:01:55,640
a meals program where they work with the

00:01:53,480 --> 00:01:57,710
World Food Program and they provide

00:01:55,640 --> 00:02:00,680
porridge to girls well to all the

00:01:57,710 --> 00:02:02,270
children that attend school and this is

00:02:00,680 --> 00:02:04,490
greatly increasing the rate of

00:02:02,270 --> 00:02:06,410
attendance for them and they're able to

00:02:04,490 --> 00:02:09,440
see the correlation between offering

00:02:06,410 --> 00:02:11,420
food and attendance but generally when

00:02:09,440 --> 00:02:13,510
it comes to tracking attendance and the

00:02:11,420 --> 00:02:16,189
effectiveness of this program they are

00:02:13,510 --> 00:02:17,450
taking attendance on something that

00:02:16,189 --> 00:02:18,470
looks like this where they'll take

00:02:17,450 --> 00:02:20,000
attendance

00:02:18,470 --> 00:02:22,760
and write it on the chalkboard and

00:02:20,000 --> 00:02:25,580
someone will come around and take the

00:02:22,760 --> 00:02:27,470
total and go from class to class adding

00:02:25,580 --> 00:02:30,050
everything up and then bringing it to

00:02:27,470 --> 00:02:31,910
admin and then to the kitchen where they

00:02:30,050 --> 00:02:35,120
can decide how much they're going to

00:02:31,910 --> 00:02:38,060
make for that population if they're

00:02:35,120 --> 00:02:41,270
lucky they might have a laptop per

00:02:38,060 --> 00:02:43,040
school where they where they're able to

00:02:41,270 --> 00:02:45,530
keep track of everything in an excel

00:02:43,040 --> 00:02:49,340
sheet if they're not lucky they'll keep

00:02:45,530 --> 00:02:51,830
meticulous notes on these paper sheets

00:02:49,340 --> 00:02:53,720
and then do it eration is off of that

00:02:51,830 --> 00:02:56,180
and send them to headquarters where

00:02:53,720 --> 00:02:58,910
they've done then do the data entry and

00:02:56,180 --> 00:03:01,190
the analysis so as you can imagine it's

00:02:58,910 --> 00:03:02,209
a pretty arduous system that they have

00:03:01,190 --> 00:03:04,550
to deal with and it's very

00:03:02,209 --> 00:03:07,250
time-consuming and when they have other

00:03:04,550 --> 00:03:09,920
large problems with child protection and

00:03:07,250 --> 00:03:11,930
general education for Refugees you can

00:03:09,920 --> 00:03:13,430
see how it might become something that

00:03:11,930 --> 00:03:15,950
falls into the background and the work

00:03:13,430 --> 00:03:18,740
that they're doing so we're building a

00:03:15,950 --> 00:03:21,110
mobile app to track attendance and the

00:03:18,740 --> 00:03:24,739
effectiveness of the meals program in

00:03:21,110 --> 00:03:27,260
Kakuma this means that has to work in

00:03:24,739 --> 00:03:28,940
the environments where technology that's

00:03:27,260 --> 00:03:31,700
coming from these larger organizations

00:03:28,940 --> 00:03:34,610
hasn't been able to penetrate so in

00:03:31,700 --> 00:03:36,650
Kakuma it's a very rural environment

00:03:34,610 --> 00:03:40,550
it's incredibly remote it's right next

00:03:36,650 --> 00:03:42,920
to South Sudan and Uganda it the people

00:03:40,550 --> 00:03:45,769
there use many types of devices they're

00:03:42,920 --> 00:03:48,980
usually quite old and they have

00:03:45,769 --> 00:03:51,380
intermittent access to Wi-Fi and general

00:03:48,980 --> 00:03:53,480
connectivity although I will say I was

00:03:51,380 --> 00:03:55,910
very surprised at how widespread

00:03:53,480 --> 00:03:58,610
connection to service was I had about a

00:03:55,910 --> 00:04:01,400
3G connection everywhere that I went in

00:03:58,610 --> 00:04:03,890
the camps so you have aid workers and

00:04:01,400 --> 00:04:06,530
refugees that rely heavily on their

00:04:03,890 --> 00:04:08,510
phones to be able to communicate with

00:04:06,530 --> 00:04:11,390
each other and use apps that are

00:04:08,510 --> 00:04:13,040
available to them the only issue is that

00:04:11,390 --> 00:04:15,019
there's not a lot of things that are

00:04:13,040 --> 00:04:17,090
designed specifically for their purposes

00:04:15,019 --> 00:04:19,609
so they patched together different apps

00:04:17,090 --> 00:04:24,650
to network with each other and solve

00:04:19,609 --> 00:04:27,680
problems so in order to solve the issue

00:04:24,650 --> 00:04:29,830
of how to provide technology for this

00:04:27,680 --> 00:04:32,410
population there's a lot of fast

00:04:29,830 --> 00:04:34,420
topics to jump into things like

00:04:32,410 --> 00:04:37,630
performance making sure it's as

00:04:34,420 --> 00:04:40,480
lightweight as possible and that it's

00:04:37,630 --> 00:04:43,810
running on as low of bandwidth you know

00:04:40,480 --> 00:04:45,910
a way that is fluid and is still working

00:04:43,810 --> 00:04:48,820
for the client it's very important

00:04:45,910 --> 00:04:52,090
battery usage is a huge portion of our

00:04:48,820 --> 00:04:55,180
interests a lot of the refugees don't

00:04:52,090 --> 00:04:57,100
have access to power at all so they'll

00:04:55,180 --> 00:04:58,990
actually go into town and pay a little

00:04:57,100 --> 00:05:01,240
bit of money to charge their phones so

00:04:58,990 --> 00:05:03,460
making sure that we're considering for

00:05:01,240 --> 00:05:07,300
that as well as responsive design

00:05:03,460 --> 00:05:08,530
because it has to be device agnostic but

00:05:07,300 --> 00:05:10,690
what I want to talk to you guys today

00:05:08,530 --> 00:05:13,710
about it's actually offline capabilities

00:05:10,690 --> 00:05:16,570
and how it pertains to service workers

00:05:13,710 --> 00:05:19,330
so the first question when developing

00:05:16,570 --> 00:05:23,440
for the next billion users or a

00:05:19,330 --> 00:05:27,000
population such as this is our service

00:05:23,440 --> 00:05:30,190
workers right for you and your user base

00:05:27,000 --> 00:05:32,920
so for us there's a huge incentive to

00:05:30,190 --> 00:05:36,690
use service workers to offer offline

00:05:32,920 --> 00:05:39,820
capabilities however this is a big but

00:05:36,690 --> 00:05:42,580
the devices that are being used in the

00:05:39,820 --> 00:05:46,330
camps might dictate their ability to

00:05:42,580 --> 00:05:48,460
access these these capabilities based

00:05:46,330 --> 00:05:50,140
off of what kind of operating systems

00:05:48,460 --> 00:05:52,330
they're working with and whether or not

00:05:50,140 --> 00:05:55,360
they have access to browsers that are

00:05:52,330 --> 00:05:58,810
compatible with service workers so we

00:05:55,360 --> 00:06:02,050
did some research into what they what

00:05:58,810 --> 00:06:04,960
kind of devices are most commonly used

00:06:02,050 --> 00:06:07,750
so most aid workers are Kenyan nationals

00:06:04,960 --> 00:06:10,480
and we have refugee incentive workers

00:06:07,750 --> 00:06:13,030
who also work in the camps so looking at

00:06:10,480 --> 00:06:15,970
the Kenyan market share is a pretty good

00:06:13,030 --> 00:06:18,280
indicator of exactly what's being used

00:06:15,970 --> 00:06:21,070
as you can see there is a pretty clear

00:06:18,280 --> 00:06:24,460
division and types of devices the red

00:06:21,070 --> 00:06:27,210
line is Android and then if you can see

00:06:24,460 --> 00:06:29,740
the gray line at the bottom that's iOS

00:06:27,210 --> 00:06:32,110
so that's a pretty nice marker we know

00:06:29,740 --> 00:06:33,910
exactly but for the most part what

00:06:32,110 --> 00:06:37,630
people are using which are Android

00:06:33,910 --> 00:06:39,640
devices so we looked then

00:06:37,630 --> 00:06:41,800
to the operating systems that are being

00:06:39,640 --> 00:06:43,180
used and you have a bit more of a mixed

00:06:41,800 --> 00:06:45,580
bag here

00:06:43,180 --> 00:06:48,130
so in order to access modern browsers

00:06:45,580 --> 00:06:50,890
like Chrome for Android you need an

00:06:48,130 --> 00:06:51,640
operating system of at least 4.0 or

00:06:50,890 --> 00:06:54,910
higher

00:06:51,640 --> 00:06:57,760
that's Ice Cream Sandwich and so you can

00:06:54,910 --> 00:07:00,750
see I'm looking at about 50% of users

00:06:57,760 --> 00:07:04,810
that have that level of operating system

00:07:00,750 --> 00:07:06,910
and one big learning curve for me I live

00:07:04,810 --> 00:07:09,760
and work in Silicon Valley I have my

00:07:06,910 --> 00:07:11,950
MacBook and my Google pixel and I forget

00:07:09,760 --> 00:07:15,490
what it's I don't forget I don't know

00:07:11,950 --> 00:07:18,550
what it's like to use the web in

00:07:15,490 --> 00:07:21,370
environments that are not my own and one

00:07:18,550 --> 00:07:23,890
thing that I learned is that if you buy

00:07:21,370 --> 00:07:26,950
an a cheap phone like a smart phone for

00:07:23,890 --> 00:07:29,830
less than $100 the manufacturers don't

00:07:26,950 --> 00:07:31,930
have an incentive to provide support

00:07:29,830 --> 00:07:34,930
after the purchase so they're looking

00:07:31,930 --> 00:07:38,020
for people to rebuy the phone later on

00:07:34,930 --> 00:07:40,270
if it becomes out-of-date so that means

00:07:38,020 --> 00:07:42,670
that there's not a lot of updates for

00:07:40,270 --> 00:07:44,680
operating systems after the purchase of

00:07:42,670 --> 00:07:47,230
a phone so if you buy a phone that has

00:07:44,680 --> 00:07:49,750
an old operating system it's likely to

00:07:47,230 --> 00:07:52,900
stay that way for the lifetime of that

00:07:49,750 --> 00:07:54,970
phone another caveat is that a lot of

00:07:52,900 --> 00:07:56,830
the refugee workers that we're looking

00:07:54,970 --> 00:07:59,410
at are likely to represent the lower

00:07:56,830 --> 00:08:02,290
half of this chart so despite being

00:07:59,410 --> 00:08:04,870
really excited about service workers and

00:08:02,290 --> 00:08:08,050
how this can apply to making the lives

00:08:04,870 --> 00:08:10,390
easier of my user base understanding

00:08:08,050 --> 00:08:14,290
exactly how far reaching it is is a huge

00:08:10,390 --> 00:08:16,930
aspect of what we're doing I would

00:08:14,290 --> 00:08:19,450
normally show can I use chart but

00:08:16,930 --> 00:08:22,380
there's a site called is Service Worker

00:08:19,450 --> 00:08:25,930
ready that gives a more nuanced look at

00:08:22,380 --> 00:08:27,970
what browsers are able to do or what

00:08:25,930 --> 00:08:31,090
compatibility levels for different

00:08:27,970 --> 00:08:33,640
Service Worker api's I'm so this is the

00:08:31,090 --> 00:08:35,680
baseline for Service Worker

00:08:33,640 --> 00:08:38,500
compatibility I'm you can see there's a

00:08:35,680 --> 00:08:40,570
pretty wide adoption but depending on

00:08:38,500 --> 00:08:43,120
what exactly you want to do with your

00:08:40,570 --> 00:08:47,320
Service Worker the browser compatibility

00:08:43,120 --> 00:08:49,839
will be a little bit different so due to

00:08:47,320 --> 00:08:50,779
the fact that there's a significant

00:08:49,839 --> 00:08:52,430
portion of my

00:08:50,779 --> 00:08:55,759
users that are not going to be able to

00:08:52,430 --> 00:08:57,740
access service workers but generally as

00:08:55,759 --> 00:08:59,360
it pertains to the ethos of service

00:08:57,740 --> 00:09:01,819
workers they are a progressive

00:08:59,360 --> 00:09:03,980
enhancement so talking about them in

00:09:01,819 --> 00:09:06,019
terms of progressive enhancement is

00:09:03,980 --> 00:09:08,839
really essential to the development

00:09:06,019 --> 00:09:12,889
process of working with offline

00:09:08,839 --> 00:09:15,259
capabilities so it's really not about a

00:09:12,889 --> 00:09:17,269
technology choice progressive

00:09:15,259 --> 00:09:19,970
enhancements are about a development

00:09:17,269 --> 00:09:22,939
approach it's the idea that you start

00:09:19,970 --> 00:09:24,649
out with a solid foundation of what kind

00:09:22,939 --> 00:09:27,980
of experience you want your users to

00:09:24,649 --> 00:09:31,399
have and then you add consecutively on

00:09:27,980 --> 00:09:33,079
top of that experience as you understand

00:09:31,399 --> 00:09:36,290
that your user base will be able to

00:09:33,079 --> 00:09:38,839
actually access the enhanced experience

00:09:36,290 --> 00:09:41,749
that you provide to them so you can

00:09:38,839 --> 00:09:44,870
consider the ice cream cone if you have

00:09:41,749 --> 00:09:46,550
a great waffle base and an amazing

00:09:44,870 --> 00:09:48,740
quality of ice cream you're not going to

00:09:46,550 --> 00:09:52,160
mind too much whether or not you have

00:09:48,740 --> 00:09:55,189
toppings on top so defining the baseline

00:09:52,160 --> 00:09:58,309
of support for your users and the core

00:09:55,189 --> 00:10:00,680
functionality is key and the development

00:09:58,309 --> 00:10:03,350
approach of progressive enhancements and

00:10:00,680 --> 00:10:06,920
then once that's established and once

00:10:03,350 --> 00:10:08,870
that is done well then we can add things

00:10:06,920 --> 00:10:11,420
through iteration and improvements

00:10:08,870 --> 00:10:14,689
adding exciting things like prefetch

00:10:11,420 --> 00:10:16,519
content and push notifications so

00:10:14,689 --> 00:10:20,000
ultimately we want to make sure that

00:10:16,519 --> 00:10:22,519
we're building for all of our users so

00:10:20,000 --> 00:10:25,129
if you decide that service workers are

00:10:22,519 --> 00:10:27,050
what you're going to work with and for

00:10:25,129 --> 00:10:30,829
us we decided that it is something that

00:10:27,050 --> 00:10:32,809
we're still very excited about so we can

00:10:30,829 --> 00:10:36,980
talk about what exactly service workers

00:10:32,809 --> 00:10:39,649
are offline capabilities are not new to

00:10:36,980 --> 00:10:41,600
the advent of service workers there is

00:10:39,649 --> 00:10:44,509
actually something before service

00:10:41,600 --> 00:10:47,959
workers called app cache or application

00:10:44,509 --> 00:10:50,779
cache and this was or is a declarative

00:10:47,959 --> 00:10:54,379
API that would allow you to cache static

00:10:50,779 --> 00:10:56,809
assets or specific assets and it was

00:10:54,379 --> 00:10:58,790
really good if you're using it for the

00:10:56,809 --> 00:11:00,769
specific purpose that it was designed

00:10:58,790 --> 00:11:03,139
for and if you wanted to do literally

00:11:00,769 --> 00:11:03,810
anything else it would break your whole

00:11:03,139 --> 00:11:07,439
app

00:11:03,810 --> 00:11:10,649
so internet is full of scathing reviews

00:11:07,439 --> 00:11:12,689
on appcache um I think if you used it

00:11:10,649 --> 00:11:15,360
the way it was meant to it's not that

00:11:12,689 --> 00:11:17,519
terrible but here i'm deann has a review

00:11:15,360 --> 00:11:19,949
of why service workers win over

00:11:17,519 --> 00:11:22,499
application cache and ultimately it's

00:11:19,949 --> 00:11:25,259
because you can you have a granular

00:11:22,499 --> 00:11:27,029
control over the work that you do and

00:11:25,259 --> 00:11:31,829
you have a lot of options available to

00:11:27,029 --> 00:11:34,199
you so what is a service worker it's

00:11:31,829 --> 00:11:36,779
essentially a type of web worker that

00:11:34,199 --> 00:11:39,329
runs on a javascript file and it sits

00:11:36,779 --> 00:11:41,790
between the web page the browser and the

00:11:39,329 --> 00:11:44,579
network and it allows you to intercept

00:11:41,790 --> 00:11:47,999
and modify navigation and resource

00:11:44,579 --> 00:11:49,949
requests and cache resources so that

00:11:47,999 --> 00:11:52,199
most obvious application of this is to

00:11:49,949 --> 00:11:55,379
serve up cached resources when there's

00:11:52,199 --> 00:11:58,139
no access to the network and because

00:11:55,379 --> 00:12:00,720
this word runs in a worker context it

00:11:58,139 --> 00:12:03,329
does not have access to the DOM and it

00:12:00,720 --> 00:12:05,100
runs on a separate thread so you never

00:12:03,329 --> 00:12:08,819
have to worry about it

00:12:05,100 --> 00:12:10,649
blocking your app so one done right and

00:12:08,819 --> 00:12:12,449
when you have a full comprehension of

00:12:10,649 --> 00:12:14,430
what service workers can do for you and

00:12:12,449 --> 00:12:17,370
how they work they provide a lot more

00:12:14,430 --> 00:12:19,279
than just offline capabilities and they

00:12:17,370 --> 00:12:23,220
could do things like push notifications

00:12:19,279 --> 00:12:25,170
background syncs local downloads they

00:12:23,220 --> 00:12:27,240
can act as a load balancer which is

00:12:25,170 --> 00:12:30,750
pretty cool and you can create a virtual

00:12:27,240 --> 00:12:35,430
server with service workers or conduct a

00:12:30,750 --> 00:12:37,800
piano API analytics when it's not done

00:12:35,430 --> 00:12:40,050
right or if you don't have a full

00:12:37,800 --> 00:12:42,300
understanding it looks a little bit more

00:12:40,050 --> 00:12:44,910
like this review of service workers

00:12:42,300 --> 00:12:48,379
which is essentially a web worker that

00:12:44,910 --> 00:12:51,449
allows you to run very old versions of

00:12:48,379 --> 00:12:53,610
your app without anyone noticing for

00:12:51,449 --> 00:12:56,399
months and months and the reason for

00:12:53,610 --> 00:12:58,800
this is that there's there's a lot that

00:12:56,399 --> 00:13:01,079
goes behind getting a service worker

00:12:58,800 --> 00:13:04,290
running and getting a new service worker

00:13:01,079 --> 00:13:07,800
replacing the current service worker in

00:13:04,290 --> 00:13:10,139
a fashion that is effective and it's

00:13:07,800 --> 00:13:11,579
really easy to get stuck so for the

00:13:10,139 --> 00:13:13,949
remainder of the talk I want to talk

00:13:11,579 --> 00:13:16,329
about how you can get into service

00:13:13,949 --> 00:13:19,029
workers and overcome some of the

00:13:16,329 --> 00:13:20,709
your pain points and just jump in

00:13:19,029 --> 00:13:22,809
without having to deal with the

00:13:20,709 --> 00:13:25,420
headaches that are usually incurred

00:13:22,809 --> 00:13:27,730
through service workers and the first

00:13:25,420 --> 00:13:31,869
major hurdle is understanding the life

00:13:27,730 --> 00:13:34,360
cycle of a service worker it's it's not

00:13:31,869 --> 00:13:36,999
that complex but there's a lot of room

00:13:34,360 --> 00:13:39,819
for failure as we get to the point of

00:13:36,999 --> 00:13:41,949
getting it to the running stage so the

00:13:39,819 --> 00:13:45,790
first thing that has to happen is it has

00:13:41,949 --> 00:13:48,089
to be parsed and registered parsing

00:13:45,790 --> 00:13:50,439
means that it will will go through a

00:13:48,089 --> 00:13:52,149
system where you checks the requirements

00:13:50,439 --> 00:13:54,819
making sure it's obviously compatible

00:13:52,149 --> 00:13:57,549
with a browser it has to work over an

00:13:54,819 --> 00:13:59,980
HTTP connection has to be secure which

00:13:57,549 --> 00:14:01,929
makes a lot of sense and it will be

00:13:59,980 --> 00:14:04,989
registered if it hasn't a service worker

00:14:01,929 --> 00:14:06,759
has not been registered before and if

00:14:04,989 --> 00:14:08,619
the service worker that you're trying to

00:14:06,759 --> 00:14:10,449
register is different than they get a

00:14:08,619 --> 00:14:12,879
service worker that's running and it

00:14:10,449 --> 00:14:14,199
evaluates this by bytes so if it's one

00:14:12,879 --> 00:14:16,869
byte different then it will acknowledge

00:14:14,199 --> 00:14:19,989
that as different and continue with the

00:14:16,869 --> 00:14:22,480
registration process if it fails to

00:14:19,989 --> 00:14:24,730
download or parse or if it throws an

00:14:22,480 --> 00:14:27,759
error at this point the Service Worker

00:14:24,730 --> 00:14:30,009
will simply be discarded if it is

00:14:27,759 --> 00:14:31,689
successful it means it's been registered

00:14:30,009 --> 00:14:33,989
it doesn't really mean anything else

00:14:31,689 --> 00:14:37,239
other than that so the next stage is

00:14:33,989 --> 00:14:40,059
installing so after it's successfully

00:14:37,239 --> 00:14:42,429
registered the script is downloaded and

00:14:40,059 --> 00:14:43,329
the browser will attempt to install the

00:14:42,429 --> 00:14:45,610
Service Worker

00:14:43,329 --> 00:14:48,730
this is an ideal point where you would

00:14:45,610 --> 00:14:52,209
cache your static assets now service

00:14:48,730 --> 00:14:55,029
workers run on promises so if the

00:14:52,209 --> 00:14:56,619
promise does not return or successfully

00:14:55,029 --> 00:14:58,829
it usually has something to do with the

00:14:56,619 --> 00:15:02,110
dependencies that are included in this

00:14:58,829 --> 00:15:04,029
asset caching so this is one of the

00:15:02,110 --> 00:15:06,329
first things that you might look at if

00:15:04,029 --> 00:15:10,029
it becomes an issue and you don't get a

00:15:06,329 --> 00:15:12,369
successful return of a promise if it is

00:15:10,029 --> 00:15:14,559
rejected the Service Worker at this

00:15:12,369 --> 00:15:18,029
point enters into its final stage of

00:15:14,559 --> 00:15:21,429
life which is a redundant Service Worker

00:15:18,029 --> 00:15:23,470
if it is successful it goes into on a

00:15:21,429 --> 00:15:25,539
waiting stage a waiting is a very

00:15:23,470 --> 00:15:28,350
important stage because it's how the

00:15:25,539 --> 00:15:30,220
browser controls but there's only one

00:15:28,350 --> 00:15:33,010
Service Worker running

00:15:30,220 --> 00:15:35,140
at a time only one service worker can

00:15:33,010 --> 00:15:38,440
control the client for obvious reasons

00:15:35,140 --> 00:15:41,800
and it's recommended that you never

00:15:38,440 --> 00:15:43,540
force activation because if the service

00:15:41,800 --> 00:15:45,280
worker is a very different version than

00:15:43,540 --> 00:15:47,140
the current service worker that's

00:15:45,280 --> 00:15:49,210
running it can completely break the

00:15:47,140 --> 00:15:52,420
client so at this point you might

00:15:49,210 --> 00:15:54,460
consider prompting the user to refresh

00:15:52,420 --> 00:15:57,970
their page so they can access the new

00:15:54,460 --> 00:16:00,460
content that you're providing to them so

00:15:57,970 --> 00:16:02,290
activating happens if there's one no

00:16:00,460 --> 00:16:05,320
service worker that has already been

00:16:02,290 --> 00:16:08,050
registered if you elect to skip waiting

00:16:05,320 --> 00:16:10,090
it will jump into that it's not

00:16:08,050 --> 00:16:13,450
recommended that you do this unless it's

00:16:10,090 --> 00:16:15,820
a first-time registration if the user

00:16:13,450 --> 00:16:19,120
navigates to a new page or refreshes

00:16:15,820 --> 00:16:21,400
that will instigate activation and then

00:16:19,120 --> 00:16:23,680
if the existing service worker at times

00:16:21,400 --> 00:16:25,240
out then it will usher in the new

00:16:23,680 --> 00:16:28,750
service worker because it's no longer

00:16:25,240 --> 00:16:31,480
controlling the client if there is an

00:16:28,750 --> 00:16:33,160
issue here like if you decided to skip

00:16:31,480 --> 00:16:35,530
waiting and there was an issue it will

00:16:33,160 --> 00:16:37,600
also become redundant at this point if

00:16:35,530 --> 00:16:39,850
you make it through that successfully

00:16:37,600 --> 00:16:41,980
then you get to the activated state and

00:16:39,850 --> 00:16:44,050
now we get to the point where the

00:16:41,980 --> 00:16:47,260
service worker can control the client I

00:16:44,050 --> 00:16:49,180
can except functional events this will

00:16:47,260 --> 00:16:51,610
come through like the fetch API or a

00:16:49,180 --> 00:16:53,530
message and it will wait for these

00:16:51,610 --> 00:16:56,140
functional events and a state called

00:16:53,530 --> 00:16:57,790
idle and if it doesn't receive any

00:16:56,140 --> 00:16:59,920
functional events it will go into a

00:16:57,790 --> 00:17:02,500
state called terminate terminate is not

00:16:59,920 --> 00:17:04,870
redundant terminate will just jump back

00:17:02,500 --> 00:17:07,420
into idle as soon as it receives any

00:17:04,870 --> 00:17:09,820
functional events the reason for this is

00:17:07,420 --> 00:17:12,430
that the service worker does not run

00:17:09,820 --> 00:17:14,800
until it needs to run and this preserves

00:17:12,430 --> 00:17:16,960
bandwidth for us and its really good for

00:17:14,800 --> 00:17:20,410
performance so it's excellent that it

00:17:16,960 --> 00:17:22,930
does behave in this way so redundancy is

00:17:20,410 --> 00:17:25,570
what we want to avoid it can happen if

00:17:22,930 --> 00:17:28,330
there's failure of installing activating

00:17:25,570 --> 00:17:31,030
or if it ultimately phases out and gets

00:17:28,330 --> 00:17:33,640
replaced so you can see it's a bit of a

00:17:31,030 --> 00:17:35,410
treacherous journey for the service

00:17:33,640 --> 00:17:39,820
worker to make it all the way through a

00:17:35,410 --> 00:17:42,190
successful completion of a life cycle

00:17:39,820 --> 00:17:44,140
tips for starting is getting to know the

00:17:42,190 --> 00:17:46,510
browser before you start working with

00:17:44,140 --> 00:17:48,220
service workers so understanding your

00:17:46,510 --> 00:17:50,260
dev tools is going to be very helpful

00:17:48,220 --> 00:17:52,690
this is where we're going to inspect the

00:17:50,260 --> 00:17:55,270
service worker to our error handling and

00:17:52,690 --> 00:17:58,300
also setting the defaults there's a

00:17:55,270 --> 00:18:00,370
thing called update on reload which

00:17:58,300 --> 00:18:02,440
allows the service worker to behave in a

00:18:00,370 --> 00:18:04,720
way that you are used to as a developer

00:18:02,440 --> 00:18:06,490
being able to interact with the Dom or

00:18:04,720 --> 00:18:08,260
if you click refresh you expect to see

00:18:06,490 --> 00:18:10,210
your changes this is something that you

00:18:08,260 --> 00:18:12,610
have to go in and click currently as a

00:18:10,210 --> 00:18:15,280
default it's good because it means it

00:18:12,610 --> 00:18:17,140
makes you aware the life cycle however

00:18:15,280 --> 00:18:18,940
it's really important just to know what

00:18:17,140 --> 00:18:21,460
defaults you want to send and know

00:18:18,940 --> 00:18:23,650
exactly how it's behaving so taking the

00:18:21,460 --> 00:18:25,270
time before you get into service workers

00:18:23,650 --> 00:18:27,850
to understand your dev tools that's

00:18:25,270 --> 00:18:29,830
going to help you develop a strategy for

00:18:27,850 --> 00:18:33,880
combating all the bugs that you're

00:18:29,830 --> 00:18:37,690
probably going to address later next as

00:18:33,880 --> 00:18:40,120
I mentioned service workers are built on

00:18:37,690 --> 00:18:42,220
promises so if you're not strong on

00:18:40,120 --> 00:18:45,460
promises this is a great opportunity to

00:18:42,220 --> 00:18:46,990
jump into it you'll have a lot of

00:18:45,460 --> 00:18:49,450
practice when you work with service

00:18:46,990 --> 00:18:52,330
workers to get into promises if you are

00:18:49,450 --> 00:18:54,700
comfortable with promises then consider

00:18:52,330 --> 00:18:57,960
adopting a single weight this is

00:18:54,700 --> 00:19:00,970
essentially syntactic sugar on top of

00:18:57,960 --> 00:19:04,300
promises that allow you to just write

00:19:00,970 --> 00:19:06,520
cleaner code better error handling helps

00:19:04,300 --> 00:19:08,590
you write on conditionals and it's just

00:19:06,520 --> 00:19:10,360
a much better experience there's a

00:19:08,590 --> 00:19:12,100
little bit of cognitive over overhead

00:19:10,360 --> 00:19:18,760
but it'll save you a lot of stress in

00:19:12,100 --> 00:19:21,820
the future the next one is not ways to

00:19:18,760 --> 00:19:24,910
not get stuck on the same screen so

00:19:21,820 --> 00:19:28,890
having a cache and validation strategy

00:19:24,910 --> 00:19:31,660
is going to be very useful in predicting

00:19:28,890 --> 00:19:33,880
how to solve the problems that you know

00:19:31,660 --> 00:19:35,200
you're eventually going to face so

00:19:33,880 --> 00:19:37,630
something that you might consider is

00:19:35,200 --> 00:19:40,150
having a feature flag to control on

00:19:37,630 --> 00:19:42,460
registration it's not the same as forced

00:19:40,150 --> 00:19:45,030
activation you just simply unregister

00:19:42,460 --> 00:19:48,550
the currently working a service worker

00:19:45,030 --> 00:19:51,700
another option is having a no op service

00:19:48,550 --> 00:19:52,850
worker which is essentially a service

00:19:51,700 --> 00:19:55,669
worker that you'll have at the right

00:19:52,850 --> 00:19:58,039
for an emergency deployment in case that

00:19:55,669 --> 00:19:59,600
there there's an issue and this will

00:19:58,039 --> 00:20:02,539
just be something that will delete your

00:19:59,600 --> 00:20:05,360
cache but not have any bench so give you

00:20:02,539 --> 00:20:07,179
a fresh we start if things get really

00:20:05,360 --> 00:20:10,250
messy and you need to have a quick save

00:20:07,179 --> 00:20:11,840
and lastly having a force update for

00:20:10,250 --> 00:20:15,169
version control will be really useful

00:20:11,840 --> 00:20:16,909
where you can just fire off a method

00:20:15,169 --> 00:20:18,529
that will get the Service Worker to

00:20:16,909 --> 00:20:21,080
check to see if it's on the most updated

00:20:18,529 --> 00:20:26,929
version and then update itself if it's

00:20:21,080 --> 00:20:29,480
not and last it's there's a lot of

00:20:26,929 --> 00:20:31,759
resources that are available to get

00:20:29,480 --> 00:20:35,690
started with service workers I'm having

00:20:31,759 --> 00:20:37,549
a core conception of what service

00:20:35,690 --> 00:20:39,769
workers are before you jump into

00:20:37,549 --> 00:20:42,230
generator tools will help you with

00:20:39,769 --> 00:20:44,029
understanding what you want but workbox

00:20:42,230 --> 00:20:46,690
is a really great tool that offers

00:20:44,029 --> 00:20:49,960
things like pre caching and runtime

00:20:46,690 --> 00:20:52,429
caching as well as strategies which are

00:20:49,960 --> 00:20:54,759
are endless and ways that you can

00:20:52,429 --> 00:20:56,690
address different techniques to

00:20:54,759 --> 00:20:59,470
accomplishes things the things that are

00:20:56,690 --> 00:21:01,940
available through service workers

00:20:59,470 --> 00:21:04,190
cookbooks are also available Jake

00:21:01,940 --> 00:21:06,590
Archibald is like the father of service

00:21:04,190 --> 00:21:08,629
workers he's got an offline cookbook

00:21:06,590 --> 00:21:11,269
which is worth a read whether or not

00:21:08,629 --> 00:21:13,820
you're looking into offline capabilities

00:21:11,269 --> 00:21:14,419
with your service workers and then

00:21:13,820 --> 00:21:17,450
rasili

00:21:14,419 --> 00:21:20,240
has a service worker cookbook that goes

00:21:17,450 --> 00:21:22,070
beyond offline so all of the extra

00:21:20,240 --> 00:21:26,000
things I was mentioning about like load

00:21:22,070 --> 00:21:28,220
balancers or working with your API that

00:21:26,000 --> 00:21:30,230
all comes from well I was inspired at

00:21:28,220 --> 00:21:32,779
least from Mozilla's cookbook it's

00:21:30,230 --> 00:21:36,200
really a nice way to integrate your

00:21:32,779 --> 00:21:38,120
ideas into something that's a little bit

00:21:36,200 --> 00:21:42,740
more broad in its application of service

00:21:38,120 --> 00:21:45,799
workers so that's my talk I hope that

00:21:42,740 --> 00:21:47,870
was useful and being able to understand

00:21:45,799 --> 00:21:51,230
how you might get started with service

00:21:47,870 --> 00:21:53,419
workers I have all the resources on my

00:21:51,230 --> 00:21:54,919
slides which I'll be posting so feel

00:21:53,419 --> 00:21:57,919
free to follow me on Twitter or on

00:21:54,919 --> 00:22:01,120
Instagram and I think we have some

00:21:57,919 --> 00:22:01,120
questions thank you

00:22:02,110 --> 00:22:07,070
screw it up in there Kalina fantastic

00:22:05,690 --> 00:22:09,559
all right a couple of questions

00:22:07,070 --> 00:22:11,539
what dev tools you're using for service

00:22:09,559 --> 00:22:13,820
workers the chrome dev tools are super

00:22:11,539 --> 00:22:17,630
awful to use when handling car care ID

00:22:13,820 --> 00:22:19,880
be sort and service workers I've been

00:22:17,630 --> 00:22:22,370
working with the chrome dev tools and

00:22:19,880 --> 00:22:24,529
there's a lot of work to go with it but

00:22:22,370 --> 00:22:26,720
I would I would suggest just getting

00:22:24,529 --> 00:22:28,130
involved in the community and letting

00:22:26,720 --> 00:22:30,260
people know what your frustrations are

00:22:28,130 --> 00:22:31,580
with the dev tools because they're quite

00:22:30,260 --> 00:22:34,490
active in trying to help people

00:22:31,580 --> 00:22:36,470
understand how to use them and

00:22:34,490 --> 00:22:37,429
understand what your frustrations are as

00:22:36,470 --> 00:22:40,760
well

00:22:37,429 --> 00:22:42,889
so that's that's kind of the definition

00:22:40,760 --> 00:22:45,799
for me and like what's working and I

00:22:42,889 --> 00:22:48,559
know Firefox has its own dev tools as

00:22:45,799 --> 00:22:53,110
well which is worth looking into but I

00:22:48,559 --> 00:22:55,549
don't know it's it's a journey right

00:22:53,110 --> 00:22:58,340
using some library or you're running as

00:22:55,549 --> 00:23:00,289
w's from scratch um I elected to write

00:22:58,340 --> 00:23:01,340
them from scratch I have toured around

00:23:00,289 --> 00:23:03,740
with work box

00:23:01,340 --> 00:23:05,389
however because of what we're doing with

00:23:03,740 --> 00:23:08,120
our app and trying to make everything as

00:23:05,389 --> 00:23:10,100
bare-bones as possible so it's possible

00:23:08,120 --> 00:23:13,399
to do it from scratch I know create

00:23:10,100 --> 00:23:16,039
react app does some service workers out

00:23:13,399 --> 00:23:18,639
of the box which is really there's a lot

00:23:16,039 --> 00:23:21,950
of support around how to make that work

00:23:18,639 --> 00:23:23,990
personally I just like to get as as

00:23:21,950 --> 00:23:26,330
basic as possible to help me in my own

00:23:23,990 --> 00:23:30,380
learning process but you don't have to

00:23:26,330 --> 00:23:32,659
do it that way fantastic all right in

00:23:30,380 --> 00:23:34,820
your case what is the main reason to do

00:23:32,659 --> 00:23:36,440
web app using service workers instead of

00:23:34,820 --> 00:23:40,309
native app this is a really good

00:23:36,440 --> 00:23:43,460
question it for us it's about capacity

00:23:40,309 --> 00:23:46,730
to be able to design for something that

00:23:43,460 --> 00:23:48,799
goes across devices is really important

00:23:46,730 --> 00:23:52,340
we want to be able to access as many

00:23:48,799 --> 00:23:55,549
users as possible so being able to do a

00:23:52,340 --> 00:23:58,880
web app allows us to cross between not

00:23:55,549 --> 00:24:02,539
only ios and android but also tablets

00:23:58,880 --> 00:24:04,370
and desktops we want to be as versatile

00:24:02,539 --> 00:24:07,029
as possible due to the work that we're

00:24:04,370 --> 00:24:09,049
doing and not get pigeonholed into

00:24:07,029 --> 00:24:10,610
working with native apps even though

00:24:09,049 --> 00:24:11,560
there's a lot of perks with going that

00:24:10,610 --> 00:24:13,810
route

00:24:11,560 --> 00:24:16,730
all right we've got an altruistic

00:24:13,810 --> 00:24:19,430
question from Carol how can we help um

00:24:16,730 --> 00:24:22,100
hit me up on Twitter and I'll let you

00:24:19,430 --> 00:24:24,050
know we are we're looking to make this

00:24:22,100 --> 00:24:24,710
open source we haven't got to that point

00:24:24,050 --> 00:24:26,780
just yet

00:24:24,710 --> 00:24:29,330
we're in the design phase and building

00:24:26,780 --> 00:24:30,950
out the baseline but yeah we'd love your

00:24:29,330 --> 00:24:33,980
input we'd love your help it is a

00:24:30,950 --> 00:24:36,500
non-profit you can also donate so I'll

00:24:33,980 --> 00:24:38,990
have all that available as well so good

00:24:36,500 --> 00:24:40,850
question thank you Thank You Kara all

00:24:38,990 --> 00:24:43,040
right last question how do you

00:24:40,850 --> 00:24:43,520
distribute the app to users via App

00:24:43,040 --> 00:24:46,730
Store

00:24:43,520 --> 00:24:49,280
um well because we are working in the

00:24:46,730 --> 00:24:51,320
camps themselves the distribution is a

00:24:49,280 --> 00:24:53,240
little bit unique in the sense that

00:24:51,320 --> 00:24:54,800
there's a lot of building up of trust

00:24:53,240 --> 00:24:56,990
and networking with the existing

00:24:54,800 --> 00:24:59,990
agencies so a lot of it is actually

00:24:56,990 --> 00:25:02,390
through like a top-down approach so

00:24:59,990 --> 00:25:05,690
we're not looking for organic adoption

00:25:02,390 --> 00:25:07,010
at this point so it wouldn't it would

00:25:05,690 --> 00:25:09,410
look different than it would for other

00:25:07,010 --> 00:25:11,840
apps we're actually going into the camps

00:25:09,410 --> 00:25:14,630
and handing it to them and training them

00:25:11,840 --> 00:25:17,240
on it all right let's give a warm round

00:25:14,630 --> 00:25:18,010
of applause for Nikolina thank you thank

00:25:17,240 --> 00:25:21,140
you very much

00:25:18,010 --> 00:25:21,140

YouTube URL: https://www.youtube.com/watch?v=9PhYr6Orbm8


