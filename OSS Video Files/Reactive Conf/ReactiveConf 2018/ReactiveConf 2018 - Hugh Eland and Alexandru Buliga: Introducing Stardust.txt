Title: ReactiveConf 2018 - Hugh Eland and Alexandru Buliga: Introducing Stardust
Publication date: 2018-11-05
Playlist: ReactiveConf 2018
Description: 
	29th - 31st October 2018, Prague, Czech Republic
https://reactiveconf.com/
Discovery stage
-------------------------------------------------------------------
Introducing Stardust - A themeable, accessible JavaScript component library

Stardust is open source project on GitHub that's derived from the popular Semantic UI library, currently implemented in React.
It provides excellent accessibility (high contrast themes, keyboard navigation, tested screen reader support), advanced component styling options (css in js) and component state management.
If you need pixel perfect, accessible and consistent web design Stardust could be the right choise for you.
Captions: 
	00:00:02,490 --> 00:00:08,960
[Music]

00:00:12,679 --> 00:00:17,160
welcome thanks for all staying so late

00:00:15,209 --> 00:00:18,630
this must be the real hardcore you're in

00:00:17,160 --> 00:00:20,759
the city of the best beer in the world

00:00:18,630 --> 00:00:25,619
and you're still here listening to talks

00:00:20,759 --> 00:00:28,199
I'm super impressed and we're talking

00:00:25,619 --> 00:00:29,340
about yet another UI library really do

00:00:28,199 --> 00:00:31,430
you need to hear about another UI

00:00:29,340 --> 00:00:35,370
library hit this time of night

00:00:31,430 --> 00:00:36,809
well we had to write one hand so let me

00:00:35,370 --> 00:00:39,930
just tell you a little bit about our

00:00:36,809 --> 00:00:43,890
motivation for writing the library

00:00:39,930 --> 00:00:50,909
I want to first we'll take a step back

00:00:43,890 --> 00:00:52,409
and look at I'll take a step back and

00:00:50,909 --> 00:00:54,360
look at actually what stood the test of

00:00:52,409 --> 00:00:57,780
time in web technologies and UI

00:00:54,360 --> 00:01:00,119
libraries over the time really the web

00:00:57,780 --> 00:01:03,540
technology which stands out is really

00:01:00,119 --> 00:01:05,580
HTML I mean we all know it it's been

00:01:03,540 --> 00:01:08,549
around since Tim berners-lee invented in

00:01:05,580 --> 00:01:10,109
the early 90s most of us use it we kind

00:01:08,549 --> 00:01:13,829
of have an understanding of what it does

00:01:10,109 --> 00:01:15,299
we expect ul to be followed by Li we

00:01:13,829 --> 00:01:18,420
kind of know what an input field does

00:01:15,299 --> 00:01:20,130
it's a standard that has evolved but

00:01:18,420 --> 00:01:21,810
clearly it stood the test of time and

00:01:20,130 --> 00:01:24,929
it's a fantastic base to build

00:01:21,810 --> 00:01:27,259
applications so many years ago we did

00:01:24,929 --> 00:01:31,140
this with HTML and it was pretty painful

00:01:27,259 --> 00:01:34,679
then Along Came jQuery and wow it was so

00:01:31,140 --> 00:01:36,420
much better then more comprehensive

00:01:34,679 --> 00:01:39,810
framework started to appear like

00:01:36,420 --> 00:01:41,069
Knockouts Jake backbone angular and you

00:01:39,810 --> 00:01:44,549
could now move the thing to a higher

00:01:41,069 --> 00:01:46,499
level of abstraction you could use

00:01:44,549 --> 00:01:49,439
libraries for doing dropdowns and

00:01:46,499 --> 00:01:51,920
including data in tables without coding

00:01:49,439 --> 00:01:54,869
every aspect of this stuff yourself

00:01:51,920 --> 00:01:57,479
however would you now bet your next job

00:01:54,869 --> 00:02:01,229
on learning knockout or angular probably

00:01:57,479 --> 00:02:02,700
not so I guess most people here have

00:02:01,229 --> 00:02:04,439
been through the effort of moving

00:02:02,700 --> 00:02:06,990
applications between these frameworks

00:02:04,439 --> 00:02:08,850
and it's pretty tough I mean the

00:02:06,990 --> 00:02:11,850
frameworks have different concepts

00:02:08,850 --> 00:02:13,230
different api's and you end up although

00:02:11,850 --> 00:02:15,030
you're just sort of changing the

00:02:13,230 --> 00:02:17,190
framework you end up actually doing a

00:02:15,030 --> 00:02:20,720
whole lot of deep refactoring and it's

00:02:17,190 --> 00:02:20,720
it's really pretty unpleasant

00:02:20,870 --> 00:02:33,239
so so at the same time the the sort of

00:02:30,120 --> 00:02:35,099
frameworks are changing the the other

00:02:33,239 --> 00:02:37,769
thing which is happening is the there's

00:02:35,099 --> 00:02:39,239
a now a common understanding of how most

00:02:37,769 --> 00:02:42,239
of the yetze of building blocks of the

00:02:39,239 --> 00:02:44,250
web should work we all know what a menu

00:02:42,239 --> 00:02:46,409
look does we all know what a modal

00:02:44,250 --> 00:02:49,049
dialogue does we kind of expect to be

00:02:46,409 --> 00:02:51,060
able to navigate through a menu with the

00:02:49,049 --> 00:02:54,000
arrow keys we expect maybe to have a few

00:02:51,060 --> 00:02:56,340
icons in the menu and sub menus there

00:02:54,000 --> 00:02:58,530
the variations for sure but the patterns

00:02:56,340 --> 00:02:59,879
pretty clear and if you suddenly find an

00:02:58,530 --> 00:03:01,829
application which does something really

00:02:59,879 --> 00:03:03,780
strange with a menu it's pretty it's

00:03:01,829 --> 00:03:05,359
it's annoying that very least and

00:03:03,780 --> 00:03:09,150
sometimes it's actually difficult to use

00:03:05,359 --> 00:03:11,430
so just to summarize that lot we have

00:03:09,150 --> 00:03:12,989
sort to sort of classes a problem we

00:03:11,430 --> 00:03:14,819
have the fact that frameworks are

00:03:12,989 --> 00:03:17,609
changing pretty quickly we've moved from

00:03:14,819 --> 00:03:21,810
jQuery to knockout or angular to react

00:03:17,609 --> 00:03:23,310
and the business logic gets somehow

00:03:21,810 --> 00:03:26,430
mashed into the display there it just

00:03:23,310 --> 00:03:28,859
happens and I'm tackling that is a huge

00:03:26,430 --> 00:03:31,639
effort and secondly we're constantly

00:03:28,859 --> 00:03:34,530
having to reinvent the wheel for these

00:03:31,639 --> 00:03:37,530
components like menus you think menus a

00:03:34,530 --> 00:03:40,319
nice simple thing but actually when you

00:03:37,530 --> 00:03:42,599
consider writing a menu which really

00:03:40,319 --> 00:03:45,030
does sub menus is really accessible

00:03:42,599 --> 00:03:46,410
actually has the right Aria roles and

00:03:45,030 --> 00:03:47,760
screen readers that can actually read

00:03:46,410 --> 00:03:50,489
and you can navigate with all the

00:03:47,760 --> 00:03:52,019
keyboards it's not a trivial task but we

00:03:50,489 --> 00:03:56,790
keep reinventing it for it for every

00:03:52,019 --> 00:03:57,599
single framework and finally the

00:03:56,790 --> 00:03:59,970
frameworks

00:03:57,599 --> 00:04:04,739
all bring in their own sort of language

00:03:59,970 --> 00:04:06,419
and concepts and so it's just it's a

00:04:04,739 --> 00:04:13,319
it's a learning curve between each each

00:04:06,419 --> 00:04:15,829
one so Stardust was an attempt to make a

00:04:13,319 --> 00:04:18,840
framework at Gnostic standardized

00:04:15,829 --> 00:04:21,180
library which uses the sort of

00:04:18,840 --> 00:04:23,039
well-defined concepts and naming

00:04:21,180 --> 00:04:26,190
conventions so we've looked at a whole

00:04:23,039 --> 00:04:28,710
lot of libraries and we're trying to use

00:04:26,190 --> 00:04:30,300
the the naming and conventions and the

00:04:28,710 --> 00:04:31,770
behaviors which have evolved through

00:04:30,300 --> 00:04:32,660
those libraries over time those are

00:04:31,770 --> 00:04:35,870
things which we don't think

00:04:32,660 --> 00:04:38,360
gonna change and with the frameworks

00:04:35,870 --> 00:04:40,250
probably will change but at least the

00:04:38,360 --> 00:04:42,310
behaviors of how a menu work is probably

00:04:40,250 --> 00:04:45,890
not going to change very quickly

00:04:42,310 --> 00:04:49,820
so how do we make a framework agnostic

00:04:45,890 --> 00:04:54,080
UI well so our approach is to abstract

00:04:49,820 --> 00:04:56,150
out a lot of these things so and we the

00:04:54,080 --> 00:04:57,860
way we do that is we rely only on the

00:04:56,150 --> 00:05:00,890
JavaScript and HTML they're their

00:04:57,860 --> 00:05:04,010
standards they're always there what does

00:05:00,890 --> 00:05:07,700
that actually mean in practice so let's

00:05:04,010 --> 00:05:10,510
take the menu again as an example what

00:05:07,700 --> 00:05:13,580
do we need to code a menu we a menu has

00:05:10,510 --> 00:05:16,940
lot of items it sometimes has sub items

00:05:13,580 --> 00:05:20,950
it sometimes has icons we need a few

00:05:16,940 --> 00:05:23,420
callbacks there's a lot of stuff there

00:05:20,950 --> 00:05:25,810
it's it's pretty much common the

00:05:23,420 --> 00:05:28,310
framework needs to implement this and

00:05:25,810 --> 00:05:30,350
let's let's dig even further and look at

00:05:28,310 --> 00:05:33,080
keyboard navigation so keyboard

00:05:30,350 --> 00:05:35,210
navigation for a menu is easy well no

00:05:33,080 --> 00:05:37,160
actually there's no if you look at the

00:05:35,210 --> 00:05:38,660
w3 standards for accessibility there's

00:05:37,160 --> 00:05:40,460
quite a lot of stuff to implement there

00:05:38,660 --> 00:05:43,640
and not all of it is actually

00:05:40,460 --> 00:05:46,460
immediately obvious so it's a known

00:05:43,640 --> 00:05:49,100
expected behavior and so we can abstract

00:05:46,460 --> 00:05:50,930
this out we can create code which just

00:05:49,100 --> 00:05:52,220
relies on the rendered JavaScript it

00:05:50,930 --> 00:05:53,570
doesn't matter how it's rendered it

00:05:52,220 --> 00:05:57,850
could be from react it could be from

00:05:53,570 --> 00:06:01,640
angular and we inject into that the

00:05:57,850 --> 00:06:03,800
handlers and event handlers and so on to

00:06:01,640 --> 00:06:06,110
take the keyboard and handle a

00:06:03,800 --> 00:06:09,169
horizontal vertical vertical menu at

00:06:06,110 --> 00:06:11,690
menu with sub items and so on and it

00:06:09,169 --> 00:06:13,400
only uses the Dom to do that and

00:06:11,690 --> 00:06:16,030
similarly we can do the same thing for

00:06:13,400 --> 00:06:18,740
accessibility

00:06:16,030 --> 00:06:20,630
accessibility is covers a whole range of

00:06:18,740 --> 00:06:22,070
things yes and sometimes people think

00:06:20,630 --> 00:06:23,900
it's just being able to navigate with

00:06:22,070 --> 00:06:25,370
the keyboard that's definitely an

00:06:23,900 --> 00:06:27,320
important part of it

00:06:25,370 --> 00:06:30,200
but there's also actually getting the

00:06:27,320 --> 00:06:31,790
right Aria roles and dividing the menu

00:06:30,200 --> 00:06:33,620
into the right segments so the screen

00:06:31,790 --> 00:06:36,800
readers read the information which is

00:06:33,620 --> 00:06:39,740
actually needed for disabled users to

00:06:36,800 --> 00:06:42,710
navigate through it and actually hear

00:06:39,740 --> 00:06:45,860
not the same item twice or missing items

00:06:42,710 --> 00:06:46,440
or and so on it and we spend a lot of

00:06:45,860 --> 00:06:48,570
time

00:06:46,440 --> 00:06:50,490
actually looking at the w3c best

00:06:48,570 --> 00:06:52,170
practices and testing on different

00:06:50,490 --> 00:06:54,570
screen readers in different browsers and

00:06:52,170 --> 00:07:00,840
different os's and and getting this

00:06:54,570 --> 00:07:04,710
stuff to really work nicely I think that

00:07:00,840 --> 00:07:06,810
and finally the the final are so

00:07:04,710 --> 00:07:09,180
important aspect of how we'd make it

00:07:06,810 --> 00:07:12,120
agnostic is really not invent anything

00:07:09,180 --> 00:07:14,670
new we're really trying as I said before

00:07:12,120 --> 00:07:18,450
just to reuse the common language the

00:07:14,670 --> 00:07:22,410
common API is the big spectacle the

00:07:18,450 --> 00:07:25,140
other components and do so in a way

00:07:22,410 --> 00:07:27,920
which is natural in language so you

00:07:25,140 --> 00:07:30,390
expect if you want menu button to be

00:07:27,920 --> 00:07:33,110
highlighted is primary if you want to

00:07:30,390 --> 00:07:35,880
add a description you add a description

00:07:33,110 --> 00:07:37,430
so I've talked about it a little about

00:07:35,880 --> 00:07:39,750
the sort of motivation for the library

00:07:37,430 --> 00:07:43,010
now let me hand over to Alex who will

00:07:39,750 --> 00:07:45,020
actually talk about some code thank you

00:07:43,010 --> 00:07:47,970
thank you

00:07:45,020 --> 00:07:50,850
does everybody correctly okay cool

00:07:47,970 --> 00:07:55,020
so hi guys I'm Alex and today I'm going

00:07:50,850 --> 00:07:57,690
to present you a couple of demos we are

00:07:55,020 --> 00:08:05,540
going to use I don't know if you guys

00:07:57,690 --> 00:08:05,540
can see them not really one second

00:08:06,830 --> 00:08:14,550
cool sorry so what we are going to use

00:08:11,460 --> 00:08:16,470
here is our so called dockside

00:08:14,550 --> 00:08:18,120
experience where we provide a list of

00:08:16,470 --> 00:08:21,210
the components that we are using in

00:08:18,120 --> 00:08:23,310
Stardust's there's a list here on the

00:08:21,210 --> 00:08:27,000
Left navigation bar and for each of

00:08:23,310 --> 00:08:29,460
these we are using our built in code

00:08:27,000 --> 00:08:31,500
editor live code editor where we can

00:08:29,460 --> 00:08:33,260
actually edit the examples and see

00:08:31,500 --> 00:08:36,660
exactly how component behaves

00:08:33,260 --> 00:08:39,210
you have mentioned the naturally PR

00:08:36,660 --> 00:08:41,969
language that is aimed to provide us the

00:08:39,210 --> 00:08:44,310
components description this is a very

00:08:41,969 --> 00:08:48,060
important goal for starters to actually

00:08:44,310 --> 00:08:50,220
use natural API language in order to

00:08:48,060 --> 00:08:53,390
describe that component so we're taking

00:08:50,220 --> 00:08:56,730
like so called descriptivists approach

00:08:53,390 --> 00:08:59,610
we are looking at the world of web we

00:08:56,730 --> 00:09:00,120
are identifying norms as to the test of

00:08:59,610 --> 00:09:04,319
time

00:09:00,120 --> 00:09:07,649
and we are documenting this and we are

00:09:04,319 --> 00:09:10,139
identifying we are identifying them as

00:09:07,649 --> 00:09:12,720
pillars for our components therefore we

00:09:10,139 --> 00:09:15,569
are using the most common component

00:09:12,720 --> 00:09:18,269
names and we define their anatomy by

00:09:15,569 --> 00:09:21,600
identifying the components parts or

00:09:18,269 --> 00:09:24,779
slots how we call them this gives us the

00:09:21,600 --> 00:09:26,220
opportunity to control to control what a

00:09:24,779 --> 00:09:28,410
component should do in terms of

00:09:26,220 --> 00:09:32,100
functionality in terms of accessibility

00:09:28,410 --> 00:09:35,040
but at the same time it allows the user

00:09:32,100 --> 00:09:38,040
to have complete freedom on some other

00:09:35,040 --> 00:09:42,480
important factors important aspects such

00:09:38,040 --> 00:09:45,089
as component styling and exactly exactly

00:09:42,480 --> 00:09:48,389
the structure of of the slots themselves

00:09:45,089 --> 00:09:51,779
so let's take the the attachment

00:09:48,389 --> 00:09:53,819
component here on this page and when you

00:09:51,779 --> 00:09:56,939
think about an attachment you basically

00:09:53,819 --> 00:09:58,889
think of rectangle that has some text

00:09:56,939 --> 00:10:02,519
inside which will give you an idea of

00:09:58,889 --> 00:10:05,040
what exactly this is attached to so I'm

00:10:02,519 --> 00:10:07,439
going to open this here and we see that

00:10:05,040 --> 00:10:10,589
well this is what sardos provides it has

00:10:07,439 --> 00:10:13,110
an attachment and the header prop here

00:10:10,589 --> 00:10:16,230
will just offer you the text document of

00:10:13,110 --> 00:10:18,300
daleks so this is what is rendered but

00:10:16,230 --> 00:10:20,850
then you might think like since we are

00:10:18,300 --> 00:10:22,499
using this natural evolved language of

00:10:20,850 --> 00:10:25,740
the pie it becomes very predictable for

00:10:22,499 --> 00:10:29,519
me as a user how am I going to customize

00:10:25,740 --> 00:10:34,769
this component so I know that if I add

00:10:29,519 --> 00:10:38,519
here description and let's say the side

00:10:34,769 --> 00:10:42,420
of this file this will be translated

00:10:38,519 --> 00:10:45,089
into a actual Dom element that

00:10:42,420 --> 00:10:46,620
represents the description slot so let

00:10:45,089 --> 00:10:49,110
me just expand a little bit on the slot

00:10:46,620 --> 00:10:50,959
and what it means and where it is we are

00:10:49,110 --> 00:10:53,819
introduced it is called this concept and

00:10:50,959 --> 00:10:56,009
what each star does component is

00:10:53,819 --> 00:10:59,399
essentially a template in each of this

00:10:56,009 --> 00:11:01,920
template contains introduces slots in

00:10:59,399 --> 00:11:05,970
order to target specific areas of the

00:11:01,920 --> 00:11:09,029
component and we are doing this during

00:11:05,970 --> 00:11:11,490
to customization for for each of this

00:11:09,029 --> 00:11:13,980
slot there is a default component that

00:11:11,490 --> 00:11:15,870
is rendered so if

00:11:13,980 --> 00:11:18,600
I take the example of like I'm thinking

00:11:15,870 --> 00:11:22,290
this could be a file attachment and then

00:11:18,600 --> 00:11:25,350
for this I will introduce an icon I'll

00:11:22,290 --> 00:11:29,010
specify here a name let's say file word

00:11:25,350 --> 00:11:31,920
and this what will it will do it will

00:11:29,010 --> 00:11:34,680
bring up it will introduce a new slot

00:11:31,920 --> 00:11:37,080
the attachment oh sorry the icon slot

00:11:34,680 --> 00:11:39,690
and what it does behind the scenes it

00:11:37,080 --> 00:11:42,930
renders here the icon component so this

00:11:39,690 --> 00:11:46,680
will take the value put it as the name

00:11:42,930 --> 00:11:47,940
of the component and as the name of the

00:11:46,680 --> 00:11:50,700
sub component which is the icon and

00:11:47,940 --> 00:11:54,000
render it we can also introduce slots

00:11:50,700 --> 00:11:55,620
using objects to describe the element

00:11:54,000 --> 00:11:58,910
that's going to be rendered I will do

00:11:55,620 --> 00:12:02,450
this for something that's called action

00:11:58,910 --> 00:12:07,140
so for this one I'm going to use a

00:12:02,450 --> 00:12:12,630
JavaScript object and I will place here

00:12:07,140 --> 00:12:15,800
icon X so this what what you can see

00:12:12,630 --> 00:12:17,210
here on the right side it rendered a

00:12:15,800 --> 00:12:19,680
button

00:12:17,210 --> 00:12:22,260
you can see in the markup dancers here

00:12:19,680 --> 00:12:24,960
it rendered a button and inside the

00:12:22,260 --> 00:12:29,670
button there is a UI icon with the name

00:12:24,960 --> 00:12:33,500
X and this is render here let me add a

00:12:29,670 --> 00:12:35,580
few more things progress which will

00:12:33,500 --> 00:12:38,390
introduce another spot for the progress

00:12:35,580 --> 00:12:41,520
you can see here at the bottom it is 33%

00:12:38,390 --> 00:12:47,270
downloaded let's say and I will also

00:12:41,520 --> 00:12:54,270
bind here an onclick handler which will

00:12:47,270 --> 00:13:00,210
let say alert of clicked and it should

00:12:54,270 --> 00:13:03,330
be a string close this and then I click

00:13:00,210 --> 00:13:09,420
on it and there's the alert being

00:13:03,330 --> 00:13:11,580
propagated cool so now that we we have

00:13:09,420 --> 00:13:13,530
this fully fully customized Stander's

00:13:11,580 --> 00:13:17,760
starters component with all these slots

00:13:13,530 --> 00:13:19,260
defined and if I scroll down there's

00:13:17,760 --> 00:13:21,270
actually until we have some examples

00:13:19,260 --> 00:13:22,680
prepared here in order to for you to

00:13:21,270 --> 00:13:25,650
understand exactly what area is the

00:13:22,680 --> 00:13:26,900
header where the description the icons

00:13:25,650 --> 00:13:30,500
on the left

00:13:26,900 --> 00:13:31,700
and the action on the right and then

00:13:30,500 --> 00:13:34,460
there's a progress bar here at the

00:13:31,700 --> 00:13:35,960
bottom so this is what I I mentioned we

00:13:34,460 --> 00:13:38,540
mentioned earlier it's like the anatomy

00:13:35,960 --> 00:13:40,279
of the component we define that but all

00:13:38,540 --> 00:13:43,550
these all these thoughts are fully

00:13:40,279 --> 00:13:47,210
customizable so let me just prove that

00:13:43,550 --> 00:13:50,750
to you like by taking this example and I

00:13:47,210 --> 00:13:53,600
will go to the action slot and I'm going

00:13:50,750 --> 00:13:56,690
to style this part so I'm introducing

00:13:53,600 --> 00:14:04,520
styles object here and I'm going to

00:13:56,690 --> 00:14:06,529
change the background of this to red but

00:14:04,520 --> 00:14:08,240
then I can do the same for any of the

00:14:06,529 --> 00:14:11,000
own any of the straws themselves and

00:14:08,240 --> 00:14:13,640
actually for the top component itself so

00:14:11,000 --> 00:14:19,480
here I will just change the background

00:14:13,640 --> 00:14:22,760
of this one of the whole attachment to

00:14:19,480 --> 00:14:27,310
let's same bag do you know how to spell

00:14:22,760 --> 00:14:30,200
this let's make it yellow

00:14:27,310 --> 00:14:34,459
but the customization doesn't stop here

00:14:30,200 --> 00:14:36,430
we for all of these slots we might have

00:14:34,459 --> 00:14:40,160
some scenarios where we would like to

00:14:36,430 --> 00:14:41,270
have a specific mmm we have a specific

00:14:40,160 --> 00:14:42,560
need let's say to render something

00:14:41,270 --> 00:14:45,650
different you know in each of these

00:14:42,560 --> 00:14:49,430
slots so what we could do is we can

00:14:45,650 --> 00:14:52,370
actually render a plain HTML element so

00:14:49,430 --> 00:14:55,730
for this one in the action there's a

00:14:52,370 --> 00:14:57,860
plain button and you can see that the

00:14:55,730 --> 00:14:59,000
the capabilities of those clicking still

00:14:57,860 --> 00:15:01,339
work so everything like the

00:14:59,000 --> 00:15:03,740
functionality is preserved and moreover

00:15:01,339 --> 00:15:05,990
we can even introduce custom components

00:15:03,740 --> 00:15:08,720
from different UI libraries for this

00:15:05,990 --> 00:15:11,810
example specifically we are using a

00:15:08,720 --> 00:15:14,209
material UI button and in the action so

00:15:11,810 --> 00:15:15,620
I can prove it to you by if I click on

00:15:14,209 --> 00:15:17,240
it there's the ripple effect the famous

00:15:15,620 --> 00:15:19,910
ripple effect from material wide and

00:15:17,240 --> 00:15:22,010
this is visible here and also the

00:15:19,910 --> 00:15:24,950
president we preserve functionality

00:15:22,010 --> 00:15:28,160
because this is our one of our own main

00:15:24,950 --> 00:15:29,390
pillars so now we see that Stoddard

00:15:28,160 --> 00:15:31,220
introduces all the necessary

00:15:29,390 --> 00:15:34,310
capabilities for each car with each

00:15:31,220 --> 00:15:37,270
component customization while preserving

00:15:34,310 --> 00:15:40,490
the essence of the component it's logic

00:15:37,270 --> 00:15:40,700
right now we saw in this example that

00:15:40,490 --> 00:15:43,820
I'm

00:15:40,700 --> 00:15:45,890
using styles in line styles to actually

00:15:43,820 --> 00:15:48,860
define how the component looks like but

00:15:45,890 --> 00:15:53,030
it is not really valid in a real life

00:15:48,860 --> 00:15:56,210
scenario so like we might we might ask

00:15:53,030 --> 00:15:59,240
okay how can we achieve styling in a way

00:15:56,210 --> 00:16:00,890
that it preserves it's not it's not such

00:15:59,240 --> 00:16:02,840
a pain and a headache to maintain the

00:16:00,890 --> 00:16:05,270
consistency so you might think about

00:16:02,840 --> 00:16:07,940
thinning as a solution and this is

00:16:05,270 --> 00:16:12,080
exactly what Stardust is attempting to

00:16:07,940 --> 00:16:14,930
use in order to tackle this problem

00:16:12,080 --> 00:16:17,450
so let's not switch to more like a real

00:16:14,930 --> 00:16:22,430
it's like a real application so we have

00:16:17,450 --> 00:16:32,150
a prototype created here with images try

00:16:22,430 --> 00:16:37,430
to maybe zoom out a little bit it is too

00:16:32,150 --> 00:16:39,410
visible I think so so here we have you

00:16:37,430 --> 00:16:42,950
might recognize this as the speaker's

00:16:39,410 --> 00:16:44,480
page of the react website react

00:16:42,950 --> 00:16:46,820
conference website and this one is

00:16:44,480 --> 00:16:49,190
written in with using starters

00:16:46,820 --> 00:16:52,340
components so let's take a look at a

00:16:49,190 --> 00:16:55,430
page and we can identify a few of the of

00:16:52,340 --> 00:16:58,250
few of the areas here at the top we have

00:16:55,430 --> 00:17:02,510
a nav bar that contains the menu when

00:16:58,250 --> 00:17:05,740
then we have an input a grid of the

00:17:02,510 --> 00:17:10,420
speakers and then at the bottom there is

00:17:05,740 --> 00:17:13,310
another another menu here in the footer

00:17:10,420 --> 00:17:14,360
so what are the benefits of using

00:17:13,310 --> 00:17:17,420
starters for this

00:17:14,360 --> 00:17:19,520
where where where would we have problems

00:17:17,420 --> 00:17:21,680
if we used another another toolset

00:17:19,520 --> 00:17:23,690
instead of Tsarist let's see how

00:17:21,680 --> 00:17:28,310
accessibility works I'm just going to

00:17:23,690 --> 00:17:30,470
turn on voiceover here hope this doesn't

00:17:28,310 --> 00:17:32,090
break anything and I want to use my

00:17:30,470 --> 00:17:33,560
keyboard actually for this part so I

00:17:32,090 --> 00:17:35,990
promise I'm not going to touch the

00:17:33,560 --> 00:17:39,050
touchpad here so I'm just using my

00:17:35,990 --> 00:17:40,520
keyboard and now I'm navigating I press

00:17:39,050 --> 00:17:43,190
tab to navigate there and I'm pressing

00:17:40,520 --> 00:17:45,290
the arrow keys to navigate back and

00:17:43,190 --> 00:17:48,350
forth through the menu and you can see

00:17:45,290 --> 00:17:50,390
maybe in the top in the lower left

00:17:48,350 --> 00:17:52,430
corner that the screen reader is

00:17:50,390 --> 00:17:54,020
actually reading the menu like schedule

00:17:52,430 --> 00:17:56,840
menu items or

00:17:54,020 --> 00:17:59,270
this automatically and then I can

00:17:56,840 --> 00:18:01,190
navigate with tab to the button then I

00:17:59,270 --> 00:18:02,600
can navigate to the input here I can

00:18:01,190 --> 00:18:04,970
filter these people these are all

00:18:02,600 --> 00:18:07,490
starters components so everything is

00:18:04,970 --> 00:18:11,090
working like I'm just using the the

00:18:07,490 --> 00:18:13,940
keyboard itself and of course navigation

00:18:11,090 --> 00:18:16,670
food through the grid itself with keys

00:18:13,940 --> 00:18:18,140
and then at the end navigation in this

00:18:16,670 --> 00:18:20,440
menu and I selecting with enter

00:18:18,140 --> 00:18:22,970
everything's fine

00:18:20,440 --> 00:18:28,250
let's okay let's look at the code for

00:18:22,970 --> 00:18:31,100
the top menu so we have it here this is

00:18:28,250 --> 00:18:33,830
it this is just importing the menu

00:18:31,100 --> 00:18:36,530
status component and identifying the

00:18:33,830 --> 00:18:38,870
item slot specifying the items

00:18:36,530 --> 00:18:40,760
themselves and there's no code related

00:18:38,870 --> 00:18:42,680
to accessibility this comes it's out of

00:18:40,760 --> 00:18:47,890
the box it's already it's part of the

00:18:42,680 --> 00:18:50,660
components logic and it just works and

00:18:47,890 --> 00:18:52,880
we are going to prove how this how the

00:18:50,660 --> 00:18:56,390
steel will still be working even if we

00:18:52,880 --> 00:18:58,670
do major changes in styling so I'm going

00:18:56,390 --> 00:19:00,350
to introduce now a another benefit of

00:18:58,670 --> 00:19:03,500
Stardust which is the ability to

00:19:00,350 --> 00:19:06,140
customize component styles by singly by

00:19:03,500 --> 00:19:09,110
simply targeting component name by their

00:19:06,140 --> 00:19:10,130
names and specifying plain CSS and J's

00:19:09,110 --> 00:19:14,900
objects for that

00:19:10,130 --> 00:19:18,980
so for these styles in the page we

00:19:14,900 --> 00:19:23,270
created this default theme which

00:19:18,980 --> 00:19:26,300
contains just a JavaScript object and it

00:19:23,270 --> 00:19:27,980
identifies in the component styles by

00:19:26,300 --> 00:19:30,260
their names date a time the elephant it

00:19:27,980 --> 00:19:33,620
identifies the components and we just

00:19:30,260 --> 00:19:41,270
specify a regular object file let me

00:19:33,620 --> 00:19:43,580
turn off this so this is how we were

00:19:41,270 --> 00:19:46,370
able to achieve styling and now all

00:19:43,580 --> 00:19:49,130
these styles are assembled on in in the

00:19:46,370 --> 00:19:51,350
theme object that we are providing at

00:19:49,130 --> 00:19:53,090
the top of the tree and it's provided

00:19:51,350 --> 00:19:57,800
all these components through the react

00:19:53,090 --> 00:20:00,050
context now suppose that we we want to

00:19:57,800 --> 00:20:03,050
take Tweety's the styling aspects to

00:20:00,050 --> 00:20:04,970
introduce material flavor to the main

00:20:03,050 --> 00:20:07,789
page so this is how the page looks right

00:20:04,970 --> 00:20:10,940
now so we are going

00:20:07,789 --> 00:20:14,629
to introduce the elevation the paper and

00:20:10,940 --> 00:20:16,700
the layering effects and we for doing

00:20:14,629 --> 00:20:18,409
that we introduce another thing where

00:20:16,700 --> 00:20:21,409
the material styles are provided so I'm

00:20:18,409 --> 00:20:23,509
going to the index page and where we are

00:20:21,409 --> 00:20:25,970
using here at the top of the page the

00:20:23,509 --> 00:20:29,409
provider I'm going to add the material

00:20:25,970 --> 00:20:33,889
theme which is just like a very similar

00:20:29,409 --> 00:20:38,139
very similar object that we have just

00:20:33,889 --> 00:20:40,940
one so I'm going to save this file and

00:20:38,139 --> 00:20:43,609
go back here and now we see that paint

00:20:40,940 --> 00:20:46,669
is completely different we I'm going to

00:20:43,609 --> 00:20:49,239
if I'm going to scroll we see this this

00:20:46,669 --> 00:20:52,629
effect at the navigation bar at the top

00:20:49,239 --> 00:20:56,359
there is this paper effect and like

00:20:52,629 --> 00:20:57,919
layering of the grid items background

00:20:56,359 --> 00:20:59,929
are different so this is just by

00:20:57,919 --> 00:21:04,700
changing one object at the top of the

00:20:59,929 --> 00:21:06,289
tree and like I I will okay let's see

00:21:04,700 --> 00:21:07,580
let's go back to keep a navigation and

00:21:06,289 --> 00:21:10,249
see how it the functionality is still

00:21:07,580 --> 00:21:11,899
there and yes it is we I'm just using

00:21:10,249 --> 00:21:15,169
again the keys to navigate through these

00:21:11,899 --> 00:21:17,479
controls everything was I put back

00:21:15,169 --> 00:21:19,099
functionality is preserved but the whole

00:21:17,479 --> 00:21:21,979
styling is completely changing it looks

00:21:19,099 --> 00:21:24,950
like a different app almost um so just

00:21:21,979 --> 00:21:26,690
to recap as we seen just by using

00:21:24,950 --> 00:21:30,169
starters components we are able to

00:21:26,690 --> 00:21:32,269
address accessibility issues we are able

00:21:30,169 --> 00:21:35,960
to introduce dimming capabilities to to

00:21:32,269 --> 00:21:39,259
a webpage and all the styles are now

00:21:35,960 --> 00:21:42,950
manageable through four themes while

00:21:39,259 --> 00:21:45,649
preserving the whole functionality thank

00:21:42,950 --> 00:21:50,330
you very much and now I'm going to hand

00:21:45,649 --> 00:21:52,729
over to Hugh for wrapping up so in

00:21:50,330 --> 00:21:54,019
summary we hope that we're not actually

00:21:52,729 --> 00:21:54,559
introducing anything very new in

00:21:54,019 --> 00:21:57,129
Stardust

00:21:54,559 --> 00:22:01,279
it's really much much more just

00:21:57,129 --> 00:22:03,769
repackaging re abstract Avella pay over

00:22:01,279 --> 00:22:07,009
the years and aligning around a common

00:22:03,769 --> 00:22:10,700
language so it's it's relatively early

00:22:07,009 --> 00:22:12,559
days we're at a zero point release we

00:22:10,700 --> 00:22:14,809
have a first react based implementation

00:22:12,559 --> 00:22:17,480
of the components and we've proven that

00:22:14,809 --> 00:22:18,590
we think the we can't really abstract

00:22:17,480 --> 00:22:21,050
the keyboard navigation the

00:22:18,590 --> 00:22:23,600
accessibility and the theming out

00:22:21,050 --> 00:22:25,940
would I recommend you don't you start us

00:22:23,600 --> 00:22:27,020
tomorrow for your new project probably

00:22:25,940 --> 00:22:29,360
not

00:22:27,020 --> 00:22:31,760
that's quite a lot more thinking to do

00:22:29,360 --> 00:22:34,310
about abstracting state and managing

00:22:31,760 --> 00:22:36,350
component states and enriching the

00:22:34,310 --> 00:22:38,720
libraries the component library and the

00:22:36,350 --> 00:22:41,300
theme library if you'd like to help out

00:22:38,720 --> 00:22:44,270
with this we'd love to hear from you

00:22:41,300 --> 00:22:46,100
we're on github under start us react and

00:22:44,270 --> 00:22:47,990
we very much welcome your contributions

00:22:46,100 --> 00:22:55,970
thank you very much thank you for

00:22:47,990 --> 00:22:59,710
staying late and listening alright a

00:22:55,970 --> 00:22:59,710
couple of questions for you I believe

00:23:00,220 --> 00:23:06,680
first one what's the reason for forking

00:23:03,740 --> 00:23:08,120
yeah the somatic UI to create almost

00:23:06,680 --> 00:23:13,340
identical project instead of

00:23:08,120 --> 00:23:15,500
contributing to it I we semantic UI is a

00:23:13,340 --> 00:23:20,930
great base they have a lot of ideas

00:23:15,500 --> 00:23:23,180
which we're building on they are not

00:23:20,930 --> 00:23:24,770
style agnostic that they had they have

00:23:23,180 --> 00:23:27,230
an opinion about how things should look

00:23:24,770 --> 00:23:29,360
we that's one of the things which we

00:23:27,230 --> 00:23:32,870
didn't want them to take from semantic

00:23:29,360 --> 00:23:34,970
UI and the other thing is they don't

00:23:32,870 --> 00:23:37,130
cover accessibility in anything like the

00:23:34,970 --> 00:23:38,510
depth which we're doing for sure they

00:23:37,130 --> 00:23:43,400
have some keyboard navigation but they

00:23:38,510 --> 00:23:46,040
definitely don't have the depth of roll

00:23:43,400 --> 00:23:47,510
handling with the elements ensuring the

00:23:46,040 --> 00:23:49,400
elements actually follow the w3c

00:23:47,510 --> 00:23:54,920
standards and so on in the actual

00:23:49,400 --> 00:23:57,140
components so semantic UI is fantastic I

00:23:54,920 --> 00:23:58,940
think it's a great library we're just

00:23:57,140 --> 00:24:01,220
trying to build on top of it and make

00:23:58,940 --> 00:24:05,570
the big make learn as much as we can

00:24:01,220 --> 00:24:07,040
from it I would say that I was actually

00:24:05,570 --> 00:24:09,050
trying to use a magic way to achieve

00:24:07,040 --> 00:24:11,690
some very basic styling issues like

00:24:09,050 --> 00:24:14,390
styling things and you can get really

00:24:11,690 --> 00:24:16,040
because they're using studying CSS and

00:24:14,390 --> 00:24:18,080
with all the styles are marked as

00:24:16,040 --> 00:24:20,210
important it's very very hard to

00:24:18,080 --> 00:24:22,520
customize this so it's like one of the

00:24:20,210 --> 00:24:23,960
biggest issues that I have alright we've

00:24:22,520 --> 00:24:28,310
got time for one more question

00:24:23,960 --> 00:24:30,190
is this a fork from semantic UI and

00:24:28,310 --> 00:24:36,340
that's pretty much the same question

00:24:30,190 --> 00:24:38,679
right mm-hmm what I will say is yes it

00:24:36,340 --> 00:24:41,230
is a fork and yes that the class names

00:24:38,679 --> 00:24:44,230
and things are similar but they are

00:24:41,230 --> 00:24:46,629
diverging yes people have tried now to

00:24:44,230 --> 00:24:49,000
take semantic UI and just change it for

00:24:46,629 --> 00:24:49,600
Stardust it's getting more difficult to

00:24:49,000 --> 00:24:52,240
do that

00:24:49,600 --> 00:24:54,419
we are diverging you know in a little

00:24:52,240 --> 00:24:58,029
bit in some concepts and aspects but

00:24:54,419 --> 00:25:01,870
yeah both great libraries a lot of good

00:24:58,029 --> 00:25:03,429
stuff in semantic UI all right that is

00:25:01,870 --> 00:25:04,870
all we have time for whoever asked that

00:25:03,429 --> 00:25:07,360
final question you're gonna have to do

00:25:04,870 --> 00:25:09,890
in a person all right thank you very

00:25:07,360 --> 00:25:13,380
much guys thank you thank you

00:25:09,890 --> 00:25:13,380

YouTube URL: https://www.youtube.com/watch?v=dQLardKZ8PA


