Title: ROSCon 2018 Madrid aibo development using ROS
Publication date: 2021-03-28
Playlist: ROSCon 2018
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2018 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:04,859
Maureen my name is told me Alicia from

00:00:03,030 --> 00:00:08,550
Sony Japan and we're gonna talk about

00:00:04,859 --> 00:00:10,530
eyeball and rust today here and first I

00:00:08,550 --> 00:00:12,389
will say thank you very much for your

00:00:10,530 --> 00:00:15,150
cooperation the effort for everything

00:00:12,389 --> 00:00:17,699
you did and open-source community and

00:00:15,150 --> 00:00:19,470
everyone involved in this mission thank

00:00:17,699 --> 00:00:24,750
you very much we really appreciate that

00:00:19,470 --> 00:00:27,150
effort and again I'm from Sony Japan R&D

00:00:24,750 --> 00:00:28,949
center I'm a software engineer most

00:00:27,150 --> 00:00:30,929
likely working on the system services

00:00:28,949 --> 00:00:34,350
like middleweights right gloss and

00:00:30,929 --> 00:00:36,300
sometimes Cornell and the Rose is one of

00:00:34,350 --> 00:00:40,910
the open source which we used for

00:00:36,300 --> 00:00:40,910
eyeball okay let's talk about that today

00:00:41,780 --> 00:00:45,379
we can see that

00:00:51,239 --> 00:00:59,530
okay so the question is how many over

00:00:53,980 --> 00:01:02,410
you know I bought Oh like I do not

00:00:59,530 --> 00:01:06,100
expect that's coming here okay like

00:01:02,410 --> 00:01:07,000
everyone again first I need a project

00:01:06,100 --> 00:01:08,830
that I Pau

00:01:07,000 --> 00:01:11,710
well that's shipped out from Japan to be

00:01:08,830 --> 00:01:14,950
here but something happens in the custom

00:01:11,710 --> 00:01:16,930
so he's got in custody in the Madrid

00:01:14,950 --> 00:01:18,580
Airport so I'm sorry about that but

00:01:16,930 --> 00:01:20,470
instead of that I'm gonna show you the

00:01:18,580 --> 00:01:23,790
quick video to you know

00:01:20,470 --> 00:01:23,790
describe what to aiways

00:01:30,610 --> 00:01:33,610
yeah

00:02:00,470 --> 00:02:08,360
[Music]

00:02:19,620 --> 00:02:25,969
[Music]

00:02:29,709 --> 00:02:34,970
okay so the Bible is the home

00:02:32,030 --> 00:02:36,680
entertainment robot and it's also the

00:02:34,970 --> 00:02:40,310
autonomous robot that brings us

00:02:36,680 --> 00:02:42,560
emotional bond to you owners and it's

00:02:40,310 --> 00:02:46,280
not a prototype it's a product on the

00:02:42,560 --> 00:02:48,319
market in Japan and that's the actual

00:02:46,280 --> 00:02:51,050
product so what's important for now is

00:02:48,319 --> 00:02:54,620
we use Ross for that that's a great

00:02:51,050 --> 00:02:57,290
thing and let me do some quick outs here

00:02:54,620 --> 00:03:03,819
because I got too much pressure on me

00:02:57,290 --> 00:03:03,819
from the management so that's I will oh

00:03:07,299 --> 00:03:15,340
okay that's I bought the product name is

00:03:10,430 --> 00:03:25,400
ers - 1000 and it's already out there on

00:03:15,340 --> 00:03:27,320
in Japan ok and it's coming up in us

00:03:25,400 --> 00:03:29,269
very soon so you can book it actually

00:03:27,320 --> 00:03:31,820
you can book the I before now so for you

00:03:29,269 --> 00:03:34,310
you can you can do pre-order so if you

00:03:31,820 --> 00:03:39,320
are interested please try out I bow

00:03:34,310 --> 00:03:41,239
thank you very much and so I bought that

00:03:39,320 --> 00:03:43,489
I'm gonna talk about the concept I

00:03:41,239 --> 00:03:46,489
becomes close to you and makes

00:03:43,489 --> 00:03:49,010
interaction with you very positively

00:03:46,489 --> 00:03:51,549
that's a whole new concept or difference

00:03:49,010 --> 00:03:54,590
you could say against you know like a

00:03:51,549 --> 00:03:57,760
compared to you existed the consumer

00:03:54,590 --> 00:04:00,500
device is like a TB does not come to you

00:03:57,760 --> 00:04:02,780
alright maybe you have the audio agent

00:04:00,500 --> 00:04:04,850
the agent is just waiting for your

00:04:02,780 --> 00:04:09,010
command to wake up right so that's it

00:04:04,850 --> 00:04:09,010
you know like a difference the Iowa has

00:04:09,160 --> 00:04:17,060
and this is the architecture we have on

00:04:14,030 --> 00:04:19,459
your left bottom a lot of sensor data

00:04:17,060 --> 00:04:21,590
comes from the physical senses and

00:04:19,459 --> 00:04:24,710
sometimes if necessary we have to do

00:04:21,590 --> 00:04:26,930
refraction you don't like something so

00:04:24,710 --> 00:04:29,360
like if we touch something really hard

00:04:26,930 --> 00:04:31,700
we we will anti-static mediatory without

00:04:29,360 --> 00:04:33,289
anything right so that that refraction

00:04:31,700 --> 00:04:35,919
and the sensor data is processed to

00:04:33,289 --> 00:04:38,889
recognition and understand

00:04:35,919 --> 00:04:42,220
the situation or environment you know to

00:04:38,889 --> 00:04:45,850
do the intelligent process we do some

00:04:42,220 --> 00:04:48,040
you know like process on the edge but I

00:04:45,850 --> 00:04:50,290
bow is also connected to the cloud so we

00:04:48,040 --> 00:04:51,760
can do if the workload is heavy we can

00:04:50,290 --> 00:04:55,030
do the process on a cloud server and

00:04:51,760 --> 00:04:57,610
bring it back to the edge and we can do

00:04:55,030 --> 00:05:02,020
their behavior planning and make actual

00:04:57,610 --> 00:05:04,360
motion to the user and this is not this

00:05:02,020 --> 00:05:07,600
earth picture we believe is not only

00:05:04,360 --> 00:05:12,280
flyable but also the other robots we are

00:05:07,600 --> 00:05:15,389
trying to okay this is the product

00:05:12,280 --> 00:05:19,810
design and concept before we start

00:05:15,389 --> 00:05:23,590
development any development and first we

00:05:19,810 --> 00:05:26,020
define eyeball area for making a good

00:05:23,590 --> 00:05:30,250
communication so based on this design

00:05:26,020 --> 00:05:32,199
we choose the physical sensors and what

00:05:30,250 --> 00:05:34,449
kind of perceptions I should do or

00:05:32,199 --> 00:05:37,539
something like that this is a start this

00:05:34,449 --> 00:05:39,690
is the very beginning of lipo and you

00:05:37,539 --> 00:05:42,310
can see the feeling area I would can I

00:05:39,690 --> 00:05:44,380
would can feel somebody or something

00:05:42,310 --> 00:05:46,900
he has no idea about a few idiots but he

00:05:44,380 --> 00:05:48,820
can realize somebody is there and he can

00:05:46,900 --> 00:05:50,889
try to you know get attention in the

00:05:48,820 --> 00:05:53,380
attraction area to you know like make

00:05:50,889 --> 00:05:55,539
quick reaction somebody because somebody

00:05:53,380 --> 00:05:58,539
is there and after that we can

00:05:55,539 --> 00:06:00,639
communicate with user owners this step

00:05:58,539 --> 00:06:07,780
is just to make natural communication

00:06:00,639 --> 00:06:10,410
for Iowa okay that is its platform we we

00:06:07,780 --> 00:06:13,300
used for the application processor

00:06:10,410 --> 00:06:16,360
welcomes natural my 20 the product name

00:06:13,300 --> 00:06:19,330
is AP q 1896 because they have a lot of

00:06:16,360 --> 00:06:22,840
you know experience in the mobile market

00:06:19,330 --> 00:06:26,590
and they have good future so for audio

00:06:22,840 --> 00:06:29,470
system and sensors so which we chose to

00:06:26,590 --> 00:06:32,590
use snap drama which is the most

00:06:29,470 --> 00:06:33,970
advanced chip in the world so and on the

00:06:32,590 --> 00:06:35,970
left you can see the bunch of sensors

00:06:33,970 --> 00:06:39,849
connected to the application processor

00:06:35,970 --> 00:06:42,280
two cameras and tof touch sensors and

00:06:39,849 --> 00:06:45,789
microphone PSD motion detector ambient

00:06:42,280 --> 00:06:46,780
white IMU and on the on the right we

00:06:45,789 --> 00:06:48,980
have total

00:06:46,780 --> 00:06:51,530
22 actuators

00:06:48,980 --> 00:06:53,510
our specific activators directly

00:06:51,530 --> 00:06:59,810
connected with motion processor so we

00:06:53,510 --> 00:07:01,460
can have the real time action here okay

00:06:59,810 --> 00:07:04,400
this is a list of cents I'm not going to

00:07:01,460 --> 00:07:08,320
mention all of this but we have two

00:07:04,400 --> 00:07:11,060
cameras on the front face and back and

00:07:08,320 --> 00:07:14,480
that's a feature camera because I

00:07:11,060 --> 00:07:16,910
believe some wide-angle to see somebody

00:07:14,480 --> 00:07:20,090
who is standing right in front of him

00:07:16,910 --> 00:07:22,070
right so I was like this big and he's on

00:07:20,090 --> 00:07:26,000
the force so he can see that with that

00:07:22,070 --> 00:07:28,580
wide-angle for somebody's face and also

00:07:26,000 --> 00:07:32,390
we used the back camera for swamp

00:07:28,580 --> 00:07:35,120
I'm counselor on the edge this know what

00:07:32,390 --> 00:07:37,610
there is no upload to the cloud and so

00:07:35,120 --> 00:07:41,210
he can make mapping and he can get back

00:07:37,610 --> 00:07:42,830
to the cheerio station in the house and

00:07:41,210 --> 00:07:46,700
also we have like an object detection

00:07:42,830 --> 00:07:50,690
and cliff detection and lift up or human

00:07:46,700 --> 00:07:52,370
detection something like that okay let

00:07:50,690 --> 00:07:54,670
me talk about a speech recognition here

00:07:52,370 --> 00:07:57,860
I will have to pull Mike's available and

00:07:54,670 --> 00:08:00,740
block out sound source direction and the

00:07:57,860 --> 00:08:03,560
speech recognition everything is done on

00:08:00,740 --> 00:08:05,420
that there is no need to upload PCM data

00:08:03,560 --> 00:08:08,450
to the cloud so everything is done on

00:08:05,420 --> 00:08:11,360
the on the edge this is also cared for

00:08:08,450 --> 00:08:15,020
privacy of course and the commands

00:08:11,360 --> 00:08:17,240
available just like dogs do if you have

00:08:15,020 --> 00:08:18,680
dog like a sit or stay or something

00:08:17,240 --> 00:08:21,770
something like that you can see it right

00:08:18,680 --> 00:08:25,420
so I we can understand that commands but

00:08:21,770 --> 00:08:28,730
there is no wake up month so the eyeball

00:08:25,420 --> 00:08:31,730
that regularly and constantly does a

00:08:28,730 --> 00:08:33,530
speech recognition to make only to make

00:08:31,730 --> 00:08:36,110
natural communication so there is no

00:08:33,530 --> 00:08:37,970
wake up command for the eyeball so you

00:08:36,110 --> 00:08:40,130
know we use we have our own specific

00:08:37,970 --> 00:08:42,919
audio technology because we have a lot

00:08:40,130 --> 00:08:45,650
of experience with audio so we use their

00:08:42,919 --> 00:08:48,020
technology for that eyeball for the

00:08:45,650 --> 00:08:54,020
digital signal processing and the speech

00:08:48,020 --> 00:08:56,510
recognition and this is I'm gonna talk

00:08:54,020 --> 00:09:01,500
about tools from here this is the one

00:08:56,510 --> 00:09:03,690
tool that there is cohesion view and

00:09:01,500 --> 00:09:06,420
it's one of the tool developed by us

00:09:03,690 --> 00:09:09,000
during development it is really

00:09:06,420 --> 00:09:11,700
important to you know you can see what's

00:09:09,000 --> 00:09:14,160
going on inside a book in the real time

00:09:11,700 --> 00:09:16,590
so we need you to see that so this is

00:09:14,160 --> 00:09:19,620
one of them so you can see the cognition

00:09:16,590 --> 00:09:23,610
status of Iowa in real time and we can

00:09:19,620 --> 00:09:26,160
see the circle and the circle is exactly

00:09:23,610 --> 00:09:28,590
what I mentioned before the design

00:09:26,160 --> 00:09:31,320
that's a whole concept so we can see

00:09:28,590 --> 00:09:33,990
with this tool if I persist M goes with

00:09:31,320 --> 00:09:41,610
what we design exactly so this is pretty

00:09:33,990 --> 00:09:44,340
much important for debugging okay this

00:09:41,610 --> 00:09:46,410
is ml data collect by mu L stands for

00:09:44,340 --> 00:09:49,830
machine learning and with this year we

00:09:46,410 --> 00:09:51,030
can see we can we can get offensive data

00:09:49,830 --> 00:09:53,130
from diable

00:09:51,030 --> 00:09:56,370
of course the recording is supported so

00:09:53,130 --> 00:10:02,910
we can later we can play back the sense

00:09:56,370 --> 00:10:05,520
of data for libel and this is what we

00:10:02,910 --> 00:10:08,310
called what what is called is a neural

00:10:05,520 --> 00:10:11,250
network console and it's really common

00:10:08,310 --> 00:10:14,070
to use the deep learning for the

00:10:11,250 --> 00:10:17,190
recognition right so and we have our own

00:10:14,070 --> 00:10:20,280
open source library and the console that

00:10:17,190 --> 00:10:23,100
is Sony neural network console this is a

00:10:20,280 --> 00:10:28,080
console so with this theory you can feel

00:10:23,100 --> 00:10:32,820
network just like that and even it can

00:10:28,080 --> 00:10:35,130
optimize the network automatically like

00:10:32,820 --> 00:10:37,200
I said this is already open source and

00:10:35,130 --> 00:10:39,420
it's open public so if you are

00:10:37,200 --> 00:10:41,400
interested in like AI programming or

00:10:39,420 --> 00:10:44,220
deep-lying you can you know you can

00:10:41,400 --> 00:10:49,820
double check that it's worth to give it

00:10:44,220 --> 00:10:53,070
a shot and all of the training for the

00:10:49,820 --> 00:10:56,730
recognition is done offline we don't do

00:10:53,070 --> 00:10:58,980
anything any training on the edge so we

00:10:56,730 --> 00:11:01,380
have everything trained on the server

00:10:58,980 --> 00:11:04,850
and we deploy that network to that it's

00:11:01,380 --> 00:11:04,850
H on eyeball

00:11:05,899 --> 00:11:13,980
okay this is anybody familiar with the

00:11:10,050 --> 00:11:15,569
gaming yeah no okay

00:11:13,980 --> 00:11:19,019
this is how it just looks like a

00:11:15,569 --> 00:11:22,439
behavior editor and huh it's really

00:11:19,019 --> 00:11:24,779
common for gaming and this is maybe some

00:11:22,439 --> 00:11:27,209
of you already realized this is unity

00:11:24,779 --> 00:11:30,410
custom plugin and the describe behavior

00:11:27,209 --> 00:11:33,779
tree to connect each motions which is

00:11:30,410 --> 00:11:36,059
created by the motion creator and we can

00:11:33,779 --> 00:11:39,809
with this tool we can you know make the

00:11:36,059 --> 00:11:45,120
whole you know one behavior from some

00:11:39,809 --> 00:11:47,459
emotions and this is also the unity

00:11:45,120 --> 00:11:50,879
custom plugin and model to make motion

00:11:47,459 --> 00:11:54,720
so far no plan we get a lot of questions

00:11:50,879 --> 00:11:57,240
if we you know like expose this degree

00:11:54,720 --> 00:12:00,420
and make model for the open source but

00:11:57,240 --> 00:12:02,730
so far no plan to do that so this is

00:12:00,420 --> 00:12:05,699
used by motion creator most likely and

00:12:02,730 --> 00:12:09,300
since they are not software engineer so

00:12:05,699 --> 00:12:11,879
it's pretty hard to use gazebo so that's

00:12:09,300 --> 00:12:15,680
why we made this tool for them so they

00:12:11,879 --> 00:12:22,319
can make a lot of motions with this tool

00:12:15,680 --> 00:12:24,149
and this is screenshot from the apps on

00:12:22,319 --> 00:12:27,000
the smartphone you can as you can see

00:12:24,149 --> 00:12:29,490
you can teach some tricks like motions

00:12:27,000 --> 00:12:32,100
and of course you can make making forget

00:12:29,490 --> 00:12:35,069
about that and you can do some system

00:12:32,100 --> 00:12:41,579
setting like a Wi-Fi or cameras pictures

00:12:35,069 --> 00:12:45,029
you can see that on the apps okay we

00:12:41,579 --> 00:12:48,809
have the Ross boundary between some

00:12:45,029 --> 00:12:51,149
system demo for here like eyes eye demon

00:12:48,809 --> 00:12:53,279
and sound mixer and we the motion

00:12:51,149 --> 00:12:55,679
processor is not Ross no it's a

00:12:53,279 --> 00:12:58,949
different hardware and connected to that

00:12:55,679 --> 00:13:01,999
you know like actuators in the body

00:12:58,949 --> 00:13:04,139
controller is Ross not running on AP

00:13:01,999 --> 00:13:05,910
communicate with the motion processor

00:13:04,139 --> 00:13:09,870
and the motion processor contours

00:13:05,910 --> 00:13:11,730
actuators the boundaries for real-time I

00:13:09,870 --> 00:13:13,920
think will you already understand that

00:13:11,730 --> 00:13:17,790
from this picture and for the behavior

00:13:13,920 --> 00:13:19,020
which is based on I speakers and motions

00:13:17,790 --> 00:13:22,560
because the the

00:13:19,020 --> 00:13:25,920
has to be synchronized if for example

00:13:22,560 --> 00:13:27,900
like if they are not synchronized I

00:13:25,920 --> 00:13:30,270
would seamless still be working barking

00:13:27,900 --> 00:13:32,580
that sounds comes after at five seconds

00:13:30,270 --> 00:13:33,960
that's it does not make any sense so for

00:13:32,580 --> 00:13:41,250
the real-time we designed this

00:13:33,960 --> 00:13:43,080
architecture okay now we have four we

00:13:41,250 --> 00:13:45,870
have the experience for the mobile

00:13:43,080 --> 00:13:49,680
platform like security wireless camera

00:13:45,870 --> 00:13:51,870
and sensors and I was also a Darius IOT

00:13:49,680 --> 00:13:56,130
and the rest connected to the a Darius

00:13:51,870 --> 00:13:58,020
crowd and we use Ross for aibi

00:13:56,130 --> 00:14:02,130
but it's still challenge for us to use

00:13:58,020 --> 00:14:05,660
Ross for the product but we I'm from R&D

00:14:02,130 --> 00:14:08,880
and we think we should give it a shot

00:14:05,660 --> 00:14:12,450
that's that's for us that's the

00:14:08,880 --> 00:14:18,390
challenge was and we did put everything

00:14:12,450 --> 00:14:20,850
together that is able okay now we have

00:14:18,390 --> 00:14:24,180
been talking about the iBook so much and

00:14:20,850 --> 00:14:28,800
we did some avid optimization for iPhone

00:14:24,180 --> 00:14:31,260
so let's talk about that from here okay

00:14:28,800 --> 00:14:34,200
before going before moving on the main

00:14:31,260 --> 00:14:36,420
topic let me explain how how it works

00:14:34,200 --> 00:14:39,630
for the Ross transport layer if you are

00:14:36,420 --> 00:14:41,100
lost application engineer like you don't

00:14:39,630 --> 00:14:42,840
need to know anything about this it's

00:14:41,100 --> 00:14:45,450
perfect or it concealed by API so you

00:14:42,840 --> 00:14:48,270
haven't maybe you don't need to realize

00:14:45,450 --> 00:14:50,460
that but for my explanation I let me

00:14:48,270 --> 00:14:52,440
explain that first there are two types

00:14:50,460 --> 00:14:54,750
of collections wines xml-rpc

00:14:52,440 --> 00:14:58,890
which is takes care of the configuration

00:14:54,750 --> 00:15:03,270
data such as who publishes or subscribes

00:14:58,890 --> 00:15:06,150
on which topics or services and that's

00:15:03,270 --> 00:15:11,100
extreme RPC and it's not important for

00:15:06,150 --> 00:15:13,200
now because that happens like only boot

00:15:11,100 --> 00:15:15,750
style once your ross system boot comes

00:15:13,200 --> 00:15:17,520
up online that every you know everything

00:15:15,750 --> 00:15:20,040
should be done the configuration has

00:15:17,520 --> 00:15:22,830
been done so there is no activity for

00:15:20,040 --> 00:15:26,130
the exam or pc most likely of course the

00:15:22,830 --> 00:15:29,100
second one fishy of tcp and UDP ross is

00:15:26,130 --> 00:15:32,070
import force because this takes care of

00:15:29,100 --> 00:15:32,790
the user data payload so which means

00:15:32,070 --> 00:15:35,700
every

00:15:32,790 --> 00:15:37,320
single time you publish the data or if

00:15:35,700 --> 00:15:39,540
you're on the other side you receive the

00:15:37,320 --> 00:15:42,720
data you're gonna have to use TCP or UDP

00:15:39,540 --> 00:15:45,840
rows in default you use TCP rows so that

00:15:42,720 --> 00:15:52,290
the point is every single time as long

00:15:45,840 --> 00:15:56,250
as your system is running okay so what

00:15:52,290 --> 00:16:01,230
is the program CP stress and the latency

00:15:56,250 --> 00:16:03,780
and throughput so you know like Ross is

00:16:01,230 --> 00:16:06,120
pretty good for the packages and build

00:16:03,780 --> 00:16:08,850
tools and documentation but it's not

00:16:06,120 --> 00:16:11,160
cool enough to be optimized for the CPU

00:16:08,850 --> 00:16:13,860
consumption and the writing C for the

00:16:11,160 --> 00:16:18,330
embedded system so we focus on the TCP

00:16:13,860 --> 00:16:21,750
or us to enhance it because the he like

00:16:18,330 --> 00:16:24,120
I said if we can optimize T sphero's we

00:16:21,750 --> 00:16:26,190
can take advantage of that every single

00:16:24,120 --> 00:16:29,990
time you publish the data that's a huge

00:16:26,190 --> 00:16:33,150
you know like optimization for us so

00:16:29,990 --> 00:16:35,940
forth my zatia the first the priority is

00:16:33,150 --> 00:16:38,190
not foreign policy is for us is do not

00:16:35,940 --> 00:16:39,780
break the user space so that's if we you

00:16:38,190 --> 00:16:41,640
are dealing with a system layer that's

00:16:39,780 --> 00:16:44,580
the priority number one you do not break

00:16:41,640 --> 00:16:47,670
any user space so we we think we should

00:16:44,580 --> 00:16:51,030
have good affinity with the TCP rows and

00:16:47,670 --> 00:16:54,480
with that small latency and high

00:16:51,030 --> 00:17:00,330
throughput and no change required for

00:16:54,480 --> 00:17:02,910
the application okay this is expected

00:17:00,330 --> 00:17:05,070
improvement as for the system the system

00:17:02,910 --> 00:17:09,330
typical number and we have a skylight

00:17:05,070 --> 00:17:14,090
for amd64 and high key I'm 64 and as you

00:17:09,330 --> 00:17:17,490
can see for the sky like the latency is

00:17:14,090 --> 00:17:20,760
1.7 times faster and high key two times

00:17:17,490 --> 00:17:23,790
first and throughput and for sky like

00:17:20,760 --> 00:17:26,180
four times improved and for hiking ten

00:17:23,790 --> 00:17:30,060
times that's really good optimization

00:17:26,180 --> 00:17:32,430
for system this is just system typical

00:17:30,060 --> 00:17:33,960
number so this is not what we get on

00:17:32,430 --> 00:17:36,170
application I'm going to talk about it

00:17:33,960 --> 00:17:36,170
later

00:17:37,460 --> 00:17:46,270
this is this is the current

00:17:42,690 --> 00:17:49,510
communication we have for Ross transport

00:17:46,270 --> 00:17:51,730
layer and even if the connection is

00:17:49,510 --> 00:17:53,980
system inside you're gonna have to use

00:17:51,730 --> 00:17:56,710
tcp/ip socket anyway

00:17:53,980 --> 00:18:00,450
so there is no way you can do but with

00:17:56,710 --> 00:18:02,890
our fix you don't need to do that

00:18:00,450 --> 00:18:05,500
everything is done using an instrument

00:18:02,890 --> 00:18:07,990
socket in the kernel we don't go down to

00:18:05,500 --> 00:18:11,050
the IP layer so the socket layer is the

00:18:07,990 --> 00:18:18,610
API is really good affinity you know for

00:18:11,050 --> 00:18:21,850
a unix time and socket or tcp rose okay

00:18:18,610 --> 00:18:24,220
this is what we get improvement as a

00:18:21,850 --> 00:18:26,410
result for the application that's a this

00:18:24,220 --> 00:18:29,080
is a hello world benchmark and the

00:18:26,410 --> 00:18:32,260
result comes up like a full sky like

00:18:29,080 --> 00:18:34,930
eight percent improved physical latency

00:18:32,260 --> 00:18:37,390
and high key is twenty twenty four

00:18:34,930 --> 00:18:41,050
percent improved that's a good number

00:18:37,390 --> 00:18:43,540
and you again you don't have to change

00:18:41,050 --> 00:18:45,190
any single line of code for the

00:18:43,540 --> 00:18:47,950
application all you have to do is

00:18:45,190 --> 00:18:49,960
rebuild the Rosco and put it into your

00:18:47,950 --> 00:18:51,850
you know like into your system and

00:18:49,960 --> 00:18:53,950
reboot that's that's all you have to do

00:18:51,850 --> 00:18:55,830
you don't need to know anything about

00:18:53,950 --> 00:19:02,500
that

00:18:55,830 --> 00:19:06,670
and the source code is ready it's a it's

00:19:02,500 --> 00:19:10,000
kinetic data and we I already made a

00:19:06,670 --> 00:19:12,760
poor request for the main line and we

00:19:10,000 --> 00:19:15,940
understand the current code the increase

00:19:12,760 --> 00:19:18,550
unnecessary changes of course the final

00:19:15,940 --> 00:19:21,910
commit is there is no conflict to the

00:19:18,550 --> 00:19:23,680
main line but there's a we can see the

00:19:21,910 --> 00:19:28,090
some difference between the get

00:19:23,680 --> 00:19:30,370
difference so but we understand that but

00:19:28,090 --> 00:19:33,490
we first really like we like to know if

00:19:30,370 --> 00:19:36,070
anyone is interested in this fix so if

00:19:33,490 --> 00:19:38,170
any request comes up to us we are

00:19:36,070 --> 00:19:42,130
willing to adjust call to the main line

00:19:38,170 --> 00:19:44,650
of course so if you are you know like

00:19:42,130 --> 00:19:48,090
interested please make sure give us the

00:19:44,650 --> 00:19:48,090
stars on the key to half

00:19:50,460 --> 00:19:55,870
okay from now let me explain let me

00:19:53,680 --> 00:19:58,990
introduce some patties which we use for

00:19:55,870 --> 00:20:01,120
eyeball yeah they they were you know so

00:19:58,990 --> 00:20:02,920
useful first it's dark tile with

00:20:01,120 --> 00:20:08,890
rossbach sometimes you know we use rose

00:20:02,920 --> 00:20:12,480
bug for the teabag right and but rosebud

00:20:08,890 --> 00:20:16,750
itself sometimes store a CPU and that

00:20:12,480 --> 00:20:19,000
that causes us by K we cannot you know

00:20:16,750 --> 00:20:21,400
reproduce the issue again so that's a

00:20:19,000 --> 00:20:21,880
huge pain for us for the bug so we don't

00:20:21,400 --> 00:20:23,680
like that

00:20:21,880 --> 00:20:26,410
so with this part you will use direct

00:20:23,680 --> 00:20:29,590
i/o with that CPU CPU you know like

00:20:26,410 --> 00:20:33,970
power so it's useful for for smo

00:20:29,590 --> 00:20:36,670
debugging and eople this is a really

00:20:33,970 --> 00:20:40,960
good patch on the you know it's open

00:20:36,670 --> 00:20:43,630
source and for the latest kinetic it's

00:20:40,960 --> 00:20:46,020
already merged in so but this is really

00:20:43,630 --> 00:20:47,860
good you know like a poor system code is

00:20:46,020 --> 00:20:49,930
not good enough

00:20:47,860 --> 00:20:53,680
for if you are dealing with a lot of

00:20:49,930 --> 00:20:56,050
file descriptors because you need to

00:20:53,680 --> 00:20:58,000
check if the event is ready or not to

00:20:56,050 --> 00:20:59,770
scan the file descriptor on the user

00:20:58,000 --> 00:21:03,490
space it's a huge fan photo application

00:20:59,770 --> 00:21:05,860
but if we use Ipoh everything is done in

00:21:03,490 --> 00:21:12,090
the kernel so you just check the event

00:21:05,860 --> 00:21:15,700
and you can process whatever you do and

00:21:12,090 --> 00:21:18,630
polling frequency rose nose makes a lot

00:21:15,700 --> 00:21:21,790
of threads inside our coil library and

00:21:18,630 --> 00:21:24,210
there there are main threats and paul

00:21:21,790 --> 00:21:30,640
manager and axiom or OPC manager and

00:21:24,210 --> 00:21:35,910
Ross out threat and that that's gonna

00:21:30,640 --> 00:21:38,770
stress your platform so we did we make

00:21:35,910 --> 00:21:41,140
tunable like an environment of re to you

00:21:38,770 --> 00:21:43,960
know set the polling frequency for so

00:21:41,140 --> 00:21:46,600
you can set the timeout timeout for each

00:21:43,960 --> 00:21:50,830
processes I mean the Ross knows and they

00:21:46,600 --> 00:21:54,430
we have our own logging system so we

00:21:50,830 --> 00:21:57,090
don't make any Ross out stress nothing

00:21:54,430 --> 00:21:57,090
for this

00:21:57,630 --> 00:22:04,780
okay so finally for us to you know there

00:22:02,230 --> 00:22:10,150
they have been talking about rosters

00:22:04,780 --> 00:22:13,030
like a DDS on yesterday and we are

00:22:10,150 --> 00:22:16,110
working on roster DDS implementation

00:22:13,030 --> 00:22:18,070
layer so we can you can create our own

00:22:16,110 --> 00:22:18,700
implementation that's gonna be much

00:22:18,070 --> 00:22:21,220
faster

00:22:18,700 --> 00:22:23,500
you know specified for embedded system

00:22:21,220 --> 00:22:26,080
and optimized and it's under

00:22:23,500 --> 00:22:29,410
consideration but we are working on that

00:22:26,080 --> 00:22:36,100
and we and we hope we can you know

00:22:29,410 --> 00:22:37,150
expose this fix maybe for future okay

00:22:36,100 --> 00:22:38,800
again

00:22:37,150 --> 00:22:41,260
thank you very much for your cooperation

00:22:38,800 --> 00:22:43,630
and everyone in this room and everyone

00:22:41,260 --> 00:22:45,580
involved in this mission and we really

00:22:43,630 --> 00:22:48,360
appreciate for your support that's why

00:22:45,580 --> 00:22:56,950
we made either thank you very much

00:22:48,360 --> 00:22:59,519
[Applause]

00:22:56,950 --> 00:23:05,460
thank you has anyone ever some questions

00:22:59,519 --> 00:23:09,000
sorry got question can you tell me which

00:23:05,460 --> 00:23:14,610
process I used for motion control

00:23:09,000 --> 00:23:14,610
that's comes from you

00:23:17,440 --> 00:23:30,820
thank you very much it's good to know

00:23:19,750 --> 00:23:32,919
I'm from Berlin Isis so I was curious

00:23:30,820 --> 00:23:36,970
you kind of went quickly over the patch

00:23:32,919 --> 00:23:38,440
to Ross bag direct right is that gonna

00:23:36,970 --> 00:23:41,019
be open Sorcerer's there a poor crust

00:23:38,440 --> 00:23:43,120
for that okay it's out there

00:23:41,019 --> 00:23:46,059
we found that touch because Ross bug

00:23:43,120 --> 00:23:47,350
story is our CPU so oh you mean okay I

00:23:46,059 --> 00:23:49,779
thought you had changes to you mean you

00:23:47,350 --> 00:23:50,740
just found the package is that unit no

00:23:49,779 --> 00:23:54,279
not package of pets

00:23:50,740 --> 00:23:56,429
oh we bug for days oh I thought you

00:23:54,279 --> 00:23:56,429
later

00:24:03,050 --> 00:24:07,520
okay my question is not about technique

00:24:05,510 --> 00:24:10,730
is about business

00:24:07,520 --> 00:24:14,540
what kind language the this I po can

00:24:10,730 --> 00:24:18,650
recognize and is how much you talking

00:24:14,540 --> 00:24:21,230
about online order the the language is

00:24:18,650 --> 00:24:23,810
language Japanese of course and we

00:24:21,230 --> 00:24:26,980
English and I miss there's a kind of

00:24:23,810 --> 00:24:30,590
question sorry can you repeat that

00:24:26,980 --> 00:24:36,290
okay can't recognize English yeah okay

00:24:30,590 --> 00:24:41,260
yeah how much the price the price the

00:24:36,290 --> 00:24:46,000
price I guess for us I think almost

00:24:41,260 --> 00:24:46,000
$2,000 wider yeah

00:24:47,110 --> 00:24:53,270
any other questions okay thank you thank

00:24:52,520 --> 00:24:55,359
you very much

00:24:53,270 --> 00:24:55,359

YouTube URL: https://www.youtube.com/watch?v=5RkiJ-GmpLw


