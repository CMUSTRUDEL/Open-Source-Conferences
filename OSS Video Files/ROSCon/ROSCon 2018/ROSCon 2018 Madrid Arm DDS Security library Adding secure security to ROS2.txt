Title: ROSCon 2018 Madrid Arm DDS Security library Adding secure security to ROS2
Publication date: 2021-03-28
Playlist: ROSCon 2018
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2018 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,030 --> 00:00:06,089
well my emanuelly my name is Philip I

00:00:03,179 --> 00:00:06,899
work for armed in the open source of the

00:00:06,089 --> 00:00:09,300
group

00:00:06,899 --> 00:00:12,360
what specifically I'm part of this new

00:00:09,300 --> 00:00:13,799
team which used to be robotics but now

00:00:12,360 --> 00:00:16,289
we have a bit more focus on the

00:00:13,799 --> 00:00:18,990
automotive area so today's presentation

00:00:16,289 --> 00:00:22,650
is going to be about a new project which

00:00:18,990 --> 00:00:25,680
is called the bit ideas sack and the

00:00:22,650 --> 00:00:27,090
goal is to move all the security

00:00:25,680 --> 00:00:28,920
implementations so everything you have

00:00:27,090 --> 00:00:32,610
seen on the previous presentation we

00:00:28,920 --> 00:00:35,370
want to move all that implementation

00:00:32,610 --> 00:00:39,809
into justice zone which I'm going to

00:00:35,370 --> 00:00:42,480
explain what it is so I'm going to start

00:00:39,809 --> 00:00:44,969
with some some key concepts between DDS

00:00:42,480 --> 00:00:46,379
and also on its own I'm going to

00:00:44,969 --> 00:00:49,110
probably go quite quickly on the DES

00:00:46,379 --> 00:00:50,280
because it was explained already and

00:00:49,110 --> 00:00:51,809
then I'm going to talk about the project

00:00:50,280 --> 00:00:56,750
itself what's the current state and how

00:00:51,809 --> 00:00:59,430
we are trying to implement it right so I

00:00:56,750 --> 00:01:01,079
measure that everyone knows about this

00:00:59,430 --> 00:01:02,879
type of diagram but it's just for

00:01:01,079 --> 00:01:05,189
completeness what we are trying to

00:01:02,879 --> 00:01:07,770
accomplish here is to protect the

00:01:05,189 --> 00:01:12,299
communication between the nodes within s

00:01:07,770 --> 00:01:17,400
domain so our working is more specific

00:01:12,299 --> 00:01:18,689
to rush to case again is implemented our

00:01:17,400 --> 00:01:22,080
previous presentation I've explained

00:01:18,689 --> 00:01:25,530
this but just to give you an idea the

00:01:22,080 --> 00:01:27,150
DDS specification is quite actually a

00:01:25,530 --> 00:01:29,720
lot there is a lot of specification

00:01:27,150 --> 00:01:32,430
there's a collection of specifications

00:01:29,720 --> 00:01:35,820
the main ones that have a relationship

00:01:32,430 --> 00:01:39,720
with the work doing is the DDS IR TPS

00:01:35,820 --> 00:01:45,899
which talk which talks about the low

00:01:39,720 --> 00:01:48,960
level how the frames are packed and how

00:01:45,899 --> 00:01:52,079
its transmitted on the while then the

00:01:48,960 --> 00:01:55,770
DDS high-level specification which gives

00:01:52,079 --> 00:01:58,350
the information how all the data is

00:01:55,770 --> 00:02:00,719
communicated and finally the main

00:01:58,350 --> 00:02:02,850
specification for us is the DDS security

00:02:00,719 --> 00:02:08,520
and that gives all the details about the

00:02:02,850 --> 00:02:12,060
model and click interface so the

00:02:08,520 --> 00:02:15,090
there are a few things that the testicle

00:02:12,060 --> 00:02:16,860
tries to protect so very quickly going

00:02:15,090 --> 00:02:20,340
through them confidentiality which is

00:02:16,860 --> 00:02:22,350
about make sure that two nodes can

00:02:20,340 --> 00:02:26,070
communicate and one can know what is

00:02:22,350 --> 00:02:27,750
going under that transmission integrity

00:02:26,070 --> 00:02:31,050
so you know that's what a receiver is

00:02:27,750 --> 00:02:34,950
not corrupted authentication where you

00:02:31,050 --> 00:02:38,130
can have a node to say who it is and you

00:02:34,950 --> 00:02:39,720
can trust that authorization so after

00:02:38,130 --> 00:02:41,760
you have the moves you can say which

00:02:39,720 --> 00:02:45,020
node is allowed to do what in terms of

00:02:41,760 --> 00:02:48,930
publishing data or receive narrator

00:02:45,020 --> 00:02:50,610
message Dayton or G so again it deals

00:02:48,930 --> 00:02:52,140
with authentication so you know why it's

00:02:50,610 --> 00:02:53,940
coming from the information that you are

00:02:52,140 --> 00:02:57,030
receiving and file it in on the

00:02:53,940 --> 00:03:00,810
repudiation of data which means after

00:02:57,030 --> 00:03:03,570
the node has sent that information you

00:03:00,810 --> 00:03:06,090
know that it cannot lie about it it has

00:03:03,570 --> 00:03:11,370
sent it you cannot go back and say it

00:03:06,090 --> 00:03:13,500
hasn't so the DDS security Association

00:03:11,370 --> 00:03:16,200
has quite a nice chapter about the

00:03:13,500 --> 00:03:19,260
threat model so they talk about these

00:03:16,200 --> 00:03:21,270
four items and there are very nice

00:03:19,260 --> 00:03:22,890
description diagrams and how it works so

00:03:21,270 --> 00:03:28,650
this is just one for reference if you

00:03:22,890 --> 00:03:31,770
want to see it in more details so going

00:03:28,650 --> 00:03:34,610
down into the implementation layer there

00:03:31,770 --> 00:03:38,010
are five plugins that's how it's

00:03:34,610 --> 00:03:40,530
approached in the specification for our

00:03:38,010 --> 00:03:42,540
work we have been mainly focusing on

00:03:40,530 --> 00:03:44,820
these three ones which is authentication

00:03:42,540 --> 00:03:46,350
the cryptography and the access control

00:03:44,820 --> 00:03:52,110
though access control we haven't yet

00:03:46,350 --> 00:03:55,950
started implementation it but just a few

00:03:52,110 --> 00:03:58,830
more details the details specification

00:03:55,950 --> 00:04:00,840
actually gives you it imports how the

00:03:58,830 --> 00:04:03,570
communication needs to be which always

00:04:00,840 --> 00:04:06,840
needs to be used but it has some options

00:04:03,570 --> 00:04:09,220
at some extent actually for us we have

00:04:06,840 --> 00:04:11,020
been approaching terrorism

00:04:09,220 --> 00:04:13,330
two items so all the a symmetric key

00:04:11,020 --> 00:04:15,640
cryptography is just used for discovery

00:04:13,330 --> 00:04:20,980
of education and the creation of the

00:04:15,640 --> 00:04:23,560
shared secret and the other information

00:04:20,980 --> 00:04:26,740
is that the use of ciphers the H mark or

00:04:23,560 --> 00:04:28,840
digital signatures it's it acts on a top

00:04:26,740 --> 00:04:33,880
level again how it was explained in the

00:04:28,840 --> 00:04:36,520
previous presentation okay that was the

00:04:33,880 --> 00:04:39,400
quick overview of the DDS nodes and

00:04:36,520 --> 00:04:42,820
security some going through the arms

00:04:39,400 --> 00:04:46,990
just a song I don't know how many people

00:04:42,820 --> 00:04:51,070
know about it just artists which is fine

00:04:46,990 --> 00:04:53,290
because I got diagrams about it they

00:04:51,070 --> 00:04:56,110
won't phrase the species that stresses

00:04:53,290 --> 00:04:59,020
on is a built in technology inside the

00:04:56,110 --> 00:05:01,570
CPU which pretty much creates to veto

00:04:59,020 --> 00:05:03,100
environments and you can have two

00:05:01,570 --> 00:05:06,160
completely independent softest a

00:05:03,100 --> 00:05:08,740
grounding it it's it's quad channel in

00:05:06,160 --> 00:05:11,020
terms of which are these two softest tag

00:05:08,740 --> 00:05:13,000
but conceptually you always consider

00:05:11,020 --> 00:05:14,710
that one of them is secure and other

00:05:13,000 --> 00:05:18,190
ones non secure but it's just a concept

00:05:14,710 --> 00:05:22,660
it's pretty much just two words exactly

00:05:18,190 --> 00:05:25,150
apart the main the main way that that is

00:05:22,660 --> 00:05:27,220
accomplished by the physical traces its

00:05:25,150 --> 00:05:30,300
kind of split you can say which which

00:05:27,220 --> 00:05:35,919
binds of the physical address is

00:05:30,300 --> 00:05:37,330
attached one of the two words and the

00:05:35,919 --> 00:05:39,040
security non-secure is complete of

00:05:37,330 --> 00:05:41,140
tomorrow in terms of the previous

00:05:39,040 --> 00:05:42,630
privileged levels which I'm going to

00:05:41,140 --> 00:05:50,260
explain in a minute

00:05:42,630 --> 00:05:52,419
right so in terms of trust its security

00:05:50,260 --> 00:05:54,760
it's all about who will trust on the

00:05:52,419 --> 00:05:57,640
system right so it used to be as simple

00:05:54,760 --> 00:05:58,419
as this diagram so you have many reasons

00:05:57,640 --> 00:06:00,910
to have a one ass

00:05:58,419 --> 00:06:03,070
but one of them it's about the isolation

00:06:00,910 --> 00:06:05,440
you have multiple applications running

00:06:03,070 --> 00:06:07,180
on top of the bridge system and you know

00:06:05,440 --> 00:06:09,250
that between two applications are not

00:06:07,180 --> 00:06:11,080
going to clash because

00:06:09,250 --> 00:06:14,170
the operates this is doing the isolation

00:06:11,080 --> 00:06:16,510
so you in this part of you you kind of

00:06:14,170 --> 00:06:19,240
you trust on the west wind that level of

00:06:16,510 --> 00:06:21,100
isolation more recently we have

00:06:19,240 --> 00:06:24,760
something more like this where for

00:06:21,100 --> 00:06:27,280
example if you are renting a server on

00:06:24,760 --> 00:06:29,200
the cloud you might don't trust run your

00:06:27,280 --> 00:06:30,730
application together with another

00:06:29,200 --> 00:06:32,770
application of a different company even

00:06:30,730 --> 00:06:35,320
though you might trust onto us

00:06:32,770 --> 00:06:37,290
so more recently we have the hypervisor

00:06:35,320 --> 00:06:40,810
which it does another layer of

00:06:37,290 --> 00:06:43,390
hypervisor Latian so you can have your

00:06:40,810 --> 00:06:45,040
own OS and your own application but you

00:06:43,390 --> 00:06:49,240
still need to trust this hypervisor is

00:06:45,040 --> 00:06:51,790
doing the desolation now you could do

00:06:49,240 --> 00:06:54,460
some secret has aspect using this

00:06:51,790 --> 00:06:57,490
topology but that's where we get to the

00:06:54,460 --> 00:07:03,460
trust song so I'm suppose you have

00:06:57,490 --> 00:07:04,870
another layer and so the means execution

00:07:03,460 --> 00:07:09,280
level it's just a professional happened

00:07:04,870 --> 00:07:11,460
and ok so during the boot sequence what

00:07:09,280 --> 00:07:13,660
happens is that you always starts the

00:07:11,460 --> 00:07:15,780
domestication says you always starts on

00:07:13,660 --> 00:07:20,140
the highest level of this extreme level

00:07:15,780 --> 00:07:22,750
level so the eo3 is always secure where

00:07:20,140 --> 00:07:27,010
all the other execution levels haven't

00:07:22,750 --> 00:07:29,080
secure and non-secure besides the else

00:07:27,010 --> 00:07:31,570
who is not showing the secure side but

00:07:29,080 --> 00:07:33,970
that was added just a few months ago so

00:07:31,570 --> 00:07:37,210
there is a also secure now actually

00:07:33,970 --> 00:07:39,669
which are just released as a extension

00:07:37,210 --> 00:07:41,350
to the CPUs so during the boot sequence

00:07:39,669 --> 00:07:43,540
usually you are going to boot into the

00:07:41,350 --> 00:07:46,570
l3 mode and that's considered a secure

00:07:43,540 --> 00:07:49,150
mode so you usually I would have like a

00:07:46,570 --> 00:07:52,570
roll into the system that ROM is going

00:07:49,150 --> 00:07:54,430
to to load the the remaini the further

00:07:52,570 --> 00:07:56,620
image so that's going to be for some

00:07:54,430 --> 00:07:58,270
Tetris as well so it loads it verifies

00:07:56,620 --> 00:08:01,060
that it's really a file image it has

00:07:58,270 --> 00:08:04,510
internal keys to make sure it's a valid

00:08:01,060 --> 00:08:08,260
and no that is the cheap vendor that

00:08:04,510 --> 00:08:10,240
signed that that image and then it can

00:08:08,260 --> 00:08:12,730
load the just applications on top of

00:08:10,240 --> 00:08:14,270
that cause it has done that then it

00:08:12,730 --> 00:08:16,730
loads the non secure world

00:08:14,270 --> 00:08:19,700
can be just like Linux or Windows and

00:08:16,730 --> 00:08:22,670
they can now coexist in parallel every

00:08:19,700 --> 00:08:25,280
time you want to do to invoke service on

00:08:22,670 --> 00:08:28,490
the dresser application you need to go

00:08:25,280 --> 00:08:30,860
all the way down to your three so like

00:08:28,490 --> 00:08:33,530
using system calls etc so you keep

00:08:30,860 --> 00:08:35,090
escalating the exception levels and you

00:08:33,530 --> 00:08:36,950
move to the trusted application you

00:08:35,090 --> 00:08:38,240
execute what needs to execute and you go

00:08:36,950 --> 00:08:44,900
back to where you came from

00:08:38,240 --> 00:08:46,970
that's how it gets isolated so for us

00:08:44,900 --> 00:08:48,950
our environment you have if you have

00:08:46,970 --> 00:08:52,520
notes it hits the names that change so

00:08:48,950 --> 00:08:56,390
the l3 we have trusted from 1a which is

00:08:52,520 --> 00:08:58,960
the ceramic form of application suppose

00:08:56,390 --> 00:09:01,640
and we are using the Optio s which is a

00:08:58,960 --> 00:09:06,470
one of the implementations of trusted

00:09:01,640 --> 00:09:09,830
glass it's open source so very quickly

00:09:06,470 --> 00:09:13,100
the deleted s AG project is trying to

00:09:09,830 --> 00:09:14,690
move everything from the the secure the

00:09:13,100 --> 00:09:17,690
non secure side into the secure all the

00:09:14,690 --> 00:09:21,410
other secure operations and that means

00:09:17,690 --> 00:09:23,450
all this certification certification or

00:09:21,410 --> 00:09:25,940
the key generation and all the security

00:09:23,450 --> 00:09:28,580
operations the main goal is to just

00:09:25,940 --> 00:09:31,190
limit the source s attack more

00:09:28,580 --> 00:09:33,110
specifically we want all the keys to be

00:09:31,190 --> 00:09:37,460
only the securing there's no wait for

00:09:33,110 --> 00:09:40,420
them to be leaked so this is a typical

00:09:37,460 --> 00:09:43,640
implementation of IDs we are using

00:09:40,420 --> 00:09:47,270
faster GPS our us our environment for

00:09:43,640 --> 00:09:49,700
testing and usually they use another

00:09:47,270 --> 00:09:51,170
library like the opposite cell and all

00:09:49,700 --> 00:09:56,210
the certificates all the configuration

00:09:51,170 --> 00:09:59,450
are in the non secure world our first

00:09:56,210 --> 00:10:02,090
proof of concept has been something like

00:09:59,450 --> 00:10:04,160
this so we just remove the opposite cell

00:10:02,090 --> 00:10:06,920
layer and we created our own API and

00:10:04,160 --> 00:10:09,200
there is a back-end which then invokes

00:10:06,920 --> 00:10:12,860
this trusted application and everything

00:10:09,200 --> 00:10:15,470
is on the top right side all the

00:10:12,860 --> 00:10:17,210
execution happens that ta that was the

00:10:15,470 --> 00:10:18,680
initial proof of concept so now it's

00:10:17,210 --> 00:10:24,560
becoming a proto library so it's outside

00:10:18,680 --> 00:10:27,640
the DDS implementation and that's how we

00:10:24,560 --> 00:10:27,640
are trying to do it right now

00:10:28,570 --> 00:10:34,040
just a minute morning

00:10:31,850 --> 00:10:36,980
the next step is we still have problems

00:10:34,040 --> 00:10:39,020
with this topology where the green

00:10:36,980 --> 00:10:40,850
arrows went out they might be very

00:10:39,020 --> 00:10:42,230
specific to a given implementation so

00:10:40,850 --> 00:10:44,240
what we are looking to he is to move

00:10:42,230 --> 00:10:45,830
even the plugins inside this library so

00:10:44,240 --> 00:10:48,130
what we can do is just instantiate the

00:10:45,830 --> 00:10:51,230
plugins itself in the library and just

00:10:48,130 --> 00:10:56,900
attach to the DDS Accord to the detail

00:10:51,230 --> 00:10:58,610
specification I'm just going to skip as

00:10:56,900 --> 00:11:00,650
well if that's the current work try to

00:10:58,610 --> 00:11:04,720
move now things from the from the

00:11:00,650 --> 00:11:04,720
proof-of-concept into the pew library

00:11:06,640 --> 00:11:10,670
main challenge so the latest might be

00:11:09,500 --> 00:11:14,030
one of the main challenges we are going

00:11:10,670 --> 00:11:15,770
to face we are trying to it's almost a

00:11:14,030 --> 00:11:18,520
trade off so that's something we need to

00:11:15,770 --> 00:11:20,990
make sure it's going to be worth doing

00:11:18,520 --> 00:11:23,150
we still have a problem I haven't built

00:11:20,990 --> 00:11:26,570
on the non secure side might allow

00:11:23,150 --> 00:11:29,330
things to say to use the secure content

00:11:26,570 --> 00:11:35,660
but at least it cannot leak the keys

00:11:29,330 --> 00:11:36,680
that's that's the me idea so this is

00:11:35,660 --> 00:11:38,840
going to be our open source we are

00:11:36,680 --> 00:11:40,370
trying to push this to github very soon

00:11:38,840 --> 00:11:43,400
as soon as we do we have it available

00:11:40,370 --> 00:11:48,800
it's going to be maybe a PSD project

00:11:43,400 --> 00:11:51,170
written since it was plan finest life I

00:11:48,800 --> 00:11:53,930
promise it well the reason we are doing

00:11:51,170 --> 00:11:55,910
this is because we are focusing maybe on

00:11:53,930 --> 00:11:57,740
the automotive area and as we have seen

00:11:55,910 --> 00:12:01,840
today there's quite a lot of automotive

00:11:57,740 --> 00:12:05,020
projects used in DDS and a strata -

00:12:01,840 --> 00:12:05,020
that's it

00:12:09,890 --> 00:12:13,440
did you have an idea of that we won't

00:12:12,180 --> 00:12:15,360
have time for questions sorry but did

00:12:13,440 --> 00:12:19,560
you have an idea of the timeframe in

00:12:15,360 --> 00:12:21,420
which this will be available as soon as

00:12:19,560 --> 00:12:23,690
possible but we have the hope that's

00:12:21,420 --> 00:12:27,020
going to be doing this next quarter

00:12:23,690 --> 00:12:27,020

YouTube URL: https://www.youtube.com/watch?v=IrtvJTHD3Eg


