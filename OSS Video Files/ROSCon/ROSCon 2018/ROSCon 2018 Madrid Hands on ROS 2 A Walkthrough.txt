Title: ROSCon 2018 Madrid Hands on ROS 2 A Walkthrough
Publication date: 2021-03-28
Playlist: ROSCon 2018
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2018 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,030 --> 00:00:06,750
all right hello everybody I'm customer

00:00:03,840 --> 00:00:08,790
Bosh with me yes Mikkel we're going to

00:00:06,750 --> 00:00:10,679
talk about Ross shoe and we do it in the

00:00:08,790 --> 00:00:13,230
most insanely way because we don't do

00:00:10,679 --> 00:00:16,020
live demos now we figured out we're

00:00:13,230 --> 00:00:18,480
gonna do this on 640 x 480 resolution

00:00:16,020 --> 00:00:22,170
because like somehow the HDMI doesn't

00:00:18,480 --> 00:00:23,910
work on Mac you know plus we have like

00:00:22,170 --> 00:00:25,949
500 people here in the audience and a

00:00:23,910 --> 00:00:29,029
thousand times the live stream open so

00:00:25,949 --> 00:00:29,029
looking forward to

00:00:29,970 --> 00:00:36,120
we do have slides and we have stop

00:00:33,690 --> 00:00:38,520
repaired for you to actually do that all

00:00:36,120 --> 00:00:40,559
at home by yourself what you're going to

00:00:38,520 --> 00:00:42,300
do is like you have you need a rush to

00:00:40,559 --> 00:00:44,520
installation you find the installation

00:00:42,300 --> 00:00:46,770
instructions the under link plus a

00:00:44,520 --> 00:00:48,450
little bit of like an overlay workspace

00:00:46,770 --> 00:00:50,760
and you you find code which we're going

00:00:48,450 --> 00:00:52,860
to present today under that link it's

00:00:50,760 --> 00:00:56,850
not an official rush to maintain code so

00:00:52,860 --> 00:01:00,180
it's private on my you can build it and

00:00:56,850 --> 00:01:05,250
then we can follow all the steps alright

00:01:00,180 --> 00:01:07,530
so let's see it's that the style

00:01:05,250 --> 00:01:09,299
readable somewhat I know we're gonna

00:01:07,530 --> 00:01:10,560
show a bit of code and like quite some

00:01:09,299 --> 00:01:13,430
time and so I hope this is gonna be

00:01:10,560 --> 00:01:15,750
readable on all the money to us as well

00:01:13,430 --> 00:01:17,250
but so generally what you want to do if

00:01:15,750 --> 00:01:18,630
you start with Ross to you want to do

00:01:17,250 --> 00:01:20,280
you want to create your own first

00:01:18,630 --> 00:01:23,580
package right instead of questions like

00:01:20,280 --> 00:01:25,920
how do you do that and what you're gonna

00:01:23,580 --> 00:01:27,810
do is like we have we have commands what

00:01:25,920 --> 00:01:30,180
is in place basically everything starts

00:01:27,810 --> 00:01:32,579
with Ross to denaburg and then you can

00:01:30,180 --> 00:01:35,310
execute your commands in this case we

00:01:32,579 --> 00:01:37,439
want to create a package the video Ross

00:01:35,310 --> 00:01:38,970
to package create and it gives you

00:01:37,439 --> 00:01:41,340
another sorry for the format here but

00:01:38,970 --> 00:01:43,770
like it gives you a bunch of stuff you

00:01:41,340 --> 00:01:46,320
can do so you can get your dependencies

00:01:43,770 --> 00:01:50,130
and these kind of things you want to do

00:01:46,320 --> 00:01:51,450
all of this I prepare that basically

00:01:50,130 --> 00:01:53,700
what we're going to do we create a first

00:01:51,450 --> 00:01:55,890
package we give it some dependencies

00:01:53,700 --> 00:01:58,409
like our CLS bb-because can even develop

00:01:55,890 --> 00:02:00,180
I know it's in C++ then we give it a

00:01:58,409 --> 00:02:02,790
note name my first know what a library

00:02:00,180 --> 00:02:06,300
name and that's about it alright so a

00:02:02,790 --> 00:02:11,120
bunch of stuff is happening if we open

00:02:06,300 --> 00:02:14,100
up the best editor in the world we see

00:02:11,120 --> 00:02:15,720
we see that we gonna have now our first

00:02:14,100 --> 00:02:18,150
package right so we have some includes

00:02:15,720 --> 00:02:19,650
we have some source files and then if we

00:02:18,150 --> 00:02:22,500
look at the the Simlish that's the

00:02:19,650 --> 00:02:25,319
default email list we have 4 rows to so

00:02:22,500 --> 00:02:29,310
basically we default to c99 standard to

00:02:25,319 --> 00:02:31,050
c++ 14 we find all our dependencies in

00:02:29,310 --> 00:02:34,739
this case like the rcsb key what we said

00:02:31,050 --> 00:02:36,090
we have our libraries we have some

00:02:34,739 --> 00:02:39,380
definitions to make that actually ought

00:02:36,090 --> 00:02:41,640
to compile on a Microsoft product and

00:02:39,380 --> 00:02:42,660
exactly so the executable the other

00:02:41,640 --> 00:02:46,200
thing I want to highlight here is that

00:02:42,660 --> 00:02:48,690
we have by default we have some linters

00:02:46,200 --> 00:02:50,489
and coding starts we expect for us to so

00:02:48,690 --> 00:02:52,980
you can test your package against our

00:02:50,489 --> 00:02:54,780
coding styles right so by default

00:02:52,980 --> 00:02:55,860
obviously we don't generate any G tests

00:02:54,780 --> 00:03:06,540
and these kind of things you can do this

00:02:55,860 --> 00:03:08,820
by yourself and so we now compile all of

00:03:06,540 --> 00:03:10,860
this we do court on build and we give it

00:03:08,820 --> 00:03:14,160
the package to select for example like

00:03:10,860 --> 00:03:17,459
my first package right so we do all of

00:03:14,160 --> 00:03:23,150
this we compile this and if we now do

00:03:17,459 --> 00:03:23,150
roster run we can actually execute this

00:03:23,380 --> 00:03:27,390
[Music]

00:03:25,850 --> 00:03:29,670
main note

00:03:27,390 --> 00:03:33,690
so actually what we say is like my first

00:03:29,670 --> 00:03:38,010
package right so let's say we have the

00:03:33,690 --> 00:03:38,820
year format out of place some intonation

00:03:38,010 --> 00:03:42,470
which is wrong

00:03:38,820 --> 00:03:42,470
you can test all of this

00:03:43,140 --> 00:03:47,739
we say a contest and we see okay there's

00:03:45,910 --> 00:03:49,780
a complete battery of tests running

00:03:47,739 --> 00:03:51,340
right now but instead like essentially

00:03:49,780 --> 00:03:55,470
what's happening now you say I can cross

00:03:51,340 --> 00:03:55,470
the fight belt and what you see is like

00:03:58,739 --> 00:04:03,310
so it says okay something is wrong with

00:04:00,910 --> 00:04:04,599
the intonation right so that's cool so

00:04:03,310 --> 00:04:07,540
now we have our first nodal force

00:04:04,599 --> 00:04:09,310
packages we can work with it but let's

00:04:07,540 --> 00:04:12,250
switch gears a little bit so what we

00:04:09,310 --> 00:04:13,959
actually so what we actually want to do

00:04:12,250 --> 00:04:15,130
now we want to create our own robot so

00:04:13,959 --> 00:04:16,120
we have the robot application we're

00:04:15,130 --> 00:04:19,049
going to create a robot for the

00:04:16,120 --> 00:04:22,479
conference here so we name it con tomate

00:04:19,049 --> 00:04:24,639
so typical thing what you need for that

00:04:22,479 --> 00:04:26,260
we created a bunch of packages and this

00:04:24,639 --> 00:04:28,690
is now all on that github repo we showed

00:04:26,260 --> 00:04:30,370
at the beginning so essentially like we

00:04:28,690 --> 00:04:32,169
created a bunch of packages such as like

00:04:30,370 --> 00:04:33,040
bring up you know a typical package

00:04:32,169 --> 00:04:34,750
where you have your launch codes

00:04:33,040 --> 00:04:36,130
configurations that description where

00:04:34,750 --> 00:04:37,840
you you are the artists in there a

00:04:36,130 --> 00:04:40,210
driver which is like the algorithmic

00:04:37,840 --> 00:04:42,240
part for moving your your robot security

00:04:40,210 --> 00:04:45,460
McCabe's gonna talk about this later on

00:04:42,240 --> 00:04:48,520
sends those into it right so the way

00:04:45,460 --> 00:04:52,750
we're gonna launch that is we have a

00:04:48,520 --> 00:04:54,610
launch plan and sort of course surprise

00:04:52,750 --> 00:04:57,130
here's like it's not an XML format

00:04:54,610 --> 00:04:59,289
anymore it's gonna be Python but

00:04:57,130 --> 00:05:00,850
essentially what we do is the same thing

00:04:59,289 --> 00:05:02,590
so we launch we get all you ready up

00:05:00,850 --> 00:05:04,990
from our workspace then we get the

00:05:02,590 --> 00:05:06,400
robots a publisher the driver a twist

00:05:04,990 --> 00:05:08,770
publisher here which is essentially

00:05:06,400 --> 00:05:12,550
emulating your joystick moving around

00:05:08,770 --> 00:05:15,340
and we have sensors laser and safestone

00:05:12,550 --> 00:05:16,720
publish with some markers okay if you

00:05:15,340 --> 00:05:17,500
want to know more about all of these

00:05:16,720 --> 00:05:19,530
launch things

00:05:17,500 --> 00:05:23,889
there's talk coming up from william

00:05:19,530 --> 00:05:26,820
explaining a little bit so the way we're

00:05:23,889 --> 00:05:26,820
gonna launch this now

00:05:31,080 --> 00:05:39,930
we actually say so we launched this and

00:05:37,370 --> 00:05:41,699
again we see a case on some stars

00:05:39,930 --> 00:05:45,000
happening but now how do you actually

00:05:41,699 --> 00:05:47,550
introspect all of this is like we have a

00:05:45,000 --> 00:05:50,039
command here roast you know at least and

00:05:47,550 --> 00:05:51,870
we see hey there's our notes right and

00:05:50,039 --> 00:05:54,030
just for completeness I mean like most

00:05:51,870 --> 00:05:55,500
of you know that by now but there's no

00:05:54,030 --> 00:05:57,479
Rosco running anymore right I just

00:05:55,500 --> 00:05:58,770
launched up my my my roast to launch

00:05:57,479 --> 00:06:00,599
five and that's it and they are my notes

00:05:58,770 --> 00:06:02,610
so we have the large file we have the

00:06:00,599 --> 00:06:04,860
robots a publisher the driver the

00:06:02,610 --> 00:06:06,690
publisher and so on right the second

00:06:04,860 --> 00:06:08,460
thing we can do now for introspecting is

00:06:06,690 --> 00:06:11,840
we list all our topics if you give it a

00:06:08,460 --> 00:06:14,490
- t here in order to see all the types

00:06:11,840 --> 00:06:15,120
associates and so we have like okay our

00:06:14,490 --> 00:06:17,810
twist

00:06:15,120 --> 00:06:20,849
sorry man velocity which is that twist

00:06:17,810 --> 00:06:23,069
you know bunch of stuff like our safe

00:06:20,849 --> 00:06:24,719
zone for markers and it's gonna thanks

00:06:23,069 --> 00:06:30,150
so let's say you wanna see what's

00:06:24,719 --> 00:06:31,979
happening we can do command echo and we

00:06:30,150 --> 00:06:34,889
see ahead some things happening here

00:06:31,979 --> 00:06:36,479
right but the actual way of

00:06:34,889 --> 00:06:38,580
introspecting all of this is like we

00:06:36,479 --> 00:06:41,039
start obviously one of introspective

00:06:38,580 --> 00:06:46,770
usually and so for this we start obvious

00:06:41,039 --> 00:06:50,279
to that's what I expected so we have our

00:06:46,770 --> 00:06:52,259
nice conference robot right and here a

00:06:50,279 --> 00:06:54,779
big shout out to Cole who actually put

00:06:52,259 --> 00:06:56,159
me that together so we have to Madrid

00:06:54,779 --> 00:06:58,740
logo on our robot with the total

00:06:56,159 --> 00:07:01,340
operating here and a circle and a safe

00:06:58,740 --> 00:07:08,039
zone and we have this dangerous shark

00:07:01,340 --> 00:07:10,440
who's trying to you know things but now

00:07:08,039 --> 00:07:11,879
if we if you look at it we actually had

00:07:10,440 --> 00:07:13,680
like your laser scanning right but we

00:07:11,879 --> 00:07:16,169
don't like you can see that but there's

00:07:13,680 --> 00:07:18,990
no there's no laser scanner here and we

00:07:16,169 --> 00:07:20,879
see a pair haters like it's from zero

00:07:18,990 --> 00:07:25,889
points from zero messages and so like

00:07:20,879 --> 00:07:27,419
what's what's happening here this we

00:07:25,889 --> 00:07:29,460
actually what we did and you can look at

00:07:27,419 --> 00:07:31,879
in the code later but so we developed

00:07:29,460 --> 00:07:34,590
our laser driver as a lifecycle node and

00:07:31,879 --> 00:07:36,060
reasons for that for example you want to

00:07:34,590 --> 00:07:38,789
make sure that device drivers are

00:07:36,060 --> 00:07:39,969
generally like set up correctly and

00:07:38,789 --> 00:07:41,769
started correctly

00:07:39,969 --> 00:07:43,119
and then launch your algorithm on top of

00:07:41,769 --> 00:07:45,369
that right because you don't want to

00:07:43,119 --> 00:07:47,799
like you want to make sure that your

00:07:45,369 --> 00:07:50,349
algorithmic part only operates when all

00:07:47,799 --> 00:07:52,419
the device drivers are fully set up a

00:07:50,349 --> 00:07:54,879
second the second reason for lifecycle

00:07:52,419 --> 00:07:56,409
notes what device service is that maybe

00:07:54,879 --> 00:07:57,939
you wanted to shut them down or like

00:07:56,409 --> 00:08:01,299
deactivate and doing a run time to

00:07:57,939 --> 00:08:02,949
actually energy like save energy and so

00:08:01,299 --> 00:08:14,769
the way we can introspect these

00:08:02,949 --> 00:08:17,229
lifecycle notes now is and you see

00:08:14,769 --> 00:08:19,839
indeed I want our laser node is actually

00:08:17,229 --> 00:08:21,549
a life cycle not right now what we can

00:08:19,839 --> 00:08:29,049
do we can also just ask the state of

00:08:21,549 --> 00:08:31,299
that and we see it in a state

00:08:29,049 --> 00:08:33,789
unconfigured which makes sense because

00:08:31,299 --> 00:08:40,089
it's the default state now if you want

00:08:33,789 --> 00:08:42,189
to configure this we say Ross - life

00:08:40,089 --> 00:08:44,559
cycle except we configure our laser and

00:08:42,189 --> 00:08:46,509
we see in our on the right side you can

00:08:44,559 --> 00:08:48,699
see that the output is like a pair of

00:08:46,509 --> 00:08:50,079
lasers not configured we want to

00:08:48,699 --> 00:08:54,540
activate this we execute the same

00:08:50,079 --> 00:08:56,769
command and it's activated now let's see

00:08:54,540 --> 00:08:58,709
and we see already ok now all the

00:08:56,769 --> 00:09:02,439
messages were there and we have our

00:08:58,709 --> 00:09:04,899
robot set up right a second thing we

00:09:02,439 --> 00:09:06,819
want to show here is that we have

00:09:04,899 --> 00:09:08,639
parametres in place for twist publishers

00:09:06,819 --> 00:09:12,250
so by now it's publishing with like a

00:09:08,639 --> 00:09:18,550
velocity of 0.1 or something and we can

00:09:12,250 --> 00:09:20,259
actually ask for for parents ok if you

00:09:18,550 --> 00:09:22,089
do rose to power and lists you actually

00:09:20,259 --> 00:09:24,100
see ok all the nodes but there are no no

00:09:22,089 --> 00:09:25,809
parameter is attached to a new thing

00:09:24,100 --> 00:09:27,639
here for Ross - is also a parent there's

00:09:25,809 --> 00:09:29,259
no global parameter server anymore right

00:09:27,639 --> 00:09:32,439
so every node has their own meters

00:09:29,259 --> 00:09:45,790
attached to them and now we can do Ross

00:09:32,439 --> 00:09:48,010
- we said it basically what we did is

00:09:45,790 --> 00:09:51,370
like we just operate our turtle

00:09:48,010 --> 00:10:00,880
as fast so these are these are taking

00:09:51,370 --> 00:10:03,400
into account so that's basically how you

00:10:00,880 --> 00:10:04,540
would set up a robot and so now

00:10:03,400 --> 00:10:06,700
basically what behaves like we have

00:10:04,540 --> 00:10:11,230
markers are lasers device photos

00:10:06,700 --> 00:10:14,410
everything in place but now I hand it

00:10:11,230 --> 00:10:15,970
over to McHale and I keep typing though

00:10:14,410 --> 00:10:17,410
McHale will show you know what you can

00:10:15,970 --> 00:10:18,610
do now is the next step once you have

00:10:17,410 --> 00:10:20,170
that in place which is not a big

00:10:18,610 --> 00:10:21,790
surprises like it's a robot right we

00:10:20,170 --> 00:10:23,350
don't know that what can we do with Ross

00:10:21,790 --> 00:10:25,440
- to actually harden the system make it

00:10:23,350 --> 00:10:27,760
more interesting

00:10:25,440 --> 00:10:29,440
thanks Kirsten so yeah Kelsey is gonna

00:10:27,760 --> 00:10:34,210
be typing because I can VIN but I cannot

00:10:29,440 --> 00:10:35,740
Mike so easier so we're gonna look a bit

00:10:34,210 --> 00:10:39,220
at some of the code just to have an idea

00:10:35,740 --> 00:10:41,080
of how the nodes are like written the

00:10:39,220 --> 00:10:42,880
main first thing you want to show is

00:10:41,080 --> 00:10:46,660
that here we are actually in a header

00:10:42,880 --> 00:10:48,730
file that's out to his publisher so it's

00:10:46,660 --> 00:10:51,220
a class that we declared that is

00:10:48,730 --> 00:10:53,200
inheriting from our base node class and

00:10:51,220 --> 00:10:54,940
that's how we expect most of the nodes

00:10:53,200 --> 00:10:56,890
will be written and the main reason for

00:10:54,940 --> 00:10:58,630
that is that then we can compile each of

00:10:56,890 --> 00:11:01,420
our node as a singular lecture library

00:10:58,630 --> 00:11:04,180
that we can then reuse so if we look at

00:11:01,420 --> 00:11:11,170
the main this is on the top side you can

00:11:04,180 --> 00:11:12,790
see the main of the driver and if you

00:11:11,170 --> 00:11:15,520
could get out twist publisher we're

00:11:12,790 --> 00:11:17,770
gonna see as the main Archie almost

00:11:15,520 --> 00:11:19,660
identical so all the parts that the

00:11:17,770 --> 00:11:22,270
hundreds are executable is really just

00:11:19,660 --> 00:11:25,240
starting out chcbp instantiating a node

00:11:22,270 --> 00:11:27,190
and spinning on it and all the logic is

00:11:25,240 --> 00:11:30,070
gonna be in the header what makes that

00:11:27,190 --> 00:11:32,350
very powerful is that it makes it makes

00:11:30,070 --> 00:11:34,990
it much easier to actually compose nodes

00:11:32,350 --> 00:11:38,680
and bundle not into a same executable so

00:11:34,990 --> 00:11:42,430
in this case if we look at this config

00:11:38,680 --> 00:11:43,900
all we can see that like the structure

00:11:42,430 --> 00:11:45,400
of the main is exactly the same we just

00:11:43,900 --> 00:11:47,590
need to include both of our nodes

00:11:45,400 --> 00:11:49,780
headers and instantiate two nodes add

00:11:47,590 --> 00:11:50,920
them to what we call an executor which

00:11:49,780 --> 00:11:52,870
is going to be like the structure that

00:11:50,920 --> 00:11:54,850
will be used to spin your node and then

00:11:52,870 --> 00:11:57,010
just call spin on it so that's what we

00:11:54,850 --> 00:11:59,320
call manual composition there are other

00:11:57,010 --> 00:12:00,899
ways to do composition I think William

00:11:59,320 --> 00:12:03,720
is great on that

00:12:00,899 --> 00:12:05,189
his lung stroke as well we said just to

00:12:03,720 --> 00:12:13,860
give an idea of like how we expect I

00:12:05,189 --> 00:12:16,550
could instruct you to be like so we

00:12:13,860 --> 00:12:19,619
still have our total running in circle

00:12:16,550 --> 00:12:21,119
in it's safe zone so that's something

00:12:19,619 --> 00:12:24,809
you may have faced a few time developing

00:12:21,119 --> 00:12:27,689
with Rozlyn when you have several people

00:12:24,809 --> 00:12:29,730
on the same network and publishing using

00:12:27,689 --> 00:12:31,079
rows tools to publish messages so in

00:12:29,730 --> 00:12:32,879
this case what we're going to do is that

00:12:31,079 --> 00:12:35,999
what if someone tries to publish

00:12:32,879 --> 00:12:37,230
uncommon velocity and so in that case

00:12:35,999 --> 00:12:39,689
we're just going to publish a different

00:12:37,230 --> 00:12:41,429
spin and if we look at our RVs someone

00:12:39,689 --> 00:12:43,290
took control over all robots and

00:12:41,429 --> 00:12:44,879
actually threw it in the shark's mouth

00:12:43,290 --> 00:12:51,660
we don't have the animation for the

00:12:44,879 --> 00:12:53,639
total getting eaten but the idea and so

00:12:51,660 --> 00:12:57,509
the main question is like how can we

00:12:53,639 --> 00:12:59,519
prevent that and in rosslyn we could

00:12:57,509 --> 00:13:00,449
have like different master URI but as

00:12:59,519 --> 00:13:02,699
soon as something is on the same network

00:13:00,449 --> 00:13:04,619
and talking to the same master we didn't

00:13:02,699 --> 00:13:09,269
really have a way to work around that

00:13:04,619 --> 00:13:11,009
and so what we did in Rus 2 is that we

00:13:09,269 --> 00:13:13,949
have the ability flag because we are

00:13:11,009 --> 00:13:15,860
using DDS underneath DDS has a security

00:13:13,949 --> 00:13:17,759
specifications that allows us to define

00:13:15,860 --> 00:13:19,709
which nodes are allowed to join the

00:13:17,759 --> 00:13:21,600
network what they're allowed to do these

00:13:19,709 --> 00:13:24,209
kind of things so here what we're going

00:13:21,600 --> 00:13:26,819
to do is a commercial on the raw side we

00:13:24,209 --> 00:13:29,069
don't handle we don't do like security

00:13:26,819 --> 00:13:31,230
ourselves we just provide and retrieve

00:13:29,069 --> 00:13:32,699
all the security artifact to fit to DDS

00:13:31,230 --> 00:13:35,249
and EDS handles or the encryption

00:13:32,699 --> 00:13:37,230
authentication so in this case we don't

00:13:35,249 --> 00:13:38,699
want the user code to change you should

00:13:37,230 --> 00:13:41,069
not have to change anything in your node

00:13:38,699 --> 00:13:42,480
to be able to use security on that so

00:13:41,069 --> 00:13:44,160
right now it's handled by environment

00:13:42,480 --> 00:13:45,629
variables that are listed here on the on

00:13:44,160 --> 00:13:47,069
the left side and the main thing that

00:13:45,629 --> 00:13:48,720
these three environment variables are

00:13:47,069 --> 00:13:50,399
like handling all the configuration

00:13:48,720 --> 00:13:52,920
which is the a we have a security Nagin

00:13:50,399 --> 00:13:55,079
environment variable something to define

00:13:52,920 --> 00:13:56,970
like what is global behavior if we

00:13:55,079 --> 00:13:58,619
should like enforce and deny any access

00:13:56,970 --> 00:14:01,379
to the network or if we could have a

00:13:58,619 --> 00:14:03,899
more like permissive node and mostly is

00:14:01,379 --> 00:14:06,059
a bus were for this node or for this

00:14:03,899 --> 00:14:10,160
share we can find the security artifacts

00:14:06,059 --> 00:14:14,690
and so we're going to just set these

00:14:10,160 --> 00:14:18,579
variables and we're gonna restart our

00:14:14,690 --> 00:14:21,170
application our long trial and RVs and

00:14:18,579 --> 00:14:27,410
if everything goes well we should not

00:14:21,170 --> 00:14:29,600
see any differences any difference in

00:14:27,410 --> 00:14:38,720
what is happening here is like all of

00:14:29,600 --> 00:14:40,519
these nodes no citizen okay so here you

00:14:38,720 --> 00:14:42,290
see this executive sandals I've been

00:14:40,519 --> 00:14:43,639
launched exactly the same behaviour the

00:14:42,290 --> 00:14:45,230
only difference like all of them had to

00:14:43,639 --> 00:14:47,209
actually like authenticate themselves to

00:14:45,230 --> 00:14:48,649
the network and to be able to talk to

00:14:47,209 --> 00:14:50,930
each other or like challenge each other

00:14:48,649 --> 00:14:53,569
and set up kids and so also that are

00:14:50,930 --> 00:14:54,560
being sent right now is encrypted I'm

00:14:53,569 --> 00:14:58,610
not gonna show why you're shot because

00:14:54,560 --> 00:15:01,610
it's gonna be challenging on a live demo

00:14:58,610 --> 00:15:03,589
that everything is encrypted here and so

00:15:01,610 --> 00:15:05,449
now if we try to take control of our

00:15:03,589 --> 00:15:08,360
total again and try to sway it in the

00:15:05,449 --> 00:15:10,100
trans Mouse we're gonna see that the

00:15:08,360 --> 00:15:12,279
node cannot even start it's not allowed

00:15:10,100 --> 00:15:15,259
to join the network so this node is just

00:15:12,279 --> 00:15:17,149
directly rejected and so you can you can

00:15:15,259 --> 00:15:19,850
see that with that that security or and

00:15:17,149 --> 00:15:22,670
pretty veil was the wrong message so

00:15:19,850 --> 00:15:25,370
that's good we so what we can see here

00:15:22,670 --> 00:15:28,040
is that the node names is what define

00:15:25,370 --> 00:15:30,620
like what node is allowed to join on

00:15:28,040 --> 00:15:32,180
that so that works for a functional

00:15:30,620 --> 00:15:34,250
roster picked up that we didn't allow

00:15:32,180 --> 00:15:36,920
but if someone we use the same executive

00:15:34,250 --> 00:15:38,959
as we did and just ravine remap the node

00:15:36,920 --> 00:15:40,730
name on command line using understands

00:15:38,959 --> 00:15:44,029
convert we have the same behavior not

00:15:40,730 --> 00:15:46,519
allowed to join so all that is build

00:15:44,029 --> 00:15:48,319
that allows mostly to prevent from

00:15:46,519 --> 00:15:50,630
people on your network explaining new

00:15:48,319 --> 00:15:52,389
nodes interfering with your system but

00:15:50,630 --> 00:15:55,279
it doesn't protect you from people

00:15:52,389 --> 00:15:57,980
modifying your nodes or your trusted

00:15:55,279 --> 00:15:59,899
executables and there are several ways

00:15:57,980 --> 00:16:01,550
to protect that on the system level by

00:15:59,899 --> 00:16:03,980
retaining binaries but we're talking

00:16:01,550 --> 00:16:05,959
about most in network security here and

00:16:03,980 --> 00:16:07,129
so what we're going to look at is like

00:16:05,959 --> 00:16:09,170
how can we provide additional

00:16:07,129 --> 00:16:11,389
configuration and granularity unlike

00:16:09,170 --> 00:16:14,240
what is a node allowed to do so right

00:16:11,389 --> 00:16:16,009
now twist publisher our safe zone

00:16:14,240 --> 00:16:17,870
publisher is just allowed to publish

00:16:16,009 --> 00:16:19,730
what is the safe zone our total is about

00:16:17,870 --> 00:16:22,750
to navigate and what is the zone well so

00:16:19,730 --> 00:16:25,180
short territory and

00:16:22,750 --> 00:16:27,519
so we're going to define using this

00:16:25,180 --> 00:16:30,459
yellow format what are the permissions

00:16:27,519 --> 00:16:32,889
that what's what isn't allowed to do and

00:16:30,459 --> 00:16:35,110
so here it has an e to thing you can do

00:16:32,889 --> 00:16:37,629
it can only publish on to topics which

00:16:35,110 --> 00:16:38,889
is a season and danger zone so now what

00:16:37,629 --> 00:16:41,800
we're going to try to do is that we're

00:16:38,889 --> 00:16:45,310
going to modify a small Python

00:16:41,800 --> 00:16:46,990
executable and this is mostly to emulate

00:16:45,310 --> 00:16:49,329
that someone is like taking control and

00:16:46,990 --> 00:16:52,209
successfully injected code in our system

00:16:49,329 --> 00:16:55,060
and so here we can see that we just

00:16:52,209 --> 00:16:57,490
decided to create a new publisher and

00:16:55,060 --> 00:16:58,810
try to make our saves on table shall

00:16:57,490 --> 00:17:01,439
take control over the robot and

00:16:58,810 --> 00:17:07,949
Federation commander ersity

00:17:01,439 --> 00:17:10,120
and so now if we try to ran that node

00:17:07,949 --> 00:17:13,030
we're gonna see that it's gonna say to

00:17:10,120 --> 00:17:14,350
start the mething that node is gonna be

00:17:13,030 --> 00:17:15,730
created is gonna start creating its

00:17:14,350 --> 00:17:17,949
publishers and as Scylla is gonna reach

00:17:15,730 --> 00:17:20,500
the provisions that like is not allowed

00:17:17,949 --> 00:17:22,659
in the policies we defined it's gonna be

00:17:20,500 --> 00:17:24,610
like preventing from being creative so

00:17:22,659 --> 00:17:26,949
here we can be more robust to cut

00:17:24,610 --> 00:17:28,329
injection and modification if any node

00:17:26,949 --> 00:17:31,000
that is doing something that is outside

00:17:28,329 --> 00:17:32,890
of its scope we can actually prevent it

00:17:31,000 --> 00:17:35,850
and catch the zeroes and have like some

00:17:32,890 --> 00:17:35,850
fallback behavior as well

00:17:40,810 --> 00:17:50,540
okay so if we just so if you want to

00:17:47,210 --> 00:17:52,910
recap real quick if you want to work

00:17:50,540 --> 00:17:55,850
through it at home so we just installed

00:17:52,910 --> 00:17:59,270
us to put our small repository with a

00:17:55,850 --> 00:18:01,040
few packages and build it so that's our

00:17:59,270 --> 00:18:03,260
overlay workspace that's what we use for

00:18:01,040 --> 00:18:05,030
this entire dinner then we saw how to

00:18:03,260 --> 00:18:06,980
create a package how to specify library

00:18:05,030 --> 00:18:08,660
names dependencies and how to get all of

00:18:06,980 --> 00:18:11,390
this bundled into a package that XML and

00:18:08,660 --> 00:18:13,310
C make list how to run like how to build

00:18:11,390 --> 00:18:18,170
a CUDA who run our code how to run our

00:18:13,310 --> 00:18:19,640
tests we saw what lunch trays look like

00:18:18,170 --> 00:18:21,170
how can you specify the number of notes

00:18:19,640 --> 00:18:23,510
that care will be in your mom file how

00:18:21,170 --> 00:18:28,310
to setup where the output is gonna be on

00:18:23,510 --> 00:18:29,900
the screen on the console etc so we saw

00:18:28,310 --> 00:18:31,850
some of the rose to command line tools

00:18:29,900 --> 00:18:34,070
how to introspect running systems so

00:18:31,850 --> 00:18:35,210
most of them are pretty like you should

00:18:34,070 --> 00:18:36,560
be pretty familiar with them because

00:18:35,210 --> 00:18:38,150
they're pretty similar to us when we're

00:18:36,560 --> 00:18:40,280
trying to have like a similar experience

00:18:38,150 --> 00:18:44,260
so Rosner DS was totally stressed a pig

00:18:40,280 --> 00:18:47,060
a chorister picked up then we saw that

00:18:44,260 --> 00:18:49,220
we have RV's natively on all platforms

00:18:47,060 --> 00:18:52,550
like Andreas is gonna talk about this

00:18:49,220 --> 00:18:55,100
data I think as in we didn't have to do

00:18:52,550 --> 00:18:57,410
anything specific or Ram likes magic

00:18:55,100 --> 00:19:02,300
scripts to get things to compile and run

00:18:57,410 --> 00:19:04,370
on Mac and a bit more of command-line

00:19:02,300 --> 00:19:06,020
tools how to interact with things that

00:19:04,370 --> 00:19:07,820
are hosted on the node itself so how to

00:19:06,020 --> 00:19:12,650
modify parameters on a specific node how

00:19:07,820 --> 00:19:14,960
to please them modify the system we saw

00:19:12,650 --> 00:19:16,070
the idea of X I can learn how to see

00:19:14,960 --> 00:19:18,380
which types like you're annoyed are

00:19:16,070 --> 00:19:20,090
running just States how to modify them

00:19:18,380 --> 00:19:23,720
how to interact with them how to shut

00:19:20,090 --> 00:19:26,720
them down an idea for the structure of

00:19:23,720 --> 00:19:28,820
like composing node is they and mostly

00:19:26,720 --> 00:19:32,180
how we expect to write nodes in the

00:19:28,820 --> 00:19:37,340
roster ecosystem and how to then compose

00:19:32,180 --> 00:19:38,960
them then we looked a little bit like

00:19:37,340 --> 00:19:41,000
how can we tamper with the system if you

00:19:38,960 --> 00:19:42,770
have access to the network so how an

00:19:41,000 --> 00:19:47,690
unsecured system can be taken over and

00:19:42,770 --> 00:19:50,180
then how we can try to work around it so

00:19:47,690 --> 00:19:53,990
we can see we have just this very simple

00:19:50,180 --> 00:19:56,330
set of environment variables that allow

00:19:53,990 --> 00:19:58,880
us to define like to enable security for

00:19:56,330 --> 00:20:02,840
a specific set of nodes and how to

00:19:58,880 --> 00:20:04,700
relaunch all the movies that we saw

00:20:02,840 --> 00:20:07,250
different ways that I know that not

00:20:04,700 --> 00:20:08,720
authenticated would fail so in this case

00:20:07,250 --> 00:20:10,010
note that don't have the right name or

00:20:08,720 --> 00:20:12,590
don't have the right executable would

00:20:10,010 --> 00:20:16,700
fail and we also looked a bit deeper

00:20:12,590 --> 00:20:19,820
into how the configuration like so in

00:20:16,700 --> 00:20:22,010
this case how to define policies for a

00:20:19,820 --> 00:20:25,280
node or set of nodes in a general format

00:20:22,010 --> 00:20:26,630
and how to generate them so that part we

00:20:25,280 --> 00:20:27,740
didn't show you but the comment at the

00:20:26,630 --> 00:20:29,990
bottom is actually what allows to

00:20:27,740 --> 00:20:32,990
generate all these audit security

00:20:29,990 --> 00:20:35,630
artifacts the next slide shows you just

00:20:32,990 --> 00:20:39,430
a small extract of like what these DDS

00:20:35,630 --> 00:20:42,950
XML files that are generated look like

00:20:39,430 --> 00:20:46,220
we looked at we can modify existing code

00:20:42,950 --> 00:20:48,980
and how we can like catch these issues

00:20:46,220 --> 00:20:53,450
by defining policies and so how it would

00:20:48,980 --> 00:20:54,920
actually say to run if we if we try to

00:20:53,450 --> 00:20:56,330
run them we're gonna have that detailed

00:20:54,920 --> 00:20:58,550
error messages of like which topic and

00:20:56,330 --> 00:21:01,520
which publisher is not allowed etc and

00:20:58,550 --> 00:21:04,940
so that is just a subset of rows two

00:21:01,520 --> 00:21:06,110
features there are many other things

00:21:04,940 --> 00:21:09,350
that are available since previous

00:21:06,110 --> 00:21:12,080
releases or current is blonde see I just

00:21:09,350 --> 00:21:13,400
did a few of them here mostly to give an

00:21:12,080 --> 00:21:16,250
idea I think they are relevant for some

00:21:13,400 --> 00:21:18,350
like existing restaurant users or just

00:21:16,250 --> 00:21:20,720
new rows to users so the ability of

00:21:18,350 --> 00:21:23,660
being able to bridge communication

00:21:20,720 --> 00:21:26,000
between rows for us to vias roschin

00:21:23,660 --> 00:21:27,890
bridge to be able to set up efficient

00:21:26,000 --> 00:21:30,380
inter process communication so here we

00:21:27,890 --> 00:21:30,800
saw how to like bender node in the same

00:21:30,380 --> 00:21:32,930
process

00:21:30,800 --> 00:21:35,090
but then we can also enforce that like

00:21:32,930 --> 00:21:36,650
all this node should use only shell

00:21:35,090 --> 00:21:38,540
memory or inter process communication

00:21:36,650 --> 00:21:40,130
so basically bypassing all the

00:21:38,540 --> 00:21:43,850
networking part and the DDS part of the

00:21:40,130 --> 00:21:46,640
stack and just stains the oclc PP level

00:21:43,850 --> 00:21:49,250
and just by scenic painters around how

00:21:46,640 --> 00:21:51,470
to set up the parameters VRML files we

00:21:49,250 --> 00:21:54,890
didn't say just see how to modify them

00:21:51,470 --> 00:21:57,800
and many of the command-line tools that

00:21:54,890 --> 00:21:59,320
we starting to put together and so this

00:21:57,800 --> 00:22:02,680
is a state of bouncy

00:21:59,320 --> 00:22:04,180
that's recipes within June next year is

00:22:02,680 --> 00:22:05,770
gonna be in December and so unless

00:22:04,180 --> 00:22:07,300
though today we started working towards

00:22:05,770 --> 00:22:09,520
that release so I did a few thing we've

00:22:07,300 --> 00:22:11,650
been working on to give an idea of like

00:22:09,520 --> 00:22:14,320
where we're going so implementing some

00:22:11,650 --> 00:22:15,940
like higher level packages that are very

00:22:14,320 --> 00:22:18,820
useful for data processing for the per

00:22:15,940 --> 00:22:20,470
message filters an image transport for

00:22:18,820 --> 00:22:22,600
starting protein gets across packages -

00:22:20,470 --> 00:22:25,330
Russ - so to be able to actually use

00:22:22,600 --> 00:22:27,070
gazebo withdraws to directly say our

00:22:25,330 --> 00:22:28,930
several plugins that have been ported

00:22:27,070 --> 00:22:30,610
and I put a link there if you want to

00:22:28,930 --> 00:22:33,820
follow the progress that still like work

00:22:30,610 --> 00:22:36,960
in progress moving on a daily basis we

00:22:33,820 --> 00:22:39,580
started implementing Rosberg inverse -

00:22:36,960 --> 00:22:42,040
so an active rows back not something

00:22:39,580 --> 00:22:44,440
that was of a bridge and if we already

00:22:42,040 --> 00:22:46,480
will have a lightning talk Cal Stan and

00:22:44,440 --> 00:22:49,120
some colleagues would will do wrecking

00:22:46,480 --> 00:22:53,380
talk about it otherwise just ping him

00:22:49,120 --> 00:22:55,120
anytime and improvement run lost time

00:22:53,380 --> 00:22:56,920
not being able to use simulation time

00:22:55,120 --> 00:23:01,060
everywhere these kind of things that's

00:22:56,920 --> 00:23:03,160
again like a subset crystal like the

00:23:01,060 --> 00:23:05,320
roadmap is evolving as we get more and

00:23:03,160 --> 00:23:07,510
more contributors I've seen recently

00:23:05,320 --> 00:23:09,010
like you say is thinking of steering

00:23:07,510 --> 00:23:11,770
committee for us to say is now providing

00:23:09,010 --> 00:23:13,690
also resources to to work on subsidies

00:23:11,770 --> 00:23:17,500
so if you want to see what the state and

00:23:13,690 --> 00:23:19,930
what is the plan for Crystal go to that

00:23:17,500 --> 00:23:21,460
range don't necessarily stop on what is

00:23:19,930 --> 00:23:22,630
on these slides because it's moving

00:23:21,460 --> 00:23:25,180
there are many many new thing and

00:23:22,630 --> 00:23:30,340
exciting thing coming so just follow on

00:23:25,180 --> 00:23:31,270
the wiki and I think one time ok thank

00:23:30,340 --> 00:23:33,200
you very much and if there's any

00:23:31,270 --> 00:23:41,200
question

00:23:33,200 --> 00:23:41,200
[Applause]

00:23:49,639 --> 00:23:55,259
so the question was like whether we have

00:23:53,100 --> 00:24:04,080
secured in place to avoid the u.s.

00:23:55,259 --> 00:24:05,610
attacks yes so one of the main things

00:24:04,080 --> 00:24:08,159
for dinner service is that we don't need

00:24:05,610 --> 00:24:09,990
to process like having this way of

00:24:08,159 --> 00:24:12,600
specifying what is allowed to join the

00:24:09,990 --> 00:24:14,970
network is already preventing you don't

00:24:12,600 --> 00:24:16,980
have to process the packets of any note

00:24:14,970 --> 00:24:18,450
that is like not authenticated it may be

00:24:16,980 --> 00:24:19,740
discarded automatically so you don't

00:24:18,450 --> 00:24:23,940
have to actually unpack

00:24:19,740 --> 00:24:25,259
when Gigabyte like point out message to

00:24:23,940 --> 00:24:27,990
find out it was just entered and not

00:24:25,259 --> 00:24:30,450
allowed so that's one way to actually

00:24:27,990 --> 00:24:32,340
work around it there are several

00:24:30,450 --> 00:24:34,409
approach I think it may be I think

00:24:32,340 --> 00:24:36,539
Geraldo and ruffian may be talking about

00:24:34,409 --> 00:24:39,749
it later today we have a rush to

00:24:36,539 --> 00:24:42,529
security talk today so you may have a

00:24:39,749 --> 00:24:42,529
bit more context

00:24:49,800 --> 00:24:55,840
so the question is can we dynamically we

00:24:52,330 --> 00:24:58,450
configure the permissions of any node so

00:24:55,840 --> 00:25:01,510
currently no the main the main thing is

00:24:58,450 --> 00:25:04,300
that permissions are passed to the DDS

00:25:01,510 --> 00:25:06,400
taxi underlined in DDS layer at node

00:25:04,300 --> 00:25:07,570
creation time I like DDS participant

00:25:06,400 --> 00:25:09,850
creation time which is very key

00:25:07,570 --> 00:25:12,400
Rocksmith creation time and so at that

00:25:09,850 --> 00:25:14,650
point these artifacts are loaded

00:25:12,400 --> 00:25:16,360
installed and so if you modify these

00:25:14,650 --> 00:25:18,700
files later on you cannot temper with

00:25:16,360 --> 00:25:20,950
whatever security that configuration has

00:25:18,700 --> 00:25:23,260
been made then it could be done in the

00:25:20,950 --> 00:25:25,210
future if like we could provide like a

00:25:23,260 --> 00:25:28,240
mode to allow you the same way as we

00:25:25,210 --> 00:25:29,980
could do for like changing I don't know

00:25:28,240 --> 00:25:32,200
many topic name something like that that

00:25:29,980 --> 00:25:35,310
may require you to recreate the DDS

00:25:32,200 --> 00:25:39,010
entities we could provide a way to

00:25:35,310 --> 00:25:41,980
reconfigure static quality of service

00:25:39,010 --> 00:25:43,240
and security at runtime that still means

00:25:41,980 --> 00:25:45,670
that under the hood you actually that

00:25:43,240 --> 00:25:48,750
kill whatever like entity you're using

00:25:45,670 --> 00:25:48,750
to create a new one

00:25:52,570 --> 00:25:58,309
thank you thank you very much

00:25:55,740 --> 00:25:58,309

YouTube URL: https://www.youtube.com/watch?v=k_QjQL03fRE


