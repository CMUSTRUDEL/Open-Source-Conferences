Title: ROSCon 2018 Madrid LT1 7 Robot Recorder
Publication date: 2021-03-28
Playlist: ROSCon 2018
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2018 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:07,069 --> 00:00:11,160
okay

00:00:08,280 --> 00:00:12,660
hola everyone so I want to present a new

00:00:11,160 --> 00:00:15,509
tool that I have developed it's a rather

00:00:12,660 --> 00:00:17,250
small tool and to my present I'm unit on

00:00:15,509 --> 00:00:20,430
I'm from a Research Institute from Nova

00:00:17,250 --> 00:00:23,189
IPA and the tool that I am presenting is

00:00:20,430 --> 00:00:25,619
called robot recorder and the basic idea

00:00:23,189 --> 00:00:30,210
is that an animation is worth a thousand

00:00:25,619 --> 00:00:32,520
lines of markdown so what is what is the

00:00:30,210 --> 00:00:35,640
goal of this robot recorder so it does

00:00:32,520 --> 00:00:38,790
record the Ross application and then you

00:00:35,640 --> 00:00:42,360
can use that recorded animation to

00:00:38,790 --> 00:00:46,020
replay it in your 3d any web browser and

00:00:42,360 --> 00:00:49,320
that is a 3d animation and what are the

00:00:46,020 --> 00:00:50,489
reasons to do so so one reason would be

00:00:49,320 --> 00:00:52,559
to get an eye-catcher for your

00:00:50,489 --> 00:00:53,969
application so everyone can see really

00:00:52,559 --> 00:00:57,180
quickly what it's about

00:00:53,969 --> 00:00:58,410
another reason is if you want if you

00:00:57,180 --> 00:01:00,600
integrate it in your continuous

00:00:58,410 --> 00:01:03,420
integration pipeline you can use it to

00:01:00,600 --> 00:01:05,430
inspect failed CI tests and the last

00:01:03,420 --> 00:01:08,400
reason could be that you do want to do

00:01:05,430 --> 00:01:12,450
some visual benchmarking of say

00:01:08,400 --> 00:01:14,640
different parameters and so what does it

00:01:12,450 --> 00:01:17,159
actually record on the one hand side it

00:01:14,640 --> 00:01:19,950
extra it records external motions from

00:01:17,159 --> 00:01:21,869
transforms so you will know the topic TF

00:01:19,950 --> 00:01:25,310
and on the other hand it records

00:01:21,869 --> 00:01:29,310
internal motions from the joint States

00:01:25,310 --> 00:01:32,610
and so how do you actually use this tool

00:01:29,310 --> 00:01:35,040
so the whole you can control it the

00:01:32,610 --> 00:01:38,100
recorder with Ross services therefore

00:01:35,040 --> 00:01:40,290
you can automate it and as I said use it

00:01:38,100 --> 00:01:42,299
for example in your testing but on the

00:01:40,290 --> 00:01:45,350
other hand it's also mapped to some

00:01:42,299 --> 00:01:49,320
orbit again so it's very easy to use and

00:01:45,350 --> 00:01:51,450
the recorded data uses keyframes so only

00:01:49,320 --> 00:01:55,079
stuff is recorded if it actually changes

00:01:51,450 --> 00:01:57,600
this reduces the data storage and in the

00:01:55,079 --> 00:01:59,909
end it is it it is exported as a JSON

00:01:57,600 --> 00:02:06,360
file once you have this recorded

00:01:59,909 --> 00:02:08,399
animation you can use it in a the what I

00:02:06,360 --> 00:02:11,910
call animation viewer so this is a

00:02:08,399 --> 00:02:13,860
wrapper for the UDF loader and and it

00:02:11,910 --> 00:02:16,140
includes the animation

00:02:13,860 --> 00:02:18,240
and it's really cool you cannot host it

00:02:16,140 --> 00:02:19,890
on your github pages and you can cross

00:02:18,240 --> 00:02:22,170
load meshes for example from other

00:02:19,890 --> 00:02:24,630
github repositories therefore it's

00:02:22,170 --> 00:02:26,580
really lightweight and you have some 3d

00:02:24,630 --> 00:02:29,130
animation of your application also if

00:02:26,580 --> 00:02:31,110
just one click you can convert the

00:02:29,130 --> 00:02:33,420
application to and give this makes it

00:02:31,110 --> 00:02:39,450
easier to include it in for example in

00:02:33,420 --> 00:02:41,130
you read me that's about the tool and of

00:02:39,450 --> 00:02:43,200
course it's available on github you can

00:02:41,130 --> 00:02:46,850
find it with the name robot underscore

00:02:43,200 --> 00:02:46,850

YouTube URL: https://www.youtube.com/watch?v=5uOw2ZOsTjw


