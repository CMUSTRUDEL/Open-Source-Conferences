Title: ROSCon 2018 Madrid LT1 14 ROS2 on WebOS Web app enabled robots
Publication date: 2021-03-28
Playlist: ROSCon 2018
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2018 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,030 --> 00:00:04,890
hi everyone my name is Brian shin and

00:00:02,790 --> 00:00:07,560
I'm with LG Electronics at our Silicon

00:00:04,890 --> 00:00:10,559
Valley at lab office so I'll be playing

00:00:07,560 --> 00:00:12,389
this video as I talk I just wanted to

00:00:10,559 --> 00:00:14,790
quickly introduce you to bean burger

00:00:12,389 --> 00:00:18,109
white bean burger robot is a

00:00:14,790 --> 00:00:21,750
demonstration of Ross 2 running on webOS

00:00:18,109 --> 00:00:25,109
webOS is a Yocto based embedded Linux

00:00:21,750 --> 00:00:26,970
distribution and it's lightweight so

00:00:25,109 --> 00:00:29,660
it's meant for cheaper embedded devices

00:00:26,970 --> 00:00:32,669
that are deployed such as LG Smart TVs

00:00:29,660 --> 00:00:33,930
so when you're actually deploying fleets

00:00:32,669 --> 00:00:36,149
of robots you want to maximize

00:00:33,930 --> 00:00:38,309
performance while minimizing costs and

00:00:36,149 --> 00:00:40,440
that sometimes means you don't really

00:00:38,309 --> 00:00:42,809
want a full desktop distribution like a

00:00:40,440 --> 00:00:45,360
boon to running on your fleet webOS

00:00:42,809 --> 00:00:48,120
allows you to have full Ross - as well

00:00:45,360 --> 00:00:50,969
as nice-looking web applications that

00:00:48,120 --> 00:00:53,969
are easy to develop based on the enact

00:00:50,969 --> 00:00:57,020
framework and this also allows you to

00:00:53,969 --> 00:00:59,730
have really fully reproducible

00:00:57,020 --> 00:01:03,660
deployable builds that are constant

00:00:59,730 --> 00:01:06,150
across like all URI robots so the bean

00:01:03,660 --> 00:01:08,880
burger robot here that we show it runs

00:01:06,150 --> 00:01:10,170
on a single Raspberry Pi board and the

00:01:08,880 --> 00:01:12,299
features as you can see are sort of

00:01:10,170 --> 00:01:15,299
joystick control perceiving and

00:01:12,299 --> 00:01:17,549
responding to its environment obstacle

00:01:15,299 --> 00:01:19,259
and cliff avoidance and things like this

00:01:17,549 --> 00:01:21,840
and instead of starting with a full

00:01:19,259 --> 00:01:24,540
desktop Linux distribution we start and

00:01:21,840 --> 00:01:26,490
take only the components into the OS

00:01:24,540 --> 00:01:28,650
that are needed so only the Ross two

00:01:26,490 --> 00:01:31,140
components that are that are needed only

00:01:28,650 --> 00:01:33,090
the kernel modules that are needed in

00:01:31,140 --> 00:01:35,430
this case it's things like joystick

00:01:33,090 --> 00:01:38,430
drivers sorts support for touchscreen

00:01:35,430 --> 00:01:39,780
support price curtsy and GPIO and this

00:01:38,430 --> 00:01:44,610
allows you to kind of cut down on the

00:01:39,780 --> 00:01:46,860
footprint of your entire system image so

00:01:44,610 --> 00:01:48,810
we're we built this on top of the

00:01:46,860 --> 00:01:50,610
community that's supporting the meta

00:01:48,810 --> 00:01:53,130
Ross if you're at all introduced if

00:01:50,610 --> 00:01:57,180
you're at all and interested in the sort

00:01:53,130 --> 00:02:00,390
of open embedded community please so

00:01:57,180 --> 00:02:02,369
check us out on github under the LG svl

00:02:00,390 --> 00:02:05,180
organization if you're at all interested

00:02:02,369 --> 00:02:08,580
in the open embedded sort of side of

00:02:05,180 --> 00:02:11,670
Ross - we'd love to talk we're also

00:02:08,580 --> 00:02:14,750
going to have a booth at iris so please

00:02:11,670 --> 00:02:14,750
come check us out there as well

00:02:15,140 --> 00:02:19,269
Thanks

00:02:17,050 --> 00:02:19,269

YouTube URL: https://www.youtube.com/watch?v=4rEBp1I3gio


