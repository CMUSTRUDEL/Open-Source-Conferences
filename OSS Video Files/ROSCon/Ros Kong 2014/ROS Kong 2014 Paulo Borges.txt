Title: ROS Kong 2014 Paulo Borges
Publication date: 2014-07-17
Playlist: Ros Kong 2014
Description: 
	Unaltered video by Open Robotics from https://roscon.ros.org/hk/2014/ under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:08,639
good morning thanks very much for the

00:00:02,820 --> 00:00:11,130
opportunity so guys um Ross at CSIRO for

00:00:08,639 --> 00:00:14,490
those of you who don't know CSI row is

00:00:11,130 --> 00:00:17,390
Australia's national research agency we

00:00:14,490 --> 00:00:22,100
do research and lots of things

00:00:17,390 --> 00:00:25,170
agriculture energy food and information

00:00:22,100 --> 00:00:29,220
technology where is our robotics group

00:00:25,170 --> 00:00:32,219
is so I'm part of the sorry computation

00:00:29,220 --> 00:00:35,160
informatics and the name of my lab is

00:00:32,219 --> 00:00:38,600
autonomous systems lab or do lots of

00:00:35,160 --> 00:00:40,770
field robotics work and mapping and a

00:00:38,600 --> 00:00:43,590
few other things like the Panama

00:00:40,770 --> 00:00:46,200
navigation localization we've been doing

00:00:43,590 --> 00:00:48,600
lots of things with sensor fusion and in

00:00:46,200 --> 00:00:53,420
all these topics as you all obviously

00:00:48,600 --> 00:00:56,070
know Ross is very very handy and useful

00:00:53,420 --> 00:00:58,739
so um today we are going to talk about

00:00:56,070 --> 00:01:01,770
some of our projects that use Ross how

00:00:58,739 --> 00:01:04,080
we modified some of them and some of the

00:01:01,770 --> 00:01:07,080
packages that are available online that

00:01:04,080 --> 00:01:09,930
you can all check out and I'm going to

00:01:07,080 --> 00:01:12,150
talk about the disabled scanner flying

00:01:09,930 --> 00:01:18,180
version of it and some other ground

00:01:12,150 --> 00:01:19,530
vehicles and thermal mapping system so

00:01:18,180 --> 00:01:21,659
if you have any questions at any moment

00:01:19,530 --> 00:01:25,049
just feel free to interrupt and stop

00:01:21,659 --> 00:01:27,150
it's good to make it interactive so I'll

00:01:25,049 --> 00:01:28,950
started as a buddy 3d mapping system I

00:01:27,150 --> 00:01:32,040
don't know if anybody hears into mapping

00:01:28,950 --> 00:01:35,100
at all but this is this is a system that

00:01:32,040 --> 00:01:37,430
was developed by my colleagues the main

00:01:35,100 --> 00:01:42,540
people behind it will Mike bossa &

00:01:37,430 --> 00:01:45,420
Roberts lot and it's a very very cool

00:01:42,540 --> 00:01:53,909
concept if you see on the bottom there

00:01:45,420 --> 00:01:57,000
there is if you seen the bottom there

00:01:53,909 --> 00:02:01,200
there is a little cool laser with a

00:01:57,000 --> 00:02:05,100
spring and a handle so what this does is

00:02:01,200 --> 00:02:08,340
um if you hold the handle and as you

00:02:05,100 --> 00:02:10,830
walk around the spring will swing and

00:02:08,340 --> 00:02:13,379
from the 2d Hoku you later you're going

00:02:10,830 --> 00:02:13,860
to get a 3d scan of the world it's a

00:02:13,379 --> 00:02:16,530
it's

00:02:13,860 --> 00:02:18,270
interesting concept and the main merit

00:02:16,530 --> 00:02:19,830
of this not only the mounting on the

00:02:18,270 --> 00:02:23,670
spring but it's the registration

00:02:19,830 --> 00:02:26,160
algorithm that lies in the background so

00:02:23,670 --> 00:02:29,940
we still using Russ 40 because this is a

00:02:26,160 --> 00:02:34,020
is a product that has been also

00:02:29,940 --> 00:02:36,330
commercialized and we did a interesting

00:02:34,020 --> 00:02:39,840
mobile interface to control Ross and

00:02:36,330 --> 00:02:41,660
check data quality and we to get that

00:02:39,840 --> 00:02:44,100
working had a modified version of the

00:02:41,660 --> 00:02:47,280
rosca coolaser drivers and the micro

00:02:44,100 --> 00:02:50,220
strain drivers so those things improve

00:02:47,280 --> 00:02:54,209
timing accuracy and we had some modified

00:02:50,220 --> 00:02:57,360
messages so the commercial version of

00:02:54,209 --> 00:03:02,010
the Zebedee one which is available from

00:02:57,360 --> 00:03:04,560
3d laser mapping in UK it has a similar

00:03:02,010 --> 00:03:06,330
setup but everything is in a little

00:03:04,560 --> 00:03:07,950
embedded computer system in contrast to

00:03:06,330 --> 00:03:11,070
the previous slide here or saw our

00:03:07,950 --> 00:03:25,130
acquisition laptop I'll show you a quick

00:03:11,070 --> 00:03:25,130
video of what this does change screens

00:03:27,910 --> 00:03:32,630
so this is um it's easier to understand

00:03:31,280 --> 00:03:36,770
the concept of looking at this video

00:03:32,630 --> 00:03:39,530
here just maximize it made me so this is

00:03:36,770 --> 00:03:41,990
my workplace and you know straight like

00:03:39,530 --> 00:03:44,090
you cat and brisbane and this was mapped

00:03:41,990 --> 00:03:46,130
in 19 minutes the whole building so

00:03:44,090 --> 00:03:50,620
that's my colleague mike balsa there so

00:03:46,130 --> 00:03:53,090
you see it's a pretty pretty funny yeah

00:03:50,620 --> 00:03:55,250
so yeah he's walking around reception

00:03:53,090 --> 00:03:56,660
and the point that you see there is that

00:03:55,250 --> 00:03:58,370
the trajectory of the sensor itself

00:03:56,660 --> 00:04:00,200
there's an IMU in the laser there so

00:03:58,370 --> 00:04:02,960
that's the trajectory of the sensor so

00:04:00,200 --> 00:04:06,500
you see all the point cloud around let's

00:04:02,960 --> 00:04:09,380
see now i think he's gonna gonna show ya

00:04:06,500 --> 00:04:12,590
he's going down the stairs and it took

00:04:09,380 --> 00:04:14,600
him about 19 minutes to walk around the

00:04:12,590 --> 00:04:16,970
site it's like an industrial park in

00:04:14,600 --> 00:04:19,340
australia so you see there what's going

00:04:16,970 --> 00:04:21,470
it seems like a mass but the guys do a

00:04:19,340 --> 00:04:23,350
great job it's actually i personally

00:04:21,470 --> 00:04:25,100
find really amazing the registration

00:04:23,350 --> 00:04:26,960
algorithm how they can put everything

00:04:25,100 --> 00:04:29,090
together make sense so that's the final

00:04:26,960 --> 00:04:34,550
point cloud model i can see there are

00:04:29,090 --> 00:04:36,650
some details 900 meters and um let's

00:04:34,550 --> 00:04:41,180
zoom out hopefully yeah so that's the

00:04:36,650 --> 00:04:42,980
whole the whole site there you sing many

00:04:41,180 --> 00:04:44,180
people think oh this is structure it

00:04:42,980 --> 00:04:45,920
works about in structure but it works

00:04:44,180 --> 00:04:48,290
really well in onion structured

00:04:45,920 --> 00:04:50,390
environments as well so let me just put

00:04:48,290 --> 00:04:52,850
forward a little bit so as an example

00:04:50,390 --> 00:04:57,440
they did a mapping in forest mount kuta

00:04:52,850 --> 00:04:59,150
in brisbane which is some national park

00:04:57,440 --> 00:05:02,510
they're not sure if it's national so

00:04:59,150 --> 00:05:04,070
Mike goes one way Rob's lot goes the

00:05:02,510 --> 00:05:05,890
other way okay so we have actually two

00:05:04,070 --> 00:05:09,530
people two different trajectories and

00:05:05,890 --> 00:05:15,290
everything is registered in the enemies

00:05:09,530 --> 00:05:18,710
foreign interest of time so you see

00:05:15,290 --> 00:05:23,530
that's the final trajectory so using

00:05:18,710 --> 00:05:23,530
this this device we've mapped

00:05:30,379 --> 00:05:37,580
sorry guys I had a little issue with

00:05:32,580 --> 00:05:37,580
embedding the powerpoint so using this

00:05:38,810 --> 00:05:45,180
continuum from current slide so many

00:05:43,680 --> 00:05:48,620
cool this is a forest oak forest in

00:05:45,180 --> 00:05:51,749
France that has been mapped this is a

00:05:48,620 --> 00:05:54,210
some cultural heritage sites in

00:05:51,749 --> 00:05:56,460
Australia oops have a blank slide there

00:05:54,210 --> 00:05:59,370
so you can see that on the mapping of

00:05:56,460 --> 00:06:02,189
the final results this is an island in

00:05:59,370 --> 00:06:04,439
the south of Brazil with a fortress from

00:06:02,189 --> 00:06:07,560
the Portuguese from 17th century that

00:06:04,439 --> 00:06:11,009
that 1 i'm at myself we got the map tann

00:06:07,560 --> 00:06:12,599
i don't know 15 minutes and someone on

00:06:11,009 --> 00:06:15,419
places have also been scanning I think

00:06:12,599 --> 00:06:18,479
you will recognize the Tower of Pisa in

00:06:15,419 --> 00:06:23,639
Italy so there that's a that's a very

00:06:18,479 --> 00:06:26,159
cool system that uses Ross and because

00:06:23,639 --> 00:06:27,870
as you start the nature of it it walk

00:06:26,159 --> 00:06:29,969
around with it sometimes you want to

00:06:27,870 --> 00:06:32,610
scan things on top of you so there's a

00:06:29,969 --> 00:06:35,750
work in process going on of you putting

00:06:32,610 --> 00:06:38,490
the Zebedee system on a quadcopter there

00:06:35,750 --> 00:06:40,949
so you see you can get a high resolution

00:06:38,490 --> 00:06:44,430
aerial 3d scanning of the system and you

00:06:40,949 --> 00:06:47,610
also use the same drivers Ross drivers

00:06:44,430 --> 00:06:49,620
for her cuyo and the micro strain that I

00:06:47,610 --> 00:06:53,069
mentioned before damn you which have

00:06:49,620 --> 00:06:55,680
been modified and the cell in this in

00:06:53,069 --> 00:06:57,870
this case here the sensors rotation is

00:06:55,680 --> 00:06:59,699
driven by the air flow so instead of

00:06:57,870 --> 00:07:05,550
having a spring the air flow of the

00:06:59,699 --> 00:07:07,500
quadcopters make the base spin and you

00:07:05,550 --> 00:07:18,089
can get let me see if this video play I

00:07:07,500 --> 00:07:19,949
don't think you can so you can get yeah

00:07:18,089 --> 00:07:21,120
this is a bit of that's the setup you

00:07:19,949 --> 00:07:24,839
can see probably seen the bottom there

00:07:21,120 --> 00:07:27,719
the sensor the laser sensor spinning so

00:07:24,839 --> 00:07:32,279
this is a marble query somewhere in

00:07:27,719 --> 00:07:38,159
Australia and on the results think I

00:07:32,279 --> 00:07:40,399
have a slide with the results where's my

00:07:38,159 --> 00:07:40,399
mouse

00:07:43,140 --> 00:07:55,990
so so so here this is on the bottom

00:07:53,980 --> 00:07:59,740
right here that's what it looks like so

00:07:55,990 --> 00:08:02,080
the final final mapping so yeah the

00:07:59,740 --> 00:08:05,410
advantage of it you can map roofs and

00:08:02,080 --> 00:08:06,610
things that you can't reach or the other

00:08:05,410 --> 00:08:08,620
side on the other side if you have

00:08:06,610 --> 00:08:12,510
overhangs and things like that it's a

00:08:08,620 --> 00:08:16,990
bit harder to get a helicopter there but

00:08:12,510 --> 00:08:21,160
so in this case as I said before we have

00:08:16,990 --> 00:08:23,140
the IMU driver that's also modified and

00:08:21,160 --> 00:08:26,140
have a custom driver for the ego

00:08:23,140 --> 00:08:31,750
quadcopter and that allows the control

00:08:26,140 --> 00:08:33,219
flight from ross and ground station

00:08:31,750 --> 00:08:35,320
communication that sends data to ross

00:08:33,219 --> 00:08:36,969
and they command the computer ground

00:08:35,320 --> 00:08:39,760
computer everything is using our vids

00:08:36,969 --> 00:08:41,950
there so Ross is definitely very very

00:08:39,760 --> 00:08:44,500
handy in this project so we also have

00:08:41,950 --> 00:08:48,370
other projects XO pod robot for example

00:08:44,500 --> 00:08:50,710
when doing time that uses a raw CPI for

00:08:48,370 --> 00:08:54,310
efficient path planning navigation and

00:08:50,710 --> 00:08:56,260
trajectory so that's one of the active

00:08:54,310 --> 00:08:58,360
areas in the lab that my friend my

00:08:56,260 --> 00:09:01,540
colleague Naveen de kitaj has been

00:08:58,360 --> 00:09:03,370
working on and this is the one of the

00:09:01,540 --> 00:09:06,250
projects that I work a lot with myself

00:09:03,370 --> 00:09:08,290
it's the Gator project we have a camera

00:09:06,250 --> 00:09:09,940
stay repair for vision who coolies range

00:09:08,290 --> 00:09:13,120
sensors and a few other sensors there

00:09:09,940 --> 00:09:15,790
there with put and remove so we use a

00:09:13,120 --> 00:09:20,320
lot of octa map I think most people who

00:09:15,790 --> 00:09:22,840
use Ross have heard of it and 3d three

00:09:20,320 --> 00:09:24,580
degrees of freedom localization on 3d

00:09:22,840 --> 00:09:28,570
point cloud using a humanoid

00:09:24,580 --> 00:09:31,470
localization package and we do lots of

00:09:28,570 --> 00:09:34,060
sensor fusion using the robot poles

00:09:31,470 --> 00:09:36,610
extended Kalman filter package I think

00:09:34,060 --> 00:09:40,930
in this case we use a wheel and visual

00:09:36,610 --> 00:09:42,790
and I am used for that so you can see

00:09:40,930 --> 00:09:44,710
some of the trajectories there one thing

00:09:42,790 --> 00:09:47,950
that we've been doing a lot is obstacle

00:09:44,710 --> 00:09:49,870
detection with Ross where we estimate

00:09:47,950 --> 00:09:52,540
ground planes and things like that and

00:09:49,870 --> 00:09:54,760
for to detect objects and

00:09:52,540 --> 00:09:57,460
the stereo image processing and all the

00:09:54,760 --> 00:10:00,490
Ellis Ross are extremely handy for that

00:09:57,460 --> 00:10:02,920
I think no no no if who has who works

00:10:00,490 --> 00:10:06,180
with this topic here but we've been

00:10:02,920 --> 00:10:09,190
found been finding it very very handy so

00:10:06,180 --> 00:10:11,800
we from the three point clouds out of

00:10:09,190 --> 00:10:14,230
those packages extract the EMS and get

00:10:11,800 --> 00:10:16,840
ground plane estimations to detect

00:10:14,230 --> 00:10:18,370
obstacles in a clever way this hasn't

00:10:16,840 --> 00:10:20,290
been published yet so I'm not going to

00:10:18,370 --> 00:10:22,240
the details of the other parts of the

00:10:20,290 --> 00:10:24,520
algorithm that we do here but yeah

00:10:22,240 --> 00:10:27,790
that's another example of how we've been

00:10:24,520 --> 00:10:29,230
using r us and our projects a lot of

00:10:27,790 --> 00:10:32,920
sensor fusion as well with hyper

00:10:29,230 --> 00:10:37,750
spectral thermal I'm use lighter so this

00:10:32,920 --> 00:10:39,130
this guy here this robot has sorry can I

00:10:37,750 --> 00:10:42,310
can see the point on my screen but you

00:10:39,130 --> 00:10:45,030
can see there I'm sorry so um has lots

00:10:42,310 --> 00:10:51,220
of things that we use the sensor fusion

00:10:45,030 --> 00:10:52,750
capabilities of Ross for that and lots

00:10:51,220 --> 00:10:55,930
of things for our phase for data set

00:10:52,750 --> 00:11:02,520
visualization and rasp I am Matt Matt

00:10:55,930 --> 00:11:04,810
plot lib for 2d and also 3d data so um

00:11:02,520 --> 00:11:09,220
yeah that's another example of another

00:11:04,810 --> 00:11:11,590
project their interest of time I think

00:11:09,220 --> 00:11:15,880
ago nice oh no this is the South robot

00:11:11,590 --> 00:11:18,880
so this robot we have the goal is to

00:11:15,880 --> 00:11:20,530
walk around the environment and only

00:11:18,880 --> 00:11:23,490
move to detect objects we have thermal

00:11:20,530 --> 00:11:26,890
cameras on it only move when it's

00:11:23,490 --> 00:11:28,360
adequate to move ok so it's sensing the

00:11:26,890 --> 00:11:31,690
environment when there are noises and

00:11:28,360 --> 00:11:33,850
all the types of like birds singing or

00:11:31,690 --> 00:11:37,840
anything like that so we move so it

00:11:33,850 --> 00:11:41,410
doesn't distract so much wildlife so the

00:11:37,840 --> 00:11:43,740
goal of this is just to be unseen such

00:11:41,410 --> 00:11:46,170
that it kind of offers camouflage and

00:11:43,740 --> 00:11:51,010
but the goal here is just for

00:11:46,170 --> 00:11:54,000
environmental monitoring ok so that's

00:11:51,010 --> 00:11:56,230
another platform there with Hoku use and

00:11:54,000 --> 00:11:58,540
grasshopper cameras we developed

00:11:56,230 --> 00:12:02,130
actually my friend payment wrote most of

00:11:58,540 --> 00:12:05,050
it a bit more time with them grasshopper

00:12:02,130 --> 00:12:06,300
point grey not grasshopper actually

00:12:05,050 --> 00:12:11,010
point grey

00:12:06,300 --> 00:12:12,750
camera driver using Ross and it's it's a

00:12:11,010 --> 00:12:15,780
very very good package that's written

00:12:12,750 --> 00:12:17,400
and I use it myself a lot and the

00:12:15,780 --> 00:12:20,460
miracle camera there it's a thermal

00:12:17,400 --> 00:12:23,160
camera we also wrote package Steve vidas

00:12:20,460 --> 00:12:26,610
who is a joint p he was a joint PhD with

00:12:23,160 --> 00:12:28,800
CSIRO and QT he wrote a very nice

00:12:26,610 --> 00:12:30,750
package I'm gonna show you the details

00:12:28,800 --> 00:12:37,220
of the package later for thermal for

00:12:30,750 --> 00:12:39,840
thermal cameras can you skip that so

00:12:37,220 --> 00:12:41,130
something that our software engineers

00:12:39,840 --> 00:12:42,630
have been working on actually those

00:12:41,130 --> 00:12:47,450
slides were provided by my colleague

00:12:42,630 --> 00:12:50,070
Fred polling is Python but plus numpy

00:12:47,450 --> 00:12:53,130
it's very efficient and simple for

00:12:50,070 --> 00:12:57,200
serial drivers we some of these are some

00:12:53,130 --> 00:13:00,810
of the lasers that use sick and ASI

00:12:57,200 --> 00:13:02,790
forecasts 3d and it's it's fast enough

00:13:00,810 --> 00:13:06,330
for most year drivers device and

00:13:02,790 --> 00:13:08,610
especially vectorized and a good thing

00:13:06,330 --> 00:13:10,880
about it it's has simplified

00:13:08,610 --> 00:13:14,640
communication and it has a MATLAB like

00:13:10,880 --> 00:13:18,090
syntax so it's it's very very easy to

00:13:14,640 --> 00:13:21,390
use and has a simple message parsing and

00:13:18,090 --> 00:13:26,490
with things like strict struct there and

00:13:21,390 --> 00:13:29,820
numpy record array and simple ray

00:13:26,490 --> 00:13:31,860
operations slicing views and easy to

00:13:29,820 --> 00:13:34,380
debug and deploy so that's something

00:13:31,860 --> 00:13:36,390
that I'm they found very very handy and

00:13:34,380 --> 00:13:39,360
I mean I don't know if you have ever

00:13:36,390 --> 00:13:42,720
looked into it but it's definitely worth

00:13:39,360 --> 00:13:45,300
seeing these capabilities the vectorize

00:13:42,720 --> 00:13:47,480
algorithm is is required to fully

00:13:45,300 --> 00:13:52,140
leverage numpy the other hand and

00:13:47,480 --> 00:13:56,100
compared to c++ it's it can be more time

00:13:52,140 --> 00:13:58,950
consuming uh more verbose and less

00:13:56,100 --> 00:14:02,910
understandable so one thing if you have

00:13:58,950 --> 00:14:05,460
little for example mini quad copters for

00:14:02,910 --> 00:14:07,710
example with it's not so suitable for

00:14:05,460 --> 00:14:10,700
low-power device so using bigger systems

00:14:07,710 --> 00:14:14,550
that where power is not really an issue

00:14:10,700 --> 00:14:16,980
so another note here it's just a side

00:14:14,550 --> 00:14:19,279
note what we did before us we had

00:14:16,980 --> 00:14:24,410
something called DDX

00:14:19,279 --> 00:14:26,329
yes ok DDX sorry which is dynamic data

00:14:24,410 --> 00:14:28,069
exchange so we did lots of her projects

00:14:26,329 --> 00:14:31,999
using that and it's actually in his way

00:14:28,069 --> 00:14:35,300
it's extremely similar to Ross and he

00:14:31,999 --> 00:14:38,360
was developing house as well and it has

00:14:35,300 --> 00:14:40,879
had things like the DX record which is

00:14:38,360 --> 00:14:43,639
similar to the Ross record and instead

00:14:40,879 --> 00:14:46,100
of having bag files had locked files but

00:14:43,639 --> 00:14:49,279
the main difference is that it's based

00:14:46,100 --> 00:14:53,449
on on shared memory multicast whereas

00:14:49,279 --> 00:14:55,519
Ross is on TCP so there are other

00:14:53,449 --> 00:14:58,490
transport options available in Ross but

00:14:55,519 --> 00:15:02,180
they're not often used and this

00:14:58,490 --> 00:15:05,300
sheerness was very important when our

00:15:02,180 --> 00:15:07,910
processors like the late 90s early 2000s

00:15:05,300 --> 00:15:09,889
I'm sorry were not very powerful for

00:15:07,910 --> 00:15:11,300
example we had I wasn't there yet but

00:15:09,889 --> 00:15:14,870
was talking to the software engineers

00:15:11,300 --> 00:15:17,740
about it had a Pentium 266 for lasers

00:15:14,870 --> 00:15:20,749
and cameras so in this type of scenario

00:15:17,740 --> 00:15:23,269
efficiency is very very important so

00:15:20,749 --> 00:15:25,279
Ross is sorry DX is available online as

00:15:23,269 --> 00:15:28,519
well under package called spring it's on

00:15:25,279 --> 00:15:30,379
the cs arrow on our website it's open

00:15:28,519 --> 00:15:35,000
source and some of our project we

00:15:30,379 --> 00:15:38,959
combine Ross with EDX depending on on

00:15:35,000 --> 00:15:41,720
the on what we want and as an example in

00:15:38,959 --> 00:15:44,720
this project here the hmc project this

00:15:41,720 --> 00:15:49,550
is I worked on this with this vehicle we

00:15:44,720 --> 00:15:51,259
combined Ross and DDX a lot for various

00:15:49,550 --> 00:15:54,170
reasons and all these other projects

00:15:51,259 --> 00:15:56,300
they're all big big automated vehicles

00:15:54,170 --> 00:15:59,300
that were done in the mid 2000s and they

00:15:56,300 --> 00:16:05,420
all all based on d DX where when Ross

00:15:59,300 --> 00:16:07,910
wasn't around so let me just keep that

00:16:05,420 --> 00:16:09,980
so heat wave that's probably the last

00:16:07,910 --> 00:16:11,809
I'm running out of time here so this is

00:16:09,980 --> 00:16:14,779
a thermal mapping system you can see

00:16:11,809 --> 00:16:16,910
there's a connect like excellent sensor

00:16:14,779 --> 00:16:19,910
and a thermal camera there and it

00:16:16,910 --> 00:16:22,490
provides maps like that a 3d color model

00:16:19,910 --> 00:16:24,980
here on the left hand side you can see

00:16:22,490 --> 00:16:27,559
the RGB value on the right hand side you

00:16:24,980 --> 00:16:28,939
can see the thermal thermal model in 3d

00:16:27,559 --> 00:16:30,949
so it's good for inspection thorough

00:16:28,939 --> 00:16:32,560
inspection reconstruction of things for

00:16:30,949 --> 00:16:34,420
energy saving and

00:16:32,560 --> 00:16:35,710
and well any other things already can

00:16:34,420 --> 00:16:38,950
think we're thermal mapping would be

00:16:35,710 --> 00:16:42,190
handy for this I was mentioning a

00:16:38,950 --> 00:16:44,800
thermal camera Russ package before wrote

00:16:42,190 --> 00:16:46,390
by Steve itís you can pick me can find

00:16:44,800 --> 00:16:48,250
it there if you thermal cameras it's

00:16:46,390 --> 00:16:51,790
definitely we're checking out it's very

00:16:48,250 --> 00:16:55,630
handy of course free and I've used a lot

00:16:51,790 --> 00:16:58,270
myself it's very very good now it's just

00:16:55,630 --> 00:17:00,880
it's good for the miracle cameras for

00:16:58,270 --> 00:17:03,520
the thermal cameras so yeah we're

00:17:00,880 --> 00:17:09,400
checking out if you feel like just going

00:17:03,520 --> 00:17:15,520
to put my last video here oh don't heat

00:17:09,400 --> 00:17:17,650
wave okay so this is the video

00:17:15,520 --> 00:17:20,829
illustrating the mapping so that's part

00:17:17,650 --> 00:17:22,660
of the package as well and we're just

00:17:20,829 --> 00:17:27,490
trying to for example this structure

00:17:22,660 --> 00:17:30,390
find where what is when hotter and

00:17:27,490 --> 00:17:33,630
colder basically but let's use used its

00:17:30,390 --> 00:17:36,070
well good for if you want to identify

00:17:33,630 --> 00:17:38,830
thermal leaking spots or things there

00:17:36,070 --> 00:17:43,179
our hot button shouldn't be and as I

00:17:38,830 --> 00:17:47,730
said before energy inspection so see how

00:17:43,179 --> 00:17:47,730
much time the video is almost finished

00:17:49,440 --> 00:17:54,040
yeah so this is an example you should

00:17:52,810 --> 00:18:03,340
show you the funnest structure in the

00:17:54,040 --> 00:18:05,679
end so you can see there on the

00:18:03,340 --> 00:18:08,020
right-hand corner on the lower right

00:18:05,679 --> 00:18:11,070
hand corner my friend doing the mapping

00:18:08,020 --> 00:18:15,270
somebody was filming yeah and that's

00:18:11,070 --> 00:18:15,270
it's pretty much it for this video and

00:18:16,770 --> 00:18:21,970
okay that's that's it for now I have a

00:18:20,110 --> 00:18:24,429
few more slides if anybody interested I

00:18:21,970 --> 00:18:27,100
can share more more things about it but

00:18:24,429 --> 00:18:29,230
in the interest of time I think I should

00:18:27,100 --> 00:18:32,280
stop I'd like to thank you once again

00:18:29,230 --> 00:18:35,020
for checking out what we're doing in

00:18:32,280 --> 00:18:37,860
thanks again and any questions I'll be

00:18:35,020 --> 00:18:37,860

YouTube URL: https://www.youtube.com/watch?v=19lhItspoeU


