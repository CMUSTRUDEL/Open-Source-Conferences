Title: Lightning Talks ROSCon 2015 Hamburg Day 1
Publication date: 2015-12-08
Playlist: ROSCon 2015
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2015 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:04,859
first up we've got Victor from early

00:00:03,330 --> 00:00:08,460
robotics you saw earlier and he's going

00:00:04,859 --> 00:00:13,170
to talk a little bit further thank you

00:00:08,460 --> 00:00:15,750
hi everyone glad to be here so they said

00:00:13,170 --> 00:00:17,699
we just come from edible buttocks small

00:00:15,750 --> 00:00:20,880
startup based in in Spain in the north

00:00:17,699 --> 00:00:23,970
of Spain and about a year ago we started

00:00:20,880 --> 00:00:27,359
creating these embedded devices that we

00:00:23,970 --> 00:00:30,390
call brains that hope to help people

00:00:27,359 --> 00:00:32,700
making robots so we had this vision and

00:00:30,390 --> 00:00:34,320
we still believe it that the future of

00:00:32,700 --> 00:00:36,989
commercial robotics wouldn't be about

00:00:34,320 --> 00:00:39,360
these humanoids of hundreds of thousands

00:00:36,989 --> 00:00:43,829
or thousands of euros but about low-cost

00:00:39,360 --> 00:00:46,500
opened a linux-based robots so we

00:00:43,829 --> 00:00:49,680
created pretty much a tapering one we

00:00:46,500 --> 00:00:51,629
already sold a few hundreds of those and

00:00:49,680 --> 00:00:54,210
now we are sort of like introducing le

00:00:51,629 --> 00:00:58,050
brain to which is based on the Raspberry

00:00:54,210 --> 00:01:02,070
Pi 2 again for an affordable price in

00:00:58,050 --> 00:01:05,189
open source and open hardware base now

00:01:02,070 --> 00:01:07,020
on people has built quite a few

00:01:05,189 --> 00:01:09,240
different robots and drones over last

00:01:07,020 --> 00:01:11,040
year with early brain so we're really

00:01:09,240 --> 00:01:13,680
looking forward to what's going to

00:01:11,040 --> 00:01:16,110
happen with these brains we deliver in

00:01:13,680 --> 00:01:20,780
the following year one thing you've seen

00:01:16,110 --> 00:01:23,970
today is early spider which is this

00:01:20,780 --> 00:01:26,130
spider like drone yes it has six legs we

00:01:23,970 --> 00:01:29,100
know spiders have eight legs we already

00:01:26,130 --> 00:01:32,310
know that it's just a matter of course

00:01:29,100 --> 00:01:35,070
and also trying to bring you a robot

00:01:32,310 --> 00:01:37,619
that actually has a great price so you

00:01:35,070 --> 00:01:39,270
can get it on IndieGoGo right now for

00:01:37,619 --> 00:01:41,579
three hundred ninety nine dollars and

00:01:39,270 --> 00:01:44,130
it's going to arrive to your houses or

00:01:41,579 --> 00:01:47,610
to your research labs on December so for

00:01:44,130 --> 00:01:50,880
Christmas honestly we we did a lot of

00:01:47,610 --> 00:01:53,670
work to try to put it as low cost and as

00:01:50,880 --> 00:01:54,869
affordable as possible in the booth you

00:01:53,670 --> 00:01:56,009
can come over and you can check the

00:01:54,869 --> 00:01:58,350
instructions we're going to release

00:01:56,009 --> 00:02:00,030
manuals on how to hack it how to do

00:01:58,350 --> 00:02:02,280
pretty much everything there's people in

00:02:00,030 --> 00:02:05,070
our team already creating Ross two

00:02:02,280 --> 00:02:08,129
packages so our aim is to really support

00:02:05,070 --> 00:02:10,800
the work that these fantastic guys at

00:02:08,129 --> 00:02:13,319
the OS RF are doing and of course you

00:02:10,800 --> 00:02:13,560
who are definitely the ones that are

00:02:13,319 --> 00:02:15,480
going

00:02:13,560 --> 00:02:22,260
to define what's going to happen next in

00:02:15,480 --> 00:02:24,780
robotics thank you thank you very much

00:02:22,260 --> 00:02:27,569
Victor next up we've got Simon from

00:02:24,780 --> 00:02:39,650
local from robot looks and on deck we

00:02:27,569 --> 00:02:39,650
have Andre s we will try to do this year

00:02:40,220 --> 00:02:49,590
okay yep okay let's just hope the slides

00:02:43,019 --> 00:02:52,110
thank you um does anyone speak sorry

00:02:49,590 --> 00:02:55,799
whose laptop is lower left corner okay

00:02:52,110 --> 00:02:58,650
there it is awesome Mike Microsoft that

00:02:55,799 --> 00:03:01,680
was completely unexpected okay thank you

00:02:58,650 --> 00:03:04,650
so I've been CEO and CTO of a string of

00:03:01,680 --> 00:03:06,840
startups but I'm here as a novice in the

00:03:04,650 --> 00:03:09,060
world of robotics I'm going to give the

00:03:06,840 --> 00:03:11,310
novices perspective now I started as a

00:03:09,060 --> 00:03:13,410
developer when I was 15 years old when i

00:03:11,310 --> 00:03:15,810
wrote a video game and sold it to virgin

00:03:13,410 --> 00:03:17,940
so this is me at 15 with the world's

00:03:15,810 --> 00:03:20,340
worst fashion sense but it was great

00:03:17,940 --> 00:03:22,160
being a teenager with money now I could

00:03:20,340 --> 00:03:24,859
do that because I had a home computer

00:03:22,160 --> 00:03:28,200
which was an entry level platform slide

00:03:24,859 --> 00:03:31,530
which bridge the gap between lowland

00:03:28,200 --> 00:03:34,470
cheap electronic kits and between super

00:03:31,530 --> 00:03:36,480
expensive systems slide so it enabled me

00:03:34,470 --> 00:03:38,190
to start coding and then to progress

00:03:36,480 --> 00:03:40,620
quickly to writing professional software

00:03:38,190 --> 00:03:42,959
let's go what is the equivalent for

00:03:40,620 --> 00:03:45,359
robotics in robotics we've got toys

00:03:42,959 --> 00:03:47,489
we've got kids with simple software and

00:03:45,359 --> 00:03:49,200
we've got super expensive robots at the

00:03:47,489 --> 00:03:51,690
top but we're missing something bridges

00:03:49,200 --> 00:03:55,230
the gap I'm clear that it has to run

00:03:51,690 --> 00:03:56,639
Ross in april i started i sold my last

00:03:55,230 --> 00:03:58,920
start up but i began playing with

00:03:56,639 --> 00:04:00,930
robotics and i found it's much harder to

00:03:58,920 --> 00:04:03,569
get started than I formed have the video

00:04:00,930 --> 00:04:06,269
up the first thing we need is we need

00:04:03,569 --> 00:04:08,100
rose to install easily on cheap hardware

00:04:06,269 --> 00:04:09,480
and it's great to see the work that

00:04:08,100 --> 00:04:12,329
canonical in earlier doing in that

00:04:09,480 --> 00:04:15,930
respect the second thing is we need a

00:04:12,329 --> 00:04:18,690
better UI than a video works can you

00:04:15,930 --> 00:04:20,669
maximize it so what we've got here is a

00:04:18,690 --> 00:04:23,820
web-based UI which connects to Ross

00:04:20,669 --> 00:04:25,070
running on a small robot its web base of

00:04:23,820 --> 00:04:26,930
it

00:04:25,070 --> 00:04:28,940
so you can control it remotely you don't

00:04:26,930 --> 00:04:30,830
have to configure IPS the two blue

00:04:28,940 --> 00:04:32,510
circles or Ross nodes running on the

00:04:30,830 --> 00:04:34,820
Raspberry Pi which is the orange block

00:04:32,510 --> 00:04:37,250
its publishing subscribing to Ross

00:04:34,820 --> 00:04:39,710
topics which are the gray circles we

00:04:37,250 --> 00:04:41,750
could double-click on any topic and we

00:04:39,710 --> 00:04:44,390
can dive in and we can see the messages

00:04:41,750 --> 00:04:46,460
passing in real time underneath some of

00:04:44,390 --> 00:04:48,830
the topics have got special views or

00:04:46,460 --> 00:04:51,110
multiple views so for instance the red

00:04:48,830 --> 00:04:53,900
cube could be the representation of the

00:04:51,110 --> 00:04:56,210
orientation in space of the robot so we

00:04:53,900 --> 00:04:57,830
can see it as a cube or we can click

00:04:56,210 --> 00:05:00,020
through we can see the text

00:04:57,830 --> 00:05:03,110
representation or we can see a 3d

00:05:00,020 --> 00:05:05,810
transformation now down the bottom we've

00:05:03,110 --> 00:05:09,290
got the command velocity topic which

00:05:05,810 --> 00:05:11,960
controls the robot motors so if we dive

00:05:09,290 --> 00:05:14,600
into that if we had a navigation stack

00:05:11,960 --> 00:05:17,000
on here then this would animate and show

00:05:14,600 --> 00:05:18,740
the progress of the robot but because

00:05:17,000 --> 00:05:21,230
it's also controlled as well as

00:05:18,740 --> 00:05:24,080
visualization we can use the keyboard on

00:05:21,230 --> 00:05:25,940
the on the browser we can generate Ross

00:05:24,080 --> 00:05:28,160
messages send them up to the cloud down

00:05:25,940 --> 00:05:31,040
to the robot scoot the robot around the

00:05:28,160 --> 00:05:33,350
floor finally we've got all the Ross

00:05:31,040 --> 00:05:35,870
packages installed on the pie on the

00:05:33,350 --> 00:05:37,430
left hand side and what we can do so

00:05:35,870 --> 00:05:39,800
we've got object recognition we've got

00:05:37,430 --> 00:05:41,210
navigation stacks everything what we can

00:05:39,800 --> 00:05:43,580
do is we can take one of those Ross

00:05:41,210 --> 00:05:45,770
launch targets we can drag and drop it

00:05:43,580 --> 00:05:47,810
onto the Raspberry Pi that sends a

00:05:45,770 --> 00:05:50,890
message up to the cloud down to the

00:05:47,810 --> 00:05:53,000
robot launches a launches the nodes and

00:05:50,890 --> 00:05:55,490
off we go so it's a way of manipulating

00:05:53,000 --> 00:05:57,860
the debugging robot architectures in

00:05:55,490 --> 00:06:01,060
real time you can see what notes do just

00:05:57,860 --> 00:06:01,060
by putting stuff across

00:06:07,990 --> 00:06:22,520
good for spotty 15 year olds all right

00:06:17,289 --> 00:06:23,560
all right so up we have andreas and do

00:06:22,520 --> 00:06:26,300
talking about robot-assisted surgery

00:06:23,560 --> 00:06:28,849
with Ross where are you and Reyes there

00:06:26,300 --> 00:06:31,940
we are and coming up after that would be

00:06:28,849 --> 00:06:43,340
Andre I believe I pronounced that right

00:06:31,940 --> 00:06:52,490
we did okay close enough I'm just about

00:06:43,340 --> 00:06:57,130
to you want try to go right we'll see

00:06:52,490 --> 00:07:00,169
how this goes all right again okay

00:06:57,130 --> 00:07:02,060
thanks everyone for letting me give this

00:07:00,169 --> 00:07:03,800
lightning talk so what I want to quickly

00:07:02,060 --> 00:07:07,190
talk about is robot-assisted surgery

00:07:03,800 --> 00:07:14,570
using Ross so what we have built next

00:07:07,190 --> 00:07:15,949
slide please is ok um it's a modular

00:07:14,570 --> 00:07:19,009
platform for robot-assisted surgery

00:07:15,949 --> 00:07:21,650
where we integrate all of the different

00:07:19,009 --> 00:07:23,389
devices you have in our room and you

00:07:21,650 --> 00:07:25,520
might want to have in the o.r room of

00:07:23,389 --> 00:07:27,440
the future so that goes from medical

00:07:25,520 --> 00:07:29,750
image processing of course a lot of

00:07:27,440 --> 00:07:32,060
different robot actuators and a lot of

00:07:29,750 --> 00:07:34,909
environmental sensors we have a set up

00:07:32,060 --> 00:07:36,650
with four connect once and now five

00:07:34,909 --> 00:07:38,810
connect tools that are all fused

00:07:36,650 --> 00:07:41,479
together in one gigantic point cloud

00:07:38,810 --> 00:07:43,940
which is registered to each other where

00:07:41,479 --> 00:07:46,669
people are recognized and they get

00:07:43,940 --> 00:07:48,860
tracked and you can realize who is

00:07:46,669 --> 00:07:51,139
around the patient at you our table and

00:07:48,860 --> 00:07:54,469
your robot can move aside to let the

00:07:51,139 --> 00:07:56,990
nurse go to the patient then go back to

00:07:54,469 --> 00:07:59,630
the position it was in next slide please

00:07:56,990 --> 00:08:02,180
so in reality that this looks something

00:07:59,630 --> 00:08:03,979
like this where we have our setup we

00:08:02,180 --> 00:08:06,349
have an art table with different robots

00:08:03,979 --> 00:08:08,930
attached to it and on the ceiling you

00:08:06,349 --> 00:08:12,129
have all kinds of sensors like Marco

00:08:08,930 --> 00:08:14,690
tract markup based tracking systems

00:08:12,129 --> 00:08:17,270
Connect time-of-flight cameras with low

00:08:14,690 --> 00:08:20,120
latency but unfortunately also very low

00:08:17,270 --> 00:08:22,099
resolution we have a projector on the

00:08:20,120 --> 00:08:25,569
ceiling which allows us to do occu

00:08:22,099 --> 00:08:28,340
mented reality also if you count RGB

00:08:25,569 --> 00:08:31,610
LEDs as occu mented reality we have that

00:08:28,340 --> 00:08:33,289
as well and next slide please what are

00:08:31,610 --> 00:08:36,079
we doing with this blood from one

00:08:33,289 --> 00:08:38,800
research project I'm involved in is

00:08:36,079 --> 00:08:41,329
trying to teach a robot how to guide

00:08:38,800 --> 00:08:44,899
endoscope during minimally invasive

00:08:41,329 --> 00:08:47,959
surgery only based on knowledge learned

00:08:44,899 --> 00:08:50,120
from a surgeon and what Russ allows us

00:08:47,959 --> 00:08:53,029
to do is abstract all the widgets are

00:08:50,120 --> 00:08:54,920
not working I guess what Russ allows us

00:08:53,029 --> 00:08:56,660
to do is abstract away from the

00:08:54,920 --> 00:08:59,329
different kinematics so we can use a

00:08:56,660 --> 00:09:02,329
seventh of cuca robot we can use as read

00:08:59,329 --> 00:09:05,240
of medical device we re-engineered and

00:09:02,329 --> 00:09:07,279
re-engineered and russified and all the

00:09:05,240 --> 00:09:10,100
higher-level algorithms can stay the

00:09:07,279 --> 00:09:12,260
same also we can switch between the old

00:09:10,100 --> 00:09:15,769
Kinect system the new Kinect system the

00:09:12,260 --> 00:09:18,260
time-of-flight camera system and all and

00:09:15,769 --> 00:09:21,110
through the you through the interfaces

00:09:18,260 --> 00:09:23,540
we have to find keep our system running

00:09:21,110 --> 00:09:26,209
and do not have to modify everything all

00:09:23,540 --> 00:09:29,120
of the time next slide please so if

00:09:26,209 --> 00:09:31,670
someone wants to discuss medical Ross or

00:09:29,120 --> 00:09:34,190
Ross matical so I just made up that logo

00:09:31,670 --> 00:09:37,279
that doesn't exist officially please

00:09:34,190 --> 00:09:40,160
come to me and we have also built some

00:09:37,279 --> 00:09:42,230
general purpose frameworks first of all

00:09:40,160 --> 00:09:44,890
our needs advanced Ross Network

00:09:42,230 --> 00:09:47,149
introspection which be centrally

00:09:44,890 --> 00:09:49,160
acquires metadata about your

00:09:47,149 --> 00:09:51,350
communication in your network and

00:09:49,160 --> 00:09:52,910
provides essentially where you can test

00:09:51,350 --> 00:09:55,040
whether your network is in a healthy

00:09:52,910 --> 00:09:58,190
state and that has been very valuable

00:09:55,040 --> 00:10:01,750
for us to provide a robust system while

00:09:58,190 --> 00:10:01,750
maintaining the flexibility thank you

00:10:02,649 --> 00:10:08,449
thank you very much next up we have

00:10:06,259 --> 00:10:12,939
Andre speaking about the shadow robots

00:10:08,449 --> 00:10:12,939
build tools and on deck we have a bow

00:10:13,779 --> 00:10:21,290
thank you so probably everyone had about

00:10:19,279 --> 00:10:23,360
shadow almost most of the people had

00:10:21,290 --> 00:10:25,249
about shadow robot's dick stereos hand

00:10:23,360 --> 00:10:27,529
which you can see today at the

00:10:25,249 --> 00:10:30,079
exhibition but I would be talking today

00:10:27,529 --> 00:10:33,889
about tool which we are using internally

00:10:30,079 --> 00:10:36,139
so was this very interesting tool so

00:10:33,889 --> 00:10:38,240
presenter before me it was a

00:10:36,139 --> 00:10:40,670
presentation about built form it's

00:10:38,240 --> 00:10:42,920
actually from our perspective it's very

00:10:40,670 --> 00:10:45,740
terrible experience you have to install

00:10:42,920 --> 00:10:47,449
a lot of different software service of

00:10:45,740 --> 00:10:51,079
like three services you have to install

00:10:47,449 --> 00:10:54,019
this is for we have developed platform

00:10:51,079 --> 00:10:56,329
which requires only five minute of your

00:10:54,019 --> 00:10:59,240
time to make continuous integration

00:10:56,329 --> 00:11:02,019
working on any of your project which is

00:10:59,240 --> 00:11:04,579
Ross based and catch convinced yet so

00:11:02,019 --> 00:11:07,449
with solution so currently you can see

00:11:04,579 --> 00:11:10,160
one of our projects which is indicating

00:11:07,449 --> 00:11:11,809
indicated statuses of the belt you don't

00:11:10,160 --> 00:11:13,970
have to set up any server on your

00:11:11,809 --> 00:11:17,360
infrastructure you just need to create

00:11:13,970 --> 00:11:20,569
one file in other cases shapeable llamo

00:11:17,360 --> 00:11:22,910
or you can or circle young any of them

00:11:20,569 --> 00:11:26,689
in income or complex scenario you

00:11:22,910 --> 00:11:31,519
integrate create additional file so next

00:11:26,689 --> 00:11:33,499
like this and during your github PRS or

00:11:31,519 --> 00:11:37,369
comments you can see the status of the

00:11:33,499 --> 00:11:40,059
build so which which can be those and it

00:11:37,369 --> 00:11:45,610
can be achieved by five minutes of

00:11:40,059 --> 00:11:49,329
editing one text file so our open source

00:11:45,610 --> 00:11:52,339
yes next slide so here you can see a

00:11:49,329 --> 00:11:54,759
upper link is currently temporary not

00:11:52,339 --> 00:11:58,549
working so this refer to the github

00:11:54,759 --> 00:12:01,639
verses which has also Vicky documents

00:11:58,549 --> 00:12:03,649
inside so you can read and see the video

00:12:01,639 --> 00:12:05,809
how to do it so five minutes of your

00:12:03,649 --> 00:12:08,449
time and you will have fully continuous

00:12:05,809 --> 00:12:10,549
integration tools up and running you can

00:12:08,449 --> 00:12:12,379
select what you want for example you

00:12:10,549 --> 00:12:13,880
want to cut the style check you can just

00:12:12,379 --> 00:12:16,760
write one word

00:12:13,880 --> 00:12:18,650
one include one module if you want to do

00:12:16,760 --> 00:12:20,540
a codec coverage with one additional

00:12:18,650 --> 00:12:23,210
word as well you need testing build

00:12:20,540 --> 00:12:26,660
everything will be done like out of box

00:12:23,210 --> 00:12:29,240
you don't need to install anything yeah

00:12:26,660 --> 00:12:32,120
so it's very easy for a lot of

00:12:29,240 --> 00:12:34,960
documentation with 0 and after

00:12:32,120 --> 00:12:38,330
commutation so this is dr. based and

00:12:34,960 --> 00:12:40,970
yeah so if you have any questions you

00:12:38,330 --> 00:12:43,640
can find me either here or near the

00:12:40,970 --> 00:12:52,130
stand of the shadow robot in the

00:12:43,640 --> 00:12:54,230
exhibition hall thank you very much all

00:12:52,130 --> 00:12:58,490
right next up we've got both speaking

00:12:54,230 --> 00:13:02,020
about integrating dds into ross and next

00:12:58,490 --> 00:13:02,020
up after that is dariush

00:13:16,649 --> 00:13:23,279
okay hello everybody I'd like to

00:13:19,079 --> 00:13:25,439
introduce micros TRT a roast a blast

00:13:23,279 --> 00:13:29,220
blast candle when modified which

00:13:25,439 --> 00:13:32,279
integrate tds in two rows rows one while

00:13:29,220 --> 00:13:34,439
TDs and rose well as we know rose to

00:13:32,279 --> 00:13:37,319
will be based on videos however

00:13:34,439 --> 00:13:39,300
according to our SIA close one will

00:13:37,319 --> 00:13:42,389
continue to be released for a long time

00:13:39,300 --> 00:13:44,309
some dental packages will steal state

00:13:42,389 --> 00:13:48,449
and rose one for a while because they

00:13:44,309 --> 00:13:53,089
also benefit from dds ok the next this

00:13:48,449 --> 00:13:55,740
away we provide a nimbly and

00:13:53,089 --> 00:13:58,079
implementation name that microbes trt

00:13:55,740 --> 00:14:00,389
which is a modified response a plus

00:13:58,079 --> 00:14:03,839
glass candle or its main features

00:14:00,389 --> 00:14:07,170
include existing Rosa applications need

00:14:03,839 --> 00:14:10,769
no modification by just requires and/or

00:14:07,170 --> 00:14:13,529
recompile the road safety p package the

00:14:10,769 --> 00:14:15,660
existing rose applications can easily

00:14:13,529 --> 00:14:19,139
take advantage of the male cast and

00:14:15,660 --> 00:14:22,649
other features of dds and the second one

00:14:19,139 --> 00:14:25,620
is we add some extra api's which

00:14:22,649 --> 00:14:27,839
supports time constraint in magical

00:14:25,620 --> 00:14:30,749
delivery newly added a new style

00:14:27,839 --> 00:14:33,749
real-time message pops up guys which can

00:14:30,749 --> 00:14:36,569
surpass specified such as head for

00:14:33,749 --> 00:14:40,679
transport priority later the budget and

00:14:36,569 --> 00:14:44,069
other POS parameters and the preferred

00:14:40,679 --> 00:14:46,769
transport means can be specified and in

00:14:44,069 --> 00:14:50,009
it it's interoperable with the official

00:14:46,769 --> 00:14:51,959
road safety Vero's py cot inverter of

00:14:50,009 --> 00:15:00,269
the smart protocol negotiation and

00:14:51,959 --> 00:15:02,759
selection ok next and that is we also

00:15:00,269 --> 00:15:06,179
conducted some a variation in our lab

00:15:02,759 --> 00:15:09,589
this is the result because of all the

00:15:06,179 --> 00:15:12,360
time limit I will not touch the details

00:15:09,589 --> 00:15:15,059
basically in terms of scalability and

00:15:12,360 --> 00:15:17,879
the transport priority it has seen

00:15:15,059 --> 00:15:21,149
significant advantage over the official

00:15:17,879 --> 00:15:23,350
roast corn and more details and examples

00:15:21,149 --> 00:15:27,310
can be found conjugate

00:15:23,350 --> 00:15:31,360
and next page okay another work of our

00:15:27,310 --> 00:15:33,730
team tobacco's itt which is a modified

00:15:31,360 --> 00:15:36,160
asleep last glass candle support hard

00:15:33,730 --> 00:15:39,490
real-time message delivery yes single

00:15:36,160 --> 00:15:41,800
computer not a distributing it's a built

00:15:39,490 --> 00:15:44,650
on top of a real-time framework of lane

00:15:41,800 --> 00:15:47,980
use it can be applied in the facial root

00:15:44,650 --> 00:15:50,080
package lace with the name of micros RTT

00:15:47,980 --> 00:15:53,470
it supports both the usual process and

00:15:50,080 --> 00:15:57,900
unit process had a real time Matty to

00:15:53,470 --> 00:15:57,900
derive mataji delivery okay thank you

00:16:02,070 --> 00:16:14,590
alright thank you very much next up we

00:16:04,780 --> 00:16:17,080
have dariush and on deck we have 0 okay

00:16:14,590 --> 00:16:23,260
i'm also talking about the roscoe

00:16:17,080 --> 00:16:25,810
modification and what i did is i added

00:16:23,260 --> 00:16:29,320
another transport system using shared

00:16:25,810 --> 00:16:31,780
memory slide please ok how does russ to

00:16:29,320 --> 00:16:33,540
you today you create a message then you

00:16:31,780 --> 00:16:36,040
publish that message on the note handle

00:16:33,540 --> 00:16:38,410
then the raw score serializing that

00:16:36,040 --> 00:16:40,900
message sending it over loopback network

00:16:38,410 --> 00:16:43,240
and easter rising it again and you call

00:16:40,900 --> 00:16:44,590
that will get it slide please ok what if

00:16:43,240 --> 00:16:46,840
we could do it differently what if you

00:16:44,590 --> 00:16:49,630
could cut out the network transport & Co

00:16:46,840 --> 00:16:52,210
copying and cut out the serialization I

00:16:49,630 --> 00:16:54,190
putting the pointer because you can't

00:16:52,210 --> 00:16:57,780
really be sent a pointer right side

00:16:54,190 --> 00:17:01,300
please well it's not impossible slide

00:16:57,780 --> 00:17:03,760
yes where you can do it there is this

00:17:01,300 --> 00:17:07,510
new shiny Katie boscono messaging system

00:17:03,760 --> 00:17:11,560
which is capable of sending encapsulated

00:17:07,510 --> 00:17:15,310
memory segments using some really fancy

00:17:11,560 --> 00:17:18,300
boost magic one can actually do 0 copy

00:17:15,310 --> 00:17:20,470
of memory between processes slide please

00:17:18,300 --> 00:17:22,990
the riders are added a transport system

00:17:20,470 --> 00:17:25,210
and encapsulated message in anonymous

00:17:22,990 --> 00:17:27,160
files and centers file descriptors

00:17:25,210 --> 00:17:31,480
another subscriber can't go into detail

00:17:27,160 --> 00:17:34,390
side please and we're what works it is 0

00:17:31,480 --> 00:17:37,820
copy it has memory safety unlike

00:17:34,390 --> 00:17:40,940
unlike no pets it has even reference

00:17:37,820 --> 00:17:43,159
counting which is really magic the

00:17:40,940 --> 00:17:45,260
downsides are well it's not completely

00:17:43,159 --> 00:17:48,860
transparent one has to one can't use a

00:17:45,260 --> 00:17:50,919
standard stl vector and string anymore

00:17:48,860 --> 00:17:53,630
one has to switch to boost and container

00:17:50,919 --> 00:17:56,210
but this is easily done in Ross using

00:17:53,630 --> 00:17:58,669
this gen CCP message generation so

00:17:56,210 --> 00:18:00,860
there's not much visibility to the user

00:17:58,669 --> 00:18:02,330
and one has to create a message

00:18:00,860 --> 00:18:04,700
explicitly using something's very

00:18:02,330 --> 00:18:07,760
similar to drew boost make shared I

00:18:04,700 --> 00:18:09,320
called Ross make shared but the only

00:18:07,760 --> 00:18:10,580
really important stuff is in performance

00:18:09,320 --> 00:18:12,289
right i mean the only reason to do this

00:18:10,580 --> 00:18:15,169
share memories and performance and

00:18:12,289 --> 00:18:19,460
fortunately turns out that tcp transport

00:18:15,169 --> 00:18:21,679
is quite performant already so it only

00:18:19,460 --> 00:18:23,029
really it only really makes sense to use

00:18:21,679 --> 00:18:26,779
as if you want to set messages the other

00:18:23,029 --> 00:18:29,059
than they make me half a megabyte where

00:18:26,779 --> 00:18:31,190
most people probably use note let's

00:18:29,059 --> 00:18:34,549
today so that's the reason I never

00:18:31,190 --> 00:18:36,409
submitted a support request because I'm

00:18:34,549 --> 00:18:38,179
not sure how many how much use cases

00:18:36,409 --> 00:18:40,190
there especially now response to coming

00:18:38,179 --> 00:18:42,679
out anyway the code Assange it hub and

00:18:40,190 --> 00:18:46,090
if anyone wants to talk to me about that

00:18:42,679 --> 00:18:46,090
I'll be happy to thanks

00:18:51,560 --> 00:19:02,190
all right thank you very much Cyril oh

00:18:55,070 --> 00:19:06,450
this looks exciting it and on deck we

00:19:02,190 --> 00:19:09,600
have Pablo so this has open source

00:19:06,450 --> 00:19:14,100
android and that's a lot of parts okay

00:19:09,600 --> 00:19:16,280
this let's all hope it's still working

00:19:14,100 --> 00:19:16,280
here

00:19:34,560 --> 00:19:39,520
alright this this is really risky here

00:19:36,880 --> 00:19:42,520
three minute demo which you want me hold

00:19:39,520 --> 00:19:44,230
the mic I can hold the mic okay so

00:19:42,520 --> 00:19:47,130
welcome everyone and see Rudolph from

00:19:44,230 --> 00:19:50,530
the robots to do scene with Max on motor

00:19:47,130 --> 00:19:57,700
so I'm going to present our project open

00:19:50,530 --> 00:20:00,370
source android so so what is also so we

00:19:57,700 --> 00:20:03,250
we mainly focus on hardware so as you

00:20:00,370 --> 00:20:05,520
can see like this arm so it's like a

00:20:03,250 --> 00:20:08,290
truly complainant you manual robots and

00:20:05,520 --> 00:20:12,780
we also provide like a software so

00:20:08,290 --> 00:20:17,140
everything written on ross like a basic

00:20:12,780 --> 00:20:19,870
communication layer and also simulation

00:20:17,140 --> 00:20:22,300
and we would like to like to share so

00:20:19,870 --> 00:20:28,000
it's open source so to share with other

00:20:22,300 --> 00:20:37,660
ross community to get to add more

00:20:28,000 --> 00:20:39,700
software and use this so why why this

00:20:37,660 --> 00:20:42,820
kind of robot so it's a completely

00:20:39,700 --> 00:20:45,640
different approach in robotics so it's

00:20:42,820 --> 00:20:48,310
based as you can see on human anatomy so

00:20:45,640 --> 00:20:52,000
like every yr you see here correspond to

00:20:48,310 --> 00:20:55,960
muscle in the body so the it's called

00:20:52,000 --> 00:20:57,700
like s EA so series elastic actuators so

00:20:55,960 --> 00:21:02,380
it can store energy in the elasticity of

00:20:57,700 --> 00:21:04,270
the system and its yeah its opposite to

00:21:02,380 --> 00:21:06,430
win destroy robots in the sense that

00:21:04,270 --> 00:21:09,160
it's very compliant and soft and elastic

00:21:06,430 --> 00:21:12,070
so you can see it's much safer to use

00:21:09,160 --> 00:21:16,570
with in urine environment for example

00:21:12,070 --> 00:21:19,300
and our goal is really to fill the gap

00:21:16,570 --> 00:21:22,120
in the robotics hardware and to have

00:21:19,300 --> 00:21:25,060
more to provide like an open research

00:21:22,120 --> 00:21:28,330
platform for the labs in a research in

00:21:25,060 --> 00:21:30,430
robotics around the world and so this

00:21:28,330 --> 00:21:34,720
one is a prototype and we aim to other

00:21:30,430 --> 00:21:38,770
like a fully spruce reprinted for the

00:21:34,720 --> 00:21:40,000
next generation so in conclusion if you

00:21:38,770 --> 00:21:41,800
want to know more about us you can

00:21:40,000 --> 00:21:45,760
google the ross to do you will find all

00:21:41,800 --> 00:21:47,560
this website YouTube will so have a

00:21:45,760 --> 00:21:49,900
project classics like your 3d printing

00:21:47,560 --> 00:21:52,600
hand you can follow the tutorial to

00:21:49,900 --> 00:21:56,080
built-in to add to your project and we

00:21:52,600 --> 00:21:59,200
have also repositories and the websites

00:21:56,080 --> 00:22:01,390
on the construction so you can come to

00:21:59,200 --> 00:22:15,100
see me and talk more about it after if

00:22:01,390 --> 00:22:17,080
you want thank you for attention all

00:22:15,100 --> 00:22:22,450
right thank you very much next up we

00:22:17,080 --> 00:22:28,750
have Pablo and on deck is Winston thank

00:22:22,450 --> 00:22:32,470
you so and my name is Pablo caleta war

00:22:28,750 --> 00:22:36,550
came from Hawaii Pam in and i'm going to

00:22:32,470 --> 00:22:39,340
introduce the work we the outcome of the

00:22:36,550 --> 00:22:42,010
war way with eating the last time so

00:22:39,340 --> 00:22:44,800
which is the robot muffin interface so

00:22:42,010 --> 00:22:48,340
this is interface is a common effort for

00:22:44,800 --> 00:22:53,800
standardized they access to the specific

00:22:48,340 --> 00:22:56,140
capabilities of the robot what we are

00:22:53,800 --> 00:22:58,420
implementing as topic so the idea is to

00:22:56,140 --> 00:23:00,550
access to the specific functions of the

00:22:58,420 --> 00:23:05,650
robot for example impedance controlling

00:23:00,550 --> 00:23:08,680
in the iowa or yeah just the seven

00:23:05,650 --> 00:23:10,240
degree of free and well the question is

00:23:08,680 --> 00:23:14,350
why a new interface because it's

00:23:10,240 --> 00:23:16,960
required by the industry so and then and

00:23:14,350 --> 00:23:19,480
also because a lot of people which are

00:23:16,960 --> 00:23:22,150
no experience it with ross or even with

00:23:19,480 --> 00:23:24,820
programming need to have access to these

00:23:22,150 --> 00:23:27,760
capabilities and in AC way they cannot

00:23:24,820 --> 00:23:30,220
not afford to to get used to the sieve

00:23:27,760 --> 00:23:33,520
or two simulations or there for the

00:23:30,220 --> 00:23:35,620
whole ross controlling and so what we

00:23:33,520 --> 00:23:37,930
are providing is a format independent

00:23:35,620 --> 00:23:40,930
message system so the semantics is in

00:23:37,930 --> 00:23:43,960
the message not in the format and this

00:23:40,930 --> 00:23:48,370
allows our and to change the content and

00:23:43,960 --> 00:23:51,490
make to have the flexibility and and to

00:23:48,370 --> 00:23:54,010
extend the commands very easily with new

00:23:51,490 --> 00:23:56,690
from the analogies and also and we can

00:23:54,010 --> 00:23:59,900
work directly with the robot and we can

00:23:56,690 --> 00:24:03,020
change the the message depending on

00:23:59,900 --> 00:24:06,830
their requirements in the real time and

00:24:03,020 --> 00:24:09,710
also is ross industrial compliant so it

00:24:06,830 --> 00:24:11,600
doesn't it doesn't replace their Ross

00:24:09,710 --> 00:24:16,490
industrial interface because it's one

00:24:11,600 --> 00:24:19,310
intermediate layer and well we have

00:24:16,490 --> 00:24:23,210
already driver for the you one you are

00:24:19,310 --> 00:24:25,070
10 and 5 and card 16 so this is what we

00:24:23,210 --> 00:24:27,530
want to share with you and we want to

00:24:25,070 --> 00:24:29,810
public it so we can go to the Nexus

00:24:27,530 --> 00:24:33,020
light of very fast so this is the

00:24:29,810 --> 00:24:35,000
example for the ava so Eva requires very

00:24:33,020 --> 00:24:38,060
specific comments so for example this is

00:24:35,000 --> 00:24:40,670
the table the semantic answer is in the

00:24:38,060 --> 00:24:42,800
table format is the same the topic and

00:24:40,670 --> 00:24:46,580
well this is a photo which is one

00:24:42,800 --> 00:24:50,330
example of what we did well also there

00:24:46,580 --> 00:24:52,820
are two parts in the in the system the

00:24:50,330 --> 00:24:55,280
sunrise part with his in Java and the

00:24:52,820 --> 00:24:57,920
Ross driver and we are connected with

00:24:55,280 --> 00:25:02,440
ethernet using like a telnet protocol so

00:24:57,920 --> 00:25:04,960
we can go to next one and also we

00:25:02,440 --> 00:25:09,350
originally program this for internal use

00:25:04,960 --> 00:25:12,410
for europe european project and whether

00:25:09,350 --> 00:25:14,650
we are thinking and we are going to

00:25:12,410 --> 00:25:16,970
publish it in the Rose industrial

00:25:14,650 --> 00:25:21,800
repositories and if you have any

00:25:16,970 --> 00:25:25,270
questions or or so you can direct speak

00:25:21,800 --> 00:25:25,270
with me so thank you very much

00:25:29,530 --> 00:25:36,720
all right thank you very much coming up

00:25:32,230 --> 00:25:36,720
we have Winston and on deck is your Chen

00:25:37,530 --> 00:25:44,860
hello everyone I am Winston Garcia from

00:25:41,620 --> 00:25:46,930
abb corporal reserved from sweden i will

00:25:44,860 --> 00:25:49,420
like to change with you Sondra salsa

00:25:46,930 --> 00:25:53,970
with this for the drum project basic on

00:25:49,420 --> 00:25:53,970
Ross one moment okay

00:26:04,360 --> 00:26:11,650
the clock's not counting that already

00:26:06,580 --> 00:26:20,049
sure there is that nominal Yemen I think

00:26:11,650 --> 00:26:23,679
all right here it is area well we can

00:26:20,049 --> 00:26:26,500
win this next one well the idea is that

00:26:23,679 --> 00:26:28,600
we get all the information in the drop

00:26:26,500 --> 00:26:31,570
on the drum and we send this information

00:26:28,600 --> 00:26:34,510
for a laptop that and we program

00:26:31,570 --> 00:26:36,610
everything on Russ the advantage with

00:26:34,510 --> 00:26:39,460
this is where we can use a modular

00:26:36,610 --> 00:26:42,460
design that means we define different

00:26:39,460 --> 00:26:44,679
node for each block and we have one

00:26:42,460 --> 00:26:46,870
responsible for this node and it's

00:26:44,679 --> 00:26:48,610
really easy to integrate all this

00:26:46,870 --> 00:26:50,440
information because you can see okay you

00:26:48,610 --> 00:26:52,570
are responsible for this node and you

00:26:50,440 --> 00:26:54,280
need to publish this information and in

00:26:52,570 --> 00:26:56,679
parallel you can put another time

00:26:54,280 --> 00:26:58,809
working in this mission and in this blog

00:26:56,679 --> 00:27:00,549
and what's really easy to integrate all

00:26:58,809 --> 00:27:03,340
this information that's one advantage

00:27:00,549 --> 00:27:13,150
for this modular design working on Rose

00:27:03,340 --> 00:27:14,950
next slide one more ok so two files well

00:27:13,150 --> 00:27:18,910
this is like super eyes everything we

00:27:14,950 --> 00:27:22,110
are using this eardrum autonomy and we

00:27:18,910 --> 00:27:25,360
program everything you since a plus plus

00:27:22,110 --> 00:27:29,049
we mainly need two notes one of them is

00:27:25,360 --> 00:27:32,080
for the pose estimator mainly this these

00:27:29,049 --> 00:27:34,750
node do a sensor fusion iterating all

00:27:32,080 --> 00:27:38,470
the onboard sensor with the GPS signals

00:27:34,750 --> 00:27:41,200
the others node is the control system is

00:27:38,470 --> 00:27:43,690
basically a set of PA PID controller to

00:27:41,200 --> 00:27:47,020
provide the final control element to the

00:27:43,690 --> 00:27:50,820
rotors in on the quadcopter and we have

00:27:47,020 --> 00:27:54,790
these frequency of what is 100 Hertz

00:27:50,820 --> 00:27:56,860
next slide this is like summarize their

00:27:54,790 --> 00:27:59,350
post estimation basically we use a

00:27:56,860 --> 00:28:01,690
Kalman filter to do the sensor fortune

00:27:59,350 --> 00:28:03,880
and here you can see the estimation of

00:28:01,690 --> 00:28:05,669
the position of the drone and the

00:28:03,880 --> 00:28:09,970
confident that we have for each point

00:28:05,669 --> 00:28:12,070
here you can see the real 3d data in the

00:28:09,970 --> 00:28:14,330
post with the position of the quadcopter

00:28:12,070 --> 00:28:17,960
the next slide

00:28:14,330 --> 00:28:19,519
you can see the autonomous flight and we

00:28:17,960 --> 00:28:22,399
have implemented a control system

00:28:19,519 --> 00:28:26,510
basically a set of PID controller and

00:28:22,399 --> 00:28:29,360
here you can see their blue line is the

00:28:26,510 --> 00:28:31,940
reference and the red line is the real

00:28:29,360 --> 00:28:33,919
position of the quadcopter and here you

00:28:31,940 --> 00:28:37,309
can see that the system compensation

00:28:33,919 --> 00:28:39,500
wing in this is wes position here we

00:28:37,309 --> 00:28:42,200
have the east west here we have north

00:28:39,500 --> 00:28:44,179
south and we have some Queen in this

00:28:42,200 --> 00:28:46,700
direction and then cuantos it are able

00:28:44,179 --> 00:28:51,409
to compensate everything and here you

00:28:46,700 --> 00:28:54,830
can see a 3d representation of finally

00:28:51,409 --> 00:28:57,470
Ross was really really nice platform to

00:28:54,830 --> 00:29:00,019
input to develop this for you was easy

00:28:57,470 --> 00:29:02,149
to integrate the difference note and was

00:29:00,019 --> 00:29:05,899
really easy to work in parallel for all

00:29:02,149 --> 00:29:08,059
these things next slide if you have any

00:29:05,899 --> 00:29:09,860
question please we don't have to put in

00:29:08,059 --> 00:29:16,580
there often break thank you very much

00:29:09,860 --> 00:29:19,340
for your event coming up with your chin

00:29:16,580 --> 00:29:24,529
on deck is the representative from a

00:29:19,340 --> 00:29:26,809
reputable robotics so hi Ron I'm young

00:29:24,529 --> 00:29:28,700
and I'm part of the Debian robotics team

00:29:26,809 --> 00:29:30,980
together with Leo who's like there as

00:29:28,700 --> 00:29:37,399
well and we are working on bringing Ross

00:29:30,980 --> 00:29:39,799
into DeLeon meaning yes you can put next

00:29:37,399 --> 00:29:41,539
slide all right okay so I think you all

00:29:39,799 --> 00:29:43,639
know this is installation instructions

00:29:41,539 --> 00:29:45,830
from the Ross Ricky patient sorrows and

00:29:43,639 --> 00:29:48,710
you have to do put in the sources list

00:29:45,830 --> 00:29:50,750
the key in sorrows and at the end you

00:29:48,710 --> 00:29:52,940
still have to put in the setup bash to

00:29:50,750 --> 00:29:55,130
get everything set up we want to change

00:29:52,940 --> 00:29:57,110
this next slide so what do you think

00:29:55,130 --> 00:29:59,059
about this user Ubuntu or insert a

00:29:57,110 --> 00:30:02,240
billion if you want to and you do just

00:29:59,059 --> 00:30:04,039
sudo apt-get install Ross that's a full

00:30:02,240 --> 00:30:06,080
you have everything installed and

00:30:04,039 --> 00:30:07,940
running on the system no setup eshe you

00:30:06,080 --> 00:30:11,000
know everything else and as well you can

00:30:07,940 --> 00:30:13,970
use your IDE your bill tools and

00:30:11,000 --> 00:30:18,470
whatever you like right end error back

00:30:13,970 --> 00:30:20,299
back and as well we want to have stable

00:30:18,470 --> 00:30:22,490
releases like real several recess in

00:30:20,299 --> 00:30:24,139
debian or you want to we want to have

00:30:22,490 --> 00:30:26,559
rolling releases or we will have rolling

00:30:24,139 --> 00:30:28,029
releases where you have all you upstream

00:30:26,559 --> 00:30:30,370
rush is directly available in your

00:30:28,029 --> 00:30:31,840
system and you will have many support

00:30:30,370 --> 00:30:33,749
for many different packages are many

00:30:31,840 --> 00:30:36,429
different architectures directly

00:30:33,749 --> 00:30:39,190
built-in like think of arm directly

00:30:36,429 --> 00:30:40,929
compiled for your phone or packages and

00:30:39,190 --> 00:30:43,419
you don't have to re-release your

00:30:40,929 --> 00:30:45,100
packages if you're if there's a new ross

00:30:43,419 --> 00:30:48,070
version coming up it's it's all in there

00:30:45,100 --> 00:30:49,929
already okay next lie so what we do

00:30:48,070 --> 00:30:51,909
already we adapted everything so the

00:30:49,929 --> 00:30:54,190
file system here at least shall not like

00:30:51,909 --> 00:30:56,080
you have everything in user include user

00:30:54,190 --> 00:30:58,869
live like normal packages not everything

00:30:56,080 --> 00:31:00,070
into opt we have put in as own aims this

00:30:58,869 --> 00:31:02,950
is some special thing you need for

00:31:00,070 --> 00:31:04,720
libraries we put in default values like

00:31:02,950 --> 00:31:07,029
the roastmaster you read before like

00:31:04,720 --> 00:31:09,789
every other thing it's just magically

00:31:07,029 --> 00:31:11,499
words and we split packages according to

00:31:09,789 --> 00:31:13,450
the Debian guidelines as we're all like

00:31:11,499 --> 00:31:14,830
you have development packages and ivory

00:31:13,450 --> 00:31:18,490
packages and if you don't need to

00:31:14,830 --> 00:31:20,860
develop a crush on Justin it's solid so

00:31:18,490 --> 00:31:22,869
if you want this it's coming soon to

00:31:20,860 --> 00:31:25,269
debian it will be part of ubuntu openly

00:31:22,869 --> 00:31:27,159
as well then and if you want to see it

00:31:25,269 --> 00:31:29,950
now already it's in the debian Vicki or

00:31:27,159 --> 00:31:33,960
just ask us we will be around and to

00:31:29,950 --> 00:31:33,960
tell you everything ok thanks

00:31:37,990 --> 00:31:45,460
thank you very much we have next up is

00:31:40,750 --> 00:32:00,160
reputed reputa and then you are after

00:31:45,460 --> 00:32:03,070
yes this one hi my name is Kazan and I'm

00:32:00,160 --> 00:32:05,410
with repeat robotics we started last

00:32:03,070 --> 00:32:08,920
November we are about 10 engineers full

00:32:05,410 --> 00:32:11,410
time we have offices in Zurich and Tokyo

00:32:08,920 --> 00:32:13,690
so what we are excited about is

00:32:11,410 --> 00:32:16,270
connecting robots and devices to the

00:32:13,690 --> 00:32:19,270
cloud and building low-cost light waste

00:32:16,270 --> 00:32:21,250
highly autonomous systems so currently

00:32:19,270 --> 00:32:24,250
we are working some enterprise customers

00:32:21,250 --> 00:32:27,520
mainly from Japan to build a security

00:32:24,250 --> 00:32:29,890
inspection systems and one of the core

00:32:27,520 --> 00:32:32,559
component of these products are is

00:32:29,890 --> 00:32:35,290
called reputa an open source cloud

00:32:32,559 --> 00:32:38,650
robotics platform so those who are in

00:32:35,290 --> 00:32:45,510
Roscoe 2013 may remember that we did a

00:32:38,650 --> 00:32:48,340
demo where we did a 3d 3d cloud-based

00:32:45,510 --> 00:32:51,010
mapping where we that was stood guard

00:32:48,340 --> 00:32:53,710
and we mapped in the Amazon servers in

00:32:51,010 --> 00:32:56,530
Ireland so that reputa was kind of a

00:32:53,710 --> 00:32:59,170
prototype it was great but it had its

00:32:56,530 --> 00:33:02,380
limitations so currently we are thinking

00:32:59,170 --> 00:33:03,940
of repeater 2.0 and as a good open

00:33:02,380 --> 00:33:06,130
source project we want to involve the

00:33:03,940 --> 00:33:08,440
community from the right beginning so

00:33:06,130 --> 00:33:11,170
currently we are in the requirement

00:33:08,440 --> 00:33:13,420
gathering phase so I would really

00:33:11,170 --> 00:33:16,600
appreciate your thoughts on many things

00:33:13,420 --> 00:33:18,670
such as I would like to hear what kind

00:33:16,600 --> 00:33:21,070
of applications would you run on the

00:33:18,670 --> 00:33:23,220
cloud what are your requirements in

00:33:21,070 --> 00:33:26,380
terms of computation databases

00:33:23,220 --> 00:33:30,610
connectivity and how do you develop and

00:33:26,380 --> 00:33:33,070
deploy applications so as a start we can

00:33:30,610 --> 00:33:35,890
discuss on the birth of birth but of the

00:33:33,070 --> 00:33:38,170
feathers the meetings afterwards we'll

00:33:35,890 --> 00:33:39,670
send out a detailed description on the

00:33:38,170 --> 00:33:42,940
mailing list on how you can participate

00:33:39,670 --> 00:33:45,220
in this effort so thank you again for

00:33:42,940 --> 00:33:56,169
the time and thank you for organizing

00:33:45,220 --> 00:34:02,500
awesome conference thank you this is

00:33:56,169 --> 00:34:08,260
this is hong by the way yeah today I I

00:34:02,500 --> 00:34:15,010
directed to keep you as the brief

00:34:08,260 --> 00:34:19,300
introduction of iso iso TC 184 easy to

00:34:15,010 --> 00:34:23,169
work 10 moderate or severe bodily retail

00:34:19,300 --> 00:34:27,790
poor service robot and issue to issue

00:34:23,169 --> 00:34:32,190
corp a corp or expert from ross

00:34:27,790 --> 00:34:36,070
community to join local route 10 this

00:34:32,190 --> 00:34:40,570
subject is different from the row

00:34:36,070 --> 00:34:45,580
circumference of the day yeah the local

00:34:40,570 --> 00:34:48,490
teams are eager to explore the different

00:34:45,580 --> 00:34:50,800
aspect of a robust of the moodle to end

00:34:48,490 --> 00:34:52,359
to develop order to develop

00:34:50,800 --> 00:34:56,409
international motorist and other

00:34:52,359 --> 00:34:59,230
possible robot the topic covers software

00:34:56,409 --> 00:35:02,740
software electrical mechanical badr

00:34:59,230 --> 00:35:05,050
larity and safety requirements in motor

00:35:02,740 --> 00:35:09,730
aerobic component interoperability and

00:35:05,050 --> 00:35:14,230
finally integrated design approach e and

00:35:09,730 --> 00:35:20,560
this is jesus ladies shows the road map

00:35:14,230 --> 00:35:23,859
from creation to the future now

00:35:20,560 --> 00:35:28,650
recruiting is at a Burger King the

00:35:23,859 --> 00:35:32,440
percent set another over taught one the

00:35:28,650 --> 00:35:38,099
general requirement of over moderately

00:35:32,440 --> 00:35:43,200
possibie strobel a diesel requirement is

00:35:38,099 --> 00:35:50,200
closely related to you and all

00:35:43,200 --> 00:35:53,500
especially software part has Pato the

00:35:50,200 --> 00:35:56,500
pairing content / toast and Ellis it'll

00:35:53,500 --> 00:35:57,799
satisfy the following requirements such

00:35:56,500 --> 00:36:00,439
as

00:35:57,799 --> 00:36:02,909
usability compatibility interoperability

00:36:00,439 --> 00:36:05,969
real-time service depending on

00:36:02,909 --> 00:36:10,139
application or independence of red palm

00:36:05,969 --> 00:36:13,109
and implementation is an architecture

00:36:10,139 --> 00:36:15,599
pulmonary harmonizes of the end other

00:36:13,109 --> 00:36:17,789
models interface for hardware

00:36:15,599 --> 00:36:20,209
abstraction pearl hardware texture that

00:36:17,789 --> 00:36:23,279
exchanger or among software modules

00:36:20,209 --> 00:36:28,939
communication among robot and server

00:36:23,279 --> 00:36:35,819
configuration and safety lately

00:36:28,939 --> 00:36:40,999
depending on application and also TC TC

00:36:35,819 --> 00:36:48,559
this slide is the reason why I am here

00:36:40,999 --> 00:36:55,189
so oh cool Rose community Rosa is

00:36:48,559 --> 00:37:00,209
important Robo media and has Roger

00:36:55,189 --> 00:37:08,239
developer community so local Croatan

00:37:00,209 --> 00:37:12,469
want to implant to embargo or

00:37:08,239 --> 00:37:15,859
stakeholders especially Rosa exporter in

00:37:12,469 --> 00:37:15,859
his work

00:37:22,390 --> 00:37:27,940
alright the last lightning talk is yen

00:37:28,359 --> 00:37:34,839
let's wait for the last one thank you

00:37:36,219 --> 00:37:41,839
yeah hello my name is Jan Carstensen I'm

00:37:39,380 --> 00:37:44,019
from the real-time systems group of the

00:37:41,839 --> 00:37:46,489
lightness University in Hannover and

00:37:44,019 --> 00:37:50,739
we've been putting some time and effort

00:37:46,489 --> 00:37:57,890
into well real time Ross yet another

00:37:50,739 --> 00:37:59,839
approach slide things well waters what

00:37:57,890 --> 00:38:03,799
is our motivation of course we would

00:37:59,839 --> 00:38:05,869
like to get the reliability and the

00:38:03,799 --> 00:38:08,660
predictability of a real-time system and

00:38:05,869 --> 00:38:11,269
still use the complete Ross ecosystem

00:38:08,660 --> 00:38:14,029
use the grade Ross visualization tools

00:38:11,269 --> 00:38:17,059
and of course quite a lot of the code

00:38:14,029 --> 00:38:19,519
base which is actually there what will

00:38:17,059 --> 00:38:22,339
remain design goals and still are I mean

00:38:19,519 --> 00:38:24,319
this is a work in progress we wanted to

00:38:22,339 --> 00:38:27,890
stay as close as possible to the Ross

00:38:24,319 --> 00:38:30,219
API for at least the main parts like

00:38:27,890 --> 00:38:33,410
publish and subscribe to make the

00:38:30,219 --> 00:38:36,829
migration as easy as possible but still

00:38:33,410 --> 00:38:39,160
of course deliver a hard time at real

00:38:36,829 --> 00:38:41,989
time yeah publish-subscribe

00:38:39,160 --> 00:38:44,299
communication thank you we've done some

00:38:41,989 --> 00:38:46,069
preliminary testing and of course since

00:38:44,299 --> 00:38:49,249
we're looking at real time looking at

00:38:46,069 --> 00:38:52,269
the worst case message latency in this

00:38:49,249 --> 00:38:54,920
case and well this shows quite promising

00:38:52,269 --> 00:39:00,109
of course I mean Russ is not developed

00:38:54,920 --> 00:39:03,459
for real time but still currently we've

00:39:00,109 --> 00:39:06,410
done a lot of testing and are developing

00:39:03,459 --> 00:39:08,979
the idea would be to have a finished

00:39:06,410 --> 00:39:11,569
prototype or up really or release really

00:39:08,979 --> 00:39:14,329
releasable version at the end of the

00:39:11,569 --> 00:39:17,869
year currently the loop rate spin so the

00:39:14,329 --> 00:39:20,150
basic node functionality is completed

00:39:17,869 --> 00:39:21,920
and tested publishing and subscribing is

00:39:20,150 --> 00:39:24,650
working quite well services are

00:39:21,920 --> 00:39:27,499
currently tested action serve and action

00:39:24,650 --> 00:39:31,640
client are a work in progress and as you

00:39:27,499 --> 00:39:32,900
can see tf2 a bridge between our well

00:39:31,640 --> 00:39:36,510
knew

00:39:32,900 --> 00:39:41,070
system and the current Ross ecosystem is

00:39:36,510 --> 00:39:42,210
in scheduled and of course a network

00:39:41,070 --> 00:39:43,980
communication currently

00:39:42,210 --> 00:39:48,900
publish-subscribe and services are only

00:39:43,980 --> 00:39:50,430
implemented for a single PC I'm very

00:39:48,900 --> 00:39:53,460
happy if some of you have some some

00:39:50,430 --> 00:39:55,710
input some suggestions and I will go

00:39:53,460 --> 00:39:58,910
very much like input on what we're

00:39:55,710 --> 00:39:58,910
currently doing thank you very much

00:40:02,860 --> 00:40:08,460
all right we have a 10 second demo well

00:40:05,080 --> 00:40:10,930
I cue up the next or the next slide here

00:40:08,460 --> 00:40:14,340
okay do we have a 10 second demo we do

00:40:10,930 --> 00:40:14,340

YouTube URL: https://www.youtube.com/watch?v=NG4ysbTzvN8


