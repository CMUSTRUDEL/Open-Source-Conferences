Title: Working with the robot localization Package ROSCon 2015 Hamburg Day 2 Tom Moore
Publication date: 2015-12-08
Playlist: ROSCon 2015
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2015 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:05,490
oh hello everyone guten tag my name is

00:00:03,300 --> 00:00:07,020
Tom Moore and I am a non Tanima

00:00:05,490 --> 00:00:08,849
developer with clear path robotics and

00:00:07,020 --> 00:00:10,110
today I'm going to be talking to you

00:00:08,849 --> 00:00:13,469
about working with the robot

00:00:10,110 --> 00:00:14,790
localization package so what is robot

00:00:13,469 --> 00:00:16,529
localization ah I should back up a

00:00:14,790 --> 00:00:17,850
little bit first can I see by show of

00:00:16,529 --> 00:00:21,539
hands who all is actually familiar with

00:00:17,850 --> 00:00:23,340
this ok so quite a few you could okay um

00:00:21,539 --> 00:00:24,960
so I apologize ahead of time I'm gonna

00:00:23,340 --> 00:00:26,580
kind of go over some things that might

00:00:24,960 --> 00:00:28,080
be kinda this is gonna be centered

00:00:26,580 --> 00:00:30,779
around the kinds of things that people

00:00:28,080 --> 00:00:31,890
ask on Ross answers and then I'll try to

00:00:30,779 --> 00:00:33,960
move on to things that are a little bit

00:00:31,890 --> 00:00:37,380
more advanced I'm so just bear with me

00:00:33,960 --> 00:00:39,090
and try not to fall asleep so what is it

00:00:37,380 --> 00:00:40,980
it is a general purpose state estimation

00:00:39,090 --> 00:00:43,710
package so when we started writing it

00:00:40,980 --> 00:00:47,190
the goal was to address a broad range of

00:00:43,710 --> 00:00:49,170
robots we don't have any limit on the

00:00:47,190 --> 00:00:51,300
number of data sources so if you've got

00:00:49,170 --> 00:00:54,960
17 I am use I don't know why you do that

00:00:51,300 --> 00:00:56,969
but you can use them along with the

00:00:54,960 --> 00:01:00,750
large number of data sources we also

00:00:56,969 --> 00:01:03,420
support four different message types the

00:01:00,750 --> 00:01:04,470
odometry message obviously if you have a

00:01:03,420 --> 00:01:06,299
dominant message it's just a

00:01:04,470 --> 00:01:07,650
conglomeration of a post and twist so we

00:01:06,299 --> 00:01:10,439
support both of those as well and then

00:01:07,650 --> 00:01:14,220
naturally the I am you the state vector

00:01:10,439 --> 00:01:15,990
is 15 dimensional so it's posed linear

00:01:14,220 --> 00:01:19,590
and angular velocity and linear

00:01:15,990 --> 00:01:21,570
acceleration and so typically there are

00:01:19,590 --> 00:01:24,689
two two different use cases one is to

00:01:21,570 --> 00:01:27,630
fuse continuous sensor data so that it

00:01:24,689 --> 00:01:29,460
does not subject discrete jumps and then

00:01:27,630 --> 00:01:30,960
that will produce a locally accurate

00:01:29,460 --> 00:01:33,960
state estimate that you can use for

00:01:30,960 --> 00:01:38,540
local navigation the second use case is

00:01:33,960 --> 00:01:41,250
to fuse that same data with sources of

00:01:38,540 --> 00:01:43,110
global opposed estimates so something

00:01:41,250 --> 00:01:44,700
like a slam package like AM CL you can

00:01:43,110 --> 00:01:47,399
fuse it with those so that you couldn't

00:01:44,700 --> 00:01:50,280
get a complete and accurate global state

00:01:47,399 --> 00:01:52,200
estimate and it's also good for in those

00:01:50,280 --> 00:01:54,210
use cases it's good for if you have

00:01:52,200 --> 00:01:56,040
infrequent global pose estimates that

00:01:54,210 --> 00:01:56,759
coming from a GPS at 1 Hertz right and

00:01:56,040 --> 00:01:58,229
you want to make sure you have a

00:01:56,759 --> 00:02:02,299
filtered state in between those two

00:01:58,229 --> 00:02:02,299
readings it's very useful

00:02:02,470 --> 00:02:06,520
so the notes contained in the package

00:02:04,480 --> 00:02:10,000
there are actually two filters two state

00:02:06,520 --> 00:02:11,950
MCS two state estimation notes the first

00:02:10,000 --> 00:02:14,170
is an implementation of an extended

00:02:11,950 --> 00:02:16,180
Kalman filter EKF localization node the

00:02:14,170 --> 00:02:17,980
second is an employee implementation of

00:02:16,180 --> 00:02:20,530
an unscented Kalman filter UKF

00:02:17,980 --> 00:02:22,450
localization node they both have

00:02:20,530 --> 00:02:23,590
identical interfaces for all intense

00:02:22,450 --> 00:02:28,300
purposes you can use them

00:02:23,590 --> 00:02:30,520
interchangeably so map set transform

00:02:28,300 --> 00:02:31,750
node is kind of a sensory processing

00:02:30,520 --> 00:02:34,360
there that's also included that allows

00:02:31,750 --> 00:02:36,730
you to take geographic coordinates and

00:02:34,360 --> 00:02:38,680
then convert them into coordinates that

00:02:36,730 --> 00:02:41,320
are compatible with your robots world

00:02:38,680 --> 00:02:43,600
frame so this allows you to directly

00:02:41,320 --> 00:02:47,260
fuse basically GPS data with your with

00:02:43,600 --> 00:02:48,880
your state estimate so just to give a

00:02:47,260 --> 00:02:51,700
little more context about those two use

00:02:48,880 --> 00:02:54,580
cases that I mentioned earlier I'm gonna

00:02:51,700 --> 00:02:56,320
kind of show this graphic from the Ross

00:02:54,580 --> 00:03:00,270
nav stack that I got off of the move

00:02:56,320 --> 00:03:03,250
base bookie and slide it over here so

00:03:00,270 --> 00:03:06,280
the first use case here it is basically

00:03:03,250 --> 00:03:07,600
since it's right there now so you're a

00:03:06,280 --> 00:03:09,790
dominant resource right you can replace

00:03:07,600 --> 00:03:12,519
it with with one of the one of the

00:03:09,790 --> 00:03:16,390
filters and you can send all sorts of

00:03:12,519 --> 00:03:19,180
different types of data to it right and

00:03:16,390 --> 00:03:20,799
then the second use case is naturally

00:03:19,180 --> 00:03:22,930
the the one that infuses global

00:03:20,799 --> 00:03:25,030
possess'd emits so you can again feed

00:03:22,930 --> 00:03:26,350
that same data to it but then also feed

00:03:25,030 --> 00:03:27,790
at the output of one of these other

00:03:26,350 --> 00:03:30,880
things that actually do kind of global

00:03:27,790 --> 00:03:33,310
localization against the map or or if

00:03:30,880 --> 00:03:35,110
you're taking GPS data I should mention

00:03:33,310 --> 00:03:36,280
that these ones at the top here this

00:03:35,110 --> 00:03:37,480
really should be kind of an aural

00:03:36,280 --> 00:03:41,760
relationship I don't really think you

00:03:37,480 --> 00:03:41,760
want to be fusing all three of those

00:03:42,600 --> 00:03:49,870
okay so gonna get into kind of preparing

00:03:46,989 --> 00:03:52,900
your sensor data here this is true you

00:03:49,870 --> 00:03:55,180
cannot spell prepare without RTP so Ross

00:03:52,900 --> 00:03:57,910
enhancement proposals for anyone who may

00:03:55,180 --> 00:04:00,070
not be familiar kind of useful for in

00:03:57,910 --> 00:04:04,060
this case anyway specifying standards

00:04:00,070 --> 00:04:06,130
two very relevant ones are our EP 103

00:04:04,060 --> 00:04:07,250
and 105 won't go into too much detail

00:04:06,130 --> 00:04:09,020
with them but it's

00:04:07,250 --> 00:04:11,540
I'm going to read if you are going to be

00:04:09,020 --> 00:04:13,490
writing your own driver and you wanted

00:04:11,540 --> 00:04:14,540
to conform to standards chances are if

00:04:13,490 --> 00:04:16,670
you're using a package that's already

00:04:14,540 --> 00:04:18,680
out there and the author probably

00:04:16,670 --> 00:04:20,180
already adhere to these so you're fine I

00:04:18,680 --> 00:04:21,620
will go into a little bit more detail

00:04:20,180 --> 00:04:23,930
the RTP 105 on the next slide though

00:04:21,620 --> 00:04:28,280
because it seems to be a common source

00:04:23,930 --> 00:04:29,480
of confusion so we'll start out with the

00:04:28,280 --> 00:04:31,250
kind of three principle coordinate

00:04:29,480 --> 00:04:32,510
frames that are laid out on our AP 105

00:04:31,250 --> 00:04:33,800
there's base length which is the

00:04:32,510 --> 00:04:36,590
coordinate frame that is rigidly affixed

00:04:33,800 --> 00:04:38,360
to your robot there is the Odom frame

00:04:36,590 --> 00:04:40,490
which is a world fixed frame basically

00:04:38,360 --> 00:04:43,910
has its origin at your robot start pose

00:04:40,490 --> 00:04:45,770
and then the map frame which for most

00:04:43,910 --> 00:04:49,400
intents and purposes is identical to the

00:04:45,770 --> 00:04:51,169
Odom frame except that the the standard

00:04:49,400 --> 00:04:53,210
suggests that in the yo Dom frame your

00:04:51,169 --> 00:04:54,830
pose should be continuous right so you

00:04:53,210 --> 00:04:56,000
can use that for local navigation again

00:04:54,830 --> 00:04:58,130
you shouldn't have any kind of discrete

00:04:56,000 --> 00:05:01,730
jumps in your pose estimate inside that

00:04:58,130 --> 00:05:04,370
frame so just to kind of go over how

00:05:01,730 --> 00:05:06,440
these transforms work so one of the

00:05:04,370 --> 00:05:08,510
filters will produce two things will

00:05:06,440 --> 00:05:11,360
produce an odometry message and then it

00:05:08,510 --> 00:05:13,370
will also produce the transform from the

00:05:11,360 --> 00:05:15,500
world frame that you specify to the to

00:05:13,370 --> 00:05:19,310
the baseline frame that you specify you

00:05:15,500 --> 00:05:21,290
can configure them so that's how the ODE

00:05:19,310 --> 00:05:22,700
on the basic frameworks and then that's

00:05:21,290 --> 00:05:25,940
a few second real frame 200 Dom if you

00:05:22,700 --> 00:05:28,310
set it to map internally we also

00:05:25,940 --> 00:05:30,500
generate this map to baseline transform

00:05:28,310 --> 00:05:32,870
but TF because the tree does not allow

00:05:30,500 --> 00:05:37,550
you to have two parents for a given node

00:05:32,870 --> 00:05:39,680
basically so you need to do this process

00:05:37,550 --> 00:05:41,390
whereby you take your internal transform

00:05:39,680 --> 00:05:42,919
from at the base link and look up the

00:05:41,390 --> 00:05:44,330
transform from mode on the base link and

00:05:42,919 --> 00:05:47,660
use that to generate a map to code on

00:05:44,330 --> 00:05:50,419
transform and so right so the filters

00:05:47,660 --> 00:05:52,310
can handle both these so all pose data

00:05:50,419 --> 00:05:54,530
that you take in so the stuff that comes

00:05:52,310 --> 00:05:58,400
in from the pose message or the odometry

00:05:54,530 --> 00:06:00,650
message those both are those gonna be

00:05:58,400 --> 00:06:02,780
transformed from whatever frame ID is in

00:06:00,650 --> 00:06:05,960
the message to the frame ID to the world

00:06:02,780 --> 00:06:08,810
frame ID twist data likewise is going to

00:06:05,960 --> 00:06:11,210
go into baseline so now the only the

00:06:08,810 --> 00:06:12,620
only exception there is IMU data i

00:06:11,210 --> 00:06:15,289
immediately

00:06:12,620 --> 00:06:18,349
contains orientation in it the way we

00:06:15,289 --> 00:06:20,339
handle that is the problem there is that

00:06:18,349 --> 00:06:22,589
i am use are mounted

00:06:20,339 --> 00:06:25,259
with respect to you know some offset on

00:06:22,589 --> 00:06:26,879
your robot right and so that's the frame

00:06:25,259 --> 00:06:29,219
ID typically that people give us they

00:06:26,879 --> 00:06:31,740
generate some static transform from base

00:06:29,219 --> 00:06:33,539
link to the IMU frame but then we need

00:06:31,740 --> 00:06:36,180
to use that information to kind of

00:06:33,539 --> 00:06:37,529
correct the orientation in the IMU so if

00:06:36,180 --> 00:06:38,550
you imagine an IMU that you have it's

00:06:37,529 --> 00:06:41,309
facing left

00:06:38,550 --> 00:06:42,599
for example then in the IMU frame if you

00:06:41,309 --> 00:06:44,610
go like this you know it's obviously

00:06:42,599 --> 00:06:47,990
pitching but yet the robot itself is

00:06:44,610 --> 00:06:47,990
rolling so any didn't correct for that

00:06:50,479 --> 00:06:57,120
so just to drive that point home a

00:06:53,490 --> 00:06:58,889
little bit more so if you have this IMU

00:06:57,120 --> 00:07:00,270
message and you want to actually use it

00:06:58,889 --> 00:07:03,449
you're gonna have to provide this

00:07:00,270 --> 00:07:05,689
transform from base link to IMU link if

00:07:03,449 --> 00:07:08,370
you don't it's just going to ignore it

00:07:05,689 --> 00:07:09,599
and in this case you've got an Adama

00:07:08,370 --> 00:07:10,649
tree message coming in and the frame

00:07:09,599 --> 00:07:12,120
Eddings already sent you don't have to

00:07:10,649 --> 00:07:13,319
generate in transforms if those are the

00:07:12,120 --> 00:07:18,149
names of the frames that you you

00:07:13,319 --> 00:07:21,449
specified okay gratuitous math slide so

00:07:18,149 --> 00:07:23,490
this is kind of slightly kind of

00:07:21,449 --> 00:07:24,779
standard formulation for any TF people

00:07:23,490 --> 00:07:27,409
who are familiar with it well no doubt

00:07:24,779 --> 00:07:29,399
picked out the differences very quickly

00:07:27,409 --> 00:07:31,139
just want to point out a few things

00:07:29,399 --> 00:07:34,199
specifically about covariance matrices

00:07:31,139 --> 00:07:36,360
here the first one is that there are

00:07:34,199 --> 00:07:39,360
three different key ones that you can

00:07:36,360 --> 00:07:41,689
specify the first one is the actual

00:07:39,360 --> 00:07:43,499
estimate error covariance which

00:07:41,689 --> 00:07:45,930
basically the error for your whole

00:07:43,499 --> 00:07:47,129
system right you can't specify all the

00:07:45,930 --> 00:07:50,309
way through obviously but you can you

00:07:47,129 --> 00:07:51,749
can specify it at time zero so this is

00:07:50,309 --> 00:07:53,580
especially useful if let's say you know

00:07:51,749 --> 00:07:55,319
you're going to be measuring a given

00:07:53,580 --> 00:07:57,240
variable in your state vector then it

00:07:55,319 --> 00:07:58,709
makes sense to set the diagonal value on

00:07:57,240 --> 00:07:59,969
this covariance matrix to something

00:07:58,709 --> 00:08:02,399
that's a bit higher than whatever the

00:07:59,969 --> 00:08:03,839
variance is on that variable in the

00:08:02,399 --> 00:08:06,289
measurement because I know be it'll be

00:08:03,839 --> 00:08:09,749
few more quickly it'll converge faster

00:08:06,289 --> 00:08:11,430
the process noise covariance matrix so

00:08:09,749 --> 00:08:12,449
basically kind of dictates how quickly

00:08:11,430 --> 00:08:15,169
the error is going to grow in your

00:08:12,449 --> 00:08:17,189
system but can be very difficult to tune

00:08:15,169 --> 00:08:20,009
there are methods out in the literature

00:08:17,189 --> 00:08:22,199
I tend to basically kind of hand tune

00:08:20,009 --> 00:08:23,199
this tweak parameters until I feel that

00:08:22,199 --> 00:08:25,560
the error is growing

00:08:23,199 --> 00:08:27,969
at a reasonable rate in the whole system

00:08:25,560 --> 00:08:31,180
and then lastly and this is very

00:08:27,969 --> 00:08:32,229
important it's it's this the co veins

00:08:31,180 --> 00:08:33,700
and the

00:08:32,229 --> 00:08:35,169
measurements themselves is very

00:08:33,700 --> 00:08:37,029
important so if you're sending out

00:08:35,169 --> 00:08:39,070
measurements that have all zeros and the

00:08:37,029 --> 00:08:40,389
covariance fields the filter will deal

00:08:39,070 --> 00:08:42,310
with that it's just gonna give it a very

00:08:40,389 --> 00:08:43,779
small value but you don't want that you

00:08:42,310 --> 00:08:45,490
want to make sure that you know you

00:08:43,779 --> 00:08:49,720
actually get some reasonable values in

00:08:45,490 --> 00:08:52,630
there okay so here's how you do a

00:08:49,720 --> 00:08:54,459
coordinate frame specification so you

00:08:52,630 --> 00:08:55,720
basically got the principal frames like

00:08:54,459 --> 00:09:00,040
I said you name to whatever you want and

00:08:55,720 --> 00:09:01,209
then you can set the world frame to one

00:09:00,040 --> 00:09:04,300
of these two to the map or the Obama

00:09:01,209 --> 00:09:05,980
frame and which one you set it to will

00:09:04,300 --> 00:09:07,389
change the behavior in accordance with

00:09:05,980 --> 00:09:11,880
that slide and earlier that I showed

00:09:07,389 --> 00:09:14,800
from our EP 105 so input specifications

00:09:11,880 --> 00:09:17,709
you can I don't know anyone that's had

00:09:14,800 --> 00:09:19,209
quite this many inputs but you could if

00:09:17,709 --> 00:09:20,680
you wanted to just an example of what

00:09:19,209 --> 00:09:22,660
you're doing I have personally worked on

00:09:20,680 --> 00:09:23,620
a project and the more we had seven

00:09:22,660 --> 00:09:25,959
different inputs including four

00:09:23,620 --> 00:09:29,190
different I am use so it's not not

00:09:25,959 --> 00:09:32,500
entirely impossible

00:09:29,190 --> 00:09:34,420
so basically input configuration okay

00:09:32,500 --> 00:09:36,339
I can probably spend the rest of this

00:09:34,420 --> 00:09:38,949
talk and then another one going over

00:09:36,339 --> 00:09:44,019
just this but I'll go over the kind of

00:09:38,949 --> 00:09:46,959
key points so the order here is X Y Z Y

00:09:44,019 --> 00:09:50,920
roll pitch yaw velocities for those and

00:09:46,959 --> 00:09:53,019
then linear acceleration and so it's

00:09:50,920 --> 00:09:57,130
important in general to make sure that

00:09:53,019 --> 00:09:58,750
you are measuring with across all of

00:09:57,130 --> 00:10:01,300
your different sensors you need to make

00:09:58,750 --> 00:10:03,070
sure you're covering at least a pose

00:10:01,300 --> 00:10:04,540
variable each of the pose variables if

00:10:03,070 --> 00:10:06,279
you can't do that cover one of the

00:10:04,540 --> 00:10:09,339
velocity variables and if you can't do

00:10:06,279 --> 00:10:10,740
that you're probably in trouble so your

00:10:09,339 --> 00:10:12,910
covariance is going to grow very quickly

00:10:10,740 --> 00:10:14,890
so if you look at this example right

00:10:12,910 --> 00:10:16,930
here I've got an odometer resource and

00:10:14,890 --> 00:10:20,019
I've got a new source nothing is

00:10:16,930 --> 00:10:21,550
measuring Z or Z velocity and so what

00:10:20,019 --> 00:10:23,170
you're going to see is the variance on Z

00:10:21,550 --> 00:10:24,610
grow very quickly and then

00:10:23,170 --> 00:10:26,680
correlated variables you could see the

00:10:24,610 --> 00:10:28,510
same thing we are measuring the

00:10:26,680 --> 00:10:31,360
acceleration but again that double

00:10:28,510 --> 00:10:34,589
integration is just going to cause the

00:10:31,360 --> 00:10:36,670
variance on that to grow too quickly and

00:10:34,589 --> 00:10:38,350
so oh one other thing I should mention

00:10:36,670 --> 00:10:40,389
is that you'll notice that even though

00:10:38,350 --> 00:10:42,790
an IMU for example doesn't measure XY

00:10:40,389 --> 00:10:45,279
and Z we have that in there just for

00:10:42,790 --> 00:10:46,449
consistency across all the sensors so if

00:10:45,279 --> 00:10:51,790
you happen to set one of those to true

00:10:46,449 --> 00:10:54,310
it's just going to be ignored so then

00:10:51,790 --> 00:10:57,160
here's another example where we've got

00:10:54,310 --> 00:10:58,839
now we've got another sensor we've got a

00:10:57,160 --> 00:11:02,110
node on 0 source and node on one source

00:10:58,839 --> 00:11:03,370
both of them are measuring x and y so

00:11:02,110 --> 00:11:05,320
this is a case where you really need to

00:11:03,370 --> 00:11:06,519
be careful and make sure that your

00:11:05,320 --> 00:11:07,959
covariance matrices are being set

00:11:06,519 --> 00:11:09,880
correctly because if you've got two

00:11:07,959 --> 00:11:11,500
sensors let's say you've got one that

00:11:09,880 --> 00:11:12,940
says I'm at two two and one that says

00:11:11,500 --> 00:11:15,100
I'm at ten ten and they both have a

00:11:12,940 --> 00:11:18,459
variance of 0.1 well one of them is

00:11:15,100 --> 00:11:19,959
lying so you have to make sure that

00:11:18,459 --> 00:11:21,130
there's some overlap there otherwise

00:11:19,959 --> 00:11:22,269
what's going to happen is adds every

00:11:21,130 --> 00:11:24,459
measurement comes in it's gonna jump

00:11:22,269 --> 00:11:25,810
back and forth between the two and I've

00:11:24,459 --> 00:11:27,579
seen this happen with I am use

00:11:25,810 --> 00:11:29,740
especially where you know the

00:11:27,579 --> 00:11:31,510
manufacturer reports some some error

00:11:29,740 --> 00:11:32,829
rate on their on their heading and what

00:11:31,510 --> 00:11:34,180
you will actually find is that two

00:11:32,829 --> 00:11:36,810
different I am use on the same vehicle

00:11:34,180 --> 00:11:38,800
that's jumping back and forth like this

00:11:36,810 --> 00:11:40,690
so one way to get around that if you

00:11:38,800 --> 00:11:42,040
don't feel like fixing the covariance

00:11:40,690 --> 00:11:44,440
matrices in the messages is to use this

00:11:42,040 --> 00:11:45,910
differential parameter any idea with

00:11:44,440 --> 00:11:48,220
that is that it will take a measurement

00:11:45,910 --> 00:11:49,839
at time T and then shine T plus one

00:11:48,220 --> 00:11:51,459
and it will take the little

00:11:49,839 --> 00:11:53,230
differentiate between them and convert

00:11:51,459 --> 00:11:54,850
that to a velocity and then feed that to

00:11:53,230 --> 00:11:56,500
the filter instead so you'll get one of

00:11:54,850 --> 00:11:58,810
these so you could do it both of them I

00:11:56,500 --> 00:12:00,070
would I usually just use leave one alone

00:11:58,810 --> 00:12:02,829
and then turn the other one on the

00:12:00,070 --> 00:12:05,949
differential mode but that gets run this

00:12:02,829 --> 00:12:07,510
problem I'm not gonna print the full

00:12:05,949 --> 00:12:10,600
covariance matrices here because they

00:12:07,510 --> 00:12:14,850
are 15 by 15 so but you get the idea

00:12:10,600 --> 00:12:14,850
this is just how you specify those two

00:12:15,870 --> 00:12:19,510
okay

00:12:17,500 --> 00:12:23,709
I hope this I hope this meme isn't lost

00:12:19,510 --> 00:12:25,389
on too many people so it's not so I

00:12:23,709 --> 00:12:27,110
should point out I am I am NOT playing

00:12:25,389 --> 00:12:29,269
back entirely big files

00:12:27,110 --> 00:12:31,970
I'm playing back the raw data from bag

00:12:29,269 --> 00:12:35,839
files but I am running or about

00:12:31,970 --> 00:12:40,610
localization live so let's see just I

00:12:35,839 --> 00:12:42,769
can you guys read that ok so the first

00:12:40,610 --> 00:12:46,240
instance here is our Oh Dom instance

00:12:42,769 --> 00:12:48,769
basically and so we refusing the

00:12:46,240 --> 00:12:52,640
odometry wheeling pedometer data from a

00:12:48,769 --> 00:12:54,320
husky and an IMU and then you can see

00:12:52,640 --> 00:12:56,690
the specification therefore what we're

00:12:54,320 --> 00:12:59,720
including one other thing you may notice

00:12:56,690 --> 00:13:01,820
did I do it here yes you'll notice that

00:12:59,720 --> 00:13:03,170
even though the robot probably isn't

00:13:01,820 --> 00:13:06,649
going to give me any positive values for

00:13:03,170 --> 00:13:07,910
for wine Z velocity I'm still setting

00:13:06,649 --> 00:13:09,019
them to true and that's because the

00:13:07,910 --> 00:13:11,240
robot cannot actually attain

00:13:09,019 --> 00:13:12,410
instantaneous y&z velocity and so the

00:13:11,240 --> 00:13:14,510
zero measurement that I'm getting is

00:13:12,410 --> 00:13:18,410
actually valid and so it's worth worth

00:13:14,510 --> 00:13:21,110
worth using so a bunch of other settings

00:13:18,410 --> 00:13:22,279
here which I won't get into right now

00:13:21,110 --> 00:13:25,579
there are even more advanced settings

00:13:22,279 --> 00:13:26,750
that aren't even in this file feel free

00:13:25,579 --> 00:13:28,570
to come talk to me if you're interested

00:13:26,750 --> 00:13:30,860
and then here's the second instance

00:13:28,570 --> 00:13:33,829
that's the exact same thing except we've

00:13:30,860 --> 00:13:36,290
got this added or Dom one source which

00:13:33,829 --> 00:13:39,800
comes from nav set transform they're

00:13:36,290 --> 00:13:45,680
done here our aim you the IMU in this

00:13:39,800 --> 00:13:49,820
case was offset so I won't if I want to

00:13:45,680 --> 00:13:52,399
preface this demo by saying that this

00:13:49,820 --> 00:13:54,350
was run on a very nice husky with the

00:13:52,399 --> 00:13:58,070
world's worst I am you not worst okay

00:13:54,350 --> 00:13:59,839
most broken most broken IMU so the the

00:13:58,070 --> 00:14:01,040
heading that the IME reporting a it's

00:13:59,839 --> 00:14:02,839
kind of all over the place there's a lot

00:14:01,040 --> 00:14:04,279
of magnetic distortion in the place we

00:14:02,839 --> 00:14:07,010
were running and then also the IMU

00:14:04,279 --> 00:14:09,050
itself was just kind of worked so you'll

00:14:07,010 --> 00:14:10,730
you'll see it come out here but it's an

00:14:09,050 --> 00:14:17,510
important point it's kind of a it's

00:14:10,730 --> 00:14:20,810
actually good talking point okay

00:14:17,510 --> 00:14:24,529
so um a few things to go over here first

00:14:20,810 --> 00:14:27,290
of all the red I believe is the Burnham

00:14:24,529 --> 00:14:29,089
frame version the red is a matte frame

00:14:27,290 --> 00:14:31,430
but because our vases cleverly

00:14:29,089 --> 00:14:32,690
transforming once the other they overlay

00:14:31,430 --> 00:14:34,190
each other completely which is why it

00:14:32,690 --> 00:14:35,750
doesn't seem that they differ at all

00:14:34,190 --> 00:14:37,310
but in reality they are they are

00:14:35,750 --> 00:14:39,110
differing from another and diverging

00:14:37,310 --> 00:14:41,000
from another and this blue thing here

00:14:39,110 --> 00:14:43,279
this is the output of now set transfer

00:14:41,000 --> 00:14:45,529
mode so that's getting confused upon the

00:14:43,279 --> 00:14:46,970
status and so I can show you and I can

00:14:45,529 --> 00:14:50,149
explain this to you when you start

00:14:46,970 --> 00:14:52,130
seeing it looks a little off this is the

00:14:50,149 --> 00:14:53,899
when you're looking at the output of the

00:14:52,130 --> 00:14:55,519
matte frame version right so this every

00:14:53,899 --> 00:14:56,630
time you get a GPS measurement you see

00:14:55,519 --> 00:14:59,149
the robot kind of jump a little bit and

00:14:56,630 --> 00:15:01,279
you can see that the kind of difference

00:14:59,149 --> 00:15:02,510
between the way the robot thinks it's

00:15:01,279 --> 00:15:07,459
headed in the way that appears to be

00:15:02,510 --> 00:15:09,110
headed according to these GPS points so

00:15:07,459 --> 00:15:10,550
that again is a result of just this kind

00:15:09,110 --> 00:15:15,139
of item you're not being not being quite

00:15:10,550 --> 00:15:17,630
right so but it makes an important point

00:15:15,139 --> 00:15:19,100
which is that one of the powerful things

00:15:17,630 --> 00:15:20,570
about Coleman filters in general is that

00:15:19,100 --> 00:15:22,399
you can they can deal with a noisy

00:15:20,570 --> 00:15:23,899
terrible data and especially when you

00:15:22,399 --> 00:15:25,699
have a situation like this where perhaps

00:15:23,899 --> 00:15:27,079
you want you know that your I mean you

00:15:25,699 --> 00:15:29,569
might not provide very good orientation

00:15:27,079 --> 00:15:31,130
data you might have another IMU on there

00:15:29,569 --> 00:15:33,740
that does you can use them both or you

00:15:31,130 --> 00:15:35,959
can turn the orientation off on one and

00:15:33,740 --> 00:15:37,910
use its angular velocity instead just

00:15:35,959 --> 00:15:40,540
use the gyro data so it gives you a

00:15:37,910 --> 00:15:40,540
wealth of options

00:15:49,270 --> 00:15:54,220
okay so NASA transfer note I already

00:15:52,300 --> 00:15:56,649
wanted to this a bit I'll just cover a

00:15:54,220 --> 00:15:59,440
little bit more so obviously a lot of

00:15:56,649 --> 00:16:02,080
robots and piece of GPS receivers the

00:15:59,440 --> 00:16:03,279
the idea here is to the problem is

00:16:02,080 --> 00:16:05,890
trying to get that data into your robots

00:16:03,279 --> 00:16:07,870
world frame so good solution is to first

00:16:05,890 --> 00:16:10,330
convert the GPS coordinates and UTM

00:16:07,870 --> 00:16:12,220
coordinates and since we know how the or

00:16:10,330 --> 00:16:13,839
each M grid is oriented we can use a

00:16:12,220 --> 00:16:16,810
world reference heading from an IMU

00:16:13,839 --> 00:16:19,660
along with our robots current pose to

00:16:16,810 --> 00:16:22,149
compute a transform from from that UTM

00:16:19,660 --> 00:16:24,790
granny's room into our world frame and

00:16:22,149 --> 00:16:26,770
it seems to work pretty well so the

00:16:24,790 --> 00:16:29,130
three inputs you need are the odometry

00:16:26,770 --> 00:16:29,130
message

00:16:32,339 --> 00:16:35,430
rookie mistake

00:16:38,940 --> 00:16:52,209
amongst yourselves okay so anyway so we

00:16:50,470 --> 00:16:53,500
transform all future ups measurements it

00:16:52,209 --> 00:16:54,940
in that same transform and then we can

00:16:53,500 --> 00:16:56,140
feed that back into the filter and I

00:16:54,940 --> 00:16:57,730
know that seems a bit like a circular

00:16:56,140 --> 00:16:59,290
relationship it's really not because at

00:16:57,730 --> 00:17:02,260
the time that NASA I transferred

00:16:59,290 --> 00:17:05,559
receives that first measurement from the

00:17:02,260 --> 00:17:08,260
odometry I'm sorry from the EKF output

00:17:05,559 --> 00:17:10,209
it doesn't actually have any data from

00:17:08,260 --> 00:17:11,980
the GPS included in it so once it

00:17:10,209 --> 00:17:14,110
receives that it starts it generates the

00:17:11,980 --> 00:17:18,309
transform from that point on it just

00:17:14,110 --> 00:17:21,970
uses that statically so these are the

00:17:18,309 --> 00:17:23,650
required input messages relevant

00:17:21,970 --> 00:17:26,079
settings magnetic declination for

00:17:23,650 --> 00:17:27,550
wherever you are it's important to set

00:17:26,079 --> 00:17:29,640
you all have said if your IMU does not

00:17:27,550 --> 00:17:32,110
report zero where you think it should

00:17:29,640 --> 00:17:33,570
zero altitude basically the altitude

00:17:32,110 --> 00:17:36,130
coming out of there will be set to 0

00:17:33,570 --> 00:17:38,140
that UTM transform I mentioned to you

00:17:36,130 --> 00:17:40,150
you can use this setting broadcast UTM

00:17:38,140 --> 00:17:42,400
transform to right past it and use it

00:17:40,150 --> 00:17:43,929
elsewhere if you want and then publish

00:17:42,400 --> 00:17:44,920
filtered GPS is useful because what it

00:17:43,929 --> 00:17:49,059
does is it goes the other way

00:17:44,920 --> 00:17:51,640
it takes your your fused data and then

00:17:49,059 --> 00:17:53,050
spits out GPS data instead it's very

00:17:51,640 --> 00:18:00,040
useful for plotting on line

00:17:53,050 --> 00:18:01,210
Matthew's for example so okay set up for

00:18:00,040 --> 00:18:02,980
an asset transfer mode I'll just fly

00:18:01,210 --> 00:18:05,830
through this here's the almond since the

00:18:02,980 --> 00:18:07,570
map and since these are all the inputs

00:18:05,830 --> 00:18:11,890
to Nassau transfer mode and then it

00:18:07,570 --> 00:18:13,540
spits everything back to to the so a

00:18:11,890 --> 00:18:15,190
final point here robot localization

00:18:13,540 --> 00:18:18,010
works on a broad range of robots on the

00:18:15,190 --> 00:18:19,510
left you'll see a tiny little RC car

00:18:18,010 --> 00:18:22,240
robot I worked with they had a no droid

00:18:19,510 --> 00:18:25,090
on board and it works just fine on that

00:18:22,240 --> 00:18:27,790
and then to this this is Auto clear path

00:18:25,090 --> 00:18:32,970
latest robot so definitely runs the

00:18:27,790 --> 00:18:32,970
Yemen thank you

00:18:35,510 --> 00:18:39,680
was can we estimate gyro biases and the

00:18:38,270 --> 00:18:40,970
answer is currently not yet

00:18:39,680 --> 00:18:50,350
it's definitely a feature I'd like to

00:18:40,970 --> 00:18:50,350
see I'm added sorry absolutely yes yep

00:18:57,330 --> 00:19:02,920
process noise there in favorite question

00:19:00,940 --> 00:19:05,380
uh no this is the short answer

00:19:02,920 --> 00:19:06,549
again I tend to this tends to be hands

00:19:05,380 --> 00:19:08,110
doing things for me I know there are

00:19:06,549 --> 00:19:10,510
methods in the literature for handling

00:19:08,110 --> 00:19:12,880
that I have not personally ever actually

00:19:10,510 --> 00:19:15,809
implemented one of them I tends to work

00:19:12,880 --> 00:19:15,809
pretty well as is

00:19:30,979 --> 00:19:38,129
and so on let's go back so you're asking

00:19:36,389 --> 00:19:44,449
whether or not we need the IMU data go

00:19:38,129 --> 00:19:44,449
into NASA trans from there okay um so

00:19:48,910 --> 00:20:01,840
Oh Dom the basin yes yes you oh I'm

00:20:00,940 --> 00:20:03,670
sorry if you need that I am you

00:20:01,840 --> 00:20:05,500
different no no no no no absolutely not

00:20:03,670 --> 00:20:07,960
no I mean it's just whatever whatever

00:20:05,500 --> 00:20:09,400
frame on your map happens to be it's

00:20:07,960 --> 00:20:10,450
okay if you don't have one I mean I

00:20:09,400 --> 00:20:13,770
don't know why you wouldn't use it but

00:20:10,450 --> 00:20:13,770

YouTube URL: https://www.youtube.com/watch?v=nfvvpYBAMww


