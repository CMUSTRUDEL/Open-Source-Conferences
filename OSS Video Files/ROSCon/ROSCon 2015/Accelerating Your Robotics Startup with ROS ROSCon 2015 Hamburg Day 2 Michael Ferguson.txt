Title: Accelerating Your Robotics Startup with ROS ROSCon 2015 Hamburg Day 2 Michael Ferguson
Publication date: 2015-12-08
Playlist: ROSCon 2015
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2015 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:06,000
okay thank you so yes so this talk is

00:00:03,929 --> 00:00:09,570
called accelerating a robotics start up

00:00:06,000 --> 00:00:11,550
with Ross um as Ryan did say I've given

00:00:09,570 --> 00:00:12,780
a talk similar not exactly the same talk

00:00:11,550 --> 00:00:14,130
I've actually you know it's a different

00:00:12,780 --> 00:00:15,690
audience here I gave a similar talk

00:00:14,130 --> 00:00:17,400
about two weeks ago at Robo business

00:00:15,690 --> 00:00:19,680
where clearly they're very interested in

00:00:17,400 --> 00:00:21,720
the robot in the business side maybe not

00:00:19,680 --> 00:00:22,859
so much in the raw side and so there are

00:00:21,720 --> 00:00:24,420
bunch of slides in there to try and

00:00:22,859 --> 00:00:27,000
convince them that open source and Ross

00:00:24,420 --> 00:00:30,060
is awesome I think you've been here long

00:00:27,000 --> 00:00:31,920
enough we can skip those um I actually

00:00:30,060 --> 00:00:34,140
the first time I sort of started on this

00:00:31,920 --> 00:00:36,450
topic was back at the Ross industrial

00:00:34,140 --> 00:00:38,250
meeting in may as well Sean Edwards had

00:00:36,450 --> 00:00:41,219
asked me to make a few comments about

00:00:38,250 --> 00:00:43,890
how we use Ross at fetch and so we'll

00:00:41,219 --> 00:00:45,180
also cover that so basically the layout

00:00:43,890 --> 00:00:46,469
of this talk is we're going to sort of

00:00:45,180 --> 00:00:48,030
talk about what are some of the typical

00:00:46,469 --> 00:00:50,149
concerns that come up when you start to

00:00:48,030 --> 00:00:52,500
use open source in a commercial endeavor

00:00:50,149 --> 00:00:53,760
and then we're going to address some of

00:00:52,500 --> 00:00:56,250
those concerns as we talk about

00:00:53,760 --> 00:00:59,879
continuous integration and then open

00:00:56,250 --> 00:01:01,590
source vs. sort of IP retention and then

00:00:59,879 --> 00:01:05,369
sort of do a more in-depth aspect about

00:01:01,590 --> 00:01:07,590
how Ross is used at fetch and and my

00:01:05,369 --> 00:01:09,180
last point on all of this is I'm not a

00:01:07,590 --> 00:01:10,439
lawyer and so none of this is legal

00:01:09,180 --> 00:01:13,110
advice and you should talk to your

00:01:10,439 --> 00:01:15,780
probably over priced lawyers to get the

00:01:13,110 --> 00:01:18,330
real answer that you know they'll

00:01:15,780 --> 00:01:21,180
actually be on the hook for so typical

00:01:18,330 --> 00:01:22,590
concerns there's there's three maybe a

00:01:21,180 --> 00:01:24,780
fourth that I'm not actually an address

00:01:22,590 --> 00:01:26,850
but the three that typically come up is

00:01:24,780 --> 00:01:29,820
sort of the technical debt that comes in

00:01:26,850 --> 00:01:31,380
from using this open source project the

00:01:29,820 --> 00:01:33,090
system stability because now you're

00:01:31,380 --> 00:01:35,880
dependent on something that's external

00:01:33,090 --> 00:01:38,009
and of course I p the fourth one which

00:01:35,880 --> 00:01:40,860
I'm not actually going to cut a cover a

00:01:38,009 --> 00:01:42,150
tall is security and somebody did

00:01:40,860 --> 00:01:43,950
actually call me out on that at the Robo

00:01:42,150 --> 00:01:48,990
business talks so put that right up

00:01:43,950 --> 00:01:50,640
front so typical concerns technical debt

00:01:48,990 --> 00:01:52,560
and system stability I think are the two

00:01:50,640 --> 00:01:54,540
that really come to mind first for

00:01:52,560 --> 00:01:56,490
engineers the business people be much

00:01:54,540 --> 00:01:57,810
more concerned about the IP your

00:01:56,490 --> 00:02:01,079
investors be much more concerned about

00:01:57,810 --> 00:02:02,790
the IP but can you know the technical

00:02:01,079 --> 00:02:05,329
debt and the stability is really

00:02:02,790 --> 00:02:08,399
important and so continuous integration

00:02:05,329 --> 00:02:09,899
which I'm a really big advocate of is

00:02:08,399 --> 00:02:11,580
really important and that basically is

00:02:09,899 --> 00:02:13,440
going to give you typically three things

00:02:11,580 --> 00:02:14,640
so that's automated built

00:02:13,440 --> 00:02:16,680
right you're going to build everything

00:02:14,640 --> 00:02:17,730
in a clean environment you're going to

00:02:16,680 --> 00:02:19,590
know that you have the right

00:02:17,730 --> 00:02:20,910
dependencies because you might have

00:02:19,590 --> 00:02:22,170
something on your workstation and when

00:02:20,910 --> 00:02:24,650
you try and roll it out into the field

00:02:22,170 --> 00:02:27,000
you want it to work exactly the same way

00:02:24,650 --> 00:02:29,790
you also want to run all of your tests

00:02:27,000 --> 00:02:31,560
and you should be writing tests and so

00:02:29,790 --> 00:02:33,390
automated test running all of those

00:02:31,560 --> 00:02:35,130
packages after each commit to make sure

00:02:33,390 --> 00:02:37,650
that things still work and that you're

00:02:35,130 --> 00:02:39,510
not getting regressions or that

00:02:37,650 --> 00:02:41,310
regressions aren't coming in from

00:02:39,510 --> 00:02:44,220
upstream since you are dependent on

00:02:41,310 --> 00:02:46,200
external projects and then automated

00:02:44,220 --> 00:02:48,600
deployment which for Ross is basically

00:02:46,200 --> 00:02:53,210
the Debian packages or or maybe snappy

00:02:48,600 --> 00:02:55,260
in the future so so that's what

00:02:53,210 --> 00:02:57,690
automated continuous integration would

00:02:55,260 --> 00:02:59,280
involve you know obviously i think i've

00:02:57,690 --> 00:03:01,320
already said here you depend on external

00:02:59,280 --> 00:03:03,030
packages it's really really important

00:03:01,320 --> 00:03:04,740
there that if somebody changes something

00:03:03,030 --> 00:03:06,330
upstream you catch it early you don't

00:03:04,740 --> 00:03:07,740
want to catch it at a customer site you

00:03:06,330 --> 00:03:11,490
want to catch it in house during your

00:03:07,740 --> 00:03:13,200
in-house testing it this is absolutely

00:03:11,490 --> 00:03:15,060
key to success you know if you're

00:03:13,200 --> 00:03:16,470
running a company don't have continuous

00:03:15,060 --> 00:03:20,070
integration you're not actually running

00:03:16,470 --> 00:03:21,750
a company I even if you're running a

00:03:20,070 --> 00:03:23,459
large project you know throughout the

00:03:21,750 --> 00:03:25,440
weekend we've heard a lot of people they

00:03:23,459 --> 00:03:26,850
well we we had this and then then we had

00:03:25,440 --> 00:03:28,230
this problem or something along those

00:03:26,850 --> 00:03:29,459
lines there were a lot of you know in

00:03:28,230 --> 00:03:31,050
the trenches stories where continuous

00:03:29,459 --> 00:03:32,730
integration might have actually helped

00:03:31,050 --> 00:03:36,780
quite a bit there so it's just good

00:03:32,730 --> 00:03:39,150
practice there was just a continuous

00:03:36,780 --> 00:03:41,070
integration discussion right over here

00:03:39,150 --> 00:03:42,840
during the parts of a feather a couple

00:03:41,070 --> 00:03:45,450
things came up there's a discussion of

00:03:42,840 --> 00:03:46,680
what is out there one of the outcomes of

00:03:45,450 --> 00:03:47,910
that birds and feathers that we're

00:03:46,680 --> 00:03:50,040
actually going to create a continuous

00:03:47,910 --> 00:03:52,050
integration page on the wiki that

00:03:50,040 --> 00:03:53,580
actually tells you where these different

00:03:52,050 --> 00:03:56,430
projects are and there's basically two

00:03:53,580 --> 00:03:59,489
main flavors at this point one is that

00:03:56,430 --> 00:04:02,100
the open-source robotics foundation has

00:03:59,489 --> 00:04:03,750
their Jenkins build farm there's the

00:04:02,100 --> 00:04:06,450
existing version that's running for Ross

00:04:03,750 --> 00:04:09,540
there's a new version as well and I have

00:04:06,450 --> 00:04:12,510
a Wi-Fi pop up here okay and then there

00:04:09,540 --> 00:04:13,739
is a build bought Ross which would I

00:04:12,510 --> 00:04:15,930
produced actually an unbounded robotics

00:04:13,739 --> 00:04:18,330
and then we continue to use that batch

00:04:15,930 --> 00:04:19,709
and so this is sort of that that same

00:04:18,330 --> 00:04:21,590
graphic it's actually straight out of my

00:04:19,709 --> 00:04:24,000
talk last year on continuous integration

00:04:21,590 --> 00:04:25,080
and then the you know the view with the

00:04:24,000 --> 00:04:25,960
waterfall and so if you're more

00:04:25,080 --> 00:04:27,069
interested in

00:04:25,960 --> 00:04:29,229
integration that's all I'm gonna say

00:04:27,069 --> 00:04:30,310
about that check out the talk that I did

00:04:29,229 --> 00:04:32,380
last year which actually goes through

00:04:30,310 --> 00:04:35,500
all those things much more detail

00:04:32,380 --> 00:04:36,849
because that's the whole talk I even

00:04:35,500 --> 00:04:38,500
when you're using continuous integration

00:04:36,849 --> 00:04:40,810
there's some other rules that you should

00:04:38,500 --> 00:04:42,310
really follow use the LTS releases

00:04:40,810 --> 00:04:43,599
they're going to be around for a while

00:04:42,310 --> 00:04:45,970
they should hopefully be a lot more

00:04:43,599 --> 00:04:48,910
stable that goes for both a bun to and

00:04:45,970 --> 00:04:50,650
Ross you know if it takes you you know

00:04:48,910 --> 00:04:54,880
six to twelve months to actually roll a

00:04:50,650 --> 00:04:56,680
new version out well jade is going to be

00:04:54,880 --> 00:05:00,940
gone in like a year and a half because

00:04:56,680 --> 00:05:02,380
it's already six months old and so those

00:05:00,940 --> 00:05:04,479
are those are two that made you know tho

00:05:02,380 --> 00:05:06,430
those items are basically addressing the

00:05:04,479 --> 00:05:10,120
first two issues so the third issue that

00:05:06,430 --> 00:05:12,880
we had was sort of you know IP right and

00:05:10,120 --> 00:05:14,050
so this talk actually comes out of a lot

00:05:12,880 --> 00:05:15,610
of discussions that have had of people

00:05:14,050 --> 00:05:17,710
where they walk in they go oh so you're

00:05:15,610 --> 00:05:19,539
using open source so that means

00:05:17,710 --> 00:05:21,099
everything you do has to be you know you

00:05:19,539 --> 00:05:23,949
have to give it all the way it's like no

00:05:21,099 --> 00:05:25,870
that's that's not true okay there are

00:05:23,949 --> 00:05:28,599
many licenses out there and there are

00:05:25,870 --> 00:05:29,830
many licenses in bross as well there's a

00:05:28,599 --> 00:05:31,690
couple of common themes that basically

00:05:29,830 --> 00:05:33,699
come up in all of these licenses and you

00:05:31,690 --> 00:05:36,190
should certainly you know look into

00:05:33,699 --> 00:05:38,080
these if you're using open source at all

00:05:36,190 --> 00:05:39,610
but especially if you're using it in a

00:05:38,080 --> 00:05:40,960
commercial endeavor because then you're

00:05:39,610 --> 00:05:44,050
hopefully making money and then

00:05:40,960 --> 00:05:45,430
somebody's going to sue you so the

00:05:44,050 --> 00:05:46,990
common themes here are basically you

00:05:45,430 --> 00:05:49,570
know the copyright holder who holds the

00:05:46,990 --> 00:05:52,810
copyright what rights do they read to

00:05:49,570 --> 00:05:54,729
what rights do they retain there's also

00:05:52,810 --> 00:05:56,740
you know particularly in the bsd license

00:05:54,729 --> 00:05:58,509
can you use the name of that copyright

00:05:56,740 --> 00:06:01,479
holder without their permission usually

00:05:58,509 --> 00:06:04,320
the answer's no a good license will

00:06:01,479 --> 00:06:07,210
cover binary versus sorcery distribution

00:06:04,320 --> 00:06:08,710
which is where Creative Commons is

00:06:07,210 --> 00:06:10,630
actually pretty bad because they don't

00:06:08,710 --> 00:06:12,880
distinguish between the two if you're

00:06:10,630 --> 00:06:14,020
creating and this is for everybody if

00:06:12,880 --> 00:06:15,370
you're creating open source software

00:06:14,020 --> 00:06:20,949
please don't use a Creative Commons

00:06:15,370 --> 00:06:25,150
license use a real software license new

00:06:20,949 --> 00:06:26,590
theme that actually the Apache to is

00:06:25,150 --> 00:06:28,960
really one of the first licenses to

00:06:26,590 --> 00:06:30,550
cover this is sort of patent arbitration

00:06:28,960 --> 00:06:32,500
as well a lot of earlier software

00:06:30,550 --> 00:06:34,449
licenses didn't discuss patents at all

00:06:32,500 --> 00:06:36,710
even though you might have the right to

00:06:34,449 --> 00:06:40,150
use the software you may still be

00:06:36,710 --> 00:06:44,180
the hook for patent infringement and so

00:06:40,150 --> 00:06:45,500
the open source initiative OSI has a

00:06:44,180 --> 00:06:47,900
number of licenses that they are

00:06:45,500 --> 00:06:49,880
basically OSI approved and these are

00:06:47,900 --> 00:06:53,420
probably the best licenses to use for

00:06:49,880 --> 00:06:56,150
software I'm they will all allow

00:06:53,420 --> 00:06:58,430
commercial use basically all the OSI

00:06:56,150 --> 00:07:00,260
licenses say you can't restrict who can

00:06:58,430 --> 00:07:02,090
use it technically you can use them for

00:07:00,260 --> 00:07:04,670
evil things right the license doesn't

00:07:02,090 --> 00:07:06,170
restrict what you can do with them you

00:07:04,670 --> 00:07:07,280
know not to say that commercial things

00:07:06,170 --> 00:07:09,230
are evil I'm saying that you can use it

00:07:07,280 --> 00:07:12,470
for anything commercial or you know evil

00:07:09,230 --> 00:07:14,510
or good or whatever but you can't

00:07:12,470 --> 00:07:16,640
restrict the usage what they do restrict

00:07:14,510 --> 00:07:19,130
is what rights you have at that point so

00:07:16,640 --> 00:07:21,140
you create a new extension on that and

00:07:19,130 --> 00:07:23,000
if you create some new code many of

00:07:21,140 --> 00:07:24,770
those licenses will require that you

00:07:23,000 --> 00:07:27,320
sort of copyleft which means you give it

00:07:24,770 --> 00:07:30,760
all back and that you have to release

00:07:27,320 --> 00:07:32,690
all of that code under the same license

00:07:30,760 --> 00:07:34,100
this actually came out of a talk on

00:07:32,690 --> 00:07:35,270
friday night with someone since I'm

00:07:34,100 --> 00:07:37,850
frequently talking about things like

00:07:35,270 --> 00:07:41,270
this as my lawyer verse licensed matrix

00:07:37,850 --> 00:07:42,320
and so this comes out of you know in a

00:07:41,270 --> 00:07:44,120
commercial endeavor you're eventually

00:07:42,320 --> 00:07:45,890
going to be doing fundraising you know

00:07:44,120 --> 00:07:47,000
potentially going public or being

00:07:45,890 --> 00:07:48,260
acquired you know there's going to be

00:07:47,000 --> 00:07:50,180
many times in which you do due diligence

00:07:48,260 --> 00:07:51,950
and that means a whole bunch of lawyers

00:07:50,180 --> 00:07:53,000
come in take a look at everything you've

00:07:51,950 --> 00:07:54,800
done and they're going to look at things

00:07:53,000 --> 00:07:56,090
like financials and who your people are

00:07:54,800 --> 00:07:57,440
and stuff like that but there are

00:07:56,090 --> 00:07:58,940
especially going to be concerned if

00:07:57,440 --> 00:08:00,380
you're using Ross and using open source

00:07:58,940 --> 00:08:02,180
they want to know that you've done

00:08:00,380 --> 00:08:04,160
everything right and so this matrix

00:08:02,180 --> 00:08:06,350
basically splenda three categories of

00:08:04,160 --> 00:08:08,450
you know your lawyers probably won't

00:08:06,350 --> 00:08:09,920
care much they're going to look it over

00:08:08,450 --> 00:08:11,450
but if you know you've got it all

00:08:09,920 --> 00:08:13,280
documented you're good if you're under

00:08:11,450 --> 00:08:15,920
one of these sort of licenses like the

00:08:13,280 --> 00:08:17,360
MIT or the BSD license especially if

00:08:15,920 --> 00:08:19,450
you're more under the Apache to it at

00:08:17,360 --> 00:08:21,080
least addresses Pat and items on there

00:08:19,450 --> 00:08:23,990
the lawyers are going to be very

00:08:21,080 --> 00:08:27,170
concerned if you know you're using

00:08:23,990 --> 00:08:28,550
something that's lgpl right so and and

00:08:27,170 --> 00:08:32,110
you're extending it with your I won't IP

00:08:28,550 --> 00:08:34,790
right so lgpl basically allows you to

00:08:32,110 --> 00:08:36,500
link an application against it and your

00:08:34,790 --> 00:08:37,670
application can stay under a different

00:08:36,500 --> 00:08:39,470
license but if you have to actually

00:08:37,670 --> 00:08:42,440
modify the library that's getting

00:08:39,470 --> 00:08:44,210
released back and so lgpl doesn't

00:08:42,440 --> 00:08:47,000
generally scare them the biggest thing

00:08:44,210 --> 00:08:48,650
is going to be you know if you know if

00:08:47,000 --> 00:08:49,610
you're like well there's this kinematics

00:08:48,650 --> 00:08:50,839
library and we

00:08:49,610 --> 00:08:52,399
come up with this amazing thing in our

00:08:50,839 --> 00:08:54,440
entire business is based around this

00:08:52,399 --> 00:08:56,329
kinematics thing they're going to be

00:08:54,440 --> 00:08:58,399
terrified and it's going to cost a lot

00:08:56,329 --> 00:09:00,410
of money to review that there's other

00:08:58,399 --> 00:09:03,829
lesser-known licenses like the Mozilla

00:09:00,410 --> 00:09:05,930
public license which can cause issues

00:09:03,829 --> 00:09:08,540
this is a file level license it's

00:09:05,930 --> 00:09:12,140
actually applied on I ghen which is used

00:09:08,540 --> 00:09:13,940
throughout Ross most people probably

00:09:12,140 --> 00:09:16,089
aren't extending eigen they're just

00:09:13,940 --> 00:09:18,500
using it and so they're probably ok but

00:09:16,089 --> 00:09:20,120
lawyers won't know about this typically

00:09:18,500 --> 00:09:21,980
this license I found very few of them

00:09:20,120 --> 00:09:22,850
are actually familiar with and so it's

00:09:21,980 --> 00:09:24,140
going to cost money because they going

00:09:22,850 --> 00:09:28,610
to go look at that license in more

00:09:24,140 --> 00:09:30,980
detail if you have like GPL or a GPL and

00:09:28,610 --> 00:09:32,720
you're extending it at all they're going

00:09:30,980 --> 00:09:34,839
to be really really concerned about that

00:09:32,720 --> 00:09:37,190
and again creative comments especially

00:09:34,839 --> 00:09:39,860
the ones that have NC in it for

00:09:37,190 --> 00:09:41,779
non-commercial so for instance G mapping

00:09:39,860 --> 00:09:44,420
is actually under a non-commercial

00:09:41,779 --> 00:09:46,339
license and it's sort of my the poster

00:09:44,420 --> 00:09:50,839
child I think for misused software

00:09:46,339 --> 00:09:54,199
licenses um so that sort of wraps up my

00:09:50,839 --> 00:09:56,300
my discussion on those items sort of

00:09:54,199 --> 00:09:57,940
fetch robotics and Ross on so I think

00:09:56,300 --> 00:09:59,930
you know the important things you know

00:09:57,940 --> 00:10:01,160
when we're going about things is that

00:09:59,930 --> 00:10:03,110
we're building products we're not

00:10:01,160 --> 00:10:04,640
building middleware that's not where the

00:10:03,110 --> 00:10:06,800
value is for selling to our end

00:10:04,640 --> 00:10:08,660
customers it's a lot like the Internet

00:10:06,800 --> 00:10:10,519
everybody is using apache it's what you

00:10:08,660 --> 00:10:12,199
build on top of it that is actually the

00:10:10,519 --> 00:10:15,500
the business that you typically are

00:10:12,199 --> 00:10:17,300
building on so we use a lot of ross

00:10:15,500 --> 00:10:20,060
components you know clearly we have

00:10:17,300 --> 00:10:22,250
these things like raw CBP ross pie we're

00:10:20,060 --> 00:10:24,709
big users of action live as anybody

00:10:22,250 --> 00:10:26,000
building a robot really should be on you

00:10:24,709 --> 00:10:28,279
know there's huge value propositions

00:10:26,000 --> 00:10:29,630
from tools like rvs and our cutie and

00:10:28,279 --> 00:10:32,060
the various drivers you know you can go

00:10:29,630 --> 00:10:33,740
out and buy a sick laser and then go

00:10:32,060 --> 00:10:35,180
online and just download the drivers and

00:10:33,740 --> 00:10:37,610
get it working very quickly and it's

00:10:35,180 --> 00:10:39,079
connected right into ross and then

00:10:37,610 --> 00:10:42,140
there's things that are kind of i call

00:10:39,079 --> 00:10:44,630
them robot primitives navigation and

00:10:42,140 --> 00:10:46,430
move it these are sort of the beginnings

00:10:44,630 --> 00:10:48,589
of an application they're not the whole

00:10:46,430 --> 00:10:50,510
thing right there certainly not at a

00:10:48,589 --> 00:10:51,680
commercial level and those are the ones

00:10:50,510 --> 00:10:53,870
i'm going to go into a little bit more

00:10:51,680 --> 00:10:55,699
detail with how to sort of give you an

00:10:53,870 --> 00:10:57,709
idea of you know when you're going out

00:10:55,699 --> 00:10:59,329
and looking at ross packages i think we

00:10:57,709 --> 00:11:00,740
just even heard in the last talk here

00:10:59,329 --> 00:11:02,000
you know oh there's a lot of things that

00:11:00,740 --> 00:11:03,290
are a very different level

00:11:02,000 --> 00:11:05,480
things that are very stable there's

00:11:03,290 --> 00:11:06,890
things that are very much not and so

00:11:05,480 --> 00:11:08,120
it's really important to look at those

00:11:06,890 --> 00:11:09,590
individual software packages and

00:11:08,120 --> 00:11:10,880
evaluate them so we're going to take a

00:11:09,590 --> 00:11:13,820
look at two in particular here one is

00:11:10,880 --> 00:11:14,960
Ross navigation and so the image up in

00:11:13,820 --> 00:11:16,880
the corner is basically straight off

00:11:14,960 --> 00:11:19,760
github and I think this is a couple

00:11:16,880 --> 00:11:22,580
months old now but you know 59 stars and

00:11:19,760 --> 00:11:24,920
almost 200 Forks I'm sure we're probably

00:11:22,580 --> 00:11:27,880
over 200 at this point so that's a

00:11:24,920 --> 00:11:30,380
really big community around that project

00:11:27,880 --> 00:11:32,150
you know it runs on numerous platforms

00:11:30,380 --> 00:11:34,010
you know right you know start on the pr2

00:11:32,150 --> 00:11:36,410
it runs on all sorts of robots a clear

00:11:34,010 --> 00:11:38,270
path at fetch you know probably

00:11:36,410 --> 00:11:39,890
everybody in the room has interacted

00:11:38,270 --> 00:11:42,640
maybe with a turtlebot along the way or

00:11:39,890 --> 00:11:44,660
something else these all run navigation

00:11:42,640 --> 00:11:46,910
typically getting it on to a new

00:11:44,660 --> 00:11:48,320
platform really only maybe requires

00:11:46,910 --> 00:11:50,270
tweaking parameters or possibly

00:11:48,320 --> 00:11:53,840
replacing the local planner if you don't

00:11:50,270 --> 00:11:58,040
have saved if drive base or in holonomic

00:11:53,840 --> 00:11:59,900
base it is plugin based the cost map 2d

00:11:58,040 --> 00:12:01,430
is all plugins for each of the layers

00:11:59,900 --> 00:12:04,190
you can change them out you can put new

00:12:01,430 --> 00:12:05,780
layers in for new sensors you know David

00:12:04,190 --> 00:12:07,640
Luiz edit something like the social

00:12:05,780 --> 00:12:09,110
layer in his PhD work and so you can do

00:12:07,640 --> 00:12:11,750
all sorts of really interesting things

00:12:09,110 --> 00:12:13,339
with the app stack and it's based on the

00:12:11,750 --> 00:12:17,839
move based action which is a very nice

00:12:13,339 --> 00:12:19,280
simple action interface so at fetch we

00:12:17,839 --> 00:12:22,100
were able to basically take navigation

00:12:19,280 --> 00:12:23,510
and not it's not too difficult to get it

00:12:22,100 --> 00:12:25,010
up and running right you can sort of get

00:12:23,510 --> 00:12:27,050
an initial password you know what

00:12:25,010 --> 00:12:28,490
navigates some of the time and you know

00:12:27,050 --> 00:12:29,839
maybe the robot gets lost every so often

00:12:28,490 --> 00:12:31,490
but you can get a you need to go to

00:12:29,839 --> 00:12:33,560
first pass out of the box you know it's

00:12:31,490 --> 00:12:35,360
good enough to make some demos and and

00:12:33,560 --> 00:12:37,460
get that you know get a company moving

00:12:35,360 --> 00:12:40,100
forward you know we've done a lot of

00:12:37,460 --> 00:12:42,260
work of sort of improving the cost maps

00:12:40,100 --> 00:12:44,510
I did a big overhaul on all of the

00:12:42,260 --> 00:12:47,570
mutexes just Ryan fix race conditions

00:12:44,510 --> 00:12:49,070
and pull you know x or it would hang and

00:12:47,570 --> 00:12:51,080
we actually chose with that to release

00:12:49,070 --> 00:12:52,940
it back to the community and so I'm

00:12:51,080 --> 00:12:54,560
going to sort of take a little bit of a

00:12:52,940 --> 00:12:56,150
Segway here and sort of discuss you know

00:12:54,560 --> 00:12:57,710
some of our thoughts on that area is you

00:12:56,150 --> 00:12:59,000
know I frequently am asked you know what

00:12:57,710 --> 00:13:01,250
do you keep private what do you release

00:12:59,000 --> 00:13:03,170
back and we usually sort of sit down and

00:13:01,250 --> 00:13:05,180
take a look at and say well how much

00:13:03,170 --> 00:13:06,320
effort would it be to keep this private

00:13:05,180 --> 00:13:08,120
because now we're going to maintain a

00:13:06,320 --> 00:13:10,459
fork and so there's a lot of overhead

00:13:08,120 --> 00:13:13,440
involved in that you know is this really

00:13:10,459 --> 00:13:15,060
critical IP that's you know

00:13:13,440 --> 00:13:16,830
competitive advantage or is it really

00:13:15,060 --> 00:13:18,660
just gonna be more of a pain to sort of

00:13:16,830 --> 00:13:20,550
maintain our own fork and for this

00:13:18,660 --> 00:13:21,960
particular one with the cost map 2d we

00:13:20,550 --> 00:13:24,210
decided you know we were going to

00:13:21,960 --> 00:13:26,430
release those back however we then moved

00:13:24,210 --> 00:13:28,200
on to replacing both the local and

00:13:26,430 --> 00:13:30,150
global planners and those are actually

00:13:28,200 --> 00:13:31,500
closed source plugins that we load into

00:13:30,150 --> 00:13:33,450
our commercial version of the navigation

00:13:31,500 --> 00:13:35,300
stack and so that allows us to protect

00:13:33,450 --> 00:13:37,110
that IP or we've done a lot of work

00:13:35,300 --> 00:13:39,240
extending something that's not actually

00:13:37,110 --> 00:13:40,890
an existing module out there but

00:13:39,240 --> 00:13:45,150
building something new that connects to

00:13:40,890 --> 00:13:47,550
the existing system similar with move

00:13:45,150 --> 00:13:49,850
vet ah so this is I think from muvek

00:13:47,550 --> 00:13:51,900
core which is the the base module

00:13:49,850 --> 00:13:53,250
there's a whole bunch of different repos

00:13:51,900 --> 00:13:55,470
and move in so it's a little harder to

00:13:53,250 --> 00:13:57,480
get sort of just two numbers but so not

00:13:55,470 --> 00:14:00,090
move it is a couple of years younger

00:13:57,480 --> 00:14:02,820
than navigation so you know 25 and ed

00:14:00,090 --> 00:14:06,450
but that's still a pretty vibrant

00:14:02,820 --> 00:14:08,760
community and move it connects a lot of

00:14:06,450 --> 00:14:12,120
other projects underneath it like om PL

00:14:08,760 --> 00:14:14,340
and fcl om PL being the motion open

00:14:12,120 --> 00:14:16,500
motion planning library fcl being the

00:14:14,340 --> 00:14:18,600
flexible collision library and so these

00:14:16,500 --> 00:14:22,920
libraries also have vibrant communities

00:14:18,600 --> 00:14:24,510
of their own this again runs on numerous

00:14:22,920 --> 00:14:26,910
platforms I think Dave this morning

00:14:24,510 --> 00:14:28,260
mentioned that it's like 65 or more

00:14:26,910 --> 00:14:29,910
robots at this point it's definitely

00:14:28,260 --> 00:14:34,320
more because if it was 65 there I didn't

00:14:29,910 --> 00:14:37,290
see fetch in his graphics but it is

00:14:34,320 --> 00:14:39,510
again plug-in based ok so you can do new

00:14:37,290 --> 00:14:41,720
planners you can do new plan adapters

00:14:39,510 --> 00:14:44,130
things like trajectory smoothing and

00:14:41,720 --> 00:14:47,670
again it's based on actions for move

00:14:44,130 --> 00:14:49,440
group and pick in place on how we've

00:14:47,670 --> 00:14:51,000
used it at fetch so basically the

00:14:49,440 --> 00:14:52,140
initial configuration for movement is

00:14:51,000 --> 00:14:53,970
actually a little bit easier you saw the

00:14:52,140 --> 00:14:56,130
setup assistant you can sort of get the

00:14:53,970 --> 00:14:57,780
thing running very quickly in simulation

00:14:56,130 --> 00:14:59,940
once you have a you rdf and a model of

00:14:57,780 --> 00:15:01,410
your robot and then you can start to

00:14:59,940 --> 00:15:05,070
move it onto the robot and tune it all

00:15:01,410 --> 00:15:06,900
in and then we've also then gone and

00:15:05,070 --> 00:15:08,490
made some new plugins so we have a new

00:15:06,900 --> 00:15:09,810
planner that we use in a new collision

00:15:08,490 --> 00:15:11,790
check on a trajectory adapter so we've

00:15:09,810 --> 00:15:13,050
replaced a large section of move it but

00:15:11,790 --> 00:15:15,660
we still get the tools like our

00:15:13,050 --> 00:15:17,520
visualization and things like that we've

00:15:15,660 --> 00:15:19,770
also because move it's still heavily

00:15:17,520 --> 00:15:22,260
under development we've built some of

00:15:19,770 --> 00:15:23,610
our own back-end end-to-end integration

00:15:22,260 --> 00:15:25,529
tests that basically go through and

00:15:23,610 --> 00:15:28,170
build all sorts of plans

00:15:25,529 --> 00:15:29,999
so that we know when something new comes

00:15:28,170 --> 00:15:32,129
in that it's actually still all going to

00:15:29,999 --> 00:15:34,199
work nicely and those are deployed I'm

00:15:32,129 --> 00:15:36,569
buildbot Ross and we also do a lot of

00:15:34,199 --> 00:15:38,459
staging of packages move it's a lot less

00:15:36,569 --> 00:15:41,879
stable than many of the other parts in

00:15:38,459 --> 00:15:43,529
Ross and so staging and testing each

00:15:41,879 --> 00:15:48,170
time means that we don't roll out

00:15:43,529 --> 00:15:51,149
something that's broken so across those

00:15:48,170 --> 00:15:52,410
two packages which are both actually a

00:15:51,149 --> 00:15:54,569
whole bunch of ross packages that's

00:15:52,410 --> 00:15:56,100
about i only discuss two things but i

00:15:54,569 --> 00:15:59,069
actually discussed about 35 ross

00:15:56,100 --> 00:16:00,930
packages i think right there there's

00:15:59,069 --> 00:16:03,959
some common elements you know simple

00:16:00,930 --> 00:16:06,059
action based interfaces there they allow

00:16:03,959 --> 00:16:07,800
easy external interaction right plugin

00:16:06,059 --> 00:16:09,389
based interfaces are great for

00:16:07,800 --> 00:16:11,759
commercial development because you can

00:16:09,389 --> 00:16:12,959
change out an individual module as long

00:16:11,759 --> 00:16:16,139
as the license of the thing you're

00:16:12,959 --> 00:16:17,430
linking against is all good the Wizards

00:16:16,139 --> 00:16:19,079
and tutorials for set up a new

00:16:17,430 --> 00:16:21,120
platformer really great so when you find

00:16:19,079 --> 00:16:22,680
packages where they have those tutorials

00:16:21,120 --> 00:16:24,689
and those wizards you know somebody

00:16:22,680 --> 00:16:27,059
spent the time to get their

00:16:24,689 --> 00:16:28,079
documentation in order typically means

00:16:27,059 --> 00:16:31,410
that it's probably going to be higher

00:16:28,079 --> 00:16:33,930
quality code inside as well graphical

00:16:31,410 --> 00:16:35,790
debugging with our vis if you don't have

00:16:33,930 --> 00:16:38,040
graphical debugging coming out of the

00:16:35,790 --> 00:16:40,199
out of this program it's probably not

00:16:38,040 --> 00:16:41,670
going to be very great to use and and I

00:16:40,199 --> 00:16:46,259
think documentation is absolutely

00:16:41,670 --> 00:16:47,370
important and so this is somewhat

00:16:46,259 --> 00:16:49,230
redundant with that but sort of

00:16:47,370 --> 00:16:51,269
evaluating Ross package and sort of just

00:16:49,230 --> 00:16:52,949
the 11 page thing right is like look at

00:16:51,269 --> 00:16:54,750
the license does it have documentation

00:16:52,949 --> 00:16:57,029
what was it last updated there's a lot

00:16:54,750 --> 00:16:59,220
of things in Ross that are old like

00:16:57,029 --> 00:17:00,689
really old like groovy and forte and

00:16:59,220 --> 00:17:01,620
haven't been updated since they're

00:17:00,689 --> 00:17:04,319
probably not going to work out of the

00:17:01,620 --> 00:17:05,490
box and you know why did people abandon

00:17:04,319 --> 00:17:07,380
them there may be something better

00:17:05,490 --> 00:17:09,780
that's come along you know instead of

00:17:07,380 --> 00:17:13,949
robot Posey KF you should definitely be

00:17:09,780 --> 00:17:16,199
using robot localization for instance is

00:17:13,949 --> 00:17:18,120
it released as a Debian package that's

00:17:16,199 --> 00:17:19,409
an extra step before the developer so if

00:17:18,120 --> 00:17:20,819
they've gone that extra mile it's

00:17:19,409 --> 00:17:23,490
probably higher quality code again

00:17:20,819 --> 00:17:25,589
inside does it have tests if not

00:17:23,490 --> 00:17:28,439
definitely walk away it does it have

00:17:25,589 --> 00:17:29,940
standard interfaces you know if it uses

00:17:28,439 --> 00:17:31,679
the same interface as other similar

00:17:29,940 --> 00:17:33,270
packages that do the same thing you

00:17:31,679 --> 00:17:34,450
could eventually you know swap it out

00:17:33,270 --> 00:17:36,580
much easier in the end

00:17:34,450 --> 00:17:37,899
you know again with like the robot Posey

00:17:36,580 --> 00:17:40,830
Kiev and robot localization they have

00:17:37,899 --> 00:17:45,760
the same interfaces which is really nice

00:17:40,830 --> 00:17:47,289
and so lastly I you know a lot of this

00:17:45,760 --> 00:17:49,000
is tailored towards startups some of

00:17:47,289 --> 00:17:51,370
that information is valuable other

00:17:49,000 --> 00:17:52,600
people as well but my advice to startups

00:17:51,370 --> 00:17:54,399
is you know going back to that due

00:17:52,600 --> 00:17:56,529
diligence aspect keep track of all the

00:17:54,399 --> 00:17:58,179
open source keep a spreadsheet all of my

00:17:56,529 --> 00:17:59,980
engineers that fetch when they bring a

00:17:58,179 --> 00:18:01,510
new package in they have to go add it to

00:17:59,980 --> 00:18:03,399
the spreadsheet right and so it's what

00:18:01,510 --> 00:18:05,559
license you know where did the source

00:18:03,399 --> 00:18:08,260
code come from what version are you

00:18:05,559 --> 00:18:09,700
using and keep track of all of that so

00:18:08,260 --> 00:18:11,679
that you know what you actually have

00:18:09,700 --> 00:18:13,029
their answer that it's ready to go every

00:18:11,679 --> 00:18:16,269
time you need to hand it over to a legal

00:18:13,029 --> 00:18:18,010
team similarly avoiding any of those

00:18:16,269 --> 00:18:19,929
weird licenses they're just going to

00:18:18,010 --> 00:18:22,059
cost you more in the end so unless the

00:18:19,929 --> 00:18:24,850
package is really amazing it's probably

00:18:22,059 --> 00:18:27,100
not worth the hassle and use continuous

00:18:24,850 --> 00:18:30,190
integration from day 0 you know

00:18:27,100 --> 00:18:31,809
definitely before you're even we had

00:18:30,190 --> 00:18:33,639
continuous integration running at fetch

00:18:31,809 --> 00:18:36,010
long before we actually even a robots

00:18:33,639 --> 00:18:41,220
running around and so that's absolutely

00:18:36,010 --> 00:18:41,220
essential and that's what I've got so

00:18:50,890 --> 00:18:54,130
what was that

00:18:55,740 --> 00:19:02,890
the I think League of us oh oh sorry I

00:19:00,730 --> 00:19:05,320
skipped over that yes so so effectively

00:19:02,890 --> 00:19:06,610
I you know it does have patent

00:19:05,320 --> 00:19:09,670
arbitration in there right and so

00:19:06,610 --> 00:19:11,950
basically I you know by contributing to

00:19:09,670 --> 00:19:14,320
it you are potentially also giving up

00:19:11,950 --> 00:19:16,120
patent rights that you hold right once

00:19:14,320 --> 00:19:18,430
you've joined into that consortium and

00:19:16,120 --> 00:19:21,370
started to you know contribute code to

00:19:18,430 --> 00:19:22,390
it patents that you have you were

00:19:21,370 --> 00:19:24,970
basically binding yourself to

00:19:22,390 --> 00:19:26,350
arbitration on that as well and so

00:19:24,970 --> 00:19:28,000
that's sort of the double side on that

00:19:26,350 --> 00:19:29,860
is that lawyers may be concerned that

00:19:28,000 --> 00:19:31,210
well you you're getting ready to

00:19:29,860 --> 00:19:33,280
contributor your have already

00:19:31,210 --> 00:19:35,500
contributed some piece of code here that

00:19:33,280 --> 00:19:40,780
is actually really critical IP to the

00:19:35,500 --> 00:19:46,660
company all right any other question one

00:19:40,780 --> 00:19:48,280
back up there I I'm not going to

00:19:46,660 --> 00:19:50,620
actually talk about that I don't know

00:19:48,280 --> 00:19:51,940
enough about clas oh the question was

00:19:50,620 --> 00:19:54,100
yes so the question was what about

00:19:51,940 --> 00:19:56,170
contributor license agreements I have

00:19:54,100 --> 00:19:57,460
recently been heard and I think the OS

00:19:56,170 --> 00:20:00,040
RF can probably give you more

00:19:57,460 --> 00:20:01,780
information on this that with Apache to

00:20:00,040 --> 00:20:05,080
the Apache foundation actually isn't

00:20:01,780 --> 00:20:06,400
doing clas that they it's built into

00:20:05,080 --> 00:20:08,470
their license and so they don't no

00:20:06,400 --> 00:20:10,120
longer feel that it's needed but I think

00:20:08,470 --> 00:20:15,640
that's on a license by license basis and

00:20:10,120 --> 00:20:19,440
definitely consultable air alright time

00:20:15,640 --> 00:20:19,440
for one more question and I think

00:20:31,669 --> 00:20:35,940
so the question was how do you handle

00:20:34,409 --> 00:20:37,440
upstream breakages do you fix it

00:20:35,940 --> 00:20:38,700
internally do you go to the community

00:20:37,440 --> 00:20:40,919
fix it I think it depends on its a

00:20:38,700 --> 00:20:42,240
case-by-case basis it depends on what is

00:20:40,919 --> 00:20:45,059
broken you know if it's a recent

00:20:42,240 --> 00:20:47,100
regression probably ticketing it against

00:20:45,059 --> 00:20:48,960
the the upstream if it's something where

00:20:47,100 --> 00:20:51,299
it wasn't designed for your use case I

00:20:48,960 --> 00:20:52,769
think it depends on how that change it

00:20:51,299 --> 00:20:54,929
you know what that change really is if

00:20:52,769 --> 00:20:56,610
it's valuable IP you may fix it

00:20:54,929 --> 00:20:58,200
internally if it's just sort of a

00:20:56,610 --> 00:21:00,210
trivial thing that something's wrong

00:20:58,200 --> 00:21:02,929
with it you're probably going to open it

00:21:00,210 --> 00:21:02,929

YouTube URL: https://www.youtube.com/watch?v=t-Y0ePhhteg


