Title: ROSCon 2016 Seoul Day 2 Lightning Talk   ros control
Publication date: 2016-10-20
Playlist: ROSCon 2016
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2016 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:04,049
hello I'm Tony Oliver from shell robot

00:00:02,340 --> 00:00:07,259
company and I'd like to present a

00:00:04,049 --> 00:00:09,210
package that can be interesting for

00:00:07,259 --> 00:00:12,840
those of you that use Ross control to

00:00:09,210 --> 00:00:15,120
control your robots so we've found that

00:00:12,840 --> 00:00:18,359
if you have two different robots that

00:00:15,120 --> 00:00:19,619
have a Ross control driver and you want

00:00:18,359 --> 00:00:23,699
to run them in the same control loop

00:00:19,619 --> 00:00:27,660
that's not wasn't feasible until now

00:00:23,699 --> 00:00:30,000
straight away this is the Ross control

00:00:27,660 --> 00:00:31,980
architecture and as you can see there is

00:00:30,000 --> 00:00:35,399
only one robot hardware component here

00:00:31,980 --> 00:00:36,989
that that's your robot driver so there

00:00:35,399 --> 00:00:39,510
was a long discussion on the github

00:00:36,989 --> 00:00:42,300
issues and we took some ideas from

00:00:39,510 --> 00:00:46,710
existing requests and we created this

00:00:42,300 --> 00:00:48,480
package called robot robot hardware a

00:00:46,710 --> 00:00:51,120
combined robot hardware that is not

00:00:48,480 --> 00:00:55,610
showing on the other screen but here

00:00:51,120 --> 00:00:59,100
there's a zoom in where you can see that

00:00:55,610 --> 00:01:01,020
dynamically loads as plugins the robot

00:00:59,100 --> 00:01:04,470
hardware components for your for your

00:01:01,020 --> 00:01:07,530
robot and runs them all in the same in

00:01:04,470 --> 00:01:09,030
the same loop so basically if you have

00:01:07,530 --> 00:01:10,380
an existing robot have the component

00:01:09,030 --> 00:01:13,560
that you want to use with combiner what

00:01:10,380 --> 00:01:15,360
hardware what you will need to do is to

00:01:13,560 --> 00:01:17,549
have a parameterless constructor because

00:01:15,360 --> 00:01:20,009
it's using plugin lip and that's a

00:01:17,549 --> 00:01:22,020
requirement and then have an init

00:01:20,009 --> 00:01:25,500
function where the initialization of

00:01:22,020 --> 00:01:28,710
your robot happens and it gets passed an

00:01:25,500 --> 00:01:30,090
old handle so yeah please if you are

00:01:28,710 --> 00:01:32,250
going to implement a robot hardware

00:01:30,090 --> 00:01:34,890
component consider making it compatible

00:01:32,250 --> 00:01:37,490
with combined robot hardware here's the

00:01:34,890 --> 00:01:40,579
link of some examples of how to do it

00:01:37,490 --> 00:01:45,229
then there's it also this other package

00:01:40,579 --> 00:01:47,670
where we have a ready to use note that

00:01:45,229 --> 00:01:50,180
raised a real time loop it's based on

00:01:47,670 --> 00:01:53,250
the on the pier to main loop and

00:01:50,180 --> 00:01:56,310
basically that allows you by configuring

00:01:53,250 --> 00:01:59,909
which plugins do you want to load on a

00:01:56,310 --> 00:02:02,250
parameter to launch straight away your

00:01:59,909 --> 00:02:07,729
your robot with the proper drivers

00:02:02,250 --> 00:02:07,729

YouTube URL: https://www.youtube.com/watch?v=Ci2ZveOCqB0


