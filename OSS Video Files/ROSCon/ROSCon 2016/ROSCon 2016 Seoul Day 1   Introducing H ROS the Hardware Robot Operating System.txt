Title: ROSCon 2016 Seoul Day 1   Introducing H ROS the Hardware Robot Operating System
Publication date: 2016-10-20
Playlist: ROSCon 2016
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2016 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:04,620
alright good afternoon everyone so I'm

00:00:02,850 --> 00:00:06,870
happy to be here at ross cohen one more

00:00:04,620 --> 00:00:08,400
year I've come this time to present the

00:00:06,870 --> 00:00:10,200
work that my team and I have been doing

00:00:08,400 --> 00:00:11,759
around hardware for robots something

00:00:10,200 --> 00:00:14,309
that we've called a hardware robot

00:00:11,759 --> 00:00:15,990
operating system but before I just jump

00:00:14,309 --> 00:00:19,020
into this let me tell you a few things

00:00:15,990 --> 00:00:21,689
of the path that led us here today so we

00:00:19,020 --> 00:00:23,939
at robotics as a young robotic startup

00:00:21,689 --> 00:00:26,099
we started producing technology in the

00:00:23,939 --> 00:00:28,140
field of drones technology that was Ross

00:00:26,099 --> 00:00:31,019
compatible and that allowed people to

00:00:28,140 --> 00:00:33,270
make flying robots that where was

00:00:31,019 --> 00:00:35,760
compatible and using gazebo and all of

00:00:33,270 --> 00:00:38,250
these tools that we all love so after a

00:00:35,760 --> 00:00:40,290
while we started observing that our

00:00:38,250 --> 00:00:42,840
sales were doubling every single month

00:00:40,290 --> 00:00:44,730
which was pretty cool honestly for for

00:00:42,840 --> 00:00:47,340
us so we kept really see more and more

00:00:44,730 --> 00:00:49,289
tools and while doing so we noticed that

00:00:47,340 --> 00:00:51,059
some of the components the hardware

00:00:49,289 --> 00:00:52,260
components could be reused among

00:00:51,059 --> 00:00:54,930
different robots with a slightly

00:00:52,260 --> 00:00:57,120
different software configurations so

00:00:54,930 --> 00:00:59,910
that really kicked a few ideas within

00:00:57,120 --> 00:01:02,489
our team such as wouldn't it be great if

00:00:59,910 --> 00:01:04,530
we could have reusable components among

00:01:02,489 --> 00:01:07,409
robots with no software configuration

00:01:04,530 --> 00:01:09,960
changes needed wouldn't that actually

00:01:07,409 --> 00:01:12,570
simplify the construction of new robots

00:01:09,960 --> 00:01:14,400
how about replacing damaged components

00:01:12,570 --> 00:01:17,970
with parts from different manufacturers

00:01:14,400 --> 00:01:20,310
not just necessarily ourselves in fact

00:01:17,970 --> 00:01:24,060
wouldn't that actually lower the cost of

00:01:20,310 --> 00:01:25,950
knowledge required to manage robots we

00:01:24,060 --> 00:01:28,020
thought so and overall we started

00:01:25,950 --> 00:01:30,329
believing that it made sense to bring

00:01:28,020 --> 00:01:33,119
Ross to the hardware level in other

00:01:30,329 --> 00:01:34,770
words to make components hardware

00:01:33,119 --> 00:01:39,240
components that were first class

00:01:34,770 --> 00:01:40,979
participants of the Ross ecosystem so we

00:01:39,240 --> 00:01:42,899
started asking why around we talked to

00:01:40,979 --> 00:01:44,729
quite a few roboticists and we found

00:01:42,899 --> 00:01:47,340
that most of them were using Ross which

00:01:44,729 --> 00:01:48,930
is a great thing I believe but

00:01:47,340 --> 00:01:50,700
unfortunately many of those actually

00:01:48,930 --> 00:01:52,970
didn't know of an equivalent for the

00:01:50,700 --> 00:01:57,840
hardware side something that quite a few

00:01:52,970 --> 00:01:59,579
showed certain interest ah besides this

00:01:57,840 --> 00:02:01,380
we notice that most of the robotics is

00:01:59,579 --> 00:02:03,270
creating robots we're doing so in groups

00:02:01,380 --> 00:02:05,579
multidisciplinary groups which were

00:02:03,270 --> 00:02:08,420
generally either a whole division within

00:02:05,579 --> 00:02:10,950
a company or a whole research lab

00:02:08,420 --> 00:02:13,620
unsurprisingly most of their time was

00:02:10,950 --> 00:02:15,870
spent in the hardware software in

00:02:13,620 --> 00:02:17,310
and not in the real application that

00:02:15,870 --> 00:02:20,519
they were trying to solve with that

00:02:17,310 --> 00:02:22,890
robot so that seemed to ask quite a

00:02:20,519 --> 00:02:24,750
problem so on the background of this

00:02:22,890 --> 00:02:27,540
light actually you can see a capture

00:02:24,750 --> 00:02:28,620
from a movie just out of curiosity can

00:02:27,540 --> 00:02:32,730
you raise your hands how many people

00:02:28,620 --> 00:02:35,970
have seen this movie quite a few well

00:02:32,730 --> 00:02:38,099
that's unexpected it's not that good of

00:02:35,970 --> 00:02:41,400
a movie from my opinion especially if

00:02:38,099 --> 00:02:44,250
you're a roboticist honestly but truth

00:02:41,400 --> 00:02:46,109
to be told it shows just a scene that

00:02:44,250 --> 00:02:48,989
might get your attention your during

00:02:46,109 --> 00:02:50,819
this field in one of the scenes at

00:02:48,989 --> 00:02:53,120
chappie which is by the way the name of

00:02:50,819 --> 00:02:56,310
this movie loses one of his harms and

00:02:53,120 --> 00:02:58,290
one of the characters within the movie

00:02:56,310 --> 00:03:00,060
just grabs unarmed from another robot

00:02:58,290 --> 00:03:01,980
from the ground and just plaques it in

00:03:00,060 --> 00:03:04,379
the chappie moves it a bit around just

00:03:01,980 --> 00:03:07,019
plug it in and boom chappie jeez has a

00:03:04,379 --> 00:03:09,540
new arm it just works I mean no SP I

00:03:07,019 --> 00:03:12,900
know i square see no voltage level

00:03:09,540 --> 00:03:14,790
issues I was freaking out seriously as a

00:03:12,900 --> 00:03:16,799
roboticist I was literally freaking out

00:03:14,790 --> 00:03:19,440
and I'm sure I'm sure many of you also

00:03:16,799 --> 00:03:22,200
did but truth to be told I mean people

00:03:19,440 --> 00:03:24,510
out there that is not into robotics it's

00:03:22,200 --> 00:03:26,099
exactly what they expect I mean they

00:03:24,510 --> 00:03:28,769
expect robots to be able to exchange

00:03:26,099 --> 00:03:31,019
parts actually just think about science

00:03:28,769 --> 00:03:33,419
fiction haven't we seen this exact thing

00:03:31,019 --> 00:03:35,700
again and again in science fiction to go

00:03:33,419 --> 00:03:37,019
to Star Wars I mean how many fans of

00:03:35,700 --> 00:03:39,629
your star wars are here that have seen

00:03:37,019 --> 00:03:44,489
use robots exchanging parts I've seen it

00:03:39,629 --> 00:03:46,440
myself so what for a few might seem like

00:03:44,489 --> 00:03:48,810
just science fiction we took it as an

00:03:46,440 --> 00:03:51,750
inspiration and we kept digging on this

00:03:48,810 --> 00:03:53,459
concept in the next question we asked

00:03:51,750 --> 00:03:56,010
ourselves was is it really the right

00:03:53,459 --> 00:03:58,169
time so if we start looking at the

00:03:56,010 --> 00:04:00,030
components that are within robot

00:03:58,169 --> 00:04:01,230
components and itself will find a lot of

00:04:00,030 --> 00:04:03,750
microcontrollers these

00:04:01,230 --> 00:04:06,120
application-specific computational units

00:04:03,750 --> 00:04:09,090
there are tiny and go from two dollars

00:04:06,120 --> 00:04:12,030
up to ten dollars but honestly nowadays

00:04:09,090 --> 00:04:14,940
we have in the market computers fully

00:04:12,030 --> 00:04:18,329
featured computers for five dollars that

00:04:14,940 --> 00:04:20,719
exposed I oh such as USB HDMI and

00:04:18,329 --> 00:04:23,219
provide much more capabilities to us

00:04:20,719 --> 00:04:25,890
roboticists to build robot components

00:04:23,219 --> 00:04:27,150
that are more powerful that expose more

00:04:25,890 --> 00:04:29,280
interfaces that are

00:04:27,150 --> 00:04:31,500
during many senses so it seemed like

00:04:29,280 --> 00:04:34,229
it's starting to be a good time to start

00:04:31,500 --> 00:04:35,699
thinking about this so we had a look

00:04:34,229 --> 00:04:38,400
around and we found this fantastic

00:04:35,699 --> 00:04:40,440
program called the robotics fast-track

00:04:38,400 --> 00:04:42,810
program a program funded by DARPA and

00:04:40,440 --> 00:04:44,639
supported by the osr FM bit systems

00:04:42,810 --> 00:04:47,580
which looked for groundbreaking new

00:04:44,639 --> 00:04:49,800
opportunities in the robotics field we

00:04:47,580 --> 00:04:53,160
applied and fortunately we got selected

00:04:49,800 --> 00:04:56,910
so we started working on this just to

00:04:53,160 --> 00:04:59,400
put it clear rft is looking for rapid

00:04:56,910 --> 00:05:01,229
and cost-effective development with new

00:04:59,400 --> 00:05:02,610
robotic capabilities I'm not sure if

00:05:01,229 --> 00:05:04,560
they are planning to lunch another set

00:05:02,610 --> 00:05:06,210
but I really really encourage robotics

00:05:04,560 --> 00:05:07,830
is out there if they have the chance

00:05:06,210 --> 00:05:11,820
apply again because the experience has

00:05:07,830 --> 00:05:13,500
been really really nice so far anyhow

00:05:11,820 --> 00:05:16,139
has pointed out before that's how we

00:05:13,500 --> 00:05:18,930
officially started working in H Ross the

00:05:16,139 --> 00:05:21,150
hardware robot operating system which we

00:05:18,930 --> 00:05:23,250
define as a standardized software and

00:05:21,150 --> 00:05:25,620
hardware infrastructure to create

00:05:23,250 --> 00:05:28,169
reusable and reconfigurable hardware

00:05:25,620 --> 00:05:30,870
parts in a nutshell a trois eva is about

00:05:28,169 --> 00:05:33,750
supporting a common environment of robot

00:05:30,870 --> 00:05:36,960
components where manufacturers comply

00:05:33,750 --> 00:05:39,510
with a standard interfaces build on Ross

00:05:36,960 --> 00:05:41,250
it's about improving the way we build

00:05:39,510 --> 00:05:43,470
robots nowadays and have future

00:05:41,250 --> 00:05:46,979
roboticists focus on those applications

00:05:43,470 --> 00:05:48,539
that we really change the world so let

00:05:46,979 --> 00:05:50,460
me talk about a few of the things that

00:05:48,539 --> 00:05:51,840
are relevant in H rose and that are

00:05:50,460 --> 00:05:54,539
embedded on every single component

00:05:51,840 --> 00:05:56,940
hardware component so the first one is

00:05:54,539 --> 00:05:59,460
interoperability which in a nutshell is

00:05:56,940 --> 00:06:01,229
having parts components able to

00:05:59,460 --> 00:06:03,270
communicate and exchange that data

00:06:01,229 --> 00:06:06,419
through Ross interfaces in this case

00:06:03,270 --> 00:06:08,550
seamlessly regardless of the robot and

00:06:06,419 --> 00:06:11,400
also regardless of the manufacturer this

00:06:08,550 --> 00:06:13,110
was critical for us so to picture this

00:06:11,400 --> 00:06:16,050
concept that we better just imagine a

00:06:13,110 --> 00:06:18,030
manipulator being used in China in

00:06:16,050 --> 00:06:19,740
industry for example that does a pecan

00:06:18,030 --> 00:06:21,360
place task and imagine that one of these

00:06:19,740 --> 00:06:23,699
servos within this manipulator just

00:06:21,360 --> 00:06:26,699
break stops working so what should the

00:06:23,699 --> 00:06:28,320
owner of the Chinese company do should

00:06:26,699 --> 00:06:31,110
he choose call the orange guys possibly

00:06:28,320 --> 00:06:33,330
and ask for a replacement or an engineer

00:06:31,110 --> 00:06:35,340
/ or maybe he can just have a look at

00:06:33,330 --> 00:06:37,349
the market for a compatible and

00:06:35,340 --> 00:06:39,900
interoperable part and just exchange it

00:06:37,349 --> 00:06:40,740
wouldn't that actually safe coast in

00:06:39,900 --> 00:06:42,990
time

00:06:40,740 --> 00:06:44,759
so we believe interoperability can

00:06:42,990 --> 00:06:47,039
actually help democratizing robert

00:06:44,759 --> 00:06:49,050
components allow impart from different

00:06:47,039 --> 00:06:51,389
manufacturers to do the exact same job

00:06:49,050 --> 00:06:55,740
which will impact the competitive

00:06:51,389 --> 00:06:56,910
landscape of robert components we also

00:06:55,740 --> 00:06:59,340
look quite a bit at the physical

00:06:56,910 --> 00:07:00,870
interface this was quite relevant for us

00:06:59,340 --> 00:07:02,669
because we wanted to make the process of

00:07:00,870 --> 00:07:05,639
adding new hardware components to our

00:07:02,669 --> 00:07:07,620
robots as simple as possible we looked

00:07:05,639 --> 00:07:10,020
into can we looked quite a bit into

00:07:07,620 --> 00:07:12,210
industrial aspect by the way we looked

00:07:10,020 --> 00:07:14,490
at can we looked at Ethernet we looked

00:07:12,210 --> 00:07:17,789
at Power over Ethernet we looked at even

00:07:14,490 --> 00:07:19,889
a hybrid concept that allowed both to

00:07:17,789 --> 00:07:23,310
exchange to communicate up either

00:07:19,889 --> 00:07:25,349
ethernet or can at the very end we ended

00:07:23,310 --> 00:07:27,720
up selecting power over ethernet which

00:07:25,349 --> 00:07:30,360
allows us to deliver up to 25 watts of

00:07:27,720 --> 00:07:32,099
power to every single component now some

00:07:30,360 --> 00:07:34,740
of you might be wondering yeah sure but

00:07:32,099 --> 00:07:38,460
I've got some components in my lab or in

00:07:34,740 --> 00:07:40,710
my industry that just require much more

00:07:38,460 --> 00:07:42,690
than 25 watts and that's totally fine we

00:07:40,710 --> 00:07:44,280
do support dedicated power sources

00:07:42,690 --> 00:07:47,280
within these power or internet

00:07:44,280 --> 00:07:51,000
architecture of physical interfaces that

00:07:47,280 --> 00:07:52,590
we propose reckon figure ability is

00:07:51,000 --> 00:07:53,909
actually pretty complex topic let me

00:07:52,590 --> 00:07:56,039
tell you that we found quite a few

00:07:53,909 --> 00:07:58,650
groups that actually worked on this

00:07:56,039 --> 00:08:00,870
topic with results not that connected to

00:07:58,650 --> 00:08:02,520
each other so we really wanted to attack

00:08:00,870 --> 00:08:05,430
the topic from a really humble

00:08:02,520 --> 00:08:08,310
perspective so we started thinking as

00:08:05,430 --> 00:08:10,680
roboticist I'd like my robots rubber

00:08:08,310 --> 00:08:12,509
components robots particularly to

00:08:10,680 --> 00:08:14,490
automatically detect components that I

00:08:12,509 --> 00:08:16,740
choose plaque and if possible use use

00:08:14,490 --> 00:08:19,560
them for new applications for example if

00:08:16,740 --> 00:08:22,139
I just exchange the end-effector if on

00:08:19,560 --> 00:08:24,870
my manipulator sorry I just want my

00:08:22,139 --> 00:08:26,520
robot to use it and this seems something

00:08:24,870 --> 00:08:28,889
quite complex for a roboticist but if we

00:08:26,520 --> 00:08:30,690
ask someone out there they're just gonna

00:08:28,889 --> 00:08:32,849
ask you are you kidding me that's not

00:08:30,690 --> 00:08:36,149
implemented here in your robot and we've

00:08:32,849 --> 00:08:38,579
got that again and again and again so we

00:08:36,149 --> 00:08:41,729
started thinking that these sort of like

00:08:38,579 --> 00:08:43,680
adding new components and ability to

00:08:41,729 --> 00:08:46,050
reuse them require some some of

00:08:43,680 --> 00:08:48,690
reconfiguration with our robot so what

00:08:46,050 --> 00:08:52,230
we did we started extending the existing

00:08:48,690 --> 00:08:54,660
you RDF concept to support sorry dynamic

00:08:52,230 --> 00:08:56,790
changes on it and recreate the internal

00:08:54,660 --> 00:09:00,209
of the robot based on a pretty fine set

00:08:56,790 --> 00:09:03,389
of movements on its joints we have quite

00:09:00,209 --> 00:09:05,610
a few prototypes that have shown quite

00:09:03,389 --> 00:09:07,230
good results with manipulators and a

00:09:05,610 --> 00:09:09,540
promising result for extending this

00:09:07,230 --> 00:09:13,019
concept to a more generic concept of a

00:09:09,540 --> 00:09:17,069
robot now everything you've seen so far

00:09:13,019 --> 00:09:19,439
is based on rush too so Ross for us and

00:09:17,069 --> 00:09:21,269
I think for many here has defined almost

00:09:19,439 --> 00:09:23,430
the last 10 years for robot software

00:09:21,269 --> 00:09:25,019
development and we honestly believe that

00:09:23,430 --> 00:09:28,259
rush to is going to define the following

00:09:25,019 --> 00:09:32,339
ten years so eight Ross is bedding hard

00:09:28,259 --> 00:09:34,410
on rush to you now why should i use a

00:09:32,339 --> 00:09:36,449
trois components when I have to use

00:09:34,410 --> 00:09:38,970
components out there in the market that

00:09:36,449 --> 00:09:41,220
have raw support or are Ross compatible

00:09:38,970 --> 00:09:43,649
what are differences well let me point I

00:09:41,220 --> 00:09:45,420
three relevant ones that we believe are

00:09:43,649 --> 00:09:47,660
worth mentioning the first one is this

00:09:45,420 --> 00:09:49,920
plot and play ability the fact that

00:09:47,660 --> 00:09:52,319
components as soon as they are connected

00:09:49,920 --> 00:09:55,160
can be used no driver installation no

00:09:52,319 --> 00:09:57,839
issues with Russ version none of those

00:09:55,160 --> 00:09:58,860
the second thing that we point out is

00:09:57,839 --> 00:10:00,930
that components from different

00:09:58,860 --> 00:10:03,689
manufacturers will be exchangeable in

00:10:00,930 --> 00:10:05,819
fact each component has its own IP and

00:10:03,689 --> 00:10:07,680
mac addresses it's addressable and it's

00:10:05,819 --> 00:10:09,899
accessible so we can do many more things

00:10:07,680 --> 00:10:12,839
and expose many more possibilities with

00:10:09,899 --> 00:10:14,699
these new components the third part that

00:10:12,839 --> 00:10:17,550
we like to mention is this concept of

00:10:14,699 --> 00:10:19,740
smart robot components so each eight

00:10:17,550 --> 00:10:21,689
Ross component reports additional data

00:10:19,740 --> 00:10:25,529
about itself such as its inertial

00:10:21,689 --> 00:10:26,699
position or the power the voltage in the

00:10:25,529 --> 00:10:28,500
current that they are currently

00:10:26,699 --> 00:10:31,110
consuming now imagine the possibilities

00:10:28,500 --> 00:10:33,149
of this in a mobile robot imagine that

00:10:31,110 --> 00:10:35,279
each one of the components within your

00:10:33,149 --> 00:10:37,529
robot can actually report how much power

00:10:35,279 --> 00:10:40,290
is requiring imagine that you could

00:10:37,529 --> 00:10:41,490
selectively turn on or off components

00:10:40,290 --> 00:10:43,829
within your robot depending on this

00:10:41,490 --> 00:10:48,029
scenario these kind of things are things

00:10:43,829 --> 00:10:50,220
that H Ross is going to enable let me

00:10:48,029 --> 00:10:53,279
quickly go through the different

00:10:50,220 --> 00:10:55,220
components that we've well the types of

00:10:53,279 --> 00:10:58,410
eight rows component that we've created

00:10:55,220 --> 00:11:00,529
so we classify a truss components in

00:10:58,410 --> 00:11:03,569
five types sensing actuation

00:11:00,529 --> 00:11:05,910
communication cognition and hybrid

00:11:03,569 --> 00:11:08,640
components let's get into sensing

00:11:05,910 --> 00:11:10,350
components so we know all what

00:11:08,640 --> 00:11:13,200
sirs are the helpers perceive the

00:11:10,350 --> 00:11:15,000
environment in the H worse case sensor

00:11:13,200 --> 00:11:16,430
share the information with the rest of

00:11:15,000 --> 00:11:19,190
the components in a distributed way

00:11:16,430 --> 00:11:22,800
using a standardized ross interfaces

00:11:19,190 --> 00:11:25,400
examples of a trough sensors are range

00:11:22,800 --> 00:11:28,920
finders cameras to the lasers will now

00:11:25,400 --> 00:11:31,080
sensors actuators activators will help

00:11:28,920 --> 00:11:34,740
us produce some form of physical change

00:11:31,080 --> 00:11:36,540
through common ross interfaces among the

00:11:34,740 --> 00:11:38,580
eight rows actuators will find servos

00:11:36,540 --> 00:11:43,230
blast and brushless motors but also

00:11:38,580 --> 00:11:45,210
things like speakers a trust

00:11:43,230 --> 00:11:48,090
communication components are specialized

00:11:45,210 --> 00:11:50,640
in communication by either exposing new

00:11:48,090 --> 00:11:53,820
communication channels for example Wi-Fi

00:11:50,640 --> 00:11:55,380
or 4g to the whole robot or by providing

00:11:53,820 --> 00:11:58,560
means of interconnection between

00:11:55,380 --> 00:12:00,390
different parts within a robot so to

00:11:58,560 --> 00:12:02,460
picture this a bit better one of the

00:12:00,390 --> 00:12:03,990
most relevant communication components

00:12:02,460 --> 00:12:06,120
within the eight Ross architecture is

00:12:03,990 --> 00:12:08,430
the something we've called the backbone

00:12:06,120 --> 00:12:10,380
so think of the eight rows backbone as

00:12:08,430 --> 00:12:11,910
the spine of the robot that connects

00:12:10,380 --> 00:12:14,880
together all the sensors and actuators

00:12:11,910 --> 00:12:17,550
through the body of the robot and sends

00:12:14,880 --> 00:12:18,900
all that information to the brain of the

00:12:17,550 --> 00:12:21,420
robot that we've named the eight Ross

00:12:18,900 --> 00:12:23,580
cognition components so these are

00:12:21,420 --> 00:12:25,920
specialized in computationally expensive

00:12:23,580 --> 00:12:28,440
tasks and by the way we don't restrict

00:12:25,920 --> 00:12:30,720
cognition components in this age Ross

00:12:28,440 --> 00:12:33,890
architecture to be only one we can have

00:12:30,720 --> 00:12:37,500
several brains within our robots

00:12:33,890 --> 00:12:39,420
something worth noting is that the

00:12:37,500 --> 00:12:41,160
cognition component within this H Ross

00:12:39,420 --> 00:12:42,390
architecture is probably the only one

00:12:41,160 --> 00:12:45,360
that needs to be programmed which

00:12:42,390 --> 00:12:47,760
simplifies quite a bit for many the

00:12:45,360 --> 00:12:50,850
concept of creating robots the last but

00:12:47,760 --> 00:12:54,240
not least type of a truss components is

00:12:50,850 --> 00:12:56,340
the hybrid type which basically our

00:12:54,240 --> 00:12:58,890
components composed by sub elements

00:12:56,340 --> 00:13:00,450
parts that contain parts and expose a

00:12:58,890 --> 00:13:03,240
general interface to comply with

00:13:00,450 --> 00:13:05,700
existing Ross abstractions we created

00:13:03,240 --> 00:13:08,520
this hybrid type to support many of the

00:13:05,700 --> 00:13:10,890
existing robot components out there that

00:13:08,520 --> 00:13:15,510
do not quite comply with standard a

00:13:10,890 --> 00:13:18,090
trois interfaces so let me tell you a

00:13:15,510 --> 00:13:21,210
few things about the h1 workflow and how

00:13:18,090 --> 00:13:22,320
we expect this new trend to help when

00:13:21,210 --> 00:13:24,720
creating robots

00:13:22,320 --> 00:13:26,700
so the first thing that you will need to

00:13:24,720 --> 00:13:28,880
do is pick your components regardless of

00:13:26,700 --> 00:13:31,860
the manufacturer and it's pointed out

00:13:28,880 --> 00:13:33,750
they can come from everywhere and in a

00:13:31,860 --> 00:13:35,520
word so the second thing you will need

00:13:33,750 --> 00:13:37,500
to do is just use Ross we don't want you

00:13:35,520 --> 00:13:39,390
to change anything honestly we want you

00:13:37,500 --> 00:13:41,970
to stay stick with the same framework

00:13:39,390 --> 00:13:45,960
and just use all that knowledge that you

00:13:41,970 --> 00:13:49,280
already have the third step that comes

00:13:45,960 --> 00:13:51,330
with the h cross philosophy is basically

00:13:49,280 --> 00:13:52,920
deploying and testing locally and let me

00:13:51,330 --> 00:13:54,990
get into this with a bit more detail so

00:13:52,920 --> 00:13:56,460
for any of you that are working out

00:13:54,990 --> 00:13:59,010
there with robots that use embedded

00:13:56,460 --> 00:14:00,960
components the workflow generally is as

00:13:59,010 --> 00:14:02,970
follows so you code your behavior with

00:14:00,960 --> 00:14:04,980
Ross you cross compile the code for

00:14:02,970 --> 00:14:07,320
whatever architecture your robot has

00:14:04,980 --> 00:14:10,200
deployed the coast test and iterate

00:14:07,320 --> 00:14:11,580
again coding back if necessary once

00:14:10,200 --> 00:14:13,470
you're happy with the behavior you know

00:14:11,580 --> 00:14:15,930
you have to set up those services and

00:14:13,470 --> 00:14:18,090
Damons to get everything launched so

00:14:15,930 --> 00:14:21,000
this process takes quite a bit we know

00:14:18,090 --> 00:14:23,280
we've done it probably many of you have

00:14:21,000 --> 00:14:25,050
done it as well so with H Ross this

00:14:23,280 --> 00:14:27,660
distributed architecture of hardware

00:14:25,050 --> 00:14:30,030
components allows basically to simplify

00:14:27,660 --> 00:14:31,920
this whole process and have your desktop

00:14:30,030 --> 00:14:34,740
computers or your development machines

00:14:31,920 --> 00:14:36,510
at as deep brain of the road substitute

00:14:34,740 --> 00:14:38,550
the cognition part that we've just

00:14:36,510 --> 00:14:40,550
described before within these five

00:14:38,550 --> 00:14:42,630
different types of components that

00:14:40,550 --> 00:14:44,340
really helps because there's no need to

00:14:42,630 --> 00:14:46,500
cross compile neither to deploy

00:14:44,340 --> 00:14:49,260
constantly so you can really iterate

00:14:46,500 --> 00:14:51,630
faster and once you've done that you can

00:14:49,260 --> 00:14:55,320
basically with a single command ship

00:14:51,630 --> 00:14:57,270
this Ross to work space and seriously

00:14:55,320 --> 00:14:59,130
it's just the rose to work space with

00:14:57,270 --> 00:15:02,220
just shipped cross-compile on the way

00:14:59,130 --> 00:15:05,340
just send to the cognition part to the

00:15:02,220 --> 00:15:08,400
robot so it quite simplifies the process

00:15:05,340 --> 00:15:12,660
of building robot behaviors we're really

00:15:08,400 --> 00:15:14,760
excited about this so of course we

00:15:12,660 --> 00:15:17,670
didn't come empty-handed to Roscoe we've

00:15:14,760 --> 00:15:20,070
selected the most popular robot in the

00:15:17,670 --> 00:15:22,350
roast word and we've turned it into an

00:15:20,070 --> 00:15:24,630
eight rows compatible robot that's how

00:15:22,350 --> 00:15:27,510
the eight rows tuttle wat was actually

00:15:24,630 --> 00:15:29,370
born so among the components included in

00:15:27,510 --> 00:15:32,580
the eighth row sterile vote we've got a

00:15:29,370 --> 00:15:34,770
robot base which is a hybrid component

00:15:32,580 --> 00:15:36,100
hybrid type of H Ross component we've

00:15:34,770 --> 00:15:37,660
got a cognition

00:15:36,100 --> 00:15:40,300
opponent which is the brain has pointed

00:15:37,660 --> 00:15:42,100
out before we've got a backbone which is

00:15:40,300 --> 00:15:43,800
a communication component that helps all

00:15:42,100 --> 00:15:47,430
the components connect to each other

00:15:43,800 --> 00:15:51,130
we've got a variety of sensors also

00:15:47,430 --> 00:15:53,290
within the 8th row started wat so due to

00:15:51,130 --> 00:15:57,610
time constraints are we actually didn't

00:15:53,290 --> 00:15:59,440
prepare a demo here but it's actually in

00:15:57,610 --> 00:16:01,089
our booth out there so if you actually

00:15:59,440 --> 00:16:02,740
are interested just come out there and

00:16:01,089 --> 00:16:04,990
take some of the things that I've just

00:16:02,740 --> 00:16:08,620
explained I mean you can see most of the

00:16:04,990 --> 00:16:10,630
aspects just revealed here implemented

00:16:08,620 --> 00:16:13,389
already in the hof started which I think

00:16:10,630 --> 00:16:16,690
it's the first ever robot running a

00:16:13,389 --> 00:16:19,930
truss components so it Ross is now

00:16:16,690 --> 00:16:21,910
available for selected manufacturers we

00:16:19,930 --> 00:16:23,380
have actually started quite a few

00:16:21,910 --> 00:16:26,319
conversations with different

00:16:23,380 --> 00:16:28,990
manufacturers and are really about to

00:16:26,319 --> 00:16:30,940
close several deals in fact many here

00:16:28,990 --> 00:16:33,430
might be surprised by this but there's

00:16:30,940 --> 00:16:35,440
hundreds of manufacturers out there that

00:16:33,430 --> 00:16:37,300
want to get into robotics seriously and

00:16:35,440 --> 00:16:39,009
they don't know how to get into robotics

00:16:37,300 --> 00:16:41,350
because either they don't have the

00:16:39,009 --> 00:16:43,449
background or the knowledge or they just

00:16:41,350 --> 00:16:45,130
don't have a fantastic software

00:16:43,449 --> 00:16:46,899
engineers such as all of you probably

00:16:45,130 --> 00:16:48,610
but they want to get into robotics and

00:16:46,899 --> 00:16:51,100
they don't know how it Ross is providing

00:16:48,610 --> 00:16:54,610
our way for all these manufacturers to

00:16:51,100 --> 00:16:56,560
jump into your voice word now while it's

00:16:54,610 --> 00:16:59,380
right now available for manufacturers

00:16:56,560 --> 00:17:01,480
just to let you know it'll be really

00:16:59,380 --> 00:17:03,639
soon available for the wider robotics

00:17:01,480 --> 00:17:05,199
community if you're a hardware

00:17:03,639 --> 00:17:08,770
manufacturer though come talk to us

00:17:05,199 --> 00:17:10,270
right now now wrapping up when it comes

00:17:08,770 --> 00:17:12,059
to robotics it seems like science

00:17:10,270 --> 00:17:15,309
fiction has predicted quite a bit right

00:17:12,059 --> 00:17:17,260
while much of it remains and we remain a

00:17:15,309 --> 00:17:19,569
science fiction some things can actually

00:17:17,260 --> 00:17:21,220
be taken as an inspiration we believe we

00:17:19,569 --> 00:17:23,709
are ready to bring some of those things

00:17:21,220 --> 00:17:26,289
to reality and push robotics growth and

00:17:23,709 --> 00:17:29,409
the Ross community even farther this

00:17:26,289 --> 00:17:32,370
time into hard into hardware comes

00:17:29,409 --> 00:17:32,370
avenida thank

00:17:38,590 --> 00:18:13,790
all right questions hi no I can thank

00:18:10,760 --> 00:18:15,380
you so why drizzle just to design

00:18:13,790 --> 00:18:18,290
document the rest of the problems is

00:18:15,380 --> 00:18:22,160
that for the parent metal device how to

00:18:18,290 --> 00:18:24,140
treat it as just note instead of server

00:18:22,160 --> 00:18:26,120
Trevor you need to access it by the

00:18:24,140 --> 00:18:27,110
driver so I'm wondering in your under

00:18:26,120 --> 00:18:30,620
understanding can you can you please

00:18:27,110 --> 00:18:32,240
tell over again and it means I mean new

00:18:30,620 --> 00:18:34,309
you're in your product for the

00:18:32,240 --> 00:18:37,610
components they talking to the core

00:18:34,309 --> 00:18:40,640
apart there's a corp Iraq the core you

00:18:37,610 --> 00:18:42,860
mean if we run raw score yeah well it's

00:18:40,640 --> 00:18:45,740
everything based on Rose to there is

00:18:42,860 --> 00:18:49,610
actually no raw score or worse to you so

00:18:45,740 --> 00:18:51,620
all the components are eco so so

00:18:49,610 --> 00:18:53,960
basically when it comes to I mean Rose

00:18:51,620 --> 00:18:56,090
to you is basically advanced in many

00:18:53,960 --> 00:18:58,820
senses it's based on ddss some

00:18:56,090 --> 00:19:00,800
colleagues from the OS RF explained

00:18:58,820 --> 00:19:02,960
before so the concept of raw score

00:19:00,800 --> 00:19:05,330
disappears actually it needs a much more

00:19:02,960 --> 00:19:07,520
distributed concept so you don't have to

00:19:05,330 --> 00:19:10,280
actually care about the previous issues

00:19:07,520 --> 00:19:16,220
with rosh one which allows us to exactly

00:19:10,280 --> 00:19:17,900
do this ok ok thank you ok i'm wondering

00:19:16,220 --> 00:19:19,850
what sort of market you're targeting is

00:19:17,900 --> 00:19:21,470
these look like there might be some more

00:19:19,850 --> 00:19:23,510
research oriented but what about

00:19:21,470 --> 00:19:25,790
commercial applications like atvs for

00:19:23,510 --> 00:19:27,500
factories so we are targeting the

00:19:25,790 --> 00:19:29,990
industry for now in the short term

00:19:27,500 --> 00:19:33,830
actually we are targeting manufacturers

00:19:29,990 --> 00:19:35,150
I think that's pretty much going to be

00:19:33,830 --> 00:19:39,080
what's going to happen in the following

00:19:35,150 --> 00:19:40,490
years or so but where would you think

00:19:39,080 --> 00:19:42,800
these modules would be used what sort of

00:19:40,490 --> 00:19:44,929
applications so we're speaking with

00:19:42,800 --> 00:19:47,510
different industrial partners who have

00:19:44,929 --> 00:19:49,730
certain interest certain applications

00:19:47,510 --> 00:19:50,040
where these modules can actually make

00:19:49,730 --> 00:19:52,310
sense

00:19:50,040 --> 00:19:56,730
so in the short term in those industrial

00:19:52,310 --> 00:19:58,290
applications on mid term long term we

00:19:56,730 --> 00:20:01,320
actually expect that something like this

00:19:58,290 --> 00:20:03,450
actually jumps into you everywhere like

00:20:01,320 --> 00:20:05,070
from research to you commercial robots

00:20:03,450 --> 00:20:08,160
we're really excited about this honestly

00:20:05,070 --> 00:20:13,310
so of course we we believe it's gonna go

00:20:08,160 --> 00:20:16,410
all around the world having a

00:20:13,310 --> 00:20:17,910
dynamically discoverable note on the

00:20:16,410 --> 00:20:20,730
Ross network it's a really cool thing

00:20:17,910 --> 00:20:23,280
but when you include additional hardware

00:20:20,730 --> 00:20:26,400
into the mix how do you secure your

00:20:23,280 --> 00:20:28,590
network when you're plugging in a new

00:20:26,400 --> 00:20:31,380
note how do you verify that this is a

00:20:28,590 --> 00:20:34,140
trusted note or even do any sort of

00:20:31,380 --> 00:20:36,360
security there so that's a great

00:20:34,140 --> 00:20:38,400
question and to be honest Security's not

00:20:36,360 --> 00:20:39,810
hasn't been one of our concerns while

00:20:38,400 --> 00:20:41,250
developing this we are still thinking

00:20:39,810 --> 00:20:43,350
about that but we're definitely going to

00:20:41,250 --> 00:20:45,030
come with some good ideas and that so we

00:20:43,350 --> 00:20:47,430
appreciate feedback on that sense but as

00:20:45,030 --> 00:20:48,870
far as our existing development we

00:20:47,430 --> 00:20:53,880
haven't been that much putting time into

00:20:48,870 --> 00:20:56,790
security thanks this year all right one

00:20:53,880 --> 00:20:59,400
more question so there are many

00:20:56,790 --> 00:21:01,470
interoperability standards in robotics

00:20:59,400 --> 00:21:05,100
that I am aware of which kind of makes

00:21:01,470 --> 00:21:07,980
each of them less powerful are so are

00:21:05,100 --> 00:21:10,140
besides writing the Ross wave where you

00:21:07,980 --> 00:21:14,370
have the choice of supporting rose to

00:21:10,140 --> 00:21:18,180
which is courageous I would say are what

00:21:14,370 --> 00:21:19,860
are you plans for like are making the

00:21:18,180 --> 00:21:22,920
wide adoption of this standard happen

00:21:19,860 --> 00:21:27,240
actually because the rose to adoption

00:21:22,920 --> 00:21:29,760
rate is hard to predict so it is true

00:21:27,240 --> 00:21:33,420
that rush to steal is in alpha to be

00:21:29,760 --> 00:21:34,530
better pretty soon I believe but to be

00:21:33,420 --> 00:21:36,720
honest this is not something that is

00:21:34,530 --> 00:21:38,190
going to change from one day to the next

00:21:36,720 --> 00:21:42,240
one this is something that we need to

00:21:38,190 --> 00:21:44,040
push slowly and slowly just get into

00:21:42,240 --> 00:21:46,890
people's mind that this thing is going

00:21:44,040 --> 00:21:48,480
to come to reality as pointed out there

00:21:46,890 --> 00:21:51,930
are many reasons why we think that this

00:21:48,480 --> 00:21:54,450
is going to become effect and we're

00:21:51,930 --> 00:21:56,490
slowly maturing our existing

00:21:54,450 --> 00:21:59,220
implementations technology and hardware

00:21:56,490 --> 00:22:03,539
back-end to actually be ready when Ross

00:21:59,220 --> 00:22:08,399
actually becomes full streamed version

00:22:03,539 --> 00:22:11,809
lying ourselves on that sense thank you

00:22:08,399 --> 00:22:11,809
thank you

00:22:12,280 --> 00:22:15,190

YouTube URL: https://www.youtube.com/watch?v=xYY9y0bhyoU


