Title: ROSCon 2016 Seoul Day 1   ROS Qt Creator Project Manager Plug in
Publication date: 2016-10-20
Playlist: ROSCon 2016
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2016 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,030 --> 00:00:05,899
hello everyone my name is Levi Armstrong

00:00:03,179 --> 00:00:08,580
I work with Southwest Research Institute

00:00:05,899 --> 00:00:11,099
I'm gonna be speaking about the Ross QT

00:00:08,580 --> 00:00:16,440
creator a project manager plugin for a

00:00:11,099 --> 00:00:18,510
cute creator the overview of this talk

00:00:16,440 --> 00:00:22,080
I'm gonna give the motivation behind the

00:00:18,510 --> 00:00:24,840
plugin talk about why went with QT cute

00:00:22,080 --> 00:00:27,750
creator also I'll be talking about the

00:00:24,840 --> 00:00:31,019
objectives or the plug-in current

00:00:27,750 --> 00:00:32,940
capabilities in word capabilities and

00:00:31,019 --> 00:00:35,219
future capabilities also I'll be

00:00:32,940 --> 00:00:38,309
providing a location where you can find

00:00:35,219 --> 00:00:42,600
the plug-in for a cute creator and then

00:00:38,309 --> 00:00:45,840
I'll be giving a demonstration so the

00:00:42,600 --> 00:00:48,180
motivation behind the the plug-in so

00:00:45,840 --> 00:00:50,820
originally before I started developing

00:00:48,180 --> 00:00:52,649
in Ross on my prior experience I've been

00:00:50,820 --> 00:00:55,079
developing a visual studio so I got very

00:00:52,649 --> 00:00:57,239
accustomed to that type of environment

00:00:55,079 --> 00:00:58,859
and then when I came over and started

00:00:57,239 --> 00:01:01,140
doing development of Ross I found that

00:00:58,859 --> 00:01:02,340
there wasn't a very similar environment

00:01:01,140 --> 00:01:04,830
to do that

00:01:02,340 --> 00:01:06,720
there were available ID ease that you

00:01:04,830 --> 00:01:08,760
could Fanaa go and get the configuration

00:01:06,720 --> 00:01:10,409
just right so you could do some

00:01:08,760 --> 00:01:12,090
developmental Ross within those but

00:01:10,409 --> 00:01:16,439
there wasn't one built specifically for

00:01:12,090 --> 00:01:19,080
Ross the other motivation was to make my

00:01:16,439 --> 00:01:20,790
life easier to add those tools that I

00:01:19,080 --> 00:01:22,710
was so accustomed to and make them

00:01:20,790 --> 00:01:26,070
available to available to me for

00:01:22,710 --> 00:01:27,540
developing Ross increase efficiency so I

00:01:26,070 --> 00:01:31,079
wanted something built specifically for

00:01:27,540 --> 00:01:34,350
Ross interactive debugger I wanted to

00:01:31,079 --> 00:01:36,000
remove repetitive tasks things that had

00:01:34,350 --> 00:01:38,340
to do multiple times and I wanted to

00:01:36,000 --> 00:01:40,049
create a centralized location for tools

00:01:38,340 --> 00:01:42,329
there was a lot of really good tools out

00:01:40,049 --> 00:01:43,890
there that developers had created but

00:01:42,329 --> 00:01:46,829
they weren't centralized in a single

00:01:43,890 --> 00:01:48,930
location so by doing this has allowed me

00:01:46,829 --> 00:01:54,899
to create a single location for those

00:01:48,930 --> 00:01:56,610
tools so why cute creator so I when I

00:01:54,899 --> 00:01:58,950
start as sweary I started surveying

00:01:56,610 --> 00:02:01,290
existing developers to find out what

00:01:58,950 --> 00:02:03,750
they were using a lot of the developers

00:02:01,290 --> 00:02:06,990
were using as far as an IDE they were

00:02:03,750 --> 00:02:10,050
using Eclipse and cue Creator they were

00:02:06,990 --> 00:02:13,650
also people that were using various text

00:02:10,050 --> 00:02:16,890
editor sublime Adam and Kate and them

00:02:13,650 --> 00:02:18,810
terminal-based so the reason for

00:02:16,890 --> 00:02:23,030
choosing cute creator is it was built

00:02:18,810 --> 00:02:26,760
specifically for c++ i had a built in

00:02:23,030 --> 00:02:28,920
GUI development right into the ide so we

00:02:26,760 --> 00:02:30,480
did a lot of GUI development so it was

00:02:28,920 --> 00:02:31,500
nice to have something that already had

00:02:30,480 --> 00:02:33,750
that built into it

00:02:31,500 --> 00:02:36,620
cross-platform and it had a

00:02:33,750 --> 00:02:42,450
sophisticated code editor for C++ and

00:02:36,620 --> 00:02:44,549
version control so I'm gonna reiterate

00:02:42,450 --> 00:02:46,560
so the purpose part the objective in the

00:02:44,549 --> 00:02:48,510
goals were to simplify Ross development

00:02:46,560 --> 00:02:50,670
so we found through our training that

00:02:48,510 --> 00:02:53,579
for developers that had very little

00:02:50,670 --> 00:02:55,170
experience for Ross it was very

00:02:53,579 --> 00:02:57,299
difficult to get them up to speed just

00:02:55,170 --> 00:02:59,579
because of sourcing of the workspace and

00:02:57,299 --> 00:03:00,959
how everything was architected so by

00:02:59,579 --> 00:03:02,549
doing this I wanted to create something

00:03:00,959 --> 00:03:04,739
simple for people that weren't very

00:03:02,549 --> 00:03:06,720
familiar to Ross that allowed them to

00:03:04,739 --> 00:03:08,370
get up to speed without really knowing

00:03:06,720 --> 00:03:09,780
the things that were happening behind

00:03:08,370 --> 00:03:11,129
the scenes until they got real

00:03:09,780 --> 00:03:13,680
comfortable with it and then they can

00:03:11,129 --> 00:03:17,430
look in how things work increase

00:03:13,680 --> 00:03:19,620
efficiency again centralized location

00:03:17,430 --> 00:03:22,680
for tools reduce repetitive tasks and

00:03:19,620 --> 00:03:24,090
then also process simplification cute

00:03:22,680 --> 00:03:26,700
Creator allowed you to create all these

00:03:24,090 --> 00:03:28,079
nice custom templates so if you had a

00:03:26,700 --> 00:03:29,340
company and you have a specific way of

00:03:28,079 --> 00:03:31,290
doing things or setting up a project

00:03:29,340 --> 00:03:35,000
allowed you to easily create templates

00:03:31,290 --> 00:03:38,819
to quickly get up to speed with

00:03:35,000 --> 00:03:41,250
formatting things correctly so the

00:03:38,819 --> 00:03:43,590
current capabilities of the plugin it

00:03:41,250 --> 00:03:44,130
allows you to import and create calculon

00:03:43,590 --> 00:03:47,250
workspaces

00:03:44,130 --> 00:03:49,319
it has predefined templates for creating

00:03:47,250 --> 00:03:51,269
packages industrial robot packages

00:03:49,319 --> 00:03:54,209
launch files you already have files

00:03:51,269 --> 00:03:57,900
nodes also it allows you to create your

00:03:54,209 --> 00:04:00,120
own it has a customized build and run

00:03:57,900 --> 00:04:04,919
configuration it currently supports cat

00:04:00,120 --> 00:04:08,730
can't make you're able to launch using

00:04:04,919 --> 00:04:09,959
Ross launch and Ross run sourcing and it

00:04:08,730 --> 00:04:11,519
allows you to have multiple different

00:04:09,959 --> 00:04:13,019
configurations and all these things are

00:04:11,519 --> 00:04:15,030
saved so the next time you boot up your

00:04:13,019 --> 00:04:17,370
project they're there so if you have a

00:04:15,030 --> 00:04:19,049
very tedious way of launching your

00:04:17,370 --> 00:04:21,750
project it is saved you don't have to

00:04:19,049 --> 00:04:26,270
remember how to do that and we

00:04:21,750 --> 00:04:26,270
integrated a tab terminal into the IDE

00:04:26,290 --> 00:04:32,050
so the in work capabilities or the in

00:04:30,400 --> 00:04:33,730
work capabilities that we're doing is

00:04:32,050 --> 00:04:38,470
right now we're working on integrating

00:04:33,730 --> 00:04:39,820
catkin tools we're about 90% there it

00:04:38,470 --> 00:04:43,210
allow you to add remove and edit

00:04:39,820 --> 00:04:46,480
profiles and custom build configurations

00:04:43,210 --> 00:04:47,740
for tech and tools we're working on one

00:04:46,480 --> 00:04:50,110
of the developers working on a Ross

00:04:47,740 --> 00:04:51,520
launch editor it provides you custom

00:04:50,110 --> 00:04:54,400
syntax highlighting and code completion

00:04:51,520 --> 00:04:58,120
and navigation for Ross launch files

00:04:54,400 --> 00:05:01,330
same thing for you RDF editors and we're

00:04:58,120 --> 00:05:04,180
working on integrating Python QT into

00:05:01,330 --> 00:05:06,750
the ID the reason for that it'll allow

00:05:04,180 --> 00:05:10,420
us to integrate existing Ross tools

00:05:06,750 --> 00:05:11,650
without having to link against Ross the

00:05:10,420 --> 00:05:14,860
main reason for that is there is

00:05:11,650 --> 00:05:17,380
interest from cute creator to adopt this

00:05:14,860 --> 00:05:20,200
plug-in and that would allow us to

00:05:17,380 --> 00:05:22,900
easily do that if that if we decide to

00:05:20,200 --> 00:05:28,930
go that route and also integrate a

00:05:22,900 --> 00:05:32,620
Python console into the ID so future

00:05:28,930 --> 00:05:36,100
capabilities is to create a similar

00:05:32,620 --> 00:05:38,230
environment as our QT console so cute

00:05:36,100 --> 00:05:40,660
Creator already has this built in once

00:05:38,230 --> 00:05:42,850
we get the Python QT integrated it

00:05:40,660 --> 00:05:46,900
allows us to easily implement features

00:05:42,850 --> 00:05:49,590
that Ross console have and it integrate

00:05:46,900 --> 00:05:54,760
existing tools like our QT grab RTG plot

00:05:49,590 --> 00:05:56,740
Ross parameter config also a custom get

00:05:54,760 --> 00:05:58,900
clone that allows you to pull up any of

00:05:56,740 --> 00:06:00,400
the raw specific packages straight from

00:05:58,900 --> 00:06:02,410
the IDE without having to go out to the

00:06:00,400 --> 00:06:05,980
web and search what repositories

00:06:02,410 --> 00:06:07,360
available improved code management of

00:06:05,980 --> 00:06:10,440
the project

00:06:07,360 --> 00:06:13,690
you already have viewers yamo editor

00:06:10,440 --> 00:06:16,060
another big one is code syntax checker

00:06:13,690 --> 00:06:19,240
that way can make sure it follows the

00:06:16,060 --> 00:06:22,420
raw style guide and it'll notify you if

00:06:19,240 --> 00:06:28,600
it doesn't and then various templates

00:06:22,420 --> 00:06:32,080
for Ross topic service and messages so

00:06:28,600 --> 00:06:36,280
the plug-in can be found on github under

00:06:32,080 --> 00:06:38,650
Ross industrial Ross UTC plug-in the

00:06:36,280 --> 00:06:40,089
binary for it is currently stored on

00:06:38,650 --> 00:06:42,099
launchpad net

00:06:40,089 --> 00:06:44,679
so you can actively get updates it's

00:06:42,099 --> 00:06:47,349
continually being updated the install

00:06:44,679 --> 00:06:50,860
instructions and tutorials for the IDE

00:06:47,349 --> 00:06:58,769
plug-in is also located on github under

00:06:50,860 --> 00:07:02,909
the wiki section so I'm gonna give it a

00:06:58,769 --> 00:07:02,909
demo of the plug-in

00:07:13,110 --> 00:07:19,120
alright so under new project you'll see

00:07:16,570 --> 00:07:25,030
there's import project and now there is

00:07:19,120 --> 00:07:29,200
this import Ross workspace so under that

00:07:25,030 --> 00:07:35,320
you give it some name on will browse to

00:07:29,200 --> 00:07:36,760
the workspace you'd like to import you

00:07:35,320 --> 00:07:39,370
need to generate project files this

00:07:36,760 --> 00:07:45,880
allows it to build the code model for

00:07:39,370 --> 00:07:49,210
your project just build and finish so it

00:07:45,880 --> 00:07:53,290
imports your Ross project so I've

00:07:49,210 --> 00:07:56,230
already have a ABB package in this

00:07:53,290 --> 00:07:58,360
workspace it also allows you to see what

00:07:56,230 --> 00:08:00,520
active branch is on your package so you

00:07:58,360 --> 00:08:03,280
can easily tell where you're at

00:08:00,520 --> 00:08:04,600
cue creator already has built in yet

00:08:03,280 --> 00:08:09,540
version so you can easily switch

00:08:04,600 --> 00:08:12,310
branches within the IDE itself so

00:08:09,540 --> 00:08:14,650
talking about the build configuration so

00:08:12,310 --> 00:08:17,050
it already comes pre setup with cat can

00:08:14,650 --> 00:08:18,970
make and pre-configured on the build

00:08:17,050 --> 00:08:21,160
configurations you can resource if you

00:08:18,970 --> 00:08:24,760
need to if a new package was added you

00:08:21,160 --> 00:08:27,250
can source from within the IDE and it

00:08:24,760 --> 00:08:28,990
comes preset up with different build

00:08:27,250 --> 00:08:31,350
configurations you can also add your own

00:08:28,990 --> 00:08:34,000
so it comes with debug configuration

00:08:31,350 --> 00:08:36,130
release and the various different build

00:08:34,000 --> 00:08:40,260
configurations so we can slip the debug

00:08:36,130 --> 00:08:45,370
and it automatically adds the DC make

00:08:40,260 --> 00:08:48,610
argument to it so to build in debug so

00:08:45,370 --> 00:08:49,960
over here so what we're going to do next

00:08:48,610 --> 00:09:01,810
is we're going to add a package to the

00:08:49,960 --> 00:09:03,190
project and before I did this I didn't

00:09:01,810 --> 00:09:10,720
realize how many arguments there were

00:09:03,190 --> 00:09:13,360
that you could pass to this function and

00:09:10,720 --> 00:09:17,250
finish so you're easily able to create a

00:09:13,360 --> 00:09:17,250
Ross package so next we're gonna add a

00:09:17,970 --> 00:09:22,660
well add a node to the package so it

00:09:21,280 --> 00:09:43,060
comes with a

00:09:22,660 --> 00:09:45,190
basic template of a node so to add the

00:09:43,060 --> 00:09:49,000
node sometimes you'll notice if you make

00:09:45,190 --> 00:09:50,350
changes like adding a package or making

00:09:49,000 --> 00:09:52,240
changes to the see make like you've

00:09:50,350 --> 00:09:59,500
included something new that you'll

00:09:52,240 --> 00:10:02,650
notice so I'll do take take include

00:09:59,500 --> 00:10:04,750
directory from Ross out so to rebuild

00:10:02,650 --> 00:10:06,430
the code model you come back here you'll

00:10:04,750 --> 00:10:10,210
see this yellow line underneath that

00:10:06,430 --> 00:10:11,860
that it's unable to find it so if you

00:10:10,210 --> 00:10:13,480
make changes right now that was a part

00:10:11,860 --> 00:10:15,400
of the improved code model so right now

00:10:13,480 --> 00:10:17,890
you have to manually rebuild the code

00:10:15,400 --> 00:10:19,390
model anytime you add a package or make

00:10:17,890 --> 00:10:20,470
changes to the CMA so if you right-click

00:10:19,390 --> 00:10:22,690
on the project

00:10:20,470 --> 00:10:25,170
there's this reload project include

00:10:22,690 --> 00:10:27,670
directories so what it'll do is it'll

00:10:25,170 --> 00:10:30,220
reparse the project and rebuild the code

00:10:27,670 --> 00:10:32,260
model and you'll notice that that goes

00:10:30,220 --> 00:10:34,750
away so that's one of the nuances that

00:10:32,260 --> 00:10:37,270
you have to do right now eventually

00:10:34,750 --> 00:10:42,730
that'll be handled in the background and

00:10:37,270 --> 00:10:45,310
so so when you have the Ross terminal

00:10:42,730 --> 00:10:48,400
down here so it's a full terminal that

00:10:45,310 --> 00:10:49,660
you could do typical stuff that you

00:10:48,400 --> 00:10:54,910
typically do in a terminal that's built

00:10:49,660 --> 00:10:58,410
into the IDE so now that so we can show

00:10:54,910 --> 00:10:58,410
the different run configurations

00:11:04,410 --> 00:11:10,240
and since build you can just control B

00:11:07,870 --> 00:11:12,340
and it'll build the project for you

00:11:10,240 --> 00:11:14,590
it's got this compiler output window so

00:11:12,340 --> 00:11:17,740
you can see the build process that's

00:11:14,590 --> 00:11:21,280
shown there so now you built it we'll

00:11:17,740 --> 00:11:24,460
set up the run configuration so under

00:11:21,280 --> 00:11:27,190
the projects it comes pre-configured so

00:11:24,460 --> 00:11:31,000
you got a Ross launch or Ross run so in

00:11:27,190 --> 00:11:32,140
this we're gonna add a demo and it

00:11:31,000 --> 00:11:35,020
automatically pulls up the available

00:11:32,140 --> 00:11:38,250
nodes that you can select so that's the

00:11:35,020 --> 00:11:41,650
one we said so we're gonna run it and

00:11:38,250 --> 00:11:43,120
what it does is it launches in this Ross

00:11:41,650 --> 00:11:46,990
terminal down here so it written the

00:11:43,120 --> 00:11:51,210
project the nice thing about this now

00:11:46,990 --> 00:11:51,210
we built it a debug so

00:12:04,040 --> 00:12:16,970
rebuild it and you can debug within the

00:12:09,410 --> 00:12:18,980
IDE so what we'll do is under the debug

00:12:16,970 --> 00:12:20,630
so there's two ways you can do this so

00:12:18,980 --> 00:12:22,910
if you're gonna debug your node you can

00:12:20,630 --> 00:12:24,710
use the attached to an unsorted

00:12:22,910 --> 00:12:27,110
application or attached to a running

00:12:24,710 --> 00:12:28,670
application so typically I use the

00:12:27,110 --> 00:12:30,890
attached to running application if I'm

00:12:28,670 --> 00:12:32,360
debugging plug-ins that go into move it

00:12:30,890 --> 00:12:34,310
so I'll launch move it up and it'll be

00:12:32,360 --> 00:12:36,740
running and then I can easily use this

00:12:34,310 --> 00:12:39,200
attached running process to debug my

00:12:36,740 --> 00:12:42,050
plugins say a plan or a kinematic

00:12:39,200 --> 00:12:45,710
plug-in in this case we're gonna do a

00:12:42,050 --> 00:12:47,000
node so I'm gonna attach to unstarted so

00:12:45,710 --> 00:12:49,100
you browse to your developer rectory

00:12:47,000 --> 00:12:52,880
find your node and you can start

00:12:49,100 --> 00:12:54,350
watching and then you can run down here

00:12:52,880 --> 00:12:57,290
it automatically recognized the start

00:12:54,350 --> 00:12:59,900
and you can enter into the debug mode in

00:12:57,290 --> 00:13:01,880
debug Ross projects and you can enter

00:12:59,900 --> 00:13:12,410
inspect different parameters within your

00:13:01,880 --> 00:13:13,940
project here pretty easily and it gives

00:13:12,410 --> 00:13:20,810
you back trace that if for people that

00:13:13,940 --> 00:13:22,640
want to execute Windows you like do a

00:13:20,810 --> 00:13:25,010
gdb command yourself they have this

00:13:22,640 --> 00:13:26,780
debug logger so you have access to all

00:13:25,010 --> 00:13:28,580
the gdb stuff and you can execute your

00:13:26,780 --> 00:13:36,350
own gdb commands within it if you're

00:13:28,580 --> 00:13:40,240
more comfortable doing that 90 so that's

00:13:36,350 --> 00:13:40,240
all I had if anybody had any questions

00:14:12,889 --> 00:14:24,740
so what would it be like if you needed

00:14:15,110 --> 00:14:26,689
to debug a launch file you would use the

00:14:24,740 --> 00:14:38,089
attach to process the same way so

00:14:26,689 --> 00:14:39,350
instead of a not at the moment so there

00:14:38,089 --> 00:14:40,879
is a plan so down in the run

00:14:39,350 --> 00:14:42,949
configurations that there will be a

00:14:40,879 --> 00:14:45,259
specific attach to process similar to

00:14:42,949 --> 00:14:46,970
that but right now you have to manually

00:14:45,259 --> 00:14:49,220
setup the attach to process but

00:14:46,970 --> 00:14:50,540
eventually there will be an option to

00:14:49,220 --> 00:14:52,490
add your own within the run

00:14:50,540 --> 00:14:54,410
configuration so it'll be the last step

00:14:52,490 --> 00:15:11,509
that way you can automatically do it

00:14:54,410 --> 00:15:14,089
part of your run configuration so shoot

00:15:11,509 --> 00:15:17,269
Creator currently supports some basic

00:15:14,089 --> 00:15:27,799
Python editing so you can edit it but

00:15:17,269 --> 00:15:32,149
right now it's mainly supports C++ there

00:15:27,799 --> 00:15:34,459
is plans it'll more depend on as how far

00:15:32,149 --> 00:15:37,299
cute Creator catches up to supporting

00:15:34,459 --> 00:15:37,299

YouTube URL: https://www.youtube.com/watch?v=jXpj7tj9Xd0


