Title: ROSCon 2012 - Architecting Real-time Control of Robonaut 2 using ROS and Orocos
Publication date: 2014-08-31
Playlist: ROSCon 2012
Description: 
	Stephen W. Hart
Keynote: Architecting Real-time Control of Robonaut 2 using ROS and Orocos
Captions: 
	00:00:00,000 --> 00:00:03,929
just want to move on to the key no we're

00:00:01,589 --> 00:00:06,000
very pleased to have steve hart from

00:00:03,929 --> 00:00:08,760
General Motors and NASA who's going to

00:00:06,000 --> 00:00:11,849
talk about real time control on the

00:00:08,760 --> 00:00:14,490
Robonaut robot it's exciting to have

00:00:11,849 --> 00:00:15,719
robots in space so particularly ones

00:00:14,490 --> 00:00:17,640
that are running the kind of software

00:00:15,719 --> 00:00:21,689
that we're all familiar with so that

00:00:17,640 --> 00:00:23,789
more ado please welcome Steve hard I'm

00:00:21,689 --> 00:00:24,960
so slight change of topic we're not

00:00:23,789 --> 00:00:27,240
talking too much about the real-time

00:00:24,960 --> 00:00:29,310
control aspects of the Robonaut project

00:00:27,240 --> 00:00:31,080
but I invite everybody to come to birds

00:00:29,310 --> 00:00:33,600
of a feather session 2 1030 right after

00:00:31,080 --> 00:00:35,640
this next door where we'll talk more

00:00:33,600 --> 00:00:37,170
about the low level control systems and

00:00:35,640 --> 00:00:38,910
how we're how we're moving forward with

00:00:37,170 --> 00:00:40,620
that I'm going to step back and take a

00:00:38,910 --> 00:00:43,350
little bit more of a high level general

00:00:40,620 --> 00:00:46,170
view of how we're programming Robonaut

00:00:43,350 --> 00:00:48,000
these days what we've done with it both

00:00:46,170 --> 00:00:49,950
on the ground and on the International

00:00:48,000 --> 00:00:51,570
Space Station and where we're going and

00:00:49,950 --> 00:00:55,680
what we hope to accomplish over the next

00:00:51,570 --> 00:00:57,899
number of years and in a in a very

00:00:55,680 --> 00:00:59,699
general sense so what we're interested

00:00:57,899 --> 00:01:01,920
in doing with the Robonaut project is

00:00:59,699 --> 00:01:05,760
really building the next generation of

00:01:01,920 --> 00:01:09,270
flexible dexterous complex robots that

00:01:05,760 --> 00:01:13,380
can be used to assist humans in factory

00:01:09,270 --> 00:01:15,780
settings in space settings etc so just a

00:01:13,380 --> 00:01:18,000
quick very quick overview of the of how

00:01:15,780 --> 00:01:20,310
the project got started so the Robonaut

00:01:18,000 --> 00:01:23,610
one project started in the late mid to

00:01:20,310 --> 00:01:25,170
late 90s purely out of out of NASA and

00:01:23,610 --> 00:01:27,810
there was a large DARPA project that

00:01:25,170 --> 00:01:29,780
included a number of universities for

00:01:27,810 --> 00:01:32,939
the first four or five years but around

00:01:29,780 --> 00:01:35,509
2006-2007 General Motors started looking

00:01:32,939 --> 00:01:38,850
around at the the field of humanoid

00:01:35,509 --> 00:01:40,409
robot robotics or dexterous robotics and

00:01:38,850 --> 00:01:42,840
trying to find somebody to partner with

00:01:40,409 --> 00:01:45,810
really pushing towards how we can build

00:01:42,840 --> 00:01:49,079
foot dexterous manipulators for flexible

00:01:45,810 --> 00:01:51,479
automation moving forward towards future

00:01:49,079 --> 00:01:52,350
goals of advanced manufacturing where we

00:01:51,479 --> 00:01:54,180
can move away from the traditional

00:01:52,350 --> 00:01:55,890
industrial robotic settings where

00:01:54,180 --> 00:02:00,390
everything is fixtured things are

00:01:55,890 --> 00:02:02,009
dangerous robots are in cages etc before

00:02:00,390 --> 00:02:03,750
I move on I just want to thank all of

00:02:02,009 --> 00:02:06,060
the people who could who helped

00:02:03,750 --> 00:02:08,280
contribute to the work and the talk that

00:02:06,060 --> 00:02:11,280
i'm going to give today a number of

00:02:08,280 --> 00:02:13,319
these people here brian paul JD julia

00:02:11,280 --> 00:02:13,740
fill all of these these guys are in the

00:02:13,319 --> 00:02:15,510
audience

00:02:13,740 --> 00:02:17,160
so feel free to talk to any of them any

00:02:15,510 --> 00:02:19,620
of them about any of the stuff for we're

00:02:17,160 --> 00:02:23,940
talking about but as well as other other

00:02:19,620 --> 00:02:26,190
members of the NASA and GM team so like

00:02:23,940 --> 00:02:28,620
I said the the NASA GM Robonaut vision

00:02:26,190 --> 00:02:30,330
is really to have robots smart robots

00:02:28,620 --> 00:02:32,730
capable of working with humans to help

00:02:30,330 --> 00:02:34,650
to help a system with real work real

00:02:32,730 --> 00:02:36,630
industrial real manipulation or assembly

00:02:34,650 --> 00:02:38,280
work and this is true both in the space

00:02:36,630 --> 00:02:39,750
settings to help with repairs and chores

00:02:38,280 --> 00:02:41,190
around something like the International

00:02:39,750 --> 00:02:44,280
Space Station and maybe you know

00:02:41,190 --> 00:02:45,720
ultimately planetary exploration and NGM

00:02:44,280 --> 00:02:47,310
to help with the factory workers to

00:02:45,720 --> 00:02:49,680
relieve some of the ergonomic challenges

00:02:47,310 --> 00:02:51,420
that the plant workers have to go

00:02:49,680 --> 00:02:53,520
through doing repetitive tasks all day

00:02:51,420 --> 00:02:55,320
long if you can have a robot help

00:02:53,520 --> 00:02:57,750
helping them out helping with taking

00:02:55,320 --> 00:02:59,190
over collaborating etc and then also

00:02:57,750 --> 00:03:01,200
backing off on some of the strict

00:02:59,190 --> 00:03:03,630
guidelines like again fixtured parts and

00:03:01,200 --> 00:03:06,330
dangerous systems where you have to keep

00:03:03,630 --> 00:03:07,800
them away from humans you put humans

00:03:06,330 --> 00:03:09,210
next to them things get messy when

00:03:07,800 --> 00:03:10,560
things get messy any better perception

00:03:09,210 --> 00:03:13,710
you need better smarts and you'd better

00:03:10,560 --> 00:03:14,940
autonomy and flexibility both with the

00:03:13,710 --> 00:03:17,820
hardware to make sure they don't hurt

00:03:14,940 --> 00:03:19,710
people and in terms of the software so

00:03:17,820 --> 00:03:22,400
yeah they have to be safe just emphasize

00:03:19,710 --> 00:03:25,500
that and that's all about the Robonaut

00:03:22,400 --> 00:03:27,990
how it's physically safe to work right

00:03:25,500 --> 00:03:29,640
next to you and of course ultimately we

00:03:27,990 --> 00:03:31,500
want the robots to be programmable by

00:03:29,640 --> 00:03:33,690
people that aren't roboticists aren't

00:03:31,500 --> 00:03:35,700
necessarily people like us who can go in

00:03:33,690 --> 00:03:37,500
and hack it in terminal etc we need

00:03:35,700 --> 00:03:40,080
possibly very smart people but you know

00:03:37,500 --> 00:03:46,050
people who don't sit around and download

00:03:40,080 --> 00:03:49,200
packages from ubuntu all day long so let

00:03:46,050 --> 00:03:54,170
me just give a quick overview of

00:03:49,200 --> 00:03:56,520
Robonaut itself it's not playing and

00:03:54,170 --> 00:03:58,110
this was the Robonaut video shown when

00:03:56,520 --> 00:03:59,460
it does i could probably acted i would

00:03:58,110 --> 00:04:03,600
have seen it so many times at this point

00:03:59,460 --> 00:04:07,260
but um so Robonaut as you can see is is

00:04:03,600 --> 00:04:10,230
a bimanual five fingered hand upper body

00:04:07,260 --> 00:04:12,150
torso robot it's got serious elastic

00:04:10,230 --> 00:04:14,580
actuation our series elastic actuators

00:04:12,150 --> 00:04:16,049
in upper five joints of each of the arms

00:04:14,580 --> 00:04:18,840
and also on the single degree of freedom

00:04:16,049 --> 00:04:21,000
waist linear actuators for the two risks

00:04:18,840 --> 00:04:25,620
degrees of freedom and then a 12 degree

00:04:21,000 --> 00:04:27,120
of freedom hand tend and driven hand the

00:04:25,620 --> 00:04:27,600
robots controlled basically through an

00:04:27,120 --> 00:04:29,130
impedance

00:04:27,600 --> 00:04:30,420
situation scheme I'm pions control

00:04:29,130 --> 00:04:33,300
scheme where we can control the

00:04:30,420 --> 00:04:35,130
stiffnesses and damping coefficients and

00:04:33,300 --> 00:04:36,950
characteristics both in Cartesian space

00:04:35,130 --> 00:04:39,090
is sort of a high priority control

00:04:36,950 --> 00:04:40,590
objective and also in joint space so we

00:04:39,090 --> 00:04:44,550
can do things like movie elbows other

00:04:40,590 --> 00:04:47,600
way be safe etc the impedance control

00:04:44,550 --> 00:04:49,800
paradigm is really part of this safety

00:04:47,600 --> 00:04:51,330
view that we have where we really need

00:04:49,800 --> 00:04:53,910
to be able to be compliant when we're

00:04:51,330 --> 00:04:56,100
working around around humans Robonaut

00:04:53,910 --> 00:04:59,880
also has a three degree freedom head to

00:04:56,100 --> 00:05:02,790
tilt and a pan joint and a number of

00:04:59,880 --> 00:05:04,170
sensing systems in its head analog

00:05:02,790 --> 00:05:06,150
cameras that we mainly use for

00:05:04,170 --> 00:05:10,200
teleoperation but also high definition

00:05:06,150 --> 00:05:19,380
giggy digital cameras and as of recently

00:05:10,200 --> 00:05:21,090
an asus 3d depth sensor so hopefully

00:05:19,380 --> 00:05:22,380
maybe i'll come back to that and you can

00:05:21,090 --> 00:05:24,320
actually see him in action but there

00:05:22,380 --> 00:05:29,310
should be other videos of him I believe

00:05:24,320 --> 00:05:32,730
throughout so as some of you may know we

00:05:29,310 --> 00:05:34,770
we flew a version of our a slightly

00:05:32,730 --> 00:05:36,930
upgraded version of Robonaut 2 to the

00:05:34,770 --> 00:05:39,060
International Space Station in February

00:05:36,930 --> 00:05:40,460
of last year took about six months to

00:05:39,060 --> 00:05:44,100
actually get them out of the box

00:05:40,460 --> 00:05:46,110
astronaut time is kind of expensive and

00:05:44,100 --> 00:05:48,060
hard to come by so you know they get

00:05:46,110 --> 00:05:49,650
around to things so it takes a little

00:05:48,060 --> 00:05:53,820
bit little little while to do anything

00:05:49,650 --> 00:05:54,960
up there but after after about six

00:05:53,820 --> 00:05:56,370
months they unpacked him and then they

00:05:54,960 --> 00:05:58,260
started the checkout process just to

00:05:56,370 --> 00:06:00,030
make sure that all the the system

00:05:58,260 --> 00:06:02,490
survived the journey it's kind of a

00:06:00,030 --> 00:06:04,440
rough ride up to space so they had to

00:06:02,490 --> 00:06:06,210
take it slow and we really had to learn

00:06:04,440 --> 00:06:08,430
how to program and how to deal with the

00:06:06,210 --> 00:06:10,500
robot that's 200 miles above us that we

00:06:08,430 --> 00:06:12,240
can't directly necessarily login to or

00:06:10,500 --> 00:06:13,560
control and that we have to go through a

00:06:12,240 --> 00:06:15,810
number of different people that aren't

00:06:13,560 --> 00:06:17,100
us and again aren't roboticists in order

00:06:15,810 --> 00:06:18,450
to do anything you know we can sit

00:06:17,100 --> 00:06:20,820
behind someone who has a number of

00:06:18,450 --> 00:06:23,700
commands that are legal to type into the

00:06:20,820 --> 00:06:24,750
terminals to etc or the astronauts

00:06:23,700 --> 00:06:27,060
themselves who are up there who have

00:06:24,750 --> 00:06:29,220
been trained to to use Robonaut at a

00:06:27,060 --> 00:06:31,710
high level and also potentially to

00:06:29,220 --> 00:06:33,330
repair repair the robot if anything goes

00:06:31,710 --> 00:06:37,470
wrong which unfortunately things have

00:06:33,330 --> 00:06:40,800
been pretty good so far so the is the

00:06:37,470 --> 00:06:41,400
number of pictures of here's the number

00:06:40,800 --> 00:06:45,240
of pictures

00:06:41,400 --> 00:06:47,130
of astronauts with with Robonaut even a

00:06:45,240 --> 00:06:50,210
picture of Robonaut right here

00:06:47,130 --> 00:06:53,310
performing hello world in sign language

00:06:50,210 --> 00:06:54,660
he can't speak but he can he can he can

00:06:53,310 --> 00:06:57,600
do sign language so we thought it would

00:06:54,660 --> 00:07:01,650
be nice to to do a hello world app you

00:06:57,600 --> 00:07:03,900
know to the actual world this is also

00:07:01,650 --> 00:07:06,539
the first humanoid robot handshake in

00:07:03,900 --> 00:07:08,430
space a little hokey but kind of cool it

00:07:06,539 --> 00:07:11,610
was also referred to on Saturday Night

00:07:08,430 --> 00:07:14,520
Live which we we were pretty happy about

00:07:11,610 --> 00:07:16,800
they said you know we saw just the first

00:07:14,520 --> 00:07:23,669
humanoid handshake but the robot saw it

00:07:16,800 --> 00:07:24,960
is phase one all right well you know the

00:07:23,669 --> 00:07:26,550
talk will be a little shorter and then

00:07:24,960 --> 00:07:29,669
maybe hopefully we can come back to it

00:07:26,550 --> 00:07:31,199
least there's a picture here so one

00:07:29,669 --> 00:07:32,870
sweet we went through the checkout once

00:07:31,199 --> 00:07:35,669
we did some gain tuning for zero gravity

00:07:32,870 --> 00:07:39,120
stuff we couldn't necessarily do very

00:07:35,669 --> 00:07:40,710
well on the ground we started looking at

00:07:39,120 --> 00:07:42,240
what tasks we can actually perform the

00:07:40,710 --> 00:07:44,389
robot right here as you can see is not

00:07:42,240 --> 00:07:47,970
mobile he's on this tension that we have

00:07:44,389 --> 00:07:49,800
and he can turn around but but that's

00:07:47,970 --> 00:07:51,810
about it but there were some things that

00:07:49,800 --> 00:07:54,210
the astronauts were were interested in

00:07:51,810 --> 00:07:55,560
seeing if if we could get Robonaut to

00:07:54,210 --> 00:07:57,930
help out with there's one particular

00:07:55,560 --> 00:07:59,280
task called the velocity elk it's

00:07:57,930 --> 00:08:01,800
basically a measurement device with a

00:07:59,280 --> 00:08:03,419
telescoping rod that they have to put

00:08:01,800 --> 00:08:05,010
and hold in front of air filters on the

00:08:03,419 --> 00:08:06,479
station just to make sure our flow is

00:08:05,010 --> 00:08:08,880
all right and obviously an important

00:08:06,479 --> 00:08:10,440
thing in space but it's tedious the

00:08:08,880 --> 00:08:11,880
astronauts have to stand there and hold

00:08:10,440 --> 00:08:13,830
this thing still and of course they're

00:08:11,880 --> 00:08:16,110
floating around trying not to move too

00:08:13,830 --> 00:08:17,909
much so they ask you know could we get

00:08:16,110 --> 00:08:20,099
Robonaut to do this and and so we said

00:08:17,909 --> 00:08:23,820
all right let's do it so we programmed

00:08:20,099 --> 00:08:25,740
up script to to do this and robot used

00:08:23,820 --> 00:08:26,820
it sensors to read the device held the

00:08:25,740 --> 00:08:28,050
tool and moved it around and the

00:08:26,820 --> 00:08:29,970
astronauts were able to sort of tweak

00:08:28,050 --> 00:08:32,370
the position of it just to line things

00:08:29,970 --> 00:08:34,200
up appropriately it took six hours but

00:08:32,370 --> 00:08:37,169
you know it's a start at least we we saw

00:08:34,200 --> 00:08:38,580
we could do it so that's just sort of

00:08:37,169 --> 00:08:40,560
indicative of the sorts of things that

00:08:38,580 --> 00:08:44,279
we're hoping that we can get the robot

00:08:40,560 --> 00:08:47,190
to do again to help out with with chores

00:08:44,279 --> 00:08:49,740
and routine activities up there to to

00:08:47,190 --> 00:08:51,300
reduce the number of tedious things and

00:08:49,740 --> 00:08:54,660
think the astronauts can do and free up

00:08:51,300 --> 00:08:57,070
other time for more interesting things

00:08:54,660 --> 00:08:59,460
well I'll come back to it all right

00:08:57,070 --> 00:09:02,710
here's Robonaut in action finally

00:08:59,460 --> 00:09:04,660
Dexter's hands five finger hands about

00:09:02,710 --> 00:09:06,430
eighty to ninety percent of the Koski

00:09:04,660 --> 00:09:09,250
grasp taxonomy is sort of what we were

00:09:06,430 --> 00:09:11,290
shooting for if people are familiar with

00:09:09,250 --> 00:09:14,200
that really the ability to use the same

00:09:11,290 --> 00:09:16,510
tools as as human so that just like in

00:09:14,200 --> 00:09:17,830
well both in the space situation where

00:09:16,510 --> 00:09:19,930
is very expensive to send new tools

00:09:17,830 --> 00:09:21,310
custom tools I think there's a drill up

00:09:19,930 --> 00:09:24,010
there they cost about 2 million dollars

00:09:21,310 --> 00:09:26,560
to build test a vibration testing

00:09:24,010 --> 00:09:28,570
radiation testing etc two very costly to

00:09:26,560 --> 00:09:29,920
send new things up to space so and the

00:09:28,570 --> 00:09:32,770
space station of course was designed to

00:09:29,920 --> 00:09:36,130
be repaired build maintained by humans

00:09:32,770 --> 00:09:39,220
human hands or humans in astronaut suits

00:09:36,130 --> 00:09:45,690
and so the Robonaut form factor is about

00:09:39,220 --> 00:09:45,690
a human in an astronaut suit form factor

00:09:48,600 --> 00:09:52,750
this it and the ability to use the image

00:09:51,459 --> 00:09:54,820
tools obviously it's important for the

00:09:52,750 --> 00:09:56,140
factory setting as well where again

00:09:54,820 --> 00:09:57,510
rather than creating custom end

00:09:56,140 --> 00:10:01,420
effectors where you have to shut down

00:09:57,510 --> 00:10:03,160
cells in the plan to replace anything if

00:10:01,420 --> 00:10:04,390
the robot can use the same tools then

00:10:03,160 --> 00:10:08,860
that's great you can save some of that

00:10:04,390 --> 00:10:10,779
extra overhead costs it's a strong robot

00:10:08,860 --> 00:10:12,670
you can hold about 40 pounds in each of

00:10:10,779 --> 00:10:13,810
the arms about 20 pounds in each of the

00:10:12,670 --> 00:10:17,290
hands because again they're tendon

00:10:13,810 --> 00:10:18,910
driven so a little bit more fragile but

00:10:17,290 --> 00:10:21,910
he's still within about the 99th

00:10:18,910 --> 00:10:24,750
percentile of human shape form factor

00:10:21,910 --> 00:10:26,800
smaller than Schwarzenegger at its peak

00:10:24,750 --> 00:10:30,130
you can see that's Rhonda fleur the

00:10:26,800 --> 00:10:31,660
project manager at NASA showing the

00:10:30,130 --> 00:10:33,430
compliance of the robot as it moves it's

00:10:31,660 --> 00:10:35,580
very safe to just sort of get in the way

00:10:33,430 --> 00:10:35,580
in

00:10:44,920 --> 00:10:48,650
both with the with the weight that we

00:10:47,300 --> 00:10:50,360
showed the robot actually has some

00:10:48,650 --> 00:10:52,610
ability to actually really impart impart

00:10:50,360 --> 00:10:55,040
real forces and do real work the

00:10:52,610 --> 00:10:57,950
dexterous hands allow the robot to also

00:10:55,040 --> 00:11:00,080
be able to manipulate non-rigid objects

00:10:57,950 --> 00:11:02,150
like this this space blanket we call it

00:11:00,080 --> 00:11:04,340
it's a material that's all over the

00:11:02,150 --> 00:11:06,110
space station really covering that range

00:11:04,340 --> 00:11:09,290
of flexible material and strength is

00:11:06,110 --> 00:11:12,500
something that we we found imperative to

00:11:09,290 --> 00:11:14,150
the design of the robot now most of

00:11:12,500 --> 00:11:16,040
these videos here just this collage are

00:11:14,150 --> 00:11:18,050
showing off the capabilities of the

00:11:16,040 --> 00:11:20,770
system most of the the programs are very

00:11:18,050 --> 00:11:23,540
scripted joint even joint level commands

00:11:20,770 --> 00:11:32,360
but again just to exhibit the what the

00:11:23,540 --> 00:11:34,930
robot is potentially capable here's that

00:11:32,360 --> 00:11:34,930
velocity calc

00:11:39,079 --> 00:11:47,040
that is the view from the digital

00:11:41,970 --> 00:11:49,470
cameras of the robot itself that's I

00:11:47,040 --> 00:11:51,360
that's Dan Burbank gender bank yeah

00:11:49,470 --> 00:11:52,500
astronaut dan burbank one of the two

00:11:51,360 --> 00:11:54,860
that are up there that have been trained

00:11:52,500 --> 00:11:57,389
specifically to be Robonaut operators

00:11:54,860 --> 00:12:00,379
can see that telescoping device in front

00:11:57,389 --> 00:12:02,430
of the air flow filter the air filter

00:12:00,379 --> 00:12:04,800
interesting thing to note just for

00:12:02,430 --> 00:12:07,699
curiosity you see all the the

00:12:04,800 --> 00:12:09,779
essentially noise in in the image

00:12:07,699 --> 00:12:12,660
radiation degradation on the cameras

00:12:09,779 --> 00:12:14,100
happens really quickly so as we leave it

00:12:12,660 --> 00:12:18,060
on for a couple hours we just see the

00:12:14,100 --> 00:12:19,230
pixels die so interesting challenges

00:12:18,060 --> 00:12:20,430
that we don't usually really have to

00:12:19,230 --> 00:12:27,180
deal with and think about too much on

00:12:20,430 --> 00:12:29,579
the ground before I leave this just a

00:12:27,180 --> 00:12:31,709
just take a note of this picture and see

00:12:29,579 --> 00:12:40,170
how much of a mess space station is on

00:12:31,709 --> 00:12:42,990
the inside here is so where we saw

00:12:40,170 --> 00:12:45,360
before so of course there's no up or

00:12:42,990 --> 00:12:48,750
down in space so you know we have to get

00:12:45,360 --> 00:12:51,120
used to that as we look at it we sent up

00:12:48,750 --> 00:12:53,490
this this busy board this is a series of

00:12:51,120 --> 00:12:56,819
four four panels that have a number of

00:12:53,490 --> 00:12:58,740
different switches connectors buttons

00:12:56,819 --> 00:13:00,480
etc things that are very sort of

00:12:58,740 --> 00:13:02,370
canonical devices that are all around

00:13:00,480 --> 00:13:04,170
the space station they don't really do

00:13:02,370 --> 00:13:06,769
much here and you're pushing buttons etc

00:13:04,170 --> 00:13:08,910
but really this we sent this up to see

00:13:06,769 --> 00:13:10,259
so we could learn about the process of

00:13:08,910 --> 00:13:11,819
programming the robot it's really to

00:13:10,259 --> 00:13:13,829
earn our stripes you know can we

00:13:11,819 --> 00:13:15,779
actually effectively send programs up to

00:13:13,829 --> 00:13:18,209
the robot built into a functionality

00:13:15,779 --> 00:13:19,319
build in the smarts to the system so

00:13:18,209 --> 00:13:22,769
that the robot can actually perform

00:13:19,319 --> 00:13:25,199
these these these manipulation tasks in

00:13:22,769 --> 00:13:26,610
the hope that as we move forward in the

00:13:25,199 --> 00:13:28,439
project the robot actually might be able

00:13:26,610 --> 00:13:31,410
to use real switches that are doing real

00:13:28,439 --> 00:13:34,350
things this is fairly recently this is

00:13:31,410 --> 00:13:36,029
only in the last couple couple weeks and

00:13:34,350 --> 00:13:38,519
this is our first successful test of

00:13:36,029 --> 00:13:40,649
doing a real real manipulation task we

00:13:38,519 --> 00:13:43,259
left the astronauts choose which buttons

00:13:40,649 --> 00:13:46,110
the robot should push and I think they

00:13:43,259 --> 00:13:49,230
pushed 18 successful buttons which is

00:13:46,110 --> 00:13:51,370
you know which is pretty good flipping

00:13:49,230 --> 00:13:54,490
the switch turning the power on etc

00:13:51,370 --> 00:13:58,000
there's even some well alright that's

00:13:54,490 --> 00:14:00,250
all I'm saying not much vision here in

00:13:58,000 --> 00:14:02,320
terms of visual processing verification

00:14:00,250 --> 00:14:05,080
or what we want to do here is is the

00:14:02,320 --> 00:14:06,310
robot can perform a specific action and

00:14:05,080 --> 00:14:08,170
then can use this vision system to

00:14:06,310 --> 00:14:10,120
verify whether it worked or not so did

00:14:08,170 --> 00:14:14,820
the light turn on did it not and then

00:14:10,120 --> 00:14:14,820
can try again if not adjusted strategy

00:14:15,060 --> 00:14:20,980
ok so how did we program the system what

00:14:18,700 --> 00:14:23,380
was the interface that we created in

00:14:20,980 --> 00:14:25,380
order to to write the programs and to

00:14:23,380 --> 00:14:29,680
let the robonaut sorry the astronauts

00:14:25,380 --> 00:14:32,080
actually program Robonaut this is what

00:14:29,680 --> 00:14:35,190
we call the r2 command command and

00:14:32,080 --> 00:14:38,830
control or commander or the GUI kind of

00:14:35,190 --> 00:14:42,220
lazily this was a custom-built c-sharp

00:14:38,830 --> 00:14:45,550
application that runs on Windows XP you

00:14:42,220 --> 00:14:48,100
can see how up on the top it's a series

00:14:45,550 --> 00:14:50,800
of essentially set points each blue blue

00:14:48,100 --> 00:14:53,320
block there is a Cartesian or a joint

00:14:50,800 --> 00:14:54,670
command that will get sent down to the

00:14:53,320 --> 00:14:56,500
robot there's different completion

00:14:54,670 --> 00:14:59,230
conditions as you leave each block like

00:14:56,500 --> 00:15:01,300
timeouts or did I actually reach the

00:14:59,230 --> 00:15:04,390
goal that went to or just move move on

00:15:01,300 --> 00:15:06,240
it's very linear there's a some limited

00:15:04,390 --> 00:15:08,470
capabilities for asynchronous and

00:15:06,240 --> 00:15:10,180
nonlinear programming but by and large

00:15:08,470 --> 00:15:12,730
this is this is sort of how we've

00:15:10,180 --> 00:15:14,560
programmed the robot and there's a lots

00:15:12,730 --> 00:15:17,410
of different state verification and data

00:15:14,560 --> 00:15:24,279
monitoring things or even some slider

00:15:17,410 --> 00:15:25,440
controls etc and basically how it works

00:15:24,279 --> 00:15:27,760
is we have the robot and the robot

00:15:25,440 --> 00:15:29,890
communicates that the online control

00:15:27,760 --> 00:15:31,120
systems are on board the robot are the

00:15:29,890 --> 00:15:32,890
real time control systems are on the

00:15:31,120 --> 00:15:35,770
robot and then commander will run on a

00:15:32,890 --> 00:15:37,690
on a computer and a PC actually a

00:15:35,770 --> 00:15:39,910
thinkpad they have a number of those up

00:15:37,690 --> 00:15:42,760
on the station and communicates with the

00:15:39,910 --> 00:15:44,320
robot over ethernet I'm just sending

00:15:42,760 --> 00:15:46,450
down these set points from from the

00:15:44,320 --> 00:15:49,900
control from commander to the

00:15:46,450 --> 00:15:51,400
controllers more specifically how it

00:15:49,900 --> 00:15:53,020
works is on board the system we run

00:15:51,400 --> 00:15:55,540
VxWorks which is a real-time operating

00:15:53,020 --> 00:15:57,790
system sort of tried and true for space

00:15:55,540 --> 00:15:59,680
applications the application itself the

00:15:57,790 --> 00:16:03,070
control application is written in a

00:15:59,680 --> 00:16:04,960
program called control shell which which

00:16:03,070 --> 00:16:07,030
isn't around too much anymore but

00:16:04,960 --> 00:16:09,310
we've used for about 10-15 years on the

00:16:07,030 --> 00:16:11,590
Robonaut project and Commander runs on

00:16:09,310 --> 00:16:13,060
windows XP off board the system the

00:16:11,590 --> 00:16:15,160
commander application is the non

00:16:13,060 --> 00:16:17,100
real-time layer that's where the

00:16:15,160 --> 00:16:19,870
applications the not safety-critical

00:16:17,100 --> 00:16:21,430
code which gives us a little bit more

00:16:19,870 --> 00:16:23,590
freedom we can make certain guarantees

00:16:21,430 --> 00:16:25,060
about the control layer what's happening

00:16:23,590 --> 00:16:27,100
on board the robot and safety is

00:16:25,060 --> 00:16:29,850
guaranteed at that level and performance

00:16:27,100 --> 00:16:32,890
but we can be i wanna say sloppy but

00:16:29,850 --> 00:16:34,030
because that's not right but we have a

00:16:32,890 --> 00:16:35,380
little bit more freedom at the higher

00:16:34,030 --> 00:16:38,050
level at the application level to

00:16:35,380 --> 00:16:40,960
experiment with with getting the robot

00:16:38,050 --> 00:16:43,360
to do things the communication layer

00:16:40,960 --> 00:16:45,760
between the control layer and commander

00:16:43,360 --> 00:16:49,990
is is using the network data delivery

00:16:45,760 --> 00:16:54,580
system RN dds transport layer it's the

00:16:49,990 --> 00:16:55,690
messaging publish-subscribe layer so

00:16:54,580 --> 00:16:58,240
there are some really good things about

00:16:55,690 --> 00:16:59,610
commander centralized control which is

00:16:58,240 --> 00:17:01,870
very important both for space and

00:16:59,610 --> 00:17:03,490
manufacturing applications where an

00:17:01,870 --> 00:17:04,660
operator can really just go into one

00:17:03,490 --> 00:17:06,670
single place and see what's actually

00:17:04,660 --> 00:17:10,360
going on they don't have to monitor 16

00:17:06,670 --> 00:17:12,160
different terminals or it's a visual

00:17:10,360 --> 00:17:14,260
programming language which was very good

00:17:12,160 --> 00:17:15,880
when you have these non robotics hackers

00:17:14,260 --> 00:17:18,220
who are actually running the running the

00:17:15,880 --> 00:17:19,600
program that there's some very intuitive

00:17:18,220 --> 00:17:22,360
ways about actually getting the robot to

00:17:19,600 --> 00:17:25,540
perform behavior and it's very easy to

00:17:22,360 --> 00:17:28,780
monitor the the program flow with with

00:17:25,540 --> 00:17:30,730
this vpl data visualization as you can

00:17:28,780 --> 00:17:32,800
see and even some a hierarchical

00:17:30,730 --> 00:17:35,380
encapsulation where entire scripts can

00:17:32,800 --> 00:17:37,450
be essentially reduced down to what are

00:17:35,380 --> 00:17:38,950
the green triangles up there so you know

00:17:37,450 --> 00:17:42,370
a little bit easier to manage and

00:17:38,950 --> 00:17:44,350
reorganize things but were the cons of

00:17:42,370 --> 00:17:45,910
this well the the program was very

00:17:44,350 --> 00:17:47,620
specific to the particular of

00:17:45,910 --> 00:17:49,960
configuration of our to as it was

00:17:47,620 --> 00:17:51,580
originally built if we added any sensors

00:17:49,960 --> 00:17:53,470
if we changed any of the infrastructure

00:17:51,580 --> 00:17:55,690
basically was a recompile on the c-sharp

00:17:53,470 --> 00:17:57,610
layer which is cumbersome and tedious

00:17:55,690 --> 00:18:00,250
and difficult to really you know

00:17:57,610 --> 00:18:01,960
building new functionality easily more

00:18:00,250 --> 00:18:03,760
than that as I said it's all set point

00:18:01,960 --> 00:18:06,490
control so it's very hard to put any

00:18:03,760 --> 00:18:07,600
sort of computational math in there you

00:18:06,490 --> 00:18:09,160
know where do you put the algorithms

00:18:07,600 --> 00:18:10,870
it's not entirely clear you can do it a

00:18:09,160 --> 00:18:13,630
little bit with playing nifty tricks

00:18:10,870 --> 00:18:15,250
with the vpl but if anybody's ever tried

00:18:13,630 --> 00:18:17,549
to do even things like you know for

00:18:15,250 --> 00:18:19,600
loops it gets comfort some pretty quick

00:18:17,549 --> 00:18:21,040
and although we have the the

00:18:19,600 --> 00:18:22,600
hierarchical encapsulation there's no

00:18:21,040 --> 00:18:24,820
reusability it's not like we can take a

00:18:22,600 --> 00:18:26,080
sub piece of a program save enough

00:18:24,820 --> 00:18:27,940
somewhere in and reuse it anywhere else

00:18:26,080 --> 00:18:30,790
we can cut and paste but even that sort

00:18:27,940 --> 00:18:32,710
of limited capabilities it's also

00:18:30,790 --> 00:18:34,000
platform specific that's not necessarily

00:18:32,710 --> 00:18:36,610
problem other than the fact that its

00:18:34,000 --> 00:18:39,100
platform the platform is windows so you

00:18:36,610 --> 00:18:41,260
know it's non distributable it's one

00:18:39,100 --> 00:18:44,140
particular program that runs on one

00:18:41,260 --> 00:18:45,340
laptop at any given time so all of the

00:18:44,140 --> 00:18:48,340
computation has to be done at that point

00:18:45,340 --> 00:18:50,140
and communicating between commander and

00:18:48,340 --> 00:18:51,970
anything else any third-party

00:18:50,140 --> 00:18:54,669
applications and custom sensing

00:18:51,970 --> 00:18:55,990
applications any scripts that are not in

00:18:54,669 --> 00:18:57,640
commander is very difficult and

00:18:55,990 --> 00:18:59,380
cumbersome you can go in there but again

00:18:57,640 --> 00:19:02,770
it's sort of a recompile or at least a

00:18:59,380 --> 00:19:05,590
significant configuration upgrade in

00:19:02,770 --> 00:19:08,260
order to do anything that's not that

00:19:05,590 --> 00:19:11,380
wasn't in the direct initial capability

00:19:08,260 --> 00:19:12,970
as a commander but but here's the thing

00:19:11,380 --> 00:19:14,919
I mean this is basically the status quo

00:19:12,970 --> 00:19:17,500
of how manufacturing and space robotics

00:19:14,919 --> 00:19:19,540
robots are programmed I would even say

00:19:17,500 --> 00:19:22,179
that it's one of the you know the best

00:19:19,540 --> 00:19:24,309
and most flexible versions of how robots

00:19:22,179 --> 00:19:26,799
are actually programmed in these

00:19:24,309 --> 00:19:28,210
configurations so just some examples so

00:19:26,799 --> 00:19:29,470
you know typical manufacturing

00:19:28,210 --> 00:19:31,720
applications we have this teach pendant

00:19:29,470 --> 00:19:34,150
here it's much of a BB a BB robots here

00:19:31,720 --> 00:19:36,850
and operators can take the teach pendant

00:19:34,150 --> 00:19:38,860
and go through and teach set point

00:19:36,850 --> 00:19:40,690
control the same sort of way as

00:19:38,860 --> 00:19:42,070
commander or you can actually grab hold

00:19:40,690 --> 00:19:44,919
of the robot as we see this operator

00:19:42,070 --> 00:19:46,540
doing and teach a particular scale up

00:19:44,919 --> 00:19:48,309
top we see the special purpose dexterous

00:19:46,540 --> 00:19:51,190
manipulator that's on the space station

00:19:48,309 --> 00:19:52,750
and that's actually the GUI that

00:19:51,190 --> 00:19:56,710
actually controls that lots of buttons

00:19:52,750 --> 00:19:58,510
you know 8-bit graphics etc very

00:19:56,710 --> 00:20:01,540
cumbersome to really do much of anything

00:19:58,510 --> 00:20:04,990
and it's for a very specific purpose as

00:20:01,540 --> 00:20:10,480
the name blaze but again very hard to do

00:20:04,990 --> 00:20:11,950
things like math and and one of the

00:20:10,480 --> 00:20:13,900
issues is that is the system's get more

00:20:11,950 --> 00:20:15,669
complex if we have just a seven dollar

00:20:13,900 --> 00:20:17,919
arm with a gripper okay maybe we can do

00:20:15,669 --> 00:20:19,990
do things this way but as we get to

00:20:17,919 --> 00:20:23,730
systems that have multiple robot systems

00:20:19,990 --> 00:20:26,169
or even the complication of spdm there

00:20:23,730 --> 00:20:29,110
then to really do sophisticated things

00:20:26,169 --> 00:20:30,940
it's it's not possible to do this set to

00:20:29,110 --> 00:20:32,830
set our set point control

00:20:30,940 --> 00:20:34,870
or is it really feasible to do complete

00:20:32,830 --> 00:20:36,820
teleoperation just because it's very

00:20:34,870 --> 00:20:38,350
hard to do and visualize them to get in

00:20:36,820 --> 00:20:43,690
any sort of suit that can actually take

00:20:38,350 --> 00:20:45,940
advantage of a 30 robot system etc but

00:20:43,690 --> 00:20:47,410
here's the thing I mean we need

00:20:45,940 --> 00:20:49,630
something different I mean this is where

00:20:47,410 --> 00:20:51,970
we're going right we want to get

00:20:49,630 --> 00:20:53,440
Robonaut off the office pedestal on

00:20:51,970 --> 00:20:54,970
Space Station and we need him moving

00:20:53,440 --> 00:20:56,770
around and doing stuff and this is going

00:20:54,970 --> 00:20:59,800
to be a significant challenge for four

00:20:56,770 --> 00:21:01,660
at a level of autonomy or at least semi

00:20:59,800 --> 00:21:03,100
autonomy that's well beyond what we're

00:21:01,660 --> 00:21:05,430
capable of doing with the status quo of

00:21:03,100 --> 00:21:09,460
manufacturing and industrial robotics I

00:21:05,430 --> 00:21:11,140
believe I mean as you can see there's

00:21:09,460 --> 00:21:13,240
going to have to be significant

00:21:11,140 --> 00:21:16,080
improvements on autonomy on motion

00:21:13,240 --> 00:21:20,320
planning on trajectory generation on

00:21:16,080 --> 00:21:22,660
manipulation and I am just I just want

00:21:20,320 --> 00:21:27,040
to emphasize that I mean I we can't do

00:21:22,660 --> 00:21:30,190
it using the status quo so i should say

00:21:27,040 --> 00:21:32,290
this is this it's pretty this isn't a

00:21:30,190 --> 00:21:34,750
real simulation this is pure graphics

00:21:32,290 --> 00:21:36,520
animation done by nasa's graphics

00:21:34,750 --> 00:21:37,840
animation department so there's no

00:21:36,520 --> 00:21:40,900
motion planning going on here this is

00:21:37,840 --> 00:21:41,950
all essentially computer graphics still

00:21:40,900 --> 00:21:48,280
impressive I don't know how they did it

00:21:41,950 --> 00:21:50,410
but you know so we're building legs we

00:21:48,280 --> 00:21:51,700
have prototype legs and in the next year

00:21:50,410 --> 00:21:53,020
and a half we hope to actually send

00:21:51,700 --> 00:21:54,670
these up and attach them to the upper

00:21:53,020 --> 00:21:57,130
body that's on the space station this is

00:21:54,670 --> 00:21:58,600
super exciting we're very we're very

00:21:57,130 --> 00:22:00,040
happy to do this and it's going to open

00:21:58,600 --> 00:22:01,990
up the possibilities of Robonaut and

00:22:00,040 --> 00:22:03,280
Space Station move it away from just the

00:22:01,990 --> 00:22:04,630
sort of check out can to push a button

00:22:03,280 --> 00:22:06,670
but actually getting the robot to do

00:22:04,630 --> 00:22:11,110
real things and really help the

00:22:06,670 --> 00:22:12,580
astronauts out on the space station so

00:22:11,110 --> 00:22:15,190
how do we get there so I want to argue

00:22:12,580 --> 00:22:16,990
that there are three high-level points

00:22:15,190 --> 00:22:18,640
that we're going to need to incorporate

00:22:16,990 --> 00:22:22,380
in order to move from the status quo

00:22:18,640 --> 00:22:24,400
into into the future first of all

00:22:22,380 --> 00:22:26,170
autonomy we need more at least

00:22:24,400 --> 00:22:27,640
semi-supervised dattani me let the robot

00:22:26,170 --> 00:22:31,600
take over and do some of the things on

00:22:27,640 --> 00:22:33,610
its own don't just send long lists of

00:22:31,600 --> 00:22:35,260
joint commands it's not possible you

00:22:33,610 --> 00:22:37,030
need to actually have significant

00:22:35,260 --> 00:22:39,760
closed-loop behavior on the perceptual

00:22:37,030 --> 00:22:41,170
side on the motor side have motion plans

00:22:39,760 --> 00:22:44,500
that the robot can generate on its own

00:22:41,170 --> 00:22:45,130
modify if it need if need be but we need

00:22:44,500 --> 00:22:46,600
some more

00:22:45,130 --> 00:22:48,250
me on the part of the robot it needs to

00:22:46,600 --> 00:22:50,050
start making some decisions decisions on

00:22:48,250 --> 00:22:53,290
his own to offload the burden for the

00:22:50,050 --> 00:22:54,820
further programmers but we still need to

00:22:53,290 --> 00:22:58,630
maintain that we need end user

00:22:54,820 --> 00:23:00,820
interfaces that are feasible for for

00:22:58,630 --> 00:23:02,530
people that aren't us to actually go in

00:23:00,820 --> 00:23:03,820
and program we need the complex behavior

00:23:02,530 --> 00:23:06,010
but we need to make sure that people

00:23:03,820 --> 00:23:07,450
that don't necessarily have to see all

00:23:06,010 --> 00:23:10,420
the details but they can still program

00:23:07,450 --> 00:23:12,430
complex and potentially smart autonomous

00:23:10,420 --> 00:23:14,530
behavior of course you know we need

00:23:12,430 --> 00:23:17,850
stunning intuitive feedback to the

00:23:14,530 --> 00:23:21,340
operators and the ending interfaces for

00:23:17,850 --> 00:23:22,780
letting these people these users build

00:23:21,340 --> 00:23:25,840
more and more complicated behavior over

00:23:22,780 --> 00:23:30,130
time without having to call in the

00:23:25,840 --> 00:23:31,660
robotics expert and but and arguably

00:23:30,130 --> 00:23:34,090
arguably most importantly we need

00:23:31,660 --> 00:23:35,560
robustness we can do this we can add the

00:23:34,090 --> 00:23:36,970
autonomy but as as everyone here

00:23:35,560 --> 00:23:40,330
probably knows you start you start

00:23:36,970 --> 00:23:42,640
putting in autonomy and and robustness

00:23:40,330 --> 00:23:44,170
sort of suffers right we need to make

00:23:42,640 --> 00:23:45,490
sure that when we add this autonomy in

00:23:44,170 --> 00:23:47,530
there that the robots can still do what

00:23:45,490 --> 00:23:49,480
they're meant to do reliably if things

00:23:47,530 --> 00:23:50,950
go wrong it's not catastrophic doesn't

00:23:49,480 --> 00:23:52,240
hurt anybody doesn't send an astronaut

00:23:50,950 --> 00:23:54,010
through the wall the space station I

00:23:52,240 --> 00:23:57,100
mean all very important things it needs

00:23:54,010 --> 00:23:58,600
to be reliable and so there's a lot of

00:23:57,100 --> 00:24:00,730
blood rejection areas i'll talk about a

00:23:58,600 --> 00:24:05,140
little bit more in terms of you know

00:24:00,730 --> 00:24:07,570
what robustness really means but but

00:24:05,140 --> 00:24:09,280
yeah we'll get there so here's some some

00:24:07,570 --> 00:24:11,730
initial preliminary tests in terms of

00:24:09,280 --> 00:24:14,350
autonomy here's an example of Robonaut

00:24:11,730 --> 00:24:17,260
performing a drill or bolt tightening

00:24:14,350 --> 00:24:19,060
task with a drill this just this is this

00:24:17,260 --> 00:24:20,500
is the beginning of the sort of paradigm

00:24:19,060 --> 00:24:22,090
shift of point-to-point and has to use

00:24:20,500 --> 00:24:23,620
its vision system to find the drill on

00:24:22,090 --> 00:24:26,530
the table with did some preliminary

00:24:23,620 --> 00:24:28,240
training of how to use the drill how to

00:24:26,530 --> 00:24:29,740
grasp the trill up in the top left you

00:24:28,240 --> 00:24:31,210
see sort of this preliminary training

00:24:29,740 --> 00:24:32,890
stage the robot was given a couple

00:24:31,210 --> 00:24:34,420
different options of how to grasp the

00:24:32,890 --> 00:24:37,600
jail from the top the side left hand

00:24:34,420 --> 00:24:39,040
right hand etc and it was it was it was

00:24:37,600 --> 00:24:40,420
allowed to explore you know find the

00:24:39,040 --> 00:24:41,980
different places the configurations of

00:24:40,420 --> 00:24:43,870
the drill on the table we reach strategy

00:24:41,980 --> 00:24:47,110
or a combination of of topside

00:24:43,870 --> 00:24:48,430
left-right grasps actually work and so

00:24:47,110 --> 00:24:50,020
here what you actually see is the robot

00:24:48,430 --> 00:24:52,000
learning you know how can i grab the

00:24:50,020 --> 00:24:55,060
drill effectively on the such that you

00:24:52,000 --> 00:24:56,230
can actuate the trigger and it doesn't

00:24:55,060 --> 00:24:57,840
get it all the time but it's an

00:24:56,230 --> 00:25:00,330
exploration process

00:24:57,840 --> 00:25:01,980
on the right here yet you see sort of

00:25:00,330 --> 00:25:03,840
another layer of adaptation which we

00:25:01,980 --> 00:25:05,880
think is important not a priority

00:25:03,840 --> 00:25:07,409
learning but you know when the robots

00:25:05,880 --> 00:25:09,750
actually look performing the task how

00:25:07,409 --> 00:25:11,640
can I react to failures how can it

00:25:09,750 --> 00:25:13,919
correct if it misses or for collides

00:25:11,640 --> 00:25:15,029
with the bolt etc and the advantage here

00:25:13,919 --> 00:25:16,140
is that of course we know something

00:25:15,029 --> 00:25:17,429
about the environment we know we're

00:25:16,140 --> 00:25:19,710
tightening a bolt we might know that

00:25:17,429 --> 00:25:22,110
it's it's an inch long an inch wide so

00:25:19,710 --> 00:25:24,750
we can use information to trim and prune

00:25:22,110 --> 00:25:26,159
the expectations of where the bolt is so

00:25:24,750 --> 00:25:28,380
you can see that little figure there

00:25:26,159 --> 00:25:30,210
where it tries at probes if it runs into

00:25:28,380 --> 00:25:31,649
the bolt if it misses it can say well

00:25:30,210 --> 00:25:33,210
I'm pretty sure the bolt isn't here I

00:25:31,649 --> 00:25:35,340
can readjust my estimate of where it is

00:25:33,210 --> 00:25:39,000
and and refine that over time to

00:25:35,340 --> 00:25:42,510
actually get on there and sort of as

00:25:39,000 --> 00:25:44,309
another layer in adaptation here what

00:25:42,510 --> 00:25:45,720
what we think is important is that every

00:25:44,309 --> 00:25:47,039
time the robot performs the task it

00:25:45,720 --> 00:25:48,570
should get a little bit better we

00:25:47,039 --> 00:25:51,299
shouldn't just start start the script

00:25:48,570 --> 00:25:52,289
let it finish and at the end we can

00:25:51,299 --> 00:25:54,120
start it again but we didn't learn

00:25:52,289 --> 00:25:55,590
anything from the from the beginning so

00:25:54,120 --> 00:25:56,850
we really need robust performance over

00:25:55,590 --> 00:25:58,649
time where the robot can actually

00:25:56,850 --> 00:26:00,299
improve its in performance learn a

00:25:58,649 --> 00:26:01,799
little bit more if it does the same task

00:26:00,299 --> 00:26:04,770
a thousand times if something goes wrong

00:26:01,799 --> 00:26:07,470
it should say hey something's wrong so

00:26:04,770 --> 00:26:09,270
that sort of sort of what we what we how

00:26:07,470 --> 00:26:10,940
we view the autonomy in these sort of

00:26:09,270 --> 00:26:13,770
environments where we know something but

00:26:10,940 --> 00:26:16,789
but we want the robot to start making

00:26:13,770 --> 00:26:16,789
some decisions on its own

00:26:22,990 --> 00:26:28,000
so I did have this was the put this was

00:26:25,570 --> 00:26:30,520
an issue I had with the movie before so

00:26:28,000 --> 00:26:32,700
just give it a second i think old will

00:26:30,520 --> 00:26:32,700
come

00:26:41,130 --> 00:26:48,370
so as I said earlier we we recently put

00:26:44,440 --> 00:26:51,850
a 3d Ranger adept sensor in the robots

00:26:48,370 --> 00:26:53,679
head this is not reusing the Asus it

00:26:51,850 --> 00:26:55,570
didn't actually make the configuration

00:26:53,679 --> 00:26:57,610
went to space asus isn't exactly space

00:26:55,570 --> 00:26:59,169
ready at this point but we really wanted

00:26:57,610 --> 00:27:00,490
to experiment with these new types of

00:26:59,169 --> 00:27:03,250
sensing capabilities and all the cool

00:27:00,490 --> 00:27:04,929
stuff through PCL and Ross that the

00:27:03,250 --> 00:27:06,340
people are using so here's an example we

00:27:04,929 --> 00:27:08,559
essentially threw together in a week

00:27:06,340 --> 00:27:11,500
before we came to st. Paul where the

00:27:08,559 --> 00:27:13,029
robot doesn't tabletop segmentation uses

00:27:11,500 --> 00:27:14,770
simple characteristics about the objects

00:27:13,029 --> 00:27:16,059
on the table essentially bounding box to

00:27:14,770 --> 00:27:18,039
say I should I go from the side should i

00:27:16,059 --> 00:27:20,320
go for the top should I orient the hand

00:27:18,039 --> 00:27:23,220
with you know along the major axis of

00:27:20,320 --> 00:27:25,840
the bounding box and with a relatively

00:27:23,220 --> 00:27:27,850
simple graph strategy just essentially a

00:27:25,840 --> 00:27:30,309
Palmer grasp reflex where when contact

00:27:27,850 --> 00:27:32,080
is made the robot closes its fingers we

00:27:30,309 --> 00:27:34,720
were able to actually do pretty well for

00:27:32,080 --> 00:27:36,669
non-precision grasps which is toss which

00:27:34,720 --> 00:27:38,020
is a great start you know it's not not

00:27:36,669 --> 00:27:39,429
solving grasping it's not solving the

00:27:38,020 --> 00:27:41,440
manipulation problem it's not solving

00:27:39,429 --> 00:27:43,149
tool use but just getting to the point

00:27:41,440 --> 00:27:45,370
where we can actually use the sensors to

00:27:43,149 --> 00:27:47,049
perceive the environment make some

00:27:45,370 --> 00:27:48,820
simple decisions on what's going on and

00:27:47,049 --> 00:27:51,880
actually do something is really exciting

00:27:48,820 --> 00:27:54,520
to us so if anybody was a boy last week

00:27:51,880 --> 00:27:57,250
we brought the robot and he he did this

00:27:54,520 --> 00:27:59,370
for hours which was which was kind of

00:27:57,250 --> 00:27:59,370
cool

00:28:04,669 --> 00:28:08,480
so I mean I just want to emphasize you

00:28:07,609 --> 00:28:10,669
know we're just scratching the surface

00:28:08,480 --> 00:28:14,629
in terms of autonomy for this it's it's

00:28:10,669 --> 00:28:16,789
sort of a new paradigm for the NASA and

00:28:14,629 --> 00:28:17,929
manufacturing situations but you know

00:28:16,789 --> 00:28:19,129
we're seeing what we can do and we're

00:28:17,929 --> 00:28:28,999
using Robonaut essentially is the

00:28:19,129 --> 00:28:31,549
platform to do that ok so all right well

00:28:28,999 --> 00:28:32,720
we didn't do that stuff with the old

00:28:31,549 --> 00:28:34,669
commander we had to make some

00:28:32,720 --> 00:28:36,769
modifications so what have we done well

00:28:34,669 --> 00:28:38,840
we brought Ross to the system that's why

00:28:36,769 --> 00:28:40,429
we're here we said hey look we need to

00:28:38,840 --> 00:28:42,799
be able to do this stuff we need some

00:28:40,429 --> 00:28:47,059
tools to actually to actually make the

00:28:42,799 --> 00:28:49,879
system more more autonomous so we we

00:28:47,059 --> 00:28:52,879
reimagined the commander system we we

00:28:49,879 --> 00:28:55,489
left windows XP we left C sharp we went

00:28:52,879 --> 00:28:57,649
to python we went to linux and we said

00:28:55,489 --> 00:28:59,659
at the high level let's keep it the same

00:28:57,649 --> 00:29:01,460
visual programming language great it's

00:28:59,659 --> 00:29:08,210
it's intuitive it's natural you can see

00:29:01,460 --> 00:29:09,859
what's going on etc but let's let's open

00:29:08,210 --> 00:29:13,190
up the sort of floodgates of

00:29:09,859 --> 00:29:15,169
functionality to the system all right so

00:29:13,190 --> 00:29:17,239
this is this is the new commander you

00:29:15,169 --> 00:29:19,279
can see Robonaut and arvest over there

00:29:17,239 --> 00:29:20,899
with interactive markers nice

00:29:19,279 --> 00:29:21,980
visualization tools that are nice to

00:29:20,899 --> 00:29:23,960
just sort of get the robot in the

00:29:21,980 --> 00:29:25,519
configuration you want but as you can do

00:29:23,960 --> 00:29:26,989
that then you can start putting in you

00:29:25,519 --> 00:29:29,090
can put in the set points you can put in

00:29:26,989 --> 00:29:31,249
the computation etc so how do we do this

00:29:29,090 --> 00:29:32,779
so right here you can see these black

00:29:31,249 --> 00:29:34,639
blocks these are essentially Python

00:29:32,779 --> 00:29:37,159
scripts we write Python scripts and then

00:29:34,639 --> 00:29:39,940
we save them and they become black box

00:29:37,159 --> 00:29:42,049
great then we can hook up the black box

00:29:39,940 --> 00:29:44,570
well we can hook up the black box in

00:29:42,049 --> 00:29:46,460
different non-parallel nonlinear

00:29:44,570 --> 00:29:48,440
structures but we can also allow these

00:29:46,460 --> 00:29:50,570
scripts to get access to and send data

00:29:48,440 --> 00:29:53,330
to Ross topics so these little green

00:29:50,570 --> 00:29:55,100
Leafs hanging off that's on the left

00:29:53,330 --> 00:29:56,389
side we have Ross data coming in on the

00:29:55,100 --> 00:29:59,029
right side we have Ross data going out

00:29:56,389 --> 00:30:00,109
we just specify the type at runtime we

00:29:59,029 --> 00:30:01,700
can parameterize with the specific

00:30:00,109 --> 00:30:04,279
topics that you know type specific

00:30:01,700 --> 00:30:05,869
topics and then the script inside is

00:30:04,279 --> 00:30:07,909
agnostic to the specific source of

00:30:05,869 --> 00:30:09,679
information it just does the computation

00:30:07,909 --> 00:30:11,929
that it needs to and that's great

00:30:09,679 --> 00:30:13,580
because now we can write more general

00:30:11,929 --> 00:30:15,559
programs and reuse them in different

00:30:13,580 --> 00:30:18,080
context with different sensors different

00:30:15,559 --> 00:30:18,559
hardware etc we can take these blocks

00:30:18,080 --> 00:30:20,269
and we can

00:30:18,559 --> 00:30:22,249
save them to a library that we can build

00:30:20,269 --> 00:30:23,629
upon we can constantly add things to the

00:30:22,249 --> 00:30:25,669
library and then build new scripts out

00:30:23,629 --> 00:30:27,470
of that the blue blocks here are

00:30:25,669 --> 00:30:28,850
hierarchical program so each one of

00:30:27,470 --> 00:30:33,649
those has its own little state machine

00:30:28,850 --> 00:30:36,769
inside and like I said our vis-a-vis

00:30:33,649 --> 00:30:38,960
integration so also this commander is

00:30:36,769 --> 00:30:40,519
very nice for prototyping are building

00:30:38,960 --> 00:30:41,659
up quick programs etc but once you

00:30:40,519 --> 00:30:42,710
actually have a program you don't

00:30:41,659 --> 00:30:44,090
necessarily want to have to go through

00:30:42,710 --> 00:30:46,159
the state machine and run it from that

00:30:44,090 --> 00:30:48,169
and always watch that so we wrote in RVs

00:30:46,159 --> 00:30:50,149
plugin here's a quick example at five

00:30:48,169 --> 00:30:51,710
times speed of just building a program

00:30:50,149 --> 00:30:54,529
from the library of skills that the

00:30:51,710 --> 00:30:57,440
robot has connecting them up connecting

00:30:54,529 --> 00:30:59,869
the ross and goes case services saving

00:30:57,440 --> 00:31:01,669
it great and then a liberal commander

00:30:59,869 --> 00:31:04,129
plugin which just lets us actually play

00:31:01,669 --> 00:31:05,179
it back so that's the robot doing too

00:31:04,129 --> 00:31:09,470
little skills that he had in this

00:31:05,179 --> 00:31:11,210
library showing off his muscles etc and

00:31:09,470 --> 00:31:13,820
that was run on the real robot i didn't

00:31:11,210 --> 00:31:17,080
catch the video of that but that's our

00:31:13,820 --> 00:31:17,080
biz echoing what the robots doing

00:31:20,590 --> 00:31:24,169
there's some organizational things we

00:31:22,700 --> 00:31:26,330
did you can write your programs you save

00:31:24,169 --> 00:31:27,919
them you put metadata like tags etc and

00:31:26,330 --> 00:31:29,690
then in our biz you can sort through

00:31:27,919 --> 00:31:31,309
using the tag information and say hey

00:31:29,690 --> 00:31:33,529
give me all the things that give me all

00:31:31,309 --> 00:31:35,379
the grasps that the robot has etc and

00:31:33,529 --> 00:31:43,399
then you can just start and stop those

00:31:35,379 --> 00:31:45,019
from our vids so how does how does the

00:31:43,399 --> 00:31:47,149
new commander work well we still stuck

00:31:45,019 --> 00:31:49,100
with the control shell VxWorks system at

00:31:47,149 --> 00:31:51,860
the at the low level this is again the

00:31:49,100 --> 00:31:53,419
reliable real-time control systems but

00:31:51,860 --> 00:31:54,559
what we did is created a ross bridge and

00:31:53,419 --> 00:31:55,580
this was really just sorta to get us

00:31:54,559 --> 00:31:57,619
started where we wouldn't have to

00:31:55,580 --> 00:31:59,149
redesign the low-level system but how do

00:31:57,619 --> 00:32:01,220
we make the data to and from the robot

00:31:59,149 --> 00:32:03,860
accessible we created a ross bridge that

00:32:01,220 --> 00:32:05,929
essentially echoes the nds data into

00:32:03,860 --> 00:32:06,919
ross and then we created the system

00:32:05,929 --> 00:32:08,539
where there are a number of script

00:32:06,919 --> 00:32:09,950
engine script engines of ross nodes and

00:32:08,539 --> 00:32:12,559
they can be there can be multiple ones

00:32:09,950 --> 00:32:13,759
on on yours in your system you can have

00:32:12,559 --> 00:32:15,619
lots of different computers running a

00:32:13,759 --> 00:32:18,169
script engine but they're aggregated

00:32:15,619 --> 00:32:19,820
through to the commander GUI which is

00:32:18,169 --> 00:32:21,049
the centralized point of control which

00:32:19,820 --> 00:32:22,519
again like i said before is very

00:32:21,049 --> 00:32:25,549
important from from the end-user

00:32:22,519 --> 00:32:27,350
perspective and from from that gooey

00:32:25,549 --> 00:32:29,299
that the operator can control both the

00:32:27,350 --> 00:32:32,730
load balancing

00:32:29,299 --> 00:32:34,769
and the distribution of how programs are

00:32:32,730 --> 00:32:36,600
run if particular blocks need to be sent

00:32:34,769 --> 00:32:37,769
to particular machines maybe you have

00:32:36,600 --> 00:32:39,630
one block in there that's doing some

00:32:37,769 --> 00:32:41,580
intense visual processing distribute

00:32:39,630 --> 00:32:42,929
that to a particular machine but because

00:32:41,580 --> 00:32:45,000
all those blocks are essentially sharing

00:32:42,929 --> 00:32:47,220
Ross data back and forth then it's very

00:32:45,000 --> 00:32:49,679
easy to distribute the way we actually

00:32:47,220 --> 00:32:50,970
do it is we use zeromq we take the

00:32:49,679 --> 00:32:52,649
scripts they're all Python so we

00:32:50,970 --> 00:32:54,690
essentially just pickle up the scripts

00:32:52,649 --> 00:32:55,860
and then we send them over it zeromq to

00:32:54,690 --> 00:32:58,769
the different script engines on the

00:32:55,860 --> 00:33:00,990
network this was really meant so that we

00:32:58,769 --> 00:33:03,120
could have cross platform capabilities

00:33:00,990 --> 00:33:05,490
at the GUI level the GUI is just cutie

00:33:03,120 --> 00:33:07,289
and then the the computation actually

00:33:05,490 --> 00:33:08,760
gets are the pieces of code gets sent

00:33:07,289 --> 00:33:14,789
over zeromq which is platform

00:33:08,760 --> 00:33:15,960
independent all right but this was sort

00:33:14,789 --> 00:33:18,029
of just to get the ball rolling where

00:33:15,960 --> 00:33:20,580
we're going next is to replace that

00:33:18,029 --> 00:33:21,960
low-level system and the export system

00:33:20,580 --> 00:33:23,909
with the bridge with something that's a

00:33:21,960 --> 00:33:26,669
little bit more integrated specifically

00:33:23,909 --> 00:33:28,950
we're moving to oricas I should make a

00:33:26,669 --> 00:33:30,450
little plug again for the birds of a

00:33:28,950 --> 00:33:31,740
feather talk at ten-thirty where we'll

00:33:30,450 --> 00:33:33,240
talking a little talking a little bit

00:33:31,740 --> 00:33:35,279
more on this but this was really

00:33:33,240 --> 00:33:38,580
important and and if for no other reason

00:33:35,279 --> 00:33:40,620
then as we build the leg system up we we

00:33:38,580 --> 00:33:42,240
needed to be able to extend the software

00:33:40,620 --> 00:33:44,100
the original control shop application

00:33:42,240 --> 00:33:45,899
its if people don't know control shell

00:33:44,100 --> 00:33:47,789
it's very much like simulink and

00:33:45,899 --> 00:33:50,760
simulink is very to add a whole another

00:33:47,789 --> 00:33:52,620
27 doff manipulators to that it was very

00:33:50,760 --> 00:33:54,750
hard to extend the current system so

00:33:52,620 --> 00:33:56,240
what we did was took a step back and

00:33:54,750 --> 00:33:58,320
said how do we have a more integrated

00:33:56,240 --> 00:34:00,389
entire system that can handle both the

00:33:58,320 --> 00:34:02,070
upper body and the lower body and moving

00:34:00,389 --> 00:34:04,649
to a component based architecture like

00:34:02,070 --> 00:34:05,730
oricas seemed like a natural fit so

00:34:04,649 --> 00:34:08,399
we're actually working with professor

00:34:05,730 --> 00:34:11,790
lewis sent us at UT austin to bring in

00:34:08,399 --> 00:34:13,649
his whole body control out packages into

00:34:11,790 --> 00:34:14,790
the Eroica system and that's how how

00:34:13,649 --> 00:34:16,859
we're essentially going to control the

00:34:14,790 --> 00:34:19,290
full for four limbs manipulator in the

00:34:16,859 --> 00:34:24,349
future so we're happy to talk about some

00:34:19,290 --> 00:34:26,310
of that stuff offline so why Ross so

00:34:24,349 --> 00:34:28,079
number of different reasons some of

00:34:26,310 --> 00:34:29,639
which you know everybody I think sort of

00:34:28,079 --> 00:34:32,159
gets here between the standardization

00:34:29,639 --> 00:34:33,899
and modular ization etc the excellent

00:34:32,159 --> 00:34:35,970
tools for visualization and interaction

00:34:33,899 --> 00:34:39,359
like rvs and interactive markers awesome

00:34:35,970 --> 00:34:41,129
cool great but what we really wanted to

00:34:39,359 --> 00:34:41,560
do just to emphasize is you know move

00:34:41,129 --> 00:34:43,540
from

00:34:41,560 --> 00:34:44,980
having a robot that's capable of doing

00:34:43,540 --> 00:34:47,170
stuff to robot that's actually doing

00:34:44,980 --> 00:34:49,720
stuff and and Ross is sort of bringing

00:34:47,170 --> 00:34:51,940
that computational smarts in a way where

00:34:49,720 --> 00:34:56,170
we don't have to write it all ourselves

00:34:51,940 --> 00:34:57,820
you know where we don't have to yeah I

00:34:56,170 --> 00:35:00,370
mean that's really it when it comes down

00:34:57,820 --> 00:35:02,110
to it so technical reasons but also

00:35:00,370 --> 00:35:03,010
practical reasons I mean we we're

00:35:02,110 --> 00:35:04,480
collaborating with a number of

00:35:03,010 --> 00:35:07,300
universities and different research labs

00:35:04,480 --> 00:35:08,830
at GM I work with a use research lab hrl

00:35:07,300 --> 00:35:10,750
in Malibu number of different people

00:35:08,830 --> 00:35:12,400
there they're using Ross it's very easy

00:35:10,750 --> 00:35:13,870
for us to now share code that can run on

00:35:12,400 --> 00:35:15,520
Robonaut without them actually having a

00:35:13,870 --> 00:35:19,600
robo not because Robonaut are expensive

00:35:15,520 --> 00:35:21,490
and you know it takes it takes a

00:35:19,600 --> 00:35:23,140
community to build a Robonaut that's all

00:35:21,490 --> 00:35:25,030
there is to it it's an incredibly

00:35:23,140 --> 00:35:26,620
complicated system and and we can't do

00:35:25,030 --> 00:35:28,120
it all ourselves and we wanted to

00:35:26,620 --> 00:35:29,590
leverage the best stuff that's out there

00:35:28,120 --> 00:35:32,500
and it's great that every we have such a

00:35:29,590 --> 00:35:33,790
the community here is witness to all the

00:35:32,500 --> 00:35:37,330
great stuff that's going on and we want

00:35:33,790 --> 00:35:38,980
to take advantage of that now of course

00:35:37,330 --> 00:35:43,990
you know we're we are fighting the not

00:35:38,980 --> 00:35:46,180
invented here battle at with the project

00:35:43,990 --> 00:35:48,070
but you know the more we can show with

00:35:46,180 --> 00:35:51,490
the robot the better and and we're

00:35:48,070 --> 00:35:52,990
making good progress on that so just a

00:35:51,490 --> 00:35:54,700
brief outline of what with what we have

00:35:52,990 --> 00:35:58,300
with Robonaut in Ross so far we have a

00:35:54,700 --> 00:35:59,350
gazebo sim that was the old gazebo it

00:35:58,300 --> 00:36:00,790
looks like we're gonna have to rewrite

00:35:59,350 --> 00:36:04,150
most of that for the new one but that's

00:36:00,790 --> 00:36:06,130
awesome great and we're putting in

00:36:04,150 --> 00:36:08,050
actually i SS models into the gazebo

00:36:06,130 --> 00:36:11,140
I've made some progress with that so

00:36:08,050 --> 00:36:12,820
that will be that will be exciting won't

00:36:11,140 --> 00:36:15,610
have all those dangling wires and such

00:36:12,820 --> 00:36:16,960
but you got to start somewhere we've

00:36:15,610 --> 00:36:18,370
done a lot of tests preliminary tests

00:36:16,960 --> 00:36:20,680
with different Ross packages out there

00:36:18,370 --> 00:36:22,150
gazebo interactive markers we've looked

00:36:20,680 --> 00:36:23,650
at the arm navigation warehouse viewer

00:36:22,150 --> 00:36:25,900
stuff that the guys talked about

00:36:23,650 --> 00:36:27,730
yesterday some success with that in

00:36:25,900 --> 00:36:28,870
simulation we're working more towards

00:36:27,730 --> 00:36:31,420
actually integrating without with the

00:36:28,870 --> 00:36:32,800
real robot looked at it octa map and as

00:36:31,420 --> 00:36:35,320
you saw some of the tabletop

00:36:32,800 --> 00:36:37,150
manipulation work but there are a number

00:36:35,320 --> 00:36:39,550
of gain changes game changers here that

00:36:37,150 --> 00:36:41,200
are helping us with essentially winning

00:36:39,550 --> 00:36:43,510
the battle and opening eyes at NASA and

00:36:41,200 --> 00:36:45,250
at GM and why why it's good to switch to

00:36:43,510 --> 00:36:47,290
these tools the visualization and sim

00:36:45,250 --> 00:36:50,320
tools interactive markers are vzyal of

00:36:47,290 --> 00:36:53,200
that stuff RX graph you know all that

00:36:50,320 --> 00:36:54,630
all the cool GUI introspection tools are

00:36:53,200 --> 00:36:56,549
really important to have

00:36:54,630 --> 00:36:58,500
outside of the box and it's been it's

00:36:56,549 --> 00:37:00,920
been really effective to be able to show

00:36:58,500 --> 00:37:02,819
that stuff really quickly again

00:37:00,920 --> 00:37:05,180
integration among collaborators and

00:37:02,819 --> 00:37:07,769
leveraging the state of the art research

00:37:05,180 --> 00:37:09,750
the gazebo simulation is available

00:37:07,769 --> 00:37:12,000
directly right now we are fighting the

00:37:09,750 --> 00:37:13,470
long arduous battle of paperwork and

00:37:12,000 --> 00:37:15,740
toward in terms of actually putting it

00:37:13,470 --> 00:37:18,480
up on something like the open NASA

00:37:15,740 --> 00:37:19,740
project website although I talked to

00:37:18,480 --> 00:37:21,329
Tully a couple days ago and he's going

00:37:19,740 --> 00:37:25,349
to help us maybe get it as an appt get

00:37:21,329 --> 00:37:31,079
deviant and I think we can do that

00:37:25,349 --> 00:37:33,059
pretty quickly so stay tuned for that so

00:37:31,079 --> 00:37:35,430
hitting hitting the third bullet from

00:37:33,059 --> 00:37:36,720
the original that original outline you

00:37:35,430 --> 00:37:38,579
know what's missing the robustness is

00:37:36,720 --> 00:37:39,750
the key issue here and this is something

00:37:38,579 --> 00:37:41,430
that I think everybody here is very

00:37:39,750 --> 00:37:42,539
sensitive to and it was great to see a

00:37:41,430 --> 00:37:45,089
lot of people talk about that yesterday

00:37:42,539 --> 00:37:47,279
that how do we move from the research

00:37:45,089 --> 00:37:49,950
lab code University grad student lab

00:37:47,279 --> 00:37:51,509
code to deployable systems that are

00:37:49,950 --> 00:37:53,670
actually reliable and we can have

00:37:51,509 --> 00:37:55,259
performance guarantees test things that

00:37:53,670 --> 00:37:56,849
we can actually claims we can actually

00:37:55,259 --> 00:37:59,099
make about the software we're running

00:37:56,849 --> 00:38:01,230
this stuff is absolutely critical as we

00:37:59,099 --> 00:38:02,789
move towards systems that go to space or

00:38:01,230 --> 00:38:07,140
go to systems that actually work with

00:38:02,789 --> 00:38:10,049
humans and factories and we're we're

00:38:07,140 --> 00:38:11,640
pushing forward on logging and and fault

00:38:10,049 --> 00:38:13,049
detection ross bag is great but you know

00:38:11,640 --> 00:38:14,579
as we talked about yesterday there still

00:38:13,049 --> 00:38:17,400
some limitations that i'm glad to see

00:38:14,579 --> 00:38:20,819
people are sensitive to and that we're

00:38:17,400 --> 00:38:22,890
moving forward on also just to talk a

00:38:20,819 --> 00:38:27,089
little bit about some of Morgan's

00:38:22,890 --> 00:38:28,319
crackpot ideas I mean yes we agree we've

00:38:27,089 --> 00:38:30,059
we've talked ourselves about the

00:38:28,319 --> 00:38:31,849
reliance on a single raw score master if

00:38:30,059 --> 00:38:34,829
we can move to a more distributed system

00:38:31,849 --> 00:38:36,180
with redundancy on that that's great and

00:38:34,829 --> 00:38:37,440
even on the service level I mean it's

00:38:36,180 --> 00:38:39,779
very so if you think about an airplane

00:38:37,440 --> 00:38:42,210
right for motors for engines etc one

00:38:39,779 --> 00:38:43,440
goes down the airplane still fine we

00:38:42,210 --> 00:38:45,690
don't really think that way in terms of

00:38:43,440 --> 00:38:47,220
how we set up our Ross Network right if

00:38:45,690 --> 00:38:49,170
one particular node that has some

00:38:47,220 --> 00:38:51,029
particular functionality goes down maybe

00:38:49,170 --> 00:38:52,200
it's a graceful fail but the system will

00:38:51,029 --> 00:38:55,230
basically stop doing what it's supposed

00:38:52,200 --> 00:38:56,730
to be doing so our correct bad idea one

00:38:55,230 --> 00:38:57,990
of our crackpot ideas would be well what

00:38:56,730 --> 00:38:59,130
if you have redundant nodes that are

00:38:57,990 --> 00:39:00,750
actually providing the same information

00:38:59,130 --> 00:39:01,829
so if you lose some then at least you

00:39:00,750 --> 00:39:06,000
have some backup and you can continue

00:39:01,829 --> 00:39:07,260
doing what you're doing so what are the

00:39:06,000 --> 00:39:11,190
solutions well we've heard

00:39:07,260 --> 00:39:13,260
lot about some possible possible

00:39:11,190 --> 00:39:14,850
approaches I want to definitely plug

00:39:13,260 --> 00:39:16,500
Sean in the Ross industrial work I think

00:39:14,850 --> 00:39:18,000
that they're they're really pushing in

00:39:16,500 --> 00:39:19,530
the right direction in terms of adding

00:39:18,000 --> 00:39:21,630
the reliability the testing the

00:39:19,530 --> 00:39:23,490
performance and at least characterizing

00:39:21,630 --> 00:39:24,980
what works what doesn't we're very

00:39:23,490 --> 00:39:27,540
interested in what's happening there

00:39:24,980 --> 00:39:29,010
ross forte it looks like we haven't made

00:39:27,540 --> 00:39:30,510
the jump but from from what i've heard

00:39:29,010 --> 00:39:31,590
they're a lot of some of these issues

00:39:30,510 --> 00:39:34,230
especially with things like health

00:39:31,590 --> 00:39:36,000
monitoring etc starting to make their

00:39:34,230 --> 00:39:39,120
way into the official releases so we're

00:39:36,000 --> 00:39:41,070
excited about that also from the move it

00:39:39,120 --> 00:39:42,540
talked yesterday attend the idea of

00:39:41,070 --> 00:39:43,800
having the benchmarking etc and the

00:39:42,540 --> 00:39:46,290
characteristics where it's publicly

00:39:43,800 --> 00:39:47,850
accessible i think that's great and if

00:39:46,290 --> 00:39:49,740
we can take that paradigm sort of more

00:39:47,850 --> 00:39:51,120
general and really as we characterize

00:39:49,740 --> 00:39:52,950
the different capabilities that people

00:39:51,120 --> 00:39:56,460
are bringing to ross i think that would

00:39:52,950 --> 00:39:58,080
be really important but but this is this

00:39:56,460 --> 00:40:00,660
again i think everybody's sensitive to

00:39:58,080 --> 00:40:02,880
this how do we take the systems where we

00:40:00,660 --> 00:40:04,380
don't have to go in 15 terminals open

00:40:02,880 --> 00:40:05,670
lots of different launch scripts make

00:40:04,380 --> 00:40:07,020
this stuff reliable so you don't really

00:40:05,670 --> 00:40:08,190
have to think about that and you can

00:40:07,020 --> 00:40:12,900
actually make some claims about how

00:40:08,190 --> 00:40:14,610
things actually work very important so

00:40:12,900 --> 00:40:17,010
where are we going we saw the beginnings

00:40:14,610 --> 00:40:19,410
of commander just opening up to

00:40:17,010 --> 00:40:21,600
scripting languages and and distribution

00:40:19,410 --> 00:40:23,310
is important but we also want to put

00:40:21,600 --> 00:40:24,900
some more smarts in there we want to add

00:40:23,310 --> 00:40:27,990
more complexity that again still

00:40:24,900 --> 00:40:29,490
maintains easy to use interfaces at the

00:40:27,990 --> 00:40:31,980
high level but also there's some smarts

00:40:29,490 --> 00:40:33,360
underneath so we're starting to to push

00:40:31,980 --> 00:40:34,740
in that direction and actually look at

00:40:33,360 --> 00:40:37,230
how we actually put in some machine

00:40:34,740 --> 00:40:39,660
learning some you know some smarts

00:40:37,230 --> 00:40:40,830
underneath the hood we're very

00:40:39,660 --> 00:40:43,110
interested in looking at things like

00:40:40,830 --> 00:40:44,430
automatic model building data flow for

00:40:43,110 --> 00:40:45,900
health verification what does happen

00:40:44,430 --> 00:40:47,460
well if i run a block a hundred times

00:40:45,900 --> 00:40:48,600
and then i've run of the hundred and

00:40:47,460 --> 00:40:49,980
first time and something doesn't look

00:40:48,600 --> 00:40:52,050
quite right at the very least we should

00:40:49,980 --> 00:40:54,390
do is say hey something's not right pay

00:40:52,050 --> 00:40:57,240
attention to this that's very very

00:40:54,390 --> 00:40:59,640
important state estimation so as we go

00:40:57,240 --> 00:41:01,140
through we go through these complex

00:40:59,640 --> 00:41:03,030
state machines maybe we can actually add

00:41:01,140 --> 00:41:04,350
some predictive capabilities in there to

00:41:03,030 --> 00:41:06,060
say that you know given this data coming

00:41:04,350 --> 00:41:07,710
in with some probability i'm going to

00:41:06,060 --> 00:41:09,030
take this path out that's sort of the

00:41:07,710 --> 00:41:12,480
precursor to actually putting some

00:41:09,030 --> 00:41:14,220
planning systems into into it adaptive

00:41:12,480 --> 00:41:16,080
policies for writing data so if i have a

00:41:14,220 --> 00:41:17,580
block right now it is general you can

00:41:16,080 --> 00:41:19,230
reaper ammeter eyes the topics that run

00:41:17,580 --> 00:41:20,200
time like i said but what if the system

00:41:19,230 --> 00:41:22,510
took care of that we

00:41:20,200 --> 00:41:24,160
routing at runtime well for example I

00:41:22,510 --> 00:41:25,510
see an object on the table I should be

00:41:24,160 --> 00:41:27,250
sending my commands to the left arm

00:41:25,510 --> 00:41:28,720
versus the right arm types are the same

00:41:27,250 --> 00:41:31,720
but where the data is actually going

00:41:28,720 --> 00:41:34,780
could be taken care of on on on the

00:41:31,720 --> 00:41:35,770
robot side and of course where we're

00:41:34,780 --> 00:41:37,270
definitely looking at further

00:41:35,770 --> 00:41:38,650
integration across the board with all

00:41:37,270 --> 00:41:40,349
the different Ross packages that people

00:41:38,650 --> 00:41:42,550
are doing specifically motion planning

00:41:40,349 --> 00:41:45,099
object recognition grass planning and

00:41:42,550 --> 00:41:49,720
and you know all the cool stuff that's

00:41:45,099 --> 00:41:52,119
going on we do have a mobility platform

00:41:49,720 --> 00:41:54,760
besides the legs that's meant for in a

00:41:52,119 --> 00:41:56,349
planet or planetary exploration this is

00:41:54,760 --> 00:41:58,089
the Centaur to platform and sort of a

00:41:56,349 --> 00:42:00,820
spin-off of Robonaut uses the same

00:41:58,089 --> 00:42:03,130
series elastic activation schemes for

00:42:00,820 --> 00:42:05,890
these articulate wheels it's a

00:42:03,130 --> 00:42:07,810
four-wheeled platform and we can

00:42:05,890 --> 00:42:09,730
actually lift Robonaut off it's the

00:42:07,810 --> 00:42:11,619
development Robonaut that we have at JSC

00:42:09,730 --> 00:42:13,810
lifted off its pedestal and put it on to

00:42:11,619 --> 00:42:16,599
onto centaur we've done a number of

00:42:13,810 --> 00:42:20,920
things in the Arizona Arizona desert

00:42:16,599 --> 00:42:22,210
with that picking up rocks etc so so

00:42:20,920 --> 00:42:24,520
that's cool and it would be great to put

00:42:22,210 --> 00:42:27,190
that into RVs and Ross and start using

00:42:24,520 --> 00:42:28,960
some of the navigation stacks but then

00:42:27,190 --> 00:42:37,569
you know whole host of issues with that

00:42:28,960 --> 00:42:39,250
rough terrain outside sensing etc so you

00:42:37,569 --> 00:42:40,270
know that was that was the short term

00:42:39,250 --> 00:42:41,440
that's where we're going in the next

00:42:40,270 --> 00:42:43,930
couple years that's what we've been

00:42:41,440 --> 00:42:45,640
doing but but it doesn't stop there so

00:42:43,930 --> 00:42:51,970
I'm pretty much done but I just want to

00:42:45,640 --> 00:42:53,050
end with with this and actually I don't

00:42:51,970 --> 00:42:54,579
really want to say too much about it

00:42:53,050 --> 00:42:59,339
I'll just let people watch it you know

00:42:54,579 --> 00:42:59,339
and if if we get here awesome

00:43:16,380 --> 00:43:20,759
and just to emphasize all simulation or

00:43:18,900 --> 00:43:26,609
graphics nothing really going on here

00:43:20,759 --> 00:43:27,809
but this is the hope i mean i guess i'll

00:43:26,609 --> 00:43:28,980
add a little bit more so you know

00:43:27,809 --> 00:43:30,480
they're there is a number of different

00:43:28,980 --> 00:43:32,549
maintenance tasks that the astronauts

00:43:30,480 --> 00:43:34,470
have to do it's obviously very expensive

00:43:32,549 --> 00:43:36,569
time-consuming dangerous to get the

00:43:34,470 --> 00:43:38,220
astronauts out there eight hours

00:43:36,569 --> 00:43:40,799
stretches at the time possibly over

00:43:38,220 --> 00:43:42,450
multiple sessions if there was a

00:43:40,799 --> 00:43:44,220
Robonaut outside could navigate from one

00:43:42,450 --> 00:43:46,230
side to the next actually do some

00:43:44,220 --> 00:43:50,099
repairs go back to its little doghouse

00:43:46,230 --> 00:43:52,079
that it might be sleeping in then the

00:43:50,099 --> 00:43:58,799
cost-benefit you know the cost and the

00:43:52,079 --> 00:44:01,490
benefit would be immense so anyway I

00:43:58,799 --> 00:44:01,490
line with that thang

00:44:26,300 --> 00:44:30,960
right so the question was what's the

00:44:29,070 --> 00:44:33,150
taxonomy of tasks what do we really want

00:44:30,960 --> 00:44:35,369
to do and how do we characterize that on

00:44:33,150 --> 00:44:38,490
the space station and how we go about

00:44:35,369 --> 00:44:40,380
doing that I would say right now we're

00:44:38,490 --> 00:44:42,480
not limiting ourselves you know that

00:44:40,380 --> 00:44:44,430
that veloci calc example that I showed

00:44:42,480 --> 00:44:45,869
first we weren't planning on doing that

00:44:44,430 --> 00:44:47,550
you know we sent up that task board we

00:44:45,869 --> 00:44:49,140
sort of expected to do that but the

00:44:47,550 --> 00:44:51,060
velocity calc basically one of the

00:44:49,140 --> 00:44:54,359
astronauts said hey can you guys do this

00:44:51,060 --> 00:44:55,770
and we said yes and you know we spent a

00:44:54,359 --> 00:44:57,810
couple weeks and we did it and great you

00:44:55,770 --> 00:44:59,220
know we want to help them in a way that

00:44:57,810 --> 00:45:00,630
the astronauts want us to help them

00:44:59,220 --> 00:45:01,980
there are a number of different things

00:45:00,630 --> 00:45:06,630
that we know that we sort of want to

00:45:01,980 --> 00:45:08,130
push forward another example is just

00:45:06,630 --> 00:45:09,930
basic chores that the astronauts have to

00:45:08,130 --> 00:45:11,340
do on a regular basis every Sunday or

00:45:09,930 --> 00:45:13,020
every other Sunday they have to spend an

00:45:11,340 --> 00:45:15,450
hour to cleaning down all the handrails

00:45:13,020 --> 00:45:17,849
wiping them down in terms obviously a

00:45:15,450 --> 00:45:19,380
big issue and that's definitely

00:45:17,849 --> 00:45:20,940
something if we could free up a couple

00:45:19,380 --> 00:45:22,530
hours a week of the astronauts let the

00:45:20,940 --> 00:45:24,960
robot scrub down the handrails that

00:45:22,530 --> 00:45:27,330
would be a perfect task but in terms of

00:45:24,960 --> 00:45:28,410
inside the space station we will do what

00:45:27,330 --> 00:45:30,180
people want with you know with the

00:45:28,410 --> 00:45:35,119
astronauts one what we can think of its

00:45:30,180 --> 00:45:35,119
really an experiment in and of itself so

00:45:36,440 --> 00:45:42,570
right so um so smash is great I mean I

00:45:40,380 --> 00:45:44,160
think the biggest thing the biggest

00:45:42,570 --> 00:45:45,599
difference is that my understanding is

00:45:44,160 --> 00:45:48,750
smash I haven't i've looked at i've

00:45:45,599 --> 00:45:50,040
watched some of the videos but so but

00:45:48,750 --> 00:45:52,109
it's still a scripting language you

00:45:50,040 --> 00:45:54,720
create the state machine in python or in

00:45:52,109 --> 00:45:56,220
a scripting language we really wanted to

00:45:54,720 --> 00:45:57,540
move to a visual programming language

00:45:56,220 --> 00:45:58,890
where you really are assembling the

00:45:57,540 --> 00:46:00,420
blocks ourselves because that's very

00:45:58,890 --> 00:46:03,210
important again for people that you know

00:46:00,420 --> 00:46:06,030
don't know python for astronauts etc so

00:46:03,210 --> 00:46:08,190
so we wanted to keep keep that very

00:46:06,030 --> 00:46:09,990
intuitive non-expert user interface at

00:46:08,190 --> 00:46:11,400
the highest level if you want to go and

00:46:09,990 --> 00:46:12,720
create your own Python scripts and do

00:46:11,400 --> 00:46:15,119
that you're absolutely welcome to do

00:46:12,720 --> 00:46:17,099
that you're not limited to it but we

00:46:15,119 --> 00:46:18,510
wanted wanted to draw that gondry that

00:46:17,099 --> 00:46:21,119
you didn't have to use things that way

00:46:18,510 --> 00:46:22,560
and I think things like smash still

00:46:21,119 --> 00:46:26,030
required a significant amount of you

00:46:22,560 --> 00:46:26,030
know coding capabilities

00:46:34,240 --> 00:46:39,280
no it's not permanent um oh sorry yeah

00:46:37,570 --> 00:46:41,020
the question was is the robot going

00:46:39,280 --> 00:46:42,700
permanently blind I made the comment

00:46:41,020 --> 00:46:44,980
that the the pixel degradation that we

00:46:42,700 --> 00:46:46,630
saw in those videos it gets worse over

00:46:44,980 --> 00:46:48,760
over time it gets worse over time in a

00:46:46,630 --> 00:46:57,730
session rebooting tends to tends to make

00:46:48,760 --> 00:46:59,610
things okay it does and there are a

00:46:57,730 --> 00:47:01,840
number of different safeties that we

00:46:59,610 --> 00:47:03,670
modified the the flight robot that

00:47:01,840 --> 00:47:06,190
beyond what we have on the development

00:47:03,670 --> 00:47:09,400
robots we have on the ground I can talk

00:47:06,190 --> 00:47:10,630
about that stuff rain sure so one

00:47:09,400 --> 00:47:12,130
interesting thing is we have what we

00:47:10,630 --> 00:47:13,660
call scrubbers is they're essentially

00:47:12,130 --> 00:47:15,190
these little boards on next to each

00:47:13,660 --> 00:47:17,920
joint which are constantly flashing the

00:47:15,190 --> 00:47:20,080
FPGAs at the motor control level there

00:47:17,920 --> 00:47:21,550
is degradation and obviously it's very

00:47:20,080 --> 00:47:24,340
important that our control loops on on

00:47:21,550 --> 00:47:27,580
the motors actually perform so you know

00:47:24,340 --> 00:47:30,400
every every little bit every 20 minutes

00:47:27,580 --> 00:47:32,350
or so reflash the we flash that with a

00:47:30,400 --> 00:47:33,670
to make sure things are okay so yeah so

00:47:32,350 --> 00:47:35,650
we definitely have to address some of

00:47:33,670 --> 00:47:37,630
those issues and that's inside I mean

00:47:35,650 --> 00:47:45,700
outside it's going to be a whole whole

00:47:37,630 --> 00:47:49,390
another challenge inside it operates

00:47:45,700 --> 00:47:52,180
basically as it is he the ground robots

00:47:49,390 --> 00:47:53,680
basically wear spandex suits but the

00:47:52,180 --> 00:47:55,300
materials there's a whole soft goods

00:47:53,680 --> 00:47:58,000
department that we have that has is

00:47:55,300 --> 00:48:00,760
basically in charge of the materials for

00:47:58,000 --> 00:48:03,040
the robot that are up in space sorry

00:48:00,760 --> 00:48:05,590
I'll repeat the question not at that the

00:48:03,040 --> 00:48:11,670
question was do we need a space suit for

00:48:05,590 --> 00:48:14,080
Robonaut or can it operate as it is I

00:48:11,670 --> 00:48:15,490
mean what we do we have it's a space

00:48:14,080 --> 00:48:17,350
suit it's not a nasty it's not like a

00:48:15,490 --> 00:48:18,910
astronaut space suit but you know there

00:48:17,350 --> 00:48:22,570
are materials that we've added to make

00:48:18,910 --> 00:48:24,310
it operational on space there were there

00:48:22,570 --> 00:48:26,800
were some a number of different safety

00:48:24,310 --> 00:48:28,390
checks on the software level just to be

00:48:26,800 --> 00:48:31,960
very cautious about you know what state

00:48:28,390 --> 00:48:33,609
the robots in its head around and yes

00:48:31,960 --> 00:48:36,160
just a significant upgrades on the

00:48:33,609 --> 00:48:39,369
software side on the hardware side

00:48:36,160 --> 00:48:41,560
beyond the scrubber is duplicating the

00:48:39,369 --> 00:48:43,660
code so yeah we're done to see on that

00:48:41,560 --> 00:48:47,590
level are there any sensors on the back

00:48:43,660 --> 00:48:48,339
of the robot know most of the sensitive

00:48:47,590 --> 00:48:50,289
or word

00:48:48,339 --> 00:48:52,239
of course we can move the head around we

00:48:50,289 --> 00:49:01,690
can't completely move it around but most

00:48:52,239 --> 00:49:02,829
of it is is looking forward oh right so

00:49:01,690 --> 00:49:04,390
the question was during the

00:49:02,829 --> 00:49:06,579
demonstration where the where the human

00:49:04,390 --> 00:49:08,349
got into into the workspace of the robot

00:49:06,579 --> 00:49:11,349
and stopped the motion of the hand you

00:49:08,349 --> 00:49:12,640
know how how does the robot distinguish

00:49:11,349 --> 00:49:14,609
between the disturbance and the natural

00:49:12,640 --> 00:49:16,989
you know be compliant with respect to

00:49:14,609 --> 00:49:18,789
emotion and what's going on there I mean

00:49:16,989 --> 00:49:20,140
what we're actually doing is we're

00:49:18,789 --> 00:49:22,599
applying torque limiting to the control

00:49:20,140 --> 00:49:24,219
loops so that basically it just maxes

00:49:22,599 --> 00:49:25,630
out and doesn't try to exert too much of

00:49:24,219 --> 00:49:28,960
a force to try to get where it's going

00:49:25,630 --> 00:49:31,119
so that basically lets it be it lets it

00:49:28,960 --> 00:49:33,460
be safe in that regard but again as I

00:49:31,119 --> 00:49:34,960
mentioned we're running some wood what's

00:49:33,460 --> 00:49:36,609
essentially a multi priority impedance

00:49:34,960 --> 00:49:38,589
control law there where we can control

00:49:36,609 --> 00:49:39,849
the stiffnesses and the compliance both

00:49:38,589 --> 00:49:42,009
in joint space and the lower priority

00:49:39,849 --> 00:49:43,420
and task space and Cartesian space at

00:49:42,009 --> 00:49:45,519
the higher priority so it's a

00:49:43,420 --> 00:49:48,549
combination of limiting what's actually

00:49:45,519 --> 00:49:49,809
happening and and and the force that the

00:49:48,549 --> 00:49:51,009
robot can apply and then actually

00:49:49,809 --> 00:49:57,249
controlling the compliance

00:49:51,009 --> 00:50:00,489
characteristics does Robonaut have Kenny

00:49:57,249 --> 00:50:02,410
talk and can you listen um basically as

00:50:00,489 --> 00:50:05,140
of a couple weeks ago we actually can

00:50:02,410 --> 00:50:06,999
start command your scripts by voice he

00:50:05,140 --> 00:50:09,609
cannot speak to us other than in sign

00:50:06,999 --> 00:50:13,239
language at this point even that we have

00:50:09,609 --> 00:50:15,519
to program that in ourselves but but

00:50:13,239 --> 00:50:18,130
yeah we're moving towards that course

00:50:15,519 --> 00:50:22,450
only really useful inside the space

00:50:18,130 --> 00:50:30,400
station outside he'll have to be waving

00:50:22,450 --> 00:50:32,229
and signing it and then so sure so the

00:50:30,400 --> 00:50:34,479
question was really with regards to to

00:50:32,229 --> 00:50:36,969
teleoperation and that Robonaut sort of

00:50:34,479 --> 00:50:39,430
an ideal platform for teleoperation for

00:50:36,969 --> 00:50:42,219
some I Thomas mi automation some my

00:50:39,430 --> 00:50:43,989
autonomy etc absolutely Robonaut one was

00:50:42,219 --> 00:50:51,549
almost primarily a teleoperated robot

00:50:43,989 --> 00:50:53,289
robot robot but Robonaut 2 as as as try

00:50:51,549 --> 00:50:54,519
to convey you know we're pushing towards

00:50:53,289 --> 00:50:55,749
more autonomous behavior but we never

00:50:54,519 --> 00:50:57,819
want to completely get away from that

00:50:55,749 --> 00:50:59,529
there are some situations where it makes

00:50:57,819 --> 00:51:01,130
a lot of sense to still completely tele

00:50:59,529 --> 00:51:03,559
operate the robot

00:51:01,130 --> 00:51:05,960
I imagine like in the EV a video they're

00:51:03,559 --> 00:51:07,579
outside it's possible for the astronauts

00:51:05,960 --> 00:51:08,900
to tele operate the robot from inside

00:51:07,579 --> 00:51:11,450
the space station to perform the

00:51:08,900 --> 00:51:13,099
manipulation tasks personally I think

00:51:11,450 --> 00:51:14,720
you know the some autonomy in there let

00:51:13,099 --> 00:51:18,019
the robot takeover then that should help

00:51:14,720 --> 00:51:19,849
performance at least in the long run but

00:51:18,019 --> 00:51:21,250
the problem even with that situation is

00:51:19,849 --> 00:51:24,650
that once you put those legs on there

00:51:21,250 --> 00:51:27,049
the system is very complicated it's I I

00:51:24,650 --> 00:51:28,849
don't really expect astronauts to get

00:51:27,049 --> 00:51:30,799
into a four-limbed bodysuit to actually

00:51:28,849 --> 00:51:33,589
tell you operate those fairly non

00:51:30,799 --> 00:51:36,589
anthropomorphic legs so the complexity

00:51:33,589 --> 00:51:38,930
of the system and even the embodiment of

00:51:36,589 --> 00:51:40,670
the system is is pushing away from the

00:51:38,930 --> 00:51:43,519
ability to really control it in the way

00:51:40,670 --> 00:51:44,869
the telly operation is useful for more

00:51:43,519 --> 00:51:46,819
than that we can't tell you operated

00:51:44,869 --> 00:51:48,980
from ground even though it's only 200

00:51:46,819 --> 00:51:50,150
miles up or so we don't have a direct

00:51:48,980 --> 00:51:52,220
line we go through a number of different

00:51:50,150 --> 00:51:53,390
satellites to get there so they're still

00:51:52,220 --> 00:51:55,970
ends up being about a three second delay

00:51:53,390 --> 00:51:57,920
from the ground to to station which

00:51:55,970 --> 00:51:59,660
makes direct teleoperation actually kind

00:51:57,920 --> 00:52:01,069
of difficult but again there are

00:51:59,660 --> 00:52:03,079
astronauts up there we are sending

00:52:01,069 --> 00:52:04,789
fairly soon teleoperation gear so that

00:52:03,079 --> 00:52:05,990
they can begin to do that and get

00:52:04,789 --> 00:52:07,759
comfortable with that and that's the

00:52:05,990 --> 00:52:10,279
room it and while it's still an upper

00:52:07,759 --> 00:52:16,099
body it makes a lot of sense to still to

00:52:10,279 --> 00:52:17,329
still try things like that out mm-hmm so

00:52:16,099 --> 00:52:18,740
what's the bandwidth communication

00:52:17,329 --> 00:52:21,079
between the low level and the high level

00:52:18,740 --> 00:52:23,240
over that ethernet that's a good

00:52:21,079 --> 00:52:25,549
question we're definitely in the the

00:52:23,240 --> 00:52:27,470
preliminary design of that it is all

00:52:25,549 --> 00:52:30,079
ethernet over the wireless network that

00:52:27,470 --> 00:52:31,940
the space station has so two wireless

00:52:30,079 --> 00:52:35,210
network with a you know the same sort of

00:52:31,940 --> 00:52:36,289
thing that we deal with outside I'm

00:52:35,210 --> 00:52:38,779
actually not too sure I mean there's

00:52:36,289 --> 00:52:40,400
different communication issues when

00:52:38,779 --> 00:52:42,349
going to the outside of the space space

00:52:40,400 --> 00:52:44,210
station that maybe one of the other

00:52:42,349 --> 00:52:48,289
flight guys can actually answer a little

00:52:44,210 --> 00:52:54,890
bit better but yeah to be TBD really on

00:52:48,289 --> 00:52:58,250
that okay last question I guess right

00:52:54,890 --> 00:52:59,599
didn't mention that at all um so across

00:52:58,250 --> 00:53:01,970
the board with with Robonaut there's

00:52:59,599 --> 00:53:05,869
there's multiple sources of force

00:53:01,970 --> 00:53:07,700
sensing it's a series elastic robot yes

00:53:05,869 --> 00:53:10,160
what sort of tactile sensors the robot

00:53:07,700 --> 00:53:12,490
heads so it's a series elastic robot so

00:53:10,160 --> 00:53:14,270
we can sense the we can sense the the

00:53:12,490 --> 00:53:16,220
essentially the torques at each of the

00:53:14,270 --> 00:53:17,869
joints we have to absolute position

00:53:16,220 --> 00:53:19,820
sensors on both sides of a torsional

00:53:17,869 --> 00:53:24,200
spring measure the deflection we get the

00:53:19,820 --> 00:53:25,490
torque out of that there are four JR 36

00:53:24,200 --> 00:53:27,740
axis load cells that we have in the

00:53:25,490 --> 00:53:31,490
robot one at the base of the forearm one

00:53:27,740 --> 00:53:33,560
of the base of the arm in the chest and

00:53:31,490 --> 00:53:35,180
then in the hand we have we can measure

00:53:33,560 --> 00:53:37,609
the strain and the tendons so we can get

00:53:35,180 --> 00:53:40,430
some for sensing from the tension there

00:53:37,609 --> 00:53:42,560
and we also have at least the capability

00:53:40,430 --> 00:53:44,930
of putting up to 14 in each hand sixaxis

00:53:42,560 --> 00:53:46,760
strain gauges these are custom devices

00:53:44,930 --> 00:53:50,060
that were designed by our collaborators

00:53:46,760 --> 00:53:51,619
in hrl and yeah 14 in each of the hand

00:53:50,060 --> 00:53:53,660
so basically at the tips and the

00:53:51,619 --> 00:53:56,030
different joints nothing on the palm as

00:53:53,660 --> 00:53:57,140
of yet but that's actually it's fairly

00:53:56,030 --> 00:54:01,490
effective to sense that through the

00:53:57,140 --> 00:54:04,310
springs on the rest of the robot not so

00:54:01,490 --> 00:54:06,350
much very difficult to deal with that

00:54:04,310 --> 00:54:08,119
stuff and the point-to-point control so

00:54:06,350 --> 00:54:09,500
now as we open up that new paradigm

00:54:08,119 --> 00:54:19,310
we're hoping to really take advantage of

00:54:09,500 --> 00:54:21,350
some of that stuff so okay cool sure yep

00:54:19,310 --> 00:54:22,760
so applications to general motors well

00:54:21,350 --> 00:54:24,859
like I said I am actually a General

00:54:22,760 --> 00:54:29,090
Motors employee I work down to NASA but

00:54:24,859 --> 00:54:31,970
but I'm part of GM rd we are interested

00:54:29,090 --> 00:54:33,350
GM is interested in advanced

00:54:31,970 --> 00:54:36,020
manufacturing and what that basically

00:54:33,350 --> 00:54:39,140
means is saying it's very costly to go

00:54:36,020 --> 00:54:42,230
in and program these dangerous robots

00:54:39,140 --> 00:54:43,850
that we have to put in cages to do to do

00:54:42,230 --> 00:54:45,710
all the work that manufacturing robots

00:54:43,850 --> 00:54:47,390
do we want the robots on the floor next

00:54:45,710 --> 00:54:49,220
to humans assisting the humans taking

00:54:47,390 --> 00:54:51,020
over some of the arduous tasks you know

00:54:49,220 --> 00:54:53,720
when when plant workers have to do the

00:54:51,020 --> 00:54:56,600
same physical dexter's task all day long

00:54:53,720 --> 00:54:58,430
it's very organ AMA CLE difficult if we

00:54:56,600 --> 00:54:59,750
can alleviate some of that burden if we

00:54:58,430 --> 00:55:01,220
can even just take over a little bit

00:54:59,750 --> 00:55:02,450
help out with the humans hand them tools

00:55:01,220 --> 00:55:04,359
so that they don't have to you know

00:55:02,450 --> 00:55:07,160
strain their necks and turn around etc

00:55:04,359 --> 00:55:10,700
and then ultimately so that sort of the

00:55:07,160 --> 00:55:12,950
human robot hrhr I side of that but even

00:55:10,700 --> 00:55:15,650
more it's when when things in the

00:55:12,950 --> 00:55:17,540
assembly line change it's very costly to

00:55:15,650 --> 00:55:20,390
redesign new end effectors redesign new

00:55:17,540 --> 00:55:22,340
fixtures for all the parts if we can

00:55:20,390 --> 00:55:24,440
streamline that process have robots that

00:55:22,340 --> 00:55:25,670
are capable of using general tools same

00:55:24,440 --> 00:55:27,349
sort of tools as humans being

00:55:25,670 --> 00:55:29,660
put objects down in locations that

00:55:27,349 --> 00:55:30,799
aren't fixtured then you need a

00:55:29,660 --> 00:55:33,619
significant amount of perceptual

00:55:30,799 --> 00:55:35,000
autonomy autonomous capabilities so

00:55:33,619 --> 00:55:36,440
pushing towards the Robonaut which is

00:55:35,000 --> 00:55:39,260
sort of a general-purpose can do lots of

00:55:36,440 --> 00:55:40,790
things it's feasible to not have to shut

00:55:39,260 --> 00:55:43,220
down the entire assembly line facing

00:55:40,790 --> 00:55:45,680
some new new robots etc you can just

00:55:43,220 --> 00:55:47,420
upload a new skill let the robot and or

00:55:45,680 --> 00:55:51,079
draw upon the robots prior knowledge

00:55:47,420 --> 00:55:53,359
potentially it skills to to quickly ease

00:55:51,079 --> 00:55:54,890
that turnover and so that's that's

00:55:53,359 --> 00:55:56,599
really where we're going with the with

00:55:54,890 --> 00:56:00,130
the sort of the future of advanced

00:55:56,599 --> 00:56:00,130

YouTube URL: https://www.youtube.com/watch?v=HLVwyCfXMwI


