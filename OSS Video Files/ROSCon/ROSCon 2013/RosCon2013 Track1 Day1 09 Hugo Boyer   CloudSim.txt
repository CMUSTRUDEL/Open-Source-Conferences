Title: RosCon2013 Track1 Day1 09 Hugo Boyer   CloudSim
Publication date: 2014-08-31
Playlist: ROSCon 2013
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2013 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/ http://roscon.ros.org/2013/?page_id=14
Captions: 
	00:00:00,000 --> 00:00:05,520
so thank you break it right this one or

00:00:02,730 --> 00:00:07,649
that I'll take this one okay this

00:00:05,520 --> 00:00:10,080
presentation is about clots in cloud sim

00:00:07,649 --> 00:00:15,150
is a system to run the simulation and

00:00:10,080 --> 00:00:17,100
Ross on the cloud after a brief

00:00:15,150 --> 00:00:20,369
introduction I will walk you through

00:00:17,100 --> 00:00:22,080
cloud sin then show you what why we're

00:00:20,369 --> 00:00:24,210
building cloud same for the DARPA

00:00:22,080 --> 00:00:26,640
challenge then take you to the evolution

00:00:24,210 --> 00:00:30,150
how we build it the way we build it so

00:00:26,640 --> 00:00:33,270
far where it's at now then touch on the

00:00:30,150 --> 00:00:39,420
limitations and benefits and the future

00:00:33,270 --> 00:00:41,070
possibilities so the best way to know

00:00:39,420 --> 00:00:44,969
about cloud seem well first of all cloud

00:00:41,070 --> 00:00:47,070
sim is a collaborative effort it's

00:00:44,969 --> 00:00:53,160
basically built by myself and Carlos

00:00:47,070 --> 00:00:55,140
Aguero at OS RF but we also have a Brian

00:00:53,160 --> 00:00:58,850
when he's available he's very helpful on

00:00:55,140 --> 00:01:01,410
the project as well as a stuffy or user

00:00:58,850 --> 00:01:03,780
interaction designer and a bright rebel

00:01:01,410 --> 00:01:09,479
who works in spate war and he's kind of

00:01:03,780 --> 00:01:11,490
our skinning expert and web guy so the

00:01:09,479 --> 00:01:13,650
first step what cloud sim is to log into

00:01:11,490 --> 00:01:16,830
cloud same and it's an easy step because

00:01:13,650 --> 00:01:18,090
you can use your open ID credentials so

00:01:16,830 --> 00:01:24,950
you don't even have to create a new

00:01:18,090 --> 00:01:24,950
password second step is to set up your

00:01:26,960 --> 00:01:35,280
your cloud credentials so cloud sync

00:01:32,240 --> 00:01:37,740
uses amazon and we started off with

00:01:35,280 --> 00:01:40,350
amazon but recently we've rolled in

00:01:37,740 --> 00:01:43,560
another cloud provider a smaller cloud

00:01:40,350 --> 00:01:47,310
provider called softlayer and we may

00:01:43,560 --> 00:01:52,920
even add more perhaps a storm pass in

00:01:47,310 --> 00:01:57,329
the future and basically once you have

00:01:52,920 --> 00:01:59,430
your your credentials in place then you

00:01:57,329 --> 00:02:00,990
can launch what we call constellations

00:01:59,430 --> 00:02:03,119
which are a group of one or more

00:02:00,990 --> 00:02:06,780
machines arranged in a private network

00:02:03,119 --> 00:02:10,410
in the cloud now this steps takes about

00:02:06,780 --> 00:02:13,739
20 minutes on Amazon servers and two

00:02:10,410 --> 00:02:16,650
about an hour on soft layers so it takes

00:02:13,739 --> 00:02:20,280
a while but once you're done you get

00:02:16,650 --> 00:02:24,660
your machine appear you get your

00:02:20,280 --> 00:02:27,870
machines in the UI and you can see the

00:02:24,660 --> 00:02:29,730
latency status of the machines and then

00:02:27,870 --> 00:02:34,050
you can download keys and establish a

00:02:29,730 --> 00:02:38,280
private network directly to them so once

00:02:34,050 --> 00:02:40,620
you get your your system you can then

00:02:38,280 --> 00:02:43,110
set up simulation task you through the

00:02:40,620 --> 00:02:47,030
web interface and basically just set up

00:02:43,110 --> 00:02:49,769
a Ross package or a rushed launch file

00:02:47,030 --> 00:02:53,340
there are more options here for the VRC

00:02:49,769 --> 00:02:54,900
you want to be able to maybe a set an

00:02:53,340 --> 00:02:58,230
artificial latency for your

00:02:54,900 --> 00:03:01,140
communications and maybe a limit to the

00:02:58,230 --> 00:03:03,360
bandwidth once it's all done you can

00:03:01,140 --> 00:03:05,730
press start and then you can connect

00:03:03,360 --> 00:03:09,209
from your local machine to the machine

00:03:05,730 --> 00:03:11,190
living in the cloud this is a one of an

00:03:09,209 --> 00:03:15,300
image from the VR one of the VRC

00:03:11,190 --> 00:03:18,720
qualification arenas and that particular

00:03:15,300 --> 00:03:24,690
robot lives in Virginia it was launched

00:03:18,720 --> 00:03:26,909
on the Amazon Cloud from California with

00:03:24,690 --> 00:03:32,580
about a hundred millisecond latency

00:03:26,909 --> 00:03:38,340
round trip and it runs at about point 75

00:03:32,580 --> 00:03:39,959
real time factor so why do we build

00:03:38,340 --> 00:03:42,989
cloud same Google Cloud sim for the

00:03:39,959 --> 00:03:45,299
DARPA Robotics Challenge DARPA has a

00:03:42,989 --> 00:03:46,680
vision that eventually robot will

00:03:45,299 --> 00:03:49,019
replace human in dangerous situations

00:03:46,680 --> 00:03:51,930
like the Fukushima disasters and will

00:03:49,019 --> 00:03:54,390
actually be useful there in order to

00:03:51,930 --> 00:03:57,480
accelerate the process they've designed

00:03:54,390 --> 00:04:00,810
a two-phase challenge which will involve

00:03:57,480 --> 00:04:03,510
real walking humanoid robots now we're

00:04:00,810 --> 00:04:05,939
right about at the middle of phase one

00:04:03,510 --> 00:04:08,459
and there are about a hundred teams that

00:04:05,939 --> 00:04:13,799
have registered as team without robots

00:04:08,459 --> 00:04:15,530
and we're going to use cloud sim and the

00:04:13,799 --> 00:04:19,370
gazebo simulator 2

00:04:15,530 --> 00:04:24,260
to to basically find out which of the

00:04:19,370 --> 00:04:29,570
teams will get a money to partake in the

00:04:24,260 --> 00:04:33,139
next challenge and one of the six Atlas

00:04:29,570 --> 00:04:37,700
robots by bus and dynamics this is going

00:04:33,139 --> 00:04:40,480
to happen by the end of the June this is

00:04:37,700 --> 00:04:43,040
the Atlas robot and the sensor head and

00:04:40,480 --> 00:04:46,340
on the right you can see what it looks

00:04:43,040 --> 00:04:48,130
like in the gazebo simulator we have

00:04:46,340 --> 00:04:55,340
different tasks for manipulation

00:04:48,130 --> 00:04:57,650
dexterity mobility and basically what

00:04:55,340 --> 00:05:06,440
DARPA is trying to do is a kind of Map

00:04:57,650 --> 00:05:09,020
Reduce of the best teams and by the end

00:05:06,440 --> 00:05:12,080
of this month the cloud seems should

00:05:09,020 --> 00:05:15,080
launch about hundreds of servers in the

00:05:12,080 --> 00:05:18,229
cloud to control simulations the teams

00:05:15,080 --> 00:05:20,750
will have those for almost a month and

00:05:18,229 --> 00:05:23,870
during the last week of june there will

00:05:20,750 --> 00:05:26,450
be each have to go through 15 tasks in

00:05:23,870 --> 00:05:29,570
three days and we'll measure their

00:05:26,450 --> 00:05:33,740
performance based on the time the task

00:05:29,570 --> 00:05:36,380
completion and also bandwidth

00:05:33,740 --> 00:05:38,990
utilization because in normal disaster

00:05:36,380 --> 00:05:42,500
simulation about disaster scenarios i

00:05:38,990 --> 00:05:47,630
should say we expect bandwidth to be

00:05:42,500 --> 00:05:51,229
limited so the contest itself would

00:05:47,630 --> 00:05:53,060
probably involve operators running in a

00:05:51,229 --> 00:05:56,900
building close to the site with a header

00:05:53,060 --> 00:05:59,900
and the bandwidth is going to be

00:05:56,900 --> 00:06:03,950
artificially controlled to a black box

00:05:59,900 --> 00:06:05,810
so to recreate this environment in cloud

00:06:03,950 --> 00:06:08,260
seeing our constellation has four

00:06:05,810 --> 00:06:12,229
machines the router which does the

00:06:08,260 --> 00:06:14,330
bandwidth control in the end inject the

00:06:12,229 --> 00:06:17,360
ultra casual latency and then we have

00:06:14,330 --> 00:06:19,729
three machines which are three large

00:06:17,360 --> 00:06:23,090
servers that run on a 10 gigabit

00:06:19,729 --> 00:06:24,310
backbone one of those servers hosts the

00:06:23,090 --> 00:06:26,230
simulator

00:06:24,310 --> 00:06:33,100
and this one is off limit to the teams

00:06:26,230 --> 00:06:34,810
it has a test locket and GPU and the

00:06:33,100 --> 00:06:36,550
other two servers are for the

00:06:34,810 --> 00:06:38,980
contestants they can put whatever code

00:06:36,550 --> 00:06:43,680
they want one of them has a GPU the

00:06:38,980 --> 00:06:47,860
other one has extra memory and SSD drive

00:06:43,680 --> 00:06:51,490
so how did we get to where we are now so

00:06:47,860 --> 00:06:54,640
when I join us RF in September Brian

00:06:51,490 --> 00:06:57,180
already had a prototype that was able to

00:06:54,640 --> 00:07:01,980
launch a machine on amazon services and

00:06:57,180 --> 00:07:04,600
set up a ex session install gazebo and

00:07:01,980 --> 00:07:10,890
this was all behind our web server that

00:07:04,600 --> 00:07:13,240
you could log into open ID so we've well

00:07:10,890 --> 00:07:18,220
during those times I was basically

00:07:13,240 --> 00:07:21,100
working on on Cloud sim on my own and I

00:07:18,220 --> 00:07:25,810
rewrote the web interface to add a REST

00:07:21,100 --> 00:07:28,420
API and added a Redis back-end to do the

00:07:25,810 --> 00:07:30,370
communication between the web server and

00:07:28,420 --> 00:07:33,850
the part that controls the machines and

00:07:30,370 --> 00:07:39,100
i added a push notification service to

00:07:33,850 --> 00:07:40,900
get demand a while to get updates from

00:07:39,100 --> 00:07:42,880
the different machines like the latency

00:07:40,900 --> 00:07:45,580
and stuff like that this turned out to

00:07:42,880 --> 00:07:48,730
be a very bad decision because the push

00:07:45,580 --> 00:07:51,670
notification system I used was actually

00:07:48,730 --> 00:07:56,440
not very good on Apache and we reverted

00:07:51,670 --> 00:07:58,390
to a polling scheme since then so by

00:07:56,440 --> 00:08:01,270
februari we needed to implement the

00:07:58,390 --> 00:08:04,870
multi machines at first we decided to

00:08:01,270 --> 00:08:09,160
just change private networks between

00:08:04,870 --> 00:08:13,690
machines so for example when you login

00:08:09,160 --> 00:08:16,980
to Europe to your constellation we have

00:08:13,690 --> 00:08:21,010
you log into an openvpn private network

00:08:16,980 --> 00:08:23,020
on the other side when you have multiple

00:08:21,010 --> 00:08:26,110
machine a field computer that then

00:08:23,020 --> 00:08:29,470
connects to a simulation computer we

00:08:26,110 --> 00:08:31,990
could change multiple virtual network

00:08:29,470 --> 00:08:34,720
but that becomes a problem when we have

00:08:31,990 --> 00:08:35,409
three four or five machines so we had to

00:08:34,720 --> 00:08:38,319
use

00:08:35,409 --> 00:08:42,819
well we decided to use Amazon's virtual

00:08:38,319 --> 00:08:45,399
land system and the virtual land allows

00:08:42,819 --> 00:08:48,190
us to have a private network for all our

00:08:45,399 --> 00:08:50,800
machines inside a consolation but it it

00:08:48,190 --> 00:08:54,339
is significantly different from the

00:08:50,800 --> 00:08:57,329
normal AWS system so i decided to

00:08:54,339 --> 00:09:01,949
rewrite the back end using instead of

00:08:57,329 --> 00:09:07,389
single threads per machine use a a

00:09:01,949 --> 00:09:09,790
different system where basically a

00:09:07,389 --> 00:09:11,889
single threaded system where you could

00:09:09,790 --> 00:09:15,279
plug it where consolations became the

00:09:11,889 --> 00:09:19,000
plugin rather than machines being a unit

00:09:15,279 --> 00:09:21,339
of composition so if you want to have a

00:09:19,000 --> 00:09:23,709
new plug-in a new constellation in cloud

00:09:21,339 --> 00:09:26,350
sim you'd need to provide a python

00:09:23,709 --> 00:09:27,670
script that provides a way to launch the

00:09:26,350 --> 00:09:30,490
machine or what you terminate your

00:09:27,670 --> 00:09:35,980
machines and a way to monitor them and

00:09:30,490 --> 00:09:39,670
also start and stop simulation tasks one

00:09:35,980 --> 00:09:42,850
of the interesting thing about working

00:09:39,670 --> 00:09:46,709
on the only cloud infrastructure is that

00:09:42,850 --> 00:09:49,870
machines take time to do boot and

00:09:46,709 --> 00:09:52,600
actually on Amazon bringing a machine

00:09:49,870 --> 00:09:55,300
app takes about 20 minutes and that

00:09:52,600 --> 00:09:57,730
really impacts your programming ability

00:09:55,300 --> 00:10:00,630
because you only have that many cycles

00:09:57,730 --> 00:10:06,850
during a day so it's a good exercise to

00:10:00,630 --> 00:10:09,970
change your habits there so but not all

00:10:06,850 --> 00:10:13,899
is wrong and in February steffi our UX

00:10:09,970 --> 00:10:16,959
designer made a little contest she

00:10:13,899 --> 00:10:20,410
created a few logos for us and cloud sim

00:10:16,959 --> 00:10:22,779
had its logo by that time we were

00:10:20,410 --> 00:10:26,110
starting to actually use the machines on

00:10:22,779 --> 00:10:29,949
the Amazon Cloud and we were noticing

00:10:26,110 --> 00:10:32,230
strange behaviors we weren't getting the

00:10:29,949 --> 00:10:35,949
band with the full 10 gigabit bed with

00:10:32,230 --> 00:10:39,459
between our machines and also the change

00:10:35,949 --> 00:10:41,920
from the separate machines to the

00:10:39,459 --> 00:10:43,800
virtual land made it so that we were

00:10:41,920 --> 00:10:47,310
using machine from a

00:10:43,800 --> 00:10:49,920
pool that was very limited in size and

00:10:47,310 --> 00:10:51,420
it was the only place on all the Amazon

00:10:49,920 --> 00:10:54,110
data centers where we could actually get

00:10:51,420 --> 00:10:56,610
virtual lands and these GPU machines and

00:10:54,110 --> 00:10:58,980
we started getting capacity issues

00:10:56,610 --> 00:11:03,839
meaning that they had too many clients

00:10:58,980 --> 00:11:09,500
for the number of machines they had also

00:11:03,839 --> 00:11:12,660
we were chasing a weird issues while

00:11:09,500 --> 00:11:15,269
making loops control loops from

00:11:12,660 --> 00:11:17,660
different machines so you have the

00:11:15,269 --> 00:11:20,790
simulation running the the robot

00:11:17,660 --> 00:11:22,740
controllers but you also have the field

00:11:20,790 --> 00:11:25,230
computers that run the team's

00:11:22,740 --> 00:11:29,700
controllers and they try to run at a

00:11:25,230 --> 00:11:31,890
very high frequency loop and what we see

00:11:29,700 --> 00:11:35,550
here on the left is that on a normal

00:11:31,890 --> 00:11:37,290
machine this is just as this is running

00:11:35,550 --> 00:11:39,660
a small program that just sleeps four

00:11:37,290 --> 00:11:42,120
milliseconds and then measure the time

00:11:39,660 --> 00:11:44,339
it took since the last sleep and we see

00:11:42,120 --> 00:11:48,149
that normal sleeps are normally around

00:11:44,339 --> 00:11:50,720
1.1 milliseconds and from the outliers

00:11:48,149 --> 00:11:54,540
are in the 1.5 1.6 with millisecond

00:11:50,720 --> 00:11:59,730
range however on the amazon machines we

00:11:54,540 --> 00:12:02,910
were getting as out layers that were all

00:11:59,730 --> 00:12:04,860
the way up to 300 milliseconds and when

00:12:02,910 --> 00:12:08,880
you have two machines trying to do a

00:12:04,860 --> 00:12:15,899
very fast loop this is a very huge

00:12:08,880 --> 00:12:18,260
problem so we decided that we should go

00:12:15,899 --> 00:12:21,990
for a different provider for the VRC and

00:12:18,260 --> 00:12:25,410
we contacted softlayer soft i already

00:12:21,990 --> 00:12:28,800
had given us machines when we have we're

00:12:25,410 --> 00:12:31,339
having capacity issues and basically the

00:12:28,800 --> 00:12:33,630
machines that softlayer provide are

00:12:31,339 --> 00:12:38,190
basically newer than the Amazon machine

00:12:33,630 --> 00:12:41,300
they have recent and Vidya processors

00:12:38,190 --> 00:12:44,790
and some of the fastest Intel Xeon

00:12:41,300 --> 00:12:49,440
available also there are absolutely no

00:12:44,790 --> 00:12:51,269
hypervisor on these machines and which

00:12:49,440 --> 00:12:54,100
is probably why we were getting these

00:12:51,269 --> 00:12:56,920
issues these hiccups in the first place

00:12:54,100 --> 00:12:59,829
unfortunately the SoftLayer machines are

00:12:56,920 --> 00:13:01,209
month to month unlike the amazon

00:12:59,829 --> 00:13:04,750
machines where you can lease them for

00:13:01,209 --> 00:13:09,699
had in on the an hourly basis you need

00:13:04,750 --> 00:13:11,980
to commit for four months also the

00:13:09,699 --> 00:13:14,319
software machine don't take 20 minutes

00:13:11,980 --> 00:13:17,709
to load up they take an hour which is

00:13:14,319 --> 00:13:22,829
even worse and also we had the several

00:13:17,709 --> 00:13:26,949
problems related mostly to Ubuntu the

00:13:22,829 --> 00:13:31,240
motherboard and some of the ethernet

00:13:26,949 --> 00:13:36,100
cards they're using over there so

00:13:31,240 --> 00:13:41,350
where's clouds him now well cloud seem

00:13:36,100 --> 00:13:44,139
itself is a the architecture itself is

00:13:41,350 --> 00:13:47,649
kind of stable now we have a web server

00:13:44,139 --> 00:13:49,509
that talks to the client and a all the

00:13:47,649 --> 00:13:51,519
control for machines bringing up

00:13:49,509 --> 00:13:53,889
machines measuring latency and

00:13:51,519 --> 00:13:55,660
everything is done through a demon and

00:13:53,889 --> 00:13:57,490
the communication between the demon and

00:13:55,660 --> 00:13:59,889
the web server process is done through

00:13:57,490 --> 00:14:05,199
regice regice is also used as our

00:13:59,889 --> 00:14:07,660
back-end store and the communication

00:14:05,199 --> 00:14:10,680
with machines themselves is either

00:14:07,660 --> 00:14:13,630
through the cloud providers of

00:14:10,680 --> 00:14:15,759
proprietary interface to load them up or

00:14:13,630 --> 00:14:17,860
to control the firewalls or it's true

00:14:15,759 --> 00:14:25,089
SSH once the machines are up and

00:14:17,860 --> 00:14:27,160
available so limitations so I'm very

00:14:25,089 --> 00:14:29,949
interested in seeing cloud robotics as a

00:14:27,160 --> 00:14:33,519
as something that could take off and

00:14:29,949 --> 00:14:37,480
really be important for the robotics

00:14:33,519 --> 00:14:39,279
feel but there's always the problem of

00:14:37,480 --> 00:14:42,040
there's always the network between you

00:14:39,279 --> 00:14:44,800
and the cloud and latency is one of the

00:14:42,040 --> 00:14:48,490
major issues when you're dealing with

00:14:44,800 --> 00:14:52,899
the cloud robotics so if you intend to

00:14:48,490 --> 00:14:54,610
do control loops on your machine you

00:14:52,899 --> 00:14:57,009
need to connect to a data center that's

00:14:54,610 --> 00:14:59,089
really close by and make sure you have a

00:14:57,009 --> 00:15:02,429
good pipeline in between

00:14:59,089 --> 00:15:04,769
the other problem is cost so i guess

00:15:02,429 --> 00:15:07,169
normally in labs people already have

00:15:04,769 --> 00:15:10,259
computers or they're paid for and they

00:15:07,169 --> 00:15:12,509
seem to be free once you start using the

00:15:10,259 --> 00:15:16,439
cloud you're paying on an either hourly

00:15:12,509 --> 00:15:20,910
or monthly basis and this could this

00:15:16,439 --> 00:15:22,919
could be expensive also the cloud

00:15:20,910 --> 00:15:24,929
doesn't really have a lot of GPUs

00:15:22,919 --> 00:15:27,809
available amazon is pretty much the only

00:15:24,929 --> 00:15:33,869
game in town if you want to rent a GPU

00:15:27,809 --> 00:15:35,639
by the hour others are coming and we see

00:15:33,869 --> 00:15:39,209
that Nvidia they're preparing products

00:15:35,639 --> 00:15:43,249
for game game streaming so this should

00:15:39,209 --> 00:15:45,839
be useful for robotics as well and

00:15:43,249 --> 00:15:48,989
hopefully in the future we'll see cheap

00:15:45,839 --> 00:15:52,619
GPUs available that maybe fifty cents an

00:15:48,989 --> 00:15:56,989
hour and maybe by the end of this year

00:15:52,619 --> 00:15:59,699
or next one so what are the benefits

00:15:56,989 --> 00:16:02,459
well if you've ever had problems

00:15:59,699 --> 00:16:07,289
installing Ross or gazebo or anything

00:16:02,459 --> 00:16:09,949
like that I think it's it's great to be

00:16:07,289 --> 00:16:13,799
able to leverage the work of others do

00:16:09,949 --> 00:16:18,539
to get a a working system in a very

00:16:13,799 --> 00:16:20,459
little time I hope to see a lot of more

00:16:18,539 --> 00:16:25,429
flavors of what's available right now so

00:16:20,459 --> 00:16:28,559
everything is pretty much DRC centric

00:16:25,429 --> 00:16:30,809
but I will it would be possible to have

00:16:28,559 --> 00:16:34,230
a lot of different constellations

00:16:30,809 --> 00:16:37,019
supported in the near future also if you

00:16:34,230 --> 00:16:39,509
want to do concurrent to work let's say

00:16:37,019 --> 00:16:42,539
you have a multiple graph that you want

00:16:39,509 --> 00:16:45,589
to try you can try a thousand grasp or

00:16:42,539 --> 00:16:48,929
ten grasp in the same amount of time

00:16:45,589 --> 00:16:51,779
also having a system that works in a

00:16:48,929 --> 00:16:54,029
cloud makes things simpler and then you

00:16:51,779 --> 00:16:58,649
can connect with a simple notebook

00:16:54,029 --> 00:17:00,359
different OS and cetera it's also a

00:16:58,649 --> 00:17:03,389
great tool for sharing because once your

00:17:00,359 --> 00:17:04,610
data is on the cloud then there's no

00:17:03,389 --> 00:17:07,400
little

00:17:04,610 --> 00:17:14,660
the cost to sharing with other people on

00:17:07,400 --> 00:17:18,290
the cloud is very little so I would like

00:17:14,660 --> 00:17:21,250
to see cloud same as maybe a platform

00:17:18,290 --> 00:17:24,650
where people could store simulations and

00:17:21,250 --> 00:17:31,280
the work they've done you don't have to

00:17:24,650 --> 00:17:34,250
write a wiki instructions to set up all

00:17:31,280 --> 00:17:36,650
your required software you can just

00:17:34,250 --> 00:17:38,750
freeze it in the cloud provide a link

00:17:36,650 --> 00:17:43,820
and then have somebody else see your

00:17:38,750 --> 00:17:48,830
work and and maybe take it a step

00:17:43,820 --> 00:17:51,860
further also well right now cloud sim is

00:17:48,830 --> 00:17:54,559
very much for real-time simulation with

00:17:51,860 --> 00:17:56,720
a user in the loop but I see that

00:17:54,559 --> 00:18:00,200
automatic testing something like a

00:17:56,720 --> 00:18:05,360
Jenkins specific for robotics could be

00:18:00,200 --> 00:18:09,410
very useful also well I guess because of

00:18:05,360 --> 00:18:14,570
its contest nature cloud soon would be a

00:18:09,410 --> 00:18:16,669
good fit in the education sector I could

00:18:14,570 --> 00:18:20,630
see professor wanting to enter their

00:18:16,669 --> 00:18:28,090
student by creating a contest in a

00:18:20,630 --> 00:18:31,309
simple way also well as i said earlier

00:18:28,090 --> 00:18:36,530
connect to existing data set so if we

00:18:31,309 --> 00:18:40,790
have grasping or objects databases or

00:18:36,530 --> 00:18:43,970
benchmarks in different areas it would

00:18:40,790 --> 00:18:48,010
be a great tool to have everything in

00:18:43,970 --> 00:18:51,140
the cloud and easily accessible finally

00:18:48,010 --> 00:18:55,730
since we're making robotic software a

00:18:51,140 --> 00:18:59,179
tool to deploy robotic software and its

00:18:55,730 --> 00:19:01,370
target is the cloud we should use the

00:18:59,179 --> 00:19:03,260
same tool to target it to real hardware

00:19:01,370 --> 00:19:12,650
eventually and I think that would be an

00:19:03,260 --> 00:19:15,890
interesting thing to do explore so cloud

00:19:12,650 --> 00:19:17,850
seed well was created for the DARPA

00:19:15,890 --> 00:19:20,200
Robotics Challenge

00:19:17,850 --> 00:19:24,210
we hope it's going to contribute to the

00:19:20,200 --> 00:19:27,580
success of gazebo and Ross in general

00:19:24,210 --> 00:19:29,830
I'd like to see it foster new workflows

00:19:27,580 --> 00:19:34,630
in robotic simulations things that we've

00:19:29,830 --> 00:19:37,420
not seen before and like most software

00:19:34,630 --> 00:19:43,660
at OS RF it's open source with a bsd

00:19:37,420 --> 00:19:47,050
license so we'd like to see it can we

00:19:43,660 --> 00:19:51,790
I'd like to see it as a kind of a the

00:19:47,050 --> 00:19:56,460
equivalent of Android well as androids

00:19:51,790 --> 00:19:59,500
to linux and i would like you guys to

00:19:56,460 --> 00:20:03,810
help make the app store full of

00:19:59,500 --> 00:20:03,810

YouTube URL: https://www.youtube.com/watch?v=HtWEbG6GgCo


