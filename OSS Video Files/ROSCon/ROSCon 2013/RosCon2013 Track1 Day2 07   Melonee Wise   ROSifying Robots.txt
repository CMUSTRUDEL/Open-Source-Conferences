Title: RosCon2013 Track1 Day2 07   Melonee Wise   ROSifying Robots
Publication date: 2014-09-02
Playlist: ROSCon 2013
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2013 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License https://creativecommons.org/licenses/by-nc-nd/3.0/
Captions: 
	00:00:00,000 --> 00:00:06,839
so I've been working with Ross for the

00:00:04,890 --> 00:00:08,220
last five or six years now I was there

00:00:06,839 --> 00:00:11,429
at the beginning I always at Willow

00:00:08,220 --> 00:00:13,940
Garage at the very beginning and I've

00:00:11,429 --> 00:00:16,949
put Ross on a lot of different robots

00:00:13,940 --> 00:00:20,369
the pr2 took up a lot of my time but i

00:00:16,949 --> 00:00:23,400
also have written ross drivers for small

00:00:20,369 --> 00:00:26,369
robots and it makes them very good for

00:00:23,400 --> 00:00:29,580
talking about rasa flying robots so why

00:00:26,369 --> 00:00:31,380
would you want to Ross a fire robot Ross

00:00:29,580 --> 00:00:34,250
provides a lot of tools and capability

00:00:31,380 --> 00:00:37,800
for you visualization introspection

00:00:34,250 --> 00:00:39,899
configurability standards sensor drivers

00:00:37,800 --> 00:00:44,670
and Kyle of laps like move it like we

00:00:39,899 --> 00:00:46,410
saw at the keynote yesterday so where

00:00:44,670 --> 00:00:49,200
would you start when you're us flying

00:00:46,410 --> 00:00:52,920
robot I would really recommend coloring

00:00:49,200 --> 00:00:55,920
by numbers copying is kind of the best

00:00:52,920 --> 00:00:58,890
form of flattery so basically go to ross

00:00:55,920 --> 00:01:00,780
org it's the wiki and look at the robots

00:00:58,890 --> 00:01:02,730
and pick a robot that's kind of close to

00:01:00,780 --> 00:01:06,240
yours and look at the package structure

00:01:02,730 --> 00:01:08,189
the different drivers the UDF models

00:01:06,240 --> 00:01:11,729
that they're using things like that and

00:01:08,189 --> 00:01:13,979
kind of follow their pattern because

00:01:11,729 --> 00:01:19,590
it's going to do you a lot and save you

00:01:13,979 --> 00:01:21,960
a lot of time so this is what the nodes

00:01:19,590 --> 00:01:25,409
look like for spiro spero is a very very

00:01:21,960 --> 00:01:29,130
simple robot all you need is the driver

00:01:25,409 --> 00:01:30,960
and ross wrapper around it a year DF

00:01:29,130 --> 00:01:34,799
which is pretty simple because it's bald

00:01:30,960 --> 00:01:38,070
and you know a couple other tools were

00:01:34,799 --> 00:01:42,270
also robot Posey KF and diagnostic

00:01:38,070 --> 00:01:45,750
aggregator and robot State publisher so

00:01:42,270 --> 00:01:47,189
before you start though with even

00:01:45,750 --> 00:01:49,229
something as simple as a sphere oh

00:01:47,189 --> 00:01:51,360
there's lots of drivers in the Ross

00:01:49,229 --> 00:01:53,790
ecosystem you should really google it

00:01:51,360 --> 00:01:56,880
first your robot might already exist so

00:01:53,790 --> 00:02:00,299
you can save yourself some time second

00:01:56,880 --> 00:02:01,890
write a standalone driver a lot of

00:02:00,299 --> 00:02:04,110
people they jump into ross and they're

00:02:01,890 --> 00:02:06,000
like i am going to ross this thing up

00:02:04,110 --> 00:02:07,390
and you know what you're not doing

00:02:06,000 --> 00:02:09,890
anyone a favor

00:02:07,390 --> 00:02:12,200
because you actually want to create

00:02:09,890 --> 00:02:14,180
barriers between your different Ross

00:02:12,200 --> 00:02:17,120
nodes so that your dependency tree

00:02:14,180 --> 00:02:18,590
doesn't become monstrous you can end up

00:02:17,120 --> 00:02:20,810
with a dependency tree where you have to

00:02:18,590 --> 00:02:22,310
download all of Ross to do anything with

00:02:20,810 --> 00:02:27,770
your robot even if it's something like a

00:02:22,310 --> 00:02:30,290
sparrow and then don't copy okay there I

00:02:27,770 --> 00:02:33,950
seriously think there's about 200 copies

00:02:30,290 --> 00:02:36,830
of joy dot pie in Ross I mean it's crazy

00:02:33,950 --> 00:02:39,770
because all you're doing is making more

00:02:36,830 --> 00:02:41,180
work for yourself it doesn't matter

00:02:39,770 --> 00:02:44,420
because it's all bs d if you copy it

00:02:41,180 --> 00:02:46,489
great but the thing is is when someone

00:02:44,420 --> 00:02:48,470
that patches that code or improves it

00:02:46,489 --> 00:02:50,810
you're not getting the benefits of it

00:02:48,470 --> 00:02:52,760
and then you have to go and imp a chit

00:02:50,810 --> 00:02:55,340
and if you look at Ross answers there's

00:02:52,760 --> 00:02:57,410
a lot of that people copy code and then

00:02:55,340 --> 00:02:59,209
someone asks a question and it's like oh

00:02:57,410 --> 00:03:03,170
but that was fixed in this other version

00:02:59,209 --> 00:03:05,150
of the driver don't do it ok so the

00:03:03,170 --> 00:03:06,950
basics probably the first thing you want

00:03:05,150 --> 00:03:10,220
to do when you are Ross buying a robot

00:03:06,950 --> 00:03:13,040
is good to your DF it's fun to your

00:03:10,220 --> 00:03:14,420
about moving around things like that if

00:03:13,040 --> 00:03:16,940
you have a solidworks model of your

00:03:14,420 --> 00:03:19,660
robot i would definitely suggest using

00:03:16,940 --> 00:03:21,890
your DF exporter it's an awesome tool

00:03:19,660 --> 00:03:25,459
Stephens giving a talk at three-thirty

00:03:21,890 --> 00:03:30,320
and he's also got a bird of feather soon

00:03:25,459 --> 00:03:33,320
so go look for it attend it oh it got

00:03:30,320 --> 00:03:36,230
cut off joint state publisher is really

00:03:33,320 --> 00:03:38,239
an awesome tool for debugging your DFS

00:03:36,230 --> 00:03:39,769
it basically lets you fake all the

00:03:38,239 --> 00:03:41,239
joints of your robot so you can like

00:03:39,769 --> 00:03:43,160
move it around to get a sense for what's

00:03:41,239 --> 00:03:45,170
going on without having to have your

00:03:43,160 --> 00:03:48,350
hardware up and running which sometimes

00:03:45,170 --> 00:03:50,630
can be a bear if you don't already know

00:03:48,350 --> 00:03:52,640
about it robot state publisher is the

00:03:50,630 --> 00:03:56,110
thing that helps you do it almost

00:03:52,640 --> 00:03:58,790
everything in terms of TF and Ross so

00:03:56,110 --> 00:04:01,549
basically brought state publisher takes

00:03:58,790 --> 00:04:03,739
in your yard EF and then generates your

00:04:01,549 --> 00:04:05,690
TF frames for you and then all you have

00:04:03,739 --> 00:04:09,410
to do from your robot driver is

00:04:05,690 --> 00:04:13,790
published going States there's a message

00:04:09,410 --> 00:04:15,680
in Ross so you can look that up so when

00:04:13,790 --> 00:04:18,190
it doesn't work this is one of the great

00:04:15,680 --> 00:04:21,519
things about Ross is there's tons of

00:04:18,190 --> 00:04:25,230
spection you should use the tools that

00:04:21,519 --> 00:04:29,950
are provided they're really great Ross

00:04:25,230 --> 00:04:31,840
our cutie graphs REM struggling because

00:04:29,950 --> 00:04:34,000
everything changed names in the last

00:04:31,840 --> 00:04:36,910
couple of revisions it used to be our X

00:04:34,000 --> 00:04:38,290
graph is really good for looking at what

00:04:36,910 --> 00:04:40,240
nodes are running in your system and

00:04:38,290 --> 00:04:41,740
whether or not they're connected a lot

00:04:40,240 --> 00:04:44,080
of times what happens when you're

00:04:41,740 --> 00:04:45,850
starting to rasa fire robot is you miss

00:04:44,080 --> 00:04:47,560
type the topic name and then your

00:04:45,850 --> 00:04:49,660
subscriber and publisher don't connect

00:04:47,560 --> 00:04:53,980
and a really quick way to debug that is

00:04:49,660 --> 00:04:57,070
by using our QT graph another thing that

00:04:53,980 --> 00:05:00,640
commonly happens is TF frame problems

00:04:57,070 --> 00:05:02,440
either miss naming or confusion or

00:05:00,640 --> 00:05:04,950
they're not getting published TF has a

00:05:02,440 --> 00:05:07,930
lot of great tools for understanding

00:05:04,950 --> 00:05:10,810
what's going wrong with your TF frames

00:05:07,930 --> 00:05:14,680
and your model and then finally there's

00:05:10,810 --> 00:05:16,830
Ross where's the fire or well as as you

00:05:14,680 --> 00:05:19,930
may commonly notice something else

00:05:16,830 --> 00:05:23,350
rostov ETF is a great tool it's really

00:05:19,930 --> 00:05:25,240
good for helping when you when you're

00:05:23,350 --> 00:05:28,360
having network connectivity issues or

00:05:25,240 --> 00:05:31,140
you may have started a master on a

00:05:28,360 --> 00:05:36,490
different part thanks to Morgan it's a

00:05:31,140 --> 00:05:39,100
palindrome so 11 3 11 but in case you

00:05:36,490 --> 00:05:44,620
want to go for something else like 4 42

00:05:39,100 --> 00:05:46,390
44 that's fine so as your robots get

00:05:44,620 --> 00:05:48,370
more and more complicated you start

00:05:46,390 --> 00:05:50,830
getting more and more nodes this is the

00:05:48,370 --> 00:05:53,169
turtlebot so if you if you remember the

00:05:50,830 --> 00:05:55,660
Sphero basically all I added was the

00:05:53,169 --> 00:05:57,970
open end I a lot of robots follow the

00:05:55,660 --> 00:05:59,760
same pattern and architecture for their

00:05:57,970 --> 00:06:04,600
note layouts in their node connections

00:05:59,760 --> 00:06:06,430
and so you'll see that a lot of blog

00:06:04,600 --> 00:06:08,919
robots should look like this or I hope

00:06:06,430 --> 00:06:10,840
they'll look like this it it's good when

00:06:08,919 --> 00:06:16,900
they are kind of the same pier to kind

00:06:10,840 --> 00:06:18,340
of looks like this so so when things

00:06:16,900 --> 00:06:21,070
start going wrong in a robot is to get

00:06:18,340 --> 00:06:24,280
more complex you should use diagnostics

00:06:21,070 --> 00:06:25,750
and you should use the robot monitor so

00:06:24,280 --> 00:06:27,270
threes I'm talking about the robot

00:06:25,750 --> 00:06:30,690
monitor is I have talked to

00:06:27,270 --> 00:06:32,400
least 10 people using their robots and

00:06:30,690 --> 00:06:34,530
they're like oh I really wish I had this

00:06:32,400 --> 00:06:36,720
way of looking at the Diagnostics coming

00:06:34,530 --> 00:06:37,890
out of my robot I'm like oh you should

00:06:36,720 --> 00:06:40,830
use your about monitor and they're like

00:06:37,890 --> 00:06:44,160
what never heard of it so robot monitors

00:06:40,830 --> 00:06:46,770
really cool after you you use the

00:06:44,160 --> 00:06:48,870
diagnostic aggregator to basically use a

00:06:46,770 --> 00:06:52,170
configuration file to make your robot

00:06:48,870 --> 00:06:54,690
monitor look pretty basically it creates

00:06:52,170 --> 00:06:59,580
dropdowns and other I guess

00:06:54,690 --> 00:07:00,840
classifications for Diagnostics if if

00:06:59,580 --> 00:07:05,520
you have questions about that ask me

00:07:00,840 --> 00:07:08,250
later another thing when starting to

00:07:05,520 --> 00:07:11,730
rasa fire robot know the standards there

00:07:08,250 --> 00:07:14,490
are reps they tell you how the unit

00:07:11,730 --> 00:07:17,880
standards are what the stairs are for

00:07:14,490 --> 00:07:20,370
coordinate frames driver name spacing

00:07:17,880 --> 00:07:22,140
things like that they're important and I

00:07:20,370 --> 00:07:23,670
don't know how many times I've seen this

00:07:22,140 --> 00:07:25,560
question on Ross answers it's really

00:07:23,670 --> 00:07:28,200
hilarious it's what are the units of

00:07:25,560 --> 00:07:30,120
measure and Ross and it's amazing that

00:07:28,200 --> 00:07:32,610
very few people find the wraps there are

00:07:30,120 --> 00:07:34,380
wraps and they will help you to do

00:07:32,610 --> 00:07:38,810
things properly in Ross and so that

00:07:34,380 --> 00:07:41,700
you're compatible and don't get creative

00:07:38,810 --> 00:07:44,280
these are standard topic names and

00:07:41,700 --> 00:07:47,760
messages that are used in ross and the

00:07:44,280 --> 00:07:50,310
point of ross is to be configurable

00:07:47,760 --> 00:07:52,710
extendable but it's also meant to be

00:07:50,310 --> 00:07:54,420
compatible when you when you make robots

00:07:52,710 --> 00:07:56,490
you want to be able to share the code

00:07:54,420 --> 00:07:59,070
and if you start using creative names

00:07:56,490 --> 00:08:01,110
like a geometric frame or something

00:07:59,070 --> 00:08:04,200
weird like that you're not leveraging

00:08:01,110 --> 00:08:09,030
the compatibility with other people's

00:08:04,200 --> 00:08:12,140
software so I've talked a lot about

00:08:09,030 --> 00:08:15,710
mobile bases and in the turtle bot

00:08:12,140 --> 00:08:18,450
there's there's something about arms and

00:08:15,710 --> 00:08:21,720
the thing is is the big thing you need

00:08:18,450 --> 00:08:24,510
to expose for arms is a joint trajectory

00:08:21,720 --> 00:08:26,340
action basically so in the turtlebot we

00:08:24,510 --> 00:08:28,260
used to have a simple arm server that

00:08:26,340 --> 00:08:30,690
did the kinematics and then sent it to

00:08:28,260 --> 00:08:32,440
the base controller board and it moved

00:08:30,690 --> 00:08:33,940
the arm but today

00:08:32,440 --> 00:08:35,380
you could probably just send in a goal

00:08:33,940 --> 00:08:37,030
and to move it and it spits out

00:08:35,380 --> 00:08:38,890
trajectory action and that's one of the

00:08:37,030 --> 00:08:40,450
great advantages to following the

00:08:38,890 --> 00:08:43,870
standards and following the naming

00:08:40,450 --> 00:08:45,430
conventions because before that we

00:08:43,870 --> 00:08:47,560
developed all this stuff we developed it

00:08:45,430 --> 00:08:50,410
almost years ago an electric and now

00:08:47,560 --> 00:08:52,960
today movies here and we can just drop

00:08:50,410 --> 00:08:54,940
it in so that's one of the powerful

00:08:52,960 --> 00:08:59,890
things about following standards and

00:08:54,940 --> 00:09:01,960
using the conventions finally um the

00:08:59,890 --> 00:09:03,490
most important thing or at least I feel

00:09:01,960 --> 00:09:06,280
it's the most important thing about all

00:09:03,490 --> 00:09:09,130
robots about Ross in general is

00:09:06,280 --> 00:09:11,310
documentation if if you want anyone to

00:09:09,130 --> 00:09:14,590
use your stuff you need to document it

00:09:11,310 --> 00:09:16,810
document the node api's documented it

00:09:14,590 --> 00:09:19,600
through tutorials make sure it's easy

00:09:16,810 --> 00:09:21,520
for people to use and if you're really

00:09:19,600 --> 00:09:23,380
diligent get someone who knows nothing

00:09:21,520 --> 00:09:25,240
about Ross know something about your

00:09:23,380 --> 00:09:29,020
robot and have them go through your

00:09:25,240 --> 00:09:31,060
tutorials it really helps and it's what

00:09:29,020 --> 00:09:34,090
keeps Ross going it makes it such a

00:09:31,060 --> 00:09:36,550
great community so that was my short

00:09:34,090 --> 00:09:37,990
talk I really wanted to make it more

00:09:36,550 --> 00:09:39,780
available for questions that people have

00:09:37,990 --> 00:09:42,780
questions about Ross flying robots

00:09:39,780 --> 00:09:42,780

YouTube URL: https://www.youtube.com/watch?v=KF-pDS14cKk


