Title: ROSCon 2017 Day 1  Space Robotics Challenge backstage  A glimpse at the challenges of running the co
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:00,149 --> 00:00:07,080
hi everyone it's me again I mean I'm

00:00:03,929 --> 00:00:09,929
with Lewis this time to talk about space

00:00:07,080 --> 00:00:11,219
Robotics Challenge backstage so in this

00:00:09,929 --> 00:00:13,019
talk we're gonna talk to you about some

00:00:11,219 --> 00:00:15,269
of the simulation components we created

00:00:13,019 --> 00:00:18,000
for this challenge and share some big

00:00:15,269 --> 00:00:24,750
challenges we faced while running the

00:00:18,000 --> 00:00:27,029
competition so a little bit background

00:00:24,750 --> 00:00:29,699
about the space robotics challenge is

00:00:27,029 --> 00:00:31,859
one of the NASA space robotics and tenyo

00:00:29,699 --> 00:00:33,630
challenges and this challenge involves a

00:00:31,859 --> 00:00:36,090
Arfa robot which is also known as a

00:00:33,630 --> 00:00:39,780
Valkyrie to perform perform various

00:00:36,090 --> 00:00:41,579
tasks on the surface of Mars so there

00:00:39,780 --> 00:00:43,200
are three tasks which we will show you

00:00:41,579 --> 00:00:45,170
throughout this presentation and there

00:00:43,200 --> 00:00:48,920
are different checkpoints in each task

00:00:45,170 --> 00:00:52,289
the unique aspect of these tasks is that

00:00:48,920 --> 00:00:55,140
the robot has to complete all the tasks

00:00:52,289 --> 00:00:56,850
in one go compared to the pose the

00:00:55,140 --> 00:00:59,250
challenges that we hosted in the past

00:00:56,850 --> 00:01:00,780
for example the dart virtual robotics

00:00:59,250 --> 00:01:02,850
challenge you have the walking driving

00:01:00,780 --> 00:01:04,739
and the manipulation and everything is

00:01:02,850 --> 00:01:08,220
done separately in separate environments

00:01:04,739 --> 00:01:11,280
and here then the real challenge here is

00:01:08,220 --> 00:01:13,560
to do them all at once so teams are

00:01:11,280 --> 00:01:16,770
expected to do the task seemingly

00:01:13,560 --> 00:01:19,140
autonomy or fully autonomous which one

00:01:16,770 --> 00:01:22,530
team actually did and they did well too

00:01:19,140 --> 00:01:24,540
and we also restrict network traffic to

00:01:22,530 --> 00:01:26,490
simulate communication delay between

00:01:24,540 --> 00:01:30,329
Earth and Mars and also we added a

00:01:26,490 --> 00:01:33,210
limited bandwidth so at the end there

00:01:30,329 --> 00:01:38,040
are 20 finalists down from 93 teams

00:01:33,210 --> 00:01:39,990
after the qualifiers so we're just gonna

00:01:38,040 --> 00:01:42,630
go straight to show you what it looks

00:01:39,990 --> 00:01:45,030
like I don't know if you notice we're

00:01:42,630 --> 00:01:47,340
doing the simulation the presentation

00:01:45,030 --> 00:01:51,540
everything is like gazebo so what you

00:01:47,340 --> 00:01:53,729
see right now is a playback of one of

00:01:51,540 --> 00:01:57,360
the runs from the winning team team

00:01:53,729 --> 00:02:00,110
coordinated so what you're seeing here

00:01:57,360 --> 00:02:03,600
is the robot doing task one which is

00:02:00,110 --> 00:02:05,159
orienting a satellite dish so just to

00:02:03,600 --> 00:02:07,049
give you an idea what the simulation

00:02:05,159 --> 00:02:11,330
looks like so we have the Robonaut

00:02:07,049 --> 00:02:13,880
Robonaut 5 robot

00:02:11,330 --> 00:02:17,330
as multi stands head so I've got cameras

00:02:13,880 --> 00:02:19,940
and spinning lighters and we also use

00:02:17,330 --> 00:02:21,950
the controller provided by HMC the whole

00:02:19,940 --> 00:02:23,720
body controller and then we also provide

00:02:21,950 --> 00:02:26,300
a grasping controller and these

00:02:23,720 --> 00:02:28,190
controllers are used by all the teams so

00:02:26,300 --> 00:02:32,600
they have to use the same controllers to

00:02:28,190 --> 00:02:37,250
make the robot do its tasks we're going

00:02:32,600 --> 00:02:40,610
to zoom out a little bit so we've seen

00:02:37,250 --> 00:02:43,160
there's just task one in the bottom

00:02:40,610 --> 00:02:44,690
section and there there's task two in

00:02:43,160 --> 00:02:47,090
the middle section where they have to

00:02:44,690 --> 00:02:49,280
carry a solar panel and then deploy

00:02:47,090 --> 00:02:51,530
somewhere here by the solar array and

00:02:49,280 --> 00:02:54,260
then plug in the cable and after that

00:02:51,530 --> 00:02:57,350
they have to move in climb the stairs

00:02:54,260 --> 00:03:01,220
and then go into the habitat here on the

00:02:57,350 --> 00:03:03,290
top top of the screen and then they have

00:03:01,220 --> 00:03:06,200
to find and repair or leak and that's

00:03:03,290 --> 00:03:12,500
has three well come back to the other

00:03:06,200 --> 00:03:15,709
task later so the competition is hosted

00:03:12,500 --> 00:03:18,440
on the cloud we use Claussen a tool that

00:03:15,709 --> 00:03:20,570
was presented last year at Ross con 2016

00:03:18,440 --> 00:03:22,790
so basically it tells classroom is a

00:03:20,570 --> 00:03:25,430
tool for managing and provisioning

00:03:22,790 --> 00:03:27,950
machines on the cloud specifically

00:03:25,430 --> 00:03:30,250
Amazon Web Services AWS

00:03:27,950 --> 00:03:34,100
so what you see on the right is

00:03:30,250 --> 00:03:36,410
screenshot of what the competitors sees

00:03:34,100 --> 00:03:38,540
so they go this is the entry page that

00:03:36,410 --> 00:03:39,650
they go to and they log in and then they

00:03:38,540 --> 00:03:41,989
get to launch what we call a

00:03:39,650 --> 00:03:43,489
constellation and a constellation is

00:03:41,989 --> 00:03:46,550
just basically a group of machine

00:03:43,489 --> 00:03:49,370
instances in this case they launch two

00:03:46,550 --> 00:03:53,150
machines so we have the simulator

00:03:49,370 --> 00:03:57,500
machine and which runs gazebo Russ

00:03:53,150 --> 00:03:59,780
Indigo and also the SRC simulation

00:03:57,500 --> 00:04:02,239
package with which we developed and then

00:03:59,780 --> 00:04:04,250
down on the bottom it also launched the

00:04:02,239 --> 00:04:09,140
fuel computer this is where the team

00:04:04,250 --> 00:04:11,000
software is run so you can also see

00:04:09,140 --> 00:04:12,860
their buttons on the right once you

00:04:11,000 --> 00:04:14,209
launch the machines you can click these

00:04:12,860 --> 00:04:16,310
buttons to start running a simulation

00:04:14,209 --> 00:04:17,810
and once you're ready to perform the

00:04:16,310 --> 00:04:21,380
task they can start their own software

00:04:17,810 --> 00:04:23,419
down the bottom the new feature that we

00:04:21,380 --> 00:04:25,009
added for this particular challenge is

00:04:23,419 --> 00:04:27,349
the use of docker

00:04:25,009 --> 00:04:29,300
find a great help us to provide

00:04:27,349 --> 00:04:31,280
reproducible environment we can do it

00:04:29,300 --> 00:04:32,659
locally and then deploy it all the

00:04:31,280 --> 00:04:35,029
changes that we made out to the cloud

00:04:32,659 --> 00:04:37,340
quickly so for example you can start

00:04:35,029 --> 00:04:39,860
simulation in one instance in a

00:04:37,340 --> 00:04:42,680
container kill it cleanly and then start

00:04:39,860 --> 00:04:45,710
another one in the same instance we also

00:04:42,680 --> 00:04:48,229
use it to deploy the team software so

00:04:45,710 --> 00:04:51,310
they give us a URL pointing to their

00:04:48,229 --> 00:04:54,650
repo they can be helped up bitbucket

00:04:51,310 --> 00:04:56,389
public or private we go clone the repo

00:04:54,650 --> 00:04:58,430
and it expected that there's a docker

00:04:56,389 --> 00:05:00,110
file containing all the setup of their

00:04:58,430 --> 00:05:01,669
software and then we'll build an image

00:05:00,110 --> 00:05:04,520
and run it a container of that and

00:05:01,669 --> 00:05:06,949
deploy it on the cloud the nice thing is

00:05:04,520 --> 00:05:08,629
that they can do whatever they want in a

00:05:06,949 --> 00:05:10,550
container and we don't have to worry

00:05:08,629 --> 00:05:12,590
about it interfering with all the

00:05:10,550 --> 00:05:18,080
monitoring processes that we are running

00:05:12,590 --> 00:05:20,330
on the host machine just a summary of

00:05:18,080 --> 00:05:21,800
the different components in architecture

00:05:20,330 --> 00:05:24,199
so on the top right we have the

00:05:21,800 --> 00:05:27,789
simulator instance running gazebo there

00:05:24,199 --> 00:05:31,330
see simulation package is always logging

00:05:27,789 --> 00:05:33,650
after each run we upload the locks to s3

00:05:31,330 --> 00:05:35,539
so for example what you're seeing here

00:05:33,650 --> 00:05:40,149
in the best presentation is just a log

00:05:35,539 --> 00:05:43,310
that we downloaded from s3 and on the

00:05:40,149 --> 00:05:45,860
Left we have the fuel computer it's got

00:05:43,310 --> 00:05:48,439
the team software on it and then we run

00:05:45,860 --> 00:05:50,389
what we call a traffic shaper which just

00:05:48,439 --> 00:05:54,080
regulates traffic between the teams

00:05:50,389 --> 00:05:55,879
computer and operate a control unit this

00:05:54,080 --> 00:05:58,189
is the local machine that are running

00:05:55,879 --> 00:06:01,580
and talking to their software on the

00:05:58,189 --> 00:06:04,969
cloud so we add a latency and limit

00:06:01,580 --> 00:06:07,789
bandwidth through this channel here and

00:06:04,969 --> 00:06:09,289
then now I'm going to hand over to Luis

00:06:07,789 --> 00:06:14,180
who a focus more on the simulation

00:06:09,289 --> 00:06:15,469
package that we developed okay so as Ian

00:06:14,180 --> 00:06:18,529
mentioned let's talk a little bit about

00:06:15,469 --> 00:06:19,879
the simulation part of things that was

00:06:18,529 --> 00:06:22,310
developed specifically for this

00:06:19,879 --> 00:06:25,580
challenge and to understand this

00:06:22,310 --> 00:06:28,039
software that was written to integrate

00:06:25,580 --> 00:06:30,050
the controls of the robot inside

00:06:28,039 --> 00:06:31,370
simulation we have to talk a little bit

00:06:30,050 --> 00:06:33,709
about the software that is running on

00:06:31,370 --> 00:06:35,990
the real robot so there are two main

00:06:33,709 --> 00:06:38,210
pieces of software one is a hardware

00:06:35,990 --> 00:06:40,039
interface provided by NASA J

00:06:38,210 --> 00:06:42,949
see and the other one is a whole-body

00:06:40,039 --> 00:06:44,630
controller maintained by IHMC the

00:06:42,949 --> 00:06:47,990
controller builds on top of the hardware

00:06:44,630 --> 00:06:50,479
interface to provide ross interface that

00:06:47,990 --> 00:06:52,849
can be used to control the real physical

00:06:50,479 --> 00:06:54,860
robot so in simulation we want to use

00:06:52,849 --> 00:06:57,080
these same pieces but we want to run the

00:06:54,860 --> 00:07:00,259
simulation inside the Gazebo simulator

00:06:57,080 --> 00:07:02,900
that we're seeing right here and to make

00:07:00,259 --> 00:07:05,060
the bridge between these shoes there are

00:07:02,900 --> 00:07:08,690
a lot of different Ross packages and

00:07:05,060 --> 00:07:10,520
nodes running connecting all these bits

00:07:08,690 --> 00:07:12,620
and pieces to make sure that the code

00:07:10,520 --> 00:07:14,990
that the competitors are writing for the

00:07:12,620 --> 00:07:18,050
simulation can also work on the real

00:07:14,990 --> 00:07:19,520
robot and vice versa so I'm not going to

00:07:18,050 --> 00:07:21,889
go into the details of how this

00:07:19,520 --> 00:07:23,030
integration worked I'd like to focus on

00:07:21,889 --> 00:07:25,400
the software that was written

00:07:23,030 --> 00:07:27,349
specifically for this competition and

00:07:25,400 --> 00:07:30,020
it's this little piece here in the

00:07:27,349 --> 00:07:32,360
corner it's called SRC sim it stands for

00:07:30,020 --> 00:07:35,930
space robotics challenge simulation and

00:07:32,360 --> 00:07:38,270
it's basically a bridge between it

00:07:35,930 --> 00:07:39,620
provides an interface between the Gazebo

00:07:38,270 --> 00:07:42,440
simulation and what's going on there

00:07:39,620 --> 00:07:46,940
with the simulated robot and the

00:07:42,440 --> 00:07:49,580
competitors and also cloud sim so this

00:07:46,940 --> 00:07:53,990
piece is not necessary to simulate

00:07:49,580 --> 00:07:55,310
Valkyrie r5 inside a gazebo it's only

00:07:53,990 --> 00:07:59,210
necessary if you want to run the

00:07:55,310 --> 00:08:01,880
competition itself so some of the

00:07:59,210 --> 00:08:03,710
features of SRC sim are some of the

00:08:01,880 --> 00:08:06,110
things it provides are first of all the

00:08:03,710 --> 00:08:08,449
world mechanics ian showed you the

00:08:06,110 --> 00:08:11,000
satellite working before that's an

00:08:08,449 --> 00:08:12,949
element of the world the model the way

00:08:11,000 --> 00:08:14,750
the satellite works the you know the

00:08:12,949 --> 00:08:16,400
fact that when you turn the wheel the

00:08:14,750 --> 00:08:18,289
satellite also moves all this is

00:08:16,400 --> 00:08:20,659
controlled by the SSE same package

00:08:18,289 --> 00:08:23,120
controlling the world mechanics the

00:08:20,659 --> 00:08:24,949
package also provides real-time scoring

00:08:23,120 --> 00:08:27,469
so it keeps track of what the robot is

00:08:24,949 --> 00:08:31,520
doing and how many points it's scoring

00:08:27,469 --> 00:08:33,950
and it also provides teams a way to

00:08:31,520 --> 00:08:37,070
restart us or skip checkpoints because

00:08:33,950 --> 00:08:38,029
since the competition had to be run all

00:08:37,070 --> 00:08:40,310
in a row

00:08:38,029 --> 00:08:41,870
we gave teams it was in the rules the

00:08:40,310 --> 00:08:43,459
chance to skip a checkpoint they didn't

00:08:41,870 --> 00:08:46,010
want to complete to continue from there

00:08:43,459 --> 00:08:47,779
or we started the robot for example fail

00:08:46,010 --> 00:08:50,840
or you drop the tool on the floor and

00:08:47,779 --> 00:08:53,720
you couldn't get it so the the plug-in

00:08:50,840 --> 00:08:55,880
controls the whole world and rearranges

00:08:53,720 --> 00:08:58,760
the objects and replaces repositions the

00:08:55,880 --> 00:09:00,890
robot accordingly the two last points

00:08:58,760 --> 00:09:03,080
are features that are not specifically

00:09:00,890 --> 00:09:05,000
on the SR system package but features

00:09:03,080 --> 00:09:08,029
that we added to get Zeebo to make the

00:09:05,000 --> 00:09:10,610
challenge easier to implement so one of

00:09:08,029 --> 00:09:13,010
them is a harness plug-in and that's

00:09:10,610 --> 00:09:15,830
basically a plugin that allows you to

00:09:13,010 --> 00:09:19,070
slowly lower our robot while it's

00:09:15,830 --> 00:09:21,050
controllers are getting started until it

00:09:19,070 --> 00:09:22,700
touches the floor and once the robot can

00:09:21,050 --> 00:09:24,490
stand by itself you release the harness

00:09:22,700 --> 00:09:27,680
kind of like a harness in the real world

00:09:24,490 --> 00:09:29,600
and this has been released with gazebo 7

00:09:27,680 --> 00:09:32,779
and can be used for other robots besides

00:09:29,600 --> 00:09:35,180
our five and another feature that we

00:09:32,779 --> 00:09:37,700
added was lock filtering on while

00:09:35,180 --> 00:09:40,820
recording so before this challenge if

00:09:37,700 --> 00:09:42,650
you want to record gazebo log it would

00:09:40,820 --> 00:09:45,680
always require that one thousand Hertz

00:09:42,650 --> 00:09:47,270
with really high resolution and when we

00:09:45,680 --> 00:09:48,920
are talking about this competition these

00:09:47,270 --> 00:09:51,470
like there were simulations running for

00:09:48,920 --> 00:09:54,080
14 hours and the files were becoming

00:09:51,470 --> 00:09:56,630
huge so we introduced this feature that

00:09:54,080 --> 00:09:59,210
you can filter as you're recording so

00:09:56,630 --> 00:10:01,730
for the competition we filtered at 40

00:09:59,210 --> 00:10:03,350
Hertz and we decrease the resolution and

00:10:01,730 --> 00:10:05,300
you can actually see this here in the

00:10:03,350 --> 00:10:07,040
log playback sometimes the names of the

00:10:05,300 --> 00:10:08,930
robot and the parts of the fingers kind

00:10:07,040 --> 00:10:10,610
of seem to be detaching for it from each

00:10:08,930 --> 00:10:12,320
other it's not a simulation error it's

00:10:10,610 --> 00:10:14,870
just that the log was filtered and the

00:10:12,320 --> 00:10:17,540
resolution was lowered we had some

00:10:14,870 --> 00:10:20,570
problems also with the harness and and

00:10:17,540 --> 00:10:22,480
the whole fact of being able to restart

00:10:20,570 --> 00:10:25,160
and skip a checkpoint and the robot

00:10:22,480 --> 00:10:27,860
teleporting in the world like this the

00:10:25,160 --> 00:10:28,730
controller is great it works on earth it

00:10:27,860 --> 00:10:30,500
works on Mars

00:10:28,730 --> 00:10:33,680
but it doesn't support robots that can

00:10:30,500 --> 00:10:35,750
teleport yet so there was a challenge

00:10:33,680 --> 00:10:37,640
that we had we faced and the teams faced

00:10:35,750 --> 00:10:41,690
during the competition and people had to

00:10:37,640 --> 00:10:43,790
work around this limitation another

00:10:41,690 --> 00:10:46,190
feature of this package is a random word

00:10:43,790 --> 00:10:48,670
generator this is a script we provided

00:10:46,190 --> 00:10:50,990
for teens so they could generate

00:10:48,670 --> 00:10:53,390
different worlds valid worlds for the

00:10:50,990 --> 00:10:55,880
competition for practice during the

00:10:53,390 --> 00:10:57,620
finals each team had to compete with

00:10:55,880 --> 00:10:59,870
five different worlds that weren't known

00:10:57,620 --> 00:11:01,760
in advance so it's really convenient to

00:10:59,870 --> 00:11:03,620
be able to practice with as many worlds

00:11:01,760 --> 00:11:06,320
as possible so this

00:11:03,620 --> 00:11:08,450
script would randomize things like the

00:11:06,320 --> 00:11:10,430
configuration of objects in the world

00:11:08,450 --> 00:11:11,990
their parameter so for example the

00:11:10,430 --> 00:11:14,630
friction on the wheel would change every

00:11:11,990 --> 00:11:18,200
time or the position of the Sun and the

00:11:14,630 --> 00:11:20,420
target so the target of the direction

00:11:18,200 --> 00:11:22,790
you have to turn the satellite or the

00:11:20,420 --> 00:11:24,020
target like where is the leak inside the

00:11:22,790 --> 00:11:25,550
habitats that we're going to show you

00:11:24,020 --> 00:11:27,620
later this was all randomized

00:11:25,550 --> 00:11:30,440
automatically by this script and the

00:11:27,620 --> 00:11:33,260
script could also produce a full world

00:11:30,440 --> 00:11:35,690
valid for the competition with tasks one

00:11:33,260 --> 00:11:37,580
two and three or a world that has only

00:11:35,690 --> 00:11:39,410
one of these tasks even though the

00:11:37,580 --> 00:11:40,070
competition had to be completed in a

00:11:39,410 --> 00:11:42,140
full world

00:11:40,070 --> 00:11:44,330
it was convenience convenient for

00:11:42,140 --> 00:11:47,000
practice to have a world that has only

00:11:44,330 --> 00:11:49,700
one of the tasks so here on the left we

00:11:47,000 --> 00:11:51,320
can see many different worlds that were

00:11:49,700 --> 00:11:53,810
generated for task 1 which is the

00:11:51,320 --> 00:11:56,500
satellites task with various valid

00:11:53,810 --> 00:11:59,450
configurations and on the right we have

00:11:56,500 --> 00:12:02,720
many worlds generated for task 2 which

00:11:59,450 --> 00:12:05,180
is this the solar panel task that Ian

00:12:02,720 --> 00:12:07,730
will show later and they are all also

00:12:05,180 --> 00:12:10,640
valid worlds for for practice so let's

00:12:07,730 --> 00:12:13,880
skip task 2 for a bit and let's go to

00:12:10,640 --> 00:12:16,520
test 3 take a look at how that works

00:12:13,880 --> 00:12:19,790
as Ian mentioned it starts by going up

00:12:16,520 --> 00:12:22,070
the stairs and then Valkyrie opens that

00:12:19,790 --> 00:12:25,070
door there by turning the wheel and has

00:12:22,070 --> 00:12:27,440
to push the door and enter the habitat

00:12:25,070 --> 00:12:30,020
once Valkyrie gets inside the habitat

00:12:27,440 --> 00:12:32,510
she sees this table which has two tools

00:12:30,020 --> 00:12:34,940
on top of it one of these tools can find

00:12:32,510 --> 00:12:38,540
leaks inside the habitat and the other

00:12:34,940 --> 00:12:41,180
two can fix leaks these tools were not

00:12:38,540 --> 00:12:42,890
modeled after real tools that exist in

00:12:41,180 --> 00:12:44,480
the real roads so we could be a little

00:12:42,890 --> 00:12:46,640
bit creative the way that we were

00:12:44,480 --> 00:12:48,440
implementing them in gazebo so it's fun

00:12:46,640 --> 00:12:50,000
to mention because people are always

00:12:48,440 --> 00:12:52,940
like trying to implement different

00:12:50,000 --> 00:12:54,290
things in gazebo and they it's hard to

00:12:52,940 --> 00:12:55,880
imagine that sometimes you can implement

00:12:54,290 --> 00:12:58,310
one thing with something that is

00:12:55,880 --> 00:13:01,610
completely unrelated the leak detector

00:12:58,310 --> 00:13:03,740
for example we implemented it as a

00:13:01,610 --> 00:13:06,410
logical camera which is a new sensor

00:13:03,740 --> 00:13:08,300
that we added on gazebo 7 and basically

00:13:06,410 --> 00:13:11,330
what this sensor is doing is detecting

00:13:08,300 --> 00:13:14,300
whether the leak is inside this frustum

00:13:11,330 --> 00:13:16,060
there that is delimited by white lines

00:13:14,300 --> 00:13:18,010
and

00:13:16,060 --> 00:13:21,090
we can see the white lines but the robot

00:13:18,010 --> 00:13:23,890
actually cannot see that for us them so

00:13:21,090 --> 00:13:26,380
the robot will have to wave this around

00:13:23,890 --> 00:13:29,230
the wall until it finds the leak so

00:13:26,380 --> 00:13:30,910
while the robot is doing that let's talk

00:13:29,230 --> 00:13:34,210
a little bit about all the different

00:13:30,910 --> 00:13:37,030
checkpoints in this competition there

00:13:34,210 --> 00:13:39,370
are 18 checkpoints in total and many of

00:13:37,030 --> 00:13:41,350
them had very specific logic that we had

00:13:39,370 --> 00:13:43,390
to implement just for this competition

00:13:41,350 --> 00:13:45,670
the leak detector is one of them and we

00:13:43,390 --> 00:13:48,430
wrote very custom code just for it but

00:13:45,670 --> 00:13:50,770
there are other types of checkpoints

00:13:48,430 --> 00:13:54,160
that were very they had a lot in common

00:13:50,770 --> 00:13:56,290
so we thought we should make a common

00:13:54,160 --> 00:13:57,940
solution for them and package them into

00:13:56,290 --> 00:14:00,100
a gazebo so other people can ride them

00:13:57,940 --> 00:14:01,780
it's not very complicated code but it's

00:14:00,100 --> 00:14:04,870
code that probably a lot of people are

00:14:01,780 --> 00:14:06,340
needing for very many use cases and they

00:14:04,870 --> 00:14:08,020
are rewriting over and over again so

00:14:06,340 --> 00:14:10,510
we're just making this available with

00:14:08,020 --> 00:14:13,150
gazebo one of them is the Box plugin

00:14:10,510 --> 00:14:15,520
which was used in seven checkpoints

00:14:13,150 --> 00:14:18,100
basically what this plug-in does is it

00:14:15,520 --> 00:14:21,370
checks when a certain object reached a

00:14:18,100 --> 00:14:24,280
certain box region in the world so this

00:14:21,370 --> 00:14:26,800
was used for example when the robot

00:14:24,280 --> 00:14:29,200
would reach a certain area a certain

00:14:26,800 --> 00:14:31,210
checkpoint we would check that and that

00:14:29,200 --> 00:14:33,430
communication is done via gazebo

00:14:31,210 --> 00:14:37,810
transport and then translated to Ross

00:14:33,430 --> 00:14:39,160
for the competition another plug-in that

00:14:37,810 --> 00:14:42,600
was used for four different checkpoints

00:14:39,160 --> 00:14:45,430
is the touch plugin any checks when two

00:14:42,600 --> 00:14:49,390
specific objects are touching each other

00:14:45,430 --> 00:14:51,460
for a continuous time exclusively so

00:14:49,390 --> 00:14:55,780
this was used to check when Val had

00:14:51,460 --> 00:14:57,520
successfully picked up a tool or or the

00:14:55,780 --> 00:14:59,380
solar panel or other things like this

00:14:57,520 --> 00:15:02,020
the touch plug-in is already released

00:14:59,380 --> 00:15:04,120
with gazebo seven and the Box plugin we

00:15:02,020 --> 00:15:08,410
reported to gazebo eight probably using

00:15:04,120 --> 00:15:11,260
ignition transport so just to wrap up

00:15:08,410 --> 00:15:13,720
task three here this is the moment when

00:15:11,260 --> 00:15:15,670
the Valkyrie like the winning team

00:15:13,720 --> 00:15:19,540
finally found a leak and they are

00:15:15,670 --> 00:15:22,060
getting ready to press the the leak

00:15:19,540 --> 00:15:23,589
patch tool against the leak to fix it it

00:15:22,060 --> 00:15:25,630
has to be pressed for five seconds for

00:15:23,589 --> 00:15:27,130
the checkpoint to be completed this was

00:15:25,630 --> 00:15:29,410
actually the only team that was able to

00:15:27,130 --> 00:15:32,500
complete this checkpoint so it's very

00:15:29,410 --> 00:15:34,300
that someone actually did it and now I'm

00:15:32,500 --> 00:15:37,829
going to pass it to Ian who's gonna talk

00:15:34,300 --> 00:15:37,829
a little bit about the challenges we had

00:15:39,269 --> 00:15:44,860
alright thankfully so we implemented a

00:15:42,279 --> 00:15:46,870
little stuff behind scene and we also

00:15:44,860 --> 00:15:48,639
faced a lot of challenges along the way

00:15:46,870 --> 00:15:51,040
and today I'm just gonna share with you

00:15:48,639 --> 00:15:53,319
two one technical challenge on one and

00:15:51,040 --> 00:15:55,660
non technical challenge so one of the

00:15:53,319 --> 00:15:58,509
first is simulation stability and

00:15:55,660 --> 00:16:00,810
performance it's there's always a

00:15:58,509 --> 00:16:03,040
trade-off between having us very stable

00:16:00,810 --> 00:16:05,589
simulation physics simulation and

00:16:03,040 --> 00:16:08,740
real-time performance so after the first

00:16:05,589 --> 00:16:10,720
pass of integrating the IMC controller

00:16:08,740 --> 00:16:14,170
and making Valkyrie over our fire robot

00:16:10,720 --> 00:16:16,540
walk we arrived at roughly zero point

00:16:14,170 --> 00:16:19,569
one zero real time factor and that's one

00:16:16,540 --> 00:16:22,870
tenth of the speed of real-world so H

00:16:19,569 --> 00:16:25,329
teen per run is allowed up to 3.5 hours

00:16:22,870 --> 00:16:28,300
simulation time so which works out to be

00:16:25,329 --> 00:16:31,629
35 our real time for one run and there

00:16:28,300 --> 00:16:33,430
are five runs to do so if a team decides

00:16:31,629 --> 00:16:35,290
to use up all the time all available to

00:16:33,430 --> 00:16:37,420
them and do all the runs one by one you

00:16:35,290 --> 00:16:39,790
end up with you probably have to spend

00:16:37,420 --> 00:16:43,720
seven point three days just to do the

00:16:39,790 --> 00:16:45,100
competition assuming you don't sleep so

00:16:43,720 --> 00:16:47,860
you can see that improving performance

00:16:45,100 --> 00:16:50,800
this has really been a high priority and

00:16:47,860 --> 00:16:52,029
weeks leading up to the challenge so

00:16:50,800 --> 00:16:53,649
some of the suggestions that we're going

00:16:52,029 --> 00:16:55,360
to offer here that we actually did and

00:16:53,649 --> 00:16:57,370
some of them we did not but hopefully

00:16:55,360 --> 00:17:00,370
that will help you with your simulation

00:16:57,370 --> 00:17:04,110
projects so we use simple shapes for

00:17:00,370 --> 00:17:06,429
collisions and so these are boxes Fears

00:17:04,110 --> 00:17:09,309
cylinders this has become a standard

00:17:06,429 --> 00:17:11,439
procedure for us when we're creating

00:17:09,309 --> 00:17:14,260
simulations the Janurary better than

00:17:11,439 --> 00:17:16,209
meshes and produce which produce on

00:17:14,260 --> 00:17:17,890
stable contacts and then we started

00:17:16,209 --> 00:17:20,919
doing things like inserting models and

00:17:17,890 --> 00:17:22,750
deleting them between checkpoints so a

00:17:20,919 --> 00:17:25,839
good example is when the robber enters

00:17:22,750 --> 00:17:27,189
the habitat before the robot enters the

00:17:25,839 --> 00:17:30,159
habitat they were actually nothing in

00:17:27,189 --> 00:17:33,580
there and once the robber enters respond

00:17:30,159 --> 00:17:35,710
the repair to the rig the lick detector

00:17:33,580 --> 00:17:38,679
- and then we deleted everything outside

00:17:35,710 --> 00:17:41,280
of the habitat so they helped a bit and

00:17:38,679 --> 00:17:43,270
then we also experimented things like

00:17:41,280 --> 00:17:45,040
relaxing the Eau de

00:17:43,270 --> 00:17:48,400
physics silver parameters this is the

00:17:45,040 --> 00:17:51,430
forked OTE that we have in gazebo

00:17:48,400 --> 00:17:54,880
so we bumped up to two milliseconds step

00:17:51,430 --> 00:17:57,220
size the original default value is one

00:17:54,880 --> 00:17:59,380
millisecond so this is the step size

00:17:57,220 --> 00:18:02,290
which is the time you advance the

00:17:59,380 --> 00:18:04,750
simulation by every update so the

00:18:02,290 --> 00:18:06,310
simulation we effectively run a 500

00:18:04,750 --> 00:18:08,530
Hertz which is what the int MC

00:18:06,310 --> 00:18:10,300
controller needs and then what we did is

00:18:08,530 --> 00:18:12,610
also reduce iterations so we're

00:18:10,300 --> 00:18:15,340
sacrificing simulation accuracy for

00:18:12,610 --> 00:18:16,780
speed but however we're we do not merge

00:18:15,340 --> 00:18:19,120
these changes it was very close to

00:18:16,780 --> 00:18:21,400
merging until the team reported that

00:18:19,120 --> 00:18:25,420
there was a test failure in there

00:18:21,400 --> 00:18:26,830
overnight testing so if we had time in

00:18:25,420 --> 00:18:29,050
the future I think we could have done

00:18:26,830 --> 00:18:32,440
better we also tried different physics

00:18:29,050 --> 00:18:33,970
engines therefore only bullet same body

00:18:32,440 --> 00:18:36,520
and dart could have play around with

00:18:33,970 --> 00:18:39,220
others and the last challenge we want to

00:18:36,520 --> 00:18:40,750
mention is there's always a challenge

00:18:39,220 --> 00:18:44,620
for us to determine whether or not a

00:18:40,750 --> 00:18:46,750
task can be solved so a specialist rated

00:18:44,620 --> 00:18:49,720
by looking at task 2 which is when the

00:18:46,750 --> 00:18:52,540
robot has to grab a cable and plug it

00:18:49,720 --> 00:18:55,180
into a solar panel so we can request to

00:18:52,540 --> 00:18:58,870
change the weight of the solar panel the

00:18:55,180 --> 00:19:00,820
color of the scylla panel which we did

00:18:58,870 --> 00:19:02,500
and then we also got request to change

00:19:00,820 --> 00:19:04,840
the position their cable and stuff up

00:19:02,500 --> 00:19:05,680
which we did not do but there's always

00:19:04,840 --> 00:19:07,540
the question

00:19:05,680 --> 00:19:10,470
like we're not way making the task too

00:19:07,540 --> 00:19:12,850
easy for them or not so just an example

00:19:10,470 --> 00:19:15,610
we made the change to change the cable

00:19:12,850 --> 00:19:17,740
geometry but making it a load they

00:19:15,610 --> 00:19:20,170
elevated from the tabletop so that it's

00:19:17,740 --> 00:19:21,100
easier to reach under and grab so once

00:19:20,170 --> 00:19:24,430
we made that change

00:19:21,100 --> 00:19:25,930
other teams complained because we have

00:19:24,430 --> 00:19:27,580
just broken their object recognition

00:19:25,930 --> 00:19:30,850
model that they trained for the old

00:19:27,580 --> 00:19:32,860
cable geometry so I guess the lesson

00:19:30,850 --> 00:19:34,690
learned there is that we should be more

00:19:32,860 --> 00:19:36,640
active about collecting feedback from

00:19:34,690 --> 00:19:38,500
teams at regular intervals so we're

00:19:36,640 --> 00:19:40,330
getting a lot of feedback and now issue

00:19:38,500 --> 00:19:42,760
tracker the teams are not afraid to tell

00:19:40,330 --> 00:19:45,880
us how the changes we made have screwed

00:19:42,760 --> 00:19:47,500
up their code but what's equally

00:19:45,880 --> 00:19:51,150
important is that they tell us what's

00:19:47,500 --> 00:19:53,770
working so that information is missing

00:19:51,150 --> 00:19:56,710
finally this is just showing the robot

00:19:53,770 --> 00:19:58,870
walking to the final checkpoint so

00:19:56,710 --> 00:20:01,059
team coordinators the only team that got

00:19:58,870 --> 00:20:02,620
perfect score and then this is just

00:20:01,059 --> 00:20:06,399
showing them walking to the last

00:20:02,620 --> 00:20:07,990
checkpoint and that's all like to thank

00:20:06,399 --> 00:20:19,149
everyone involved for making this

00:20:07,990 --> 00:20:20,919
competition possible thank you thank you

00:20:19,149 --> 00:20:22,779
Anna Louise I think we have time for one

00:20:20,919 --> 00:20:24,809
quick question and one can you get set

00:20:22,779 --> 00:20:24,809
up

00:20:25,770 --> 00:20:40,539
so anyone got a question come on up to

00:20:28,659 --> 00:20:44,580
the microphone these are some bloopers

00:20:40,539 --> 00:20:46,200
by the way that we're playing hi sorry I

00:20:44,580 --> 00:20:49,299
[Music]

00:20:46,200 --> 00:20:51,880
work and at home and industrial and

00:20:49,299 --> 00:20:53,710
there there's always these ref boxes and

00:20:51,880 --> 00:20:55,330
every year they change the rule book a

00:20:53,710 --> 00:20:56,830
little bit and if you're the maintainer

00:20:55,330 --> 00:20:59,140
of the ref box you have to like change

00:20:56,830 --> 00:21:03,399
the automated generation and all this

00:20:59,140 --> 00:21:05,350
how extensible is the the task

00:21:03,399 --> 00:21:07,539
generation and like if they change the

00:21:05,350 --> 00:21:11,440
tasks and add new tasks how much more

00:21:07,539 --> 00:21:14,980
code do you need to write to I don't

00:21:11,440 --> 00:21:16,630
know continue visit all auto-generated

00:21:14,980 --> 00:21:18,130
and you have some nice features so you

00:21:16,630 --> 00:21:23,470
say okay give me a task that does this

00:21:18,130 --> 00:21:24,820
and this and random role generator the

00:21:23,470 --> 00:21:26,740
real generator but it sounds like you're

00:21:24,820 --> 00:21:31,720
doing automated marking or automated

00:21:26,740 --> 00:21:34,299
grading of the tasks oh yeah so the each

00:21:31,720 --> 00:21:36,130
each checkpoint has an objective and we

00:21:34,299 --> 00:21:38,860
are checking that objective on the fly

00:21:36,130 --> 00:21:40,870
so some of them are very common and like

00:21:38,860 --> 00:21:43,240
if you have checkpoints that are like

00:21:40,870 --> 00:21:46,840
about things reaching a certain region

00:21:43,240 --> 00:21:49,360
you can reuse our code like or like some

00:21:46,840 --> 00:21:51,010
some robot picking something up you can

00:21:49,360 --> 00:21:52,720
reuse our code but if you have a more

00:21:51,010 --> 00:21:54,820
custom checkpoint then you're probably

00:21:52,720 --> 00:21:57,039
going to have to write some logic okay

00:21:54,820 --> 00:21:59,080
so it was just those three checkpoints

00:21:57,039 --> 00:22:01,210
that you yeah so like there are three

00:21:59,080 --> 00:22:03,610
main categories one is the the region

00:22:01,210 --> 00:22:05,950
checkpoint the other one is the like

00:22:03,610 --> 00:22:07,480
picking things up and like the other one

00:22:05,950 --> 00:22:09,639
is actually custom so there are seven

00:22:07,480 --> 00:22:11,409
different checkpoints there that are

00:22:09,639 --> 00:22:14,349
we custom like for example pressing the

00:22:11,409 --> 00:22:16,389
leak against the the like the leak patch

00:22:14,349 --> 00:22:18,099
to against the leak is a very custom

00:22:16,389 --> 00:22:19,570
check point for that case because you

00:22:18,099 --> 00:22:21,839
have to press a button at the same time

00:22:19,570 --> 00:22:24,639
so it's a lot of little things to check

00:22:21,839 --> 00:22:25,200
okay thanks let's think you know Louise

00:22:24,639 --> 00:22:31,269
once more

00:22:25,200 --> 00:22:31,269

YouTube URL: https://www.youtube.com/watch?v=m4lz6wlqk_o


