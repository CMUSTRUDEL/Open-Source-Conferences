Title: ROSCon 2017 Day 1  Vehicle and city simulation with Gazebo and ROS
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:00,000 --> 00:00:05,430
hi everyone my name is Ian here with my

00:00:03,389 --> 00:00:07,410
colleague Carlos and we're gonna talk to

00:00:05,430 --> 00:00:11,219
you about vehicle and city simulation

00:00:07,410 --> 00:00:13,769
with gazebo and Ross so a little bit

00:00:11,219 --> 00:00:17,010
background there's certainly being a lot

00:00:13,769 --> 00:00:19,140
of interests in vehicle simulation as we

00:00:17,010 --> 00:00:22,439
seen in the morning and in the afternoon

00:00:19,140 --> 00:00:23,699
throughout all day so we thought we'd

00:00:22,439 --> 00:00:26,099
like to share with you some of the

00:00:23,699 --> 00:00:27,840
projects that we've been working on so

00:00:26,099 --> 00:00:29,550
we are in the simulation team in open

00:00:27,840 --> 00:00:31,470
robotics so we show you some of the

00:00:29,550 --> 00:00:33,840
projects we've been developing in

00:00:31,470 --> 00:00:36,750
simulation and how we take those results

00:00:33,840 --> 00:00:38,640
and convert them into resources that we

00:00:36,750 --> 00:00:39,120
made publicly available for everyone to

00:00:38,640 --> 00:00:44,610
use

00:00:39,120 --> 00:00:47,700
so they include vehicle environments for

00:00:44,610 --> 00:00:52,910
controlling cars road network postures

00:00:47,700 --> 00:00:52,910
and also procedures CDs generation tools

00:00:53,449 --> 00:00:58,559
ok so one of the first project like to

00:00:56,160 --> 00:01:01,890
talk to you about is a simulator that we

00:00:58,559 --> 00:01:05,400
made for the Prius Challenge event this

00:01:01,890 --> 00:01:07,560
is a event hosted by Toyota Research

00:01:05,400 --> 00:01:09,930
Institute so I believe they've been

00:01:07,560 --> 00:01:12,689
running this event inside Toyota

00:01:09,930 --> 00:01:15,180
annually for a while and this year is

00:01:12,689 --> 00:01:18,450
the first time they made it public for

00:01:15,180 --> 00:01:21,119
everyone to participate so a little bit

00:01:18,450 --> 00:01:24,420
about the event so you drive a Prius

00:01:21,119 --> 00:01:25,500
hybrid and inside the Raceway and then

00:01:24,420 --> 00:01:27,320
what you're doing here is you're

00:01:25,500 --> 00:01:29,780
competing for the best fuel economy

00:01:27,320 --> 00:01:33,869
instead of competing for the best time

00:01:29,780 --> 00:01:37,320
so they have to drive reappear Prius

00:01:33,869 --> 00:01:40,380
vehicle nine laps on the 45 minutes and

00:01:37,320 --> 00:01:42,720
really looking for really high MPG the

00:01:40,380 --> 00:01:45,180
goal is to get 100-plus mpg and then I

00:01:42,720 --> 00:01:47,729
think before the race day they hired

00:01:45,180 --> 00:01:52,860
professional drivers on the racetrack

00:01:47,729 --> 00:01:55,290
and was able to make that number so just

00:01:52,860 --> 00:01:58,320
seeing on the right just a photo of the

00:01:55,290 --> 00:02:02,820
Prius hybrid and then the back is the

00:01:58,320 --> 00:02:08,399
photo of the raceway and we're just

00:02:02,820 --> 00:02:10,890
going straight to demo so the simulator

00:02:08,399 --> 00:02:14,570
that we built for them is for the teams

00:02:10,890 --> 00:02:16,760
to practice so I have my colors

00:02:14,570 --> 00:02:20,240
my colleague Kalos there driving the

00:02:16,760 --> 00:02:22,220
simulator with a joystick so they get to

00:02:20,240 --> 00:02:23,690
use the software to practice before the

00:02:22,220 --> 00:02:25,610
actual race day because now everyone can

00:02:23,690 --> 00:02:30,020
spend thousands of dollars renting the

00:02:25,610 --> 00:02:32,570
Raceway so what you see here is just a

00:02:30,020 --> 00:02:34,880
browser so we run the simulation on the

00:02:32,570 --> 00:02:37,610
cloud all they need to do is just log in

00:02:34,880 --> 00:02:40,459
through a browser go to URL and then

00:02:37,610 --> 00:02:42,800
plug in the joystick or if they have

00:02:40,459 --> 00:02:44,090
keyboard or driving well they can also

00:02:42,800 --> 00:02:53,150
just plug it in and it should just work

00:02:44,090 --> 00:02:56,870
out of the box so so so yeah so this is

00:02:53,150 --> 00:02:58,670
a camera view from the driver seat and

00:02:56,870 --> 00:03:01,160
then what you see in the background is

00:02:58,670 --> 00:03:03,410
just the 3d model of the Sonoma Raceway

00:03:01,160 --> 00:03:05,450
so we hire 3d artists to create these

00:03:03,410 --> 00:03:08,030
for us and also what you cannot see here

00:03:05,450 --> 00:03:09,590
is the vehicle Prius hybrid we also have

00:03:08,030 --> 00:03:12,440
a 3d model for that and we're making all

00:03:09,590 --> 00:03:16,370
that publicly available we also

00:03:12,440 --> 00:03:18,470
implemented a power train system so all

00:03:16,370 --> 00:03:20,720
the data down here and which most

00:03:18,470 --> 00:03:24,470
important part the miles per gallon the

00:03:20,720 --> 00:03:27,799
state of charge and also you get data

00:03:24,470 --> 00:03:30,110
like the speed distance travel we're not

00:03:27,799 --> 00:03:33,560
even morazÃ¡n and which gear the car is

00:03:30,110 --> 00:03:36,010
in hopefully that gives an idea of what

00:03:33,560 --> 00:03:36,010
we created

00:03:42,640 --> 00:03:48,379
so this is the previous hybrid model so

00:03:46,849 --> 00:03:52,610
a little bit about how we model in

00:03:48,379 --> 00:03:54,769
gazebo so it's a commence earring and we

00:03:52,610 --> 00:03:56,480
have rolling resistant model as joint

00:03:54,769 --> 00:03:58,250
friction so this is just adding friction

00:03:56,480 --> 00:04:02,019
to the joint connecting the wheels to

00:03:58,250 --> 00:04:04,340
the chassis we have simplified

00:04:02,019 --> 00:04:06,349
approximated aerodynamic drag this

00:04:04,340 --> 00:04:09,920
adding forces to the body of the link

00:04:06,349 --> 00:04:11,930
and also added suspension model because

00:04:09,920 --> 00:04:14,060
of the the nature of the raceway there

00:04:11,930 --> 00:04:16,789
are a lot of steep climbs and banked

00:04:14,060 --> 00:04:19,579
turns so allowed the axles to wheel a

00:04:16,789 --> 00:04:22,520
bit to roll a bit so that the wheel

00:04:19,579 --> 00:04:25,940
remains contact with the ground as for

00:04:22,520 --> 00:04:28,039
the wheels themselves we we increase the

00:04:25,940 --> 00:04:31,610
friction coefficients on the rear wheel

00:04:28,039 --> 00:04:33,380
so that is understeer and provide

00:04:31,610 --> 00:04:38,660
prevents the vehicle from spinning out

00:04:33,380 --> 00:04:41,060
and we also use for example sphere as

00:04:38,660 --> 00:04:43,270
collisions so there only generates one

00:04:41,060 --> 00:04:46,099
single contact instead of cylinders

00:04:43,270 --> 00:04:50,200
which you can make a popping context and

00:04:46,099 --> 00:04:52,729
provide a produce on stable behavior

00:04:50,200 --> 00:04:54,620
perhaps the feature that we spent the

00:04:52,729 --> 00:04:58,010
most time on is the powertrain model so

00:04:54,620 --> 00:04:59,720
we created a plugin for this so my

00:04:58,010 --> 00:05:01,610
colleague Steve Peters during the day at

00:04:59,720 --> 00:05:05,030
Sonoma Raceway collecting data from the

00:05:01,610 --> 00:05:08,560
Rio Prius hybrid model and from there he

00:05:05,030 --> 00:05:10,550
was able to fit a model and derive

00:05:08,560 --> 00:05:13,370
parameters such as the efficacy

00:05:10,550 --> 00:05:16,010
efficiency of the battery the gas engine

00:05:13,370 --> 00:05:19,070
and the charge and recharge rate and

00:05:16,010 --> 00:05:20,990
also we implemented the plug-in to

00:05:19,070 --> 00:05:22,550
capture the different states of the

00:05:20,990 --> 00:05:23,870
powertrain system so for example when

00:05:22,550 --> 00:05:26,630
the engine is on when it's actually

00:05:23,870 --> 00:05:29,030
joined power from the battery and so on

00:05:26,630 --> 00:05:32,389
so for more detailed analysis you can

00:05:29,030 --> 00:05:34,669
find a link down below we have a QR code

00:05:32,389 --> 00:05:36,110
at the end of the presentation so that

00:05:34,669 --> 00:05:38,539
point gives you a link to this

00:05:36,110 --> 00:05:44,780
presentation so you can get the links

00:05:38,539 --> 00:05:48,950
there too so we spent a little bit time

00:05:44,780 --> 00:05:53,060
after this project to tidy everything up

00:05:48,950 --> 00:05:55,730
and create a open-source project

00:05:53,060 --> 00:05:57,440
demo for this so that we're hoping that

00:05:55,730 --> 00:05:59,510
this would be a good starting point for

00:05:57,440 --> 00:06:02,240
anyone wanting to get into a vehicle

00:05:59,510 --> 00:06:05,420
simulation for their car projects so put

00:06:02,240 --> 00:06:09,770
it on github it's down below it's going

00:06:05,420 --> 00:06:13,610
to play in the video so we use Ross

00:06:09,770 --> 00:06:16,190
kinetic and we converted the Prius SDF

00:06:13,610 --> 00:06:19,610
model into you RDF so as Ross friendly

00:06:16,190 --> 00:06:22,070
so you can visualize in RVs also we

00:06:19,610 --> 00:06:24,680
added different sensors to it planer

00:06:22,070 --> 00:06:27,680
lighter block lidar in the middle we

00:06:24,680 --> 00:06:30,050
array of sonar sensors and then we all

00:06:27,680 --> 00:06:34,400
add a cameras on all sides of the car

00:06:30,050 --> 00:06:38,090
and maybe you can see in the video there

00:06:34,400 --> 00:06:40,640
the background the environment there is

00:06:38,090 --> 00:06:43,400
not so memory so we actually created

00:06:40,640 --> 00:06:46,400
another model that's the M city test

00:06:43,400 --> 00:06:48,650
facility is a real physical testbed from

00:06:46,400 --> 00:06:50,330
the University of Michigan and then I

00:06:48,650 --> 00:06:52,760
think about that model there is that it

00:06:50,330 --> 00:06:56,390
has intersections lines lane markings

00:06:52,760 --> 00:06:59,560
buildings and curbs that is good for

00:06:56,390 --> 00:06:59,560
testing self-driving cars

00:07:05,540 --> 00:07:11,000
and finally the last example on a show

00:07:12,110 --> 00:07:19,440
is a project done by one of our interns

00:07:16,740 --> 00:07:22,380
Rohit Selim so he applied deep learning

00:07:19,440 --> 00:07:24,300
to to drive the car autonomously around

00:07:22,380 --> 00:07:26,490
the racetrack so this is a simple

00:07:24,300 --> 00:07:28,140
demonstration built on top of the car

00:07:26,490 --> 00:07:30,960
demo that I presented in the previous

00:07:28,140 --> 00:07:33,630
slide applied learning based on the

00:07:30,960 --> 00:07:36,360
Nvidia entry and learning model from

00:07:33,630 --> 00:07:39,300
there you may have noticed they're also

00:07:36,360 --> 00:07:40,950
object detection so what he did was he

00:07:39,300 --> 00:07:43,200
drove the car manually around the

00:07:40,950 --> 00:07:45,720
racetrack a few times collected respec

00:07:43,200 --> 00:07:47,760
files and from those rough spec files he

00:07:45,720 --> 00:07:49,560
was able to get images steering angles

00:07:47,760 --> 00:07:51,210
and basically just using all that

00:07:49,560 --> 00:07:53,820
information to build a model and from

00:07:51,210 --> 00:07:56,280
there he was able to drive the car by

00:07:53,820 --> 00:07:58,440
herself in simulation so it for the

00:07:56,280 --> 00:08:00,690
object detector he created Yola object

00:07:58,440 --> 00:08:02,760
detector and tossed and tensorflow

00:08:00,690 --> 00:08:10,440
object detector and those are all open

00:08:02,760 --> 00:08:12,240
source and now now pass on to my

00:08:10,440 --> 00:08:16,230
colleague Carl Lewis to talk about the

00:08:12,240 --> 00:08:18,000
tools thanks Ian

00:08:16,230 --> 00:08:21,230
ian has covered so far different types

00:08:18,000 --> 00:08:24,300
of resources such as vehicle models

00:08:21,230 --> 00:08:25,830
environment models and also plugins and

00:08:24,300 --> 00:08:29,010
the next type of resource I'd like to

00:08:25,830 --> 00:08:31,710
present here is a C++ library named in

00:08:29,010 --> 00:08:35,850
missionary NDF and iron D F stands for

00:08:31,710 --> 00:08:38,490
round Network definition file and this

00:08:35,850 --> 00:08:42,920
is essentially a specific format of

00:08:38,490 --> 00:08:46,050
capturing of the road properties and

00:08:42,920 --> 00:08:47,640
there are like different of course this

00:08:46,050 --> 00:08:48,810
is not the only the only format there

00:08:47,640 --> 00:08:50,940
are there are different ones and

00:08:48,810 --> 00:08:54,990
essentially the general term it's the

00:08:50,940 --> 00:08:57,240
road network definition and this is

00:08:54,990 --> 00:09:00,000
important because if you think from the

00:08:57,240 --> 00:09:02,640
perspective of of the code that's right

00:09:00,000 --> 00:09:04,380
in our cars we need a way or they call

00:09:02,640 --> 00:09:06,900
needs a way to access programmatically

00:09:04,380 --> 00:09:09,390
all these properties I think we saw

00:09:06,900 --> 00:09:10,320
interesting videos and talks this

00:09:09,390 --> 00:09:13,230
morning about this

00:09:10,320 --> 00:09:15,300
so ignition are in the F is the the main

00:09:13,230 --> 00:09:17,580
goal is to deal with this type of files

00:09:15,300 --> 00:09:21,240
since essentially we are in the air file

00:09:17,580 --> 00:09:23,790
so it the main goal is to load an RDF

00:09:21,240 --> 00:09:27,860
file from disk into memory and offer or

00:09:23,790 --> 00:09:30,480
exposing in C++ API to read write and

00:09:27,860 --> 00:09:32,160
delete the different elements of an

00:09:30,480 --> 00:09:35,220
array in DF and you can see here and the

00:09:32,160 --> 00:09:37,050
under picture just to give you a quick

00:09:35,220 --> 00:09:40,110
overview of the some of the elements of

00:09:37,050 --> 00:09:42,000
an RDF file so you can see two two

00:09:40,110 --> 00:09:43,529
different segments so the horizontal

00:09:42,000 --> 00:09:46,649
line and the vertical one are those two

00:09:43,529 --> 00:09:49,440
those two segments each segment has

00:09:46,649 --> 00:09:51,870
lanes so in this example there are two

00:09:49,440 --> 00:09:55,589
lanes per segment and then each Lane has

00:09:51,870 --> 00:09:58,079
different way points which are marked

00:09:55,589 --> 00:09:59,970
with latitude and longitude so we can

00:09:58,079 --> 00:10:02,850
see different different circles here the

00:09:59,970 --> 00:10:05,490
blue the green and and there's also stop

00:10:02,850 --> 00:10:09,810
signs capturing in rdf so you can see

00:10:05,490 --> 00:10:12,839
one here on the right side so ignition

00:10:09,810 --> 00:10:16,500
rdf lets you load all these files and

00:10:12,839 --> 00:10:19,860
and parts as i mentioned it's also a C++

00:10:16,500 --> 00:10:22,260
11 library it's cross-platform so it

00:10:19,860 --> 00:10:24,690
works on Windows or sex and and Windows

00:10:22,260 --> 00:10:28,760
and it's one of the very limited open

00:10:24,690 --> 00:10:31,170
source options available so you can also

00:10:28,760 --> 00:10:35,820
access the library here in the in the

00:10:31,170 --> 00:10:37,589
link and the next resource I'd like to

00:10:35,820 --> 00:10:41,910
present here is called terminus but

00:10:37,589 --> 00:10:43,620
first things first I'd like to I like to

00:10:41,910 --> 00:10:45,810
introduce a command because those will

00:10:43,620 --> 00:10:48,360
be the original authors of of the tool

00:10:45,810 --> 00:10:50,070
so the the call of terminus is to

00:10:48,360 --> 00:10:53,730
generate the city that can be loaded

00:10:50,070 --> 00:10:55,709
into into simulation this is pre

00:10:53,730 --> 00:10:57,839
important because we have identified

00:10:55,709 --> 00:10:59,160
multiple use case where this could be

00:10:57,839 --> 00:11:02,070
interesting imagine you don't have

00:10:59,160 --> 00:11:05,459
access to a real vehicle so you only

00:11:02,070 --> 00:11:07,949
have a simulation it's pretty cool if

00:11:05,459 --> 00:11:10,290
you can reproduce the city that you need

00:11:07,949 --> 00:11:12,839
maybe maybe first of all you wanna try a

00:11:10,290 --> 00:11:15,329
city like this one with a lot of

00:11:12,839 --> 00:11:18,899
symmetry maybe you want to keep moving

00:11:15,329 --> 00:11:22,170
to different shapes so with terminus you

00:11:18,899 --> 00:11:24,600
can kind of create the city that you

00:11:22,170 --> 00:11:26,279
need but there's also different use case

00:11:24,600 --> 00:11:28,170
for example imagine that you already

00:11:26,279 --> 00:11:30,120
have a vehicle and you and your start

00:11:28,170 --> 00:11:31,080
testing on the real world and you

00:11:30,120 --> 00:11:33,870
identify some

00:11:31,080 --> 00:11:35,640
particular situation that happened so it

00:11:33,870 --> 00:11:39,330
will be nice if you can go back to the

00:11:35,640 --> 00:11:41,760
to the lab and try to identify what

00:11:39,330 --> 00:11:44,570
happened and maybe import the same area

00:11:41,760 --> 00:11:47,100
of the real world that you used and

00:11:44,570 --> 00:11:47,930
again test your code to see what

00:11:47,100 --> 00:11:50,370
happened

00:11:47,930 --> 00:11:52,620
we'll say that most of these use cases

00:11:50,370 --> 00:11:54,690
can can be reproduced in in terminals

00:11:52,620 --> 00:11:59,310
and in the last use case I'd like to to

00:11:54,690 --> 00:12:01,890
mention those ways maybe you have maybe

00:11:59,310 --> 00:12:04,860
you have a car maybe you have everything

00:12:01,890 --> 00:12:07,320
but you you still want to again generate

00:12:04,860 --> 00:12:08,970
a city with the features at an

00:12:07,320 --> 00:12:11,540
artificial city with some particular

00:12:08,970 --> 00:12:14,839
features so terminus lets you specify

00:12:11,540 --> 00:12:19,050
with different parameters dimensions

00:12:14,839 --> 00:12:20,399
density and shape to create the city

00:12:19,050 --> 00:12:26,430
that doesn't exist maybe in the real

00:12:20,399 --> 00:12:27,990
world so for now the content that

00:12:26,430 --> 00:12:30,810
terminal generates the content of the

00:12:27,990 --> 00:12:34,380
city that you can generate is composed

00:12:30,810 --> 00:12:38,060
by buildings and roads so for now for

00:12:34,380 --> 00:12:40,649
now those are the two main elements and

00:12:38,060 --> 00:12:42,420
also the city can be exported or

00:12:40,649 --> 00:12:45,570
generated in two different formats you

00:12:42,420 --> 00:12:47,970
can generate an RDF file so if you are

00:12:45,570 --> 00:12:50,339
all interested in the roads or you can

00:12:47,970 --> 00:12:51,750
generate the entire city for example in

00:12:50,339 --> 00:12:54,959
a world file that can be loaded into

00:12:51,750 --> 00:12:57,240
gazebo or you can generate a mesh that

00:12:54,959 --> 00:12:59,730
can be loaded into a different simulator

00:12:57,240 --> 00:13:04,410
for example we tested this with the drag

00:12:59,730 --> 00:13:08,329
simulator and I like to show a small

00:13:04,410 --> 00:13:08,329
video also the tool

00:13:11,310 --> 00:13:18,990
so just a little bit of context before

00:13:15,499 --> 00:13:21,029
playing the video so imagine that so

00:13:18,990 --> 00:13:25,079
what's going to show here it's an

00:13:21,029 --> 00:13:27,930
example of how to create a low a city of

00:13:25,079 --> 00:13:32,459
an area of the world that exists so the

00:13:27,930 --> 00:13:35,100
way we created this is you use

00:13:32,459 --> 00:13:36,990
OpenStreetMap so what you would do is

00:13:35,100 --> 00:13:38,939
you go to the you open your browser go

00:13:36,990 --> 00:13:40,499
to OpenStreetMap and then select the

00:13:38,939 --> 00:13:43,050
region of the world that you're

00:13:40,499 --> 00:13:46,319
interested in this case we select a

00:13:43,050 --> 00:13:47,790
region of Madrid this is this is on the

00:13:46,319 --> 00:13:50,999
upper left this is a snapshot of the

00:13:47,790 --> 00:13:54,449
region that we loaded beautiful city by

00:13:50,999 --> 00:13:57,689
the way and then what we did was click

00:13:54,449 --> 00:13:59,160
on the export button on OpenStreetMap

00:13:57,689 --> 00:14:01,170
and that will generate a file for you

00:13:59,160 --> 00:14:05,220
this is still not terminals and the

00:14:01,170 --> 00:14:07,920
content of that of that file is XML of

00:14:05,220 --> 00:14:10,199
that area with with all the information

00:14:07,920 --> 00:14:13,230
about buildings roads and all that stuff

00:14:10,199 --> 00:14:16,980
then you can imagine terminus is like a

00:14:13,230 --> 00:14:18,720
script and then we we pass all the file

00:14:16,980 --> 00:14:21,660
or all that data containing the file

00:14:18,720 --> 00:14:23,699
into the script and then we run terminus

00:14:21,660 --> 00:14:27,750
and generated the different files that

00:14:23,699 --> 00:14:31,279
are here in the lower left side so the

00:14:27,750 --> 00:14:34,740
first the first of all we can see is a

00:14:31,279 --> 00:14:37,769
2d or just a plain to the file of the

00:14:34,740 --> 00:14:41,670
road generated then the source one are

00:14:37,769 --> 00:14:43,559
in DF pause for a second term is also

00:14:41,670 --> 00:14:46,649
generates a run in DF representation of

00:14:43,559 --> 00:14:51,269
the roads and this is an SVG also

00:14:46,649 --> 00:14:53,250
visualization of that are in DF so there

00:14:51,269 --> 00:14:56,819
are different tools here too to help you

00:14:53,250 --> 00:14:59,160
visualize what has been generated you

00:14:56,819 --> 00:15:01,769
can also join well what we see here is

00:14:59,160 --> 00:15:07,079
the mesh of the road also generated in

00:15:01,769 --> 00:15:09,269
obj format and then finally this is the

00:15:07,079 --> 00:15:11,339
one of the adult world files loaded into

00:15:09,269 --> 00:15:14,179
the zero as you can see here the

00:15:11,339 --> 00:15:14,179
buildings and the roads

00:15:25,510 --> 00:15:29,949
so to summarize we have presented

00:15:28,029 --> 00:15:33,040
different type of resources that we

00:15:29,949 --> 00:15:34,630
believe could be interesting and yet

00:15:33,040 --> 00:15:37,240
another step into the direction of

00:15:34,630 --> 00:15:39,339
autonomous vehicles and we have

00:15:37,240 --> 00:15:40,720
presented different vehicle models such

00:15:39,339 --> 00:15:42,670
as the Prius different environment

00:15:40,720 --> 00:15:45,010
models such as the MCD and Sonoma

00:15:42,670 --> 00:15:48,550
Raceway examples of plugins that can

00:15:45,010 --> 00:15:50,260
modify the way a gazebo works for our

00:15:48,550 --> 00:15:54,339
own needs

00:15:50,260 --> 00:15:57,820
examples of C++ library that let you

00:15:54,339 --> 00:16:01,810
deal with Network broad networks and

00:15:57,820 --> 00:16:04,170
also a new tool called terminals for

00:16:01,810 --> 00:16:06,579
generating cities a lot in simulation

00:16:04,170 --> 00:16:08,889
but of course we know that that's not

00:16:06,579 --> 00:16:11,980
enough so as I said that's just one step

00:16:08,889 --> 00:16:14,399
and we encourage everyone to contribute

00:16:11,980 --> 00:16:17,350
and improve all these tools for example

00:16:14,399 --> 00:16:20,649
it will be great if we can have more

00:16:17,350 --> 00:16:23,470
models more bikes or tracks or sidecars

00:16:20,649 --> 00:16:25,600
or Arby's or trailers more environments

00:16:23,470 --> 00:16:27,160
more curated environments different

00:16:25,600 --> 00:16:29,019
plugins for example for controlling

00:16:27,160 --> 00:16:32,350
traffic traffic lights or weather

00:16:29,019 --> 00:16:36,550
conditions or move different groups of

00:16:32,350 --> 00:16:39,040
pedestrians also gazebo has different or

00:16:36,550 --> 00:16:41,560
a wide variety of sensors but for

00:16:39,040 --> 00:16:43,510
example there the radar is not fully

00:16:41,560 --> 00:16:45,850
supported yet and seems a pretty

00:16:43,510 --> 00:16:47,910
important sensor for for autonomous

00:16:45,850 --> 00:16:51,940
vehicles so we're looking also for

00:16:47,910 --> 00:16:53,440
contributions and on that topic and we

00:16:51,940 --> 00:16:55,779
introduce here the ignition and the F

00:16:53,440 --> 00:16:57,730
but R and EF is it's not the only format

00:16:55,779 --> 00:17:00,490
of course it has its own limitations for

00:16:57,730 --> 00:17:01,930
example it doesn't have a vision or it

00:17:00,490 --> 00:17:04,780
doesn't contain information about the

00:17:01,930 --> 00:17:07,150
geometry of the road so we're looking

00:17:04,780 --> 00:17:10,329
forward for more formats such as open

00:17:07,150 --> 00:17:12,280
drive or any other formats and we're

00:17:10,329 --> 00:17:14,410
also thinking on creating a common API

00:17:12,280 --> 00:17:16,929
for accessing all the elements that in a

00:17:14,410 --> 00:17:20,199
way that your code doesn't work doesn't

00:17:16,929 --> 00:17:22,000
change sorry depend independently of the

00:17:20,199 --> 00:17:25,990
format that you're using underneath and

00:17:22,000 --> 00:17:27,699
of course improving terminals or or

00:17:25,990 --> 00:17:30,660
other tools for example for adding more

00:17:27,699 --> 00:17:33,850
content besides roads and buildings and

00:17:30,660 --> 00:17:35,679
of course create more series and store

00:17:33,850 --> 00:17:37,820
them in a common repository derivative

00:17:35,679 --> 00:17:40,370
oricon axis

00:17:37,820 --> 00:17:43,240
thank you and we're happy to take

00:17:40,370 --> 00:17:43,240
questions

00:17:46,570 --> 00:17:50,960
great thank you anyone have questions

00:17:48,470 --> 00:17:57,680
and well people have some questions

00:17:50,960 --> 00:18:00,080
Louise you wanna get set up so while

00:17:57,680 --> 00:18:02,500
she's getting set up which parts of

00:18:00,080 --> 00:18:05,480
these are easily reproducible right now

00:18:02,500 --> 00:18:13,700
I get a quick demo so that people can

00:18:05,480 --> 00:18:21,910
run so pretty much everything that we

00:18:13,700 --> 00:18:25,430
show is available except except for the

00:18:21,910 --> 00:18:26,750
Ross demo you mean oh this is the

00:18:25,430 --> 00:18:28,730
self-driving car simulation yet the

00:18:26,750 --> 00:18:31,370
video that we saw that where the car is

00:18:28,730 --> 00:18:35,060
just going autonomously yeah the rest of

00:18:31,370 --> 00:18:39,530
the of the resources are available there

00:18:35,060 --> 00:18:41,330
are links and everywhere I have two

00:18:39,530 --> 00:18:43,070
questions maybe I missed that with the

00:18:41,330 --> 00:18:47,360
first one in the presentation so like I

00:18:43,070 --> 00:18:50,360
can create a 3d map of any city using

00:18:47,360 --> 00:18:51,860
open open street maps like I take an

00:18:50,360 --> 00:18:53,720
image and put it through terminus and I

00:18:51,860 --> 00:18:58,930
should I will be able to get a 3d map of

00:18:53,720 --> 00:19:02,300
that city is that correct that's that

00:18:58,930 --> 00:19:05,090
well that's partially correct so you're

00:19:02,300 --> 00:19:08,060
not going to get a full 3d map of the

00:19:05,090 --> 00:19:10,790
city you're gonna get all the roads of

00:19:08,060 --> 00:19:14,480
that area okay and the buildings and how

00:19:10,790 --> 00:19:17,390
precise is the map with the reality do

00:19:14,480 --> 00:19:19,400
we have any matrix on that that depends

00:19:17,390 --> 00:19:21,890
on the precision that OpenStreetMap has

00:19:19,400 --> 00:19:23,690
okay so we're not generating that data

00:19:21,890 --> 00:19:29,210
we're just importing data from the web

00:19:23,690 --> 00:19:31,670
all right thanks so you simulate your

00:19:29,210 --> 00:19:33,710
car in the with the previous challenge

00:19:31,670 --> 00:19:37,640
in your simulators and how well does

00:19:33,710 --> 00:19:43,190
that transfer to the real work so I

00:19:37,640 --> 00:19:45,470
think we don't the people use the

00:19:43,190 --> 00:19:48,230
simulators to say not get an idea of how

00:19:45,470 --> 00:19:50,390
it feels to drive it on the actual

00:19:48,230 --> 00:19:53,000
racetrack get an idea of the Olivier

00:19:50,390 --> 00:19:56,150
gains in terms of accuracy we don't have

00:19:53,000 --> 00:19:58,130
exact data to quite to quantify that but

00:19:56,150 --> 00:20:01,280
I think people have been using it quite

00:19:58,130 --> 00:20:05,620
a bit to devise the strategy for driving

00:20:01,280 --> 00:20:05,620

YouTube URL: https://www.youtube.com/watch?v=z-pxFKyIZ98


