Title: ROSCon 2017 Vancouver Day 2  ROS for Search and Rescue Robotics  Tools and Lessons learned during TR
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:01,110 --> 00:00:05,670
so good morning dear colleagues we are

00:00:03,120 --> 00:00:08,220
Martin potaka and Sergio cacao from the

00:00:05,670 --> 00:00:10,230
trader project and we've come here to

00:00:08,220 --> 00:00:13,110
share our experience from the last four

00:00:10,230 --> 00:00:16,379
years of the search and rescue project

00:00:13,110 --> 00:00:18,090
heavily utilizing Ross you'll start with

00:00:16,379 --> 00:00:20,789
a short introduction of the project so

00:00:18,090 --> 00:00:22,470
you'll know what it is about then we all

00:00:20,789 --> 00:00:24,720
have a look at the Ross tools and

00:00:22,470 --> 00:00:27,300
packages we've created to solve some

00:00:24,720 --> 00:00:28,529
problems behind you'll also hear

00:00:27,300 --> 00:00:30,689
something about the more advanced

00:00:28,529 --> 00:00:35,000
functionalities that can be treated like

00:00:30,689 --> 00:00:37,350
having some scientific importance and

00:00:35,000 --> 00:00:40,260
then there will be a funny section of

00:00:37,350 --> 00:00:43,110
our experience with hardware and the

00:00:40,260 --> 00:00:45,660
last is a secret section stay tuned for

00:00:43,110 --> 00:00:48,210
it I think it's for fit

00:00:45,660 --> 00:00:50,399
so trader is an eu-funded project which

00:00:48,210 --> 00:00:53,789
aims at enabling humans and robots to

00:00:50,399 --> 00:00:56,789
form search and rescue teams and we only

00:00:53,789 --> 00:00:58,800
concentrate on the end users so we need

00:00:56,789 --> 00:01:02,100
to create robots and interfaces that are

00:00:58,800 --> 00:01:05,369
helpful to do firefighters in finishing

00:01:02,100 --> 00:01:08,310
their missions the tasks for the robots

00:01:05,369 --> 00:01:10,400
include exploration of disaster areas

00:01:08,310 --> 00:01:13,560
detection of something in them

00:01:10,400 --> 00:01:15,270
monitoring the areas and depending on

00:01:13,560 --> 00:01:17,490
the mission it can also include like a

00:01:15,270 --> 00:01:20,750
sample becomes measurements

00:01:17,490 --> 00:01:23,369
whatever the firefighters asked us to do

00:01:20,750 --> 00:01:25,590
we really try to concentrate on mutual

00:01:23,369 --> 00:01:27,720
cooperation between humans and robots so

00:01:25,590 --> 00:01:30,240
it's not the usual way when robots are

00:01:27,720 --> 00:01:31,740
providing useful data to humans but we

00:01:30,240 --> 00:01:35,340
also try the other way around so that

00:01:31,740 --> 00:01:37,170
humans get import or that robots get

00:01:35,340 --> 00:01:40,200
important information from the humans

00:01:37,170 --> 00:01:42,030
and the robots needs to work in

00:01:40,200 --> 00:01:43,890
unfriendly environment we have no

00:01:42,030 --> 00:01:47,040
markers in the area we have no crew

00:01:43,890 --> 00:01:48,930
trained models so we cannot depend on a

00:01:47,040 --> 00:01:50,759
geometrical assumptions because the

00:01:48,930 --> 00:01:55,320
building's we are moving in are usually

00:01:50,759 --> 00:02:00,920
collapsed and so on there is smoke for

00:01:55,320 --> 00:02:03,630
fog smoke sorry and yeah it's a really

00:02:00,920 --> 00:02:07,079
more most unfriendly environment for our

00:02:03,630 --> 00:02:09,110
BOTS we can imagine so the team

00:02:07,079 --> 00:02:11,660
comprises of

00:02:09,110 --> 00:02:15,140
a team leader which is so far always

00:02:11,660 --> 00:02:18,050
human depending on the mission there can

00:02:15,140 --> 00:02:20,030
be infield rescuers and because it's a

00:02:18,050 --> 00:02:23,000
robotics project there are always ground

00:02:20,030 --> 00:02:26,960
and aerial robots which do some tasks

00:02:23,000 --> 00:02:29,240
assigned by the humans the robots have

00:02:26,960 --> 00:02:31,610
some operators so far it's a one-to-one

00:02:29,240 --> 00:02:35,450
mapping so one Operator - one robot but

00:02:31,610 --> 00:02:37,780
our aim is to alleviate this so that

00:02:35,450 --> 00:02:41,330
like one Operator can handle more robots

00:02:37,780 --> 00:02:44,200
by providing more autonomy to do - the

00:02:41,330 --> 00:02:46,580
robots all of these actors are

00:02:44,200 --> 00:02:48,410
represented as software agents in a

00:02:46,580 --> 00:02:50,900
multi agent software a software

00:02:48,410 --> 00:02:52,640
framework which allows us to do

00:02:50,900 --> 00:02:55,970
high-level reasoning about what's going

00:02:52,640 --> 00:02:59,900
on right now in the mission and provide

00:02:55,970 --> 00:03:01,310
some useful information so for example

00:02:59,900 --> 00:03:03,890
there is a speech recognition layer

00:03:01,310 --> 00:03:06,380
which listens what are the firefighters

00:03:03,890 --> 00:03:08,870
talking about and if it recognizes a

00:03:06,380 --> 00:03:11,000
task task assignment it can for example

00:03:08,870 --> 00:03:13,220
put some high-level information like the

00:03:11,000 --> 00:03:15,230
team leader assigned the task to the UAV

00:03:13,220 --> 00:03:18,739
operator to get an image of some area

00:03:15,230 --> 00:03:21,200
and the system expects that the UAV will

00:03:18,739 --> 00:03:22,670
move to that area take a picture and

00:03:21,200 --> 00:03:24,830
that the picture will need to be shared

00:03:22,670 --> 00:03:28,040
to some other colleagues of these

00:03:24,830 --> 00:03:30,260
firefighters and all of this is stored

00:03:28,040 --> 00:03:33,400
in our set of a high level and low level

00:03:30,260 --> 00:03:36,019
databases we'll cover that topic later

00:03:33,400 --> 00:03:38,090
the ground robotic team members are

00:03:36,019 --> 00:03:42,080
customized tracked vehicles we have five

00:03:38,090 --> 00:03:44,450
of them they weigh about 25 kilos so

00:03:42,080 --> 00:03:47,269
they're not too big but also not too

00:03:44,450 --> 00:03:50,000
small and definitely they cannot rescue

00:03:47,269 --> 00:03:51,980
people they can detect everything but

00:03:50,000 --> 00:03:54,830
they cannot drag the people out of the

00:03:51,980 --> 00:03:58,970
mission area the robots usually connect

00:03:54,830 --> 00:04:01,220
my Wi-Fi they have multiple cameras a

00:03:58,970 --> 00:04:03,310
tilting radar and depending on the

00:04:01,220 --> 00:04:06,019
mission we can attach a lot more sensors

00:04:03,310 --> 00:04:08,030
including tactile sensors smoke sensors

00:04:06,019 --> 00:04:10,519
gas radio activity whatever the

00:04:08,030 --> 00:04:13,040
firefighters ask us to put on the robot

00:04:10,519 --> 00:04:15,380
and the grounder was you intentionally

00:04:13,040 --> 00:04:19,669
do not have GPS because they are

00:04:15,380 --> 00:04:21,830
expected to move in buildings in the UAV

00:04:19,669 --> 00:04:22,970
area we still haven't found like the

00:04:21,830 --> 00:04:24,680
Holy Grail so

00:04:22,970 --> 00:04:27,290
we were experimenting with the

00:04:24,680 --> 00:04:29,630
commercially available ones we started

00:04:27,290 --> 00:04:33,170
with sending technologies drones now we

00:04:29,630 --> 00:04:34,940
switch to the GI Matic pro and we're

00:04:33,170 --> 00:04:37,720
still not sure if we're at the point

00:04:34,940 --> 00:04:41,750
where we would be satisfied nevertheless

00:04:37,720 --> 00:04:44,750
go or the requirement for the UAVs is to

00:04:41,750 --> 00:04:46,430
provide life RGB streams so that the

00:04:44,750 --> 00:04:49,100
firefighters can get a quick overview of

00:04:46,430 --> 00:04:50,900
the disaster area and if possible we

00:04:49,100 --> 00:04:53,630
also require them to provide the infra

00:04:50,900 --> 00:04:57,230
red streams and these drones can use GPS

00:04:53,630 --> 00:04:59,330
because they're flying outside each

00:04:57,230 --> 00:05:02,210
operator has two screens in front of him

00:04:59,330 --> 00:05:04,910
one is the usual operator control unit

00:05:02,210 --> 00:05:08,090
ours is based on our cutie so we have

00:05:04,910 --> 00:05:10,790
you see there are s some camera plugins

00:05:08,090 --> 00:05:14,480
and some hardware related control

00:05:10,790 --> 00:05:17,660
plugins and the UI is modular so that

00:05:14,480 --> 00:05:19,910
every operator has only the UI elements

00:05:17,660 --> 00:05:23,720
for the particular sensors attached to

00:05:19,910 --> 00:05:25,580
the robot at the time the other display

00:05:23,720 --> 00:05:28,070
shows the tactical display system which

00:05:25,580 --> 00:05:30,380
is come out for all the firefighters in

00:05:28,070 --> 00:05:32,390
the mission and it's the interface

00:05:30,380 --> 00:05:35,270
between humans and the high level a

00:05:32,390 --> 00:05:37,340
reasoning system in the right part you

00:05:35,270 --> 00:05:39,169
can see some notifications or warnings

00:05:37,340 --> 00:05:42,860
generated by the high level system or

00:05:39,169 --> 00:05:45,650
from the other team members the middle

00:05:42,860 --> 00:05:48,620
part shows the overview map which might

00:05:45,650 --> 00:05:52,040
be taken from Google Maps or from the

00:05:48,620 --> 00:05:55,700
UAV overview images and in this map in

00:05:52,040 --> 00:05:59,000
the lower right corner you see icons

00:05:55,700 --> 00:06:04,250
that represent robots human team members

00:05:59,000 --> 00:06:07,850
and some localized the disaster dangers

00:06:04,250 --> 00:06:11,380
like fire biohazard whatever we find and

00:06:07,850 --> 00:06:13,580
wants to share with other team members

00:06:11,380 --> 00:06:17,020
peeking into the mission commands track

00:06:13,580 --> 00:06:20,090
we can see the team leader down there

00:06:17,020 --> 00:06:22,280
you can see he's facing the tactical

00:06:20,090 --> 00:06:24,440
display system and on the lower display

00:06:22,280 --> 00:06:27,410
he has a screen where he can request

00:06:24,440 --> 00:06:30,680
live camera streams from the robots in

00:06:27,410 --> 00:06:32,390
Mission next to him sits the UAV

00:06:30,680 --> 00:06:36,110
operator which is now like manually

00:06:32,390 --> 00:06:36,920
operating the UAV and was important you

00:06:36,110 --> 00:06:39,500
see he unlike

00:06:36,920 --> 00:06:42,590
cross the UAB using the screen he has

00:06:39,500 --> 00:06:45,260
like no direct view on the UAV the same

00:06:42,590 --> 00:06:47,630
holds for the ground vehicle operators

00:06:45,260 --> 00:06:49,580
in the back they also tell our pride

00:06:47,630 --> 00:06:54,500
durables without having direct sight on

00:06:49,580 --> 00:06:56,120
them that was the intro and now let's

00:06:54,500 --> 00:06:59,450
jump right into the particular ross

00:06:56,120 --> 00:07:00,890
packages we've created so the first

00:06:59,450 --> 00:07:04,220
problem we faced was the number of

00:07:00,890 --> 00:07:06,200
packages we didn't start from scratch we

00:07:04,220 --> 00:07:08,180
are continuing a previous project from

00:07:06,200 --> 00:07:10,310
which we inherited like a hundred of

00:07:08,180 --> 00:07:12,110
Ross packages and we needed to add more

00:07:10,310 --> 00:07:14,420
and more so we needed to somehow

00:07:12,110 --> 00:07:17,600
structure that since we were using gift

00:07:14,420 --> 00:07:20,240
we tried using sub modules for a while

00:07:17,600 --> 00:07:22,070
but we quickly decided not to do that

00:07:20,240 --> 00:07:24,320
because we found it too confusing for

00:07:22,070 --> 00:07:27,530
the developers to use them correctly so

00:07:24,320 --> 00:07:29,660
now we use about 15 gauge repositories

00:07:27,530 --> 00:07:31,460
that are separate and we can only

00:07:29,660 --> 00:07:33,200
install the repositories that are really

00:07:31,460 --> 00:07:35,270
needed on all the machines like the

00:07:33,200 --> 00:07:38,180
operator machine doesn't need durable

00:07:35,270 --> 00:07:40,400
drivers installed and so on what we

00:07:38,180 --> 00:07:42,020
found quite useful is having one

00:07:40,400 --> 00:07:44,240
repository with all the message and

00:07:42,020 --> 00:07:46,370
resource definitions that's present on

00:07:44,240 --> 00:07:47,840
all of the machines in the system so

00:07:46,370 --> 00:07:49,400
that you can quickly visualize and

00:07:47,840 --> 00:07:52,580
publish messages from every machine

00:07:49,400 --> 00:07:54,080
that's connected but we're still not

00:07:52,580 --> 00:07:56,660
satisfied with the point where we are

00:07:54,080 --> 00:07:58,400
but since it's the last your project we

00:07:56,660 --> 00:08:01,580
won't be able to change that but if you

00:07:58,400 --> 00:08:04,160
are starting your new project you might

00:08:01,580 --> 00:08:06,110
do better than us so if you can create

00:08:04,160 --> 00:08:08,210
outer installation scripts that would be

00:08:06,110 --> 00:08:12,860
really helpful for new members joining

00:08:08,210 --> 00:08:14,180
your development team we are not able to

00:08:12,860 --> 00:08:15,800
use for us install because we have some

00:08:14,180 --> 00:08:18,710
external dependencies that are

00:08:15,800 --> 00:08:22,100
incompatible with that but again like if

00:08:18,710 --> 00:08:23,720
you can use it it's quite useful our

00:08:22,100 --> 00:08:25,250
developers have free choice of those

00:08:23,720 --> 00:08:27,260
tools so they can freely was like

00:08:25,250 --> 00:08:28,820
koshkin my Kotkin to Scott can simple

00:08:27,260 --> 00:08:30,050
whatever which is good for the

00:08:28,820 --> 00:08:33,979
developers but not good for the

00:08:30,050 --> 00:08:35,840
integration of the project and last we

00:08:33,979 --> 00:08:38,060
use our own github installation which is

00:08:35,840 --> 00:08:43,180
nice that we have the data we own them

00:08:38,060 --> 00:08:45,620
but it's quite demanding to maintain it

00:08:43,180 --> 00:08:47,720
another problem we faced earlier in the

00:08:45,620 --> 00:08:49,820
project was network congestion as you

00:08:47,720 --> 00:08:52,220
heard we have any robots act

00:08:49,820 --> 00:08:54,380
to say same time in the same area and

00:08:52,220 --> 00:08:56,270
REE request video and point-cloud

00:08:54,380 --> 00:08:59,480
streams from the robots and that's a lot

00:08:56,270 --> 00:09:01,400
of data so we at least want this to

00:08:59,480 --> 00:09:03,380
solve the issue that for example if

00:09:01,400 --> 00:09:05,150
three operators subscribe the same video

00:09:03,380 --> 00:09:06,560
stream so that the stream is not

00:09:05,150 --> 00:09:10,010
transmitted three times so we're

00:09:06,560 --> 00:09:12,050
viralize but just once that is why we

00:09:10,010 --> 00:09:14,180
chose to use multi master solution based

00:09:12,050 --> 00:09:16,430
under an umbrella network framework we

00:09:14,180 --> 00:09:18,140
adjusted a bit so that it supports

00:09:16,430 --> 00:09:21,110
latched sub X and B directional

00:09:18,140 --> 00:09:23,420
communication over topics and it's

00:09:21,110 --> 00:09:25,940
solved part of our problems so here's

00:09:23,420 --> 00:09:29,150
the layout each of durables runs its own

00:09:25,940 --> 00:09:30,950
horse master and then we have one rest

00:09:29,150 --> 00:09:35,060
master for all the local machines

00:09:30,950 --> 00:09:37,100
connected via wire to a switch so that

00:09:35,060 --> 00:09:40,040
if the three operators subscribed a UAV

00:09:37,100 --> 00:09:42,740
stream the stream is just transmitted

00:09:40,040 --> 00:09:46,250
once from the UAV to the server we have

00:09:42,740 --> 00:09:48,650
on the local side and then the stream is

00:09:46,250 --> 00:09:53,480
multiplicative on the local gigabit

00:09:48,650 --> 00:09:55,280
network which is no problem so this is

00:09:53,480 --> 00:09:57,590
solved some of the problems but some

00:09:55,280 --> 00:09:59,450
still remain like the Umbro network

00:09:57,590 --> 00:10:01,160
doesn't support disconnecting of the

00:09:59,450 --> 00:10:02,630
topics which are which nobody is

00:10:01,160 --> 00:10:05,470
interested in so the data are

00:10:02,630 --> 00:10:09,020
transmitted like just all the time and

00:10:05,470 --> 00:10:13,180
the networks goes out it sometimes

00:10:09,020 --> 00:10:15,410
doesn't go back quite nicely the

00:10:13,180 --> 00:10:17,360
configuration for the Nibiru network is

00:10:15,410 --> 00:10:19,610
also quite cumbersome so we created like

00:10:17,360 --> 00:10:20,720
outer generator for these configurations

00:10:19,610 --> 00:10:22,910
based on simple

00:10:20,720 --> 00:10:26,360
yamo configurations so you just specify

00:10:22,910 --> 00:10:29,330
like the robot will transmit this topic

00:10:26,360 --> 00:10:31,940
to the server and the generator will

00:10:29,330 --> 00:10:35,930
generate the proper config files it's

00:10:31,940 --> 00:10:37,910
not yet released but we plan to do it as

00:10:35,930 --> 00:10:40,640
the whole system is highly modular we

00:10:37,910 --> 00:10:42,950
needed a tool that allows us launching

00:10:40,640 --> 00:10:45,320
just parts of the system we have a lot

00:10:42,950 --> 00:10:49,520
of drivers but not all of them need to

00:10:45,320 --> 00:10:52,310
be running at one time so we had the

00:10:49,520 --> 00:10:53,990
choice of either writing a big bunch of

00:10:52,310 --> 00:10:57,890
launch files for every possible

00:10:53,990 --> 00:10:59,660
situation or opening up 20 terminals and

00:10:57,890 --> 00:11:02,060
typing the launch commands in them

00:10:59,660 --> 00:11:03,649
neither of it was like good for us

00:11:02,060 --> 00:11:05,360
switch waited

00:11:03,649 --> 00:11:07,490
created this tool we call trader

00:11:05,360 --> 00:11:11,360
Orchestra it's again configured by some

00:11:07,490 --> 00:11:14,869
simple llamo files and it generates the

00:11:11,360 --> 00:11:16,369
set of windows you can see each column

00:11:14,869 --> 00:11:18,709
corresponds to one machine in the

00:11:16,369 --> 00:11:21,290
network and there are buttons which more

00:11:18,709 --> 00:11:23,360
or less corresponds to launch files so

00:11:21,290 --> 00:11:24,920
you click the buttons first time it

00:11:23,360 --> 00:11:28,309
starts the launch file if you click it a

00:11:24,920 --> 00:11:31,189
second time it kills it and you can see

00:11:28,309 --> 00:11:34,819
the red one that means the launch file

00:11:31,189 --> 00:11:37,970
has died for some reason and what showed

00:11:34,819 --> 00:11:40,790
to be quite useful to us is launching

00:11:37,970 --> 00:11:42,829
all of these files in separate screen

00:11:40,790 --> 00:11:45,290
sessions so it's something it gets wrong

00:11:42,829 --> 00:11:47,389
you SSH to the Machine open the screen

00:11:45,290 --> 00:11:51,350
session and you have just output of that

00:11:47,389 --> 00:11:52,910
one single failing point part and the

00:11:51,350 --> 00:11:54,610
output is not interleaved to the output

00:11:52,910 --> 00:11:57,829
of the other nodes

00:11:54,610 --> 00:11:59,449
you're sure it's like not the only way

00:11:57,829 --> 00:12:03,100
to solve this problem is today I've seen

00:11:59,449 --> 00:12:08,269
here like some more meta launching tools

00:12:03,100 --> 00:12:10,850
each of them was nice so we decided not

00:12:08,269 --> 00:12:12,920
to publicize this because we think it's

00:12:10,850 --> 00:12:15,800
too specific to our project but if you

00:12:12,920 --> 00:12:18,410
think it would be valuable to us to you

00:12:15,800 --> 00:12:23,089
come to us talk to us and we can share

00:12:18,410 --> 00:12:24,499
it having many attachable sensors is not

00:12:23,089 --> 00:12:27,740
only a problem and launching their

00:12:24,499 --> 00:12:31,610
drivers but also it's a problem for

00:12:27,740 --> 00:12:34,100
keeping an up-to-date 3d model so what

00:12:31,610 --> 00:12:36,649
we created or why do we need an accurate

00:12:34,100 --> 00:12:39,829
3d model that's for example for laser

00:12:36,649 --> 00:12:42,290
filtering camera image masking and also

00:12:39,829 --> 00:12:45,110
for the operators they're usually quite

00:12:42,290 --> 00:12:47,749
interested in the precise outer shape of

00:12:45,110 --> 00:12:51,559
the robot so we created this tool which

00:12:47,749 --> 00:12:55,579
takes and as input a sacrifice which is

00:12:51,559 --> 00:12:57,139
parameterized and depending on values of

00:12:55,579 --> 00:12:59,990
these parameters for example if the

00:12:57,139 --> 00:13:02,779
robot has or has not the robotic arm it

00:12:59,990 --> 00:13:06,709
generates a Urd a file that contains or

00:13:02,779 --> 00:13:09,319
does not contain the our model we found

00:13:06,709 --> 00:13:11,209
also quite useful to be able to change

00:13:09,319 --> 00:13:14,179
the model during runtime because we

00:13:11,209 --> 00:13:16,580
sometimes know that we forgot to attach

00:13:14,179 --> 00:13:18,080
some sensors so we quickly attached it

00:13:16,580 --> 00:13:20,600
and we don't want to restart the whole

00:13:18,080 --> 00:13:23,330
system to make it aware of that sensor

00:13:20,600 --> 00:13:25,220
so be connected with dynamic wreckin

00:13:23,330 --> 00:13:26,990
figure and you can change these like s

00:13:25,220 --> 00:13:30,410
arm or does not have arm parameters

00:13:26,990 --> 00:13:33,290
during runtime and the usual static

00:13:30,410 --> 00:13:34,820
robot description parameter is not

00:13:33,290 --> 00:13:36,620
sufficient for that so we created a

00:13:34,820 --> 00:13:38,420
dynamic version of that parameter and

00:13:36,620 --> 00:13:40,490
all the nodes that need to react to

00:13:38,420 --> 00:13:42,050
changes in the 3d model are subscribing

00:13:40,490 --> 00:13:45,260
to the dynamic changes in this parameter

00:13:42,050 --> 00:13:49,880
and they can update their internal order

00:13:45,260 --> 00:13:52,040
presentation with the new 3d model this

00:13:49,880 --> 00:13:54,260
is not yet released we are still not

00:13:52,040 --> 00:13:59,510
sure if it would be valuable for someone

00:13:54,260 --> 00:14:01,399
else another issue we faced was when we

00:13:59,510 --> 00:14:05,000
tried to simulate the attractor but we

00:14:01,399 --> 00:14:07,329
have we opened up gazebo we opened up

00:14:05,000 --> 00:14:10,040
other simulators and found out that

00:14:07,329 --> 00:14:12,110
there is no way to simulate a tractor

00:14:10,040 --> 00:14:14,329
about in a way that would be suitable

00:14:12,110 --> 00:14:18,079
for us so that the robot can overcome

00:14:14,329 --> 00:14:21,649
like difficult obstacles and so on

00:14:18,079 --> 00:14:24,610
so we created the we think a better

00:14:21,649 --> 00:14:27,620
model than all the available ones and

00:14:24,610 --> 00:14:29,810
compared this model to all the other

00:14:27,620 --> 00:14:33,200
models we have found in existing

00:14:29,810 --> 00:14:35,329
simulators or in the literature and it's

00:14:33,200 --> 00:14:37,070
a teaser for my Wednesday presentation

00:14:35,329 --> 00:14:39,160
at iris so if you're interested in this

00:14:37,070 --> 00:14:42,500
tractor what simulation come there and

00:14:39,160 --> 00:14:45,440
listen to me later or you can ask me

00:14:42,500 --> 00:14:47,300
anytime else and this for example

00:14:45,440 --> 00:14:51,860
enables us to do a reinforcement

00:14:47,300 --> 00:14:53,870
learning with the tracked platform as a

00:14:51,860 --> 00:14:56,029
zoom camera can be also attached to the

00:14:53,870 --> 00:14:58,310
robot we faced another problem and

00:14:56,029 --> 00:15:00,800
that's the liking support for zoom

00:14:58,310 --> 00:15:02,779
cameras in camera info manager so we

00:15:00,800 --> 00:15:04,670
took the Python version of it and added

00:15:02,779 --> 00:15:07,339
two approaches for zoom camera

00:15:04,670 --> 00:15:09,320
calibration the first like more proper

00:15:07,339 --> 00:15:11,810
approach is to calibrate the camera at

00:15:09,320 --> 00:15:13,699
several zoom levels and then interpolate

00:15:11,810 --> 00:15:16,670
the camara matrices between the closest

00:15:13,699 --> 00:15:18,680
to calibrate the levels or if your

00:15:16,670 --> 00:15:21,410
camera has like discrete steps for zoom

00:15:18,680 --> 00:15:23,899
you can calibrate all of them and the

00:15:21,410 --> 00:15:25,760
less proper or more coarse way is to

00:15:23,899 --> 00:15:28,430
just open up the manual of your camera

00:15:25,760 --> 00:15:29,449
and Lance read out the values like field

00:15:28,430 --> 00:15:31,399
of view and sensor

00:15:29,449 --> 00:15:33,769
sighs and put them in the script which

00:15:31,399 --> 00:15:35,829
generates like a very coarse calibration

00:15:33,769 --> 00:15:38,480
it might be sufficient for some uses but

00:15:35,829 --> 00:15:41,540
definitely not for rectifying the images

00:15:38,480 --> 00:15:43,519
for example the we found the integration

00:15:41,540 --> 00:15:45,199
of this interest packages is difficult

00:15:43,519 --> 00:15:49,129
because they usually don't expect camera

00:15:45,199 --> 00:15:51,679
info to change and c++ part is also not

00:15:49,129 --> 00:15:55,839
done so if you want to use it in C++

00:15:51,679 --> 00:15:58,910
the ideas are there but just in python

00:15:55,839 --> 00:16:01,399
um each robot can carry more than one

00:15:58,910 --> 00:16:04,339
pan tilt and maybe also zoom capable

00:16:01,399 --> 00:16:07,069
camera and we need it an interface where

00:16:04,339 --> 00:16:08,540
the single operator can view and control

00:16:07,069 --> 00:16:12,369
all the streams from be spun twelve

00:16:08,540 --> 00:16:16,189
cameras so we created this rqd widget on

00:16:12,369 --> 00:16:18,139
the left side or right side for you you

00:16:16,189 --> 00:16:20,059
see there's a dynamically updated list

00:16:18,139 --> 00:16:23,209
of cameras available right now at the

00:16:20,059 --> 00:16:25,519
system the operator can select the

00:16:23,209 --> 00:16:28,040
camera stream of interest by clicking in

00:16:25,519 --> 00:16:30,049
the camera image here issues like

00:16:28,040 --> 00:16:33,949
relative positioning commands for the

00:16:30,049 --> 00:16:37,160
pan tilt unit and in the lower part you

00:16:33,949 --> 00:16:40,749
see a 360 panoramic image which serves

00:16:37,160 --> 00:16:43,779
like an absolute positioning tool and

00:16:40,749 --> 00:16:46,789
yeah by clicking in that absolute

00:16:43,779 --> 00:16:48,470
panoramic image the operator issues the

00:16:46,789 --> 00:16:54,199
absolute positioning commands for the

00:16:48,470 --> 00:16:55,730
units the number of independent actors

00:16:54,199 --> 00:16:59,079
in the system brought us the completely

00:16:55,730 --> 00:17:01,429
new challenges and mission data storage

00:16:59,079 --> 00:17:03,949
of course if you have one or about you

00:17:01,429 --> 00:17:06,769
store data and back files that's ok but

00:17:03,949 --> 00:17:08,360
either if you have more robots and

00:17:06,769 --> 00:17:10,399
actors in the system like the human

00:17:08,360 --> 00:17:12,649
operators the speech recognition system

00:17:10,399 --> 00:17:14,870
and so on or if you want to access

00:17:12,649 --> 00:17:17,659
historical data during runtime of the

00:17:14,870 --> 00:17:19,429
same mission it's not sufficient for our

00:17:17,659 --> 00:17:20,870
it wasn't sufficient for us so we

00:17:19,429 --> 00:17:23,089
created this system of low level and

00:17:20,870 --> 00:17:26,329
high level database so basically the low

00:17:23,089 --> 00:17:28,039
level database is a MongoDB with support

00:17:26,329 --> 00:17:30,740
for large file storage for example

00:17:28,039 --> 00:17:33,049
camera streams all those nodes can put

00:17:30,740 --> 00:17:37,039
data in this database using some

00:17:33,049 --> 00:17:40,010
dedicated raus services and the data are

00:17:37,039 --> 00:17:41,690
stored there for later use then we have

00:17:40,010 --> 00:17:43,070
the middle layer which we call semantic

00:17:41,690 --> 00:17:46,880
modelers they are

00:17:43,070 --> 00:17:49,070
rust nodes which do not connect to the

00:17:46,880 --> 00:17:51,920
rust topics but instead to read data

00:17:49,070 --> 00:17:54,800
from the bowl of a DB and transform them

00:17:51,920 --> 00:17:56,690
into some semantic information as an

00:17:54,800 --> 00:17:58,760
example we have a lower level of fire

00:17:56,690 --> 00:18:01,310
detector which tells you at position X Y

00:17:58,760 --> 00:18:03,380
Z and time T there was a fire detected

00:18:01,310 --> 00:18:05,090
and we have to have 200 of these

00:18:03,380 --> 00:18:07,640
detection but we don't want to report

00:18:05,090 --> 00:18:09,560
200 fires to the firefighters we want to

00:18:07,640 --> 00:18:11,480
cluster these deductions to one big fire

00:18:09,560 --> 00:18:13,820
and that's exactly the task of the

00:18:11,480 --> 00:18:16,880
semantic modeler and so that one big

00:18:13,820 --> 00:18:18,830
fire is been reported and the last layer

00:18:16,880 --> 00:18:21,050
is the high level database which is

00:18:18,830 --> 00:18:23,420
sparkle DB with some ontology we've

00:18:21,050 --> 00:18:26,120
created or crafted for the search and

00:18:23,420 --> 00:18:28,310
rescue scenarios and this high level

00:18:26,120 --> 00:18:32,090
database then allows semantic question

00:18:28,310 --> 00:18:33,470
Aquarion and we use the goal framework

00:18:32,090 --> 00:18:35,840
to implement software agents

00:18:33,470 --> 00:18:40,130
deliberating about what's going on for

00:18:35,840 --> 00:18:42,050
example if the system or if the team

00:18:40,130 --> 00:18:43,910
leader gives commands to the UAV to fly

00:18:42,050 --> 00:18:46,100
somewhere and the system knows that the

00:18:43,910 --> 00:18:47,750
battery level of the UAV is too low it

00:18:46,100 --> 00:18:50,150
can burn the team leader that the task

00:18:47,750 --> 00:18:51,830
will not be possible to be fulfilled by

00:18:50,150 --> 00:18:53,450
this UAV and the team leader can then

00:18:51,830 --> 00:18:57,560
decide to assign the task to someone

00:18:53,450 --> 00:18:59,390
else for example most in this section

00:18:57,560 --> 00:19:02,060
I'd like to tell you about something I'm

00:18:59,390 --> 00:19:04,460
not sure I can recommend you to use but

00:19:02,060 --> 00:19:08,360
I still think it might be good to know

00:19:04,460 --> 00:19:09,770
it's there it's our easy to use way to

00:19:08,360 --> 00:19:14,180
use tensorflow

00:19:09,770 --> 00:19:16,610
in C++ and Ross so the problem was we

00:19:14,180 --> 00:19:18,530
wanted or we had some pre-trained graphs

00:19:16,610 --> 00:19:21,290
in tensorflow and we wanted to do

00:19:18,530 --> 00:19:24,500
inference on them on the robots but to

00:19:21,290 --> 00:19:26,750
do it in C++ you have to install the

00:19:24,500 --> 00:19:29,200
build system of tensorflow installed a

00:19:26,750 --> 00:19:33,560
lot of dependencies and the bill takes

00:19:29,200 --> 00:19:36,920
years maybe so we didn't wants to go all

00:19:33,560 --> 00:19:39,740
this way on the robots so instead we

00:19:36,920 --> 00:19:44,060
misuse the Python installed tensorflow

00:19:39,740 --> 00:19:46,100
library we created the set of C make

00:19:44,060 --> 00:19:47,990
scripts that locate this installed

00:19:46,100 --> 00:19:50,140
library on your computer so you just

00:19:47,990 --> 00:19:52,640
type pipe installed in their flow and

00:19:50,140 --> 00:19:55,220
the see Mike finds this installed

00:19:52,640 --> 00:19:56,810
library and then allows you to link

00:19:55,220 --> 00:19:59,300
against this library

00:19:56,810 --> 00:20:02,600
so it's quite easy to just write C++

00:19:59,300 --> 00:20:04,640
tensorflow inference code and then these

00:20:02,600 --> 00:20:07,040
15 lines of code enable you to build it

00:20:04,640 --> 00:20:08,780
in Ross it's definitely not good for

00:20:07,040 --> 00:20:11,870
training because the library Python

00:20:08,780 --> 00:20:14,150
installs is not optimized so it's not

00:20:11,870 --> 00:20:16,210
even including like sse2 instructions

00:20:14,150 --> 00:20:19,460
which are I don't know 10 years old so

00:20:16,210 --> 00:20:21,290
the inference isn't fast but if you have

00:20:19,460 --> 00:20:26,300
like some simpler graphs it might help

00:20:21,290 --> 00:20:27,800
you and now the floor is search us and

00:20:26,300 --> 00:20:32,840
he'll tell you something about the more

00:20:27,800 --> 00:20:34,460
advanced functionalities hi everyone so

00:20:32,840 --> 00:20:37,670
I'm gonna give you just a quick overview

00:20:34,460 --> 00:20:40,610
of some of the many function lines we

00:20:37,670 --> 00:20:42,440
develop in trader

00:20:40,610 --> 00:20:44,780
we're designed to address some of the

00:20:42,440 --> 00:20:47,030
many problems we encountered doing we

00:20:44,780 --> 00:20:50,590
our deployment of robots and that

00:20:47,030 --> 00:20:52,970
somehow motivated our research efforts

00:20:50,590 --> 00:20:54,730
scientific contribution introduced spans

00:20:52,970 --> 00:20:57,620
on many different areas from

00:20:54,730 --> 00:21:01,430
manipulation to vision to move the robot

00:20:57,620 --> 00:21:04,370
collaboration to control so I will start

00:21:01,430 --> 00:21:07,550
with mapping so as we said trade is a

00:21:04,370 --> 00:21:10,040
team oriented project so we have teams

00:21:07,550 --> 00:21:12,950
of vgb UAVs and humans sharing

00:21:10,040 --> 00:21:14,840
information collaborating so in this

00:21:12,950 --> 00:21:18,950
work we merge information coming from

00:21:14,840 --> 00:21:22,130
different ug bees into a into the same

00:21:18,950 --> 00:21:24,020
map so we have in this image three

00:21:22,130 --> 00:21:25,430
trajectories of robots you can see the

00:21:24,020 --> 00:21:27,650
red one the green one and the yellow one

00:21:25,430 --> 00:21:29,420
these are three ug bees that are

00:21:27,650 --> 00:21:31,970
exploring different areas of the map and

00:21:29,420 --> 00:21:34,730
then we we build this common

00:21:31,970 --> 00:21:37,760
representation which is the white one on

00:21:34,730 --> 00:21:39,650
real-time on CPU so this is publicly

00:21:37,760 --> 00:21:42,200
available you can check the code over

00:21:39,650 --> 00:21:43,880
there we are not going to go more in

00:21:42,200 --> 00:21:46,970
details because this will be presenting

00:21:43,880 --> 00:21:50,450
during iris so feel free to come and ask

00:21:46,970 --> 00:21:53,290
questions there so information comes not

00:21:50,450 --> 00:21:55,940
only from ug bees but also from UA bees

00:21:53,290 --> 00:21:57,920
so in this other work that will be

00:21:55,940 --> 00:22:00,470
presented our asses are are in Shanghai

00:21:57,920 --> 00:22:03,470
soon we not only merge ground

00:22:00,470 --> 00:22:07,330
information coming from the ug beer so

00:22:03,470 --> 00:22:11,230
lighter point clouds but we also merge

00:22:07,330 --> 00:22:14,020
arian trek instructions basically highly

00:22:11,230 --> 00:22:16,000
abused of the of the scene together so

00:22:14,020 --> 00:22:18,150
I'm not gonna go in details on this one

00:22:16,000 --> 00:22:21,580
to feel free to ask questions later

00:22:18,150 --> 00:22:24,190
so the problem with this kind of when

00:22:21,580 --> 00:22:26,470
having multiple ug B's and when we have

00:22:24,190 --> 00:22:28,690
a search rescue operation is how to

00:22:26,470 --> 00:22:31,720
optimize the time that we have so to

00:22:28,690 --> 00:22:33,790
explore a wide area so if we deal with

00:22:31,720 --> 00:22:36,850
situation when we actually have to act

00:22:33,790 --> 00:22:38,520
in a very very short time we don't want

00:22:36,850 --> 00:22:40,750
to send two robots exploring the same

00:22:38,520 --> 00:22:43,840
region of the map we want to optimize

00:22:40,750 --> 00:22:45,910
this so we we implemented this freedom

00:22:43,840 --> 00:22:48,430
multi robot path planning for patrolling

00:22:45,910 --> 00:22:50,440
it works in pretties or even with maps

00:22:48,430 --> 00:22:52,510
with multiple floors and with complex

00:22:50,440 --> 00:22:55,030
environments so it's based on a two

00:22:52,510 --> 00:22:56,650
level decision-making architecture so

00:22:55,030 --> 00:22:59,470
the first one is a topological level

00:22:56,650 --> 00:23:01,980
where robot cooperate to distributes

00:22:59,470 --> 00:23:06,220
over the graph in order to minimize the

00:23:01,980 --> 00:23:08,440
average node hide earnest and the second

00:23:06,220 --> 00:23:10,270
one is just a metric level basically

00:23:08,440 --> 00:23:13,300
takes into account the geometry of the

00:23:10,270 --> 00:23:16,390
map so roughness of the terrain obstacle

00:23:13,300 --> 00:23:20,710
and so on in order to constantly

00:23:16,390 --> 00:23:23,290
remapping traversable path to the goal

00:23:20,710 --> 00:23:25,720
to the good position taking the account

00:23:23,290 --> 00:23:29,200
also location of other robots another 15

00:23:25,720 --> 00:23:31,270
members so this mean will be available

00:23:29,200 --> 00:23:36,430
soon if you want it's all in rows if you

00:23:31,270 --> 00:23:38,620
want to check it out as well so on a

00:23:36,430 --> 00:23:40,750
different problem so communication

00:23:38,620 --> 00:23:42,550
wireless communication is problematic we

00:23:40,750 --> 00:23:47,050
know that we have seen this one in other

00:23:42,550 --> 00:23:48,610
talks so searching rescue robots really

00:23:47,050 --> 00:23:51,130
require stable communication with the

00:23:48,610 --> 00:23:53,200
base station no matter if the robot is

00:23:51,130 --> 00:23:55,060
delivered or not because we always want

00:23:53,200 --> 00:23:56,860
a constant video feed we want to know

00:23:55,060 --> 00:23:58,240
what's happening on the robot location

00:23:56,860 --> 00:24:00,040
during a surgery rescue operation if

00:23:58,240 --> 00:24:04,980
there are victims we want to send a cert

00:24:00,040 --> 00:24:07,510
rescue team ASAP so unfortunately

00:24:04,980 --> 00:24:09,160
stochastic element the radio signal

00:24:07,510 --> 00:24:10,150
propagation like shattering a multipath

00:24:09,160 --> 00:24:12,730
fading

00:24:10,150 --> 00:24:14,590
leads to signal loss and then what

00:24:12,730 --> 00:24:16,690
happened to our search so a rescue

00:24:14,590 --> 00:24:18,790
robots is that insider abandoned if it

00:24:16,690 --> 00:24:20,050
lose signal or it tries to back-trace

00:24:18,790 --> 00:24:21,720
the weight to the

00:24:20,050 --> 00:24:24,550
a station which is not always possible

00:24:21,720 --> 00:24:27,880
because the access point is moved around

00:24:24,550 --> 00:24:29,620
many times or the map changes so we try

00:24:27,880 --> 00:24:32,740
to do this resilient communication aware

00:24:29,620 --> 00:24:34,960
motion planner that basically is a

00:24:32,740 --> 00:24:36,640
system that allows to dynamically online

00:24:34,960 --> 00:24:38,710
map the radio signal strength

00:24:36,640 --> 00:24:41,320
distribution over the geometric map and

00:24:38,710 --> 00:24:44,890
adapt to changes in the reducing and

00:24:41,320 --> 00:24:47,050
distribution and it also proposes a self

00:24:44,890 --> 00:24:48,760
repair strategy in case the robot lose

00:24:47,050 --> 00:24:52,230
connection so it brings the robot back

00:24:48,760 --> 00:24:55,990
to a connection safe location this is

00:24:52,230 --> 00:24:58,630
how the system works with a we have this

00:24:55,990 --> 00:25:01,660
ugv that is exploring this very small

00:24:58,630 --> 00:25:03,460
area so the green points are the

00:25:01,660 --> 00:25:04,570
traversable points the robot smacking

00:25:03,460 --> 00:25:07,930
map in the environment

00:25:04,570 --> 00:25:10,540
red one are obstacles at the same time

00:25:07,930 --> 00:25:12,850
the robot is building the Wi-Fi

00:25:10,540 --> 00:25:16,890
distribution environment so you see this

00:25:12,850 --> 00:25:19,990
bell overlapping the map red regions are

00:25:16,890 --> 00:25:21,940
not connected area yellow one are poorly

00:25:19,990 --> 00:25:23,920
connected areas and blue ones are very

00:25:21,940 --> 00:25:25,540
well connected areas that yellow

00:25:23,920 --> 00:25:27,790
blinking thing over there is the access

00:25:25,540 --> 00:25:29,080
point so if it's at some point we select

00:25:27,790 --> 00:25:30,550
a point in the map and the robot

00:25:29,080 --> 00:25:33,280
astronomers think go there

00:25:30,550 --> 00:25:35,800
it doesn't choose the shortest path to

00:25:33,280 --> 00:25:37,510
the destination but it goes towards a

00:25:35,800 --> 00:25:39,880
location that is very well connected so

00:25:37,510 --> 00:25:42,130
we try to avoid signal loss at the same

00:25:39,880 --> 00:25:45,190
time we can rest a blush connection if

00:25:42,130 --> 00:25:48,670
the robot mistakenly goes on a non

00:25:45,190 --> 00:25:51,100
connected area finally another big

00:25:48,670 --> 00:25:53,530
problem in such a rescue robotics is the

00:25:51,100 --> 00:25:55,870
control of multi degree of freedom of

00:25:53,530 --> 00:25:58,600
ball manipulator this is a very tricky

00:25:55,870 --> 00:25:59,920
task not only in such risky robotics but

00:25:58,600 --> 00:26:02,140
especially there because we have very

00:25:59,920 --> 00:26:04,330
strict time constraints not so skilled

00:26:02,140 --> 00:26:07,500
users and limited field of view delays

00:26:04,330 --> 00:26:09,730
constant delays so our solution was to

00:26:07,500 --> 00:26:14,050
additionally the Cartesian arm control

00:26:09,730 --> 00:26:15,700
so we basically try to detect samples on

00:26:14,050 --> 00:26:17,440
the environment and then we guide the

00:26:15,700 --> 00:26:19,510
arm towards the sample and then we let

00:26:17,440 --> 00:26:22,630
the user just do a small adjustment and

00:26:19,510 --> 00:26:24,610
finally big dissembles so these were

00:26:22,630 --> 00:26:26,110
just a few of the many functionalities

00:26:24,610 --> 00:26:27,790
we don't have time to go over all of

00:26:26,110 --> 00:26:29,730
them feel free to ask questions later

00:26:27,790 --> 00:26:33,930
and check our website and I'll let

00:26:29,730 --> 00:26:33,930
martin conclude with the address section

00:26:33,970 --> 00:26:39,950
thanks Sergio and now it's time for the

00:26:36,919 --> 00:26:42,639
funny or maybe not that funny Hardware

00:26:39,950 --> 00:26:46,759
experience section depends on you

00:26:42,639 --> 00:26:49,070
so USB cameras raise your hand who a few

00:26:46,759 --> 00:26:52,299
have used USB cameras on your robot and

00:26:49,070 --> 00:26:56,450
they worked like a charm

00:26:52,299 --> 00:26:58,820
perfect so it's not just that we would

00:26:56,450 --> 00:27:00,799
be unlucky in our selection but maybe

00:26:58,820 --> 00:27:02,299
it's just a general property of USB

00:27:00,799 --> 00:27:05,960
cameras in Linux

00:27:02,299 --> 00:27:08,480
I don't know nevertheless we wanted to

00:27:05,960 --> 00:27:10,730
somehow summarize our experience during

00:27:08,480 --> 00:27:13,340
the four years and many sensors we have

00:27:10,730 --> 00:27:15,860
tried so if you would be selecting a new

00:27:13,340 --> 00:27:18,379
USB camera there's this to-do list like

00:27:15,860 --> 00:27:20,960
check it's supported by the Linux kernel

00:27:18,379 --> 00:27:22,999
you don't have to build it into the

00:27:20,960 --> 00:27:25,070
kernel but it's really there and that it

00:27:22,999 --> 00:27:28,549
doesn't for example crash your kernel

00:27:25,070 --> 00:27:30,350
after some time of use then check its

00:27:28,549 --> 00:27:32,559
supported by rows which a lot of cameras

00:27:30,350 --> 00:27:36,889
are but still it's it's a good check and

00:27:32,559 --> 00:27:38,869
last do not connect the camera to your

00:27:36,889 --> 00:27:42,220
laptop when testing it connected

00:27:38,869 --> 00:27:45,950
directly to the robot running on battery

00:27:42,220 --> 00:27:47,899
running a stress test and then assess

00:27:45,950 --> 00:27:49,700
the performance of the camera we had one

00:27:47,899 --> 00:27:51,860
camera that was really nice

00:27:49,700 --> 00:27:53,720
connected to laptop but connected on the

00:27:51,860 --> 00:27:59,330
battery powered robot it gave us one

00:27:53,720 --> 00:28:00,889
picture in five seconds and when we

00:27:59,330 --> 00:28:02,899
would be so lucky to design a new robot

00:28:00,889 --> 00:28:04,249
we would make sure it has enough USB 3

00:28:02,899 --> 00:28:06,889
ports directly on the motherboard

00:28:04,249 --> 00:28:08,210
without any extender cables that we are

00:28:06,889 --> 00:28:11,690
able to screw the cables to the

00:28:08,210 --> 00:28:13,789
motherboard and if the motherboard has

00:28:11,690 --> 00:28:15,950
some USB 2 port we would make sure they

00:28:13,789 --> 00:28:17,720
get more than half the amp power that's

00:28:15,950 --> 00:28:19,460
in the standard because for example a

00:28:17,720 --> 00:28:21,470
section pro sometimes there was more

00:28:19,460 --> 00:28:25,429
than the half amp and if it's not there

00:28:21,470 --> 00:28:27,440
it just dies maybe that's just a dream

00:28:25,429 --> 00:28:29,450
but we would like to have a USB bus for

00:28:27,440 --> 00:28:32,139
every port because some devices don't

00:28:29,450 --> 00:28:36,220
like each other on the same bus whatever

00:28:32,139 --> 00:28:38,389
if you wants to read like the particular

00:28:36,220 --> 00:28:40,100
experience with all the sensors we have

00:28:38,389 --> 00:28:42,409
tried you can read it later

00:28:40,100 --> 00:28:44,360
I will not go go through it right now

00:28:42,409 --> 00:28:45,860
the link to the presentation is in the

00:28:44,360 --> 00:28:49,370
upper corner

00:28:45,860 --> 00:28:51,950
so you can review that later okay

00:28:49,370 --> 00:28:54,620
our experience with wireless

00:28:51,950 --> 00:28:58,940
communications is better though

00:28:54,620 --> 00:29:00,919
we started with 2.4 gigahertz Wi-Fi it

00:28:58,940 --> 00:29:03,740
didn't work the bandwidth is just not

00:29:00,919 --> 00:29:06,049
quite good enough for us and you know

00:29:03,740 --> 00:29:08,539
the spectrum is usually too crowded so

00:29:06,049 --> 00:29:10,669
we switched to 5 gigahertz Wi-Fi with

00:29:08,539 --> 00:29:14,720
some like powerful antennas and so on

00:29:10,669 --> 00:29:17,480
but still in the legal area and we are

00:29:14,720 --> 00:29:20,720
quite nicely surprised even like 200

00:29:17,480 --> 00:29:22,700
meters away from the base station we got

00:29:20,720 --> 00:29:24,649
the reception about like 20 megabits per

00:29:22,700 --> 00:29:26,720
second when the robots are closer we get

00:29:24,649 --> 00:29:28,779
up to 100 megabits per second with

00:29:26,720 --> 00:29:31,309
multiple robots in the fields together

00:29:28,779 --> 00:29:34,190
so it's really nice it even worked in a

00:29:31,309 --> 00:29:36,590
furnace which was like walls made of

00:29:34,190 --> 00:29:39,889
five centimeter of steel and it still

00:29:36,590 --> 00:29:42,169
worried are right but then we got in

00:29:39,889 --> 00:29:44,809
touch and just in short starts with a

00:29:42,169 --> 00:29:47,960
military-grade radio based mesh network

00:29:44,809 --> 00:29:50,990
that was awesome 42 megabits per second

00:29:47,960 --> 00:29:56,779
for half a kilometer Wow but it's

00:29:50,990 --> 00:29:59,630
illegal and recently we've also created

00:29:56,779 --> 00:30:02,659
a custom like emergency radio link which

00:29:59,630 --> 00:30:04,580
is quite slow 200 bits per second but it

00:30:02,659 --> 00:30:06,110
works up to half a kilometer and we can

00:30:04,580 --> 00:30:09,049
send some emergency commands to the

00:30:06,110 --> 00:30:11,419
robot over it or we can request like an

00:30:09,049 --> 00:30:13,760
emergency video stream which means like

00:30:11,419 --> 00:30:15,380
one picture in one minute for example to

00:30:13,760 --> 00:30:19,760
just know what happens to the robot when

00:30:15,380 --> 00:30:22,309
it lost its Wi-Fi connection again you

00:30:19,760 --> 00:30:26,899
can later read the particular hardware

00:30:22,309 --> 00:30:28,880
we use or we have been using last in

00:30:26,899 --> 00:30:31,450
this section I describe our experience

00:30:28,880 --> 00:30:33,740
with the lidar sand depth sensors

00:30:31,450 --> 00:30:36,740
because they can also be another source

00:30:33,740 --> 00:30:38,389
of problems you're using them too for

00:30:36,740 --> 00:30:41,240
several purposes who he wants to do

00:30:38,389 --> 00:30:43,669
metric mapping we wants to use some

00:30:41,240 --> 00:30:45,409
reactive control our algorithms taking

00:30:43,669 --> 00:30:49,639
into account the 3d environment of

00:30:45,409 --> 00:30:51,889
durable and last but not least there

00:30:49,639 --> 00:30:54,440
also the the scans are also useful to

00:30:51,889 --> 00:30:55,669
the operators when they need to tell our

00:30:54,440 --> 00:30:57,860
priority robot through some narrow

00:30:55,669 --> 00:30:58,559
passage they really like to use our race

00:30:57,860 --> 00:31:01,610
and

00:30:58,559 --> 00:31:03,809
around ER about how to traverse the path

00:31:01,610 --> 00:31:06,360
but each of these uses requires a

00:31:03,809 --> 00:31:09,149
different quality or type of the point

00:31:06,360 --> 00:31:14,490
plans so we use multiple sensors on the

00:31:09,149 --> 00:31:17,909
robot first what's always there is the

00:31:14,490 --> 00:31:20,700
rotating SiC LMS laser scanner which is

00:31:17,909 --> 00:31:23,929
a 2d laser scanner we had to add this

00:31:20,700 --> 00:31:27,269
rotation mechanism which keeps breaking

00:31:23,929 --> 00:31:31,619
but when it works it provides us nice 3d

00:31:27,269 --> 00:31:34,110
scans up to 50 meters outdoor perfect

00:31:31,619 --> 00:31:36,509
but just the mechanical tilting is a

00:31:34,110 --> 00:31:37,860
problem you would like to get rid of it

00:31:36,509 --> 00:31:41,369
but we still haven't find like a

00:31:37,860 --> 00:31:43,830
suitable alternative non moving and we

00:31:41,369 --> 00:31:45,779
are quite looking forward for the solid

00:31:43,830 --> 00:31:48,029
state leaders we even had like some

00:31:45,779 --> 00:31:50,279
ideas about how to do better mapping

00:31:48,029 --> 00:31:51,809
with them even though they're not there

00:31:50,279 --> 00:31:54,360
yet

00:31:51,809 --> 00:31:56,269
we also tried a section pro which you

00:31:54,360 --> 00:31:59,059
probably know works very well with Ross

00:31:56,269 --> 00:32:02,879
but it's probably superseded by the

00:31:59,059 --> 00:32:06,749
intel realsense series we got in touch

00:32:02,879 --> 00:32:10,529
with the are 200 which structured light

00:32:06,749 --> 00:32:11,039
plus a stereo onboard which is nice it

00:32:10,529 --> 00:32:14,549
works

00:32:11,039 --> 00:32:16,769
indoor/outdoor up to maybe 20 meters but

00:32:14,549 --> 00:32:19,019
we just noticed that the variance in

00:32:16,769 --> 00:32:21,389
depth measurements is quite high for us

00:32:19,019 --> 00:32:24,899
maybe it's just like we can't configure

00:32:21,389 --> 00:32:26,970
it correctly but the variance in 5

00:32:24,899 --> 00:32:32,850
meters were for was for example 1 meter

00:32:26,970 --> 00:32:37,049
for us it's some occasions and now we

00:32:32,850 --> 00:32:38,580
can reveal the secret section so even

00:32:37,049 --> 00:32:42,299
though we had all these problems you

00:32:38,580 --> 00:32:44,610
have heard about and the environments

00:32:42,299 --> 00:32:46,860
are quite unfriendly and we have to

00:32:44,610 --> 00:32:50,029
shift the system towards the end user

00:32:46,860 --> 00:32:52,399
needs instead of the programmers needs

00:32:50,029 --> 00:32:56,309
we were able to actually use it in

00:32:52,399 --> 00:32:58,289
reality so we had a real deployment of

00:32:56,309 --> 00:33:02,429
the system in a much richer initially

00:32:58,289 --> 00:33:05,840
last year there was a strong earthquake

00:33:02,429 --> 00:33:09,330
which killed almost 300 people and

00:33:05,840 --> 00:33:12,000
totally destroyed the city and there are

00:33:09,330 --> 00:33:14,280
two churches that were quite

00:33:12,000 --> 00:33:16,890
damaged by the earthquake but still

00:33:14,280 --> 00:33:19,320
standing and the firefighters asked us

00:33:16,890 --> 00:33:21,270
to do some structural assessment of

00:33:19,320 --> 00:33:24,060
these churches both from outside and

00:33:21,270 --> 00:33:26,640
inside so that they can then decide

00:33:24,060 --> 00:33:28,350
about what to do next to these churches

00:33:26,640 --> 00:33:31,680
if they can be repaired or if they

00:33:28,350 --> 00:33:34,860
should tear them down so we took both

00:33:31,680 --> 00:33:38,250
the ground and aerial robots and first

00:33:34,860 --> 00:33:40,590
the aerial robots did this overview of

00:33:38,250 --> 00:33:42,920
the area then they flew inside the

00:33:40,590 --> 00:33:45,930
church actually which was quite

00:33:42,920 --> 00:33:48,630
complicated we used like the views from

00:33:45,930 --> 00:33:51,300
free aerial robots to get the one area

00:33:48,630 --> 00:33:54,570
or about inside just be sure that it

00:33:51,300 --> 00:33:56,550
doesn't crash and then when we knew how

00:33:54,570 --> 00:33:59,580
does it look from the inside like from

00:33:56,550 --> 00:34:03,420
the overview area we send the ground

00:33:59,580 --> 00:34:06,590
robots inside doing the detailed 3d maps

00:34:03,420 --> 00:34:09,629
using the rotating laser scanner and

00:34:06,590 --> 00:34:11,250
they were celebrated there was like no

00:34:09,629 --> 00:34:13,020
autonomy in this mission because we

00:34:11,250 --> 00:34:16,139
really did not want to lose the robots

00:34:13,020 --> 00:34:18,419
inside the church but still the data the

00:34:16,139 --> 00:34:23,550
robots created were quite useful for the

00:34:18,419 --> 00:34:26,010
firefighters and here you can see a

00:34:23,550 --> 00:34:30,389
structure from motion reconstruction on

00:34:26,010 --> 00:34:34,370
one of the churches and this is the

00:34:30,389 --> 00:34:34,370
inside reconstruction

00:34:38,560 --> 00:34:44,290
okay so this was all from our side

00:34:41,700 --> 00:34:46,179
here's a bunch of links for you we have

00:34:44,290 --> 00:34:50,530
released some of the software I've

00:34:46,179 --> 00:34:52,450
talked about or Sergio talked about be

00:34:50,530 --> 00:34:54,580
sure to check out our YouTube channel

00:34:52,450 --> 00:34:56,670
there's a lot of videos either from the

00:34:54,580 --> 00:34:59,860
training mission or from the real

00:34:56,670 --> 00:35:02,470
deployment imatra chair and we've also

00:34:59,860 --> 00:35:04,870
released some search-and-rescue datasets

00:35:02,470 --> 00:35:07,720
which might be also interesting

00:35:04,870 --> 00:35:10,240
interesting for you so thanks for

00:35:07,720 --> 00:35:10,870
attention and that was time for

00:35:10,240 --> 00:35:18,580
questions

00:35:10,870 --> 00:35:19,450
a writer for those of you who want to

00:35:18,580 --> 00:35:20,710
come questions we got the two

00:35:19,450 --> 00:35:23,080
microphones please come and speak to

00:35:20,710 --> 00:35:25,270
them so the recordings and live stream

00:35:23,080 --> 00:35:27,640
can hear you

00:35:25,270 --> 00:35:29,620
what kind of operator control unit were

00:35:27,640 --> 00:35:31,840
you using I saw there was like a screen

00:35:29,620 --> 00:35:33,730
but it didn't look like a laptop was

00:35:31,840 --> 00:35:35,890
were using just a laptop to control the

00:35:33,730 --> 00:35:38,500
robot remotely no we're using the

00:35:35,890 --> 00:35:42,760
original budget tech gamepads

00:35:38,500 --> 00:35:44,740
or Microsoft gamepads okay and my second

00:35:42,760 --> 00:35:46,510
question is so when you were using the

00:35:44,740 --> 00:35:48,130
laser inside there was a lot of trouble

00:35:46,510 --> 00:35:50,170
did you have issues with scratches on

00:35:48,130 --> 00:35:51,820
the laser or something like that

00:35:50,170 --> 00:35:53,770
the laser getting damaged and did you

00:35:51,820 --> 00:35:56,530
take protective measures for that well

00:35:53,770 --> 00:35:58,240
the operators to utmost care not

00:35:56,530 --> 00:36:00,670
damaging the laser scanner and I think

00:35:58,240 --> 00:36:02,950
it's also like very well positioned on

00:36:00,670 --> 00:36:05,350
the body of durable so that there about

00:36:02,950 --> 00:36:08,010
the crashes in to evolve the laser

00:36:05,350 --> 00:36:10,660
scanner is protected by the tracks okay

00:36:08,010 --> 00:36:15,010
but of course like if you bump into a

00:36:10,660 --> 00:36:19,350
rock it can get damaged and but but it's

00:36:15,010 --> 00:36:19,350
quite like industrial so so it lasts

00:36:19,860 --> 00:36:26,400
what software have you used for the

00:36:22,720 --> 00:36:26,400
reconstruction of the point loads

00:36:27,570 --> 00:36:33,700
churches here and looked really nice

00:36:31,260 --> 00:36:35,920
yeah so it's called Sigma Chi's

00:36:33,700 --> 00:36:40,690
available it's on the slides so there

00:36:35,920 --> 00:36:44,250
will be released and it was developed by

00:36:40,690 --> 00:36:44,250
ETH is just a SP base

00:36:46,080 --> 00:36:54,120
okay any more questions if not let's

00:36:49,420 --> 00:36:54,120

YouTube URL: https://www.youtube.com/watch?v=_J41lWXmKAo


