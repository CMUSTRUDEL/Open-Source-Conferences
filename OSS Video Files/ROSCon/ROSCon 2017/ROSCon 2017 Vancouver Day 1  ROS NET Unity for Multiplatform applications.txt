Title: ROSCon 2017 Vancouver Day 1  ROS NET Unity for Multiplatform applications
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:00,740 --> 00:00:04,560
hello everyone my name is Jordan Oswald

00:00:03,240 --> 00:00:06,569
I'm from the University of Massachusetts

00:00:04,560 --> 00:00:08,670
Lowell and I worked on this project

00:00:06,569 --> 00:00:10,380
along with Carlos de Bariloche as in

00:00:08,670 --> 00:00:12,929
Erik McCann who are also on the minds

00:00:10,380 --> 00:00:15,690
from Nestle and we actually work in a

00:00:12,929 --> 00:00:17,250
human robot interaction lab so we do a

00:00:15,690 --> 00:00:19,770
couple of different things a lot of what

00:00:17,250 --> 00:00:21,330
we do is we acquire new devices whether

00:00:19,770 --> 00:00:22,980
they're new sensors we're applying onto

00:00:21,330 --> 00:00:26,130
robots to do some sort of autonomous

00:00:22,980 --> 00:00:29,490
behavior or oftentimes it's new kind of

00:00:26,130 --> 00:00:32,369
like human interaction elements things

00:00:29,490 --> 00:00:34,920
like new touchscreen devices or kind of

00:00:32,369 --> 00:00:37,170
things along that line and a big problem

00:00:34,920 --> 00:00:38,760
we've had for quite a number of years

00:00:37,170 --> 00:00:40,980
now is a lot of times these devices that

00:00:38,760 --> 00:00:44,280
we get that our consumer devices aren't

00:00:40,980 --> 00:00:46,530
easily usable on Linux and oftentimes

00:00:44,280 --> 00:00:47,910
their windows only drivers or just the

00:00:46,530 --> 00:00:50,309
support is much better for windows

00:00:47,910 --> 00:00:51,690
things like that and so kind of one of

00:00:50,309 --> 00:00:54,800
the things that we started doing a long

00:00:51,690 --> 00:00:57,780
time ago is we worked on Ross dotnet

00:00:54,800 --> 00:01:00,390
which is a series of c-sharp projects

00:00:57,780 --> 00:01:02,850
that allow you to do manage net code to

00:01:00,390 --> 00:01:04,409
communicate with Ross notes initially we

00:01:02,850 --> 00:01:07,290
were using this primarily for a lot of

00:01:04,409 --> 00:01:08,549
Windows interfaces building user

00:01:07,290 --> 00:01:10,470
interfaces for controlling different

00:01:08,549 --> 00:01:12,330
robots mainly differential steering

00:01:10,470 --> 00:01:14,040
robots but we've actually branched it

00:01:12,330 --> 00:01:16,920
out to use a number of different types

00:01:14,040 --> 00:01:18,810
of projects before I have a couple

00:01:16,920 --> 00:01:21,750
examples of things that I'm going to

00:01:18,810 --> 00:01:23,729
give specific lis but kind of a what

00:01:21,750 --> 00:01:26,310
Ross thought net has so there's

00:01:23,729 --> 00:01:28,409
publishers and subscribers parameter

00:01:26,310 --> 00:01:29,610
services custom messages basically all

00:01:28,409 --> 00:01:33,930
of the things that you would need for a

00:01:29,610 --> 00:01:35,400
core Ross program and as some samples we

00:01:33,930 --> 00:01:37,770
have is we have a compressed image view

00:01:35,400 --> 00:01:41,040
point cloud laser scan visualization you

00:01:37,770 --> 00:01:42,210
RDF dynamic reconfigure and TF tools for

00:01:41,040 --> 00:01:44,729
being able to do a lot of the stuff you

00:01:42,210 --> 00:01:46,409
can natively with Ross like getting

00:01:44,729 --> 00:01:46,850
transformed some frames and rendering

00:01:46,409 --> 00:01:50,520
stuff

00:01:46,850 --> 00:01:54,869
and this is an example of c-sharp syntax

00:01:50,520 --> 00:01:56,909
for using creating a publisher and all

00:01:54,869 --> 00:02:01,799
of you that are familiar with Ross this

00:01:56,909 --> 00:02:03,840
is very similar syntax and kind of we

00:02:01,799 --> 00:02:05,460
kind of we originally started working on

00:02:03,840 --> 00:02:08,069
Ross dotnet five years ago and we

00:02:05,460 --> 00:02:11,550
actually put it over to unity because

00:02:08,069 --> 00:02:13,930
unity has a c-sharp beckoned and this

00:02:11,550 --> 00:02:17,209
kind of is getting into the crux of

00:02:13,930 --> 00:02:18,890
wine here so reason why we were looking

00:02:17,209 --> 00:02:21,230
at using unity is some devices only

00:02:18,890 --> 00:02:22,940
support windows and a specific example

00:02:21,230 --> 00:02:26,540
of this would be the HTC vive when it

00:02:22,940 --> 00:02:28,310
originally came out and also some

00:02:26,540 --> 00:02:30,980
devices even if they do support multiple

00:02:28,310 --> 00:02:34,520
platforms unity is a common target for

00:02:30,980 --> 00:02:37,340
them in unity has deployment for Windows

00:02:34,520 --> 00:02:39,080
Linux Mac OS Android iOS and you can

00:02:37,340 --> 00:02:42,489
quickly utilize 3d graphic capabilities

00:02:39,080 --> 00:02:46,280
so the kind of dish feel is whoops sorry

00:02:42,489 --> 00:02:47,709
if you are interested in using unity we

00:02:46,280 --> 00:02:50,390
have a way to integrate with Ross and

00:02:47,709 --> 00:02:51,739
kind of I have an example using HTC vive

00:02:50,390 --> 00:02:53,739
for those that aren't familiar it's a

00:02:51,739 --> 00:02:56,840
virtual reality headset you can put on

00:02:53,739 --> 00:03:00,110
and here you see an example so you

00:02:56,840 --> 00:03:02,330
actually saw Valkyrie in the talk just a

00:03:00,110 --> 00:03:04,910
little bit ago but this is me wearing

00:03:02,330 --> 00:03:08,330
the HTC vive controlling Valkyrie so I'm

00:03:04,910 --> 00:03:10,340
using Windows net rendering au r DF that

00:03:08,330 --> 00:03:11,690
I've built from the TF tree so I'm

00:03:10,340 --> 00:03:14,150
updating the TF tree in real time from

00:03:11,690 --> 00:03:16,519
the robot and I'm sending commands from

00:03:14,150 --> 00:03:21,290
windows land to Ross just using normal

00:03:16,519 --> 00:03:23,120
Ross topics we also have ability to do

00:03:21,290 --> 00:03:27,470
stuff like point clouds and images and

00:03:23,120 --> 00:03:28,519
that kind of thing and these two URLs if

00:03:27,470 --> 00:03:30,170
you're interested in taking a look at

00:03:28,519 --> 00:03:32,390
Ross done net whether it's a contributor

00:03:30,170 --> 00:03:33,950
or using it we have frost on it and then

00:03:32,390 --> 00:03:35,840
additional little step for just getting

00:03:33,950 --> 00:03:37,400
it to work with unity and we do have a

00:03:35,840 --> 00:03:39,340
poster and will be other in this session

00:03:37,400 --> 00:03:45,020
so thanks a lot

00:03:39,340 --> 00:03:45,020

YouTube URL: https://www.youtube.com/watch?v=Qx0JSD6a4Cs


