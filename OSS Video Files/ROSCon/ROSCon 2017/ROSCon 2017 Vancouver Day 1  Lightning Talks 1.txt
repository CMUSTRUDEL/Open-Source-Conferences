Title: ROSCon 2017 Vancouver Day 1  Lightning Talks 1
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:04,339 --> 00:00:08,730
I'm with the University of

00:00:06,120 --> 00:00:12,120
nebraska-lincoln freaky units is a

00:00:08,730 --> 00:00:14,580
command-line compiler time tool that

00:00:12,120 --> 00:00:20,449
performs dimensional analysis on Ross

00:00:14,580 --> 00:00:24,449
C++ files software has entered an age of

00:00:20,449 --> 00:00:27,539
action from exploration to industry to

00:00:24,449 --> 00:00:30,900
future transportation software is the

00:00:27,539 --> 00:00:36,030
unavoidable link between sensing and

00:00:30,900 --> 00:00:39,450
actuation all actuation and all sensing

00:00:36,030 --> 00:00:42,420
is expressed in terms of physical units

00:00:39,450 --> 00:00:45,539
kilograms meters seconds amperes Kelvin

00:00:42,420 --> 00:00:48,690
energy force torque and it can be hard

00:00:45,539 --> 00:00:52,260
for developers to correctly manipulate

00:00:48,690 --> 00:00:55,260
this all the time for example in this

00:00:52,260 --> 00:00:57,780
code example freaky units assumes that

00:00:55,260 --> 00:00:59,969
geometry messages pose position is a

00:00:57,780 --> 00:01:01,500
distance in meters and this is

00:00:59,969 --> 00:01:04,290
calculating the distance between two

00:01:01,500 --> 00:01:06,150
points in r3 and the developers who have

00:01:04,290 --> 00:01:07,950
calculated distance between the goal and

00:01:06,150 --> 00:01:09,930
the current position the first line

00:01:07,950 --> 00:01:12,180
calculates X by multiplying the

00:01:09,930 --> 00:01:13,530
differences in the next two lines all

00:01:12,180 --> 00:01:16,530
three of those lines are on one line of

00:01:13,530 --> 00:01:19,950
code incorrectly adds them so this is

00:01:16,530 --> 00:01:24,150
adding meters squared to meters which is

00:01:19,950 --> 00:01:25,680
physically meaningless another example

00:01:24,150 --> 00:01:27,689
and a much more common thing that we

00:01:25,680 --> 00:01:30,600
catch with freaky units is that people

00:01:27,689 --> 00:01:33,180
abuse the Ross API if i download

00:01:30,600 --> 00:01:35,280
somebody else's code and i see a message

00:01:33,180 --> 00:01:37,229
of type twist I'm expecting linear

00:01:35,280 --> 00:01:43,259
velocity and angular velocity not

00:01:37,229 --> 00:01:47,100
positions in not positions in space this

00:01:43,259 --> 00:01:49,920
tool does dataflow analysis and it's

00:01:47,100 --> 00:01:51,450
open source you it has you can use pip

00:01:49,920 --> 00:01:53,250
to install it we also provide a virtual

00:01:51,450 --> 00:01:55,680
machine where you can download the whole

00:01:53,250 --> 00:01:58,640
thing and play with it if you're willing

00:01:55,680 --> 00:02:01,680
to take a 10-minute game style survey

00:01:58,640 --> 00:02:03,899
about physical units and code please

00:02:01,680 --> 00:02:06,570
email me if you're coming to I Ross

00:02:03,899 --> 00:02:09,289
there's a full talk on this Monday first

00:02:06,570 --> 00:02:11,910
session where we analyze this at scale

00:02:09,289 --> 00:02:13,950
3,500 repositories about 5.9 million

00:02:11,910 --> 00:02:14,190
lines of code and assess how frequently

00:02:13,950 --> 00:02:16,980
the

00:02:14,190 --> 00:02:19,770
kinds of inconsistencies occur this tool

00:02:16,980 --> 00:02:21,210
one the best tool demonstration at ISTA

00:02:19,770 --> 00:02:23,850
a software Tosca testing conference

00:02:21,210 --> 00:02:26,040
earlier this year and has an 87% true

00:02:23,850 --> 00:02:31,100
positive rate and it requires no

00:02:26,040 --> 00:02:31,100
programmer annotations I have spoken

00:02:37,410 --> 00:02:47,080
Thank You mr. jobs all right we've got

00:02:44,530 --> 00:02:50,560
Ross underground by put Tobias thank you

00:02:47,080 --> 00:03:06,130
and on deck is uh Sasha shadi I hope I

00:02:50,560 --> 00:03:08,680
pronounced that right all right we have

00:03:06,130 --> 00:03:10,930
seen Ross Ross in space we have seen

00:03:08,680 --> 00:03:13,750
Ross in the air in on land and on sea

00:03:10,930 --> 00:03:16,480
but what's coming next coming next and

00:03:13,750 --> 00:03:18,370
where's Ross going next and I'm Tobias

00:03:16,480 --> 00:03:19,870
from the Institute of Advanced mining

00:03:18,370 --> 00:03:23,680
technologies from Avatar

00:03:19,870 --> 00:03:29,020
in Germany and that's where we are

00:03:23,680 --> 00:03:30,820
bringing Ross to and that's yeah there's

00:03:29,020 --> 00:03:32,890
there's like a whole mining industry

00:03:30,820 --> 00:03:34,600
that it's not that as bad as in the

00:03:32,890 --> 00:03:37,180
picture but there's a lot of potential

00:03:34,600 --> 00:03:39,040
that we can feed with with the raw stuff

00:03:37,180 --> 00:03:41,320
and with development in that direction

00:03:39,040 --> 00:03:45,070
and I would like to present you one of

00:03:41,320 --> 00:03:48,930
the projects we have and that's a an

00:03:45,070 --> 00:03:53,500
underground exploration vehicle that we

00:03:48,930 --> 00:03:55,300
yeah once you solve the yeah the subject

00:03:53,500 --> 00:03:58,060
with that everybody is fighting the

00:03:55,300 --> 00:04:01,300
localization the mapping the whole stuff

00:03:58,060 --> 00:04:04,480
and we do that by recording very dense

00:04:01,300 --> 00:04:07,660
point clouds from the environment that

00:04:04,480 --> 00:04:09,670
we use or we want to use for surveying

00:04:07,660 --> 00:04:12,820
of mines which we have very very high

00:04:09,670 --> 00:04:14,590
legal standards and also use those put

00:04:12,820 --> 00:04:17,130
them in a data bank and extract maps

00:04:14,590 --> 00:04:20,440
from that for actual production vehicle

00:04:17,130 --> 00:04:23,169
localization and path planning and all

00:04:20,440 --> 00:04:25,030
that kind of stuff and because we are

00:04:23,169 --> 00:04:26,320
very high standards we of course need

00:04:25,030 --> 00:04:28,990
yeah

00:04:26,320 --> 00:04:32,500
actual surveying equipment to reference

00:04:28,990 --> 00:04:37,570
our system because we are very high yeah

00:04:32,500 --> 00:04:39,580
we have a very good positioning and yeah

00:04:37,570 --> 00:04:42,370
we are we integrated also a total

00:04:39,580 --> 00:04:46,060
station into Ross and making those

00:04:42,370 --> 00:04:48,040
things possible and you know how it is

00:04:46,060 --> 00:04:49,460
with Ross you are underground all the

00:04:48,040 --> 00:04:52,160
guys

00:04:49,460 --> 00:04:54,650
are working and all the good stuff is

00:04:52,160 --> 00:04:57,259
happening and it's always always the

00:04:54,650 --> 00:04:59,479
same just like at home everybody's just

00:04:57,259 --> 00:05:01,970
staring at their screen when the good

00:04:59,479 --> 00:05:05,509
stuff is happening and yeah that's

00:05:01,970 --> 00:05:09,259
always how it is and I would like to

00:05:05,509 --> 00:05:11,960
thank our partners for the work together

00:05:09,259 --> 00:05:15,949
that we have on that vehicle and of

00:05:11,960 --> 00:05:17,660
course thank for the funding and yeah we

00:05:15,949 --> 00:05:20,900
are always looking for interesting

00:05:17,660 --> 00:05:24,320
partners to work with and to get new new

00:05:20,900 --> 00:05:27,169
ideas going and of course as always on

00:05:24,320 --> 00:05:29,120
Ross we are hiring and looking for new

00:05:27,169 --> 00:05:32,450
PhD students to work with us together

00:05:29,120 --> 00:05:36,280
and on projects like that thank you

00:05:32,450 --> 00:05:39,470
[Applause]

00:05:36,280 --> 00:05:42,169
thank you very much Tony I'd like to

00:05:39,470 --> 00:05:44,630
request that we start in Ross metrics we

00:05:42,169 --> 00:05:46,070
start tracking maximum distance above

00:05:44,630 --> 00:05:53,050
and below sea level

00:05:46,070 --> 00:05:56,930
Ross is operating all right we've got

00:05:53,050 --> 00:06:02,120
HTC vive Musashi and on deck is a

00:05:56,930 --> 00:06:07,070
Richardson ear I mean yes on deck is

00:06:02,120 --> 00:06:11,330
Richard sasha is on deck yeah Sasha's

00:06:07,070 --> 00:06:13,219
right now coming up is Richardson ear

00:06:11,330 --> 00:06:21,219
and I'm going to stop apologizing for

00:06:13,219 --> 00:06:23,060
mispronunciation of people's names okay

00:06:21,219 --> 00:06:25,900
thank you

00:06:23,060 --> 00:06:29,030
I just learned that everyone one likes

00:06:25,900 --> 00:06:32,840
Arvest and we do as well and we like the

00:06:29,030 --> 00:06:35,150
hcg wife and the VR headset and so we

00:06:32,840 --> 00:06:40,610
just put those things together in the

00:06:35,150 --> 00:06:42,289
same project because we acquired lots of

00:06:40,610 --> 00:06:45,050
point clouds and for debugging it's much

00:06:42,289 --> 00:06:51,919
more convenient to see your results on

00:06:45,050 --> 00:06:57,830
on 3d instead of 2d you nervous so it is

00:06:51,919 --> 00:06:59,690
a htc wife fed by the harvest plugin you

00:06:57,830 --> 00:07:02,370
render two images for your red your

00:06:59,690 --> 00:07:06,650
right and left eye

00:07:02,370 --> 00:07:09,449
and like this and if this was a paper

00:07:06,650 --> 00:07:11,970
yeah it would be like this I have to

00:07:09,449 --> 00:07:14,699
thank my fellow students for doing all

00:07:11,970 --> 00:07:18,720
the hard work I was just the head honcho

00:07:14,699 --> 00:07:19,800
to acquire that project that everything

00:07:18,720 --> 00:07:22,560
for you to take home

00:07:19,800 --> 00:07:26,729
it's the link and if you want to contact

00:07:22,560 --> 00:07:28,410
me just go to link LinkedIn and that's

00:07:26,729 --> 00:07:31,680
all thanks for the funding of the ups

00:07:28,410 --> 00:07:34,979
for the project and we are looking for

00:07:31,680 --> 00:07:37,850
some support in bringing this HTC vive

00:07:34,979 --> 00:07:41,370
plug-in to Arvest and make sure it's

00:07:37,850 --> 00:07:48,990
yeah in the next or over next row 3ds as

00:07:41,370 --> 00:07:51,690
well thank you thank you very much I

00:07:48,990 --> 00:07:53,580
look forward to seeing the reprise of

00:07:51,690 --> 00:08:00,320
that mining video except everyone's also

00:07:53,580 --> 00:08:00,320
wearing the vibes on their faces okay so

00:08:01,729 --> 00:08:06,570
coming up for everyone who's not reading

00:08:04,020 --> 00:08:10,669
over my shoulder so we have Richard on

00:08:06,570 --> 00:08:10,669
deck and coming up is e ping Liu

00:08:18,270 --> 00:08:23,320
hi everyone my name is Richards Taniya

00:08:21,670 --> 00:08:25,960
you got the pronunciation correct it's

00:08:23,320 --> 00:08:29,170
pretty good and I'm here to present or

00:08:25,960 --> 00:08:31,780
introduce you to a new robotic cloud

00:08:29,170 --> 00:08:34,450
platform called row costs it's no

00:08:31,780 --> 00:08:36,010
relationship to a row cost that I now

00:08:34,450 --> 00:08:42,220
realized sounds a bit like a distant

00:08:36,010 --> 00:08:44,080
Irish cousin why are we building why are

00:08:42,220 --> 00:08:45,280
we building a new cloud platform for

00:08:44,080 --> 00:08:46,480
robotics we really want to focus on the

00:08:45,280 --> 00:08:49,450
development experience and we want to

00:08:46,480 --> 00:08:53,500
accelerate the rate at which all of you

00:08:49,450 --> 00:08:57,070
can bring solutions to to the cloud and

00:08:53,500 --> 00:08:59,080
vice versa we think that there's a mess

00:08:57,070 --> 00:09:01,560
of opportunity in the cloud to open up

00:08:59,080 --> 00:09:04,600
the cloud to developers especially

00:09:01,560 --> 00:09:08,440
roboticists and to have access to things

00:09:04,600 --> 00:09:11,470
like AI models machine learning really

00:09:08,440 --> 00:09:13,900
strong message buses big data tools here

00:09:11,470 --> 00:09:16,210
it's all those sorts of things and so we

00:09:13,900 --> 00:09:19,450
are developing low costs and to suit

00:09:16,210 --> 00:09:20,860
those needs there's a bit of boring

00:09:19,450 --> 00:09:22,690
stuff would like to take care of for you

00:09:20,860 --> 00:09:25,780
too so if you're building any kind of

00:09:22,690 --> 00:09:28,000
robot solution that has access to the

00:09:25,780 --> 00:09:29,380
cloud or acquires stuff in the cloud

00:09:28,000 --> 00:09:31,000
we'll take care of the provisioning

00:09:29,380 --> 00:09:32,890
we'll take care of the monitoring

00:09:31,000 --> 00:09:35,410
alerting and all those operational

00:09:32,890 --> 00:09:39,090
aspects which get in the way really of

00:09:35,410 --> 00:09:42,160
building really great robotic solutions

00:09:39,090 --> 00:09:43,870
the beta we're taking signups for and

00:09:42,160 --> 00:09:45,790
will be available probably in a few

00:09:43,870 --> 00:09:47,890
months let's say I really like to hear

00:09:45,790 --> 00:09:49,780
from all of you if you've got any

00:09:47,890 --> 00:09:53,470
specific challenges and robotics you

00:09:49,780 --> 00:09:57,610
think the cloud can solve and please go

00:09:53,470 --> 00:10:00,340
to our website and sign up and we look

00:09:57,610 --> 00:10:03,120
forward to bring you a new thing coming

00:10:00,340 --> 00:10:03,120
to a cloud near you

00:10:07,690 --> 00:10:13,880
thank you very thank you very much

00:10:11,480 --> 00:10:21,200
can we run credit checks through that as

00:10:13,880 --> 00:10:23,090
well too soon all right so using MATLAB

00:10:21,200 --> 00:10:23,630
Simulink with ross is what is right

00:10:23,090 --> 00:10:27,320
behind me

00:10:23,630 --> 00:10:42,350
oh it's math works awesome and Jesper

00:10:27,320 --> 00:10:44,750
Smith you're on deck hi Aaron

00:10:42,350 --> 00:10:46,820
so my name is Epping and this is my cool

00:10:44,750 --> 00:10:49,220
colleague Carlos and we are engineers

00:10:46,820 --> 00:10:51,650
from mass works I just want to show you

00:10:49,220 --> 00:10:56,150
guys hockey mess work towards integrated

00:10:51,650 --> 00:10:58,040
Westeros and I think many of you have

00:10:56,150 --> 00:11:00,830
been already very familiar with MATLAB

00:10:58,040 --> 00:11:03,710
and Simulink and in fact we also worked

00:11:00,830 --> 00:11:06,590
with robotics for many years and in many

00:11:03,710 --> 00:11:10,120
different application areas of ice can

00:11:06,590 --> 00:11:19,760
see mobile robots autonomous driving and

00:11:10,120 --> 00:11:21,500
manipulators UAVs and and just and we

00:11:19,760 --> 00:11:24,010
have also successfully worked with many

00:11:21,500 --> 00:11:27,920
customers in the automotive and

00:11:24,010 --> 00:11:33,440
aerospace industries on those robotics

00:11:27,920 --> 00:11:36,760
applications and since 2015 we start to

00:11:33,440 --> 00:11:39,470
offer tight integration with Ross and

00:11:36,760 --> 00:11:45,020
it's a major is mainly through the

00:11:39,470 --> 00:11:49,280
robotic system a toolbox or ice-t and we

00:11:45,020 --> 00:11:51,830
also only in so right now in my lab are

00:11:49,280 --> 00:11:54,560
signaling you can have you can we

00:11:51,830 --> 00:11:58,250
support live live connection with Ross

00:11:54,560 --> 00:12:00,610
networks and you can also generate code

00:11:58,250 --> 00:12:02,630
for standalone Ross node and

00:12:00,610 --> 00:12:05,110
automatically deploy them to embody

00:12:02,630 --> 00:12:05,110
targets

00:12:07,990 --> 00:12:15,200
and as the well of the latest features

00:12:11,300 --> 00:12:17,360
and in Simulink now you can use the

00:12:15,200 --> 00:12:20,510
so-called external mode to tune the

00:12:17,360 --> 00:12:22,190
January's exhaust note in situ and

00:12:20,510 --> 00:12:30,620
basically you can visored note is still

00:12:22,190 --> 00:12:34,280
running on the hardware and this is the

00:12:30,620 --> 00:12:37,540
system diagram and as you can see the

00:12:34,280 --> 00:12:40,970
algorithm blocks separated from the

00:12:37,540 --> 00:12:42,380
middleware blocks so technically you can

00:12:40,970 --> 00:12:44,900
very easily integrate your existing

00:12:42,380 --> 00:12:54,860
matlab or signaling code with the last

00:12:44,900 --> 00:12:57,860
network and of course we are interested

00:12:54,860 --> 00:12:59,780
in loss 2.0 and if you're interested in

00:12:57,860 --> 00:13:02,120
using those to find always mass work

00:12:59,780 --> 00:13:06,140
stores we would love to hear from you

00:13:02,120 --> 00:13:09,200
and we colors and I will be here in the

00:13:06,140 --> 00:13:11,000
endorse car and we also be in arrow so

00:13:09,200 --> 00:13:14,000
we'll have a boost in arrows so just

00:13:11,000 --> 00:13:15,950
come talk to us and one more thing today

00:13:14,000 --> 00:13:19,070
there's been a lot of interest on VMV

00:13:15,950 --> 00:13:20,300
verification valuation certification we

00:13:19,070 --> 00:13:21,830
have a lot of experience we've worked

00:13:20,300 --> 00:13:23,480
with a lot of customers in safety

00:13:21,830 --> 00:13:25,910
critical domains right so if you're

00:13:23,480 --> 00:13:27,970
interested just talk to us okay thank

00:13:25,910 --> 00:13:27,970
you

00:13:31,549 --> 00:13:36,480
thank you very much and we'll be

00:13:34,230 --> 00:13:42,559
expecting your pull request to Ross to

00:13:36,480 --> 00:13:42,559
win soon right later that's the answer

00:13:43,069 --> 00:13:46,139
all right

00:13:44,309 --> 00:13:50,579
there's someone honestly standing behind

00:13:46,139 --> 00:14:04,949
me and next up we have Zahi kaki on deck

00:13:50,579 --> 00:14:06,359
please okay I'm a yes person if I'm from

00:14:04,949 --> 00:14:13,139
the Institute for human machine

00:14:06,359 --> 00:14:15,089
cognition in Florida and today introduce

00:14:13,139 --> 00:14:18,179
item C pops up which is our

00:14:15,089 --> 00:14:21,480
implementation in real time Java of RT

00:14:18,179 --> 00:14:24,059
PS / - communication protocol it's a

00:14:21,480 --> 00:14:25,069
positive point a licensed available on

00:14:24,059 --> 00:14:30,029
github

00:14:25,069 --> 00:14:31,499
so first what does it do it's a

00:14:30,029 --> 00:14:34,619
lightweight wrapper currently around

00:14:31,499 --> 00:14:37,139
fast RT PS and lots of care is taken to

00:14:34,619 --> 00:14:38,910
not allocate any memory when sending a

00:14:37,139 --> 00:14:42,239
receiving object so we can say use it in

00:14:38,910 --> 00:14:44,970
a real-time environment object

00:14:42,239 --> 00:14:48,239
orientated based on the fast RTS API and

00:14:44,970 --> 00:14:52,559
could provide other backends like jrt PS

00:14:48,239 --> 00:14:55,799
or RTI later big fingers native Java IDL

00:14:52,559 --> 00:14:58,769
compiler go straight from IDL to Java

00:14:55,799 --> 00:15:01,589
code every element is pre-allocated even

00:14:58,769 --> 00:15:03,689
strings and there's no C++ code you have

00:15:01,589 --> 00:15:06,059
to compile so you can you don't have to

00:15:03,689 --> 00:15:08,339
go through that step I also can export

00:15:06,059 --> 00:15:09,959
data to jelmo for long term storage and

00:15:08,339 --> 00:15:13,230
then when you change your message you

00:15:09,959 --> 00:15:14,789
can still read the old fields and then

00:15:13,230 --> 00:15:19,739
we have an RF GPS visualizer for

00:15:14,789 --> 00:15:22,649
debugging and that's in alpha quality so

00:15:19,739 --> 00:15:25,549
this is a picture of what kind of view

00:15:22,649 --> 00:15:28,319
we get over our network using our tools

00:15:25,549 --> 00:15:30,119
so why did we choose a custom Java

00:15:28,319 --> 00:15:32,059
implementation instead of using any of

00:15:30,119 --> 00:15:36,779
the open-source implementations that

00:15:32,059 --> 00:15:39,119
have some Java there bindings so we

00:15:36,779 --> 00:15:42,299
really cared about using our real time

00:15:39,119 --> 00:15:43,690
safety so we couldn't allocate any

00:15:42,299 --> 00:15:45,070
objects and

00:15:43,690 --> 00:15:46,420
Java code that you download of the

00:15:45,070 --> 00:15:49,050
internet likes to allocate lots of

00:15:46,420 --> 00:15:52,870
objects we also didn't want to make a

00:15:49,050 --> 00:15:56,530
C++ wrapper of every IDL message we

00:15:52,870 --> 00:15:58,420
write and then go to Java we also have

00:15:56,530 --> 00:16:00,490
abstract implementations so you can

00:15:58,420 --> 00:16:03,340
compile an IDL to like an abstract

00:16:00,490 --> 00:16:05,290
version so you can reuse existing data

00:16:03,340 --> 00:16:08,140
types like a factor or a point or

00:16:05,290 --> 00:16:09,910
whatever you made and then have it back

00:16:08,140 --> 00:16:13,420
by the idea without having to copy the

00:16:09,910 --> 00:16:16,660
data so first results and this is also

00:16:13,420 --> 00:16:19,360
little our internal test of first our

00:16:16,660 --> 00:16:22,510
TPS we have a logger that does 10000

00:16:19,360 --> 00:16:24,910
variables that are 64 bits a piece at 1

00:16:22,510 --> 00:16:28,330
kilohertz sends it over RTP as best

00:16:24,910 --> 00:16:31,300
overt and drops maybe like a few packets

00:16:28,330 --> 00:16:34,150
a minute what we learned

00:16:31,300 --> 00:16:35,800
do not just the first 30 PS write or

00:16:34,150 --> 00:16:37,600
publish methods directly from a

00:16:35,800 --> 00:16:41,680
real-time threat it's a blocking call

00:16:37,600 --> 00:16:43,090
and you really want to deal with that

00:16:41,680 --> 00:16:45,790
you get three millisecond spikes in your

00:16:43,090 --> 00:16:57,790
real-time loops and what's really cool

00:16:45,790 --> 00:16:58,390
is to history so and that's it thank you

00:16:57,790 --> 00:17:01,450
very much

00:16:58,390 --> 00:17:02,380
you look kind of nervous there when do

00:17:01,450 --> 00:17:04,660
we get the megabots

00:17:02,380 --> 00:17:09,390
robot in gazebo by the way can we have

00:17:04,660 --> 00:17:14,020
that pull request all right awesome

00:17:09,390 --> 00:17:16,540
peer pressure all right and on deck is

00:17:14,020 --> 00:17:19,470
Dave Coleman and right now we have final

00:17:16,540 --> 00:17:19,470
low-cost Fino

00:17:27,450 --> 00:17:31,290
all right everyone my name is Zach a

00:17:29,610 --> 00:17:33,630
Koosh and I'm from Arizona State

00:17:31,290 --> 00:17:36,870
University from the autonomous

00:17:33,630 --> 00:17:39,030
collective systems laboratory under dr.

00:17:36,870 --> 00:17:41,340
spring Burman and today I'm gonna talk

00:17:39,030 --> 00:17:44,400
to you guys about Fino a low-cost Ross

00:17:41,340 --> 00:17:46,560
compatible swarm robotics platform and

00:17:44,400 --> 00:17:49,860
if many of you don't know we essentially

00:17:46,560 --> 00:17:51,690
create algorithms for multi-agent

00:17:49,860 --> 00:17:54,720
systems and one of the difficulties of

00:17:51,690 --> 00:17:57,000
making doing multi-agent systems is that

00:17:54,720 --> 00:17:59,840
the simulation data that we have doesn't

00:17:57,000 --> 00:18:02,220
really work in the physical system so

00:17:59,840 --> 00:18:04,680
trying to map our algorithms onto

00:18:02,220 --> 00:18:08,910
physical systems is difficult and it's

00:18:04,680 --> 00:18:11,880
pricey and we need options that will

00:18:08,910 --> 00:18:14,810
scale well and our modular so that's why

00:18:11,880 --> 00:18:17,370
we invented fina

00:18:14,810 --> 00:18:21,090
Sofi know is a low-cost platform it's

00:18:17,370 --> 00:18:25,410
about $260 to make it is open hardware

00:18:21,090 --> 00:18:26,880
so the the PCB and the STL files are

00:18:25,410 --> 00:18:30,800
available for everyone to use

00:18:26,880 --> 00:18:34,170
it has a gyro accelerometer magnetometer

00:18:30,800 --> 00:18:37,080
IR sensors encoders everything you could

00:18:34,170 --> 00:18:40,380
want in many lanes for people to

00:18:37,080 --> 00:18:42,540
actually add stuff to it the brains of

00:18:40,380 --> 00:18:46,440
the operation on this is a Raspberry Pi

00:18:42,540 --> 00:18:48,930
3 and a teensy microcontroller which is

00:18:46,440 --> 00:18:52,970
essentially just a regular Arduino if it

00:18:48,930 --> 00:18:56,880
decided steroids were a good idea so

00:18:52,970 --> 00:18:59,430
here we have the pheno as you can see at

00:18:56,880 --> 00:19:02,480
the top right different modules that

00:18:59,430 --> 00:19:04,710
we've created for it we have a

00:19:02,480 --> 00:19:07,590
omnidirectional wheels for holonomic

00:19:04,710 --> 00:19:10,410
motion we have the normal differential

00:19:07,590 --> 00:19:14,190
Drive robot and we have treads for

00:19:10,410 --> 00:19:16,710
outdoor usage and the other scene tube

00:19:14,190 --> 00:19:19,110
on the bottom left one is a

00:19:16,710 --> 00:19:23,220
demonstration of 30 of them running Ross

00:19:19,110 --> 00:19:25,170
in an obstacle avoidance scenario so and

00:19:23,220 --> 00:19:27,330
the final one is we are starting to use

00:19:25,170 --> 00:19:29,400
Ross and creating miniature autonomous

00:19:27,330 --> 00:19:31,800
vehicle test beds so people that do have

00:19:29,400 --> 00:19:36,870
big scale algorithms can scale them down

00:19:31,800 --> 00:19:39,180
to our phyno to use and if you would

00:19:36,870 --> 00:19:41,580
like to know more about the system we

00:19:39,180 --> 00:19:44,490
have a paper in

00:19:41,580 --> 00:19:45,720
robotics and automation later for anyone

00:19:44,490 --> 00:19:49,050
who wishes to learn more about the

00:19:45,720 --> 00:19:52,050
system and I'd like to thank everyone

00:19:49,050 --> 00:19:54,630
here especially our sponsors the NSF

00:19:52,050 --> 00:19:56,820
DARPA and the onr and for anyone who

00:19:54,630 --> 00:19:59,850
wants to contribute to the project or

00:19:56,820 --> 00:20:03,510
learn more about the project ACS

00:19:59,850 --> 00:20:06,180
laboratories github al please also feel

00:20:03,510 --> 00:20:08,250
free to contact me as well if you want

00:20:06,180 --> 00:20:16,950
to just talk to me here I'll be here the

00:20:08,250 --> 00:20:19,920
hold thank you guys thank you very much

00:20:16,950 --> 00:20:24,990
I approve of the ominous lights you run

00:20:19,920 --> 00:20:26,210
those in the dark awesome all right

00:20:24,990 --> 00:20:29,640
behind me

00:20:26,210 --> 00:20:32,040
yep behind me is the world talking about

00:20:29,640 --> 00:20:35,190
world move it day and then next up we

00:20:32,040 --> 00:20:37,050
have John Morris sorry that's that's

00:20:35,190 --> 00:20:46,890
Dave Coleman talking about world move at

00:20:37,050 --> 00:20:49,890
day world move it day part two so last

00:20:46,890 --> 00:20:51,390
year Michael Ferguson from fetch came to

00:20:49,890 --> 00:20:53,780
me and suggested hey let's have a world

00:20:51,390 --> 00:20:56,970
move it day so we did it was great and

00:20:53,780 --> 00:20:59,370
we accomplished a lot last year it was

00:20:56,970 --> 00:21:00,990
really exciting results we had total 27

00:20:59,370 --> 00:21:04,020
participants a bunch of locations around

00:21:00,990 --> 00:21:06,660
the world namely one at fetch one exam

00:21:04,020 --> 00:21:09,000
LA and totally closed 65 pool requests

00:21:06,660 --> 00:21:11,340
we had ten that were started in progress

00:21:09,000 --> 00:21:13,950
after that day 21 issues were closed and

00:21:11,340 --> 00:21:15,660
in total 28 github users contributed so

00:21:13,950 --> 00:21:19,380
really successful event we're doing it

00:21:15,660 --> 00:21:21,060
again please join us on October 18th we

00:21:19,380 --> 00:21:23,310
already have several locations lined up

00:21:21,060 --> 00:21:26,070
verbs surgical is this robotic surgery

00:21:23,310 --> 00:21:27,990
company in the Bay Area two locations in

00:21:26,070 --> 00:21:29,910
Germany boost magazine oh and eczema and

00:21:27,990 --> 00:21:31,950
also the Southwest Research Institute's

00:21:29,910 --> 00:21:33,780
having location I also just got word

00:21:31,950 --> 00:21:36,390
that shadow robot will have some

00:21:33,780 --> 00:21:38,910
location in London may or may not be

00:21:36,390 --> 00:21:42,060
open to the public but if you want to

00:21:38,910 --> 00:21:44,370
add yourself please do contact me

00:21:42,060 --> 00:21:46,890
there's also a sign-up form and overall

00:21:44,370 --> 00:21:50,310
the day will be you know you learn the

00:21:46,890 --> 00:21:52,410
tutorials or have contribute to the

00:21:50,310 --> 00:21:53,970
documentation bug fixes adding new

00:21:52,410 --> 00:21:54,750
features whatever level you're at with

00:21:53,970 --> 00:21:57,000
move it please

00:21:54,750 --> 00:21:59,160
from whatever location you're at you can

00:21:57,000 --> 00:22:00,780
videoconference in it'll be a fun day

00:21:59,160 --> 00:22:03,750
most locations have free food will have

00:22:00,780 --> 00:22:06,030
free stickers yeah second thing I wanted

00:22:03,750 --> 00:22:07,560
to pitch real quick is and we've been

00:22:06,030 --> 00:22:08,730
trying to get together some code sprints

00:22:07,560 --> 00:22:10,860
remove it and the first one we want to

00:22:08,730 --> 00:22:12,600
tackle is this minimum cycle time motion

00:22:10,860 --> 00:22:13,860
planning for Ben picking so I've been

00:22:12,600 --> 00:22:16,110
talking to some research groups

00:22:13,860 --> 00:22:19,470
different professors who all want to

00:22:16,110 --> 00:22:21,450
have a benchmark data set where if you

00:22:19,470 --> 00:22:23,100
have a manipulation or motion planner

00:22:21,450 --> 00:22:25,380
you can compare it against the same

00:22:23,100 --> 00:22:26,970
tasks that these three robots will be

00:22:25,380 --> 00:22:29,310
doing and they want to have their first

00:22:26,970 --> 00:22:31,110
implementation be in move it which is

00:22:29,310 --> 00:22:32,790
really exciting for us and so if you're

00:22:31,110 --> 00:22:33,990
interested in sponsoring this so you

00:22:32,790 --> 00:22:35,640
want to run this benchmark across

00:22:33,990 --> 00:22:37,500
different planters create a report and

00:22:35,640 --> 00:22:39,090
kind of improve move its functionality

00:22:37,500 --> 00:22:40,800
in this particular application set so

00:22:39,090 --> 00:22:43,320
please reach out to me if that's of

00:22:40,800 --> 00:22:44,910
interest to your company maybe a project

00:22:43,320 --> 00:22:52,470
in a collaboration with a the Ross

00:22:44,910 --> 00:22:54,480
industrial consortium thank you thank

00:22:52,470 --> 00:23:01,560
you very much Dave you had me at free

00:22:54,480 --> 00:23:03,180
food all right we've got John Morris

00:23:01,560 --> 00:23:05,580
talking about the Vancouver Ross users

00:23:03,180 --> 00:23:14,160
group and then coming up after that is

00:23:05,580 --> 00:23:16,830
max Matsushima good afternoon I just

00:23:14,160 --> 00:23:19,710
want to ask one question first how many

00:23:16,830 --> 00:23:23,780
people in the room are live or work in

00:23:19,710 --> 00:23:26,400
the Greater Vancouver Lower Mainland

00:23:23,780 --> 00:23:28,440
quite a good chunk well you might want

00:23:26,400 --> 00:23:31,710
to know that there actually is a

00:23:28,440 --> 00:23:35,580
Vancouver Ross users group it got

00:23:31,710 --> 00:23:37,470
started last year and we've had topics

00:23:35,580 --> 00:23:39,810
such as introduction to robots

00:23:37,470 --> 00:23:42,960
simulators building intelligent apps

00:23:39,810 --> 00:23:45,800
with cognitive services drones big and

00:23:42,960 --> 00:23:49,620
small applications of computer vision

00:23:45,800 --> 00:23:52,890
robot napping using slam we if you're

00:23:49,620 --> 00:23:55,620
interested in joining that group you use

00:23:52,890 --> 00:23:59,690
a platform a meetup platform and just do

00:23:55,620 --> 00:24:01,950
a search on the robotics vancouver ross

00:23:59,690 --> 00:24:04,679
users group and you'll find more

00:24:01,950 --> 00:24:06,630
information there in October we were

00:24:04,679 --> 00:24:08,550
having we are having a sensor

00:24:06,630 --> 00:24:10,680
show-and-tell

00:24:08,550 --> 00:24:12,330
and hopefully you get your hands on some

00:24:10,680 --> 00:24:20,970
sensors and learn a little bit from the

00:24:12,330 --> 00:24:27,290
presenters so thank you very much so the

00:24:20,970 --> 00:24:27,290
free food answer free food

00:24:28,100 --> 00:24:34,380
all right on that or behind me right now

00:24:32,280 --> 00:24:36,870
is the raw simplemente a rush to

00:24:34,380 --> 00:24:59,370
implementation on an MCU given by Max

00:24:36,870 --> 00:25:01,800
and on deck is Julius girls virtus my

00:24:59,370 --> 00:25:04,830
name is max Matsushima from Elena sauce

00:25:01,800 --> 00:25:08,000
electronics the world leading MCU

00:25:04,830 --> 00:25:10,050
company director and today I'd like to

00:25:08,000 --> 00:25:14,160
announce that that we are going to

00:25:10,050 --> 00:25:16,680
support laws and tubing to begin with we

00:25:14,160 --> 00:25:21,810
are working on native support for those

00:25:16,680 --> 00:25:23,250
two on the way misuse here the

00:25:21,810 --> 00:25:26,480
demonstration we are working on right

00:25:23,250 --> 00:25:29,160
now and there are two laws nodes

00:25:26,480 --> 00:25:32,550
you know since our node with joystick

00:25:29,160 --> 00:25:35,970
and actuator node with a punch it unit

00:25:32,550 --> 00:25:39,510
so sensor node sends positioning

00:25:35,970 --> 00:25:49,460
information to actuate a node by using

00:25:39,510 --> 00:25:53,420
our TPS so as you move a joystick gojira

00:25:49,460 --> 00:25:53,420
moves in response like that

00:25:54,290 --> 00:26:02,370
okay this is a board I use for this

00:25:58,290 --> 00:26:07,110
demonstration the MCU on this board is

00:26:02,370 --> 00:26:11,310
renesis rx MCU which runs 96 megahertz

00:26:07,110 --> 00:26:15,690
and with one megabyte of rush and 256

00:26:11,310 --> 00:26:18,360
kilobyte of lamb this is not like a full

00:26:15,690 --> 00:26:21,200
brown microprocessor like raspberry pi

00:26:18,360 --> 00:26:24,220
instead this is like

00:26:21,200 --> 00:26:26,990
you know right wait Emma see you

00:26:24,220 --> 00:26:29,899
intended for just for embedded

00:26:26,990 --> 00:26:35,269
applications but still we are able to

00:26:29,899 --> 00:26:39,620
run it I mean our TPS done it on this

00:26:35,269 --> 00:26:43,730
processor so this is architecture

00:26:39,620 --> 00:26:46,389
overview we implemented this risk of the

00:26:43,730 --> 00:26:50,480
area's there is an abstraction layer

00:26:46,389 --> 00:26:54,649
tappable anuses native software and the

00:26:50,480 --> 00:26:59,600
free auto stands on it and application

00:26:54,649 --> 00:27:02,120
runs at the top of the stack so as you

00:26:59,600 --> 00:27:05,740
can see on the right hand side we can

00:27:02,120 --> 00:27:08,990
fit this even this tiny memory space and

00:27:05,740 --> 00:27:12,350
still have room to spare for other

00:27:08,990 --> 00:27:15,470
application oh by the way I'm planning

00:27:12,350 --> 00:27:17,320
to you know approach these three Sofia

00:27:15,470 --> 00:27:21,639
as the open source on the github

00:27:17,320 --> 00:27:25,399
producer so what's next

00:27:21,639 --> 00:27:28,580
you know we can do many things but our

00:27:25,399 --> 00:27:33,200
focus right now is on two things one is

00:27:28,580 --> 00:27:39,200
those two under free artists using the

00:27:33,200 --> 00:27:43,279
WIP I'm sure the WIP stack which is true

00:27:39,200 --> 00:27:46,700
open platform you guys can use and also

00:27:43,279 --> 00:27:50,059
you know try to expand support to other

00:27:46,700 --> 00:27:53,690
renesis in which you use if you guys

00:27:50,059 --> 00:27:56,080
give us big thumbs up on this thank you

00:27:53,690 --> 00:27:56,080
very much

00:27:58,580 --> 00:28:03,300
thank you

00:28:00,030 --> 00:28:05,580
the 60 kilobytes is impressive can you

00:28:03,300 --> 00:28:11,450
write rewrite some printer drivers for

00:28:05,580 --> 00:28:11,450
me please nothing I was too much to ask

00:28:12,740 --> 00:28:19,980
all right standing behind me I'm sorry I

00:28:16,320 --> 00:28:33,300
can't rebate Oh sis demos and on deck we

00:28:19,980 --> 00:28:36,240
have sheep by my name is Julius girls

00:28:33,300 --> 00:28:40,440
Otis and today I want to present a

00:28:36,240 --> 00:28:44,700
stereo vision camera that my company

00:28:40,440 --> 00:28:51,710
Rubidoux system was developing so the

00:28:44,700 --> 00:28:54,810
camera has an Nvidia DX 2 onboard and

00:28:51,710 --> 00:28:59,130
for doing the stereo matching and stereo

00:28:54,810 --> 00:29:02,570
processing it's running ross internally

00:28:59,130 --> 00:29:10,580
so it's really easy to use it in your

00:29:02,570 --> 00:29:18,030
applications and there is some computing

00:29:10,580 --> 00:29:22,350
that's available on the tx2 that you can

00:29:18,030 --> 00:29:30,420
use for running your own software the

00:29:22,350 --> 00:29:33,690
camera basically has as any other vision

00:29:30,420 --> 00:29:43,080
a stereo vision camera it's two cameras

00:29:33,690 --> 00:29:47,760
and we we are planning to have the

00:29:43,080 --> 00:29:51,600
camera ready for to sell by in the

00:29:47,760 --> 00:29:54,530
beginning of next year but if you are

00:29:51,600 --> 00:29:58,500
interested we are planning of shipping

00:29:54,530 --> 00:30:02,970
prototype versions of the camera for

00:29:58,500 --> 00:30:05,130
four for our early adapters soon so if

00:30:02,970 --> 00:30:07,790
you are interested please contact us

00:30:05,130 --> 00:30:07,790
thank you

00:30:11,020 --> 00:30:14,630
thank you very much

00:30:12,710 --> 00:30:21,020
I notice your extras were instructed to

00:30:14,630 --> 00:30:23,500
just shake hands vigorously practicing

00:30:21,020 --> 00:30:26,210
for trips to America

00:30:23,500 --> 00:30:28,340
alright so we've got a discussion about

00:30:26,210 --> 00:30:31,370
the Stevens Institute of Technology by

00:30:28,340 --> 00:30:36,860
she by and coming up afterwards on deck

00:30:31,370 --> 00:30:44,740
is Jeff Biggs who it's actually a

00:30:36,860 --> 00:30:44,740
presentation is the presentation public

00:30:51,190 --> 00:30:55,880
good afternoon everyone my name is Reba

00:30:54,260 --> 00:30:58,909
and from mechanical engineering

00:30:55,880 --> 00:31:04,640
department of Stevens majoring in

00:30:58,909 --> 00:31:06,950
robotics we do a lot of stuff and during

00:31:04,640 --> 00:31:08,299
this summer this summer we actually had

00:31:06,950 --> 00:31:12,320
a discussion between the group members

00:31:08,299 --> 00:31:14,900
and our boss about what type of sensor

00:31:12,320 --> 00:31:17,960
especially 3d Leiter's we're gonna get

00:31:14,900 --> 00:31:22,909
given the budget we have we came up with

00:31:17,960 --> 00:31:24,770
the conclusion that the 3d lidar sensor

00:31:22,909 --> 00:31:26,840
is a little bit expensive not only

00:31:24,770 --> 00:31:29,630
expensive but also even you go with the

00:31:26,840 --> 00:31:34,510
very high-end for example the fallen

00:31:29,630 --> 00:31:39,620
dine in 1664 scanline version it's not

00:31:34,510 --> 00:31:44,450
giving you wide enough field of view

00:31:39,620 --> 00:31:49,490
vertically so we decided to build two

00:31:44,450 --> 00:31:55,700
divider ourselves with to the 2d planar

00:31:49,490 --> 00:31:58,610
a lighter attached to a servo motor so

00:31:55,700 --> 00:32:02,240
we here's the set up we have it one of

00:31:58,610 --> 00:32:03,830
our robots we also have to use either

00:32:02,240 --> 00:32:11,929
they are taking care of the localization

00:32:03,830 --> 00:32:13,940
as well as onboard router so the idea is

00:32:11,929 --> 00:32:16,010
pretty straightforward we published the

00:32:13,940 --> 00:32:18,420
transformation between the several frame

00:32:16,010 --> 00:32:22,050
to the laser frame and

00:32:18,420 --> 00:32:26,730
we use the Ross library latest assembler

00:32:22,050 --> 00:32:30,270
to assemble those scans this is a short

00:32:26,730 --> 00:32:34,080
demo of really straightforward and

00:32:30,270 --> 00:32:37,290
simple indoor environments we also went

00:32:34,080 --> 00:32:40,170
for few more complicated scenarios like

00:32:37,290 --> 00:32:48,210
this is the Liberty Science Center in

00:32:40,170 --> 00:32:52,130
Europe in New Jersey shot video of how

00:32:48,210 --> 00:32:57,060
it performs indoor Octomom map we build

00:32:52,130 --> 00:33:00,450
online there are actually two most wise

00:32:57,060 --> 00:33:03,150
single sweep that you can publish empty

00:33:00,450 --> 00:33:05,910
a message to a specific topic and they

00:33:03,150 --> 00:33:08,400
will do only one suite for you or you

00:33:05,910 --> 00:33:13,130
can enable or you can launch the

00:33:08,400 --> 00:33:15,960
continuous mode long file which will

00:33:13,130 --> 00:33:19,200
spinning continuously and while the

00:33:15,960 --> 00:33:23,180
robot moving is going to generate a map

00:33:19,200 --> 00:33:23,180
of the environments

00:33:28,809 --> 00:33:35,049
you're given a time constraint just

00:33:31,820 --> 00:33:35,049
fast-forward this video

00:33:47,850 --> 00:33:52,770
so all these indoor localization is

00:33:50,970 --> 00:33:55,280
taking care of the by the gene mapping

00:33:52,770 --> 00:33:55,280
package

00:34:01,720 --> 00:34:09,320
thank you very much there had to be one

00:34:05,740 --> 00:34:13,730
also 3d liners are a bit expensive you

00:34:09,320 --> 00:34:18,050
are the master of understatement I was a

00:34:13,730 --> 00:34:20,840
bit tired this morning okay so we have

00:34:18,050 --> 00:34:24,909
Jeff Biggs talking about a ist and on

00:34:20,840 --> 00:34:24,909
deck we have Rio suku Tajima

00:34:31,460 --> 00:34:36,139
good afternoon everyone I'm just pokes

00:34:34,069 --> 00:34:38,270
meas tea and I'm not actually going to

00:34:36,139 --> 00:34:39,379
be talking about ASD I'm going to be

00:34:38,270 --> 00:34:43,700
talking about the problem of authorative

00:34:39,379 --> 00:34:45,589
packages so there's a problem in Ross

00:34:43,700 --> 00:34:47,859
which is that the number of whorfin

00:34:45,589 --> 00:34:49,669
packages keeps going up

00:34:47,859 --> 00:34:51,889
usually this is problems like the

00:34:49,669 --> 00:34:53,720
maintainer is too busy to respond or

00:34:51,889 --> 00:34:55,490
they've moved on a lot of packages are

00:34:53,720 --> 00:34:57,109
produced by PhD students for example and

00:34:55,490 --> 00:34:58,780
they they go off and get a job and they

00:34:57,109 --> 00:35:01,849
forget they had a package to maintain

00:34:58,780 --> 00:35:02,930
maybe they got rich or something and

00:35:01,849 --> 00:35:04,819
these packages they don't get released

00:35:02,930 --> 00:35:06,260
and the data source is true sometimes

00:35:04,819 --> 00:35:08,329
this is proposed they just don't work

00:35:06,260 --> 00:35:09,589
you know the IPPS have changed they will

00:35:08,329 --> 00:35:11,390
compile anymore but sometimes they

00:35:09,589 --> 00:35:12,829
actually do work just fine but they're

00:35:11,390 --> 00:35:14,000
still not released and so the only way

00:35:12,829 --> 00:35:16,730
you can use them as we're compiling the

00:35:14,000 --> 00:35:16,970
source particularly notable example of

00:35:16,730 --> 00:35:18,829
this

00:35:16,970 --> 00:35:20,690
the USB camera drivers weren't released

00:35:18,829 --> 00:35:21,290
in Connecticut for a year after kinetic

00:35:20,690 --> 00:35:23,740
was released

00:35:21,290 --> 00:35:27,170
even though kinetic is an LTS destroyer

00:35:23,740 --> 00:35:28,790
which is kind of shocking I think the

00:35:27,170 --> 00:35:31,400
producer USB camera is a fairly common

00:35:28,790 --> 00:35:33,200
thing to use and there are 90 unreleased

00:35:31,400 --> 00:35:36,020
repositories of kinetic when I checked

00:35:33,200 --> 00:35:37,520
this morning and 366 for Luna and

00:35:36,020 --> 00:35:39,500
granted maybe not all of these compiled

00:35:37,520 --> 00:35:41,420
but I did do a check blockers and only

00:35:39,500 --> 00:35:43,910
half of those had no blockers to

00:35:41,420 --> 00:35:45,500
actually being released and so Lunas

00:35:43,910 --> 00:35:47,510
really knew about you know kinetics been

00:35:45,500 --> 00:35:48,799
out for quite a while now and it's not

00:35:47,510 --> 00:35:53,329
having 90 hour release for Foley's is a

00:35:48,799 --> 00:35:56,329
bit said I think but you know there's no

00:35:53,329 --> 00:35:57,500
real easy solution to this problem in

00:35:56,329 --> 00:35:58,790
the idea of solutions he fired a new

00:35:57,500 --> 00:36:00,020
maintainer someone comes and says hey

00:35:58,790 --> 00:36:02,030
I'll fix it and I'll keep maintaining

00:36:00,020 --> 00:36:04,160
which is great but that's pretty easy as

00:36:02,030 --> 00:36:05,660
it than done because usually no one

00:36:04,160 --> 00:36:07,309
bothers to volunteer you know no wants

00:36:05,660 --> 00:36:08,720
to do that it's hard work and you have

00:36:07,309 --> 00:36:10,940
to keep looking at bugs and fixing them

00:36:08,720 --> 00:36:12,440
and you don't get to do any fun stuff so

00:36:10,940 --> 00:36:13,730
does that mean these should disappear I

00:36:12,440 --> 00:36:15,230
mean I don't think it does because

00:36:13,730 --> 00:36:16,549
things that used to be camera drivers

00:36:15,230 --> 00:36:19,430
the fairly common are used and we don't

00:36:16,549 --> 00:36:20,750
really want those to go away so there's

00:36:19,430 --> 00:36:22,930
a group in Japan which has come up with

00:36:20,750 --> 00:36:26,150
a proposed protocol solution which is a

00:36:22,930 --> 00:36:29,660
volunteer group who will maintain orphan

00:36:26,150 --> 00:36:31,099
packages and their goal is to do this

00:36:29,660 --> 00:36:32,329
with minimum effort which means that

00:36:31,099 --> 00:36:34,430
they're not going to overstate incoming

00:36:32,329 --> 00:36:36,410
issues and to pull workers and so on you

00:36:34,430 --> 00:36:37,579
know if the package breaks that's it but

00:36:36,410 --> 00:36:39,140
they will release the repository into

00:36:37,579 --> 00:36:40,880
the Ross ecosystem as long as it keeps

00:36:39,140 --> 00:36:43,940
on working

00:36:40,880 --> 00:36:45,920
running room and so on so they've

00:36:43,940 --> 00:36:48,410
they've already reduced civil I maintain

00:36:45,920 --> 00:36:49,640
packages again the USB camera drivers

00:36:48,410 --> 00:36:51,109
are notable but there's some other ones

00:36:49,640 --> 00:36:52,880
that they were once use on their robots

00:36:51,109 --> 00:36:55,309
which they the released and they're

00:36:52,880 --> 00:36:58,279
preparing a rip rossi

00:36:55,309 --> 00:37:01,039
extension proposal for Ross orphan

00:36:58,279 --> 00:37:03,319
package maintainer initiative to define

00:37:01,039 --> 00:37:04,880
the process of how this works and

00:37:03,319 --> 00:37:06,619
they're calling for contributions so you

00:37:04,880 --> 00:37:08,450
know if you're interested in in helping

00:37:06,619 --> 00:37:09,410
you out just as part of a group you know

00:37:08,450 --> 00:37:10,640
you don't have to keep maintaining the

00:37:09,410 --> 00:37:12,229
picture we assigned yourself you notice

00:37:10,640 --> 00:37:13,190
when you have time you pull a package

00:37:12,229 --> 00:37:14,359
off the list and you do a bit of work

00:37:13,190 --> 00:37:16,609
honor than to write back on the list

00:37:14,359 --> 00:37:17,960
again join them and they have some

00:37:16,609 --> 00:37:19,819
funding from Japanese government to work

00:37:17,960 --> 00:37:21,319
on this which is going to get them keep

00:37:19,819 --> 00:37:23,359
going so if you're interested please

00:37:21,319 --> 00:37:24,440
come and talk to us and maybe we can try

00:37:23,359 --> 00:37:32,450
and get a few these packages released

00:37:24,440 --> 00:37:36,739
thank you thank you Jeff funding

00:37:32,450 --> 00:37:39,220
includes free food okay excellent three

00:37:36,739 --> 00:37:39,220
for three

00:37:40,029 --> 00:37:44,440
alright up next we have torque with

00:37:42,829 --> 00:37:47,329
right ryousuke

00:37:44,440 --> 00:37:51,759
ryousuke Tajima and then our last

00:37:47,329 --> 00:37:51,759
lightning talk will be Bill Koon

00:37:57,890 --> 00:38:04,200
thank you and no strategy Makram torque

00:38:01,020 --> 00:38:07,230
tokyo open-source robotics association

00:38:04,200 --> 00:38:10,530
in japan today I'd like to present our

00:38:07,230 --> 00:38:13,890
two packages recently we released two

00:38:10,530 --> 00:38:17,130
indigo and the kinetic the first one is

00:38:13,890 --> 00:38:20,400
industrial MyPlate a tra it is designed

00:38:17,130 --> 00:38:23,880
by techno 21 company and it is a

00:38:20,400 --> 00:38:27,690
standard articulated robot manipulator

00:38:23,880 --> 00:38:31,470
but it is very powerful and very easy to

00:38:27,690 --> 00:38:34,740
arrange its design thanks to it is

00:38:31,470 --> 00:38:36,660
consist of escaped drivers you know the

00:38:34,740 --> 00:38:40,110
etiquette is very popular in factory

00:38:36,660 --> 00:38:42,630
automation right now so we load control

00:38:40,110 --> 00:38:46,830
control ad so it drip-dry before the

00:38:42,630 --> 00:38:49,950
effect at arrival and we can we can make

00:38:46,830 --> 00:38:55,710
it very simple and we can use it with

00:38:49,950 --> 00:39:00,240
move it high level controller and we are

00:38:55,710 --> 00:39:03,270
now released indigo and we the source

00:39:00,240 --> 00:39:07,110
code is available here and the video is

00:39:03,270 --> 00:39:12,450
online on our website so please consult

00:39:07,110 --> 00:39:15,900
with them and the next package if it's

00:39:12,450 --> 00:39:19,580
room block we build the robot based on

00:39:15,900 --> 00:39:22,530
the Roomba and it is cheap at home for

00:39:19,580 --> 00:39:24,690
running lost navigation you know the

00:39:22,530 --> 00:39:29,280
rule it is consist of Roomba and

00:39:24,690 --> 00:39:33,600
raspberry pi RP rider and but my battery

00:39:29,280 --> 00:39:35,790
are all available on the market and the

00:39:33,600 --> 00:39:37,860
3d printed frame is available from

00:39:35,790 --> 00:39:41,130
single bus so you can download the data

00:39:37,860 --> 00:39:45,510
from the single bus all instruction is

00:39:41,130 --> 00:39:49,830
an instructable site and the video is

00:39:45,510 --> 00:39:54,450
available on our website so why not use

00:39:49,830 --> 00:39:58,110
turtlebot yeah you you can choose you

00:39:54,450 --> 00:40:02,610
you you can choose the robot but leave

00:39:58,110 --> 00:40:06,450
me my wife get angry if I buy total

00:40:02,610 --> 00:40:08,250
water with my family budget and yeah

00:40:06,450 --> 00:40:10,190
Roomba I don't know why but Roomba is

00:40:08,250 --> 00:40:13,200
okay because it

00:40:10,190 --> 00:40:19,410
so everyone's happy it is very wing

00:40:13,200 --> 00:40:22,470
solution you know so the this we can use

00:40:19,410 --> 00:40:27,420
this platform for benchmarking the loss

00:40:22,470 --> 00:40:29,190
mapping and strim packages like VG

00:40:27,420 --> 00:40:32,520
mapping was from carto or google

00:40:29,190 --> 00:40:36,300
cartographer exists and we are doing

00:40:32,520 --> 00:40:40,590
some seminar with this brought home in

00:40:36,300 --> 00:40:44,210
Japan and we we can teach the student or

00:40:40,590 --> 00:40:46,560
some people about rosin application

00:40:44,210 --> 00:40:48,510
ordinary Rose navigational stuck with

00:40:46,560 --> 00:40:51,120
this brought home if you are interested

00:40:48,510 --> 00:40:56,160
in this apart home please consult with

00:40:51,120 --> 00:41:03,560
the website and build it with by by

00:40:56,160 --> 00:41:05,970
yourself thank you thank you

00:41:03,560 --> 00:41:09,260
playing robots that do household chores

00:41:05,970 --> 00:41:09,260
that's perfect

00:41:09,440 --> 00:41:16,760
alright last we have geo frenzy

00:41:12,770 --> 00:41:16,760
presented by Bill Koon

00:41:16,770 --> 00:41:20,600
oh here we go

00:41:26,720 --> 00:41:31,440
the Geo frenzy Ross package under

00:41:29,640 --> 00:41:33,960
development by road narrows robotics

00:41:31,440 --> 00:41:36,240
allows UAV developers to easily

00:41:33,960 --> 00:41:38,600
integrate the functionality of the fence

00:41:36,240 --> 00:41:41,790
delivery network into their applications

00:41:38,600 --> 00:41:44,520
the fence delivery network developed by

00:41:41,790 --> 00:41:47,370
geo network is a set of virtual fences

00:41:44,520 --> 00:41:50,640
associated with rules that are aimed

00:41:47,370 --> 00:41:52,710
primarily towards UAVs the fences are

00:41:50,640 --> 00:41:54,900
stored on the cloud and delivered

00:41:52,710 --> 00:41:57,060
dynamically to clients which can

00:41:54,900 --> 00:42:01,050
autonomously react to geospatial

00:41:57,060 --> 00:42:03,780
regulations the geo frenzy web portal

00:42:01,050 --> 00:42:06,960
allows users to configure and set up

00:42:03,780 --> 00:42:09,900
these fences for instance a residential

00:42:06,960 --> 00:42:12,720
property owner might set up a fence over

00:42:09,900 --> 00:42:15,450
their yard that doesn't allow UAVs to

00:42:12,720 --> 00:42:19,230
use downward facing cameras when flying

00:42:15,450 --> 00:42:21,510
over their property the package we've

00:42:19,230 --> 00:42:25,110
developed makes interfacing with these

00:42:21,510 --> 00:42:28,260
fences an easy task the geo frenzy

00:42:25,110 --> 00:42:31,410
server node subscribes to an ab SAP fix

00:42:28,260 --> 00:42:34,950
message queries the network and then

00:42:31,410 --> 00:42:38,880
publishes any relevant information we

00:42:34,950 --> 00:42:41,100
also have helper nodes we also have

00:42:38,880 --> 00:42:43,200
helper nodes such as a virtual cloud

00:42:41,100 --> 00:42:45,930
node that publishes a point cloud

00:42:43,200 --> 00:42:48,930
representation of the fences that can be

00:42:45,930 --> 00:42:50,730
used in a navigation stack we have a

00:42:48,930 --> 00:42:53,280
sense of relay node that can be

00:42:50,730 --> 00:42:55,580
configured to monitor specific topics

00:42:53,280 --> 00:42:58,350
like camera permissions and these

00:42:55,580 --> 00:43:02,880
relevant information can be relayed to

00:42:58,350 --> 00:43:05,580
the corresponding subsystems we have an

00:43:02,880 --> 00:43:07,860
alpha version currently available on

00:43:05,580 --> 00:43:11,370
github we plan on releasing a beta

00:43:07,860 --> 00:43:12,960
version in the near future for any

00:43:11,370 --> 00:43:15,360
questions you can direct them to road

00:43:12,960 --> 00:43:17,670
neros robotics and of course feel free

00:43:15,360 --> 00:43:20,610
to chat with myself or my colleague Kim

00:43:17,670 --> 00:43:23,120
wheeler for any more information thank

00:43:20,610 --> 00:43:23,120
you for your time

00:43:26,019 --> 00:43:30,319
thank you very much I think that's

00:43:28,490 --> 00:43:32,599
actually the most compelling reason to

00:43:30,319 --> 00:43:34,369
learn Ross if you learn Ross

00:43:32,599 --> 00:43:37,940
you can keep your neighbors drones from

00:43:34,369 --> 00:43:39,950
flying over your house all right that

00:43:37,940 --> 00:43:43,460
believe it or not we just made it

00:43:39,950 --> 00:43:45,500
through 15 presentations in about 40

00:43:43,460 --> 00:43:47,900
minutes I'd like us all to give the

00:43:45,500 --> 00:43:52,579
presenters again a round of applause

00:43:47,900 --> 00:43:52,579

YouTube URL: https://www.youtube.com/watch?v=PK3_rSEKAkk


