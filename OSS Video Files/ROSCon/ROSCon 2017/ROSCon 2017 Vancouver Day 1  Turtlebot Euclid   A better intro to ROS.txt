Title: ROSCon 2017 Vancouver Day 1  Turtlebot Euclid   A better intro to ROS
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:02,060 --> 00:00:07,379
so Ross education that clear that has

00:00:04,980 --> 00:00:09,719
beginning gaining motion my colleague

00:00:07,379 --> 00:00:12,690
Elia has done a lot of raw series about

00:00:09,719 --> 00:00:15,389
learning Ross and we felt that we can do

00:00:12,690 --> 00:00:18,720
a better introduction of Ross with the

00:00:15,389 --> 00:00:20,460
chair about Euclid so historically the

00:00:18,720 --> 00:00:23,310
turtlebot has been denchu over Ross

00:00:20,460 --> 00:00:25,439
platform and if we look at its an

00:00:23,310 --> 00:00:28,050
Anatomy we can see that it consists of a

00:00:25,439 --> 00:00:30,300
plate RGB camera some stand offs and

00:00:28,050 --> 00:00:31,740
netbook in a mobile base these have

00:00:30,300 --> 00:00:35,040
changed between the two iterations of

00:00:31,740 --> 00:00:36,480
throw about one and two and through

00:00:35,040 --> 00:00:38,730
clear path I've noticed a lot of things

00:00:36,480 --> 00:00:41,280
I've done have been done well it's a

00:00:38,730 --> 00:00:43,800
preassembled turnkey solution for most

00:00:41,280 --> 00:00:45,149
users it's low cost there's a huge Ross

00:00:43,800 --> 00:00:47,460
community you can see from the github

00:00:45,149 --> 00:00:50,489
there's plenty of tutorials on how to

00:00:47,460 --> 00:00:52,100
use the turtle lots and there's many

00:00:50,489 --> 00:00:55,199
demos that you can use out of the box

00:00:52,100 --> 00:00:57,300
but there's areas of improvement the

00:00:55,199 --> 00:00:59,460
netbooks have been a pain in clear paths

00:00:57,300 --> 00:01:01,710
existence they go end-of-life very

00:00:59,460 --> 00:01:04,619
quickly they don't use standard drivers

00:01:01,710 --> 00:01:06,150
some of the components are not well

00:01:04,619 --> 00:01:09,619
supported in Linux such as the touch

00:01:06,150 --> 00:01:11,850
pads or scroll panels there's no UI

00:01:09,619 --> 00:01:13,490
other than the RTT you want but there's

00:01:11,850 --> 00:01:15,990
no general you are that you can log into

00:01:13,490 --> 00:01:17,790
you're forcing the initial users to

00:01:15,990 --> 00:01:20,340
start with command line which can be a

00:01:17,790 --> 00:01:23,009
difficulty for them and Linux networking

00:01:20,340 --> 00:01:26,130
there's a lot of issues setting up to

00:01:23,009 --> 00:01:28,439
machines to talk to each other so we

00:01:26,130 --> 00:01:30,750
feel that clear path knows turtle bots

00:01:28,439 --> 00:01:32,939
they started selling them in 2001 we're

00:01:30,750 --> 00:01:35,610
averaging 200 units per year an

00:01:32,939 --> 00:01:37,590
interesting stat is that 70% of turtle

00:01:35,610 --> 00:01:41,340
bots purchase from clear bots are

00:01:37,590 --> 00:01:44,790
preassembled so this is what a turtle

00:01:41,340 --> 00:01:48,000
wall euclid comes in so sticking with

00:01:44,790 --> 00:01:49,890
them anatomy we can see that it's the

00:01:48,000 --> 00:01:52,040
same Anatomy as the previous turtle bots

00:01:49,890 --> 00:01:55,350
where there's plate standoffs

00:01:52,040 --> 00:01:57,840
however we take the RGB camera in a

00:01:55,350 --> 00:02:00,149
netbook and we combine it into one unit

00:01:57,840 --> 00:02:02,930
which is made by Intel was presented

00:02:00,149 --> 00:02:05,729
last year and this is the Euclid and

00:02:02,930 --> 00:02:08,340
then we use a new mobile base to crate -

00:02:05,729 --> 00:02:09,899
for my robot and we got our own special

00:02:08,340 --> 00:02:18,090
sauce which is the

00:02:09,899 --> 00:02:20,459
see you so those are good I said so the

00:02:18,090 --> 00:02:23,069
Intel Euclid is an Intel item quad-core

00:02:20,459 --> 00:02:26,430
four gigabytes of RAM 32 gigabytes of

00:02:23,069 --> 00:02:30,689
storage however it also combines the RGB

00:02:26,430 --> 00:02:32,609
camera the realsense are ours at 300 it

00:02:30,689 --> 00:02:35,250
also has a lot of connectivity options

00:02:32,609 --> 00:02:38,120
and it also adds some sensors such as

00:02:35,250 --> 00:02:41,189
the IMU barometer GPS and proximity

00:02:38,120 --> 00:02:43,980
there is an option for a battery or a

00:02:41,189 --> 00:02:46,980
powered backpack and it's pre-installed

00:02:43,980 --> 00:02:50,180
with Ubuntu Ross kinetic and the

00:02:46,980 --> 00:02:50,180
middleware for the camera

00:02:50,370 --> 00:02:55,980
this totally eliminates the need for a

00:02:53,370 --> 00:02:57,689
netbook and also allows for a platform

00:02:55,980 --> 00:03:01,650
that you can develop on outside of the

00:02:57,689 --> 00:03:05,069
robot the Euclid is total robotics

00:03:01,650 --> 00:03:06,870
package that you need for this robot so

00:03:05,069 --> 00:03:10,200
the Euclid out of the box comes up with

00:03:06,870 --> 00:03:11,790
an AP you go to the prefix the IP

00:03:10,200 --> 00:03:13,560
address and you have this AP that you

00:03:11,790 --> 00:03:16,620
can log into and you can start running

00:03:13,560 --> 00:03:18,510
demos now rather the box there's a few

00:03:16,620 --> 00:03:20,099
demos that you can run you can configure

00:03:18,510 --> 00:03:23,069
the networking you can do all this from

00:03:20,099 --> 00:03:25,680
the UI of the of the Euclid there's no

00:03:23,069 --> 00:03:27,989
need to learn the command line it goes

00:03:25,680 --> 00:03:29,790
there goes one step further or there's

00:03:27,989 --> 00:03:32,069
actually a VNC server so you don't even

00:03:29,790 --> 00:03:34,139
need a Linux machine on your end to

00:03:32,069 --> 00:03:35,579
interface with it you login to the VNC

00:03:34,139 --> 00:03:40,260
server and then you can actually view

00:03:35,579 --> 00:03:42,479
Arvest or get into the command line so

00:03:40,260 --> 00:03:46,019
what clearer path does has an MCU on the

00:03:42,479 --> 00:03:48,500
crate to interface with a crate and be a

00:03:46,019 --> 00:03:52,290
messenger to you good so we use an

00:03:48,500 --> 00:03:54,569
esp8266 microcontroller which stocks

00:03:52,290 --> 00:03:56,010
serial to the crate now this is needed

00:03:54,569 --> 00:03:58,169
because initially the crate will not

00:03:56,010 --> 00:04:02,940
supply enough power that you could turn

00:03:58,169 --> 00:04:05,669
it on additionally the DSP does the

00:04:02,940 --> 00:04:07,319
state management of the crate - there's

00:04:05,669 --> 00:04:08,879
your part user power breakout if the

00:04:07,319 --> 00:04:12,030
user wants to add any additional sensors

00:04:08,879 --> 00:04:13,319
it's raw serial to the Euclid and we use

00:04:12,030 --> 00:04:17,549
the Ross control to interface with the

00:04:13,319 --> 00:04:18,959
base so just to quickly go over the

00:04:17,549 --> 00:04:20,279
general introduction that the Euclid

00:04:18,959 --> 00:04:23,190
will eternal while you could we'll

00:04:20,279 --> 00:04:25,110
provide is quick start with an AP

00:04:23,190 --> 00:04:27,240
controlled by UI pre-configured with all

00:04:25,110 --> 00:04:30,750
the software from the factory a VNC

00:04:27,240 --> 00:04:32,160
server and a typical clear path humor we

00:04:30,750 --> 00:04:39,490
believe that you heard a while you could

00:04:32,160 --> 00:04:45,879
become the norm thank you thank you Tony

00:04:39,490 --> 00:04:45,879

YouTube URL: https://www.youtube.com/watch?v=bONFxjAheak


