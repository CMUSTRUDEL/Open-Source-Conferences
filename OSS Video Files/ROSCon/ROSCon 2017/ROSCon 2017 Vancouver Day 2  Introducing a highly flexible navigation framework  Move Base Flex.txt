Title: ROSCon 2017 Vancouver Day 2  Introducing a highly flexible navigation framework  Move Base Flex
Publication date: 2021-03-28
Playlist: ROSCon 2017
Description: 
	Unaltered video by Open Robotics from http://roscon.ros.org/2017 under the Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0) License
Captions: 
	00:00:00,740 --> 00:00:07,020
hello everyone so my name is Sebastien

00:00:03,929 --> 00:00:09,540
booths from Oslo Brook University so I'm

00:00:07,020 --> 00:00:11,940
a PhD student there in the knowledge

00:00:09,540 --> 00:00:15,059
based system group and that's my

00:00:11,940 --> 00:00:17,520
colleague here haha Santos women from

00:00:15,059 --> 00:00:21,420
magazine oh and we worked together on

00:00:17,520 --> 00:00:23,460
move pays flex and we want to enter to

00:00:21,420 --> 00:00:26,779
introduce move base flex as a highly

00:00:23,460 --> 00:00:30,570
flexible and navigation framework and

00:00:26,779 --> 00:00:35,460
why move base flex so if you look on the

00:00:30,570 --> 00:00:37,980
left side it's we have a static sequence

00:00:35,460 --> 00:00:40,820
of behaviors recovered behaviors and

00:00:37,980 --> 00:00:44,040
that is really really static and not

00:00:40,820 --> 00:00:47,960
flexible and if you think about the old

00:00:44,040 --> 00:00:51,780
move base it's yeah limited in its

00:00:47,960 --> 00:00:54,899
functionality and if you see at the code

00:00:51,780 --> 00:00:57,090
it's all located in one C++ file and

00:00:54,899 --> 00:01:00,180
also the internal state machine is

00:00:57,090 --> 00:01:02,219
located there hard coded and if you look

00:01:00,180 --> 00:01:06,390
at the right side we have a much more

00:01:02,219 --> 00:01:09,659
complex scenario here which is behavior

00:01:06,390 --> 00:01:13,229
free from magazine oh and also at the

00:01:09,659 --> 00:01:15,689
University and also we needed more

00:01:13,229 --> 00:01:18,810
extendable framework for other map

00:01:15,689 --> 00:01:22,140
representations as well so what are the

00:01:18,810 --> 00:01:24,360
core features mainly we have we are

00:01:22,140 --> 00:01:27,390
fully backwards compatible with the

00:01:24,360 --> 00:01:30,600
current navigation stack so that means

00:01:27,390 --> 00:01:35,159
you could use your current currently

00:01:30,600 --> 00:01:37,890
existing navigation components like the

00:01:35,159 --> 00:01:39,840
planners the local planners and global

00:01:37,890 --> 00:01:42,960
planners and the recovery behaviors and

00:01:39,840 --> 00:01:45,750
it will work with our move based Flags

00:01:42,960 --> 00:01:47,399
and we also provide actions for the

00:01:45,750 --> 00:01:50,189
submarines planning controlling and

00:01:47,399 --> 00:01:55,770
recovering and services to query the

00:01:50,189 --> 00:01:57,540
cost maps that means you are able to do

00:01:55,770 --> 00:02:00,600
your navigation task with something like

00:01:57,540 --> 00:02:04,409
an like an external executable object

00:02:00,600 --> 00:02:06,600
like smock or magazine who they use the

00:02:04,409 --> 00:02:10,560
behavior tree or you could just write

00:02:06,600 --> 00:02:12,960
your own and then we have comprehensive

00:02:10,560 --> 00:02:15,630
result and feedback information on all

00:02:12,960 --> 00:02:18,180
actions including error code and message

00:02:15,630 --> 00:02:21,390
from the load of plugins that means if

00:02:18,180 --> 00:02:24,840
there is something going wrong or an

00:02:21,390 --> 00:02:27,120
obstacle passes through the planner or

00:02:24,840 --> 00:02:30,150
the developers of the planners or

00:02:27,120 --> 00:02:32,070
controllers could yeah give some

00:02:30,150 --> 00:02:34,590
feedback information error codes error

00:02:32,070 --> 00:02:38,880
messages which then could be used in the

00:02:34,590 --> 00:02:42,480
external executed logic for reacting on

00:02:38,880 --> 00:02:44,430
that and we have also a separation

00:02:42,480 --> 00:02:46,980
between an abstract navigation framework

00:02:44,430 --> 00:02:50,300
and concrete implementation that is

00:02:46,980 --> 00:02:53,790
really useful for having other

00:02:50,300 --> 00:02:55,760
representations like your 3d occupancy

00:02:53,790 --> 00:02:58,110
grid maps or if you think about

00:02:55,760 --> 00:03:01,110
navigation on meshes that's also

00:02:58,110 --> 00:03:03,540
possible with move based flags okay

00:03:01,110 --> 00:03:07,050
let's go more to more into the detail

00:03:03,540 --> 00:03:11,100
here we see the architecture now it's a

00:03:07,050 --> 00:03:14,100
lot yes but we concentrate first on the

00:03:11,100 --> 00:03:17,970
blue box here this is this is interface

00:03:14,100 --> 00:03:20,160
for the external execute of logic so

00:03:17,970 --> 00:03:22,440
namely the actions here we provide these

00:03:20,160 --> 00:03:24,270
action as mentioned or planning

00:03:22,440 --> 00:03:28,260
controlling and recovering that we have

00:03:24,270 --> 00:03:31,860
the gap pass exact powers and recovery

00:03:28,260 --> 00:03:34,530
here the get pass for from for computing

00:03:31,860 --> 00:03:37,260
a pass from the gold formulas from the

00:03:34,530 --> 00:03:41,880
stop host to the goal post and exit path

00:03:37,260 --> 00:03:45,300
then execute that pass and if there is

00:03:41,880 --> 00:03:48,780
maybe there's something happen or

00:03:45,300 --> 00:03:52,050
something went wrong and we could react

00:03:48,780 --> 00:03:55,620
on that and call the recovery message

00:03:52,050 --> 00:03:59,220
the recovery action especially specific

00:03:55,620 --> 00:04:02,640
one and to wrap that up we have the map

00:03:59,220 --> 00:04:06,540
move base action here so the move based

00:04:02,640 --> 00:04:09,840
action just do it all together like in a

00:04:06,540 --> 00:04:13,220
old move based fashion first planning

00:04:09,840 --> 00:04:16,140
then controlling and if it's necessary

00:04:13,220 --> 00:04:20,880
calling a static sequence of recovery

00:04:16,140 --> 00:04:25,840
behaviors and on the bottom side you see

00:04:20,880 --> 00:04:27,790
services and are provided for querying

00:04:25,840 --> 00:04:31,720
cost maps that is on the move based

00:04:27,790 --> 00:04:36,910
implementation level below the dotted

00:04:31,720 --> 00:04:39,729
line okay let's say I had said it's also

00:04:36,910 --> 00:04:45,040
compatible with the current move base

00:04:39,729 --> 00:04:48,520
that we provide here I can see API

00:04:45,040 --> 00:04:51,699
support which is mainly a pison script

00:04:48,520 --> 00:04:54,970
having here the service make plan as you

00:04:51,699 --> 00:04:58,000
already know I think and we have the

00:04:54,970 --> 00:05:01,330
action the old old move based action was

00:04:58,000 --> 00:05:03,880
just which just wraps the new move based

00:05:01,330 --> 00:05:08,800
action which is much more powerful and

00:05:03,880 --> 00:05:12,580
we have the simple goal topic here you

00:05:08,800 --> 00:05:15,419
could publish goal in hours and it will

00:05:12,580 --> 00:05:15,419
that will work

00:05:16,050 --> 00:05:24,210
okay let's concentrate on the upper side

00:05:20,680 --> 00:05:27,010
here on the things above the dotted line

00:05:24,210 --> 00:05:30,610
so all the abstract execution classes

00:05:27,010 --> 00:05:37,120
contain the main execution logic so

00:05:30,610 --> 00:05:41,760
everything is start here and there's no

00:05:37,120 --> 00:05:46,180
binding to any representation so that

00:05:41,760 --> 00:05:49,090
enables us a really new system and we

00:05:46,180 --> 00:05:51,090
could also think about navigating with

00:05:49,090 --> 00:05:56,340
drones with sisters systems or

00:05:51,090 --> 00:05:59,770
navigating on surfaces like using meshes

00:05:56,340 --> 00:06:02,650
if we go more in detail here just for a

00:05:59,770 --> 00:06:05,530
short it's based on abstract execution

00:06:02,650 --> 00:06:07,539
class already set and the interfaces in

00:06:05,530 --> 00:06:09,789
the navcore inherits abstract interfaces

00:06:07,539 --> 00:06:14,590
that means we have still the same

00:06:09,789 --> 00:06:16,810
interfaces for your plugins so but at

00:06:14,590 --> 00:06:19,000
the same time we provide much richer

00:06:16,810 --> 00:06:23,530
interface much richer much richer

00:06:19,000 --> 00:06:28,510
interface and that enables you as

00:06:23,530 --> 00:06:31,410
developers for example to give more were

00:06:28,510 --> 00:06:35,200
meaningful more valuable information

00:06:31,410 --> 00:06:37,419
back to the executed logic like

00:06:35,200 --> 00:06:38,050
something went wrong and then you can

00:06:37,419 --> 00:06:40,930
react on

00:06:38,050 --> 00:06:44,409
and call a specific recovery behavior or

00:06:40,930 --> 00:06:46,539
whatever okay and then we have the

00:06:44,409 --> 00:06:50,259
specific implementation here below the

00:06:46,539 --> 00:06:52,990
dotted line so move base is just a

00:06:50,259 --> 00:06:56,080
particular implementation of the

00:06:52,990 --> 00:06:58,360
navigation system and we also provide a

00:06:56,080 --> 00:07:01,750
simple navigation server which which

00:06:58,360 --> 00:07:05,620
does not have which does not have any

00:07:01,750 --> 00:07:08,949
binding for a map representation so you

00:07:05,620 --> 00:07:13,360
could use that for navigating in 3d or

00:07:08,949 --> 00:07:16,569
whatever and now we see that in total

00:07:13,360 --> 00:07:19,090
again here you if you look at the middle

00:07:16,569 --> 00:07:22,539
there's abstract navigation server which

00:07:19,090 --> 00:07:24,250
observes the abstract planet execution

00:07:22,539 --> 00:07:27,069
that's our controller and execution and

00:07:24,250 --> 00:07:29,740
the abstract recovery execution so it's

00:07:27,069 --> 00:07:33,940
more more or less a small safety system

00:07:29,740 --> 00:07:37,539
here and it is really working you can

00:07:33,940 --> 00:07:39,280
see it here we use it with a standard

00:07:37,539 --> 00:07:41,710
global planner and the DVI a local

00:07:39,280 --> 00:07:45,340
planner it's a small robot at our

00:07:41,710 --> 00:07:48,630
University in a sixth-floor so on the

00:07:45,340 --> 00:07:52,479
right side you see a smart system and

00:07:48,630 --> 00:07:55,509
it's now recovering and if they keep

00:07:52,479 --> 00:07:58,060
recovering it's just drives backwards if

00:07:55,509 --> 00:08:00,069
it's succeeded then it goes to the cat

00:07:58,060 --> 00:08:05,050
person immediately to the exit pass

00:08:00,069 --> 00:08:07,389
again and you will see it just executes

00:08:05,050 --> 00:08:10,360
the purse and then if there is something

00:08:07,389 --> 00:08:13,840
not optimal so the controller is not

00:08:10,360 --> 00:08:16,710
working perfectly then goes you into the

00:08:13,840 --> 00:08:20,560
recovery and then back to the get pass

00:08:16,710 --> 00:08:22,569
that is really simple smart here you

00:08:20,560 --> 00:08:25,120
could have a much more complex system

00:08:22,569 --> 00:08:28,000
here if you need that for your

00:08:25,120 --> 00:08:30,729
application or for you yeah

00:08:28,000 --> 00:08:32,620
robot always depends on your on your

00:08:30,729 --> 00:08:35,050
system on your robot what do you what do

00:08:32,620 --> 00:08:38,019
you need here so that's just to show

00:08:35,050 --> 00:08:40,690
that is possible and working and I

00:08:38,019 --> 00:08:44,740
already mentioned that is it is working

00:08:40,690 --> 00:08:46,320
without with other work so without cost

00:08:44,740 --> 00:08:48,730
maps so it's working with other

00:08:46,320 --> 00:08:50,920
representations that it's a project of

00:08:48,730 --> 00:08:54,880
mine and at the University

00:08:50,920 --> 00:08:57,490
a mesh navigation so you see it's also

00:08:54,880 --> 00:08:59,410
working with mesh navigational and we

00:08:57,490 --> 00:09:06,839
also use a small system here on the

00:08:59,410 --> 00:09:11,140
right side yeah that's outdoor a robot

00:09:06,839 --> 00:09:14,529
called Pluto and works too

00:09:11,140 --> 00:09:25,930
now my colleague will go on with how to

00:09:14,529 --> 00:09:31,060
start with off base flex so now we'll

00:09:25,930 --> 00:09:33,339
put the thing to work so how to use move

00:09:31,060 --> 00:09:35,680
base flex so as I've asked an already

00:09:33,339 --> 00:09:38,170
said we have make an effort to make it

00:09:35,680 --> 00:09:41,740
completely backward compatible so to

00:09:38,170 --> 00:09:43,510
minimize the reluctance of people to

00:09:41,740 --> 00:09:45,459
start using it so you can just some

00:09:43,510 --> 00:09:47,230
black remove base implacable place place

00:09:45,459 --> 00:09:51,730
and he's gonna work but first this is

00:09:47,230 --> 00:09:53,649
boring because we win nothing so still

00:09:51,730 --> 00:09:56,320
as he said you can also have a

00:09:53,649 --> 00:09:59,350
monolithic navigation action

00:09:56,320 --> 00:10:01,540
I bring you from A to B but the thing

00:09:59,350 --> 00:10:03,730
says targeting interesting when when

00:10:01,540 --> 00:10:05,230
just are using the different axiom for

00:10:03,730 --> 00:10:09,279
the global planner local planner

00:10:05,230 --> 00:10:11,470
recovery with a bus display this we

00:10:09,279 --> 00:10:16,660
provide in the in the wiki already a

00:10:11,470 --> 00:10:19,480
smack tutorial that worse is the basic

00:10:16,660 --> 00:10:22,449
functionality of poor remove base just

00:10:19,480 --> 00:10:26,320
implemented in assessed a machine as is

00:10:22,449 --> 00:10:28,750
Mac we will provide more tutorials for

00:10:26,320 --> 00:10:31,269
especially for me rating so if you want

00:10:28,750 --> 00:10:36,220
to create your own navigation framework

00:10:31,269 --> 00:10:39,760
based in or abstract scaffolding

00:10:36,220 --> 00:10:41,620
then I will so of course the power here

00:10:39,760 --> 00:10:46,060
is that you can use any executive that

00:10:41,620 --> 00:10:48,220
you won't call it a script in or as we

00:10:46,060 --> 00:10:49,690
do in Makati know a behavioral twist I'm

00:10:48,220 --> 00:10:52,029
gonna concentrating behave Autry's

00:10:49,690 --> 00:10:56,529
because is what I'm doing Randy Martino

00:10:52,029 --> 00:11:01,690
so what we do in with move move based

00:10:56,529 --> 00:11:04,160
flex we take so we use the service

00:11:01,690 --> 00:11:07,069
provided by for checking the

00:11:04,160 --> 00:11:08,720
Gold Pose so we don't try to plan to

00:11:07,069 --> 00:11:11,120
somewhere that is already in collision

00:11:08,720 --> 00:11:15,560
or we don't try to panic we are already

00:11:11,120 --> 00:11:17,180
in a collision pause we minimize the

00:11:15,560 --> 00:11:19,940
number of times we call to the global

00:11:17,180 --> 00:11:24,380
planner because it's expensive and takes

00:11:19,940 --> 00:11:26,240
time so but by other hand for the same

00:11:24,380 --> 00:11:29,720
reason that this is low we can we can

00:11:26,240 --> 00:11:33,350
start in parallel and do a long term

00:11:29,720 --> 00:11:35,389
plan with a lot of allocating time at

00:11:33,350 --> 00:11:39,319
the same time plan fast and stop moving

00:11:35,389 --> 00:11:43,519
to understate the the good long term

00:11:39,319 --> 00:11:47,870
plan into the Korean navigation we call

00:11:43,519 --> 00:11:49,639
now the right recovery behavior for the

00:11:47,870 --> 00:11:52,310
current tasks and for the current error

00:11:49,639 --> 00:11:55,699
as he said now we get rich information

00:11:52,310 --> 00:11:57,470
from the plugin so now we know the local

00:11:55,699 --> 00:12:00,589
planner failed because the path is

00:11:57,470 --> 00:12:05,480
blocked or because is in Robeson

00:12:00,589 --> 00:12:08,089
collision or whatever as we saw in his

00:12:05,480 --> 00:12:09,199
video we can now introspect was

00:12:08,089 --> 00:12:10,970
happening with navigation

00:12:09,199 --> 00:12:13,790
we are planning we are moving if we are

00:12:10,970 --> 00:12:19,430
recovering we will see also the

00:12:13,790 --> 00:12:20,649
equivalent in with behavioral trees in

00:12:19,430 --> 00:12:24,399
Magaddino

00:12:20,649 --> 00:12:28,550
this is a part of the navigation

00:12:24,399 --> 00:12:30,740
behavior tree we are using now is much

00:12:28,550 --> 00:12:33,860
bigger but don't need to enter into a

00:12:30,740 --> 00:12:40,009
tails or introduce you or fancy robot

00:12:33,860 --> 00:12:41,839
toe loop as quite heavy heavy beast a

00:12:40,009 --> 00:12:43,819
bit nasty for navigation because it's

00:12:41,839 --> 00:12:46,310
not it's differential Drive but is not

00:12:43,819 --> 00:12:48,439
the differential Drive is not in the

00:12:46,310 --> 00:12:50,480
center of the robot and it's relatively

00:12:48,439 --> 00:12:55,189
long is rectangular shape you will see

00:12:50,480 --> 00:12:58,459
the footprint I'm gonna show this in

00:12:55,189 --> 00:13:01,639
action with with a short video with

00:12:58,459 --> 00:13:05,410
three 3s catch the first we saw how we

00:13:01,639 --> 00:13:08,600
are both planning minimizing the

00:13:05,410 --> 00:13:11,420
minimizing the waste of time when

00:13:08,600 --> 00:13:15,800
something for example cross day the

00:13:11,420 --> 00:13:17,230
korean path how we save a useless call

00:13:15,800 --> 00:13:19,510
to the planner when

00:13:17,230 --> 00:13:22,630
a star pose or the goal post is in

00:13:19,510 --> 00:13:24,430
collision and how we escape for a

00:13:22,630 --> 00:13:26,590
collision so aboard the current

00:13:24,430 --> 00:13:28,620
navigation call the appropriate recovery

00:13:26,590 --> 00:13:34,060
behavior and then resume the

00:13:28,620 --> 00:13:36,400
Denarius okay so here we are planning so

00:13:34,060 --> 00:13:43,300
the robot is the robot II just follow in

00:13:36,400 --> 00:13:45,910
a trajectory and nice guy supposed to

00:13:43,300 --> 00:13:49,060
cross in front of the robot the idea is

00:13:45,910 --> 00:13:52,390
I know pretend into so that we don't

00:13:49,060 --> 00:13:53,920
cross over a guy by just saying that we

00:13:52,390 --> 00:13:56,940
don't trigger their planning we just

00:13:53,920 --> 00:14:00,820
call the appropriate recovery here again

00:13:56,940 --> 00:14:04,330
we star and we sin a goal that is in

00:14:00,820 --> 00:14:06,460
collision so what we do nothing we save

00:14:04,330 --> 00:14:09,880
the time to call the global plan now we

00:14:06,460 --> 00:14:12,250
say a legitimate goal and but we are in

00:14:09,880 --> 00:14:14,920
collision so instead of a star planning

00:14:12,250 --> 00:14:18,730
we move auto collision now the recovery

00:14:14,920 --> 00:14:21,550
is executing the yellow box in the tree

00:14:18,730 --> 00:14:28,950
and okay we are free now and we can plan

00:14:21,550 --> 00:14:33,940
angle and here we are following a

00:14:28,950 --> 00:14:40,290
Filipina plan and oh surprise we cross

00:14:33,940 --> 00:14:42,610
over my good friend again we call the

00:14:40,290 --> 00:14:46,720
recovery behavior that brings out of

00:14:42,610 --> 00:14:48,970
collision and once this complete we call

00:14:46,720 --> 00:14:52,260
again the planner and the local planner

00:14:48,970 --> 00:14:54,850
so we have saved a ton of Coleen

00:14:52,260 --> 00:15:03,520
stupidly all the recovery behaviors in

00:14:54,850 --> 00:15:06,640
sequence until when recovery works so so

00:15:03,520 --> 00:15:09,820
far so good this is a ongoing project we

00:15:06,640 --> 00:15:11,470
have already finished implementation

00:15:09,820 --> 00:15:13,090
that we have been using in maggoty know

00:15:11,470 --> 00:15:16,390
for several months and also in the

00:15:13,090 --> 00:15:19,360
university of fourtner book but we we

00:15:16,390 --> 00:15:21,310
keep developing this so we are now but

00:15:19,360 --> 00:15:26,020
we plan to release as soon as possible

00:15:21,310 --> 00:15:29,290
probably of tourists but we have many

00:15:26,020 --> 00:15:31,100
ideas in mind how how to improve this

00:15:29,290 --> 00:15:33,290
and one of the things

00:15:31,100 --> 00:15:36,260
within is gonna be really good he

00:15:33,290 --> 00:15:39,110
centigrade a grid map from the 80s from

00:15:36,260 --> 00:15:41,210
Sulak probably many of you knows but we

00:15:39,110 --> 00:15:43,190
have very good initial experience and we

00:15:41,210 --> 00:15:46,250
are working on already on integrating in

00:15:43,190 --> 00:15:47,420
in monthly my book based flex replace

00:15:46,250 --> 00:15:51,290
the all good

00:15:47,420 --> 00:15:53,060
a Cosmo many other things that we don't

00:15:51,290 --> 00:15:57,440
know still we priority will give but

00:15:53,060 --> 00:15:59,900
will be cool to have provide the goal

00:15:57,440 --> 00:16:02,750
with a set of planners that you can use

00:15:59,900 --> 00:16:05,170
and maybe try in sequence or try in

00:16:02,750 --> 00:16:09,380
parallel and both the best solution or

00:16:05,170 --> 00:16:10,150
whatever so that select on a run time

00:16:09,380 --> 00:16:13,520
why not

00:16:10,150 --> 00:16:15,190
polls resume the navigation was simple

00:16:13,520 --> 00:16:17,840
but it's going to be useful and

00:16:15,190 --> 00:16:20,510
something we have discovered market II

00:16:17,840 --> 00:16:27,260
know that we really need is plans with

00:16:20,510 --> 00:16:32,720
weapons we are hitting for your proposal

00:16:27,260 --> 00:16:35,270
and ideas yeah looking forward for him

00:16:32,720 --> 00:16:38,600
any idea they any feature that you will

00:16:35,270 --> 00:16:42,110
you always dream to have in the all good

00:16:38,600 --> 00:16:47,690
move base now may be the right time to

00:16:42,110 --> 00:16:49,910
to get it just invite you to go to the

00:16:47,690 --> 00:16:52,010
wiki you will find here the the

00:16:49,910 --> 00:16:55,520
tutorials the tutorial right now but

00:16:52,010 --> 00:16:59,900
it's gonna change soon to the github and

00:16:55,520 --> 00:17:02,720
open issues if you have any really equal

00:16:59,900 --> 00:17:06,950
feature that you would love to have here

00:17:02,720 --> 00:17:11,810
and I can not finish with us saying all

00:17:06,950 --> 00:17:14,180
surprise we are hiding yes go into

00:17:11,810 --> 00:17:17,150
detail but I invite you if you are

00:17:14,180 --> 00:17:21,290
interested or just curious or go to or

00:17:17,150 --> 00:17:25,610
booth and there you can talk with modest

00:17:21,290 --> 00:17:30,620
or with myself and we will we will be

00:17:25,610 --> 00:17:33,050
happy to hear from you that's all any

00:17:30,620 --> 00:17:34,680
questions suggestion

00:17:33,050 --> 00:17:42,090
critics

00:17:34,680 --> 00:17:44,830
[Applause]

00:17:42,090 --> 00:17:46,440
all right just wait for some people head

00:17:44,830 --> 00:17:49,420
to the mics if you've got a question I

00:17:46,440 --> 00:17:51,370
was wondering just so at the moment you

00:17:49,420 --> 00:17:53,560
have one tutorial is for the smash

00:17:51,370 --> 00:17:55,120
executive no tutorials at the moment for

00:17:53,560 --> 00:17:57,430
behavior chief it is that something that

00:17:55,120 --> 00:18:01,290
you were working towards a tutorial is

00:17:57,430 --> 00:18:04,870
much state machine just very simple yes

00:18:01,290 --> 00:18:07,930
to give a starting point to possible

00:18:04,870 --> 00:18:13,000
user to how to start doing building up

00:18:07,930 --> 00:18:15,720
something more complex and amazing looks

00:18:13,000 --> 00:18:22,660
like we have a question on its way

00:18:15,720 --> 00:18:26,980
come on don't be shy so say I had a

00:18:22,660 --> 00:18:29,740
robotic application where instead of a

00:18:26,980 --> 00:18:31,990
goal pose and orientation I was more

00:18:29,740 --> 00:18:33,820
interested in a goal region would I be

00:18:31,990 --> 00:18:36,490
able to implement something like that

00:18:33,820 --> 00:18:41,440
using move base flex if not what would

00:18:36,490 --> 00:18:45,010
you recommend sorry I didn't get these

00:18:41,440 --> 00:18:48,220
into repeat oh sure to the microphone if

00:18:45,010 --> 00:18:50,230
yeah I'm sorry if I had a robotic

00:18:48,220 --> 00:18:53,260
application or I was more interested in

00:18:50,230 --> 00:18:54,730
a goal region say I wanted to robot to

00:18:53,260 --> 00:18:56,770
end up in a room rather than at a

00:18:54,730 --> 00:18:59,350
specific pose is that something I could

00:18:56,770 --> 00:19:01,870
do with move base flex or if not well

00:18:59,350 --> 00:19:03,610
what would you recommend actually we

00:19:01,870 --> 00:19:07,330
implemented something like it called

00:19:03,610 --> 00:19:14,080
tolerance but yeah we could improve that

00:19:07,330 --> 00:19:16,300
for just open an issue I just want to

00:19:14,080 --> 00:19:18,820
mention that oops sorry

00:19:16,300 --> 00:19:21,070
well movies Lex is just suffering war so

00:19:18,820 --> 00:19:24,160
there is that we we give you the tool

00:19:21,070 --> 00:19:27,910
and you build on top your super fancy

00:19:24,160 --> 00:19:33,100
super sophisticated navigation behavior

00:19:27,910 --> 00:19:33,520
home fantastic then let's thank our

00:19:33,100 --> 00:19:39,029
speakers again

00:19:33,520 --> 00:19:39,029

YouTube URL: https://www.youtube.com/watch?v=TDR8OmRveVw


