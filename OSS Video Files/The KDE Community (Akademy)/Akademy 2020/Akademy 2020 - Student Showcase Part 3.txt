Title: Akademy 2020 - Student Showcase Part 3
Publication date: 2020-11-24
Playlist: Akademy 2020
Description: 
	Every year a number of students join us through our student programs Google Summer of Code and Season of KDE. In this session some of them will show you what they've been working on and talk about their experience working with the KDE community.

Speakers and Presentation Topics Include:
amyspark - Dynamic Fill Layers in Krita using SeExpr
Ashwin Dhakaita - Integrating the MyPaint Brush Engine in Krita
Kitae Kim - Improve MAVLink integration of Kirogi
Saurabh Kumar - Storyboard Docker for Krita
Captions: 
	00:00:01,130 --> 00:00:08,600
[Music]

00:00:10,960 --> 00:00:17,680
student showcase

00:00:12,480 --> 00:00:19,279
part three hi everyone my name is saurav

00:00:17,680 --> 00:00:21,119
and i'm a third year student at delhi

00:00:19,279 --> 00:00:22,960
technological university i will be

00:00:21,119 --> 00:00:26,720
presenting my gsa project today which

00:00:22,960 --> 00:00:28,400
was to implement a storyboard doctrine

00:00:26,720 --> 00:00:30,480
for those of you who are unfamiliar with

00:00:28,400 --> 00:00:32,719
storyboarding is a graphical

00:00:30,480 --> 00:00:34,800
representation of the story

00:00:32,719 --> 00:00:35,920
so it is meant to convey the idea of a

00:00:34,800 --> 00:00:38,640
story

00:00:35,920 --> 00:00:40,239
using pictures most storyboards consist

00:00:38,640 --> 00:00:42,879
of small thumbnails

00:00:40,239 --> 00:00:45,600
that describe the content of the scene

00:00:42,879 --> 00:00:48,719
you may also have some other information

00:00:45,600 --> 00:00:52,160
like the dialogue or action

00:00:48,719 --> 00:00:54,239
or the camera movements and positions

00:00:52,160 --> 00:00:56,160
like in this one they have a thumbnail

00:00:54,239 --> 00:00:58,079
and some deep description of what is

00:00:56,160 --> 00:01:00,160
happening in the thumbnail

00:00:58,079 --> 00:01:01,359
storyboarding happens before the actual

00:01:00,160 --> 00:01:03,600
animation

00:01:01,359 --> 00:01:05,600
is sort of a planning for the animation

00:01:03,600 --> 00:01:07,119
and makes sure that everyone is on the

00:01:05,600 --> 00:01:09,360
same page

00:01:07,119 --> 00:01:10,720
also animating things is time taking and

00:01:09,360 --> 00:01:13,360
you don't want to spend

00:01:10,720 --> 00:01:15,119
time animating something only to be told

00:01:13,360 --> 00:01:17,840
that this was not what the director

00:01:15,119 --> 00:01:18,479
wanted so a storyboard facilitates

00:01:17,840 --> 00:01:20,479
better

00:01:18,479 --> 00:01:22,560
discussion about the animation and

00:01:20,479 --> 00:01:24,840
characters it also allows you to

00:01:22,560 --> 00:01:28,080
showcase your idea to potential

00:01:24,840 --> 00:01:30,400
employers all right moving on to how the

00:01:28,080 --> 00:01:32,479
docker is implemented

00:01:30,400 --> 00:01:33,600
this docker is part of creator's plugin

00:01:32,479 --> 00:01:36,640
system

00:01:33,600 --> 00:01:38,799
qt's mbc framework is used so there are

00:01:36,640 --> 00:01:39,759
two models which interact with each

00:01:38,799 --> 00:01:42,079
other

00:01:39,759 --> 00:01:44,079
and there are view and delegate classes

00:01:42,079 --> 00:01:46,320
for each of the models

00:01:44,079 --> 00:01:48,640
also creators animation interface is

00:01:46,320 --> 00:01:50,640
used for interaction with the timeline

00:01:48,640 --> 00:01:53,600
operand creator

00:01:50,640 --> 00:01:55,439
it takes a list of key range that exists

00:01:53,600 --> 00:01:57,920
in the timeline docker

00:01:55,439 --> 00:01:58,960
and provides an interface to add some

00:01:57,920 --> 00:02:02,079
extra data

00:01:58,960 --> 00:02:04,960
for those frames also

00:02:02,079 --> 00:02:07,040
thumbnail for all the frames in

00:02:04,960 --> 00:02:09,840
storyboard docker are visible at the

00:02:07,040 --> 00:02:09,840
same time

00:02:10,560 --> 00:02:15,599
all right so now let's take a look at

00:02:12,640 --> 00:02:20,840
this google talker includer

00:02:15,599 --> 00:02:23,840
first of all to open it go to settings

00:02:20,840 --> 00:02:23,840
talkers

00:02:26,610 --> 00:02:30,469
[Music]

00:02:34,720 --> 00:02:36,959
each

00:02:46,140 --> 00:02:51,920
[Music]

00:02:49,120 --> 00:02:54,319
the visibility of each of the command

00:02:51,920 --> 00:02:54,319
fields

00:02:54,720 --> 00:03:02,159
and rearrange them and add new commands

00:02:57,760 --> 00:03:05,120
and delete them and such things

00:03:02,159 --> 00:03:08,159
to edit a comment just double click and

00:03:05,120 --> 00:03:08,159
uh type anything

00:03:14,720 --> 00:03:18,080
now let's take a look at the interaction

00:03:16,560 --> 00:03:20,400
between the storyboard docker and

00:03:18,080 --> 00:03:22,560
timeline

00:03:20,400 --> 00:03:26,080
every panel in the storyboard docker

00:03:22,560 --> 00:03:28,799
corresponds to a frame in diameter

00:03:26,080 --> 00:03:31,360
in the top left corner there is a frame

00:03:28,799 --> 00:03:33,280
number for each of the panels

00:03:31,360 --> 00:03:35,120
duration filled the top right corner

00:03:33,280 --> 00:03:37,920
corresponds to the number of frames to

00:03:35,120 --> 00:03:40,080
get to the next keyframe

00:03:37,920 --> 00:03:41,840
you can see in the timeline docker at

00:03:40,080 --> 00:03:43,920
the bottom

00:03:41,840 --> 00:03:45,760
to see the duration for a panel in this

00:03:43,920 --> 00:03:47,840
whole bulldog

00:03:45,760 --> 00:03:50,319
key frames after the frame for that

00:03:47,840 --> 00:03:52,159
panel move to the right

00:03:50,319 --> 00:03:54,959
similarly if you decrease the durations

00:03:52,159 --> 00:03:57,120
they move to the left

00:03:54,959 --> 00:03:58,640
also when key frames are inserted in the

00:03:57,120 --> 00:04:01,280
timeline offer

00:03:58,640 --> 00:04:01,280
storyboard

00:04:12,480 --> 00:04:14,959
the panel

00:04:18,959 --> 00:04:22,479
let's take a look at the buttons at the

00:04:20,720 --> 00:04:24,240
top of the dock

00:04:22,479 --> 00:04:26,160
the top right corner we have the arrange

00:04:24,240 --> 00:04:28,000
button which is used to manage

00:04:26,160 --> 00:04:29,280
how the panels are arranged in the

00:04:28,000 --> 00:04:33,040
docker

00:04:29,280 --> 00:04:35,360
we can choose the views and modes

00:04:33,040 --> 00:04:37,120
views decide what part of the panel is

00:04:35,360 --> 00:04:39,280
visible in the docker

00:04:37,120 --> 00:04:40,880
we can choose to see only the thumbnail

00:04:39,280 --> 00:04:44,160
or only the comments

00:04:40,880 --> 00:04:47,440
or both the modes

00:04:44,160 --> 00:04:49,199
options decide how the panel is arranged

00:04:47,440 --> 00:04:51,759
you can choose to arrange them in row

00:04:49,199 --> 00:04:55,040
wise fashion or column wise fashion

00:04:51,759 --> 00:04:56,800
or in a great in the top problem we have

00:04:55,040 --> 00:04:58,240
the export button

00:04:56,800 --> 00:05:00,560
which can be used to export the

00:04:58,240 --> 00:05:01,440
storyboard to either a pdf or sd

00:05:00,560 --> 00:05:03,759
document

00:05:01,440 --> 00:05:06,479
the export dialog has options to manage

00:05:03,759 --> 00:05:08,240
the layout of the exported document

00:05:06,479 --> 00:05:10,000
you can choose the range of the panels

00:05:08,240 --> 00:05:13,039
to be exported

00:05:10,000 --> 00:05:16,639
rows and columns of panels per page

00:05:13,039 --> 00:05:18,639
font size page size and orientation

00:05:16,639 --> 00:05:21,440
it is also an option to choose layout

00:05:18,639 --> 00:05:24,240
from an svg file

00:05:21,440 --> 00:05:26,720
let's export the storyboard and see the

00:05:24,240 --> 00:05:26,720
results

00:05:35,199 --> 00:05:41,919
so it works nicely you very much for

00:05:38,800 --> 00:05:41,919
watching the presentation

00:05:44,000 --> 00:05:49,919
hi everyone my name is lenardo segovia

00:05:47,440 --> 00:05:51,360
i'm from bayabante in argentina and my

00:05:49,919 --> 00:05:54,639
project is entitled

00:05:51,360 --> 00:05:56,400
dynamic field layers in ripa using cf

00:05:54,639 --> 00:05:58,400
this project was implemented in ekita

00:05:56,400 --> 00:05:59,440
painting suite and was mentored by both

00:05:58,400 --> 00:06:03,360
the witch and friend

00:05:59,440 --> 00:06:07,360
dimitri geseko and evan joseph

00:06:03,360 --> 00:06:09,120
let's begin with some context

00:06:07,360 --> 00:06:10,720
areas are one of core concepts of

00:06:09,120 --> 00:06:12,319
digital painting

00:06:10,720 --> 00:06:13,840
they let artists manage certain

00:06:12,319 --> 00:06:14,960
components independently for the rest of

00:06:13,840 --> 00:06:17,919
the outcome

00:06:14,960 --> 00:06:18,720
for instance backgrounds lighting

00:06:17,919 --> 00:06:21,840
lineart

00:06:18,720 --> 00:06:23,360
and so on patterns and textures are also

00:06:21,840 --> 00:06:24,639
essential components

00:06:23,360 --> 00:06:27,520
they are used to simulate the opinions

00:06:24,639 --> 00:06:30,400
of physical materials and phenomena

00:06:27,520 --> 00:06:32,080
usually they are saved as trusted images

00:06:30,400 --> 00:06:32,639
this means they are limited at creation

00:06:32,080 --> 00:06:35,840
time

00:06:32,639 --> 00:06:35,840
at their size and resolution

00:06:38,000 --> 00:06:41,039
as of the latest stable version of krita

00:06:39,840 --> 00:06:43,360
for the three

00:06:41,039 --> 00:06:45,919
it supports using patterns and factors

00:06:43,360 --> 00:06:48,639
to two types of layers

00:06:45,919 --> 00:06:50,319
the first is called a file layer and in

00:06:48,639 --> 00:06:51,599
the two embed stop textures on your

00:06:50,319 --> 00:06:53,680
canvas

00:06:51,599 --> 00:06:55,440
and the second is called a fill layer

00:06:53,680 --> 00:06:57,280
and it can be used for plot fills

00:06:55,440 --> 00:06:59,360
and label raster patterns are random

00:06:57,280 --> 00:07:01,599
noise

00:06:59,360 --> 00:07:03,599
as you can see either of them lets users

00:07:01,599 --> 00:07:06,960
create dynamically generated content

00:07:03,599 --> 00:07:06,960
in an artistically free way

00:07:09,840 --> 00:07:13,440
from an implementation point of view

00:07:11,759 --> 00:07:16,240
adding a fill layer type

00:07:13,440 --> 00:07:18,880
requires many moving parts the first

00:07:16,240 --> 00:07:20,319
minimum is the following two

00:07:18,880 --> 00:07:23,199
first you must implement the general

00:07:20,319 --> 00:07:25,599
editor which paints the layer contents

00:07:23,199 --> 00:07:27,360
generators are a subclass of critters is

00:07:25,599 --> 00:07:29,599
generated

00:07:27,360 --> 00:07:33,360
next we need to subclass this complete

00:07:29,599 --> 00:07:34,800
widget to expose a configuration widget

00:07:33,360 --> 00:07:36,400
you may also need to implement a new

00:07:34,800 --> 00:07:39,520
type of reasons

00:07:36,400 --> 00:07:41,360
this is done in four steps first you

00:07:39,520 --> 00:07:44,160
expose the new resource as a subclass

00:07:41,360 --> 00:07:44,800
of code resource then kita must be made

00:07:44,160 --> 00:07:46,240
aware of it

00:07:44,800 --> 00:07:48,879
throughout the double extension of its

00:07:46,240 --> 00:07:51,520
resource server

00:07:48,879 --> 00:07:52,720
next to make a selectable in a selection

00:07:51,520 --> 00:07:54,960
widget

00:07:52,720 --> 00:07:56,560
it provides a widget for this purpose

00:07:54,960 --> 00:07:58,160
for a source you can choose

00:07:56,560 --> 00:08:00,319
that can be instantiated with each

00:07:58,160 --> 00:08:02,000
response type

00:08:00,319 --> 00:08:04,319
obviously you'll still have to write the

00:08:02,000 --> 00:08:06,960
same widget and search

00:08:04,319 --> 00:08:12,720
but it's very designable as long as it

00:08:06,960 --> 00:08:14,960
integrates with the resource setup

00:08:12,720 --> 00:08:16,800
so my project acts as a new type of

00:08:14,960 --> 00:08:18,560
field layer that implements scriptable

00:08:16,800 --> 00:08:19,759
dynamic content

00:08:18,560 --> 00:08:21,440
this is powered by an expression

00:08:19,759 --> 00:08:22,319
language library created by this

00:08:21,440 --> 00:08:25,599
animation

00:08:22,319 --> 00:08:27,680
called c expert this library enables

00:08:25,599 --> 00:08:29,199
specific control and customization of

00:08:27,680 --> 00:08:31,120
the end result

00:08:29,199 --> 00:08:33,279
anatomica allows users to write their

00:08:31,120 --> 00:08:34,399
own scripts but also such as individual

00:08:33,279 --> 00:08:37,760
variables using

00:08:34,399 --> 00:08:39,519
widgets since protectors are

00:08:37,760 --> 00:08:41,680
procedurally

00:08:39,519 --> 00:08:43,839
applications like with them are able to

00:08:41,680 --> 00:08:47,440
rotate them at any resolution besides

00:08:43,839 --> 00:08:49,279
preserving their quality furthermore c4

00:08:47,440 --> 00:08:50,240
scripts are just like any other resource

00:08:49,279 --> 00:08:53,040
in data

00:08:50,240 --> 00:08:57,600
this means it can be creative edited

00:08:53,040 --> 00:08:57,600
bundle and shortcuts across the internet

00:09:00,080 --> 00:09:05,040
my project touches many parts in return

00:09:03,120 --> 00:09:06,240
to begin with this one involves setting

00:09:05,040 --> 00:09:08,800
shift forgot

00:09:06,240 --> 00:09:10,240
as a third-party dependency and creating

00:09:08,800 --> 00:09:11,040
the new generator and resource

00:09:10,240 --> 00:09:14,560
management

00:09:11,040 --> 00:09:16,399
as described earlier i also added

00:09:14,560 --> 00:09:17,440
extensive documentation to krita's user

00:09:16,399 --> 00:09:19,600
manual

00:09:17,440 --> 00:09:22,320
a language reference which was ported

00:09:19,600 --> 00:09:24,959
straight from disney documentation

00:09:22,320 --> 00:09:25,600
an international tutorial a resource

00:09:24,959 --> 00:09:28,320
management

00:09:25,600 --> 00:09:30,160
entry another layer entry explaining how

00:09:28,320 --> 00:09:31,839
it all works

00:09:30,160 --> 00:09:33,360
this project actually includes an

00:09:31,839 --> 00:09:35,600
investment preset bundle

00:09:33,360 --> 00:09:37,839
possibly of ultra bank cover and direct

00:09:35,600 --> 00:09:37,839
report

00:09:40,160 --> 00:09:44,080
for the seat for the site changes were

00:09:42,240 --> 00:09:45,680
much more expensive

00:09:44,080 --> 00:09:47,519
i cleaned up and refactored a great

00:09:45,680 --> 00:09:49,360
chunk of the code base

00:09:47,519 --> 00:09:52,240
i fixed many bugs and implemented

00:09:49,360 --> 00:09:54,399
improvements such activated community

00:09:52,240 --> 00:09:56,160
its ui toolkit was also updated and

00:09:54,399 --> 00:09:58,720
refactored

00:09:56,160 --> 00:10:00,320
i added support from the armed devices

00:09:58,720 --> 00:10:01,920
and enabled localization throughout the

00:10:00,320 --> 00:10:03,680
language parser and they provided with

00:10:01,920 --> 00:10:05,360
the wheelchair

00:10:03,680 --> 00:10:07,279
this part of the world is required in

00:10:05,360 --> 00:10:08,160
multitasking in a talk at this year's

00:10:07,279 --> 00:10:10,399
academy

00:10:08,160 --> 00:10:13,600
integrating hollywood open source with

00:10:10,399 --> 00:10:13,600
kde applications

00:10:15,600 --> 00:10:20,320
but that isn't all i had time to take on

00:10:18,160 --> 00:10:22,959
three stretch forms

00:10:20,320 --> 00:10:24,160
first i had a material rendering on both

00:10:22,959 --> 00:10:27,839
thin layers

00:10:24,160 --> 00:10:29,600
in the existence stroke system up to now

00:10:27,839 --> 00:10:31,680
two layers were rendered with a single

00:10:29,600 --> 00:10:33,920
background thread

00:10:31,680 --> 00:10:36,160
this makes cx or layers unsuitable for

00:10:33,920 --> 00:10:38,079
use with three canvases

00:10:36,160 --> 00:10:40,560
so i refactor the rendering process into

00:10:38,079 --> 00:10:42,560
small tiles and each type is rendered in

00:10:40,560 --> 00:10:44,560
a separate job

00:10:42,560 --> 00:10:48,240
it must be note that these quartz would

00:10:44,560 --> 00:10:48,240
support the generators only

00:10:48,560 --> 00:10:52,399
secondly i enable two layers to be

00:10:50,560 --> 00:10:53,920
previewed before addition

00:10:52,399 --> 00:10:56,160
my project will factor the rendering

00:10:53,920 --> 00:10:59,200
process to make it short injectable in

00:10:56,160 --> 00:11:01,360
the layer additional stroke

00:10:59,200 --> 00:11:03,040
finally i cleaned up real trust in my

00:11:01,360 --> 00:11:04,640
insoft developer documentation in the

00:11:03,040 --> 00:11:08,160
greater repository

00:11:04,640 --> 00:11:08,160
moving it to the user manual

00:11:10,560 --> 00:11:14,399
the drawer we proceeded now shows what

00:11:12,560 --> 00:11:16,480
you can do with sea expo

00:11:14,399 --> 00:11:17,600
it was made by david trevoy but the

00:11:16,480 --> 00:11:20,480
episode 33

00:11:17,600 --> 00:11:22,240
of his webcomic repair and carrots the

00:11:20,480 --> 00:11:22,720
thunder-like force fields around the day

00:11:22,240 --> 00:11:26,079
which

00:11:22,720 --> 00:11:26,079
was created using this fork

00:11:26,240 --> 00:11:30,399
therefore is available now in activities

00:11:28,240 --> 00:11:33,519
of twitter

00:11:30,399 --> 00:11:33,519
thank you all for watching this

00:11:35,040 --> 00:11:40,399
hello everyone my name is kita kim

00:11:38,079 --> 00:11:42,320
in this number i participated in google

00:11:40,399 --> 00:11:44,640
some of course with kd

00:11:42,320 --> 00:11:47,680
and i work to improve babylink protocol

00:11:44,640 --> 00:11:47,680
integration of hierarchy

00:11:50,000 --> 00:11:54,160
kyogre is on young officer's ground

00:11:52,000 --> 00:11:56,000
control station which is just started to

00:11:54,160 --> 00:11:58,560
control drones

00:11:56,000 --> 00:12:01,120
it is started and being developed by kd

00:11:58,560 --> 00:12:01,120
community

00:12:06,959 --> 00:12:11,519
leveling is a messaging protocol between

00:12:09,200 --> 00:12:13,760
drones and ground control station

00:12:11,519 --> 00:12:14,560
famous flight control units for tools

00:12:13,760 --> 00:12:19,279
like

00:12:14,560 --> 00:12:19,279
arduino pilot and pxpo use this protocol

00:12:21,040 --> 00:12:25,600
as name suggests my project is about

00:12:23,519 --> 00:12:27,120
improving leveling protocol integration

00:12:25,600 --> 00:12:30,480
of qrd

00:12:27,120 --> 00:12:32,399
for that i added three major features

00:12:30,480 --> 00:12:33,760
such as tcp and serial connection

00:12:32,399 --> 00:12:36,320
support

00:12:33,760 --> 00:12:39,839
multiple vehicle management multiple

00:12:36,320 --> 00:12:39,839
connection management

00:12:40,959 --> 00:12:46,160
tcp connection support allows users to

00:12:43,360 --> 00:12:48,000
control drones through tcp

00:12:46,160 --> 00:12:49,920
serial connection support is the

00:12:48,000 --> 00:12:53,440
initials of bombing object feature

00:12:49,920 --> 00:12:54,560
the receiver connection plus now

00:12:53,440 --> 00:12:59,519
currently can manage

00:12:54,560 --> 00:13:02,560
up to 255 drones at the same time

00:12:59,519 --> 00:13:06,399
this feature will be very useful after

00:13:02,560 --> 00:13:08,720
implementing mission planner

00:13:06,399 --> 00:13:10,560
in addition to that now heroin can

00:13:08,720 --> 00:13:14,000
manage different connections

00:13:10,560 --> 00:13:15,680
with different properties like multiple

00:13:14,000 --> 00:13:20,880
serial connections with different

00:13:15,680 --> 00:13:22,880
protein bouldering

00:13:20,880 --> 00:13:25,440
the most challenging thing for me was

00:13:22,880 --> 00:13:27,920
thinking about overall architecture

00:13:25,440 --> 00:13:30,000
kyogre has plug-ins to support various

00:13:27,920 --> 00:13:32,800
models of drones

00:13:30,000 --> 00:13:34,079
it supports drones like rice tello and

00:13:32,800 --> 00:13:36,480
pair of people

00:13:34,079 --> 00:13:39,600
and the way how labeling works is quite

00:13:36,480 --> 00:13:39,600
different from others

00:13:40,320 --> 00:13:45,279
as the world plugins use same gui rather

00:13:42,720 --> 00:13:48,000
than using gi for each plugin

00:13:45,279 --> 00:13:52,079
i had to think about architecture of gin

00:13:48,000 --> 00:13:52,079
libraries that are shared among plugins

00:13:55,360 --> 00:14:00,399
during this project i learned much about

00:13:57,680 --> 00:14:03,120
how to design a software

00:14:00,399 --> 00:14:03,760
in addition to that i learned about qt

00:14:03,120 --> 00:14:05,839
qml

00:14:03,760 --> 00:14:07,360
kde framework drones embedded

00:14:05,839 --> 00:14:10,079
development

00:14:07,360 --> 00:14:12,800
and most importantly how to contribute

00:14:10,079 --> 00:14:14,720
to kd projects

00:14:12,800 --> 00:14:16,639
thank you for watching my presentation

00:14:14,720 --> 00:14:20,160
if you have any question

00:14:16,639 --> 00:14:20,160
please feel free to ask me

00:14:21,360 --> 00:14:28,079
hello everyone my name is ashwin and

00:14:24,959 --> 00:14:30,560
i'm a gsoc student for krita and my

00:14:28,079 --> 00:14:32,720
project is integrating the my paint

00:14:30,560 --> 00:14:38,000
brush engine in krita

00:14:32,720 --> 00:14:38,000
my mantels are about dimitri and walter

00:14:39,040 --> 00:14:45,760
okay so what are brush engines

00:14:42,720 --> 00:14:48,959
brush engine is just a coat piece or a

00:14:45,760 --> 00:14:51,519
component which governs the

00:14:48,959 --> 00:14:53,680
mannerism in which colors have been

00:14:51,519 --> 00:14:56,720
painted over the canvas

00:14:53,680 --> 00:15:00,320
so they are responsible for

00:14:56,720 --> 00:15:03,440
look and feel of the brush so

00:15:00,320 --> 00:15:06,880
brush engines just take uh

00:15:03,440 --> 00:15:10,320
some user input like uh

00:15:06,880 --> 00:15:15,360
some tilt angle for from stylus

00:15:10,320 --> 00:15:18,480
say pressure from stylus or the velocity

00:15:15,360 --> 00:15:21,839
at which the stroke is happening so

00:15:18,480 --> 00:15:25,120
they just take these inputs these

00:15:21,839 --> 00:15:28,480
dynamic inputs and on the basis of that

00:15:25,120 --> 00:15:31,759
they generate a stroke

00:15:28,480 --> 00:15:34,639
so for instance

00:15:31,759 --> 00:15:36,079
here i have just compared to two brush

00:15:34,639 --> 00:15:39,759
engines of krita

00:15:36,079 --> 00:15:43,040
to the left we have a grid crush engine

00:15:39,759 --> 00:15:46,399
and it simply looks like a

00:15:43,040 --> 00:15:49,759
grid of pixels here while to the

00:15:46,399 --> 00:15:50,240
right it looks like some pixels have

00:15:49,759 --> 00:15:53,839
been

00:15:50,240 --> 00:15:56,160
have been sprayed over the canvas

00:15:53,839 --> 00:15:57,440
that is just to because we are using

00:15:56,160 --> 00:16:00,480
different rush engines

00:15:57,440 --> 00:16:03,839
so we are getting different effects so

00:16:00,480 --> 00:16:04,320
that is just an illustration that brush

00:16:03,839 --> 00:16:08,880
engine

00:16:04,320 --> 00:16:12,560
can give us different effects

00:16:08,880 --> 00:16:15,199
um so uh my paint

00:16:12,560 --> 00:16:16,240
is a software which is similar to krita

00:16:15,199 --> 00:16:19,519
and

00:16:16,240 --> 00:16:22,639
is used for painting and the artists

00:16:19,519 --> 00:16:24,079
do love mapping brushes a lot so because

00:16:22,639 --> 00:16:27,199
of this popularity

00:16:24,079 --> 00:16:27,920
the map in developers have separated out

00:16:27,199 --> 00:16:30,079
their

00:16:27,920 --> 00:16:32,959
brush engine in the form of a library

00:16:30,079 --> 00:16:35,199
namely libmy paint

00:16:32,959 --> 00:16:36,079
so till date other than the my paint

00:16:35,199 --> 00:16:39,360
itself

00:16:36,079 --> 00:16:42,399
jim open toons and and we have

00:16:39,360 --> 00:16:42,399
done this integration

00:16:42,720 --> 00:16:49,360
so coming to the implementation

00:16:46,240 --> 00:16:52,240
to use libmappaint

00:16:49,360 --> 00:16:53,120
to render some stroke over of over our

00:16:52,240 --> 00:16:56,800
canvas

00:16:53,120 --> 00:16:59,600
all we have to do is implement this

00:16:56,800 --> 00:17:00,800
draw dab and get player methods we just

00:16:59,600 --> 00:17:03,279
need to override this

00:17:00,800 --> 00:17:04,079
and write the code concerning our own

00:17:03,279 --> 00:17:07,760
canvas object

00:17:04,079 --> 00:17:09,439
classes so draw tab is responsible for

00:17:07,760 --> 00:17:10,720
rendering the tabs over the canvas

00:17:09,439 --> 00:17:13,600
whereas scatter

00:17:10,720 --> 00:17:14,319
is used by limb mapping to see the color

00:17:13,600 --> 00:17:16,319
that is

00:17:14,319 --> 00:17:19,679
currently present over the canvas so

00:17:16,319 --> 00:17:23,280
that is used by my paint to

00:17:19,679 --> 00:17:26,000
render some color smudge effects

00:17:23,280 --> 00:17:28,079
this is just a schematic representation

00:17:26,000 --> 00:17:32,000
of the functioning of brush lip

00:17:28,079 --> 00:17:34,480
so this is just my paint library and

00:17:32,000 --> 00:17:36,240
this surface in our case it's a case

00:17:34,480 --> 00:17:38,160
paint device

00:17:36,240 --> 00:17:39,520
and this is the stroke to method which

00:17:38,160 --> 00:17:43,200
is called for

00:17:39,520 --> 00:17:45,039
generating strokes it accepts

00:17:43,200 --> 00:17:47,280
my paintbrush object along with some

00:17:45,039 --> 00:17:51,200
dynamic inputs say

00:17:47,280 --> 00:17:54,240
x and y tilt off for stylus pressure

00:17:51,200 --> 00:17:56,240
d time values which is the time elapsed

00:17:54,240 --> 00:17:59,120
between current and the previous row

00:17:56,240 --> 00:17:59,520
and at the back end it calls our method

00:17:59,120 --> 00:18:01,200
on

00:17:59,520 --> 00:18:02,640
drawdab and calculator method

00:18:01,200 --> 00:18:05,919
overversion surface

00:18:02,640 --> 00:18:05,919
to generate depths

00:18:06,799 --> 00:18:11,840
so for the project i had two milestones

00:18:10,559 --> 00:18:14,000
the first one was to

00:18:11,840 --> 00:18:14,880
employ integrate they live my paint in

00:18:14,000 --> 00:18:17,760
the form of

00:18:14,880 --> 00:18:19,679
brush engine and krita and the other one

00:18:17,760 --> 00:18:21,679
was to expose the

00:18:19,679 --> 00:18:23,280
my paint settings in the krita's preset

00:18:21,679 --> 00:18:25,360
editor so

00:18:23,280 --> 00:18:27,360
as to facilitate creation of new mapping

00:18:25,360 --> 00:18:30,480
brushes

00:18:27,360 --> 00:18:34,000
so this is the krita interface and

00:18:30,480 --> 00:18:36,799
this is preset chooser operator

00:18:34,000 --> 00:18:38,480
so let us just filter on my paint and

00:18:36,799 --> 00:18:41,679
this is the mapping presets

00:18:38,480 --> 00:18:44,640
which have been loaded we can just

00:18:41,679 --> 00:18:47,120
pick say acrylic and this is the acrylic

00:18:44,640 --> 00:18:47,120
stroke

00:18:49,039 --> 00:18:57,840
we can pick something like calligraphy

00:18:54,000 --> 00:18:57,840
so this is a calligraphy stroke

00:18:58,799 --> 00:19:03,679
we can choose something like modeling

00:19:04,160 --> 00:19:07,440
and this is the modeling brush

00:19:09,600 --> 00:19:17,200
we can pick airbrush

00:19:13,919 --> 00:19:20,799
and that is an airbrushed stroke

00:19:17,200 --> 00:19:23,520
so from here we can trigger convert into

00:19:20,799 --> 00:19:25,440
it into a laser and it will start

00:19:23,520 --> 00:19:27,280
working like any reason

00:19:25,440 --> 00:19:29,840
and we can just switch back to our

00:19:27,280 --> 00:19:29,840
airbrush

00:19:31,120 --> 00:19:37,679
this is the presets preset editor where

00:19:34,320 --> 00:19:40,240
we can just toggle off the settings

00:19:37,679 --> 00:19:42,720
say we can change the data something

00:19:40,240 --> 00:19:42,720
smaller

00:19:44,000 --> 00:19:55,760
and we can just increase it back

00:19:53,440 --> 00:19:57,039
and here we have all over the other

00:19:55,760 --> 00:20:00,640
settings which

00:19:57,039 --> 00:20:00,640
my paint gives us

00:20:03,280 --> 00:20:09,120
okay so that's my project

00:20:07,360 --> 00:20:21,840
and thank you for giving me this

00:20:09,120 --> 00:20:21,840
opportunity thank you

00:20:23,360 --> 00:20:25,440

YouTube URL: https://www.youtube.com/watch?v=hD7faJM2BYA


