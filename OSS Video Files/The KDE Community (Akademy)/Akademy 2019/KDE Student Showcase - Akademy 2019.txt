Title: KDE Student Showcase - Akademy 2019
Publication date: 2020-05-25
Playlist: Akademy 2019
Description: 
	Every year a number of students join us through our students programs Google Summer of Code and Season of KDE. In this session some of them will show you what they've been working on and talk about their experience working with the KDE community.
Captions: 
	00:00:01,100 --> 00:00:08,069
hi I'm aquel I'm a student doing my

00:00:05,940 --> 00:00:10,800
undergrad in computer science in out of

00:00:08,069 --> 00:00:13,920
the University India and I'd like to

00:00:10,800 --> 00:00:16,170
start off by saying thank you like thank

00:00:13,920 --> 00:00:19,320
you to each one of you for making what

00:00:16,170 --> 00:00:21,330
KT community what it is for giving me

00:00:19,320 --> 00:00:24,060
this fine opportunity to be standing

00:00:21,330 --> 00:00:25,500
here giving a talk about my project so a

00:00:24,060 --> 00:00:25,740
big round of applause for you guys come

00:00:25,500 --> 00:00:33,840
on

00:00:25,740 --> 00:00:36,059
yeah thank you and yeah so back to the

00:00:33,840 --> 00:00:38,430
topic revamping the title to that was

00:00:36,059 --> 00:00:41,910
the project that I did over this summer

00:00:38,430 --> 00:00:46,129
for google Summer of Code and was with

00:00:41,910 --> 00:00:48,420
Kenyan life and the project involved

00:00:46,129 --> 00:00:51,270
revamping for those who are not aware of

00:00:48,420 --> 00:00:54,739
what gain in life is it is one of the

00:00:51,270 --> 00:00:56,850
most popular open-source non-linear

00:00:54,739 --> 00:01:00,480
professional video and it was out there

00:00:56,850 --> 00:01:02,250
so my project mainly involved revamping

00:01:00,480 --> 00:01:04,559
one of the major features in the tool

00:01:02,250 --> 00:01:08,040
it's called it idler tool and what the

00:01:04,559 --> 00:01:10,700
title does is it makes title clips so

00:01:08,040 --> 00:01:14,880
what title clips are it's basically like

00:01:10,700 --> 00:01:17,340
you had these like at the end of say a

00:01:14,880 --> 00:01:18,900
movie you have you know credits or

00:01:17,340 --> 00:01:20,900
something like that you had text right

00:01:18,900 --> 00:01:23,880
so if you want to like composite these

00:01:20,900 --> 00:01:25,830
clips which contain text or images or

00:01:23,880 --> 00:01:27,360
you want to animate this in some sort

00:01:25,830 --> 00:01:30,479
and you want to compose it this or your

00:01:27,360 --> 00:01:33,329
video you use the title tool so the

00:01:30,479 --> 00:01:36,659
problem is in kdenlive the title tool

00:01:33,329 --> 00:01:39,780
uses the depreciated cue graphics you

00:01:36,659 --> 00:01:43,740
since QT phi and this has had many

00:01:39,780 --> 00:01:45,479
problems like we had to drop any effects

00:01:43,740 --> 00:01:48,470
many popular effects like typewriter

00:01:45,479 --> 00:01:51,000
effect and the whole code bases of

00:01:48,470 --> 00:01:56,520
obviously prone to upstream bugs and

00:01:51,000 --> 00:02:03,390
yeah it's a mess so what I propose to do

00:01:56,520 --> 00:02:06,299
was to like yeah old uses deprecated EQ

00:02:03,390 --> 00:02:09,840
graphics to you so my solution was to

00:02:06,299 --> 00:02:11,290
redesign the back end right from like it

00:02:09,840 --> 00:02:13,930
uses XML

00:02:11,290 --> 00:02:16,390
currently what I propose to do was to

00:02:13,930 --> 00:02:18,700
use qml and render it using a new QT

00:02:16,390 --> 00:02:22,209
class called a cue quick render control

00:02:18,700 --> 00:02:25,629
which allows you to you know carefully

00:02:22,209 --> 00:02:27,760
select and render render the control the

00:02:25,629 --> 00:02:30,790
rendering you know processes in a very

00:02:27,760 --> 00:02:36,849
efficient manner so yeah that's that and

00:02:30,790 --> 00:02:41,079
just yeah so before you have the title

00:02:36,849 --> 00:02:44,860
tool I MLT yeah that's another term MLT

00:02:41,079 --> 00:02:48,180
is basically the media framework on top

00:02:44,860 --> 00:02:50,799
of it Scanian life is belt down so

00:02:48,180 --> 00:02:53,049
basically to do anything you need an MLT

00:02:50,799 --> 00:02:55,120
module you need a producer or a consumer

00:02:53,049 --> 00:02:56,500
depending on what you're doing so with

00:02:55,120 --> 00:02:57,280
the tied led to what you need is a

00:02:56,500 --> 00:03:00,609
producer

00:02:57,280 --> 00:03:02,590
so for qml frames i needed an entirely

00:03:00,609 --> 00:03:03,910
new producer so that was part of the

00:03:02,590 --> 00:03:06,609
work that I did for this summer

00:03:03,910 --> 00:03:10,180
I couldn't complete it unfortunately I'm

00:03:06,609 --> 00:03:15,400
still working on it and yeah so I hope

00:03:10,180 --> 00:03:19,780
to see that I see the tool life in the

00:03:15,400 --> 00:03:22,780
coming months and yeah so about 80% of

00:03:19,780 --> 00:03:24,730
the work is John really and yeah I hope

00:03:22,780 --> 00:03:26,380
to continue being part of this great

00:03:24,730 --> 00:03:28,329
community couldn't be asking for

00:03:26,380 --> 00:03:28,900
anything more that great the experience

00:03:28,329 --> 00:03:30,959
has been great

00:03:28,900 --> 00:03:33,280
the learning curve has been steep and

00:03:30,959 --> 00:03:34,020
discovery has been great thank you thank

00:03:33,280 --> 00:03:42,409
you

00:03:34,020 --> 00:03:42,409
[Applause]

00:03:53,990 --> 00:04:00,360
hi everyone I'm Amun and I've been a

00:03:57,360 --> 00:04:04,530
season of ke 2018 G saw Katie mentoring

00:04:00,360 --> 00:04:05,850
GCI 18 in 19 G soft mentor so since we

00:04:04,530 --> 00:04:07,470
have a very small name so I just

00:04:05,850 --> 00:04:10,230
Brickley started with the G sub 2 so

00:04:07,470 --> 00:04:12,930
Newton well in SOA I made up

00:04:10,230 --> 00:04:17,310
I made a block programming language for

00:04:12,930 --> 00:04:23,130
the project G compre and in G sock how

00:04:17,310 --> 00:04:26,700
do I move the spice forward okay yeah so

00:04:23,130 --> 00:04:29,160
so here the G company had a gtk+ version

00:04:26,700 --> 00:04:30,990
and in that there were a lot of piano

00:04:29,160 --> 00:04:32,460
simulating activities these were one of

00:04:30,990 --> 00:04:34,710
the major activities which needed to be

00:04:32,460 --> 00:04:37,200
ported to the cute version to move to

00:04:34,710 --> 00:04:39,960
the version 1.0 so i ported all the four

00:04:37,200 --> 00:04:41,940
activities which were a piano music

00:04:39,960 --> 00:04:45,060
composer in which the user will be able

00:04:41,940 --> 00:04:47,400
to compose a music piano music using

00:04:45,060 --> 00:04:50,280
various you know components like he can

00:04:47,400 --> 00:04:52,710
control the rhythm off his composed

00:04:50,280 --> 00:04:54,690
music like there is 152 BPM it's beats

00:04:52,710 --> 00:04:56,370
per minute so you can control the you

00:04:54,690 --> 00:04:58,620
know playback speed of his music and

00:04:56,370 --> 00:05:00,570
then there's a play or either clear the

00:04:58,620 --> 00:05:02,100
entire staff it's also kind of sheet

00:05:00,570 --> 00:05:05,310
music so it's mainly inspired with the

00:05:02,100 --> 00:05:08,640
software called new score and itself a

00:05:05,310 --> 00:05:09,960
great kaydee application in de minuit so

00:05:08,640 --> 00:05:11,520
there are also many features like it has

00:05:09,960 --> 00:05:13,500
treble clefs and bass cliffs

00:05:11,520 --> 00:05:15,180
it also has wrist so it also has a

00:05:13,500 --> 00:05:16,919
different kind of notes let's say

00:05:15,180 --> 00:05:19,169
quarter note full note half notes and so

00:05:16,919 --> 00:05:22,320
on so on the right we have some you know

00:05:19,169 --> 00:05:24,630
like predefined lyrics it's already

00:05:22,320 --> 00:05:26,310
composed and we have stored it as a form

00:05:24,630 --> 00:05:28,410
of a JSON object so these are directly

00:05:26,310 --> 00:05:30,840
imported so they're so the lyrics are

00:05:28,410 --> 00:05:32,640
shown as well as the music are all also

00:05:30,840 --> 00:05:34,350
played so the user can also modify it

00:05:32,640 --> 00:05:36,240
and then practice on his own so these

00:05:34,350 --> 00:05:39,419
are the melodies that we had pre-loaded

00:05:36,240 --> 00:05:41,460
and it was the file manager that I made

00:05:39,419 --> 00:05:43,229
to handle the creation so like the user

00:05:41,460 --> 00:05:45,330
creates I'm using and he wants to save

00:05:43,229 --> 00:05:46,800
it so he can save he can load he can

00:05:45,330 --> 00:05:48,479
delete he can edit and he can do

00:05:46,800 --> 00:05:49,950
anything with his file manager so I've

00:05:48,479 --> 00:05:51,020
also integrated with all the other

00:05:49,950 --> 00:05:57,979
activities which

00:05:51,020 --> 00:06:00,530
needed you know its use okay so so it

00:05:57,979 --> 00:06:03,080
was another activity named play rhythm

00:06:00,530 --> 00:06:04,190
so here you can see the metronome over

00:06:03,080 --> 00:06:08,599
the help button

00:06:04,190 --> 00:06:11,060
so so this metronome was oscillated so

00:06:08,599 --> 00:06:13,550
it oscillates as you said the BPM which

00:06:11,060 --> 00:06:15,139
is 90 year BPM here but you can change

00:06:13,550 --> 00:06:16,940
it according to the playback speed that

00:06:15,139 --> 00:06:18,740
you want and the user had to click the

00:06:16,940 --> 00:06:20,599
metronome so this so with this the user

00:06:18,740 --> 00:06:24,710
can train his accuracy or while playing

00:06:20,599 --> 00:06:27,259
his piano and now last thing here is it

00:06:24,710 --> 00:06:29,120
is an activity called name that node so

00:06:27,259 --> 00:06:30,770
in this the user gets to learn about all

00:06:29,120 --> 00:06:32,210
the various you know like keyboard keys

00:06:30,770 --> 00:06:35,060
and all the tones that he'll be playing

00:06:32,210 --> 00:06:37,819
so it extends from c3 in the third

00:06:35,060 --> 00:06:41,060
octave to c6 in the sixth octave so it

00:06:37,819 --> 00:06:42,830
has around up 18 to 20 levels and there

00:06:41,060 --> 00:06:45,650
are algorithms that I'd implement it to

00:06:42,830 --> 00:06:47,630
you know like make some focus the keys

00:06:45,650 --> 00:06:49,219
that you can see in red and some normal

00:06:47,630 --> 00:06:55,490
keys then you can see in black and then

00:06:49,219 --> 00:06:59,240
the user can learn accordingly so now

00:06:55,490 --> 00:07:02,120
so that was my shock 2018 project and so

00:06:59,240 --> 00:07:03,830
what's ahead of it I got my project

00:07:02,120 --> 00:07:05,389
merger in the master branch I need got

00:07:03,830 --> 00:07:07,880
released right in the next month or two

00:07:05,389 --> 00:07:10,310
with the help of my mentors or obviously

00:07:07,880 --> 00:07:13,370
and the next I continued contributions

00:07:10,310 --> 00:07:16,370
and I and I did mentorship in Google

00:07:13,370 --> 00:07:19,759
code in 2018 my mentor 75 participants

00:07:16,370 --> 00:07:22,099
which which resulted in completion of

00:07:19,759 --> 00:07:25,069
around 80 tasks including coding tasks

00:07:22,099 --> 00:07:26,960
and community outreach tasks so the next

00:07:25,069 --> 00:07:29,090
thing like and then I did my mentorship

00:07:26,960 --> 00:07:31,550
in google Summer of Code this year for

00:07:29,090 --> 00:07:33,880
the project accompli for the project

00:07:31,550 --> 00:07:37,130
title one step closer to version 1.0 and

00:07:33,880 --> 00:07:39,259
we along with my three other mentors so

00:07:37,130 --> 00:07:40,310
we we let the student and he

00:07:39,259 --> 00:07:42,400
successfully completed all three

00:07:40,310 --> 00:07:45,919
evaluations so within the perfect time

00:07:42,400 --> 00:07:49,130
and you know like what's ahead for me

00:07:45,919 --> 00:07:50,569
and KD after all the contributions so my

00:07:49,130 --> 00:07:52,520
aim is to still remain active in the

00:07:50,569 --> 00:07:54,740
community and continue contributing code

00:07:52,520 --> 00:07:56,719
wise as well as doing mentorship and I

00:07:54,740 --> 00:07:59,450
hope to come here again and give a talk

00:07:56,719 --> 00:08:07,429
next year also thank you

00:07:59,450 --> 00:08:07,429
[Applause]

00:08:08,630 --> 00:08:16,620
hi so this is a more or less aligned

00:08:12,900 --> 00:08:19,170
with our next goal that is KD is the app

00:08:16,620 --> 00:08:22,050
all for the app basically so I'm gonna

00:08:19,170 --> 00:08:25,110
talk about lap lot more on it so before

00:08:22,050 --> 00:08:28,530
that I'll start with Who am I so I

00:08:25,110 --> 00:08:31,530
started contributing in KD in 2014 my

00:08:28,530 --> 00:08:33,980
first mentor was alex paul he he he

00:08:31,530 --> 00:08:37,680
guided me throughout so i picked up

00:08:33,980 --> 00:08:40,620
calcium that is KD edu project and in

00:08:37,680 --> 00:08:43,110
that during that time we were putting

00:08:40,620 --> 00:08:45,570
from cute four to cute five so he guided

00:08:43,110 --> 00:08:48,060
me throughout the process and in 2016 I

00:08:45,570 --> 00:08:52,830
did my G sock in which I worked on the

00:08:48,060 --> 00:08:56,340
lab plot and in 2019 I mentored in DCI

00:08:52,830 --> 00:09:00,240
where I created few tasks related to the

00:08:56,340 --> 00:09:03,600
KD video projects so little about la

00:09:00,240 --> 00:09:06,750
plot la plot is KD application where you

00:09:03,600 --> 00:09:10,740
can it has a very interactive UI where

00:09:06,750 --> 00:09:13,260
you can plot scientific data and it's

00:09:10,740 --> 00:09:16,260
very easy to manipulate and end it and

00:09:13,260 --> 00:09:19,890
figure out different analytics from the

00:09:16,260 --> 00:09:21,810
graph that you plot so this is the UI of

00:09:19,890 --> 00:09:23,490
the application on the left side you

00:09:21,810 --> 00:09:24,960
have the project explorer where you can

00:09:23,490 --> 00:09:27,750
see all the worksheets that you have

00:09:24,960 --> 00:09:30,480
created the center line is the main area

00:09:27,750 --> 00:09:33,200
where you see all the plots you can mark

00:09:30,480 --> 00:09:35,490
with different colors denoting different

00:09:33,200 --> 00:09:37,350
analytics or measurement whatever you

00:09:35,490 --> 00:09:40,290
wanna show on the right is the

00:09:37,350 --> 00:09:42,270
properties of each plot that you select

00:09:40,290 --> 00:09:44,040
you you will be able to see what are the

00:09:42,270 --> 00:09:46,620
X and y values you are selecting and

00:09:44,040 --> 00:09:48,930
stuff and on the status bar you can just

00:09:46,620 --> 00:09:54,030
drag and drop all the color changes and

00:09:48,930 --> 00:09:56,550
everything like that so la plot as I

00:09:54,030 --> 00:09:59,730
said it's a scientific data plotter so

00:09:56,550 --> 00:10:02,010
you can give inputs either in the form

00:09:59,730 --> 00:10:06,810
of spreadsheets such that it has a X

00:10:02,010 --> 00:10:09,450
column in a column in a row you can give

00:10:06,810 --> 00:10:11,940
in the form of matrix matrix like data

00:10:09,450 --> 00:10:13,920
like X comma Y sort of form or you can

00:10:11,940 --> 00:10:16,230
import some files for example

00:10:13,920 --> 00:10:17,519
to get data from another third-party

00:10:16,230 --> 00:10:20,370
source or something you can import the

00:10:17,519 --> 00:10:23,700
file and directly you know play around

00:10:20,370 --> 00:10:27,420
with the data on the plots so when you

00:10:23,700 --> 00:10:31,230
combine multiple spreadsheets or metrics

00:10:27,420 --> 00:10:32,699
that forms your workbook and when you

00:10:31,230 --> 00:10:37,500
start plotting your labels and

00:10:32,699 --> 00:10:39,510
everything it is called spreadsheet so

00:10:37,500 --> 00:10:42,360
there are different type of curves that

00:10:39,510 --> 00:10:44,010
you can create using la plot one is XY

00:10:42,360 --> 00:10:46,769
which is normal like using a spreadsheet

00:10:44,010 --> 00:10:48,899
using X values and Y values it can be

00:10:46,769 --> 00:10:51,149
like an equation normal equation where

00:10:48,899 --> 00:10:52,980
you get this straight graph the second

00:10:51,149 --> 00:10:55,649
is you can use mathematical expression

00:10:52,980 --> 00:10:58,079
for example a graph for a sine cos or

00:10:55,649 --> 00:11:00,720
any other mathematical expression and

00:10:58,079 --> 00:11:02,940
third is for that non-latex functions

00:11:00,720 --> 00:11:05,220
which is again your third party tool

00:11:02,940 --> 00:11:08,149
that you want to somehow manipulate your

00:11:05,220 --> 00:11:12,029
data and show the graph of that so

00:11:08,149 --> 00:11:13,320
during my g-shock my task was to you

00:11:12,029 --> 00:11:16,579
know extend the functionality of

00:11:13,320 --> 00:11:22,170
plotting by using histogram histogram is

00:11:16,579 --> 00:11:25,890
discrete data plotter so here we added

00:11:22,170 --> 00:11:28,709
lot of different meanings and all so my

00:11:25,890 --> 00:11:32,760
mentor was Alexander and there with

00:11:28,709 --> 00:11:35,130
country from India so and also I created

00:11:32,760 --> 00:11:39,750
some few small tasks on GC I like for

00:11:35,130 --> 00:11:42,720
example improving the la plot website

00:11:39,750 --> 00:11:44,970
and seeing around and writing

00:11:42,720 --> 00:11:47,850
documentation or nap on la plots and all

00:11:44,970 --> 00:11:53,430
so what do I some easier things that we

00:11:47,850 --> 00:11:56,519
do did it is it was for extending the

00:11:53,430 --> 00:11:59,130
plotting capabilities it and histogram

00:11:56,519 --> 00:12:01,560
is a continuous data for example like it

00:11:59,130 --> 00:12:04,560
shows from x axis to Y axis or how the

00:12:01,560 --> 00:12:06,300
data values are changing and the

00:12:04,560 --> 00:12:09,000
advanced features I as I told you and

00:12:06,300 --> 00:12:12,350
the external files that I used was a J

00:12:09,000 --> 00:12:15,839
cell histogram for that you we have the

00:12:12,350 --> 00:12:17,850
live complete source code on the github

00:12:15,839 --> 00:12:19,350
so you can just forget and look around

00:12:17,850 --> 00:12:21,910
if you want to contribute more to it

00:12:19,350 --> 00:12:25,929
that's it thank you

00:12:21,910 --> 00:12:25,929
[Applause]

00:12:41,440 --> 00:12:48,710
okay higher on my name's Alex

00:12:45,110 --> 00:12:50,540
I study at UCL in London study massing

00:12:48,710 --> 00:12:55,370
computer science and I worked on

00:12:50,540 --> 00:12:56,660
polishing carry a fuse so there's not

00:12:55,370 --> 00:12:59,810
many slides to this because I wrote this

00:12:56,660 --> 00:13:02,090
in five minutes on the plane but you can

00:12:59,810 --> 00:13:03,470
see if there's more details especially

00:13:02,090 --> 00:13:05,360
in the status report

00:13:03,470 --> 00:13:09,440
forever haven't set in the next three

00:13:05,360 --> 00:13:11,510
minutes so a bit about ki phew so

00:13:09,440 --> 00:13:12,410
there's a bug report seven five three

00:13:11,510 --> 00:13:14,210
two four

00:13:12,410 --> 00:13:16,340
it's been around for 15 years and

00:13:14,210 --> 00:13:20,060
basically the feature request is is that

00:13:16,340 --> 00:13:26,360
for apps that so for apps that don't use

00:13:20,060 --> 00:13:29,180
care so aren't KO enabled when we send

00:13:26,360 --> 00:13:32,570
URLs for example sample URLs fish or

00:13:29,180 --> 00:13:36,290
elles etc to offer apps what we

00:13:32,570 --> 00:13:38,810
basically do is we use carrier x''k

00:13:36,290 --> 00:13:43,850
which basically downloads that URL into

00:13:38,810 --> 00:13:45,370
a kind of temporary file and allows you

00:13:43,850 --> 00:13:48,080
to do edits what's kind of really clunky

00:13:45,370 --> 00:13:52,040
and so KOF uses a kind of solution

00:13:48,080 --> 00:13:55,160
around that and there's been many

00:13:52,040 --> 00:13:56,930
attempts so in those 15 years but

00:13:55,160 --> 00:14:00,290
there's been one this winter developed

00:13:56,930 --> 00:14:02,120
by Fabian watt and he worked on it that

00:14:00,290 --> 00:14:06,790
winter and over the g'tok period I tried

00:14:02,120 --> 00:14:10,550
to improve it so in particular basically

00:14:06,790 --> 00:14:12,470
bears carry obviously that we know that

00:14:10,550 --> 00:14:14,480
allows you know obviously the more local

00:14:12,470 --> 00:14:16,070
file i/o but also kind of network based

00:14:14,480 --> 00:14:17,570
are you if it's kind of transparent you

00:14:16,070 --> 00:14:20,030
know especially if you use dolphin it's

00:14:17,570 --> 00:14:21,950
quite clear and there's also fused which

00:14:20,030 --> 00:14:23,600
is kind of like a linux module that

00:14:21,950 --> 00:14:24,980
allows creation as a filesystem in user

00:14:23,600 --> 00:14:26,510
space I've seen most of them are in

00:14:24,980 --> 00:14:31,040
Connor space so they weren't really

00:14:26,510 --> 00:14:34,010
accepted patches for ko so a fuse

00:14:31,040 --> 00:14:36,320
basically kind of allows applications to

00:14:34,010 --> 00:14:37,700
kind of see transparently what carrier

00:14:36,320 --> 00:14:40,130
is doing and so it kind of merges

00:14:37,700 --> 00:14:45,580
together to allow it to take advantage

00:14:40,130 --> 00:14:45,580
of it so

00:14:48,940 --> 00:14:57,020
so there are some limitations so cario

00:14:53,350 --> 00:14:59,210
doesn't always map well of semantics of

00:14:57,020 --> 00:15:00,860
what fuse would expect so it was a bit

00:14:59,210 --> 00:15:05,960
of hacking around a lot of hacking

00:15:00,860 --> 00:15:08,210
around and then fuse itself has its own

00:15:05,960 --> 00:15:10,190
issues so there's obviously different

00:15:08,210 --> 00:15:13,490
layers of cache straightaway cario fuse

00:15:10,190 --> 00:15:17,000
is implemented is that every file in Ko

00:15:13,490 --> 00:15:19,400
is or when you open a file by care if

00:15:17,000 --> 00:15:23,090
you use what we do is we download it via

00:15:19,400 --> 00:15:24,740
KO as a kind of in a temporary file as a

00:15:23,090 --> 00:15:28,070
kind of cache so you have to send a

00:15:24,740 --> 00:15:32,480
request while doing up and down to the

00:15:28,070 --> 00:15:34,310
actual remote system and we kind of take

00:15:32,480 --> 00:15:35,740
advantage of the kernel caching so you

00:15:34,310 --> 00:15:38,720
know they have right back caching which

00:15:35,740 --> 00:15:40,100
is very complex I won't go into but we

00:15:38,720 --> 00:15:42,380
can't use it so we can in use right for

00:15:40,100 --> 00:15:43,670
caching that's kind of like a small

00:15:42,380 --> 00:15:46,190
performance issue it's not really a big

00:15:43,670 --> 00:15:47,660
issue in my opinion because you have

00:15:46,190 --> 00:15:53,920
network i/o which is a lot more

00:15:47,660 --> 00:15:58,160
important and so carry a fuse kind of

00:15:53,920 --> 00:15:59,480
has a lot of hacks around currently and

00:15:58,160 --> 00:16:02,660
it's currently all in one class is about

00:15:59,480 --> 00:16:04,690
2000 something lines soon 3,000 once

00:16:02,660 --> 00:16:07,010
everything goes into master

00:16:04,690 --> 00:16:09,800
so we asked I don't know how to go

00:16:07,010 --> 00:16:11,420
around that cleverly you can kind of use

00:16:09,800 --> 00:16:14,270
polymorphism but that should make the

00:16:11,420 --> 00:16:15,890
stuff really hard to read so I think

00:16:14,270 --> 00:16:20,270
that's kind of a problem for later at

00:16:15,890 --> 00:16:23,390
terms of getting it into kind of use in

00:16:20,270 --> 00:16:25,010
everyday use merge add remaining merge

00:16:23,390 --> 00:16:27,110
requests so there's obviously some stuff

00:16:25,010 --> 00:16:29,750
in K if you use that we need to get in

00:16:27,110 --> 00:16:31,660
so for example there's file jobs so you

00:16:29,750 --> 00:16:34,490
have different types of jobs you know

00:16:31,660 --> 00:16:37,190
like so transfer jobs at petrol but file

00:16:34,490 --> 00:16:38,990
jobs are kind of like seeking so you

00:16:37,190 --> 00:16:41,930
know say for example you want to open or

00:16:38,990 --> 00:16:43,970
read the first few bytes or a large file

00:16:41,930 --> 00:16:46,070
current you'd have to download the whole

00:16:43,970 --> 00:16:48,410
file and then read the files five bytes

00:16:46,070 --> 00:16:50,570
and you can pretty much boss your system

00:16:48,410 --> 00:16:55,290
if the files big enough with file jobs

00:16:50,570 --> 00:16:59,670
for certain slaves which is a SMT

00:16:55,290 --> 00:17:01,860
SFTP and SMB and bio slave you can

00:16:59,670 --> 00:17:03,360
actually do bite based kind of you know

00:17:01,860 --> 00:17:06,390
seek seek based kind of reading and

00:17:03,360 --> 00:17:09,110
writing the problem was that was that it

00:17:06,390 --> 00:17:11,549
was kind of very poorly documented so

00:17:09,110 --> 00:17:13,650
there was some hack some stuff that was

00:17:11,549 --> 00:17:16,860
up streamed at a shop story now so all

00:17:13,650 --> 00:17:19,370
good and so what's left is should just

00:17:16,860 --> 00:17:20,760
get the rent remaining Emma's in and

00:17:19,370 --> 00:17:23,150
we're good to go

00:17:20,760 --> 00:17:31,359
thank you

00:17:23,150 --> 00:17:31,359
[Applause]

00:17:41,149 --> 00:17:46,470
good evening everyone I'm Rita carpet

00:17:44,279 --> 00:17:48,600
wall and I would like to thank Katy

00:17:46,470 --> 00:17:50,639
community plasma while team and my

00:17:48,600 --> 00:17:53,369
mentor Bhushan shop for helping me

00:17:50,639 --> 00:17:57,860
throughout the project so my project was

00:17:53,369 --> 00:17:57,860
next flower integration on plasma mobile

00:17:59,359 --> 00:18:05,429
plasma mobile plasma boil is an open

00:18:02,580 --> 00:18:07,710
source interface interface for the

00:18:05,429 --> 00:18:10,080
phones basically the idea is to bring

00:18:07,710 --> 00:18:14,639
the Linux distro to your mobile phones

00:18:10,080 --> 00:18:17,399
and to make a device handy mobile phone

00:18:14,639 --> 00:18:19,919
handy we all know how useful clouds are

00:18:17,399 --> 00:18:22,649
so the next cloud integration because

00:18:19,919 --> 00:18:26,279
net cloud is open source and we support

00:18:22,649 --> 00:18:32,210
open source and it supports security and

00:18:26,279 --> 00:18:35,249
privacy so I break down my project in

00:18:32,210 --> 00:18:36,749
three steps like what I did mainly the

00:18:35,249 --> 00:18:39,869
work is done for the contact

00:18:36,749 --> 00:18:42,109
synchronization first is the next cloud

00:18:39,869 --> 00:18:47,549
login plug-in these are some screenshots

00:18:42,109 --> 00:18:49,710
what happens is for class setting in

00:18:47,549 --> 00:18:55,289
settings apps you can add the plasma

00:18:49,710 --> 00:18:58,350
next cloud account and you can have the

00:18:55,289 --> 00:19:02,369
next cloud account and I used a web flow

00:18:58,350 --> 00:19:04,980
for login because in web flow the

00:19:02,369 --> 00:19:07,769
password is not saved a random password

00:19:04,980 --> 00:19:10,679
is generated for the system in that in

00:19:07,769 --> 00:19:14,059
that way the users password is secured

00:19:10,679 --> 00:19:16,999
and real password is not saved in the

00:19:14,059 --> 00:19:20,190
application

00:19:16,999 --> 00:19:22,289
next is key accounts contacts sync

00:19:20,190 --> 00:19:25,259
plug-in what key accounts is key

00:19:22,289 --> 00:19:28,169
accounts is a system to add the accounts

00:19:25,259 --> 00:19:30,499
and to manage accounts basically to

00:19:28,169 --> 00:19:35,460
manage accounts on the plasma byte and

00:19:30,499 --> 00:19:37,799
sink sink is a data access layer that

00:19:35,460 --> 00:19:41,600
manages synchronization caching and

00:19:37,799 --> 00:19:44,450
indexing so I use sync plug-in to

00:19:41,600 --> 00:19:47,570
synchronize the contacts to save the

00:19:44,450 --> 00:19:55,910
contacts of the accounts to manage by K

00:19:47,570 --> 00:20:01,640
accounts in sync data source then is the

00:19:55,910 --> 00:20:04,370
next plug in K people sync so KP

00:20:01,640 --> 00:20:07,010
provides the access to contacts phone

00:20:04,370 --> 00:20:11,539
Pro provides the access to contacts

00:20:07,010 --> 00:20:17,809
phone book etc and cosma phonebook app

00:20:11,539 --> 00:20:20,990
uses K people as to access the contacts

00:20:17,809 --> 00:20:24,890
so what I did was to transfer the

00:20:20,990 --> 00:20:26,780
contacts from the sync data store there

00:20:24,890 --> 00:20:30,350
are this contacts that was synchronized

00:20:26,780 --> 00:20:35,570
by a sync plug-in to the K people data

00:20:30,350 --> 00:20:38,710
source that's it there's a demo video if

00:20:35,570 --> 00:20:38,710
the time permits

00:20:53,570 --> 00:21:06,350
so right now the work has been done for

00:20:57,290 --> 00:21:15,620
the plow accounts oh sorry contacts you

00:21:06,350 --> 00:21:17,990
can add your next cloud account now the

00:21:15,620 --> 00:21:23,120
contacts are synchronizing for the

00:21:17,990 --> 00:21:26,870
account added and in the plasma

00:21:23,120 --> 00:21:32,480
phonebook at those contacts are visible

00:21:26,870 --> 00:21:36,520
now I'm adding the new account on my

00:21:32,480 --> 00:21:36,520
earth cloud server

00:21:44,259 --> 00:21:49,929
the sink will happen automatically after

00:21:48,100 --> 00:21:55,210
five minutes but for the demo I

00:21:49,929 --> 00:21:58,210
synchronized it or manually and that was

00:21:55,210 --> 00:22:02,320
visible on D the changes were visible on

00:21:58,210 --> 00:22:04,960
the phone book app so the similar for

00:22:02,320 --> 00:22:07,450
further work similar work I will do for

00:22:04,960 --> 00:22:10,600
the calendars and then for the files and

00:22:07,450 --> 00:22:13,960
photograph system thank you

00:22:10,600 --> 00:22:17,919
you can read more about all the plugins

00:22:13,960 --> 00:22:20,679
at or Apollo dot home dot block and my

00:22:17,919 --> 00:22:21,940
g-shock status report you can color it

00:22:20,679 --> 00:22:31,559
thank you

00:22:21,940 --> 00:22:31,559
[Applause]

00:22:42,470 --> 00:22:48,990
okay so my project was to port Katie

00:22:46,170 --> 00:22:50,700
connect to Windows so for those who do

00:22:48,990 --> 00:22:54,660
not know what is Katie connect

00:22:50,700 --> 00:22:58,290
Katie connect is an application for end

00:22:54,660 --> 00:23:01,230
users to sync their mobile phone you

00:22:58,290 --> 00:23:02,880
like the like the usual tasks that they

00:23:01,230 --> 00:23:05,850
do on the mobile phone through their

00:23:02,880 --> 00:23:07,800
laptop and vice versa like you can sync

00:23:05,850 --> 00:23:10,320
the notifications from your desktop to

00:23:07,800 --> 00:23:12,240
your phone and you can also sing the

00:23:10,320 --> 00:23:14,280
clipboard and there are a lot more

00:23:12,240 --> 00:23:17,790
plugins like inhibiting screen saver and

00:23:14,280 --> 00:23:21,330
a lot more things so the main issues

00:23:17,790 --> 00:23:23,640
that Katie connect had like initially it

00:23:21,330 --> 00:23:26,700
was being build just fine on Windows at

00:23:23,640 --> 00:23:28,410
least was building and connecting but it

00:23:26,700 --> 00:23:31,560
still had to do some work on

00:23:28,410 --> 00:23:34,230
notifications the SFTP plug-in and many

00:23:31,560 --> 00:23:36,390
of the plugins because mostly they were

00:23:34,230 --> 00:23:37,950
still focused on Linux and they weren't

00:23:36,390 --> 00:23:40,650
like they didn't have their windows

00:23:37,950 --> 00:23:42,110
counterparts so main part of my project

00:23:40,650 --> 00:23:45,420
was to develop the plugins and

00:23:42,110 --> 00:23:50,190
ultimately publishing the port to the

00:23:45,420 --> 00:23:51,810
windows too so most of the improvements

00:23:50,190 --> 00:23:54,330
that I did for creating in it for

00:23:51,810 --> 00:23:56,490
Windows so the first one was the

00:23:54,330 --> 00:23:58,800
notifications plugin so for

00:23:56,490 --> 00:24:01,650
notifications I developed snow dos

00:23:58,800 --> 00:24:03,570
back-end for Windows so that we can use

00:24:01,650 --> 00:24:08,760
the existing Kay notification API calls

00:24:03,570 --> 00:24:11,520
so that we can so that we can so that we

00:24:08,760 --> 00:24:14,130
can use the existing code that we use in

00:24:11,520 --> 00:24:15,930
our end applications and still get the

00:24:14,130 --> 00:24:21,630
notifications on Windows like we do on

00:24:15,930 --> 00:24:24,480
Linux so I have uploaded a video for

00:24:21,630 --> 00:24:27,780
that on YouTube so we can check that

00:24:24,480 --> 00:24:29,730
later and the next was a safety be plug

00:24:27,780 --> 00:24:32,490
in so for a safety people again a

00:24:29,730 --> 00:24:35,550
technical limitation was that we do not

00:24:32,490 --> 00:24:38,970
actually have any implementation of

00:24:35,550 --> 00:24:42,900
sshfs on Windows right now so instead I

00:24:38,970 --> 00:24:45,420
developed the KIU extras SFTP plugin so

00:24:42,900 --> 00:24:47,100
that it works on Windows as well so some

00:24:45,420 --> 00:24:49,350
of that work has been integrated but

00:24:47,100 --> 00:24:50,390
currently the limitation is that I can

00:24:49,350 --> 00:24:52,730
make I can make

00:24:50,390 --> 00:24:56,570
connection through extras but still I

00:24:52,730 --> 00:25:00,890
cannot actually like browse all the all

00:24:56,570 --> 00:25:03,800
the file system because many parts in

00:25:00,890 --> 00:25:06,260
the ki o extras is still Linux specific

00:25:03,800 --> 00:25:09,080
like the permissions and stuff and we

00:25:06,260 --> 00:25:15,020
hope to make that more cross platform at

00:25:09,080 --> 00:25:17,570
the KF 6 release most of the other

00:25:15,020 --> 00:25:21,230
plugins were ported as well like the

00:25:17,570 --> 00:25:25,220
screensaver plugin and and a lot more

00:25:21,230 --> 00:25:26,750
plugins so I have a playlist for all the

00:25:25,220 --> 00:25:31,100
plugins uploaded on YouTube as well so

00:25:26,750 --> 00:25:32,840
you can check that out as well so the

00:25:31,100 --> 00:25:35,420
final deliverables for my project were

00:25:32,840 --> 00:25:38,450
two installation modes so like Windows

00:25:35,420 --> 00:25:41,570
has two types of installations available

00:25:38,450 --> 00:25:44,840
one of them is the dot exe setup that is

00:25:41,570 --> 00:25:46,340
a texture application like the like the

00:25:44,840 --> 00:25:48,740
conventional ones that we have been

00:25:46,340 --> 00:25:50,540
seeing on Windows and the new one is the

00:25:48,740 --> 00:25:54,110
Windows Store app that is a dot a bpx

00:25:50,540 --> 00:25:56,360
package so for that we don't have as

00:25:54,110 --> 00:25:58,250
much freedom like we do for the texture

00:25:56,360 --> 00:26:00,740
of applications so we are still working

00:25:58,250 --> 00:26:02,720
on getting the more developed dextra

00:26:00,740 --> 00:26:05,060
application features on the windows so

00:26:02,720 --> 00:26:08,030
application is well but the basic

00:26:05,060 --> 00:26:10,820
functionality of the of the project

00:26:08,030 --> 00:26:12,170
still works on both of these so if you

00:26:10,820 --> 00:26:14,360
want to try out the final the final

00:26:12,170 --> 00:26:16,430
deliverables that I have made I have

00:26:14,360 --> 00:26:18,470
some blog posts on my blog as well the

00:26:16,430 --> 00:26:21,230
link will be at the end and otherwise

00:26:18,470 --> 00:26:27,920
the both both of the installation modes

00:26:21,230 --> 00:26:30,230
are available on CI thanks to Ben so the

00:26:27,920 --> 00:26:33,200
current status of the project is that

00:26:30,230 --> 00:26:34,910
most features have been ported but there

00:26:33,200 --> 00:26:37,790
is some they still more documentation

00:26:34,910 --> 00:26:40,580
required for the project it still needs

00:26:37,790 --> 00:26:42,830
most testing because sometimes the key

00:26:40,580 --> 00:26:46,400
notifications back-end causes the

00:26:42,830 --> 00:26:49,310
current port to crash so we still need

00:26:46,400 --> 00:26:51,410
to look into that some minor challenges

00:26:49,310 --> 00:26:52,790
like the one I told like the Windows

00:26:51,410 --> 00:26:55,580
Store build doesn't have the system

00:26:52,790 --> 00:26:57,920
integrations yet so that is one thing to

00:26:55,580 --> 00:27:00,830
work on but we are hoping that the

00:26:57,920 --> 00:27:04,070
deadline for the next lease date will be

00:27:00,830 --> 00:27:06,200
the one for our releases with

00:27:04,070 --> 00:27:08,600
we cannot actually release a project

00:27:06,200 --> 00:27:11,960
before like we cannot release a project

00:27:08,600 --> 00:27:13,670
that uses the master branch like most of

00:27:11,960 --> 00:27:16,460
my work has been on the master branch of

00:27:13,670 --> 00:27:18,530
frameworks and I cannot actually make a

00:27:16,460 --> 00:27:20,870
an official release on Windows Store

00:27:18,530 --> 00:27:25,360
before the next release of KD frameworks

00:27:20,870 --> 00:27:27,860
that actually I'm using so that was all

00:27:25,360 --> 00:27:29,320
so my blog and contact details are on

00:27:27,860 --> 00:27:32,000
journal wrote usual tech

00:27:29,320 --> 00:27:34,010
most of my blogs are first posted on to

00:27:32,000 --> 00:27:35,810
the KD specific blog because somehow my

00:27:34,010 --> 00:27:38,810
RSS feed doesn't work for the original

00:27:35,810 --> 00:27:40,940
blog the G sock final status report is

00:27:38,810 --> 00:27:43,250
available on this link and my project

00:27:40,940 --> 00:27:43,500
details for the G saga registry thank

00:27:43,250 --> 00:27:47,930
you

00:27:43,500 --> 00:27:47,930

YouTube URL: https://www.youtube.com/watch?v=D-9sotD6bqg


