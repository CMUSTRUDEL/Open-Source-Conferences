Title: Caio JordÃ£o Carvalho - KPMcore Implementations and Goals for the Future - Akademy 2019
Publication date: 2020-05-25
Playlist: Akademy 2019
Description: 
	In the last two years, kpmcore library has received a lot of new patches and updates that improved the functionalities of the library. This library is mainly focused on providing partitioning processes and disk operations. As a Season of KDE student, I have contributed to the improvement of SMART support and helped in the implementation of the KAuth support to improve the authentication routines. During Google Summer of Code, my goal was focused on finishing LVM Volume Group support and start implementing MDRAID. The purpose of this presentation is to explain some of my contributions and talk about future goals for the library.
Captions: 
	00:00:00,589 --> 00:00:09,030
hello so I'm Kyle and today I'm going to

00:00:05,310 --> 00:00:13,259
talk about KPM core explaining about

00:00:09,030 --> 00:00:15,900
what this library is and I think that

00:00:13,259 --> 00:00:18,350
most of you know what the partition

00:00:15,900 --> 00:00:22,289
manager is so I will not explain that

00:00:18,350 --> 00:00:25,769
and I will talk about the release of K

00:00:22,289 --> 00:00:30,150
deeper chowmander 4.0 and the goals for

00:00:25,769 --> 00:00:31,500
the future of the library so for those

00:00:30,150 --> 00:00:35,550
who don't know me yet

00:00:31,500 --> 00:00:40,230
I'm Caio and i'm brazilian Brazilian KD

00:00:35,550 --> 00:00:43,050
contributor and I work with KD partition

00:00:40,230 --> 00:00:47,100
manager Calamari's which is maintained

00:00:43,050 --> 00:00:50,039
by Adrienne and now I'm starting a new

00:00:47,100 --> 00:00:53,899
KDE application which is called Mark and

00:00:50,039 --> 00:00:57,059
this data set builder for a AI and

00:00:53,899 --> 00:00:59,640
supervises machine learning and also I'm

00:00:57,059 --> 00:01:02,090
a student at the Federal Institute of

00:00:59,640 --> 00:01:06,270
bhaiyya

00:01:02,090 --> 00:01:08,460
so these are my presentation topics I

00:01:06,270 --> 00:01:13,590
will start explaining about KPM core

00:01:08,460 --> 00:01:15,890
about my work on season of KDE 2018

00:01:13,590 --> 00:01:20,880
about my work on google Summer of Code

00:01:15,890 --> 00:01:24,840
2018 and I've been working as a mentor

00:01:20,880 --> 00:01:29,009
in google Summer of Code 2019 our

00:01:24,840 --> 00:01:33,270
explains some new features releases in

00:01:29,009 --> 00:01:36,450
the KD partner mentor 4.0 and the goes

00:01:33,270 --> 00:01:39,509
for the future so for those who don't

00:01:36,450 --> 00:01:42,060
know who don't know what KPM core is

00:01:39,509 --> 00:01:45,110
it's basically the core of the KD

00:01:42,060 --> 00:01:47,880
partition manager as the name suggests

00:01:45,110 --> 00:01:50,790
and it's basically a library for

00:01:47,880 --> 00:01:54,540
managing partitions doing some disk

00:01:50,790 --> 00:01:58,799
operations and it includes now rate

00:01:54,540 --> 00:02:01,590
support LVM support and it can be used

00:01:58,799 --> 00:02:05,549
by not only KD partition manager but

00:02:01,590 --> 00:02:08,160
other applications it is used by

00:02:05,549 --> 00:02:13,420
Calamari's the partitioning model of

00:02:08,160 --> 00:02:19,300
Calamari's and it has been

00:02:13,420 --> 00:02:23,920
in development for about some amount of

00:02:19,300 --> 00:02:27,010
and good number of years and first I

00:02:23,920 --> 00:02:31,480
will explain my work on season of KD

00:02:27,010 --> 00:02:34,510
2018 which was focused on the

00:02:31,480 --> 00:02:38,709
replacement of a man and maintain it we

00:02:34,510 --> 00:02:41,620
brought a smart library to the bar to

00:02:38,709 --> 00:02:44,260
the parsing of the smart counter smart

00:02:41,620 --> 00:02:49,450
control command in KD part show manager

00:02:44,260 --> 00:02:52,510
so Liberata smart is library to manage

00:02:49,450 --> 00:02:56,080
the smart support to see some

00:02:52,510 --> 00:02:58,269
information about your disks how about

00:02:56,080 --> 00:03:02,940
the status of your disks and some other

00:02:58,269 --> 00:03:07,690
data but it's not maintaining it since

00:03:02,940 --> 00:03:11,170
2010 2011 so we decided to use the smart

00:03:07,690 --> 00:03:16,859
control instead which was release it in

00:03:11,170 --> 00:03:19,359
this year or for smartphone tools and

00:03:16,859 --> 00:03:23,040
one of my words involved with the

00:03:19,359 --> 00:03:26,890
parsing of the smart control JSON output

00:03:23,040 --> 00:03:31,630
I could remove the leap yard at a smart

00:03:26,890 --> 00:03:34,030
library dependency and I also work it on

00:03:31,630 --> 00:03:36,840
something more than the smart support

00:03:34,030 --> 00:03:40,359
which was the improvement of the

00:03:36,840 --> 00:03:46,329
authentication support with K out so

00:03:40,359 --> 00:03:49,410
users can now do only one one step of

00:03:46,329 --> 00:03:52,390
authentication instead of many and

00:03:49,410 --> 00:03:55,690
during google Summer of Code 2018 I

00:03:52,390 --> 00:03:57,910
could finish LVM group support on K

00:03:55,690 --> 00:04:02,319
departure manager and I've also

00:03:57,910 --> 00:04:05,079
implemented some graphic interfaces for

00:04:02,319 --> 00:04:08,319
LVM support in column at ease as well

00:04:05,079 --> 00:04:12,280
I've also implemented the MMD rate

00:04:08,319 --> 00:04:15,910
support so full support actually not

00:04:12,280 --> 00:04:21,160
only the creation of rate devices but

00:04:15,910 --> 00:04:24,789
the edit the manipulation and all the

00:04:21,160 --> 00:04:27,190
other procedures it's not full stable

00:04:24,789 --> 00:04:30,850
now that's why we couldn't

00:04:27,190 --> 00:04:33,460
release it with Cady part shaman her 4.0

00:04:30,850 --> 00:04:37,030
because there are some issues with the

00:04:33,460 --> 00:04:40,300
devising mapping but our one of our

00:04:37,030 --> 00:04:45,310
goals that I will explain later is to

00:04:40,300 --> 00:04:50,680
merge the MD ready to work with KPM core

00:04:45,310 --> 00:04:53,650
and there is also a plan to integrate

00:04:50,680 --> 00:04:55,870
not only a mere eight but diem rate

00:04:53,650 --> 00:04:59,850
which are two different types of rates

00:04:55,870 --> 00:05:03,730
for Linux during google Summer of Code

00:04:59,850 --> 00:05:07,420
2019 we work at with our students should

00:05:03,730 --> 00:05:11,580
hang on the support the authentication

00:05:07,420 --> 00:05:16,540
process from K outs to poke it cute one

00:05:11,580 --> 00:05:20,650
because we needed to remove the the

00:05:16,540 --> 00:05:24,340
extra layers from K out and use pocket

00:05:20,650 --> 00:05:27,460
cute directly and our student also

00:05:24,340 --> 00:05:30,670
needed to improve the key key debug

00:05:27,460 --> 00:05:34,180
communication because now the the

00:05:30,670 --> 00:05:41,260
authentication process is done by the

00:05:34,180 --> 00:05:46,060
helper we start the bus helper which we

00:05:41,260 --> 00:05:50,110
can use to to do the the process that

00:05:46,060 --> 00:05:54,970
need authentication in the nkd partition

00:05:50,110 --> 00:05:58,120
manager from 4.0 we could port the KPM

00:05:54,970 --> 00:06:03,630
core back end from reported to SF disk

00:05:58,120 --> 00:06:07,120
this is part of one of our plans to make

00:06:03,630 --> 00:06:11,380
KD partition manager more portable

00:06:07,120 --> 00:06:16,240
including the portability to free BSD

00:06:11,380 --> 00:06:20,620
and my work with the smart support war

00:06:16,240 --> 00:06:24,120
worm was murdered and we included better

00:06:20,620 --> 00:06:28,210
support for looks to which was

00:06:24,120 --> 00:06:32,050
implemented in kg per diem and worth 3.3

00:06:28,210 --> 00:06:37,090
by and Rios and now we have the support

00:06:32,050 --> 00:06:39,910
for some new file systems such as a BFS

00:06:37,090 --> 00:06:41,040
and Microsoft BitLocker we also include

00:06:39,910 --> 00:06:48,510
the

00:06:41,040 --> 00:06:54,850
modern C++ and all these ports on both

00:06:48,510 --> 00:06:58,420
of Martin that as SF disks make made KPM

00:06:54,850 --> 00:07:01,150
more portable and goes for the future as

00:06:58,420 --> 00:07:04,960
I said before we want to bring full

00:07:01,150 --> 00:07:08,470
compatibility with FreeBSD and we also

00:07:04,960 --> 00:07:12,130
want to finish the pocket port because

00:07:08,470 --> 00:07:14,770
now there are some issues with with the

00:07:12,130 --> 00:07:18,400
current implementation especially on the

00:07:14,770 --> 00:07:21,430
scanning process and we want to evolve

00:07:18,400 --> 00:07:25,900
FS support includes some specific

00:07:21,430 --> 00:07:28,840
features for file systems and merge M D

00:07:25,900 --> 00:07:32,650
rate and finish the implementation of

00:07:28,840 --> 00:07:34,840
diem rate and another goal is to

00:07:32,650 --> 00:07:37,780
increase the number of automated tests

00:07:34,840 --> 00:07:41,290
because now we we don't do not have

00:07:37,780 --> 00:07:44,530
proper number of deaths in KD /

00:07:41,290 --> 00:07:47,020
commander and that's it I would like to

00:07:44,530 --> 00:07:49,780
say thanks to Katie for this opportunity

00:07:47,020 --> 00:07:52,650
and all the other opportunities that I

00:07:49,780 --> 00:07:52,650
have to receive it

00:07:57,669 --> 00:08:08,650
all right Thank You Caio are there

00:08:00,340 --> 00:08:10,529
questions about KPM core it's not his

00:08:08,650 --> 00:08:12,669
fault it's kalamatas fault okay

00:08:10,529 --> 00:08:16,360
Hey how did you know what I was good to

00:08:12,669 --> 00:08:18,999
ask we want to use calamari in neon and

00:08:16,360 --> 00:08:21,879
one of the limitations is full disk

00:08:18,999 --> 00:08:24,159
encryption is that is that your phone or

00:08:21,879 --> 00:08:25,689
is it his fault people we're so where's

00:08:24,159 --> 00:08:30,550
the responsibility for that probably

00:08:25,689 --> 00:08:39,669
xandria sports but I'm not like say that

00:08:30,550 --> 00:08:44,800
it's it's my fault other questions yeah

00:08:39,669 --> 00:08:46,329
we got one up there is it possible for

00:08:44,800 --> 00:08:47,949
you to go into some of the technical

00:08:46,329 --> 00:08:51,570
reasons why he kind of moved away from

00:08:47,949 --> 00:08:52,750
Kay off and closer just a poor K itself

00:08:51,570 --> 00:08:56,199
okay

00:08:52,750 --> 00:08:59,740
so one of the seasons was because we do

00:08:56,199 --> 00:09:04,600
not use all the features from K out so

00:08:59,740 --> 00:09:08,380
it's kind of there are some dependencies

00:09:04,600 --> 00:09:12,339
that we are not completely use it so we

00:09:08,380 --> 00:09:14,589
we just needed poke it for to

00:09:12,339 --> 00:09:17,620
authenticate the helper it's basically

00:09:14,589 --> 00:09:24,459
that because we call the we start the

00:09:17,620 --> 00:09:27,430
debugger vus with Super User and yeah

00:09:24,459 --> 00:09:32,350
it's basically that it was more unreal

00:09:27,430 --> 00:09:34,240
decision than mine and partitioning is a

00:09:32,350 --> 00:09:38,170
bit of a weird creature because you need

00:09:34,240 --> 00:09:39,850
to run multiple commands you need to DD

00:09:38,170 --> 00:09:41,440
zeroes on your MBR you need to

00:09:39,850 --> 00:09:42,790
reinitialize the MBR then you have to

00:09:41,440 --> 00:09:46,240
make partitions then you have to fill

00:09:42,790 --> 00:09:48,070
file systems up and so you have to run a

00:09:46,240 --> 00:09:51,250
bunch of things in a row and all of it

00:09:48,070 --> 00:09:53,910
takes a long time and so you've there's

00:09:51,250 --> 00:09:56,170
there's something there's special

00:09:53,910 --> 00:10:00,970
authentication stuff happening anyway

00:09:56,170 --> 00:10:06,839
with the helper and that kind of makes

00:10:00,970 --> 00:10:10,470
chaos a weird match any other questions

00:10:06,839 --> 00:10:13,420
otherwise I want to ask you about ZFS

00:10:10,470 --> 00:10:16,450
because with CFS on Linux now being the

00:10:13,420 --> 00:10:22,930
source of truth for ZFS and we have

00:10:16,450 --> 00:10:24,820
unified FreeBSD illumos and Linux ZFS

00:10:22,930 --> 00:10:28,240
implementations that's one of the most

00:10:24,820 --> 00:10:33,130
portable file systems around do you see

00:10:28,240 --> 00:10:36,250
KPM core supporting ZFS soon yeah it's

00:10:33,130 --> 00:10:39,940
one of our plans for the next version is

00:10:36,250 --> 00:10:42,730
to work directly on file system not only

00:10:39,940 --> 00:10:47,890
including new file system that we do not

00:10:42,730 --> 00:10:52,240
have support now but including the as I

00:10:47,890 --> 00:10:56,920
said before some features because now we

00:10:52,240 --> 00:11:01,990
only work with FS as with the file

00:10:56,920 --> 00:11:07,750
system support anymore how can I say

00:11:01,990 --> 00:11:12,130
that but in a more abstract way so yeah

00:11:07,750 --> 00:11:15,160
I can I can do that cool we got one more

00:11:12,130 --> 00:11:18,550
question over here is support of

00:11:15,160 --> 00:11:21,790
hardware crypto so use B stick with say

00:11:18,550 --> 00:11:23,770
something like a nitro key or similar

00:11:21,790 --> 00:11:25,810
that holds the key to your encrypted

00:11:23,770 --> 00:11:27,760
this is something that you currently

00:11:25,810 --> 00:11:33,550
support or have on the roadmap to

00:11:27,760 --> 00:11:36,340
support I'm I'm not the best best person

00:11:33,550 --> 00:11:39,220
to talk about that because I've not

00:11:36,340 --> 00:11:43,270
implemented the lock support so I'm not

00:11:39,220 --> 00:11:45,670
our about encryption and it's better to

00:11:43,270 --> 00:11:50,070
send a message to chew and reuse talking

00:11:45,670 --> 00:11:50,070
about that then yeah I'm not the best

00:12:05,699 --> 00:12:11,949
so there's an interaction between yeah

00:12:09,759 --> 00:12:14,079
it's a complete integration thing that

00:12:11,949 --> 00:12:18,550
we're KPM cor enters into the equation

00:12:14,079 --> 00:12:25,529
but also whatever your distro does or

00:12:18,550 --> 00:12:25,529
column at us yeah it's not clever enough

00:12:26,069 --> 00:12:32,470
anything else

00:12:28,769 --> 00:12:35,620
otherwise otherwise there is coffee and

00:12:32,470 --> 00:12:38,139
possibly cake oh hang on Johanna is

00:12:35,620 --> 00:12:42,189
Johanna is keeping you away from coffee

00:12:38,139 --> 00:12:46,029
and cake I want you to know that maybe

00:12:42,189 --> 00:12:47,079
I'm missing something but as a disc do

00:12:46,029 --> 00:12:50,529
you understand

00:12:47,079 --> 00:12:59,410
thus KPM core understand G GPT tables

00:12:50,529 --> 00:13:01,089
yes that was the best question ever it

00:12:59,410 --> 00:13:04,220
was short and it had a one-word answer

00:13:01,089 --> 00:13:09,639
thank you let's give Kyle a hand

00:13:04,220 --> 00:13:09,639

YouTube URL: https://www.youtube.com/watch?v=CxcGG1bMcV8


