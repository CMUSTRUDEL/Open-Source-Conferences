Title: David Edmundson - High DPI Applications - Akademy 2015
Publication date: 2016-04-02
Playlist: Akademy 2015
Description: 
	Want to make sure your application is usable on high DPI screens? This talk explains how to make sure your code is compliant.

In this talk I will give a rough overview of the concept of device independent pixels, which allows us to run applications on high DPI displays with minimal changes.

I will present some code examples of how to prepare your QWidget or QtQuick application to run on a high DPI display; how to provide larger pixmaps and going over some of the common pitfalls in existing codebases.

Finally I will demonstrate how to test your application without having to buy new hardware.

Speaker: David Edmundson
License: Creative Commons Attribution 4.0 International License http://creativecommons.org/licenses/by/4.0/
Akademy 2015: https://akademy.kde.org/2015
KDE: https://www.kde.org/
Donate: https://www.kde.org/donate
Captions: 
	00:00:09,320 --> 00:00:15,570
so I have a fancy screen because I'm

00:00:12,180 --> 00:00:17,789
important another problem because

00:00:15,570 --> 00:00:20,070
everyone develops over code every last

00:00:17,789 --> 00:00:23,369
year's for a searing screen to roughly a

00:00:20,070 --> 00:00:25,500
same size so to fix this Q to come up

00:00:23,369 --> 00:00:27,720
the system similar to how Android and

00:00:25,500 --> 00:00:29,699
awkward doing it and it means messing

00:00:27,720 --> 00:00:33,150
with the concept of this world where a

00:00:29,699 --> 00:00:35,910
pixel a pixel means a dot on the

00:00:33,150 --> 00:00:39,870
physical screen but we were also using

00:00:35,910 --> 00:00:42,300
it to mean a point in a size in your

00:00:39,870 --> 00:00:43,770
code you say something of 20 pixels big

00:00:42,300 --> 00:00:47,190
really say something that's 40 pixels

00:00:43,770 --> 00:00:49,530
big expecting it to be roughly three or

00:00:47,190 --> 00:00:51,420
four centimeters on the screen but now

00:00:49,530 --> 00:00:54,660
when you have a bigger screen that

00:00:51,420 --> 00:00:58,560
drapes so pixels now means one of two

00:00:54,660 --> 00:01:03,049
things in Q code it can be pixels on the

00:00:58,560 --> 00:01:07,939
screen device pixels or pixels in your

00:01:03,049 --> 00:01:10,350
codebase device independent pixels and

00:01:07,939 --> 00:01:15,359
everything gets very confusing at this

00:01:10,350 --> 00:01:17,640
point so I'm talking to you developers

00:01:15,359 --> 00:01:20,189
close its developers that need to fix

00:01:17,640 --> 00:01:22,069
existing code in theory with the changes

00:01:20,189 --> 00:01:24,509
in cute you don't need to do anything

00:01:22,069 --> 00:01:26,759
however a difference between theory and

00:01:24,509 --> 00:01:29,069
practice is in theory they're both the

00:01:26,759 --> 00:01:32,520
same you will have to change in code

00:01:29,069 --> 00:01:35,249
because some things do break so how it

00:01:32,520 --> 00:01:37,979
works internally effectively cute

00:01:35,249 --> 00:01:40,049
daughter set well transform whenever it

00:01:37,979 --> 00:01:43,469
paint so every time you give it a size

00:01:40,049 --> 00:01:45,030
it will draw a bigger and then when you

00:01:43,469 --> 00:01:47,909
click an event it will take the

00:01:45,030 --> 00:01:50,429
coordinates and divide it back to where

00:01:47,909 --> 00:01:53,219
it is and it's a sort of baggage

00:01:50,429 --> 00:01:56,310
solution that works perfectly really

00:01:53,219 --> 00:01:59,780
quite simple draw a bigger scale or your

00:01:56,310 --> 00:02:02,670
input coordinates back so what works

00:01:59,780 --> 00:02:05,369
draw our to draw back to draw text

00:02:02,670 --> 00:02:08,190
everything looks super perfect with this

00:02:05,369 --> 00:02:10,790
skating inside p painter because he

00:02:08,190 --> 00:02:13,380
painted really well designed however

00:02:10,790 --> 00:02:15,450
draw pics map doesn't work as well

00:02:13,380 --> 00:02:18,450
because if you have a small

00:02:15,450 --> 00:02:20,690
map and you say draw a bigger because

00:02:18,450 --> 00:02:23,459
we're scaling it you can't magically

00:02:20,690 --> 00:02:25,470
invent what the pixels were once you

00:02:23,459 --> 00:02:27,750
have a small pic map you always have a

00:02:25,470 --> 00:02:29,370
small picking up and it is gather up it

00:02:27,750 --> 00:02:36,180
looks like this which even on this

00:02:29,370 --> 00:02:39,239
projector looks blocky so assuming we

00:02:36,180 --> 00:02:41,450
have a fancy screen we have our device

00:02:39,239 --> 00:02:43,769
pixel ratio is set to 2 with scaling

00:02:41,450 --> 00:02:47,549
everything from the users basically

00:02:43,769 --> 00:02:50,010
device by two if I have this line in my

00:02:47,549 --> 00:02:52,019
code I have an icon a key icon and I

00:02:50,010 --> 00:02:53,970
called Qi Pandavas pixmap and I'll

00:02:52,019 --> 00:02:57,209
saying or what does nice to be 20 by 20

00:02:53,970 --> 00:03:02,489
and then I print out the size of the pit

00:02:57,209 --> 00:03:05,069
map what are going to attend it sounds a

00:03:02,489 --> 00:03:08,430
pixmap which is sized 40 by 40 you

00:03:05,069 --> 00:03:12,660
request 2520 device-independent picks up

00:03:08,430 --> 00:03:15,810
device independent pixels and you get

00:03:12,660 --> 00:03:18,060
the tix map is in device pixels so it's

00:03:15,810 --> 00:03:20,040
40 by 40 so you get this mixed mouth

00:03:18,060 --> 00:03:22,950
between what your request and the pigs

00:03:20,040 --> 00:03:25,200
pics map you get back and saying

00:03:22,950 --> 00:03:27,600
you immediately well but if a bit of

00:03:25,200 --> 00:03:31,230
metadata attached to the pics map that

00:03:27,600 --> 00:03:33,299
says I've already been scaled I I was

00:03:31,230 --> 00:03:37,530
created expecting a device pixel ratio

00:03:33,299 --> 00:03:41,010
to get to so whenever we generate pixmap

00:03:37,530 --> 00:03:43,109
in our code anywhere MKT code you need

00:03:41,010 --> 00:03:44,400
to make it bigger than most requested

00:03:43,109 --> 00:03:47,040
you need to turn it from device

00:03:44,400 --> 00:03:49,920
independent pixels to device pixels and

00:03:47,040 --> 00:03:53,130
you do that simply by multiplying it by

00:03:49,920 --> 00:03:54,780
a device pixel ratio and then you want

00:03:53,130 --> 00:03:56,880
to set your metadata for other bits of

00:03:54,780 --> 00:04:01,230
code you know I've already scale with

00:03:56,880 --> 00:04:04,920
this and gentle and now when we're using

00:04:01,230 --> 00:04:07,500
a size that pixmap in our code we need

00:04:04,920 --> 00:04:10,270
if we ever want to know what the size of

00:04:07,500 --> 00:04:13,090
that pic map is in device independent

00:04:10,270 --> 00:04:15,520
pixels is in full positioning a pixmap

00:04:13,090 --> 00:04:18,280
we need to scale it back so you need to

00:04:15,520 --> 00:04:19,750
divide it by a device pixel ratio and I

00:04:18,280 --> 00:04:21,190
know this all sounds confusing because

00:04:19,750 --> 00:04:24,070
I'm saying red pixel for two different

00:04:21,190 --> 00:04:26,590
things it is but once you understand it

00:04:24,070 --> 00:04:28,690
it's really quite a simple system q

00:04:26,590 --> 00:04:32,530
images and cubed x maps are device

00:04:28,690 --> 00:04:36,340
independent pixels everything else our

00:04:32,530 --> 00:04:38,260
device pixels everything else it divided

00:04:36,340 --> 00:04:40,180
good thing they wrote it down and I'll

00:04:38,260 --> 00:04:42,490
pop all of this into a blog post where

00:04:40,180 --> 00:04:43,540
we can digest it and I've got an example

00:04:42,490 --> 00:04:49,210
but i'm not going to go through it now

00:04:43,540 --> 00:04:51,190
become short of time so between the

00:04:49,210 --> 00:04:54,580
community everything is text in

00:04:51,190 --> 00:04:57,550
frameworks as far as i know everything

00:04:54,580 --> 00:05:00,280
is fixed within system settings and

00:04:57,550 --> 00:05:04,470
everything's fixed in dolphin swim team

00:05:00,280 --> 00:05:10,990
time of dolphin and spend some time on a

00:05:04,470 --> 00:05:14,500
snapshot now let's open up but there are

00:05:10,990 --> 00:05:18,340
hundreds of options under the rat inside

00:05:14,500 --> 00:05:21,190
the KD world and no one person of time

00:05:18,340 --> 00:05:22,660
to do all of them so every develop in

00:05:21,190 --> 00:05:25,960
this room and every developer not in the

00:05:22,660 --> 00:05:29,260
frame needs to really check their

00:05:25,960 --> 00:05:31,300
artworks and fix it and testing is

00:05:29,260 --> 00:05:34,150
really quite simple you don't need a new

00:05:31,300 --> 00:05:35,500
screen you can make a joke but it gets

00:05:34,150 --> 00:05:37,210
rolled on provide you don't need a new

00:05:35,500 --> 00:05:40,570
screen you set an environment variable

00:05:37,210 --> 00:05:43,570
and you set a front BPI and system

00:05:40,570 --> 00:05:46,420
settings and then you run it and then if

00:05:43,570 --> 00:05:48,580
something looks blocky you fix it if

00:05:46,420 --> 00:05:52,500
something looks completely broken then

00:05:48,580 --> 00:05:56,560
it's even more important you fix it I've

00:05:52,500 --> 00:05:59,380
got a buff Tuesday 930 throughout any

00:05:56,560 --> 00:06:01,210
morning where bring it up I'll help look

00:05:59,380 --> 00:06:04,090
through anything that's broken we'll

00:06:01,210 --> 00:06:06,100
discuss how to solve any particular

00:06:04,090 --> 00:06:09,040
issues you might have and I'm happy to

00:06:06,100 --> 00:06:11,340
about fixing people out and that's it

00:06:09,040 --> 00:06:11,340
for me

00:06:22,920 --> 00:06:24,980

YouTube URL: https://www.youtube.com/watch?v=XQW07EgD734


