Title: Daniel Vratil - Sandboxing KDE Applications - Akademy 2015
Publication date: 2016-04-02
Playlist: Akademy 2015
Description: 
	In this talk I will explain what sandboxing applications actually means, what is a sandbox runtime, how running KDE applications in sandbox benefits users and 3rd party application developers and what changes in KDE and Qt are needed to make it all work.

Sandboxing has two major advantages: it provides a standardized pre-defined runtime environment that applications will run in, and it provides additional security in terms of full control over which hardware (or software) resources each application can use.

This talk is targeted at both distribution and application developers.

Speaker: Daniel VrÃ¡til
License: Creative Commons Attribution 4.0 International License http://creativecommons.org/licenses/by/4.0/
Akademy 2015: https://akademy.kde.org/2015
KDE: https://www.kde.org/
Donate: https://www.kde.org/donate
Captions: 
	00:00:07,680 --> 00:00:13,830
we are going to continue with the

00:00:10,830 --> 00:00:18,600
presentation from manicotti a donkey's

00:00:13,830 --> 00:00:21,539
software engineer at first half where he

00:00:18,600 --> 00:00:24,090
forgot the balsa on sandboxing he is

00:00:21,539 --> 00:00:26,730
going to split us voltage thing about

00:00:24,090 --> 00:00:30,240
samples needs a wife is important and

00:00:26,730 --> 00:00:34,140
what the key here beaut applications

00:00:30,240 --> 00:00:37,530
need to make it work so thank you line

00:00:34,140 --> 00:00:39,960
and presentation thank you so hello I'm

00:00:37,530 --> 00:00:41,910
Daniel gradual and I want to present you

00:00:39,960 --> 00:00:43,980
something I've been working on dread

00:00:41,910 --> 00:00:47,100
head for the past couple months on and

00:00:43,980 --> 00:00:49,020
off we'll be got interested in San

00:00:47,100 --> 00:00:50,489
boxing because it's cool and it's what

00:00:49,020 --> 00:00:53,790
all the cool kids do so we started doing

00:00:50,489 --> 00:00:55,530
as well and this specifically there's a

00:00:53,790 --> 00:00:58,530
dominate sandboxing applications and

00:00:55,530 --> 00:01:00,030
waves to sandbox applications this talk

00:00:58,530 --> 00:01:02,489
is specifically about the one we are

00:01:00,030 --> 00:01:04,619
working on which is called xdg app and

00:01:02,489 --> 00:01:06,600
so I want to explain how it kind of

00:01:04,619 --> 00:01:12,119
works and what it is good for especially

00:01:06,600 --> 00:01:13,530
how Katie can benefit from that so just

00:01:12,119 --> 00:01:16,080
to make sure that we are all on the same

00:01:13,530 --> 00:01:17,700
wave I'm too can explain what sandboxing

00:01:16,080 --> 00:01:21,570
means in the context of this

00:01:17,700 --> 00:01:24,780
presentation so to me sandbox is should

00:01:21,570 --> 00:01:27,180
be isolated controls and reproducible I

00:01:24,780 --> 00:01:30,330
so it means that the application that is

00:01:27,180 --> 00:01:31,770
running inside the sandbox should well

00:01:30,330 --> 00:01:32,970
it feels like it's allowed on the

00:01:31,770 --> 00:01:36,060
system's it doesn't see any other

00:01:32,970 --> 00:01:39,509
processes it doesn't access to an

00:01:36,060 --> 00:01:41,610
assistant resources are cannot talk to d

00:01:39,509 --> 00:01:44,220
bus cannot talk to network cannot see

00:01:41,610 --> 00:01:46,530
the hosts file system and so on and so

00:01:44,220 --> 00:01:48,630
on so this is obviously for safety

00:01:46,530 --> 00:01:51,360
reasons most then it should be

00:01:48,630 --> 00:01:52,829
controlled so control means that the

00:01:51,360 --> 00:01:55,020
application doesn't choose some in

00:01:52,829 --> 00:01:57,150
certain to just be sandbox that doesn't

00:01:55,020 --> 00:01:59,520
make much sense there has to be another

00:01:57,150 --> 00:02:01,850
application like xtg at which actually

00:01:59,520 --> 00:02:04,470
sets up the Sun sets up the sandbox and

00:02:01,850 --> 00:02:07,259
then runs the application inside the

00:02:04,470 --> 00:02:08,929
sandbox and it also controls what things

00:02:07,259 --> 00:02:11,000
the application can talk to so

00:02:08,929 --> 00:02:12,710
restricting the application

00:02:11,000 --> 00:02:15,230
way I just mentioned that doesn't make

00:02:12,710 --> 00:02:17,780
much sense the application would nothing

00:02:15,230 --> 00:02:19,820
so if there are some entity that

00:02:17,780 --> 00:02:21,950
controls the sandbox from the outside it

00:02:19,820 --> 00:02:23,720
can say okay this application can call

00:02:21,950 --> 00:02:27,290
talk to network or it can access the

00:02:23,720 --> 00:02:29,540
host file system and so and finally it

00:02:27,290 --> 00:02:33,290
should be reproducible which means if

00:02:29,540 --> 00:02:35,510
the application terminates and we

00:02:33,290 --> 00:02:37,430
cleaned up the sandbox then when you try

00:02:35,510 --> 00:02:40,490
to run the application again we can set

00:02:37,430 --> 00:02:41,810
up exactly the same sandbox as before so

00:02:40,490 --> 00:02:43,880
that the application doesn't notice that

00:02:41,810 --> 00:02:48,560
we actually destroyed it and build it

00:02:43,880 --> 00:02:50,870
from scratch again there is an exception

00:02:48,560 --> 00:02:52,970
cannot reproduce ability usually means

00:02:50,870 --> 00:02:55,430
that the whatever data the application

00:02:52,970 --> 00:02:57,950
fries are lost in case of XD giv

00:02:55,430 --> 00:03:00,140
actually persists some of the data use

00:02:57,950 --> 00:03:05,300
the configuration there are stuff in the

00:03:00,140 --> 00:03:08,090
etg califican XD cheating others so with

00:03:05,300 --> 00:03:13,700
that none are the XD GF sandbox

00:03:08,090 --> 00:03:19,209
specifically is its find out is a cross

00:03:13,700 --> 00:03:22,549
desktop project which means that we want

00:03:19,209 --> 00:03:25,519
the department applications to be but

00:03:22,549 --> 00:03:27,560
once and be possible to an alicorn on a

00:03:25,519 --> 00:03:30,170
system it doesn't matter which

00:03:27,560 --> 00:03:33,250
distribution it is so for that reason we

00:03:30,170 --> 00:03:35,989
needs to somehow solve the problem with

00:03:33,250 --> 00:03:37,970
binary compatibility missing libraries

00:03:35,989 --> 00:03:40,370
and this stuff changing between each

00:03:37,970 --> 00:03:42,590
distribution and for that reason we have

00:03:40,370 --> 00:03:44,720
something called run times that we run

00:03:42,590 --> 00:03:49,790
the application bottles on top of these

00:03:44,720 --> 00:03:53,180
run times so the run time in the sense

00:03:49,790 --> 00:03:56,910
of xdg app is a well-defined file system

00:03:53,180 --> 00:04:01,160
environment fastest the environment

00:03:56,910 --> 00:04:03,720
that's weird means that basically

00:04:01,160 --> 00:04:06,050
they're the wrong time just contains

00:04:03,720 --> 00:04:10,830
file system tree basically just

00:04:06,050 --> 00:04:16,530
libraries duties and as the world

00:04:10,830 --> 00:04:18,930
defiant means that it is exactly set or

00:04:16,530 --> 00:04:22,260
it is defined what design books what oh

00:04:18,930 --> 00:04:24,630
sorry about the runtime will contain so

00:04:22,260 --> 00:04:27,120
if I say we can have kids run time then

00:04:24,630 --> 00:04:30,090
I say well the cute one tab contains the

00:04:27,120 --> 00:04:31,770
base system and cute and nothing else

00:04:30,090 --> 00:04:35,370
and you cannot add things into it just

00:04:31,770 --> 00:04:38,370
because he won't if you want Katie

00:04:35,370 --> 00:04:41,810
frameworks you create k a 5-1 which will

00:04:38,370 --> 00:04:45,660
have the bases the cute and k5 libraries

00:04:41,810 --> 00:04:47,670
it is important to mention that the

00:04:45,660 --> 00:04:49,350
right that is presented changes which

00:04:47,670 --> 00:04:52,350
means if you create around that with

00:04:49,350 --> 00:04:54,240
Katie frameworks five point 10 and then

00:04:52,350 --> 00:04:56,070
kv frameworks five point 11 are released

00:04:54,240 --> 00:04:58,260
you don't update the frameworks in

00:04:56,070 --> 00:05:02,060
runtime you create a new runtime just

00:04:58,260 --> 00:05:04,560
with different version in the name so

00:05:02,060 --> 00:05:07,260
this is this is important it doesn't the

00:05:04,560 --> 00:05:09,230
wrong types never change with maybe

00:05:07,260 --> 00:05:13,140
maybe the exceptions of let's say

00:05:09,230 --> 00:05:15,330
critical bug fixes or security security

00:05:13,140 --> 00:05:17,430
problem security fixes but it's not like

00:05:15,330 --> 00:05:19,950
we just can taste are obligate the

00:05:17,430 --> 00:05:24,000
entire stack or update random libraries

00:05:19,950 --> 00:05:28,140
that are part of the wrong time as a I

00:05:24,000 --> 00:05:31,020
mentioned that we use some space base

00:05:28,140 --> 00:05:33,090
layer the system libraries that are

00:05:31,020 --> 00:05:36,800
available medical and redistribution or

00:05:33,090 --> 00:05:40,050
that basically main make the system

00:05:36,800 --> 00:05:41,730
currently we use the yolk debase yogurt

00:05:40,050 --> 00:05:45,600
o is a project from I think we shelter

00:05:41,730 --> 00:05:47,430
foundation the idea is that they define

00:05:45,600 --> 00:05:49,710
some set of libraries and versions that

00:05:47,430 --> 00:05:52,080
can work together and it is a mostly for

00:05:49,710 --> 00:05:55,140
repetitive developers so that they know

00:05:52,080 --> 00:05:58,080
what is the stable days for their

00:05:55,140 --> 00:06:01,110
embedded networked systems so we use it

00:05:58,080 --> 00:06:02,330
as well because it's cool if you if you

00:06:01,110 --> 00:06:04,939
met in a runtime you don't

00:06:02,330 --> 00:06:07,849
can take care of all the system

00:06:04,939 --> 00:06:09,740
libraries so they up to upstream takes

00:06:07,849 --> 00:06:14,360
care of death I just pull it and build

00:06:09,740 --> 00:06:18,110
it here are some examples of the names i

00:06:14,360 --> 00:06:20,300
use so we use the reverse URL format /

00:06:18,110 --> 00:06:24,199
architectures large the version of the

00:06:20,300 --> 00:06:27,229
other one of the runtime basically / and

00:06:24,199 --> 00:06:29,330
there is a platform an sdk difference so

00:06:27,229 --> 00:06:32,539
when we create a runtime we create a

00:06:29,330 --> 00:06:35,180
platform which is just a type of runtime

00:06:32,539 --> 00:06:36,949
let's say which contains the libraries

00:06:35,180 --> 00:06:39,680
the utilities omelet that are necessary

00:06:36,949 --> 00:06:42,620
for application to run against it the

00:06:39,680 --> 00:06:44,090
SDK contains the same as platform but it

00:06:42,620 --> 00:06:46,490
also contains a developer had

00:06:44,090 --> 00:06:48,319
development others compilers debugger

00:06:46,490 --> 00:06:50,780
debugger and all the stuff you need to

00:06:48,319 --> 00:06:55,210
actually build the application against

00:06:50,780 --> 00:06:55,210
the run time and to debug it necessary

00:06:55,900 --> 00:07:08,900
yeah the user buble means that basically

00:07:01,270 --> 00:07:10,520
the runtime can well disregard its we

00:07:08,900 --> 00:07:12,860
don't have time for that I guess to

00:07:10,520 --> 00:07:14,029
explain in detail anyway oh one last

00:07:12,860 --> 00:07:16,639
thing I want to mention is that we use

00:07:14,029 --> 00:07:19,789
OS three to store the Iran times or the

00:07:16,639 --> 00:07:22,310
application bundles os3 basically is

00:07:19,789 --> 00:07:24,080
like a gate for file systems so you can

00:07:22,310 --> 00:07:26,419
commit the entire file system trees into

00:07:24,080 --> 00:07:28,009
it into there and any few changes you

00:07:26,419 --> 00:07:29,599
just commit them again and occasionally

00:07:28,009 --> 00:07:32,779
diff between revisions there you see

00:07:29,599 --> 00:07:34,879
which files change it does actually it

00:07:32,779 --> 00:07:36,379
can tell you what to change in the files

00:07:34,879 --> 00:07:38,419
or they just tell you these files change

00:07:36,379 --> 00:07:41,029
between directions which is also cool

00:07:38,419 --> 00:07:43,219
because that way we can store all the

00:07:41,029 --> 00:07:45,889
different versions of the same runtime

00:07:43,219 --> 00:07:50,120
in the same always the repository by

00:07:45,889 --> 00:07:52,129
using basically branches and then if you

00:07:50,120 --> 00:07:54,259
have one application that requires cute

00:07:52,129 --> 00:07:56,990
five for another application which

00:07:54,259 --> 00:07:59,779
requires cute 55 we simply check out of

00:07:56,990 --> 00:08:02,750
different branches into each and boxes

00:07:59,779 --> 00:08:05,180
and you can run these things are at the

00:08:02,750 --> 00:08:06,409
same time so this solves the problem

00:08:05,180 --> 00:08:08,449
with

00:08:06,409 --> 00:08:10,610
different applications require different

00:08:08,449 --> 00:08:12,889
versions of the same stuff you can even

00:08:10,610 --> 00:08:14,059
run to obligations in the differ of

00:08:12,889 --> 00:08:16,099
different versions of the same

00:08:14,059 --> 00:08:18,979
obligation at the same time because the

00:08:16,099 --> 00:08:23,479
sandbox isolates it and the storage

00:08:18,979 --> 00:08:27,099
allows us to do that now to the

00:08:23,479 --> 00:08:29,239
applications so application bundle is

00:08:27,099 --> 00:08:31,429
basically if you just take the

00:08:29,239 --> 00:08:34,069
application we build it against the run

00:08:31,429 --> 00:08:36,769
time that it needs so let's say if I if

00:08:34,069 --> 00:08:39,079
I choose Kate so I know that Kate needs

00:08:36,769 --> 00:08:41,269
only cute frameworks and maybe some

00:08:39,079 --> 00:08:44,180
other system libraries so I know this is

00:08:41,269 --> 00:08:46,899
provided by the k5 front time so I just

00:08:44,180 --> 00:08:49,879
get built Kate against the KA five sons

00:08:46,899 --> 00:08:52,250
SDK and then the bundle will only

00:08:49,879 --> 00:08:56,319
contain the cake kleinereise the library

00:08:52,250 --> 00:08:59,389
and the sharing the data use of Sharon

00:08:56,319 --> 00:09:00,769
sometimes can happen that not all

00:08:59,389 --> 00:09:03,560
dependencies are available in the

00:09:00,769 --> 00:09:05,870
runtime we don't be it'll run down some

00:09:03,560 --> 00:09:09,740
static as I mentioned so we don't allow

00:09:05,870 --> 00:09:11,630
like merging to run times together to

00:09:09,740 --> 00:09:14,149
satisfy the dependencies of applications

00:09:11,630 --> 00:09:16,430
so unnecessary unfortunately it is

00:09:14,149 --> 00:09:17,810
necessary for the application to bundle

00:09:16,430 --> 00:09:19,339
the dependencies that are not available

00:09:17,810 --> 00:09:23,000
in the runtime into the application

00:09:19,339 --> 00:09:26,829
bottle so for instance for KD games i

00:09:23,000 --> 00:09:30,139
bundled couple KD games applications so

00:09:26,829 --> 00:09:32,300
the lib katie games or whatever it's

00:09:30,139 --> 00:09:34,339
called is not it's not a framework so

00:09:32,300 --> 00:09:36,500
it's not in a k5 front i'm so these

00:09:34,339 --> 00:09:41,360
bundles contain not just the game itself

00:09:36,500 --> 00:09:43,009
without of the library the day need so

00:09:41,360 --> 00:09:45,470
as i mentioned it runs again the

00:09:43,009 --> 00:09:47,689
specified runtime so the application

00:09:45,470 --> 00:09:50,240
simply serve its metadata I need this

00:09:47,689 --> 00:09:54,319
runtime of this version and the hdt up

00:09:50,240 --> 00:09:56,750
just takes care of it the the

00:09:54,319 --> 00:09:59,509
application in the in the indoor

00:09:56,750 --> 00:10:02,899
repository is in a Oregon you're going

00:09:59,509 --> 00:10:05,329
to create this sandbox and set up the

00:10:02,899 --> 00:10:07,189
fan system from the runtime that special

00:10:05,329 --> 00:10:09,459
/ app directory is created and the

00:10:07,189 --> 00:10:11,080
application bundle is mounted into their

00:10:09,459 --> 00:10:13,690
which

00:10:11,080 --> 00:10:15,790
explore the necessary for I posao path

00:10:13,690 --> 00:10:18,970
this first in half then fall back to pay

00:10:15,790 --> 00:10:20,470
LD library path cute plugins and all

00:10:18,970 --> 00:10:22,240
these libraries they further all these

00:10:20,470 --> 00:10:25,510
variables are first pointed to the

00:10:22,240 --> 00:10:27,100
obligation folder so in theory

00:10:25,510 --> 00:10:29,260
application with even override some

00:10:27,100 --> 00:10:31,150
plugins from from cuse okay five and

00:10:29,260 --> 00:10:37,750
that we fall back to whatever the

00:10:31,150 --> 00:10:40,480
runtime provides now so we have run

00:10:37,750 --> 00:10:43,840
times we have obligations now together

00:10:40,480 --> 00:10:45,730
well we use the etg Abdul which was

00:10:43,840 --> 00:10:48,340
originally written by Alex Larson a

00:10:45,730 --> 00:10:50,200
colleague of mine redhead he still

00:10:48,340 --> 00:10:52,450
maintains it currently it's a free

00:10:50,200 --> 00:10:55,060
desktop project so it lives on free

00:10:52,450 --> 00:10:57,520
disturb or directly unfortunately still

00:10:55,060 --> 00:11:01,330
on Chrome wiki page but hopefully we

00:10:57,520 --> 00:11:03,760
will at some point I already sent it

00:11:01,330 --> 00:11:06,880
across this club across desktop tool so

00:11:03,760 --> 00:11:08,680
basically you can run the bundles and

00:11:06,880 --> 00:11:11,740
the runtimes on every distribution you

00:11:08,680 --> 00:11:13,720
want the only necessarily think that the

00:11:11,740 --> 00:11:17,080
distribution must provide is the xt GF 2

00:11:13,720 --> 00:11:19,390
so that we can set up the sandbox so

00:11:17,080 --> 00:11:21,520
this is all it does basically it does

00:11:19,390 --> 00:11:24,640
the single DVD GF 2 does everything that

00:11:21,520 --> 00:11:28,180
you need to create set up and Rama

00:11:24,640 --> 00:11:30,910
sandboxes so you can create edit and

00:11:28,180 --> 00:11:34,960
remove the remote OS repositories so

00:11:30,910 --> 00:11:37,300
basically like git remote how to remove

00:11:34,960 --> 00:11:39,700
you can install update the remove front

00:11:37,300 --> 00:11:41,710
types and repositories so randoms and

00:11:39,700 --> 00:11:45,010
application bundles so you just paid

00:11:41,710 --> 00:11:46,780
this sort of a check out so just say the

00:11:45,010 --> 00:11:48,550
name of the remote and the name of the

00:11:46,780 --> 00:11:50,230
branch you want to check out and it does

00:11:48,550 --> 00:11:54,340
a local clone from the remote repository

00:11:50,230 --> 00:11:58,050
and once you do that you can write a lot

00:11:54,340 --> 00:12:01,450
of creative application bundles so it

00:11:58,050 --> 00:12:04,570
can prepares the run time that you need

00:12:01,450 --> 00:12:07,570
to have to build the application bundle

00:12:04,570 --> 00:12:09,070
then it our change you listen to it and

00:12:07,570 --> 00:12:11,800
cause whatever come and you give it to

00:12:09,070 --> 00:12:15,010
actually a lot of stuff then it creates

00:12:11,800 --> 00:12:17,920
the bundle expose metadata we do some on

00:12:15,010 --> 00:12:20,440
the magic like setup files are exported

00:12:17,920 --> 00:12:21,400
so they it can actually be mounted

00:12:20,440 --> 00:12:23,770
outside the sample

00:12:21,400 --> 00:12:25,750
like desktop files you want basically

00:12:23,770 --> 00:12:28,450
those files to be somehow exported to

00:12:25,750 --> 00:12:31,540
your host so that you can see them aqui

00:12:28,450 --> 00:12:33,040
runner for instance and then they just

00:12:31,540 --> 00:12:37,300
don't contain the simple binary naval

00:12:33,040 --> 00:12:40,210
action ctg and yeah finally he actually

00:12:37,300 --> 00:12:41,890
sit ups and controls the sandbox is at

00:12:40,210 --> 00:12:46,300
what the application in the sandbox can

00:12:41,890 --> 00:12:50,250
or cannot do the way it works more or

00:12:46,300 --> 00:12:54,310
less is that it creates the change route

00:12:50,250 --> 00:12:57,160
the changeling can be empty or we can

00:12:54,310 --> 00:12:59,440
mount the actual user fan system into it

00:12:57,160 --> 00:13:01,840
that depends on what we got the

00:12:59,440 --> 00:13:05,200
application meta data actually require

00:13:01,840 --> 00:13:06,970
so the application metadata the bundle

00:13:05,200 --> 00:13:08,590
meta let us say that what if the

00:13:06,970 --> 00:13:11,170
application needs just the inter host

00:13:08,590 --> 00:13:14,380
passes there or just uses home or work

00:13:11,170 --> 00:13:16,690
whatever else then we mount by the

00:13:14,380 --> 00:13:18,760
runtime three so we find the right one

00:13:16,690 --> 00:13:22,210
time you do the OS to each account and

00:13:18,760 --> 00:13:24,760
mountain to the root if you if you don't

00:13:22,210 --> 00:13:27,970
have the access to the host file system

00:13:24,760 --> 00:13:29,860
then it may be the wrong time three is

00:13:27,970 --> 00:13:32,290
the entire file system that the

00:13:29,860 --> 00:13:33,880
application will see and half if the

00:13:32,290 --> 00:13:35,530
application bundle actually requires

00:13:33,880 --> 00:13:38,410
access to the house passes that manatees

00:13:35,530 --> 00:13:40,300
somehow approved by the xt shed then the

00:13:38,410 --> 00:13:43,510
first the change it contains the actual

00:13:40,300 --> 00:13:45,910
root of the host system and the runtime

00:13:43,510 --> 00:13:48,580
fast and really smarting over it so we

00:13:45,910 --> 00:13:51,190
hide the original user from the hooves

00:13:48,580 --> 00:13:54,940
behind the bin folder from the host but

00:13:51,190 --> 00:13:56,980
for instance the slash opt or slash what

00:13:54,940 --> 00:13:58,330
else oh that you have you can have on

00:13:56,980 --> 00:14:01,360
your phone system it will be visible to

00:13:58,330 --> 00:14:03,400
the application and can access it and

00:14:01,360 --> 00:14:06,790
then it mounts the application into the

00:14:03,400 --> 00:14:09,370
/ app folder and when this is done it

00:14:06,790 --> 00:14:11,290
creates uses all these awesome weird

00:14:09,370 --> 00:14:14,170
things that the kernel provides us with

00:14:11,290 --> 00:14:16,510
other security tools so we do p ids

00:14:14,170 --> 00:14:18,980
basis it creates a see group creates on

00:14:16,510 --> 00:14:22,220
d position hopefully we have killed

00:14:18,980 --> 00:14:24,470
will be much easier but still select

00:14:22,220 --> 00:14:28,970
contacts and what not to make it kind of

00:14:24,470 --> 00:14:37,040
secure and not the application so then

00:14:28,970 --> 00:14:43,670
what time so I've I already you can't

00:14:37,040 --> 00:14:46,040
see yep so I've already i created the

00:14:43,670 --> 00:14:50,199
repository Weaver I've cup sometimes I

00:14:46,040 --> 00:14:53,060
have a cute 451 I have an ancient ka

00:14:50,199 --> 00:14:54,410
55.9 because that's when I did it and

00:14:53,060 --> 00:14:57,050
couldn't be bothered to make a new

00:14:54,410 --> 00:15:10,010
version and I've bundled couple

00:14:57,050 --> 00:15:14,320
applications so let's say right so I can

00:15:10,010 --> 00:15:14,320
just try to add a new remote it's not i

00:15:15,100 --> 00:15:20,540
can now try to add a new remote which i

00:15:17,720 --> 00:15:23,959
will just say XD GF had removed the name

00:15:20,540 --> 00:15:27,579
and some remote URL i will do it i

00:15:23,959 --> 00:15:32,029
already did that I can list remotes so

00:15:27,579 --> 00:15:34,160
sorry user so i can die for the remotes

00:15:32,029 --> 00:15:36,170
called Katie and local local is my local

00:15:34,160 --> 00:15:38,690
clone katie is something I've sync to my

00:15:36,170 --> 00:15:43,579
server but it takes forever so i use the

00:15:38,690 --> 00:15:45,440
local own so oh yeah and there's the the

00:15:43,579 --> 00:15:48,139
user switch because XD GF actually

00:15:45,440 --> 00:15:51,740
supports four remotes runtimes and

00:15:48,139 --> 00:15:53,690
applications it supports the user well

00:15:51,740 --> 00:15:55,300
system-wide deployment so then you need

00:15:53,690 --> 00:15:58,120
root privileges and it's stored in

00:15:55,300 --> 00:16:00,829
system fights folders / bar somewhere

00:15:58,120 --> 00:16:02,630
for the if you use this user switch then

00:16:00,829 --> 00:16:06,050
it's per user it's stored somewhere in

00:16:02,630 --> 00:16:09,230
conflict at local share and its user can

00:16:06,050 --> 00:16:13,060
manage a or so I ask this in my user so

00:16:09,230 --> 00:16:16,940
now i can look what is available in the

00:16:13,060 --> 00:16:20,510
house it's called list runtimes

00:16:16,940 --> 00:16:25,630
restaurant times that are installed

00:16:20,510 --> 00:16:28,790
locally or I could just install run time

00:16:25,630 --> 00:16:30,250
as a user from the local remote

00:16:28,790 --> 00:16:32,770
repository

00:16:30,250 --> 00:16:38,650
and I would want to install it's a KF

00:16:32,770 --> 00:16:42,880
five platform but for diversion 590 this

00:16:38,650 --> 00:16:44,920
would be basically sort of os3 pool so I

00:16:42,880 --> 00:16:48,040
get pulled from the remote repository I

00:16:44,920 --> 00:16:50,070
won't do it it takes forever I already

00:16:48,040 --> 00:16:53,380
had locally installed as we saw before

00:16:50,070 --> 00:16:59,980
so now i can look what applications we

00:16:53,380 --> 00:17:01,570
have oops oh is this apps so i have lots

00:16:59,980 --> 00:17:04,000
of applications installed some of them

00:17:01,570 --> 00:17:09,910
out engine and then work some of them

00:17:04,000 --> 00:17:11,140
are new but student work so again i

00:17:09,910 --> 00:17:14,199
could or i could just install it

00:17:11,140 --> 00:17:18,310
remotely so app install app as the user

00:17:14,199 --> 00:17:21,550
from the local clone and it's called SI

00:17:18,310 --> 00:17:24,610
porque de Marville i think i need to oh

00:17:21,550 --> 00:17:25,870
it's already installed however i just

00:17:24,610 --> 00:17:28,930
finished compiling new version of

00:17:25,870 --> 00:17:31,750
marlboro so i can do update a user or

00:17:28,930 --> 00:17:34,960
click marble and it will just download

00:17:31,750 --> 00:17:36,970
the new version that i just compiled and

00:17:34,960 --> 00:17:39,220
pushed into the repository and install

00:17:36,970 --> 00:17:42,240
it into my local clone now that it's

00:17:39,220 --> 00:17:47,470
done i watch Q I forgot something nope

00:17:42,240 --> 00:17:50,410
so I can do x 80 x TG app run or KD

00:17:47,470 --> 00:17:58,380
marble i will move my mouse here so it

00:17:50,410 --> 00:17:58,380
appears here and after some time

00:18:01,460 --> 00:18:04,820
yeah yeah

00:18:04,990 --> 00:18:12,970
we get marble so this is actual running

00:18:07,960 --> 00:18:14,920
the sandbox I allow these access to DRI

00:18:12,970 --> 00:18:17,350
so this is accelerated ifs using

00:18:14,920 --> 00:18:19,960
acceleration you can tell by its running

00:18:17,350 --> 00:18:21,670
in in sandbox because it's using the

00:18:19,960 --> 00:18:25,870
default configuration full of looks and

00:18:21,670 --> 00:18:33,940
everything I can do open I cannot talk

00:18:25,870 --> 00:18:36,070
two key areas I think yeah boo so yeah

00:18:33,940 --> 00:18:37,840
so yeah this is so basically now the

00:18:36,070 --> 00:18:42,400
application is running on its own in a

00:18:37,840 --> 00:18:53,610
sandbox how to prove it well again sorry

00:18:42,400 --> 00:18:53,610
I can do XD she app Ram xtg up run

00:18:53,880 --> 00:19:02,590
command bash for or KD marble which

00:19:00,940 --> 00:19:04,330
basically set up sets up the same Sun

00:19:02,590 --> 00:19:06,610
the sand box and everything we just want

00:19:04,330 --> 00:19:11,020
/ instead of marble so now I'm in the in

00:19:06,610 --> 00:19:12,429
the sandbox I can look at the root this

00:19:11,020 --> 00:19:14,860
is the rid of the sandbox you can see

00:19:12,429 --> 00:19:17,920
the / app and there are lots of stuff

00:19:14,860 --> 00:19:20,110
missing right leave the sandbox and show

00:19:17,920 --> 00:19:22,510
you my real root you can see there are

00:19:20,110 --> 00:19:23,679
more folders so this application

00:19:22,510 --> 00:19:26,200
actually doesn't need access to the

00:19:23,679 --> 00:19:29,650
entire file system so I only said needs

00:19:26,200 --> 00:19:34,390
access to home so if I go back to the

00:19:29,650 --> 00:19:38,080
sandbox and actually go home it doesn't

00:19:34,390 --> 00:19:44,610
show anything why maybe the metal it are

00:19:38,080 --> 00:19:44,610
different so we can check us out here

00:19:46,809 --> 00:19:55,579
let me check it oh doesn't matter let's

00:19:51,949 --> 00:19:59,929
not waste time so this is how it kind of

00:19:55,579 --> 00:20:05,149
sort of works sometimes can I get the

00:19:59,929 --> 00:20:06,979
presentation back please yeah so this is

00:20:05,149 --> 00:20:11,299
quite it's quite easy a signal to to

00:20:06,979 --> 00:20:13,099
control everything and just in a perfect

00:20:11,299 --> 00:20:15,049
world and in a future hopefully we will

00:20:13,099 --> 00:20:16,879
optimize this our integrated with some

00:20:15,049 --> 00:20:19,129
package manager or whatever so people

00:20:16,879 --> 00:20:20,929
don't actually have to use learn how to

00:20:19,129 --> 00:20:22,879
use expedia they will not need to

00:20:20,929 --> 00:20:24,440
actually know that you need this kind of

00:20:22,879 --> 00:20:25,969
run time for this application right now

00:20:24,440 --> 00:20:27,440
this is not soft if you install

00:20:25,969 --> 00:20:29,599
application but don't have the runtime

00:20:27,440 --> 00:20:32,119
is required it just stays back and quit

00:20:29,599 --> 00:20:35,089
so but this or can be ultimately the

00:20:32,119 --> 00:20:37,759
metadata are available so we can just

00:20:35,089 --> 00:20:41,839
browse the day can be indexed drops and

00:20:37,759 --> 00:20:43,489
whatnot now i should i guess i should

00:20:41,839 --> 00:20:44,749
say well this is actually good for since

00:20:43,489 --> 00:20:47,839
i've been talking about it for like 20

00:20:44,749 --> 00:20:51,440
minutes out and i don't see my notes

00:20:47,839 --> 00:20:53,329
again here so obviously you can secure a

00:20:51,440 --> 00:20:55,389
third-party application nobody trusts

00:20:53,329 --> 00:20:57,139
flash are you don't try to justify

00:20:55,389 --> 00:20:59,089
because you don't see what the

00:20:57,139 --> 00:21:01,179
applications do inside so putting them

00:20:59,089 --> 00:21:04,489
into the sandbox is pretty cool right

00:21:01,179 --> 00:21:06,319
Francis for Spotify Spotify doesn't need

00:21:04,489 --> 00:21:08,899
to see your route doesn't need to see

00:21:06,319 --> 00:21:11,149
your home so all your files are safe but

00:21:08,899 --> 00:21:12,559
because we persist the directories and

00:21:11,149 --> 00:21:14,329
the country directors of the application

00:21:12,559 --> 00:21:16,039
it will still remember all the settings

00:21:14,329 --> 00:21:18,589
you said there it will it still

00:21:16,039 --> 00:21:21,739
remembers first of all tracks cached

00:21:18,589 --> 00:21:24,289
locally so for you as a user it won't be

00:21:21,739 --> 00:21:25,940
any difference from the user experience

00:21:24,289 --> 00:21:28,249
both of you but from the security point

00:21:25,940 --> 00:21:32,179
of view it's much much better than just

00:21:28,249 --> 00:21:33,619
running it on your computer the second

00:21:32,179 --> 00:21:35,659
point is reproducible environments for

00:21:33,619 --> 00:21:37,849
the desk obviously that's something you

00:21:35,659 --> 00:21:39,709
want if user it works you crash in a few

00:21:37,849 --> 00:21:40,210
memories then you need to revive okay

00:21:39,709 --> 00:21:42,250
good

00:21:40,210 --> 00:21:44,050
virgins all these packages using stuff

00:21:42,250 --> 00:21:48,100
they don't reply and then you just cause

00:21:44,050 --> 00:21:50,830
it right so with run times you basically

00:21:48,100 --> 00:21:52,480
you can either see in the back trace or

00:21:50,830 --> 00:21:56,710
you can just ask okay tell me what's the

00:21:52,480 --> 00:21:58,150
what version of this application just

00:21:56,710 --> 00:21:59,500
what version of the application you were

00:21:58,150 --> 00:22:01,720
running because from there you can check

00:21:59,500 --> 00:22:03,640
what run time it had and then you can

00:22:01,720 --> 00:22:06,280
Khloe locally get into the set books

00:22:03,640 --> 00:22:08,020
like I did just use SDK instead of

00:22:06,280 --> 00:22:10,210
platform some of the be there and

00:22:08,020 --> 00:22:12,880
debug supports and you can reproduce the

00:22:10,210 --> 00:22:15,040
crash on the exactly same environment

00:22:12,880 --> 00:22:16,870
that the user is right because the

00:22:15,040 --> 00:22:19,450
binary environment is completely safe is

00:22:16,870 --> 00:22:20,860
exactly the same so this is something

00:22:19,450 --> 00:22:24,520
that's forward if all of us would be

00:22:20,860 --> 00:22:26,050
really really really useful the third

00:22:24,520 --> 00:22:29,860
point our cups with user upstream is

00:22:26,050 --> 00:22:32,110
that we can get rid of the nitrous

00:22:29,860 --> 00:22:34,990
people and basically up streams can

00:22:32,110 --> 00:22:37,840
provide their binary binaries of their

00:22:34,990 --> 00:22:43,570
applications and then they can ship them

00:22:37,840 --> 00:22:45,190
down into users so and I like big need

00:22:43,570 --> 00:22:46,750
for package today basically is just

00:22:45,190 --> 00:22:48,160
because each distribution is different

00:22:46,750 --> 00:22:51,640
so you need to compile it again and

00:22:48,160 --> 00:22:55,210
again for distribution since the

00:22:51,640 --> 00:22:56,890
runtimes are are the same everywhere you

00:22:55,210 --> 00:22:58,660
don't have the problem so you can run

00:22:56,890 --> 00:23:00,670
the same binary that's ops three builds

00:22:58,660 --> 00:23:07,120
against the one time on a single

00:23:00,670 --> 00:23:08,560
computer sorry which also basically is

00:23:07,120 --> 00:23:13,420
the fourth point this division a /

00:23:08,560 --> 00:23:15,870
device now what are benefits for oops oh

00:23:13,420 --> 00:23:15,870
oh

00:23:16,240 --> 00:23:23,770
oh okay I don't know so what are

00:23:20,380 --> 00:23:25,450
benefits to KD e so meta reduction of

00:23:23,770 --> 00:23:27,280
rebels by third-party developers right

00:23:25,450 --> 00:23:29,530
now frame instead of a monthly releases

00:23:27,280 --> 00:23:30,670
right so the enterprise people i don't

00:23:29,530 --> 00:23:32,290
know they say like oh this has

00:23:30,670 --> 00:23:33,850
master-release this is not definitely at

00:23:32,290 --> 00:23:35,080
the price ready right if it's rental

00:23:33,850 --> 00:23:38,290
price ready it didn't have release for

00:23:35,080 --> 00:23:40,540
past couple years so but if you give

00:23:38,290 --> 00:23:41,590
them run time where you said where you

00:23:40,540 --> 00:23:44,350
say well you can develop your

00:23:41,590 --> 00:23:46,210
application against frameworks 5.9 and

00:23:44,350 --> 00:23:48,760
then you can get it everywhere on every

00:23:46,210 --> 00:23:50,500
system and then they can do it they

00:23:48,760 --> 00:23:52,090
don't need to care it well if you have

00:23:50,500 --> 00:23:53,380
your proper application it will stop

00:23:52,090 --> 00:23:55,720
working out today update two frameworks

00:23:53,380 --> 00:23:57,250
five-point damn right you can set of

00:23:55,720 --> 00:23:59,020
that not the problem you can just say

00:23:57,250 --> 00:24:02,260
you depend on fred on runtime with kids

00:23:59,020 --> 00:24:05,890
frameworks 59 and you're helping under

00:24:02,260 --> 00:24:07,330
the end of the world you just need

00:24:05,890 --> 00:24:09,960
someone to you know back for the

00:24:07,330 --> 00:24:13,420
security fixes but that's easy that's

00:24:09,960 --> 00:24:15,070
really saying the martin for users and

00:24:13,420 --> 00:24:16,929
developers or imagine that it's easier

00:24:15,070 --> 00:24:22,090
to reverse bucks that's something we

00:24:16,929 --> 00:24:26,290
would really like to see okay right for

00:24:22,090 --> 00:24:28,780
four houses KD they're all pro bush is

00:24:26,290 --> 00:24:32,170
affixed to get triggers the CI built we

00:24:28,780 --> 00:24:34,330
already have that because uncover this

00:24:32,170 --> 00:24:36,309
guy's oh it could just also build a

00:24:34,330 --> 00:24:38,080
bundle right oh there's not snapshot and

00:24:36,309 --> 00:24:40,090
it will publish it to some repository

00:24:38,080 --> 00:24:43,270
the user could just media to pull it and

00:24:40,090 --> 00:24:45,130
test but buck is fixed so and we don't

00:24:43,270 --> 00:24:46,690
have to wait for distributions to maybe

00:24:45,130 --> 00:24:48,550
pick up the patch that particular

00:24:46,690 --> 00:24:50,140
version they don't don't have or maybe

00:24:48,550 --> 00:24:51,370
update the obligation to the next

00:24:50,140 --> 00:24:56,260
release which you have an incall for

00:24:51,370 --> 00:24:58,390
your time well and finally why they're

00:24:56,260 --> 00:24:59,950
better distinct right now Katie relies

00:24:58,390 --> 00:25:02,110
on a couple major distributions to

00:24:59,950 --> 00:25:04,600
actually have the manpower to package

00:25:02,110 --> 00:25:06,370
better releases and then we rely on

00:25:04,600 --> 00:25:08,200
couple users being actually willing to

00:25:06,370 --> 00:25:11,140
update the advanced system or the nth

00:25:08,200 --> 00:25:12,970
rke to this battle release and that

00:25:11,140 --> 00:25:14,920
means we don't that don't get as much

00:25:12,970 --> 00:25:18,940
better release for a better testing as

00:25:14,920 --> 00:25:21,700
we would maybe want to have so if Katie

00:25:18,940 --> 00:25:24,399
just publishes a little better batteries

00:25:21,700 --> 00:25:28,120
bindable application bundles of better

00:25:24,399 --> 00:25:31,960
versions of Katie stagnant then people

00:25:28,120 --> 00:25:33,610
can easily just get Kate the better

00:25:31,960 --> 00:25:36,039
version of cake and test it and see if

00:25:33,610 --> 00:25:38,649
the embargo sticks that report or

00:25:36,039 --> 00:25:39,940
regressions they found and they don't

00:25:38,649 --> 00:25:41,230
need to update the rest they don't need

00:25:39,940 --> 00:25:42,549
to update came out because it had

00:25:41,230 --> 00:25:45,309
penalty for it work but they can't

00:25:42,549 --> 00:25:46,750
afford updated k if they found out that

00:25:45,309 --> 00:25:48,159
gate crashes for them all the time well

00:25:46,750 --> 00:25:49,419
they just revert back to the other

00:25:48,159 --> 00:25:51,789
version without touching the rest of the

00:25:49,419 --> 00:25:54,519
system so I think this is really useful

00:25:51,789 --> 00:25:56,169
we should totally have it I just lot of

00:25:54,519 --> 00:25:59,169
work to do it right now there are many

00:25:56,169 --> 00:26:01,480
problems skd I don't really have time to

00:25:59,169 --> 00:26:05,260
go all into the details how we do it on

00:26:01,480 --> 00:26:08,080
the lower levels that's why I have both

00:26:05,260 --> 00:26:10,690
tomorrow Wednesday morning so if you

00:26:08,080 --> 00:26:12,429
want to look into all the hacks you need

00:26:10,690 --> 00:26:15,909
to have to make some KD applications

00:26:12,429 --> 00:26:17,309
work and it still work so to get up

00:26:15,909 --> 00:26:20,830
first that's clear is broken right now

00:26:17,309 --> 00:26:22,960
under stuff come I can also show you

00:26:20,830 --> 00:26:25,080
some intense stuff how actually creates

00:26:22,960 --> 00:26:29,909
and boxes and one types and applications

00:26:25,080 --> 00:26:32,230
if you want to know some how it works

00:26:29,909 --> 00:26:33,880
all the designs of what the plan to the

00:26:32,230 --> 00:26:36,279
future are there is a distillation of

00:26:33,880 --> 00:26:39,429
the wiki page we have a mailing list for

00:26:36,279 --> 00:26:41,409
the East eg AB to be a bus or IRC

00:26:39,429 --> 00:26:44,169
channel so you can talk to us there or

00:26:41,409 --> 00:26:49,289
you can mail me on my work or key map

00:26:44,169 --> 00:26:49,289
and that's all if you have any questions

00:27:05,510 --> 00:27:11,040
whether you agree the runtimes are never

00:27:08,160 --> 00:27:13,260
updated I mentioned that earlier so if a

00:27:11,040 --> 00:27:14,640
new version of raves of cute is released

00:27:13,260 --> 00:27:17,220
you create a new runtime with the

00:27:14,640 --> 00:27:18,960
diversion and then the application

00:27:17,220 --> 00:27:20,670
developer to decide whether he wants to

00:27:18,960 --> 00:27:22,770
use the new version of you and just

00:27:20,670 --> 00:27:24,510
update event updates the metadata of the

00:27:22,770 --> 00:27:29,640
application and release the new in

00:27:24,510 --> 00:27:32,640
version I every question what about the

00:27:29,640 --> 00:27:35,490
updates so if there is some are you know

00:27:32,640 --> 00:27:38,310
guests and you still continue to use and

00:27:35,490 --> 00:27:41,610
apply now that's the exception i

00:27:38,310 --> 00:27:44,010
mentioned that you can do you like you

00:27:41,610 --> 00:27:47,130
can change the necessary fixes you can

00:27:44,010 --> 00:27:48,900
update 1 times it's not impossible you

00:27:47,130 --> 00:27:51,210
just rebuild the right time push it into

00:27:48,900 --> 00:27:53,400
the OS repository that users need to be

00:27:51,210 --> 00:27:54,930
the pool right but the idea is that the

00:27:53,400 --> 00:27:56,970
major versions of the library's not

00:27:54,930 --> 00:27:58,740
change it you have heels five foot four

00:27:56,970 --> 00:28:00,390
point one one time and it will always

00:27:58,740 --> 00:28:03,000
cook then keep five foot four point one

00:28:00,390 --> 00:28:05,160
forever and you may do like minor

00:28:03,000 --> 00:28:11,730
updates like four separate it existed to

00:28:05,160 --> 00:28:14,730
the libraries but it's only do is the

00:28:11,730 --> 00:28:20,610
initial running to the same variety of a

00:28:14,730 --> 00:28:24,840
user yep and last question how do you

00:28:20,610 --> 00:28:27,929
how do you link and log problem creation

00:28:24,840 --> 00:28:32,759
asylum application I need not

00:28:27,929 --> 00:28:37,139
asian food access my own the same time

00:28:32,759 --> 00:28:40,230
tonight for example who is ability right

00:28:37,139 --> 00:28:43,049
means very long right we all had led

00:28:40,230 --> 00:28:46,619
right now but the planet I already wrote

00:28:43,049 --> 00:28:48,419
a sequel to the bus proxy so the place

00:28:46,619 --> 00:28:51,330
that they school without so for the

00:28:48,419 --> 00:28:53,309
first run it with out paying copies and

00:28:51,330 --> 00:28:55,889
configuration files from your drill hole

00:28:53,309 --> 00:28:58,649
into the Sanford home shows so Katie

00:28:55,889 --> 00:29:01,200
vocalist and this basic off it will be

00:28:58,649 --> 00:29:07,259
coming alone so that you can get the

00:29:01,200 --> 00:29:13,799
same looks and well here is action going

00:29:07,259 --> 00:29:15,840
forward by root user 0 because teaching

00:29:13,799 --> 00:29:18,749
app is running under your user you don't

00:29:15,840 --> 00:29:21,299
need you don't need root privileges when

00:29:18,749 --> 00:29:23,340
I this little bit for the most

00:29:21,299 --> 00:29:27,470
complicated part we just use some system

00:29:23,340 --> 00:29:30,149
d stuff because I'm scared of some

00:29:27,470 --> 00:29:34,070
complications with ana kasparian for

00:29:30,149 --> 00:29:39,149
that you know a group desert can access

00:29:34,070 --> 00:29:41,190
users eyes right buttons I don't know if

00:29:39,149 --> 00:29:42,929
this is what like enough of security

00:29:41,190 --> 00:29:45,350
problems or something that is TJ is not

00:29:42,929 --> 00:29:45,350
supposed to

00:29:54,170 --> 00:30:03,900
priorities my question is related to

00:29:58,350 --> 00:30:06,390
what if you had run one person what for

00:30:03,900 --> 00:30:08,370
example one person of K 2 119 in their

00:30:06,390 --> 00:30:11,040
communities you would like all your

00:30:08,370 --> 00:30:14,700
configs or your settings to be migrated

00:30:11,040 --> 00:30:16,770
to the moon runtime by document means a

00:30:14,700 --> 00:30:18,720
persistent storage somewhere which you

00:30:16,770 --> 00:30:21,750
would find from your actual home so that

00:30:18,720 --> 00:30:25,310
means you have to give it to edit a

00:30:21,750 --> 00:30:28,740
folder somewhere in Chrome OS server

00:30:25,310 --> 00:30:30,390
each it doesn't let refuse the real

00:30:28,740 --> 00:30:33,450
government of faith hope we always

00:30:30,390 --> 00:30:34,740
override the STG config directory which

00:30:33,450 --> 00:30:37,140
is 30 applications or configuration

00:30:34,740 --> 00:30:39,900
files and data and we point them to

00:30:37,140 --> 00:30:41,850
slash var slash on something and before

00:30:39,900 --> 00:30:43,530
the sandbox is destroyed me things they

00:30:41,850 --> 00:30:46,050
got and persist them on the actual home

00:30:43,530 --> 00:30:49,470
so you actually have your configuration

00:30:46,050 --> 00:30:53,280
persisted and if you if you just update

00:30:49,470 --> 00:30:56,040
our Justice of this OS three days kids

00:30:53,280 --> 00:31:01,430
pool basically on the application bottle

00:30:56,040 --> 00:31:05,640
so you get new a version then this also

00:31:01,430 --> 00:31:07,790
if you update the current applications

00:31:05,640 --> 00:31:10,950
process we will need one branch we keep

00:31:07,790 --> 00:31:12,660
master so I keep updating that new

00:31:10,950 --> 00:31:14,220
versions and whatnot so then you

00:31:12,660 --> 00:31:16,860
wouldn't get that you would just get a

00:31:14,220 --> 00:31:18,060
new version and why the same basically

00:31:16,860 --> 00:31:19,740
same sandbox and run times and

00:31:18,060 --> 00:31:21,090
configuration everything if you would

00:31:19,740 --> 00:31:22,740
have a new version of the application a

00:31:21,090 --> 00:31:24,630
different branch by meeting with

00:31:22,740 --> 00:31:26,400
runtimes that this is a problem you

00:31:24,630 --> 00:31:28,890
don't have makeup migration software

00:31:26,400 --> 00:31:30,690
they said that we would need to save the

00:31:28,890 --> 00:31:32,430
data from the old version run a

00:31:30,690 --> 00:31:34,770
configuration directory and compete to

00:31:32,430 --> 00:31:36,800
anymore lots of death but we can talk

00:31:34,770 --> 00:31:36,800
further

00:31:38,250 --> 00:31:43,419
but you must immerse involved this ever

00:31:40,990 --> 00:31:49,090
yes would you wanna see the look on your

00:31:43,419 --> 00:31:51,490
now Polly going to do this it's really

00:31:49,090 --> 00:31:57,309
just the same time access device notes

00:31:51,490 --> 00:31:59,409
and also some justice right really is it

00:31:57,309 --> 00:32:04,260
more so when you the vendor of the

00:31:59,409 --> 00:32:07,600
internal you yeah for this we basically

00:32:04,260 --> 00:32:09,640
the one x can have extension points for

00:32:07,600 --> 00:32:12,010
Saddam takes then extension points for

00:32:09,640 --> 00:32:14,409
GL extension points for localization and

00:32:12,010 --> 00:32:18,250
if the application says that it needs

00:32:14,409 --> 00:32:22,659
the arrived then the ex DG app to actual

00:32:18,250 --> 00:32:24,340
amounts the from this library ddle the

00:32:22,659 --> 00:32:27,429
arai libraries work not from the whole

00:32:24,340 --> 00:32:30,429
system into the sandbox for people's

00:32:27,429 --> 00:32:32,620
rights they are complicated right now we

00:32:30,429 --> 00:32:34,899
want to use Katie votes right to control

00:32:32,620 --> 00:32:36,549
the stuff can talk to for now we have a

00:32:34,899 --> 00:32:39,029
very slow children team on that just

00:32:36,549 --> 00:32:39,029
proxies

00:32:40,800 --> 00:32:52,390
medications back yeah process how do we

00:32:47,710 --> 00:32:56,230
suggest new commissions well you didn't

00:32:52,390 --> 00:33:01,330
like the the Persians that the existent

00:32:56,230 --> 00:33:03,100
know yet or his poetry basically after

00:33:01,330 --> 00:33:06,730
each application bundle has a metadata

00:33:03,100 --> 00:33:10,740
file where you list a list of privileges

00:33:06,730 --> 00:33:13,180
it means which are defined by DX DT AB

00:33:10,740 --> 00:33:17,010
you talk to you have to talk to upstream

00:33:13,180 --> 00:33:17,010
to basically supporters if it's to get

00:33:19,830 --> 00:33:24,730
the ex DG have applicable to the

00:33:22,510 --> 00:33:28,300
developers right we need to add this

00:33:24,730 --> 00:33:30,130
movie need to add this new values into

00:33:28,300 --> 00:33:34,510
the obligations reagan parsed metadata

00:33:30,130 --> 00:33:41,730
and set up the needed stuff correctly in

00:33:34,510 --> 00:33:45,490
sandbox and talk to me or talk to us

00:33:41,730 --> 00:33:47,980
volley ever XD g dash at IRC channel we

00:33:45,490 --> 00:33:50,740
have XD g dash f at least three just of

00:33:47,980 --> 00:33:53,950
desktop work mailing list so talked was

00:33:50,740 --> 00:34:02,170
there or yeah or you can send mail to me

00:33:53,950 --> 00:34:05,890
or just talk to me here sorry yeah yes

00:34:02,170 --> 00:34:08,740
what about sharing and filezilla games

00:34:05,890 --> 00:34:11,409
use examples in everything you have to

00:34:08,740 --> 00:34:15,040
somehow coming games with programs like

00:34:11,409 --> 00:34:17,770
but others from create a to when you and

00:34:15,040 --> 00:34:20,470
so on well then you need to allow this

00:34:17,770 --> 00:34:22,690
application to principal prior to see

00:34:20,470 --> 00:34:24,879
your user hope do you host the whole

00:34:22,690 --> 00:34:27,399
from the host system so that it can

00:34:24,879 --> 00:34:30,280
drive through the other applications

00:34:27,399 --> 00:34:32,020
open spot basically we don't have proper

00:34:30,280 --> 00:34:33,879
file sharing between applications all

00:34:32,020 --> 00:34:37,919
this another thing that breaks katie

00:34:33,879 --> 00:34:41,409
right answer yeah hotel

00:34:37,919 --> 00:34:43,500
and if you very much participation thank

00:34:41,409 --> 00:34:43,500
you

00:34:53,629 --> 00:34:55,690

YouTube URL: https://www.youtube.com/watch?v=HrvVffreiz8


