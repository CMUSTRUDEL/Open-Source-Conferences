Title: Dan Leinir Turthra Jensen - Folding Your Applications - Akademy 2017
Publication date: 2017-11-20
Playlist: Akademy 2017
Description: 
	Have you got an application, or an idea for one, which you want to work well on more than one kind of device? In more than one form factor? Come and see how to use Kirigami and the guidelines it implements to create comfortable and effective user experiences, with tips and tricks from applications already using it.

Over the course of the last few years, and especially with the advent of powerful mobile devices of many sizes, convergence has become an much discussed topic. They employ various input methods, with the traditional mouse and keyboard, or with pure touch, or a combination of the options. They have a wide range of screen sizes, and distances of operation, from small and in your hand, to far away and on the wall.

Applications need to work across as many of these as possible, and so KDE has been working on a variety of frameworks to support the creation of applications with convergent user experiences. Most recently, this effort has brought about the creation of the Kirigami framework, which includes both a software stack, and a set of guidelines which shows you how to use the components.

We will show you techniques for implementing these experiences, and present some of the thoughts behind the designs. Examples will be presented, from applications both made by ourselves, and by others out in the wild, which show how the tools Kirigami gives you can be used most effectively. We hope to show you not only how to create convergent applications and why we think it is a good idea, but why we think you will want to start doing this with your own applications.

https://conf.kde.org/en/akademy2017/public/events/348
Captions: 
	00:00:08,320 --> 00:00:14,769
- yet another talk by really really cool

00:00:11,349 --> 00:00:17,349
people one is a little bit less cool but

00:00:14,769 --> 00:00:22,029
he's a really great guy Thomas and cool

00:00:17,349 --> 00:00:23,730
of me a bit more cool a really nice guy

00:00:22,029 --> 00:00:26,529
they're going to talk about kirigami

00:00:23,730 --> 00:00:32,259
with a really fancy title that they will

00:00:26,529 --> 00:00:34,420
pronounce right so and I am going to say

00:00:32,259 --> 00:00:34,870
a dirty word during this see if you can

00:00:34,420 --> 00:00:41,500
spot it

00:00:34,870 --> 00:00:43,840
Oh the topic of the talk is about

00:00:41,500 --> 00:00:45,700
folding your applications and the reason

00:00:43,840 --> 00:00:51,670
it is that is because we are talking

00:00:45,700 --> 00:00:58,510
about convergent applications no one's

00:00:51,670 --> 00:01:01,300
noticed ok so the first point is will ya

00:00:58,510 --> 00:01:03,699
quickly introduce ourselves very quickly

00:01:01,300 --> 00:01:06,280
as I'm as I understand it I'm done

00:01:03,699 --> 00:01:07,090
linear - or Jenson and I've been a

00:01:06,280 --> 00:01:11,229
member of KDE

00:01:07,090 --> 00:01:14,710
for many years and I'm a member of the

00:01:11,229 --> 00:01:16,680
Culebra and gluon teams currently and

00:01:14,710 --> 00:01:22,270
have been a member of many other teams

00:01:16,680 --> 00:01:25,290
before that as well sorry no the caligra

00:01:22,270 --> 00:01:29,890
and discover teams glue on his history

00:01:25,290 --> 00:01:33,720
and left over from a previous talk I'm

00:01:29,890 --> 00:01:38,640
also an employee of blue systems and

00:01:33,720 --> 00:01:38,640
normally don't look like a blue bird but

00:01:40,320 --> 00:01:49,180
yeah I'm Tomas yeah I've studied

00:01:46,600 --> 00:01:52,630
psychology focusing on human-computer

00:01:49,180 --> 00:01:56,619
interaction user experience and through

00:01:52,630 --> 00:02:00,310
that I've come to KDE in 2008 and have

00:01:56,619 --> 00:02:04,119
been doing mostly yeah visibility his

00:02:00,310 --> 00:02:08,920
experience things since then as part of

00:02:04,119 --> 00:02:12,420
the KD v DG the design group and since

00:02:08,920 --> 00:02:17,650
last year I'm also a member of the board

00:02:12,420 --> 00:02:21,090
I'm I'm not paid to work on KDE my day

00:02:17,650 --> 00:02:21,090
job is at Flair games

00:02:21,120 --> 00:02:32,320
where you get your help Chuck Norris

00:02:24,910 --> 00:02:36,250
bunch people I think right so yeah so

00:02:32,320 --> 00:02:38,350
first of all what what is Kagame thought

00:02:36,250 --> 00:02:40,330
probably already heard about it because

00:02:38,350 --> 00:02:44,770
quite a few talks have actually

00:02:40,330 --> 00:02:47,710
mentioned it it is a framework which

00:02:44,770 --> 00:02:51,280
yeah it is useful to create touch

00:02:47,710 --> 00:02:52,870
optimized applications but that doesn't

00:02:51,280 --> 00:02:56,410
mean that they're only for touch devices

00:02:52,870 --> 00:03:00,070
so as then already sets its for

00:02:56,410 --> 00:03:01,180
convergence so Kagame is your tool of

00:03:00,070 --> 00:03:03,190
choice if you want to create an

00:03:01,180 --> 00:03:05,350
application which runs both on

00:03:03,190 --> 00:03:08,650
traditional desktop computers with mouse

00:03:05,350 --> 00:03:14,260
and keyboard but also on ER touch

00:03:08,650 --> 00:03:16,300
devices mobile embedded whatever with

00:03:14,260 --> 00:03:22,180
essentially the same code base that's

00:03:16,300 --> 00:03:25,900
the the key part yeah and it is also a

00:03:22,180 --> 00:03:28,150
means to implement very specific human

00:03:25,900 --> 00:03:32,320
interface guidelines we often get asked

00:03:28,150 --> 00:03:35,380
why can't I create a an application

00:03:32,320 --> 00:03:38,350
following exactly the Android material

00:03:35,380 --> 00:03:41,650
design guidelines for example and then

00:03:38,350 --> 00:03:44,050
usually our answers two things one is

00:03:41,650 --> 00:03:46,000
well you can if you create an

00:03:44,050 --> 00:03:48,490
application that perfectly fits material

00:03:46,000 --> 00:03:50,440
design then you cannot really use the

00:03:48,490 --> 00:03:55,930
same code base to deploy the application

00:03:50,440 --> 00:03:57,610
on desktop Linux or on iOS or on any of

00:03:55,930 --> 00:04:00,250
the other systems because then they

00:03:57,610 --> 00:04:02,980
would feel alien there even more

00:04:00,250 --> 00:04:04,900
and would not be or you would have to

00:04:02,980 --> 00:04:05,470
create different UIs which would not be

00:04:04,900 --> 00:04:09,310
consistent

00:04:05,470 --> 00:04:13,470
whereas chiami we have our own human

00:04:09,310 --> 00:04:17,320
interface guidelines with some specific

00:04:13,470 --> 00:04:20,080
interaction design concepts which do

00:04:17,320 --> 00:04:23,290
diverge from what for example material

00:04:20,080 --> 00:04:25,810
design and iOS to but they also have a

00:04:23,290 --> 00:04:27,850
lot of baggage from time for example

00:04:25,810 --> 00:04:29,440
when phones were still smaller and you

00:04:27,850 --> 00:04:32,110
could still easily reach the whole

00:04:29,440 --> 00:04:33,780
screen with your thumb whereas

00:04:32,110 --> 00:04:36,240
now you have large phones where you

00:04:33,780 --> 00:04:39,250
where your eyes should be more

00:04:36,240 --> 00:04:45,360
bottom-heavy because that's what you can

00:04:39,250 --> 00:04:48,190
reach with your thumb yeah it is a

00:04:45,360 --> 00:04:49,870
supporting technology so what ok gum it

00:04:48,190 --> 00:04:56,140
does is offer you some building blocks

00:04:49,870 --> 00:04:58,840
for your application to ya have a to

00:04:56,140 --> 00:05:01,300
create a UI easily which is consistent

00:04:58,840 --> 00:05:05,680
with other gummy based applications and

00:05:01,300 --> 00:05:07,990
consistent across platforms so it is it

00:05:05,680 --> 00:05:09,520
was born out of plasma so it was

00:05:07,990 --> 00:05:12,880
originally created to have something

00:05:09,520 --> 00:05:15,310
especially for plasma mobile but it is

00:05:12,880 --> 00:05:17,830
not only plasma so the the same

00:05:15,310 --> 00:05:20,890
application can also run on for example

00:05:17,830 --> 00:05:23,140
Android on iOS and of course if you run

00:05:20,890 --> 00:05:26,320
it on a desktop computer it can also run

00:05:23,140 --> 00:05:33,220
on any other desktop environment can run

00:05:26,320 --> 00:05:35,770
on Windows it can run on Mac OS yep it

00:05:33,220 --> 00:05:37,840
was originally started as separate from

00:05:35,770 --> 00:05:41,260
KD frameworks for the simple reason that

00:05:37,840 --> 00:05:43,510
the cute version that Kagame needed was

00:05:41,260 --> 00:05:46,780
higher than the one that KD frameworks

00:05:43,510 --> 00:05:50,490
depended on at the time by now this gap

00:05:46,780 --> 00:05:51,820
has been closed and with KD frameworks

00:05:50,490 --> 00:05:54,550
5.37

00:05:51,820 --> 00:06:07,600
Kagame will be an official part of KD

00:05:54,550 --> 00:06:09,280
frameworks yeah next up so right so when

00:06:07,600 --> 00:06:12,160
you create a kirigami application you

00:06:09,280 --> 00:06:14,410
have two options the most important

00:06:12,160 --> 00:06:18,690
point here is that you have to have a

00:06:14,410 --> 00:06:22,060
container to host your application and

00:06:18,690 --> 00:06:26,460
for the longest time that was called

00:06:22,060 --> 00:06:29,800
application window which was basically a

00:06:26,460 --> 00:06:32,560
minor change on top of the queue quick

00:06:29,800 --> 00:06:35,260
controls to application window these

00:06:32,560 --> 00:06:37,060
days which will become apparent slightly

00:06:35,260 --> 00:06:40,710
later one that's important we also have

00:06:37,060 --> 00:06:44,740
a thing called an application item slide

00:06:40,710 --> 00:06:47,320
which simulates the application window

00:06:44,740 --> 00:06:49,960
API unfortunately we couldn't derive

00:06:47,320 --> 00:06:52,990
from it because that would make it a

00:06:49,960 --> 00:06:54,640
window and that would be bad because

00:06:52,990 --> 00:06:59,020
you'd end up posting a window inside a

00:06:54,640 --> 00:07:02,320
window and that's a bit ugly but what

00:06:59,020 --> 00:07:05,980
the application item slash window does

00:07:02,320 --> 00:07:10,480
is it implements some of the core user

00:07:05,980 --> 00:07:14,880
interface elements which we will show

00:07:10,480 --> 00:07:19,960
you slightly later it it adds properties

00:07:14,880 --> 00:07:23,310
for inserting the user interface

00:07:19,960 --> 00:07:26,200
elements that the pig defines as

00:07:23,310 --> 00:07:28,330
properties on on this so that it is very

00:07:26,200 --> 00:07:30,130
straight forward to to construct the

00:07:28,330 --> 00:07:33,640
application without necessarily having

00:07:30,130 --> 00:07:37,870
to specify what edge something has to

00:07:33,640 --> 00:07:39,820
sit on or whatever it also provides a

00:07:37,870 --> 00:07:42,190
very convenient method for showing

00:07:39,820 --> 00:07:44,770
passive notifications the little toast

00:07:42,190 --> 00:07:48,250
things that you see on Android and iOS

00:07:44,770 --> 00:07:49,900
and so on also recently on on Barry's

00:07:48,250 --> 00:07:54,760
other desktop applications passive

00:07:49,900 --> 00:07:58,150
notifications which don't really have

00:07:54,760 --> 00:08:03,340
any kind of interactivity with a small

00:07:58,150 --> 00:08:06,070
caveat but the purpose of them basically

00:08:03,340 --> 00:08:07,840
is do not do anything other than give

00:08:06,070 --> 00:08:11,850
you information you're not supposed to

00:08:07,840 --> 00:08:14,650
do anything with them and so the

00:08:11,850 --> 00:08:20,230
organization of an application in Kagami

00:08:14,650 --> 00:08:25,360
is is conceived as a scrollable row of

00:08:20,230 --> 00:08:29,890
pages and pages are what we'll mention

00:08:25,360 --> 00:08:33,240
next active yeah and as already

00:08:29,890 --> 00:08:38,470
mentioned typically application is

00:08:33,240 --> 00:08:40,979
divided into pages usually on on mobile

00:08:38,470 --> 00:08:44,740
you only see one one page at a time

00:08:40,979 --> 00:08:47,380
whereas on a if you scale up the same

00:08:44,740 --> 00:08:51,310
application to a desktop computer you

00:08:47,380 --> 00:08:52,820
may very well see multiple pages in the

00:08:51,310 --> 00:08:58,040
form of columns in

00:08:52,820 --> 00:09:00,050
you I yeah this if you use the the page

00:08:58,040 --> 00:09:02,000
class than you already get other

00:09:00,050 --> 00:09:06,440
standard behavior that the human

00:09:02,000 --> 00:09:08,990
interface guidelines describe and one

00:09:06,440 --> 00:09:12,650
thing that yeah makes it makes it easy

00:09:08,990 --> 00:09:15,320
is that you have actions properties how

00:09:12,650 --> 00:09:19,910
they are going to be visualized we will

00:09:15,320 --> 00:09:22,220
see later but you have a main action

00:09:19,910 --> 00:09:27,830
which will be the most prominent in your

00:09:22,220 --> 00:09:31,130
UI and so this is an a button which is

00:09:27,830 --> 00:09:35,210
which is on the the bottom center and it

00:09:31,130 --> 00:09:38,180
can also have a left and right wing or

00:09:35,210 --> 00:09:41,870
sub button because the secondary actions

00:09:38,180 --> 00:09:43,460
which you can also just define in in the

00:09:41,870 --> 00:09:46,970
page and they will automatically show up

00:09:43,460 --> 00:09:50,630
and be usable and it can also define

00:09:46,970 --> 00:09:53,120
contextual actions and these will then

00:09:50,630 --> 00:09:58,520
be shown in a contextual drawer which I

00:09:53,120 --> 00:10:01,310
will also get to then something that

00:09:58,520 --> 00:10:03,500
well you are likely to also use often

00:10:01,310 --> 00:10:07,820
this so-called scrollable page

00:10:03,500 --> 00:10:12,110
so yeah often it's it's lists of items

00:10:07,820 --> 00:10:14,750
or maybe just layouts which are too too

00:10:12,110 --> 00:10:18,050
long for one screen so you want them to

00:10:14,750 --> 00:10:21,950
be scrollable and kirigami also make it

00:10:18,050 --> 00:10:24,050
mates makes that pretty easy and yeah so

00:10:21,950 --> 00:10:26,390
you don't need to handle all the flicker

00:10:24,050 --> 00:10:29,540
bills yourself the scoring page will do

00:10:26,390 --> 00:10:32,900
that for you and it also has nice things

00:10:29,540 --> 00:10:35,840
such as if you have a list which you can

00:10:32,900 --> 00:10:39,230
refresh from some network source for

00:10:35,840 --> 00:10:41,330
example you can do the pull down so if

00:10:39,230 --> 00:10:42,380
you have just crawled to the first item

00:10:41,330 --> 00:10:44,210
of the list and then you pull down

00:10:42,380 --> 00:10:47,810
further then it automatically refreshes

00:10:44,210 --> 00:10:50,000
to give you newer items and also

00:10:47,810 --> 00:10:53,000
something that was an idea that was

00:10:50,000 --> 00:10:54,800
introduced in in iOS at the point when

00:10:53,000 --> 00:10:56,750
phones became too large to reach

00:10:54,800 --> 00:11:00,110
everything with your thumb is that you

00:10:56,750 --> 00:11:02,780
can pull down the top of your UI so

00:11:00,110 --> 00:11:03,690
that's everything that was at the top

00:11:02,780 --> 00:11:05,610
move

00:11:03,690 --> 00:11:12,870
towards the center and you can read it

00:11:05,610 --> 00:11:17,880
with your thumb and then we have the

00:11:12,870 --> 00:11:20,610
drawers which are basically items which

00:11:17,880 --> 00:11:27,260
sit on top of everything else they are a

00:11:20,610 --> 00:11:32,610
convenient way of giving you access to

00:11:27,260 --> 00:11:35,450
actions and supporting content to help

00:11:32,610 --> 00:11:40,140
with the things that are inside the

00:11:35,450 --> 00:11:42,780
inside the page so their base class is

00:11:40,140 --> 00:11:45,510
overlay draw which allows you to if you

00:11:42,780 --> 00:11:47,550
if you need something that is not

00:11:45,510 --> 00:11:53,280
supported by the core elements that

00:11:47,550 --> 00:11:55,770
we've got mentioned shortly you can

00:11:53,280 --> 00:12:02,400
create your own as well which is quite

00:11:55,770 --> 00:12:06,720
useful it will attach to any edge and it

00:12:02,400 --> 00:12:08,520
was originally created because cute

00:12:06,720 --> 00:12:11,280
quick controls one didn't have a draw

00:12:08,520 --> 00:12:13,700
but I'd not have not a drawer the way

00:12:11,280 --> 00:12:16,200
that we needed it but these days it is

00:12:13,700 --> 00:12:21,860
API compatible with the one that exists

00:12:16,200 --> 00:12:24,510
in QC two we also have a specific

00:12:21,860 --> 00:12:30,300
implementation of it which allows you to

00:12:24,510 --> 00:12:32,130
push it onto the screen this is less

00:12:30,300 --> 00:12:34,590
important on a desktop where you are

00:12:32,130 --> 00:12:36,390
working commonly in a window that

00:12:34,590 --> 00:12:38,100
doesn't sit against the screen edge but

00:12:36,390 --> 00:12:43,220
if you are working on a pure touch user

00:12:38,100 --> 00:12:47,060
interface say a phone or a tablet on

00:12:43,220 --> 00:12:49,980
incidentally any kind of view of

00:12:47,060 --> 00:12:52,470
platform not just Android and iOS this

00:12:49,980 --> 00:12:58,020
is also a problem on Ubuntu and on

00:12:52,470 --> 00:13:02,460
Windows you need to be able to swipe it

00:12:58,020 --> 00:13:06,089
onto the stage and so you can do that on

00:13:02,460 --> 00:13:08,580
some of these platforms the ones where

00:13:06,089 --> 00:13:10,890
those edges are not taken up by the

00:13:08,580 --> 00:13:13,080
system you can do that by simply swiping

00:13:10,890 --> 00:13:15,690
your finger along the edge on

00:13:13,080 --> 00:13:17,279
on the on the screen but we have

00:13:15,690 --> 00:13:19,950
specifically you're going to and Windows

00:13:17,279 --> 00:13:22,019
8 and 10 where that's not possible

00:13:19,950 --> 00:13:24,570
because that means on Windows 10 in

00:13:22,019 --> 00:13:27,660
particular that you suddenly are in a

00:13:24,570 --> 00:13:29,690
different application which then meant

00:13:27,660 --> 00:13:32,880
that we had to come up with a way of

00:13:29,690 --> 00:13:34,709
making making that easy to get to which

00:13:32,880 --> 00:13:36,329
means we've now got a hook sort of

00:13:34,709 --> 00:13:39,680
gesture where you push up from the

00:13:36,329 --> 00:13:43,170
bottom of the screen and then pull to

00:13:39,680 --> 00:13:54,029
either side to show the corresponding

00:13:43,170 --> 00:13:56,970
drawer so by by defaults there are two

00:13:54,029 --> 00:14:00,180
drawers the global draw and the context

00:13:56,970 --> 00:14:02,279
or the the global drawer sort of the the

00:14:00,180 --> 00:14:06,450
main menu of the of the application it

00:14:02,279 --> 00:14:08,040
is very similar to the the menu drawer

00:14:06,450 --> 00:14:12,950
that you have in many Android

00:14:08,040 --> 00:14:15,720
applications and yeah it slides in from

00:14:12,950 --> 00:14:17,820
from the left so either by an financial

00:14:15,720 --> 00:14:20,750
swipe or there's also a little handle

00:14:17,820 --> 00:14:25,170
that you can as you can use to open it

00:14:20,750 --> 00:14:27,240
and yeah it has a big fancy title with

00:14:25,170 --> 00:14:30,450
where you can put in an image in the

00:14:27,240 --> 00:14:34,860
background to make it down look if nicer

00:14:30,450 --> 00:14:39,630
and it has a main menu which can also

00:14:34,860 --> 00:14:42,810
have multiple levels and then you can

00:14:39,630 --> 00:14:44,579
also put in additional controls as you

00:14:42,810 --> 00:14:47,940
can see here you can also put in

00:14:44,579 --> 00:14:50,070
checkboxes sliders whatever you want the

00:14:47,940 --> 00:14:53,279
the global draw is used for everything

00:14:50,070 --> 00:14:55,680
that is the same at any point in the

00:14:53,279 --> 00:14:58,050
application so that users know that

00:14:55,680 --> 00:14:59,459
whenever they open the global draw they

00:14:58,050 --> 00:15:01,500
know what's going to be in there they

00:14:59,459 --> 00:15:04,199
know what they can do with it

00:15:01,500 --> 00:15:06,839
in contrast the context drawer as the

00:15:04,199 --> 00:15:10,170
name suggests is dependent on your

00:15:06,839 --> 00:15:12,690
current context so for example it can

00:15:10,170 --> 00:15:15,060
have controls that apply to the current

00:15:12,690 --> 00:15:18,029
element that you have selected in the

00:15:15,060 --> 00:15:19,350
main view or it can just change

00:15:18,029 --> 00:15:22,680
depending on where

00:15:19,350 --> 00:15:24,690
pyaare for example if you have a

00:15:22,680 --> 00:15:27,300
document viewing application and you

00:15:24,690 --> 00:15:30,930
have controls that depend on what kind

00:15:27,300 --> 00:15:35,550
of document is currently open then these

00:15:30,930 --> 00:15:38,580
will be shown in the context drawer yeah

00:15:35,550 --> 00:15:40,950
and as you can see it's also the

00:15:38,580 --> 00:15:42,840
elements are aligned to the bottom so

00:15:40,950 --> 00:15:47,060
that you can easily reach them with your

00:15:42,840 --> 00:15:47,060
thumb when using it with just one hand

00:15:48,500 --> 00:15:54,140
yeah but then there are also custom

00:15:52,440 --> 00:15:56,670
drawers as already mentioned so you can

00:15:54,140 --> 00:15:58,800
you are not restricted to these main

00:15:56,670 --> 00:16:00,090
drawers so the the global and context

00:15:58,800 --> 00:16:01,530
drawers are very easy to implement

00:16:00,090 --> 00:16:03,420
because they're pretty much already

00:16:01,530 --> 00:16:07,290
there you just have to fill them with

00:16:03,420 --> 00:16:12,620
things but you can also use additional

00:16:07,290 --> 00:16:15,480
drawers for any arbitrary use you have

00:16:12,620 --> 00:16:18,690
for example a a bottom drawer can be

00:16:15,480 --> 00:16:23,160
used as sort of a dialog which is in

00:16:18,690 --> 00:16:25,080
material design is called sheet so when

00:16:23,160 --> 00:16:28,140
you have something where you want to

00:16:25,080 --> 00:16:29,940
give users quickly some kind of some way

00:16:28,140 --> 00:16:32,670
to react to something you can use a

00:16:29,940 --> 00:16:39,090
drawer so it you don't have to replace

00:16:32,670 --> 00:16:44,850
the whole main screen and then there's

00:16:39,090 --> 00:16:47,760
the overlay sheet which yeah it's better

00:16:44,850 --> 00:16:50,880
suited for when you have larger content

00:16:47,760 --> 00:16:53,310
so the the big advantage of that is that

00:16:50,880 --> 00:16:56,550
you can stroll even within the sheet so

00:16:53,310 --> 00:17:00,360
one sheet can be larger than the then

00:16:56,550 --> 00:17:03,240
the screen height which means yeah you

00:17:00,360 --> 00:17:04,950
can you can show additional content on

00:17:03,240 --> 00:17:07,290
top of your main content but people can

00:17:04,950 --> 00:17:09,090
still scroll through it but then once

00:17:07,290 --> 00:17:11,250
they have reached either the top or the

00:17:09,090 --> 00:17:15,200
bottom and they I can just flick it away

00:17:11,250 --> 00:17:15,200
to close it again easily

00:17:16,340 --> 00:17:21,690
yeah then one thing that I've already

00:17:18,900 --> 00:17:24,300
talked about the primary action button

00:17:21,690 --> 00:17:27,470
so if you define a primary action in

00:17:24,300 --> 00:17:29,780
your new application window then

00:17:27,470 --> 00:17:33,380
it recreates a primary action button for

00:17:29,780 --> 00:17:37,059
you which sits at the bottom Center so

00:17:33,380 --> 00:17:40,700
again very easy to reach with your thumb

00:17:37,059 --> 00:17:43,309
and you can just you can just tap it and

00:17:40,700 --> 00:17:45,980
but it also serves as an additional

00:17:43,309 --> 00:17:48,320
handle for the drawers if you just press

00:17:45,980 --> 00:17:50,510
on the on the button but don't release

00:17:48,320 --> 00:17:53,030
but instead swipe left or right then you

00:17:50,510 --> 00:17:57,760
can also open the drawers with this

00:17:53,030 --> 00:18:04,270
which is just a nice additional gesture

00:17:57,760 --> 00:18:07,789
yeah but in for this is certainly mobile

00:18:04,270 --> 00:18:13,490
optimized but the same actions on on a

00:18:07,789 --> 00:18:15,500
desktop UI can go into a toolbar so let

00:18:13,490 --> 00:18:19,340
us again something where Kagami helps

00:18:15,500 --> 00:18:21,740
with the midi convergence that you don't

00:18:19,340 --> 00:18:23,059
have to necessarily manually define

00:18:21,740 --> 00:18:25,669
everything that is different between

00:18:23,059 --> 00:18:33,559
mobile and desktop the framework can do

00:18:25,669 --> 00:18:37,730
that for you yeah another neat thing is

00:18:33,559 --> 00:18:39,830
the the so called swipe list item so

00:18:37,730 --> 00:18:42,230
this is something where you have a list

00:18:39,830 --> 00:18:45,559
with contextual actions to to the

00:18:42,230 --> 00:18:47,960
specific list items there's a one way to

00:18:45,559 --> 00:18:50,120
do that to implement that is using the

00:18:47,960 --> 00:18:51,799
context raw but if you often have

00:18:50,120 --> 00:18:54,950
something that you want to do quickly

00:18:51,799 --> 00:18:57,530
with the list item then a better way to

00:18:54,950 --> 00:18:59,600
do this is that you have a little handle

00:18:57,530 --> 00:19:03,770
on the list item which you can just

00:18:59,600 --> 00:19:06,049
swipe away to reveal controls beneath it

00:19:03,770 --> 00:19:08,809
yeah which gives you a very very easy

00:19:06,049 --> 00:19:12,799
way to quickly do things for example if

00:19:08,809 --> 00:19:14,830
you have let's say a list of items and

00:19:12,799 --> 00:19:17,840
you have things like delete the item or

00:19:14,830 --> 00:19:19,640
if you want to if you have a list of

00:19:17,840 --> 00:19:21,740
emails then you can quickly reply

00:19:19,640 --> 00:19:24,100
without having to open the full email

00:19:21,740 --> 00:19:24,100
first

00:19:28,250 --> 00:19:36,290
the the application header so this is

00:19:31,640 --> 00:19:39,770
the title of the of the page but it also

00:19:36,290 --> 00:19:42,800
doubles as a breadcrumb because as we've

00:19:39,770 --> 00:19:47,060
already said the typical thing that you

00:19:42,800 --> 00:19:49,070
do in Kagame is using pages and as you

00:19:47,060 --> 00:19:52,400
navigate through the pages the

00:19:49,070 --> 00:19:54,680
application header creates a yeah a

00:19:52,400 --> 00:19:57,950
breadcrumb which is interactive so you

00:19:54,680 --> 00:20:01,400
can easily go back to any previous page

00:19:57,950 --> 00:20:12,650
by just tapping on it in the in the

00:20:01,400 --> 00:20:14,990
header so there are this obviously is

00:20:12,650 --> 00:20:16,430
not everything you do this obviously is

00:20:14,990 --> 00:20:19,820
not everything that exists I'm going to

00:20:16,430 --> 00:20:24,710
rush through this for a bit there is

00:20:19,820 --> 00:20:26,750
more stuff in kirigami we have a a class

00:20:24,710 --> 00:20:31,580
called an action which is kind of

00:20:26,750 --> 00:20:35,480
similar to your Q action but which can

00:20:31,580 --> 00:20:40,190
be used more more pleasantly in acute

00:20:35,480 --> 00:20:42,530
quick we have list items which are not

00:20:40,190 --> 00:20:44,770
the swipe list item so if you need

00:20:42,530 --> 00:20:48,590
something which is just a list item

00:20:44,770 --> 00:20:51,020
you've got access to that as well the

00:20:48,590 --> 00:20:55,030
item view header which I will show you

00:20:51,020 --> 00:20:58,400
momentarily which makes things pretty

00:20:55,030 --> 00:21:00,980
and we've got a header and a label a

00:20:58,400 --> 00:21:05,420
heading and a label which are a semantic

00:21:00,980 --> 00:21:11,240
markup for text just pure text we have

00:21:05,420 --> 00:21:17,720
an icon which basically emulates the the

00:21:11,240 --> 00:21:23,530
Qi can loading system on without using a

00:21:17,720 --> 00:21:25,610
cue icon loader and we have the toolbar

00:21:23,530 --> 00:21:27,260
application header which is the thing

00:21:25,610 --> 00:21:29,540
you saw just before which basically

00:21:27,260 --> 00:21:31,820
means even if you are not on a mobile

00:21:29,540 --> 00:21:34,150
you even if you are on a mobile you can

00:21:31,820 --> 00:21:37,580
still use the toolbar if you

00:21:34,150 --> 00:21:39,680
particularly feel the need to do so so

00:21:37,580 --> 00:21:43,660
it's the thing that you can choose

00:21:39,680 --> 00:21:46,940
- do we suggest you don't but you can

00:21:43,660 --> 00:21:51,290
and then there are a few applications

00:21:46,940 --> 00:21:54,100
which uses kirigami they're one of the

00:21:51,290 --> 00:21:57,850
the first examples that we had was

00:21:54,100 --> 00:22:00,950
subsurface mobile our subsurface is a

00:21:57,850 --> 00:22:07,130
dive lock application which was started

00:22:00,950 --> 00:22:08,540
by nearest robots and the condo and yeah

00:22:07,130 --> 00:22:11,350
they wanted to create a mobile

00:22:08,540 --> 00:22:14,420
application that just recently switched

00:22:11,350 --> 00:22:16,940
the desktop application from DGK to cute

00:22:14,420 --> 00:22:20,270
so of course now they didn't want to

00:22:16,940 --> 00:22:23,600
learn yet another technology they wanted

00:22:20,270 --> 00:22:26,570
to yep she's cute there as well and then

00:22:23,600 --> 00:22:28,610
we told them hey we we have their

00:22:26,570 --> 00:22:30,140
currently creating that framework it

00:22:28,610 --> 00:22:32,210
could be useful for you because it will

00:22:30,140 --> 00:22:36,040
make things a lot easier for you and

00:22:32,210 --> 00:22:38,330
since then there has been a quite good

00:22:36,040 --> 00:22:40,280
collaboration with with the team they

00:22:38,330 --> 00:22:42,500
have given us a lot of input we have

00:22:40,280 --> 00:22:45,590
helped them they have given us ideas for

00:22:42,500 --> 00:22:48,800
new features and yeah both have

00:22:45,590 --> 00:22:50,480
benefited a lot from this he's always

00:22:48,800 --> 00:22:53,870
nice to have external customers we did

00:22:50,480 --> 00:22:57,830
working on a product right here's one of

00:22:53,870 --> 00:23:01,750
our own and it shows you the ListView

00:22:57,830 --> 00:23:04,940
header which makes things pretty I

00:23:01,750 --> 00:23:06,710
realize I just forgot to scroll one of

00:23:04,940 --> 00:23:08,030
those screenshots because what it

00:23:06,710 --> 00:23:10,250
actually does is when you start

00:23:08,030 --> 00:23:12,860
scrolling the page it will not be that

00:23:10,250 --> 00:23:15,050
big which is useful you will have run

00:23:12,860 --> 00:23:17,060
into this on Android and iOS in various

00:23:15,050 --> 00:23:19,670
places so you start scrolling list and

00:23:17,060 --> 00:23:21,460
the header stays visible but becomes

00:23:19,670 --> 00:23:25,700
really really small so it's not in a way

00:23:21,460 --> 00:23:28,070
and this is obviously discover you've

00:23:25,700 --> 00:23:31,130
probably run into that one at some point

00:23:28,070 --> 00:23:34,840
this is peruse somewhat smaller projects

00:23:31,130 --> 00:23:37,960
which is looks a little silly right now

00:23:34,840 --> 00:23:42,380
because it is in the process of being

00:23:37,960 --> 00:23:44,900
remade somewhat but it is a an

00:23:42,380 --> 00:23:50,290
application which aims to fully

00:23:44,900 --> 00:23:52,270
implement kirigami as a hig describes it

00:23:50,290 --> 00:23:57,460
and

00:23:52,270 --> 00:23:59,750
function in on both mobile and desktop

00:23:57,460 --> 00:24:04,480
with as few changes is absolutely

00:23:59,750 --> 00:24:08,120
possible for reading your comics and

00:24:04,480 --> 00:24:10,600
then we have the very early stages of

00:24:08,120 --> 00:24:14,890
Cali radium and i2 which was the reason

00:24:10,600 --> 00:24:19,010
for the creation of the application item

00:24:14,890 --> 00:24:24,710
because as much as this just looks like

00:24:19,010 --> 00:24:27,890
a straightforward kirigami application

00:24:24,710 --> 00:24:32,690
there what it actually is is it's sat

00:24:27,890 --> 00:24:34,400
inside a inside another main window

00:24:32,690 --> 00:24:40,100
which will switch between a qwidget

00:24:34,400 --> 00:24:45,680
based UI and a kirigami you a quick

00:24:40,100 --> 00:24:47,930
based UI which is the Gemini thing if

00:24:45,680 --> 00:24:49,250
you've spoken with me for the last

00:24:47,930 --> 00:24:50,900
couple of years you will have heard me

00:24:49,250 --> 00:24:54,380
talk about this at length so I'll not do

00:24:50,900 --> 00:24:57,890
that here there are other applications

00:24:54,380 --> 00:25:00,110
out there that are not ours purely or

00:24:57,890 --> 00:25:04,460
some which are really hours which is

00:25:00,110 --> 00:25:06,440
climb grade which is Marcos oh you will

00:25:04,460 --> 00:25:13,850
notice an over weight of extreme sports

00:25:06,440 --> 00:25:16,430
here we have Coco which is an image

00:25:13,850 --> 00:25:21,080
viewer project which has a Summer of

00:25:16,430 --> 00:25:23,780
Code project to port the UI to kirigami

00:25:21,080 --> 00:25:26,840
it was originally written back before

00:25:23,780 --> 00:25:31,190
kirigami was a thing and we have rucola

00:25:26,840 --> 00:25:35,720
which i learned here is he's also

00:25:31,190 --> 00:25:37,310
getting a kirigami UI and of course all

00:25:35,720 --> 00:25:41,330
of the projects that you guys are

00:25:37,310 --> 00:25:45,520
working on so please come talk to us

00:25:41,330 --> 00:25:49,090
which is probably not now I understand

00:25:45,520 --> 00:25:49,090
but yes

00:25:53,250 --> 00:26:04,890
so let's have it at most two questions

00:25:56,520 --> 00:26:07,740
and let Kevin prepared I have sort of a

00:26:04,890 --> 00:26:11,490
really nerdy question but it's heart um

00:26:07,740 --> 00:26:14,430
what's the ratio of qml code to C++ code

00:26:11,490 --> 00:26:17,520
in the implementation of kirigami there

00:26:14,430 --> 00:26:20,490
is very little C class plus code the

00:26:17,520 --> 00:26:25,710
icon thing I guess yes the desktop icon

00:26:20,490 --> 00:26:28,500
thing is pure pure cute code as a pure

00:26:25,710 --> 00:26:32,520
sorry it's all code pure nine plus plus

00:26:28,500 --> 00:26:36,810
code because we needed that to do it in

00:26:32,520 --> 00:26:39,510
any way efficiently there is a non C++

00:26:36,810 --> 00:26:42,260
implementation of it for I think it was

00:26:39,510 --> 00:26:46,590
originally written because of subsurface

00:26:42,260 --> 00:26:49,440
meeting it but it's usable in any

00:26:46,590 --> 00:26:52,500
application so if you don't want the C++

00:26:49,440 --> 00:26:56,010
or if you don't want the all the ability

00:26:52,500 --> 00:26:58,050
is that the desktop icon implementation

00:26:56,010 --> 00:26:58,440
gives you if there is another option as

00:26:58,050 --> 00:27:01,530
well

00:26:58,440 --> 00:27:06,270
a very very lightweight thing which just

00:27:01,530 --> 00:27:08,490
loads icons out of a qrc so it lets a

00:27:06,270 --> 00:27:12,120
second question and base addendum blog

00:27:08,490 --> 00:27:13,830
from from the guys the kid guys last I

00:27:12,120 --> 00:27:16,170
think two weeks ago about the

00:27:13,830 --> 00:27:18,240
performance in C++ it came out how you

00:27:16,170 --> 00:27:20,430
will need to think about changes maybe

00:27:18,240 --> 00:27:22,140
some parts of the components the C++

00:27:20,430 --> 00:27:23,760
just to improve the performance that is

00:27:22,140 --> 00:27:27,270
essentially what we've done so the

00:27:23,760 --> 00:27:31,290
really really performance dependent bits

00:27:27,270 --> 00:27:36,180
are done in C++ it is surprisingly

00:27:31,290 --> 00:27:41,250
minimal but the performance there is yes

00:27:36,180 --> 00:27:43,230
that's why in C++ but there isn't there

00:27:41,250 --> 00:27:52,650
isn't a great deal of it so moist a lot

00:27:43,230 --> 00:27:58,230
yes actually he will know a lot more yes

00:27:52,650 --> 00:28:01,050
just very quickly as small as more

00:27:58,230 --> 00:28:04,050
recapping days so basically now it's

00:28:01,050 --> 00:28:06,480
called kirigami to because we

00:28:04,050 --> 00:28:10,010
basically were implemented it completely

00:28:06,480 --> 00:28:12,870
from base to directly cue quick items to

00:28:10,010 --> 00:28:16,560
based on top of cute quick controls to

00:28:12,870 --> 00:28:21,350
so the amount of qml that is mean

00:28:16,560 --> 00:28:24,750
instead in instanced is already way less

00:28:21,350 --> 00:28:27,090
that blog post was very interesting in

00:28:24,750 --> 00:28:30,660
what i would hope it comes out of that

00:28:27,090 --> 00:28:34,140
is cute quick controls to getting at

00:28:30,660 --> 00:28:37,800
least a bit of public C++ API and then

00:28:34,140 --> 00:28:40,890
at that point we can even go further and

00:28:37,800 --> 00:28:45,830
doing some of our controllers actual C++

00:28:40,890 --> 00:28:45,830
subclasses of quick controls to classes

00:28:45,980 --> 00:28:52,250
okay that's all the time that we have so

00:28:49,110 --> 00:28:52,250
let's give a warm

00:28:52,960 --> 00:28:56,900

YouTube URL: https://www.youtube.com/watch?v=-5LTD04pY4w


