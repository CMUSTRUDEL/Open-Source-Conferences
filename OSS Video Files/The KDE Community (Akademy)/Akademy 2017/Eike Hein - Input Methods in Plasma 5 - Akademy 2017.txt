Title: Eike Hein - Input Methods in Plasma 5 - Akademy 2017
Publication date: 2017-11-20
Playlist: Akademy 2017
Description: 
	An overview over the How and Why of Input Methods support (including examples of international writing systems, emoji and word completion) in Plasma on both X11 and Wayland, its current status and challenges, and the work ahead of us.

Text input is the foundational means of human-computer interaction: We configure or systems, program them, and express ourselves through them by writing. Input Methods help us along by converting hardware events into text - complex conversion being a requirement for many international writing systems, new writing systems such as emoji, and at the heart of assistive text technologies such as word completion and spell-checking.

This talk will illustrate the application areas for Input Methods by example, presenting short introductions to several international writing systems as well as emoji input. It will explain why solid Input Methods support is vital to KDE's goal of inclusivity and how Input Methods can make the act of writing easier for all of us.

It will consolidate input from the Input Methods development and user community to provide a detailed overview over the current Input Methods technical architecture and user experience in Plasma, as well as free systems in general. It will dive into existing pain points and present both ongoing work and plans to address them.

https://conf.kde.org/en/akademy2017/public/events/359
Captions: 
	00:00:07,470 --> 00:00:13,920
our next speaker is coming from an

00:00:09,870 --> 00:00:16,439
exotic land of Korea and he's going to

00:00:13,920 --> 00:00:19,200
talk about impulse methods in plasma

00:00:16,439 --> 00:00:23,550
obviously Korean input methods and some

00:00:19,200 --> 00:00:26,039
surprises I guess maybe thank you so

00:00:23,550 --> 00:00:28,019
much for coming this is something it's a

00:00:26,039 --> 00:00:31,230
topic that's very dear to me and my

00:00:28,019 --> 00:00:36,019
ambition is that by the end that may

00:00:31,230 --> 00:00:38,699
also be the case for you we'll see so I

00:00:36,019 --> 00:00:40,980
did write for 45 minutes and I have

00:00:38,699 --> 00:00:43,820
about 30 so I need to move at a bit of a

00:00:40,980 --> 00:00:47,670
fast clip which means we'll skip over

00:00:43,820 --> 00:00:50,910
this part and get right to the meat of

00:00:47,670 --> 00:00:52,739
it so what are input methods and I'm

00:00:50,910 --> 00:00:54,300
going to sort of front-load you with

00:00:52,739 --> 00:00:56,670
some terminology it's going to be a

00:00:54,300 --> 00:00:59,160
little bit abstract and there will be

00:00:56,670 --> 00:01:01,800
demos later on that will make this sort

00:00:59,160 --> 00:01:04,710
of concrete invisible so don't worry

00:01:01,800 --> 00:01:08,220
about getting lost so input methods are

00:01:04,710 --> 00:01:10,500
ultimately about a conversion of input

00:01:08,220 --> 00:01:12,990
events into some sort of output text and

00:01:10,500 --> 00:01:15,569
the most common input event is a key

00:01:12,990 --> 00:01:18,270
press but it can also be a tap on screen

00:01:15,569 --> 00:01:20,759
or it can be a more complex gesture like

00:01:18,270 --> 00:01:23,789
a swipe gesture there could even be

00:01:20,759 --> 00:01:26,220
handwriting drawing something or even

00:01:23,789 --> 00:01:29,670
voice input and it's ultimately about

00:01:26,220 --> 00:01:32,190
divorcing output from input like what

00:01:29,670 --> 00:01:36,450
you get out doesn't have to be directly

00:01:32,190 --> 00:01:39,509
mapped to what you put in and that's

00:01:36,450 --> 00:01:42,599
usually stateful that is at some point

00:01:39,509 --> 00:01:46,590
you start inputting and you do things

00:01:42,599 --> 00:01:48,450
and then you get done and this middle

00:01:46,590 --> 00:01:51,780
part is done by software that's where

00:01:48,450 --> 00:01:53,910
the magic happens and it can do that in

00:01:51,780 --> 00:01:59,910
a very rich and interactive way using

00:01:53,910 --> 00:02:02,520
various sorts of UI and now it's about

00:01:59,910 --> 00:02:05,879
why would you even want that who needs

00:02:02,520 --> 00:02:07,770
that and what for so there are two broad

00:02:05,879 --> 00:02:10,860
categories of use cases for input

00:02:07,770 --> 00:02:12,360
methods there are use cases where an

00:02:10,860 --> 00:02:15,180
input method is essential to

00:02:12,360 --> 00:02:17,790
communication that is about currently

00:02:15,180 --> 00:02:20,400
20% of the world population natively

00:02:17,790 --> 00:02:20,980
speak a language that requires an input

00:02:20,400 --> 00:02:24,819
method

00:02:20,980 --> 00:02:26,920
to be written into a computer and well

00:02:24,819 --> 00:02:29,879
it's 20% of the world population it's

00:02:26,920 --> 00:02:33,159
currently not yet 20% of computer users

00:02:29,879 --> 00:02:36,340
because they don't all have a computer

00:02:33,159 --> 00:02:39,099
yet but we expect or hope that to change

00:02:36,340 --> 00:02:41,530
so the number of computer users who

00:02:39,099 --> 00:02:43,090
acquire an input method to write their

00:02:41,530 --> 00:02:48,310
native language is going to rise over

00:02:43,090 --> 00:02:50,680
time and furthermore those users are

00:02:48,310 --> 00:02:53,110
currently underrepresented among users

00:02:50,680 --> 00:02:55,360
of open systems that is if you are

00:02:53,110 --> 00:02:57,040
someone who needs an input method to

00:02:55,360 --> 00:02:58,930
write your language you will be more

00:02:57,040 --> 00:03:01,329
likely to use a proprietary system than

00:02:58,930 --> 00:03:04,510
an open system and there are reasons for

00:03:01,329 --> 00:03:08,400
that and and we will get into those at

00:03:04,510 --> 00:03:12,510
length later the other broad type of

00:03:08,400 --> 00:03:15,340
input method use is assistive that is

00:03:12,510 --> 00:03:19,359
you don't necessarily need it to type

00:03:15,340 --> 00:03:23,079
but you want it to be faster or to type

00:03:19,359 --> 00:03:27,310
something that you rarely type and we

00:03:23,079 --> 00:03:29,139
have demos of both of those so examples

00:03:27,310 --> 00:03:32,530
of the latter would be word completions

00:03:29,139 --> 00:03:34,480
work suggestions even spell checking can

00:03:32,530 --> 00:03:37,599
fit into that scope and that stuff is

00:03:34,480 --> 00:03:41,139
very common on mobile but people don't

00:03:37,599 --> 00:03:43,510
use it enough on the desktop and now

00:03:41,139 --> 00:03:47,620
it's a chicken and axing sort of on both

00:03:43,510 --> 00:03:49,660
accounts that is why people who need an

00:03:47,620 --> 00:03:52,150
input method are underrepresented among

00:03:49,660 --> 00:03:54,400
open-source users is because our support

00:03:52,150 --> 00:03:55,959
for it is not good enough yet and the

00:03:54,400 --> 00:03:58,690
reason why you don't use it on the

00:03:55,959 --> 00:04:01,000
desktop is also because our support is

00:03:58,690 --> 00:04:02,530
bad for it because you don't know it

00:04:01,000 --> 00:04:06,129
exists you don't know how to set it up

00:04:02,530 --> 00:04:09,129
and that's also stuff we will touch on

00:04:06,129 --> 00:04:12,639
later and now let's look at some demos

00:04:09,129 --> 00:04:17,500
so you actually know very concretely

00:04:12,639 --> 00:04:20,139
what this is about and a good example to

00:04:17,500 --> 00:04:22,479
sort of ease you into this is writing

00:04:20,139 --> 00:04:25,570
Korean Korean is written using an

00:04:22,479 --> 00:04:27,400
alphabet it's actually very similar to

00:04:25,570 --> 00:04:29,469
the Latin alphabet it has about the same

00:04:27,400 --> 00:04:32,169
number of letters but has consonants

00:04:29,469 --> 00:04:33,650
that has vowels it has a very simple

00:04:32,169 --> 00:04:35,870
keyboard layouts every letter

00:04:33,650 --> 00:04:39,940
SMAP Sookie you present you get a letter

00:04:35,870 --> 00:04:43,400
but there's one twist to it as letters

00:04:39,940 --> 00:04:51,190
form a syllable they get grouped into a

00:04:43,400 --> 00:04:54,710
one character white block that is if I

00:04:51,190 --> 00:04:57,310
rest this letter i if i press this key I

00:04:54,710 --> 00:05:02,570
get one letter that's the consonant that

00:04:57,310 --> 00:05:06,550
all images H in English now if I type

00:05:02,570 --> 00:05:09,710
another letter O first off you can see

00:05:06,550 --> 00:05:12,650
this is one character if I use the arrow

00:05:09,710 --> 00:05:15,169
keys it will skip over this now if I do

00:05:12,650 --> 00:05:18,229
this again but I press an additional key

00:05:15,169 --> 00:05:20,600
now I have two letters in one character

00:05:18,229 --> 00:05:22,910
white block you can see this when I use

00:05:20,600 --> 00:05:27,139
the arrow keys the cursor will skip over

00:05:22,910 --> 00:05:28,910
this entire thing now there is something

00:05:27,139 --> 00:05:31,220
really complicated going on here which

00:05:28,910 --> 00:05:33,590
is there's already text in this text

00:05:31,220 --> 00:05:36,199
field and as I press the second and

00:05:33,590 --> 00:05:39,800
third keys that text gets yanked out and

00:05:36,199 --> 00:05:41,870
replaced with something else and that

00:05:39,800 --> 00:05:44,090
happens by way of communication between

00:05:41,870 --> 00:05:46,340
the input method and the application

00:05:44,090 --> 00:05:49,220
there's a very rich protocol going on

00:05:46,340 --> 00:05:51,889
there to allow that to happen and in

00:05:49,220 --> 00:05:54,349
fact you can see it's stateful because

00:05:51,889 --> 00:05:56,930
while I'm composing this block the

00:05:54,349 --> 00:05:58,880
colors are inverted and that's in fact

00:05:56,930 --> 00:06:01,430
also the input mess of telling the

00:05:58,880 --> 00:06:05,090
application to invert the colors because

00:06:01,430 --> 00:06:14,000
this protocol has providing formatting

00:06:05,090 --> 00:06:17,889
hints within its scope so another good

00:06:14,000 --> 00:06:24,260
example is writing Chinese many of you

00:06:17,889 --> 00:06:25,849
will be sort of aware that hang on now I

00:06:24,260 --> 00:06:29,210
made a mistake and pressed one letter

00:06:25,849 --> 00:06:33,070
too much one click too much actually I

00:06:29,210 --> 00:06:33,070
will have to restart sorry about that

00:06:33,520 --> 00:06:38,750
see I wrote this in cute quick so I

00:06:36,889 --> 00:06:41,180
could save or could thumb link by

00:06:38,750 --> 00:06:44,090
switching to other applications to demo

00:06:41,180 --> 00:06:47,169
things and now on awkwardly funding so

00:06:44,090 --> 00:06:47,169
that worked out great

00:06:48,309 --> 00:06:54,769
now many of you will be sort of dimly

00:06:52,249 --> 00:06:58,339
aware that Chinese is written using

00:06:54,769 --> 00:07:00,139
thousands of characters and doing that

00:06:58,339 --> 00:07:02,719
on a computer is a problem that really

00:07:00,139 --> 00:07:04,639
only becomes tractable by using an input

00:07:02,719 --> 00:07:07,159
method because you need to somehow

00:07:04,639 --> 00:07:09,559
select among those characters and that's

00:07:07,159 --> 00:07:13,129
it's essentially a search operation you

00:07:09,559 --> 00:07:15,819
input some sort of search query and the

00:07:13,129 --> 00:07:20,059
input method will provide you with

00:07:15,819 --> 00:07:22,279
characters to choose from so I typed one

00:07:20,059 --> 00:07:25,429
key and it offers up a number of

00:07:22,279 --> 00:07:27,949
candidates of letters and I can just

00:07:25,429 --> 00:07:32,509
accept the first one by pressing space

00:07:27,949 --> 00:07:35,899
and type another one and that's that's

00:07:32,509 --> 00:07:37,159
hello in Chinese and that only took two

00:07:35,899 --> 00:07:39,499
key presses even though there's

00:07:37,159 --> 00:07:43,339
thousands of characters and what I did

00:07:39,499 --> 00:07:45,769
was typed the first letter of the sound

00:07:43,339 --> 00:07:48,319
value of those characters in Latin so

00:07:45,769 --> 00:07:51,019
I've wrote romanization and it provided

00:07:48,319 --> 00:07:53,089
me with matching characters and it was

00:07:51,019 --> 00:07:56,389
very smart about suggesting common ones

00:07:53,089 --> 00:07:58,819
and that way I could type this very

00:07:56,389 --> 00:08:01,569
quickly there are other ways of writing

00:07:58,819 --> 00:08:05,329
Chinese you can instead of using Latin

00:08:01,569 --> 00:08:08,179
use a different writing system to write

00:08:05,329 --> 00:08:10,119
your search query you might select among

00:08:08,179 --> 00:08:16,669
characters by their graphical features

00:08:10,119 --> 00:08:18,319
you might draw one so it's about the the

00:08:16,669 --> 00:08:20,659
point of this is that there's a pattern

00:08:18,319 --> 00:08:22,339
of providing a search term and being

00:08:20,659 --> 00:08:25,579
presented with candidates to choose from

00:08:22,339 --> 00:08:27,409
and picking one and that you either pop

00:08:25,579 --> 00:08:30,499
up that appeared on screen that you

00:08:27,409 --> 00:08:32,180
selected the characters on is provided

00:08:30,499 --> 00:08:33,649
by the system to the application it's

00:08:32,180 --> 00:08:38,089
not part of the application it's a

00:08:33,649 --> 00:08:41,659
system service now very similar to

00:08:38,089 --> 00:08:43,550
writing Chinese is typing emoji except

00:08:41,659 --> 00:08:47,920
it's language agnostic because we all

00:08:43,550 --> 00:08:47,920
know that cat pictures are universal

00:08:48,009 --> 00:08:55,429
yeah I think that was a joke

00:08:50,949 --> 00:08:57,649
so if I type cat now I will get numbers

00:08:55,429 --> 00:09:00,240
candidates and as you see this pop up

00:08:57,649 --> 00:09:03,990
beautifully slides of screen

00:09:00,240 --> 00:09:10,140
and there we have a cat so that's nice

00:09:03,990 --> 00:09:21,000
that's cute and now we have another buck

00:09:10,140 --> 00:09:23,399
oh my god whoa all right another restart

00:09:21,000 --> 00:09:27,200
of this I'm severely sorry anyways the

00:09:23,399 --> 00:09:31,560
next demo is about work completion and

00:09:27,200 --> 00:09:35,600
spell checking which you can also do

00:09:31,560 --> 00:09:35,600
within the scope of input methods

00:09:43,730 --> 00:09:51,550
there's a cat to make us feel happy

00:09:46,910 --> 00:09:51,550
again okay

00:09:59,090 --> 00:10:05,610
all right so let's go right ahead we can

00:10:03,150 --> 00:10:07,980
type something really complicated that's

00:10:05,610 --> 00:10:09,960
long like that we don't want to type in

00:10:07,980 --> 00:10:12,420
full and again we get presented with a

00:10:09,960 --> 00:10:16,470
list of candidates and we can press a

00:10:12,420 --> 00:10:17,700
number and complete something and that's

00:10:16,470 --> 00:10:21,810
a really good example of something

00:10:17,700 --> 00:10:23,700
that's assistive and in the case for

00:10:21,810 --> 00:10:26,940
example of mobile what completions are

00:10:23,700 --> 00:10:29,340
about overcoming a handicap the handicap

00:10:26,940 --> 00:10:32,160
being that typing on a touchscreen is

00:10:29,340 --> 00:10:34,500
really slow and we want to be faster so

00:10:32,160 --> 00:10:38,040
we tap what completions on the bar there

00:10:34,500 --> 00:10:40,020
to be faster and have a convenient

00:10:38,040 --> 00:10:44,340
typing experience we can do that on a

00:10:40,020 --> 00:10:47,520
desktop but we usually don't and let's

00:10:44,340 --> 00:10:49,560
get into that actually first off let's

00:10:47,520 --> 00:10:51,870
talk about input massive technology and

00:10:49,560 --> 00:10:55,560
I will sort of have to skip over some of

00:10:51,870 --> 00:10:57,720
this for time so the way it usually

00:10:55,560 --> 00:11:00,420
works on a desktop is that we have a

00:10:57,720 --> 00:11:03,420
central Demone running which hosts input

00:11:00,420 --> 00:11:05,910
method plugins and there's usually one

00:11:03,420 --> 00:11:08,460
active and you saw me switch between

00:11:05,910 --> 00:11:11,340
input methods that was telling the

00:11:08,460 --> 00:11:13,710
daemon which plug-in to load and there's

00:11:11,340 --> 00:11:16,110
a lot of IPC going on as your

00:11:13,710 --> 00:11:18,420
application gets a keyboard event it

00:11:16,110 --> 00:11:21,060
will then forward it to the input method

00:11:18,420 --> 00:11:22,980
daemon and the input method plug-in will

00:11:21,060 --> 00:11:29,790
do its magic and send the result back

00:11:22,980 --> 00:11:31,980
and the UI that gets invoked as part of

00:11:29,790 --> 00:11:37,050
that and that the user interacts with is

00:11:31,980 --> 00:11:40,050
another process which also talks we IPC

00:11:37,050 --> 00:11:42,540
to the input method down on and what you

00:11:40,050 --> 00:11:44,010
get out of the central demo is that the

00:11:42,540 --> 00:11:46,020
input mess of plugins don't have to

00:11:44,010 --> 00:11:48,540
repeat all sorts of boilerplate to

00:11:46,020 --> 00:11:51,300
manage their configuration and stuff

00:11:48,540 --> 00:11:53,790
like that and the UI in this case was

00:11:51,300 --> 00:11:54,870
provided by plasma and you'll get into

00:11:53,790 --> 00:11:56,940
that later

00:11:54,870 --> 00:12:00,750
so on the desktop there's a bunch of

00:11:56,940 --> 00:12:02,640
players first of skimming is sort of it

00:12:00,750 --> 00:12:05,190
has fallen out of fashion so we can

00:12:02,640 --> 00:12:08,060
ignore it for the rest of this talk the

00:12:05,190 --> 00:12:10,230
two big ones are eyebrows and FC ITX

00:12:08,060 --> 00:12:13,590
ibis is the default on many

00:12:10,230 --> 00:12:16,170
distributions FC ITX is the default of

00:12:13,590 --> 00:12:19,260
some of them in some distributions you

00:12:16,170 --> 00:12:21,600
will get one of those depending on which

00:12:19,260 --> 00:12:23,550
locale you install with because the

00:12:21,600 --> 00:12:25,860
respective user bases prefer one or the

00:12:23,550 --> 00:12:30,000
other based on their performance and

00:12:25,860 --> 00:12:35,550
features plasma beam plasma and KDE bean

00:12:30,000 --> 00:12:37,590
KDE we support all of them and the way

00:12:35,550 --> 00:12:40,670
the application talks to the input

00:12:37,590 --> 00:12:43,800
methods to the input method daemon is

00:12:40,670 --> 00:12:47,910
usually done via the toolkit in cute

00:12:43,800 --> 00:12:50,670
it's done again via plugins cute has a

00:12:47,910 --> 00:12:52,580
framework of input context plugins which

00:12:50,670 --> 00:12:55,890
interface with the input method daemon

00:12:52,580 --> 00:12:59,040
some of them do others implement an

00:12:55,890 --> 00:13:01,470
input method right in process in queued

00:12:59,040 --> 00:13:03,930
so sometimes a cute application will

00:13:01,470 --> 00:13:06,900
send an input event that it received on

00:13:03,930 --> 00:13:08,490
to an input method daemon sometimes the

00:13:06,900 --> 00:13:11,130
magic happens directly in the cute

00:13:08,490 --> 00:13:13,620
process because the plugin cue plug-in

00:13:11,130 --> 00:13:15,990
itself is an input method now some of

00:13:13,620 --> 00:13:18,780
those plugins are in the cute sorceries

00:13:15,990 --> 00:13:22,500
some are out of three cute five bundled

00:13:18,780 --> 00:13:25,860
the eye buzz plugin FCI TX is out of

00:13:22,500 --> 00:13:29,310
tweak ibis used to be out of three but

00:13:25,860 --> 00:13:31,470
it's now in three and what in the end

00:13:29,310 --> 00:13:33,540
gets delivered to your cue widget or to

00:13:31,470 --> 00:13:37,530
your cue quick item is a cue input

00:13:33,540 --> 00:13:40,320
method event and that essentially tries

00:13:37,530 --> 00:13:42,840
to wrap around all the things that the

00:13:40,320 --> 00:13:45,390
input method protocols can do it will

00:13:42,840 --> 00:13:47,640
tell you the current state it will tell

00:13:45,390 --> 00:13:49,230
you what text to replace what text to

00:13:47,640 --> 00:13:53,580
insert it will tell you the formatting

00:13:49,230 --> 00:13:55,440
hints and that gets interpreted and the

00:13:53,580 --> 00:13:58,500
text control will then manipulate the

00:13:55,440 --> 00:14:01,940
document and swap text out and reformat

00:13:58,500 --> 00:14:04,650
it depending on the events it gets so

00:14:01,940 --> 00:14:06,390
those lights have desktop in parenthesis

00:14:04,650 --> 00:14:10,200
and there's a reason for that because

00:14:06,390 --> 00:14:12,720
mobile is unfortunately not using any of

00:14:10,200 --> 00:14:16,410
the above and that's a problem in and of

00:14:12,720 --> 00:14:18,360
itself and that becomes apparent when we

00:14:16,410 --> 00:14:20,880
look at the input method community

00:14:18,360 --> 00:14:23,130
because input methods is one of those

00:14:20,880 --> 00:14:24,590
things where you can't divorce the

00:14:23,130 --> 00:14:27,140
technology from the social

00:14:24,590 --> 00:14:28,520
dimension because it's a it's a really

00:14:27,140 --> 00:14:31,310
wide problem domain there are many

00:14:28,520 --> 00:14:33,440
writing systems to cover not all of them

00:14:31,310 --> 00:14:36,650
are currently supported or supported

00:14:33,440 --> 00:14:39,320
well on open systems nor are the

00:14:36,650 --> 00:14:41,330
existing input methods by any means done

00:14:39,320 --> 00:14:43,780
there's a lot of work to do to make them

00:14:41,330 --> 00:14:46,460
faster and better and smarter and

00:14:43,780 --> 00:14:48,350
there's very few people working on

00:14:46,460 --> 00:14:50,420
solving those problems and there are

00:14:48,350 --> 00:14:54,740
writing systems where we rely on a

00:14:50,420 --> 00:14:59,050
single expert to provide support for of

00:14:54,740 --> 00:15:03,200
writing system to open systems and yet

00:14:59,050 --> 00:15:05,450
despite that we ask them to do work

00:15:03,200 --> 00:15:07,100
redundantly because we have the

00:15:05,450 --> 00:15:09,980
fragmentation I talked about we have

00:15:07,100 --> 00:15:12,080
multiple players on the desktop and we

00:15:09,980 --> 00:15:15,200
have mobile which in turn has multiple

00:15:12,080 --> 00:15:17,600
players which I will talk about later so

00:15:15,200 --> 00:15:19,640
if you're looking to bring support for

00:15:17,600 --> 00:15:22,570
your native writing system to open

00:15:19,640 --> 00:15:25,160
systems by way of an input method you

00:15:22,570 --> 00:15:27,110
probably will have to do much of that

00:15:25,160 --> 00:15:28,820
work multiple times to integrate in all

00:15:27,110 --> 00:15:31,160
of those systems and that's really a

00:15:28,820 --> 00:15:33,290
waste of their time and it means we're

00:15:31,160 --> 00:15:36,740
not exploiting that manpower efficiently

00:15:33,290 --> 00:15:39,860
and another problem there is that by the

00:15:36,740 --> 00:15:41,620
very nature of the problem domain we are

00:15:39,860 --> 00:15:43,540
dealing with language barrier and

00:15:41,620 --> 00:15:47,750
[Music]

00:15:43,540 --> 00:15:50,660
existing because input method users are

00:15:47,750 --> 00:15:54,020
underrepresented among users and makers

00:15:50,660 --> 00:15:57,770
of open systems people who make input

00:15:54,020 --> 00:15:59,780
methods often don't have the primary

00:15:57,770 --> 00:16:01,370
language of an open source community as

00:15:59,780 --> 00:16:04,120
their native languages so you get

00:16:01,370 --> 00:16:07,400
language barrier effects and communities

00:16:04,120 --> 00:16:12,500
don't care enough about this topic yet

00:16:07,400 --> 00:16:14,960
to try to to cater to that and and make

00:16:12,500 --> 00:16:17,780
the first step and and embrace those

00:16:14,960 --> 00:16:19,610
people so that's another impediment to

00:16:17,780 --> 00:16:23,240
solving all the problems that we will

00:16:19,610 --> 00:16:25,400
talk about KDE is part of the input

00:16:23,240 --> 00:16:28,160
method community there's overlap between

00:16:25,400 --> 00:16:30,950
plasma developers and FC ITX developers

00:16:28,160 --> 00:16:33,530
and we've also worked on the AI bus

00:16:30,950 --> 00:16:38,449
support in cued we go in there and fix

00:16:33,530 --> 00:16:40,489
parts now specifically in plasma desktop

00:16:38,449 --> 00:16:42,799
thing that you saw me use down here in

00:16:40,489 --> 00:16:46,429
the panel is called the input method

00:16:42,799 --> 00:16:48,889
panel widget and that's a front-end to

00:16:46,429 --> 00:16:54,259
all those different demons that I talked

00:16:48,889 --> 00:16:57,470
about I buzz FCI DX skin and through

00:16:54,259 --> 00:16:59,899
that widget you can access the

00:16:57,470 --> 00:17:04,130
configuration of the active input method

00:16:59,899 --> 00:17:07,339
or the demon itself it will display

00:17:04,130 --> 00:17:11,750
toggles that the active input method has

00:17:07,339 --> 00:17:13,939
and an options for example the word

00:17:11,750 --> 00:17:17,269
completion one that I just demoed at the

00:17:13,939 --> 00:17:20,120
end has a privacy toggle because it can

00:17:17,269 --> 00:17:22,069
learn with use if you type words very

00:17:20,120 --> 00:17:23,659
often complete them very often you will

00:17:22,069 --> 00:17:26,419
offer them earlier and stuff like that

00:17:23,659 --> 00:17:28,760
and you might not want to remember

00:17:26,419 --> 00:17:31,279
sensitive stuff so you can toggle

00:17:28,760 --> 00:17:34,429
privacy mode on that will stop tracking

00:17:31,279 --> 00:17:39,380
what you do and the way to do that is

00:17:34,429 --> 00:17:42,080
via the panel widget and this technology

00:17:39,380 --> 00:17:47,090
also provides the popups that you saw me

00:17:42,080 --> 00:17:49,990
interact with and very briefly recapping

00:17:47,090 --> 00:17:52,940
our recent work in this area we finally

00:17:49,990 --> 00:17:55,990
moved the input metal widget from the

00:17:52,940 --> 00:17:58,970
plasma add-ons package to the core which

00:17:55,990 --> 00:18:00,260
was really the first step towards taking

00:17:58,970 --> 00:18:03,440
this stuff a little more seriously

00:18:00,260 --> 00:18:06,830
because now we can also add it to the

00:18:03,440 --> 00:18:09,679
panel when you first log on to plasma in

00:18:06,830 --> 00:18:12,320
the Korean locale for example and we

00:18:09,679 --> 00:18:13,909
improved ibis support that's a little

00:18:12,320 --> 00:18:17,990
bit technical we can skip over that

00:18:13,909 --> 00:18:21,710
right now but very interesting is the

00:18:17,990 --> 00:18:23,779
plasma team worked with the neon team to

00:18:21,710 --> 00:18:26,570
sort of create a really intense

00:18:23,779 --> 00:18:29,269
integration test which is the KD in

00:18:26,570 --> 00:18:31,610
young Korean developer edition which is

00:18:29,269 --> 00:18:34,250
basically a customized variant of neon

00:18:31,610 --> 00:18:36,350
that as a boot up boots up into a live

00:18:34,250 --> 00:18:39,950
CD mode or as you install on a hard

00:18:36,350 --> 00:18:42,169
drive it will install in Korean and it

00:18:39,950 --> 00:18:44,539
will set up all of their stuff so

00:18:42,169 --> 00:18:48,080
there's something we can test to make

00:18:44,539 --> 00:18:50,570
sure it works and stays working and we

00:18:48,080 --> 00:18:52,190
made this originally for Katie's

00:18:50,570 --> 00:18:54,620
twenties birthday party in

00:18:52,190 --> 00:18:57,799
so and we handed it out there for free

00:18:54,620 --> 00:18:59,509
to a lot of interest and we've gotten a

00:18:57,799 --> 00:19:03,740
fair bunch of patches out of that by the

00:18:59,509 --> 00:19:06,139
way this is the kdeeny on Korean edition

00:19:03,740 --> 00:19:08,450
and it's a little bit fuzzy but you can

00:19:06,139 --> 00:19:10,970
see some Korean writing down there and

00:19:08,450 --> 00:19:15,259
in the menu and that's that birthday

00:19:10,970 --> 00:19:17,899
party which was really fun now now it

00:19:15,259 --> 00:19:20,230
gets interesting so what are the pain

00:19:17,899 --> 00:19:24,730
points that I sort of keep alluding to

00:19:20,230 --> 00:19:27,080
so first of setting this stuff up is

00:19:24,730 --> 00:19:30,080
difficult that requires expert knowledge

00:19:27,080 --> 00:19:34,759
if you are dealing with an English

00:19:30,080 --> 00:19:37,009
system and you want to teach it to be

00:19:34,759 --> 00:19:38,870
able to type Korean then you need to

00:19:37,009 --> 00:19:40,759
know what I buzz is you need to tell

00:19:38,870 --> 00:19:42,830
your package manager to install it you

00:19:40,759 --> 00:19:45,470
need to know about the plug-in you need

00:19:42,830 --> 00:19:48,649
to all manually add the panel vitchard

00:19:45,470 --> 00:19:50,419
you need to configure it and configuring

00:19:48,649 --> 00:19:52,519
it is really hard because the

00:19:50,419 --> 00:19:54,649
configuration is not where you expect it

00:19:52,519 --> 00:19:56,419
to be it's not in system settings you

00:19:54,649 --> 00:19:58,820
have to go we have the panel vision and

00:19:56,419 --> 00:20:01,340
in fact the moment that you start using

00:19:58,820 --> 00:20:04,309
an input method system a lot of the

00:20:01,340 --> 00:20:06,200
system settings become first of

00:20:04,309 --> 00:20:08,450
redundant but they also actually stop

00:20:06,200 --> 00:20:10,789
working because if you use I does in

00:20:08,450 --> 00:20:12,559
many cases it will take over keyboard

00:20:10,789 --> 00:20:14,360
layout management so changing the

00:20:12,559 --> 00:20:17,480
keyboard layout and system settings will

00:20:14,360 --> 00:20:21,110
actually no longer work which is it's

00:20:17,480 --> 00:20:23,750
just a really big mess and the problem

00:20:21,110 --> 00:20:26,990
there is that system settings only deals

00:20:23,750 --> 00:20:29,240
in keyboard layouts currently now the

00:20:26,990 --> 00:20:33,049
input method panel itself sort of

00:20:29,240 --> 00:20:34,970
competes with the system tray first of

00:20:33,049 --> 00:20:36,529
here's the current settings we have in

00:20:34,970 --> 00:20:38,289
system settings which are solely

00:20:36,529 --> 00:20:42,889
dedicated to key overheads

00:20:38,289 --> 00:20:45,710
now the input mounts on pedal we did

00:20:42,889 --> 00:20:47,960
sort of competes with the system tray it

00:20:45,710 --> 00:20:50,570
has only mechanism for hiding items

00:20:47,960 --> 00:20:52,250
there you know it's it's icons on the

00:20:50,570 --> 00:20:54,320
panel just like what the system tray

00:20:52,250 --> 00:20:56,779
does but it redundantly has its own

00:20:54,320 --> 00:21:01,039
system for showing and hiding items in

00:20:56,779 --> 00:21:03,230
there and that's a bit jarring and not

00:21:01,039 --> 00:21:04,400
necessary and is another problem we need

00:21:03,230 --> 00:21:09,710
to solve

00:21:04,400 --> 00:21:13,130
now there are solutions and the most

00:21:09,710 --> 00:21:15,830
important of them is to make input

00:21:13,130 --> 00:21:19,070
methods always on rather than treated as

00:21:15,830 --> 00:21:20,809
an optional thing and it doesn't matter

00:21:19,070 --> 00:21:23,210
much actually whether that's a build

00:21:20,809 --> 00:21:25,370
time dependency or a run time dependency

00:21:23,210 --> 00:21:27,530
what matters is that we've forced

00:21:25,370 --> 00:21:29,809
distributions to package it and install

00:21:27,530 --> 00:21:34,670
it along with plasma because if we don't

00:21:29,809 --> 00:21:36,620
do that we cannot we cannot reducers

00:21:34,670 --> 00:21:39,380
cannot rely on it being there but also

00:21:36,620 --> 00:21:43,309
we cannot write any UI settings UI that

00:21:39,380 --> 00:21:45,170
depends on it being there and we really

00:21:43,309 --> 00:21:47,330
need that because we need to revamp the

00:21:45,170 --> 00:21:49,400
conflict UI we need to get away from

00:21:47,330 --> 00:21:51,950
managing keyboard languages keyboard

00:21:49,400 --> 00:21:53,960
layouts and go towards managing input

00:21:51,950 --> 00:21:56,929
languages which by the way is exactly

00:21:53,960 --> 00:22:00,380
how it works on every competing system

00:21:56,929 --> 00:22:02,179
both open and proprietary the idea is if

00:22:00,380 --> 00:22:03,830
you want to type Korean you go to system

00:22:02,179 --> 00:22:06,260
settings and you add Korean and it will

00:22:03,830 --> 00:22:08,570
figure out the rest and Plasma is very

00:22:06,260 --> 00:22:12,260
far away from that currently and it

00:22:08,570 --> 00:22:14,300
needs to catch up we have a keyboard

00:22:12,260 --> 00:22:16,520
layout indicator currently that's really

00:22:14,300 --> 00:22:18,080
smart when you configure more than one

00:22:16,520 --> 00:22:20,240
keyboard layout something will

00:22:18,080 --> 00:22:22,700
automatically appear in your tray and

00:22:20,240 --> 00:22:26,059
you can switch between keyboard layouts

00:22:22,700 --> 00:22:29,030
there and you can see that obviously is

00:22:26,059 --> 00:22:31,660
redundant with switching between input

00:22:29,030 --> 00:22:34,250
methods that needs to be unified and

00:22:31,660 --> 00:22:35,929
then you also no longer need to manually

00:22:34,250 --> 00:22:37,910
add the panel widget it should

00:22:35,929 --> 00:22:40,970
automatically appear and we need to

00:22:37,910 --> 00:22:44,120
integrate the input method panel with

00:22:40,970 --> 00:22:47,000
the system tray the input method panel

00:22:44,120 --> 00:22:48,590
should just register tray icons and the

00:22:47,000 --> 00:22:50,960
tray should sort them together and then

00:22:48,590 --> 00:22:56,179
you can do showing height we had a tray

00:22:50,960 --> 00:22:59,350
settings now I kept mobile apart until

00:22:56,179 --> 00:23:02,630
now because it really is a part and

00:22:59,350 --> 00:23:05,780
that's a really big problem so very

00:23:02,630 --> 00:23:08,570
briefly the main differences of course

00:23:05,780 --> 00:23:10,610
instead of a physical keyboard you have

00:23:08,570 --> 00:23:12,550
a screen those are not mutually

00:23:10,610 --> 00:23:15,710
exclusive and that's part of the problem

00:23:12,550 --> 00:23:16,679
with a mobile device you may actually

00:23:15,710 --> 00:23:18,570
have more than

00:23:16,679 --> 00:23:21,320
one input device if you have like a old

00:23:18,570 --> 00:23:24,539
slidy smartphone you have a screen and

00:23:21,320 --> 00:23:25,950
physical buttons but also we want to get

00:23:24,539 --> 00:23:27,690
to a place where you can connect the

00:23:25,950 --> 00:23:29,759
physical keyboard to a mobile device and

00:23:27,690 --> 00:23:34,409
we are in that place already in many

00:23:29,759 --> 00:23:35,940
cases and the very early screen keywords

00:23:34,409 --> 00:23:38,429
we used to have we're just key event

00:23:35,940 --> 00:23:40,679
generators you click the button and it

00:23:38,429 --> 00:23:42,240
would generate the key event and send it

00:23:40,679 --> 00:23:44,970
through the sort of conventional means

00:23:42,240 --> 00:23:48,389
of dealing with those which was clumsy

00:23:44,970 --> 00:23:49,200
but actually a little bit better than

00:23:48,389 --> 00:23:55,159
what we do now

00:23:49,200 --> 00:23:57,779
so currently plasma mobile uses a

00:23:55,159 --> 00:23:59,369
keyboard virtual keyboard framework

00:23:57,779 --> 00:24:01,610
called mallet I'm not sure I'm

00:23:59,369 --> 00:24:04,200
pronouncing it correctly but it was

00:24:01,610 --> 00:24:06,899
conceived by Nokia together with Intel

00:24:04,200 --> 00:24:09,119
they did it for the name amigo stuff

00:24:06,899 --> 00:24:13,169
back in the day and basically the reason

00:24:09,119 --> 00:24:14,610
we use it is because it's there and it's

00:24:13,169 --> 00:24:17,220
not very good and it's mostly

00:24:14,610 --> 00:24:20,460
unmaintained and it's horribly over

00:24:17,220 --> 00:24:25,110
designed and that's what it looks like

00:24:20,460 --> 00:24:26,850
it's not very pretty either and we want

00:24:25,110 --> 00:24:29,399
to get away from that we want to switch

00:24:26,850 --> 00:24:31,799
to cute virtual keyboard which used to

00:24:29,399 --> 00:24:35,009
be a proprietary add-on to cute which is

00:24:31,799 --> 00:24:37,379
now has recently become a proper

00:24:35,009 --> 00:24:40,350
open-source cute module and it's

00:24:37,379 --> 00:24:43,320
implemented as an input context plugin

00:24:40,350 --> 00:24:45,389
in cute now that might make you think it

00:24:43,320 --> 00:24:49,409
means it won't work and anything but

00:24:45,389 --> 00:24:52,649
cute apps but where we want to use it is

00:24:49,409 --> 00:24:55,529
on the phone and the phone is valent

00:24:52,649 --> 00:24:57,659
which means we actually have a cute app

00:24:55,529 --> 00:25:00,149
handling input events which is Korean

00:24:57,659 --> 00:25:03,570
valent and so the virtual keyboard runs

00:25:00,149 --> 00:25:05,879
in process in the compositor and can

00:25:03,570 --> 00:25:07,830
then accept input from the virtual

00:25:05,879 --> 00:25:09,869
keyboard and forward it to the currently

00:25:07,830 --> 00:25:13,649
active application using the valent

00:25:09,869 --> 00:25:15,600
protocols and we do use it on the

00:25:13,649 --> 00:25:18,690
desktop as well we have it for example

00:25:15,600 --> 00:25:20,369
in the lock screen if you detach your

00:25:18,690 --> 00:25:22,440
keyboard from your desktop and you need

00:25:20,369 --> 00:25:26,130
to login you can open the virtual

00:25:22,440 --> 00:25:30,240
keyboard from there

00:25:26,130 --> 00:25:33,120
so the reason why in Mobile we have

00:25:30,240 --> 00:25:36,120
mullet and we have cute virtual keyboard

00:25:33,120 --> 00:25:39,809
is a first off we do need to UI parts

00:25:36,120 --> 00:25:42,150
but the way they are implemented for

00:25:39,809 --> 00:25:44,070
reasons that we as makers of open

00:25:42,150 --> 00:25:47,100
systems don't actually share which is

00:25:44,070 --> 00:25:50,250
mostly licensing a lot of the input

00:25:47,100 --> 00:25:52,200
method stuff is GPL device makers tend

00:25:50,250 --> 00:25:54,539
to be a bit scared of the GPL they don't

00:25:52,200 --> 00:25:56,400
want to have GPL stuff on there so they

00:25:54,539 --> 00:25:59,190
decided instead of reusing code we would

00:25:56,400 --> 00:26:00,900
create our own that is knowledge and

00:25:59,190 --> 00:26:04,320
good virtual keyboard duplicate

00:26:00,900 --> 00:26:07,250
everything that is an FC ITX do if you

00:26:04,320 --> 00:26:10,020
want Korean its implemented there

00:26:07,250 --> 00:26:11,789
redundantly so what I talked about

00:26:10,020 --> 00:26:14,340
earlier that we are spreading the

00:26:11,789 --> 00:26:17,159
community that works an input method

00:26:14,340 --> 00:26:20,340
stuff then we are spreading it even

00:26:17,159 --> 00:26:25,130
thinner by the way we do things in

00:26:20,340 --> 00:26:27,840
mobile right now for dumb reasons and

00:26:25,130 --> 00:26:32,309
that means we are not achieving feature

00:26:27,840 --> 00:26:35,340
parity both ways cube virtual keyboard

00:26:32,309 --> 00:26:39,559
and mallet leg stuff that I was and the

00:26:35,340 --> 00:26:43,409
desktop things do and vice versa and

00:26:39,559 --> 00:26:47,760
also not just feature but also behavior

00:26:43,409 --> 00:26:50,610
parity that is if you type things for

00:26:47,760 --> 00:26:52,799
example think of the Chinese demo you

00:26:50,610 --> 00:26:55,860
might come to expect a certain sorting

00:26:52,799 --> 00:26:58,140
of the characters that are offered to

00:26:55,860 --> 00:27:01,080
you for example because it learns was

00:26:58,140 --> 00:27:04,380
use if you select the character very

00:27:01,080 --> 00:27:06,900
often you want that to be offered very

00:27:04,380 --> 00:27:10,380
high in the list of choices but if you

00:27:06,900 --> 00:27:11,820
have a different stack on running the

00:27:10,380 --> 00:27:13,799
physical keyboard and a different stack

00:27:11,820 --> 00:27:15,720
running the virtual keyboard and they

00:27:13,799 --> 00:27:18,120
independently learn from each other you

00:27:15,720 --> 00:27:20,010
might actually get different suggestions

00:27:18,120 --> 00:27:22,230
which is bad it's a challenge to

00:27:20,010 --> 00:27:23,970
convergence where the idea is that you

00:27:22,230 --> 00:27:25,740
can take your plasma mobile device and

00:27:23,970 --> 00:27:29,370
talk it to a screen and the keyboard and

00:27:25,740 --> 00:27:31,200
it should offer the same features and

00:27:29,370 --> 00:27:33,390
behave the same way and in fact it

00:27:31,200 --> 00:27:36,720
should even synchronize state if you

00:27:33,390 --> 00:27:38,930
sync back to the Korean demo I typed

00:27:36,720 --> 00:27:41,750
three letter

00:27:38,930 --> 00:27:43,790
to form one block now imagine you do the

00:27:41,750 --> 00:27:45,860
first two key presses on your screen and

00:27:43,790 --> 00:27:48,020
then you want to do the last one on a

00:27:45,860 --> 00:27:51,500
physical keyboard it should work it

00:27:48,020 --> 00:27:53,450
doesn't right now because the code

00:27:51,500 --> 00:27:55,850
running behind the scenes is completely

00:27:53,450 --> 00:27:57,560
completely separate from each other you

00:27:55,850 --> 00:28:01,610
actually need to delete your text and

00:27:57,560 --> 00:28:05,030
start over you can it doesn't work and

00:28:01,610 --> 00:28:08,090
that sucks and there's very poor UI

00:28:05,030 --> 00:28:10,910
integration and no consistency if you

00:28:08,090 --> 00:28:13,070
use input method panel widget to select

00:28:10,910 --> 00:28:17,170
your input method that has no effect on

00:28:13,070 --> 00:28:21,920
the virtual keyboard and and vice versa

00:28:17,170 --> 00:28:25,130
so currently the best idea we have to

00:28:21,920 --> 00:28:28,640
solve that is that virtual keyboard

00:28:25,130 --> 00:28:30,860
itself is extensible you can teach good

00:28:28,640 --> 00:28:34,940
virtual keyboard a new writing system

00:28:30,860 --> 00:28:37,910
and what we would like to do is instead

00:28:34,940 --> 00:28:45,530
to teach it to outsource that job to

00:28:37,910 --> 00:28:48,260
something like f CI t xf64 I see you can

00:28:45,530 --> 00:28:50,630
awesome load it as a library and make

00:28:48,260 --> 00:28:54,020
calls into that so we want to extend

00:28:50,630 --> 00:28:57,620
cute virtual keyboard with a plugin that

00:28:54,020 --> 00:29:00,620
calls into f CIT X and then possibly use

00:28:57,620 --> 00:29:02,990
f CIT expose for the physical keyboard

00:29:00,620 --> 00:29:05,600
and the virtual keyboard to solve those

00:29:02,990 --> 00:29:08,660
integration problems and we should reuse

00:29:05,600 --> 00:29:10,790
the UI we have for the input method

00:29:08,660 --> 00:29:12,410
panel widget in the keyboard tray so

00:29:10,790 --> 00:29:24,410
there's the same UI for switching

00:29:12,410 --> 00:29:27,350
between input languages and and finally

00:29:24,410 --> 00:29:33,350
I want to talk about why we should care

00:29:27,350 --> 00:29:35,630
about this and one reason is written

00:29:33,350 --> 00:29:38,030
down in our manifesto on manifested

00:29:35,630 --> 00:29:40,070
katydid orc it says that we care about

00:29:38,030 --> 00:29:43,010
inclusivity and we have an end user

00:29:40,070 --> 00:29:46,040
focus and inclusivity obviously means

00:29:43,010 --> 00:29:49,460
that people should be able to write

00:29:46,040 --> 00:29:51,410
their native language on our systems if

00:29:49,460 --> 00:29:54,620
we want to be inclusive we

00:29:51,410 --> 00:29:57,350
need to cover all of those ways of

00:29:54,620 --> 00:29:59,600
writing and it should be efficient and

00:29:57,350 --> 00:30:04,310
it should be easy to set up that the end

00:29:59,600 --> 00:30:06,500
user focus part and doing that will

00:30:04,310 --> 00:30:11,900
create sort of a feedback loop because

00:30:06,500 --> 00:30:14,270
as we enable our systems to be used by

00:30:11,900 --> 00:30:16,100
these kinds of people some of them will

00:30:14,270 --> 00:30:17,960
become our future developers they will

00:30:16,100 --> 00:30:19,430
help make us that better and they will

00:30:17,960 --> 00:30:21,250
help us make many other things better

00:30:19,430 --> 00:30:24,350
right now

00:30:21,250 --> 00:30:26,420
somebody who would be a great KD

00:30:24,350 --> 00:30:28,520
developer might install our system and

00:30:26,420 --> 00:30:30,380
abandon it very quickly because they

00:30:28,520 --> 00:30:37,310
can't figure out how to message their

00:30:30,380 --> 00:30:40,520
mama and that sucks so getting those

00:30:37,310 --> 00:30:45,080
people allowing those people to use our

00:30:40,520 --> 00:30:46,760
systems will allow them to help us but

00:30:45,080 --> 00:30:51,200
there's also something more fundamental

00:30:46,760 --> 00:30:54,380
and that's why we actually do what we do

00:30:51,200 --> 00:30:59,200
and why we are here and I think it's

00:30:54,380 --> 00:31:01,580
because software designers and as

00:30:59,200 --> 00:31:04,220
artists and translators and as

00:31:01,580 --> 00:31:07,150
programmers we get to sort of operate in

00:31:04,220 --> 00:31:10,040
a very exciting support role we get to

00:31:07,150 --> 00:31:12,410
help an able culture and build

00:31:10,040 --> 00:31:14,000
civilization because there's there's

00:31:12,410 --> 00:31:17,060
nothing more satisfying than writing

00:31:14,000 --> 00:31:19,400
software that allows someone to express

00:31:17,060 --> 00:31:21,260
themselves and to connect with others

00:31:19,400 --> 00:31:24,590
because that's when all that cool stuff

00:31:21,260 --> 00:31:28,600
happens and input methods are very

00:31:24,590 --> 00:31:30,890
directly about that because

00:31:28,600 --> 00:31:33,170
communication is essential to culture

00:31:30,890 --> 00:31:38,860
and language is essential to

00:31:33,170 --> 00:31:38,860
communication yeah that's it

00:31:42,580 --> 00:31:48,350
how are we doing on time oh we have time

00:31:45,620 --> 00:31:49,000
for a really short few questions all

00:31:48,350 --> 00:31:51,590
right

00:31:49,000 --> 00:31:56,330
Jonathan it's in socially cutting into

00:31:51,590 --> 00:31:58,760
your break you said that we need to be

00:31:56,330 --> 00:31:59,990
forced as distributions need to be

00:31:58,760 --> 00:32:03,350
forced

00:31:59,990 --> 00:32:06,110
is there a release because plasma is

00:32:03,350 --> 00:32:08,750
packaged who would not package as much

00:32:06,110 --> 00:32:12,530
no you need to be forced in the sense

00:32:08,750 --> 00:32:15,860
that we have the input method panel

00:32:12,530 --> 00:32:18,470
widget in plasma desktop but it's not a

00:32:15,860 --> 00:32:21,049
heart built depends II like the stuff

00:32:18,470 --> 00:32:24,590
that input metal panel needs like for

00:32:21,049 --> 00:32:27,530
example I pass or FC ITX

00:32:24,590 --> 00:32:30,410
is not a heart built time or run time

00:32:27,530 --> 00:32:33,640
dependency which means it allowed you

00:32:30,410 --> 00:32:37,370
guys luxury of ignoring that problem and

00:32:33,640 --> 00:32:39,290
so what we need to do is say you know

00:32:37,370 --> 00:32:41,870
your comp package plasma without making

00:32:39,290 --> 00:32:43,790
sure that foundational means are there

00:32:41,870 --> 00:32:45,049
and that sounds really scary but the

00:32:43,790 --> 00:32:47,480
thing is it's actually not that scary

00:32:45,049 --> 00:32:49,250
because you already have a package for a

00:32:47,480 --> 00:32:52,340
bus you just don't have it in the

00:32:49,250 --> 00:32:55,580
dependency list for plasma so if we say

00:32:52,340 --> 00:33:07,880
we need this you add one line and the

00:32:55,580 --> 00:33:09,950
entire situation changes not on the list

00:33:07,880 --> 00:33:13,520
I have disgusted with individual

00:33:09,950 --> 00:33:16,250
packages and for example obviously neon

00:33:13,520 --> 00:33:18,679
help by doing the the neon Korean

00:33:16,250 --> 00:33:22,190
developer edition but also we worked

00:33:18,679 --> 00:33:24,770
with the Fedora community to try out

00:33:22,190 --> 00:33:27,890
what I talked about that we now also add

00:33:24,770 --> 00:33:30,710
the panel widget if you install in a

00:33:27,890 --> 00:33:34,669
locale that is known to require an input

00:33:30,710 --> 00:33:37,700
method like Korean or Chinese and we

00:33:34,669 --> 00:33:40,100
sort of improved our first logon script

00:33:37,700 --> 00:33:43,160
and the fedora people worked with us to

00:33:40,100 --> 00:33:45,200
test that so you are right I should go

00:33:43,160 --> 00:33:47,120
to the list and spread that further but

00:33:45,200 --> 00:33:50,360
we've been talking to a number of

00:33:47,120 --> 00:33:52,519
different distros also openSUSE they

00:33:50,360 --> 00:33:56,749
work on FC ITX and

00:33:52,519 --> 00:34:03,099
are pretty well on top of this so it's

00:33:56,749 --> 00:34:05,779
not hopeless we just need to do it here

00:34:03,099 --> 00:34:07,219
as an application developer I don't

00:34:05,779 --> 00:34:10,760
really need to care much

00:34:07,219 --> 00:34:13,159
you only need to care if you implement

00:34:10,760 --> 00:34:15,319
your own custom text related that needs

00:34:13,159 --> 00:34:18,950
to handle queue input events input

00:34:15,319 --> 00:34:22,039
method events and Kate is an example of

00:34:18,950 --> 00:34:24,470
that I've fixed bugs and Kate that like

00:34:22,039 --> 00:34:26,359
for example if the input method can

00:34:24,470 --> 00:34:27,529
provide formatting hints right when I

00:34:26,359 --> 00:34:30,470
was typing Korean the colors were

00:34:27,529 --> 00:34:32,329
inverted some other input methods use

00:34:30,470 --> 00:34:36,409
color annotations and stuff like that

00:34:32,329 --> 00:34:38,089
and that was broken and Kate there what

00:34:36,409 --> 00:34:40,250
about where text turned invisible

00:34:38,089 --> 00:34:42,679
because foreground and background color

00:34:40,250 --> 00:34:45,020
became the same I fixed that so we have

00:34:42,679 --> 00:34:47,510
some cases in case we ever needed to

00:34:45,020 --> 00:34:50,000
implement the handling for those input

00:34:47,510 --> 00:34:52,520
method events but typically if you use

00:34:50,000 --> 00:35:01,339
toolkit provided standard text widgets

00:34:52,520 --> 00:35:04,549
no you don't need to care with my

00:35:01,339 --> 00:35:06,200
packager hat on can you teach me enough

00:35:04,549 --> 00:35:12,309
Korean or Chinese that I can at least

00:35:06,200 --> 00:35:12,309
test this sure find me I will excellent

00:35:16,140 --> 00:35:33,049
[Music]

00:35:17,740 --> 00:35:36,020
many other people why is it so hard to

00:35:33,049 --> 00:35:38,569
set up from the from the kdeeny on

00:35:36,020 --> 00:35:40,460
Korean Edition that needed a whole

00:35:38,569 --> 00:35:43,069
separate Edition where it pre-installed

00:35:40,460 --> 00:35:45,260
some stuff and then and then you have to

00:35:43,069 --> 00:35:50,510
set some sim links and some settings and

00:35:45,260 --> 00:35:52,309
then reboots and so there's a number of

00:35:50,510 --> 00:35:54,200
reasons of that first of you needed a

00:35:52,309 --> 00:35:57,619
couple of pieces right you need the in

00:35:54,200 --> 00:35:59,990
for example for Korean you need the Ibis

00:35:57,619 --> 00:36:02,480
daemon so that's one package but then

00:35:59,990 --> 00:36:06,080
you need a boss - hunger which is the

00:36:02,480 --> 00:36:07,790
korean input method so now you

00:36:06,080 --> 00:36:10,370
tribution perspective you get the

00:36:07,790 --> 00:36:13,220
problem of at what time should I

00:36:10,370 --> 00:36:16,970
actually pull in that Ibis Hangul

00:36:13,220 --> 00:36:19,520
package like how do I know it's a it's a

00:36:16,970 --> 00:36:21,380
it's a Korean system so effectively what

00:36:19,520 --> 00:36:23,600
people need to do is something a little

00:36:21,380 --> 00:36:25,880
bit like language pack install or codec

00:36:23,600 --> 00:36:27,680
install where if you go into system

00:36:25,880 --> 00:36:29,780
settings and you add Korean as an input

00:36:27,680 --> 00:36:31,730
language system settings actually needs

00:36:29,780 --> 00:36:35,750
to tell your system package manager that

00:36:31,730 --> 00:36:38,330
you want to install I was angle so what

00:36:35,750 --> 00:36:41,180
distributions need to do is to provide

00:36:38,330 --> 00:36:43,100
an easy interface for us to say we want

00:36:41,180 --> 00:36:45,110
Korean support and you install

00:36:43,100 --> 00:36:46,700
everything that that means so you need

00:36:45,110 --> 00:36:48,260
to have sort of bundle and some

00:36:46,700 --> 00:36:50,090
distributions already have that as

00:36:48,260 --> 00:36:52,370
dependencies of their language packs and

00:36:50,090 --> 00:36:54,830
so on so like a lot of the

00:36:52,370 --> 00:36:58,280
infrastructure is already there just use

00:36:54,830 --> 00:37:00,380
this integration seems and the other

00:36:58,280 --> 00:37:02,450
stuff that's difficult is mostly on the

00:37:00,380 --> 00:37:04,250
plasma side like even if you have all

00:37:02,450 --> 00:37:05,990
the packages installed you still need to

00:37:04,250 --> 00:37:08,030
do the manual step if you start with an

00:37:05,990 --> 00:37:10,340
English system of adding the panel

00:37:08,030 --> 00:37:15,200
widget and then you need to go through

00:37:10,340 --> 00:37:17,600
the panel budget to add the pipe and the

00:37:15,200 --> 00:37:20,960
Korean input method to your list of

00:37:17,600 --> 00:37:22,550
active input methods and I pass so from

00:37:20,960 --> 00:37:25,490
the user perspective there's install

00:37:22,550 --> 00:37:29,240
packages panel widget configure input

00:37:25,490 --> 00:37:31,040
method Demond start using and you need

00:37:29,240 --> 00:37:33,380
expert knowledge to do each of those

00:37:31,040 --> 00:37:35,060
steps and so on the plasma side we need

00:37:33,380 --> 00:37:37,490
to fix system settings so you only need

00:37:35,060 --> 00:37:39,140
to do one thing and system settings

00:37:37,490 --> 00:37:42,920
needs to interface with the distribution

00:37:39,140 --> 00:37:45,950
part to get the stuff installed but

00:37:42,920 --> 00:37:47,780
angry like why are you saying here I'm

00:37:45,950 --> 00:37:49,160
here why are you saying that it's

00:37:47,780 --> 00:37:49,490
actually the district's problem right

00:37:49,160 --> 00:37:51,530
now

00:37:49,490 --> 00:37:53,900
if plasma knows that it's in Korean

00:37:51,530 --> 00:37:56,000
plasma should install whatever takes and

00:37:53,900 --> 00:37:58,520
make sure that it shows in Korean yeah

00:37:56,000 --> 00:38:01,610
if used if when you install the distro

00:37:58,520 --> 00:38:03,260
you select Korean Prime I should be

00:38:01,610 --> 00:38:06,640
installing whatever the paralyzer done

00:38:03,260 --> 00:38:10,280
so so did your job not other people's

00:38:06,640 --> 00:38:11,600
you're right so that's it's interesting

00:38:10,280 --> 00:38:13,400
that's a reflection of what the

00:38:11,600 --> 00:38:15,230
landscape currently is so we have

00:38:13,400 --> 00:38:16,590
fragmentation right we have eyebrows on

00:38:15,230 --> 00:38:19,050
FCI TX now

00:38:16,590 --> 00:38:21,660
on openSUSE depending on which locale

00:38:19,050 --> 00:38:23,790
you install you will actually get one or

00:38:21,660 --> 00:38:27,920
the other because what the users of

00:38:23,790 --> 00:38:31,170
openSUSE said to openSUSE is we are

00:38:27,920 --> 00:38:33,120
Chinese we prefer our CIT X because it

00:38:31,170 --> 00:38:34,980
works better and some other language

00:38:33,120 --> 00:38:36,570
users still openSUSE we prefer IBUs

00:38:34,980 --> 00:38:39,150
because it works better for our language

00:38:36,570 --> 00:38:41,130
so openSUSE currently has the

00:38:39,150 --> 00:38:45,300
intelligence of installing the right

00:38:41,130 --> 00:38:46,770
staff and I agree that we need to uplift

00:38:45,300 --> 00:38:50,370
this into plasma and it needs to be

00:38:46,770 --> 00:38:52,140
plasma calling the shots and we need we

00:38:50,370 --> 00:38:53,940
may have to make a hard decision of

00:38:52,140 --> 00:38:55,740
which input method diamond we want to

00:38:53,940 --> 00:38:58,410
support which is a really political

00:38:55,740 --> 00:39:00,900
thing and Katie likes to be conflict

00:38:58,410 --> 00:39:04,290
averse and so we just support everything

00:39:00,900 --> 00:39:07,380
and then you get multiple multiplying

00:39:04,290 --> 00:39:09,630
off of integration seems so we need to

00:39:07,380 --> 00:39:11,310
realize that it's our responsibility and

00:39:09,630 --> 00:39:17,370
that we may need to ruffle some feathers

00:39:11,310 --> 00:39:19,440
and and just to to point out Nome Nome

00:39:17,370 --> 00:39:22,140
has to setting stuff pretty well done

00:39:19,440 --> 00:39:25,560
and one of the reasons is that they

00:39:22,140 --> 00:39:28,290
decided to only support Ibis but if we

00:39:25,560 --> 00:39:30,690
decide to only support a boss we already

00:39:28,290 --> 00:39:36,210
piss off several plasma developers who

00:39:30,690 --> 00:39:38,310
also have CIT X it's a hard situation ok

00:39:36,210 --> 00:39:40,890
this is all the time that we have so

00:39:38,310 --> 00:39:41,850
let's think I can

00:39:40,890 --> 00:39:44,230
[Music]

00:39:41,850 --> 00:39:44,230

YouTube URL: https://www.youtube.com/watch?v=wE0KDabPfsQ


