Title: Jonathan Riddell - KDE Neon - QtCon Akademy 2016
Publication date: 2016-09-04
Playlist: QtCon Akademy 2016
Description: 
	KDE neon is a project to bring the latest from KDE to our users quickly and easily.  We will discuss what we have achieved to date, how it can be used by the KDE community and our software users and our plans for the future.

Riddell
Captions: 
	00:00:04,549 --> 00:00:08,790
alright let's get started again our

00:00:06,629 --> 00:00:12,780
speakers this afternoon are some guy

00:00:08,790 --> 00:00:14,630
named sitter and Jonathan riddle because

00:00:12,780 --> 00:00:17,070
nobody can spell his name apparently

00:00:14,630 --> 00:00:25,699
though we talked about que te neon and

00:00:17,070 --> 00:00:29,840
take it away guys yeah hello so case

00:00:25,699 --> 00:00:29,840
turning 20 years of his medals

00:00:30,800 --> 00:00:37,710
unfortunately in that the processes we

00:00:35,280 --> 00:00:40,410
employ hasn't haven't really changed for

00:00:37,710 --> 00:00:42,270
20 years what is a bit peculiar because

00:00:40,410 --> 00:00:45,090
the industry has moved on right then the

00:00:42,270 --> 00:00:47,550
industry Steph ops is all the rage it's

00:00:45,090 --> 00:00:49,110
a continuous cycle of you cared and then

00:00:47,550 --> 00:00:52,879
you deploy and then you look at what you

00:00:49,110 --> 00:00:55,980
deployed and then encode some more but

00:00:52,879 --> 00:00:58,050
in in terms of how we release our

00:00:55,980 --> 00:01:01,559
software we haven't really adopted this

00:00:58,050 --> 00:01:02,730
what we do is we have a release cycle

00:01:01,559 --> 00:01:04,589
where we do care then we have the

00:01:02,730 --> 00:01:07,140
feature praise then we release the

00:01:04,589 --> 00:01:09,570
software a source code and then we leave

00:01:07,140 --> 00:01:13,260
it to other people to take this source

00:01:09,570 --> 00:01:15,420
code and turn it into bindings and so in

00:01:13,260 --> 00:01:18,509
a way it hasn't really changed since

00:01:15,420 --> 00:01:21,290
David for a first uploaded cake on Picon

00:01:18,509 --> 00:01:23,850
some ftp server many many years ago and

00:01:21,290 --> 00:01:26,700
Stefano cooler would take this source

00:01:23,850 --> 00:01:32,670
code and turn it into a binary for

00:01:26,700 --> 00:01:35,729
people to actually use and so John and I

00:01:32,670 --> 00:01:37,680
we went to California with a part of the

00:01:35,729 --> 00:01:40,320
plasma to you and we fought it a good

00:01:37,680 --> 00:01:44,250
idea to go surfing there for no other

00:01:40,320 --> 00:01:46,530
reason than that and we any details

00:01:44,250 --> 00:01:48,930
right um releasing software is a lot

00:01:46,530 --> 00:01:50,640
like waves right it's there's a release

00:01:48,930 --> 00:01:52,470
and then there's like this massive wave

00:01:50,640 --> 00:01:54,990
of stuff that you need to do and it's

00:01:52,470 --> 00:01:58,799
all very horrible from the integration

00:01:54,990 --> 00:02:02,310
point of view right frameworks as we've

00:01:58,799 --> 00:02:04,100
heard is 70 tar balls or so who's going

00:02:02,310 --> 00:02:07,079
to do that hold at once right

00:02:04,100 --> 00:02:08,970
integrating it to all at once it's not

00:02:07,079 --> 00:02:09,670
practical from from the integration

00:02:08,970 --> 00:02:12,250
point of view

00:02:09,670 --> 00:02:14,980
because you're doing lots of change all

00:02:12,250 --> 00:02:18,640
at once say there's gonna be problems

00:02:14,980 --> 00:02:21,790
you've got a mess up just because of how

00:02:18,640 --> 00:02:23,410
it's working and jonathan is the release

00:02:21,790 --> 00:02:25,599
manager football and he also doesn't

00:02:23,410 --> 00:02:27,730
like it because as a release manager

00:02:25,599 --> 00:02:29,410
you're sort of you're putting your name

00:02:27,730 --> 00:02:31,060
on the release right you're responsible

00:02:29,410 --> 00:02:33,910
that this is going to be a good thing

00:02:31,060 --> 00:02:36,400
and how can you how can you reasonably

00:02:33,910 --> 00:02:38,140
do this if it is very hard for people to

00:02:36,400 --> 00:02:42,910
actually try software before it is

00:02:38,140 --> 00:02:47,400
released and so we decided to do a thing

00:02:42,910 --> 00:02:50,950
we call NIM nanny on is a cool new way

00:02:47,400 --> 00:02:54,280
we or rather the way we imagined kitty

00:02:50,950 --> 00:02:56,709
software should be done which is without

00:02:54,280 --> 00:02:59,319
the strict separation or for creating

00:02:56,709 --> 00:03:01,540
code releasing code and then having

00:02:59,319 --> 00:03:04,870
someone else someone unrelated in fact

00:03:01,540 --> 00:03:07,870
other organizations integrate the code

00:03:04,870 --> 00:03:10,750
and Neal tries to softness neon very

00:03:07,870 --> 00:03:13,180
much is about getting KD software to the

00:03:10,750 --> 00:03:17,620
users to testers to developers as

00:03:13,180 --> 00:03:19,180
quickly as possible and so we looked at

00:03:17,620 --> 00:03:21,370
the PlayBook that the industry employs

00:03:19,180 --> 00:03:23,769
in order to do this continuous release I

00:03:21,370 --> 00:03:26,850
clipping and we set up a Jenkins

00:03:23,769 --> 00:03:30,880
instance which is now cook building

00:03:26,850 --> 00:03:34,480
kitty software continuously in a way

00:03:30,880 --> 00:03:37,269
that can be installed and used by us by

00:03:34,480 --> 00:03:41,620
users by everyone who's interested

00:03:37,269 --> 00:03:45,280
really and it set up under the KD

00:03:41,620 --> 00:03:47,859
umbrella so Eric ad developer can go to

00:03:45,280 --> 00:03:52,060
build on Ian that Katie to talk and

00:03:47,859 --> 00:03:54,850
trigger ability if you so choose those

00:03:52,060 --> 00:03:57,670
are the packaging so the essentially the

00:03:54,850 --> 00:04:02,530
ideal instructions for how do I turn

00:03:57,670 --> 00:04:05,140
this source code into a binary it's also

00:04:02,530 --> 00:04:07,359
hosted on git repositories that are

00:04:05,140 --> 00:04:09,459
under the ke umbrella so every KD

00:04:07,359 --> 00:04:12,609
developer can go there and tweak with

00:04:09,459 --> 00:04:15,190
the packaging right and we have a lot of

00:04:12,609 --> 00:04:18,549
technology in there that prevents things

00:04:15,190 --> 00:04:20,709
to break for the user so you can sort of

00:04:18,549 --> 00:04:22,120
go wild ride it's gone

00:04:20,709 --> 00:04:24,280
turn everything red and then you will

00:04:22,120 --> 00:04:26,470
probably get an angry mail from me but

00:04:24,280 --> 00:04:28,900
you can do it right that's kind of the

00:04:26,470 --> 00:04:31,120
point we are not separating between

00:04:28,900 --> 00:04:34,990
who's doing the the application source

00:04:31,120 --> 00:04:36,610
code and who's doing the integration now

00:04:34,990 --> 00:04:39,280
we started off with frameworks and

00:04:36,610 --> 00:04:42,069
plasma because clearly those are the the

00:04:39,280 --> 00:04:44,590
core products that we're producing for

00:04:42,069 --> 00:04:46,509
linux on the one hand the foundations

00:04:44,590 --> 00:04:50,139
will build upon the frameworks and

00:04:46,509 --> 00:04:53,500
plasma of course being the the workspace

00:04:50,139 --> 00:04:55,330
that everyone should be using really

00:04:53,500 --> 00:04:59,949
because it is the best work space isn't

00:04:55,330 --> 00:05:03,310
it absolutely but and recently we also

00:04:59,949 --> 00:05:05,110
started doing application releases extra

00:05:03,310 --> 00:05:07,210
gear in the extrication creative things

00:05:05,110 --> 00:05:10,150
of generally all the applications that

00:05:07,210 --> 00:05:15,300
we have in addition to frameworks and

00:05:10,150 --> 00:05:17,949
plasma and it's really cool and it's

00:05:15,300 --> 00:05:20,319
chucking along nicely and the really

00:05:17,949 --> 00:05:23,470
cool thing is and this is sort of a

00:05:20,319 --> 00:05:25,990
hidden motivation is packaging and

00:05:23,470 --> 00:05:29,889
integrating software for the longest of

00:05:25,990 --> 00:05:32,800
times has been a very manual process it

00:05:29,889 --> 00:05:34,449
was David for uploading the tarball

00:05:32,800 --> 00:05:36,759
someone else fetching the tarball

00:05:34,449 --> 00:05:38,650
building the tarball the table would not

00:05:36,759 --> 00:05:40,360
build because dependencies were missing

00:05:38,650 --> 00:05:41,710
someone goes off finds the dependencies

00:05:40,360 --> 00:05:43,870
built the dependencies it is a really

00:05:41,710 --> 00:05:47,620
messy process and it is cumbersome and

00:05:43,870 --> 00:05:50,620
awful and so the hidden motivation in a

00:05:47,620 --> 00:05:52,810
way is that everything is automated like

00:05:50,620 --> 00:05:56,349
doing a frameworks release for neon is

00:05:52,810 --> 00:05:58,719
clicking a button and then machines do

00:05:56,349 --> 00:06:02,530
this their stuff and at the end comes

00:05:58,719 --> 00:06:07,120
out a binary that we can install and and

00:06:02,530 --> 00:06:09,340
induce the entire thing is driven by

00:06:07,120 --> 00:06:12,610
something we call pangea tooling when

00:06:09,340 --> 00:06:17,409
you're tooling is in the process of

00:06:12,610 --> 00:06:19,120
sensors tooling for CI systems it does a

00:06:17,409 --> 00:06:21,190
lot of stuff which basically sets up

00:06:19,120 --> 00:06:24,909
taco images manager stock images life

00:06:21,190 --> 00:06:28,060
cycles and whatnot it is a fairly

00:06:24,909 --> 00:06:31,230
expensive library as well that just does

00:06:28,060 --> 00:06:33,360
stuff relating to see I and

00:06:31,230 --> 00:06:36,690
it isn't really a surprise that the same

00:06:33,360 --> 00:06:39,210
tooling is used for a debian CI rohan

00:06:36,690 --> 00:06:41,520
guard is running which basically does

00:06:39,210 --> 00:06:44,550
the same thing but on a debian core

00:06:41,520 --> 00:06:47,160
system and the same technology is being

00:06:44,550 --> 00:06:50,640
used to to build the plasma mobile

00:06:47,160 --> 00:06:52,530
prototypes we're doing the entire thing

00:06:50,640 --> 00:06:54,450
is written in Ruby with some exceptions

00:06:52,530 --> 00:06:55,980
there's actually many different

00:06:54,450 --> 00:07:00,570
languages involved but the core i would

00:06:55,980 --> 00:07:05,610
say 95% to ruby and it's all unit tested

00:07:00,570 --> 00:07:10,410
and lovely in addition to that we also

00:07:05,610 --> 00:07:13,170
have a repository where we host the

00:07:10,410 --> 00:07:16,260
binaries now we are using depp as the

00:07:13,170 --> 00:07:20,220
binary format because we we know depth

00:07:16,260 --> 00:07:22,230
we know how they work we are probably

00:07:20,220 --> 00:07:25,260
reasonably good at creating them i would

00:07:22,230 --> 00:07:27,540
say and so a place the software use for

00:07:25,260 --> 00:07:29,700
that the entire thing is being built in

00:07:27,540 --> 00:07:33,390
the cloud because scalability and

00:07:29,700 --> 00:07:35,220
whatnot we distribute files / files that

00:07:33,390 --> 00:07:38,400
kadel torque the established neural

00:07:35,220 --> 00:07:41,310
network we also use for source tar balls

00:07:38,400 --> 00:07:44,010
for the longest of times and recently

00:07:41,310 --> 00:07:46,440
we've got a new get set up that is

00:07:44,010 --> 00:07:49,050
basically exactly what we have for the

00:07:46,440 --> 00:07:51,270
source code it just runs separately

00:07:49,050 --> 00:07:54,530
because basically what Neil needs to do

00:07:51,270 --> 00:07:56,880
is have for every KDA positive

00:07:54,530 --> 00:07:58,410
repository we have neon would have a

00:07:56,880 --> 00:08:03,380
mirror repository with the packaging

00:07:58,410 --> 00:08:05,460
instructions for the code repository and

00:08:03,380 --> 00:08:08,040
importantly that repository because

00:08:05,460 --> 00:08:11,280
we're a KD project everyone who's a KD

00:08:08,040 --> 00:08:14,580
developer or 1000 odd people with get

00:08:11,280 --> 00:08:16,110
account can make fixes directly to it so

00:08:14,580 --> 00:08:18,510
there's no more a case where you install

00:08:16,110 --> 00:08:20,580
it in you go well you didn't add that

00:08:18,510 --> 00:08:22,470
far in the right place everybody in

00:08:20,580 --> 00:08:24,540
kitty can make those fixes directly and

00:08:22,470 --> 00:08:26,910
then they can build them and then they

00:08:24,540 --> 00:08:29,400
can test them directly and trivially and

00:08:26,910 --> 00:08:30,750
so the whole process becomes far more

00:08:29,400 --> 00:08:32,490
smoother because there isn't an

00:08:30,750 --> 00:08:34,260
artificial separation between the people

00:08:32,490 --> 00:08:37,860
making the source code and the people

00:08:34,260 --> 00:08:39,420
deploying it and we have to have a way

00:08:37,860 --> 00:08:41,969
to deploy it and so we have installable

00:08:39,420 --> 00:08:44,430
I so that you can download and install

00:08:41,969 --> 00:08:46,710
on your computer and we

00:08:44,430 --> 00:08:49,710
the foundation of ubuntu LTS edition

00:08:46,710 --> 00:08:51,450
which gets updated every two years so

00:08:49,710 --> 00:08:55,020
that's a nice stable edition that it

00:08:51,450 --> 00:08:58,440
unlike a rolling release setup like gen

00:08:55,020 --> 00:08:59,779
2 it's not going to take ages to update

00:08:58,440 --> 00:09:03,089
every morning and it's not going to

00:08:59,779 --> 00:09:05,040
break or yeah it won't break every

00:09:03,089 --> 00:09:06,149
morning but it has enough updates in it

00:09:05,040 --> 00:09:07,770
that is still relevant time for those

00:09:06,149 --> 00:09:11,300
two years it's still perfectly usable

00:09:07,770 --> 00:09:13,950
and we deliberately kept it quite light

00:09:11,300 --> 00:09:16,290
system that you installed by default the

00:09:13,950 --> 00:09:19,320
virtual design group picked a few

00:09:16,290 --> 00:09:21,930
programs which are the best integrated

00:09:19,320 --> 00:09:23,790
with plasma plasma is katie's flagship

00:09:21,930 --> 00:09:27,720
products and we design Neil on the right

00:09:23,790 --> 00:09:30,810
plasma so they picked VLC for videos and

00:09:27,720 --> 00:09:33,000
Firefox and dolphin an arc and Wendy and

00:09:30,810 --> 00:09:35,970
unless noted for default applications

00:09:33,000 --> 00:09:37,200
because people beyond those basic ones

00:09:35,970 --> 00:09:39,050
will have their own preferences and

00:09:37,200 --> 00:09:41,839
they're very welcome to install those

00:09:39,050 --> 00:09:45,779
the main thing that's missing is a PDF

00:09:41,839 --> 00:09:48,510
reader because oculars still Katie lips

00:09:45,779 --> 00:09:50,250
for and we only want supported

00:09:48,510 --> 00:09:52,680
maintained software and frameworks

00:09:50,250 --> 00:09:54,360
branch isn't gets merged so there's any

00:09:52,680 --> 00:09:59,040
all clear developers that would be

00:09:54,360 --> 00:10:01,170
lovely to have done pronto our packages

00:09:59,040 --> 00:10:04,380
in our items are available in three

00:10:01,170 --> 00:10:07,200
editions which mirror the three main use

00:10:04,380 --> 00:10:08,900
cases of the KDE sources and the most

00:10:07,200 --> 00:10:10,740
important one is the user edition

00:10:08,900 --> 00:10:13,380
because that's the most important

00:10:10,740 --> 00:10:15,750
results made by KDE and this uses the

00:10:13,380 --> 00:10:18,750
tarballs that we release on demo CD to

00:10:15,750 --> 00:10:21,630
torg so Devin is a technology cook watch

00:10:18,750 --> 00:10:25,529
files and those watch files scan

00:10:21,630 --> 00:10:27,060
download kp.org and before any new

00:10:25,529 --> 00:10:29,730
releases and when a new release comes

00:10:27,060 --> 00:10:33,000
along our Jenkins continuous integration

00:10:29,730 --> 00:10:36,450
builds over kicks into life and post

00:10:33,000 --> 00:10:39,260
them away automatically and the user

00:10:36,450 --> 00:10:41,399
edition has various qhx in terms of

00:10:39,260 --> 00:10:43,380
checking that it the release hasn't

00:10:41,399 --> 00:10:47,399
isn't a malicious version it's actually

00:10:43,380 --> 00:10:48,750
got the right signatures and that it

00:10:47,399 --> 00:10:51,240
successfully compile successfully

00:10:48,750 --> 00:10:54,180
installs doesn't break the previous

00:10:51,240 --> 00:10:56,640
stuff in previous ways and it's intended

00:10:54,180 --> 00:10:57,270
for people who are fans of KDE plasma or

00:10:56,640 --> 00:10:58,350
who

00:10:57,270 --> 00:11:00,990
interested in have heard about this

00:10:58,350 --> 00:11:02,430
awesome software the kitty great and who

00:11:00,990 --> 00:11:06,480
want to know the best way to get ahold

00:11:02,430 --> 00:11:08,670
of it but the other two editions are the

00:11:06,480 --> 00:11:11,070
developer editions and one is built from

00:11:08,670 --> 00:11:13,230
the get stable branches from which

00:11:11,070 --> 00:11:15,210
releases are made and what is matronly

00:11:13,230 --> 00:11:17,640
get unstable branches the master

00:11:15,210 --> 00:11:19,590
branches and that's intended for people

00:11:17,640 --> 00:11:22,500
who want to be active contributors who

00:11:19,590 --> 00:11:24,990
are either coders like many people here

00:11:22,500 --> 00:11:26,760
or who have find a bug maybe in the user

00:11:24,990 --> 00:11:29,760
edition maybe there's a reported a bug

00:11:26,760 --> 00:11:31,920
but the developer says well as no use to

00:11:29,760 --> 00:11:34,740
me that that stuff is last year last

00:11:31,920 --> 00:11:37,470
month's code and need a way to get the

00:11:34,740 --> 00:11:40,470
latest stuff and this is a good answer

00:11:37,470 --> 00:11:42,090
to the KD developers can give to people

00:11:40,470 --> 00:11:45,140
of how you get latest on how you test

00:11:42,090 --> 00:11:50,010
your effects is gone is not a question

00:11:45,140 --> 00:11:53,250
with a question um I like she the first

00:11:50,010 --> 00:11:56,250
one is not a question i started using

00:11:53,250 --> 00:12:00,450
the get unstable builds also for

00:11:56,250 --> 00:12:03,330
confirming fixes for problems so user

00:12:00,450 --> 00:12:04,980
would come on back Zilla i'm running the

00:12:03,330 --> 00:12:07,800
latest stable i have this in that

00:12:04,980 --> 00:12:10,020
problem i would go yeah we did a whole

00:12:07,800 --> 00:12:14,490
bunch of changes quickly test we get

00:12:10,020 --> 00:12:18,030
unstable imagens live CD so no harm just

00:12:14,490 --> 00:12:21,810
takes a bit of time two days later we

00:12:18,030 --> 00:12:24,900
fix something and i can hit the rebuild

00:12:21,810 --> 00:12:27,090
button and ask the user pretty much the

00:12:24,900 --> 00:12:29,670
next day but can you confirm this is

00:12:27,090 --> 00:12:33,840
fixed that's extremely valuable to me

00:12:29,670 --> 00:12:36,630
because i don't have to wait until well

00:12:33,840 --> 00:12:37,980
basically months until updates at the

00:12:36,630 --> 00:12:41,310
user so i can actually get confirmed

00:12:37,980 --> 00:12:43,470
that i fixed the bug but i can even fix

00:12:41,310 --> 00:12:48,300
the bug that i introduced with my fix

00:12:43,470 --> 00:12:52,110
before it idiots release the other thing

00:12:48,300 --> 00:12:54,810
is wasn't the planet for before five

00:12:52,110 --> 00:12:57,059
point nine is released that we create an

00:12:54,810 --> 00:13:00,359
additional user edition with

00:12:57,059 --> 00:13:03,209
what about 5.8 oh yes so with 5.8 being

00:13:00,359 --> 00:13:05,309
an mts release we have the intention of

00:13:03,209 --> 00:13:07,169
having another edition which would be

00:13:05,309 --> 00:13:13,319
the LDS Swedish edition and trekking

00:13:07,169 --> 00:13:15,449
five-minute so katie has often shipped

00:13:13,319 --> 00:13:18,449
software its users before that's not

00:13:15,449 --> 00:13:22,049
particularly new critter put their code

00:13:18,449 --> 00:13:25,109
in in the steam store plasma active had

00:13:22,049 --> 00:13:27,029
a reference release back in the day but

00:13:25,109 --> 00:13:28,859
poopin installed to test from the class

00:13:27,029 --> 00:13:30,329
back to developers to say this is what

00:13:28,859 --> 00:13:34,109
it should be looking and feeling like

00:13:30,329 --> 00:13:37,009
Jay come pre-cut Sarah source code in in

00:13:34,109 --> 00:13:41,069
the Android store in Google Play Store

00:13:37,009 --> 00:13:43,469
and plasma mobile shipped images as well

00:13:41,069 --> 00:13:45,059
from from when that was launched last

00:13:43,469 --> 00:13:48,719
year but was news continues to the

00:13:45,059 --> 00:13:51,569
readers that the the software is updated

00:13:48,719 --> 00:13:54,149
as soon as as soon as it's either

00:13:51,569 --> 00:13:55,829
recorded for the unstable edition or as

00:13:54,149 --> 00:13:57,709
soon as that developers say this is good

00:13:55,829 --> 00:14:00,869
for release for the stable edition and

00:13:57,709 --> 00:14:02,489
KDE as a project exists because of the

00:14:00,869 --> 00:14:04,199
internet and the internet about this

00:14:02,489 --> 00:14:07,679
which stranger katie hasn't embraced

00:14:04,199 --> 00:14:09,239
continuous delivery until now that we've

00:14:07,679 --> 00:14:11,909
had this very slow chunky model and

00:14:09,239 --> 00:14:13,379
having a model where users just can

00:14:11,909 --> 00:14:16,319
automatically get the rate of stuff on

00:14:13,379 --> 00:14:17,999
their system if something which is quite

00:14:16,319 --> 00:14:25,439
novel but also something which we should

00:14:17,999 --> 00:14:29,579
be ideally placed to take parkland much

00:14:25,439 --> 00:14:32,449
of the work for that came in that became

00:14:29,579 --> 00:14:37,019
the KD nyan and the Pangaea tools

00:14:32,449 --> 00:14:39,299
started with plasma mobile because that

00:14:37,019 --> 00:14:41,729
was a system that needed to be delivered

00:14:39,299 --> 00:14:43,319
directly into the hands of users just

00:14:41,729 --> 00:14:45,629
having the source code wasn't anybody

00:14:43,319 --> 00:14:47,129
any use to anybody so a lot of that

00:14:45,629 --> 00:14:50,759
continuous integration stuff with

00:14:47,129 --> 00:14:54,659
jenkins is what has become what we now

00:14:50,759 --> 00:14:56,729
use to build Cadini on and is now

00:14:54,659 --> 00:15:00,299
flipped over because cater plasma mobile

00:14:56,729 --> 00:15:04,019
is based on it's based on kitty neon now

00:15:00,299 --> 00:15:06,239
and in the free software world you know

00:15:04,019 --> 00:15:07,859
buddy if if somebody isn't using your

00:15:06,239 --> 00:15:09,720
source code or somebody isn't using your

00:15:07,859 --> 00:15:11,910
project to create a new project

00:15:09,720 --> 00:15:14,490
and in our case we now have not just

00:15:11,910 --> 00:15:16,290
plasma mobile but also maybe Mary Lennox

00:15:14,490 --> 00:15:18,810
as another linux distribution that has

00:15:16,290 --> 00:15:21,540
taken Cadini on the side that's a good

00:15:18,810 --> 00:15:23,269
base to make their project on and so

00:15:21,540 --> 00:15:26,579
they they come with a far more

00:15:23,269 --> 00:15:28,019
fleshed-out version default install that

00:15:26,579 --> 00:15:32,399
people can try and there's a big user

00:15:28,019 --> 00:15:35,250
case for that kind of stuff we have a

00:15:32,399 --> 00:15:37,370
shiny responsive html5 happy website

00:15:35,250 --> 00:15:40,620
again katie has been pretty slow at

00:15:37,370 --> 00:15:41,970
picking up the new technologies that

00:15:40,620 --> 00:15:43,829
have happened in the web in the last few

00:15:41,970 --> 00:15:45,870
years the website looks pretty slow so

00:15:43,829 --> 00:15:50,910
we got chem formats who very kindly made

00:15:45,870 --> 00:15:53,490
this pretty design for us and it worked

00:15:50,910 --> 00:15:55,319
very nice and there's a hope that it the

00:15:53,490 --> 00:15:57,240
same design will be used on the main

00:15:55,319 --> 00:16:01,279
kiddie website so if anybody wants to

00:15:57,240 --> 00:16:04,920
pick that up that's very welcome to do

00:16:01,279 --> 00:16:07,199
and and social media is something else

00:16:04,920 --> 00:16:09,990
that kitty was always quite slow at

00:16:07,199 --> 00:16:11,730
picking up it's the main way that people

00:16:09,990 --> 00:16:13,100
want to use the internet these days main

00:16:11,730 --> 00:16:15,839
way people get their news and

00:16:13,100 --> 00:16:19,620
communicate with people and candy what

00:16:15,839 --> 00:16:21,689
has been a bit slow at having making

00:16:19,620 --> 00:16:25,829
good use of that and this still isn't a

00:16:21,689 --> 00:16:27,990
very good strategy for it and there's

00:16:25,829 --> 00:16:30,240
still these helps that I think should be

00:16:27,990 --> 00:16:32,069
fixed and fixed and tighten up like this

00:16:30,240 --> 00:16:33,540
is admin to have access to the social

00:16:32,069 --> 00:16:35,879
media account so something disappears

00:16:33,540 --> 00:16:37,800
the new items to them but with neon

00:16:35,879 --> 00:16:40,410
we're working to make sure that the news

00:16:37,800 --> 00:16:41,610
it wasn't some other new news feed that

00:16:40,410 --> 00:16:43,139
we've set up we were just put it on

00:16:41,610 --> 00:16:45,269
facebook and google+ and twitter because

00:16:43,139 --> 00:16:47,699
that's where people expect news to be on

00:16:45,269 --> 00:16:49,379
and with the user support forums again

00:16:47,699 --> 00:16:51,779
they're on the pre-existing forums and

00:16:49,379 --> 00:16:53,069
as a KD project we can use the katy

00:16:51,779 --> 00:16:54,779
forums because that's where people

00:16:53,069 --> 00:16:56,870
expect it to be set a question in the

00:16:54,779 --> 00:16:56,870
back

00:16:59,100 --> 00:17:07,870
so I assume as a esperar user I'm not

00:17:03,209 --> 00:17:10,150
welcome or something yes where is that I

00:17:07,870 --> 00:17:11,709
know nothing about the aspirin so that's

00:17:10,150 --> 00:17:13,089
why I happened not to put it on but I

00:17:11,709 --> 00:17:22,120
would love to be educated and informed

00:17:13,089 --> 00:17:24,970
and to add that to our collection and

00:17:22,120 --> 00:17:27,850
this line is meaning that I've spent a

00:17:24,970 --> 00:17:30,370
lot of time in the last 15 or that I've

00:17:27,850 --> 00:17:33,280
worked with KDE making sure that every

00:17:30,370 --> 00:17:34,810
that the source code is free and that it

00:17:33,280 --> 00:17:37,930
complies properly with all the correct

00:17:34,810 --> 00:17:40,000
procedures and whatnot and so typically

00:17:37,930 --> 00:17:41,740
that's meant removing things like rfcs

00:17:40,000 --> 00:17:45,670
which aren't quite under the free

00:17:41,740 --> 00:17:47,560
definition or removing PDF files for

00:17:45,670 --> 00:17:49,060
example because pdfs aren't modifiable

00:17:47,560 --> 00:17:52,120
but people think that they're free

00:17:49,060 --> 00:17:56,230
because they make themselves and and

00:17:52,120 --> 00:17:58,330
these days that means removing minified

00:17:56,230 --> 00:17:59,830
javascript because people think minified

00:17:58,330 --> 00:18:01,360
javascript the source code of course

00:17:59,830 --> 00:18:04,000
it's not modifiable so it's not source

00:18:01,360 --> 00:18:06,810
code so one thing with one of the checks

00:18:04,000 --> 00:18:11,020
the kitty neon does is making sure that

00:18:06,810 --> 00:18:13,930
that everything is free software can be

00:18:11,020 --> 00:18:18,310
automated that testing can be automated

00:18:13,930 --> 00:18:20,560
and so now we can fix that or I can tell

00:18:18,310 --> 00:18:22,870
the maintainer to fix that before we

00:18:20,560 --> 00:18:26,310
release the source code in a slight lean

00:18:22,870 --> 00:18:28,840
on freestyle and not as a word of

00:18:26,310 --> 00:18:30,430
warning one of interest well one new

00:18:28,840 --> 00:18:32,380
distribution methods come along we have

00:18:30,430 --> 00:18:35,200
to make sure those are compliant with

00:18:32,380 --> 00:18:36,790
the free software norms so with neon we

00:18:35,200 --> 00:18:38,350
make iso s and that means you also have

00:18:36,790 --> 00:18:40,480
to have source code I soils which is

00:18:38,350 --> 00:18:43,720
quite a big burden but important part

00:18:40,480 --> 00:18:44,950
that we do that but with App images and

00:18:43,720 --> 00:18:46,810
fat pack and other container East

00:18:44,950 --> 00:18:48,490
applications we have to work out what's

00:18:46,810 --> 00:18:50,980
the best way to make sure the source

00:18:48,490 --> 00:18:55,270
code is available to people and and

00:18:50,980 --> 00:19:00,340
there's been violations already by arc

00:18:55,270 --> 00:19:01,420
the the package archiver that have to be

00:19:00,340 --> 00:19:03,160
tidied up to make sure that's worth

00:19:01,420 --> 00:19:04,660
codes available and best practices there

00:19:03,160 --> 00:19:07,020
are still evolving and we need to work

00:19:04,660 --> 00:19:07,020
those out

00:19:07,230 --> 00:19:12,250
something a kitty is always lacked as an

00:19:09,490 --> 00:19:13,990
image writer a way to put an ISO image

00:19:12,250 --> 00:19:16,210
onto a USB disk as the main way to

00:19:13,990 --> 00:19:18,460
install our our software's the

00:19:16,210 --> 00:19:21,220
Kickstarter to get it onto your computer

00:19:18,460 --> 00:19:23,650
as the operating system we looked around

00:19:21,220 --> 00:19:24,880
for the best one to use and rossa image

00:19:23,650 --> 00:19:28,450
writer which is made by a Russian

00:19:24,880 --> 00:19:29,950
project it's very nice one it's made

00:19:28,450 --> 00:19:31,150
with cute and is cross platform which is

00:19:29,950 --> 00:19:33,400
really important it's no use just having

00:19:31,150 --> 00:19:34,690
one that works on linux if if our target

00:19:33,400 --> 00:19:37,090
is to get people to convert from windows

00:19:34,690 --> 00:19:39,700
so that's nice to cross platform but it

00:19:37,090 --> 00:19:41,380
has a few problems you have to run that

00:19:39,700 --> 00:19:43,570
is root and so forth so I'm pleased to

00:19:41,380 --> 00:19:46,029
say that I've now managed to get the

00:19:43,570 --> 00:19:48,840
maintainer to turn into a que te project

00:19:46,029 --> 00:19:51,250
and we have a git repository for it and

00:19:48,840 --> 00:19:54,899
we'll be working on making sure that

00:19:51,250 --> 00:19:57,700
becomes a proper Katie project with with

00:19:54,899 --> 00:19:59,590
problems solved like using pork instead

00:19:57,700 --> 00:20:03,940
of roots and check some checking and so

00:19:59,590 --> 00:20:06,640
forth one of the site projects that

00:20:03,940 --> 00:20:08,380
we've done as part of neon or actually I

00:20:06,640 --> 00:20:11,020
started long before near on Rose I made

00:20:08,380 --> 00:20:13,690
as my way than images I suppose that

00:20:11,020 --> 00:20:18,250
will run Martin's beautiful work of

00:20:13,690 --> 00:20:21,100
Quinn running us as the wayland and this

00:20:18,250 --> 00:20:23,260
is Betty the fuzzy pic which was on the

00:20:21,100 --> 00:20:25,360
release announcement for plasmon nobody

00:20:23,260 --> 00:20:29,169
counted which i think is is slightly

00:20:25,360 --> 00:20:30,580
disappointing or I'm not sure but I

00:20:29,169 --> 00:20:33,399
think she should be our mascot for

00:20:30,580 --> 00:20:35,140
plasma Wayland and and as you see if

00:20:33,399 --> 00:20:36,880
she's a keen keen user of plasma way

00:20:35,140 --> 00:20:38,919
then because she can using these

00:20:36,880 --> 00:20:42,880
platformer indices which I now made

00:20:38,919 --> 00:20:44,470
through the neon platform and and so

00:20:42,880 --> 00:20:49,590
they're pretty trivial to just turn them

00:20:44,470 --> 00:20:51,490
as I attempt a couple of weeks so I

00:20:49,590 --> 00:20:54,779
install tracking of something that we

00:20:51,490 --> 00:20:58,240
talked about occasionally at at at

00:20:54,779 --> 00:21:00,399
academy and then said in previous talk

00:20:58,240 --> 00:21:03,850
that he wanted to find out what people

00:21:00,399 --> 00:21:05,230
use with Pimm and again with neon we

00:21:03,850 --> 00:21:07,600
want to find out does anybody see our

00:21:05,230 --> 00:21:11,559
stuff and where are they who are they

00:21:07,600 --> 00:21:13,450
what are they used for and so I put an

00:21:11,559 --> 00:21:15,190
ID tag in the update her and

00:21:13,450 --> 00:21:18,070
that we have web blogs and we can work

00:21:15,190 --> 00:21:19,899
out how many installs are and what

00:21:18,070 --> 00:21:21,429
additions they use so as a question to

00:21:19,899 --> 00:21:23,740
the audience who can guess of the three

00:21:21,429 --> 00:21:29,380
editions which ones are the most popular

00:21:23,740 --> 00:21:31,029
and a what order so you've got the two

00:21:29,380 --> 00:21:35,019
developer editions and the user edition

00:21:31,029 --> 00:21:39,570
which one is the most popular dev

00:21:35,019 --> 00:21:41,950
unstable yep any other suggestions this

00:21:39,570 --> 00:21:45,010
dev unstable is most popular with you

00:21:41,950 --> 00:21:46,779
well big surprise then good it's the

00:21:45,010 --> 00:21:50,139
user edition is by far the most popular

00:21:46,779 --> 00:21:53,110
it's got its got three times what the

00:21:50,139 --> 00:21:54,730
other editions have which is not no big

00:21:53,110 --> 00:21:58,299
surprise to me maybe a big surprise to

00:21:54,730 --> 00:22:00,370
you and next time is Dave staple and dev

00:21:58,299 --> 00:22:01,840
and then they've unstable and this site

00:22:00,370 --> 00:22:03,519
tells me that maybe our messaging is

00:22:01,840 --> 00:22:05,529
actually a bit incorrect because people

00:22:03,519 --> 00:22:08,049
I think we'll be installing dev stable

00:22:05,529 --> 00:22:10,330
because they think that that's the crack

00:22:08,049 --> 00:22:12,909
of the day but it's but it's a bit more

00:22:10,330 --> 00:22:15,070
stable than that one and in reality or

00:22:12,909 --> 00:22:17,110
use cases should be worth is this is

00:22:15,070 --> 00:22:19,210
still crap of the day and it can still

00:22:17,110 --> 00:22:20,980
contain new bugs that have been tested

00:22:19,210 --> 00:22:23,260
and if you're using this chumps are you

00:22:20,980 --> 00:22:25,059
want to be a tester who is able to give

00:22:23,260 --> 00:22:29,440
some feedback and report bugs set a

00:22:25,059 --> 00:22:31,450
question I've taken out the numbers here

00:22:29,440 --> 00:22:34,210
because we're not sure because people

00:22:31,450 --> 00:22:36,039
can remove the install tracking and so

00:22:34,210 --> 00:22:38,470
it doesn't have any particular absolute

00:22:36,039 --> 00:22:40,570
meaning but it's not many it's about a

00:22:38,470 --> 00:22:44,679
thousand so it's not like so like we're

00:22:40,570 --> 00:22:48,190
taking over the world with this but it's

00:22:44,679 --> 00:22:50,549
a interesting useful way to start a

00:22:48,190 --> 00:22:52,750
project I think so the next question is

00:22:50,549 --> 00:22:56,200
what are the top three countries that

00:22:52,750 --> 00:22:57,639
use KDE plasma as defined by neon who

00:22:56,200 --> 00:23:02,710
knows what would be the top three

00:22:57,639 --> 00:23:04,840
countries Germany many Germans here okay

00:23:02,710 --> 00:23:12,309
number one and what else would be in the

00:23:04,840 --> 00:23:15,240
top three all right Brazil mm-hmm USA

00:23:12,309 --> 00:23:15,240
somebody says yeah

00:23:18,960 --> 00:23:28,960
so again macedonia macedonia but

00:23:27,309 --> 00:23:31,150
probably not with neon so i guess it

00:23:28,960 --> 00:23:36,700
wouldn't be counted here so not much

00:23:31,150 --> 00:23:39,850
doing it but but it is this one is

00:23:36,700 --> 00:23:41,470
germany over here so well done that's

00:23:39,850 --> 00:23:44,049
right and there but then number two is

00:23:41,470 --> 00:23:46,299
united states which was said so it's

00:23:44,049 --> 00:23:47,620
maybe no immediate surprise but what's

00:23:46,299 --> 00:23:48,940
interesting to notice there's not a

00:23:47,620 --> 00:23:50,200
massive difference between the

00:23:48,940 --> 00:23:52,299
popularity in germany in the popularity

00:23:50,200 --> 00:23:54,040
in the United States but the number of

00:23:52,299 --> 00:23:55,030
Germans who are at this conference the

00:23:54,040 --> 00:23:57,820
number of Americans were those

00:23:55,030 --> 00:24:00,040
conference is mostly it's mostly laid to

00:23:57,820 --> 00:24:01,960
Americans and then bias member of

00:24:00,040 --> 00:24:03,940
Germans that tells me that we're missing

00:24:01,960 --> 00:24:06,280
out on potential member of the kiddie

00:24:03,940 --> 00:24:07,690
community who are using our soft serve

00:24:06,280 --> 00:24:11,470
but somehow have not been brought into

00:24:07,690 --> 00:24:13,270
the community how can we make Kelly

00:24:11,470 --> 00:24:30,040
greater get stop using pre pre greater

00:24:13,270 --> 00:24:32,710
cheese and then number three is Latvia

00:24:30,040 --> 00:24:35,380
and and who's from Latvia there's a

00:24:32,710 --> 00:24:37,419
mysterious Katy community there I'm not

00:24:35,380 --> 00:24:41,950
sure okay let's move on we wrong it's

00:24:37,419 --> 00:24:44,890
time yeah so as part of being

00:24:41,950 --> 00:24:47,770
responsible for the source codes as well

00:24:44,890 --> 00:24:50,049
as the integration side what we started

00:24:47,770 --> 00:24:54,429
to look at his security and authenticity

00:24:50,049 --> 00:24:56,830
of our stuff right only recently Linux

00:24:54,429 --> 00:24:58,840
Mint got their installation eyes are

00:24:56,830 --> 00:25:01,540
compromised and had malicious code in

00:24:58,840 --> 00:25:04,059
there and so what we started doing is

00:25:01,540 --> 00:25:06,309
doing a full signing chain which is what

00:25:04,059 --> 00:25:08,980
this means is that the release crib for

00:25:06,309 --> 00:25:11,410
plasma right now we'll assign the get

00:25:08,980 --> 00:25:14,260
tax it creates as well as the tarballs

00:25:11,410 --> 00:25:17,860
it creates this is then uploaded to the

00:25:14,260 --> 00:25:20,140
source servers we fetch them we verify

00:25:17,860 --> 00:25:22,780
that those are signed by keys we know

00:25:20,140 --> 00:25:23,680
and trust we then built them sign them

00:25:22,780 --> 00:25:25,950
again when

00:25:23,680 --> 00:25:28,930
they come out as the ISO with our

00:25:25,950 --> 00:25:31,810
specific iso signing key and so we have

00:25:28,930 --> 00:25:35,050
a full chain of authenticity and we can

00:25:31,810 --> 00:25:37,540
we know we are very certain that it's

00:25:35,050 --> 00:25:39,520
the software that we we expect it to be

00:25:37,540 --> 00:25:42,040
and I know that opensuse is already

00:25:39,520 --> 00:25:44,040
doing this as well and I hope that other

00:25:42,040 --> 00:25:46,540
districts will start doing it as well

00:25:44,040 --> 00:25:47,920
but there's still a long way to go

00:25:46,540 --> 00:25:52,180
frameworks and applications currently

00:25:47,920 --> 00:25:53,770
unsigned we yeah we tried to figure it

00:25:52,180 --> 00:25:57,580
out but we definitely need to do

00:25:53,770 --> 00:25:59,440
something because it is it is very

00:25:57,580 --> 00:26:01,030
important that we have ignored this for

00:25:59,440 --> 00:26:05,410
a very long time and we shouldn't any

00:26:01,030 --> 00:26:07,390
longer of course in the future as

00:26:05,410 --> 00:26:09,430
Jonathan mentioned containers are of

00:26:07,390 --> 00:26:12,670
course very interesting in hot topic

00:26:09,430 --> 00:26:14,830
right now so I took a bunch of Katie

00:26:12,670 --> 00:26:17,230
people and took to a snappy sprint

00:26:14,830 --> 00:26:19,930
snappy is one of the container formats

00:26:17,230 --> 00:26:22,180
that are being considered and we

00:26:19,930 --> 00:26:24,100
basically just made our requirements

00:26:22,180 --> 00:26:27,490
known and discussed the technology as

00:26:24,100 --> 00:26:29,800
hell and what we expect to happen and I

00:26:27,490 --> 00:26:31,510
should hope that we as carry-on very

00:26:29,800 --> 00:26:34,000
much at the frontier with regards to

00:26:31,510 --> 00:26:36,520
containerisation regardless of the the

00:26:34,000 --> 00:26:39,040
format and we do have a foot in the door

00:26:36,520 --> 00:26:41,070
snappy because of neon we can very

00:26:39,040 --> 00:26:43,630
cheaply create snappy packages and

00:26:41,070 --> 00:26:48,100
essentially during the snappy sprint

00:26:43,630 --> 00:26:50,590
risk recently we basically exposed all

00:26:48,100 --> 00:26:52,540
our applications also as snaps which you

00:26:50,590 --> 00:26:57,010
can install right now and run right now

00:26:52,540 --> 00:26:58,930
if you know where to find them so they

00:26:57,010 --> 00:27:00,880
are not tested there are a lot of things

00:26:58,930 --> 00:27:02,740
that we need to still figure out in

00:27:00,880 --> 00:27:05,320
order to to be able to ship them into

00:27:02,740 --> 00:27:08,770
production but we are very much on the

00:27:05,320 --> 00:27:10,120
right way there and with that we've come

00:27:08,770 --> 00:27:12,580
to questions if you're bored during

00:27:10,120 --> 00:27:14,370
questions you can read that which is the

00:27:12,580 --> 00:27:23,050
explanation of why neon is called miam

00:27:14,370 --> 00:27:25,240
say questions more questions now

00:27:23,050 --> 00:27:27,870
everyone's busy reading a fairly

00:27:25,240 --> 00:27:27,870
disappointing

00:27:28,550 --> 00:27:35,780
that's what happens when you're right

00:27:30,170 --> 00:27:38,480
long bedtime stories are whenever you

00:27:35,780 --> 00:27:41,540
going to host a key signing buff so that

00:27:38,480 --> 00:27:43,790
oh yeah so I'm going to look into doing

00:27:41,540 --> 00:27:45,890
a piece on in both tomorrow sometime

00:27:43,790 --> 00:27:52,010
during the week it would very much a

00:27:45,890 --> 00:27:55,600
good say yeah yes you mentioned you

00:27:52,010 --> 00:27:59,450
subtract and what I doing there and why

00:27:55,600 --> 00:28:02,690
well when you neon will ask for when

00:27:59,450 --> 00:28:06,050
when is the latest update and so I made

00:28:02,690 --> 00:28:08,030
it add the machine ID to to the URL for

00:28:06,050 --> 00:28:11,000
that so in the web logs we can look at

00:28:08,030 --> 00:28:12,620
the machine ID and we get a pretty

00:28:11,000 --> 00:28:15,440
decent idea of how many users were

00:28:12,620 --> 00:28:18,140
installed as part of it I'm going to do

00:28:15,440 --> 00:28:19,730
work is making a trivial to remove that

00:28:18,140 --> 00:28:24,530
for people who don't want to have the

00:28:19,730 --> 00:28:26,780
machines tracked and people who are told

00:28:24,530 --> 00:28:29,840
by that when they when they download

00:28:26,780 --> 00:28:31,370
about neon but yet but I'd be interested

00:28:29,840 --> 00:28:33,680
more feedback about how to make that

00:28:31,370 --> 00:28:37,250
more more friendly to people who don't

00:28:33,680 --> 00:28:38,690
want to be tracked and what are we doing

00:28:37,250 --> 00:28:42,200
with it well just the two graphs that I

00:28:38,690 --> 00:28:44,420
showed you there for now and and I'd be

00:28:42,200 --> 00:28:46,460
interested in knowing from people what

00:28:44,420 --> 00:28:47,750
what other graphs they would be

00:28:46,460 --> 00:28:50,540
interested in that we could make with

00:28:47,750 --> 00:28:53,270
this data and see if we could get more

00:28:50,540 --> 00:28:55,310
interesting information what who our

00:28:53,270 --> 00:28:57,140
users are and therefore who were missing

00:28:55,310 --> 00:29:08,780
or where the potentials are that we need

00:28:57,140 --> 00:29:16,060
to work harder all right any other

00:29:08,780 --> 00:29:16,060
questions then let us thank the speakers

00:29:23,299 --> 00:29:25,360

YouTube URL: https://www.youtube.com/watch?v=OWermoaDDUo


