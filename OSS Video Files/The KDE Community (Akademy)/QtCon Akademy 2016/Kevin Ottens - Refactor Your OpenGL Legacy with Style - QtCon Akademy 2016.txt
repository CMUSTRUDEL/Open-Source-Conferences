Title: Kevin Ottens - Refactor Your OpenGL Legacy with Style - QtCon Akademy 2016
Publication date: 2016-09-04
Playlist: QtCon Akademy 2016
Description: 
	Using OpenGL code with Qt is a long love story... long enough that there might be skeletons in the closet. Indeed, the OpenGL code of your Qt application could have been written before the modernization of the OpenGL API to exploit better GPUs. In this talk, we will walk through a technique to help refactor your old OpenGL code in the safest way possible and get it ready for the 21st century.

ervin
Captions: 
	00:00:04,339 --> 00:00:12,300
welcome everyone to that session so I'm

00:00:08,490 --> 00:00:16,619
covino tense I leaving to lose and in

00:00:12,300 --> 00:00:18,660
France and I work for k-dubb turns out

00:00:16,619 --> 00:00:20,850
that part time I'm also teacher at the

00:00:18,660 --> 00:00:25,050
University and one of my pet interests

00:00:20,850 --> 00:00:26,789
that project management but also testing

00:00:25,050 --> 00:00:31,650
techniques and refactoring techniques

00:00:26,789 --> 00:00:34,680
and I tend to teach that there and very

00:00:31,650 --> 00:00:37,770
often I get comments like yeah but I'm

00:00:34,680 --> 00:00:39,719
doing things with OpenGL or I have

00:00:37,770 --> 00:00:42,000
something which is graphical and then I

00:00:39,719 --> 00:00:43,950
cannot test it right that's very often

00:00:42,000 --> 00:00:48,360
the type of comment you get back in

00:00:43,950 --> 00:00:50,430
scary situations and so I design an

00:00:48,360 --> 00:00:53,550
exercise which basically walk you

00:00:50,430 --> 00:00:56,550
through a potential technique for this

00:00:53,550 --> 00:00:59,940
kind of situation in case you've seen

00:00:56,550 --> 00:01:05,369
one of my previous session because I

00:00:59,940 --> 00:01:08,400
want these two years ago about having

00:01:05,369 --> 00:01:10,080
old legacy code base and then you start

00:01:08,400 --> 00:01:13,400
to add test and you start to refactor it

00:01:10,080 --> 00:01:16,200
that's a bit in that in that same mood

00:01:13,400 --> 00:01:18,119
the difference being that it's highly

00:01:16,200 --> 00:01:20,880
graphical in that case why the case

00:01:18,119 --> 00:01:23,490
we've seen a couple of years ago was

00:01:20,880 --> 00:01:27,990
more about ya business rules and how to

00:01:23,490 --> 00:01:29,850
refactor that but that's that says main

00:01:27,990 --> 00:01:31,290
difference but that's really a game

00:01:29,850 --> 00:01:35,369
changer in the way you approach the

00:01:31,290 --> 00:01:38,700
thing one other thing is that when I

00:01:35,369 --> 00:01:41,939
presented a technique back then I talked

00:01:38,700 --> 00:01:45,329
about so we see that we put it plays a

00:01:41,939 --> 00:01:47,130
test which i call a pin test I said at

00:01:45,329 --> 00:01:50,250
the time so on the other exercise which

00:01:47,130 --> 00:01:52,320
is named eng delrose that you basically

00:01:50,250 --> 00:01:53,729
have two potential approach one which is

00:01:52,320 --> 00:01:55,649
accorded master when you basically

00:01:53,729 --> 00:01:58,920
duplicate your original system and then

00:01:55,649 --> 00:02:01,619
you run your tests against both the old

00:01:58,920 --> 00:02:03,960
and the new and verify by don't diverge

00:02:01,619 --> 00:02:05,549
but sometimes that's too expensive not

00:02:03,960 --> 00:02:07,710
with your situation like that we have

00:02:05,549 --> 00:02:09,630
here and then there are the record we

00:02:07,710 --> 00:02:15,330
play approach and that's what we are

00:02:09,630 --> 00:02:18,390
going to use in that case okay so let's

00:02:15,330 --> 00:02:20,550
complete with the context so the idea

00:02:18,390 --> 00:02:22,080
here is to simulate so you have to

00:02:20,550 --> 00:02:24,360
imagine right that's simplified

00:02:22,080 --> 00:02:27,450
situation because that just an exercise

00:02:24,360 --> 00:02:30,390
right that's generally something I run

00:02:27,450 --> 00:02:33,180
over the course of several hours smaller

00:02:30,390 --> 00:02:35,880
classes right and we debate what works

00:02:33,180 --> 00:02:37,830
what doesn't work won't be the case here

00:02:35,880 --> 00:02:41,160
so I would use a few tricks to actually

00:02:37,830 --> 00:02:43,470
fast forward a bit in there but the

00:02:41,160 --> 00:02:46,110
world contacts that's imagine that you

00:02:43,470 --> 00:02:49,410
draw up in you know jumping a new team

00:02:46,110 --> 00:02:53,490
and that team is already some legacy

00:02:49,410 --> 00:02:56,070
software in there and then you basically

00:02:53,490 --> 00:02:57,870
asked to add features in there or to

00:02:56,070 --> 00:03:00,840
refactor and then you have to wonder how

00:02:57,870 --> 00:03:04,620
do i how do I deal with that so again

00:03:00,840 --> 00:03:05,670
that's just an exercise right so keep in

00:03:04,620 --> 00:03:09,810
mind that the code base would be

00:03:05,670 --> 00:03:10,920
somewhat small but imagine that you

00:03:09,810 --> 00:03:13,770
would have to do something like that

00:03:10,920 --> 00:03:16,680
like tenfold right that would be much

00:03:13,770 --> 00:03:18,660
bigger and this one is actually inspired

00:03:16,680 --> 00:03:21,510
by work I've been doing for some

00:03:18,660 --> 00:03:25,890
customers and obviously that was way

00:03:21,510 --> 00:03:27,300
bigger systems okay so you would get

00:03:25,890 --> 00:03:29,370
something like that when joining the

00:03:27,300 --> 00:03:32,940
team so I and welcome to team love

00:03:29,370 --> 00:03:34,800
actually yeah I like four hours as you

00:03:32,940 --> 00:03:36,990
know we are all we are small

00:03:34,800 --> 00:03:38,730
collectively owned smithy managed by

00:03:36,990 --> 00:03:41,730
friendly resident blacksmith named

00:03:38,730 --> 00:03:43,260
William will so L provision craftsman

00:03:41,730 --> 00:03:46,800
design their future pieces before

00:03:43,260 --> 00:03:48,360
warming up the earth and avoid wasting

00:03:46,800 --> 00:03:50,700
raw material we have a system in place

00:03:48,360 --> 00:03:53,010
which guy is the creation process by

00:03:50,700 --> 00:03:56,100
using predetermined primitives it also

00:03:53,010 --> 00:03:58,140
gives real-time preview of the new piece

00:03:56,100 --> 00:04:00,360
it was developed by conservative

00:03:58,140 --> 00:04:02,700
developer named Duncan we left us to

00:04:00,360 --> 00:04:04,860
pursue a family quest first and

00:04:02,700 --> 00:04:06,900
introduction to a system so our pieces

00:04:04,860 --> 00:04:08,520
are created from one or more primitive a

00:04:06,900 --> 00:04:11,730
please can be displayed in wireframe

00:04:08,520 --> 00:04:14,760
using its plain color or a piece can be

00:04:11,730 --> 00:04:19,799
rotated using mouse a piece can be shown

00:04:14,760 --> 00:04:21,780
in the XY XZ the device planes pretty

00:04:19,799 --> 00:04:22,800
simple right what this is where it gets

00:04:21,780 --> 00:04:24,479
interesting the

00:04:22,800 --> 00:04:26,819
you as a point light at the same

00:04:24,479 --> 00:04:28,650
coordinate than the camera as an

00:04:26,819 --> 00:04:30,539
alternative to the plain color a piece

00:04:28,650 --> 00:04:34,110
can be displayed as a color map showing

00:04:30,539 --> 00:04:35,819
the normal map of the object the x

00:04:34,110 --> 00:04:38,159
coordinate of the normal is impacting

00:04:35,819 --> 00:04:40,710
the right channel of the point why the

00:04:38,159 --> 00:04:43,259
green channel that blue channel recently

00:04:40,710 --> 00:04:45,599
or visiting craftsman started

00:04:43,259 --> 00:04:47,400
complaining that the preview is not good

00:04:45,599 --> 00:04:49,949
enough for their use in some conditions

00:04:47,400 --> 00:04:51,900
is requires an update your system to

00:04:49,949 --> 00:04:53,909
move from the default rendering using

00:04:51,900 --> 00:04:56,250
Grodd shading which is pretty much what

00:04:53,909 --> 00:05:00,780
you get when you're doing the old OpenGL

00:04:56,250 --> 00:05:03,810
stuff choose better up from shading and

00:05:00,780 --> 00:05:05,550
play apps PBR in the future especially

00:05:03,810 --> 00:05:08,849
if you follow the shrine session

00:05:05,550 --> 00:05:10,949
yesterday feel free to make any changes

00:05:08,849 --> 00:05:13,409
to use the GL view class that we will

00:05:10,949 --> 00:05:15,949
see in a minute or add any new card as

00:05:13,409 --> 00:05:18,930
long as everything still works correctly

00:05:15,949 --> 00:05:21,210
however do note that error the geometry

00:05:18,930 --> 00:05:23,250
builder class at all as it belongs to

00:05:21,210 --> 00:05:25,469
the family of dwarves from the neighbor

00:05:23,250 --> 00:05:27,659
mine there are also a main provider of

00:05:25,469 --> 00:05:30,210
raw materials and will refuse to deliver

00:05:27,659 --> 00:05:32,819
further in case of change as I don't

00:05:30,210 --> 00:05:34,229
believe in shared called ownership your

00:05:32,819 --> 00:05:37,319
work needs to be completed by thursday

00:05:34,229 --> 00:05:39,180
at noon just for clarification a piece

00:05:37,319 --> 00:05:42,120
can be displayed playing or one frame

00:05:39,180 --> 00:05:44,099
but when it is rotated using mouse it is

00:05:42,120 --> 00:05:46,529
always displayed in wireframe so that's

00:05:44,099 --> 00:05:48,270
something you might get from manager or

00:05:46,529 --> 00:05:51,840
home customer right and there are those

00:05:48,270 --> 00:05:54,210
nice splitted specifications and this

00:05:51,840 --> 00:05:57,110
all by the way there's that thing in the

00:05:54,210 --> 00:06:01,080
corner that should not be broken right

00:05:57,110 --> 00:06:03,120
so first a possible thing let's run it

00:06:01,080 --> 00:06:05,129
and see what it does right so we have

00:06:03,120 --> 00:06:08,340
this existing code base so we have a

00:06:05,129 --> 00:06:10,199
small application and in that

00:06:08,340 --> 00:06:13,139
application so we can control the view

00:06:10,199 --> 00:06:15,719
and then we can start to add primitives

00:06:13,139 --> 00:06:18,300
at given coordinate so we can create a

00:06:15,719 --> 00:06:20,729
bar for instance ok so I just get the

00:06:18,300 --> 00:06:24,840
bar which I can rotate and as mentioned

00:06:20,729 --> 00:06:27,539
in the potential email and just get the

00:06:24,840 --> 00:06:31,139
wireframe when I rotate and if I stop

00:06:27,539 --> 00:06:35,729
rotating the night get it back room for

00:06:31,139 --> 00:06:39,419
the primitives I can have ring okay

00:06:35,729 --> 00:06:43,740
or I can have squarely wave and just for

00:06:39,419 --> 00:06:47,729
the sake of it are we push it down okay

00:06:43,740 --> 00:06:50,309
and so we can this kind this kind of

00:06:47,729 --> 00:06:51,870
object that we are specifying and we

00:06:50,309 --> 00:06:54,839
have those layers so I can explain just

00:06:51,870 --> 00:06:57,479
why frame altar by frame and model or

00:06:54,839 --> 00:07:00,449
without the wireframe but then if i

00:06:57,479 --> 00:07:03,240
rotate I get wireframe back oh I can

00:07:00,449 --> 00:07:06,330
have the normal map of my objects okay

00:07:03,240 --> 00:07:07,589
so not many features but we can see

00:07:06,330 --> 00:07:09,449
there is plenty of different

00:07:07,589 --> 00:07:13,289
combinations already and we have to make

00:07:09,449 --> 00:07:15,539
sure that we are changing the lighting

00:07:13,289 --> 00:07:17,580
model and we will have to actually

00:07:15,539 --> 00:07:20,539
change the type of OpenGL code we have

00:07:17,580 --> 00:07:23,399
without breaking anything along the way

00:07:20,539 --> 00:07:25,379
so generally developers have that

00:07:23,399 --> 00:07:28,039
especially when they start in their

00:07:25,379 --> 00:07:31,860
career they have these you breeze of

00:07:28,039 --> 00:07:34,889
that's crappy that rewrite okay but if i

00:07:31,860 --> 00:07:37,259
rewrite that where I take most risks in

00:07:34,889 --> 00:07:38,729
my project especially if I have

00:07:37,259 --> 00:07:40,919
something which is about millions of

00:07:38,729 --> 00:07:44,819
line of code so we need something to do

00:07:40,919 --> 00:07:47,459
that in a safer way okay so that's it

00:07:44,819 --> 00:07:50,899
for ya one more thing so i can actually

00:07:47,459 --> 00:07:58,729
zoom that right i can do it with the

00:07:50,899 --> 00:08:01,860
spin box and jump in XY XZ why bed and

00:07:58,729 --> 00:08:05,909
perspective okay and so we want to keep

00:08:01,860 --> 00:08:10,259
all of that okay so now let's Ave first

00:08:05,909 --> 00:08:12,449
look at the actual code so we have this

00:08:10,259 --> 00:08:15,419
geometry builder which was mentioned

00:08:12,449 --> 00:08:18,899
that we are not allowed to you modify

00:08:15,419 --> 00:08:20,759
that's basically the one from the GUI we

00:08:18,899 --> 00:08:23,279
just say to the geometry builder at the

00:08:20,759 --> 00:08:25,800
bar there and that generates the

00:08:23,279 --> 00:08:28,199
geometry okay so we have grid commands

00:08:25,800 --> 00:08:30,659
and we specify the type of Germans we

00:08:28,199 --> 00:08:33,450
want to build and the XYZ that I could

00:08:30,659 --> 00:08:37,200
control home to GUI

00:08:33,450 --> 00:08:39,419
and so we see that those function are

00:08:37,200 --> 00:08:40,680
using tunneling and then we have that

00:08:39,419 --> 00:08:43,080
function that's the one which is

00:08:40,680 --> 00:08:44,640
actually used by the glee okay I'm not

00:08:43,080 --> 00:08:46,860
getting in detail on that one because

00:08:44,640 --> 00:08:50,130
remember that the one we don't want to

00:08:46,860 --> 00:08:53,130
change I don't have the control of that

00:08:50,130 --> 00:08:57,270
so apparently they don't see nothing of

00:08:53,130 --> 00:09:02,790
contrast that's yep if someone can do

00:08:57,270 --> 00:09:08,580
something about the light but ok but I

00:09:02,790 --> 00:09:16,370
won't get ya bigger sphere does that

00:09:08,580 --> 00:09:16,370
help at least if I grow it sir yes okay

00:09:16,640 --> 00:09:22,310
okay so i won't get into details for

00:09:19,050 --> 00:09:27,540
that particular class yeah probably abs

00:09:22,310 --> 00:09:28,890
don't fall asleep please so I won't get

00:09:27,540 --> 00:09:31,290
into details on that one because that

00:09:28,890 --> 00:09:35,760
the one we're basically forbidden to

00:09:31,290 --> 00:09:39,480
modify okay what we're interested more

00:09:35,760 --> 00:09:42,210
is what is that kind of black box is

00:09:39,480 --> 00:09:44,510
using and that black box is using that

00:09:42,210 --> 00:09:48,450
class and that's the one we would be

00:09:44,510 --> 00:09:50,610
particularly allowed to modify along

00:09:48,450 --> 00:09:53,490
with the viewstate that we see in a

00:09:50,610 --> 00:09:57,690
minute so what we have there typically

00:09:53,490 --> 00:10:00,780
that's a qgl widget and it has a view

00:09:57,690 --> 00:10:02,550
state that we will look at and then from

00:10:00,780 --> 00:10:04,680
the outside so that the geometry builder

00:10:02,550 --> 00:10:07,590
can ask you created is really the least

00:10:04,680 --> 00:10:10,980
and colorist and then we can know what

00:10:07,590 --> 00:10:12,810
the current list is we can create so we

00:10:10,980 --> 00:10:14,430
start to see it's slightly fishy and we

00:10:12,810 --> 00:10:15,870
are mixing concepts in there because we

00:10:14,430 --> 00:10:18,240
have creatives we have a beginning east

00:10:15,870 --> 00:10:22,740
how do they relate we'd have to find

00:10:18,240 --> 00:10:25,680
that out and then we have n list and we

00:10:22,740 --> 00:10:28,260
can set a color and not easy nice

00:10:25,680 --> 00:10:31,830
pointer to floats right and we can add

00:10:28,260 --> 00:10:33,870
faces and we can add polyline and then

00:10:31,830 --> 00:10:36,270
the rest is pretty much but controlling

00:10:33,870 --> 00:10:40,340
the view okay controlling the cameras at

00:10:36,270 --> 00:10:40,340
the rotation of the model and so on

00:10:41,260 --> 00:10:49,910
as for the viewstate so the viewstate we

00:10:46,220 --> 00:10:51,710
have several type of lists and as we see

00:10:49,910 --> 00:10:53,300
ears as a different part of our model

00:10:51,710 --> 00:10:55,520
right we have the model of the wire

00:10:53,300 --> 00:11:00,530
frame or the normal map okay so that's

00:10:55,520 --> 00:11:03,500
the layers that we were seeing on the on

00:11:00,530 --> 00:11:12,860
the GUI and we have this mr. use temp

00:11:03,500 --> 00:11:15,470
list and then so we have an ID for model

00:11:12,860 --> 00:11:18,160
we have 90 false wireframe an ID for the

00:11:15,470 --> 00:11:21,800
normal map and we can enable or disable

00:11:18,160 --> 00:11:25,220
given the year that's map that seems to

00:11:21,800 --> 00:11:29,510
map to what we've seen earlier on the

00:11:25,220 --> 00:11:33,470
glue so let's get back to that one and

00:11:29,510 --> 00:11:35,570
take a look at the implementation okay

00:11:33,470 --> 00:11:38,510
so we have a view which for some reason

00:11:35,570 --> 00:11:39,740
seems to be a singleton don't think we

00:11:38,510 --> 00:11:44,690
will fix that today but that's something

00:11:39,740 --> 00:11:49,010
we could attack then what basically

00:11:44,690 --> 00:11:51,950
constructor then getting a reference to

00:11:49,010 --> 00:11:53,960
the state and then we have the quickest

00:11:51,950 --> 00:11:57,230
and finally we start to see some of all

00:11:53,960 --> 00:11:59,810
OpenGL code so here we are using we see

00:11:57,230 --> 00:12:04,760
that the customer code is using draw

00:11:59,810 --> 00:12:06,530
lists so that Aldo pangea right and with

00:12:04,760 --> 00:12:09,230
what I've been asked by a customer

00:12:06,530 --> 00:12:11,450
basically we want to move from to have a

00:12:09,230 --> 00:12:15,020
chance you get you phone and potentially

00:12:11,450 --> 00:12:17,810
PBR model lighting we can stay with this

00:12:15,020 --> 00:12:20,810
very old way of doing OpenGL right so

00:12:17,810 --> 00:12:23,150
we'll have to replace those drollest

00:12:20,810 --> 00:12:27,260
probably with shaders and buffers and so

00:12:23,150 --> 00:12:28,730
on so we're creating enrollees we

00:12:27,260 --> 00:12:31,100
recording at raleigh's that's basically

00:12:28,730 --> 00:12:35,630
simple wrappers for the drollest

00:12:31,100 --> 00:12:37,550
concepts around OpenGL one and then we

00:12:35,630 --> 00:12:39,980
have this begin inst which creates

00:12:37,550 --> 00:12:42,440
different type of tourists so again we

00:12:39,980 --> 00:12:44,960
see created released but it stores the

00:12:42,440 --> 00:12:47,900
idea of all released inside of the

00:12:44,960 --> 00:12:50,630
viewstate okay we see here we have the

00:12:47,900 --> 00:12:52,720
ESET mother ID so we're keeping ideas of

00:12:50,630 --> 00:12:56,160
trolleys for

00:12:52,720 --> 00:13:00,160
usage and we have different paths for

00:12:56,160 --> 00:13:02,139
model is by frame normal and we just

00:13:00,160 --> 00:13:04,750
crash in the other cases because we

00:13:02,139 --> 00:13:07,750
don't want to support that then some

00:13:04,750 --> 00:13:09,639
more code to specify some parameters on

00:13:07,750 --> 00:13:13,420
the materials that we display member

00:13:09,639 --> 00:13:15,730
that was slightly shaded and then we

00:13:13,420 --> 00:13:20,110
have the N list where we just wrap and

00:13:15,730 --> 00:13:22,750
east and we add memorize which least we

00:13:20,110 --> 00:13:25,509
were building so we just reset to we

00:13:22,750 --> 00:13:28,779
have no least open right now and then

00:13:25,509 --> 00:13:30,490
this headquarters prep GL curl and then

00:13:28,779 --> 00:13:33,610
the advisory starts will be interesting

00:13:30,490 --> 00:13:36,370
so we have those very large arrays with

00:13:33,610 --> 00:13:40,269
indices and those loops which looks ugly

00:13:36,370 --> 00:13:43,000
and more loops which looks ugly with mr.

00:13:40,269 --> 00:13:45,310
use numbers in there right and the quad

00:13:43,000 --> 00:13:48,279
that looks ugly as well and then we have

00:13:45,310 --> 00:13:50,980
the polyline the ad polyline so again we

00:13:48,279 --> 00:13:54,670
are getting positions cut off and number

00:13:50,980 --> 00:13:57,370
of point a presets what we have on at

00:13:54,670 --> 00:14:00,189
the end of those pointers and then we

00:13:57,370 --> 00:14:02,379
create a line strip okay and the rest is

00:14:00,189 --> 00:14:06,189
to control the views and Kamya change

00:14:02,379 --> 00:14:09,430
model rotation and the initialized GL

00:14:06,189 --> 00:14:13,240
which is forced by the chat widget the

00:14:09,430 --> 00:14:15,850
resize GL and the paint GL okay where we

00:14:13,240 --> 00:14:21,490
have we are mingling with the matrices

00:14:15,850 --> 00:14:24,189
to position on model to position the

00:14:21,490 --> 00:14:28,839
model and you control the projection of

00:14:24,189 --> 00:14:31,000
the camera and then we call one of the

00:14:28,839 --> 00:14:34,930
list okay so that's fuzzy model layer

00:14:31,000 --> 00:14:38,110
only that's enabled then we change the

00:14:34,930 --> 00:14:39,970
state of OpenGL and then we call for

00:14:38,110 --> 00:14:42,370
normal map and then for the wireframe

00:14:39,970 --> 00:14:45,399
okay so we see the rendering algorithm

00:14:42,370 --> 00:14:48,329
right there and then that's dealing with

00:14:45,399 --> 00:14:50,860
the mouse press mouse move will events

00:14:48,329 --> 00:14:56,949
which all change the rotation of the

00:14:50,860 --> 00:15:01,000
model so that's why smaller than

00:14:56,949 --> 00:15:02,980
something real okay that's big enough

00:15:01,000 --> 00:15:05,290
already there is enough complexity to

00:15:02,980 --> 00:15:06,329
play around with that and learn a few

00:15:05,290 --> 00:15:10,930
tricks

00:15:06,329 --> 00:15:13,300
and so the idea is here that we want to

00:15:10,930 --> 00:15:15,910
refactor that so generally when I have

00:15:13,300 --> 00:15:17,829
time we I get to excuse are we want to

00:15:15,910 --> 00:15:20,350
refactor it but that's pretty much the

00:15:17,829 --> 00:15:22,360
situation we have right now okay so we

00:15:20,350 --> 00:15:26,259
have our geometry builder which talks to

00:15:22,360 --> 00:15:28,899
you the GL view and glu as internally of

00:15:26,259 --> 00:15:33,009
you state and this view state contain

00:15:28,899 --> 00:15:34,839
different ideas of drawer list and the

00:15:33,009 --> 00:15:37,600
GL view as we can see that basically

00:15:34,839 --> 00:15:40,750
maps onto a very procedural way of

00:15:37,600 --> 00:15:42,250
dealing with OpenGL and that's pretty

00:15:40,750 --> 00:15:46,810
much this type of situations you have

00:15:42,250 --> 00:15:48,850
with OpenGL one code what we want to do

00:15:46,810 --> 00:15:51,459
is to move to your new world which would

00:15:48,850 --> 00:15:55,300
look like this ok we want to start to

00:15:51,459 --> 00:15:56,589
grow a bit like force in graph to be

00:15:55,300 --> 00:15:59,829
able to have something which is better

00:15:56,589 --> 00:16:05,529
suited for modern opengl where we use

00:15:59,829 --> 00:16:08,079
shaders where we use buffers and so for

00:16:05,529 --> 00:16:10,600
that we need far more gel you to grow

00:16:08,079 --> 00:16:15,880
two different type of objects right so

00:16:10,600 --> 00:16:17,620
sin layer and sin nada so then it

00:16:15,880 --> 00:16:19,660
becomes explicit instead of having list

00:16:17,620 --> 00:16:22,959
and some of the ID system stop somewhere

00:16:19,660 --> 00:16:25,569
some other we don't released all we have

00:16:22,959 --> 00:16:28,540
two objects one materializing layer and

00:16:25,569 --> 00:16:31,029
one materializing whatever is inside my

00:16:28,540 --> 00:16:33,399
lair ok so we have seen layer and sin

00:16:31,029 --> 00:16:34,959
nada sin layer will have the shader

00:16:33,399 --> 00:16:37,269
management because we've seen that the

00:16:34,959 --> 00:16:39,220
type of shoe do we have I mean we have

00:16:37,269 --> 00:16:42,130
different rendering / layer so we have

00:16:39,220 --> 00:16:44,110
basically shade up earlier and then the

00:16:42,130 --> 00:16:45,519
scene node will have the buffer

00:16:44,110 --> 00:16:47,319
management because that's where you have

00:16:45,519 --> 00:16:50,259
the actual geometry you want to display

00:16:47,319 --> 00:16:52,600
ok so we want to move from that do that

00:16:50,259 --> 00:16:55,839
ok it's not a small fit right in

00:16:52,600 --> 00:16:57,850
something in the system like that and so

00:16:55,839 --> 00:16:59,529
the first question because I would try

00:16:57,850 --> 00:17:01,269
to keep it bit interactive even though

00:16:59,529 --> 00:17:03,459
that's not a full-fledged workshop is

00:17:01,269 --> 00:17:10,020
what's the first thing you should try to

00:17:03,459 --> 00:17:10,020
do before to get there anyone

00:17:17,210 --> 00:17:22,470
so you basically your Papa's are is I

00:17:20,700 --> 00:17:26,760
start to code the solution right away

00:17:22,470 --> 00:17:32,000
okay okay do we have an extra step we

00:17:26,760 --> 00:17:36,360
might want to do before that even yes

00:17:32,000 --> 00:17:40,440
yes okay not unit test right what we

00:17:36,360 --> 00:17:43,140
want is an automatic test okay to be

00:17:40,440 --> 00:17:45,480
able to do that right to be able to be

00:17:43,140 --> 00:17:47,670
sure that when i start to plug my sin

00:17:45,480 --> 00:17:49,410
node or when I start to plug my senior

00:17:47,670 --> 00:17:51,810
year and when I start to move some of

00:17:49,410 --> 00:17:55,350
the code inside there I'm not breaking

00:17:51,810 --> 00:17:58,410
anything right because otherwise I'm

00:17:55,350 --> 00:18:00,510
taking the same risk than if I would

00:17:58,410 --> 00:18:02,580
throw away everything and start to

00:18:00,510 --> 00:18:04,730
rewrite right I would have no way to

00:18:02,580 --> 00:18:07,290
make sure that I keep the features

00:18:04,730 --> 00:18:09,150
properly for as long as possible right

00:18:07,290 --> 00:18:11,310
inside process so the first thing we

00:18:09,150 --> 00:18:13,470
want to do such an automated test why

00:18:11,310 --> 00:18:16,820
I'm saying no that's not a unit test

00:18:13,470 --> 00:18:19,260
that if you want to go for unit tests

00:18:16,820 --> 00:18:21,630
automated unit tests that would be way

00:18:19,260 --> 00:18:24,720
too expensive okay and we have to be

00:18:21,630 --> 00:18:28,530
done by Thursday right so we cannot

00:18:24,720 --> 00:18:30,300
spend a lot of time right adding some

00:18:28,530 --> 00:18:32,280
unit tests probably starting from the

00:18:30,300 --> 00:18:34,110
lower layers and building up and having

00:18:32,280 --> 00:18:35,940
very fine unit tests for everything

00:18:34,110 --> 00:18:37,980
especially since we are about to

00:18:35,940 --> 00:18:39,270
drastically change the design so that

00:18:37,980 --> 00:18:41,520
means we would have to update those

00:18:39,270 --> 00:18:43,470
tests very frequently as we are dead the

00:18:41,520 --> 00:18:44,850
design so in situation like that what

00:18:43,470 --> 00:18:48,480
you want is something which is much

00:18:44,850 --> 00:18:50,310
wider spectrum type of test okay and

00:18:48,480 --> 00:18:52,670
that would be something on the fully

00:18:50,310 --> 00:18:56,820
integrated system if possible and that's

00:18:52,670 --> 00:18:59,340
what we basically call a pin test okay

00:18:56,820 --> 00:19:03,960
the idea why Pinter's that's the idea

00:18:59,340 --> 00:19:05,850
that you have like on a chalkboard right

00:19:03,960 --> 00:19:08,910
you have something you want to fix right

00:19:05,850 --> 00:19:10,350
and you put pins on your on your paper

00:19:08,910 --> 00:19:12,090
so that it doesn't fall off the wall

00:19:10,350 --> 00:19:14,130
right that's basically the idea so we

00:19:12,090 --> 00:19:16,260
want to pin or system right you have a

00:19:14,130 --> 00:19:19,440
test which verify that we have those

00:19:16,260 --> 00:19:21,780
pins in place it's not perfect not very

00:19:19,440 --> 00:19:26,640
fine grain but that will scan the world

00:19:21,780 --> 00:19:28,990
the world system so we try to do that so

00:19:26,640 --> 00:19:32,309
first thing we do is to have

00:19:28,990 --> 00:19:34,179
a test so yeah I will use a cute based

00:19:32,309 --> 00:19:36,100
automated tests depending on your

00:19:34,179 --> 00:19:37,990
situation might want to use squish for

00:19:36,100 --> 00:19:41,080
that but I want you to keep it small not

00:19:37,990 --> 00:19:43,210
a squish in the picture so I'm going for

00:19:41,080 --> 00:19:46,270
something simple in the beginning we

00:19:43,210 --> 00:19:48,700
start by just verifying back I can make

00:19:46,270 --> 00:19:51,520
a test which face okay so i have a

00:19:48,700 --> 00:19:53,920
failing test that's what we see with

00:19:51,520 --> 00:19:56,620
their right it should fail and we verify

00:19:53,920 --> 00:19:58,270
we verify something which is for so it

00:19:56,620 --> 00:20:01,090
should failure right and if i run it

00:19:58,270 --> 00:20:03,070
indeed I of something which phase now

00:20:01,090 --> 00:20:04,660
abuse is that's not satisfying we're

00:20:03,070 --> 00:20:07,750
just creating the window and doing

00:20:04,660 --> 00:20:09,130
nothing with it and so that's what one

00:20:07,750 --> 00:20:10,960
of those times where i would have to

00:20:09,130 --> 00:20:13,870
fast track if we want to get the chance

00:20:10,960 --> 00:20:15,670
to do that in one hour and so i will

00:20:13,870 --> 00:20:24,730
first rack a bit and pretend that i

00:20:15,670 --> 00:20:29,890
typed out of that right now and so right

00:20:24,730 --> 00:20:35,470
so i failing tests and i have one extra

00:20:29,890 --> 00:20:36,910
step i think ok ok so after why we'd

00:20:35,470 --> 00:20:39,520
probably end up with something a bit

00:20:36,910 --> 00:20:41,980
like that ok i try to plug basically

00:20:39,520 --> 00:20:44,290
what I do is I introspecting on the

00:20:41,980 --> 00:20:47,100
window right that's what we are seeing

00:20:44,290 --> 00:20:51,940
here for instance with the showed showed

00:20:47,100 --> 00:20:53,890
wz ok that function we try to find the

00:20:51,940 --> 00:20:55,929
actual push button which does that and

00:20:53,890 --> 00:20:59,020
we click it right so we simulate the

00:20:55,929 --> 00:21:00,970
user interaction to force a view so you

00:20:59,020 --> 00:21:03,130
to change so we have several all of

00:21:00,970 --> 00:21:06,250
those introspection function same thing

00:21:03,130 --> 00:21:09,400
for the primitive ok so I'm wrapping the

00:21:06,250 --> 00:21:13,090
grid BR in the small API for my own

00:21:09,400 --> 00:21:16,000
conception for my test and then my test

00:21:13,090 --> 00:21:17,530
will become something like you know go

00:21:16,000 --> 00:21:19,660
through all views where I chose

00:21:17,530 --> 00:21:22,450
perspective and then I change all the

00:21:19,660 --> 00:21:24,850
mud and then I show XY I change or

00:21:22,450 --> 00:21:26,860
tomorrow I show x said I change ultimate

00:21:24,850 --> 00:21:29,170
ok I want to be very systematic in my

00:21:26,860 --> 00:21:30,850
tests to be sure that I move the object

00:21:29,170 --> 00:21:33,460
around I've seen the different use a

00:21:30,850 --> 00:21:36,309
zoom in and out I activate this activate

00:21:33,460 --> 00:21:36,669
all the layers ok to be sure that at

00:21:36,309 --> 00:21:40,269
least

00:21:36,669 --> 00:21:41,799
usually I can see I can see the thing so

00:21:40,269 --> 00:21:43,269
i won't get into detail there what's

00:21:41,799 --> 00:21:46,119
important you remember because that

00:21:43,269 --> 00:21:48,639
changed system by system is you have to

00:21:46,119 --> 00:21:51,700
first go through that phase okay because

00:21:48,639 --> 00:21:53,590
that's something unlike a full suite of

00:21:51,700 --> 00:21:55,059
unit tests you can put something like

00:21:53,590 --> 00:21:57,489
that on a really system in a couple of

00:21:55,059 --> 00:22:00,659
days okay you need test you would spend

00:21:57,489 --> 00:22:03,249
month ES and not cover everything so

00:22:00,659 --> 00:22:22,269
just running it you see how it looks now

00:22:03,249 --> 00:22:24,940
with that okay so that's my test now if

00:22:22,269 --> 00:22:29,350
we look closer to that so I basically

00:22:24,940 --> 00:22:32,259
have Noah cells right so that's nice I

00:22:29,350 --> 00:22:36,549
have a test but it's not really cheating

00:22:32,259 --> 00:22:38,320
anything right the other thing is okay

00:22:36,549 --> 00:22:40,659
I've been doing all of that but am I

00:22:38,320 --> 00:22:43,720
really covering or the code i'm about to

00:22:40,659 --> 00:22:46,749
refactor right that's one of the thing i

00:22:43,720 --> 00:22:48,249
need to verify so the very next step for

00:22:46,749 --> 00:22:51,639
something like that is as you've right

00:22:48,249 --> 00:22:58,119
this kind of things what you want to do

00:22:51,639 --> 00:23:01,570
is to turn on code coverage okay so you

00:22:58,119 --> 00:23:03,190
turn on code coverage with cumec that's

00:23:01,570 --> 00:23:05,830
actually fairly easy right in the case

00:23:03,190 --> 00:23:08,379
of G curve just go for a config plus

00:23:05,830 --> 00:23:12,070
equals e curve then you have to rebuild

00:23:08,379 --> 00:23:27,039
everything for so we'll rebuild all of

00:23:12,070 --> 00:23:28,869
it ok then I will run it again I hope

00:23:27,039 --> 00:23:31,619
you like it because we're going to see

00:23:28,869 --> 00:23:31,619
that couple of times

00:23:35,490 --> 00:23:44,260
okay and now that I run it so I have

00:23:40,800 --> 00:23:46,690
maybe you can't read that but I have G

00:23:44,260 --> 00:23:49,630
Cove which generated actually coverage

00:23:46,690 --> 00:23:54,310
information right and so I can go for

00:23:49,630 --> 00:24:05,650
the I've scrip for that if i can type

00:23:54,310 --> 00:24:07,840
properly ok and I inquiry the X ok I

00:24:05,650 --> 00:24:10,120
want to be guided to make sure that I go

00:24:07,840 --> 00:24:14,440
through everything that I need to test

00:24:10,120 --> 00:24:18,010
right so I'm putting over my coverage

00:24:14,440 --> 00:24:21,940
information and then I look that I cover

00:24:18,010 --> 00:24:27,070
glu ninety-five percent ok so that's not

00:24:21,940 --> 00:24:29,770
bad still we was a five percent coming

00:24:27,070 --> 00:24:32,770
from while apparently that one wyd never

00:24:29,770 --> 00:24:34,540
called by the system low risk of

00:24:32,770 --> 00:24:36,190
breaking something there right so we can

00:24:34,540 --> 00:24:38,290
probably deal with that then that's some

00:24:36,190 --> 00:24:42,420
very special k is again very out to

00:24:38,290 --> 00:24:45,850
reproduce but i mean the real meat of

00:24:42,420 --> 00:24:48,490
you know the method right we actually go

00:24:45,850 --> 00:24:50,290
through all those cases right and so we

00:24:48,490 --> 00:24:53,790
cover that properly and we cover up

00:24:50,290 --> 00:24:58,060
properly all nasty loops alright so

00:24:53,790 --> 00:24:59,650
that's actually somewhat safe ok why

00:24:58,060 --> 00:25:02,340
somewhat safe is that even though i

00:24:59,650 --> 00:25:05,080
would have one other person coverage

00:25:02,340 --> 00:25:06,880
maybe I wouldn't really test everything

00:25:05,080 --> 00:25:08,620
right that's why I actually visually

00:25:06,880 --> 00:25:12,940
checking that we manipulate all the

00:25:08,620 --> 00:25:15,280
features is a good thing right you need

00:25:12,940 --> 00:25:17,770
both to have I coverage and you

00:25:15,280 --> 00:25:20,260
basically up the list of features and

00:25:17,770 --> 00:25:22,300
check okay that one I actually verify

00:25:20,260 --> 00:25:24,790
that one actually verify just a coverage

00:25:22,300 --> 00:25:26,170
doesn't tell the whole story but since

00:25:24,790 --> 00:25:28,240
we've seen we are really moving the

00:25:26,170 --> 00:25:31,570
object and we have a very fine coverage

00:25:28,240 --> 00:25:34,210
now I start to have something one of my

00:25:31,570 --> 00:25:36,460
taste at least I know cover everything

00:25:34,210 --> 00:25:40,800
now the problem is that my test system

00:25:36,460 --> 00:25:40,800
not checking anything okay

00:25:40,920 --> 00:25:47,270
and so that's when we get into the

00:25:44,160 --> 00:25:49,410
record we play approach i was mentioning

00:25:47,270 --> 00:25:51,090
we're not testing anything because in

00:25:49,410 --> 00:25:54,960
something like that that would be very

00:25:51,090 --> 00:25:57,930
very hard to express assets which would

00:25:54,960 --> 00:26:00,330
say that proper rendering of that's not

00:25:57,930 --> 00:26:03,020
proper rendering right how do i go in my

00:26:00,330 --> 00:26:06,690
unit my automated test to say q i said

00:26:03,020 --> 00:26:09,030
something right and that's why that's

00:26:06,690 --> 00:26:12,600
record we play what we want to verify in

00:26:09,030 --> 00:26:15,900
your pin test is that call after run

00:26:12,600 --> 00:26:19,680
after run of my test my system is always

00:26:15,900 --> 00:26:21,900
doing the same thing so one of the

00:26:19,680 --> 00:26:23,670
approach you can do that duplicating the

00:26:21,900 --> 00:26:26,880
system and comparing but here we're

00:26:23,670 --> 00:26:28,710
comparing what right I mean that would

00:26:26,880 --> 00:26:30,480
be screenshot something that's kind of

00:26:28,710 --> 00:26:33,750
slow you need to a fizzy comparison and

00:26:30,480 --> 00:26:36,990
probably not a good idea the other

00:26:33,750 --> 00:26:38,970
possibility which is also used in system

00:26:36,990 --> 00:26:43,830
with no GUI like real business who

00:26:38,970 --> 00:26:48,420
systems that to add logs inside of there

00:26:43,830 --> 00:26:51,150
run the test save the logs into into a

00:26:48,420 --> 00:26:53,430
file before we start to refactor that's

00:26:51,150 --> 00:26:55,800
what record phase inside of the record

00:26:53,430 --> 00:26:58,710
we play approach so we would record that

00:26:55,800 --> 00:27:00,960
log and then for the other runs what we

00:26:58,710 --> 00:27:03,030
do is we generate a new log and then we

00:27:00,960 --> 00:27:06,060
do a diff between the two and if the

00:27:03,030 --> 00:27:09,090
deficit is empty great we didn't break

00:27:06,060 --> 00:27:11,670
anything we didn't change any person in

00:27:09,090 --> 00:27:14,430
any behavior which you perceive right

00:27:11,670 --> 00:27:16,620
from your log if there is a difference

00:27:14,430 --> 00:27:18,840
then we have a problem in the case of

00:27:16,620 --> 00:27:20,370
OpenGL we actually have an advantage for

00:27:18,840 --> 00:27:23,240
this kind of situation because this is

00:27:20,370 --> 00:27:26,580
very nice tool which is named API trace

00:27:23,240 --> 00:27:29,130
while if you run GL application is

00:27:26,580 --> 00:27:32,280
record all the egl curls that your

00:27:29,130 --> 00:27:35,250
application is doing so we don't have to

00:27:32,280 --> 00:27:37,740
bother figuring out where to put which

00:27:35,250 --> 00:27:41,190
line for the log strategically we just

00:27:37,740 --> 00:27:44,340
go at wrapping that thing in scripts

00:27:41,190 --> 00:27:46,680
want to do the record with aep a trace

00:27:44,340 --> 00:27:52,620
and then you replay and comparison with

00:27:46,680 --> 00:27:53,720
APA trace as well so that's what we will

00:27:52,620 --> 00:27:59,100
get in there

00:27:53,720 --> 00:28:01,740
that wants to appear okay so very simple

00:27:59,100 --> 00:28:04,740
scripts okay so that's very simple shell

00:28:01,740 --> 00:28:06,990
scripts so one which just does a record

00:28:04,740 --> 00:28:11,309
right and really is magic part at that

00:28:06,990 --> 00:28:14,910
one right just called API tres tres oh

00:28:11,309 --> 00:28:17,490
no test and that we generate a file and

00:28:14,910 --> 00:28:21,150
we'd save that fight okay we move it we

00:28:17,490 --> 00:28:23,010
save that a reference trace and then

00:28:21,150 --> 00:28:26,040
when we will do the replace because we

00:28:23,010 --> 00:28:30,179
would replay plenty of times right then

00:28:26,040 --> 00:28:32,160
for also replace we basically do mostly

00:28:30,179 --> 00:28:36,450
the same thing right we have the API

00:28:32,160 --> 00:28:38,640
trace here and then we compare right we

00:28:36,450 --> 00:28:41,160
do a diff between the dump of the

00:28:38,640 --> 00:28:44,010
reference and the damp of whatever we

00:28:41,160 --> 00:28:46,350
created and if that file is not empty

00:28:44,010 --> 00:28:49,500
then we have a problem if that file is

00:28:46,350 --> 00:28:53,790
empty then or tests actually pass okay

00:28:49,500 --> 00:28:59,330
so let's start with that so I will call

00:28:53,790 --> 00:28:59,330
the record script okay so i will run it

00:29:01,790 --> 00:29:14,340
yeah I told you you would have to like

00:29:05,490 --> 00:29:16,230
that one hmm yeah yeah what I could have

00:29:14,340 --> 00:29:21,630
made it faster but I thought that would

00:29:16,230 --> 00:29:25,280
be too picky lick for dr. ok so RI

00:29:21,630 --> 00:29:29,790
generated the first the first trace and

00:29:25,280 --> 00:29:36,540
now I can do a replay okay so now I will

00:29:29,790 --> 00:29:38,250
replay so generating another damp and

00:29:36,540 --> 00:29:40,110
then if we do the diff between the two

00:29:38,250 --> 00:29:42,030
obviously I didn't touch the system so

00:29:40,110 --> 00:29:44,820
I'm kind of expecting that thing to pass

00:29:42,030 --> 00:29:46,440
right if it doesn't have a problem okay

00:29:44,820 --> 00:29:48,960
so we have a pass right the very last

00:29:46,440 --> 00:29:51,600
line at the end okay tells me pass no

00:29:48,960 --> 00:29:54,990
OpenGL could change now just to make

00:29:51,600 --> 00:29:58,860
sure I generally like to do that just to

00:29:54,990 --> 00:30:00,440
make sure just make sure we will

00:29:58,860 --> 00:30:08,930
actually

00:30:00,440 --> 00:30:13,580
I get into glu and so we have all that

00:30:08,930 --> 00:30:15,650
stuff there and we randomly some random

00:30:13,580 --> 00:30:17,300
you break something and for some reason

00:30:15,650 --> 00:30:21,910
there's one which I like to break so I

00:30:17,300 --> 00:30:25,880
would break that one if I can find it at

00:30:21,910 --> 00:30:32,480
faces oh I have a problem there I went

00:30:25,880 --> 00:30:40,310
one step too far crap that's annoying

00:30:32,480 --> 00:30:48,040
okay okay so excuse me people but I will

00:30:40,310 --> 00:30:48,040
have to restart that three days project

00:30:48,730 --> 00:30:52,150
sorry for that

00:31:02,510 --> 00:31:09,830
let's start over okay

00:31:10,490 --> 00:31:31,750
and then next so when I okay okay back

00:31:24,020 --> 00:31:31,750
on track so coverage pop up in tests

00:31:32,320 --> 00:31:36,980
record replay scripts okay so we're back

00:31:34,790 --> 00:31:38,630
on track sorry about that so just to

00:31:36,980 --> 00:31:42,740
prove I'm not lying you will have to see

00:31:38,630 --> 00:31:46,790
twice again so I'm doing another recoil

00:31:42,740 --> 00:31:51,980
because I had something going a bit too

00:31:46,790 --> 00:31:53,510
fast here so I'm forced to do a record

00:31:51,980 --> 00:32:04,100
against you otherwise you will pretend

00:31:53,510 --> 00:32:10,390
that I just lied about everything okay

00:32:04,100 --> 00:32:10,390
and then my replay and that you pass

00:32:21,700 --> 00:32:26,690
okay that passes and now I break

00:32:24,110 --> 00:32:31,330
something for real this time so let's

00:32:26,690 --> 00:32:33,770
say I just get rid of the quads

00:32:31,330 --> 00:32:37,040
something very visible as well so that

00:32:33,770 --> 00:32:42,800
you can see it when so I'm yeah on the

00:32:37,040 --> 00:32:56,450
replay so now I replay again obviously

00:32:42,800 --> 00:33:00,050
some stuff is missing now okay and now I

00:32:56,450 --> 00:33:02,030
go to fight and that's what I want right

00:33:00,050 --> 00:33:04,360
in this kind of situation i created the

00:33:02,030 --> 00:33:07,700
regression so it's not exactly the same

00:33:04,360 --> 00:33:12,260
the same course than before all right so

00:33:07,700 --> 00:33:13,940
I want I want that and I have cute

00:33:12,260 --> 00:33:16,460
crater which went to look for some

00:33:13,940 --> 00:33:19,870
reason that's because its load England's

00:33:16,460 --> 00:33:19,870
the different i think the diff is to be

00:33:20,650 --> 00:33:27,470
calm and cute crater you can do it okay

00:33:25,700 --> 00:33:31,730
why it's trying to do it by itself we

00:33:27,470 --> 00:33:37,340
can do that as well so we have that diff

00:33:31,730 --> 00:33:39,650
right there okay and so obviously is are

00:33:37,340 --> 00:33:43,070
some stuff missing ok so that's the deep

00:33:39,650 --> 00:33:47,150
which got generated from my replay where

00:33:43,070 --> 00:33:48,920
I broke my test so I can I mean with

00:33:47,150 --> 00:33:52,100
that I can know when I break something

00:33:48,920 --> 00:33:53,990
and then I can look but ok which part is

00:33:52,100 --> 00:33:57,170
that something well the order challenge

00:33:53,990 --> 00:34:01,070
or that some parts missing like we have

00:33:57,170 --> 00:34:02,900
here and I guess that should create

00:34:01,070 --> 00:34:08,600
always buffing at it because it's for

00:34:02,900 --> 00:34:15,330
negative that case I would kill creator

00:34:08,600 --> 00:34:16,790
and go away okay

00:34:15,330 --> 00:34:26,130
next time I would do a smaller one a

00:34:16,790 --> 00:34:32,700
pretty okay let slip that again okay and

00:34:26,130 --> 00:34:34,740
so read me right so now we are in a safe

00:34:32,700 --> 00:34:36,690
situation okay i have a test it's

00:34:34,740 --> 00:34:38,340
covering all my system i have the code

00:34:36,690 --> 00:34:40,050
coverage i verified its really covering

00:34:38,340 --> 00:34:42,330
everything if I break something tells me

00:34:40,050 --> 00:34:45,570
I broke something so we actually like

00:34:42,330 --> 00:34:49,730
that right and I left my system broken

00:34:45,570 --> 00:34:49,730
yeah probably you should repair it first

00:34:51,290 --> 00:35:00,510
okay and so now we're back on track so

00:34:56,430 --> 00:35:02,280
now i have my safety net okay and at

00:35:00,510 --> 00:35:04,350
that point i can start to do the

00:35:02,280 --> 00:35:06,780
refactoring ok so that's the point where

00:35:04,350 --> 00:35:11,850
i can start to say okay from that i want

00:35:06,780 --> 00:35:14,630
to go there okay but that I don't start

00:35:11,850 --> 00:35:19,560
before I are the record and replay

00:35:14,630 --> 00:35:22,650
replacing and so now we will start to

00:35:19,560 --> 00:35:25,950
improve improve of structure so what we

00:35:22,650 --> 00:35:29,280
want is to have the layers appearing and

00:35:25,950 --> 00:35:31,350
the nuts appearing okay we won both

00:35:29,280 --> 00:35:32,760
right now if I get back to that right we

00:35:31,350 --> 00:35:35,010
won't let your appearing and not

00:35:32,760 --> 00:35:37,440
appearing and GL view creating those and

00:35:35,010 --> 00:35:40,860
we want the viewstate you not store

00:35:37,440 --> 00:35:44,240
ideas anymore but to store the layer in

00:35:40,860 --> 00:35:50,970
layers instead ok so that's 0 ideal

00:35:44,240 --> 00:35:54,600
world and so we start with that work and

00:35:50,970 --> 00:35:57,630
we start very probably with the nods

00:35:54,600 --> 00:35:59,760
right because what's or not we said that

00:35:57,630 --> 00:36:04,830
not that will contain the actual

00:35:59,760 --> 00:36:07,770
geometry and that hidden behind some

00:36:04,830 --> 00:36:10,380
list which is consumed by the geometry

00:36:07,770 --> 00:36:13,650
and creator the geometry builder that we

00:36:10,380 --> 00:36:15,420
have and that level of lee is at the

00:36:13,650 --> 00:36:16,890
first three that we have there right we

00:36:15,420 --> 00:36:20,190
have created is currently stand release

00:36:16,890 --> 00:36:22,070
list that's to manage the drawer least

00:36:20,190 --> 00:36:24,060
four geometries

00:36:22,070 --> 00:36:26,460
currently is beginning is that we have

00:36:24,060 --> 00:36:28,890
done there right that's to manage the

00:36:26,460 --> 00:36:33,050
draw least four layers okay so we want

00:36:28,890 --> 00:36:38,010
to segregate both of them and for those

00:36:33,050 --> 00:36:39,180
we have that which is called Ryan and if

00:36:38,010 --> 00:36:41,670
I would have the time I would go in

00:36:39,180 --> 00:36:43,200
debug and actually shows that by step

00:36:41,670 --> 00:36:46,050
you would have to trust me on that one

00:36:43,200 --> 00:36:48,589
and then for the geometry it called for

00:36:46,050 --> 00:36:52,140
specify music color and adding faces or

00:36:48,589 --> 00:36:54,930
ideal pulley light okay so what we want

00:36:52,140 --> 00:36:56,820
to do that refactoring which is

00:36:54,930 --> 00:37:02,040
basically extracting coding class right

00:36:56,820 --> 00:37:04,050
we want to create the Synod class ab GL

00:37:02,040 --> 00:37:06,930
you create instances of that class and

00:37:04,050 --> 00:37:11,849
all the code that we have in ad polyline

00:37:06,930 --> 00:37:15,000
at faces set color create lists release

00:37:11,849 --> 00:37:18,119
list and that was called least want to

00:37:15,000 --> 00:37:22,710
move that okay in that class and just

00:37:18,119 --> 00:37:28,859
delegate to it so again I will speed

00:37:22,710 --> 00:37:32,160
that process to be okay so that's the

00:37:28,859 --> 00:37:36,210
type of situation we want to have let me

00:37:32,160 --> 00:37:38,670
scroll up on that right so now we have

00:37:36,210 --> 00:37:42,710
all seen not appearing right and what we

00:37:38,670 --> 00:37:46,950
want is in create lists we create a nerd

00:37:42,710 --> 00:37:48,869
okay that's code which was here before

00:37:46,950 --> 00:37:50,520
we have no reason to change it so we

00:37:48,869 --> 00:37:53,730
keep it with just saying we're building

00:37:50,520 --> 00:37:56,280
a temple I least 10 for nerds and all

00:37:53,730 --> 00:37:58,080
not we'll have an idea we store that

00:37:56,280 --> 00:38:00,060
idea in right and we return that ID

00:37:58,080 --> 00:38:03,060
because that's what the geometry will do

00:38:00,060 --> 00:38:07,980
expects and then incur least we passed

00:38:03,060 --> 00:38:10,170
an ID we memorize or list of nerd we get

00:38:07,980 --> 00:38:13,619
the instance of the net force a given ID

00:38:10,170 --> 00:38:15,540
and we call code from it and then so we

00:38:13,619 --> 00:38:19,380
are dedicating again and for release

00:38:15,540 --> 00:38:26,820
list same thing we are dedicating to the

00:38:19,380 --> 00:38:31,619
actual note for set color same thing at

00:38:26,820 --> 00:38:35,250
faces same thing a 20-9 same thing if I

00:38:31,619 --> 00:38:35,640
go in GLC node I basically find all the

00:38:35,250 --> 00:38:37,140
code

00:38:35,640 --> 00:38:42,570
i ad before except that it moved in

00:38:37,140 --> 00:38:45,750
constrictor here or in the release

00:38:42,570 --> 00:38:47,880
method or in the code method or in this

00:38:45,750 --> 00:38:50,370
set color or add facies method okay but

00:38:47,880 --> 00:38:53,040
that's exactly the bottom the code i add

00:38:50,370 --> 00:38:56,160
before okay it's just that i extracted

00:38:53,040 --> 00:38:57,870
or that code which was in the same mess

00:38:56,160 --> 00:39:00,090
than the rest of the view okay because

00:38:57,870 --> 00:39:02,010
Matthew was doing layer management not

00:39:00,090 --> 00:39:04,560
management and controlling the camera

00:39:02,010 --> 00:39:07,350
now I expected at easy geometry

00:39:04,560 --> 00:39:12,390
management in to its own class okay and

00:39:07,350 --> 00:39:21,180
so if I you don't scrub that I can go in

00:39:12,390 --> 00:39:23,700
and replay and I should have no change

00:39:21,180 --> 00:39:26,670
right because one of the risk is i

00:39:23,700 --> 00:39:28,590
extracted but I didn't order some lines

00:39:26,670 --> 00:39:30,060
properly and then I'm doing one code

00:39:28,590 --> 00:39:31,080
before another and so I would have a

00:39:30,060 --> 00:39:33,420
different potentially different

00:39:31,080 --> 00:39:35,940
rendering so I want to verify that I

00:39:33,420 --> 00:39:37,680
have no change okay so no change I

00:39:35,940 --> 00:39:39,930
completely change the structure there of

00:39:37,680 --> 00:39:42,690
that part it is for the geometry

00:39:39,930 --> 00:39:44,370
management and there's no change in the

00:39:42,690 --> 00:39:50,430
GL codes which are done by the system

00:39:44,370 --> 00:39:52,950
which is good thing for us then at one

00:39:50,430 --> 00:39:56,460
point we might want to refactor all

00:39:52,950 --> 00:39:58,440
right to refactor further so if i get to

00:39:56,460 --> 00:40:02,670
GL view what we have left right we have

00:39:58,440 --> 00:40:05,160
several things the second level of draw

00:40:02,670 --> 00:40:07,950
list for the layers well clearly i mean

00:40:05,160 --> 00:40:10,970
that's all they are still okay we didn't

00:40:07,950 --> 00:40:15,630
create off scene layer senior class yet

00:40:10,970 --> 00:40:17,610
but when we look at it let's look at it

00:40:15,630 --> 00:40:20,400
a bit closer because I skipped it a bit

00:40:17,610 --> 00:40:23,940
so we have this switch on the type of

00:40:20,400 --> 00:40:28,170
layer that we start to interact with

00:40:23,940 --> 00:40:31,020
okay and in there we asked you the

00:40:28,170 --> 00:40:33,780
viewstate give me the ID for the model

00:40:31,020 --> 00:40:36,870
and if there's one then I did it that

00:40:33,780 --> 00:40:39,120
list and then i create a new ID photo

00:40:36,870 --> 00:40:41,490
model which I store in the state and I

00:40:39,120 --> 00:40:44,970
actually create the list right with the

00:40:41,490 --> 00:40:48,480
idea we determine before and then I have

00:40:44,970 --> 00:40:50,490
some state management around

00:40:48,480 --> 00:40:53,160
that particular layer and I saw the

00:40:50,490 --> 00:40:55,020
current least model list which is what

00:40:53,160 --> 00:40:58,710
we match there now if I look at war

00:40:55,020 --> 00:41:02,070
feminist if wife remedy in the state

00:40:58,710 --> 00:41:03,930
then I did eat then I said the wireframe

00:41:02,070 --> 00:41:05,550
and I create a new one and I have some

00:41:03,930 --> 00:41:08,700
state and I memorized the current list

00:41:05,550 --> 00:41:11,130
it was normal my place where I get the

00:41:08,700 --> 00:41:13,500
normal map ID and then I have a deal at

00:41:11,130 --> 00:41:15,450
least and then I saw in it and that

00:41:13,500 --> 00:41:18,210
looks very similar right to some extent

00:41:15,450 --> 00:41:20,580
there's some part which vary but what

00:41:18,210 --> 00:41:22,530
first to have everything inside of the

00:41:20,580 --> 00:41:28,010
switch is the fact that that's name

00:41:22,530 --> 00:41:31,500
normal my pie d Y frame ID and model ID

00:41:28,010 --> 00:41:33,300
ok and I have kind of a duplicate system

00:41:31,500 --> 00:41:35,010
right i have this a neumann one and

00:41:33,300 --> 00:41:37,050
which allows me to specify which layer

00:41:35,010 --> 00:41:38,730
and on the other hand to get you an

00:41:37,050 --> 00:41:40,170
actual layer i cannot you see and you

00:41:38,730 --> 00:41:44,070
might just have three different method

00:41:40,170 --> 00:41:45,869
that's kind of stupid right so what we

00:41:44,070 --> 00:41:47,130
will do first to be able to start to

00:41:45,869 --> 00:41:51,750
extract some bits which are actually

00:41:47,130 --> 00:41:55,230
interesting is to say maybe maybe if i

00:41:51,750 --> 00:41:58,980
get to the other one right maybe that

00:41:55,230 --> 00:42:01,320
API here is not very suitable especially

00:41:58,980 --> 00:42:03,540
when you see is enabled and set enabled

00:42:01,320 --> 00:42:05,040
which actually texting you right so what

00:42:03,540 --> 00:42:09,450
we would want instead that with

00:42:05,040 --> 00:42:11,190
something like set list ID with the

00:42:09,450 --> 00:42:14,369
inuman that gives me the right ID falls

00:42:11,190 --> 00:42:15,840
over here and set list ID for CNU right

00:42:14,369 --> 00:42:19,080
and then we would be in a better

00:42:15,840 --> 00:42:21,030
position and so that what we are going

00:42:19,080 --> 00:42:23,310
to do first so we are preparing a bit

00:42:21,030 --> 00:42:25,440
the landscape for what's coming right so

00:42:23,310 --> 00:42:29,970
we introduce the layer ID and set that

00:42:25,440 --> 00:42:33,150
your ID which I mean there is no no

00:42:29,970 --> 00:42:35,850
magic in there right inside there I find

00:42:33,150 --> 00:42:39,540
my switch it's just that it's probably

00:42:35,850 --> 00:42:41,430
place at the better place and being all

00:42:39,540 --> 00:42:45,630
over the place inside of kill you right

00:42:41,430 --> 00:42:48,030
and so if I have that and in Glu then I

00:42:45,630 --> 00:42:50,990
mean in that switch I just have what's

00:42:48,030 --> 00:42:53,880
really specific to all of my layers and

00:42:50,990 --> 00:43:01,410
then before even getting in there then I

00:42:53,880 --> 00:43:01,980
have my lair IDs management and I also

00:43:01,410 --> 00:43:03,480
expire

00:43:01,980 --> 00:43:05,400
she currently is because that was really

00:43:03,480 --> 00:43:08,730
just a type right no need to have that

00:43:05,400 --> 00:43:11,190
in the switch so now I have better place

00:43:08,730 --> 00:43:15,359
to start right because now I can figure

00:43:11,190 --> 00:43:18,570
out that this is what I want to move in

00:43:15,359 --> 00:43:20,040
my lair in my lair class right I want to

00:43:18,570 --> 00:43:26,609
extract that bitter move it in the lair

00:43:20,040 --> 00:43:30,600
I don't have much time left and so if it

00:43:26,609 --> 00:43:34,859
picks up so i will have a layer class

00:43:30,600 --> 00:43:38,430
and inside of that layer class right i

00:43:34,859 --> 00:43:39,869
will create that's basically the jen is

00:43:38,430 --> 00:43:41,430
that we've seen before the new lease

00:43:39,869 --> 00:43:44,850
that we've seen before and we have the

00:43:41,430 --> 00:43:47,640
did at least that we've seen before but

00:43:44,850 --> 00:43:50,580
just put in a new clay so again a new

00:43:47,640 --> 00:43:57,090
class again we are basically delegating

00:43:50,580 --> 00:43:59,550
and so now what's preventing us to use

00:43:57,090 --> 00:44:01,980
that new nice class is the fact that we

00:43:59,550 --> 00:44:04,619
need to put the viewstate from using

00:44:01,980 --> 00:44:05,820
ideas to using pointer two layers we

00:44:04,619 --> 00:44:10,380
don't really need the ideas in the

00:44:05,820 --> 00:44:12,720
viewstate animal right so we are putting

00:44:10,380 --> 00:44:16,130
that to own a year so we have objects

00:44:12,720 --> 00:44:19,380
that we create and that we delete and/or

00:44:16,130 --> 00:44:21,720
viewstate deals only with pointer of two

00:44:19,380 --> 00:44:24,590
layers now okay so if i get back to that

00:44:21,720 --> 00:44:27,450
picture i create hit the scene nod i

00:44:24,590 --> 00:44:29,280
created the scene layer and i have this

00:44:27,450 --> 00:44:38,430
relationship between the viewstate and

00:44:29,280 --> 00:44:41,790
the scene layer and now still i have

00:44:38,430 --> 00:44:43,830
some curd in there okay which I couldn't

00:44:41,790 --> 00:44:49,550
move in sin layer as well right so i can

00:44:43,830 --> 00:44:49,550
complete can completely move to see Nia

00:44:49,880 --> 00:44:55,320
okay and my big eNOS really becomes

00:44:52,550 --> 00:44:57,480
almost nothing same thing for analyst

00:44:55,320 --> 00:44:59,340
right and set color and so on that was

00:44:57,480 --> 00:45:02,670
also the case and so in senior year I

00:44:59,340 --> 00:45:04,800
will find again I just take the code

00:45:02,670 --> 00:45:07,650
move it inside of the constructor done

00:45:04,800 --> 00:45:13,010
right it's pretty much all there is and

00:45:07,650 --> 00:45:16,010
there as is called here which shoe

00:45:13,010 --> 00:45:20,620
I think that appeals there so in the

00:45:16,010 --> 00:45:23,000
paint GL instead of adding naked call to

00:45:20,620 --> 00:45:25,640
the draw least we actually go through

00:45:23,000 --> 00:45:28,100
this method that we put on layer ok so

00:45:25,640 --> 00:45:32,300
that's really bit by bit we are moving

00:45:28,100 --> 00:45:38,120
stuff out of jail view and creating the

00:45:32,300 --> 00:45:41,050
layer and the notes alright we verify I

00:45:38,120 --> 00:45:41,050
didn't break anything

00:45:47,589 --> 00:45:59,249
faster please chop-chop ok so still no

00:45:54,249 --> 00:46:03,099
breakage good so now what's missing is

00:45:59,249 --> 00:46:05,289
basically we completed the senior so we

00:46:03,099 --> 00:46:07,239
have all those relationships the only

00:46:05,289 --> 00:46:09,489
one which is missing your new ideal

00:46:07,239 --> 00:46:13,119
world that this one right the fact that

00:46:09,489 --> 00:46:16,569
the similar your contains not and so

00:46:13,119 --> 00:46:18,789
that's what we will add next so on the

00:46:16,569 --> 00:46:25,359
senior year we will add the possibility

00:46:18,789 --> 00:46:29,319
of we have the possibility of adding an

00:46:25,359 --> 00:46:32,009
odd ok so we landed no other and we will

00:46:29,319 --> 00:46:35,349
stall that since we are having a draw

00:46:32,009 --> 00:46:36,910
since we are using draw list adding a

00:46:35,349 --> 00:46:39,099
drawer is inside of the draw is that's

00:46:36,910 --> 00:46:41,319
calling it so we are calling it now

00:46:39,099 --> 00:46:43,299
right which seems a bit continent with

00:46:41,319 --> 00:46:46,390
Eve if you are not used to that

00:46:43,299 --> 00:46:48,759
obviously when we will talk to shader

00:46:46,390 --> 00:46:51,190
and so on that call move will move

00:46:48,759 --> 00:46:54,190
inside of the scene layer called method

00:46:51,190 --> 00:46:56,619
which suddenly would make more sense

00:46:54,190 --> 00:46:59,229
right but for now we are forced to do

00:46:56,619 --> 00:47:00,430
that to not break anything so now I'm in

00:46:59,229 --> 00:47:04,509
a situation where I have all my

00:47:00,430 --> 00:47:08,950
relationships in place ok so I grew my

00:47:04,509 --> 00:47:15,640
worn new architecture inside while still

00:47:08,950 --> 00:47:20,950
using the GL OpenGL one still using the

00:47:15,640 --> 00:47:24,549
OpenGL one API ok and since I moved all

00:47:20,950 --> 00:47:27,609
those all bids in the same classes in

00:47:24,549 --> 00:47:30,579
layers and not now for me to move to

00:47:27,609 --> 00:47:33,099
something like shedders buffers and so

00:47:30,579 --> 00:47:34,869
on I know exactly where that is I just

00:47:33,099 --> 00:47:37,390
have to put two classes and I'm alone

00:47:34,869 --> 00:47:41,289
right I have to pause the scene nod to

00:47:37,390 --> 00:47:44,160
use to create buffers and I have to put

00:47:41,289 --> 00:47:49,989
the layers to create a shader and call

00:47:44,160 --> 00:47:52,589
call the actual not ok so that's what we

00:47:49,989 --> 00:47:52,589
are going to do

00:47:52,940 --> 00:48:00,829
and for that we we probably try to make

00:47:58,940 --> 00:48:02,810
our life easier right because we have

00:48:00,829 --> 00:48:05,180
all those methods which needs to be

00:48:02,810 --> 00:48:07,510
refactored and one of the thing is that

00:48:05,180 --> 00:48:10,670
we would move at one point two buffers

00:48:07,510 --> 00:48:14,750
and buffers I will have vertices then

00:48:10,670 --> 00:48:17,180
when I call for creating a geometry I

00:48:14,750 --> 00:48:19,579
need all my vertices to you all be about

00:48:17,180 --> 00:48:21,619
triangles or to be all about quads or to

00:48:19,579 --> 00:48:23,839
be all bad points or to be I can't

00:48:21,619 --> 00:48:25,720
really mix between the types okay

00:48:23,839 --> 00:48:30,530
problem i have here with that method

00:48:25,720 --> 00:48:32,329
that well 54 then i'm creating triangles

00:48:30,530 --> 00:48:35,000
and that at one point we finish in

00:48:32,329 --> 00:48:37,339
buffer or if i have a time creating

00:48:35,000 --> 00:48:39,140
quads and that we probably finish in the

00:48:37,339 --> 00:48:40,940
same buffer depending how i want to

00:48:39,140 --> 00:48:43,670
approach the thing so if i want to avoid

00:48:40,940 --> 00:48:47,329
that problem then i will need to change

00:48:43,670 --> 00:48:50,300
from quads two triangles okay and that's

00:48:47,329 --> 00:48:56,000
why one of the situations where the

00:48:50,300 --> 00:48:58,010
record replay approach is more flexible

00:48:56,000 --> 00:49:00,530
than when you're using Gordon master

00:48:58,010 --> 00:49:01,910
right if you are using golden master and

00:49:00,530 --> 00:49:05,690
you duplicated your system and you

00:49:01,910 --> 00:49:09,920
compare them all the time then you have

00:49:05,690 --> 00:49:12,050
no real way to you have no flexibility

00:49:09,920 --> 00:49:15,980
right you cannot change anything at all

00:49:12,050 --> 00:49:18,290
why in that case i can say okay I would

00:49:15,980 --> 00:49:20,060
take a small risk here because was

00:49:18,290 --> 00:49:23,030
always my refactoring basically stop

00:49:20,060 --> 00:49:26,240
there and I have to do stuff without the

00:49:23,030 --> 00:49:28,910
test so what i will do is I'm taking a

00:49:26,240 --> 00:49:34,400
small risk I'm just changing that one

00:49:28,910 --> 00:49:36,290
from quad to triangles I verify then

00:49:34,400 --> 00:49:38,750
that ki stop I'm not using the automated

00:49:36,290 --> 00:49:40,369
test right I verify everything manually

00:49:38,750 --> 00:49:41,930
which I won't do it because we won't

00:49:40,369 --> 00:49:44,599
have the time but I verify everything

00:49:41,930 --> 00:49:47,510
manually which is covered by by the quad

00:49:44,599 --> 00:49:49,550
if I'm satisfied with that then I can

00:49:47,510 --> 00:49:51,310
make a new record and that becomes my

00:49:49,550 --> 00:49:54,200
new reference point and I can carry on

00:49:51,310 --> 00:49:56,210
okay so there is more flexibility built

00:49:54,200 --> 00:50:00,349
in record we played because of that my

00:49:56,210 --> 00:50:03,050
in my opinion so we talk we buy tablet

00:50:00,349 --> 00:50:05,530
be right right and takes a small risk so

00:50:03,050 --> 00:50:09,220
i have the jl triangles here

00:50:05,530 --> 00:50:12,070
okay and abuse me is since I move from

00:50:09,220 --> 00:50:13,510
one to the other if I just run replay

00:50:12,070 --> 00:50:15,910
their it with the new you bought

00:50:13,510 --> 00:50:17,560
something so I don't want to run replay

00:50:15,910 --> 00:50:20,350
you see because i know we have broken

00:50:17,560 --> 00:50:22,810
something what i want to do is to run

00:50:20,350 --> 00:50:24,250
points and just a test because i don't

00:50:22,810 --> 00:50:27,220
have much time so instead of doing it

00:50:24,250 --> 00:50:30,520
manually and i look at it and yeah that

00:50:27,220 --> 00:50:33,340
seems fine right again I'm fast-tracking

00:50:30,520 --> 00:50:34,510
a bit in practice I would never ever do

00:50:33,340 --> 00:50:37,150
that we should test like that right I

00:50:34,510 --> 00:50:39,610
would do it by and that shows to make

00:50:37,150 --> 00:50:45,040
the point so yeah visually that's fine

00:50:39,610 --> 00:50:47,290
so then here is my new reference point

00:50:45,040 --> 00:50:49,600
right by recording my new reference

00:50:47,290 --> 00:50:54,130
point and now I can carry on again with

00:50:49,600 --> 00:50:56,140
my with my a refactoring I don't know

00:50:54,130 --> 00:51:03,250
how much time we have left yeah where

00:50:56,140 --> 00:51:05,470
I'm was there okay so i can do that once

00:51:03,250 --> 00:51:07,810
i've done that i can then start you

00:51:05,470 --> 00:51:10,630
really get into more fine-grain

00:51:07,810 --> 00:51:12,580
refactoring like yeah that's really ugly

00:51:10,630 --> 00:51:15,790
right and i don't want to keep that when

00:51:12,580 --> 00:51:17,920
i'm generating my buffers later on so

00:51:15,790 --> 00:51:19,720
since I have a new reference point and i

00:51:17,920 --> 00:51:20,890
know i have triangles everywhere i can

00:51:19,720 --> 00:51:23,620
start to refactor like for instance

00:51:20,890 --> 00:51:25,990
adding the GL begin GL and outside of my

00:51:23,620 --> 00:51:29,140
switch and then i can figure out that

00:51:25,990 --> 00:51:31,540
they all look very similar right that

00:51:29,140 --> 00:51:34,380
one that one looks seminars that go

00:51:31,540 --> 00:51:37,450
through a lookup table lookup table and

00:51:34,380 --> 00:51:38,980
that one node cap table but maybe I

00:51:37,450 --> 00:51:41,320
could introduce one and then they're all

00:51:38,980 --> 00:51:43,930
similar right so you can get into this

00:51:41,320 --> 00:51:45,790
kind of set you know focus on one method

00:51:43,930 --> 00:51:47,830
get to be crazy about that because you

00:51:45,790 --> 00:51:50,470
can try stuff and see if that breaks or

00:51:47,830 --> 00:51:52,660
not right or you're very free in that

00:51:50,470 --> 00:51:55,480
regard and since I have only a few

00:51:52,660 --> 00:51:57,540
minutes left just show you how that

00:51:55,480 --> 00:52:00,250
could look right so we are adding more

00:51:57,540 --> 00:52:02,140
of those who kept tables and then we

00:52:00,250 --> 00:52:05,760
factor out as much as we can and we

00:52:02,140 --> 00:52:09,490
basically just have need loop here right

00:52:05,760 --> 00:52:12,100
we shrink that we also dropped quite a

00:52:09,490 --> 00:52:13,870
bit of the arrays which were there and

00:52:12,100 --> 00:52:15,760
not really needy drain because we filled

00:52:13,870 --> 00:52:18,190
out yeah I can try to remove it and see

00:52:15,760 --> 00:52:20,920
if that still works still works though

00:52:18,190 --> 00:52:26,740
re on so you can you can use this kind

00:52:20,920 --> 00:52:29,520
this kind of work same thing here for

00:52:26,740 --> 00:52:31,600
the line strip when we will create

00:52:29,520 --> 00:52:33,340
buffers will have a problem right

00:52:31,600 --> 00:52:35,080
because we have to line strip next to

00:52:33,340 --> 00:52:36,400
each other so the end of the night

00:52:35,080 --> 00:52:38,530
straight line 3 will become the

00:52:36,400 --> 00:52:40,690
beginning of the next one so we need to

00:52:38,530 --> 00:52:42,670
pop that so again we got replay gives us

00:52:40,690 --> 00:52:44,620
flexibility there we're saying okay I

00:52:42,670 --> 00:52:51,610
will take another small ranges can move

00:52:44,620 --> 00:52:55,720
from line three two lines maybe listen

00:52:51,610 --> 00:52:57,010
x1 yeah now first we are verifying yeah

00:52:55,720 --> 00:52:59,280
one other thing you might want to do in

00:52:57,010 --> 00:53:01,300
this kind of situation that's verifying

00:52:59,280 --> 00:53:02,890
theories right because i know i will

00:53:01,300 --> 00:53:05,140
move to the first so i don't want to

00:53:02,890 --> 00:53:07,630
have triangles and line stripes in the

00:53:05,140 --> 00:53:10,060
same stripes in the same buffer so what

00:53:07,630 --> 00:53:13,150
i'm doing here is i'm verifying my

00:53:10,060 --> 00:53:15,670
theory so to verify my theory i just add

00:53:13,150 --> 00:53:18,370
a certain after i add i memorize

00:53:15,670 --> 00:53:21,640
whatever primitive i'm about to create

00:53:18,370 --> 00:53:23,710
and then I verify that if something is

00:53:21,640 --> 00:53:26,500
set right at triangles to make sure that

00:53:23,710 --> 00:53:28,660
if I'm cold ones for that node on add

00:53:26,500 --> 00:53:30,640
faces and add polyline will never be

00:53:28,660 --> 00:53:32,530
called on that one right so you might

00:53:30,640 --> 00:53:34,270
want to try this kind of thing so we

00:53:32,530 --> 00:53:39,820
have that in that faces we have that in

00:53:34,270 --> 00:53:41,290
at poly line and then I could run the

00:53:39,820 --> 00:53:42,730
test again and verify that it's not

00:53:41,290 --> 00:53:46,110
crushing the time just have a few

00:53:42,730 --> 00:53:50,530
minutes left and then I can move two

00:53:46,110 --> 00:53:52,570
lines so if I move two lines now i'm

00:53:50,530 --> 00:53:56,950
basically ready to move all of that to

00:53:52,570 --> 00:53:58,570
be fair I and inside your lair where

00:53:56,950 --> 00:54:03,640
there was not much apart from the

00:53:58,570 --> 00:54:07,420
material and least management ok so no

00:54:03,640 --> 00:54:11,500
big deal no big refactoring to do to do

00:54:07,420 --> 00:54:15,040
there and so we can get into now

00:54:11,500 --> 00:54:17,140
preparing GL view to actually pass

00:54:15,040 --> 00:54:19,240
information properly to the layer right

00:54:17,140 --> 00:54:21,730
because what we have here is that we are

00:54:19,240 --> 00:54:24,370
the old way of specifying the matrices

00:54:21,730 --> 00:54:27,640
when we will pour two shaders and so on

00:54:24,370 --> 00:54:29,100
we want to set the matrices as uniforms

00:54:27,640 --> 00:54:33,420
on the shader

00:54:29,100 --> 00:54:36,060
so what we want is to use the cute types

00:54:33,420 --> 00:54:42,060
for matrices in there and pass that to

00:54:36,060 --> 00:54:44,190
the career right so I'm just right

00:54:42,060 --> 00:54:45,840
creating for the modelview while I'm

00:54:44,190 --> 00:54:48,870
doing exactly the same thing right same

00:54:45,840 --> 00:54:50,820
translation same rotation for the

00:54:48,870 --> 00:54:53,760
projection same perspective right and

00:54:50,820 --> 00:54:59,010
duplicating temporaries occurred and I'm

00:54:53,760 --> 00:55:01,590
passing that to my scene layer okay to

00:54:59,010 --> 00:55:06,570
the call to my senior I don't consume it

00:55:01,590 --> 00:55:08,790
yet but at that point i can put layers

00:55:06,570 --> 00:55:10,350
to shaders right i can leave behind I

00:55:08,790 --> 00:55:12,900
have all the informations I have that

00:55:10,350 --> 00:55:19,740
class at the right time to port from

00:55:12,900 --> 00:55:22,380
draw least two shaders and so that's

00:55:19,740 --> 00:55:25,410
what I do here right I have my program

00:55:22,380 --> 00:55:27,210
and then I can bind it and I can set the

00:55:25,410 --> 00:55:32,190
uniforms with different matrices which

00:55:27,210 --> 00:55:34,530
are fast and then notice oddly call that

00:55:32,190 --> 00:55:36,360
we had here remember previously I told

00:55:34,530 --> 00:55:39,450
you because of the release I out here it

00:55:36,360 --> 00:55:43,230
moved up there okay and that's way more

00:55:39,450 --> 00:55:45,450
logical right I'm calling so I'm cutting

00:55:43,230 --> 00:55:46,980
the rendering of the layer and delegate

00:55:45,450 --> 00:55:48,930
use the rendering of the different not

00:55:46,980 --> 00:55:51,500
right so that's much more natural way of

00:55:48,930 --> 00:55:54,060
approaching intern with such released

00:55:51,500 --> 00:55:56,460
then the other stuff we have forced

00:55:54,060 --> 00:55:58,950
program that setting the uniform right

00:55:56,460 --> 00:56:02,250
falls in materials or light whatever is

00:55:58,950 --> 00:56:05,820
consumed by your shader and depending

00:56:02,250 --> 00:56:07,800
you remember all those weird code we had

00:56:05,820 --> 00:56:10,230
inside of the switch as becomes while

00:56:07,800 --> 00:56:13,080
I'm sorry about the tooltip I mean the

00:56:10,230 --> 00:56:16,080
mother least so I would use a phone yes

00:56:13,080 --> 00:56:19,190
I finally got you use a phone model i

00:56:16,080 --> 00:56:23,040
will use plain color if thats for the

00:56:19,190 --> 00:56:25,980
normal aww okay obviously at that point

00:56:23,040 --> 00:56:27,930
i cannot use anymore my test right i am

00:56:25,980 --> 00:56:30,390
doing a port now I'm not refactoring

00:56:27,930 --> 00:56:32,220
anymore so my tests I have to move leave

00:56:30,390 --> 00:56:35,070
it behind at that very stage but not

00:56:32,220 --> 00:56:37,440
before right I did all the rest safely

00:56:35,070 --> 00:56:40,450
and when i get to support because it's

00:56:37,440 --> 00:56:42,849
important then I have no choice then I'm

00:56:40,450 --> 00:56:46,390
in a better position to be able to do

00:56:42,849 --> 00:56:48,970
that last step so we parted layer to

00:56:46,390 --> 00:56:51,460
shaders so if i run it i would just do

00:56:48,970 --> 00:56:53,109
it for fun but if i run it again so i

00:56:51,460 --> 00:56:55,300
think that the only step where we have

00:56:53,109 --> 00:56:57,970
something broken when we look at it

00:56:55,300 --> 00:57:00,760
right because here i potted one class

00:56:57,970 --> 00:57:03,490
the layer class but not the nodes right

00:57:00,760 --> 00:57:05,140
so I in between two walls right now is

00:57:03,490 --> 00:57:08,109
you need to make the buffer so that my

00:57:05,140 --> 00:57:10,450
shadow do something meaningful right so

00:57:08,109 --> 00:57:14,410
that's just because of that so now i

00:57:10,450 --> 00:57:17,290
will put the nodes to buffer so i will

00:57:14,410 --> 00:57:27,190
probably stay on that one right now that

00:57:17,290 --> 00:57:30,369
we see how it looks right now there's

00:57:27,190 --> 00:57:34,150
one thing i forgot e that for the nods

00:57:30,369 --> 00:57:36,220
we have to do this we have to do the

00:57:34,150 --> 00:57:38,440
same thing than we did with the layers

00:57:36,220 --> 00:57:40,710
right since we need to attach or prefer

00:57:38,440 --> 00:57:44,079
to use the shader right to set it as

00:57:40,710 --> 00:57:49,480
attributes we have to pass the shader

00:57:44,079 --> 00:57:51,750
program to to the nut right so in the

00:57:49,480 --> 00:57:54,310
case of my lair of the curve becomes

00:57:51,750 --> 00:57:58,510
slightly different right we're passing

00:57:54,310 --> 00:58:00,609
the actual problem and then I can

00:57:58,510 --> 00:58:04,810
actually put that really to the first

00:58:00,609 --> 00:58:06,670
now I jumped around but you will notice

00:58:04,810 --> 00:58:09,339
that I basically have the same structure

00:58:06,670 --> 00:58:12,099
right didn't change much what changes

00:58:09,339 --> 00:58:18,030
that now instead of calling GL method I

00:58:12,099 --> 00:58:23,920
basically store that in 2q vector and

00:58:18,030 --> 00:58:27,400
then when it's released I empty my

00:58:23,920 --> 00:58:32,410
vector inside of my buffer and when it's

00:58:27,400 --> 00:58:35,530
cold i bind my buffer to the shader

00:58:32,410 --> 00:58:38,530
program says he explained to the shader

00:58:35,530 --> 00:58:41,410
program all my buffer is layout it and

00:58:38,530 --> 00:58:43,390
then I have a GL drawer I scored ok and

00:58:41,410 --> 00:58:45,900
at that point i'm done with the port

00:58:43,390 --> 00:58:45,900
basically

00:58:51,210 --> 00:58:57,130
and you will notice that the shading is

00:58:54,009 --> 00:59:01,390
actually slightly nicer than what we had

00:58:57,130 --> 00:59:03,970
before but not for seen on Mars but we

00:59:01,390 --> 00:59:07,720
just run it manually so that you can see

00:59:03,970 --> 00:59:10,390
something right that if i create let's

00:59:07,720 --> 00:59:11,769
take that one right I mean the look is

00:59:10,390 --> 00:59:14,859
not the same than before right we have a

00:59:11,769 --> 00:59:18,430
much nicer or smooth shading than what

00:59:14,859 --> 00:59:20,140
we had with the grading right in that

00:59:18,430 --> 00:59:22,269
one and so we are basically done with

00:59:20,140 --> 00:59:25,809
the pot right at that point we satisfy

00:59:22,269 --> 00:59:28,089
the the customer demand with the minimal

00:59:25,809 --> 00:59:29,740
amount of risk possible along the way

00:59:28,089 --> 00:59:33,009
right changing the structure without

00:59:29,740 --> 00:59:34,960
breaking anything for sure and then just

00:59:33,009 --> 00:59:37,329
having simple pots right because we

00:59:34,960 --> 00:59:39,519
segregated the different lovers properly

00:59:37,329 --> 00:59:41,859
so each of those class became is your to

00:59:39,519 --> 00:59:44,440
pot if I try to pour directly from

00:59:41,859 --> 00:59:45,940
within glu with everything there's I

00:59:44,440 --> 00:59:47,769
chances that i would break something

00:59:45,940 --> 00:59:49,210
along the way and spend a long period of

00:59:47,769 --> 00:59:52,269
time where I have black screen basically

00:59:49,210 --> 00:59:54,789
right I'm not seeing anything after that

00:59:52,269 --> 00:59:56,769
station I would stop just in a second

00:59:54,789 --> 00:59:58,539
but after that stage you basically

00:59:56,769 --> 00:59:59,890
there's a few more cleanups you might

00:59:58,539 --> 01:00:02,799
want to do here and there because that's

00:59:59,890 --> 01:00:04,869
not relevant in any more into shade

01:00:02,799 --> 01:00:06,549
shade or territory but just removing a

01:00:04,869 --> 01:00:10,029
few coercion and there i'm not showing

01:00:06,549 --> 01:00:13,089
that and we are out of time so thank you

01:00:10,029 --> 01:00:16,269
for your attention if you are not

01:00:13,089 --> 01:00:18,849
starving you can ask me question if

01:00:16,269 --> 01:00:24,999
you're starting I feel free to grab some

01:00:18,849 --> 01:00:28,359
food up to you're not allowed to a food

01:00:24,999 --> 01:00:30,670
yet so group pic to your first in c1 and

01:00:28,359 --> 01:00:34,650
then you can have then you can have your

01:00:30,670 --> 01:00:34,650

YouTube URL: https://www.youtube.com/watch?v=14xNEHe7LcA


