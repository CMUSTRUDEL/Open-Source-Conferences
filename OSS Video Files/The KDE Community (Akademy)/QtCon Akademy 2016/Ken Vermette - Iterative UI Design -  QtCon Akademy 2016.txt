Title: Ken Vermette - Iterative UI Design -  QtCon Akademy 2016
Publication date: 2016-09-04
Playlist: QtCon Akademy 2016
Description: 
	Designing the optimal user interface is an iterative process. This talk will cover targets and pitfalls made when iterating on new and existing interfaces.

K_ver
Captions: 
	00:00:04,609 --> 00:00:10,500
and good afternoon we have got caver

00:00:07,319 --> 00:00:12,630
over here caver Ken Vermette a member of

00:00:10,500 --> 00:00:14,490
our visual design group if you don't

00:00:12,630 --> 00:00:19,230
like our wallpapers I default wallpapers

00:00:14,490 --> 00:00:21,390
this is the guy who'd want to kill ok

00:00:19,230 --> 00:00:24,810
and he's got a talk on iterative you UI

00:00:21,390 --> 00:00:28,470
design and I'll states yours stick

00:00:24,810 --> 00:00:30,810
forward all right hello everyone my name

00:00:28,470 --> 00:00:33,600
is Ken Vermette I'm a web developer and

00:00:30,810 --> 00:00:35,760
graphic artist from Canada I've been

00:00:33,600 --> 00:00:39,420
with the KDE visual design group for a

00:00:35,760 --> 00:00:41,610
couple of years now and you can thank

00:00:39,420 --> 00:00:43,050
the ends for roping me into it and me

00:00:41,610 --> 00:00:44,879
making a bunch of horrible wallpapers

00:00:43,050 --> 00:00:49,739
early on and I've been trying to make up

00:00:44,879 --> 00:00:51,930
for that ever since so anyways there's

00:00:49,739 --> 00:00:54,360
this big misconception I need to say

00:00:51,930 --> 00:00:56,789
about Canadians that we apologize all

00:00:54,360 --> 00:00:59,550
the time I just want to say that's

00:00:56,789 --> 00:01:04,610
flat-out untrue and we need to get on

00:00:59,550 --> 00:01:06,900
with it ok another thing sorry I'm

00:01:04,610 --> 00:01:10,740
probably going to pronounce cute at

00:01:06,900 --> 00:01:14,580
least 17 different ways because I'm poor

00:01:10,740 --> 00:01:16,650
so getting right into it the goals of

00:01:14,580 --> 00:01:18,680
this talk normally with interative

00:01:16,650 --> 00:01:21,360
design you're talking about prototyping

00:01:18,680 --> 00:01:23,549
testing doing analysis and then are

00:01:21,360 --> 00:01:25,350
finally I'm not going to be talking

00:01:23,549 --> 00:01:29,009
specifically about how to go through

00:01:25,350 --> 00:01:32,310
this process the methodology and the

00:01:29,009 --> 00:01:33,900
resources we have available will vary we

00:01:32,310 --> 00:01:35,790
have an incredibly diverse crowd here

00:01:33,900 --> 00:01:38,310
from large companies to open source

00:01:35,790 --> 00:01:40,740
hackers so instead I'll just be talking

00:01:38,310 --> 00:01:43,079
about iteration very literally we have

00:01:40,740 --> 00:01:45,360
an application we're going to change it

00:01:43,079 --> 00:01:48,649
we have some very practical things we

00:01:45,360 --> 00:01:51,420
can do to make those changes effective

00:01:48,649 --> 00:01:54,720
not to cough our users and just go more

00:01:51,420 --> 00:01:57,270
smoothly so we're going to learn about

00:01:54,720 --> 00:02:00,119
iteration cadence and how it affects

00:01:57,270 --> 00:02:02,159
user expectations we're going to quickly

00:02:00,119 --> 00:02:05,250
talk about personas and how they affect

00:02:02,159 --> 00:02:06,750
decisions on a step-by-step level and

00:02:05,250 --> 00:02:09,110
we're going to cover some strategies and

00:02:06,750 --> 00:02:11,420
pitfalls when iterating on our design

00:02:09,110 --> 00:02:15,080
and it occurred to me flip those around

00:02:11,420 --> 00:02:16,570
because I'd that any word first some

00:02:15,080 --> 00:02:18,950
definitions who are all on the same page

00:02:16,570 --> 00:02:20,570
visual design that's how your

00:02:18,950 --> 00:02:22,700
application looks that's the colors

00:02:20,570 --> 00:02:25,250
that's the imagery animations it can be

00:02:22,700 --> 00:02:28,880
lines anything visual which doesn't

00:02:25,250 --> 00:02:31,070
actually affect how it's used visual

00:02:28,880 --> 00:02:33,410
design does affect how people think it

00:02:31,070 --> 00:02:37,730
will be used and what they think the

00:02:33,410 --> 00:02:42,190
workflow will be so this is an example

00:02:37,730 --> 00:02:44,660
of just same application same everything

00:02:42,190 --> 00:02:48,250
you can see that the one on the top left

00:02:44,660 --> 00:02:51,050
is the oxygen style from plasma for days

00:02:48,250 --> 00:02:54,080
and one thing you can see in there is

00:02:51,050 --> 00:02:58,100
the pain on the left has the extra frame

00:02:54,080 --> 00:03:01,160
around it so okay what this tells users

00:02:58,100 --> 00:03:11,680
is that that is isolated in some way you

00:03:01,160 --> 00:03:15,739
can actually rip it off Oh Roger that so

00:03:11,680 --> 00:03:19,430
now this is going to be awkward so with

00:03:15,739 --> 00:03:21,140
the frame what you can do is as user you

00:03:19,430 --> 00:03:23,000
can see that things are isolated here

00:03:21,140 --> 00:03:26,209
you can actually pull that off it will

00:03:23,000 --> 00:03:28,549
become a window so that's a visual

00:03:26,209 --> 00:03:32,090
indicator from the oxygen style

00:03:28,549 --> 00:03:34,250
meanwhile a breeze lacks that frame and

00:03:32,090 --> 00:03:35,930
it actually provides less visual

00:03:34,250 --> 00:03:39,799
separation between the pain and the

00:03:35,930 --> 00:03:41,870
contents so users may actually have more

00:03:39,799 --> 00:03:43,610
indicators that when you interact with

00:03:41,870 --> 00:03:45,260
that left side pane it'll interact with

00:03:43,610 --> 00:03:47,930
the right side pane that's just an

00:03:45,260 --> 00:03:50,500
example of how a very minor minor visual

00:03:47,930 --> 00:03:52,850
tweak will affect how users see design

00:03:50,500 --> 00:03:55,340
another note is with the breeze style

00:03:52,850 --> 00:03:58,850
it's less obvious that that can be torn

00:03:55,340 --> 00:04:00,320
out into a window workflow workflow is

00:03:58,850 --> 00:04:02,390
the placement of the components how

00:04:00,320 --> 00:04:03,950
would they interact with one another how

00:04:02,390 --> 00:04:07,970
they're accessed and the optimal way to

00:04:03,950 --> 00:04:10,360
use them workflow affects how people use

00:04:07,970 --> 00:04:13,750
the functionality of your application a

00:04:10,360 --> 00:04:16,310
big example of a change in workflow is

00:04:13,750 --> 00:04:19,099
with Microsoft and the introduction of

00:04:16,310 --> 00:04:21,450
their ribbon interface compared to menus

00:04:19,099 --> 00:04:23,730
it's actually a fairly similar

00:04:21,450 --> 00:04:26,010
at first glance you have your row of

00:04:23,730 --> 00:04:27,630
options going across the top and then it

00:04:26,010 --> 00:04:29,700
drops down into the various

00:04:27,630 --> 00:04:31,200
subcategories of options the big

00:04:29,700 --> 00:04:32,550
difference with the ribbon is that it's

00:04:31,200 --> 00:04:34,860
organized in a way that you see

00:04:32,550 --> 00:04:37,740
everything more upfront it's persistent

00:04:34,860 --> 00:04:40,380
and some things have more focus than

00:04:37,740 --> 00:04:43,670
others but just that little tweak

00:04:40,380 --> 00:04:45,660
changes the workflow significantly

00:04:43,670 --> 00:04:47,430
functionality what our software can

00:04:45,660 --> 00:04:49,740
actually do you can have the most

00:04:47,430 --> 00:04:52,140
powerful software on earth it doesn't

00:04:49,740 --> 00:04:55,110
count for anything if users can't access

00:04:52,140 --> 00:04:57,690
that potential for example I won't say

00:04:55,110 --> 00:04:59,430
what projects specifically but I was

00:04:57,690 --> 00:05:02,670
having a brilliant tech demonstration

00:04:59,430 --> 00:05:04,440
with somebody at some Sprint's ago I was

00:05:02,670 --> 00:05:06,300
absolutely amazed by the things the

00:05:04,440 --> 00:05:10,860
software was doing there was no way to

00:05:06,300 --> 00:05:13,430
actually access any of that power and

00:05:10,860 --> 00:05:15,030
this is just a call graph because I

00:05:13,430 --> 00:05:17,630
couldn't think of another way to

00:05:15,030 --> 00:05:20,490
represent functionality so functions

00:05:17,630 --> 00:05:22,440
cadence the last thing the tick-tock

00:05:20,490 --> 00:05:24,960
clicks cycle of releases where we

00:05:22,440 --> 00:05:28,080
release large overhauls smaller updates

00:05:24,960 --> 00:05:30,600
and fixes to our interfaces now a note

00:05:28,080 --> 00:05:33,420
about cadence is that visual design

00:05:30,600 --> 00:05:36,840
workflow and the functionality all do

00:05:33,420 --> 00:05:40,260
follow different cadences at least if

00:05:36,840 --> 00:05:42,300
they're not deliberately synced up so

00:05:40,260 --> 00:05:45,420
for example with the modern design

00:05:42,300 --> 00:05:47,790
introduced in Windows 8 that exists in

00:05:45,420 --> 00:05:49,620
to windows 10 but they have completely

00:05:47,790 --> 00:05:52,290
different workflows one uses the Start

00:05:49,620 --> 00:05:53,580
menu the other uses the tile menu unless

00:05:52,290 --> 00:05:56,640
you go and install a bunch of

00:05:53,580 --> 00:05:58,830
third-party applications we can exploit

00:05:56,640 --> 00:06:00,930
the offset of these cadences to better

00:05:58,830 --> 00:06:02,820
prepare and transition our users by

00:06:00,930 --> 00:06:07,230
setting expectations and what I mean by

00:06:02,820 --> 00:06:09,540
this is that if we for example do a

00:06:07,230 --> 00:06:13,020
large visual overhaul to an application

00:06:09,540 --> 00:06:14,190
users will expect that the application

00:06:13,020 --> 00:06:16,590
will function differently or have a

00:06:14,190 --> 00:06:18,210
different workflow so if we want to

00:06:16,590 --> 00:06:20,280
start introduce you introducing these

00:06:18,210 --> 00:06:23,070
changes than what we can do is just

00:06:20,280 --> 00:06:26,250
simply start by adding these minor

00:06:23,070 --> 00:06:28,830
visual changes and then users will build

00:06:26,250 --> 00:06:30,600
that expectation up themselves so

00:06:28,830 --> 00:06:34,420
getting on with it out of definitions

00:06:30,600 --> 00:06:36,550
these major iterations they tend to use

00:06:34,420 --> 00:06:39,970
we all know and love them Metro

00:06:36,550 --> 00:06:41,920
australis breeze material these are ones

00:06:39,970 --> 00:06:44,170
that tend to be provided for us to use

00:06:41,920 --> 00:06:46,480
my narrative iterations to our

00:06:44,170 --> 00:06:49,060
applications should hopefully just

00:06:46,480 --> 00:06:52,180
refine and reinforce what that major

00:06:49,060 --> 00:06:55,090
iteration or vision and to do so if

00:06:52,180 --> 00:06:56,950
material aims to have a nice flow to it

00:06:55,090 --> 00:06:59,350
we should try to reinforce that instead

00:06:56,950 --> 00:07:01,000
of moving away from it when working with

00:06:59,350 --> 00:07:05,040
well-defined platforms the overall

00:07:01,000 --> 00:07:05,040
design is usually given to us meaning

00:07:05,550 --> 00:07:11,260
meaning that B major major iterations

00:07:08,560 --> 00:07:13,540
stick around as long as the specs do so

00:07:11,260 --> 00:07:15,070
we get one nice big stab at getting the

00:07:13,540 --> 00:07:18,970
user interface rate and then from there

00:07:15,070 --> 00:07:22,030
we're refining so the first thing we

00:07:18,970 --> 00:07:26,170
should do if we're given a set of

00:07:22,030 --> 00:07:27,580
specifications we should try to we

00:07:26,170 --> 00:07:30,010
should just try to iterate closer to

00:07:27,580 --> 00:07:31,630
them as we can if you dislike the

00:07:30,010 --> 00:07:33,850
specification because I know we have

00:07:31,630 --> 00:07:37,210
some people here that hate the material

00:07:33,850 --> 00:07:39,580
design the animations if you don't like

00:07:37,210 --> 00:07:42,220
the specs then usually there's ways to

00:07:39,580 --> 00:07:45,310
like bend usually there's a few avenues

00:07:42,220 --> 00:07:46,570
to present buttons so there's ways that

00:07:45,310 --> 00:07:48,940
we can kind of try to make the

00:07:46,570 --> 00:07:50,830
interfaces that we like well still

00:07:48,940 --> 00:07:52,840
following the specs but we shouldn't try

00:07:50,830 --> 00:07:54,520
to deliberately just break away from

00:07:52,840 --> 00:07:57,460
specs that's what they're there for

00:07:54,520 --> 00:07:58,780
that's what users know and by breaking

00:07:57,460 --> 00:08:01,210
away from the spec even though it works

00:07:58,780 --> 00:08:04,330
for us it'll be broken for literally

00:08:01,210 --> 00:08:09,030
everyone else when we're working without

00:08:04,330 --> 00:08:12,280
specs web designer is what I am by trade

00:08:09,030 --> 00:08:17,020
we work without specifications we have

00:08:12,280 --> 00:08:19,270
HTML and we wing the UI every time try

00:08:17,020 --> 00:08:21,730
to use fewer unique workflows in

00:08:19,270 --> 00:08:23,320
whatever you're making if you see a

00:08:21,730 --> 00:08:26,410
chance to consolidate your workflows

00:08:23,320 --> 00:08:29,170
take those chances every every time you

00:08:26,410 --> 00:08:31,840
can see what two parts of your

00:08:29,170 --> 00:08:34,450
application are similar and see if you

00:08:31,840 --> 00:08:37,270
can just combine them into one single

00:08:34,450 --> 00:08:40,420
component codify these refined workloads

00:08:37,270 --> 00:08:42,520
into components and classes and more

00:08:40,420 --> 00:08:44,270
thoroughly reintegrate and recycle each

00:08:42,520 --> 00:08:46,220
round that might include make

00:08:44,270 --> 00:08:48,890
your own specs and saying okay this is

00:08:46,220 --> 00:08:50,180
how this application is going to run so

00:08:48,890 --> 00:08:52,310
that way you can pass off your own

00:08:50,180 --> 00:08:54,680
specification to the next person taking

00:08:52,310 --> 00:08:57,590
over your project if you're using few

00:08:54,680 --> 00:08:59,900
widget still I am so sorry but look at

00:08:57,590 --> 00:09:02,390
porting components or windows to qml qml

00:08:59,900 --> 00:09:04,460
is amazing iteration is better I was

00:09:02,390 --> 00:09:06,410
going to show some qml stuff in this

00:09:04,460 --> 00:09:08,750
presentation but I think we're all

00:09:06,410 --> 00:09:10,250
getting pretty familiar with it and in a

00:09:08,750 --> 00:09:12,500
design talk i'm not exactly going to

00:09:10,250 --> 00:09:14,140
teach you a whole language if you're

00:09:12,500 --> 00:09:16,490
getting slammed by the design process

00:09:14,140 --> 00:09:20,000
consider using an existing design

00:09:16,490 --> 00:09:21,980
framework such as kirigami you I that's

00:09:20,000 --> 00:09:24,980
one you might have seen in some of the

00:09:21,980 --> 00:09:28,250
KDE plasma relay into talks it's

00:09:24,980 --> 00:09:31,220
brilliant go ahead use it it'll give you

00:09:28,250 --> 00:09:34,070
everything you need setting the user

00:09:31,220 --> 00:09:35,660
expectations and behaviors when as I

00:09:34,070 --> 00:09:38,300
mentioned before when people see a major

00:09:35,660 --> 00:09:40,750
design change they often expect the

00:09:38,300 --> 00:09:42,860
workflow or feature set to change

00:09:40,750 --> 00:09:44,990
confident users when they see these

00:09:42,860 --> 00:09:46,370
changes will read explore the

00:09:44,990 --> 00:09:47,990
application they'll inspect you eyes

00:09:46,370 --> 00:09:49,400
these are everybody in the audience

00:09:47,990 --> 00:09:51,530
everybody who knows how to use a

00:09:49,400 --> 00:09:54,290
computer they see something new and be

00:09:51,530 --> 00:09:56,960
like what can I do with this if without

00:09:54,290 --> 00:09:58,970
instruction uncertain or novice users

00:09:56,960 --> 00:10:01,190
these are a lot of office people who

00:09:58,970 --> 00:10:03,080
don't necessarily know how to use

00:10:01,190 --> 00:10:05,540
computer they're just kind of trained

00:10:03,080 --> 00:10:08,660
and they do what they know they're going

00:10:05,540 --> 00:10:10,400
to recheck to know if their stuff still

00:10:08,660 --> 00:10:12,680
works they're going to go with what's

00:10:10,400 --> 00:10:15,620
safe they might even reduce what they

00:10:12,680 --> 00:10:17,990
use until they can easily rien tify and

00:10:15,620 --> 00:10:19,910
rediscover whatever might have changed

00:10:17,990 --> 00:10:21,740
and this will happen even if the

00:10:19,910 --> 00:10:24,560
workflow has not changed at all if you

00:10:21,740 --> 00:10:26,060
just change the visual look sometimes

00:10:24,560 --> 00:10:28,010
they will do that they'll go oh that's

00:10:26,060 --> 00:10:30,290
different and then they'll panic and

00:10:28,010 --> 00:10:34,220
shut down so we have to be very careful

00:10:30,290 --> 00:10:36,470
about how we do this and we can very

00:10:34,220 --> 00:10:38,420
gradually introduce design changes if we

00:10:36,470 --> 00:10:39,770
want to make sure that you know if we're

00:10:38,420 --> 00:10:42,200
doing a large enterprise piece of

00:10:39,770 --> 00:10:43,910
software something a lot of people in

00:10:42,200 --> 00:10:47,600
cubicles are going to have to do we can

00:10:43,910 --> 00:10:49,940
be more gradual with our changes major

00:10:47,600 --> 00:10:52,940
iteration strategies if prepping a major

00:10:49,940 --> 00:10:54,920
workflow change refresh the design it's

00:10:52,940 --> 00:10:57,170
probably going to happen anyways by the

00:10:54,920 --> 00:11:01,310
nature of the work if say for example

00:10:57,170 --> 00:11:03,769
moving from just something generic on

00:11:01,310 --> 00:11:05,720
Android say from hollow to material

00:11:03,769 --> 00:11:08,180
everything is going to change ever

00:11:05,720 --> 00:11:10,550
anyway so just simply be prepared that

00:11:08,180 --> 00:11:12,139
that's going to happen when changing the

00:11:10,550 --> 00:11:15,860
workflow it affects multiple aspects of

00:11:12,139 --> 00:11:17,420
the application so what you want to do

00:11:15,860 --> 00:11:19,160
is you want to front-load the biggest

00:11:17,420 --> 00:11:21,829
changes so if you have a feature

00:11:19,160 --> 00:11:23,930
bulletin change like microsoft had the

00:11:21,829 --> 00:11:28,160
the ribbon there you want to put that in

00:11:23,930 --> 00:11:30,459
first let people see it know it possibly

00:11:28,160 --> 00:11:34,089
have an opportunity to toggle it off and

00:11:30,459 --> 00:11:36,560
and over time fold in smaller changes

00:11:34,089 --> 00:11:38,209
maybe look at reducing to the core

00:11:36,560 --> 00:11:40,160
feature set you want to provide so if

00:11:38,209 --> 00:11:42,980
you want to like kill your menus for any

00:11:40,160 --> 00:11:46,010
reason and go with ribbon then that's

00:11:42,980 --> 00:11:50,110
when you would do that and of course

00:11:46,010 --> 00:11:52,820
pair visual refreshes with transitional

00:11:50,110 --> 00:11:55,190
changes to your workflow so that's just

00:11:52,820 --> 00:11:57,110
saying don't change the look and then in

00:11:55,190 --> 00:11:59,240
a completely separate at least change

00:11:57,110 --> 00:12:00,560
the workflow try to do them roughly at

00:11:59,240 --> 00:12:02,060
the same time and that sets the

00:12:00,560 --> 00:12:04,910
expectation that when a user sees it

00:12:02,060 --> 00:12:08,769
they go whoa something's changed that we

00:12:04,910 --> 00:12:12,769
are not tripping them up twice pitfalls

00:12:08,769 --> 00:12:14,510
polishing early designs don't do it get

00:12:12,769 --> 00:12:16,880
your designs good enough when you're

00:12:14,510 --> 00:12:18,829
transitioning to something new but don't

00:12:16,880 --> 00:12:20,420
try to put to too much polish into it

00:12:18,829 --> 00:12:23,120
get it good enough get it looking nice

00:12:20,420 --> 00:12:24,560
worry about the polish later the reason

00:12:23,120 --> 00:12:27,050
being every time you iterate on

00:12:24,560 --> 00:12:28,699
something if it's highly polished if you

00:12:27,050 --> 00:12:30,529
put a lot of work into it we all know

00:12:28,699 --> 00:12:32,959
things tend to fall apart slightly every

00:12:30,529 --> 00:12:35,510
time and kind of skipping to the last

00:12:32,959 --> 00:12:37,279
point we don't want users sensing that

00:12:35,510 --> 00:12:38,810
degradation that you know a polished

00:12:37,279 --> 00:12:41,180
design is gradually falling apart

00:12:38,810 --> 00:12:43,910
instead it's better to introduce with

00:12:41,180 --> 00:12:45,620
something something good enough and then

00:12:43,910 --> 00:12:47,810
to gradually improve it over time so

00:12:45,620 --> 00:12:49,459
that users think oh hey this is getting

00:12:47,810 --> 00:12:51,649
better the problems that I have are

00:12:49,459 --> 00:12:54,380
getting solved as opposed to them seeing

00:12:51,649 --> 00:12:56,810
your design slowly to fall apart before

00:12:54,380 --> 00:12:58,970
you repolish it thinking oh no it's

00:12:56,810 --> 00:13:02,110
falling apart it's getting worse get me

00:12:58,970 --> 00:13:04,459
out of here not respecting your platform

00:13:02,110 --> 00:13:06,040
if it's worth pointing to a platform

00:13:04,459 --> 00:13:11,980
it's worth doing well

00:13:06,040 --> 00:13:14,170
that being said do assess your user base

00:13:11,980 --> 00:13:15,880
if you have if you're expecting ninety

00:13:14,170 --> 00:13:19,360
percent Android users and ten percent

00:13:15,880 --> 00:13:21,310
iOS users do one platform right first

00:13:19,360 --> 00:13:23,380
and when you think your confidence

00:13:21,310 --> 00:13:25,300
enough to move on to something like iOS

00:13:23,380 --> 00:13:28,930
or a different platform then at that

00:13:25,300 --> 00:13:30,819
point try to do a good job there or you

00:13:28,930 --> 00:13:33,279
know we use what you have just at least

00:13:30,819 --> 00:13:34,990
keep it on the docket that the further

00:13:33,279 --> 00:13:36,459
you stray away from your platform

00:13:34,990 --> 00:13:41,639
guidelines the more you hurting your

00:13:36,459 --> 00:13:45,660
users we're going to talk about this

00:13:41,639 --> 00:13:49,389
completely discarding existing designs

00:13:45,660 --> 00:13:50,920
every design has a lifetime windows 8

00:13:49,389 --> 00:13:53,709
was a reaction to the touchscreen

00:13:50,920 --> 00:13:55,930
generation of devices input methods

00:13:53,709 --> 00:13:59,800
change computers get faster we can do

00:13:55,930 --> 00:14:02,680
fancy things the focus changes at first

00:13:59,800 --> 00:14:05,079
always try if you can to allow users to

00:14:02,680 --> 00:14:07,990
restore older workflows or at least

00:14:05,079 --> 00:14:10,750
something similar to them don't change

00:14:07,990 --> 00:14:12,610
the intention of the user interface one

00:14:10,750 --> 00:14:14,380
of the things about Windows 8 it tried

00:14:12,610 --> 00:14:17,019
to shift from productivity to

00:14:14,380 --> 00:14:19,240
consumption and of course that's when

00:14:17,019 --> 00:14:24,100
businesses said we need to actually do

00:14:19,240 --> 00:14:25,589
real work here if the goal is different

00:14:24,100 --> 00:14:29,260
you're designing a different product

00:14:25,589 --> 00:14:30,819
treat it like a different product even

00:14:29,260 --> 00:14:32,829
if you can share ninety percent of the

00:14:30,819 --> 00:14:35,649
code base and just the interface is

00:14:32,829 --> 00:14:38,339
changing I'm not really sure how let's

00:14:35,649 --> 00:14:40,300
get the head how you want to do that but

00:14:38,339 --> 00:14:42,819
but just know that if you're going to

00:14:40,300 --> 00:14:44,139
change everything at least treat it like

00:14:42,819 --> 00:14:47,589
something else so that you don't trip

00:14:44,139 --> 00:14:49,420
everyone designing for corner cases when

00:14:47,589 --> 00:14:51,850
we're iterating or at least getting

00:14:49,420 --> 00:14:53,800
started before iterating we can over

00:14:51,850 --> 00:14:57,939
design things this is one of my biggest

00:14:53,800 --> 00:15:00,459
problems myself it when you tend to use

00:14:57,939 --> 00:15:03,009
pen and paper you start thinking oh what

00:15:00,459 --> 00:15:05,620
if this happens what if that happens a

00:15:03,009 --> 00:15:07,329
great example of this is the floating

00:15:05,620 --> 00:15:09,579
action button from the material design

00:15:07,329 --> 00:15:11,379
spec when you look at that but you think

00:15:09,579 --> 00:15:13,239
oh that's cover

00:15:11,379 --> 00:15:14,829
my content oh that's floating in a weird

00:15:13,239 --> 00:15:16,749
place it's going to make things crowded

00:15:14,829 --> 00:15:18,039
it's going to make things you know

00:15:16,749 --> 00:15:22,259
you're never going to see what's on the

00:15:18,039 --> 00:15:24,579
bottom right don't worry about it

00:15:22,259 --> 00:15:27,339
seriously just when you see things like

00:15:24,579 --> 00:15:30,159
that pop up usually intuitive solutions

00:15:27,339 --> 00:15:31,569
will also come up some applications have

00:15:30,159 --> 00:15:33,399
figured out if you just add a little bit

00:15:31,569 --> 00:15:35,829
of spacing to the bottom of your lists

00:15:33,399 --> 00:15:38,199
then when you scroll down the floating

00:15:35,829 --> 00:15:39,789
action button is just in the void other

00:15:38,199 --> 00:15:42,339
applications when you start scrolling

00:15:39,789 --> 00:15:44,349
down the alt slide down the button away

00:15:42,339 --> 00:15:46,539
it's it's a little bit weird it's a

00:15:44,349 --> 00:15:50,369
little bit over animated but both of

00:15:46,539 --> 00:15:54,369
them work both technically fit the spec

00:15:50,369 --> 00:15:57,669
that's actually a good time rigidly

00:15:54,369 --> 00:15:59,169
defining the aspects of our specs if if

00:15:57,669 --> 00:16:04,959
you're working on an application you've

00:15:59,169 --> 00:16:08,979
started nailing things down that's an

00:16:04,959 --> 00:16:12,569
order see this is what happens when you

00:16:08,979 --> 00:16:12,569
iterate too many times on your slides

00:16:12,689 --> 00:16:19,089
it's good to define how things should

00:16:15,249 --> 00:16:21,669
work but if it's not working out if if

00:16:19,089 --> 00:16:25,419
you have an idea and you're just trying

00:16:21,669 --> 00:16:26,739
to a hammer and a screw just stop you

00:16:25,419 --> 00:16:29,169
can use something more traditional it

00:16:26,739 --> 00:16:32,919
doesn't always have to be so unique your

00:16:29,169 --> 00:16:34,679
design will evolve over time anyways so

00:16:32,919 --> 00:16:37,289
just look at what you may be changing

00:16:34,679 --> 00:16:40,479
possibly update your own internal specs

00:16:37,289 --> 00:16:45,309
don't try to keep going on something

00:16:40,479 --> 00:16:47,529
that's not working personas iterating

00:16:45,309 --> 00:16:50,079
with people in mind for those of you

00:16:47,529 --> 00:16:52,869
don't know persona is basically an

00:16:50,079 --> 00:16:56,499
imaginary user somebody you make up this

00:16:52,869 --> 00:17:00,309
users have these users have by this user

00:16:56,499 --> 00:17:02,829
has goals backgrounds a requirement for

00:17:00,309 --> 00:17:05,730
example let's see i have an example here

00:17:02,829 --> 00:17:12,669
on my notes which i have not used once

00:17:05,730 --> 00:17:15,179
two mics and the ground notes you might

00:17:12,669 --> 00:17:15,179
have your own

00:17:17,760 --> 00:17:24,870
uh here we are this is where my notes

00:17:20,160 --> 00:17:27,329
were a persona can be just somebody

00:17:24,870 --> 00:17:29,190
simple this is Ellis she wants to

00:17:27,329 --> 00:17:31,280
organize her music on the go so this is

00:17:29,190 --> 00:17:34,650
going to be for a mobile application

00:17:31,280 --> 00:17:36,840
this is Greg he's a very basic user with

00:17:34,650 --> 00:17:38,280
thousands of songs but he wants to

00:17:36,840 --> 00:17:40,380
listen to the same three tracks over and

00:17:38,280 --> 00:17:42,570
over and over again if you're designing

00:17:40,380 --> 00:17:46,800
a music application you might have these

00:17:42,570 --> 00:17:48,390
two personas in so one idea that you

00:17:46,800 --> 00:17:50,400
might have to appease both of these

00:17:48,390 --> 00:17:51,930
users is possibly having like quick

00:17:50,400 --> 00:17:55,230
favorites that you can quickly favorite

00:17:51,930 --> 00:17:57,990
in unfavorite songs when you're changing

00:17:55,230 --> 00:18:00,540
and modifying the design I just go over

00:17:57,990 --> 00:18:01,830
your personas occasionally put yourself

00:18:00,540 --> 00:18:06,060
in the seat of the user before you

00:18:01,830 --> 00:18:07,820
actually do the git push and see if it

00:18:06,060 --> 00:18:10,860
will actually benefit those users

00:18:07,820 --> 00:18:14,130
ideally every change that you do will be

00:18:10,860 --> 00:18:16,320
good for some users at worst neutral for

00:18:14,130 --> 00:18:18,540
others you don't ever want to impact

00:18:16,320 --> 00:18:20,340
other personas that you have negatively

00:18:18,540 --> 00:18:23,160
always try to find a solution that fits

00:18:20,340 --> 00:18:26,040
everybody if you have too many personas

00:18:23,160 --> 00:18:27,930
and you can't satisfy them all then you

00:18:26,040 --> 00:18:35,310
might be making your application too

00:18:27,930 --> 00:18:37,380
broad yes wow I really blew through

00:18:35,310 --> 00:18:39,470
those slides does anybody have any

00:18:37,380 --> 00:18:39,470
questions

00:18:52,570 --> 00:18:58,250
thing what is your recommendation of an

00:18:55,810 --> 00:18:59,990
information architecture so how to

00:18:58,250 --> 00:19:02,030
design information architecture before

00:18:59,990 --> 00:19:10,700
he pulls the design on top it's a

00:19:02,030 --> 00:19:13,030
graphics my apologies I tend to like the

00:19:10,700 --> 00:19:15,440
model-view-controller approach

00:19:13,030 --> 00:19:17,150
especially when using qml that

00:19:15,440 --> 00:19:18,380
essentially solves ninety percent of

00:19:17,150 --> 00:19:20,330
your problems because your user

00:19:18,380 --> 00:19:23,330
interface is in one very malleable

00:19:20,330 --> 00:19:24,980
format and as well depending on how you

00:19:23,330 --> 00:19:27,160
actually assemble your program and how

00:19:24,980 --> 00:19:29,690
you actually load your qml you can also

00:19:27,160 --> 00:19:32,300
very easily split out the code path so

00:19:29,690 --> 00:19:35,060
that use say for example one qml file

00:19:32,300 --> 00:19:37,790
for iOS and another one for Android if

00:19:35,060 --> 00:19:42,590
you're having to redesign the interfaces

00:19:37,790 --> 00:19:48,080
for different platforms I did I answer

00:19:42,590 --> 00:19:50,900
the questions I know as for information

00:19:48,080 --> 00:19:54,250
architecture so designing zor workflow

00:19:50,900 --> 00:19:58,100
like like bizarra is doing XO is doing

00:19:54,250 --> 00:20:04,460
so without doing graphics just kind of

00:19:58,100 --> 00:20:19,310
the flow through the applications okay

00:20:04,460 --> 00:20:21,260
yeah I yea sorry I'm yeah that the way

00:20:19,310 --> 00:20:23,720
the user moves for an application as

00:20:21,260 --> 00:20:26,300
I've sort of how the user would

00:20:23,720 --> 00:20:28,910
preferably move through the app okay

00:20:26,300 --> 00:20:33,950
where do you want them to look etc I

00:20:28,910 --> 00:20:36,590
felt okay so yeah in terms of that it

00:20:33,950 --> 00:20:39,680
depends on your application generally

00:20:36,590 --> 00:20:41,390
speaking what you want is is users to

00:20:39,680 --> 00:20:44,630
have an entry point so say for example

00:20:41,390 --> 00:20:45,800
and again this really varies depending

00:20:44,630 --> 00:20:47,810
on the application that you're working

00:20:45,800 --> 00:20:50,690
on so I'm just going to fall back to the

00:20:47,810 --> 00:20:53,480
music's example you'd have an entry

00:20:50,690 --> 00:20:56,150
point that might list say for example

00:20:53,480 --> 00:20:58,950
your categories your songs things like

00:20:56,150 --> 00:21:01,830
that I tend like the drill down

00:20:58,950 --> 00:21:05,300
Roach were applicate where you have your

00:21:01,830 --> 00:21:07,770
categories and then you can go in and in

00:21:05,300 --> 00:21:17,430
but if you have something simple you can

00:21:07,770 --> 00:21:18,960
just present it all at once I tend to

00:21:17,430 --> 00:21:21,540
use pen and paper when initially

00:21:18,960 --> 00:21:22,950
designing things you can be very rough

00:21:21,540 --> 00:21:25,800
with it you can just quickly draw your

00:21:22,950 --> 00:21:28,380
boxes get things where you want after

00:21:25,800 --> 00:21:31,350
that I tend to graduate either to HTML

00:21:28,380 --> 00:21:33,990
or qml depending on what I'm working on

00:21:31,350 --> 00:21:36,480
I don't do any images images or always

00:21:33,990 --> 00:21:38,460
dead last if I have anything that I can

00:21:36,480 --> 00:21:41,010
recycle that kind of looks like it might

00:21:38,460 --> 00:21:44,160
work there one thing that I do

00:21:41,010 --> 00:21:46,500
personally is if I have a placeholder

00:21:44,160 --> 00:21:48,030
image I might just throw a big orange

00:21:46,500 --> 00:21:49,650
background on it's something that'll

00:21:48,030 --> 00:22:00,000
really stand out so that I know what's

00:21:49,650 --> 00:22:02,400
placeholder and what's not but do you

00:22:00,000 --> 00:22:05,820
think about intentionally unpaired

00:22:02,400 --> 00:22:10,470
assign and workflow changes so you have

00:22:05,820 --> 00:22:12,230
a real tick-tock release I think

00:22:10,470 --> 00:22:15,360
Microsoft is doing it in this way

00:22:12,230 --> 00:22:17,550
smaller or not a big change at all at

00:22:15,360 --> 00:22:21,650
once yeah I think that's a good way to

00:22:17,550 --> 00:22:24,570
go about it I think pulling them apart

00:22:21,650 --> 00:22:26,250
it can brace users for changes really

00:22:24,570 --> 00:22:29,250
well when you're not doing everything at

00:22:26,250 --> 00:22:31,530
once so you know if if you think

00:22:29,250 --> 00:22:34,050
everything is going to change sure it

00:22:31,530 --> 00:22:41,430
might throw off users a bit when they go

00:22:34,050 --> 00:22:43,290
from arrow to modern but at least

00:22:41,430 --> 00:22:45,930
they'll know like now quickly rediscover

00:22:43,290 --> 00:22:48,180
their workflows in that case but if you

00:22:45,930 --> 00:22:49,980
do something like that you also want to

00:22:48,180 --> 00:22:51,930
be very careful with your iterations in

00:22:49,980 --> 00:22:53,460
the future you don't want to say

00:22:51,930 --> 00:22:56,220
transition somebody to a different look

00:22:53,460 --> 00:22:59,190
and then six months later completely

00:22:56,220 --> 00:23:02,430
change their workflow ideally what I

00:22:59,190 --> 00:23:06,000
what I like doing is I like putting

00:23:02,430 --> 00:23:08,370
whatever big banner change in with the

00:23:06,000 --> 00:23:10,730
visual design change and then slowly

00:23:08,370 --> 00:23:14,280
introducing components after that

00:23:10,730 --> 00:23:16,770
but if if you can't get it to to sync up

00:23:14,280 --> 00:23:19,380
that way then that shouldn't be too too

00:23:16,770 --> 00:23:21,090
much of a problem but it can be a little

00:23:19,380 --> 00:23:22,230
more stressing to users who aren't

00:23:21,090 --> 00:23:26,430
necessarily one hundred percent

00:23:22,230 --> 00:23:43,710
confident with how how to interact with

00:23:26,430 --> 00:23:49,290
the computer any other questions we have

00:23:43,710 --> 00:23:51,180
no um well I understood just like now

00:23:49,290 --> 00:23:53,580
you are designer but you also feel

00:23:51,180 --> 00:23:57,360
comfortable in developing HTML in qml

00:23:53,580 --> 00:23:59,430
yeah from your perspective you know what

00:23:57,360 --> 00:24:02,460
is kind of the biggest missing point

00:23:59,430 --> 00:24:07,290
from from you as a designer standpoint

00:24:02,460 --> 00:24:09,600
internet well kid quick just sorry if I

00:24:07,290 --> 00:24:12,420
reiterate beer if I restate the question

00:24:09,600 --> 00:24:24,690
just myself as a designer what do I kind

00:24:12,420 --> 00:24:26,460
of see potentially lacking in qml one

00:24:24,690 --> 00:24:28,050
thing that I tend to find a little bit

00:24:26,460 --> 00:24:29,820
lacking and it's something that every

00:24:28,050 --> 00:24:32,910
company kind of builds up over time is

00:24:29,820 --> 00:24:35,430
that initial stock of components just

00:24:32,910 --> 00:24:36,810
you know kirigami kind of solves this

00:24:35,430 --> 00:24:39,000
because it gives you a nice treasure

00:24:36,810 --> 00:24:41,040
chest that you can work with but you

00:24:39,000 --> 00:24:42,840
know you're usually using with the same

00:24:41,040 --> 00:24:44,250
basic parts over and over and over again

00:24:42,840 --> 00:24:46,320
you're going to use some lists you're

00:24:44,250 --> 00:24:49,890
going to use certain types of control

00:24:46,320 --> 00:24:51,510
certain types of forms one thing that I

00:24:49,890 --> 00:24:56,970
really kind of misses that there's no

00:24:51,510 --> 00:24:59,580
real specific form component that it

00:24:56,970 --> 00:25:01,520
just comes with uml and i know that i'm

00:24:59,580 --> 00:25:04,020
going to have labels on one side and

00:25:01,520 --> 00:25:06,090
certain controls on the other that's one

00:25:04,020 --> 00:25:08,640
thing I kind of missed and it's solved

00:25:06,090 --> 00:25:12,210
with grid view but there were some nice

00:25:08,640 --> 00:25:15,530
these of the actual acute widgets forum

00:25:12,210 --> 00:25:15,530
implementation that I kind of Miss

00:25:23,880 --> 00:25:32,100
24 all right okay in that case I have a

00:25:28,270 --> 00:25:32,100
question sure right

00:25:36,510 --> 00:25:42,100
okay so I am a programmer I have no I've

00:25:40,900 --> 00:25:45,909
never used anything other than in

00:25:42,100 --> 00:25:47,890
inkscape to mock up simple lines but as

00:25:45,909 --> 00:25:50,049
a programmer if I'm working on a project

00:25:47,890 --> 00:25:51,880
that's you know small enough that I

00:25:50,049 --> 00:25:54,100
don't really need to go to another guy

00:25:51,880 --> 00:25:57,340
who's a pro at designing interfaces to

00:25:54,100 --> 00:25:59,080
you know do it for me but yet I don't

00:25:57,340 --> 00:26:01,000
actually have the requisite skills or

00:25:59,080 --> 00:26:03,460
the experience with tooling to mock

00:26:01,000 --> 00:26:06,940
things up do you have any tips on where

00:26:03,460 --> 00:26:08,679
I should start yet so if you're if

00:26:06,940 --> 00:26:12,340
you're just looking to stir with mocking

00:26:08,679 --> 00:26:13,929
things up what you can start with is

00:26:12,340 --> 00:26:16,419
start looking at what other people are

00:26:13,929 --> 00:26:17,770
doing imitation can be the sincerest

00:26:16,419 --> 00:26:19,990
form of flattery so just look at what

00:26:17,770 --> 00:26:22,360
other applications have done so if

00:26:19,990 --> 00:26:23,950
you're looking at designing the way your

00:26:22,360 --> 00:26:27,100
controls are going to be laid out and I

00:26:23,950 --> 00:26:28,809
do this too I just hop onto google I do

00:26:27,100 --> 00:26:31,059
an image search and I just see what

00:26:28,809 --> 00:26:33,010
other interface layouts people have

00:26:31,059 --> 00:26:35,500
going and from there you can be like oh

00:26:33,010 --> 00:26:37,720
I like that I like that if you have a

00:26:35,500 --> 00:26:39,940
pencil and paper it doesn't have to be

00:26:37,720 --> 00:26:43,120
pretty you can even just put boxes and

00:26:39,940 --> 00:26:45,520
the name of what you were looking at and

00:26:43,120 --> 00:26:47,620
then you can just kind of it's just for

00:26:45,520 --> 00:26:50,890
your own reference it doesn't have to be

00:26:47,620 --> 00:26:52,780
anything super professional but yeah I

00:26:50,890 --> 00:26:55,030
would say if if you're not really super

00:26:52,780 --> 00:26:56,710
keen on design work but you don't feel

00:26:55,030 --> 00:26:58,360
like you need to pull in a designer just

00:26:56,710 --> 00:26:59,770
look at other people's designs and you

00:26:58,360 --> 00:27:02,080
can even pull up an application like

00:26:59,770 --> 00:27:05,370
color paint or something like that or

00:27:02,080 --> 00:27:08,440
the and just you know literally

00:27:05,370 --> 00:27:10,559
copy drop it into a file and slap it all

00:27:08,440 --> 00:27:10,559
together

00:27:17,280 --> 00:27:21,970
okay so we are we have around three

00:27:20,260 --> 00:27:27,630
minutes if anybody wants to ask another

00:27:21,970 --> 00:27:29,650
question yeah we have a more right I

00:27:27,630 --> 00:27:33,490
keep saying one more I'd like in

00:27:29,650 --> 00:27:35,680
abundance really just a quick side note

00:27:33,490 --> 00:27:38,890
you said that when you make a big

00:27:35,680 --> 00:27:41,290
iteration and you give this give it to

00:27:38,890 --> 00:27:43,750
the users they might be at first put out

00:27:41,290 --> 00:27:47,460
by the fact how many new things new

00:27:43,750 --> 00:27:50,320
features there are and there might be

00:27:47,460 --> 00:27:52,960
overwhelmed by by this kind of thing and

00:27:50,320 --> 00:27:55,120
you should you actually believe that

00:27:52,960 --> 00:27:56,350
they are going to overcome these

00:27:55,120 --> 00:27:58,210
obstacles that they're going to learn

00:27:56,350 --> 00:28:00,550
they're going to find out and everything

00:27:58,210 --> 00:28:04,060
and you should probably tell that to my

00:28:00,550 --> 00:28:06,310
mom yeah no because it ends it ends up

00:28:04,060 --> 00:28:09,550
like this people see new things new

00:28:06,310 --> 00:28:11,590
stuff and they get so much overwhelmed

00:28:09,550 --> 00:28:14,470
over there's that they just go okay I'm

00:28:11,590 --> 00:28:16,480
not going to use it yet no that was what

00:28:14,470 --> 00:28:20,290
I was kind of mentioning with the users

00:28:16,480 --> 00:28:22,900
who are unsure or more novice often

00:28:20,290 --> 00:28:24,400
you'll also have a lot of like office or

00:28:22,900 --> 00:28:25,780
cubicle workers and they'll be trained

00:28:24,400 --> 00:28:29,140
on the application that they're working

00:28:25,780 --> 00:28:32,440
with I recall when I started working at

00:28:29,140 --> 00:28:35,050
this one call center the the computer

00:28:32,440 --> 00:28:39,940
test was knowing that you can hit the

00:28:35,050 --> 00:28:42,730
close button on the window so like a lot

00:28:39,940 --> 00:28:44,440
of a lot of novice users they will shut

00:28:42,730 --> 00:28:46,690
down and that's why I say you know

00:28:44,440 --> 00:28:49,600
introduce changes very gradually if you

00:28:46,690 --> 00:28:52,480
can over time or if you're going to drop

00:28:49,600 --> 00:28:57,010
a new big interface design don't also

00:28:52,480 --> 00:28:59,500
drop everything in at once ideally there

00:28:57,010 --> 00:29:01,030
will be somebody to kind of show them if

00:28:59,500 --> 00:29:04,480
they're just going to stop but we also

00:29:01,030 --> 00:29:08,290
do have to be aware that when there is a

00:29:04,480 --> 00:29:10,210
significant change that some users will

00:29:08,290 --> 00:29:12,100
shut down in that respect and there's

00:29:10,210 --> 00:29:13,900
just not a whole lot we can do about it

00:29:12,100 --> 00:29:20,980
we can either keep everybody on Windows

00:29:13,900 --> 00:29:23,110
98 or we can try to in Jeff al Sforza no

00:29:20,980 --> 00:29:25,180
real solution for it the best is to just

00:29:23,110 --> 00:29:27,610
try to hope that they can kind of keep

00:29:25,180 --> 00:29:28,559
up and that we can kind of get them the

00:29:27,610 --> 00:29:33,570
bread crumbs to bring

00:29:28,559 --> 00:29:35,639
to the end of the path ok so I think

00:29:33,570 --> 00:29:39,049
good out of time here thank you again

00:29:35,639 --> 00:29:39,049

YouTube URL: https://www.youtube.com/watch?v=utMyYBynuyE


