Title: David Edmundson - A Short Guide to Writing Terrible QML - QtCon Akademy 2016
Publication date: 2016-09-04
Playlist: QtCon Akademy 2016
Description: 
	QML is very easy to write. But is it easy to read?
It can be; but with the lack of forced types, scoping and private members, it's easy to fall into bad practices.

This talk covers the common QML anti-patterns that make your code incredibly difficult for your colleagues to edit.

d_ed
Captions: 
	00:00:04,279 --> 00:00:12,900
you sowho flames this annoying with the

00:00:08,309 --> 00:00:15,630
title not quite fitting properly it sort

00:00:12,900 --> 00:00:17,760
of things quite easy to write and the

00:00:15,630 --> 00:00:18,869
form of qml is very easy to write which

00:00:17,760 --> 00:00:21,210
means people who shouldn't be writing

00:00:18,869 --> 00:00:25,470
code tend to write interesting here

00:00:21,210 --> 00:00:28,590
enough so about me I work for company

00:00:25,470 --> 00:00:31,189
called blue systems and unwanted air to

00:00:28,590 --> 00:00:34,219
work on KDE and I spend most of my time

00:00:31,189 --> 00:00:36,300
working and advancing in projects taxing

00:00:34,219 --> 00:00:38,040
upstream code so I work for a

00:00:36,300 --> 00:00:40,680
distribution fixing things that were

00:00:38,040 --> 00:00:42,629
wrong in plasma so I see a huge amount

00:00:40,680 --> 00:00:44,309
of code but it's not my code after going

00:00:42,629 --> 00:00:46,680
to fix it and it's the same mistakes

00:00:44,309 --> 00:00:48,989
coming up over and over again so quick

00:00:46,680 --> 00:00:51,149
talk just coming over three of the most

00:00:48,989 --> 00:00:54,030
common things that I always see again

00:00:51,149 --> 00:00:55,890
and again and they're so easy to catch

00:00:54,030 --> 00:00:56,160
up review times if you know to look for

00:00:55,890 --> 00:00:58,320
them

00:00:56,160 --> 00:01:00,300
I had one person in a review asked me

00:00:58,320 --> 00:01:01,020
what cure mole into I was using to find

00:01:00,300 --> 00:01:07,110
his mistakes

00:01:01,020 --> 00:01:10,049
it was just reading so what makes good

00:01:07,110 --> 00:01:11,460
code it's hopefully subjective I mean

00:01:10,049 --> 00:01:13,080
some people like it things faster white

00:01:11,460 --> 00:01:16,200
people like language it at a faster rate

00:01:13,080 --> 00:01:17,790
and languages perform well real good so

00:01:16,200 --> 00:01:20,040
code up one super fast

00:01:17,790 --> 00:01:22,560
that's good and code of awesome particle

00:01:20,040 --> 00:01:28,970
effects and so in the background bit a

00:01:22,560 --> 00:01:31,979
very faint Bob Lisa that's also good but

00:01:28,970 --> 00:01:35,280
it's a good code the important thing for

00:01:31,979 --> 00:01:38,100
code in my opinion we don't know Sharon

00:01:35,280 --> 00:01:42,420
its readability is this ancient Roman

00:01:38,100 --> 00:01:44,490
proverb that's on MSDN a website code is

00:01:42,420 --> 00:01:47,549
read more often uttered and more often

00:01:44,490 --> 00:01:49,380
than it is written so writing is an

00:01:47,549 --> 00:01:51,210
important part is how easy it is for

00:01:49,380 --> 00:01:53,159
somebody else to read it because people

00:01:51,210 --> 00:01:55,049
read uh code again and then again and

00:01:53,159 --> 00:01:57,090
again even if they're not not touching

00:01:55,049 --> 00:01:59,159
that particular code they'll be touching

00:01:57,090 --> 00:02:01,890
code near it they need to understand our

00:01:59,159 --> 00:02:04,140
original code and there's an extra part

00:02:01,890 --> 00:02:06,119
just quote that says it may even be you

00:02:04,140 --> 00:02:08,340
in 12 months time and you have

00:02:06,119 --> 00:02:09,660
completely forgotten your code and you

00:02:08,340 --> 00:02:12,000
need to relearn it so you need to be

00:02:09,660 --> 00:02:13,530
even read your own code so readability

00:02:12,000 --> 00:02:17,430
is very important and that's

00:02:13,530 --> 00:02:21,360
what we want to focus on and another

00:02:17,430 --> 00:02:23,220
quote that's mine good code as coders

00:02:21,360 --> 00:02:24,990
still worked after somebody else edits

00:02:23,220 --> 00:02:28,050
it because they know one can write code

00:02:24,990 --> 00:02:29,850
at work you test it it works but it's a

00:02:28,050 --> 00:02:31,380
difference in quality if somebody else

00:02:29,850 --> 00:02:33,239
can edit your code and then it still

00:02:31,380 --> 00:02:37,200
works and it kind of reflects well on

00:02:33,239 --> 00:02:39,750
you so I'm gonna do an example of a very

00:02:37,200 --> 00:02:43,050
small app and a source of thing that can

00:02:39,750 --> 00:02:44,910
go wrong so this is an awesome app based

00:02:43,050 --> 00:02:47,880
on one of your cute examples form the

00:02:44,910 --> 00:02:50,930
website there is a button and I'm gonna

00:02:47,880 --> 00:02:53,700
have to try and click up on their screen

00:02:50,930 --> 00:02:58,739
it's a good application you can clap if

00:02:53,700 --> 00:03:00,900
you want yeah brilliant

00:02:58,739 --> 00:03:08,910
those look it codes that we have a text

00:03:00,900 --> 00:03:17,069
box it's got an ID says message box or

00:03:08,910 --> 00:03:19,100
quit okay and then we've got a thunder

00:03:17,069 --> 00:03:22,200
and because we have auto-completion

00:03:19,100 --> 00:03:24,470
typos get copied across we're saying

00:03:22,200 --> 00:03:29,130
message box again and retaining a text

00:03:24,470 --> 00:03:30,390
so that's a common piece of code you all

00:03:29,130 --> 00:03:32,840
understand your degree arts going to

00:03:30,390 --> 00:03:35,340
work we saw it work Arsen love you code

00:03:32,840 --> 00:03:38,459
in another person come we're gonna come

00:03:35,340 --> 00:03:40,500
along maybe you and our buttons now

00:03:38,459 --> 00:03:41,880
complicated it's got some more particle

00:03:40,500 --> 00:03:43,620
effects in it it's going accessibility

00:03:41,880 --> 00:03:45,959
handling it's now two hundred lines of

00:03:43,620 --> 00:03:48,620
code so someone's going to come along

00:03:45,959 --> 00:03:51,930
and split it into a deceitful component

00:03:48,620 --> 00:03:54,209
so now your main document I'll file it

00:03:51,930 --> 00:03:57,540
looks like it we have the text box with

00:03:54,209 --> 00:04:00,180
the ID which is wrong and we have our

00:03:57,540 --> 00:04:02,220
component my button doc UML but a

00:04:00,180 --> 00:04:05,459
handler is still here we still have this

00:04:02,220 --> 00:04:09,299
little code that says on clicked Lassard

00:04:05,459 --> 00:04:09,750
box at x equals ivan clip and that still

00:04:09,299 --> 00:04:11,970
works

00:04:09,750 --> 00:04:14,280
because you awake humo component scopes

00:04:11,970 --> 00:04:16,530
works because this component is created

00:04:14,280 --> 00:04:18,959
by its component it have access to order

00:04:16,530 --> 00:04:22,260
with pop IDs and the root properties of

00:04:18,959 --> 00:04:23,940
column it will still work and if little

00:04:22,260 --> 00:04:27,120
wonders code it will still work

00:04:23,940 --> 00:04:30,990
that's a lovely commit however

00:04:27,120 --> 00:04:33,510
service comes along and he's noticed

00:04:30,990 --> 00:04:37,800
that typo so he opened main dock you

00:04:33,510 --> 00:04:40,380
know he sees this he changes it he does

00:04:37,800 --> 00:04:46,919
a search in that file for any other

00:04:40,380 --> 00:04:49,110
users of that ID and he commits it but

00:04:46,919 --> 00:04:51,510
you can do a review quiz even every

00:04:49,110 --> 00:04:53,310
review vault all we have review board or

00:04:51,510 --> 00:04:57,419
gather a fabricator they show you a

00:04:53,310 --> 00:04:59,400
difference of code and this file even if

00:04:57,419 --> 00:05:03,120
you search all of this file you're not

00:04:59,400 --> 00:05:06,750
going to see a mistake because dieties

00:05:03,120 --> 00:05:10,289
not mentioned in this file only once so

00:05:06,750 --> 00:05:13,289
it's broken so which commit caught it to

00:05:10,289 --> 00:05:17,550
break the fact that you change the ID to

00:05:13,289 --> 00:05:19,169
now be correct or rather was it broken

00:05:17,550 --> 00:05:21,360
when somebody split that component and

00:05:19,169 --> 00:05:24,300
left this interlinking dependency

00:05:21,360 --> 00:05:25,760
between files then I would argue for

00:05:24,300 --> 00:05:28,919
your sake of readability

00:05:25,760 --> 00:05:30,840
when you split files you want to avoid

00:05:28,919 --> 00:05:34,380
this into linking dependencies between

00:05:30,840 --> 00:05:36,900
them because it causes problems and the

00:05:34,380 --> 00:05:39,210
main problem that has is now instead of

00:05:36,900 --> 00:05:41,160
just editing at one file all I need to

00:05:39,210 --> 00:05:42,990
know is that one file I can search in

00:05:41,160 --> 00:05:45,630
that file I can pretty much memorize one

00:05:42,990 --> 00:05:48,389
file but when you have into linking

00:05:45,630 --> 00:05:51,000
files you have to memorize every single

00:05:48,389 --> 00:05:53,099
file in your project in your head at

00:05:51,000 --> 00:05:56,880
once and know which IDs link to where

00:05:53,099 --> 00:05:59,370
and every time you edit a file you have

00:05:56,880 --> 00:06:00,930
to do incredible get magic and grepping

00:05:59,370 --> 00:06:03,870
to try and find where it could possibly

00:06:00,930 --> 00:06:06,750
be used and this slows down your

00:06:03,870 --> 00:06:08,340
development considerably and it can

00:06:06,750 --> 00:06:10,650
introduce a sort of subtle bugs that we

00:06:08,340 --> 00:06:13,590
saw in that very very simple application

00:06:10,650 --> 00:06:16,199
that one very small fixing a spelling

00:06:13,590 --> 00:06:17,990
mistake and my amazing acting to know

00:06:16,199 --> 00:06:21,120
that wasn't deliberately put there

00:06:17,990 --> 00:06:23,610
causes these problems and it does come

00:06:21,120 --> 00:06:25,530
up quite often typically not in

00:06:23,610 --> 00:06:27,000
something as simple as this but an if

00:06:25,530 --> 00:06:28,289
statement which is now referencing

00:06:27,000 --> 00:06:30,780
something which is undefined

00:06:28,289 --> 00:06:33,870
you don't even see a warning on it it

00:06:30,780 --> 00:06:35,969
will just pass by unbeknownst to you

00:06:33,870 --> 00:06:37,289
your code is no longer working and you

00:06:35,969 --> 00:06:39,240
won't notice for several months until

00:06:37,289 --> 00:06:41,690
you get you report this obscure feature

00:06:39,240 --> 00:06:41,690
if

00:06:41,729 --> 00:06:46,810
so what's a good policy for avoiding us

00:06:44,949 --> 00:06:49,270
we know when we spit out a component

00:06:46,810 --> 00:06:52,330
into my bus and dock uml it can still

00:06:49,270 --> 00:06:54,550
references by deeds and properties form

00:06:52,330 --> 00:06:57,430
the component that created it but that's

00:06:54,550 --> 00:06:59,919
not a good practice it's very simple but

00:06:57,430 --> 00:07:03,460
the little problems so how do you fix it

00:06:59,919 --> 00:07:08,490
if when the person split out your button

00:07:03,460 --> 00:07:08,490
they added a signal on the route and

00:07:08,550 --> 00:07:14,370
obviously path pops fastly a signal from

00:07:11,439 --> 00:07:17,800
the mouth and mouth area to your route

00:07:14,370 --> 00:07:20,520
main dock UML now only references files

00:07:17,800 --> 00:07:22,719
within itself you still have a

00:07:20,520 --> 00:07:25,150
dependency on the public header of

00:07:22,719 --> 00:07:27,550
button you still depend on anything and

00:07:25,150 --> 00:07:28,990
if your root properties but that's no

00:07:27,550 --> 00:07:30,849
different to using any of a component

00:07:28,990 --> 00:07:32,440
you don't have that interlink that's

00:07:30,849 --> 00:07:34,900
going bi-directionally between the two

00:07:32,440 --> 00:07:37,300
files so what we've done is moved all

00:07:34,900 --> 00:07:39,250
your logic that reference IDs from a

00:07:37,300 --> 00:07:42,189
component into being within the same

00:07:39,250 --> 00:07:44,800
file and that is considerably easier to

00:07:42,189 --> 00:07:46,930
read and it won't break it often so

00:07:44,800 --> 00:07:50,919
that's for me to take away things from

00:07:46,930 --> 00:07:51,490
this talk is only reference ideas within

00:07:50,919 --> 00:08:13,210
the same file

00:07:51,490 --> 00:08:15,159
ideally yes I mean yes but that's a lot

00:08:13,210 --> 00:08:16,719
easier to grab for because now all we're

00:08:15,159 --> 00:08:18,610
searching for every time you chained to

00:08:16,719 --> 00:08:20,469
my button you'd search for users of my

00:08:18,610 --> 00:08:22,900
button and that's something you can

00:08:20,469 --> 00:08:26,080
search for we're searching it other way

00:08:22,900 --> 00:08:28,240
it's backtracking doesn't work so it's

00:08:26,080 --> 00:08:30,250
something solvable and that's something

00:08:28,240 --> 00:08:32,469
I would comment on review if you train

00:08:30,250 --> 00:08:34,690
to public API of a project because it is

00:08:32,469 --> 00:08:37,870
no concept of public and private API in

00:08:34,690 --> 00:08:41,440
qml but it's good to keep the root

00:08:37,870 --> 00:08:42,909
properties are handled differently and

00:08:41,440 --> 00:08:46,449
this kind of does happen the other way

00:08:42,909 --> 00:08:49,480
around if inside my button we're not

00:08:46,449 --> 00:08:52,449
setting a text I now have a test inside

00:08:49,480 --> 00:08:54,040
my button I'm referencing an ID again

00:08:52,449 --> 00:08:57,339
I'm referencing an ID in so

00:08:54,040 --> 00:08:59,050
a component that's not mine you can also

00:08:57,339 --> 00:09:11,019
get to the same problems somebody else

00:08:59,050 --> 00:09:12,339
Wed up my button buddy okay and you get

00:09:11,019 --> 00:09:14,560
the same problem again you're still

00:09:12,339 --> 00:09:17,529
referencing it is my ID with the bottom

00:09:14,560 --> 00:09:19,839
text you're referencing IDs in another

00:09:17,529 --> 00:09:21,120
component and so if problem goes both

00:09:19,839 --> 00:09:25,389
ways

00:09:21,120 --> 00:09:27,190
so again fixing it it's a good idea to

00:09:25,389 --> 00:09:29,560
always move any properties that an

00:09:27,190 --> 00:09:31,990
external component wants to edit into

00:09:29,560 --> 00:09:33,880
being warmed root properties because

00:09:31,990 --> 00:09:35,649
that means that you only have a small

00:09:33,880 --> 00:09:38,170
subsection of things to worry about when

00:09:35,649 --> 00:09:39,730
you change I not limit the amount of

00:09:38,170 --> 00:09:42,910
time to going to break it either

00:09:39,730 --> 00:09:46,259
deliberately or accidentally so when

00:09:42,910 --> 00:09:48,250
using UML only reference components

00:09:46,259 --> 00:09:50,410
properties are in the root of a

00:09:48,250 --> 00:09:51,910
component and when Whiting components

00:09:50,410 --> 00:09:54,579
try and put anything you're going to

00:09:51,910 --> 00:09:58,209
want to change as a root property and

00:09:54,579 --> 00:10:00,310
property alias is a really useful system

00:09:58,209 --> 00:10:02,110
I assume most of you know it you're not

00:10:00,310 --> 00:10:04,029
actually declaring a new property you're

00:10:02,110 --> 00:10:07,600
just saying ever the property called yes

00:10:04,029 --> 00:10:10,360
and it every time you set text it will

00:10:07,600 --> 00:10:13,630
implicitly change the text of this ID

00:10:10,360 --> 00:10:15,699
here so that's everything I wanted to

00:10:13,630 --> 00:10:18,399
cover it with regards to good components

00:10:15,699 --> 00:10:21,100
you want to write it as though they

00:10:18,399 --> 00:10:23,050
can't be used independently and making

00:10:21,100 --> 00:10:24,910
no assumptions about how we a are

00:10:23,050 --> 00:10:28,029
currently used because how we are

00:10:24,910 --> 00:10:30,029
currently used can change right every

00:10:28,029 --> 00:10:32,560
component is or it's a library and

00:10:30,029 --> 00:10:34,839
weirdly people do that for small things

00:10:32,560 --> 00:10:36,579
for buttons ever no mistakes as soon as

00:10:34,839 --> 00:10:38,050
the project gets bigger soon there's a

00:10:36,579 --> 00:10:39,970
big component people seem to think

00:10:38,050 --> 00:10:42,670
you've also don't apply

00:10:39,970 --> 00:10:44,769
so more complex it is and more people

00:10:42,670 --> 00:10:49,540
make it more complicated which is

00:10:44,769 --> 00:10:50,980
bizarre so general war which are

00:10:49,540 --> 00:10:53,980
referencing either outside a component

00:10:50,980 --> 00:10:55,630
moves some logic somewhere and you

00:10:53,980 --> 00:10:58,060
should be able to open any component

00:10:55,630 --> 00:10:59,500
anywhere with qml seen that's a good

00:10:58,060 --> 00:11:01,060
rule of thumb and if you've got context

00:10:59,500 --> 00:11:04,269
properties you can fake him with the

00:11:01,060 --> 00:11:05,920
dummy data folder so any big components

00:11:04,269 --> 00:11:07,180
should be able to be open independent of

00:11:05,920 --> 00:11:07,960
you and I've seen and that helps your

00:11:07,180 --> 00:11:09,790
unit testing

00:11:07,960 --> 00:11:14,440
if you have the interlinking you can't

00:11:09,790 --> 00:11:17,230
like unit test properly so as everything

00:11:14,440 --> 00:11:19,779
for components item geometry is another

00:11:17,230 --> 00:11:20,410
place where we often see quite lots of

00:11:19,779 --> 00:11:24,520
mistakes

00:11:20,410 --> 00:11:27,370
in general each axis horizontally or

00:11:24,520 --> 00:11:29,200
vertical should have either two anchor

00:11:27,370 --> 00:11:33,570
points of sliding to find like a left

00:11:29,200 --> 00:11:37,029
and a right or a left and the width or

00:11:33,570 --> 00:11:39,690
an X and a width all be managed by

00:11:37,029 --> 00:11:42,360
layouts but never two of those at once

00:11:39,690 --> 00:11:47,520
so I'm going to give some bad examples

00:11:42,360 --> 00:11:50,680
we have an item in focus but it has a

00:11:47,520 --> 00:11:52,600
left it doesn't have a width which means

00:11:50,680 --> 00:11:54,730
this rectangle here which is filling a

00:11:52,600 --> 00:11:57,880
parent will be completely invisible and

00:11:54,730 --> 00:11:59,920
that's quite a common thing to do and

00:11:57,880 --> 00:12:02,740
when you reveal encode every time you

00:11:59,920 --> 00:12:04,930
see an item to check it has all of the

00:12:02,740 --> 00:12:07,870
geometry set and it's quite an easy

00:12:04,930 --> 00:12:09,580
thing to review and this is another

00:12:07,870 --> 00:12:12,160
common thing I've have seen several

00:12:09,580 --> 00:12:14,770
times with people white anchor left and

00:12:12,160 --> 00:12:16,830
collect and they set a width one of

00:12:14,770 --> 00:12:19,660
those isn't going to do anything and

00:12:16,830 --> 00:12:21,820
most you know cure will no anchors get

00:12:19,660 --> 00:12:23,500
evaluated afterwards but it's still

00:12:21,820 --> 00:12:25,660
unreadable code because I look at this

00:12:23,500 --> 00:12:28,900
code and I would think or bet that width

00:12:25,660 --> 00:12:33,010
is 100 when in fact it's not it's an

00:12:28,900 --> 00:12:35,980
undefined value and finally another

00:12:33,010 --> 00:12:39,339
thing that we see a vote layouts will

00:12:35,980 --> 00:12:43,089
modify a positions of items so it's item

00:12:39,339 --> 00:12:45,610
is trying to change the left anchor and

00:12:43,089 --> 00:12:47,860
left a left anchor change into X of an

00:12:45,610 --> 00:12:49,870
item a row layout changes at X of an

00:12:47,860 --> 00:12:51,910
item you have two things trying to

00:12:49,870 --> 00:12:53,350
change the same property at once and if

00:12:51,910 --> 00:12:55,630
you have two things trying to change the

00:12:53,350 --> 00:12:58,810
same property at once you will either

00:12:55,630 --> 00:13:01,570
get walls I'm not working or you'll get

00:12:58,810 --> 00:13:02,980
a recursive loop of doom and a recursive

00:13:01,570 --> 00:13:05,730
loop of Doom is something you generally

00:13:02,980 --> 00:13:05,730
want to avoid

00:13:06,510 --> 00:13:15,579
that's probably worst case yes and

00:13:13,380 --> 00:13:17,620
that's why tonometry you want to make

00:13:15,579 --> 00:13:20,180
sure you have all of the geometry set

00:13:17,620 --> 00:13:22,160
for every single item

00:13:20,180 --> 00:13:24,530
text in a box this is where people get

00:13:22,160 --> 00:13:27,830
confused quite often I think or

00:13:24,530 --> 00:13:30,050
something that comes up so going back to

00:13:27,830 --> 00:13:32,330
before we have a Texas an example ever

00:13:30,050 --> 00:13:34,160
text with a top anchor and left anchor

00:13:32,330 --> 00:13:37,460
and some really really long string

00:13:34,160 --> 00:13:41,600
what's going to happen when it's placed

00:13:37,460 --> 00:13:45,370
it in a box of a fixed tires it's going

00:13:41,600 --> 00:13:45,370
to overflow that looks rubbish

00:13:45,640 --> 00:13:52,340
however here we have resetting all your

00:13:50,960 --> 00:13:54,920
dormitory we're setting a left point

00:13:52,340 --> 00:13:56,720
we're setting a white that point the

00:13:54,920 --> 00:14:02,240
text should be contained within the box

00:13:56,720 --> 00:14:04,520
right yes it looks like this and the

00:14:02,240 --> 00:14:06,710
reason this happens is because though

00:14:04,520 --> 00:14:09,110
you've told it the size of the text ends

00:14:06,710 --> 00:14:11,540
here you've also told it it needs to

00:14:09,110 --> 00:14:13,370
display as much text so you have this

00:14:11,540 --> 00:14:13,790
interesting quirk that your item ends

00:14:13,370 --> 00:14:15,850
here

00:14:13,790 --> 00:14:20,720
but it does count as I'm drawing anyway

00:14:15,850 --> 00:14:24,260
which probably isn't what you want you

00:14:20,720 --> 00:14:25,490
can't set clip in the box but generally

00:14:24,260 --> 00:14:26,990
up might not be what you want either I

00:14:25,490 --> 00:14:28,790
mean you've got vertical space

00:14:26,990 --> 00:14:32,030
you want to wrap so we've added wrap

00:14:28,790 --> 00:14:36,500
mode so now what's going to happen now

00:14:32,030 --> 00:14:41,510
overflow that your bottom and that's not

00:14:36,500 --> 00:14:43,700
much better so in this particular case

00:14:41,510 --> 00:14:45,620
if we have a box of a six size which

00:14:43,700 --> 00:14:47,390
isn't growing to your content which does

00:14:45,620 --> 00:14:50,000
happen if you've got not in a list view

00:14:47,390 --> 00:14:53,810
or something touch you want a word wrap

00:14:50,000 --> 00:14:55,490
and the lead sea of walls and that only

00:14:53,810 --> 00:14:58,970
looks perfect now that's what we want

00:14:55,490 --> 00:15:01,580
for methods so you probably want to set

00:14:58,970 --> 00:15:04,070
a width from the text or grow your

00:15:01,580 --> 00:15:05,570
container to always fit a text but given

00:15:04,070 --> 00:15:07,550
you don't know how big a text is going

00:15:05,570 --> 00:15:09,830
to be particularly German translations

00:15:07,550 --> 00:15:12,920
it might not fit in the users window

00:15:09,830 --> 00:15:14,720
anyway so if you can't guarantee your

00:15:12,920 --> 00:15:17,000
Technol fit with the horizontally word

00:15:14,720 --> 00:15:19,370
wrap or a lead and if you can't go into

00:15:17,000 --> 00:15:22,760
your text or fit vertically you want to

00:15:19,370 --> 00:15:25,400
elite and one thing I have seen before

00:15:22,760 --> 00:15:28,250
people thinking 11 were wrap up somehow

00:15:25,400 --> 00:15:33,470
mutually exclusive they are you've only

00:15:28,250 --> 00:15:34,850
got one line but in general you know and

00:15:33,470 --> 00:15:37,400
but the want to show us code because it

00:15:34,850 --> 00:15:40,190
made me cry it's a bit of code I saw in

00:15:37,400 --> 00:15:41,720
plasma it said turn on a leading if we

00:15:40,190 --> 00:15:43,700
were going to overflow your box and

00:15:41,720 --> 00:15:45,740
that's pointless because that achieves

00:15:43,700 --> 00:15:47,780
absolutely nothing because if I wasn't

00:15:45,740 --> 00:15:54,380
going overflow your box it wouldn't lead

00:15:47,780 --> 00:15:56,110
anyway so now I'll just do it remark and

00:15:54,380 --> 00:16:01,280
this goes back to what we saw in a title

00:15:56,110 --> 00:16:01,820
centering text when do you want to sent

00:16:01,280 --> 00:16:03,410
a text

00:16:01,820 --> 00:16:05,840
people think we should set it or a

00:16:03,410 --> 00:16:09,110
center anchor because you want to set

00:16:05,840 --> 00:16:11,330
that item in the middle and that's not a

00:16:09,110 --> 00:16:13,790
good approach because it leads to what

00:16:11,330 --> 00:16:15,830
we saw in a title slide it just

00:16:13,790 --> 00:16:18,460
overflows and even though what we've set

00:16:15,830 --> 00:16:23,870
word wrap we haven't constrained a width

00:16:18,460 --> 00:16:25,610
so it would overflow and it is a

00:16:23,870 --> 00:16:28,280
solution you could explicitly set it

00:16:25,610 --> 00:16:31,310
wait for the text to be easier size of

00:16:28,280 --> 00:16:34,910
the text or a size of the box but that

00:16:31,310 --> 00:16:37,310
just gets complicated the best way is to

00:16:34,910 --> 00:16:39,230
in reinvention how you imagine text

00:16:37,310 --> 00:16:41,840
don't position your text where you want

00:16:39,230 --> 00:16:43,490
the text to be that's a amateur mistake

00:16:41,840 --> 00:16:45,890
you want to position the text where a

00:16:43,490 --> 00:16:47,810
bounding box of the text should be so

00:16:45,890 --> 00:16:50,690
imagine in Word when you've made an

00:16:47,810 --> 00:16:54,020
awesome word art you click and drag a

00:16:50,690 --> 00:16:55,910
box and our box has the button this area

00:16:54,020 --> 00:16:58,010
should be full of text you don't want to

00:16:55,910 --> 00:16:59,450
say where's text itself is you want to

00:16:58,010 --> 00:17:03,770
imagine you're dragging out box in

00:16:59,450 --> 00:17:05,780
Microsoft Word or leave off so don't be

00:17:03,770 --> 00:17:08,959
difficult exposition the bounding box

00:17:05,780 --> 00:17:11,089
and then within about an inbox there are

00:17:08,959 --> 00:17:27,299
properties in a text object to position

00:17:11,089 --> 00:17:32,100
the text inside it just never yeah head

00:17:27,299 --> 00:17:34,230
we gulping mic top so okay final thing I

00:17:32,100 --> 00:17:37,529
want to cover which versus implicit

00:17:34,230 --> 00:17:39,090
width because it seems it's something

00:17:37,529 --> 00:17:43,860
that's quite easy to get confused over

00:17:39,090 --> 00:17:46,710
because it's quite confusing so turning

00:17:43,860 --> 00:17:47,999
it from how cute describe it in two

00:17:46,710 --> 00:17:50,580
words out I think are easier to

00:17:47,999 --> 00:17:53,879
understand width if the size an item

00:17:50,580 --> 00:17:57,239
currently is an implicit width is a size

00:17:53,879 --> 00:17:59,549
an item wants to be like if I could be

00:17:57,239 --> 00:18:01,559
any size that's how thick I want to be I

00:17:59,549 --> 00:18:04,230
get a lot of spam emails which are

00:18:01,559 --> 00:18:10,859
basically a saying that this is size an

00:18:04,230 --> 00:18:13,950
item wants to be so typically speaking

00:18:10,859 --> 00:18:15,899
the width will be defined by a size of

00:18:13,950 --> 00:18:18,899
your window could be users dragging a

00:18:15,899 --> 00:18:20,850
window or a size of a scroll view and it

00:18:18,899 --> 00:18:22,200
would be passed down from the parent to

00:18:20,850 --> 00:18:23,399
your child which will pass it down to

00:18:22,200 --> 00:18:26,070
its children which will pass it down to

00:18:23,399 --> 00:18:28,830
its children whereas the implicit width

00:18:26,070 --> 00:18:31,409
assigns an item wants to be in size your

00:18:28,830 --> 00:18:34,139
window should be goes upwards we take

00:18:31,409 --> 00:18:35,970
your size of the text box work out how

00:18:34,139 --> 00:18:37,859
big a margin to be a certain place away

00:18:35,970 --> 00:18:40,019
from the button and then that buttons

00:18:37,859 --> 00:18:43,559
next to my buttons I need implicit whip

00:18:40,019 --> 00:18:45,690
go past obviously a change so if it's

00:18:43,559 --> 00:18:47,789
based on its implicit size of your

00:18:45,690 --> 00:18:49,919
children and gets passed upwards so

00:18:47,789 --> 00:18:52,049
directionally speaking which gets passed

00:18:49,919 --> 00:18:55,080
down and plis equipped gets pasta and

00:18:52,049 --> 00:18:59,340
obviously height is the same but

00:18:55,080 --> 00:19:00,480
vertically so an example of going back

00:18:59,340 --> 00:19:02,970
to your button because we all love

00:19:00,480 --> 00:19:05,609
buttons of examples buttons and qml are

00:19:02,970 --> 00:19:09,629
plasmids equivalent of clocks with you

00:19:05,609 --> 00:19:11,309
them two examples for everything we have

00:19:09,629 --> 00:19:12,960
an image and maybe a little icon that

00:19:11,309 --> 00:19:14,669
will tick mark or something and we have

00:19:12,960 --> 00:19:17,639
our text and we want to work out

00:19:14,669 --> 00:19:20,279
implicit width of the button we're

00:19:17,639 --> 00:19:22,619
setting its image to a thick size so we

00:19:20,279 --> 00:19:25,440
know how big this is going to be we know

00:19:22,619 --> 00:19:27,299
it's got some margins so we know it's

00:19:25,440 --> 00:19:29,399
going to be 20 pixels it's always going

00:19:27,299 --> 00:19:31,950
to be at least 20 pixels up until the

00:19:29,399 --> 00:19:34,590
end of the image but we don't want to

00:19:31,950 --> 00:19:36,509
say the width of the button is a width

00:19:34,590 --> 00:19:39,210
of the text we want to say a width of a

00:19:36,509 --> 00:19:40,750
button which the button should be the

00:19:39,210 --> 00:19:42,520
size of text wants to be

00:19:40,750 --> 00:19:44,860
the society detects wants to be in order

00:19:42,520 --> 00:19:46,240
to effect so if we take the implicit way

00:19:44,860 --> 00:19:48,520
through the text because your text can

00:19:46,240 --> 00:19:52,540
change this is dynamic images not

00:19:48,520 --> 00:19:53,800
dynamic detectives and then a little

00:19:52,540 --> 00:19:58,540
margin on the end so it's a good example

00:19:53,800 --> 00:20:01,450
of how to write implicit with but

00:19:58,540 --> 00:20:02,920
generally speaking a lot of your cute

00:20:01,450 --> 00:20:05,080
quick components will do this for you

00:20:02,920 --> 00:20:07,510
row and row layout will automatically

00:20:05,080 --> 00:20:10,300
calculate implicit width using row and

00:20:07,510 --> 00:20:14,500
row layout is summative Ian anchors for

00:20:10,300 --> 00:20:17,110
anything stay forward loader also sets

00:20:14,500 --> 00:20:20,040
implicit width and if you're not sure

00:20:17,110 --> 00:20:22,720
whether to use width or implicit width

00:20:20,040 --> 00:20:24,850
width is by default bounty implicit

00:20:22,720 --> 00:20:26,980
width so if you're only going to

00:20:24,850 --> 00:20:29,170
implement one implement implicit width

00:20:26,980 --> 00:20:31,660
because then when somebody else changes

00:20:29,170 --> 00:20:33,610
your item your implicit ones information

00:20:31,660 --> 00:20:35,740
is still available where this you only

00:20:33,610 --> 00:20:37,090
set a width attribute if somebody else

00:20:35,740 --> 00:20:39,820
changes your work factor do attribute

00:20:37,090 --> 00:20:43,200
yup what information is lost and you

00:20:39,820 --> 00:20:43,200
don't ever want to lose information

00:20:43,770 --> 00:20:50,410
pretty much near end tape it on getting

00:20:46,450 --> 00:20:53,770
bored countdown and Avvo will reposition

00:20:50,410 --> 00:20:56,680
items a row layout or reposition and

00:20:53,770 --> 00:20:59,560
resize items so if you want the size of

00:20:56,680 --> 00:21:01,780
items to change use a row layout if you

00:20:59,560 --> 00:21:04,660
just want items to be positioned user

00:21:01,780 --> 00:21:06,060
vote and that's a general just

00:21:04,660 --> 00:21:08,290
difference because I've seen people

00:21:06,060 --> 00:21:10,270
getting confused over that before and we

00:21:08,290 --> 00:21:16,080
something to use row layouts a bit

00:21:10,270 --> 00:21:18,220
overkill final slide binding loops

00:21:16,080 --> 00:21:22,680
reasons you have a binding lik warning

00:21:18,220 --> 00:21:22,680
in your code you have a binding Lee

00:21:40,059 --> 00:21:50,240
yeah shouldn't any component or certain

00:21:47,780 --> 00:21:52,610
have emphases versus height set by

00:21:50,240 --> 00:21:55,370
default and I think so I think I would

00:21:52,610 --> 00:21:57,890
generally a good of good advice I mean

00:21:55,370 --> 00:22:00,590
except for your item itself and you'll

00:21:57,890 --> 00:22:02,270
find most cute components do I think

00:22:00,590 --> 00:22:04,360
it's a good strategy to get yourself

00:22:02,270 --> 00:22:06,260
into even if you're not using it now

00:22:04,360 --> 00:22:09,559
it's something that might be used later

00:22:06,260 --> 00:22:12,049
because right now if I make like a

00:22:09,559 --> 00:22:14,179
little widget so to spin or something I

00:22:12,049 --> 00:22:18,679
might know it will always be set by a

00:22:14,179 --> 00:22:20,419
parent component but it might not in

00:22:18,679 --> 00:22:22,400
future so I think it's generally a good

00:22:20,419 --> 00:22:23,990
habit to get into particularly if you've

00:22:22,400 --> 00:22:27,740
got anything dynamic inside that

00:22:23,990 --> 00:22:29,600
component but implicit sighs on its own

00:22:27,740 --> 00:22:32,480
doesn't do anything it's not a property

00:22:29,600 --> 00:22:37,790
it does anything it's just sort of

00:22:32,480 --> 00:22:48,530
metadata for the - yep Oh

00:22:37,790 --> 00:22:49,110
you can shout I can repeat it oh yeah

00:22:48,530 --> 00:22:51,990
I'm crystal

00:22:49,110 --> 00:22:53,640
on Avvo Titan is generally bad because

00:22:51,990 --> 00:22:56,250
you want the geometry to be managed in a

00:22:53,640 --> 00:22:59,010
way you can read and it's an item

00:22:56,250 --> 00:23:01,500
manages its own geometry you'll get

00:22:59,010 --> 00:23:03,390
yourself you can't you don't when you're

00:23:01,500 --> 00:23:05,250
reading the code which could create the

00:23:03,390 --> 00:23:07,410
item you don't know where our item is

00:23:05,250 --> 00:23:10,260
going to be so I would say you don't

00:23:07,410 --> 00:23:12,780
want to do an ankle cell on any item I

00:23:10,260 --> 00:23:14,610
think I didn't some of my snippets

00:23:12,780 --> 00:23:17,070
because I'm trying to show that it was

00:23:14,610 --> 00:23:25,669
just a snippet rather than adding a size

00:23:17,070 --> 00:23:25,669
I went up wait we don't have technology

00:23:26,179 --> 00:23:37,919
we had technology okay okay I having

00:23:35,850 --> 00:23:41,520
human component which has an implicit

00:23:37,919 --> 00:23:44,760
sorry yep and now I want to change

00:23:41,520 --> 00:23:48,030
something depending on if the width

00:23:44,760 --> 00:23:52,320
property is set from the outside so is

00:23:48,030 --> 00:23:56,010
if if the parent doesn't set width then

00:23:52,320 --> 00:23:57,299
the behavior implicitly implicitly if

00:23:56,010 --> 00:24:00,210
you set an implicit well from the

00:23:57,299 --> 00:24:01,860
component if the width is set externally

00:24:00,210 --> 00:24:04,080
the WIPP set externally will apply

00:24:01,860 --> 00:24:06,720
however if your width is not setting

00:24:04,080 --> 00:24:08,910
it's only which is by default bound to

00:24:06,720 --> 00:24:11,160
your implicit width so it will use

00:24:08,910 --> 00:24:16,200
implicit width so you get that whole

00:24:11,160 --> 00:24:18,270
concept of I want to use my size unless

00:24:16,200 --> 00:24:19,559
it's been set externally so if you set

00:24:18,270 --> 00:24:27,090
an implicit width you will get that

00:24:19,559 --> 00:24:33,809
future and I can check do something like

00:24:27,090 --> 00:24:35,340
if with unequal to impetus oh I think

00:24:33,809 --> 00:24:38,250
those things you don't I don't think you

00:24:35,340 --> 00:24:41,549
need to I mean if it in general in your

00:24:38,250 --> 00:24:43,410
inside your component you want to be

00:24:41,549 --> 00:24:45,929
using a width because you don't know how

00:24:43,410 --> 00:24:47,190
big you actually are because as I said

00:24:45,929 --> 00:24:49,320
the width gets passed down from the

00:24:47,190 --> 00:24:51,960
parent so any items inside your

00:24:49,320 --> 00:24:54,720
component should be based on the size of

00:24:51,960 --> 00:24:56,730
your parent not implicit idea parents

00:24:54,720 --> 00:24:59,040
because you might not be a tempest size

00:24:56,730 --> 00:25:01,290
so I think in general I don't know your

00:24:59,040 --> 00:25:03,030
specific case but in general you want to

00:25:01,290 --> 00:25:05,549
base based on your current

00:25:03,030 --> 00:25:08,970
robbing a fight you want to be and the

00:25:05,549 --> 00:25:13,080
cases I have a baton which shirt do is

00:25:08,970 --> 00:25:15,570
resize based on the actual text that was

00:25:13,080 --> 00:25:18,809
set on the button but I I want to

00:25:15,570 --> 00:25:21,450
feature that the parent can say you

00:25:18,809 --> 00:25:24,360
button you are you have this size okay

00:25:21,450 --> 00:25:27,150
the text should elide or work so if you

00:25:24,360 --> 00:25:29,040
say it would lead and then you set the

00:25:27,150 --> 00:25:30,870
button to have an implicit wit base an

00:25:29,040 --> 00:25:34,620
implicit word for your button you will

00:25:30,870 --> 00:25:36,900
find that by default if it's not set

00:25:34,620 --> 00:25:38,880
externally the bottom rule set felt so

00:25:36,900 --> 00:25:42,660
the entire text because you're an

00:25:38,880 --> 00:25:45,809
implicit width of some text is the size

00:25:42,660 --> 00:25:48,990
of the text but it's it's been set

00:25:45,809 --> 00:25:51,059
externally then you'll be shrinking a

00:25:48,990 --> 00:25:53,490
text and they're not really doing so you

00:25:51,059 --> 00:25:56,910
want to imagine that you could be elated

00:25:53,490 --> 00:25:59,309
set Aleta true but then pass op amp is

00:25:56,910 --> 00:26:01,290
equipped to say I want to be as big so I

00:25:59,309 --> 00:26:04,610
don't have to believe I have a cure

00:26:01,290 --> 00:26:04,610
Mouse I'm going to show you actually

00:26:21,650 --> 00:26:28,520
so it is implicit width of text because

00:26:24,920 --> 00:26:31,250
size of the text is quite interesting

00:26:28,520 --> 00:26:33,800
really implicit width of the text is

00:26:31,250 --> 00:26:36,170
your text it would be if it wasn't

00:26:33,800 --> 00:26:38,360
wrapped and deleted so even if you wrap

00:26:36,170 --> 00:26:40,910
annelida text the implicit width is

00:26:38,360 --> 00:26:45,350
saying how old big can I be in order to

00:26:40,910 --> 00:26:48,200
not wrap and then the implicit height is

00:26:45,350 --> 00:26:51,140
based on how high should detect be

00:26:48,200 --> 00:26:54,080
assuming I'm not because about to set in

00:26:51,140 --> 00:26:56,240
order to not a lead and it's treated to

00:26:54,080 --> 00:26:58,160
almost in two completely independent

00:26:56,240 --> 00:26:59,510
things because you don't want to set it

00:26:58,160 --> 00:27:02,720
to implicit width and then place a

00:26:59,510 --> 00:27:05,690
height because that blue box shows

00:27:02,720 --> 00:27:07,640
implicit size but there's no point

00:27:05,690 --> 00:27:10,190
setting a text box to it's in for

00:27:07,640 --> 00:27:15,860
implicit size because that's both long

00:27:10,190 --> 00:27:17,750
enough to not not wrap and long enough

00:27:15,860 --> 00:27:19,640
to not to lead if it was wrapped so you

00:27:17,750 --> 00:27:21,140
can mix and match and interchangeably or

00:27:19,640 --> 00:27:25,270
don't really invert eclis don't they

00:27:21,140 --> 00:27:25,270
have to have the same star walk light

00:27:26,860 --> 00:27:41,210
okay one last question you said that if

00:27:37,790 --> 00:27:43,880
the warning I have a binding loop occurs

00:27:41,210 --> 00:27:46,610
I have binding loop but how to avoid a

00:27:43,880 --> 00:27:49,100
binding loop if I have two controls well

00:27:46,610 --> 00:27:51,080
that's at a value and also should

00:27:49,100 --> 00:27:53,150
display the value like for example in a

00:27:51,080 --> 00:27:55,700
calendar widget where I can type in the

00:27:53,150 --> 00:28:00,110
date or I can select the date by

00:27:55,700 --> 00:28:04,610
clicking on they for example I don't

00:28:00,110 --> 00:28:07,520
know all of your code I can't say this

00:28:04,610 --> 00:28:11,179
but in general most final lives can be

00:28:07,520 --> 00:28:13,940
avoided by saying use of implicit slaves

00:28:11,179 --> 00:28:15,470
and size independently so you're saying

00:28:13,940 --> 00:28:17,780
I want to be as big but that's not

00:28:15,470 --> 00:28:18,830
relevant on my coven size and then you

00:28:17,780 --> 00:28:21,200
don't have a binding leave because you

00:28:18,830 --> 00:28:22,490
don't have my sizes based on my current

00:28:21,200 --> 00:28:25,760
size which is it's actually what I've

00:28:22,490 --> 00:28:28,280
winding leaders I've never seen a false

00:28:25,760 --> 00:28:30,830
positive there's always been a way to

00:28:28,280 --> 00:28:32,270
avoid it all it's been the force of

00:28:30,830 --> 00:28:33,560
something that I can't control but we

00:28:32,270 --> 00:28:35,059
can at least identify it

00:28:33,560 --> 00:28:37,399
I can't

00:28:35,059 --> 00:28:43,940
comment on your specific case maybe cut

00:28:37,399 --> 00:28:46,999
me off words thank you everyone and

00:28:43,940 --> 00:28:49,480
thank you David for his nice talk if you

00:28:46,999 --> 00:28:49,480

YouTube URL: https://www.youtube.com/watch?v=B2xZY9Y7uno


