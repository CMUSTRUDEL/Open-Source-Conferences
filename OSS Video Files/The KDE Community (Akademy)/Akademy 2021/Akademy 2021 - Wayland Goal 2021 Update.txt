Title: Akademy 2021 - Wayland Goal 2021 Update
Publication date: 2021-06-30
Playlist: Akademy 2021
Description: 
	By MÃ©ven Car Vlad Zahorodnii
The Wayland Goal has been steadily making progress, we will look at what has been done since last Akademy, how it has been done and by who and have a look at the road ahead.
Captions: 
	00:00:01,130 --> 00:00:08,600
[Music]

00:00:10,000 --> 00:00:14,400
fine

00:00:11,280 --> 00:00:15,200
turning to my clock so welcome maven and

00:00:14,400 --> 00:00:18,320
vlad

00:00:15,200 --> 00:00:20,160
for the weyland goal 2021 update please

00:00:18,320 --> 00:00:23,519
go ahead

00:00:20,160 --> 00:00:25,599
all right everyone so as uh

00:00:23,519 --> 00:00:27,439
as alan said i'm bill and i'll be

00:00:25,599 --> 00:00:30,960
presenting with vlad's rodney

00:00:27,439 --> 00:00:34,160
uh our progress on the well on goal

00:00:30,960 --> 00:00:37,680
first we'll have

00:00:34,160 --> 00:00:40,719
a simple agenda and be introducing why

00:00:37,680 --> 00:00:41,200
is what a bit what is well for people

00:00:40,719 --> 00:00:44,559
who

00:00:41,200 --> 00:00:45,920
aren't yet aware and then i like some

00:00:44,559 --> 00:00:49,440
key improvements that we

00:00:45,920 --> 00:00:52,239
have made since last since last academy

00:00:49,440 --> 00:00:52,719
and then vlad will talk about the next

00:00:52,239 --> 00:00:54,879
goals

00:00:52,719 --> 00:00:56,239
and objectives and improvements that we

00:00:54,879 --> 00:00:59,920
are planning

00:00:56,239 --> 00:01:03,840
and we'll have a speculative timeline in

00:00:59,920 --> 00:01:07,040
the conclusion at the end uh

00:01:03,840 --> 00:01:10,320
first what the what the heck is well and

00:01:07,040 --> 00:01:13,040
a bit uh when only the

00:01:10,320 --> 00:01:15,600
future of desktop and linux well it's

00:01:13,040 --> 00:01:19,439
progressing at least that way

00:01:15,600 --> 00:01:23,920
and it was necessary it's

00:01:19,439 --> 00:01:26,560
uh it's uh

00:01:23,920 --> 00:01:27,040
it's an improvement over x11 x11 has

00:01:26,560 --> 00:01:30,400
been the

00:01:27,040 --> 00:01:33,759
display graph the display server

00:01:30,400 --> 00:01:35,119
for many years now but it has is really

00:01:33,759 --> 00:01:37,920
showing his age

00:01:35,119 --> 00:01:38,799
he it doesn't have a great support for

00:01:37,920 --> 00:01:42,479
itdpi

00:01:38,799 --> 00:01:44,560
it has really a poor security model

00:01:42,479 --> 00:01:46,640
and for all those reasons x developers

00:01:44,560 --> 00:01:47,840
put together a new architecture to

00:01:46,640 --> 00:01:50,479
replace it

00:01:47,840 --> 00:01:50,960
which which is well-known and well on is

00:01:50,479 --> 00:01:53,759
not

00:01:50,960 --> 00:01:55,759
directly an implementation but rather an

00:01:53,759 --> 00:01:58,000
architecture

00:01:55,759 --> 00:01:59,280
to simplify its implementation of new

00:01:58,000 --> 00:02:02,399
compositors

00:01:59,280 --> 00:02:05,200
and queen is one of those and

00:02:02,399 --> 00:02:05,200
and as such

00:02:05,439 --> 00:02:12,959
as such the whole

00:02:08,879 --> 00:02:16,560
plasma is moving towards uh well

00:02:12,959 --> 00:02:20,319
because queen is becoming a

00:02:16,560 --> 00:02:20,319
full-fledged weapon compositor

00:02:21,200 --> 00:02:26,560
and and in 2019 the

00:02:24,560 --> 00:02:28,959
cadillac community elected this goal to

00:02:26,560 --> 00:02:32,160
finalize the transition to weld

00:02:28,959 --> 00:02:34,560
and so i'm and that's why we are here

00:02:32,160 --> 00:02:34,560
today

00:02:35,519 --> 00:02:42,640
uh so i'll try i'll highlight a few

00:02:38,800 --> 00:02:45,680
improvements that were made

00:02:42,640 --> 00:02:48,640
since last academy uh first

00:02:45,680 --> 00:02:50,319
just a reminder is that uh one of the

00:02:48,640 --> 00:02:52,560
main things that uh

00:02:50,319 --> 00:02:54,720
one on the lows is to have mixed refresh

00:02:52,560 --> 00:02:58,000
rates but by that it means that

00:02:54,720 --> 00:03:00,159
different outputs can have different

00:02:58,000 --> 00:03:02,319
refresh rates so that you can have a

00:03:00,159 --> 00:03:04,879
higher refresh rate on the side in a

00:03:02,319 --> 00:03:07,200
different one or or

00:03:04,879 --> 00:03:08,480
or if you have a game that's really

00:03:07,200 --> 00:03:11,680
heavy on the gpu

00:03:08,480 --> 00:03:13,440
it can throttle it when it can lower the

00:03:11,680 --> 00:03:16,560
refresh rate on there

00:03:13,440 --> 00:03:20,239
compared to the second screen and and

00:03:16,560 --> 00:03:23,440
really on x11 it wasn't possible

00:03:20,239 --> 00:03:26,319
by design and uh it has

00:03:23,440 --> 00:03:26,959
and that's one of the features that went

00:03:26,319 --> 00:03:30,000
on

00:03:26,959 --> 00:03:31,920
allows and it's it's

00:03:30,000 --> 00:03:35,840
worth highlighting now because we have a

00:03:31,920 --> 00:03:35,840
few features that relating to that that

00:03:36,080 --> 00:03:39,360
that build on top of that

00:03:43,360 --> 00:03:47,440
one one very user-facing improvement

00:03:46,480 --> 00:03:50,480
that lhd

00:03:47,440 --> 00:03:53,840
was the screencasting and

00:03:50,480 --> 00:03:58,239
with the samples of windows

00:03:53,840 --> 00:04:01,760
output screencasting was improved

00:03:58,239 --> 00:04:02,159
drastically he got a new implementation

00:04:01,760 --> 00:04:06,720
and

00:04:02,159 --> 00:04:10,000
a new a new implementation and rendering

00:04:06,720 --> 00:04:12,879
so that uh we can have a nice someday

00:04:10,000 --> 00:04:15,840
some names in well on just as we had in

00:04:12,879 --> 00:04:15,840
x11

00:04:15,920 --> 00:04:23,120
and and along the way it improved the

00:04:19,680 --> 00:04:26,960
screencasting functionality by

00:04:23,120 --> 00:04:31,759
and allowing obs for instance to

00:04:26,960 --> 00:04:34,800
properly record windows and not just

00:04:31,759 --> 00:04:36,880
uh and not just

00:04:34,800 --> 00:04:38,880
the whole output before previously it

00:04:36,880 --> 00:04:43,840
was only possible to

00:04:38,880 --> 00:04:43,840
record the whole output

00:04:46,479 --> 00:04:49,600
then we have we had a very nice

00:04:48,720 --> 00:04:52,320
improvement

00:04:49,600 --> 00:04:53,520
from made by vlad we tried the

00:04:52,320 --> 00:04:55,600
improvement to the sub

00:04:53,520 --> 00:04:56,960
surface implementation it's a bit

00:04:55,600 --> 00:04:59,040
technical but

00:04:56,960 --> 00:05:00,880
in in well on applications can divide

00:04:59,040 --> 00:05:03,360
themselves in some services

00:05:00,880 --> 00:05:04,639
and previously we didn't have a very

00:05:03,360 --> 00:05:08,160
good implementation

00:05:04,639 --> 00:05:10,320
but there is been sorted out and

00:05:08,160 --> 00:05:11,199
and it's been very visible for

00:05:10,320 --> 00:05:14,639
applications that

00:05:11,199 --> 00:05:18,560
make use of subsurfaces like firefox

00:05:14,639 --> 00:05:20,880
or obs or cameo and has been

00:05:18,560 --> 00:05:22,840
a great improvement for the application

00:05:20,880 --> 00:05:26,400
compatibility

00:05:22,840 --> 00:05:29,759
and and uh

00:05:26,400 --> 00:05:31,840
and very pleasing to use like

00:05:29,759 --> 00:05:33,120
to to me what's the main feature that

00:05:31,840 --> 00:05:36,560
allowed me to run

00:05:33,120 --> 00:05:40,720
most of the time on island just for

00:05:36,560 --> 00:05:40,720
for the firefox browser maybe

00:05:44,720 --> 00:05:47,680
we have a talk

00:05:48,080 --> 00:05:52,000
we have we have currently an ongoing

00:05:51,440 --> 00:05:55,520
effort

00:05:52,000 --> 00:05:58,880
toward making uh queen welland

00:05:55,520 --> 00:05:58,880
more robust

00:05:59,280 --> 00:06:04,319
that's so that we can have the command

00:06:02,960 --> 00:06:08,080
credit

00:06:04,319 --> 00:06:12,720
queen wayland replays as we had

00:06:08,080 --> 00:06:15,680
for x 11 sort of and uh

00:06:12,720 --> 00:06:16,880
david will talk a bit more on sunday

00:06:15,680 --> 00:06:20,880
about it

00:06:16,880 --> 00:06:24,880
uh i won't go too much more detail but

00:06:20,880 --> 00:06:28,720
it's quite important to have more robust

00:06:24,880 --> 00:06:28,720
even sessions

00:06:30,880 --> 00:06:37,280
and we have activities

00:06:34,160 --> 00:06:40,639
uh kevin implemented

00:06:37,280 --> 00:06:41,440
the grounding rock for proper activity

00:06:40,639 --> 00:06:44,880
support in

00:06:41,440 --> 00:06:46,960
weld so activity allows

00:06:44,880 --> 00:06:48,080
queen to handle windows and group

00:06:46,960 --> 00:06:51,840
windows by

00:06:48,080 --> 00:06:54,880
this intermediate grouping sort

00:06:51,840 --> 00:06:58,560
and this grouping logic is now

00:06:54,880 --> 00:07:01,680
implemented in queen as well it still

00:06:58,560 --> 00:07:03,840
misses a few pieces but most of it is

00:07:01,680 --> 00:07:03,840
here

00:07:04,960 --> 00:07:12,400
uh it still misses a big few pieces

00:07:08,400 --> 00:07:12,400
compared to x11 support basically

00:07:13,440 --> 00:07:19,599
um and alex did

00:07:16,560 --> 00:07:21,039
great improvements on the xdg activation

00:07:19,599 --> 00:07:25,120
and startup feedback

00:07:21,039 --> 00:07:28,160
so that's uh a great work that

00:07:25,120 --> 00:07:32,720
needed to be done upstream

00:07:28,160 --> 00:07:37,599
within xdg protocols specifications

00:07:32,720 --> 00:07:37,599
so that applications can send

00:07:39,759 --> 00:07:46,720
can send activation request

00:07:44,000 --> 00:07:48,240
so that an application can say when you

00:07:46,720 --> 00:07:51,440
click in the link in camel

00:07:48,240 --> 00:07:54,879
that you you can have firefox

00:07:51,440 --> 00:07:58,240
focused afterwards firefox opens the url

00:07:54,879 --> 00:08:01,520
and focused and in we treat

00:07:58,240 --> 00:08:02,240
security uh seriously so we need to have

00:08:01,520 --> 00:08:05,680
a chain of

00:08:02,240 --> 00:08:06,319
responsibility or to to give explicit an

00:08:05,680 --> 00:08:09,599
application

00:08:06,319 --> 00:08:13,440
must give explicitly the focus to

00:08:09,599 --> 00:08:16,960
another so this protocol allows this

00:08:13,440 --> 00:08:19,919
to to to request that

00:08:16,960 --> 00:08:20,879
another application will be focused on

00:08:19,919 --> 00:08:25,520
behalf of

00:08:20,879 --> 00:08:27,599
another and as i said it needed to

00:08:25,520 --> 00:08:30,000
it needs to be cross applications to

00:08:27,599 --> 00:08:34,320
work and

00:08:30,000 --> 00:08:38,080
so you need a cross a startup

00:08:34,320 --> 00:08:41,200
protocol and and all this also

00:08:38,080 --> 00:08:44,399
allows us to add the the very famous

00:08:41,200 --> 00:08:48,480
ubuntu icon animation so that we can

00:08:44,399 --> 00:08:51,360
have the application icon bouncing

00:08:48,480 --> 00:08:54,640
around the cursor while the application

00:08:51,360 --> 00:08:58,000
is starting up

00:08:54,640 --> 00:09:03,120
it still needs application

00:08:58,000 --> 00:09:06,560
support to have proper proper

00:09:03,120 --> 00:09:10,640
support for it but

00:09:06,560 --> 00:09:10,640
that is it's at hand

00:09:10,959 --> 00:09:15,279
and then we have drm backhands

00:09:13,920 --> 00:09:19,040
improvements

00:09:15,279 --> 00:09:19,680
so those so great shout out to xavier

00:09:19,040 --> 00:09:23,600
hogg

00:09:19,680 --> 00:09:25,279
who did the the most of this work

00:09:23,600 --> 00:09:27,519
and sorry for for his lasting

00:09:25,279 --> 00:09:30,160
pronunciation uh

00:09:27,519 --> 00:09:31,200
we had a great improvement on the jerk

00:09:30,160 --> 00:09:34,399
scan out

00:09:31,200 --> 00:09:36,959
so drx cannot is great for gaming it

00:09:34,399 --> 00:09:37,839
allows the an application that's full

00:09:36,959 --> 00:09:40,080
screen to take

00:09:37,839 --> 00:09:41,040
control over the screen and queen the

00:09:40,080 --> 00:09:44,399
compositor

00:09:41,040 --> 00:09:47,600
will just uh fade away and

00:09:44,399 --> 00:09:50,320
just give all the gpu and cpu

00:09:47,600 --> 00:09:52,240
resources to the application so they can

00:09:50,320 --> 00:09:55,040
run

00:09:52,240 --> 00:09:55,839
so that it can render directly to the

00:09:55,040 --> 00:09:58,880
the

00:09:55,839 --> 00:10:01,360
uh the wind

00:09:58,880 --> 00:10:04,640
to the screen without any interference

00:10:01,360 --> 00:10:07,680
from the compositor

00:10:04,640 --> 00:10:12,640
we have added adaptive sync

00:10:07,680 --> 00:10:14,880
aka vrr or very variable refresh rates

00:10:12,640 --> 00:10:15,839
it's great also for gaming to avoid

00:10:14,880 --> 00:10:18,240
stuttering

00:10:15,839 --> 00:10:19,680
so if you have a monitor that supports

00:10:18,240 --> 00:10:24,240
it

00:10:19,680 --> 00:10:24,240
we can have this feature

00:10:24,640 --> 00:10:29,040
and another feature that was worked on

00:10:27,519 --> 00:10:32,240
by zava was

00:10:29,040 --> 00:10:35,519
the multi-p multi gpu and gpu

00:10:32,240 --> 00:10:40,000
plugin support it's about mainly

00:10:35,519 --> 00:10:40,000
laptops with discrete gpus in

00:10:41,360 --> 00:10:45,600
added well with laptops that have

00:10:43,760 --> 00:10:49,519
integrated

00:10:45,600 --> 00:10:53,519
graphical unit and then discrete gpus

00:10:49,519 --> 00:10:57,360
also so it allows to move over

00:10:53,519 --> 00:11:00,399
buffer data from from gpu to

00:10:57,360 --> 00:11:02,800
the other and answers

00:11:00,399 --> 00:11:02,800
allo

00:11:03,760 --> 00:11:10,240
better uh well better support for this

00:11:06,959 --> 00:11:10,240
this type of hardware

00:11:10,399 --> 00:11:14,160
and there are a lot of other

00:11:12,240 --> 00:11:17,040
improvements as well so we had

00:11:14,160 --> 00:11:18,959
a great screenshot optimization so now

00:11:17,040 --> 00:11:21,440
screenshots are really

00:11:18,959 --> 00:11:22,399
fast it doesn't need to copy as much

00:11:21,440 --> 00:11:24,240
data

00:11:22,399 --> 00:11:26,880
between the compositor and the

00:11:24,240 --> 00:11:26,880
inspectaco

00:11:27,680 --> 00:11:34,800
we have a college integration uh before

00:11:31,920 --> 00:11:37,040
we had a night color and collodiology is

00:11:34,800 --> 00:11:39,760
a demon to handle

00:11:37,040 --> 00:11:39,760
blue light

00:11:40,079 --> 00:11:45,519
blue light uh blue lights

00:11:43,600 --> 00:11:46,640
depending on the time of the day and we

00:11:45,519 --> 00:11:48,959
had night

00:11:46,640 --> 00:11:50,399
night uh night color we did the same

00:11:48,959 --> 00:11:52,560
thing and the two would clash

00:11:50,399 --> 00:11:53,760
sometimes if you had the two installed

00:11:52,560 --> 00:11:56,560
on your system

00:11:53,760 --> 00:11:57,680
but now we have a better integration and

00:11:56,560 --> 00:11:59,279
now they

00:11:57,680 --> 00:12:02,639
sort of complement themselves or at

00:11:59,279 --> 00:12:05,040
least they don't step on each other so

00:12:02,639 --> 00:12:06,560
and so we have much better ecology

00:12:05,040 --> 00:12:10,320
integration around

00:12:06,560 --> 00:12:12,000
and last but this is not queen specif

00:12:10,320 --> 00:12:13,600
is it's not about queen but quite

00:12:12,000 --> 00:12:17,040
important to

00:12:13,600 --> 00:12:20,160
to as well to for the stations

00:12:17,040 --> 00:12:22,800
it's uh sddm will have a greater

00:12:20,160 --> 00:12:23,519
implemented using weld so it's great for

00:12:22,800 --> 00:12:26,480
split up

00:12:23,519 --> 00:12:28,240
well we can expect sdgm to start a lot

00:12:26,480 --> 00:12:31,440
faster because x11 is

00:12:28,240 --> 00:12:34,480
it's slow to start whereas a

00:12:31,440 --> 00:12:36,959
small compositor can be really more

00:12:34,480 --> 00:12:36,959
efficient

00:12:37,440 --> 00:12:45,360
and uh and will all those points

00:12:41,040 --> 00:12:49,760
said i will let the

00:12:45,360 --> 00:12:52,959
leave the mic to vlad so that can

00:12:49,760 --> 00:12:56,079
introduce you to the next goals and next

00:12:52,959 --> 00:12:57,610
evolutions to queen

00:12:56,079 --> 00:13:00,399
okay cool

00:12:57,610 --> 00:13:04,160
[Music]

00:13:00,399 --> 00:13:07,600
so um

00:13:04,160 --> 00:13:08,399
okay thanks madam so i'm going to talk

00:13:07,600 --> 00:13:11,360
about

00:13:08,399 --> 00:13:12,160
um the next improvements that we want to

00:13:11,360 --> 00:13:17,200
make

00:13:12,160 --> 00:13:17,200
so where one becomes the default so

00:13:17,760 --> 00:13:20,880
so the first thing that we want to

00:13:20,399 --> 00:13:22,800
change

00:13:20,880 --> 00:13:24,480
is the scene so the scene is a gear

00:13:22,800 --> 00:13:27,519
selection and it's used to describe

00:13:24,480 --> 00:13:28,240
what goes into every frame um currently

00:13:27,519 --> 00:13:30,000
one

00:13:28,240 --> 00:13:32,639
of the biggest next goals is to make

00:13:30,000 --> 00:13:35,920
green green similar abstractions

00:13:32,639 --> 00:13:36,160
suitable for wayland but before we dive

00:13:35,920 --> 00:13:38,320
in

00:13:36,160 --> 00:13:39,440
let's have a look at the current state

00:13:38,320 --> 00:13:41,440
so the current

00:13:39,440 --> 00:13:43,440
uh machine design dates back to the

00:13:41,440 --> 00:13:48,240
inception of compositing in queen

00:13:43,440 --> 00:13:51,600
so it's somewhere around 2006.

00:13:48,240 --> 00:13:52,079
so conceptually the scene is just a list

00:13:51,600 --> 00:13:55,360
of

00:13:52,079 --> 00:13:56,079
windows sorted from from bottom to top

00:13:55,360 --> 00:13:59,760
so

00:13:56,079 --> 00:14:02,000
from my professional drawing um

00:13:59,760 --> 00:14:04,000
you can see that we have seen and it

00:14:02,000 --> 00:14:07,680
just contains

00:14:04,000 --> 00:14:11,920
some windows so nothing um

00:14:07,680 --> 00:14:15,600
nothing more it's that simple so

00:14:11,920 --> 00:14:19,920
while the current scene design

00:14:15,600 --> 00:14:22,480
served as well on x11 so on x11

00:14:19,920 --> 00:14:23,760
nx11 compositing manager just needs to

00:14:22,480 --> 00:14:26,000
take off screen buffers

00:14:23,760 --> 00:14:28,160
compile them compose them in a single

00:14:26,000 --> 00:14:30,639
buffer and put it on the screen

00:14:28,160 --> 00:14:31,680
on wayland it's a completely different

00:14:30,639 --> 00:14:34,000
situation

00:14:31,680 --> 00:14:35,040
so the way when compile store has more

00:14:34,000 --> 00:14:38,720
responsibilities

00:14:35,040 --> 00:14:40,959
than an excellent compositing manager um

00:14:38,720 --> 00:14:43,120
it composites windows but it also

00:14:40,959 --> 00:14:44,800
responsible for input handling painting

00:14:43,120 --> 00:14:47,920
cursors etc

00:14:44,800 --> 00:14:49,120
and we constantly hit the limitations of

00:14:47,920 --> 00:14:52,320
the currency in

00:14:49,120 --> 00:14:54,079
browser to begin with um we want this

00:14:52,320 --> 00:14:57,279
single sometimes include

00:14:54,079 --> 00:15:00,480
items such as cursor or or the

00:14:57,279 --> 00:15:00,480
drag and drop um

00:15:01,040 --> 00:15:07,680
or drag and drop icon but since the

00:15:04,240 --> 00:15:08,800
sync graph is only can only contain

00:15:07,680 --> 00:15:12,000
windows

00:15:08,800 --> 00:15:14,959
um we cannot do that um so we

00:15:12,000 --> 00:15:16,560
work around that by having row specific

00:15:14,959 --> 00:15:19,600
banking code paths

00:15:16,560 --> 00:15:22,000
um it's a huge no if you're

00:15:19,600 --> 00:15:23,120
if you're a whale and developer but we

00:15:22,000 --> 00:15:26,399
don't have any other

00:15:23,120 --> 00:15:29,120
choice right now so

00:15:26,399 --> 00:15:30,560
so ideally we must share code that

00:15:29,120 --> 00:15:33,759
paints window surfaces

00:15:30,560 --> 00:15:34,480
cursor surfaces and so on but we cannot

00:15:33,759 --> 00:15:37,120
do that

00:15:34,480 --> 00:15:38,480
another flaw is that of the current

00:15:37,120 --> 00:15:40,560
scene design is that

00:15:38,480 --> 00:15:42,639
it's not possible to have the pain

00:15:40,560 --> 00:15:45,759
scheduled automatically

00:15:42,639 --> 00:15:47,680
so so say your window is moved uh window

00:15:45,759 --> 00:15:48,399
management code will have to schedule

00:15:47,680 --> 00:15:52,000
your paint

00:15:48,399 --> 00:15:54,480
manually as the bus shows it's

00:15:52,000 --> 00:15:55,120
too error prone and it's sometimes just

00:15:54,480 --> 00:15:58,160
too

00:15:55,120 --> 00:15:58,160
hard to get right

00:15:58,720 --> 00:16:06,480
um another painful

00:16:02,639 --> 00:16:08,880
aspect of the currency in design is that

00:16:06,480 --> 00:16:11,279
is that it doesn't really work well for

00:16:08,880 --> 00:16:13,519
cursors so as i said previously

00:16:11,279 --> 00:16:14,320
um queen has surface rollover painting

00:16:13,519 --> 00:16:17,839
code

00:16:14,320 --> 00:16:18,880
and it sometimes and it sometimes

00:16:17,839 --> 00:16:22,959
doesn't work for

00:16:18,880 --> 00:16:26,800
drag and drop icons so

00:16:22,959 --> 00:16:29,199
so yeah and another um

00:16:26,800 --> 00:16:31,199
outcome of having row array painting

00:16:29,199 --> 00:16:32,000
code is that queen is able to paint

00:16:31,199 --> 00:16:35,199
cursors

00:16:32,000 --> 00:16:38,079
only with certain client buffers types

00:16:35,199 --> 00:16:38,480
so for example linux domain buff buffers

00:16:38,079 --> 00:16:41,279
are

00:16:38,480 --> 00:16:44,000
unsupported which means that if a video

00:16:41,279 --> 00:16:45,040
games paints cursors using opengl or

00:16:44,000 --> 00:16:47,759
vulcan

00:16:45,040 --> 00:16:49,440
um you won't see that cursor because

00:16:47,759 --> 00:16:52,639
screen doesn't understand it

00:16:49,440 --> 00:16:55,440
which again is a violation of protocols

00:16:52,639 --> 00:16:57,360
and you and we need to fix it it's a

00:16:55,440 --> 00:17:00,480
serious issue

00:16:57,360 --> 00:17:02,560
so another painful

00:17:00,480 --> 00:17:03,519
thing about cursors is that they can

00:17:02,560 --> 00:17:06,880
have

00:17:03,519 --> 00:17:10,640
uh extensions so

00:17:06,880 --> 00:17:13,520
for the in some cases such as creating a

00:17:10,640 --> 00:17:15,520
subsurface for the current surface are

00:17:13,520 --> 00:17:19,360
weird but there are also

00:17:15,520 --> 00:17:22,079
um valid use cases so the most

00:17:19,360 --> 00:17:22,400
um notable example that i can come up

00:17:22,079 --> 00:17:26,160
with

00:17:22,400 --> 00:17:29,520
is using vp viewport extension to

00:17:26,160 --> 00:17:32,240
to implement animated cursors so

00:17:29,520 --> 00:17:32,640
so if you have if an application wants

00:17:32,240 --> 00:17:34,960
to

00:17:32,640 --> 00:17:36,000
we display an animated cursor you could

00:17:34,960 --> 00:17:39,440
upload all

00:17:36,000 --> 00:17:42,960
cursor sprites in a big buffer and

00:17:39,440 --> 00:17:45,679
um code spreadsheet and simply move the

00:17:42,960 --> 00:17:47,440
viewport inside the sprite sheet so this

00:17:45,679 --> 00:17:48,320
way the application will have to do less

00:17:47,440 --> 00:17:51,679
work on

00:17:48,320 --> 00:17:54,720
every frame and it seems like

00:17:51,679 --> 00:17:57,840
the presentation doesn't play the

00:17:54,720 --> 00:18:00,960
animation but um but

00:17:57,840 --> 00:18:01,440
you should see the parallel rectangle

00:18:00,960 --> 00:18:04,720
move

00:18:01,440 --> 00:18:07,440
on every frame so

00:18:04,720 --> 00:18:10,320
in order to handle this case compriser

00:18:07,440 --> 00:18:14,960
needs to perform compositing

00:18:10,320 --> 00:18:18,080
but again we we can handle this

00:18:14,960 --> 00:18:18,080
case properly

00:18:18,480 --> 00:18:22,559
so the root cause of all our problems is

00:18:21,440 --> 00:18:25,600
a bad thing

00:18:22,559 --> 00:18:29,039
is that sin thinks of

00:18:25,600 --> 00:18:31,520
in terms of windows so what if we break

00:18:29,039 --> 00:18:33,120
um every window into smaller and

00:18:31,520 --> 00:18:35,520
reusable pieces

00:18:33,120 --> 00:18:36,720
um that's the main idea of the single

00:18:35,520 --> 00:18:38,400
free design

00:18:36,720 --> 00:18:40,320
um the smaller building blocks of

00:18:38,400 --> 00:18:42,080
windows are called items so on the

00:18:40,320 --> 00:18:44,160
picture on the left you see that

00:18:42,080 --> 00:18:46,240
we have shadow item the collisionality

00:18:44,160 --> 00:18:50,160
command service item

00:18:46,240 --> 00:18:54,840
and window item um aggregates them

00:18:50,160 --> 00:18:58,559
into one um into one window

00:18:54,840 --> 00:19:00,080
item so with a single graphic design we

00:18:58,559 --> 00:19:02,320
want to fix the

00:19:00,080 --> 00:19:04,640
issues with the existing missing graph

00:19:02,320 --> 00:19:07,760
and make it more extensible for

00:19:04,640 --> 00:19:10,640
the new features um but

00:19:07,760 --> 00:19:12,000
we we also like it to be the clarity

00:19:10,640 --> 00:19:13,840
with some meaning that

00:19:12,000 --> 00:19:15,360
queen just needs to describe what it

00:19:13,840 --> 00:19:18,160
wants to be rendered

00:19:15,360 --> 00:19:18,480
and they think of design and if they

00:19:18,160 --> 00:19:22,240
think

00:19:18,480 --> 00:19:25,120
of renderer we'll figure out how um

00:19:22,240 --> 00:19:27,840
how to do that and what parts of the

00:19:25,120 --> 00:19:31,039
screen needs to be repainted

00:19:27,840 --> 00:19:34,400
um uh since this

00:19:31,039 --> 00:19:38,320
scene uh rough things in terms of

00:19:34,400 --> 00:19:41,360
items it can now contain arbitrary um

00:19:38,320 --> 00:19:42,160
things it's not limited on to windows

00:19:41,360 --> 00:19:44,559
only

00:19:42,160 --> 00:19:45,520
so as you can see the single can now

00:19:44,559 --> 00:19:48,559
contain windows

00:19:45,520 --> 00:19:51,919
as well as some other special purpose

00:19:48,559 --> 00:19:52,400
um items such as the cursor or drag and

00:19:51,919 --> 00:19:54,960
drop

00:19:52,400 --> 00:19:54,960
icons

00:19:55,520 --> 00:20:02,960
um so another goal is

00:19:59,679 --> 00:20:04,840
to use that so you can view

00:20:02,960 --> 00:20:07,280
a monitor as a device with a

00:20:04,840 --> 00:20:08,159
rectangulary region filled with a bunch

00:20:07,280 --> 00:20:11,280
of pixels

00:20:08,159 --> 00:20:14,000
but the compressor we use it as

00:20:11,280 --> 00:20:14,880
something more complex so every monitor

00:20:14,000 --> 00:20:17,440
has a

00:20:14,880 --> 00:20:18,640
has a list of associated hardware planes

00:20:17,440 --> 00:20:21,280
and plane

00:20:18,640 --> 00:20:22,799
just represents an image source they can

00:20:21,280 --> 00:20:25,919
be blended with

00:20:22,799 --> 00:20:29,520
or overlaid on top of other planes

00:20:25,919 --> 00:20:32,559
with a monitor so the most important

00:20:29,520 --> 00:20:35,360
two plane types are primary and

00:20:32,559 --> 00:20:36,080
cursor so the cursor plane represents

00:20:35,360 --> 00:20:39,360
just

00:20:36,080 --> 00:20:42,320
a regular mouse cursor and

00:20:39,360 --> 00:20:42,880
the primary plane is usually used to

00:20:42,320 --> 00:20:46,159
present

00:20:42,880 --> 00:20:48,880
other graphics contents content such as

00:20:46,159 --> 00:20:49,600
windows or normal windows desktop

00:20:48,880 --> 00:20:53,200
background

00:20:49,600 --> 00:20:56,400
etc um the key thing here is that

00:20:53,200 --> 00:20:59,280
planes are blended by hardware um it

00:20:56,400 --> 00:21:02,000
allows the compilers to avoid performing

00:20:59,280 --> 00:21:03,280
compositing if the cursor moves the

00:21:02,000 --> 00:21:05,360
capacitor will just

00:21:03,280 --> 00:21:07,919
update the position of the cursor plane

00:21:05,360 --> 00:21:10,320
and the hardware will blend it with

00:21:07,919 --> 00:21:11,280
other planes no compositing will be

00:21:10,320 --> 00:21:13,120
performed

00:21:11,280 --> 00:21:15,120
which is which is really really good

00:21:13,120 --> 00:21:17,120
because um

00:21:15,120 --> 00:21:18,559
we do less work and it's better for

00:21:17,120 --> 00:21:21,679
power consumption

00:21:18,559 --> 00:21:25,600
and it's more efficient um so in order

00:21:21,679 --> 00:21:27,280
to benefit from hardware planes we also

00:21:25,600 --> 00:21:32,159
would like to have

00:21:27,280 --> 00:21:32,159
a singer for every hardware plane

00:21:32,720 --> 00:21:34,960
um

00:21:35,919 --> 00:21:40,400
since we want the sync graph to be

00:21:38,400 --> 00:21:44,559
declarative

00:21:40,400 --> 00:21:47,919
the effects also need to change we need

00:21:44,559 --> 00:21:50,880
a declarative effects appealing um

00:21:47,919 --> 00:21:52,640
it's worth noting that the animation

00:21:50,880 --> 00:21:55,039
effect

00:21:52,640 --> 00:21:55,450
class already provides such an api so we

00:21:55,039 --> 00:21:56,559
need to

00:21:55,450 --> 00:21:59,039
[Music]

00:21:56,559 --> 00:22:00,720
see if you can extend it and port the

00:21:59,039 --> 00:22:03,360
remaining effects to it

00:22:00,720 --> 00:22:03,760
um the javascript effects will probably

00:22:03,360 --> 00:22:07,600
not

00:22:03,760 --> 00:22:10,720
require any changes uh more complex

00:22:07,600 --> 00:22:11,600
effects such as desktop grid or present

00:22:10,720 --> 00:22:15,039
windows

00:22:11,600 --> 00:22:18,720
uh need to be really implemented using

00:22:15,039 --> 00:22:21,760
uh qmail um the

00:22:18,720 --> 00:22:22,640
the last two effects are a bit special

00:22:21,760 --> 00:22:26,960
because

00:22:22,640 --> 00:22:29,919
the previous screen maintainer already

00:22:26,960 --> 00:22:31,200
discovered issues with present windows

00:22:29,919 --> 00:22:34,720
and desktop window

00:22:31,200 --> 00:22:37,840
that's a great effect and

00:22:34,720 --> 00:22:38,640
and there is a task to implement them

00:22:37,840 --> 00:22:43,440
using

00:22:38,640 --> 00:22:47,039
gmail kml which dates back to 2012

00:22:43,440 --> 00:22:50,400
so it's with all tasks

00:22:47,039 --> 00:22:54,080
so the next question is

00:22:50,400 --> 00:22:57,200
when it's going to be finished so

00:22:54,080 --> 00:23:00,960
some of these synchro design changes

00:22:57,200 --> 00:23:04,960
already merged or merged in

00:23:00,960 --> 00:23:07,200
or landed in 5.22

00:23:04,960 --> 00:23:08,400
so you should see less visual artifacts

00:23:07,200 --> 00:23:11,760
in application

00:23:08,400 --> 00:23:14,880
applications such as firefox or

00:23:11,760 --> 00:23:17,120
other applications that use subsurfaces

00:23:14,880 --> 00:23:19,039
there's still a lot of work ahead of us

00:23:17,120 --> 00:23:21,280
but

00:23:19,039 --> 00:23:22,720
so it's going to take a while before we

00:23:21,280 --> 00:23:25,520
we are done with

00:23:22,720 --> 00:23:25,520
release tasks

00:23:26,799 --> 00:23:33,919
on a related note i would like to

00:23:30,720 --> 00:23:36,960
do this cause advice

00:23:33,919 --> 00:23:40,640
to talk about briefly about qt quick and

00:23:36,960 --> 00:23:42,960
queen so qt is simply

00:23:40,640 --> 00:23:45,360
an amazing piece of technology and we

00:23:42,960 --> 00:23:48,320
use it extensively in plasma

00:23:45,360 --> 00:23:49,039
um so after trying it you don't really

00:23:48,320 --> 00:23:52,480
want to go

00:23:49,039 --> 00:23:53,360
back to qtvgs so it will be nice to see

00:23:52,480 --> 00:23:56,400
queen as a

00:23:53,360 --> 00:23:57,679
qt quick whalen compositor we would

00:23:56,400 --> 00:23:59,919
share the

00:23:57,679 --> 00:24:00,880
the same technology stack across plasma

00:23:59,919 --> 00:24:05,039
which will

00:24:00,880 --> 00:24:07,679
open queen for more plasma developers

00:24:05,039 --> 00:24:09,360
so it may not happen now but i haven't

00:24:07,679 --> 00:24:12,159
always that it's going to happen

00:24:09,360 --> 00:24:12,480
at some point in the future so we will

00:24:12,159 --> 00:24:14,960
we

00:24:12,480 --> 00:24:15,679
will become a critical compositor

00:24:14,960 --> 00:24:19,039
currently

00:24:15,679 --> 00:24:19,440
we have a few integration issues that

00:24:19,039 --> 00:24:22,640
are

00:24:19,440 --> 00:24:25,520
kind of big blockers for this switch

00:24:22,640 --> 00:24:26,960
besides that there are performance

00:24:25,520 --> 00:24:30,159
concerns

00:24:26,960 --> 00:24:31,760
uh specifically qt with um with a

00:24:30,159 --> 00:24:34,320
default renderer

00:24:31,760 --> 00:24:35,679
doesn't track damage so it tries to

00:24:34,320 --> 00:24:38,720
repaint the entire

00:24:35,679 --> 00:24:41,279
window on every frame so

00:24:38,720 --> 00:24:42,799
it means that if you use the blur effect

00:24:41,279 --> 00:24:45,120
and watch your video

00:24:42,799 --> 00:24:46,960
the background behind the panel will be

00:24:45,120 --> 00:24:50,080
blurred on every frame

00:24:46,960 --> 00:24:52,000
which which is which is a kind of

00:24:50,080 --> 00:24:56,159
serious performance

00:24:52,000 --> 00:24:59,200
issue so qt creek

00:24:56,159 --> 00:25:00,480
2d looks very compelling as it does

00:24:59,200 --> 00:25:03,440
track damage

00:25:00,480 --> 00:25:04,080
but it supports only software rendering

00:25:03,440 --> 00:25:07,200
and

00:25:04,080 --> 00:25:07,760
we need something like and we need we

00:25:07,200 --> 00:25:11,039
need

00:25:07,760 --> 00:25:12,080
something like ut victor d but which

00:25:11,039 --> 00:25:15,440
also works with

00:25:12,080 --> 00:25:18,960
open j or rhi

00:25:15,440 --> 00:25:20,960
um so i don't expect the

00:25:18,960 --> 00:25:22,720
current situation to change in the

00:25:20,960 --> 00:25:25,600
nearest future

00:25:22,720 --> 00:25:25,919
but if there are kde community members

00:25:25,600 --> 00:25:28,240
that

00:25:25,919 --> 00:25:28,960
are familiar with qrikey declarative

00:25:28,240 --> 00:25:32,159
code

00:25:28,960 --> 00:25:33,440
and one does help with this um please

00:25:32,159 --> 00:25:36,960
contact us in

00:25:33,440 --> 00:25:40,159
in the queen irc channel and

00:25:36,960 --> 00:25:40,880
we will discuss more in detail what

00:25:40,159 --> 00:25:44,159
needs to be

00:25:40,880 --> 00:25:47,520
done to to make to make our

00:25:44,159 --> 00:25:51,039
queen a critique with compositor

00:25:47,520 --> 00:25:54,559
so that's

00:25:51,039 --> 00:25:58,159
that's about single so

00:25:54,559 --> 00:26:01,039
the next kind of tricky

00:25:58,159 --> 00:26:01,039
topic is

00:26:01,360 --> 00:26:05,120
is the timeline so wayland has been in

00:26:04,640 --> 00:26:06,880
the

00:26:05,120 --> 00:26:09,039
wheeling session has been in development

00:26:06,880 --> 00:26:12,559
stage for quite a while

00:26:09,039 --> 00:26:16,080
and it raises a natural question

00:26:12,559 --> 00:26:19,360
when when's it going to be finally ready

00:26:16,080 --> 00:26:22,480
so here's my optimistic timeline

00:26:19,360 --> 00:26:26,240
so in plasma of five times

00:26:22,480 --> 00:26:29,760
we're definitely going to stick with x11

00:26:26,240 --> 00:26:30,799
uh in plasma 6 though i hope that plasma

00:26:29,760 --> 00:26:33,039
station will

00:26:30,799 --> 00:26:35,039
mature enough so we can safely start

00:26:33,039 --> 00:26:37,600
recommending linux distribution

00:26:35,039 --> 00:26:39,520
distress to make the wheyland session

00:26:37,600 --> 00:26:42,640
the default one

00:26:39,520 --> 00:26:43,440
it's worth noting that fedora is ahead

00:26:42,640 --> 00:26:46,320
of the curve

00:26:43,440 --> 00:26:48,880
in this area um they made the whalen

00:26:46,320 --> 00:26:53,440
session default in fedora

00:26:48,880 --> 00:26:57,039
34 and and they provide us invaluable

00:26:53,440 --> 00:27:00,640
feedback so it's really cool to see

00:26:57,039 --> 00:27:01,840
more first adapters of wasteland like

00:27:00,640 --> 00:27:06,240
fedora

00:27:01,840 --> 00:27:09,440
um in plasma 7 or somewhere

00:27:06,240 --> 00:27:12,640
late in plasma 6 i hope that the

00:27:09,440 --> 00:27:15,919
acceleration will be dropped in favor

00:27:12,640 --> 00:27:18,840
of wayland as i said it's it's a very

00:27:15,919 --> 00:27:21,279
optimistic timeline

00:27:18,840 --> 00:27:25,760
but but i hope that it

00:27:21,279 --> 00:27:25,760
is going to be true so

00:27:26,399 --> 00:27:32,080
um in the conclusion so

00:27:29,440 --> 00:27:34,080
the plasma availation is proving is

00:27:32,080 --> 00:27:37,360
improving on a stage

00:27:34,080 --> 00:27:39,840
base with every release we try to

00:27:37,360 --> 00:27:43,120
resolve as many as possible blockers

00:27:39,840 --> 00:27:44,000
um for basic usages such as simply

00:27:43,120 --> 00:27:46,720
browsing or

00:27:44,000 --> 00:27:47,919
watching movies i think that way one

00:27:46,720 --> 00:27:50,399
session is

00:27:47,919 --> 00:27:51,679
already really good uh you may

00:27:50,399 --> 00:27:54,960
experience some

00:27:51,679 --> 00:27:56,559
issues minor issues in with private web

00:27:54,960 --> 00:27:59,840
browsers but

00:27:56,559 --> 00:28:00,799
for me uh firefox with native web and

00:27:59,840 --> 00:28:04,480
support

00:28:00,799 --> 00:28:07,520
uh has been working really really good

00:28:04,480 --> 00:28:11,520
for other usages it may need

00:28:07,520 --> 00:28:14,399
some more work and in general

00:28:11,520 --> 00:28:15,520
the transition to the whale to

00:28:14,399 --> 00:28:18,559
wavelength is and

00:28:15,520 --> 00:28:21,840
requires an enormous offer and

00:28:18,559 --> 00:28:23,360
it needs the community help so um there

00:28:21,840 --> 00:28:26,880
are multiple ways

00:28:23,360 --> 00:28:28,000
that you can help us um but you can help

00:28:26,880 --> 00:28:31,520
us

00:28:28,000 --> 00:28:32,320
um with this so for example test beta

00:28:31,520 --> 00:28:35,679
releases

00:28:32,320 --> 00:28:38,240
file back reports or submit code changes

00:28:35,679 --> 00:28:40,399
uh for more details please visit the

00:28:38,240 --> 00:28:43,360
wayland wiki page

00:28:40,399 --> 00:28:44,159
um i think that's that's all from my

00:28:43,360 --> 00:28:48,960
site

00:28:44,159 --> 00:28:48,960
or from outside so questions

00:28:50,399 --> 00:28:56,159
okay thanks a lot thanks melvin

00:28:53,679 --> 00:28:58,320
i guess you want to rejoin in case there

00:28:56,159 --> 00:29:01,600
are questions and

00:28:58,320 --> 00:29:03,200
um so far we don't have questions so

00:29:01,600 --> 00:29:04,960
people you know at this point you should

00:29:03,200 --> 00:29:08,799
know how to ask questions

00:29:04,960 --> 00:29:11,600
um the there is a widget in the

00:29:08,799 --> 00:29:13,760
matrix application you need to use the

00:29:11,600 --> 00:29:16,880
web chat at kde.org but

00:29:13,760 --> 00:29:19,360
apart from that if you go in the

00:29:16,880 --> 00:29:19,919
panel in the information of the room you

00:29:19,360 --> 00:29:22,320
will see

00:29:19,919 --> 00:29:23,840
two widgets and there are right now for

00:29:22,320 --> 00:29:24,399
technical reason they are both called

00:29:23,840 --> 00:29:26,559
custom

00:29:24,399 --> 00:29:27,600
one is the video stream the other one is

00:29:26,559 --> 00:29:29,120
the questions

00:29:27,600 --> 00:29:31,520
but the link to the question has been

00:29:29,120 --> 00:29:34,640
shared also in the in the chat room

00:29:31,520 --> 00:29:35,279
and we have a one question so uh from

00:29:34,640 --> 00:29:38,480
david

00:29:35,279 --> 00:29:40,240
uh uh how much code for things like

00:29:38,480 --> 00:29:41,360
input can be done in cooperation with

00:29:40,240 --> 00:29:42,880
other compositors

00:29:41,360 --> 00:29:45,440
what technical problems create

00:29:42,880 --> 00:29:48,480
fragmentation

00:29:45,440 --> 00:29:51,360
um i don't quite follow

00:29:48,480 --> 00:29:51,360
the questions so

00:29:52,480 --> 00:29:57,679
so we share some code with other whale

00:29:55,679 --> 00:30:00,640
and competitors so we have

00:29:57,679 --> 00:30:02,640
a library called lip input so it takes

00:30:00,640 --> 00:30:06,559
care of the most of

00:30:02,640 --> 00:30:10,080
um all the nastiest

00:30:06,559 --> 00:30:13,200
input related stuff so we

00:30:10,080 --> 00:30:16,799
need to implement some wavelength

00:30:13,200 --> 00:30:17,200
specific stuff but i don't think that we

00:30:16,799 --> 00:30:23,840
can

00:30:17,200 --> 00:30:28,080
share that much code there

00:30:23,840 --> 00:30:28,640
okay um no other question for now you

00:30:28,080 --> 00:30:30,320
mentioned

00:30:28,640 --> 00:30:32,080
at least one buff during the

00:30:30,320 --> 00:30:33,279
presentation if i remember correctly do

00:30:32,080 --> 00:30:36,320
you want to

00:30:33,279 --> 00:30:40,159
advertise it more yes yeah so

00:30:36,320 --> 00:30:43,039
i i still need to to

00:30:40,159 --> 00:30:43,679
find a slot for basically we want to

00:30:43,039 --> 00:30:46,880
have a

00:30:43,679 --> 00:30:48,480
buff about effects so basically what we

00:30:46,880 --> 00:30:50,640
need to change about them

00:30:48,480 --> 00:30:52,159
in order to to make them work with a

00:30:50,640 --> 00:30:55,520
scenery design

00:30:52,159 --> 00:30:59,360
um please check build both pages

00:30:55,520 --> 00:31:05,200
so i'll try to to find a

00:30:59,360 --> 00:31:09,519
slot that works for for us

00:31:05,200 --> 00:31:12,559
okay there are really no other questions

00:31:09,519 --> 00:31:13,679
so i guess but you will rejoin again in

00:31:12,559 --> 00:31:16,000
a few minutes

00:31:13,679 --> 00:31:17,679
for the community goal if i remember

00:31:16,000 --> 00:31:20,399
correctly

00:31:17,679 --> 00:31:22,080
so there will be some time for other

00:31:20,399 --> 00:31:25,039
other questions

00:31:22,080 --> 00:31:25,760
okay so thank you again for this a lot

00:31:25,039 --> 00:31:29,120
of work

00:31:25,760 --> 00:31:32,640
going on much appreciated

00:31:29,120 --> 00:31:36,480
so we have a few minutes we will

00:31:32,640 --> 00:31:39,680
start again at the uh now i have to

00:31:36,480 --> 00:31:41,039
not confuse it the the uh

00:31:39,680 --> 00:31:43,760
[Music]

00:31:41,039 --> 00:31:45,120
the time zones so at in about nine

00:31:43,760 --> 00:31:48,240
minutes let's say

00:31:45,120 --> 00:31:50,799
uh the next oh we have another um

00:31:48,240 --> 00:31:51,279
question that just came out so maybe we

00:31:50,799 --> 00:31:53,360
can

00:31:51,279 --> 00:31:55,039
just continue with that so this is a

00:31:53,360 --> 00:31:55,760
repeat question from last year what is

00:31:55,039 --> 00:31:59,840
the status

00:31:55,760 --> 00:32:03,519
of color management in plasma wayland

00:31:59,840 --> 00:32:07,519
we landed some initial support for

00:32:03,519 --> 00:32:10,320
uploading gamma ramps but

00:32:07,519 --> 00:32:10,960
basically if you talk about things such

00:32:10,320 --> 00:32:14,080
as

00:32:10,960 --> 00:32:17,600
hdr so no we want to implement

00:32:14,080 --> 00:32:20,799
it but nobody has put any effort into it

00:32:17,600 --> 00:32:21,679
there is upstream work and i know that

00:32:20,799 --> 00:32:25,440
way of

00:32:21,679 --> 00:32:28,960
western um has some improvements

00:32:25,440 --> 00:32:31,519
but yeah so we plan to to

00:32:28,960 --> 00:32:31,519
to fix it

00:32:32,240 --> 00:32:36,880
um people probably have found the links

00:32:34,720 --> 00:32:40,320
for the questions because they are now

00:32:36,880 --> 00:32:42,640
coming in so recently zingos added some

00:32:40,320 --> 00:32:46,159
good gestures in k-win

00:32:42,640 --> 00:32:50,080
uh should we look into theses

00:32:46,159 --> 00:32:55,039
um what did they add so i didn't hear

00:32:50,080 --> 00:32:55,039
good josh josh tears oh

00:32:57,519 --> 00:33:00,799
the question doesn't say

00:33:01,440 --> 00:33:05,919
just a good gesture so i'm not sure if

00:33:03,600 --> 00:33:05,919
it's about

00:33:09,200 --> 00:33:12,799
well i don't know them so maybe they're

00:33:12,240 --> 00:33:14,880
interesting

00:33:12,799 --> 00:33:17,200
maybe it's just something that others

00:33:14,880 --> 00:33:19,039
can duplicate the configuration on their

00:33:17,200 --> 00:33:25,120
own distro

00:33:19,039 --> 00:33:27,519
i'm not sure

00:33:25,120 --> 00:33:27,519
okay

00:33:27,670 --> 00:33:32,720
[Music]

00:33:29,039 --> 00:33:35,840
let's see nicolo is saying something but

00:33:32,720 --> 00:33:38,240
i guess you can probably

00:33:35,840 --> 00:33:39,120
get that in that next in the next

00:33:38,240 --> 00:33:40,880
session

00:33:39,120 --> 00:33:42,880
there is another question which is

00:33:40,880 --> 00:33:45,440
gaining a lot of support

00:33:42,880 --> 00:33:46,559
you mentioned this uh from david another

00:33:45,440 --> 00:33:48,480
david

00:33:46,559 --> 00:33:50,399
you mentioned the scenery design and the

00:33:48,480 --> 00:33:52,960
k-wing work as the next big

00:33:50,399 --> 00:33:54,640
thing to do what are other big things

00:33:52,960 --> 00:33:58,720
need to happen

00:33:54,640 --> 00:33:58,720
or is it just small bits there and there

00:34:00,000 --> 00:34:07,440
so so right now

00:34:03,279 --> 00:34:11,359
we for the same redesign it's mostly

00:34:07,440 --> 00:34:13,520
in queen um

00:34:11,359 --> 00:34:13,520
so

00:34:14,800 --> 00:34:21,679
after my off top of my head

00:34:18,320 --> 00:34:25,280
i can't really answer this question

00:34:21,679 --> 00:34:25,280
so i need to think about but

00:34:25,919 --> 00:34:29,679
let's see i see a few subjects like

00:34:28,800 --> 00:34:32,879
input methods

00:34:29,679 --> 00:34:36,320
uh currently uh an area where we need to

00:34:32,879 --> 00:34:37,359
still find the consensus with a wider

00:34:36,320 --> 00:34:40,560
community

00:34:37,359 --> 00:34:42,399
uh or sort of we could have a better

00:34:40,560 --> 00:34:44,240
implementation on our own but then it

00:34:42,399 --> 00:34:47,280
would need

00:34:44,240 --> 00:34:50,879
it's so input methods

00:34:47,280 --> 00:34:53,839
you know for chc cgk

00:34:50,879 --> 00:34:54,800
languages in particular and for more

00:34:53,839 --> 00:34:57,520
context

00:34:54,800 --> 00:34:58,560
and here we don't have a very good

00:34:57,520 --> 00:35:01,760
experience currently

00:34:58,560 --> 00:35:05,200
and it will need some standardization

00:35:01,760 --> 00:35:06,160
ideally so so that's an idea for

00:35:05,200 --> 00:35:07,710
instance

00:35:06,160 --> 00:35:09,520
uh we have uh

00:35:07,710 --> 00:35:12,160
[Music]

00:35:09,520 --> 00:35:12,880
a smaller thing is uh output a good

00:35:12,160 --> 00:35:16,000
management

00:35:12,880 --> 00:35:19,440
uh i'm looking into it right now

00:35:16,000 --> 00:35:23,440
and uh and

00:35:19,440 --> 00:35:26,560
big other things on top of my head

00:35:23,440 --> 00:35:28,400
tonkan uh dragon drop issues and x well

00:35:26,560 --> 00:35:31,119
uncompatibility in german

00:35:28,400 --> 00:35:31,440
those are more like smaller things but

00:35:31,119 --> 00:35:33,280
uh

00:35:31,440 --> 00:35:34,560
really spread out and uh different

00:35:33,280 --> 00:35:37,680
angles

00:35:34,560 --> 00:35:41,119
around those footsteps

00:35:37,680 --> 00:35:41,839
let's see uh there is time for another

00:35:41,119 --> 00:35:44,960
question

00:35:41,839 --> 00:35:46,800
what is the state of copy from john john

00:35:44,960 --> 00:35:49,280
what is the state of copy paste between

00:35:46,800 --> 00:35:51,599
x clients and wayland clients especially

00:35:49,280 --> 00:35:54,160
with respect to the clip clipboard

00:35:51,599 --> 00:35:54,160
history

00:35:56,839 --> 00:36:00,240
regarding use

00:36:02,400 --> 00:36:15,280
well i don't know the state here

00:36:12,720 --> 00:36:18,240
it should be working but i think we have

00:36:15,280 --> 00:36:22,240
some issues there

00:36:18,240 --> 00:36:25,280
well uh copy pasting particularly

00:36:22,240 --> 00:36:26,720
but regarding the history specifically i

00:36:25,280 --> 00:36:29,119
don't

00:36:26,720 --> 00:36:30,800
i don't have not have no knowledge

00:36:29,119 --> 00:36:34,079
fortunately maybe that you have

00:36:30,800 --> 00:36:37,520
so as far as i know um

00:36:34,079 --> 00:36:40,560
david was looking into this

00:36:37,520 --> 00:36:43,040
so so he

00:36:40,560 --> 00:36:43,680
probably knows better what about but

00:36:43,040 --> 00:36:47,920
yeah

00:36:43,680 --> 00:36:54,400
the clipboard stuff is a bit painful

00:36:47,920 --> 00:36:56,000
thing on on way on session

00:36:54,400 --> 00:36:57,440
there is some there are some suggestions

00:36:56,000 --> 00:36:59,520
from the chat like

00:36:57,440 --> 00:37:01,119
uh that is saying we know we have some

00:36:59,520 --> 00:37:03,440
issues in some conditions more help

00:37:01,119 --> 00:37:06,640
narrowing this down would be appreciated

00:37:03,440 --> 00:37:07,920
uh and yeah there is another comment

00:37:06,640 --> 00:37:09,119
saying i think the state is it should

00:37:07,920 --> 00:37:12,560
work but it doesn't

00:37:09,119 --> 00:37:12,560
if it doesn't file a box so

00:37:12,880 --> 00:37:16,880
okay community for the app okay i think

00:37:15,839 --> 00:37:18,480
we have just to

00:37:16,880 --> 00:37:20,640
let's leave two minutes there are no

00:37:18,480 --> 00:37:23,760
other questions i think

00:37:20,640 --> 00:37:26,880
let no

00:37:23,760 --> 00:37:29,920
no other another question so um

00:37:26,880 --> 00:37:31,599
so thanks again um the as

00:37:29,920 --> 00:37:33,839
people were suggesting the answer is

00:37:31,599 --> 00:37:37,760
always come to the buff and discuss that

00:37:33,839 --> 00:37:40,560
so there will be more than time for that

00:37:37,760 --> 00:37:41,119
so we are going to take two minutes of

00:37:40,560 --> 00:37:46,000
break

00:37:41,119 --> 00:37:46,000
probably before the next talk thanks

00:37:48,839 --> 00:37:53,359
again

00:37:51,280 --> 00:37:53,359

YouTube URL: https://www.youtube.com/watch?v=IpR2TpZWWc0


