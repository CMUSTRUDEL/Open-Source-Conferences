Title: Akademy 2021 - KIO FUSE A Summary
Publication date: 2021-06-29
Playlist: Akademy 2021
Description: 
	By Alexander Saoutkin
KIO FUSE provides a FUSE compatibility layer to KIO, allowing all applications - not just one linked to the KIO library - to benefit from the network transparent access to files and data that KIO offers.

In this quick talk I'll clear misconceptions on how KIO FUSE works, give an overview of what work has been done and what work is planned in the future.
Captions: 
	00:00:01,130 --> 00:00:08,610
[Music]

00:00:10,960 --> 00:00:13,840
okay thank you

00:00:11,920 --> 00:00:15,679
um so hi everyone this is talking ko

00:00:13,840 --> 00:00:17,119
fuse and um

00:00:15,679 --> 00:00:18,880
it's basically i'm going to describe

00:00:17,119 --> 00:00:21,279
what it is why it should exist

00:00:18,880 --> 00:00:23,119
and what we're playing in the future my

00:00:21,279 --> 00:00:25,119
name is alex i'm one of the developers

00:00:23,119 --> 00:00:27,359
of kofu's

00:00:25,119 --> 00:00:28,160
um i've been developing with it for

00:00:27,359 --> 00:00:31,119
about maybe

00:00:28,160 --> 00:00:32,640
just a bit more than two years now okay

00:00:31,119 --> 00:00:34,719
next slide

00:00:32,640 --> 00:00:36,960
okay so to motivate the reason why it

00:00:34,719 --> 00:00:39,120
should exist i'm just going to

00:00:36,960 --> 00:00:40,559
give you an example so first just

00:00:39,120 --> 00:00:41,360
imagine a user that wants to you know

00:00:40,559 --> 00:00:44,559
view documents

00:00:41,360 --> 00:00:44,960
photos or videos you know on a network

00:00:44,559 --> 00:00:46,719
share

00:00:44,960 --> 00:00:48,239
um they didn't need a password to enter

00:00:46,719 --> 00:00:50,320
it um but

00:00:48,239 --> 00:00:51,520
it's not on the local file system and

00:00:50,320 --> 00:00:53,520
we'll use dolphin

00:00:51,520 --> 00:00:55,440
um just to look at the files there and

00:00:53,520 --> 00:00:58,239
we'll use it to kind of

00:00:55,440 --> 00:00:58,960
open any files that we want so we're

00:00:58,239 --> 00:01:01,280
going to consider

00:00:58,960 --> 00:01:02,719
three specific scenarios the first one

00:01:01,280 --> 00:01:04,479
is we want to open a photo using

00:01:02,719 --> 00:01:06,880
gwenview

00:01:04,479 --> 00:01:08,080
the second one is opening a video using

00:01:06,880 --> 00:01:11,040
vlc

00:01:08,080 --> 00:01:15,840
and the third one is opening a document

00:01:11,040 --> 00:01:15,840
using a libreoffice writer

00:01:16,000 --> 00:01:19,600
so first let's discuss what ko is in the

00:01:18,159 --> 00:01:22,799
first place

00:01:19,600 --> 00:01:26,000
so keo is just

00:01:22,799 --> 00:01:27,920
a framework that allows you to access

00:01:26,000 --> 00:01:30,479
files and data that might not be on the

00:01:27,920 --> 00:01:32,799
local file system

00:01:30,479 --> 00:01:34,159
so for example you can access resources

00:01:32,799 --> 00:01:38,320
over mtp

00:01:34,159 --> 00:01:41,360
smb sftp etc

00:01:38,320 --> 00:01:43,680
and for the developer um

00:01:41,360 --> 00:01:45,119
it's also quite useful because um it

00:01:43,680 --> 00:01:45,920
fits nicely into the signal slot

00:01:45,119 --> 00:01:47,920
mechanism

00:01:45,920 --> 00:01:49,360
and so you know you can send requests to

00:01:47,920 --> 00:01:52,159
network resources

00:01:49,360 --> 00:01:53,600
and that don't block it does this by

00:01:52,159 --> 00:01:55,040
just launching a process to do the hard

00:01:53,600 --> 00:01:57,360
work and then it gets back to you once

00:01:55,040 --> 00:01:59,119
once it's done um and you can see a code

00:01:57,360 --> 00:02:00,399
snippet here of how easy it is to use so

00:01:59,119 --> 00:02:02,880
if you think of using it please do it's

00:02:00,399 --> 00:02:02,880
quite useful

00:02:05,840 --> 00:02:09,840
so let's consider first scenario so

00:02:08,399 --> 00:02:11,280
you've got your stuff open in dolphin

00:02:09,840 --> 00:02:13,440
and you want to open an image and so

00:02:11,280 --> 00:02:16,319
you're going to use it using a gwen view

00:02:13,440 --> 00:02:18,160
so grenville use a kde program and it

00:02:16,319 --> 00:02:20,720
supports kao

00:02:18,160 --> 00:02:21,599
so what would happen so using dolphin

00:02:20,720 --> 00:02:23,040
you might

00:02:21,599 --> 00:02:24,400
select that image and open it either

00:02:23,040 --> 00:02:27,200
with the context menu or it might

00:02:24,400 --> 00:02:28,480
already be our default program

00:02:27,200 --> 00:02:30,720
at this point dolphin will call some

00:02:28,480 --> 00:02:34,080
coding ko which is going to

00:02:30,720 --> 00:02:37,280
decide what url is going to pass

00:02:34,080 --> 00:02:39,360
um so you know it'll be an smb url

00:02:37,280 --> 00:02:41,040
and carrier will read the desktop file

00:02:39,360 --> 00:02:43,120
of gwenview

00:02:41,040 --> 00:02:45,120
and they'll say okay actually it

00:02:43,120 --> 00:02:46,080
greenview claims that it understands ko

00:02:45,120 --> 00:02:48,640
urls

00:02:46,080 --> 00:02:49,440
so okay we'll just pass the url fair

00:02:48,640 --> 00:02:50,879
enough good

00:02:49,440 --> 00:02:53,120
so everything's working as intended

00:02:50,879 --> 00:02:54,800
perfectly

00:02:53,120 --> 00:02:56,720
and so now now granville's going to open

00:02:54,800 --> 00:02:59,519
it it won't block it won't freeze

00:02:56,720 --> 00:03:01,280
it'll open it nice and you'll see your

00:02:59,519 --> 00:03:03,200
image

00:03:01,280 --> 00:03:05,360
okay let's go to the next scenario so

00:03:03,200 --> 00:03:05,840
now you want to review a video with vlc

00:03:05,360 --> 00:03:07,440
i mean

00:03:05,840 --> 00:03:09,200
why would you not use vlc it's amazing

00:03:07,440 --> 00:03:13,200
program small tools called

00:03:09,200 --> 00:03:16,560
codex etc so no surprise that you use it

00:03:13,200 --> 00:03:16,560
but it doesn't support ku

00:03:17,200 --> 00:03:21,280
but it does support the smb protocol

00:03:19,599 --> 00:03:23,280
independently

00:03:21,280 --> 00:03:24,879
so similarly use dolphin you select the

00:03:23,280 --> 00:03:28,000
video to open

00:03:24,879 --> 00:03:28,879
um ko again reads the desktop files and

00:03:28,000 --> 00:03:31,440
it sees that

00:03:28,879 --> 00:03:33,120
vlc doesn't claim to support keo but it

00:03:31,440 --> 00:03:34,720
does claim to support that protocol the

00:03:33,120 --> 00:03:36,319
smb protocol

00:03:34,720 --> 00:03:38,480
so okay fine we'll just pass you the url

00:03:36,319 --> 00:03:40,720
if you claim to know it you know

00:03:38,480 --> 00:03:41,760
but remember the share is password

00:03:40,720 --> 00:03:46,000
protected

00:03:41,760 --> 00:03:47,200
and so maybe when we opened the resource

00:03:46,000 --> 00:03:49,120
in dolphin we already entered that

00:03:47,200 --> 00:03:50,640
password um so that

00:03:49,120 --> 00:03:52,239
kao can remember it and so see was

00:03:50,640 --> 00:03:54,959
stored in k wallet or

00:03:52,239 --> 00:03:55,519
okay password server or both basically

00:03:54,959 --> 00:03:57,680
um

00:03:55,519 --> 00:03:58,640
but vlc has no access to it so when you

00:03:57,680 --> 00:03:59,599
open the video

00:03:58,640 --> 00:04:01,920
you're going to be asked to put in the

00:03:59,599 --> 00:04:03,280
password again

00:04:01,920 --> 00:04:05,200
that might be really cumbersome you

00:04:03,280 --> 00:04:06,560
don't want to do it every time

00:04:05,200 --> 00:04:09,439
well at least the first time it happens

00:04:06,560 --> 00:04:13,360
it's not really that nice so

00:04:09,439 --> 00:04:16,239
not perfect here so cumbersome basically

00:04:13,360 --> 00:04:16,239
we want to avoid this

00:04:16,479 --> 00:04:20,479
now the next is you want to view

00:04:17,600 --> 00:04:23,520
document and libreoffice writer

00:04:20,479 --> 00:04:25,520
and again the most popular document

00:04:23,520 --> 00:04:27,840
viewer for linux

00:04:25,520 --> 00:04:29,280
but it doesn't support neither kio or

00:04:27,840 --> 00:04:31,440
the smb protocol

00:04:29,280 --> 00:04:33,120
so again you go to open it kao has some

00:04:31,440 --> 00:04:33,840
code it's looking at your the desktop

00:04:33,120 --> 00:04:35,680
files

00:04:33,840 --> 00:04:37,680
and understands it has no clue how to

00:04:35,680 --> 00:04:38,800
open an smb euro

00:04:37,680 --> 00:04:41,759
well at this point it's not really a

00:04:38,800 --> 00:04:42,160
good idea to send it the sv url it will

00:04:41,759 --> 00:04:45,199
film

00:04:42,160 --> 00:04:47,280
spectacularly so now

00:04:45,199 --> 00:04:50,240
k has kind of like a stop back stop gap

00:04:47,280 --> 00:04:52,160
solution called ko exec

00:04:50,240 --> 00:04:53,520
so it will be used to download the file

00:04:52,160 --> 00:04:54,560
on the local file system

00:04:53,520 --> 00:04:56,560
so it's going to download the whole

00:04:54,560 --> 00:04:59,360
document on local file system

00:04:56,560 --> 00:05:00,880
once that's completed care when passed

00:04:59,360 --> 00:05:04,479
the url to that

00:05:00,880 --> 00:05:06,639
new local file to libreoffice writer

00:05:04,479 --> 00:05:07,840
and so well obviously libreoffice writer

00:05:06,639 --> 00:05:09,039
knows how to open the file on the local

00:05:07,840 --> 00:05:11,440
file system so we're good to go from

00:05:09,039 --> 00:05:14,720
that point of view

00:05:11,440 --> 00:05:16,560
but this isn't perfect because

00:05:14,720 --> 00:05:18,479
well if i save a file on local fast

00:05:16,560 --> 00:05:19,440
system how does it get to the actual

00:05:18,479 --> 00:05:21,600
network share

00:05:19,440 --> 00:05:22,720
well okay actually monitor the changes

00:05:21,600 --> 00:05:26,160
to the file

00:05:22,720 --> 00:05:28,639
and then has to upload them

00:05:26,160 --> 00:05:29,360
okay so i mean is that all the solution

00:05:28,639 --> 00:05:30,320
well first

00:05:29,360 --> 00:05:32,160
you have to wait for the whole download

00:05:30,320 --> 00:05:33,360
to finish which okay fred document might

00:05:32,160 --> 00:05:36,720
be okay

00:05:33,360 --> 00:05:37,919
but for a video

00:05:36,720 --> 00:05:39,919
is that really satisfactory are you

00:05:37,919 --> 00:05:41,520
going to wait for a whole movie that's

00:05:39,919 --> 00:05:43,199
gigabytes in size to download before you

00:05:41,520 --> 00:05:44,720
even view it maybe you don't watch it

00:05:43,199 --> 00:05:46,240
maybe you want to watch the credits for

00:05:44,720 --> 00:05:49,520
example

00:05:46,240 --> 00:05:49,919
so not good for large files um krx has

00:05:49,520 --> 00:05:52,479
some

00:05:49,919 --> 00:05:54,080
still long-standing bugs so every time

00:05:52,479 --> 00:05:56,240
you save the file you then asked

00:05:54,080 --> 00:05:58,880
again if you want to re-upload it which

00:05:56,240 --> 00:06:00,479
is a bit confusing for a user

00:05:58,880 --> 00:06:03,130
and there are more subtle bugs which you

00:06:00,479 --> 00:06:05,120
can see on this uh bug id

00:06:03,130 --> 00:06:07,120
[Music]

00:06:05,120 --> 00:06:09,199
so it's not a perfect solution by any

00:06:07,120 --> 00:06:11,759
means

00:06:09,199 --> 00:06:12,720
so if we switch from k1 to secret

00:06:11,759 --> 00:06:14,319
service api

00:06:12,720 --> 00:06:15,919
and assuming all the other applications

00:06:14,319 --> 00:06:17,520
use a secret service api

00:06:15,919 --> 00:06:20,319
then maybe the password problem would be

00:06:17,520 --> 00:06:22,479
too bad but we're not there yet

00:06:20,319 --> 00:06:23,520
although there is progress to get there

00:06:22,479 --> 00:06:27,199
um but again

00:06:23,520 --> 00:06:28,720
sometimes maybe you only want to um

00:06:27,199 --> 00:06:30,880
use the password for a session you don't

00:06:28,720 --> 00:06:32,000
save it permanently in secret service or

00:06:30,880 --> 00:06:33,759
k wallet

00:06:32,000 --> 00:06:35,840
so that's what k password server does

00:06:33,759 --> 00:06:38,400
quite well so again you still kind of

00:06:35,840 --> 00:06:38,400
have the problem

00:06:39,360 --> 00:06:43,600
okay well what's fuse um why is this how

00:06:42,560 --> 00:06:46,400
would this help us

00:06:43,600 --> 00:06:48,319
so it feels like it is a kernel module

00:06:46,400 --> 00:06:49,360
which allows you to make user space file

00:06:48,319 --> 00:06:51,039
systems

00:06:49,360 --> 00:06:52,639
um so you can see an example here so

00:06:51,039 --> 00:06:54,160
let's say that the orange applicator or

00:06:52,639 --> 00:06:56,400
the yellow application here

00:06:54,160 --> 00:06:59,280
is libreoffice writer and green is what

00:06:56,400 --> 00:07:02,319
is now i'm going to call kao fuse

00:06:59,280 --> 00:07:02,560
then what happens is the application if

00:07:02,319 --> 00:07:04,000
it's

00:07:02,560 --> 00:07:06,000
interacting with the k refuse file

00:07:04,000 --> 00:07:07,680
system um

00:07:06,000 --> 00:07:09,199
it's going to go to the virtual the via

00:07:07,680 --> 00:07:10,160
the kernel vfs and the kind of vfs

00:07:09,199 --> 00:07:12,000
decides which

00:07:10,160 --> 00:07:13,680
file system is going to deal with it in

00:07:12,000 --> 00:07:15,039
this case it's fuse

00:07:13,680 --> 00:07:17,680
and so the fuse kernel module is going

00:07:15,039 --> 00:07:20,800
to figure out where which application

00:07:17,680 --> 00:07:22,080
is going to answer these requests so the

00:07:20,800 --> 00:07:24,479
blue is the um

00:07:22,080 --> 00:07:27,039
client and the green is the server and

00:07:24,479 --> 00:07:28,560
so kf uses the server

00:07:27,039 --> 00:07:30,400
and it receives requests from the fuse

00:07:28,560 --> 00:07:31,360
driver which is talking on behalf of the

00:07:30,400 --> 00:07:34,960
application

00:07:31,360 --> 00:07:37,520
and it simply got to um reply to those

00:07:34,960 --> 00:07:37,520
requests

00:07:37,680 --> 00:07:41,440
so what is ka views itself so it is that

00:07:40,240 --> 00:07:42,400
green application we're talking about

00:07:41,440 --> 00:07:44,560
earlier

00:07:42,400 --> 00:07:46,639
and basically it allows care resources

00:07:44,560 --> 00:07:49,039
to be accessible to all applications

00:07:46,639 --> 00:07:50,720
so basically what happens is that simply

00:07:49,039 --> 00:07:53,120
kf uses a mapping

00:07:50,720 --> 00:07:54,000
between what fuse requests are and care

00:07:53,120 --> 00:07:56,400
your requests

00:07:54,000 --> 00:07:57,680
so for example an open request followed

00:07:56,400 --> 00:08:00,000
by some read requests

00:07:57,680 --> 00:08:01,039
and close is equivalent to the snippet i

00:08:00,000 --> 00:08:04,560
showed you earlier

00:08:01,039 --> 00:08:04,560
of ko get for example

00:08:05,360 --> 00:08:08,800
and kfu simply manages that mapping and

00:08:07,120 --> 00:08:09,840
tries to keep it as seamless as possible

00:08:08,800 --> 00:08:11,599
for you

00:08:09,840 --> 00:08:13,199
and to communicate with a demon so to

00:08:11,599 --> 00:08:16,080
mount a resource

00:08:13,199 --> 00:08:17,520
um you can simply use a dbos request as

00:08:16,080 --> 00:08:18,800
can be seen here messages

00:08:17,520 --> 00:08:20,879
you can use it on batch for example if

00:08:18,800 --> 00:08:22,800
you want in your terminal in your

00:08:20,879 --> 00:08:25,120
terminal

00:08:22,800 --> 00:08:27,199
um ka also has some changes to so for

00:08:25,120 --> 00:08:29,520
you to seamlessly use kfuse

00:08:27,199 --> 00:08:31,919
um ku also makes some changes which i'll

00:08:29,520 --> 00:08:35,599
go into in a moment

00:08:31,919 --> 00:08:36,719
so again consider the three scenarios um

00:08:35,599 --> 00:08:38,159
i'm going to assume that we have these

00:08:36,719 --> 00:08:38,959
prerequisites which i'm going to skip

00:08:38,159 --> 00:08:41,360
over but

00:08:38,959 --> 00:08:42,080
i basically already discussed them um

00:08:41,360 --> 00:08:45,120
but here's the

00:08:42,080 --> 00:08:46,720
important three bullet points so the kda

00:08:45,120 --> 00:08:49,200
has a patch which should determine

00:08:46,720 --> 00:08:50,959
if we should pause carry your url or

00:08:49,200 --> 00:08:54,160
okay a fuse euro

00:08:50,959 --> 00:08:56,560
so if the application unsounds pass the

00:08:54,160 --> 00:08:58,399
url as is that's the ideal

00:08:56,560 --> 00:08:59,839
if it does understand protocol but it

00:08:58,399 --> 00:09:01,600
doesn't contain the user so if the euro

00:08:59,839 --> 00:09:04,080
doesn't contain the user we're going to

00:09:01,600 --> 00:09:05,519
assume that it's not related to a user

00:09:04,080 --> 00:09:06,959
so there isn't there is no there is no

00:09:05,519 --> 00:09:08,640
chance for that to be a password that

00:09:06,959 --> 00:09:10,399
will block us well if that's the case

00:09:08,640 --> 00:09:12,399
then we'll just pass the rises

00:09:10,399 --> 00:09:13,920
if there is a user then there's probably

00:09:12,399 --> 00:09:14,480
a password and so we're going to just

00:09:13,920 --> 00:09:16,880
pass the key

00:09:14,480 --> 00:09:18,320
if you zero because kao fuse can talk to

00:09:16,880 --> 00:09:19,680
a k password server

00:09:18,320 --> 00:09:21,920
and so we don't have the password

00:09:19,680 --> 00:09:23,519
problem anymore so i'm going to quickly

00:09:21,920 --> 00:09:26,240
go through here

00:09:23,519 --> 00:09:27,680
the scenario just play out like this use

00:09:26,240 --> 00:09:28,880
dolphin select an image to view with

00:09:27,680 --> 00:09:30,800
green view

00:09:28,880 --> 00:09:32,560
um and you know it should work perfectly

00:09:30,800 --> 00:09:33,680
because ko knows that it understands the

00:09:32,560 --> 00:09:36,720
url so nothing's changed

00:09:33,680 --> 00:09:38,959
good vlc

00:09:36,720 --> 00:09:40,320
it doesn't understand ku but we know

00:09:38,959 --> 00:09:41,839
that the

00:09:40,320 --> 00:09:43,839
the share is passive protected so we're

00:09:41,839 --> 00:09:46,160
still going to pass the ka few zero

00:09:43,839 --> 00:09:48,000
we've avoided the password problem and

00:09:46,160 --> 00:09:49,760
with libreoffice writer

00:09:48,000 --> 00:09:51,120
um it doesn't understand anything and so

00:09:49,760 --> 00:09:54,240
this is a perfect candidate for

00:09:51,120 --> 00:09:54,240
a ko fuse url

00:09:54,320 --> 00:09:58,160
so why is this any better well for a

00:09:56,560 --> 00:09:58,720
start from for many protocols but not

00:09:58,160 --> 00:10:00,080
all

00:09:58,720 --> 00:10:01,440
and it's better for large files we can

00:10:00,080 --> 00:10:02,839
do random access if we need to so you

00:10:01,440 --> 00:10:05,440
can view video

00:10:02,839 --> 00:10:07,040
nicely um again we skip over the

00:10:05,440 --> 00:10:08,959
password problem as discussed

00:10:07,040 --> 00:10:10,320
and avoid the other pitfalls of ko xxx

00:10:08,959 --> 00:10:11,279
you don't have to ask for reconfirmation

00:10:10,320 --> 00:10:13,760
of uploading

00:10:11,279 --> 00:10:15,680
we manage in the background um when to

00:10:13,760 --> 00:10:17,040
re-upload the file

00:10:15,680 --> 00:10:18,399
there's also a cool feature where you

00:10:17,040 --> 00:10:19,200
can try it now probably if you have kf's

00:10:18,399 --> 00:10:21,600
installed

00:10:19,200 --> 00:10:22,880
open dolphin open a terminal go to

00:10:21,600 --> 00:10:24,320
external resource

00:10:22,880 --> 00:10:26,320
and the terminal will actually

00:10:24,320 --> 00:10:27,200
seamlessly go to the local mounted

00:10:26,320 --> 00:10:29,519
location

00:10:27,200 --> 00:10:30,320
so that's quite cool there's still some

00:10:29,519 --> 00:10:31,760
things here

00:10:30,320 --> 00:10:33,600
you can go to extra trackers or you can

00:10:31,760 --> 00:10:34,720
think about them yourself but there's

00:10:33,600 --> 00:10:36,720
some things that we need to

00:10:34,720 --> 00:10:39,519
still improve but now it's definitely a

00:10:36,720 --> 00:10:39,519
workable solution

00:10:39,600 --> 00:10:43,200
uh future in work um so should we pull

00:10:41,920 --> 00:10:45,040
it to other platforms

00:10:43,200 --> 00:10:46,480
hopefully but the main thing that we're

00:10:45,040 --> 00:10:48,399
interested in is xfs and test

00:10:46,480 --> 00:10:50,399
integration this is a huge test suite

00:10:48,399 --> 00:10:51,839
that is used by most file systems

00:10:50,399 --> 00:10:53,680
um and we believe it will allow better

00:10:51,839 --> 00:10:56,720
testing of kafu's and more

00:10:53,680 --> 00:11:00,560
and even better allows testing of keo

00:10:56,720 --> 00:11:02,880
um slaves so

00:11:00,560 --> 00:11:04,800
if you look at the uh test directory for

00:11:02,880 --> 00:11:06,800
ko extras it's quite empty

00:11:04,800 --> 00:11:08,640
and hopefully with xfs test integration

00:11:06,800 --> 00:11:10,480
this will be coming into light uh

00:11:08,640 --> 00:11:12,240
so boomer tatar is working on that for

00:11:10,480 --> 00:11:14,959
google server code 2021

00:11:12,240 --> 00:11:16,000
so please keep your eyes peeled um i've

00:11:14,959 --> 00:11:17,839
got a bit fast there but

00:11:16,000 --> 00:11:19,279
i think i've just fitted it in so thank

00:11:17,839 --> 00:11:22,000
you all for listening

00:11:19,279 --> 00:11:22,800
any questions please come by the kde fm

00:11:22,000 --> 00:11:25,040
channel

00:11:22,800 --> 00:11:26,839
uh we'll be glad to answer or just email

00:11:25,040 --> 00:11:29,839
me

00:11:26,839 --> 00:11:29,839

YouTube URL: https://www.youtube.com/watch?v=Ni4mZqbdc2k


