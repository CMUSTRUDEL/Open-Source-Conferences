Title: Akademy 2021 - Staying Indoors - OSM indoor maps for KDE Itinerary
Publication date: 2021-06-28
Playlist: Akademy 2021
Description: 
	By Volker Krause
Outdoor maps as found on any mobile phone nowadays aren't really useful for finding your way in large buildings such as major train stations or airports, as those maps don't represent vertical layers very well. How do we get indoor maps for those cases onto Plasma Mobile and into our apps?
Finding your way through a complex multi-floor building you are not familiar with can be challenging, even more so when you have heavy luggage or a stroller with you, or are relying on a wheelchair, which can turn even a few stairs into a hard to overcome obstacle. Naturally you'd want your mobile phone to help you navigate, in the same way it does outdoors.
In this talk we'll look at the OpenStreetMap (OSM) based indoor mapping library which has been developed for KDE's digital travel assistant Itinerary. While having a special focus on train stations and airports, it works equally well for any other building with the necessary indoor mapping data available in OSM, such as for example university buildings[*], museums or shopping malls.
We will see how its use of a declarative client-side renderer based on MapCSS allows to customize the map display to app-specific use cases and deal with the increasing level of detail in OSM. The use of Marble's vector tile server on the other side allows efficient access to current OSM data.
Besides showing a static OSM map, live data from other sources can be integrated as well. A particular important example are the realtime status information of elevators and escalators. Knowing beforehand whether one of those is out of order is convenient in any case, but for wheelchair users can be absolutely crucial.
Finally, we will look at the challenges around indoor localization and routing. Outdoors we can often rely on multiple GNSS systems, indoors reception of those is typically very poor if available at all, while we at the same time have a higher demands on correct vertical positioning.

[*] Not the Akademy 2019 one though, this is all limited to Euclidean space.
Captions: 
	00:00:01,140 --> 00:00:08,620
[Music]

00:00:11,519 --> 00:00:16,080
and that one minute is up

00:00:13,519 --> 00:00:17,279
i would like to introduce tier stage one

00:00:16,080 --> 00:00:20,560
of the cadillac

00:00:17,279 --> 00:00:23,039
developers that i look up to he's a guy

00:00:20,560 --> 00:00:24,560
i had the pleasure of giving an award to

00:00:23,039 --> 00:00:26,480
last real academy

00:00:24,560 --> 00:00:28,560
and as you can see volker has decided to

00:00:26,480 --> 00:00:31,359
not display it anywhere

00:00:28,560 --> 00:00:33,679
um in his room as a way of being proud

00:00:31,359 --> 00:00:33,679
of it

00:00:33,760 --> 00:00:37,200
so volker would you like to unmute

00:00:36,239 --> 00:00:40,800
yourself as an

00:00:37,200 --> 00:00:40,800
official introduction

00:00:41,920 --> 00:00:49,840
okay thank you david um

00:00:45,440 --> 00:00:54,719
yeah hello everyone um three years ago

00:00:49,840 --> 00:00:58,480
at academy i showed you um kdi itinerary

00:00:54,719 --> 00:01:01,600
uh our digital travel assistance app

00:00:58,480 --> 00:01:03,359
last year i i talked about how we can

00:01:01,600 --> 00:01:05,920
use

00:01:03,359 --> 00:01:07,360
wiki data and openstreetmap in in our

00:01:05,920 --> 00:01:09,840
applications

00:01:07,360 --> 00:01:11,520
uh and this time we are putting those

00:01:09,840 --> 00:01:14,320
two things together

00:01:11,520 --> 00:01:16,960
and going to look at indoor maps in kde

00:01:14,320 --> 00:01:16,960
itinerary

00:01:19,040 --> 00:01:24,000
and that is the the problem we are

00:01:21,600 --> 00:01:26,560
dealing with specifically

00:01:24,000 --> 00:01:29,040
if you're looking on normal maps at

00:01:26,560 --> 00:01:31,759
complex buildings

00:01:29,040 --> 00:01:34,640
like in this example this is berlin

00:01:31,759 --> 00:01:38,960
central station

00:01:34,640 --> 00:01:40,880
that consists of five relevant floors

00:01:38,960 --> 00:01:44,159
two of them have railroad tracks one of

00:01:40,880 --> 00:01:47,040
them has bus stops and then tram

00:01:44,159 --> 00:01:48,000
lines and three of them have shops and

00:01:47,040 --> 00:01:49,680
stuff right

00:01:48,000 --> 00:01:52,840
but if you look at that it's all meshed

00:01:49,680 --> 00:01:56,960
together you you don't see any of that

00:01:52,840 --> 00:01:58,799
um but still that building is large

00:01:56,960 --> 00:02:01,040
enough and complex enough

00:01:58,799 --> 00:02:03,680
that you would want a map to to find

00:02:01,040 --> 00:02:06,799
your way around

00:02:03,680 --> 00:02:08,879
um so

00:02:06,799 --> 00:02:11,119
we need something something better than

00:02:08,879 --> 00:02:11,119
that

00:02:12,080 --> 00:02:18,000
um and i mean

00:02:16,000 --> 00:02:19,599
conceptually that that is fairly easy

00:02:18,000 --> 00:02:21,680
right we just split this

00:02:19,599 --> 00:02:24,879
in into different floor levels and

00:02:21,680 --> 00:02:27,280
display them separately

00:02:24,879 --> 00:02:29,520
and that would already get us like 90

00:02:27,280 --> 00:02:29,520
there

00:02:29,840 --> 00:02:33,120
and we have another important aspect to

00:02:32,239 --> 00:02:35,680
look at

00:02:33,120 --> 00:02:38,080
and that is how you change between

00:02:35,680 --> 00:02:38,080
floors

00:02:38,560 --> 00:02:44,400
that might sound simple at first but if

00:02:42,800 --> 00:02:48,480
you think about

00:02:44,400 --> 00:02:50,800
traveling with heavy luggage or

00:02:48,480 --> 00:02:52,319
a stroller or with an injury or in a

00:02:50,800 --> 00:02:54,800
wheelchair

00:02:52,319 --> 00:02:55,760
um some of the usual ways to change

00:02:54,800 --> 00:02:59,200
floors like

00:02:55,760 --> 00:03:01,680
stairs are possibly an obstacle

00:02:59,200 --> 00:03:03,519
that is rather hard to overcome right so

00:03:01,680 --> 00:03:06,080
you want to

00:03:03,519 --> 00:03:06,879
know exactly what you're going to face

00:03:06,080 --> 00:03:10,000
in a

00:03:06,879 --> 00:03:14,800
large and complex building

00:03:10,000 --> 00:03:18,239
um unlike with regular auto maps

00:03:14,800 --> 00:03:19,599
unfortunately this isn't something that

00:03:18,239 --> 00:03:22,239
you can just

00:03:19,599 --> 00:03:24,799
find as a ready-to-use component and

00:03:22,239 --> 00:03:28,239
integrate in your application

00:03:24,799 --> 00:03:33,599
um so we have to do the usual thing

00:03:28,239 --> 00:03:36,480
in that case um build it ourselves

00:03:33,599 --> 00:03:37,680
um so let's get started the first thing

00:03:36,480 --> 00:03:41,040
we need

00:03:37,680 --> 00:03:41,040
is obviously the data

00:03:41,280 --> 00:03:47,840
and openstreetmap is the the obvious

00:03:43,920 --> 00:03:52,159
source for that luckily their data model

00:03:47,840 --> 00:03:55,439
already considers the

00:03:52,159 --> 00:04:00,000
indoor scenario

00:03:55,439 --> 00:04:04,560
and that is mainly done in two two forms

00:04:00,000 --> 00:04:04,560
there is the level tag that allows us to

00:04:04,720 --> 00:04:10,560
associate each element in an open street

00:04:07,599 --> 00:04:10,560
map with a floor level

00:04:10,720 --> 00:04:15,040
and that is a fairly simple thing to to

00:04:13,599 --> 00:04:16,880
do in all them

00:04:15,040 --> 00:04:18,560
and then there's the much more complex

00:04:16,880 --> 00:04:21,840
set of indoor tags

00:04:18,560 --> 00:04:24,880
um which allows to model

00:04:21,840 --> 00:04:29,199
like room level details walls

00:04:24,880 --> 00:04:32,080
doors pillars

00:04:29,199 --> 00:04:34,000
whatever you might find there that is a

00:04:32,080 --> 00:04:37,919
lot harder to

00:04:34,000 --> 00:04:41,120
to edit um

00:04:37,919 --> 00:04:44,000
if we then look at what we find in

00:04:41,120 --> 00:04:47,759
practice in the osm data

00:04:44,000 --> 00:04:50,639
we notice that the indoor

00:04:47,759 --> 00:04:52,720
data doesn't have the same global high

00:04:50,639 --> 00:04:56,160
quality coverage that for example

00:04:52,720 --> 00:04:57,360
the street data has um we'll mainly find

00:04:56,160 --> 00:05:00,800
that in

00:04:57,360 --> 00:05:00,800
a number of showcase buildings

00:05:01,280 --> 00:05:04,400
and fortunately for us in a number of

00:05:03,759 --> 00:05:10,080
countries

00:05:04,400 --> 00:05:12,639
in a large amount of train stations

00:05:10,080 --> 00:05:14,960
so specifically in france germany

00:05:12,639 --> 00:05:17,199
austria and switzerland

00:05:14,960 --> 00:05:20,400
even smaller train stations have a

00:05:17,199 --> 00:05:20,400
sufficient level of detail

00:05:21,840 --> 00:05:25,039
airports unfortunately they are with a

00:05:24,080 --> 00:05:27,919
few exceptions

00:05:25,039 --> 00:05:28,960
uh done rather poorly on that so far at

00:05:27,919 --> 00:05:32,160
least

00:05:28,960 --> 00:05:35,919
um but the train stations is at least

00:05:32,160 --> 00:05:36,720
uh covering one of our major use cases

00:05:35,919 --> 00:05:41,600
itinerary

00:05:36,720 --> 00:05:41,600
so that's good enough to get started

00:05:43,360 --> 00:05:46,400
the next step is we need to separate

00:05:45,440 --> 00:05:49,840
that data

00:05:46,400 --> 00:05:53,039
by by floor levels

00:05:49,840 --> 00:05:55,280
that's easy for elements that just exist

00:05:53,039 --> 00:05:57,199
on a single floor

00:05:55,280 --> 00:05:58,960
but then we also have to consider things

00:05:57,199 --> 00:06:03,759
that connect floors

00:05:58,960 --> 00:06:03,759
like stairs and escalators

00:06:04,160 --> 00:06:07,680
and that is unfortunately the the level

00:06:06,720 --> 00:06:10,960
of low level

00:06:07,680 --> 00:06:14,240
separation where most of the existing

00:06:10,960 --> 00:06:15,840
um proof of concept indoor things based

00:06:14,240 --> 00:06:20,479
on top of ocean

00:06:15,840 --> 00:06:23,680
uh stop or that doesn't produce

00:06:20,479 --> 00:06:26,479
what you would expect as a as a user

00:06:23,680 --> 00:06:28,639
so we have to look at a number of um

00:06:26,479 --> 00:06:31,759
additional things then

00:06:28,639 --> 00:06:35,680
um one

00:06:31,759 --> 00:06:38,560
such problem for example are

00:06:35,680 --> 00:06:40,479
stairs that have in the middle one or

00:06:38,560 --> 00:06:43,840
two smaller platforms

00:06:40,479 --> 00:06:48,240
those does get assigned

00:06:43,840 --> 00:06:50,160
like floor 0.5 or 0.3

00:06:48,240 --> 00:06:53,199
uh but that isn't something you want to

00:06:50,160 --> 00:06:55,759
see in the map right the

00:06:53,199 --> 00:06:57,919
some pseudo floors only containing tiny

00:06:55,759 --> 00:07:02,080
platforms that is completely useless

00:06:57,919 --> 00:07:03,199
so we need to allocate that to the to

00:07:02,080 --> 00:07:05,840
the

00:07:03,199 --> 00:07:08,000
floor the actual floor besides those and

00:07:05,840 --> 00:07:10,080
stack them in the right order

00:07:08,000 --> 00:07:12,800
um we have to deal with elevators that

00:07:10,080 --> 00:07:17,280
cross a large number of floors

00:07:12,800 --> 00:07:19,520
um we have to to collect uh

00:07:17,280 --> 00:07:20,800
some some information from other sources

00:07:19,520 --> 00:07:23,919
in in osama uh

00:07:20,800 --> 00:07:27,440
for example to have to be building hull

00:07:23,919 --> 00:07:30,960
model correctly um

00:07:27,440 --> 00:07:30,960
but that still doesn't

00:07:31,520 --> 00:07:35,520
solve all the problems if you remember

00:07:34,720 --> 00:07:37,199
the

00:07:35,520 --> 00:07:39,280
berlin central station example from the

00:07:37,199 --> 00:07:41,199
beginning that has

00:07:39,280 --> 00:07:42,800
five floors that matter to us and then

00:07:41,199 --> 00:07:43,199
there's a bunch of office floors on the

00:07:42,800 --> 00:07:45,919
top

00:07:43,199 --> 00:07:47,360
that aren't accessible to normal

00:07:45,919 --> 00:07:48,879
travelers so they are completely

00:07:47,360 --> 00:07:50,720
pointless

00:07:48,879 --> 00:07:52,080
um immediately next to that station

00:07:50,720 --> 00:07:53,199
there's a number of high-rise buildings

00:07:52,080 --> 00:07:54,800
that contribute

00:07:53,199 --> 00:07:56,720
a number of extra floors we also don't

00:07:54,800 --> 00:07:59,919
care about those

00:07:56,720 --> 00:08:02,240
and underneath you might find service

00:07:59,919 --> 00:08:02,960
tunnels or water canals and stuff like

00:08:02,240 --> 00:08:06,960
that so

00:08:02,960 --> 00:08:08,879
all of that we need to filter out

00:08:06,960 --> 00:08:10,960
so we end up with a with a number of

00:08:08,879 --> 00:08:13,840
rules and heuristics to

00:08:10,960 --> 00:08:13,840
to actually get to the

00:08:14,000 --> 00:08:17,599
low level separation that we want

00:08:19,840 --> 00:08:26,960
that's an example of incomplete data

00:08:23,520 --> 00:08:28,160
this is the main railway station in

00:08:26,960 --> 00:08:30,080
brussels

00:08:28,160 --> 00:08:32,159
and you might look at that and consider

00:08:30,080 --> 00:08:34,719
it completely useless

00:08:32,159 --> 00:08:36,880
you rather should look at that as an osm

00:08:34,719 --> 00:08:40,880
contribution opportunity

00:08:36,880 --> 00:08:44,159
because fixing that is surprisingly easy

00:08:40,880 --> 00:08:47,680
just need a few small additions with

00:08:44,159 --> 00:08:48,080
resetting the level tags to turn this

00:08:47,680 --> 00:08:51,360
form

00:08:48,080 --> 00:08:54,880
useless to something that that we can

00:08:51,360 --> 00:08:56,320
actually work with um adding extra text

00:08:54,880 --> 00:09:00,000
to existing elements in

00:08:56,320 --> 00:09:00,959
you know them is as easy as it gets in

00:09:00,000 --> 00:09:03,120
terms of all them

00:09:00,959 --> 00:09:05,760
editing right you don't need to measure

00:09:03,120 --> 00:09:09,279
anything or create any new geometry

00:09:05,760 --> 00:09:13,040
um that makes it uh

00:09:09,279 --> 00:09:15,360
hopefully fairly quick to

00:09:13,040 --> 00:09:18,480
to improve the data quality in the in

00:09:15,360 --> 00:09:18,480
the places where we need it

00:09:19,040 --> 00:09:25,600
um so now that we have covered the

00:09:22,560 --> 00:09:28,640
data aspect uh we need to get things on

00:09:25,600 --> 00:09:30,610
onto the screen um

00:09:28,640 --> 00:09:31,760
in terms of

00:09:30,610 --> 00:09:34,240
[Music]

00:09:31,760 --> 00:09:35,920
geometry primitives this is actually

00:09:34,240 --> 00:09:39,920
fairly simple

00:09:35,920 --> 00:09:43,360
we only have icons labels

00:09:39,920 --> 00:09:46,480
lines and polygons to consider

00:09:43,360 --> 00:09:50,240
right so your painter can handle that

00:09:46,480 --> 00:09:53,200
out of the box label placement

00:09:50,240 --> 00:09:53,680
is another interesting thing to look at

00:09:53,200 --> 00:09:56,240
that

00:09:53,680 --> 00:09:58,080
requires remembering um quite some

00:09:56,240 --> 00:10:00,880
geometry math

00:09:58,080 --> 00:10:02,959
um but that is a problem that also all

00:10:00,880 --> 00:10:05,680
the outdoor map implementations have so

00:10:02,959 --> 00:10:07,680
we can just borrow it from there

00:10:05,680 --> 00:10:09,920
and there's there's some fun to be had

00:10:07,680 --> 00:10:12,959
with um

00:10:09,920 --> 00:10:13,680
uh numeric stability um as we are

00:10:12,959 --> 00:10:16,079
working with

00:10:13,680 --> 00:10:17,839
like centimeter resolution on a global

00:10:16,079 --> 00:10:21,519
scale so it's

00:10:17,839 --> 00:10:25,120
very easy to run out of the outer space

00:10:21,519 --> 00:10:27,680
in mobile data types there

00:10:25,120 --> 00:10:29,839
but the real complexity of the rendering

00:10:27,680 --> 00:10:30,480
is in the hundreds of rules that

00:10:29,839 --> 00:10:34,640
describe

00:10:30,480 --> 00:10:37,760
how specific things should look like

00:10:34,640 --> 00:10:41,120
in terms of fill and stroke patterns

00:10:37,760 --> 00:10:44,800
in terms of stacking order

00:10:41,120 --> 00:10:46,079
and in terms of level of detail

00:10:44,800 --> 00:10:48,560
information so at which

00:10:46,079 --> 00:10:50,800
zoom level you want to to see them or

00:10:48,560 --> 00:10:54,000
hide them

00:10:50,800 --> 00:10:58,640
doing that encode is possible but

00:10:54,000 --> 00:10:58,640
rather annoying it's

00:10:59,040 --> 00:11:03,279
fortunately better alternatives that

00:11:01,519 --> 00:11:04,399
allow us to specify this in a in a

00:11:03,279 --> 00:11:07,920
declarative way

00:11:04,399 --> 00:11:11,680
um one such uh

00:11:07,920 --> 00:11:14,079
thing is uh map css inspired by

00:11:11,680 --> 00:11:15,279
um css cascading style sheets from the

00:11:14,079 --> 00:11:18,800
web

00:11:15,279 --> 00:11:21,279
um and just unlike

00:11:18,800 --> 00:11:22,800
there where we match against html dom

00:11:21,279 --> 00:11:27,120
nodes here we match against

00:11:22,800 --> 00:11:30,640
ht against osm elements

00:11:27,120 --> 00:11:34,240
in this example we are looking for

00:11:30,640 --> 00:11:35,440
railway tracks and then as you know from

00:11:34,240 --> 00:11:39,920
css right we can

00:11:35,440 --> 00:11:42,959
specify a number of attributes that

00:11:39,920 --> 00:11:43,279
define the virtual appearance like all

00:11:42,959 --> 00:11:46,399
the

00:11:43,279 --> 00:11:49,440
the stroke and fill and outline things

00:11:46,399 --> 00:11:49,440
you might expect there

00:11:50,800 --> 00:11:54,639
one interesting thing is how we can

00:11:52,399 --> 00:11:55,200
specify sizes there so this can be done

00:11:54,639 --> 00:11:58,240
in

00:11:55,200 --> 00:12:00,399
like screen pixels which means

00:11:58,240 --> 00:12:02,079
it's a fixed size independent of the

00:12:00,399 --> 00:12:05,519
zoom level

00:12:02,079 --> 00:12:07,519
or it can be in in physical dimensions

00:12:05,519 --> 00:12:08,480
and that then means physical dimensions

00:12:07,519 --> 00:12:11,760
in the real world

00:12:08,480 --> 00:12:16,480
it's a railway track in central europe

00:12:11,760 --> 00:12:20,079
would usually be 1.435 meters wide

00:12:16,480 --> 00:12:23,920
and then it keeps that that width

00:12:20,079 --> 00:12:25,120
independent of the zoom level um or as

00:12:23,920 --> 00:12:28,399
it's done here we can

00:12:25,120 --> 00:12:31,440
reference existing uh

00:12:28,399 --> 00:12:33,040
tags in the osm element uh where that

00:12:31,440 --> 00:12:34,639
information is already present right so

00:12:33,040 --> 00:12:37,839
we can just

00:12:34,639 --> 00:12:40,160
uh access that from

00:12:37,839 --> 00:12:42,720
and with that we have an actual actually

00:12:40,160 --> 00:12:46,720
quite powerful system to define

00:12:42,720 --> 00:12:46,720
how things should look like on a map

00:12:50,800 --> 00:12:55,120
all of that exists in the very

00:12:53,279 --> 00:12:58,320
creatively named

00:12:55,120 --> 00:13:00,959
kosm indoor map repository

00:12:58,320 --> 00:13:02,959
um as a c plus plus library that

00:13:00,959 --> 00:13:06,000
contains all the data processing

00:13:02,959 --> 00:13:08,320
and rendering code

00:13:06,000 --> 00:13:11,360
and kernel components to to integrate

00:13:08,320 --> 00:13:14,399
that easily in applications

00:13:11,360 --> 00:13:17,839
um for the data that uses the same

00:13:14,399 --> 00:13:18,480
uh back-end server for osm raw data

00:13:17,839 --> 00:13:22,639
tiles

00:13:18,480 --> 00:13:26,880
um as marble as well that's something i

00:13:22,639 --> 00:13:28,800
i briefly mentioned last year um

00:13:26,880 --> 00:13:31,279
where we were still working on a new

00:13:28,800 --> 00:13:35,440
system for that meanwhile that has been

00:13:31,279 --> 00:13:38,720
has been deployed um and now has

00:13:35,440 --> 00:13:41,440
truly worldwide coverage and

00:13:38,720 --> 00:13:43,839
updates daily from the uh the upstream

00:13:41,440 --> 00:13:46,880
osm data

00:13:43,839 --> 00:13:48,079
it then might still take a week or two

00:13:46,880 --> 00:13:50,000
until this has

00:13:48,079 --> 00:13:52,720
the changes have propagated for all the

00:13:50,000 --> 00:13:56,320
the caching layers

00:13:52,720 --> 00:13:58,000
but compared to what we had previously

00:13:56,320 --> 00:13:59,360
uh this gives you very very quick

00:13:58,000 --> 00:14:02,800
updates when

00:13:59,360 --> 00:14:04,480
when fixing the data

00:14:02,800 --> 00:14:07,120
we have the flow level separation i

00:14:04,480 --> 00:14:09,199
mentioned implemented in there

00:14:07,120 --> 00:14:11,279
we have interflow navigation which means

00:14:09,199 --> 00:14:14,000
if you click on a

00:14:11,279 --> 00:14:14,000
stair on

00:14:14,560 --> 00:14:19,040
escalator then you jump to the floor

00:14:17,600 --> 00:14:21,360
that connects to

00:14:19,040 --> 00:14:22,720
if you click on an elevator you can

00:14:21,360 --> 00:14:26,079
select which floor

00:14:22,720 --> 00:14:29,120
to go to um

00:14:26,079 --> 00:14:31,839
the map css engine in there

00:14:29,120 --> 00:14:31,839
is

00:14:32,160 --> 00:14:35,199
is doing everything at one time right

00:14:34,639 --> 00:14:38,560
there is no

00:14:35,199 --> 00:14:39,519
precompilation which is very convenient

00:14:38,560 --> 00:14:42,240
for

00:14:39,519 --> 00:14:42,880
for development um you can just live

00:14:42,240 --> 00:14:44,800
edit

00:14:42,880 --> 00:14:47,839
the style shade reload and immediately

00:14:44,800 --> 00:14:51,040
see see your changes on the map

00:14:47,839 --> 00:14:53,360
and it is very powerful for applications

00:14:51,040 --> 00:14:53,360
as well

00:14:53,680 --> 00:14:58,880
as you can very easily customize the

00:14:56,959 --> 00:15:00,480
visual appearance right so we can hide

00:14:58,880 --> 00:15:02,000
stuff that is irrelevant for your use

00:15:00,480 --> 00:15:04,320
case where you can highlight

00:15:02,000 --> 00:15:05,360
things that you're currently working

00:15:04,320 --> 00:15:09,360
with

00:15:05,360 --> 00:15:12,959
or arbitrarily customize that to the

00:15:09,360 --> 00:15:15,360
user preferences

00:15:12,959 --> 00:15:17,040
and then we have built some some things

00:15:15,360 --> 00:15:20,720
on top of that that i'm

00:15:17,040 --> 00:15:20,720
going to show you in a in a minute

00:15:22,320 --> 00:15:27,199
i don't think we have the time for going

00:15:25,040 --> 00:15:29,199
deeper in the implementation so i skip

00:15:27,199 --> 00:15:33,279
that part

00:15:29,199 --> 00:15:36,320
and instead show you some screenshots

00:15:33,279 --> 00:15:37,040
um so this is again berlin central

00:15:36,320 --> 00:15:40,240
station

00:15:37,040 --> 00:15:43,360
uh three of the five relevant floors

00:15:40,240 --> 00:15:44,959
um i mean there's still

00:15:43,360 --> 00:15:47,759
a whole lot of stuff in there that isn't

00:15:44,959 --> 00:15:49,360
ideal um due to issues in the styling

00:15:47,759 --> 00:15:52,720
due to issues in the rendering

00:15:49,360 --> 00:15:54,079
and uh issues in the data but this is a

00:15:52,720 --> 00:15:56,880
huge improvement over

00:15:54,079 --> 00:15:58,079
having everything meshed together right

00:15:56,880 --> 00:16:02,240
you can now clearly see

00:15:58,079 --> 00:16:04,959
um the railway platforms uh you can

00:16:02,240 --> 00:16:06,399
see the stairs and escalators and

00:16:04,959 --> 00:16:08,560
elevators

00:16:06,399 --> 00:16:09,519
you can identify the various shops and

00:16:08,560 --> 00:16:13,440
restaurants

00:16:09,519 --> 00:16:18,000
um this is actually useful to find

00:16:13,440 --> 00:16:20,480
uh find your way around um

00:16:18,000 --> 00:16:21,360
and it's it's using the breeze dark

00:16:20,480 --> 00:16:22,959
style so

00:16:21,360 --> 00:16:24,800
you'll see some of the other screenshots

00:16:22,959 --> 00:16:28,800
using the light ones

00:16:24,800 --> 00:16:31,920
that shows the the flexibility in

00:16:28,800 --> 00:16:31,920
in the styling we have

00:16:35,440 --> 00:16:41,079
one note about performance this

00:16:38,800 --> 00:16:43,360
image was actually an accident i

00:16:41,079 --> 00:16:45,360
miscalculated some coordinates and

00:16:43,360 --> 00:16:50,399
ended up loading the entire city of

00:16:45,360 --> 00:16:53,279
hamburg into this um

00:16:50,399 --> 00:16:54,399
surprisingly this loads within a few

00:16:53,279 --> 00:16:57,040
seconds

00:16:54,399 --> 00:17:00,000
on the workstation but it doesn't really

00:16:57,040 --> 00:17:02,839
have 60 fps

00:17:00,000 --> 00:17:05,039
rendering anymore it's still somewhat

00:17:02,839 --> 00:17:07,439
usable um

00:17:05,039 --> 00:17:09,039
and that just shows that there is more

00:17:07,439 --> 00:17:12,480
than enough room in there

00:17:09,039 --> 00:17:13,439
to run this for or run this on a

00:17:12,480 --> 00:17:19,839
building scale

00:17:13,439 --> 00:17:19,839
on a low end smartphone

00:17:20,559 --> 00:17:25,520
um right and then let's get to some of

00:17:24,079 --> 00:17:30,160
the things

00:17:25,520 --> 00:17:34,559
that we we built on on top of the

00:17:30,160 --> 00:17:37,039
mapping data i already mentioned that

00:17:34,559 --> 00:17:40,400
that we identify escalators and

00:17:37,039 --> 00:17:40,400
elevators and stairs for

00:17:40,640 --> 00:17:44,960
for interflow navigation another thing

00:17:44,000 --> 00:17:47,120
that is

00:17:44,960 --> 00:17:48,720
particularly important for the itinerary

00:17:47,120 --> 00:17:51,600
use case

00:17:48,720 --> 00:17:52,640
is identifying airport gates and railway

00:17:51,600 --> 00:17:54,799
platforms

00:17:52,640 --> 00:17:55,679
your start is ultimately where we need

00:17:54,799 --> 00:17:59,440
to go

00:17:55,679 --> 00:18:03,360
based on our itinerary right

00:17:59,440 --> 00:18:05,520
apple gates are um very easy to handle

00:18:03,360 --> 00:18:07,280
um in the real world they usually

00:18:05,520 --> 00:18:11,360
manifest as a door

00:18:07,280 --> 00:18:14,559
uh osm models them as a as a point um

00:18:11,360 --> 00:18:15,280
so there isn't much we we need to look

00:18:14,559 --> 00:18:18,400
for or

00:18:15,280 --> 00:18:21,760
reassemble um radar platforms

00:18:18,400 --> 00:18:24,000
are the total opposite um

00:18:21,760 --> 00:18:25,280
they can be several hundred meters in in

00:18:24,000 --> 00:18:28,960
length

00:18:25,280 --> 00:18:30,960
and consists of an arbitrarily complex

00:18:28,960 --> 00:18:34,559
geometry for the platform itself

00:18:30,960 --> 00:18:37,760
um one or more tracks next to it uh

00:18:34,559 --> 00:18:40,480
it that which might be

00:18:37,760 --> 00:18:42,320
split in various subparts the platform

00:18:40,480 --> 00:18:45,440
itself might be

00:18:42,320 --> 00:18:47,039
split in several sections um depending

00:18:45,440 --> 00:18:47,600
on country and operators there's

00:18:47,039 --> 00:18:49,760
different

00:18:47,600 --> 00:18:51,120
naming schemes for platforms and and

00:18:49,760 --> 00:18:52,720
tracks

00:18:51,120 --> 00:18:54,720
some of them internal some of them

00:18:52,720 --> 00:18:58,799
publicly visible right so we want

00:18:54,720 --> 00:18:58,799
of course the the publicly visible ones

00:19:00,080 --> 00:19:05,919
and for more fun uh for historic reasons

00:19:03,440 --> 00:19:06,960
osm has different tagging schemes for

00:19:05,919 --> 00:19:09,440
that

00:19:06,960 --> 00:19:10,799
so data isn't always in a uniform format

00:19:09,440 --> 00:19:12,799
so we need to

00:19:10,799 --> 00:19:15,600
find all those parts and puzzle them

00:19:12,799 --> 00:19:15,600
together somehow

00:19:16,240 --> 00:19:24,160
and the last part is opening hours

00:19:21,039 --> 00:19:25,440
um so if so itinerary knows

00:19:24,160 --> 00:19:27,600
when you are going to be at the railway

00:19:25,440 --> 00:19:30,640
station and fall alone

00:19:27,600 --> 00:19:33,280
um and if we know when

00:19:30,640 --> 00:19:33,760
like the ticket shop or the coffee shop

00:19:33,280 --> 00:19:37,120
are

00:19:33,760 --> 00:19:38,000
open right we can and highlight the ones

00:19:37,120 --> 00:19:39,520
that are open or

00:19:38,000 --> 00:19:41,200
hide the ones that aren't open while

00:19:39,520 --> 00:19:43,679
you're there um

00:19:41,200 --> 00:19:44,720
as there's no point to go in searching

00:19:43,679 --> 00:19:48,400
for coffee and then

00:19:44,720 --> 00:19:48,400
finding the other place close right

00:19:49,520 --> 00:19:54,720
and here the pictures for that um on the

00:19:52,080 --> 00:19:57,840
left hand side we see a

00:19:54,720 --> 00:20:01,600
train connection in

00:19:57,840 --> 00:20:05,039
cologne central station i think so the

00:20:01,600 --> 00:20:06,159
we are riding on on track six marked in

00:20:05,039 --> 00:20:09,039
green

00:20:06,159 --> 00:20:11,039
we are departing from track 7 marked in

00:20:09,039 --> 00:20:12,720
red

00:20:11,039 --> 00:20:16,000
and already that that bit of

00:20:12,720 --> 00:20:18,480
highlighting uh adds value here right is

00:20:16,000 --> 00:20:19,280
you immediately see that your connecting

00:20:18,480 --> 00:20:21,679
train

00:20:19,280 --> 00:20:24,159
departs from from the same platform just

00:20:21,679 --> 00:20:26,720
on the on the opposite side

00:20:24,159 --> 00:20:27,679
um so even if if you have a very short

00:20:26,720 --> 00:20:29,600
connection that

00:20:27,679 --> 00:20:31,679
should be easily doable right there's no

00:20:29,600 --> 00:20:33,039
problem with stairs or elevators

00:20:31,679 --> 00:20:38,080
involved

00:20:33,039 --> 00:20:41,760
um and that way you can see that

00:20:38,080 --> 00:20:44,960
on the right hand side we have um

00:20:41,760 --> 00:20:46,720
obviously different ways on how we make

00:20:44,960 --> 00:20:50,159
use of the opening hours

00:20:46,720 --> 00:20:53,039
there's uh this green line here

00:20:50,159 --> 00:20:53,679
open for two uh two more hours of the i

00:20:53,039 --> 00:20:57,039
think we have the

00:20:53,679 --> 00:20:59,760
ticket shop selected there um

00:20:57,039 --> 00:21:02,320
that is a simple human readable

00:20:59,760 --> 00:21:05,840
description of the current state

00:21:02,320 --> 00:21:05,840
for a bigger picture we have the

00:21:06,799 --> 00:21:13,280
table view and then

00:21:09,919 --> 00:21:15,600
as i mentioned we can also use that to

00:21:13,280 --> 00:21:16,799
like gray out or hide elements on the

00:21:15,600 --> 00:21:20,640
map

00:21:16,799 --> 00:21:23,360
um since that opening ours format

00:21:20,640 --> 00:21:26,080
of osm is used in a number of other

00:21:23,360 --> 00:21:28,080
places as well

00:21:26,080 --> 00:21:30,799
the whole code for that is in a separate

00:21:28,080 --> 00:21:34,880
library okay opening hours

00:21:30,799 --> 00:21:38,000
and that contains both the evaluation

00:21:34,880 --> 00:21:39,280
engine for those expressions as well as

00:21:38,000 --> 00:21:43,120
the building blocks for

00:21:39,280 --> 00:21:46,480
for the user interface

00:21:43,120 --> 00:21:48,960
um that might be something

00:21:46,480 --> 00:21:50,240
uh of interest for plasma browser

00:21:48,960 --> 00:21:52,880
integration for example

00:21:50,240 --> 00:21:53,600
um as uh websites of shops or

00:21:52,880 --> 00:21:56,640
restaurants

00:21:53,600 --> 00:21:58,000
uh contain that information often in a

00:21:56,640 --> 00:22:02,480
machine readable

00:21:58,000 --> 00:22:02,480
way is welled up this can assume

00:22:03,200 --> 00:22:10,840
um right and then we have a

00:22:06,720 --> 00:22:13,679
another thing added there and that is

00:22:10,840 --> 00:22:16,960
additional data sources

00:22:13,679 --> 00:22:20,640
that we can integrate into the map

00:22:16,960 --> 00:22:25,440
the first one is the operational status

00:22:20,640 --> 00:22:25,440
of elevators and escalators

00:22:25,679 --> 00:22:29,360
that's something we get from

00:22:27,120 --> 00:22:32,159
accessibility cloud

00:22:29,360 --> 00:22:34,559
which is a free software service that

00:22:32,159 --> 00:22:38,480
aggregates that from

00:22:34,559 --> 00:22:42,000
uh hundreds of different sources

00:22:38,480 --> 00:22:44,080
and then provides a unified api for that

00:22:42,000 --> 00:22:45,919
um that's operated by the same people

00:22:44,080 --> 00:22:48,320
that do realmap.org

00:22:45,919 --> 00:22:50,320
and they kindly allowed us to use this

00:22:48,320 --> 00:22:53,039
for this purpose as well

00:22:50,320 --> 00:22:55,520
um in the screenshot on the on the left

00:22:53,039 --> 00:22:57,360
we see that in action right we have two

00:22:55,520 --> 00:22:59,760
escalators that are operational and we

00:22:57,360 --> 00:23:01,760
have uh three

00:22:59,760 --> 00:23:03,679
elevators that are currently operational

00:23:01,760 --> 00:23:06,320
uh all marked in green

00:23:03,679 --> 00:23:07,200
and we have one uh elevator that is

00:23:06,320 --> 00:23:09,840
currently

00:23:07,200 --> 00:23:09,840
out of service

00:23:10,400 --> 00:23:14,880
if you are relying on an elevator to

00:23:13,520 --> 00:23:17,780
change floor levels like that is of

00:23:14,880 --> 00:23:19,120
course a very crucial information

00:23:17,780 --> 00:23:22,640
[Music]

00:23:19,120 --> 00:23:24,080
and knowing that building right

00:23:22,640 --> 00:23:26,000
or not knowing that building you might

00:23:24,080 --> 00:23:26,640
expect you can just take the elevator

00:23:26,000 --> 00:23:28,720
next to it

00:23:26,640 --> 00:23:30,559
um that however will get you to

00:23:28,720 --> 00:23:32,960
different platforms

00:23:30,559 --> 00:23:33,679
uh so depending on where you need to go

00:23:32,960 --> 00:23:36,080
you might

00:23:33,679 --> 00:23:38,000
need use the elevator on the right as an

00:23:36,080 --> 00:23:40,320
alternative

00:23:38,000 --> 00:23:42,080
that is of course stuff you need to know

00:23:40,320 --> 00:23:44,480
somehow right and

00:23:42,080 --> 00:23:46,960
the the indoor map provides you with

00:23:44,480 --> 00:23:50,400
that information

00:23:46,960 --> 00:23:52,960
um the other

00:23:50,400 --> 00:23:53,679
real-time data source we we integrate is

00:23:52,960 --> 00:23:57,840
uh

00:23:53,679 --> 00:23:59,760
positions of rental bikes and e-scooters

00:23:57,840 --> 00:24:01,760
so if you use those to get to and from

00:23:59,760 --> 00:24:02,159
the station it's of course good to know

00:24:01,760 --> 00:24:04,880
where

00:24:02,159 --> 00:24:05,919
where they are placed and if there are

00:24:04,880 --> 00:24:09,039
some available at

00:24:05,919 --> 00:24:11,520
all uh so here on the right we see uh

00:24:09,039 --> 00:24:14,400
three rental bikes uh currently

00:24:11,520 --> 00:24:19,039
available at this

00:24:14,400 --> 00:24:22,159
bike parking space

00:24:19,039 --> 00:24:24,400
um yeah that's that's the stuff we have

00:24:22,159 --> 00:24:27,760
implemented so far

00:24:24,400 --> 00:24:31,520
um and

00:24:27,760 --> 00:24:32,640
that is basically just the map display

00:24:31,520 --> 00:24:36,240
right this is an

00:24:32,640 --> 00:24:39,600
indoor navigation for navigation we are

00:24:36,240 --> 00:24:41,840
we are missing two crucial parts still

00:24:39,600 --> 00:24:42,640
uh one is localization finding out where

00:24:41,840 --> 00:24:44,880
you are

00:24:42,640 --> 00:24:47,039
and routing finding out how you get from

00:24:44,880 --> 00:24:50,400
a to b

00:24:47,039 --> 00:24:53,520
um localization is usually done with gps

00:24:50,400 --> 00:24:57,039
outdoors but that

00:24:53,520 --> 00:24:57,760
hardly ever works indoors and even if it

00:24:57,039 --> 00:24:59,520
would

00:24:57,760 --> 00:25:01,760
we still have the problem that we need

00:24:59,520 --> 00:25:04,880
to map

00:25:01,760 --> 00:25:05,679
altitude in like attitude above sea

00:25:04,880 --> 00:25:08,799
level to

00:25:05,679 --> 00:25:09,679
floor levels uh instead inner

00:25:08,799 --> 00:25:14,000
localization

00:25:09,679 --> 00:25:16,159
is usually done by um

00:25:14,000 --> 00:25:18,559
measuring the signal strength of

00:25:16,159 --> 00:25:22,480
bluetooth and wifi beacons

00:25:18,559 --> 00:25:26,159
and i'm guessing based on that

00:25:22,480 --> 00:25:29,279
um that is probably something to look at

00:25:26,159 --> 00:25:32,159
rather on the plasma mobile system level

00:25:29,279 --> 00:25:35,120
rather than on an application level

00:25:32,159 --> 00:25:35,840
as that needs somewhat low level access

00:25:35,120 --> 00:25:38,799
to the

00:25:35,840 --> 00:25:38,799
radio devices

00:25:39,279 --> 00:25:43,679
and it is something that is very hard to

00:25:41,440 --> 00:25:46,640
work on while you are stuck at home

00:25:43,679 --> 00:25:47,279
um that needs some time on site to

00:25:46,640 --> 00:25:50,799
actually make

00:25:47,279 --> 00:25:52,640
experiments and measurements

00:25:50,799 --> 00:25:53,919
uh not so for routing that is something

00:25:52,640 --> 00:25:57,360
you could work on uh

00:25:53,919 --> 00:26:01,440
comfortably from your desk at home

00:25:57,360 --> 00:26:04,559
writing only on the outside usually is a

00:26:01,440 --> 00:26:06,240
is done using graph algorithms which we

00:26:04,559 --> 00:26:09,440
use the

00:26:06,240 --> 00:26:10,000
streets as a kind of a graph and then

00:26:09,440 --> 00:26:13,520
apply

00:26:10,000 --> 00:26:15,360
like shortage path algorithms

00:26:13,520 --> 00:26:17,120
massively simplified but that's the

00:26:15,360 --> 00:26:20,240
basic idea

00:26:17,120 --> 00:26:22,159
um with the indoor data we have the

00:26:20,240 --> 00:26:25,679
problem that we don't have

00:26:22,159 --> 00:26:28,799
a complete graph of ways that connect

00:26:25,679 --> 00:26:32,080
every possible place we want to go

00:26:28,799 --> 00:26:35,679
instead we also have um

00:26:32,080 --> 00:26:37,520
areas uh where we we just have a polygon

00:26:35,679 --> 00:26:41,760
describing an area

00:26:37,520 --> 00:26:45,520
on which you could walk so we need to

00:26:41,760 --> 00:26:49,679
kind of mix those two data types

00:26:45,520 --> 00:26:53,120
and build a routing system that can

00:26:49,679 --> 00:26:55,520
handle handle those those two

00:26:53,120 --> 00:26:56,880
and of course we need to consider the

00:26:55,520 --> 00:27:00,400
floor level changes uh

00:26:56,880 --> 00:27:03,039
specifically as well um so that's an

00:27:00,400 --> 00:27:03,600
interesting problem to work on if you

00:27:03,039 --> 00:27:07,840
like

00:27:03,600 --> 00:27:07,840
geometry and graph problems

00:27:13,520 --> 00:27:21,679
and then there's a few more things

00:27:17,200 --> 00:27:23,440
to look out for i think um

00:27:21,679 --> 00:27:25,039
the thing that actually got the whole

00:27:23,440 --> 00:27:28,320
this whole work started is

00:27:25,039 --> 00:27:31,279
um i wanted to have the train coach

00:27:28,320 --> 00:27:32,960
positions properly displayed on the map

00:27:31,279 --> 00:27:34,240
if you have a seat reservation in a

00:27:32,960 --> 00:27:36,240
train right

00:27:34,240 --> 00:27:38,799
that is the information you want to in

00:27:36,240 --> 00:27:41,919
order to know where you have to go

00:27:38,799 --> 00:27:43,360
um now we have the map and i generally

00:27:41,919 --> 00:27:45,120
also have the coach layout

00:27:43,360 --> 00:27:46,799
the problem is bringing those two

00:27:45,120 --> 00:27:48,880
together

00:27:46,799 --> 00:27:49,840
as we are missing one crucial piece of

00:27:48,880 --> 00:27:52,399
information

00:27:49,840 --> 00:27:54,799
namely in which direction the train

00:27:52,399 --> 00:27:56,480
needs to go onto the map

00:27:54,799 --> 00:27:58,399
i hope that we'll eventually find a

00:27:56,480 --> 00:28:01,279
solution for that and then

00:27:58,399 --> 00:28:02,000
finally get that implemented as well and

00:28:01,279 --> 00:28:05,120
that of course

00:28:02,000 --> 00:28:05,760
is also a prerequisite for for proper

00:28:05,120 --> 00:28:07,360
routing

00:28:05,760 --> 00:28:09,440
uh because we of course need to know

00:28:07,360 --> 00:28:11,760
where exactly

00:28:09,440 --> 00:28:12,720
we we should end up in a in a train

00:28:11,760 --> 00:28:16,640
station to

00:28:12,720 --> 00:28:20,480
to reach our train right um

00:28:16,640 --> 00:28:23,360
another thing to uh to look into

00:28:20,480 --> 00:28:23,360
is um

00:28:24,080 --> 00:28:29,279
uh is well generalizing that and using

00:28:28,559 --> 00:28:31,440
it for

00:28:29,279 --> 00:28:33,120
for other building types i have mainly

00:28:31,440 --> 00:28:33,840
focused on train stations and airports

00:28:33,120 --> 00:28:37,279
here for

00:28:33,840 --> 00:28:41,039
obvious reasons um you'll find

00:28:37,279 --> 00:28:43,039
very good indoor data also in museums

00:28:41,039 --> 00:28:44,559
universities or shopping malls for

00:28:43,039 --> 00:28:47,919
example

00:28:44,559 --> 00:28:49,760
so there could be a value in in creating

00:28:47,919 --> 00:28:52,640
a

00:28:49,760 --> 00:28:54,159
like a standalone indoor map app for

00:28:52,640 --> 00:28:56,880
plasma mobile

00:28:54,159 --> 00:28:58,320
um we currently have a standalone app

00:28:56,880 --> 00:29:01,919
that is

00:28:58,320 --> 00:29:05,440
but that is purely aimed at developing

00:29:01,919 --> 00:29:07,919
so for testing and stylesheet changes

00:29:05,440 --> 00:29:07,919
and so on

00:29:08,159 --> 00:29:15,279
we might want to build something proper

00:29:12,080 --> 00:29:15,600
on top of that and then finally there's

00:29:15,279 --> 00:29:18,640
the

00:29:15,600 --> 00:29:22,080
um the relation to marble

00:29:18,640 --> 00:29:22,720
um marvel has all the the outdoor

00:29:22,080 --> 00:29:26,320
mapping

00:29:22,720 --> 00:29:29,279
uh done uh already right um

00:29:26,320 --> 00:29:30,960
and it has a ton more features than um

00:29:29,279 --> 00:29:33,679
than this has

00:29:30,960 --> 00:29:35,520
uh on the other hand we are missing the

00:29:33,679 --> 00:29:38,880
indoor mapping there

00:29:35,520 --> 00:29:40,480
and there's a few other interesting

00:29:38,880 --> 00:29:43,520
pieces in here that uh

00:29:40,480 --> 00:29:45,600
that model might benefit from uh like

00:29:43,520 --> 00:29:48,640
the geometry reassembly from the

00:29:45,600 --> 00:29:50,320
uh the raw data tiles um marble doesn't

00:29:48,640 --> 00:29:54,000
do that yet

00:29:50,320 --> 00:29:59,039
um the map css engine

00:29:54,000 --> 00:30:01,120
or some of the the performance work um

00:29:59,039 --> 00:30:02,159
so i think we should at least explore

00:30:01,120 --> 00:30:05,840
how we can

00:30:02,159 --> 00:30:09,039
uh uh or if there's ways to

00:30:05,840 --> 00:30:12,240
to share more of the the work and

00:30:09,039 --> 00:30:12,240
the code between those two

00:30:12,640 --> 00:30:17,919
yeah and i think that's that's it

00:30:15,919 --> 00:30:23,440
thank you for listening and are there

00:30:17,919 --> 00:30:26,480
any questions

00:30:23,440 --> 00:30:28,960
so right now we have no questions but

00:30:26,480 --> 00:30:30,480
people please do ask him i shall ask

00:30:28,960 --> 00:30:31,039
some questions to vodka so he doesn't

00:30:30,480 --> 00:30:34,399
have a

00:30:31,039 --> 00:30:35,120
chance to relax um so you've talked

00:30:34,399 --> 00:30:36,480
mostly about

00:30:35,120 --> 00:30:38,240
drawing your maps in the actual

00:30:36,480 --> 00:30:39,840
rendering could you talk us through your

00:30:38,240 --> 00:30:42,559
workflow from a user

00:30:39,840 --> 00:30:44,399
from going from booking a ticket to

00:30:42,559 --> 00:30:48,480
using a map how does it integrate

00:30:44,399 --> 00:30:51,520
from our k itinerary point of view um

00:30:48,480 --> 00:30:53,279
sure so um

00:30:51,520 --> 00:30:55,440
we have we don't have ticket booking

00:30:53,279 --> 00:30:56,960
integrated uh at this point so you

00:30:55,440 --> 00:31:00,480
booked that on a

00:30:56,960 --> 00:31:02,880
on the like the japan website or

00:31:00,480 --> 00:31:04,480
whatever the do you even have trains

00:31:02,880 --> 00:31:07,679
where you live i don't know

00:31:04,480 --> 00:31:10,080
um um

00:31:07,679 --> 00:31:11,919
so assume you booked a ticket on the on

00:31:10,080 --> 00:31:13,279
the vendor website you get an email with

00:31:11,919 --> 00:31:15,919
a pdf containing that

00:31:13,279 --> 00:31:17,279
ticket uh you're of course using kmail

00:31:15,919 --> 00:31:20,960
so camera recognizes

00:31:17,279 --> 00:31:23,120
that that ticket and shows you

00:31:20,960 --> 00:31:25,360
what's in there in a compact form and

00:31:23,120 --> 00:31:28,799
offers you to attach your calendar or

00:31:25,360 --> 00:31:28,799
your january app directly

00:31:28,880 --> 00:31:32,080
then in the itinerary app you have a

00:31:31,600 --> 00:31:34,559
timeline

00:31:32,080 --> 00:31:35,679
that contains your your train trip or

00:31:34,559 --> 00:31:36,799
possibly multiple

00:31:35,679 --> 00:31:40,080
train trips right if you have

00:31:36,799 --> 00:31:42,399
connections in between and for the

00:31:40,080 --> 00:31:43,519
for the stations itinerary offers you to

00:31:42,399 --> 00:31:46,559
look at the

00:31:43,519 --> 00:31:49,919
at the map so if you

00:31:46,559 --> 00:31:52,559
want to know how complex your

00:31:49,919 --> 00:31:53,919
change is right so if you need to change

00:31:52,559 --> 00:31:56,399
five floors or if the

00:31:53,919 --> 00:31:58,000
it's on the next platform right you just

00:31:56,399 --> 00:32:02,080
open the

00:31:58,000 --> 00:32:06,240
uh the map there and uh and look at that

00:32:02,080 --> 00:32:06,640
um there is of course a lot of room

00:32:06,240 --> 00:32:09,519
there

00:32:06,640 --> 00:32:11,360
to integrate uh proper navigation once

00:32:09,519 --> 00:32:14,559
once we have that but right now it's

00:32:11,360 --> 00:32:14,559
it's basically just an option

00:32:14,720 --> 00:32:19,440
open the map at the stations i'm going

00:32:16,799 --> 00:32:19,440
to travel to

00:32:22,399 --> 00:32:30,240
give me a second i might be able to

00:32:26,320 --> 00:32:32,960
demo that oh live demos

00:32:30,240 --> 00:32:34,640
that's brave we want to see it now yeah

00:32:32,960 --> 00:32:36,960
i had that prepared for the

00:32:34,640 --> 00:32:39,440
uh for the map i just need to look if i

00:32:36,960 --> 00:32:42,000
have and

00:32:39,440 --> 00:32:43,039
yeah i have one for itinerary this demo

00:32:42,000 --> 00:32:46,240
data that i can

00:32:43,039 --> 00:32:48,640
show you okay and if people do have

00:32:46,240 --> 00:32:51,039
questions please do ask them

00:32:48,640 --> 00:32:51,919
it's your only chance vulcan might be

00:32:51,039 --> 00:32:54,159
gone from there

00:32:51,919 --> 00:32:55,760
after this on a big holiday using k

00:32:54,159 --> 00:32:59,360
itinerary

00:32:55,760 --> 00:32:59,360
and we won't be able to find him

00:33:00,799 --> 00:33:05,360
for that we first need to implement the

00:33:03,279 --> 00:33:10,159
vaccination certificates as well but

00:33:05,360 --> 00:33:13,919
that is ongoing uh

00:33:10,159 --> 00:33:13,919
so let me see if this works

00:33:17,919 --> 00:33:23,519
so this is a maybe slightly distorted

00:33:21,440 --> 00:33:24,240
kdi generally because i tried to scale

00:33:23,519 --> 00:33:27,360
it up so you

00:33:24,240 --> 00:33:27,360
have a chance to read it

00:33:28,480 --> 00:33:35,039
and the the card in here right

00:33:31,679 --> 00:33:38,480
that is the train ticket

00:33:35,039 --> 00:33:39,760
um from berlin to the prim meeting in

00:33:38,480 --> 00:33:44,399
oslobrick

00:33:39,760 --> 00:33:47,919
and just by clicking here i get the

00:33:44,399 --> 00:33:51,440
the station uh

00:33:47,919 --> 00:33:54,480
the the map already pre-selected on the

00:33:51,440 --> 00:33:57,440
platform i'm departing from

00:33:54,480 --> 00:33:58,559
and uh it even has the arrival platform

00:33:57,440 --> 00:34:01,840
here that is

00:33:58,559 --> 00:34:03,919
not for the uh

00:34:01,840 --> 00:34:06,000
not for connecting trip that i booked

00:34:03,919 --> 00:34:09,119
but it is for the

00:34:06,000 --> 00:34:11,119
public transport connection that

00:34:09,119 --> 00:34:13,919
itinerary recommended me to get to the

00:34:11,119 --> 00:34:13,919
station from home

00:34:14,159 --> 00:34:20,199
and i can do the same at the

00:34:17,599 --> 00:34:21,839
arrival location

00:34:20,199 --> 00:34:24,320
[Music]

00:34:21,839 --> 00:34:27,280
and again it has the the right platform

00:34:24,320 --> 00:34:27,280
already selected

00:34:28,720 --> 00:34:34,000
let me go back to berlin that is the

00:34:31,200 --> 00:34:37,520
slightly more complex station

00:34:34,000 --> 00:34:40,800
so here i can just by clicking on the uh

00:34:37,520 --> 00:34:42,879
on the steps go down right navigate

00:34:40,800 --> 00:34:45,300
through the

00:34:42,879 --> 00:34:46,960
the station

00:34:45,300 --> 00:34:50,480
[Music]

00:34:46,960 --> 00:34:50,480
i'll take the other way to pack up

00:34:50,720 --> 00:34:54,639
we have one question from your chat and

00:34:52,800 --> 00:34:57,119
the question from pure tryout

00:34:54,639 --> 00:34:58,560
is do you have any plans to integrate

00:34:57,119 --> 00:35:00,320
with kdconnect

00:34:58,560 --> 00:35:02,240
i need to imagine a situation where you

00:35:00,320 --> 00:35:04,000
can plan a route on your desktop and

00:35:02,240 --> 00:35:05,760
then do your actual navigation on your

00:35:04,000 --> 00:35:08,960
phone

00:35:05,760 --> 00:35:10,320
um we do have integration with kde

00:35:08,960 --> 00:35:13,119
connect i mean that's how

00:35:10,320 --> 00:35:13,520
kmil for example sends your train jacket

00:35:13,119 --> 00:35:16,320
to

00:35:13,520 --> 00:35:18,960
to the phone so that goes directly via

00:35:16,320 --> 00:35:22,480
kd connect is one of the options

00:35:18,960 --> 00:35:26,400
what we don't have is uh

00:35:22,480 --> 00:35:30,720
that specifically for the uh for like

00:35:26,400 --> 00:35:34,640
uh route planning or anything like that

00:35:30,720 --> 00:35:36,880
um that is a good idea through

00:35:34,640 --> 00:35:36,880
um

00:35:38,400 --> 00:35:41,839
but i think the first thing we would

00:35:40,320 --> 00:35:45,839
need for that as well is

00:35:41,839 --> 00:35:45,839
uh is proper routing

00:35:47,680 --> 00:35:51,359
okay now one more question i've got two

00:35:49,839 --> 00:35:54,320
more questions

00:35:51,359 --> 00:35:58,480
so the first question how can they use

00:35:54,320 --> 00:36:02,400
anyone get this project

00:35:58,480 --> 00:36:06,160
how can we run it i know what platforms

00:36:02,400 --> 00:36:09,760
um oh yeah there is uh

00:36:06,160 --> 00:36:11,920
um i mean this is a kirigami application

00:36:09,760 --> 00:36:14,800
well itinerary is a kirigami application

00:36:11,920 --> 00:36:18,640
right so and that has this integrated

00:36:14,800 --> 00:36:19,920
so that's available on any kind of linux

00:36:18,640 --> 00:36:24,000
platforms

00:36:19,920 --> 00:36:25,520
and it's available in the asteroid

00:36:24,000 --> 00:36:28,079
nightly build and release build

00:36:25,520 --> 00:36:29,920
repositories of kde

00:36:28,079 --> 00:36:31,599
and we are working on also getting it

00:36:29,920 --> 00:36:34,960
into google play

00:36:31,599 --> 00:36:38,560
and that gives me an opportunity to

00:36:34,960 --> 00:36:42,000
advertise the android release

00:36:38,560 --> 00:36:44,400
talk i have on friday

00:36:42,000 --> 00:36:47,599
which deals with exactly how we get this

00:36:44,400 --> 00:36:50,320
uh properly deployed in android

00:36:47,599 --> 00:36:50,880
okay one more question is coming and it

00:36:50,320 --> 00:36:54,240
is

00:36:50,880 --> 00:36:56,000
from hudson wood gamification

00:36:54,240 --> 00:36:57,599
fit into your project vision to

00:36:56,000 --> 00:36:59,920
encourage users to reduce their

00:36:57,599 --> 00:37:02,240
environmental impact

00:36:59,920 --> 00:37:02,240
um

00:37:04,079 --> 00:37:11,680
i'm i mean environmental impact uh

00:37:08,880 --> 00:37:13,040
is uh i would certainly see in scope we

00:37:11,680 --> 00:37:15,839
have a statistics

00:37:13,040 --> 00:37:17,200
uh i'm not sure if i know i don't think

00:37:15,839 --> 00:37:19,040
i'm present anymore

00:37:17,200 --> 00:37:22,400
um we have a statistics view that shows

00:37:19,040 --> 00:37:24,000
you um like your co2 emissions uh based

00:37:22,400 --> 00:37:24,720
on mode of transport and that kind of

00:37:24,000 --> 00:37:27,280
stuff

00:37:24,720 --> 00:37:27,280
so there is

00:37:28,000 --> 00:37:31,680
i mean i can't from the top of my head

00:37:29,680 --> 00:37:34,720
come up with a good gamification

00:37:31,680 --> 00:37:36,800
idea to to leverage that uh

00:37:34,720 --> 00:37:38,160
but yeah i think i i would see that

00:37:36,800 --> 00:37:40,320
definitely in scope

00:37:38,160 --> 00:37:41,599
and we tried to you have all your data

00:37:40,320 --> 00:37:42,960
so other people could

00:37:41,599 --> 00:37:45,119
the other way later so other people

00:37:42,960 --> 00:37:46,720
could then take out those libraries and

00:37:45,119 --> 00:37:49,359
build something else if they wanted to

00:37:46,720 --> 00:37:51,920
yeah i mean we definitely try to collect

00:37:49,359 --> 00:37:54,160
the co2 emissions wherever we have them

00:37:51,920 --> 00:37:55,680
and we have estimates based on mode of

00:37:54,160 --> 00:37:58,160
transport and distance to get it where

00:37:55,680 --> 00:37:59,920
we don't have them

00:37:58,160 --> 00:38:01,359
i would like everyone to give volcker a

00:37:59,920 --> 00:38:04,079
big round of applause

00:38:01,359 --> 00:38:06,640
obviously virtually with a clapping

00:38:04,079 --> 00:38:06,640
emoji

00:38:07,359 --> 00:38:19,839
or otherwise

00:38:21,920 --> 00:38:25,520
and until volck will be around all week

00:38:24,000 --> 00:38:28,720
for questions

00:38:25,520 --> 00:38:31,280
exactly so if there's

00:38:28,720 --> 00:38:39,680
anything else you're interested in um

00:38:31,280 --> 00:38:39,680

YouTube URL: https://www.youtube.com/watch?v=iuyocCu28lE


