Title: Zowe Webinar Feb.  22, 2019
Publication date: 2020-10-19
Playlist: OMP Webinars
Description: 
	Steven Dickens, Open Mainframe Project Marketing Committee Chair and Global Sales Leader at IBM, hosts a webinar featuring Zowe developers Sujay Solomon, Global Product Manager at Broadcom, Alex Kim, Systems z Solutions Architect with Vicom, and Sean Grady, Software Engineer at Rocket Software as they share an overview and best practices, walk through a demo and answer questions.
Captions: 
	00:00:12,520 --> 00:00:15,850
[Music]

00:00:26,920 --> 00:00:31,109
[Music]

00:00:57,910 --> 00:01:00,970
[Music]

00:01:22,950 --> 00:01:31,000
are we recording yet mainland really do

00:01:27,130 --> 00:01:33,070
we want to get going let's go good

00:01:31,000 --> 00:01:34,870
morning good evening good afternoon

00:01:33,070 --> 00:01:36,700
wherever you are in the world my name's

00:01:34,870 --> 00:01:39,070
Steven Dickens and I'm gonna be your

00:01:36,700 --> 00:01:43,360
master of ceremonies for today we've got

00:01:39,070 --> 00:01:45,280
a 65 of you with us today at the current

00:01:43,360 --> 00:01:49,600
count hopefully that number is going to

00:01:45,280 --> 00:01:53,610
increase so we're gonna cover today a

00:01:49,600 --> 00:01:57,130
really interesting project which is Zoe

00:01:53,610 --> 00:01:59,680
I'm gonna let the guys on the team over

00:01:57,130 --> 00:02:03,850
the period of the next hour go through

00:01:59,680 --> 00:02:05,410
and give you some more detail but mainly

00:02:03,850 --> 00:02:08,290
if you can maybe move us to the next

00:02:05,410 --> 00:02:11,410
chart this issue we've got on the on the

00:02:08,290 --> 00:02:14,560
call today so we've got sue Jade from

00:02:11,410 --> 00:02:17,500
Broadcom we've got Alex from Viacom and

00:02:14,560 --> 00:02:19,959
we've got Sean Grady from rocket and I

00:02:17,500 --> 00:02:22,120
really still a group of technical

00:02:19,959 --> 00:02:24,430
professionals who were really driving

00:02:22,120 --> 00:02:27,430
forward this community so I'm gonna let

00:02:24,430 --> 00:02:29,709
those guys be the star of the show here

00:02:27,430 --> 00:02:31,150
as we drive forward but I'm just gonna

00:02:29,709 --> 00:02:34,570
spend a few moments getting you

00:02:31,150 --> 00:02:37,720
orientated on what the open mainframe

00:02:34,570 --> 00:02:40,420
project is and what we're trying to do

00:02:37,720 --> 00:02:42,400
before I hand over to as I say the stars

00:02:40,420 --> 00:02:44,980
of our show and I'm gonna try and keep

00:02:42,400 --> 00:02:49,570
this as interactive this is not going to

00:02:44,980 --> 00:02:50,680
be hopefully too heavyweight and we're

00:02:49,570 --> 00:02:52,750
gonna really try and keep this

00:02:50,680 --> 00:02:56,800
interactive and I'm gonna keep the guys

00:02:52,750 --> 00:03:01,209
hopefully rolling and make this as as

00:02:56,800 --> 00:03:05,340
fun for you Lots as possible so what are

00:03:01,209 --> 00:03:09,370
we seeing with Linux on the platform the

00:03:05,340 --> 00:03:11,610
mainframe is really starting to get

00:03:09,370 --> 00:03:13,840
traction in the open-source community

00:03:11,610 --> 00:03:16,570
we're starting to see it become a

00:03:13,840 --> 00:03:19,450
pervasive technology we're starting to

00:03:16,570 --> 00:03:21,549
see widespread adoption and mainly if

00:03:19,450 --> 00:03:25,959
you start to move me forward through the

00:03:21,549 --> 00:03:28,900
next chart you'll see that we're seeing

00:03:25,959 --> 00:03:31,120
that start to reach quite significant

00:03:28,900 --> 00:03:34,510
levels of the mainframe install base so

00:03:31,120 --> 00:03:36,520
Linux and then open source is really

00:03:34,510 --> 00:03:39,850
sort of a key factor for us

00:03:36,520 --> 00:03:41,770
so if you click to the next one but the

00:03:39,850 --> 00:03:44,130
rationale for the open mainframe project

00:03:41,770 --> 00:03:47,050
was that as we saw that rapid adoption

00:03:44,130 --> 00:03:51,280
we didn't have a community built around

00:03:47,050 --> 00:03:54,880
the platform we didn't have people in

00:03:51,280 --> 00:03:57,730
these in the marketplace driving forward

00:03:54,880 --> 00:04:01,510
this technology it was an individual

00:03:57,730 --> 00:04:03,910
challenge there was no shared effort the

00:04:01,510 --> 00:04:06,070
events that were going on out there the

00:04:03,910 --> 00:04:10,390
meetups and the various activities were

00:04:06,070 --> 00:04:12,640
kind of vendor vendor specific they were

00:04:10,390 --> 00:04:16,060
maybe not pulling on the whole of the

00:04:12,640 --> 00:04:18,489
community the students and academic

00:04:16,060 --> 00:04:20,650
institutions were struggling to find a

00:04:18,489 --> 00:04:23,620
way to engage and then we were

00:04:20,650 --> 00:04:25,690
struggling to engage with the overall

00:04:23,620 --> 00:04:27,820
open source community and get our

00:04:25,690 --> 00:04:30,940
projects upstream so I had the pleasure

00:04:27,820 --> 00:04:33,760
back in early 2015 of working with the

00:04:30,940 --> 00:04:37,120
Linux Foundation to found the open man

00:04:33,760 --> 00:04:39,690
project and really look to put in place

00:04:37,120 --> 00:04:42,840
a framework to address these challenges

00:04:39,690 --> 00:04:45,220
so mainly and if you move me ahead so

00:04:42,840 --> 00:04:49,510
kind of what does the Linux Foundation

00:04:45,220 --> 00:04:51,310
do they're a home for these types of

00:04:49,510 --> 00:04:53,410
projects when you want to get a center

00:04:51,310 --> 00:04:56,980
of gravity around a particular

00:04:53,410 --> 00:04:59,920
technology or an effort in the open

00:04:56,980 --> 00:05:01,660
source kind of community you really

00:04:59,920 --> 00:05:04,150
should be working with the Linux

00:05:01,660 --> 00:05:07,600
Foundation they are the the stewards of

00:05:04,150 --> 00:05:09,970
open source in the same way that they're

00:05:07,600 --> 00:05:13,060
building community around blockchain

00:05:09,970 --> 00:05:15,310
with the hyper ledger phaedra hyper

00:05:13,060 --> 00:05:18,640
ledger project when you look at what

00:05:15,310 --> 00:05:21,850
they're doing with the automotive

00:05:18,640 --> 00:05:26,460
industry looking to collaborate around

00:05:21,850 --> 00:05:29,650
usage of Linux in dashboards and in and

00:05:26,460 --> 00:05:32,050
processor units for engines you know all

00:05:29,650 --> 00:05:34,930
of those types of projects need a place

00:05:32,050 --> 00:05:37,720
together how do you bring disparate

00:05:34,930 --> 00:05:39,280
parts of the community together and give

00:05:37,720 --> 00:05:41,320
them the home where they can

00:05:39,280 --> 00:05:44,080
collaborator and that's really what the

00:05:41,320 --> 00:05:49,000
core value proposition of the Linux

00:05:44,080 --> 00:05:50,050
Foundation is so to give you a view of

00:05:49,000 --> 00:05:52,900
the Linux

00:05:50,050 --> 00:05:54,729
foundation's kind of focus on the open

00:05:52,900 --> 00:05:57,520
mainframe project we're a collaborative

00:05:54,729 --> 00:06:00,599
project underneath their collaborative

00:05:57,520 --> 00:06:03,819
project structure we've now got 29

00:06:00,599 --> 00:06:06,580
organizations we are three years since

00:06:03,819 --> 00:06:08,650
we launched back in 2015 we've got open

00:06:06,580 --> 00:06:10,180
source projects and we're gonna spend

00:06:08,650 --> 00:06:13,599
the rest of the time today talking

00:06:10,180 --> 00:06:16,930
through one of those specifically and

00:06:13,599 --> 00:06:20,139
we've been driving a really strong focus

00:06:16,930 --> 00:06:26,110
around skills and getting new

00:06:20,139 --> 00:06:27,310
professionals onto this platform so what

00:06:26,110 --> 00:06:31,020
are we trying to do what are the

00:06:27,310 --> 00:06:34,360
specifics here so we're trying to give

00:06:31,020 --> 00:06:38,490
the open source a place to live we're

00:06:34,360 --> 00:06:41,710
trying to provide the infrastructure

00:06:38,490 --> 00:06:44,650
governance some of the legal frameworks

00:06:41,710 --> 00:06:46,810
and then try and give the tools for this

00:06:44,650 --> 00:06:50,039
ecosystem to flourish

00:06:46,810 --> 00:06:54,360
so hosting meetups as a core function

00:06:50,039 --> 00:06:56,979
giving out capabilities around slack

00:06:54,360 --> 00:06:59,139
marshaling the efforts around get up all

00:06:56,979 --> 00:07:01,389
of the sort of tools that you need for a

00:06:59,139 --> 00:07:04,539
community to flourish that's where the

00:07:01,389 --> 00:07:06,430
focus has been and obviously if you want

00:07:04,539 --> 00:07:08,440
to get involved in the same and you're a

00:07:06,430 --> 00:07:10,900
developer and get up is where you spend

00:07:08,440 --> 00:07:13,810
your time we've got a strong open

00:07:10,900 --> 00:07:16,240
mainframe project focus on get up and

00:07:13,810 --> 00:07:22,449
that's where our code and our

00:07:16,240 --> 00:07:25,180
development effort lives so just to give

00:07:22,449 --> 00:07:27,550
some sort of view providing that

00:07:25,180 --> 00:07:29,979
infrastructure trying to harness the

00:07:27,550 --> 00:07:32,740
power and the crowdsource nature of open

00:07:29,979 --> 00:07:36,699
source in that developer community also

00:07:32,740 --> 00:07:38,710
Drive market awareness so composition

00:07:36,699 --> 00:07:42,639
the mainframe platform as an open source

00:07:38,710 --> 00:07:46,539
platform but also help the vendors with

00:07:42,639 --> 00:07:51,849
governance and IP as IBM looked to

00:07:46,539 --> 00:07:52,420
donate code as broad common rocket look

00:07:51,849 --> 00:07:55,529
to down

00:07:52,420 --> 00:07:55,529
[Music]

00:07:55,890 --> 00:08:03,880
but the vendors come into this community

00:08:00,810 --> 00:08:05,160
projects they need help and guidance and

00:08:03,880 --> 00:08:07,660
governance and the Linux Foundation

00:08:05,160 --> 00:08:09,160
enables us to do that and you'll see

00:08:07,660 --> 00:08:11,260
some of the projects you know we've had

00:08:09,160 --> 00:08:13,180
interns portal point which is the

00:08:11,260 --> 00:08:16,030
fundamental technology underneath docker

00:08:13,180 --> 00:08:19,120
to the platform and we're trying to

00:08:16,030 --> 00:08:22,240
engage these upstream projects to make

00:08:19,120 --> 00:08:28,420
sure that the mainframe is considered a

00:08:22,240 --> 00:08:30,340
first-class citizen in this open-source

00:08:28,420 --> 00:08:32,770
framework so really just here

00:08:30,340 --> 00:08:35,620
eliminating some of the barriers trying

00:08:32,770 --> 00:08:37,810
to demonstrate value to people who are

00:08:35,620 --> 00:08:39,940
considering this platform and then

00:08:37,810 --> 00:08:41,979
strengthening the collaboration out

00:08:39,940 --> 00:08:44,980
there in the community and providing

00:08:41,979 --> 00:08:46,690
that center of gravity if you will so

00:08:44,980 --> 00:08:49,360
that the community can gather around

00:08:46,690 --> 00:08:53,170
this platform that's really the mission

00:08:49,360 --> 00:08:56,230
so you know I'm really proud of this

00:08:53,170 --> 00:08:58,720
next job the work we've been doing with

00:08:56,230 --> 00:09:01,360
these young professionals as they come

00:08:58,720 --> 00:09:04,510
to this platform with ran an intern

00:09:01,360 --> 00:09:08,140
program since year one we're just about

00:09:04,510 --> 00:09:10,170
to close I think today for the 2019

00:09:08,140 --> 00:09:12,040
program so hurry up if you're still

00:09:10,170 --> 00:09:16,450
considering that or you know somebody

00:09:12,040 --> 00:09:19,600
would consider that we've taken interns

00:09:16,450 --> 00:09:21,370
through the program and you know proud

00:09:19,600 --> 00:09:23,860
to see some of the fresh faces here

00:09:21,370 --> 00:09:25,720
you've then gone through this program

00:09:23,860 --> 00:09:28,930
and they're now working in the mainframe

00:09:25,720 --> 00:09:34,930
community with with employers on their

00:09:28,930 --> 00:09:36,400
first jobs so if you like the sound of

00:09:34,930 --> 00:09:38,880
my voice and you want to hear more about

00:09:36,400 --> 00:09:42,520
what we're doing on a monthly basis and

00:09:38,880 --> 00:09:45,040
then we run a I'm a mainframe of podcast

00:09:42,520 --> 00:09:48,220
a couple of the members of the group

00:09:45,040 --> 00:09:50,920
here today have been on this in previous

00:09:48,220 --> 00:09:54,430
episodes it's really a way for people to

00:09:50,920 --> 00:09:55,930
tell their story and I'm I'm the host of

00:09:54,430 --> 00:09:59,350
the show but I'm not the star of the

00:09:55,930 --> 00:10:01,390
show because it's really how I spend my

00:09:59,350 --> 00:10:05,650
time trying to get the guys who and

00:10:01,390 --> 00:10:09,190
girls who join this podcast series to

00:10:05,650 --> 00:10:11,470
tell their story and really position how

00:10:09,190 --> 00:10:14,069
they're leveraging this technology to

00:10:11,470 --> 00:10:17,199
not only build their careers but also

00:10:14,069 --> 00:10:22,720
drive forward the clients and software

00:10:17,199 --> 00:10:24,310
vendors that they're working for lots of

00:10:22,720 --> 00:10:26,050
different ways you can engage with us at

00:10:24,310 --> 00:10:28,029
the open mainframe project we've got

00:10:26,050 --> 00:10:31,689
slack channels we've got a discourse

00:10:28,029 --> 00:10:33,220
community we've sponsor meetups that's

00:10:31,689 --> 00:10:35,079
one of those coming in a few weeks time

00:10:33,220 --> 00:10:38,439
in banning New York that you can get

00:10:35,079 --> 00:10:40,449
involved in and multiple others so these

00:10:38,439 --> 00:10:42,730
are the ways you've been getting engaged

00:10:40,449 --> 00:10:44,350
and if personally if you're out there

00:10:42,730 --> 00:10:46,269
and you're on Twitter and you want some

00:10:44,350 --> 00:10:48,579
of these channels look out for me I'm

00:10:46,269 --> 00:10:51,990
happy to get you orientated and get you

00:10:48,579 --> 00:10:55,180
connected to the community as a whole

00:10:51,990 --> 00:10:56,949
so how to participate if any want to

00:10:55,180 --> 00:11:00,100
learn more you know we're obviously

00:10:56,949 --> 00:11:01,870
looking for people at a corporate level

00:11:00,100 --> 00:11:04,120
to get involved we're looking for

00:11:01,870 --> 00:11:07,930
academics to get involved we're looking

00:11:04,120 --> 00:11:09,759
for individuals to get involved if you

00:11:07,930 --> 00:11:11,800
just want to contribute some code and

00:11:09,759 --> 00:11:13,569
you don't want to get involved in yeah

00:11:11,800 --> 00:11:15,310
higher level elements of the project

00:11:13,569 --> 00:11:18,220
that's completely fine

00:11:15,310 --> 00:11:22,060
find us on github download some code

00:11:18,220 --> 00:11:24,480
play with the code contribute and just

00:11:22,060 --> 00:11:27,220
get engaged that way but if you want to

00:11:24,480 --> 00:11:29,110
go all the way to the top of this and

00:11:27,220 --> 00:11:31,720
get your corporation involved then

00:11:29,110 --> 00:11:34,480
there's even a way for your organization

00:11:31,720 --> 00:11:36,339
to become a corporate sponsor and here's

00:11:34,480 --> 00:11:39,220
some of the links so I'm gonna kind of

00:11:36,339 --> 00:11:40,480
pause there and start to hand over to

00:11:39,220 --> 00:11:43,329
the guys who were gonna pick up the

00:11:40,480 --> 00:11:47,880
slack and get us through where we are

00:11:43,329 --> 00:11:47,880
around the exciting project that is Zoey

00:11:48,959 --> 00:11:52,120
thanks Tina

00:11:50,589 --> 00:11:54,370
this is sue Jay Solomon from-from

00:11:52,120 --> 00:11:56,230
Broadcom as as Steven mentioned earlier

00:11:54,370 --> 00:11:59,350
I'm just gonna give you guys a quick

00:11:56,230 --> 00:12:01,420
overview of how Zoey started and then

00:11:59,350 --> 00:12:03,970
some of the major components mean me and

00:12:01,420 --> 00:12:04,959
Shaun Grady we'll be covering some of

00:12:03,970 --> 00:12:07,269
the major components like the

00:12:04,959 --> 00:12:10,389
command-line interface

00:12:07,269 --> 00:12:14,050
web desktop GUI as well as the API

00:12:10,389 --> 00:12:16,089
mediation layer that are part of today

00:12:14,050 --> 00:12:17,680
before we get into the tech side of

00:12:16,089 --> 00:12:22,330
things just a little bit of history you

00:12:17,680 --> 00:12:25,650
know in 2018 March of 2018

00:12:22,330 --> 00:12:30,060
IBM rocket software and CA technologies

00:12:25,650 --> 00:12:33,160
known as Broadcom today we kind of all

00:12:30,060 --> 00:12:35,080
realized that we're on a similar path

00:12:33,160 --> 00:12:38,230
but going through it with slightly

00:12:35,080 --> 00:12:39,820
different directions what we all wanted

00:12:38,230 --> 00:12:41,950
to modernize the way folks were

00:12:39,820 --> 00:12:44,140
interacting with the mainframe platform

00:12:41,950 --> 00:12:46,510
whether you're a sis prog whether you're

00:12:44,140 --> 00:12:48,490
a developer or you're somebody who's on

00:12:46,510 --> 00:12:51,460
the operations side we kind of wanted to

00:12:48,490 --> 00:12:53,620
really modernize the interface into all

00:12:51,460 --> 00:12:55,900
of those for all those folks using the

00:12:53,620 --> 00:12:57,460
platform and because we realize that we

00:12:55,900 --> 00:13:00,010
were on a similar path with slightly

00:12:57,460 --> 00:13:02,020
different directions we kind of got

00:13:00,010 --> 00:13:04,090
together and said hey why don't we use

00:13:02,020 --> 00:13:07,270
this as an opportunity to really push

00:13:04,090 --> 00:13:11,500
this into the realm of open source and

00:13:07,270 --> 00:13:13,390
and then we came across the OMP or open

00:13:11,500 --> 00:13:14,800
mainframe project and it ended up being

00:13:13,390 --> 00:13:18,310
the perfect place for us to really

00:13:14,800 --> 00:13:22,120
launch the zoe project as you can see up

00:13:18,310 --> 00:13:25,270
there it was launched in august of 2018

00:13:22,120 --> 00:13:27,610
at the share event that was held in st.

00:13:25,270 --> 00:13:29,320
Louis and actually the the next

00:13:27,610 --> 00:13:30,700
iteration of that is coming up in a

00:13:29,320 --> 00:13:33,790
couple of weeks so hopefully I'll see

00:13:30,700 --> 00:13:35,500
many of you there but yeah that was an

00:13:33,790 --> 00:13:38,470
event where we launched it and we got

00:13:35,500 --> 00:13:41,230
reception there a lot of folks joining

00:13:38,470 --> 00:13:44,410
our community as you can see there's 700

00:13:41,230 --> 00:13:46,810
plus folks engaged on slack it's really

00:13:44,410 --> 00:13:49,570
a great place you know for me even if

00:13:46,810 --> 00:13:52,600
I'm not particularly building something

00:13:49,570 --> 00:13:55,780
right now if I just had a question about

00:13:52,600 --> 00:13:58,510
just z/os or mainframe in general just

00:13:55,780 --> 00:14:00,610
this has grown into a network of folks

00:13:58,510 --> 00:14:02,890
who are just very open and willing to

00:14:00,610 --> 00:14:04,660
share the knowledge that they have and

00:14:02,890 --> 00:14:06,610
and it's really it's great for folks we

00:14:04,660 --> 00:14:08,410
just want to get engaged in the platform

00:14:06,610 --> 00:14:10,750
and start learning and start actually

00:14:08,410 --> 00:14:13,090
contributing into the community in

00:14:10,750 --> 00:14:15,460
addition to that we actually have 50

00:14:13,090 --> 00:14:17,560
plus active committers where we're

00:14:15,460 --> 00:14:20,590
constantly making changes to the code

00:14:17,560 --> 00:14:24,310
that's part of Zoe and in terms of users

00:14:20,590 --> 00:14:27,220
we've seen over 1,700 beta downloads

00:14:24,310 --> 00:14:29,860
while we just recently went GA a couple

00:14:27,220 --> 00:14:32,800
weeks ago which with 1.0 which we called

00:14:29,860 --> 00:14:34,780
production ready but before that we ran

00:14:32,800 --> 00:14:36,150
our beta program for a few months and

00:14:34,780 --> 00:14:38,550
there was a lot of entry

00:14:36,150 --> 00:14:40,770
there of course if you want to learn

00:14:38,550 --> 00:14:41,160
more about Zoe in general let's go to

00:14:40,770 --> 00:14:44,820
Zoe

00:14:41,160 --> 00:14:47,400
org it's now GA starting February 7th

00:14:44,820 --> 00:14:50,940
and the licensing here I want to focus

00:14:47,400 --> 00:14:53,220
on is is EPL 2.0 the reason that we

00:14:50,940 --> 00:14:54,360
settled on EPL 2.0 which is

00:14:53,220 --> 00:14:57,510
eclipse-based

00:14:54,360 --> 00:15:00,210
is that it's it's a it's a licensing

00:14:57,510 --> 00:15:02,400
model that is very conducive to to

00:15:00,210 --> 00:15:04,230
enterprise great software which is also

00:15:02,400 --> 00:15:06,150
open source so you can rest assured that

00:15:04,230 --> 00:15:07,980
you know this is open source but we've

00:15:06,150 --> 00:15:10,700
really taken into account the fact that

00:15:07,980 --> 00:15:13,830
this will be running in an enterprise

00:15:10,700 --> 00:15:16,920
mainframes and we've adopted a licensing

00:15:13,830 --> 00:15:19,070
model that really works for that you

00:15:16,920 --> 00:15:22,650
could switch over to the next slide May

00:15:19,070 --> 00:15:25,050
so in today's world there you've got

00:15:22,650 --> 00:15:27,600
development teams you have operations

00:15:25,050 --> 00:15:29,400
teams whether they're internal facing or

00:15:27,600 --> 00:15:31,470
they're they're more on the IET side of

00:15:29,400 --> 00:15:34,410
things they have to use a lot of

00:15:31,470 --> 00:15:37,310
different interfaces and tools if they

00:15:34,410 --> 00:15:39,900
want to tie a mainframe into their their

00:15:37,310 --> 00:15:42,300
DevOps model or their infrastructure

00:15:39,900 --> 00:15:44,340
services model and just you know on here

00:15:42,300 --> 00:15:46,710
just a few examples you might be

00:15:44,340 --> 00:15:49,140
interacting with you so today or the

00:15:46,710 --> 00:15:50,970
ispf interface or if you're more on the

00:15:49,140 --> 00:15:53,370
development side and you might be using

00:15:50,970 --> 00:15:55,080
eclipse and then if you're doing

00:15:53,370 --> 00:15:57,510
automation on the mainframe you might be

00:15:55,080 --> 00:16:00,150
using Rex or JCL and sometimes you have

00:15:57,510 --> 00:16:01,800
to interact with USS as well but going

00:16:00,150 --> 00:16:05,520
over to the next slide just where we

00:16:01,800 --> 00:16:07,950
want to take this is same you know same

00:16:05,520 --> 00:16:10,560
underlying services on the mainframe you

00:16:07,950 --> 00:16:12,840
have jobs on the mainframe or TSO

00:16:10,560 --> 00:16:16,560
commands and all of these services like

00:16:12,840 --> 00:16:19,080
cakes and and db2 and such but what we

00:16:16,560 --> 00:16:21,180
want to do with Zoe is kind of API

00:16:19,080 --> 00:16:23,130
enable the administrative and

00:16:21,180 --> 00:16:25,440
development aspects of all of those

00:16:23,130 --> 00:16:28,950
services on the mainframe and allow you

00:16:25,440 --> 00:16:32,760
as a developer as a sis prog as an

00:16:28,950 --> 00:16:35,840
administrator or security person be able

00:16:32,760 --> 00:16:38,460
to access those same services from

00:16:35,840 --> 00:16:41,040
interfaces that make sense and our

00:16:38,460 --> 00:16:43,020
modern you whether it's a web GUI that

00:16:41,040 --> 00:16:44,910
that Shawn's going to talk about or if

00:16:43,020 --> 00:16:47,490
it's a command-line interface that's for

00:16:44,910 --> 00:16:49,710
the purpose of automation and scripting

00:16:47,490 --> 00:16:51,840
or you know if you want to use

00:16:49,710 --> 00:16:54,690
the API is directly to build your own

00:16:51,840 --> 00:16:56,910
cool modern tools like what Alex is

00:16:54,690 --> 00:17:00,960
gonna show later it's all gonna be

00:16:56,910 --> 00:17:04,170
enabled through Zoe thanks like please

00:17:00,960 --> 00:17:06,690
so the first thing first piece we're

00:17:04,170 --> 00:17:08,459
gonna focus on component is the command

00:17:06,690 --> 00:17:10,920
line interface and I just a little bit

00:17:08,459 --> 00:17:14,850
of background on why we're focusing on a

00:17:10,920 --> 00:17:17,820
CLI you know you might realize that that

00:17:14,850 --> 00:17:19,680
a CLI is inner as an interface has been

00:17:17,820 --> 00:17:22,560
around forever right if you're

00:17:19,680 --> 00:17:25,110
interacting with a console commands even

00:17:22,560 --> 00:17:27,810
on the mainframe that's a CLI if you're

00:17:25,110 --> 00:17:30,210
using Linux and you're issuing commands

00:17:27,810 --> 00:17:34,940
on there or you know even today's cloud

00:17:30,210 --> 00:17:37,740
platforms like IBM cloud or AWS or or

00:17:34,940 --> 00:17:39,960
modern tools like git and and docker

00:17:37,740 --> 00:17:41,850
they all have a command-line interface

00:17:39,960 --> 00:17:44,520
because that allows you to automate and

00:17:41,850 --> 00:17:47,610
script in your language of choice in

00:17:44,520 --> 00:17:48,540
your tool of choice so going to the next

00:17:47,610 --> 00:17:52,170
slide

00:17:48,540 --> 00:17:54,480
word kind of borrowing from taking a

00:17:52,170 --> 00:17:57,330
leap off of that and and and building a

00:17:54,480 --> 00:18:00,090
command-line interface called Zoe CLI

00:17:57,330 --> 00:18:02,040
which comes with a set of core commands

00:18:00,090 --> 00:18:05,100
that let you interact with the operating

00:18:02,040 --> 00:18:06,840
system for example TSO commands console

00:18:05,100 --> 00:18:09,000
commands data sets and jobs on the

00:18:06,840 --> 00:18:12,810
mainframe and in addition to that we

00:18:09,000 --> 00:18:16,830
also in Zoe we have a few plugins for

00:18:12,810 --> 00:18:19,950
db2 or for for CICS and of course any

00:18:16,830 --> 00:18:23,100
other software vendor or customers

00:18:19,950 --> 00:18:25,380
yourself you can you can also extend Zoe

00:18:23,100 --> 00:18:26,940
CLI to build your own plug-ins for

00:18:25,380 --> 00:18:29,880
services that you would like to interact

00:18:26,940 --> 00:18:33,180
with from a CLI and this now opens the

00:18:29,880 --> 00:18:35,700
doors for your DevOps engineers or your

00:18:33,180 --> 00:18:37,740
application developers or anybody who

00:18:35,700 --> 00:18:40,260
really wants to do some off platform

00:18:37,740 --> 00:18:43,740
scripting using languages like Python

00:18:40,260 --> 00:18:45,870
shell or bash or JavaScript you name it

00:18:43,740 --> 00:18:47,790
these all of these scripting languages

00:18:45,870 --> 00:18:50,310
can easily consume a command-line

00:18:47,790 --> 00:18:53,160
interface and that opens the doors to

00:18:50,310 --> 00:18:56,340
using tools like Jenkins for continuous

00:18:53,160 --> 00:18:59,520
integration or mocha or just for test

00:18:56,340 --> 00:19:02,040
automation or gulp or Gradle for as a

00:18:59,520 --> 00:19:05,070
task runner so that's the intent here is

00:19:02,040 --> 00:19:07,740
with the CLI we

00:19:05,070 --> 00:19:10,110
mainframe interaction from a from a

00:19:07,740 --> 00:19:12,300
client perspective the automation we

00:19:10,110 --> 00:19:13,680
don't want you to be tied to just Rex

00:19:12,300 --> 00:19:16,560
and of course there's nothing wrong with

00:19:13,680 --> 00:19:18,900
the Rex but I mean today's developers

00:19:16,560 --> 00:19:20,730
and folks we grow up on other languages

00:19:18,900 --> 00:19:24,710
like Python and clutch and this opens

00:19:20,730 --> 00:19:24,710
the doors for that so next slide please

00:19:25,080 --> 00:19:29,850
you know one of the common questions

00:19:27,090 --> 00:19:32,190
that I see is how do I call mainframe

00:19:29,850 --> 00:19:33,810
from Jenkins and and and you know more

00:19:32,190 --> 00:19:36,360
than the technical aspect of that we

00:19:33,810 --> 00:19:39,120
really we want to call on everybody here

00:19:36,360 --> 00:19:41,070
as a community to help answer things

00:19:39,120 --> 00:19:44,070
like this this is the third thing that

00:19:41,070 --> 00:19:46,500
comes up is Stack Exchange a question

00:19:44,070 --> 00:19:48,390
was on there and I'm seeing responses on

00:19:46,500 --> 00:19:50,670
there that actually talked about calling

00:19:48,390 --> 00:19:53,430
Jenkins using a command-line interface

00:19:50,670 --> 00:19:56,280
or using plugins and such and we really

00:19:53,430 --> 00:19:58,110
need folks to start going to some of

00:19:56,280 --> 00:20:00,870
these community platforms that are used

00:19:58,110 --> 00:20:02,070
by developers all over the world to

00:20:00,870 --> 00:20:04,290
start answering some of these questions

00:20:02,070 --> 00:20:06,870
so that the awareness that there are

00:20:04,290 --> 00:20:09,270
these modern tools through Zoe available

00:20:06,870 --> 00:20:11,370
for the mainframe now you know the other

00:20:09,270 --> 00:20:14,070
thing is command-line interfaces are

00:20:11,370 --> 00:20:16,790
also used to can be used to build some

00:20:14,070 --> 00:20:20,640
very easy integration with today's IDs

00:20:16,790 --> 00:20:23,280
or text editors most of you are probably

00:20:20,640 --> 00:20:25,290
aware of git and if you go to a modern

00:20:23,280 --> 00:20:27,270
IDE it probably has built-in git

00:20:25,290 --> 00:20:30,120
integration believe it or not that's

00:20:27,270 --> 00:20:32,670
actually just usually built on top of

00:20:30,120 --> 00:20:35,880
the get CLI that's installed on your

00:20:32,670 --> 00:20:38,550
machine the same way I believe we

00:20:35,880 --> 00:20:42,120
actually had a few interns here at at

00:20:38,550 --> 00:20:45,870
Broadcom who built a Visual Studio code

00:20:42,120 --> 00:20:49,950
extension using Zoe CLI in a matter of a

00:20:45,870 --> 00:20:51,720
few weeks in fact and once we once they

00:20:49,950 --> 00:20:53,910
place that on the marketplace you can

00:20:51,720 --> 00:20:55,830
see that there's there's more than 500

00:20:53,910 --> 00:20:58,860
downloads already in the last four or

00:20:55,830 --> 00:21:00,840
five months and a person from

00:20:58,860 --> 00:21:04,680
open-source actually came looked at that

00:21:00,840 --> 00:21:06,810
they went to Zoe's github repo and they

00:21:04,680 --> 00:21:09,030
said hey this looks cool I can use this

00:21:06,810 --> 00:21:10,850
to interact with data sets on vs code

00:21:09,030 --> 00:21:14,030
but I also want to submit

00:21:10,850 --> 00:21:16,770
Dana's our submit jobs using this

00:21:14,030 --> 00:21:18,840
extension so they actually went ahead

00:21:16,770 --> 00:21:20,580
made some modifications to the open

00:21:18,840 --> 00:21:23,370
source code for this extension and

00:21:20,580 --> 00:21:25,110
allowed the extension to submit jobs as

00:21:23,370 --> 00:21:27,059
well so that's kind of what we want to

00:21:25,110 --> 00:21:28,710
promote as a community as part of Zoey

00:21:27,059 --> 00:21:30,059
is is you know if you see if you see

00:21:28,710 --> 00:21:33,179
something you like and you start using

00:21:30,059 --> 00:21:35,730
it and and if you've got ideas on how to

00:21:33,179 --> 00:21:37,920
improve it please come to get hub please

00:21:35,730 --> 00:21:39,300
participate in the community and if

00:21:37,920 --> 00:21:42,179
you're if you've got the time and

00:21:39,300 --> 00:21:44,309
interest to actually make that change we

00:21:42,179 --> 00:21:46,429
would welcome that as well just just get

00:21:44,309 --> 00:21:48,900
into the code and start building things

00:21:46,429 --> 00:21:50,580
next slide please

00:21:48,900 --> 00:21:54,300
so if you could start playing this so

00:21:50,580 --> 00:21:56,250
this is just a very short video on just

00:21:54,300 --> 00:21:58,260
that the command line interface portion

00:21:56,250 --> 00:22:02,160
of Zoey so you can see here we're gonna

00:21:58,260 --> 00:22:03,840
focus on the CL a piece of Zoe here

00:22:02,160 --> 00:22:07,080
we'll be talking about the other piece

00:22:03,840 --> 00:22:09,270
later but in a nutshell you're gonna use

00:22:07,080 --> 00:22:11,520
a CLI to script things and using the

00:22:09,270 --> 00:22:14,130
scripts you can then orchestrate things

00:22:11,520 --> 00:22:16,650
like continuous integration but here I'm

00:22:14,130 --> 00:22:18,840
just I'm just on a terminal on a bash

00:22:16,650 --> 00:22:20,580
terminal on my machine they shoot a

00:22:18,840 --> 00:22:22,410
command to download a member from the

00:22:20,580 --> 00:22:25,110
mainframe and that downloaded

00:22:22,410 --> 00:22:27,840
successfully I'm opening that up in this

00:22:25,110 --> 00:22:29,670
case envious code making a quick change

00:22:27,840 --> 00:22:31,620
they're going into the integrated

00:22:29,670 --> 00:22:34,590
terminal there and I'm issuing another

00:22:31,620 --> 00:22:36,900
Zoe CLI command upload dismember to the

00:22:34,590 --> 00:22:40,230
mainframe now and there we go it says

00:22:36,900 --> 00:22:42,630
that it was uploaded successfully next

00:22:40,230 --> 00:22:45,300
after we made the JCL change we're gonna

00:22:42,630 --> 00:22:47,640
do a submit of the job again using the

00:22:45,300 --> 00:22:50,190
command line interface we can see that

00:22:47,640 --> 00:22:51,929
it's in input status now once we've

00:22:50,190 --> 00:22:53,429
submitted it we can check the status and

00:22:51,929 --> 00:22:55,710
it was a quick job it ended with a

00:22:53,429 --> 00:22:59,250
completion code of zero and it's now in

00:22:55,710 --> 00:23:01,230
output status next will list all the

00:22:59,250 --> 00:23:03,030
spool datasets that are part of that job

00:23:01,230 --> 00:23:06,090
so there's four there and I am

00:23:03,030 --> 00:23:08,070
interested in particular on 103 which is

00:23:06,090 --> 00:23:11,160
sysout so let's look at the results from

00:23:08,070 --> 00:23:12,870
that and it says we did it from Zoe CLI

00:23:11,160 --> 00:23:15,630
because this is actually a COBOL program

00:23:12,870 --> 00:23:19,470
that we ran in batch mode on the

00:23:15,630 --> 00:23:22,530
mainframe now we're gonna open up this

00:23:19,470 --> 00:23:24,750
script here where all of those actions

00:23:22,530 --> 00:23:27,120
that you saw being issued manually now

00:23:24,750 --> 00:23:28,890
we just threw it into a simple shell

00:23:27,120 --> 00:23:30,010
script we're running the shell script

00:23:28,890 --> 00:23:32,980
and it's performed

00:23:30,010 --> 00:23:35,200
those same actions very quickly where it

00:23:32,980 --> 00:23:38,890
uploaded the data set then it submitted

00:23:35,200 --> 00:23:41,860
the batch job it's waiting until it goes

00:23:38,890 --> 00:23:44,350
into output mode and it ends up with a

00:23:41,860 --> 00:23:47,950
completion 0 and all of the output from

00:23:44,350 --> 00:23:51,460
the job is actually displayed on your

00:23:47,950 --> 00:23:54,670
command line itself now the same script

00:23:51,460 --> 00:23:56,920
you can now take that and easily call it

00:23:54,670 --> 00:23:59,200
from Jenkins and now you've kind of got

00:23:56,920 --> 00:24:02,290
Dean level continuous integration and

00:23:59,200 --> 00:24:04,270
automation going and that's what we're

00:24:02,290 --> 00:24:07,600
seeing here is which it's the same shell

00:24:04,270 --> 00:24:09,370
script and we're putting it into we're

00:24:07,600 --> 00:24:11,380
calling it from Jenkins we're pushing

00:24:09,370 --> 00:24:14,050
that change in the Jenkins which is

00:24:11,380 --> 00:24:17,170
going to trigger your pipeline here and

00:24:14,050 --> 00:24:19,570
it's using actually of the the Zoe CLI

00:24:17,170 --> 00:24:21,760
is is in a docker container there that

00:24:19,570 --> 00:24:23,620
that Jenkins is kicking off and you can

00:24:21,760 --> 00:24:27,880
see that all of the same actions now

00:24:23,620 --> 00:24:29,770
have also been performed from Jenkins so

00:24:27,880 --> 00:24:32,020
that was a quick introduction to the CLI

00:24:29,770 --> 00:24:35,200
you can see that you know interactively

00:24:32,020 --> 00:24:37,330
it may not be the best interface but

00:24:35,200 --> 00:24:39,430
when it comes to client-side automation

00:24:37,330 --> 00:24:42,280
scripting integration with DevOps tools

00:24:39,430 --> 00:24:44,860
it is the ideal interface for that so

00:24:42,280 --> 00:24:49,210
really expand it out add more services

00:24:44,860 --> 00:24:50,920
to it the next thing though is is we're

00:24:49,210 --> 00:24:53,500
gonna move on to talking about the web

00:24:50,920 --> 00:24:56,020
desktop which is another angle right you

00:24:53,500 --> 00:24:58,180
know CLI is great for scripting and

00:24:56,020 --> 00:25:00,610
automation but when it comes to a user

00:24:58,180 --> 00:25:03,820
interacting with a graphical interface

00:25:00,610 --> 00:25:08,470
we have a web desktop in Zoe that that

00:25:03,820 --> 00:25:13,120
Sean will talk about thanks AJ so hello

00:25:08,470 --> 00:25:16,360
everyone this is Sean Grady and with Zoe

00:25:13,120 --> 00:25:18,730
we were looking at the how people use

00:25:16,360 --> 00:25:21,370
the mainframe today how they interact

00:25:18,730 --> 00:25:25,990
with it and we saw that there were many

00:25:21,370 --> 00:25:27,820
different approaches to making a modern

00:25:25,990 --> 00:25:30,220
and intuitive interface for interacting

00:25:27,820 --> 00:25:32,350
with the mainframe you know ultimately

00:25:30,220 --> 00:25:36,940
the last time in which there was really

00:25:32,350 --> 00:25:39,760
a standard interface was 30 to 70 and

00:25:36,940 --> 00:25:42,730
ispf and so since then people have gone

00:25:39,760 --> 00:25:44,080
in different directions one thing that

00:25:42,730 --> 00:25:46,120
people have done is may

00:25:44,080 --> 00:25:48,460
you know programs that you would install

00:25:46,120 --> 00:25:50,020
on a Windows computer that would

00:25:48,460 --> 00:25:53,470
communicate with the mainframe in some

00:25:50,020 --> 00:25:56,470
way and that provides you with a very

00:25:53,470 --> 00:25:58,630
nice UI but have certain problems with

00:25:56,470 --> 00:26:00,730
well you have to install this on

00:25:58,630 --> 00:26:03,070
multiple computers or it might only work

00:26:00,730 --> 00:26:04,840
on certain operating systems and you

00:26:03,070 --> 00:26:10,300
know maybe there's more prereqs to

00:26:04,840 --> 00:26:12,370
consider so we saw that more recently

00:26:10,300 --> 00:26:15,790
people making websites to interact with

00:26:12,370 --> 00:26:17,770
the mainframe and this you know has

00:26:15,790 --> 00:26:23,429
different pros and cons with websites

00:26:17,770 --> 00:26:26,230
you have a near or truely's zero install

00:26:23,429 --> 00:26:28,090
however websites tend to be

00:26:26,230 --> 00:26:30,550
compartmentalized you know you have one

00:26:28,090 --> 00:26:34,240
website that's for db2 and another for

00:26:30,550 --> 00:26:36,280
your IMS and so we were thinking would

00:26:34,240 --> 00:26:38,170
so we you know how do we really get

00:26:36,280 --> 00:26:40,030
everyone on the same page with

00:26:38,170 --> 00:26:42,700
interacting on the mainframe so that

00:26:40,030 --> 00:26:45,220
it's intuitive it's efficient and that

00:26:42,700 --> 00:26:47,890
the next generation can be on boarded

00:26:45,220 --> 00:26:50,920
onto the platform without really having

00:26:47,890 --> 00:26:53,830
to learn anything that's specialized

00:26:50,920 --> 00:26:57,010
when a lot of the interactions that do

00:26:53,830 --> 00:26:59,740
on a computer are universally applicable

00:26:57,010 --> 00:27:01,840
you know whether whether you are on one

00:26:59,740 --> 00:27:04,540
operating system or another you're still

00:27:01,840 --> 00:27:06,910
executing programs and dealing with data

00:27:04,540 --> 00:27:12,340
and so we want to really make that

00:27:06,910 --> 00:27:14,230
experience uniform so so we're looking

00:27:12,340 --> 00:27:19,059
at this challenge and if we go to the

00:27:14,230 --> 00:27:22,420
next slide we can look at the solution

00:27:19,059 --> 00:27:25,390
that we came up with so what we wanted

00:27:22,420 --> 00:27:27,610
to do was have a zero install so that

00:27:25,390 --> 00:27:31,410
people can use this on any system that

00:27:27,610 --> 00:27:34,809
they have and give them the kind of

00:27:31,410 --> 00:27:36,280
tooling that they have come to expect on

00:27:34,809 --> 00:27:39,160
a user interface from a desktop

00:27:36,280 --> 00:27:42,490
application and to really have

00:27:39,160 --> 00:27:44,890
everything in one place so that the

00:27:42,490 --> 00:27:47,710
programs that they have can interact to

00:27:44,890 --> 00:27:51,190
help give insights and help do a

00:27:47,710 --> 00:27:56,650
workflow very quickly so what we built

00:27:51,190 --> 00:27:57,430
is a single page application but the the

00:27:56,650 --> 00:28:00,220
twist that we

00:27:57,430 --> 00:28:03,400
have here is that this single page

00:28:00,220 --> 00:28:05,530
application allows you to have multiple

00:28:03,400 --> 00:28:09,190
apps running simultaneously

00:28:05,530 --> 00:28:11,140
so with these noe app framework what

00:28:09,190 --> 00:28:13,870
we're doing here is now it's possible to

00:28:11,140 --> 00:28:16,390
have multiple apps written by different

00:28:13,870 --> 00:28:19,390
parties using different web technologies

00:28:16,390 --> 00:28:22,120
to coexist within the same web page and

00:28:19,390 --> 00:28:26,260
this is really powerful for us because

00:28:22,120 --> 00:28:29,800
this way you can you know interact with

00:28:26,260 --> 00:28:32,530
db2 and IMS and other aspects of the

00:28:29,800 --> 00:28:34,960
mainframe all in one place all without

00:28:32,530 --> 00:28:38,380
installing anything on the client

00:28:34,960 --> 00:28:40,090
machine and it really runs on pretty

00:28:38,380 --> 00:28:42,460
much every operating system that a

00:28:40,090 --> 00:28:46,240
client would use including things like

00:28:42,460 --> 00:28:51,730
Chromebooks so this is all powered by

00:28:46,240 --> 00:28:57,610
modern web technologies Java Script ACMA

00:28:51,730 --> 00:29:01,330
Script six html5 CSS the performance of

00:28:57,610 --> 00:29:03,430
this apps are loaded just in time just

00:29:01,330 --> 00:29:07,930
as if they are on a desktop operating

00:29:03,430 --> 00:29:10,170
system such that if you have you know 50

00:29:07,930 --> 00:29:13,270
apps it's not going to make the page

00:29:10,170 --> 00:29:15,430
slower to load apps are just loaded when

00:29:13,270 --> 00:29:18,180
they're needed and so memory consumption

00:29:15,430 --> 00:29:21,220
is also kept in check we have them

00:29:18,180 --> 00:29:23,800
deduplication of common library so if

00:29:21,220 --> 00:29:25,870
everyone is using bootstrap for their

00:29:23,800 --> 00:29:29,620
web development it's only loaded once

00:29:25,870 --> 00:29:33,580
instead of many times so let's go to the

00:29:29,620 --> 00:29:36,160
next page and here's just a picture of

00:29:33,580 --> 00:29:38,290
the login screen of Zoe and you can see

00:29:36,160 --> 00:29:42,670
that as I said here this is a single

00:29:38,290 --> 00:29:44,290
page web application and it's just

00:29:42,670 --> 00:29:47,170
running in Google Chrome in this image

00:29:44,290 --> 00:29:49,240
and this login screen the credentials in

00:29:47,170 --> 00:29:51,690
which you put in here are going to be

00:29:49,240 --> 00:29:54,760
checked against staff so we are not

00:29:51,690 --> 00:29:56,590
adding any new security model to the

00:29:54,760 --> 00:29:58,930
mainframe we were just using what is

00:29:56,590 --> 00:30:03,730
there so every every bit of security

00:29:58,930 --> 00:30:05,620
still applies so next slide please on

00:30:03,730 --> 00:30:07,780
this web desktop you know one of the

00:30:05,620 --> 00:30:09,700
things that we do for demo is a full

00:30:07,780 --> 00:30:11,210
screen the browser and that way it looks

00:30:09,700 --> 00:30:14,240
like a real desktop

00:30:11,210 --> 00:30:18,260
than in a page but but it really does

00:30:14,240 --> 00:30:20,480
just act like a desktop one of the one

00:30:18,260 --> 00:30:23,870
of the reasons why we did this we have a

00:30:20,480 --> 00:30:27,919
motto all of the old and all of the new

00:30:23,870 --> 00:30:29,960
we we respect that on mainframe people

00:30:27,919 --> 00:30:31,909
may have become accustomed to doing

00:30:29,960 --> 00:30:34,850
something a certain way very efficiently

00:30:31,909 --> 00:30:37,490
and so in making a new interface we

00:30:34,850 --> 00:30:39,980
didn't want to take anything away from

00:30:37,490 --> 00:30:42,799
what people currently do we just wanted

00:30:39,980 --> 00:30:47,899
to give them options to do everything in

00:30:42,799 --> 00:30:49,720
one place and to have avenues for new

00:30:47,899 --> 00:30:52,190
programs that can help them in new ways

00:30:49,720 --> 00:30:54,620
so the first thing that you'll see in

00:30:52,190 --> 00:30:58,010
the site of the Zoe's desktop is that we

00:30:54,620 --> 00:30:59,720
have a 3270 terminal again it's a zero

00:30:58,010 --> 00:31:02,809
install thing that works in the browser

00:30:59,720 --> 00:31:04,970
so if you have any existing workflows in

00:31:02,809 --> 00:31:07,850
a terminal you're not left out here it

00:31:04,970 --> 00:31:09,740
is there but additionally you'll see

00:31:07,850 --> 00:31:12,320
some new apps

00:31:09,740 --> 00:31:15,470
the Explorers will help you to interact

00:31:12,320 --> 00:31:19,039
with files and datasets and jazz we are

00:31:15,470 --> 00:31:21,950
working on an editor and really if you

00:31:19,039 --> 00:31:25,190
have any website that pre-exists

00:31:21,950 --> 00:31:29,779
that website can be hosted in this thing

00:31:25,190 --> 00:31:32,750
page so the catalog of zoe software that

00:31:29,779 --> 00:31:34,700
you can do in the UI it really starts

00:31:32,750 --> 00:31:36,919
off including everything that's already

00:31:34,700 --> 00:31:41,809
on the internet and then building upon

00:31:36,919 --> 00:31:44,980
the services that that the zoe project

00:31:41,809 --> 00:31:49,159
itself is giving to the community and

00:31:44,980 --> 00:31:51,890
allowing you to program in your favorite

00:31:49,159 --> 00:31:55,940
languages so let's go to the next slide

00:31:51,890 --> 00:31:59,990
and see an example of some of these apps

00:31:55,940 --> 00:32:02,659
so here's the terminal looking at Kroc

00:31:59,990 --> 00:32:04,850
lib and we can see the same thing in the

00:32:02,659 --> 00:32:08,600
MVS Explorer so really this is just

00:32:04,850 --> 00:32:11,149
giving us choice to look at something in

00:32:08,600 --> 00:32:13,789
the way that feels most natural to us so

00:32:11,149 --> 00:32:15,830
you might have one person who wants the

00:32:13,789 --> 00:32:18,950
UI and another person who wants the

00:32:15,830 --> 00:32:22,490
terminal and both of these people will

00:32:18,950 --> 00:32:25,179
be happy in this environment so let's go

00:32:22,490 --> 00:32:25,179
to the next slide

00:32:26,060 --> 00:32:32,570
here is another view looking at

00:32:31,010 --> 00:32:36,560
different jobs that are being executed

00:32:32,570 --> 00:32:37,850
and so you can see here that one of the

00:32:36,560 --> 00:32:39,830
things that you can do in this

00:32:37,850 --> 00:32:40,460
environment is you can start from one

00:32:39,830 --> 00:32:43,370
amp

00:32:40,460 --> 00:32:46,010
gain insights from it and move to

00:32:43,370 --> 00:32:49,010
another app one of the things that

00:32:46,010 --> 00:32:52,610
exists in this structure is an apps app

00:32:49,010 --> 00:32:54,350
communication channel so if you found

00:32:52,610 --> 00:32:57,050
out some insights from a jazz explorer

00:32:54,350 --> 00:33:00,170
you might be able to jump from the JS

00:32:57,050 --> 00:33:01,970
Explorer in context to the terminal or

00:33:00,170 --> 00:33:04,550
an editor or something that would be

00:33:01,970 --> 00:33:09,910
able to logically help you do your

00:33:04,550 --> 00:33:09,910
day-to-day tasks next slide please

00:33:11,290 --> 00:33:17,060
okay so as I was saying earlier the the

00:33:15,470 --> 00:33:21,910
goal here is really to have everything

00:33:17,060 --> 00:33:25,970
in one place when it comes to UI and so

00:33:21,910 --> 00:33:27,860
this is going to be using something that

00:33:25,970 --> 00:33:30,020
we'll talk about shortly the API

00:33:27,860 --> 00:33:32,720
mediation layer another component of

00:33:30,020 --> 00:33:36,950
zebedee that just helps to represent

00:33:32,720 --> 00:33:43,690
everything as coming from one place so

00:33:36,950 --> 00:33:49,270
let's go to the next slide so if you are

00:33:43,690 --> 00:33:52,190
interested in taking your product and

00:33:49,270 --> 00:33:54,170
adding them to this Zoe environment

00:33:52,190 --> 00:33:56,720
there's multiple avenues that you can

00:33:54,170 --> 00:33:59,630
take number one here is if you have a

00:33:56,720 --> 00:34:01,460
pre-existing site you can connect it to

00:33:59,630 --> 00:34:02,420
the mediation layer which we'll talk

00:34:01,460 --> 00:34:05,570
about shortly

00:34:02,420 --> 00:34:08,060
and that just allows to be hosted within

00:34:05,570 --> 00:34:11,690
the same domain and once it's in the

00:34:08,060 --> 00:34:14,990
same domain we have different wrappers

00:34:11,690 --> 00:34:17,929
for being able to include apps in the

00:34:14,990 --> 00:34:20,690
Zoe UI and one of these wrappers is an

00:34:17,929 --> 00:34:22,820
iframe wrapper which allows pre-existing

00:34:20,690 --> 00:34:25,669
web sites to be contained inside of a

00:34:22,820 --> 00:34:30,679
window here so what we see on the screen

00:34:25,669 --> 00:34:34,010
is a website it's called Jupiter it's a

00:34:30,679 --> 00:34:37,460
a free data science notebook for Python

00:34:34,010 --> 00:34:37,700
programmers and this Jupiter server and

00:34:37,460 --> 00:34:43,790
this

00:34:37,700 --> 00:34:45,889
image was running on z/os and simply we

00:34:43,790 --> 00:34:49,879
were able to put it inside of that zoe

00:34:45,889 --> 00:34:53,119
desktop by just having this window that

00:34:49,879 --> 00:34:58,520
says point to this jupiter server this

00:34:53,119 --> 00:35:00,849
way people can collaborate by utilizing

00:34:58,520 --> 00:35:04,300
the Zoe app that they already have and

00:35:00,849 --> 00:35:11,810
comparing them to these websites that

00:35:04,300 --> 00:35:14,839
pre-existed Zoe next slide so here

00:35:11,810 --> 00:35:18,380
here's the other thing that you can do

00:35:14,839 --> 00:35:20,089
in the UI if you're making programs is

00:35:18,380 --> 00:35:23,359
if you want to make a program from

00:35:20,089 --> 00:35:26,900
scratch in the web there are there are

00:35:23,359 --> 00:35:30,099
new popular and upcoming web frameworks

00:35:26,900 --> 00:35:32,530
such as angular react and view and

00:35:30,099 --> 00:35:35,329
people can get into you spirited

00:35:32,530 --> 00:35:37,099
discussions about which one is best when

00:35:35,329 --> 00:35:39,290
they're making a new program and

00:35:37,099 --> 00:35:41,810
normally you have to decide on one

00:35:39,290 --> 00:35:44,319
but in Zoe we've come up with a way in

00:35:41,810 --> 00:35:48,710
which that's not a case you can actually

00:35:44,319 --> 00:35:52,190
program in your favorite web framework

00:35:48,710 --> 00:35:53,780
and have a coexist with other apps and

00:35:52,190 --> 00:35:57,230
Zoe that were written in a different

00:35:53,780 --> 00:35:59,930
framework so we're able to have this

00:35:57,230 --> 00:36:02,000
sort of encapsulation of different

00:35:59,930 --> 00:36:07,550
frameworks within this within the same

00:36:02,000 --> 00:36:10,550
webpage we we do this through use of web

00:36:07,550 --> 00:36:13,940
pack if people are interested we can

00:36:10,550 --> 00:36:16,369
always talk on slack but really the idea

00:36:13,940 --> 00:36:18,950
is if you're making a new program you're

00:36:16,369 --> 00:36:22,040
able to continue writing in the

00:36:18,950 --> 00:36:25,160
framework that you're familiar with with

00:36:22,040 --> 00:36:28,160
very minor differences and you're also

00:36:25,160 --> 00:36:30,170
getting a lot for free here because now

00:36:28,160 --> 00:36:33,319
that you're in this multi app

00:36:30,170 --> 00:36:36,260
environment you can start to make use of

00:36:33,319 --> 00:36:38,560
things like our notification API or app

00:36:36,260 --> 00:36:42,260
app communication and we've just

00:36:38,560 --> 00:36:44,030
included all of these api's into the

00:36:42,260 --> 00:36:46,670
frameworks that you don't have to

00:36:44,030 --> 00:36:48,880
reinvent the wheel and you can get a lot

00:36:46,670 --> 00:36:51,750
of value without a lot of effort so

00:36:48,880 --> 00:36:55,230
that's all in the Zoe

00:36:51,750 --> 00:36:58,130
I now for the next slide I think we're

00:36:55,230 --> 00:37:01,380
on to the mediation layer so thank you

00:36:58,130 --> 00:37:04,020
thanks Sean and you know this is the

00:37:01,380 --> 00:37:06,710
next topic here is you you we saw two

00:37:04,020 --> 00:37:09,600
clients here and keep licking through me

00:37:06,710 --> 00:37:12,900
we saw a couple of clients right we saw

00:37:09,600 --> 00:37:14,940
a command-line interface using api's on

00:37:12,900 --> 00:37:18,900
the mainframe to help you automate

00:37:14,940 --> 00:37:21,810
things then we saw another client in the

00:37:18,900 --> 00:37:24,570
GUI and multiple applications within the

00:37:21,810 --> 00:37:26,670
GUI using API is on the mainframe again

00:37:24,570 --> 00:37:30,080
let you perform actions and look at data

00:37:26,670 --> 00:37:33,630
on the mainframe now in today's world

00:37:30,080 --> 00:37:36,480
without Zoe in the picture you've got

00:37:33,630 --> 00:37:39,060
this sort of of a client-server

00:37:36,480 --> 00:37:41,670
architecture where all of the clients

00:37:39,060 --> 00:37:43,980
are very tightly tied to their own

00:37:41,670 --> 00:37:46,560
server that's running on the mainframe

00:37:43,980 --> 00:37:48,900
and that really is not ideal because

00:37:46,560 --> 00:37:50,910
you're you you're not gonna have a

00:37:48,900 --> 00:37:53,940
single sign-on so everybody has to log

00:37:50,910 --> 00:37:56,160
on the each server individually in terms

00:37:53,940 --> 00:37:59,700
of security the certificates are are

00:37:56,160 --> 00:38:02,070
very much separated out so just resolve

00:37:59,700 --> 00:38:05,280
all of this go ahead may in the next

00:38:02,070 --> 00:38:08,250
slide we've introduced an API gateway

00:38:05,280 --> 00:38:10,710
into the Zoe infrastructure which will

00:38:08,250 --> 00:38:13,680
kind of sit in the middle and and allow

00:38:10,710 --> 00:38:16,500
all of these clients that are out there

00:38:13,680 --> 00:38:18,300
the gooeys the CL is automation that you

00:38:16,500 --> 00:38:20,790
might be building your own tools like

00:38:18,300 --> 00:38:24,120
what alex is going to show they can all

00:38:20,790 --> 00:38:26,640
go through the API gateway to get data

00:38:24,120 --> 00:38:28,020
from all of these api's and servers that

00:38:26,640 --> 00:38:30,090
are running on the mainframe and it

00:38:28,020 --> 00:38:32,580
comes with a lot of advantages this

00:38:30,090 --> 00:38:35,910
might provide a single sign-on it

00:38:32,580 --> 00:38:38,430
provides us a consolidated API catalog

00:38:35,910 --> 00:38:40,860
where we have all of the swagger doc on

00:38:38,430 --> 00:38:42,150
there and so on and so forth so this is

00:38:40,860 --> 00:38:43,770
you know this may not be the most

00:38:42,150 --> 00:38:45,770
interesting thing but infrastructure why

00:38:43,770 --> 00:38:48,240
is it really gets everything together

00:38:45,770 --> 00:38:50,120
from an architectural perspective and

00:38:48,240 --> 00:38:52,890
next slide please

00:38:50,120 --> 00:38:56,760
here's a quick screenshot here where we

00:38:52,890 --> 00:38:58,980
have the API catalog for Zoe on there we

00:38:56,760 --> 00:39:00,420
can see that there are a bunch of

00:38:58,980 --> 00:39:04,050
services that are already up and running

00:39:00,420 --> 00:39:05,490
datasets and job services from a Zoe API

00:39:04,050 --> 00:39:07,320
perspective we all

00:39:05,490 --> 00:39:09,330
so have integration with the z/osmf

00:39:07,320 --> 00:39:12,680
service as well and it's showing you

00:39:09,330 --> 00:39:12,680
here that it's up and running as well

00:39:17,240 --> 00:39:21,990
and then there's you know there's a lot

00:39:20,640 --> 00:39:24,600
of development going on from a

00:39:21,990 --> 00:39:27,300
commercial aspect with this you can see

00:39:24,600 --> 00:39:31,530
iBM has a new IDE called huazi that's

00:39:27,300 --> 00:39:33,030
powered by Zoe CA or Broadcom we have a

00:39:31,530 --> 00:39:35,940
product called bright side which is

00:39:33,030 --> 00:39:37,830
based on Zoe there's quite a few rocket

00:39:35,940 --> 00:39:39,930
products one of them is blue zone web

00:39:37,830 --> 00:39:42,090
that's that's based on Zoe so it's not

00:39:39,930 --> 00:39:43,950
just the open-source big companies are

00:39:42,090 --> 00:39:45,690
starting to actually leverage this for

00:39:43,950 --> 00:39:48,270
their commercial products and it's going

00:39:45,690 --> 00:39:50,760
to keep on growing so now a little

00:39:48,270 --> 00:39:52,619
dishonor I'll forward it to to Alex

00:39:50,760 --> 00:39:55,320
who's going to talk about some of the

00:39:52,619 --> 00:40:00,410
innovations that that has been built on

00:39:55,320 --> 00:40:03,510
top of Zoe Queen thank you stay in

00:40:00,410 --> 00:40:06,570
Stevenage Sean my name is Alice came

00:40:03,510 --> 00:40:08,430
from my bike home infinity we are at the

00:40:06,570 --> 00:40:16,050
ibm's premier business partner for

00:40:08,430 --> 00:40:19,859
mainframe so we were trying to show you

00:40:16,050 --> 00:40:22,920
know a lot of technologies on how we can

00:40:19,859 --> 00:40:28,080
utilize it and help customers to use it

00:40:22,920 --> 00:40:30,090
and we we had a chance to work on a fun

00:40:28,080 --> 00:40:32,010
project the voice interface for the

00:40:30,090 --> 00:40:34,530
mainframe how you can talk to the

00:40:32,010 --> 00:40:37,800
mainframe we have a lot of you know up

00:40:34,530 --> 00:40:40,560
there Alexa echo and Google home and

00:40:37,800 --> 00:40:44,220
Cherie or not your smartphones the

00:40:40,560 --> 00:40:44,970
people use it every day my case my son

00:40:44,220 --> 00:40:48,720
you know

00:40:44,970 --> 00:40:50,520
is 88 months old and he knows that if I

00:40:48,720 --> 00:40:52,590
say Alexa that he knows that the baby

00:40:50,520 --> 00:40:56,100
shark song will come out so he's so

00:40:52,590 --> 00:40:58,230
dancing and start laughing around some

00:40:56,100 --> 00:41:00,930
people use it every day but not many

00:40:58,230 --> 00:41:03,570
people use at all because they are

00:41:00,930 --> 00:41:06,119
afraid they voice and conversation will

00:41:03,570 --> 00:41:09,660
be stored in the cloud somewhere and

00:41:06,119 --> 00:41:11,640
someone might take advantage of it so we

00:41:09,660 --> 00:41:14,460
were thinking about how we can make it

00:41:11,640 --> 00:41:18,000
safer and secure if they come to the

00:41:14,460 --> 00:41:19,080
enterprise space and we try to combine

00:41:18,000 --> 00:41:21,870
the

00:41:19,080 --> 00:41:24,930
systems II loose once secure container

00:41:21,870 --> 00:41:26,880
services and once an assistance the own

00:41:24,930 --> 00:41:29,370
pram version of it without having

00:41:26,880 --> 00:41:32,180
clogged private and we built us

00:41:29,370 --> 00:41:34,800
something called Viva over here that

00:41:32,180 --> 00:41:37,590
lets you try that you know instead it's

00:41:34,800 --> 00:41:40,170
a prototype and I'll MVP but you

00:41:37,590 --> 00:41:42,660
actually can show you how we can

00:41:40,170 --> 00:41:48,600
securely talk to the mainframe and data

00:41:42,660 --> 00:41:51,330
center operations we use the before Zoe

00:41:48,600 --> 00:41:55,580
we were using a bunch of different API

00:41:51,330 --> 00:41:59,340
from z/os and BCP III as well to

00:41:55,580 --> 00:42:03,780
demonstrate functions and answer the

00:41:59,340 --> 00:42:06,120
questions but with Zoe API catalog and

00:42:03,780 --> 00:42:11,210
mediation layer and Gateway we don't

00:42:06,120 --> 00:42:16,790
need to rely on third party outside of Z

00:42:11,210 --> 00:42:19,740
the u.s. API gateway like API Connect so

00:42:16,790 --> 00:42:22,560
long story short let me you can see the

00:42:19,740 --> 00:42:24,690
screen that we have a couple of unit

00:42:22,560 --> 00:42:27,420
circle commands that we or the

00:42:24,690 --> 00:42:32,940
demonstrated here and I'll show you a

00:42:27,420 --> 00:42:35,070
quick demo over here you can see my

00:42:32,940 --> 00:42:37,950
video you'll see probably a little

00:42:35,070 --> 00:42:40,440
device over here it's a prototype again

00:42:37,950 --> 00:42:48,360
it's a 3-2 predates so a little porky

00:42:40,440 --> 00:42:54,540
but uh we call it TJ and TJ what if the

00:42:48,360 --> 00:42:57,140
current CPU utilization the currency

00:42:54,540 --> 00:43:00,840
systems CPU utilization is one percent

00:42:57,140 --> 00:43:04,590
our system is very low utilized nothing

00:43:00,840 --> 00:43:06,630
running other than Zoe so um we have a

00:43:04,590 --> 00:43:11,100
couple of other you know command a we

00:43:06,630 --> 00:43:14,420
can try hey TJ what is the current I

00:43:11,100 --> 00:43:14,420
felt utilization

00:43:16,910 --> 00:43:22,140
the current total physical IFL

00:43:19,500 --> 00:43:26,310
utilization is 22.6%

00:43:22,140 --> 00:43:29,550
and we're thinking about a case where in

00:43:26,310 --> 00:43:33,390
the enterprise there is a BGA trading

00:43:29,550 --> 00:43:35,010
day your managers running you know busy

00:43:33,390 --> 00:43:37,020
and your system operators and

00:43:35,010 --> 00:43:38,970
programmers all heads down trying to

00:43:37,020 --> 00:43:41,100
solve the problems if there's any

00:43:38,970 --> 00:43:43,350
bottlenecks and and your manager wants

00:43:41,100 --> 00:43:46,290
to know how the mainframe is doing or

00:43:43,350 --> 00:43:48,300
bad stuff is doing and we want to kind

00:43:46,290 --> 00:43:50,730
of help them understand it if they're

00:43:48,300 --> 00:43:52,940
not you know hands-on people that how

00:43:50,730 --> 00:44:03,150
the mainframe is working today

00:43:52,940 --> 00:44:09,840
hey DJ hey DJ hey DJ hello my bad job

00:44:03,150 --> 00:44:12,630
run today I only have information about

00:44:09,840 --> 00:44:16,440
the sisty help our ski batch jobs they

00:44:12,630 --> 00:44:19,110
finished at 3:30 a.m. and sometimes you

00:44:16,440 --> 00:44:21,270
want to know about you know how your

00:44:19,110 --> 00:44:25,580
software license look like for this

00:44:21,270 --> 00:44:25,580
month compared to last month eighty day

00:44:25,790 --> 00:44:34,260
how is the outlook for my mainframe

00:44:28,770 --> 00:44:36,480
software bill for this month the current

00:44:34,260 --> 00:44:38,010
forecast for peak for our average is

00:44:36,480 --> 00:44:43,200
showing three percent less than last

00:44:38,010 --> 00:44:46,020
month I'm gonna mute for a second there

00:44:43,200 --> 00:44:48,210
are many use cases that you can think of

00:44:46,020 --> 00:44:50,880
you know disguise the limit not only

00:44:48,210 --> 00:44:53,240
from data center operations perspective

00:44:50,880 --> 00:44:57,210
but any visions application your db2

00:44:53,240 --> 00:45:00,650
CICS and Q you can you can create a lot

00:44:57,210 --> 00:45:00,650
of things and that you can create a

00:45:00,950 --> 00:45:08,330
application and also API calls through

00:45:05,130 --> 00:45:13,290
Zoe I just wanted to show you something

00:45:08,330 --> 00:45:17,340
quick like to thank especially some Zoe

00:45:13,290 --> 00:45:21,120
developers UK you know Colleen stone and

00:45:17,340 --> 00:45:24,840
Joann Chester they created this API

00:45:21,120 --> 00:45:27,810
called CPU uses it snapshot you can go

00:45:24,840 --> 00:45:29,490
to Zoe website and you can find more

00:45:27,810 --> 00:45:32,640
about it in the using the github

00:45:29,490 --> 00:45:35,460
and you can actually test it out

00:45:32,640 --> 00:45:39,770
yourself and you can if I want to I

00:45:35,460 --> 00:45:42,380
don't know if I can share my screen um

00:45:39,770 --> 00:45:50,240
let me see

00:45:42,380 --> 00:45:56,730
thank you right here so so this is the

00:45:50,240 --> 00:46:01,010
API catalog that you can see the CPU

00:45:56,730 --> 00:46:04,740
using a snapshot API that we added

00:46:01,010 --> 00:46:09,810
create by Colleen Stone from UK I've in

00:46:04,740 --> 00:46:12,510
UK and this is the one of the gap API

00:46:09,810 --> 00:46:16,260
requests you can see a current CPU

00:46:12,510 --> 00:46:20,760
utilization is one percent so it was

00:46:16,260 --> 00:46:23,460
very easy and simple to import and adopt

00:46:20,760 --> 00:46:26,040
to our you know the Riva application and

00:46:23,460 --> 00:46:27,810
there are many other API that you can

00:46:26,040 --> 00:46:29,310
use you can go over here in the github

00:46:27,810 --> 00:46:36,180
and you can try yourself

00:46:29,310 --> 00:46:43,140
so I wanted to go back head back to to

00:46:36,180 --> 00:46:46,560
Mei Stephen if you have any questions

00:46:43,140 --> 00:46:48,780
you know sending email and it helps me

00:46:46,560 --> 00:46:51,300
to help it was great working with a Zoe

00:46:48,780 --> 00:46:52,740
team because they are so helpful every

00:46:51,300 --> 00:46:55,230
time I have a question on the select

00:46:52,740 --> 00:46:57,480
channel everybody try to help me out so

00:46:55,230 --> 00:47:00,320
thank you again

00:46:57,480 --> 00:47:03,330
Joey team thanks Alex and and that

00:47:00,320 --> 00:47:05,160
voice-activated interface to the

00:47:03,330 --> 00:47:09,780
mainframe super cool we got to find a

00:47:05,160 --> 00:47:11,910
way to get that out to a wider audience

00:47:09,780 --> 00:47:14,339
Mei Lin and I were pinging in the

00:47:11,910 --> 00:47:17,010
background we need to kind of get you to

00:47:14,339 --> 00:47:19,170
run that demo just solely so that we can

00:47:17,010 --> 00:47:22,950
show the community the innovation that

00:47:19,170 --> 00:47:24,839
vikon's driving sure anymore thank you

00:47:22,950 --> 00:47:27,330
so really want to just sort of pause

00:47:24,839 --> 00:47:30,500
here we've got a huge community we've

00:47:27,330 --> 00:47:33,990
got I think 93 people on the line and

00:47:30,500 --> 00:47:35,880
we've seen quite a few questions already

00:47:33,990 --> 00:47:37,560
pop up in the chat and thanks to

00:47:35,880 --> 00:47:39,869
everybody who's dived in to try and

00:47:37,560 --> 00:47:42,350
answer some of those but really wanting

00:47:39,869 --> 00:47:44,840
to throw the line open now

00:47:42,350 --> 00:47:47,240
to anybody who's got a question whether

00:47:44,840 --> 00:47:49,880
it's super technical whether it's about

00:47:47,240 --> 00:47:52,310
how do I get engaged how does this type

00:47:49,880 --> 00:47:54,170
of project work we've got all the right

00:47:52,310 --> 00:47:56,840
people on the line here to get you

00:47:54,170 --> 00:48:03,020
orientated so I'll kind of pause there

00:47:56,840 --> 00:48:07,040
and open up the line to questions don't

00:48:03,020 --> 00:48:11,090
be shy like can you hear me yeah we can

00:48:07,040 --> 00:48:15,440
hear you go ahead I mean if we have to

00:48:11,090 --> 00:48:19,060
test anything like just on the cloud or

00:48:15,440 --> 00:48:25,100
something or can we do that without

00:48:19,060 --> 00:48:25,670
acting we can do hands-on on this on the

00:48:25,100 --> 00:48:30,260
software

00:48:25,670 --> 00:48:35,900
I mean CJ do you want to take that one

00:48:30,260 --> 00:48:44,690
about how customers are gonna do the

00:48:35,900 --> 00:48:46,460
testing approach they're the key to

00:48:44,690 --> 00:48:50,690
enabling a lot of the client-side

00:48:46,460 --> 00:48:52,940
advantages is setting up the api's as

00:48:50,690 --> 00:48:54,920
the first thing on the mainframe and a

00:48:52,940 --> 00:48:57,350
lot of what you saw today what Alex

00:48:54,920 --> 00:48:59,540
showed what what I showed and what Sean

00:48:57,350 --> 00:49:03,410
showed was with the GUI and CLI it's

00:48:59,540 --> 00:49:06,760
driven by some of the z/osmf API that

00:49:03,410 --> 00:49:09,640
are available as well as some Zoe

00:49:06,760 --> 00:49:13,220
layering Zoe's own ap eyes that are

00:49:09,640 --> 00:49:15,140
operating on top of z/osmf as well so

00:49:13,220 --> 00:49:18,710
setting up those api is on the mainframe

00:49:15,140 --> 00:49:20,870
and getting the security watertight on

00:49:18,710 --> 00:49:22,070
there is probably the most important

00:49:20,870 --> 00:49:25,160
first step to take

00:49:22,070 --> 00:49:27,710
after that being able to use a CLI being

00:49:25,160 --> 00:49:29,450
able to use the web GUI or any of the

00:49:27,710 --> 00:49:31,460
integrating it into any of your own

00:49:29,450 --> 00:49:35,920
homegrown applications it's it's a it's

00:49:31,460 --> 00:49:35,920
a second probably much easier step there

00:49:36,820 --> 00:49:41,510
JJ do you want to expand a little bit or

00:49:39,320 --> 00:49:43,670
maybe say how people are running this

00:49:41,510 --> 00:49:45,710
into a test environments in their own

00:49:43,670 --> 00:49:49,820
shop I mean what's the kind of best

00:49:45,710 --> 00:49:51,380
practice they're sure I'd say a lot of

00:49:49,820 --> 00:49:54,770
folks have just been interested in

00:49:51,380 --> 00:49:56,150
exploring the possibilities with Zoe and

00:49:54,770 --> 00:49:58,730
they usually take the

00:49:56,150 --> 00:50:01,640
of getting the api's and and the web

00:49:58,730 --> 00:50:04,549
gooeys back-end which includes the CSS

00:50:01,640 --> 00:50:07,460
server all of those running in perhaps

00:50:04,549 --> 00:50:10,250
just a sandbox environment in their in

00:50:07,460 --> 00:50:12,529
their tests telephone or such they get

00:50:10,250 --> 00:50:16,579
that going there they start actually

00:50:12,529 --> 00:50:20,329
using the CLI and the web GUI and then

00:50:16,579 --> 00:50:22,730
beyond that now able to start branching

00:50:20,329 --> 00:50:25,460
out and once you gain confidence in that

00:50:22,730 --> 00:50:30,680
and especially with one we know which is

00:50:25,460 --> 00:50:33,109
GA which was g8 last month we now claim

00:50:30,680 --> 00:50:41,869
that it's a production grade software

00:50:33,109 --> 00:50:43,549
and you're now a and then possibly in

00:50:41,869 --> 00:50:47,270
the production as well so that you've

00:50:43,549 --> 00:50:49,190
got full coverage there have we got any

00:50:47,270 --> 00:50:50,690
other questions some grants is that

00:50:49,190 --> 00:50:53,839
there's a guy have we got any other

00:50:50,690 --> 00:50:57,230
questions the group yeah we can hear you

00:50:53,839 --> 00:50:59,869
go ahead so does the Python plugin for

00:50:57,230 --> 00:51:06,369
zoe has the ability to issue MVS

00:50:59,869 --> 00:51:12,789
commands like suggested before you

00:51:06,369 --> 00:51:12,789
somebody's typing very heavy fingers

00:51:15,069 --> 00:51:21,589
that's better thank you

00:51:18,680 --> 00:51:23,029
so what I was when I was showing the

00:51:21,589 --> 00:51:24,740
command line in her face and I was

00:51:23,029 --> 00:51:27,140
saying that you can call it from from

00:51:24,740 --> 00:51:30,020
Python or any scripting language that

00:51:27,140 --> 00:51:32,089
was that was client-side Python so you

00:51:30,020 --> 00:51:35,180
don't necessarily have to run Python or

00:51:32,089 --> 00:51:37,400
any of the other scripts on z/os itself

00:51:35,180 --> 00:51:39,349
since the command line interface lets

00:51:37,400 --> 00:51:45,349
you call it from any client that you

00:51:39,349 --> 00:51:47,660
might have does that clarify that so is

00:51:45,349 --> 00:51:49,460
there any document for lake or the

00:51:47,660 --> 00:51:53,270
syntax or anything that we can

00:51:49,460 --> 00:51:55,789
absolutely so so the size of the CLI is

00:51:53,270 --> 00:51:59,150
self documented so if you download it on

00:51:55,789 --> 00:52:02,720
your PC a new issue Zoe

00:51:59,150 --> 00:52:04,789
help it'll bring up and in your

00:52:02,720 --> 00:52:08,150
particular question of being able to run

00:52:04,789 --> 00:52:09,530
rec scripts using the command line

00:52:08,150 --> 00:52:12,500
interface I believe

00:52:09,530 --> 00:52:15,860
you can invoke rec scripts using TSO

00:52:12,500 --> 00:52:19,070
commands and Zoe CLI lets you execute

00:52:15,860 --> 00:52:21,440
PSO commands as part of this set of core

00:52:19,070 --> 00:52:24,260
command and I've had lots of folks do

00:52:21,440 --> 00:52:26,660
that so they'll say Zoe TSL issue

00:52:24,260 --> 00:52:28,700
command and then you'll just do an exec

00:52:26,660 --> 00:52:31,040
for the directs exact that you have on a

00:52:28,700 --> 00:52:33,170
member or a data set on the mainframe

00:52:31,040 --> 00:52:36,440
and that should let you execute recs

00:52:33,170 --> 00:52:39,380
from any client-side script so you mean

00:52:36,440 --> 00:52:41,420
that you just have to download the CLI

00:52:39,380 --> 00:52:45,320
that's it I mean there is no software in

00:52:41,420 --> 00:52:47,900
the background sure so on on on the

00:52:45,320 --> 00:52:50,270
mainframe side what is powering those

00:52:47,900 --> 00:52:52,940
commands and actually the rest of what

00:52:50,270 --> 00:52:55,130
you saw here is is AP is on the

00:52:52,940 --> 00:52:57,710
mainframe and in particular for

00:52:55,130 --> 00:53:00,560
executing rec scripts using the TSO

00:52:57,710 --> 00:53:07,010
functionality you will need a facility

00:53:00,560 --> 00:53:10,130
called z/os z/osmf it comes with a set

00:53:07,010 --> 00:53:13,390
of REST API is and it's part of the OS

00:53:10,130 --> 00:53:18,430
operating system and a lot of Zoe's

00:53:13,390 --> 00:53:18,430
capabilities rely on z/os MF being there

00:53:18,910 --> 00:53:23,780
okay so when we are talking about the

00:53:21,620 --> 00:53:26,050
Python plugin is it going to be the

00:53:23,780 --> 00:53:30,610
IBM's version or the Rockets version

00:53:26,050 --> 00:53:34,430
that is being supported by Zoe right now

00:53:30,610 --> 00:53:38,390
so I'm I don't think we have a python

00:53:34,430 --> 00:53:40,730
plug-in in Zoe and I see Shawn posting

00:53:38,390 --> 00:53:45,410
in chat that I think you might be

00:53:40,730 --> 00:53:48,920
talking about something else that's

00:53:45,410 --> 00:53:52,700
that's yeah the rocket forum has the

00:53:48,920 --> 00:53:55,580
Python version for sauce 2.7 and 3.6 but

00:53:52,700 --> 00:53:58,450
it doesn't support issuing them via

00:53:55,580 --> 00:54:01,340
commands it just let run for jobs or

00:53:58,450 --> 00:54:17,360
like transferring the file sending it FD

00:54:01,340 --> 00:54:20,680
being from sauce to UNIX like that which

00:54:17,360 --> 00:54:20,680
one of you is going to answer those

00:54:22,240 --> 00:54:36,910
I could ask you to go on me or slim down

00:54:32,860 --> 00:54:38,230
your fingers whichever ones quicker so

00:54:36,910 --> 00:54:39,760
hey guys we had a couple of people

00:54:38,230 --> 00:54:44,230
talking just one of you want to take a

00:54:39,760 --> 00:54:46,810
spin at that answer yeah so when it

00:54:44,230 --> 00:54:49,990
comes to other open-source projects you

00:54:46,810 --> 00:54:55,030
know we would we would love to expand so

00:54:49,990 --> 00:54:58,750
we by helping it to make z/os you know

00:54:55,030 --> 00:55:00,850
as as good as can be however when it

00:54:58,750 --> 00:55:05,380
comes to things like Python and nodejs

00:55:00,850 --> 00:55:07,300
and yet these are all still while they

00:55:05,380 --> 00:55:12,160
are open-source projects they're outside

00:55:07,300 --> 00:55:15,550
of the zoe sphere so I think those sorts

00:55:12,160 --> 00:55:17,910
of questions we need to forward on to

00:55:15,550 --> 00:55:20,290
their respective forums for those groups

00:55:17,910 --> 00:55:24,190
yeah and that's a mission of the open

00:55:20,290 --> 00:55:25,990
mainframe project as a whole so Zoe's

00:55:24,190 --> 00:55:28,390
the sub project within the output

00:55:25,990 --> 00:55:30,730
mainframe project the mission and the

00:55:28,390 --> 00:55:33,160
mainframe project as a whole as a fine

00:55:30,730 --> 00:55:35,560
is to find a way to intercept intersect

00:55:33,160 --> 00:55:38,890
with those other upstream communities

00:55:35,560 --> 00:55:42,010
for other projects so you know through

00:55:38,890 --> 00:55:44,260
our shared parentage in the linux

00:55:42,010 --> 00:55:46,840
foundation we've got some of those great

00:55:44,260 --> 00:55:49,420
routes into this project so if a project

00:55:46,840 --> 00:55:51,940
needs help from another open source

00:55:49,420 --> 00:55:54,670
project we've got some really good

00:55:51,940 --> 00:55:56,620
channels in order to do that both at a

00:55:54,670 --> 00:56:02,470
technical level and at the commercial

00:55:56,620 --> 00:56:07,270
level and at an ownership level so guys

00:56:02,470 --> 00:56:11,260
we come with a specific go ahead sorry I

00:56:07,270 --> 00:56:13,810
cut across you that's very Steven new

00:56:11,260 --> 00:56:17,080
bats doing rap so the person asking the

00:56:13,810 --> 00:56:19,570
question about issuing MBS console

00:56:17,080 --> 00:56:22,390
commands so we do wish you a number of

00:56:19,570 --> 00:56:24,340
console commands during Zoe's install

00:56:22,390 --> 00:56:28,090
process and we actually have a shell

00:56:24,340 --> 00:56:32,860
script called upper command SH and that

00:56:28,090 --> 00:56:34,840
can be run so you could from Python if

00:56:32,860 --> 00:56:35,720
you wanted to you could use that shell

00:56:34,840 --> 00:56:38,119
script

00:56:35,720 --> 00:56:40,520
issue an MVS command reach out on slack

00:56:38,119 --> 00:56:42,829
if you want some more help and it's a

00:56:40,520 --> 00:56:44,650
it's not a use case that we built it for

00:56:42,829 --> 00:56:49,310
but it would work for you

00:56:44,650 --> 00:56:52,369
and you're welcome so close we're coming

00:56:49,310 --> 00:56:55,750
to the end here we've had as many as 93

00:56:52,369 --> 00:56:58,040
people on this call which is fantastic

00:56:55,750 --> 00:56:59,510
as you can see there's a vibrant

00:56:58,040 --> 00:57:01,579
community we've had a couple of

00:56:59,510 --> 00:57:03,890
different vendors we've had one of our

00:57:01,579 --> 00:57:06,319
business partners I think we've got a

00:57:03,890 --> 00:57:08,750
disparate community starting to build

00:57:06,319 --> 00:57:11,450
around this codebase I'd recommend

00:57:08,750 --> 00:57:14,359
anybody gets involved you know download

00:57:11,450 --> 00:57:15,460
the code get involved on github ask

00:57:14,359 --> 00:57:18,319
questions

00:57:15,460 --> 00:57:21,349
download slack get engaged we've got a

00:57:18,319 --> 00:57:24,500
really vibrant community starting to

00:57:21,349 --> 00:57:28,220
develop around this effort so just get

00:57:24,500 --> 00:57:30,230
involved it this is going to be a

00:57:28,220 --> 00:57:34,190
community effort as we drive forward

00:57:30,230 --> 00:57:36,260
this codebase is going to evolve it was

00:57:34,190 --> 00:57:38,690
contributed by three vendors but already

00:57:36,260 --> 00:57:40,910
we're starting to see it move beyond

00:57:38,690 --> 00:57:45,200
that and starting to see a community

00:57:40,910 --> 00:57:46,940
forum around this set of code so I'd

00:57:45,200 --> 00:57:49,190
encourage anybody to download the code

00:57:46,940 --> 00:57:51,410
and get stuck in we've got some key

00:57:49,190 --> 00:57:53,540
people here that you can reach out to on

00:57:51,410 --> 00:57:55,849
slack but just from what I've seen of

00:57:53,540 --> 00:57:58,160
that community that when anybody asks a

00:57:55,849 --> 00:58:00,579
question there's answers that are coming

00:57:58,160 --> 00:58:03,770
quickly so please engage with us and

00:58:00,579 --> 00:58:06,109
based on the evidence of this and 93

00:58:03,770 --> 00:58:08,180
people attending we won't be it will be

00:58:06,109 --> 00:58:10,910
certainly doing this again in the coming

00:58:08,180 --> 00:58:12,530
months and some will obviously try and

00:58:10,910 --> 00:58:14,900
publish that out and look to get you

00:58:12,530 --> 00:58:17,720
involved and look to make sure that you

00:58:14,900 --> 00:58:19,730
can attend those future calls and with

00:58:17,720 --> 00:58:21,710
that mail in are I'll look to wrap the

00:58:19,730 --> 00:58:23,480
call and give everybody back at the top

00:58:21,710 --> 00:58:25,579
of the hour so now you're going to shade

00:58:23,480 --> 00:58:28,160
that are you gonna share this light oh

00:58:25,579 --> 00:58:30,380
yeah so everything we share today will

00:58:28,160 --> 00:58:32,540
put out on slack and we'll try and find

00:58:30,380 --> 00:58:38,300
a put it way to put it on either so we

00:58:32,540 --> 00:58:42,950
org or open mainframe project org thank

00:58:38,300 --> 00:58:44,450
you so male in our I'll wrap proceedings

00:58:42,950 --> 00:58:46,640
there and if you want to just close out

00:58:44,450 --> 00:58:49,690
the call that'll be fantastic wonderful

00:58:46,640 --> 00:58:49,690

YouTube URL: https://www.youtube.com/watch?v=XixEltbRmds


