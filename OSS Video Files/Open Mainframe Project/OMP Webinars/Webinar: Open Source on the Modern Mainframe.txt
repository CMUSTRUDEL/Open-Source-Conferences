Title: Webinar: Open Source on the Modern Mainframe
Publication date: 2020-10-19
Playlist: OMP Webinars
Description: 
	Open Mainframe Project logo

The open source movement has rapidly become the way code is being developed for today’s smart and agile businesses. This webinar will cover how an “open mainframe” is the perfect solution for deploying open source on an enterprise computing platform. You will learn how the open source community has gathered around the mainframe platform and how Open Mainframe Project is the starting point for open development.

On April 17 at 8 am PST, Open Mainframe Project will host a webinar titled “Open Source on the Modern Mainframe.“Join this roundtable session to learn the latest approaches to integrating the mainframe into modern devops tooling and practices to accelerate delivery and drive true cross-platform applications. Open Mainframe Project leaders from IBM, SUSE, VCU, Velocity Software and Western & Southern Financial Group will share insight and roadmaps about several open source projects under the OMP umbrella that can help with your devops needs.


Open Mainframe Project leaders from IBM, SUSE, VCU, Velocity Software and Western & Southern Financial Group will share insight and roadmaps about several open source projects under the OMP umbrella, including Ambitus, Feilong, Polycephaly, Zowe and Zorow, that can help with your devops needs.


Speakers:
Len Santalucia, CTO and Business Development Manager at Vicom Infinity and Chairperson of the Governing Board of the Linux Foundation’s Open Mainframe Project


Jerry Edgington, Senior Systems Analyst at Western & Southern Financial Group and lead for OMP’s Polycephaly project


Sujay Solomon, Chief Z DevOps Advocate for Broadcom and member of OMP’s Zowe Leadership Committee



Joe Winchester, IBM Senior Technical Staff Member and member of OMP’s  Zowe Leadership Committee and Zowe architect



Joe Bostian, Open Source and Analytics Architect for IBM z Systems and co-lead of OMP’s Ambitus project



Mike Friesenegger, Solution Architect for the SUSE Alliances team and co-lead of OMP’s Feilong Project



James Vincent, Senior Systems Architect for Velocity Software and co-lead of OMP’s Feilong Project



Hiren Shah, Senior Technical Staff Member, IBM and leader of OMP’s Zorow Project
Captions: 
	00:00:59,090 --> 00:01:06,600
hi everyone it is 801 Pacific time and

00:01:05,309 --> 00:01:09,690
we are just gonna give a few more

00:01:06,600 --> 00:01:12,560
minutes and allow a few more attendees

00:01:09,690 --> 00:01:12,560
and then we'll get started

00:02:26,920 --> 00:02:37,110
okay Len I think we're ready to get

00:02:29,890 --> 00:02:37,110
started all right thank you very much

00:02:40,890 --> 00:02:52,000
hello everybody my name is Len Santa

00:02:45,160 --> 00:02:54,940
Lucia I am the governing board chair for

00:02:52,000 --> 00:02:59,230
the Linux Foundation open mainframe

00:02:54,940 --> 00:03:05,260
project I am standing in today for John

00:02:59,230 --> 00:03:08,440
Murdoch who is our director he regrets

00:03:05,260 --> 00:03:11,890
not being here today due to some other

00:03:08,440 --> 00:03:15,940
obligations but we do have a very good

00:03:11,890 --> 00:03:18,160
agenda put together for you as you can

00:03:15,940 --> 00:03:18,459
see on the charts right in front of you

00:03:18,160 --> 00:03:20,290
right now

00:03:18,459 --> 00:03:24,190
this is what it kind of looks like today

00:03:20,290 --> 00:03:27,940
I'll do a little bit of a introduction

00:03:24,190 --> 00:03:31,269
and then we'll have Joe Bastian talk

00:03:27,940 --> 00:03:34,420
about impetus project inside the open

00:03:31,269 --> 00:03:37,950
mainframe project the FEI long project

00:03:34,420 --> 00:03:41,650
by headed by Mike Frese and Edgar and

00:03:37,950 --> 00:03:48,070
Jim James Vincent Polly stuffily by

00:03:41,650 --> 00:03:51,970
Jerry Edgerton Xaro by Iran Shah Zoey by

00:03:48,070 --> 00:03:55,810
sujay Solomon and Zoey conformance

00:03:51,970 --> 00:03:57,549
program by Joe Winchester and with some

00:03:55,810 --> 00:04:02,230
discussion about how to get involved in

00:03:57,549 --> 00:04:07,600
QA so I may can you move on to the next

00:04:02,230 --> 00:04:09,489
chair the open mainframe project if

00:04:07,600 --> 00:04:13,180
you're not familiar with it is part of

00:04:09,489 --> 00:04:17,310
the Linux Foundation ecosystem helping

00:04:13,180 --> 00:04:21,729
make the mainframe more a part of the

00:04:17,310 --> 00:04:26,050
open source community through the open

00:04:21,729 --> 00:04:27,820
mainframe project itself and as you can

00:04:26,050 --> 00:04:30,580
see a little bit about the Linux

00:04:27,820 --> 00:04:34,419
Foundation I remember when it was first

00:04:30,580 --> 00:04:38,770
starting out myself back when I was

00:04:34,419 --> 00:04:41,030
still working at IBM when IBM decided to

00:04:38,770 --> 00:04:45,419
get involved with the

00:04:41,030 --> 00:04:47,970
Linux movement back in 1999 2000

00:04:45,419 --> 00:04:52,319
timeframe I remember when I first had

00:04:47,970 --> 00:04:54,479
the chance to shake hands with leanest

00:04:52,319 --> 00:04:58,409
Torvalds himself onstage at the Javits

00:04:54,479 --> 00:05:01,710
Center and it started from there along

00:04:58,409 --> 00:05:08,280
with the CEO of IBM at the time Sam

00:05:01,710 --> 00:05:11,400
Palmisano it's really working at very

00:05:08,280 --> 00:05:15,690
very well and we we have many many

00:05:11,400 --> 00:05:18,840
projects in and around the opening frame

00:05:15,690 --> 00:05:21,090
project but look at all of some of the

00:05:18,840 --> 00:05:23,909
lists down below as you can see at the

00:05:21,090 --> 00:05:26,069
bottom of the chart for the Linux

00:05:23,909 --> 00:05:29,669
Foundation itself there are quite a few

00:05:26,069 --> 00:05:32,490
things going on with this organization

00:05:29,669 --> 00:05:34,139
as a whole and the open mainframe

00:05:32,490 --> 00:05:36,469
project is one of the most successful

00:05:34,139 --> 00:05:41,060
projects inside the Linux Foundation

00:05:36,469 --> 00:05:41,060
today next chart please

00:05:41,610 --> 00:05:49,740
our objective and milpa mainframe

00:05:43,710 --> 00:05:51,930
project is really designed for eliminate

00:05:49,740 --> 00:05:55,469
any barriers to open-source adoption on

00:05:51,930 --> 00:05:57,870
the platform demonstrating value of the

00:05:55,469 --> 00:06:02,330
mainframe on a technical and business

00:05:57,870 --> 00:06:04,650
levels and perspectives and also

00:06:02,330 --> 00:06:07,349
strengthening the collaboration points

00:06:04,650 --> 00:06:12,449
and resources throughout the community

00:06:07,349 --> 00:06:15,690
so it thrives I have to say that as

00:06:12,449 --> 00:06:17,580
you'll see there are I remember when I

00:06:15,690 --> 00:06:19,379
was first starting out we had like one

00:06:17,580 --> 00:06:22,259
or two projects but it has grown

00:06:19,379 --> 00:06:24,029
tremendously as you can see from the

00:06:22,259 --> 00:06:25,830
evidence today of what we have to talk

00:06:24,029 --> 00:06:28,710
with you today with the different heads

00:06:25,830 --> 00:06:30,740
of each of the projects next chart

00:06:28,710 --> 00:06:30,740
please

00:06:32,389 --> 00:06:39,379
it's been four years I've been lucky to

00:06:36,870 --> 00:06:43,669
be part of it the entire four years

00:06:39,379 --> 00:06:45,960
there are 36 and more coming

00:06:43,669 --> 00:06:49,279
organizations involved as you can see

00:06:45,960 --> 00:06:49,279
from the list below

00:06:49,870 --> 00:06:55,729
projects together I believe it's going

00:06:52,580 --> 00:07:02,990
to jump up to 11 and in that to distant

00:06:55,729 --> 00:07:07,940
future we have mentored over 36 mentees

00:07:02,990 --> 00:07:10,130
in the annual internship program that

00:07:07,940 --> 00:07:15,410
the Linux Foundation opened mainframe

00:07:10,130 --> 00:07:19,040
project sponsors and we have impacted

00:07:15,410 --> 00:07:22,240
over 100 plus students I had the

00:07:19,040 --> 00:07:25,610
privilege of a few of the years of

00:07:22,240 --> 00:07:29,470
running the internship program working

00:07:25,610 --> 00:07:33,910
with some very very bright students and

00:07:29,470 --> 00:07:38,000
watching them learn and become

00:07:33,910 --> 00:07:43,850
acclimated and knowledgeable about the

00:07:38,000 --> 00:07:46,940
platform there are here are some of the

00:07:43,850 --> 00:07:49,639
projects as you can see here listed and

00:07:46,940 --> 00:07:51,440
we're going to go through them one at a

00:07:49,639 --> 00:07:53,389
time each of them will be explained by

00:07:51,440 --> 00:07:57,410
each of the presenters responsible for

00:07:53,389 --> 00:08:04,760
them and I think you can go on to the

00:07:57,410 --> 00:08:06,889
next chart and you can take a look at

00:08:04,760 --> 00:08:09,500
our website and an open mainframe

00:08:06,889 --> 00:08:14,950
project at or where you can take a look

00:08:09,500 --> 00:08:17,810
and one nice view all of the information

00:08:14,950 --> 00:08:21,970
and click on each of these things and

00:08:17,810 --> 00:08:25,099
get involved and get be part of the

00:08:21,970 --> 00:08:28,669
supported projects that being involved

00:08:25,099 --> 00:08:31,370
with anything and all different kinds of

00:08:28,669 --> 00:08:34,550
levels whether it be projects Linux

00:08:31,370 --> 00:08:37,159
distributions or open mainframe project

00:08:34,550 --> 00:08:40,490
remember membership is also explained

00:08:37,159 --> 00:08:43,159
there there are different levels silver

00:08:40,490 --> 00:08:46,150
all the way to platinum and of which we

00:08:43,159 --> 00:08:49,390
have many of those folks on here today

00:08:46,150 --> 00:08:52,880
next chart please

00:08:49,390 --> 00:08:58,430
so what I'd like to do now is turn it

00:08:52,880 --> 00:08:59,780
over to Joe a bastion Joe is someone in

00:08:58,430 --> 00:09:00,980
IBM that's been involved with the

00:08:59,780 --> 00:09:05,570
architecture

00:09:00,980 --> 00:09:09,020
IBM Z and helps lead the ambitous

00:09:05,570 --> 00:09:11,680
program project excuse me inside the

00:09:09,020 --> 00:09:13,520
open mainframe project Joe are you there

00:09:11,680 --> 00:09:20,270
yeah I'm here

00:09:13,520 --> 00:09:23,450
thanks a lot Lynn so the amplitudes

00:09:20,270 --> 00:09:26,570
project is a relatively new project we

00:09:23,450 --> 00:09:31,610
announced it in late February this year

00:09:26,570 --> 00:09:33,770
and it's a project that that that aims

00:09:31,610 --> 00:09:35,960
to do a couple of different things to

00:09:33,770 --> 00:09:38,450
reach two different kinds of personas in

00:09:35,960 --> 00:09:42,940
the open source community the first is

00:09:38,450 --> 00:09:45,860
that we want to reach out to application

00:09:42,940 --> 00:09:47,870
architects workload architects who work

00:09:45,860 --> 00:09:50,090
in an enterprise environment who may

00:09:47,870 --> 00:09:53,440
have workloads spread across multiple

00:09:50,090 --> 00:09:56,770
nodes in their enterprise and who use

00:09:53,440 --> 00:10:00,830
common open-source tool chains pipelines

00:09:56,770 --> 00:10:03,770
CI CD frameworks things like that and

00:10:00,830 --> 00:10:05,480
they want to understand better how their

00:10:03,770 --> 00:10:08,180
their mainframe fits into that

00:10:05,480 --> 00:10:10,370
environment and and also understand how

00:10:08,180 --> 00:10:13,460
they can make use of that as they would

00:10:10,370 --> 00:10:15,560
any other node in their enterprise so

00:10:13,460 --> 00:10:18,170
this project really aims to sort of give

00:10:15,560 --> 00:10:22,460
people a starting place to discover the

00:10:18,170 --> 00:10:26,440
capabilities of open source on z/os and

00:10:22,460 --> 00:10:30,020
Linux on Z this is definitely certainly

00:10:26,440 --> 00:10:31,610
slanted and focused towards z/os but as

00:10:30,020 --> 00:10:33,920
we work more and more in the open source

00:10:31,610 --> 00:10:37,940
space we find all sorts of opportunities

00:10:33,920 --> 00:10:43,820
to to share with the Linux our Linux on

00:10:37,940 --> 00:10:47,330
Z cousins and and we also are able to go

00:10:43,820 --> 00:10:50,570
off and and share workloads between z/os

00:10:47,330 --> 00:10:52,280
nodes and Linux on xenos as well so we

00:10:50,570 --> 00:10:54,710
really want people who are unfamiliar

00:10:52,280 --> 00:10:57,410
with the IBM z platform to have a place

00:10:54,710 --> 00:10:59,680
where they can come and discover hey I

00:10:57,410 --> 00:11:02,030
didn't know you know this particular

00:10:59,680 --> 00:11:04,940
open-source package ran on this platform

00:11:02,030 --> 00:11:07,040
I have that as part of my tool chain

00:11:04,940 --> 00:11:09,230
perhaps I can start the steer meetings

00:11:07,040 --> 00:11:11,030
of work over to the mainframe for this

00:11:09,230 --> 00:11:13,460
particular purpose and achieve some

00:11:11,030 --> 00:11:14,810
efficiencies that today perhaps aren't

00:11:13,460 --> 00:11:16,880
implemented in the best

00:11:14,810 --> 00:11:19,630
particular way so we're really reaching

00:11:16,880 --> 00:11:22,010
out to those workload architects who are

00:11:19,630 --> 00:11:25,040
familiar with the open source

00:11:22,010 --> 00:11:27,110
environment who really want to best

00:11:25,040 --> 00:11:30,020
understand how to distribute workloads

00:11:27,110 --> 00:11:33,380
around and start including their

00:11:30,020 --> 00:11:37,100
mainframe as part of those distributed

00:11:33,380 --> 00:11:39,470
work and tool chains the second set of

00:11:37,100 --> 00:11:42,529
folks that we're really trying to look

00:11:39,470 --> 00:11:45,529
out to is those who perhaps maybe know

00:11:42,529 --> 00:11:48,710
something about IBM C perhaps even have

00:11:45,529 --> 00:11:51,050
a project that is running along z/os or

00:11:48,710 --> 00:11:54,589
Z Linux and they want to look for an

00:11:51,050 --> 00:11:56,000
avenue to to publicize that and to make

00:11:54,589 --> 00:11:59,210
that available to the open source

00:11:56,000 --> 00:12:02,000
community so if you have some kind of a

00:11:59,210 --> 00:12:04,730
project that you think would best fit in

00:12:02,000 --> 00:12:06,980
an open source environment and you want

00:12:04,730 --> 00:12:08,839
to understand how you can share that

00:12:06,980 --> 00:12:11,720
with a community that understands the

00:12:08,839 --> 00:12:15,500
mainframe that already is a perhaps

00:12:11,720 --> 00:12:16,610
already consumer of your particular the

00:12:15,500 --> 00:12:19,520
function that you want to make available

00:12:16,610 --> 00:12:23,180
and you're trying to understand how can

00:12:19,520 --> 00:12:25,460
I get started this is a this could serve

00:12:23,180 --> 00:12:27,280
as a portal where you can find other

00:12:25,460 --> 00:12:30,260
people who have similar interests and

00:12:27,280 --> 00:12:33,080
you don't have to say well I'll open a

00:12:30,260 --> 00:12:34,750
github repo and maybe create an or got

00:12:33,080 --> 00:12:38,480
there but nobody's ever going to

00:12:34,750 --> 00:12:40,940
discover this or or or find out that

00:12:38,480 --> 00:12:44,210
this project really exists so we also

00:12:40,940 --> 00:12:46,250
want to be able to to sort of create a

00:12:44,210 --> 00:12:48,170
home for those those kinds of folks who

00:12:46,250 --> 00:12:50,020
are looking to perhaps open source a new

00:12:48,170 --> 00:12:53,540
project that they're thinking about and

00:12:50,020 --> 00:12:55,610
and work with with people who are trying

00:12:53,540 --> 00:12:58,190
to bring open source packages over to

00:12:55,610 --> 00:13:00,709
the platform and haven't yet been able

00:12:58,190 --> 00:13:03,530
to upstream that or convince the open

00:13:00,709 --> 00:13:07,700
source community that the IBM C platform

00:13:03,530 --> 00:13:09,800
is one that's that's worth supporting so

00:13:07,700 --> 00:13:12,709
say for instance you brought a package

00:13:09,800 --> 00:13:14,029
over to z/os or C Linux you want the

00:13:12,709 --> 00:13:15,589
rest of the world to know about it you

00:13:14,029 --> 00:13:17,330
can open a pull request with the

00:13:15,589 --> 00:13:19,610
original upstream project and that's

00:13:17,330 --> 00:13:20,959
fine but a lot of times it will sit

00:13:19,610 --> 00:13:23,570
there and will take a long time for that

00:13:20,959 --> 00:13:26,330
to get through in the meantime you could

00:13:23,570 --> 00:13:28,019
stage that same code out to a repo

00:13:26,330 --> 00:13:30,600
that's hosted under the amaz

00:13:28,019 --> 00:13:32,699
choose project and you could you could

00:13:30,600 --> 00:13:36,239
point people to that and say simply do a

00:13:32,699 --> 00:13:38,279
poll on you know on this particular repo

00:13:36,239 --> 00:13:40,139
and you can see how it works

00:13:38,279 --> 00:13:41,939
again this is about establishing a

00:13:40,139 --> 00:13:45,119
community of people with common

00:13:41,939 --> 00:13:47,759
interests ones who say know something

00:13:45,119 --> 00:13:50,850
about mainframes in general but have a

00:13:47,759 --> 00:13:52,860
deep open source background and the idea

00:13:50,850 --> 00:13:54,389
is that by building this community we

00:13:52,860 --> 00:13:56,939
want to sort of create a portal or a

00:13:54,389 --> 00:13:59,069
center of gravity where it's easy to

00:13:56,939 --> 00:14:00,839
find the resources that you need in

00:13:59,069 --> 00:14:03,329
order to be successful in an open source

00:14:00,839 --> 00:14:07,290
environment so that's really what we

00:14:03,329 --> 00:14:09,089
want to do in a nutshell we this this

00:14:07,290 --> 00:14:10,589
necessarily means that we will perform a

00:14:09,089 --> 00:14:12,299
lot of different functions a lot of

00:14:10,589 --> 00:14:14,850
different roles under the umbrella of

00:14:12,299 --> 00:14:17,249
Alma to sand the open mainframe project

00:14:14,850 --> 00:14:20,790
but again it's it's as much as anything

00:14:17,249 --> 00:14:24,449
a project designed to facilitate people

00:14:20,790 --> 00:14:26,429
who have an open source and open source

00:14:24,449 --> 00:14:27,809
facet to whatever it is that they're

00:14:26,429 --> 00:14:30,749
doing and they want that to run

00:14:27,809 --> 00:14:32,429
mainframe so if you're if you're someone

00:14:30,749 --> 00:14:34,920
in that position if you're someone who

00:14:32,429 --> 00:14:36,929
assumes that role or persona within your

00:14:34,920 --> 00:14:38,399
organization and you just didn't know

00:14:36,929 --> 00:14:40,829
how to get started

00:14:38,399 --> 00:14:42,449
take a look at the a mateus project as I

00:14:40,829 --> 00:14:44,189
said it's relatively new we're still

00:14:42,449 --> 00:14:46,410
adding content and we're coming up to

00:14:44,189 --> 00:14:48,740
speed but we want to build this out

00:14:46,410 --> 00:14:55,049
quickly and establish a robust community

00:14:48,740 --> 00:14:57,600
so that's it in a nutshell so Joe just a

00:14:55,049 --> 00:15:02,449
quick question from me Len would you

00:14:57,600 --> 00:15:07,049
look at am Batu's as like a index to

00:15:02,449 --> 00:15:09,959
going into the open source available our

00:15:07,049 --> 00:15:12,350
wanting to become available on the

00:15:09,959 --> 00:15:15,649
mainframe is that is it like the index

00:15:12,350 --> 00:15:19,559
so it is that what you look at it yeah

00:15:15,649 --> 00:15:21,149
in index an index is a term that you

00:15:19,559 --> 00:15:24,689
know can have a very well-defined

00:15:21,149 --> 00:15:26,939
meaning ideally would be nice if we did

00:15:24,689 --> 00:15:29,249
have an index and say you can come here

00:15:26,939 --> 00:15:31,619
like you could to a pipe i.org

00:15:29,249 --> 00:15:34,350
where you could go in and search are all

00:15:31,619 --> 00:15:36,779
these projects available to run on z.z

00:15:34,350 --> 00:15:38,470
Linux of cos and and we have kicked

00:15:36,779 --> 00:15:42,280
around ideas like that

00:15:38,470 --> 00:15:44,230
that is a tall order coming up with an

00:15:42,280 --> 00:15:46,750
official index or a place where you

00:15:44,230 --> 00:15:48,460
could search for things is is perhaps

00:15:46,750 --> 00:15:50,740
something that is an aspirational goal

00:15:48,460 --> 00:15:53,080
in the long term but certainly we want

00:15:50,740 --> 00:15:54,970
this to be something that people think

00:15:53,080 --> 00:15:56,800
about or if they search on the web they

00:15:54,970 --> 00:15:59,350
could easily discover themselves and

00:15:56,800 --> 00:16:01,420
then come here and and find out more

00:15:59,350 --> 00:16:04,090
about about what's available what's

00:16:01,420 --> 00:16:06,510
running it sounds like a very good

00:16:04,090 --> 00:16:10,900
starting point thank you very much sure

00:16:06,510 --> 00:16:12,070
sure so with that I'll turn this over to

00:16:10,900 --> 00:16:15,070
two feet long

00:16:12,070 --> 00:16:18,460
I think it's James is next or or I think

00:16:15,070 --> 00:16:21,490
James is next only this is thanks Joe

00:16:18,460 --> 00:16:23,830
this is like my freezer yeah let me go

00:16:21,490 --> 00:16:25,600
ahead and start and then apps absolutely

00:16:23,830 --> 00:16:28,960
have games introduced himself as well so

00:16:25,600 --> 00:16:32,620
hello everyone my name is Mike Ruiz and

00:16:28,960 --> 00:16:35,380
Egger and I with James and co-chair of

00:16:32,620 --> 00:16:38,500
the SE long project I'm a solution

00:16:35,380 --> 00:16:41,500
architect at Sousa I work very closely

00:16:38,500 --> 00:16:44,020
on the Susa IBM partnership and I work

00:16:41,500 --> 00:16:47,740
with many groups in IBM including the

00:16:44,020 --> 00:16:48,640
IBM Z and Linux one teams James you want

00:16:47,740 --> 00:16:50,440
to go ahead and take a moment to

00:16:48,640 --> 00:16:51,160
introduce yourself certainly thank you

00:16:50,440 --> 00:16:53,920
Mike

00:16:51,160 --> 00:16:56,500
I am James Vincent I'm a senior

00:16:53,920 --> 00:16:59,140
architect with velocity software and I'm

00:16:56,500 --> 00:17:04,450
a product owner for a cloud management

00:16:59,140 --> 00:17:06,370
solution that I have a high interest in

00:17:04,450 --> 00:17:10,080
and what we're doing with this fail on

00:17:06,370 --> 00:17:13,750
project to open up the z vm platform

00:17:10,080 --> 00:17:16,030
it's been it's been a great ride and the

00:17:13,750 --> 00:17:20,310
leadership around the open mainframe has

00:17:16,030 --> 00:17:20,310
made this project quite successful

00:17:20,340 --> 00:17:24,340
thanks James

00:17:21,700 --> 00:17:25,780
all right next slide thank you so let me

00:17:24,340 --> 00:17:29,770
tell you a little bit about the FEI long

00:17:25,780 --> 00:17:31,660
project first of all we have nearly 40

00:17:29,770 --> 00:17:35,050
people on slack that are following the

00:17:31,660 --> 00:17:37,150
project and that number is growing we're

00:17:35,050 --> 00:17:41,040
focused on contributing and further

00:17:37,150 --> 00:17:45,460
developing the Python zvm SDK code base

00:17:41,040 --> 00:17:48,490
which uses Linux on Z and runs on Linux

00:17:45,460 --> 00:17:52,180
on Z and is a RESTful API implementation

00:17:48,490 --> 00:17:55,960
that simplifies the interaction with IBM

00:17:52,180 --> 00:17:59,440
the VM hypervisor the the RESTful API

00:17:55,960 --> 00:18:02,770
allows for development of infrastructure

00:17:59,440 --> 00:18:05,410
as a service automation for for VMs

00:18:02,770 --> 00:18:08,260
networking storage that are that are

00:18:05,410 --> 00:18:11,470
used and managed by zvm so if you're

00:18:08,260 --> 00:18:13,870
somebody that is not familiar with the z

00:18:11,470 --> 00:18:15,400
vm hypervisor and how to interact with

00:18:13,870 --> 00:18:17,680
the z vm hypervisor

00:18:15,400 --> 00:18:20,800
you still need people that understand

00:18:17,680 --> 00:18:24,400
that but if you know how to develop in

00:18:20,800 --> 00:18:27,040
restful api s and be able to do puts and

00:18:24,400 --> 00:18:29,980
gets and and all of that good stuff

00:18:27,040 --> 00:18:33,850
you'll be able to take advantage of the

00:18:29,980 --> 00:18:37,990
Python z vm SDK codebase to be able to

00:18:33,850 --> 00:18:40,780
interact with z vm create guests create

00:18:37,990 --> 00:18:47,679
networks define storage and things like

00:18:40,780 --> 00:18:49,809
that the the FEI long project is also

00:18:47,679 --> 00:18:51,940
has been known as the z vm cloud

00:18:49,809 --> 00:18:56,890
connector it's been around for a little

00:18:51,940 --> 00:19:01,450
bit it actually started out as a project

00:18:56,890 --> 00:19:03,520
by IBM and IBM has contributed it to the

00:19:01,450 --> 00:19:07,300
open mainframe project under the Linux

00:19:03,520 --> 00:19:10,000
Foundation there are a number of

00:19:07,300 --> 00:19:13,630
commercial products and open source

00:19:10,000 --> 00:19:18,220
projects that use the Python GBM SDK

00:19:13,630 --> 00:19:20,620
codebase so an organization can develop

00:19:18,220 --> 00:19:23,380
their own infrastructure as a service

00:19:20,620 --> 00:19:26,440
automation or they can take advantage of

00:19:23,380 --> 00:19:31,510
a commercial product or source project

00:19:26,440 --> 00:19:33,730
to be able to do that so what's next for

00:19:31,510 --> 00:19:36,700
Fei Long

00:19:33,730 --> 00:19:39,700
well because it started out as a

00:19:36,700 --> 00:19:42,100
contribution from IBM and now it's fully

00:19:39,700 --> 00:19:44,350
open source under the FEI long project

00:19:42,100 --> 00:19:47,710
there are things that need to be moved

00:19:44,350 --> 00:19:49,660
like the CI CD infrastructure so we're

00:19:47,710 --> 00:19:52,300
in the process of moving the CI CD

00:19:49,660 --> 00:19:56,050
infrastructure into the project under

00:19:52,300 --> 00:19:58,120
the Linux Foundation at the same time we

00:19:56,050 --> 00:20:01,000
need to connect the CI see the

00:19:58,120 --> 00:20:04,300
infrastructure to Z resources that are

00:20:01,000 --> 00:20:05,590
contributed by member organizations and

00:20:04,300 --> 00:20:08,559
and those e resource

00:20:05,590 --> 00:20:11,380
will allow the CI CD infrastructure to

00:20:08,559 --> 00:20:15,220
do the building of the packages do the

00:20:11,380 --> 00:20:17,529
testing and things like that another

00:20:15,220 --> 00:20:21,309
important goal of fei-long

00:20:17,529 --> 00:20:23,260
is to give developers access to

00:20:21,309 --> 00:20:27,400
resources if they're interested in

00:20:23,260 --> 00:20:29,440
contributing to this project developers

00:20:27,400 --> 00:20:31,570
are going to need access to zbm

00:20:29,440 --> 00:20:35,049
infrastructures so we're working again

00:20:31,570 --> 00:20:38,110
with those member organizations to

00:20:35,049 --> 00:20:40,809
provide vivia zbm resources so that

00:20:38,110 --> 00:20:43,029
those developers can develop their new

00:20:40,809 --> 00:20:45,370
feature or or make a change to an

00:20:43,029 --> 00:20:47,830
existing feature they can test that

00:20:45,370 --> 00:20:52,029
feature and and and absolutely provide

00:20:47,830 --> 00:20:55,299
documentation on the future so with the

00:20:52,029 --> 00:20:57,309
with those resources in place the CI CD

00:20:55,299 --> 00:21:00,700
infrastructure and the ability for

00:20:57,309 --> 00:21:03,940
developers to get access to resources it

00:21:00,700 --> 00:21:07,149
makes it easier for the project to

00:21:03,940 --> 00:21:09,970
support activities like the the o MP

00:21:07,149 --> 00:21:12,490
summer intern program that Len mentioned

00:21:09,970 --> 00:21:16,750
earlier and projects that that will

00:21:12,490 --> 00:21:18,370
contribute to say long and and there is

00:21:16,750 --> 00:21:21,520
a project that actually I'm listening

00:21:18,370 --> 00:21:25,029
here on the slide that is part of this

00:21:21,520 --> 00:21:28,330
coming summer mentorship program and

00:21:25,029 --> 00:21:31,270
it's focused on ansible automation of a

00:21:28,330 --> 00:21:34,570
long and and so we're really excited to

00:21:31,270 --> 00:21:37,179
be able to support that project last and

00:21:34,570 --> 00:21:39,809
maybe and not the least but I think it's

00:21:37,179 --> 00:21:42,610
actually the most it's the most

00:21:39,809 --> 00:21:45,520
important activity that we need to focus

00:21:42,610 --> 00:21:48,010
on is increasing the fey-hong membership

00:21:45,520 --> 00:21:49,809
and we have bi-weekly meetings and I

00:21:48,010 --> 00:21:55,110
would love to see that meeting

00:21:49,809 --> 00:21:58,210
attendance grow next slide please

00:21:55,110 --> 00:22:00,850
so here are two examples of the type of

00:21:58,210 --> 00:22:04,390
discussions that you can find if you

00:22:00,850 --> 00:22:07,179
attend one of our bi-weekly meetings the

00:22:04,390 --> 00:22:10,000
left screenshot is is from a fail on

00:22:07,179 --> 00:22:12,640
contributor that showed off what he's

00:22:10,000 --> 00:22:15,070
working on and will soon be contributing

00:22:12,640 --> 00:22:18,640
to the project as you can see it has the

00:22:15,070 --> 00:22:22,300
it deals with scuzzy and automation of

00:22:18,640 --> 00:22:26,830
of configuring and deploying scuzzy

00:22:22,300 --> 00:22:29,740
discs for virtual machines based on his

00:22:26,830 --> 00:22:31,900
presentation which was awesome and every

00:22:29,740 --> 00:22:33,820
session that we do is recorded so you

00:22:31,900 --> 00:22:37,420
can go back and see his presentation and

00:22:33,820 --> 00:22:40,270
demonstration but based on that other

00:22:37,420 --> 00:22:42,430
members were already starting to kick

00:22:40,270 --> 00:22:45,670
around ideas how they can expand on his

00:22:42,430 --> 00:22:47,970
contribution once it's available on the

00:22:45,670 --> 00:22:51,010
right hand side the Linux Foundation

00:22:47,970 --> 00:22:54,810
infrastructure team presented a proposal

00:22:51,010 --> 00:22:55,960
to the FEI long project for our CI CD

00:22:54,810 --> 00:22:59,170
transformation

00:22:55,960 --> 00:23:01,960
and getting it in to and under the Linux

00:22:59,170 --> 00:23:05,170
Foundation that I spoke about earlier so

00:23:01,960 --> 00:23:08,440
again that was recorded great

00:23:05,170 --> 00:23:12,070
information it's great to see how the

00:23:08,440 --> 00:23:14,200
Linux Foundation supports the open

00:23:12,070 --> 00:23:16,630
mainframe project and the sub projects

00:23:14,200 --> 00:23:18,790
like FEI long that that need resources

00:23:16,630 --> 00:23:20,550
to be able to continue to move this

00:23:18,790 --> 00:23:24,640
project forward

00:23:20,550 --> 00:23:27,010
so in closing I'm really excited about

00:23:24,640 --> 00:23:29,560
the Fei Long project and we're excited

00:23:27,010 --> 00:23:32,830
to be an incubation project underneath

00:23:29,560 --> 00:23:34,600
the open mainframe project but honestly

00:23:32,830 --> 00:23:38,140
we'd like to graduate to an active

00:23:34,600 --> 00:23:41,670
status to do that though we need more

00:23:38,140 --> 00:23:43,840
community involvement and and help

00:23:41,670 --> 00:23:46,810
people that are interested in the

00:23:43,840 --> 00:23:50,320
failing project you joined the bi-weekly

00:23:46,810 --> 00:23:52,840
meetings get involved join the mailing

00:23:50,320 --> 00:23:55,930
list get on the slack channel chat with

00:23:52,840 --> 00:23:58,270
us we're happy to to get you engaged and

00:23:55,930 --> 00:24:01,900
and help you better understand what Fei

00:23:58,270 --> 00:24:03,790
Long is all about and with that I'd like

00:24:01,900 --> 00:24:06,250
to move on to the next slide and thank

00:24:03,790 --> 00:24:08,350
everyone for their time now it's time to

00:24:06,250 --> 00:24:12,030
turn it over to Jerry with the poly

00:24:08,350 --> 00:24:12,030
subtly project thank you

00:24:13,200 --> 00:24:18,820
sorry thanks Mike I was on mute thanks

00:24:18,280 --> 00:24:20,620
everyone

00:24:18,820 --> 00:24:23,440
my name is Jerry Edgington I'm a senior

00:24:20,620 --> 00:24:25,840
systems analyst with Western & Southern

00:24:23,440 --> 00:24:28,810
Financial Group however that's my day

00:24:25,840 --> 00:24:31,390
job this is my off day job I guess I

00:24:28,810 --> 00:24:32,530
should say I have been working on this

00:24:31,390 --> 00:24:35,350
project for about

00:24:32,530 --> 00:24:37,330
four and a half years just because it

00:24:35,350 --> 00:24:38,890
was some things that we wanted to I saw

00:24:37,330 --> 00:24:40,930
some gaps that I really wanted to work

00:24:38,890 --> 00:24:42,690
on with this so she could have next

00:24:40,930 --> 00:24:46,270
slide please

00:24:42,690 --> 00:24:49,120
so why did I do this project this is

00:24:46,270 --> 00:24:50,740
this has been my baby from day one I'm

00:24:49,120 --> 00:24:52,840
still the main the only developer on it

00:24:50,740 --> 00:24:55,780
but what I wanted to do is to be able to

00:24:52,840 --> 00:24:58,360
treat developers as developers not

00:24:55,780 --> 00:25:00,340
mainframe developers I also wanted to

00:24:58,360 --> 00:25:02,440
make sure I see we've got a duplicate on

00:25:00,340 --> 00:25:06,070
this sorry about the slide I wanted to

00:25:02,440 --> 00:25:07,720
read to not increase the load on

00:25:06,070 --> 00:25:10,000
assistance program or to make this easy

00:25:07,720 --> 00:25:12,820
for somebody to work on it I also wanted

00:25:10,000 --> 00:25:15,160
to reuse existing Jenkins get knowledge

00:25:12,820 --> 00:25:16,570
to be able to support the platform so

00:25:15,160 --> 00:25:19,960
what I want to do is just basically

00:25:16,570 --> 00:25:21,550
allow a developer sitting at it on his

00:25:19,960 --> 00:25:24,340
favorite IDE just like a normal

00:25:21,550 --> 00:25:28,180
developer coming off the platform would

00:25:24,340 --> 00:25:29,080
be doing develop their code save it on

00:25:28,180 --> 00:25:31,660
to the next thing

00:25:29,080 --> 00:25:35,140
run it through a CDC I process on

00:25:31,660 --> 00:25:38,890
Jenkins go to the source goes to get but

00:25:35,140 --> 00:25:40,750
still not lose the some of the

00:25:38,890 --> 00:25:43,420
mainframes the z/os kind of functions

00:25:40,750 --> 00:25:46,150
that we have like one of the big things

00:25:43,420 --> 00:25:47,680
was disaster recovery we need those we

00:25:46,150 --> 00:25:49,300
really don't want to rely on the server

00:25:47,680 --> 00:25:52,030
to have the get process up so where are

00:25:49,300 --> 00:25:54,700
the PDS is that so that's that's part of

00:25:52,030 --> 00:25:57,280
the project so the main the main

00:25:54,700 --> 00:25:59,470
benefits of this is like I said very

00:25:57,280 --> 00:26:01,600
minimal zeo assistance programming very

00:25:59,470 --> 00:26:04,870
minimal as you go it's overhead it only

00:26:01,600 --> 00:26:07,170
goes to Z OS when it needs to so it

00:26:04,870 --> 00:26:10,900
treats z/os just like any other platform

00:26:07,170 --> 00:26:13,450
using the same tools you can use JIRA

00:26:10,900 --> 00:26:16,450
Jenkins get you can use all of those

00:26:13,450 --> 00:26:20,260
tools with the z/os systems programming

00:26:16,450 --> 00:26:23,560
or with z/os development so it actually

00:26:20,260 --> 00:26:25,960
tries to reuse what's already existing

00:26:23,560 --> 00:26:29,590
in the open source world like Jenkins

00:26:25,960 --> 00:26:31,870
can get for the platform it also would

00:26:29,590 --> 00:26:34,480
allow a non-0 Assistance Program or non

00:26:31,870 --> 00:26:37,990
zero application developer to develop on

00:26:34,480 --> 00:26:40,900
z/os so let me go back a step

00:26:37,990 --> 00:26:42,940
why the name poly softly so the name

00:26:40,900 --> 00:26:43,960
poly stuffily is means something which

00:26:42,940 --> 00:26:46,720
you heads

00:26:43,960 --> 00:26:50,049
so what this project reason I called it

00:26:46,720 --> 00:26:53,710
this was this project has two heads

00:26:50,049 --> 00:26:56,230
so it has distributed side methodology

00:26:53,710 --> 00:26:58,809
for developing code and deploying code

00:26:56,230 --> 00:27:01,419
building code where he has cos has a

00:26:58,809 --> 00:27:03,159
totally different methodology where this

00:27:01,419 --> 00:27:05,470
isn't that the application developer

00:27:03,159 --> 00:27:06,789
doesn't know the process behind the

00:27:05,470 --> 00:27:08,080
scenes that's not how to build it

00:27:06,789 --> 00:27:10,659
things like something like a mainframe

00:27:08,080 --> 00:27:12,549
SCM so trying to marry those two

00:27:10,659 --> 00:27:18,129
together was why it's called poly

00:27:12,549 --> 00:27:21,340
stuffily so this project basically is an

00:27:18,129 --> 00:27:22,749
extension of I guess what you would call

00:27:21,340 --> 00:27:25,740
it Jenkins or the open source of

00:27:22,749 --> 00:27:27,909
distributed platform development so

00:27:25,740 --> 00:27:30,850
where is this where is this project

00:27:27,909 --> 00:27:33,039
coming to play so basically when you get

00:27:30,850 --> 00:27:35,919
the project you can have Jenkins and get

00:27:33,039 --> 00:27:38,019
already running you have the let's do a

00:27:35,919 --> 00:27:40,899
slave working you would need something

00:27:38,019 --> 00:27:42,580
like IBM's dependency-based build sorry

00:27:40,899 --> 00:27:45,340
I can't get around that same use code

00:27:42,580 --> 00:27:47,409
IBM's file system once you get that up

00:27:45,340 --> 00:27:50,289
and running and able to run some of the

00:27:47,409 --> 00:27:54,009
IBM sample DB code this would be the

00:27:50,289 --> 00:27:57,519
add-on to allow you to do builds on z/os

00:27:54,009 --> 00:27:59,740
for an application so cobalt assembler

00:27:57,519 --> 00:28:04,779
easy treat some of the other third-party

00:27:59,740 --> 00:28:07,779
products so this would actually help you

00:28:04,779 --> 00:28:09,820
get jump start that conversion so get it

00:28:07,779 --> 00:28:13,149
into the get get it into the repository

00:28:09,820 --> 00:28:16,389
get it in up to z/os so it allows you to

00:28:13,149 --> 00:28:18,759
stream line from the point where the IBM

00:28:16,389 --> 00:28:21,610
DVB or that jenkins and get code is

00:28:18,759 --> 00:28:24,159
already running and Exploited on z/os to

00:28:21,610 --> 00:28:25,929
be able to do the builds and compiles so

00:28:24,159 --> 00:28:30,090
that's kind of where we're at with the

00:28:25,929 --> 00:28:32,080
project like like anything any other

00:28:30,090 --> 00:28:34,269
projects you can get the poly cephalic

00:28:32,080 --> 00:28:37,440
code download it off the website you can

00:28:34,269 --> 00:28:40,809
install it run as a get this code is

00:28:37,440 --> 00:28:43,389
installed by Jenkins is upgraded by

00:28:40,809 --> 00:28:45,820
Jenkins it is delivered by Jenkins just

00:28:43,389 --> 00:28:47,559
like any other Dinkins application the

00:28:45,820 --> 00:28:49,799
mainframe applications would call this

00:28:47,559 --> 00:28:51,879
application so you actually do the bills

00:28:49,799 --> 00:28:54,190
so and there's a lot of information on

00:28:51,879 --> 00:28:55,750
the website under the banking project on

00:28:54,190 --> 00:28:58,919
the bottom line

00:28:55,750 --> 00:29:01,480
so what do we want to do with this code

00:28:58,919 --> 00:29:03,789
I'm limited by what I can do on my

00:29:01,480 --> 00:29:06,070
system so we're working with people like

00:29:03,789 --> 00:29:08,230
Glenn and a few others to try and get

00:29:06,070 --> 00:29:11,020
this code out where it's available to be

00:29:08,230 --> 00:29:12,940
able to be enhanced so we're looking to

00:29:11,020 --> 00:29:15,250
expand that add more features function

00:29:12,940 --> 00:29:18,600
subsystems like db2 since my shop

00:29:15,250 --> 00:29:21,400
doesn't have db2 we're also looking to

00:29:18,600 --> 00:29:24,039
integrated with Jenkins better the CID

00:29:21,400 --> 00:29:26,470
the CI the pipeline function see ICD

00:29:24,039 --> 00:29:29,559
functions exploit martyr's features

00:29:26,470 --> 00:29:31,390
including JIRA adding more functionality

00:29:29,559 --> 00:29:35,250
to where this would be a much easier

00:29:31,390 --> 00:29:37,390
transition to be able to go to also

00:29:35,250 --> 00:29:39,159
documentation is not one of my favorite

00:29:37,390 --> 00:29:42,010
things so I also improve the

00:29:39,159 --> 00:29:43,539
documentation to help use for easier

00:29:42,010 --> 00:29:47,380
installation and transition to Polly

00:29:43,539 --> 00:29:48,909
said Polly so that was probably less

00:29:47,380 --> 00:29:51,159
than five minutes but I wanted to give

00:29:48,909 --> 00:29:52,510
some time back for the others because my

00:29:51,159 --> 00:29:55,360
projects pretty straightforward and

00:29:52,510 --> 00:29:59,500
simple so with that I will turn it over

00:29:55,360 --> 00:30:02,470
to here intrude with zoar oh yeah hi

00:29:59,500 --> 00:30:06,010
before you speak I wanted to make a

00:30:02,470 --> 00:30:10,450
comment on both Jerry presentation and

00:30:06,010 --> 00:30:15,100
Mike and James Jerry thank you for

00:30:10,450 --> 00:30:20,289
reminding me we have made some elf hires

00:30:15,100 --> 00:30:26,650
available to both Jerry and Mike so that

00:30:20,289 --> 00:30:31,450
on our ibm's e RI bmz system is Harvard

00:30:26,650 --> 00:30:33,130
in New York and that's for projects of

00:30:31,450 --> 00:30:35,830
all kinds development and

00:30:33,130 --> 00:30:39,850
experimentation evaluation and we're

00:30:35,830 --> 00:30:41,830
we're helping these two projects and we

00:30:39,850 --> 00:30:45,909
are possibly going to be doing some

00:30:41,830 --> 00:30:50,289
others and it seems to be working out

00:30:45,909 --> 00:30:52,900
well so we have a real Z to work on with

00:30:50,289 --> 00:30:55,450
with these project and others as as and

00:30:52,900 --> 00:30:56,860
if and when needed so thank you Jerry

00:30:55,450 --> 00:30:59,650
for reminding me about that oh by the

00:30:56,860 --> 00:31:02,350
way my day job is CTO and Business

00:30:59,650 --> 00:31:05,110
Development Manager for become infinity

00:31:02,350 --> 00:31:09,040
IBM's e-business partner based out of

00:31:05,110 --> 00:31:12,160
New York so Aaron please go ahead

00:31:09,040 --> 00:31:16,059
yeah hi I'm here on shot from IBM

00:31:12,160 --> 00:31:19,600
Poughkeepsie my day job is I'm a cloud

00:31:16,059 --> 00:31:20,950
enablement Architect for z/os and today

00:31:19,600 --> 00:31:26,679
I would like to talk to you about

00:31:20,950 --> 00:31:30,250
Zoro next slide Zoro stands for z/os

00:31:26,679 --> 00:31:33,179
open repository of workflows so our

00:31:30,250 --> 00:31:37,530
mission is to provide a repository for

00:31:33,179 --> 00:31:41,140
see us system programmers and z/os

00:31:37,530 --> 00:31:45,790
software vendors such that they can

00:31:41,140 --> 00:31:49,809
contribute and collaborate creating and

00:31:45,790 --> 00:31:52,000
sharing z/osmf workflows we would like

00:31:49,809 --> 00:31:54,850
to build a community of her system

00:31:52,000 --> 00:31:57,100
programmers so that they collaborate

00:31:54,850 --> 00:32:00,070
around gsm network for technology they

00:31:57,100 --> 00:32:03,250
have a vast knowledge on system

00:32:00,070 --> 00:32:07,390
management skills and we would like them

00:32:03,250 --> 00:32:11,169
to share that skills among each other in

00:32:07,390 --> 00:32:14,140
z/osmf workflow manner the final vision

00:32:11,169 --> 00:32:17,080
is to help our system programmer

00:32:14,140 --> 00:32:20,530
to manage the systems us system in a

00:32:17,080 --> 00:32:22,299
modernized way using modern technology

00:32:20,530 --> 00:32:26,020
and behind the cover

00:32:22,299 --> 00:32:31,419
zus a mac NGO cement workflows are our

00:32:26,020 --> 00:32:34,809
key to us modernization so that that is

00:32:31,419 --> 00:32:38,710
our main mission to encourage a z/os

00:32:34,809 --> 00:32:41,020
system programmer to build and share

00:32:38,710 --> 00:32:43,990
their work flows through these Zoro

00:32:41,020 --> 00:32:46,990
repository to help out each other or

00:32:43,990 --> 00:32:51,370
manage their system in in a more modern

00:32:46,990 --> 00:32:53,500
way through the z/osmf workflow the

00:32:51,370 --> 00:32:55,570
benefit we are seeing with the Zoro

00:32:53,500 --> 00:32:59,860
is we will have no centralized

00:32:55,570 --> 00:33:02,410
repository where customers in our

00:32:59,860 --> 00:33:06,640
vendors are sharing their workflows

00:33:02,410 --> 00:33:09,760
along with many IBM offerings who are

00:33:06,640 --> 00:33:12,010
also currently sharing their their

00:33:09,760 --> 00:33:14,020
configuration workflows their system

00:33:12,010 --> 00:33:16,780
management workflow so iBM has already

00:33:14,020 --> 00:33:19,950
started posting the workflows we have a

00:33:16,780 --> 00:33:23,029
customer one customer who is sharing

00:33:19,950 --> 00:33:25,880
their work flows through the repos

00:33:23,029 --> 00:33:29,659
so the benefit is having one place that

00:33:25,880 --> 00:33:32,750
that customer can go and collaborate for

00:33:29,659 --> 00:33:36,440
z/osmf workflow to perform their most

00:33:32,750 --> 00:33:38,750
comments mr. management tasks next

00:33:36,440 --> 00:33:41,000
battlefury system programmers would be

00:33:38,750 --> 00:33:45,169
able to collaborate on various workflows

00:33:41,000 --> 00:33:46,850
to reduce their complexity by picking up

00:33:45,169 --> 00:33:51,019
the familiarized templates from the

00:33:46,850 --> 00:33:53,750
Zorro in integrating those a sample

00:33:51,019 --> 00:33:56,600
workflows into their processes that they

00:33:53,750 --> 00:34:02,480
are performing day today in more

00:33:56,600 --> 00:34:05,419
efficient and simplified manners and

00:34:02,480 --> 00:34:07,130
finally our zero system programmers

00:34:05,419 --> 00:34:09,500
senior system programmers who have

00:34:07,130 --> 00:34:12,109
acquired abundance of system management

00:34:09,500 --> 00:34:14,990
skill over number of years we would like

00:34:12,109 --> 00:34:17,300
to encourage them and energize them to

00:34:14,990 --> 00:34:18,980
transfer that skills that they have

00:34:17,300 --> 00:34:22,190
acquired whole number of years to

00:34:18,980 --> 00:34:25,399
document and to put those skills in the

00:34:22,190 --> 00:34:27,830
z/osmf workflow form and share it with

00:34:25,399 --> 00:34:30,290
the Zorro so early tenure system

00:34:27,830 --> 00:34:34,099
programmer can benefit with that and

00:34:30,290 --> 00:34:36,649
understand the complex the us management

00:34:34,099 --> 00:34:41,149
that is now centralized in z/osmf

00:34:36,649 --> 00:34:44,179
workflows and I will go over on quickly

00:34:41,149 --> 00:34:47,480
in next slide what is the z/osmf

00:34:44,179 --> 00:34:49,639
workflow ace so sorry

00:34:47,480 --> 00:34:52,820
can you go back to the previous points

00:34:49,639 --> 00:34:54,950
Aria the what's next for us for the

00:34:52,820 --> 00:34:57,770
Zorro project well we would like to

00:34:54,950 --> 00:34:59,630
can't continue to build the portfolio of

00:34:57,770 --> 00:35:02,869
various system management and

00:34:59,630 --> 00:35:07,040
configuration workflow IBM will continue

00:35:02,869 --> 00:35:08,450
to contribute to this repository but we

00:35:07,040 --> 00:35:12,530
also would like to encourage our

00:35:08,450 --> 00:35:15,349
customers and in our vendor community to

00:35:12,530 --> 00:35:17,750
participate and contribute workflows

00:35:15,349 --> 00:35:21,430
that they are using in their shop or or

00:35:17,750 --> 00:35:21,430
they can create the workflows for

00:35:21,849 --> 00:35:26,960
modernizing that their management

00:35:24,440 --> 00:35:28,880
processes and and share with other

00:35:26,960 --> 00:35:32,900
customer how they are doing it in their

00:35:28,880 --> 00:35:35,020
shop and also we would like we will be

00:35:32,900 --> 00:35:36,320
providing some additional education

00:35:35,020 --> 00:35:38,150
material

00:35:36,320 --> 00:35:41,930
to videos and things like that that

00:35:38,150 --> 00:35:43,880
would help our customer that all 0s and

00:35:41,930 --> 00:35:45,560
that walktroughs so that that would be

00:35:43,880 --> 00:35:47,510
able next step but main thing over here

00:35:45,560 --> 00:35:49,730
is we would like to encourage our

00:35:47,510 --> 00:35:52,280
customers and vendor to participate in

00:35:49,730 --> 00:35:54,710
this community share their workflows

00:35:52,280 --> 00:35:56,720
learn from each other if they have any

00:35:54,710 --> 00:36:00,290
questions they can post it on our slack

00:35:56,720 --> 00:36:03,290
join our mailing list and ask if they

00:36:00,290 --> 00:36:06,140
have any issues creating the workflow

00:36:03,290 --> 00:36:09,590
they need additional skills creating the

00:36:06,140 --> 00:36:13,580
workflow we are here to help them next

00:36:09,590 --> 00:36:15,980
like this so what is the z/osmf workflow

00:36:13,580 --> 00:36:17,570
in a in a very quick overview I would

00:36:15,980 --> 00:36:21,560
like to provide aesthetics a framework

00:36:17,570 --> 00:36:23,990
that is the support our system

00:36:21,560 --> 00:36:26,930
programmer including our middleware

00:36:23,990 --> 00:36:30,200
system programmer to define a guided

00:36:26,930 --> 00:36:32,090
flow through the steps in the workflow

00:36:30,200 --> 00:36:34,700
to accomplish a specific system

00:36:32,090 --> 00:36:36,830
management or specific product

00:36:34,700 --> 00:36:39,860
configuration tasks that that they are

00:36:36,830 --> 00:36:42,020
currently doing running set of jobs

00:36:39,860 --> 00:36:46,970
either manually or through some

00:36:42,020 --> 00:36:50,500
scripting on our zus side using some

00:36:46,970 --> 00:36:53,360
3270 interfaces so instead of that

00:36:50,500 --> 00:36:56,780
incorporate those jobs that they have

00:36:53,360 --> 00:36:58,850
into this guided flow that that that

00:36:56,780 --> 00:37:02,120
that is created through z/osmf workflow

00:36:58,850 --> 00:37:05,000
this USM ABAB flow is useful to assist

00:37:02,120 --> 00:37:07,220
our early tenure system programmer who

00:37:05,000 --> 00:37:09,890
are unfamiliar with how to perform a

00:37:07,220 --> 00:37:11,810
given task or even a current season

00:37:09,890 --> 00:37:14,450
senior system programmer who are

00:37:11,810 --> 00:37:16,520
performing some tasks on a ravely basis

00:37:14,450 --> 00:37:19,850
so they have to remember a kind of how

00:37:16,520 --> 00:37:22,940
to perform specific systems management

00:37:19,850 --> 00:37:25,490
activity they would these workers will

00:37:22,940 --> 00:37:27,800
help them to to consolidate those steps

00:37:25,490 --> 00:37:30,830
that they are currently doing in one

00:37:27,800 --> 00:37:32,480
place so they don't have to struggle

00:37:30,830 --> 00:37:35,000
through how to perform the system

00:37:32,480 --> 00:37:36,920
management tasks workflow ensures that

00:37:35,000 --> 00:37:41,480
all tasks are performed in the right

00:37:36,920 --> 00:37:43,970
order and only when that dependency are

00:37:41,480 --> 00:37:47,120
met so specific step for example

00:37:43,970 --> 00:37:49,340
requires some other steps to complete

00:37:47,120 --> 00:37:51,119
our workflow process will guarantee that

00:37:49,340 --> 00:37:53,579
that half

00:37:51,119 --> 00:37:55,739
we will make sure to workflow processing

00:37:53,579 --> 00:37:58,829
that all the steps are completed before

00:37:55,739 --> 00:38:00,509
a specific task is considered to be

00:37:58,829 --> 00:38:02,640
complete so if you're performing a

00:38:00,509 --> 00:38:04,859
managed system management activity when

00:38:02,640 --> 00:38:07,739
all the steps part of the that workflow

00:38:04,859 --> 00:38:09,989
are complete regardless who has to run

00:38:07,739 --> 00:38:12,299
those tasks sometimes in a system

00:38:09,989 --> 00:38:14,700
management activity you will involve

00:38:12,299 --> 00:38:16,859
more than one person or to perform that

00:38:14,700 --> 00:38:19,170
system management activity and workflow

00:38:16,859 --> 00:38:21,420
will assist with that as well as when

00:38:19,170 --> 00:38:23,190
all the personas has completed that task

00:38:21,420 --> 00:38:25,049
there is the specific system

00:38:23,190 --> 00:38:27,660
configuration or management activities

00:38:25,049 --> 00:38:30,509
considered complete it will help you

00:38:27,660 --> 00:38:33,180
monitor and progress towards the

00:38:30,509 --> 00:38:35,999
completion of the task system management

00:38:33,180 --> 00:38:37,619
tasks and there is a history and audit

00:38:35,999 --> 00:38:40,380
capability with the workflow that that

00:38:37,619 --> 00:38:43,799
in a most zy shop or they have to

00:38:40,380 --> 00:38:45,900
provide some auditing about specific

00:38:43,799 --> 00:38:47,519
activity that is performed system

00:38:45,900 --> 00:38:49,589
management activity that was performed

00:38:47,519 --> 00:38:52,410
by system programmer ends you as a man

00:38:49,589 --> 00:38:53,910
looking assist with that and when you

00:38:52,410 --> 00:38:56,700
have to perform the same task on

00:38:53,910 --> 00:38:59,640
multiple system having a workflow that

00:38:56,700 --> 00:39:01,440
consolidates all the steps and provides

00:38:59,640 --> 00:39:03,950
your ability to run those steps on a

00:39:01,440 --> 00:39:08,099
multiple systems it becomes more

00:39:03,950 --> 00:39:10,140
efficient to run a workflow through zero

00:39:08,099 --> 00:39:12,630
as a map on multiple system and achieve

00:39:10,140 --> 00:39:15,450
your system configuration activity on

00:39:12,630 --> 00:39:18,630
multiple systems current examples we

00:39:15,450 --> 00:39:20,819
have z/os middleware provisioning that

00:39:18,630 --> 00:39:24,329
is happening through workflow db2

00:39:20,819 --> 00:39:27,299
websphere ims and queue all major

00:39:24,329 --> 00:39:29,789
middlewares CICS all made of all major

00:39:27,299 --> 00:39:32,430
middleware of 0s are providing the

00:39:29,789 --> 00:39:34,109
workflow that are hosted in in this Zoro

00:39:32,430 --> 00:39:35,969
community that would help you

00:39:34,109 --> 00:39:38,819
configuring and provision this mirror

00:39:35,969 --> 00:39:40,859
where other examples are like expanding

00:39:38,819 --> 00:39:43,349
the ZFS filesystem which are more like

00:39:40,859 --> 00:39:46,229
day-to-day administration of z/os

00:39:43,349 --> 00:39:48,869
upgrading the z/os version we have box

00:39:46,229 --> 00:39:51,390
flows for all those scenarios and many

00:39:48,869 --> 00:39:53,339
more that I have not listed here so

00:39:51,390 --> 00:39:56,609
that's a very high-level overview of the

00:39:53,339 --> 00:39:59,700
workflow we can work with you to help

00:39:56,609 --> 00:40:02,369
you building your own workflows please

00:39:59,700 --> 00:40:03,150
join this community and and we can learn

00:40:02,369 --> 00:40:04,199
from each other

00:40:03,150 --> 00:40:08,789
thank you

00:40:04,199 --> 00:40:12,089
our next discussion is around Zoe and so

00:40:08,789 --> 00:40:15,259
Jay Solomon will will take a call from

00:40:12,089 --> 00:40:17,489
here all right thank you so much here in

00:40:15,259 --> 00:40:20,609
I'll just start by saying I hope

00:40:17,489 --> 00:40:22,759
everyone is safe during a pandemic and

00:40:20,609 --> 00:40:25,769
I'm glad you're on this webinar with us

00:40:22,759 --> 00:40:27,719
so my name is sue J Solomon I worked for

00:40:25,769 --> 00:40:31,019
Broadcom as the chief Zee DevOps

00:40:27,719 --> 00:40:33,289
advocate I'm also part of the open

00:40:31,019 --> 00:40:35,809
mapping project Zoi Leadership Committee

00:40:33,289 --> 00:40:38,549
just a member so I'm really here

00:40:35,809 --> 00:40:41,789
representing Zoe and all the folks in in

00:40:38,549 --> 00:40:44,339
Z OC and the COC is made up of members

00:40:41,789 --> 00:40:49,319
from rocket Software IBM and and

00:40:44,339 --> 00:40:52,799
Broadcom next slide please me so what is

00:40:49,319 --> 00:40:54,680
our mission here with Zoe which was

00:40:52,799 --> 00:40:58,829
launched you know a couple of years ago

00:40:54,680 --> 00:41:01,799
by a combination of IBM Broadcom rocket

00:40:58,829 --> 00:41:04,619
software we really wanted to you know

00:41:01,799 --> 00:41:06,420
lower the learning curve so with new

00:41:04,619 --> 00:41:09,420
folks coming onto the platform it should

00:41:06,420 --> 00:41:12,390
not take them six months to become

00:41:09,420 --> 00:41:13,589
productive it needs to be quicker second

00:41:12,390 --> 00:41:16,410
thing we wanted to do was actually

00:41:13,589 --> 00:41:20,999
attract and retain new people on the

00:41:16,410 --> 00:41:22,440
platform on z/os we were noticing that

00:41:20,999 --> 00:41:24,180
you know new people coming to the

00:41:22,440 --> 00:41:26,339
platform I think would you know they

00:41:24,180 --> 00:41:28,380
would work for a few months and they

00:41:26,339 --> 00:41:30,809
kind of feel like the tooling is

00:41:28,380 --> 00:41:33,749
outdated or they don't really see much

00:41:30,809 --> 00:41:36,150
of a future in a career there and and

00:41:33,749 --> 00:41:38,130
would maybe leave the platform after a

00:41:36,150 --> 00:41:41,339
little while and we really wanted to

00:41:38,130 --> 00:41:43,699
attract folks and retain them and the

00:41:41,339 --> 00:41:46,739
third thing is to simplify the

00:41:43,699 --> 00:41:50,160
architecture of the above zero s so that

00:41:46,739 --> 00:41:52,940
it's more accessible that people without

00:41:50,160 --> 00:41:55,920
deep z/os knowledge are able to actually

00:41:52,940 --> 00:41:58,319
build applications and such that take

00:41:55,920 --> 00:42:00,839
advantage of services running on z/os so

00:41:58,319 --> 00:42:04,880
these are the mission and the goals that

00:42:00,839 --> 00:42:08,699
we had when we launched Zoe in terms of

00:42:04,880 --> 00:42:11,430
components that exist in Zoe today we've

00:42:08,699 --> 00:42:13,680
got the command-line interface which is

00:42:11,430 --> 00:42:16,319
a scriptable interface that you install

00:42:13,680 --> 00:42:17,319
on your local machines your clients and

00:42:16,319 --> 00:42:19,150
it's able to you know

00:42:17,319 --> 00:42:21,729
call REST API is on the mainframe to

00:42:19,150 --> 00:42:25,029
give you access to commands just like

00:42:21,729 --> 00:42:27,849
how many popular cloud platforms have it

00:42:25,029 --> 00:42:30,489
we also have an API mediation layer that

00:42:27,849 --> 00:42:32,890
helps you with which runs on z/os and

00:42:30,489 --> 00:42:36,190
helps you with centralizing access to

00:42:32,890 --> 00:42:37,959
REST API is on z/os especially for the

00:42:36,190 --> 00:42:39,969
purpose of infrastructure software so

00:42:37,959 --> 00:42:42,609
you know maybe I'm accessing z/osmf

00:42:39,969 --> 00:42:44,380
maybe I'm accessing some vendor tooling

00:42:42,609 --> 00:42:47,109
like Endeavour or some something like

00:42:44,380 --> 00:42:49,329
that those API scan all flow through the

00:42:47,109 --> 00:42:51,430
mediation layer which is just you know

00:42:49,329 --> 00:42:53,829
typical best practice when it comes to

00:42:51,430 --> 00:42:57,880
exposing REST API is from a single

00:42:53,829 --> 00:43:02,410
platform and then we also have a desktop

00:42:57,880 --> 00:43:06,459
UI a web UI which allows folks to access

00:43:02,410 --> 00:43:08,859
all kinds of resources on z/os from the

00:43:06,459 --> 00:43:11,619
comfort of a browser so they don't even

00:43:08,859 --> 00:43:13,739
need to login to 3270 they just go to a

00:43:11,619 --> 00:43:15,969
browser and they have quick access to

00:43:13,739 --> 00:43:17,920
common things that you'd want to do on

00:43:15,969 --> 00:43:21,609
the platform like looking at jobs and

00:43:17,920 --> 00:43:24,160
looking at files datasets and so on we

00:43:21,609 --> 00:43:27,089
also have a Visual Studio code extension

00:43:24,160 --> 00:43:30,519
which is the most popular text editor

00:43:27,089 --> 00:43:33,009
pseudo IDE in the world today and that

00:43:30,519 --> 00:43:36,190
thing is has grown in popularity quite a

00:43:33,009 --> 00:43:38,140
bit that actually uses a lot of the API

00:43:36,190 --> 00:43:40,390
sand and some of the code I was borrowed

00:43:38,140 --> 00:43:43,299
from CLI so it's it's really a prime

00:43:40,390 --> 00:43:46,660
example of open-source building

00:43:43,299 --> 00:43:49,239
something out that is heavily adopted

00:43:46,660 --> 00:43:51,579
and contributed from various parties so

00:43:49,239 --> 00:43:53,140
when it was donated to Zoey it really

00:43:51,579 --> 00:43:54,459
didn't have that much but the

00:43:53,140 --> 00:43:56,410
open-source community really got

00:43:54,459 --> 00:43:59,380
together and promoted it built it up to

00:43:56,410 --> 00:44:02,729
be something much bigger some benefits

00:43:59,380 --> 00:44:06,430
and you know what we offer from Zoey is

00:44:02,729 --> 00:44:09,249
consistent access to the z/os platform

00:44:06,430 --> 00:44:12,089
systems and services and it's not just

00:44:09,249 --> 00:44:14,979
UI or CLI we're also offering

00:44:12,089 --> 00:44:17,619
programmatic interfaces like SDKs which

00:44:14,979 --> 00:44:19,809
are coming up next we want to make sure

00:44:17,619 --> 00:44:22,420
that we're leveraging industry standard

00:44:19,809 --> 00:44:24,849
methodologies and standards so we don't

00:44:22,420 --> 00:44:26,999
want to invent new standards for z/os we

00:44:24,849 --> 00:44:29,559
want to make sure that we just work with

00:44:26,999 --> 00:44:31,210
popular methodologies that integrate

00:44:29,559 --> 00:44:34,720
with things that today's

00:44:31,210 --> 00:44:38,380
and IT folks already do and when it

00:44:34,720 --> 00:44:40,810
comes to building AP is exposing UI or

00:44:38,380 --> 00:44:44,410
exposing command-line interface and IDE

00:44:40,810 --> 00:44:47,410
extensions we are aiming for Zoe to be

00:44:44,410 --> 00:44:50,380
the absolute standard within the z/os

00:44:47,410 --> 00:44:54,220
community so that is a mission and a

00:44:50,380 --> 00:44:57,580
goal of Zoe what's coming up in Zoe

00:44:54,220 --> 00:45:00,760
we've got lined up we want to build an

00:44:57,580 --> 00:45:02,380
SSO experience for all users of of Z OS

00:45:00,760 --> 00:45:04,960
so whether you're accessing specific

00:45:02,380 --> 00:45:06,820
vendor tooling or if you're accessing

00:45:04,960 --> 00:45:09,369
parts of the operating system when you

00:45:06,820 --> 00:45:11,830
need to sign in you do it once and your

00:45:09,369 --> 00:45:13,119
context is saved for your session so

00:45:11,830 --> 00:45:15,130
that you don't have to log in again

00:45:13,119 --> 00:45:17,700
that's an experience we're driving

00:45:15,130 --> 00:45:21,550
towards we're also aiming to provide

00:45:17,700 --> 00:45:24,339
SDKs for popular languages like Python

00:45:21,550 --> 00:45:27,490
nodejs and in the future hopefully Java

00:45:24,339 --> 00:45:29,680
and so on which really abstracts the

00:45:27,490 --> 00:45:32,440
REST API so you don't have to go to the

00:45:29,680 --> 00:45:34,990
REST API so I just import a library in

00:45:32,440 --> 00:45:37,830
if I'm writing an ode app or a Python

00:45:34,990 --> 00:45:39,970
app and there you go I've got all my

00:45:37,830 --> 00:45:43,390
functions and everything I need to

00:45:39,970 --> 00:45:45,220
access services on z/os already and the

00:45:43,390 --> 00:45:48,040
third one I've got here is a mobile

00:45:45,220 --> 00:45:50,050
framework for z/os services that's an

00:45:48,040 --> 00:45:52,930
incubation project that we've got in Zoe

00:45:50,050 --> 00:45:55,210
today hasn't graduated yet but in in

00:45:52,930 --> 00:45:58,390
growing stage and then I also want to

00:45:55,210 --> 00:46:00,339
share with the Zoe web desktop we are

00:45:58,390 --> 00:46:02,530
coming up with ways where the themes

00:46:00,339 --> 00:46:04,300
within the desktop are actually

00:46:02,530 --> 00:46:06,070
customizable so people have their

00:46:04,300 --> 00:46:08,200
favorite ways of looking at things on

00:46:06,070 --> 00:46:10,300
the browser within you eyes and we're

00:46:08,200 --> 00:46:13,320
making those teams customizable in the

00:46:10,300 --> 00:46:16,030
web desktop now next slide please

00:46:13,320 --> 00:46:18,250
so in terms of the activity that we've

00:46:16,030 --> 00:46:21,160
got going on in Zoe we have more than

00:46:18,250 --> 00:46:25,630
200 committers unique committers across

00:46:21,160 --> 00:46:28,240
all of our repositories we have 96 git

00:46:25,630 --> 00:46:32,770
repositories under github.com slash Zoe

00:46:28,240 --> 00:46:35,410
and we have over 21,000 commits so now

00:46:32,770 --> 00:46:38,910
lots of growth lots of continued active

00:46:35,410 --> 00:46:38,910
activity around the project

00:46:40,140 --> 00:46:43,500
and in terms of how folks are actually

00:46:41,460 --> 00:46:45,150
using this so you've got you know if you

00:46:43,500 --> 00:46:48,240
look at the cloud platforms there's API

00:46:45,150 --> 00:46:50,520
CLI web GUI they've got IDE extensions

00:46:48,240 --> 00:46:52,080
we've really just replicated that we've

00:46:50,520 --> 00:46:54,540
taken that same model and we've

00:46:52,080 --> 00:46:57,060
implemented that for mainframe and we do

00:46:54,540 --> 00:47:00,000
that while keeping mainframe z/os

00:46:57,060 --> 00:47:03,210
security in place so anybody who can

00:47:00,000 --> 00:47:05,520
access things using TSO ispf interfaces

00:47:03,210 --> 00:47:07,590
there same user ID there same security

00:47:05,520 --> 00:47:09,390
profiles are in place but what this

00:47:07,590 --> 00:47:11,430
allows people to do whether you're a

00:47:09,390 --> 00:47:13,800
developer you're a dev ops person you're

00:47:11,430 --> 00:47:16,920
a system administrator is the use of

00:47:13,800 --> 00:47:19,770
modern off platform tools things like

00:47:16,920 --> 00:47:22,680
Jenkins and and scripting languages like

00:47:19,770 --> 00:47:24,510
Python or jmeter and so on or you know

00:47:22,680 --> 00:47:27,030
from a browser being able to look at

00:47:24,510 --> 00:47:29,490
resources regardless of what browser it

00:47:27,030 --> 00:47:32,720
is and so on so that type of openness is

00:47:29,490 --> 00:47:36,390
what we're doing with Zoe explain please

00:47:32,720 --> 00:47:37,740
and specifically for the DevOps side you

00:47:36,390 --> 00:47:40,230
know Gerry was mentioning things like

00:47:37,740 --> 00:47:42,480
Jenkins so be the command-line interface

00:47:40,230 --> 00:47:45,750
and the API is can be used to build CI

00:47:42,480 --> 00:47:47,580
CD pipelines build automated testing or

00:47:45,750 --> 00:47:50,870
if you want to you know integrate your

00:47:47,580 --> 00:47:53,700
your source that's on the mainframe with

00:47:50,870 --> 00:47:55,890
scanning tools like sonar cube all of

00:47:53,700 --> 00:47:58,950
that is possible through scripting next

00:47:55,890 --> 00:48:02,040
slide please and if you're a developer

00:47:58,950 --> 00:48:05,070
you want to use modern ideas like Visual

00:48:02,040 --> 00:48:07,290
Studio code you want to use task runners

00:48:05,070 --> 00:48:09,540
like gulp and so on and it opens the

00:48:07,290 --> 00:48:13,800
doors for them through the vs code

00:48:09,540 --> 00:48:16,410
extension or the CLI and next slide and

00:48:13,800 --> 00:48:18,120
we've got system administrators as well

00:48:16,410 --> 00:48:20,370
so as I mentioned before the web desktop

00:48:18,120 --> 00:48:21,750
is the perfect place for them to you

00:48:20,370 --> 00:48:23,610
know graphically go look at the

00:48:21,750 --> 00:48:26,970
resources for for z/os

00:48:23,610 --> 00:48:29,040
and you know system admins also are

00:48:26,970 --> 00:48:31,500
developers in some way so a lot of them

00:48:29,040 --> 00:48:34,020
also want to use things like the vs code

00:48:31,500 --> 00:48:36,270
extension or from tools like service now

00:48:34,020 --> 00:48:39,300
they call straight into the api's and

00:48:36,270 --> 00:48:41,640
build self-service for for their users

00:48:39,300 --> 00:48:44,220
so if I want to maybe refresh some test

00:48:41,640 --> 00:48:46,110
data that's on my production system and

00:48:44,220 --> 00:48:47,490
I want to automate that request those

00:48:46,110 --> 00:48:49,460
things can be automated using these

00:48:47,490 --> 00:48:51,660
api's next slide please

00:48:49,460 --> 00:48:54,529
and in terms of if you want to get

00:48:51,660 --> 00:48:56,150
started we've got a website Zoe dot or

00:48:54,529 --> 00:48:59,660
we had over you know close to 30

00:48:56,150 --> 00:49:02,480
sessions at share recently we have also

00:48:59,660 --> 00:49:05,660
have a medium web site so medium.com

00:49:02,480 --> 00:49:08,390
slash Zoe lots and lots of blogs it's

00:49:05,660 --> 00:49:09,739
excellent cotton out there would be a

00:49:08,390 --> 00:49:11,509
great place to just go and educate

00:49:09,739 --> 00:49:14,989
yourself about what people are doing

00:49:11,509 --> 00:49:20,569
with Zoe we have you know more than 250

00:49:14,989 --> 00:49:22,849
followers on LinkedIn and just we have

00:49:20,569 --> 00:49:26,210
four hundred plus numbers on the Zoe

00:49:22,849 --> 00:49:29,239
user channel so slack has really grown

00:49:26,210 --> 00:49:31,039
in terms of an integration point for us

00:49:29,239 --> 00:49:33,349
so I'd welcome folks to go to the

00:49:31,039 --> 00:49:34,940
website download it use it or if you

00:49:33,349 --> 00:49:36,710
want to come work with us you know come

00:49:34,940 --> 00:49:39,079
to github all of our issues are over

00:49:36,710 --> 00:49:40,999
there or join us on slack to become

00:49:39,079 --> 00:49:43,609
active and with that I'll hand it over

00:49:40,999 --> 00:49:48,980
to Jo Winchester who's gonna go over the

00:49:43,609 --> 00:49:51,109
Zoe conformance program Thanks if

00:49:48,980 --> 00:49:56,509
something Jo I was gonna add a comment

00:49:51,109 --> 00:49:59,720
if anybody might be interested a very

00:49:56,509 --> 00:50:02,150
nice Zoe use case happens to be

00:49:59,720 --> 00:50:04,849
something that our company developed

00:50:02,150 --> 00:50:06,730
called VY comma infinity voice assistant

00:50:04,849 --> 00:50:11,869
you're all familiar with Alexa and

00:50:06,730 --> 00:50:15,710
Google home it uses Zoe to actually be

00:50:11,869 --> 00:50:19,039
able to talk and command the mainframe

00:50:15,710 --> 00:50:21,049
via voice in a secure manner more detail

00:50:19,039 --> 00:50:22,970
some other time but just thought I

00:50:21,049 --> 00:50:26,029
mention it there and there's many others

00:50:22,970 --> 00:50:28,249
that are out there that are coming along

00:50:26,029 --> 00:50:30,980
very nicely out there so Joe back to you

00:50:28,249 --> 00:50:32,869
sorry to interrupt any problem then

00:50:30,980 --> 00:50:35,239
awesome yeah no you're absolutely right

00:50:32,869 --> 00:50:37,099
so that actually leads quite nicely into

00:50:35,239 --> 00:50:39,799
what I was going to talk about next

00:50:37,099 --> 00:50:42,019
which is when I talk thanks you've

00:50:39,799 --> 00:50:43,190
advanced a slight great so I'm going to

00:50:42,019 --> 00:50:44,660
talk about this every conformance

00:50:43,190 --> 00:50:48,529
program I give a little bit of

00:50:44,660 --> 00:50:50,660
background beforehand I when I describe

00:50:48,529 --> 00:50:53,299
Zoe sometimes I say to people think of

00:50:50,660 --> 00:50:54,140
your phone or think of your laptop

00:50:53,299 --> 00:50:57,769
computer

00:50:54,140 --> 00:50:59,420
oh my background before I worked on Zoe

00:50:57,769 --> 00:51:01,279
I worked on the clips which is a very

00:50:59,420 --> 00:51:03,109
successful open source tooling platform

00:51:01,279 --> 00:51:05,390
and before that I worked in Java which

00:51:03,109 --> 00:51:07,220
is a very successful open source project

00:51:05,390 --> 00:51:08,030
and the success of both of those two

00:51:07,220 --> 00:51:11,450
projects and

00:51:08,030 --> 00:51:14,500
possibly the most open or an operating

00:51:11,450 --> 00:51:17,600
system or a computer when you buy it or

00:51:14,500 --> 00:51:19,610
giving it it comes with stuff out of the

00:51:17,600 --> 00:51:24,980
box a phone has a bunch of apps a

00:51:19,610 --> 00:51:26,270
compass calculator a web browser you

00:51:24,980 --> 00:51:27,590
know you can make your phone calls on

00:51:26,270 --> 00:51:30,620
the phone as well which is quite nice

00:51:27,590 --> 00:51:32,360
but you can extend it you can extend it

00:51:30,620 --> 00:51:34,940
through a marketplace through an app

00:51:32,360 --> 00:51:38,840
store through there is a community of

00:51:34,940 --> 00:51:40,640
people some you know vendors existing

00:51:38,840 --> 00:51:42,290
vendors some new vendors and the

00:51:40,640 --> 00:51:45,290
community people who extend your

00:51:42,290 --> 00:51:47,990
platform is we the longevity and

00:51:45,290 --> 00:51:50,270
vitality and the success of your

00:51:47,990 --> 00:51:53,240
platform and this is repeated itself

00:51:50,270 --> 00:51:55,730
throughout history if you I'm old enough

00:51:53,240 --> 00:51:59,080
to have worked and you know when Windows

00:51:55,730 --> 00:52:02,270
was up against IBM os/2 warp platform

00:51:59,080 --> 00:52:04,550
you can think of other formats of VHS

00:52:02,270 --> 00:52:07,670
versus Betamax on and so forth copy

00:52:04,550 --> 00:52:09,400
coffee pods was you know whoever becomes

00:52:07,670 --> 00:52:11,930
the best is the one that has the most

00:52:09,400 --> 00:52:13,610
coffee providers put coffee in the pods

00:52:11,930 --> 00:52:16,100
that fit the particular coffee maker and

00:52:13,610 --> 00:52:18,590
so forth so the success of Zoe we

00:52:16,100 --> 00:52:20,510
recognized as an open source is not just

00:52:18,590 --> 00:52:23,120
a success of what you get in base siree

00:52:20,510 --> 00:52:24,830
but the extra stuff and then just talked

00:52:23,120 --> 00:52:26,900
about and really could sample that which

00:52:24,830 --> 00:52:29,560
was great where they were able to

00:52:26,900 --> 00:52:33,200
actually get an Alexa client talking to

00:52:29,560 --> 00:52:35,510
the mainframe through Zoe and I think

00:52:33,200 --> 00:52:38,390
there was a great demo done when you can

00:52:35,510 --> 00:52:40,190
ask it questions like say you know how's

00:52:38,390 --> 00:52:41,510
my SLA how's my service License

00:52:40,190 --> 00:52:45,110
Agreement if there was voice recognition

00:52:41,510 --> 00:52:47,480
and it replied to you using the Zoe API

00:52:45,110 --> 00:52:49,100
and it's what's really nice is when when

00:52:47,480 --> 00:52:52,160
we see people coming along with really

00:52:49,100 --> 00:52:55,820
novel use case that's so there's every

00:52:52,160 --> 00:52:58,280
conformance program so I'll just redo

00:52:55,820 --> 00:53:00,110
what I've got on the charts so reiterate

00:52:58,280 --> 00:53:01,940
it was learned architected for people to

00:53:00,110 --> 00:53:04,610
build plugins to build apps and build

00:53:01,940 --> 00:53:06,710
extensions now that is a gift in the

00:53:04,610 --> 00:53:09,290
curse because if you think about your

00:53:06,710 --> 00:53:11,960
phone or your operating system you want

00:53:09,290 --> 00:53:13,820
to make sure that when you're using it

00:53:11,960 --> 00:53:16,100
and you go and get an extension then

00:53:13,820 --> 00:53:17,450
that extension is is nicely behaved it's

00:53:16,100 --> 00:53:19,850
not going to collide with other

00:53:17,450 --> 00:53:22,079
extensions you've already got and it's

00:53:19,850 --> 00:53:26,789
got a level of a you know fit and finish

00:53:22,079 --> 00:53:28,140
and and it's it's something pleasing and

00:53:26,789 --> 00:53:29,789
good and you see this with people who

00:53:28,140 --> 00:53:31,049
create app stores for mobile phones and

00:53:29,789 --> 00:53:33,119
things there was a certain set of

00:53:31,049 --> 00:53:34,440
criteria that people have to pass so

00:53:33,119 --> 00:53:38,430
this is what the conformance program is

00:53:34,440 --> 00:53:40,230
about so it gives users who've installed

00:53:38,430 --> 00:53:42,029
basis every confidence that something

00:53:40,230 --> 00:53:43,859
that they get this sort of all Bitzer me

00:53:42,029 --> 00:53:45,299
and benefits from Zoe's poor

00:53:43,859 --> 00:53:47,250
capabilities is well behaved and

00:53:45,299 --> 00:53:48,660
well-formed and it also gives those

00:53:47,250 --> 00:53:52,500
people building those extensions

00:53:48,660 --> 00:53:54,720
confidence that their extension will not

00:53:52,500 --> 00:53:56,640
be broken because the customers will

00:53:54,720 --> 00:53:58,319
install one version of Zoe software and

00:53:56,640 --> 00:54:01,650
then they might take patches and upgrade

00:53:58,319 --> 00:54:03,630
that going forward over time and just

00:54:01,650 --> 00:54:05,880
like if you take an upgrade in your

00:54:03,630 --> 00:54:08,059
operating system you wouldn't want a

00:54:05,880 --> 00:54:10,799
bunch of apps in it to stop working you

00:54:08,059 --> 00:54:12,750
you would want those to stay working so

00:54:10,799 --> 00:54:15,510
we have to make sure that the api's and

00:54:12,750 --> 00:54:17,130
the programmatic interfaces that we

00:54:15,510 --> 00:54:21,029
publish that have people to extend Zoe

00:54:17,130 --> 00:54:23,579
they're solid and we don't remove them

00:54:21,029 --> 00:54:27,420
and we don't break them so it basically

00:54:23,579 --> 00:54:30,150
is the kind of iron work that makes sure

00:54:27,420 --> 00:54:31,920
that that community the users enjoying

00:54:30,150 --> 00:54:33,839
the base product and the users enjoying

00:54:31,920 --> 00:54:36,630
the apps and the people building those

00:54:33,839 --> 00:54:38,849
apps can kind of operate together with

00:54:36,630 --> 00:54:41,059
some sort of you know form and shape

00:54:38,849 --> 00:54:43,380
around them okay next slide please so

00:54:41,059 --> 00:54:45,720
that's - why this very conformance

00:54:43,380 --> 00:54:47,339
program now give me a couple of samples

00:54:45,720 --> 00:54:48,720
and quite limited for time so this

00:54:47,339 --> 00:54:50,250
rattles we're a few quick ones

00:54:48,720 --> 00:54:52,349
suta makes missouri command-line

00:54:50,250 --> 00:54:53,900
interface now it's interesting because i

00:54:52,349 --> 00:54:58,170
member presenting said we want a

00:54:53,900 --> 00:55:00,779
conference and some we went off with the

00:54:58,170 --> 00:55:02,309
modern face of the mainframe and people

00:55:00,779 --> 00:55:03,779
came out and there was someone at the

00:55:02,309 --> 00:55:06,450
back of the room who when they saw the

00:55:03,779 --> 00:55:08,609
command-line interface they got quite

00:55:06,450 --> 00:55:09,690
upset they said modern you know this is

00:55:08,609 --> 00:55:12,539
a text interface

00:55:09,690 --> 00:55:14,369
give me a break and a suit I pointed out

00:55:12,539 --> 00:55:15,630
it's actually very important come online

00:55:14,369 --> 00:55:18,240
interface is very important for

00:55:15,630 --> 00:55:20,460
scripting for automation for

00:55:18,240 --> 00:55:22,710
repeatability and reliability and if you

00:55:20,460 --> 00:55:25,049
look at I use git I use docker and

00:55:22,710 --> 00:55:26,520
things like that if you AWS Amazon Web

00:55:25,049 --> 00:55:28,140
Services and stuff you do have a lot of

00:55:26,520 --> 00:55:30,150
those to a see alike so this is a

00:55:28,140 --> 00:55:31,670
thoroughly modern what's really nice

00:55:30,150 --> 00:55:34,500
about the Zoe command-line interface

00:55:31,670 --> 00:55:35,700
I've got sweet little so so right at the

00:55:34,500 --> 00:55:38,730
top I've got

00:55:35,700 --> 00:55:41,250
top left if I don't know my syntax I

00:55:38,730 --> 00:55:42,750
just say Zoe's files I can say Zoe

00:55:41,250 --> 00:55:45,599
beforehand and it will tell me that I

00:55:42,750 --> 00:55:47,160
can do stuff with files and an Internet

00:55:45,599 --> 00:55:47,550
it says what do I want to do with the

00:55:47,160 --> 00:55:49,170
file

00:55:47,550 --> 00:55:51,810
and these were a list of commands now

00:55:49,170 --> 00:55:54,780
these are quite familiar commands says

00:55:51,810 --> 00:55:57,390
sort of user friendly and then I see oh

00:55:54,780 --> 00:55:59,670
I've got one called des so I get every

00:55:57,390 --> 00:56:01,290
files list and then I start typing it

00:55:59,670 --> 00:56:02,730
and very quickly I can get my samples

00:56:01,290 --> 00:56:04,530
it's what's known for people to write

00:56:02,730 --> 00:56:06,839
help text is progressive describes

00:56:04,530 --> 00:56:08,910
information so if you think about the

00:56:06,839 --> 00:56:10,680
internet and really successful web

00:56:08,910 --> 00:56:12,869
browsers like perhaps Google Chrome for

00:56:10,680 --> 00:56:14,790
example it doesn't tell you anything

00:56:12,869 --> 00:56:16,680
until you start giving it information

00:56:14,790 --> 00:56:19,020
and as you give it information it

00:56:16,680 --> 00:56:20,970
reveals to you what it is that you're

00:56:19,020 --> 00:56:22,650
likely to want to do next this is built

00:56:20,970 --> 00:56:23,670
into the command line interface because

00:56:22,650 --> 00:56:26,010
it's backed by a really powerful

00:56:23,670 --> 00:56:27,540
framework called imperative and on the

00:56:26,010 --> 00:56:29,820
right hand corner we've got the fact

00:56:27,540 --> 00:56:31,530
that you can actually go in and there's

00:56:29,820 --> 00:56:33,660
actually web help you can just crank up

00:56:31,530 --> 00:56:35,190
the web help directly in your laptop or

00:56:33,660 --> 00:56:36,930
you can actually browse it online which

00:56:35,190 --> 00:56:40,319
lets you do it full search and give all

00:56:36,930 --> 00:56:42,619
of your commands okay so that's in the

00:56:40,319 --> 00:56:46,410
CLI next slide please

00:56:42,619 --> 00:56:48,660
now as an extensible platform the stay

00:56:46,410 --> 00:56:49,680
CLI lets you do commands on z/os but

00:56:48,660 --> 00:56:52,440
when you talk or when I talk about the

00:56:49,680 --> 00:56:52,970
ecosystem I've listed a few examples

00:56:52,440 --> 00:56:56,700
here

00:56:52,970 --> 00:56:58,859
on the top left is a plug-in for n qm q

00:56:56,700 --> 00:57:01,140
is a very successful messaging product

00:56:58,859 --> 00:57:03,569
that it's cross-platform it's very

00:57:01,140 --> 00:57:05,970
successful on the mainframe now on NPM

00:57:03,569 --> 00:57:08,160
JSO org because it's built in node and

00:57:05,970 --> 00:57:10,079
known as a package manager are just a

00:57:08,160 --> 00:57:13,619
few thing so you can see the command Zoe

00:57:10,079 --> 00:57:15,390
NQ run and I can run them QSC come on so

00:57:13,619 --> 00:57:18,630
if I'm doing scripting if I'm doing

00:57:15,390 --> 00:57:20,730
automation from my machine that's got

00:57:18,630 --> 00:57:22,650
node running on it I can just type in

00:57:20,730 --> 00:57:25,560
this and this behaves and operates

00:57:22,650 --> 00:57:27,930
exactly the same way as a base CLI

00:57:25,560 --> 00:57:30,180
plug-in so if you're used to using the

00:57:27,930 --> 00:57:31,950
base CLI and imperative is giving me

00:57:30,180 --> 00:57:33,540
this progressive describe blue text you

00:57:31,950 --> 00:57:37,140
can do all of this within here next

00:57:33,540 --> 00:57:39,150
slide just keeping an eye on time so via

00:57:37,140 --> 00:57:40,980
has every desktop does every desktop has

00:57:39,150 --> 00:57:43,140
a bunch of really useful apps in here

00:57:40,980 --> 00:57:45,450
three you'll see really quickly at 30 to

00:57:43,140 --> 00:57:47,490
70 emulator runs in a browser a file

00:57:45,450 --> 00:57:49,050
explorer a jezic's for a very rich

00:57:47,490 --> 00:57:51,870
experiences people who use

00:57:49,050 --> 00:57:54,000
using ISPs 3.14 lock 17 there's Rick

00:57:51,870 --> 00:57:55,950
excuse and older giri's but bottom

00:57:54,000 --> 00:57:58,470
left-hand corner available apps this an

00:57:55,950 --> 00:58:01,410
extensible thing so you can build apps

00:57:58,470 --> 00:58:01,800
extend into the semi desktop and next

00:58:01,410 --> 00:58:05,370
slide please

00:58:01,800 --> 00:58:06,780
and these are the semi conformant

00:58:05,370 --> 00:58:10,230
operators so these are the number of

00:58:06,780 --> 00:58:11,910
apps we had last year and 2019 there's a

00:58:10,230 --> 00:58:14,640
new Zoe conformance program coming in

00:58:11,910 --> 00:58:17,010
for our what's that long term support

00:58:14,640 --> 00:58:20,070
release I'm sorry so these vendors you

00:58:17,010 --> 00:58:21,930
see IBM rocket Sta

00:58:20,070 --> 00:58:23,880
Broadcom phoenix software and there were

00:58:21,930 --> 00:58:25,680
others coming up as well a couple of

00:58:23,880 --> 00:58:28,320
really interesting things about it once

00:58:25,680 --> 00:58:32,610
you pass the criteria and you're well

00:58:28,320 --> 00:58:34,530
formed offering that's I love a CLI

00:58:32,610 --> 00:58:36,000
extent that lets you enjoy all the

00:58:34,530 --> 00:58:39,300
benefits of the imperative framework in

00:58:36,000 --> 00:58:40,950
the CLI Oh an app that lets you work in

00:58:39,300 --> 00:58:43,050
the desktop in a very nice way and you

00:58:40,950 --> 00:58:44,400
play nicely with single sign-on and some

00:58:43,050 --> 00:58:46,170
of the other frameworks like that and

00:58:44,400 --> 00:58:48,030
there's you can just surface your world

00:58:46,170 --> 00:58:50,580
where API is if you want to into an API

00:58:48,030 --> 00:58:53,220
catalog but say you'll get a badge and

00:58:50,580 --> 00:58:54,750
that badge gives users the confidence

00:58:53,220 --> 00:58:56,460
that your app is well formed on top of

00:58:54,750 --> 00:58:58,320
theirs every platform and it gives you

00:58:56,460 --> 00:59:00,090
confidence that zuri

00:58:58,320 --> 00:59:02,610
pacer B is not going to break you going

00:59:00,090 --> 00:59:03,690
forward because the API CPU and there

00:59:02,610 --> 00:59:05,670
are other things in there conformance

00:59:03,690 --> 00:59:07,290
program about you have to you know

00:59:05,670 --> 00:59:09,810
provide the documentation and support

00:59:07,290 --> 00:59:13,380
you have to be a you know a clean well

00:59:09,810 --> 00:59:16,370
behaved well presented application then

00:59:13,380 --> 00:59:16,370
I'm just going to hand it back to you

00:59:16,580 --> 00:59:22,380
thank you very much Joe so folks as we

00:59:20,580 --> 00:59:26,460
close out the day here

00:59:22,380 --> 00:59:28,860
I couldn't you will find other open

00:59:26,460 --> 00:59:31,410
mainframe projects and contacts here

00:59:28,860 --> 00:59:38,490
information this will all be posted

00:59:31,410 --> 00:59:42,450
along with the recorded recording of the

00:59:38,490 --> 00:59:46,080
session and being that we're right at

00:59:42,450 --> 00:59:47,850
the top of the hour let me say this that

00:59:46,080 --> 00:59:50,820
if there are any questions please feel

00:59:47,850 --> 00:59:52,950
free to reach out to us any of us that

00:59:50,820 --> 00:59:56,250
have spoken I want to thank all of the

00:59:52,950 --> 01:00:01,020
speakers I like to thank the open

00:59:56,250 --> 01:00:02,870
mainframe crack team Mae and Chris for

01:00:01,020 --> 01:00:06,140
helping facilitate make the

01:00:02,870 --> 01:00:09,650
such a success as you can see the

01:00:06,140 --> 01:00:11,480
mainframe is very modern and when you

01:00:09,650 --> 01:00:15,860
take that at consideration especially

01:00:11,480 --> 01:00:19,370
with the new IBM Z 15 family that was

01:00:15,860 --> 01:00:21,920
recently announced there is just nothing

01:00:19,370 --> 01:00:26,330
else like it on the platform and

01:00:21,920 --> 01:00:30,770
open-source is just the proverbial icing

01:00:26,330 --> 01:00:33,080
on this cake so with that I'd like to

01:00:30,770 --> 01:00:38,840
close the session and wish everybody

01:00:33,080 --> 01:00:42,200
well please stay healthy safe hopeful

01:00:38,840 --> 01:00:43,720
and most of all smiling positivity is

01:00:42,200 --> 01:00:47,090
how we're going to get through this

01:00:43,720 --> 01:00:50,030
thank you and have a good weekend

01:00:47,090 --> 01:00:53,270
bye-bye now good weekend

01:00:50,030 --> 01:00:58,240
bye-bye yeah stay safe everyone have a

01:00:53,270 --> 01:00:58,240

YouTube URL: https://www.youtube.com/watch?v=ihtATWCyxM0


