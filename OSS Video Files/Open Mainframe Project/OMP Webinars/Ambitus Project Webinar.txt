Title: Ambitus Project Webinar
Publication date: 2021-03-17
Playlist: OMP Webinars
Description: 
	In this webinar, we will compare and contrast the open-source environments between Linux on Z, and z/OS. You will learn how much overlap, especially with containerized environments.



We will also discuss the Ambitus project, which helps users with open source workloads specifically on z/OS:
- A set of containerized workload examples that run on z/OS today
- Common example tasks for running native (non-containerized) z/OS open source workloads.
- Z Markup Language: a language-agnostic macro description format and tooling to generate high-level language specifications for control blocks that currently only have assembler bindings.
Captions: 
	00:00:04,560 --> 00:00:08,160
hello everybody and welcome to the open

00:00:06,720 --> 00:00:09,599
mainframe monthly

00:00:08,160 --> 00:00:11,440
webinar today we're going to be talking

00:00:09,599 --> 00:00:15,519
about the amethyst project

00:00:11,440 --> 00:00:18,080
and we've got joe boston here he is the

00:00:15,519 --> 00:00:19,680
open source software architect at ibm

00:00:18,080 --> 00:00:21,600
um if you have any questions during the

00:00:19,680 --> 00:00:22,560
presentation please feel free to type

00:00:21,600 --> 00:00:25,119
those into the q

00:00:22,560 --> 00:00:27,599
a box and we will take those at the end

00:00:25,119 --> 00:00:31,279
and with that i will hand it over to joe

00:00:27,599 --> 00:00:34,320
welcome joe thanks chris um

00:00:31,279 --> 00:00:38,239
so hello everyone my name is joe bostian

00:00:34,320 --> 00:00:39,280
i am an open source architect at ibm

00:00:38,239 --> 00:00:42,079
there are many

00:00:39,280 --> 00:00:42,840
many of us who focus in different areas

00:00:42,079 --> 00:00:45,600
and

00:00:42,840 --> 00:00:48,000
um i really wanted just to have a talk

00:00:45,600 --> 00:00:51,199
today about what the ombuds project is

00:00:48,000 --> 00:00:53,360
at the open mainframe project um why

00:00:51,199 --> 00:00:55,039
we started it and um what we're really

00:00:53,360 --> 00:00:57,199
hoping to accomplish with it

00:00:55,039 --> 00:00:58,480
this is an incubation project that's

00:00:57,199 --> 00:01:02,000
been going on for the last

00:00:58,480 --> 00:01:04,960
year and a half now um and the

00:01:02,000 --> 00:01:06,960
the goal and the point for the ombuds

00:01:04,960 --> 00:01:09,920
project from the beginning

00:01:06,960 --> 00:01:11,600
has always been to simply uh assist in

00:01:09,920 --> 00:01:12,240
helping to build out the open source

00:01:11,600 --> 00:01:14,640
community

00:01:12,240 --> 00:01:15,520
around the mainframe and there are

00:01:14,640 --> 00:01:18,799
really

00:01:15,520 --> 00:01:21,200
two key ways in which um i'm trying to

00:01:18,799 --> 00:01:24,000
do that with this project

00:01:21,200 --> 00:01:25,200
as i was looking out at what and asking

00:01:24,000 --> 00:01:28,240
myself what does it take

00:01:25,200 --> 00:01:31,200
for uh the mainframe to become

00:01:28,240 --> 00:01:32,799
a vibrant part of the open source

00:01:31,200 --> 00:01:35,119
ecosystem today

00:01:32,799 --> 00:01:36,640
um what what kinds of things do we have

00:01:35,119 --> 00:01:39,200
to accomplish in order to

00:01:36,640 --> 00:01:41,200
to make that happen and certainly the

00:01:39,200 --> 00:01:44,479
open mainframe project has just been

00:01:41,200 --> 00:01:47,600
a wonderful forward step uh

00:01:44,479 --> 00:01:50,159
in the right direction to establish our

00:01:47,600 --> 00:01:50,880
our um our presence in the open source

00:01:50,159 --> 00:01:54,720
community

00:01:50,880 --> 00:01:56,079
to advocate for the platform and to do

00:01:54,720 --> 00:01:58,000
many of the right things that are

00:01:56,079 --> 00:01:59,119
necessary in order for us to gain

00:01:58,000 --> 00:02:01,439
acceptance

00:01:59,119 --> 00:02:02,640
with this really vitally important set

00:02:01,439 --> 00:02:05,920
of communities

00:02:02,640 --> 00:02:08,000
the open source community now is pretty

00:02:05,920 --> 00:02:10,720
much responsible for

00:02:08,000 --> 00:02:12,480
most of the new code that gets deployed

00:02:10,720 --> 00:02:16,319
for various solutions

00:02:12,480 --> 00:02:18,959
um whether they are a corporate offering

00:02:16,319 --> 00:02:20,239
or just an open source project if you

00:02:18,959 --> 00:02:21,920
look around today

00:02:20,239 --> 00:02:24,560
there are there really aren't a whole

00:02:21,920 --> 00:02:26,080
lot of um software houses

00:02:24,560 --> 00:02:28,560
that actually build their own

00:02:26,080 --> 00:02:32,239
proprietary stuff from scratch

00:02:28,560 --> 00:02:34,720
and maintain it in a conventional way so

00:02:32,239 --> 00:02:36,400
i think uh you know we in the mainframe

00:02:34,720 --> 00:02:38,319
community have recognized this for quite

00:02:36,400 --> 00:02:41,680
a while and certainly our presence

00:02:38,319 --> 00:02:42,560
in in the linux space has been uh very

00:02:41,680 --> 00:02:44,800
important

00:02:42,560 --> 00:02:47,200
not only for the mainframe but also to

00:02:44,800 --> 00:02:49,040
push linux forward as well i mean think

00:02:47,200 --> 00:02:51,840
about where linux would be today

00:02:49,040 --> 00:02:53,280
if if the mainframe community didn't

00:02:51,840 --> 00:02:54,959
also participate

00:02:53,280 --> 00:02:56,800
and advocate for some of the things that

00:02:54,959 --> 00:02:59,280
have really made linux an enterprise

00:02:56,800 --> 00:03:01,519
platform today

00:02:59,280 --> 00:03:03,440
so with all of that there are a lot of

00:03:01,519 --> 00:03:05,360
things that we do really well

00:03:03,440 --> 00:03:06,800
in the mainframe community related to

00:03:05,360 --> 00:03:09,599
open source

00:03:06,800 --> 00:03:10,159
but the question becomes what do we do

00:03:09,599 --> 00:03:12,560
next

00:03:10,159 --> 00:03:13,280
right what is the next step we can take

00:03:12,560 --> 00:03:16,400
in terms

00:03:13,280 --> 00:03:16,720
of making this accessible to someone who

00:03:16,400 --> 00:03:18,239
may

00:03:16,720 --> 00:03:20,480
know nothing about the platform

00:03:18,239 --> 00:03:22,159
whatsoever and so

00:03:20,480 --> 00:03:24,400
i noticed from my own point of view

00:03:22,159 --> 00:03:26,799
working on linux and with

00:03:24,400 --> 00:03:29,440
like everyone else assorted open source

00:03:26,799 --> 00:03:32,560
projects over the years

00:03:29,440 --> 00:03:33,920
if i imagined myself as not knowing

00:03:32,560 --> 00:03:35,680
anything about the mainframe and i

00:03:33,920 --> 00:03:36,640
wanted to get started with a given

00:03:35,680 --> 00:03:39,760
project

00:03:36,640 --> 00:03:41,680
where would i begin um and certainly

00:03:39,760 --> 00:03:42,799
if you go to the open mainframe project

00:03:41,680 --> 00:03:45,519
you can find

00:03:42,799 --> 00:03:46,080
lots of good activity out there

00:03:45,519 --> 00:03:50,000
certainly

00:03:46,080 --> 00:03:52,239
zoe is very important from an interface

00:03:50,000 --> 00:03:53,439
uh point of view a new interface to the

00:03:52,239 --> 00:03:56,319
mainframe and

00:03:53,439 --> 00:03:57,599
setting up the proper infrastructure and

00:03:56,319 --> 00:04:00,159
structure with which to

00:03:57,599 --> 00:04:01,599
interact with uh with the mainframe

00:04:00,159 --> 00:04:04,000
using modern interfaces

00:04:01,599 --> 00:04:05,120
right and they've really been very very

00:04:04,000 --> 00:04:07,599
successful

00:04:05,120 --> 00:04:08,959
um in this space certainly cobalt's

00:04:07,599 --> 00:04:12,239
gaining a lot of traction

00:04:08,959 --> 00:04:14,480
recently too so um

00:04:12,239 --> 00:04:16,239
but if i'm a small developer or a

00:04:14,480 --> 00:04:18,400
college student and i just want to learn

00:04:16,239 --> 00:04:20,160
about what the mainframe is

00:04:18,400 --> 00:04:22,240
is there anything that that are there

00:04:20,160 --> 00:04:24,720
any gaps that we can fill

00:04:22,240 --> 00:04:26,000
um with a project like ambitus and so

00:04:24,720 --> 00:04:29,600
two things occurred to me

00:04:26,000 --> 00:04:31,759
as as something that we could provide

00:04:29,600 --> 00:04:33,600
with the ombuds project that that

00:04:31,759 --> 00:04:34,560
weren't already covered to the extent

00:04:33,600 --> 00:04:36,800
that maybe

00:04:34,560 --> 00:04:38,479
they needed to be uh the first one was

00:04:36,800 --> 00:04:41,680
to just simply provide

00:04:38,479 --> 00:04:44,800
how to and example information on

00:04:41,680 --> 00:04:47,919
common practices common best practices

00:04:44,800 --> 00:04:49,199
um uh everyday things that you need to

00:04:47,919 --> 00:04:50,479
know about the platform if you're

00:04:49,199 --> 00:04:53,680
thinking about using it

00:04:50,479 --> 00:04:55,919
i'll give a couple of examples everybody

00:04:53,680 --> 00:04:57,440
knows that the mainframe is a big endian

00:04:55,919 --> 00:05:00,240
platform

00:04:57,440 --> 00:05:02,400
how does that affect what i need to do

00:05:00,240 --> 00:05:03,759
as a developer or even just a software

00:05:02,400 --> 00:05:06,639
user on the platform

00:05:03,759 --> 00:05:08,160
what issues do i have to be aware of uh

00:05:06,639 --> 00:05:10,160
how might they affect me

00:05:08,160 --> 00:05:11,919
as i try to bring open source software

00:05:10,160 --> 00:05:13,360
to the platform or develop my own

00:05:11,919 --> 00:05:16,400
application

00:05:13,360 --> 00:05:19,680
and so we try to um to

00:05:16,400 --> 00:05:23,440
provide a home at ambitus for how-to

00:05:19,680 --> 00:05:25,919
information um things to be aware of

00:05:23,440 --> 00:05:27,039
defining what a big ndm platform is in

00:05:25,919 --> 00:05:29,120
case you may not know

00:05:27,039 --> 00:05:31,440
and providing pointers to additional

00:05:29,120 --> 00:05:33,280
explanations if people need them

00:05:31,440 --> 00:05:35,280
um another one is the fact that if

00:05:33,280 --> 00:05:36,639
you're running on the zos side anyhow on

00:05:35,280 --> 00:05:39,520
the zos platform

00:05:36,639 --> 00:05:40,160
uh that's an ebcdic platform um if

00:05:39,520 --> 00:05:43,120
you're over on

00:05:40,160 --> 00:05:45,280
on linux uh it's it's typical ascii the

00:05:43,120 --> 00:05:46,720
way it is on on x86 and so

00:05:45,280 --> 00:05:48,400
you don't have to worry about that issue

00:05:46,720 --> 00:05:50,320
but if you're bringing your your open

00:05:48,400 --> 00:05:52,080
source over to the zos side

00:05:50,320 --> 00:05:54,240
it's a another thing you have to think

00:05:52,080 --> 00:05:55,840
about those kinds of things that

00:05:54,240 --> 00:05:58,000
information scattered all around the

00:05:55,840 --> 00:06:00,800
internet today you can find

00:05:58,000 --> 00:06:02,080
uh fragments of information about it in

00:06:00,800 --> 00:06:05,120
ibm books

00:06:02,080 --> 00:06:06,720
uh you can find them in there's an

00:06:05,120 --> 00:06:09,360
active um

00:06:06,720 --> 00:06:11,039
uh google community uh that's centered

00:06:09,360 --> 00:06:11,520
on mainframe and you can find bits and

00:06:11,039 --> 00:06:14,479
pieces

00:06:11,520 --> 00:06:15,360
if you know where to look and uh and you

00:06:14,479 --> 00:06:17,759
happen to

00:06:15,360 --> 00:06:20,000
find the right point in time where

00:06:17,759 --> 00:06:22,800
people are discussing that topic

00:06:20,000 --> 00:06:24,240
um so what i'm hoping to do with the the

00:06:22,800 --> 00:06:27,919
the ambitus project

00:06:24,240 --> 00:06:31,120
is when we establish enough of a

00:06:27,919 --> 00:06:32,960
a following that that folks um begin to

00:06:31,120 --> 00:06:34,000
recognize that hey i can go here and

00:06:32,960 --> 00:06:36,479
just find out those

00:06:34,000 --> 00:06:37,600
kinds of things those characteristics of

00:06:36,479 --> 00:06:39,759
the mainframe

00:06:37,600 --> 00:06:40,880
that i may need to know at a high level

00:06:39,759 --> 00:06:42,800
and um

00:06:40,880 --> 00:06:44,880
and what things are the same for that

00:06:42,800 --> 00:06:46,880
matter so

00:06:44,880 --> 00:06:48,000
i'm hoping by establishing this

00:06:46,880 --> 00:06:51,199
footprint here we can say

00:06:48,000 --> 00:06:52,800
look um check here if uh

00:06:51,199 --> 00:06:54,720
if there's something that you don't see

00:06:52,800 --> 00:06:56,400
that you would like to know more about

00:06:54,720 --> 00:06:58,960
uh you could either ask one of the

00:06:56,400 --> 00:07:00,080
experts from the ombutus project to fill

00:06:58,960 --> 00:07:02,720
in that hole

00:07:00,080 --> 00:07:04,080
or participate yourself ideally we would

00:07:02,720 --> 00:07:06,000
like people to

00:07:04,080 --> 00:07:08,319
uh become part of the community

00:07:06,000 --> 00:07:09,680
themselves and we're very open to anyone

00:07:08,319 --> 00:07:13,039
who wants to contribute

00:07:09,680 --> 00:07:14,160
uh anything the second thing that i

00:07:13,039 --> 00:07:17,919
wanted to do

00:07:14,160 --> 00:07:19,680
uh with this project was provide a home

00:07:17,919 --> 00:07:21,759
for projects that are being ported to

00:07:19,680 --> 00:07:24,960
the mainframe whether that's on linux

00:07:21,759 --> 00:07:26,080
or zos uh what we found over the years

00:07:24,960 --> 00:07:28,639
is we worked with

00:07:26,080 --> 00:07:30,000
with software within ibm open source

00:07:28,639 --> 00:07:33,280
software within ibm for

00:07:30,000 --> 00:07:34,479
instance is that we would go through a

00:07:33,280 --> 00:07:38,880
porting process

00:07:34,479 --> 00:07:41,840
or a particular a particular

00:07:38,880 --> 00:07:43,039
change to open source that's required to

00:07:41,840 --> 00:07:45,919
get things to run well

00:07:43,039 --> 00:07:47,039
on the platform and for various reasons

00:07:45,919 --> 00:07:48,800
one or another

00:07:47,039 --> 00:07:51,280
we're not successful at upstreaming the

00:07:48,800 --> 00:07:54,800
changes to the the original community

00:07:51,280 --> 00:07:56,639
um when anyone who's tried to upstream

00:07:54,800 --> 00:07:58,000
before knows that sometimes that can be

00:07:56,639 --> 00:07:59,599
a little bit of a challenge

00:07:58,000 --> 00:08:01,199
especially if you're working on a large

00:07:59,599 --> 00:08:03,840
project that has

00:08:01,199 --> 00:08:04,720
lots of contributors and lots of changes

00:08:03,840 --> 00:08:07,520
sometimes it can

00:08:04,720 --> 00:08:09,039
be hard to uh to gain acceptance of that

00:08:07,520 --> 00:08:11,199
community especially if they don't know

00:08:09,039 --> 00:08:14,319
who you are

00:08:11,199 --> 00:08:16,160
and so what what happens oftentimes then

00:08:14,319 --> 00:08:19,199
is that people start to accumulate

00:08:16,160 --> 00:08:20,160
porting changes and uh essentially a

00:08:19,199 --> 00:08:23,199
separate fork

00:08:20,160 --> 00:08:26,560
of a a particular

00:08:23,199 --> 00:08:27,199
open source repository those things tend

00:08:26,560 --> 00:08:30,639
to be

00:08:27,199 --> 00:08:34,000
um isolated pockets of

00:08:30,639 --> 00:08:35,039
of useful code that exist within various

00:08:34,000 --> 00:08:37,120
entities

00:08:35,039 --> 00:08:39,360
usually within a private corporation

00:08:37,120 --> 00:08:41,440
like an ibm or

00:08:39,360 --> 00:08:42,560
you know one of our one of our business

00:08:41,440 --> 00:08:44,320
partners

00:08:42,560 --> 00:08:46,080
and uh i know that anybody who works

00:08:44,320 --> 00:08:46,880
with uh you know as one of our business

00:08:46,080 --> 00:08:50,160
partners

00:08:46,880 --> 00:08:51,120
um and and has an extensive open source

00:08:50,160 --> 00:08:54,320
catalog

00:08:51,120 --> 00:08:55,120
uh i'm sure that all of them um you know

00:08:54,320 --> 00:08:58,240
have

00:08:55,120 --> 00:08:58,720
open source changes that are stuck away

00:08:58,240 --> 00:09:00,720
in a

00:08:58,720 --> 00:09:02,560
you know in a corner in somebody's

00:09:00,720 --> 00:09:05,200
source repository somewhere

00:09:02,560 --> 00:09:07,120
and the idea is that with ombatuz for

00:09:05,200 --> 00:09:09,839
those things that we can't get upstream

00:09:07,120 --> 00:09:11,120
you could publish them here and the idea

00:09:09,839 --> 00:09:13,600
is that rather than

00:09:11,120 --> 00:09:15,519
keep all of that as more or less a

00:09:13,600 --> 00:09:17,440
secret from the outside world

00:09:15,519 --> 00:09:19,440
demonstrate to the open source community

00:09:17,440 --> 00:09:20,720
that hey there is a lot of work going on

00:09:19,440 --> 00:09:22,480
in this space

00:09:20,720 --> 00:09:24,320
and uh no we haven't been able to

00:09:22,480 --> 00:09:25,519
upstream these changes yet but you can

00:09:24,320 --> 00:09:27,360
find them here

00:09:25,519 --> 00:09:28,720
you don't have to go hunting for them or

00:09:27,360 --> 00:09:31,360
you may discover

00:09:28,720 --> 00:09:32,240
that in fact uh yes we are working with

00:09:31,360 --> 00:09:35,680
a particular

00:09:32,240 --> 00:09:36,080
a particular project and we have made

00:09:35,680 --> 00:09:38,080
some

00:09:36,080 --> 00:09:39,279
progress with it we just have not simply

00:09:38,080 --> 00:09:42,480
been able to

00:09:39,279 --> 00:09:45,200
um become a fully supported platform

00:09:42,480 --> 00:09:47,200
with the rest of the community yet now

00:09:45,200 --> 00:09:50,000
some of the barriers

00:09:47,200 --> 00:09:51,680
that become involved there are a lot of

00:09:50,000 --> 00:09:52,560
times you'll hear from the open source

00:09:51,680 --> 00:09:54,959
community

00:09:52,560 --> 00:09:57,360
we're very busy right now um we don't

00:09:54,959 --> 00:10:00,959
have time to support another platform

00:09:57,360 --> 00:10:02,720
or um sure we'd welcome your changes but

00:10:00,959 --> 00:10:06,079
we have no way to test this and

00:10:02,720 --> 00:10:08,880
integrate it with our ci cd pipeline and

00:10:06,079 --> 00:10:10,959
until you can solve that problem uh you

00:10:08,880 --> 00:10:13,200
know there's nothing we can do

00:10:10,959 --> 00:10:14,320
um or not you know sometimes people just

00:10:13,200 --> 00:10:17,600
say don't bother me

00:10:14,320 --> 00:10:20,480
right and so what we really want to do

00:10:17,600 --> 00:10:21,519
is provide a a home for those kinds of

00:10:20,480 --> 00:10:23,600
things

00:10:21,519 --> 00:10:24,959
and we are trying to solve the kinds of

00:10:23,600 --> 00:10:27,760
problems like

00:10:24,959 --> 00:10:29,519
you know um where where do people go

00:10:27,760 --> 00:10:30,480
when they want to test something out on

00:10:29,519 --> 00:10:32,640
a mainframe

00:10:30,480 --> 00:10:33,760
um this is a discussion that's not

00:10:32,640 --> 00:10:35,519
that's not uh

00:10:33,760 --> 00:10:37,680
centered in the ombutus but it's a

00:10:35,519 --> 00:10:39,200
general open mainframe project

00:10:37,680 --> 00:10:39,920
discussion that we have on a regular

00:10:39,200 --> 00:10:41,519
basis

00:10:39,920 --> 00:10:43,279
and there are lots of solutions out

00:10:41,519 --> 00:10:44,959
there that are sort of in the works to

00:10:43,279 --> 00:10:47,440
try to open the platform up

00:10:44,959 --> 00:10:49,279
so that if you are a developer and you

00:10:47,440 --> 00:10:51,360
need a test resource

00:10:49,279 --> 00:10:53,920
you can find a place where you can go

00:10:51,360 --> 00:10:55,120
off and acquire the resources necessary

00:10:53,920 --> 00:10:56,800
to do

00:10:55,120 --> 00:11:00,240
whatever verification it is you want to

00:10:56,800 --> 00:11:02,160
do so we want to make that easier um

00:11:00,240 --> 00:11:03,279
but again that's a a general open

00:11:02,160 --> 00:11:06,399
mainframe project

00:11:03,279 --> 00:11:07,279
uh direction and uh we want ombatus to

00:11:06,399 --> 00:11:10,720
fit into that

00:11:07,279 --> 00:11:12,320
that very well so if you look out at our

00:11:10,720 --> 00:11:14,480
github repository

00:11:12,320 --> 00:11:16,720
uh in our org there are several

00:11:14,480 --> 00:11:18,800
repositories out there some of them are

00:11:16,720 --> 00:11:20,160
brand new open source projects that that

00:11:18,800 --> 00:11:23,279
people have created

00:11:20,160 --> 00:11:25,839
from scratch and want to publish

00:11:23,279 --> 00:11:27,519
uh and others are our existing open

00:11:25,839 --> 00:11:31,120
source projects with

00:11:27,519 --> 00:11:34,880
changes that have not yet upstreamed so

00:11:31,120 --> 00:11:37,360
uh sort of a sort of a a side

00:11:34,880 --> 00:11:38,800
facet or feature that goes along with

00:11:37,360 --> 00:11:42,160
the idea of

00:11:38,800 --> 00:11:42,959
hosting uh source repositories for for

00:11:42,160 --> 00:11:45,440
people who have

00:11:42,959 --> 00:11:46,880
new code uh people who write new code

00:11:45,440 --> 00:11:48,480
from scratch

00:11:46,880 --> 00:11:50,399
can can go ahead and put their things

00:11:48,480 --> 00:11:50,880
out here rather than put it under their

00:11:50,399 --> 00:11:52,880
own

00:11:50,880 --> 00:11:54,079
their own organization and have it being

00:11:52,880 --> 00:11:57,360
lost in the sea

00:11:54,079 --> 00:12:00,399
of github repos um that

00:11:57,360 --> 00:12:01,839
everybody you know um well nobody knows

00:12:00,399 --> 00:12:02,560
about because there are so many out

00:12:01,839 --> 00:12:05,440
there

00:12:02,560 --> 00:12:07,200
there's no time to uh or there's no

00:12:05,440 --> 00:12:08,720
place to begin to even search for that

00:12:07,200 --> 00:12:11,600
kind of function

00:12:08,720 --> 00:12:13,040
so what we're really hoping is that as

00:12:11,600 --> 00:12:16,079
as this project

00:12:13,040 --> 00:12:19,600
um continues to gain traction

00:12:16,079 --> 00:12:21,519
and um and and we grow the eminence of

00:12:19,600 --> 00:12:22,480
the project over time people become more

00:12:21,519 --> 00:12:24,079
familiar with it

00:12:22,480 --> 00:12:26,480
we're hoping that people circle around

00:12:24,079 --> 00:12:27,600
to this and start using it as a regular

00:12:26,480 --> 00:12:30,959
resource

00:12:27,600 --> 00:12:33,519
and uh engage with us um you know in a

00:12:30,959 --> 00:12:36,800
in an active manner

00:12:33,519 --> 00:12:39,200
we've had some some very good um

00:12:36,800 --> 00:12:39,920
involvement and there is we are gaining

00:12:39,200 --> 00:12:42,880
momentum

00:12:39,920 --> 00:12:44,560
you know over time here so um strongly

00:12:42,880 --> 00:12:47,600
encourage anyone who's got a

00:12:44,560 --> 00:12:51,120
you know a question a suggestion

00:12:47,600 --> 00:12:52,720
or um an idea for a new project and they

00:12:51,120 --> 00:12:55,680
want to put it somewhere

00:12:52,720 --> 00:12:57,440
um excuse me where it has the potential

00:12:55,680 --> 00:12:59,600
to be seen

00:12:57,440 --> 00:13:01,360
and integrated with the rest of the open

00:12:59,600 --> 00:13:04,800
source community

00:13:01,360 --> 00:13:06,560
and uh and discovered right like most

00:13:04,800 --> 00:13:09,519
things these days the hardest part

00:13:06,560 --> 00:13:10,560
uh you know of everyone having a voice

00:13:09,519 --> 00:13:12,160
is that it's hard to

00:13:10,560 --> 00:13:14,720
to to make yourself stand out from the

00:13:12,160 --> 00:13:17,519
rest of the crowd and so

00:13:14,720 --> 00:13:19,360
if you are a software developer um if

00:13:17,519 --> 00:13:20,560
you are working in the mainframe space

00:13:19,360 --> 00:13:22,240
or you want to know more about the

00:13:20,560 --> 00:13:24,959
mainframe space

00:13:22,240 --> 00:13:26,320
our doors are open um get in touch with

00:13:24,959 --> 00:13:28,800
us

00:13:26,320 --> 00:13:30,000
and just let us know what's going on we

00:13:28,800 --> 00:13:32,959
have a

00:13:30,000 --> 00:13:34,480
mailing list and a slack channel as all

00:13:32,959 --> 00:13:35,760
the projects that the open mainframe

00:13:34,480 --> 00:13:38,160
project do

00:13:35,760 --> 00:13:39,920
and um certainly you can contact me but

00:13:38,160 --> 00:13:42,720
i don't think that my uh

00:13:39,920 --> 00:13:43,760
email is available out there um if

00:13:42,720 --> 00:13:45,920
anybody wants though

00:13:43,760 --> 00:13:47,199
uh i can i can put my email in the in

00:13:45,920 --> 00:13:48,639
the chat and

00:13:47,199 --> 00:13:51,920
you're welcome to get in touch with me

00:13:48,639 --> 00:13:55,120
to to learn more about how to move ahead

00:13:51,920 --> 00:13:56,959
so that's kind of my introductory pitch

00:13:55,120 --> 00:13:58,160
i really hope that today we could have a

00:13:56,959 --> 00:14:00,560
discussion

00:13:58,160 --> 00:14:01,199
about uh you know about what the project

00:14:00,560 --> 00:14:04,959
is

00:14:01,199 --> 00:14:08,000
and um you know what it could be and so

00:14:04,959 --> 00:14:10,480
if anybody has a question uh certainly

00:14:08,000 --> 00:14:12,959
you know be glad to entertain um a

00:14:10,480 --> 00:14:12,959
discussion

00:14:14,800 --> 00:14:19,120
yeah feel free to enter your questions

00:14:16,399 --> 00:14:19,120
in the chat

00:14:21,360 --> 00:14:31,120
i'll give everybody a second to type in

00:14:23,600 --> 00:14:32,639
any questions they may have

00:14:31,120 --> 00:14:34,639
chris if you wouldn't mind could you

00:14:32,639 --> 00:14:37,600
scroll down to the bottom of this page

00:14:34,639 --> 00:14:38,639
and um and click on our github repo um

00:14:37,600 --> 00:14:40,560
we could

00:14:38,639 --> 00:14:43,680
just give people an idea right there

00:14:40,560 --> 00:14:46,560
where it says explore the code on github

00:14:43,680 --> 00:14:47,519
people could start to get an idea of the

00:14:46,560 --> 00:14:49,680
kinds of things that we've made

00:14:47,519 --> 00:14:53,839
available there

00:14:49,680 --> 00:14:53,839
so yeah perfect so

00:14:54,639 --> 00:14:59,600
um we've been spending a lot of time

00:14:57,680 --> 00:15:00,320
working with containerized workloads

00:14:59,600 --> 00:15:04,240
lately

00:15:00,320 --> 00:15:06,560
um my team focuses a lot on on that

00:15:04,240 --> 00:15:08,800
um there's a lot of work going on at ibm

00:15:06,560 --> 00:15:10,880
in the containerized workload space

00:15:08,800 --> 00:15:13,040
and so we have a repo out there called

00:15:10,880 --> 00:15:14,959
linux containers

00:15:13,040 --> 00:15:16,160
that has a lot of information on how to

00:15:14,959 --> 00:15:19,839
use them

00:15:16,160 --> 00:15:23,199
um as a an alternative we also have

00:15:19,839 --> 00:15:26,959
zos native uh repo

00:15:23,199 --> 00:15:30,000
which contains all sorts of tools

00:15:26,959 --> 00:15:30,320
uh a lot of uh hints and tips on how to

00:15:30,000 --> 00:15:33,360
do

00:15:30,320 --> 00:15:36,000
native porting to z os as opposed to uh

00:15:33,360 --> 00:15:37,199
simply running a container image on

00:15:36,000 --> 00:15:40,480
linux or z os

00:15:37,199 --> 00:15:43,519
these days so uh you know

00:15:40,480 --> 00:15:46,000
if if you want to find a technique

00:15:43,519 --> 00:15:47,920
or a suggestion or even a tool that

00:15:46,000 --> 00:15:50,560
you're welcome to download

00:15:47,920 --> 00:15:52,399
um all of our code is uh you know under

00:15:50,560 --> 00:15:54,000
the apache tune license you can go ahead

00:15:52,399 --> 00:15:55,680
and make use of it

00:15:54,000 --> 00:15:57,600
under the terms of that license

00:15:55,680 --> 00:15:59,360
agreement and

00:15:57,600 --> 00:16:01,440
use for whatever you want and certainly

00:15:59,360 --> 00:16:03,279
we would love it if you could um

00:16:01,440 --> 00:16:06,000
if you wanted to extend a tool or

00:16:03,279 --> 00:16:09,519
provide something new

00:16:06,000 --> 00:16:11,680
zml is actually a new sub project that

00:16:09,519 --> 00:16:15,839
we're hosting

00:16:11,680 --> 00:16:19,040
uh someone at ibm has created a

00:16:15,839 --> 00:16:23,040
a tool that allows you to specify

00:16:19,040 --> 00:16:23,920
in in yaml code uh and generate yaml

00:16:23,040 --> 00:16:28,320
code

00:16:23,920 --> 00:16:32,240
uh to uh to map out control box

00:16:28,320 --> 00:16:34,800
uh in in z os and uh this can

00:16:32,240 --> 00:16:35,360
technically work on it on any platform

00:16:34,800 --> 00:16:37,519
um

00:16:35,360 --> 00:16:39,360
but the the goal and the reason for

00:16:37,519 --> 00:16:41,759
doing this on z os

00:16:39,360 --> 00:16:43,680
is that we have lots and lots of

00:16:41,759 --> 00:16:45,600
assembler based interfaces

00:16:43,680 --> 00:16:48,160
that are part of the platform that have

00:16:45,600 --> 00:16:50,880
no high level language analog

00:16:48,160 --> 00:16:52,000
and so if people need to access one of

00:16:50,880 --> 00:16:54,320
our published

00:16:52,000 --> 00:16:56,639
external control box they have to drop

00:16:54,320 --> 00:17:00,079
into assembler to figure it out

00:16:56,639 --> 00:17:03,040
we uh are are making uh

00:17:00,079 --> 00:17:04,000
we are making the zml tool available so

00:17:03,040 --> 00:17:05,679
that people can

00:17:04,000 --> 00:17:07,679
create their own control box

00:17:05,679 --> 00:17:10,720
specifications and generate

00:17:07,679 --> 00:17:11,919
python code um directly to access those

00:17:10,720 --> 00:17:14,400
kinds of things

00:17:11,919 --> 00:17:16,720
so that's another way that we're opening

00:17:14,400 --> 00:17:20,799
up trying to open up the platform

00:17:16,720 --> 00:17:22,400
now originally when the team behind this

00:17:20,799 --> 00:17:24,000
wanted to come to the open mainframe

00:17:22,400 --> 00:17:26,559
project there was a question

00:17:24,000 --> 00:17:27,280
should it be its own separate project

00:17:26,559 --> 00:17:29,360
and uh

00:17:27,280 --> 00:17:30,400
we eventually settled on on the idea

00:17:29,360 --> 00:17:33,280
that it would be

00:17:30,400 --> 00:17:34,320
a repository that we would host under

00:17:33,280 --> 00:17:36,559
ombutus

00:17:34,320 --> 00:17:38,640
because um you know quite honestly to

00:17:36,559 --> 00:17:40,160
run your own fully blown project at the

00:17:38,640 --> 00:17:42,480
open mainframe project

00:17:40,160 --> 00:17:43,919
you know takes effort you have to set up

00:17:42,480 --> 00:17:45,520
governance and there's

00:17:43,919 --> 00:17:47,760
there's a structure that you have to

00:17:45,520 --> 00:17:49,440
follow if you just have some code that

00:17:47,760 --> 00:17:51,039
you want to publish

00:17:49,440 --> 00:17:52,880
you can bring it into the ambitus

00:17:51,039 --> 00:17:56,400
project and

00:17:52,880 --> 00:17:58,240
our team here will go ahead and handle

00:17:56,400 --> 00:18:00,240
you know the regular technical steering

00:17:58,240 --> 00:18:02,640
committee meetings um

00:18:00,240 --> 00:18:03,840
all of the all of the regular governance

00:18:02,640 --> 00:18:06,559
that it takes to be

00:18:03,840 --> 00:18:08,160
a member in good standing at the open

00:18:06,559 --> 00:18:09,600
mainframe project and the linux

00:18:08,160 --> 00:18:12,559
foundation

00:18:09,600 --> 00:18:13,760
so um you know if you have a smaller

00:18:12,559 --> 00:18:16,160
effort that you

00:18:13,760 --> 00:18:17,200
you want people to to get together and

00:18:16,160 --> 00:18:19,360
use

00:18:17,200 --> 00:18:20,240
um you're certainly welcome to come and

00:18:19,360 --> 00:18:22,480
and host it

00:18:20,240 --> 00:18:23,280
at the ombuds project and we would be

00:18:22,480 --> 00:18:25,840
glad to

00:18:23,280 --> 00:18:27,200
you know shepherd that on forward on

00:18:25,840 --> 00:18:30,240
your behalf

00:18:27,200 --> 00:18:32,640
if in fact though uh over time the

00:18:30,240 --> 00:18:33,840
community really grows for zml we always

00:18:32,640 --> 00:18:35,679
have the option of

00:18:33,840 --> 00:18:37,360
breaking this out into its own separate

00:18:35,679 --> 00:18:41,440
project right

00:18:37,360 --> 00:18:44,720
so look at ombutus as a way to to

00:18:41,440 --> 00:18:46,480
newer smaller efforts and uh and then

00:18:44,720 --> 00:18:47,679
potentially let them grow into their own

00:18:46,480 --> 00:18:51,919
fully blown

00:18:47,679 --> 00:18:54,320
uh project if uh

00:18:51,919 --> 00:18:56,400
so before i go on it uh and we review

00:18:54,320 --> 00:18:57,760
any of the other things uh any questions

00:18:56,400 --> 00:19:00,799
yet

00:18:57,760 --> 00:19:01,679
i don't have any questions yet okay all

00:19:00,799 --> 00:19:03,360
right well why don't

00:19:01,679 --> 00:19:05,120
we we can go down the list there's some

00:19:03,360 --> 00:19:06,400
very interesting things here that we're

00:19:05,120 --> 00:19:09,919
trying to do

00:19:06,400 --> 00:19:10,720
um so some may recognize bin utils and

00:19:09,919 --> 00:19:13,840
gcc

00:19:10,720 --> 00:19:16,400
as uh you know linux facilities

00:19:13,840 --> 00:19:17,919
uh these are examples of ports that are

00:19:16,400 --> 00:19:21,200
in progress now

00:19:17,919 --> 00:19:24,720
by a member of our team who is um

00:19:21,200 --> 00:19:28,240
actively gone off and ported both

00:19:24,720 --> 00:19:31,280
gcc and bin utils to z os

00:19:28,240 --> 00:19:33,600
and uh is making them run uh

00:19:31,280 --> 00:19:34,640
there's so the code changes that are

00:19:33,600 --> 00:19:37,039
necessary here

00:19:34,640 --> 00:19:38,400
um are available through these

00:19:37,039 --> 00:19:39,760
particular repos and

00:19:38,400 --> 00:19:41,760
you can go and see what kind of work's

00:19:39,760 --> 00:19:42,320
being done there these are examples of

00:19:41,760 --> 00:19:45,679
where

00:19:42,320 --> 00:19:47,840
um we have not upstreamed changes yet

00:19:45,679 --> 00:19:49,520
um at some point in time you can think

00:19:47,840 --> 00:19:51,200
of this as a staging area where you want

00:19:49,520 --> 00:19:52,240
to reach a critical mass of updates

00:19:51,200 --> 00:19:55,360
before going

00:19:52,240 --> 00:19:56,640
with an upstream request um and so

00:19:55,360 --> 00:19:59,520
that's the state that these two

00:19:56,640 --> 00:20:02,799
particular projects are in right now

00:19:59,520 --> 00:20:05,840
um the latest of our our uh

00:20:02,799 --> 00:20:08,400
repositories that we've created now

00:20:05,840 --> 00:20:09,840
is are the is the pi z kiln uh

00:20:08,400 --> 00:20:13,039
repository

00:20:09,840 --> 00:20:16,080
we just started that in this past week

00:20:13,039 --> 00:20:19,679
and um and and although

00:20:16,080 --> 00:20:20,080
the description for it is uh a little

00:20:19,679 --> 00:20:23,120
bit

00:20:20,080 --> 00:20:24,000
humorous uh the goal here is to provide

00:20:23,120 --> 00:20:27,520
a place

00:20:24,000 --> 00:20:31,600
to use to to create

00:20:27,520 --> 00:20:34,320
um more modern automation and workloads

00:20:31,600 --> 00:20:38,240
for devops purposes

00:20:34,320 --> 00:20:40,159
that that perhaps um

00:20:38,240 --> 00:20:41,840
are not part of some of the solutions

00:20:40,159 --> 00:20:44,559
that we have available today

00:20:41,840 --> 00:20:45,039
so for instance uh zoe provides a lot of

00:20:44,559 --> 00:20:48,480
um

00:20:45,039 --> 00:20:50,799
structure and automation and um

00:20:48,480 --> 00:20:52,320
and so you know you can go there you can

00:20:50,799 --> 00:20:53,919
you can get a lot of that infrastructure

00:20:52,320 --> 00:20:55,520
and make use of it right away

00:20:53,919 --> 00:20:57,919
these are for smaller efforts that

00:20:55,520 --> 00:20:58,720
perhaps one day might wind up as a zoe

00:20:57,919 --> 00:21:01,919
feature

00:20:58,720 --> 00:21:05,280
um or may wind up perhaps as uh

00:21:01,919 --> 00:21:09,120
you know an ansible um um

00:21:05,280 --> 00:21:12,799
recipe of some kind right um a playbook

00:21:09,120 --> 00:21:13,760
um but but yet uh we haven't graduated

00:21:12,799 --> 00:21:16,640
you know sort of to

00:21:13,760 --> 00:21:18,720
to that level yet so you think of the

00:21:16,640 --> 00:21:20,880
kiln as a way to do

00:21:18,720 --> 00:21:23,600
open source kinds of things to control

00:21:20,880 --> 00:21:26,080
and administer the z os platform

00:21:23,600 --> 00:21:28,159
um and the idea here is that that you

00:21:26,080 --> 00:21:30,400
would create

00:21:28,159 --> 00:21:32,240
metaphorically speaking bricks of

00:21:30,400 --> 00:21:33,679
functionality that you can assemble or

00:21:32,240 --> 00:21:37,120
stack together to create

00:21:33,679 --> 00:21:38,960
something um you know that is useful

00:21:37,120 --> 00:21:40,480
and so there are a lot of creative

00:21:38,960 --> 00:21:42,159
thoughts and ideas that are going into

00:21:40,480 --> 00:21:43,120
this space a lot of them are python

00:21:42,159 --> 00:21:47,120
based

00:21:43,120 --> 00:21:49,520
um although they don't have to be um

00:21:47,120 --> 00:21:50,720
and and the idea is that we have lots of

00:21:49,520 --> 00:21:53,919
utilities out there

00:21:50,720 --> 00:21:58,720
on on the zos platform uh

00:21:53,919 --> 00:22:01,520
things like zoau uh zdt wazi

00:21:58,720 --> 00:22:03,520
um in those kinds of solutions and so

00:22:01,520 --> 00:22:06,159
think of pizza kiln as a place to

00:22:03,520 --> 00:22:06,640
write applications that may make use of

00:22:06,159 --> 00:22:09,679
those

00:22:06,640 --> 00:22:11,440
particular um pieces of

00:22:09,679 --> 00:22:12,720
infrastructure today open source

00:22:11,440 --> 00:22:15,200
infrastructure

00:22:12,720 --> 00:22:16,480
um and and and provide them out here to

00:22:15,200 --> 00:22:18,960
do something useful

00:22:16,480 --> 00:22:20,720
um there's a great place to document use

00:22:18,960 --> 00:22:24,320
cases for these particular

00:22:20,720 --> 00:22:27,840
uh open source capabilities okay

00:22:24,320 --> 00:22:28,320
and again um these are the the structure

00:22:27,840 --> 00:22:30,720
of the

00:22:28,320 --> 00:22:31,520
of the uh of the functionality put out

00:22:30,720 --> 00:22:35,200
here is very

00:22:31,520 --> 00:22:37,280
is very fluid and we may find that it's

00:22:35,200 --> 00:22:39,760
better to refactor things or move

00:22:37,280 --> 00:22:40,720
things to other projects as they make

00:22:39,760 --> 00:22:43,120
sense

00:22:40,720 --> 00:22:44,880
but what do you do with the things um

00:22:43,120 --> 00:22:45,440
you know in the meantime when perhaps

00:22:44,880 --> 00:22:48,799
you're just

00:22:45,440 --> 00:22:50,799
beginning you're just getting started um

00:22:48,799 --> 00:22:52,320
and uh you're not quite sure how they

00:22:50,799 --> 00:22:53,200
may fit in with one of the larger

00:22:52,320 --> 00:22:56,480
frameworks

00:22:53,200 --> 00:22:58,080
right um so a lot of possibility here

00:22:56,480 --> 00:22:59,679
there's a lot of creativity that i'm

00:22:58,080 --> 00:23:01,360
hearing from that team

00:22:59,679 --> 00:23:03,039
in terms of what it is they want to

00:23:01,360 --> 00:23:04,320
accomplish and how they want to go about

00:23:03,039 --> 00:23:07,600
it

00:23:04,320 --> 00:23:10,640
uh the ombuds repo of course is is

00:23:07,600 --> 00:23:11,520
where we uh we keep all of our all of

00:23:10,640 --> 00:23:13,360
our governance

00:23:11,520 --> 00:23:14,880
information we have our list of

00:23:13,360 --> 00:23:16,080
maintainers there etc

00:23:14,880 --> 00:23:18,159
if you want to know more about how the

00:23:16,080 --> 00:23:20,240
project actually operates that's the

00:23:18,159 --> 00:23:23,120
repository you'll want to go to

00:23:20,240 --> 00:23:24,240
and um you should be able to find uh

00:23:23,120 --> 00:23:26,320
meeting minutes

00:23:24,240 --> 00:23:27,600
uh members who participate in all of

00:23:26,320 --> 00:23:30,720
that we meet

00:23:27,600 --> 00:23:31,679
twice a month um or every two weeks i

00:23:30,720 --> 00:23:34,400
should say

00:23:31,679 --> 00:23:35,919
and um you know we just talk about about

00:23:34,400 --> 00:23:38,480
potential new uh

00:23:35,919 --> 00:23:39,039
content we'll talk about what's working

00:23:38,480 --> 00:23:42,080
well

00:23:39,039 --> 00:23:45,279
and you know how do we need to manage

00:23:42,080 --> 00:23:47,039
you know manage the project uh

00:23:45,279 --> 00:23:49,520
linux containers i already spoke to a

00:23:47,039 --> 00:23:50,480
bit um we have some docker files in here

00:23:49,520 --> 00:23:53,760
we have

00:23:50,480 --> 00:23:54,320
again tools uh and use cases that

00:23:53,760 --> 00:23:58,240
explain

00:23:54,320 --> 00:24:00,080
how people can come in and make use of

00:23:58,240 --> 00:24:02,320
uh containers whether they're running on

00:24:00,080 --> 00:24:04,000
linux or they're running on z os and a

00:24:02,320 --> 00:24:07,279
zcx appliance

00:24:04,000 --> 00:24:10,240
uh i i do tend to see that uh

00:24:07,279 --> 00:24:12,559
probably the advice in here is is used

00:24:10,240 --> 00:24:13,039
more heavily by the z os community given

00:24:12,559 --> 00:24:15,200
that

00:24:13,039 --> 00:24:18,159
container capability linux container

00:24:15,200 --> 00:24:21,360
capability is relatively new um

00:24:18,159 --> 00:24:23,679
certainly on the linux side everybody uh

00:24:21,360 --> 00:24:24,880
many people there are familiar with the

00:24:23,679 --> 00:24:27,360
docker environment

00:24:24,880 --> 00:24:29,200
and are at ease with you know working

00:24:27,360 --> 00:24:31,840
with those kinds of

00:24:29,200 --> 00:24:32,799
those kinds of workloads so but in

00:24:31,840 --> 00:24:35,840
either case

00:24:32,799 --> 00:24:38,720
um this is a great place to discover

00:24:35,840 --> 00:24:40,799
what's available on the system and uh

00:24:38,720 --> 00:24:42,720
and look for some some useful advice

00:24:40,799 --> 00:24:45,120
on on how to make best use of containers

00:24:42,720 --> 00:24:48,320
on the platform

00:24:45,120 --> 00:24:51,679
glibc is another example of a ported

00:24:48,320 --> 00:24:53,679
uh linux environment a large one gcc and

00:24:51,679 --> 00:24:57,279
gene libsy are very large

00:24:53,679 --> 00:24:59,520
um you know compiler and runtime um

00:24:57,279 --> 00:25:00,960
projects so there's a lot of work that's

00:24:59,520 --> 00:25:02,640
that's gone on in here you can see

00:25:00,960 --> 00:25:03,679
there's been quite a bit of activity in

00:25:02,640 --> 00:25:06,880
this space

00:25:03,679 --> 00:25:08,640
uh in the past but um but yes these

00:25:06,880 --> 00:25:11,679
projects continue to be

00:25:08,640 --> 00:25:13,679
hosted here and uh at any point in time

00:25:11,679 --> 00:25:15,120
if someone wants to discover

00:25:13,679 --> 00:25:16,720
you know what what kinds of porting

00:25:15,120 --> 00:25:18,880
changes are necessary to make this work

00:25:16,720 --> 00:25:21,760
they can find them here

00:25:18,880 --> 00:25:22,880
uh the last one is is actually a little

00:25:21,760 --> 00:25:25,600
project that i

00:25:22,880 --> 00:25:29,360
put together myself this is a little

00:25:25,600 --> 00:25:33,120
project of mine called xetron um

00:25:29,360 --> 00:25:37,600
the the point to to this is to

00:25:33,120 --> 00:25:41,360
enable uh essentially the jupiter ui

00:25:37,600 --> 00:25:44,320
to run on z os to accomplish

00:25:41,360 --> 00:25:45,440
devops kinds of tasks now jupiter's not

00:25:44,320 --> 00:25:48,960
new to z os

00:25:45,440 --> 00:25:51,200
um but it generally falls within the

00:25:48,960 --> 00:25:52,080
data science domain so people doing data

00:25:51,200 --> 00:25:55,279
science

00:25:52,080 --> 00:25:57,760
um understand how what jupiter is and

00:25:55,279 --> 00:26:00,559
how to to make it run on z os

00:25:57,760 --> 00:26:01,520
uh i i thought that perhaps we could

00:26:00,559 --> 00:26:04,640
extend

00:26:01,520 --> 00:26:07,039
the use case for jupiter to do

00:26:04,640 --> 00:26:08,000
you know more mundane devops kinds of

00:26:07,039 --> 00:26:11,520
things

00:26:08,000 --> 00:26:14,080
um you know for for various purposes uh

00:26:11,520 --> 00:26:15,679
system administration of various kinds

00:26:14,080 --> 00:26:18,080
um and that there was a lot of

00:26:15,679 --> 00:26:21,440
opportunity to use

00:26:18,080 --> 00:26:25,679
uh jupiter notebooks as a means to

00:26:21,440 --> 00:26:28,720
not only allow program execution but

00:26:25,679 --> 00:26:31,840
assist with the with the

00:26:28,720 --> 00:26:33,919
education of new users to the platform

00:26:31,840 --> 00:26:34,880
so that eventually we could get to the

00:26:33,919 --> 00:26:38,480
point where

00:26:34,880 --> 00:26:42,159
if someone has a use case or a task

00:26:38,480 --> 00:26:44,480
necessary to go off and administer a zos

00:26:42,159 --> 00:26:46,159
system or for that matter a linux system

00:26:44,480 --> 00:26:48,080
and they want to explain it all the

00:26:46,159 --> 00:26:50,960
steps in detail

00:26:48,080 --> 00:26:51,600
that can be captured in a in a jupiter

00:26:50,960 --> 00:26:53,120
notebook

00:26:51,600 --> 00:26:55,200
rather than written down on a piece of

00:26:53,120 --> 00:26:57,600
paper or a red book

00:26:55,200 --> 00:26:58,320
uh or or any other manual that's out

00:26:57,600 --> 00:27:01,360
there

00:26:58,320 --> 00:27:03,120
um from my experience with

00:27:01,360 --> 00:27:04,799
with z os system administrators in

00:27:03,120 --> 00:27:07,440
particular they

00:27:04,799 --> 00:27:08,720
really tend to like uh you know a an

00:27:07,440 --> 00:27:11,279
ordered cookbook

00:27:08,720 --> 00:27:12,000
of steps that it takes to to accomplish

00:27:11,279 --> 00:27:13,679
things

00:27:12,000 --> 00:27:15,520
and that's a great way to do things it's

00:27:13,679 --> 00:27:17,679
it's a great way to make sure that you

00:27:15,520 --> 00:27:18,559
uh you know you do everything you're

00:27:17,679 --> 00:27:20,320
required to do

00:27:18,559 --> 00:27:22,159
you don't miss a step along the way and

00:27:20,320 --> 00:27:24,080
those kinds of things and you'll find a

00:27:22,159 --> 00:27:26,080
lot of system administrators actually

00:27:24,080 --> 00:27:27,120
have you know check boxes that they make

00:27:26,080 --> 00:27:28,880
for themselves

00:27:27,120 --> 00:27:30,399
all of that can be captured very easily

00:27:28,880 --> 00:27:33,679
in a jupiter notebook

00:27:30,399 --> 00:27:34,799
and done in a you know a way that's

00:27:33,679 --> 00:27:36,960
shareable

00:27:34,799 --> 00:27:38,240
with others more more readily shared

00:27:36,960 --> 00:27:40,559
anywhere

00:27:38,240 --> 00:27:42,640
and so that's the hope we have for this

00:27:40,559 --> 00:27:44,000
uh this particular project

00:27:42,640 --> 00:27:45,760
there's a little bit of work that needs

00:27:44,000 --> 00:27:46,399
to be done on the platform to truly sort

00:27:45,760 --> 00:27:48,320
of

00:27:46,399 --> 00:27:50,480
unleash the capabilities we have planned

00:27:48,320 --> 00:27:54,240
here but we think we're getting close to

00:27:50,480 --> 00:27:56,640
that so i do see that there is one

00:27:54,240 --> 00:27:59,840
question

00:27:56,640 --> 00:28:03,120
uh yes javier hey javier

00:27:59,840 --> 00:28:05,520
um can you comment on the prerequisite

00:28:03,120 --> 00:28:07,360
prerequisites to accept an open source

00:28:05,520 --> 00:28:09,279
project hosted in amateurs can anyone

00:28:07,360 --> 00:28:12,080
apply

00:28:09,279 --> 00:28:13,200
so the answer is yes anyone can apply we

00:28:12,080 --> 00:28:16,320
don't have a rigid

00:28:13,200 --> 00:28:18,880
set of rules to conform to

00:28:16,320 --> 00:28:20,399
or anything like that we've taken code

00:28:18,880 --> 00:28:23,760
fragments as small as

00:28:20,399 --> 00:28:26,159
you know one shell script of 25 lines

00:28:23,760 --> 00:28:27,520
um that's fine if somebody wants to

00:28:26,159 --> 00:28:29,600
provide that

00:28:27,520 --> 00:28:31,120
we'll find a home for it in one of our

00:28:29,600 --> 00:28:33,520
existing repos

00:28:31,120 --> 00:28:35,760
so zos native for instance or linux

00:28:33,520 --> 00:28:37,600
containers those often tend to be

00:28:35,760 --> 00:28:39,279
good repositories for very small

00:28:37,600 --> 00:28:41,200
fragments of code

00:28:39,279 --> 00:28:43,440
anyone can apply and we would encourage

00:28:41,200 --> 00:28:46,000
anyone who just has

00:28:43,440 --> 00:28:46,480
um you know something you want to share

00:28:46,000 --> 00:28:49,520
um

00:28:46,480 --> 00:28:51,520
to to join us um get in touch with us

00:28:49,520 --> 00:28:52,960
and uh what we would do is we would

00:28:51,520 --> 00:28:54,000
invite you to a technical steering

00:28:52,960 --> 00:28:55,840
committee meeting

00:28:54,000 --> 00:28:57,760
where we could just talk through what it

00:28:55,840 --> 00:28:58,320
is that you have and what it is you

00:28:57,760 --> 00:29:01,600
might

00:28:58,320 --> 00:29:03,039
want to provide or discuss any other way

00:29:01,600 --> 00:29:06,080
you want to collaborate

00:29:03,039 --> 00:29:07,760
uh from there to figure out you know do

00:29:06,080 --> 00:29:10,000
we need to create another repo

00:29:07,760 --> 00:29:11,600
uh you know to add to our collection or

00:29:10,000 --> 00:29:13,520
does it fit in with one of the existing

00:29:11,600 --> 00:29:16,159
ones

00:29:13,520 --> 00:29:17,760
and uh do we require a certain amount of

00:29:16,159 --> 00:29:21,039
activity in the project

00:29:17,760 --> 00:29:22,159
um no we don't we don't require

00:29:21,039 --> 00:29:24,320
you know we're not going to hold

00:29:22,159 --> 00:29:25,120
people's feet to the fire in the sense

00:29:24,320 --> 00:29:27,679
of um

00:29:25,120 --> 00:29:28,960
you know you have to be active a certain

00:29:27,679 --> 00:29:30,559
a certain amount

00:29:28,960 --> 00:29:32,080
um certainly there are open source

00:29:30,559 --> 00:29:35,440
projects where

00:29:32,080 --> 00:29:37,039
that is perhaps an important thing uh at

00:29:35,440 --> 00:29:38,480
this point in time

00:29:37,039 --> 00:29:40,320
uh we're just trying to build a

00:29:38,480 --> 00:29:43,440
community and the best way to do that

00:29:40,320 --> 00:29:45,120
is to simply make a place where people

00:29:43,440 --> 00:29:47,279
can come and share their ideas

00:29:45,120 --> 00:29:48,159
whether that's one idea and you know and

00:29:47,279 --> 00:29:50,720
you're done

00:29:48,159 --> 00:29:51,600
you know maybe that happens i we don't

00:29:50,720 --> 00:29:54,080
see that as a

00:29:51,600 --> 00:29:55,200
you know a failing or a problem right if

00:29:54,080 --> 00:29:56,880
if

00:29:55,200 --> 00:29:58,399
the extent of your interaction with us

00:29:56,880 --> 00:30:00,720
is is short

00:29:58,399 --> 00:30:02,799
then so be it we'd still like to hear

00:30:00,720 --> 00:30:06,000
what you've got to say

00:30:02,799 --> 00:30:07,600
okay uh certainly though if you want

00:30:06,000 --> 00:30:09,360
if you want to you're certainly welcome

00:30:07,600 --> 00:30:10,320
to take a more active role and become a

00:30:09,360 --> 00:30:13,200
maintainer

00:30:10,320 --> 00:30:14,480
um you know there are certain criteria

00:30:13,200 --> 00:30:16,399
for that to happen but

00:30:14,480 --> 00:30:17,600
if you're simply just a you know a

00:30:16,399 --> 00:30:22,640
contributor

00:30:17,600 --> 00:30:26,640
then um by all means the door is open

00:30:22,640 --> 00:30:26,640
uh something to chat okay

00:30:26,720 --> 00:30:32,559
um so question in the chat is ibm

00:30:30,240 --> 00:30:34,399
mainframe hardware actively being sold

00:30:32,559 --> 00:30:35,840
that is where is the demand in the

00:30:34,399 --> 00:30:37,600
market and how many companies still

00:30:35,840 --> 00:30:41,520
purchase mainframes

00:30:37,600 --> 00:30:42,320
so i am not a uh i am not a sales or

00:30:41,520 --> 00:30:45,360
marketing

00:30:42,320 --> 00:30:45,840
person uh i do know that we sell quite a

00:30:45,360 --> 00:30:48,720
bit of

00:30:45,840 --> 00:30:50,640
mainframe hardware and it's uh still to

00:30:48,720 --> 00:30:52,240
this day a very

00:30:50,640 --> 00:30:55,120
lucrative business for the ibm

00:30:52,240 --> 00:30:57,120
corporation i i can't speak for ibm

00:30:55,120 --> 00:30:58,320
i'm speaking on behalf of omatus in the

00:30:57,120 --> 00:31:01,760
open source

00:30:58,320 --> 00:31:04,480
open mainframe project but um

00:31:01,760 --> 00:31:05,360
you know the the things that you will

00:31:04,480 --> 00:31:07,679
you will hear

00:31:05,360 --> 00:31:09,840
uh in ibm press releases are really true

00:31:07,679 --> 00:31:11,360
there are lots of very large corporate

00:31:09,840 --> 00:31:14,960
customers out there

00:31:11,360 --> 00:31:17,679
who um are heavily invested in ibm z

00:31:14,960 --> 00:31:19,679
and have plans to continue that well

00:31:17,679 --> 00:31:22,960
into the future or even expand on

00:31:19,679 --> 00:31:25,120
on the uh deployments that they have so

00:31:22,960 --> 00:31:26,880
um i don't have the figures at my

00:31:25,120 --> 00:31:28,399
fingertips i'm from a development

00:31:26,880 --> 00:31:31,279
organization so i don't

00:31:28,399 --> 00:31:33,519
um you know i'm not a marketing person

00:31:31,279 --> 00:31:36,240
who would know those kinds of numbers

00:31:33,519 --> 00:31:37,679
um and i would not hazard a guess as to

00:31:36,240 --> 00:31:38,320
you know how many clients we have out

00:31:37,679 --> 00:31:41,919
there but

00:31:38,320 --> 00:31:42,960
um you know you can certainly look

00:31:41,919 --> 00:31:45,440
around and

00:31:42,960 --> 00:31:46,000
look at some of the ibm marketing

00:31:45,440 --> 00:31:48,559
material

00:31:46,000 --> 00:31:49,760
and try to get a better understanding of

00:31:48,559 --> 00:31:51,519
um

00:31:49,760 --> 00:31:53,120
you know of that environment the only

00:31:51,519 --> 00:31:55,600
thing i will say um

00:31:53,120 --> 00:31:56,480
is that ibm tends to be rather

00:31:55,600 --> 00:31:58,840
conservative

00:31:56,480 --> 00:32:01,039
in the way that we talk about our

00:31:58,840 --> 00:32:04,880
accomplishments um

00:32:01,039 --> 00:32:06,240
and so uh you can take what's published

00:32:04,880 --> 00:32:10,399
in the marketing material

00:32:06,240 --> 00:32:13,440
and and um and believe what it says

00:32:10,399 --> 00:32:17,760
if this is a very important

00:32:13,440 --> 00:32:19,600
platform around the world and if

00:32:17,760 --> 00:32:22,080
if the mainframe were to disappear

00:32:19,600 --> 00:32:23,360
tomorrow i think people would be amazed

00:32:22,080 --> 00:32:27,279
at how many things

00:32:23,360 --> 00:32:30,399
break so we're a very vital part of the

00:32:27,279 --> 00:32:30,399
global ecosystem

00:32:32,080 --> 00:32:36,559
uh let's see any other questions

00:32:38,559 --> 00:32:43,840
i don't see any other questions

00:32:52,159 --> 00:32:59,440
so um we you know uh

00:32:56,640 --> 00:33:01,519
that that's kind of the extent i wanted

00:32:59,440 --> 00:33:03,360
to uh

00:33:01,519 --> 00:33:05,039
discuss uh what the purpose of the

00:33:03,360 --> 00:33:08,080
amateurs project is

00:33:05,039 --> 00:33:10,080
um again i see us as a uh

00:33:08,080 --> 00:33:11,519
sort of a place at the open mainframe

00:33:10,080 --> 00:33:15,279
project to

00:33:11,519 --> 00:33:18,640
go off and um uh uh

00:33:15,279 --> 00:33:22,320
provide a way for contributors to

00:33:18,640 --> 00:33:24,720
to offer up uh their time

00:33:22,320 --> 00:33:26,080
and their talent uh and anything that

00:33:24,720 --> 00:33:27,039
they want to share with the broader

00:33:26,080 --> 00:33:29,600
community

00:33:27,039 --> 00:33:30,799
in a low-impact way a lot of times when

00:33:29,600 --> 00:33:32,240
if you you're going to get involved with

00:33:30,799 --> 00:33:35,440
an open source community

00:33:32,240 --> 00:33:37,440
there's a commitment involved

00:33:35,440 --> 00:33:40,320
that can sometimes be a lot of work and

00:33:37,440 --> 00:33:41,840
not everybody has the time to do that

00:33:40,320 --> 00:33:44,080
so we're really hoping at this point in

00:33:41,840 --> 00:33:47,360
time to uh you know to get

00:33:44,080 --> 00:33:49,679
uh to provide a and a place

00:33:47,360 --> 00:33:51,679
for people to easily collaborate let's

00:33:49,679 --> 00:33:53,519
put it that way perhaps a uh

00:33:51,679 --> 00:33:55,440
think of it as a public square where you

00:33:53,519 --> 00:33:58,399
can come in and talk with other people

00:33:55,440 --> 00:33:59,120
in the mainframe space i see we do have

00:33:58,399 --> 00:34:01,200
another question

00:33:59,120 --> 00:34:02,640
uh to what extent can you run containers

00:34:01,200 --> 00:34:06,159
on z os

00:34:02,640 --> 00:34:09,760
apart from the z container extension

00:34:06,159 --> 00:34:10,240
okay so uh the short answer is that you

00:34:09,760 --> 00:34:13,919
can't

00:34:10,240 --> 00:34:16,399
you z container extension appliances

00:34:13,919 --> 00:34:17,280
are required as the runtime environment

00:34:16,399 --> 00:34:20,720
for

00:34:17,280 --> 00:34:22,159
linux containers on cos so i always

00:34:20,720 --> 00:34:26,320
think of it as a

00:34:22,159 --> 00:34:30,000
a type of a hypervisor what you do

00:34:26,320 --> 00:34:32,159
is is go in and create we refer to it as

00:34:30,000 --> 00:34:34,079
an appliance for lack of a better term

00:34:32,159 --> 00:34:36,720
i know the term appliance has been

00:34:34,079 --> 00:34:39,919
applied to mean many different things

00:34:36,720 --> 00:34:41,119
on on on various platforms but here what

00:34:39,919 --> 00:34:43,839
it means is

00:34:41,119 --> 00:34:44,720
you go off uh you run through an

00:34:43,839 --> 00:34:47,760
automated

00:34:44,720 --> 00:34:49,919
workflow that will define a whole set of

00:34:47,760 --> 00:34:53,359
resources required

00:34:49,919 --> 00:34:54,240
to bring up a container extensions

00:34:53,359 --> 00:34:58,079
environment

00:34:54,240 --> 00:35:00,079
that involves z os data sets

00:34:58,079 --> 00:35:01,760
for persistent storage it involves you

00:35:00,079 --> 00:35:02,800
know the system image the kernel gets

00:35:01,760 --> 00:35:05,680
loaded into these

00:35:02,800 --> 00:35:07,760
these um these data sets um there are

00:35:05,680 --> 00:35:09,520
network definitions involved

00:35:07,760 --> 00:35:11,359
there are all sorts of resources that

00:35:09,520 --> 00:35:15,200
all have to be configured

00:35:11,359 --> 00:35:17,839
to run together to provide um the zcx

00:35:15,200 --> 00:35:19,040
functionality and then once you have

00:35:17,839 --> 00:35:21,200
that done

00:35:19,040 --> 00:35:23,119
uh you can start it up as an address

00:35:21,200 --> 00:35:26,079
space just like you would any other task

00:35:23,119 --> 00:35:28,320
on the platform and then you can ssh

00:35:26,079 --> 00:35:30,000
into it and you have a full live linux

00:35:28,320 --> 00:35:33,599
environment

00:35:30,000 --> 00:35:35,440
from there that's where you deploy your

00:35:33,599 --> 00:35:37,040
your containers your containerized

00:35:35,440 --> 00:35:39,520
workloads

00:35:37,040 --> 00:35:40,720
you pull things using the docker command

00:35:39,520 --> 00:35:43,520
line

00:35:40,720 --> 00:35:44,320
and you do all of that this is the only

00:35:43,520 --> 00:35:46,720
place where

00:35:44,320 --> 00:35:47,599
that functionality exists on the

00:35:46,720 --> 00:35:49,680
platform

00:35:47,599 --> 00:35:50,880
so you can't take a container image and

00:35:49,680 --> 00:35:53,359
uh say um

00:35:50,880 --> 00:35:54,880
you know telnet into the the tso

00:35:53,359 --> 00:35:57,440
environment and

00:35:54,880 --> 00:35:58,320
in any way make use of that uh for those

00:35:57,440 --> 00:36:00,720
who may not

00:35:58,320 --> 00:36:02,160
you know be familiar with zos tso is one

00:36:00,720 --> 00:36:03,280
of the runtime environments that you can

00:36:02,160 --> 00:36:05,920
get into

00:36:03,280 --> 00:36:07,280
um think of container extensions as

00:36:05,920 --> 00:36:09,599
providing

00:36:07,280 --> 00:36:10,480
another interface that is a fully

00:36:09,599 --> 00:36:12,880
capable

00:36:10,480 --> 00:36:14,480
minix environment that's tailored to

00:36:12,880 --> 00:36:17,680
supporting the docker command

00:36:14,480 --> 00:36:21,040
interface so

00:36:17,680 --> 00:36:22,960
now uh that said uh what you

00:36:21,040 --> 00:36:24,480
what you get out of that environment is

00:36:22,960 --> 00:36:26,160
a a full running

00:36:24,480 --> 00:36:28,640
linux environment that then can

00:36:26,160 --> 00:36:31,839
communicate through tcpip

00:36:28,640 --> 00:36:32,240
to the zos the outside zos platform and

00:36:31,839 --> 00:36:35,680
uh

00:36:32,240 --> 00:36:37,760
right now um that tcp

00:36:35,680 --> 00:36:39,680
is is the only interface interface where

00:36:37,760 --> 00:36:42,079
that you know that occurs so

00:36:39,680 --> 00:36:44,720
if you go in and for instance set up an

00:36:42,079 --> 00:36:47,599
nginx server to serve web pages

00:36:44,720 --> 00:36:48,800
uh you know and you want to talk to the

00:36:47,599 --> 00:36:50,880
outside world

00:36:48,800 --> 00:36:52,640
uh you can do that through any server

00:36:50,880 --> 00:36:55,200
that happens to be running

00:36:52,640 --> 00:36:57,040
you know on z os so if there's a

00:36:55,200 --> 00:36:59,119
published ip address

00:36:57,040 --> 00:37:00,320
and you can reach that and you have a

00:36:59,119 --> 00:37:02,480
you know a port number

00:37:00,320 --> 00:37:04,720
that that your application is listening

00:37:02,480 --> 00:37:08,480
to or a rest interface

00:37:04,720 --> 00:37:11,839
um you can interact that way between

00:37:08,480 --> 00:37:14,640
container extensions in ncos

00:37:11,839 --> 00:37:16,320
so i hope that answers the question that

00:37:14,640 --> 00:37:17,839
this is a big topic so

00:37:16,320 --> 00:37:23,839
you know we could we could go in many

00:37:17,839 --> 00:37:25,760
different directions on this particular

00:37:23,839 --> 00:37:28,720
any last questions out there now's your

00:37:25,760 --> 00:37:28,720
chance to get them answered

00:37:30,640 --> 00:37:34,320
personally i've been a big fan of zccx

00:37:33,359 --> 00:37:36,320
i've worked

00:37:34,320 --> 00:37:37,599
as an extended part of that development

00:37:36,320 --> 00:37:40,640
team for the past

00:37:37,599 --> 00:37:41,599
year and a half now um it's a really

00:37:40,640 --> 00:37:44,880
nice environment

00:37:41,599 --> 00:37:47,760
it's it's um think of it as

00:37:44,880 --> 00:37:48,560
well unix system services exists on z os

00:37:47,760 --> 00:37:51,760
today

00:37:48,560 --> 00:37:53,839
you can ssh into unix system services

00:37:51,760 --> 00:37:56,880
and interact directly with the os

00:37:53,839 --> 00:37:58,800
through unix interfaces uh

00:37:56,880 --> 00:38:01,200
what's nice about container extensions

00:37:58,800 --> 00:38:04,320
is it's a fully blown linux environment

00:38:01,200 --> 00:38:05,280
and therefore you you you have a lot

00:38:04,320 --> 00:38:08,720
more um

00:38:05,280 --> 00:38:11,599
capability to run linux workloads

00:38:08,720 --> 00:38:12,079
as anybody knows uh who's ever tried to

00:38:11,599 --> 00:38:14,000
port

00:38:12,079 --> 00:38:16,560
code from the linux community over to z

00:38:14,000 --> 00:38:18,240
os there are a lot of dependencies that

00:38:16,560 --> 00:38:19,119
are not satisfied in the z os

00:38:18,240 --> 00:38:23,040
environment

00:38:19,119 --> 00:38:24,880
and while it's um it's worthwhile to

00:38:23,040 --> 00:38:26,480
port code to z os it's also not a

00:38:24,880 --> 00:38:29,280
lightweight process

00:38:26,480 --> 00:38:31,839
and so if you really want your open

00:38:29,280 --> 00:38:33,440
source linux based code to run on z os

00:38:31,839 --> 00:38:35,359
you always have the option of porting it

00:38:33,440 --> 00:38:39,119
over to z os itself

00:38:35,359 --> 00:38:40,160
um and just be forewarned though that

00:38:39,119 --> 00:38:42,240
that that is a

00:38:40,160 --> 00:38:43,680
you know a pretty heavyweight process if

00:38:42,240 --> 00:38:45,599
you wanted to run quickly

00:38:43,680 --> 00:38:47,440
or perhaps you even want to you know

00:38:45,599 --> 00:38:48,800
just prototype an environment or show a

00:38:47,440 --> 00:38:52,160
proof of concept

00:38:48,800 --> 00:38:53,280
zcx can be a very very z container

00:38:52,160 --> 00:38:56,800
extensions

00:38:53,280 --> 00:39:00,320
can be a very very uh useful tool

00:38:56,800 --> 00:39:00,960
to demonstrate code rapidly without

00:39:00,320 --> 00:39:02,480
spending

00:39:00,960 --> 00:39:04,000
six or nine months you know trying to

00:39:02,480 --> 00:39:06,079
get it to run

00:39:04,000 --> 00:39:07,839
if it runs in in a linux environment and

00:39:06,079 --> 00:39:10,240
you can compile and build it

00:39:07,839 --> 00:39:11,040
on a linux on z platform or a linux one

00:39:10,240 --> 00:39:13,119
platform

00:39:11,040 --> 00:39:14,960
and generate a container image for it

00:39:13,119 --> 00:39:16,560
you just deploy it into your

00:39:14,960 --> 00:39:18,640
container extensions environment and

00:39:16,560 --> 00:39:20,880
you're up and running so

00:39:18,640 --> 00:39:23,599
um we've been really really pleased with

00:39:20,880 --> 00:39:29,359
the capabilities of that particular new

00:39:23,599 --> 00:39:31,359
feature of z os

00:39:29,359 --> 00:39:32,480
but again you know ombatus is here to

00:39:31,359 --> 00:39:34,560
help help

00:39:32,480 --> 00:39:36,160
people um you know who may want to go

00:39:34,560 --> 00:39:38,720
through the full porting effort

00:39:36,160 --> 00:39:40,000
because again um there are i you know we

00:39:38,720 --> 00:39:41,280
we could go down a rabbit hole of

00:39:40,000 --> 00:39:44,480
discussion about

00:39:41,280 --> 00:39:45,920
you know what what's uh what's

00:39:44,480 --> 00:39:48,000
when do you make the decision to

00:39:45,920 --> 00:39:49,680
containerize and maybe deploying ccx

00:39:48,000 --> 00:39:52,960
versus porting to z os

00:39:49,680 --> 00:39:54,320
but in both cases um you know omnitus is

00:39:52,960 --> 00:39:56,880
meant to be here

00:39:54,320 --> 00:39:58,480
uh you know to find out you know what

00:39:56,880 --> 00:40:00,800
you need to go forward in either one of

00:39:58,480 --> 00:40:03,040
these two environments

00:40:00,800 --> 00:40:03,040
okay

00:40:06,560 --> 00:40:09,920
thanks so much joe i think i don't have

00:40:08,480 --> 00:40:10,480
any other questions coming in is there

00:40:09,920 --> 00:40:11,920
anything

00:40:10,480 --> 00:40:14,160
else that you want to share before we

00:40:11,920 --> 00:40:16,720
wrap things up

00:40:14,160 --> 00:40:18,319
no i think that's it um you know i want

00:40:16,720 --> 00:40:20,240
to thank everybody for your time

00:40:18,319 --> 00:40:21,760
and certainly if you have more curiosity

00:40:20,240 --> 00:40:24,560
about um

00:40:21,760 --> 00:40:24,960
you know the platform in general um i

00:40:24,560 --> 00:40:27,280
see

00:40:24,960 --> 00:40:29,280
uh jeff if you want to know more about

00:40:27,280 --> 00:40:30,160
uh mainframes in general in terms of you

00:40:29,280 --> 00:40:32,160
know how

00:40:30,160 --> 00:40:34,079
how popular and pervasive they are today

00:40:32,160 --> 00:40:34,960
uh please get you can get in touch with

00:40:34,079 --> 00:40:38,079
me

00:40:34,960 --> 00:40:41,839
um let me uh can i into

00:40:38,079 --> 00:40:41,839
it let me put my name um

00:40:43,839 --> 00:40:47,200
i'll put this in the chat this is my

00:40:45,839 --> 00:40:48,800
email address

00:40:47,200 --> 00:40:51,280
if anybody wants to get in touch with me

00:40:48,800 --> 00:40:53,520
directly please feel free to do so

00:40:51,280 --> 00:40:55,440
or reach out to us through you know the

00:40:53,520 --> 00:40:57,040
uh ombutu slack channel

00:40:55,440 --> 00:40:59,359
um or the mailing list those are

00:40:57,040 --> 00:41:01,599
published at the open mainframe project

00:40:59,359 --> 00:41:04,000
if you drill down into

00:41:01,599 --> 00:41:05,599
any one of the projects or ask anybody

00:41:04,000 --> 00:41:06,000
else at the open mainframe project how

00:41:05,599 --> 00:41:07,920
to

00:41:06,000 --> 00:41:09,359
get in touch with us uh you know we're

00:41:07,920 --> 00:41:11,280
out there and uh

00:41:09,359 --> 00:41:12,960
like i said please feel free to drop me

00:41:11,280 --> 00:41:15,760
a message if you want as well

00:41:12,960 --> 00:41:15,760
that also works

00:41:16,960 --> 00:41:20,480
thank you so much joe this is super

00:41:18,560 --> 00:41:22,319
interesting if anybody missed any part

00:41:20,480 --> 00:41:24,319
of this it will be recorded and posted

00:41:22,319 --> 00:41:27,680
onto youtube by the end of day today

00:41:24,319 --> 00:41:30,079
on the omp youtube channel

00:41:27,680 --> 00:41:31,280
thank you so much joe for joining us and

00:41:30,079 --> 00:41:33,280
thank you everyone else

00:41:31,280 --> 00:41:35,040
have a wonderful day and we'll see you

00:41:33,280 --> 00:41:39,280
next month we'll be covering

00:41:35,040 --> 00:41:45,760
our zoe quarley update thanks chris

00:41:39,280 --> 00:41:45,760

YouTube URL: https://www.youtube.com/watch?v=is6bXlWL5ig


