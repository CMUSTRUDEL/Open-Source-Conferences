Title: Open Mainframe Mini Summit
Publication date: 2020-12-19
Playlist: Open Mainframe Mini Summit
Description: 
	Open Mainframe Mini-Summit
Captions: 
	00:00:00,080 --> 00:00:03,439
all right good morning good afternoon

00:00:01,280 --> 00:00:04,880
good evening welcome everyone to the

00:00:03,439 --> 00:00:07,440
open mainframe project

00:00:04,880 --> 00:00:09,360
mini summit uh we're excited all of you

00:00:07,440 --> 00:00:12,799
are able to join us today we have

00:00:09,360 --> 00:00:13,759
a great lineup of presentations today to

00:00:12,799 --> 00:00:15,759
really

00:00:13,759 --> 00:00:17,199
give a lot of overview of the open

00:00:15,759 --> 00:00:19,439
source ecosystem

00:00:17,199 --> 00:00:20,880
on mainframe and a lot of the great

00:00:19,439 --> 00:00:22,960
developments that are happening here at

00:00:20,880 --> 00:00:24,880
the open mainframe project

00:00:22,960 --> 00:00:26,560
um i'll be your host today my name is

00:00:24,880 --> 00:00:28,840
john murcik i'm director of open

00:00:26,560 --> 00:00:30,000
mainframe project on behalf of the linux

00:00:28,840 --> 00:00:32,079
foundation

00:00:30,000 --> 00:00:34,399
i want to kick things off today um with

00:00:32,079 --> 00:00:35,840
our governing board uh chairperson uh

00:00:34,399 --> 00:00:38,160
len sedge lucia he's

00:00:35,840 --> 00:00:38,879
also the cto and vp of business

00:00:38,160 --> 00:00:41,200
development

00:00:38,879 --> 00:00:42,879
at viacom infiniti and he's going to

00:00:41,200 --> 00:00:46,399
give a quick overview of the project

00:00:42,879 --> 00:00:46,399
so len take it away

00:00:53,039 --> 00:00:56,480
uh everybody see my charts

00:00:57,039 --> 00:01:13,840
yes cool all right

00:01:14,080 --> 00:01:16,560
okay

00:01:17,280 --> 00:01:21,119
well thank you john and thank you

00:01:19,920 --> 00:01:24,159
everybody for

00:01:21,119 --> 00:01:26,720
the opportunity to present to you today

00:01:24,159 --> 00:01:28,799
as john said i am the open mainframe

00:01:26,720 --> 00:01:32,479
project chair for the governing board

00:01:28,799 --> 00:01:35,600
and also a cto of icon affinity

00:01:32,479 --> 00:01:37,040
ibm gold business partner

00:01:35,600 --> 00:01:39,840
been in this business for quite some

00:01:37,040 --> 00:01:40,479
time folks uh i was just thinking about

00:01:39,840 --> 00:01:45,280
this since

00:01:40,479 --> 00:01:46,960
uh the 1978 time frame is when i started

00:01:45,280 --> 00:01:49,520
with ibm but i was with

00:01:46,960 --> 00:01:50,840
uh some other companies before that uh

00:01:49,520 --> 00:01:53,439
from

00:01:50,840 --> 00:01:57,240
1973-78 uh

00:01:53,439 --> 00:02:00,479
78 to well let's see

00:01:57,240 --> 00:02:01,280
2009 almost with ibm and then here with

00:02:00,479 --> 00:02:04,399
viacom

00:02:01,280 --> 00:02:06,399
since then it's been a great ride in and

00:02:04,399 --> 00:02:10,560
around this thing called the mainframe

00:02:06,399 --> 00:02:13,360
and just fantastic um

00:02:10,560 --> 00:02:14,640
i uh really am and and have enjoyed it

00:02:13,360 --> 00:02:16,959
very very much and

00:02:14,640 --> 00:02:17,920
then when this open mainframe project

00:02:16,959 --> 00:02:20,640
came along

00:02:17,920 --> 00:02:22,400
and to become the chair of it about five

00:02:20,640 --> 00:02:24,640
years ago i

00:02:22,400 --> 00:02:25,599
jumped on the opportunity because of

00:02:24,640 --> 00:02:28,800
what it could mean

00:02:25,599 --> 00:02:30,720
for the platform see

00:02:28,800 --> 00:02:33,440
the linux foundation open mainframe

00:02:30,720 --> 00:02:36,879
project is really all about

00:02:33,440 --> 00:02:39,360
creating sustainability for

00:02:36,879 --> 00:02:40,480
the open source ecosystem in and around

00:02:39,360 --> 00:02:44,560
the mainframe

00:02:40,480 --> 00:02:45,760
and it really helps with that because

00:02:44,560 --> 00:02:48,319
you know people can have

00:02:45,760 --> 00:02:49,120
these open source projects and do their

00:02:48,319 --> 00:02:52,920
own things

00:02:49,120 --> 00:02:56,319
but the key word here is

00:02:52,920 --> 00:02:59,519
sustainability that is really what

00:02:56,319 --> 00:03:03,120
this open mainframe project is

00:02:59,519 --> 00:03:07,360
really all about and the concept

00:03:03,120 --> 00:03:11,360
of open source

00:03:07,360 --> 00:03:11,360
really goes back quite a way

00:03:11,519 --> 00:03:15,280
those of you might be familiar with

00:03:13,120 --> 00:03:18,319
share share

00:03:15,280 --> 00:03:22,080
was started in 1955

00:03:18,319 --> 00:03:25,120
it's the oldest longest running

00:03:22,080 --> 00:03:28,400
conference in the world

00:03:25,120 --> 00:03:29,040
and back in that time frame when it was

00:03:28,400 --> 00:03:32,400
founded

00:03:29,040 --> 00:03:35,599
the whole concept of open source

00:03:32,400 --> 00:03:38,640
was really started then

00:03:35,599 --> 00:03:40,640
and in and around one of the

00:03:38,640 --> 00:03:41,519
predecessors to the mainframe called the

00:03:40,640 --> 00:03:45,680
ibm

00:03:41,519 --> 00:03:46,400
model 704 and if any of you know the

00:03:45,680 --> 00:03:49,840
history

00:03:46,400 --> 00:03:50,799
of the mainframe uh mayframe's inception

00:03:49,840 --> 00:03:54,319
was april

00:03:50,799 --> 00:03:55,360
7th 1964. i was 11 years old at that

00:03:54,319 --> 00:03:58,640
time

00:03:55,360 --> 00:04:01,920
and i was at that debut

00:03:58,640 --> 00:04:04,400
because of my grandfather and father

00:04:01,920 --> 00:04:06,400
taking me there being a third generation

00:04:04,400 --> 00:04:09,120
ibm

00:04:06,400 --> 00:04:10,799
and it was quite exciting if i remember

00:04:09,120 --> 00:04:12,799
as a little kid it still

00:04:10,799 --> 00:04:15,040
i didn't know what i was doing but it

00:04:12,799 --> 00:04:17,280
certainly was an exciting time all the

00:04:15,040 --> 00:04:19,759
excitement around the announcement

00:04:17,280 --> 00:04:22,160
you see this thing called the system 360

00:04:19,759 --> 00:04:25,840
mainframe with its inception back

00:04:22,160 --> 00:04:26,639
in that time frame 360 to for 360

00:04:25,840 --> 00:04:28,320
degrees

00:04:26,639 --> 00:04:29,840
around the compass because it was

00:04:28,320 --> 00:04:32,560
all-encompassing

00:04:29,840 --> 00:04:34,639
of seven different architectures one of

00:04:32,560 --> 00:04:37,840
which you see pictured here

00:04:34,639 --> 00:04:41,040
it was a big gamble for the company and

00:04:37,840 --> 00:04:42,240
it turned out to be revolutionized the

00:04:41,040 --> 00:04:45,120
whole world

00:04:42,240 --> 00:04:46,400
and what computing was all about so i

00:04:45,120 --> 00:04:49,520
was so nice to

00:04:46,400 --> 00:04:50,479
say i was sort of a part of that and

00:04:49,520 --> 00:04:52,479
then

00:04:50,479 --> 00:04:54,320
little did i know in 78 i would be a

00:04:52,479 --> 00:04:57,440
full-time part of it

00:04:54,320 --> 00:04:59,120
so it was i guess meant to be but we're

00:04:57,440 --> 00:05:02,240
not here to talk about

00:04:59,120 --> 00:05:05,280
old stuff we're here to talk about real

00:05:02,240 --> 00:05:09,199
good new stuff the

00:05:05,280 --> 00:05:11,919
ibm z15 is the

00:05:09,199 --> 00:05:13,680
current version of the mainframe and as

00:05:11,919 --> 00:05:15,520
you can see from the statistics here

00:05:13,680 --> 00:05:19,520
posted on this chart

00:05:15,520 --> 00:05:22,639
it is really quite a powerful system

00:05:19,520 --> 00:05:23,440
there is nothing else like it on the

00:05:22,639 --> 00:05:26,960
planet

00:05:23,440 --> 00:05:30,720
it runs open source software

00:05:26,960 --> 00:05:33,520
it runs linux also and actually

00:05:30,720 --> 00:05:36,400
very very well in fact probably better

00:05:33,520 --> 00:05:39,280
than anything else on the planet

00:05:36,400 --> 00:05:41,440
available from any other vendors any

00:05:39,280 --> 00:05:44,880
other alternatives

00:05:41,440 --> 00:05:47,199
and what's nice is that since this open

00:05:44,880 --> 00:05:50,880
source concept has been part

00:05:47,199 --> 00:05:52,160
of its inception it's carried forward to

00:05:50,880 --> 00:05:55,520
today

00:05:52,160 --> 00:05:58,319
and uh when the linux foundation

00:05:55,520 --> 00:06:00,000
for open mainframe project formed five

00:05:58,319 --> 00:06:03,199
years ago

00:06:00,000 --> 00:06:06,639
it was just a perfect merger

00:06:03,199 --> 00:06:10,000
of both the ibm mainframe

00:06:06,639 --> 00:06:10,400
and the project itself if you take a

00:06:10,000 --> 00:06:15,520
look

00:06:10,400 --> 00:06:15,520
at what has occurred over time

00:06:16,000 --> 00:06:20,880
starting with 1955 and then one of our

00:06:19,199 --> 00:06:23,919
recent projects

00:06:20,880 --> 00:06:26,720
called cbt tape was

00:06:23,919 --> 00:06:27,759
a one of the very first open source

00:06:26,720 --> 00:06:30,479
projects

00:06:27,759 --> 00:06:33,280
around and it is now part of the linux

00:06:30,479 --> 00:06:36,800
foundation open mainframe project

00:06:33,280 --> 00:06:40,319
then through 1999 when i was still there

00:06:36,800 --> 00:06:43,680
at ibm what was really cool is that

00:06:40,319 --> 00:06:47,919
ibm decided to make a significant

00:06:43,680 --> 00:06:48,240
investment in the mainframe with linux

00:06:47,919 --> 00:06:51,120
and

00:06:48,240 --> 00:06:51,919
all of its server family and the rest is

00:06:51,120 --> 00:06:54,160
history

00:06:51,919 --> 00:06:55,360
through the time frames and other things

00:06:54,160 --> 00:06:59,199
you can see here

00:06:55,360 --> 00:07:01,039
on this timeline and if you take a look

00:06:59,199 --> 00:07:02,479
at what's going on with open source in

00:07:01,039 --> 00:07:05,199
the market you know

00:07:02,479 --> 00:07:07,520
when it was first kind of getting off

00:07:05,199 --> 00:07:10,160
the ground

00:07:07,520 --> 00:07:12,319
and then as time went on just look at

00:07:10,160 --> 00:07:15,440
this exponential growth

00:07:12,319 --> 00:07:16,080
there is no way that it's as as we're

00:07:15,440 --> 00:07:18,319
saying here

00:07:16,080 --> 00:07:19,440
it's going to slow down anytime soon it

00:07:18,319 --> 00:07:23,440
is just

00:07:19,440 --> 00:07:25,520
growing at such an exponential rate

00:07:23,440 --> 00:07:27,280
and if you take a look at open source

00:07:25,520 --> 00:07:30,560
code unto itself

00:07:27,280 --> 00:07:33,599
uh what it entails

00:07:30,560 --> 00:07:36,720
it's custom code it's frameworks

00:07:33,599 --> 00:07:40,639
it's libraries of things that can

00:07:36,720 --> 00:07:45,360
solve many many problems so it is

00:07:40,639 --> 00:07:48,639
what we term as a code club sandwich

00:07:45,360 --> 00:07:51,280
and the key thing is about

00:07:48,639 --> 00:07:52,800
open source projects and what really

00:07:51,280 --> 00:07:56,160
really matters about them is

00:07:52,800 --> 00:07:59,599
which ones are going to

00:07:56,160 --> 00:08:03,039
continue and which ones will really be

00:07:59,599 --> 00:08:05,500
of value that is really the question

00:08:03,039 --> 00:08:06,560
of which projects matter to

00:08:05,500 --> 00:08:09,599
[Music]

00:08:06,560 --> 00:08:10,000
the open source world and within the

00:08:09,599 --> 00:08:12,080
realm

00:08:10,000 --> 00:08:14,160
and domain of the linux foundation open

00:08:12,080 --> 00:08:17,199
mainframe project

00:08:14,160 --> 00:08:20,400
so if you take a look at uh what

00:08:17,199 --> 00:08:24,000
the answer to that question is it's

00:08:20,400 --> 00:08:27,120
centered in and around sustainability

00:08:24,000 --> 00:08:30,400
and successful projects depend

00:08:27,120 --> 00:08:33,599
on its members

00:08:30,400 --> 00:08:34,800
the development communities involved

00:08:33,599 --> 00:08:37,440
with it

00:08:34,800 --> 00:08:39,440
the infrastructure and standards that

00:08:37,440 --> 00:08:42,080
are being put into the product

00:08:39,440 --> 00:08:43,680
and what the market will actually adopt

00:08:42,080 --> 00:08:47,279
so it is

00:08:43,680 --> 00:08:50,480
a community it is a movement it's it

00:08:47,279 --> 00:08:54,080
i you could almost look at it as a

00:08:50,480 --> 00:08:57,279
as a cult but in a good way and uh

00:08:54,080 --> 00:08:58,560
it really helps with what we're trying

00:08:57,279 --> 00:09:00,720
to accomplish with the

00:08:58,560 --> 00:09:01,920
and and this is the mantra of the open

00:09:00,720 --> 00:09:05,440
mainframe project

00:09:01,920 --> 00:09:06,320
unto itself if you look at some of the

00:09:05,440 --> 00:09:10,480
channel

00:09:06,320 --> 00:09:13,680
challenges of the ecosystem

00:09:10,480 --> 00:09:18,160
you know getting past glass

00:09:13,680 --> 00:09:21,600
ceiling developing project needs

00:09:18,160 --> 00:09:24,959
managing the project assets

00:09:21,600 --> 00:09:26,800
paying attention to governance watching

00:09:24,959 --> 00:09:30,000
out for fragmentation

00:09:26,800 --> 00:09:32,800
lack of integration lack of cross

00:09:30,000 --> 00:09:33,760
industry projects these are the kind of

00:09:32,800 --> 00:09:36,800
things

00:09:33,760 --> 00:09:40,880
that the open source

00:09:36,800 --> 00:09:44,080
projects on the mainframe that are

00:09:40,880 --> 00:09:44,720
followed by and governed by the linux

00:09:44,080 --> 00:09:47,760
foundation

00:09:44,720 --> 00:09:50,880
open mainframe project really addresses

00:09:47,760 --> 00:09:54,080
very very very well and

00:09:50,880 --> 00:09:55,920
we welcome people to become part of this

00:09:54,080 --> 00:09:59,920
organization

00:09:55,920 --> 00:10:02,720
if you take a look at a lot of the

00:09:59,920 --> 00:10:03,600
projects that have occurred since the

00:10:02,720 --> 00:10:05,600
inception

00:10:03,600 --> 00:10:08,800
of the linux foundation open mainframe

00:10:05,600 --> 00:10:11,360
project it was launched in 2015

00:10:08,800 --> 00:10:13,519
when the linux one system was announced

00:10:11,360 --> 00:10:16,800
i was there it was in seattle

00:10:13,519 --> 00:10:19,839
and it was really quite exciting and

00:10:16,800 --> 00:10:22,160
as you can see the project there was ade

00:10:19,839 --> 00:10:24,000
and then as you look through time here

00:10:22,160 --> 00:10:27,120
16 18 19

00:10:24,000 --> 00:10:30,560
20 20 we have actually grown

00:10:27,120 --> 00:10:32,959
into quite a phenomenal set of projects

00:10:30,560 --> 00:10:36,000
underneath this open mainframe project

00:10:32,959 --> 00:10:39,360
there are now 15 projects

00:10:36,000 --> 00:10:41,120
and many of them are

00:10:39,360 --> 00:10:43,680
been quite successful and quite

00:10:41,120 --> 00:10:45,120
influential in many many different ways

00:10:43,680 --> 00:10:48,800
across the industry

00:10:45,120 --> 00:10:53,200
as a whole and uh

00:10:48,800 --> 00:10:56,240
zoe is one of the big ones where it's

00:10:53,200 --> 00:10:58,880
actually brought zos itself into the

00:10:56,240 --> 00:11:01,920
open mainframe

00:10:58,880 --> 00:11:03,920
world open source world and we'll we'll

00:11:01,920 --> 00:11:05,440
have later on today

00:11:03,920 --> 00:11:08,880
people talking about what's going on

00:11:05,440 --> 00:11:12,959
with a work group based in and around

00:11:08,880 --> 00:11:15,760
cobalt and also there's a

00:11:12,959 --> 00:11:17,680
really cool project with jenkins with

00:11:15,760 --> 00:11:21,040
polycephaly

00:11:17,680 --> 00:11:24,240
feylong with connections through the

00:11:21,040 --> 00:11:28,480
vm cloud connector

00:11:24,240 --> 00:11:30,880
and in and around education programs

00:11:28,480 --> 00:11:31,760
with the academic initiative and you'll

00:11:30,880 --> 00:11:34,800
be hearing

00:11:31,760 --> 00:11:37,279
many many of these discussions following

00:11:34,800 --> 00:11:38,720
mind here today

00:11:37,279 --> 00:11:40,720
if you take a look at this mission of

00:11:38,720 --> 00:11:41,440
the open mainframe project it's really

00:11:40,720 --> 00:11:45,360
quite cool

00:11:41,440 --> 00:11:47,120
it eliminates barriers bring it to us

00:11:45,360 --> 00:11:49,040
you run into barriers with open source

00:11:47,120 --> 00:11:51,519
being brought to the mainframe

00:11:49,040 --> 00:11:53,519
whatever the case may be bring it to us

00:11:51,519 --> 00:11:55,600
this is what we're here for

00:11:53,519 --> 00:11:56,560
we're here to help with demonstrating

00:11:55,600 --> 00:12:00,240
the value

00:11:56,560 --> 00:12:02,480
of open source on the mainframe and and

00:12:00,240 --> 00:12:03,839
from a technical business and financial

00:12:02,480 --> 00:12:06,320
perspective

00:12:03,839 --> 00:12:07,760
and we are here to strengthen the

00:12:06,320 --> 00:12:08,800
collaboration between the

00:12:07,760 --> 00:12:11,680
different groups that need to

00:12:08,800 --> 00:12:15,680
collaborate on these kinds of things

00:12:11,680 --> 00:12:18,639
and i might add uh here just so you know

00:12:15,680 --> 00:12:20,240
in the back of my deck here of this

00:12:18,639 --> 00:12:24,160
presentation deck

00:12:20,240 --> 00:12:25,680
i'm really picked out quite a

00:12:24,160 --> 00:12:28,399
number of the high level charts so i

00:12:25,680 --> 00:12:31,360
could fit it into my time slot here

00:12:28,399 --> 00:12:31,680
but uh in the back end of this deck you

00:12:31,360 --> 00:12:33,600
will

00:12:31,680 --> 00:12:35,279
be able to see a lot of the details

00:12:33,600 --> 00:12:36,959
behind each of these things i'm covering

00:12:35,279 --> 00:12:38,720
at a high level on each of these charts

00:12:36,959 --> 00:12:40,959
just so you know

00:12:38,720 --> 00:12:42,399
here uh to learn about these open

00:12:40,959 --> 00:12:44,639
mainframe projects

00:12:42,399 --> 00:12:46,000
uh some of them i just basically touched

00:12:44,639 --> 00:12:49,680
upon quickly

00:12:46,000 --> 00:12:52,720
there is a very nice link here to go to

00:12:49,680 --> 00:12:54,399
to get more details and also to learn

00:12:52,720 --> 00:12:55,600
uh what they're not only learn what

00:12:54,399 --> 00:12:56,639
they're about to learn about how to

00:12:55,600 --> 00:12:59,760
become part of them

00:12:56,639 --> 00:13:02,160
and we're always looking for

00:12:59,760 --> 00:13:03,200
new people to take place to to

00:13:02,160 --> 00:13:05,440
participate and

00:13:03,200 --> 00:13:07,279
and become part of the pro projects

00:13:05,440 --> 00:13:10,480
themselves

00:13:07,279 --> 00:13:12,079
um the linux foundation open mainframe

00:13:10,480 --> 00:13:16,079
project did a very nice job

00:13:12,079 --> 00:13:20,399
in putting together this landscape

00:13:16,079 --> 00:13:23,680
uh where you can click on this uh

00:13:20,399 --> 00:13:25,600
at the link provided here and you can

00:13:23,680 --> 00:13:27,760
get to each of these projects and look

00:13:25,600 --> 00:13:31,360
at every so it's a nice big window

00:13:27,760 --> 00:13:34,160
on the whole entire uh project itself

00:13:31,360 --> 00:13:35,680
and all the projects within the project

00:13:34,160 --> 00:13:38,560
that's a tongue twister say that three

00:13:35,680 --> 00:13:38,560
times fast right

00:13:38,880 --> 00:13:44,639
and the reason why innovation

00:13:42,240 --> 00:13:45,279
really thrives here is because it

00:13:44,639 --> 00:13:48,560
provides

00:13:45,279 --> 00:13:51,519
a vendor-neutral home for

00:13:48,560 --> 00:13:53,120
many of them mainframe centric open

00:13:51,519 --> 00:13:56,160
source projects

00:13:53,120 --> 00:13:59,279
uh code hosting infrastructure

00:13:56,160 --> 00:14:00,880
uh happens to be that our company is one

00:13:59,279 --> 00:14:04,240
of the places where

00:14:00,880 --> 00:14:07,440
we have donated a resource

00:14:04,240 --> 00:14:09,040
on it on our on our z14 system for many

00:14:07,440 --> 00:14:09,839
of these projects so they have a place

00:14:09,040 --> 00:14:13,120
to develop

00:14:09,839 --> 00:14:14,480
and home to keep things we watch over

00:14:13,120 --> 00:14:17,680
the governance

00:14:14,480 --> 00:14:20,160
of these projects we make sure um

00:14:17,680 --> 00:14:23,920
we're doing everything illegally and

00:14:20,160 --> 00:14:27,199
with any violations of trademarks

00:14:23,920 --> 00:14:28,800
and we continue to build a very powerful

00:14:27,199 --> 00:14:32,399
ecosystem

00:14:28,800 --> 00:14:34,880
a lot of good staff report support and

00:14:32,399 --> 00:14:36,399
we create this natural collaboration

00:14:34,880 --> 00:14:38,959
opportunity between mainframe

00:14:36,399 --> 00:14:41,519
and open source projects more can be

00:14:38,959 --> 00:14:41,519
read here

00:14:41,680 --> 00:14:45,279
if we take a look what's going on with

00:14:43,440 --> 00:14:48,399
the support across

00:14:45,279 --> 00:14:51,120
the what makes it sustainable is

00:14:48,399 --> 00:14:51,760
is the infrastructure the developer

00:14:51,120 --> 00:14:54,240
support

00:14:51,760 --> 00:14:54,959
the market awareness and and the

00:14:54,240 --> 00:14:58,240
governance

00:14:54,959 --> 00:15:01,440
that goes along with all of this uh in

00:14:58,240 --> 00:15:03,279
uh other participating open source

00:15:01,440 --> 00:15:04,560
projects include many of the ones that

00:15:03,279 --> 00:15:06,639
you see here there

00:15:04,560 --> 00:15:08,320
there's a real literally a ton of them

00:15:06,639 --> 00:15:08,560
we couldn't even fit all of them here on

00:15:08,320 --> 00:15:13,040
the

00:15:08,560 --> 00:15:16,320
screen um there is a really cool

00:15:13,040 --> 00:15:17,120
podcast that takes place uh my buddy

00:15:16,320 --> 00:15:20,240
steve

00:15:17,120 --> 00:15:23,839
dickens at ibm is the moderator for it

00:15:20,240 --> 00:15:28,079
and we bring a lot of great people

00:15:23,839 --> 00:15:30,959
and technology on these sessions

00:15:28,079 --> 00:15:32,079
just recently we had the general manager

00:15:30,959 --> 00:15:34,320
for ibm z

00:15:32,079 --> 00:15:35,360
ross moorey present and he probably had

00:15:34,320 --> 00:15:37,519
one of the

00:15:35,360 --> 00:15:38,399
most watched sessions because he talked

00:15:37,519 --> 00:15:41,519
about

00:15:38,399 --> 00:15:44,639
the strategy and future of the platform

00:15:41,519 --> 00:15:47,680
and you can see that very nicely uh

00:15:44,639 --> 00:15:48,959
uh replayed also right here so go take a

00:15:47,680 --> 00:15:49,519
look at that and come to them when

00:15:48,959 --> 00:15:52,320
they're

00:15:49,519 --> 00:15:53,279
when they're made available the open

00:15:52,320 --> 00:15:55,839
mainframe

00:15:53,279 --> 00:15:57,040
inaugural summit took place this year in

00:15:55,839 --> 00:16:00,240
september what a

00:15:57,040 --> 00:16:01,759
great session that was um it was so nice

00:16:00,240 --> 00:16:04,800
to be part of that

00:16:01,759 --> 00:16:06,560
and um this little mini summit that

00:16:04,800 --> 00:16:08,240
we're conducting here for you today is

00:16:06,560 --> 00:16:11,440
only a small

00:16:08,240 --> 00:16:12,240
taste of what went on there it was very

00:16:11,440 --> 00:16:14,880
well attended

00:16:12,240 --> 00:16:17,120
the platform that the foundation chose

00:16:14,880 --> 00:16:19,199
to use was so intuitive and easy to use

00:16:17,120 --> 00:16:20,079
we got a lot of great compliments about

00:16:19,199 --> 00:16:22,560
it

00:16:20,079 --> 00:16:24,480
and it covered a gamut of things you

00:16:22,560 --> 00:16:27,600
could go back and look at this and

00:16:24,480 --> 00:16:29,839
and uh replay any of these programs

00:16:27,600 --> 00:16:31,120
uh that that were covered during the

00:16:29,839 --> 00:16:33,440
open mainframe summit

00:16:31,120 --> 00:16:35,440
september 16th to the 17th i remember

00:16:33,440 --> 00:16:39,199
correctly

00:16:35,440 --> 00:16:42,800
um five years since launch

00:16:39,199 --> 00:16:43,519
38 supporting organizations 15 hosted

00:16:42,800 --> 00:16:46,240
projects

00:16:43,519 --> 00:16:47,279
40 plus sponsors and mentees that took

00:16:46,240 --> 00:16:51,120
place

00:16:47,279 --> 00:16:54,320
with the uh mentorship program that

00:16:51,120 --> 00:16:55,440
this project a couple of guys on my

00:16:54,320 --> 00:16:57,120
staff

00:16:55,440 --> 00:16:58,880
were involved with some really cool

00:16:57,120 --> 00:17:01,199
projects llama

00:16:58,880 --> 00:17:02,800
and zebra and a number of others funny

00:17:01,199 --> 00:17:04,720
funny cool names

00:17:02,800 --> 00:17:06,480
a lot of students were effective this

00:17:04,720 --> 00:17:10,000
and 280 plus

00:17:06,480 --> 00:17:11,600
projects here is how to participate

00:17:10,000 --> 00:17:12,959
take a look at some of the things you

00:17:11,600 --> 00:17:15,280
could be doing from a community

00:17:12,959 --> 00:17:17,120
perspective from an r d perspective

00:17:15,280 --> 00:17:20,720
corporate sponsorship

00:17:17,120 --> 00:17:22,559
it we cover the gamut and to learn more

00:17:20,720 --> 00:17:24,400
about the open mainframe project we've

00:17:22,559 --> 00:17:27,199
provided these links for you

00:17:24,400 --> 00:17:28,880
to click on and go learn you know

00:17:27,199 --> 00:17:30,480
academia can join

00:17:28,880 --> 00:17:33,120
at no charge but there are different

00:17:30,480 --> 00:17:35,679
levels of membership

00:17:33,120 --> 00:17:36,400
from silver to platinum and everything

00:17:35,679 --> 00:17:38,880
in between

00:17:36,400 --> 00:17:40,799
that is all included in my back end of

00:17:38,880 --> 00:17:42,640
my deck here but you can also get all

00:17:40,799 --> 00:17:46,480
that information very nicely

00:17:42,640 --> 00:17:49,280
right here at these links and um please

00:17:46,480 --> 00:17:50,480
make sure you follow us on social we

00:17:49,280 --> 00:17:53,760
have a very great

00:17:50,480 --> 00:17:57,360
social uh group of people

00:17:53,760 --> 00:18:00,960
in our organization that use twitter

00:17:57,360 --> 00:18:04,320
youtube linkedin and many others and

00:18:00,960 --> 00:18:05,520
we also will be posting what you see

00:18:04,320 --> 00:18:08,559
here today

00:18:05,520 --> 00:18:10,240
on youtube for replay and

00:18:08,559 --> 00:18:12,000
sharing across your organizations

00:18:10,240 --> 00:18:15,600
wherever you might be

00:18:12,000 --> 00:18:17,840
thank you and i'd like to uh

00:18:15,600 --> 00:18:18,720
turn it back over to our moderator thank

00:18:17,840 --> 00:18:21,280
you

00:18:18,720 --> 00:18:23,200
thank you so much len great overview of

00:18:21,280 --> 00:18:24,559
um what's going on here at the open

00:18:23,200 --> 00:18:27,039
mainframe project

00:18:24,559 --> 00:18:29,440
um so we're gonna shift now um to one of

00:18:27,039 --> 00:18:31,760
the announced initiatives that occurred

00:18:29,440 --> 00:18:33,440
at open mainframe summit um

00:18:31,760 --> 00:18:35,120
and also one that we announced earlier

00:18:33,440 --> 00:18:36,880
this spring in uh

00:18:35,120 --> 00:18:38,160
that sort of came out of the wake of the

00:18:36,880 --> 00:18:41,120
covet crisis

00:18:38,160 --> 00:18:42,640
and um you know some of the challenges

00:18:41,120 --> 00:18:45,520
that our state and local

00:18:42,640 --> 00:18:46,400
and uh federal governments had in uh

00:18:45,520 --> 00:18:49,280
responding

00:18:46,400 --> 00:18:51,840
um with some of the systems and um the

00:18:49,280 --> 00:18:54,320
unprecedented uh amount of need there

00:18:51,840 --> 00:18:56,880
um so i want to introduce um sudha

00:18:54,320 --> 00:18:56,880
hashna

00:18:56,960 --> 00:19:00,000
who is a lead for the cobalt training

00:18:59,039 --> 00:19:01,840
course

00:19:00,000 --> 00:19:04,240
and also at the same time derrick

00:19:01,840 --> 00:19:05,520
britton who is the leader of the cobalt

00:19:04,240 --> 00:19:07,039
working group

00:19:05,520 --> 00:19:08,720
um so i'll let you both go i don't know

00:19:07,039 --> 00:19:10,320
who's going first of the two of you but

00:19:08,720 --> 00:19:13,360
i'll let you both roll

00:19:10,320 --> 00:19:14,240
i think i drew that straw john um thank

00:19:13,360 --> 00:19:16,240
you very much

00:19:14,240 --> 00:19:17,919
john thanks for the intro as well len

00:19:16,240 --> 00:19:18,799
hope everyone can hear me and can see

00:19:17,919 --> 00:19:22,080
these

00:19:18,799 --> 00:19:23,760
at the charts loud and clear wonderful

00:19:22,080 --> 00:19:26,320
thank you um

00:19:23,760 --> 00:19:26,960
so uh my welcome to everyone who's

00:19:26,320 --> 00:19:30,480
joined us

00:19:26,960 --> 00:19:33,679
um at this mini summit or as

00:19:30,480 --> 00:19:35,520
us brits would call it a hill um i

00:19:33,679 --> 00:19:38,559
promise no more jokes

00:19:35,520 --> 00:19:40,320
um my name is derek britton um

00:19:38,559 --> 00:19:41,760
and i work for i happen to work at

00:19:40,320 --> 00:19:43,520
microfocus

00:19:41,760 --> 00:19:44,880
who happens to be quite well known for

00:19:43,520 --> 00:19:46,400
their cobol products but

00:19:44,880 --> 00:19:48,160
more importantly than that i'm delighted

00:19:46,400 --> 00:19:50,480
to be one of the founders of the new

00:19:48,160 --> 00:19:52,400
cobo working group

00:19:50,480 --> 00:19:53,760
as part of the open mainframe project so

00:19:52,400 --> 00:19:56,000
i just want to talk about

00:19:53,760 --> 00:19:57,360
uh that a little bit for the first few

00:19:56,000 --> 00:19:59,520
minutes here

00:19:57,360 --> 00:20:02,159
um but the the work around cobalt falls

00:19:59,520 --> 00:20:05,200
into two fairly broad areas

00:20:02,159 --> 00:20:05,600
um as part of you know two projects in

00:20:05,200 --> 00:20:07,600
the

00:20:05,600 --> 00:20:09,120
in the open mainframe project so we'll

00:20:07,600 --> 00:20:11,039
we'll talk about both of those here

00:20:09,120 --> 00:20:13,760
today i'll be covering the first

00:20:11,039 --> 00:20:15,440
sadashi and we'll cover the second in 10

00:20:13,760 --> 00:20:19,200
minutes or so

00:20:15,440 --> 00:20:20,559
um but before we do any of that um

00:20:19,200 --> 00:20:22,480
we're talking about this thing called

00:20:20,559 --> 00:20:24,240
cobal aren't we and

00:20:22,480 --> 00:20:25,520
and of course many of us on this call

00:20:24,240 --> 00:20:27,520
already know

00:20:25,520 --> 00:20:29,039
most of the facts most of the background

00:20:27,520 --> 00:20:32,240
behind this

00:20:29,039 --> 00:20:33,520
um uh most celebrated of languages but

00:20:32,240 --> 00:20:35,600
but for those who

00:20:33,520 --> 00:20:37,120
who don't or or perhaps don't have all

00:20:35,600 --> 00:20:39,120
of the facts

00:20:37,120 --> 00:20:41,039
uh well let's start with the staggering

00:20:39,120 --> 00:20:41,919
fact as you can see here the the

00:20:41,039 --> 00:20:45,200
programming language

00:20:41,919 --> 00:20:48,240
cobol is as of 2020

00:20:45,200 --> 00:20:51,679
now into its seventh decade

00:20:48,240 --> 00:20:53,280
of loyal service to the it community

00:20:51,679 --> 00:20:55,280
it's one of the few things that gets

00:20:53,280 --> 00:20:57,760
anywhere near as close

00:20:55,280 --> 00:20:59,360
as the age of the share community which

00:20:57,760 --> 00:21:02,480
which predates it actually by

00:20:59,360 --> 00:21:03,039
three or four years so it was great to

00:21:02,480 --> 00:21:04,559
see len

00:21:03,039 --> 00:21:06,720
share some of the history there but

00:21:04,559 --> 00:21:08,240
interestingly cobalt predates the first

00:21:06,720 --> 00:21:10,240
ibm mainframe

00:21:08,240 --> 00:21:11,600
which is a staggering fact if you

00:21:10,240 --> 00:21:14,080
consider it

00:21:11,600 --> 00:21:14,960
um so the the term cobol actually coined

00:21:14,080 --> 00:21:19,440
by an ibm

00:21:14,960 --> 00:21:22,400
was was first used in september 1959

00:21:19,440 --> 00:21:24,559
and of course since then it has evolved

00:21:22,400 --> 00:21:25,120
uh to become one of the world's if not

00:21:24,559 --> 00:21:27,679
the world's

00:21:25,120 --> 00:21:30,000
most widely used core it business

00:21:27,679 --> 00:21:31,520
systems language

00:21:30,000 --> 00:21:34,400
and what is it well a few statements

00:21:31,520 --> 00:21:36,799
here that are reasonably

00:21:34,400 --> 00:21:37,440
uh accepted wisdom um some of these

00:21:36,799 --> 00:21:38,720
things are

00:21:37,440 --> 00:21:40,480
actually harder to measure than you

00:21:38,720 --> 00:21:42,159
would imagine

00:21:40,480 --> 00:21:44,799
but what does it do well it runs system

00:21:42,159 --> 00:21:46,720
of record applications back end office

00:21:44,799 --> 00:21:48,080
applications at tens of thousands of

00:21:46,720 --> 00:21:51,520
organizations worldwide

00:21:48,080 --> 00:21:52,720
supporting a whole variety of sectors

00:21:51,520 --> 00:21:55,360
and of course

00:21:52,720 --> 00:21:56,880
and government agencies as well so

00:21:55,360 --> 00:22:00,640
whether it's banking insurance

00:21:56,880 --> 00:22:03,760
transportation government healthcare

00:22:00,640 --> 00:22:06,880
whatever significant

00:22:03,760 --> 00:22:08,720
value to the economy the global economy

00:22:06,880 --> 00:22:11,679
hundreds of billions of lines of

00:22:08,720 --> 00:22:15,120
application code worldwide

00:22:11,679 --> 00:22:17,039
so the estimates say um actually quite

00:22:15,120 --> 00:22:19,440
hard to count that as you can imagine

00:22:17,039 --> 00:22:21,280
but one thing we certainly were able to

00:22:19,440 --> 00:22:24,480
count in a recent survey

00:22:21,280 --> 00:22:27,600
overwhelmingly strategic these systems

00:22:24,480 --> 00:22:30,000
with the 92 percent uh response rate

00:22:27,600 --> 00:22:31,679
from uh from a market survey earlier

00:22:30,000 --> 00:22:33,760
this year

00:22:31,679 --> 00:22:35,360
and to a certain extent uh and lens

00:22:33,760 --> 00:22:39,360
already sort of raised the point

00:22:35,360 --> 00:22:41,919
um cobalt one of the original open

00:22:39,360 --> 00:22:43,360
projects of its time and a little known

00:22:41,919 --> 00:22:45,840
fact perhaps

00:22:43,360 --> 00:22:48,640
for some people attending this call is

00:22:45,840 --> 00:22:50,640
koble isn't owned by anybody it isn't

00:22:48,640 --> 00:22:52,480
you don't buy it from one vendor and one

00:22:50,640 --> 00:22:54,960
vendor only it's an open

00:22:52,480 --> 00:22:57,200
project it's a no it conforms to an open

00:22:54,960 --> 00:23:00,240
standard that's presided over by

00:22:57,200 --> 00:23:02,000
an international standards body um so no

00:23:00,240 --> 00:23:04,480
one can lay claim to cobalt

00:23:02,000 --> 00:23:07,120
um plenty have a close association but

00:23:04,480 --> 00:23:09,039
actually coble is one of those

00:23:07,120 --> 00:23:10,960
really great examples of what happens in

00:23:09,039 --> 00:23:14,240
the it community when people

00:23:10,960 --> 00:23:15,440
collaborate with you know with a clear

00:23:14,240 --> 00:23:17,280
common goal

00:23:15,440 --> 00:23:18,559
and that started a very long time ago

00:23:17,280 --> 00:23:22,080
and we're still

00:23:18,559 --> 00:23:25,679
reaping the benefits of that

00:23:22,080 --> 00:23:27,440
um it perhaps also useful to know is um

00:23:25,679 --> 00:23:29,200
john's alluded to it uh that there's

00:23:27,440 --> 00:23:31,679
been some press about cobalt rate

00:23:29,200 --> 00:23:32,720
recently and not all of it fantastically

00:23:31,679 --> 00:23:34,640
positive

00:23:32,720 --> 00:23:36,720
um but actually i'm going to talk about

00:23:34,640 --> 00:23:39,120
some of the things that are

00:23:36,720 --> 00:23:40,880
100 separate positive articles around

00:23:39,120 --> 00:23:41,919
the topic of cobol in the last year

00:23:40,880 --> 00:23:44,880
alone

00:23:41,919 --> 00:23:46,000
5 million social media impressions it's

00:23:44,880 --> 00:23:48,960
even made the top

00:23:46,000 --> 00:23:50,559
10 of computer language discussions in

00:23:48,960 --> 00:23:54,000
the twitter sphere

00:23:50,559 --> 00:23:56,960
in 2020 i know um

00:23:54,000 --> 00:23:59,200
such metrics are important obviously but

00:23:56,960 --> 00:24:01,120
perhaps more interestingly is the the

00:23:59,200 --> 00:24:04,080
membership of the cobol

00:24:01,120 --> 00:24:04,720
programmers facebook group uh yes one

00:24:04,080 --> 00:24:07,279
exists

00:24:04,720 --> 00:24:09,360
um has nearly doubled in the last couple

00:24:07,279 --> 00:24:12,159
of years seventeen thousand members

00:24:09,360 --> 00:24:15,039
and counting so something you might say

00:24:12,159 --> 00:24:17,679
of a resurgence

00:24:15,039 --> 00:24:18,640
so what's the secret i mean for

00:24:17,679 --> 00:24:21,120
something to last

00:24:18,640 --> 00:24:23,039
a couple of years in the it world is is

00:24:21,120 --> 00:24:26,159
pretty good going so to last

00:24:23,039 --> 00:24:28,080
60 plus is pretty phenomenal

00:24:26,159 --> 00:24:29,440
so it can't be an accident that it's

00:24:28,080 --> 00:24:31,440
stuck around for so long

00:24:29,440 --> 00:24:32,720
there must be something good about it

00:24:31,440 --> 00:24:34,559
and and you know

00:24:32,720 --> 00:24:36,400
we've researched this at microfocus but

00:24:34,559 --> 00:24:37,600
we've we certainly talked about it with

00:24:36,400 --> 00:24:39,760
our friends

00:24:37,600 --> 00:24:40,640
um in the in the vendor community and

00:24:39,760 --> 00:24:42,400
our users

00:24:40,640 --> 00:24:44,320
and it all boils down to effectively

00:24:42,400 --> 00:24:46,080
four things why has kobold stuck it out

00:24:44,320 --> 00:24:48,240
for so long

00:24:46,080 --> 00:24:49,840
um and these are the attributes um i

00:24:48,240 --> 00:24:52,240
don't have time today to go through this

00:24:49,840 --> 00:24:53,919
in any detail but but certainly

00:24:52,240 --> 00:24:55,600
um there's there are several

00:24:53,919 --> 00:24:57,760
presentations that would uncover this

00:24:55,600 --> 00:25:00,000
and white papers and such like

00:24:57,760 --> 00:25:01,440
um but if you know cobo you kind of know

00:25:00,000 --> 00:25:03,679
this already

00:25:01,440 --> 00:25:06,400
and if you don't know so well well let's

00:25:03,679 --> 00:25:08,960
let's just cover it real quick

00:25:06,400 --> 00:25:09,919
um many would argue it's better at

00:25:08,960 --> 00:25:12,559
number crunching

00:25:09,919 --> 00:25:13,919
and handling data than anything else

00:25:12,559 --> 00:25:15,679
which is quite important when you

00:25:13,919 --> 00:25:18,080
consider what it's being used for you

00:25:15,679 --> 00:25:21,919
know running business systems

00:25:18,080 --> 00:25:24,000
um it also could run unchanged

00:25:21,919 --> 00:25:26,240
on whichever platform you need it to run

00:25:24,000 --> 00:25:29,120
on and not just

00:25:26,240 --> 00:25:29,600
various versions of an ibm mainframe it

00:25:29,120 --> 00:25:33,200
runs

00:25:29,600 --> 00:25:36,159
actually wherever it needs to run um

00:25:33,200 --> 00:25:37,279
but it certainly ran on the original 360

00:25:36,159 --> 00:25:39,360
that len mentioned

00:25:37,279 --> 00:25:41,440
and it certainly runs just as fine

00:25:39,360 --> 00:25:45,679
unchanged as necessary

00:25:41,440 --> 00:25:47,440
on a z15 in 2020

00:25:45,679 --> 00:25:49,520
it's also readable anyone who's seen

00:25:47,440 --> 00:25:50,960
cobra will instantly recognize it it's

00:25:49,520 --> 00:25:53,679
actually child's play

00:25:50,960 --> 00:25:55,200
to read if it's easy to read it's easy

00:25:53,679 --> 00:25:58,000
to learn

00:25:55,200 --> 00:25:59,600
it's easy to learn it's easy to teach um

00:25:58,000 --> 00:26:01,120
which i think brings us on to you know

00:25:59,600 --> 00:26:03,039
the question mark about the next

00:26:01,120 --> 00:26:04,880
generation of cobalt talent you know can

00:26:03,039 --> 00:26:07,200
you train someone in this well and we'll

00:26:04,880 --> 00:26:08,559
cover that in the next session

00:26:07,200 --> 00:26:10,559
and thanks to the vendors and the

00:26:08,559 --> 00:26:11,919
standards bodies it continues to adapt

00:26:10,559 --> 00:26:14,320
to support

00:26:11,919 --> 00:26:15,440
whatever it needs to work with whether

00:26:14,320 --> 00:26:18,320
it's well i don't know

00:26:15,440 --> 00:26:20,080
cloud containers object orientation

00:26:18,320 --> 00:26:21,679
microservices or

00:26:20,080 --> 00:26:23,279
well whatever in fact and bearing in

00:26:21,679 --> 00:26:26,320
mind it predates pretty much

00:26:23,279 --> 00:26:27,679
anything else it's obviously had to

00:26:26,320 --> 00:26:29,919
adapt along the way

00:26:27,679 --> 00:26:31,840
and cope with many and varied tech

00:26:29,919 --> 00:26:34,960
innovations which it has done

00:26:31,840 --> 00:26:38,400
brilliantly so you know it is in fact

00:26:34,960 --> 00:26:40,080
2020 technology it's just based on a 60

00:26:38,400 --> 00:26:42,080
year old idea

00:26:40,080 --> 00:26:45,039
and for those of us who have you know a

00:26:42,080 --> 00:26:48,559
a a cool mobile phone

00:26:45,039 --> 00:26:51,600
you don't regard that as old technology

00:26:48,559 --> 00:26:52,080
but the telephone is a very old idea so

00:26:51,600 --> 00:26:54,159
you know

00:26:52,080 --> 00:26:56,000
those two things can co-exist quite

00:26:54,159 --> 00:26:58,400
comfortably

00:26:56,000 --> 00:26:59,039
well if that's the positive news and why

00:26:58,400 --> 00:27:00,960
it's

00:26:59,039 --> 00:27:02,400
sticking around for good reason it it

00:27:00,960 --> 00:27:05,200
doesn't mean that everyone

00:27:02,400 --> 00:27:07,200
enjoys celebrating it and in fact it's

00:27:05,200 --> 00:27:09,679
always had its detractors look at this

00:27:07,200 --> 00:27:10,640
quote from 1960 which is quite telling

00:27:09,679 --> 00:27:13,600
actually because that

00:27:10,640 --> 00:27:15,600
1960 quote is actually before the first

00:27:13,600 --> 00:27:18,159
release of cobra was ever

00:27:15,600 --> 00:27:18,880
shipped so before they'd even built

00:27:18,159 --> 00:27:22,320
version one

00:27:18,880 --> 00:27:24,960
someone was ready to shoot it down and

00:27:22,320 --> 00:27:26,000
and john referred to some recent press

00:27:24,960 --> 00:27:29,279
where

00:27:26,000 --> 00:27:32,000
um not entirely accurately cobra was

00:27:29,279 --> 00:27:33,360
was attempted to be used as a scapegoat

00:27:32,000 --> 00:27:36,000
for things going wrong in

00:27:33,360 --> 00:27:36,799
certain uh certain organizations or

00:27:36,000 --> 00:27:39,600
agencies

00:27:36,799 --> 00:27:41,679
and not necessarily particularly well

00:27:39,600 --> 00:27:43,760
reported or well researched

00:27:41,679 --> 00:27:45,360
it's nothing to do with cobalt of course

00:27:43,760 --> 00:27:47,039
the issues reported

00:27:45,360 --> 00:27:48,960
why does it have its detractors well

00:27:47,039 --> 00:27:52,240
there are you know those that might

00:27:48,960 --> 00:27:54,559
have you say well why not use a

00:27:52,240 --> 00:27:56,559
alternative technology and of course the

00:27:54,559 --> 00:27:59,120
people who detract cobol

00:27:56,559 --> 00:28:00,640
might be the ones that are trying to

00:27:59,120 --> 00:28:01,440
push a different kind of technology

00:28:00,640 --> 00:28:03,200
potentially

00:28:01,440 --> 00:28:04,960
but also it's it can be based on

00:28:03,200 --> 00:28:07,120
ignorance when something is that old how

00:28:04,960 --> 00:28:10,080
can it possibly still be useful

00:28:07,120 --> 00:28:11,919
well actually technology doesn't rust so

00:28:10,080 --> 00:28:15,279
it has enduring value so

00:28:11,919 --> 00:28:19,360
um you have to be careful of

00:28:15,279 --> 00:28:21,440
reputation and that's a genuine threat

00:28:19,360 --> 00:28:23,919
that you really have to consider

00:28:21,440 --> 00:28:25,679
which is of course where the open

00:28:23,919 --> 00:28:29,919
mainframe project came in

00:28:25,679 --> 00:28:33,039
it recognizes that particular challenge

00:28:29,919 --> 00:28:34,880
the valuable technology not just

00:28:33,039 --> 00:28:37,039
cobalt but the mainframe itself and

00:28:34,880 --> 00:28:39,679
other mainframe componentry

00:28:37,039 --> 00:28:42,320
suffers from in terms of of reputation

00:28:39,679 --> 00:28:44,399
just because of its age

00:28:42,320 --> 00:28:45,919
and it's clearly something that needs to

00:28:44,399 --> 00:28:47,279
be looked at factually and

00:28:45,919 --> 00:28:49,200
professionally

00:28:47,279 --> 00:28:50,640
so the the the cobo working group was

00:28:49,200 --> 00:28:54,080
set up earlier this year

00:28:50,640 --> 00:28:58,000
specifically with a couple of goals um

00:28:54,080 --> 00:29:00,000
one of which is to establish enough

00:28:58,000 --> 00:29:01,840
factual evidence and thought leadership

00:29:00,000 --> 00:29:04,799
and clarity

00:29:01,840 --> 00:29:06,720
around why cobalt remains valuable and

00:29:04,799 --> 00:29:09,039
what the facts are that support that

00:29:06,720 --> 00:29:12,000
evidence

00:29:09,039 --> 00:29:13,120
to help influence you know today's

00:29:12,000 --> 00:29:15,440
decision makers

00:29:13,120 --> 00:29:16,960
to make an informed choice about the use

00:29:15,440 --> 00:29:19,200
of that technology

00:29:16,960 --> 00:29:20,799
it also sought to look into you know

00:29:19,200 --> 00:29:22,799
what do we need to do about those who

00:29:20,799 --> 00:29:27,840
are looking to acquire those skills

00:29:22,799 --> 00:29:27,840
which will come on too shortly

00:29:27,919 --> 00:29:33,039
now the working group is is effectively

00:29:32,000 --> 00:29:35,039
just starting out

00:29:33,039 --> 00:29:36,559
and we're already up close to 100

00:29:35,039 --> 00:29:38,720
members already

00:29:36,559 --> 00:29:39,679
but it's a community project as all of

00:29:38,720 --> 00:29:42,000
these things are

00:29:39,679 --> 00:29:43,840
and the the power of communities when

00:29:42,000 --> 00:29:46,159
everyone gets involved

00:29:43,840 --> 00:29:48,640
so you know i'm personally inspired by

00:29:46,159 --> 00:29:51,440
the facebook group that has 17 000

00:29:48,640 --> 00:29:53,600
members avid cobalt protagonists just

00:29:51,440 --> 00:29:56,399
wanting to talk about that technology

00:29:53,600 --> 00:29:58,240
we should be doing the same thing here

00:29:56,399 --> 00:30:01,840
because there's a lot of cobal interest

00:29:58,240 --> 00:30:04,000
around our job here i think uh

00:30:01,840 --> 00:30:06,559
and your job listener if you're if you

00:30:04,000 --> 00:30:09,919
choose to accept the uh

00:30:06,559 --> 00:30:13,440
the task is to to get on board and and

00:30:09,919 --> 00:30:14,000
be a vocal supporter of the factual

00:30:13,440 --> 00:30:17,840
truth

00:30:14,000 --> 00:30:18,240
around cobalt and so before i finish

00:30:17,840 --> 00:30:22,080
that

00:30:18,240 --> 00:30:23,760
let's um let's give you the opportunity

00:30:22,080 --> 00:30:25,200
to get yourself immersed in some of

00:30:23,760 --> 00:30:27,120
those facts that i mean there's you know

00:30:25,200 --> 00:30:29,039
there are plenty more besides but

00:30:27,120 --> 00:30:30,720
the recent omp summit recording is

00:30:29,039 --> 00:30:31,520
probably a good place to start where we

00:30:30,720 --> 00:30:33,919
laid bare

00:30:31,520 --> 00:30:35,919
the truth behind kowal and some of these

00:30:33,919 --> 00:30:38,559
recent articles from the it

00:30:35,919 --> 00:30:39,600
press fairly well researched fairly well

00:30:38,559 --> 00:30:41,919
informed

00:30:39,600 --> 00:30:43,919
and i think give a much more balanced

00:30:41,919 --> 00:30:46,159
much more professional view of cobol

00:30:43,919 --> 00:30:47,840
in terms of you know what the decision

00:30:46,159 --> 00:30:50,000
makers of today

00:30:47,840 --> 00:30:52,720
need to be aware of in order to make the

00:30:50,000 --> 00:30:54,320
right choices for tomorrow

00:30:52,720 --> 00:30:56,559
and if that's our plan to influence

00:30:54,320 --> 00:30:59,440
decision makers what about

00:30:56,559 --> 00:31:01,279
the coders themselves with kobel's age

00:30:59,440 --> 00:31:03,360
being what it is

00:31:01,279 --> 00:31:06,320
there is the obvious requirement for a

00:31:03,360 --> 00:31:08,640
new generation of cobalt coders

00:31:06,320 --> 00:31:09,760
to be fully versed fully trained and

00:31:08,640 --> 00:31:12,960
fully aware

00:31:09,760 --> 00:31:15,039
of what the tech can do i know i think

00:31:12,960 --> 00:31:16,000
that's not a bad segue as if i wrote it

00:31:15,039 --> 00:31:18,480
deliberately

00:31:16,000 --> 00:31:19,519
into how we can teach the next

00:31:18,480 --> 00:31:22,159
generation

00:31:19,519 --> 00:31:23,440
of you know that technology which is

00:31:22,159 --> 00:31:24,640
where i'm going to leave you for the

00:31:23,440 --> 00:31:25,679
time being and where i'm going to hand

00:31:24,640 --> 00:31:28,480
over to

00:31:25,679 --> 00:31:30,159
our sibling omp group um all around

00:31:28,480 --> 00:31:31,519
cobalt programming which is led by

00:31:30,159 --> 00:31:34,640
sadashina

00:31:31,519 --> 00:31:34,640
over to you sadashina

00:31:36,320 --> 00:31:41,440
thanks derek i'm going to quickly steal

00:31:38,799 --> 00:31:41,440
your screen

00:31:45,440 --> 00:31:49,039
i hope you can see my screen now

00:31:50,720 --> 00:31:53,919
can you see the screen and hear me

00:31:52,399 --> 00:31:58,000
anybody

00:31:53,919 --> 00:32:00,240
this week yes yes okay perfect all right

00:31:58,000 --> 00:32:02,480
um thanks again derek that was a great

00:32:00,240 --> 00:32:03,600
overview of the kobold working group and

00:32:02,480 --> 00:32:06,480
as you rightly said

00:32:03,600 --> 00:32:08,399
a sibling uh group here at open

00:32:06,480 --> 00:32:09,600
mainframe project my name is sadashina

00:32:08,399 --> 00:32:12,640
srinivasan

00:32:09,600 --> 00:32:16,080
i'm a program manager at ibm

00:32:12,640 --> 00:32:17,440
um in the z influencer team so what we

00:32:16,080 --> 00:32:21,120
basically do

00:32:17,440 --> 00:32:24,000
is work to putting out technically

00:32:21,120 --> 00:32:25,200
engaging relevant content and

00:32:24,000 --> 00:32:29,440
engagements

00:32:25,200 --> 00:32:32,399
to um really uh touch base with all of

00:32:29,440 --> 00:32:36,399
our global community of developers

00:32:32,399 --> 00:32:37,200
um so with that we talked about we

00:32:36,399 --> 00:32:40,080
talked about

00:32:37,200 --> 00:32:42,399
skill shortage and you know in may in

00:32:40,080 --> 00:32:44,799
the space of mainframes cobalt

00:32:42,399 --> 00:32:46,799
but i just want to put things in context

00:32:44,799 --> 00:32:49,519
here for a brief moment if you look at

00:32:46,799 --> 00:32:52,080
skill shortage or just google that up

00:32:49,519 --> 00:32:53,679
there's skill shortage in several

00:32:52,080 --> 00:32:56,880
industries

00:32:53,679 --> 00:32:58,960
manufacturing of course and you know

00:32:56,880 --> 00:33:00,240
we've been talking about cyber security

00:32:58,960 --> 00:33:03,519
skill shortage

00:33:00,240 --> 00:33:04,000
for a while now as well so just putting

00:33:03,519 --> 00:33:07,440
things

00:33:04,000 --> 00:33:09,519
in perspective and i know um both len

00:33:07,440 --> 00:33:11,919
and derek already touched upon this and

00:33:09,519 --> 00:33:14,559
of course john in the introduction

00:33:11,919 --> 00:33:15,760
this has been the year of cobalt as i'd

00:33:14,559 --> 00:33:18,080
like to say

00:33:15,760 --> 00:33:19,519
um you know the good the bad the ugly

00:33:18,080 --> 00:33:23,519
but the optimist in me

00:33:19,519 --> 00:33:26,320
wants to take it as good news um

00:33:23,519 --> 00:33:26,640
just just as you know the mainframe has

00:33:26,320 --> 00:33:29,679
been

00:33:26,640 --> 00:33:30,559
silently quietly running the world so

00:33:29,679 --> 00:33:32,960
has cobalt

00:33:30,559 --> 00:33:34,080
cobalt code has been running the world

00:33:32,960 --> 00:33:36,880
for us

00:33:34,080 --> 00:33:38,799
but here we are in 2020 no one can stop

00:33:36,880 --> 00:33:41,919
talking about cobalt

00:33:38,799 --> 00:33:45,039
amid the um the whole pandemic

00:33:41,919 --> 00:33:48,320
we had all of the unemployment checks

00:33:45,039 --> 00:33:48,960
having issues with that and everyone's

00:33:48,320 --> 00:33:51,360
coming out

00:33:48,960 --> 00:33:53,200
and talking about cobalt lack of cobalt

00:33:51,360 --> 00:33:56,240
skills what have you

00:33:53,200 --> 00:33:59,360
um so you know we could look at that

00:33:56,240 --> 00:34:01,840
as a silver lining and

00:33:59,360 --> 00:34:02,799
so if that is all the problem then what

00:34:01,840 --> 00:34:06,480
really is

00:34:02,799 --> 00:34:09,679
the solution right and ibm was

00:34:06,480 --> 00:34:12,560
a a in a collaborative project in long

00:34:09,679 --> 00:34:13,040
before all of this happened well into

00:34:12,560 --> 00:34:15,919
work

00:34:13,040 --> 00:34:16,480
um well into working on a solution and

00:34:15,919 --> 00:34:18,480
i'm

00:34:16,480 --> 00:34:21,599
really excited that i could be part of

00:34:18,480 --> 00:34:24,960
this solution where we came together

00:34:21,599 --> 00:34:28,240
in a collaborative project to develop

00:34:24,960 --> 00:34:31,280
that next generation really modern

00:34:28,240 --> 00:34:33,280
tooling based cobol course

00:34:31,280 --> 00:34:35,119
i know derek touched upon that and

00:34:33,280 --> 00:34:36,800
talked about what can we do

00:34:35,119 --> 00:34:39,440
to bring in that next generation of

00:34:36,800 --> 00:34:42,560
cobalt programmers

00:34:39,440 --> 00:34:45,599
and what better place than to land it on

00:34:42,560 --> 00:34:49,440
the open mainframe project right

00:34:45,599 --> 00:34:50,320
all of this amid the the big news that

00:34:49,440 --> 00:34:53,599
cobalt hit

00:34:50,320 --> 00:34:56,879
uh back in march early april

00:34:53,599 --> 00:34:58,960
and we landed the course on april 14th

00:34:56,879 --> 00:35:00,720
with uh with the help of john murtagh

00:34:58,960 --> 00:35:04,160
and his amazing team

00:35:00,720 --> 00:35:08,480
at open mainframe project so here's

00:35:04,160 --> 00:35:10,480
the cobalt team um very interesting

00:35:08,480 --> 00:35:12,480
times and the way that we had to

00:35:10,480 --> 00:35:13,680
actually end up finally pulling all of

00:35:12,480 --> 00:35:16,960
this together

00:35:13,680 --> 00:35:19,760
um so the the story backstory here is

00:35:16,960 --> 00:35:21,359
back in fall of 2019 we were already in

00:35:19,760 --> 00:35:24,160
the process of planning

00:35:21,359 --> 00:35:24,880
um the the cobalt course and how we

00:35:24,160 --> 00:35:26,800
wanted to

00:35:24,880 --> 00:35:27,920
what what kind of tooling we would use

00:35:26,800 --> 00:35:30,480
how the whole

00:35:27,920 --> 00:35:32,000
um content would play out things like

00:35:30,480 --> 00:35:34,079
that and

00:35:32,000 --> 00:35:35,920
the the with the conscious effort and

00:35:34,079 --> 00:35:36,800
goal that this should be a collaborative

00:35:35,920 --> 00:35:40,079
project

00:35:36,800 --> 00:35:43,760
bring in clients bring in academia and

00:35:40,079 --> 00:35:46,960
ibm smes all coming together to create

00:35:43,760 --> 00:35:49,680
content that would be relevant

00:35:46,960 --> 00:35:52,320
and really new new age for our next

00:35:49,680 --> 00:35:54,800
generation of cobol programmers

00:35:52,320 --> 00:35:56,000
so all of this project kicked off and we

00:35:54,800 --> 00:35:58,880
were well underway

00:35:56,000 --> 00:36:00,800
in february and met up here in

00:35:58,880 --> 00:36:04,560
sacramento california

00:36:00,800 --> 00:36:06,480
and just a week into the residency of

00:36:04,560 --> 00:36:08,640
you know a four-week residency

00:36:06,480 --> 00:36:10,560
to get this content all done and

00:36:08,640 --> 00:36:13,119
published

00:36:10,560 --> 00:36:15,119
everyone had to go back home work from

00:36:13,119 --> 00:36:18,240
home it was a remote

00:36:15,119 --> 00:36:20,480
virtual residency this was this was the

00:36:18,240 --> 00:36:24,240
team that came together and we had

00:36:20,480 --> 00:36:27,040
a team member from hursley in uk

00:36:24,240 --> 00:36:27,760
um so here's here's a little tidbit

00:36:27,040 --> 00:36:30,079
right for

00:36:27,760 --> 00:36:32,079
for what is the mainframe and how modern

00:36:30,079 --> 00:36:35,599
it it really is

00:36:32,079 --> 00:36:38,480
um our team member was on um

00:36:35,599 --> 00:36:39,119
on the way going to drop i think his

00:36:38,480 --> 00:36:43,040
wife

00:36:39,119 --> 00:36:46,800
at the airport in the car

00:36:43,040 --> 00:36:49,839
working on the project connected to

00:36:46,800 --> 00:36:53,520
his vs code

00:36:49,839 --> 00:36:56,640
and um and the back end to a mainframe

00:36:53,520 --> 00:37:00,640
all while on their way to the airport

00:36:56,640 --> 00:37:04,240
so there you have um how modern

00:37:00,640 --> 00:37:06,800
and um the mainframe is and also

00:37:04,240 --> 00:37:07,760
all of the tooling that is now available

00:37:06,800 --> 00:37:11,280
as interface

00:37:07,760 --> 00:37:11,760
to work with the mainframe so the cobol

00:37:11,280 --> 00:37:14,240
course

00:37:11,760 --> 00:37:14,880
the way the content ended up being put

00:37:14,240 --> 00:37:17,760
together

00:37:14,880 --> 00:37:19,200
was focused in two parts the first part

00:37:17,760 --> 00:37:22,000
really all around

00:37:19,200 --> 00:37:22,800
the tooling like i said the goal here

00:37:22,000 --> 00:37:26,240
was to bring

00:37:22,800 --> 00:37:27,119
in modern tooling so this leverages bs

00:37:26,240 --> 00:37:30,480
code

00:37:27,119 --> 00:37:33,520
the open mainframe project zoe and

00:37:30,480 --> 00:37:35,440
ibm's z open editor so that brings in a

00:37:33,520 --> 00:37:38,560
lot of the language

00:37:35,440 --> 00:37:41,599
editing um aspects

00:37:38,560 --> 00:37:44,720
um part two really then dives into cobol

00:37:41,599 --> 00:37:45,520
itself right the basics of cobol all the

00:37:44,720 --> 00:37:47,920
various

00:37:45,520 --> 00:37:50,240
um all the various specific aspects of

00:37:47,920 --> 00:37:52,400
cobol and some of the really

00:37:50,240 --> 00:37:53,520
really cool features that cobalt has to

00:37:52,400 --> 00:37:57,200
offer like

00:37:53,520 --> 00:37:57,200
the intrinsic functions and more

00:37:57,520 --> 00:38:04,079
um and as i said you know all of this

00:38:00,960 --> 00:38:07,119
cobalt content then finally landed on

00:38:04,079 --> 00:38:10,800
open mainframe project and that was back

00:38:07,119 --> 00:38:13,760
in april thanks to may

00:38:10,800 --> 00:38:15,280
and john it was it was quite the quite

00:38:13,760 --> 00:38:18,640
the month of april

00:38:15,280 --> 00:38:20,000
as i remember it and this was our

00:38:18,640 --> 00:38:23,520
biggest success

00:38:20,000 --> 00:38:26,320
right i mean um this was about three

00:38:23,520 --> 00:38:29,680
days after we actually landed the course

00:38:26,320 --> 00:38:32,720
and a brand new learner came along

00:38:29,680 --> 00:38:35,040
took the content worked on it um on

00:38:32,720 --> 00:38:36,000
the open mainframe project in the github

00:38:35,040 --> 00:38:38,480
repo

00:38:36,000 --> 00:38:39,520
and had this little tidbit to share very

00:38:38,480 --> 00:38:43,359
proud moment

00:38:39,520 --> 00:38:44,000
not just for uh for negohan as he goes

00:38:43,359 --> 00:38:47,040
by

00:38:44,000 --> 00:38:50,400
but for all of us on the team to see how

00:38:47,040 --> 00:38:50,400
well this is being received

00:38:50,560 --> 00:38:55,040
um what we also did to help a lot of the

00:38:53,760 --> 00:38:56,720
cobol uh

00:38:55,040 --> 00:38:59,280
learners and you know kobala was

00:38:56,720 --> 00:39:02,000
suddenly uh revived and resurrected

00:38:59,280 --> 00:39:04,160
so to help with all of the learning that

00:39:02,000 --> 00:39:07,760
you know folks were looking forward to

00:39:04,160 --> 00:39:08,960
we worked on a a landing page on ibm

00:39:07,760 --> 00:39:12,320
developer

00:39:08,960 --> 00:39:12,640
and what this was is to bring in any and

00:39:12,320 --> 00:39:15,680
all

00:39:12,640 --> 00:39:18,960
content and resources we could find as

00:39:15,680 --> 00:39:21,599
one gateway for anything that

00:39:18,960 --> 00:39:23,040
for folks to come in and learn about

00:39:21,599 --> 00:39:25,040
cobalt

00:39:23,040 --> 00:39:28,000
the the link here again at the bottom of

00:39:25,040 --> 00:39:30,720
this page

00:39:28,000 --> 00:39:33,040
and so the cobalt journey continues

00:39:30,720 --> 00:39:36,000
that's a little snapshot of

00:39:33,040 --> 00:39:36,720
the github repository for the content as

00:39:36,000 --> 00:39:39,040
you'll see

00:39:36,720 --> 00:39:40,160
over time since april this has been

00:39:39,040 --> 00:39:43,200
quite a while

00:39:40,160 --> 00:39:44,000
right we've been able to fork this

00:39:43,200 --> 00:39:47,200
content

00:39:44,000 --> 00:39:47,920
into a course number one which is the

00:39:47,200 --> 00:39:50,560
original

00:39:47,920 --> 00:39:51,760
course um to which a lot of our

00:39:50,560 --> 00:39:54,960
community members have

00:39:51,760 --> 00:39:56,079
actually contributed um it is still live

00:39:54,960 --> 00:39:59,440
and thriving

00:39:56,079 --> 00:40:02,320
with over 1.7 k forks

00:39:59,440 --> 00:40:02,320
and um

00:40:02,720 --> 00:40:06,240
then the advanced course which is course

00:40:04,960 --> 00:40:08,560
number two

00:40:06,240 --> 00:40:10,960
is currently where a lot of our

00:40:08,560 --> 00:40:13,680
community members have been contributing

00:40:10,960 --> 00:40:15,599
um there is a db2 api project that is

00:40:13,680 --> 00:40:16,480
now wrapped into it how do you interact

00:40:15,599 --> 00:40:20,000
with cobol

00:40:16,480 --> 00:40:23,440
through and db2 so um and there are some

00:40:20,000 --> 00:40:26,000
hands-on projects that really um help

00:40:23,440 --> 00:40:28,880
the advanced learner to keep continuing

00:40:26,000 --> 00:40:30,640
and engaging with the content

00:40:28,880 --> 00:40:33,760
so i want to take a brief moment here to

00:40:30,640 --> 00:40:36,720
also showcase our tsc members so

00:40:33,760 --> 00:40:37,359
you know as every cobol sorry open

00:40:36,720 --> 00:40:40,480
mainframe

00:40:37,359 --> 00:40:43,520
project has a tsc so does our

00:40:40,480 --> 00:40:44,720
our project here um john murdick of

00:40:43,520 --> 00:40:47,839
course is on the team

00:40:44,720 --> 00:40:50,880
and we have amazing contributors uh

00:40:47,839 --> 00:40:54,319
jelly zigura and mike from broadcom

00:40:50,880 --> 00:40:57,760
um martin and paul newton and myself

00:40:54,319 --> 00:40:58,480
from the ibm team who form the core tsc

00:40:57,760 --> 00:41:02,000
here

00:40:58,480 --> 00:41:04,800
and we meet every second tuesday

00:41:02,000 --> 00:41:05,760
of the month a few other highlights

00:41:04,800 --> 00:41:08,000
about cobalt

00:41:05,760 --> 00:41:09,440
itself that i'd like to talk about you

00:41:08,000 --> 00:41:10,079
know they say the proof is in the

00:41:09,440 --> 00:41:13,200
pudding

00:41:10,079 --> 00:41:14,079
right in the la since landing this

00:41:13,200 --> 00:41:17,680
content

00:41:14,079 --> 00:41:20,480
we've had 1600 over 1600

00:41:17,680 --> 00:41:21,839
members in our cobol slack channel which

00:41:20,480 --> 00:41:25,760
is on the omp

00:41:21,839 --> 00:41:27,920
workspace over 1700 forks like i said to

00:41:25,760 --> 00:41:30,079
the content

00:41:27,920 --> 00:41:32,720
the content also comes with hands-on

00:41:30,079 --> 00:41:35,599
labs which are hosted on a machine

00:41:32,720 --> 00:41:36,079
that ibm has offered for the labs and

00:41:35,599 --> 00:41:39,520
we've

00:41:36,079 --> 00:41:41,920
issued over 3500 system ids

00:41:39,520 --> 00:41:43,839
for folks to actually do the labs that

00:41:41,920 --> 00:41:45,839
go along with the course

00:41:43,839 --> 00:41:47,119
um another thing that we've also been

00:41:45,839 --> 00:41:49,440
able to do uh

00:41:47,119 --> 00:41:50,480
in the monthly tscs as also derek

00:41:49,440 --> 00:41:52,720
pointed out

00:41:50,480 --> 00:41:53,920
is work with our sister organizations

00:41:52,720 --> 00:41:56,240
within omp

00:41:53,920 --> 00:41:58,560
so we've brought guest speakers from zoe

00:41:56,240 --> 00:42:00,480
from the cobol working group

00:41:58,560 --> 00:42:02,560
our community members i mentioned the

00:42:00,480 --> 00:42:04,319
db2 api project

00:42:02,560 --> 00:42:06,560
our community members have been coming

00:42:04,319 --> 00:42:07,760
and presenting content that they have

00:42:06,560 --> 00:42:11,040
been contributing

00:42:07,760 --> 00:42:13,520
to this project so

00:42:11,040 --> 00:42:14,560
with that um i'd like to say you know

00:42:13,520 --> 00:42:17,599
thank you to

00:42:14,560 --> 00:42:19,200
um john to open mainframe project and

00:42:17,599 --> 00:42:20,960
everyone here for giving me the

00:42:19,200 --> 00:42:24,079
opportunity to um

00:42:20,960 --> 00:42:25,920
talk about cobalt and share a little

00:42:24,079 --> 00:42:29,040
about this project

00:42:25,920 --> 00:42:31,040
thank you awesome thank you boat

00:42:29,040 --> 00:42:32,720
yeah sorry i was just going to say any

00:42:31,040 --> 00:42:34,800
questions for derek or

00:42:32,720 --> 00:42:36,800
myself yes definitely if you have

00:42:34,800 --> 00:42:40,480
questions feel free to use the q

00:42:36,800 --> 00:42:43,440
a um that is on the screen here

00:42:40,480 --> 00:42:44,560
um but definitely i mean this is you

00:42:43,440 --> 00:42:48,720
know this is i think

00:42:44,560 --> 00:42:50,960
uh the the cobalt investments the cobalt

00:42:48,720 --> 00:42:52,640
effort really the whole community coming

00:42:50,960 --> 00:42:54,880
together around cobalt

00:42:52,640 --> 00:42:55,680
i'm sure if we all sat here this time

00:42:54,880 --> 00:42:57,280
last year

00:42:55,680 --> 00:42:59,520
we wouldn't think we'd be talking about

00:42:57,280 --> 00:43:01,920
that but you know it really showcases

00:42:59,520 --> 00:43:04,880
how strong this community is and how

00:43:01,920 --> 00:43:05,680
invested in its future it is i mean if

00:43:04,880 --> 00:43:06,960
you just

00:43:05,680 --> 00:43:09,119
if you just think about it like the

00:43:06,960 --> 00:43:10,000
response that this community had from

00:43:09,119 --> 00:43:11,920
the time

00:43:10,000 --> 00:43:13,599
which really this started to hit in the

00:43:11,920 --> 00:43:14,319
forefront to the time which this

00:43:13,599 --> 00:43:16,400
community

00:43:14,319 --> 00:43:18,720
was already having public ways of coming

00:43:16,400 --> 00:43:22,000
together was less than a week

00:43:18,720 --> 00:43:25,200
um this programming course itself

00:43:22,000 --> 00:43:28,560
had hundreds of stars on github

00:43:25,200 --> 00:43:31,839
before the code even fully landed

00:43:28,560 --> 00:43:34,079
um we've had nearly 1800

00:43:31,839 --> 00:43:35,760
individuals to date raise their hand and

00:43:34,079 --> 00:43:38,079
say i'm available

00:43:35,760 --> 00:43:40,240
for higher cobalt and that's not just

00:43:38,079 --> 00:43:42,800
people at the end of their careers

00:43:40,240 --> 00:43:44,800
you know one might think it's people the

00:43:42,800 --> 00:43:47,119
beginning of their career the middle the

00:43:44,800 --> 00:43:48,640
back end of it um different genders

00:43:47,119 --> 00:43:50,319
different authenticities different

00:43:48,640 --> 00:43:52,960
locales it is

00:43:50,319 --> 00:43:54,000
really showcased how strong this is and

00:43:52,960 --> 00:43:55,200
more importantly it's just

00:43:54,000 --> 00:43:57,119
it's shown how strong this community

00:43:55,200 --> 00:43:58,240
pulls together um and is such a great

00:43:57,119 --> 00:44:00,560
investment area

00:43:58,240 --> 00:44:02,240
um and we just thank both of you and the

00:44:00,560 --> 00:44:05,920
whole community around it who's done a

00:44:02,240 --> 00:44:05,920
marvelous job of pulling this together

00:44:07,200 --> 00:44:10,800
so with that um we're gonna skip ahead

00:44:09,440 --> 00:44:12,000
here we have no questions and again if

00:44:10,800 --> 00:44:14,400
you have questions during this

00:44:12,000 --> 00:44:16,400
please use the q a um and we'll try to

00:44:14,400 --> 00:44:19,680
get that between some of our sessions

00:44:16,400 --> 00:44:20,319
i'd like next to uh shift over to zoe um

00:44:19,680 --> 00:44:21,839
and as

00:44:20,319 --> 00:44:23,200
uh they talked about you know the

00:44:21,839 --> 00:44:24,480
interactions between a lot of our

00:44:23,200 --> 00:44:26,079
projects is really

00:44:24,480 --> 00:44:28,319
where the strength of the foundation

00:44:26,079 --> 00:44:29,760
comes you know you can collaborate in

00:44:28,319 --> 00:44:31,119
open source all you want but having

00:44:29,760 --> 00:44:32,800
these natural collaboration

00:44:31,119 --> 00:44:34,560
opportunities that open would open up

00:44:32,800 --> 00:44:36,000
with a strong foundation

00:44:34,560 --> 00:44:38,480
is something that we just see time and

00:44:36,000 --> 00:44:40,160
time again um across the various efforts

00:44:38,480 --> 00:44:41,359
we have the linux foundation and

00:44:40,160 --> 00:44:43,520
zoe has certainly been one of the

00:44:41,359 --> 00:44:45,280
spearheading ones and you hear themes of

00:44:43,520 --> 00:44:46,319
that through all of the presentations

00:44:45,280 --> 00:44:48,640
here so

00:44:46,319 --> 00:44:49,440
with no further ado i'd like to turn the

00:44:48,640 --> 00:44:52,480
over to mike

00:44:49,440 --> 00:44:55,040
uh michael dubois um and talk a little

00:44:52,480 --> 00:44:57,839
bit about what's going on with zoe

00:44:55,040 --> 00:44:59,040
okay thank you john i'll just share my

00:44:57,839 --> 00:45:01,520
screen i assume

00:44:59,040 --> 00:45:03,760
everybody can see it now loud and clear

00:45:01,520 --> 00:45:05,839
looks great

00:45:03,760 --> 00:45:08,240
uh hello everybody and thanks for

00:45:05,839 --> 00:45:11,200
joining my name is michael dubois and

00:45:08,240 --> 00:45:12,319
i am a product manager at broadcom uh in

00:45:11,200 --> 00:45:14,160
my current role

00:45:12,319 --> 00:45:16,240
i lead our open mainframe product

00:45:14,160 --> 00:45:16,720
management team which is responsible for

00:45:16,240 --> 00:45:18,800
our

00:45:16,720 --> 00:45:21,599
ca brightside offering and all of our

00:45:18,800 --> 00:45:24,319
contributions and activities around zoe

00:45:21,599 --> 00:45:24,880
i also participate in the zoe leadership

00:45:24,319 --> 00:45:28,000
committee

00:45:24,880 --> 00:45:30,000
and the zoe onboarding squad and i work

00:45:28,000 --> 00:45:30,880
closely with several of the zoe squad

00:45:30,000 --> 00:45:33,520
leaders

00:45:30,880 --> 00:45:35,359
from my organization here at broadcom

00:45:33,520 --> 00:45:37,359
and for the next 20 minutes i'd

00:45:35,359 --> 00:45:39,359
like to provide you with a very quick

00:45:37,359 --> 00:45:40,880
introduction to zoe intended for zoe

00:45:39,359 --> 00:45:42,800
beginners

00:45:40,880 --> 00:45:44,240
but you can see my email address on the

00:45:42,800 --> 00:45:46,560
screen and

00:45:44,240 --> 00:45:47,839
if you ever have any questions about zoe

00:45:46,560 --> 00:45:49,760
or you need

00:45:47,839 --> 00:45:51,440
uh help getting started please don't

00:45:49,760 --> 00:45:52,960
hesitate to reach out to me

00:45:51,440 --> 00:45:55,520
as i mentioned i've got a number of the

00:45:52,960 --> 00:45:56,720
zoe uh community leaders on my team here

00:45:55,520 --> 00:45:58,560
at broadcom so

00:45:56,720 --> 00:46:00,160
i can probably help you find the answers

00:45:58,560 --> 00:46:02,079
you're looking for

00:46:00,160 --> 00:46:03,760
and you can also find me on open

00:46:02,079 --> 00:46:05,680
mainframe project slack where

00:46:03,760 --> 00:46:09,119
most of the zoe community shares

00:46:05,680 --> 00:46:09,119
information through the channels there

00:46:12,240 --> 00:46:16,079
today i'll start with a a few very quick

00:46:14,560 --> 00:46:17,599
uh facts about the open mainframe

00:46:16,079 --> 00:46:18,240
project not to repeat anything that you

00:46:17,599 --> 00:46:21,280
heard from len

00:46:18,240 --> 00:46:22,640
earlier um and then uh we'll take a a

00:46:21,280 --> 00:46:25,359
quick look at zoe

00:46:22,640 --> 00:46:25,680
and then we'll drill down into zoe lts

00:46:25,359 --> 00:46:28,319
or

00:46:25,680 --> 00:46:31,200
long-term support and the zoe

00:46:28,319 --> 00:46:31,200
conformance program

00:46:32,000 --> 00:46:35,599
so uh really quickly the open mainframe

00:46:34,319 --> 00:46:38,720
project or omp

00:46:35,599 --> 00:46:40,720
is it's of course a project under the

00:46:38,720 --> 00:46:41,599
linux foundation as len said earlier

00:46:40,720 --> 00:46:44,480
focused on

00:46:41,599 --> 00:46:45,200
the sustainable use of open source in

00:46:44,480 --> 00:46:47,599
the mainframe

00:46:45,200 --> 00:46:48,720
environment and part of their very bold

00:46:47,599 --> 00:46:51,040
vision is that

00:46:48,720 --> 00:46:51,839
open source on the mainframe becomes a

00:46:51,040 --> 00:46:54,319
standard

00:46:51,839 --> 00:46:56,079
and part of their mission is to enable

00:46:54,319 --> 00:46:57,920
the adoption of open source

00:46:56,079 --> 00:46:59,440
on the mainframe and to help build the

00:46:57,920 --> 00:47:01,040
community around it

00:46:59,440 --> 00:47:02,640
it's been five years now since the

00:47:01,040 --> 00:47:04,960
launch of omp and

00:47:02,640 --> 00:47:05,920
it's gained a lot of momentum and almost

00:47:04,960 --> 00:47:07,520
4 40

00:47:05,920 --> 00:47:09,040
supporting organizations including

00:47:07,520 --> 00:47:11,119
broadcom ibm

00:47:09,040 --> 00:47:12,319
and rocket who were the three founders

00:47:11,119 --> 00:47:14,000
of zoe

00:47:12,319 --> 00:47:16,079
and over those five years both the

00:47:14,000 --> 00:47:17,599
network of contributors and the impact

00:47:16,079 --> 00:47:21,280
of their contributions

00:47:17,599 --> 00:47:22,800
just continues to grow as of today there

00:47:21,280 --> 00:47:26,000
are 15 projects

00:47:22,800 --> 00:47:27,359
currently hosted by omp and zoe is only

00:47:26,000 --> 00:47:29,440
one of those projects

00:47:27,359 --> 00:47:31,040
and as len mentioned you'll hear about a

00:47:29,440 --> 00:47:32,480
number of them today

00:47:31,040 --> 00:47:34,079
but if you're interested in learning

00:47:32,480 --> 00:47:36,839
more about any of those projects

00:47:34,079 --> 00:47:39,680
you can learn more at

00:47:36,839 --> 00:47:44,319
openmainframeproject.org

00:47:39,680 --> 00:47:46,720
which brings us to zoe so what is zoe

00:47:44,319 --> 00:47:48,480
it's funny that i realized this this

00:47:46,720 --> 00:47:51,040
morning my first slide

00:47:48,480 --> 00:47:53,040
in the what is zoe section answers three

00:47:51,040 --> 00:47:54,480
questions but none of those questions is

00:47:53,040 --> 00:47:56,319
what is zoe

00:47:54,480 --> 00:47:58,160
uh i mentioned earlier that uh the

00:47:56,319 --> 00:48:00,079
founders of zoe were broadcom at the

00:47:58,160 --> 00:48:01,359
time ca technologies which was acquired

00:48:00,079 --> 00:48:04,800
by broadcom at the end of

00:48:01,359 --> 00:48:07,599
2018 and also ibm and rocket

00:48:04,800 --> 00:48:09,760
the goal was to create a new modern

00:48:07,599 --> 00:48:11,359
easier way for modern engineers to

00:48:09,760 --> 00:48:14,000
interact with the mainframe

00:48:11,359 --> 00:48:15,760
through an open extensible ecosystem

00:48:14,000 --> 00:48:17,119
that makes application development and

00:48:15,760 --> 00:48:17,839
other engineering functions on the

00:48:17,119 --> 00:48:20,800
mainframe

00:48:17,839 --> 00:48:22,480
much more like any other platform the

00:48:20,800 --> 00:48:25,599
idea was to make it

00:48:22,480 --> 00:48:28,000
not different than other platforms

00:48:25,599 --> 00:48:29,760
so zoe is that extensible open source

00:48:28,000 --> 00:48:33,520
ecosystem for the mainframe

00:48:29,760 --> 00:48:35,760
the first of its kind and zoe offers

00:48:33,520 --> 00:48:37,119
a set of interfaces that provide a

00:48:35,760 --> 00:48:39,119
consistent way

00:48:37,119 --> 00:48:40,640
of accessing the mainframe for engineers

00:48:39,119 --> 00:48:42,559
to consume the services

00:48:40,640 --> 00:48:44,480
that they need from the mainframe in

00:48:42,559 --> 00:48:46,800
order to get their jobs done

00:48:44,480 --> 00:48:47,839
it offers interaction with the mainframe

00:48:46,800 --> 00:48:49,680
in a modern way

00:48:47,839 --> 00:48:51,520
enabling those engineers to use the

00:48:49,680 --> 00:48:53,359
skills that they already have

00:48:51,520 --> 00:48:55,440
and they already bring to the table and

00:48:53,359 --> 00:48:56,000
to work with the mainframe using modern

00:48:55,440 --> 00:48:57,599
tools

00:48:56,000 --> 00:48:59,119
and scripting language that they've

00:48:57,599 --> 00:49:02,559
already learned and they're already

00:48:59,119 --> 00:49:05,760
familiar with

00:49:02,559 --> 00:49:07,440
and zoe is open source so you can

00:49:05,760 --> 00:49:09,680
build it yourself but it's offered as a

00:49:07,440 --> 00:49:11,680
binary download and it includes both

00:49:09,680 --> 00:49:14,079
core zoe components as well as

00:49:11,680 --> 00:49:16,480
a set of applications and plugins out of

00:49:14,079 --> 00:49:18,240
the box that help zoe adopters to get

00:49:16,480 --> 00:49:18,880
started on their modern mainframe

00:49:18,240 --> 00:49:21,760
journey

00:49:18,880 --> 00:49:21,760
much more quickly

00:49:24,000 --> 00:49:28,720
and before we move forward i mentioned

00:49:26,640 --> 00:49:30,000
modern engineers a few times already

00:49:28,720 --> 00:49:31,200
and i just wanted to point them out

00:49:30,000 --> 00:49:31,760
there they are at the bottom of the

00:49:31,200 --> 00:49:34,079
screen

00:49:31,760 --> 00:49:35,359
this is not necessarily all-inclusive

00:49:34,079 --> 00:49:38,160
but there's ravi

00:49:35,359 --> 00:49:40,000
he's a devops architect responsible for

00:49:38,160 --> 00:49:41,119
engineering automation and ci cd

00:49:40,000 --> 00:49:42,559
pipelines

00:49:41,119 --> 00:49:44,880
there's michelle she's a modern

00:49:42,559 --> 00:49:46,800
developer tasked with developing cobol

00:49:44,880 --> 00:49:48,480
applications on the mainframe i think we

00:49:46,800 --> 00:49:50,559
just met a few of those

00:49:48,480 --> 00:49:52,640
there's tyler a modern systems

00:49:50,559 --> 00:49:53,920
administrator and there's isabel the

00:49:52,640 --> 00:49:55,599
modern operator

00:49:53,920 --> 00:49:59,839
who by the way looks exactly like

00:49:55,599 --> 00:50:01,599
michelle they could be twins

00:49:59,839 --> 00:50:02,960
as of today there are four main

00:50:01,599 --> 00:50:04,720
components of zoe

00:50:02,960 --> 00:50:06,960
and a couple of additional components

00:50:04,720 --> 00:50:08,640
that are currently in incubation

00:50:06,960 --> 00:50:10,880
which basically means that it's in

00:50:08,640 --> 00:50:13,680
research and prototyping mode and not

00:50:10,880 --> 00:50:16,480
exactly or necessarily ready for general

00:50:13,680 --> 00:50:16,480
consumption yet

00:50:17,920 --> 00:50:21,680
okay so let's start here if this was a

00:50:20,480 --> 00:50:23,760
video game

00:50:21,680 --> 00:50:25,359
it starts with our four modern heroes at

00:50:23,760 --> 00:50:27,040
the top of the screen

00:50:25,359 --> 00:50:29,359
and the services that they need to get

00:50:27,040 --> 00:50:31,040
their jobs done at the bottom

00:50:29,359 --> 00:50:33,040
and what happens in between and all that

00:50:31,040 --> 00:50:35,040
white space that you see right now

00:50:33,040 --> 00:50:36,079
to enable their modern interaction with

00:50:35,040 --> 00:50:39,599
the mainframe

00:50:36,079 --> 00:50:39,599
that's where you're gonna find zoe

00:50:39,760 --> 00:50:44,319
so let's build it piece by piece sitting

00:50:42,480 --> 00:50:45,599
on top of the services is an api

00:50:44,319 --> 00:50:47,680
mediation layer

00:50:45,599 --> 00:50:48,720
its job is to make it easier to access

00:50:47,680 --> 00:50:50,319
the services

00:50:48,720 --> 00:50:52,400
providing consistent access with

00:50:50,319 --> 00:50:54,559
consistent security including single

00:50:52,400 --> 00:50:56,319
sign-on of course and enabled for

00:50:54,559 --> 00:50:58,400
multi-factor authentication

00:50:56,319 --> 00:51:00,400
with load balancing and much more the

00:50:58,400 --> 00:51:03,359
api mediation layer itself is actually

00:51:00,400 --> 00:51:06,400
comprised of three parts an api gateway

00:51:03,359 --> 00:51:08,800
a discovery service and an api catalog

00:51:06,400 --> 00:51:09,599
so we can conform and api services are

00:51:08,800 --> 00:51:11,599
discovered

00:51:09,599 --> 00:51:13,359
and they appear in the catalog making it

00:51:11,599 --> 00:51:15,040
really easy for people to find the

00:51:13,359 --> 00:51:17,040
services that they need

00:51:15,040 --> 00:51:20,640
and to learn how to use them and even to

00:51:17,040 --> 00:51:20,640
try them out right from the catalog

00:51:21,040 --> 00:51:25,760
next up the client-side sdk it's one of

00:51:24,079 --> 00:51:26,800
the incubation projects currently

00:51:25,760 --> 00:51:29,839
incubating

00:51:26,800 --> 00:51:31,200
with the zoe cli squad the sdk is

00:51:29,839 --> 00:51:32,000
essentially a set of programming

00:51:31,200 --> 00:51:33,920
libraries

00:51:32,000 --> 00:51:35,920
that developers can use to easily

00:51:33,920 --> 00:51:38,160
integrate their applications with zoe

00:51:35,920 --> 00:51:40,480
and with zoe conformance services

00:51:38,160 --> 00:51:41,200
the sdk targets specific programming

00:51:40,480 --> 00:51:42,720
languages

00:51:41,200 --> 00:51:44,480
and it's intended to give a better

00:51:42,720 --> 00:51:45,040
programming experience when working with

00:51:44,480 --> 00:51:47,359
zoe

00:51:45,040 --> 00:51:49,359
and with zoe services by providing a

00:51:47,359 --> 00:51:53,280
simple and consistent way of accessing

00:51:49,359 --> 00:51:54,720
the rest apis on z users of the sdk

00:51:53,280 --> 00:51:57,119
they don't need to deal with the

00:51:54,720 --> 00:51:59,200
complexities of coding directly to rest

00:51:57,119 --> 00:52:01,280
apis from their programming language

00:51:59,200 --> 00:52:02,720
and the sdk lets them pull in specific

00:52:01,280 --> 00:52:04,079
libraries that they need to get their

00:52:02,720 --> 00:52:05,680
job done

00:52:04,079 --> 00:52:08,079
and there are actually three languages

00:52:05,680 --> 00:52:10,400
currently in incubation the slide only

00:52:08,079 --> 00:52:12,720
shows two node.js and python but there's

00:52:10,400 --> 00:52:14,319
also a library being developed for swift

00:52:12,720 --> 00:52:16,240
and there are other languages that are

00:52:14,319 --> 00:52:19,680
already being discussed and considered

00:52:16,240 --> 00:52:22,880
for the future

00:52:19,680 --> 00:52:23,359
okay next comes zoe cli uh providing a

00:52:22,880 --> 00:52:24,960
modern

00:52:23,359 --> 00:52:26,480
uh those same modern engineers with a

00:52:24,960 --> 00:52:27,760
command line interface to access

00:52:26,480 --> 00:52:29,359
mainframe services

00:52:27,760 --> 00:52:31,280
to do the things like creating and

00:52:29,359 --> 00:52:32,640
managing data sets submitting and

00:52:31,280 --> 00:52:34,559
reviewing jobs

00:52:32,640 --> 00:52:36,800
sending commands to the console things

00:52:34,559 --> 00:52:39,200
like that zoe cli

00:52:36,800 --> 00:52:40,960
enables automation and the use of common

00:52:39,200 --> 00:52:43,440
tools like ides

00:52:40,960 --> 00:52:45,680
shell commands bash scripts and build

00:52:43,440 --> 00:52:48,240
tools for mainframe development

00:52:45,680 --> 00:52:48,960
zoe cli is extensible using plugins

00:52:48,240 --> 00:52:51,520
which create

00:52:48,960 --> 00:52:53,040
new commands and some of those are

00:52:51,520 --> 00:52:56,559
provided with zoe like

00:52:53,040 --> 00:52:58,319
ibm db2 cics and more and you'll also

00:52:56,559 --> 00:53:00,079
find that vendors will create

00:52:58,319 --> 00:53:01,839
cli plugins for their commercial

00:53:00,079 --> 00:53:04,319
products like ca and

00:53:01,839 --> 00:53:05,839
ca endeavor for example and there are

00:53:04,319 --> 00:53:08,720
many many others and i'll show you

00:53:05,839 --> 00:53:08,720
some of those later

00:53:10,400 --> 00:53:15,760
next there's zoe explorer a plugin

00:53:13,680 --> 00:53:17,839
extension for visual studio code

00:53:15,760 --> 00:53:19,359
that provides a user interface to access

00:53:17,839 --> 00:53:22,319
mainframe data sets

00:53:19,359 --> 00:53:23,920
and to access uss files and to access

00:53:22,319 --> 00:53:25,839
jobs

00:53:23,920 --> 00:53:27,440
many modern developers and sysadmins

00:53:25,839 --> 00:53:29,520
already live in vs code

00:53:27,440 --> 00:53:31,440
so zoe explorer has become extremely

00:53:29,520 --> 00:53:32,720
popular in the very short time since it

00:53:31,440 --> 00:53:34,559
was first released

00:53:32,720 --> 00:53:36,160
as of today zoe explorer has been

00:53:34,559 --> 00:53:42,079
installed almost

00:53:36,160 --> 00:53:45,200
20 000 times

00:53:42,079 --> 00:53:46,720
next up the app framework a web user

00:53:45,200 --> 00:53:48,480
interface that provides a virtual

00:53:46,720 --> 00:53:51,119
desktop for mainframe

00:53:48,480 --> 00:53:53,280
plus a number of built-in apps allowing

00:53:51,119 --> 00:53:56,160
access to cos functions

00:53:53,280 --> 00:53:57,760
the core zoe includes apps for common

00:53:56,160 --> 00:54:01,200
capabilities such as

00:53:57,760 --> 00:54:03,440
3270 and vt terminals an editor

00:54:01,200 --> 00:54:06,640
explorers for working with jazz or mvs

00:54:03,440 --> 00:54:06,640
datasets and uss

00:54:08,000 --> 00:54:12,000
the other incubator project is zoe

00:54:10,000 --> 00:54:13,760
mobile that's a mobile visualization

00:54:12,000 --> 00:54:14,960
layer that lets you interact with zoe

00:54:13,760 --> 00:54:16,960
services

00:54:14,960 --> 00:54:18,559
and those services which are integrated

00:54:16,960 --> 00:54:19,760
with the api mediation layer which i

00:54:18,559 --> 00:54:22,319
mentioned earlier

00:54:19,760 --> 00:54:23,520
and zoe mobile is incubating right now

00:54:22,319 --> 00:54:26,720
as part of the app

00:54:23,520 --> 00:54:27,520
framework squad zoni mobile needs more

00:54:26,720 --> 00:54:30,079
validation

00:54:27,520 --> 00:54:31,839
and it needs more contribution so far

00:54:30,079 --> 00:54:32,880
developers have contributed a node

00:54:31,839 --> 00:54:35,839
client sdk

00:54:32,880 --> 00:54:38,319
for ios and also for android there's

00:54:35,839 --> 00:54:39,839
been a contribution of a cordova plug-in

00:54:38,319 --> 00:54:42,079
and there's been a lot of user

00:54:39,839 --> 00:54:43,920
validation we just need more

00:54:42,079 --> 00:54:46,079
contributors for zoe mobile to be

00:54:43,920 --> 00:54:47,920
successful we need more developers

00:54:46,079 --> 00:54:49,599
willing to spend time coding

00:54:47,920 --> 00:54:51,680
more validators willing to do some

00:54:49,599 --> 00:54:52,960
testing and of course like any

00:54:51,680 --> 00:54:55,040
incubation project

00:54:52,960 --> 00:54:56,799
we need more feedback and we need more

00:54:55,040 --> 00:54:58,559
use cases to focus on

00:54:56,799 --> 00:55:00,559
so if you're looking for something fun

00:54:58,559 --> 00:55:01,280
maybe a fun entry point into the zoe

00:55:00,559 --> 00:55:04,000
community

00:55:01,280 --> 00:55:05,760
zoe mobile may be just that opportunity

00:55:04,000 --> 00:55:06,799
you can be involved in something modern

00:55:05,760 --> 00:55:10,000
something exciting

00:55:06,799 --> 00:55:12,799
collaborative it's open and fun

00:55:10,000 --> 00:55:14,480
at the same time did i mention fun yeah

00:55:12,799 --> 00:55:17,599
i mentioned it a few times right

00:55:14,480 --> 00:55:19,839
it's fun okay

00:55:17,599 --> 00:55:21,599
um several of the zoe components include

00:55:19,839 --> 00:55:22,400
built-in extensions including the app

00:55:21,599 --> 00:55:25,520
framework

00:55:22,400 --> 00:55:28,960
zoe explorer command line interface

00:55:25,520 --> 00:55:28,960
and the client sdk

00:55:29,119 --> 00:55:32,480
but of course any of those components

00:55:30,559 --> 00:55:33,920
can also be extended by anyone

00:55:32,480 --> 00:55:36,000
including individuals who need

00:55:33,920 --> 00:55:36,640
additional functionality community

00:55:36,000 --> 00:55:39,200
members

00:55:36,640 --> 00:55:40,960
vendors and so on so the possibilities

00:55:39,200 --> 00:55:43,280
for what zoe has to offer with

00:55:40,960 --> 00:55:45,440
additional extensions is virtually

00:55:43,280 --> 00:55:48,000
limitless

00:55:45,440 --> 00:55:49,680
and of course developers and sysadmins

00:55:48,000 --> 00:55:50,400
and anyone else in need of mainframe

00:55:49,680 --> 00:55:52,640
services

00:55:50,400 --> 00:55:54,960
can also talk directly to those services

00:55:52,640 --> 00:55:57,119
programmatically if they like

00:55:54,960 --> 00:55:58,480
and there you have it the zoe ecosystem

00:55:57,119 --> 00:56:00,319
including all of the different

00:55:58,480 --> 00:56:03,359
possibilities for michelle

00:56:00,319 --> 00:56:04,240
tyler ravi and isabel to interact with

00:56:03,359 --> 00:56:08,240
the mainframe

00:56:04,240 --> 00:56:08,240
in modern ways to get their jobs done

00:56:09,440 --> 00:56:13,440
okay so next i'd like to talk for a few

00:56:11,200 --> 00:56:14,640
minutes about zoe lts or long-term

00:56:13,440 --> 00:56:17,119
support

00:56:14,640 --> 00:56:18,880
mainframe customers as you probably know

00:56:17,119 --> 00:56:19,200
set a pretty high bar for software that

00:56:18,880 --> 00:56:21,359
they

00:56:19,200 --> 00:56:22,880
that they adopt and the way that their

00:56:21,359 --> 00:56:24,880
software is acquired

00:56:22,880 --> 00:56:26,240
the way that it's packaged the way that

00:56:24,880 --> 00:56:28,960
it's maintained

00:56:26,240 --> 00:56:30,000
their reliance on stability uh knowing

00:56:28,960 --> 00:56:32,160
that critical defects

00:56:30,000 --> 00:56:33,359
will be corrected and uh that the

00:56:32,160 --> 00:56:34,799
features that they're using will

00:56:33,359 --> 00:56:36,480
continue to be supported

00:56:34,799 --> 00:56:37,920
and all their tools uh will have a

00:56:36,480 --> 00:56:39,520
certain level of interoperability

00:56:37,920 --> 00:56:40,960
regardless of upgrades those things are

00:56:39,520 --> 00:56:41,920
all very important to mainframe

00:56:40,960 --> 00:56:43,760
customers

00:56:41,920 --> 00:56:45,760
and traditionally open source

00:56:43,760 --> 00:56:46,880
technologies they're not as well known

00:56:45,760 --> 00:56:49,200
for those specific

00:56:46,880 --> 00:56:51,520
attributes as mainframe technologies so

00:56:49,200 --> 00:56:54,000
it adds another set of concerns

00:56:51,520 --> 00:56:56,000
for mainframers about introducing open

00:56:54,000 --> 00:56:58,799
source technologies like zoe

00:56:56,000 --> 00:56:59,839
into an existing mainframe ecosystem so

00:56:58,799 --> 00:57:03,280
let's take a look at how

00:56:59,839 --> 00:57:03,280
zoe lts helps with this

00:57:04,000 --> 00:57:07,040
so first things first the packaging and

00:57:05,760 --> 00:57:09,920
the installation

00:57:07,040 --> 00:57:10,880
the zoe cubic cupid's squad i always

00:57:09,920 --> 00:57:12,720
trip on that

00:57:10,880 --> 00:57:14,079
was formed to address some of those

00:57:12,720 --> 00:57:15,839
concerns

00:57:14,079 --> 00:57:18,160
what they came up with was a standard

00:57:15,839 --> 00:57:20,400
smpe managed installation package

00:57:18,160 --> 00:57:22,960
just like any of the mainframe product

00:57:20,400 --> 00:57:23,760
any mainframe product requires smpe for

00:57:22,960 --> 00:57:25,599
management

00:57:23,760 --> 00:57:27,440
it's a show stopper if it doesn't and

00:57:25,599 --> 00:57:30,480
now zoe

00:57:27,440 --> 00:57:34,079
you know is available in an smpe managed

00:57:30,480 --> 00:57:35,839
installation package good start next

00:57:34,079 --> 00:57:37,440
make it easy to acquire zoe without

00:57:35,839 --> 00:57:39,599
having to worry about whether or not

00:57:37,440 --> 00:57:40,720
the zoe that you've just acquired is

00:57:39,599 --> 00:57:43,839
genuinely zooey

00:57:40,720 --> 00:57:44,960
right next make sure that it's easy to

00:57:43,839 --> 00:57:47,280
drop zoe down

00:57:44,960 --> 00:57:48,880
and all of its components very easily

00:57:47,280 --> 00:57:51,280
and make sure that you only need to

00:57:48,880 --> 00:57:52,559
configure the the components of zoe that

00:57:51,280 --> 00:57:55,040
you need

00:57:52,559 --> 00:57:57,119
this is all good and all available

00:57:55,040 --> 00:57:58,480
enable customers to maintain a single

00:57:57,119 --> 00:58:01,760
instance of zoe

00:57:58,480 --> 00:58:04,480
uh so that other solutions that prereq

00:58:01,760 --> 00:58:06,160
zoe can leverage it as they need to they

00:58:04,480 --> 00:58:08,000
don't have to always distribute new

00:58:06,160 --> 00:58:10,160
copies of zoe which makes a nightmare

00:58:08,000 --> 00:58:12,079
for maintenance but also be flexible

00:58:10,160 --> 00:58:14,480
enough to allow an additional instance

00:58:12,079 --> 00:58:17,200
of zoe as needed for any reason

00:58:14,480 --> 00:58:18,799
and finally make it easy to upgrade open

00:58:17,200 --> 00:58:21,359
source solutions like zoe

00:58:18,799 --> 00:58:22,160
they update frequently so just apply a

00:58:21,359 --> 00:58:23,680
ptf

00:58:22,160 --> 00:58:25,760
that'll bring you up to the latest

00:58:23,680 --> 00:58:27,359
service level or whatever level uh you

00:58:25,760 --> 00:58:30,720
know whatever level you really want to

00:58:27,359 --> 00:58:34,839
to come up to just with a pdf

00:58:30,720 --> 00:58:36,319
this is all available with the zoe lts

00:58:34,839 --> 00:58:37,920
today

00:58:36,319 --> 00:58:39,599
so this slides a little bit complicated

00:58:37,920 --> 00:58:40,720
so don't worry too much about digesting

00:58:39,599 --> 00:58:43,040
it um

00:58:40,720 --> 00:58:45,119
it's uh it's a great reference though

00:58:43,040 --> 00:58:45,599
i'll summarize the highlights of lts for

00:58:45,119 --> 00:58:48,319
you

00:58:45,599 --> 00:58:50,079
from left to right green to blue to gray

00:58:48,319 --> 00:58:52,640
that's the life cycle of of

00:58:50,079 --> 00:58:53,839
the zoe version uh from left to right

00:58:52,640 --> 00:58:57,040
the amount of change

00:58:53,839 --> 00:58:58,640
goes from most active to least active

00:58:57,040 --> 00:59:00,079
in green you'll have the frequent

00:58:58,640 --> 00:59:02,160
changes to zoe

00:59:00,079 --> 00:59:04,400
lots of innovation lots of new features

00:59:02,160 --> 00:59:06,160
and even breaking changes but then as

00:59:04,400 --> 00:59:08,160
you get into the blue

00:59:06,160 --> 00:59:09,680
you mature into a long-term support

00:59:08,160 --> 00:59:11,760
version and still

00:59:09,680 --> 00:59:13,440
new features are available they come out

00:59:11,760 --> 00:59:14,880
with new features every month but no

00:59:13,440 --> 00:59:16,880
breaking changes

00:59:14,880 --> 00:59:18,240
at that point any breaking changes go

00:59:16,880 --> 00:59:20,160
into the next version

00:59:18,240 --> 00:59:21,599
eventually you get to a maintenance only

00:59:20,160 --> 00:59:23,280
mode and

00:59:21,599 --> 00:59:24,880
all new feature development goes into

00:59:23,280 --> 00:59:27,839
the next version at that point

00:59:24,880 --> 00:59:29,359
so zoe version 1 is in the active lts

00:59:27,839 --> 00:59:32,720
stage now

00:59:29,359 --> 00:59:34,400
and the total time for each version that

00:59:32,720 --> 00:59:37,760
will be in an lts phase

00:59:34,400 --> 00:59:40,000
is at least two years could be longer

00:59:37,760 --> 00:59:41,440
but once a version reaches an lts phase

00:59:40,000 --> 00:59:43,119
or reaches lts

00:59:41,440 --> 00:59:44,960
you've got yourself a stable version for

00:59:43,119 --> 00:59:45,520
the next two years without breaking

00:59:44,960 --> 00:59:47,599
changes

00:59:45,520 --> 00:59:48,960
so you can be confident that upgrades

00:59:47,599 --> 00:59:52,160
from release to release

00:59:48,960 --> 00:59:53,440
say from 1.14 to 1.15 will never break

00:59:52,160 --> 00:59:55,520
your environment

00:59:53,440 --> 00:59:58,480
and that's also very important for

00:59:55,520 --> 00:59:58,480
mainframe customers

00:59:58,640 --> 01:00:03,520
so just a few more specifics and details

01:00:01,520 --> 01:00:04,480
zoe will consider the need for a new

01:00:03,520 --> 01:00:06,640
version

01:00:04,480 --> 01:00:08,720
about once annually but obviously

01:00:06,640 --> 01:00:10,000
anytime a potentially breaking change

01:00:08,720 --> 01:00:12,960
becomes necessary

01:00:10,000 --> 01:00:14,160
or is being considered for zoe a new

01:00:12,960 --> 01:00:16,480
version will typically

01:00:14,160 --> 01:00:19,440
stay in the current state for six to

01:00:16,480 --> 01:00:21,520
nine months before maturing into lts

01:00:19,440 --> 01:00:23,680
that's to provide time for feedback and

01:00:21,520 --> 01:00:25,839
for adjustments as needed

01:00:23,680 --> 01:00:27,119
active lts versions are ready for

01:00:25,839 --> 01:00:28,720
general consumption

01:00:27,119 --> 01:00:30,480
and they will continue to have new

01:00:28,720 --> 01:00:31,680
releases anytime a new feature is

01:00:30,480 --> 01:00:33,280
introduced

01:00:31,680 --> 01:00:35,119
and the maintenance phase will consist

01:00:33,280 --> 01:00:37,839
of additional modifications for bug

01:00:35,119 --> 01:00:37,839
fixes only

01:00:39,760 --> 01:00:45,839
okay some more details uh the lts phases

01:00:43,280 --> 01:00:46,720
are active and maintenance uh i've

01:00:45,839 --> 01:00:49,760
already said that

01:00:46,720 --> 01:00:50,799
during lts all critical defects will be

01:00:49,760 --> 01:00:53,280
addressed

01:00:50,799 --> 01:00:53,839
uh a conformant extension will continue

01:00:53,280 --> 01:00:56,160
to work

01:00:53,839 --> 01:00:57,839
without any modification so if you've

01:00:56,160 --> 01:00:59,359
built an extension to zoe and you have a

01:00:57,839 --> 01:01:00,160
conformance badge which i'll get to

01:00:59,359 --> 01:01:01,440
later

01:01:00,160 --> 01:01:03,280
you don't have to change it it's going

01:01:01,440 --> 01:01:05,280
to continue to work

01:01:03,280 --> 01:01:07,680
again the total time that a version is

01:01:05,280 --> 01:01:09,359
in the lts phase is at least two years

01:01:07,680 --> 01:01:11,040
and if you're planning to use zoe in

01:01:09,359 --> 01:01:11,760
some business critical or production

01:01:11,040 --> 01:01:13,040
manner

01:01:11,760 --> 01:01:16,000
you just want to make sure you're using

01:01:13,040 --> 01:01:16,000
an lts version

01:01:17,440 --> 01:01:20,880
okay so if you want to know more about

01:01:19,119 --> 01:01:23,119
zoe lts you can

01:01:20,880 --> 01:01:25,440
you can find out as much as you need on

01:01:23,119 --> 01:01:27,520
zoe.org just go to zoey.org

01:01:25,440 --> 01:01:29,440
click download then scroll down until

01:01:27,520 --> 01:01:32,799
you see the lts diagram

01:01:29,440 --> 01:01:32,799
and then click learn more

01:01:34,880 --> 01:01:39,040
okay just one more topic then you'll be

01:01:37,200 --> 01:01:40,960
rid of me

01:01:39,040 --> 01:01:42,960
i've mentioned conformant apps a few

01:01:40,960 --> 01:01:44,559
times or conformance or conformant

01:01:42,960 --> 01:01:45,839
extensions

01:01:44,559 --> 01:01:48,000
i've mentioned a few times during the

01:01:45,839 --> 01:01:49,359
session so i think it's a good idea we

01:01:48,000 --> 01:01:53,839
take a closer look at

01:01:49,359 --> 01:01:53,839
exactly what i mean by that

01:01:54,079 --> 01:01:59,039
okay i've explained how zoe can be

01:01:57,039 --> 01:02:00,799
extended

01:01:59,039 --> 01:02:03,039
how some of those extensions are

01:02:00,799 --> 01:02:04,960
available right out of the box

01:02:03,039 --> 01:02:06,480
and how anyone can create more

01:02:04,960 --> 01:02:08,960
extensions for zoe

01:02:06,480 --> 01:02:10,640
well the zoe conformance program it's

01:02:08,960 --> 01:02:13,359
there to guarantee that

01:02:10,640 --> 01:02:15,440
a certain level of experience when you

01:02:13,359 --> 01:02:18,160
when you're acquiring or installing or

01:02:15,440 --> 01:02:20,240
using zoe extensions

01:02:18,160 --> 01:02:21,200
that you get that that expected level of

01:02:20,240 --> 01:02:24,240
experience

01:02:21,200 --> 01:02:26,240
of a zoe extension by providing a set of

01:02:24,240 --> 01:02:27,920
minimum guidance for extenders

01:02:26,240 --> 01:02:29,680
to ensure that that you get that

01:02:27,920 --> 01:02:31,440
consistent experience

01:02:29,680 --> 01:02:33,280
when an extension meets the minimum

01:02:31,440 --> 01:02:35,280
guidance the extender can apply for a

01:02:33,280 --> 01:02:36,400
conformance badge to let everybody know

01:02:35,280 --> 01:02:40,559
that their extension

01:02:36,400 --> 01:02:40,559
fits nicely into the zoe ecosystem

01:02:45,359 --> 01:02:49,039
there are already conformance guidelines

01:02:47,200 --> 01:02:51,280
for cli plug-in extensions

01:02:49,039 --> 01:02:52,480
for web desktop applications and for

01:02:51,280 --> 01:02:54,480
apis

01:02:52,480 --> 01:02:56,799
more conformance programs are expected

01:02:54,480 --> 01:02:59,280
to be added in the future as needed

01:02:56,799 --> 01:02:59,920
the program today focuses on a number of

01:02:59,280 --> 01:03:03,599
common

01:02:59,920 --> 01:03:06,000
uh a number of different um

01:03:03,599 --> 01:03:08,599
things like common functionality uh that

01:03:06,000 --> 01:03:10,880
you might expect from a zoe extension

01:03:08,599 --> 01:03:12,319
interoperability between components and

01:03:10,880 --> 01:03:15,440
between extensions

01:03:12,319 --> 01:03:18,079
and zoe integration quality and of

01:03:15,440 --> 01:03:19,680
course user experience

01:03:18,079 --> 01:03:22,319
obviously there are benefits of the

01:03:19,680 --> 01:03:24,160
program not only for the extenders who

01:03:22,319 --> 01:03:26,559
provide the conformant extensions

01:03:24,160 --> 01:03:30,000
but also for those who consume or use

01:03:26,559 --> 01:03:31,760
the extensions

01:03:30,000 --> 01:03:34,079
the conformance program was updated back

01:03:31,760 --> 01:03:35,920
in march when lts was announced

01:03:34,079 --> 01:03:37,920
and that was to stay aligned with the

01:03:35,920 --> 01:03:39,920
new features in the lts version

01:03:37,920 --> 01:03:41,280
the previous conformance program from

01:03:39,920 --> 01:03:43,839
2019 was

01:03:41,280 --> 01:03:44,480
discontinued at that time the new

01:03:43,839 --> 01:03:46,480
program

01:03:44,480 --> 01:03:48,720
is the v1 conformance program a

01:03:46,480 --> 01:03:50,240
corresponding to zoe lts v1

01:03:48,720 --> 01:03:51,920
and on the right side of this screen

01:03:50,240 --> 01:03:52,960
here you can see a sample of the

01:03:51,920 --> 01:03:55,359
checklist that

01:03:52,960 --> 01:03:57,359
extenders would complete and submit when

01:03:55,359 --> 01:04:00,400
applying for conformance badges

01:03:57,359 --> 01:04:01,599
for their extension and the consumer as

01:04:00,400 --> 01:04:03,760
a consumer

01:04:01,599 --> 01:04:04,880
you can easily see all of the conformant

01:04:03,760 --> 01:04:07,039
extensions

01:04:04,880 --> 01:04:08,559
on a single page kind of like you're

01:04:07,039 --> 01:04:10,480
going to an app store and i'm going to

01:04:08,559 --> 01:04:13,839
show you how to how to get there in just

01:04:10,480 --> 01:04:13,839
a minute

01:04:14,960 --> 01:04:18,559
okay any extension can apply including

01:04:18,160 --> 01:04:21,039
new

01:04:18,559 --> 01:04:22,400
applications as well as existing ones

01:04:21,039 --> 01:04:25,200
even those that were

01:04:22,400 --> 01:04:27,760
2019 conformant were able to apply for

01:04:25,200 --> 01:04:30,079
v1 conformance those were fairly easy

01:04:27,760 --> 01:04:32,400
uh all you do is review the terms

01:04:30,079 --> 01:04:33,119
complete the evaluation and submit your

01:04:32,400 --> 01:04:35,760
form

01:04:33,119 --> 01:04:38,079
uh the evaluation uh is then done or the

01:04:35,760 --> 01:04:40,480
application is then reviewed by the open

01:04:38,079 --> 01:04:42,000
mainframe project and once approved

01:04:40,480 --> 01:04:44,400
you'll be identified

01:04:42,000 --> 01:04:45,039
um you'll be identified as a conformant

01:04:44,400 --> 01:04:47,280
extension

01:04:45,039 --> 01:04:48,640
you'll be notified and your badge will

01:04:47,280 --> 01:04:50,960
be displayed with

01:04:48,640 --> 01:04:52,240
all of the other conformance badges in

01:04:50,960 --> 01:04:55,839
the place i'm going to show you in just

01:04:52,240 --> 01:04:55,839
a minute

01:04:56,079 --> 01:05:02,960
so zoe has 43 conformant extensions

01:05:00,319 --> 01:05:03,760
uh at this time as of this morning and

01:05:02,960 --> 01:05:06,319
that number

01:05:03,760 --> 01:05:08,079
just keeps growing so here's how you get

01:05:06,319 --> 01:05:08,799
to the list of conformant extensions if

01:05:08,079 --> 01:05:11,039
you want to see

01:05:08,799 --> 01:05:12,960
all of these badges in one place just go

01:05:11,039 --> 01:05:15,839
to zoe.org

01:05:12,960 --> 01:05:16,880
click zoe conformance program then click

01:05:15,839 --> 01:05:18,880
learn more

01:05:16,880 --> 01:05:20,000
and you'll be able to see all of the

01:05:18,880 --> 01:05:21,359
current

01:05:20,000 --> 01:05:24,000
conformance badges for all the

01:05:21,359 --> 01:05:27,680
extensions that have submitted and

01:05:24,000 --> 01:05:27,680
uh and been deemed conforming

01:05:29,200 --> 01:05:32,400
okay uh conformance badges are version

01:05:31,680 --> 01:05:35,599
specific

01:05:32,400 --> 01:05:37,760
so the current badges say zoe v1

01:05:35,599 --> 01:05:39,760
on them just like the one you see on the

01:05:37,760 --> 01:05:42,000
screen now and eventually there will be

01:05:39,760 --> 01:05:43,839
a zoe v2 conformance program aligned

01:05:42,000 --> 01:05:45,520
with the next lts version

01:05:43,839 --> 01:05:48,559
so if you're thinking about building a

01:05:45,520 --> 01:05:49,440
cli plugin or a service api or a web ui

01:05:48,559 --> 01:05:50,880
application

01:05:49,440 --> 01:05:53,280
just be sure to consider the zoe

01:05:50,880 --> 01:05:55,200
conformance program and here are just a

01:05:53,280 --> 01:05:56,559
few quick tips for ensuring that

01:05:55,200 --> 01:05:58,319
you earn the badge as quickly as

01:05:56,559 --> 01:05:59,200
possible most important on this slide

01:05:58,319 --> 01:06:01,119
probably

01:05:59,200 --> 01:06:02,319
be sure to complete all of the required

01:06:01,119 --> 01:06:04,160
fields in the form

01:06:02,319 --> 01:06:05,599
and if you need any help please just

01:06:04,160 --> 01:06:07,839
reach out to uh

01:06:05,599 --> 01:06:09,119
through the omp slack using the zoe

01:06:07,839 --> 01:06:10,799
onboarding channel

01:06:09,119 --> 01:06:12,799
somebody from the onboarding squad will

01:06:10,799 --> 01:06:15,599
definitely be there to help you

01:06:12,799 --> 01:06:15,599
maybe even me

01:06:16,720 --> 01:06:20,240
and with that i'd just like to end by

01:06:18,799 --> 01:06:20,960
saying thank you for spending your time

01:06:20,240 --> 01:06:23,280
with me today

01:06:20,960 --> 01:06:25,839
enjoy the rest of the sessions and have

01:06:23,280 --> 01:06:25,839
a great day

01:06:26,720 --> 01:06:30,240
awesome thank you thank you so much

01:06:28,319 --> 01:06:32,400
michael a great overview of what's going

01:06:30,240 --> 01:06:33,920
on with zoe how to get involved and some

01:06:32,400 --> 01:06:35,200
of the downstream impacts we're already

01:06:33,920 --> 01:06:38,400
seeing there

01:06:35,200 --> 01:06:41,200
um we definitely have the q a

01:06:38,400 --> 01:06:43,119
still open here i'm not seeing a ton of

01:06:41,200 --> 01:06:45,680
questions which means we are probably

01:06:43,119 --> 01:06:48,079
um addressing everyone's stuff in these

01:06:45,680 --> 01:06:51,440
great presentations so that is

01:06:48,079 --> 01:06:52,880
fantastic to hear um so we kind of want

01:06:51,440 --> 01:06:55,119
to shift forward a little bit

01:06:52,880 --> 01:06:56,720
you know so zoe was a project launched

01:06:55,119 --> 01:06:57,200
two years a little over two years ago

01:06:56,720 --> 01:07:00,079
now

01:06:57,200 --> 01:07:00,640
and since then we've just seen a ton of

01:07:00,079 --> 01:07:03,760
new

01:07:00,640 --> 01:07:07,039
interest in bringing open source efforts

01:07:03,760 --> 01:07:08,960
um to uh to zoe into the

01:07:07,039 --> 01:07:10,240
i'm sorry not zoe to the open mainframe

01:07:08,960 --> 01:07:12,079
project and

01:07:10,240 --> 01:07:14,240
we had a few projects announced this

01:07:12,079 --> 01:07:15,280
year and so uh we want to kind of talk

01:07:14,240 --> 01:07:16,640
to a few of them here

01:07:15,280 --> 01:07:18,319
and have some of them presented what's

01:07:16,640 --> 01:07:20,640
going on here and the first

01:07:18,319 --> 01:07:21,920
is geneva ers which we announced at open

01:07:20,640 --> 01:07:25,280
mainframe summit

01:07:21,920 --> 01:07:25,760
uh last month and we have kip twitchwell

01:07:25,280 --> 01:07:28,000
who

01:07:25,760 --> 01:07:29,760
will be presenting an update on that

01:07:28,000 --> 01:07:31,680
project and he's on video and we'll

01:07:29,760 --> 01:07:35,119
switch over to him right now

01:07:31,680 --> 01:07:37,839
thank you john i actually did a video

01:07:35,119 --> 01:07:39,680
presentation so we'll watch my because

01:07:37,839 --> 01:07:40,640
i'm in the midst of some activities here

01:07:39,680 --> 01:07:42,240
at home

01:07:40,640 --> 01:07:44,079
so i'll watch that i'll be at the end to

01:07:42,240 --> 01:07:46,400
answer some questions if anyone has a

01:07:44,079 --> 01:07:46,400
question

01:07:47,540 --> 01:07:54,240
[Music]

01:07:52,000 --> 01:07:56,000
hi i'm kip twitchell i'm the chair of

01:07:54,240 --> 01:07:58,079
the technical committee for the geneva

01:07:56,000 --> 01:07:59,760
ers project i want to talk to you a

01:07:58,079 --> 01:08:01,760
little bit about what geneva ers

01:07:59,760 --> 01:08:03,039
is and what the open source mainframe

01:08:01,760 --> 01:08:05,200
project looks like that

01:08:03,039 --> 01:08:06,400
we've just contributed geneva ers to

01:08:05,200 --> 01:08:09,440
geneva ers

01:08:06,400 --> 01:08:11,839
is a little bit like apache spark but it

01:08:09,440 --> 01:08:15,200
predates it by almost a decade

01:08:11,839 --> 01:08:18,080
on z os on the mainframe it's a scanning

01:08:15,200 --> 01:08:19,040
engine that resolves many queries in a

01:08:18,080 --> 01:08:21,679
single pass

01:08:19,040 --> 01:08:23,040
through a database and that ability to

01:08:21,679 --> 01:08:24,400
resolve many queries in a single

01:08:23,040 --> 01:08:27,839
password the database makes it

01:08:24,400 --> 01:08:30,880
incredibly efficient that efficiency

01:08:27,839 --> 01:08:34,000
means that companies can hold greater

01:08:30,880 --> 01:08:34,960
levels of detail in their database

01:08:34,000 --> 01:08:37,199
repository

01:08:34,960 --> 01:08:38,000
the ideas behind geneva ers come from

01:08:37,199 --> 01:08:40,000
generalized

01:08:38,000 --> 01:08:41,839
event architecture meaning an

01:08:40,000 --> 01:08:43,920
event-based accounting system or

01:08:41,839 --> 01:08:46,080
event-based reporting system

01:08:43,920 --> 01:08:47,040
if you can report from transactional

01:08:46,080 --> 01:08:48,880
detail

01:08:47,040 --> 01:08:50,400
transactional detail has all of the

01:08:48,880 --> 01:08:52,159
attributes we capture when the

01:08:50,400 --> 01:08:54,960
transactions are recorded

01:08:52,159 --> 01:08:56,719
that transactional detail is very rich

01:08:54,960 --> 01:08:58,000
in terms of what you can know and what

01:08:56,719 --> 01:08:59,679
you can understand what you can

01:08:58,000 --> 01:09:00,319
aggregate what you can select what you

01:08:59,679 --> 01:09:02,640
can

01:09:00,319 --> 01:09:03,920
can do with that data in the

01:09:02,640 --> 01:09:06,000
transactional detail

01:09:03,920 --> 01:09:08,080
when you're dealing with summaries you

01:09:06,000 --> 01:09:10,719
have to drop transactional detail

01:09:08,080 --> 01:09:12,400
geneva ers's ability to scan through

01:09:10,719 --> 01:09:14,400
transactional detail

01:09:12,400 --> 01:09:15,759
on large volumes of it in a parallel

01:09:14,400 --> 01:09:17,440
processing engine

01:09:15,759 --> 01:09:19,040
means that you can have greater

01:09:17,440 --> 01:09:21,359
information out of the

01:09:19,040 --> 01:09:22,799
the data that you've gathered at such

01:09:21,359 --> 01:09:25,759
pain taking cost

01:09:22,799 --> 01:09:27,520
in our business systems geneva ers

01:09:25,759 --> 01:09:29,199
allows you to instead of just doing

01:09:27,520 --> 01:09:32,239
analytical processes

01:09:29,199 --> 01:09:35,040
because it has piping mechanisms whereby

01:09:32,239 --> 01:09:37,120
one process can feed to another process

01:09:35,040 --> 01:09:39,120
companies have built whole applications

01:09:37,120 --> 01:09:41,199
on top of geneva ers

01:09:39,120 --> 01:09:42,159
geneva eras doesn't manage storage for

01:09:41,199 --> 01:09:43,920
you in fact

01:09:42,159 --> 01:09:45,520
most of our customers over the time

01:09:43,920 --> 01:09:47,759
because they want the scale have just

01:09:45,520 --> 01:09:50,159
used sequential files on z os

01:09:47,759 --> 01:09:51,520
but it can also read databases and vsan

01:09:50,159 --> 01:09:53,600
files as well

01:09:51,520 --> 01:09:55,199
but that sequential file access means

01:09:53,600 --> 01:09:58,400
that geneva doesn't manage

01:09:55,199 --> 01:10:00,960
do anything with the data storage per se

01:09:58,400 --> 01:10:02,239
it's simply like spark a processing

01:10:00,960 --> 01:10:04,239
engine

01:10:02,239 --> 01:10:05,760
unlike spark geneva ers doesn't have

01:10:04,239 --> 01:10:07,840
machine learning and

01:10:05,760 --> 01:10:09,280
and uh some of the sophisticated

01:10:07,840 --> 01:10:11,280
statistical engine

01:10:09,280 --> 01:10:12,320
processes that you would find within

01:10:11,280 --> 01:10:13,679
spark

01:10:12,320 --> 01:10:16,159
so it's a little bit more simple that

01:10:13,679 --> 01:10:19,679
way but it is a reporting formatting

01:10:16,159 --> 01:10:21,600
selection processing sorting engine that

01:10:19,679 --> 01:10:24,320
allows you to access your data very

01:10:21,600 --> 01:10:27,679
efficiently create applications

01:10:24,320 --> 01:10:29,760
through api points multiple api points

01:10:27,679 --> 01:10:32,400
and aggregation processes on the

01:10:29,760 --> 01:10:35,280
outbound side of geneva ers

01:10:32,400 --> 01:10:36,159
the basis of geneva rs of being open

01:10:35,280 --> 01:10:38,719
source

01:10:36,159 --> 01:10:41,360
is we want to increase its use and

01:10:38,719 --> 01:10:43,760
connect it to other open source packages

01:10:41,360 --> 01:10:45,520
recent thinking about geneva rs is that

01:10:43,760 --> 01:10:48,800
we should think about

01:10:45,520 --> 01:10:49,280
using it as a more efficient z os map

01:10:48,800 --> 01:10:52,080
engine

01:10:49,280 --> 01:10:52,800
in a map reduce sort of construct where

01:10:52,080 --> 01:10:55,760
you use

01:10:52,800 --> 01:10:57,679
apache spark for the reduce engine to

01:10:55,760 --> 01:10:58,239
get all of the capabilities and the

01:10:57,679 --> 01:11:01,520
engine

01:10:58,239 --> 01:11:04,400
the the power out of the reduced phase

01:11:01,520 --> 01:11:05,360
of spark and all of its machine learning

01:11:04,400 --> 01:11:07,679
ai

01:11:05,360 --> 01:11:08,560
other sorts of capabilities but in the

01:11:07,679 --> 01:11:10,960
map phase

01:11:08,560 --> 01:11:12,719
geneva ers can do many things in a

01:11:10,960 --> 01:11:14,080
single pass through the database and

01:11:12,719 --> 01:11:16,800
mapping the data

01:11:14,080 --> 01:11:17,920
as opposed to simply distributing the

01:11:16,800 --> 01:11:20,640
data to the

01:11:17,920 --> 01:11:20,960
across the multiple nodes as is done in

01:11:20,640 --> 01:11:24,159
most

01:11:20,960 --> 01:11:27,280
map processes gvrs has

01:11:24,159 --> 01:11:30,719
a very efficient join algorithms as well

01:11:27,280 --> 01:11:33,280
the joint processing allows it to

01:11:30,719 --> 01:11:33,840
make sense of your data so that when you

01:11:33,280 --> 01:11:35,760
need to

01:11:33,840 --> 01:11:38,080
take codes and turn them into

01:11:35,760 --> 01:11:39,679
understandable values for reporting and

01:11:38,080 --> 01:11:43,120
analytical purposes

01:11:39,679 --> 01:11:46,320
you need to join to create other other

01:11:43,120 --> 01:11:47,120
views of your data geneva ers's join

01:11:46,320 --> 01:11:49,840
processes

01:11:47,120 --> 01:11:50,960
are all really unparalleled in the way

01:11:49,840 --> 01:11:54,000
they go after

01:11:50,960 --> 01:11:57,199
and do this we have processes where in

01:11:54,000 --> 01:11:58,080
a matter of minutes we do millions of

01:11:57,199 --> 01:12:01,280
joins

01:11:58,080 --> 01:12:04,480
in geneva ers our code base is

01:12:01,280 --> 01:12:07,199
uh has a user interface that is

01:12:04,480 --> 01:12:08,000
where people today enter process

01:12:07,199 --> 01:12:10,239
definitions

01:12:08,000 --> 01:12:12,320
it's a structured environment you begin

01:12:10,239 --> 01:12:12,719
by selecting the transactional or the

01:12:12,320 --> 01:12:15,679
base

01:12:12,719 --> 01:12:17,840
table upon which you want to report you

01:12:15,679 --> 01:12:20,640
select which field you want to sort

01:12:17,840 --> 01:12:22,640
your output by you put in general

01:12:20,640 --> 01:12:23,440
selection criteria to decide what the

01:12:22,640 --> 01:12:26,239
rough cut

01:12:23,440 --> 01:12:26,560
filtering will be for the process then

01:12:26,239 --> 01:12:28,880
you

01:12:26,560 --> 01:12:29,760
select the column outputs that you want

01:12:28,880 --> 01:12:32,400
to to

01:12:29,760 --> 01:12:34,080
output on your your process in those

01:12:32,400 --> 01:12:35,679
columns you can put in selection

01:12:34,080 --> 01:12:37,760
criteria to put in

01:12:35,679 --> 01:12:39,920
and decide what should be happening

01:12:37,760 --> 01:12:42,880
relative to the rough cut filtering

01:12:39,920 --> 01:12:43,199
at the specific column level that fault

01:12:42,880 --> 01:12:44,960
the

01:12:43,199 --> 01:12:47,600
column filtering output can include

01:12:44,960 --> 01:12:50,320
calculations arithmetic calculations

01:12:47,600 --> 01:12:50,960
can put in constants can do joins to

01:12:50,320 --> 01:12:54,400
other

01:12:50,960 --> 01:12:56,880
things and so that's the basic process

01:12:54,400 --> 01:12:58,800
when you run genevrs our process is

01:12:56,880 --> 01:13:00,719
called the performance engine

01:12:58,800 --> 01:13:01,840
the performance engine gets the greatest

01:13:00,719 --> 01:13:05,199
scale

01:13:01,840 --> 01:13:07,520
if it wants to process it can resolve

01:13:05,199 --> 01:13:08,640
lots of different queries in one time

01:13:07,520 --> 01:13:10,719
through the database

01:13:08,640 --> 01:13:13,440
so that scale process means that we

01:13:10,719 --> 01:13:15,360
actually like to execute periodically

01:13:13,440 --> 01:13:17,520
it doesn't mean that it has to execute

01:13:15,360 --> 01:13:20,159
periodically you could set it up and

01:13:17,520 --> 01:13:22,159
make it an end user query tool where you

01:13:20,159 --> 01:13:24,719
let the end users

01:13:22,159 --> 01:13:25,600
run it as often as they want to that's

01:13:24,719 --> 01:13:28,640
less efficient

01:13:25,600 --> 01:13:30,719
than if you run it periodically and

01:13:28,640 --> 01:13:32,400
produce all the outputs from a batched

01:13:30,719 --> 01:13:34,880
up set of queries

01:13:32,400 --> 01:13:35,679
in one pass through the database often

01:13:34,880 --> 01:13:38,000
our process

01:13:35,679 --> 01:13:39,679
is built in re-engineering batch

01:13:38,000 --> 01:13:40,640
processes that happen in the middle of

01:13:39,679 --> 01:13:42,800
the night

01:13:40,640 --> 01:13:44,159
batch processes typically are about

01:13:42,800 --> 01:13:46,800
creating balance

01:13:44,159 --> 01:13:49,120
it's about posting processes that

01:13:46,800 --> 01:13:50,719
posting process of turning transactions

01:13:49,120 --> 01:13:54,719
into balances

01:13:50,719 --> 01:13:56,880
is fundamentally a an analytical process

01:13:54,719 --> 01:13:58,719
because a balance is the beginning of

01:13:56,880 --> 01:14:00,640
any analytical process

01:13:58,719 --> 01:14:02,560
we always go and look at the balance to

01:14:00,640 --> 01:14:03,840
see where we're at today and a balance

01:14:02,560 --> 01:14:04,719
is an accumulation of all the

01:14:03,840 --> 01:14:07,280
transactions

01:14:04,719 --> 01:14:09,120
that made that balance possible so

01:14:07,280 --> 01:14:11,040
geneva ers is ability to

01:14:09,120 --> 01:14:15,840
do posting process of turning

01:14:11,040 --> 01:14:15,840
transactions into balancing

01:14:16,400 --> 01:14:20,159
consistently doing it at a very high

01:14:19,199 --> 01:14:21,840
scale

01:14:20,159 --> 01:14:24,400
means that companies are able to

01:14:21,840 --> 01:14:27,440
re-engineer their nightly flows

01:14:24,400 --> 01:14:29,360
so that instead of large highly

01:14:27,440 --> 01:14:31,520
aggregated values at the end of the

01:14:29,360 --> 01:14:32,560
night and the typical general ledger

01:14:31,520 --> 01:14:35,360
process

01:14:32,560 --> 01:14:36,159
to produce the enterprise view companies

01:14:35,360 --> 01:14:39,199
are able to

01:14:36,159 --> 01:14:41,360
scan detailed transactions and produce

01:14:39,199 --> 01:14:44,560
many more varied outputs

01:14:41,360 --> 01:14:47,440
against much more granular data for

01:14:44,560 --> 01:14:48,560
much more interesting enterprise views

01:14:47,440 --> 01:14:51,440
and within the same

01:14:48,560 --> 01:14:52,000
hardware environment that they're using

01:14:51,440 --> 01:14:54,159
today

01:14:52,000 --> 01:14:55,360
because often when it comes to the

01:14:54,159 --> 01:14:59,520
mainframe

01:14:55,360 --> 01:15:02,320
the lowest point of utilization for z os

01:14:59,520 --> 01:15:03,280
is those early morning hours just before

01:15:02,320 --> 01:15:06,400
the opening of the day

01:15:03,280 --> 01:15:09,199
we aggregate data there to run the gl

01:15:06,400 --> 01:15:10,800
processes and so when geneva ers uses

01:15:09,199 --> 01:15:13,120
those unused mips

01:15:10,800 --> 01:15:14,719
of that early morning you're basically

01:15:13,120 --> 01:15:17,280
using free hardware

01:15:14,719 --> 01:15:18,000
genevieve is using it very effectively

01:15:17,280 --> 01:15:20,800
to produce

01:15:18,000 --> 01:15:21,679
analytical outputs our geneva ers

01:15:20,800 --> 01:15:24,000
project is

01:15:21,679 --> 01:15:27,199
open to people who want to be involved

01:15:24,000 --> 01:15:30,239
in in the exciting realm of analytics

01:15:27,199 --> 01:15:32,480
and and renewing the mainframe the

01:15:30,239 --> 01:15:34,400
engine for geneva ers is a parallel

01:15:32,480 --> 01:15:38,159
processing engine

01:15:34,400 --> 01:15:40,480
that we generate machine code on the fly

01:15:38,159 --> 01:15:41,440
and then execute that machine code in

01:15:40,480 --> 01:15:45,280
parallel

01:15:41,440 --> 01:15:47,520
the scale of genevieve rs is

01:15:45,280 --> 01:15:49,679
i don't know of any other tool that does

01:15:47,520 --> 01:15:51,040
the things that it does within the speed

01:15:49,679 --> 01:15:53,199
that it does it

01:15:51,040 --> 01:15:54,719
so we're interested in having people

01:15:53,199 --> 01:15:56,960
that want to

01:15:54,719 --> 01:15:58,960
help us transform the user interface

01:15:56,960 --> 01:16:01,440
we'd like to develop a new

01:15:58,960 --> 01:16:03,040
programming language to open up the the

01:16:01,440 --> 01:16:05,920
power of geneva ers

01:16:03,040 --> 01:16:06,480
perhaps using groovy as a language

01:16:05,920 --> 01:16:09,280
domain

01:16:06,480 --> 01:16:11,120
specific values in groovy to to open up

01:16:09,280 --> 01:16:13,440
geneva ers is to

01:16:11,120 --> 01:16:14,400
to more capabilities and to integrate

01:16:13,440 --> 01:16:16,480
with spark

01:16:14,400 --> 01:16:18,159
we're looking for all types of people to

01:16:16,480 --> 01:16:19,840
join the project and we'd love to have

01:16:18,159 --> 01:16:22,080
you be a part of it

01:16:19,840 --> 01:16:24,320
anyone that's interested in taking a

01:16:22,080 --> 01:16:26,159
proof of concept on geneva ers

01:16:24,320 --> 01:16:27,920
we'd love to help you understand more

01:16:26,159 --> 01:16:30,920
what the power is

01:16:27,920 --> 01:16:32,640
and how you could use it you can go to

01:16:30,920 --> 01:16:35,520
genevaers.org

01:16:32,640 --> 01:16:37,440
for more information about this we have

01:16:35,520 --> 01:16:40,480
a youtube channel as well

01:16:37,440 --> 01:16:42,560
geneva tv that you can link to from

01:16:40,480 --> 01:16:45,440
geneva ers.org

01:16:42,560 --> 01:16:47,440
we've got training videos uh github has

01:16:45,440 --> 01:16:49,360
our repositories

01:16:47,440 --> 01:16:52,239
we'd love to have you be part of our

01:16:49,360 --> 01:16:55,280
process and part of the geneva ers

01:16:52,239 --> 01:16:58,320
story as we continue to transform

01:16:55,280 --> 01:17:00,560
legacy systems improve analytics

01:16:58,320 --> 01:17:02,159
improve our financial systems from those

01:17:00,560 --> 01:17:04,800
that basically were

01:17:02,159 --> 01:17:06,400
automated decades ago it's time for us

01:17:04,800 --> 01:17:09,440
to increase the power

01:17:06,400 --> 01:17:10,640
and and that we get out of the data that

01:17:09,440 --> 01:17:12,880
we capture

01:17:10,640 --> 01:17:14,480
we're glad to be part of the open

01:17:12,880 --> 01:17:16,480
mainframe project

01:17:14,480 --> 01:17:18,400
glad to be part of this mini summit here

01:17:16,480 --> 01:17:19,360
for europe hope that you're enjoying

01:17:18,400 --> 01:17:23,360
your time

01:17:19,360 --> 01:17:23,360
have a great day thanks for your time

01:17:25,020 --> 01:17:29,920
[Music]

01:17:27,600 --> 01:17:31,600
awesome thank you so much kip for that a

01:17:29,920 --> 01:17:33,280
great project coming together there and

01:17:31,600 --> 01:17:36,080
some interesting collaboration

01:17:33,280 --> 01:17:37,920
um across a lot of different folks um

01:17:36,080 --> 01:17:39,440
next i want to turn over to the software

01:17:37,920 --> 01:17:40,719
discovery tool which is another new

01:17:39,440 --> 01:17:42,080
project came in here and we have

01:17:40,719 --> 01:17:43,760
elizabeth joseph

01:17:42,080 --> 01:17:46,480
who's the project lead to talk a little

01:17:43,760 --> 01:17:48,880
bit more about that

01:17:46,480 --> 01:17:50,880
thanks john and kip that was great you

01:17:48,880 --> 01:17:52,800
were outside

01:17:50,880 --> 01:17:54,320
i'm bringing you back inside um and i've

01:17:52,800 --> 01:17:56,800
got a deck here

01:17:54,320 --> 01:17:59,840
um so let me share my screen and bring

01:17:56,800 --> 01:17:59,840
that up

01:18:01,600 --> 01:18:04,159
there we go

01:18:07,120 --> 01:18:11,679
all right so as we said we're here to

01:18:10,320 --> 01:18:12,080
talk about the software discovery tool

01:18:11,679 --> 01:18:14,239
another

01:18:12,080 --> 01:18:15,280
new project from the open mainframe

01:18:14,239 --> 01:18:17,120
project

01:18:15,280 --> 01:18:18,719
uh so one of the things that i

01:18:17,120 --> 01:18:21,440
discovered when i started working

01:18:18,719 --> 01:18:22,880
in the mainframe space i come from i've

01:18:21,440 --> 01:18:24,960
been doing open source software for

01:18:22,880 --> 01:18:26,480
about 15 years

01:18:24,960 --> 01:18:28,159
i've been working on linux that whole

01:18:26,480 --> 01:18:29,520
time and one of the things i found was

01:18:28,159 --> 01:18:31,600
that the landscape was

01:18:29,520 --> 01:18:33,040
a little bit confusing um the open

01:18:31,600 --> 01:18:35,280
mainframe project has helped that

01:18:33,040 --> 01:18:36,719
considerably because there's now

01:18:35,280 --> 01:18:38,800
all kinds of pages that link to open

01:18:36,719 --> 01:18:41,040
source software and other things

01:18:38,800 --> 01:18:42,560
but one of the gaps that i saw was that

01:18:41,040 --> 01:18:45,280
it was hard to search for

01:18:42,560 --> 01:18:47,040
exactly what you were looking for so

01:18:45,280 --> 01:18:50,960
that's what the software discovery tool

01:18:47,040 --> 01:18:54,480
aims to solve so it's essentially

01:18:50,960 --> 01:18:57,199
a webs like a website um that you're

01:18:54,480 --> 01:18:59,199
you can search um for software on um

01:18:57,199 --> 01:19:01,280
it's got a json back end at the moment

01:18:59,199 --> 01:19:04,560
where you can add your software sources

01:19:01,280 --> 01:19:07,120
uh so right now we have um suse

01:19:04,560 --> 01:19:07,760
uh red hat and ubuntu as the backs that

01:19:07,120 --> 01:19:10,320
the

01:19:07,760 --> 01:19:11,679
the back end sources so you can search

01:19:10,320 --> 01:19:14,719
just for those right now

01:19:11,679 --> 01:19:16,560
um and then the you know the goal is

01:19:14,719 --> 01:19:17,760
that you can easily add your own json

01:19:16,560 --> 01:19:19,520
based sources

01:19:17,760 --> 01:19:20,880
and then we'll be developing some new

01:19:19,520 --> 01:19:24,159
ones in the project

01:19:20,880 --> 01:19:26,960
so it's actually a fairly simple project

01:19:24,159 --> 01:19:28,480
it's written in python and flask um and

01:19:26,960 --> 01:19:30,640
so you can host it yourself

01:19:28,480 --> 01:19:32,159
or we're going to get our own version up

01:19:30,640 --> 01:19:35,280
and running with the open mainframe

01:19:32,159 --> 01:19:38,400
project hopefully in the coming months

01:19:35,280 --> 01:19:40,400
so what it looks like uh so it's forked

01:19:38,400 --> 01:19:43,040
um from a project um that was started at

01:19:40,400 --> 01:19:46,000
ibm the package distro search

01:19:43,040 --> 01:19:47,199
and the goal here was just to search um

01:19:46,000 --> 01:19:49,120
three the three

01:19:47,199 --> 01:19:50,640
linux distributions um that are like

01:19:49,120 --> 01:19:54,000
official on on

01:19:50,640 --> 01:19:57,600
the mainframe and all it had

01:19:54,000 --> 01:19:59,120
was the package name the software name

01:19:57,600 --> 01:20:01,679
and the version that was supported in

01:19:59,120 --> 01:20:02,800
each linux distribution

01:20:01,679 --> 01:20:04,480
one of the things we want to do is

01:20:02,800 --> 01:20:06,000
expand that so it won't just have the

01:20:04,480 --> 01:20:08,320
package name in the version

01:20:06,000 --> 01:20:09,840
we want to add things like descriptions

01:20:08,320 --> 01:20:12,960
of the software

01:20:09,840 --> 01:20:14,800
where applicable and who's

01:20:12,960 --> 01:20:16,400
who's supporting it because we have a

01:20:14,800 --> 01:20:18,560
bunch of organizations involved in

01:20:16,400 --> 01:20:20,960
supporting open source software

01:20:18,560 --> 01:20:22,400
and add in just whatever details anyone

01:20:20,960 --> 01:20:24,239
is interested in adding

01:20:22,400 --> 01:20:26,320
and we want to expand it beyond linux

01:20:24,239 --> 01:20:27,440
because obviously there is a whole lot

01:20:26,320 --> 01:20:29,199
as we just heard

01:20:27,440 --> 01:20:31,120
from talks before me a whole lot of

01:20:29,199 --> 01:20:32,560
software out there for z os and the rest

01:20:31,120 --> 01:20:34,719
of the mainframe world

01:20:32,560 --> 01:20:36,080
so we want to do a package search that

01:20:34,719 --> 01:20:39,920
is not only linux but

01:20:36,080 --> 01:20:42,400
everything else as well so

01:20:39,920 --> 01:20:44,239
uh that's where we are now we're in the

01:20:42,400 --> 01:20:47,840
process of importing the code

01:20:44,239 --> 01:20:50,560
from from the pds um

01:20:47,840 --> 01:20:51,840
project um we just upgraded to python 3

01:20:50,560 --> 01:20:54,639
which is really exciting

01:20:51,840 --> 01:20:56,080
but it was one of our blockers so one of

01:20:54,639 --> 01:20:58,480
the things we want to do just like

01:20:56,080 --> 01:20:59,760
right away is we want to add zos support

01:20:58,480 --> 01:21:02,320
in the search ui

01:20:59,760 --> 01:21:04,480
we want to improve the ui design because

01:21:02,320 --> 01:21:06,320
it is very simple at the moment

01:21:04,480 --> 01:21:09,199
and then a lot of our work is going to

01:21:06,320 --> 01:21:12,719
be putting together these json back end

01:21:09,199 --> 01:21:14,320
um lists of software and the metadata to

01:21:12,719 --> 01:21:17,520
go along with it

01:21:14,320 --> 01:21:18,800
one of the other things we want to do is

01:21:17,520 --> 01:21:20,639
just get more people

01:21:18,800 --> 01:21:22,000
involved in creating this metadata

01:21:20,639 --> 01:21:23,840
whether it's you know you don't have to

01:21:22,000 --> 01:21:25,520
write a json file but if you say hey my

01:21:23,840 --> 01:21:27,120
open source project is not is not

01:21:25,520 --> 01:21:29,280
included in this

01:21:27,120 --> 01:21:30,719
we want more people to come forward and

01:21:29,280 --> 01:21:32,000
make sure that we're offering a

01:21:30,719 --> 01:21:33,520
comprehensive view

01:21:32,000 --> 01:21:35,360
because the last thing we want is that

01:21:33,520 --> 01:21:36,719
this to become another place

01:21:35,360 --> 01:21:38,880
where you search for your open source

01:21:36,719 --> 01:21:42,960
software we want this to be like

01:21:38,880 --> 01:21:46,239
the comprehensive spot where you go

01:21:42,960 --> 01:21:47,679
so again it's it's pretty simple but

01:21:46,239 --> 01:21:49,199
we definitely saw a need here in the

01:21:47,679 --> 01:21:50,800
community for this so if you're

01:21:49,199 --> 01:21:52,719
interested in this project

01:21:50,800 --> 01:21:54,840
we have several ways you can join us we

01:21:52,719 --> 01:21:56,960
just uh it's a project now on the open

01:21:54,840 --> 01:21:58,880
mainframe project website

01:21:56,960 --> 01:22:00,239
so you can check out what we're about

01:21:58,880 --> 01:22:03,280
join our mailing list

01:22:00,239 --> 01:22:05,120
uh join us on slack and then the code

01:22:03,280 --> 01:22:06,800
will soon be up on github

01:22:05,120 --> 01:22:08,239
once we're finished scanning it and

01:22:06,800 --> 01:22:09,760
importing it

01:22:08,239 --> 01:22:11,760
and then we can really get to the the

01:22:09,760 --> 01:22:13,440
fun work of of adding these new sources

01:22:11,760 --> 01:22:15,040
and adding the os support and all of

01:22:13,440 --> 01:22:18,239
that

01:22:15,040 --> 01:22:18,239
and that was all i had

01:22:18,480 --> 01:22:23,360
awesome thank you elizabeth this project

01:22:20,800 --> 01:22:24,080
is uh making some great progress they

01:22:23,360 --> 01:22:27,520
say

01:22:24,080 --> 01:22:28,080
oops i have echo on somebody making good

01:22:27,520 --> 01:22:30,400
progress

01:22:28,080 --> 01:22:32,719
we i saw they just landed um some of the

01:22:30,400 --> 01:22:34,400
python 3 support this past week as well

01:22:32,719 --> 01:22:36,080
so it's really exciting to

01:22:34,400 --> 01:22:37,679
to see some early progress happening

01:22:36,080 --> 01:22:39,679
there um

01:22:37,679 --> 01:22:41,360
so let's uh move ahead and again as you

01:22:39,679 --> 01:22:44,480
have questions please use the q

01:22:41,360 --> 01:22:47,199
a um to address any of those

01:22:44,480 --> 01:22:48,239
um we have up next our mainframe open

01:22:47,199 --> 01:22:51,360
education

01:22:48,239 --> 01:22:53,120
project and uh this is a number of

01:22:51,360 --> 01:22:54,880
individuals from

01:22:53,120 --> 01:22:56,159
broadcom ibm and different organizations

01:22:54,880 --> 01:22:59,280
sort of came together

01:22:56,159 --> 01:23:01,360
um and we have lauren uh valenti

01:22:59,280 --> 01:23:03,600
who is a member of that project and uh

01:23:01,360 --> 01:23:04,840
we'll be presenting on it

01:23:03,600 --> 01:23:06,880
that's correct and i have the

01:23:04,840 --> 01:23:08,880
pre-recorded as well

01:23:06,880 --> 01:23:10,719
so if anybody has any questions you can

01:23:08,880 --> 01:23:12,080
ask during the session and i'm more than

01:23:10,719 --> 01:23:20,239
happy to answer

01:23:12,080 --> 01:23:22,159
during the session as well

01:23:20,239 --> 01:23:24,080
my name is lauren valente head of

01:23:22,159 --> 01:23:26,000
education and customer engagement within

01:23:24,080 --> 01:23:29,760
the mainframe software division

01:23:26,000 --> 01:23:34,000
at broadcom today i'll talk to you about

01:23:29,760 --> 01:23:37,040
the mainframe open education project

01:23:34,000 --> 01:23:39,199
for decades the technology industry has

01:23:37,040 --> 01:23:41,360
had a need to replenish the aging

01:23:39,199 --> 01:23:43,199
workforce with talented and skilled

01:23:41,360 --> 01:23:46,000
professionals

01:23:43,199 --> 01:23:48,320
as a manager for example who has new

01:23:46,000 --> 01:23:50,880
hires to train and get up skilled

01:23:48,320 --> 01:23:52,800
think about it where do they get their

01:23:50,880 --> 01:23:55,280
training

01:23:52,800 --> 01:23:57,280
yes some have come up with their own and

01:23:55,280 --> 01:23:59,040
have built their own internal new hire

01:23:57,280 --> 01:24:01,199
programs

01:23:59,040 --> 01:24:02,159
but maybe there might be areas that they

01:24:01,199 --> 01:24:04,639
might be missing

01:24:02,159 --> 01:24:05,360
that are needed maybe there are learning

01:24:04,639 --> 01:24:08,719
paths

01:24:05,360 --> 01:24:10,719
maybe some of them are not fully baked

01:24:08,719 --> 01:24:12,000
and then there are some that leverage

01:24:10,719 --> 01:24:15,520
partners like ourselves

01:24:12,000 --> 01:24:18,400
broadcom and ibm to leverage our

01:24:15,520 --> 01:24:20,400
education materials and then some go to

01:24:18,400 --> 01:24:22,560
other sources

01:24:20,400 --> 01:24:24,719
there is not a collection of educational

01:24:22,560 --> 01:24:27,280
materials out there today

01:24:24,719 --> 01:24:29,600
that includes the unique expertise of

01:24:27,280 --> 01:24:32,639
the mainframe community

01:24:29,600 --> 01:24:35,920
there's also a lack of a community

01:24:32,639 --> 01:24:37,199
support platform where these experts can

01:24:35,920 --> 01:24:39,199
share their knowledge

01:24:37,199 --> 01:24:41,280
and their own education materials about

01:24:39,199 --> 01:24:44,239
the mainframe

01:24:41,280 --> 01:24:45,440
now what if there was one place for

01:24:44,239 --> 01:24:48,239
these managers

01:24:45,440 --> 01:24:49,840
in the enterprise that they can go to

01:24:48,239 --> 01:24:51,679
and get what they need to train their

01:24:49,840 --> 01:24:54,719
new hires

01:24:51,679 --> 01:24:56,480
what if universities can leverage some a

01:24:54,719 --> 01:24:59,520
place where they can send their students

01:24:56,480 --> 01:25:01,760
to learn more about the mainframe

01:24:59,520 --> 01:25:04,000
the open mainframe project has helped

01:25:01,760 --> 01:25:05,120
fill the skills gaps with its mentorship

01:25:04,000 --> 01:25:06,960
program

01:25:05,120 --> 01:25:08,639
the kobold project that was recently

01:25:06,960 --> 01:25:10,880
launched and will now

01:25:08,639 --> 01:25:13,040
take it one step further with the new

01:25:10,880 --> 01:25:15,280
education project

01:25:13,040 --> 01:25:16,159
the mainframe open education project

01:25:15,280 --> 01:25:19,360
will offer

01:25:16,159 --> 01:25:21,120
a convenient easy to use platform

01:25:19,360 --> 01:25:23,440
through which experts can share their

01:25:21,120 --> 01:25:26,239
up-to-date education materials

01:25:23,440 --> 01:25:27,280
and it will also foster collaboration

01:25:26,239 --> 01:25:32,159
with the broader

01:25:27,280 --> 01:25:35,120
mainframe community and the result

01:25:32,159 --> 01:25:37,040
let's talk about the results it will

01:25:35,120 --> 01:25:40,000
provide a clear learning path for those

01:25:37,040 --> 01:25:43,199
to have a rewarding career

01:25:40,000 --> 01:25:45,679
it will close in the technology gaps

01:25:43,199 --> 01:25:47,679
by offering the comprehensive materials

01:25:45,679 --> 01:25:49,840
at no cost

01:25:47,679 --> 01:25:52,000
it will also open opportunities for the

01:25:49,840 --> 01:25:53,600
community support and engagement

01:25:52,000 --> 01:25:56,080
we're now experts and seasoned

01:25:53,600 --> 01:25:59,360
professionals can share their knowledge

01:25:56,080 --> 01:26:02,320
and even their best practices

01:25:59,360 --> 01:26:04,400
so where are we with this project the

01:26:02,320 --> 01:26:07,040
project has recently started

01:26:04,400 --> 01:26:10,080
where we now have a core team that not

01:26:07,040 --> 01:26:12,719
only represents broadcom and ibm

01:26:10,080 --> 01:26:13,760
but we now have representation from the

01:26:12,719 --> 01:26:16,960
industry

01:26:13,760 --> 01:26:18,960
as well as the academia area since we

01:26:16,960 --> 01:26:20,880
can't boil the ocean with the mainframe

01:26:18,960 --> 01:26:22,800
because the mainframe is there's so much

01:26:20,880 --> 01:26:24,719
to learn and there's so much information

01:26:22,800 --> 01:26:27,120
about it out there today

01:26:24,719 --> 01:26:28,159
we need to start somewhere and thought

01:26:27,120 --> 01:26:32,320
it was best to

01:26:28,159 --> 01:26:35,040
do a phased approach and as you can see

01:26:32,320 --> 01:26:36,960
we will begin building out our material

01:26:35,040 --> 01:26:40,000
for phase one

01:26:36,960 --> 01:26:43,920
what is a mainframe what

01:26:40,000 --> 01:26:46,400
value does it bring who uses it

01:26:43,920 --> 01:26:48,800
so we want to be able to explain what

01:26:46,400 --> 01:26:51,840
specifically it is first

01:26:48,800 --> 01:26:53,360
educate our folks as to even students

01:26:51,840 --> 01:26:56,080
again people who are changing from

01:26:53,360 --> 01:26:58,000
another career we want them to know

01:26:56,080 --> 01:27:02,000
the value that it brings and how

01:26:58,000 --> 01:27:02,000
critical it is to the enterprises today

01:27:02,719 --> 01:27:06,080
then what we will look to do we will

01:27:04,880 --> 01:27:08,719
build a framework

01:27:06,080 --> 01:27:10,719
the core team will put out a framework

01:27:08,719 --> 01:27:13,679
and determine what materials

01:27:10,719 --> 01:27:15,440
should and could be added and we'll

01:27:13,679 --> 01:27:18,080
build this out for the same approach for

01:27:15,440 --> 01:27:21,360
each of these phases

01:27:18,080 --> 01:27:22,320
now i'll be honest we can't do this on

01:27:21,360 --> 01:27:24,400
our own

01:27:22,320 --> 01:27:26,000
we need the community's help we need

01:27:24,400 --> 01:27:28,400
your help

01:27:26,000 --> 01:27:30,480
there's a wealth of passionate people

01:27:28,400 --> 01:27:32,639
out there i know for a fact there's

01:27:30,480 --> 01:27:34,400
subject matter experts that would want

01:27:32,639 --> 01:27:36,880
to contribute to something like this

01:27:34,400 --> 01:27:39,199
especially to a platform like this and

01:27:36,880 --> 01:27:41,520
have their materials

01:27:39,199 --> 01:27:44,159
help other people understand the

01:27:41,520 --> 01:27:45,600
criticality of the mainframe

01:27:44,159 --> 01:27:47,840
so for those who are interested in

01:27:45,600 --> 01:27:49,040
learning about the project and that want

01:27:47,840 --> 01:27:52,159
to contribute

01:27:49,040 --> 01:27:53,199
we host a monthly project meeting that

01:27:52,159 --> 01:27:55,199
you can attend

01:27:53,199 --> 01:27:57,520
and you can learn about the progress you

01:27:55,199 --> 01:27:59,760
can also contribute and learn how you

01:27:57,520 --> 01:28:02,000
can contribute i should say

01:27:59,760 --> 01:28:03,199
but help us make the learning experience

01:28:02,000 --> 01:28:07,679
with the mainframe

01:28:03,199 --> 01:28:10,080
easy intuitive and available to all

01:28:07,679 --> 01:28:10,080
thank you

01:28:13,440 --> 01:28:17,760
so thank you for that any if there's any

01:28:15,520 --> 01:28:18,239
questions more than welcome to put it in

01:28:17,760 --> 01:28:20,480
chat

01:28:18,239 --> 01:28:21,360
and i'd be more than happy or even on

01:28:20,480 --> 01:28:23,760
the line here

01:28:21,360 --> 01:28:23,760
as well

01:28:24,400 --> 01:28:28,000
awesome thank you thank you so much

01:28:27,040 --> 01:28:30,719
awesome thank you so much

01:28:28,000 --> 01:28:32,639
lord great great presentation you know

01:28:30,719 --> 01:28:33,840
it's great to see

01:28:32,639 --> 01:28:35,120
you know somebody you know all these

01:28:33,840 --> 01:28:36,719
companies a lot of folks in the

01:28:35,120 --> 01:28:37,840
mainframe space have been all working on

01:28:36,719 --> 01:28:39,440
education sort of

01:28:37,840 --> 01:28:40,800
in their own silos and it's great to see

01:28:39,440 --> 01:28:42,239
this coming together as a community

01:28:40,800 --> 01:28:44,239
effort i think this is this can add a

01:28:42,239 --> 01:28:47,360
lot of value for everybody

01:28:44,239 --> 01:28:50,480
exactly thank you awesome

01:28:47,360 --> 01:28:51,920
so we uh moving forward here um you know

01:28:50,480 --> 01:28:54,800
one of the big focuses

01:28:51,920 --> 01:28:56,480
that we have not only from the open

01:28:54,800 --> 01:28:57,840
mainframe project but if even if we look

01:28:56,480 --> 01:29:00,080
at the linux foundation

01:28:57,840 --> 01:29:01,840
um you saw earlier this week we made an

01:29:00,080 --> 01:29:03,920
announcement of the software developer

01:29:01,840 --> 01:29:06,480
diversity inclusion

01:29:03,920 --> 01:29:07,280
project um you know we are huge

01:29:06,480 --> 01:29:10,560
proponents

01:29:07,280 --> 01:29:12,480
of diversity in our communities

01:29:10,560 --> 01:29:15,440
uh we see when you have a diverse

01:29:12,480 --> 01:29:17,520
community you have better outcomes

01:29:15,440 --> 01:29:18,719
you get more opinions you get more views

01:29:17,520 --> 01:29:20,960
to the table

01:29:18,719 --> 01:29:22,480
and and the the downstream value happens

01:29:20,960 --> 01:29:24,800
more and i think

01:29:22,480 --> 01:29:26,320
really and where our society is um at

01:29:24,800 --> 01:29:28,080
the present time here

01:29:26,320 --> 01:29:29,920
it's more important than ever to be

01:29:28,080 --> 01:29:32,480
focusing on this as a topic

01:29:29,920 --> 01:29:33,520
um so we're thrilled that uh we have a

01:29:32,480 --> 01:29:35,920
great panel here

01:29:33,520 --> 01:29:39,840
and it's hosted um by rick parrott and

01:29:35,920 --> 01:29:39,840
uh let's turn it over to him

01:29:45,520 --> 01:29:49,600
hello and welcome to today's panel

01:29:47,440 --> 01:29:51,840
diversity and diversity

01:29:49,600 --> 01:29:53,280
what does it mean to be a woman in tech

01:29:51,840 --> 01:29:54,960
my name is rick perret

01:29:53,280 --> 01:29:56,239
i'm on the open mainframe project

01:29:54,960 --> 01:29:58,080
marketing committee and i'm head of

01:29:56,239 --> 01:29:59,920
content and analyst relations for

01:29:58,080 --> 01:30:01,840
broadcom's mainframe software division

01:29:59,920 --> 01:30:02,880
and i'm pleased to be monitoring today's

01:30:01,840 --> 01:30:05,120
panel

01:30:02,880 --> 01:30:06,000
you know the whole open source concept

01:30:05,120 --> 01:30:08,400
as you know is about

01:30:06,000 --> 01:30:09,360
transparency and inclusion the more

01:30:08,400 --> 01:30:12,080
contributors

01:30:09,360 --> 01:30:14,400
the more committers the more insights

01:30:12,080 --> 01:30:17,360
and it's that diversity of insights

01:30:14,400 --> 01:30:18,480
which lead to better design choices and

01:30:17,360 --> 01:30:20,719
better code

01:30:18,480 --> 01:30:22,639
and and that's why you're here because

01:30:20,719 --> 01:30:23,600
you believe that open source results in

01:30:22,639 --> 01:30:26,159
better releases

01:30:23,600 --> 01:30:27,199
and more innovations and that's why the

01:30:26,159 --> 01:30:29,840
open source

01:30:27,199 --> 01:30:30,880
community and ecosystem has established

01:30:29,840 --> 01:30:34,159
itself so well

01:30:30,880 --> 01:30:36,560
in such very little time frame

01:30:34,159 --> 01:30:37,840
now like any ecosystem it's important

01:30:36,560 --> 01:30:40,639
that we adapt

01:30:37,840 --> 01:30:41,520
and the best way to adapt any ecosystem

01:30:40,639 --> 01:30:44,560
is through

01:30:41,520 --> 01:30:46,159
vibrancy and having a vibrant ecosystem

01:30:44,560 --> 01:30:48,719
and the only way to maintain that is

01:30:46,159 --> 01:30:50,159
through diversity

01:30:48,719 --> 01:30:51,600
you know our open communities are

01:30:50,159 --> 01:30:52,480
working on some of the world's most

01:30:51,600 --> 01:30:55,440
difficult

01:30:52,480 --> 01:30:57,199
important software and it's very

01:30:55,440 --> 01:30:59,199
important to include the voices of a

01:30:57,199 --> 01:31:01,760
diverse range of people

01:30:59,199 --> 01:31:02,960
so today we're going to hear from three

01:31:01,760 --> 01:31:04,239
amazing women

01:31:02,960 --> 01:31:07,199
on how they got their start in

01:31:04,239 --> 01:31:09,600
technology what their current roles are

01:31:07,199 --> 01:31:11,280
and how they build build diverse teams

01:31:09,600 --> 01:31:13,280
over time

01:31:11,280 --> 01:31:14,800
and through their voices you know we'll

01:31:13,280 --> 01:31:15,520
learn that there really isn't one

01:31:14,800 --> 01:31:18,400
journey

01:31:15,520 --> 01:31:19,040
into the tech domain and as you progress

01:31:18,400 --> 01:31:21,520
through your

01:31:19,040 --> 01:31:22,880
technology career there are many ways to

01:31:21,520 --> 01:31:24,960
build and maintain these vibrant

01:31:22,880 --> 01:31:28,719
communities

01:31:24,960 --> 01:31:29,120
joining us today is silva versacova

01:31:28,719 --> 01:31:30,960
she's

01:31:29,120 --> 01:31:32,800
product owner at broadcom and she's

01:31:30,960 --> 01:31:34,800
responsible for solutions supporting the

01:31:32,800 --> 01:31:37,600
modern developer experience

01:31:34,800 --> 01:31:39,679
for mainframe currently she leads a team

01:31:37,600 --> 01:31:41,760
developing the ca endeavor

01:31:39,679 --> 01:31:43,679
source code management enterprise git

01:31:41,760 --> 01:31:45,520
bridge which enables a whole new

01:31:43,679 --> 01:31:48,159
generation of developers to interact

01:31:45,520 --> 01:31:50,639
with the main thread through get

01:31:48,159 --> 01:31:52,880
previously silva worked in engineering

01:31:50,639 --> 01:31:53,920
as a scrum master for mainframe devops

01:31:52,880 --> 01:31:56,960
teams

01:31:53,920 --> 01:31:58,000
and as a consultant for ca clarity the

01:31:56,960 --> 01:31:59,600
project portfolio

01:31:58,000 --> 01:32:01,679
management product and she joins us

01:31:59,600 --> 01:32:04,400
today from prague

01:32:01,679 --> 01:32:05,600
next rashmi agrawal who's director of

01:32:04,400 --> 01:32:08,239
software engineering

01:32:05,600 --> 01:32:09,920
at rocket software rashmi's been

01:32:08,239 --> 01:32:10,880
managing large software development

01:32:09,920 --> 01:32:13,600
teams for over

01:32:10,880 --> 01:32:14,400
20 years and she's built teams from the

01:32:13,600 --> 01:32:17,440
ground up

01:32:14,400 --> 01:32:19,760
and managed these teams across the globe

01:32:17,440 --> 01:32:21,040
she is absolutely passionate about

01:32:19,760 --> 01:32:22,880
technology

01:32:21,040 --> 01:32:24,880
and focused on bringing teams and

01:32:22,880 --> 01:32:27,120
technologies together

01:32:24,880 --> 01:32:28,719
to help enhance the customer experience

01:32:27,120 --> 01:32:33,120
and she joins us today

01:32:28,719 --> 01:32:36,159
from pune finally jen francis

01:32:33,120 --> 01:32:37,840
developer advocate at ibm she works with

01:32:36,159 --> 01:32:39,040
customers and vendors on leading edge

01:32:37,840 --> 01:32:40,960
technologies

01:32:39,040 --> 01:32:42,239
and teaches developers how they can be

01:32:40,960 --> 01:32:44,960
used she's

01:32:42,239 --> 01:32:45,360
also extremely passionate about tech and

01:32:44,960 --> 01:32:47,199
about

01:32:45,360 --> 01:32:49,199
teaching and mentoring others and giving

01:32:47,199 --> 01:32:51,199
back to the community

01:32:49,199 --> 01:32:54,080
as a member of the american indian

01:32:51,199 --> 01:32:56,000
science and engineering society

01:32:54,080 --> 01:32:57,840
you know she you know she is of cherokee

01:32:56,000 --> 01:32:59,440
heritage and she loves networking with

01:32:57,840 --> 01:33:01,440
others from similar backgrounds

01:32:59,440 --> 01:33:03,600
and volunteers to keep the cherokee

01:33:01,440 --> 01:33:05,760
culture and heritage alive

01:33:03,600 --> 01:33:08,800
and she joins us today from rumsey in

01:33:05,760 --> 01:33:11,440
the uk

01:33:08,800 --> 01:33:12,639
so let's get started with the panel

01:33:11,440 --> 01:33:15,360
silva

01:33:12,639 --> 01:33:16,880
let's start with you um how did you get

01:33:15,360 --> 01:33:18,880
your started

01:33:16,880 --> 01:33:23,199
technology and what led you to be

01:33:18,880 --> 01:33:25,840
interested in open source

01:33:23,199 --> 01:33:27,920
okay so uh thanks rick for the question

01:33:25,840 --> 01:33:31,120
and uh hello everybody

01:33:27,920 --> 01:33:33,280
um my path uh how i

01:33:31,120 --> 01:33:36,239
became what i am today i'm a po in

01:33:33,280 --> 01:33:38,639
broadcom i'm a product owner

01:33:36,239 --> 01:33:40,800
my past was quite unusual i think maybe

01:33:38,639 --> 01:33:42,880
uh it was a funny path

01:33:40,800 --> 01:33:44,560
i did not really study i.t i did not

01:33:42,880 --> 01:33:47,040
study engineering

01:33:44,560 --> 01:33:48,800
i was not really even deeply interested

01:33:47,040 --> 01:33:51,120
in technology when i was younger

01:33:48,800 --> 01:33:52,719
other than maybe just being the first in

01:33:51,120 --> 01:33:54,719
the family who jumped

01:33:52,719 --> 01:33:56,560
but when there was a new tv a new camera

01:33:54,719 --> 01:33:59,120
i studied all the manuals i

01:33:56,560 --> 01:33:59,920
studied the the thing i wanted to know

01:33:59,120 --> 01:34:02,800
how it works

01:33:59,920 --> 01:34:04,080
i helped to fix things but that was that

01:34:02,800 --> 01:34:06,320
was about it

01:34:04,080 --> 01:34:07,600
however on this path which was not

01:34:06,320 --> 01:34:10,400
really maybe usual

01:34:07,600 --> 01:34:12,400
i learned quite some things and it

01:34:10,400 --> 01:34:14,320
finally got me where i am right now

01:34:12,400 --> 01:34:16,320
today and i would like to share that

01:34:14,320 --> 01:34:19,760
path with you so

01:34:16,320 --> 01:34:20,960
uh first uh i studied uh english and

01:34:19,760 --> 01:34:23,920
mathematics and

01:34:20,960 --> 01:34:25,440
people often told me why did you study

01:34:23,920 --> 01:34:27,600
english and mathematics

01:34:25,440 --> 01:34:28,800
like it's so different what led you to

01:34:27,600 --> 01:34:31,679
do that

01:34:28,800 --> 01:34:33,360
and when i thought about it i found out

01:34:31,679 --> 01:34:35,040
that these things are not that different

01:34:33,360 --> 01:34:36,080
in fact they have one thing in common

01:34:35,040 --> 01:34:38,560
and the thing

01:34:36,080 --> 01:34:39,840
that they have in common that's a logic

01:34:38,560 --> 01:34:41,760
structure

01:34:39,840 --> 01:34:44,080
so that's how i learned that my brain

01:34:41,760 --> 01:34:44,800
liked doing things which were logical

01:34:44,080 --> 01:34:47,600
which

01:34:44,800 --> 01:34:48,239
could imagine and they were somehow

01:34:47,600 --> 01:34:50,560
stable

01:34:48,239 --> 01:34:52,480
so mathematics that's that's exactly it

01:34:50,560 --> 01:34:55,679
or grammar right

01:34:52,480 --> 01:34:57,520
and uh so this studies that i did led me

01:34:55,679 --> 01:34:58,320
to teaching english at the beginning and

01:34:57,520 --> 01:35:01,119
i loved that

01:34:58,320 --> 01:35:01,600
a lot however i still felt like i wanted

01:35:01,119 --> 01:35:04,320
to do

01:35:01,600 --> 01:35:06,159
something more i wanted to learn more

01:35:04,320 --> 01:35:07,920
and that's how i started my second

01:35:06,159 --> 01:35:09,040
studies at university and that was

01:35:07,920 --> 01:35:11,760
business

01:35:09,040 --> 01:35:13,520
and that led me to france where i did

01:35:11,760 --> 01:35:16,960
half of the study program

01:35:13,520 --> 01:35:19,600
and it led me to my first internship and

01:35:16,960 --> 01:35:21,440
to get to my first job and this first

01:35:19,600 --> 01:35:23,679
job still was not really technical

01:35:21,440 --> 01:35:26,000
but it was already in an i.t company so

01:35:23,679 --> 01:35:28,000
a little step forward on my journey

01:35:26,000 --> 01:35:29,360
which was not intentional i was never

01:35:28,000 --> 01:35:32,480
really intentionally

01:35:29,360 --> 01:35:33,840
going towards it but this first job in

01:35:32,480 --> 01:35:37,280
it company was my first

01:35:33,840 --> 01:35:40,719
peek into how an mit company works and

01:35:37,280 --> 01:35:43,199
how software gets developed i could see

01:35:40,719 --> 01:35:44,400
what roles there are in an i.t company

01:35:43,199 --> 01:35:46,480
from developers

01:35:44,400 --> 01:35:48,239
operations support all that was quite

01:35:46,480 --> 01:35:51,040
new for me

01:35:48,239 --> 01:35:52,560
and also they were living abroad i

01:35:51,040 --> 01:35:53,280
learned a lot of things on a personal

01:35:52,560 --> 01:35:54,880
level

01:35:53,280 --> 01:35:56,800
and as you know maybe you've lived

01:35:54,880 --> 01:35:59,280
abroad also yourselves

01:35:56,800 --> 01:36:01,360
i usually what happens for you is that

01:35:59,280 --> 01:36:03,440
your colleagues become your friends your

01:36:01,360 --> 01:36:05,440
family during that time

01:36:03,440 --> 01:36:07,440
and those friends of mine they

01:36:05,440 --> 01:36:08,159
encouraged me to look into coding

01:36:07,440 --> 01:36:11,440
because they

01:36:08,159 --> 01:36:14,000
knew me they knew how my brain operated

01:36:11,440 --> 01:36:15,760
and what made me passionate and thanks

01:36:14,000 --> 01:36:18,800
to them i started looking into

01:36:15,760 --> 01:36:22,560
online courses like code academy

01:36:18,800 --> 01:36:25,280
i even participated in a number of

01:36:22,560 --> 01:36:26,800
events like for example rails girls

01:36:25,280 --> 01:36:28,880
which was in paris

01:36:26,800 --> 01:36:31,040
was like a two-day crash course for

01:36:28,880 --> 01:36:33,199
women who were interested in

01:36:31,040 --> 01:36:34,480
coding but they have and they had little

01:36:33,199 --> 01:36:36,960
or no background so

01:36:34,480 --> 01:36:38,159
exactly me so i went there that was

01:36:36,960 --> 01:36:40,800
probably my first

01:36:38,159 --> 01:36:42,560
contact with the i.t world with

01:36:40,800 --> 01:36:43,360
development where i actually played a

01:36:42,560 --> 01:36:45,440
role

01:36:43,360 --> 01:36:46,960
and it was also my first contact with

01:36:45,440 --> 01:36:49,520
open source

01:36:46,960 --> 01:36:51,199
not much but it was something that that

01:36:49,520 --> 01:36:53,360
already happened

01:36:51,199 --> 01:36:54,480
still all this experience that i had in

01:36:53,360 --> 01:36:57,119
the company and

01:36:54,480 --> 01:36:58,639
and with this these first steps in

01:36:57,119 --> 01:37:01,679
coding it did not

01:36:58,639 --> 01:37:04,880
lead me directly into it yet

01:37:01,679 --> 01:37:06,000
so i decided at some point after four or

01:37:04,880 --> 01:37:07,679
five years in france

01:37:06,000 --> 01:37:10,639
that i wanted to return home to the

01:37:07,679 --> 01:37:12,960
czech republic to be closer to my family

01:37:10,639 --> 01:37:14,880
and one of the triggers to come back at

01:37:12,960 --> 01:37:17,040
that given point was that i

01:37:14,880 --> 01:37:18,560
uh found that there is an intense

01:37:17,040 --> 01:37:20,400
training in uh

01:37:18,560 --> 01:37:23,600
language interpreting happening in

01:37:20,400 --> 01:37:25,840
prague and since at the time i was uh

01:37:23,600 --> 01:37:27,040
sort of fluent in english and french i

01:37:25,840 --> 01:37:30,239
thought that was like

01:37:27,040 --> 01:37:32,320
exactly what i wanted to do and i can

01:37:30,239 --> 01:37:34,480
tell you it was probably one of the most

01:37:32,320 --> 01:37:36,000
intense trainings i've ever done in my

01:37:34,480 --> 01:37:38,080
life like your brain

01:37:36,000 --> 01:37:39,760
literally starts boiling and doesn't

01:37:38,080 --> 01:37:40,719
stop until the end of that year that

01:37:39,760 --> 01:37:42,960
you're studying

01:37:40,719 --> 01:37:44,639
so if you want brain exercise i

01:37:42,960 --> 01:37:48,080
recommend simultaneous

01:37:44,639 --> 01:37:50,239
interpreting so you listen you speak you

01:37:48,080 --> 01:37:51,760
try to translate in your head you also

01:37:50,239 --> 01:37:54,000
try to

01:37:51,760 --> 01:37:54,960
basically guess what the person is going

01:37:54,000 --> 01:37:58,000
to say so

01:37:54,960 --> 01:38:00,960
it's it's very interesting

01:37:58,000 --> 01:38:01,840
so after this training i thought okay i

01:38:00,960 --> 01:38:03,760
just

01:38:01,840 --> 01:38:05,440
internally felt that was the moment

01:38:03,760 --> 01:38:06,320
where i wanted to decide what to do with

01:38:05,440 --> 01:38:08,719
my life

01:38:06,320 --> 01:38:10,400
so what is it that i'm going to choose

01:38:08,719 --> 01:38:11,920
from all the things that i've tried and

01:38:10,400 --> 01:38:14,400
what i've seen

01:38:11,920 --> 01:38:16,080
and at that point that was when i

01:38:14,400 --> 01:38:18,000
consciously decided to go

01:38:16,080 --> 01:38:19,440
into i.t because i thought that's

01:38:18,000 --> 01:38:23,040
exactly the right

01:38:19,440 --> 01:38:26,400
combination of challenge and stability

01:38:23,040 --> 01:38:28,000
that i was looking for so what got me

01:38:26,400 --> 01:38:29,440
this first job in it

01:38:28,000 --> 01:38:31,600
it was my knowledge of french and

01:38:29,440 --> 01:38:33,040
english so something i learned until now

01:38:31,600 --> 01:38:35,600
was actually useful

01:38:33,040 --> 01:38:36,239
and also my promise to the hiring

01:38:35,600 --> 01:38:37,840
manager

01:38:36,239 --> 01:38:39,920
that i'm really ready to learn

01:38:37,840 --> 01:38:42,719
everything they will ask me to learn

01:38:39,920 --> 01:38:44,719
and i did so i spent the first year

01:38:42,719 --> 01:38:46,400
really learning a lot

01:38:44,719 --> 01:38:47,760
uh getting a lot of help from my

01:38:46,400 --> 01:38:51,440
colleagues as well which

01:38:47,760 --> 01:38:55,119
somehow confirms the fact that i.t

01:38:51,440 --> 01:38:57,360
and coding um is an environment which

01:38:55,119 --> 01:38:58,719
which is very communitarian so there are

01:38:57,360 --> 01:39:00,560
people who want to help you

01:38:58,719 --> 01:39:02,560
and and they want to share their

01:39:00,560 --> 01:39:05,520
knowledge so thanks to them

01:39:02,560 --> 01:39:06,400
after probably a year i became quite

01:39:05,520 --> 01:39:09,119
independent

01:39:06,400 --> 01:39:10,159
in things that i never thought i would

01:39:09,119 --> 01:39:11,840
be able to do i

01:39:10,159 --> 01:39:14,880
maybe didn't even know they existed

01:39:11,840 --> 01:39:16,880
right like uh coming to a customer

01:39:14,880 --> 01:39:19,119
trying to uh understand what they need

01:39:16,880 --> 01:39:21,440
install the software configure it

01:39:19,119 --> 01:39:22,880
script it there was a word i didn't

01:39:21,440 --> 01:39:26,159
really know what it meant before

01:39:22,880 --> 01:39:29,040
query the database uh test fix bugs

01:39:26,159 --> 01:39:31,119
you know all these things so this was

01:39:29,040 --> 01:39:33,119
this all was quite a lot of hard work on

01:39:31,119 --> 01:39:33,840
the other hand it led me to some state

01:39:33,119 --> 01:39:36,159
of flow

01:39:33,840 --> 01:39:37,360
i felt like wow this is really this

01:39:36,159 --> 01:39:39,280
feels so good

01:39:37,360 --> 01:39:40,480
that i can do things i understand them

01:39:39,280 --> 01:39:43,520
and suddenly

01:39:40,480 --> 01:39:46,880
they were so complex yesterday and today

01:39:43,520 --> 01:39:50,080
i can actually do it so that was

01:39:46,880 --> 01:39:51,760
that was my experience and then this

01:39:50,080 --> 01:39:54,159
leads me to my second

01:39:51,760 --> 01:39:55,280
encounter with open source which happens

01:39:54,159 --> 01:39:57,600
uh probably

01:39:55,280 --> 01:39:58,880
it's a paradox in the world of the

01:39:57,600 --> 01:40:00,880
mainframe

01:39:58,880 --> 01:40:02,960
so after i moved from the first job

01:40:00,880 --> 01:40:05,600
where i was a services consultant

01:40:02,960 --> 01:40:07,040
uh in the distributed world i moved to

01:40:05,600 --> 01:40:09,840
the mainframe division in

01:40:07,040 --> 01:40:11,520
ca broadcom and at the time you would

01:40:09,840 --> 01:40:14,960
probably think it's the least

01:40:11,520 --> 01:40:17,600
likely place to see open source yet

01:40:14,960 --> 01:40:18,480
it became a thing and there were first

01:40:17,600 --> 01:40:20,480
open source

01:40:18,480 --> 01:40:22,480
mainframe related products that popped

01:40:20,480 --> 01:40:25,199
up and

01:40:22,480 --> 01:40:27,199
i started thinking about how open source

01:40:25,199 --> 01:40:27,840
can help the mainframe and what is it

01:40:27,199 --> 01:40:31,360
about

01:40:27,840 --> 01:40:33,040
actually and obviously open source means

01:40:31,360 --> 01:40:34,719
less boundaries

01:40:33,040 --> 01:40:36,159
and and all these things that we all

01:40:34,719 --> 01:40:39,600
know what i

01:40:36,159 --> 01:40:42,639
thought as well is that it enables

01:40:39,600 --> 01:40:44,159
people to contribute to the product when

01:40:42,639 --> 01:40:46,400
they feel like it

01:40:44,159 --> 01:40:49,199
because they are motivated by something

01:40:46,400 --> 01:40:52,480
that they see is missing for example

01:40:49,199 --> 01:40:53,040
and the person who's um regulating their

01:40:52,480 --> 01:40:54,719
efforts

01:40:53,040 --> 01:40:57,040
is not necessarily their manager but

01:40:54,719 --> 01:40:58,639
it's the community so it's not like your

01:40:57,040 --> 01:40:59,520
boss tells you to do something it's the

01:40:58,639 --> 01:41:02,800
community

01:40:59,520 --> 01:41:05,040
who work together on something and i

01:41:02,800 --> 01:41:06,480
i'm hoping i believe that the mainframe

01:41:05,040 --> 01:41:09,280
can slowly transform

01:41:06,480 --> 01:41:10,719
thanks to open source uh the mainframe

01:41:09,280 --> 01:41:12,239
is still at the beginning of this

01:41:10,719 --> 01:41:14,159
journey obviously

01:41:12,239 --> 01:41:15,360
uh but i am personally really happy that

01:41:14,159 --> 01:41:18,159
i can witness this

01:41:15,360 --> 01:41:20,400
this period and then i'm really curious

01:41:18,159 --> 01:41:23,760
how things will evolve

01:41:20,400 --> 01:41:25,600
for the mainframe and open source maybe

01:41:23,760 --> 01:41:29,920
just one last thing to say

01:41:25,600 --> 01:41:30,639
um diversity i think that diversity can

01:41:29,920 --> 01:41:32,560
lead to

01:41:30,639 --> 01:41:35,520
things that are quite unexpected in the

01:41:32,560 --> 01:41:37,119
team for example for myself

01:41:35,520 --> 01:41:39,440
at the beginning but even today i

01:41:37,119 --> 01:41:41,840
sometimes felt anxious

01:41:39,440 --> 01:41:43,440
not to ask a stupid question like a

01:41:41,840 --> 01:41:45,920
question that everybody around

01:41:43,440 --> 01:41:47,520
the table would think oh my god how come

01:41:45,920 --> 01:41:49,760
she doesn't know that

01:41:47,520 --> 01:41:51,040
but often i learned that asking that

01:41:49,760 --> 01:41:53,119
question can lead to

01:41:51,040 --> 01:41:54,800
a deeper understanding the entire team

01:41:53,119 --> 01:41:58,480
would start discussing

01:41:54,800 --> 01:42:00,960
and they would just learn things

01:41:58,480 --> 01:42:03,199
only because they there was one person

01:42:00,960 --> 01:42:04,000
who dares to ask who dared to be

01:42:03,199 --> 01:42:06,320
different

01:42:04,000 --> 01:42:08,400
show who they are rather than trying to

01:42:06,320 --> 01:42:09,920
hide themselves and pretend

01:42:08,400 --> 01:42:12,320
that they are like the others and they

01:42:09,920 --> 01:42:15,040
know everything like the others do

01:42:12,320 --> 01:42:16,000
so uh this is how i got where i am now

01:42:15,040 --> 01:42:18,560
and um

01:42:16,000 --> 01:42:19,199
although it was maybe not an a usual

01:42:18,560 --> 01:42:22,639
pass

01:42:19,199 --> 01:42:23,040
it was not always super easy i wouldn't

01:42:22,639 --> 01:42:26,159
change

01:42:23,040 --> 01:42:28,159
anything so that's all i wanted to share

01:42:26,159 --> 01:42:31,280
and i want to give space to others

01:42:28,159 --> 01:42:31,760
as well okay so that was that was a

01:42:31,280 --> 01:42:34,320
great

01:42:31,760 --> 01:42:36,000
a great story and um i don't think

01:42:34,320 --> 01:42:39,199
there's any one way

01:42:36,000 --> 01:42:41,600
or one path uh to anything in life and

01:42:39,199 --> 01:42:42,320
what i love of what you said was about

01:42:41,600 --> 01:42:44,320
you know you

01:42:42,320 --> 01:42:45,679
should have discovery of you know less

01:42:44,320 --> 01:42:47,440
boundaries right

01:42:45,679 --> 01:42:50,159
that that you know from your from my

01:42:47,440 --> 01:42:52,159
perspective you know your own career

01:42:50,159 --> 01:42:53,600
just as it's progressed you know you

01:42:52,159 --> 01:42:57,520
don't have boundaries right

01:42:53,600 --> 01:43:00,800
you went from you know english and math

01:42:57,520 --> 01:43:02,000
being an interpreter coding distributed

01:43:00,800 --> 01:43:04,560
now mainframe

01:43:02,000 --> 01:43:05,520
open source same thing no no boundaries

01:43:04,560 --> 01:43:09,280
so that's a

01:43:05,520 --> 01:43:11,840
great great story jen um over to you

01:43:09,280 --> 01:43:12,560
uh what open source communities are you

01:43:11,840 --> 01:43:13,840
involved with

01:43:12,560 --> 01:43:16,159
you know today you're working with a lot

01:43:13,840 --> 01:43:17,679
of partners and and customers and

01:43:16,159 --> 01:43:19,280
what do you what do you like about these

01:43:17,679 --> 01:43:22,639
communities and and how might you

01:43:19,280 --> 01:43:24,320
you know change them if you could wow

01:43:22,639 --> 01:43:26,639
so there's already been a lot of change

01:43:24,320 --> 01:43:29,199
in open source um

01:43:26,639 --> 01:43:30,719
so i started i think open source has

01:43:29,199 --> 01:43:33,199
been throughout my whole career

01:43:30,719 --> 01:43:34,880
um when i was still at university and i

01:43:33,199 --> 01:43:36,719
took an internship it was my first

01:43:34,880 --> 01:43:39,119
exposure to open source

01:43:36,719 --> 01:43:39,840
and i had a roommate while i was

01:43:39,119 --> 01:43:41,600
interning

01:43:39,840 --> 01:43:43,199
and he was contributing to a lot of

01:43:41,600 --> 01:43:44,960
different open source packages and my

01:43:43,199 --> 01:43:45,840
internship was actually on building a

01:43:44,960 --> 01:43:48,159
linux

01:43:45,840 --> 01:43:49,199
um distribution so it was taking the

01:43:48,159 --> 01:43:51,440
open source linux

01:43:49,199 --> 01:43:53,520
uh kernels and making a proprietary

01:43:51,440 --> 01:43:55,440
version of retailers

01:43:53,520 --> 01:43:56,639
that was really kind of my first foray

01:43:55,440 --> 01:44:00,239
into working with

01:43:56,639 --> 01:44:02,639
open source technology at the time

01:44:00,239 --> 01:44:05,040
i was incredibly intimidated to post

01:44:02,639 --> 01:44:08,400
questions on forums to try to contribute

01:44:05,040 --> 01:44:09,840
because people weren't that supportive

01:44:08,400 --> 01:44:11,760
they would make comments like oh you

01:44:09,840 --> 01:44:12,960
must be new or oh you're a noob or

01:44:11,760 --> 01:44:16,480
things like that

01:44:12,960 --> 01:44:17,280
um and yeah i was but what's wrong with

01:44:16,480 --> 01:44:20,000
that

01:44:17,280 --> 01:44:20,400
and what i see now as i work with things

01:44:20,000 --> 01:44:22,320
like

01:44:20,400 --> 01:44:23,840
um some of the hyperledger projects like

01:44:22,320 --> 01:44:26,960
hyperledger fabric

01:44:23,840 --> 01:44:29,119
um everybody's absolutely supportive

01:44:26,960 --> 01:44:30,239
you can ask a question um you're not

01:44:29,119 --> 01:44:32,000
going to be ridiculed

01:44:30,239 --> 01:44:33,280
because maybe it is a basic question and

01:44:32,000 --> 01:44:35,119
maybe you are new

01:44:33,280 --> 01:44:36,400
um people are very great at saying oh

01:44:35,119 --> 01:44:38,159
hey that's a great question

01:44:36,400 --> 01:44:40,239
instead of answering it on a chat so a

01:44:38,159 --> 01:44:41,360
lot of the um open source communities

01:44:40,239 --> 01:44:43,600
will actually have

01:44:41,360 --> 01:44:45,040
um chats that you can you know talk with

01:44:43,600 --> 01:44:45,840
the people that are contributing other

01:44:45,040 --> 01:44:48,239
people that are

01:44:45,840 --> 01:44:49,600
maybe some of the core developers to get

01:44:48,239 --> 01:44:50,880
help and they'll say hey that's a great

01:44:49,600 --> 01:44:52,320
question why don't we post that on

01:44:50,880 --> 01:44:53,760
something like openstack where that

01:44:52,320 --> 01:44:54,880
question is not going to be searchable

01:44:53,760 --> 01:44:55,840
because i think other people are going

01:44:54,880 --> 01:44:58,080
to have it

01:44:55,840 --> 01:44:58,960
so it's no longer this like oh you're

01:44:58,080 --> 01:45:00,480
not the expert

01:44:58,960 --> 01:45:02,239
you can't contribute you don't know it's

01:45:00,480 --> 01:45:03,760
yeah let's have everybody in we want the

01:45:02,239 --> 01:45:05,280
input we want you to learn it we want

01:45:03,760 --> 01:45:07,199
you to be contributing

01:45:05,280 --> 01:45:08,400
um and that's actually been really

01:45:07,199 --> 01:45:11,600
important because it's been

01:45:08,400 --> 01:45:13,040
easier to engage customers and it's been

01:45:11,600 --> 01:45:14,159
easier for customers to adopt the

01:45:13,040 --> 01:45:15,520
technologies

01:45:14,159 --> 01:45:17,840
and really it's what's driving the whole

01:45:15,520 --> 01:45:18,400
open source community um it doesn't

01:45:17,840 --> 01:45:20,639
matter

01:45:18,400 --> 01:45:22,080
what our gender is what our ethnicity is

01:45:20,639 --> 01:45:24,320
where we are in the world

01:45:22,080 --> 01:45:26,639
and it gives us all equal footing and

01:45:24,320 --> 01:45:28,560
most of the time i'm behind you know

01:45:26,639 --> 01:45:30,000
a screen i'm contributing it's a it's a

01:45:28,560 --> 01:45:32,400
user name nobody knows who i

01:45:30,000 --> 01:45:33,760
am um and a lot of people i've met i'm

01:45:32,400 --> 01:45:35,600
like oh you're

01:45:33,760 --> 01:45:37,040
this user id i know i don't i don't know

01:45:35,600 --> 01:45:37,679
you but i know that user id i'm used to

01:45:37,040 --> 01:45:39,119
you know

01:45:37,679 --> 01:45:40,719
singing on git issues or i'm used to

01:45:39,119 --> 01:45:42,960
seeing it on the forums

01:45:40,719 --> 01:45:44,080
and so it's actually made it easy to

01:45:42,960 --> 01:45:45,520
work with things like

01:45:44,080 --> 01:45:47,119
node or work with the different

01:45:45,520 --> 01:45:48,960
hyperledger projects or

01:45:47,119 --> 01:45:50,480
work with open mainframe project on the

01:45:48,960 --> 01:45:52,400
open source open

01:45:50,480 --> 01:45:54,000
mainframe technologies and the projects

01:45:52,400 --> 01:45:55,360
that are starting there it's just been a

01:45:54,000 --> 01:45:58,239
really

01:45:55,360 --> 01:45:58,880
easy way to have diversity to have

01:45:58,239 --> 01:46:03,040
everybody

01:45:58,880 --> 01:46:03,040
be representative and feel included

01:46:03,440 --> 01:46:07,679
excellent excellent you know you you

01:46:06,000 --> 01:46:10,480
know when you talked about in the start

01:46:07,679 --> 01:46:10,960
about um your initial early reactions

01:46:10,480 --> 01:46:13,520
and

01:46:10,960 --> 01:46:14,800
and someone's a new yes we've all faced

01:46:13,520 --> 01:46:17,840
that i think when people

01:46:14,800 --> 01:46:19,840
people tend to forget that you may be

01:46:17,840 --> 01:46:21,520
somewhat expert in one area but you're a

01:46:19,840 --> 01:46:23,920
noob in another area

01:46:21,520 --> 01:46:25,600
so i you know this is i think we all

01:46:23,920 --> 01:46:27,840
need to have this degree of

01:46:25,600 --> 01:46:29,360
being humble and somewhat tolerant

01:46:27,840 --> 01:46:30,560
because everyone was a noob at some

01:46:29,360 --> 01:46:33,280
point in some place

01:46:30,560 --> 01:46:34,800
you know at some point in their lives uh

01:46:33,280 --> 01:46:36,560
thanks jen for sharing that story

01:46:34,800 --> 01:46:39,520
appreciate it

01:46:36,560 --> 01:46:41,280
so rashmi um how do you build you know

01:46:39,520 --> 01:46:43,199
you've built a lot of teams

01:46:41,280 --> 01:46:45,199
and managed them globally for a long

01:46:43,199 --> 01:46:45,920
time how do you build diversity and

01:46:45,199 --> 01:46:49,760
inclusion

01:46:45,920 --> 01:46:52,960
into your teams rick

01:46:49,760 --> 01:46:54,239
so uh for past 22 years of my journey in

01:46:52,960 --> 01:46:56,719
technology

01:46:54,239 --> 01:46:58,080
today i would like to bring out some of

01:46:56,719 --> 01:47:00,560
my challenges

01:46:58,080 --> 01:47:02,480
and then also provide insights into what

01:47:00,560 --> 01:47:05,360
i have done to build dni

01:47:02,480 --> 01:47:07,520
teams but before that let me just tell

01:47:05,360 --> 01:47:09,840
you a little about my background

01:47:07,520 --> 01:47:12,159
i'm an indian and india is a country

01:47:09,840 --> 01:47:14,639
with diverse culture

01:47:12,159 --> 01:47:16,639
india believes in unity and diversity

01:47:14,639 --> 01:47:17,920
and i belong to a very conservative

01:47:16,639 --> 01:47:20,400
family

01:47:17,920 --> 01:47:21,600
where probably nobody except me thought

01:47:20,400 --> 01:47:24,320
i would be an engineer

01:47:21,600 --> 01:47:25,520
like my father my mother had a different

01:47:24,320 --> 01:47:27,280
expectation

01:47:25,520 --> 01:47:28,560
and she probably wanted me to be a

01:47:27,280 --> 01:47:30,960
homemaker

01:47:28,560 --> 01:47:32,560
it is considered women's responsibility

01:47:30,960 --> 01:47:36,320
to be primary caregiver

01:47:32,560 --> 01:47:38,080
for the home and secondary breadwinner

01:47:36,320 --> 01:47:40,080
but don't take me wrong i consider

01:47:38,080 --> 01:47:41,920
homemaking skills are equally important

01:47:40,080 --> 01:47:44,000
for both men and women

01:47:41,920 --> 01:47:45,520
but then at the same time i believe if

01:47:44,000 --> 01:47:48,560
you follow your passion

01:47:45,520 --> 01:47:50,639
you can succeed and that's what i did so

01:47:48,560 --> 01:47:52,320
my first advice to women is to

01:47:50,639 --> 01:47:53,760
listen to your heart and break the

01:47:52,320 --> 01:47:56,159
barriers

01:47:53,760 --> 01:47:58,800
do whatever makes you happy and it will

01:47:56,159 --> 01:48:00,880
eventually make everyone proud

01:47:58,800 --> 01:48:02,560
everyone who loves you it will make them

01:48:00,880 --> 01:48:04,400
proud

01:48:02,560 --> 01:48:05,920
so i have been a lot of teams and i

01:48:04,400 --> 01:48:08,480
would give

01:48:05,920 --> 01:48:10,080
certain incidences to bring out the

01:48:08,480 --> 01:48:12,880
challenges and then how i

01:48:10,080 --> 01:48:13,360
brought back those experiences in my

01:48:12,880 --> 01:48:16,400
team

01:48:13,360 --> 01:48:17,760
and created a diversity and inclusive

01:48:16,400 --> 01:48:20,560
team

01:48:17,760 --> 01:48:22,239
so to me diversity means bringing unique

01:48:20,560 --> 01:48:25,280
people into team

01:48:22,239 --> 01:48:26,080
who can build better products who can

01:48:25,280 --> 01:48:27,679
also bring

01:48:26,080 --> 01:48:29,600
different thought process and make

01:48:27,679 --> 01:48:31,280
better decisions

01:48:29,600 --> 01:48:33,040
and this reminds me of one of the

01:48:31,280 --> 01:48:36,560
incidences very recently

01:48:33,040 --> 01:48:38,159
i went for an interview and it was

01:48:36,560 --> 01:48:40,480
for the role of a director and i was

01:48:38,159 --> 01:48:43,119
sitting across the ceo of the company

01:48:40,480 --> 01:48:45,119
and he was very nice tap and interview

01:48:43,119 --> 01:48:47,440
was going really well

01:48:45,119 --> 01:48:49,440
and then all of a sudden i was surprised

01:48:47,440 --> 01:48:51,199
or shocked by the question

01:48:49,440 --> 01:48:53,440
and i was asked that the country in

01:48:51,199 --> 01:48:56,639
which still

01:48:53,440 --> 01:48:58,239
things are decided by men or a male

01:48:56,639 --> 01:49:00,560
dominated country

01:48:58,239 --> 01:49:02,480
and with child responsibilities how

01:49:00,560 --> 01:49:04,080
would i carry my responsibility as a

01:49:02,480 --> 01:49:07,760
leader

01:49:04,080 --> 01:49:09,920
and truly speaking it was

01:49:07,760 --> 01:49:11,520
it was a question which i was not

01:49:09,920 --> 01:49:13,360
prepared for

01:49:11,520 --> 01:49:16,320
and thank god that i'm not part of that

01:49:13,360 --> 01:49:19,119
organization because i would like to be

01:49:16,320 --> 01:49:19,599
part of the organizations which values

01:49:19,119 --> 01:49:23,360
uh

01:49:19,599 --> 01:49:24,320
diversity so uh learning from this what

01:49:23,360 --> 01:49:27,440
i did

01:49:24,320 --> 01:49:29,840
that all my selection process in fact

01:49:27,440 --> 01:49:31,760
i to hire people but for any

01:49:29,840 --> 01:49:33,840
organization right their selection

01:49:31,760 --> 01:49:36,000
process should be

01:49:33,840 --> 01:49:37,199
should be to call for diverse candidates

01:49:36,000 --> 01:49:40,080
from all backgrounds

01:49:37,199 --> 01:49:41,440
gender race and so on and i've also

01:49:40,080 --> 01:49:43,520
carefully devised

01:49:41,440 --> 01:49:45,440
the interview process which is

01:49:43,520 --> 01:49:48,239
structured in a format

01:49:45,440 --> 01:49:49,760
a very structured format so that all

01:49:48,239 --> 01:49:50,400
candidates go through the similar

01:49:49,760 --> 01:49:52,960
questions

01:49:50,400 --> 01:49:55,119
and they all have equal opportunity to

01:49:52,960 --> 01:49:58,400
perform

01:49:55,119 --> 01:49:59,520
um it's not based on the performance is

01:49:58,400 --> 01:50:02,800
not based on

01:49:59,520 --> 01:50:03,679
the gender or family status and as you

01:50:02,800 --> 01:50:06,639
all may know

01:50:03,679 --> 01:50:08,639
interview is anyways challenging and it

01:50:06,639 --> 01:50:10,400
can get very uncomfortable

01:50:08,639 --> 01:50:12,880
to get such kind of questions in

01:50:10,400 --> 01:50:12,880
interview

01:50:13,040 --> 01:50:16,800
moving on to inclusion and equity so

01:50:14,960 --> 01:50:18,800
once you've created the diverse team

01:50:16,800 --> 01:50:20,000
it is the leaders responsibility to make

01:50:18,800 --> 01:50:23,040
sure that

01:50:20,000 --> 01:50:25,760
all parts of the team or all

01:50:23,040 --> 01:50:28,239
candidates feel included and they have

01:50:25,760 --> 01:50:30,159
equal chance to succeed

01:50:28,239 --> 01:50:32,239
creating a fair environment in terms of

01:50:30,159 --> 01:50:33,040
roles and responsibilities payment

01:50:32,239 --> 01:50:36,320
progression

01:50:33,040 --> 01:50:37,119
or opportunities inclusion also means

01:50:36,320 --> 01:50:39,040
respecting

01:50:37,119 --> 01:50:41,040
each other boundaries and working

01:50:39,040 --> 01:50:42,800
flexibility to accommodate needs of

01:50:41,040 --> 01:50:45,679
others

01:50:42,800 --> 01:50:48,320
so again uh moving back to my experience

01:50:45,679 --> 01:50:51,440
is when i was growing as a leader

01:50:48,320 --> 01:50:53,520
i realized that not only my expectation

01:50:51,440 --> 01:50:56,400
at my work

01:50:53,520 --> 01:50:57,520
grew but also my responsibilities at

01:50:56,400 --> 01:51:01,040
home were growing

01:50:57,520 --> 01:51:03,599
i had small children i had parents to

01:51:01,040 --> 01:51:05,520
take care of and i distinctly remember a

01:51:03,599 --> 01:51:06,560
day where i just signed off 12 o'clock

01:51:05,520 --> 01:51:09,599
in the midnight

01:51:06,560 --> 01:51:11,679
after giving status to u.s and woke up

01:51:09,599 --> 01:51:14,080
again at 6am in the morning because i

01:51:11,679 --> 01:51:15,119
had to start with us with another status

01:51:14,080 --> 01:51:17,040
call

01:51:15,119 --> 01:51:18,639
i was exhausted and felt that it was

01:51:17,040 --> 01:51:21,199
never ending

01:51:18,639 --> 01:51:23,280
it is an organization's responsibility

01:51:21,199 --> 01:51:25,679
to provide flexibility and support

01:51:23,280 --> 01:51:28,000
without the fear of being judged at

01:51:25,679 --> 01:51:31,119
these times

01:51:28,000 --> 01:51:33,520
another similar example for equity is

01:51:31,119 --> 01:51:35,599
i remember one of my peers came to me

01:51:33,520 --> 01:51:37,840
and told me about a resource

01:51:35,599 --> 01:51:38,719
that she wasn't performing well and i

01:51:37,840 --> 01:51:40,400
asked why

01:51:38,719 --> 01:51:42,320
what's the reason that you think she's

01:51:40,400 --> 01:51:45,520
not performing well

01:51:42,320 --> 01:51:47,119
and he told me that she goes back home

01:51:45,520 --> 01:51:49,360
at 5 pm

01:51:47,119 --> 01:51:51,040
and she also had gone for a longer

01:51:49,360 --> 01:51:52,880
maternity leave

01:51:51,040 --> 01:51:54,400
i had to explain that the performance

01:51:52,880 --> 01:51:55,520
should be based on deliveries and

01:51:54,400 --> 01:51:57,199
timelines

01:51:55,520 --> 01:51:59,040
and not based on how much time one

01:51:57,199 --> 01:52:01,760
spends in office

01:51:59,040 --> 01:52:02,080
of course i support quoras and also i

01:52:01,760 --> 01:52:04,159
believe

01:52:02,080 --> 01:52:05,679
that diversity does not mean

01:52:04,159 --> 01:52:08,880
entitlements

01:52:05,679 --> 01:52:11,199
but we all need a fair chance to succeed

01:52:08,880 --> 01:52:13,840
so what i do in my teams is that i try

01:52:11,199 --> 01:52:16,960
to create open and fair environment

01:52:13,840 --> 01:52:19,199
follow an open door policy i coach my

01:52:16,960 --> 01:52:22,639
leaders to be more inclusive

01:52:19,199 --> 01:52:25,119
and supportive so that everybody has a

01:52:22,639 --> 01:52:28,400
fair chance to succeed succeed

01:52:25,119 --> 01:52:30,880
purely based on performance

01:52:28,400 --> 01:52:32,719
another challenge which i remember uh

01:52:30,880 --> 01:52:33,199
and it's very human for all of us to do

01:52:32,719 --> 01:52:35,599
that

01:52:33,199 --> 01:52:36,800
being a woman and being in india it's

01:52:35,599 --> 01:52:38,800
very

01:52:36,800 --> 01:52:40,159
difficult for me to network over a glass

01:52:38,800 --> 01:52:43,920
of wine

01:52:40,159 --> 01:52:44,800
when i was growing as a new leader and

01:52:43,920 --> 01:52:47,599
one day i just

01:52:44,800 --> 01:52:49,119
entered into a room full of leaders

01:52:47,599 --> 01:52:50,320
where we had to do performance

01:52:49,119 --> 01:52:53,119
discussions

01:52:50,320 --> 01:52:54,320
and they were all men i found myself all

01:52:53,119 --> 01:52:56,159
left alone

01:52:54,320 --> 01:52:58,719
being being the only women could be

01:52:56,159 --> 01:53:00,880
challenging in fact i realized that

01:52:58,719 --> 01:53:02,639
lot of decisions were already made

01:53:00,880 --> 01:53:05,280
outside of the room

01:53:02,639 --> 01:53:06,239
so to create a fair environment i

01:53:05,280 --> 01:53:09,040
encourage

01:53:06,239 --> 01:53:10,000
my teams now to have office gatherings

01:53:09,040 --> 01:53:12,960
or partying

01:53:10,000 --> 01:53:15,040
parties at hours where all team members

01:53:12,960 --> 01:53:16,880
can participate equally

01:53:15,040 --> 01:53:19,440
i seek for feedback from diverse

01:53:16,880 --> 01:53:21,760
candidates not that i have to do it

01:53:19,440 --> 01:53:22,560
i know that many of the candidates feel

01:53:21,760 --> 01:53:25,520
shy many

01:53:22,560 --> 01:53:26,800
times they may feel like what if i speak

01:53:25,520 --> 01:53:28,400
out and it doesn't have to

01:53:26,800 --> 01:53:30,320
it doesn't turn out to be a good

01:53:28,400 --> 01:53:32,880
question so i see

01:53:30,320 --> 01:53:34,560
uh proactively i seek feedback from

01:53:32,880 --> 01:53:37,280
diverse candidates and it has

01:53:34,560 --> 01:53:38,639
always helped me building or making

01:53:37,280 --> 01:53:40,960
better decisions

01:53:38,639 --> 01:53:42,560
i also have created my one-on-one

01:53:40,960 --> 01:53:43,520
channels with various leaders

01:53:42,560 --> 01:53:47,119
individually

01:53:43,520 --> 01:53:49,119
to create my own connect and trust

01:53:47,119 --> 01:53:50,800
which i certainly cannot do over the

01:53:49,119 --> 01:53:53,520
class of wine

01:53:50,800 --> 01:53:54,159
so it's not easy to be different and

01:53:53,520 --> 01:53:57,360
moreover

01:53:54,159 --> 01:53:59,920
it's a it can be uncomfortable at times

01:53:57,360 --> 01:54:01,199
but we all need to feel confident and

01:53:59,920 --> 01:54:03,920
bring ourselves

01:54:01,199 --> 01:54:04,960
out of that comfort zone and create a

01:54:03,920 --> 01:54:07,679
completely new

01:54:04,960 --> 01:54:09,440
comfort zone by stretching our limits

01:54:07,679 --> 01:54:11,199
and we have to remember that

01:54:09,440 --> 01:54:13,119
when we are given a seat in rocket we

01:54:11,199 --> 01:54:16,320
don't ask which one we just

01:54:13,119 --> 01:54:18,719
go thanks rick

01:54:16,320 --> 01:54:19,599
excellent rashford that was that was

01:54:18,719 --> 01:54:22,560
thank you for those

01:54:19,599 --> 01:54:23,679
words of wisdom and yes i believe this

01:54:22,560 --> 01:54:25,840
balance of

01:54:23,679 --> 01:54:27,199
not only it's sometimes hard for people

01:54:25,840 --> 01:54:29,360
to open themselves up

01:54:27,199 --> 01:54:31,920
to feel confident and it's really a

01:54:29,360 --> 01:54:34,639
two-way street it's the individual

01:54:31,920 --> 01:54:36,719
uh having the courage and and and also

01:54:34,639 --> 01:54:39,679
feeling that they have a support system

01:54:36,719 --> 01:54:42,719
that the organization is willing to uh

01:54:39,679 --> 01:54:45,440
yeah to be open and fair so it's it's

01:54:42,719 --> 01:54:47,119
something that both sides need to

01:54:45,440 --> 01:54:50,239
continue working on

01:54:47,119 --> 01:54:52,000
so so guys look um

01:54:50,239 --> 01:54:53,679
what i want to do is what i also always

01:54:52,000 --> 01:54:55,119
do with these panels is to give everyone

01:54:53,679 --> 01:54:58,960
an opportunity to

01:54:55,119 --> 01:55:00,159
give um a 60 second no more than 60

01:54:58,960 --> 01:55:03,440
seconds

01:55:00,159 --> 01:55:05,440
uh parting shot a final thought

01:55:03,440 --> 01:55:06,639
um and what i'd like you to kind of

01:55:05,440 --> 01:55:09,119
think about is

01:55:06,639 --> 01:55:10,239
um you know what words of wisdom would

01:55:09,119 --> 01:55:13,920
you give

01:55:10,239 --> 01:55:14,960
uh people today women obviously in

01:55:13,920 --> 01:55:17,920
particular

01:55:14,960 --> 01:55:20,000
uh enjoying and participating in you

01:55:17,920 --> 01:55:23,280
know in the open source community

01:55:20,000 --> 01:55:24,320
uh or uh for those that are actually

01:55:23,280 --> 01:55:26,159
managing people

01:55:24,320 --> 01:55:27,520
if you think you know what what do they

01:55:26,159 --> 01:55:31,280
need to do

01:55:27,520 --> 01:55:33,360
and be uh cognizant of so let's start uh

01:55:31,280 --> 01:55:36,159
silva with you what's your 60 second

01:55:33,360 --> 01:55:38,560
shot what i would like to say is

01:55:36,159 --> 01:55:40,320
if you are interested in working in it

01:55:38,560 --> 01:55:42,719
no matter your background

01:55:40,320 --> 01:55:44,840
just start you can make it it's not

01:55:42,719 --> 01:55:47,840
impossible and it's not even

01:55:44,840 --> 01:55:49,440
exceptional however what you

01:55:47,840 --> 01:55:51,599
need to make sure at the beginning is

01:55:49,440 --> 01:55:53,520
know why you want to do it because

01:55:51,599 --> 01:55:54,880
you need to have a driver it's going to

01:55:53,520 --> 01:55:56,159
be hard at some point

01:55:54,880 --> 01:55:58,480
you need to have something that will

01:55:56,159 --> 01:56:00,560
keep you motivated when things get tough

01:55:58,480 --> 01:56:02,960
you get tired

01:56:00,560 --> 01:56:04,960
things like that so i personally have

01:56:02,960 --> 01:56:05,360
been driven by learning most of that

01:56:04,960 --> 01:56:07,840
time

01:56:05,360 --> 01:56:09,199
and then in such case the hard work can

01:56:07,840 --> 01:56:11,520
also be fun

01:56:09,199 --> 01:56:13,199
and just one more thing that uh all of

01:56:11,520 --> 01:56:15,920
us mentioned today

01:56:13,199 --> 01:56:17,920
don't be afraid to bring diversity it

01:56:15,920 --> 01:56:20,480
can be challenging sometimes you maybe

01:56:17,920 --> 01:56:22,080
sometimes want to hide and not show

01:56:20,480 --> 01:56:23,520
that you are different because you think

01:56:22,080 --> 01:56:25,599
maybe it's worse

01:56:23,520 --> 01:56:26,800
but just show it ask questions that you

01:56:25,599 --> 01:56:29,040
want to ask

01:56:26,800 --> 01:56:30,400
raise whatever you want to raise because

01:56:29,040 --> 01:56:33,520
that's how you will enrich

01:56:30,400 --> 01:56:37,119
the community okay

01:56:33,520 --> 01:56:39,840
thanks so much um rush me

01:56:37,119 --> 01:56:41,040
let's why don't you have you go next

01:56:39,840 --> 01:56:44,080
chadrick

01:56:41,040 --> 01:56:45,199
so i would say that anything that you

01:56:44,080 --> 01:56:49,440
want to do

01:56:45,199 --> 01:56:52,239
be it be it being in technology or be it

01:56:49,440 --> 01:56:53,280
participating in open source if you're

01:56:52,239 --> 01:56:54,960
passionate about it

01:56:53,280 --> 01:56:56,400
i would just say that go for it and

01:56:54,960 --> 01:56:58,320
never give up

01:56:56,400 --> 01:57:00,239
i've always seen that it these are the

01:56:58,320 --> 01:57:01,440
last moment when you're just about to

01:57:00,239 --> 01:57:04,320
give up

01:57:01,440 --> 01:57:05,920
and uh i've always gotten what i wanted

01:57:04,320 --> 01:57:08,960
if i have not given up for

01:57:05,920 --> 01:57:10,800
those uh 30 days long or 60 days longer

01:57:08,960 --> 01:57:13,199
right so learn

01:57:10,800 --> 01:57:14,639
i think that's another trick we have to

01:57:13,199 --> 01:57:17,840
continuously learn

01:57:14,639 --> 01:57:20,960
learn to adapt learn to

01:57:17,840 --> 01:57:21,520
learn to mix people and see how you can

01:57:20,960 --> 01:57:24,480
work

01:57:21,520 --> 01:57:24,960
your way through always think of longer

01:57:24,480 --> 01:57:26,880
term

01:57:24,960 --> 01:57:29,119
and broader picture rather than thinking

01:57:26,880 --> 01:57:32,719
about what is happening to you at

01:57:29,119 --> 01:57:34,639
a particular moment and

01:57:32,719 --> 01:57:36,880
don't give up when you have this window

01:57:34,639 --> 01:57:38,719
of extreme challenges

01:57:36,880 --> 01:57:41,119
because i think that when everything

01:57:38,719 --> 01:57:43,280
seems to be going against you

01:57:41,119 --> 01:57:44,560
remember a flight takes against the wind

01:57:43,280 --> 01:57:47,040
and not with it

01:57:44,560 --> 01:57:48,400
so always listen to your heart and

01:57:47,040 --> 01:57:52,960
always

01:57:48,400 --> 01:57:57,920
always go and do what you believe in

01:57:52,960 --> 01:57:57,920
awesome i like that uh a lot um jen

01:57:58,159 --> 01:58:02,719
all right so if you're here you probably

01:58:01,040 --> 01:58:03,119
already have an interest or already

01:58:02,719 --> 01:58:06,000
active

01:58:03,119 --> 01:58:07,920
in open source technology if you happen

01:58:06,000 --> 01:58:10,320
to just have stumbled across us

01:58:07,920 --> 01:58:12,560
um i encourage you to take a look i

01:58:10,320 --> 01:58:13,760
think open source is the future for

01:58:12,560 --> 01:58:17,760
technology

01:58:13,760 --> 01:58:19,440
um we need the diverse input we need

01:58:17,760 --> 01:58:21,199
multiple people collaborating together

01:58:19,440 --> 01:58:22,960
we need the support from that

01:58:21,199 --> 01:58:24,480
but it's often quite intimidating to get

01:58:22,960 --> 01:58:27,520
started so

01:58:24,480 --> 01:58:29,040
have a look try out the technologies as

01:58:27,520 --> 01:58:30,480
you look at the forums as you are

01:58:29,040 --> 01:58:33,679
googling for help

01:58:30,480 --> 01:58:35,040
um your question if you have it

01:58:33,679 --> 01:58:36,560
there's going to be thousands of others

01:58:35,040 --> 01:58:37,760
that have also had the same issue and

01:58:36,560 --> 01:58:40,400
the same question

01:58:37,760 --> 01:58:41,280
so don't be afraid to ask post that

01:58:40,400 --> 01:58:44,639
question

01:58:41,280 --> 01:58:46,239
open that issue and it's a small thing

01:58:44,639 --> 01:58:48,239
but it starts to get you contributing

01:58:46,239 --> 01:58:49,360
and participating in projects and before

01:58:48,239 --> 01:58:51,440
you know it you could

01:58:49,360 --> 01:58:53,119
you're you may be an active and main

01:58:51,440 --> 01:58:56,320
contributor to a project

01:58:53,119 --> 01:58:58,239
um and it's just small steps and so it's

01:58:56,320 --> 01:58:59,840
taking a couple of risks that brought

01:58:58,239 --> 01:59:00,880
the couple you know first times you

01:58:59,840 --> 01:59:03,040
start to

01:59:00,880 --> 01:59:04,000
publicly post or ask questions or open

01:59:03,040 --> 01:59:06,880
an issue

01:59:04,000 --> 01:59:08,480
um but you're on to something and that's

01:59:06,880 --> 01:59:10,560
the first step and once you do it's

01:59:08,480 --> 01:59:12,880
amazing how that builds a community

01:59:10,560 --> 01:59:13,840
um i did switch geosolar talked about

01:59:12,880 --> 01:59:16,080
that early on

01:59:13,840 --> 01:59:17,440
i did move i moved from the us to uk and

01:59:16,080 --> 01:59:18,800
because i've been active in

01:59:17,440 --> 01:59:20,480
open source projects that actually

01:59:18,800 --> 01:59:21,679
helped me immediately build a community

01:59:20,480 --> 01:59:23,040
here in the uk

01:59:21,679 --> 01:59:25,520
because of the people i've been able to

01:59:23,040 --> 01:59:26,800
collaborate with so reach out you never

01:59:25,520 --> 01:59:28,719
know where it'll take you

01:59:26,800 --> 01:59:31,440
and how it'll help you grow into the

01:59:28,719 --> 01:59:33,599
future and how you'll change the world

01:59:31,440 --> 01:59:35,199
excellent thanks jen first of all i want

01:59:33,599 --> 01:59:38,719
to thank each one of you

01:59:35,199 --> 01:59:41,679
for taking us through your journey and

01:59:38,719 --> 01:59:43,119
speaking again of the world um we live

01:59:41,679 --> 01:59:45,679
in interesting times now

01:59:43,119 --> 01:59:47,360
and and diversity is really very much

01:59:45,679 --> 01:59:50,159
part of our zeitgeist it's

01:59:47,360 --> 01:59:51,760
political you know social gender

01:59:50,159 --> 01:59:54,719
economic culture

01:59:51,760 --> 01:59:55,840
whatever it happens to be we need to

01:59:54,719 --> 01:59:57,920
embrace it

01:59:55,840 --> 01:59:58,880
and we need to shape it and we most

01:59:57,920 --> 02:00:01,760
importantly make it

01:59:58,880 --> 02:00:02,800
part of everything that we do or care

02:00:01,760 --> 02:00:05,679
about

02:00:02,800 --> 02:00:07,599
and frankly it's time to step up and to

02:00:05,679 --> 02:00:08,080
include the voices of a diverse range of

02:00:07,599 --> 02:00:11,119
people

02:00:08,080 --> 02:00:13,040
you know for which our software is

02:00:11,119 --> 02:00:16,480
intended to serve

02:00:13,040 --> 02:00:19,199
so with that thanks for listening and

02:00:16,480 --> 02:00:19,199
have a great day

02:00:23,520 --> 02:00:27,440
hello everyone welcome to the mentee

02:00:26,480 --> 02:00:29,679
presentation

02:00:27,440 --> 02:00:31,040
um for the open main frame project

02:00:29,679 --> 02:00:33,199
mentorship program

02:00:31,040 --> 02:00:34,480
this is our fifth year of doing this

02:00:33,199 --> 02:00:36,880
program

02:00:34,480 --> 02:00:38,400
we've seen some really great work over

02:00:36,880 --> 02:00:40,080
these last five years personally this

02:00:38,400 --> 02:00:41,920
has been one of the most enjoyable

02:00:40,080 --> 02:00:44,320
parts of not only open mainframe project

02:00:41,920 --> 02:00:46,159
but just participating in open source

02:00:44,320 --> 02:00:48,480
overall in my career to be a part of

02:00:46,159 --> 02:00:49,760
and you know we're no shortage here

02:00:48,480 --> 02:00:54,000
today we have some

02:00:49,760 --> 02:00:55,599
great young minds here that are excited

02:00:54,000 --> 02:00:57,760
not only about open source but the

02:00:55,599 --> 02:00:59,679
mainframe as well and have made some

02:00:57,760 --> 02:01:02,080
great contributions to

02:00:59,679 --> 02:01:04,400
projects that are within that space and

02:01:02,080 --> 02:01:07,440
and looking to support that space

02:01:04,400 --> 02:01:08,400
so i want to introduce uh this group of

02:01:07,440 --> 02:01:10,960
folks today

02:01:08,400 --> 02:01:11,920
um and uh you'll get to learn a little

02:01:10,960 --> 02:01:14,960
bit more about

02:01:11,920 --> 02:01:15,920
them the project um their thoughts on

02:01:14,960 --> 02:01:18,159
the mentorship

02:01:15,920 --> 02:01:19,520
and uh i would encourage all of you to

02:01:18,159 --> 02:01:21,199
look to connect with them

02:01:19,520 --> 02:01:22,560
um afterwards these are some great

02:01:21,199 --> 02:01:23,760
students that are excited about the

02:01:22,560 --> 02:01:26,560
space and

02:01:23,760 --> 02:01:28,159
they they definitely are are looking for

02:01:26,560 --> 02:01:28,880
great opportunities to continue their

02:01:28,159 --> 02:01:32,239
journey

02:01:28,880 --> 02:01:37,040
so with no further ado um

02:01:32,239 --> 02:01:37,040
let's turn it over to the first

02:01:48,840 --> 02:01:51,840
mentee

02:01:52,070 --> 02:01:55,189
[Music]

02:01:56,000 --> 02:02:01,119
so i hope you all can hear me

02:02:03,280 --> 02:02:08,719
hello hi yes yep we can hear you loud

02:02:06,480 --> 02:02:12,080
and clear you're good

02:02:08,719 --> 02:02:13,760
great uh so hi all i'm very happy to uh

02:02:12,080 --> 02:02:14,639
president on but i was working uh with

02:02:13,760 --> 02:02:18,080
the suite

02:02:14,639 --> 02:02:19,520
last summer and uh

02:02:18,080 --> 02:02:21,520
working as a software engineer in

02:02:19,520 --> 02:02:22,880
salzburg research now in austria

02:02:21,520 --> 02:02:25,280
i was studying in the sri lanka

02:02:22,880 --> 02:02:25,679
institute of information technology and

02:02:25,280 --> 02:02:27,840
i'm

02:02:25,679 --> 02:02:28,960
interested in the full stack development

02:02:27,840 --> 02:02:31,840
including

02:02:28,960 --> 02:02:33,360
devops practices as well also i'm an

02:02:31,840 --> 02:02:34,880
open source enthusiast you can find me

02:02:33,360 --> 02:02:35,520
in a couple of other organizations as

02:02:34,880 --> 02:02:37,599
well

02:02:35,520 --> 02:02:39,199
as a community committee in open mr is

02:02:37,599 --> 02:02:40,800
an apache software foundation

02:02:39,199 --> 02:02:42,880
also you can contact me with the twitter

02:02:40,800 --> 02:02:45,440
handle handler mission in the

02:02:42,880 --> 02:02:46,080
slide here so that's a lot about me so i

02:02:45,440 --> 02:02:49,199
would like to

02:02:46,080 --> 02:02:51,040
move on to the presentation so i'm not

02:02:49,199 --> 02:02:52,719
gonna talk a lot about survey here as we

02:02:51,040 --> 02:02:54,560
are in the mainframe mini summit

02:02:52,719 --> 02:02:56,000
uh but uh would like to highlight the

02:02:54,560 --> 02:02:58,000
mission of sui

02:02:56,000 --> 02:02:59,840
so he has a mission focused on providing

02:02:58,000 --> 02:03:02,400
simple open and familiar tooling

02:02:59,840 --> 02:03:03,199
platform for cos system programs and

02:03:02,400 --> 02:03:05,520
developers

02:03:03,199 --> 02:03:06,960
i wanted to highlight this since the

02:03:05,520 --> 02:03:08,719
file trans application development

02:03:06,960 --> 02:03:10,639
project is all

02:03:08,719 --> 02:03:13,679
also about providing functionality to

02:03:10,639 --> 02:03:17,119
help ceo's programs and users

02:03:13,679 --> 02:03:19,280
and uh next i thought about giving a

02:03:17,119 --> 02:03:21,679
brief idea about the soy big picture

02:03:19,280 --> 02:03:23,840
uh we have uh soy application framework

02:03:21,679 --> 02:03:26,480
which provide the virtual

02:03:23,840 --> 02:03:27,119
desktop and we have api mediation layer

02:03:26,480 --> 02:03:29,760
and

02:03:27,119 --> 02:03:30,560
so a cli so the file trans application

02:03:29,760 --> 02:03:32,719
that i was work

02:03:30,560 --> 02:03:34,719
worked on during the server resides

02:03:32,719 --> 02:03:35,599
inside the sewer application framework

02:03:34,719 --> 02:03:39,040
as a plugin

02:03:35,599 --> 02:03:42,639
uh developed for soy virtual desktop

02:03:39,040 --> 02:03:44,560
so now we have an id about uh survey

02:03:42,639 --> 02:03:46,320
so let's have a look at the project so

02:03:44,560 --> 02:03:47,280
the main compo main requirement of

02:03:46,320 --> 02:03:49,040
developing a

02:03:47,280 --> 02:03:50,880
file trans application is providing an

02:03:49,040 --> 02:03:53,679
application which make it easy for

02:03:50,880 --> 02:03:54,480
cos users to transfer large files and

02:03:53,679 --> 02:03:56,960
data sets

02:03:54,480 --> 02:03:58,639
from mainframe and to mainframe from

02:03:56,960 --> 02:04:01,119
user's desktop by sosa

02:03:58,639 --> 02:04:02,800
in an easy secure and scalable manner so

02:04:01,119 --> 02:04:04,159
when i was applying to the project this

02:04:02,800 --> 02:04:06,159
idea impressed me because

02:04:04,159 --> 02:04:07,280
it seems to be a great addition to sui

02:04:06,159 --> 02:04:09,119
and mainframe because

02:04:07,280 --> 02:04:10,960
lots of cos users who are working at

02:04:09,119 --> 02:04:13,520
mainframe work with larger files and

02:04:10,960 --> 02:04:15,440
data sets in their day-to-day life

02:04:13,520 --> 02:04:17,360
apart from the development of file trans

02:04:15,440 --> 02:04:18,480
application i'll use fta because it

02:04:17,360 --> 02:04:20,639
seems uh

02:04:18,480 --> 02:04:22,079
short and sweet so i worked with the css

02:04:20,639 --> 02:04:24,400
team who are working

02:04:22,079 --> 02:04:26,079
on exposing the functionality of cos as

02:04:24,400 --> 02:04:28,239
sea level apis in order to

02:04:26,079 --> 02:04:29,760
fill up the missing functionality of

02:04:28,239 --> 02:04:32,639
unix files and datasets

02:04:29,760 --> 02:04:34,079
which are required for the fda to give a

02:04:32,639 --> 02:04:35,119
small light about how the soviet

02:04:34,079 --> 02:04:37,599
components are

02:04:35,119 --> 02:04:39,599
interacting with each other uh where the

02:04:37,599 --> 02:04:41,360
ft and where the ft will stand on the

02:04:39,599 --> 02:04:43,840
ecosystem let's have a look at the

02:04:41,360 --> 02:04:45,119
video architectural diagram so we have a

02:04:43,840 --> 02:04:47,520
solar virtual desktop

02:04:45,119 --> 02:04:48,159
and we have ft installed there as a

02:04:47,520 --> 02:04:49,920
plug-in

02:04:48,159 --> 02:04:51,440
uh that will be directly interacting

02:04:49,920 --> 02:04:52,719
with the server which

02:04:51,440 --> 02:04:56,400
underneath handles the communication

02:04:52,719 --> 02:04:59,360
between the plugin and the css server

02:04:56,400 --> 02:05:00,320
uh csso is the api layer which exposes

02:04:59,360 --> 02:05:03,360
the functionality of

02:05:00,320 --> 02:05:04,239
cos sc sea level api so this is an

02:05:03,360 --> 02:05:06,000
overview of

02:05:04,239 --> 02:05:08,400
how components are working with each

02:05:06,000 --> 02:05:10,320
other in soil

02:05:08,400 --> 02:05:11,599
so since we don't have much time i'm not

02:05:10,320 --> 02:05:13,840
going to do a demo here

02:05:11,599 --> 02:05:14,639
uh but with the below diagram i'll walk

02:05:13,840 --> 02:05:17,280
you through with

02:05:14,639 --> 02:05:18,320
what we have done so far so as you can

02:05:17,280 --> 02:05:20,719
see it has a

02:05:18,320 --> 02:05:21,840
file explorer uh which is a great tool

02:05:20,719 --> 02:05:23,760
developed by soy team

02:05:21,840 --> 02:05:25,520
this has the capability to visualize the

02:05:23,760 --> 02:05:26,560
uss and fbs file systems on the

02:05:25,520 --> 02:05:29,040
mainframe via

02:05:26,560 --> 02:05:30,000
a file then folder hierarchy ss3

02:05:29,040 --> 02:05:32,480
function is like

02:05:30,000 --> 02:05:34,000
cut files copy files mobile files delete

02:05:32,480 --> 02:05:36,079
files in mainframe and many

02:05:34,000 --> 02:05:38,639
more provided with the explorer i got

02:05:36,079 --> 02:05:42,560
the opportunity to work with the

02:05:38,639 --> 02:05:45,360
team to improve some functionality on

02:05:42,560 --> 02:05:47,119
file free as well so so a file prior we

02:05:45,360 --> 02:05:49,440
can call it explorer is very important

02:05:47,119 --> 02:05:51,520
feature for ft as well because

02:05:49,440 --> 02:05:52,800
in fda we care all about files and data

02:05:51,520 --> 02:05:54,480
sets and

02:05:52,800 --> 02:05:56,800
the first thing we did was to integrate

02:05:54,480 --> 02:05:58,320
the file explorer into fda

02:05:56,800 --> 02:06:01,280
and when we have the file explorer in

02:05:58,320 --> 02:06:03,440
place in the fda as you can see

02:06:01,280 --> 02:06:04,480
we have lots of metadata related to a

02:06:03,440 --> 02:06:06,000
file

02:06:04,480 --> 02:06:07,520
like the ownership path the file the

02:06:06,000 --> 02:06:09,280
size of the file the file

02:06:07,520 --> 02:06:11,520
files actual path in the mainframe this

02:06:09,280 --> 02:06:13,840
made things very easy for me to continue

02:06:11,520 --> 02:06:15,920
development

02:06:13,840 --> 02:06:17,360
next we wanted the solution where we can

02:06:15,920 --> 02:06:19,440
download large files

02:06:17,360 --> 02:06:20,560
in browser without consuming lots of

02:06:19,440 --> 02:06:24,000
memory of

02:06:20,560 --> 02:06:26,480
end users machine we tried a

02:06:24,000 --> 02:06:28,480
different libraries and finally we went

02:06:26,480 --> 02:06:31,760
with stream saver.js

02:06:28,480 --> 02:06:34,400
so it has around 10 000 weekly downloads

02:06:31,760 --> 02:06:34,960
so it seems to be doing a great job for

02:06:34,400 --> 02:06:37,920
us

02:06:34,960 --> 02:06:39,360
uh for our project so and it was very

02:06:37,920 --> 02:06:40,719
stable and it was there for a couple of

02:06:39,360 --> 02:06:43,360
years so we thought of moving forward

02:06:40,719 --> 02:06:45,280
with the streamserver.js

02:06:43,360 --> 02:06:46,480
so stream saver.js takes different

02:06:45,280 --> 02:06:49,040
approach instead of

02:06:46,480 --> 02:06:50,719
saving data in client-side storage or

02:06:49,040 --> 02:06:52,079
in-memory it creates writable stream

02:06:50,719 --> 02:06:54,159
delete directly

02:06:52,079 --> 02:06:56,000
into the file system so i'm not talking

02:06:54,159 --> 02:06:57,119
about the chrome sandbox file system or

02:06:56,000 --> 02:06:58,639
any other web storage

02:06:57,119 --> 02:07:01,199
it directly interacts with your file

02:06:58,639 --> 02:07:02,880
system still when we are

02:07:01,199 --> 02:07:04,880
testing things in different browsers

02:07:02,880 --> 02:07:08,320
after integrating the stream server

02:07:04,880 --> 02:07:09,760
dot js up to fta uh

02:07:08,320 --> 02:07:11,920
readable streams are there in all

02:07:09,760 --> 02:07:12,719
browsers but not writable streams are

02:07:11,920 --> 02:07:14,480
there so

02:07:12,719 --> 02:07:16,239
the download kit fails sometimes to

02:07:14,480 --> 02:07:17,119
overcome this we use web stream

02:07:16,239 --> 02:07:18,400
polyfills

02:07:17,119 --> 02:07:20,560
and that's how we came up with the

02:07:18,400 --> 02:07:22,320
solution for large file downloads

02:07:20,560 --> 02:07:23,679
so after a single file now we thought of

02:07:22,320 --> 02:07:24,480
giving support to download folder

02:07:23,679 --> 02:07:26,560
content

02:07:24,480 --> 02:07:28,320
and in file trans application we have

02:07:26,560 --> 02:07:30,480
defined a separate ui workflow which

02:07:28,320 --> 02:07:32,480
will inform user regarding folder

02:07:30,480 --> 02:07:33,679
uh download and download contained as

02:07:32,480 --> 02:07:35,599
tar file

02:07:33,679 --> 02:07:36,880
this was done in our tar compression

02:07:35,599 --> 02:07:40,239
since it requires

02:07:36,880 --> 02:07:41,840
less compute power uh then creating a

02:07:40,239 --> 02:07:44,159
zip folding mainframe

02:07:41,840 --> 02:07:45,920
uh complete power is always a critical

02:07:44,159 --> 02:07:47,679
factor to think since there are a lot of

02:07:45,920 --> 02:07:49,760
ongoing tasks in mainframe in the game

02:07:47,679 --> 02:07:53,280
of time so we went with

02:07:49,760 --> 02:07:56,480
uh compression and then we thought about

02:07:53,280 --> 02:07:58,320
adding more function to fta which will

02:07:56,480 --> 02:08:00,000
help users which are very obvious to

02:07:58,320 --> 02:08:01,920
having an application like this

02:08:00,000 --> 02:08:03,760
so we added support to queue downloads

02:08:01,920 --> 02:08:06,400
and the priority of downloads also

02:08:03,760 --> 02:08:07,440
also to also be maintained three states

02:08:06,400 --> 02:08:09,440
in that

02:08:07,440 --> 02:08:10,880
in progress castle had completed

02:08:09,440 --> 02:08:12,800
downloads which will give a clear

02:08:10,880 --> 02:08:15,040
separation to the user during a

02:08:12,800 --> 02:08:16,239
download activity uh the application

02:08:15,040 --> 02:08:17,920
handles these

02:08:16,239 --> 02:08:20,000
state changes in a real time after

02:08:17,920 --> 02:08:20,800
download happens and also gives you some

02:08:20,000 --> 02:08:22,719
notification

02:08:20,800 --> 02:08:24,239
on activity status as well which seems

02:08:22,719 --> 02:08:26,000
to be a very

02:08:24,239 --> 02:08:27,520
useful user friendly way of finding

02:08:26,000 --> 02:08:29,440
things and also

02:08:27,520 --> 02:08:31,760
for later usage we maintain a list of

02:08:29,440 --> 02:08:34,239
previous cancels and completed downloads

02:08:31,760 --> 02:08:36,320
in the user scope for a particular user

02:08:34,239 --> 02:08:39,679
as well these are displayed in the data

02:08:36,320 --> 02:08:41,599
tables so user can easily easily filter

02:08:39,679 --> 02:08:43,199
out previous activities as well

02:08:41,599 --> 02:08:45,360
when moving forward we thought of giving

02:08:43,199 --> 02:08:47,520
the user the ability to define the

02:08:45,360 --> 02:08:48,800
number of downloads number of history of

02:08:47,520 --> 02:08:50,719
items that they can

02:08:48,800 --> 02:08:52,239
maintain in the fda we have defined a

02:08:50,719 --> 02:08:55,280
separate ui workflow for that

02:08:52,239 --> 02:08:57,280
as you can see in the now uh fta we have

02:08:55,280 --> 02:08:57,910
separate workflow to maintain the user

02:08:57,280 --> 02:08:59,280
conflicts

02:08:57,910 --> 02:09:00,480
[Music]

02:08:59,280 --> 02:09:02,000
in the meantime you used to have the

02:09:00,480 --> 02:09:03,360
ability to see the history of search

02:09:02,000 --> 02:09:04,159
they have performed in their previous

02:09:03,360 --> 02:09:05,599
logins

02:09:04,159 --> 02:09:07,599
and in their previous interaction with

02:09:05,599 --> 02:09:10,639
the ft application as well

02:09:07,599 --> 02:09:12,239
and for end users i have to highlight

02:09:10,639 --> 02:09:13,679
that all in progress downloads will be

02:09:12,239 --> 02:09:14,320
cancelled and move into the cancel

02:09:13,679 --> 02:09:15,760
section

02:09:14,320 --> 02:09:18,000
if you close the application during

02:09:15,760 --> 02:09:19,679
download finally

02:09:18,000 --> 02:09:21,840
uh files in mainframe master would

02:09:19,679 --> 02:09:24,480
either ebc i see sk2

02:09:21,840 --> 02:09:26,880
or utf-8 encoding when downloading files

02:09:24,480 --> 02:09:29,040
it's easier to download utf-8 files

02:09:26,880 --> 02:09:31,520
it will be automatically converted but

02:09:29,040 --> 02:09:32,079
abcdic and sc2 we had to define what

02:09:31,520 --> 02:09:33,920
what

02:09:32,079 --> 02:09:35,520
is the source and targeting coding types

02:09:33,920 --> 02:09:37,679
of files uh

02:09:35,520 --> 02:09:39,199
should be in order to download to work

02:09:37,679 --> 02:09:40,000
in file transapplication we have

02:09:39,199 --> 02:09:43,280
addressed that

02:09:40,000 --> 02:09:45,199
in a ui with a very well easy and

02:09:43,280 --> 02:09:47,199
user-friendly way as well

02:09:45,199 --> 02:09:48,880
so we have achieved blocked nifty and

02:09:47,199 --> 02:09:51,599
there are some features in progress

02:09:48,880 --> 02:09:52,239
as well like uh dataset downloads

02:09:51,599 --> 02:09:54,719
currently

02:09:52,239 --> 02:09:55,440
uh that we are working with the team and

02:09:54,719 --> 02:09:58,960
uh

02:09:55,440 --> 02:10:01,199
i hope you enjoyed my presentation um

02:09:58,960 --> 02:10:03,440
to have a look at the full presentation

02:10:01,199 --> 02:10:06,320
and all the work and demo you can

02:10:03,440 --> 02:10:07,520
follow this uh youtube link and all the

02:10:06,320 --> 02:10:09,840
work

02:10:07,520 --> 02:10:10,639
relate related to uh the project and the

02:10:09,840 --> 02:10:13,119
pr

02:10:10,639 --> 02:10:14,000
are stored in uh open mainframe project

02:10:13,119 --> 02:10:16,639
internship

02:10:14,000 --> 02:10:17,599
repository as well and that's all about

02:10:16,639 --> 02:10:20,400
me uh from

02:10:17,599 --> 02:10:22,159
my ad in the file process application i

02:10:20,400 --> 02:10:22,800
would like to thank all the suite team

02:10:22,159 --> 02:10:24,800
members

02:10:22,800 --> 02:10:26,480
uh who work with me especially sean uh

02:10:24,800 --> 02:10:29,280
lenny thank you all

02:10:26,480 --> 02:10:29,280
that's all from me

02:10:29,679 --> 02:10:33,360
awesome thank you so much it was uh you

02:10:32,800 --> 02:10:34,480
know

02:10:33,360 --> 02:10:36,560
it's great to see that sort of

02:10:34,480 --> 02:10:37,840
contribution and a great collaboration

02:10:36,560 --> 02:10:39,520
with the zoe community

02:10:37,840 --> 02:10:40,880
um we can definitely tell your

02:10:39,520 --> 02:10:42,800
contributions are making a great

02:10:40,880 --> 02:10:45,840
positive impact there

02:10:42,800 --> 02:10:49,040
uh let's move on to ayush

02:10:45,840 --> 02:10:51,920
um if you want to take over and present

02:10:49,040 --> 02:10:51,920
your project work

02:10:53,280 --> 02:10:58,960
yeah sure sorry i had some trouble

02:10:56,480 --> 02:10:58,960
setting up

02:11:00,480 --> 02:11:03,840
no worries no worries whenever you're

02:11:08,840 --> 02:11:11,840
ready

02:11:12,320 --> 02:11:16,000
um is my screen visit

02:11:16,480 --> 02:11:25,840
uh i don't see it visible presently now

02:11:28,239 --> 02:11:32,960
so this this is basically the

02:11:31,840 --> 02:11:36,079
presentation that

02:11:32,960 --> 02:11:38,960
uh for the file and storage module

02:11:36,079 --> 02:11:40,719
and i am ayushi an undergraduate

02:11:38,960 --> 02:11:44,159
computer science student

02:11:40,719 --> 02:11:47,520
and from ps university bangalore india

02:11:44,159 --> 02:11:51,040
and i really love open source and

02:11:47,520 --> 02:11:54,159
i've explored a bit a lot of

02:11:51,040 --> 02:11:55,520
open source systems actually and what

02:11:54,159 --> 02:11:58,239
got me curious

02:11:55,520 --> 02:12:00,400
in the open mainframe project uh was the

02:11:58,239 --> 02:12:03,040
openmowing frames

02:12:00,400 --> 02:12:04,000
six nines reliability so i was pretty

02:12:03,040 --> 02:12:06,960
much interested

02:12:04,000 --> 02:12:08,239
in knowing the six nines like how

02:12:06,960 --> 02:12:11,760
mainframe achieved

02:12:08,239 --> 02:12:13,920
that reliability and efficiency

02:12:11,760 --> 02:12:16,639
so that's how i got to know about

02:12:13,920 --> 02:12:18,880
mainframes and one of my friends told me

02:12:16,639 --> 02:12:21,840
about the open mainframe project

02:12:18,880 --> 02:12:23,119
so then i started exploring the projects

02:12:21,840 --> 02:12:26,960
and

02:12:23,119 --> 02:12:28,639
file ansible project like

02:12:26,960 --> 02:12:30,400
i was pretty much curious about the

02:12:28,639 --> 02:12:33,440
storage systems as well so

02:12:30,400 --> 02:12:36,560
this seemed to be a quite a fit

02:12:33,440 --> 02:12:39,840
and i applied it in it and

02:12:36,560 --> 02:12:41,199
i got through lucky so previously i have

02:12:39,840 --> 02:12:44,639
also interned

02:12:41,199 --> 02:12:45,360
at about code at the prestigious summer

02:12:44,639 --> 02:12:47,520
of

02:12:45,360 --> 02:12:49,760
google summer of code program so there i

02:12:47,520 --> 02:12:52,800
did japan packaging and

02:12:49,760 --> 02:12:56,639
i got to know about linux systems

02:12:52,800 --> 02:13:00,480
pretty well and this time i got

02:12:56,639 --> 02:13:03,599
a touch of s390x architecture on which

02:13:00,480 --> 02:13:06,639
basically linux one systems work so

02:13:03,599 --> 02:13:08,159
that's how i got interested in and my

02:13:06,639 --> 02:13:11,599
mentor for the project was

02:13:08,159 --> 02:13:14,960
vincent theron and he works at wycombe

02:13:11,599 --> 02:13:17,840
infinity so

02:13:14,960 --> 02:13:18,560
that's basically about us and now i will

02:13:17,840 --> 02:13:21,119
go

02:13:18,560 --> 02:13:21,119
take you to

02:13:21,599 --> 02:13:28,079
the deck and show you the

02:13:24,880 --> 02:13:32,560
journey from how we build

02:13:28,079 --> 02:13:35,840
the system from scratch so basically

02:13:32,560 --> 02:13:38,000
uh we had to build the system for

02:13:35,840 --> 02:13:39,360
the storage ansible module for phylum

02:13:38,000 --> 02:13:42,840
guys phylum

02:13:39,360 --> 02:13:44,560
is a development is decay for managing

02:13:42,840 --> 02:13:48,079
zvm in

02:13:44,560 --> 02:13:52,800
a very simple way and it's basically

02:13:48,079 --> 02:13:55,199
a project which is being made to

02:13:52,800 --> 02:13:56,560
advance the use of zvm or make it easier

02:13:55,199 --> 02:13:59,440
to use cvm

02:13:56,560 --> 02:14:01,119
and it can do a whole lot of things like

02:13:59,440 --> 02:14:04,320
it can create gas

02:14:01,119 --> 02:14:05,119
images networks and allocate volume and

02:14:04,320 --> 02:14:07,660
all those soft

02:14:05,119 --> 02:14:10,729
sort of stuff so our work was to

02:14:07,660 --> 02:14:10,729
[Music]

02:14:10,840 --> 02:14:13,840
uh

02:14:26,719 --> 02:14:33,599
uh make it easier to allocate

02:14:30,239 --> 02:14:36,560
block storage to filo so

02:14:33,599 --> 02:14:38,400
that's where the initial name file on

02:14:36,560 --> 02:14:40,639
for the project comes in

02:14:38,400 --> 02:14:41,440
and now i'm going to tell you about

02:14:40,639 --> 02:14:43,679
ansible

02:14:41,440 --> 02:14:44,560
so and we are creating basically an

02:14:43,679 --> 02:14:47,040
ansible

02:14:44,560 --> 02:14:48,480
module or playbook to integrate the

02:14:47,040 --> 02:14:52,639
storage

02:14:48,480 --> 02:14:56,000
or basically allocate a block of storage

02:14:52,639 --> 02:14:59,280
to a piece of host

02:14:56,000 --> 02:15:02,800
or basically a block storage to a host

02:14:59,280 --> 02:15:04,719
inside zvm so that was our work and

02:15:02,800 --> 02:15:07,360
ansible is basically a configuration

02:15:04,719 --> 02:15:10,159
management tool or

02:15:07,360 --> 02:15:10,960
deployment tool which makes it easier to

02:15:10,159 --> 02:15:15,599
work above

02:15:10,960 --> 02:15:17,760
across machines and it can do

02:15:15,599 --> 02:15:18,880
a hundred machines at a time so if you

02:15:17,760 --> 02:15:21,760
want to install some

02:15:18,880 --> 02:15:23,119
package into 100 machines you can

02:15:21,760 --> 02:15:25,599
basically put

02:15:23,119 --> 02:15:26,960
all those addresses of the machines into

02:15:25,599 --> 02:15:30,560
an inventory file

02:15:26,960 --> 02:15:31,119
and run a command so that command will

02:15:30,560 --> 02:15:34,000
be run

02:15:31,119 --> 02:15:34,800
on 100 those hundreds of machines via

02:15:34,000 --> 02:15:38,000
ssh

02:15:34,800 --> 02:15:41,280
so basically for ansible uh

02:15:38,000 --> 02:15:43,760
running you need python and ssh

02:15:41,280 --> 02:15:44,400
so if you basically all the linux

02:15:43,760 --> 02:15:47,679
systems

02:15:44,400 --> 02:15:48,719
have inbuilt python in them all the

02:15:47,679 --> 02:15:52,239
distros

02:15:48,719 --> 02:15:54,880
so that's a that's a fit we got

02:15:52,239 --> 02:15:56,560
and that's why we we thought of creating

02:15:54,880 --> 02:15:59,840
or my mentor thought of creating an

02:15:56,560 --> 02:16:01,360
ansible module so now i'm gonna take you

02:15:59,840 --> 02:16:04,960
through the architecture

02:16:01,360 --> 02:16:08,400
of the project basically

02:16:04,960 --> 02:16:08,719
like the in inner details what we call

02:16:08,400 --> 02:16:11,599
it

02:16:08,719 --> 02:16:13,520
so on the left most side you can see a

02:16:11,599 --> 02:16:17,280
file on

02:16:13,520 --> 02:16:19,520
block that's basically a a file on sdk

02:16:17,280 --> 02:16:21,520
that might have a locate storage or

02:16:19,520 --> 02:16:24,239
block storage function

02:16:21,520 --> 02:16:25,360
so that function will basically do a

02:16:24,239 --> 02:16:28,639
rest call

02:16:25,360 --> 02:16:32,160
to our server which will be a post

02:16:28,639 --> 02:16:34,479
with a certain details and in return

02:16:32,160 --> 02:16:35,359
or response it will get the block

02:16:34,479 --> 02:16:37,840
storage

02:16:35,359 --> 02:16:38,639
so what we have done is we have created

02:16:37,840 --> 02:16:41,679
a server

02:16:38,639 --> 02:16:45,439
in python using flask and

02:16:41,679 --> 02:16:49,120
inside that server we pass the request

02:16:45,439 --> 02:16:52,399
to get the parameters from the body

02:16:49,120 --> 02:16:54,960
and using that we

02:16:52,399 --> 02:16:56,000
uh we run the uncivil playbooks using

02:16:54,960 --> 02:16:58,960
ansible runner

02:16:56,000 --> 02:17:00,800
so basically a playbook or a module so a

02:16:58,960 --> 02:17:03,599
module

02:17:00,800 --> 02:17:04,240
is basically doing the work and playbook

02:17:03,599 --> 02:17:07,679
is written

02:17:04,240 --> 02:17:08,719
on top of the module so what playbooks

02:17:07,679 --> 02:17:11,359
we have written

02:17:08,719 --> 02:17:12,240
uh these will have a general sense or a

02:17:11,359 --> 02:17:15,359
general

02:17:12,240 --> 02:17:17,200
configuration like the first one

02:17:15,359 --> 02:17:19,040
first step in playbook would be to make

02:17:17,200 --> 02:17:22,399
a volume and then

02:17:19,040 --> 02:17:23,519
map it to the host and whatever

02:17:22,399 --> 02:17:25,920
variables we need

02:17:23,519 --> 02:17:26,719
so that will be taken out and returned

02:17:25,920 --> 02:17:29,280
to the

02:17:26,719 --> 02:17:30,240
phi long project so what our playbook

02:17:29,280 --> 02:17:33,599
does is

02:17:30,240 --> 02:17:37,760
it contacts the storage via rest call

02:17:33,599 --> 02:17:38,880
or ssh so it contacts the storage and

02:17:37,760 --> 02:17:41,200
gets the storage

02:17:38,880 --> 02:17:43,280
and do all the necessary things like

02:17:41,200 --> 02:17:45,679
mapping the storage to the host

02:17:43,280 --> 02:17:46,319
and whatever variables we need from the

02:17:45,679 --> 02:17:49,599
storage

02:17:46,319 --> 02:17:53,200
so those are pulled from the storage

02:17:49,599 --> 02:17:55,040
and then from then those are passed to

02:17:53,200 --> 02:17:58,639
the file on

02:17:55,040 --> 02:17:59,200
file longer project so basically uh as i

02:17:58,639 --> 02:18:02,479
told you

02:17:59,200 --> 02:18:06,160
our playbook can contact this storage in

02:18:02,479 --> 02:18:07,280
this case we were using ibm uh ds8k or

02:18:06,160 --> 02:18:09,599
fs8k

02:18:07,280 --> 02:18:11,599
you can use any of the storage just you

02:18:09,599 --> 02:18:14,639
need to create a

02:18:11,599 --> 02:18:18,080
a general playbook for that storage and

02:18:14,639 --> 02:18:21,200
you need to place the playbook there

02:18:18,080 --> 02:18:24,479
then it works like a magic

02:18:21,200 --> 02:18:26,559
so as i told you about uh

02:18:24,479 --> 02:18:27,679
our server talking to the storage there

02:18:26,559 --> 02:18:31,519
are two ways

02:18:27,679 --> 02:18:34,559
ssh and rest api so ibm ds 8k

02:18:31,519 --> 02:18:37,519
has both the functions enabled so mostly

02:18:34,559 --> 02:18:38,399
many of the storage systems do have res

02:18:37,519 --> 02:18:40,800
apis

02:18:38,399 --> 02:18:42,800
so it's pretty easy to contact through

02:18:40,800 --> 02:18:43,679
them so we have enabled both the modes

02:18:42,800 --> 02:18:46,479
in our project

02:18:43,679 --> 02:18:46,960
ssh and rest api so you can pretty much

02:18:46,479 --> 02:18:50,639
use

02:18:46,960 --> 02:18:53,519
both of them and contact or

02:18:50,639 --> 02:18:54,160
create storage in any of the storages

02:18:53,519 --> 02:18:58,399
like

02:18:54,160 --> 02:19:00,800
uh dell emc and etc

02:18:58,399 --> 02:19:01,840
so basically what parameters you need to

02:19:00,800 --> 02:19:05,760
pass

02:19:01,840 --> 02:19:09,200
through rest call to create a storage so

02:19:05,760 --> 02:19:09,840
in our case phylum needed to create a

02:19:09,200 --> 02:19:13,120
storage

02:19:09,840 --> 02:19:16,160
so we need to pass hose id size

02:19:13,120 --> 02:19:19,040
pool so basically host id is the

02:19:16,160 --> 02:19:20,719
id of the host what we are running and

02:19:19,040 --> 02:19:24,000
the size of the storage

02:19:20,719 --> 02:19:26,240
and the pool is basically from what pool

02:19:24,000 --> 02:19:29,120
you need to create the storage

02:19:26,240 --> 02:19:30,080
and you need to pass those in a form of

02:19:29,120 --> 02:19:33,439
json

02:19:30,080 --> 02:19:36,880
and you will get a reply in json

02:19:33,439 --> 02:19:39,599
with the parameters of scuzzy learn id

02:19:36,880 --> 02:19:40,960
which is the storage block attached to

02:19:39,599 --> 02:19:43,679
the host id

02:19:40,960 --> 02:19:45,359
host basically and wwpn which is the

02:19:43,679 --> 02:19:46,080
unique worldwide port number of the

02:19:45,359 --> 02:19:49,200
storage

02:19:46,080 --> 02:19:52,000
to map it back to the host so

02:19:49,200 --> 02:19:53,520
that's basically the inputs and outputs

02:19:52,000 --> 02:19:55,920
we pass into the server

02:19:53,520 --> 02:19:56,560
and how does server basically do does

02:19:55,920 --> 02:19:59,680
that

02:19:56,560 --> 02:20:01,920
so as we have seen like

02:19:59,680 --> 02:20:03,040
server has a playbook which will create

02:20:01,920 --> 02:20:06,640
a mac uh

02:20:03,040 --> 02:20:07,600
create a volume then map the volume back

02:20:06,640 --> 02:20:10,479
to the host

02:20:07,600 --> 02:20:11,040
and pull out the variables what we need

02:20:10,479 --> 02:20:13,439
so

02:20:11,040 --> 02:20:15,280
this is all done in our server using

02:20:13,439 --> 02:20:17,760
ansible runner package

02:20:15,280 --> 02:20:19,200
uh this is basically a package

02:20:17,760 --> 02:20:22,880
equivalent to

02:20:19,200 --> 02:20:26,319
uh aws so awx

02:20:22,880 --> 02:20:29,359
ansible awx is a commercial

02:20:26,319 --> 02:20:30,240
component to basically handle rest apis

02:20:29,359 --> 02:20:33,040
so

02:20:30,240 --> 02:20:35,200
so ansible runner is basically the open

02:20:33,040 --> 02:20:37,760
source part of it or the

02:20:35,200 --> 02:20:39,040
or the core part of it so using that

02:20:37,760 --> 02:20:40,399
ansible runner we are running the

02:20:39,040 --> 02:20:44,399
playbooks

02:20:40,399 --> 02:20:45,120
and basically our playbooks execute on

02:20:44,399 --> 02:20:48,640
the storage

02:20:45,120 --> 02:20:52,319
gets us gets our work done and

02:20:48,640 --> 02:20:54,640
we pass so ansible gives a lots of

02:20:52,319 --> 02:20:55,760
output so we need to pass the output to

02:20:54,640 --> 02:20:57,680
debug

02:20:55,760 --> 02:21:00,080
what variables we need basically so we

02:20:57,680 --> 02:21:03,359
need wwpn and scuzzil and id

02:21:00,080 --> 02:21:04,160
so we pass that and that is sent back to

02:21:03,359 --> 02:21:07,520
the

02:21:04,160 --> 02:21:10,000
uh phylum after passing

02:21:07,520 --> 02:21:13,600
so basically we need to and for running

02:21:10,000 --> 02:21:15,760
the playbook we need to give the storage

02:21:13,600 --> 02:21:18,640
uh address as well so that's given in

02:21:15,760 --> 02:21:18,640
the inventory file

02:21:18,880 --> 02:21:25,439
so that's basically it and if

02:21:22,560 --> 02:21:26,080
any one of you have any queries related

02:21:25,439 --> 02:21:29,200
to the project

02:21:26,080 --> 02:21:32,479
you can ping me or vinnie

02:21:29,200 --> 02:21:35,520
my mentor as well and the github repo

02:21:32,479 --> 02:21:37,920
for the project is easily accessible

02:21:35,520 --> 02:21:39,359
from the open mainframe project

02:21:37,920 --> 02:21:41,840
repository and

02:21:39,359 --> 02:21:41,840
here's a link

02:21:42,880 --> 02:21:49,200
yeah so that's it from my side

02:21:46,319 --> 02:21:49,680
john over to you awesome thank you so

02:21:49,200 --> 02:21:52,479
much

02:21:49,680 --> 02:21:54,160
ayushu it's great seeing ansible and the

02:21:52,479 --> 02:21:55,359
failing project come together i think

02:21:54,160 --> 02:21:57,280
that's a great

02:21:55,359 --> 02:21:58,720
it's a great value proposition to help

02:21:57,280 --> 02:22:01,840
connect to zvm

02:21:58,720 --> 02:22:04,560
um which is the um you know stalwart

02:22:01,840 --> 02:22:05,359
uh virtual machine technology in the z

02:22:04,560 --> 02:22:07,920
world

02:22:05,359 --> 02:22:09,680
um in the mainframe world um back to

02:22:07,920 --> 02:22:11,600
modern tooling like ansible i know that

02:22:09,680 --> 02:22:12,960
there's a ton of interest in that space

02:22:11,600 --> 02:22:14,560
here and it's great to see a project

02:22:12,960 --> 02:22:16,880
that's that's kicking this off

02:22:14,560 --> 02:22:19,040
um and definitely look forward to where

02:22:16,880 --> 02:22:20,479
this with it where this is to go and

02:22:19,040 --> 02:22:20,880
hopefully a lot of this work is making

02:22:20,479 --> 02:22:24,160
itself

02:22:20,880 --> 02:22:27,359
upstream in feylong

02:22:24,160 --> 02:22:30,399
so uh i want to move next uh

02:22:27,359 --> 02:22:34,319
to you're welcome next to ayush uh

02:22:30,399 --> 02:22:36,880
shoot it um oh yeah that's right

02:22:34,319 --> 02:22:37,920
can you hear me i can i can if you want

02:22:36,880 --> 02:22:40,399
to present your screen

02:22:37,920 --> 02:22:40,399
oh yeah

02:22:47,439 --> 02:22:51,840
uh all right so is my screen visible

02:22:52,000 --> 02:22:59,040
it is ah awesome

02:22:55,200 --> 02:23:00,000
ah so uh so just to start us off uh my

02:22:59,040 --> 02:23:02,720
name is ayush

02:23:00,000 --> 02:23:04,000
i was an omp mentee for four months

02:23:02,720 --> 02:23:06,560
working with james caffrey

02:23:04,000 --> 02:23:07,760
on the ade project uh over the course of

02:23:06,560 --> 02:23:09,120
the next few minutes i'll try to

02:23:07,760 --> 02:23:11,520
summarize whatever i did

02:23:09,120 --> 02:23:13,520
uh how this uh this particular project

02:23:11,520 --> 02:23:16,399
fits into the grand scheme of things

02:23:13,520 --> 02:23:18,080
and uh what what you plan to do with ad

02:23:16,399 --> 02:23:21,200
in the coming future

02:23:18,080 --> 02:23:22,960
so uh just for some reference uh like i

02:23:21,200 --> 02:23:24,800
said my name is ayush i

02:23:22,960 --> 02:23:26,960
am a recent computer science computer

02:23:24,800 --> 02:23:27,520
science graduate uh you can reach me on

02:23:26,960 --> 02:23:29,600
linkedin

02:23:27,520 --> 02:23:31,359
over this particular handle i'm also

02:23:29,600 --> 02:23:33,040
pretty active on twitter

02:23:31,359 --> 02:23:34,720
and i've been involved with open source

02:23:33,040 --> 02:23:36,960
software development for

02:23:34,720 --> 02:23:38,000
uh pretty much uh three years now ever

02:23:36,960 --> 02:23:41,040
since i uh

02:23:38,000 --> 02:23:42,960
started my sophomore year uh

02:23:41,040 --> 02:23:44,080
i've previously been a google summer of

02:23:42,960 --> 02:23:46,240
course student uh

02:23:44,080 --> 02:23:47,680
and uh with focus mostly on machine

02:23:46,240 --> 02:23:49,520
learning based technologies

02:23:47,680 --> 02:23:51,920
uh which is kind of why my interest will

02:23:49,520 --> 02:23:55,040
speed uh in in ade because

02:23:51,920 --> 02:23:56,319
i found since entire concept of using uh

02:23:55,040 --> 02:23:58,240
data science

02:23:56,319 --> 02:24:00,240
uh for anomaly prediction to be pretty

02:23:58,240 --> 02:24:03,439
cool so i'll just start off with

02:24:00,240 --> 02:24:05,280
what ada is and uh naturally uh

02:24:03,439 --> 02:24:06,800
the first question that we need to

02:24:05,280 --> 02:24:10,000
address uh in order to

02:24:06,800 --> 02:24:12,640
have a clear picture is what is ade so

02:24:10,000 --> 02:24:15,439
it e stands for anomaly detection engine

02:24:12,640 --> 02:24:15,760
and the name is pretty self-explanatory

02:24:15,439 --> 02:24:18,640
but

02:24:15,760 --> 02:24:20,080
uh just to give you some idea uh this is

02:24:18,640 --> 02:24:21,840
a project which is uh

02:24:20,080 --> 02:24:23,439
supported by the open mainframe project

02:24:21,840 --> 02:24:26,399
it's been an active project for about

02:24:23,439 --> 02:24:28,640
uh three to four years now and uh this

02:24:26,399 --> 02:24:30,240
project uses uh the idea behind this is

02:24:28,640 --> 02:24:33,439
to use a statistical learning

02:24:30,240 --> 02:24:36,000
and uh unsupervised learning uh to learn

02:24:33,439 --> 02:24:36,640
useful trends uh from large or huge

02:24:36,000 --> 02:24:39,120
amounts of

02:24:36,640 --> 02:24:39,920
log data and then use this acquired

02:24:39,120 --> 02:24:42,080
information

02:24:39,920 --> 02:24:43,680
during inference time to predict if some

02:24:42,080 --> 02:24:45,680
kind of lock might cause anomalous

02:24:43,680 --> 02:24:48,479
behavior in our system

02:24:45,680 --> 02:24:49,280
but that's that's kind of what ade does

02:24:48,479 --> 02:24:51,760
at the moment

02:24:49,280 --> 02:24:52,640
uh ate supports two formats of linux

02:24:51,760 --> 02:24:56,399
syslogs

02:24:52,640 --> 02:24:58,800
rfc 3164 and rfc 5424

02:24:56,399 --> 02:25:00,880
my project was to expand support from

02:24:58,800 --> 02:25:02,560
justice logs to more complex

02:25:00,880 --> 02:25:04,880
middleware logs such as spark in this

02:25:02,560 --> 02:25:07,760
case so spark logs are

02:25:04,880 --> 02:25:09,439
comparatively a bit tougher to deal with

02:25:07,760 --> 02:25:10,160
and that's mostly because they are very

02:25:09,439 --> 02:25:13,280
dense

02:25:10,160 --> 02:25:16,640
and a way way dirty because

02:25:13,280 --> 02:25:18,160
they don't have a common pattern

02:25:16,640 --> 02:25:19,920
and that kind of makes this problem

02:25:18,160 --> 02:25:22,080
really difficult

02:25:19,920 --> 02:25:23,520
but the first question that we should

02:25:22,080 --> 02:25:24,640
ask ourselves is the next question we

02:25:23,520 --> 02:25:27,040
should ask ourselves is

02:25:24,640 --> 02:25:28,080
why exactly do we need ad right so these

02:25:27,040 --> 02:25:30,479
are just some of the

02:25:28,080 --> 02:25:32,240
uh news excerpts taken out from leading

02:25:30,479 --> 02:25:34,319
media sources that are highlighting

02:25:32,240 --> 02:25:36,880
why software failures have been a major

02:25:34,319 --> 02:25:39,280
pain uh in the industry

02:25:36,880 --> 02:25:41,200
uh these these particular failures are

02:25:39,280 --> 02:25:42,399
really hard to deal with mostly because

02:25:41,200 --> 02:25:45,600
most of them are

02:25:42,399 --> 02:25:48,000
uh are at a very great scale and

02:25:45,600 --> 02:25:49,200
they cause uh massive delays in terms of

02:25:48,000 --> 02:25:51,680
time loss of report

02:25:49,200 --> 02:25:52,800
loss of uh resources such as money and

02:25:51,680 --> 02:25:55,920
most importantly

02:25:52,800 --> 02:25:57,439
loss of data and the

02:25:55,920 --> 02:25:59,359
and the worst part is that people think

02:25:57,439 --> 02:26:00,960
these things is a hard job and these

02:25:59,359 --> 02:26:01,680
mistakes and these crashes are bound to

02:26:00,960 --> 02:26:03,359
happen

02:26:01,680 --> 02:26:04,880
as we develop more and more advanced

02:26:03,359 --> 02:26:07,040
software that runs on

02:26:04,880 --> 02:26:08,640
thousands of systems and serves millions

02:26:07,040 --> 02:26:10,399
of clients they're going to see more and

02:26:08,640 --> 02:26:12,080
more problems in terms of scalability in

02:26:10,399 --> 02:26:12,800
terms of small bugs that pop up in our

02:26:12,080 --> 02:26:14,479
system

02:26:12,800 --> 02:26:16,720
that that can cause that might cause

02:26:14,479 --> 02:26:18,640
these systems to crash at some point

02:26:16,720 --> 02:26:19,680
and it's like to say uh the only factory

02:26:18,640 --> 02:26:20,800
software over the software that was

02:26:19,680 --> 02:26:23,120
never written

02:26:20,800 --> 02:26:24,960
so uh we try to focus our attention on

02:26:23,120 --> 02:26:26,560
the second part of the problem that is

02:26:24,960 --> 02:26:28,000
if you can't stop the problem why don't

02:26:26,560 --> 02:26:30,319
we look at solutions

02:26:28,000 --> 02:26:31,840
to efficiently deal with the problem and

02:26:30,319 --> 02:26:32,319
that's kind of where data science comes

02:26:31,840 --> 02:26:35,200
in

02:26:32,319 --> 02:26:35,680
so data science uh as as a very broad

02:26:35,200 --> 02:26:38,479
topic

02:26:35,680 --> 02:26:40,479
uh is this kind of at the conjunction of

02:26:38,479 --> 02:26:42,399
computer science and mathematics

02:26:40,479 --> 02:26:44,000
uh the broad idea behind data science is

02:26:42,399 --> 02:26:45,760
to use uh data

02:26:44,000 --> 02:26:47,520
is to implement algorithms that learn

02:26:45,760 --> 02:26:49,600
from prevalent data

02:26:47,520 --> 02:26:50,560
and apply these uh learned uh

02:26:49,600 --> 02:26:52,240
information

02:26:50,560 --> 02:26:54,640
uh to data we've never seen before in

02:26:52,240 --> 02:26:57,359
order to predict usable

02:26:54,640 --> 02:26:58,560
uh and valuable results that's also kind

02:26:57,359 --> 02:27:01,040
of what ade does

02:26:58,560 --> 02:27:01,680
so at the moment what ad does is that it

02:27:01,040 --> 02:27:04,640
uh

02:27:01,680 --> 02:27:06,160
it learns uh various trends from data

02:27:04,640 --> 02:27:07,120
that we have already seen before which

02:27:06,160 --> 02:27:09,920
is like clock

02:27:07,120 --> 02:27:10,640
really a huge amounts of text data and

02:27:09,920 --> 02:27:12,720
then at the

02:27:10,640 --> 02:27:14,720
end and then once it is already running

02:27:12,720 --> 02:27:16,640
it can actually predict an anomaly score

02:27:14,720 --> 02:27:18,080
so it comes up with a model with a

02:27:16,640 --> 02:27:19,600
mathematical model

02:27:18,080 --> 02:27:21,680
that then helps us come up with an

02:27:19,600 --> 02:27:24,080
anomaly score that kind of assigns a

02:27:21,680 --> 02:27:25,840
number to every lock slice that we see

02:27:24,080 --> 02:27:27,040
and so the higher the anomaly score the

02:27:25,840 --> 02:27:28,960
greater are the chances of this

02:27:27,040 --> 02:27:30,720
particular lock slice

02:27:28,960 --> 02:27:33,200
being responsible for causing anomalous

02:27:30,720 --> 02:27:33,200
behavior

02:27:33,680 --> 02:27:37,200
so uh the entire the objectives of this

02:27:36,000 --> 02:27:39,920
at this project were

02:27:37,200 --> 02:27:41,040
uh broadly to add support for spark

02:27:39,920 --> 02:27:44,319
within ade

02:27:41,040 --> 02:27:47,760
it had had not really been active for uh

02:27:44,319 --> 02:27:49,439
about two years now uh and we decided

02:27:47,760 --> 02:27:50,640
that a good point to make this project

02:27:49,439 --> 02:27:52,960
active again would be to

02:27:50,640 --> 02:27:54,720
introduce spark and within this uh since

02:27:52,960 --> 02:27:56,160
that kind of increases the usability

02:27:54,720 --> 02:27:58,399
from just this lock

02:27:56,160 --> 02:27:59,359
based perspective turbo middleware and

02:27:58,399 --> 02:28:01,280
web server

02:27:59,359 --> 02:28:02,560
or high performance computing based

02:28:01,280 --> 02:28:05,520
applications

02:28:02,560 --> 02:28:07,200
uh although this uh this uh simple goal

02:28:05,520 --> 02:28:09,200
this goal looks simple enough uh there

02:28:07,200 --> 02:28:11,439
are a number of steps involved

02:28:09,200 --> 02:28:12,880
uh most importantly at the very lower

02:28:11,439 --> 02:28:15,680
level we need to develop

02:28:12,880 --> 02:28:17,120
passes that i read this these spark logs

02:28:15,680 --> 02:28:19,600
uh implement some kind of

02:28:17,120 --> 02:28:20,319
uh regex matching to extract information

02:28:19,600 --> 02:28:22,479
from these spark

02:28:20,319 --> 02:28:24,640
spark logs add masking in order to make

02:28:22,479 --> 02:28:27,680
sure that we do not

02:28:24,640 --> 02:28:29,200
include sensitive information integrate

02:28:27,680 --> 02:28:30,160
everything with the prevalent system

02:28:29,200 --> 02:28:33,359
which was developed

02:28:30,160 --> 02:28:34,640
which was developed uh before this and

02:28:33,359 --> 02:28:36,160
then at a very high level

02:28:34,640 --> 02:28:38,479
integrating these with command line

02:28:36,160 --> 02:28:40,800
arguments that can be easily toggled

02:28:38,479 --> 02:28:42,399
in order to switch between spark logs or

02:28:40,800 --> 02:28:44,720
linux's logs

02:28:42,399 --> 02:28:46,319
and then uh once most of this these

02:28:44,720 --> 02:28:47,040
things are done we need to set up the

02:28:46,319 --> 02:28:49,280
data

02:28:47,040 --> 02:28:50,960
uh train our model groups and analyze

02:28:49,280 --> 02:28:52,640
these analysis results are then written

02:28:50,960 --> 02:28:54,160
out as xml templates

02:28:52,640 --> 02:28:56,319
which can easily be viewed in a web

02:28:54,160 --> 02:28:59,680
browser to get an idea of what

02:28:56,319 --> 02:29:02,240
uh what might be going on under the hood

02:28:59,680 --> 02:29:04,640
so an example of analysis is this so

02:29:02,240 --> 02:29:07,280
this uh this particular screenshot

02:29:04,640 --> 02:29:09,600
is kind of what the analysis looks like

02:29:07,280 --> 02:29:12,319
for 10 minutes of analysis

02:29:09,600 --> 02:29:13,439
so as you can see we we have various

02:29:12,319 --> 02:29:15,760
message ids

02:29:13,439 --> 02:29:17,840
and we have assigned a number of scores

02:29:15,760 --> 02:29:20,240
to scores to this id

02:29:17,840 --> 02:29:21,520
each of these scores gets gets combined

02:29:20,240 --> 02:29:23,760
to give it a total

02:29:21,520 --> 02:29:25,439
interval anomaly score which is on the

02:29:23,760 --> 02:29:28,640
top right of this particular

02:29:25,439 --> 02:29:30,240
uh image and mind that this is just for

02:29:28,640 --> 02:29:31,120
10 minutes so this thing essentially

02:29:30,240 --> 02:29:35,200
runs for

02:29:31,120 --> 02:29:37,520
uh 6 into 24 into this 6 into 24 times

02:29:35,200 --> 02:29:38,560
per day and this number can change on

02:29:37,520 --> 02:29:42,080
the basis of how

02:29:38,560 --> 02:29:42,080
dense we want the spark locks to be

02:29:42,800 --> 02:29:46,000
uh so these four months have been a

02:29:44,560 --> 02:29:48,479
great learning curve for me

02:29:46,000 --> 02:29:49,359
uh personally i have to say that of all

02:29:48,479 --> 02:29:50,720
the things i learned

02:29:49,359 --> 02:29:52,960
it's really hard to summarize them in

02:29:50,720 --> 02:29:55,520
just four points uh but

02:29:52,960 --> 02:29:57,200
just you just to put them in one way uh

02:29:55,520 --> 02:29:59,600
first of all i think

02:29:57,200 --> 02:30:00,479
i personally think that uh designing and

02:29:59,600 --> 02:30:02,800
experimenting

02:30:00,479 --> 02:30:04,000
is a weight of a job than implementing

02:30:02,800 --> 02:30:06,960
uh implementing

02:30:04,000 --> 02:30:09,120
uh is kind of like we start off with one

02:30:06,960 --> 02:30:11,040
point and then uh usually pivot with

02:30:09,120 --> 02:30:12,800
another direction uh getting this

02:30:11,040 --> 02:30:13,680
intuition behind the way to proceed is

02:30:12,800 --> 02:30:17,200
really tough

02:30:13,680 --> 02:30:19,520
and i i really didn't think about this

02:30:17,200 --> 02:30:20,880
much earlier uh but uh i would

02:30:19,520 --> 02:30:23,120
definitely say that this is this has

02:30:20,880 --> 02:30:25,520
been a very big plus point

02:30:23,120 --> 02:30:27,120
uh second secondly obviously dealing

02:30:25,520 --> 02:30:28,160
with huge amounts of unstructured data

02:30:27,120 --> 02:30:30,840
is a hard job

02:30:28,160 --> 02:30:32,479
uh because one it's huge and second it's

02:30:30,840 --> 02:30:35,840
unstructured uh

02:30:32,479 --> 02:30:39,680
third uh communication is vital that's

02:30:35,840 --> 02:30:42,160
a pretty uh self-explanatory

02:30:39,680 --> 02:30:44,080
and fourth uh java is pretty cool i

02:30:42,160 --> 02:30:46,800
never thought i would say this i've

02:30:44,080 --> 02:30:48,399
not really been a big fan of java but i

02:30:46,800 --> 02:30:50,479
really enjoyed working with

02:30:48,399 --> 02:30:53,200
a huge code base written completely in

02:30:50,479 --> 02:30:55,600
java in this case

02:30:53,200 --> 02:30:56,880
uh so just to wrap this up i would like

02:30:55,600 --> 02:30:59,680
to thank a few people

02:30:56,880 --> 02:31:00,399
uh for uh for whatever they've been

02:30:59,680 --> 02:31:02,240
doing

02:31:00,399 --> 02:31:03,920
starting with james caffrey he's been my

02:31:02,240 --> 02:31:05,040
mentor for this project uh i would like

02:31:03,920 --> 02:31:07,280
to thank him for

02:31:05,040 --> 02:31:09,040
uh taking out time from his really busy

02:31:07,280 --> 02:31:09,600
schedule and agreeing to mentor this

02:31:09,040 --> 02:31:11,840
project

02:31:09,600 --> 02:31:12,960
i found his uh his ideas pretty

02:31:11,840 --> 02:31:15,680
insightful

02:31:12,960 --> 02:31:16,560
and uh he he helped me often when i get

02:31:15,680 --> 02:31:18,880
when he faces

02:31:16,560 --> 02:31:20,880
certain dilemmas uh john mctake and

02:31:18,880 --> 02:31:23,520
robert burke uh for running this pro

02:31:20,880 --> 02:31:25,280
uh running this entire program uh for

02:31:23,520 --> 02:31:26,800
conducting frequent calls in order to

02:31:25,280 --> 02:31:27,520
get us on board with whatever uh

02:31:26,800 --> 02:31:29,680
whatever

02:31:27,520 --> 02:31:30,640
you need to face next uh the linux

02:31:29,680 --> 02:31:32,640
foundation for

02:31:30,640 --> 02:31:34,640
uh supporting and the open mainframe

02:31:32,640 --> 02:31:37,840
project for supporting ade

02:31:34,640 --> 02:31:40,640
uh i am really looking forward to uh

02:31:37,840 --> 02:31:42,640
seeing more people use ade and this

02:31:40,640 --> 02:31:43,600
particular direction of having ad for

02:31:42,640 --> 02:31:46,160
spark locks

02:31:43,600 --> 02:31:47,280
in the coming future also i'd like to

02:31:46,160 --> 02:31:49,439
thank loghub

02:31:47,280 --> 02:31:51,040
so a log hub is a large project that was

02:31:49,439 --> 02:31:53,280
started by a lab in

02:31:51,040 --> 02:31:55,120
at the chinese university of hong kong

02:31:53,280 --> 02:31:56,319
uh they have a collection of really

02:31:55,120 --> 02:31:58,640
large data sets

02:31:56,319 --> 02:32:00,640
that they publicly provide so i like to

02:31:58,640 --> 02:32:01,200
thank them for providing me with a bunch

02:32:00,640 --> 02:32:04,160
of

02:32:01,200 --> 02:32:06,640
uh production environment based spark

02:32:04,160 --> 02:32:08,240
locks that i was able to use

02:32:06,640 --> 02:32:10,080
for testing an analysis bit of the

02:32:08,240 --> 02:32:12,080
project i've also mentioned the

02:32:10,080 --> 02:32:15,600
reference downstairs and

02:32:12,080 --> 02:32:18,240
down in if anyone wants to take a look

02:32:15,600 --> 02:32:19,760
also i'd love to have more people look

02:32:18,240 --> 02:32:23,040
at this project

02:32:19,760 --> 02:32:26,319
use it for their use case and

02:32:23,040 --> 02:32:29,760
get back to us either me or

02:32:26,319 --> 02:32:32,800
james james caffrey with suggestions or

02:32:29,760 --> 02:32:33,520
even just uh general uh ideas on this

02:32:32,800 --> 02:32:35,680
project

02:32:33,520 --> 02:32:37,600
it's all available uh hosted online

02:32:35,680 --> 02:32:40,720
available on the open mainframe project

02:32:37,600 --> 02:32:41,280
github uh yep that's about it from my

02:32:40,720 --> 02:32:44,560
side

02:32:41,280 --> 02:32:47,200
over to you john oops

02:32:44,560 --> 02:32:48,800
i'm there awesome uh it's great to see

02:32:47,200 --> 02:32:49,040
contributions of project that is one of

02:32:48,800 --> 02:32:50,640
the

02:32:49,040 --> 02:32:52,160
it was actually the first project that

02:32:50,640 --> 02:32:53,439
was in the open mainframe project it was

02:32:52,160 --> 02:32:55,680
a code donation from

02:32:53,439 --> 02:32:57,280
ibm and it's great to see that project

02:32:55,680 --> 02:32:59,439
continue to evolve and

02:32:57,280 --> 02:33:00,399
we're excited by these contributions um

02:32:59,439 --> 02:33:03,760
to see it go

02:33:00,399 --> 02:33:05,920
so we have four uh mentees i believe

02:33:03,760 --> 02:33:07,200
left from what i can tell here and we're

02:33:05,920 --> 02:33:08,479
getting close on time here so we're

02:33:07,200 --> 02:33:10,160
going to try to move through these as

02:33:08,479 --> 02:33:11,200
quickly as possible we might actually

02:33:10,160 --> 02:33:14,319
have five

02:33:11,200 --> 02:33:16,080
um i think next up is dan

02:33:14,319 --> 02:33:17,680
and again dan just try to make sure we

02:33:16,080 --> 02:33:18,880
keep it um under the four

02:33:17,680 --> 02:33:21,840
minutes just so we can have time for

02:33:18,880 --> 02:33:21,840
everyone

02:33:24,960 --> 02:33:29,680
oh dan can you hear us yeah i can hear

02:33:27,439 --> 02:33:32,720
you can you use my window

02:33:29,680 --> 02:33:36,160
yep i can see it so

02:33:32,720 --> 02:33:36,160
it shows the presentation here right

02:33:36,960 --> 02:33:43,520
correct but okay all right

02:33:40,479 --> 02:33:45,520
so uh hi everyone my name is dan

02:33:43,520 --> 02:33:48,160
pamashinkovic i am an

02:33:45,520 --> 02:33:48,960
open my friend project mentee and

02:33:48,160 --> 02:33:52,720
student

02:33:48,960 --> 02:33:55,439
uh at the university of northampton

02:33:52,720 --> 02:33:55,920
uh i've been uh this is my second year

02:33:55,439 --> 02:33:59,120
at

02:33:55,920 --> 02:34:03,840
the open method project mentorship um

02:33:59,120 --> 02:34:03,840
and my mentor is vladimir

02:34:06,560 --> 02:34:12,720
i would like to um

02:34:09,600 --> 02:34:16,000
to begin with the reasons why

02:34:12,720 --> 02:34:17,359
porting qcf to z is a good idea in the

02:34:16,000 --> 02:34:21,840
first place

02:34:17,359 --> 02:34:25,200
um so qcf um

02:34:21,840 --> 02:34:29,040
i mean kubernetes is the uh

02:34:25,200 --> 02:34:32,240
orchestrator is the best anticipator for

02:34:29,040 --> 02:34:35,040
your workload and together with uh

02:34:32,240 --> 02:34:35,680
cow foundry which is the the best friend

02:34:35,040 --> 02:34:38,720
of

02:34:35,680 --> 02:34:42,319
any developer we can bring this to you

02:34:38,720 --> 02:34:42,319
and the simplicity of both

02:34:43,200 --> 02:34:46,800
two clusters and compared kubernetes

02:34:45,280 --> 02:34:50,720
everywhere

02:34:46,800 --> 02:34:54,800
so we can we want to use uh qcf

02:34:50,720 --> 02:34:58,080
because uh less developers

02:34:54,800 --> 02:35:00,800
focus more on their on their apps

02:34:58,080 --> 02:35:02,560
and logic behind it and less on the

02:35:00,800 --> 02:35:07,120
underlying infrastructure

02:35:02,560 --> 02:35:10,240
as we know uh s4z as we know uh

02:35:07,120 --> 02:35:11,439
is the system run on the mainframes and

02:35:10,240 --> 02:35:14,240
it's

02:35:11,439 --> 02:35:16,160
it's a very good uh system for rust

02:35:14,240 --> 02:35:19,040
applications it's very performant

02:35:16,160 --> 02:35:19,600
it's full turn uh high security and so

02:35:19,040 --> 02:35:21,760
on

02:35:19,600 --> 02:35:23,359
so bringing these two together it is a

02:35:21,760 --> 02:35:26,800
no-brainer it

02:35:23,359 --> 02:35:29,840
it really does makes a lot of sense

02:35:26,800 --> 02:35:33,359
and next um

02:35:29,840 --> 02:35:37,200
i think so what have we actually done

02:35:33,359 --> 02:35:40,080
uh we have built docker images

02:35:37,200 --> 02:35:40,880
for z so z compatible compatible docker

02:35:40,080 --> 02:35:44,319
images

02:35:40,880 --> 02:35:45,439
to run the cubes here saudi arabia

02:35:44,319 --> 02:35:48,479
categories

02:35:45,439 --> 02:35:48,800
the ones based on on bosch it bush is

02:35:48,479 --> 02:35:51,359
the

02:35:48,800 --> 02:35:52,560
uh it's used to deploy software packed

02:35:51,359 --> 02:35:55,760
in releases

02:35:52,560 --> 02:35:58,640
and then images for uh irony

02:35:55,760 --> 02:35:59,520
which is the new uh cube uh native

02:35:58,640 --> 02:36:03,200
scheduler

02:35:59,520 --> 02:36:06,479
for club foundry uh next we built a

02:36:03,200 --> 02:36:08,800
docker image for uh my sequel before

02:36:06,479 --> 02:36:11,840
scratch because we couldn't find

02:36:08,800 --> 02:36:14,560
an image elsewhere for 4c

02:36:11,840 --> 02:36:15,760
and about a bunch of packages and os

02:36:14,560 --> 02:36:18,960
images

02:36:15,760 --> 02:36:21,280
built on opensuse build service you can

02:36:18,960 --> 02:36:27,120
find all of these images on

02:36:21,280 --> 02:36:27,120
the quirks uh we see rippond overhaul

02:36:27,520 --> 02:36:33,920
so next um how

02:36:30,800 --> 02:36:35,760
have we built the docker images to build

02:36:33,920 --> 02:36:39,439
all the core images

02:36:35,760 --> 02:36:42,640
and to make qcfs actually deploy on z

02:36:39,439 --> 02:36:46,240
we first had to have

02:36:42,640 --> 02:36:49,760
um to build a system

02:36:46,240 --> 02:36:52,960
and some tooling so we used jenkins

02:36:49,760 --> 02:36:56,080
as a build server and created

02:36:52,960 --> 02:36:59,920
jobs for all the images

02:36:56,080 --> 02:37:01,040
first we used a script that we made last

02:36:59,920 --> 02:37:04,399
year

02:37:01,040 --> 02:37:06,000
on the open method project mentorship uh

02:37:04,399 --> 02:37:07,520
which can take any voice who lives

02:37:06,000 --> 02:37:09,680
tested

02:37:07,520 --> 02:37:12,240
and then changes the packages according

02:37:09,680 --> 02:37:15,200
accordingly to the errors we get

02:37:12,240 --> 02:37:17,200
next one once the errors are fixed and

02:37:15,200 --> 02:37:20,640
the package

02:37:17,200 --> 02:37:23,200
successfully built on z we used fisal4z

02:37:20,640 --> 02:37:24,640
which we have also built last year uh to

02:37:23,200 --> 02:37:26,880
create the docker images

02:37:24,640 --> 02:37:29,280
after that we push uh it to the docker

02:37:26,880 --> 02:37:32,080
hub quartz the constructor

02:37:29,280 --> 02:37:34,000
so next onto testing this is how we make

02:37:32,080 --> 02:37:35,200
sure uh all the applications are working

02:37:34,000 --> 02:37:38,319
as expected

02:37:35,200 --> 02:37:41,280
on cues on z so first

02:37:38,319 --> 02:37:43,520
we deployed qcf using helm and star

02:37:41,280 --> 02:37:46,720
debugging

02:37:43,520 --> 02:37:48,080
we use k9s which is an awesome tool

02:37:46,720 --> 02:37:51,439
which helped us a lot uh

02:37:48,080 --> 02:37:53,840
debugging uh all the things

02:37:51,439 --> 02:37:55,600
related to kubernetes so you can have

02:37:53,840 --> 02:37:56,640
logs you can describe a body you can do

02:37:55,600 --> 02:37:59,120
anything

02:37:56,640 --> 02:38:00,319
and it has a nice interface uh following

02:37:59,120 --> 02:38:03,359
that we

02:38:00,319 --> 02:38:07,280
will fix the errors and build

02:38:03,359 --> 02:38:10,880
all the images again uh the workflow is

02:38:07,280 --> 02:38:13,760
described uh earlier with jenkins

02:38:10,880 --> 02:38:16,000
and finally we update the um all the

02:38:13,760 --> 02:38:18,479
settings

02:38:16,000 --> 02:38:20,800
by settings i mean docker images names

02:38:18,479 --> 02:38:23,200
versions and stuff like that because

02:38:20,800 --> 02:38:25,760
uh we'll build them again and those

02:38:23,200 --> 02:38:25,760
might change

02:38:25,840 --> 02:38:30,160
so that's it for me i wanted to thank

02:38:28,640 --> 02:38:34,399
everybody at the opening

02:38:30,160 --> 02:38:37,520
project and uh lions foundation

02:38:34,399 --> 02:38:40,720
and especially my mentor which

02:38:37,520 --> 02:38:43,760
was very very helpful and

02:38:40,720 --> 02:38:47,359
from which i i learned a lot

02:38:43,760 --> 02:38:49,840
you can find us on slack on the

02:38:47,359 --> 02:38:50,960
telephony slack on the cube cf left

02:38:49,840 --> 02:38:53,520
channel

02:38:50,960 --> 02:38:55,520
uh you can if you if you want to learn

02:38:53,520 --> 02:39:00,720
more about keep cf

02:38:55,520 --> 02:39:03,359
or contributed project you can visit the

02:39:00,720 --> 02:39:06,240
repository on github and if you want to

02:39:03,359 --> 02:39:09,280
see my my work and all the files from

02:39:06,240 --> 02:39:11,200
this project on the open mfn project you

02:39:09,280 --> 02:39:14,319
can visit the

02:39:11,200 --> 02:39:17,760
repository on the screen thank you

02:39:14,319 --> 02:39:19,680
for watching awesome thank you dan

02:39:17,760 --> 02:39:21,680
uh great uh great project and great to

02:39:19,680 --> 02:39:24,160
see contributions to

02:39:21,680 --> 02:39:25,760
cloud foundry um just help support the

02:39:24,160 --> 02:39:28,399
mainframe even more

02:39:25,760 --> 02:39:29,359
moving ahead here um we have metish

02:39:28,399 --> 02:39:31,359
goplani

02:39:29,359 --> 02:39:33,120
um matisse if you want to jump in here

02:39:31,359 --> 02:39:35,359
then we have two more presentations

02:39:33,120 --> 02:39:35,359
after

02:39:36,840 --> 02:39:39,840
metish

02:39:45,680 --> 02:39:49,200
are you able to present

02:39:50,479 --> 02:39:55,200
i think you're having some audio

02:39:51,520 --> 02:39:55,200
problems we can barely hear you

02:39:58,080 --> 02:40:03,040
it's getting better um hello

02:40:01,280 --> 02:40:04,840
oh there we go there's a little bit of

02:40:03,040 --> 02:40:09,040
static but

02:40:04,840 --> 02:40:09,040
hello uh

02:40:09,280 --> 02:40:12,640
i can there's a little bit of background

02:40:11,040 --> 02:40:15,920
stuff but it seems to be a

02:40:12,640 --> 02:40:19,120
okay at the moment

02:40:15,920 --> 02:40:22,800
is it fine hello yeah this i think this

02:40:19,120 --> 02:40:22,800
i think this works can you hear us

02:40:24,880 --> 02:40:35,840
hello awesome go ahead and

02:40:28,160 --> 02:40:35,840
do your presentation okay

02:40:36,640 --> 02:40:42,319
hello everyone this is gupta and

02:40:40,240 --> 02:40:43,760
today i'm gonna present about my work

02:40:42,319 --> 02:40:46,000
which i did as a part of

02:40:43,760 --> 02:40:48,640
omg mentorship on zoe desktop

02:40:46,000 --> 02:40:50,720
application state persistence mechanism

02:40:48,640 --> 02:40:52,399
a brief background about myself so i'm

02:40:50,720 --> 02:40:53,680
currently working as a software engineer

02:40:52,399 --> 02:40:56,319
at jpmorgan chase

02:40:53,680 --> 02:40:57,279
and i'm also very interested in computer

02:40:56,319 --> 02:40:59,680
security

02:40:57,279 --> 02:41:00,479
i have been certified as an oscp osc and

02:40:59,680 --> 02:41:02,479
osw

02:41:00,479 --> 02:41:04,160
these are some cool certifications from

02:41:02,479 --> 02:41:05,840
offensive security

02:41:04,160 --> 02:41:07,200
and i pursued my computer science from

02:41:05,840 --> 02:41:09,040
mumbai university

02:41:07,200 --> 02:41:10,640
and i was also a principal developer and

02:41:09,040 --> 02:41:12,560
maintainer of an

02:41:10,640 --> 02:41:14,319
app called med student which was

02:41:12,560 --> 02:41:16,960
previously known as health savvy app

02:41:14,319 --> 02:41:18,479
and i have co-authored a paper titled

02:41:16,960 --> 02:41:20,240
animate object detection and queue

02:41:18,479 --> 02:41:22,000
ground control

02:41:20,240 --> 02:41:23,840
so why did i choose this project state

02:41:22,000 --> 02:41:25,760
persistence mechanism was an interested

02:41:23,840 --> 02:41:27,040
project provided by zoe which required

02:41:25,760 --> 02:41:28,800
the developer to be well-versed with the

02:41:27,040 --> 02:41:30,960
internal working of zoe

02:41:28,800 --> 02:41:32,479
and also provided an opportunity to

02:41:30,960 --> 02:41:34,479
contribute a project that would be

02:41:32,479 --> 02:41:37,040
consumed by many zoe apps to process

02:41:34,479 --> 02:41:38,960
their states when session expires

02:41:37,040 --> 02:41:40,800
so i thought my experience with web

02:41:38,960 --> 02:41:42,240
development and angular along with a bit

02:41:40,800 --> 02:41:43,279
of a security background would be really

02:41:42,240 --> 02:41:44,640
helpful in development of state

02:41:43,279 --> 02:41:45,200
persistence my character was very

02:41:44,640 --> 02:41:46,800
desktop

02:41:45,200 --> 02:41:49,600
considering the security aspect of the

02:41:46,800 --> 02:41:52,720
methodology involved

02:41:49,600 --> 02:41:53,520
so what was this project all about uh as

02:41:52,720 --> 02:41:55,920
you all know

02:41:53,520 --> 02:41:56,800
zoe has a lot zoe is an application

02:41:55,920 --> 02:42:00,160
framework where

02:41:56,800 --> 02:42:01,680
a lot of plugins run on top of it so

02:42:00,160 --> 02:42:03,120
web plugins running within the

02:42:01,680 --> 02:42:05,120
application framework did not have

02:42:03,120 --> 02:42:06,720
access to a secure state persistence

02:42:05,120 --> 02:42:07,600
mechanism that would allow them to

02:42:06,720 --> 02:42:10,720
restore

02:42:07,600 --> 02:42:12,399
their state on the next session login

02:42:10,720 --> 02:42:13,760
so the idea was to develop a state

02:42:12,399 --> 02:42:16,399
persistence mechanism

02:42:13,760 --> 02:42:17,680
which would allow zoe applications to be

02:42:16,399 --> 02:42:20,880
able to save their

02:42:17,680 --> 02:42:22,640
state at zoe desktop storage and

02:42:20,880 --> 02:42:24,000
persist it the next time they'll try to

02:42:22,640 --> 02:42:27,200
log

02:42:24,000 --> 02:42:30,960
so last state of that app

02:42:27,200 --> 02:42:32,720
gets restored automatically uh this is a

02:42:30,960 --> 02:42:36,000
quick overview of how this

02:42:32,720 --> 02:42:38,720
system was developed so we

02:42:36,000 --> 02:42:40,319
start with these applications so we had

02:42:38,720 --> 02:42:41,040
two types of applications on joey

02:42:40,319 --> 02:42:42,960
desktop

02:42:41,040 --> 02:42:45,120
the first one was normal desktop

02:42:42,960 --> 02:42:47,200
applications the other one were single

02:42:45,120 --> 02:42:50,240
page applications so these applications

02:42:47,200 --> 02:42:50,880
would send the data which they want to

02:42:50,240 --> 02:42:53,359
save

02:42:50,880 --> 02:42:55,520
to components such as window manager and

02:42:53,359 --> 02:42:56,319
simple window manager at regular time

02:42:55,520 --> 02:42:58,160
intervals

02:42:56,319 --> 02:43:00,160
this time interval is configurable

02:42:58,160 --> 02:43:01,520
according to the requirement of user

02:43:00,160 --> 02:43:03,279
depending on the time interval these

02:43:01,520 --> 02:43:05,120
apps would constantly keep

02:43:03,279 --> 02:43:06,640
constantly send data to window manager

02:43:05,120 --> 02:43:08,800
and simple window manager

02:43:06,640 --> 02:43:10,240
which would in turn send this data to

02:43:08,800 --> 02:43:13,680
desktop plugins

02:43:10,240 --> 02:43:16,720
or desktop storage so these this data

02:43:13,680 --> 02:43:19,040
is saved separately depending

02:43:16,720 --> 02:43:20,479
considering the authentication of the

02:43:19,040 --> 02:43:22,479
user

02:43:20,479 --> 02:43:24,240
so we have two different storages one is

02:43:22,479 --> 02:43:25,520
for app one is app based storage which

02:43:24,240 --> 02:43:26,880
is for desktop applications

02:43:25,520 --> 02:43:29,279
one is single app storage which is for

02:43:26,880 --> 02:43:31,840
single page applications

02:43:29,279 --> 02:43:32,720
on the next login attempt authentication

02:43:31,840 --> 02:43:35,359
manager would

02:43:32,720 --> 02:43:36,319
try to retrieve those application data

02:43:35,359 --> 02:43:38,319
on its own

02:43:36,319 --> 02:43:40,640
from desktop storage and would spawn

02:43:38,319 --> 02:43:42,720
applications with those data

02:43:40,640 --> 02:43:44,720
so consider a scenario where you're

02:43:42,720 --> 02:43:47,279
working on something really important

02:43:44,720 --> 02:43:49,120
and you forget to save up so either a

02:43:47,279 --> 02:43:50,960
browser crashes or you

02:43:49,120 --> 02:43:52,960
log off or a session expires or

02:43:50,960 --> 02:43:54,880
something like that so this mechanism

02:43:52,960 --> 02:43:56,160
would help you to retrieve back to the

02:43:54,880 --> 02:43:58,399
last state

02:43:56,160 --> 02:44:00,560
depending on what was saved on the zoe

02:43:58,399 --> 02:44:02,800
desktop

02:44:00,560 --> 02:44:04,720
so i got done with this project a bit

02:44:02,800 --> 02:44:06,160
early in the course of my internship so

02:44:04,720 --> 02:44:06,720
i went ahead and took some other

02:44:06,160 --> 02:44:09,520
projects

02:44:06,720 --> 02:44:10,560
so a quick overview of what those

02:44:09,520 --> 02:44:12,560
projects were

02:44:10,560 --> 02:44:14,640
so those are basically focused on

02:44:12,560 --> 02:44:15,359
improvements on xelux editor the first

02:44:14,640 --> 02:44:17,760
project was

02:44:15,359 --> 02:44:19,520
tab restore mechanism where we keep a

02:44:17,760 --> 02:44:20,960
track of all the open tabs in zilux

02:44:19,520 --> 02:44:22,560
editor and restore them on next launch

02:44:20,960 --> 02:44:23,040
this is a bit different from what we did

02:44:22,560 --> 02:44:24,800
in

02:44:23,040 --> 02:44:26,080
state persistence mechanism because in

02:44:24,800 --> 02:44:28,080
this case we're using

02:44:26,080 --> 02:44:30,160
editor storage not desktop storage so

02:44:28,080 --> 02:44:32,960
this is specific to zlx editor

02:44:30,160 --> 02:44:33,279
an enhancement to the current uh working

02:44:32,960 --> 02:44:36,080
of

02:44:33,279 --> 02:44:38,240
zlx editor we also added copy and cut

02:44:36,080 --> 02:44:39,760
operations to zlx file explorer which is

02:44:38,240 --> 02:44:42,880
embedded in zlux editor

02:44:39,760 --> 02:44:45,760
this uh project while this project got

02:44:42,880 --> 02:44:47,200
completed this would support only uss

02:44:45,760 --> 02:44:48,240
but there are plans in future to also

02:44:47,200 --> 02:44:51,040
support mds

02:44:48,240 --> 02:44:51,359
which are data centers uh these are some

02:44:51,040 --> 02:44:54,160
of

02:44:51,359 --> 02:44:55,840
um links to the links to my work or

02:44:54,160 --> 02:44:58,479
links to my pr

02:44:55,840 --> 02:44:59,760
these this is more related to state

02:44:58,479 --> 02:45:02,399
persistence mechanism

02:44:59,760 --> 02:45:03,760
which was my main project this is for

02:45:02,399 --> 02:45:05,760
tab restore part

02:45:03,760 --> 02:45:07,279
and this is for copy and cut operation

02:45:05,760 --> 02:45:10,319
this is a general

02:45:07,279 --> 02:45:13,040
work which i did all my work is

02:45:10,319 --> 02:45:14,960
has been documented and saved on of this

02:45:13,040 --> 02:45:16,720
data repository zoe desktop application

02:45:14,960 --> 02:45:18,319
state persistence mechanism

02:45:16,720 --> 02:45:20,160
uh if you go to this documentation

02:45:18,319 --> 02:45:21,840
folder you will have you will find a

02:45:20,160 --> 02:45:23,840
very detailed demo video

02:45:21,840 --> 02:45:25,200
of the actual working of the system um

02:45:23,840 --> 02:45:27,120
in notes and research you will find an

02:45:25,200 --> 02:45:28,000
architecture diagram which is a bit more

02:45:27,120 --> 02:45:30,880
detailed

02:45:28,000 --> 02:45:33,359
and all the entire link to the source

02:45:30,880 --> 02:45:35,680
code is there in the src repository

02:45:33,359 --> 02:45:36,560
if you are interested in this project uh

02:45:35,680 --> 02:45:39,359
please do check it

02:45:36,560 --> 02:45:40,479
check this out um and that's it from my

02:45:39,359 --> 02:45:42,479
site thank you so much for listening

02:45:40,479 --> 02:45:43,920
today over to you john

02:45:42,479 --> 02:45:45,760
awesome thank you so much great

02:45:43,920 --> 02:45:47,600
presentation there and great

02:45:45,760 --> 02:45:49,120
uh great seeing those contributions into

02:45:47,600 --> 02:45:52,479
the community so we have

02:45:49,120 --> 02:45:54,160
two presentations left uh zoo um

02:45:52,479 --> 02:45:57,840
if you wanna pop up next and then we

02:45:54,160 --> 02:45:57,840
have kaiser on video

02:46:08,840 --> 02:46:11,840
okay

02:46:12,560 --> 02:46:16,399
awesome whenever you're ready all right

02:46:14,800 --> 02:46:18,960
hello everyone

02:46:16,399 --> 02:46:22,399
my name is alice ali i am one of the

02:46:18,960 --> 02:46:24,800
mentees for omp mentorship 2020 program

02:46:22,399 --> 02:46:26,479
together with my mentor alex kim we were

02:46:24,800 --> 02:46:30,160
able to work on the project

02:46:26,479 --> 02:46:33,840
um zoe smf stroke rma person engine

02:46:30,160 --> 02:46:33,840
which we like to call zebra

02:46:33,920 --> 02:46:39,760
so a little about me um my name is sales

02:46:38,080 --> 02:46:41,520
like i mentioned i'm a fourth year

02:46:39,760 --> 02:46:42,960
medical student at bayern university

02:46:41,520 --> 02:46:44,960
canoe nigeria

02:46:42,960 --> 02:46:47,439
i'm a software programmer i started

02:46:44,960 --> 02:46:49,760
learning programming in 2016.

02:46:47,439 --> 02:46:50,640
so i have participated in ibm master the

02:46:49,760 --> 02:46:55,120
mainframe

02:46:50,640 --> 02:46:58,720
for the year 2017 2018 and 2019

02:46:55,120 --> 02:47:00,160
and luckily for me in 2017 i emerged as

02:46:58,720 --> 02:47:02,880
the regional winner

02:47:00,160 --> 02:47:04,960
for middle staff middle east and africa

02:47:02,880 --> 02:47:06,560
so i like to put my efforts into

02:47:04,960 --> 02:47:07,359
learning and getting certified in

02:47:06,560 --> 02:47:10,080
mainframes

02:47:07,359 --> 02:47:10,960
iot machine learning android and the

02:47:10,080 --> 02:47:13,439
cloud

02:47:10,960 --> 02:47:15,200
i also like building projects on my own

02:47:13,439 --> 02:47:17,200
especially when they are related to

02:47:15,200 --> 02:47:19,600
smart home and telemedicine

02:47:17,200 --> 02:47:20,240
so i applied for empty mentorship to get

02:47:19,600 --> 02:47:22,000
real-world

02:47:20,240 --> 02:47:23,520
real-world experience in developing

02:47:22,000 --> 02:47:25,520
software for the mainframe

02:47:23,520 --> 02:47:27,920
and also to build on what i have learned

02:47:25,520 --> 02:47:30,960
already from master the mainframe

02:47:27,920 --> 02:47:33,120
so in 2019 the final challenge for

02:47:30,960 --> 02:47:36,880
master the mainframe was on syslog

02:47:33,120 --> 02:47:39,680
syslog so when i saw another project

02:47:36,880 --> 02:47:40,399
related to system locks i decided to

02:47:39,680 --> 02:47:43,279
apply for it

02:47:40,399 --> 02:47:45,520
as for the rmf side so this is a brief

02:47:43,279 --> 02:47:47,920
description about the project

02:47:45,520 --> 02:47:49,200
so zoe as we know is a great system

02:47:47,920 --> 02:47:50,960
operations tool

02:47:49,200 --> 02:47:52,640
so one of the system programmers of

02:47:50,960 --> 02:47:55,680
performance analyzer's job

02:47:52,640 --> 02:47:57,200
is to decode smf stroke rmf report to

02:47:55,680 --> 02:47:59,040
check systems health

02:47:57,200 --> 02:48:01,040
so if you can create a generic password

02:47:59,040 --> 02:48:03,279
for smf data set to rmf

02:48:01,040 --> 02:48:05,520
this will give this analysts an

02:48:03,279 --> 02:48:07,840
opportunity to create and reuse many

02:48:05,520 --> 02:48:10,560
open source monitoring tools out there

02:48:07,840 --> 02:48:13,359
this will really make their job easier

02:48:10,560 --> 02:48:15,279
so this is the project architecture

02:48:13,359 --> 02:48:17,200
as we can see everything starts with a

02:48:15,279 --> 02:48:19,760
user's request

02:48:17,200 --> 02:48:21,760
when a user sends a request to zebra

02:48:19,760 --> 02:48:23,520
zebra will now forward the request to

02:48:21,760 --> 02:48:26,720
rmf dds server

02:48:23,520 --> 02:48:30,319
through http api gateway for rmf

02:48:26,720 --> 02:48:33,040
then rmf will now return an xml file

02:48:30,319 --> 02:48:34,160
this xml file will now be passed in

02:48:33,040 --> 02:48:36,560
zebra

02:48:34,160 --> 02:48:38,640
this rmf this xml file will now be

02:48:36,560 --> 02:48:41,520
converted into json format

02:48:38,640 --> 02:48:42,720
so at this point the json format can be

02:48:41,520 --> 02:48:45,359
returned to the user

02:48:42,720 --> 02:48:46,399
through zoe api catalog or through the

02:48:45,359 --> 02:48:48,960
browser

02:48:46,399 --> 02:48:51,040
and at the same time we we took some

02:48:48,960 --> 02:48:51,680
time to convert this json format into

02:48:51,040 --> 02:48:54,240
what we call

02:48:51,680 --> 02:48:56,319
custom primitives metrics which are then

02:48:54,240 --> 02:48:58,720
stored into prometer server

02:48:56,319 --> 02:49:00,319
then from premiere servers users can now

02:48:58,720 --> 02:49:03,760
connect to grafana

02:49:00,319 --> 02:49:03,760
and plot real-time graphs

02:49:03,840 --> 02:49:06,720
celsius i want to interrupt you i don't

02:49:05,120 --> 02:49:07,279
know you're not sharing your slides if

02:49:06,720 --> 02:49:10,479
you

02:49:07,279 --> 02:49:12,640
are talking to slides right now okay i'm

02:49:10,479 --> 02:49:15,040
so sorry i thought i was

02:49:12,640 --> 02:49:16,080
no no worries no worries we were you you

02:49:15,040 --> 02:49:19,520
were talking great and we were just

02:49:16,080 --> 02:49:22,000
trying to follow along so i apologize

02:49:19,520 --> 02:49:22,000
all right

02:49:25,760 --> 02:49:29,920
also can you share my can you see my

02:49:27,520 --> 02:49:32,560
screen now

02:49:29,920 --> 02:49:33,600
yes we can and then welcome to the

02:49:32,560 --> 02:49:37,359
grafana

02:49:33,600 --> 02:49:40,640
yeah let me get started again

02:49:37,359 --> 02:49:42,960
also hello everyone my name is sales

02:49:40,640 --> 02:49:45,200
ali i'm one of the mentors for omp

02:49:42,960 --> 02:49:47,760
mentorship program 2020

02:49:45,200 --> 02:49:48,640
together with my mentor alex kim we work

02:49:47,760 --> 02:49:52,240
on the project

02:49:48,640 --> 02:49:55,760
smf azo smf strogarama passing engine

02:49:52,240 --> 02:49:58,160
which we like to call zebra so

02:49:55,760 --> 02:50:00,080
a little about me as i mentioned my name

02:49:58,160 --> 02:50:01,920
is alice ali i'm a fourth year medical

02:50:00,080 --> 02:50:03,040
student at bayern university kanu

02:50:01,920 --> 02:50:05,279
nigeria

02:50:03,040 --> 02:50:07,359
i'm a software programmer i started

02:50:05,279 --> 02:50:11,680
programming and

02:50:07,359 --> 02:50:14,160
i started programming in 2016.

02:50:11,680 --> 02:50:17,120
i like putting my efforts into learning

02:50:14,160 --> 02:50:20,240
and getting certified in mainframes iot

02:50:17,120 --> 02:50:22,240
martial learning android and the cloud i

02:50:20,240 --> 02:50:24,240
also like a building projects

02:50:22,240 --> 02:50:26,800
during my spare time which are related

02:50:24,240 --> 02:50:29,279
to smart home and telemedicine

02:50:26,800 --> 02:50:30,880
i applied for mp mentorship to get real

02:50:29,279 --> 02:50:32,240
world experience

02:50:30,880 --> 02:50:34,240
this experience has to do with

02:50:32,240 --> 02:50:35,840
developing software on mainframes and

02:50:34,240 --> 02:50:36,960
also to build on the knowledge i have

02:50:35,840 --> 02:50:40,000
already gotten

02:50:36,960 --> 02:50:42,880
from master the mainframe

02:50:40,000 --> 02:50:44,080
so as we all know zoe is a great system

02:50:42,880 --> 02:50:45,840
operations tool

02:50:44,080 --> 02:50:47,920
and one of system programmers or

02:50:45,840 --> 02:50:50,240
performance analyzers job is to decode

02:50:47,920 --> 02:50:52,880
this smf stroke rmf report

02:50:50,240 --> 02:50:55,520
to check systems health so if you can

02:50:52,880 --> 02:50:56,560
create a generic parser for smf data set

02:50:55,520 --> 02:50:58,640
of rmf

02:50:56,560 --> 02:51:00,720
users can now have the opportunity to

02:50:58,640 --> 02:51:04,080
create stroke reuse many open source

02:51:00,720 --> 02:51:06,960
monitoring tools out there

02:51:04,080 --> 02:51:08,560
so this is the project architecture

02:51:06,960 --> 02:51:09,279
everything starts with the user's

02:51:08,560 --> 02:51:11,120
request

02:51:09,279 --> 02:51:12,960
whenever a user sends the request to

02:51:11,120 --> 02:51:16,080
zebra this request

02:51:12,960 --> 02:51:18,560
is now forwarded to rmf dds server the

02:51:16,080 --> 02:51:19,279
rmf dds server process this report and

02:51:18,560 --> 02:51:22,319
return

02:51:19,279 --> 02:51:24,080
an xml file this xml file is then

02:51:22,319 --> 02:51:26,240
converted to json

02:51:24,080 --> 02:51:27,200
this json data can now be returned to

02:51:26,240 --> 02:51:30,000
the user

02:51:27,200 --> 02:51:31,200
through the zoe api catalog or through

02:51:30,000 --> 02:51:33,040
the browser

02:51:31,200 --> 02:51:35,120
the same json data that we have

02:51:33,040 --> 02:51:35,600
converted from the xml can be stored

02:51:35,120 --> 02:51:38,720
into

02:51:35,600 --> 02:51:41,680
prometa server and then from prometheus

02:51:38,720 --> 02:51:44,000
server the user can connect to graphana

02:51:41,680 --> 02:51:44,800
another use case we made use of is

02:51:44,000 --> 02:51:49,520
converting

02:51:44,800 --> 02:51:52,240
our saving this json data into mongodb

02:51:49,520 --> 02:51:52,640
so the project use case the projects

02:51:52,240 --> 02:51:56,000
have

02:51:52,640 --> 02:51:57,920
about five use cases we have passing rmf

02:51:56,000 --> 02:52:00,399
monitor three report to json

02:51:57,920 --> 02:52:01,279
we also pass an rmf monitor y report to

02:52:00,399 --> 02:52:04,319
json

02:52:01,279 --> 02:52:05,200
we have personal rmf static xml file to

02:52:04,319 --> 02:52:07,359
json

02:52:05,200 --> 02:52:08,960
then we have saving rmf monitor 3d

02:52:07,359 --> 02:52:11,120
report to mongodb

02:52:08,960 --> 02:52:13,680
and finally plotting rmf real-time

02:52:11,120 --> 02:52:15,920
metrics with rafana

02:52:13,680 --> 02:52:16,720
so how can users access data through

02:52:15,920 --> 02:52:18,880
zebra

02:52:16,720 --> 02:52:19,920
the first option is to use restful api

02:52:18,880 --> 02:52:22,399
directly

02:52:19,920 --> 02:52:23,120
to zebra this one can be done using the

02:52:22,399 --> 02:52:26,160
browser

02:52:23,120 --> 02:52:28,000
call or postman users can also make use

02:52:26,160 --> 02:52:30,080
of zoo api mediation layer

02:52:28,000 --> 02:52:31,439
through the api catalog to access this

02:52:30,080 --> 02:52:34,399
json data

02:52:31,439 --> 02:52:35,920
and then through the mongodb if data has

02:52:34,399 --> 02:52:38,000
already been stored users can use

02:52:35,920 --> 02:52:40,479
command prompt or mongodb compass

02:52:38,000 --> 02:52:42,880
to access this data and then we have

02:52:40,479 --> 02:52:45,600
graphical data access this is mostly

02:52:42,880 --> 02:52:47,439
through grafana and then the recent one

02:52:45,600 --> 02:52:49,680
by my mentor he used viva

02:52:47,439 --> 02:52:50,880
to actually access this data directly to

02:52:49,680 --> 02:52:52,720
his phone

02:52:50,880 --> 02:52:54,960
so at this point i would like to show us

02:52:52,720 --> 02:52:57,600
a demo a simple demo on how

02:52:54,960 --> 02:52:59,200
zebra presents this data to user the

02:52:57,600 --> 02:53:02,640
first one is

02:52:59,200 --> 02:53:05,520
of the browser user need to just get

02:53:02,640 --> 02:53:08,000
in my own case i'm running this zebra

02:53:05,520 --> 02:53:09,920
local host on my pod is 3090

02:53:08,000 --> 02:53:12,800
so we have specific endpoints this

02:53:09,920 --> 02:53:15,120
endpoint is for rmf monitor 3.

02:53:12,800 --> 02:53:16,720
in this case i'm requesting for cpc

02:53:15,120 --> 02:53:20,160
reports

02:53:16,720 --> 02:53:21,600
so let me try to do that again yes this

02:53:20,160 --> 02:53:23,840
is the updated report

02:53:21,600 --> 02:53:24,880
so this is the instant time i believe it

02:53:23,840 --> 02:53:28,000
is 10

02:53:24,880 --> 02:53:30,640
it's 10 a.m now and then

02:53:28,000 --> 02:53:33,439
there are other reports to like usage or

02:53:30,640 --> 02:53:33,439
proc reports

02:53:33,920 --> 02:53:37,840
all this can be done through the browser

02:53:35,760 --> 02:53:41,680
this is

02:53:37,840 --> 02:53:44,240
there's also rml monitor 2 rmf monitor 3

02:53:41,680 --> 02:53:45,359
sorry rmf monitor 1 and then the static

02:53:44,240 --> 02:53:47,359
xml

02:53:45,359 --> 02:53:50,160
but for the sake of time i would just

02:53:47,359 --> 02:53:52,000
like to move to api mediation layer

02:53:50,160 --> 02:53:53,760
as we can see i'm also running api

02:53:52,000 --> 02:53:57,840
mediation layer locally on my

02:53:53,760 --> 02:54:00,000
system we have already embodied zebra to

02:53:57,840 --> 02:54:02,880
api mediation layer using simple

02:54:00,000 --> 02:54:05,279
onboarding without any code change

02:54:02,880 --> 02:54:06,880
this is zebra and then we have the set

02:54:05,279 --> 02:54:08,800
of apis

02:54:06,880 --> 02:54:10,720
this is from the swagger definition we

02:54:08,800 --> 02:54:12,960
have provided

02:54:10,720 --> 02:54:14,319
in this case all i need to do is execute

02:54:12,960 --> 02:54:18,880
this

02:54:14,319 --> 02:54:21,040
this now returns a reports

02:54:18,880 --> 02:54:22,000
in this case i'm using one of filters we

02:54:21,040 --> 02:54:24,080
have also uh

02:54:22,000 --> 02:54:25,920
provided filters in this case i i'm not

02:54:24,080 --> 02:54:27,120
requesting for the whole report i just

02:54:25,920 --> 02:54:30,800
want to get this

02:54:27,120 --> 02:54:31,680
cpc hdmsu value which is 365 in this

02:54:30,800 --> 02:54:34,960
case

02:54:31,680 --> 02:54:36,240
so there are also other apis that users

02:54:34,960 --> 02:54:38,240
can test

02:54:36,240 --> 02:54:40,720
like in this case i will now request for

02:54:38,240 --> 02:54:44,000
the complete cpc report

02:54:40,720 --> 02:54:47,040
this now returns the complete cpc report

02:54:44,000 --> 02:54:48,000
then moving to graphana as we can see

02:54:47,040 --> 02:54:50,720
i've already built

02:54:48,000 --> 02:54:53,760
some dashboards these are simple

02:54:50,720 --> 02:54:55,920
dashboards that i build using zebra

02:54:53,760 --> 02:54:57,200
there are some uh procedures that have

02:54:55,920 --> 02:55:00,319
to be followed like

02:54:57,200 --> 02:55:01,520
creating a data source and then finally

02:55:00,319 --> 02:55:04,800
creating a panel

02:55:01,520 --> 02:55:06,800
to get this chat but all these have been

02:55:04,800 --> 02:55:09,040
provided in the user documentation so

02:55:06,800 --> 02:55:11,840
i'll not be going through it

02:55:09,040 --> 02:55:14,319
so i'll now like to move back to the

02:55:11,840 --> 02:55:16,960
slides

02:55:14,319 --> 02:55:17,920
so finally the progress made where we

02:55:16,960 --> 02:55:20,640
were able to

02:55:17,920 --> 02:55:22,800
zebra help provide flexibility for users

02:55:20,640 --> 02:55:25,600
users can configure this uh

02:55:22,800 --> 02:55:25,920
app to make use of it to their own needs

02:55:25,600 --> 02:55:27,840
so

02:55:25,920 --> 02:55:30,720
for this configuration the configuration

02:55:27,840 --> 02:55:33,040
can be done using rest apis so we try to

02:55:30,720 --> 02:55:34,000
secure these rest apis using java web

02:55:33,040 --> 02:55:36,080
tokens

02:55:34,000 --> 02:55:38,000
then we have conversion of rmf monitor

02:55:36,080 --> 02:55:40,560
3xml report to json

02:55:38,000 --> 02:55:42,479
we have combustion of rmf monitor 1 cpc

02:55:40,560 --> 02:55:44,000
and workload reports to json

02:55:42,479 --> 02:55:46,720
and then we have importation and

02:55:44,000 --> 02:55:48,880
conversion of rmf monitor one cpu and

02:55:46,720 --> 02:55:51,359
workload xml static files

02:55:48,880 --> 02:55:53,520
to json and then we have saving arabic

02:55:51,359 --> 02:55:55,279
monitor three data to mongodb

02:55:53,520 --> 02:55:57,359
and then finally exporting custom

02:55:55,279 --> 02:55:58,960
metrics to prometheus and then finally

02:55:57,359 --> 02:56:02,640
plotted real-time charts

02:55:58,960 --> 02:56:04,399
using graphina so lessons learned

02:56:02,640 --> 02:56:05,680
actually as i've mentioned earlier i'm a

02:56:04,399 --> 02:56:07,600
medical student

02:56:05,680 --> 02:56:09,200
but i've learned a lot through this

02:56:07,600 --> 02:56:11,040
mentorship when it comes to software

02:56:09,200 --> 02:56:13,680
development

02:56:11,040 --> 02:56:14,720
for the first thing my proposal was

02:56:13,680 --> 02:56:16,880
likely garbage

02:56:14,720 --> 02:56:17,840
but my mentor was able to sign me down

02:56:16,880 --> 02:56:20,640
and show me how to

02:56:17,840 --> 02:56:22,479
write a good project plan what to look

02:56:20,640 --> 02:56:24,560
for when writing a project plan

02:56:22,479 --> 02:56:26,640
and then he has hosted design thinking

02:56:24,560 --> 02:56:28,880
sessions where i have learned a lot

02:56:26,640 --> 02:56:30,399
and then working as a team as a medical

02:56:28,880 --> 02:56:31,520
student i normally walk alone when i

02:56:30,399 --> 02:56:32,960
want to program

02:56:31,520 --> 02:56:35,439
because i don't have friends that do

02:56:32,960 --> 02:56:35,840
that around me so i normally walk alone

02:56:35,439 --> 02:56:38,000
but

02:56:35,840 --> 02:56:38,960
during this mentorship i learned okay

02:56:38,000 --> 02:56:41,040
experience is

02:56:38,960 --> 02:56:42,720
when experience is brought into team

02:56:41,040 --> 02:56:44,800
great things can be achieved like my

02:56:42,720 --> 02:56:45,840
mentor has 20 years of experience so

02:56:44,800 --> 02:56:48,080
that has speed up

02:56:45,840 --> 02:56:48,960
the development of this app and then the

02:56:48,080 --> 02:56:50,880
energy

02:56:48,960 --> 02:56:52,880
so when we have to achieve something we

02:56:50,880 --> 02:56:54,720
don't care we we spend the time

02:56:52,880 --> 02:56:56,240
needed to achieve that and even if it is

02:56:54,720 --> 02:56:57,359
during the weekends we don't normally

02:56:56,240 --> 02:57:00,000
walk in weekends

02:56:57,359 --> 02:57:01,760
but when there is need we we put in that

02:57:00,000 --> 02:57:03,279
energy to work on the weekend then like

02:57:01,760 --> 02:57:05,200
collaboration

02:57:03,279 --> 02:57:07,279
when we have issues we collaborate with

02:57:05,200 --> 02:57:10,160
other teams like diesel api

02:57:07,279 --> 02:57:11,520
mediation layer to get this running on

02:57:10,160 --> 02:57:13,680
our local host

02:57:11,520 --> 02:57:15,760
and then finally tools i have learned

02:57:13,680 --> 02:57:16,880
tools like how to use tools like github

02:57:15,760 --> 02:57:20,000
trilo docker

02:57:16,880 --> 02:57:23,840
and linux and then finally the project

02:57:20,000 --> 02:57:23,840
can be found at this url

02:57:24,560 --> 02:57:27,760
and then finally i would like to say

02:57:26,080 --> 02:57:28,880
thank you to mp for giving me this

02:57:27,760 --> 02:57:30,560
opportunity

02:57:28,880 --> 02:57:32,560
and thank you to my mentor for taking

02:57:30,560 --> 02:57:33,680
all the time just to support me through

02:57:32,560 --> 02:57:37,200
this journey

02:57:33,680 --> 02:57:38,640
thank you thank you all thank you

02:57:37,200 --> 02:57:40,319
uh definitely appreciate your

02:57:38,640 --> 02:57:42,399
presentation um

02:57:40,319 --> 02:57:45,279
and all of your work there and apologies

02:57:42,399 --> 02:57:47,840
for the uh technical difficulties

02:57:45,279 --> 02:57:48,840
um so we have one more which i'm gonna

02:57:47,840 --> 02:57:52,479
do

02:57:48,840 --> 02:57:55,520
um real quick here we have a video

02:57:52,479 --> 02:57:56,720
um from kai and i'm going to try to

02:57:55,520 --> 02:57:59,920
share my screen

02:57:56,720 --> 02:58:01,200
with that let's see if this goes oh if

02:57:59,920 --> 02:58:04,240
you could stop sharing your screen

02:58:01,200 --> 02:58:07,760
uh i'm trying to do that

02:58:04,240 --> 02:58:10,800
oh stop sharing i said it there we go

02:58:07,760 --> 02:58:14,080
all right no worries no worries

02:58:10,800 --> 02:58:16,840
all right and we're gonna try to share

02:58:14,080 --> 02:58:19,840
the sound here so we'll see how this

02:58:16,840 --> 02:58:19,840
goes

02:58:23,439 --> 02:58:34,479
this may not work

02:58:32,800 --> 02:58:36,640
all right let's see if this works here

02:58:34,479 --> 02:58:47,840
i'm going to start playing it um

02:58:36,640 --> 02:58:47,840
and we'll go from there

02:58:55,120 --> 02:59:02,080
hi everyone i'm kai wong

02:58:58,720 --> 02:59:02,720
i am a software engineering junior

02:59:02,080 --> 02:59:05,920
student

02:59:02,720 --> 02:59:09,680
from beijing institute of technology

02:59:05,920 --> 02:59:13,120
zhu hai and an open source lover

02:59:09,680 --> 02:59:14,160
i had experience in multi-programming

02:59:13,120 --> 02:59:18,000
languages

02:59:14,160 --> 02:59:22,319
like c java go javascript

02:59:18,000 --> 02:59:28,319
python and rust i love trying new stuff

02:59:22,319 --> 02:59:31,359
and making fantastic projects

02:59:28,319 --> 02:59:32,319
my freshman year i was a student

02:59:31,359 --> 02:59:35,880
participant

02:59:32,319 --> 02:59:39,840
of alibaba summer of co

02:59:35,880 --> 02:59:43,359
2019 and wrote an online gui

02:59:39,840 --> 02:59:46,800
designer for ali os things

02:59:43,359 --> 02:59:49,920
now i am a mentee of the open main

02:59:46,800 --> 02:59:53,600
thing mentorship program

02:59:49,920 --> 02:59:57,120
and i am also maintaining

02:59:53,600 --> 03:00:00,000
a pore of a sing written in gold

02:59:57,120 --> 03:00:00,800
which is an open source project of

03:00:00,000 --> 03:00:05,359
xinhua

03:00:00,800 --> 03:00:05,359
university tuna association

03:00:07,439 --> 03:00:14,800
i am enthusiast in open source

03:00:11,279 --> 03:00:18,399
experiment more i think the

03:00:14,800 --> 03:00:20,960
mental shift prep me a really good

03:00:18,399 --> 03:00:24,240
chance to learn about awesome

03:00:20,960 --> 03:00:27,760
open source project and experience

03:00:24,240 --> 03:00:31,120
modern and formal development

03:00:27,760 --> 03:00:31,439
without the mentorship it's impossible

03:00:31,120 --> 03:00:34,800
to

03:00:31,439 --> 03:00:38,160
share my idea and code all

03:00:34,800 --> 03:00:43,040
over the world main thing has

03:00:38,160 --> 03:00:46,439
transformed it over the past 65 years

03:00:43,040 --> 03:00:50,000
and still is the go-to platform for high

03:00:46,439 --> 03:00:53,200
transactional and secure computing

03:00:50,000 --> 03:00:54,880
before the mentorship i didn't know much

03:00:53,200 --> 03:00:57,600
about many things

03:00:54,880 --> 03:00:58,880
this mentorship opportunity from linux

03:00:57,600 --> 03:01:01,600
foundation

03:00:58,880 --> 03:01:03,200
will surely improve my skill about main

03:01:01,600 --> 03:01:06,319
thing

03:01:03,200 --> 03:01:09,359
what's more during the coming

03:01:06,319 --> 03:01:13,040
nighting pandemic the motor ship

03:01:09,359 --> 03:01:17,120
provide me with the opportunity to work

03:01:13,040 --> 03:01:17,120
remote so i can stay at home

03:01:18,840 --> 03:01:21,840
jvm

03:01:22,960 --> 03:01:29,600
from me feared javian prometheus

03:01:26,160 --> 03:01:33,840
its powder is not maintaining anymore

03:01:29,600 --> 03:01:36,800
felon is an open source deviant calcum

03:01:33,840 --> 03:01:38,319
projects it provides an easy way to

03:01:36,800 --> 03:01:42,560
manage every end

03:01:38,319 --> 03:01:46,960
it's suitable to improve jvm pro

03:01:42,560 --> 03:01:50,800
with promise fields exporter

03:01:46,960 --> 03:01:53,840
my project is to write a new promise

03:01:50,800 --> 03:02:02,479
from me fierce is porter for

03:01:53,840 --> 03:02:05,200
jvm mattress based on very long

03:02:02,479 --> 03:02:07,200
now i just released the second version

03:02:05,200 --> 03:02:11,200
of this

03:02:07,200 --> 03:02:15,120
porter it's available on the python

03:02:11,200 --> 03:02:18,479
package index and you can install

03:02:15,120 --> 03:02:22,560
jvm failure exported via the

03:02:18,479 --> 03:02:22,560
python package installer

03:02:23,760 --> 03:02:30,160
before the mentorship i had no clue

03:02:26,880 --> 03:02:34,000
what a main thing is or that is

03:02:30,160 --> 03:02:36,800
even existing i became a main

03:02:34,000 --> 03:02:38,720
thing software development in the

03:02:36,800 --> 03:02:42,240
mentorship

03:02:38,720 --> 03:02:45,359
the most important thing the code

03:02:42,240 --> 03:02:49,279
i learned i learned the coding soft

03:02:45,359 --> 03:02:54,800
coding and software architecture skill

03:02:49,279 --> 03:02:54,800
in the mentorship thank you for watching

03:02:57,040 --> 03:03:00,560
awesome thank you thank you kai for that

03:02:59,279 --> 03:03:02,720
great presentation

03:03:00,560 --> 03:03:03,760
and i want to thank all of you um

03:03:02,720 --> 03:03:05,680
watching this i want to thank

03:03:03,760 --> 03:03:07,840
all of you mentees you've done amazing

03:03:05,680 --> 03:03:10,240
work and made great contributions to the

03:03:07,840 --> 03:03:12,880
open source ecosystem of mainframe

03:03:10,240 --> 03:03:14,080
um definitely uh you know you can check

03:03:12,880 --> 03:03:14,800
out more at some of the links that they

03:03:14,080 --> 03:03:16,560
provided

03:03:14,800 --> 03:03:18,160
and uh they'll also be around the

03:03:16,560 --> 03:03:19,120
conference here all week um so

03:03:18,160 --> 03:03:21,200
definitely go

03:03:19,120 --> 03:03:22,560
reach out meet them um and connect with

03:03:21,200 --> 03:03:24,880
them as well

03:03:22,560 --> 03:03:28,160
thank you all um and have a great rest

03:03:24,880 --> 03:03:28,160
of open source summit europe

03:03:28,640 --> 03:03:31,200
thanks john

03:03:32,880 --> 03:03:36,000
thank you all thank you speakers uh for

03:03:34,960 --> 03:03:37,760
presenting today

03:03:36,000 --> 03:03:39,439
and just for everyone who's an attendee

03:03:37,760 --> 03:03:40,000
remember the videos will be up on

03:03:39,439 --> 03:03:54,160
youtube

03:03:40,000 --> 03:03:54,160

YouTube URL: https://www.youtube.com/watch?v=3T8HTtLFQnc


