Title: Keynote: Software Transparency and Dependability: Next Steps - Kate Stewart, Senior Director
Publication date: 2020-09-11
Playlist: Open Mainframe Summit 2020 - Virtual
Description: 
	Keynote: Software Transparency and Dependability: Next Steps - Kate Stewart, Senior Director of Strategic Programs, The Linux Foundation 

The most innovative software products today use open source projects to speed time to market and proprietary software for product differentiation.   When a vulnerability is announced, we all want to know if the software in a product will need to be updated.   Having an accurate software bill of materials that can be queried in an automatic fashion, and determine if a mitigation is needed or not, is a goal weâ€™d all like to see in place, yesterday.  This talk will provide an overview of some of the technologies and projects that are working towards making this vision a reality.
Captions: 
	00:00:00,080 --> 00:00:03,919
good morning my name is kate stewart i'm

00:00:01,839 --> 00:00:05,680
a director here at the linux foundation

00:00:03,919 --> 00:00:07,440
and i'd like to take this opportunity to

00:00:05,680 --> 00:00:08,559
give you a bit of a feel for what's

00:00:07,440 --> 00:00:09,599
coming down

00:00:08,559 --> 00:00:10,960
and some of the next steps that are

00:00:09,599 --> 00:00:12,880
merging on improving software

00:00:10,960 --> 00:00:17,199
transparency and our dependability of

00:00:12,880 --> 00:00:18,960
the whole software ecosystem

00:00:17,199 --> 00:00:20,880
um i don't think it's any surprise to

00:00:18,960 --> 00:00:22,880
any of you guys that open source is the

00:00:20,880 --> 00:00:26,160
foundation for innovation

00:00:22,880 --> 00:00:27,119
um we've been seeing most of the code

00:00:26,160 --> 00:00:29,599
bases

00:00:27,119 --> 00:00:31,039
pretty much pretty much all the software

00:00:29,599 --> 00:00:32,480
that's out there does have some open

00:00:31,039 --> 00:00:35,840
source in it

00:00:32,480 --> 00:00:36,800
and um from the black ducks analysis

00:00:35,840 --> 00:00:39,120
this year

00:00:36,800 --> 00:00:40,000
over 70 of their audited code base is

00:00:39,120 --> 00:00:43,040
actually our

00:00:40,000 --> 00:00:46,000
open source code basis um

00:00:43,040 --> 00:00:47,440
and from some of the sonotypes work um

00:00:46,000 --> 00:00:49,760
they've seen double and triple digit

00:00:47,440 --> 00:00:51,440
growth in open source components

00:00:49,760 --> 00:00:53,600
and no slowdown site and all you have to

00:00:51,440 --> 00:00:56,079
do is look at the

00:00:53,600 --> 00:00:58,079
number of repos up on github and watch

00:00:56,079 --> 00:00:59,359
them going up and out to the right

00:00:58,079 --> 00:01:00,719
there's no slowdown in sight there's

00:00:59,359 --> 00:01:02,239
lots of components out there they're

00:01:00,719 --> 00:01:06,000
doing lots of really cool things

00:01:02,239 --> 00:01:06,000
and that's what's fueling the innovation

00:01:06,080 --> 00:01:09,200
however the challenge is uh when you

00:01:08,000 --> 00:01:10,479
have all that software and it's all been

00:01:09,200 --> 00:01:12,159
assembled together how do you know

00:01:10,479 --> 00:01:15,439
what's really inside

00:01:12,159 --> 00:01:17,600
um that is becoming more and more

00:01:15,439 --> 00:01:19,040
um challenging to figure out with

00:01:17,600 --> 00:01:20,400
containers

00:01:19,040 --> 00:01:23,280
with people deploying that way with

00:01:20,400 --> 00:01:25,200
people working for the cloud

00:01:23,280 --> 00:01:26,960
the you know a lot of things on iot

00:01:25,200 --> 00:01:28,159
advice there's lots of different pieces

00:01:26,960 --> 00:01:30,079
of software that are coming together to

00:01:28,159 --> 00:01:31,759
make these wonderful solutions however

00:01:30,079 --> 00:01:33,520
do we know that all the pieces and have

00:01:31,759 --> 00:01:36,320
we've been able to identify

00:01:33,520 --> 00:01:38,240
the right ones that may have some risks

00:01:36,320 --> 00:01:41,759
or vulnerabilities associated with them

00:01:38,240 --> 00:01:43,200
so that we can mitigate

00:01:41,759 --> 00:01:44,720
one of the key technologies that's

00:01:43,200 --> 00:01:47,280
emerging here is something called a

00:01:44,720 --> 00:01:49,600
software build materials or nest bomb

00:01:47,280 --> 00:01:51,439
um this is a way of basically

00:01:49,600 --> 00:01:53,200
identifying the key

00:01:51,439 --> 00:01:54,799
components in your software that you're

00:01:53,200 --> 00:01:56,479
running and the relationship between

00:01:54,799 --> 00:01:58,640
these components

00:01:56,479 --> 00:02:00,399
uh at the heart of it is just basically

00:01:58,640 --> 00:02:02,560
you know on identifier that software

00:02:00,399 --> 00:02:05,040
and the relationships between that

00:02:02,560 --> 00:02:06,880
component and its dependencies

00:02:05,040 --> 00:02:08,399
um and some other information like these

00:02:06,880 --> 00:02:09,759
dependencies could be a library it could

00:02:08,399 --> 00:02:11,200
be modules

00:02:09,759 --> 00:02:13,440
they could be open source they could be

00:02:11,200 --> 00:02:14,239
proprietary they could be free they

00:02:13,440 --> 00:02:17,120
could be paid for

00:02:14,239 --> 00:02:18,160
you know you know what the software

00:02:17,120 --> 00:02:20,480
ecosystem has

00:02:18,160 --> 00:02:22,640
all of these components in them and we

00:02:20,480 --> 00:02:26,000
need to start to have more transparency

00:02:22,640 --> 00:02:27,360
about how they're being used so who

00:02:26,000 --> 00:02:30,560
should use an s-bomb well

00:02:27,360 --> 00:02:31,200
pretty much everyone um anyone who's

00:02:30,560 --> 00:02:34,800
really

00:02:31,200 --> 00:02:36,640
caring about improving their ability

00:02:34,800 --> 00:02:37,840
to support their software and support

00:02:36,640 --> 00:02:42,000
their customers

00:02:37,840 --> 00:02:45,120
and um being visible about using s-bombs

00:02:42,000 --> 00:02:48,080
and um is effective for differentiating

00:02:45,120 --> 00:02:49,840
in the marketplaces as well it helps you

00:02:48,080 --> 00:02:52,319
with your legal

00:02:49,840 --> 00:02:53,519
obligations with regards open source as

00:02:52,319 --> 00:02:55,200
well as proprietary but

00:02:53,519 --> 00:02:56,640
also there's contractual terms that may

00:02:55,200 --> 00:02:58,159
be included you may want to

00:02:56,640 --> 00:02:59,360
be able to query exactly which

00:02:58,159 --> 00:03:00,800
components you're using so you can

00:02:59,360 --> 00:03:02,800
adhere to those

00:03:00,800 --> 00:03:04,319
and for vulnerabilities you want to know

00:03:02,800 --> 00:03:05,840
what's there so you can understand

00:03:04,319 --> 00:03:08,080
whether or not you've got to mitigate or

00:03:05,840 --> 00:03:08,080
not

00:03:10,319 --> 00:03:14,560
so when um should it be used in an

00:03:13,519 --> 00:03:15,760
organization well

00:03:14,560 --> 00:03:17,599
pretty much anywhere through the

00:03:15,760 --> 00:03:19,360
development life cycle and deployment

00:03:17,599 --> 00:03:22,480
lifestyle for that matter

00:03:19,360 --> 00:03:24,000
um we've got a lot of open source and

00:03:22,480 --> 00:03:25,200
we've got a lot of you know executables

00:03:24,000 --> 00:03:26,959
out there that are running our modern

00:03:25,200 --> 00:03:28,959
infrastructure and being able to

00:03:26,959 --> 00:03:30,319
accurately identify which ones are there

00:03:28,959 --> 00:03:31,920
as well as

00:03:30,319 --> 00:03:33,360
um what's been tested what's not been

00:03:31,920 --> 00:03:35,680
tested

00:03:33,360 --> 00:03:36,959
these are the whole pieces of the puzzle

00:03:35,680 --> 00:03:38,000
we need to start getting our hands

00:03:36,959 --> 00:03:41,680
around

00:03:38,000 --> 00:03:41,680
and be able to track real time

00:03:42,159 --> 00:03:45,599
so how we're going to do this big

00:03:43,599 --> 00:03:47,120
question always right um we need to have

00:03:45,599 --> 00:03:49,840
some common processes and norms

00:03:47,120 --> 00:03:50,799
we need to have common data formats and

00:03:49,840 --> 00:03:52,799
um

00:03:50,799 --> 00:03:54,319
we need to have tooling to automate this

00:03:52,799 --> 00:03:55,360
because the amount of information here

00:03:54,319 --> 00:03:56,879
is just staggering

00:03:55,360 --> 00:03:58,239
it's completely overwhelming so we need

00:03:56,879 --> 00:03:58,959
to start figuring out how can we

00:03:58,239 --> 00:04:01,280
automate this

00:03:58,959 --> 00:04:02,560
and make it all available at the linux

00:04:01,280 --> 00:04:05,519
foundation

00:04:02,560 --> 00:04:07,599
we've got a variety of projects that

00:04:05,519 --> 00:04:08,879
we're working on

00:04:07,599 --> 00:04:11,519
that have been helping with these

00:04:08,879 --> 00:04:12,560
elements the first of which is open

00:04:11,519 --> 00:04:14,400
chain

00:04:12,560 --> 00:04:15,599
which started about five years ago then

00:04:14,400 --> 00:04:17,040
there's spdx which

00:04:15,599 --> 00:04:19,120
started about 10 years ago because we

00:04:17,040 --> 00:04:20,320
wanted to exchange this information

00:04:19,120 --> 00:04:21,919
and then the last year we started

00:04:20,320 --> 00:04:22,639
working on um trying to get that tooling

00:04:21,919 --> 00:04:26,080
and automation

00:04:22,639 --> 00:04:27,440
missing piece better in place so opens

00:04:26,080 --> 00:04:29,360
chains project mission

00:04:27,440 --> 00:04:30,960
was to you know establish what

00:04:29,360 --> 00:04:31,680
requirements companies can expect of

00:04:30,960 --> 00:04:33,440
each other

00:04:31,680 --> 00:04:35,520
and build the trust between companies

00:04:33,440 --> 00:04:37,680
and organizations for managing this

00:04:35,520 --> 00:04:40,080
open source and for that matter any

00:04:37,680 --> 00:04:42,080
software that they're sharing

00:04:40,080 --> 00:04:44,000
and so as the collateral is being

00:04:42,080 --> 00:04:48,000
developed um

00:04:44,000 --> 00:04:48,000
we've got the ability to um

00:04:48,080 --> 00:04:51,600
establish what the norms are of

00:04:49,520 --> 00:04:53,199
expectations and figure out how to

00:04:51,600 --> 00:04:53,840
signal that you know this is a trusted

00:04:53,199 --> 00:04:56,000
partner

00:04:53,840 --> 00:04:58,000
in your supply chain that you understand

00:04:56,000 --> 00:04:59,840
they know what they're doing

00:04:58,000 --> 00:05:01,280
and that's what openshave was focused on

00:04:59,840 --> 00:05:03,680
at the heart

00:05:01,280 --> 00:05:04,320
um what it's trying to do is make sure

00:05:03,680 --> 00:05:05,840
what's coming

00:05:04,320 --> 00:05:06,960
in from upstream you bring into your

00:05:05,840 --> 00:05:09,440
organization you've got training

00:05:06,960 --> 00:05:11,360
policies processes in place

00:05:09,440 --> 00:05:13,600
such that when you move it send it

00:05:11,360 --> 00:05:15,840
downstream or you know back up to

00:05:13,600 --> 00:05:18,240
outside of your organization you release

00:05:15,840 --> 00:05:20,160
something from your organization

00:05:18,240 --> 00:05:22,800
you have a reasonable flow and you have

00:05:20,160 --> 00:05:24,240
been able to articulate it

00:05:22,800 --> 00:05:26,800
at the heart of it there's an open chain

00:05:24,240 --> 00:05:29,360
specification um this is a very short

00:05:26,800 --> 00:05:31,840
specification it's about 10 pages

00:05:29,360 --> 00:05:33,759
um we just finished um we're in the last

00:05:31,840 --> 00:05:35,440
stages of our isos mission

00:05:33,759 --> 00:05:38,320
and so it may become a formal standard

00:05:35,440 --> 00:05:40,720
in the next near future um

00:05:38,320 --> 00:05:42,400
we've also it's been developed with a

00:05:40,720 --> 00:05:43,919
broader range of corporations

00:05:42,400 --> 00:05:45,759
and it's already been translated by

00:05:43,919 --> 00:05:49,199
volunteers in the community

00:05:45,759 --> 00:05:51,919
to chinese japanese korean portuguese

00:05:49,199 --> 00:05:54,160
spanish italian polish and german and if

00:05:51,919 --> 00:05:56,080
you don't see a language there that you

00:05:54,160 --> 00:05:59,520
speak and you want to help the project

00:05:56,080 --> 00:05:59,520
they would welcome more translations

00:06:00,400 --> 00:06:03,280
another key part of what's being

00:06:01,600 --> 00:06:04,240
effective for open chain is having a lot

00:06:03,280 --> 00:06:05,759
of

00:06:04,240 --> 00:06:07,120
reference material available for people

00:06:05,759 --> 00:06:08,080
who are trying to figure out how to use

00:06:07,120 --> 00:06:11,919
this

00:06:08,080 --> 00:06:15,120
um we've got a fair amount

00:06:11,919 --> 00:06:16,639
of um it started off we've got a fair

00:06:15,120 --> 00:06:18,800
amount of use cases already defined

00:06:16,639 --> 00:06:20,880
right now

00:06:18,800 --> 00:06:23,360
these are there and then we've also got

00:06:20,880 --> 00:06:25,919
uh support happening from

00:06:23,360 --> 00:06:27,520
um like pricewaterhouse or two are doing

00:06:25,919 --> 00:06:29,280
certifications

00:06:27,520 --> 00:06:30,400
and at the heart there's a right from

00:06:29,280 --> 00:06:31,520
the start there's been this training

00:06:30,400 --> 00:06:33,600
material that we've had

00:06:31,520 --> 00:06:34,880
um and so that came from a whole bunch

00:06:33,600 --> 00:06:36,080
of companies

00:06:34,880 --> 00:06:38,720
sharing their internal training

00:06:36,080 --> 00:06:39,759
materials and making it available to the

00:06:38,720 --> 00:06:42,560
product

00:06:39,759 --> 00:06:43,440
project uh to um in a neutral fashion so

00:06:42,560 --> 00:06:45,280
that other people

00:06:43,440 --> 00:06:46,800
have a basic understanding of what the

00:06:45,280 --> 00:06:47,840
concepts were being meant

00:06:46,800 --> 00:06:51,199
and had training they could use

00:06:47,840 --> 00:06:53,759
internally and reuse inside

00:06:51,199 --> 00:06:54,479
um this is then useful for open chain

00:06:53,759 --> 00:06:55,599
that you can go after a

00:06:54,479 --> 00:06:57,440
self-certification

00:06:55,599 --> 00:06:59,520
basically answer an online free online

00:06:57,440 --> 00:07:01,120
questionnaire about your practices

00:06:59,520 --> 00:07:02,479
internally understand where you are

00:07:01,120 --> 00:07:05,039
you can make it public or not you don't

00:07:02,479 --> 00:07:05,599
have to and if you do want to make it

00:07:05,039 --> 00:07:07,440
public

00:07:05,599 --> 00:07:10,080
and you've got you answer all the

00:07:07,440 --> 00:07:11,199
questions appropriately

00:07:10,080 --> 00:07:12,800
then you can get your open chain

00:07:11,199 --> 00:07:15,199
certification badge and use that and

00:07:12,800 --> 00:07:17,280
display that for your organization

00:07:15,199 --> 00:07:18,639
we've got a large number of corporate

00:07:17,280 --> 00:07:20,479
corporations um

00:07:18,639 --> 00:07:21,840
basically displaying their open chain

00:07:20,479 --> 00:07:24,319
certification and you can find out more

00:07:21,840 --> 00:07:27,199
about this on the website

00:07:24,319 --> 00:07:28,720
next step of how is okay what's a data

00:07:27,199 --> 00:07:32,000
format how do we exchange this what's

00:07:28,720 --> 00:07:34,400
what's the details and here spdx

00:07:32,000 --> 00:07:36,000
actually can satisfy by identifying

00:07:34,400 --> 00:07:38,000
the components as well as the

00:07:36,000 --> 00:07:41,120
relationships and we've got that

00:07:38,000 --> 00:07:44,560
so um this standard

00:07:41,120 --> 00:07:46,000
created um pretty much designed for

00:07:44,560 --> 00:07:47,199
creating the component metadata

00:07:46,000 --> 00:07:48,479
information

00:07:47,199 --> 00:07:50,800
associated with software and there's the

00:07:48,479 --> 00:07:52,319
relationships are already a part of it

00:07:50,800 --> 00:07:54,400
so you can articulate the full

00:07:52,319 --> 00:07:56,080
dependency trees and

00:07:54,400 --> 00:07:58,160
um how the information is coming

00:07:56,080 --> 00:07:59,599
together and being used um

00:07:58,160 --> 00:08:01,360
the charter for the project was to set

00:07:59,599 --> 00:08:04,560
up this data exchange

00:08:01,360 --> 00:08:08,080
and basically be able to you know have

00:08:04,560 --> 00:08:08,479
software package metadata and uh support

00:08:08,080 --> 00:08:10,479
the

00:08:08,479 --> 00:08:12,160
software supply chain processes so

00:08:10,479 --> 00:08:12,879
that's what the project was 10 years ago

00:08:12,160 --> 00:08:14,639
when we started

00:08:12,879 --> 00:08:16,720
and there's been more and more use cases

00:08:14,639 --> 00:08:19,599
over time and so there's more things

00:08:16,720 --> 00:08:21,280
that we can represent in there

00:08:19,599 --> 00:08:23,120
one of the key parts for this one is the

00:08:21,280 --> 00:08:25,039
fact that it's got an underlying model

00:08:23,120 --> 00:08:27,840
which supports the various file formats

00:08:25,039 --> 00:08:29,680
and that model lets us basically take a

00:08:27,840 --> 00:08:30,960
document in one format a human readable

00:08:29,680 --> 00:08:32,640
like a spreadsheet

00:08:30,960 --> 00:08:34,479
and then translate to one of the other

00:08:32,640 --> 00:08:36,159
ones and recently we've just finished

00:08:34,479 --> 00:08:38,240
adding in jason yaml

00:08:36,159 --> 00:08:41,839
and there's an xml variant there now too

00:08:38,240 --> 00:08:41,839
for us to work with

00:08:42,080 --> 00:08:45,440
and then the last piece is okay how do

00:08:43,519 --> 00:08:49,360
we get that common tool available

00:08:45,440 --> 00:08:50,880
how do we get that ready to use and um

00:08:49,360 --> 00:08:54,000
in the last year we've just started off

00:08:50,880 --> 00:08:55,680
act and that's letting us looking at the

00:08:54,000 --> 00:08:58,640
automated compliance tooling

00:08:55,680 --> 00:08:58,640
and so

00:08:58,800 --> 00:09:02,399
where we want to use the s palm

00:09:00,000 --> 00:09:04,160
obviously is all stages and so

00:09:02,399 --> 00:09:05,920
we need to have reference tooling to

00:09:04,160 --> 00:09:08,320
work with all these different stages for

00:09:05,920 --> 00:09:08,959
the effective exchange and we want to be

00:09:08,320 --> 00:09:10,399
able to support

00:09:08,959 --> 00:09:12,160
various use cases like compliance

00:09:10,399 --> 00:09:13,760
security export control pedigree and

00:09:12,160 --> 00:09:15,279
provenance workflows

00:09:13,760 --> 00:09:17,600
and so that's the information we need to

00:09:15,279 --> 00:09:20,000
carry forward and we need to be able to

00:09:17,600 --> 00:09:22,480
track it through this ecosystem

00:09:20,000 --> 00:09:23,920
now reference tools like okay i want

00:09:22,480 --> 00:09:24,880
until it does what i want well there's

00:09:23,920 --> 00:09:27,200
actually a whole bunch of people who

00:09:24,880 --> 00:09:29,000
want things for specific purposes

00:09:27,200 --> 00:09:32,000
and so um we've come up with a

00:09:29,000 --> 00:09:35,360
categorization as part of the ntaa work

00:09:32,000 --> 00:09:36,720
um for um what type of tool it is and

00:09:35,360 --> 00:09:38,240
are you authorizing a build are you

00:09:36,720 --> 00:09:40,800
authoring it after creation

00:09:38,240 --> 00:09:42,480
are you consuming an s bomb and doing a

00:09:40,800 --> 00:09:44,240
view or diff and analyze are you trying

00:09:42,480 --> 00:09:44,720
to transform one from one format to

00:09:44,240 --> 00:09:47,680
another

00:09:44,720 --> 00:09:49,680
or merge a bunch of them together um as

00:09:47,680 --> 00:09:51,200
their libraries apis and so forth

00:09:49,680 --> 00:09:52,720
so there's a lot of tooling that's

00:09:51,200 --> 00:09:56,320
potentially needed here and

00:09:52,720 --> 00:09:57,760
um actually for most the workflows this

00:09:56,320 --> 00:09:59,519
if we can start to satisfy that we

00:09:57,760 --> 00:10:01,920
should be getting close to letting

00:09:59,519 --> 00:10:04,640
people customize as they need to

00:10:01,920 --> 00:10:06,480
um the act projects um act as an

00:10:04,640 --> 00:10:07,760
umbrella and there's a variety of open

00:10:06,480 --> 00:10:09,440
source projects underneath it and

00:10:07,760 --> 00:10:12,480
they've all agreed to

00:10:09,440 --> 00:10:14,800
work with the common standard of spdx

00:10:12,480 --> 00:10:16,320
and some of the tools that you authored

00:10:14,800 --> 00:10:18,480
during a build

00:10:16,320 --> 00:10:20,240
others let you author after creation and

00:10:18,480 --> 00:10:21,279
then some of them let you consume and

00:10:20,240 --> 00:10:23,040
transform

00:10:21,279 --> 00:10:24,640
so this starts to cover that flow that

00:10:23,040 --> 00:10:26,079
we're looking at here of you know

00:10:24,640 --> 00:10:27,920
different workflow different cases so

00:10:26,079 --> 00:10:31,279
some of these tools are very

00:10:27,920 --> 00:10:34,640
powerful in amongst themselves um

00:10:31,279 --> 00:10:36,480
the projects are all available um online

00:10:34,640 --> 00:10:38,560
up on publicly available anyone can go

00:10:36,480 --> 00:10:41,680
look at them start to work with them

00:10:38,560 --> 00:10:44,560
and um if you need any help finding them

00:10:41,680 --> 00:10:47,519
i'm happy to direct and help you connect

00:10:44,560 --> 00:10:50,880
up with any of the key people in this

00:10:47,519 --> 00:10:52,320
so just to conclude um adopting an

00:10:50,880 --> 00:10:53,519
s-bomb is a good thing to do there's a

00:10:52,320 --> 00:10:56,000
lot of benefits

00:10:53,519 --> 00:10:57,279
um and figuring out what formats you

00:10:56,000 --> 00:10:58,560
want to be using and how you want to do

00:10:57,279 --> 00:11:00,320
it is obviously going to depend on your

00:10:58,560 --> 00:11:02,800
own organizations

00:11:00,320 --> 00:11:04,880
but benefits are there for pretty much

00:11:02,800 --> 00:11:07,760
anyone who's developing software

00:11:04,880 --> 00:11:09,040
and those it will help speed up the

00:11:07,760 --> 00:11:10,320
consideration from the developer

00:11:09,040 --> 00:11:11,519
perspective from the business

00:11:10,320 --> 00:11:12,560
perspective and from the legal

00:11:11,519 --> 00:11:16,000
perspective

00:11:12,560 --> 00:11:18,160
so hopefully the executives are happy um

00:11:16,000 --> 00:11:19,760
and so anyone who's offering software

00:11:18,160 --> 00:11:21,279
and or using it in the studio should be

00:11:19,760 --> 00:11:23,839
starting to ask for it

00:11:21,279 --> 00:11:25,360
so with that i'll just say thank you and

00:11:23,839 --> 00:11:26,959
if you've got any questions about any of

00:11:25,360 --> 00:11:32,079
the mentioned projects please feel free

00:11:26,959 --> 00:11:32,079

YouTube URL: https://www.youtube.com/watch?v=7Czz5rEX4Co


