Title: COBOL and the Modern Mainframe Movement - Jessielaine Punongbayan & Richelle Anne Craw, Broadcom
Publication date: 2020-09-17
Playlist: Open Mainframe Summit 2020 - Virtual
Description: 
	COBOL and the Modern Mainframe Movement - Jessielaine Punongbayan & Richelle Anne Craw, Broadcom 

In these unprecedented times, COBOL became part of the discussion once again, with some misgivings due to its age. How has COBOL kept up with the modern times? From our humble beginnings as a COBOL Programmer Trainee, to our experience as a System Developer, and now as part of the DevOps R&D team for the OMP Zowe project, We are first hand witnesses to how COBOL has evolved through the years. Join this session as we talk about how the technology of today can be combined with COBOL. Come to hear first hand experiences and insights of a modern mainframe developer, including how everyone is empowered to innovate and invent different mainframe solutions, and enjoy the benefits from those innovations.
Captions: 
	00:00:00,080 --> 00:00:05,200
hello my name is jesserine

00:00:03,040 --> 00:00:07,440
and i'm rochelle and girl and we're

00:00:05,200 --> 00:00:09,679
software engineers from broadca

00:00:07,440 --> 00:00:13,040
yes and today we're going to talk about

00:00:09,679 --> 00:00:16,640
kabul and the modern mainframe movement

00:00:13,040 --> 00:00:17,920
so open source tooling dominates app

00:00:16,640 --> 00:00:20,320
development

00:00:17,920 --> 00:00:21,520
and you can see it and get jenkins and

00:00:20,320 --> 00:00:24,720
visual studio

00:00:21,520 --> 00:00:26,400
that open source tools are everywhere

00:00:24,720 --> 00:00:28,240
and today we're going to discuss about

00:00:26,400 --> 00:00:31,039
kabul and how it fits

00:00:28,240 --> 00:00:31,760
in the open source world so cobalt has

00:00:31,039 --> 00:00:35,120
been

00:00:31,760 --> 00:00:37,360
around for 60 years and it's been used

00:00:35,120 --> 00:00:40,480
by enterprises all over the world

00:00:37,360 --> 00:00:41,280
but how is it coping up with the modern

00:00:40,480 --> 00:00:43,520
times and

00:00:41,280 --> 00:00:46,320
most specially the modern technology

00:00:43,520 --> 00:00:46,320
that we have today

00:00:47,120 --> 00:00:53,760
yes and for our career history

00:00:50,640 --> 00:00:54,559
we were in this global journey since the

00:00:53,760 --> 00:00:56,960
very beginning

00:00:54,559 --> 00:00:59,359
so we started off as programmer trainees

00:00:56,960 --> 00:01:01,199
in a local bank in the philippines

00:00:59,359 --> 00:01:03,600
and that's where we learned about cobol

00:01:01,199 --> 00:01:04,960
and the mainframe and how it is used in

00:01:03,600 --> 00:01:06,799
the banking industry

00:01:04,960 --> 00:01:08,960
so we became mainframe application

00:01:06,799 --> 00:01:12,799
developers and we

00:01:08,960 --> 00:01:15,680
are using all the time cobalt kicks jcl

00:01:12,799 --> 00:01:18,479
different os starting from os 390 and

00:01:15,680 --> 00:01:20,720
then moving to mvs

00:01:18,479 --> 00:01:22,560
after that we were hired as couple

00:01:20,720 --> 00:01:25,600
consultants in singapore

00:01:22,560 --> 00:01:28,799
and that's where our knowledge grew to

00:01:25,600 --> 00:01:32,479
z os db2 mq and

00:01:28,799 --> 00:01:35,840
how the european backing system works

00:01:32,479 --> 00:01:39,119
and that's really our first um

00:01:35,840 --> 00:01:41,759
modern interface experience

00:01:39,119 --> 00:01:42,640
and that's really our first real

00:01:41,759 --> 00:01:45,759
experience

00:01:42,640 --> 00:01:46,640
using modern web services to view batch

00:01:45,759 --> 00:01:49,759
schedules

00:01:46,640 --> 00:01:52,799
and cobble programs aside from just

00:01:49,759 --> 00:01:55,759
pure 3270 screens so

00:01:52,799 --> 00:01:57,040
we switched gears and then we moved to

00:01:55,759 --> 00:01:59,360
system operations

00:01:57,040 --> 00:02:00,159
so this is now the another perspective

00:01:59,360 --> 00:02:02,240
from the

00:02:00,159 --> 00:02:04,079
mainframe world which is from the back

00:02:02,240 --> 00:02:05,360
from being application developers now

00:02:04,079 --> 00:02:07,680
we're in the back end

00:02:05,360 --> 00:02:09,679
supporting the day-to-day batch

00:02:07,680 --> 00:02:12,160
processes so i was dealing mostly with

00:02:09,679 --> 00:02:14,000
giveaway batch scheduler to schedule

00:02:12,160 --> 00:02:15,520
dispatch streams at night and

00:02:14,000 --> 00:02:18,959
you were dealing with just two just

00:02:15,520 --> 00:02:22,000
three ipls

00:02:18,959 --> 00:02:24,480
and of course 24x7 support firing

00:02:22,000 --> 00:02:27,840
commands dso and vs commands

00:02:24,480 --> 00:02:28,319
and it wasn't until we moved to the zoid

00:02:27,840 --> 00:02:32,640
project

00:02:28,319 --> 00:02:35,680
in broadcom that we really learned about

00:02:32,640 --> 00:02:37,760
zsmf zoe and all of this other

00:02:35,680 --> 00:02:38,959
modern languages that you can actually

00:02:37,760 --> 00:02:41,280
use to

00:02:38,959 --> 00:02:43,599
interface with the mainframe like

00:02:41,280 --> 00:02:46,879
typescript and python angular

00:02:43,599 --> 00:02:47,760
all of this new modern languages

00:02:46,879 --> 00:02:50,480
compared to

00:02:47,760 --> 00:02:51,040
koba and that's where we first realized

00:02:50,480 --> 00:02:55,120
there is

00:02:51,040 --> 00:02:58,159
actually more to mainframe yeah i agree

00:02:55,120 --> 00:03:00,159
but you know before we go on through all

00:02:58,159 --> 00:03:02,159
of this modernization stuff

00:03:00,159 --> 00:03:05,040
stuff let's start off from the very

00:03:02,159 --> 00:03:08,000
beginning let's start off with cobble

00:03:05,040 --> 00:03:09,760
what is kabul so kabul is a business

00:03:08,000 --> 00:03:12,400
oriented language

00:03:09,760 --> 00:03:13,680
and it is a compiled english like

00:03:12,400 --> 00:03:16,480
computer programming

00:03:13,680 --> 00:03:19,040
language designed for business use and

00:03:16,480 --> 00:03:21,360
it is primarily used in businesses

00:03:19,040 --> 00:03:22,640
all over the world mostly finance

00:03:21,360 --> 00:03:25,599
financial industries

00:03:22,640 --> 00:03:26,400
administrative systems and the

00:03:25,599 --> 00:03:29,599
government

00:03:26,400 --> 00:03:31,599
as well and kabul to

00:03:29,599 --> 00:03:34,000
make it into a simple this um

00:03:31,599 --> 00:03:36,080
description it is responsible

00:03:34,000 --> 00:03:37,440
for the day-to-day operation of the

00:03:36,080 --> 00:03:39,200
world's economy

00:03:37,440 --> 00:03:40,720
exactly and that's why we should care

00:03:39,200 --> 00:03:43,599
about cobalt because

00:03:40,720 --> 00:03:44,640
double is everywhere so if you you have

00:03:43,599 --> 00:03:46,239
probably used

00:03:44,640 --> 00:03:48,000
an application written in combo just

00:03:46,239 --> 00:03:50,799
today for example if you withdraw

00:03:48,000 --> 00:03:51,440
a money your money from an atm global

00:03:50,799 --> 00:03:53,439
program

00:03:51,440 --> 00:03:55,599
is most probably difficult so if you

00:03:53,439 --> 00:03:56,400
pray for a loan another global program

00:03:55,599 --> 00:03:59,040
is good

00:03:56,400 --> 00:04:00,319
if you do any in-person transaction or

00:03:59,040 --> 00:04:03,519
deposit a check

00:04:00,319 --> 00:04:05,120
it's another cobalt program so it goes

00:04:03,519 --> 00:04:08,560
to show that global is everywhere

00:04:05,120 --> 00:04:10,799
about 95 of atm swipes use global code

00:04:08,560 --> 00:04:13,439
and couple powers eighty percent of

00:04:10,799 --> 00:04:16,000
in-person transactions

00:04:13,439 --> 00:04:17,040
that's how powerful couple is so you can

00:04:16,000 --> 00:04:19,440
see that

00:04:17,040 --> 00:04:20,720
cobble is really powerful like you see

00:04:19,440 --> 00:04:24,320
it every day

00:04:20,720 --> 00:04:24,880
and if you like if you check it recently

00:04:24,320 --> 00:04:28,160
like

00:04:24,880 --> 00:04:30,479
you know last last month the ie spectrum

00:04:28,160 --> 00:04:31,919
released that the recent article and it

00:04:30,479 --> 00:04:34,320
says that

00:04:31,919 --> 00:04:35,680
gobble is top seven in the top

00:04:34,320 --> 00:04:38,080
programming languages

00:04:35,680 --> 00:04:38,960
of 2020 according to their twitter

00:04:38,080 --> 00:04:41,600
metrics

00:04:38,960 --> 00:04:42,479
it's like top seven and they call it a

00:04:41,600 --> 00:04:45,600
pandemic

00:04:42,479 --> 00:04:47,520
bump and this is due to the fact that

00:04:45,600 --> 00:04:49,680
you know earlier this year the new

00:04:47,520 --> 00:04:52,880
jersey government in the u.s

00:04:49,680 --> 00:04:56,160
um called for kabul volunteers to help

00:04:52,880 --> 00:04:59,040
fix their unemployment system

00:04:56,160 --> 00:05:00,000
and this just actually goes to show that

00:04:59,040 --> 00:05:03,120
cobble

00:05:00,000 --> 00:05:04,000
is very much important and it is widely

00:05:03,120 --> 00:05:07,759
used

00:05:04,000 --> 00:05:10,479
and if you check this image that we have

00:05:07,759 --> 00:05:11,600
here you can see that you know when they

00:05:10,479 --> 00:05:14,160
depict cobble

00:05:11,600 --> 00:05:14,960
they're gonna call it a half century old

00:05:14,160 --> 00:05:17,199
computer

00:05:14,960 --> 00:05:20,320
language and you can see these two guys

00:05:17,199 --> 00:05:23,520
like super old black and white picture

00:05:20,320 --> 00:05:27,199
but today if you check main we check

00:05:23,520 --> 00:05:29,520
global it doesn't look like this and

00:05:27,199 --> 00:05:30,720
mainframe looks like this today i'm

00:05:29,520 --> 00:05:34,560
gonna change this picture

00:05:30,720 --> 00:05:37,520
and this is how mainframe looks like

00:05:34,560 --> 00:05:38,880
it's true and i think because of this

00:05:37,520 --> 00:05:41,440
pandemic

00:05:38,880 --> 00:05:43,759
there's there became a high interest in

00:05:41,440 --> 00:05:48,000
learning this language this

00:05:43,759 --> 00:05:50,320
50 year old language so open mainframe

00:05:48,000 --> 00:05:51,280
created this free course for those

00:05:50,320 --> 00:05:53,440
learners and

00:05:51,280 --> 00:05:55,680
ibm provided the system where you can

00:05:53,440 --> 00:05:58,960
practice coding and

00:05:55,680 --> 00:05:59,600
or relearn um cobble just using

00:05:58,960 --> 00:06:02,400
mainframe

00:05:59,600 --> 00:06:02,960
modern mainframe so because of this it

00:06:02,400 --> 00:06:06,000
attracted

00:06:02,960 --> 00:06:09,440
developers from different levels

00:06:06,000 --> 00:06:12,720
whether you we saw

00:06:09,440 --> 00:06:15,199
retired people trying to learn

00:06:12,720 --> 00:06:16,240
this language or a lot of new graduates

00:06:15,199 --> 00:06:18,560
as well

00:06:16,240 --> 00:06:19,360
or just even us like experienced main

00:06:18,560 --> 00:06:21,199
framers

00:06:19,360 --> 00:06:22,400
and i think what i really liked about

00:06:21,199 --> 00:06:24,560
this community is it

00:06:22,400 --> 00:06:26,560
became a community of people who are

00:06:24,560 --> 00:06:28,400
really helping each other out

00:06:26,560 --> 00:06:29,600
and you became involved in this course

00:06:28,400 --> 00:06:33,120
right yes

00:06:29,600 --> 00:06:35,840
so i am part of the dlc

00:06:33,120 --> 00:06:37,759
the the core leadership of the kabul

00:06:35,840 --> 00:06:40,160
programming course and i help

00:06:37,759 --> 00:06:42,560
there as well by creating this couple

00:06:40,160 --> 00:06:45,759
challenges like super couple challenges

00:06:42,560 --> 00:06:47,600
so that when you finish um learning

00:06:45,759 --> 00:06:50,240
about cobble you can

00:06:47,600 --> 00:06:50,720
enhance it more by creating this real

00:06:50,240 --> 00:06:53,440
life

00:06:50,720 --> 00:06:55,120
challenge so i have this reporting

00:06:53,440 --> 00:06:58,400
program or creating a couple

00:06:55,120 --> 00:07:00,960
program that reports 2019 results

00:06:58,400 --> 00:07:02,080
and as well as creating as well like a

00:07:00,960 --> 00:07:05,280
simple application

00:07:02,080 --> 00:07:07,680
for the unemployment um claims

00:07:05,280 --> 00:07:08,560
like the previous data for like previous

00:07:07,680 --> 00:07:12,000
years

00:07:08,560 --> 00:07:13,120
so i did help in that and what i like

00:07:12,000 --> 00:07:16,479
about this course

00:07:13,120 --> 00:07:17,680
is that it gives you first um an access

00:07:16,479 --> 00:07:20,880
to mainframe

00:07:17,680 --> 00:07:23,919
and as well as an access to this

00:07:20,880 --> 00:07:26,639
modern tooling that we have today in

00:07:23,919 --> 00:07:28,840
it's actually a glimpse of what it is

00:07:26,639 --> 00:07:31,759
like to have this modern mainframe

00:07:28,840 --> 00:07:34,960
experience

00:07:31,759 --> 00:07:38,560
can you talk about the slack experience

00:07:34,960 --> 00:07:38,880
so yes so the open mainframe project for

00:07:38,560 --> 00:07:41,039
this

00:07:38,880 --> 00:07:42,160
proper programming course has the slack

00:07:41,039 --> 00:07:45,360
channel and

00:07:42,160 --> 00:07:47,520
the slack channel is cons consists of

00:07:45,360 --> 00:07:49,440
this community what you have said

00:07:47,520 --> 00:07:52,080
earlier community of

00:07:49,440 --> 00:07:53,840
developers in different level in

00:07:52,080 --> 00:07:56,080
different levels like

00:07:53,840 --> 00:07:57,759
if there's there's some people who are

00:07:56,080 --> 00:08:00,240
like from retirement they

00:07:57,759 --> 00:08:02,560
want to learn gulf war um again they

00:08:00,240 --> 00:08:05,199
want to refresh their memory about it

00:08:02,560 --> 00:08:07,360
or like us there are experienced

00:08:05,199 --> 00:08:10,319
developers there who is

00:08:07,360 --> 00:08:12,160
um searching for modern modern tooling

00:08:10,319 --> 00:08:14,479
they want to try it out

00:08:12,160 --> 00:08:17,039
and there are new developer developers

00:08:14,479 --> 00:08:20,080
there as well who wants to learn about

00:08:17,039 --> 00:08:21,039
mainframe and combo programming and so

00:08:20,080 --> 00:08:24,319
that that

00:08:21,039 --> 00:08:26,960
community is very diverse and it's

00:08:24,319 --> 00:08:29,199
a very friendly community where we we

00:08:26,960 --> 00:08:32,320
are helping each other learn

00:08:29,199 --> 00:08:32,719
more about kabul and mainframe so you

00:08:32,320 --> 00:08:36,159
talked

00:08:32,719 --> 00:08:38,000
about how this new course is providing

00:08:36,159 --> 00:08:40,800
modern mainframe access to modern

00:08:38,000 --> 00:08:41,440
mainframe so what is for you modern

00:08:40,800 --> 00:08:44,320
maverick

00:08:41,440 --> 00:08:45,040
that's a good question i mean let's

00:08:44,320 --> 00:08:47,120
define

00:08:45,040 --> 00:08:49,440
for let's let's have this um let's

00:08:47,120 --> 00:08:52,480
define modern mainframe based on

00:08:49,440 --> 00:08:53,279
what i think it is so for me modern

00:08:52,480 --> 00:08:56,000
mainframe

00:08:53,279 --> 00:08:56,959
simply means allowing modern technology

00:08:56,000 --> 00:09:00,240
to communicate

00:08:56,959 --> 00:09:00,880
or integrate with mainframe so creating

00:09:00,240 --> 00:09:03,600
modern

00:09:00,880 --> 00:09:05,440
application and making it one with

00:09:03,600 --> 00:09:08,800
mainframe itself

00:09:05,440 --> 00:09:10,480
and open mainframe project which

00:09:08,800 --> 00:09:12,000
which is some part of the linux

00:09:10,480 --> 00:09:16,320
foundation is

00:09:12,000 --> 00:09:19,680
a project that makes mainframe open

00:09:16,320 --> 00:09:22,720
and one goal is to make

00:09:19,680 --> 00:09:24,720
this mainframe toolset or modern tooling

00:09:22,720 --> 00:09:26,880
available for the community for the

00:09:24,720 --> 00:09:31,040
mainframe community to try out

00:09:26,880 --> 00:09:33,920
and there there are lots of projects

00:09:31,040 --> 00:09:36,320
under open mainframe project and the one

00:09:33,920 --> 00:09:38,560
of this tool set is called zoe

00:09:36,320 --> 00:09:40,480
and we're going to talk about it um in

00:09:38,560 --> 00:09:43,360
this session

00:09:40,480 --> 00:09:43,760
so what is yes exactly what is zoe zoe

00:09:43,360 --> 00:09:45,600
is

00:09:43,760 --> 00:09:47,040
an open source project under open

00:09:45,600 --> 00:09:48,959
mainframe project which

00:09:47,040 --> 00:09:50,320
offers this modern interfaces to

00:09:48,959 --> 00:09:53,120
interact with the zos

00:09:50,320 --> 00:09:54,320
so it really allows you to to interact

00:09:53,120 --> 00:09:56,080
and talk with the address

00:09:54,320 --> 00:09:58,640
in a way that's similar to what you

00:09:56,080 --> 00:10:00,800
experience on cloud platforms today

00:09:58,640 --> 00:10:02,079
it helps young developers to interact

00:10:00,800 --> 00:10:03,680
and work with the mainframe

00:10:02,079 --> 00:10:05,279
using development tools that they

00:10:03,680 --> 00:10:08,320
already know and

00:10:05,279 --> 00:10:09,120
as well as allowing other mainframe

00:10:08,320 --> 00:10:11,519
users

00:10:09,120 --> 00:10:13,600
to automate their tasks around the

00:10:11,519 --> 00:10:16,399
mainframe

00:10:13,600 --> 00:10:19,600
it is basically a modern solution for

00:10:16,399 --> 00:10:24,000
modern mainframe developers

00:10:19,600 --> 00:10:26,800
and you know there are lots of like

00:10:24,000 --> 00:10:27,760
questions like what is a modern

00:10:26,800 --> 00:10:30,720
mainframe

00:10:27,760 --> 00:10:31,680
how what does she look like and we can

00:10:30,720 --> 00:10:32,959
imagine it so

00:10:31,680 --> 00:10:36,000
if you close our eyes we're gonna

00:10:32,959 --> 00:10:36,720
imagine what does the modern main framer

00:10:36,000 --> 00:10:40,079
look like

00:10:36,720 --> 00:10:42,079
and what does she do so this for me this

00:10:40,079 --> 00:10:45,760
is how a modern miniframer looks like

00:10:42,079 --> 00:10:46,000
she is in her computer and she knows a

00:10:45,760 --> 00:10:48,720
lot

00:10:46,000 --> 00:10:51,440
of modern tooling such as python she

00:10:48,720 --> 00:10:54,640
knows maybe jenkins circle ci

00:10:51,440 --> 00:10:55,680
gulp mocha she uses vs code as her

00:10:54,640 --> 00:10:58,480
editor

00:10:55,680 --> 00:10:59,680
and she uses github as her source

00:10:58,480 --> 00:11:02,959
management

00:10:59,680 --> 00:11:06,399
and then as well as she uses

00:11:02,959 --> 00:11:07,440
cloud platform like aws or maybe a

00:11:06,399 --> 00:11:10,800
firebase

00:11:07,440 --> 00:11:13,920
to have this database but then she uses

00:11:10,800 --> 00:11:14,399
zoe as this bridge or rather we could

00:11:13,920 --> 00:11:17,440
call it

00:11:14,399 --> 00:11:18,160
a modern mainframe bridge to connect the

00:11:17,440 --> 00:11:20,800
mainframe

00:11:18,160 --> 00:11:21,920
and she uses zoe cli she uses the zoe

00:11:20,800 --> 00:11:25,519
apis

00:11:21,920 --> 00:11:27,920
to call and do some mainframe processing

00:11:25,519 --> 00:11:30,079
and integrate it to the modern tools

00:11:27,920 --> 00:11:31,760
that she is using or she is familiar

00:11:30,079 --> 00:11:34,240
with

00:11:31,760 --> 00:11:35,760
but you know how is she able to do that

00:11:34,240 --> 00:11:37,920
what are the things

00:11:35,760 --> 00:11:39,920
that zoe has what are the components

00:11:37,920 --> 00:11:42,160
that zoe is offering

00:11:39,920 --> 00:11:43,760
so this is a high level overview of what

00:11:42,160 --> 00:11:46,079
zoe looks like today

00:11:43,760 --> 00:11:47,040
so zoe provides different kinds of tools

00:11:46,079 --> 00:11:50,320
such as the

00:11:47,040 --> 00:11:53,440
web browser the mobile application

00:11:50,320 --> 00:11:56,560
zoe expert vs code extension

00:11:53,440 --> 00:11:59,440
as well as the zoe cli but

00:11:56,560 --> 00:12:00,240
their basis is these microservices that

00:11:59,440 --> 00:12:02,560
are

00:12:00,240 --> 00:12:03,519
installed on the on the mainframe and

00:12:02,560 --> 00:12:06,240
the system

00:12:03,519 --> 00:12:07,120
and so all of this components

00:12:06,240 --> 00:12:10,000
communicate

00:12:07,120 --> 00:12:11,760
with the mainframe using zws apis and

00:12:10,000 --> 00:12:13,200
what i like about these components is

00:12:11,760 --> 00:12:15,760
besides they're being

00:12:13,200 --> 00:12:17,040
open source and free it's that they are

00:12:15,760 --> 00:12:19,519
extendable

00:12:17,040 --> 00:12:21,200
meaning that it's not limited to what it

00:12:19,519 --> 00:12:24,000
is today it is a framework

00:12:21,200 --> 00:12:26,240
that you can customize and build them

00:12:24,000 --> 00:12:28,800
and implement them according to your

00:12:26,240 --> 00:12:30,639
needs personal or enterprise weight

00:12:28,800 --> 00:12:33,600
exactly

00:12:30,639 --> 00:12:34,240
so maybe we can show you an example on

00:12:33,600 --> 00:12:38,240
how

00:12:34,240 --> 00:12:39,120
like a basic exam example on how we are

00:12:38,240 --> 00:12:43,120
integrating

00:12:39,120 --> 00:12:43,120
zoe and coboy today

00:12:44,160 --> 00:12:47,920
so here i am in my vs code editor and i

00:12:46,720 --> 00:12:49,760
just opened

00:12:47,920 --> 00:12:51,680
my global programs reciting on the

00:12:49,760 --> 00:12:53,920
mainframe using zoe explorer

00:12:51,680 --> 00:12:55,600
and as you can see i have global

00:12:53,920 --> 00:12:57,200
language support extension installed

00:12:55,600 --> 00:12:59,360
which is telling me that i don't have

00:12:57,200 --> 00:13:00,320
any syntax errors detected in my global

00:12:59,360 --> 00:13:02,560
programs

00:13:00,320 --> 00:13:04,639
and this koba language support is part

00:13:02,560 --> 00:13:06,240
of the code4z package from broadcom

00:13:04,639 --> 00:13:07,440
which includes the explorer and debugger

00:13:06,240 --> 00:13:10,079
for mainframe along with

00:13:07,440 --> 00:13:11,519
others and these are just tools

00:13:10,079 --> 00:13:14,399
available to help me

00:13:11,519 --> 00:13:16,240
in my development of cobol and what i

00:13:14,399 --> 00:13:17,760
really like about that is it makes it

00:13:16,240 --> 00:13:20,480
easier as well as

00:13:17,760 --> 00:13:22,000
it allows me to develop in global the

00:13:20,480 --> 00:13:25,279
same way that i would develop

00:13:22,000 --> 00:13:27,920
using typescript or python

00:13:25,279 --> 00:13:30,000
because it has this additional tools

00:13:27,920 --> 00:13:33,200
like syntax highlighting

00:13:30,000 --> 00:13:35,279
and global linting for example this

00:13:33,200 --> 00:13:37,680
global language report has

00:13:35,279 --> 00:13:38,720
knowledge of global keywords couple

00:13:37,680 --> 00:13:42,079
variables

00:13:38,720 --> 00:13:43,839
couple paragraphs it even has good copy

00:13:42,079 --> 00:13:46,839
book support for example which is very

00:13:43,839 --> 00:13:50,079
helpful when you're developing in kabul

00:13:46,839 --> 00:13:53,279
and another thing that i really like is

00:13:50,079 --> 00:13:57,279
that it when i just start typing it will

00:13:53,279 --> 00:14:00,560
give me cobble snippet examples so

00:13:57,279 --> 00:14:03,600
i know that what is expected of me

00:14:00,560 --> 00:14:06,079
so here i'm making some typo and

00:14:03,600 --> 00:14:07,920
it noticed that divisions is is

00:14:06,079 --> 00:14:10,639
incorrect keyword and division is the

00:14:07,920 --> 00:14:13,120
correct keyword for me

00:14:10,639 --> 00:14:14,720
it will also check for me that i've if

00:14:13,120 --> 00:14:17,519
i've exceeded

00:14:14,720 --> 00:14:17,839
the fixed format length that is expected

00:14:17,519 --> 00:14:22,560
for

00:14:17,839 --> 00:14:22,560
this language

00:14:23,600 --> 00:14:28,399
and if i save this file now it will

00:14:26,800 --> 00:14:30,560
automatically save it

00:14:28,399 --> 00:14:31,600
on the mainframe so then i can continue

00:14:30,560 --> 00:14:34,639
my development

00:14:31,600 --> 00:14:37,839
3270 or some other tool and vice versa

00:14:34,639 --> 00:14:41,680
so it's sync because i was able to

00:14:37,839 --> 00:14:41,680
successfully upload it on the mainframe

00:14:41,920 --> 00:14:46,079
so today i'm gonna show you how to use

00:14:43,760 --> 00:14:48,160
zoe explorer

00:14:46,079 --> 00:14:49,680
and in here we need to have a profile to

00:14:48,160 --> 00:14:52,639
connect to our mainframe

00:14:49,680 --> 00:14:54,800
and similar to what we do in 3270 we

00:14:52,639 --> 00:14:58,079
search for the data set

00:14:54,800 --> 00:14:59,839
um that we want to use and i wanted to

00:14:58,079 --> 00:15:03,680
check out my cobalt program

00:14:59,839 --> 00:15:06,639
so i opened my cobble library and

00:15:03,680 --> 00:15:08,480
here i'm checking my program and similar

00:15:06,639 --> 00:15:10,160
similar to what i do i just

00:15:08,480 --> 00:15:13,120
i wanted to have a display i want to

00:15:10,160 --> 00:15:16,399
test this and so i'm gonna open the gcl

00:15:13,120 --> 00:15:17,920
that will execute this program and in

00:15:16,399 --> 00:15:22,399
zoe explorer

00:15:17,920 --> 00:15:24,880
the way that we execute a job is that

00:15:22,399 --> 00:15:25,519
we're just gonna do a right click and

00:15:24,880 --> 00:15:27,360
then hit

00:15:25,519 --> 00:15:29,600
submit job and automatically it will

00:15:27,360 --> 00:15:31,759
fire an api to submit the job

00:15:29,600 --> 00:15:32,720
you can click the job id to check the

00:15:31,759 --> 00:15:35,440
output of

00:15:32,720 --> 00:15:37,279
this submission and it will

00:15:35,440 --> 00:15:38,720
automatically download everything for

00:15:37,279 --> 00:15:41,839
you

00:15:38,720 --> 00:15:41,839
and that's it

00:15:41,920 --> 00:15:48,000
so after that so you have this glimpse

00:15:44,959 --> 00:15:50,320
of how zoe works and how kabul

00:15:48,000 --> 00:15:52,160
and zoe works together but there are

00:15:50,320 --> 00:15:54,720
other examples as well

00:15:52,160 --> 00:15:55,440
like if you want to integrate modern

00:15:54,720 --> 00:15:58,320
tools

00:15:55,440 --> 00:15:59,680
maybe you want to integrate another

00:15:58,320 --> 00:16:02,320
programming language

00:15:59,680 --> 00:16:02,720
in here i am showing that you know i can

00:16:02,320 --> 00:16:07,519
use

00:16:02,720 --> 00:16:09,839
typescript to to do a different function

00:16:07,519 --> 00:16:10,560
and then use zoe cele to connect to

00:16:09,839 --> 00:16:13,600
mainframe

00:16:10,560 --> 00:16:15,360
and then process it in mainframe or in

00:16:13,600 --> 00:16:19,279
here we can i am showing here that

00:16:15,360 --> 00:16:21,440
i can build a continuous infiguration

00:16:19,279 --> 00:16:22,959
maybe it's a personal use like if you

00:16:21,440 --> 00:16:24,160
want your unit testing and you're just

00:16:22,959 --> 00:16:26,560
gonna click build

00:16:24,160 --> 00:16:28,000
you can use zoe to communicate to

00:16:26,560 --> 00:16:31,120
mainframe and have

00:16:28,000 --> 00:16:32,160
your build um stored in circle ci or

00:16:31,120 --> 00:16:34,800
maybe jenkins

00:16:32,160 --> 00:16:36,880
or maybe other continuous integration

00:16:34,800 --> 00:16:39,360
tool that you have in your company

00:16:36,880 --> 00:16:41,360
and lastly if you want to do more you

00:16:39,360 --> 00:16:44,720
can create your own application

00:16:41,360 --> 00:16:48,000
here we created a mobile application

00:16:44,720 --> 00:16:51,040
where it accesses the jobs pool and

00:16:48,000 --> 00:16:53,519
lets you submit the job edit the job

00:16:51,040 --> 00:16:55,680
delete or cancel anything through the

00:16:53,519 --> 00:16:59,600
mobile application

00:16:55,680 --> 00:17:02,240
and if you see all of these things

00:16:59,600 --> 00:17:03,519
connecting or integrating mainframe to

00:17:02,240 --> 00:17:05,199
modern toolset

00:17:03,519 --> 00:17:07,039
creates a lot of possibilities

00:17:05,199 --> 00:17:10,559
technically the possibilities

00:17:07,039 --> 00:17:11,679
are endless and honestly if you want to

00:17:10,559 --> 00:17:15,199
know more

00:17:11,679 --> 00:17:16,319
i i am inviting you to join us in our

00:17:15,199 --> 00:17:18,799
next session

00:17:16,319 --> 00:17:20,959
keeping up with the times adopting zoe

00:17:18,799 --> 00:17:23,199
as a modern mainframe developer

00:17:20,959 --> 00:17:25,679
in this session we are going to deep

00:17:23,199 --> 00:17:26,160
dive on how an experienced mainframer

00:17:25,679 --> 00:17:29,440
such as

00:17:26,160 --> 00:17:33,440
us um can integrate zoe in their into

00:17:29,440 --> 00:17:33,440
their day-to-day activities yeah

00:17:33,520 --> 00:17:38,400
so to summarize it all here are my key

00:17:36,880 --> 00:17:40,960
techniques

00:17:38,400 --> 00:17:42,400
so as we showed earlier if you're an

00:17:40,960 --> 00:17:44,480
experienced name framer

00:17:42,400 --> 00:17:46,000
this is still the same cobble in the

00:17:44,480 --> 00:17:47,919
same json experience

00:17:46,000 --> 00:17:49,600
that that you are familiar with and

00:17:47,919 --> 00:17:51,200
you're just really incorporating modern

00:17:49,600 --> 00:17:53,679
toe sets in your development it's just

00:17:51,200 --> 00:17:55,840
another choice of tools that you can use

00:17:53,679 --> 00:17:57,600
and if you are a new mainframer you can

00:17:55,840 --> 00:17:59,039
use this modern tools that you're

00:17:57,600 --> 00:18:01,600
familiar with

00:17:59,039 --> 00:18:03,679
and just incorporate mainframe access

00:18:01,600 --> 00:18:04,880
with it it's just another server global

00:18:03,679 --> 00:18:07,200
is just another language

00:18:04,880 --> 00:18:08,160
and mainframe is just another platform

00:18:07,200 --> 00:18:10,640
exactly

00:18:08,160 --> 00:18:12,400
and through this through this modern

00:18:10,640 --> 00:18:15,039
tool such as zoe

00:18:12,400 --> 00:18:15,840
an open mainframe project we became

00:18:15,039 --> 00:18:18,240
learners

00:18:15,840 --> 00:18:19,919
all of us whatever level you are in we

00:18:18,240 --> 00:18:21,440
are all learners and we are learning

00:18:19,919 --> 00:18:23,360
from each other and

00:18:21,440 --> 00:18:25,520
i think that makes us a great community

00:18:23,360 --> 00:18:29,120
because we're helping each other out

00:18:25,520 --> 00:18:31,440
based on the knowledge that we have and

00:18:29,120 --> 00:18:33,679
once one thing that we want to point out

00:18:31,440 --> 00:18:36,080
that everything that we have shown here

00:18:33,679 --> 00:18:38,480
are either an open source product or

00:18:36,080 --> 00:18:39,760
free to download so you can definitely

00:18:38,480 --> 00:18:42,080
try it out

00:18:39,760 --> 00:18:43,280
so one great key takeaway that i have

00:18:42,080 --> 00:18:45,919
here is that

00:18:43,280 --> 00:18:48,160
if you combine the modern technology and

00:18:45,919 --> 00:18:49,440
mainframe technology you can actually

00:18:48,160 --> 00:18:52,400
create

00:18:49,440 --> 00:18:53,120
endless of possibilities and a one big

00:18:52,400 --> 00:18:56,480
powerful

00:18:53,120 --> 00:18:58,880
platform yep so

00:18:56,480 --> 00:18:59,679
as you said the next steps would be just

00:18:58,880 --> 00:19:02,799
to try it out

00:18:59,679 --> 00:19:04,960
it's free and

00:19:02,799 --> 00:19:06,240
there's a great community that is

00:19:04,960 --> 00:19:08,720
willing to help

00:19:06,240 --> 00:19:10,559
and so you can share what you've learned

00:19:08,720 --> 00:19:12,799
or what you've experienced

00:19:10,559 --> 00:19:13,600
at the same time if if you are a more

00:19:12,799 --> 00:19:15,840
experienced

00:19:13,600 --> 00:19:17,520
mainframe developer you can contribute

00:19:15,840 --> 00:19:18,960
you can check out our github

00:19:17,520 --> 00:19:20,880
repositories and

00:19:18,960 --> 00:19:22,559
join the staff community contribute your

00:19:20,880 --> 00:19:23,520
knowledge even just ask questions that's

00:19:22,559 --> 00:19:26,799
also another

00:19:23,520 --> 00:19:28,720
contribution and it's all valuable

00:19:26,799 --> 00:19:30,720
to the community so if you are

00:19:28,720 --> 00:19:34,320
interested we

00:19:30,720 --> 00:19:38,000
put together a bunch of links

00:19:34,320 --> 00:19:40,080
as references here so lastly if you are

00:19:38,000 --> 00:19:41,760
if you are not an individual contributor

00:19:40,080 --> 00:19:44,799
and you're looking for

00:19:41,760 --> 00:19:47,360
in an enterprise solution broadcom

00:19:44,799 --> 00:19:48,880
can help you get started there are

00:19:47,360 --> 00:19:51,360
design thinking workshop

00:19:48,880 --> 00:19:52,880
environment preparation hands-on

00:19:51,360 --> 00:19:55,840
workshop

00:19:52,880 --> 00:19:56,640
devops proof of concept just let us know

00:19:55,840 --> 00:20:00,320
what you need

00:19:56,640 --> 00:20:04,240
and we can help yeah

00:20:00,320 --> 00:20:07,440
and yeah and that's it for our talk

00:20:04,240 --> 00:20:12,720
thank you so much for joining us and

00:20:07,440 --> 00:20:12,720

YouTube URL: https://www.youtube.com/watch?v=u8Nujk1swDI


