Title: Keynote: Unleashing Innovation from Core to the Edge - Martin Fink, Western Digital
Publication date: 2019-03-13
Playlist: Open Source Leadership Summit 2019
Description: 
	Keynote: Unleashing Innovation from Core to the Edge - Martin Fink, Executive Vice President & Chief Technology Officer, Western Digital 

Martin Fink
Western Digital
Chief Technology Officer
Websitehttps://westerndigital.com/
Martin Fink joined Western Digital as Executive Vice President and Chief Technology Officer in January 2017. In this role, Fink leads the company’s technology innovation agenda as Western Digital continues to transform its business and expand its capabilities and technology portfolio.
Prior to joining Western Digital, Fink most recently served as Chief Technology Officer, Executive Vice President and Director of Hewlett Packard Labs at Hewlett-Packard Enterprise Company, and served as CTO and EVP of HP, Inc, overseeing HP Labs, the company’s advanced research center.
In his 30-year career at Hewlett-Packard Company and Hewlett-Packard Enterprise Company, Fink worked in a wide range of roles, including General Manager of HP Cloud and Senior Vice President and General Manager of Business Critical Systems and Converged Application Systems.
He has been a board member of Hortonworks, Inc. since July 2014, and a board member of Wild Beer Co., since February 2016.

Fink holds an associate’s degree in electrical and electronics engineering from Loyalist College and an M.B.A. from Colorado State University.
Captions: 
	00:00:00,030 --> 00:00:07,970
all right good morning everybody I want

00:00:03,240 --> 00:00:09,450
to let's do I think I'm supposed to

00:00:07,970 --> 00:00:11,790
there we go

00:00:09,450 --> 00:00:14,370
all right let's go back one here don't

00:00:11,790 --> 00:00:16,800
want to bother with legal okay so my

00:00:14,370 --> 00:00:21,510
personal open source journey started

00:00:16,800 --> 00:00:23,189
around 1997 I was working at HP I worked

00:00:21,510 --> 00:00:26,430
at HP for about 30 years and I was

00:00:23,189 --> 00:00:29,429
actually running a hp-ux kernel

00:00:26,430 --> 00:00:31,019
development lab and so I've been doing

00:00:29,429 --> 00:00:33,210
this it's sort of Linux was this thing

00:00:31,019 --> 00:00:35,489
off that nobody really knew what it was

00:00:33,210 --> 00:00:37,440
and we kind of brought it in house

00:00:35,489 --> 00:00:39,719
that's importing and that's kind of how

00:00:37,440 --> 00:00:44,430
my journey around Linux and open source

00:00:39,719 --> 00:00:46,710
started in 2002 I ended up writing this

00:00:44,430 --> 00:00:49,800
book called the business and economics

00:00:46,710 --> 00:00:51,570
of Linux and open source my motivation

00:00:49,800 --> 00:00:54,600
at the time for writing the book was

00:00:51,570 --> 00:00:56,940
that very few people understood really

00:00:54,600 --> 00:00:59,640
how open-source works how the business

00:00:56,940 --> 00:01:01,949
models works how the licensing paradigms

00:00:59,640 --> 00:01:05,489
work and how all that stuff comes

00:01:01,949 --> 00:01:07,920
together and just like the industry

00:01:05,489 --> 00:01:10,650
didn't quite fully understand how all

00:01:07,920 --> 00:01:12,450
this work even internal to HP there was

00:01:10,650 --> 00:01:14,549
a gap of knowledge so my primary

00:01:12,450 --> 00:01:16,740
motivation was actually as an education

00:01:14,549 --> 00:01:22,200
tool for the management and executive

00:01:16,740 --> 00:01:26,310
teams at at HP and and actually worked

00:01:22,200 --> 00:01:28,320
pretty well and and it was a big effect

00:01:26,310 --> 00:01:30,540
now for all of those who consider

00:01:28,320 --> 00:01:31,770
themselves open-source experts and you

00:01:30,540 --> 00:01:34,470
know who live and breathe

00:01:31,770 --> 00:01:37,320
open-source day in and day out and in

00:01:34,470 --> 00:01:42,450
audiences like this I'll often ask a

00:01:37,320 --> 00:01:44,909
test question and by far and away most

00:01:42,450 --> 00:01:46,560
people fail this test question and the

00:01:44,909 --> 00:01:50,880
test question is how many open-source

00:01:46,560 --> 00:01:52,710
licenses are there currently and you

00:01:50,880 --> 00:01:54,479
know I'm not gonna do it here but in in

00:01:52,710 --> 00:01:56,280
past audiences you know I'd probe and

00:01:54,479 --> 00:01:58,530
I'd get everything from there's only one

00:01:56,280 --> 00:02:01,320
to there's a million right and I'd get

00:01:58,530 --> 00:02:02,939
answers everywhere in between my last

00:02:01,320 --> 00:02:07,800
count if you're curious I wonder what

00:02:02,939 --> 00:02:10,360
the answer is my last count was 71

00:02:07,800 --> 00:02:13,510
the reason I mentioned this is that in

00:02:10,360 --> 00:02:18,130
2003 I gave the opening keynote address

00:02:13,510 --> 00:02:19,690
at linux world and in 2003 the reason I

00:02:18,130 --> 00:02:22,360
gave that keynote address is that I

00:02:19,690 --> 00:02:24,550
wanted to set off what I'll call a set

00:02:22,360 --> 00:02:28,000
of alarm bells to the open source

00:02:24,550 --> 00:02:30,220
community that there was a clear and

00:02:28,000 --> 00:02:32,319
present danger that was being ignored by

00:02:30,220 --> 00:02:35,230
everyone and that clear and present

00:02:32,319 --> 00:02:37,840
danger was license proliferation so I

00:02:35,230 --> 00:02:40,090
just told you that my last count which

00:02:37,840 --> 00:02:44,650
could be off by one or two was around 71

00:02:40,090 --> 00:02:47,260
in 2003 the number was 58 so in the span

00:02:44,650 --> 00:02:49,720
of about 10 years of the existence of

00:02:47,260 --> 00:02:52,000
open source 58 open source licenses have

00:02:49,720 --> 00:02:54,459
been created and at the time there was a

00:02:52,000 --> 00:02:56,920
tendency for people to create what we

00:02:54,459 --> 00:02:58,959
call vanity licenses so IBM had a

00:02:56,920 --> 00:03:02,410
license Sun Microsystems had a license

00:02:58,959 --> 00:03:04,450
and so on and so forth and a funny

00:03:02,410 --> 00:03:06,400
little story for those of you around

00:03:04,450 --> 00:03:09,819
back then Steve Ballmer then CEO of

00:03:06,400 --> 00:03:11,440
Microsoft would call you know open

00:03:09,819 --> 00:03:13,660
source and Linux and intellectual

00:03:11,440 --> 00:03:15,250
property killer it was a cancer or you

00:03:13,660 --> 00:03:17,049
know we're all gonna and then you kind

00:03:15,250 --> 00:03:18,760
of see that you know from Jim's

00:03:17,049 --> 00:03:21,160
presentation this morning how Microsoft

00:03:18,760 --> 00:03:24,100
has kind of fully come on board the

00:03:21,160 --> 00:03:27,670
interesting thing which Steve did not do

00:03:24,100 --> 00:03:32,380
back then is that if you wanted to kill

00:03:27,670 --> 00:03:34,720
open source in 2002 2003 the best thing

00:03:32,380 --> 00:03:36,549
Steve Ballmer could have done was to go

00:03:34,720 --> 00:03:38,079
to the industry and say open source is

00:03:36,549 --> 00:03:41,079
the greatest thing ever

00:03:38,079 --> 00:03:45,930
and every company should go and create a

00:03:41,079 --> 00:03:49,420
license and you know what at the time

00:03:45,930 --> 00:03:51,489
given the level of understanding I bet

00:03:49,420 --> 00:03:53,709
you that every legal department would

00:03:51,489 --> 00:03:55,600
have gone out under direction their CEO

00:03:53,709 --> 00:03:57,489
and gone to create an open-source

00:03:55,600 --> 00:04:00,700
license and we would have ended up with

00:03:57,489 --> 00:04:03,430
an intertwined mess of Licensing that

00:04:00,700 --> 00:04:04,900
was unresolvable and nothing in the

00:04:03,430 --> 00:04:09,819
open-source community would have worked

00:04:04,900 --> 00:04:12,459
with anything else and so now we're

00:04:09,819 --> 00:04:14,319
basically thinking you know we kind of

00:04:12,459 --> 00:04:15,849
worked through that I had some fun

00:04:14,319 --> 00:04:18,760
through that and we've we've really

00:04:15,849 --> 00:04:21,080
contained this issue and open-source has

00:04:18,760 --> 00:04:22,880
been able to thrive

00:04:21,080 --> 00:04:25,070
over the past number of years and I

00:04:22,880 --> 00:04:27,080
guess I've now embarked on this new

00:04:25,070 --> 00:04:29,210
journey I didn't predict this as these

00:04:27,080 --> 00:04:31,220
things just happen and as I joined

00:04:29,210 --> 00:04:32,990
Western Digital

00:04:31,220 --> 00:04:37,130
I've now embarked on this world of

00:04:32,990 --> 00:04:38,930
open-source hardware which seems like an

00:04:37,130 --> 00:04:41,450
oxymoron and how do you open source

00:04:38,930 --> 00:04:43,760
hardware and this is not on in this in

00:04:41,450 --> 00:04:44,840
the sense of OCP and so what I'm gonna

00:04:43,760 --> 00:04:47,330
do is try to give you a little bit of

00:04:44,840 --> 00:04:49,640
rationale for how we think about this

00:04:47,330 --> 00:04:52,280
and how we think I'm gonna introduce to

00:04:49,640 --> 00:04:54,560
you risk 5 and open source processing

00:04:52,280 --> 00:04:57,050
and you know kind of keep in mind

00:04:54,560 --> 00:04:58,850
Western Digital we build hard drives and

00:04:57,050 --> 00:05:01,010
flash devices and we have a product

00:04:58,850 --> 00:05:03,530
portfolio around that we're not a cpu

00:05:01,010 --> 00:05:05,360
company we don't intend to ever be a cpu

00:05:03,530 --> 00:05:07,640
company but yeah you're gonna see we

00:05:05,360 --> 00:05:10,220
have taken a very very active role in

00:05:07,640 --> 00:05:12,830
the notion of processing and hopefully

00:05:10,220 --> 00:05:14,090
you'll understand why lawyers make me

00:05:12,830 --> 00:05:18,710
show this we'll go through that quickly

00:05:14,090 --> 00:05:21,650
all right so we clearly I haven't been

00:05:18,710 --> 00:05:23,630
trained well enough I you know one of

00:05:21,650 --> 00:05:25,190
the things I do do sometimes when I show

00:05:23,630 --> 00:05:29,750
this slide as I say if you can find the

00:05:25,190 --> 00:05:32,450
typo I'll give you a free SD card so but

00:05:29,750 --> 00:05:34,910
so alright so this is you know we kind

00:05:32,450 --> 00:05:37,160
of think in terms of data right yeah

00:05:34,910 --> 00:05:39,080
like in a new tag line we came up here

00:05:37,160 --> 00:05:41,480
with recently is you know they call it a

00:05:39,080 --> 00:05:47,240
data center not a CPU center right

00:05:41,480 --> 00:05:49,340
because it's about the data and so we we

00:05:47,240 --> 00:05:51,260
simplified this construct around big

00:05:49,340 --> 00:05:53,570
data and fast data so think of big data

00:05:51,260 --> 00:05:55,880
from our perspective is sort of very

00:05:53,570 --> 00:05:58,880
hard drive centric but it's where you

00:05:55,880 --> 00:06:02,150
care about volumes and volumes and

00:05:58,880 --> 00:06:05,570
volumes of data at a fairly low cost per

00:06:02,150 --> 00:06:07,970
bit and think of fast data in two

00:06:05,570 --> 00:06:11,930
constructs one is around main memory or

00:06:07,970 --> 00:06:14,240
memory centric computing and also a very

00:06:11,930 --> 00:06:16,310
high speed persistent storage namely

00:06:14,240 --> 00:06:18,860
flash and some of the new persistent

00:06:16,310 --> 00:06:21,410
memories coming out and the reality is

00:06:18,860 --> 00:06:23,330
our world is introducing a set of

00:06:21,410 --> 00:06:25,940
applications that need to be able to

00:06:23,330 --> 00:06:29,900
leverage both this construct of big data

00:06:25,940 --> 00:06:32,360
and fast data where in some cases fast

00:06:29,900 --> 00:06:34,249
data latency like you know I like to use

00:06:32,360 --> 00:06:35,769
the the self-driving car

00:06:34,249 --> 00:06:38,389
sending all of its data to the cloud

00:06:35,769 --> 00:06:39,919
waiting a few seconds for an answer to

00:06:38,389 --> 00:06:41,839
coming back to decide whether or not I

00:06:39,919 --> 00:06:44,509
should turn left or right not good

00:06:41,839 --> 00:06:47,509
enough that's where you need this fast

00:06:44,509 --> 00:06:49,249
data low latency immediate processing

00:06:47,509 --> 00:06:52,579
close to the edge right so this

00:06:49,249 --> 00:06:55,639
processing close to the edge whereas the

00:06:52,579 --> 00:06:59,119
big data applications involve insights

00:06:55,639 --> 00:07:01,669
the machine learning analytics and and

00:06:59,119 --> 00:07:03,679
those kinds of applications so what we

00:07:01,669 --> 00:07:07,249
noticed when we started to analyze this

00:07:03,679 --> 00:07:08,779
is that our prior world over that I

00:07:07,249 --> 00:07:11,899
lived in this open source world that we

00:07:08,779 --> 00:07:13,899
lived in over the past 30 40 years was

00:07:11,899 --> 00:07:16,759
really largely driven around

00:07:13,899 --> 00:07:18,559
general-purpose processing so the

00:07:16,759 --> 00:07:21,469
processors we have in our servers our

00:07:18,559 --> 00:07:23,869
laptops our desktops etc those are all

00:07:21,469 --> 00:07:26,149
basically general-purpose processors

00:07:23,869 --> 00:07:27,469
they're all very good right so this is

00:07:26,149 --> 00:07:29,779
not a good bad thing

00:07:27,469 --> 00:07:31,489
we absolutely need those things I'm

00:07:29,779 --> 00:07:33,949
gonna start talking about risk 5 and

00:07:31,489 --> 00:07:36,489
sometimes people go to is risk 5 gonna

00:07:33,949 --> 00:07:39,889
be a competitor to Intel don't go there

00:07:36,489 --> 00:07:41,749
right Intel needs to keep doing

00:07:39,889 --> 00:07:43,909
everything they're doing they need to be

00:07:41,749 --> 00:07:45,860
as wildly successful and they need to

00:07:43,909 --> 00:07:48,529
keep driving this world because we will

00:07:45,860 --> 00:07:50,779
continue to have all sorts of

00:07:48,529 --> 00:07:53,659
applications environments Linux and so

00:07:50,779 --> 00:07:56,499
on where this general-purpose processing

00:07:53,659 --> 00:08:00,349
is the best tool for the job

00:07:56,499 --> 00:08:02,449
in addition to that our world thanks

00:08:00,349 --> 00:08:05,449
largely to things like machine learning

00:08:02,449 --> 00:08:08,089
and artificial intelligence our world is

00:08:05,449 --> 00:08:11,449
needing more specialized processing and

00:08:08,089 --> 00:08:14,229
that's been our motivation and again not

00:08:11,449 --> 00:08:18,019
an instead of but an in addition to and

00:08:14,229 --> 00:08:20,209
this is already happening you're already

00:08:18,019 --> 00:08:23,149
seeing it most people have heard of a

00:08:20,209 --> 00:08:25,159
Google TPU a tensorflow processing unit

00:08:23,149 --> 00:08:25,789
that is a special-purpose piece of

00:08:25,159 --> 00:08:28,849
hardware

00:08:25,789 --> 00:08:30,469
when people think about doing compute

00:08:28,849 --> 00:08:33,379
for machine learning they tend to think

00:08:30,469 --> 00:08:35,360
about a gpgpu a graphics processor

00:08:33,379 --> 00:08:37,909
because it's good at vector processing

00:08:35,360 --> 00:08:39,379
which is ideal for that world so we're

00:08:37,909 --> 00:08:41,870
already seeing that other applicator

00:08:39,379 --> 00:08:44,000
customers have created or other entities

00:08:41,870 --> 00:08:47,910
have created custom hardware in the form

00:08:44,000 --> 00:08:50,340
of FPGAs in order to optimize their

00:08:47,910 --> 00:08:53,190
load and so this is what we're seeing

00:08:50,340 --> 00:08:56,190
now is this expansion into this

00:08:53,190 --> 00:09:01,920
general-purpose processing for big data

00:08:56,190 --> 00:09:03,780
and fast data and so there's also been a

00:09:01,920 --> 00:09:05,400
tendency and just so you know a lot of

00:09:03,780 --> 00:09:07,500
people come to see me at the office

00:09:05,400 --> 00:09:09,330
there be customers or they'll be startup

00:09:07,500 --> 00:09:11,580
companies that kind of want us to invest

00:09:09,330 --> 00:09:14,430
in them and they seem to have this

00:09:11,580 --> 00:09:16,800
notion of we were we are software

00:09:14,430 --> 00:09:18,750
companies and we work on commodity

00:09:16,800 --> 00:09:21,720
hardware and they wear that like a badge

00:09:18,750 --> 00:09:25,650
of honor so just a safety tip if you're

00:09:21,720 --> 00:09:28,580
one of those don't do that because the

00:09:25,650 --> 00:09:31,320
reality is it's a fun little tagline

00:09:28,580 --> 00:09:34,260
silicon is oxygen that allows software

00:09:31,320 --> 00:09:37,680
to breathe I were a guy I work with said

00:09:34,260 --> 00:09:40,430
no no Martin this the opposite doesn't

00:09:37,680 --> 00:09:43,530
matter the point of this is that

00:09:40,430 --> 00:09:45,750
hardware and software are now at a point

00:09:43,530 --> 00:09:49,500
where they need to come together and be

00:09:45,750 --> 00:09:51,570
optimized for each other the amount of

00:09:49,500 --> 00:09:53,630
optimization we've been able to do with

00:09:51,570 --> 00:09:56,880
software with a general-purpose

00:09:53,630 --> 00:09:59,580
processor has reached certain limits in

00:09:56,880 --> 00:10:01,290
certain cases and increasingly we're

00:09:59,580 --> 00:10:03,570
seeing these applications I'll use

00:10:01,290 --> 00:10:05,910
tensorflow again as the as the example

00:10:03,570 --> 00:10:07,470
where you need a tensor flow framework

00:10:05,910 --> 00:10:09,090
and a tensor flow plus and it's the

00:10:07,470 --> 00:10:10,800
combination of those two it's the

00:10:09,090 --> 00:10:15,030
hardware and the software coming

00:10:10,800 --> 00:10:16,560
together that is actually the next

00:10:15,030 --> 00:10:20,280
generation and where we need to go to

00:10:16,560 --> 00:10:22,200
and so we decided that we needed to

00:10:20,280 --> 00:10:25,650
think about this again in an open source

00:10:22,200 --> 00:10:28,920
construct and we looked at everything

00:10:25,650 --> 00:10:31,620
right we looked at all the various

00:10:28,920 --> 00:10:33,300
architectures out there and in fact when

00:10:31,620 --> 00:10:35,490
I joined Western Digital I had never

00:10:33,300 --> 00:10:38,310
heard of verse 5 so this was not some

00:10:35,490 --> 00:10:41,670
agenda thing the team at Western Digital

00:10:38,310 --> 00:10:44,580
before I ever showed up was the team

00:10:41,670 --> 00:10:48,570
that I essentially joined and founded

00:10:44,580 --> 00:10:50,700
with RISC 5 but essentially the beauty

00:10:48,570 --> 00:10:53,430
around risk 5 was with this open source

00:10:50,700 --> 00:10:56,310
instruction set architecture we had the

00:10:53,430 --> 00:10:58,770
opportunity to then create big data and

00:10:56,310 --> 00:11:00,060
fast data environments tied to our

00:10:58,770 --> 00:11:03,660
devices

00:11:00,060 --> 00:11:06,240
that allowed us to optimize the hardware

00:11:03,660 --> 00:11:08,070
and the software together so if you want

00:11:06,240 --> 00:11:13,220
to think of this very simply for example

00:11:08,070 --> 00:11:17,610
we build controller chips for our flash

00:11:13,220 --> 00:11:19,910
our flash devices or SSDs with RISC five

00:11:17,610 --> 00:11:24,000
we now have the opportunity to create

00:11:19,910 --> 00:11:27,750
custom instructions to optimize that SSD

00:11:24,000 --> 00:11:29,490
for power for performance etc those are

00:11:27,750 --> 00:11:32,820
things that were very difficult and

00:11:29,490 --> 00:11:36,180
unavailable to us before and so that was

00:11:32,820 --> 00:11:38,130
our big motivation to go there now the

00:11:36,180 --> 00:11:41,760
big thing we want to accomplish from a

00:11:38,130 --> 00:11:46,140
data center perspective this clicker is

00:11:41,760 --> 00:11:48,540
a little wonky is this notion of a

00:11:46,140 --> 00:11:52,140
memory fabric so remember I said big

00:11:48,540 --> 00:11:53,520
data and there's also fast data one of

00:11:52,140 --> 00:11:55,560
the things that general-purpose

00:11:53,520 --> 00:11:57,720
computing has done and it doesn't matter

00:11:55,560 --> 00:12:00,930
if it's an Intel chip an IBM chip any

00:11:57,720 --> 00:12:03,270
other chip is the memory interconnect is

00:12:00,930 --> 00:12:06,060
a point-to-point connection right so you

00:12:03,270 --> 00:12:09,000
have a CPU you have a DDR and then you

00:12:06,060 --> 00:12:11,660
have a dram memory you have main memory

00:12:09,000 --> 00:12:14,850
and this is a very tightly connected

00:12:11,660 --> 00:12:17,760
optimized memory bus well I said we are

00:12:14,850 --> 00:12:20,550
all about the data and we think the data

00:12:17,760 --> 00:12:22,950
should be the center of the universe so

00:12:20,550 --> 00:12:25,800
our goal is to create this centralized

00:12:22,950 --> 00:12:29,490
memory pool or data pool to be more

00:12:25,800 --> 00:12:33,090
precise that any number of processing

00:12:29,490 --> 00:12:36,600
engines can come and do processing on

00:12:33,090 --> 00:12:39,180
the data and rather than say everything

00:12:36,600 --> 00:12:41,610
is general-purpose bring the best

00:12:39,180 --> 00:12:44,820
processing engine for the tool at hand

00:12:41,610 --> 00:12:46,710
to the data and use that same data but

00:12:44,820 --> 00:12:50,370
process it in different ways whether

00:12:46,710 --> 00:12:52,050
it's a risk 5 CPU maybe it's a GPU maybe

00:12:50,370 --> 00:12:54,630
you've created your own FPGA you've

00:12:52,050 --> 00:12:57,030
downloaded your algorithm to it you've

00:12:54,630 --> 00:13:00,660
got other accelerators and things like

00:12:57,030 --> 00:13:04,470
that this is basically our goal is to

00:13:00,660 --> 00:13:07,320
have this Universal memory fabric well

00:13:04,470 --> 00:13:10,260
in I'll say the true notion of open

00:13:07,320 --> 00:13:12,780
source we decided to just tell the world

00:13:10,260 --> 00:13:14,040
we were working on this and that's why

00:13:12,780 --> 00:13:16,889
you see this thing call

00:13:14,040 --> 00:13:19,949
on the extend and this Omni extend

00:13:16,889 --> 00:13:21,540
fabric is free and available for anyone

00:13:19,949 --> 00:13:24,389
to go get it's currently in development

00:13:21,540 --> 00:13:26,339
so we are developing it with the

00:13:24,389 --> 00:13:29,670
community and anybody who wants to come

00:13:26,339 --> 00:13:31,769
and play so why so the question I often

00:13:29,670 --> 00:13:35,629
get is why this there's other standards

00:13:31,769 --> 00:13:39,089
out there whether it's open Cappy Gen Z

00:13:35,629 --> 00:13:41,339
CCI X you know so on and so forth well

00:13:39,089 --> 00:13:43,259
the reason why we ended up doing Omni

00:13:41,339 --> 00:13:45,239
extend was not because we wanted to pick

00:13:43,259 --> 00:13:46,859
a fight over we said we wanted ours is

00:13:45,239 --> 00:13:51,689
better than yours nothing to do with any

00:13:46,859 --> 00:13:54,379
of that in the case of of c6 and open

00:13:51,689 --> 00:13:57,359
Cappy those were still point-to-point

00:13:54,379 --> 00:13:59,790
protocols we're trying to create a

00:13:57,359 --> 00:14:01,980
fabric we couldn't use those because

00:13:59,790 --> 00:14:04,049
they were point-to-point and they're not

00:14:01,980 --> 00:14:06,839
fully open and we're trying to really go

00:14:04,049 --> 00:14:09,449
after this fully open environment gen Z

00:14:06,839 --> 00:14:12,600
would have been ideal and still might be

00:14:09,449 --> 00:14:14,429
ideal we haven't like we still actually

00:14:12,600 --> 00:14:16,559
actively work with Gen Z and we still

00:14:14,429 --> 00:14:20,179
love Gen Z Gen Z wasn't ready for

00:14:16,559 --> 00:14:23,309
coherence and wasn't ready with an open

00:14:20,179 --> 00:14:26,309
physical interface and so that's why we

00:14:23,309 --> 00:14:28,139
ended up doing on the extent so we're

00:14:26,309 --> 00:14:31,290
trying to essentially standardize a

00:14:28,139 --> 00:14:34,799
cache coherency fabric which allows all

00:14:31,290 --> 00:14:38,069
of the CPUs to to stay coherent on the

00:14:34,799 --> 00:14:39,959
cache front and have a routable fabric

00:14:38,069 --> 00:14:42,929
so this is going to take a couple forms

00:14:39,959 --> 00:14:44,939
so when we're partnering with sy5 sy5 is

00:14:42,929 --> 00:14:48,149
taking a coherency fabric that they had

00:14:44,939 --> 00:14:50,009
on chip and extending it so that we can

00:14:48,149 --> 00:14:51,869
connect it to an interface outside the

00:14:50,009 --> 00:14:54,419
chip so it can go on to an Ethernet

00:14:51,869 --> 00:14:57,059
interface so we're now for the very

00:14:54,419 --> 00:14:59,579
first time going to have a coherency

00:14:57,059 --> 00:15:01,829
fabric that can operate on an open

00:14:59,579 --> 00:15:05,939
industry standard physical interface

00:15:01,829 --> 00:15:08,129
namely Ethernet but when I say Ethernet

00:15:05,939 --> 00:15:10,439
I don't mean Ethernet in the context of

00:15:08,129 --> 00:15:11,249
networking or tcp/ip and all of those

00:15:10,439 --> 00:15:13,980
kinds of things

00:15:11,249 --> 00:15:16,470
I mean Ethernet as in the physical

00:15:13,980 --> 00:15:17,850
interface we are still because it's a

00:15:16,470 --> 00:15:21,089
fabric and we want to bring things

00:15:17,850 --> 00:15:23,009
together we have to have a switch so

00:15:21,089 --> 00:15:25,529
we're going to use this barefoot Tofino

00:15:23,009 --> 00:15:27,630
which is a programmable switch and it

00:15:25,529 --> 00:15:29,310
uses a programming language called p4

00:15:27,630 --> 00:15:32,100
and we're gonna write all of the code

00:15:29,310 --> 00:15:33,899
for that switch and all of the code for

00:15:32,100 --> 00:15:36,480
that switch is all going to be open

00:15:33,899 --> 00:15:39,810
source and it actually we're probably

00:15:36,480 --> 00:15:41,790
about a month or so away from that code

00:15:39,810 --> 00:15:44,519
release to become available so we're

00:15:41,790 --> 00:15:47,399
really taking this notion of open

00:15:44,519 --> 00:15:50,069
sourcing to a whole new level and we're

00:15:47,399 --> 00:15:56,670
really taking it to heart and bring it

00:15:50,069 --> 00:15:58,829
to a hardware construct so about a year

00:15:56,670 --> 00:16:02,370
and a half ago when we started the risk

00:15:58,829 --> 00:16:06,240
5 journey we had said that hey Western

00:16:02,370 --> 00:16:08,160
Digital ships a billion cores a year

00:16:06,240 --> 00:16:10,790
right so for those of you work in server

00:16:08,160 --> 00:16:13,079
land you know you probably think about

00:16:10,790 --> 00:16:16,139
millions of servers we think about

00:16:13,079 --> 00:16:18,600
billions of cores and we did the

00:16:16,139 --> 00:16:20,610
analysis and we expect to double that

00:16:18,600 --> 00:16:22,649
and we said we will transition the

00:16:20,610 --> 00:16:25,649
entire portfolio this will take many

00:16:22,649 --> 00:16:28,920
many years to essentially go to risk

00:16:25,649 --> 00:16:31,290
five so one of the things we could have

00:16:28,920 --> 00:16:34,620
done was to essentially go by risk five

00:16:31,290 --> 00:16:36,449
cores from and there's a variety of sigh

00:16:34,620 --> 00:16:39,029
five Kota sip you know there's a bunch

00:16:36,449 --> 00:16:40,769
of of core provides out there they're

00:16:39,029 --> 00:16:42,899
kind of like the arms of the world but

00:16:40,769 --> 00:16:44,339
it was five and we could have done that

00:16:42,899 --> 00:16:46,740
but we said look no we've made this

00:16:44,339 --> 00:16:50,360
commitment to risk five we need to learn

00:16:46,740 --> 00:16:53,220
and understand exactly how this works so

00:16:50,360 --> 00:16:57,300
we essentially put a team together and

00:16:53,220 --> 00:17:00,449
we went off and created our own risk

00:16:57,300 --> 00:17:04,860
five core so this risk five core is not

00:17:00,449 --> 00:17:07,980
a derivative of anybody else's IP this

00:17:04,860 --> 00:17:10,650
is built from the ground up from a team

00:17:07,980 --> 00:17:12,270
at Western Digital now by the way if all

00:17:10,650 --> 00:17:15,000
you people were silicon people you'd be

00:17:12,270 --> 00:17:18,030
going whoo this is really cool stuff man

00:17:15,000 --> 00:17:19,530
okay this is this is like JavaScript

00:17:18,030 --> 00:17:21,890
like you've never seen before in my

00:17:19,530 --> 00:17:21,890
world

00:17:22,500 --> 00:17:28,720
but so this is basically now a full

00:17:25,570 --> 00:17:32,050
open-source core and we gave it a name

00:17:28,720 --> 00:17:35,110
and it's called swerve and so let me go

00:17:32,050 --> 00:17:38,230
backwards so the RV means risk five so

00:17:35,110 --> 00:17:42,190
no surprise there the Wii has two

00:17:38,230 --> 00:17:44,680
meanings one is Western Digital and the

00:17:42,190 --> 00:17:47,500
second one is we as in collaborative as

00:17:44,680 --> 00:17:51,700
in all of us as in we do this together

00:17:47,500 --> 00:17:53,440
and then ass and swerve was because we

00:17:51,700 --> 00:17:56,590
are swerving around general-purpose

00:17:53,440 --> 00:17:59,290
computing and focusing on the special

00:17:56,590 --> 00:18:00,910
purpose I'm not going to let bore you

00:17:59,290 --> 00:18:03,340
with all the details of what this core

00:18:00,910 --> 00:18:05,110
can do I'll give you a little bit of a

00:18:03,340 --> 00:18:07,570
performance metric just so you can kind

00:18:05,110 --> 00:18:09,310
of connect it in your brain this is

00:18:07,570 --> 00:18:11,710
basically a chart that was done by some

00:18:09,310 --> 00:18:12,820
folks at Berkeley University looking at

00:18:11,710 --> 00:18:14,020
all the cores now let me I want to

00:18:12,820 --> 00:18:17,770
clarify something here

00:18:14,020 --> 00:18:21,190
these are cores NOT processors okay so

00:18:17,770 --> 00:18:24,520
this is not a full xeon processor or a

00:18:21,190 --> 00:18:26,500
full ARM processor as you know your

00:18:24,520 --> 00:18:29,140
processor in your laptop or your server

00:18:26,500 --> 00:18:32,260
has lots and lots of cores and then

00:18:29,140 --> 00:18:33,940
around the Korres is uncor so memory

00:18:32,260 --> 00:18:34,660
controllers i/o controllers all of those

00:18:33,940 --> 00:18:40,060
kinds of things

00:18:34,660 --> 00:18:42,220
this is only the core and so there's a

00:18:40,060 --> 00:18:43,840
performance benchmark that's well known

00:18:42,220 --> 00:18:45,520
for just the core called the core mark

00:18:43,840 --> 00:18:48,130
per megahertz so it's normalized on a

00:18:45,520 --> 00:18:50,950
megahertz basis and so this is basically

00:18:48,130 --> 00:18:52,960
the core mark per megahertz of a variety

00:18:50,950 --> 00:18:55,270
of different this was done around 2015 I

00:18:52,960 --> 00:18:57,100
think so it's getting a little bit old

00:18:55,270 --> 00:18:59,440
but it gave us all the data on one chart

00:18:57,100 --> 00:19:02,440
and you can see the blue bars are for

00:18:59,440 --> 00:19:05,500
out-of-order cores and the orange bars

00:19:02,440 --> 00:19:09,790
are in order core so swerve came in at

00:19:05,500 --> 00:19:13,180
4.9 it's actually about 5.1 now on a per

00:19:09,790 --> 00:19:15,220
core mark per megahertz basis and so

00:19:13,180 --> 00:19:16,960
here's the interesting data point for

00:19:15,220 --> 00:19:19,870
you and why this special purpose thing

00:19:16,960 --> 00:19:22,090
matters when we started this core

00:19:19,870 --> 00:19:25,420
development effort our ambition our

00:19:22,090 --> 00:19:29,200
target was to achieve parity with our

00:19:25,420 --> 00:19:31,540
current cores right we were saying we

00:19:29,200 --> 00:19:33,100
don't want to blow it out of the park we

00:19:31,540 --> 00:19:33,490
want to be realistic we're doing this

00:19:33,100 --> 00:19:36,040
for the

00:19:33,490 --> 00:19:39,760
first time you know let's let's have

00:19:36,040 --> 00:19:44,590
realistic goals and we said if all we do

00:19:39,760 --> 00:19:47,890
is achieve parity to what we have that

00:19:44,590 --> 00:19:51,070
we'll call it victory what ended up

00:19:47,890 --> 00:19:54,520
happening was 50% better performance 30%

00:19:51,070 --> 00:19:57,250
better silicon area and 30% lower power

00:19:54,520 --> 00:20:00,400
utilization that's what ended up

00:19:57,250 --> 00:20:03,070
happening and the reason is because this

00:20:00,400 --> 00:20:05,800
core is a production level core it will

00:20:03,070 --> 00:20:07,960
go in our devices so think you know when

00:20:05,800 --> 00:20:11,470
you buy your USB stick next years just

00:20:07,960 --> 00:20:14,200
say hey risk 5 I know there won't be a

00:20:11,470 --> 00:20:16,929
risk 5 logo on it that's okay but the

00:20:14,200 --> 00:20:19,900
thing is that we were able to focus on

00:20:16,929 --> 00:20:21,580
the task at hand and as a result of

00:20:19,900 --> 00:20:23,890
focusing on the task at hand we were

00:20:21,580 --> 00:20:27,970
able to achieve levels of capability

00:20:23,890 --> 00:20:30,400
that were so far beyond and so for those

00:20:27,970 --> 00:20:32,890
of you work at large companies like

00:20:30,400 --> 00:20:35,080
Western Digital and others you know that

00:20:32,890 --> 00:20:37,900
when you sort of go to an R&D team and

00:20:35,080 --> 00:20:39,340
say hey look at my PowerPoint this is

00:20:37,900 --> 00:20:43,150
what I'm gonna build and you should get

00:20:39,340 --> 00:20:45,820
on board that they tend to kind of say

00:20:43,150 --> 00:20:49,600
hey you know I don't build my product

00:20:45,820 --> 00:20:52,179
plan around a PowerPoint once the team

00:20:49,600 --> 00:20:54,280
actually released the core and now they

00:20:52,179 --> 00:20:57,970
had actual they went from PowerPoint -

00:20:54,280 --> 00:21:00,460
this is real the amount of pull internal

00:20:57,970 --> 00:21:03,730
to Western Digital went up exponentially

00:21:00,460 --> 00:21:05,860
and we've now had a whole number of

00:21:03,730 --> 00:21:07,990
requests for all sorts of variants that

00:21:05,860 --> 00:21:10,270
are pretty interesting that would not

00:21:07,990 --> 00:21:13,840
otherwise be possible if we didn't have

00:21:10,270 --> 00:21:15,670
our own core but we're at the open

00:21:13,840 --> 00:21:18,340
source leadership conference and so we

00:21:15,670 --> 00:21:21,280
said hey our course would be embedded

00:21:18,340 --> 00:21:22,750
cores that's what we're gonna start and

00:21:21,280 --> 00:21:24,429
there would be for internal use only

00:21:22,750 --> 00:21:28,360
right this is kind of work we're not

00:21:24,429 --> 00:21:33,309
doing industry thing but it's open

00:21:28,360 --> 00:21:35,950
sourced and so some people will say but

00:21:33,309 --> 00:21:39,790
it's a chip it's like a core like what

00:21:35,950 --> 00:21:42,400
does that mean open source for all of

00:21:39,790 --> 00:21:45,309
you who have never designed the chip in

00:21:42,400 --> 00:21:46,990
your life let me show you a little bit

00:21:45,309 --> 00:21:51,070
of what it looks like to build

00:21:46,990 --> 00:21:55,900
chip on the left is what's called RTL

00:21:51,070 --> 00:22:00,309
code this is the code that a silicon

00:21:55,900 --> 00:22:03,190
designer writes to do a chip a core or

00:22:00,309 --> 00:22:07,570
any other kind of silicon on the right

00:22:03,190 --> 00:22:09,070
is C code and to the uninitiated if you

00:22:07,570 --> 00:22:12,580
look left and right they probably go it

00:22:09,070 --> 00:22:14,130
just looks like software that's the

00:22:12,580 --> 00:22:18,570
point

00:22:14,130 --> 00:22:21,730
building silicon is building software

00:22:18,570 --> 00:22:23,650
there are a few differences so one of

00:22:21,730 --> 00:22:25,450
the things that software programmers do

00:22:23,650 --> 00:22:27,880
when you write that C code on the right

00:22:25,450 --> 00:22:29,950
is you kind of think in sequential terms

00:22:27,880 --> 00:22:33,760
so every line of the code that you see

00:22:29,950 --> 00:22:36,160
gets executed in sequence and even if

00:22:33,760 --> 00:22:39,059
you're an expert multi-threaded program

00:22:36,160 --> 00:22:41,350
or still things happen in the sequence

00:22:39,059 --> 00:22:43,059
the big difference with the code on the

00:22:41,350 --> 00:22:44,980
on the left and if you really want to

00:22:43,059 --> 00:22:47,370
follow along you see this always at

00:22:44,980 --> 00:22:49,420
positive clock edge or positive edge

00:22:47,370 --> 00:22:51,760
essentially things happen simultaneously

00:22:49,420 --> 00:22:53,470
and that's the big difference between

00:22:51,760 --> 00:22:55,960
silicon development and software

00:22:53,470 --> 00:22:57,790
development is on the Left what's

00:22:55,960 --> 00:23:02,309
between those that begin and end block

00:22:57,790 --> 00:23:04,750
happens simultaneously not in sequence

00:23:02,309 --> 00:23:06,190
now if you're all software people and

00:23:04,750 --> 00:23:07,570
you're like oh why do I need to know any

00:23:06,190 --> 00:23:09,790
of this and why does any of it matter

00:23:07,570 --> 00:23:11,890
well guess what there's a thing called

00:23:09,790 --> 00:23:13,600
high-level synthesis so by the way on

00:23:11,890 --> 00:23:15,130
the left it's called synthesize on the

00:23:13,600 --> 00:23:17,620
right it's called compile right so you

00:23:15,130 --> 00:23:19,990
compile your code in hardware you

00:23:17,620 --> 00:23:21,580
synthesize your code there's a thing

00:23:19,990 --> 00:23:24,100
called high-level synthesis that will

00:23:21,580 --> 00:23:28,540
allow you to take C C++ and other

00:23:24,100 --> 00:23:31,750
language codes and actually compile them

00:23:28,540 --> 00:23:33,100
into the thing that's on the left to

00:23:31,750 --> 00:23:37,390
then create something that is

00:23:33,100 --> 00:23:39,970
synthesizable to produce a chip so we

00:23:37,390 --> 00:23:42,250
are actually in the early phases of a

00:23:39,970 --> 00:23:44,110
world where even all of you who are

00:23:42,250 --> 00:23:46,510
potentially software developers are

00:23:44,110 --> 00:23:50,050
going to write software where your

00:23:46,510 --> 00:23:51,610
output is not the CI CD dev ops and go

00:23:50,050 --> 00:23:54,720
through Jenkins and all that kind of

00:23:51,610 --> 00:23:55,900
stuff your actual output is

00:23:54,720 --> 00:23:59,350
synthesizable

00:23:55,900 --> 00:24:01,340
into hardware that is optimized for a

00:23:59,350 --> 00:24:04,490
very specific algorithm

00:24:01,340 --> 00:24:08,300
like a machine-learning thing and so

00:24:04,490 --> 00:24:10,910
that's why this is so so interesting to

00:24:08,300 --> 00:24:13,460
us but when we say it's open-source

00:24:10,910 --> 00:24:15,260
Hardware well guess what we're just open

00:24:13,460 --> 00:24:18,500
sourcing source code so if you go to

00:24:15,260 --> 00:24:21,560
github and you go download our swerve

00:24:18,500 --> 00:24:24,530
core what you're gonna get is basically

00:24:21,560 --> 00:24:26,270
all of this RTL code the language is

00:24:24,530 --> 00:24:28,220
called system vera log so it's written

00:24:26,270 --> 00:24:34,820
in system ver log and that's what you're

00:24:28,220 --> 00:24:37,430
gonna get all right so we also created

00:24:34,820 --> 00:24:39,110
this instruction set simulator so we

00:24:37,430 --> 00:24:41,780
wanted to basically have an environment

00:24:39,110 --> 00:24:43,820
where we could test the risk five core

00:24:41,780 --> 00:24:46,280
and anybody else's risks five core and

00:24:43,820 --> 00:24:48,290
so for that we needed a simulator and so

00:24:46,280 --> 00:24:50,690
we essentially had a completely separate

00:24:48,290 --> 00:24:52,970
independent team right the simulator

00:24:50,690 --> 00:24:55,490
while we had another team developing the

00:24:52,970 --> 00:24:57,140
core and so this instruction set

00:24:55,490 --> 00:24:59,410
simulator in the spirit of everything

00:24:57,140 --> 00:25:02,120
we're doing related here is all about

00:24:59,410 --> 00:25:04,630
open source and so this instruction set

00:25:02,120 --> 00:25:08,660
simulator is also available for anyone

00:25:04,630 --> 00:25:11,300
that wants to do risk 5 simulations and

00:25:08,660 --> 00:25:13,730
run an instruction set simulator our

00:25:11,300 --> 00:25:17,360
swerve core is 32-bit the simulator will

00:25:13,730 --> 00:25:19,690
do both 32 and 64-bit all right so

00:25:17,360 --> 00:25:22,130
that's it so basically we did we are

00:25:19,690 --> 00:25:23,600
passionate about having a memory fabric

00:25:22,130 --> 00:25:27,290
where data the center of the universe

00:25:23,600 --> 00:25:29,540
and we allow any any general-purpose or

00:25:27,290 --> 00:25:32,110
special purpose processing engine to

00:25:29,540 --> 00:25:34,910
communicate through that open fabric and

00:25:32,110 --> 00:25:38,120
have access to the data at very low

00:25:34,910 --> 00:25:41,750
latency and in a cache coherent way and

00:25:38,120 --> 00:25:44,990
built on this ubiquitous Ethernet fabric

00:25:41,750 --> 00:25:47,180
that everybody has access to we did our

00:25:44,990 --> 00:25:48,980
very first RISC five core we're just

00:25:47,180 --> 00:25:52,850
getting started as I said we're already

00:25:48,980 --> 00:25:54,530
working on variants but let me give you

00:25:52,850 --> 00:25:55,760
another piece of data so for all of you

00:25:54,530 --> 00:25:57,770
who have been working in open source

00:25:55,760 --> 00:26:01,400
like I have since the late 90s or

00:25:57,770 --> 00:26:03,890
through to 2000s your psyche is sort of

00:26:01,400 --> 00:26:07,480
adapted to and you take for granted how

00:26:03,890 --> 00:26:13,210
all this stuff works right in this

00:26:07,480 --> 00:26:15,910
silicon world this is all new folks and

00:26:13,210 --> 00:26:17,560
the the thing that's fascinating for me

00:26:15,910 --> 00:26:19,780
and the reason that I mentioned the book

00:26:17,560 --> 00:26:23,260
at the beginning is all of this very

00:26:19,780 --> 00:26:27,160
early education is sort of where I'm

00:26:23,260 --> 00:26:29,320
finding myself again today because all

00:26:27,160 --> 00:26:31,570
of the people that are in this this

00:26:29,320 --> 00:26:33,820
silicon world are asking all the same

00:26:31,570 --> 00:26:35,500
questions around how does this work and

00:26:33,820 --> 00:26:37,630
what about licensing what about my IP

00:26:35,500 --> 00:26:39,520
and how does this collaboration thing

00:26:37,630 --> 00:26:41,770
work and so on and so all of these

00:26:39,520 --> 00:26:45,150
things it's essentially a complete Dasia

00:26:41,770 --> 00:26:47,140
of whom and so it's fascinating to see

00:26:45,150 --> 00:26:50,290
how this works I'll tell you a story

00:26:47,140 --> 00:26:51,760
there was one of these IP providers

00:26:50,290 --> 00:26:55,180
there's intellectual property providers

00:26:51,760 --> 00:26:57,520
and when we released our risk 5 core to

00:26:55,180 --> 00:27:00,510
the open source community their instant

00:26:57,520 --> 00:27:02,610
reaction was you are competing with me

00:27:00,510 --> 00:27:04,990
said wow that's interesting

00:27:02,610 --> 00:27:06,490
not in CPU business not in the IP

00:27:04,990 --> 00:27:08,890
business I don't know exactly I'm

00:27:06,490 --> 00:27:11,110
competing with you and I said why don't

00:27:08,890 --> 00:27:14,140
you just take the swarf core off of

00:27:11,110 --> 00:27:17,040
github include it in your portfolio wrap

00:27:14,140 --> 00:27:19,630
your tools around it and sell it

00:27:17,040 --> 00:27:22,180
there's a little company we know called

00:27:19,630 --> 00:27:25,000
Red Hat that did something similar with

00:27:22,180 --> 00:27:26,860
the Linux kernel and they just looked at

00:27:25,000 --> 00:27:30,570
me like dumbfounded I said I just

00:27:26,860 --> 00:27:33,940
accelerated your roadmap by a year and

00:27:30,570 --> 00:27:35,710
so it was a complete aha moment so this

00:27:33,940 --> 00:27:38,920
stuff that all of you take for granted

00:27:35,710 --> 00:27:42,250
in this world is all going to be brand

00:27:38,920 --> 00:27:44,830
new and I need your help because as I

00:27:42,250 --> 00:27:47,680
said the real world is not Hardware

00:27:44,830 --> 00:27:50,740
versus software and there's no winners

00:27:47,680 --> 00:27:52,300
and losers the only winning comes when

00:27:50,740 --> 00:27:54,580
the hardware and the software come

00:27:52,300 --> 00:27:56,950
together and work and are optimized to

00:27:54,580 --> 00:27:59,050
work together and you're gonna see this

00:27:56,950 --> 00:28:02,160
new world where software becomes

00:27:59,050 --> 00:28:04,780
hardware in order to be fully optimized

00:28:02,160 --> 00:28:10,140
but I've got I don't know let's call it

00:28:04,780 --> 00:28:13,030
a 15 to 20 year gap of DNA of psyche of

00:28:10,140 --> 00:28:15,790
people who need to get up to speed just

00:28:13,030 --> 00:28:19,720
like all of you did in learning how open

00:28:15,790 --> 00:28:23,230
source works and so that's what a big

00:28:19,720 --> 00:28:25,540
part of the risk 5 foundation is all

00:28:23,230 --> 00:28:26,530
about and so I'm going to ask Jim's

00:28:25,540 --> 00:28:27,970
Emlyn to come back

00:28:26,530 --> 00:28:31,450
up here and do a special introduction

00:28:27,970 --> 00:28:36,640
with me first of all to give him a hand

00:28:31,450 --> 00:28:39,130
that's amazing talk so Martin has been

00:28:36,640 --> 00:28:40,750
the interim CEO of the risk 5 Foundation

00:28:39,130 --> 00:28:42,940
and speaking of somebody who runs a

00:28:40,750 --> 00:28:46,090
foundation it's sometimes a bit of a

00:28:42,940 --> 00:28:49,480
thankless task being fired father so

00:28:46,090 --> 00:28:52,030
we're gonna let Martin go today but when

00:28:49,480 --> 00:28:53,800
he called me up and said hey you know

00:28:52,030 --> 00:28:56,980
we're looking for someone to come run

00:28:53,800 --> 00:28:58,450
this you know it's it's a tall order

00:28:56,980 --> 00:29:01,210
because he needs somebody who is

00:28:58,450 --> 00:29:04,540
technically savvy understands the world

00:29:01,210 --> 00:29:06,850
of silicon CPU technology who is

00:29:04,540 --> 00:29:10,630
emotionally intelligent can lead through

00:29:06,850 --> 00:29:15,190
influence can herd cats to create great

00:29:10,630 --> 00:29:17,860
outcomes and immediately to my mind came

00:29:15,190 --> 00:29:20,350
Calista Redmond who we want to introduce

00:29:17,860 --> 00:29:25,590
as the newest CEO of the risk 5

00:29:20,350 --> 00:29:30,180
foundation please welcome mr. Edmund

00:29:25,590 --> 00:29:33,910
welcome you may regret this Calista but

00:29:30,180 --> 00:29:35,770
welcome and we're so happy today thanks

00:29:33,910 --> 00:29:38,530
thanks so much well I mean you've built

00:29:35,770 --> 00:29:41,410
a great foundation not just in the sense

00:29:38,530 --> 00:29:43,030
of an org but a set of technical

00:29:41,410 --> 00:29:44,830
artifacts that we can continue to

00:29:43,030 --> 00:29:47,680
innovate on continue to build the

00:29:44,830 --> 00:29:49,990
community and engage a wide variety a

00:29:47,680 --> 00:29:52,180
stakeholder so it's super exciting for

00:29:49,990 --> 00:29:53,530
me to join all right thank you thank you

00:29:52,180 --> 00:29:53,710
we're happy to have you on board all

00:29:53,530 --> 00:29:56,320
right

00:29:53,710 --> 00:29:57,910
more from Calista Thank You Martin I

00:29:56,320 --> 00:30:00,120
look forward to great things out of risk

00:29:57,910 --> 00:30:00,120

YouTube URL: https://www.youtube.com/watch?v=NbAVBP9XR3U


