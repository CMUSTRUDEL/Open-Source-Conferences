Title: Keynote: A Brief History of GraphQL - Lee Byron, Co-Creator of GraphQL
Publication date: 2019-03-13
Playlist: Open Source Leadership Summit 2019
Description: 
	Keynote: A Brief History of GraphQL - Lee Byron, Co-Creator of GraphQLÂ 

Lee Byron
GraphQL, Design Technologist
Captions: 
	00:00:00,000 --> 00:00:04,290
all right bear with me as my slides are

00:00:02,159 --> 00:00:06,420
off template so I have my notes over

00:00:04,290 --> 00:00:07,859
here and also I'm super happy to hear

00:00:06,420 --> 00:00:12,000
that more people know about graph killed

00:00:07,859 --> 00:00:13,710
and watch the Oscars new milestone so

00:00:12,000 --> 00:00:15,960
morning everyone I'm super thrilled to

00:00:13,710 --> 00:00:17,940
be part of this summit and I also want

00:00:15,960 --> 00:00:20,100
to share my personal experience with all

00:00:17,940 --> 00:00:21,539
of you about this project that I've been

00:00:20,100 --> 00:00:24,779
working on for the better part of seven

00:00:21,539 --> 00:00:27,090
years graph QL and for those of you I

00:00:24,779 --> 00:00:31,890
haven't met yet my name is Lee Byron and

00:00:27,090 --> 00:00:33,540
for 10 years from 2008 to 2018 I worked

00:00:31,890 --> 00:00:36,239
at Facebook as a product designer

00:00:33,540 --> 00:00:38,610
manager and engineer I spent the first

00:00:36,239 --> 00:00:40,710
half of my tenure helping Facebook make

00:00:38,610 --> 00:00:42,600
the transition to mobile and the second

00:00:40,710 --> 00:00:45,420
half building and sharing open-source

00:00:42,600 --> 00:00:47,430
technology I worked on some projects you

00:00:45,420 --> 00:00:49,649
probably already know I was an early

00:00:47,430 --> 00:00:51,600
contributor to react I'm the author of

00:00:49,649 --> 00:00:54,899
immutable J s and I'm one of the

00:00:51,600 --> 00:00:56,910
co-creators of graph QL and these days I

00:00:54,899 --> 00:00:59,100
support web engineering at Robin Hood

00:00:56,910 --> 00:01:01,350
where we're democratizing access to our

00:00:59,100 --> 00:01:03,359
financial system and by the way if that

00:01:01,350 --> 00:01:04,979
mission resonates with you at all please

00:01:03,359 --> 00:01:08,340
get in touch because we have a ton of

00:01:04,979 --> 00:01:09,659
ambition and I really need your help so

00:01:08,340 --> 00:01:11,700
I eventually want to tell you more about

00:01:09,659 --> 00:01:13,500
what graph QL is and does if you don't

00:01:11,700 --> 00:01:15,600
already know but I think what might be

00:01:13,500 --> 00:01:17,790
interesting is to first tell the story

00:01:15,600 --> 00:01:20,330
of the initial conditions that led to us

00:01:17,790 --> 00:01:23,580
building it in the first place

00:01:20,330 --> 00:01:25,770
Facebook was built for the web in fact

00:01:23,580 --> 00:01:28,320
even our native mobile apps were really

00:01:25,770 --> 00:01:31,619
just thin wrappers around our Facebook

00:01:28,320 --> 00:01:34,530
mobile website we bet big on the web and

00:01:31,619 --> 00:01:37,619
I remember when Steve Jobs introduced

00:01:34,530 --> 00:01:39,360
the iPhone in 2007 he called it a

00:01:37,619 --> 00:01:41,880
breakthrough internet communication

00:01:39,360 --> 00:01:43,500
device and he made sure that Safari the

00:01:41,880 --> 00:01:46,290
best web browser in the world was

00:01:43,500 --> 00:01:48,240
running on iPhone and then Google the

00:01:46,290 --> 00:01:50,189
biggest name in web and the creators of

00:01:48,240 --> 00:01:54,180
Chrome responded with Android later that

00:01:50,189 --> 00:01:56,070
same year and we thought hey these two

00:01:54,180 --> 00:01:58,350
are gonna compete on having the best

00:01:56,070 --> 00:02:01,590
mobile web browsers and we're gonna

00:01:58,350 --> 00:02:06,090
build the best mobile web experience boy

00:02:01,590 --> 00:02:07,979
were we wrong five years later and Apple

00:02:06,090 --> 00:02:09,989
had placed all of their energy into

00:02:07,979 --> 00:02:12,380
native apps and had left Mobile Safari

00:02:09,989 --> 00:02:14,810
years behind in web standards

00:02:12,380 --> 00:02:16,820
Google had even bothered the Android

00:02:14,810 --> 00:02:18,500
browser was slow and buggy and it

00:02:16,820 --> 00:02:21,620
wouldn't be another year until we saw

00:02:18,500 --> 00:02:25,850
Chrome for Android mark called our bet

00:02:21,620 --> 00:02:27,470
on web a mistake and at the same time it

00:02:25,850 --> 00:02:29,720
was clear that the transition to mobile

00:02:27,470 --> 00:02:32,480
devices was happening more rapidly than

00:02:29,720 --> 00:02:32,990
we anticipated and as we prepared to go

00:02:32,480 --> 00:02:35,510
public

00:02:32,990 --> 00:02:37,660
our s1 filing highlighted this as a risk

00:02:35,510 --> 00:02:40,310
we knew that we were in trouble

00:02:37,660 --> 00:02:42,650
failure to adjust to major shifts like

00:02:40,310 --> 00:02:44,900
this in the past had crippled and killed

00:02:42,650 --> 00:02:46,460
many other companies so the

00:02:44,900 --> 00:02:48,020
circumstances that we found ourselves in

00:02:46,460 --> 00:02:51,650
when building graph QL were neither

00:02:48,020 --> 00:02:53,960
academic nor theoretical so what we

00:02:51,650 --> 00:02:55,550
decided to do was build newsfeed which

00:02:53,960 --> 00:02:57,590
was the first thing that you saw when

00:02:55,550 --> 00:03:01,280
you opened the Facebook app as a native

00:02:57,590 --> 00:03:03,860
iOS View backed by a restful api and we

00:03:01,280 --> 00:03:06,380
immediately encountered issues it was

00:03:03,860 --> 00:03:08,420
slow we had to coordinate network

00:03:06,380 --> 00:03:10,130
requests for many related models that

00:03:08,420 --> 00:03:12,620
make up newsfeed and this caused

00:03:10,130 --> 00:03:15,160
multiple round trips over flaky mobile

00:03:12,620 --> 00:03:17,330
3G connections and it was fragile

00:03:15,160 --> 00:03:18,980
changes to the API needed to be

00:03:17,330 --> 00:03:21,530
carefully carried over to the client

00:03:18,980 --> 00:03:23,450
code or the app could just crash API

00:03:21,530 --> 00:03:26,870
Doc's were often out of date with

00:03:23,450 --> 00:03:29,000
implementation and it was tedious client

00:03:26,870 --> 00:03:31,130
work was often blocked onto pulling the

00:03:29,000 --> 00:03:33,500
server whenever our API responses needed

00:03:31,130 --> 00:03:35,690
to change we had to manually maintain

00:03:33,500 --> 00:03:37,100
client model classes network logic and a

00:03:35,690 --> 00:03:38,630
bunch of other stuff to make sure that

00:03:37,100 --> 00:03:41,840
the right data was loaded at the right

00:03:38,630 --> 00:03:43,700
time before rendering a view so with all

00:03:41,840 --> 00:03:45,770
of these issues in mind we took a first

00:03:43,700 --> 00:03:47,870
principles approach the perspective of

00:03:45,770 --> 00:03:50,090
product engineers a prototype called

00:03:47,870 --> 00:03:52,850
super graph and we decided to rethink

00:03:50,090 --> 00:03:56,120
established best practices this

00:03:52,850 --> 00:04:00,140
ultimately led us to graph QL so let's

00:03:56,120 --> 00:04:02,600
take a closer look this is the hello

00:04:00,140 --> 00:04:04,760
world of graph QL if I somehow manage to

00:04:02,600 --> 00:04:07,730
forget my own name I'd write this query

00:04:04,760 --> 00:04:10,070
and I'd sent it to a graphical API and

00:04:07,730 --> 00:04:11,570
get back this and the first thing that

00:04:10,070 --> 00:04:13,580
you'll probably notice is that a

00:04:11,570 --> 00:04:16,370
graphical query describes the shape of

00:04:13,580 --> 00:04:18,830
its response to expand on this a little

00:04:16,370 --> 00:04:20,630
bit I might also want a photo of myself

00:04:18,830 --> 00:04:23,150
and whoever might meet at the next

00:04:20,630 --> 00:04:25,850
couple events that I'm attending that

00:04:23,150 --> 00:04:29,060
too would get back a matching result

00:04:25,850 --> 00:04:30,680
graphical requests always has or

00:04:29,060 --> 00:04:32,840
graphical response always has exactly

00:04:30,680 --> 00:04:35,780
what the requests asked for nothing more

00:04:32,840 --> 00:04:37,820
and nothing less and there's plenty more

00:04:35,780 --> 00:04:39,500
to say about the graphical language but

00:04:37,820 --> 00:04:40,850
here in just these couple examples we

00:04:39,500 --> 00:04:43,760
can get a clearer sense of how it works

00:04:40,850 --> 00:04:44,990
and graphical ultimately helped us solve

00:04:43,760 --> 00:04:47,990
the problems that we are encountering

00:04:44,990 --> 00:04:50,180
with restful api s and first of all it's

00:04:47,990 --> 00:04:52,490
fast because each graphical query

00:04:50,180 --> 00:04:54,260
describes exactly what's necessary the

00:04:52,490 --> 00:04:56,360
backing service only needs to fetch and

00:04:54,260 --> 00:04:58,340
prepare what's asked for and the entire

00:04:56,360 --> 00:05:01,390
result can always be delivered in a

00:04:58,340 --> 00:05:03,740
single Network round-trip and its robust

00:05:01,390 --> 00:05:06,410
graphical API is described what's

00:05:03,740 --> 00:05:07,640
possible with static types clients

00:05:06,410 --> 00:05:09,620
describe their response or their

00:05:07,640 --> 00:05:11,570
requirements with graphical queries

00:05:09,620 --> 00:05:14,240
which are really just selections over

00:05:11,570 --> 00:05:16,460
those types and that means that a query

00:05:14,240 --> 00:05:18,290
can be verified before it's run actually

00:05:16,460 --> 00:05:21,440
before you even commit it into your

00:05:18,290 --> 00:05:23,540
client-side code base and on the server

00:05:21,440 --> 00:05:25,250
changes to graphical types can be

00:05:23,540 --> 00:05:27,320
statically checked for breaking changes

00:05:25,250 --> 00:05:30,530
which eliminates an entire class of

00:05:27,320 --> 00:05:32,780
software risk and it's empowering a

00:05:30,530 --> 00:05:33,950
graphical client describes exactly what

00:05:32,780 --> 00:05:35,870
they need which means that they're

00:05:33,950 --> 00:05:37,910
rarely blocked by waiting on some

00:05:35,870 --> 00:05:39,920
server-side change and this means that

00:05:37,910 --> 00:05:43,070
graphical API is never need to version

00:05:39,920 --> 00:05:45,110
in fact seven years later Facebook is

00:05:43,070 --> 00:05:48,110
still in version one of its graphical

00:05:45,110 --> 00:05:49,790
API pair this with graphical static

00:05:48,110 --> 00:05:51,830
types and you now have a platform for

00:05:49,790 --> 00:05:54,650
building great developer tools like

00:05:51,830 --> 00:05:58,280
automatic code generation API explorers

00:05:54,650 --> 00:06:00,020
and IDE integration and documentation is

00:05:58,280 --> 00:06:02,150
a first-class citizen of the graph QL

00:06:00,020 --> 00:06:05,390
type system so Doc's are automatically

00:06:02,150 --> 00:06:07,160
generated and always up to date and also

00:06:05,390 --> 00:06:09,830
importantly it was adoptable

00:06:07,160 --> 00:06:12,440
despite the QL graphical is not about

00:06:09,830 --> 00:06:14,870
databases just like most Russ api's

00:06:12,440 --> 00:06:16,700
graphical types are backed by arbitrary

00:06:14,870 --> 00:06:19,360
user code which means that they can be

00:06:16,700 --> 00:06:21,680
used a top existing services in a PS

00:06:19,360 --> 00:06:23,780
disallowed graph QL to be quickly

00:06:21,680 --> 00:06:25,280
adopted across Facebook driven by

00:06:23,780 --> 00:06:27,110
product engineers and without any

00:06:25,280 --> 00:06:31,340
significant changes to our existing

00:06:27,110 --> 00:06:33,230
systems so in the fall of 2012 we

00:06:31,340 --> 00:06:35,330
released our new iOS app powered by

00:06:33,230 --> 00:06:37,790
graph QL and Facebook has continued on

00:06:35,330 --> 00:06:39,620
that path ever since and around the same

00:06:37,790 --> 00:06:42,680
time others in our group had started

00:06:39,620 --> 00:06:45,020
another project react in the next year

00:06:42,680 --> 00:06:46,910
in 2013 we open sourced react that

00:06:45,020 --> 00:06:48,500
ultimately became one of Facebook's most

00:06:46,910 --> 00:06:50,389
important projects and it really

00:06:48,500 --> 00:06:53,030
highlighted the value of open source to

00:06:50,389 --> 00:06:54,830
our team and a couple years later my

00:06:53,030 --> 00:06:56,780
teammates gave an a really amazing talk

00:06:54,830 --> 00:06:59,210
about relay which is a framework that

00:06:56,780 --> 00:07:01,550
ties together react and graph Geo

00:06:59,210 --> 00:07:03,320
it produced a ton of interest and so the

00:07:01,550 --> 00:07:05,180
team was inspired to share relay with

00:07:03,320 --> 00:07:07,100
the open source community but they

00:07:05,180 --> 00:07:09,650
couldn't do that without graph QL and so

00:07:07,100 --> 00:07:12,830
we thought does it make sense to open

00:07:09,650 --> 00:07:15,500
source graph QL and now admit at the

00:07:12,830 --> 00:07:17,990
time I was skeptical would people find

00:07:15,500 --> 00:07:20,180
graphical useful for typical api's or

00:07:17,990 --> 00:07:22,370
was graph Gale only really useful for

00:07:20,180 --> 00:07:24,500
complex things like newsfeed and what

00:07:22,370 --> 00:07:26,780
other notable companies use it and even

00:07:24,500 --> 00:07:29,330
if they would what would it even mean to

00:07:26,780 --> 00:07:31,789
open source it graph K was really just a

00:07:29,330 --> 00:07:34,039
bunch of PHP code inter woven with

00:07:31,789 --> 00:07:36,050
Facebook's core systems and I don't

00:07:34,039 --> 00:07:38,930
really think that sharing a PHP library

00:07:36,050 --> 00:07:42,650
was gonna gain that much traction but we

00:07:38,930 --> 00:07:44,810
realized that really the idea the

00:07:42,650 --> 00:07:46,729
language and the interface was what made

00:07:44,810 --> 00:07:49,580
graph feel interesting and less of the

00:07:46,729 --> 00:07:52,070
actual implementation so we wrote a

00:07:49,580 --> 00:07:54,320
specification and in matching reference

00:07:52,070 --> 00:07:55,430
implementation for nodejs which we

00:07:54,320 --> 00:07:58,280
figured would get a little bit more

00:07:55,430 --> 00:07:59,750
traction than PHP and we announced graph

00:07:58,280 --> 00:08:02,120
kill as an open-source project later

00:07:59,750 --> 00:08:03,770
that same year so we shared the

00:08:02,120 --> 00:08:04,880
specification and then we called on the

00:08:03,770 --> 00:08:06,229
community to help us write

00:08:04,880 --> 00:08:08,210
implementations and their back-end

00:08:06,229 --> 00:08:11,150
language of choice totally a Hail Mary

00:08:08,210 --> 00:08:12,680
pass but by the end of the year six such

00:08:11,150 --> 00:08:15,110
projects were already in the works

00:08:12,680 --> 00:08:17,090
and today graphical implementations are

00:08:15,110 --> 00:08:19,580
available in over a dozen different

00:08:17,090 --> 00:08:21,889
popular languages all managed by

00:08:19,580 --> 00:08:23,419
different community members and while

00:08:21,889 --> 00:08:25,280
the graphical community started as

00:08:23,419 --> 00:08:27,470
hobbyists it quickly grew to include

00:08:25,280 --> 00:08:29,090
real companies many of which now you

00:08:27,470 --> 00:08:32,150
probably heard of such as the New York

00:08:29,090 --> 00:08:34,659
Times Walmart Intuit Airbnb Netflix

00:08:32,150 --> 00:08:37,400
Twitter Amazon github and many many more

00:08:34,659 --> 00:08:39,050
the community is also worldwide

00:08:37,400 --> 00:08:40,640
there's graphical meetups on every

00:08:39,050 --> 00:08:43,450
continent and major graphical

00:08:40,640 --> 00:08:46,070
conferences in America Europe and Asia

00:08:43,450 --> 00:08:47,839
today graphical has been an open source

00:08:46,070 --> 00:08:50,150
project much longer than it was internal

00:08:47,839 --> 00:08:52,150
to Facebook the last four years have

00:08:50,150 --> 00:08:54,640
shown that my early skepticism was

00:08:52,150 --> 00:08:57,310
warranted the community contributing to

00:08:54,640 --> 00:08:59,529
and using graph QL has become far bigger

00:08:57,310 --> 00:09:01,450
than just Facebook and to reflect this

00:08:59,529 --> 00:09:03,550
we've really shifted our focus to

00:09:01,450 --> 00:09:06,010
developing graph fuel into a stable base

00:09:03,550 --> 00:09:06,810
atop which many tools and businesses can

00:09:06,010 --> 00:09:09,700
thrive

00:09:06,810 --> 00:09:11,920
so to help achieve this and ensure a

00:09:09,700 --> 00:09:14,170
healthy ecosystem for the years ahead

00:09:11,920 --> 00:09:16,240
we're creating something new in

00:09:14,170 --> 00:09:18,040
partnership with both Facebook and the

00:09:16,240 --> 00:09:20,350
Linux Foundation today we're announcing

00:09:18,040 --> 00:09:22,779
the formation of the graph QL foundation

00:09:20,350 --> 00:09:24,520
and so our mission with the graphical

00:09:22,779 --> 00:09:27,400
foundation is to accelerate development

00:09:24,520 --> 00:09:30,100
of the graphical ecosystem and ensure

00:09:27,400 --> 00:09:32,190
and enable widespread adoption and we

00:09:30,100 --> 00:09:34,570
want to do that in two important ways

00:09:32,190 --> 00:09:36,820
first in collaboration with the joint

00:09:34,570 --> 00:09:38,650
development foundation or the JTF we're

00:09:36,820 --> 00:09:40,300
going to create a standards body and a

00:09:38,650 --> 00:09:41,470
technical committee responsible for the

00:09:40,300 --> 00:09:43,450
advancement of the graphical

00:09:41,470 --> 00:09:45,220
specification and the acceleration of

00:09:43,450 --> 00:09:47,770
future open standards built around graph

00:09:45,220 --> 00:09:49,690
QL and then the continuing spirit of our

00:09:47,770 --> 00:09:51,250
existing working group this is going to

00:09:49,690 --> 00:09:53,890
be free to join and open to all

00:09:51,250 --> 00:09:55,839
contributors the graphical foundation

00:09:53,890 --> 00:09:57,459
also seeks to create a space for open

00:09:55,839 --> 00:09:59,529
collaboration and coordination between

00:09:57,459 --> 00:10:01,690
the many companies who hope to see the

00:09:59,529 --> 00:10:03,040
graphical ecosystem thrive the

00:10:01,690 --> 00:10:04,900
foundation will serve as a neutral

00:10:03,040 --> 00:10:07,540
open-source home for projects and help

00:10:04,900 --> 00:10:10,830
fund community initiatives founding

00:10:07,540 --> 00:10:14,560
members already include Facebook AWS IBM

00:10:10,830 --> 00:10:17,050
Intuit neo4j salsify Apollo and Hazara

00:10:14,560 --> 00:10:19,390
we're just getting started and we need

00:10:17,050 --> 00:10:20,950
your help to accomplish this mission so

00:10:19,390 --> 00:10:22,209
if this sounds like something at you or

00:10:20,950 --> 00:10:24,459
your company are interested in

00:10:22,209 --> 00:10:27,670
participating in please learn more at

00:10:24,459 --> 00:10:31,500
foundation graph QL org and thank you so

00:10:27,670 --> 00:10:31,500
much for listening to me out thanks

00:10:32,460 --> 00:10:38,230
that's all that is holiday

00:10:35,530 --> 00:10:39,520
first of all awesome if you ever get

00:10:38,230 --> 00:10:40,660
sick of Robin Hood

00:10:39,520 --> 00:10:43,390
can you come run the Linux Foundation

00:10:40,660 --> 00:10:46,810
like it's such a better job than I did

00:10:43,390 --> 00:10:48,700
explaining that really amazing stuff I

00:10:46,810 --> 00:10:50,800
mean this I think this is the future of

00:10:48,700 --> 00:10:52,240
the API economy I mean like it's an

00:10:50,800 --> 00:10:54,430
amazing accomplishment

00:10:52,240 --> 00:10:56,790
that's the hub yeah thank you thank you

00:10:54,430 --> 00:10:56,790

YouTube URL: https://www.youtube.com/watch?v=VjHWkBr3tjI


