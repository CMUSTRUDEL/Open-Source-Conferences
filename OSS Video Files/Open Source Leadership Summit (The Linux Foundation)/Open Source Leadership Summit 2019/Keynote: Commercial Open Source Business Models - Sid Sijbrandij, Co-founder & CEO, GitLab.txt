Title: Keynote: Commercial Open Source Business Models - Sid Sijbrandij, Co-founder & CEO, GitLab
Publication date: 2019-03-13
Playlist: Open Source Leadership Summit 2019
Description: 
	Keynote: Commercial Open Source Business Models - In the Age of Hyper-Clouds, GitLab bets on Buyer-based Open Core - Sid Sijbrandij, Co-founder & Chief Executive Officer, GitLabÂ 

Today is the day of hyper clouds and companies based on open source projects have challenges building a business. GitLab, the first single application for the DevSecOps lifecycle, has grown 177% YoY at the same time. In this talk, Sid Sijbrandij, the CEO & Cofounder of GitLab will share the road the company took to success. He will talk about the:
- Implications of being a commercial open source company today
- GitLab's demonstrated success in the industry
- The business models GitLab considered
- Our chosen model of buyer based open core
- How buyer based open core works
- Advantages of our choice

This talk is ideal for anyone looking to understand how open source can be monetized and will provide unique insight whether you are a startup founder, end user, or cloud provider.

Sid Sijbrandij
GitLab
Co-founder, Chief Executive Officer (CEO)
Websitehttps://about.gitlab.com/
Sid saw the first ruby code in 2007 and loved it so much he learned to program and made this his profession. Before that he was engaged in various businesses, from selling programmable infrared receivers to starting a recreational submarine company. He is always looking to publicly document an answer or to make a process more efficient. He was never good at sports but tries to make it up in quantity by hiking, sailing, skiing, snowboarding, speed skating, dancing Zouk, squashing, and running. He loves participating in conversations on Hacker News, and reading Marc Andreessen's tweets (now that Marc stopped this greatly increased his productivity). Here's a link to Sid's README.
Captions: 
	00:00:00,060 --> 00:00:11,160
thank you for that introduction Jim I

00:00:02,959 --> 00:00:14,190
feel really small by the way if you

00:00:11,160 --> 00:00:17,369
we're all remote company so if you want

00:00:14,190 --> 00:00:19,320
to swipe our handbook like Jim did go

00:00:17,369 --> 00:00:22,890
ahead it's creative comments so it's

00:00:19,320 --> 00:00:24,720
totally cool so I'm going to talk today

00:00:22,890 --> 00:00:27,060
about commercial open source business

00:00:24,720 --> 00:00:30,210
models and they're specifically about

00:00:27,060 --> 00:00:35,340
how in the age of hyper clouds we bat on

00:00:30,210 --> 00:00:39,570
fire based open court a little bit about

00:00:35,340 --> 00:00:41,250
me my name is Sid C Bromley and if you

00:00:39,570 --> 00:00:44,570
can't pronounce that that's totally fine

00:00:41,250 --> 00:00:47,100
I'm a co-founder and CEO at gitlab and

00:00:44,570 --> 00:00:53,370
get life as a commercial open source

00:00:47,100 --> 00:00:55,260
software company and what's unique about

00:00:53,370 --> 00:00:57,030
get lab is that we're the first single

00:00:55,260 --> 00:01:00,329
application for the entire DevOps

00:00:57,030 --> 00:01:03,290
lifecycle so in a single application you

00:01:00,329 --> 00:01:06,540
can go from planning to do something

00:01:03,290 --> 00:01:08,490
creating that in a web IDE running the

00:01:06,540 --> 00:01:11,850
test looking at the performance of your

00:01:08,490 --> 00:01:14,220
site packaging that up securing all that

00:01:11,850 --> 00:01:15,950
with static and dynamic test and

00:01:14,220 --> 00:01:18,479
dependency and container scanning

00:01:15,950 --> 00:01:22,670
releasing that out to incremental

00:01:18,479 --> 00:01:24,840
rollout configuring that operating that

00:01:22,670 --> 00:01:27,270
monitoring what the result is with

00:01:24,840 --> 00:01:34,619
metrics and logging and defending that

00:01:27,270 --> 00:01:37,530
against attacks now that approach has

00:01:34,619 --> 00:01:40,320
been amazingly successful we

00:01:37,530 --> 00:01:42,869
incorporated in 2014 we were five

00:01:40,320 --> 00:01:46,500
employees at the time we're now over 500

00:01:42,869 --> 00:01:48,990
people in 50 countries all remote all

00:01:46,500 --> 00:01:52,020
working from the location we prefer and

00:01:48,990 --> 00:01:54,119
get lab isn't use with millions of users

00:01:52,020 --> 00:01:56,880
with more than 100 files and

00:01:54,119 --> 00:01:59,070
organizations but I think the number I'm

00:01:56,880 --> 00:02:01,439
most proud of on this slide is that we

00:01:59,070 --> 00:02:04,469
have over 2000 people who contributed

00:02:01,439 --> 00:02:06,570
back code to get laughs as we've grown

00:02:04,469 --> 00:02:09,060
as a commercial company we've been able

00:02:06,570 --> 00:02:09,390
to keep the community with us and every

00:02:09,060 --> 00:02:11,430
month

00:02:09,390 --> 00:02:12,810
there's more than a hundred improvements

00:02:11,430 --> 00:02:15,080
in get lab that come from the wider

00:02:12,810 --> 00:02:15,080
community

00:02:16,000 --> 00:02:20,780
there should be a lot of familiar logos

00:02:18,590 --> 00:02:22,990
on this slide one one of our customers

00:02:20,780 --> 00:02:27,500
I'd like to highlight is Goldman Sachs

00:02:22,990 --> 00:02:30,050
they went from releasing from from a

00:02:27,500 --> 00:02:31,520
cycle time from a time to determining to

00:02:30,050 --> 00:02:35,450
do something and then getting it out

00:02:31,520 --> 00:02:37,430
there of weeks to minutes it was such an

00:02:35,450 --> 00:02:39,680
improvement for the organization that

00:02:37,430 --> 00:02:43,459
they decided to invest in our last round

00:02:39,680 --> 00:02:45,230
off their own balance sheet I think

00:02:43,459 --> 00:02:49,390
that's the most genuine compliment you

00:02:45,230 --> 00:02:49,390
can get from a financial institution I

00:02:50,470 --> 00:02:54,860
think the biggest challenge that

00:02:53,270 --> 00:02:57,500
commercial open source software

00:02:54,860 --> 00:03:01,880
companies face today is how to deal with

00:02:57,500 --> 00:03:04,730
the hyper clouds and we're seeing that

00:03:01,880 --> 00:03:07,880
they are so-called service wrapping

00:03:04,730 --> 00:03:09,380
commercial open source projects so you

00:03:07,880 --> 00:03:13,910
have commercial open source companies

00:03:09,380 --> 00:03:16,670
like confluence who make Afghan and then

00:03:13,910 --> 00:03:18,500
the hyper clouds offer take the Kafka

00:03:16,670 --> 00:03:21,890
open source code and offer that as a

00:03:18,500 --> 00:03:24,080
service competing with the SAS services

00:03:21,890 --> 00:03:29,690
that these companies were betting on to

00:03:24,080 --> 00:03:30,830
generate revenue the reaction of the

00:03:29,690 --> 00:03:34,100
commercial open source software

00:03:30,830 --> 00:03:38,360
companies was the so-called non-compete

00:03:34,100 --> 00:03:42,170
licenses these are licenses that say hey

00:03:38,360 --> 00:03:44,390
this is open you can use this if you

00:03:42,170 --> 00:03:46,459
don't always anything you can do all the

00:03:44,390 --> 00:03:50,239
things you were doing while we're still

00:03:46,459 --> 00:03:54,709
open source but you cannot compete with

00:03:50,239 --> 00:03:56,540
us we will not allow you to offer a

00:03:54,709 --> 00:04:01,610
software as a service that completes

00:03:56,540 --> 00:04:03,560
with our offerings until recently it was

00:04:01,610 --> 00:04:04,519
unclear is this open source or not on

00:04:03,560 --> 00:04:07,880
Friday

00:04:04,519 --> 00:04:10,430
MongoDB decided to retract our license

00:04:07,880 --> 00:04:13,130
from review by the open source

00:04:10,430 --> 00:04:15,260
initiative and I think now the consensus

00:04:13,130 --> 00:04:18,200
is that this is no longer open source

00:04:15,260 --> 00:04:20,709
open source means you can take the code

00:04:18,200 --> 00:04:25,550
and you can start competing with us and

00:04:20,709 --> 00:04:27,660
this no longer allows that the reaction

00:04:25,550 --> 00:04:32,759
to these licenses has been

00:04:27,660 --> 00:04:34,530
I think many people like these companies

00:04:32,759 --> 00:04:37,409
and what they've built and they wish

00:04:34,530 --> 00:04:40,050
them well they wish them they wish for

00:04:37,409 --> 00:04:42,810
them to do well and he understand they

00:04:40,050 --> 00:04:47,009
need a business model on the other hand

00:04:42,810 --> 00:04:49,319
we also love open source and we love the

00:04:47,009 --> 00:04:51,629
lack of locking that comes with open

00:04:49,319 --> 00:04:56,129
source the ability to pack up our stuff

00:04:51,629 --> 00:04:59,370
and go elsewhere and that's a freedom

00:04:56,129 --> 00:05:02,310
that these licenses don't offer now I'm

00:04:59,370 --> 00:05:04,069
also a business owner and at some point

00:05:02,310 --> 00:05:06,509
get lab might embrace one of these

00:05:04,069 --> 00:05:08,310
non-compete licenses I'm not saying no

00:05:06,509 --> 00:05:13,259
to them I understand why these companies

00:05:08,310 --> 00:05:17,460
did it but so far we have it and that's

00:05:13,259 --> 00:05:18,990
what I wanted to talk about today but

00:05:17,460 --> 00:05:22,830
before that something that happened

00:05:18,990 --> 00:05:26,449
yesterday that was a counter-reaction

00:05:22,830 --> 00:05:30,599
and I think it was a really smart one

00:05:26,449 --> 00:05:33,210
AWS has customers and those customers

00:05:30,599 --> 00:05:35,449
were using the open verse open-source

00:05:33,210 --> 00:05:40,979
version of elasticsearch an

00:05:35,449 --> 00:05:42,750
elasticsearch had is an open core model

00:05:40,979 --> 00:05:45,750
they have both proprietary code and open

00:05:42,750 --> 00:05:49,139
source code and what amazon did is they

00:05:45,750 --> 00:05:51,360
forked and commoditized that so they

00:05:49,139 --> 00:05:53,639
offered an alternative distribution and

00:05:51,360 --> 00:05:55,580
in that distribution they took many of

00:05:53,639 --> 00:05:58,469
the features that people pay

00:05:55,580 --> 00:06:02,940
elasticsearch money for like encryption

00:05:58,469 --> 00:06:05,909
and they made that open source they went

00:06:02,940 --> 00:06:09,180
directly after the value that people pay

00:06:05,909 --> 00:06:11,819
elasticsearch for I think this is a very

00:06:09,180 --> 00:06:15,779
interesting development and we're going

00:06:11,819 --> 00:06:17,250
to see how this plays out but it's clear

00:06:15,779 --> 00:06:19,710
that commercial open source companies

00:06:17,250 --> 00:06:27,479
are now vulnerable to this fork and

00:06:19,710 --> 00:06:30,449
commoditize by the hyper clouds how do

00:06:27,479 --> 00:06:33,930
you get resistant how do you resist

00:06:30,449 --> 00:06:36,229
getting Fortin commoditized I don't have

00:06:33,930 --> 00:06:39,470
all the answers but here are some things

00:06:36,229 --> 00:06:41,930
we believe currently at get lab

00:06:39,470 --> 00:06:44,660
we believe it's more easy to be

00:06:41,930 --> 00:06:47,180
commoditized if some use cases are

00:06:44,660 --> 00:06:50,990
completely proprietary and some use

00:06:47,180 --> 00:06:54,380
cases are completely open-source we

00:06:50,990 --> 00:06:56,510
think it's more easy to be commoditized

00:06:54,380 --> 00:07:02,840
if you have fewer proprietary features

00:06:56,510 --> 00:07:04,640
is it easier to replicate those we think

00:07:02,840 --> 00:07:09,650
you're more likely to be componentized

00:07:04,640 --> 00:07:11,630
if your users work to an API if users

00:07:09,650 --> 00:07:15,710
were to user interface that is hard to

00:07:11,630 --> 00:07:18,380
copy an API is a much more limited set

00:07:15,710 --> 00:07:20,870
of interactions and you saw Amazon do

00:07:18,380 --> 00:07:23,210
this with MongoDB Amazon now has a

00:07:20,870 --> 00:07:25,580
MongoDB compatible offering that doesn't

00:07:23,210 --> 00:07:28,610
use any of MongoDB source code on the

00:07:25,580 --> 00:07:31,880
back end they made it on top of Aurora

00:07:28,610 --> 00:07:35,090
also because MongoDB is a DP on Amazon

00:07:31,880 --> 00:07:38,120
this hesitant to use that license but if

00:07:35,090 --> 00:07:39,980
the interface is just an API it's much

00:07:38,120 --> 00:07:44,080
easier to get displaced then when you

00:07:39,980 --> 00:07:46,550
have a richer experience with your user

00:07:44,080 --> 00:07:50,419
another thing is the price sensitivity

00:07:46,550 --> 00:07:52,610
of your buyer if your buyer cares about

00:07:50,419 --> 00:07:54,980
saving money they're much more likely to

00:07:52,610 --> 00:07:57,580
flock to an open-source alternative for

00:07:54,980 --> 00:08:01,490
your product for your paid product and

00:07:57,580 --> 00:08:03,770
lastly if your users frequently

00:08:01,490 --> 00:08:05,750
contribute to open source they're much

00:08:03,770 --> 00:08:09,470
more likely to open source the features

00:08:05,750 --> 00:08:14,150
that you ask money for later in the talk

00:08:09,470 --> 00:08:16,460
I'll show how firebase open chord is on

00:08:14,150 --> 00:08:20,480
the right side of this it's less likely

00:08:16,460 --> 00:08:22,580
to be commoditized but before that I

00:08:20,480 --> 00:08:26,630
want to go back a bit to how we found

00:08:22,580 --> 00:08:28,250
our business model we kind of did it

00:08:26,630 --> 00:08:31,120
like everything we do at gate lab we

00:08:28,250 --> 00:08:36,260
stumbled along we call that iteration

00:08:31,120 --> 00:08:38,450
and it started with so-called ice cream

00:08:36,260 --> 00:08:40,430
money the ice cream money were the

00:08:38,450 --> 00:08:43,820
donations that people send demetri

00:08:40,430 --> 00:08:45,170
demetri was living in the ukraine and he

00:08:43,820 --> 00:08:47,450
got about seven dollars of donations

00:08:45,170 --> 00:08:48,770
every month and he and his wife went out

00:08:47,450 --> 00:08:50,860
from that money and bought ice cream

00:08:48,770 --> 00:08:53,960
together

00:08:50,860 --> 00:08:57,860
at the highest point when we did a big

00:08:53,960 --> 00:09:01,700
drive it shows that I'm not Jim because

00:08:57,860 --> 00:09:04,160
Jim can get ten million dollars I got a

00:09:01,700 --> 00:09:07,130
thousand dollars so that wouldn't even

00:09:04,160 --> 00:09:09,920
that a big drive couldn't even get the

00:09:07,130 --> 00:09:11,480
money to sustain Dimitri and Dimitri was

00:09:09,920 --> 00:09:13,850
living the Ukraine and getting his own

00:09:11,480 --> 00:09:17,300
water from a well every morning so like

00:09:13,850 --> 00:09:19,580
even that didn't sustain it then we

00:09:17,300 --> 00:09:22,850
tried consultancy so we helped people to

00:09:19,580 --> 00:09:25,310
set up an upgrade kit lab the problem

00:09:22,850 --> 00:09:26,930
was the easier we made that the more we

00:09:25,310 --> 00:09:29,530
added to our documentation the fewer

00:09:26,930 --> 00:09:33,440
people wanted our consultancy services

00:09:29,530 --> 00:09:35,930
so we put ourselves out of a job then we

00:09:33,440 --> 00:09:37,850
did page development we said hey there's

00:09:35,930 --> 00:09:41,060
so many people wanting new features in

00:09:37,850 --> 00:09:43,430
get lab will make them for you just pay

00:09:41,060 --> 00:09:46,040
us and people signed up and said okay I

00:09:43,430 --> 00:09:47,570
want to pay this much and then other

00:09:46,040 --> 00:09:49,310
people came in and said I want the same

00:09:47,570 --> 00:09:50,660
feature we said oh we have good news

00:09:49,310 --> 00:09:53,660
there's another company that wants to

00:09:50,660 --> 00:09:55,040
send you pay half and then both of them

00:09:53,660 --> 00:09:58,430
went dead because both of them were

00:09:55,040 --> 00:10:01,280
waiting for the other to pay worse than

00:09:58,430 --> 00:10:02,630
that they said hey we have a preferred

00:10:01,280 --> 00:10:04,580
purchasing agreement with another

00:10:02,630 --> 00:10:07,190
company they do all of our software

00:10:04,580 --> 00:10:09,470
development we'd like to contribute to

00:10:07,190 --> 00:10:11,510
feature we're like okay while they

00:10:09,470 --> 00:10:14,480
normally develop in Java but they can do

00:10:11,510 --> 00:10:17,720
Ruby and go too and we ended up spending

00:10:14,480 --> 00:10:19,310
more time getting their code up to snuff

00:10:17,720 --> 00:10:21,110
than we would have spent making the

00:10:19,310 --> 00:10:24,080
feature ourselves and we didn't get paid

00:10:21,110 --> 00:10:25,670
for it so that didn't work then we tried

00:10:24,080 --> 00:10:29,990
support you know who you're going to

00:10:25,670 --> 00:10:31,460
call get laughs but after a year most

00:10:29,990 --> 00:10:33,620
people haven't picked up the phone on

00:10:31,460 --> 00:10:36,770
once so they didn't use it

00:10:33,620 --> 00:10:39,800
they canceled their subscription we

00:10:36,770 --> 00:10:42,230
tried packaging but we were a bit

00:10:39,800 --> 00:10:44,180
reluctant Red Hat does a great job with

00:10:42,230 --> 00:10:45,800
packaging but we want to get laughs to

00:10:44,180 --> 00:10:47,990
be used by everyone we wanted to first

00:10:45,800 --> 00:10:51,680
of all large companies to use it like

00:10:47,990 --> 00:10:53,330
they do now but the problem was if you

00:10:51,680 --> 00:10:55,310
make your golden version your great

00:10:53,330 --> 00:10:57,080
version if you make that proprietary and

00:10:55,310 --> 00:10:59,150
you give everyone else a version that's

00:10:57,080 --> 00:11:02,330
behind an insecure you're not going to

00:10:59,150 --> 00:11:03,470
get that adoption we fought about the

00:11:02,330 --> 00:11:05,660
data play with

00:11:03,470 --> 00:11:07,250
about get Lancome I started getting

00:11:05,660 --> 00:11:09,320
louder calm thinking this is the new

00:11:07,250 --> 00:11:11,720
Salesforce this is gonna be great but

00:11:09,320 --> 00:11:14,090
everyone was running itself managed so

00:11:11,720 --> 00:11:17,060
then didn't work we tried a so called

00:11:14,090 --> 00:11:18,800
single tenant service your own get lab

00:11:17,060 --> 00:11:21,080
server without any other people on it

00:11:18,800 --> 00:11:24,230
hosted by us turns out that's a lot

00:11:21,080 --> 00:11:25,940
harder than it sounds at least for us we

00:11:24,230 --> 00:11:28,220
didn't even go the appliance route where

00:11:25,940 --> 00:11:30,410
we sold hardware and we didn't want to

00:11:28,220 --> 00:11:34,670
end up in jail so we didn't do an

00:11:30,410 --> 00:11:35,900
initial coin offering we settled on open

00:11:34,670 --> 00:11:37,430
core like like most open source

00:11:35,900 --> 00:11:40,670
companies it's a great business model

00:11:37,430 --> 00:11:45,740
it's 90 plus percent margins it's almost

00:11:40,670 --> 00:11:49,040
all profit but then we had a much harder

00:11:45,740 --> 00:11:51,770
decision what is going to be open source

00:11:49,040 --> 00:11:53,960
what is going to be proprietary you want

00:11:51,770 --> 00:11:58,400
some predictability there you want

00:11:53,960 --> 00:12:01,670
people to say hey I can predict ahead of

00:11:58,400 --> 00:12:03,740
time what are you going to charge for we

00:12:01,670 --> 00:12:06,140
try to do it based on the sdlc to a

00:12:03,740 --> 00:12:07,820
stage like everything in create would be

00:12:06,140 --> 00:12:10,310
open source and everything in monitor

00:12:07,820 --> 00:12:14,180
would be proprietary it really hurt our

00:12:10,310 --> 00:12:17,750
adoption across stages we try to based

00:12:14,180 --> 00:12:19,880
on company size the bigger your company

00:12:17,750 --> 00:12:22,090
is the more likely you want certain

00:12:19,880 --> 00:12:24,830
features and we'll charge for those

00:12:22,090 --> 00:12:26,360
didn't really work the world features

00:12:24,830 --> 00:12:29,660
that big companies wanted that small

00:12:26,360 --> 00:12:31,190
ones didn't want so some small company

00:12:29,660 --> 00:12:34,090
said why do I have to pay the big

00:12:31,190 --> 00:12:36,530
company price I'm net a big company and

00:12:34,090 --> 00:12:37,910
the last thing we tried that didn't work

00:12:36,530 --> 00:12:40,190
was based on the maturity of the

00:12:37,910 --> 00:12:42,080
organization the more mature an

00:12:40,190 --> 00:12:44,810
organization they want certain features

00:12:42,080 --> 00:12:48,230
that companies just starting don't want

00:12:44,810 --> 00:12:51,320
the problem is our most expensive plans

00:12:48,230 --> 00:12:53,300
or for the very mature organizations but

00:12:51,320 --> 00:12:55,100
the customers more most willing to buy

00:12:53,300 --> 00:12:56,990
where people just starting with the

00:12:55,100 --> 00:12:58,610
digital transformation they needed the

00:12:56,990 --> 00:13:00,260
most help they were the most willing to

00:12:58,610 --> 00:13:03,890
pay so it didn't match with the

00:13:00,260 --> 00:13:06,050
willingness to pay and we settled on

00:13:03,890 --> 00:13:09,320
buyer based open core and I'll explain

00:13:06,050 --> 00:13:14,410
how that looks so we have four different

00:13:09,320 --> 00:13:17,030
editions of gitlab our

00:13:14,410 --> 00:13:18,860
open-source addition our core edition is

00:13:17,030 --> 00:13:21,470
totally free and then we have three paid

00:13:18,860 --> 00:13:26,000
editions ranging from four to ninety

00:13:21,470 --> 00:13:28,490
nine dollars per user per month our most

00:13:26,000 --> 00:13:31,220
affordable edition is aimed at managers

00:13:28,490 --> 00:13:34,610
in a company our most expensive Edition

00:13:31,220 --> 00:13:37,400
is aimed at executives in the company so

00:13:34,610 --> 00:13:41,960
managers want things like automation and

00:13:37,400 --> 00:13:44,480
and and stability and reliability the

00:13:41,960 --> 00:13:45,740
executives won't want to have overview

00:13:44,480 --> 00:13:48,500
in their company what's happening

00:13:45,740 --> 00:13:49,760
roadmaps value streams security

00:13:48,500 --> 00:13:53,030
dashboards across the entire

00:13:49,760 --> 00:13:55,040
organization we also have kind of

00:13:53,030 --> 00:13:59,180
different ways of reaching people the

00:13:55,040 --> 00:14:01,250
free product developer advocacy the

00:13:59,180 --> 00:14:04,100
starter product it's self-serve you sign

00:14:01,250 --> 00:14:05,660
up online the premium product in the

00:14:04,100 --> 00:14:07,610
middle it's inside sales you can talk

00:14:05,660 --> 00:14:10,280
with a salesperson but in the end you

00:14:07,610 --> 00:14:12,410
sign up by the website the top one

00:14:10,280 --> 00:14:14,570
enterprise sales someone comes to buy

00:14:12,410 --> 00:14:17,600
your organization they bring along a

00:14:14,570 --> 00:14:19,610
solution architect and it takes a lot

00:14:17,600 --> 00:14:25,420
longer but it's a much bigger ticket

00:14:19,610 --> 00:14:28,460
size so buyer base open core means

00:14:25,420 --> 00:14:29,930
putting features and pay tiers and the

00:14:28,460 --> 00:14:33,320
type of persona that would buy

00:14:29,930 --> 00:14:35,990
determines where things go and the

00:14:33,320 --> 00:14:38,120
higher someone is in an organization the

00:14:35,990 --> 00:14:40,840
more you ask because the higher our

00:14:38,120 --> 00:14:43,700
people up the more budget they have and

00:14:40,840 --> 00:14:45,650
the three tiers it's pretty classic you

00:14:43,700 --> 00:14:49,280
do good better best of your three

00:14:45,650 --> 00:14:50,900
variants of your product what's

00:14:49,280 --> 00:14:52,850
remarkable is that we have a big price

00:14:50,900 --> 00:14:55,310
difference between the tiers it's 5x

00:14:52,850 --> 00:14:57,560
which makes for a 25 X price difference

00:14:55,310 --> 00:15:00,290
between the lowest and the highest paid

00:14:57,560 --> 00:15:02,060
offering and that helps us compete both

00:15:00,290 --> 00:15:04,370
at the bottom end of the market and at

00:15:02,060 --> 00:15:06,230
the high end of the market but you need

00:15:04,370 --> 00:15:07,940
a hybrid sales strategy to pull that off

00:15:06,230 --> 00:15:11,590
you need different ways for people to

00:15:07,940 --> 00:15:11,590
purchase it purchase the product

00:15:16,310 --> 00:15:23,520
now back to that initial slide

00:15:19,020 --> 00:15:25,380
why does firebase opencore help with

00:15:23,520 --> 00:15:30,270
being resistant to being forked and

00:15:25,380 --> 00:15:31,590
commoditized so you're less likely to be

00:15:30,270 --> 00:15:34,140
commoditized if you have more

00:15:31,590 --> 00:15:36,060
proprietary functionality and if you

00:15:34,140 --> 00:15:38,190
have that kind of interwoven in the

00:15:36,060 --> 00:15:40,230
application that's great because

00:15:38,190 --> 00:15:42,030
executives normally don't want something

00:15:40,230 --> 00:15:44,430
that nobody else wants you just want a

00:15:42,030 --> 00:15:46,680
better overview so almost everything has

00:15:44,430 --> 00:15:50,180
some kind of a dashboard or company-wide

00:15:46,680 --> 00:15:52,920
overview that you can get to executives

00:15:50,180 --> 00:15:56,420
you're less likely to be commoditized if

00:15:52,920 --> 00:15:59,160
you have more proprietary features well

00:15:56,420 --> 00:16:02,220
executives turn out to have an unlimited

00:15:59,160 --> 00:16:04,290
supply of feature requests it is amazing

00:16:02,220 --> 00:16:06,300
what the complexities of organizations

00:16:04,290 --> 00:16:10,320
at scale so there's always something new

00:16:06,300 --> 00:16:12,480
for us to add to the application you are

00:16:10,320 --> 00:16:14,100
less likely to be commoditized if you

00:16:12,480 --> 00:16:16,830
interact through the user interface

00:16:14,100 --> 00:16:18,930
which is great exactly this tend to use

00:16:16,830 --> 00:16:23,040
the web interface of get lab and rarely

00:16:18,930 --> 00:16:24,570
use the API you're less likely to be

00:16:23,040 --> 00:16:28,460
commoditized as someone is price

00:16:24,570 --> 00:16:31,860
insensitive again this fits really well

00:16:28,460 --> 00:16:33,150
executives tend to rigid Authority they

00:16:31,860 --> 00:16:35,160
can afford to spend money on something

00:16:33,150 --> 00:16:36,780
that provides them value individual

00:16:35,160 --> 00:16:38,700
contributors frequently have to go to a

00:16:36,780 --> 00:16:42,900
big approval process before they can get

00:16:38,700 --> 00:16:45,210
something and lastly are these people

00:16:42,900 --> 00:16:49,740
contributing to open source you'd rather

00:16:45,210 --> 00:16:51,060
not have a paid feature really demanded

00:16:49,740 --> 00:16:53,700
by people that contribute to open source

00:16:51,060 --> 00:16:56,310
here again it works executives tend to

00:16:53,700 --> 00:16:58,680
not be active software developers so

00:16:56,310 --> 00:17:04,790
they're less likely to contribute it so

00:16:58,680 --> 00:17:07,530
all of these things work out so that was

00:17:04,790 --> 00:17:09,780
what I wanted to tell we're a commercial

00:17:07,530 --> 00:17:12,780
open source software company we face a

00:17:09,780 --> 00:17:16,199
unique challenge from the surface

00:17:12,780 --> 00:17:18,270
wrapping by the hyper clouds we're right

00:17:16,199 --> 00:17:20,310
now betting on buyer based open core and

00:17:18,270 --> 00:17:22,589
we think it's more resistant to service

00:17:20,310 --> 00:17:25,670
wrapping than the other open core models

00:17:22,589 --> 00:17:25,670
thank you for your attention

00:17:27,069 --> 00:17:32,720
hold on one second I suspect one thing I

00:17:30,620 --> 00:17:34,790
always admire about gitlab is like you

00:17:32,720 --> 00:17:36,710
also have like an incredible internal

00:17:34,790 --> 00:17:38,780
development velocity within your org

00:17:36,710 --> 00:17:41,840
give us some secrets here at least give

00:17:38,780 --> 00:17:44,720
me the secret like I think it's one of

00:17:41,840 --> 00:17:47,090
our values we have two values that are

00:17:44,720 --> 00:17:49,429
very different from other companies

00:17:47,090 --> 00:17:52,299
that's iteration and transparency and

00:17:49,429 --> 00:17:54,919
that means we accept when things aren't

00:17:52,299 --> 00:17:56,929
done the first time and it's very

00:17:54,919 --> 00:17:59,090
painful I'll tell you an example I just

00:17:56,929 --> 00:18:02,179
read a blog post about someone and he

00:17:59,090 --> 00:18:04,100
tested our features and he say tracing

00:18:02,179 --> 00:18:06,200
and get lab is not really good it's just

00:18:04,100 --> 00:18:06,740
a link that goes to Jagger right and

00:18:06,200 --> 00:18:08,480
he's right

00:18:06,740 --> 00:18:10,520
that's the minimal thing we shipped and

00:18:08,480 --> 00:18:12,290
it feels very painful yeah but guess

00:18:10,520 --> 00:18:15,770
what in the coming months we'll be

00:18:12,290 --> 00:18:18,110
piling on to that but that it's taking

00:18:15,770 --> 00:18:19,700
those small steps really rapidly that is

00:18:18,110 --> 00:18:21,950
the trick because every time you take a

00:18:19,700 --> 00:18:23,690
step you get feedback and you learn more

00:18:21,950 --> 00:18:26,150
about where you need to go there's less

00:18:23,690 --> 00:18:29,030
less coordination needed to take this

00:18:26,150 --> 00:18:30,470
the next step you as an organization and

00:18:29,030 --> 00:18:32,929
as a person you have to be willing with

00:18:30,470 --> 00:18:35,900
we call it or actually it's not frequent

00:18:32,929 --> 00:18:37,760
word the CEO of github allowed me to say

00:18:35,900 --> 00:18:39,740
this because it living with a low level

00:18:37,760 --> 00:18:41,990
of shame so that's one of our company

00:18:39,740 --> 00:18:44,570
values we iterate and we're very part of

00:18:41,990 --> 00:18:47,090
our velocity yeah it's so impressive I

00:18:44,570 --> 00:18:50,330
can tell you you literally can see the

00:18:47,090 --> 00:18:52,580
gitlab at work cuz I can we we

00:18:50,330 --> 00:18:55,250
definitely troll your cheese sweet docks

00:18:52,580 --> 00:18:57,290
we get ideas about a build culture it's

00:18:55,250 --> 00:18:59,360
so impressive if you you know not only

00:18:57,290 --> 00:19:01,669
is the gitlab product awesome but you

00:18:59,360 --> 00:19:03,860
really have to check out house is

00:19:01,669 --> 00:19:05,480
running the company huge respect thank

00:19:03,860 --> 00:19:08,110
you so much thanks again all right thank

00:19:05,480 --> 00:19:08,110

YouTube URL: https://www.youtube.com/watch?v=G6ZupYzr_Zg


