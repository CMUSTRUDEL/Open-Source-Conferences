Title: Network interface configuration on a Linux NOS - Roopa Prabhu
Publication date: 2016-10-07
Playlist: Netdev 1.2 - Day 2 - Thursday October 6, 2016
Description: 
	http://netdevconf.org/1.2/session.html?roopa-prabhu
Captions: 
	00:00:09,660 --> 00:00:16,290
my name is aduba and I am from cumulus

00:00:12,540 --> 00:00:18,540
networks network interface configuration

00:00:16,290 --> 00:00:21,210
on and richness I think this was the

00:00:18,540 --> 00:00:23,550
most lightly loaded topic and in the

00:00:21,210 --> 00:00:30,810
entire conference there is no BPF is no

00:00:23,550 --> 00:00:34,070
TPP and Texans so okay a bit of context

00:00:30,810 --> 00:00:36,480
I want to start with a bit of context

00:00:34,070 --> 00:00:38,640
people have stopped really talking about

00:00:36,480 --> 00:00:40,559
network interface management actually

00:00:38,640 --> 00:00:42,330
the result problem more people are

00:00:40,559 --> 00:00:46,470
totally completely ignoring the problem

00:00:42,330 --> 00:00:53,430
or their for other ways to do network

00:00:46,470 --> 00:00:57,080
interface management on Linux water

00:00:53,430 --> 00:01:00,390
cumulus and cumulus was the first

00:00:57,080 --> 00:01:03,030
company that wanted to bring limits

00:01:00,390 --> 00:01:04,890
disaggregation and then X equal system

00:01:03,030 --> 00:01:06,420
to routers and switches these are

00:01:04,890 --> 00:01:11,880
enterprise-grade throughout peasants

00:01:06,420 --> 00:01:14,310
witches so and they wanted to it's a big

00:01:11,880 --> 00:01:17,630
shift the main purpose was leverage

00:01:14,310 --> 00:01:20,789
existing Linux ecosystems and tools and

00:01:17,630 --> 00:01:24,149
mainly bring the automation of Linux to

00:01:20,789 --> 00:01:28,350
routers and switches which means that

00:01:24,149 --> 00:01:30,329
make the existing tools and existing

00:01:28,350 --> 00:01:32,430
automation tools work the ones that

00:01:30,329 --> 00:01:35,759
worked on your server make it work on

00:01:32,430 --> 00:01:39,420
your routers and switches and when they

00:01:35,759 --> 00:01:41,549
started the founders and sheath is one

00:01:39,420 --> 00:01:43,259
one of the people sitting in there in

00:01:41,549 --> 00:01:47,990
the audience they started building a

00:01:43,259 --> 00:01:50,909
team of a mix of people people from the

00:01:47,990 --> 00:01:56,789
closed-source well I would say the

00:01:50,909 --> 00:02:01,070
darker side of networking which were

00:01:56,789 --> 00:02:05,340
used to do configuring router switch

00:02:01,070 --> 00:02:07,710
wire I and a few of the people from the

00:02:05,340 --> 00:02:10,890
OS distribution world so it was a nice

00:02:07,710 --> 00:02:14,640
mix of people it has been fun but then

00:02:10,890 --> 00:02:16,650
when this leads into why I

00:02:14,640 --> 00:02:20,069
rolled in this whole network interface

00:02:16,650 --> 00:02:22,920
management problem is so when people

00:02:20,069 --> 00:02:24,930
came when okay then we said we told

00:02:22,920 --> 00:02:28,290
people that we are accelerating the

00:02:24,930 --> 00:02:31,920
Linux kernel data path using us which is

00:02:28,290 --> 00:02:41,489
like so when a networking guy testing in

00:02:31,920 --> 00:02:43,560
our box and it doesn't handle or it

00:02:41,489 --> 00:02:46,680
doesn't have you belong to me it's done

00:02:43,560 --> 00:02:50,100
easily on this PLI in any other vendor

00:02:46,680 --> 00:02:52,650
box so and being one of the kind of

00:02:50,100 --> 00:02:54,390
Madinah is a cumulus yeah everything I

00:02:52,650 --> 00:02:58,590
was getting call them to every other

00:02:54,390 --> 00:03:00,750
network configuration problems so I

00:02:58,590 --> 00:03:02,790
guess goal is if a network interface

00:03:00,750 --> 00:03:05,040
manager a mic ramble if the slides have

00:03:02,790 --> 00:03:08,250
forgotten a few things that have added

00:03:05,040 --> 00:03:09,540
to the slides here so the main thing is

00:03:08,250 --> 00:03:13,019
you make network interface management

00:03:09,540 --> 00:03:14,730
painless and easy you give a config file

00:03:13,019 --> 00:03:19,320
and it has to configure interfaces for

00:03:14,730 --> 00:03:21,660
you and ok for a mouse when we started

00:03:19,320 --> 00:03:23,549
we wanted the network interfaces file to

00:03:21,660 --> 00:03:29,940
look exactly same similar to what it

00:03:23,549 --> 00:03:32,820
looked on a server so this slide just

00:03:29,940 --> 00:03:36,090
talks about a linux-based last and Linux

00:03:32,820 --> 00:03:37,739
as your nas so many people we all know

00:03:36,090 --> 00:03:40,470
that every Network device today uses

00:03:37,739 --> 00:03:43,049
Linux in some way was here closed boxes

00:03:40,470 --> 00:03:46,620
proprietary API they usually have a CLI

00:03:43,049 --> 00:03:48,930
their black boxes and what kuna started

00:03:46,620 --> 00:03:51,000
with making Linux as you are not and as

00:03:48,930 --> 00:03:53,459
you have seen here let us have been

00:03:51,000 --> 00:03:56,850
doing Hardware excitation since very

00:03:53,459 --> 00:03:59,220
many years now and we wanted to bring

00:03:56,850 --> 00:04:00,630
that we wanted to say that you it's the

00:03:59,220 --> 00:04:05,640
same Linux that you run on the server

00:04:00,630 --> 00:04:08,519
and you jaesik so we are targeting at

00:04:05,640 --> 00:04:11,150
open boxes the Linux API to be your

00:04:08,519 --> 00:04:14,850
networking API which is mainly meta link

00:04:11,150 --> 00:04:18,870
and yeah automate your Linux like your

00:04:14,850 --> 00:04:21,419
routers which is like your service so

00:04:18,870 --> 00:04:22,770
system analysis people have stopped

00:04:21,419 --> 00:04:24,930
talking about network interface

00:04:22,770 --> 00:04:26,669
management it used to be a problem I

00:04:24,930 --> 00:04:28,699
remember when I got involved in the

00:04:26,669 --> 00:04:32,460
network interface management I wanted to

00:04:28,699 --> 00:04:34,889
get into a workshop at LPC a few years

00:04:32,460 --> 00:04:37,320
back to talk about a few problems and

00:04:34,889 --> 00:04:39,660
certainly that workshop got cancelled

00:04:37,320 --> 00:04:41,790
and I'm not sure if LPC conducts the

00:04:39,660 --> 00:04:45,389
network interface management workshop

00:04:41,790 --> 00:04:48,720
anymore so my the 30 days

00:04:45,389 --> 00:04:51,900
I think it's either forgotten problem or

00:04:48,720 --> 00:04:54,990
for example the server and other

00:04:51,900 --> 00:04:59,160
operating system desktops mooney we use

00:04:54,990 --> 00:05:00,810
debian and I know that debian the

00:04:59,160 --> 00:05:03,930
Installer actually creates a small

00:05:00,810 --> 00:05:07,560
interface config file which is mostly 0

00:05:03,930 --> 00:05:10,139
which is DHCP and that's it and there is

00:05:07,560 --> 00:05:12,090
nothing else if that doesn't work well

00:05:10,139 --> 00:05:13,500
that usually mostly works but then I've

00:05:12,090 --> 00:05:14,850
also seen that people are laptops

00:05:13,500 --> 00:05:16,590
because the server their network

00:05:14,850 --> 00:05:18,870
interface management manager because

00:05:16,590 --> 00:05:22,590
yeah they can do it with other ways it's

00:05:18,870 --> 00:05:24,599
just a simple problem their operating

00:05:22,590 --> 00:05:26,990
systems are moved on they have

00:05:24,599 --> 00:05:30,150
orchestration tools and it's usually a

00:05:26,990 --> 00:05:32,760
container or a VM have a fixed network

00:05:30,150 --> 00:05:34,289
interface attributes which are tied in

00:05:32,760 --> 00:05:37,650
with the provisioning tool and that

00:05:34,289 --> 00:05:42,770
takes care of configuring with

00:05:37,650 --> 00:05:46,020
background interfaces well but we got

00:05:42,770 --> 00:05:49,080
when we moved to existing server

00:05:46,020 --> 00:05:51,750
distribution on a router we suddenly got

00:05:49,080 --> 00:05:53,580
trying to figure out how to do this

00:05:51,750 --> 00:05:56,070
whole back of network interface

00:05:53,580 --> 00:05:58,039
configuration and like I said we

00:05:56,070 --> 00:06:00,660
leveraged most of the existing

00:05:58,039 --> 00:06:04,320
networking companies for example Quadra

00:06:00,660 --> 00:06:06,690
is an example lldp it's all existing out

00:06:04,320 --> 00:06:09,060
there and we try to improve it we test

00:06:06,690 --> 00:06:11,880
it very much in correction systems and

00:06:09,060 --> 00:06:14,449
in different environments and we made

00:06:11,880 --> 00:06:14,449
them focused

00:06:18,080 --> 00:06:23,659
most important tradition is fatty mostly

00:06:21,470 --> 00:06:27,289
a cookie cutter configuration you create

00:06:23,659 --> 00:06:30,440
a hundred real answer and interface and

00:06:27,289 --> 00:06:35,900
configure some configure port speeds and

00:06:30,440 --> 00:06:37,370
skill we won a ton of attributes sorry a

00:06:35,900 --> 00:06:39,289
ton of networking demons ton of

00:06:37,370 --> 00:06:41,810
protocols we have a bunch of things at

00:06:39,289 --> 00:06:47,569
the kernel so it's a ton of attributes

00:06:41,810 --> 00:06:50,750
to configure on the interface so decided

00:06:47,569 --> 00:06:52,610
with the goal that we will we wanted

00:06:50,750 --> 00:06:53,780
like I said be whatever the automation

00:06:52,610 --> 00:06:56,629
tools already configuring network

00:06:53,780 --> 00:06:58,580
interfaces on a server we wanted the

00:06:56,629 --> 00:07:01,190
exact same automation tools to

00:06:58,580 --> 00:07:04,819
contribute work on us honor on a router

00:07:01,190 --> 00:07:07,729
or a switch so our goals were keeping it

00:07:04,819 --> 00:07:10,030
extendable the delegate of his manager

00:07:07,729 --> 00:07:12,199
should take on at add-on modules to

00:07:10,030 --> 00:07:14,990
configure any special things on a

00:07:12,199 --> 00:07:20,330
network OS and not do certain things on

00:07:14,990 --> 00:07:22,550
a server and we okay and we wanted to do

00:07:20,330 --> 00:07:25,969
the special networking router switch

00:07:22,550 --> 00:07:28,520
strings using system policies the system

00:07:25,969 --> 00:07:33,620
would drop in a policy file and that

00:07:28,520 --> 00:07:36,409
would make specific things work for for

00:07:33,620 --> 00:07:38,360
NAS and remember that the hardware

00:07:36,409 --> 00:07:41,719
doesn't support all the functions with

00:07:38,360 --> 00:07:43,370
the kernel supports so we wanted the

00:07:41,719 --> 00:07:47,029
network interface manager to understand

00:07:43,370 --> 00:07:50,599
that via policies and not allow certain

00:07:47,029 --> 00:07:53,599
things so that's when we started this

00:07:50,599 --> 00:07:55,969
virtual network interface manager and I

00:07:53,599 --> 00:07:58,159
think I've covered most of this so

00:07:55,969 --> 00:08:01,129
Debian came with I shut down so when we

00:07:58,159 --> 00:08:01,879
shipped our initial coil we did should

00:08:01,129 --> 00:08:05,270
with a shutdown

00:08:01,879 --> 00:08:06,860
I I don't know how many people work have

00:08:05,270 --> 00:08:08,060
worked with the Debian distribution or

00:08:06,860 --> 00:08:10,370
the derivative of a Debian distribution

00:08:08,060 --> 00:08:12,169
but it's mainly an EDC network

00:08:10,370 --> 00:08:15,319
interfaces file and you have some static

00:08:12,169 --> 00:08:17,690
config in that in that file but we soon

00:08:15,319 --> 00:08:20,129
realize that I have done was it could do

00:08:17,690 --> 00:08:24,539
basic VLANs it uses the old bill

00:08:20,129 --> 00:08:27,449
PIV config and we could do a bridges it

00:08:24,539 --> 00:08:29,339
could one day lead kind of bridge to not

00:08:27,449 --> 00:08:33,419
the VLAN filtering bridge and basic

00:08:29,339 --> 00:08:36,240
bonds but yeah visas whether we could

00:08:33,419 --> 00:08:39,529
not put go production with it because it

00:08:36,240 --> 00:08:41,849
had issues we if we wanted to load

00:08:39,529 --> 00:08:43,819
reloader config you have to down an

00:08:41,849 --> 00:08:46,560
interface and people in the networking

00:08:43,819 --> 00:08:49,500
world they don't really like on

00:08:46,560 --> 00:08:53,759
especially on the switch or a router so

00:08:49,500 --> 00:08:55,439
then i into here like i said mostly they

00:08:53,759 --> 00:08:57,360
came as criminal problems and then i

00:08:55,439 --> 00:08:59,490
wanted to do something because of all

00:08:57,360 --> 00:09:01,350
these bugs piling up and then i started

00:08:59,490 --> 00:09:03,600
i have done i was doing a little bit of

00:09:01,350 --> 00:09:06,110
Python during those days so I thought it

00:09:03,600 --> 00:09:09,930
would be an easy problem then I started

00:09:06,110 --> 00:09:12,290
the main thing in I sat down to was a

00:09:09,930 --> 00:09:15,209
dependency graph of all the Scott

00:09:12,290 --> 00:09:19,649
various Sakhalin both network interfaces

00:09:15,209 --> 00:09:24,110
that we do on Linux for a bond and then

00:09:19,649 --> 00:09:37,189
bridge and variety phases and so on so

00:09:24,110 --> 00:09:39,750
that we have extreme Debian as well so

00:09:37,189 --> 00:09:42,990
who uses the same in etc' network

00:09:39,750 --> 00:09:46,009
interfaces file is just that it does a

00:09:42,990 --> 00:09:48,569
lot more than what I have cut down did

00:09:46,009 --> 00:09:50,880
we wanted to keep the pluggable

00:09:48,569 --> 00:09:53,009
architecture if I have down I have down

00:09:50,880 --> 00:09:55,709
so you could drop in a script and that

00:09:53,009 --> 00:10:00,480
could for additional interface country

00:09:55,709 --> 00:10:01,800
and that would that worked well for us

00:10:00,480 --> 00:10:04,079
because we wanted to add additional

00:10:01,800 --> 00:10:07,019
modules for STP and so on I'll cover

00:10:04,079 --> 00:10:09,029
that in the next slides and we wanted

00:10:07,019 --> 00:10:12,449
the ESB the fiscal sedation had to be

00:10:09,029 --> 00:10:16,410
template able temple yeah templates take

00:10:12,449 --> 00:10:18,920
it like I said if people wanna configure

00:10:16,410 --> 00:10:23,420
a hundred VLANs on on a trunk code

00:10:18,920 --> 00:10:26,210
making them add config for 100 we land

00:10:23,420 --> 00:10:27,440
this was not an option so the easiest

00:10:26,210 --> 00:10:34,160
thing sorry

00:10:27,440 --> 00:10:37,010
the easiest thing was to use an existing

00:10:34,160 --> 00:10:40,190
template of language like Python and

00:10:37,010 --> 00:10:42,110
Python has we I did integrate some Mako

00:10:40,190 --> 00:10:45,890
template engine into I have done to

00:10:42,110 --> 00:10:50,390
which like in this example you can see

00:10:45,890 --> 00:10:58,070
the config much smaller so there's these

00:10:50,390 --> 00:11:01,580
slides do cover examples and agenda like

00:10:58,070 --> 00:11:04,850
I said I said done to is has become sort

00:11:01,580 --> 00:11:07,040
of a buffer like people people in

00:11:04,850 --> 00:11:10,280
tremulous they think that okay if it's a

00:11:07,040 --> 00:11:12,050
they usually come to me as the eternal

00:11:10,280 --> 00:11:13,910
problem and I hope that has been a nice

00:11:12,050 --> 00:11:15,890
buffer in between oh no you can solve

00:11:13,910 --> 00:11:17,810
this problem outside the kernel and

00:11:15,890 --> 00:11:20,750
maybe knife have done to buy our policy

00:11:17,810 --> 00:11:23,210
and so on so generally if any of my

00:11:20,750 --> 00:11:27,250
kernel pass gets rejected it ends up in

00:11:23,210 --> 00:11:27,250
as a Python code denies of don't you

00:11:28,030 --> 00:11:36,920
so the basic config is physical port

00:11:33,230 --> 00:11:39,410
config or link attributes B is each tool

00:11:36,920 --> 00:11:41,210
we we configure all as switch switch

00:11:39,410 --> 00:11:45,140
ports using each tool the speed duplex

00:11:41,210 --> 00:11:48,170
config and what we did in terms of

00:11:45,140 --> 00:11:50,570
policy was we have the port manager

00:11:48,170 --> 00:11:53,300
which works with the vendor SDK and it

00:11:50,570 --> 00:11:55,340
knows the speeds of every port that

00:11:53,300 --> 00:11:55,850
default speed the port works friend and

00:11:55,340 --> 00:11:58,730
so on

00:11:55,850 --> 00:12:04,100
so our Pope manager actually creates and

00:11:58,730 --> 00:12:06,890
I have done two things apart which I

00:12:04,100 --> 00:12:10,640
could up to implicitly configures and

00:12:06,890 --> 00:12:13,160
then MTU yeah empty you will be still

00:12:10,640 --> 00:12:15,590
need to do work on in to you and you

00:12:13,160 --> 00:12:19,310
threw out the deface in until

00:12:15,590 --> 00:12:21,530
propagation throughout the fact in

00:12:19,310 --> 00:12:27,440
various layers of the interface stacking

00:12:21,530 --> 00:12:30,620
is still that it requires a little bit

00:12:27,440 --> 00:12:32,720
of automation because bonds visualize

00:12:30,620 --> 00:12:33,200
bonds then tear travels from the bond to

00:12:32,720 --> 00:12:36,290
the sleigh

00:12:33,200 --> 00:12:39,940
and on a bridge it travels the other way

00:12:36,290 --> 00:12:43,190
around so if you had to hide all these

00:12:39,940 --> 00:12:46,580
in the interface manager three

00:12:43,190 --> 00:12:49,310
attributes again this is an example we

00:12:46,580 --> 00:12:53,210
use IP route 2 or direct net link API to

00:12:49,310 --> 00:12:55,970
Colonel now in the process we usually

00:12:53,210 --> 00:13:00,110
use IP route 2 because it's the fastest

00:12:55,970 --> 00:13:01,970
way to add new features but over the

00:13:00,110 --> 00:13:05,060
years because of some Python performance

00:13:01,970 --> 00:13:11,210
problems we have developed net link

00:13:05,060 --> 00:13:15,410
library in Python which we use bonds is

00:13:11,210 --> 00:13:19,840
another simple example in terms in terms

00:13:15,410 --> 00:13:23,060
of policy we want to restrict config of

00:13:19,840 --> 00:13:25,190
modes banned modes restrict them to what

00:13:23,060 --> 00:13:26,950
the hardware supports so what we've done

00:13:25,190 --> 00:13:34,970
is that we have again control that in

00:13:26,950 --> 00:13:37,730
inter with policy files merging I only

00:13:34,970 --> 00:13:40,580
cover the VLAN filtering bridge here but

00:13:37,730 --> 00:13:42,290
yeah this is again a simple example we

00:13:40,580 --> 00:13:44,630
have an we have a mode or an attribute

00:13:42,290 --> 00:13:52,400
on a bridge that configures it in a VLAN

00:13:44,630 --> 00:13:56,000
filtering mode or not and this is

00:13:52,400 --> 00:13:59,920
another example of yeah we try to find a

00:13:56,000 --> 00:14:06,560
balance between the people coming from

00:13:59,920 --> 00:14:10,000
the old networking background on the

00:14:06,560 --> 00:14:14,270
routers and switches to the Linux world

00:14:10,000 --> 00:14:19,520
access port sends and receives on tag

00:14:14,270 --> 00:14:21,590
pods and and so on yeah bridging

00:14:19,520 --> 00:14:23,180
policies one is inhibit addresses on a

00:14:21,590 --> 00:14:27,520
bridge port the other one that I forgot

00:14:23,180 --> 00:14:32,360
to mention here is Linux allows you can

00:14:27,520 --> 00:14:34,220
enslave VLAN device under the VLAN

00:14:32,360 --> 00:14:36,170
filtering bridge which is not really

00:14:34,220 --> 00:14:38,210
necessary and it's we can't really

00:14:36,170 --> 00:14:41,390
translate it to hardware so we drop in a

00:14:38,210 --> 00:14:43,160
policy to bar from such errors if it's a

00:14:41,390 --> 00:14:44,089
VLAN filtering bridge if the page

00:14:43,160 --> 00:14:48,170
already understand

00:14:44,089 --> 00:14:51,889
do not enslave VLAN device under the

00:14:48,170 --> 00:14:54,980
bridge STP

00:14:51,889 --> 00:14:57,199
yeah STP I realized I didn't know about

00:14:54,980 --> 00:15:02,509
this either but STP has a lot of

00:14:57,199 --> 00:15:04,610
attributes to configure and the

00:15:02,509 --> 00:15:07,370
footbridge configuration we usually use

00:15:04,610 --> 00:15:10,009
be our CTL or IP route to a net link for

00:15:07,370 --> 00:15:14,079
speed we are moving completely to net

00:15:10,009 --> 00:15:17,600
link and we use a soupy in user space

00:15:14,079 --> 00:15:24,199
there's an MST PD demon on SourceForge

00:15:17,600 --> 00:15:25,939
and we have a few patches on it and yeah

00:15:24,199 --> 00:15:32,809
this is on the on the right there is an

00:15:25,939 --> 00:15:35,029
example of some STP attributes and one

00:15:32,809 --> 00:15:39,170
example of an STP policy you have your

00:15:35,029 --> 00:15:41,980
one default policy is the enable STP on

00:15:39,170 --> 00:15:44,360
every bridge that we configure and

00:15:41,980 --> 00:15:49,360
something like vehicleand you don't want

00:15:44,360 --> 00:15:49,360
to enable STP on a VX LAN port which is

00:15:49,720 --> 00:15:57,980
transmitting encapsulated frames into

00:15:52,459 --> 00:15:59,839
the network so we also support idea be

00:15:57,980 --> 00:16:03,649
snooping attributes the bridge driver

00:15:59,839 --> 00:16:06,319
let us which driver can act as a IGMP

00:16:03,649 --> 00:16:10,279
courier this is a picture showing a

00:16:06,319 --> 00:16:17,170
snooping switch again we use IP route to

00:16:10,279 --> 00:16:17,170
netlink obesity oh here's an example

00:16:19,550 --> 00:16:25,880
next one is the Atlanta no in points

00:16:22,760 --> 00:16:30,140
remember that this is a switch or a

00:16:25,880 --> 00:16:32,810
tower switch and usually a beat-up or

00:16:30,140 --> 00:16:36,410
virtual tunnel endpoint translates end

00:16:32,810 --> 00:16:42,640
device VLANs two of the exelon or a vni

00:16:36,410 --> 00:16:48,890
so we we simply use a bridge and VX LAN

00:16:42,640 --> 00:16:53,270
device for every BNI and the VLANs if

00:16:48,890 --> 00:16:58,600
you want l3 device for the VLAN we

00:16:53,270 --> 00:16:58,600
create VLAN device on top of the bridge

00:17:00,580 --> 00:17:05,320
this is an example of the config

00:17:08,819 --> 00:17:15,600
as a fallacy well what we do is we to

00:17:12,169 --> 00:17:18,769
enforce mapping of the VLAN to be an eye

00:17:15,600 --> 00:17:21,809
we configure VLANs on the bridge ports

00:17:18,769 --> 00:17:23,339
in a way that only that particular wheel

00:17:21,809 --> 00:17:25,439
and traffic goes into the vehicle and

00:17:23,339 --> 00:17:34,259
device and then the vni the excellent

00:17:25,439 --> 00:17:38,009
device translates that into the vni so

00:17:34,259 --> 00:17:42,539
we are all we are is a virtualized

00:17:38,009 --> 00:17:44,669
router with intent router there is a lot

00:17:42,539 --> 00:17:47,610
of there are actually protocols written

00:17:44,669 --> 00:17:51,870
for this it's called vrrp or something

00:17:47,610 --> 00:17:55,320
but what we realize realize that what

00:17:51,870 --> 00:17:57,870
people want really is they don't need a

00:17:55,320 --> 00:18:01,799
you can do a lot of things without

00:17:57,870 --> 00:18:06,149
running the protocol and we suppose we

00:18:01,799 --> 00:18:09,149
are and we do it by creating a mock VLAN

00:18:06,149 --> 00:18:12,990
device on top of the bridge which

00:18:09,149 --> 00:18:15,179
carries the virtual mark and IP and the

00:18:12,990 --> 00:18:20,759
VLAN device on the bridge carries the

00:18:15,179 --> 00:18:27,090
original IP and MAC for that VLAN which

00:18:20,759 --> 00:18:29,070
is the routable Mac nightly again

00:18:27,090 --> 00:18:31,950
address virtual is the line that

00:18:29,070 --> 00:18:37,009
actually translates to the whole Mac

00:18:31,950 --> 00:18:39,600
VLAN stacking on the on the VLAN device

00:18:37,009 --> 00:18:42,830
address address virtual I think came

00:18:39,600 --> 00:18:47,480
from most vendors use that term to

00:18:42,830 --> 00:18:47,480
indicate a virtual Mac and IP

00:18:49,190 --> 00:18:57,649
so brf's the Earth's was a recent

00:18:54,499 --> 00:19:01,879
addition and we did some things to make

00:18:57,649 --> 00:19:03,529
the config easier the old nope I am

00:19:01,879 --> 00:19:05,359
hoping everybody knows about gloves by

00:19:03,529 --> 00:19:09,309
now David rather talk in the morning and

00:19:05,359 --> 00:19:09,309
he has a talk tomorrow

00:19:09,340 --> 00:19:17,090
so in in the India again it's a device

00:19:13,479 --> 00:19:19,070
that at the vrf vrf is represented by a

00:19:17,090 --> 00:19:21,349
master device and then you have devices

00:19:19,070 --> 00:19:23,659
in slave to it so there is again a

00:19:21,349 --> 00:19:27,109
dependency issue so I have done tube we

00:19:23,659 --> 00:19:29,479
have added more logic to actually make

00:19:27,109 --> 00:19:32,629
that dependency to do dependency checks

00:19:29,479 --> 00:19:35,090
and to make sure connections get cleaned

00:19:32,629 --> 00:19:37,840
up properly devices get down in the

00:19:35,090 --> 00:19:37,840
particular order

00:19:41,740 --> 00:19:48,909
there's an example here we are stable is

00:19:45,210 --> 00:19:51,340
indicates that it's the RF device to

00:19:48,909 --> 00:19:54,549
make it easier between a reactive device

00:19:51,340 --> 00:19:59,260
and a routing table match what we did

00:19:54,549 --> 00:20:01,570
was we created an keyword Auto which and

00:19:59,260 --> 00:20:05,289
I had done two main man adjust the pool

00:20:01,570 --> 00:20:10,659
of routing table IDs that are allocated

00:20:05,289 --> 00:20:14,110
by a system admin to VRS and the user IP

00:20:10,659 --> 00:20:16,659
route 2 to actually give a name we might

00:20:14,110 --> 00:20:19,720
we give the PRF device name to the

00:20:16,659 --> 00:20:22,080
routing table we map it you know in that

00:20:19,720 --> 00:20:25,750
way by using this mapping file as shown

00:20:22,080 --> 00:20:32,080
which makes it easier to debug you use

00:20:25,750 --> 00:20:35,260
the same name everywhere and here's an

00:20:32,080 --> 00:20:37,870
example so we are left blue and there

00:20:35,260 --> 00:20:41,350
was a VRS read in the previous picture

00:20:37,870 --> 00:20:43,750
you can see the table IDs 1 0 0 1 and 1

00:20:41,350 --> 00:20:49,059
0 0 2 maps it to the two brf's

00:20:43,750 --> 00:20:55,720
and once you have this config setup it's

00:20:49,059 --> 00:20:57,640
you use the vrf name everywhere we are

00:20:55,720 --> 00:21:03,909
in a bunch of system policies again to

00:20:57,640 --> 00:21:05,770
make it easier easier to either off at

00:21:03,909 --> 00:21:06,159
from Hardware off no point of view as

00:21:05,770 --> 00:21:09,610
well

00:21:06,159 --> 00:21:12,669
we RF table ID reserved range to reserve

00:21:09,610 --> 00:21:15,580
the routing table IDs for the RF usage

00:21:12,669 --> 00:21:17,710
for routing so that we don't trip on I

00:21:15,580 --> 00:21:20,350
mean it allows the system administrator

00:21:17,710 --> 00:21:25,450
to use other routing table IDs for

00:21:20,350 --> 00:21:30,370
others other things the max count we use

00:21:25,450 --> 00:21:32,770
the do support multiple switch Asics so

00:21:30,370 --> 00:21:35,679
we chose this is all these policy files

00:21:32,770 --> 00:21:38,919
are again external policy files that I

00:21:35,679 --> 00:21:42,309
have dumped you can consume these are

00:21:38,919 --> 00:21:44,409
draft byte system and our system takes

00:21:42,309 --> 00:21:47,380
the least common denominator of number

00:21:44,409 --> 00:21:51,639
of we are it's supported by a by the

00:21:47,380 --> 00:21:52,480
Asics that we support and we are helping

00:21:51,639 --> 00:21:56,980
hooks it

00:21:52,480 --> 00:22:00,340
allows you to run any creation deletion

00:21:56,980 --> 00:22:04,540
hooks then of the RF is created or

00:22:00,340 --> 00:22:06,370
deleted and at the end of sockets close

00:22:04,540 --> 00:22:12,360
and down this is another one that to

00:22:06,370 --> 00:22:29,290
clean up sockets that that's about it

00:22:12,360 --> 00:22:33,720
any questions is an old Ania file

00:22:29,290 --> 00:22:33,720
compatibility or if uptown - yes

00:22:36,900 --> 00:22:44,320
and it is available in Debian Debian

00:22:40,300 --> 00:22:46,990
right now we we are in the process of up

00:22:44,320 --> 00:22:50,220
streaming our new vrf changes which will

00:22:46,990 --> 00:22:50,220
be going out this week

00:22:51,510 --> 00:22:55,080
any other questions

00:22:56,090 --> 00:23:01,909
so it's I had pointed out a github link

00:22:59,210 --> 00:23:05,629
as well you could download it from there

00:23:01,909 --> 00:23:07,849
and yeah we're trying to get it into

00:23:05,629 --> 00:23:09,229
prep it's a Python it's a Python program

00:23:07,849 --> 00:23:12,019
so we're trying to get into pip install

00:23:09,229 --> 00:23:15,169
as well so that it's easier to download

00:23:12,019 --> 00:23:17,479
it on any other distribution but it yeah

00:23:15,169 --> 00:23:20,379
it does use the debian etc' network

00:23:17,479 --> 00:23:20,379
interfaces file

00:23:28,300 --> 00:23:35,240
so operating system uses Debian so are

00:23:32,330 --> 00:23:36,440
you going to base your operating system

00:23:35,240 --> 00:23:45,020
on the kernel infrastructure on

00:23:36,440 --> 00:23:48,550
speculative they might you might rewrite

00:23:45,020 --> 00:23:54,380
today we support a more a lot more than

00:23:48,550 --> 00:23:55,910
that like what are the main stuff which

00:23:54,380 --> 00:23:58,850
is missing a switch there for you to use

00:23:55,910 --> 00:24:02,210
this I guess right now we support a lot

00:23:58,850 --> 00:24:03,830
of things i g mb v RX i don't be

00:24:02,210 --> 00:24:08,110
snooping then we are getting into multi

00:24:03,830 --> 00:24:10,940
cast and a lot more yeah switched Ava's

00:24:08,110 --> 00:24:18,080
IGMP twins missing an IgM PS which nerve

00:24:10,940 --> 00:24:21,290
I don't know how to the CPU I can people

00:24:18,080 --> 00:24:44,390
just work no no this snooping for the

00:24:21,290 --> 00:24:46,640
hopper does trapping with commercial

00:24:44,390 --> 00:24:49,040
customers for us to switch the switch

00:24:46,640 --> 00:24:52,510
there it is not sufficient that I gently

00:24:49,040 --> 00:24:52,510
works it's also required that

00:26:21,429 --> 00:26:36,230
done recently interface manager used in

00:26:30,669 --> 00:26:46,790
distributions also the gang is working

00:26:36,230 --> 00:26:50,090
on system everything so to use perhaps

00:26:46,790 --> 00:26:54,470
um come back end with different from

00:26:50,090 --> 00:26:56,929
tens for your configs to second fix yes

00:26:54,470 --> 00:27:00,200
we have actually so when we started I

00:26:56,929 --> 00:27:02,120
did do a survey we were interested in

00:27:00,200 --> 00:27:05,030
using system D Network deep but as you

00:27:02,120 --> 00:27:06,770
know we started this two years back or

00:27:05,030 --> 00:27:09,539
three years back and system D Network be

00:27:06,770 --> 00:27:11,399
was focused on containers and

00:27:09,539 --> 00:27:14,309
it was again the same problems large

00:27:11,399 --> 00:27:16,739
interface files or how do you like I

00:27:14,309 --> 00:27:19,320
said that boss is open we want people

00:27:16,739 --> 00:27:22,979
who are transitioning from the data side

00:27:19,320 --> 00:27:24,929
to the Linux config they need to

00:27:22,979 --> 00:27:29,190
understand they need an easier way so

00:27:24,929 --> 00:27:32,700
all those considerations and I have

00:27:29,190 --> 00:27:34,950
spoken at Def Con as well and we do work

00:27:32,700 --> 00:27:36,799
with the Libyan guys and the most of the

00:27:34,950 --> 00:27:39,210
system because are also at the Debian

00:27:36,799 --> 00:27:43,489
there around the Debian circle for

00:27:39,210 --> 00:27:46,080
system D and we have talked about future

00:27:43,489 --> 00:27:48,869
plugins for I have done two into system

00:27:46,080 --> 00:27:52,499
D and many other things but yes if we

00:27:48,869 --> 00:27:56,159
find something that will work we do want

00:27:52,499 --> 00:27:57,149
to push for universal interface manager

00:27:56,159 --> 00:27:58,889
because it doesn't make sense to

00:27:57,149 --> 00:28:11,070
configure the ball in a different way

00:27:58,889 --> 00:28:13,470
every distribution that you go like like

00:28:11,070 --> 00:28:16,169
exchangeable interface definitions which

00:28:13,470 --> 00:28:20,519
is I guess is happening right now

00:28:16,169 --> 00:28:22,440
yeah conversation on Debian as well

00:28:20,519 --> 00:28:27,059
because there be an answer is no to

00:28:22,440 --> 00:28:30,479
network interface manager right now

00:28:27,059 --> 00:28:32,519
shipping with network manager serene its

00:28:30,479 --> 00:28:33,239
no network manager which is which used

00:28:32,519 --> 00:28:46,259
to be red hats

00:28:33,239 --> 00:28:48,029
wait the manager so even Debian the

00:28:46,259 --> 00:28:50,489
default is network manager and there has

00:28:48,029 --> 00:28:51,809
been debate going on whether they should

00:28:50,489 --> 00:28:54,059
move to system gain equity

00:28:51,809 --> 00:28:55,919
I think system D network B is going to

00:28:54,059 --> 00:29:02,249
win because everything is system D live

00:28:55,919 --> 00:29:04,789
now in Debian with your features and

00:29:02,249 --> 00:29:04,789
they're not

00:29:19,360 --> 00:29:25,090
let's see how debian goes but

00:29:32,379 --> 00:29:38,809
yeah excuse you first because I just

00:29:35,690 --> 00:29:41,330
arrived from the hotel so I cannot fully

00:29:38,809 --> 00:29:43,749
understand your your presentation but

00:29:41,330 --> 00:29:50,119
maybe you'll be mentioned about the

00:29:43,749 --> 00:29:52,399
elevation perspective light yeah like we

00:29:50,119 --> 00:29:54,440
or you can set up the via Alpina

00:29:52,399 --> 00:29:56,179
cap in your site or what about the

00:29:54,440 --> 00:29:59,359
switch and other lower side is a

00:29:56,179 --> 00:30:14,119
configuration do you have any idea about

00:29:59,359 --> 00:30:17,929
that computer sorry tomorrow I show up

00:30:14,119 --> 00:30:20,570
to my presentation and we try to figure

00:30:17,929 --> 00:30:23,269
out the computer side from the company

00:30:20,570 --> 00:30:29,389
side configuration to the city side so I

00:30:23,269 --> 00:30:32,659
yeah okay okay thank you um just one

00:30:29,389 --> 00:30:34,970
quick question did you consider it guys

00:30:32,659 --> 00:30:37,639
do you have any integration with

00:30:34,970 --> 00:30:40,669
clouding it where you can actually get

00:30:37,639 --> 00:30:47,570
the initial base configuration of the

00:30:40,669 --> 00:30:50,499
first interface and then maybe most of

00:30:47,570 --> 00:30:52,820
the cloud providers have kind of

00:30:50,499 --> 00:30:55,190
aggregated or that's the project they're

00:30:52,820 --> 00:30:58,519
heading towards every cloud provider

00:30:55,190 --> 00:31:00,820
before that seem to have their own way

00:30:58,519 --> 00:31:03,739
of providing base configuration

00:31:00,820 --> 00:31:05,529
information to the guest image and

00:31:03,739 --> 00:31:08,600
someone would give you a like a USB

00:31:05,529 --> 00:31:11,019
pseudo Drive and other ones would you

00:31:08,600 --> 00:31:13,700
had to talk to a certain IP address and

00:31:11,019 --> 00:31:16,639
download things but cloud and it seemed

00:31:13,700 --> 00:31:18,169
to be the way that that was going

00:31:16,639 --> 00:31:20,840
forward I'm not sure exactly I think

00:31:18,169 --> 00:31:24,049
gives you a JSON file with the things in

00:31:20,840 --> 00:31:26,999
it um what

00:31:24,049 --> 00:31:29,279
okay yeah so you need something that

00:31:26,999 --> 00:31:31,349
basically if you're gonna provision a

00:31:29,279 --> 00:31:32,459
thousand machines you want to do it once

00:31:31,349 --> 00:31:34,649
but you want to give each one a

00:31:32,459 --> 00:32:42,629
different set of data but based on the

00:31:34,649 --> 00:32:43,889
same image and usually to reinvent the

00:32:42,629 --> 00:32:46,940
wheel and then they gradually have

00:32:43,889 --> 00:32:46,940
converged on this project

00:32:55,320 --> 00:33:01,610

YouTube URL: https://www.youtube.com/watch?v=mCgbc3E2TYc


