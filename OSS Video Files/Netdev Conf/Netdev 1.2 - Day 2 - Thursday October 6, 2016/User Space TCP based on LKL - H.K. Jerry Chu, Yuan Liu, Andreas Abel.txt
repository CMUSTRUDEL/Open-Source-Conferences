Title: User Space TCP based on LKL - H.K. Jerry Chu, Yuan Liu, Andreas Abel
Publication date: 2016-10-07
Playlist: Netdev 1.2 - Day 2 - Thursday October 6, 2016
Description: 
	http://netdevconf.org/1.2/session.html?jerry-chu
Captions: 
	00:00:11,940 --> 00:00:18,869
c-money everyone my name is Yeshua from

00:00:15,520 --> 00:00:22,330
google i'm here to present the

00:00:18,869 --> 00:00:26,910
heliosphere TCB work we had been doing

00:00:22,330 --> 00:00:33,790
for the past month with my co-author a

00:00:26,910 --> 00:00:38,560
varian sitting on in the back and first

00:00:33,790 --> 00:00:40,450
of all Luda this camera so we this work

00:00:38,560 --> 00:00:45,489
is based on an open source project

00:00:40,450 --> 00:00:49,960
that's been there for many years lko

00:00:45,489 --> 00:00:53,050
linux kernel library but we are not in

00:00:49,960 --> 00:00:56,230
no way exper we know we actually okay

00:00:53,050 --> 00:01:01,559
i'll show up on our radar screen when we

00:00:56,230 --> 00:01:04,660
start funding this project last year but

00:01:01,559 --> 00:01:10,710
you look side there's a banker lkl paper

00:01:04,660 --> 00:01:14,260
that's written publishing 2010 and we

00:01:10,710 --> 00:01:17,980
most of our money so we will pick up a

00:01:14,260 --> 00:01:20,560
lot of new knowledge and win the

00:01:17,980 --> 00:01:22,870
standard co fair amount and we

00:01:20,560 --> 00:01:25,060
contribute a lot in the past year but we

00:01:22,870 --> 00:01:27,580
are in no way knowing all the history of

00:01:25,060 --> 00:01:29,860
all the design trade-off are the new

00:01:27,580 --> 00:01:32,740
couldn't bad so if you have no problem

00:01:29,860 --> 00:01:34,810
with sorry okay I please you know same

00:01:32,740 --> 00:01:39,040
email to the original the current

00:01:34,810 --> 00:01:41,230
maintainer actually so you just made

00:01:39,040 --> 00:01:43,570
history so why are we doing use of CTE

00:01:41,230 --> 00:01:46,480
you know a lot of users fifties we are

00:01:43,570 --> 00:01:49,650
there right so I'm not going to spend

00:01:46,480 --> 00:01:53,650
too much time on it there's a new

00:01:49,650 --> 00:01:55,960
benefit varies hugely the the majority

00:01:53,650 --> 00:01:58,920
of it uses vtc be implementation out

00:01:55,960 --> 00:02:04,090
there neither commercial open source

00:01:58,920 --> 00:02:07,660
project they there M is at providing a

00:02:04,090 --> 00:02:11,290
higher performance especially for htpc

00:02:07,660 --> 00:02:14,819
application your high performing or low

00:02:11,290 --> 00:02:18,100
latest super latency application case

00:02:14,819 --> 00:02:21,280
the clam or the believe is the colonel

00:02:18,100 --> 00:02:23,980
overhead is too too much to get really

00:02:21,280 --> 00:02:27,079
low later

00:02:23,980 --> 00:02:29,749
but all those cases is actually

00:02:27,079 --> 00:02:32,180
different at Google we are the

00:02:29,749 --> 00:02:35,359
performance high performance super low

00:02:32,180 --> 00:02:37,939
latency is not our initial goal although

00:02:35,359 --> 00:02:41,900
it'll be nice to have to reach our

00:02:37,939 --> 00:02:45,500
national customer but our initial use

00:02:41,900 --> 00:02:48,980
case is to terminate the gas pocket of

00:02:45,500 --> 00:02:52,340
gas TCP connection from the p.m. when

00:02:48,980 --> 00:02:55,310
the gas is going well this is a gas

00:02:52,340 --> 00:02:58,340
connection to the Google packing service

00:02:55,310 --> 00:03:01,489
and there is a number of motivation for

00:02:58,340 --> 00:03:03,949
this you know the security model some

00:03:01,489 --> 00:03:06,560
believe is because user space is a

00:03:03,949 --> 00:03:08,900
single process one process or you can

00:03:06,560 --> 00:03:11,239
run multiple instance of the kernel of

00:03:08,900 --> 00:03:14,389
the chemical wall the stacker in user

00:03:11,239 --> 00:03:17,449
space but you know the border p is

00:03:14,389 --> 00:03:21,340
isolating to a single process instead of

00:03:17,449 --> 00:03:25,040
a poco criminal and also it's Billy know

00:03:21,340 --> 00:03:28,340
what is why they believe that the

00:03:25,040 --> 00:03:29,959
release velocity is much higher you can

00:03:28,340 --> 00:03:34,009
patch a user called much group at ease

00:03:29,959 --> 00:03:39,019
at Google then the Criminal Code and

00:03:34,009 --> 00:03:41,810
also the separate the using the process

00:03:39,019 --> 00:03:44,540
to run the kernel code the stack o the

00:03:41,810 --> 00:03:46,579
accounting is much more accurate right

00:03:44,540 --> 00:03:48,769
we all know the novel in stock in the

00:03:46,579 --> 00:03:51,079
kernel is a lot of background sound you

00:03:48,769 --> 00:03:53,299
know I also alkyl process and you know

00:03:51,079 --> 00:03:57,500
sometimes the accounting is now they're

00:03:53,299 --> 00:04:02,389
very accurate so these are the size of

00:03:57,500 --> 00:04:07,009
motivation and I will be mentioning the

00:04:02,389 --> 00:04:11,090
so for this reason the actual part of

00:04:07,009 --> 00:04:15,739
your number of users vtg start a google

00:04:11,090 --> 00:04:19,039
and malaga there are cray from scratch

00:04:15,739 --> 00:04:23,590
in the hong kong they can't be rational

00:04:19,039 --> 00:04:26,630
and work for specific use case but when

00:04:23,590 --> 00:04:29,800
when the use case when when in skills

00:04:26,630 --> 00:04:31,550
grow many other than 10 to four part i

00:04:29,800 --> 00:04:34,190
remember one case

00:04:31,550 --> 00:04:36,320
the our first use case our first

00:04:34,190 --> 00:04:40,190
customer we trying to replace the Hong

00:04:36,320 --> 00:04:46,220
Kong tv-style the sorriest to terminate

00:04:40,190 --> 00:04:49,940
as being the TV connection when a few

00:04:46,220 --> 00:04:52,580
years back when first windows being show

00:04:49,940 --> 00:04:55,880
up also than they played because they is

00:04:52,580 --> 00:05:00,470
a very simple implementation yielding to

00:04:55,880 --> 00:05:02,270
the mentor ettv option the MSS option so

00:05:00,470 --> 00:05:06,470
I think one version of windows style

00:05:02,270 --> 00:05:08,990
insists on even though you negotiate out

00:05:06,470 --> 00:05:11,660
you know issues on window either windows

00:05:08,990 --> 00:05:15,200
at the test embo I think it stands an

00:05:11,660 --> 00:05:20,390
option so they start the Hong Kong start

00:05:15,200 --> 00:05:23,060
into that in a faux pas so my goal need

00:05:20,390 --> 00:05:25,220
to solve these internal problem where

00:05:23,060 --> 00:05:28,640
this Hong Kong style doesn't know is not

00:05:25,220 --> 00:05:32,480
really production strength is to find a

00:05:28,640 --> 00:05:36,740
high quality TV star not known as the

00:05:32,480 --> 00:05:39,860
high-performing TV stock so i sat on my

00:05:36,740 --> 00:05:43,970
side on the you know other mature TV

00:05:39,860 --> 00:05:50,480
style i know of is op Colonel base new

00:05:43,970 --> 00:05:52,610
linens or PSD are survivors so I you

00:05:50,480 --> 00:05:54,350
know obviously ever knew I work for

00:05:52,610 --> 00:05:57,830
Google have a preference for linux

00:05:54,350 --> 00:06:00,530
kernel stack so the question is how do

00:05:57,830 --> 00:06:02,900
we run linux kernel alchemical you use

00:06:00,530 --> 00:06:05,420
the space so you guys probably familiar

00:06:02,900 --> 00:06:07,910
in your number of technologies Neil

00:06:05,420 --> 00:06:11,780
Innes even and other options even have

00:06:07,910 --> 00:06:13,760
the usable and dinners support we saw

00:06:11,780 --> 00:06:17,120
that you've either in or debate a little

00:06:13,760 --> 00:06:19,430
bit well against their we didn't really

00:06:17,120 --> 00:06:21,190
have all the expertise to read II have a

00:06:19,430 --> 00:06:26,330
full-size picture point is the passive

00:06:21,190 --> 00:06:29,810
approach and near the back then the

00:06:26,330 --> 00:06:31,940
garage first show up ok are so we just

00:06:29,810 --> 00:06:36,200
in a way since where we prevail in space

00:06:31,940 --> 00:06:39,110
a kind of code and we love with clinical

00:06:36,200 --> 00:06:41,690
we could go to contribute a lot to you

00:06:39,110 --> 00:06:44,849
you guys heard about PBR it contribute a

00:06:41,690 --> 00:06:48,179
lot to the linear circuit is that so

00:06:44,849 --> 00:06:50,759
we are pretty much sure you know choose

00:06:48,179 --> 00:06:53,339
the lid off well initially we actually

00:06:50,759 --> 00:06:55,069
play with invisible also do we work with

00:06:53,339 --> 00:06:58,589
the hatch me a little bit on that

00:06:55,069 --> 00:07:02,849
visitor don't seem too much better with

00:06:58,589 --> 00:07:05,999
what we wanted in mind which is we

00:07:02,849 --> 00:07:09,389
really love the typical and how can we

00:07:05,999 --> 00:07:11,819
just take the TD code right and you know

00:07:09,389 --> 00:07:16,759
not have to be bound by the rest of the

00:07:11,819 --> 00:07:19,949
criminal either overhaul constraint but

00:07:16,759 --> 00:07:21,779
battery died parties we kind of kind of

00:07:19,949 --> 00:07:24,349
the lehigh because way to each other

00:07:21,779 --> 00:07:26,879
boundary right and we actually a

00:07:24,349 --> 00:07:30,119
previously the bars are loaded for

00:07:26,879 --> 00:07:33,389
couple month assume it was pretty good

00:07:30,119 --> 00:07:36,479
for simulation Potter's that we then we

00:07:33,389 --> 00:07:39,300
hit bunch of bugs because the liberality

00:07:36,479 --> 00:07:43,199
seem to be feeding you it has a totally

00:07:39,300 --> 00:07:46,919
cabal the cover Odin the TV Cole sort of

00:07:43,199 --> 00:07:50,309
that has a cool code to the handle mmmm

00:07:46,919 --> 00:07:52,889
asking Allah memory allocator or the

00:07:50,309 --> 00:07:57,959
time around and those area can be tend

00:07:52,889 --> 00:08:00,629
to be very hairy in so we spent a

00:07:57,959 --> 00:08:03,449
couple month then the lk l came along it

00:08:00,629 --> 00:08:07,289
was total announced even though it's

00:08:03,449 --> 00:08:10,740
been there for a few years and we I

00:08:07,289 --> 00:08:13,529
think how do we also we feel until I is

00:08:10,740 --> 00:08:17,699
more mature so you decide to switch to

00:08:13,529 --> 00:08:20,429
oh hell for those who I don't know how

00:08:17,699 --> 00:08:23,429
many people I've heard about this open

00:08:20,429 --> 00:08:26,610
source projects other three but this is

00:08:23,429 --> 00:08:31,399
a simple picture sunrise the basically

00:08:26,610 --> 00:08:36,319
it's Lena's chemical and it has a very

00:08:31,399 --> 00:08:40,319
thin layer of a cool co2 grew the cisco

00:08:36,319 --> 00:08:43,289
well to sort of well i will describe

00:08:40,319 --> 00:08:45,720
later new the cisco pretty much is near

00:08:43,289 --> 00:08:48,509
the new cisco ryan in the submissive

00:08:45,720 --> 00:08:51,000
model when application calling to the

00:08:48,509 --> 00:08:53,620
lkl is just calling to a function symbol

00:08:51,000 --> 00:08:56,080
but there's a solo cuoco

00:08:53,620 --> 00:09:01,230
to do something more than just calling

00:08:56,080 --> 00:09:04,570
to the function and the the main

00:09:01,230 --> 00:09:07,270
environment dependent code we call host

00:09:04,570 --> 00:09:10,480
operation code is set as the

00:09:07,270 --> 00:09:13,630
department's etc offs by the way you

00:09:10,480 --> 00:09:15,880
take me out here I'll coso the while the

00:09:13,630 --> 00:09:19,050
southern pointing the original author

00:09:15,880 --> 00:09:21,130
here on the ground in his car in the

00:09:19,050 --> 00:09:25,779
Windows environment programme poznan

00:09:21,130 --> 00:09:27,779
nonlinear environment so one why only

00:09:25,779 --> 00:09:32,790
need to supply this set of host

00:09:27,779 --> 00:09:37,089
operation ops then it will it will work

00:09:32,790 --> 00:09:42,279
so the it's done its design support of

00:09:37,089 --> 00:09:44,730
linux kernel and it's a catcher it

00:09:42,279 --> 00:09:50,140
creates a new architecture call lk is

00:09:44,730 --> 00:09:53,710
about 3500 line code in ltl an

00:09:50,140 --> 00:09:57,670
application just linguist this library

00:09:53,710 --> 00:10:00,220
code and the cisco interface romania

00:09:57,670 --> 00:10:02,200
same right but instead of this colony on

00:10:00,220 --> 00:10:06,610
taking a trap here is for the function

00:10:02,200 --> 00:10:09,520
call in 20 cal and you no one can given

00:10:06,610 --> 00:10:12,480
to a el tiro to hijack without a

00:10:09,520 --> 00:10:17,130
political a political change to run

00:10:12,480 --> 00:10:19,390
wrong ways to lk library and so the the

00:10:17,130 --> 00:10:22,300
publicist is called the planning phase

00:10:19,390 --> 00:10:28,500
the packing interface is very own net so

00:10:22,300 --> 00:10:32,020
it's pretty simple our main use case is

00:10:28,500 --> 00:10:34,180
pretty much this T's be reverse proxy so

00:10:32,020 --> 00:10:38,050
I site describe we wanted we have to

00:10:34,180 --> 00:10:44,290
terminate the cast is be connecting to

00:10:38,050 --> 00:10:47,890
our packing part service so the proxy

00:10:44,290 --> 00:10:51,850
here i show you the hypervisor annual

00:10:47,890 --> 00:10:54,940
running the vm runnings a hypervisor the

00:10:51,850 --> 00:11:00,670
packet is going out to a brunette and

00:10:54,940 --> 00:11:02,550
then talk to a proxy this proxy can run

00:11:00,670 --> 00:11:06,440
either locally on

00:11:02,550 --> 00:11:10,500
I'm machine is the vm or remotely and

00:11:06,440 --> 00:11:12,540
the proxy then terminate that ok I

00:11:10,500 --> 00:11:15,870
culminated TCP connection from the gas

00:11:12,540 --> 00:11:18,029
and then the application that the party

00:11:15,870 --> 00:11:22,260
will charge the data on you know and

00:11:18,029 --> 00:11:25,500
then this could be a RPC request it will

00:11:22,260 --> 00:11:28,500
then go to the host near to whatever

00:11:25,500 --> 00:11:31,470
right it can open our sake to the host

00:11:28,500 --> 00:11:34,310
Colonel and start doing your duty evil

00:11:31,470 --> 00:11:37,800
attack in protocol is based on tcp/ip or

00:11:34,310 --> 00:11:39,959
in some cases in all packages on a total

00:11:37,800 --> 00:11:44,339
different transport even Colonel bypass

00:11:39,959 --> 00:11:53,640
it can run directly on top of that so

00:11:44,339 --> 00:11:56,070
the page color is the kind of sad so the

00:11:53,640 --> 00:11:58,410
AL takes the whole kernel code round you

00:11:56,070 --> 00:12:00,450
know has everything in it I think

00:11:58,410 --> 00:12:04,560
there's i will show you those opposing

00:12:00,450 --> 00:12:07,110
cons the cons is unfortunately it has an

00:12:04,560 --> 00:12:10,740
architecture constraint imposed by this

00:12:07,110 --> 00:12:12,779
approach what will happen is since we

00:12:10,740 --> 00:12:15,450
are not just kneel Carbonaro TV co and

00:12:12,779 --> 00:12:19,140
doing all the other stuff in the native

00:12:15,450 --> 00:12:22,290
whole host of ireland a bohemian flag

00:12:19,140 --> 00:12:25,649
cannot what in making a cisco right and

00:12:22,290 --> 00:12:29,040
sister in this vicinity nor though the

00:12:25,649 --> 00:12:31,079
cisco here is a fair library of the

00:12:29,040 --> 00:12:33,630
function symbol right you just called a

00:12:31,079 --> 00:12:36,149
functioning symbol but unfortunately you

00:12:33,630 --> 00:12:38,579
cannot we cannot allow all know that ok

00:12:36,149 --> 00:12:41,550
i cannot allow the holster I code

00:12:38,579 --> 00:12:44,790
directly into the alkenyl ascii code

00:12:41,550 --> 00:12:47,699
because normally you know maybe not

00:12:44,790 --> 00:12:50,130
representing will work but when the

00:12:47,699 --> 00:12:52,980
curry okay i'll go actually coming to

00:12:50,130 --> 00:12:54,750
like working condition Amy to total the

00:12:52,980 --> 00:12:58,440
scheduling need to come in you know the

00:12:54,750 --> 00:13:00,949
threatening to go to sleep the Falcon of

00:12:58,440 --> 00:13:05,459
scheduler have no idea about this

00:13:00,949 --> 00:13:08,760
foreign threat this is really circulated

00:13:05,459 --> 00:13:15,190
by the hose environment right so

00:13:08,760 --> 00:13:18,460
solution was to do not allow a host flag

00:13:15,190 --> 00:13:21,810
likely into El Caracol instead we will

00:13:18,460 --> 00:13:26,860
put Neil they were created repairs and

00:13:21,810 --> 00:13:29,860
wake up lkl colonel so that can ask you

00:13:26,860 --> 00:13:31,540
you couldn't also during the build you

00:13:29,860 --> 00:13:35,710
know there will be so dark a conocer

00:13:31,540 --> 00:13:39,220
created actually is created by on demand

00:13:35,710 --> 00:13:41,560
but these fat is created by lk kernel

00:13:39,220 --> 00:13:45,880
code so colonel knows how to handle this

00:13:41,560 --> 00:13:49,030
you know as a valid stack and other data

00:13:45,880 --> 00:13:51,190
structure is in place so that's the

00:13:49,030 --> 00:13:57,130
first constraint and it has a severe

00:13:51,190 --> 00:14:01,500
performance impact on the network TCR

00:13:57,130 --> 00:14:04,780
and TV super another constraint is the

00:14:01,500 --> 00:14:06,700
point when you were so this is again you

00:14:04,780 --> 00:14:09,880
know the whole thread and other cisco

00:14:06,700 --> 00:14:13,210
pagando buffer is crazy in the host

00:14:09,880 --> 00:14:16,300
environment so when obvious concern is

00:14:13,210 --> 00:14:19,960
the projects by this butter is not

00:14:16,300 --> 00:14:24,280
created by the kernel of kernel is now

00:14:19,960 --> 00:14:29,290
aware of this offer address so butter

00:14:24,280 --> 00:14:32,320
cisco but usually if you to run message

00:14:29,290 --> 00:14:36,130
or new send some message or write the

00:14:32,320 --> 00:14:39,040
offer comes in the kernel and the alkyl

00:14:36,130 --> 00:14:41,290
colonel to a copying or copy it iterate

00:14:39,040 --> 00:14:45,010
or whatever right it's well store and

00:14:41,290 --> 00:14:47,410
this since the Inca or the user internal

00:14:45,010 --> 00:14:50,560
they are using agile a slow start work

00:14:47,410 --> 00:14:53,740
so you know most all case at work but

00:14:50,560 --> 00:14:56,650
for the little fancier cisco like you

00:14:53,740 --> 00:15:00,370
bein spice i need to actually take a

00:14:56,650 --> 00:15:03,430
look at it take the packages to give it

00:15:00,370 --> 00:15:07,270
a franchise right it will go and look up

00:15:03,430 --> 00:15:10,089
the packing page but here there is no

00:15:07,270 --> 00:15:15,339
packing page for tobacco pouches so i

00:15:10,089 --> 00:15:20,170
will fail okay i'll come the tone

00:15:15,339 --> 00:15:24,430
support SMP i I don't know how difficult

00:15:20,170 --> 00:15:26,680
is it to cali SME working this is one

00:15:24,430 --> 00:15:29,410
area we are interested in

00:15:26,680 --> 00:15:31,149
you know we we don't have a lot of

00:15:29,410 --> 00:15:34,270
experiences or we don't know how much

00:15:31,149 --> 00:15:38,140
work it required okay obviously it's a

00:15:34,270 --> 00:15:45,550
flag memory there's no a menu so there's

00:15:38,140 --> 00:15:48,040
no memory reduction so I describe the

00:15:45,550 --> 00:15:49,720
Commerce which gives you as well the

00:15:48,040 --> 00:15:52,120
whole psyche an opportunity I'll care to

00:15:49,720 --> 00:15:56,110
ask you code directly insured by the way

00:15:52,120 --> 00:16:00,399
from you know just simple dietary and

00:15:56,110 --> 00:16:04,620
pick this there's a cisco right the host

00:16:00,399 --> 00:16:07,950
cisco it takes on point for micro second

00:16:04,620 --> 00:16:15,060
but FAL takes 10 micro second it

00:16:07,950 --> 00:16:18,910
requires three contests reaches so we

00:16:15,060 --> 00:16:23,589
actually work out a solution so you know

00:16:18,910 --> 00:16:26,950
i do is you know yes the if the track

00:16:23,589 --> 00:16:28,660
comes in and the reason so I cannot ask

00:16:26,950 --> 00:16:31,600
you the whole so i can ask you i'll

00:16:28,660 --> 00:16:35,680
Calcagno code directly is the scheduler

00:16:31,600 --> 00:16:39,670
issues right what water really is needed

00:16:35,680 --> 00:16:45,490
to make the across kind of scary happy

00:16:39,670 --> 00:16:46,870
is the test test struck these foreign

00:16:45,490 --> 00:16:51,220
soil they don't have anything like that

00:16:46,870 --> 00:16:53,650
right so one kind of hag you know we

00:16:51,220 --> 00:16:56,440
haven't complete proof but so far this

00:16:53,650 --> 00:17:00,040
this solution seemed to work for other

00:16:56,440 --> 00:17:03,910
socket shall we experiment with is to

00:17:00,040 --> 00:17:07,360
create canosa FL can alter them for that

00:17:03,910 --> 00:17:11,339
test all we need to make cisco and that

00:17:07,360 --> 00:17:15,420
allow the stock coming directly and then

00:17:11,339 --> 00:17:17,980
when wen need to go to block it

00:17:15,420 --> 00:17:20,170
eventually they'll make the schedule

00:17:17,980 --> 00:17:23,620
happy but we have to have the schedule

00:17:20,170 --> 00:17:25,480
total to to sort of know all this is

00:17:23,620 --> 00:17:27,819
actually special case so unfortunate

00:17:25,480 --> 00:17:31,300
this here requires the change of the

00:17:27,819 --> 00:17:34,240
generic criminal code but so far this

00:17:31,300 --> 00:17:35,049
had seemed to work and there are still

00:17:34,240 --> 00:17:37,690
ongoing for

00:17:35,049 --> 00:17:41,230
code this code initially or it was a

00:17:37,690 --> 00:17:44,679
done by un deux but the agama taner

00:17:41,230 --> 00:17:47,379
think he can figure out a solution to

00:17:44,679 --> 00:17:50,889
make it work but without changing the

00:17:47,379 --> 00:17:54,070
genetic model clinical and after the

00:17:50,889 --> 00:17:57,940
value that pump it is just a function

00:17:54,070 --> 00:18:07,359
call for lkl so it can't get down to the

00:17:57,940 --> 00:18:10,389
pond to micro second also we we need to

00:18:07,359 --> 00:18:11,889
come up with so for our benchmark

00:18:10,389 --> 00:18:14,019
comparison right we are comparing

00:18:11,889 --> 00:18:16,059
against the horse and we need to come up

00:18:14,019 --> 00:18:18,879
with a configuration as sort of a pro

00:18:16,059 --> 00:18:21,279
typo comparison since the aqua always

00:18:18,879 --> 00:18:26,200
know this is coffee is arguing user lane

00:18:21,279 --> 00:18:27,850
right it doesn't make sense to to run

00:18:26,200 --> 00:18:30,609
the benchmark configuration where you

00:18:27,850 --> 00:18:32,889
enjoy inject hacking into knows maybe

00:18:30,609 --> 00:18:37,119
suit on tap in return all right tell me

00:18:32,889 --> 00:18:40,629
sign so we use the ordinary type of neck

00:18:37,119 --> 00:18:46,509
and we use a be verb libraries for UK or

00:18:40,629 --> 00:18:49,059
two to actually program inside the

00:18:46,509 --> 00:18:53,889
packet directly to Nick partisan colonel

00:18:49,059 --> 00:18:57,249
now there is some culture here we want

00:18:53,889 --> 00:19:00,279
to compare against the colonel staff but

00:18:57,249 --> 00:19:05,169
it's this father is not really a pataga

00:19:00,279 --> 00:19:07,210
comparison use the the nick the device

00:19:05,169 --> 00:19:10,149
how will feature right they are

00:19:07,210 --> 00:19:13,059
different the horse has the TSO sub

00:19:10,149 --> 00:19:14,980
Howard ESO support Yoko here is you

00:19:13,059 --> 00:19:18,249
finding we are using reliable

00:19:14,980 --> 00:19:21,100
connections so we still an ongoing

00:19:18,249 --> 00:19:22,960
effort to actually get true apple to

00:19:21,100 --> 00:19:25,929
Apple comparison maybe coach driver

00:19:22,960 --> 00:19:27,639
hypercomm arison by so the number you

00:19:25,929 --> 00:19:32,470
know here are going to show you you have

00:19:27,639 --> 00:19:37,359
to take a grants or we saw is 5 to 10 X

00:19:32,470 --> 00:19:40,600
slower in both the latency and

00:19:37,359 --> 00:19:44,950
throughput then compared to hot fennel

00:19:40,600 --> 00:19:45,460
and over the past few months we improve

00:19:44,950 --> 00:19:48,820
the

00:19:45,460 --> 00:19:51,399
the number tremendously this relating is

00:19:48,820 --> 00:19:53,830
cumbersome the TCB are so we start with

00:19:51,399 --> 00:19:56,679
this is a configuration where actually

00:19:53,830 --> 00:19:59,679
previously it it's funny okay I'm

00:19:56,679 --> 00:20:04,419
running on Toppa rtm unique and this is

00:19:59,679 --> 00:20:09,460
a 40k Nick which tall weighs more than a

00:20:04,419 --> 00:20:13,960
be more than 19 microsecond latency 1 by

00:20:09,460 --> 00:20:15,880
4 1 by t CR the hospice 123 and after

00:20:13,960 --> 00:20:19,179
all the work you know 11 the world there

00:20:15,880 --> 00:20:22,990
helps is to you know test side or the

00:20:19,179 --> 00:20:25,270
threat into the same core and the main

00:20:22,990 --> 00:20:28,779
thing that really helped is that US is

00:20:25,270 --> 00:20:33,039
call instead of three contests which we

00:20:28,779 --> 00:20:35,110
allow okay the this ISNA perv sarcoid

00:20:33,039 --> 00:20:41,529
directly into the air Cal criminal to

00:20:35,110 --> 00:20:43,270
ask you and so we are best number or to

00:20:41,529 --> 00:20:45,490
be a fair comparison without busy

00:20:43,270 --> 00:20:50,679
pudding is fully microsecond so it's

00:20:45,490 --> 00:20:53,740
like 1.8 acts of the host we believe the

00:20:50,679 --> 00:20:58,149
kneecap is the there is no how're our q4

00:20:53,740 --> 00:21:00,610
this sour kernel stack so every time no

00:20:58,149 --> 00:21:03,399
irq there's our cue and you have the

00:21:00,610 --> 00:21:09,370
code will have to post I am to wake up a

00:21:03,399 --> 00:21:13,929
threat to handle the Neil deGrasse we

00:21:09,370 --> 00:21:18,850
taste the park data transfer super by

00:21:13,929 --> 00:21:20,799
also three to five times thus the

00:21:18,850 --> 00:21:25,620
formula is simple right just to a last

00:21:20,799 --> 00:21:28,029
segment and enable chats envelope so

00:21:25,620 --> 00:21:31,240
this is one advantage of using the

00:21:28,029 --> 00:21:33,220
having a whole penico their other

00:21:31,240 --> 00:21:36,100
criminal great features right many of

00:21:33,220 --> 00:21:38,620
them just work geogr actually is in the

00:21:36,100 --> 00:21:41,049
kernel or ID right with only d have to

00:21:38,620 --> 00:21:45,940
do much with the variety vice to use

00:21:41,049 --> 00:21:48,630
them so for gamble the navarch ESO is

00:21:45,940 --> 00:21:51,309
one line change in advice to enable some

00:21:48,630 --> 00:21:55,779
capability how a feature writer than a

00:21:51,309 --> 00:21:57,910
double simple components also now if we

00:21:55,779 --> 00:22:00,250
ever need to run an opp

00:21:57,910 --> 00:22:03,910
we have all the cuties no Africa tonio

00:22:00,250 --> 00:22:07,660
TV star all right so this is a big

00:22:03,910 --> 00:22:10,810
advantage of hiding okay uncle we have

00:22:07,660 --> 00:22:15,250
the implement the gas ESO hostess all

00:22:10,810 --> 00:22:17,860
the flavors so also we add the support

00:22:15,250 --> 00:22:20,380
for last packet and both lost packet and

00:22:17,860 --> 00:22:25,810
multiple received offer mode so

00:22:20,380 --> 00:22:28,900
afterwards through soo real kappa phi x

00:22:25,810 --> 00:22:33,820
boost before Daniel was a pathetic

00:22:28,900 --> 00:22:39,840
seeking a bit then we offer support to

00:22:33,820 --> 00:22:44,980
post the super 213 cake footing gig and

00:22:39,840 --> 00:22:47,350
then but then one would do that we we

00:22:44,980 --> 00:22:52,180
have a one digital copy near the Royal

00:22:47,350 --> 00:22:55,480
net to the device there's a copy there

00:22:52,180 --> 00:23:00,520
so we gathered our copy to a neighbor lk

00:22:55,480 --> 00:23:03,940
ought to be like to get to 23 key

00:23:00,520 --> 00:23:07,720
compared to a host of bonus a decade so

00:23:03,940 --> 00:23:11,020
we are sort of seven percent hosts but

00:23:07,720 --> 00:23:14,500
when we look at the cpu time is still

00:23:11,020 --> 00:23:18,430
the case this is a single TV stream

00:23:14,500 --> 00:23:20,080
napper okay i'll burn one cpu is one

00:23:18,430 --> 00:23:23,860
severe sachar is a partnership you

00:23:20,080 --> 00:23:27,820
whereas the host is it's only 50 cent so

00:23:23,860 --> 00:23:31,690
after the operation is still a lot more

00:23:27,820 --> 00:23:35,220
expensive and host 2.5 times right i

00:23:31,690 --> 00:23:38,920
always to continue to tune the start to

00:23:35,220 --> 00:23:47,050
cut the fat out to make it more

00:23:38,920 --> 00:23:51,610
efficient and one other area the the

00:23:47,050 --> 00:23:54,700
this either stack and with the vowel net

00:23:51,610 --> 00:23:58,420
is the lava copies involved you guys

00:23:54,700 --> 00:24:03,340
probably are familiar voices in our TV

00:23:58,420 --> 00:24:07,020
party set up each pipe transfer involved

00:24:03,340 --> 00:24:12,390
sis copies four of them is so the

00:24:07,020 --> 00:24:17,400
a sua sake layer so and problem is in

00:24:12,390 --> 00:24:19,620
the baronet driver in device sorry bill

00:24:17,400 --> 00:24:22,560
cosby time you know if we in this

00:24:19,620 --> 00:24:27,300
particular configuration we want a HP

00:24:22,560 --> 00:24:30,630
stream 13 the Senators view is is for

00:24:27,300 --> 00:24:33,590
copy a by the way in your dear copy has

00:24:30,630 --> 00:24:36,840
been you know a holy where I i

00:24:33,590 --> 00:24:39,330
personally work on zo copy for many

00:24:36,840 --> 00:24:42,300
years milk I realized you know I really

00:24:39,330 --> 00:24:44,730
conclude this copy is really if you have

00:24:42,300 --> 00:24:46,920
to do copy can burn cpu maybe just copy

00:24:44,730 --> 00:24:50,160
copy is simple there's no dependency on

00:24:46,920 --> 00:24:52,560
several components by the two tattoos

00:24:50,160 --> 00:24:57,180
your coffee sometimes really hard but

00:24:52,560 --> 00:25:01,830
here we so initially when I start taking

00:24:57,180 --> 00:25:05,310
on the copy 0 copy were here I naively

00:25:01,830 --> 00:25:07,560
think that it should be much simpler

00:25:05,310 --> 00:25:10,350
than the real colonel you know going

00:25:07,560 --> 00:25:13,080
closer the user Cano boundary is the

00:25:10,350 --> 00:25:15,480
Italian that you know your character no

00:25:13,080 --> 00:25:18,090
way in the ok apps they are living in

00:25:15,480 --> 00:25:21,780
same age as face and send production

00:25:18,090 --> 00:25:24,060
domain right so there's no issue with

00:25:21,780 --> 00:25:25,950
you know you have to put I out 18 you if

00:25:24,060 --> 00:25:29,090
you have to page flee about whatever

00:25:25,950 --> 00:25:34,680
right but it turns out not that simple

00:25:29,090 --> 00:25:36,300
so this is a chess piece I because the

00:25:34,680 --> 00:25:41,640
problem right is part to you previously

00:25:36,300 --> 00:25:43,500
the haircut colonel has the well the

00:25:41,640 --> 00:25:45,990
menu of the colonel especially

00:25:43,500 --> 00:25:49,500
networking cold it use the physical

00:25:45,990 --> 00:25:52,230
address or physical page so AFL puffer

00:25:49,500 --> 00:25:54,030
actually doesn't what the sorry D the

00:25:52,230 --> 00:25:56,700
user buffer allocate by the host star

00:25:54,030 --> 00:25:58,920
when Parker has to the alkenyl it

00:25:56,700 --> 00:26:05,370
doesn't really work the current FL

00:25:58,920 --> 00:26:10,020
Connaughton recognize the such as so the

00:26:05,370 --> 00:26:13,920
solution here is we have to use a map an

00:26:10,020 --> 00:26:17,660
honest page which will return a kernel

00:26:13,920 --> 00:26:19,940
offer to user to use and I believe

00:26:17,660 --> 00:26:23,630
as you can we can actually fix us to

00:26:19,940 --> 00:26:27,200
also make alcohol colonel recognize the

00:26:23,630 --> 00:26:29,650
suitable host address because the i

00:26:27,200 --> 00:26:33,440
think the trail is hidden are in a

00:26:29,650 --> 00:26:35,750
genetic code so from the moment we we

00:26:33,440 --> 00:26:39,650
have this and once will you switch to

00:26:35,750 --> 00:26:43,940
user a map anonymous buffer a work be

00:26:39,650 --> 00:26:47,380
inspired work and while playing is to

00:26:43,940 --> 00:26:50,450
near 40 beers in ish i but i can just

00:26:47,380 --> 00:26:53,150
invent a new cisco and just grab the

00:26:50,450 --> 00:26:54,800
user address user here but it doesn't

00:26:53,150 --> 00:26:59,450
work that way you know that's kb in your

00:26:54,800 --> 00:27:03,440
lada what skb facts use a page but even

00:26:59,450 --> 00:27:07,780
i put this I wanted to last segment so I

00:27:03,440 --> 00:27:10,870
put 64k popper address in the skb had

00:27:07,780 --> 00:27:13,700
when he eventually he the variety driver

00:27:10,870 --> 00:27:20,210
insists on looking at looking up the

00:27:13,700 --> 00:27:22,190
page a page for the address so but the I

00:27:20,210 --> 00:27:25,610
think the good news is because they ok

00:27:22,190 --> 00:27:28,880
is no a menu from memory the VN spies

00:27:25,610 --> 00:27:33,560
probably is much faster than you know no

00:27:28,880 --> 00:27:35,570
more x86 architecture and another thing

00:27:33,560 --> 00:27:37,790
is the new you are guys probably all

00:27:35,570 --> 00:27:39,680
from New rivers is you know when you do

00:27:37,790 --> 00:27:43,640
there's your copy on chance me aboard

00:27:39,680 --> 00:27:45,500
the user buffer I then you have to pick

00:27:43,640 --> 00:27:50,690
our way to notify the user when the

00:27:45,500 --> 00:27:53,090
puffy is complete and here you know yeah

00:27:50,690 --> 00:27:55,760
why have to ensure the poverty there's

00:27:53,090 --> 00:27:58,900
no other reference you are the last our

00:27:55,760 --> 00:28:03,020
reference to the buffer to to save the

00:27:58,900 --> 00:28:06,590
tele user to use a proper my colleague

00:28:03,020 --> 00:28:09,920
william beef at Google he actually has a

00:28:06,590 --> 00:28:14,300
set of patches I've heard this checking

00:28:09,920 --> 00:28:17,170
the last reference it is kind of hairy

00:28:14,300 --> 00:28:21,290
so I think he has a patch SATA patch

00:28:17,170 --> 00:28:22,940
ready to go again so hopefully we can

00:28:21,290 --> 00:28:25,480
get that into lab sinker notes as

00:28:22,940 --> 00:28:25,480
possible

00:28:25,650 --> 00:28:30,900
I'm sorry I i think you know it's much

00:28:28,560 --> 00:28:32,580
simpler here you know finally I you know

00:28:30,900 --> 00:28:36,240
reap the benefit of the okay I'll

00:28:32,580 --> 00:28:39,480
running in the same address face I think

00:28:36,240 --> 00:28:43,350
we can just create analysis new cisco

00:28:39,480 --> 00:28:47,250
return skp2 user and offers subtle help

00:28:43,350 --> 00:28:52,200
a function to extract the address other

00:28:47,250 --> 00:28:55,230
than CB and we have to have another call

00:28:52,200 --> 00:28:59,760
back to the colonel to free to ask you

00:28:55,230 --> 00:29:02,640
be but no no we didn't get the time to

00:28:59,760 --> 00:29:06,660
finish so i also we will actually have

00:29:02,640 --> 00:29:10,200
the VN spy working after using a map

00:29:06,660 --> 00:29:14,190
announced the rebound some number on the

00:29:10,200 --> 00:29:17,760
odm a set up but it doesn't show any

00:29:14,190 --> 00:29:20,940
savings cbi officer boo so we have the

00:29:17,760 --> 00:29:28,410
investigate what is IP verb underneath

00:29:20,940 --> 00:29:31,140
doing what is doing another pin point

00:29:28,410 --> 00:29:35,040
about using the kernel code in userspace

00:29:31,140 --> 00:29:38,820
other tools right we love and we use to

00:29:35,040 --> 00:29:40,680
do our work if completely non your nap

00:29:38,820 --> 00:29:43,710
nest at each be dumb all this stuff

00:29:40,680 --> 00:29:48,330
right it doesn't work unless we do

00:29:43,710 --> 00:29:50,250
something with it so it doesn't work you

00:29:48,330 --> 00:29:52,980
say okay all your signal is a

00:29:50,250 --> 00:29:56,730
constrained by the single process as I

00:29:52,980 --> 00:29:59,310
space so we really have to have this at

00:29:56,730 --> 00:30:02,040
least a start so we can see if there's

00:29:59,310 --> 00:30:05,730
any research mission happening yo public

00:30:02,040 --> 00:30:09,390
our job by mistake so we clearly have up

00:30:05,730 --> 00:30:11,880
to spawn threat and that's why we'll

00:30:09,390 --> 00:30:14,970
create some simple command line you can

00:30:11,880 --> 00:30:18,960
land a verse or sit down c 5s and you

00:30:14,970 --> 00:30:21,150
can c d and cat to whatever you want get

00:30:18,960 --> 00:30:24,300
when you can money or you can you can

00:30:21,150 --> 00:30:27,570
check out the counters you can modify

00:30:24,300 --> 00:30:30,240
some tuna boats so this is very cool

00:30:27,570 --> 00:30:32,990
that I these gathers to be able to see

00:30:30,240 --> 00:30:35,580
like you know if there's any you know

00:30:32,990 --> 00:30:40,600
chest area or

00:30:35,580 --> 00:30:44,350
TV years hence machine and we Google on

00:30:40,600 --> 00:30:46,869
the web good sliders somebody found well

00:30:44,350 --> 00:30:50,080
I guess a rom kernel can they also faces

00:30:46,869 --> 00:30:53,529
power years ago and the solution is to

00:30:50,080 --> 00:30:56,289
sort of have a have a way of doing a

00:30:53,529 --> 00:30:58,869
remote system so they found a lot the

00:30:56,289 --> 00:31:02,340
assists are found these settle in a

00:30:58,869 --> 00:31:04,749
tools to the lq process right and then i

00:31:02,340 --> 00:31:09,629
think that that is probably a general

00:31:04,749 --> 00:31:09,629
solution that we we will work on that Oh

00:31:09,869 --> 00:31:22,659
any question Oh actually this is so can

00:31:21,100 --> 00:31:24,639
you talk a little bit more about your

00:31:22,659 --> 00:31:26,679
justification what what are you actually

00:31:24,639 --> 00:31:30,129
trying to achieve by doing this is it

00:31:26,679 --> 00:31:32,529
because so my understanding is that it's

00:31:30,129 --> 00:31:35,649
it's difficult to get tcp updates quick

00:31:32,529 --> 00:31:39,039
enough for what you desire yeah well

00:31:35,649 --> 00:31:41,889
that's 11 main well that's one many may

00:31:39,039 --> 00:31:44,919
reason in what context our data center

00:31:41,889 --> 00:31:46,989
yeah engines and systems inside the

00:31:44,919 --> 00:31:50,289
descender update our service especially

00:31:46,989 --> 00:31:53,889
40 data attack we need to patch whatever

00:31:50,289 --> 00:31:58,840
code quickly for that so as you only one

00:31:53,889 --> 00:32:04,149
another one is to serve number house so

00:31:58,840 --> 00:32:07,299
this is solo performance the we normally

00:32:04,149 --> 00:32:10,179
from the the full impact a former home

00:32:07,299 --> 00:32:12,309
phone casts off on the outside right we

00:32:10,179 --> 00:32:16,809
terminate all the TCP connections in the

00:32:12,309 --> 00:32:19,359
Google from a jerky and my instant is

00:32:16,809 --> 00:32:22,929
our engineers pour la time I'm not new

00:32:19,359 --> 00:32:29,169
enough on JV team but this team they put

00:32:22,929 --> 00:32:31,809
lot of resources on having that Chevy to

00:32:29,169 --> 00:32:34,059
again you know to fight against at us

00:32:31,809 --> 00:32:36,309
that we can say around at us so there

00:32:34,059 --> 00:32:39,309
are a lot of resource consumed by that

00:32:36,309 --> 00:32:42,279
and our internal the cloud group they

00:32:39,309 --> 00:32:44,980
told on to go to see everyone one thing

00:32:42,279 --> 00:32:46,060
we can run through TV and cheering team

00:32:44,980 --> 00:32:48,580
also

00:32:46,060 --> 00:32:50,710
have a way also maybe not patching the

00:32:48,580 --> 00:32:54,550
colonel quickly but they can handle that

00:32:50,710 --> 00:32:57,700
but for our internal cloud group since

00:32:54,550 --> 00:33:00,070
the gas DNI live inside their center

00:32:57,700 --> 00:33:02,440
right for the routing purpose we want to

00:33:00,070 --> 00:33:06,520
actually brought directly to the gas

00:33:02,440 --> 00:33:09,060
connection requests or the the HTTP

00:33:06,520 --> 00:33:13,510
requests directly to the backend server

00:33:09,060 --> 00:33:16,420
right and here the requirement is we can

00:33:13,510 --> 00:33:19,210
I Estonia we cannot terminate at least

00:33:16,420 --> 00:33:23,020
terminating the connection in the our

00:33:19,210 --> 00:33:25,480
paternal because of this target actually

00:33:23,020 --> 00:33:28,330
we are there's a multiple phones right

00:33:25,480 --> 00:33:31,300
one solution is case spies and Google is

00:33:28,330 --> 00:33:34,150
using a spice but there's my insanely

00:33:31,300 --> 00:33:37,620
they're a bunch of constraints so the

00:33:34,150 --> 00:33:37,620
reason I'm asking you this is that

00:33:37,740 --> 00:33:42,100
you're already investing a lot of effort

00:33:40,540 --> 00:33:43,330
into trying to make this thing work the

00:33:42,100 --> 00:33:46,630
way you want to and not to take a

00:33:43,330 --> 00:33:48,820
performance hit and even after you've

00:33:46,630 --> 00:33:50,530
got all the offloads enabled in all the

00:33:48,820 --> 00:33:52,450
virtual devices even after you get rid

00:33:50,530 --> 00:33:54,940
of the copies even after you figure out

00:33:52,450 --> 00:33:57,670
how to deal with the memory management

00:33:54,940 --> 00:34:00,130
issues and whatnot this is the tip of

00:33:57,670 --> 00:34:01,960
the iceberg it is so much more involved

00:34:00,130 --> 00:34:04,660
and complicated down the road then you

00:34:01,960 --> 00:34:06,640
can even envision right now this is not

00:34:04,660 --> 00:34:08,830
the way to do this kind of stuff for

00:34:06,640 --> 00:34:11,980
example you're going to want to get

00:34:08,830 --> 00:34:13,690
updates into this user space lk lkl

00:34:11,980 --> 00:34:18,760
thing and you're definitely going to

00:34:13,690 --> 00:34:21,780
want be BR / congestion control bbr

00:34:18,760 --> 00:34:25,360
requires extremely accurate timers and

00:34:21,780 --> 00:34:28,120
to do pacing properly so all i need to

00:34:25,360 --> 00:34:29,830
do is to schedule your lkl process out

00:34:28,120 --> 00:34:32,170
for a couple of milliseconds and i've

00:34:29,830 --> 00:34:34,960
completely destroyed performance of your

00:34:32,170 --> 00:34:37,780
of your i understand you know so PBR is

00:34:34,960 --> 00:34:40,450
one a sort of exception the the

00:34:37,780 --> 00:34:42,610
previously of mosul lang alverson those

00:34:40,450 --> 00:34:44,030
sort of you feel on the few minute

00:34:42,610 --> 00:34:46,460
second level

00:34:44,030 --> 00:34:49,220
fine right so yeah I cannot speak for

00:34:46,460 --> 00:34:51,290
PPR but I think maybe ours we were

00:34:49,220 --> 00:34:54,050
supposedly going so you need to take

00:34:51,290 --> 00:34:56,659
this into consideration okay well I'm

00:34:54,050 --> 00:34:58,280
saying this is one of many issues that

00:34:56,659 --> 00:35:00,800
you're going to run into down the line I

00:34:58,280 --> 00:35:03,380
really don't think you want to replicate

00:35:00,800 --> 00:35:05,420
the entire colonel in using surveys and

00:35:03,380 --> 00:35:07,550
expect to the work pacing is just one

00:35:05,420 --> 00:35:10,790
example of an area where timer accuracy

00:35:07,550 --> 00:35:13,850
is important for tcp it's not just vbr

00:35:10,790 --> 00:35:15,200
the whole tcp stack requires that timers

00:35:13,850 --> 00:35:18,470
are accurate and fire at the correct

00:35:15,200 --> 00:35:20,180
time for performance can let you yep do

00:35:18,470 --> 00:35:22,610
you have a better suggestion really all

00:35:20,180 --> 00:35:24,830
but we're having by the water in Glasgow

00:35:22,610 --> 00:35:27,190
is why aren't you why don't you just

00:35:24,830 --> 00:35:29,660
pushing the transport into user space

00:35:27,190 --> 00:35:32,570
well then we'll have to have all the

00:35:29,660 --> 00:35:35,810
glue code right no Rob the you get

00:35:32,570 --> 00:35:38,600
encapsulating UDP each end of the

00:35:35,810 --> 00:35:41,270
transport coal but the so while the

00:35:38,600 --> 00:35:43,400
motivation is the mature TV stallion

00:35:41,270 --> 00:35:45,010
minutes right so you know we don't have

00:35:43,400 --> 00:35:47,960
the disorder you combine Neal

00:35:45,010 --> 00:35:50,960
potentially interoperability problems so

00:35:47,960 --> 00:35:54,050
we run that use that code but I don't

00:35:50,960 --> 00:35:56,630
know how you know her better to karbala

00:35:54,050 --> 00:35:59,210
code right this is why he spent in

00:35:56,630 --> 00:36:02,180
beginning right guess the the boundary

00:35:59,210 --> 00:36:04,070
of this sky can be very hairy we haven't

00:36:02,180 --> 00:36:06,110
we didn't try that we want to move fast

00:36:04,070 --> 00:36:09,260
and there's something with jungle by the

00:36:06,110 --> 00:36:10,640
way baby no but we have a really invest

00:36:09,260 --> 00:36:14,720
a long time we still can change

00:36:10,640 --> 00:36:19,460
attraction so describe exactly what you

00:36:14,720 --> 00:36:22,100
mean by terminated TCP connection well

00:36:19,460 --> 00:36:24,770
it's a video universe the traffic's

00:36:22,100 --> 00:36:26,030
coming out of the host right and what do

00:36:24,770 --> 00:36:28,790
you want to do with that traffic though

00:36:26,030 --> 00:36:31,760
look Charlie coming out of the end like

00:36:28,790 --> 00:36:34,970
the Caspian right we won't actually we

00:36:31,760 --> 00:36:37,820
can lalo TCP packet from the cast style

00:36:34,970 --> 00:36:40,570
can be any new anything right so you're

00:36:37,820 --> 00:36:43,340
rewriting header is no no we terminator

00:36:40,570 --> 00:36:45,470
so you receive it yeah will you see will

00:36:43,340 --> 00:36:48,640
terminate and you know the socket data

00:36:45,470 --> 00:36:51,430
work annual sake read right we work at

00:36:48,640 --> 00:36:54,069
then the application the proxy can do

00:36:51,430 --> 00:36:56,920
whatever such as we send it back out an

00:36:54,069 --> 00:36:59,470
interface yeah yeah the ujt it's a pass

00:36:56,920 --> 00:37:02,049
in the actually the main case in the

00:36:59,470 --> 00:37:04,289
future is the posse will actually run a

00:37:02,049 --> 00:37:07,059
different transport internally at Google

00:37:04,289 --> 00:37:10,059
right to push the data without transport

00:37:07,059 --> 00:37:11,519
so so sorry we have to terminate TV

00:37:10,059 --> 00:37:13,900
connection there's no question about it

00:37:11,519 --> 00:37:17,559
it's kind of seems silly to me because

00:37:13,900 --> 00:37:20,380
you're you're going into user space to

00:37:17,559 --> 00:37:22,599
get protection whereas it is the kernel

00:37:20,380 --> 00:37:24,099
which provides protection for us with

00:37:22,599 --> 00:37:26,339
facilities like namespaces and

00:37:24,099 --> 00:37:29,799
separation and see groups and ways to

00:37:26,339 --> 00:37:32,200
chop pieces of the machine apart so that

00:37:29,799 --> 00:37:34,690
people can't hurt each other and I wish

00:37:32,200 --> 00:37:36,519
you really hadn't thought about i think

00:37:34,690 --> 00:37:39,400
i felt i'm really not something you give

00:37:36,519 --> 00:37:42,099
the process by this user space process

00:37:39,400 --> 00:37:44,500
by it's one process they can be restored

00:37:42,099 --> 00:37:49,180
quickly great but the colonel the whole

00:37:44,500 --> 00:37:51,039
thing by so um can I suggest an

00:37:49,180 --> 00:37:53,319
alternative so you ask an alternative

00:37:51,039 --> 00:37:57,670
what if you just from the proxy inside

00:37:53,319 --> 00:38:02,259
another vm yeah that's a well so I think

00:37:57,670 --> 00:38:04,869
I have that here so that has some other

00:38:02,259 --> 00:38:07,480
gratification so solve our application

00:38:04,869 --> 00:38:10,869
they need to link with and you we cannot

00:38:07,480 --> 00:38:13,779
set out at the yen write anything the

00:38:10,869 --> 00:38:17,380
application need to have a whole process

00:38:13,779 --> 00:38:20,109
a process by itself but it could be a vm

00:38:17,380 --> 00:38:22,000
that only has a single single process

00:38:20,109 --> 00:38:24,970
and then you give isolation and you

00:38:22,000 --> 00:38:28,049
another advantage so all this work

00:38:24,970 --> 00:38:31,029
you're doing here or two to optimize lkl

00:38:28,049 --> 00:38:32,740
that's a very narrow use case but

00:38:31,029 --> 00:38:33,390
imagine if you were doing this in a vm

00:38:32,740 --> 00:38:35,490
and you

00:38:33,390 --> 00:38:38,580
performance work to make to make vm

00:38:35,490 --> 00:38:40,950
better then we get a huge advantage out

00:38:38,580 --> 00:38:42,840
of that so I like that part of it if you

00:38:40,950 --> 00:38:45,030
could put into them I really save this

00:38:42,840 --> 00:38:47,630
in that well so this is sort of to chang

00:38:45,030 --> 00:38:49,980
we offered a solution in some case

00:38:47,630 --> 00:38:53,280
people are better off using a vm

00:38:49,980 --> 00:38:56,880
authorizer initiative one story project

00:38:53,280 --> 00:38:59,670
the versatility of diploma in for the

00:38:56,880 --> 00:39:03,480
this approach of en hypervisor the

00:38:59,670 --> 00:39:05,340
comparators performance but then we also

00:39:03,480 --> 00:39:08,640
have Provence Robin right so I'm not

00:39:05,340 --> 00:39:12,210
saying this solution is the past but the

00:39:08,640 --> 00:39:14,670
in some case the application department

00:39:12,210 --> 00:39:18,030
they cannot use vm they need to be just

00:39:14,670 --> 00:39:20,940
a beginning process itself on satellite

00:39:18,030 --> 00:39:22,740
thermal other justification there you

00:39:20,940 --> 00:39:25,440
know we are providing solutions right

00:39:22,740 --> 00:39:28,140
people see the solution work then they

00:39:25,440 --> 00:39:32,910
can use it so we can only have some

00:39:28,140 --> 00:39:35,490
customers internally yeah and I think

00:39:32,910 --> 00:39:38,880
the performance problem can be fixed the

00:39:35,490 --> 00:39:41,370
timing problem I still believed yeah PBR

00:39:38,880 --> 00:39:44,180
is no good from google we'd love to have

00:39:41,370 --> 00:39:47,400
that work but the majority of the

00:39:44,180 --> 00:39:51,030
algorithms should work as long as I

00:39:47,400 --> 00:39:53,430
sensitive right but I don't know if this

00:39:51,030 --> 00:39:57,960
other big I'll fetch your problem here

00:39:53,430 --> 00:40:00,510
hidden somewhere here's we like say we

00:39:57,960 --> 00:40:02,850
only know about ok I'll you know for the

00:40:00,510 --> 00:40:06,210
past what early is here exactly last

00:40:02,850 --> 00:40:07,770
year seemed to work you know the other

00:40:06,210 --> 00:40:12,480
line performance right we haven't really

00:40:07,770 --> 00:40:14,910
we fix a lot boss initially but since

00:40:12,480 --> 00:40:16,500
then it's just performance and books I

00:40:14,910 --> 00:40:19,980
province number is getting better matter

00:40:16,500 --> 00:40:23,070
there's a ongoing work to to avoid it

00:40:19,980 --> 00:40:25,080
also the heart I out you actually incur

00:40:23,070 --> 00:40:28,020
another common Jewish but i think that

00:40:25,080 --> 00:40:31,770
maintaining is coming working on trying

00:40:28,020 --> 00:40:33,870
to save like a message so what other

00:40:31,770 --> 00:40:36,600
users face things typically run on these

00:40:33,870 --> 00:40:38,400
cloud notes what are other you to what

00:40:36,600 --> 00:40:40,050
other user processes running is these

00:40:38,400 --> 00:40:43,170
cloud notes we're going to run the proxy

00:40:40,050 --> 00:40:45,690
oh i don't know what i mean by user

00:40:43,170 --> 00:40:48,990
other what other processes then the elk

00:40:45,690 --> 00:40:52,950
run on the innocent on this machine well

00:40:48,990 --> 00:40:55,080
we have a we have this I don't know why

00:40:52,950 --> 00:40:57,960
you here without board reschedule all

00:40:55,080 --> 00:41:00,540
kinds of jobs and run or another what I

00:40:57,960 --> 00:41:04,230
think another requirement why they wanna

00:41:00,540 --> 00:41:06,380
tell kara is they want to put multiple

00:41:04,230 --> 00:41:09,330
given application you increase the

00:41:06,380 --> 00:41:11,670
resource utilization we used to advocate

00:41:09,330 --> 00:41:13,980
single so basic almost anything can get

00:41:11,670 --> 00:41:16,650
scheduled on to this machine right here

00:41:13,980 --> 00:41:19,020
that's for that's the idea right so this

00:41:16,650 --> 00:41:21,180
means that if I can consume significant

00:41:19,020 --> 00:41:23,580
amounts of CPU on one of your cloud

00:41:21,180 --> 00:41:28,890
nodes I can basically kill your H a

00:41:23,580 --> 00:41:31,020
proxy traffic yeah but the I think if

00:41:28,890 --> 00:41:33,750
you attack this possible where you will

00:41:31,020 --> 00:41:35,610
most container to Linda should be a time

00:41:33,750 --> 00:41:37,800
of all this pasta guy it's funny that

00:41:35,610 --> 00:41:39,870
you'll use Colonel base isolation and

00:41:37,800 --> 00:41:41,610
controls for all the other aspects of

00:41:39,870 --> 00:41:44,130
this problem but you won't use it for

00:41:41,610 --> 00:41:48,540
this termination issue it seems so

00:41:44,130 --> 00:41:51,060
ridiculous well I yeah but the all in

00:41:48,540 --> 00:41:52,920
your support engineers have some issue i

00:41:51,060 --> 00:41:56,970
think that like i said you know we then

00:41:52,920 --> 00:41:58,350
we are moving to the case flies but i'm

00:41:56,970 --> 00:42:01,830
not that familiar with all the

00:41:58,350 --> 00:42:05,460
constraint look cider is we can quickly

00:42:01,830 --> 00:42:07,860
patch the colonel right maybe there's no

00:42:05,460 --> 00:42:09,780
need to terminate they'll go so all the

00:42:07,860 --> 00:42:12,330
hassle to terminate I've users face I

00:42:09,780 --> 00:42:14,700
just hear about this kernel update

00:42:12,330 --> 00:42:17,460
problem in many contexts whether it's

00:42:14,700 --> 00:42:19,800
the Android and end-user case and now it

00:42:17,460 --> 00:42:21,840
now cloud nodes need need to get updated

00:42:19,800 --> 00:42:25,590
quickly to fix bugs and things like this

00:42:21,840 --> 00:42:29,010
so if I can I don't think it's a kind of

00:42:25,590 --> 00:42:33,720
grid problem it's a surface attack

00:42:29,010 --> 00:42:36,270
problem right now the GFE is at the edge

00:42:33,720 --> 00:42:39,990
of the network at Google and they

00:42:36,270 --> 00:42:43,170
protect google for any kind of zero-day

00:42:39,990 --> 00:42:46,760
attack like packet of death but now if

00:42:43,170 --> 00:42:49,800
we extend the cloud and allow any

00:42:46,760 --> 00:42:53,550
traffic to come to any host in the fleet

00:42:49,800 --> 00:42:56,520
then this attack can be at all to Google

00:42:53,550 --> 00:42:57,200
like shutting down old machine google

00:42:56,520 --> 00:42:59,180
and

00:42:57,200 --> 00:43:03,160
don't want them well the manager don't

00:42:59,180 --> 00:43:06,350
want Bobby said I really we have

00:43:03,160 --> 00:43:08,510
anticipated but you know if you schedule

00:43:06,350 --> 00:43:10,130
a job and one of these cloud nodes that

00:43:08,510 --> 00:43:12,080
had a bum like you deployed some

00:43:10,130 --> 00:43:13,310
instance of the application actron to

00:43:12,080 --> 00:43:16,070
have a bug that would consume all the

00:43:13,310 --> 00:43:18,260
cpu and tie tie up the resources on the

00:43:16,070 --> 00:43:19,970
machine it would have now had the side

00:43:18,260 --> 00:43:23,360
effect of shutting down traffic for the

00:43:19,970 --> 00:43:26,360
guests yeah we don't care what s default

00:43:23,360 --> 00:43:28,160
I mean the diso a biscuit funny say

00:43:26,360 --> 00:43:29,870
doesn't have with this promise decided

00:43:28,160 --> 00:43:34,520
it would not exist if you solve the

00:43:29,870 --> 00:43:36,890
problem inside the colonel no yeah I

00:43:34,520 --> 00:43:39,040
totally I'm one kernel engineers right

00:43:36,890 --> 00:43:42,950
I'm a linux kernel isn't you actually

00:43:39,040 --> 00:43:47,210
how you're no engineer know where this

00:43:42,950 --> 00:43:49,700
is clinical right yeah servers would

00:43:47,210 --> 00:43:54,410
rather use you near virginia the support

00:43:49,700 --> 00:43:57,200
guys know like I will Saudi the govt is

00:43:54,410 --> 00:43:58,910
very expensive and so we actually beat

00:43:57,200 --> 00:44:02,420
Otis the department this is not apply

00:43:58,910 --> 00:44:05,210
yet we have deployed a collie Carlo from

00:44:02,420 --> 00:44:10,400
him right it's just that expenses law

00:44:05,210 --> 00:44:13,810
does our filter stuff right so if we the

00:44:10,400 --> 00:44:16,040
kernel can be partially splice and the I

00:44:13,810 --> 00:44:18,260
don't know all the other tags know the

00:44:16,040 --> 00:44:20,780
theater you probably know there is a new

00:44:18,260 --> 00:44:23,990
filter efficient filter you know that we

00:44:20,780 --> 00:44:26,150
can convince people to the top thing we

00:44:23,990 --> 00:44:32,600
don't need us but so far is not know the

00:44:26,150 --> 00:44:35,530
my share is not there pop it back so

00:44:32,600 --> 00:44:35,530

YouTube URL: https://www.youtube.com/watch?v=xP9crHI0aAU


