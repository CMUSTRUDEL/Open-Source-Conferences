Title: Automating auto-scaled load balancer based on linux and vm orchestraton
Publication date: 2018-03-14
Playlist: Netdev 2.2
Description: 
	Speaker: Andrew yongjoon Kong
Friday November 08th, 2017 
Seoul, Korea
https://www.netdevconf.org/2.2/session.html?kong-loadbalancingautomation-talk
Captions: 
	00:00:02,870 --> 00:00:08,209
to happen to them in castor yeah thank

00:00:07,520 --> 00:00:11,330
you for coming

00:00:08,209 --> 00:00:15,259
yeah yeah there's much trouble with the

00:00:11,330 --> 00:00:17,840
the beam projector and HDMI maybe I'm

00:00:15,259 --> 00:00:22,130
kind of late for five or three minutes

00:00:17,840 --> 00:00:25,430
yeah anyway uh today are we talking

00:00:22,130 --> 00:00:26,989
about the automating the auto scale the

00:00:25,430 --> 00:00:30,919
rotor balance theory based on the same

00:00:26,989 --> 00:00:33,579
frame Orchestrator actually I presented

00:00:30,919 --> 00:00:38,960
this this kind of about modeling and

00:00:33,579 --> 00:00:43,910
concep last Tokyo session is anywhere up

00:00:38,960 --> 00:00:49,070
in there no yeah that's good yes because

00:00:43,910 --> 00:00:53,230
I try to yeah reintroduce my mother

00:00:49,070 --> 00:00:55,519
again then yeah last tokyo's I mean I

00:00:53,230 --> 00:00:57,890
introduced my natural mother based on

00:00:55,519 --> 00:01:00,350
the 30 to be some net and vrf and the

00:00:57,890 --> 00:01:03,140
beach pea and the single and I see the

00:01:00,350 --> 00:01:06,980
thing is that this single and I see is

00:01:03,140 --> 00:01:09,740
just not just for the developer region

00:01:06,980 --> 00:01:12,500
it's just for its it's just for not for

00:01:09,740 --> 00:01:15,650
that just for developer it just is for

00:01:12,500 --> 00:01:18,880
the production library to so it's based

00:01:15,650 --> 00:01:22,550
on our production system and the cloud

00:01:18,880 --> 00:01:25,460
so I divided the compute node inside the

00:01:22,550 --> 00:01:27,740
camp you know and divided the NATO

00:01:25,460 --> 00:01:30,830
namespace I named the poultry switch

00:01:27,740 --> 00:01:33,440
plot and the VM is surpise on the tackle

00:01:30,830 --> 00:01:36,770
over this globe and atoll namespaces so

00:01:33,440 --> 00:01:40,780
the vmPFC treppie comes from this way

00:01:36,770 --> 00:01:43,040
and goes into this and virtual our and

00:01:40,780 --> 00:01:45,800
because we are using the single and i

00:01:43,040 --> 00:01:48,620
see we I have to divide it based on the

00:01:45,800 --> 00:01:52,130
field and VLAN ID the service one is the

00:01:48,620 --> 00:01:54,200
60 and the maximum is zero and the VM

00:01:52,130 --> 00:01:56,030
trapeze comes go down here comes cover

00:01:54,200 --> 00:02:01,820
here and go out like this

00:01:56,030 --> 00:02:07,160
so and we define the VMS IP based on the

00:02:01,820 --> 00:02:09,709
story to be a subnet so basically our in

00:02:07,160 --> 00:02:13,069
our cloud the VM can now communicate

00:02:09,709 --> 00:02:14,099
with with other VM with the l2 level

00:02:13,069 --> 00:02:16,409
link

00:02:14,099 --> 00:02:18,510
because the we don't support and we

00:02:16,409 --> 00:02:20,780
don't have any something that inside of

00:02:18,510 --> 00:02:24,150
the VM but the thing is there any way

00:02:20,780 --> 00:02:27,420
the the VM traffic is comes down from

00:02:24,150 --> 00:02:29,609
the VM can go out and the trophy for the

00:02:27,420 --> 00:02:32,069
VN can comes in because we're setting up

00:02:29,609 --> 00:02:36,680
the holder louder inside of the computer

00:02:32,069 --> 00:02:40,500
and the TR and we and we is changing the

00:02:36,680 --> 00:02:42,209
VMS IP based on the PC P is our paging

00:02:40,500 --> 00:02:44,340
at home mother and it's working and it's

00:02:42,209 --> 00:02:47,430
not that not that bad actually

00:02:44,340 --> 00:02:50,189
even though you can using the l2 level

00:02:47,430 --> 00:02:52,799
that's all inside the VM that means if

00:02:50,189 --> 00:02:54,269
you if you're running the JBoss cluster

00:02:52,799 --> 00:02:56,669
or something like that which is

00:02:54,269 --> 00:03:00,209
clustering based on the L 2 layers link

00:02:56,669 --> 00:03:02,549
it doesn't that it is it it doesn't

00:03:00,209 --> 00:03:05,750
matter working on our cluster but if you

00:03:02,549 --> 00:03:08,939
forget about the JBoss yeah it's okay

00:03:05,750 --> 00:03:11,790
and yeah so what is so key is that when

00:03:08,939 --> 00:03:13,829
the VM is here and because of the

00:03:11,790 --> 00:03:15,689
maintenance of vision or the computer is

00:03:13,829 --> 00:03:20,280
going something like something happened

00:03:15,689 --> 00:03:23,280
in a in this way you can move the VM

00:03:20,280 --> 00:03:25,590
like that before the moving the routing

00:03:23,280 --> 00:03:27,500
information comes from the software

00:03:25,590 --> 00:03:33,019
inside of the compute nodes and

00:03:27,500 --> 00:03:36,030
broadcast to the TR and it gets the

00:03:33,019 --> 00:03:37,620
routing information like that and the

00:03:36,030 --> 00:03:39,509
type of red switches or aggregation

00:03:37,620 --> 00:03:42,479
switches get the routing information

00:03:39,509 --> 00:03:45,629
like this if you want to go to address

00:03:42,479 --> 00:03:48,599
you go to your next obvious to r1 and

00:03:45,629 --> 00:03:50,849
you are and from this side and this

00:03:48,599 --> 00:03:53,549
flower if you want to go this this IP

00:03:50,849 --> 00:03:56,189
address you go to here yes things like

00:03:53,549 --> 00:03:59,759
that it's working so some of the main

00:03:56,189 --> 00:04:02,959
turns region or some the failure you if

00:03:59,759 --> 00:04:06,150
you have to move your VM just like this

00:04:02,959 --> 00:04:10,859
yeah decent migration is very easy

00:04:06,150 --> 00:04:12,989
because if you have a VM on the shared

00:04:10,859 --> 00:04:15,169
file system or the show the volume

00:04:12,989 --> 00:04:17,969
something like that the blue being the

00:04:15,169 --> 00:04:20,969
moving of image or movie or VM yourself

00:04:17,969 --> 00:04:23,699
is really easy but the thing is the it's

00:04:20,969 --> 00:04:25,680
really hard to move their IP right

00:04:23,699 --> 00:04:26,760
because you design the inside of the

00:04:25,680 --> 00:04:28,740
subnet and

00:04:26,760 --> 00:04:32,630
Gateway something like that but if you

00:04:28,740 --> 00:04:35,100
have a 32b networking and if you

00:04:32,630 --> 00:04:37,350
predefined the policy inside of the

00:04:35,100 --> 00:04:43,290
compute node and the TR when the VM is

00:04:37,350 --> 00:04:45,240
just moving just like that and yeah the

00:04:43,290 --> 00:04:50,970
learning information is just flash it

00:04:45,240 --> 00:04:53,580
and we yeah we gathered to the elation

00:04:50,970 --> 00:04:57,600
aggregation switch like that so when the

00:04:53,580 --> 00:04:59,940
beam is moved the destination or next to

00:04:57,600 --> 00:05:03,180
hub is to r2 to change it right because

00:04:59,940 --> 00:05:07,890
there T or has some other some new

00:05:03,180 --> 00:05:11,670
information about the routing routing

00:05:07,890 --> 00:05:15,660
information so using the 32-bit

00:05:11,670 --> 00:05:19,350
networking and the time Amidala protocol

00:05:15,660 --> 00:05:21,420
we using the simple IP planning when you

00:05:19,350 --> 00:05:23,310
making the cluster when you make the

00:05:21,420 --> 00:05:25,950
larger side of the data center you

00:05:23,310 --> 00:05:28,290
really it's really hard to define the

00:05:25,950 --> 00:05:30,570
net was subnet and the Gateway and the T

00:05:28,290 --> 00:05:33,240
or something like that right even though

00:05:30,570 --> 00:05:35,520
you solve the problem related with the

00:05:33,240 --> 00:05:38,750
hardware but it it's really hard to

00:05:35,520 --> 00:05:41,130
serve the logical interface in logical

00:05:38,750 --> 00:05:44,490
geometry of the subnet and the other

00:05:41,130 --> 00:05:48,720
other networking system but if you in

00:05:44,490 --> 00:05:51,540
the 30 minute working it you just define

00:05:48,720 --> 00:05:55,590
some some subnet for it just the cluster

00:05:51,540 --> 00:05:59,700
and before the VM the install or

00:05:55,590 --> 00:06:01,740
launched you have to predefined there

00:05:59,700 --> 00:06:03,300
louder's you can exchange it can is

00:06:01,740 --> 00:06:06,570
changing the orientation through the

00:06:03,300 --> 00:06:08,970
cluster and or the lower louder's so

00:06:06,570 --> 00:06:11,520
yeah the simple AI planning is kind of

00:06:08,970 --> 00:06:15,360
turned inside of cluster and the

00:06:11,520 --> 00:06:18,540
resource imbalancing yeah sometimes some

00:06:15,360 --> 00:06:22,020
wreak some wrecking of CPU and some

00:06:18,540 --> 00:06:23,940
breaking of memory or disk and some rack

00:06:22,020 --> 00:06:26,610
the king of the IP surf right if you

00:06:23,940 --> 00:06:30,300
designed it with the villain or the

00:06:26,610 --> 00:06:33,480
vehicle itself so at that time if you

00:06:30,300 --> 00:06:36,420
want to more memory or if you can get

00:06:33,480 --> 00:06:38,840
more memory or more CPU by migrating the

00:06:36,420 --> 00:06:41,540
VM here to the other way

00:06:38,840 --> 00:06:44,360
so you can serve the resources in

00:06:41,540 --> 00:06:46,580
balancing based on the data model that's

00:06:44,360 --> 00:06:51,230
own mother and forth to resilient it's

00:06:46,580 --> 00:06:53,270
kind of yeah actually we anyway we using

00:06:51,230 --> 00:06:56,480
the dynamic routing protocol and the

00:06:53,270 --> 00:06:58,400
router so it's opposed to resilience

00:06:56,480 --> 00:07:01,840
even though when the convener is gone

00:06:58,400 --> 00:07:05,090
right it's not for civilians but you can

00:07:01,840 --> 00:07:08,240
migrate the VNT to another way or

00:07:05,090 --> 00:07:11,470
compute node and set the same IP to the

00:07:08,240 --> 00:07:14,900
VM yeah for to the customer or to the

00:07:11,470 --> 00:07:17,960
developer or anyone inside of our

00:07:14,900 --> 00:07:20,570
cluster cloud it seems like there is

00:07:17,960 --> 00:07:24,979
rain nothing changes if even though it's

00:07:20,570 --> 00:07:27,530
migrated because to the developer the IP

00:07:24,979 --> 00:07:33,080
is if the IP address is not change it

00:07:27,530 --> 00:07:36,590
nothing changes right right so but when

00:07:33,080 --> 00:07:39,350
the it happens the rival - mm - when the

00:07:36,590 --> 00:07:43,039
VM itself is driving rival magnet t2

00:07:39,350 --> 00:07:46,850
other rare but inside of the VM if the

00:07:43,039 --> 00:07:48,620
IP changes right it has the problem to

00:07:46,850 --> 00:07:51,860
the developer right even though they had

00:07:48,620 --> 00:07:54,620
a team system so you can change it the

00:07:51,860 --> 00:07:58,760
IP for there's some kind of DNS record

00:07:54,620 --> 00:08:03,620
but if you have a cache inside a club or

00:07:58,760 --> 00:08:06,169
the client or in the web web browser you

00:08:03,620 --> 00:08:10,400
have it could it could be problem right

00:08:06,169 --> 00:08:12,530
so maintaining the same IP is usually

00:08:10,400 --> 00:08:15,889
important when you maintain the cloud or

00:08:12,530 --> 00:08:19,789
cluster yeah and because we are using

00:08:15,889 --> 00:08:21,229
the router is naturally distributed

00:08:19,789 --> 00:08:23,150
right you can exchange the hold

00:08:21,229 --> 00:08:25,970
information through the router or if you

00:08:23,150 --> 00:08:27,710
set the birthplace between the router

00:08:25,970 --> 00:08:31,970
you can exchanging the information

00:08:27,710 --> 00:08:37,400
through the sir the latest data center

00:08:31,970 --> 00:08:39,529
already and even some case yeah through

00:08:37,400 --> 00:08:41,779
the internet right that's how the

00:08:39,529 --> 00:08:42,140
Internet is built up right based on the

00:08:41,779 --> 00:08:43,790
router

00:08:42,140 --> 00:08:46,100
yep

00:08:43,790 --> 00:08:49,430
so yeah the Richard is kind of stunning

00:08:46,100 --> 00:08:53,810
because when we when we talked last year

00:08:49,430 --> 00:08:59,210
we had a almost nineteen nine thousand

00:08:53,810 --> 00:09:01,430
VM and the 1500 project and something

00:08:59,210 --> 00:09:04,870
like that and in the the VM is created

00:09:01,430 --> 00:09:10,250
until it eighth birthday 88 times and

00:09:04,870 --> 00:09:13,130
now he's come to yeah 20,000 VMs inside

00:09:10,250 --> 00:09:16,460
our cluster and we had a 2000 project

00:09:13,130 --> 00:09:20,660
and we had a ball almost time for the

00:09:16,460 --> 00:09:24,710
kids to be since from the 2014 and yeah

00:09:20,660 --> 00:09:30,320
the VM created and deleted a hundred

00:09:24,710 --> 00:09:33,410
times per day which is this some some

00:09:30,320 --> 00:09:36,820
point of view were some interesting some

00:09:33,410 --> 00:09:41,930
are interested in this figure because

00:09:36,820 --> 00:09:43,550
they're using 10 is a higher index so

00:09:41,930 --> 00:09:46,030
some part of some part of people using

00:09:43,550 --> 00:09:49,430
this this number as a scientist because

00:09:46,030 --> 00:09:51,950
they they their infrastructure is

00:09:49,430 --> 00:09:55,400
changing right so in some it's built up

00:09:51,950 --> 00:09:57,860
on some scone automatically so if that

00:09:55,400 --> 00:10:00,370
number is high that means they had a

00:09:57,860 --> 00:10:05,060
really good until 18 inside of their

00:10:00,370 --> 00:10:06,130
infrastructures or cloud here we now

00:10:05,060 --> 00:10:09,080
bore them

00:10:06,130 --> 00:10:14,660
yeah wondered 100,000 active course

00:10:09,080 --> 00:10:17,450
inside our cloud after that yeah they've

00:10:14,660 --> 00:10:20,210
to production ratio when you see the to

00:10:17,450 --> 00:10:23,420
the graph the production rates cause of

00:10:20,210 --> 00:10:27,370
this more than now is more than proud to

00:10:23,420 --> 00:10:31,570
present right and the thing is that

00:10:27,370 --> 00:10:34,420
President started with yeah like this

00:10:31,570 --> 00:10:38,320
2015 and the devs John started with the

00:10:34,420 --> 00:10:42,560
2013 we had a more two years gap but

00:10:38,320 --> 00:10:47,930
numbers of the VM actually beat the time

00:10:42,560 --> 00:10:50,450
game and the thing is that inside of the

00:10:47,930 --> 00:10:53,060
production system they need more memory

00:10:50,450 --> 00:10:55,730
were more CPU right so when you compare

00:10:53,060 --> 00:10:56,870
when we compare with memory usage per

00:10:55,730 --> 00:11:05,720
John yeah

00:10:56,870 --> 00:11:08,180
like instead I 2004 2060 and September

00:11:05,720 --> 00:11:11,450
or November something like that actually

00:11:08,180 --> 00:11:15,950
the production rate is beta developer

00:11:11,450 --> 00:11:18,620
John okay yeah boom they're talking is

00:11:15,950 --> 00:11:21,290
kind of modern and information kind of

00:11:18,620 --> 00:11:24,320
okay right because with that kind of

00:11:21,290 --> 00:11:27,230
increase we don't need any pressure in

00:11:24,320 --> 00:11:30,650
terms of the scalability of the network

00:11:27,230 --> 00:11:33,650
or scalability of the our cloud actually

00:11:30,650 --> 00:11:36,620
our color based on the OpenStack open

00:11:33,650 --> 00:11:40,730
source but we need we we never

00:11:36,620 --> 00:11:44,360
experience with the options text API or

00:11:40,730 --> 00:11:47,690
agent or some some simulated component

00:11:44,360 --> 00:11:49,610
with the scale of issues okay that's

00:11:47,690 --> 00:11:52,520
working and the thing is that what about

00:11:49,610 --> 00:11:55,090
container right because these days a lot

00:11:52,520 --> 00:11:57,890
of people and developer and even the

00:11:55,090 --> 00:12:00,170
infrastructure code developer using

00:11:57,890 --> 00:12:07,930
container for their developing system or

00:12:00,170 --> 00:12:11,120
the person system right oh yeah a

00:12:07,930 --> 00:12:14,120
container comprises multiple APIs in

00:12:11,120 --> 00:12:16,190
spaces like Network namespaces and the

00:12:14,120 --> 00:12:21,020
process namespaces and file system let

00:12:16,190 --> 00:12:24,290
them then spaces like that so if it's

00:12:21,020 --> 00:12:25,430
possible you think or using the

00:12:24,290 --> 00:12:27,980
container

00:12:25,430 --> 00:12:30,080
you made a standard research for the

00:12:27,980 --> 00:12:36,440
development system or the production

00:12:30,080 --> 00:12:40,100
system to actually the container based

00:12:36,440 --> 00:12:44,300
on the less mutable things like tips and

00:12:40,100 --> 00:12:47,840
gems words in the packages and using the

00:12:44,300 --> 00:12:50,360
Pony amount or the the other the

00:12:47,840 --> 00:12:51,500
technique you can use the meter with

00:12:50,360 --> 00:12:57,230
things like configuration or the

00:12:51,500 --> 00:13:00,020
container right so anyway so you think

00:12:57,230 --> 00:13:02,570
this this one is kind of lego or the

00:13:00,020 --> 00:13:05,750
breeze for your production system right

00:13:02,570 --> 00:13:07,630
so when you build up or you're in a

00:13:05,750 --> 00:13:11,410
little more

00:13:07,630 --> 00:13:14,860
yeah more they took the top power or CPU

00:13:11,410 --> 00:13:17,440
power for your process you just need

00:13:14,860 --> 00:13:23,950
more container based on the immutable

00:13:17,440 --> 00:13:25,900
file or immutable war files yet it's a

00:13:23,950 --> 00:13:28,960
little bit different from the when

00:13:25,900 --> 00:13:31,060
you're using the container and you're

00:13:28,960 --> 00:13:34,210
comparing it to using the VM but in

00:13:31,060 --> 00:13:36,850
terms of networking model is not that

00:13:34,210 --> 00:13:39,460
not that different because anyway it had

00:13:36,850 --> 00:13:41,620
a back feeling and tune and half device

00:13:39,460 --> 00:13:43,600
and over a bridge and then space in

00:13:41,620 --> 00:13:47,200
driver right you are really familiar

00:13:43,600 --> 00:13:48,940
with that right so it's not not that

00:13:47,200 --> 00:13:51,250
different but it's looking different for

00:13:48,940 --> 00:13:53,470
when you open the lanes PC or something

00:13:51,250 --> 00:13:57,160
like that is not a different but the

00:13:53,470 --> 00:13:59,110
thing is that the developer that

00:13:57,160 --> 00:14:01,450
infrastructure cars or the networking

00:13:59,110 --> 00:14:03,250
guys tip everything is different right

00:14:01,450 --> 00:14:07,690
so you have to prepare something for

00:14:03,250 --> 00:14:10,480
there so yeah you need to understand

00:14:07,690 --> 00:14:13,660
what is container anyway it's not

00:14:10,480 --> 00:14:15,550
different anyway yeah these days most of

00:14:13,660 --> 00:14:18,190
most of the production and most of

00:14:15,550 --> 00:14:20,740
solution is based on D using the overlay

00:14:18,190 --> 00:14:24,010
system but when you using the overlay

00:14:20,740 --> 00:14:26,290
system you have to thinking about their

00:14:24,010 --> 00:14:29,670
performance right even though if you buy

00:14:26,290 --> 00:14:32,320
more specific or the expensive device

00:14:29,670 --> 00:14:34,750
maybe you can solve the performance

00:14:32,320 --> 00:14:39,940
problem but it's a little bit expensive

00:14:34,750 --> 00:14:43,900
right not a little bit expensive and the

00:14:39,940 --> 00:14:45,640
thing is the container is just migrated

00:14:43,900 --> 00:14:49,270
through the cluster or cloud and

00:14:45,640 --> 00:14:50,920
actually it container yeah some some

00:14:49,270 --> 00:14:53,020
container instead in the container

00:14:50,920 --> 00:14:55,210
Orchestrator putting a word spin up

00:14:53,020 --> 00:14:58,780
another container inside inside of

00:14:55,210 --> 00:15:01,060
another another vm or another cloud on

00:14:58,780 --> 00:15:03,010
or another planet or hypervisor so you

00:15:01,060 --> 00:15:05,110
have to migrate you have to thinking

00:15:03,010 --> 00:15:07,030
about the migration and portal vigilance

00:15:05,110 --> 00:15:12,810
when the container is gone you have to

00:15:07,030 --> 00:15:16,750
think about that too and if you want to

00:15:12,810 --> 00:15:18,580
implement the container cloud based on

00:15:16,750 --> 00:15:20,050
the overlay you have to think you know

00:15:18,580 --> 00:15:21,610
about anyway you have to thinking about

00:15:20,050 --> 00:15:24,550
how you

00:15:21,610 --> 00:15:26,950
pick the packet out of the container -

00:15:24,550 --> 00:15:29,200
right yeah

00:15:26,950 --> 00:15:31,380
the end of the VX land or the overlay

00:15:29,200 --> 00:15:36,250
system you have to have a some kind of

00:15:31,380 --> 00:15:40,029
exchanger for the for working with the

00:15:36,250 --> 00:15:45,130
other ipv4 or the ipv6 system right so

00:15:40,029 --> 00:15:47,700
it's really that ten system order that

00:15:45,130 --> 00:15:50,769
component is is to have the wish issue

00:15:47,700 --> 00:15:53,110
with the default of the children's and

00:15:50,769 --> 00:15:55,959
the performance system - but if you have

00:15:53,110 --> 00:16:00,339
money it's okay right you can surf the

00:15:55,959 --> 00:16:03,399
problem very easily yeah

00:16:00,339 --> 00:16:06,370
so rather approach for the container

00:16:03,399 --> 00:16:08,170
network is that node fourth right most

00:16:06,370 --> 00:16:10,149
of most of solutions were most open

00:16:08,170 --> 00:16:13,149
source based on the dot fourth and the

00:16:10,149 --> 00:16:17,160
rotor balancer it's very easy anyway you

00:16:13,149 --> 00:16:20,529
just pick the port inside of the

00:16:17,160 --> 00:16:23,980
computer door and insert the VM and the

00:16:20,529 --> 00:16:26,110
connected with water balance is done and

00:16:23,980 --> 00:16:30,000
the thing is that both port has a

00:16:26,110 --> 00:16:38,250
limited port orange light it cannot have

00:16:30,000 --> 00:16:38,250
more than how big is that fifteen

00:16:38,760 --> 00:16:48,070
fifteen fifty fifty thousand port inside

00:16:44,020 --> 00:16:51,279
of top because it had IP tables issues

00:16:48,070 --> 00:16:53,440
right you cannot have the more than more

00:16:51,279 --> 00:16:57,370
than ten numbers inside of it names

00:16:53,440 --> 00:17:00,040
network so it has a debt limitation and

00:16:57,370 --> 00:17:02,260
the thing instead it's okay using the

00:17:00,040 --> 00:17:04,660
rotor balancer but the things the rotor

00:17:02,260 --> 00:17:07,000
browser is expensive to write so when

00:17:04,660 --> 00:17:09,189
you build up the container cloud or

00:17:07,000 --> 00:17:13,480
container cluster for the system you

00:17:09,189 --> 00:17:20,709
have to buy some kind of this but if you

00:17:13,480 --> 00:17:24,160
have a bunny nest again it's okay so we

00:17:20,709 --> 00:17:27,040
made some kind of some several

00:17:24,160 --> 00:17:28,809
approaches for that forwarded for the

00:17:27,040 --> 00:17:32,890
problem and the port for that issue

00:17:28,809 --> 00:17:34,450
first one is that rural container and

00:17:32,890 --> 00:17:39,039
preaches on there and the

00:17:34,450 --> 00:17:42,070
the injector the original container just

00:17:39,039 --> 00:17:43,690
using the container the two inside of

00:17:42,070 --> 00:17:47,590
the container system

00:17:43,690 --> 00:17:50,830
so before we subpoena of the container

00:17:47,590 --> 00:17:53,380
we predefined some some witches can roll

00:17:50,830 --> 00:17:56,100
over through the our cluster and put it

00:17:53,380 --> 00:17:59,500
in the container and

00:17:56,100 --> 00:18:03,700
if a container comes up we can this

00:17:59,500 --> 00:18:05,350
container can can communicate with the

00:18:03,700 --> 00:18:09,820
other over the outside world and the

00:18:05,350 --> 00:18:12,669
when the container is spins up we sent a

00:18:09,820 --> 00:18:15,429
signal to lure our people our injector

00:18:12,669 --> 00:18:18,190
and the louder Crestor set the

00:18:15,429 --> 00:18:24,669
information and loading the container IP

00:18:18,190 --> 00:18:28,000
to the other outside the world yeah

00:18:24,669 --> 00:18:30,909
using using that kind of a model is but

00:18:28,000 --> 00:18:33,429
the thing is that our legacy we have

00:18:30,909 --> 00:18:36,250
recorded a legacy right now yeah we had

00:18:33,429 --> 00:18:39,100
an open state cloud very large so we

00:18:36,250 --> 00:18:42,909
have to using often state component for

00:18:39,100 --> 00:18:47,590
the designer for implementing dead

00:18:42,909 --> 00:18:52,240
mother yeah we had a several 32-bit

00:18:47,590 --> 00:18:55,029
Network on the VM and actually it goes

00:18:52,240 --> 00:18:58,090
like this so we had a multiple

00:18:55,029 --> 00:19:02,230
interfaces attention but multiple

00:18:58,090 --> 00:19:04,120
interfaces to the VM and we stitching it

00:19:02,230 --> 00:19:06,940
there being a spirit and container using

00:19:04,120 --> 00:19:10,419
this bridge so and the inside of our

00:19:06,940 --> 00:19:12,519
switch namespaces there's actually seems

00:19:10,419 --> 00:19:15,100
like the seven-episode routing but it's

00:19:12,519 --> 00:19:20,409
based on the 32 so if you had a more

00:19:15,100 --> 00:19:22,659
than 32 natural yeah if you have them if

00:19:20,409 --> 00:19:25,240
you have many bridges or it's just

00:19:22,659 --> 00:19:28,600
little spaces inside a via we have a lot

00:19:25,240 --> 00:19:32,500
of loading information here so it's not

00:19:28,600 --> 00:19:36,610
that the good right so you can make the

00:19:32,500 --> 00:19:39,220
lot of UI p to the containers so with

00:19:36,610 --> 00:19:41,289
this model you can use the legacy based

00:19:39,220 --> 00:19:45,340
legacy IP based emergent system like

00:19:41,289 --> 00:19:47,290
SNMP or something like that it's not

00:19:45,340 --> 00:19:49,210
using the overlay so

00:19:47,290 --> 00:19:51,640
it's simple even though there's a lot of

00:19:49,210 --> 00:19:54,340
a lot of steady loud inside of the house

00:19:51,640 --> 00:19:58,690
it's namespaces but you can see and you

00:19:54,340 --> 00:20:01,360
can modify the information if there's a

00:19:58,690 --> 00:20:05,140
problem but the thing is that yeah you

00:20:01,360 --> 00:20:07,990
have to have a when you increase the VM

00:20:05,140 --> 00:20:12,160
for the container you have to be

00:20:07,990 --> 00:20:15,420
thinking about the IP count and IP

00:20:12,160 --> 00:20:17,950
subnet on seems like that

00:20:15,420 --> 00:20:22,360
so we've yeah we saw

00:20:17,950 --> 00:20:26,860
so we heading to the louder from louder

00:20:22,360 --> 00:20:30,580
to the load balancer design and the

00:20:26,860 --> 00:20:32,410
requirement is seems like simple just

00:20:30,580 --> 00:20:34,960
yeah you can create the software loader

00:20:32,410 --> 00:20:38,290
branch with the API and the API had a

00:20:34,960 --> 00:20:42,100
compatibility with the office that that

00:20:38,290 --> 00:20:44,890
is the most hard part actually yeah and

00:20:42,100 --> 00:20:49,120
if you the if the load balancer is scale

00:20:44,890 --> 00:20:51,960
out and there's some a cluster so load

00:20:49,120 --> 00:20:55,690
balancer clusters logs and metric can be

00:20:51,960 --> 00:20:57,430
yeah can be obtained by the in-house

00:20:55,690 --> 00:21:00,100
measuring cloud we actually had a

00:20:57,430 --> 00:21:02,080
virtual cloud inside inside inside of

00:21:00,100 --> 00:21:05,200
the cluster so you had a comparability

00:21:02,080 --> 00:21:07,990
with this measurement system and the and

00:21:05,200 --> 00:21:11,260
the Roadmaster cluster also have a same

00:21:07,990 --> 00:21:12,510
entering IP because when when when you

00:21:11,260 --> 00:21:16,210
scale out

00:21:12,510 --> 00:21:19,770
like I said when if the IP change is

00:21:16,210 --> 00:21:23,590
gonna be problem to the developer right

00:21:19,770 --> 00:21:26,440
maybe not but inside our they were when

00:21:23,590 --> 00:21:29,530
the scale out and they'll be yourself is

00:21:26,440 --> 00:21:35,440
scale out and the IP change what right

00:21:29,530 --> 00:21:40,330
so you have to have a same IP if you had

00:21:35,440 --> 00:21:43,600
a tea or another load balancer front of

00:21:40,330 --> 00:21:47,620
test system maybe the IP can change but

00:21:43,600 --> 00:21:52,600
the thing is that we had a very limited

00:21:47,620 --> 00:21:55,360
budget for the appliance for the road

00:21:52,600 --> 00:21:58,600
balancers so we we can have more than

00:21:55,360 --> 00:22:00,920
two or three so yeah yeah that's really

00:21:58,600 --> 00:22:03,290
already right so

00:22:00,920 --> 00:22:06,320
you should have the same IP just working

00:22:03,290 --> 00:22:11,480
as an airport working simply like

00:22:06,320 --> 00:22:13,160
Airport system right so Andy the thing

00:22:11,480 --> 00:22:15,410
is that when the cluster one of the

00:22:13,160 --> 00:22:17,299
cluster is gone or member of cluster

00:22:15,410 --> 00:22:19,549
though this cone or seems like seems

00:22:17,299 --> 00:22:22,190
like they happen inside of the cluster

00:22:19,549 --> 00:22:24,410
you have to have a check the others

00:22:22,190 --> 00:22:28,370
estate or automatically which is because

00:22:24,410 --> 00:22:34,720
it's cluster right yeah the first one is

00:22:28,370 --> 00:22:38,120
that using assigning the same IP to the

00:22:34,720 --> 00:22:42,830
actually did this is the HCA proxies the

00:22:38,120 --> 00:22:47,299
VM yeah I was to assign the same IP to

00:22:42,830 --> 00:22:50,110
the the VM we starting from the one to

00:22:47,299 --> 00:22:53,660
one mass system based on recorded

00:22:50,110 --> 00:22:56,570
floating IP in OpenStack it's really

00:22:53,660 --> 00:23:00,140
simple like when the VM is here so when

00:22:56,570 --> 00:23:05,960
you want to attach the protein IP

00:23:00,140 --> 00:23:09,169
through the API and inside a open stay

00:23:05,960 --> 00:23:14,570
and the compute node there it writing

00:23:09,169 --> 00:23:18,049
some IP provision to here which is in a

00:23:14,570 --> 00:23:23,210
in a TCP level it recognized as the

00:23:18,049 --> 00:23:27,970
connected one and it goes to the goes to

00:23:23,210 --> 00:23:30,799
over the TR system so the packet for the

00:23:27,970 --> 00:23:33,740
this protein IP can approach it like

00:23:30,799 --> 00:23:36,950
this because anyway is advertises and

00:23:33,740 --> 00:23:41,630
the thing is that when the package here

00:23:36,950 --> 00:23:45,400
actually stole there's no IP system for

00:23:41,630 --> 00:23:48,770
there right so you have to change the

00:23:45,400 --> 00:23:52,520
using the IP tables and Tina you have to

00:23:48,770 --> 00:23:56,960
change the IP to the X rayed actually

00:23:52,520 --> 00:23:59,419
the VM this is simple right little bit

00:23:56,960 --> 00:24:02,270
little bit difficult but it when you're

00:23:59,419 --> 00:24:04,940
using the right routing and the IP IP

00:24:02,270 --> 00:24:10,040
table it's not that easy

00:24:04,940 --> 00:24:12,410
so if you maintaining that kind of IP I

00:24:10,040 --> 00:24:14,840
mean the floating IP and you can if you

00:24:12,410 --> 00:24:18,080
can't doubled it like this

00:24:14,840 --> 00:24:21,200
so inside of here you still have the

00:24:18,080 --> 00:24:23,630
this IP connected and other advertise to

00:24:21,200 --> 00:24:26,420
the aggregation switch aggregation

00:24:23,630 --> 00:24:29,630
louder and the other VM and the other

00:24:26,420 --> 00:24:34,160
the other system also can advertise same

00:24:29,630 --> 00:24:37,010
same IP like yeah this iPod rest or

00:24:34,160 --> 00:24:40,790
advertise to the same aggregation table

00:24:37,010 --> 00:24:44,870
yeah this this IPS is ecmp right so when

00:24:40,790 --> 00:24:47,780
you when you want to connect to or reach

00:24:44,870 --> 00:24:50,240
out to the disciple at rest it goes to

00:24:47,780 --> 00:24:53,900
first time it goes to here but it's

00:24:50,240 --> 00:24:56,180
depends on how you setting the around

00:24:53,900 --> 00:24:58,370
except yeah if you want if you're

00:24:56,180 --> 00:25:02,360
setting allowed flow flow based one if

00:24:58,370 --> 00:25:05,270
you if you it was connected it goes to

00:25:02,360 --> 00:25:07,280
like that but if we use the others if

00:25:05,270 --> 00:25:11,570
you see another setting it's based on D

00:25:07,280 --> 00:25:13,910
like round-robin system so for the issue

00:25:11,570 --> 00:25:16,130
MP system I think the flow based one is

00:25:13,910 --> 00:25:18,800
more better because you can maintaining

00:25:16,130 --> 00:25:25,040
the connection to the meter one like SSH

00:25:18,800 --> 00:25:28,400
it seems like that yeah so it starting

00:25:25,040 --> 00:25:33,920
with the user on you know open step we

00:25:28,400 --> 00:25:36,580
called the week or are we really Neutron

00:25:33,920 --> 00:25:38,930
is sorry

00:25:36,580 --> 00:25:42,620
inside of the op instead you shouldn't

00:25:38,930 --> 00:25:47,420
taking part of the delimit that they're

00:25:42,620 --> 00:25:49,510
talking for the VM so yeah maintain the

00:25:47,420 --> 00:25:52,070
plot you can maintain the floating IP

00:25:49,510 --> 00:25:55,100
make sure is mixed up with pitch

00:25:52,070 --> 00:25:55,730
paralyzed and the virtual IP and IP

00:25:55,100 --> 00:25:58,310
tables

00:25:55,730 --> 00:26:03,160
so before we are setting up before you

00:25:58,310 --> 00:26:07,100
using the protein IP you have to set the

00:26:03,160 --> 00:26:09,680
the switch it louder routers in such a

00:26:07,100 --> 00:26:13,220
dead space use that you have to set if

00:26:09,680 --> 00:26:16,160
you're some IPS connected to your gain

00:26:13,220 --> 00:26:19,520
spaces you have to you can advertise to

00:26:16,160 --> 00:26:23,600
the other lovers with a limited

00:26:19,520 --> 00:26:28,670
information so seems like that is based

00:26:23,600 --> 00:26:31,670
on is working model and actually

00:26:28,670 --> 00:26:33,860
the first one I mean the the first VMI

00:26:31,670 --> 00:26:37,880
piece is based on the Connor steady

00:26:33,860 --> 00:26:41,570
louder's so the neutral States SP age

00:26:37,880 --> 00:26:45,410
and taking taking control of the this

00:26:41,570 --> 00:26:47,990
host allowing information and when you

00:26:45,410 --> 00:26:52,700
are touching the floating IP to the VM

00:26:47,990 --> 00:26:56,600
the SV system recorded the nutrients

00:26:52,700 --> 00:26:59,630
reagent taking part of the t-nut and the

00:26:56,600 --> 00:27:02,180
and connecting the IP to the take a way

00:26:59,630 --> 00:27:11,260
so it is simple but it's a little bit

00:27:02,180 --> 00:27:15,380
complex yeah so yeah based on the the

00:27:11,260 --> 00:27:18,530
the first model is one we spin up to H a

00:27:15,380 --> 00:27:21,530
proxy inside the VM and the attesting T

00:27:18,530 --> 00:27:24,920
protein IP and grouping it and doubled

00:27:21,530 --> 00:27:28,970
it the network model is a little bit

00:27:24,920 --> 00:27:31,070
complex but is yeah when the this mother

00:27:28,970 --> 00:27:33,230
is setting and the grouping just to

00:27:31,070 --> 00:27:36,020
doubled it and tripled it so you can

00:27:33,230 --> 00:27:39,920
have this scale out the load balancer

00:27:36,020 --> 00:27:43,100
right because it's on the VM like like

00:27:39,920 --> 00:27:46,610
this yeah I noticed

00:27:43,100 --> 00:27:49,970
this looks ugly but yeah can you

00:27:46,610 --> 00:27:55,940
thinking about the first one I just yeah

00:27:49,970 --> 00:27:58,340
copying this to here and but the I yes

00:27:55,940 --> 00:28:03,590
sorry the computer would have two

00:27:58,340 --> 00:28:06,890
different one yeah so just yeah the

00:28:03,590 --> 00:28:08,660
model is done and we the left thing is

00:28:06,890 --> 00:28:11,590
it just implementing it but the thing is

00:28:08,660 --> 00:28:15,950
that as you know model is wanting and

00:28:11,590 --> 00:28:18,770
implementation the other thing right so

00:28:15,950 --> 00:28:20,810
yeah we named each system as a severe

00:28:18,770 --> 00:28:24,140
which is the cloud-based roadable

00:28:20,810 --> 00:28:28,760
answers and the first target was the

00:28:24,140 --> 00:28:32,510
kubernetes and the CBL is based on the

00:28:28,760 --> 00:28:36,320
coaling and he is using the SCT for the

00:28:32,510 --> 00:28:39,380
data store and he followed the motor one

00:28:36,320 --> 00:28:42,470
like the floating IP and

00:28:39,380 --> 00:28:47,210
severe support the scale in and out

00:28:42,470 --> 00:28:50,930
through the API and support SNMP so you

00:28:47,210 --> 00:28:53,420
can our battery system can our metric

00:28:50,930 --> 00:28:55,700
system is based on the SNMP so you can

00:28:53,420 --> 00:28:57,980
be you can have the information about

00:28:55,700 --> 00:29:00,860
the a a proxy the connections and the

00:28:57,980 --> 00:29:04,520
throughput through the our burgeoning

00:29:00,860 --> 00:29:10,490
cloud yeah yeah first target was

00:29:04,520 --> 00:29:13,700
kubernetes and using the yeah

00:29:10,490 --> 00:29:15,890
using the kubernetes event stream when

00:29:13,700 --> 00:29:17,750
you're watching the event stream they

00:29:15,890 --> 00:29:20,030
have some bases like or one container

00:29:17,750 --> 00:29:23,300
credit and one content container is gone

00:29:20,030 --> 00:29:24,860
one part is crazy one service is created

00:29:23,300 --> 00:29:27,800
something like that the information

00:29:24,860 --> 00:29:30,230
comes through the event stream or we're

00:29:27,800 --> 00:29:32,810
using I using this events from a

00:29:30,230 --> 00:29:37,510
triggering source so when you watching

00:29:32,810 --> 00:29:37,510
our services credit then you create the

00:29:37,960 --> 00:29:47,000
1v1 LP through the inside of the VM and

00:29:41,750 --> 00:29:50,060
if you had a there's are some situation

00:29:47,000 --> 00:29:53,120
like you have to scale out the elbe then

00:29:50,060 --> 00:29:59,870
I can scale out of the LP through the

00:29:53,120 --> 00:30:02,750
insert p.m. like this and the thing is

00:29:59,870 --> 00:30:05,300
the kubernetes also have to have a the

00:30:02,750 --> 00:30:07,960
easter a lot version for the container

00:30:05,300 --> 00:30:10,460
so when you're using the coupon latest

00:30:07,960 --> 00:30:13,630
you you have to use in the google cloud

00:30:10,460 --> 00:30:16,340
which is what's most convenient for the

00:30:13,630 --> 00:30:19,760
kubernetes itself but if you don't have

00:30:16,340 --> 00:30:23,510
the google cloud inside of your system

00:30:19,760 --> 00:30:26,350
you have to making some kind of load

00:30:23,510 --> 00:30:29,600
words for the container these days

00:30:26,350 --> 00:30:32,930
kubernetes is self trying to making they

00:30:29,600 --> 00:30:35,630
kind of concept they named it ingress or

00:30:32,930 --> 00:30:38,420
something I cannot remember yeah so they

00:30:35,630 --> 00:30:43,580
had a similar process for that too but

00:30:38,420 --> 00:30:44,870
it's two years ago I already implemented

00:30:43,580 --> 00:30:47,260
they can't take an ID

00:30:44,870 --> 00:30:50,440
ideation yeah what

00:30:47,260 --> 00:30:54,850
instead in a postage kubernetes strata

00:30:50,440 --> 00:30:59,170
from our legacy container Kent candidate

00:30:54,850 --> 00:31:01,090
so it's dropped right so because the

00:30:59,170 --> 00:31:04,360
thing I don't want to support the

00:31:01,090 --> 00:31:08,530
OpenStack is that OpenStack that has the

00:31:04,360 --> 00:31:10,680
their own life cycle for the the rotor

00:31:08,530 --> 00:31:13,900
plants are like creating pool and then

00:31:10,680 --> 00:31:17,380
create the VIP M and then create member

00:31:13,900 --> 00:31:23,430
so I don't want to follow the arrived

00:31:17,380 --> 00:31:25,950
lifecycle yeah so but anyway the

00:31:23,430 --> 00:31:29,980
kubernetes just gone so I have to

00:31:25,950 --> 00:31:31,570
support the OpenStack lifecycle so she

00:31:29,980 --> 00:31:33,850
will have to support the full management

00:31:31,570 --> 00:31:38,740
VIP management member management seems

00:31:33,850 --> 00:31:41,500
like things like that and the most

00:31:38,740 --> 00:31:44,200
difficult part is that inside the

00:31:41,500 --> 00:31:47,200
OpenStack the VIP I mean the airpo IP

00:31:44,200 --> 00:31:50,470
should should have I can't have the

00:31:47,200 --> 00:31:53,530
floating IP - but my base model is based

00:31:50,470 --> 00:31:57,400
on the protein I before the help alright

00:31:53,530 --> 00:32:03,400
I'm in the VIP so if there's a

00:31:57,400 --> 00:32:05,710
completion yeah and so I try to using

00:32:03,400 --> 00:32:08,230
this what about just forget about open

00:32:05,710 --> 00:32:10,720
stair but the thing is that yeah open

00:32:08,230 --> 00:32:13,990
say is comparison legacy so I anyway I

00:32:10,720 --> 00:32:16,900
have to I don't want to making new cloud

00:32:13,990 --> 00:32:22,420
forward just just for my road molasses

00:32:16,900 --> 00:32:23,860
yeah yeah and the thing is safety the

00:32:22,420 --> 00:32:28,870
floating IP issue stairs or other issues

00:32:23,860 --> 00:32:32,200
to in an open state level and in an open

00:32:28,870 --> 00:32:35,410
state role rest API there's no route

00:32:32,200 --> 00:32:39,910
grand scale out so implementing it like

00:32:35,410 --> 00:32:41,200
when you're adding this IP to the member

00:32:39,910 --> 00:32:44,350
I mean the back end

00:32:41,200 --> 00:32:47,020
then is it Club it scaled out because

00:32:44,350 --> 00:32:47,530
you know it's a it's a Google the names

00:32:47,020 --> 00:32:50,790
I

00:32:47,530 --> 00:32:54,730
team is IP right so it you don't have to

00:32:50,790 --> 00:32:56,860
you don't need to this generally you

00:32:54,730 --> 00:32:58,640
don't using this IP to the back end or

00:32:56,860 --> 00:33:01,220
something like that so I

00:32:58,640 --> 00:33:05,360
pick this IP to the beginning members

00:33:01,220 --> 00:33:11,720
when the you just trying to add this IP

00:33:05,360 --> 00:33:13,690
it to scale out and the thing is that

00:33:11,720 --> 00:33:16,520
right

00:33:13,690 --> 00:33:20,720
when the VM is doubled I mean the abbey

00:33:16,520 --> 00:33:24,020
is doubled you can have the you you can

00:33:20,720 --> 00:33:26,270
triple the devil - right but inside of

00:33:24,020 --> 00:33:29,230
the open stack you can managing the same

00:33:26,270 --> 00:33:32,090
IP for the backend and the thing is that

00:33:29,230 --> 00:33:34,549
yeah scale you know should be done you

00:33:32,090 --> 00:33:39,410
know we automatic way like someone

00:33:34,549 --> 00:33:43,880
triggering or someone it scaled out

00:33:39,410 --> 00:33:46,760
again that's not possible and you have

00:33:43,880 --> 00:33:49,220
to support the SSA overloading inside of

00:33:46,760 --> 00:33:49,970
the HF proxy but the thing is the at

00:33:49,220 --> 00:33:55,760
that time

00:33:49,970 --> 00:34:01,820
OpenStack doesn't support their function

00:33:55,760 --> 00:34:04,270
in terms of their IP to entertain step

00:34:01,820 --> 00:34:09,730
yeah every cluster membership should

00:34:04,270 --> 00:34:13,820
added to the severe and thirteen is that

00:34:09,730 --> 00:34:16,639
the developer for the civil system is

00:34:13,820 --> 00:34:20,179
only me so I don't want to take all

00:34:16,639 --> 00:34:23,179
things like server api to the clan test

00:34:20,179 --> 00:34:28,399
k and the module yeah i really tired of

00:34:23,179 --> 00:34:30,109
it so yeah i anyway i have to change the

00:34:28,399 --> 00:34:31,730
mother because it had a really

00:34:30,109 --> 00:34:34,520
confliction with the open state

00:34:31,730 --> 00:34:36,619
lifecycle so but the good thing about

00:34:34,520 --> 00:34:37,940
the floating IP approaches that you

00:34:36,619 --> 00:34:41,000
don't have to thinking about the vm

00:34:37,940 --> 00:34:44,030
except to just float just answer of the

00:34:41,000 --> 00:34:50,260
vm you can use the the LP and the

00:34:44,030 --> 00:34:53,330
prototype lb and na t and TBH p yea but

00:34:50,260 --> 00:34:55,580
anyway i have to change it so i change

00:34:53,330 --> 00:34:59,840
it to the ball T and I see based design

00:34:55,580 --> 00:35:02,440
so yeah maybe there's some changes over

00:34:59,840 --> 00:35:02,440
there and

00:35:03,860 --> 00:35:11,680
yeah you have to now we have to taking

00:35:06,890 --> 00:35:16,670
care of the H a proxy p.m. - sorry yeah

00:35:11,680 --> 00:35:18,230
yeah tip is the mother - there's nothing

00:35:16,670 --> 00:35:22,550
different right

00:35:18,230 --> 00:35:25,250
just looking same ugly but if you look

00:35:22,550 --> 00:35:29,330
at clothes there's no team at here right

00:35:25,250 --> 00:35:32,030
so you don't have to do 2's reagent or

00:35:29,330 --> 00:35:35,390
the connected IP or at email anymore

00:35:32,030 --> 00:35:40,430
just you hit out another interface to

00:35:35,390 --> 00:35:45,320
the v vm right and now inside the VM you

00:35:40,430 --> 00:35:47,810
have to connect it the I connected the

00:35:45,320 --> 00:35:50,030
flow I mean the the deeper cable

00:35:47,810 --> 00:35:53,030
something like this so instead of the VM

00:35:50,030 --> 00:35:57,170
make sure there's a a the warmth and the

00:35:53,030 --> 00:35:59,870
another the VIP is originally have to

00:35:57,170 --> 00:36:03,020
assign that this this interface but we

00:35:59,870 --> 00:36:06,740
using the destructive in the 2's are of

00:36:03,020 --> 00:36:11,600
the the VM we have to delete the IP and

00:36:06,740 --> 00:36:16,520
set the VIP I mean the prototype alby's

00:36:11,600 --> 00:36:23,120
IP to the either one so it's working

00:36:16,520 --> 00:36:25,460
anyway right but I'll syrup the computer

00:36:23,120 --> 00:36:30,190
over the to our system the routing

00:36:25,460 --> 00:36:34,330
information except insane even though

00:36:30,190 --> 00:36:40,600
the first one is the VIP is coming from

00:36:34,330 --> 00:36:40,600
coming from connected metadata and now

00:36:42,280 --> 00:36:50,030
now it yeah it's a hoster outpaced it's

00:36:47,960 --> 00:36:54,340
totally different but in terms of the

00:36:50,030 --> 00:36:54,340
allowed information propagation is same

00:36:54,430 --> 00:37:00,860
and because just on there's only one

00:36:58,190 --> 00:37:05,090
developer for our Portis system so I

00:37:00,860 --> 00:37:08,200
have to minimize my code so and we I

00:37:05,090 --> 00:37:11,780
decided to using the VM Orchestrator

00:37:08,200 --> 00:37:14,330
instead and yeah inside of the open

00:37:11,780 --> 00:37:17,780
state there's a heap which is the taking

00:37:14,330 --> 00:37:20,900
part of the WM Orchestrator and it's

00:37:17,780 --> 00:37:24,680
based on the template and it provides

00:37:20,900 --> 00:37:28,490
the plugin like the instance volume and

00:37:24,680 --> 00:37:32,420
networking so with this with this heat

00:37:28,490 --> 00:37:35,120
input template you can creating the base

00:37:32,420 --> 00:37:38,390
element for our design I mean my design

00:37:35,120 --> 00:37:43,880
for the LP and it provides the stake is

00:37:38,390 --> 00:37:47,180
a management element and it provides the

00:37:43,880 --> 00:37:49,640
auto-scaling so when when you change it

00:37:47,180 --> 00:37:54,560
and making that group as a

00:37:49,640 --> 00:37:57,440
autoscale group you can have the you can

00:37:54,560 --> 00:38:00,320
have the URLs for the scaling and URL

00:37:57,440 --> 00:38:03,950
for the scale out and just connected to

00:38:00,320 --> 00:38:06,200
the some metric system or some trickin

00:38:03,950 --> 00:38:11,540
system test system just also

00:38:06,200 --> 00:38:14,810
automatically scaled in scaled out it

00:38:11,540 --> 00:38:17,450
also provides the software deployment so

00:38:14,810 --> 00:38:20,210
you don't you don't worry about the you

00:38:17,450 --> 00:38:26,140
don't have to worry about the writing

00:38:20,210 --> 00:38:29,720
the code for this deployed system and

00:38:26,140 --> 00:38:32,420
hit provide event to so when the cluster

00:38:29,720 --> 00:38:34,760
one of the cluster stack members just

00:38:32,420 --> 00:38:39,440
gone you have you can have the event

00:38:34,760 --> 00:38:42,920
from the system oh yeah that is the the

00:38:39,440 --> 00:38:46,190
diagram of hit it when you Jerry put

00:38:42,920 --> 00:38:50,150
template to the heat api and heat and

00:38:46,190 --> 00:38:52,280
this computer template based on the user

00:38:50,150 --> 00:38:56,480
input and in pushed to the

00:38:52,280 --> 00:38:59,000
and the rabbit and the heat engine take

00:38:56,480 --> 00:39:02,990
the user information template I just

00:38:59,000 --> 00:39:09,680
stack and deploying it to the the the VM

00:39:02,990 --> 00:39:14,090
so I write it down the I write down the

00:39:09,680 --> 00:39:18,910
older VMs and the making the martini and

00:39:14,090 --> 00:39:24,200
the deploying the HR proxy and the

00:39:18,910 --> 00:39:27,500
grouping it as a template and pushing it

00:39:24,200 --> 00:39:30,110
to the hit a API the output is the AV

00:39:27,500 --> 00:39:35,330
API which is the ischium it ultra API

00:39:30,110 --> 00:39:38,210
and the scale in scale out URL so yeah

00:39:35,330 --> 00:39:42,680
when when you had teeth that IPA that

00:39:38,210 --> 00:39:45,230
URL you can use the inside of our cloud

00:39:42,680 --> 00:39:46,880
there's the we call it there's a

00:39:45,230 --> 00:39:50,240
monitoring cloud which we call it cami

00:39:46,880 --> 00:39:53,150
so chemists it's for the every resource

00:39:50,240 --> 00:39:56,600
is not inside our data centers like

00:39:53,150 --> 00:40:00,620
physical server virtual server and like

00:39:56,600 --> 00:40:09,680
the public cloud in AWS and the open

00:40:00,620 --> 00:40:12,020
stacks the BMI p2 so yeah to the 2d cami

00:40:09,680 --> 00:40:14,630
you have to you can set the Alamein

00:40:12,020 --> 00:40:19,460
triggering based on this ratio holding

00:40:14,630 --> 00:40:21,770
the URL so when the VMS scipio or the vm

00:40:19,460 --> 00:40:25,210
memory is really high and the suite and

00:40:21,770 --> 00:40:28,150
you can set the Frizzle for that and

00:40:25,210 --> 00:40:33,940
putting the URLs for the triggering and

00:40:28,150 --> 00:40:38,900
it's just scaled in scale out right yeah

00:40:33,940 --> 00:40:40,430
so maybe this was just like yeah from

00:40:38,900 --> 00:40:43,550
the performance point of view nothing

00:40:40,430 --> 00:40:47,060
changed right nothing never changes but

00:40:43,550 --> 00:40:51,320
the actually deep severe engine code is

00:40:47,060 --> 00:40:53,690
more than 4,000 plus it comes to 400

00:40:51,320 --> 00:40:57,470
when I using the heat template based one

00:40:53,690 --> 00:41:00,110
and the after model changes yeah to

00:40:57,470 --> 00:41:02,890
change the tape model based on rewriting

00:41:00,110 --> 00:41:05,130
the key template are using three days

00:41:02,890 --> 00:41:09,059
it's really simple right

00:41:05,130 --> 00:41:10,890
so so and if you have a really good

00:41:09,059 --> 00:41:14,029
cloud it's really easy to make the new

00:41:10,890 --> 00:41:16,410
network function based on the the other

00:41:14,029 --> 00:41:18,869
the other languages or the other

00:41:16,410 --> 00:41:22,799
component things like that and actually

00:41:18,869 --> 00:41:28,049
this our better system where we're still

00:41:22,799 --> 00:41:31,049
trying to stitching it with the our the

00:41:28,049 --> 00:41:32,000
legacy container cursor which is me just

00:41:31,049 --> 00:41:42,119
yeah right

00:41:32,000 --> 00:41:44,220
okay so times up the Q&A will have to be

00:41:42,119 --> 00:41:46,339
outside because there is a next talk

00:41:44,220 --> 00:41:49,339
waiting thank you Andrew

00:41:46,339 --> 00:41:49,339

YouTube URL: https://www.youtube.com/watch?v=C6nKSkuDD_0


