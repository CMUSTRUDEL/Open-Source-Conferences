Title: Arachne: Large Scale Data Centre SDN Testing
Publication date: 2018-03-14
Playlist: Netdev 2.2
Description: 
	Speaker: Alexander Aring, Jamal Hadi Salim
Friday November 08th, 2017 
Seoul, Korea
https://www.netdevconf.org/2.2/session.html?aring-arachne-talk
Captions: 
	00:00:01,209 --> 00:00:07,749
so we can test large-scale system at

00:00:05,080 --> 00:00:10,090
least system level TC testing if you're

00:00:07,749 --> 00:00:12,100
aware of the the kernel has something

00:00:10,090 --> 00:00:15,490
called TDC now that you can when you

00:00:12,100 --> 00:00:17,770
submit patches you run this TCA tests

00:00:15,490 --> 00:00:19,960
and you get if you broke something

00:00:17,770 --> 00:00:22,060
the intention is eventually if you break

00:00:19,960 --> 00:00:25,260
something we'll find you'll find out you

00:00:22,060 --> 00:00:29,320
want just submit patches without testing

00:00:25,260 --> 00:00:31,840
so the Aegean is I could do a few

00:00:29,320 --> 00:00:35,170
minutes of class that there's a who

00:00:31,840 --> 00:00:38,920
knows what a closed Network is okay so

00:00:35,170 --> 00:00:41,440
there's about maybe 10% I'll go very

00:00:38,920 --> 00:00:43,780
quickly okay who knows what Sdn is I'm

00:00:41,440 --> 00:00:47,829
sorry I have to use such vaporware on

00:00:43,780 --> 00:00:51,430
market ish yes and although I work in

00:00:47,829 --> 00:00:53,579
that space so in the beginning there was

00:00:51,430 --> 00:00:55,210
a phone network they the phone network

00:00:53,579 --> 00:00:57,730
the bell heads

00:00:55,210 --> 00:01:00,399
created everything you guys know okay if

00:00:57,730 --> 00:01:02,320
you look at the original telephone

00:01:00,399 --> 00:01:04,420
switch it's actually what you would call

00:01:02,320 --> 00:01:15,780
a bridge these days how do you turn this

00:01:04,420 --> 00:01:15,780
on is it this button okay the pointer

00:01:15,960 --> 00:01:21,310
top one okay so this was a phone switch

00:01:19,479 --> 00:01:22,659
okay you may dial the anything I want to

00:01:21,310 --> 00:01:24,970
talk to the undertaker one of these

00:01:22,659 --> 00:01:28,869
ladies picks up the phone hooks you up

00:01:24,970 --> 00:01:31,000
with the Undertaker and and you talk to

00:01:28,869 --> 00:01:33,520
them speak to the Undertaker so humans

00:01:31,000 --> 00:01:38,110
were actually the Linux were bridging

00:01:33,520 --> 00:01:40,689
calls then about 1892 this dude almond

00:01:38,110 --> 00:01:42,520
Stroger found out that one of these

00:01:40,689 --> 00:01:45,939
ladies was married to another undertaker

00:01:42,520 --> 00:01:47,560
and she was routing the cause whenever

00:01:45,939 --> 00:01:50,530
about anybody called for an undertaker

00:01:47,560 --> 00:01:53,020
to her husband's business so he got

00:01:50,530 --> 00:01:54,340
pissed off it's a it's a good story I

00:01:53,020 --> 00:01:56,820
don't know how many people are dying and

00:01:54,340 --> 00:01:59,439
at that time in Rochester in New York I

00:01:56,820 --> 00:02:03,070
think it's around Rochester where he

00:01:59,439 --> 00:02:05,200
came from but the automated switch got

00:02:03,070 --> 00:02:10,419
created at that time humans were

00:02:05,200 --> 00:02:13,870
replaced in the in the 50s Charles Claus

00:02:10,419 --> 00:02:15,069
created this network that you see down

00:02:13,870 --> 00:02:16,480
here this is a phone

00:02:15,069 --> 00:02:20,290
right here and you can call another

00:02:16,480 --> 00:02:24,010
phone through a series of bridges or

00:02:20,290 --> 00:02:25,659
switches and he guaranteed that certain

00:02:24,010 --> 00:02:27,010
arrangements of this closed network this

00:02:25,659 --> 00:02:29,500
is called a three-stage closed Network

00:02:27,010 --> 00:02:32,220
will guarantee that at any time if this

00:02:29,500 --> 00:02:36,370
guy's available you can call them right

00:02:32,220 --> 00:02:39,510
in the 70s a lot of so at that time the

00:02:36,370 --> 00:02:42,159
control and data paths were conjoined

00:02:39,510 --> 00:02:44,200
then a lot of what we call phone free

00:02:42,159 --> 00:02:47,290
cos right now very interesting

00:02:44,200 --> 00:02:51,159
characters some of them could whistle

00:02:47,290 --> 00:02:53,500
the perfect 2600 Hertz some used cereal

00:02:51,159 --> 00:02:54,939
box whistles it ranges all the way up to

00:02:53,500 --> 00:02:58,840
Steve Jobs trying to make money out of

00:02:54,939 --> 00:03:00,849
that in the in 1975 the phone companies

00:02:58,840 --> 00:03:04,780
created ss7 which separated data paths

00:03:00,849 --> 00:03:05,980
from control the paper is going to say a

00:03:04,780 --> 00:03:07,329
little bit more of this I don't spend

00:03:05,980 --> 00:03:09,159
too much time on this what I'd like to

00:03:07,329 --> 00:03:11,919
do is to visit what a closed network

00:03:09,159 --> 00:03:14,409
looks like you have a rack of servers

00:03:11,919 --> 00:03:16,120
which is connected to what is known as

00:03:14,409 --> 00:03:18,400
the top of rack sometimes a leaf switch

00:03:16,120 --> 00:03:20,470
which is then connected to a spine

00:03:18,400 --> 00:03:23,530
switch now the call switches but they

00:03:20,470 --> 00:03:25,690
could be layer three routers and the

00:03:23,530 --> 00:03:27,519
idea is you can go from in a three-stage

00:03:25,690 --> 00:03:31,000
close network you can go from any server

00:03:27,519 --> 00:03:33,310
to any server in three steps one you go

00:03:31,000 --> 00:03:38,440
here one two three and you you can you

00:03:33,310 --> 00:03:40,419
can reach anybody what's interesting

00:03:38,440 --> 00:03:42,250
about this architecture is that I can

00:03:40,419 --> 00:03:43,180
start with two servers and then at some

00:03:42,250 --> 00:03:45,129
day I decide I want to add another

00:03:43,180 --> 00:03:47,079
server because I'm overloaded I can

00:03:45,129 --> 00:03:47,650
build this server some rack somewhere

00:03:47,079 --> 00:03:50,379
else

00:03:47,650 --> 00:03:53,349
will it in here connect the cables power

00:03:50,379 --> 00:03:55,599
it up boom it works right that's what's

00:03:53,349 --> 00:03:57,250
interesting so you know a design in

00:03:55,599 --> 00:03:59,500
Arachne that was an interesting feature

00:03:57,250 --> 00:04:02,680
we were interested in so we would like

00:03:59,500 --> 00:04:07,030
to emulate this we borrow this idea as

00:04:02,680 --> 00:04:08,650
part of the test all right likewise if

00:04:07,030 --> 00:04:10,510
you build a five stage class network

00:04:08,650 --> 00:04:13,689
where you can get from any server to any

00:04:10,510 --> 00:04:15,159
server in five hops you can build what's

00:04:13,689 --> 00:04:18,909
known as a port which stands for point

00:04:15,159 --> 00:04:22,509
of deployment I think and you can

00:04:18,909 --> 00:04:24,539
actually build this out in the wild will

00:04:22,509 --> 00:04:27,789
it into or ship it into a container

00:04:24,539 --> 00:04:28,630
attract connect cables you send a

00:04:27,789 --> 00:04:31,120
handyman

00:04:28,630 --> 00:04:33,820
power this thing up that's the theory

00:04:31,120 --> 00:04:36,580
right and we're also interested in being

00:04:33,820 --> 00:04:41,530
able to build a port and at runtime just

00:04:36,580 --> 00:04:43,540
attach it to our test tool pods this is

00:04:41,530 --> 00:04:45,490
how a port looks like here's HP shipping

00:04:43,540 --> 00:04:47,710
a pod you've got many type of vendors

00:04:45,490 --> 00:04:50,020
including I was surprised to see SGI

00:04:47,710 --> 00:04:53,800
still around they're shipping pods

00:04:50,020 --> 00:04:56,830
they'll ship a port of which looks like

00:04:53,800 --> 00:05:02,280
that this is a port right it's carried

00:04:56,830 --> 00:05:05,500
in a truck oh I see but it still says GI

00:05:02,280 --> 00:05:06,400
so HG is a part is a part of HP now

00:05:05,500 --> 00:05:08,080
anyway

00:05:06,400 --> 00:05:10,330
what is the software-defined network

00:05:08,080 --> 00:05:12,610
well you separate the control from the

00:05:10,330 --> 00:05:15,070
data is where the data this green part

00:05:12,610 --> 00:05:17,680
looks like that what you're not seeing

00:05:15,070 --> 00:05:19,960
here is each of these things actually

00:05:17,680 --> 00:05:23,020
has a spatial management port most of

00:05:19,960 --> 00:05:25,000
them do one or two and to borrow from

00:05:23,020 --> 00:05:27,460
our friends at cumulus this is what they

00:05:25,000 --> 00:05:29,050
would shape you see that there's a if

00:05:27,460 --> 00:05:32,920
you look at any of these switches here

00:05:29,050 --> 00:05:35,890
you have a management port so this goes

00:05:32,920 --> 00:05:37,690
through the data path to come back here

00:05:35,890 --> 00:05:39,580
you're going through the data path

00:05:37,690 --> 00:05:43,960
that's east-west and then we have the

00:05:39,580 --> 00:05:47,290
north-south so that part here is the

00:05:43,960 --> 00:05:49,870
north-south this is the east-west okay

00:05:47,290 --> 00:05:52,060
so we use the management port so what we

00:05:49,870 --> 00:05:55,540
try to do is to emulate exactly the

00:05:52,060 --> 00:05:58,060
setup you know in our environment I'm

00:05:55,540 --> 00:06:02,920
gonna introduce what Arachne does so it

00:05:58,060 --> 00:06:05,350
is mostly interested in this piece we've

00:06:02,920 --> 00:06:07,240
been trying to test this but for TC we

00:06:05,350 --> 00:06:11,980
will also test this part right for TDC

00:06:07,240 --> 00:06:17,380
when we integrate this into TDC and we

00:06:11,980 --> 00:06:19,690
want to test from tens to hundreds of

00:06:17,380 --> 00:06:23,470
thousands of of these devices but we

00:06:19,690 --> 00:06:26,890
can't afford the hardware so we want to

00:06:23,470 --> 00:06:28,810
do it on the cheap in terms of CPU in

00:06:26,890 --> 00:06:31,570
terms of memory that was our intention

00:06:28,810 --> 00:06:33,070
initially and we picked the close

00:06:31,570 --> 00:06:34,930
architecture there's so many way think

00:06:33,070 --> 00:06:38,050
so many ways you could connect this but

00:06:34,930 --> 00:06:39,250
if you used the close network well then

00:06:38,050 --> 00:06:40,450
you don't have to worry about how things

00:06:39,250 --> 00:06:42,340
are connected you just plug it in

00:06:40,450 --> 00:06:44,470
everybody knows at least more

00:06:42,340 --> 00:06:47,790
data centers how what a closed network

00:06:44,470 --> 00:06:50,470
is and you could you know that that

00:06:47,790 --> 00:06:52,150
little design principle I spoke of you

00:06:50,470 --> 00:06:54,130
could you could pull in Iraq two days

00:06:52,150 --> 00:06:57,190
later we could pull in a port a couple

00:06:54,130 --> 00:06:58,720
days later and of course we wanted to

00:06:57,190 --> 00:07:00,340
reuse or create new open-source

00:06:58,720 --> 00:07:03,220
components

00:07:00,340 --> 00:07:07,410
it must be Linux a net dev based nothing

00:07:03,220 --> 00:07:09,810
propriety and yes we're Linux bigots so

00:07:07,410 --> 00:07:14,050
we tried a few things

00:07:09,810 --> 00:07:18,400
cumulus has something called via V X and

00:07:14,050 --> 00:07:20,580
on an eight gig useful but in an eight

00:07:18,400 --> 00:07:23,650
gig machine we were only able to build

00:07:20,580 --> 00:07:27,670
one of these can you go back to the

00:07:23,650 --> 00:07:30,330
single port so well they set up default

00:07:27,670 --> 00:07:33,430
set up has I think a couple of spines

00:07:30,330 --> 00:07:36,490
four arcs each with that one seven and

00:07:33,430 --> 00:07:39,100
that killed our eight gig of ram so we

00:07:36,490 --> 00:07:41,260
just we like I said we want to do

00:07:39,100 --> 00:07:42,790
hundreds of thousands of things we can

00:07:41,260 --> 00:07:46,750
only as a small company you know for ten

00:07:42,790 --> 00:07:49,330
machines VMs were just out of the

00:07:46,750 --> 00:07:50,980
picture next we looked at dock I think

00:07:49,330 --> 00:07:53,800
is over a little bit over engineered

00:07:50,980 --> 00:07:55,570
it's so much crap we don't need in there

00:07:53,800 --> 00:07:58,600
so we dropped it very quickly but if

00:07:55,570 --> 00:07:59,950
somebody is interested we can talk we

00:07:58,600 --> 00:08:01,690
found this thing called mini net it was

00:07:59,950 --> 00:08:06,550
pointed to us it looked very promising

00:08:01,690 --> 00:08:09,340
slight weight but it now got it's too

00:08:06,550 --> 00:08:10,870
tied to all open flow and obvious and we

00:08:09,340 --> 00:08:13,150
were trying to be independent of the a

00:08:10,870 --> 00:08:15,310
of the Sdn solution we believe anybody

00:08:13,150 --> 00:08:18,850
with whatever Sdn solution they have

00:08:15,310 --> 00:08:21,670
should be able to plug in their solution

00:08:18,850 --> 00:08:24,370
to test and they had this propriety

00:08:21,670 --> 00:08:26,260
topology definitions one thing one thing

00:08:24,370 --> 00:08:28,840
we liked about the cumulus VX is they

00:08:26,260 --> 00:08:30,280
use dot that was inspiring to us by the

00:08:28,840 --> 00:08:34,090
way thank you

00:08:30,280 --> 00:08:35,770
the other thing is as I keep talking

00:08:34,090 --> 00:08:38,710
about this you'll see that

00:08:35,770 --> 00:08:40,240
Arachne has two parts to it one is sort

00:08:38,710 --> 00:08:41,800
of what we call the factory mode where

00:08:40,240 --> 00:08:46,300
you actually build the rack or the port

00:08:41,800 --> 00:08:49,180
before you ship it and that part we had

00:08:46,300 --> 00:08:51,160
thought we could use ansible Etan we

00:08:49,180 --> 00:08:53,710
were not experts on ansible so somebody

00:08:51,160 --> 00:08:55,360
could come and talk to us after this and

00:08:53,710 --> 00:08:56,250
the problem was this thing called

00:08:55,360 --> 00:08:59,620
playbook

00:08:56,250 --> 00:09:02,080
inventories we want to be able to on the

00:08:59,620 --> 00:09:04,570
fly a dirac or a pod and it became a bit

00:09:02,080 --> 00:09:07,210
of a challenge and it introduced more

00:09:04,570 --> 00:09:09,310
dependencies as you'll see when Alex

00:09:07,210 --> 00:09:10,770
gives a demo with very little appendices

00:09:09,310 --> 00:09:14,470
we have dependence was an IP route to

00:09:10,770 --> 00:09:17,110
probably almost nothing else all right

00:09:14,470 --> 00:09:20,740
so yeah here they are the components so

00:09:17,110 --> 00:09:22,480
during the the time we working in

00:09:20,740 --> 00:09:24,510
Arachne we had to patch IP route to the

00:09:22,480 --> 00:09:27,490
Linux kind of a couple of times Python

00:09:24,510 --> 00:09:29,950
which is dot file and we use key mu at

00:09:27,490 --> 00:09:37,870
the moment to build ports so each port

00:09:29,950 --> 00:09:39,850
is one VM ok so design decisions at some

00:09:37,870 --> 00:09:42,460
point we decided that look we don't want

00:09:39,850 --> 00:09:45,430
to reconfigure this in any way or shape

00:09:42,460 --> 00:09:47,410
right so we looked back at our friend

00:09:45,430 --> 00:09:49,000
the bell our friends the Bell heads they

00:09:47,410 --> 00:09:51,010
have this thing called geographical

00:09:49,000 --> 00:09:52,570
addressing of geographical numbering

00:09:51,010 --> 00:09:55,450
they're in fact have a standard called a

00:09:52,570 --> 00:09:57,700
164 where if I call six one three five

00:09:55,450 --> 00:10:00,460
five five I know I'm calling Ottawa

00:09:57,700 --> 00:10:02,860
Canada country code one area code six

00:10:00,460 --> 00:10:04,360
one three zero five five five is

00:10:02,860 --> 00:10:06,970
probably my neighborhood where I live

00:10:04,360 --> 00:10:09,250
and then the list grass for you to will

00:10:06,970 --> 00:10:12,190
probably be able to identify where I

00:10:09,250 --> 00:10:14,770
live so we decided we want to adapt this

00:10:12,190 --> 00:10:16,570
for automation purposes it helps us to

00:10:14,770 --> 00:10:19,360
be able to build that rack and just plug

00:10:16,570 --> 00:10:22,900
it in and everything works right so we

00:10:19,360 --> 00:10:26,860
took if you look at can you go back to

00:10:22,900 --> 00:10:29,320
the triple the port version yeah that so

00:10:26,860 --> 00:10:33,610
we could say this is a country it's a

00:10:29,320 --> 00:10:35,620
zone that is probably a city and so the

00:10:33,610 --> 00:10:38,170
country code we mapped it to a zone ID

00:10:35,620 --> 00:10:39,880
so you'll have many of these you come

00:10:38,170 --> 00:10:43,510
back from either the big bad internet or

00:10:39,880 --> 00:10:46,690
some other zone the area code we mapped

00:10:43,510 --> 00:10:48,040
it to the port a subscriber number well

00:10:46,690 --> 00:10:49,930
the subscribe is one of these servers

00:10:48,040 --> 00:10:52,570
right so we took these addresses

00:10:49,930 --> 00:10:54,850
so why geographical addressing it

00:10:52,570 --> 00:10:56,860
because it simplifies automation like I

00:10:54,850 --> 00:10:59,920
said we could build these things on the

00:10:56,860 --> 00:11:02,650
fly outside will them in connect cables

00:10:59,920 --> 00:11:05,710
cables in this case our V eats and boom

00:11:02,650 --> 00:11:07,480
just works okay simplifies debugging if

00:11:05,710 --> 00:11:10,150
I'm running TCP dump and I look at the

00:11:07,480 --> 00:11:11,830
IP address I can tell you exactly where

00:11:10,150 --> 00:11:13,570
a specific IP address is coming from I

00:11:11,830 --> 00:11:16,780
can tell the girl walk don't walk down

00:11:13,570 --> 00:11:19,030
this hallway turn left rack number three

00:11:16,780 --> 00:11:21,880
port number five that's where this is

00:11:19,030 --> 00:11:23,530
coming from right simplify switching

00:11:21,880 --> 00:11:26,530
routing as well as I hope will convince

00:11:23,530 --> 00:11:28,750
you and they very much simplifies policy

00:11:26,530 --> 00:11:33,580
management what we do is we add 3 or 4

00:11:28,750 --> 00:11:36,910
TC rules and we're set right for

00:11:33,580 --> 00:11:39,400
isolation I'm not going to spend a lot

00:11:36,910 --> 00:11:42,700
of time on this but this is this has

00:11:39,400 --> 00:11:45,910
been evolving but we also give MAC

00:11:42,700 --> 00:11:48,700
addresses geographical addressing we

00:11:45,910 --> 00:11:51,010
also give IP addresses geographical

00:11:48,700 --> 00:11:52,450
addressing so if you look at the market

00:11:51,010 --> 00:11:54,370
risk I think this has changed now

00:11:52,450 --> 00:11:56,500
correct Alex we have only one byte

00:11:54,370 --> 00:11:59,170
that's left and we use the other two

00:11:56,500 --> 00:12:02,560
bytes in the Oh your eye we encode the

00:11:59,170 --> 00:12:05,200
zone ID the port ID the role which tells

00:12:02,560 --> 00:12:07,330
you what there's a spine leave the

00:12:05,200 --> 00:12:09,490
direction which is useful for finding

00:12:07,330 --> 00:12:11,200
out if the port is in this going this

00:12:09,490 --> 00:12:13,780
way or that way right is it going

00:12:11,200 --> 00:12:15,970
towards the power-down and the port ID

00:12:13,780 --> 00:12:17,680
will so you look at the MAC address you

00:12:15,970 --> 00:12:20,560
can tell right where is this thing

00:12:17,680 --> 00:12:22,330
coming from if you look at the switch IP

00:12:20,560 --> 00:12:24,730
addresses if you are doing routing then

00:12:22,330 --> 00:12:29,080
the next hop IP addresses all start with

00:12:24,730 --> 00:12:32,200
169 254 and read the paper or come and

00:12:29,080 --> 00:12:35,590
talk to us after we also have naming

00:12:32,200 --> 00:12:38,260
convention for the devices so all hosts

00:12:35,590 --> 00:12:39,790
or Savas start with an H underscore R

00:12:38,260 --> 00:12:43,150
which represent the rack IDP

00:12:39,790 --> 00:12:45,570
representing the port ID z representing

00:12:43,150 --> 00:12:47,830
the zone ID and the Leafs start with L

00:12:45,570 --> 00:12:50,260
you'll see this in the demo the spines

00:12:47,830 --> 00:13:00,490
all start with an S the zones start with

00:12:50,260 --> 00:13:01,960
that ok at one time so we rerun Arachne

00:13:00,490 --> 00:13:03,580
in two modes one which is which call the

00:13:01,960 --> 00:13:07,690
l2 mode you just plug it in and things

00:13:03,580 --> 00:13:10,660
just start working it l2 has issues so

00:13:07,690 --> 00:13:13,420
what to each of this server what

00:13:10,660 --> 00:13:16,560
disappears of what all of that appears

00:13:13,420 --> 00:13:19,360
as here so if you cut it right there

00:13:16,560 --> 00:13:21,990
these are switches but what this guys

00:13:19,360 --> 00:13:23,980
see is it's equivalent to having

00:13:21,990 --> 00:13:27,370
thousands of port or whatever

00:13:23,980 --> 00:13:29,590
many ports here is this is like a big

00:13:27,370 --> 00:13:31,270
switch right it's as if you connected

00:13:29,590 --> 00:13:35,200
every server to a port that's sitting in

00:13:31,270 --> 00:13:37,300
this magical switch here right that's

00:13:35,200 --> 00:13:39,700
how it looks like if someone Arps

00:13:37,300 --> 00:13:42,790
everybody sees the app that's that's a

00:13:39,700 --> 00:13:44,650
shortcoming and of course it's because

00:13:42,790 --> 00:13:47,710
it's one period a big broadcast domain

00:13:44,650 --> 00:13:48,820
there's loops so we had to run STP so

00:13:47,710 --> 00:13:49,380
again this is the links preach

00:13:48,820 --> 00:13:53,830
everywhere

00:13:49,380 --> 00:13:57,400
turn on STP yeah there's a challenge

00:13:53,830 --> 00:13:58,990
because the FDB tables people who know

00:13:57,400 --> 00:14:02,080
the bridge they have to be table starts

00:13:58,990 --> 00:14:05,830
growing and the ARP tables are growing

00:14:02,080 --> 00:14:09,100
but we probably don't care no testing ok

00:14:05,830 --> 00:14:10,900
so it's good enough for our testing and

00:14:09,100 --> 00:14:14,710
if you look if you think about it even

00:14:10,900 --> 00:14:16,930
in deployments of real hardware how big

00:14:14,710 --> 00:14:18,340
is a mock Lal to mark you know hundreds

00:14:16,930 --> 00:14:23,260
a couple of hundred thousand these days

00:14:18,340 --> 00:14:25,270
is common huh more so who cares I'll

00:14:23,260 --> 00:14:26,650
fill up the FGB table I have a hundred

00:14:25,270 --> 00:14:29,170
thousand it means I need a hundred

00:14:26,650 --> 00:14:31,300
thousand servers to fill up all those

00:14:29,170 --> 00:14:33,790
tables the problem the challenge is

00:14:31,300 --> 00:14:35,260
still are but if you think about it ARP

00:14:33,790 --> 00:14:39,970
what you're generating like a hundred a

00:14:35,260 --> 00:14:42,310
second so the largest data center seen

00:14:39,970 --> 00:14:46,210
was one that LinkedIn published they

00:14:42,310 --> 00:14:49,960
have 96 sir racks servers barak right so

00:14:46,210 --> 00:14:54,610
if 96 by 16 and they have 60 of these

00:14:49,960 --> 00:14:59,920
ports not a big deal yeah you'll get

00:14:54,610 --> 00:15:01,450
Arps so so that's beauty of l2 it's good

00:14:59,920 --> 00:15:03,040
enough for us but because there's a lot

00:15:01,450 --> 00:15:05,440
of people like our friends at cumulus

00:15:03,040 --> 00:15:12,460
lab they're layer 3 so we we make them

00:15:05,440 --> 00:15:15,300
happy with l3 so in l3 what we do is we

00:15:12,460 --> 00:15:17,890
use each of these things is now a router

00:15:15,300 --> 00:15:21,400
right each of those essentially is a

00:15:17,890 --> 00:15:22,720
router in from the server side to to the

00:15:21,400 --> 00:15:25,420
outside we have ecmp

00:15:22,720 --> 00:15:27,490
equal cost multi path so a packet comes

00:15:25,420 --> 00:15:29,920
in here depending on what is simply

00:15:27,490 --> 00:15:31,570
logic at this router here it will select

00:15:29,920 --> 00:15:32,980
one of the spines and likewise these

00:15:31,570 --> 00:15:36,760
guys will select one of the zone

00:15:32,980 --> 00:15:37,710
switches so the address scheme I showed

00:15:36,760 --> 00:15:41,290
earlier on

00:15:37,710 --> 00:15:43,300
is used from the outside as well you

00:15:41,290 --> 00:15:48,250
know you can look at you can select any

00:15:43,300 --> 00:15:51,550
of the spines ecmp downwards all the way

00:15:48,250 --> 00:15:55,270
to the to the host right

00:15:51,550 --> 00:15:57,190
and it's totally static routing one of

00:15:55,270 --> 00:16:01,770
the challenges that we had with this was

00:15:57,190 --> 00:16:07,450
at some point I was very concerned that

00:16:01,770 --> 00:16:10,360
so we use V eath and one of these tools

00:16:07,450 --> 00:16:13,660
were testing with went up here in the

00:16:10,360 --> 00:16:15,190
spine and killed a via the link on this

00:16:13,660 --> 00:16:17,230
side

00:16:15,190 --> 00:16:19,180
the event was generated here so if

00:16:17,230 --> 00:16:22,260
you're running IP monitor here you'll

00:16:19,180 --> 00:16:25,620
see the link going down but route

00:16:22,260 --> 00:16:28,180
packets kept sending there but then

00:16:25,620 --> 00:16:30,700
David Arendt sent me a patch over the

00:16:28,180 --> 00:16:32,320
week during this week in the net Kampf

00:16:30,700 --> 00:16:33,820
but now we're discovering we probably

00:16:32,320 --> 00:16:37,990
don't need his patch anymore but we

00:16:33,820 --> 00:16:40,480
haven't tested V's if you bring down a

00:16:37,990 --> 00:16:42,700
operationally bring down a port if you

00:16:40,480 --> 00:16:46,000
bring any of these ports and ecmp is

00:16:42,700 --> 00:16:47,980
selecting that path ya bring bring a

00:16:46,000 --> 00:16:50,620
port on the spine down that's connected

00:16:47,980 --> 00:16:54,700
to a leaf he simply was still selecting

00:16:50,620 --> 00:16:57,370
that no no it doesn't matter it doesn't

00:16:54,700 --> 00:16:59,830
matter step we'd study crowding or not

00:16:57,370 --> 00:17:00,580
you should work there out is next top is

00:16:59,830 --> 00:17:05,140
marked as dead

00:17:00,580 --> 00:17:08,530
we should yes so anyways for in order to

00:17:05,140 --> 00:17:10,060
show the demo so I'm gonna go into what

00:17:08,530 --> 00:17:11,290
Arachne does it has two parts like I

00:17:10,060 --> 00:17:13,300
said one is the one that builds the

00:17:11,290 --> 00:17:15,940
fabric or the factory mode part where

00:17:13,300 --> 00:17:18,400
you build things and then the other part

00:17:15,940 --> 00:17:23,380
is you say we've and we've basically

00:17:18,400 --> 00:17:25,510
deploys it all right this is our acne

00:17:23,380 --> 00:17:27,550
looks like in theory I'm just gonna show

00:17:25,510 --> 00:17:29,350
one port here multiple poles as you can

00:17:27,550 --> 00:17:31,770
see I'm sorry this is pod number two

00:17:29,350 --> 00:17:34,060
multiple racks all these are containers

00:17:31,770 --> 00:17:36,130
right there are namespace containers

00:17:34,060 --> 00:17:38,740
this is a container of the Linux bridge

00:17:36,130 --> 00:17:40,660
unit a container the Linux bridge on it

00:17:38,740 --> 00:17:43,900
so these are this is sort of a rack with

00:17:40,660 --> 00:17:45,520
as many servers as you want connected to

00:17:43,900 --> 00:17:49,320
a single life switch at the moment which

00:17:45,520 --> 00:17:51,220
connects and these are the eats right

00:17:49,320 --> 00:17:53,590
then each of this

00:17:51,220 --> 00:17:57,690
hosts and spines is connected to one big

00:17:53,590 --> 00:17:57,690
freaking management bridge

00:18:00,159 --> 00:18:08,730
Arachne has a workflow which is you

00:18:06,490 --> 00:18:11,440
first design your network in English

00:18:08,730 --> 00:18:14,080
nothing fancy you're required to

00:18:11,440 --> 00:18:16,179
understand a little bit of what what a

00:18:14,080 --> 00:18:17,740
closed Network means you know what you

00:18:16,179 --> 00:18:20,200
know what a port is what is on what a

00:18:17,740 --> 00:18:21,280
spine what a rack means those are the

00:18:20,200 --> 00:18:23,440
those are requirements you have to

00:18:21,280 --> 00:18:27,820
understand what that means and then you

00:18:23,440 --> 00:18:29,440
proceed to review your design until

00:18:27,820 --> 00:18:31,780
you're happy and then you say weave and

00:18:29,440 --> 00:18:37,659
when you weave it it goes over and

00:18:31,780 --> 00:18:39,190
deploys it right okay so okay I guess

00:18:37,659 --> 00:18:40,480
this is this is the part where you

00:18:39,190 --> 00:18:41,980
describe these are the parameters you

00:18:40,480 --> 00:18:44,320
use to describe your network so you say

00:18:41,980 --> 00:18:47,650
how many zones do you need

00:18:44,320 --> 00:18:48,960
we support only one at the moment how

00:18:47,650 --> 00:18:52,600
many ports you want

00:18:48,960 --> 00:18:56,409
how many spines per port how many racks

00:18:52,600 --> 00:18:57,970
hosts Parag at the moment we only

00:18:56,409 --> 00:18:59,620
support one single leaf but it's not a

00:18:57,970 --> 00:19:00,940
challenge to do multiple it's just we've

00:18:59,620 --> 00:19:01,630
never needed it right we're running this

00:19:00,940 --> 00:19:03,039
in software

00:19:01,630 --> 00:19:05,289
you're not like really deploying this in

00:19:03,039 --> 00:19:06,909
hardware although there's absolutely no

00:19:05,289 --> 00:19:09,010
reason why you can take that design the

00:19:06,909 --> 00:19:15,970
output of that design and go and

00:19:09,010 --> 00:19:17,590
configure real Hardware right so this is

00:19:15,970 --> 00:19:21,340
so I'm gonna probably I'm gonna give a

00:19:17,590 --> 00:19:23,010
chance to to your Alex maybe you can add

00:19:21,340 --> 00:19:26,470
this under will I'll come back to mine

00:19:23,010 --> 00:19:30,190
so you can show the design part first

00:19:26,470 --> 00:19:32,679
maybe right how you design and then

00:19:30,190 --> 00:19:37,150
we'll go back so you can you show this

00:19:32,679 --> 00:19:38,980
part probably yeah so we just talked

00:19:37,150 --> 00:19:41,710
about this while he was sitting there

00:19:38,980 --> 00:19:44,289
with me I hope it's I hope the demo

00:19:41,710 --> 00:19:46,950
Kings are with the demo gods are gonna

00:19:44,289 --> 00:19:46,950
help us out today

00:19:47,669 --> 00:19:52,960
yeah but Jamar already mentioned is that

00:19:51,789 --> 00:19:57,159
we have to panic

00:19:52,960 --> 00:20:01,059
face in the first face it's a design

00:19:57,159 --> 00:20:04,450
face and for example I started Arachne

00:20:01,059 --> 00:20:05,210
yesterday share and we can type some

00:20:04,450 --> 00:20:08,930
commands

00:20:05,210 --> 00:20:12,830
inside for example show and you can see

00:20:08,930 --> 00:20:15,740
for example the so Noddy much Jamar

00:20:12,830 --> 00:20:27,220
mentioned the number of sound switches

00:20:15,740 --> 00:20:36,220
which are the top top switches and then

00:20:27,220 --> 00:20:36,220
also the pot persone spines Airport and

00:20:36,340 --> 00:20:42,940
the wax paper pot and the number of

00:20:39,950 --> 00:20:48,110
servers per rack and we have currently a

00:20:42,940 --> 00:20:50,870
very simple switch to turn the layer 3

00:20:48,110 --> 00:20:54,530
mode on which means that the switches

00:20:50,870 --> 00:20:58,580
are artists and they are - to switch

00:20:54,530 --> 00:21:00,980
between layers V and there - so if you

00:20:58,580 --> 00:21:04,460
don't like this design then you can

00:21:00,980 --> 00:21:11,120
change it yeah

00:21:04,460 --> 00:21:15,890
you can type view and this will open dot

00:21:11,120 --> 00:21:19,220
File Viewer it's this is some open

00:21:15,890 --> 00:21:27,610
source dot v you are and what you can

00:21:19,220 --> 00:21:31,250
see is the pot to pot one in zone 1 and

00:21:27,610 --> 00:21:34,160
here are the switches if you can if we

00:21:31,250 --> 00:21:35,960
zoom more closely then we see the naming

00:21:34,160 --> 00:21:40,130
convention with Jamaa I already

00:21:35,960 --> 00:21:43,070
mentioned these are the port's under

00:21:40,130 --> 00:21:46,640
switch one two three four which are

00:21:43,070 --> 00:21:53,960
connected to the wax which has a leaf

00:21:46,640 --> 00:21:59,690
now leaf switch leaf one in Iraq three

00:21:53,960 --> 00:22:02,840
and you can see that the part three in

00:21:59,690 --> 00:22:05,870
the switch in the spine two are

00:22:02,840 --> 00:22:13,960
connected to the back three so there's

00:22:05,870 --> 00:22:18,260
also some convention and here are the

00:22:13,960 --> 00:22:21,380
servers who are connected to the lease

00:22:18,260 --> 00:22:32,450
and if you don't like the design you can

00:22:21,380 --> 00:22:44,030
change it for example three two pots

00:22:32,450 --> 00:22:51,020
then you have something like that can

00:22:44,030 --> 00:23:01,750
also change number of servers and then

00:22:51,020 --> 00:23:01,750
maybe you the zones which is too - oops

00:23:02,470 --> 00:23:09,620
yeah

00:23:04,390 --> 00:23:13,670
type with one hand so your modern look

00:23:09,620 --> 00:23:17,090
and it already looks like different but

00:23:13,670 --> 00:23:28,220
you can imagine that you make a bigger

00:23:17,090 --> 00:23:29,960
set up so so you basically that's the

00:23:28,220 --> 00:23:31,790
factor you that in factory essentially

00:23:29,960 --> 00:23:33,740
on your laptop or whatever and then the

00:23:31,790 --> 00:23:39,770
second stage is maybe I'll just let you

00:23:33,740 --> 00:23:45,980
do the weaving part right yeah

00:23:39,770 --> 00:23:50,030
I will restart the program because I use

00:23:45,980 --> 00:23:56,210
the default value value switch which I

00:23:50,030 --> 00:23:57,520
can show again that's the one part with

00:23:56,210 --> 00:24:03,730
two bar spines

00:23:57,520 --> 00:24:11,870
four legs and I serve on each rack and

00:24:03,730 --> 00:24:13,910
then I need to connect because we what

00:24:11,870 --> 00:24:18,170
what Alex is probably not sure well okay

00:24:13,910 --> 00:24:19,880
there is a Q mu V M here that's what

00:24:18,170 --> 00:24:22,280
so he's deploying from his lab took to

00:24:19,880 --> 00:24:25,970
the to the management switch inside K mu

00:24:22,280 --> 00:24:27,230
through a tap interface and he's just as

00:24:25,970 --> 00:24:30,260
you can see he's running IP route to

00:24:27,230 --> 00:24:31,640
commands here over SSH so he's creating

00:24:30,260 --> 00:24:34,330
all of these things

00:24:31,640 --> 00:24:34,330
Yeah right

00:24:34,940 --> 00:24:41,290
as you can see there's absolutely

00:24:36,440 --> 00:24:44,720
nothing that's yeah and then I type beef

00:24:41,290 --> 00:24:49,429
which generates the network with IP you

00:24:44,720 --> 00:24:57,679
out commands on the remote machine and

00:24:49,429 --> 00:25:02,600
then it's all its gonna wait from the

00:24:57,679 --> 00:25:13,070
dot file necessary namespaces I can show

00:25:02,600 --> 00:25:17,630
you closely it is searching and see that

00:25:13,070 --> 00:25:21,429
we still it has each node has our

00:25:17,630 --> 00:25:27,169
namespace and networking namespace and

00:25:21,429 --> 00:25:32,809
we used it to identify this and then on

00:25:27,169 --> 00:25:41,059
the reef we see that for example this

00:25:32,809 --> 00:25:50,860
node it's this under work so what we can

00:25:41,059 --> 00:25:50,860
show for demo is ecmp I have

00:25:54,630 --> 00:26:05,160
I need to week renovate it because I

00:26:00,840 --> 00:26:10,530
didn't set up the delay SP mode sorry

00:26:05,160 --> 00:26:13,799
but then we can feed it it's a small

00:26:10,530 --> 00:26:23,549
network so we could build networks that

00:26:13,799 --> 00:26:25,380
take an hour sometimes come so you may

00:26:23,549 --> 00:26:27,299
be surprised there's an - host name

00:26:25,380 --> 00:26:34,080
there I can explain it after if we have

00:26:27,299 --> 00:26:37,110
time though and it's done then I can

00:26:34,080 --> 00:26:38,490
type some trace route command just just

00:26:37,110 --> 00:26:41,340
before you do that if you don't mind

00:26:38,490 --> 00:26:45,539
I'll just spit back to here so you

00:26:41,340 --> 00:26:48,090
basically have one of these so you're

00:26:45,539 --> 00:26:49,919
gonna trace route from one from our one

00:26:48,090 --> 00:26:52,650
of the racks to another rack through the

00:26:49,919 --> 00:26:54,510
spine correct yes okay see the naming

00:26:52,650 --> 00:26:58,020
convention makes sense to people I hope

00:26:54,510 --> 00:27:02,070
host three on rack one I make a trace

00:26:58,020 --> 00:27:06,450
out from work one two back to and then

00:27:02,070 --> 00:27:11,309
we can see we have it goes to the leaf

00:27:06,450 --> 00:27:13,620
one whack one which made host is

00:27:11,309 --> 00:27:16,590
connected and then it goes but the

00:27:13,620 --> 00:27:22,049
interesting part is the spine because if

00:27:16,590 --> 00:27:25,409
you look up to design design again then

00:27:22,049 --> 00:27:29,820
we have two spines and to show ecmp

00:27:25,409 --> 00:27:32,400
working then we try to use another work

00:27:29,820 --> 00:27:36,659
and yeah it's the only way to work

00:27:32,400 --> 00:27:38,789
because it changed the path fun come on

00:27:36,659 --> 00:27:45,539
that's pretty cool a little bit of a

00:27:38,789 --> 00:27:56,210
class maybe two one and then yeah I can

00:27:45,539 --> 00:28:01,370
also show the the routing table too much

00:27:56,210 --> 00:28:06,200
and you see the ecmp who also yeah

00:28:01,370 --> 00:28:06,200
that's on the leaf one of the racks

00:28:06,390 --> 00:28:11,520
yeah okay let me just maybe a so seems

00:28:10,320 --> 00:28:17,190
we still have time

00:28:11,520 --> 00:28:19,380
well I can go over there other stuff you

00:28:17,190 --> 00:28:20,700
can talk to us after so we wanted to

00:28:19,380 --> 00:28:24,060
actually go on a spine and bring down

00:28:20,700 --> 00:28:26,520
the port but we're not we didn't have

00:28:24,060 --> 00:28:27,480
time we didn't test it so we don't want

00:28:26,520 --> 00:28:32,150
it to go bad

00:28:27,480 --> 00:28:32,150
we're looking good so far okay so

00:28:33,080 --> 00:28:39,410
through the development of this we run

00:28:35,610 --> 00:28:41,910
into a few things one is IP row two is

00:28:39,410 --> 00:28:43,080
because we wanted we were we don't want

00:28:41,910 --> 00:28:47,220
to invent our own tool we could easily

00:28:43,080 --> 00:28:49,650
write one but then why not reuse

00:28:47,220 --> 00:28:51,450
existing tools so IP route 2 doesn't

00:28:49,650 --> 00:28:54,120
like a you know if you have applications

00:28:51,450 --> 00:28:56,960
that require get hostname they need to

00:28:54,120 --> 00:29:01,590
keep the hostname and if you don't have

00:28:56,960 --> 00:29:03,690
UTS unshared then the host name on one

00:29:01,590 --> 00:29:06,270
namespace gets replicated on all the

00:29:03,690 --> 00:29:07,620
namespaces and including the host so

00:29:06,270 --> 00:29:11,250
there's a small IP route to patch when

00:29:07,620 --> 00:29:12,930
you saw Alex running the weaving path it

00:29:11,250 --> 00:29:15,980
showed - host name so you can actually

00:29:12,930 --> 00:29:19,200
set the hostname on the on the container

00:29:15,980 --> 00:29:23,640
we have some beef names as a I'm gonna

00:29:19,200 --> 00:29:25,680
skip that DHCP and IP binding it was a

00:29:23,640 --> 00:29:27,480
challenge to sort of bring up we

00:29:25,680 --> 00:29:29,100
initially started by having the

00:29:27,480 --> 00:29:30,690
management port for each content that

00:29:29,100 --> 00:29:31,920
the containers hooking up to if you put

00:29:30,690 --> 00:29:36,950
up the diagram which was a management

00:29:31,920 --> 00:29:41,820
port move to that that management port

00:29:36,950 --> 00:29:45,810
required us to that so we were to engage

00:29:41,820 --> 00:29:47,430
CP from here but we actually had some

00:29:45,810 --> 00:29:49,320
application that was trying to bind to

00:29:47,430 --> 00:29:50,580
an IPS that didn't exist yet and you

00:29:49,320 --> 00:29:54,150
know we could all they go and fix they

00:29:50,580 --> 00:29:57,240
need or we ended up using DHC clients

00:29:54,150 --> 00:29:59,010
hooks for binding ipv6 stateless outer

00:29:57,240 --> 00:30:01,050
config was causing us tons of problems

00:29:59,010 --> 00:30:04,380
because as soon as you bring up a port

00:30:01,050 --> 00:30:07,740
this thing starts sending neighbor

00:30:04,380 --> 00:30:11,340
discovery and we ended up disabling it

00:30:07,740 --> 00:30:16,710
before we realized that we just did at

00:30:11,340 --> 00:30:20,640
STP Python 2 & 3 freaking mess okay you

00:30:16,710 --> 00:30:24,450
have 3.4 was a 3.3 we adopted Python

00:30:20,640 --> 00:30:26,670
so eventually we ended up doing just a

00:30:24,450 --> 00:30:31,260
binary blob so you can develop in Python

00:30:26,670 --> 00:30:36,150
you then create the blob and then you

00:30:31,260 --> 00:30:38,370
can run it on any laptop the bridge well

00:30:36,150 --> 00:30:42,150
there's a small patch that I think is

00:30:38,370 --> 00:30:45,420
kosher right now to submit LLC was not

00:30:42,150 --> 00:30:47,760
respected by the eath so you send as

00:30:45,420 --> 00:30:50,070
soon as you connect two bridges or via

00:30:47,760 --> 00:30:51,570
veeth they all come up saying STP status

00:30:50,070 --> 00:30:52,350
forwarding and they start broadcasting

00:30:51,570 --> 00:30:55,140
all over the place

00:30:52,350 --> 00:30:55,850
so we Alex has a simple patch to fix

00:30:55,140 --> 00:30:58,470
that

00:30:55,850 --> 00:31:00,780
the bridge favoring the Mac at lowest

00:30:58,470 --> 00:31:02,580
MAC addresses is sauce now imagine here

00:31:00,780 --> 00:31:04,380
you're bringing up thousands of these

00:31:02,580 --> 00:31:07,100
things they're all connecting they all

00:31:04,380 --> 00:31:09,930
getting geographical mark addresses and

00:31:07,100 --> 00:31:11,460
and the management switch has an IP

00:31:09,930 --> 00:31:14,370
address here because we use it from

00:31:11,460 --> 00:31:16,350
outside to connect to this and it keeps

00:31:14,370 --> 00:31:18,030
changing its MAC address because it

00:31:16,350 --> 00:31:20,670
likes to pick the lowest numbered one

00:31:18,030 --> 00:31:24,870
every time right so lots of confusion

00:31:20,670 --> 00:31:26,820
with neighbor neighbor tables so it

00:31:24,870 --> 00:31:27,720
turns out the solution was simple I

00:31:26,820 --> 00:31:29,280
don't know how I could remember that

00:31:27,720 --> 00:31:32,220
wasted about half a day of our time or a

00:31:29,280 --> 00:31:33,750
day maybe but you can you can start

00:31:32,220 --> 00:31:37,370
create the bridge and fix a MAC address

00:31:33,750 --> 00:31:40,320
in your set other things scaling issue

00:31:37,370 --> 00:31:44,280
with anybody who's been using DHCP on a

00:31:40,320 --> 00:31:47,820
large scale we our DNS mask it sucks

00:31:44,280 --> 00:31:51,210
basically you you have thousands of

00:31:47,820 --> 00:31:53,100
these things coming up and DNS mask can

00:31:51,210 --> 00:31:55,470
only handle one at a time and then it

00:31:53,100 --> 00:31:59,130
sends DHCP Knox to all these things and

00:31:55,470 --> 00:32:03,480
that that was a problem right because we

00:31:59,130 --> 00:32:04,920
wanted to bring up all the pots we

00:32:03,480 --> 00:32:06,810
wanted to bring this thing up as fast as

00:32:04,920 --> 00:32:08,790
I don't know wait half a day for $10,000

00:32:06,810 --> 00:32:11,700
to be created so we dropped DHCP

00:32:08,790 --> 00:32:14,220
eventually and Alex comes to me and says

00:32:11,700 --> 00:32:15,990
okay we can if we don't do is do sheepy

00:32:14,220 --> 00:32:18,440
what do we use I say just it all go

00:32:15,990 --> 00:32:21,960
I was busy so I said use 192 slash eight

00:32:18,440 --> 00:32:26,010
because we're using 10.1 slash eight on

00:32:21,960 --> 00:32:28,460
the data path then one day github was

00:32:26,010 --> 00:32:33,210
failing because github uses that space

00:32:28,460 --> 00:32:34,290
so so we ended up finding the 25 this a

00:32:33,210 --> 00:32:37,500
military

00:32:34,290 --> 00:32:39,750
the UK military has grabbed this number

00:32:37,500 --> 00:32:42,620
this IPR is 25 dot X in the seventies

00:32:39,750 --> 00:32:45,390
and never and it doesn't use it hundred

00:32:42,620 --> 00:32:46,920
so that's what we use right now I had

00:32:45,390 --> 00:32:48,840
they're trying to sell it now correct

00:32:46,920 --> 00:32:49,830
Alex Alex found an article where they're

00:32:48,840 --> 00:32:51,560
going to try and sell it don't buy it

00:32:49,830 --> 00:32:54,510
please

00:32:51,560 --> 00:32:57,000
they then we run into a pot limit on the

00:32:54,510 --> 00:32:59,160
bridges was 1024 we have some really

00:32:57,000 --> 00:33:02,340
good suggestions from net conf we'll

00:32:59,160 --> 00:33:05,490
know how to fix that we'll talk to you

00:33:02,340 --> 00:33:07,920
after this ARP table overflow all over

00:33:05,490 --> 00:33:10,950
the place we had to tweak our garbage

00:33:07,920 --> 00:33:12,870
collection parameters shared file system

00:33:10,950 --> 00:33:14,880
so if you run something like LDP inside

00:33:12,870 --> 00:33:16,230
the container in you know UNIX file

00:33:14,880 --> 00:33:19,710
descriptors are shared we were quickly

00:33:16,230 --> 00:33:21,470
running out of file descriptors and of

00:33:19,710 --> 00:33:25,680
course you can increase the file limits

00:33:21,470 --> 00:33:28,770
okay that that was the scoop there's a

00:33:25,680 --> 00:33:30,240
lot more on the paper future work we

00:33:28,770 --> 00:33:31,800
actually don't have this quite working

00:33:30,240 --> 00:33:33,960
what I bragged about is the biggest

00:33:31,800 --> 00:33:35,850
feature it doesn't quite work yet where

00:33:33,960 --> 00:33:37,710
you actually build Iraq and then you

00:33:35,850 --> 00:33:42,270
ship it you weave it and it connects to

00:33:37,710 --> 00:33:44,010
the other data center port we want to

00:33:42,270 --> 00:33:47,670
publish numbers on very large size

00:33:44,010 --> 00:33:49,680
networks so we recently acquired a 256

00:33:47,670 --> 00:33:52,140
gig server machine we don't see how much

00:33:49,680 --> 00:33:54,440
how much we can beat that thing into how

00:33:52,140 --> 00:33:57,990
many namespaces can we create out of it

00:33:54,440 --> 00:34:00,630
we also can you put like a port network

00:33:57,990 --> 00:34:02,460
or yeah that's good enough

00:34:00,630 --> 00:34:04,050
so we're also looking at instead of

00:34:02,460 --> 00:34:06,380
actually having these as Linux bridges

00:34:04,050 --> 00:34:08,970
we'll use an embedded NIC sub switch

00:34:06,380 --> 00:34:10,860
it's very easy for us to do is we don't

00:34:08,970 --> 00:34:14,129
care if it's virtual or physical it's

00:34:10,860 --> 00:34:16,020
just another bridge and we can deploy

00:34:14,129 --> 00:34:18,720
this we can really deploy this on real

00:34:16,020 --> 00:34:19,919
hardware as long as you know we're

00:34:18,720 --> 00:34:23,970
allowed to make changes to mark

00:34:19,919 --> 00:34:26,250
addresses etc ipv6 support is not there

00:34:23,970 --> 00:34:29,520
we're also thinking about a seven stage

00:34:26,250 --> 00:34:31,020
clause we're also thinking in the design

00:34:29,520 --> 00:34:32,879
phase we're gonna have constraint design

00:34:31,020 --> 00:34:35,280
templates where you say I've got a Dell

00:34:32,879 --> 00:34:37,200
switch which has 48 ports that only 10

00:34:35,280 --> 00:34:38,879
gig and then when someone tries to

00:34:37,200 --> 00:34:41,520
design something they can pick the

00:34:38,879 --> 00:34:42,929
switches they want and we'll use the

00:34:41,520 --> 00:34:46,350
Linux bridge to pretend it's one of

00:34:42,929 --> 00:34:47,780
those switches cows monkey is in

00:34:46,350 --> 00:34:49,980
progress

00:34:47,780 --> 00:34:52,980
what what is missing from years as well

00:34:49,980 --> 00:34:57,839
TDC support and we're gonna open source

00:34:52,980 --> 00:35:00,329
this storm attribution two images the

00:34:57,839 --> 00:35:02,550
first one energy source for McGill the

00:35:00,329 --> 00:35:04,140
close network was from Wikipedia the HP

00:35:02,550 --> 00:35:06,089
port is somewhere in the net and I

00:35:04,140 --> 00:35:09,540
forgot to add attribution to cumulus for

00:35:06,089 --> 00:35:14,089
their copyrighted diagram which I loaded

00:35:09,540 --> 00:35:19,109
off some site but but they're here so

00:35:14,089 --> 00:35:22,829
okay that's it questions we have five

00:35:19,109 --> 00:35:25,290
minutes or so did they did they ask you

00:35:22,829 --> 00:35:27,720
guys to see if maybe the next iteration

00:35:25,290 --> 00:35:29,910
of this could do the same thing but

00:35:27,720 --> 00:35:36,599
let's say with dynamic routing protocols

00:35:29,910 --> 00:35:37,920
running in each namespace actually

00:35:36,599 --> 00:35:39,170
cumulus hasn't seen this this is the

00:35:37,920 --> 00:35:43,109
first time they're probably seeing it

00:35:39,170 --> 00:35:46,099
but I don't look I know people like

00:35:43,109 --> 00:35:48,960
their BGP I I don't think we need it

00:35:46,099 --> 00:35:51,180
you wanna have a rebuttal on that III

00:35:48,960 --> 00:35:53,970
don't think in a PDP all this complexity

00:35:51,180 --> 00:35:56,190
of VX line and we're just running native

00:35:53,970 --> 00:36:00,450
routing if we need to but layer two it's

00:35:56,190 --> 00:36:02,700
good enough for us so one comment to

00:36:00,450 --> 00:36:04,230
make I think it it's a question of what

00:36:02,700 --> 00:36:06,450
it is that you're trying to test right

00:36:04,230 --> 00:36:08,880
if what you are trying to test is

00:36:06,450 --> 00:36:11,670
effectively Linux kernel data path

00:36:08,880 --> 00:36:13,589
functions then this was good enough if

00:36:11,670 --> 00:36:16,470
you're trying to validate Network

00:36:13,589 --> 00:36:19,140
failover situations is your Akal going

00:36:16,470 --> 00:36:21,450
to hold in the case of massive failure

00:36:19,140 --> 00:36:23,250
in your spine and whatnot you have to

00:36:21,450 --> 00:36:25,980
incorporate the control plan you need to

00:36:23,250 --> 00:36:27,240
have BGP in the picture because like we

00:36:25,980 --> 00:36:29,069
were talking about in the case of link

00:36:27,240 --> 00:36:30,750
failure the control plane will operate

00:36:29,069 --> 00:36:33,210
differently from data plane failure

00:36:30,750 --> 00:36:36,290
right so things that static routing will

00:36:33,210 --> 00:36:39,630
do will be different from a dynamic path

00:36:36,290 --> 00:36:41,220
so yeah I think dynamic routing in my

00:36:39,630 --> 00:36:43,650
opinion should be added at some point

00:36:41,220 --> 00:36:45,680
but that's jimal if I understood your

00:36:43,650 --> 00:36:47,849
talk correctly it that's an application

00:36:45,680 --> 00:36:49,710
structure you cannot you can you can go

00:36:47,849 --> 00:36:53,280
in at FRR they we don't care so one

00:36:49,710 --> 00:36:55,470
comment I had was you wished passed or

00:36:53,280 --> 00:36:57,180
switched past ansible okay I would

00:36:55,470 --> 00:36:59,130
actually say go back and look at ansible

00:36:57,180 --> 00:37:00,660
again because if what you're trying to

00:36:59,130 --> 00:37:04,290
do effectively what you've done is

00:37:00,660 --> 00:37:05,910
you've built this party yeah because

00:37:04,290 --> 00:37:10,560
what you're doing right I mean this is

00:37:05,910 --> 00:37:12,630
there are I would say in the fortune 100

00:37:10,560 --> 00:37:14,520
companies maybe there are two or three

00:37:12,630 --> 00:37:16,140
companies that don't have the problem

00:37:14,520 --> 00:37:18,300
that you're trying to solve explicitly

00:37:16,140 --> 00:37:20,280
right they are just doing it with

00:37:18,300 --> 00:37:22,500
physical hardware and the way they are

00:37:20,280 --> 00:37:24,119
doing it is all almost all of them are

00:37:22,500 --> 00:37:26,550
using some automation tool puppet chef

00:37:24,119 --> 00:37:28,589
and super whatever and the benefit of

00:37:26,550 --> 00:37:30,030
that is it becomes pluggable modules and

00:37:28,589 --> 00:37:33,720
you can expand rather than a whole

00:37:30,030 --> 00:37:35,010
scripted IP route command set you put it

00:37:33,720 --> 00:37:38,700
in answerable and you let ansible

00:37:35,010 --> 00:37:40,380
reaction model work so that it follows a

00:37:38,700 --> 00:37:42,960
realistic deployment right that way a

00:37:40,380 --> 00:37:45,089
test environment and reality are more in

00:37:42,960 --> 00:37:47,069
line with each other so we're happy when

00:37:45,089 --> 00:37:49,500
we open source it we we are not experts

00:37:47,069 --> 00:37:53,630
on ansible so that's why we can probably

00:37:49,500 --> 00:37:53,630
we know how to run IP Nitin yes okay

00:37:53,869 --> 00:38:04,319
anybody else okay we got 15 minutes for

00:38:02,310 --> 00:38:06,440
the neck before the next speaker Wow I I

00:38:04,319 --> 00:38:09,150
thought we're never going to finish this

00:38:06,440 --> 00:38:15,010
okay thank you

00:38:09,150 --> 00:38:15,010

YouTube URL: https://www.youtube.com/watch?v=JJbnCrqtp8M


