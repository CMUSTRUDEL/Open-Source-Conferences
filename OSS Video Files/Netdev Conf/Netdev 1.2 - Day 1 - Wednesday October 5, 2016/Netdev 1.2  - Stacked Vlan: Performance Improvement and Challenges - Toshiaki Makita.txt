Title: Netdev 1.2  - Stacked Vlan: Performance Improvement and Challenges - Toshiaki Makita
Publication date: 2016-10-06
Playlist: Netdev 1.2 - Day 1 - Wednesday October 5, 2016
Description: 
	http://netdevconf.org/1.2/session.html?toshiaki-makita
Captions: 
	00:00:24,090 --> 00:00:27,110
it's all true

00:00:35,780 --> 00:00:46,640
so you'll see studied I'll go get about

00:00:42,559 --> 00:00:54,489
started on over months improvement and

00:00:46,640 --> 00:00:57,589
challenges so here we have three topics

00:00:54,489 --> 00:00:59,989
first one is a worthy of stuff to be

00:00:57,589 --> 00:01:03,739
done and the second one is a whole

00:00:59,989 --> 00:01:09,649
experiment and challenges and the last

00:01:03,739 --> 00:01:12,860
one is interoperability problem so let

00:01:09,649 --> 00:01:16,640
me introduce myself briefly I'm a color

00:01:12,860 --> 00:01:19,759
it in the Excalibur engineer entity open

00:01:16,640 --> 00:01:21,500
source software center and providing

00:01:19,759 --> 00:01:26,990
technical support for entity group

00:01:21,500 --> 00:01:32,830
companies and I'm mainly I mainly

00:01:26,990 --> 00:01:32,830
contributing to reach envied a subsystem

00:01:37,750 --> 00:01:40,560
ok

00:01:42,310 --> 00:01:56,150
so the faster it is the overview start

00:01:50,570 --> 00:02:00,800
feeling so satria is used for Villa

00:01:56,150 --> 00:02:07,190
where to Allah belong tags are used in

00:02:00,800 --> 00:02:09,650
one pocket so in this case we have two

00:02:07,190 --> 00:02:16,420
types of belonging hitters and one is

00:02:09,650 --> 00:02:22,220
the other field and tuck which half

00:02:16,420 --> 00:02:26,870
88888 TP ID this is called a 2 2 2 20

00:02:22,220 --> 00:02:32,260
hitter and the otherwise noble being a

00:02:26,870 --> 00:02:32,260
hater this is called the 20 hitter

00:02:32,530 --> 00:02:40,340
usually we use is to try Eddie hitter

00:02:37,280 --> 00:02:44,050
for the other hater but sometimes to 20

00:02:40,340 --> 00:02:49,270
hitter is also used for the other hitter

00:02:44,050 --> 00:02:53,240
and a wide stopped feel I used so mainly

00:02:49,270 --> 00:03:01,280
this technology is used for Ethernet VPN

00:02:53,240 --> 00:03:06,430
or made to reason it so in this year our

00:03:01,280 --> 00:03:09,860
customers I are using villain tugs and

00:03:06,430 --> 00:03:16,090
the carrier network uses the additive to

00:03:09,860 --> 00:03:16,090
separate customers so

00:03:18,040 --> 00:03:27,680
so that customer can use their own

00:03:20,920 --> 00:03:33,129
vision tux and in other cases bit by

00:03:27,680 --> 00:03:33,129
uses also loot widely a bit on a test

00:03:36,230 --> 00:03:46,010
and why the in Linux there are four ways

00:03:40,790 --> 00:03:51,680
to use with 180 in Linux and one is and

00:03:46,010 --> 00:03:55,060
that's why I belong device and the

00:03:51,680 --> 00:03:59,390
second one is the tri-d billowy abridge

00:03:55,060 --> 00:04:04,099
an open message and look IDK publicist

00:03:59,390 --> 00:04:09,200
at every device is also useful but these

00:04:04,099 --> 00:04:13,280
are still in ethnics so this figure

00:04:09,200 --> 00:04:18,829
shows the example of route 1a division

00:04:13,280 --> 00:04:22,010
device we can create HP route 10 this is

00:04:18,829 --> 00:04:24,440
a lot wider vision device and on the top

00:04:22,010 --> 00:04:27,860
of the device can create the other

00:04:24,440 --> 00:04:30,500
another vision devices through 10 20

00:04:27,860 --> 00:04:32,680
this is I don't know what will be on the

00:04:30,500 --> 00:04:32,680
best

00:04:37,310 --> 00:04:49,100
and let's go on to Hamas event and

00:04:41,150 --> 00:04:52,010
challenges so good the 20 was introduced

00:04:49,100 --> 00:04:57,490
in kind of three-point team but at that

00:04:52,010 --> 00:05:02,140
time acceleration features are very few

00:04:57,490 --> 00:05:05,630
so sync redoute wonky vision device has

00:05:02,140 --> 00:05:08,840
many acceleration features but stuck

00:05:05,630 --> 00:05:13,040
field and device no thank you device on

00:05:08,840 --> 00:05:21,290
other another vision device has very few

00:05:13,040 --> 00:05:28,760
features this is because vision device

00:05:21,290 --> 00:05:30,920
hat doesn't have video features so the

00:05:28,760 --> 00:05:34,370
stock to be the device is created on a

00:05:30,920 --> 00:05:37,430
diversion device so its feature is

00:05:34,370 --> 00:05:42,650
derived from vision devices video

00:05:37,430 --> 00:05:49,610
features this is a bit confusing but

00:05:42,650 --> 00:05:54,350
anyway we can add we need oxidation

00:05:49,610 --> 00:06:02,260
features but it could break some

00:05:54,350 --> 00:06:06,620
assumptions on pita pockets so this is

00:06:02,260 --> 00:06:11,200
memory layout of buildin pockets in

00:06:06,620 --> 00:06:15,190
column in color the top stop or

00:06:11,200 --> 00:06:20,060
enjoyable with vegan taco floating table

00:06:15,190 --> 00:06:24,300
the villain talks are in billeting syrup

00:06:20,060 --> 00:06:29,830
a scab off and it's

00:06:24,300 --> 00:06:32,800
the actual packet data dozens of viaje

00:06:29,830 --> 00:06:37,389
de and then drove us with speed and

00:06:32,800 --> 00:06:43,150
tocopherol DC route the pedo header is

00:06:37,389 --> 00:06:47,789
ability in skvde so they are in positas

00:06:43,150 --> 00:06:51,130
options the a lot of coldest room

00:06:47,789 --> 00:06:54,759
currently top staff handles only vedanta

00:06:51,130 --> 00:06:57,789
stripped svv or there's at most one

00:06:54,759 --> 00:07:03,699
vedanta being esquivel data or villain

00:06:57,789 --> 00:07:12,240
TPS 8120 so these are all the invalid

00:07:03,699 --> 00:07:12,240
for stuffed videos with stuffed feed on

00:07:12,539 --> 00:07:23,289
the outer pug half villain TV ad a day

00:07:17,349 --> 00:07:27,720
88 and in Canada to our stock this kb

00:07:23,289 --> 00:07:30,039
data have been ahead does the web and

00:07:27,720 --> 00:07:35,590
enjoyable with feed on top of all these

00:07:30,039 --> 00:07:40,020
favors there are two vision sucks in st

00:07:35,590 --> 00:07:40,020
bede so

00:07:41,599 --> 00:07:47,879
the typical example of this breaking

00:07:44,879 --> 00:07:59,449
this assumption is TX checksum of IPC

00:07:47,879 --> 00:08:09,949
some devices this is ITP of in colored

00:07:59,449 --> 00:08:09,949
33.8 and I TV has IPC some feature so

00:08:09,979 --> 00:08:20,369
the colored need to evil the IP header

00:08:14,729 --> 00:08:23,659
offset to the device so the igp driver

00:08:20,369 --> 00:08:28,829
try to get the network protocol by

00:08:23,659 --> 00:08:33,620
billingate protocol helper function and

00:08:28,829 --> 00:08:38,279
if the protocol is invite physically

00:08:33,620 --> 00:08:44,610
it's not IP who are ipv6 like the target

00:08:38,279 --> 00:08:48,269
will be profit and then implementation

00:08:44,610 --> 00:08:56,910
we didn't get protocol is like this this

00:08:48,269 --> 00:09:03,089
has only without protocol 8 10 and 100

00:08:56,910 --> 00:09:07,829
most one vedanta in st bede so either be

00:09:03,089 --> 00:09:13,230
crafty to start with our pockets this is

00:09:07,829 --> 00:09:16,759
already fixed so will i get protocol can

00:09:13,230 --> 00:09:16,759
hand ranging about feeding ducks

00:09:17,040 --> 00:09:25,220
this is a diagram clue I xtv the ixgbe

00:09:25,820 --> 00:09:38,100
get the network protocol by itself not

00:09:31,350 --> 00:09:42,899
music not using VI get protocol but also

00:09:38,100 --> 00:09:47,459
it has only 8 120 at most one we don't

00:09:42,899 --> 00:09:53,639
have an escapee data so this is also

00:09:47,459 --> 00:09:56,699
fixed the things are just examples all

00:09:53,639 --> 00:10:03,470
drivers with opposition feature should

00:09:56,699 --> 00:10:09,440
be careful with this failure and the

00:10:03,470 --> 00:10:12,420
another difficulty of stop feed on other

00:10:09,440 --> 00:10:15,240
acceleration is missing key

00:10:12,420 --> 00:10:20,339
infrastructure will start video

00:10:15,240 --> 00:10:26,130
basically TSO it could not be performed

00:10:20,339 --> 00:10:28,949
for stock theorem because no internal

00:10:26,130 --> 00:10:32,630
infrastructure to determine if device

00:10:28,949 --> 00:10:32,630
can segment stuff your pockets

00:10:35,440 --> 00:10:49,660
so this video shows how package bought

00:10:43,690 --> 00:10:53,860
it from tcp/ip stack two devices in kind

00:10:49,660 --> 00:10:59,100
of 3.8 there are no T so ji soo features

00:10:53,860 --> 00:11:05,680
so there are no cheese or pockets and

00:10:59,100 --> 00:11:11,230
ideally we want to send TSO pocket from

00:11:05,680 --> 00:11:20,560
TCP the yeah and segment those pockets

00:11:11,230 --> 00:11:24,430
at the real device if the device is not

00:11:20,560 --> 00:11:31,140
capable here so host a freedom by Jaso

00:11:24,430 --> 00:11:38,140
and if the device can see so then we

00:11:31,140 --> 00:11:43,120
want to level is it and simply adding

00:11:38,140 --> 00:11:46,240
TSO bit to the villain device and

00:11:43,120 --> 00:11:52,000
stopped vision device resulting this

00:11:46,240 --> 00:11:56,940
figure so this all will be performed but

00:11:52,000 --> 00:12:00,640
it always hoped so even if the device

00:11:56,940 --> 00:12:03,960
can perform TSO four stuffed feed on GS

00:12:00,640 --> 00:12:03,960
who is perfect

00:12:07,810 --> 00:12:16,040
so this is how to determine if equals

00:12:11,930 --> 00:12:18,380
capable TSO in color the functional name

00:12:16,040 --> 00:12:26,380
is natively escapee features in this

00:12:18,380 --> 00:12:31,070
feature it always the disabled TSO if

00:12:26,380 --> 00:12:38,630
the target is typed with two or more

00:12:31,070 --> 00:12:41,390
text so I moved it into the newly

00:12:38,630 --> 00:12:47,120
created default featured check function

00:12:41,390 --> 00:12:51,170
and if the device has led you here check

00:12:47,120 --> 00:12:59,550
for back then and the check will be

00:12:51,170 --> 00:13:05,850
skipped and gso will be skipped so

00:12:59,550 --> 00:13:09,240
in the driver this is example the IDP as

00:13:05,850 --> 00:13:14,100
vu this the helper function path to

00:13:09,240 --> 00:13:18,350
feature check this that's nothing so if

00:13:14,100 --> 00:13:24,540
you want to skip that vid on checking

00:13:18,350 --> 00:13:26,730
please use this bathroom heater check so

00:13:24,540 --> 00:13:32,700
with this there is no need of

00:13:26,730 --> 00:13:36,829
segmentation and everything works but if

00:13:32,700 --> 00:13:38,700
your driver does not support you so bad

00:13:36,829 --> 00:13:41,130
implement the energy of heater check

00:13:38,700 --> 00:13:45,050
please make sure to call be done feature

00:13:41,130 --> 00:13:49,200
tip in its energy you feature check

00:13:45,050 --> 00:13:54,860
otherwise des eaux de ESO is not

00:13:49,200 --> 00:13:54,860
performed and the first could be crafted

00:13:55,370 --> 00:14:06,360
so I'm I have been talking about the

00:14:00,120 --> 00:14:08,250
exile but what about that excite all

00:14:06,360 --> 00:14:11,839
right check sum over IP she's from

00:14:08,250 --> 00:14:17,010
devices and heiresses totally depend on

00:14:11,839 --> 00:14:22,709
devices kept ready to pass feeder so we

00:14:17,010 --> 00:14:25,589
can do little for those features and our

00:14:22,709 --> 00:14:30,320
peace and 0 they do not work in

00:14:25,589 --> 00:14:30,320
currently pointing but now they fixed

00:14:30,700 --> 00:14:43,660
so I major power much change with Connor

00:14:37,000 --> 00:14:48,640
three pointing and open shift so we use

00:14:43,660 --> 00:14:53,710
to quality service selected to click

00:14:48,640 --> 00:14:59,770
click back to back and that any quiz

00:14:53,710 --> 00:15:03,760
interchange elite internet HTTP is

00:14:59,770 --> 00:15:07,030
capable TX checksum and T sub diesel or

00:15:03,760 --> 00:15:09,750
sub fear but counteracts check so many

00:15:07,030 --> 00:15:09,750
artists

00:15:11,529 --> 00:15:22,749
so does Lt is rugby this is single test

00:15:19,089 --> 00:15:25,509
results there are three test cases tcp

00:15:22,749 --> 00:15:32,470
string and UDP stream long pocket and

00:15:25,509 --> 00:15:37,709
UDP stream short pocket so from that is

00:15:32,470 --> 00:15:42,850
this tcp strength is you can see that

00:15:37,709 --> 00:15:50,610
sub case in California reaches

00:15:42,850 --> 00:15:50,610
10 G wire speed with Enrico NGDP three

00:15:52,079 --> 00:15:57,870
the performance improved to some extent

00:16:00,120 --> 00:16:04,970
and this is what flow test without

00:16:07,310 --> 00:16:15,570
looking up the UDP stream short pocket

00:16:11,810 --> 00:16:23,040
don't thank you sing without case scales

00:16:15,570 --> 00:16:27,330
very well because of RSS but start we're

00:16:23,040 --> 00:16:33,680
on cannot use RSS so if you it is using

00:16:27,330 --> 00:16:39,320
RPS richter scale to some extent but

00:16:33,680 --> 00:16:39,320
it's not compared to the 20 keys

00:16:40,790 --> 00:16:47,170
so the summary for feature improvement

00:16:47,950 --> 00:16:53,590
we have few features in Canon

00:16:50,870 --> 00:16:56,590
three-point team but this distance

00:16:53,590 --> 00:16:56,590
improved

00:17:00,529 --> 00:17:09,740
but there are some what to do for

00:17:05,539 --> 00:17:13,539
padding group both txt checks on will I

00:17:09,740 --> 00:17:17,480
be see some devices some use to me

00:17:13,539 --> 00:17:20,510
double double pockets people so being

00:17:17,480 --> 00:17:23,689
corrupt on going off I be head of state

00:17:20,510 --> 00:17:28,610
or something like that so this USB down

00:17:23,689 --> 00:17:32,750
its protocol in drivers if possible and

00:17:28,610 --> 00:17:35,840
40s oh please implement envio future

00:17:32,750 --> 00:17:40,570
check it's your drive is capable

00:17:35,840 --> 00:17:44,690
performing TSO on stock beyond pockets

00:17:40,570 --> 00:17:50,450
and full arc checks some of my pieces

00:17:44,690 --> 00:17:55,039
and device and ours if there are some

00:17:50,450 --> 00:17:58,820
leaks like into 10g that have a feature

00:17:55,039 --> 00:18:03,470
to and something like stuck to eat

00:17:58,820 --> 00:18:08,630
humble in this in this mode the parking

00:18:03,470 --> 00:18:13,850
pass sucked vida pockets but instead it

00:18:08,630 --> 00:18:21,649
got it cannot pass other pockets so it

00:18:13,850 --> 00:18:25,899
is a bit hard to use but in some ways we

00:18:21,649 --> 00:18:25,899
need a featured title

00:18:27,490 --> 00:18:36,130
so let's going to interpolate keep

00:18:33,770 --> 00:18:36,130
rolling

00:18:38,410 --> 00:18:45,240
so this is a problem of pocket sized

00:18:46,500 --> 00:18:55,570
singled out the pockets have a thousand

00:18:49,960 --> 00:18:59,140
five hundred twenty two guides and most

00:18:55,570 --> 00:19:01,480
nicks except those buckets but

00:18:59,140 --> 00:19:05,440
double-talk the pockets have a thousand

00:19:01,480 --> 00:19:10,000
five hundred twenty six bytes and some

00:19:05,440 --> 00:19:13,120
mix to not accept them but please sighs

00:19:10,000 --> 00:19:21,880
is needed to provide transparency so

00:19:13,120 --> 00:19:27,510
night vision so look at this figure and

00:19:21,880 --> 00:19:33,400
the user send single toggle pocket and

00:19:27,510 --> 00:19:39,190
daughter is which ad ads attack and the

00:19:33,400 --> 00:19:41,560
pocket gets thousand 526 lights and the

00:19:39,190 --> 00:19:46,330
sonics doesn't accept this side the

00:19:41,560 --> 00:19:48,570
pocket and dropped only do two oversized

00:19:46,330 --> 00:19:48,570
here

00:19:50,300 --> 00:20:04,770
there are examples from our lab eating

00:19:55,920 --> 00:20:08,610
he he touched the e suddenly it hit Rose

00:20:04,770 --> 00:20:11,550
pocket a larger than a thousand five

00:20:08,610 --> 00:20:21,030
hundred twenty two bites and be in X 2 X

00:20:11,550 --> 00:20:27,720
and I xev at the similar but but it

00:20:21,030 --> 00:20:30,420
drops the pockets larger than a thousand

00:20:27,720 --> 00:20:34,920
five hundred think 18 bite if the

00:20:30,420 --> 00:20:39,900
 are not be done at one and then

00:20:34,920 --> 00:20:46,070
we're exploring an 850 they accept

00:20:39,900 --> 00:20:51,420
double double pockets it is because they

00:20:46,070 --> 00:20:56,540
take into account the avatar or they

00:20:51,420 --> 00:20:56,540
have external due to climate research

00:20:56,600 --> 00:21:02,420
NIV ve also accepts double double

00:21:00,030 --> 00:21:02,420
pockets

00:21:04,540 --> 00:21:08,610
hey Doc sets down friends by default

00:21:10,780 --> 00:21:19,060
so how to solve this problem there are

00:21:16,240 --> 00:21:22,770
some possible approach see the past one

00:21:19,060 --> 00:21:22,770
is produced we don't advise it with you

00:21:24,030 --> 00:21:30,280
but this does not change the size of

00:21:26,830 --> 00:21:34,450
Brazil pocket so this doesn't solve

00:21:30,280 --> 00:21:40,480
problem well then increase real device

00:21:34,450 --> 00:21:45,100
in view is this solve the problem yes

00:21:40,480 --> 00:21:50,500
but this allows other frames to the jump

00:21:45,100 --> 00:21:57,190
frames so there could be another problem

00:21:50,500 --> 00:22:01,380
with this with this way so then accept a

00:21:57,190 --> 00:22:04,540
larger size pockets by default like a TV

00:22:01,380 --> 00:22:07,180
but some mix as far as i know some

00:22:04,540 --> 00:22:13,390
exchange their behavior by accepting

00:22:07,180 --> 00:22:16,290
larger size changes are changing the max

00:22:13,390 --> 00:22:16,290
except of the side

00:22:19,270 --> 00:22:32,870
the exam place is Todd AVI and cutie so

00:22:26,840 --> 00:22:36,800
my proposal is in drop frames introduced

00:22:32,870 --> 00:22:45,230
to introduce your friends so every frame

00:22:36,800 --> 00:22:50,150
is a pocket which has noble southern and

00:22:45,230 --> 00:22:54,040
500 mg you and he had is shown to share

00:22:50,150 --> 00:22:57,770
with you the additional pocket

00:22:54,040 --> 00:23:01,180
encapsulation hater up to four hundred

00:22:57,770 --> 00:23:01,180
eighty two lights

00:23:03,470 --> 00:23:06,070
so

00:23:07,610 --> 00:23:17,600
we've introducing this amber frey

00:23:12,700 --> 00:23:24,860
implementation team connect the device

00:23:17,600 --> 00:23:28,780
can observe timber frame but st. that

00:23:24,860 --> 00:23:33,280
does not set up jump rate so this is

00:23:28,780 --> 00:23:38,059
envisioned the implementation question

00:23:33,280 --> 00:23:40,250
so they go back to this line okay yeah

00:23:38,059 --> 00:23:42,710
so the this is us do you need anything

00:23:40,250 --> 00:23:46,850
in the hardware to support this I'm

00:23:42,710 --> 00:23:50,410
sorry you do so you need some type of

00:23:46,850 --> 00:23:55,940
support for this to work right ah ok

00:23:50,410 --> 00:23:58,400
after my proposal is using jumbo frames

00:23:55,940 --> 00:24:00,140
support ok so you're just going to cheat

00:23:58,400 --> 00:24:02,419
by making it a big jumbo frame in

00:24:00,140 --> 00:24:10,520
inserting or you have to turn some

00:24:02,419 --> 00:24:12,440
feature sorry so you're just making

00:24:10,520 --> 00:24:18,820
you're sending a jumbo frame I don't

00:24:12,440 --> 00:24:25,820
work by proposed is receive jumbo frames

00:24:18,820 --> 00:24:28,220
but don't friends jump rings so some

00:24:25,820 --> 00:24:32,900
love some Reuters I know actually have

00:24:28,220 --> 00:24:34,700
like two values for empty use I I don't

00:24:32,900 --> 00:24:37,760
know some column and arrow you

00:24:34,700 --> 00:24:39,230
specifically with PP peelings and I

00:24:37,760 --> 00:24:41,419
think it would actually also for the

00:24:39,230 --> 00:24:43,490
Linux model we already have an MTU for

00:24:41,419 --> 00:24:45,230
example for ipv6 which is not the same

00:24:43,490 --> 00:24:49,429
like the interface and who will be Evan

00:24:45,230 --> 00:24:51,679
happy v foreign to you so I think it

00:24:49,429 --> 00:24:53,450
would actually not be bad to just say

00:24:51,679 --> 00:24:55,820
like okay we we make a link empty

00:24:53,450 --> 00:24:58,340
natively form to not give you six empty

00:24:55,820 --> 00:25:01,280
we basically already have that so you

00:24:58,340 --> 00:25:04,460
could say like you could increase empty

00:25:01,280 --> 00:25:06,350
you on the link but ipv4 Cuba just

00:25:04,460 --> 00:25:09,950
served as a maximum segment size for

00:25:06,350 --> 00:25:11,990
example in TCP would still be 1500 by

00:25:09,950 --> 00:25:14,000
default and nothing would change on the

00:25:11,990 --> 00:25:15,800
upper protocols but you could

00:25:14,000 --> 00:25:18,460
communicate to the dr at least that you

00:25:15,800 --> 00:25:19,990
want to have more space

00:25:18,460 --> 00:25:22,750
and maybe that could be done ready for

00:25:19,990 --> 00:25:25,330
it at some point in time but I'm not a

00:25:22,750 --> 00:25:27,520
drive expert to say what if there are

00:25:25,330 --> 00:25:29,590
implications over all drivers maybe

00:25:27,520 --> 00:25:35,110
could also be a bit that driver say I I

00:25:29,590 --> 00:25:37,450
can give is it but but this won't work

00:25:35,110 --> 00:25:39,850
and here in our experiment like this is

00:25:37,450 --> 00:25:43,210
a question general is asking if you have

00:25:39,850 --> 00:25:45,850
a variable size receive if that a gap

00:25:43,210 --> 00:25:48,160
solution head of the lower portion is a

00:25:45,850 --> 00:25:51,250
variable size unless your hardware knows

00:25:48,160 --> 00:25:53,680
how to parse it it will not know where

00:25:51,250 --> 00:25:56,800
the next header is going to start so

00:25:53,680 --> 00:26:01,720
stay plus a few words without break ah i

00:25:56,800 --> 00:26:04,870
have not proposing a passing that the

00:26:01,720 --> 00:26:09,160
additional encapsulation haysta i just

00:26:04,870 --> 00:26:13,150
proposing accepting larger size added

00:26:09,160 --> 00:26:15,910
but don't don't send that last side

00:26:13,150 --> 00:26:21,190
pocket we're adding integers I hate that

00:26:15,910 --> 00:26:24,250
so just for some background the reason I

00:26:21,190 --> 00:26:25,930
gb accepts jumbo frames is because I

00:26:24,250 --> 00:26:28,570
rewrote the receive path about 10

00:26:25,930 --> 00:26:30,790
different times and finally got to the

00:26:28,570 --> 00:26:33,670
point where I could accept jumbo frames

00:26:30,790 --> 00:26:35,560
generically I think the one thing you're

00:26:33,670 --> 00:26:38,130
going to run into with this setup is

00:26:35,560 --> 00:26:41,470
enabling jumbo frames on a lot of setups

00:26:38,130 --> 00:26:43,930
absolutely tanks performance basically

00:26:41,470 --> 00:26:46,180
what you end up with is they go to not

00:26:43,930 --> 00:26:48,820
most Nick drivers will go to non optimal

00:26:46,180 --> 00:26:51,250
buffer configurations and you'll see the

00:26:48,820 --> 00:26:52,960
performance drop to maybe half to

00:26:51,250 --> 00:26:56,350
three-quarters of what you could get

00:26:52,960 --> 00:26:58,810
normally in addition adding more headers

00:26:56,350 --> 00:27:02,860
at this point is just going to make your

00:26:58,810 --> 00:27:05,890
traffic path that much worse I think you

00:27:02,860 --> 00:27:08,080
may want to honestly look at you already

00:27:05,890 --> 00:27:10,480
had mentioned in another piece that you

00:27:08,080 --> 00:27:12,580
are going to need to look at somehow

00:27:10,480 --> 00:27:14,210
making the drivers register the ability

00:27:12,580 --> 00:27:18,290
for the second

00:27:14,210 --> 00:27:19,790
VLAN tags that would be the spot to also

00:27:18,290 --> 00:27:23,660
look at if you need to increase them to

00:27:19,790 --> 00:27:25,130
you or not ideally you need to really

00:27:23,660 --> 00:27:27,950
just communicate the drivers ahead I

00:27:25,130 --> 00:27:33,980
want to support this extra via this the

00:27:27,950 --> 00:27:37,610
8021 qadr 8021 ad tag so I know for

00:27:33,980 --> 00:27:40,160
example in the case of ixgbe it will let

00:27:37,610 --> 00:27:42,650
you take it up for more bites or no

00:27:40,160 --> 00:27:44,960
eight more bites right no it's for more

00:27:42,650 --> 00:27:46,760
I think for VLAN if it recognizes an

00:27:44,960 --> 00:27:49,040
outer VLAN tag because you set those

00:27:46,760 --> 00:27:50,230
fields in the hardware and so that's

00:27:49,040 --> 00:27:52,130
something else to be aware of your

00:27:50,230 --> 00:27:54,470
implementing this and it may not

00:27:52,130 --> 00:28:02,180
actually be necessary if the harder can

00:27:54,470 --> 00:28:03,620
support the secondary tag when you turn

00:28:02,180 --> 00:28:05,450
on the jumbo frames the performance

00:28:03,620 --> 00:28:11,120
timings is that irrespective of the

00:28:05,450 --> 00:28:13,430
actual MTU you said pretty much yes yeah

00:28:11,120 --> 00:28:16,580
they're so for some drivers if you take

00:28:13,430 --> 00:28:19,790
it up from 1,500 to 1501 it completely

00:28:16,580 --> 00:28:21,710
changes the buffer allocation scheme yep

00:28:19,790 --> 00:28:24,680
so like especially in case they're like

00:28:21,710 --> 00:28:27,740
I think II one doesn't II there's other

00:28:24,680 --> 00:28:30,050
side effects because it has problems

00:28:27,740 --> 00:28:31,970
where you can't let the CPU go into too

00:28:30,050 --> 00:28:33,470
deep of a sleep state because it will

00:28:31,970 --> 00:28:35,690
actually cause it to start collecting

00:28:33,470 --> 00:28:38,420
data in the packets so at that point you

00:28:35,690 --> 00:28:41,300
lose cpu power states because you turned

00:28:38,420 --> 00:28:43,250
on jumbo frames so you know turning on

00:28:41,300 --> 00:28:44,990
something like this you know faceboook

00:28:43,250 --> 00:28:46,150
might not appreciate their data center

00:28:44,990 --> 00:28:47,670
losing the ability to go and

00:28:46,150 --> 00:28:49,930
to a deep sleep state on your cpu

00:28:47,670 --> 00:28:58,450
because we turned on jumbo things by

00:28:49,930 --> 00:29:02,380
default from now on well yeah so with

00:28:58,450 --> 00:29:04,450
regard to the stateless offloads so any

00:29:02,380 --> 00:29:07,630
checksum well flowed as long as the

00:29:04,450 --> 00:29:10,300
device is doing the generic method

00:29:07,630 --> 00:29:13,240
should be compatible with this we

00:29:10,300 --> 00:29:16,150
probably will use RSS and there may not

00:29:13,240 --> 00:29:17,500
be a way around that as for the TSO I

00:29:16,150 --> 00:29:21,780
don't know if you thought about this but

00:29:17,500 --> 00:29:21,780
maybe maybe this is work maybe it won't

00:29:28,280 --> 00:29:36,140
I'll just yell um so for for VLAN tag

00:29:32,570 --> 00:29:38,570
insertion I'm assuming the inner tag is

00:29:36,140 --> 00:29:40,580
the one is stored in the SK buff as the

00:29:38,570 --> 00:29:43,430
metadata and the outer tag is actually

00:29:40,580 --> 00:29:47,120
on the frame is that right right okay

00:29:43,430 --> 00:29:50,720
yes there are other ways that's why I

00:29:47,120 --> 00:29:53,650
did that so this is usually not

00:29:50,720 --> 00:29:57,020
supported by Nick so these are all

00:29:53,650 --> 00:29:59,540
umbilicus cavity so the outer tag is the

00:29:57,020 --> 00:30:01,730
one that's up in the escape ax yeah and

00:29:59,540 --> 00:30:04,010
the inner tag is the one that's actually

00:30:01,730 --> 00:30:07,730
in the data and not bad grades also a

00:30:04,010 --> 00:30:10,010
Escondida yeah so in addition work yeah

00:30:07,730 --> 00:30:11,600
we can't do TSL we can't do TSO we can't

00:30:10,010 --> 00:30:13,640
do VLAN tag insertion in that case

00:30:11,600 --> 00:30:16,280
because the ordering is wrong because a

00:30:13,640 --> 00:30:18,440
lot of Nick's they will do the VLAN tag

00:30:16,280 --> 00:30:21,310
insertion at the start of the network

00:30:18,440 --> 00:30:25,790
header so if you inserted the outer tag

00:30:21,310 --> 00:30:27,110
then we can insert after the outer tab

00:30:25,790 --> 00:30:30,860
you can insert the inner tag but we

00:30:27,110 --> 00:30:39,410
can't insert the auto tag before the the

00:30:30,860 --> 00:30:42,650
inner tag right yeah I for te is but I

00:30:39,410 --> 00:30:47,090
HGB EIG be all of those other ones are

00:30:42,650 --> 00:30:48,260
not I didn't please so give it so it's

00:30:47,090 --> 00:30:49,790
just something to be aware of because

00:30:48,260 --> 00:30:50,930
yeah if you want to get TSO support

00:30:49,790 --> 00:30:53,960
you're going to probably want to leave

00:30:50,930 --> 00:30:56,540
the outer tag in the skb data and

00:30:53,960 --> 00:30:59,240
actually do the Indian tag insertion for

00:30:56,540 --> 00:31:03,400
the inner tag wait and ikes AV count

00:30:59,240 --> 00:31:05,960
skippity I go pumpkin what's that i

00:31:03,400 --> 00:31:13,040
activate can't escape any number of

00:31:05,960 --> 00:31:15,700
attacks on right on receive no tags on

00:31:13,040 --> 00:31:19,010
receiving i forgot about they thought

00:31:15,700 --> 00:31:20,810
well yeah they can skip over it but if

00:31:19,010 --> 00:31:22,310
you're doing belinda toy it can't do

00:31:20,810 --> 00:31:26,450
kneeling tagging so are you starting

00:31:22,310 --> 00:31:27,890
both VLAN tags and sqp data yeah okay so

00:31:26,450 --> 00:31:30,110
yeah so but if you're wanting to do that

00:31:27,890 --> 00:31:31,580
with so yeah okay so i'm going to a

00:31:30,110 --> 00:31:33,200
separate thing you have TSL you can skip

00:31:31,580 --> 00:31:34,020
over that's fine it's just if you're

00:31:33,200 --> 00:31:38,220
doing

00:31:34,020 --> 00:31:39,330
insertion yeah anyway let's see we're

00:31:38,220 --> 00:31:42,200
getting into some complicated details

00:31:39,330 --> 00:31:42,200
here so it's probably

00:31:47,290 --> 00:31:55,840
so anyway my propeller is like this I

00:31:52,770 --> 00:31:59,350
introduce a variable box envelope petal

00:31:55,840 --> 00:32:04,020
Angus and sit from user space like this

00:31:59,350 --> 00:32:07,000
I building and we hit away and then

00:32:04,020 --> 00:32:12,640
expand up to the acceptor package size

00:32:07,000 --> 00:32:17,050
of need buy mp3 in this case 8 so the

00:32:12,640 --> 00:32:18,910
drivers implementation is replacing TMT

00:32:17,050 --> 00:32:22,110
you with different ears of em we're

00:32:18,910 --> 00:32:26,590
trying to accept longer package size and

00:32:22,110 --> 00:32:29,230
do not change the MTU so the colony

00:32:26,590 --> 00:32:35,020
tracking stock doesn't send longer size

00:32:29,230 --> 00:32:39,460
pocket other than those indicated from

00:32:35,020 --> 00:32:44,560
Apple devices so our city is always

00:32:39,460 --> 00:32:55,840
posted so i'll be happy and anyone here

00:32:44,560 --> 00:32:58,600
can review this and in the future is it

00:32:55,840 --> 00:33:01,870
the idea to inform real device the

00:32:58,600 --> 00:33:04,380
reverse of emma hitting on creating 220

00:33:01,870 --> 00:33:04,380
read on device

00:33:06,200 --> 00:33:15,470
so this is summary the performance has

00:33:12,050 --> 00:33:20,000
improved since three pointing disappear

00:33:15,470 --> 00:33:22,070
it is stingy with one core but we need

00:33:20,000 --> 00:33:28,610
more work in the reverse for future

00:33:22,070 --> 00:33:30,890
father room point operability the

00:33:28,610 --> 00:33:35,560
problem is stocked feed on pockets get

00:33:30,890 --> 00:33:40,010
dropped due to other sites and they

00:33:35,560 --> 00:33:46,240
brought my proposal is introducing to

00:33:40,010 --> 00:33:46,240
introduce ml frames nay our city's

00:33:46,300 --> 00:33:55,450
so I have a minute left education

00:34:02,770 --> 00:34:08,120
would it be possible to just make do a

00:34:05,870 --> 00:34:09,440
criminal wide replacement and like

00:34:08,120 --> 00:34:10,669
deprecated into you this is like a

00:34:09,440 --> 00:34:12,800
question towards a day if who's probably

00:34:10,669 --> 00:34:14,960
not in the room anymore but it's the

00:34:12,800 --> 00:34:17,120
kind of thing to remove the dev MTU

00:34:14,960 --> 00:34:19,550
member and replace all instances in the

00:34:17,120 --> 00:34:21,980
kernel with a helper function that gets

00:34:19,550 --> 00:34:23,659
you the amt you back right to use cox

00:34:21,980 --> 00:34:26,360
email to do a machine replacement of all

00:34:23,659 --> 00:34:29,179
those instances and then and then it

00:34:26,360 --> 00:34:30,169
takes into account your n federal n you

00:34:29,179 --> 00:34:32,240
could just put that in the kernel

00:34:30,169 --> 00:34:35,570
function that returns the m2 you or the

00:34:32,240 --> 00:34:37,940
the buffer configuration to the drivers

00:34:35,570 --> 00:34:39,919
I'm not sure if that's a something that

00:34:37,940 --> 00:34:42,320
we would do but we've done similar

00:34:39,919 --> 00:34:45,110
transforms I think to deprecate members

00:34:42,320 --> 00:34:47,330
before so for apuleius liquid basically

00:34:45,110 --> 00:34:49,639
do that with the routing subsystem web

00:34:47,330 --> 00:34:55,490
you always use these tmq getters and

00:34:49,639 --> 00:34:57,710
setters right so yeah it's kind of a bit

00:34:55,490 --> 00:34:59,750
of a discussion of water represented and

00:34:57,710 --> 00:35:03,410
how to how it should feel and look like

00:34:59,750 --> 00:35:06,560
I think it's both things I acceptable

00:35:03,410 --> 00:35:09,020
it's possible yep so I wanted to say

00:35:06,560 --> 00:35:11,870
that we kind of had a bit of a similar

00:35:09,020 --> 00:35:13,970
problem where we have a 1500 m tu clean

00:35:11,870 --> 00:35:17,780
network and for tunneling purposes we

00:35:13,970 --> 00:35:20,000
wanted something higher than that and we

00:35:17,780 --> 00:35:23,510
didn't actually want to increase the MTU

00:35:20,000 --> 00:35:26,060
that normally gets used on transmit but

00:35:23,510 --> 00:35:28,820
we did want to increase MTU that could

00:35:26,060 --> 00:35:31,190
potentially be received and basically we

00:35:28,820 --> 00:35:35,000
introduced this receive empty you

00:35:31,190 --> 00:35:37,370
contact being different than transmit em

00:35:35,000 --> 00:35:39,320
to you so it does seem like it would be

00:35:37,370 --> 00:35:42,860
something that will be generically

00:35:39,320 --> 00:35:46,130
useful only run into the problem that if

00:35:42,860 --> 00:35:48,020
you if you if you have this receive em

00:35:46,130 --> 00:35:49,550
to you that is basically what the Knicks

00:35:48,020 --> 00:35:53,270
are supposed to be capable of receiving

00:35:49,550 --> 00:35:55,640
and you have the MTU then you actually

00:35:53,270 --> 00:35:57,470
can't transmit packets larger than m2

00:35:55,640 --> 00:36:02,450
you because you run into checks in the

00:35:57,470 --> 00:36:05,030
routing table so I don't know just kind

00:36:02,450 --> 00:36:08,030
of something along these lines would

00:36:05,030 --> 00:36:11,750
probably be a useful addition i agree i

00:36:08,030 --> 00:36:14,420
would also like go with an M arrows I

00:36:11,750 --> 00:36:15,060
guess what I've seen so you have an MMO

00:36:14,420 --> 00:36:17,550
which get

00:36:15,060 --> 00:36:19,440
like sent to the driver and an empty who

00:36:17,550 --> 00:36:21,810
which is like used for MSS cargo for

00:36:19,440 --> 00:36:24,450
about protocol stuff and then we have

00:36:21,810 --> 00:36:27,630
actually they're 26 which is ipv6 MTU

00:36:24,450 --> 00:36:29,610
which is only configurable in progress

00:36:27,630 --> 00:36:31,800
but this guy created the base of the

00:36:29,610 --> 00:36:36,140
ipv4 m2 which is also like a little bit

00:36:31,800 --> 00:36:39,920
strange and it would be nice if the IP

00:36:36,140 --> 00:36:43,460
mq discovery stuff I think it's like

00:36:39,920 --> 00:36:46,740
empty desk / loop or something like that

00:36:43,460 --> 00:36:50,340
was actually checking the highest

00:36:46,740 --> 00:36:52,590
possible MTU is instead of or may be

00:36:50,340 --> 00:36:55,680
entirely ignoring them to you instead of

00:36:52,590 --> 00:36:58,530
honoring device unto you not entirely

00:36:55,680 --> 00:37:03,420
sure how that would work sorry again so

00:36:58,530 --> 00:37:06,510
on IP sockets both for v4 and v6 you can

00:37:03,420 --> 00:37:09,960
disable you don't there's various levels

00:37:06,510 --> 00:37:13,260
of MF of path MTU discovery yep and one

00:37:09,960 --> 00:37:16,020
of them is is MTU probe which is

00:37:13,260 --> 00:37:18,210
basically the I want to do it myself I

00:37:16,020 --> 00:37:22,110
walk to send a packet and see if it gets

00:37:18,210 --> 00:37:24,390
dropped and currently you can't send a

00:37:22,110 --> 00:37:28,830
packet out if its larger than device up

00:37:24,390 --> 00:37:33,290
to you so you can actually there is an

00:37:28,830 --> 00:37:36,390
undocumented option which is and emit

00:37:33,290 --> 00:37:37,890
joshipura to little ok so documentation

00:37:36,390 --> 00:37:40,170
for that option would be nice either

00:37:37,890 --> 00:37:42,800
ever set your of the link and have it

00:37:40,170 --> 00:37:42,800
what documentation

00:37:49,900 --> 00:37:58,480
now as you consider using VX lon foot

00:37:53,480 --> 00:37:58,480
encapsulation VX down the excellent

00:38:03,790 --> 00:38:12,380
so we excel by default reduces its empty

00:38:08,180 --> 00:38:16,930
you so basically basic standards need

00:38:12,380 --> 00:38:22,640
this feature but if you want to increase

00:38:16,930 --> 00:38:26,180
the external devices until then setting

00:38:22,640 --> 00:38:29,630
the a meddling with the VXR expiration

00:38:26,180 --> 00:38:34,180
etheline will help I think they also

00:38:29,630 --> 00:38:39,410
mean instead of the BB done talking yes

00:38:34,180 --> 00:38:41,180
just use one vehicle in tag videos won't

00:38:39,410 --> 00:38:46,550
be excellent tag instead of double

00:38:41,180 --> 00:38:50,300
vehicle on tagging BB XL so when the

00:38:46,550 --> 00:39:07,610
excellent tag we're now you use to VLAN

00:38:50,300 --> 00:39:09,640
tag along the x star like type tag the

00:39:07,610 --> 00:39:11,780
first feline tag is getting added

00:39:09,640 --> 00:39:13,490
outside of their network right and

00:39:11,780 --> 00:39:16,160
they're only adding the second VLAN tag

00:39:13,490 --> 00:39:18,500
so they'll have to strip the first VLAN

00:39:16,160 --> 00:39:21,830
top tag off at the edge and replace it

00:39:18,500 --> 00:39:23,720
with a VX landtag and have a mapping

00:39:21,830 --> 00:39:28,580
table yeah and then do a reverse when it

00:39:23,720 --> 00:39:30,760
leaves their network there we go I'm too

00:39:28,580 --> 00:39:30,760
loud

00:39:39,859 --> 00:39:42,859
ok

00:39:47,160 --> 00:39:49,550

YouTube URL: https://www.youtube.com/watch?v=KFrE3T8BS2w


