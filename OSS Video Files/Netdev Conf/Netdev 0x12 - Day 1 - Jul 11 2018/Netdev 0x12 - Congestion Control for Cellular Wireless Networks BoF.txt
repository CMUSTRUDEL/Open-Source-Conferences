Title: Netdev 0x12 - Congestion Control for Cellular Wireless Networks BoF
Publication date: 2018-08-01
Playlist: Netdev 0x12 - Day 1 - Jul 11 2018
Description: 
	Hari Balakrishnan chaired a BoF discussion at Netdev 0x12 in Montreal on July
11th, 2018 to help formalize the constraints of the problem and ways in which
the community should evaluate congestion control protocols for cellular
networks.

Cellular networks exhibit significant variations in bottleneck link rates even
over short time durations. AQM techniques like fq-codel with ECN feedback are
insufficient.

It is challenging to properly evaluate congestion control approaches over
cellular network paths; it gets difficult when it involves in-network
mechanisms since it is not easy to deploy a test network running new
network-layer mechanisms in such setups.

This BOF put forward an evaluation technique involving collection of real-world
cellular network traces and then replayed them on Linux based infrastructure.
The Mahimahi toolset facilitates such a setup utilizing Linux containers.
This approach allows for experimenting and validating newly coded algorithms on
Linux in an accurate environment.

To kick things off in this BoF and frame future discussions, Hari illustrated
how to use collected traces and evaluated the Accel-Brake Control (ABC)
approach using the Mahimahi toolset.

More info:
https://www.netdevconf.org/0x12/session.html?congestion-control-for-cellular-wireless-networks
Captions: 
	00:00:06,440 --> 00:00:57,379
all right because

00:01:13,230 --> 00:01:16,279
[Music]

00:04:15,610 --> 00:04:19,810
mm oh there are shows and object

00:04:17,780 --> 00:04:19,810
recognition

00:04:21,040 --> 00:04:25,550
the second area of interest is the

00:04:23,660 --> 00:04:43,670
project that we started with scientists

00:04:25,550 --> 00:04:44,930
at MIT this interactive video and so

00:04:43,670 --> 00:04:46,940
I'll talk a little bit about this drone

00:04:44,930 --> 00:04:48,500
project that we're doing there's a

00:04:46,940 --> 00:04:57,220
variety of different applications but

00:04:48,500 --> 00:05:01,750
the basic idea is to have mm interesting

00:04:57,220 --> 00:05:01,750
so here is

00:05:20,790 --> 00:05:23,949
[Music]

00:07:03,419 --> 00:08:11,279
so you have so the other hand if you

00:08:08,799 --> 00:08:11,279
have

00:08:11,720 --> 00:08:14,809
[Music]

00:08:38,519 --> 00:08:43,029
so what we'd honestly like is something

00:08:41,440 --> 00:08:44,500
that gives you high throughput but also

00:08:43,029 --> 00:08:49,779
delay that looks like so you want that

00:08:44,500 --> 00:09:01,750
and that here's the demonstration game

00:08:49,779 --> 00:09:04,170
there's a game here I just want to show

00:09:01,750 --> 00:09:04,170
you what

00:09:33,449 --> 00:09:56,669
all right so what is the other sir

00:11:07,279 --> 00:11:59,300
you might have the but there's no to the

00:12:21,080 --> 00:12:49,940
other because the

00:13:07,860 --> 00:14:56,790
and so you always behind problem is that

00:14:37,320 --> 00:14:58,320
seem like these are good ideas but the

00:14:56,790 --> 00:15:01,520
other real problem is that in order to

00:14:58,320 --> 00:15:01,520
get these today

00:15:02,180 --> 00:15:06,800
it's sort of impractical to go ahead and

00:15:13,790 --> 00:15:17,270
but ideas

00:15:48,760 --> 00:17:27,280
that gives you so station somehow

00:17:23,900 --> 00:17:27,280
figures are weather

00:18:38,549 --> 00:18:45,070
so the important thing here is that this

00:18:41,080 --> 00:18:47,110
gives you a height and the point here is

00:18:45,070 --> 00:18:51,370
you don't necessarily need to

00:18:47,110 --> 00:18:53,380
communicate an explicit package because

00:18:51,370 --> 00:18:55,150
within one roundtrip you can go all the

00:18:53,380 --> 00:18:56,470
way from taking your current window and

00:18:55,150 --> 00:19:00,510
bringing it all the way down to zero

00:18:56,470 --> 00:19:03,190
which you would do by setting every

00:19:00,510 --> 00:19:12,340
break or you can double the entire

00:19:03,190 --> 00:19:15,750
congestion window by setting every so

00:19:12,340 --> 00:19:15,750
within one round-trip time you have a

00:19:22,470 --> 00:19:27,160
direct example here the target window

00:19:25,660 --> 00:19:29,679
that the base station determines for

00:19:27,160 --> 00:19:31,390
users sixty and this various control

00:19:29,679 --> 00:19:33,750
rules you can apply to determine the

00:19:31,390 --> 00:19:33,750
target

00:19:39,990 --> 00:19:46,429
that link if the target is 60 the target

00:19:44,520 --> 00:19:49,260
window says the country the size is 40

00:19:46,429 --> 00:19:56,059
so the question is what is the fraction

00:19:49,260 --> 00:19:59,820
of bits that must be set to accelerate

00:19:56,059 --> 00:20:01,559
so your current window size is 40 you

00:19:59,820 --> 00:20:03,179
want to get to 60 so what fraction of

00:20:01,559 --> 00:20:11,790
the bits in that window should be set to

00:20:03,179 --> 00:20:17,720
accelerate and well if you set all of

00:20:11,790 --> 00:20:17,720
the things to accelerate it goes to 80

00:20:18,950 --> 00:20:25,340
if you said all of the ones to

00:20:21,679 --> 00:20:25,340
accelerate it goes our body

00:21:03,960 --> 00:22:38,280
so you know it's so challenging in its

00:22:35,860 --> 00:22:38,280
packets

00:22:52,080 --> 00:23:11,070
there are hundreds of you if you find

00:23:16,530 --> 00:24:34,150
that makes sense to us knowing that for

00:23:57,549 --> 00:24:37,590
example somebody knows this is not so

00:24:34,150 --> 00:24:37,590
what you really need is something that

00:25:52,530 --> 00:25:55,630
[Music]

00:25:56,150 --> 00:26:01,830
we also want to make sure to work I

00:25:59,669 --> 00:26:19,710
think there's a way to do this because

00:26:01,830 --> 00:26:22,250
although it turns out there are two

00:26:19,710 --> 00:26:22,250
other bits

00:26:35,910 --> 00:28:12,300
because it is

00:28:45,230 --> 00:29:37,140
now because you might be able to but you

00:29:03,120 --> 00:29:50,370
have no idea something which says that

00:29:37,140 --> 00:29:52,550
under similar conditions yeah that's

00:29:50,370 --> 00:29:52,550
true

00:30:21,240 --> 00:31:51,330
so there's so actually

00:32:04,240 --> 00:33:19,059
looks like you can see the exactly the

00:32:13,580 --> 00:33:19,059
same the y-axis

00:34:17,389 --> 00:35:29,170
I think so

00:36:16,240 --> 00:36:19,240
problem

00:38:53,090 --> 00:38:56,169
[Music]

00:39:36,500 --> 00:39:46,440
everything to the right so the inversion

00:39:42,810 --> 00:39:49,160
problem is the characteristics of what

00:39:46,440 --> 00:39:49,160
I'm trying to solve

00:42:03,230 --> 00:42:07,760
we put so much effort into the

00:51:14,900 --> 00:51:19,590
we've tried it with a bunch of ecn

00:51:17,580 --> 00:51:21,090
things it works but I take your point

00:51:19,590 --> 00:51:24,600
there could be some very zealous for

00:51:21,090 --> 00:51:27,420
firewalls yeah yeah not sure exactly

00:51:24,600 --> 00:51:31,430
what the behavior on the wild people are

00:51:27,420 --> 00:51:31,430
trying to measure what ECN behavior is

00:51:32,990 --> 00:51:40,560
has been doing some experiments turning

00:51:35,370 --> 00:51:42,660
on ezn on the internet actually works

00:51:40,560 --> 00:51:44,190
which gives you a sense of how many

00:51:42,660 --> 00:51:47,550
boxes actually uzc and in the

00:51:44,190 --> 00:51:50,070
traditional way i don't know if you've

00:51:47,550 --> 00:51:54,030
done experiments with those boxes what

00:51:50,070 --> 00:51:56,070
happens happens yeah I mean one thing

00:51:54,030 --> 00:51:57,350
I'll say is that we're primarily focused

00:51:56,070 --> 00:51:59,900
this on

00:51:57,350 --> 00:52:01,580
where this isn't as much of a problem

00:51:59,900 --> 00:52:03,530
once they've broken their in the proxy

00:52:01,580 --> 00:52:06,560
so it's more a question of what home

00:52:03,530 --> 00:52:09,080
network routers do it islands and there

00:52:06,560 --> 00:52:10,910
it I'm not home I mean cellular guys do

00:52:09,080 --> 00:52:13,760
it and it seems to work my sense is that

00:52:10,910 --> 00:52:16,340
a lot of the ACN I don't have the Apple

00:52:13,760 --> 00:52:18,260
access to those results but my sense

00:52:16,340 --> 00:52:19,580
would be from personal experience that a

00:52:18,260 --> 00:52:21,340
lot of the things that break it are the

00:52:19,580 --> 00:52:25,160
things that people put for corporate

00:52:21,340 --> 00:52:27,230
type firewalls and they may be a

00:52:25,160 --> 00:52:29,660
different kettle of fish

00:52:27,230 --> 00:52:30,860
but but I take your point I think part

00:52:29,660 --> 00:52:33,050
of it is this is something that

00:52:30,860 --> 00:52:35,150
shouldn't break the firewalls but there

00:52:33,050 --> 00:52:37,760
are other clear question but then I have

00:52:35,150 --> 00:52:41,120
question back for you okay yeah so my my

00:52:37,760 --> 00:52:55,720
other that was I wanted to make sure

00:52:41,120 --> 00:52:55,720
that I you're still doing these things

00:52:56,290 --> 00:53:02,600
[Music]

00:52:57,700 --> 00:53:04,430
per user that helps its per user so I

00:53:02,600 --> 00:53:06,380
think I think this a idea is its per

00:53:04,430 --> 00:53:11,390
user and that's something that both

00:53:06,380 --> 00:53:13,040
Wi-Fi and cellular have so within users

00:53:11,390 --> 00:53:15,560
it's almost doesn't matter what you do

00:53:13,040 --> 00:53:16,790
you could sort of allocate them in any

00:53:15,560 --> 00:53:18,590
way it doesn't matter

00:53:16,790 --> 00:53:21,140
our feeling because the endpoints can

00:53:18,590 --> 00:53:22,340
then interpret it for a given send you

00:53:21,140 --> 00:53:24,140
know think they could interpret it in

00:53:22,340 --> 00:53:25,760
any way so the model here is per user

00:53:24,140 --> 00:53:28,400
because that's the granularity of

00:53:25,760 --> 00:53:30,320
billing and skewing and so forth you

00:53:28,400 --> 00:53:32,090
didn't see that I'm sorry yeah but I

00:53:30,320 --> 00:53:33,860
mean does that help but it does actually

00:53:32,090 --> 00:53:36,560
because I was going to say that with

00:53:33,860 --> 00:53:41,930
protocols like quick here the idea of a

00:53:36,560 --> 00:53:43,610
flow is changing quite a bit but I've

00:53:41,930 --> 00:53:45,170
always had this notion right from this

00:53:43,610 --> 00:53:47,030
congestion manager idea that it should

00:53:45,170 --> 00:53:49,400
just be done with users and never have

00:53:47,030 --> 00:53:51,800
to worry about flows and I think other

00:53:49,400 --> 00:53:54,530
people have said that as well that's a

00:53:51,800 --> 00:53:56,510
completely fair point and at least maybe

00:53:54,530 --> 00:53:57,950
it's worth reimposing here that yeah

00:53:56,510 --> 00:54:01,460
it's important for people to think about

00:53:57,950 --> 00:54:04,090
user level congestion management or host

00:54:01,460 --> 00:54:04,090
condition

00:54:05,150 --> 00:54:10,789
and I definitely like that about this

00:54:07,579 --> 00:54:13,039
proposal then but you keep talking about

00:54:10,789 --> 00:54:14,839
having wanting to do this at the

00:54:13,039 --> 00:54:16,819
cellular operators and the senders

00:54:14,839 --> 00:54:27,380
inside the cellular operators I get that

00:54:16,819 --> 00:54:28,970
but but but as you perhaps know it

00:54:27,380 --> 00:54:33,319
doesn't change it doesn't change it's

00:54:28,970 --> 00:54:34,819
just no you I mean we'd like to but you

00:54:33,319 --> 00:54:36,980
know it's a little bit more daunting to

00:54:34,819 --> 00:54:38,210
change the millions of servers but on

00:54:36,980 --> 00:54:40,279
the other hand if quick is something

00:54:38,210 --> 00:54:43,190
that doesn't require you to convince

00:54:40,279 --> 00:54:44,480
millions of people it's something that

00:54:43,190 --> 00:54:47,180
yeah I'd be great to see something like

00:54:44,480 --> 00:54:49,010
this in quake and in fact even with

00:54:47,180 --> 00:54:51,619
Wi-Fi I think it could be quite doable

00:54:49,010 --> 00:54:54,440
with a few of these access point the

00:54:51,619 --> 00:54:56,630
verizon colleagues Fung and Vikram have

00:54:54,440 --> 00:55:00,140
been like really interested in making

00:54:56,630 --> 00:55:02,630
this work on the Wi-Fi side as well in

00:55:00,140 --> 00:55:06,619
the Verizon type of I mean I have a

00:55:02,630 --> 00:55:09,920
verizon fios Wi-Fi something so great to

00:55:06,619 --> 00:55:20,539
put that in together with quick thank

00:55:09,920 --> 00:55:23,569
you hello this is when in some other

00:55:20,539 --> 00:55:26,960
word when you say cellular voice it's

00:55:23,569 --> 00:55:30,230
just a you know cellular voice and that

00:55:26,960 --> 00:55:32,480
is actually treated differently in in

00:55:30,230 --> 00:55:36,559
the base stations and in within the cell

00:55:32,480 --> 00:55:40,549
network when you say just voice or data

00:55:36,559 --> 00:55:42,500
I mean if it's over the top the cellular

00:55:40,549 --> 00:55:45,109
network doesn't really distinguish if is

00:55:42,500 --> 00:55:46,609
the voice or the data and therefore it's

00:55:45,109 --> 00:55:51,440
the same treatment is actually given

00:55:46,609 --> 00:55:55,099
just want to make clear that so any if

00:55:51,440 --> 00:55:57,140
you actually use your you know phone to

00:55:55,099 --> 00:56:00,170
actually call somebody then that traffic

00:55:57,140 --> 00:56:02,569
is actually you know treated with low

00:56:00,170 --> 00:56:05,599
delay and all that but if you use more

00:56:02,569 --> 00:56:06,380
like you know let's say some

00:56:05,599 --> 00:56:08,660
over-the-top

00:56:06,380 --> 00:56:11,089
voice and that actually goes to the

00:56:08,660 --> 00:56:12,680
deeper bear bearer and it's actually

00:56:11,089 --> 00:56:15,109
handled exactly same as the data

00:56:12,680 --> 00:56:18,420
hesitate okay so that's one thing and

00:56:15,109 --> 00:56:21,450
the other thing is so that works

00:56:18,420 --> 00:56:26,119
tend to deploy some sort of like you

00:56:21,450 --> 00:56:29,099
know police sir that actually drops the

00:56:26,119 --> 00:56:32,430
packets for some traffic day doesn't

00:56:29,099 --> 00:56:35,609
want to have to allocate too many too

00:56:32,430 --> 00:56:40,290
much bandwidth and that might be a

00:56:35,609 --> 00:56:44,280
little bit tricky because you know it's

00:56:40,290 --> 00:56:46,079
the enforcement point and the actual so

00:56:44,280 --> 00:56:48,650
so basically that will actually move the

00:56:46,079 --> 00:56:51,780
Punjab the bottleneck point from the

00:56:48,650 --> 00:56:54,210
actually you know be from from you know

00:56:51,780 --> 00:56:55,619
these two you know that enforcement

00:56:54,210 --> 00:57:01,940
point so I just want to actually you

00:56:55,619 --> 00:57:01,940
know point that out I see

00:57:05,099 --> 00:57:09,479
I don't have a question you just wanna

00:57:06,779 --> 00:57:12,630
make sure that if you want to continue

00:57:09,479 --> 00:57:19,609
this is great but we are slightly past

00:57:12,630 --> 00:57:19,609
deadline for time more questions

00:57:25,400 --> 00:57:32,760
[Applause]

00:57:47,010 --> 00:57:50,209
[Music]

00:57:56,430 --> 00:57:59,650

YouTube URL: https://www.youtube.com/watch?v=nO0nbIFEJqs


