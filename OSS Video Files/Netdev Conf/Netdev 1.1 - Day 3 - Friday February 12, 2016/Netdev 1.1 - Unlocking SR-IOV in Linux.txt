Title: Netdev 1.1 - Unlocking SR-IOV in Linux
Publication date: 2016-03-15
Playlist: Netdev 1.1 - Day 3 - Friday February 12, 2016
Description: 
	John Fastabend
February 2016
Captions: 
	00:00:00,290 --> 00:00:09,780
so this is the SR I of eboff um seems

00:00:07,020 --> 00:00:10,769
like grad a lotta SR iov topics while we

00:00:09,780 --> 00:00:13,290
were here so I thought it would be

00:00:10,769 --> 00:00:15,599
worthwhile have a Buffy I have a quick

00:00:13,290 --> 00:00:16,830
overview of existing support at least

00:00:15,599 --> 00:00:18,480
what I put in there there's probably

00:00:16,830 --> 00:00:20,580
more things that are actually supported

00:00:18,480 --> 00:00:22,740
I know Alex did a did kind of an

00:00:20,580 --> 00:00:23,910
overview today and kind of showed some

00:00:22,740 --> 00:00:26,789
stuff that you could deal with v F so

00:00:23,910 --> 00:00:28,199
that was good we just had this the flow

00:00:26,789 --> 00:00:30,449
based thing that integrated with over

00:00:28,199 --> 00:00:33,350
yes I am I sort of left that off the

00:00:30,449 --> 00:00:36,510
list here but we can talk about it um

00:00:33,350 --> 00:00:38,850
you know I kind of would like to get the

00:00:36,510 --> 00:00:42,090
fundamental representation correct and

00:00:38,850 --> 00:00:43,110
then bill OES on top but I think we'll

00:00:42,090 --> 00:00:46,950
have more than enough time if we want to

00:00:43,110 --> 00:00:49,440
talk about ovs as well I just jump in

00:00:46,950 --> 00:00:51,930
feel free to jump up and talk to because

00:00:49,440 --> 00:00:54,660
it's just me up here so you'll be quick

00:00:51,930 --> 00:00:55,949
and boring if nobody says anything which

00:00:54,660 --> 00:00:57,989
I that's what you want because it's

00:00:55,949 --> 00:01:02,010
friday afternoon then and don't say

00:00:57,989 --> 00:01:04,350
anything alright so it's a it's been a

00:01:02,010 --> 00:01:06,000
long time since we've had SRV support

00:01:04,350 --> 00:01:09,330
and we've sort of been in the same state

00:01:06,000 --> 00:01:11,400
for multiple years now at least since

00:01:09,330 --> 00:01:14,400
we've had 10 gig cards and I haven't

00:01:11,400 --> 00:01:18,299
really seen a whole lot of sort of new

00:01:14,400 --> 00:01:21,420
and innovation on this side of Linux

00:01:18,299 --> 00:01:24,060
lately you know work the discussions

00:01:21,420 --> 00:01:26,729
been coming up and starting to go

00:01:24,060 --> 00:01:29,610
forward but what we haven't really made

00:01:26,729 --> 00:01:33,630
a ton of progress so you know we added

00:01:29,610 --> 00:01:36,630
this FTB add as part of the bridge tool

00:01:33,630 --> 00:01:39,060
I think we call it BR for a while but

00:01:36,630 --> 00:01:43,710
you know so we had bridge ftp ad and

00:01:39,060 --> 00:01:45,540
then they kind of as part of that the

00:01:43,710 --> 00:01:48,290
the Linux bridge got a lot of support

00:01:45,540 --> 00:01:53,880
for vlans it got a lot of support for

00:01:48,290 --> 00:01:56,040
doing you know basically supporting

00:01:53,880 --> 00:01:58,409
multiple vlans supporting multicasts and

00:01:56,040 --> 00:01:59,939
all this good stuff and I don't know if

00:01:58,409 --> 00:02:01,140
any of the drivers actually have added

00:01:59,939 --> 00:02:02,640
to me of that support I haven't seen it

00:02:01,140 --> 00:02:03,750
certainly the intel drivers don't

00:02:02,640 --> 00:02:06,000
support it and i haven't seen any

00:02:03,750 --> 00:02:08,849
patches too so so maybe that would just

00:02:06,000 --> 00:02:12,959
be a nice thing to see you know l to

00:02:08,849 --> 00:02:15,069
view actual truly l to support for 4 vs

00:02:12,959 --> 00:02:16,480
the other thing that we did at the same

00:02:15,069 --> 00:02:18,040
time as we totally integrated with

00:02:16,480 --> 00:02:21,750
libvirt which means which means that you

00:02:18,040 --> 00:02:24,010
have integration with anything above

00:02:21,750 --> 00:02:26,440
like a controller running above linux

00:02:24,010 --> 00:02:30,730
easily kind of native support for it if

00:02:26,440 --> 00:02:32,319
it uses limburg I I kind of like this

00:02:30,730 --> 00:02:33,879
model it's something OpenStack knows how

00:02:32,319 --> 00:02:35,610
to use it's something that other

00:02:33,879 --> 00:02:38,049
controllers know how to use and other

00:02:35,610 --> 00:02:39,670
orchestration layers I'd like to see

00:02:38,049 --> 00:02:41,319
that kind of going forward you know if

00:02:39,670 --> 00:02:43,299
people add new features it would be nice

00:02:41,319 --> 00:02:46,150
if they also added this kind of support

00:02:43,299 --> 00:02:48,610
into levert and and we could kind of

00:02:46,150 --> 00:02:50,319
keep that going I know it's poorly

00:02:48,610 --> 00:02:51,430
documented it's on my list i'm going to

00:02:50,319 --> 00:02:53,799
somebody want to pick that up that would

00:02:51,430 --> 00:02:55,629
be awesome because right now there's

00:02:53,799 --> 00:02:57,099
this kind of cryptic XML you can type in

00:02:55,629 --> 00:02:59,890
and I've actually gotten pretty good at

00:02:57,099 --> 00:03:02,079
it myself but I don't know if it's well

00:02:59,890 --> 00:03:05,109
known how to build these xml files that

00:03:02,079 --> 00:03:07,450
qemu uses to generate you know s ROV

00:03:05,109 --> 00:03:15,099
alex is shaking his head have you done

00:03:07,450 --> 00:03:18,790
the cool xml the tricks yeah so yeah so

00:03:15,099 --> 00:03:21,549
you can you can if you have an xml qemu

00:03:18,790 --> 00:03:23,700
foo you can make this you can make make

00:03:21,549 --> 00:03:27,880
it all happen automatically for you but

00:03:23,700 --> 00:03:29,500
so there's some work there and in wheat

00:03:27,880 --> 00:03:32,049
at the same time we sort of added basic

00:03:29,500 --> 00:03:35,019
I peeling you know support so you can

00:03:32,049 --> 00:03:36,849
change some very basic attributes you

00:03:35,019 --> 00:03:39,639
know I think the mac address can be set

00:03:36,849 --> 00:03:40,840
through this I don't know what else to

00:03:39,639 --> 00:03:43,090
link to be put up and down I believe

00:03:40,840 --> 00:03:45,790
maybe a few other things but we really

00:03:43,090 --> 00:03:52,030
haven't made much progress i don't think

00:03:45,790 --> 00:03:53,349
and on that side so okay good so one of

00:03:52,030 --> 00:03:55,660
the most fundamental things would be

00:03:53,349 --> 00:03:59,609
adding multiple mac addresses right so

00:03:55,660 --> 00:04:02,049
today we do IP link add VF mac address

00:03:59,609 --> 00:04:04,900
you know that there's one option would

00:04:02,049 --> 00:04:06,459
be to just extend that it maybe add more

00:04:04,900 --> 00:04:09,910
a mac addresses say you want to have

00:04:06,459 --> 00:04:11,199
four or more backward dresses I don't

00:04:09,910 --> 00:04:15,430
know if this is such a good idea but

00:04:11,199 --> 00:04:17,349
it's one idea had its it's sort of

00:04:15,430 --> 00:04:18,639
trivial to implement which is the nice

00:04:17,349 --> 00:04:20,910
thing you don't have to go and reinvent

00:04:18,639 --> 00:04:25,230
anything it's already there

00:04:20,910 --> 00:04:33,750
it's like a fairly small patch and most

00:04:25,230 --> 00:04:36,240
of the hardware supports it do you want

00:04:33,750 --> 00:04:39,120
the hypervisor to give the mac another

00:04:36,240 --> 00:04:42,090
mac address to the VA to the vm yeah or

00:04:39,120 --> 00:04:44,340
you want the vm to it because hundred

00:04:42,090 --> 00:04:47,010
nakarde have a single mark that is

00:04:44,340 --> 00:04:49,830
burned in the factory that is the

00:04:47,010 --> 00:04:53,040
markets you give him the early f4 to

00:04:49,830 --> 00:04:55,260
this VF ok if this we have one to have

00:04:53,040 --> 00:04:57,600
like like a standard Linux machine if

00:04:55,260 --> 00:05:00,090
you want to have more more mac addresses

00:04:57,600 --> 00:05:02,160
your is the mac address of the video of

00:05:00,090 --> 00:05:06,050
the vm you don't need to give him

00:05:02,160 --> 00:05:08,580
through the nic those mac address oh

00:05:06,050 --> 00:05:10,080
it's more of a receive thing right you

00:05:08,580 --> 00:05:12,090
receive packets with this macro she

00:05:10,080 --> 00:05:14,400
wanna surrender this VF so the API

00:05:12,090 --> 00:05:17,550
should be and we're supporting it that

00:05:14,400 --> 00:05:20,130
the vm that's running on the on the

00:05:17,550 --> 00:05:23,580
virtual function can ask for more more

00:05:20,130 --> 00:05:25,050
mac addresses this this is a model where

00:05:23,580 --> 00:05:27,510
you trust your vm to tell you what

00:05:25,050 --> 00:05:29,550
matters is it's once that's that's one

00:05:27,510 --> 00:05:31,830
model can be supported the other model

00:05:29,550 --> 00:05:34,230
is you you already know what mac

00:05:31,830 --> 00:05:38,220
addresses on you allocate a vm a set of

00:05:34,230 --> 00:05:40,169
mac addresses what's that livered style

00:05:38,220 --> 00:05:41,790
this is it yeah like a liver kind of

00:05:40,169 --> 00:05:43,290
thing where you provision your network

00:05:41,790 --> 00:05:44,430
and then you tell the vm that it's

00:05:43,290 --> 00:05:46,290
allowed to have to use these mac

00:05:44,430 --> 00:05:48,590
addresses because usually what open

00:05:46,290 --> 00:05:52,530
stock is doing he will give you a few

00:05:48,590 --> 00:05:54,680
networks if you have virtual knicks if

00:05:52,530 --> 00:06:04,710
you want to have you mac address a few

00:05:54,680 --> 00:06:05,850
villains you'll get yes but OpenStack

00:06:04,710 --> 00:06:07,680
already does have the option of

00:06:05,850 --> 00:06:11,280
supporting additional address pairs per

00:06:07,680 --> 00:06:14,280
port so if I want to specify that a

00:06:11,280 --> 00:06:15,690
given interface can support five

00:06:14,280 --> 00:06:17,520
different IPS in each of those with a

00:06:15,690 --> 00:06:19,680
specific mac address that's possible now

00:06:17,520 --> 00:06:21,210
with current OpenStack because there's a

00:06:19,680 --> 00:06:25,830
mechanism was that I think it's IP

00:06:21,210 --> 00:06:28,080
allowed adders that'll let you populate

00:06:25,830 --> 00:06:29,669
those so it would just be a matter of

00:06:28,080 --> 00:06:31,340
translating the OpenStack command into

00:06:29,669 --> 00:06:33,980
this for VF

00:06:31,340 --> 00:06:35,240
and it's like that that's where the

00:06:33,980 --> 00:06:37,370
live-work support comes on right is just

00:06:35,240 --> 00:06:41,870
the back end you translate it there and

00:06:37,370 --> 00:06:44,060
right throw down via net link yeah so if

00:06:41,870 --> 00:06:46,400
it's a need so it's not real problem of

00:06:44,060 --> 00:06:52,970
course to implement it is a question

00:06:46,400 --> 00:06:55,220
over here or comment or something yeah I

00:06:52,970 --> 00:06:56,660
got I got for Mike's up here somebody

00:06:55,220 --> 00:07:00,710
could join me I don't have to sit by

00:06:56,660 --> 00:07:02,660
myself alright so one way of

00:07:00,710 --> 00:07:05,120
interpreting the extra mac address would

00:07:02,660 --> 00:07:08,479
be the way I understood this as that

00:07:05,120 --> 00:07:10,490
you're letting the PF know to Allah and

00:07:08,479 --> 00:07:14,630
extra mac address to be used by the VF

00:07:10,490 --> 00:07:17,990
would be if you born to be eps and and

00:07:14,630 --> 00:07:20,120
the bonding driver flips over and it

00:07:17,990 --> 00:07:23,210
configures yet another mac address and

00:07:20,120 --> 00:07:26,120
then and the BF goes then asks

00:07:23,210 --> 00:07:28,039
permission and this this would be a hint

00:07:26,120 --> 00:07:29,900
to the BF to a love that mac address

00:07:28,039 --> 00:07:31,280
right now there's there's no way you can

00:07:29,900 --> 00:07:33,500
do that right either either you let it

00:07:31,280 --> 00:07:36,020
make up arbitrary mac addresses right or

00:07:33,500 --> 00:07:39,320
oregon turn on the IPL out adders me let

00:07:36,020 --> 00:07:41,270
the bird i/o port have to go and change

00:07:39,320 --> 00:07:43,669
its MAC address yeah neither those are

00:07:41,270 --> 00:07:45,110
really great right so this would let you

00:07:43,669 --> 00:07:46,910
say like give it a whitelist right of

00:07:45,110 --> 00:07:48,860
all sorts of mac address lay down sit

00:07:46,910 --> 00:07:50,720
back and forth to where the VF can do

00:07:48,860 --> 00:07:52,760
either the verdi yo MAC address or its

00:07:50,720 --> 00:07:54,849
own yeah and the other side canceling it

00:07:52,760 --> 00:07:59,180
doesn't matter which port comes up first

00:07:54,849 --> 00:08:02,030
right so I clearly see the need for one

00:07:59,180 --> 00:08:03,440
old mac address of four areas at least

00:08:02,030 --> 00:08:04,940
two I mean if we're gonna allow to it

00:08:03,440 --> 00:08:06,830
might as well a lot of 10 or 20 or

00:08:04,940 --> 00:08:09,500
whatever right exactly it's just a for

00:08:06,830 --> 00:08:10,880
loop in whatever it's a list and if

00:08:09,500 --> 00:08:14,389
somebody comes up with some double

00:08:10,880 --> 00:08:16,039
bonded something or another than more

00:08:14,389 --> 00:08:17,780
powerful if you have to still bill deal

00:08:16,039 --> 00:08:20,030
with is the situation where you run out

00:08:17,780 --> 00:08:21,860
of mac addresses right right that I'd be

00:08:20,030 --> 00:08:23,419
like Annie no mem type response yeah I

00:08:21,860 --> 00:08:25,340
think we just throw the standard error

00:08:23,419 --> 00:08:26,900
back and let live vert populate that all

00:08:25,340 --> 00:08:28,430
the way up a stack and then OpenStack

00:08:26,900 --> 00:08:30,620
will wrap some Python around it or

00:08:28,430 --> 00:08:33,050
something yes undecipherable error

00:08:30,620 --> 00:08:34,940
message at that level yet so for the

00:08:33,050 --> 00:08:36,890
i-40 at least it's coming as part of the

00:08:34,940 --> 00:08:39,919
trusted we have support adding multiple

00:08:36,890 --> 00:08:41,240
and two addresses well this one even

00:08:39,919 --> 00:08:43,010
necessarily need to be something that be

00:08:41,240 --> 00:08:45,440
trusted VF just because this would be

00:08:43,010 --> 00:08:47,750
the PF specifying this VF can

00:08:45,440 --> 00:08:50,540
support mac address a mac address be mac

00:08:47,750 --> 00:08:52,100
address see so this is the PF explicitly

00:08:50,540 --> 00:08:53,870
saying these are the max that this via

00:08:52,100 --> 00:08:55,820
can support instead right now the

00:08:53,870 --> 00:08:57,800
current interface is you can only

00:08:55,820 --> 00:09:00,680
support this one mac address on the VF

00:08:57,800 --> 00:09:02,510
which ends up being really limiting yeah

00:09:00,680 --> 00:09:05,180
but think about it like it's a normal

00:09:02,510 --> 00:09:08,810
server you buy unique you just have one

00:09:05,180 --> 00:09:10,610
mac address no most knicks don't have

00:09:08,810 --> 00:09:12,080
just one mac address which port that's

00:09:10,610 --> 00:09:15,440
the whole point of mac VLAN as you can

00:09:12,080 --> 00:09:17,870
support no but who gives used amok amok

00:09:15,440 --> 00:09:19,580
has come from the from the machine it's

00:09:17,870 --> 00:09:21,680
all right i'm from the network because

00:09:19,580 --> 00:09:23,060
when you buy not true not liver well

00:09:21,680 --> 00:09:24,500
spirit network administration said

00:09:23,060 --> 00:09:26,390
whatever mac address they want on this

00:09:24,500 --> 00:09:29,750
at the network administrator need to

00:09:26,390 --> 00:09:31,220
speak with the virtual machine you don't

00:09:29,750 --> 00:09:33,590
need to speak with danique to tell him

00:09:31,220 --> 00:09:35,810
that mano see that's the thing is that

00:09:33,590 --> 00:09:37,370
how do you how does he tell the machine

00:09:35,810 --> 00:09:39,470
that you're talking about a side channel

00:09:37,370 --> 00:09:41,120
you have to create then for us to tell

00:09:39,470 --> 00:09:43,700
the BF that these are the addresses that

00:09:41,120 --> 00:09:46,030
you can have but this is administration

00:09:43,700 --> 00:09:48,320
thing it's not like you're taking them

00:09:46,030 --> 00:09:50,540
it's not like how they get an access

00:09:48,320 --> 00:09:52,040
control list is what this is what we're

00:09:50,540 --> 00:09:54,440
creating here is an access control us

00:09:52,040 --> 00:09:57,110
that says this BF can have these mac

00:09:54,440 --> 00:10:00,020
addresses so again you can have or

00:09:57,110 --> 00:10:02,830
should go you need to can have okay

00:10:00,020 --> 00:10:05,480
that's basically the idea here and then

00:10:02,830 --> 00:10:07,910
yeah Adam so it's a filter English right

00:10:05,480 --> 00:10:10,580
right okay so not the configuration it's

00:10:07,910 --> 00:10:12,830
a filtering list right okay yeah it's

00:10:10,580 --> 00:10:15,440
still default it's usually tied to the

00:10:12,830 --> 00:10:18,410
XML that you spin up the vm with so and

00:10:15,440 --> 00:10:20,270
it's all done at the qame level and so

00:10:18,410 --> 00:10:22,280
when you build the qame level you want

00:10:20,270 --> 00:10:24,530
to spin up the vm and also configure the

00:10:22,280 --> 00:10:27,050
pfr the same from the same configuration

00:10:24,530 --> 00:10:28,640
champ it's not only mac address so why

00:10:27,050 --> 00:10:31,940
not to say that's okay i want to allow

00:10:28,640 --> 00:10:35,930
this server only to stick a port 80 only

00:10:31,940 --> 00:10:38,570
HTTP so it's the same if it's a well

00:10:35,930 --> 00:10:41,630
with the same kind semi you just why do

00:10:38,570 --> 00:10:43,040
you limiting to mac address well in this

00:10:41,630 --> 00:10:45,530
case that's just the sets the standard

00:10:43,040 --> 00:10:46,970
filtering mechanism for a lot of devices

00:10:45,530 --> 00:10:48,830
like again we have everything ends up

00:10:46,970 --> 00:10:50,480
being like the bonding scenario yeah

00:10:48,830 --> 00:10:52,700
where you have two interfaces you bond

00:10:50,480 --> 00:10:54,589
okay now we want to let the VF talk

00:10:52,700 --> 00:10:55,120
using the verdi Oh interfaces mac

00:10:54,589 --> 00:10:57,250
address

00:10:55,120 --> 00:10:59,620
or the Verdi yo interface talk using the

00:10:57,250 --> 00:11:01,360
bf's mac address we want to be able to

00:10:59,620 --> 00:11:03,310
allow either which way to work it

00:11:01,360 --> 00:11:06,760
shouldn't matter which port and you

00:11:03,310 --> 00:11:09,310
shouldn't have to go to like full blow

00:11:06,760 --> 00:11:11,170
and building a firewall to get that

00:11:09,310 --> 00:11:13,000
right like we already have this layer to

00:11:11,170 --> 00:11:14,680
support this is like a small tweak at

00:11:13,000 --> 00:11:15,940
the bottom to now support a lot of

00:11:14,680 --> 00:11:18,070
functionality that we already have in

00:11:15,940 --> 00:11:19,480
the liver layer today right it's just

00:11:18,070 --> 00:11:21,100
it's just missing because you have

00:11:19,480 --> 00:11:24,279
standard OpenStack right now when it

00:11:21,100 --> 00:11:27,070
creates a port it'll lock it down to an

00:11:24,279 --> 00:11:29,589
IP and mac address pair for BS it tries

00:11:27,070 --> 00:11:31,600
to do the same thing using just this MAC

00:11:29,589 --> 00:11:33,370
address which locks us in at one mac

00:11:31,600 --> 00:11:35,140
address and then okay if we have to do

00:11:33,370 --> 00:11:37,540
any other mac addresses over that port

00:11:35,140 --> 00:11:39,040
well it was a nice thought anyway but

00:11:37,540 --> 00:11:41,050
we're locked out do the hardware right

00:11:39,040 --> 00:11:42,880
now and so if we have the ability to let

00:11:41,050 --> 00:11:45,370
it use any of the MAC addresses that we

00:11:42,880 --> 00:11:47,980
gave the system then we can alternately

00:11:45,370 --> 00:11:49,660
route traffic through the BF there that

00:11:47,980 --> 00:11:55,870
maybe might belong to that Verdi Oh

00:11:49,660 --> 00:11:58,390
interface instead sir still the you know

00:11:55,870 --> 00:11:59,740
the solution is due ways right the PF

00:11:58,390 --> 00:12:01,810
can figure is multiple mac address

00:11:59,740 --> 00:12:04,450
whether we have or the BF says i want

00:12:01,810 --> 00:12:05,770
more mac addresses right so the BF is

00:12:04,450 --> 00:12:07,209
are the one requesting the more mac

00:12:05,770 --> 00:12:10,450
addresses and that would probably be the

00:12:07,209 --> 00:12:12,310
privilege to BF your nes we have a bit

00:12:10,450 --> 00:12:14,589
for that now right that went in there's

00:12:12,310 --> 00:12:15,940
NGO up indila yeah they're gonna check

00:12:14,589 --> 00:12:18,940
it out i was just talking about those

00:12:15,940 --> 00:12:21,940
patches that we have tried the this is

00:12:18,940 --> 00:12:25,240
hopeful it there was another in the oh

00:12:21,940 --> 00:12:27,550
c'mon spoof check yeah that's enough J

00:12:25,240 --> 00:12:29,260
that's the Sudan security to this

00:12:27,550 --> 00:12:30,670
specific market right so if it's not

00:12:29,260 --> 00:12:33,570
spoofed check it can be asked for

00:12:30,670 --> 00:12:33,570
different type

00:12:37,390 --> 00:12:41,060
there's a there's a trusted v-fib

00:12:39,620 --> 00:12:43,460
Lincoln and Rosie yeah but these new

00:12:41,060 --> 00:12:45,020
before that's yeah the trust trusted VF

00:12:43,460 --> 00:12:46,880
is what says whether or not you can

00:12:45,020 --> 00:12:48,800
request it but the spoof check is what

00:12:46,880 --> 00:12:50,060
ends up locking things down if you try

00:12:48,800 --> 00:12:53,060
to use an address you didn't request

00:12:50,060 --> 00:12:55,280
yeah it's right now so yeah it's it's

00:12:53,060 --> 00:12:58,130
not the ambiguous it's not that yeah

00:12:55,280 --> 00:13:00,140
well define I think because in mellanox

00:12:58,130 --> 00:13:03,710
we allowed to ask for many my progresses

00:13:00,140 --> 00:13:07,100
right so I guess the spoof check only

00:13:03,710 --> 00:13:09,440
limits your transmit traffic you know if

00:13:07,100 --> 00:13:11,750
it doesn't match your Mac but if you

00:13:09,440 --> 00:13:13,490
have a trusted VF a you're pretty much

00:13:11,750 --> 00:13:15,590
saying that it can do any functionality

00:13:13,490 --> 00:13:17,900
of the PF that's pretty much it so

00:13:15,590 --> 00:13:21,380
you're opening up the resources right on

00:13:17,900 --> 00:13:25,280
the device for the VF right yeah even

00:13:21,380 --> 00:13:28,550
support promiscuous promises unicast

00:13:25,280 --> 00:13:30,830
even not only multicast yep yeah cubase

00:13:28,550 --> 00:13:32,300
letting the VF possibly denial service

00:13:30,830 --> 00:13:34,760
the system if it really wants to use

00:13:32,300 --> 00:13:37,280
yeah now but you have the customers that

00:13:34,760 --> 00:13:39,860
have a few VF on yeah one or two yep and

00:13:37,280 --> 00:13:42,410
you want to write we have customer even

00:13:39,860 --> 00:13:45,710
ask four single via virtual function

00:13:42,410 --> 00:13:47,030
right like I said it's the user wants

00:13:45,710 --> 00:13:48,920
permission to shoot themselves in the

00:13:47,030 --> 00:13:50,690
foot option so it's a Kip go ahead go

00:13:48,920 --> 00:13:54,740
ahead if you think you can do it without

00:13:50,690 --> 00:13:56,900
hurting yourself or power to you alright

00:13:54,740 --> 00:13:59,330
cool I mean the advantage of doing this

00:13:56,900 --> 00:14:00,560
is it's simple it's already there this

00:13:59,330 --> 00:14:03,050
stack above it already knows how to

00:14:00,560 --> 00:14:04,820
handle it and it costs just laid right

00:14:03,050 --> 00:14:06,920
very few lines of code so if you talk

00:14:04,820 --> 00:14:09,890
about villa and mac address and think

00:14:06,920 --> 00:14:11,180
the second one is the villain right and

00:14:09,890 --> 00:14:12,680
that's already part of the FTB it's

00:14:11,180 --> 00:14:14,540
already any patch to the driver driver

00:14:12,680 --> 00:14:15,920
driver at least the intel drivers report

00:14:14,540 --> 00:14:17,120
when they get it so because they don't

00:14:15,920 --> 00:14:18,560
know what to do right they don't want to

00:14:17,120 --> 00:14:21,350
do the VLAN filtrete they do actually

00:14:18,560 --> 00:14:23,360
knows that they do we do we actually can

00:14:21,350 --> 00:14:25,850
you could get it now link yeah you can

00:14:23,360 --> 00:14:27,080
set the EF VLAN and just a hardware does

00:14:25,850 --> 00:14:29,150
the hardware understand what to do with

00:14:27,080 --> 00:14:31,190
it yeah ok cool so we do have a support

00:14:29,150 --> 00:14:33,380
files around them yeah that's was

00:14:31,190 --> 00:14:38,300
actually you can using my demo oh nice

00:14:33,380 --> 00:14:40,070
ok perfect oh yeah I do the VLAN

00:14:38,300 --> 00:14:42,220
configuration which exists today with I

00:14:40,070 --> 00:14:44,170
feeling for the VFS more like

00:14:42,220 --> 00:14:46,300
transparent VLAN

00:14:44,170 --> 00:14:48,339
the VF is not supposed to know about it

00:14:46,300 --> 00:14:51,399
and all the untagged packets get it's

00:14:48,339 --> 00:14:55,149
like a poet base v9 but I do see a need

00:14:51,399 --> 00:14:58,120
for a what what we call a guest VLAN

00:14:55,149 --> 00:15:01,690
where these packets are tagged by the VF

00:14:58,120 --> 00:15:04,750
from originated from the guest but

00:15:01,690 --> 00:15:06,459
they're okay you know you love that I

00:15:04,750 --> 00:15:09,040
mean it's not like a tenant kind of a

00:15:06,459 --> 00:15:12,310
thing it's like multiple BFS in the same

00:15:09,040 --> 00:15:14,860
enterprise using different VLAN ya

00:15:12,310 --> 00:15:17,019
feelin kinda looking is that is what Q&Q

00:15:14,860 --> 00:15:19,149
then for that kind of set up burger you

00:15:17,019 --> 00:15:21,519
couldn't or you met that on the flat

00:15:19,149 --> 00:15:23,260
right you may not use a transparent VLAN

00:15:21,519 --> 00:15:25,779
at that case and just to use a flat

00:15:23,260 --> 00:15:28,300
right single tag be much right so today

00:15:25,779 --> 00:15:35,320
we don't have a mechanism to program

00:15:28,300 --> 00:15:40,000
those kind of if you don't set can I

00:15:35,320 --> 00:15:44,410
make a higher level okay guys so so what

00:15:40,000 --> 00:15:47,079
what we have to do a thing is we I'm

00:15:44,410 --> 00:15:49,209
calling this legacy SRV and now the ovs

00:15:47,079 --> 00:15:51,310
or the flow based or the SDN one comes

00:15:49,209 --> 00:15:53,860
we have to decide if we want to

00:15:51,310 --> 00:15:55,410
productize these two models so we have

00:15:53,860 --> 00:15:58,209
to learn from a switch guy that we are

00:15:55,410 --> 00:16:01,300
like we have to to either support the

00:15:58,209 --> 00:16:03,160
dot 1d bridge or dot1q bridge you know

00:16:01,300 --> 00:16:05,949
ethernet they do it many years let's do

00:16:03,160 --> 00:16:08,019
it right well your range vinton II know

00:16:05,949 --> 00:16:09,699
if you want this to function as a letter

00:16:08,019 --> 00:16:12,339
to switch so this is something we'll

00:16:09,699 --> 00:16:16,329
define my zoo that you want to go do the

00:16:12,339 --> 00:16:19,720
SI of v m sdn one I believe we have to

00:16:16,329 --> 00:16:22,240
do both like excuse me but you wasted 20

00:16:19,720 --> 00:16:23,970
minutes now right dot1q bridge and dot

00:16:22,240 --> 00:16:26,500
Wanda bridge is something well defined

00:16:23,970 --> 00:16:27,760
let's just go learn it because we we

00:16:26,500 --> 00:16:29,319
don't know it many guys were not

00:16:27,760 --> 00:16:31,390
familiar with that no we are we're

00:16:29,319 --> 00:16:32,709
actually very familiar with it when

00:16:31,390 --> 00:16:35,920
John's passing video I mean everyone

00:16:32,709 --> 00:16:38,170
else are you let's the point of this is

00:16:35,920 --> 00:16:40,839
that the entire stack knows what this is

00:16:38,170 --> 00:16:43,510
the semantics are well understood adding

00:16:40,839 --> 00:16:45,399
another line this is very few lines of

00:16:43,510 --> 00:16:48,430
code and it adds a lot of value to

00:16:45,399 --> 00:16:49,630
libert that that's all I'm saying yes

00:16:48,430 --> 00:16:51,750
but you see people start to talk to you

00:16:49,630 --> 00:16:53,590
about the loud villains default villains

00:16:51,750 --> 00:16:55,420
trunking they

00:16:53,590 --> 00:16:57,610
is all way to define right this is all

00:16:55,420 --> 00:16:59,650
about the fire the salt problem well

00:16:57,610 --> 00:17:01,660
it's a solved problem except for know

00:16:59,650 --> 00:17:03,270
being implemented the solved way in a

00:17:01,660 --> 00:17:07,210
lot of you know but let's let's let's

00:17:03,270 --> 00:17:08,650
let's do the 100 cools and do it right

00:17:07,210 --> 00:17:12,850
why do we have to reinvent something

00:17:08,650 --> 00:17:15,550
which is already sold okay let me scope

00:17:12,850 --> 00:17:17,080
this again down this is really just to

00:17:15,550 --> 00:17:19,690
add the functionality that would be very

00:17:17,080 --> 00:17:22,300
useful to liver and OpenStack today on

00:17:19,690 --> 00:17:24,070
it on all the next array so what I say

00:17:22,300 --> 00:17:26,890
is asking this and someone has that

00:17:24,070 --> 00:17:29,260
emits all solve problems what if you

00:17:26,890 --> 00:17:30,730
don't use OBS and you don't use the open

00:17:29,260 --> 00:17:33,370
flow and the whole so that's what i said

00:17:30,730 --> 00:17:35,650
i'm referring this as this stuff so you

00:17:33,370 --> 00:17:37,090
want I think you want the dot 1d bridge

00:17:35,650 --> 00:17:39,130
for her to correct so we will do that

00:17:37,090 --> 00:17:46,420
but will not reinvent what is docked on

00:17:39,130 --> 00:17:48,130
the bridge is okay personally I'm not a

00:17:46,420 --> 00:17:50,110
big believer in the dot 1d no thank you

00:17:48,130 --> 00:17:52,720
i think we have to go to there what

00:17:50,110 --> 00:17:55,510
would we have limited resources right so

00:17:52,720 --> 00:17:59,790
i think in this space people wants to

00:17:55,510 --> 00:18:04,950
see more the the representations of size

00:17:59,790 --> 00:18:04,950
okay let's let's move on i think i think

00:18:09,360 --> 00:18:13,690
yeah okay but i think it's fair to say

00:18:12,160 --> 00:18:15,340
that people are doing here two and cue

00:18:13,690 --> 00:18:18,490
bridging today and people are doing

00:18:15,340 --> 00:18:22,390
flow-based bridging and I I don't want

00:18:18,490 --> 00:18:23,830
to get in that bit of eight here I think

00:18:22,390 --> 00:18:25,330
I'll move on but you know the point here

00:18:23,830 --> 00:18:27,460
is that we have a fairly simple thing we

00:18:25,330 --> 00:18:30,010
can do we can get a lot of value for

00:18:27,460 --> 00:18:34,840
from and I think well I'll probably work

00:18:30,010 --> 00:18:36,880
on this at some point so all right so

00:18:34,840 --> 00:18:38,950
this this is maybe a bit more

00:18:36,880 --> 00:18:40,210
controversial and you know it's like if

00:18:38,950 --> 00:18:41,530
you want to start doing things like IP

00:18:40,210 --> 00:18:46,320
addresses do you want to drive that

00:18:41,530 --> 00:18:48,990
through IP link in a similar fashion

00:18:46,320 --> 00:18:51,280
what this would mean is that you could

00:18:48,990 --> 00:18:52,690
you know also specify the IP address

00:18:51,280 --> 00:18:55,290
over the same interface that you specify

00:18:52,690 --> 00:18:58,450
the mac so you could do a mac IP pair

00:18:55,290 --> 00:18:59,590
again this is very libert ish this would

00:18:58,450 --> 00:19:01,180
be something Libert would love to

00:18:59,590 --> 00:19:02,590
probably very easy to consume from a

00:19:01,180 --> 00:19:05,620
limb for it standpoint in an OpenStack

00:19:02,590 --> 00:19:07,059
standpoint and again it doesn't look

00:19:05,620 --> 00:19:09,340
like a huge

00:19:07,059 --> 00:19:12,059
a huge addition we already have the VF

00:19:09,340 --> 00:19:19,870
notation we already have all the options

00:19:12,059 --> 00:19:22,600
and you can go from there yeah I know

00:19:19,870 --> 00:19:24,129
ipv4 ipv6 and then you want to start

00:19:22,600 --> 00:19:26,200
doing around what you learn are you

00:19:24,129 --> 00:19:29,559
going to put those IP addresses you need

00:19:26,200 --> 00:19:31,779
to specify what on what villain right

00:19:29,559 --> 00:19:36,210
yeah so because currently is working

00:19:31,779 --> 00:19:38,559
well with dhcp yeah I know so I mean I

00:19:36,210 --> 00:19:39,759
it's why I have ? sure I just started

00:19:38,559 --> 00:19:40,990
bringing it I put it here because

00:19:39,759 --> 00:19:42,759
there's kind of the natural thing if you

00:19:40,990 --> 00:19:45,700
try to continue this IP thing too far

00:19:42,759 --> 00:19:47,440
it's a sign of what happens and you know

00:19:45,700 --> 00:19:49,059
I greats a bit questionable if it's not

00:19:47,440 --> 00:19:53,139
a virtual function if it's like it's a

00:19:49,059 --> 00:19:56,470
vm with a verte oh do you give this all

00:19:53,139 --> 00:19:58,869
parameters yeah oh well not not really

00:19:56,470 --> 00:20:00,460
too it'll be a failure right well we

00:19:58,869 --> 00:20:02,200
don't actually well we end up feeding it

00:20:00,460 --> 00:20:03,879
through dhcp is what we do and then on

00:20:02,200 --> 00:20:05,619
the other side we've got an ACL that

00:20:03,879 --> 00:20:08,169
says okay if anything other than this IP

00:20:05,619 --> 00:20:10,059
address comes through we block it so

00:20:08,169 --> 00:20:11,320
maybe we need to take days we don't need

00:20:10,059 --> 00:20:14,799
to take the configuration we need to

00:20:11,320 --> 00:20:18,580
take the ACL right ICL through TC yep to

00:20:14,799 --> 00:20:20,679
use it into the harbor yeah I don't want

00:20:18,580 --> 00:20:22,330
that you'd be inventing the things that

00:20:20,679 --> 00:20:23,590
is actually a lot of way to do it with

00:20:22,330 --> 00:20:26,139
eyes yeah you didn't have to have some

00:20:23,590 --> 00:20:28,509
means of hardware offloading via the TC

00:20:26,139 --> 00:20:32,679
so that's the only thing yeah you know

00:20:28,509 --> 00:20:36,159
might actually be easier than doing this

00:20:32,679 --> 00:20:37,990
sort of explosion of ipv4 ipv6 MDB like

00:20:36,159 --> 00:20:39,940
it the problem is it's sort of a losing

00:20:37,990 --> 00:20:41,919
its hard to do that because it just

00:20:39,940 --> 00:20:43,809
keeps getting worse and worse people get

00:20:41,919 --> 00:20:45,100
more and more corner cases yep this is

00:20:43,809 --> 00:20:48,279
something where you do it's basically an

00:20:45,100 --> 00:20:50,019
ACL that needs to be handed off to the

00:20:48,279 --> 00:20:51,309
hardware is what it is right and then if

00:20:50,019 --> 00:20:53,830
you're trying to be truly trying to

00:20:51,309 --> 00:20:55,809
translate you know when OpenStack or

00:20:53,830 --> 00:20:57,999
whatever contrition ways what we should

00:20:55,809 --> 00:21:01,690
look at instead of trying to add support

00:20:57,999 --> 00:21:05,190
for more max and IPS is maybe do IP link

00:21:01,690 --> 00:21:09,970
a CL ad or something in your IP a CL ad

00:21:05,190 --> 00:21:11,409
BF or something longer IP link ACL to

00:21:09,970 --> 00:21:14,080
wear then you could go in and define and

00:21:11,409 --> 00:21:16,929
Maccabee land an IP address for what's

00:21:14,080 --> 00:21:20,350
allowed and what isn't yeah the trouble

00:21:16,929 --> 00:21:23,890
is like that got shut down I think

00:21:20,350 --> 00:21:24,789
make people doing like that well cuz

00:21:23,890 --> 00:21:27,340
essentially that's what we're proposing

00:21:24,789 --> 00:21:29,200
but yet the mac one and this one is

00:21:27,340 --> 00:21:30,610
rights as a CLS because we don't

00:21:29,200 --> 00:21:32,500
actually have a mechanism for feeding

00:21:30,610 --> 00:21:35,740
this back to the EF so it is good what

00:21:32,500 --> 00:21:37,539
would be cleaner to treat them as access

00:21:35,740 --> 00:21:38,919
control list rather than trying to say

00:21:37,539 --> 00:21:41,620
these are part of the configuration for

00:21:38,919 --> 00:21:43,750
the device or do them to TC yeah or dep

00:21:41,620 --> 00:21:45,130
TC you could do in the translation layer

00:21:43,750 --> 00:21:46,960
and software to you and no way you could

00:21:45,130 --> 00:21:48,880
make make it bird friendly so the bird

00:21:46,960 --> 00:21:50,559
didn't even know I was using TC and I

00:21:48,880 --> 00:21:51,880
think actually so that the point of

00:21:50,559 --> 00:21:53,500
these two Bill of slides was that that's

00:21:51,880 --> 00:21:55,720
that's really where I think I'm going

00:21:53,500 --> 00:21:57,130
yeah it is you know I might add that to

00:21:55,720 --> 00:21:59,140
support because I get a big win from

00:21:57,130 --> 00:22:00,429
that right away and immediately on all

00:21:59,140 --> 00:22:03,220
my legacy stuff we're not doing much

00:22:00,429 --> 00:22:03,970
work or even changing the stack all that

00:22:03,220 --> 00:22:05,679
much because this guy already

00:22:03,970 --> 00:22:07,600
understands it but then if you try to

00:22:05,679 --> 00:22:10,179
start extending an extending student it

00:22:07,600 --> 00:22:11,440
almost makes us just just to put a TC

00:22:10,179 --> 00:22:13,419
layer and then I'm just started using it

00:22:11,440 --> 00:22:15,640
like that and it sort of naturally

00:22:13,419 --> 00:22:17,140
matches to wear those orchestration

00:22:15,640 --> 00:22:19,330
layers are going today most of this

00:22:17,140 --> 00:22:21,100
stuff at least on the OBS side is

00:22:19,330 --> 00:22:23,289
controlled via a contract if i remember

00:22:21,100 --> 00:22:26,770
right Simone yeah contracting netfilter

00:22:23,289 --> 00:22:28,450
rules right and this is a bit tricky to

00:22:26,770 --> 00:22:29,799
do in hardware right connection tracking

00:22:28,450 --> 00:22:30,760
and all this fun stuff right so if

00:22:29,799 --> 00:22:32,620
there's some way to come up with a

00:22:30,760 --> 00:22:36,880
simplified way of writing it and then oh

00:22:32,620 --> 00:22:38,650
yeah i feel ya database yeah and i think

00:22:36,880 --> 00:22:40,659
also this way if we talking about which

00:22:38,650 --> 00:22:42,940
they would think also the switch guys if

00:22:40,659 --> 00:22:46,600
the real switch yep also like to have an

00:22:42,940 --> 00:22:49,809
ACL API so right it's the same because

00:22:46,600 --> 00:22:51,490
this is a switch we need to look at as a

00:22:49,809 --> 00:22:53,350
switches are going to look at it is just

00:22:51,490 --> 00:22:54,460
yet it's essentially a CLS that we're

00:22:53,350 --> 00:22:57,460
wanting to programs we might want to

00:22:54,460 --> 00:23:00,370
come up with an ACL API then I uses TC

00:22:57,460 --> 00:23:02,470
or whatever I'd ever be able to do

00:23:00,370 --> 00:23:04,840
whatever but the Condor is like an addl

00:23:02,470 --> 00:23:07,120
it's not like in configuration to get to

00:23:04,840 --> 00:23:08,080
the virtual function yeah the vm that is

00:23:07,120 --> 00:23:10,220
essentially what we're looking at with

00:23:08,080 --> 00:23:13,049
this that would make a lot

00:23:10,220 --> 00:23:14,779
okay cool all the treasures you go that

00:23:13,049 --> 00:23:16,409
route and see what I come up with I

00:23:14,779 --> 00:23:20,520
think we're I think we're actually

00:23:16,409 --> 00:23:23,130
pretty close to that actually so cool so

00:23:20,520 --> 00:23:26,580
then everyone's favorite topic and we

00:23:23,130 --> 00:23:28,740
can talk about is that I have a need to

00:23:26,580 --> 00:23:32,070
send packets from the PF to the BF

00:23:28,740 --> 00:23:33,480
directly specifically I have some

00:23:32,070 --> 00:23:36,630
control packets I have a lot of

00:23:33,480 --> 00:23:38,850
exception traffic on the that for some

00:23:36,630 --> 00:23:44,250
reason i my my Nick didn't know how to

00:23:38,850 --> 00:23:45,600
match like a like a what I work some

00:23:44,250 --> 00:23:47,850
control packet from the network right

00:23:45,600 --> 00:23:51,000
maybe it'll troll exactly what we what

00:23:47,850 --> 00:23:52,590
we present so okay let's back up okay i

00:23:51,000 --> 00:23:53,520
know it is exactly fries on it i'm

00:23:52,590 --> 00:23:55,559
trying to break it down into smaller

00:23:53,520 --> 00:23:56,909
pieces okay now throw the entire OVI

00:23:55,559 --> 00:23:59,039
stack on top of it right now because I

00:23:56,909 --> 00:24:00,840
want this outside of mobile yes I don't

00:23:59,039 --> 00:24:03,899
know the represented sign oh I know it's

00:24:00,840 --> 00:24:05,220
exactly the reason is is is exactly what

00:24:03,899 --> 00:24:06,659
you you presented is because we've been

00:24:05,220 --> 00:24:11,520
talking for this about this for like a

00:24:06,659 --> 00:24:13,590
year so the point is that we we need

00:24:11,520 --> 00:24:16,140
something and there's there's two

00:24:13,590 --> 00:24:18,779
options that I came up with one is you

00:24:16,140 --> 00:24:20,490
have a net dev that represents a VF and

00:24:18,779 --> 00:24:22,260
I think you need to clearly identify to

00:24:20,490 --> 00:24:25,289
the stack that it's a VF metaph because

00:24:22,260 --> 00:24:28,260
you don't want this back to try to use

00:24:25,289 --> 00:24:30,929
it like it's a real netdev because it

00:24:28,260 --> 00:24:32,399
because because you might finally start

00:24:30,929 --> 00:24:34,350
using it and it has some interesting

00:24:32,399 --> 00:24:38,250
characteristics and that it's not really

00:24:34,350 --> 00:24:41,130
a function so I think it's going to be a

00:24:38,250 --> 00:24:44,100
switch there is a very good way to

00:24:41,130 --> 00:24:45,120
aggregate all the ports of gmail or do

00:24:44,100 --> 00:24:48,390
you know a port is a switched yet

00:24:45,120 --> 00:24:52,440
somehow i'm looking at your email i

00:24:48,390 --> 00:24:55,080
didn't or i think this is the or is it

00:24:52,440 --> 00:24:58,380
there's an attribute against enemy he

00:24:55,080 --> 00:25:00,450
set the ID the index charge so why do it

00:24:58,380 --> 00:25:01,919
really different than the tap device the

00:25:00,450 --> 00:25:05,340
tap device also it is not a normal

00:25:01,919 --> 00:25:07,590
network device yeah but you know what

00:25:05,340 --> 00:25:10,110
the tap device usually right so the

00:25:07,590 --> 00:25:11,520
buffer presenter is just the same yeah

00:25:10,110 --> 00:25:13,740
so I mean I'm just I'm just saying there

00:25:11,520 --> 00:25:15,330
should be some identify yes we the

00:25:13,740 --> 00:25:17,549
virtual function representer in our

00:25:15,330 --> 00:25:19,020
implementation is also switched of

00:25:17,549 --> 00:25:20,880
instance so it has the right rear view

00:25:19,020 --> 00:25:22,710
tidy so if you would if

00:25:20,880 --> 00:25:25,560
you would run an IP link and look at the

00:25:22,710 --> 00:25:27,390
on it already prints you the switch of

00:25:25,560 --> 00:25:30,210
ID so all the represented have the same

00:25:27,390 --> 00:25:31,890
ID what what else do you want you want

00:25:30,210 --> 00:25:34,590
some feature that might be good enough

00:25:31,890 --> 00:25:35,580
or I might actually go so far as put it

00:25:34,590 --> 00:25:37,950
like a feature flag in there or

00:25:35,580 --> 00:25:41,070
something but we can do because if you

00:25:37,950 --> 00:25:42,780
have to nix two cards or to SRV cards

00:25:41,070 --> 00:25:44,730
you want to distinguish between the ones

00:25:42,780 --> 00:25:46,530
yes below it's the first one in the

00:25:44,730 --> 00:25:48,960
second card so it's a private fly right

00:25:46,530 --> 00:25:50,370
don't like the tappers you want likely

00:25:48,960 --> 00:25:52,770
fit Sam to be identified as a

00:25:50,370 --> 00:25:55,530
representative I could tap ok we'll do

00:25:52,770 --> 00:25:57,810
that yeah I'll just get this really

00:25:55,530 --> 00:26:01,040
quick is the the other option that we

00:25:57,810 --> 00:26:03,180
have is that you could use a socket

00:26:01,040 --> 00:26:04,350
auxiliary data to indicate where you

00:26:03,180 --> 00:26:07,710
want to send a packet and you don't have

00:26:04,350 --> 00:26:10,320
to create a met dev at all it's it works

00:26:07,710 --> 00:26:11,790
I think the idea that if you use a net

00:26:10,320 --> 00:26:15,360
device you can connect them to a Linux

00:26:11,790 --> 00:26:18,150
bridge in order for the traffic sure

00:26:15,360 --> 00:26:20,310
that you have a nice traffic we want to

00:26:18,150 --> 00:26:21,540
fold it in there John I think there's

00:26:20,310 --> 00:26:24,420
like four comments out there and we've

00:26:21,540 --> 00:26:26,970
been talking to ourselves good so is the

00:26:24,420 --> 00:26:28,950
idea for this represented netdev to be

00:26:26,970 --> 00:26:30,900
like a control native so that doesn't

00:26:28,950 --> 00:26:33,660
get any data plane traffic so I mean is

00:26:30,900 --> 00:26:37,080
there a need to create two flavors of

00:26:33,660 --> 00:26:38,730
netdev is what we're saying I think

00:26:37,080 --> 00:26:40,830
there's a there's a use case where this

00:26:38,730 --> 00:26:43,020
is not just a control netdev and you may

00:26:40,830 --> 00:26:46,110
have exception trackit that needs to be

00:26:43,020 --> 00:26:47,780
at a reasonable performant level like

00:26:46,110 --> 00:26:50,280
you can't work on the assumption that

00:26:47,780 --> 00:26:51,780
you'll never have an exception that this

00:26:50,280 --> 00:26:55,410
is always exception traffic and it can

00:26:51,780 --> 00:26:56,790
be low performant and i also don't see

00:26:55,410 --> 00:26:57,780
any reason to limit it to that really

00:26:56,790 --> 00:26:59,310
it's running over if you're going to run

00:26:57,780 --> 00:27:02,760
it over the PF it's going to have access

00:26:59,310 --> 00:27:04,440
to some set of cues you probably have

00:27:02,760 --> 00:27:05,760
enough cues to you know you might want

00:27:04,440 --> 00:27:07,410
to prioritize it lower than your PF

00:27:05,760 --> 00:27:10,470
traffic for some reason but that's a

00:27:07,410 --> 00:27:11,970
priority I think Cole but I don't see

00:27:10,470 --> 00:27:15,030
any reason to limit it in some sense

00:27:11,970 --> 00:27:16,800
sure but i thought you know somewhere

00:27:15,030 --> 00:27:18,570
you mentioned that some way we will have

00:27:16,800 --> 00:27:21,210
to say that normal traffic doesn't go on

00:27:18,570 --> 00:27:23,370
that netdev i think you want to indicate

00:27:21,210 --> 00:27:26,450
somehow to the stack that it is a bait

00:27:23,370 --> 00:27:30,240
is somehow special and that it's not a

00:27:26,450 --> 00:27:33,210
normal hardware netdev in the sense that

00:27:30,240 --> 00:27:34,880
it has its own pcie function meaning if

00:27:33,210 --> 00:27:36,140
I fire up to I /

00:27:34,880 --> 00:27:37,460
sessions I'm not going to get this I

00:27:36,140 --> 00:27:38,690
mean like me at the same amount of

00:27:37,460 --> 00:27:41,120
performance as I would if I had to

00:27:38,690 --> 00:27:44,120
physical functions right I think this is

00:27:41,120 --> 00:27:45,770
valuable just that cuz I can articulate

00:27:44,120 --> 00:27:48,590
exactly why but it seems going to be

00:27:45,770 --> 00:27:50,450
useful for debugging at least and it

00:27:48,590 --> 00:27:53,390
seems easy to do like to set a flag

00:27:50,450 --> 00:27:56,660
somewhere a bit or an f-type it seems

00:27:53,390 --> 00:27:59,030
trivial so I think what would be even

00:27:56,660 --> 00:28:02,360
more interesting is if you move that new

00:27:59,030 --> 00:28:04,880
crafted net device inside the vm so

00:28:02,360 --> 00:28:08,900
think of a container running inside a vm

00:28:04,880 --> 00:28:11,030
and see the from from the networking

00:28:08,900 --> 00:28:14,510
forwarding needs inside the vm you want

00:28:11,030 --> 00:28:16,790
to control the harder offload of your

00:28:14,510 --> 00:28:18,650
bare metal machine that's where it gets

00:28:16,790 --> 00:28:20,390
really interesting that's where we would

00:28:18,650 --> 00:28:22,100
have huge benefits because all of us all

00:28:20,390 --> 00:28:24,140
of a sudden you're programming the

00:28:22,100 --> 00:28:27,190
entire path through two operating

00:28:24,140 --> 00:28:30,470
systems right and you've gained arm

00:28:27,190 --> 00:28:33,230
fairness in terms of you could allocate

00:28:30,470 --> 00:28:35,870
or assign a cube per container that is

00:28:33,230 --> 00:28:37,790
running inside the VA I think you're

00:28:35,870 --> 00:28:39,410
saying is maybe i'm just gonna rephrase

00:28:37,790 --> 00:28:44,120
a certificate right that you're giving

00:28:39,410 --> 00:28:46,370
the the VF some access to switch

00:28:44,120 --> 00:28:49,550
resources our hardware resources yeah

00:28:46,370 --> 00:28:51,550
exactly yeah I think that's that's

00:28:49,550 --> 00:28:53,900
really interesting it's just we haven't

00:28:51,550 --> 00:28:58,430
liked that API doesn't exist at all and

00:28:53,900 --> 00:29:01,430
we've yeah I think it would be

00:28:58,430 --> 00:29:03,830
worthwhile though so I just want to step

00:29:01,430 --> 00:29:06,650
back to the merits of having net debt

00:29:03,830 --> 00:29:08,870
from my point of view is that I can see

00:29:06,650 --> 00:29:11,840
basically three set separate sets of

00:29:08,870 --> 00:29:13,400
functionality you might want and in the

00:29:11,840 --> 00:29:17,390
context of obvious you probably want

00:29:13,400 --> 00:29:18,770
them all simultaneously what one is

00:29:17,390 --> 00:29:20,150
passing packets back and forward we

00:29:18,770 --> 00:29:21,860
already talked about that the other one

00:29:20,150 --> 00:29:23,840
is provisioning so you want to be able

00:29:21,860 --> 00:29:25,400
to configure the device somehow so you

00:29:23,840 --> 00:29:27,800
might want to attach it to 0 vs or the

00:29:25,400 --> 00:29:28,670
bridge or do anything else and the other

00:29:27,800 --> 00:29:30,440
is you might want to get some

00:29:28,670 --> 00:29:32,540
information about the device statistics

00:29:30,440 --> 00:29:34,130
and so on and so forth and from my point

00:29:32,540 --> 00:29:36,050
of view the advantage of using a net

00:29:34,130 --> 00:29:39,020
devoe though it may be special somehow

00:29:36,050 --> 00:29:40,280
with a flag or whatever it is we already

00:29:39,020 --> 00:29:41,720
have all the tooling to do all of those

00:29:40,280 --> 00:29:44,300
things and more and we know how to deal

00:29:41,720 --> 00:29:45,800
with them and it seems like a pretty

00:29:44,300 --> 00:29:47,860
good way to model it from my point of

00:29:45,800 --> 00:29:47,860
view

00:29:48,850 --> 00:30:00,110
cool I like it anything else that going

00:29:54,860 --> 00:30:02,240
on out there oh so I I think how far is

00:30:00,110 --> 00:30:03,590
your code along can you submit the net

00:30:02,240 --> 00:30:04,760
that stuff that you have and can you

00:30:03,590 --> 00:30:06,679
submit it independent of all the other

00:30:04,760 --> 00:30:13,789
stuff so that we can look at it myself

00:30:06,679 --> 00:30:16,460
yes we try to do it this week but you

00:30:13,789 --> 00:30:18,950
asking how much the soul represent of

00:30:16,460 --> 00:30:20,809
stuff can be separate from yes we we can

00:30:18,950 --> 00:30:24,500
we'll do initial submission which

00:30:20,809 --> 00:30:26,149
doesn't upload anything right only throw

00:30:24,500 --> 00:30:27,649
class if you do me a favor and just

00:30:26,149 --> 00:30:28,940
submit that piece let's get that piece

00:30:27,649 --> 00:30:39,019
in and then must worry about arguing

00:30:28,940 --> 00:30:42,769
about how obvious works cool sounds like

00:30:39,019 --> 00:30:44,120
we'll move forward on this I was going

00:30:42,769 --> 00:30:45,799
to explain how i thought this might work

00:30:44,120 --> 00:30:47,539
but i think we pretty much understand

00:30:45,799 --> 00:30:50,299
that you know it's it's attached to the

00:30:47,539 --> 00:30:54,470
PF b send traffic to it it gets sent to

00:30:50,299 --> 00:30:57,260
the VF and almost looks like a DSA type

00:30:54,470 --> 00:30:59,870
representation it looks very similar to

00:30:57,260 --> 00:31:01,580
DSA way actually maybe we can talk about

00:30:59,870 --> 00:31:03,529
that we've thought about using DSA

00:31:01,580 --> 00:31:06,710
directly but it wasn't quite a good fit

00:31:03,529 --> 00:31:08,360
i don't think yeah is that only means of

00:31:06,710 --> 00:31:10,429
tagging the packets identify mother than

00:31:08,360 --> 00:31:16,820
the source MAC address may or may not be

00:31:10,429 --> 00:31:18,830
set either via right sorry as just

00:31:16,820 --> 00:31:19,940
thinking that like in the case DSA

00:31:18,830 --> 00:31:21,799
usually have some sort of tagging

00:31:19,940 --> 00:31:23,480
mechanism to identify the source of the

00:31:21,799 --> 00:31:26,090
packets and you don't really have that

00:31:23,480 --> 00:31:28,190
an SRV unless you want to trust the mac

00:31:26,090 --> 00:31:30,529
address the source MAC address in the

00:31:28,190 --> 00:31:33,019
packets themselves which may be

00:31:30,529 --> 00:31:34,580
expensive having to do a look up against

00:31:33,019 --> 00:31:36,260
the source MAC address to determine the

00:31:34,580 --> 00:31:38,889
destination or the device that

00:31:36,260 --> 00:31:38,889
originated from

00:31:40,169 --> 00:31:52,529
yeah I'm good so my assumption is that

00:31:48,690 --> 00:31:54,690
that's all to do with how the data like

00:31:52,529 --> 00:31:56,909
how the packets communicated across the

00:31:54,690 --> 00:32:00,299
pci bus if it's pci device and that

00:31:56,909 --> 00:32:02,519
might be device-dependent yeah i think

00:32:00,299 --> 00:32:04,019
some devices have a tag some devices are

00:32:02,519 --> 00:32:08,789
bit in the descriptor you can set right

00:32:04,019 --> 00:32:10,669
and I mean I know this um so it's the

00:32:08,789 --> 00:32:12,629
tag stuff might align closer to DSA

00:32:10,669 --> 00:32:17,070
putting something in the descriptor is

00:32:12,629 --> 00:32:18,929
not dca to me so if all the vendors can

00:32:17,070 --> 00:32:21,629
sit down and agree on a consistent

00:32:18,929 --> 00:32:23,850
tacking comment the scriptures yeah so

00:32:21,629 --> 00:32:25,109
it's never going to happen right so we

00:32:23,850 --> 00:32:27,330
just have never going to happen to drive

00:32:25,109 --> 00:32:29,940
I think they made device actually a

00:32:27,330 --> 00:32:32,129
proprietary of each vendor so it's up to

00:32:29,940 --> 00:32:34,139
the vendor how would she classify those

00:32:32,129 --> 00:32:41,700
pockets sure could be met another could

00:32:34,139 --> 00:32:45,059
you yeah agreed cool and because they

00:32:41,700 --> 00:32:46,830
could do that we want this to have our

00:32:45,059 --> 00:32:48,389
set to this the net device to support

00:32:46,830 --> 00:32:50,940
RSS if you want to have a lot of traffic

00:32:48,389 --> 00:32:52,499
home you know yeah right now we are

00:32:50,940 --> 00:32:55,169
limiting ourselves because we said it

00:32:52,499 --> 00:32:59,129
you may want to send a few pockets but

00:32:55,169 --> 00:33:01,109
in the future you can ask for more and

00:32:59,129 --> 00:33:03,629
I'll just get rid of this auxiliary data

00:33:01,109 --> 00:33:05,759
idea just because it seems like maybe

00:33:03,629 --> 00:33:08,340
dinner and that that was easier yeah

00:33:05,759 --> 00:33:10,619
most likely it's also not best range

00:33:08,340 --> 00:33:15,809
from a from a operating system kind of

00:33:10,619 --> 00:33:17,129
one of you cool excuse me yes if you

00:33:15,809 --> 00:33:19,230
want to move the data in the same

00:33:17,129 --> 00:33:24,210
machines oh it's faster to do it in a

00:33:19,230 --> 00:33:26,730
pair of your channel so you might wonder

00:33:24,210 --> 00:33:28,259
to have a generic represent oh that has

00:33:26,730 --> 00:33:30,720
a power vehicle channel to the guest

00:33:28,259 --> 00:33:33,269
support it and move traffic to it

00:33:30,720 --> 00:33:36,090
because it'd be much much better I

00:33:33,269 --> 00:33:38,009
talked about east-west traffic here yes

00:33:36,090 --> 00:33:41,129
for example oh all the profits that you

00:33:38,009 --> 00:33:44,489
want to inject see so you have some

00:33:41,129 --> 00:33:48,090
channel between guests no between guess

00:33:44,489 --> 00:33:50,410
it's not secured but between to get the

00:33:48,090 --> 00:33:54,670
F and the VF yeah in software

00:33:50,410 --> 00:33:57,100
who they yeah yeah cuz the does the

00:33:54,670 --> 00:33:58,360
guests have another device right that's

00:33:57,100 --> 00:34:01,030
what's implied that scenarios that you

00:33:58,360 --> 00:34:04,710
have a video and the VFL think about

00:34:01,030 --> 00:34:07,420
into I was trying to see if you had some

00:34:04,710 --> 00:34:10,000
you can think about it as a you have a

00:34:07,420 --> 00:34:11,740
device in the guests that does the vio

00:34:10,000 --> 00:34:13,720
channel and the buffest an exciter Roger

00:34:11,740 --> 00:34:16,030
office but it does imply that your vm

00:34:13,720 --> 00:34:18,340
knows something about how to do that

00:34:16,030 --> 00:34:20,679
right well implies that the VF probably

00:34:18,340 --> 00:34:22,390
has an idea of the topology yeah so that

00:34:20,679 --> 00:34:24,400
the VF knows to go across the verdejo to

00:34:22,390 --> 00:34:27,190
the PF whereas it's going anywhere else

00:34:24,400 --> 00:34:28,840
it has to go so it ends up probably have

00:34:27,190 --> 00:34:30,880
to program some extra routing tables to

00:34:28,840 --> 00:34:33,040
resolve something like that yeah how

00:34:30,880 --> 00:34:35,200
does how does that work to tell you do

00:34:33,040 --> 00:34:38,470
you know all right you have an idea no

00:34:35,200 --> 00:34:40,480
well think about I don't know noise but

00:34:38,470 --> 00:34:42,820
yeah you can bond them together you in

00:34:40,480 --> 00:34:44,230
were the research problem your funding

00:34:42,820 --> 00:34:46,870
yeah yeah then you have to have a really

00:34:44,230 --> 00:34:49,179
smart mom that knows okay yeah hits PF

00:34:46,870 --> 00:34:50,980
it goes down the verdi oh it's anything

00:34:49,179 --> 00:34:52,480
else goes yeah put me that we will send

00:34:50,980 --> 00:34:54,160
some command okay those kind of traffic

00:34:52,480 --> 00:34:55,900
likes a moot because we don't want to

00:34:54,160 --> 00:34:57,100
replicate but I think we can send you

00:34:55,900 --> 00:34:59,200
think we're getting into a solution

00:34:57,100 --> 00:35:01,150
space for something that may not yet be

00:34:59,200 --> 00:35:03,580
something we want to chase out chase

00:35:01,150 --> 00:35:05,200
down right now so if the performance

00:35:03,580 --> 00:35:09,130
that much different if it was going on

00:35:05,200 --> 00:35:11,460
the bus it really yeah really dependent

00:35:09,130 --> 00:35:14,110
it's it well I've done this metric like

00:35:11,460 --> 00:35:15,730
20 different ways and it really depends

00:35:14,110 --> 00:35:18,730
on what you want to optimize for right

00:35:15,730 --> 00:35:21,310
and the traffic work load and the load

00:35:18,730 --> 00:35:22,660
IE bus yeah if nothing else I think you

00:35:21,310 --> 00:35:24,460
have to keep in mind is if going across

00:35:22,660 --> 00:35:28,210
verdi oh you don't actually cross any

00:35:24,460 --> 00:35:30,490
like pcie bus so if you're looking at

00:35:28,210 --> 00:35:33,280
you know a slow Nick that's on a buy for

00:35:30,490 --> 00:35:35,110
Jen to yeah you're not going to go any

00:35:33,280 --> 00:35:36,370
faster than seven whereas you can do 36

00:35:35,110 --> 00:35:39,070
gigs if you're going straight across

00:35:36,370 --> 00:35:42,190
road I oh so it just depends on when

00:35:39,070 --> 00:35:44,230
there's a weird um latency versus

00:35:42,190 --> 00:35:46,360
bandwidth trade-offs vs cpu use the

00:35:44,230 --> 00:35:49,270
trade-offs night appends on what you are

00:35:46,360 --> 00:35:51,310
trying off to my sport so then again the

00:35:49,270 --> 00:35:53,080
problem becomes that the l2 driver would

00:35:51,310 --> 00:35:55,450
be doing learning to figure out which

00:35:53,080 --> 00:35:56,500
traffic east west vs write something

00:35:55,450 --> 00:36:01,240
would have to figure out how to route

00:35:56,500 --> 00:36:02,650
the traffic so i think we already have

00:36:01,240 --> 00:36:03,400
the facility it's called team device

00:36:02,650 --> 00:36:05,829
with

00:36:03,400 --> 00:36:15,720
modules modes right that's a special

00:36:05,829 --> 00:36:15,720
oppa Lansing moment for Team device yeah

00:36:16,890 --> 00:36:21,039
if you can push the complexity into the

00:36:19,480 --> 00:36:23,740
V I'm sure you can use the team device

00:36:21,039 --> 00:36:25,569
assuming it supported there but you

00:36:23,740 --> 00:36:27,520
might want to hide the complexity from

00:36:25,569 --> 00:36:29,500
the vm right but that's the thing is

00:36:27,520 --> 00:36:31,059
like like I said yeah it becomes the vm

00:36:29,500 --> 00:36:33,250
needs to know way too much about a

00:36:31,059 --> 00:36:35,920
topology very well or you or you put the

00:36:33,250 --> 00:36:37,510
team device right under the vm right and

00:36:35,920 --> 00:36:40,299
then you run it through pcie which

00:36:37,510 --> 00:36:42,789
bypasses most of the stack except for a

00:36:40,299 --> 00:36:45,369
small layer in qemu that has that team

00:36:42,789 --> 00:36:47,740
logic sure if we can work on how to do

00:36:45,369 --> 00:36:49,990
that it's the guest just has to come up

00:36:47,740 --> 00:36:52,960
with a new device to represent the team

00:36:49,990 --> 00:36:54,190
driver at the team things is not really

00:36:52,960 --> 00:36:56,640
driver anymore cos that probably have to

00:36:54,190 --> 00:36:59,890
be represented somehow in user space

00:36:56,640 --> 00:37:02,500
yeah it's could imagine being that

00:36:59,890 --> 00:37:04,630
somewhat of a wimp it's not really

00:37:02,500 --> 00:37:07,119
direct assignment anymore but it's it's

00:37:04,630 --> 00:37:14,650
it's like can be good yet it also the

00:37:07,119 --> 00:37:17,049
migration issue yeah anyway all right

00:37:14,650 --> 00:37:19,180
I'll move on to my next appeal I like

00:37:17,049 --> 00:37:20,740
liver be nice if we get some

00:37:19,180 --> 00:37:22,720
functionality and liver just because it

00:37:20,740 --> 00:37:25,930
makes life easier for me to test a lot

00:37:22,720 --> 00:37:28,059
of the stuff but I love to see this

00:37:25,930 --> 00:37:30,130
might be maybe a translation layer maybe

00:37:28,059 --> 00:37:32,559
I can just write a little XML to the

00:37:30,130 --> 00:37:34,319
bottom and translate you know I all that

00:37:32,559 --> 00:37:36,400
stuff that didn't live very today into

00:37:34,319 --> 00:37:38,770
into what we're building inside the

00:37:36,400 --> 00:37:41,859
bottom side making sure it knows what

00:37:38,770 --> 00:37:43,660
api's it needs to speak to where yeah so

00:37:41,859 --> 00:37:47,260
yeah we already are going through what

00:37:43,660 --> 00:37:52,470
the IP route interface yeah you have an

00:37:47,260 --> 00:37:57,039
IP in that link so cool no objections to

00:37:52,470 --> 00:37:59,200
extra support if I I do it live

00:37:57,039 --> 00:38:00,609
migration I am I don't have any comments

00:37:59,200 --> 00:38:02,529
on this I thought maybe Alex and want to

00:38:00,609 --> 00:38:04,119
talk about live migration because you

00:38:02,529 --> 00:38:05,740
did a little bit this morning yeah I did

00:38:04,119 --> 00:38:07,539
a little bit and I don't know if anybody

00:38:05,740 --> 00:38:08,950
here jumped up and down and no and I

00:38:07,539 --> 00:38:11,710
don't think we have anybody from like

00:38:08,950 --> 00:38:12,359
any kind of any of the PCI people here

00:38:11,710 --> 00:38:15,299
and that's the thing

00:38:12,359 --> 00:38:16,769
yeah mostly the pc i'm a pci and qemu

00:38:15,299 --> 00:38:19,309
mailing lists where I've seen a lot of

00:38:16,769 --> 00:38:21,210
the action yeah so I guess the

00:38:19,309 --> 00:38:22,890
infomercial there's some people working

00:38:21,210 --> 00:38:24,509
on live migration and they probably

00:38:22,890 --> 00:38:26,480
would like input if if people have

00:38:24,509 --> 00:38:29,579
devices I can work on it with or are

00:38:26,480 --> 00:38:33,539
also interested in this problem would be

00:38:29,579 --> 00:38:35,489
nice to help them out all right it also

00:38:33,539 --> 00:38:40,890
got any other things that we want to

00:38:35,489 --> 00:38:42,690
talk about or opens it seems like we're

00:38:40,890 --> 00:38:46,890
going to make some progress on the on

00:38:42,690 --> 00:38:50,910
the VAR on the net dev stuff and and

00:38:46,890 --> 00:38:53,789
we'll go from there and because was I

00:38:50,910 --> 00:38:55,019
think we agreed acls or for that and

00:38:53,789 --> 00:38:57,210
then I think we'll build like I love

00:38:55,019 --> 00:38:58,739
very special translated so that we can

00:38:57,210 --> 00:39:01,769
load that into the if the hardware and

00:38:58,739 --> 00:39:03,599
plug on the liver and we'll that'll give

00:39:01,769 --> 00:39:05,849
us kind of the native levert support

00:39:03,599 --> 00:39:07,619
that we that we want without having to

00:39:05,849 --> 00:39:10,920
just kind of extend the stuff that we

00:39:07,619 --> 00:39:19,259
have and kind of strange right I PVF

00:39:10,920 --> 00:39:21,089
commands yep cool and I that's all I had

00:39:19,259 --> 00:39:24,119
is there anything anybody else that I

00:39:21,089 --> 00:39:26,910
want to talk a question you trying to to

00:39:24,119 --> 00:39:29,099
open it at we spoke about TC and we

00:39:26,910 --> 00:39:32,339
spoke about how to represent those Faso

00:39:29,099 --> 00:39:36,869
the ACL should be on the representer of

00:39:32,339 --> 00:39:38,910
this far for on the path i would put

00:39:36,869 --> 00:39:40,950
them so it depends on where they are but

00:39:38,910 --> 00:39:43,380
i imagine so like if your xml if you if

00:39:40,950 --> 00:39:45,089
you're building up a vm then you'd want

00:39:43,380 --> 00:39:46,950
to put them on the VF because the VF is

00:39:45,089 --> 00:39:48,869
going to be that kind of the quantifier

00:39:46,950 --> 00:39:49,859
for that so that becomes the things yes

00:39:48,869 --> 00:39:51,599
essentially what we need to do is

00:39:49,859 --> 00:39:56,849
actually I think get switched up going

00:39:51,599 --> 00:39:58,380
for sr iov in general do you have those

00:39:56,849 --> 00:40:01,130
representives you could throw out there

00:39:58,380 --> 00:40:04,859
then it's just a matter of okay put this

00:40:01,130 --> 00:40:10,430
ACL on that EF let's go like today do it

00:40:04,859 --> 00:40:13,230
in the IP table nice let you do that him

00:40:10,430 --> 00:40:15,930
John so if we have the represented

00:40:13,230 --> 00:40:18,029
netdev the problem of having the VF ID

00:40:15,930 --> 00:40:20,880
for IP commands that should go away

00:40:18,029 --> 00:40:23,730
right you can directly use the internet

00:40:20,880 --> 00:40:25,349
def for the VF and you would do the same

00:40:23,730 --> 00:40:26,070
for the TC to write you would use that

00:40:25,349 --> 00:40:29,460
represent

00:40:26,070 --> 00:40:34,140
nap instead of using some kind of VF ID

00:40:29,460 --> 00:40:35,850
to make a rule for the VF yeah I think

00:40:34,140 --> 00:40:37,140
so I would be a one way to do it I mean

00:40:35,850 --> 00:40:39,690
we'll have this case where you can use

00:40:37,140 --> 00:40:43,320
boat either for you know for a lot of

00:40:39,690 --> 00:40:46,380
yeah because we fi di guess is the only

00:40:43,320 --> 00:40:49,190
place it has evident as in the IP tool

00:40:46,380 --> 00:40:55,880
otherwise it doesn't really make sense

00:40:49,190 --> 00:40:58,530
yeah I think that should be fine so

00:40:55,880 --> 00:41:02,040
generally should have a from negative

00:40:58,530 --> 00:41:03,690
representation for v f6 you can do a lot

00:41:02,040 --> 00:41:06,060
a whole lot of things if your net device

00:41:03,690 --> 00:41:11,370
that you can not nice to sell em up to

00:41:06,060 --> 00:41:12,990
hardware and since do we just want to

00:41:11,370 --> 00:41:15,990
allow user to shoot themselves and shoot

00:41:12,990 --> 00:41:17,880
themselves and their own photo really do

00:41:15,990 --> 00:41:20,490
we want to draw a line somewhere and

00:41:17,880 --> 00:41:22,560
only allow it is like I'm changing the

00:41:20,490 --> 00:41:25,410
MTU right this is like the simplest yeah

00:41:22,560 --> 00:41:27,420
sorry stranger a yes like you go in and

00:41:25,410 --> 00:41:28,980
you change the MTU the VF did you just

00:41:27,420 --> 00:41:31,500
change name to you on the vm because

00:41:28,980 --> 00:41:34,170
that's not even know that it doesn't

00:41:31,500 --> 00:41:36,210
make any sense to most VMs right here

00:41:34,170 --> 00:41:38,310
and you signal to the vm that you did

00:41:36,210 --> 00:41:40,770
this because what would you sort of an

00:41:38,310 --> 00:41:42,360
event would you give in the vm well the

00:41:40,770 --> 00:41:43,410
question ends up becoming yeah how do

00:41:42,360 --> 00:41:44,730
you want to interpret it well what

00:41:43,410 --> 00:41:49,380
happens on a switch when you change the

00:41:44,730 --> 00:41:51,090
MTU this is raw sockets yeah what

00:41:49,380 --> 00:41:54,420
happens when the danish DM video is the

00:41:51,090 --> 00:41:56,280
top i really want to make the yeah but

00:41:54,420 --> 00:41:57,210
is your NIC I mean the promise you're

00:41:56,280 --> 00:41:58,980
gonna have so hard where variability

00:41:57,210 --> 00:42:01,050
here how much hardware will support

00:41:58,980 --> 00:42:03,960
setting the MTU on a although arguably

00:42:01,050 --> 00:42:06,960
one thing i would like to c is for like

00:42:03,960 --> 00:42:09,630
the SRV case MTU is the maximum

00:42:06,960 --> 00:42:12,690
transmission unit it is not the maximum

00:42:09,630 --> 00:42:14,820
received packet size it's kind of become

00:42:12,690 --> 00:42:17,460
a bit of a headache because you know if

00:42:14,820 --> 00:42:19,620
you end up with a V f2000 era a setup

00:42:17,460 --> 00:42:21,420
that has a mixed environment already

00:42:19,620 --> 00:42:23,780
there's a lot of nextel just okay we

00:42:21,420 --> 00:42:26,040
receive whatever the largest one is and

00:42:23,780 --> 00:42:28,350
anyone can transmit it whatever and so

00:42:26,040 --> 00:42:29,790
that's the thing is we need to be we can

00:42:28,350 --> 00:42:31,650
probably be a little bit more liberal on

00:42:29,790 --> 00:42:33,600
that in terms of how we want to

00:42:31,650 --> 00:42:36,690
interpret MTU if anything it probably

00:42:33,600 --> 00:42:39,060
just be another ACL that says okay if

00:42:36,690 --> 00:42:40,110
you can support it this is the maximum

00:42:39,060 --> 00:42:42,710
this guy can send

00:42:40,110 --> 00:42:45,120
otherwise it would probably just be a

00:42:42,710 --> 00:42:47,490
whoever sets the highest gets to set

00:42:45,120 --> 00:42:49,080
what the harbor theme and it also is how

00:42:47,490 --> 00:42:50,520
much do you believe that it's a switch

00:42:49,080 --> 00:42:51,720
dev object because if you were really

00:42:50,520 --> 00:42:53,010
setting the mt want to switch to have

00:42:51,720 --> 00:42:55,290
out if you're talking about transmitting

00:42:53,010 --> 00:42:57,390
to the vm right which is would actually

00:42:55,290 --> 00:43:02,160
be receiving to the vm right you saying

00:42:57,390 --> 00:43:03,960
not the other way around yeah so yeah I

00:43:02,160 --> 00:43:06,870
don't I don't know what the Nick guys

00:43:03,960 --> 00:43:09,120
would this coming make it a global

00:43:06,870 --> 00:43:10,680
setting then in that case said it was

00:43:09,120 --> 00:43:11,820
for one that's not it I think that's

00:43:10,680 --> 00:43:13,320
fellas that's actually be it more

00:43:11,820 --> 00:43:14,280
malleable that's a bigger problem is you

00:43:13,320 --> 00:43:17,280
have a net dev that doesn't look like

00:43:14,280 --> 00:43:18,930
cousin work like a netdev right well how

00:43:17,280 --> 00:43:24,630
does switch dev handle it right now I

00:43:18,930 --> 00:43:26,220
don't know we're switching of guy I was

00:43:24,630 --> 00:43:27,930
kind of thinking initially we'd probably

00:43:26,220 --> 00:43:29,220
have the netdev do almost nothing right

00:43:27,930 --> 00:43:30,390
it wouldn't simple at the open man right

00:43:29,220 --> 00:43:32,250
it wouldn't support the clothes meth I

00:43:30,390 --> 00:43:33,510
did just returned a node ever but I

00:43:32,250 --> 00:43:36,930
don't think we have it like we don't

00:43:33,510 --> 00:43:38,040
have a way in the stack when I guess we

00:43:36,930 --> 00:43:39,480
don't need this anymore we don't we

00:43:38,040 --> 00:43:41,490
don't have a way in the stack right like

00:43:39,480 --> 00:43:43,350
you set the MTU and you don't have the

00:43:41,490 --> 00:43:45,690
Indio op implemented it just falls back

00:43:43,350 --> 00:43:47,850
into the software yeah I just said that

00:43:45,690 --> 00:43:49,380
cap so there's no air path back up for a

00:43:47,850 --> 00:43:50,640
lot of the stuff because we might be

00:43:49,380 --> 00:43:52,710
just emulated in software if the

00:43:50,640 --> 00:43:54,000
hardware doesn't support it so you can

00:43:52,710 --> 00:43:55,110
do all sorts of things and think that

00:43:54,000 --> 00:43:57,900
they're working and then it won't work

00:43:55,110 --> 00:44:02,130
so you just code up a dummy netdev for

00:43:57,900 --> 00:44:03,990
each of your vfc just about right you

00:44:02,130 --> 00:44:05,160
can implement the ndo up and return an

00:44:03,990 --> 00:44:07,230
error code if someone tries to change

00:44:05,160 --> 00:44:09,030
the MTU right i mean you care about the

00:44:07,230 --> 00:44:10,230
minor point was you kind of limit the

00:44:09,030 --> 00:44:13,140
exposure initially on the implementation

00:44:10,230 --> 00:44:15,120
for these the switch devices right that

00:44:13,140 --> 00:44:16,940
we would maybe instantiate for the vs

00:44:15,120 --> 00:44:19,380
right maybe they don't do anything so

00:44:16,940 --> 00:44:21,750
dhcp tries to open the interface and

00:44:19,380 --> 00:44:23,790
start broadcasting you know away just

00:44:21,750 --> 00:44:25,200
can be like know right i'm not going to

00:44:23,790 --> 00:44:27,030
allow you to do that i mean i'm not in

00:44:25,200 --> 00:44:29,400
particular worried about and yo ops

00:44:27,030 --> 00:44:32,100
because those can be made specific and

00:44:29,400 --> 00:44:34,320
implemented not implemented but the net

00:44:32,100 --> 00:44:36,150
device is so generic if index is so

00:44:34,320 --> 00:44:40,890
generic you can you can do a whole bunch

00:44:36,150 --> 00:44:43,500
of configuration some scenarios which to

00:44:40,890 --> 00:44:44,730
just make no sense whatsoever I mean it

00:44:43,500 --> 00:44:47,160
switched it has the same problem today

00:44:44,730 --> 00:44:49,560
right like you can build any care things

00:44:47,160 --> 00:44:51,069
and it doesn't make it just breaks like

00:44:49,560 --> 00:44:52,150
I don't know if that's good though

00:44:51,069 --> 00:44:55,930
Ashley on something that we have that

00:44:52,150 --> 00:44:57,940
works already today like we I don't know

00:44:55,930 --> 00:44:59,499
I think I think it will become confusing

00:44:57,940 --> 00:45:00,999
the more things been mapped on that

00:44:59,499 --> 00:45:02,559
devices it the more come the more

00:45:00,999 --> 00:45:05,380
confusing it will be because it's not

00:45:02,559 --> 00:45:06,729
even visible what would properly map to

00:45:05,380 --> 00:45:08,199
order and what not it's very difficult

00:45:06,729 --> 00:45:10,299
now if need to find a high-level

00:45:08,199 --> 00:45:11,349
solution to that I think so too and I

00:45:10,299 --> 00:45:14,499
think it's different than switch deaf

00:45:11,349 --> 00:45:16,869
because switch w is a switch it's this

00:45:14,499 --> 00:45:18,430
big object physical thing right and when

00:45:16,869 --> 00:45:20,019
you configure it you think you should

00:45:18,430 --> 00:45:22,749
probably know that it's a switch yeah

00:45:20,019 --> 00:45:25,150
like this is this is a host you know and

00:45:22,749 --> 00:45:27,910
and we don't think we want to get to the

00:45:25,150 --> 00:45:28,930
have expose this to the host right I

00:45:27,910 --> 00:45:30,249
don't know it's the other thing though

00:45:28,930 --> 00:45:32,019
for the most variants of switches

00:45:30,249 --> 00:45:33,339
necesario V is just a brain-dead switch

00:45:32,019 --> 00:45:36,009
it just doesn't know how to learn in a

00:45:33,339 --> 00:45:38,349
lot of cases but the configuration

00:45:36,009 --> 00:45:40,029
channels are different the configuration

00:45:38,349 --> 00:45:41,589
path is if I think what John is saying

00:45:40,029 --> 00:45:43,539
is that if you're using switch def

00:45:41,589 --> 00:45:45,579
models and using the linux API is to

00:45:43,539 --> 00:45:46,959
configure a switch you are very much

00:45:45,579 --> 00:45:49,410
aware that you're dealing with the

00:45:46,959 --> 00:45:51,130
switch if you're on a host you're doing

00:45:49,410 --> 00:45:53,170
configuration you might not even be

00:45:51,130 --> 00:45:56,199
aware that you have an iOS riv capable

00:45:53,170 --> 00:45:59,199
Nick it is existing scripts that run and

00:45:56,199 --> 00:46:00,880
do stuff with net devices I know it's a

00:45:59,199 --> 00:46:03,579
small difference i agree with you that

00:46:00,880 --> 00:46:05,229
and it but i think if nothing else we'll

00:46:03,579 --> 00:46:06,759
we'll probably need to go through so the

00:46:05,229 --> 00:46:09,369
other problem is how would you know that

00:46:06,759 --> 00:46:12,009
his Nick supports it the his Nick

00:46:09,369 --> 00:46:14,259
doesn't and you have right three

00:46:12,009 --> 00:46:17,140
different vendors nixon a system you set

00:46:14,259 --> 00:46:19,059
him to you up on all of them and one of

00:46:17,140 --> 00:46:20,650
them does it the second one says it

00:46:19,059 --> 00:46:21,609
globally and the third one does nothing

00:46:20,650 --> 00:46:23,289
much can i think what we're going to end

00:46:21,609 --> 00:46:25,690
up with as a bunch of slave net devs

00:46:23,289 --> 00:46:27,249
where the slave we're going to end up

00:46:25,690 --> 00:46:28,569
the DSA type scenarios what we're going

00:46:27,249 --> 00:46:32,979
to end up with where we're having to

00:46:28,569 --> 00:46:35,109
define ok this is a slave driver for you

00:46:32,979 --> 00:46:37,209
know intel this is a slave driver for

00:46:35,109 --> 00:46:39,269
mellanox it's a save driver for Chelsea

00:46:37,209 --> 00:46:41,619
Oh what we end up with is essentially

00:46:39,269 --> 00:46:43,749
you'll end up with a set of India ops I

00:46:41,619 --> 00:46:45,489
have to tie into certain functions that

00:46:43,749 --> 00:46:47,519
can then tell you yes or no can this

00:46:45,489 --> 00:46:49,630
support it and if so what's the scenario

00:46:47,519 --> 00:46:54,039
every netdev will have to have a

00:46:49,630 --> 00:46:56,890
corresponding capability query well

00:46:54,039 --> 00:46:58,299
every Indian that it can call into

00:46:56,890 --> 00:47:00,190
because that's how DSA does it right now

00:46:58,299 --> 00:47:02,410
essentially there's a set of functions

00:47:00,190 --> 00:47:03,800
that the slave net devs all call into

00:47:02,410 --> 00:47:05,330
and that's how

00:47:03,800 --> 00:47:07,760
figures on its capability so there's one

00:47:05,330 --> 00:47:10,370
is later learned how does the operator

00:47:07,760 --> 00:47:12,590
loom above it yeah basically i'll end up

00:47:10,370 --> 00:47:17,600
having to advertise the capability to

00:47:12,590 --> 00:47:19,550
some via some mechanism but this is the

00:47:17,600 --> 00:47:21,410
same issues that's ice which have been

00:47:19,550 --> 00:47:23,360
right it is it's different than a switch

00:47:21,410 --> 00:47:24,800
this is a host like you know it you know

00:47:23,360 --> 00:47:27,980
you're working on a switch you have an

00:47:24,800 --> 00:47:30,200
expectation of a switch this is oh yeah

00:47:27,980 --> 00:47:32,330
but that's the Rings I said you need to

00:47:30,200 --> 00:47:34,220
bond all of them to it not one sorry to

00:47:32,330 --> 00:47:36,950
use a linux bridge to tie them together

00:47:34,220 --> 00:47:38,150
so well it'll know so no one will come

00:47:36,950 --> 00:47:40,160
and said okay I want to put an IP

00:47:38,150 --> 00:47:43,060
address on this is a net device because

00:47:40,160 --> 00:47:46,310
that's not my mac don't make any sense

00:47:43,060 --> 00:47:48,680
so i pled to nicks in the device i turn

00:47:46,310 --> 00:47:50,420
on s ravi i put them all in a bridge and

00:47:48,680 --> 00:47:53,180
they have wildly different capabilities

00:47:50,420 --> 00:47:55,160
what how do i as a user so you have two

00:47:53,180 --> 00:47:57,670
bridges no you have to Carly's you have

00:47:55,160 --> 00:48:00,860
no way to stop that from happening today

00:47:57,670 --> 00:48:02,270
you're doing the bottom to know that's

00:48:00,860 --> 00:48:04,250
the reason you've got the switch as

00:48:02,270 --> 00:48:07,100
which of the padding is your limit to

00:48:04,250 --> 00:48:12,320
the the overlapping set of capabilities

00:48:07,100 --> 00:48:13,760
your whatever the least the come the

00:48:12,320 --> 00:48:14,840
lowest common denominator ends up

00:48:13,760 --> 00:48:18,470
becoming what you end up having to

00:48:14,840 --> 00:48:20,240
support in that kind of scenario gets

00:48:18,470 --> 00:48:21,350
ugly quickly yeah but see that's the

00:48:20,240 --> 00:48:22,550
thing is we're not necessarily talking

00:48:21,350 --> 00:48:24,620
about that kind of thing it ends up

00:48:22,550 --> 00:48:27,920
being essentially the case to answer a

00:48:24,620 --> 00:48:30,080
beat you have a PFD not bf's most likely

00:48:27,920 --> 00:48:32,930
your capability sets going to be fairly

00:48:30,080 --> 00:48:35,510
consistent among those yeah so in that

00:48:32,930 --> 00:48:37,940
type of scenario if you can't change

00:48:35,510 --> 00:48:39,620
into you or if it has to be global for

00:48:37,940 --> 00:48:42,080
everything that's a fairly easy thing to

00:48:39,620 --> 00:48:43,280
represent yes there ends up being some

00:48:42,080 --> 00:48:44,540
side effects as sort of like

00:48:43,280 --> 00:48:48,080
capabilities Craig are you gonna say

00:48:44,540 --> 00:48:48,980
yeah yeah I just wanted to know that you

00:48:48,080 --> 00:48:52,100
are saying that this is something

00:48:48,980 --> 00:48:55,250
different than then standards which it

00:48:52,100 --> 00:48:58,640
is not actually you only what you want

00:48:55,250 --> 00:49:00,770
to do is to set up the the day apart

00:48:58,640 --> 00:49:04,100
that's basically it right so that's

00:49:00,770 --> 00:49:06,590
exactly what we do in I I witches so at

00:49:04,100 --> 00:49:08,840
that level this same I'm just saying the

00:49:06,590 --> 00:49:11,000
operator is aware that is programming a

00:49:08,840 --> 00:49:12,830
switch and you ain't mad but you know it

00:49:11,000 --> 00:49:15,440
if for sr I we as well the switch ID

00:49:12,830 --> 00:49:17,480
know the type of the device you know

00:49:15,440 --> 00:49:19,580
that it is switch I'm not sure they are

00:49:17,480 --> 00:49:21,140
wants to know it really limited switch

00:49:19,580 --> 00:49:23,960
that's the only difference right because

00:49:21,140 --> 00:49:25,520
the IP will show that you know it's got

00:49:23,960 --> 00:49:26,780
a parent switch that's linked into and

00:49:25,520 --> 00:49:28,670
everything so all the ports will show up

00:49:26,780 --> 00:49:30,380
as being I know but what work I have to

00:49:28,670 --> 00:49:32,180
do is you're on to have everything that

00:49:30,380 --> 00:49:35,270
you can do will have to have any quiver

00:49:32,180 --> 00:49:37,490
bilities bit to say that I que si can do

00:49:35,270 --> 00:49:41,570
this no I can't and you'll have to do

00:49:37,490 --> 00:49:44,140
want to do like a you know are all these

00:49:41,570 --> 00:49:46,730
bits set on all net devs or not do it

00:49:44,140 --> 00:49:47,720
right that's that's if you want it to

00:49:46,730 --> 00:49:49,700
work that's what you have to end up

00:49:47,720 --> 00:49:51,740
doing like what kind of capabilities is

00:49:49,700 --> 00:49:55,400
that you have in mind I set him to you

00:49:51,740 --> 00:49:58,119
set port VLAN set set promiscuous mode

00:49:55,400 --> 00:50:01,010
so i could actually run the bridge set

00:49:58,119 --> 00:50:02,840
okay now what that's the thing that I

00:50:01,010 --> 00:50:04,760
think you just got into something weird

00:50:02,840 --> 00:50:09,290
here so why are you saying promiscuous

00:50:04,760 --> 00:50:12,050
mode on switch port okay okay but the MF

00:50:09,290 --> 00:50:14,600
you got an NGO to set them to you what's

00:50:12,050 --> 00:50:18,109
that you got a propriety and NGO

00:50:14,600 --> 00:50:20,210
function that's it's it's a proprietary

00:50:18,109 --> 00:50:21,980
driver or does that mean I don't know

00:50:20,210 --> 00:50:24,740
what proprietary driver yes sir it's a

00:50:21,980 --> 00:50:26,600
vendor as I Drive vendor driver so the

00:50:24,740 --> 00:50:29,210
vendor need to coordinate all the

00:50:26,600 --> 00:50:30,980
negative the net device of this way not

00:50:29,210 --> 00:50:32,300
to have the capability query the system

00:50:30,980 --> 00:50:33,500
and learn for every feature whether or

00:50:32,300 --> 00:50:35,810
not it exists actually the more thing

00:50:33,500 --> 00:50:39,109
about this this does sound like DSA DSA

00:50:35,810 --> 00:50:40,910
in a lot of cases you don't have you

00:50:39,109 --> 00:50:43,160
know you've got the ports on one end and

00:50:40,910 --> 00:50:44,869
you got a device that's sitting there in

00:50:43,160 --> 00:50:48,109
between that's the actual ethernet mac

00:50:44,869 --> 00:50:53,060
is usually it's a fight base switch and

00:50:48,109 --> 00:50:55,010
so PF represents that mac that you're

00:50:53,060 --> 00:50:56,630
actually seeing traffic on and the BSR

00:50:55,010 --> 00:50:59,030
your virtualized ports on the other side

00:50:56,630 --> 00:51:00,530
yeah and so that's how you're

00:50:59,030 --> 00:51:01,940
controlling a lot of this so it ends up

00:51:00,530 --> 00:51:03,350
being you send a control command through

00:51:01,940 --> 00:51:05,540
the PF so yet allow this is just

00:51:03,350 --> 00:51:07,550
sounding like DSA in terms of setup or

00:51:05,540 --> 00:51:11,420
speech ative yeah well switch dev

00:51:07,550 --> 00:51:12,890
friends on top of DSA yeah so yeah so I

00:51:11,420 --> 00:51:14,210
think we might be over complicating this

00:51:12,890 --> 00:51:15,859
we might want to look at just trying to

00:51:14,210 --> 00:51:19,609
start on the simple cases and then get

00:51:15,859 --> 00:51:21,140
the more complicated stuff later I think

00:51:19,609 --> 00:51:22,430
that's probably okay I just think we're

00:51:21,140 --> 00:51:24,170
going to have this scenario going

00:51:22,430 --> 00:51:25,940
forward where we're going to end up in a

00:51:24,170 --> 00:51:27,380
situation where you have to nix two

00:51:25,940 --> 00:51:29,270
different vendors two different versions

00:51:27,380 --> 00:51:29,970
of drivers or something and you'll have

00:51:29,270 --> 00:51:32,530
to

00:51:29,970 --> 00:51:33,760
look at this boolean string and figure

00:51:32,530 --> 00:51:35,170
out what you can support and you'll be

00:51:33,760 --> 00:51:36,880
after to go down to the lowest common

00:51:35,170 --> 00:51:40,180
denominator or otherwise strange things

00:51:36,880 --> 00:51:43,570
will happen well it's the way it is even

00:51:40,180 --> 00:51:47,290
with Nick's right now so like honestly

00:51:43,570 --> 00:51:50,650
hit right now it's okay I take in

00:51:47,290 --> 00:51:52,750
mellanox and an Intel ixgbe if I take

00:51:50,650 --> 00:51:55,360
the 44 Colonel I put in both in

00:51:52,750 --> 00:51:58,870
promiscuous mode okay i'm getting vlans

00:51:55,360 --> 00:52:00,430
and broadcast on this 1i h CBE well it's

00:51:58,870 --> 00:52:01,900
quiet it doesn't say anything come

00:52:00,430 --> 00:52:04,210
what's going on there you're going to

00:52:01,900 --> 00:52:05,770
always have some sort of you know lowest

00:52:04,210 --> 00:52:07,270
common denominator between the two so if

00:52:05,770 --> 00:52:09,760
I have to run a flat network in order to

00:52:07,270 --> 00:52:11,140
make it work that's you know what I have

00:52:09,760 --> 00:52:13,180
to do I think this is one of those

00:52:11,140 --> 00:52:14,410
things where let the users shoot

00:52:13,180 --> 00:52:16,720
themselves in the foot if they want to

00:52:14,410 --> 00:52:18,280
but we shouldn't be standing in the way

00:52:16,720 --> 00:52:21,550
because they might shoot themselves in

00:52:18,280 --> 00:52:23,080
the foot okay because I think to some

00:52:21,550 --> 00:52:25,270
extent you know the administrator is

00:52:23,080 --> 00:52:27,790
going to know their topology we always

00:52:25,270 --> 00:52:30,310
say you know that these ports belong to

00:52:27,790 --> 00:52:33,790
this switch so if they're trying to do

00:52:30,310 --> 00:52:35,560
something bizarre you know if not we

00:52:33,790 --> 00:52:39,400
will find those self every time need to

00:52:35,560 --> 00:52:43,380
to to to add the new things because and

00:52:39,400 --> 00:52:45,460
if it's a switch it's all well defined

00:52:43,380 --> 00:52:46,690
because it would basically make my life

00:52:45,460 --> 00:52:47,950
a lot easier if we start going through

00:52:46,690 --> 00:52:50,560
the switch step process because then it

00:52:47,950 --> 00:52:52,090
becomes a ok this is this way this is

00:52:50,560 --> 00:52:54,130
supposed to be a switch this is how it

00:52:52,090 --> 00:52:56,800
should act so essentially we end up with

00:52:54,130 --> 00:52:58,990
the legacy SRV stuff where it's you know

00:52:56,800 --> 00:53:01,420
a non learning switch doesn't support

00:52:58,990 --> 00:53:03,280
open flow or any of that but hopefully

00:53:01,420 --> 00:53:04,870
we'll be able to put a CLS on it and say

00:53:03,280 --> 00:53:09,490
these max or what it can send and

00:53:04,870 --> 00:53:12,880
receive on our vlans or whatever and

00:53:09,490 --> 00:53:14,530
then then we can start you know looking

00:53:12,880 --> 00:53:15,850
ATS porking it out a little bit so we've

00:53:14,530 --> 00:53:19,420
got basically brain-dead bridge

00:53:15,850 --> 00:53:21,430
equivalent of SRO v4 0 vs with open flow

00:53:19,420 --> 00:53:24,910
version of sra will be and start looking

00:53:21,430 --> 00:53:27,180
at working things out that way so if I

00:53:24,910 --> 00:53:29,530
understand this right there are some

00:53:27,180 --> 00:53:34,090
capabilities in the device which are

00:53:29,530 --> 00:53:35,890
more global like RSS you know algorithm

00:53:34,090 --> 00:53:39,070
or whatever you use to a place versus

00:53:35,890 --> 00:53:41,140
simple or symmetric whatever and these

00:53:39,070 --> 00:53:42,880
are like global settings so do I see

00:53:41,140 --> 00:53:45,160
this as a switch def control

00:53:42,880 --> 00:53:47,200
and I wouldn't necessarily do anyone

00:53:45,160 --> 00:53:49,960
want to go that far in terms of you know

00:53:47,200 --> 00:53:51,759
can you control RSS via the switch that

00:53:49,960 --> 00:53:53,589
I think know that should be let that

00:53:51,759 --> 00:53:55,420
support attribute is over the net to

00:53:53,589 --> 00:53:57,069
have and nothing is in some cases it is

00:53:55,420 --> 00:53:58,630
probably not a poured out of its

00:53:57,069 --> 00:54:00,579
actually a device attribute and that's

00:53:58,630 --> 00:54:03,279
why I'm wondering there like some

00:54:00,579 --> 00:54:05,769
attributes that are global to the device

00:54:03,279 --> 00:54:08,680
and we at present have a problem where

00:54:05,769 --> 00:54:12,339
if I have to control it through a single

00:54:08,680 --> 00:54:14,920
you know port or you know in an mfp

00:54:12,339 --> 00:54:17,440
device through a PF it ends up changing

00:54:14,920 --> 00:54:19,809
it for everybody underneath right right

00:54:17,440 --> 00:54:20,980
that's kind of getting into an area you

00:54:19,809 --> 00:54:22,539
know that's not really related to the

00:54:20,980 --> 00:54:24,670
switching at all and that goes beyond

00:54:22,539 --> 00:54:28,000
what we should bothering be bothering

00:54:24,670 --> 00:54:29,710
with with local config mostly what we're

00:54:28,000 --> 00:54:30,880
concerned with is he Billy how the

00:54:29,710 --> 00:54:33,579
traffic flows were concerned with the

00:54:30,880 --> 00:54:36,339
data path not the where it ends up in

00:54:33,579 --> 00:54:38,980
the very final like that last little bit

00:54:36,339 --> 00:54:40,809
of which q is it can end up on it's just

00:54:38,980 --> 00:54:42,730
what does that guests have access to

00:54:40,809 --> 00:54:45,339
that's essentially the demarcation point

00:54:42,730 --> 00:54:47,980
once it guest has access to it they can

00:54:45,339 --> 00:54:49,150
do what it wants with the data so we

00:54:47,980 --> 00:54:51,940
don't need to be controlling things like

00:54:49,150 --> 00:54:55,299
you know the RSS tables the number of

00:54:51,940 --> 00:54:57,220
cueball not the table but I'm just

00:54:55,299 --> 00:55:00,369
trying to see if there is a possibility

00:54:57,220 --> 00:55:02,589
that we could expose some of those you

00:55:00,369 --> 00:55:04,599
know global setting in some way and if

00:55:02,589 --> 00:55:07,150
it makes sense to do it to switch them

00:55:04,599 --> 00:55:09,549
no most likely not that's not a switch

00:55:07,150 --> 00:55:12,940
functionality that I've ever heard of so

00:55:09,549 --> 00:55:16,480
so I think the main concern around and

00:55:12,940 --> 00:55:18,039
VFS net device would be if you can

00:55:16,480 --> 00:55:19,569
figure it with something that expects a

00:55:18,039 --> 00:55:22,180
packet actually flows through the net

00:55:19,569 --> 00:55:24,490
device so a new flag and a couple of

00:55:22,180 --> 00:55:26,529
checks inside a kernel that will just

00:55:24,490 --> 00:55:28,839
bark if you use such a representation

00:55:26,529 --> 00:55:32,200
only net device in for example netfilter

00:55:28,839 --> 00:55:34,359
that might be good balance and might be

00:55:32,200 --> 00:55:36,910
enough to avoid confusion on the host

00:55:34,359 --> 00:55:39,220
side well if you want you probably could

00:55:36,910 --> 00:55:40,930
rather traffic through that's the thing

00:55:39,220 --> 00:55:43,269
is essentially that's where we get back

00:55:40,930 --> 00:55:45,460
to DSA because technically as long as

00:55:43,269 --> 00:55:47,349
you put the VF smack address as the

00:55:45,460 --> 00:55:49,779
destination mac for any outgoing traffic

00:55:47,349 --> 00:55:52,299
it's going to get to that VF one way or

00:55:49,779 --> 00:55:53,559
the other the trick is if you want to

00:55:52,299 --> 00:55:57,309
actually use it to send right you send

00:55:53,559 --> 00:55:58,869
over I at PF right yep so you steal a

00:55:57,309 --> 00:56:00,369
couple of cues from the PF and put you

00:55:58,869 --> 00:56:02,769
don't even have to steal them you just I

00:56:00,369 --> 00:56:05,440
change that dental and put it on yeah

00:56:02,769 --> 00:56:07,450
you just set the mac address and set it

00:56:05,440 --> 00:56:08,680
out that's all it would be it's

00:56:07,450 --> 00:56:10,240
essentially some mac meal and at that

00:56:08,680 --> 00:56:15,990
point only it's doing the destination

00:56:10,240 --> 00:56:19,380
back instead of the source MAC okay I

00:56:15,990 --> 00:56:23,230
think we should put something them in

00:56:19,380 --> 00:56:25,539
the weird case is like so you configure

00:56:23,230 --> 00:56:28,059
something like n of T on top of all this

00:56:25,539 --> 00:56:29,799
to you to the user actually wanted on

00:56:28,059 --> 00:56:31,150
the local VF that's representative or

00:56:29,799 --> 00:56:32,710
did he actually want you to load it into

00:56:31,150 --> 00:56:34,240
the hardware right like and that's where

00:56:32,710 --> 00:56:36,039
we metting where it gets kind of using

00:56:34,240 --> 00:56:37,839
little that's why we have these plagues

00:56:36,039 --> 00:56:40,269
and things so right that's the end of

00:56:37,839 --> 00:56:41,740
the represent I think where it would be

00:56:40,269 --> 00:56:44,680
useful to have something like a bridge

00:56:41,740 --> 00:56:45,940
for legacy you know just put a bridge

00:56:44,680 --> 00:56:48,250
interface on top of it and then

00:56:45,940 --> 00:56:49,690
hopefully eventually someday maybe we

00:56:48,250 --> 00:56:52,750
could offload stuff that goes between

00:56:49,690 --> 00:56:53,950
the bridge and that port offers the

00:56:52,750 --> 00:56:57,190
hardware so could actually take care of

00:56:53,950 --> 00:56:58,769
it for us sure but yeah that's what we

00:56:57,190 --> 00:57:01,390
trying to do with nope envisage right

00:56:58,769 --> 00:57:02,589
yep so you're getting ahead see most of

00:57:01,390 --> 00:57:04,210
the hardware out there doesn't support

00:57:02,589 --> 00:57:06,579
the flow so that's where everything why

00:57:04,210 --> 00:57:09,250
I think also there but we'll do that

00:57:06,579 --> 00:57:11,980
before slow pace Alex Wiz do represent

00:57:09,250 --> 00:57:14,049
us what we'll do we support will do

00:57:11,980 --> 00:57:16,329
patches that only does do slow pass and

00:57:14,049 --> 00:57:18,970
then at the step forward would be to

00:57:16,329 --> 00:57:21,609
capote sweet as which FF D be right we

00:57:18,970 --> 00:57:24,220
don't have to run to flows right so so

00:57:21,609 --> 00:57:26,680
also the legacy mode could be embedded

00:57:24,220 --> 00:57:27,789
in this firmer right because that it

00:57:26,680 --> 00:57:29,740
just make things easier in terms of

00:57:27,789 --> 00:57:31,150
representation like then you know I'm

00:57:29,740 --> 00:57:32,799
just thinking off top of my head and

00:57:31,150 --> 00:57:35,109
like yeah if you support open flow as

00:57:32,799 --> 00:57:36,460
you go there represent it with the ovs

00:57:35,109 --> 00:57:42,880
switch on top of the port's otherwise

00:57:36,460 --> 00:57:47,670
it's just plain rude year yeah some sort

00:57:42,880 --> 00:57:47,670
of consensus here good enough for friday

00:57:48,770 --> 00:57:57,150
anything else that according it yeah no

00:57:53,430 --> 00:58:00,690
I don't hope there we go got one more no

00:57:57,150 --> 00:58:03,740
all right and i think that's it and

00:58:00,690 --> 00:58:03,740

YouTube URL: https://www.youtube.com/watch?v=z-cfGXJ3iTs


