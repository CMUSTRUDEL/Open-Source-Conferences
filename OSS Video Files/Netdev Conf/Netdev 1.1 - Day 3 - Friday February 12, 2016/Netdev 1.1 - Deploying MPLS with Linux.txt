Title: Netdev 1.1 - Deploying MPLS with Linux
Publication date: 2016-03-15
Playlist: Netdev 1.1 - Day 3 - Friday February 12, 2016
Description: 
	Roopa Prabhu
February 2016
Captions: 
	00:00:01,610 --> 00:00:08,580
hello everyone my name is Rupa and I am

00:00:05,790 --> 00:00:12,090
cumulus networks and I this tutorial is

00:00:08,580 --> 00:00:15,350
about MPLS and this is Robert who is

00:00:12,090 --> 00:00:22,710
also main contributor to the Linux MPLS

00:00:15,350 --> 00:00:24,960
kernel code to set the tone for the

00:00:22,710 --> 00:00:31,230
tutorial it's gonna be a basic how to

00:00:24,960 --> 00:00:34,050
get started with MPLS with on Linux I am

00:00:31,230 --> 00:00:36,300
fairly new to MPLS as well so if you're

00:00:34,050 --> 00:00:38,010
really looking to move your data center

00:00:36,300 --> 00:00:41,430
to MPLS or something I'm not the person

00:00:38,010 --> 00:00:49,469
you should consult but Robert here is

00:00:41,430 --> 00:00:51,930
also a good and is an expert at MPLS so

00:00:49,469 --> 00:00:55,530
I do have a few slides the first few

00:00:51,930 --> 00:00:58,770
slides to get in introducing MPLS mostly

00:00:55,530 --> 00:01:03,799
some of MPLS literature I gathered from

00:00:58,770 --> 00:01:06,210
the web I'll start with that

00:01:03,799 --> 00:01:08,820
so MPLS is the protocol independent

00:01:06,210 --> 00:01:11,100
transport packets are assigned labels

00:01:08,820 --> 00:01:15,509
and packet forwarding decisions are made

00:01:11,100 --> 00:01:19,500
on labels instead of regular IP lookup

00:01:15,509 --> 00:01:23,150
IP address lookups so MPLS operates at

00:01:19,500 --> 00:01:25,590
layer between data link layer and

00:01:23,150 --> 00:01:29,189
network layer it's often called the shim

00:01:25,590 --> 00:01:33,210
layer 2.5 mainly used in service

00:01:29,189 --> 00:01:38,640
provider networks can carry IP ATM frame

00:01:33,210 --> 00:01:41,670
relay traffic MPLS again from the

00:01:38,640 --> 00:01:44,130
literature that i've gathered was is a

00:01:41,670 --> 00:01:46,829
Wallis solution to integrate IP over ATM

00:01:44,130 --> 00:01:50,040
and its success is mainly primarily

00:01:46,829 --> 00:01:54,659
because it's it enables the network to

00:01:50,040 --> 00:01:58,740
carry all kinds of traffic again the

00:01:54,659 --> 00:02:00,540
same thing it's it enables you network

00:01:58,740 --> 00:02:02,219
to have a unified network infrastructure

00:02:00,540 --> 00:02:06,380
mainly for service providers to carry

00:02:02,219 --> 00:02:06,380
all kinds of customer traffic

00:02:08,429 --> 00:02:18,299
a little bit on the terminologies of an

00:02:13,469 --> 00:02:20,879
MPLS Network the first router or the

00:02:18,299 --> 00:02:23,969
edge routers and where and you enter

00:02:20,879 --> 00:02:28,109
into an MPLS tunnel ingress and egress

00:02:23,969 --> 00:02:29,790
and the routers in between our label

00:02:28,109 --> 00:02:32,099
switching routers or they're also called

00:02:29,790 --> 00:02:37,079
LS ours so the edge routers are called

00:02:32,099 --> 00:02:40,739
le are so the first router usually

00:02:37,079 --> 00:02:42,239
attaches labels forwards labels forwards

00:02:40,739 --> 00:02:44,459
packets based on label and the future

00:02:42,239 --> 00:02:47,220
routers they basically switch only on

00:02:44,459 --> 00:02:50,579
the label final destination router

00:02:47,220 --> 00:02:55,049
removes the label and forwards traffic

00:02:50,579 --> 00:03:01,019
using regular routing this is a picture

00:02:55,049 --> 00:03:03,090
of showing the Le ours at the edges and

00:03:01,019 --> 00:03:12,720
in between the routers are called LS

00:03:03,090 --> 00:03:15,239
arson this is an example if you attended

00:03:12,720 --> 00:03:20,190
the previous we are of talk I'm sure

00:03:15,239 --> 00:03:23,849
David had something similar this kind of

00:03:20,190 --> 00:03:26,970
shows the provider backbone MPLS in the

00:03:23,849 --> 00:03:30,180
provider backbone network p1 and p2 are

00:03:26,970 --> 00:03:33,359
the provider edge devices again they are

00:03:30,180 --> 00:03:40,919
le RS the edge routers enter and exit

00:03:33,359 --> 00:03:47,909
into the MPLS tile or MPLS network this

00:03:40,919 --> 00:03:54,239
is from an RFC MPLS label entry encoding

00:03:47,909 --> 00:03:56,669
I have a tendency to rush through my

00:03:54,239 --> 00:04:00,419
slides so if you have any questions your

00:03:56,669 --> 00:04:01,889
interrupt I think the important point on

00:04:00,419 --> 00:04:04,349
that previous slide is it's basically

00:04:01,889 --> 00:04:06,629
just a four bytes end cap so that's

00:04:04,349 --> 00:04:09,659
that's the extra in cap that you pay for

00:04:06,629 --> 00:04:12,319
MPs compared to some of the IP based

00:04:09,659 --> 00:04:12,319
stain caps

00:04:16,190 --> 00:04:23,430
okay now we'll go into the linux

00:04:19,620 --> 00:04:25,289
commands to configure MPLS routes so

00:04:23,430 --> 00:04:28,050
this is the first thing is on the label

00:04:25,289 --> 00:04:32,729
switching router that is LS B's which

00:04:28,050 --> 00:04:38,520
taking an MPLS packet and swapper pop

00:04:32,729 --> 00:04:39,870
labels and forward MPLS so in the kernel

00:04:38,520 --> 00:04:42,210
you would and these are the config

00:04:39,870 --> 00:04:45,180
options to enable MPLS routing config

00:04:42,210 --> 00:04:47,789
and pls and configurability routing the

00:04:45,180 --> 00:04:50,759
code the driver code the first version

00:04:47,789 --> 00:04:56,280
was written by Eric bidelman and that is

00:04:50,759 --> 00:04:59,280
in that MPLS AF MPLS ROTC so it uses the

00:04:56,280 --> 00:05:01,440
existing IP routing meta link attributes

00:04:59,280 --> 00:05:04,160
if you are aware of that

00:05:01,440 --> 00:05:07,590
they're usually RTA they start with RTA

00:05:04,160 --> 00:05:10,919
star and the new attribute Sarek to that

00:05:07,590 --> 00:05:15,030
are RTA new test to indicate a label to

00:05:10,919 --> 00:05:20,389
carry a label an RTA we are to carry a

00:05:15,030 --> 00:05:23,699
test and ipv4 or ipv6 test

00:05:20,389 --> 00:05:26,880
robert you can interrupter add anything

00:05:23,699 --> 00:05:29,909
to what ice yeah RTA via attribute is

00:05:26,880 --> 00:05:33,150
analogous to the RTA Gateway attribute

00:05:29,909 --> 00:05:41,820
accepts it it allows different address

00:05:33,150 --> 00:05:44,039
families it's not enabled by default in

00:05:41,820 --> 00:05:45,599
every interface so if you want to enable

00:05:44,039 --> 00:05:48,380
it on an interface that is a proc node

00:05:45,599 --> 00:05:48,380
sorry

00:05:50,270 --> 00:05:57,090
so this is an example from our boxes

00:05:54,240 --> 00:06:00,590
which used swp 1s which ports and you

00:05:57,090 --> 00:06:03,240
echo 1 into NFL MPLS on that indices

00:06:00,590 --> 00:06:05,940
yeah that's just because there's of the

00:06:03,240 --> 00:06:08,760
different sort of deployment model of

00:06:05,940 --> 00:06:11,130
MPLS is that because you assume that the

00:06:08,760 --> 00:06:14,639
whole of your MPLS network is one

00:06:11,130 --> 00:06:15,960
security domain as in reuters trust the

00:06:14,639 --> 00:06:18,900
label values that they get from each

00:06:15,960 --> 00:06:21,180
other are you know that they're talking

00:06:18,900 --> 00:06:23,039
to the right person then basically you

00:06:21,180 --> 00:06:25,229
need to make sure that you don't accept

00:06:23,039 --> 00:06:27,310
label traffic from what potentially

00:06:25,229 --> 00:06:33,970
could be untrusted interfaces so

00:06:27,310 --> 00:06:37,930
for example your your VPN customers the

00:06:33,970 --> 00:06:44,740
IP log two commands are examples to add

00:06:37,930 --> 00:06:47,710
MPLS routes - f as you know it takes v4

00:06:44,740 --> 00:06:53,080
and v6 today and this is a new family

00:06:47,710 --> 00:06:55,510
MPLS family route ad label ten and yeah

00:06:53,080 --> 00:06:59,560
the other as to is the destination label

00:06:55,510 --> 00:07:03,340
stack 200 300 and the destination the

00:06:59,560 --> 00:07:06,280
next table so the IP route to show

00:07:03,340 --> 00:07:13,870
commands also take a family MPLS to dump

00:07:06,280 --> 00:07:16,600
the MPLS film there is also multipath

00:07:13,870 --> 00:07:21,729
support for MPLS routes which was

00:07:16,600 --> 00:07:23,410
recently added in 4.5 kernel and this

00:07:21,729 --> 00:07:27,450
follows the same syntax as you would add

00:07:23,410 --> 00:07:27,450
the ipv4 and ipv6 routes

00:07:34,400 --> 00:07:45,440
this is the edge router edge router is

00:07:37,280 --> 00:07:48,160
the MPLS tunnels the end routers so this

00:07:45,440 --> 00:07:52,130
uses lightweight tunnel infrastructure

00:07:48,160 --> 00:07:55,490
so with MPLS we were sure that we will

00:07:52,130 --> 00:07:56,840
not add separate net device for the

00:07:55,490 --> 00:07:59,990
tunnel the MPLS tunnel

00:07:56,840 --> 00:08:03,680
so what LWT does is it provides an

00:07:59,990 --> 00:08:07,850
infrastructure to add assign endcap

00:08:03,680 --> 00:08:09,470
attributes to route i instead of

00:08:07,850 --> 00:08:13,479
creating a tunnel subnet tunnel device

00:08:09,470 --> 00:08:17,690
and LWT infrastructure basically

00:08:13,479 --> 00:08:21,229
generalizes that you then cap attributes

00:08:17,690 --> 00:08:27,710
take a family and yeah you can have any

00:08:21,229 --> 00:08:29,900
set of attributes so so many drivers

00:08:27,710 --> 00:08:31,729
many it provides it infrastructure it

00:08:29,900 --> 00:08:34,880
for read drivers for lightweight tunnel

00:08:31,729 --> 00:08:35,959
drivers to register ops and the the

00:08:34,880 --> 00:08:37,669
reason that you need to use lightweight

00:08:35,959 --> 00:08:40,700
one also MPLS is because you can have

00:08:37,669 --> 00:08:42,289
thousands and thousands of these these

00:08:40,700 --> 00:08:45,200
LSPs which are essentially tunnels

00:08:42,289 --> 00:08:49,279
through your network yeah and if you had

00:08:45,200 --> 00:08:52,610
ended the scaling devices talked on yeah

00:08:49,279 --> 00:09:00,440
on Wednesday MPLS tunnels could create a

00:08:52,610 --> 00:09:02,570
huge scaling issue so this this is a

00:09:00,440 --> 00:09:06,380
little more details about where to find

00:09:02,570 --> 00:09:10,910
the LWT infrastructure and the route

00:09:06,380 --> 00:09:13,820
attributes to assign and cap to route so

00:09:10,910 --> 00:09:23,230
this is also being used by VX LAN and

00:09:13,820 --> 00:09:26,720
Geneva tunnels today and yeah so MPLS

00:09:23,230 --> 00:09:28,339
tunnel driver is nothing but is a

00:09:26,720 --> 00:09:30,860
lightweight tunnel driver which

00:09:28,339 --> 00:09:34,160
registers using the lightweight tunnel

00:09:30,860 --> 00:09:37,160
infrastructure and you enable it by

00:09:34,160 --> 00:09:44,959
using by using the configure option MPLS

00:09:37,160 --> 00:09:46,550
IP tunnel here's an example of attaching

00:09:44,959 --> 00:09:50,810
your

00:09:46,550 --> 00:09:55,490
mpls and gap attributes to regular

00:09:50,810 --> 00:09:58,640
routes and there is a multipath example

00:09:55,490 --> 00:10:03,740
as well it follows the exact format as

00:09:58,640 --> 00:10:06,520
you would add ipv4 or ipv6 routes so the

00:10:03,740 --> 00:10:09,410
kernel when it sees such a route and it

00:10:06,520 --> 00:10:13,640
sees the attributes and gap attributes

00:10:09,410 --> 00:10:17,780
it creates an LWT State for that route a

00:10:13,640 --> 00:10:20,540
tunnel state for that route and after

00:10:17,780 --> 00:10:24,140
during IP lookup IB router lookup output

00:10:20,540 --> 00:10:26,990
lookup it depending on the family of the

00:10:24,140 --> 00:10:30,620
endcap it redirects you to the tunnel

00:10:26,990 --> 00:10:38,920
and gap function in this case

00:10:30,620 --> 00:10:38,920
MPLS this is an ipv6 example

00:10:46,920 --> 00:10:53,460
so there are multiple things going on

00:10:50,660 --> 00:10:57,720
there is MP Lestat's which Roberts

00:10:53,460 --> 00:11:02,180
patches are outstanding and we will we

00:10:57,720 --> 00:11:07,200
are looking at MPLS l3 VPN you must have

00:11:02,180 --> 00:11:10,740
seen David stock on vrf and I think he

00:11:07,200 --> 00:11:13,950
had a use case for l3 MPLS in vrf as

00:11:10,740 --> 00:11:16,440
well in his demo and like everything

00:11:13,950 --> 00:11:22,350
else we will be at some point offloading

00:11:16,440 --> 00:11:23,850
this to Hardware on our boxes and there

00:11:22,350 --> 00:11:36,540
will be some switch it of effort around

00:11:23,850 --> 00:11:40,410
it generally you don't really set up

00:11:36,540 --> 00:11:45,450
your own label tunnels all over here

00:11:40,410 --> 00:11:49,260
networking use something like LDP so we

00:11:45,450 --> 00:11:53,310
we have a prototype with using static

00:11:49,260 --> 00:11:55,170
labels currently of y 1/4 but i think

00:11:53,310 --> 00:11:57,120
you can use bgp as well to distribute

00:11:55,170 --> 00:12:01,310
labels and we are looking at it i'm not

00:11:57,120 --> 00:12:04,740
sure if the upstream quagga has any

00:12:01,310 --> 00:12:07,590
support for that yet but yeah you could

00:12:04,740 --> 00:12:11,090
run any LDP or any other protocol in

00:12:07,590 --> 00:12:13,710
userspace so what it has to do is

00:12:11,090 --> 00:12:15,630
eventually it has to just land the

00:12:13,710 --> 00:12:17,970
routes into the kernel the MPLS routes

00:12:15,630 --> 00:12:21,510
into the kernel and from there things

00:12:17,970 --> 00:12:24,090
flow exactly how it would in the ipv4

00:12:21,510 --> 00:12:27,930
ipv6 in terms of hardware offload at

00:12:24,090 --> 00:12:33,090
least what about VPLS any fluence for

00:12:27,930 --> 00:12:35,340
that no not from our side yes I mean l2

00:12:33,090 --> 00:12:38,010
and saw the l2 VPN the the pseudo wire

00:12:35,340 --> 00:12:41,330
stuff is is something that's that I plan

00:12:38,010 --> 00:12:43,980
to look up at that look at in due course

00:12:41,330 --> 00:12:46,710
VPLS might be a bit more tricky because

00:12:43,980 --> 00:12:48,870
I think that there's a there was a

00:12:46,710 --> 00:12:52,350
requirement to do MPLS multicast with

00:12:48,870 --> 00:12:54,570
that and that's something that I'm not

00:12:52,350 --> 00:12:56,400
planning to look at but certainly the

00:12:54,570 --> 00:12:56,780
sort of the LTV Penn pseudo wire stuff

00:12:56,400 --> 00:13:00,250
is

00:12:56,780 --> 00:13:00,250
is on on the horizon

00:13:11,280 --> 00:13:15,820
could you elaborate on the hardware also

00:13:13,690 --> 00:13:18,490
that you're looking for for MPLS is it

00:13:15,820 --> 00:13:22,590
just a in Kappa Kappa float or there's

00:13:18,490 --> 00:13:32,980
more to it but that's all and cap decap

00:13:22,590 --> 00:13:35,710
lsraeli our booth so what is the state

00:13:32,980 --> 00:13:37,890
of integrating MPLS with host

00:13:35,710 --> 00:13:39,820
functionality such as checksum off

00:13:37,890 --> 00:13:43,300
segmentation offload and things like

00:13:39,820 --> 00:13:45,850
that I have not thought about it I've

00:13:43,300 --> 00:13:46,930
not looked at it actually most of it

00:13:45,850 --> 00:13:48,100
actually should be pretty

00:13:46,930 --> 00:13:49,780
straightforward yeah I should be

00:13:48,100 --> 00:13:56,080
straightforward and then I believe it's

00:13:49,780 --> 00:13:57,880
RC 7510 is UDP or MPLS over UDP given

00:13:56,080 --> 00:13:59,680
the lightweight tunnel infrastructure

00:13:57,880 --> 00:14:01,870
that actually should be pretty trivial -

00:13:59,680 --> 00:14:05,260
yeah yeah the nice part about that is

00:14:01,870 --> 00:14:07,810
it's actually the only UDP encapsulation

00:14:05,260 --> 00:14:08,950
so far that's an Internet standard so if

00:14:07,810 --> 00:14:19,270
we get that and that would actually be

00:14:08,950 --> 00:14:22,270
kind of cool okay so Empire's

00:14:19,270 --> 00:14:26,110
integrated with IP IP without tool as

00:14:22,270 --> 00:14:30,180
well as IP table any people to not be

00:14:26,110 --> 00:14:35,050
tables only IP route do I have tables

00:14:30,180 --> 00:14:38,290
sorry IP tables and life tables and if

00:14:35,050 --> 00:14:40,050
tables yes there's no there's no current

00:14:38,290 --> 00:14:44,500
support of the main yeah or running

00:14:40,050 --> 00:14:46,360
netfilter hooks on basically egress when

00:14:44,500 --> 00:14:48,100
you're popping the label off and you're

00:14:46,360 --> 00:14:50,220
going out as IP that again that's

00:14:48,100 --> 00:14:56,260
something that that needs to be done and

00:14:50,220 --> 00:14:58,630
should be done yeah encompass over IP IP

00:14:56,260 --> 00:15:00,730
use out to support these forty support

00:14:58,630 --> 00:15:03,990
the other night I can't use the same IP

00:15:00,730 --> 00:15:09,340
lot to command to convey to NPI's

00:15:03,990 --> 00:15:11,590
yes and I I be rule has some support I

00:15:09,340 --> 00:15:14,830
think for every LS but I'm labels I'm

00:15:11,590 --> 00:15:15,760
not sure though but not in our new

00:15:14,830 --> 00:15:18,660
driver

00:15:15,760 --> 00:15:18,660
sucks

00:15:23,579 --> 00:15:28,750
okay and these are the kernel versions

00:15:27,279 --> 00:15:31,360
which you should be looking at if you

00:15:28,750 --> 00:15:34,779
really want to try out I think the basic

00:15:31,360 --> 00:15:38,589
LS are support was in 4.1 then we've

00:15:34,779 --> 00:15:40,660
been yeah still the work is ongoing and

00:15:38,589 --> 00:15:44,019
there are more things coming and the

00:15:40,660 --> 00:15:47,019
latest version I think least latest

00:15:44,019 --> 00:15:49,690
version version 4.5 is probably the best

00:15:47,019 --> 00:15:56,110
to actually try out multi path and other

00:15:49,690 --> 00:16:01,180
things oh yeah these are just the

00:15:56,110 --> 00:16:06,670
references any more questions I do have

00:16:01,180 --> 00:16:08,680
a demo but David I think you have to

00:16:06,670 --> 00:16:15,269
shut down one of your simulations

00:16:08,680 --> 00:16:20,350
because my demo is not working you did

00:16:15,269 --> 00:16:22,480
okay at the bottom these are the hosts

00:16:20,350 --> 00:16:28,240
customer hosts and the customer edge

00:16:22,480 --> 00:16:32,620
devices C 1 C 2 e 1 and P 1 and P E 2

00:16:28,240 --> 00:16:36,610
are the lar devices and P 2 P and P 1

00:16:32,620 --> 00:16:41,529
are the MPLS Network so the demo

00:16:36,610 --> 00:16:47,019
actually just shows us pinging from the

00:16:41,529 --> 00:16:51,250
C 1 H 1 to C 1 H 3 at the top two

00:16:47,019 --> 00:16:57,690
customer hosts and MPLS packets getting

00:16:51,250 --> 00:16:57,690
switched on the P E and P 2 routers

00:18:10,950 --> 00:18:12,980
Oh

00:18:27,300 --> 00:18:33,000
so this is on pe1 in the picture so

00:18:31,440 --> 00:18:35,940
you'll have to keep shifting between

00:18:33,000 --> 00:18:41,120
these PE one is the edge router so here

00:18:35,940 --> 00:18:44,910
you will see the LWT routes for MPLS and

00:18:41,120 --> 00:18:50,790
also label switching routes

00:18:44,910 --> 00:18:55,679
so first MPLS router show shows the MPLS

00:18:50,790 --> 00:18:57,960
fehb in the kernel and the tip were

00:18:55,679 --> 00:19:01,940
using world here as well so IP this

00:18:57,960 --> 00:19:01,940
command actually shows the tunnel route

00:19:55,190 --> 00:20:00,490
and Billy's packets on the e1

00:20:08,730 --> 00:20:20,779
that's about it any questions

00:20:42,419 --> 00:20:46,020

YouTube URL: https://www.youtube.com/watch?v=8LcniEuCuGM


