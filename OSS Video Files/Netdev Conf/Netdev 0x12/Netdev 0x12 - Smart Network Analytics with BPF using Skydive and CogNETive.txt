Title: Netdev 0x12 - Smart Network Analytics with BPF using Skydive and CogNETive
Publication date: 2018-08-01
Playlist: Netdev 0x12
Description: 
	Liran Schour and Nicolas Planel discussed using the Skydive eBPF filtering capabilities and networking information to create network analytics/insights with their tool CogNETive.
They showed how CogNETive utilizes the collected information to provide operational insights for network troubleshooting (eg anomaly detection).
In their talk on July 12th, 2018, they demonstrated how operators can drill-down on connectivity issues all the way to a single Linux interface at Netdev 0x12 in Montreal.

CogNETive uses several common open source components (Grafana, ElasticSearch, Spark, etc ...) to create a layer of network analytics on top of Skydive.

More info:
https://www.netdevconf.org/0x12/session.html?cognetive-smart-network-analytics-with-skydive-bpf-monitoring
Captions: 
	00:00:00,650 --> 00:00:09,559
okay I'm a dear I'm sure for my BM Jaime

00:00:06,240 --> 00:00:12,480
Nicholas from reddit and we are here to

00:00:09,559 --> 00:00:12,769
present you smart network kinetics which

00:00:12,480 --> 00:00:16,830
is a

00:00:12,769 --> 00:00:18,900
skydivin connective so I would start

00:00:16,830 --> 00:00:20,910
with just a brief what is skydive

00:00:18,900 --> 00:00:24,180
skydive is a great time network topology

00:00:20,910 --> 00:00:27,869
and protocol analyzer we developed that

00:00:24,180 --> 00:00:31,170
restarts hopefully three years ago so

00:00:27,869 --> 00:00:34,079
goal is like to because it's Sdn is

00:00:31,170 --> 00:00:38,250
complex you have my particular G overlay

00:00:34,079 --> 00:00:42,059
physical device and such we have today

00:00:38,250 --> 00:00:44,670
all over the all the networks that we

00:00:42,059 --> 00:00:48,539
offer software networks and we have

00:00:44,670 --> 00:00:52,949
multiple layers of training and other

00:00:48,539 --> 00:00:58,219
tools are already just based on most

00:00:52,949 --> 00:01:04,140
like IP nettan as tcpdump etc obvious

00:00:58,219 --> 00:01:06,000
via CTL for examples the goal of the

00:01:04,140 --> 00:01:07,890
network knishes with the sky dive we'd

00:01:06,000 --> 00:01:10,770
like to doing monitoring on

00:01:07,890 --> 00:01:13,350
troubleshooting we do that in real time

00:01:10,770 --> 00:01:17,189
or post-mortem that we save so flow and

00:01:13,350 --> 00:01:19,140
the topology in the database we support

00:01:17,189 --> 00:01:30,060
mutable infrastructures like with docker

00:01:19,140 --> 00:01:37,229
unnatural cube unity is extra devices

00:01:30,060 --> 00:01:39,750
right okay all right that the three so

00:01:37,229 --> 00:01:43,170
the main features are distributed

00:01:39,750 --> 00:01:46,380
captures all around the clusters with a

00:01:43,170 --> 00:01:48,329
topology and flow we are food IPL drivin

00:01:46,380 --> 00:01:51,750
is right inning go you have some graph

00:01:48,329 --> 00:01:55,610
engine based on grinding twitching kabob

00:01:51,750 --> 00:02:01,020
a language it's another implementation

00:01:55,610 --> 00:02:06,020
is that the same king of long edge we

00:02:01,020 --> 00:02:06,020
have attaching flow and packet injection

00:02:06,320 --> 00:02:13,000
so please go to the way is Qaeda Network

00:02:11,250 --> 00:02:15,460
he receives a gif and you

00:02:13,000 --> 00:02:19,600
to give because that the PDF

00:02:15,460 --> 00:02:26,290
presentation the goal is just to show

00:02:19,600 --> 00:02:29,410
you just the eye of basic UI that you

00:02:26,290 --> 00:02:33,640
see deployment super deployment with

00:02:29,410 --> 00:02:37,410
full Argent's sky divergence and with

00:02:33,640 --> 00:02:40,750
one analyzer and we show that a mutable

00:02:37,410 --> 00:02:43,390
namespace and you can see in deep what

00:02:40,750 --> 00:02:47,170
happens you know and you networks oh it

00:02:43,390 --> 00:02:50,020
has been deployed so basically is at the

00:02:47,170 --> 00:02:52,870
skydiver structure each was running

00:02:50,020 --> 00:02:54,780
skydive agents with some probes you

00:02:52,870 --> 00:02:56,920
could be to political power flow probes

00:02:54,780 --> 00:02:59,890
topology probes you could be neutron

00:02:56,920 --> 00:03:02,709
copied okay copy attribute is flu probes

00:02:59,890 --> 00:03:02,950
we have mutable capture that we talking

00:03:02,709 --> 00:03:07,440
about

00:03:02,950 --> 00:03:10,720
after all the information and send

00:03:07,440 --> 00:03:14,950
analyzers we have multiple for hajj

00:03:10,720 --> 00:03:17,709
emergency and we have we could save all

00:03:14,950 --> 00:03:22,630
the flow and data be in the database and

00:03:17,709 --> 00:03:27,010
apology as well obviously if open CRI

00:03:22,630 --> 00:03:30,910
and for the VI for the wizard most for

00:03:27,010 --> 00:03:32,410
the all the users so we are here today

00:03:30,910 --> 00:03:34,930
I'd like to show you all the different

00:03:32,410 --> 00:03:39,730
capture techniques has been used in this

00:03:34,930 --> 00:03:41,560
Caravan cognitive so basically we can

00:03:39,730 --> 00:03:44,380
retrieve a lot of features from the flow

00:03:41,560 --> 00:03:47,320
of like you classify the flow and get a

00:03:44,380 --> 00:03:50,410
number of packets and a bio physician if

00:03:47,320 --> 00:03:53,620
you captures of all the packets we can

00:03:50,410 --> 00:03:57,580
get featuring advanced filtering of the

00:03:53,620 --> 00:04:00,900
session that one way to start a flow

00:03:57,580 --> 00:04:05,630
captures or implemented the EBP F

00:04:00,900 --> 00:04:08,960
special flow table probes within

00:04:05,630 --> 00:04:11,500
using a skydive so depending of the use

00:04:08,960 --> 00:04:14,210
case the most important points that

00:04:11,500 --> 00:04:16,730
skydive could be used at monitoring so

00:04:14,210 --> 00:04:19,160
we need to just to show what happens in

00:04:16,730 --> 00:04:22,460
the networks and logically with one's

00:04:19,160 --> 00:04:23,990
wise used everywhere or it could be it

00:04:22,460 --> 00:04:26,690
is as monitoring so when you're towing

00:04:23,990 --> 00:04:29,990
obviously we want to for example this

00:04:26,690 --> 00:04:31,610
port of this VM of some issue so I would

00:04:29,990 --> 00:04:34,610
like to do some troubleshooting and

00:04:31,610 --> 00:04:38,110
record all the packets it's a bit bit

00:04:34,610 --> 00:04:40,910
time to time you need to do that but for

00:04:38,110 --> 00:04:44,030
most of the case that you want to

00:04:40,910 --> 00:04:46,460
address the long time monitoring you can

00:04:44,030 --> 00:04:48,560
use what I will show uses different

00:04:46,460 --> 00:04:53,300
solution like this BPA filtering or

00:04:48,560 --> 00:04:56,930
limited the EBP F filter field probes

00:04:53,300 --> 00:04:58,880
special pots so yeah if you based on

00:04:56,930 --> 00:05:02,590
each packet obviously a map for the

00:04:58,880 --> 00:05:08,030
CalNet for the capture all the packets

00:05:02,590 --> 00:05:10,840
we see next slide what the vp f eb PF

00:05:08,030 --> 00:05:13,760
probes has been implemented and

00:05:10,840 --> 00:05:17,750
basically of a skydive flow tables in

00:05:13,760 --> 00:05:22,780
the netherlands that's all we influence

00:05:17,750 --> 00:05:25,100
implemented the IPPF capture probes so

00:05:22,780 --> 00:05:27,440
one part obviously is a connect space

00:05:25,100 --> 00:05:31,040
where the problem would be injected on

00:05:27,440 --> 00:05:35,330
the circuit hook ebf circuitry and we

00:05:31,040 --> 00:05:38,240
just retrieve is a big map of of the

00:05:35,330 --> 00:05:40,100
session key of the flow by with the

00:05:38,240 --> 00:05:44,330
packet controls you know which pathway

00:05:40,100 --> 00:05:46,670
and the session size the idea is like to

00:05:44,330 --> 00:05:50,090
retrieve the data of the this flow table

00:05:46,670 --> 00:05:53,840
to skydive and map it with ins of nodes

00:05:50,090 --> 00:05:56,080
that much to do captures so on the user

00:05:53,840 --> 00:05:58,820
space we have the skydive flow tables

00:05:56,080 --> 00:06:02,240
based on these numbers but we have other

00:05:58,820 --> 00:06:05,980
attributes like for example UUID is like

00:06:02,240 --> 00:06:09,530
one the meaning in the wall

00:06:05,980 --> 00:06:11,870
infrastructures that the unique flow ID

00:06:09,530 --> 00:06:14,120
and the tracking ID could be very

00:06:11,870 --> 00:06:15,229
helpful because it's like features to

00:06:14,120 --> 00:06:19,009
track

00:06:15,229 --> 00:06:21,889
flow within no channels that we just

00:06:19,009 --> 00:06:26,539
rich recalculates on the underflow arch

00:06:21,889 --> 00:06:29,960
of the last IPAs and it will be map

00:06:26,539 --> 00:06:41,499
within the nodes of the graph of the

00:06:29,960 --> 00:06:46,779
topology so John we talked about TCP so

00:06:41,499 --> 00:06:52,669
we looked for a way to capture TCP flows

00:06:46,779 --> 00:06:56,779
without heavy cost of computation while

00:06:52,669 --> 00:06:59,270
we didn't have the EBP F probe so we

00:06:56,779 --> 00:07:04,849
thought about the the following VP a

00:06:59,270 --> 00:07:07,189
filter to just cut the TCP fin and syn

00:07:04,849 --> 00:07:12,889
packet so we we will capture the

00:07:07,189 --> 00:07:20,180
beginning and the end of TCP session but

00:07:12,889 --> 00:07:23,689
then we we needed to to also to think

00:07:20,180 --> 00:07:26,180
about wrap arounds because we start when

00:07:23,689 --> 00:07:29,539
we have a syn packet we know what is the

00:07:26,180 --> 00:07:32,060
secret channel number and we can Vic and

00:07:29,539 --> 00:07:35,120
we know of a sequential number at the

00:07:32,060 --> 00:07:39,169
fin packet so we know the start and the

00:07:35,120 --> 00:07:44,990
end but what about wrap arounds so we

00:07:39,169 --> 00:07:47,330
also wanted to capture the packet if you

00:07:44,990 --> 00:07:49,909
think about the circle of this four

00:07:47,330 --> 00:07:52,129
gigabyte so we also capture the packets

00:07:49,909 --> 00:07:56,139
between zero and ten thousand bytes for

00:07:52,129 --> 00:08:00,139
example and at the end of the 4 gigabyte

00:07:56,139 --> 00:08:02,529
10,000 the last 10 thousand bytes so we

00:08:00,139 --> 00:08:05,990
have a beginning and the end and each

00:08:02,529 --> 00:08:08,569
wraparound also we look about where is

00:08:05,990 --> 00:08:12,949
the sequence number so we can track the

00:08:08,569 --> 00:08:16,810
TCP flows to to look how how many bytes

00:08:12,949 --> 00:08:23,120
have been transferred with a very low

00:08:16,810 --> 00:08:26,779
computation cost and now we will go to

00:08:23,120 --> 00:08:29,260
the evaluation we try to to evaluate

00:08:26,779 --> 00:08:32,110
visa

00:08:29,260 --> 00:08:37,180
capturing techniques and we did it on a

00:08:32,110 --> 00:08:43,780
intel 64 core processor with 280

00:08:37,180 --> 00:08:48,400
gigabyte of ram on a bun to 1604 and we

00:08:43,780 --> 00:08:52,050
had five pairs of eye path flight and

00:08:48,400 --> 00:08:56,590
servers who ran on dedicated course and

00:08:52,050 --> 00:09:01,890
we just accelerate the bandwidth and and

00:08:56,590 --> 00:09:06,880
looked on the how much did it cost us to

00:09:01,890 --> 00:09:09,070
just look and capture the sessions and

00:09:06,880 --> 00:09:11,950
it was very simple environment you can

00:09:09,070 --> 00:09:14,110
look on the upper right we had the two

00:09:11,950 --> 00:09:16,420
name space the blue name space and the

00:09:14,110 --> 00:09:20,260
root name space connecting between two

00:09:16,420 --> 00:09:24,720
Vth pairs and we just observed captured

00:09:20,260 --> 00:09:30,700
the traffic between these two Vth

00:09:24,720 --> 00:09:35,380
interfaces so now we we can look on the

00:09:30,700 --> 00:09:38,410
results so the black line is the base

00:09:35,380 --> 00:09:41,500
line without any capturing no monitoring

00:09:38,410 --> 00:09:46,860
at all and you can see that we do not

00:09:41,500 --> 00:09:46,860
spend any computer CPU computation and

00:09:46,950 --> 00:09:54,760
then at the top the red line and this is

00:09:51,250 --> 00:09:58,360
the AF packet capturing mechanism while

00:09:54,760 --> 00:10:01,570
we capture everything and transfer it

00:09:58,360 --> 00:10:06,430
back up to the user space so you can see

00:10:01,570 --> 00:10:09,130
this is very heavy computation cost and

00:10:06,430 --> 00:10:11,320
you cannot do that in the normal case

00:10:09,130 --> 00:10:14,560
unless you start troubleshooting a

00:10:11,320 --> 00:10:17,590
problem you you will not want to go like

00:10:14,560 --> 00:10:21,640
that in production and then we have the

00:10:17,590 --> 00:10:25,360
green line it is the VB PF capturing

00:10:21,640 --> 00:10:28,090
technique and you can see it it is it is

00:10:25,360 --> 00:10:30,880
pretty cheap but around one gigabit per

00:10:28,090 --> 00:10:37,150
second there is a little curve and it's

00:10:30,880 --> 00:10:41,440
start to scale not not optimal optimally

00:10:37,150 --> 00:10:42,209
and then we have the blue line which is

00:10:41,440 --> 00:10:44,790
the BP

00:10:42,209 --> 00:10:49,639
filter that I was talk talking about

00:10:44,790 --> 00:10:54,290
that can capture the amount of data that

00:10:49,639 --> 00:10:58,040
have been transferred inside a TCP

00:10:54,290 --> 00:11:02,819
session which you can see is pretty

00:10:58,040 --> 00:11:07,579
cheap computation wise so if we can look

00:11:02,819 --> 00:11:11,279
on this graph also you can see the

00:11:07,579 --> 00:11:15,660
difference between the EBP F and the the

00:11:11,279 --> 00:11:23,040
BP f filter which is designed to capture

00:11:15,660 --> 00:11:26,249
TCP flows so to summarize with free

00:11:23,040 --> 00:11:30,980
techniques we can see that that if you

00:11:26,249 --> 00:11:30,980
capture everything you have very big

00:11:31,279 --> 00:11:39,360
overhead of computation and if you have

00:11:36,929 --> 00:11:44,160
EBP F in your system you might use it in

00:11:39,360 --> 00:11:47,779
it and it will not cost too much of CPU

00:11:44,160 --> 00:11:52,589
overhead and also of a special BPF

00:11:47,779 --> 00:12:03,059
filter to to track to capture TCP

00:11:52,589 --> 00:12:08,540
sessions now I will talk about cognitive

00:12:03,059 --> 00:12:12,809
service which is based on top of skydive

00:12:08,540 --> 00:12:16,949
project and and if someone wants to

00:12:12,809 --> 00:12:20,819
after after we talk to to to play with

00:12:16,949 --> 00:12:23,699
it there is a you should go to this URL

00:12:20,819 --> 00:12:26,480
at the bottom and ask me for the

00:12:23,699 --> 00:12:32,429
credentials and you can play and feel

00:12:26,480 --> 00:12:36,299
how it likes so here is a picture from

00:12:32,429 --> 00:12:39,720
the cognitive dashboard and the

00:12:36,299 --> 00:12:43,949
cognitive is come combined from two

00:12:39,720 --> 00:12:46,470
aspects the first is is a explore aspect

00:12:43,949 --> 00:12:50,100
which is based on the sky dive where you

00:12:46,470 --> 00:12:52,850
can explore your topology and and

00:12:50,100 --> 00:12:55,250
capture the traffic and

00:12:52,850 --> 00:12:59,900
well specifically you want inside the

00:12:55,250 --> 00:13:02,510
topology to start capture it for example

00:12:59,900 --> 00:13:05,720
this is the view like you can see the

00:13:02,510 --> 00:13:09,920
topology and in the right side where you

00:13:05,720 --> 00:13:15,140
start to activate capture on specific

00:13:09,920 --> 00:13:18,380
elements inside the topology and the

00:13:15,140 --> 00:13:23,930
second aspect of cognitive is they

00:13:18,380 --> 00:13:29,240
analyze and I will show a here is a

00:13:23,930 --> 00:13:33,170
simple example of analyzed well we we

00:13:29,240 --> 00:13:35,570
have an anomaly detection well in the

00:13:33,170 --> 00:13:39,920
upper part of the screen you can see two

00:13:35,570 --> 00:13:43,910
lines one is the prediction load on the

00:13:39,920 --> 00:13:47,320
network and the other line is what

00:13:43,910 --> 00:13:50,390
really happened in each point of time

00:13:47,320 --> 00:13:52,340
and you can see in the the lower part of

00:13:50,390 --> 00:13:56,570
the screen we have some kind of a

00:13:52,340 --> 00:13:59,090
threshold when the difference between

00:13:56,570 --> 00:14:01,730
the prediction and reality become more

00:13:59,090 --> 00:14:06,010
than a certain threshold the system will

00:14:01,730 --> 00:14:09,740
automatically alert us off of an arrow

00:14:06,010 --> 00:14:13,160
so you can see we have two relative

00:14:09,740 --> 00:14:15,650
arrows at the end when we passed this

00:14:13,160 --> 00:14:20,050
threshold so this is an example of

00:14:15,650 --> 00:14:23,480
analyzing the data and getting real-time

00:14:20,050 --> 00:14:26,770
arrow alerts about what's going on in

00:14:23,480 --> 00:14:26,770
the data center

00:14:31,450 --> 00:14:35,710
another way to do a Persian at 6:00 with

00:14:33,580 --> 00:14:38,050
skydives like sure to use a socket fo

00:14:35,710 --> 00:14:40,750
features socket different features you

00:14:38,050 --> 00:14:44,620
can imagine should imagine like you have

00:14:40,750 --> 00:14:46,990
net stats or SS information from the

00:14:44,620 --> 00:14:51,760
process and you would be able to have

00:14:46,990 --> 00:14:53,440
the basically the socket information so

00:14:51,760 --> 00:14:55,120
which connection which IPA which bought

00:14:53,440 --> 00:14:57,640
we connected from the client to the

00:14:55,120 --> 00:14:58,080
server us and which processor has been

00:14:57,640 --> 00:15:00,820
used

00:14:58,080 --> 00:15:02,890
imagine you have that pair oh stop it

00:15:00,820 --> 00:15:07,080
and we could map the process each time

00:15:02,890 --> 00:15:10,090
for the client and on the server side so

00:15:07,080 --> 00:15:13,870
for example if we implement that with

00:15:10,090 --> 00:15:16,000
the EPP - interoperable kaypro and we

00:15:13,870 --> 00:15:19,330
have sick the at the end I show you is

00:15:16,000 --> 00:15:22,450
just CSVs IQ we generate with the tools

00:15:19,330 --> 00:15:26,860
that we named flow matrix based on the

00:15:22,450 --> 00:15:29,020
skydive API just simple scripts that do

00:15:26,860 --> 00:15:32,680
the second form information on the audio

00:15:29,020 --> 00:15:36,250
graph so you could see like the VM to

00:15:32,680 --> 00:15:40,140
communicate with a VM one and through

00:15:36,250 --> 00:15:42,280
like a Python Neutron open V switch

00:15:40,140 --> 00:15:44,860
clients with this case with the open V

00:15:42,280 --> 00:15:48,250
switch servers and my security was a

00:15:44,860 --> 00:15:51,930
console another console or basically no

00:15:48,250 --> 00:15:56,290
concept to discuss with my security

00:15:51,930 --> 00:15:58,240
afterwards we could get this all this

00:15:56,290 --> 00:16:04,080
information in range act inside of

00:15:58,240 --> 00:16:06,850
interface thanks to the graph API and

00:16:04,080 --> 00:16:09,490
have a representation at the application

00:16:06,850 --> 00:16:12,700
and service level that all the nodes

00:16:09,490 --> 00:16:14,320
will communicate through the sockets on

00:16:12,700 --> 00:16:17,110
other points is like very important so

00:16:14,320 --> 00:16:22,090
that we this is cost almost nothing in

00:16:17,110 --> 00:16:23,620
the performances in the environments in

00:16:22,090 --> 00:16:25,690
the opening of ironmans because we've

00:16:23,620 --> 00:16:31,930
just retrieved the circuits that can L

00:16:25,690 --> 00:16:37,500
really give us the goal of the of this

00:16:31,930 --> 00:16:39,910
of the storage of highest level of what

00:16:37,500 --> 00:16:41,980
application is it normal that you have

00:16:39,910 --> 00:16:43,420
this kind of circuits

00:16:41,980 --> 00:16:44,779
did we have the communication between

00:16:43,420 --> 00:16:47,269
the client

00:16:44,779 --> 00:16:49,310
for what whatever application you have

00:16:47,269 --> 00:16:52,100
sometimes your customers didn't know

00:16:49,310 --> 00:16:54,560
what how many connections they do to the

00:16:52,100 --> 00:16:57,050
MySQL server or whatever

00:16:54,560 --> 00:17:00,260
so with SkyDrive

00:16:57,050 --> 00:17:03,380
thanks to the gremlin expression you can

00:17:00,260 --> 00:17:08,360
express the skin and retrieve the skin

00:17:03,380 --> 00:17:10,459
of information still on summarize all

00:17:08,360 --> 00:17:12,589
this presentation so the skydive could

00:17:10,459 --> 00:17:14,709
be used as a framework that thanks to a

00:17:12,589 --> 00:17:19,309
cognitive is a go-to good demonstration

00:17:14,709 --> 00:17:23,419
that we have distributed network

00:17:19,309 --> 00:17:26,150
topology all over your clusters we can

00:17:23,419 --> 00:17:29,480
do flow exploration and you can do a 96

00:17:26,150 --> 00:17:31,910
on it the cap we seen the different

00:17:29,480 --> 00:17:33,559
capture mechanism depending of your use

00:17:31,910 --> 00:17:37,460
case could be troubleshooting on

00:17:33,559 --> 00:17:42,410
monitoring obviously connective is like

00:17:37,460 --> 00:17:45,380
a big my biggest today to do an HIV sing

00:17:42,410 --> 00:17:49,929
skydive my things to skydive that as

00:17:45,380 --> 00:17:54,190
input for cognitive and to flow and

00:17:49,929 --> 00:18:01,370
let's say compartments of of the usage

00:17:54,190 --> 00:18:04,580
and Alex operation ethics the operation

00:18:01,370 --> 00:18:06,830
Alex could be anomaly detection houses

00:18:04,580 --> 00:18:10,549
and demonstrate what can achieve an HTML

00:18:06,830 --> 00:18:15,490
version could be circuit a formation a

00:18:10,549 --> 00:18:18,950
second F or just as seen on the skydive

00:18:15,490 --> 00:18:21,230
the next road map for the road map of

00:18:18,950 --> 00:18:23,960
skydive we plunge we have a neighborhood

00:18:21,230 --> 00:18:28,580
captures so in meaning that we just

00:18:23,960 --> 00:18:30,200
retrieve the first full full packet but

00:18:28,580 --> 00:18:32,419
first the first packet which is the flow

00:18:30,200 --> 00:18:35,299
is classified and use EBP F probably

00:18:32,419 --> 00:18:36,770
other words to keep the conscious that

00:18:35,299 --> 00:18:38,179
because the only the session is

00:18:36,770 --> 00:18:38,960
important for a stack to have the

00:18:38,179 --> 00:18:42,100
control

00:18:38,960 --> 00:18:46,010
updated langdon be of packet and the

00:18:42,100 --> 00:18:47,360
number of bytes in each way but what is

00:18:46,010 --> 00:18:51,530
important is that the full information

00:18:47,360 --> 00:18:54,140
because EP PFS limited we cannot have VD

00:18:51,530 --> 00:18:57,080
non support to nailing

00:18:54,140 --> 00:18:59,960
we didn't support or transmission we

00:18:57,080 --> 00:19:02,410
in Exeter that's it keen on the

00:18:59,960 --> 00:19:04,970
classification so that's the king of

00:19:02,410 --> 00:19:06,320
feature that will be useful to other

00:19:04,970 --> 00:19:11,360
shooting in skydive

00:19:06,320 --> 00:19:18,350
I never monitoring the kappab knocker

00:19:11,360 --> 00:19:21,530
process could be used to get really the

00:19:18,350 --> 00:19:23,900
canary stacks linear can I can i link

00:19:21,530 --> 00:19:26,930
stacker in stark contrast from the

00:19:23,900 --> 00:19:29,360
fragmentation and TCP reassembly

00:19:26,930 --> 00:19:31,700
that was a way that we want to include

00:19:29,360 --> 00:19:37,970
in the in skydive so afterwards we will

00:19:31,700 --> 00:19:40,640
achieve and you know all the graph so

00:19:37,970 --> 00:19:52,370
basically yeah set finished and if you

00:19:40,640 --> 00:19:54,590
have any question questions the molecule

00:19:52,370 --> 00:19:57,950
stuff is are you planning to make any

00:19:54,590 --> 00:20:01,700
little but the management piece and this

00:19:57,950 --> 00:20:06,650
guy the cognitive part yeah is that

00:20:01,700 --> 00:20:08,390
gonna be available as well or so I think

00:20:06,650 --> 00:20:12,290
there's two pieces to this right skydive

00:20:08,390 --> 00:20:15,770
yes skydivers we management piece yes

00:20:12,290 --> 00:20:18,140
skydiver just used to send all the

00:20:15,770 --> 00:20:19,280
information to conceive achieve is based

00:20:18,140 --> 00:20:22,430
on the skydive

00:20:19,280 --> 00:20:24,260
okay there is anything available at all

00:20:22,430 --> 00:20:28,330
or at some point will be available a

00:20:24,260 --> 00:20:28,330
plans to make cognitive available

00:20:28,840 --> 00:20:38,860
cognitive is available right now in IBM

00:20:33,020 --> 00:20:43,130
cloud as a service and you can try it

00:20:38,860 --> 00:20:46,720
with the URL inside the the presentation

00:20:43,130 --> 00:20:51,010
I can give you contention and you can

00:20:46,720 --> 00:20:53,830
you can write okay

00:20:51,010 --> 00:20:56,710
um yeah skydivers gesture depends of

00:20:53,830 --> 00:21:01,809
service Navitus project so feel free to

00:20:56,710 --> 00:21:08,320
contribute IBM how the cloud is a cloud

00:21:01,809 --> 00:21:15,630
division for sound out there is a cloud

00:21:08,320 --> 00:21:19,360
group sorry is it like a public cloud or

00:21:15,630 --> 00:21:23,340
right now it is inside a private cloud

00:21:19,360 --> 00:21:24,929
okay savvy inside a private cloud okay

00:21:23,340 --> 00:21:31,320
thanks

00:21:24,929 --> 00:21:31,320
anybody else with a question thanks

00:21:32,070 --> 00:21:36,829

YouTube URL: https://www.youtube.com/watch?v=Gswr3af5rOo


