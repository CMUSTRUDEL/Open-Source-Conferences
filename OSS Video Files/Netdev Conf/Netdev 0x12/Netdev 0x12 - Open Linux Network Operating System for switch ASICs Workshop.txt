Title: Netdev 0x12 - Open Linux Network Operating System for switch ASICs Workshop
Publication date: 2018-08-01
Playlist: Netdev 0x12
Description: 
	A discussion on Open NOS for ASICs chaired by Roopa Prabhu at Netdev 0x12 in Montreal on July 11th, 2018.

Various topics on Linux support for switch ASICs were discussed:
- New hardware support
- Hardware Resource management updates
- Scaling routing fib and bridge forwarding database
- Building Network virtualization solutions: E-VPN
- Network Configuration Management, Debugging and troubleshooting
- Futures

More info at:
https://www.netdevconf.org/0x12/session.html?open-linux-network-operating-system-for-switch-asics
Captions: 
	00:00:05,240 --> 00:00:12,540
hello everyone my name is Rupa I work

00:00:09,660 --> 00:00:15,690
for an Asda strabismic emulous networks

00:00:12,540 --> 00:00:18,359
and all my work is focused on getting

00:00:15,690 --> 00:00:22,500
new Linux features and then offloading

00:00:18,359 --> 00:00:25,199
it to switch Asics and well I just want

00:00:22,500 --> 00:00:27,680
to say native Canada and someone has

00:00:25,199 --> 00:00:31,220
never happened before so thanks Jamal

00:00:27,680 --> 00:00:34,590
it's it's been warm and nice this time

00:00:31,220 --> 00:00:34,590
[Music]

00:00:58,070 --> 00:01:05,460
okay so I just want to point out that we

00:01:02,010 --> 00:01:07,770
have done workshops on switching izikoff

00:01:05,460 --> 00:01:09,660
loads before but we've called that

00:01:07,770 --> 00:01:12,810
switched up offload and various other

00:01:09,660 --> 00:01:15,950
things but and you've seen switched have

00:01:12,810 --> 00:01:19,260
referred to in a lot of places during

00:01:15,950 --> 00:01:21,570
the entire conference right now but most

00:01:19,260 --> 00:01:23,400
of that work initial infrastructure was

00:01:21,570 --> 00:01:26,360
done for switching six support and now

00:01:23,400 --> 00:01:30,240
it's been used by many other subsystems

00:01:26,360 --> 00:01:32,670
today's agenda is yeah I will just do a

00:01:30,240 --> 00:01:35,550
quick round up on all the updates recent

00:01:32,670 --> 00:01:37,320
updates then we have updates from melon

00:01:35,550 --> 00:01:39,960
arts from Maddie he's going to talk

00:01:37,320 --> 00:01:42,810
about some resource management open

00:01:39,960 --> 00:01:46,380
issues and then industry perspectives

00:01:42,810 --> 00:01:48,330
from Sajith and updates from barefoot so

00:01:46,380 --> 00:01:55,560
Mellanox and barefoot are the two

00:01:48,330 --> 00:01:58,649
hardware vendors today so quick intro so

00:01:55,560 --> 00:02:00,330
switch Asics are the Asics that go into

00:01:58,649 --> 00:02:04,110
switching and routing platforms which

00:02:00,330 --> 00:02:07,080
many proprietary vendors cisco arrests

00:02:04,110 --> 00:02:09,770
are all those sell and the recent trend

00:02:07,080 --> 00:02:14,280
with Open Networking and disaggregated

00:02:09,770 --> 00:02:17,040
Hardware for open networking Linux has

00:02:14,280 --> 00:02:22,020
been running on those boxes and one OS

00:02:17,040 --> 00:02:25,140
is cumulus and Mellanox has a switch to

00:02:22,020 --> 00:02:30,180
have free open-source driver in the

00:02:25,140 --> 00:02:33,720
upstream kernel so the difference is

00:02:30,180 --> 00:02:36,270
what the people or the systems that are

00:02:33,720 --> 00:02:39,600
using Linux control plane to offload to

00:02:36,270 --> 00:02:41,940
switch Asics they benefit a lot from the

00:02:39,600 --> 00:02:43,560
Linux ecosystem and you basically use

00:02:41,940 --> 00:02:47,819
the kernel tables routing tables

00:02:43,560 --> 00:02:51,000
bridging ACLs netfilter and TC and you

00:02:47,819 --> 00:02:53,340
can offload it to these boxes and the

00:02:51,000 --> 00:02:56,370
linux api's that are used today is one

00:02:53,340 --> 00:02:59,820
is widget of infrastructure net link API

00:02:56,370 --> 00:03:01,569
and also no defiers native no defiers

00:02:59,820 --> 00:03:04,120
there are many

00:03:01,569 --> 00:03:06,879
every networking subsystem has something

00:03:04,120 --> 00:03:09,280
called notifiers which sends out a sync

00:03:06,879 --> 00:03:11,019
notifications just like how net link is

00:03:09,280 --> 00:03:13,629
sent to user space so many of these

00:03:11,019 --> 00:03:18,340
drivers today they trap these no defiers

00:03:13,629 --> 00:03:20,829
and offload to ASIC hardware updates

00:03:18,340 --> 00:03:23,799
what we're seeing right now is in later

00:03:20,829 --> 00:03:26,980
part of this year or next year we are we

00:03:23,799 --> 00:03:29,250
see a lot more updates or newer hardware

00:03:26,980 --> 00:03:33,000
coming up with greater scale for cloud

00:03:29,250 --> 00:03:35,349
and service providers space and

00:03:33,000 --> 00:03:39,040
programmable Hardware you've seen in the

00:03:35,349 --> 00:03:40,980
past TC workshop a lot of Appy for

00:03:39,040 --> 00:03:43,659
programmable hardware was talked about a

00:03:40,980 --> 00:03:45,430
barefoot is one of them something in

00:03:43,659 --> 00:03:48,180
band telemetry is also another feature

00:03:45,430 --> 00:03:50,260
coming up in newer a six I guess

00:03:48,180 --> 00:03:52,840
Mellanox and barefoot are the two

00:03:50,260 --> 00:03:54,760
hardware vendors here any questions you

00:03:52,840 --> 00:03:58,239
can direct them they will be on the

00:03:54,760 --> 00:04:03,280
states and resource management updates

00:03:58,239 --> 00:04:04,989
so ever since a couple of years at net

00:04:03,280 --> 00:04:08,979
that we have been talking about resource

00:04:04,989 --> 00:04:11,889
management route ad when not offloaded

00:04:08,979 --> 00:04:14,459
to hardware was never reported back to

00:04:11,889 --> 00:04:17,889
the user and that's a huge problem so

00:04:14,459 --> 00:04:20,530
one thing that happened recently was v

00:04:17,889 --> 00:04:22,900
no defiers or februa loading files can

00:04:20,530 --> 00:04:25,419
actually return an error or Hardware

00:04:22,900 --> 00:04:27,729
offload error to the kernel subsystem

00:04:25,419 --> 00:04:30,070
routing subsystems and that error is

00:04:27,729 --> 00:04:31,720
propagated to user space and for all

00:04:30,070 --> 00:04:35,110
throughout the slides I've actually put

00:04:31,720 --> 00:04:37,120
references to the patches and whatever

00:04:35,110 --> 00:04:40,060
man-- pages and any other presentations

00:04:37,120 --> 00:04:43,949
that made this happen so you can see

00:04:40,060 --> 00:04:47,830
them at the end of the slide deck and

00:04:43,949 --> 00:04:52,090
there was another series that shows an

00:04:47,830 --> 00:04:54,070
example resource controller by David

00:04:52,090 --> 00:04:55,570
David a Hahn and that does also

00:04:54,070 --> 00:04:57,070
referenced here so that is a good

00:04:55,570 --> 00:05:00,250
example of how you can

00:04:57,070 --> 00:05:03,009
it's a simplistic example but that's it

00:05:00,250 --> 00:05:06,310
shows you how you can how Hardware can

00:05:03,009 --> 00:05:11,320
propagate its resource limits to the

00:05:06,310 --> 00:05:14,410
kernel routing subsystem bridging

00:05:11,320 --> 00:05:16,630
updates I have been

00:05:14,410 --> 00:05:19,180
I and many other people also have been

00:05:16,630 --> 00:05:22,450
spending a lot of time in getting the

00:05:19,180 --> 00:05:25,510
bridge driver for latest data center

00:05:22,450 --> 00:05:28,240
networking features so private VLANs if

00:05:25,510 --> 00:05:31,530
you saw it on the net of list there was

00:05:28,240 --> 00:05:34,900
a recent patch for port isolation

00:05:31,530 --> 00:05:37,330
tunneling protocol packets a bridge

00:05:34,900 --> 00:05:39,340
through bridge ports for example if when

00:05:37,330 --> 00:05:40,990
a b x LAN is part of a bridge how do you

00:05:39,340 --> 00:05:43,360
turn a little protocol packets through

00:05:40,990 --> 00:05:46,660
the VX LAN tunnel that's something that

00:05:43,360 --> 00:05:49,750
went into Ethernet VPNs I have talked

00:05:46,660 --> 00:05:52,450
about it in previous LED of native

00:05:49,750 --> 00:05:57,750
conferences and it's another BGP based

00:05:52,450 --> 00:06:01,720
control plane for Ethernet VPNs 4vx LAN

00:05:57,750 --> 00:06:04,480
extended VX LAN bridging domains so a

00:06:01,720 --> 00:06:08,440
few more flags were added a few more bug

00:06:04,480 --> 00:06:11,050
fixes went in this is just context for

00:06:08,440 --> 00:06:13,780
the whole evpn thing what I'm talking

00:06:11,050 --> 00:06:18,850
about is then layer 2 gateway a hardware

00:06:13,780 --> 00:06:21,880
beat up running over a switch switch

00:06:18,850 --> 00:06:27,610
ASIC supported by a switch ASIC which is

00:06:21,880 --> 00:06:29,380
a tor switch in this picture dev link if

00:06:27,610 --> 00:06:31,330
you know deviling dead link is the new

00:06:29,380 --> 00:06:34,540
it started dead link was introduced

00:06:31,330 --> 00:06:37,390
along with this switch to have effort

00:06:34,540 --> 00:06:40,950
and now it's again being used by various

00:06:37,390 --> 00:06:46,000
other drivers even in the next space so

00:06:40,950 --> 00:06:52,180
recent highlight was three from Mellanox

00:06:46,000 --> 00:07:06,010
support flavors for configuring port

00:06:52,180 --> 00:07:12,970
flavors wired a blank so for a driver

00:07:06,010 --> 00:07:16,540
can use to generate code up there surf

00:07:12,970 --> 00:07:20,830
tests if you have been following that a

00:07:16,540 --> 00:07:22,960
lot of tests have been going which is a

00:07:20,830 --> 00:07:25,890
great thing it's easier to test your

00:07:22,960 --> 00:07:28,380
code now for any other breakages

00:07:25,890 --> 00:07:33,810
so we have been seeing a lot of tests

00:07:28,380 --> 00:07:36,570
going in for the switchdriver which you

00:07:33,810 --> 00:07:38,700
can and these tests not only work on off

00:07:36,570 --> 00:07:42,240
loaded hardware but also on any

00:07:38,700 --> 00:07:45,360
networking any Linux VM or a solver

00:07:42,240 --> 00:07:52,820
the early on software so we you can find

00:07:45,360 --> 00:07:52,820
some of the tests in these folders and

00:07:52,850 --> 00:07:58,440
be and many others have been working on

00:07:56,070 --> 00:08:01,920
getting the bunch of networking features

00:07:58,440 --> 00:08:05,130
into the Linux kernel to upload it by

00:08:01,920 --> 00:08:08,370
the net link API or switch off API to

00:08:05,130 --> 00:08:10,710
ASIC and one of them is the policy based

00:08:08,370 --> 00:08:13,770
routing so in Linux you do policy-based

00:08:10,710 --> 00:08:16,740
routing with IP rules and recently we

00:08:13,770 --> 00:08:20,100
have shown that you could you can use

00:08:16,740 --> 00:08:22,050
free range routing suit to you to

00:08:20,100 --> 00:08:24,960
implement PBR basically policy based

00:08:22,050 --> 00:08:26,580
routing which gets installs IP rules

00:08:24,960 --> 00:08:29,280
into the kernel and those can be

00:08:26,580 --> 00:08:32,340
offloaded to Hardware there is a FR are

00:08:29,280 --> 00:08:34,680
free range routing tutorial today by

00:08:32,340 --> 00:08:41,400
donald who is a maintainer of FR later

00:08:34,680 --> 00:08:44,250
today so the new update here that went

00:08:41,400 --> 00:08:46,380
and was all these e6 they support fight

00:08:44,250 --> 00:08:50,430
able match which was missing in IP rules

00:08:46,380 --> 00:08:53,610
and that went in recently multicast

00:08:50,430 --> 00:08:56,880
routing IP mr received a lot of updates

00:08:53,610 --> 00:09:00,720
both from mellow notes which should have

00:08:56,880 --> 00:09:03,540
a driver and also from other ways people

00:09:00,720 --> 00:09:06,060
offload well switch have api or the net

00:09:03,540 --> 00:09:12,330
link API again if our are free range

00:09:06,060 --> 00:09:17,120
routing is a open routing suite and uses

00:09:12,330 --> 00:09:17,120
the kernel multi p.m. our database

00:09:18,140 --> 00:09:24,030
scaling with new hardware there are many

00:09:21,390 --> 00:09:27,890
scaling challenges coming later this

00:09:24,030 --> 00:09:29,670
year and in the future near future and

00:09:27,890 --> 00:09:31,650
one of the things that has been

00:09:29,670 --> 00:09:35,330
happening in this work in progress which

00:09:31,650 --> 00:09:35,330
David a hand has been working on

00:09:39,430 --> 00:09:45,160
so we are looking at if when a link goes

00:09:42,820 --> 00:09:48,490
down you're looking at like tens and

00:09:45,160 --> 00:09:50,110
thousands more than close to half a

00:09:48,490 --> 00:09:55,270
million rather updates throughout

00:09:50,110 --> 00:10:00,310
updates so so the idea here is to split

00:09:55,270 --> 00:10:03,040
the routing today's kernel routing so

00:10:00,310 --> 00:10:05,260
prefix and net next op routes you split

00:10:03,040 --> 00:10:07,990
the route so that you have next four

00:10:05,260 --> 00:10:10,740
brutes stored separately and updates you

00:10:07,990 --> 00:10:13,089
can update them separately and that

00:10:10,740 --> 00:10:15,040
makes it easier on the routing tables

00:10:13,089 --> 00:10:20,230
and that's how you can scale updates to

00:10:15,040 --> 00:10:22,240
the routing database faster there is a

00:10:20,230 --> 00:10:25,060
pointer to the presentation by David on

00:10:22,240 --> 00:10:26,710
there as well similar things are

00:10:25,060 --> 00:10:28,870
happening in the bridge database like I

00:10:26,710 --> 00:10:30,850
mentioned the Ethernet VPN case you have

00:10:28,870 --> 00:10:33,390
you have to now scale the bridge

00:10:30,850 --> 00:10:37,480
forwarding database 2007 trees and

00:10:33,390 --> 00:10:39,580
because you're you're on a tour or a

00:10:37,480 --> 00:10:41,890
spine switch and your bridge domains are

00:10:39,580 --> 00:10:47,110
now expanding throughout the data center

00:10:41,890 --> 00:10:49,540
across across racks so larger bridge

00:10:47,110 --> 00:10:51,190
domains your MAC addresses so similar

00:10:49,540 --> 00:10:53,850
things have been thought through this is

00:10:51,190 --> 00:10:58,470
something we are working on as well and

00:10:53,850 --> 00:11:02,650
B it's land as you know via plan has its

00:10:58,470 --> 00:11:05,890
replication groups that it stores so

00:11:02,650 --> 00:11:07,660
even one of the cases we've seen for EBP

00:11:05,890 --> 00:11:09,700
and it needs to update these replication

00:11:07,660 --> 00:11:12,339
groups at a regular interval and those

00:11:09,700 --> 00:11:15,880
updates in today's model it's not very

00:11:12,339 --> 00:11:18,760
scalable so we'll see similar separation

00:11:15,880 --> 00:11:23,230
of replication group from the vehicle

00:11:18,760 --> 00:11:25,750
and Mac entries scaling network devices

00:11:23,230 --> 00:11:28,450
this is another challenge and this is

00:11:25,750 --> 00:11:30,730
mostly under control with light on net

00:11:28,450 --> 00:11:34,779
devices which is light and net devices

00:11:30,730 --> 00:11:37,420
has been multiple times we will

00:11:34,779 --> 00:11:40,200
hopefully see something there right wait

00:11:37,420 --> 00:11:43,390
tunnels another reference there this is

00:11:40,200 --> 00:11:45,160
to reduce to not use a net device for

00:11:43,390 --> 00:11:48,370
some of the tunnels

00:11:45,160 --> 00:11:51,100
and the bridge driver for example when

00:11:48,370 --> 00:11:53,830
the exelon is a bridge port for cases

00:11:51,100 --> 00:12:04,000
like internet VPNs you can also use an

00:11:53,830 --> 00:12:08,190
lightweight tunnel device that's all I

00:12:04,000 --> 00:12:08,190
had on updates

00:12:41,620 --> 00:12:45,450
[Music]

00:12:55,430 --> 00:12:59,210
[Music]

00:14:01,870 --> 00:14:04,870
what

00:14:25,400 --> 00:16:19,940
so RP

00:16:32,230 --> 00:16:40,150
[Music]

00:18:27,600 --> 00:18:41,790
so when your

00:18:52,320 --> 00:18:55,420
[Music]

00:19:56,350 --> 00:20:00,500
[Music]

00:20:03,510 --> 00:20:06,650
[Music]

00:20:35,150 --> 00:20:40,820
this case we will assume that they sell

00:20:38,840 --> 00:20:47,620
consumer taken we saw sympathetic

00:20:40,820 --> 00:20:47,620
consume n we are running again

00:20:51,860 --> 00:20:56,930
[Music]

00:44:05,090 --> 00:44:08,189

YouTube URL: https://www.youtube.com/watch?v=sJvUfoFuGFc


