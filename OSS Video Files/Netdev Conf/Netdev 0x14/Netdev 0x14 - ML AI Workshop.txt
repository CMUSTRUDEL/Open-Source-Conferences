Title: Netdev 0x14 - ML AI Workshop
Publication date: 2020-10-09
Playlist: Netdev 0x14
Description: 
	Chair: Tom Herbert

More info: https://netdevconf.info/0x14/session.html?workshop-ai-ml

Date: Friday, August 14, 2020

What is Machine Learning?
Machine learning (ML) is a subset of artificial intelligence(AI) 
that lets computer systems solve a specific task without using
explicit instructions, relying on patterns and inference instead
of human intervention.

But How Does ML Apply To Networking?
Machine learning can be used to observe patterns in network
traffic or configuration and use the resulting data for a
variety of things, some sample space:
- dynamic congestion control, see for example applicability of:
   https://netdevconf.info/0x12/session.html?restructuring-endpoint-congestion-control
- improve datapath performance 
- path optimization 
- anomaly detection from a baseline expectation and using the
  resulting data either for security or optimization end goals
- etc.

At 0x14 we have two moonshot talks that look at using ML for
networking on Linux. These talks will be part of the ML
workshop which is debutting in 0x14. We hope to able to
solicit discussions and feedback on the subject.

In the first moonshot talk Marta Plantykow, Piotr Raczynski,
Maciej Machnikowski and Pawel Szymanski will discuss an approach
to optimize networking performance alongside CPU utilization
with ML.
Marta et al propose an approach which will use ML to study RSS
patterns and the CPU spread and then react dynamically to
modify RSS hash parameters to improve CPU spread.

The authors will go over the challenges they overcame, show some
performance numbers and solicit feedback.

More info:
https://netdevconf.info/0x14/session.html?talk-performance-optimization-using-artificial-intelligence-methods

Our second talk is from Maciej Paczkowski, Aleksandra Jereczek, and
Patrycja Kochmanska. In this talk Maciej et al integrate into FRR
to understand how to best optimize the path selection in an environemnt
with multiple simultenous link faults and incestant link flapps.
Could routing decisions better helped with ML hooks in
the kernel/datapath? Could we make use of offloading some of
the algos to AI hardware?

More info:
https://netdevconf.info/0x14/session.html?talk-machine-learning-in-packet-routing-process-using-Quagga-Zebra-routing-sw-suite
YouTube URL: https://www.youtube.com/watch?v=KqYdH7IFo2I


