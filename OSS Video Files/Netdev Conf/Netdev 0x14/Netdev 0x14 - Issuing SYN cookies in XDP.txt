Title: Netdev 0x14 - Issuing SYN cookies in XDP
Publication date: 2020-10-09
Playlist: Netdev 0x14
Description: 
	Speakers: Petar Penkov, Eric Dumazet, Stanislav Fomichev

More info: https://netdevconf.info/0x14/session.html?talk-issuing-SYN-cookies-in-XDP

Date: Wednesday, August 19, 2020

The Problem: TCP SYN attack.

TCP SYN attacks flood a targetted server with SYN requests.
Each SYN request received by the server is responded to with
a SYN ACK which results in a connection state being created
and put in a half-open (SYN RCVD) TCP state awaiting an ACK to
come back. The ACK response _never comes_ and the SYN
request keep coming in resulting in more half-open state
creation in the backlog.
At some point, during this attack, there will be a lot of 
TCP half-open state such that the target server's ability
to respond to new SYN requests is lost because all the available
port resources have been exhausted...

How does one defend against SYN flood attack?

A popular defense against SYN attacks uses what is known as
SYN cookies.
So, how do SYN cookies work?
When the server sees the TCP SYN, it constructs the SYN ACK
using a sequence number chosen from a cryptographic hash
function of some flow attributes. The ACK sequence has enough encoding
within it such that it is able to construct the original SYN
request should the original sender respond.

Two possibilities on responses:

1) This is an attack - meaning the server will never receive
a response.
It is no big deal since no server resources are wasted in
anticipation of that response.

2) This is legit client request - in which case there will be
a response coming back. When the ACK is received, 
the server is able to reconstruct the SYN queue entry using the
information that was originally encoded in the SYN ACK.

Is there anything wrong with SYN cookies?
Not really. They are effective, but:
the setup requires the packets traverse the TCP/IP layers
all the way up. For a busy server, extra code path and computation
limits how fast you can issue SYN cookies back.

In this talk, Petar Penkov, discusses SynGate, an XDP-based approach
to handling SYN cookies.
By moving the response lower in the stack it enables the
system to increase the rate at which a host can issue SYN cookies
and therefore improving its resilience to SYN flood attacks. 

Petar will detail the design of this solution, the advantages
eBPF provided them and, challenges faced during development of
of SynGate and finally they will discuss areas they are considering
for improvement.
YouTube URL: https://www.youtube.com/watch?v=3e2yeyTzh_c


