Title: Netdev 1.1 - Linux TC
Publication date: 2016-03-15
Playlist: Netdev 1.1 - Day 1 - Wednesday February 10, 2016
Description: 
	Jamal Hadi Salim
February 2016
Captions: 
	00:00:00,060 --> 00:00:10,019
John Daniel oh no slides allowed him in

00:00:07,470 --> 00:00:13,799
only two slides two slides okay yeah I

00:00:10,019 --> 00:00:15,960
can put your laptop up code code is

00:00:13,799 --> 00:00:18,060
better code is better or just talk and

00:00:15,960 --> 00:00:20,250
we also have a whiteboard there so

00:00:18,060 --> 00:00:21,810
people can whiteboard something if you

00:00:20,250 --> 00:00:24,449
want to make a point that they think is

00:00:21,810 --> 00:00:25,619
relevant to be white-coated so there is

00:00:24,449 --> 00:00:29,130
no agenda that's by design

00:00:25,619 --> 00:00:33,090
okay we're just gonna randomly pick

00:00:29,130 --> 00:00:34,829
topics and if they for the filler Lucas

00:00:33,090 --> 00:00:37,040
they're setting up the test environment

00:00:34,829 --> 00:00:42,090
to show the performance numbers that we

00:00:37,040 --> 00:00:44,129
that we used so there's the raise up the

00:00:42,090 --> 00:00:46,649
box so they can see it there's the knock

00:00:44,129 --> 00:00:49,559
who used it's a little device for the

00:00:46,649 --> 00:00:53,399
performance numbers for both EBP F sorry

00:00:49,559 --> 00:00:53,969
BPF flower and you 32 but we're just

00:00:53,399 --> 00:00:59,039
gonna wing it

00:00:53,969 --> 00:01:01,129
okay so was John you wanna start okay

00:00:59,039 --> 00:01:03,359
here the mic is yours

00:01:01,129 --> 00:01:06,930
well you want to talk about it seems

00:01:03,359 --> 00:01:10,740
like okay I got the who do I have Ronnie

00:01:06,930 --> 00:01:12,180
or well let's let's start talking about

00:01:10,740 --> 00:01:15,090
the you 32 things so we can put a

00:01:12,180 --> 00:01:30,060
closure to that right and the you 32

00:01:15,090 --> 00:01:32,040
versus flower and please okay I have

00:01:30,060 --> 00:01:35,579
hardware patches that offload you 32 and

00:01:32,040 --> 00:01:36,810
flower into i XG b i have them i behind

00:01:35,579 --> 00:01:39,090
that i have patches to do it for our

00:01:36,810 --> 00:01:41,670
other intel drivers like for de FM 10k

00:01:39,090 --> 00:01:45,390
they all seem to work i I tried to write

00:01:41,670 --> 00:01:46,890
a magical Universal layer that

00:01:45,390 --> 00:01:49,770
translated all things into the hardware

00:01:46,890 --> 00:01:51,299
I've been alright no arguments not in

00:01:49,770 --> 00:01:52,799
met dev but a whole bunch of conferences

00:01:51,299 --> 00:01:54,810
every argument I've been about that has

00:01:52,799 --> 00:01:59,000
lasted for years I don't want to do it

00:01:54,810 --> 00:02:01,649
again here it's not you API so if we

00:01:59,000 --> 00:02:04,110
come up with a universal thing later we

00:02:01,649 --> 00:02:05,520
can do it there's an I don't see any

00:02:04,110 --> 00:02:08,190
reason we should not push the code now

00:02:05,520 --> 00:02:09,840
and um evolve on it later as we get more

00:02:08,190 --> 00:02:12,140
hardware and better understanding what

00:02:09,840 --> 00:02:12,140
we're doing

00:02:29,300 --> 00:02:38,340
a party there's no mobile microphone

00:02:33,360 --> 00:02:39,840
doesn't exist okay so so as I was saying

00:02:38,340 --> 00:02:42,959
I think we should move forward with

00:02:39,840 --> 00:02:46,020
John's patches for multiple reasons the

00:02:42,959 --> 00:02:47,550
first reason is as John stated we've had

00:02:46,020 --> 00:02:49,700
multiple discussions about funding the

00:02:47,550 --> 00:02:52,380
grand unified scheme for translating

00:02:49,700 --> 00:02:54,150
kernel rules and classifiers into what

00:02:52,380 --> 00:02:56,430
the hardware wants to do and it never

00:02:54,150 --> 00:02:58,080
makes any traction because this just the

00:02:56,430 --> 00:03:00,739
scope is too large it's impossible to

00:02:58,080 --> 00:03:04,260
make forward progress second of all

00:03:00,739 --> 00:03:06,390
there's no user interface exposed by

00:03:04,260 --> 00:03:08,310
this meaning there's no application

00:03:06,390 --> 00:03:09,540
visible use the space thing that could

00:03:08,310 --> 00:03:11,190
be affected by us changing the

00:03:09,540 --> 00:03:13,110
implementation of this in the future so

00:03:11,190 --> 00:03:15,360
there are no we're not stuck with

00:03:13,110 --> 00:03:16,440
anything if we put John stuff and now if

00:03:15,360 --> 00:03:18,260
we find out that there's something

00:03:16,440 --> 00:03:22,500
better a better way to do this later

00:03:18,260 --> 00:03:25,410
third of all I don't believe that we're

00:03:22,500 --> 00:03:28,829
gonna put this into a lot of drivers not

00:03:25,410 --> 00:03:33,840
on the order of hundreds maybe ten or

00:03:28,829 --> 00:03:35,970
twenty maybe less so if we do change the

00:03:33,840 --> 00:03:38,310
interfaces the pain for the drivers is

00:03:35,970 --> 00:03:41,910
not that huge it's not a lot of code to

00:03:38,310 --> 00:03:45,690
change so I think for now John's work is

00:03:41,910 --> 00:03:50,519
pretty reasonable yeah I have a quick

00:03:45,690 --> 00:03:52,980
question to what extent do the chips in

00:03:50,519 --> 00:03:55,220
question here support the classification

00:03:52,980 --> 00:03:58,440
rules that you could put into a u-32

00:03:55,220 --> 00:04:00,750
classifier yeah so so the Tinga cards

00:03:58,440 --> 00:04:02,459
which are IX GB for Intel at least are

00:04:00,750 --> 00:04:04,230
pretty limited in scope I mean think

00:04:02,459 --> 00:04:06,450
they pretty much map to what's in the

00:04:04,230 --> 00:04:08,040
flour kind of classifier I got lists of

00:04:06,450 --> 00:04:10,410
you there's there's there's a list that

00:04:08,040 --> 00:04:13,650
the that we have to match all in the u32

00:04:10,410 --> 00:04:16,140
so we just walk through it that's the 10

00:04:13,650 --> 00:04:17,789
gig stuff the 40 gig stuff gets quite a

00:04:16,140 --> 00:04:19,200
bit more interesting because they now

00:04:17,789 --> 00:04:21,120
you start to include all of the header

00:04:19,200 --> 00:04:22,620
prototypes and things some headers that

00:04:21,120 --> 00:04:23,070
we don't support yet that you might want

00:04:22,620 --> 00:04:25,110
to match

00:04:23,070 --> 00:04:27,150
in but you don't necessarily want to go

00:04:25,110 --> 00:04:28,500
and add an entire kernel support right

00:04:27,150 --> 00:04:29,700
because you don't already have the X LAN

00:04:28,500 --> 00:04:33,810
we don't need anyway as you get into

00:04:29,700 --> 00:04:35,700
that discussion and then the hunter gate

00:04:33,810 --> 00:04:39,300
stuff gets kind of the same story it's

00:04:35,700 --> 00:04:40,620
even more flexible and then I think

00:04:39,300 --> 00:04:42,570
eventually you get to the point where

00:04:40,620 --> 00:04:44,490
the hardware is programmable as far as

00:04:42,570 --> 00:04:46,140
the parse graph goes and you can put

00:04:44,490 --> 00:04:47,610
whatever you like in the hardware okay

00:04:46,140 --> 00:04:49,650
generally we try to make the hardware

00:04:47,610 --> 00:04:51,900
match Linux right because that makes the

00:04:49,650 --> 00:04:54,360
most sense but you know if you want to

00:04:51,900 --> 00:04:55,500
match on some if you if you happen to

00:04:54,360 --> 00:04:56,940
know there's something you 32 filter

00:04:55,500 --> 00:05:11,790
that you would like to match on we can

00:04:56,940 --> 00:05:14,700
add it to the hardware okay cool so I

00:05:11,790 --> 00:05:17,760
think that the story john told it's

00:05:14,700 --> 00:05:19,290
pretty pretty much on the money so I'm

00:05:17,760 --> 00:05:22,590
working with metronome and they already

00:05:19,290 --> 00:05:24,300
have fully programmable hardware so from

00:05:22,590 --> 00:05:25,620
that point of view it's really just a

00:05:24,300 --> 00:05:27,840
question of not what the hardware can

00:05:25,620 --> 00:05:31,140
support but what the firmware supports I

00:05:27,840 --> 00:05:36,540
can't say what it won't support but from

00:05:31,140 --> 00:05:38,370
a hub way point of view is anything okay

00:05:36,540 --> 00:05:40,770
so here's what I'm hearing because I

00:05:38,370 --> 00:05:43,050
also like the Mellanox patches with

00:05:40,770 --> 00:05:48,420
flour they they're going with the 14th

00:05:43,050 --> 00:05:51,210
opals or so that flour supports okay so

00:05:48,420 --> 00:05:53,310
I think in others if someone can use you

00:05:51,210 --> 00:06:01,020
thirty-two versus flour they should be

00:05:53,310 --> 00:06:03,780
free to use that so we were unlucky to

00:06:01,020 --> 00:06:09,060
submit two hours of a John but no I'm

00:06:03,780 --> 00:06:12,210
kidding so so again we as John said like

00:06:09,060 --> 00:06:16,320
what we suggested can nicely integrate

00:06:12,210 --> 00:06:19,440
with just as I suggested and so in the

00:06:16,320 --> 00:06:21,030
hardware API in the NGO level you could

00:06:19,440 --> 00:06:22,800
use the user to your flour that we're

00:06:21,030 --> 00:06:24,780
okay with that we'll do the flour

00:06:22,800 --> 00:06:26,580
it's for our hardware you were asking

00:06:24,780 --> 00:06:29,670
currently the hardware is more friendly

00:06:26,580 --> 00:06:31,560
to you to flour stuff like open floor

00:06:29,670 --> 00:06:33,750
rules okay but down the road we have a

00:06:31,560 --> 00:06:35,390
more flexible auto API is coming up so

00:06:33,750 --> 00:06:40,820
support you thirty-two more direct

00:06:35,390 --> 00:06:42,890
um something like that yes okay yes

00:06:40,820 --> 00:06:44,480
which is more flexible it looks like we

00:06:42,890 --> 00:06:46,820
had these two converging apps

00:06:44,480 --> 00:06:49,130
yes it's converge very nicely one thing

00:06:46,820 --> 00:06:51,200
that we did and maybe if we can do a

00:06:49,130 --> 00:06:53,540
short circuit here it will save some

00:06:51,200 --> 00:06:57,800
spins on amenities what we we also did

00:06:53,540 --> 00:07:00,530
that you didn't do initially we were the

00:06:57,800 --> 00:07:04,040
the NGO API did not include explicitly

00:07:00,530 --> 00:07:05,570
the TC construct because fire uses the

00:07:04,040 --> 00:07:07,100
floaty sector which is a generic

00:07:05,570 --> 00:07:10,190
infrastructure added barricade um as a

00:07:07,100 --> 00:07:13,190
few years ago right so we were we're

00:07:10,190 --> 00:07:15,380
using that in the API level and for some

00:07:13,190 --> 00:07:19,220
reason it got a bit of negative feedback

00:07:15,380 --> 00:07:22,360
which I don't necessarily understand so

00:07:19,220 --> 00:07:25,340
the so the question to you and to you is

00:07:22,360 --> 00:07:28,160
how would you would you like to really

00:07:25,340 --> 00:07:31,940
see the flower internals to the NGO or

00:07:28,160 --> 00:07:36,020
you prefer something like more of the

00:07:31,940 --> 00:07:38,300
floaty sector okay we like better the

00:07:36,020 --> 00:07:46,310
for the sailor but which represent the

00:07:38,300 --> 00:07:47,660
matching floater sector is done in the

00:07:46,310 --> 00:07:50,630
data path of the kernel and received

00:07:47,660 --> 00:07:52,520
right it's a generic structure yes that

00:07:50,630 --> 00:07:54,590
is handled in software all the time you

00:07:52,520 --> 00:07:55,700
don't necessarily want to add our betray

00:07:54,590 --> 00:07:58,250
fields to that because it needs to be

00:07:55,700 --> 00:07:59,420
fast I think that I thought the question

00:07:58,250 --> 00:08:02,720
was do you want to pass the flow

00:07:59,420 --> 00:08:04,910
dissector object into the NGOs yes if

00:08:02,720 --> 00:08:06,980
that's useful for flour specifically

00:08:04,910 --> 00:08:08,210
then go for it then you do it yeah okay

00:08:06,980 --> 00:08:11,930
but it doesn't make sense for like you

00:08:08,210 --> 00:08:13,610
32 because that's how you want to do it

00:08:11,930 --> 00:08:15,500
somehow I did it but I'm glad they

00:08:13,610 --> 00:08:18,200
changed my code to do it that way if you

00:08:15,500 --> 00:08:19,460
think it's better okay take a look at it

00:08:18,200 --> 00:08:22,100
and make sure it works but I think

00:08:19,460 --> 00:08:24,230
that's for you so I think good we made

00:08:22,100 --> 00:08:26,300
progress sir another point is initially

00:08:24,230 --> 00:08:29,390
we use the switch dev and now it's more

00:08:26,300 --> 00:08:31,760
leaning to an NGO and we're okay with

00:08:29,390 --> 00:08:35,510
that especially when for the virtual

00:08:31,760 --> 00:08:37,700
case case which as lon Ronny was talking

00:08:35,510 --> 00:08:39,530
about but this is only one Q's case do

00:08:37,700 --> 00:08:40,580
you have the second use case is sr io v

00:08:39,530 --> 00:08:42,950
when you have those

00:08:40,580 --> 00:08:44,780
and of course a physical switch so what

00:08:42,950 --> 00:08:48,560
we were discussing so let's start with

00:08:44,780 --> 00:08:50,600
the NGO and then see how it goes I live

00:08:48,560 --> 00:08:52,340
I think for a lot of reasons we should

00:08:50,600 --> 00:08:54,560
start with the NDL because right now we

00:08:52,340 --> 00:08:56,600
have a lot of problems with sr iove

00:08:54,560 --> 00:09:00,800
because these those things are invisible

00:08:56,600 --> 00:09:02,360
to the system yes but we are going to

00:09:00,800 --> 00:09:03,710
say I'm saying that we should solve that

00:09:02,360 --> 00:09:05,180
other problem somewhere down the line

00:09:03,710 --> 00:09:08,330
because if there's a lot of issues

00:09:05,180 --> 00:09:10,430
involved with that yes but this is going

00:09:08,330 --> 00:09:13,910
to be changed but if you look on let's

00:09:10,430 --> 00:09:18,110
say you look on an NGO and on physical

00:09:13,910 --> 00:09:19,730
switch we do one together okay so you

00:09:18,110 --> 00:09:22,520
will stop an NGO and then we'll see how

00:09:19,730 --> 00:09:29,870
the switches evolve looks like yadgiri

00:09:22,520 --> 00:09:31,640
do you have any opinions so I think that

00:09:29,870 --> 00:09:35,180
it doesn't really matter if it if you

00:09:31,640 --> 00:09:37,070
use India whereas do it's just an entry

00:09:35,180 --> 00:09:38,600
point to driver it doesn't really matter

00:09:37,070 --> 00:09:41,570
I mean I mean do you want to be vector

00:09:38,600 --> 00:09:42,680
it through another switch step hop it

00:09:41,570 --> 00:09:44,660
doesn't have to be used to reach that

00:09:42,680 --> 00:09:46,040
far it has to be it can be and you it's

00:09:44,660 --> 00:09:49,250
not the problem you just push something

00:09:46,040 --> 00:09:51,260
some flow description down and that's it

00:09:49,250 --> 00:09:57,080
not some actions that's it that's it

00:09:51,260 --> 00:09:59,540
it's just an entry point I guess but I I

00:09:57,080 --> 00:10:01,430
wanted to say I agree with the approach

00:09:59,540 --> 00:10:04,610
we are taking now I guess we are taking

00:10:01,430 --> 00:10:07,370
now for the just put something there and

00:10:04,610 --> 00:10:10,040
to see what will happen

00:10:07,370 --> 00:10:11,540
essentially yeah because because the all

00:10:10,040 --> 00:10:14,000
the alternative is that we sit on our

00:10:11,540 --> 00:10:16,670
hands for to morning exactly we already

00:10:14,000 --> 00:10:21,250
did that two years so let's do give

00:10:16,670 --> 00:10:25,520
let's get the wheels turn rolling yeah

00:10:21,250 --> 00:10:27,290
yeah regarding the the way mean all

00:10:25,520 --> 00:10:31,450
basically was telling well what what

00:10:27,290 --> 00:10:34,430
kind of structure we can pass to to be

00:10:31,450 --> 00:10:35,810
to be used to transform that sewage a

00:10:34,430 --> 00:10:39,620
day to convert it to the internal

00:10:35,810 --> 00:10:41,780
hardware presentation so so far what we

00:10:39,620 --> 00:10:43,520
have a patches is for you 32 I think

00:10:41,780 --> 00:10:45,650
it's a way to go I have an internal

00:10:43,520 --> 00:10:47,810
representation that I think a can

00:10:45,650 --> 00:10:51,070
represent board Amir has said what Joe

00:10:47,810 --> 00:10:53,960
has said and it can cover also not only

00:10:51,070 --> 00:10:58,490
payload matching but also meet hamachi

00:10:53,960 --> 00:11:00,170
and payload mangling and actions in a

00:10:58,490 --> 00:11:02,149
generic way and it's basically what

00:11:00,170 --> 00:11:06,560
we're doing in sa between use the space

00:11:02,149 --> 00:11:10,399
and and I mean mmm during that coffee I

00:11:06,560 --> 00:11:13,910
mean we agree on the fact that we all

00:11:10,399 --> 00:11:15,800
want to upload every every front and

00:11:13,910 --> 00:11:20,720
every classify everything that we have

00:11:15,800 --> 00:11:23,000
it currently so is it is it possible I

00:11:20,720 --> 00:11:24,649
can send an RPC with the passive

00:11:23,000 --> 00:11:26,000
Hollywood internal representation so we

00:11:24,649 --> 00:11:29,390
can have a look at it and try to agree

00:11:26,000 --> 00:11:33,529
on how to live how to if that the right

00:11:29,390 --> 00:11:35,180
API so I mean try to get the the

00:11:33,529 --> 00:11:37,010
internal representation infrastructure

00:11:35,180 --> 00:11:40,160
consolidated so we make sure that all

00:11:37,010 --> 00:11:43,040
the front ends have have the half of

00:11:40,160 --> 00:11:46,760
what what needs to be expressed before

00:11:43,040 --> 00:11:47,990
starting to that code incrementally you

00:11:46,760 --> 00:11:51,470
mentioned we made a list that you have

00:11:47,990 --> 00:11:53,420
30 more patches following up but I mean

00:11:51,470 --> 00:11:55,730
I will I would like to know how that

00:11:53,420 --> 00:11:59,870
structure how interpretation is grown

00:11:55,730 --> 00:12:01,339
and how it evolves yes so the other

00:11:59,870 --> 00:12:03,290
patches are for the other drivers mostly

00:12:01,339 --> 00:12:04,730
and then to extend like if you see that

00:12:03,290 --> 00:12:07,490
first patch I just did like some very

00:12:04,730 --> 00:12:09,589
basic filters I did like L to stuff and

00:12:07,490 --> 00:12:11,660
maybe a few IP addresses just because I

00:12:09,589 --> 00:12:13,040
don't want to bash the mailing list with

00:12:11,660 --> 00:12:15,320
a bunch of patches that started matching

00:12:13,040 --> 00:12:17,870
on TTL and and strange things that we

00:12:15,320 --> 00:12:19,070
only have a few people doing but but I

00:12:17,870 --> 00:12:21,380
just want to show that the interface

00:12:19,070 --> 00:12:23,060
could support that the other piece that

00:12:21,380 --> 00:12:24,260
I have in the patch survey is that at

00:12:23,060 --> 00:12:26,270
that I think we could probably talk

00:12:24,260 --> 00:12:28,640
about probably not here is it it's

00:12:26,270 --> 00:12:31,820
useful if the hard work exposes its

00:12:28,640 --> 00:12:33,260
capabilities at some level just so that

00:12:31,820 --> 00:12:36,260
you have some idea what's gonna fail

00:12:33,260 --> 00:12:38,390
when you're when you do this so we so we

00:12:36,260 --> 00:12:40,279
can we can do a like a get marsh graph

00:12:38,390 --> 00:12:42,320
and we can show the parts graph to user

00:12:40,279 --> 00:12:48,520
space or we can show the table layout to

00:12:42,320 --> 00:12:50,870
user space okay so can we leave the

00:12:48,520 --> 00:12:52,640
capability discovery for a later

00:12:50,870 --> 00:12:54,500
discussion I think Pablo is trying to

00:12:52,640 --> 00:12:58,250
make a valid point

00:12:54,500 --> 00:13:01,430
I mean if with regard there like Univ

00:12:58,250 --> 00:13:03,079
tables I you know I I'm open to trying

00:13:01,430 --> 00:13:04,670
to consolidate things but but I also

00:13:03,079 --> 00:13:05,839
don't want to get stuck and trying to

00:13:04,670 --> 00:13:07,000
figure out how to amend of tables and

00:13:05,839 --> 00:13:10,149
TCE are merge together

00:13:07,000 --> 00:13:11,800
I think as a kind of case in point TC

00:13:10,149 --> 00:13:16,420
and if filters haven't merged in the

00:13:11,800 --> 00:13:18,610
software stack for four years so I'm not

00:13:16,420 --> 00:13:23,439
quite sure if it's the drivers job to

00:13:18,610 --> 00:13:25,870
try and merge the two I I think I just

00:13:23,439 --> 00:13:28,600
won't I just need to send a patch so it

00:13:25,870 --> 00:13:30,639
would be easier ways to so I need to

00:13:28,600 --> 00:13:33,279
sort out that and and push it into the

00:13:30,639 --> 00:13:35,139
Senate animated list but what I've seen

00:13:33,279 --> 00:13:37,540
so far is that the representation should

00:13:35,139 --> 00:13:39,009
should be its generic it's kind of I

00:13:37,540 --> 00:13:40,899
mean it's not a specific or timetable

00:13:39,009 --> 00:13:44,050
but it should be easy to generalize is

00:13:40,899 --> 00:13:46,300
just a bit too to support all the I mean

00:13:44,050 --> 00:13:49,079
the basic the basic things that we do is

00:13:46,300 --> 00:13:52,050
payload matching a payload mangling

00:13:49,079 --> 00:13:54,579
metadata man matching and mangling and

00:13:52,050 --> 00:13:57,129
what else they're also tunneling but

00:13:54,579 --> 00:13:58,870
those are actions basically so that can

00:13:57,129 --> 00:14:01,269
be expressed in a very small syntax tree

00:13:58,870 --> 00:14:03,189
that really and then yes decorated with

00:14:01,269 --> 00:14:05,439
a specific information about if this is

00:14:03,189 --> 00:14:07,959
going to TC and you want some you need

00:14:05,439 --> 00:14:10,689
some specific information on that that

00:14:07,959 --> 00:14:14,019
can be extra thing on top of that they

00:14:10,689 --> 00:14:17,559
can know what publicus into the packages

00:14:14,019 --> 00:14:22,079
so if I hear you we can proceed so

00:14:17,559 --> 00:14:22,079
questions for both of you I think for me

00:14:23,100 --> 00:14:28,930
so when I when I saw Ron his

00:14:25,689 --> 00:14:30,759
presentation he was not showing that I

00:14:28,930 --> 00:14:33,009
was able to select either hardware or

00:14:30,759 --> 00:14:34,509
software it sounded to me like when you

00:14:33,009 --> 00:14:39,009
stole those rules they'll be installed

00:14:34,509 --> 00:14:40,420
in software right but could I for

00:14:39,009 --> 00:14:42,189
example the mark you are sending the

00:14:40,420 --> 00:14:44,680
mark to the hardware to tell it to tag a

00:14:42,189 --> 00:14:47,589
packet with an escapee mark that mark

00:14:44,680 --> 00:14:50,230
could also be used in software right it

00:14:47,589 --> 00:14:52,600
does I when I get the mark I multiplex

00:14:50,230 --> 00:14:54,759
pass on it I couldn't tell if it was

00:14:52,600 --> 00:15:00,430
bought in hardware and what happens when

00:14:54,759 --> 00:15:02,439
a package shows up in software a mark so

00:15:00,430 --> 00:15:05,610
I set a rule they rule this slide that

00:15:02,439 --> 00:15:08,920
showed a rule being sent to the hardware

00:15:05,610 --> 00:15:10,689
and it said offload I believe did you

00:15:08,920 --> 00:15:13,740
say offload but at the same time you

00:15:10,689 --> 00:15:17,740
want to use that mark in TC on ingress

00:15:13,740 --> 00:15:20,139
in software how do you say both as

00:15:17,740 --> 00:15:21,999
opposed to offload only which is what

00:15:20,139 --> 00:15:26,110
the f DB

00:15:21,999 --> 00:15:28,360
right that's what I thought was missing

00:15:26,110 --> 00:15:30,399
at this point so both punches must

00:15:28,360 --> 00:15:35,739
consider this or Jones batches you have

00:15:30,399 --> 00:15:38,920
to consider that right if it's up to me

00:15:35,739 --> 00:15:40,509
as a policy person to say right I only

00:15:38,920 --> 00:15:42,160
wanna say this is only in software and I

00:15:40,509 --> 00:15:44,619
can leave that off load is binary right

00:15:42,160 --> 00:15:48,489
now hardware or software but I may want

00:15:44,619 --> 00:15:51,879
to say both right and I'm assuming that

00:15:48,489 --> 00:15:54,249
if you seen hardware that is a norm in

00:15:51,879 --> 00:15:57,579
software correct like how do you how do

00:15:54,249 --> 00:15:59,470
you structure that is okay there is a

00:15:57,579 --> 00:16:03,279
whole list for just software for how do

00:15:59,470 --> 00:16:06,009
I end soft okay cool that's the only

00:16:03,279 --> 00:16:08,920
other question for you so your stats I

00:16:06,009 --> 00:16:10,480
think Jesse and Jesse asked you a

00:16:08,920 --> 00:16:11,860
question but I just want to clarify

00:16:10,480 --> 00:16:14,860
because I wasn't sure I understood your

00:16:11,860 --> 00:16:21,279
answer the statistics okay now someone's

00:16:14,860 --> 00:16:26,259
gonna make a joke right the statistics

00:16:21,279 --> 00:16:28,540
on the drop rule my understanding is how

00:16:26,259 --> 00:16:30,639
many how many possible star if I have a

00:16:28,540 --> 00:16:33,329
million flows or whatever your capacity

00:16:30,639 --> 00:16:46,269
is in the hardware can I have a stat

00:16:33,329 --> 00:16:49,929
statistic flow so under and when I do a

00:16:46,269 --> 00:16:51,699
TC when I when I try to list of the list

00:16:49,929 --> 00:16:55,149
of filters or the actions associated I

00:16:51,699 --> 00:16:58,569
will get stats power flow but as long as

00:16:55,149 --> 00:17:01,350
I type all right cool that's it that's

00:16:58,569 --> 00:17:01,350
the only question I had

00:17:07,120 --> 00:17:22,720
right but so the question was about

00:17:20,319 --> 00:17:26,230
statistics and how do we do / rural

00:17:22,720 --> 00:17:28,360
statistics you suppose the that 10 get

00:17:26,230 --> 00:17:32,970
carts don't support statistics so so

00:17:28,360 --> 00:17:38,159
they didn't have it but but the 40 gig

00:17:32,970 --> 00:17:40,450
has a limited number yeah but I think

00:17:38,159 --> 00:17:42,909
you'll have to just report it back in

00:17:40,450 --> 00:17:46,480
the in the list of when you do a query

00:17:42,909 --> 00:17:53,409
has to be back right so I maybe

00:17:46,480 --> 00:17:56,409
sometimes that's fine as long as it's

00:17:53,409 --> 00:17:59,020
close to accurate mm-hmm but the 40 e

00:17:56,409 --> 00:18:03,190
has only about 5 stats so when I add a

00:17:59,020 --> 00:18:05,169
TC drop rule I typically it comes so do

00:18:03,190 --> 00:18:07,240
you do you want to do you want to make

00:18:05,169 --> 00:18:08,890
it implicit or explicit like D do you

00:18:07,240 --> 00:18:11,529
want to have the user required it put it

00:18:08,890 --> 00:18:12,610
in or maybe opt out of statistics we

00:18:11,529 --> 00:18:16,270
don't want them to opt out if I

00:18:12,610 --> 00:18:30,460
simplistically it comes with stat come

00:18:16,270 --> 00:18:32,529
on stats oh yes okay so the question is

00:18:30,460 --> 00:18:34,000
if you have limited resources for

00:18:32,529 --> 00:18:35,799
example the number of stats being less

00:18:34,000 --> 00:18:38,730
than a number flow as possible how do

00:18:35,799 --> 00:18:38,730
you deal with that

00:18:39,059 --> 00:18:43,240
well I'm assuming that if we end up

00:18:41,770 --> 00:18:44,590
doing discovery assuming initially

00:18:43,240 --> 00:18:50,260
somebody knows what that this how do I

00:18:44,590 --> 00:18:51,580
suppose actions so that's what you have

00:18:50,260 --> 00:18:53,440
the harbor flag the software flag in the

00:18:51,580 --> 00:18:55,090
both flake right if you have the bull

00:18:53,440 --> 00:18:56,260
flag then then the air case is you just

00:18:55,090 --> 00:18:58,000
put it in software and because you can't

00:18:56,260 --> 00:18:59,470
put in hardware if the hardware flag is

00:18:58,000 --> 00:19:00,490
hardware only and you can't put it in

00:18:59,470 --> 00:19:03,240
hardware you have to air out right

00:19:00,490 --> 00:19:03,240
because it can't be put there

00:19:06,620 --> 00:19:11,910
sure sure I think that's okay well I

00:19:10,290 --> 00:19:17,220
don't know are we saying no are we now

00:19:11,910 --> 00:19:18,780
saying that stats are optional for can

00:19:17,220 --> 00:19:21,120
we do fourth to none optional and then I

00:19:18,780 --> 00:19:25,230
can turn them off because that's how do

00:19:21,120 --> 00:19:26,430
you see starts work today roni slighty

00:19:25,230 --> 00:19:28,650
let's say you wanna use it somewhere

00:19:26,430 --> 00:19:31,170
with open V switch or some some system

00:19:28,650 --> 00:19:32,580
that does aging you have to have stats

00:19:31,170 --> 00:19:36,360
per flow because otherwise your sucks

00:19:32,580 --> 00:19:39,480
your aging yeah all right so can we

00:19:36,360 --> 00:19:41,310
close this topic okay we're gonna have

00:19:39,480 --> 00:19:42,090
patches I think we'll probably resolve

00:19:41,310 --> 00:19:47,940
it this week

00:19:42,090 --> 00:19:49,980
and John okay John is the man all right

00:19:47,940 --> 00:19:54,300
anyway any other thing you think is

00:19:49,980 --> 00:19:58,020
important to talk about in this specific

00:19:54,300 --> 00:20:00,540
topic okay we don't know what the next

00:19:58,020 --> 00:20:02,100
agenda item but I'm gonna ask Daniel do

00:20:00,540 --> 00:20:05,130
you want to talk about anything or Alex

00:20:02,100 --> 00:20:06,960
see where's Alexei you BPF stuff there

00:20:05,130 --> 00:20:09,510
make a pile right there

00:20:06,960 --> 00:20:10,770
eb PF come on you don't want to say

00:20:09,510 --> 00:20:13,320
anything you have to have something to

00:20:10,770 --> 00:20:15,420
say all right who else wants to talk

00:20:13,320 --> 00:20:16,680
about some other topic others I'm gonna

00:20:15,420 --> 00:20:21,810
start showing performance numbers that

00:20:16,680 --> 00:20:24,150
I'm gonna now puff I don't know puffs I

00:20:21,810 --> 00:20:26,520
am not sure if puff counts or stats

00:20:24,150 --> 00:20:31,190
okay but Lucas you think you can you can

00:20:26,520 --> 00:20:34,170
do this okay so Lucas is gonna run the

00:20:31,190 --> 00:20:36,390
proof points and can you run to Windows

00:20:34,170 --> 00:20:38,310
where one you show puff top puff top is

00:20:36,390 --> 00:20:42,330
good when he runs the test can you make

00:20:38,310 --> 00:20:45,320
sure you run it non-stop I've learned

00:20:42,330 --> 00:20:49,320
from the morning presentation that I

00:20:45,320 --> 00:20:52,740
have to cut things so we have about 20

00:20:49,320 --> 00:20:53,400
minutes to go so maybe this would this

00:20:52,740 --> 00:20:57,840
puff table

00:20:53,400 --> 00:20:58,890
okay experts on path if he's doing

00:20:57,840 --> 00:21:00,870
something wrong

00:20:58,890 --> 00:21:06,570
please speak up he's gonna run it which

00:21:00,870 --> 00:21:08,620
which one are you running which one

00:21:06,570 --> 00:21:19,850
doing around first is

00:21:08,620 --> 00:21:22,070
you've done the setup okay all right so

00:21:19,850 --> 00:21:25,720
just let us know which one you're gonna

00:21:22,070 --> 00:21:25,720
run and I'll just be the emcee for you

00:21:25,809 --> 00:21:33,130
to be maybe just put in the background

00:21:36,820 --> 00:21:40,520
so it's okay if you just show the puff

00:21:39,410 --> 00:21:42,919
top and then it'll just show you that

00:21:40,520 --> 00:21:46,490
you set the configuration maybe you set

00:21:42,919 --> 00:21:51,590
it up and then run do the setup and then

00:21:46,490 --> 00:21:53,929
do a run and do it and then show them

00:21:51,590 --> 00:21:57,650
the setup and then you can do a run can

00:21:53,929 --> 00:21:59,059
you run it with net with package in zero

00:21:57,650 --> 00:22:02,320
so you can hit control C instead of

00:21:59,059 --> 00:22:02,320
timing it okay cool

00:22:04,360 --> 00:22:16,010
all right so this device call i7 is

00:22:10,340 --> 00:22:19,520
about $500 so it's 16 gigs of 1600 sorry

00:22:16,010 --> 00:22:31,309
16 2 times 8 teams which are 1600

00:22:19,520 --> 00:22:34,490
megahertz and an SSD snow it's described

00:22:31,309 --> 00:22:36,679
as a three point one megahertz CPU we've

00:22:34,490 --> 00:22:40,070
never hit that maybe there's some bias

00:22:36,679 --> 00:22:46,850
options we need to turn off which were

00:22:40,070 --> 00:22:48,440
you studying with okay any anybody wants

00:22:46,850 --> 00:22:56,840
to feel two minutes three minutes here

00:22:48,440 --> 00:22:59,540
John or you okay I would like to hear

00:22:56,840 --> 00:23:02,299
how a you 32 handles VLAN for example I

00:22:59,540 --> 00:23:04,100
want to match on the IP fields so the

00:23:02,299 --> 00:23:12,490
villain changes the location of the IP

00:23:04,100 --> 00:23:14,840
right did not handle villain very well

00:23:12,490 --> 00:23:16,610
you've got you've got an offset you've

00:23:14,840 --> 00:23:18,140
got a type you can you can watch on but

00:23:16,610 --> 00:23:19,880
about the problem is you need it you

00:23:18,140 --> 00:23:21,740
need a two-way tree coming in just like

00:23:19,880 --> 00:23:25,520
the beep here programs that TCP

00:23:21,740 --> 00:23:27,700
uses to match on IP headers okay okay

00:23:25,520 --> 00:23:33,890
see what I'm saying we can fix it man

00:23:27,700 --> 00:23:38,720
okay okay cool

00:23:33,890 --> 00:23:40,490
right no but our jalapao so doesn't

00:23:38,720 --> 00:23:42,770
carry for the packet has villain or not

00:23:40,490 --> 00:23:44,270
it can just match on the IP so what am I

00:23:42,770 --> 00:23:46,120
supposed to doing the driver my supposed

00:23:44,270 --> 00:24:10,670
to collapse the tree that you build area

00:23:46,120 --> 00:24:24,140
if I want to match on the IP repeat what

00:24:10,670 --> 00:24:26,540
you say it's too bad we're still okay

00:24:24,140 --> 00:24:28,340
okay so so one of the child they were

00:24:26,540 --> 00:24:31,850
you 32 works you have offset length mask

00:24:28,340 --> 00:24:34,309
value so you can at the moment because

00:24:31,850 --> 00:24:36,470
we traditionally world as much at the

00:24:34,309 --> 00:24:39,650
ethertype level after the inter time so

00:24:36,470 --> 00:24:42,290
what he calls transport it allows you to

00:24:39,650 --> 00:24:45,400
do negative offsets so you can say if

00:24:42,290 --> 00:24:48,860
you go minus 14 you're hitting the sauce

00:24:45,400 --> 00:24:50,900
destination MAC address here and you can

00:24:48,860 --> 00:24:52,610
you can extract the whole header and the

00:24:50,900 --> 00:24:55,040
skb will have some of those details

00:24:52,610 --> 00:24:56,450
unless you're running on your ingress in

00:24:55,040 --> 00:25:08,450
which you have to go and build them up

00:24:56,450 --> 00:25:11,390
yourself are we doing good okay which

00:25:08,450 --> 00:25:14,929
your choice so you just show them the

00:25:11,390 --> 00:25:17,030
environment variable Alex is here it's

00:25:14,929 --> 00:25:20,110
not here okay we're not going to show a

00:25:17,030 --> 00:25:20,110
forwarding test

00:25:22,410 --> 00:25:42,810
pick one and let's go with it you may

00:25:24,700 --> 00:25:42,810
have to reset path because ya should go

00:25:44,370 --> 00:25:49,990
yes so I read some patches that remove

00:25:47,320 --> 00:25:52,600
the cutest clock and move it into a / /

00:25:49,990 --> 00:25:54,460
Q disk kind of thing and so there's a

00:25:52,600 --> 00:25:56,560
flag that each cutest can set on whether

00:25:54,460 --> 00:25:59,190
or not it needs the cutest clock a lot

00:25:56,560 --> 00:26:02,220
of the cutest don't actually need it

00:25:59,190 --> 00:26:04,090
trying to rewrite things like HTTP

00:26:02,220 --> 00:26:05,740
hierarchical token buckets without

00:26:04,090 --> 00:26:06,850
without a lock is pretty tricky it's

00:26:05,740 --> 00:26:07,690
probably better just write a new cue

00:26:06,850 --> 00:26:10,690
desk if you need that kind of

00:26:07,690 --> 00:26:13,120
functionality the performance I saw was

00:26:10,690 --> 00:26:17,520
just with that wasn't so great it was

00:26:13,120 --> 00:26:20,200
like a million packets per second more

00:26:17,520 --> 00:26:22,540
which which maybe is pretty good but

00:26:20,200 --> 00:26:26,220
isn't as great as I thought because you

00:26:22,540 --> 00:26:28,000
still have the per net dev Q lock there

00:26:26,220 --> 00:26:30,220
but you know we got to start somewhere

00:26:28,000 --> 00:26:31,930
so we start there then the next maybe

00:26:30,220 --> 00:26:34,000
the interesting thing is actually I saw

00:26:31,930 --> 00:26:37,870
a better numbers on my benchmarking when

00:26:34,000 --> 00:26:39,760
I turned off the cue desk bypass so if

00:26:37,870 --> 00:26:41,140
you look at P FIFO fast there's an

00:26:39,760 --> 00:26:42,910
option to go around the q disk if

00:26:41,140 --> 00:26:44,440
there's nothing in it but what I

00:26:42,910 --> 00:26:46,000
actually saw better numbers performance

00:26:44,440 --> 00:26:48,670
testing if you go through the Q disk

00:26:46,000 --> 00:26:51,670
because that would end up usually and if

00:26:48,670 --> 00:26:53,530
you shrink the TX descriptor ring size

00:26:51,670 --> 00:26:54,880
on the driver so you're gonna queuing

00:26:53,530 --> 00:26:56,470
less packets on the driver and actually

00:26:54,880 --> 00:26:57,820
queuing more in the Q disk you can

00:26:56,470 --> 00:26:59,440
actually get the cutest to start bulking

00:26:57,820 --> 00:27:00,970
packets out of out of it you're

00:26:59,440 --> 00:27:06,120
aggregating you're aggregating the

00:27:00,970 --> 00:27:06,120
device spinlock yeah yeah so

00:27:10,020 --> 00:27:14,970
yeah so it uses the expert more stuff is

00:27:12,179 --> 00:27:16,500
is what happens so we because if you'd

00:27:14,970 --> 00:27:17,700
never use that and you have a driver

00:27:16,500 --> 00:27:19,679
that can keep up with traffic right

00:27:17,700 --> 00:27:22,170
you're doing one skb at a time you never

00:27:19,679 --> 00:27:23,280
get the the chain to build up but if you

00:27:22,170 --> 00:27:25,260
make it go through the cutest you slow

00:27:23,280 --> 00:27:27,480
it down slightly and if you shrink the

00:27:25,260 --> 00:27:29,970
descriptor ring number of descriptors

00:27:27,480 --> 00:27:31,950
that TX site has the driver can't handle

00:27:29,970 --> 00:27:34,920
the mounting SUVs that you're throwing

00:27:31,950 --> 00:27:36,600
at it so you end up with a queue in in

00:27:34,920 --> 00:27:38,610
the queue disk if you get that tuning

00:27:36,600 --> 00:27:41,160
right you can basically get the cutest

00:27:38,610 --> 00:27:46,110
pulling out eight 16s KB's out of whack

00:27:41,160 --> 00:27:48,000
and drive CPU down and drive the thing

00:27:46,110 --> 00:27:48,960
up the one other thing I'll just not

00:27:48,000 --> 00:27:51,900
really quick before I give it to Jasper

00:27:48,960 --> 00:27:55,530
is if you if you get XPS right so that

00:27:51,900 --> 00:27:57,600
you have a CPU CPU per descriptor ring

00:27:55,530 --> 00:27:59,730
on the TX side you can then even drop

00:27:57,600 --> 00:28:02,520
the lock around the driver because you

00:27:59,730 --> 00:28:03,929
only have one ring working on on each

00:28:02,520 --> 00:28:05,820
descriptor ring in the driver and

00:28:03,929 --> 00:28:14,010
everything's sort of nicely aligned for

00:28:05,820 --> 00:28:15,840
you and what what what what people don't

00:28:14,010 --> 00:28:18,600
realize what's really happening is it's

00:28:15,840 --> 00:28:20,910
actually when we tell the hardware to

00:28:18,600 --> 00:28:22,950
that transmits we update the tail

00:28:20,910 --> 00:28:24,660
pointer to the hardware swing cue that's

00:28:22,950 --> 00:28:26,820
the expensive part and it doesn't show

00:28:24,660 --> 00:28:28,440
up in perf so people always blame that

00:28:26,820 --> 00:28:30,690
up we think there's a security lock

00:28:28,440 --> 00:28:33,150
happening but it's actually not so you

00:28:30,690 --> 00:28:35,730
get the host beat up because you all of

00:28:33,150 --> 00:28:37,350
a sudden when you bought DQ we of course

00:28:35,730 --> 00:28:39,510
I'm also sized to lock down to the

00:28:37,350 --> 00:28:40,740
turret driver but as the test I cannot

00:28:39,510 --> 00:28:43,710
what's really going on what's really

00:28:40,740 --> 00:28:45,330
going on is that that it's really

00:28:43,710 --> 00:28:48,690
expensive to tell the hardware there's

00:28:45,330 --> 00:28:50,400
packets in the transmitted ring now so

00:28:48,690 --> 00:28:53,309
once we start getting that kind of bug

00:28:50,400 --> 00:28:56,030
in its huge performance benefit I wonder

00:28:53,309 --> 00:28:59,790
if next driver I can get 40% more true

00:28:56,030 --> 00:29:01,830
and and for the insert drives a drivers

00:28:59,790 --> 00:29:03,630
they happen to be around 12% small you

00:29:01,830 --> 00:29:05,970
get performance when you do this I heard

00:29:03,630 --> 00:29:08,850
John talk about the trick of decreasing

00:29:05,970 --> 00:29:11,429
the transmit q Hardware size I wonder if

00:29:08,850 --> 00:29:13,260
we can cue the bike you like tweak the

00:29:11,429 --> 00:29:16,050
bike you limits to automatically adjust

00:29:13,260 --> 00:29:20,040
to find that sweet spot

00:29:16,050 --> 00:29:21,270
I can't sit on everyone systems but it

00:29:20,040 --> 00:29:22,920
would be really cool if we could find an

00:29:21,270 --> 00:29:24,090
automated way to figure out that I think

00:29:22,920 --> 00:29:25,860
we need to that's kind of the next thing

00:29:24,090 --> 00:29:27,480
to look at I mean cuz you still get the

00:29:25,860 --> 00:29:28,500
way in it without it so I'm kind of

00:29:27,480 --> 00:29:29,490
debating on whether the patches are

00:29:28,500 --> 00:29:31,320
we're sending without it because there's

00:29:29,490 --> 00:29:33,000
still a win it's just it doesn't look

00:29:31,320 --> 00:29:34,350
really great and tell you start - I

00:29:33,000 --> 00:29:37,070
think it's - I think you should still

00:29:34,350 --> 00:29:40,410
submit the patches okay so really to the

00:29:37,070 --> 00:29:46,340
network performance both this discussion

00:29:40,410 --> 00:29:49,890
Prelude cool okay come to GS + buff your

00:29:46,340 --> 00:29:51,960
okay okay all right I'll carry the path

00:29:49,890 --> 00:29:53,430
relax come to the buff guys so I'm not

00:29:51,960 --> 00:29:55,050
the only one who does this yes but I

00:29:53,430 --> 00:29:56,340
just did that so you guys just got a

00:29:55,050 --> 00:30:01,200
glimpse of what's gonna happen there

00:29:56,340 --> 00:30:07,470
show up okay look as if sorry what do

00:30:01,200 --> 00:30:08,940
you want to do you sure okay that's

00:30:07,470 --> 00:30:09,470
perfect oh and what are you gonna run

00:30:08,940 --> 00:30:15,210
now

00:30:09,470 --> 00:30:17,610
okay so flower URI okay go so you get

00:30:15,210 --> 00:30:22,100
yeah this is with a single flow at what

00:30:17,610 --> 00:30:29,820
point single four thousand flows one

00:30:22,100 --> 00:30:35,010
just one okay go - two - two - okay I

00:30:29,820 --> 00:30:38,610
don't mind if you restart it so it yeah

00:30:35,010 --> 00:30:41,510
but are you sure you're running the

00:30:38,610 --> 00:30:41,510
flower test

00:30:49,440 --> 00:30:54,540
just kill the powerful restart again

00:31:08,130 --> 00:31:19,120
well the memset that looks like

00:31:10,390 --> 00:31:22,780
something flower we did okay can I give

00:31:19,120 --> 00:31:27,370
someone else a chance you okay any other

00:31:22,780 --> 00:31:36,430
topic like CLS act do you want to say

00:31:27,370 --> 00:31:37,090
anything about it so for 44.5 I think

00:31:36,430 --> 00:31:39,040
it's cute

00:31:37,090 --> 00:31:44,400
we have a new COO disc which is called

00:31:39,040 --> 00:31:48,010
CLS act and it's basically similar to

00:31:44,400 --> 00:31:50,160
ingress or CLS act is for adding

00:31:48,010 --> 00:31:53,260
classifiers and therefore also actions

00:31:50,160 --> 00:31:55,480
on an ingress point and an egress point

00:31:53,260 --> 00:31:59,740
equals point that was newly added for

00:31:55,480 --> 00:32:02,290
that that hook it sits under deaf to

00:31:59,740 --> 00:32:08,410
Exmouth so every packet will flow to

00:32:02,290 --> 00:32:11,920
that and at a point before the coup disk

00:32:08,410 --> 00:32:14,290
is basically selected and before you

00:32:11,920 --> 00:32:17,590
would run normally a classifier in a

00:32:14,290 --> 00:32:19,360
classroom to disk so it's like and and

00:32:17,590 --> 00:32:22,600
it therefore also runs outside of the

00:32:19,360 --> 00:32:24,310
lock of tasks so I think it's very

00:32:22,600 --> 00:32:27,690
useful for example when you have some

00:32:24,310 --> 00:32:31,060
virtual device and you don't need to or

00:32:27,690 --> 00:32:35,470
anyone things like EBP F for example as

00:32:31,060 --> 00:32:37,600
a classifier then you don't need to have

00:32:35,470 --> 00:32:40,030
something like I don't know like fake

00:32:37,600 --> 00:32:45,640
cue disk that is class four just for the

00:32:40,030 --> 00:32:48,670
fact of adding filter for that or you

00:32:45,640 --> 00:32:51,940
can modify your forward packets so I

00:32:48,670 --> 00:32:53,440
think it's really useful I'm curious who

00:32:51,940 --> 00:32:55,840
the hardware guys that are trying to

00:32:53,440 --> 00:32:57,160
offload like yourself John have you guys

00:32:55,840 --> 00:32:58,690
looked at this I know you you had a

00:32:57,160 --> 00:33:04,540
different approach on how to bypass the

00:32:58,690 --> 00:33:07,510
Achilles lock yeah so the first approach

00:33:04,540 --> 00:33:09,880
was to add extra callback handler to

00:33:07,510 --> 00:33:10,810
empty prior right and then you pass the

00:33:09,880 --> 00:33:14,110
true and

00:33:10,810 --> 00:33:17,650
but it only be limited to MSHA prior and

00:33:14,110 --> 00:33:22,480
so here you have like it's it's more

00:33:17,650 --> 00:33:25,330
generic generic as it can it this is

00:33:22,480 --> 00:33:27,190
more usable than just mg prior okay so

00:33:25,330 --> 00:33:29,380
is there possibility that we can

00:33:27,190 --> 00:33:32,220
actually integrate this into it once we

00:33:29,380 --> 00:33:35,470
expose less secure disks in the hardware

00:33:32,220 --> 00:33:37,000
this is easier to do so the the next gen

00:33:35,470 --> 00:33:39,490
where you exposing the queues from the

00:33:37,000 --> 00:33:41,110
hardware you can export you can use this

00:33:39,490 --> 00:33:43,510
infrastructure and you don't have to

00:33:41,110 --> 00:33:47,080
actually kill anything in software cool

00:33:43,510 --> 00:33:49,270
how out of curiosity how fast are these

00:33:47,080 --> 00:33:54,010
operations when I let's say I just read

00:33:49,270 --> 00:34:04,080
a start or I add how many flows per

00:33:54,010 --> 00:34:04,080
second can I add or read once per second

00:34:08,100 --> 00:34:17,440
so I can but how how many thousand eight

00:34:13,060 --> 00:34:24,399
thousand was a second basically I'm

00:34:17,440 --> 00:34:29,770
looking at 500,000 per second that's

00:34:24,399 --> 00:34:32,830
very cool I can I should be natural one

00:34:29,770 --> 00:34:41,560
minute for how many millions per second

00:34:32,830 --> 00:34:43,210
 Wow

00:34:41,560 --> 00:34:45,460
okay I've worked with harder that's

00:34:43,210 --> 00:34:52,810
really slow when we got 40,000 everybody

00:34:45,460 --> 00:34:54,310
was just celebrating know the hardware

00:34:52,810 --> 00:35:01,830
tends to be you know you could do be to

00:34:54,310 --> 00:35:07,820
do some bit banging you know you okay

00:35:01,830 --> 00:35:10,830
how's it going ready okay

00:35:07,820 --> 00:35:12,060
okay anybody else it's almost like we've

00:35:10,830 --> 00:35:14,760
covered all the topics all this nits

00:35:12,060 --> 00:35:18,020
left is how much time do we have 15

00:35:14,760 --> 00:35:18,020
minutes that's perfect timing

00:35:33,070 --> 00:35:37,640
we will make by the way our scripts that

00:35:35,600 --> 00:35:39,440
we used for all of this stuff whoever

00:35:37,640 --> 00:35:40,460
wants to repeat this test on a different

00:35:39,440 --> 00:35:42,380
machine you will make them a bill I

00:35:40,460 --> 00:35:45,620
don't know I'm not a github type guy so

00:35:42,380 --> 00:35:46,910
I you don't have a github actually I

00:35:45,620 --> 00:35:48,680
think I have a github account I just

00:35:46,910 --> 00:35:50,090
never use it I was first once that the

00:35:48,680 --> 00:35:52,610
only way I could submit Apache through

00:35:50,090 --> 00:35:56,030
github so I had an account never used it

00:35:52,610 --> 00:35:59,540
since but we'll make these scripts

00:35:56,030 --> 00:36:01,670
available like all the tests we did you

00:35:59,540 --> 00:36:04,190
may be useful for people who want to see

00:36:01,670 --> 00:36:06,980
how you can set up a few thousand rules

00:36:04,190 --> 00:36:11,350
through multiple multi try hash tables

00:36:06,980 --> 00:36:11,350
with you 32 because that works already

00:36:13,060 --> 00:36:24,860
how's it going and I hope we can for the

00:36:22,610 --> 00:36:27,050
rest of the few days we can interact and

00:36:24,860 --> 00:36:41,630
take a look I'd like to talk to Dan and

00:36:27,050 --> 00:36:43,250
Lexie they want the IFE action ok yep ok

00:36:41,630 --> 00:36:45,320
before you do that can you show the rule

00:36:43,250 --> 00:36:50,060
if you can put up the window what are

00:36:45,320 --> 00:36:51,650
you setting ok this is flower now so you

00:36:50,060 --> 00:36:54,590
see how nice flowers you can actually

00:36:51,650 --> 00:36:56,330
see it's a sauce underscore IP and you

00:36:54,590 --> 00:36:57,380
guys will see the difference as we start

00:36:56,330 --> 00:36:59,350
to install you thought it was very

00:36:57,380 --> 00:37:05,960
different

00:36:59,350 --> 00:37:08,210
ok I guess he's already run a test ok go

00:37:05,960 --> 00:37:09,770
for it puffed up and then run a test so

00:37:08,210 --> 00:37:15,380
he's just gonna run a test with one

00:37:09,770 --> 00:37:18,200
floor that has a single 5 tuple or one

00:37:15,380 --> 00:37:19,760
tuple one tuple so the easiest the

00:37:18,200 --> 00:37:23,060
simplest way you can go you just matches

00:37:19,760 --> 00:37:24,410
on source IP ok and then drops and you

00:37:23,060 --> 00:37:27,070
can see the our hash table right away

00:37:24,410 --> 00:37:29,570
and the mem comps I told you about this

00:37:27,070 --> 00:37:31,970
all right they're way up they are hash

00:37:29,570 --> 00:37:34,460
table I know you can probably replay

00:37:31,970 --> 00:37:36,320
it's probably sensible to understand

00:37:34,460 --> 00:37:38,570
this there's a single rule in the our

00:37:36,320 --> 00:37:42,170
hash table you have to reconstruct every

00:37:38,570 --> 00:37:44,780
time but it's clear that you you know

00:37:42,170 --> 00:37:45,870
the classifier is being involved the CLS

00:37:44,780 --> 00:37:48,990
flower the inter

00:37:45,870 --> 00:37:51,750
point FL classify and then you can see

00:37:48,990 --> 00:37:53,250
that unfortunately there's a few things

00:37:51,750 --> 00:37:54,210
that are hidden in my cross so puff is

00:37:53,250 --> 00:37:56,850
not very good at that

00:37:54,210 --> 00:37:59,310
it doesn't quite display the breakdown I

00:37:56,850 --> 00:38:01,440
tried to go and change it to to be

00:37:59,310 --> 00:38:06,000
functions but I didn't have time to

00:38:01,440 --> 00:38:08,520
chase it so Wilson doesn't do macros

00:38:06,000 --> 00:38:13,560
very well like if I for example our hash

00:38:08,520 --> 00:38:15,000
tables cause a lot of macros is there

00:38:13,560 --> 00:38:16,560
something we can do right now that will

00:38:15,000 --> 00:38:19,830
show that can you hit go to our hash

00:38:16,560 --> 00:38:23,250
table J hash in which one is after

00:38:19,830 --> 00:38:31,890
select go to our hash table they hit

00:38:23,250 --> 00:38:39,180
good hit a capital A yeah they compare

00:38:31,890 --> 00:38:42,660
it right yes so this is the mem compost

00:38:39,180 --> 00:38:43,730
the most expensive thing anyway that

00:38:42,660 --> 00:38:45,840
code

00:38:43,730 --> 00:38:48,990
let's talk afterwards but I just wanted

00:38:45,840 --> 00:38:50,910
to show that right it's possible that

00:38:48,990 --> 00:38:55,260
that's nothing that can be optimized

00:38:50,910 --> 00:38:57,210
maybe but go back in any case what you

00:38:55,260 --> 00:39:01,080
see that with flour because you have

00:38:57,210 --> 00:39:02,790
single rolls and you have the hash does

00:39:01,080 --> 00:39:05,490
help in terms of how fast you can look

00:39:02,790 --> 00:39:09,060
up things but it gets slower and slower

00:39:05,490 --> 00:39:11,390
as you add more rules all right and the

00:39:09,060 --> 00:39:13,860
bottleneck tends to be the hashing it's

00:39:11,390 --> 00:39:17,370
I think it's the hash compare by which

00:39:13,860 --> 00:39:23,010
you can replace right ok so can we do

00:39:17,370 --> 00:39:26,460
another one maybe which one you're gonna

00:39:23,010 --> 00:39:32,070
do next ok ok I can now talk about that

00:39:26,460 --> 00:39:34,910
what do you want oh ok cut proxy pew the

00:39:32,070 --> 00:39:34,910
CPU info

00:39:40,340 --> 00:39:51,870
scroll up maybe yeah yeah okay that

00:39:49,200 --> 00:39:53,430
tells you something we have memory

00:39:51,870 --> 00:39:55,380
bandwidth problems there or what anyway

00:39:53,430 --> 00:39:59,130
we can talk about that after what which

00:39:55,380 --> 00:40:01,860
only gonna run next you 32 okay go with

00:39:59,130 --> 00:40:05,790
you senator what what was the question I

00:40:01,860 --> 00:40:09,300
Lexi you asked me something about oh the

00:40:05,790 --> 00:40:11,210
Intel fee lfb so a little bit of

00:40:09,300 --> 00:40:13,740
challenges because they've wanted me to

00:40:11,210 --> 00:40:16,440
get the ethertype allocated first before

00:40:13,740 --> 00:40:19,170
I push the code and I've been struggling

00:40:16,440 --> 00:40:20,520
you know the the whole thing was

00:40:19,170 --> 00:40:22,680
presented through the ITF so it's a

00:40:20,520 --> 00:40:25,260
standard and therefore the only way I

00:40:22,680 --> 00:40:26,790
can get that I Tripoli number is variety

00:40:25,260 --> 00:40:28,380
of people are trying their feet

00:40:26,790 --> 00:40:30,240
sometimes there's good reasons but

00:40:28,380 --> 00:40:32,070
Sailaja community with a lot of opinions

00:40:30,240 --> 00:40:33,840
didn't we go through the same thing with

00:40:32,070 --> 00:40:35,790
VX LAN or whatever are they UDP

00:40:33,840 --> 00:40:37,530
encapsulated yeah the standard foot

00:40:35,790 --> 00:40:40,020
deport was specified later and then we

00:40:37,530 --> 00:40:43,140
had to add an option to select the port

00:40:40,020 --> 00:40:45,240
number yeah let's try to learn from how

00:40:43,140 --> 00:40:47,220
that went and we tried to avoid that

00:40:45,240 --> 00:40:48,720
it's right in the draft it says clearly

00:40:47,220 --> 00:40:50,910
this is what we're trying to avoid there

00:40:48,720 --> 00:40:53,580
was a mistake when the VX LAN UDP port

00:40:50,910 --> 00:40:55,020
linux selected one then ITF decide it's

00:40:53,580 --> 00:40:56,910
a different one and then you have all

00:40:55,020 --> 00:40:58,560
these challenges after hours because

00:40:56,910 --> 00:41:01,620
some guy built an ASIC that uses a

00:40:58,560 --> 00:41:04,350
different port blah blah blah I think it

00:41:01,620 --> 00:41:15,660
I haven't got very far I've been given

00:41:04,350 --> 00:41:20,640
the OK to submit the patch I'll love you

00:41:15,660 --> 00:41:24,240
if you do this to me you know offline

00:41:20,640 --> 00:41:25,920
discussion offline discussion but so

00:41:24,240 --> 00:41:27,660
that's one option the other option is

00:41:25,920 --> 00:41:29,670
there's a couple of reserved ether types

00:41:27,660 --> 00:41:31,590
that we're gonna make defaults and but

00:41:29,670 --> 00:41:33,240
allow that Minister to change what we

00:41:31,590 --> 00:41:35,730
expect is that this kind of setup works

00:41:33,240 --> 00:41:37,650
only in a spit the administrator owns

00:41:35,730 --> 00:41:40,440
the whole set up let me know when you're

00:41:37,650 --> 00:41:44,420
ready so they should be able to set what

00:41:40,440 --> 00:41:44,420
the ether type is sorry Daniel

00:41:52,000 --> 00:41:58,720
so this is the challenge right I mean no

00:41:54,640 --> 00:42:01,250
Pig is whining about how unusable TC is

00:41:58,720 --> 00:42:02,780
so now what do I do I mean I'm making

00:42:01,250 --> 00:42:04,310
more it's more unusable because you have

00:42:02,780 --> 00:42:08,410
you can space it you can you have to

00:42:04,310 --> 00:42:11,270
specify options like that that's so it's

00:42:08,410 --> 00:42:13,760
yes but should I make that the default

00:42:11,270 --> 00:42:20,030
as opposed to someone wants to override

00:42:13,760 --> 00:42:21,140
the default no it's gonna be net link I

00:42:20,030 --> 00:42:24,470
mean you can change it only through

00:42:21,140 --> 00:42:26,780
Netley I have no idea how CSS works just

00:42:24,470 --> 00:42:33,020
kidding but I never I never do anything

00:42:26,780 --> 00:42:35,690
with Sisyphus all right but anyway let's

00:42:33,020 --> 00:42:38,750
talk offline I'm open to ideas before I

00:42:35,690 --> 00:42:38,960
submit the patches when yeah okay go

00:42:38,750 --> 00:42:41,930
ahead

00:42:38,960 --> 00:42:45,310
so which one now you're 32 before you do

00:42:41,930 --> 00:42:45,310
that can you show what you're installing

00:42:45,700 --> 00:42:54,650
okay so single rule okay you can see how

00:42:51,890 --> 00:42:59,180
tricky you 32 is the numbers at the top

00:42:54,650 --> 00:43:00,920
which says FH 800 : 800 and then they

00:42:59,180 --> 00:43:04,490
somehow translated into English again

00:43:00,920 --> 00:43:07,490
order 2048 which is hex 800 key hash

00:43:04,490 --> 00:43:09,380
table 800 back it's zero that's the

00:43:07,490 --> 00:43:11,600
thing I was showing on my slide how you

00:43:09,380 --> 00:43:13,760
how you actually identify which rule it

00:43:11,600 --> 00:43:16,040
is it should rule as the 32-bit ID and

00:43:13,760 --> 00:43:18,290
that's the ID and the bottom it shows

00:43:16,040 --> 00:43:20,720
you the match what too much phone at

00:43:18,290 --> 00:43:22,610
what offset so this is an IP header this

00:43:20,720 --> 00:43:25,250
is much at offset 12 which happens to be

00:43:22,610 --> 00:43:27,890
source IP and when it matches I wanted

00:43:25,250 --> 00:43:29,330
to execute the action to drop and the

00:43:27,890 --> 00:43:31,010
bottom the statistics that's why I was

00:43:29,330 --> 00:43:33,020
asking for stats to be on by default

00:43:31,010 --> 00:43:34,220
unless I say no all right so you see the

00:43:33,020 --> 00:43:40,010
stats it says how many Oh drop dead

00:43:34,220 --> 00:43:45,680
cetera et cetera okay go for it all

00:43:40,010 --> 00:43:52,600
right so you 32 classifies the hardest

00:43:45,680 --> 00:43:52,600
hit well can you restart maybe just

00:43:54,430 --> 00:44:03,710
okay all right so if you go into well I

00:44:00,320 --> 00:44:05,180
guess it's Nate I if receive um that's

00:44:03,710 --> 00:44:09,650
great the classifier is cheaper than the

00:44:05,180 --> 00:44:12,260
core code right okay so you can stop I

00:44:09,650 --> 00:44:13,730
think we can move to BPF and when you

00:44:12,260 --> 00:44:15,500
installed it the Guru's are all here so

00:44:13,730 --> 00:44:21,530
if we're screwing something up they can

00:44:15,500 --> 00:44:24,290
tell us so for BPF what we ended up

00:44:21,530 --> 00:44:26,330
using was I generally mailed you some I

00:44:24,290 --> 00:44:28,340
think you give me some small piece of C

00:44:26,330 --> 00:44:31,910
of code that generates PPF byte code

00:44:28,340 --> 00:44:33,350
that I can attach right but then I found

00:44:31,910 --> 00:44:36,440
some guy so I thought I'd give him some

00:44:33,350 --> 00:44:39,560
credit that had written this to generate

00:44:36,440 --> 00:44:43,210
the code basically it's the same half

00:44:39,560 --> 00:44:45,500
page of C code right

00:44:43,210 --> 00:44:48,620
when you're ready maybe we need to

00:44:45,500 --> 00:44:51,020
display that right so with the patch is

00:44:48,620 --> 00:44:53,270
coming if not by the end of this

00:44:51,020 --> 00:44:56,930
conference by next week sometime I'll be

00:44:53,270 --> 00:44:58,640
pushing that act AFE all right how big

00:44:56,930 --> 00:45:02,330
is that flower object that's being mem

00:44:58,640 --> 00:45:06,980
comped it's a big key right yes 64-bits

00:45:02,330 --> 00:45:09,050
key your 64-bits keys so is just do

00:45:06,980 --> 00:45:12,230
earth maybe that should be it compares

00:45:09,050 --> 00:45:14,450
yeah to you 32 or do unsigned long

00:45:12,230 --> 00:45:18,110
compares I think that's what he's doing

00:45:14,450 --> 00:45:19,760
that yeah right

00:45:18,110 --> 00:45:22,160
because that's what we do in the flow

00:45:19,760 --> 00:45:26,540
cash we just have a loop of you 32

00:45:22,160 --> 00:45:28,760
compare whatever so again the numbers

00:45:26,540 --> 00:45:31,940
you see for 4-perf are just a little

00:45:28,760 --> 00:45:34,190
unreasonable sorry for because you have

00:45:31,940 --> 00:45:38,560
to regenerate every time the whole flow

00:45:34,190 --> 00:45:41,240
cash where's the best use case for for

00:45:38,560 --> 00:45:44,000
flower is you know the cash has already

00:45:41,240 --> 00:45:45,710
been built for you he's cheap right so

00:45:44,000 --> 00:45:48,800
it's gonna be extremely fast in the

00:45:45,710 --> 00:45:50,030
general case and as long as so you're

00:45:48,800 --> 00:45:52,970
missing a few keys right now like

00:45:50,030 --> 00:45:57,950
villain IDs or in Peleus levels those

00:45:52,970 --> 00:46:00,230
should be trivial to add ready

00:45:57,950 --> 00:46:07,400
okay so he's typing all these things by

00:46:00,230 --> 00:46:08,930
hand so so that's that's the other

00:46:07,400 --> 00:46:11,150
question is that if we were to do this

00:46:08,930 --> 00:46:12,500
but I have a question for you so this is

00:46:11,150 --> 00:46:15,200
a discussion as having with Thomas at

00:46:12,500 --> 00:46:18,290
one break one of the challenges we're

00:46:15,200 --> 00:46:20,900
facing with BPF is people say I think

00:46:18,290 --> 00:46:22,609
Daniel you say that as well once I have

00:46:20,900 --> 00:46:26,180
they don't want to turn on the BPF

00:46:22,609 --> 00:46:28,940
system call right for they turn off

00:46:26,180 --> 00:46:31,849
totally they disabled the BPF system

00:46:28,940 --> 00:46:39,980
call there's some paranoid people who do

00:46:31,849 --> 00:46:45,369
that it's different it's different what

00:46:39,980 --> 00:46:48,109
what I mean is is it possible I to sign

00:46:45,369 --> 00:46:51,070
the little programs and I pushed through

00:46:48,109 --> 00:46:54,470
BPF system call and have them verified

00:46:51,070 --> 00:46:57,410
just named us modules the same reason we

00:46:54,470 --> 00:47:00,500
sign modules right I think that we will

00:46:57,410 --> 00:47:14,990
make my problem go away to use PPF

00:47:00,500 --> 00:47:22,730
people yes

00:47:14,990 --> 00:47:24,589
okay new case what what scenario you're

00:47:22,730 --> 00:47:30,250
facing some security people who are

00:47:24,589 --> 00:47:35,000
unhappy about this I think yes a little

00:47:30,250 --> 00:47:36,200
but you got to listen to them you just

00:47:35,000 --> 00:47:37,819
tell these people if you want this

00:47:36,200 --> 00:47:40,400
powerful framework we're working on it

00:47:37,819 --> 00:47:42,819
does arbitrarily programmable networking

00:47:40,400 --> 00:47:46,130
switches then they can't use it unless

00:47:42,819 --> 00:47:49,910
but think about what I said alright so

00:47:46,130 --> 00:47:52,190
there's your BPF yeah that's the guy he

00:47:49,910 --> 00:47:54,680
wrote this program called pick up see he

00:47:52,190 --> 00:47:56,720
made it available on the internet so you

00:47:54,680 --> 00:47:58,790
just run that and it you know the object

00:47:56,720 --> 00:48:02,359
code for you and so the way Lucas runs

00:47:58,790 --> 00:48:05,390
it is it dumps that and then he patchy

00:48:02,359 --> 00:48:07,609
cuts and pastes that alright so now

00:48:05,390 --> 00:48:09,230
we're gonna write Canadian I don't know

00:48:07,609 --> 00:48:11,240
if you can tell from just looking at the

00:48:09,230 --> 00:48:17,210
opcodes there if that's an optimal

00:48:11,240 --> 00:48:20,360
not but so again from a usability

00:48:17,210 --> 00:48:25,100
perspective there you go you can see the

00:48:20,360 --> 00:48:32,270
difference in usability flour u-32 okay

00:48:25,100 --> 00:48:33,470
go for it have you tested it there you

00:48:32,270 --> 00:48:37,540
can start it and then what's that path

00:48:33,470 --> 00:48:39,080
after that we we don't have you started

00:48:37,540 --> 00:48:42,430
all right there you go

00:48:39,080 --> 00:48:42,430
you wanted to know what was hitting

00:48:43,840 --> 00:48:46,640
there what oh it did you compile

00:48:46,369 --> 00:48:48,320
it

00:48:46,640 --> 00:48:50,510
oh yeah okay good good good just turn

00:48:48,320 --> 00:48:52,850
off yeah see yeah yeah you know we're

00:48:50,510 --> 00:48:55,340
gonna catch something but yeah we did

00:48:52,850 --> 00:48:56,570
run both beef and without and those

00:48:55,340 --> 00:48:59,300
numbers you saw eventually we decided

00:48:56,570 --> 00:49:01,100
beef with just-in-time compilers always

00:48:59,300 --> 00:49:03,380
faster so we stopped testing without

00:49:01,100 --> 00:49:07,430
just in time so the numbers are showing

00:49:03,380 --> 00:49:09,980
are with just-in-time compilers you

00:49:07,430 --> 00:49:11,960
thought you are still faster so this is

00:49:09,980 --> 00:49:13,790
a challenge for you my friend so I'm

00:49:11,960 --> 00:49:17,930
here for the rest of the week we have

00:49:13,790 --> 00:49:19,700
that set up try to beat you 32 alex is

00:49:17,930 --> 00:49:22,910
just giving me this look it's a

00:49:19,700 --> 00:49:25,250
challenge for you well you thought too

00:49:22,910 --> 00:49:26,210
is faster that's all so with the JIT can

00:49:25,250 --> 00:49:37,790
you assure them that you're actually

00:49:26,210 --> 00:49:40,280
doing get how do you know it off ok can

00:49:37,790 --> 00:49:47,570
you demonstrate that you are doing 50

00:49:40,280 --> 00:49:49,660
itself well just request it and display

00:49:47,570 --> 00:49:49,660
it

00:49:55,820 --> 00:50:02,790
yeah yeah yes so sorry where is it okay

00:49:59,550 --> 00:50:08,670
there it is is that is there anything

00:50:02,790 --> 00:50:10,260
other one you want okay so you have to

00:50:08,670 --> 00:50:12,780
read elite and add it again yeah because

00:50:10,260 --> 00:50:19,680
it's already ok decisions all right

00:50:12,780 --> 00:50:21,960
so do that please all right so anything

00:50:19,680 --> 00:50:23,340
I'm hoping that we can if there's

00:50:21,960 --> 00:50:27,300
something we can do that will make it

00:50:23,340 --> 00:50:30,000
look so I should I should make a point

00:50:27,300 --> 00:50:31,890
that with EBP if I expect those numbers

00:50:30,000 --> 00:50:33,000
I showed would be very different right

00:50:31,890 --> 00:50:53,340
because you can build your own

00:50:33,000 --> 00:50:55,730
classification ah there you go so we

00:50:53,340 --> 00:50:58,170
will we willing to try that this week

00:50:55,730 --> 00:51:00,240
let's give it a shot and see if it's the

00:50:58,170 --> 00:51:03,480
numbers get better but I have to say I'm

00:51:00,240 --> 00:51:04,860
impressed by the numbers I was good I

00:51:03,480 --> 00:51:08,660
thought you are not going to hit those

00:51:04,860 --> 00:51:08,660
kind of numbers but kudos

00:51:34,229 --> 00:51:40,529
okay so so the OP code that was

00:51:37,089 --> 00:51:40,529
generated may not be the most optimum

00:51:44,249 --> 00:51:50,559
scroll down to highlight SK Lord what

00:51:47,140 --> 00:51:55,539
positive yeah yeah go down

00:51:50,559 --> 00:52:09,939
no one up to SK and let's go Lord that

00:51:55,539 --> 00:52:11,709
one one up yeah right okay okay so we

00:52:09,939 --> 00:52:14,319
could take this offline this is the kind

00:52:11,709 --> 00:52:17,469
of feedback I was hoping to get right so

00:52:14,319 --> 00:52:18,819
the JIT so the numbers we showed to the

00:52:17,469 --> 00:52:21,249
in today's presentation towards the end

00:52:18,819 --> 00:52:23,799
those are with BP FG it as configured

00:52:21,249 --> 00:52:31,539
just now without BP f get they were long

00:52:23,799 --> 00:52:32,769
right okay that that we can try we can

00:52:31,539 --> 00:52:39,910
try I don't think she'd take more than

00:52:32,769 --> 00:52:41,439
30 minutes to I don't know what so you

00:52:39,910 --> 00:52:47,469
need to generate the opcode for it and

00:52:41,439 --> 00:52:49,439
all that but so they thing is this is we

00:52:47,469 --> 00:52:53,170
did not see much of a difference between

00:52:49,439 --> 00:52:54,969
the action doing the drop or IP receive

00:52:53,170 --> 00:52:58,059
doing the drop that's why I did not see

00:52:54,969 --> 00:53:01,829
I did not think it was gonna be a huge

00:52:58,059 --> 00:53:04,829
weight huh okay we got five minutes

00:53:01,829 --> 00:53:04,829
yeah

00:53:11,550 --> 00:53:17,740
okay let's try it sometime

00:53:14,020 --> 00:53:19,090
we have the machine and we can and if

00:53:17,740 --> 00:53:20,980
you have something that we can use for

00:53:19,090 --> 00:53:23,260
eb PF to replace you 32 as a lookup

00:53:20,980 --> 00:53:27,880
algorithm for when we have 64,000 rules

00:53:23,260 --> 00:53:29,920
for example so do you have a program we

00:53:27,880 --> 00:53:35,110
can run because we'll publish those

00:53:29,920 --> 00:53:36,490
results if he okay so we can just

00:53:35,110 --> 00:53:39,780
directly use that and it should work

00:53:36,490 --> 00:53:41,830
okay if you say so

00:53:39,780 --> 00:53:43,120
thomas has a question you have to use

00:53:41,830 --> 00:53:58,750
the Mike or I have to repeat your

00:53:43,120 --> 00:54:01,870
question yes no it's not but it's the

00:53:58,750 --> 00:54:04,300
simplest isn't the paper right we have

00:54:01,870 --> 00:54:05,800
64,000 floors marching on five tuples I

00:54:04,300 --> 00:54:09,460
think that's more realistic than a

00:54:05,800 --> 00:54:11,560
single one that matches one two no this

00:54:09,460 --> 00:54:14,140
one is very easy as I was showing it

00:54:11,560 --> 00:54:16,560
because even this we see distinctions I

00:54:14,140 --> 00:54:19,260
I think even though this is unrealistic

00:54:16,560 --> 00:54:22,540
it would be kind of cool if we put this

00:54:19,260 --> 00:54:24,640
framework these examples you're coming

00:54:22,540 --> 00:54:28,360
up with in under Colonel testing oh cool

00:54:24,640 --> 00:54:32,650
Lukas you finally get to be famous my

00:54:28,360 --> 00:54:35,470
friend so yeah I mean cuz because we are

00:54:32,650 --> 00:54:36,790
have a dearth of automated networking

00:54:35,470 --> 00:54:38,830
tests under there and if we had

00:54:36,790 --> 00:54:40,510
something like this that's practically

00:54:38,830 --> 00:54:44,230
yeah I think has been trying to get

00:54:40,510 --> 00:54:47,470
tests for TC in general and and actually

00:54:44,230 --> 00:54:50,170
BPF is the lone example of that we have

00:54:47,470 --> 00:54:54,880
extensive testing very very cool so

00:54:50,170 --> 00:54:58,680
alright alright anybody else with that

00:54:54,880 --> 00:54:58,680

YouTube URL: https://www.youtube.com/watch?v=M6l1rxZCqLM


