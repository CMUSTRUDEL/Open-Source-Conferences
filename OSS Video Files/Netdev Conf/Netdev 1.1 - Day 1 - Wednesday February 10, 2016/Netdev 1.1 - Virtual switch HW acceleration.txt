Title: Netdev 1.1 - Virtual switch HW acceleration
Publication date: 2016-03-10
Playlist: Netdev 1.1 - Day 1 - Wednesday February 10, 2016
Description: 
	Rony Efraim
February 2016
Captions: 
	00:00:00,000 --> 00:00:04,710
as I said my name is Ronnie frame

00:00:02,159 --> 00:00:07,700
mellanox and we want to talk about the

00:00:04,710 --> 00:00:10,800
veal chops which a other acceleration I

00:00:07,700 --> 00:00:14,130
would come to the slide first I want to

00:00:10,800 --> 00:00:18,420
talk what is a V switch and we have many

00:00:14,130 --> 00:00:23,039
with whew whew with Beltran switches in

00:00:18,420 --> 00:00:26,490
Linux we all familiar with the Linux

00:00:23,039 --> 00:00:29,189
bridge the old one and the good one and

00:00:26,490 --> 00:00:31,830
currently the new one the new kid in the

00:00:29,189 --> 00:00:33,780
block is the open with which that is the

00:00:31,830 --> 00:00:37,860
difference between between them it's

00:00:33,780 --> 00:00:42,570
that obvious is a flow base and we also

00:00:37,860 --> 00:00:46,800
have a mock villain one that is a kind

00:00:42,570 --> 00:00:48,530
of a switch but he's done to learning

00:00:46,800 --> 00:00:51,410
with that something the men different

00:00:48,530 --> 00:00:54,420
but all of them are virtual switches and

00:00:51,410 --> 00:00:59,219
we want to offer them to upload all of

00:00:54,420 --> 00:01:02,309
them to the hardware that's possible so

00:00:59,219 --> 00:01:06,680
i just want to remind you what modern

00:01:02,309 --> 00:01:09,830
nick capabilities are so we can classify

00:01:06,680 --> 00:01:12,930
any layer 2 layer 3 and later for

00:01:09,830 --> 00:01:15,570
tunneling and also the inner headers in

00:01:12,930 --> 00:01:20,159
the tunneling usually almost all them

00:01:15,570 --> 00:01:23,310
uniques can do it and we can do action

00:01:20,159 --> 00:01:26,009
like with those classification need to

00:01:23,310 --> 00:01:27,780
drop packets so we can drop them in the

00:01:26,009 --> 00:01:31,470
hardware you don't need to for them to

00:01:27,780 --> 00:01:34,470
the CPU in order to draw pockets oh and

00:01:31,470 --> 00:01:36,140
we can also mark them after the

00:01:34,470 --> 00:01:39,900
classification we can mark them with a

00:01:36,140 --> 00:01:42,090
with a flow ID you know that's you don't

00:01:39,900 --> 00:01:45,750
need to do the classification

00:01:42,090 --> 00:01:48,299
ossification in the software and we

00:01:45,750 --> 00:01:51,450
support all the nicks support multi q

00:01:48,299 --> 00:01:53,399
and when I say multi cubes not more than

00:01:51,450 --> 00:01:56,460
one hundreds even thousands even a

00:01:53,399 --> 00:02:00,540
million cues we can use in the in the

00:01:56,460 --> 00:02:01,860
nick of course for every cue we can do a

00:02:00,540 --> 00:02:08,270
rate-limiting with

00:02:01,860 --> 00:02:10,920
newer been doing a scheduling like

00:02:08,270 --> 00:02:12,900
weighted where we did run Robin between

00:02:10,920 --> 00:02:18,660
them and give a different waited for

00:02:12,900 --> 00:02:22,310
each of each of them the modern eggs

00:02:18,660 --> 00:02:24,960
also support the SRV which is totally

00:02:22,310 --> 00:02:28,350
embedded switch that all the switch

00:02:24,960 --> 00:02:30,990
pipeline can be done in the hardware we

00:02:28,350 --> 00:02:35,190
also support other things like RDMA and

00:02:30,990 --> 00:02:37,530
even a packet pacing for each GQ and

00:02:35,190 --> 00:02:39,330
many of those things are like a switch

00:02:37,530 --> 00:02:41,940
so want to take them into the hardware

00:02:39,330 --> 00:02:49,620
and to help accelerate in a virtual

00:02:41,940 --> 00:02:52,080
switch so I will go ahead quickly to

00:02:49,620 --> 00:02:55,530
remind you what is typically packet

00:02:52,080 --> 00:02:59,270
processing of a pipeline of a switch so

00:02:55,530 --> 00:03:02,250
packet processing is start with a

00:02:59,270 --> 00:03:04,310
parsing so you need to parse a pocket in

00:03:02,250 --> 00:03:08,540
order to get the fields and classify the

00:03:04,310 --> 00:03:11,130
classified in order to look a bit and

00:03:08,540 --> 00:03:14,519
then usually you push a popular at the

00:03:11,130 --> 00:03:16,680
villain header if it's a week if it's a

00:03:14,519 --> 00:03:21,150
tunneling so you need to ink up or

00:03:16,680 --> 00:03:24,620
decouple the a villa sorry the tunnel

00:03:21,150 --> 00:03:28,250
header and you also need to do some

00:03:24,620 --> 00:03:31,590
quality of service things like shaping

00:03:28,250 --> 00:03:35,400
marking and scheduling it or not so

00:03:31,590 --> 00:03:37,260
metering and at the end we need to do

00:03:35,400 --> 00:03:39,530
the switching to the to the external to

00:03:37,260 --> 00:03:44,400
the to the interface that you want to

00:03:39,530 --> 00:03:46,610
switch into and those all of those

00:03:44,400 --> 00:03:50,070
things can be done also in the hardware

00:03:46,610 --> 00:03:52,320
using their modern Nix so we want to try

00:03:50,070 --> 00:03:54,290
to offload most of the air as much as

00:03:52,320 --> 00:03:57,900
possible into the hardware and not to

00:03:54,290 --> 00:04:00,959
intellect to detect them to take them to

00:03:57,900 --> 00:04:05,120
the hardware in order to relieve the cpu

00:04:00,959 --> 00:04:05,120
to do add up the other things

00:04:07,350 --> 00:04:15,250
so we can support many classification

00:04:11,740 --> 00:04:18,370
and so we can classify about any hell to

00:04:15,250 --> 00:04:22,600
feel like source mark team of villains

00:04:18,370 --> 00:04:26,200
we can classify layer two of stars I

00:04:22,600 --> 00:04:31,360
pdi-p have protocol and those kind of

00:04:26,200 --> 00:04:33,640
thing we can support l4 if it's a source

00:04:31,360 --> 00:04:36,850
of destination port and even the flags

00:04:33,640 --> 00:04:41,580
of TCP hey all of them layer 3 can be

00:04:36,850 --> 00:04:43,690
also ipv6 it's also work and also

00:04:41,580 --> 00:04:45,610
classification about the tunneling if

00:04:43,690 --> 00:04:48,040
it's what is the vin I or those kind of

00:04:45,610 --> 00:04:51,570
things and even to have a classification

00:04:48,040 --> 00:04:55,600
of 12 top like Eau de la three layer 4

00:04:51,570 --> 00:05:00,100
in on the inner header so it's like 24

00:04:55,600 --> 00:05:01,720
tapa so it's very pretty more of the

00:05:00,100 --> 00:05:05,680
things that then you want to classify on

00:05:01,720 --> 00:05:08,260
a pocket he'll therefore and the action

00:05:05,680 --> 00:05:14,410
that say can be done it's of course can

00:05:08,260 --> 00:05:18,430
we drop the packet or allow a flow hey I

00:05:14,410 --> 00:05:22,020
marked the flow with a flow ID accounted

00:05:18,430 --> 00:05:25,180
for thee to a specific ring or a queue

00:05:22,020 --> 00:05:34,240
and push a pop of villain over in cup of

00:05:25,180 --> 00:05:39,220
dig up the tunnel ladder think last week

00:05:34,240 --> 00:05:41,919
we submit it in RFC by amir vadai how to

00:05:39,220 --> 00:05:47,070
use TC filter in order to upload it to

00:05:41,919 --> 00:05:52,330
the hardware m anyone saw those patches

00:05:47,070 --> 00:05:55,600
who so Ameer is not with a mere not here

00:05:52,330 --> 00:06:01,120
but I'm stick on behalf of him so the

00:05:55,600 --> 00:06:05,620
idea was to allow to to heaven he grows

00:06:01,120 --> 00:06:09,750
classifier and for example to drop an

00:06:05,620 --> 00:06:16,030
ICMP packets so you need to use a TC and

00:06:09,750 --> 00:06:18,099
to have a the protocol ok so we using

00:06:16,030 --> 00:06:22,490
the flow plot their flower pacify

00:06:18,099 --> 00:06:25,400
and we can also use a you 32 it's I

00:06:22,490 --> 00:06:29,000
think we think that say the flower

00:06:25,400 --> 00:06:32,030
classifieds more user-friendly and also

00:06:29,000 --> 00:06:34,009
for the hardware user friendly and so

00:06:32,030 --> 00:06:37,969
that's the reason we go with the flower

00:06:34,009 --> 00:06:41,060
classifier and we can like in this

00:06:37,969 --> 00:06:46,009
example and we classify the IP protocol

00:06:41,060 --> 00:06:50,479
a ICMP the IP protocol number one and we

00:06:46,009 --> 00:06:52,159
do action hey to drop it and then last

00:06:50,479 --> 00:06:54,889
line before the last the last one they

00:06:52,159 --> 00:06:58,219
hit the offload means that say take it

00:06:54,889 --> 00:07:01,069
to the hardware so the classification

00:06:58,219 --> 00:07:03,050
and the action to drop the packets is

00:07:01,069 --> 00:07:07,639
done in the harder and those pockets

00:07:03,050 --> 00:07:10,129
won't want trouble the CPU so tamil use

00:07:07,639 --> 00:07:13,009
you in your presentation you saw us how

00:07:10,129 --> 00:07:16,550
many pockets you can drop in the CPU so

00:07:13,009 --> 00:07:20,240
I think it's not a problem to drop a 10

00:07:16,550 --> 00:07:26,690
million packets per second so it's okay

00:07:20,240 --> 00:07:29,120
even more okay so and this is the only

00:07:26,690 --> 00:07:32,449
drug test the example for dropping a

00:07:29,120 --> 00:07:34,520
pocket I think and I things also it's

00:07:32,449 --> 00:07:38,150
say to offer the classification of the

00:07:34,520 --> 00:07:41,719
pockets so what we see this in this

00:07:38,150 --> 00:07:46,940
example so we classify the pockets here

00:07:41,719 --> 00:07:50,509
we classify for a TCP packets and also

00:07:46,940 --> 00:07:52,339
the action is to upload it sorry there

00:07:50,509 --> 00:07:54,800
we offered it to the Hadron and the

00:07:52,339 --> 00:07:57,740
action is to do st be headed to this

00:07:54,800 --> 00:07:59,839
packet and to mark this pocket for the

00:07:57,740 --> 00:08:02,419
specific flow so it's mean every packet

00:07:59,839 --> 00:08:06,169
that's come from the neck that's match

00:08:02,419 --> 00:08:09,199
this classifying we come with a with a

00:08:06,169 --> 00:08:13,580
cookie and the cookie will be in the skb

00:08:09,199 --> 00:08:17,659
mark and for in this example we put a

00:08:13,580 --> 00:08:19,879
one two three four so the next layer can

00:08:17,659 --> 00:08:21,500
do everything without classifying the

00:08:19,879 --> 00:08:23,690
pocket so we don't need to reclassify

00:08:21,500 --> 00:08:27,529
the packets you don't need to go to the

00:08:23,690 --> 00:08:29,100
air to decay to them to the path to the

00:08:27,529 --> 00:08:31,740
pocket you'll save to the memory

00:08:29,100 --> 00:08:33,599
buffer so you can have you can continue

00:08:31,740 --> 00:08:38,070
to do the things without classifying

00:08:33,599 --> 00:08:41,010
without touching the data it can resolve

00:08:38,070 --> 00:08:47,340
the cache miss and although the same

00:08:41,010 --> 00:08:49,400
things and also here we have an example

00:08:47,340 --> 00:08:52,410
what we're doing with the one with this

00:08:49,400 --> 00:08:55,650
SQ beheaded so here we use it in the

00:08:52,410 --> 00:08:57,770
software classifier to do a method to

00:08:55,650 --> 00:09:04,620
count how many packets was with this

00:08:57,770 --> 00:09:07,140
with on this type of traffic so we're

00:09:04,620 --> 00:09:09,180
classifying about pockets with marked

00:09:07,140 --> 00:09:11,940
with one two three four and the action

00:09:09,180 --> 00:09:21,360
is to pass another just to come to just

00:09:11,940 --> 00:09:23,190
become them of course they use case that

00:09:21,360 --> 00:09:26,910
we want to use it's not to count the

00:09:23,190 --> 00:09:29,430
packets it's more than a to do an

00:09:26,910 --> 00:09:33,570
offload for a switch and I think the

00:09:29,430 --> 00:09:36,540
most one that will gain from it will be

00:09:33,570 --> 00:09:40,380
the open V switch with classifying for

00:09:36,540 --> 00:09:44,790
many many fields and you can gain a lot

00:09:40,380 --> 00:09:47,040
of performance and in order to do it i

00:09:44,790 --> 00:09:50,970
think that is my opinion that i think

00:09:47,040 --> 00:09:53,340
can work good with open base which is to

00:09:50,970 --> 00:09:57,120
use the teeth so if flights let's have

00:09:53,340 --> 00:10:02,550
an example like obvious one to do an

00:09:57,120 --> 00:10:06,570
action why for a specific flow x so what

00:10:02,550 --> 00:10:09,120
is you he will use a TC to offload to

00:10:06,570 --> 00:10:12,600
mark pockets with one two three four

00:10:09,120 --> 00:10:16,710
every flow eggs with them to mark them

00:10:12,600 --> 00:10:19,020
with an ID which is generating and then

00:10:16,710 --> 00:10:20,610
in the data path of the obvious he don't

00:10:19,020 --> 00:10:22,560
need to reclassify the packet just need

00:10:20,610 --> 00:10:25,700
to loop on the skb mark and if there is

00:10:22,560 --> 00:10:31,170
to be mark give us this ID you can just

00:10:25,700 --> 00:10:37,320
to the action that's a have this a ID so

00:10:31,170 --> 00:10:38,910
it's can result can eat you don't need

00:10:37,320 --> 00:10:41,100
to do all the classification i think

00:10:38,910 --> 00:10:41,699
most of if you need to classify about

00:10:41,100 --> 00:10:45,569
when

00:10:41,699 --> 00:10:47,009
full doubled like an inner pockets of a

00:10:45,569 --> 00:10:53,910
vehicle on or something like that you

00:10:47,009 --> 00:10:56,519
can resolve a lot of cpu and i think

00:10:53,910 --> 00:10:58,919
that's that's a nice thing and of course

00:10:56,519 --> 00:11:04,859
you can if the action is to drop it's

00:10:58,919 --> 00:11:08,429
much easier just the ed and TC action to

00:11:04,859 --> 00:11:10,410
drop this packet but obvious using an

00:11:08,429 --> 00:11:12,149
aging mechanism so we ought to need to

00:11:10,410 --> 00:11:15,809
count those pocket how many pockets we

00:11:12,149 --> 00:11:17,489
are dropping so we can use a hardware to

00:11:15,809 --> 00:11:19,889
harder also to count how many pockets it

00:11:17,489 --> 00:11:23,160
dropped and in order to maintain the

00:11:19,889 --> 00:11:34,439
aging of this rule that's obvious won't

00:11:23,160 --> 00:11:38,790
edge it ok this is more thing that's on

00:11:34,439 --> 00:11:42,509
the ideas and not in an RFC code that we

00:11:38,790 --> 00:11:45,720
are publishing its how to egress an

00:11:42,509 --> 00:11:48,480
egress qos like rate-limiting and better

00:11:45,720 --> 00:11:53,999
guarantee for each VM or a virtual or

00:11:48,480 --> 00:11:56,910
its virtual port of a switch so we start

00:11:53,999 --> 00:12:04,289
to form the egress so we would like to

00:11:56,910 --> 00:12:06,569
egress to purr purr vmware a port that

00:12:04,289 --> 00:12:09,779
come to the speak to the virtual switch

00:12:06,569 --> 00:12:13,319
and we want to do it on the external

00:12:09,779 --> 00:12:16,160
port so first what we need to do we need

00:12:13,319 --> 00:12:19,739
to classify those pocket into queues and

00:12:16,160 --> 00:12:21,959
this is done by the software so it's

00:12:19,739 --> 00:12:24,869
very very easy to do it with a mach v

00:12:21,959 --> 00:12:29,399
tub because it's it's specifically queue

00:12:24,869 --> 00:12:32,129
for each offer their mac vita and if

00:12:29,399 --> 00:12:35,429
it's a open-faced reach over linux

00:12:32,129 --> 00:12:38,309
bridge we need to use it TC in order to

00:12:35,429 --> 00:12:44,459
classify them into specific specific you

00:12:38,309 --> 00:12:47,819
and then we come we can use the TC to do

00:12:44,459 --> 00:12:49,589
a rate-limiting in the hardware now not

00:12:47,819 --> 00:12:52,529
to do it in the software to do a

00:12:49,589 --> 00:12:53,190
rate-limiting in the hardware and also

00:12:52,529 --> 00:12:56,750
waited

00:12:53,190 --> 00:12:59,820
to give wait for each queue so we can

00:12:56,750 --> 00:13:06,090
give a different benefit location for

00:12:59,820 --> 00:13:08,850
each VM I think also this awful can can

00:13:06,090 --> 00:13:10,500
solve some things that today you have

00:13:08,850 --> 00:13:15,920
many timers in order to do it in the

00:13:10,500 --> 00:13:18,570
software so this is for the egress and

00:13:15,920 --> 00:13:24,090
of course to the ingress if we want to

00:13:18,570 --> 00:13:28,470
have we can do we can have a classifying

00:13:24,090 --> 00:13:31,260
of course in the hardware and when we do

00:13:28,470 --> 00:13:35,580
the classification and we can have a

00:13:31,260 --> 00:13:38,310
separate bring for each of the edge of a

00:13:35,580 --> 00:13:41,730
kind of traffic if it's a virtual port

00:13:38,310 --> 00:13:44,190
or a sort of a destination mark so we're

00:13:41,730 --> 00:13:46,980
classifying India we using the TC in

00:13:44,190 --> 00:13:50,190
order to to offload this classifier to

00:13:46,980 --> 00:13:53,430
the hardware and then to 42 a specific

00:13:50,190 --> 00:13:59,340
range so we can have a specific ring for

00:13:53,430 --> 00:14:03,060
each for each virtual port currently I

00:13:59,340 --> 00:14:06,150
spoke about rings but each of them each

00:14:03,060 --> 00:14:08,280
of logical Q can be supported like an

00:14:06,150 --> 00:14:10,890
RSS or thesis which not supposed to be

00:14:08,280 --> 00:14:14,670
only a single ring it so it would be a Q

00:14:10,890 --> 00:14:18,840
can be a ring bearer per core or

00:14:14,670 --> 00:14:26,610
something grits we don't need to to

00:14:18,840 --> 00:14:29,160
block the stock I think we try to

00:14:26,610 --> 00:14:33,090
receive from customers are many demand

00:14:29,160 --> 00:14:37,260
for complex environment so we nesting

00:14:33,090 --> 00:14:39,480
virtual switches switches so for some

00:14:37,260 --> 00:14:42,450
example we see that's in the V you have

00:14:39,480 --> 00:14:45,630
multiple vm in each VM you have multiple

00:14:42,450 --> 00:14:50,370
containers so it's like an error key of

00:14:45,630 --> 00:14:53,480
two levels of electric switches and this

00:14:50,370 --> 00:14:58,379
is cost double than the standard

00:14:53,480 --> 00:15:00,869
virtual switch of course and so we have

00:14:58,379 --> 00:15:03,209
three options who how to take it into

00:15:00,869 --> 00:15:06,179
the hardware so we can go directly with

00:15:03,209 --> 00:15:09,569
SRV like a virtual function to each

00:15:06,179 --> 00:15:12,749
container think this is the most most

00:15:09,569 --> 00:15:18,959
harder affect the most harder effective

00:15:12,749 --> 00:15:21,540
way and then we will have to have in the

00:15:18,959 --> 00:15:24,420
hardware two vehicles with two switches

00:15:21,540 --> 00:15:27,449
to embedded switches that's each of them

00:15:24,420 --> 00:15:29,399
managed by one of them is managed by the

00:15:27,449 --> 00:15:34,139
hypervisor when the second one is

00:15:29,399 --> 00:15:37,199
managed by the by the vm and this is can

00:15:34,139 --> 00:15:39,749
done in the hardware and I think more

00:15:37,199 --> 00:15:41,639
something more and the other opposite is

00:15:39,749 --> 00:15:45,089
to use like today to will Tran switches

00:15:41,639 --> 00:15:46,769
like too obvious that is running one in

00:15:45,089 --> 00:15:52,230
the hypervisor and one in the virtual

00:15:46,769 --> 00:15:55,139
machine and and accelerated the first

00:15:52,230 --> 00:15:58,259
one of course I think in the third

00:15:55,139 --> 00:16:02,279
option is to combine them and to use SRV

00:15:58,259 --> 00:16:05,129
for each VM and each VM can run in

00:16:02,279 --> 00:16:08,249
obvious a run a virtual brain in real

00:16:05,129 --> 00:16:10,049
trouble bridge and we can use all the

00:16:08,249 --> 00:16:13,589
acceleration we spoke about before in

00:16:10,049 --> 00:16:15,480
this virtual switch so we can gain a lot

00:16:13,589 --> 00:16:18,259
of things from the harder we can bypass

00:16:15,480 --> 00:16:21,420
we don't need to have any switch any

00:16:18,259 --> 00:16:24,209
virtual switch in the hypervisor and in

00:16:21,420 --> 00:16:27,230
the vm we can get in there accelerating

00:16:24,209 --> 00:16:27,230
virtual switch

00:16:31,690 --> 00:16:37,940
so when we start to work to work on it

00:16:35,029 --> 00:16:41,360
it was obvious for us that is going to

00:16:37,940 --> 00:16:43,160
use a switch them because we talked

00:16:41,360 --> 00:16:47,990
about witches witches witches everything

00:16:43,160 --> 00:16:51,200
was switch and when we even we submitted

00:16:47,990 --> 00:16:52,760
with fair switch them but then someone

00:16:51,200 --> 00:16:56,690
told us a it's not a switch you're

00:16:52,760 --> 00:16:59,420
talking about technique and it's correct

00:16:56,690 --> 00:17:02,930
it's a cynic command it's not switch but

00:16:59,420 --> 00:17:06,490
most but all of them are gay are related

00:17:02,930 --> 00:17:09,079
to how to accelerate it a virtual switch

00:17:06,490 --> 00:17:12,829
we can think about things that will do

00:17:09,079 --> 00:17:16,870
for for switch for not not further

00:17:12,829 --> 00:17:20,480
switch there so we have a debate if it's

00:17:16,870 --> 00:17:25,610
it is supposed to be in ND / or switch

00:17:20,480 --> 00:17:28,390
them but i think another reason that we

00:17:25,610 --> 00:17:31,520
want to be a switch dev because we also

00:17:28,390 --> 00:17:33,559
last time i was talking about how we

00:17:31,520 --> 00:17:35,630
full offload all the air will talk all

00:17:33,559 --> 00:17:39,290
the switch into the hardware when you're

00:17:35,630 --> 00:17:41,900
using an SRV and also there if you want

00:17:39,290 --> 00:17:44,360
to take tech from the user space like

00:17:41,900 --> 00:17:46,250
from obvious or into the hardware what

00:17:44,360 --> 00:17:48,950
they are what the action to do with

00:17:46,250 --> 00:17:52,760
every classification we can use the same

00:17:48,950 --> 00:17:56,600
traffic the same TCAP I that's so before

00:17:52,760 --> 00:17:59,960
and the action will be instead of give

00:17:56,600 --> 00:18:03,290
it give it has to be Eddie tweet just 42

00:17:59,960 --> 00:18:13,059
specific virtual function so the same

00:18:03,290 --> 00:18:15,470
API can be used for a full of hope and I

00:18:13,059 --> 00:18:17,420
think this is really nice because it's a

00:18:15,470 --> 00:18:20,270
single API that can do both of the

00:18:17,420 --> 00:18:24,770
things so i think the api for sure need

00:18:20,270 --> 00:18:26,120
to be a TC API if it's a switch there

00:18:24,770 --> 00:18:27,740
were not switch them in the candidates

00:18:26,120 --> 00:18:30,740
it's more than implementation issue

00:18:27,740 --> 00:18:34,870
that's can be I think we going to cover

00:18:30,740 --> 00:18:34,870
it in one of the booths

00:18:37,090 --> 00:18:40,480
any questions

00:18:44,760 --> 00:18:47,870
of LOM Estonia

00:18:58,540 --> 00:19:05,110
I thank you I had a question about where

00:19:03,340 --> 00:19:06,880
do you count how many drops are done for

00:19:05,110 --> 00:19:09,840
a rule match or can you count those

00:19:06,880 --> 00:19:14,170
drops when you're doing TC rule matches

00:19:09,840 --> 00:19:16,330
and can you see what is specific asking

00:19:14,170 --> 00:19:20,260
when you're dropping packets in the neck

00:19:16,330 --> 00:19:21,670
yep can you count how many you drop yes

00:19:20,260 --> 00:19:25,300
of course that's what I said in the

00:19:21,670 --> 00:19:27,490
example which I so right now what is a

00:19:25,300 --> 00:19:29,800
you see it's counting in the software

00:19:27,490 --> 00:19:31,000
but we can also count in the harder we

00:19:29,800 --> 00:19:33,190
have many counters in the hardware

00:19:31,000 --> 00:19:35,470
that's you can for every flow I can

00:19:33,190 --> 00:19:37,450
counting it so I can count we using is

00:19:35,470 --> 00:19:39,190
also for the full offload that we need

00:19:37,450 --> 00:19:41,440
to count all the pockets what you

00:19:39,190 --> 00:19:43,210
forwarding entendi dropping but of

00:19:41,440 --> 00:19:44,830
course you can every pocket you can drop

00:19:43,210 --> 00:19:47,860
you can have a specific counter for each

00:19:44,830 --> 00:19:49,630
flow so when you set your county land in

00:19:47,860 --> 00:19:51,460
a software it's that means that the

00:19:49,630 --> 00:19:53,890
packets being DNA into the host and

00:19:51,460 --> 00:19:57,490
being handled by the driver no no no the

00:19:53,890 --> 00:19:59,470
example what we sow right now was a

00:19:57,490 --> 00:20:03,820
counting of packets that you don't drop

00:19:59,470 --> 00:20:05,800
that us QB edit them we can count every

00:20:03,820 --> 00:20:07,840
packet in the hardware so if you drop

00:20:05,800 --> 00:20:11,050
the counter you can for this specific

00:20:07,840 --> 00:20:12,400
flow you can add a counter and you have

00:20:11,050 --> 00:20:14,080
a counter for each flow for its

00:20:12,400 --> 00:20:22,870
classification you can have a counter in

00:20:14,080 --> 00:20:24,430
the harbor okay thanks so the reason I

00:20:22,870 --> 00:20:25,630
what I I was when I commented on the

00:20:24,430 --> 00:20:28,390
neck versus French stuff stuff the

00:20:25,630 --> 00:20:30,670
reason why I said neck is because we

00:20:28,390 --> 00:20:32,560
have devices that do not do s ROV at all

00:20:30,670 --> 00:20:35,050
and still want to offload basically put

00:20:32,560 --> 00:20:36,700
a TKO in front of a standard Nick but

00:20:35,050 --> 00:20:38,950
anyways we can talk about that later the

00:20:36,700 --> 00:20:40,480
point I wanted to raise is I was a

00:20:38,950 --> 00:20:44,010
little curious about your OBS offload

00:20:40,480 --> 00:20:47,860
and in that example you're offloading

00:20:44,010 --> 00:20:49,930
the flow classification I think but from

00:20:47,860 --> 00:20:52,270
the exact match table in OBS and not the

00:20:49,930 --> 00:20:55,780
mega flow table it seems like you're

00:20:52,270 --> 00:20:59,710
going to be very underutilized your

00:20:55,780 --> 00:21:01,690
hardware is that what you observed why

00:20:59,710 --> 00:21:04,000
because I think why because those are

00:21:01,690 --> 00:21:05,350
those are low-level exact match right

00:21:04,000 --> 00:21:06,790
which you want to be able to do is get

00:21:05,350 --> 00:21:08,710
things that are highly wild carded and

00:21:06,790 --> 00:21:09,639
into your tea camp or your s for a more

00:21:08,710 --> 00:21:12,009
exact you

00:21:09,639 --> 00:21:14,409
it's the pair of the HUD room yeah yeah

00:21:12,009 --> 00:21:16,929
but most of most of the hardware and I

00:21:14,409 --> 00:21:19,119
believe your hardware is a lot more

00:21:16,929 --> 00:21:22,690
capable than just that exact match table

00:21:19,119 --> 00:21:26,079
in OBS yes but in this case we get all

00:21:22,690 --> 00:21:28,539
the benefit of open V switch yeah but

00:21:26,079 --> 00:21:30,009
that's just because it would be much

00:21:28,539 --> 00:21:32,950
better if you could take the mega flow

00:21:30,009 --> 00:21:34,659
table and OBS which has all of that kind

00:21:32,950 --> 00:21:36,489
of richness that you need and put that

00:21:34,659 --> 00:21:38,950
in the hardware yo so this is taking the

00:21:36,489 --> 00:21:39,969
mega fools it's thick it is well that's

00:21:38,950 --> 00:21:41,529
how I cannot sit down through the

00:21:39,969 --> 00:21:43,589
colonel then so then change you know he

00:21:41,529 --> 00:21:45,849
has to throw the mega flows entities

00:21:43,589 --> 00:21:48,759
what do you think about to take the open

00:21:45,849 --> 00:21:51,669
flow rule and to take all the the

00:21:48,759 --> 00:21:53,529
switching the things that's in the upper

00:21:51,669 --> 00:21:55,779
layer for the open faced ok so you

00:21:53,529 --> 00:21:57,579
modify it ov SS what you're saying yes

00:21:55,779 --> 00:21:58,570
ok all right I just wasn't clear from

00:21:57,579 --> 00:22:03,190
your slides it look like you're taking

00:21:58,570 --> 00:22:06,009
the exact match ok great sorry sorry I'm

00:22:03,190 --> 00:22:12,549
we are recording we need that you take

00:22:06,009 --> 00:22:15,070
for my just an example in this slide to

00:22:12,549 --> 00:22:17,259
make it clearer but you would take you

00:22:15,070 --> 00:22:19,299
attack a mega flow from user space you

00:22:17,259 --> 00:22:21,249
put it into the through the TC into the

00:22:19,299 --> 00:22:24,039
harbor you can mention wild cards and

00:22:21,249 --> 00:22:28,779
then produce this packet mark so it was

00:22:24,039 --> 00:22:33,820
just some example in this line ok jump

00:22:28,779 --> 00:22:35,979
you got it ok guys just one thing um

00:22:33,820 --> 00:22:38,349
this is talk we have limited time and

00:22:35,979 --> 00:22:40,359
we'll have a bowl and we have we have to

00:22:38,349 --> 00:22:42,639
do both scheduled enforce which def so

00:22:40,359 --> 00:22:43,749
after John's will be over okay okay I

00:22:42,639 --> 00:22:45,219
was just gonna say that's fine we can

00:22:43,749 --> 00:22:49,169
talk about it the bluff is all I was

00:22:45,219 --> 00:22:49,169
gonna say yeah thank you thank you

00:22:54,340 --> 00:22:57,460

YouTube URL: https://www.youtube.com/watch?v=ndRChzqTWns


