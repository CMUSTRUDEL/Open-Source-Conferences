Title: Netdev 0x13 - Viscum:  A New Light Weight Architecture of Mobile Edge Computing
Publication date: 2019-05-26
Playlist: Netdev 0x13 - Day 3
Description: 
	In this talk, Jae Won Chung describes Viscum, a light weight approach to MEC.

Multi-access edge computing (MEC) was intended as a network architecture that offers cloud-computing capabilities within the RAN or core network in the cellular world to allow processing of tasks closer to the cellular customer. It has, however, evolved to be generic to apply to any network for deploying applications and services as well as to store and process content in close proximity to mobile users.

Current MEC approaches are too invasive. In this talk, Feng et al propose an alternative light weight mobile edge computing architecture which utilizes existing Linux kernel mechanisms, namely: Traffic Control (TC) utilities, and network Namespaces.

https://netdevconf.org/0x13/session.html?talk-viscum
Captions: 
	00:00:00,030 --> 00:00:09,260
hello this is Jay I'm happy to present

00:00:04,710 --> 00:00:11,790
you know the work of actually a domain

00:00:09,260 --> 00:00:17,010
engineers that should work on this was

00:00:11,790 --> 00:00:18,720
actually Fung and Chiron actually he was

00:00:17,010 --> 00:00:22,320
gonna actually come here and present his

00:00:18,720 --> 00:00:24,029
work but he had an emergency the work so

00:00:22,320 --> 00:00:28,050
he couldn't come so I'm actually in the

00:00:24,029 --> 00:00:30,390
presenting for him okay so today they're

00:00:28,050 --> 00:00:33,510
gonna talk about something called

00:00:30,390 --> 00:00:37,910
biscone a new lightweight no-selfie

00:00:33,510 --> 00:00:43,140
architecture for mobile edge computing

00:00:37,910 --> 00:00:45,450
okay so let's talk about what's mobile

00:00:43,140 --> 00:00:48,539
edge computing is I mean I think we had

00:00:45,450 --> 00:00:52,199
a session about mobile edge computing

00:00:48,539 --> 00:00:54,390
like you know before we're lunch so but

00:00:52,199 --> 00:00:55,590
but it's actually not bad to go over

00:00:54,390 --> 00:00:57,420
again I think so

00:00:55,590 --> 00:01:00,359
so mobile edge computing actually

00:00:57,420 --> 00:01:03,570
started from mobile cloud computing it's

00:01:00,359 --> 00:01:06,540
a fancy word from telecommunication word

00:01:03,570 --> 00:01:08,130
but it's nothing fancy it's just you

00:01:06,540 --> 00:01:09,750
know you're just application is actually

00:01:08,130 --> 00:01:14,880
running in the data centers I mean

00:01:09,750 --> 00:01:16,830
that's basically it so but the pros and

00:01:14,880 --> 00:01:19,439
cons like you know I mean rather than

00:01:16,830 --> 00:01:22,110
just running on the mobile itself you're

00:01:19,439 --> 00:01:24,210
just you know running the application on

00:01:22,110 --> 00:01:26,520
the data center basically that's what it

00:01:24,210 --> 00:01:29,479
mean by mobile cloud computing it

00:01:26,520 --> 00:01:33,840
introduces more you know additional

00:01:29,479 --> 00:01:37,829
network loads on the radio access

00:01:33,840 --> 00:01:40,650
network and increases the delay but

00:01:37,829 --> 00:01:42,689
there are actually no reason to do this

00:01:40,650 --> 00:01:44,759
because you know offloading battery

00:01:42,689 --> 00:01:51,240
power is actually one of the the main

00:01:44,759 --> 00:01:53,549
reasons and security-related was that

00:01:51,240 --> 00:01:57,140
the application was one of the reason to

00:01:53,549 --> 00:01:59,909
actually run in this way especially

00:01:57,140 --> 00:02:01,530
government-related like you know they

00:01:59,909 --> 00:02:03,030
don't want to actually bring around on

00:02:01,530 --> 00:02:05,579
the phone and stuff like that so that

00:02:03,030 --> 00:02:08,310
was another reason and also a

00:02:05,579 --> 00:02:10,530
high-volume storage you know is another

00:02:08,310 --> 00:02:13,560
reason to actually go into this model

00:02:10,530 --> 00:02:15,160
but because of these you know

00:02:13,560 --> 00:02:18,040
disadvantages like you know

00:02:15,160 --> 00:02:21,400
telecommunication word and also the

00:02:18,040 --> 00:02:23,350
advent of like you know highly mobile

00:02:21,400 --> 00:02:27,100
computing with like you know automation

00:02:23,350 --> 00:02:28,900
what is it the auto the self-driving

00:02:27,100 --> 00:02:30,900
cars needs to actually talk to each

00:02:28,900 --> 00:02:35,410
other and and all the delay sensitive

00:02:30,900 --> 00:02:37,420
application is actually coming so there

00:02:35,410 --> 00:02:42,040
is a proposal for the mobile edge

00:02:37,420 --> 00:02:46,750
computing so basically the idea is to

00:02:42,040 --> 00:02:49,989
have our compute actually node close to

00:02:46,750 --> 00:02:53,890
the mobile and by doing that we can

00:02:49,989 --> 00:02:56,410
actually reduce the latency and and also

00:02:53,890 --> 00:02:58,900
we can actually reduce the load on our

00:02:56,410 --> 00:03:03,400
core network I mean the ISPs core

00:02:58,900 --> 00:03:05,230
network which you know from data center

00:03:03,400 --> 00:03:08,380
perspective that might not be a big

00:03:05,230 --> 00:03:09,640
thing but you know that's actually it's

00:03:08,380 --> 00:03:13,620
a it's a it's a quarter

00:03:09,640 --> 00:03:18,220
you know load for the ISPs as well so

00:03:13,620 --> 00:03:21,940
okay so the next slide actually shows

00:03:18,220 --> 00:03:25,510
the the ETSI mobilized computing

00:03:21,940 --> 00:03:26,950
software model I mean obviously this is

00:03:25,510 --> 00:03:31,299
the model that actually came from the

00:03:26,950 --> 00:03:35,079
standard even before we see any

00:03:31,299 --> 00:03:36,970
implementation so but but anyway let's

00:03:35,079 --> 00:03:39,190
actually go over the dis architecture

00:03:36,970 --> 00:03:41,530
first so basically there is edge and

00:03:39,190 --> 00:03:47,200
there is a remote and the remote is

00:03:41,530 --> 00:03:51,430
basically our cloud like you know AWS or

00:03:47,200 --> 00:03:53,709
whatever and then there is a edge and we

00:03:51,430 --> 00:03:58,030
are expecting to split the the

00:03:53,709 --> 00:04:00,730
application into the edge part and the

00:03:58,030 --> 00:04:04,230
cloud part and then you know run the

00:04:00,730 --> 00:04:06,910
whatever that's whatever that needs the

00:04:04,230 --> 00:04:09,910
nice texture on the edge on the you know

00:04:06,910 --> 00:04:12,549
on the edge on top of the map platform

00:04:09,910 --> 00:04:14,530
so called Mac platform so the Mac

00:04:12,549 --> 00:04:17,440
platform is if you actually look at it

00:04:14,530 --> 00:04:21,450
it actually handles the of the traffic

00:04:17,440 --> 00:04:23,919
you know forwarding traffic steering and

00:04:21,450 --> 00:04:25,320
basically horizontal scaling but it

00:04:23,919 --> 00:04:28,200
needs to actually do

00:04:25,320 --> 00:04:31,490
load balancing and then it needs to

00:04:28,200 --> 00:04:34,670
support some sort of virtualization

00:04:31,490 --> 00:04:37,260
technology to actually run the software

00:04:34,670 --> 00:04:39,000
application and we need you know

00:04:37,260 --> 00:04:43,940
software management serve service

00:04:39,000 --> 00:04:48,650
management so so basically it is a small

00:04:43,940 --> 00:04:55,620
data center we need such a run nearby

00:04:48,650 --> 00:04:58,230
nearby the mobile devices however if you

00:04:55,620 --> 00:05:00,180
look at this model like you know do you

00:04:58,230 --> 00:05:04,320
really think this model is gonna work I

00:05:00,180 --> 00:05:06,540
mean you know I'm from the ISP

00:05:04,320 --> 00:05:09,450
background but I'm actually having a

00:05:06,540 --> 00:05:11,580
question here because if you say oh you

00:05:09,450 --> 00:05:14,580
have to split the in our application and

00:05:11,580 --> 00:05:16,980
then run some in the Mac and some in the

00:05:14,580 --> 00:05:17,190
you know cloud I mean who's gonna do

00:05:16,980 --> 00:05:19,320
that

00:05:17,190 --> 00:05:21,990
I mean it needs us extra development

00:05:19,320 --> 00:05:24,240
network so unless there is a really good

00:05:21,990 --> 00:05:27,360
reason to do that I mean probably it's

00:05:24,240 --> 00:05:29,520
not gonna work and then also how to

00:05:27,360 --> 00:05:31,830
actually balance between like you know

00:05:29,520 --> 00:05:33,390
software what portion will actually run

00:05:31,830 --> 00:05:35,310
on the edge and what portion will run

00:05:33,390 --> 00:05:38,550
the data center it's actually tough

00:05:35,310 --> 00:05:41,280
decision to make and then also it's a

00:05:38,550 --> 00:05:43,920
different management so data you know

00:05:41,280 --> 00:05:46,470
running on the data center will be under

00:05:43,920 --> 00:05:49,020
different like you know cloud and then

00:05:46,470 --> 00:05:51,210
if running some software pieces that

00:05:49,020 --> 00:05:54,870
actually around the edge it's going to

00:05:51,210 --> 00:05:57,150
be on let's say some ISP you know

00:05:54,870 --> 00:05:59,280
environment so how do we actually manage

00:05:57,150 --> 00:06:06,270
those two so those are a lot of problems

00:05:59,280 --> 00:06:09,300
we really have to solve and so more

00:06:06,270 --> 00:06:12,690
fundamentally this is the question that

00:06:09,300 --> 00:06:14,850
I actually had I mean I used to work for

00:06:12,690 --> 00:06:16,200
Rison now I work for some other company

00:06:14,850 --> 00:06:18,840
but this is the question that I actually

00:06:16,200 --> 00:06:22,500
was really asking all the time where's

00:06:18,840 --> 00:06:27,020
the edge because if you really you know

00:06:22,500 --> 00:06:30,810
look at like you know what we have in 4G

00:06:27,020 --> 00:06:33,900
we have IP termination at we call a

00:06:30,810 --> 00:06:36,540
distribution center we have Verizon has

00:06:33,900 --> 00:06:38,790
around 50 plus

00:06:36,540 --> 00:06:43,140
you know distribution centers around the

00:06:38,790 --> 00:06:48,000
new US so basically one per state so is

00:06:43,140 --> 00:06:49,890
that the edge I mean maybe but you know

00:06:48,000 --> 00:06:51,810
when telcos actually think about the

00:06:49,890 --> 00:06:54,060
edge they are thinking about the other

00:06:51,810 --> 00:06:57,000
CEOs the Accenture offices because

00:06:54,060 --> 00:07:00,710
that's where really you know the delay

00:06:57,000 --> 00:07:04,530
can be you know minimized however I mean

00:07:00,710 --> 00:07:07,320
how can we actually you know bring our

00:07:04,530 --> 00:07:10,680
edge devices into cos I mean that's one

00:07:07,320 --> 00:07:14,790
question that I had because in the CEO

00:07:10,680 --> 00:07:16,950
the IP was not terminated so basically

00:07:14,790 --> 00:07:19,800
if you actually have to put some devices

00:07:16,950 --> 00:07:23,460
into cos then basically we actually have

00:07:19,800 --> 00:07:25,140
to terminate the GRE tunnel and we have

00:07:23,460 --> 00:07:27,270
to maintain the session state and all

00:07:25,140 --> 00:07:31,920
that stuff that's actually you know

00:07:27,270 --> 00:07:33,540
quite a burden so so dad actually you

00:07:31,920 --> 00:07:35,570
know and then so there was a lot of

00:07:33,540 --> 00:07:38,520
debate going on in that sense and

00:07:35,570 --> 00:07:40,710
therefore I was actually you know asking

00:07:38,520 --> 00:07:42,630
question I mean it is really magneti I

00:07:40,710 --> 00:07:46,530
mean are we actually really ready to you

00:07:42,630 --> 00:07:51,840
know deploy the map nearby the you know

00:07:46,530 --> 00:07:54,030
the devices so let's talk about 5g so

00:07:51,840 --> 00:07:56,430
you know we were actually working on I

00:07:54,030 --> 00:07:59,460
mean I species are actually working 5g

00:07:56,430 --> 00:08:01,710
right but you know the interface air

00:07:59,460 --> 00:08:04,260
interface spec and those things are

00:08:01,710 --> 00:08:07,920
actually out there but you know I don't

00:08:04,260 --> 00:08:11,610
think the you know the ran architecture

00:08:07,920 --> 00:08:14,040
is actually done so even 5g traffic is

00:08:11,610 --> 00:08:15,900
actually coming to the P gateway so if

00:08:14,040 --> 00:08:18,990
that's the case I mean still we need

00:08:15,900 --> 00:08:22,350
some time you know until the 5g really

00:08:18,990 --> 00:08:25,440
launches and and only then the proper

00:08:22,350 --> 00:08:27,750
Mac know model it's going to work so and

00:08:25,440 --> 00:08:29,340
and also the other thing that I would

00:08:27,750 --> 00:08:33,630
like to actually you know talk about is

00:08:29,340 --> 00:08:37,470
like you know telcos usually think

00:08:33,630 --> 00:08:39,450
really huge big right so they want all

00:08:37,470 --> 00:08:41,430
the you know infrastructure to be done

00:08:39,450 --> 00:08:43,500
and then apply you know launch a service

00:08:41,430 --> 00:08:45,300
and stuff like that but how long do we

00:08:43,500 --> 00:08:48,110
actually have to wait I mean if that's

00:08:45,300 --> 00:08:51,740
the model I mean

00:08:48,110 --> 00:08:56,600
so we have cos in every town I used to

00:08:51,740 --> 00:09:00,440
actually work as a CEO tech for my what

00:08:56,600 --> 00:09:02,240
is it the emergency work assignment so I

00:09:00,440 --> 00:09:05,600
know the CEO environment a little bit

00:09:02,240 --> 00:09:07,910
but it's not that easy to just you know

00:09:05,600 --> 00:09:11,029
deploy everything in CEO in a short

00:09:07,910 --> 00:09:14,930
amount of the time so those are the the

00:09:11,029 --> 00:09:18,230
questions that I have so but should we

00:09:14,930 --> 00:09:20,750
wait probably not so let's actually

00:09:18,230 --> 00:09:24,079
think small and then be practical and

00:09:20,750 --> 00:09:26,480
let's see what we can do so that is

00:09:24,079 --> 00:09:29,990
basically the discussion that we had

00:09:26,480 --> 00:09:33,829
with Fung and basically he just wanted

00:09:29,990 --> 00:09:35,630
to start from no H devices okay and see

00:09:33,829 --> 00:09:38,209
what we can do on the edge devices that

00:09:35,630 --> 00:09:43,760
we have so that's what this project is

00:09:38,209 --> 00:09:47,120
about so um so basically assuming we

00:09:43,760 --> 00:09:49,790
have a node B let's not actually go to

00:09:47,120 --> 00:09:52,610
Nino B yet let's let's assume we have a

00:09:49,790 --> 00:09:54,470
hotspot somewhere and then Haskell is

00:09:52,610 --> 00:09:59,480
usually low running a version of Linux

00:09:54,470 --> 00:10:03,500
so can we actually have some service

00:09:59,480 --> 00:10:07,760
that's actually running on the cloud but

00:10:03,500 --> 00:10:11,720
as we can actually you know launch the

00:10:07,760 --> 00:10:13,310
same service on to the hotspot whenever

00:10:11,720 --> 00:10:15,910
we are ready to do that can we actually

00:10:13,310 --> 00:10:19,430
do that to minimize the delay and then

00:10:15,910 --> 00:10:21,709
theme down the network traffic to the

00:10:19,430 --> 00:10:25,430
cloud so that was the basic like you

00:10:21,709 --> 00:10:30,110
know a simple idea so in order to do

00:10:25,430 --> 00:10:31,940
that we just need to you know on the

00:10:30,110 --> 00:10:36,529
kernel space we just have a traffic

00:10:31,940 --> 00:10:39,589
director we were using you know TC to do

00:10:36,529 --> 00:10:41,209
that and you know on the user space we

00:10:39,589 --> 00:10:43,510
had like you know a little controller

00:10:41,209 --> 00:10:47,420
that actually and I'll configure ste TC

00:10:43,510 --> 00:10:51,769
which actually directs the a matching

00:10:47,420 --> 00:10:53,990
traffic to the v8 which is actually you

00:10:51,769 --> 00:10:55,089
know the other end is actually connected

00:10:53,990 --> 00:10:57,429
to the

00:10:55,089 --> 00:10:59,109
the network name space where the

00:10:57,429 --> 00:11:01,589
application is actually running so we

00:10:59,109 --> 00:11:04,479
just created this you know simple

00:11:01,589 --> 00:11:09,789
architecture and then you know tested a

00:11:04,479 --> 00:11:11,439
couple of applications so the good thing

00:11:09,789 --> 00:11:13,719
about this architecture is you don't

00:11:11,439 --> 00:11:16,449
actually have to you know build

00:11:13,719 --> 00:11:18,609
everything have all the infrastructure

00:11:16,449 --> 00:11:19,839
already only then like you know start

00:11:18,609 --> 00:11:22,419
the service we can actually start the

00:11:19,839 --> 00:11:24,669
service with maybe more delay where may

00:11:22,419 --> 00:11:26,919
may be more bandwidth consumption and

00:11:24,669 --> 00:11:28,779
then we can actually enroll this out

00:11:26,919 --> 00:11:35,559
like you know yeah you know in gradual

00:11:28,779 --> 00:11:38,109
way okay so I think I just talked about

00:11:35,559 --> 00:11:40,409
all these but it's a it's a lightweight

00:11:38,109 --> 00:11:44,589
process level virtualization

00:11:40,409 --> 00:11:48,389
using Linux name space network name

00:11:44,589 --> 00:11:51,339
space container and then use the TC to

00:11:48,389 --> 00:11:53,919
just direct the degree director packet

00:11:51,339 --> 00:11:57,159
the matching packets to the local

00:11:53,919 --> 00:11:58,659
service and then we have a control

00:11:57,159 --> 00:12:01,029
module that manages to have the

00:11:58,659 --> 00:12:04,629
components and we named it like this

00:12:01,029 --> 00:12:10,299
come to mimic to small the mac services

00:12:04,629 --> 00:12:13,329
deployed onto edge routers basically so

00:12:10,299 --> 00:12:17,499
why not a full container I mean we are

00:12:13,329 --> 00:12:20,919
talking about like potentially old

00:12:17,499 --> 00:12:23,229
devices okay old you know let's say

00:12:20,919 --> 00:12:26,709
router I mean not Roberts like you know

00:12:23,229 --> 00:12:28,599
Wi-Fi routers or access point right so

00:12:26,709 --> 00:12:32,769
if that's the case I mean it's probably

00:12:28,599 --> 00:12:34,359
gonna run maybe old colonel so we don't

00:12:32,769 --> 00:12:36,159
want to actually upgrade the kernel

00:12:34,359 --> 00:12:38,739
version or anything like that so we say

00:12:36,159 --> 00:12:41,889
okay let's actually do the minimum let's

00:12:38,739 --> 00:12:44,769
just use the you know what is it the the

00:12:41,889 --> 00:12:47,699
network namespace to provide the the

00:12:44,769 --> 00:12:51,549
network reserve duplication basically

00:12:47,699 --> 00:12:53,469
okay and then we can also reuse the

00:12:51,549 --> 00:12:55,089
existing control plane function to

00:12:53,469 --> 00:12:57,189
actually manage the namespace and stuff

00:12:55,089 --> 00:13:00,399
like that so that was actually no easy

00:12:57,189 --> 00:13:02,499
thing for us and you know as you know if

00:13:00,399 --> 00:13:03,760
you need to actually run the the full

00:13:02,499 --> 00:13:06,220
container I mean you ask

00:13:03,760 --> 00:13:08,740
I have to run you know more demons -

00:13:06,220 --> 00:13:10,270
Ashley manager container and that we

00:13:08,740 --> 00:13:14,650
didn't even want wanted to actually

00:13:10,270 --> 00:13:16,720
worry about okay I'm gonna actually skip

00:13:14,650 --> 00:13:18,910
this slide because you probably all know

00:13:16,720 --> 00:13:22,930
like you know what to do with this so

00:13:18,910 --> 00:13:25,960
but so we just need to create a you know

00:13:22,930 --> 00:13:28,210
fetus namespace whatever and then just

00:13:25,960 --> 00:13:32,830
need to configure the TC to do the

00:13:28,210 --> 00:13:36,280
redirect okay so let's actually go into

00:13:32,830 --> 00:13:40,060
a sample use case license-plate

00:13:36,280 --> 00:13:43,200
detection I mean we just did that this

00:13:40,060 --> 00:13:47,910
as a use case and and implemented this

00:13:43,200 --> 00:13:51,550
because there was open a ALP are

00:13:47,910 --> 00:13:54,190
actually out there and then we thought

00:13:51,550 --> 00:13:55,840
what would be a good you know

00:13:54,190 --> 00:13:59,650
application to actually run in this

00:13:55,840 --> 00:14:02,620
environment so so basically we have the

00:13:59,650 --> 00:14:05,050
way uh you know the the opening a ap are

00:14:02,620 --> 00:14:07,720
actually running in the cloud and then

00:14:05,050 --> 00:14:09,760
we actually configure the TC to in are

00:14:07,720 --> 00:14:11,440
going to that specific address right

00:14:09,760 --> 00:14:13,330
destination address redirect to the

00:14:11,440 --> 00:14:16,270
local and then we are actually running

00:14:13,330 --> 00:14:18,940
the same application on the local which

00:14:16,270 --> 00:14:20,920
actually you know read the up the

00:14:18,940 --> 00:14:25,210
license plate and then you know send the

00:14:20,920 --> 00:14:27,250
the result which is in text to another

00:14:25,210 --> 00:14:30,520
you know service that's actually running

00:14:27,250 --> 00:14:32,470
on the cloud so basically if even if we

00:14:30,520 --> 00:14:35,710
don't really have this service actually

00:14:32,470 --> 00:14:37,810
running on on on this device the annual

00:14:35,710 --> 00:14:40,390
the service will be actually provided at

00:14:37,810 --> 00:14:42,370
the the cloud once we actually launch

00:14:40,390 --> 00:14:44,290
this service antigen onto this device

00:14:42,370 --> 00:14:47,380
then it actually will be actually served

00:14:44,290 --> 00:14:50,560
at the you know at this device and that

00:14:47,380 --> 00:14:53,650
actually reduced the the data that's

00:14:50,560 --> 00:15:00,520
actually going towards the you know to

00:14:53,650 --> 00:15:02,860
the the the cloud and then since I'm now

00:15:00,520 --> 00:15:04,480
actually working for you know cell like

00:15:02,860 --> 00:15:07,030
company this will actually save a lot of

00:15:04,480 --> 00:15:09,340
like you know money for our client if we

00:15:07,030 --> 00:15:12,730
actually do that so what what it means

00:15:09,340 --> 00:15:15,070
is like you know the satellite wings are

00:15:12,730 --> 00:15:15,999
actually the bits on the center leggings

00:15:15,070 --> 00:15:18,489
are really

00:15:15,999 --> 00:15:22,720
expensive so if you want to actually

00:15:18,489 --> 00:15:25,289
know have a camera and in the router

00:15:22,720 --> 00:15:28,869
actually running in some let's say

00:15:25,289 --> 00:15:30,579
Amazon somewhere to actually watch like

00:15:28,869 --> 00:15:32,979
in a local Road who was actually going

00:15:30,579 --> 00:15:34,989
by I had to read you know the license

00:15:32,979 --> 00:15:36,339
plate and stuff like that right then you

00:15:34,989 --> 00:15:38,109
will actually save a lot of like you

00:15:36,339 --> 00:15:41,559
know bandwidth and then that gonna

00:15:38,109 --> 00:15:43,269
actually shrink the cost a lot so so

00:15:41,559 --> 00:15:48,669
that was one of the use case that we

00:15:43,269 --> 00:15:50,739
actually implemented the other in the

00:15:48,669 --> 00:15:54,009
use case is actually speed test server

00:15:50,739 --> 00:15:57,099
on the edge because you know usually we

00:15:54,009 --> 00:15:59,470
do customers actually subscribers

00:15:57,099 --> 00:16:02,049
actually test their link speed and know

00:15:59,470 --> 00:16:04,379
a lot but the thing is like you know you

00:16:02,049 --> 00:16:07,509
don't really need to actually have your

00:16:04,379 --> 00:16:12,039
de server actually run you into cloud to

00:16:07,509 --> 00:16:16,119
just test the last mile link speed so in

00:16:12,039 --> 00:16:18,879
in you know so basically we actually

00:16:16,119 --> 00:16:24,729
consider this as application so we just

00:16:18,879 --> 00:16:27,220
put the diaper 3d Mon in size the the

00:16:24,729 --> 00:16:30,489
router and basically that was it and it

00:16:27,220 --> 00:16:32,559
was actually working fine so that was

00:16:30,489 --> 00:16:34,720
under the use case I'm pretty sure we

00:16:32,559 --> 00:16:37,239
can't actually come up with another you

00:16:34,720 --> 00:16:41,279
know different use case is that is

00:16:37,239 --> 00:16:45,549
actually good for Internet of Things and

00:16:41,279 --> 00:16:49,179
by simply start using this model to

00:16:45,549 --> 00:16:51,689
start the Domecq and by doing this I

00:16:49,179 --> 00:16:55,569
think we can actually get more and more

00:16:51,689 --> 00:16:57,789
what is it the requirements and what

00:16:55,569 --> 00:17:00,699
needs to be done is stuff like that so

00:16:57,789 --> 00:17:04,539
even before actually you know coming

00:17:00,699 --> 00:17:07,689
with a standard of what max should be I

00:17:04,539 --> 00:17:11,639
think this would be a good way to

00:17:07,689 --> 00:17:17,850
understand the requirement of the back

00:17:11,639 --> 00:17:20,769
okay so today I just went through the

00:17:17,850 --> 00:17:23,709
lightweights of the architecture for

00:17:20,769 --> 00:17:26,530
edge device based on ohmic supporting

00:17:23,709 --> 00:17:28,770
gradual deployment model and

00:17:26,530 --> 00:17:32,710
so we can actually convert any

00:17:28,770 --> 00:17:35,190
linux-based nodes into a mat application

00:17:32,710 --> 00:17:38,409
server and deploy off-the-shelf software

00:17:35,190 --> 00:17:42,390
onto the mobile edge node for example

00:17:38,409 --> 00:17:44,830
Wi-Fi hotspot without software splitting

00:17:42,390 --> 00:17:47,710
and down will actually reduce the

00:17:44,830 --> 00:17:53,590
service delay and traffic volume towards

00:17:47,710 --> 00:17:55,299
the outside and the future work is we

00:17:53,590 --> 00:17:57,309
have a national looking to how to

00:17:55,299 --> 00:17:59,049
actually distribute it distribute the

00:17:57,309 --> 00:18:01,720
application and how do we actually

00:17:59,049 --> 00:18:06,429
manage on you know those applications

00:18:01,720 --> 00:18:07,990
you know on those devices but people are

00:18:06,429 --> 00:18:13,480
already doing it so it shouldn't be

00:18:07,990 --> 00:18:16,650
actually a big deal so and then also

00:18:13,480 --> 00:18:20,049
Fung was actually looking into

00:18:16,650 --> 00:18:23,049
supporting the open wrt Wi-Fi routers

00:18:20,049 --> 00:18:26,440
for dysfunction so that's another thing

00:18:23,049 --> 00:18:28,350
that he is actually doing so that's

00:18:26,440 --> 00:18:32,280
about it

00:18:28,350 --> 00:18:45,730
any questions we'd go to break alley

00:18:32,280 --> 00:18:47,530
questions questions we get okay just

00:18:45,730 --> 00:18:51,400
recap bring up back the slide again

00:18:47,530 --> 00:18:54,309
where you showing we got ten minutes to

00:18:51,400 --> 00:19:03,100
kill here so someone has to ask every

00:18:54,309 --> 00:19:04,390
speaker question okay so you asked this

00:19:03,100 --> 00:19:05,740
question about do we really need this

00:19:04,390 --> 00:19:07,330
edge computing right because it's

00:19:05,740 --> 00:19:10,210
overhead you have to redesign your

00:19:07,330 --> 00:19:12,280
system whatever and I think that's a

00:19:10,210 --> 00:19:13,960
very general question to ask I think it

00:19:12,280 --> 00:19:15,460
really depends on your application use

00:19:13,960 --> 00:19:19,270
case right if your if your use case

00:19:15,460 --> 00:19:21,400
really benefits from having low latency

00:19:19,270 --> 00:19:25,270
edge and can provide data quickly then

00:19:21,400 --> 00:19:26,260
you put the effort in right so but given

00:19:25,270 --> 00:19:27,880
you know it's a chicken-egg problem

00:19:26,260 --> 00:19:29,740
giving you a different head don't have

00:19:27,880 --> 00:19:32,230
the infrastructure now you don't change

00:19:29,740 --> 00:19:34,390
your application so but I'm pretty sure

00:19:32,230 --> 00:19:36,760
there's something coming right however

00:19:34,390 --> 00:19:39,370
I'm not really a fan of actually

00:19:36,760 --> 00:19:41,770
building any infrastructure for the use

00:19:39,370 --> 00:19:43,840
case that I don't really have because

00:19:41,770 --> 00:19:47,770
we've been doing that for a long time I

00:19:43,840 --> 00:19:49,659
think and that actually do you see the

00:19:47,770 --> 00:19:51,309
vikram's chart right you know how many

00:19:49,659 --> 00:19:53,140
dollars was actually putting into that

00:19:51,309 --> 00:19:56,169
like you know network in the middle

00:19:53,140 --> 00:20:00,309
while the the cloud guys were actually

00:19:56,169 --> 00:20:03,330
putting like maybe 1/10 of the money I

00:20:00,309 --> 00:20:05,380
see is like vehicle communication

00:20:03,330 --> 00:20:08,679
vehicle to something communication right

00:20:05,380 --> 00:20:10,809
but it's also still blurry right so so

00:20:08,679 --> 00:20:12,460
the thing is like you know I don't think

00:20:10,809 --> 00:20:14,409
you know people are interesting and

00:20:12,460 --> 00:20:16,990
actually putting a lot of money into the

00:20:14,409 --> 00:20:19,649
Mac until they I really figure out like

00:20:16,990 --> 00:20:22,659
you know what is the real use case and

00:20:19,649 --> 00:20:25,830
and that is one of the difficult you

00:20:22,659 --> 00:20:25,830
know questions to answer I think

00:20:31,610 --> 00:20:37,770
and I wanted to ask you if you

00:20:35,000 --> 00:20:40,920
considered high availability issues in

00:20:37,770 --> 00:20:43,550
this architecture I mean what if we

00:20:40,920 --> 00:20:46,710
require really high availability of the

00:20:43,550 --> 00:20:52,650
also this edge devices and the kind of

00:20:46,710 --> 00:20:55,580
mesh solution or whatever right so in in

00:20:52,650 --> 00:20:59,060
our you know solution we didn't actually

00:20:55,580 --> 00:21:01,590
handle the high availability at the edge

00:20:59,060 --> 00:21:04,830
because we were actually thinking the

00:21:01,590 --> 00:21:06,800
local demon is gonna just you know testy

00:21:04,830 --> 00:21:09,960
of the port was actually opening up and

00:21:06,800 --> 00:21:11,850
and just test if it's actually

00:21:09,960 --> 00:21:14,160
generating the log as in we actually

00:21:11,850 --> 00:21:15,750
make a request and stuff like that and

00:21:14,160 --> 00:21:19,710
if it's actually running then we don't

00:21:15,750 --> 00:21:22,320
actually bypass our service but but if

00:21:19,710 --> 00:21:25,380
you actually go to the proper you know

00:21:22,320 --> 00:21:28,800
Mac architecture right where let's

00:21:25,380 --> 00:21:31,080
assume we actually run a small maybe two

00:21:28,800 --> 00:21:33,660
racks on on SEOs and stuff like that

00:21:31,080 --> 00:21:36,390
then we really have to you know I think

00:21:33,660 --> 00:21:38,820
handle the you know the high

00:21:36,390 --> 00:21:41,400
availability and failover the same way

00:21:38,820 --> 00:21:46,920
very similar way that's actually handled

00:21:41,400 --> 00:21:58,790
India in in the data centers like ecmp

00:21:46,920 --> 00:22:01,860
and all that stuff it's okay things okay

00:21:58,790 --> 00:22:04,740
you can bring back your slide say we see

00:22:01,860 --> 00:22:07,620
people want to go to to break or should

00:22:04,740 --> 00:22:10,110
I ask one more question I can ask a

00:22:07,620 --> 00:22:19,170
question all right

00:22:10,110 --> 00:22:22,400
two questions one more okay it's like

00:22:19,170 --> 00:22:22,400
just with ice please

00:22:34,080 --> 00:22:37,180
all right maybe she just let's just go

00:22:36,490 --> 00:22:41,190
for a break

00:22:37,180 --> 00:22:41,190
Thanks okay oh oh here we go

00:22:43,330 --> 00:22:51,340
keep going back I think no maybe one

00:22:47,710 --> 00:22:54,160
more yeah this doc over it is pretty

00:22:51,340 --> 00:22:56,560
high right you just what I think what

00:22:54,160 --> 00:23:04,050
this is saying is the red is the sub the

00:22:56,560 --> 00:23:08,160
app you wanna run and all so what what

00:23:04,050 --> 00:23:10,930
say no benefit at all to using docker I

00:23:08,160 --> 00:23:15,880
mean okay I don't mean that in a bad way

00:23:10,930 --> 00:23:18,100
I mean do you not need something there's

00:23:15,880 --> 00:23:19,240
no there's no image management or

00:23:18,100 --> 00:23:23,440
anything of that sort right you just

00:23:19,240 --> 00:23:25,420
want a container way yeah but would you

00:23:23,440 --> 00:23:27,160
actually run this on like an own small

00:23:25,420 --> 00:23:29,980
device that you have in your home I mean

00:23:27,160 --> 00:23:31,690
I don't know deeply and basically I need

00:23:29,980 --> 00:23:34,600
the kernel upgrade and all this stuff to

00:23:31,690 --> 00:23:38,560
actually support this the docker so I

00:23:34,600 --> 00:23:40,840
mean and and I think the you know the

00:23:38,560 --> 00:23:45,370
minimum thing and we're not I was always

00:23:40,840 --> 00:23:47,890
we were not thinking to support the what

00:23:45,370 --> 00:23:50,140
is it the multi-tenancy because you know

00:23:47,890 --> 00:23:52,090
we just you know have this application

00:23:50,140 --> 00:23:54,430
image just pushed here and then just run

00:23:52,090 --> 00:23:57,280
it but I'm not gonna actually let the

00:23:54,430 --> 00:23:59,560
our customers actually you know go into

00:23:57,280 --> 00:24:01,840
these devices and devote whatever so if

00:23:59,560 --> 00:24:04,570
that was the case I mean protection

00:24:01,840 --> 00:24:08,200
wasn't really the requirement for us

00:24:04,570 --> 00:24:11,380
it's just you know network address you

00:24:08,200 --> 00:24:13,450
know you you basically wanted to just

00:24:11,380 --> 00:24:16,360
have an app on every container probably

00:24:13,450 --> 00:24:19,030
the same ip address everywhere and write

00:24:16,360 --> 00:24:22,210
locally say my is yes and then basically

00:24:19,030 --> 00:24:24,310
based on the destination IP address

00:24:22,210 --> 00:24:26,290
right and then port number we can

00:24:24,310 --> 00:24:28,780
actually just redirect the the package

00:24:26,290 --> 00:24:31,240
to the proper container basically that

00:24:28,780 --> 00:24:32,440
was that was the simplest model that we

00:24:31,240 --> 00:24:35,400
wanted to work okay

00:24:32,440 --> 00:24:37,660
the other question that didn't trigger

00:24:35,400 --> 00:24:39,340
some question see I knew it

00:24:37,660 --> 00:24:42,490
right there okay there's a mic over

00:24:39,340 --> 00:24:44,120
there so just a quick question I'm

00:24:42,490 --> 00:24:46,850
intrigued about this opening

00:24:44,120 --> 00:24:49,960
about this running on open wrt devices

00:24:46,850 --> 00:24:52,040
you say that's in your future

00:24:49,960 --> 00:24:54,920
future plans how far away do you think

00:24:52,040 --> 00:24:57,020
you are from yeah that's not my future

00:24:54,920 --> 00:25:00,020
and that's what's actually future

00:24:57,020 --> 00:25:02,120
project I mean he he's really pump up

00:25:00,020 --> 00:25:06,830
Don you know working on this project

00:25:02,120 --> 00:25:08,960
that this is a really pet project so if

00:25:06,830 --> 00:25:10,790
you really want to actually know I can't

00:25:08,960 --> 00:25:12,950
actually ping him or you know I mean I

00:25:10,790 --> 00:25:15,590
think I think we have you know his email

00:25:12,950 --> 00:25:18,470
address here so we can actually you know

00:25:15,590 --> 00:25:20,000
contact and ask him okay but but he's I

00:25:18,470 --> 00:25:21,500
really working on it I actually saw him

00:25:20,000 --> 00:25:23,800
actually working on it like two weeks

00:25:21,500 --> 00:25:23,800
ago

00:25:25,630 --> 00:25:32,420
okay thank you

00:25:28,000 --> 00:25:32,420

YouTube URL: https://www.youtube.com/watch?v=5YDt38q8RtU


