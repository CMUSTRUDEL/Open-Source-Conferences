Title: Using Jupyter notebooks to develop and share interactive data displays
Publication date: 2016-08-16
Playlist: Science & Data 2016 (Miniconf)
Description: 
	Ioanna Ioannou
https://2016.pycon-au.org/schedule/143/view_talk
Presented with Maoyuan Liu from the Bureau of Meteorology.

Jupyter notebooks have become a very popular tool for scientific data analysis and exploration. Often notebook users may produce a data analysis within a notebook and decide they wish to share it with a wider audience. While notebooks offer excellent facilities for data visualisation, they are less than ideal as a medium for sharing these visualisations more broadly. Interacting with data in a notebook requires knowledge of programming. Notebooks with static data displays are more accessible to non-technical audiences, but static displays severely limit the breadth and depth of data that can be explored within one notebook. So the question arises: How can we provide our audience with the ability to explore our data?

Developing interactive data displays for the web typically requires knowledge of web technologies that notebook users may not possess. To bridge this gap, a flurry of recent activity has focussed on the development of tools that facilitate interactivity within notebooks. Such tools include interactive plotting tools that enable actions such as zooming and selecting of data within plots, user interface elements (eg. drop-down menus, sliders) that can be incorporated into notebooks, and tools that facilitate the arrangement of plots and information into dashboard-like displays.

My team at the Australian Bureau of Meteorology has used these tools to build shareable interactive data displays comparing weather forecasts against observations across Australia. In this talk we will review currently available tools that facilitate interactivity within notebooks, share our experience in using them, and the practices we have developed around their use. A simple step-by-step example will demonstrate how we can put together an interactive data display allowing selective plotting of data through UI controls and interaction with the plots.
Captions: 
	00:00:00,359 --> 00:00:07,980
okay welcome back to our final

00:00:03,840 --> 00:00:10,200
presentation for this session our

00:00:07,980 --> 00:00:14,030
speakers come to us from the Bureau of

00:00:10,200 --> 00:00:16,770
Meteorology you are au and au and mal Lu

00:00:14,030 --> 00:00:19,439
who are software engineers working on

00:00:16,770 --> 00:00:21,240
forecast systems development and their

00:00:19,439 --> 00:00:22,650
presentation is on using Jupiter

00:00:21,240 --> 00:00:31,230
notebooks to develop and share

00:00:22,650 --> 00:00:33,030
interactive data displays hi oh thank

00:00:31,230 --> 00:00:34,559
you so we're going to do a tag team with

00:00:33,030 --> 00:00:36,899
this presentation I'll take the first

00:00:34,559 --> 00:00:38,340
part give you a bit more background

00:00:36,899 --> 00:00:40,230
about what we do to give you some

00:00:38,340 --> 00:00:41,520
context as to what we're presenting

00:00:40,230 --> 00:00:43,469
today

00:00:41,520 --> 00:00:45,629
so part of our project involves

00:00:43,469 --> 00:00:48,930
verifying the accuracy of the bureau's

00:00:45,629 --> 00:00:50,969
forecasts which involves taking the

00:00:48,930 --> 00:00:54,120
values of the forecasts that forecasters

00:00:50,969 --> 00:00:56,670
produce and the observations of various

00:00:54,120 --> 00:00:58,949
stations around Australia bringing them

00:00:56,670 --> 00:01:02,640
together and calculating a whole bunch

00:00:58,949 --> 00:01:05,760
of metrics that represent the quality of

00:01:02,640 --> 00:01:07,680
the forecast and we do that are many

00:01:05,760 --> 00:01:10,080
station points many many groups of

00:01:07,680 --> 00:01:12,900
stations around Australia we have many

00:01:10,080 --> 00:01:15,780
different lead times so likely time is a

00:01:12,900 --> 00:01:17,520
concept in meteorology that like you

00:01:15,780 --> 00:01:20,070
know the bureau or basically issues a

00:01:17,520 --> 00:01:22,979
forecast for seven days every day so at

00:01:20,070 --> 00:01:25,409
the time of seven days is like it's the

00:01:22,979 --> 00:01:26,790
forecast for like next Friday so we

00:01:25,409 --> 00:01:28,049
might this might come up in the

00:01:26,790 --> 00:01:31,799
presentation so I'm just like you know

00:01:28,049 --> 00:01:33,750
what that is from now so we analyze all

00:01:31,799 --> 00:01:36,540
that data and we come up with metrics

00:01:33,750 --> 00:01:38,280
and plots and we need to share that with

00:01:36,540 --> 00:01:40,079
other people in the bureau like

00:01:38,280 --> 00:01:41,340
forecasters will come up with a forecast

00:01:40,079 --> 00:01:44,399
since I want to know how well they're

00:01:41,340 --> 00:01:46,229
doing managers were interested in how

00:01:44,399 --> 00:01:51,390
the whole process is working and other

00:01:46,229 --> 00:01:54,509
scientists so we're the notebooks would

00:01:51,390 --> 00:01:57,930
fit in here we're a multi-disciplinary

00:01:54,509 --> 00:02:00,030
team so in our team we have as for

00:01:57,930 --> 00:02:02,040
software developers but we also have

00:02:00,030 --> 00:02:04,770
people to Harry here at the front who is

00:02:02,040 --> 00:02:07,939
a forecaster and he has recently been

00:02:04,770 --> 00:02:07,939
converted to Python

00:02:08,550 --> 00:02:16,330
so we find that notebooks have a really

00:02:13,349 --> 00:02:19,420
nice platform for scientists to be able

00:02:16,330 --> 00:02:20,590
to get in and do some data analysis they

00:02:19,420 --> 00:02:23,020
don't need to install anything on their

00:02:20,590 --> 00:02:25,290
machine they can just get in and with

00:02:23,020 --> 00:02:27,430
basic knowledge of Python get started

00:02:25,290 --> 00:02:29,140
they have excellent facilities for

00:02:27,430 --> 00:02:32,349
plotting and visualization as I'm sure

00:02:29,140 --> 00:02:34,300
everybody in this and in this many conf

00:02:32,349 --> 00:02:39,099
is using notebooks so I'm sure you all

00:02:34,300 --> 00:02:41,019
know about it so we use notebooks

00:02:39,099 --> 00:02:43,299
basically the scientists have a chance

00:02:41,019 --> 00:02:45,340
to get in and they pull the data in the

00:02:43,299 --> 00:02:47,890
notebooks and and do data analysis and

00:02:45,340 --> 00:02:50,739
visualization and they may then want to

00:02:47,890 --> 00:02:53,200
share that probably it's not books are

00:02:50,739 --> 00:02:55,209
pretty I mean you can you can export a

00:02:53,200 --> 00:02:57,489
notebook as an HTML or PDF but that's a

00:02:55,209 --> 00:02:59,370
static which is a pre presentation and

00:02:57,489 --> 00:03:02,410
the data we're dealing with is very

00:02:59,370 --> 00:03:04,120
multi-dimensional so this is an example

00:03:02,410 --> 00:03:07,299
of one of the dashboards we created and

00:03:04,120 --> 00:03:10,299
it's called it's got like seven

00:03:07,299 --> 00:03:11,859
drop-down boxes which add up to three

00:03:10,299 --> 00:03:15,480
hundred and twenty seven thousand plots

00:03:11,859 --> 00:03:18,640
so to put in one notebook or like one

00:03:15,480 --> 00:03:20,620
whatever is impossible it's not

00:03:18,640 --> 00:03:22,510
practical so we need people to be able

00:03:20,620 --> 00:03:27,280
to explore the data and this is very

00:03:22,510 --> 00:03:31,570
interactive data displays coming so in

00:03:27,280 --> 00:03:34,180
in developing our own dashboard we had

00:03:31,570 --> 00:03:35,970
some requirements about at least the

00:03:34,180 --> 00:03:38,109
plotting technology that's one of the

00:03:35,970 --> 00:03:40,060
part of the solution is what plotting

00:03:38,109 --> 00:03:41,170
technology you use you want something

00:03:40,060 --> 00:03:43,120
that will be interactive in the browser

00:03:41,170 --> 00:03:45,040
so you can just give people the link and

00:03:43,120 --> 00:03:48,400
they can go in and load it up and play

00:03:45,040 --> 00:03:50,560
with the data you want to allow dynamic

00:03:48,400 --> 00:03:53,650
data selection of what's actually in the

00:03:50,560 --> 00:03:57,579
plot so that you can more easily explore

00:03:53,650 --> 00:03:59,560
and you want people like Harry here to

00:03:57,579 --> 00:04:01,810
be able to easily learn and use it to

00:03:59,560 --> 00:04:03,579
create plots so people who don't know

00:04:01,810 --> 00:04:06,250
anything our web sites should be able to

00:04:03,579 --> 00:04:09,010
use these technologies to come up with

00:04:06,250 --> 00:04:11,380
web based displays and lastly an

00:04:09,010 --> 00:04:14,530
important aspect for us is to be a lot

00:04:11,380 --> 00:04:16,600
of Python callbacks because often we'll

00:04:14,530 --> 00:04:21,070
want to pull more data out dynamically

00:04:16,600 --> 00:04:24,190
and generate plots on the fly

00:04:21,070 --> 00:04:25,900
so let's have a look I think these are

00:04:24,190 --> 00:04:27,460
the three most dominant cutting

00:04:25,900 --> 00:04:29,470
technologies in Python at the moment

00:04:27,460 --> 00:04:31,930
and we'll have a look through an

00:04:29,470 --> 00:04:38,950
interactive example at each one of them

00:04:31,930 --> 00:04:42,460
I can just get to that you go so in this

00:04:38,950 --> 00:04:44,830
example we are loading sound forecasting

00:04:42,460 --> 00:04:51,640
observation data of minimum temperature

00:04:44,830 --> 00:04:52,840
for Melbourne for the last winter and we

00:04:51,640 --> 00:04:54,490
will make this available this is

00:04:52,840 --> 00:04:55,600
available in the github so we'll share

00:04:54,490 --> 00:04:57,850
that link with you if you want to have a

00:04:55,600 --> 00:05:00,700
closer look at the code so this is map

00:04:57,850 --> 00:05:03,480
so need to start with its everybody uses

00:05:00,700 --> 00:05:07,030
matplotlib everybody knows it it's not

00:05:03,480 --> 00:05:08,410
the nicest API but everybody knows it

00:05:07,030 --> 00:05:10,360
sorry there's plenty of help you can

00:05:08,410 --> 00:05:13,650
figure out what you want to do almost

00:05:10,360 --> 00:05:18,070
all the time without too much effort so

00:05:13,650 --> 00:05:22,660
this is our map table plot it's not

00:05:18,070 --> 00:05:27,630
terribly interactive you can pan and you

00:05:22,660 --> 00:05:31,150
can you can zoom I won't do it now easy

00:05:27,630 --> 00:05:33,010
it's a bit hard turning this way but you

00:05:31,150 --> 00:05:35,050
can use the box there too to zoom in

00:05:33,010 --> 00:05:38,140
that's about where the interactivity

00:05:35,050 --> 00:05:39,460
ends now they do have some widgets that

00:05:38,140 --> 00:05:41,890
you can use to add some extra

00:05:39,460 --> 00:05:44,440
interactivity like sliders building to

00:05:41,890 --> 00:05:48,700
motley but they look really ugly and

00:05:44,440 --> 00:05:51,330
they're not easy to to use so let's move

00:05:48,700 --> 00:05:58,090
on to bouquet as you may not ease

00:05:51,330 --> 00:05:59,680
bouquet is the longest one and out of

00:05:58,090 --> 00:06:01,210
the three of those it took it's by far

00:05:59,680 --> 00:06:05,380
the longest to figure out how to do this

00:06:01,210 --> 00:06:07,540
simple plot so what can is more

00:06:05,380 --> 00:06:09,880
interactive it's got more tools up here

00:06:07,540 --> 00:06:13,660
you can do the Box zoom and so there you

00:06:09,880 --> 00:06:16,110
go there's a tap thing which we still

00:06:13,660 --> 00:06:21,010
haven't quite figured out what it does

00:06:16,110 --> 00:06:23,380
but it it hides some data when you tap

00:06:21,010 --> 00:06:26,530
it as you can see it's got my servers

00:06:23,380 --> 00:06:28,030
but not particularly well done when you

00:06:26,530 --> 00:06:29,200
got the sub data they overlap each other

00:06:28,030 --> 00:06:31,780
and they're not actually giving you

00:06:29,200 --> 00:06:33,700
anything about the data by default we

00:06:31,780 --> 00:06:34,900
had several efforts trying to figure out

00:06:33,700 --> 00:06:37,210
how to get it

00:06:34,900 --> 00:06:46,090
as many philosophers and it was just

00:06:37,210 --> 00:06:48,220
taking too long so frustrated so bouquet

00:06:46,090 --> 00:06:50,770
is promising but the API is just not

00:06:48,220 --> 00:06:52,710
it's very intuitive and because it's

00:06:50,770 --> 00:06:55,210
newer there's not that much help online

00:06:52,710 --> 00:06:57,340
you have to convert your data into their

00:06:55,210 --> 00:06:59,289
data format so we have to like get our

00:06:57,340 --> 00:07:01,770
data into another data frame to pass it

00:06:59,289 --> 00:07:04,120
to the bouquets scatter function and

00:07:01,770 --> 00:07:06,340
then we had to create a column data

00:07:04,120 --> 00:07:14,590
source just to make it the line along

00:07:06,340 --> 00:07:16,479
the you know the y equals x line so yeah

00:07:14,590 --> 00:07:21,460
bouquet was in the solution that we were

00:07:16,479 --> 00:07:25,510
after so let's come to plot Lee this is

00:07:21,460 --> 00:07:27,460
our plot the code it's not much longer

00:07:25,510 --> 00:07:31,570
or it's similar size to the maps public

00:07:27,460 --> 00:07:33,460
version you just tell it what to do with

00:07:31,570 --> 00:07:34,960
each lead day in this case were plotting

00:07:33,460 --> 00:07:38,770
data by late day so each color

00:07:34,960 --> 00:07:41,320
corresponds to a particular lead day so

00:07:38,770 --> 00:07:44,349
you just make it a scatter trace you add

00:07:41,320 --> 00:07:47,320
it into it data list you create your

00:07:44,349 --> 00:07:50,919
layout however you want it and then you

00:07:47,320 --> 00:07:52,659
just tell you to show you the plot we

00:07:50,919 --> 00:07:55,930
find that probably has a very intuitive

00:07:52,659 --> 00:07:58,330
API for creating plots so this is what

00:07:55,930 --> 00:07:59,889
you get without really needing to define

00:07:58,330 --> 00:08:01,690
any anything fancy

00:07:59,889 --> 00:08:04,090
now the nicest thing is that here you

00:08:01,690 --> 00:08:05,830
can actually click these and you can

00:08:04,090 --> 00:08:07,620
like select what data is actually in the

00:08:05,830 --> 00:08:10,510
plot at any one time so you can explore

00:08:07,620 --> 00:08:12,430
like the difference between the forecast

00:08:10,510 --> 00:08:16,060
for the first probably day one like

00:08:12,430 --> 00:08:16,990
tomorrow and late day seven in this case

00:08:16,060 --> 00:08:18,669
they don't seem to be particularly

00:08:16,990 --> 00:08:21,610
different but normally you would expect

00:08:18,669 --> 00:08:23,710
that the reduce our focus would be more

00:08:21,610 --> 00:08:28,120
inaccurate than the lead day one

00:08:23,710 --> 00:08:30,520
forecast yeah so the other stuff that

00:08:28,120 --> 00:08:34,029
thought they can do is without any any

00:08:30,520 --> 00:08:38,050
coding you get meaningful mile servers

00:08:34,029 --> 00:08:43,120
and of course you can do all the other

00:08:38,050 --> 00:08:45,250
stuff like selecting data zooming in and

00:08:43,120 --> 00:08:47,290
all that sort of stuff so it's very

00:08:45,250 --> 00:08:48,250
interactive in the browser and it's easy

00:08:47,290 --> 00:08:50,699
to use

00:08:48,250 --> 00:08:53,290
and the documentation is decent at least

00:08:50,699 --> 00:08:54,759
even though it's not a SWAT user map is

00:08:53,290 --> 00:08:57,069
multiple-- because their API is

00:08:54,759 --> 00:09:01,949
intuitive you can get to learning quite

00:08:57,069 --> 00:09:04,899
easily so let's go back to our slides

00:09:01,949 --> 00:09:09,519
how do these three compare based on our

00:09:04,899 --> 00:09:10,990
criteria we found maps only to be not so

00:09:09,519 --> 00:09:13,089
good at browser interactivity and

00:09:10,990 --> 00:09:13,779
dynamic data selection it's fairly easy

00:09:13,089 --> 00:09:16,000
to use

00:09:13,779 --> 00:09:18,279
we found bouquet to be pretty good at

00:09:16,000 --> 00:09:22,629
interactivity but not easy to use it and

00:09:18,279 --> 00:09:24,189
we're like totally obviously now I

00:09:22,629 --> 00:09:26,560
haven't talked about Python callbacks

00:09:24,189 --> 00:09:29,769
for that part we decided to use this at

00:09:26,560 --> 00:09:32,709
a library called a PI widgets it's

00:09:29,769 --> 00:09:35,829
basically a suit of UI widgets for

00:09:32,709 --> 00:09:38,199
ipython notebooks so you can add drop

00:09:35,829 --> 00:09:40,750
downs and sliders whatever you want to a

00:09:38,199 --> 00:09:43,600
notebook and and you can define

00:09:40,750 --> 00:09:45,519
callbacks in Python to be able to say

00:09:43,600 --> 00:09:49,870
interactively select what you want to

00:09:45,519 --> 00:09:51,550
plot as an example so the benefit of

00:09:49,870 --> 00:09:52,779
iPad which is is that they it's

00:09:51,550 --> 00:09:54,040
basically a wrapper for all the

00:09:52,779 --> 00:09:57,660
JavaScript you would otherwise have to

00:09:54,040 --> 00:09:57,660
write to do this stuff in your website

00:09:57,899 --> 00:10:03,220
they downside is that if you want it to

00:10:00,910 --> 00:10:05,139
be a static HTML page that you share I

00:10:03,220 --> 00:10:07,980
PI will just won't work you need a

00:10:05,139 --> 00:10:11,019
Python kernel for them to work correctly

00:10:07,980 --> 00:10:13,629
so let me go back to give you a quick

00:10:11,019 --> 00:10:18,779
look-see at what iPad we just affect

00:10:13,629 --> 00:10:18,779
looks like continuing with our example

00:10:19,050 --> 00:10:29,350
so this is a bit of code to add a widget

00:10:24,279 --> 00:10:31,209
to the notebook in this case I've

00:10:29,350 --> 00:10:33,059
defined the dictionary that's got all

00:10:31,209 --> 00:10:36,160
the different plotting methods and

00:10:33,059 --> 00:10:39,279
pointers to the to each method and I've

00:10:36,160 --> 00:10:43,839
created the select widget for these

00:10:39,279 --> 00:10:45,309
methods and a plot scatter function that

00:10:43,839 --> 00:10:46,870
will get called whenever you select one

00:10:45,309 --> 00:10:52,000
of these methods and we link them with

00:10:46,870 --> 00:10:56,079
the interactive object so now that I've

00:10:52,000 --> 00:11:00,770
got this I can select go curbs and I get

00:10:56,079 --> 00:11:04,520
a balk apply and totally cloud so

00:11:00,770 --> 00:11:07,459
pretty easy right now we're still in the

00:11:04,520 --> 00:11:10,100
notebook here if we want to be able to

00:11:07,459 --> 00:11:11,899
share our data more broadly a notebook

00:11:10,100 --> 00:11:14,959
is not ideal so I'll hand over tomorrow

00:11:11,899 --> 00:11:19,190
we'll take you through how to share

00:11:14,959 --> 00:11:23,720
notebooks in a more generic way hi hey

00:11:19,190 --> 00:11:30,140
Jimmy cool okay um I will try to not hit

00:11:23,720 --> 00:11:32,420
my head on anything okay can we please

00:11:30,140 --> 00:11:36,589
have a show of hands who here have had

00:11:32,420 --> 00:11:38,000
to make a website for their results okay

00:11:36,589 --> 00:11:41,779
the rest of you who don't have your hand

00:11:38,000 --> 00:11:49,760
up oh you will um who here loves

00:11:41,779 --> 00:11:51,190
JavaScript whoa okay okay so um when we

00:11:49,760 --> 00:11:53,959
want to share our notebook at someone

00:11:51,190 --> 00:11:57,170
this can either be as simple as giving

00:11:53,959 --> 00:11:59,000
the notebook URL to someone who works in

00:11:57,170 --> 00:12:03,800
the same office or we can email the

00:11:59,000 --> 00:12:05,899
notebook and the problem is when you

00:12:03,800 --> 00:12:08,180
give someone a notebook URL or the

00:12:05,899 --> 00:12:11,240
notebook file it's not exactly visually

00:12:08,180 --> 00:12:14,930
friendly so from just a display

00:12:11,240 --> 00:12:17,750
perspective almost always you will only

00:12:14,930 --> 00:12:19,010
see the cold at the start right when in

00:12:17,750 --> 00:12:20,360
reality the person you're sharing the

00:12:19,010 --> 00:12:23,570
results which really just wants to see

00:12:20,360 --> 00:12:27,050
the graph and if you're sharing a URL I

00:12:23,570 --> 00:12:28,610
think some geo sizes Australia's

00:12:27,050 --> 00:12:31,550
speakers have talked about security

00:12:28,610 --> 00:12:33,529
concerns if you give someone a URL to

00:12:31,550 --> 00:12:35,540
your tributon notebook instance taken

00:12:33,529 --> 00:12:39,579
one code on your computer or on your

00:12:35,540 --> 00:12:43,880
server and that has huge implications

00:12:39,579 --> 00:12:45,860
now who do we share our results to arms

00:12:43,880 --> 00:12:48,980
also you I know is a great juror as well

00:12:45,860 --> 00:12:51,410
as a programmer we have forecasters and

00:12:48,980 --> 00:12:53,209
managers and scientists and people who a

00:12:51,410 --> 00:12:54,880
lot of people who generally aren't

00:12:53,209 --> 00:12:57,410
really interested in our code and

00:12:54,880 --> 00:12:59,779
sometimes we just want to hide all the

00:12:57,410 --> 00:13:02,899
dirty laundry away as Tennessee missing

00:12:59,779 --> 00:13:05,149
people the people that really want to

00:13:02,899 --> 00:13:08,240
see the results aren't necessarily

00:13:05,149 --> 00:13:11,480
programmers and we want to expose the

00:13:08,240 --> 00:13:14,420
data the results to them and this is not

00:13:11,480 --> 00:13:16,279
a new problem outside of the data

00:13:14,420 --> 00:13:18,019
sighs well you know ye in the world

00:13:16,279 --> 00:13:21,320
we're talking about business KPIs and

00:13:18,019 --> 00:13:22,940
metrics are dashboards in

00:13:21,320 --> 00:13:25,399
software-as-a-service has existed for a

00:13:22,940 --> 00:13:30,399
long time some of you may have had the

00:13:25,399 --> 00:13:33,320
displeasure of working with tableau you

00:13:30,399 --> 00:13:36,260
know if you want to use one of these you

00:13:33,320 --> 00:13:38,089
will have to pay money generally and you

00:13:36,260 --> 00:13:41,089
will have to use their UI and their data

00:13:38,089 --> 00:13:45,410
formats and scientists tend to be quite

00:13:41,089 --> 00:13:47,779
unique in what other they have and so of

00:13:45,410 --> 00:13:51,980
course Drupada dashboards is El savior

00:13:47,779 --> 00:13:55,190
and what it does is it allows you to

00:13:51,980 --> 00:14:01,720
serve your notebook as a web app

00:13:55,190 --> 00:14:01,720
directly and so let me show you this

00:14:01,959 --> 00:14:06,620
this is a dashboard the mall this is the

00:14:05,209 --> 00:14:14,600
interactive display that you Anna has

00:14:06,620 --> 00:14:16,399
built if you send this to someone this

00:14:14,600 --> 00:14:21,350
is what they see as you can see there's

00:14:16,399 --> 00:14:24,680
no code if I can click interactivity is

00:14:21,350 --> 00:14:27,860
preserved he uses the same underlying

00:14:24,680 --> 00:14:29,449
data you get the same results it's just

00:14:27,860 --> 00:14:40,430
that the results are right there front

00:14:29,449 --> 00:14:42,410
and center and the technology the reason

00:14:40,430 --> 00:14:46,940
why this is really cool is that it

00:14:42,410 --> 00:14:48,949
allows the allows to publish result and

00:14:46,940 --> 00:14:51,800
your development to work on the same

00:14:48,949 --> 00:14:53,660
data format so your scientists and your

00:14:51,800 --> 00:14:56,269
developers can work on your results

00:14:53,660 --> 00:14:58,760
inside a notebook using the triple a

00:14:56,269 --> 00:15:00,350
notebook instrument and as soon as

00:14:58,760 --> 00:15:01,819
you're done you save that notebook and

00:15:00,350 --> 00:15:05,000
you become through a web application

00:15:01,819 --> 00:15:06,949
that everyone else sees and all of that

00:15:05,000 --> 00:15:09,500
has all the assets to the data you have

00:15:06,949 --> 00:15:11,209
underneath and so you don't have to

00:15:09,500 --> 00:15:13,610
learn jQuery you don't have to learn

00:15:11,209 --> 00:15:16,130
Ajax you don't have to you know try to

00:15:13,610 --> 00:15:17,750
convert your Python data format into

00:15:16,130 --> 00:15:21,769
something that's where friendly all you

00:15:17,750 --> 00:15:23,750
do is set up a notebook server and a

00:15:21,769 --> 00:15:25,510
data server point them to the same

00:15:23,750 --> 00:15:31,840
notebook files and

00:15:25,510 --> 00:15:35,470
you're good to go now there are of

00:15:31,840 --> 00:15:38,250
course drawbacks let's say you write a

00:15:35,470 --> 00:15:41,290
dashboard that loads a gigabyte of data

00:15:38,250 --> 00:15:45,790
every time you go visit the dashboard

00:15:41,290 --> 00:15:49,990
and you have a hundred businesses I hope

00:15:45,790 --> 00:15:52,450
you have a big enough machine so this is

00:15:49,990 --> 00:15:54,760
not really for large-scale publication

00:15:52,450 --> 00:15:56,890
if your website has a thousand videos

00:15:54,760 --> 00:15:59,560
with every hour this is obviously not

00:15:56,890 --> 00:16:01,150
the right solution but generally in

00:15:59,560 --> 00:16:03,340
especially in the data science world we

00:16:01,150 --> 00:16:05,350
tend to work in smaller teams and you

00:16:03,340 --> 00:16:07,540
make it you know you feel lucky you may

00:16:05,350 --> 00:16:09,580
get 20 Qing visitors per day and that

00:16:07,540 --> 00:16:14,800
would be great all of their 20k visitors

00:16:09,580 --> 00:16:16,960
per day and and that's enough it doesn't

00:16:14,800 --> 00:16:20,650
it's not a huge draw on your resources

00:16:16,960 --> 00:16:22,450
and you'll you get to let your results

00:16:20,650 --> 00:16:24,340
do the talking you don't have to be

00:16:22,450 --> 00:16:27,970
present for mating every time someone to

00:16:24,340 --> 00:16:29,770
look at your results and it is really

00:16:27,970 --> 00:16:30,370
really fast from portlet our kingdom

00:16:29,770 --> 00:16:33,070
application

00:16:30,370 --> 00:16:35,080
so Harry here we gave him the power to

00:16:33,070 --> 00:16:38,650
make plots and next minute we have three

00:16:35,080 --> 00:16:48,760
hundred twenty seven thousand plot okay

00:16:38,650 --> 00:16:51,730
so let's let's make one and so yeah okay

00:16:48,760 --> 00:16:55,150
so uh before we were loading some data

00:16:51,730 --> 00:16:56,590
relating to Melbourne now let's in the

00:16:55,150 --> 00:16:58,420
same data file we actually have all the

00:16:56,590 --> 00:17:00,130
capital cities so let's build a

00:16:58,420 --> 00:17:04,780
dashboard with a couple drop-down boxes

00:17:00,130 --> 00:17:06,760
and we'll show you the display importing

00:17:04,780 --> 00:17:12,400
some things up there and we use plotly

00:17:06,760 --> 00:17:15,520
because we like to keep our sanity here

00:17:12,400 --> 00:17:20,550
we load the data and define the state of

00:17:15,520 --> 00:17:23,290
numbers for every capital city this is a

00:17:20,550 --> 00:17:29,740
plot li plotting function as you see it

00:17:23,290 --> 00:17:33,370
looks quite similar to before and let's

00:17:29,740 --> 00:17:37,919
say we pick Hobart and winter that's

00:17:33,370 --> 00:17:42,539
what we see but if we say click

00:17:37,919 --> 00:17:44,710
Canberra we see is actually a bit colder

00:17:42,539 --> 00:17:48,669
so if you are friendly a whole bar told

00:17:44,710 --> 00:17:52,929
them to stop complaining this is a

00:17:48,669 --> 00:18:02,200
widget for selecting the city no Java

00:17:52,929 --> 00:18:04,809
scripts over selecting a season and we

00:18:02,200 --> 00:18:07,779
simply hook them up together my

00:18:04,809 --> 00:18:09,669
interactive object and in this

00:18:07,779 --> 00:18:12,130
particular case it's interacting the

00:18:09,669 --> 00:18:14,070
different widgets to the Python callback

00:18:12,130 --> 00:18:16,419
function I'll play a plot scalar and

00:18:14,070 --> 00:18:20,159
that goes into the widget pulls out a

00:18:16,419 --> 00:18:20,159
value close a plot function

00:18:24,500 --> 00:18:37,640
and so as you click on different things

00:18:26,540 --> 00:18:40,880
they update right now we can hold on now

00:18:37,640 --> 00:18:42,680
we can actually modify the look and feel

00:18:40,880 --> 00:18:46,070
of things so this is just a notebook

00:18:42,680 --> 00:18:47,750
extension and if we have more cells I

00:18:46,070 --> 00:18:50,090
can show you more but we can accurately

00:18:47,750 --> 00:18:54,950
change the width of things and put more

00:18:50,090 --> 00:18:57,620
things here we can drag it around right

00:18:54,950 --> 00:19:00,320
and so for this whole process you

00:18:57,620 --> 00:19:02,090
haven't done any CSS no JavaScript your

00:19:00,320 --> 00:19:04,010
callback so important you have made a

00:19:02,090 --> 00:19:14,120
web app without leaving part and land

00:19:04,010 --> 00:19:17,780
and hmm lost it there we go okay and so

00:19:14,120 --> 00:19:21,050
this is app we just made and if we spend

00:19:17,780 --> 00:19:25,640
a bit more effort at you know playing

00:19:21,050 --> 00:19:31,160
with a layout this is what we get sodium

00:19:25,640 --> 00:19:32,690
in this work all right you know us many

00:19:31,160 --> 00:19:35,230
of you would have played with you know

00:19:32,690 --> 00:19:38,420
using markdown descriptions in notebooks

00:19:35,230 --> 00:19:43,550
this is a markdown cell we have some

00:19:38,420 --> 00:19:49,520
text explaining what the plots to okay

00:19:43,550 --> 00:19:51,620
we have interactivity for everything the

00:19:49,520 --> 00:19:56,860
output you can actually hook this in to

00:19:51,620 --> 00:19:56,860
update multiple plots hold out summer

00:19:57,970 --> 00:20:10,100
Darwin someone as you can see oh yeah

00:20:03,560 --> 00:20:12,770
okay right and so this is a very simple

00:20:10,100 --> 00:20:16,160
way of turning your triple notebooks

00:20:12,770 --> 00:20:18,260
from a scientist experiment inside your

00:20:16,160 --> 00:20:19,940
own little laptop through something that

00:20:18,260 --> 00:20:22,790
you can share with your managers with

00:20:19,940 --> 00:20:25,280
external collaborators you can you can

00:20:22,790 --> 00:20:30,170
let your daughter do the talking well

00:20:25,280 --> 00:20:33,020
and the github will have a sample of the

00:20:30,170 --> 00:20:34,760
data we use and all the notebooks so it

00:20:33,020 --> 00:20:37,820
also has some installation instructions

00:20:34,760 --> 00:20:39,590
hopefully they work and the slides and

00:20:37,820 --> 00:20:55,610
right that's right so on feel free to go

00:20:39,590 --> 00:21:00,320
replicate that and thank you we've got a

00:20:55,610 --> 00:21:04,760
little bit of time for questions a great

00:21:00,320 --> 00:21:10,490
presentation my question is given that

00:21:04,760 --> 00:21:15,920
Jupiter is Julia Python and are you

00:21:10,490 --> 00:21:19,100
didn't compare ggplot2 as one of the

00:21:15,920 --> 00:21:23,630
graphics solutions which i think is has

00:21:19,100 --> 00:21:25,880
some very very powerful advantages and

00:21:23,630 --> 00:21:28,130
features we were trying to stay in

00:21:25,880 --> 00:21:30,080
Python land s this is a Python

00:21:28,130 --> 00:21:34,100
conference whether but you're using

00:21:30,080 --> 00:21:45,770
Jupiter that's true but the Python

00:21:34,100 --> 00:21:47,900
inside Jupiter I haven't used it on the

00:21:45,770 --> 00:21:49,730
web so I can't I've used it like four

00:21:47,900 --> 00:21:51,650
papers and is great but I haven't used

00:21:49,730 --> 00:21:57,200
it interactively on the web I'm not sure

00:21:51,650 --> 00:21:57,650
how how doesn't that respect yeah great

00:21:57,200 --> 00:21:59,660
talk

00:21:57,650 --> 00:22:02,420
wonder if you have any thoughts on

00:21:59,660 --> 00:22:04,730
Jupiter lab and how that might affect

00:22:02,420 --> 00:22:06,320
your work and whether you're excited or

00:22:04,730 --> 00:22:09,610
the opposite

00:22:06,320 --> 00:22:13,430
Jupiter lab is very exciting and the

00:22:09,610 --> 00:22:15,830
last dozen also commits to Jupiter

00:22:13,430 --> 00:22:17,690
dashboard server has been making it

00:22:15,830 --> 00:22:19,220
compatible with Drupal lab so yes it's

00:22:17,690 --> 00:22:25,640
definitely on the horizon but it's not

00:22:19,220 --> 00:22:26,930
quite ready yet for the talk you are

00:22:25,640 --> 00:22:29,000
running your notebooks off your own

00:22:26,930 --> 00:22:30,950
laptop where would they normally be

00:22:29,000 --> 00:22:32,360
running in your work environment you do

00:22:30,950 --> 00:22:33,230
do it on your own laptop and then share

00:22:32,360 --> 00:22:34,790
that to other people or your

00:22:33,230 --> 00:22:37,760
decentralized server and had it what's

00:22:34,790 --> 00:22:40,700
that using oh we have a fairly beefy

00:22:37,760 --> 00:22:42,680
Linux box that we share around and we've

00:22:40,700 --> 00:22:46,520
got Jupiter hub running on there so

00:22:42,680 --> 00:22:49,280
everyone log into the sages but you can

00:22:46,520 --> 00:22:51,020
run along a little app on that but we

00:22:49,280 --> 00:22:51,680
also have a VM for just running the

00:22:51,020 --> 00:22:53,840
dashboard so

00:22:51,680 --> 00:22:56,120
our server resources don't get to you

00:22:53,840 --> 00:23:00,560
stop it people come to the to the

00:22:56,120 --> 00:23:04,280
dashboard itself um just just a question

00:23:00,560 --> 00:23:06,440
on I guess but one of the things that

00:23:04,280 --> 00:23:09,530
the group I work in is kind of

00:23:06,440 --> 00:23:10,910
struggling with I guess is is which one

00:23:09,530 --> 00:23:13,430
of these sort of solutions we end up

00:23:10,910 --> 00:23:15,890
going with for reporting I guess have

00:23:13,430 --> 00:23:17,780
you where are you with this it sounds

00:23:15,890 --> 00:23:19,160
like a relatively kind of you like

00:23:17,780 --> 00:23:22,280
you're relatively far along with this

00:23:19,160 --> 00:23:25,040
but is this the way you're presenting

00:23:22,280 --> 00:23:28,280
your results to the clients for the

00:23:25,040 --> 00:23:30,800
better word or is it still other still

00:23:28,280 --> 00:23:32,300
ten things up in the air for you or our

00:23:30,800 --> 00:23:34,340
current dashboard actually uses

00:23:32,300 --> 00:23:37,550
matplotlib well we plan to move our

00:23:34,340 --> 00:23:39,350
laptops to totleigh we quite like the

00:23:37,550 --> 00:23:41,600
dashboard was totally solution we think

00:23:39,350 --> 00:23:44,630
yes it's a pretty nice way to go but

00:23:41,600 --> 00:23:46,250
we're open to this this area is really

00:23:44,630 --> 00:23:48,440
fast evolving so every day is I guess

00:23:46,250 --> 00:23:53,600
something new so you have to we open to

00:23:48,440 --> 00:23:55,070
new new things that come up yeah hi what

00:23:53,600 --> 00:23:56,720
happens if you get really lucky and you

00:23:55,070 --> 00:24:00,080
suddenly have a thousand people that

00:23:56,720 --> 00:24:03,500
want to look at it where can you go do

00:24:00,080 --> 00:24:05,690
you have lots of money for Amazon no um

00:24:03,500 --> 00:24:08,780
in that case when you also don't start

00:24:05,690 --> 00:24:11,360
getting lots of visitors you may want to

00:24:08,780 --> 00:24:13,940
actually commit to doing some of your

00:24:11,360 --> 00:24:15,290
code in JavaScript and you're like you

00:24:13,940 --> 00:24:18,770
know want to build a proper web app at

00:24:15,290 --> 00:24:22,040
that point if you if your site is open

00:24:18,770 --> 00:24:28,730
to the world wide web and you have lots

00:24:22,040 --> 00:24:31,400
of lots of users but getting that many

00:24:28,730 --> 00:24:33,550
users should bring a lot of funding as

00:24:31,400 --> 00:24:33,550
well

00:24:35,080 --> 00:24:41,300
well we can also note that plotly is

00:24:39,410 --> 00:24:44,000
quite capable of farm it has a

00:24:41,300 --> 00:24:45,350
JavaScript side as well so you don't

00:24:44,000 --> 00:24:48,770
really necessarily you have to change

00:24:45,350 --> 00:24:50,810
your technology like you can pretty

00:24:48,770 --> 00:24:52,670
easily convert your plotly your Python

00:24:50,810 --> 00:24:58,390
plotly to JavaScript

00:24:52,670 --> 00:24:58,390
so that's consideration yeah

00:25:00,479 --> 00:25:05,859
so how do you balance the need between

00:25:03,719 --> 00:25:08,109
interactive interactivity and

00:25:05,859 --> 00:25:15,899
interactive plots versus publication

00:25:08,109 --> 00:25:17,619
quality figures yeah well obviously the

00:25:15,899 --> 00:25:21,129
requirements are different for

00:25:17,619 --> 00:25:23,499
interactivity and publication so at the

00:25:21,129 --> 00:25:25,929
moment as I said most of our plots are

00:25:23,499 --> 00:25:28,409
in Mapetla because that is what's used

00:25:25,929 --> 00:25:31,299
for publication but we will explore how

00:25:28,409 --> 00:25:33,999
how plot lead us in that respect it is

00:25:31,299 --> 00:25:36,249
possible to like just export your plotly

00:25:33,999 --> 00:25:38,609
plots so as you can do in maps at leap

00:25:36,249 --> 00:25:42,609
so presumably it's just a matter of farm

00:25:38,609 --> 00:25:46,209
you know styling them such that they our

00:25:42,609 --> 00:25:48,069
publication quality yes your dashboard

00:25:46,209 --> 00:25:52,689
server talking to remote kernels through

00:25:48,069 --> 00:25:57,249
the kernel gecko gateway yes it is but

00:25:52,689 --> 00:25:59,919
for security reasons the kernel gateway

00:25:57,249 --> 00:26:03,339
is only halting to is only listening to

00:25:59,919 --> 00:26:05,259
locals and then can also in that case

00:26:03,339 --> 00:26:13,359
you can't actually attack the Gateway

00:26:05,259 --> 00:26:15,369
directly I was just wondering if in

00:26:13,359 --> 00:26:19,269
dashboard there's some sort of a halfway

00:26:15,369 --> 00:26:22,389
house back to the path notebook in a

00:26:19,269 --> 00:26:27,489
sense of having widgets that are

00:26:22,389 --> 00:26:28,989
actually parsing code widgets like you

00:26:27,489 --> 00:26:34,299
know widget in which you can enter

00:26:28,989 --> 00:26:37,089
Python code there is a text widget like

00:26:34,299 --> 00:26:39,759
the widgets where you can enter text but

00:26:37,089 --> 00:26:41,679
I think it's quite easy to make sure

00:26:39,759 --> 00:26:42,959
that the input is sanitized I don't

00:26:41,679 --> 00:26:44,739
think there's any code execution

00:26:42,959 --> 00:26:46,989
possibilities through the widget um's

00:26:44,739 --> 00:26:52,199
yeah there's no like sandboxed eval or

00:26:46,989 --> 00:26:52,199
something I don't know

00:26:53,069 --> 00:26:59,499
so the dashboard is made in such a way

00:26:57,219 --> 00:27:01,269
where you can't execute arbitrary code

00:26:59,499 --> 00:27:04,809
only called that already existed inside

00:27:01,269 --> 00:27:08,769
a notebook and so if you made a widget

00:27:04,809 --> 00:27:10,270
that can accept arbitrary code into the

00:27:08,769 --> 00:27:15,809
intuitive widget and execute

00:27:10,270 --> 00:27:15,809
you may as well use a notebook instead

00:27:16,170 --> 00:27:22,690
yeah yeah like it you know if you start

00:27:20,530 --> 00:27:26,320
allowing people to execute after a cold

00:27:22,690 --> 00:27:28,540
from a dashboard interface it kind of

00:27:26,320 --> 00:27:31,750
gets rid of a lot of the security gains

00:27:28,540 --> 00:27:33,550
from using a dashboard investment and so

00:27:31,750 --> 00:27:35,320
you know at that point you need to be

00:27:33,550 --> 00:27:39,910
very very careful about who you give the

00:27:35,320 --> 00:27:41,559
dashboard URL to there is also the

00:27:39,910 --> 00:27:43,240
option of making the dashboards require

00:27:41,559 --> 00:27:45,100
authentication we haven't done in our

00:27:43,240 --> 00:27:49,750
case because of the way we set it up but

00:27:45,100 --> 00:27:52,870
that is possible and I think we've got

00:27:49,750 --> 00:27:55,300
time for one more question and just on

00:27:52,870 --> 00:27:58,030
authentication is it possible to

00:27:55,300 --> 00:28:04,240
restrict access to certain subsets of

00:27:58,030 --> 00:28:05,200
the data via the dashboard I think it

00:28:04,240 --> 00:28:07,510
would have to make the users

00:28:05,200 --> 00:28:10,750
authenticate in that case and then do

00:28:07,510 --> 00:28:11,350
some kind of oh yeah the base axis I'm

00:28:10,750 --> 00:28:13,090
wondering if there's any more

00:28:11,350 --> 00:28:17,890
fine-grained access control just beyond

00:28:13,090 --> 00:28:19,480
have access or don't have access not not

00:28:17,890 --> 00:28:22,660
in the current version it's still quite

00:28:19,480 --> 00:28:25,809
early but um you can possibly program

00:28:22,660 --> 00:28:27,400
the model we should note that this like

00:28:25,809 --> 00:28:28,300
dashboarding stuff wasn't available like

00:28:27,400 --> 00:28:32,830
six months ago

00:28:28,300 --> 00:28:35,110
so it's something that's very new okay

00:28:32,830 --> 00:28:38,490
well thank you very much for a really

00:28:35,110 --> 00:28:38,490
engaging presentation

00:28:40,610 --> 00:28:42,670

YouTube URL: https://www.youtube.com/watch?v=aXR2d9k9-h4


