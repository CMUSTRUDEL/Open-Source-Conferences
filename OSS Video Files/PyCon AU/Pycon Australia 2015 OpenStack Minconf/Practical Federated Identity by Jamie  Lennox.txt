Title: Practical Federated Identity by Jamie  Lennox
Publication date: 2015-08-06
Playlist: Pycon Australia 2015 OpenStack Minconf
Description: 
	Federated Identity was once again a highlight of the OpenStack summit in Vancouver this time with the announcement of keystone to keystone federation that will pave the  way for inter-cloud workloads. 

In the past I have done presentations on what Federated Identity is, however in this talk we delve into the more practical requirements of connecting to an IdP, discuss the changes in workflow required to authenticate your applications, how to configure web single sign on with horizon, what is possible today and the pain points you may encounter using federation.

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:09,519 --> 00:00:13,660
all right I'm greetings everyone so my

00:00:12,219 --> 00:00:14,730
name is Jamie on the locks I'm seeing

00:00:13,660 --> 00:00:16,859
yourself

00:00:14,730 --> 00:00:19,320
hat I've been a core member of the

00:00:16,859 --> 00:00:21,630
Keystone team for about 18 months and in

00:00:19,320 --> 00:00:24,060
that time federated the entity has been

00:00:21,630 --> 00:00:27,060
one of the the big advancements in

00:00:24,060 --> 00:00:29,789
keystone and OpenStack in general but

00:00:27,060 --> 00:00:31,710
it's also been talked a lot about over

00:00:29,789 --> 00:00:33,750
that time if you're interested in

00:00:31,710 --> 00:00:36,360
federated identity you've probably seen

00:00:33,750 --> 00:00:39,449
a couple of talks and waded through a

00:00:36,360 --> 00:00:40,470
hell of a lot of blog posts so as asked

00:00:39,449 --> 00:00:42,420
this you to do something a little bit

00:00:40,470 --> 00:00:45,269
more technical and a little bit more in

00:00:42,420 --> 00:00:47,719
depth so we're going to live dangerously

00:00:45,269 --> 00:00:50,760
and try to do a live walkthrough of

00:00:47,719 --> 00:00:55,350
setting up horizon and Keystone using

00:00:50,760 --> 00:00:57,270
web SSO so web single sign-on so

00:00:55,350 --> 00:00:59,280
hopefully the point here is to check out

00:00:57,270 --> 00:01:01,649
some of the warts and explain the

00:00:59,280 --> 00:01:03,149
purposes of all the config options as we

00:01:01,649 --> 00:01:08,490
go through that we have to set to make

00:01:03,149 --> 00:01:10,289
it work so because of that I'm not going

00:01:08,490 --> 00:01:11,369
to do a whole lot of explanation of all

00:01:10,289 --> 00:01:13,530
the different types of identity

00:01:11,369 --> 00:01:15,840
protocols they were all covered online

00:01:13,530 --> 00:01:17,429
and a high level they're all doing a

00:01:15,840 --> 00:01:19,950
fairly similar job they're trying to

00:01:17,429 --> 00:01:21,599
manage your user credentials so that you

00:01:19,950 --> 00:01:23,640
never have to give your secrets your

00:01:21,599 --> 00:01:26,280
password or anything to your service

00:01:23,640 --> 00:01:28,080
provider now in Keystone sam'l is the

00:01:26,280 --> 00:01:30,090
most mature of these protocols and it's

00:01:28,080 --> 00:01:31,770
mainly because it's used a lot in B

00:01:30,090 --> 00:01:35,459
enterprises and it's what we targeted

00:01:31,770 --> 00:01:36,780
first most of what's available here it's

00:01:35,459 --> 00:01:40,080
going to work the same way for the other

00:01:36,780 --> 00:01:43,229
federated protocols so the high level

00:01:40,080 --> 00:01:44,970
flow is you have two types of entities

00:01:43,229 --> 00:01:47,069
the service provider and the identity

00:01:44,970 --> 00:01:48,690
provider service provider is what you're

00:01:47,069 --> 00:01:50,640
trying to get resources off and the

00:01:48,690 --> 00:01:54,750
identity provider is the store of your

00:01:50,640 --> 00:01:56,550
user information you asked the service

00:01:54,750 --> 00:01:58,860
provider for a resource and we're not

00:01:56,550 --> 00:02:00,840
logged in yet so it rejects you and your

00:01:58,860 --> 00:02:03,629
browser gets redirected over to the

00:02:00,840 --> 00:02:05,580
identity provider you do the standard

00:02:03,629 --> 00:02:07,229
user name and password or hopefully

00:02:05,580 --> 00:02:10,050
something a little bit better in terms

00:02:07,229 --> 00:02:12,330
of login over there and the identity

00:02:10,050 --> 00:02:14,640
provider returns an assertion and an

00:02:12,330 --> 00:02:17,310
assertion is all of the information that

00:02:14,640 --> 00:02:20,640
that identity provider knows about the

00:02:17,310 --> 00:02:22,170
user that gets redirected through your

00:02:20,640 --> 00:02:24,540
browser again back to the service

00:02:22,170 --> 00:02:27,250
provider and the service provider can

00:02:24,540 --> 00:02:29,890
decode or decrypt all that information

00:02:27,250 --> 00:02:33,400
and make its own judgment then using

00:02:29,890 --> 00:02:37,840
that information on what the user is

00:02:33,400 --> 00:02:40,750
allowed to do on that service so an

00:02:37,840 --> 00:02:42,160
OpenStack it's not that simple we've got

00:02:40,750 --> 00:02:44,290
separate services for all these things

00:02:42,160 --> 00:02:46,810
so in this analogy Keystone is going to

00:02:44,290 --> 00:02:49,240
be our service provider and that doesn't

00:02:46,810 --> 00:02:51,580
work Keystone doesn't have forms it

00:02:49,240 --> 00:02:53,770
doesn't have fancies login pages and web

00:02:51,580 --> 00:02:55,860
redirects and nor do we want to teach

00:02:53,770 --> 00:02:58,660
horizon how to deal with you know how to

00:02:55,860 --> 00:03:00,280
retrieve all of these different web SSI

00:02:58,660 --> 00:03:04,540
authentication methods that's not its

00:03:00,280 --> 00:03:07,120
job either so we're specifically talking

00:03:04,540 --> 00:03:08,560
about web single sign-on so users having

00:03:07,120 --> 00:03:11,050
your web browser and being redirected

00:03:08,560 --> 00:03:13,330
all over the place and so we need to

00:03:11,050 --> 00:03:18,330
figure out how then to mix Keystone and

00:03:13,330 --> 00:03:18,330
horizon together and get this to work so

00:03:18,959 --> 00:03:24,790
at a high level we need our browsers to

00:03:22,420 --> 00:03:28,230
go to horizon they then get redirected

00:03:24,790 --> 00:03:31,120
over the Keystone Keystone manages your

00:03:28,230 --> 00:03:33,790
redirects you again over to the IDP the

00:03:31,120 --> 00:03:35,680
identity provider the you log in there

00:03:33,790 --> 00:03:38,650
the identity provider will return to

00:03:35,680 --> 00:03:41,500
Keystone the assertion Keystone will

00:03:38,650 --> 00:03:43,920
take that assertion log you in an issue

00:03:41,500 --> 00:03:47,470
you were token based on the assertion

00:03:43,920 --> 00:03:49,630
send that token to horizon and then it's

00:03:47,470 --> 00:03:51,489
business as usual for horizon it doesn't

00:03:49,630 --> 00:03:52,989
have any once it's got a token it

00:03:51,489 --> 00:03:54,850
doesn't know specifically whether you

00:03:52,989 --> 00:03:58,560
logged in with Federation or any other

00:03:54,850 --> 00:04:01,120
your standard user name and password and

00:03:58,560 --> 00:04:02,530
so this is all again web exchanges so

00:04:01,120 --> 00:04:04,739
those loopy lines from Horizon to

00:04:02,530 --> 00:04:06,790
Keystone and such there or web redirects

00:04:04,739 --> 00:04:10,470
horizon will never talk directly to

00:04:06,790 --> 00:04:12,850
Keystone or in Keystone to the IDP

00:04:10,470 --> 00:04:14,970
reality it's way more complicated than

00:04:12,850 --> 00:04:14,970
that

00:04:15,590 --> 00:04:20,940
this is a real diagram that I stole from

00:04:18,900 --> 00:04:22,260
my manager and they've shown it to

00:04:20,940 --> 00:04:23,700
clients and this is sort of the

00:04:22,260 --> 00:04:25,980
recommended what we're going to set up

00:04:23,700 --> 00:04:28,889
today you don't need to know most of it

00:04:25,980 --> 00:04:32,880
it's horizon the Keystone Keystone to

00:04:28,889 --> 00:04:34,610
the IDP IDP returns assertion turn key

00:04:32,880 --> 00:04:39,540
stone turns into a token horizon

00:04:34,610 --> 00:04:41,550
continue for our salmon provider we're

00:04:39,540 --> 00:04:43,410
going to be using epsilon so if salons

00:04:41,550 --> 00:04:47,100
are fairly new project and its goal is

00:04:43,410 --> 00:04:48,900
to be a standalone SSO front-end to

00:04:47,100 --> 00:04:52,169
existing or your older identity

00:04:48,900 --> 00:04:54,660
providers so it can take it information

00:04:52,169 --> 00:04:57,150
from a couple of sources like sssd or

00:04:54,660 --> 00:04:58,860
pam at the moment and there are others

00:04:57,150 --> 00:05:02,010
that are expected to come in the next

00:04:58,860 --> 00:05:03,419
set of releases you can log into that in

00:05:02,010 --> 00:05:06,450
a number of ways depending on what the

00:05:03,419 --> 00:05:08,400
back end supports but then provides that

00:05:06,450 --> 00:05:11,100
information from that back-end source as

00:05:08,400 --> 00:05:14,610
a sam'l assertion this means that you

00:05:11,100 --> 00:05:17,370
can get single sign-on and web

00:05:14,610 --> 00:05:19,440
federation from your crusty old you know

00:05:17,370 --> 00:05:20,820
IDP that otherwise doesn't support it

00:05:19,440 --> 00:05:24,720
and never have to have modified that

00:05:20,820 --> 00:05:26,640
back-end at the moment the federated

00:05:24,720 --> 00:05:28,590
protocol is sam'l that's the only one

00:05:26,640 --> 00:05:31,140
supported but I know open ID connect and

00:05:28,590 --> 00:05:32,430
there are others in the future it's

00:05:31,140 --> 00:05:35,370
officially going to be provided as part

00:05:32,430 --> 00:05:37,710
of rail 72 which is sometime later this

00:05:35,370 --> 00:05:39,720
year but it's already packaged in

00:05:37,710 --> 00:05:42,419
available in fedora if you want to test

00:05:39,720 --> 00:05:44,910
it out and it's obviously open source

00:05:42,419 --> 00:05:50,490
and that's the link if you want to find

00:05:44,910 --> 00:05:53,669
out some more information all right fur

00:05:50,490 --> 00:05:55,020
to keep it relatively simple as simple

00:05:53,669 --> 00:05:56,310
as this stuff can get I've got two

00:05:55,020 --> 00:05:59,850
virtual machines set up on the laptop

00:05:56,310 --> 00:06:03,060
here one is running free IPA and epsilon

00:05:59,850 --> 00:06:06,539
the other is running OpenStack via pack

00:06:03,060 --> 00:06:08,340
stack it's the most basic somewhat

00:06:06,539 --> 00:06:10,590
realistic OpenStack deployment I could

00:06:08,340 --> 00:06:14,940
come up with just to prevent the laptop

00:06:10,590 --> 00:06:17,020
from melting down so Nova networks into

00:06:14,940 --> 00:06:19,210
glance

00:06:17,020 --> 00:06:20,650
and I'm not even gonna get to the point

00:06:19,210 --> 00:06:24,970
of actually launching a vm because

00:06:20,650 --> 00:06:26,740
everything else would stop from that

00:06:24,970 --> 00:06:29,500
I've converted the entire deployment to

00:06:26,740 --> 00:06:31,180
use v3 authentication you if you're go

00:06:29,500 --> 00:06:34,419
and do anything with Federation you have

00:06:31,180 --> 00:06:36,840
to be using v3 off and that includes the

00:06:34,419 --> 00:06:39,129
Nova service users and things like that

00:06:36,840 --> 00:06:41,919
authenticate it or you know getting v3

00:06:39,129 --> 00:06:43,870
tokens this stuff this the Federation

00:06:41,919 --> 00:06:45,550
stuff is not representable under v2 and

00:06:43,870 --> 00:06:51,639
Keystone will just give you an access

00:06:45,550 --> 00:06:53,580
denied I've pushed the scripts the

00:06:51,639 --> 00:06:55,599
ansible scripts i was using up to github

00:06:53,580 --> 00:06:57,190
included there are all of like the hack

00:06:55,599 --> 00:07:00,039
notes I've had to do like making the

00:06:57,190 --> 00:07:03,250
presentation it does depend on some

00:07:00,039 --> 00:07:05,620
rails 72 nightly repos but that's just

00:07:03,250 --> 00:07:08,560
because they're not public yet I needed

00:07:05,620 --> 00:07:10,080
the latest version of epsilon and I

00:07:08,560 --> 00:07:14,830
didn't want to build this all on fedora

00:07:10,080 --> 00:07:16,569
so by the time you know yeah so it'll be

00:07:14,830 --> 00:07:19,930
all available in real 72 there's nothing

00:07:16,569 --> 00:07:27,789
there that's particularly private all

00:07:19,930 --> 00:07:31,650
right the fun stuff now bear with me

00:07:27,789 --> 00:07:31,650
flip over screens

00:07:38,030 --> 00:07:45,070
alright so if you haven't seen it before

00:07:40,730 --> 00:07:50,330
this is free IPA the website at least

00:07:45,070 --> 00:07:53,780
I've got one user here Jamie and he is a

00:07:50,330 --> 00:07:55,400
member of the engineering group and I'm

00:07:53,780 --> 00:08:00,110
going to try and map that through into

00:07:55,400 --> 00:08:03,350
being picked up from horizon and I've

00:08:00,110 --> 00:08:08,480
also got here a branded but fairly

00:08:03,350 --> 00:08:10,100
standard horizon login that all yeah it

00:08:08,480 --> 00:08:12,440
looks like a normal horizon I'd show it

00:08:10,100 --> 00:08:15,890
but it the last time I tried it took a

00:08:12,440 --> 00:08:18,220
while with the PM's all right we don't

00:08:15,890 --> 00:08:18,220
need that

00:08:22,810 --> 00:08:25,710
No

00:08:29,560 --> 00:08:38,120
sorry alright so the way we're going to

00:08:36,020 --> 00:08:40,070
try and set this up is we're going to do

00:08:38,120 --> 00:08:43,400
it in the way that the earth would

00:08:40,070 --> 00:08:45,290
normally flow so I said I repeated that

00:08:43,400 --> 00:08:47,900
sequence of steps a couple of times

00:08:45,290 --> 00:08:50,150
we're going to it's not the most

00:08:47,900 --> 00:08:51,740
efficient way if you know all of what

00:08:50,150 --> 00:08:54,170
the options are you can set these up in

00:08:51,740 --> 00:08:55,370
a lot less commands but I'm going to

00:08:54,170 --> 00:08:57,200
show it through you know setting up

00:08:55,370 --> 00:08:58,850
horizon first and then showing the next

00:08:57,200 --> 00:09:02,560
step in the next step so it shows flows

00:08:58,850 --> 00:09:04,820
all the way through if this doesn't work

00:09:02,560 --> 00:09:08,390
I'm just gonna have to dance a little

00:09:04,820 --> 00:09:10,520
bit or something because federated

00:09:08,390 --> 00:09:12,800
identity is kind of hard to show because

00:09:10,520 --> 00:09:14,420
it just you know it works in the

00:09:12,800 --> 00:09:16,010
background and if it fails all you'll

00:09:14,420 --> 00:09:17,420
get is an access denied and it's going

00:09:16,010 --> 00:09:21,830
to take me about 20 minutes to debug it

00:09:17,420 --> 00:09:25,690
so sorry if it in advance if this

00:09:21,830 --> 00:09:27,860
doesn't go well all right first steps

00:09:25,690 --> 00:09:28,970
this is what they want to live

00:09:27,860 --> 00:09:31,270
dangerously and show something

00:09:28,970 --> 00:09:31,270
complicated

00:09:34,889 --> 00:09:39,299
alright first step see we're going to be

00:09:36,720 --> 00:09:43,439
modifying horizon so we've got our

00:09:39,299 --> 00:09:48,839
Keystone URL set up first thing an able

00:09:43,439 --> 00:09:52,410
web SSO fairly trivial the webisode

00:09:48,839 --> 00:09:53,970
choices we want to leave on our standard

00:09:52,410 --> 00:09:55,350
Keystone credentials so people should

00:09:53,970 --> 00:09:57,359
still be able to log in with directly

00:09:55,350 --> 00:09:59,819
with horizon we're going to turn on

00:09:57,359 --> 00:10:01,499
sam'l too we're going to call it epsilon

00:09:59,819 --> 00:10:05,970
because that's a bit more descriptive

00:10:01,499 --> 00:10:11,189
and we're going to say that that Semel

00:10:05,970 --> 00:10:15,209
to provider is the default now this does

00:10:11,189 --> 00:10:16,919
actually show off a bug which have to

00:10:15,209 --> 00:10:19,139
live with for the moment it should be

00:10:16,919 --> 00:10:23,970
fixed by the time it's ready but if I

00:10:19,139 --> 00:10:26,100
now flip over to horizon there's too

00:10:23,970 --> 00:10:30,959
much running on this laptop I tried to

00:10:26,100 --> 00:10:33,889
find a bigger machine but that's really

00:10:30,959 --> 00:10:33,889
bad okay

00:10:33,900 --> 00:10:38,670
to go over to rytan and authenticate

00:10:36,660 --> 00:10:41,640
using epsilon now the bug here is that

00:10:38,670 --> 00:10:44,250
normally when you these username

00:10:41,640 --> 00:10:46,320
passwords aren't useful for if so on you

00:10:44,250 --> 00:10:47,910
that's their own credentials if you flip

00:10:46,320 --> 00:10:49,860
over epsilon they're supposed to

00:10:47,910 --> 00:10:52,160
disappear and i'm not sure what the

00:10:49,860 --> 00:10:55,140
horizon guys are branded wrongly there

00:10:52,160 --> 00:10:57,600
so we just have to ignore the username

00:10:55,140 --> 00:10:59,730
password box tena koe using epsilon and

00:10:57,600 --> 00:11:04,170
sign in now this is obviously not going

00:10:59,730 --> 00:11:06,990
to work but this will be horizon pushing

00:11:04,170 --> 00:11:12,300
out to Keystone and saying authenticate

00:11:06,990 --> 00:11:15,230
me and fairly useless error message now

00:11:12,300 --> 00:11:18,780
we need to set up that hope that apache

00:11:15,230 --> 00:11:21,960
handles that request and forwards you

00:11:18,780 --> 00:11:23,610
over to the proper identity provider now

00:11:21,960 --> 00:11:28,490
there's a little bit of magic involved

00:11:23,610 --> 00:11:33,090
here it's an epsilon client install and

00:11:28,490 --> 00:11:34,170
it's just a few commands in the later

00:11:33,090 --> 00:11:35,850
version of you of these have been cut

00:11:34,170 --> 00:11:38,610
back but what we're doing is we're or

00:11:35,850 --> 00:11:41,730
thermic ating we're saying where the

00:11:38,610 --> 00:11:44,460
protected directory is in epsilon but in

00:11:41,730 --> 00:11:48,150
this instance and we're registering this

00:11:44,460 --> 00:11:55,080
machine as an epsilon service provider

00:11:48,150 --> 00:11:56,250
so let it register and so it's

00:11:55,080 --> 00:11:58,620
generating certificates and

00:11:56,250 --> 00:12:03,320
authenticating now if I go over to

00:11:58,620 --> 00:12:03,320
epsilon and log in

00:12:11,010 --> 00:12:16,860
this is the epsilon interface and we can

00:12:14,730 --> 00:12:19,230
see in our identity providers we've

00:12:16,860 --> 00:12:22,800
registered OpenStack and it's running on

00:12:19,230 --> 00:12:26,220
OpenStack support 5000 v3 so this is

00:12:22,800 --> 00:12:29,520
protecting that URL on the OpenStack

00:12:26,220 --> 00:12:31,770
machine so that's all been sort of

00:12:29,520 --> 00:12:33,180
managed automatically with the epsilon

00:12:31,770 --> 00:12:35,360
client install even though there's a

00:12:33,180 --> 00:12:38,490
number of things to configure there so

00:12:35,360 --> 00:12:42,420
now we need to actually plumb that into

00:12:38,490 --> 00:12:47,250
Apache so you know protect that so we go

00:12:42,420 --> 00:12:51,750
across to HPD and if salon has provided

00:12:47,250 --> 00:12:54,000
this a default file and the reason I use

00:12:51,750 --> 00:12:55,200
that epsilon file the epsilon clients

00:12:54,000 --> 00:12:57,300
all even though it can be confusing a

00:12:55,200 --> 00:13:02,070
demo is it's much easier than trying to

00:12:57,300 --> 00:13:03,930
explain what all of these things do but

00:13:02,070 --> 00:13:05,520
you know there's metadata files there's

00:13:03,930 --> 00:13:11,400
private keys and there's all sorts of

00:13:05,520 --> 00:13:13,320
other family things so these aren't

00:13:11,400 --> 00:13:15,840
required for OpenStack they're just sort

00:13:13,320 --> 00:13:19,890
of redirect to the secure location we'll

00:13:15,840 --> 00:13:23,330
take all of this information and we'll

00:13:19,890 --> 00:13:27,860
put it into our Keystone directory

00:13:23,330 --> 00:13:32,690
there's one more that that melon needs

00:13:27,860 --> 00:13:32,690
which is just the way it's set up and

00:13:32,900 --> 00:13:39,930
that's pretty much it so that's I've

00:13:35,940 --> 00:13:46,860
turned mod auth melon on for this v3 or

00:13:39,930 --> 00:13:48,980
Federation web SSO login point it out of

00:13:46,860 --> 00:13:48,980
that

00:13:50,040 --> 00:13:53,160
restart again

00:13:56,780 --> 00:14:08,760
which this was quick off okay let's try

00:14:04,290 --> 00:14:12,960
a horizon again authenticate using

00:14:08,760 --> 00:14:15,900
epsilon sign in it's bounced me to opa

00:14:12,960 --> 00:14:17,340
the Keystone instance and now Keystone

00:14:15,900 --> 00:14:18,810
has bounced me over to the identity

00:14:17,340 --> 00:14:21,260
provider so this is logging in with

00:14:18,810 --> 00:14:24,210
epsilon and you can see that here from

00:14:21,260 --> 00:14:26,850
you are being asked to log in by port

00:14:24,210 --> 00:14:31,440
5000 v3 so you're being asked to log in

00:14:26,850 --> 00:14:37,320
by keystone not by horizon so I log in

00:14:31,440 --> 00:14:39,510
with the user that I have in IPA that

00:14:37,320 --> 00:14:44,510
should succeed and create the sam'l

00:14:39,510 --> 00:14:44,510
assertion and send me back to Keystone

00:14:46,820 --> 00:14:52,050
okay so that's a landing back in

00:14:50,580 --> 00:14:53,310
keystone and we haven't set up anything

00:14:52,050 --> 00:14:55,350
in keystone yet to know how to handle

00:14:53,310 --> 00:14:59,070
that assertion so that is the error I

00:14:55,350 --> 00:15:04,650
was expecting all right modifying

00:14:59,070 --> 00:15:07,260
Keystone now that message there is

00:15:04,650 --> 00:15:11,400
saying I don't know who dashboard or

00:15:07,260 --> 00:15:14,130
'the web SSO is so in this message we're

00:15:11,400 --> 00:15:16,500
being asked to return us to this and

00:15:14,130 --> 00:15:18,830
that's horizon so we need to tell

00:15:16,500 --> 00:15:23,400
Keystone that's a valid horizon to use

00:15:18,830 --> 00:15:29,430
so if we go to Federation trusted

00:15:23,400 --> 00:15:32,340
dashboards we insert that value into the

00:15:29,430 --> 00:15:35,040
trusted dashboard and that says this is

00:15:32,340 --> 00:15:38,370
an allowed host you know we can accept

00:15:35,040 --> 00:15:42,900
commands for this horizon whilst we're

00:15:38,370 --> 00:15:45,660
here we go to auth we turn on the sam'l

00:15:42,900 --> 00:15:51,180
method we don't need worth we turn on

00:15:45,660 --> 00:15:52,830
Sam all Oh sam'l to and sam'l to is the

00:15:51,180 --> 00:15:54,510
map to plug in so that's saying anything

00:15:52,830 --> 00:15:55,500
that's coming in through sam'l too we're

00:15:54,510 --> 00:15:57,980
going to send that off to our mapping

00:15:55,500 --> 00:15:57,980
engine

00:16:00,749 --> 00:16:14,350
ok restart again hopefully we get a

00:16:07,569 --> 00:16:15,939
little bit further not that go back to

00:16:14,350 --> 00:16:17,429
horizon because it's not really any way

00:16:15,939 --> 00:16:20,589
to restart this in the middle

00:16:17,429 --> 00:16:23,379
authenticate using epsilon bounces to

00:16:20,589 --> 00:16:26,829
Keystone goes to epsilon comes back to

00:16:23,379 --> 00:16:28,269
Keystone alright couldn't find it any

00:16:26,829 --> 00:16:30,459
provider so this is where we need to

00:16:28,269 --> 00:16:33,459
start configuring things in Keystone to

00:16:30,459 --> 00:16:35,290
know who these identity providers are so

00:16:33,459 --> 00:16:43,059
we can do this from here I've already

00:16:35,290 --> 00:16:45,730
got n OS so I've already got my

00:16:43,059 --> 00:16:48,660
credential set up there's nothing

00:16:45,730 --> 00:16:54,730
particularly there you can steal so

00:16:48,660 --> 00:16:58,689
create the identity provider promote ID

00:16:54,730 --> 00:17:02,410
now in web SSO we only have one route in

00:16:58,689 --> 00:17:04,510
the existing CLI authentication methods

00:17:02,410 --> 00:17:05,919
there was a different route established

00:17:04,510 --> 00:17:08,799
different URI for each of the different

00:17:05,919 --> 00:17:10,449
identity providers in web SSO the

00:17:08,799 --> 00:17:12,220
expectation is you would come into

00:17:10,449 --> 00:17:14,980
keystone and you would be presented with

00:17:12,220 --> 00:17:17,079
a discovery page now model of melon and

00:17:14,980 --> 00:17:18,669
mod chip can both handle that and you

00:17:17,079 --> 00:17:20,409
get redirected to pick your you know

00:17:18,669 --> 00:17:22,689
from a list of Google or something

00:17:20,409 --> 00:17:24,100
similar to that so Keystone only has the

00:17:22,689 --> 00:17:28,870
one so we need to set up that this

00:17:24,100 --> 00:17:31,360
remote ID and it's this remote ID maps

00:17:28,870 --> 00:17:35,880
to this new identity provider that we're

00:17:31,360 --> 00:17:38,880
creating create then they provide r

00:17:35,880 --> 00:17:38,880
epsilon

00:17:45,610 --> 00:17:51,580
cool created a new identity provider now

00:17:49,059 --> 00:17:58,510
within that identity provider we are

00:17:51,580 --> 00:18:01,870
going to enable the provider we are

00:17:58,510 --> 00:18:03,160
going to put in a mapping that doesn't

00:18:01,870 --> 00:18:04,660
exist yet because that doesn't get

00:18:03,160 --> 00:18:08,679
validated and it makes the talk easier

00:18:04,660 --> 00:18:14,370
and create the Semel to protocol within

00:18:08,679 --> 00:18:14,370
that mapping within that provider cool

00:18:15,540 --> 00:18:24,730
do the horizon dance could not find

00:18:22,870 --> 00:18:26,140
Matthew epsilon mapping which is pretty

00:18:24,730 --> 00:18:27,760
much what we expected so it means it's

00:18:26,140 --> 00:18:30,130
found the identity provider in Keystone

00:18:27,760 --> 00:18:31,450
it's wanting to know how to turn those

00:18:30,130 --> 00:18:33,610
attributes that are coming in from the

00:18:31,450 --> 00:18:35,260
sam'l assertion into something that

00:18:33,610 --> 00:18:39,070
Keystone understands and creating a

00:18:35,260 --> 00:18:40,780
keystone token from that all right so we

00:18:39,070 --> 00:18:44,919
don't have anything set up so far to

00:18:40,780 --> 00:18:46,630
actually do that so the way I like to do

00:18:44,919 --> 00:18:50,110
this and there's a few ways to do it but

00:18:46,630 --> 00:18:54,190
I kind of just find it easier to print

00:18:50,110 --> 00:18:59,429
out the entire environment that is being

00:18:54,190 --> 00:18:59,429
returned from the sam'l provider so i

00:19:00,299 --> 00:19:05,950
have a test script just here which

00:19:03,929 --> 00:19:09,460
instead of going through the horizon

00:19:05,950 --> 00:19:12,549
will just farm off to this mod whiskey

00:19:09,460 --> 00:19:16,470
and all its doing is pretty printing the

00:19:12,549 --> 00:19:16,470
environment coming in from the request

00:19:21,570 --> 00:19:25,280
a little bit too optimistic

00:19:29,770 --> 00:19:36,260
lagoon fire epsilon goes to epsilon

00:19:33,860 --> 00:19:38,900
comes back and this is everything that

00:19:36,260 --> 00:19:40,220
comes in on a standard request so mixed

00:19:38,900 --> 00:19:42,620
in here are your normal Apache

00:19:40,220 --> 00:19:44,360
environments and everything else but if

00:19:42,620 --> 00:19:48,230
we get halfway down here we start seeing

00:19:44,360 --> 00:19:51,140
things with melon as a prefix so this is

00:19:48,230 --> 00:19:54,260
what I PA and model of melon is telling

00:19:51,140 --> 00:19:56,510
me I know about this user and what free

00:19:54,260 --> 00:19:58,010
IPA is dished up and you can see there

00:19:56,510 --> 00:20:00,890
that it's pulled out my full name and

00:19:58,010 --> 00:20:03,350
things from from IPA and it's given me

00:20:00,890 --> 00:20:05,870
the groups of IPA user and engineering

00:20:03,350 --> 00:20:06,800
so that's great that's that's kind of

00:20:05,870 --> 00:20:08,120
what I'm looking for whether it's that

00:20:06,800 --> 00:20:14,720
engineering group that was going to

00:20:08,120 --> 00:20:21,320
determine my roles initially so we need

00:20:14,720 --> 00:20:24,410
to we don't need that anymore so we need

00:20:21,320 --> 00:20:27,040
to now create the groups that that in

00:20:24,410 --> 00:20:29,690
keystone that that user we mapped into

00:20:27,040 --> 00:20:32,030
because this is federation that user

00:20:29,690 --> 00:20:36,110
doesn't exist permanently in keystone at

00:20:32,030 --> 00:20:39,350
all so the way we get around that is we

00:20:36,110 --> 00:20:41,270
allow you to dynamically map a user into

00:20:39,350 --> 00:20:43,430
a group and you assign roles to the

00:20:41,270 --> 00:20:47,120
group and the user then just gets

00:20:43,430 --> 00:20:50,870
whatever the group gets so start off

00:20:47,120 --> 00:20:55,940
that's not going to work we just create

00:20:50,870 --> 00:21:00,880
a basic role doesn't have any special

00:20:55,940 --> 00:21:07,340
permissions create app icon project

00:21:00,880 --> 00:21:09,080
opens take grew so long gineering so

00:21:07,340 --> 00:21:10,550
fairly obviously that is a group that's

00:21:09,080 --> 00:21:15,130
going to represent engineering from your

00:21:10,550 --> 00:21:15,130
salon and then add

00:21:17,729 --> 00:21:27,909
during project pycon and I add the

00:21:26,319 --> 00:21:30,699
member role so that's the three things I

00:21:27,909 --> 00:21:32,589
just set up then so any user that is

00:21:30,699 --> 00:21:34,029
mapped into that epsilon engineering

00:21:32,589 --> 00:21:40,329
group is going to have the member role

00:21:34,029 --> 00:21:41,919
on the pike on project now the next bit

00:21:40,329 --> 00:21:44,589
is kind of where it gets a little bit

00:21:41,919 --> 00:21:46,569
tricky we need to set up the mapping so

00:21:44,589 --> 00:21:51,669
all of that information that came in

00:21:46,569 --> 00:21:54,429
from the whiskey how do we actually turn

00:21:51,669 --> 00:22:05,619
that into a keystone Keystone sort of

00:21:54,429 --> 00:22:07,959
Norn entities like yes and this is what

00:22:05,619 --> 00:22:10,839
a very very basic mapping file looks

00:22:07,959 --> 00:22:13,449
like a map it the mappings are just a

00:22:10,839 --> 00:22:17,129
list of JSON objects and each of them

00:22:13,449 --> 00:22:20,859
contain a local and a remote section now

00:22:17,129 --> 00:22:23,259
if the conditions that are met in the

00:22:20,859 --> 00:22:25,149
remote part and remote is what's coming

00:22:23,259 --> 00:22:27,099
in from your remote rdp if the

00:22:25,149 --> 00:22:29,649
conditions are met in the remote section

00:22:27,099 --> 00:22:31,449
then you will get the equivalent you

00:22:29,649 --> 00:22:34,839
will get that section on the local

00:22:31,449 --> 00:22:41,049
section applied in Keystone so type

00:22:34,839 --> 00:22:43,599
melon full name is my full name it will

00:22:41,049 --> 00:22:49,839
get substituted in there as the name of

00:22:43,599 --> 00:22:54,729
the user and if we come down if melon

00:22:49,839 --> 00:22:58,119
groups here if engineering is in melon

00:22:54,729 --> 00:22:59,679
groups then that user will get the

00:22:58,119 --> 00:23:04,269
epsilon engineering in the default

00:22:59,679 --> 00:23:10,179
domain group so that's the basics of how

00:23:04,269 --> 00:23:12,569
mapping files are written now add that

00:23:10,179 --> 00:23:12,569
mapping

00:23:18,720 --> 00:23:33,580
to what we already told it to expect all

00:23:29,760 --> 00:23:36,340
right hopefully last term's then I Kate

00:23:33,580 --> 00:23:39,840
using epsilon goes to Keystone bounces

00:23:36,340 --> 00:23:47,530
to epsilon goes back to Keystone and

00:23:39,840 --> 00:23:52,210
horizon I live me none more than little

00:23:47,530 --> 00:23:54,070
happy that worked alright so and that's

00:23:52,210 --> 00:23:55,510
the basic flow then of web single

00:23:54,070 --> 00:23:57,490
sign-on once you've got that established

00:23:55,510 --> 00:24:01,120
you know you can modify that horizon

00:23:57,490 --> 00:24:03,100
front page however you like you do

00:24:01,120 --> 00:24:07,390
however you want to brand this but

00:24:03,100 --> 00:24:10,020
that's that's your flow so let me turn

00:24:07,390 --> 00:24:10,020
off that mirror

00:24:27,080 --> 00:24:31,830
we went through that we went through

00:24:28,950 --> 00:24:33,990
that once you're that there are the

00:24:31,830 --> 00:24:36,570
steps we started with horizon we went to

00:24:33,990 --> 00:24:41,460
Keystone thing else I've explained that

00:24:36,570 --> 00:24:43,410
a few times again you could

00:24:41,460 --> 00:24:45,000
short-circuit that I mean if you knew

00:24:43,410 --> 00:24:46,080
what your mapping was ahead of time if

00:24:45,000 --> 00:24:48,300
you knew what was expected to come

00:24:46,080 --> 00:24:50,040
through model of melon you didn't need

00:24:48,300 --> 00:24:53,130
to do it in you know each one of those

00:24:50,040 --> 00:24:54,630
individual steps but it I think it helps

00:24:53,130 --> 00:25:00,390
for the demo to sort of see what

00:24:54,630 --> 00:25:03,210
everything is used for so I don't have

00:25:00,390 --> 00:25:06,810
that much to add to that I guess what I

00:25:03,210 --> 00:25:09,030
wanted to present here is it can be

00:25:06,810 --> 00:25:11,370
fiddly there are some options and you

00:25:09,030 --> 00:25:13,140
have to know you know what option

00:25:11,370 --> 00:25:16,020
relates to what error message and the

00:25:13,140 --> 00:25:17,730
error messages they're not bad once you

00:25:16,020 --> 00:25:19,230
understand what's going on but they're

00:25:17,730 --> 00:25:21,030
not great especially if you don't have

00:25:19,230 --> 00:25:24,360
debug mode turned on all you'll get is

00:25:21,030 --> 00:25:25,920
like authentication failed and models

00:25:24,360 --> 00:25:26,940
melon is not much better you know you'll

00:25:25,920 --> 00:25:33,570
occasionally just get error messages

00:25:26,940 --> 00:25:35,460
which are hopeless but once so yeah it's

00:25:33,570 --> 00:25:37,020
not impossible once you've got it set up

00:25:35,460 --> 00:25:39,480
the hardest thing you'll probably have

00:25:37,020 --> 00:25:41,040
to deal with is your mapping file as you

00:25:39,480 --> 00:25:43,320
get more users more groups you're trying

00:25:41,040 --> 00:25:45,120
to map into your local Keystone it's

00:25:43,320 --> 00:25:46,770
going to get more and more complicated

00:25:45,120 --> 00:25:48,660
to keep that under control and the best

00:25:46,770 --> 00:25:51,390
thing I can offer is keep it really

00:25:48,660 --> 00:25:53,100
simple and obvious you know make it very

00:25:51,390 --> 00:25:54,480
clear that this group maps to this and

00:25:53,100 --> 00:25:55,650
don't try to overload groups from

00:25:54,480 --> 00:26:01,170
different domains and everything you

00:25:55,650 --> 00:26:03,390
just it'll end up a headache and I think

00:26:01,170 --> 00:26:05,100
oh and whether so is can feed

00:26:03,390 --> 00:26:08,910
differently if you saw some of the talks

00:26:05,100 --> 00:26:10,800
about CLI login and stuff it's it's a

00:26:08,910 --> 00:26:13,530
very different process you can use some

00:26:10,800 --> 00:26:15,600
of the reuse some of the trust set up

00:26:13,530 --> 00:26:18,210
from you know how to talk to epsilon

00:26:15,600 --> 00:26:19,620
from that process but it's not it

00:26:18,210 --> 00:26:21,420
doesn't necessarily help you with the

00:26:19,620 --> 00:26:22,650
web SSO you pretty much need to go

00:26:21,420 --> 00:26:28,140
through a completely different setup

00:26:22,650 --> 00:26:31,230
phase and that's it

00:26:28,140 --> 00:26:33,300
that's what I had anyone have a question

00:26:31,230 --> 00:26:36,750
or did anybody follow that all the way

00:26:33,300 --> 00:26:39,020
through they said you know go technical

00:26:36,750 --> 00:26:41,520
we've seen heaps of high-level federated

00:26:39,020 --> 00:26:51,060
and give her something technical so did

00:26:41,520 --> 00:26:54,300
that make sense yes yes I'm basically a

00:26:51,060 --> 00:26:58,020
dev foot but I ever had been tasked to

00:26:54,300 --> 00:27:01,350
set up a civil at Sur and it just went

00:26:58,020 --> 00:27:03,870
over my head so and i was i was

00:27:01,350 --> 00:27:08,210
wondering if i can so i found the way

00:27:03,870 --> 00:27:12,600
that you debugged using a python server

00:27:08,210 --> 00:27:14,520
quite interesting can you point me in

00:27:12,600 --> 00:27:17,130
the direction of some order in debugging

00:27:14,520 --> 00:27:23,280
techniques for setting up an IDP silver

00:27:17,130 --> 00:27:25,350
um I so that script was five I showed it

00:27:23,280 --> 00:27:27,150
it was like five lines of pretty

00:27:25,350 --> 00:27:29,340
printing what comes in from the request

00:27:27,150 --> 00:27:30,720
environment it's pretty printed because

00:27:29,340 --> 00:27:33,840
there are actual objects in there so you

00:27:30,720 --> 00:27:36,990
can't just dump it out as JSON I find

00:27:33,840 --> 00:27:39,120
that's my best one like go from Apache

00:27:36,990 --> 00:27:40,800
and put in a path there which does

00:27:39,120 --> 00:27:43,380
nothing but dump out all the information

00:27:40,800 --> 00:27:45,930
you need to know the other thing that's

00:27:43,380 --> 00:27:50,400
useful is our PDB so you've seen normal

00:27:45,930 --> 00:27:54,450
PDB and such but our pdb is pdb but it

00:27:50,400 --> 00:27:57,030
opens up a port it opens up port 44 44

00:27:54,450 --> 00:28:00,090
44 and you can netcat into there and

00:27:57,030 --> 00:28:03,540
control it on your terminal in the same

00:28:00,090 --> 00:28:04,770
way you would do PDB but you get a

00:28:03,540 --> 00:28:06,900
prompt because if you're running behind

00:28:04,770 --> 00:28:08,310
apache and you put PDB you it will just

00:28:06,900 --> 00:28:10,950
fail out because there's no terminal

00:28:08,310 --> 00:28:14,490
there to attach to so they're my two

00:28:10,950 --> 00:28:18,750
basic ones you hijack it at apache level

00:28:14,490 --> 00:28:21,110
and use PDB I rpd be if you can get into

00:28:18,750 --> 00:28:21,110
Python

00:28:26,929 --> 00:28:35,330
um so epsilon Shibboleth is a couple of

00:28:31,140 --> 00:28:39,270
things shibboleth has an Apache side

00:28:35,330 --> 00:28:40,710
module and it has a server as well mod

00:28:39,270 --> 00:28:42,570
chip in this case I've replaced with

00:28:40,710 --> 00:28:44,190
model of melon and purely because that's

00:28:42,570 --> 00:28:47,760
what we packaged and shipped with rails

00:28:44,190 --> 00:28:49,409
so it was easier I don't know about

00:28:47,760 --> 00:28:50,970
setting up a Shibboleth server I've

00:28:49,409 --> 00:28:52,830
tried to do it but I've always tried to

00:28:50,970 --> 00:28:57,720
do it on either a cent also rail box and

00:28:52,830 --> 00:28:59,250
it's difficult so it really depends on

00:28:57,720 --> 00:29:02,159
what the store you're trying to back

00:28:59,250 --> 00:29:04,320
things onto is epsilon is really

00:29:02,159 --> 00:29:07,320
designed to be a front-end to IPA and a

00:29:04,320 --> 00:29:08,669
few other things that run off sssd and

00:29:07,320 --> 00:29:18,570
there's test author you can run through

00:29:08,669 --> 00:29:20,580
that but I can't help much with like the

00:29:18,570 --> 00:29:22,500
setup is different the way you configure

00:29:20,580 --> 00:29:24,510
the trust and the way you configure them

00:29:22,500 --> 00:29:26,130
is different but theoretically once

00:29:24,510 --> 00:29:33,659
you've got sam'l on both sides it should

00:29:26,130 --> 00:29:36,750
be okay I'm from service delivery team

00:29:33,659 --> 00:29:39,870
so I work with the customer installation

00:29:36,750 --> 00:29:42,390
after support sigh have to question

00:29:39,870 --> 00:29:45,179
number one the process you saw show us

00:29:42,390 --> 00:29:48,990
very much simple for you but I can say

00:29:45,179 --> 00:29:53,220
it's not going to be easy I can get this

00:29:48,990 --> 00:29:56,580
right the first time and the way

00:29:53,220 --> 00:29:58,230
configure it could be done but it seems

00:29:56,580 --> 00:29:59,760
to be a very much complicated when

00:29:58,230 --> 00:30:02,100
they're going to be a problem so is

00:29:59,760 --> 00:30:03,899
there going to be a very easy install

00:30:02,100 --> 00:30:08,580
step-by-step solution are going to be

00:30:03,899 --> 00:30:10,740
much easier simpler way like the example

00:30:08,580 --> 00:30:14,190
on the give like when we have a free IPA

00:30:10,740 --> 00:30:15,990
to a before version 3 it was very

00:30:14,190 --> 00:30:17,850
complicated now it's become very easy

00:30:15,990 --> 00:30:20,909
it's going to have when it's going to

00:30:17,850 --> 00:30:22,890
happen so I know they're in the process

00:30:20,909 --> 00:30:25,020
now of going through the initial stages

00:30:22,890 --> 00:30:28,460
of drawing up puppet modules and stuff

00:30:25,020 --> 00:30:32,340
to sort of get this stuff auto deployed

00:30:28,460 --> 00:30:34,380
the epsilon client install is fairly

00:30:32,340 --> 00:30:41,550
simple as well

00:30:34,380 --> 00:30:43,410
I think the point what yeah um I said so

00:30:41,550 --> 00:30:46,340
Papa will come along and handle like

00:30:43,410 --> 00:30:48,480
creation of the identity providers I

00:30:46,340 --> 00:30:50,280
still think mapping is going to be the

00:30:48,480 --> 00:30:51,420
part where people weren't into the most

00:30:50,280 --> 00:30:53,430
trouble because it's just going to get

00:30:51,420 --> 00:30:56,040
really large I know they're working on

00:30:53,430 --> 00:30:57,870
that as a horizon plug-in so you should

00:30:56,040 --> 00:31:00,060
be able to like graphically map those

00:30:57,870 --> 00:31:02,730
around and I know on the Keystone server

00:31:00,060 --> 00:31:04,170
side there is a tool that can validate

00:31:02,730 --> 00:31:07,470
your mapping to at least make sure you

00:31:04,170 --> 00:31:09,800
don't have invalid JSON but that's as

00:31:07,470 --> 00:31:14,550
far as I know in terms of real plans to

00:31:09,800 --> 00:31:17,010
make it simple so maybe not just a small

00:31:14,550 --> 00:31:20,310
2nd cushion ah are you going to have a

00:31:17,010 --> 00:31:24,960
similar thing with our HDS openldap or

00:31:20,310 --> 00:31:27,480
just 289 or 80 back end I'm we're really

00:31:24,960 --> 00:31:29,730
trying to get out of the we're trying to

00:31:27,480 --> 00:31:32,250
get out of relying on things like an

00:31:29,730 --> 00:31:34,230
ldap connection with in keystone itself

00:31:32,250 --> 00:31:37,020
so the real advantage of things like

00:31:34,230 --> 00:31:38,580
federated identity and there's a few

00:31:37,020 --> 00:31:41,220
other modules they're like mod lookup

00:31:38,580 --> 00:31:44,280
identity that can authenticate the user

00:31:41,220 --> 00:31:45,960
before it ever hits Python so that means

00:31:44,280 --> 00:31:48,180
as I showed coming through with the

00:31:45,960 --> 00:31:51,060
config variables if i can get mod lookup

00:31:48,180 --> 00:31:53,220
identity to spit that all out then i

00:31:51,060 --> 00:31:54,690
should never need to have Keystone

00:31:53,220 --> 00:31:57,090
configured to talk to that ldap server

00:31:54,690 --> 00:31:58,980
and that's where we want to go it's

00:31:57,090 --> 00:32:01,470
otherwise just the pain in the neck

00:31:58,980 --> 00:32:03,300
because you know everything that has

00:32:01,470 --> 00:32:05,100
ldap has a hundred strings you have to

00:32:03,300 --> 00:32:06,780
configure for you know how to get your

00:32:05,100 --> 00:32:09,810
groups and how to get your user and had

00:32:06,780 --> 00:32:11,700
a and there's no way to solve that but

00:32:09,810 --> 00:32:14,310
at least if we push it up into the

00:32:11,700 --> 00:32:17,850
Apache realm a I don't have to deal with

00:32:14,310 --> 00:32:19,740
it and be you know it's done once and

00:32:17,850 --> 00:32:21,240
hopefully correctly that you know more

00:32:19,740 --> 00:32:23,480
people than just Keystone you're going

00:32:21,240 --> 00:32:23,480
to use

00:32:24,310 --> 00:32:28,480
and there is another talk on if you

00:32:26,740 --> 00:32:30,820
interested in that there is phrases in

00:32:28,480 --> 00:32:33,210
the django track later which is all

00:32:30,820 --> 00:32:37,590
about apache modules for authentication

00:32:33,210 --> 00:32:37,590
cool all right thank you very much Jimmy

00:32:46,650 --> 00:32:48,710

YouTube URL: https://www.youtube.com/watch?v=YYzJdxI_g6g


