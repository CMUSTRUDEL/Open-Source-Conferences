Title: Python Web Templating Battle
Publication date: 2012-08-23
Playlist: PyCon Australia 2012
Description: 
	Ivan Teoh
Head to head - popular templating engines using in the Python world will be compared and contrasted.  Increasingly, frameworks allow many different choices in templating engines. In this talk I'll discuss the different approaches, demo and
Captions: 
	00:00:00,030 --> 00:00:06,750
hello everybody welcome to the first

00:00:02,750 --> 00:00:09,510
session in the Durand one-room a next

00:00:06,750 --> 00:00:11,460
presenter ivan teo is a web developer

00:00:09,510 --> 00:00:13,889
with Preda web and an open source an

00:00:11,460 --> 00:00:15,870
open source CMS cloud provider for

00:00:13,889 --> 00:00:18,060
governments today he'll be putting web

00:00:15,870 --> 00:00:19,320
Python web templating engines into

00:00:18,060 --> 00:00:21,090
battle against each other to help you

00:00:19,320 --> 00:00:24,380
find out which is the best

00:00:21,090 --> 00:00:24,380
please welcome Ivan

00:00:38,559 --> 00:00:45,280
okay

00:00:41,530 --> 00:00:50,329
okay thank you mom for introduced me and

00:00:45,280 --> 00:00:53,120
thank you everyone here to get her here

00:00:50,329 --> 00:00:57,979
and interest on my topic which is Python

00:00:53,120 --> 00:01:00,799
web templating battle this hall will be

00:00:57,979 --> 00:01:06,530
in would be an introduced Europe

00:01:00,799 --> 00:01:09,070
well templating in general so this is

00:01:06,530 --> 00:01:13,220
the content I'll start with

00:01:09,070 --> 00:01:17,509
introductions and we'll be discussing

00:01:13,220 --> 00:01:21,039
about five web template and then each of

00:01:17,509 --> 00:01:24,830
them will be talk about features

00:01:21,039 --> 00:01:26,800
templates in tech if we got time we will

00:01:24,830 --> 00:01:31,100
talk about template loader as well and

00:01:26,800 --> 00:01:37,850
we end up with a summary now of course

00:01:31,100 --> 00:01:41,569
in CUNY and some discussions and so

00:01:37,850 --> 00:01:44,450
let's start with a big ice-breaking and

00:01:41,569 --> 00:01:50,299
to relax my nerve and talk about mine

00:01:44,450 --> 00:01:53,180
company so my company is Preta web we

00:01:50,299 --> 00:01:59,689
specialize in the provisions and support

00:01:53,180 --> 00:02:04,250
of high mobility dedicated and says CMS

00:01:59,689 --> 00:02:08,869
solution for government so we do lots of

00:02:04,250 --> 00:02:10,850
prone stuff and I do lots of do some web

00:02:08,869 --> 00:02:17,290
templating using one of the technology

00:02:10,850 --> 00:02:19,549
I'll be discussing later and just some

00:02:17,290 --> 00:02:21,470
disclaimer that the options are

00:02:19,549 --> 00:02:24,709
expressed in this talk are my own

00:02:21,470 --> 00:02:27,980
personal opinions and do not represent

00:02:24,709 --> 00:02:33,230
my employer view in any way so it's not

00:02:27,980 --> 00:02:37,220
conflict with my company okay let's

00:02:33,230 --> 00:02:39,980
start with what is web template a web

00:02:37,220 --> 00:02:42,530
template is a tool used to separate

00:02:39,980 --> 00:02:47,390
contents for presentations in web design

00:02:42,530 --> 00:02:50,389
and it is a basic components for a web

00:02:47,390 --> 00:02:52,600
templating system web template system

00:02:50,389 --> 00:02:56,050
described the

00:02:52,600 --> 00:03:01,120
for metallurgies used to produce web

00:02:56,050 --> 00:03:04,360
page such system process web templates

00:03:01,120 --> 00:03:08,370
using a template engine so this is coded

00:03:04,360 --> 00:03:08,370
from Wikipedia

00:03:12,069 --> 00:03:19,469
so these are the five web template

00:03:16,540 --> 00:03:25,709
things and genes I'm going to talk about

00:03:19,469 --> 00:03:28,329
I'm gonna start with a text-based web

00:03:25,709 --> 00:03:32,799
language with your Django template

00:03:28,329 --> 00:03:33,129
language and then second what we talked

00:03:32,799 --> 00:03:40,359
about

00:03:33,129 --> 00:03:44,500
chameleon ginger to Daiso and xslt and

00:03:40,359 --> 00:03:54,780
macro so does anyone here in the floor

00:03:44,500 --> 00:03:54,780
know all this file no some four and

00:03:55,709 --> 00:04:09,129
three two one yes good at least one okay

00:04:03,579 --> 00:04:10,659
great so let's test let's start with one

00:04:09,129 --> 00:04:15,280
the famous one which is Django

00:04:10,659 --> 00:04:17,949
templating language so it's a test based

00:04:15,280 --> 00:04:22,330
template language so we define Perabo

00:04:17,949 --> 00:04:26,260
and basic logic and use this mainly in

00:04:22,330 --> 00:04:28,960
Django web framework and they have a

00:04:26,260 --> 00:04:35,320
custom tech and filter and Bureau in

00:04:28,960 --> 00:04:40,000
them Python code so how's the Django

00:04:35,320 --> 00:04:44,789
templates in tech look like so basically

00:04:40,000 --> 00:04:49,000
they have a blog they have a blog and

00:04:44,789 --> 00:04:49,860
therefore if else a follow it's

00:04:49,000 --> 00:04:53,710
available

00:04:49,860 --> 00:04:56,849
desafio to-- so we're going to discuss

00:04:53,710 --> 00:04:56,849
some of them

00:04:59,180 --> 00:05:13,319
okay so let's start with variable so

00:05:06,360 --> 00:05:19,379
this is how Django to display the

00:05:13,319 --> 00:05:22,229
variable so with a - curly bracket so in

00:05:19,379 --> 00:05:25,259
general like text templates have two

00:05:22,229 --> 00:05:28,919
blocks one is the variable block which

00:05:25,259 --> 00:05:33,479
is like to receive because we press here

00:05:28,919 --> 00:05:36,899
and another one is a curly brace with a

00:05:33,479 --> 00:05:39,620
percentage with a block tag that would

00:05:36,899 --> 00:05:45,659
be usually used for like a group of

00:05:39,620 --> 00:05:55,770
template or for loop or extend some des

00:05:45,659 --> 00:05:59,209
HTML and where else and also for a

00:05:55,770 --> 00:06:01,709
variable sometimes we want to filter by

00:05:59,209 --> 00:06:06,870
things that we want to write instead

00:06:01,709 --> 00:06:09,300
upper case or lower case we use a symbol

00:06:06,870 --> 00:06:15,709
like this to actually do some filtering

00:06:09,300 --> 00:06:19,019
and good about Django is if you can find

00:06:15,709 --> 00:06:23,909
Django or the standard filtering that

00:06:19,019 --> 00:06:29,669
you provided by Django then you can

00:06:23,909 --> 00:06:32,189
write your own using Python code this is

00:06:29,669 --> 00:06:37,019
also one example that's allow you to

00:06:32,189 --> 00:06:42,389
have our arguments to pass into the

00:06:37,019 --> 00:06:44,550
custom code so this is one example that

00:06:42,389 --> 00:06:47,639
when you want to write a custom filter

00:06:44,550 --> 00:06:55,249
in Django for example you want to write

00:06:47,639 --> 00:07:00,930
a level functions and this has to be a

00:06:55,249 --> 00:07:03,870
written sin PI arm shank Python file and

00:07:00,930 --> 00:07:08,419
then this is what you do when you want

00:07:03,870 --> 00:07:08,419
to put into a a template

00:07:14,400 --> 00:07:28,410
so how we going to that let's say we we

00:07:19,919 --> 00:07:30,750
already have the template for so how

00:07:28,410 --> 00:07:32,970
we're going to lock it so so there are

00:07:30,750 --> 00:07:34,860
two ways one is that this is the simple

00:07:32,970 --> 00:07:37,530
way which is like this is assumed that

00:07:34,860 --> 00:07:41,220
this is a template we just as a string

00:07:37,530 --> 00:07:44,790
with a variable tag and then this is a

00:07:41,220 --> 00:07:48,870
context we want to assign this my name

00:07:44,790 --> 00:07:52,080
variable to Adrienne and then use Brendo

00:07:48,870 --> 00:07:54,960
functions to render the templates with a

00:07:52,080 --> 00:07:58,830
profit variable and then you got my name

00:07:54,960 --> 00:08:02,850
is Adrienne and the second one is using

00:07:58,830 --> 00:08:06,570
a brand new to respond class oh sorry

00:08:02,850 --> 00:08:10,620
but vendor to respond functions to

00:08:06,570 --> 00:08:13,800
actually this is your template file and

00:08:10,620 --> 00:08:15,419
this is your variable and then use this

00:08:13,800 --> 00:08:17,729
to actually pass to your requests as

00:08:15,419 --> 00:08:23,370
well so you have a request variable

00:08:17,729 --> 00:08:26,130
instead of template okay this is the

00:08:23,370 --> 00:08:30,720
familiar one next we go to something

00:08:26,130 --> 00:08:31,909
well chameleon so does anyone know about

00:08:30,720 --> 00:08:35,820
gemenon

00:08:31,909 --> 00:08:38,310
okay good there tree person here so this

00:08:35,820 --> 00:08:42,539
is different from what django temple

00:08:38,310 --> 00:08:45,540
language because it's based on XML

00:08:42,539 --> 00:08:49,650
template ng so it's like kind of

00:08:45,540 --> 00:08:52,709
contrast so what is good is there's a

00:08:49,650 --> 00:08:55,380
compound into a Python by code so it's

00:08:52,709 --> 00:08:59,550
XML file and then actually basically

00:08:55,380 --> 00:09:01,890
compound to a Python by code so that the

00:08:59,550 --> 00:09:07,230
speed will improve and performance will

00:09:01,890 --> 00:09:13,670
improve so they actually is use or

00:09:07,230 --> 00:09:18,050
actually like I mean reference from

00:09:13,670 --> 00:09:21,390
original was like as of inventions so

00:09:18,050 --> 00:09:25,410
chameleon and soap page templates is

00:09:21,390 --> 00:09:28,410
very similar and both have a similarity

00:09:25,410 --> 00:09:32,790
but I'm going to discuss a bit of know

00:09:28,410 --> 00:09:36,870
and for example came alone using Python

00:09:32,790 --> 00:09:42,030
as a default expressed language and so

00:09:36,870 --> 00:09:44,190
easiest path so so since it's using

00:09:42,030 --> 00:09:48,390
Python it's very easy everybody know

00:09:44,190 --> 00:09:51,870
Python and its coverage general temple

00:09:48,390 --> 00:09:56,310
language because it using different type

00:09:51,870 --> 00:09:58,530
of project like pyramid so pruning God

00:09:56,310 --> 00:10:02,460
and of course he also can be used as

00:09:58,530 --> 00:10:05,210
standalone as well so these are the

00:10:02,460 --> 00:10:10,080
syntax is pretty much like an XML file

00:10:05,210 --> 00:10:12,810
but they have some similarity like they

00:10:10,080 --> 00:10:16,230
can have like a repeat which is like a

00:10:12,810 --> 00:10:18,750
loop for loop which is loop a range of

00:10:16,230 --> 00:10:24,570
10 so you see this range of 10 is

00:10:18,750 --> 00:10:29,340
actually a Python code and Lang items

00:10:24,570 --> 00:10:32,430
you saw a Python code and and this is

00:10:29,340 --> 00:10:38,040
how we do a comments in chameleon

00:10:32,430 --> 00:10:45,360
templates in tag so this repeat items or

00:10:38,040 --> 00:10:48,000
event on item dot is like a variable

00:10:45,360 --> 00:10:50,850
that available in CHEM alone so the kind

00:10:48,000 --> 00:10:53,970
of features that allow us to do quickly

00:10:50,850 --> 00:10:59,160
assess the event items and odd items in

00:10:53,970 --> 00:11:01,530
CHEM alone and this is new ok this is a

00:10:59,160 --> 00:11:05,310
camel on 2-mile allow us to have an

00:11:01,530 --> 00:11:08,520
embedded patent which is some not so

00:11:05,310 --> 00:11:09,690
happy with it but it's in case you need

00:11:08,520 --> 00:11:12,150
to use some pythons

00:11:09,690 --> 00:11:14,280
some Python code inside of templates you

00:11:12,150 --> 00:11:18,080
can have like something like this just

00:11:14,280 --> 00:11:22,230
have a this question mark pythons as a

00:11:18,080 --> 00:11:26,270
indicator and then this your Python code

00:11:22,230 --> 00:11:31,710
in case you want to debug this template

00:11:26,270 --> 00:11:36,769
and also the switch-case tag is a new as

00:11:31,710 --> 00:11:39,980
well for cameo in 2.0 so just in case

00:11:36,769 --> 00:11:49,399
you want to have some colors see type of

00:11:39,980 --> 00:11:53,929
syntax here okay so basically how this

00:11:49,399 --> 00:11:56,079
came along light attribute language the

00:11:53,929 --> 00:12:02,329
play so basically they have a namespace

00:11:56,079 --> 00:12:03,889
prefix a command and equals arguments so

00:12:02,329 --> 00:12:06,189
you can see that it's actually using

00:12:03,889 --> 00:12:06,189
tell

00:12:12,020 --> 00:12:20,010
so tear is a template attribute language

00:12:15,140 --> 00:12:25,640
so which is on namespace prefix and this

00:12:20,010 --> 00:12:30,260
is the this is the come on let's say

00:12:25,640 --> 00:12:30,260
repeat is a common and this is the

00:12:30,920 --> 00:12:40,080
arguments that you're going to pass into

00:12:33,410 --> 00:12:49,910
so so most of the XML syntax is a pure

00:12:40,080 --> 00:12:53,100
like this okay so for most of the XML

00:12:49,910 --> 00:12:55,080
templates they have this this intact

00:12:53,100 --> 00:12:57,540
good for the Cameo and they actually

00:12:55,080 --> 00:13:00,020
define for you by default so you don't

00:12:57,540 --> 00:13:03,060
have to define with this make it simple

00:13:00,020 --> 00:13:06,870
and I will talk about this switching

00:13:03,060 --> 00:13:08,670
case as well let's escape and this is

00:13:06,870 --> 00:13:09,510
how I do repeat which I talked about

00:13:08,670 --> 00:13:12,930
just now

00:13:09,510 --> 00:13:17,220
and this is expression type which is

00:13:12,930 --> 00:13:18,990
this is the Python code and this is how

00:13:17,220 --> 00:13:21,860
we invaded Panama fish I don't really

00:13:18,990 --> 00:13:26,390
like it and this is how the commands and

00:13:21,860 --> 00:13:30,990
number talked about this we skip this

00:13:26,390 --> 00:13:34,380
and this next one is actually ninja -

00:13:30,990 --> 00:13:37,830
ginger - so this is very similar to

00:13:34,380 --> 00:13:40,740
Django so they have a text-based temple

00:13:37,830 --> 00:13:42,120
language and also different is the

00:13:40,740 --> 00:13:45,090
actual compound down to a Python

00:13:42,120 --> 00:13:47,840
bytecode even there is a test base by AG

00:13:45,090 --> 00:13:51,390
compound down to a Python by code and

00:13:47,840 --> 00:13:53,640
Inspira by Django and Python so it's a

00:13:51,390 --> 00:13:57,870
general tempered language you can use in

00:13:53,640 --> 00:14:01,140
some of the web framework so let's see

00:13:57,870 --> 00:14:04,830
is you see it's pretty similar to django

00:14:01,140 --> 00:14:07,860
web framework or django temple language

00:14:04,830 --> 00:14:12,360
except the the tech is a bit different

00:14:07,860 --> 00:14:14,190
using Curie percentage and most of them

00:14:12,360 --> 00:14:14,460
are pretty much the same they have a for

00:14:14,190 --> 00:14:16,980
loop

00:14:14,460 --> 00:14:21,920
this is how they declare variable and

00:14:16,980 --> 00:14:21,920
this is a photo and this is the coaming

00:14:22,190 --> 00:14:28,699
yep yeah what about this available this

00:14:25,819 --> 00:14:34,069
is the filtered is the command this is

00:14:28,699 --> 00:14:35,300
the for look and okay we skip this is

00:14:34,069 --> 00:14:40,339
more advanced

00:14:35,300 --> 00:14:41,050
this kit is okay this is an interesting

00:14:40,339 --> 00:14:47,199
one

00:14:41,050 --> 00:14:52,370
it's not really a it's considered xml

00:14:47,199 --> 00:14:59,240
base or XML template language but what

00:14:52,370 --> 00:15:02,689
the job is is a xml rules file die so

00:14:59,240 --> 00:15:06,230
xml rule files which combine a mock up

00:15:02,689 --> 00:15:09,920
team dot HTML which is like a team file

00:15:06,230 --> 00:15:13,490
from a web designer and before web

00:15:09,920 --> 00:15:17,120
content which can be from pyramid web

00:15:13,490 --> 00:15:20,089
content or prod prone to web content we

00:15:17,120 --> 00:15:24,709
merge these two and become a new team

00:15:20,089 --> 00:15:27,829
far so we get a source of a design from

00:15:24,709 --> 00:15:31,430
a web designer and a Python developers

00:15:27,829 --> 00:15:35,540
do their coding that can using plone CMS

00:15:31,430 --> 00:15:40,220
or pyramids and we use these types of

00:15:35,540 --> 00:15:44,209
rules and become a new team from so it's

00:15:40,220 --> 00:15:47,480
a very isolated web designers and Python

00:15:44,209 --> 00:15:50,269
developers so back-end and front-end is

00:15:47,480 --> 00:15:52,730
isolate and be much together using a

00:15:50,269 --> 00:15:57,399
dice of rules for so let's talk let's

00:15:52,730 --> 00:16:01,509
see what dies arose from so okay this is

00:15:57,399 --> 00:16:07,069
for example this is a template a team

00:16:01,509 --> 00:16:14,740
temple of design a team from designer so

00:16:07,069 --> 00:16:20,600
there's a simple h1 Dave and this and

00:16:14,740 --> 00:16:23,660
this is a tie so rules for so it's

00:16:20,600 --> 00:16:28,930
pretty similar to this camel own so they

00:16:23,660 --> 00:16:30,480
have a XML declarations at about CSS and

00:16:28,930 --> 00:16:34,559
xox

00:16:30,480 --> 00:16:38,160
so what they actually root did behind

00:16:34,559 --> 00:16:43,319
the scene is this XML this XML file is

00:16:38,160 --> 00:16:47,249
going to translate to s XS l x so does

00:16:43,319 --> 00:16:49,980
anyone know about SLS okay a few them so

00:16:47,249 --> 00:16:51,569
so basically what we had the scene is

00:16:49,980 --> 00:16:57,029
that you transform this it's a

00:16:51,569 --> 00:17:00,029
simplified for most excel 6x so what

00:16:57,029 --> 00:17:04,139
actually do is there are few directive

00:17:00,029 --> 00:17:09,510
in Dicer rules so i'll talk about when

00:17:04,139 --> 00:17:12,899
it's going on these are the directive

00:17:09,510 --> 00:17:16,169
that have in dizer rules so they have

00:17:12,899 --> 00:17:20,639
team no team replaced before after drop

00:17:16,169 --> 00:17:27,360
straight and motion copy so you have all

00:17:20,639 --> 00:17:29,880
this and say okay let's discuss one by

00:17:27,360 --> 00:17:32,190
one so basically what they do is so we

00:17:29,880 --> 00:17:36,320
have the team foul so indicator this is

00:17:32,190 --> 00:17:38,970
the team file and then graduate drop

00:17:36,320 --> 00:17:41,549
drop the team foul and say i want to

00:17:38,970 --> 00:17:46,169
drop the title i don't want the title to

00:17:41,549 --> 00:17:49,620
be display on the final final site so

00:17:46,169 --> 00:17:51,539
i'm gonna drop that the title from the

00:17:49,620 --> 00:17:58,679
team so this indicator is a team and

00:17:51,539 --> 00:18:02,669
this is a excel as XS LX ex parte syntek

00:17:58,679 --> 00:18:07,380
and this is a CSS syntax we just saw so

00:18:02,669 --> 00:18:13,010
this statement means drop the team from

00:18:07,380 --> 00:18:17,970
a title if the contents have this ID

00:18:13,010 --> 00:18:19,799
context ID with a class Y so basically I

00:18:17,970 --> 00:18:23,220
want to drop the title if the content

00:18:19,799 --> 00:18:27,059
got this class and this is basically is

00:18:23,220 --> 00:18:30,960
to replace a team content which is

00:18:27,059 --> 00:18:36,860
Marcos ID equals to content with the

00:18:30,960 --> 00:18:40,169
context from the like poems or pyramids

00:18:36,860 --> 00:18:42,220
with a class content so basically we

00:18:40,169 --> 00:18:47,050
cannot get this

00:18:42,220 --> 00:18:50,230
block of the HTML code from the web

00:18:47,050 --> 00:18:53,110
contents and put your team so basically

00:18:50,230 --> 00:18:56,070
what they do is like you take something

00:18:53,110 --> 00:19:00,370
from the web content and drop or replace

00:18:56,070 --> 00:19:02,920
or like be put it after put it before

00:19:00,370 --> 00:19:06,310
matching copy and those kind of stuff so

00:19:02,920 --> 00:19:09,160
if you notice there's no looping and

00:19:06,310 --> 00:19:13,990
stuff so so what we're going to do for

00:19:09,160 --> 00:19:17,500
the looping stuff so we can I mix xlx

00:19:13,990 --> 00:19:22,360
with Daiso so you see we actually

00:19:17,500 --> 00:19:26,170
replace this the team with indicator ID

00:19:22,360 --> 00:19:30,190
equals title and then we have like for

00:19:26,170 --> 00:19:35,950
each loop in n so X and we select this

00:19:30,190 --> 00:19:38,860
now I tag and copy the anchor text and

00:19:35,950 --> 00:19:45,520
copy the image tag and just become a

00:19:38,860 --> 00:19:47,170
look oh the sauce scape this is so

00:19:45,520 --> 00:19:48,940
basically how you're going to compile

00:19:47,170 --> 00:19:53,110
you basically used ISO routes to compile

00:19:48,940 --> 00:19:54,880
from SS these rules and the output use

00:19:53,110 --> 00:19:56,680
these rules and output to become an

00:19:54,880 --> 00:20:01,870
access and then you can put it and

00:19:56,680 --> 00:20:08,740
deploy to a whisk if any whiskey servers

00:20:01,870 --> 00:20:10,960
or angels this is - Ron is Lord okay the

00:20:08,740 --> 00:20:13,630
last one is actually macro it's correct

00:20:10,960 --> 00:20:18,070
pretty similar it's a text base also

00:20:13,630 --> 00:20:21,970
compiled and there's a macro and basic

00:20:18,070 --> 00:20:24,700
yes everybody have this and good thing

00:20:21,970 --> 00:20:29,550
is so they have to they can straight

00:20:24,700 --> 00:20:34,540
embedded Python code into a module level

00:20:29,550 --> 00:20:39,910
so the syntax is similar to Django as

00:20:34,540 --> 00:20:42,880
well you have this sin tag and they have

00:20:39,910 --> 00:20:47,020
the for loop as well and this is how we

00:20:42,880 --> 00:20:51,520
declare definer module and then this is

00:20:47,020 --> 00:20:55,440
how you call and you see this one is

00:20:51,520 --> 00:20:57,500
actually a a Python code

00:20:55,440 --> 00:21:04,410
so you can actually have a higher code

00:20:57,500 --> 00:21:05,750
inside your temple language as well so

00:21:04,410 --> 00:21:09,780
this is how you call it

00:21:05,750 --> 00:21:17,000
this temple logo which how you call the

00:21:09,780 --> 00:21:25,190
micro template from the code and good

00:21:17,000 --> 00:21:31,320
sit so are summarized okay so summary so

00:21:25,190 --> 00:21:34,620
first let apologize for that title is a

00:21:31,320 --> 00:21:37,530
bit misleading because there's no battle

00:21:34,620 --> 00:21:40,650
in this round right there's no we know

00:21:37,530 --> 00:21:41,270
in this like I think I guess everyone is

00:21:40,650 --> 00:21:44,010
a winner

00:21:41,270 --> 00:21:47,490
so I believe every single web templates

00:21:44,010 --> 00:21:49,590
have their own place in this market they

00:21:47,490 --> 00:21:52,320
have their phones unique features they

00:21:49,590 --> 00:21:55,470
stand out from the rest and some

00:21:52,320 --> 00:21:59,310
influence from other templates and each

00:21:55,470 --> 00:22:03,660
one learn from each other and after all

00:21:59,310 --> 00:22:06,180
always open source so so do you think

00:22:03,660 --> 00:22:08,580
that they should combine your one

00:22:06,180 --> 00:22:12,150
standard Python code or Python web

00:22:08,580 --> 00:22:16,290
template they have lots of similarity

00:22:12,150 --> 00:22:18,240
between each of them because some of the

00:22:16,290 --> 00:22:22,800
web frame which is support more than one

00:22:18,240 --> 00:22:25,530
word templating or they still stay the

00:22:22,800 --> 00:22:27,540
same for now like they are loss of word

00:22:25,530 --> 00:22:31,230
template for you to choose from and see

00:22:27,540 --> 00:22:38,780
which one is best suit you or wish on

00:22:31,230 --> 00:22:38,780
always the best so for your needs

00:22:39,999 --> 00:22:49,129
so times up so any questions from the

00:22:45,950 --> 00:22:53,210
floor or do you guys want to share their

00:22:49,129 --> 00:22:54,830
best experience on when using web

00:22:53,210 --> 00:22:56,600
template alright thanks for their

00:22:54,830 --> 00:23:00,470
presentation can you talk a bit about

00:22:56,600 --> 00:23:01,429
why you've selected specific or this

00:23:00,470 --> 00:23:06,639
five wires

00:23:01,429 --> 00:23:06,639
yes specific situation okay so let's

00:23:17,820 --> 00:23:28,429
so they are five okay so they are a lot

00:23:22,019 --> 00:23:33,269
a lot of web templating in the market so

00:23:28,429 --> 00:23:37,200
first of all okay Django its kind I mean

00:23:33,269 --> 00:23:41,779
I used before so it's pretty color loss

00:23:37,200 --> 00:23:45,179
of loss of template web templates

00:23:41,779 --> 00:23:50,070
reference or inspired by them especially

00:23:45,179 --> 00:23:54,349
test base so so i use it as a wonder

00:23:50,070 --> 00:24:00,330
test test base template language and

00:23:54,349 --> 00:24:03,090
chameleons is kind of one of the scott

00:24:00,330 --> 00:24:06,720
very long history and and the also based

00:24:03,090 --> 00:24:10,289
off slope so can be learned so a pretty

00:24:06,720 --> 00:24:17,179
similar so the AG xml-based

00:24:10,289 --> 00:24:25,529
and i use a lot in and so as well and

00:24:17,179 --> 00:24:30,840
this to ginger and macro so i all these

00:24:25,529 --> 00:24:34,590
I first of all I pick the one that

00:24:30,840 --> 00:24:37,289
actually really updated the code so

00:24:34,590 --> 00:24:38,609
these are the most updated web templates

00:24:37,289 --> 00:24:41,549
in the market at the moment

00:24:38,609 --> 00:24:46,320
so they are like frequent updates from

00:24:41,549 --> 00:24:48,710
the from the developer and die so in XML

00:24:46,320 --> 00:24:53,909
I really think that's it's pretty new

00:24:48,710 --> 00:24:57,479
it's only available in prone 4.2 but I

00:24:53,909 --> 00:25:00,179
thing is pretty is different from the

00:24:57,479 --> 00:25:03,779
rest so because they actually isolate

00:25:00,179 --> 00:25:07,499
the designers and developers like myself

00:25:03,779 --> 00:25:10,320
and then too much together so this these

00:25:07,499 --> 00:25:15,320
are one of the standout among the rest

00:25:10,320 --> 00:25:20,190
and macro I picked this is because like

00:25:15,320 --> 00:25:22,769
they can like because Python says we

00:25:20,190 --> 00:25:25,409
know they designed to be to be treated

00:25:22,769 --> 00:25:27,809
or the developers at out so you guys

00:25:25,409 --> 00:25:30,790
know what you do when you guys write

00:25:27,809 --> 00:25:33,220
their web templates so so they

00:25:30,790 --> 00:25:35,650
really make web templating really

00:25:33,220 --> 00:25:38,230
powerful by embedded the Python code

00:25:35,650 --> 00:25:41,410
inside template so of course you have to

00:25:38,230 --> 00:25:43,840
be very careful when you do this so it

00:25:41,410 --> 00:25:47,920
can be like I mean some people like for

00:25:43,840 --> 00:25:50,500
myself I prefer to be isolating the like

00:25:47,920 --> 00:25:55,660
really complex logic from the templating

00:25:50,500 --> 00:25:57,460
language so but everybody said out so

00:25:55,660 --> 00:26:02,350
you know what to do and it give you a

00:25:57,460 --> 00:26:07,270
flexibility to - - to use it so the

00:26:02,350 --> 00:26:10,180
answer your questions oh no in fact this

00:26:07,270 --> 00:26:11,890
is the five of the most updated yes yes

00:26:10,180 --> 00:26:14,340
these are the five that moves up they

00:26:11,890 --> 00:26:17,770
compared to the rest

00:26:14,340 --> 00:26:20,190
we've got time for probably one more yes

00:26:17,770 --> 00:26:20,190
yes

00:26:26,070 --> 00:26:29,610
I might possibly be missing something

00:26:28,200 --> 00:26:32,730
here but I thought I thought you said

00:26:29,610 --> 00:26:34,290
that you quite liked the day as Oh

00:26:32,730 --> 00:26:36,420
approach when I was looking at in my

00:26:34,290 --> 00:26:39,390
admittedly sort of superficial glance at

00:26:36,420 --> 00:26:42,450
it it seemed insanely overcomplicated

00:26:39,390 --> 00:26:44,610
for what it did do you feel that um

00:26:42,450 --> 00:26:47,670
perhaps it goes a little bit too far one

00:26:44,610 --> 00:26:49,320
way and make in separating the the

00:26:47,670 --> 00:26:50,580
structure from a designing perspective

00:26:49,320 --> 00:26:52,500
as opposed to sort of the programmatic

00:26:50,580 --> 00:26:55,350
stuff because it seemed like the

00:26:52,500 --> 00:27:01,880
programmatic side of it was just painful

00:26:55,350 --> 00:27:06,240
oh okay I believe this is a color very

00:27:01,880 --> 00:27:08,580
early stage but we I mean they have

00:27:06,240 --> 00:27:12,840
different style make it like a make it

00:27:08,580 --> 00:27:16,110
user friendly not a special CMS platform

00:27:12,840 --> 00:27:19,860
side which allowed the customer to

00:27:16,110 --> 00:27:23,270
actually do the web design and we are

00:27:19,860 --> 00:27:27,480
just applying the code behind the CMS so

00:27:23,270 --> 00:27:31,680
they days a Daiso UI editor we available

00:27:27,480 --> 00:27:35,820
so allow the customers or the web

00:27:31,680 --> 00:27:39,750
designer to drag-and-drop the design so

00:27:35,820 --> 00:27:42,090
they can design to whatever team that

00:27:39,750 --> 00:27:46,940
they want so what we do we just apply

00:27:42,090 --> 00:27:49,230
the the pro team of pure AMI and the

00:27:46,940 --> 00:27:52,080
clients just have to use the editor to

00:27:49,230 --> 00:27:56,160
etch it drag and drop and just using

00:27:52,080 --> 00:28:00,230
this die so do you find the the coding

00:27:56,160 --> 00:28:00,230
side of it is is reasonable to use

00:28:00,590 --> 00:28:07,230
honestly thanks oh yes they don't have

00:28:04,980 --> 00:28:09,150
much you see the decorative they don't

00:28:07,230 --> 00:28:11,580
have the loop end style so I still have

00:28:09,150 --> 00:28:15,390
to use the XSL s to actually make it

00:28:11,580 --> 00:28:18,390
more complex so this could be a downside

00:28:15,390 --> 00:28:21,350
but I think in the futures when you go

00:28:18,390 --> 00:28:27,140
getting more matured I think it's a good

00:28:21,350 --> 00:28:27,140
for us thank you okay thank you

00:28:30,220 --> 00:28:38,270
cool thanks Ivan and in appreciation

00:28:34,390 --> 00:28:41,290
some I can swallow an ax and a mug we

00:28:38,270 --> 00:28:41,290

YouTube URL: https://www.youtube.com/watch?v=eZ6mC5-Dz4w


