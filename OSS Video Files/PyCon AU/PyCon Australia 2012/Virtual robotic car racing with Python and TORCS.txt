Title: Virtual robotic car racing with Python and TORCS
Publication date: 2012-08-23
Playlist: PyCon Australia 2012
Description: 
	Tennessee Leeuwenburg
A highly visual (racing videos) presentation showing the TORCS racing simulator, a Python implementation of a virtual robot car, and a covering of the basic AI algorithms required to make the wheels go round. AI, math, Python an
Captions: 
	00:00:00,000 --> 00:00:05,250
hey everyone if we can settle in I'm

00:00:03,540 --> 00:00:07,859
going to make a meal of this one I know

00:00:05,250 --> 00:00:10,710
this afternoon we have Tennessee

00:00:07,859 --> 00:00:12,750
Loewenberg who works the Center for

00:00:10,710 --> 00:00:14,849
Australian weather and climate research

00:00:12,750 --> 00:00:17,520
with a small team of developers working

00:00:14,849 --> 00:00:21,420
on advanced weather forecasting software

00:00:17,520 --> 00:00:22,680
however in his spare time he dabbles

00:00:21,420 --> 00:00:24,570
without official intelligence and

00:00:22,680 --> 00:00:27,050
robotics which is the topic of the talk

00:00:24,570 --> 00:00:29,550
today which in which he will be

00:00:27,050 --> 00:00:32,189
demonstrating Python driven robot cars

00:00:29,550 --> 00:00:35,219
in the open race car simulator so if we

00:00:32,189 --> 00:00:41,940
can get a warm welcome for Tennessee

00:00:35,219 --> 00:00:43,860
Loewenberg all right hello and thank you

00:00:41,940 --> 00:00:46,110
very much I haven't done a 45-minute

00:00:43,860 --> 00:00:47,579
over four so I've just assumed the same

00:00:46,110 --> 00:00:49,680
amount of time per slide and we'll see

00:00:47,579 --> 00:00:52,559
how it goes so a bit of introduction to

00:00:49,680 --> 00:00:54,300
myself has essentially all been said but

00:00:52,559 --> 00:00:56,460
I will introduce how it is that I got

00:00:54,300 --> 00:00:59,340
interested in robotics because that's

00:00:56,460 --> 00:01:02,039
that's the point of interest here is it

00:00:59,340 --> 00:01:04,080
in as an intellectual play space I

00:01:02,039 --> 00:01:06,090
cannot think of anything more just

00:01:04,080 --> 00:01:08,400
fundamentally awesome than robotics and

00:01:06,090 --> 00:01:10,110
really that was basically the whole

00:01:08,400 --> 00:01:12,119
justification for submitting this caught

00:01:10,110 --> 00:01:14,549
this talk and the entire time between

00:01:12,119 --> 00:01:16,439
then and now has been creating the

00:01:14,549 --> 00:01:19,320
content for the talk to meet the the

00:01:16,439 --> 00:01:20,790
impending deadline of doom so we'll see

00:01:19,320 --> 00:01:23,159
how far I got with that but I would just

00:01:20,790 --> 00:01:25,290
mainly want to share my enthusiasm and

00:01:23,159 --> 00:01:26,490
interest for getting into an area like

00:01:25,290 --> 00:01:29,189
this is something that's incredibly

00:01:26,490 --> 00:01:31,320
satisfying so I did a carefully

00:01:29,189 --> 00:01:33,600
researched and fact-checked exercise of

00:01:31,320 --> 00:01:35,100
going to Wikipedia to look about real

00:01:33,600 --> 00:01:37,020
kart racing because I thought I'd

00:01:35,100 --> 00:01:38,250
introduced the talk with real racing and

00:01:37,020 --> 00:01:40,409
then follow it through with that with

00:01:38,250 --> 00:01:43,920
the robotic racing so the first car race

00:01:40,409 --> 00:01:48,000
was held on April 28 1887 and it had one

00:01:43,920 --> 00:01:51,829
entrant who won so much much like myself

00:01:48,000 --> 00:01:54,869
today so there's a few facts there

00:01:51,829 --> 00:01:56,579
modern racing the kind you see on the

00:01:54,869 --> 00:01:59,880
television with fast cars and loud

00:01:56,579 --> 00:02:01,710
noises has a wiki Wikipedia entry it

00:01:59,880 --> 00:02:04,200
says there's 11 different categories of

00:02:01,710 --> 00:02:06,930
modern competitive racing and not one of

00:02:04,200 --> 00:02:07,590
them is a robotic competition which is a

00:02:06,930 --> 00:02:12,120
tragedy

00:02:07,590 --> 00:02:13,470
so whoo so I'd really like to see you

00:02:12,120 --> 00:02:15,240
wear some of this stuff could

00:02:13,470 --> 00:02:17,600
because I'll be talking about some of

00:02:15,240 --> 00:02:20,820
the real robotic car attempts that have

00:02:17,600 --> 00:02:22,650
been created and then it just seems like

00:02:20,820 --> 00:02:25,200
such a gap that we we don't have the

00:02:22,650 --> 00:02:27,240
formula one of robotic cars so robotic

00:02:25,200 --> 00:02:28,860
vehicles in general I don't know how

00:02:27,240 --> 00:02:30,960
much the audience may be familiar with

00:02:28,860 --> 00:02:33,150
but you get you know the remote-control

00:02:30,960 --> 00:02:37,170
car you've played with as a kid thing

00:02:33,150 --> 00:02:39,600
called micro Mouse's mice I'm not sure

00:02:37,170 --> 00:02:43,200
what the plural is but essentially very

00:02:39,600 --> 00:02:44,730
small vehicles that do a limited amount

00:02:43,200 --> 00:02:46,890
of amount of things essentially

00:02:44,730 --> 00:02:49,200
algorithms for going through mazes or

00:02:46,890 --> 00:02:51,660
very small things and the emphasis there

00:02:49,200 --> 00:02:54,300
is something you can do at home you can

00:02:51,660 --> 00:02:56,880
use your phone to write to run a robotic

00:02:54,300 --> 00:02:59,100
car mount it mounted in a little chassis

00:02:56,880 --> 00:03:02,010
and there are more major traditional

00:02:59,100 --> 00:03:04,620
sized cars self-driving cars so Google

00:03:02,010 --> 00:03:06,300
famously have a self-driving car many of

00:03:04,620 --> 00:03:08,550
the other car manufacturers now have

00:03:06,300 --> 00:03:11,670
self-driving models that they have under

00:03:08,550 --> 00:03:14,400
R&D how do you famously did an ascent of

00:03:11,670 --> 00:03:16,710
Pikes Peak and if you haven't ever

00:03:14,400 --> 00:03:19,440
googled for quad copters and quad rotors

00:03:16,710 --> 00:03:24,420
just like do that now because it's like

00:03:19,440 --> 00:03:30,620
wow okay so here is the most famous

00:03:24,420 --> 00:03:30,620
robotic car I would say so this is

00:03:31,280 --> 00:03:36,480
what's happening here is this is the

00:03:33,209 --> 00:03:39,030
DARPA 2005 Grand Challenge so obviously

00:03:36,480 --> 00:03:39,580
I've stolen this video rudely from the

00:03:39,030 --> 00:03:41,470
internet

00:03:39,580 --> 00:03:42,850
all sources fully referenced in my

00:03:41,470 --> 00:03:45,940
slides and I hope haven't done anything

00:03:42,850 --> 00:03:47,800
wrong so at no stage at any car

00:03:45,940 --> 00:03:50,320
completed astray to the forehead

00:03:47,800 --> 00:03:52,420
what you see there is an array of laser

00:03:50,320 --> 00:03:56,860
laser patient range finders on the top

00:03:52,420 --> 00:03:58,630
learners light out and this is inside of

00:03:56,860 --> 00:04:00,070
one day completed the track the vehicle

00:03:58,630 --> 00:04:02,920
you see immediately behind it is the

00:04:00,070 --> 00:04:06,370
official race track and this is an

00:04:02,920 --> 00:04:08,470
exercise shed essentially headed by

00:04:06,370 --> 00:04:11,310
Sebastian Thrun who is an employee of

00:04:08,470 --> 00:04:13,810
Google and also a professor at Stanford

00:04:11,310 --> 00:04:15,850
so this was a very serious

00:04:13,810 --> 00:04:21,160
accomplishment in the space of robotic

00:04:15,850 --> 00:04:23,860
car as you can see it didn't go very

00:04:21,160 --> 00:04:26,830
fast and it was essentially operating in

00:04:23,860 --> 00:04:28,660
a risk-free zone as far as pedestrians

00:04:26,830 --> 00:04:31,510
were concerned so the next grand

00:04:28,660 --> 00:04:33,610
challenge a few years of years later was

00:04:31,510 --> 00:04:34,660
the urban environment so you can see the

00:04:33,610 --> 00:04:36,270
cars become a little bit more

00:04:34,660 --> 00:04:38,890
streamlined it's got the spinning

00:04:36,270 --> 00:04:42,100
spinning lidar on the top and the car is

00:04:38,890 --> 00:04:44,200
capable of observing the the traffic in

00:04:42,100 --> 00:04:47,020
each direction wait until it makes a

00:04:44,200 --> 00:04:50,080
safe point to make its turn turning in

00:04:47,020 --> 00:04:52,270
front of other vehicles and you can see

00:04:50,080 --> 00:04:54,370
it's doing not a bad job in a minute I

00:04:52,270 --> 00:04:56,680
haven't got my timings exactly perfect

00:04:54,370 --> 00:04:58,810
we will see this moving into the

00:04:56,680 --> 00:05:01,090
visualization of what the simulator on

00:04:58,810 --> 00:05:06,100
board the vehicle sees when this same

00:05:01,090 --> 00:05:09,430
sequence events unfolds so just here so

00:05:06,100 --> 00:05:11,200
what you see here the highlights of what

00:05:09,430 --> 00:05:14,590
is visible to the car using its laser

00:05:11,200 --> 00:05:17,500
based array the mechanism by which the

00:05:14,590 --> 00:05:21,460
car performs it's logic green represents

00:05:17,500 --> 00:05:23,830
its intended trajectory red represents

00:05:21,460 --> 00:05:26,200
an obstacle blue is obviously the lane

00:05:23,830 --> 00:05:27,970
markings and the orange there represents

00:05:26,200 --> 00:05:30,700
a waypoint so there's some quite

00:05:27,970 --> 00:05:33,970
sophisticated hardware that's gone into

00:05:30,700 --> 00:05:36,820
making this happen the computer on board

00:05:33,970 --> 00:05:38,860
from memory is just a kind of high-end

00:05:36,820 --> 00:05:40,720
desktop equivalent so it's kind of a I

00:05:38,860 --> 00:05:42,640
don't know like a quad-core 6 gig of ram

00:05:40,720 --> 00:05:45,520
something like that I looked into it and

00:05:42,640 --> 00:05:47,260
it was you know impressive but not out

00:05:45,520 --> 00:05:49,320
of this world it was it was the kind of

00:05:47,260 --> 00:05:52,620
computing that many of us have access to

00:05:49,320 --> 00:05:55,800
not so much with the $40,000 radar array

00:05:52,620 --> 00:05:59,580
the top though kind of yeah put me a bit

00:05:55,800 --> 00:06:01,740
out of my budget then not so much on

00:05:59,580 --> 00:06:04,680
sparkfun a little little bit electronics

00:06:01,740 --> 00:06:06,660
now this this is not an autonomous car

00:06:04,680 --> 00:06:08,060
in the same sense of it has its it's a

00:06:06,660 --> 00:06:10,740
like more like a remote-control car

00:06:08,060 --> 00:06:13,470
doesn't have the arrange of sensors but

00:06:10,740 --> 00:06:16,290
this is just 2 minute and a half of just

00:06:13,470 --> 00:06:19,250
pure drop-dead awesome and I just

00:06:16,290 --> 00:06:19,250
couldn't not include it

00:06:21,470 --> 00:06:29,660
so this vehicle is that Traxxas x01

00:06:25,750 --> 00:06:34,990
radio-controlled motor car no senses no

00:06:29,660 --> 00:06:34,990
autonomy 100 miles per hour

00:06:42,900 --> 00:06:50,730
so I've been pasted this with my actual

00:06:45,640 --> 00:06:54,490
car the 1997 Subaru Forester top speed

00:06:50,730 --> 00:06:55,990
150 km/h 100 miles per hour for those in

00:06:54,490 --> 00:07:02,680
the audience we can't do the conversion

00:06:55,990 --> 00:07:06,360
on the fly 161 km/h this is what robotic

00:07:02,680 --> 00:07:06,360
car racing good look like

00:07:06,770 --> 00:07:11,860
the size and dimensions of it roughly

00:07:08,900 --> 00:07:16,690
seventy centimeters long about that big

00:07:11,860 --> 00:07:16,690
about that wide about that tall

00:07:16,729 --> 00:07:22,449
retails for about $1,000 so this is

00:07:22,969 --> 00:07:26,229
i phone

00:07:26,849 --> 00:07:30,889
to get your iPhone to this particular

00:07:28,529 --> 00:07:30,889
vehicle

00:07:32,180 --> 00:07:39,889
but even $1,000 maybe cheaper than

00:07:36,190 --> 00:07:43,039
$40,000 laser based radar array still

00:07:39,889 --> 00:07:45,650
outside of my budget unfortunately so as

00:07:43,039 --> 00:07:48,080
you can say see we have small and large

00:07:45,650 --> 00:07:51,080
robotic cars in the world that might

00:07:48,080 --> 00:07:53,210
exist that they exist on a spectrum from

00:07:51,080 --> 00:07:55,280
drive-by wireless autonomous drive by

00:07:53,210 --> 00:07:57,020
wire so that was that's what I call the

00:07:55,280 --> 00:08:00,470
category of this this Traxxas where

00:07:57,020 --> 00:08:02,270
obviously the vehicle itself is you know

00:08:00,470 --> 00:08:05,570
has no no driver in it it's driven

00:08:02,270 --> 00:08:08,000
remotely many people pursue robotic cars

00:08:05,570 --> 00:08:09,919
through essentially having a radio

00:08:08,000 --> 00:08:11,780
transmitter from their PC through to the

00:08:09,919 --> 00:08:14,870
actual vehicle and they do the AI

00:08:11,780 --> 00:08:17,060
programming on the on the computer they

00:08:14,870 --> 00:08:19,310
may have for example super like

00:08:17,060 --> 00:08:20,840
supervised systems where you give it

00:08:19,310 --> 00:08:23,270
like rough directions but you might have

00:08:20,840 --> 00:08:25,970
things like obstacle avoidance or

00:08:23,270 --> 00:08:28,460
automatic braking built into the AI and

00:08:25,970 --> 00:08:31,190
of course our actual cars increasingly

00:08:28,460 --> 00:08:32,719
our robotic so that comes from things

00:08:31,190 --> 00:08:35,779
where you you might we've had for many

00:08:32,719 --> 00:08:38,450
many years things like ABS that just

00:08:35,779 --> 00:08:41,630
happens you don't do it it's just it

00:08:38,450 --> 00:08:43,580
automatically ignores your instruction

00:08:41,630 --> 00:08:45,740
to brake at a particular intensity and

00:08:43,580 --> 00:08:48,620
modulates that intensity based on the

00:08:45,740 --> 00:08:50,779
wheel skid things like reversing sensors

00:08:48,620 --> 00:08:52,640
they can inform you but of course they

00:08:50,779 --> 00:08:56,120
extend to things like automatic parking

00:08:52,640 --> 00:08:57,560
which have never actually sat through

00:08:56,120 --> 00:09:00,080
but I've known people who've had

00:08:57,560 --> 00:09:02,060
automatic parking cars here in Australia

00:09:00,080 --> 00:09:06,110
which frankly sounds pretty pretty

00:09:02,060 --> 00:09:07,670
convenient to me robotic car racing so

00:09:06,110 --> 00:09:10,100
this was the extent of what I could find

00:09:07,670 --> 00:09:12,830
in terms of actual robotic car racing of

00:09:10,100 --> 00:09:15,200
any you know great interest there's the

00:09:12,830 --> 00:09:17,660
DARPA Grand Challenge urban challenge

00:09:15,200 --> 00:09:19,520
the Pikes Peak ascent and as I've said

00:09:17,660 --> 00:09:22,240
it would be awesome if there were more

00:09:19,520 --> 00:09:25,670
physical car racing robotic competitions

00:09:22,240 --> 00:09:28,970
but there aren't so here's one you can

00:09:25,670 --> 00:09:31,850
use at home so this is open source

00:09:28,970 --> 00:09:33,589
racing car simulator it's now forked

00:09:31,850 --> 00:09:36,440
into something called speed dreams for a

00:09:33,589 --> 00:09:37,520
slightly more modern codebase but

00:09:36,440 --> 00:09:43,130
essentially it's the same application

00:09:37,520 --> 00:09:44,930
and yes so this will looks like any

00:09:43,130 --> 00:09:49,230
great modern computer game

00:09:44,930 --> 00:09:51,450
so with foursome 80 soundtrack to

00:09:49,230 --> 00:09:54,210
provide drop for your listening pleasure

00:09:51,450 --> 00:09:57,150
so you can see that it includes

00:09:54,210 --> 00:09:58,860
reasonable vehicle fit as a completion

00:09:57,150 --> 00:10:02,490
model

00:09:58,860 --> 00:10:06,030
the fire for example a reasonable road

00:10:02,490 --> 00:10:09,030
conditions simulation of the conditions

00:10:06,030 --> 00:10:11,610
the senses on the on the cars in the

00:10:09,030 --> 00:10:13,620
actual tox system have full access to

00:10:11,610 --> 00:10:15,660
the track information but where will be

00:10:13,620 --> 00:10:17,490
headed is a layer over the top of this

00:10:15,660 --> 00:10:21,140
which is essentially the same as you

00:10:17,490 --> 00:10:32,070
would see could self in car or any other

00:10:21,140 --> 00:10:33,630
place let it watch over its for a while

00:10:32,070 --> 00:10:37,080
and all of its glory I'm sure we can all

00:10:33,630 --> 00:10:39,030
remember our PlayStation 2 and system

00:10:37,080 --> 00:10:40,530
glow stick and and a few credits so I

00:10:39,030 --> 00:10:43,290
just wanted to let that let the credits

00:10:40,530 --> 00:10:45,000
roll 5 if the people involved in

00:10:43,290 --> 00:10:49,470
production of the software in the video

00:10:45,000 --> 00:10:51,930
there they do credit okay so this is

00:10:49,470 --> 00:10:54,000
something you can very much do yourself

00:10:51,930 --> 00:10:55,980
so simulated racing corresponds

00:10:54,000 --> 00:10:57,870
extremely well to something you'll find

00:10:55,980 --> 00:11:00,030
on an actual robotic car the

00:10:57,870 --> 00:11:02,670
abstractions are very much the same so

00:11:00,030 --> 00:11:05,160
if you had for example an Arduino your

00:11:02,670 --> 00:11:07,020
own personal chassis rangefinder

00:11:05,160 --> 00:11:08,850
attached to it you would have the exact

00:11:07,020 --> 00:11:11,520
same thing that you have over here in

00:11:08,850 --> 00:11:13,230
the racing car simulator you may have a

00:11:11,520 --> 00:11:14,520
few differences your brakes might be a

00:11:13,230 --> 00:11:15,950
little different but other than that

00:11:14,520 --> 00:11:19,200
you'll pretty much be there you have

00:11:15,950 --> 00:11:22,530
distances and rangefinders speed

00:11:19,200 --> 00:11:25,380
steering brakes noisy sensors are noisy

00:11:22,530 --> 00:11:27,390
so in the real world that's that's what

00:11:25,380 --> 00:11:28,770
happens in fact they're not just noisy

00:11:27,390 --> 00:11:32,220
in the real world they're kind of like

00:11:28,770 --> 00:11:34,980
you know they're terrible in any given

00:11:32,220 --> 00:11:38,010
given state they can easily go I'll just

00:11:34,980 --> 00:11:39,780
mention nothing versus 100% know it for

00:11:38,010 --> 00:11:42,000
no particular reason for like a second

00:11:39,780 --> 00:11:45,600
they'll just kind of vague out and just

00:11:42,000 --> 00:11:47,430
go for a wander so I discovered this

00:11:45,600 --> 00:11:49,590
when I mounted essentially a rangefinder

00:11:47,430 --> 00:11:51,060
just on a physical object and just went

00:11:49,590 --> 00:11:52,770
like this with my hand and then put

00:11:51,060 --> 00:11:55,230
something in front of it it would it

00:11:52,770 --> 00:11:56,760
would very much blip so handling noise

00:11:55,230 --> 00:11:58,800
is something that you have to do and

00:11:56,760 --> 00:12:01,590
handling and creating noise is something

00:11:58,800 --> 00:12:04,230
that the simulator will kindly do for

00:12:01,590 --> 00:12:06,030
you have a complex environment

00:12:04,230 --> 00:12:08,670
open-ended design and problem

00:12:06,030 --> 00:12:10,920
definitions so the rabbit hole for this

00:12:08,670 --> 00:12:12,150
is infinitely deep I'm not going to

00:12:10,920 --> 00:12:13,830
attempt to go all

00:12:12,150 --> 00:12:15,330
an infinitely deep hole in this

00:12:13,830 --> 00:12:18,900
particular presentation you'll be glad

00:12:15,330 --> 00:12:23,670
to hear but it does give you an immense

00:12:18,900 --> 00:12:26,100
amount of room to play and and learn so

00:12:23,670 --> 00:12:28,890
how does this tie in to competitions so

00:12:26,100 --> 00:12:29,940
this does have a yearly competition you

00:12:28,890 --> 00:12:33,240
can enter this thing

00:12:29,940 --> 00:12:34,950
typically Java or C++ so to date the

00:12:33,240 --> 00:12:38,190
competition has no Python entries

00:12:34,950 --> 00:12:39,510
however thanks to thanks just what

00:12:38,190 --> 00:12:42,450
someone will see in a little bit not

00:12:39,510 --> 00:12:44,220
this guy they have created now apply fan

00:12:42,450 --> 00:12:46,350
interface for this so for the first time

00:12:44,220 --> 00:12:48,150
there is the potential to at least in

00:12:46,350 --> 00:12:49,980
the safety of your own home connect up a

00:12:48,150 --> 00:12:52,170
Python client to the racing simulator

00:12:49,980 --> 00:12:54,390
and compete against all of the bots

00:12:52,170 --> 00:12:56,640
which are downloadable and executable

00:12:54,390 --> 00:12:58,830
and you can attempt to race your Python

00:12:56,640 --> 00:13:00,540
client against their their clients of

00:12:58,830 --> 00:13:03,390
course since I had never written a

00:13:00,540 --> 00:13:05,370
robotic car before I did not fare so

00:13:03,390 --> 00:13:06,720
well but I have managed to complete say

00:13:05,370 --> 00:13:08,220
you know a full circuit and I'll

00:13:06,720 --> 00:13:11,850
demonstrate some of the algorithms here

00:13:08,220 --> 00:13:14,900
and the original you know the original

00:13:11,850 --> 00:13:17,370
work you can read a lot of the paper I

00:13:14,900 --> 00:13:21,660
Triple E paper that introduces it more

00:13:17,370 --> 00:13:25,830
formally so this works by essentially

00:13:21,660 --> 00:13:28,920
modifying the game to provide a pretend

00:13:25,830 --> 00:13:30,570
bot which is actually just a socket

00:13:28,920 --> 00:13:32,460
based server that will just listen to

00:13:30,570 --> 00:13:34,530
incoming data on the socket so you can

00:13:32,460 --> 00:13:37,080
essentially drive one of the bots in the

00:13:34,530 --> 00:13:38,670
competition by passing data to a socket

00:13:37,080 --> 00:13:41,310
that you open and you read the game

00:13:38,670 --> 00:13:43,470
state by attaching to attaching to the

00:13:41,310 --> 00:13:44,550
server and sucking data outer data out

00:13:43,470 --> 00:13:48,120
of it

00:13:44,550 --> 00:13:50,070
and this particular individual here went

00:13:48,120 --> 00:13:52,620
and created the Python version for it

00:13:50,070 --> 00:13:54,810
which is just awesome and it's like

00:13:52,620 --> 00:13:57,630
super easy to use other than installing

00:13:54,810 --> 00:13:59,670
talks which is now like it's like 2008

00:13:57,630 --> 00:14:01,680
codes so you know your operating system

00:13:59,670 --> 00:14:03,630
may not comply anymore but it's

00:14:01,680 --> 00:14:04,110
essentially you know it's not really a

00:14:03,630 --> 00:14:07,320
big deal

00:14:04,110 --> 00:14:10,140
so this came about as a result of doing

00:14:07,320 --> 00:14:12,330
a course called it's by Udacity called

00:14:10,140 --> 00:14:14,010
programming a robotic car and it's an

00:14:12,330 --> 00:14:17,610
artificial intelligence course runs for

00:14:14,010 --> 00:14:19,260
seven weeks and it was then it was the

00:14:17,610 --> 00:14:22,200
whole company was started by the same

00:14:19,260 --> 00:14:23,670
guy Sebastian Thrun who was talked about

00:14:22,200 --> 00:14:24,910
earlier in the context of the DARPA

00:14:23,670 --> 00:14:27,940
challenges

00:14:24,910 --> 00:14:31,090
really serious and impressive guy and he

00:14:27,940 --> 00:14:33,910
has decided to create an alternative

00:14:31,090 --> 00:14:36,030
education platform online called Udacity

00:14:33,910 --> 00:14:38,530
and you can do a completely free

00:14:36,030 --> 00:14:40,180
artificial intelligence totally

00:14:38,530 --> 00:14:41,260
creditable that well not creditable in

00:14:40,180 --> 00:14:42,970
the sense of you can't actually get

00:14:41,260 --> 00:14:45,700
credit for it I mean its credit worthy

00:14:42,970 --> 00:14:48,160
course in artificial intelligence in

00:14:45,700 --> 00:14:51,390
this case clustered around programming a

00:14:48,160 --> 00:14:54,400
robotic car which is what provided in in

00:14:51,390 --> 00:14:58,600
inspiration too I suppose you'd call

00:14:54,400 --> 00:15:02,410
that mr. Lang Quadron and also to myself

00:14:58,600 --> 00:15:03,640
I didn't write it I'm just saying we

00:15:02,410 --> 00:15:06,370
were in the same course

00:15:03,640 --> 00:15:08,440
so getting to your vehicle what does a

00:15:06,370 --> 00:15:11,410
robotic car look like you have basically

00:15:08,440 --> 00:15:13,510
20 range-finding 20 laser rangefinders

00:15:11,410 --> 00:15:16,090
that are virtual so that you can look

00:15:13,510 --> 00:15:18,070
around you can get your current angle to

00:15:16,090 --> 00:15:21,280
the centerline of the track as a sensor

00:15:18,070 --> 00:15:23,050
or reading crosstrack error which is

00:15:21,280 --> 00:15:25,270
just like the amount of meters that you

00:15:23,050 --> 00:15:27,640
to one side or the other of the

00:15:25,270 --> 00:15:30,820
particular track knowledge of distance

00:15:27,640 --> 00:15:32,890
to competitors if you have any and you

00:15:30,820 --> 00:15:34,110
drive with an accelerator or break the

00:15:32,890 --> 00:15:36,070
steering wheel and the clutch

00:15:34,110 --> 00:15:38,050
unfortunately the clutch isn't hard to

00:15:36,070 --> 00:15:39,910
use it you know you don't kind of you

00:15:38,050 --> 00:15:41,860
know do that or anything it's you just

00:15:39,910 --> 00:15:44,910
send it an integer and it switches so

00:15:41,860 --> 00:15:50,110
you know fortunately that's not too bad

00:15:44,910 --> 00:15:51,460
so sorry there is a gear change yeah so

00:15:50,110 --> 00:15:53,080
you send the integers of a gear change

00:15:51,460 --> 00:15:55,570
and you take off the accelerator

00:15:53,080 --> 00:15:57,520
momentarily or something I don't know

00:15:55,570 --> 00:15:59,910
the software does it it's provided

00:15:57,520 --> 00:16:02,470
there's an API so it's not a problem so

00:15:59,910 --> 00:16:05,350
I'll jump forward to the next slide and

00:16:02,470 --> 00:16:07,180
then back to this one this picture which

00:16:05,350 --> 00:16:09,810
we've probably all saw back in year 11

00:16:07,180 --> 00:16:12,460
and some of us may have never seen since

00:16:09,810 --> 00:16:15,460
will be your friend it's an incredibly

00:16:12,460 --> 00:16:17,710
helpful picture when it comes to trying

00:16:15,460 --> 00:16:20,260
to figure out what's going on in this

00:16:17,710 --> 00:16:22,420
diagram and how you can drive a car so

00:16:20,260 --> 00:16:27,460
this is a visualization of a car driving

00:16:22,420 --> 00:16:30,550
at 90 km/h using nothing but these 20

00:16:27,460 --> 00:16:32,080
pieces of information and so it that's

00:16:30,550 --> 00:16:34,540
essentially the distance to the track

00:16:32,080 --> 00:16:36,430
edge at any given situation and it's

00:16:34,540 --> 00:16:38,180
making the turns appropriately based on

00:16:36,430 --> 00:16:42,320
that data input data

00:16:38,180 --> 00:16:44,600
and that's where it hit a wall so not

00:16:42,320 --> 00:16:46,339
not quite so perfect in that particular

00:16:44,600 --> 00:16:48,890
example there are a few kinks to work

00:16:46,339 --> 00:16:50,770
out in that particular issue and that's

00:16:48,890 --> 00:16:53,660
where we come back to this particular

00:16:50,770 --> 00:16:55,520
image here so if you remember in your

00:16:53,660 --> 00:16:59,020
head though what's a line sticking out

00:16:55,520 --> 00:17:02,000
and they may essentially stick out to

00:16:59,020 --> 00:17:04,370
over here somewhere and essentially you

00:17:02,000 --> 00:17:06,140
normalize that bring that down to here

00:17:04,370 --> 00:17:08,150
and then all of a sudden all of these

00:17:06,140 --> 00:17:10,400
functions that you might have used or

00:17:08,150 --> 00:17:12,980
vaguely remembered you can bring back to

00:17:10,400 --> 00:17:15,709
reality and you go okay I want the

00:17:12,980 --> 00:17:18,110
y-axis of that thing well what's the

00:17:15,709 --> 00:17:20,480
y-axis of this thing out here well it's

00:17:18,110 --> 00:17:22,730
the y-axis of this thing here that's the

00:17:20,480 --> 00:17:24,949
sign of that particular function times

00:17:22,730 --> 00:17:26,959
that distance and like it's not so bad

00:17:24,949 --> 00:17:28,880
when you just like sit down with a you

00:17:26,959 --> 00:17:31,370
know like this picture and a pencil and

00:17:28,880 --> 00:17:33,110
like draw it out all of a sudden that

00:17:31,370 --> 00:17:34,730
kind of makes sense even though like I

00:17:33,110 --> 00:17:37,540
would never call myself a really

00:17:34,730 --> 00:17:42,440
particular competent geometric

00:17:37,540 --> 00:17:43,730
geometrician math guy you know but you

00:17:42,440 --> 00:17:45,620
know overlay that picture and you're

00:17:43,730 --> 00:17:47,780
sort of sort yourself out and the

00:17:45,620 --> 00:17:50,510
Advanta thing is mostly you get it right

00:17:47,780 --> 00:17:52,160
once and it just works because generally

00:17:50,510 --> 00:17:53,540
if you get it wrong everything just

00:17:52,160 --> 00:17:55,820
explodes straight away and you can't

00:17:53,540 --> 00:17:59,240
make any progress it's a fairly binary

00:17:55,820 --> 00:18:01,730
success relationship here so what we

00:17:59,240 --> 00:18:05,090
need to do is let's let's go and relate

00:18:01,730 --> 00:18:09,200
that to what we just saw about driving

00:18:05,090 --> 00:18:10,429
around so I sent you so what you can see

00:18:09,200 --> 00:18:12,500
here is me stuffing around with the

00:18:10,429 --> 00:18:15,040
command prompt this is me loading up

00:18:12,500 --> 00:18:18,920
stalks in single single racecar mode

00:18:15,040 --> 00:18:20,120
firing up my my bot on the right there

00:18:18,920 --> 00:18:23,210
that's doing the driving and also

00:18:20,120 --> 00:18:24,020
running the GUI and you can see driving

00:18:23,210 --> 00:18:25,730
on the racetrack

00:18:24,020 --> 00:18:26,870
coming up you know it's straight its

00:18:25,730 --> 00:18:28,670
straight it's straight there's a little

00:18:26,870 --> 00:18:30,650
bump we can start to see the edges

00:18:28,670 --> 00:18:35,030
appearing in the image over on the right

00:18:30,650 --> 00:18:37,130
you know driving around you get it so

00:18:35,030 --> 00:18:39,679
that car there on the left is make is

00:18:37,130 --> 00:18:40,640
driving on the basis of the input data

00:18:39,679 --> 00:18:42,470
over on the right

00:18:40,640 --> 00:18:44,240
mostly what it's using is this thing

00:18:42,470 --> 00:18:46,070
called current angle to the middle of

00:18:44,240 --> 00:18:48,260
the track so what you'll see here is

00:18:46,070 --> 00:18:51,570
that it fails to take the edge it just

00:18:48,260 --> 00:18:55,379
drives mindlessly you know

00:18:51,570 --> 00:18:56,820
in in big grandpa swings all the way all

00:18:55,379 --> 00:18:58,590
the way through the track kind of look

00:18:56,820 --> 00:19:01,529
kind of like me on my elves but you know

00:18:58,590 --> 00:19:03,239
it does very much get there so and and

00:19:01,529 --> 00:19:05,100
that steering algorithm was a one-liner

00:19:03,239 --> 00:19:07,350
provided by someone else which I'm very

00:19:05,100 --> 00:19:12,389
grateful for because doing better

00:19:07,350 --> 00:19:14,340
suddenly gets really really hard so all

00:19:12,389 --> 00:19:16,619
of a sudden you need to have a map of

00:19:14,340 --> 00:19:19,109
where you are you have an intention to

00:19:16,619 --> 00:19:21,090
actually follow a specific path whereas

00:19:19,109 --> 00:19:23,009
this is just a real simple response to a

00:19:21,090 --> 00:19:25,559
single input function that provides the

00:19:23,009 --> 00:19:25,950
angle to the steering wheel so there we

00:19:25,559 --> 00:19:29,389
go

00:19:25,950 --> 00:19:29,389
slowly completing the lap of the track

00:19:29,450 --> 00:19:37,049
so where do we go from there basic

00:19:32,340 --> 00:19:40,080
algorithms steering braking obstacle

00:19:37,049 --> 00:19:42,840
avoidance if you must and strategy so I

00:19:40,080 --> 00:19:44,820
didn't even dare touch strategy so I

00:19:42,840 --> 00:19:47,009
will dive a little bit into some of

00:19:44,820 --> 00:19:49,349
these algorithms so one of the things I

00:19:47,009 --> 00:19:51,479
desperately wanted to do for this course

00:19:49,349 --> 00:19:53,869
was just make it the most incredible

00:19:51,479 --> 00:19:56,009
lights and successful sort of you know

00:19:53,869 --> 00:19:58,200
exploration of cars just hanging around

00:19:56,009 --> 00:20:00,090
corners but I didn't really get there

00:19:58,200 --> 00:20:02,849
because it was a bit bit hard to be

00:20:00,090 --> 00:20:05,249
really honest and getting into a serious

00:20:02,849 --> 00:20:07,349
competition like this with so few inputs

00:20:05,249 --> 00:20:08,729
you really need to take you really you

00:20:07,349 --> 00:20:09,269
know you kind of need to pull out that

00:20:08,729 --> 00:20:11,669
textbook

00:20:09,269 --> 00:20:15,059
unfortunately so I'm going to dive a bit

00:20:11,669 --> 00:20:17,399
into how we go about doing some aspect

00:20:15,059 --> 00:20:18,749
of localization and mapping just to give

00:20:17,399 --> 00:20:20,789
you a taste for the kinds of algorithms

00:20:18,749 --> 00:20:23,940
that you would need to do when building

00:20:20,789 --> 00:20:26,220
this kind of car so that's the one-liner

00:20:23,940 --> 00:20:27,840
by the way for the steering algorithm

00:20:26,220 --> 00:20:31,739
that was just provided which is where

00:20:27,840 --> 00:20:34,859
you take the angle to the track and then

00:20:31,739 --> 00:20:36,570
the distance that you're off which I

00:20:34,859 --> 00:20:38,309
realized they're different units but

00:20:36,570 --> 00:20:39,629
somehow this works anyway because I

00:20:38,309 --> 00:20:42,659
think generally the errors don't get

00:20:39,629 --> 00:20:44,519
looked too large and stare lock is you

00:20:42,659 --> 00:20:46,919
can only turn 90 degrees on your

00:20:44,519 --> 00:20:49,919
steering wheel and that will take you

00:20:46,919 --> 00:20:51,809
around the track to go further what you

00:20:49,919 --> 00:20:54,119
need is a motion model you need to know

00:20:51,809 --> 00:20:55,799
how your car is going to respond to

00:20:54,119 --> 00:20:57,779
steering in a more intelligent kind of

00:20:55,799 --> 00:21:00,179
way partly we need this because there's

00:20:57,779 --> 00:21:02,340
no compass so you have absolutely no

00:21:00,179 --> 00:21:04,739
idea what direction your car is facing

00:21:02,340 --> 00:21:05,070
at any given point in time you can in

00:21:04,739 --> 00:21:07,620
fact

00:21:05,070 --> 00:21:09,210
work out whether you're going away or

00:21:07,620 --> 00:21:10,950
towards the starting line that is

00:21:09,210 --> 00:21:12,870
provided but you have no sense of

00:21:10,950 --> 00:21:14,759
north-south I've just turned to the left

00:21:12,870 --> 00:21:16,710
I've just turned to the right all you

00:21:14,759 --> 00:21:19,139
know is what's happening to the the

00:21:16,710 --> 00:21:20,880
track edges around you so without being

00:21:19,139 --> 00:21:23,009
able to model your expected trajectory

00:21:20,880 --> 00:21:26,429
you can't actually plan where you want

00:21:23,009 --> 00:21:28,649
to go so here we go so this this

00:21:26,429 --> 00:21:32,330
attractive hand-drawn image was stolen

00:21:28,649 --> 00:21:34,769
from the Udacity course site for example

00:21:32,330 --> 00:21:37,049
and you can see there that this is

00:21:34,769 --> 00:21:40,769
implementing a so-called bicycle model

00:21:37,049 --> 00:21:42,450
so ignoring the differential differences

00:21:40,769 --> 00:21:43,940
between the course taken by the inner

00:21:42,450 --> 00:21:46,200
wheel versus the outer wheel and just

00:21:43,940 --> 00:21:48,750
imagining that it essentially had one

00:21:46,200 --> 00:21:51,029
one track of motion so just a few of the

00:21:48,750 --> 00:21:52,889
basic definitions so the amount of

00:21:51,029 --> 00:21:54,539
steering you're applying is alpha the

00:21:52,889 --> 00:21:57,149
amount of angle that you already have

00:21:54,539 --> 00:21:59,639
your compass direction is is Theta the

00:21:57,149 --> 00:22:00,870
distance of the car and I sorry the

00:21:59,639 --> 00:22:02,250
length of the car and the distance

00:22:00,870 --> 00:22:04,590
you're traveling in a given time slice

00:22:02,250 --> 00:22:07,259
so tox will provide you with an update

00:22:04,590 --> 00:22:09,509
every point zero two seconds every two

00:22:07,259 --> 00:22:12,000
hundredths of a second so in order to

00:22:09,509 --> 00:22:13,889
respond to what's going on in talks when

00:22:12,000 --> 00:22:15,600
you're building your AI you have to be

00:22:13,889 --> 00:22:17,610
able to provide it with an update every

00:22:15,600 --> 00:22:19,200
two hundredths of a second otherwise

00:22:17,610 --> 00:22:20,669
what happens is that it will just go

00:22:19,200 --> 00:22:21,870
with the last known instruction which

00:22:20,669 --> 00:22:24,690
may or may not be valid at that

00:22:21,870 --> 00:22:27,450
particular point in time so here's a

00:22:24,690 --> 00:22:29,460
little bit more of the evil maths that

00:22:27,450 --> 00:22:33,899
will drive your car around the circle

00:22:29,460 --> 00:22:37,289
for you so this is also the basis as I

00:22:33,899 --> 00:22:39,240
understand it of steering in modern cars

00:22:37,289 --> 00:22:41,789
because if you have a car and you steer

00:22:39,240 --> 00:22:45,539
to the left if you translate both wheels

00:22:41,789 --> 00:22:46,830
the exact same number of degrees you'll

00:22:45,539 --> 00:22:48,750
end up with a car where theoretically

00:22:46,830 --> 00:22:50,309
anyway the inside wheels are not

00:22:48,750 --> 00:22:52,169
following the Sat rotating around the

00:22:50,309 --> 00:22:53,909
same circle as the outside wheels and

00:22:52,169 --> 00:22:55,950
you would need to for example rotate

00:22:53,909 --> 00:22:56,610
suppose I'm turning right that's me

00:22:55,950 --> 00:23:00,809
turning right

00:22:56,610 --> 00:23:02,879
wait that's me turning right and this

00:23:00,809 --> 00:23:05,820
week okay now I'm turning you're right

00:23:02,879 --> 00:23:07,980
and this wheel here has to go further

00:23:05,820 --> 00:23:09,629
than this wheel here so either you will

00:23:07,980 --> 00:23:11,730
tear off your outside wheel and send it

00:23:09,629 --> 00:23:14,429
spinning away or you actually need to

00:23:11,730 --> 00:23:15,870
change the angle of these wheels so that

00:23:14,429 --> 00:23:18,149
they're rotating around the comp the

00:23:15,870 --> 00:23:18,900
common inside point and that's what this

00:23:18,149 --> 00:23:21,300
thing's doing in the

00:23:18,900 --> 00:23:24,870
bicycle model sent it's an approximation

00:23:21,300 --> 00:23:26,730
of the curve that is locating that

00:23:24,870 --> 00:23:30,750
inside point that you're turning right

00:23:26,730 --> 00:23:33,150
around and then deriving your expected

00:23:30,750 --> 00:23:35,400
location after some period in time for

00:23:33,150 --> 00:23:37,800
some given quantity of steering that

00:23:35,400 --> 00:23:41,190
you're applying to the model so some

00:23:37,800 --> 00:23:43,440
maths later what we do is we have some

00:23:41,190 --> 00:23:45,720
code that's it it's pretty

00:23:43,440 --> 00:23:48,480
straightforward code it's not very many

00:23:45,720 --> 00:23:50,220
lines long the first part of the if

00:23:48,480 --> 00:23:52,830
statement is just catching a divide by

00:23:50,220 --> 00:23:56,190
zero error where if you are not in fact

00:23:52,830 --> 00:23:57,780
turning the at all the location of the

00:23:56,190 --> 00:24:00,300
theoretical point around which you are

00:23:57,780 --> 00:24:01,920
rotating is infinitely far away which is

00:24:00,300 --> 00:24:04,320
very very bad so you handle that

00:24:01,920 --> 00:24:09,720
otherwise you're just rotating around a

00:24:04,320 --> 00:24:11,670
curve so that diagram from before yes

00:24:09,720 --> 00:24:13,890
very important so what do we do with all

00:24:11,670 --> 00:24:15,330
of this well I find it very hard to

00:24:13,890 --> 00:24:18,000
connect to what's going on without

00:24:15,330 --> 00:24:19,650
something visual happening I just kind

00:24:18,000 --> 00:24:22,050
of I don't know I just in my head

00:24:19,650 --> 00:24:24,870
nothing happens until I see a picture so

00:24:22,050 --> 00:24:26,250
let's draw Matt right drawing a map is

00:24:24,870 --> 00:24:28,350
really hard if you don't know your

00:24:26,250 --> 00:24:30,480
starting location you don't have your

00:24:28,350 --> 00:24:32,580
initial coordinates you don't know where

00:24:30,480 --> 00:24:34,740
you're turning and you don't know how

00:24:32,580 --> 00:24:36,750
much you've turned by so how do you go

00:24:34,740 --> 00:24:37,910
with that well let's just assume we know

00:24:36,750 --> 00:24:40,800
where the car is

00:24:37,910 --> 00:24:42,660
step one let's assume there are no noisy

00:24:40,800 --> 00:24:44,430
sensors and every time I turn the car

00:24:42,660 --> 00:24:48,600
moves by the exact proportional amount

00:24:44,430 --> 00:24:50,850
that means no skidding no errors in the

00:24:48,600 --> 00:24:57,150
sensors no anything but you know it's a

00:24:50,850 --> 00:25:00,630
way so here is mapping version one plus

00:24:57,150 --> 00:25:04,560
a vocal a musical expression of my

00:25:00,630 --> 00:25:06,240
emotions when something goes wrong so

00:25:04,560 --> 00:25:08,130
what you can see here is on the right

00:25:06,240 --> 00:25:09,840
I've taken that those sensitive lines

00:25:08,130 --> 00:25:12,450
and I've just left them on the graph and

00:25:09,840 --> 00:25:14,220
I'm just now drawing the complete plot

00:25:12,450 --> 00:25:18,320
of what's going on there and you can see

00:25:14,220 --> 00:25:18,320
that up on the left there

00:25:19,970 --> 00:25:23,419
on our

00:25:30,890 --> 00:25:36,180
so that that's the experience you will

00:25:33,990 --> 00:25:40,500
have when programming a robotic car for

00:25:36,180 --> 00:25:45,480
many many many times so then it took me

00:25:40,500 --> 00:25:50,070
a day to fix that so this one this one

00:25:45,480 --> 00:25:55,650
here is mapping that know the video is

00:25:50,070 --> 00:26:01,140
non present ok execute just just I will

00:25:55,650 --> 00:26:04,500
find I opened the wrong version of my

00:26:01,140 --> 00:26:07,490
powerpoint here is the correct version

00:26:04,500 --> 00:26:07,490
of my powerpoint

00:26:13,440 --> 00:26:18,360
there's Benny Hill there's mapping that

00:26:15,180 --> 00:26:22,560
works so here's rebuilding this you know

00:26:18,360 --> 00:26:24,030
in a way that works so once again I'm

00:26:22,560 --> 00:26:27,270
just stuffing around and this time what

00:26:24,030 --> 00:26:29,100
I've done is modify my algorithm so that

00:26:27,270 --> 00:26:31,710
I'm just plotting pixels on a numpy

00:26:29,100 --> 00:26:34,350
array and updating that so what went

00:26:31,710 --> 00:26:36,990
wrong in the last video was essentially

00:26:34,350 --> 00:26:38,790
that TK enter the awesome graphic

00:26:36,990 --> 00:26:41,940
library that's included with pies and by

00:26:38,790 --> 00:26:43,920
default was taking too long because of

00:26:41,940 --> 00:26:45,630
the build up of objects because it kept

00:26:43,920 --> 00:26:47,730
every single one of these line plots at

00:26:45,630 --> 00:26:49,620
least so I think this certainly did in

00:26:47,730 --> 00:26:51,270
the end fix it and you can see now I'm

00:26:49,620 --> 00:26:53,250
just plotting the end points as pixels

00:26:51,270 --> 00:26:55,860
in a numpy array and what we'll see here

00:26:53,250 --> 00:26:58,470
is that the map slowly begins to build

00:26:55,860 --> 00:27:00,420
itself up there's a few things of

00:26:58,470 --> 00:27:02,370
interest to note one is that despite

00:27:00,420 --> 00:27:04,440
being on a straight racecourse these

00:27:02,370 --> 00:27:08,250
lines down here on the right where it

00:27:04,440 --> 00:27:10,740
started are not quite straight the or it

00:27:08,250 --> 00:27:13,650
seems to be going a little far round to

00:27:10,740 --> 00:27:14,010
the right that doesn't seem quite right

00:27:13,650 --> 00:27:16,770
either

00:27:14,010 --> 00:27:19,590
but what we'll notice is that that will

00:27:16,770 --> 00:27:24,150
in fact even itself out in a little bit

00:27:19,590 --> 00:27:25,680
so one of the things there is that this

00:27:24,150 --> 00:27:28,830
is going to turn out not to matter very

00:27:25,680 --> 00:27:30,420
much because it is rotated but by the

00:27:28,830 --> 00:27:32,910
time it does a complete circuit will

00:27:30,420 --> 00:27:34,230
notice that it is in fact internally

00:27:32,910 --> 00:27:35,970
coherent even though it's not quite

00:27:34,230 --> 00:27:37,770
right first of all there's the fact that

00:27:35,970 --> 00:27:39,690
it's obviously ninety degrees out just

00:27:37,770 --> 00:27:41,850
because I got my rows and columns wrong

00:27:39,690 --> 00:27:43,260
in the numpy array but yeah you know the

00:27:41,850 --> 00:27:45,060
car doesn't care it might as well be

00:27:43,260 --> 00:27:46,890
driving on this particular circuit and

00:27:45,060 --> 00:27:49,730
you can see that this is where we can

00:27:46,890 --> 00:27:51,930
now build up things like planning

00:27:49,730 --> 00:27:54,030
localization calculation of where the

00:27:51,930 --> 00:27:55,530
car is on its track now you can get into

00:27:54,030 --> 00:27:57,720
these algorithms you can use these

00:27:55,530 --> 00:28:00,000
things for taking a finer curve

00:27:57,720 --> 00:28:03,000
obviously I've chosen now just a simple

00:28:00,000 --> 00:28:06,450
circular or no oval racetrack the

00:28:03,000 --> 00:28:07,980
advantage of that is that lets you see

00:28:06,450 --> 00:28:10,020
what happens when you drive through all

00:28:07,980 --> 00:28:11,790
the quadrants of the unit circle so

00:28:10,020 --> 00:28:15,150
quite often what you'll find is that

00:28:11,790 --> 00:28:17,220
something that in the normal first 90

00:28:15,150 --> 00:28:19,890
degrees will be say a positive number

00:28:17,220 --> 00:28:22,110
between zero and one will flip to be a

00:28:19,890 --> 00:28:24,630
negative number between zero and one as

00:28:22,110 --> 00:28:25,890
it completes its circuit etc etc so

00:28:24,630 --> 00:28:26,260
there will be a lot of bugs that come

00:28:25,890 --> 00:28:28,420
from

00:28:26,260 --> 00:28:30,280
driving a full circuit again and again

00:28:28,420 --> 00:28:32,140
and again so here we go and you see now

00:28:30,280 --> 00:28:33,970
it's on it on its next on its final

00:28:32,140 --> 00:28:36,550
rotation now it's matching up with its

00:28:33,970 --> 00:28:39,370
previous location but it appears to have

00:28:36,550 --> 00:28:40,840
a different point that its mapping there

00:28:39,370 --> 00:28:43,210
on its sensors now I haven't got to the

00:28:40,840 --> 00:28:47,650
bottom of this one yet so I've got some

00:28:43,210 --> 00:28:49,870
hypotheses like maybe maybe the bicycle

00:28:47,650 --> 00:28:51,880
model is just wrong enough that you know

00:28:49,870 --> 00:28:54,160
this is this is what happens and you can

00:28:51,880 --> 00:28:56,110
see it's not plotting the exact same

00:28:54,160 --> 00:28:59,680
course so I haven't turned on noisy

00:28:56,110 --> 00:29:01,600
sensors this is with noise free sensors

00:28:59,680 --> 00:29:03,820
there's no particular reason that any of

00:29:01,600 --> 00:29:05,500
this should be in any way wrong I might

00:29:03,820 --> 00:29:07,360
be driving fast enough that there's some

00:29:05,500 --> 00:29:09,370
skid in the wheels so that even though

00:29:07,360 --> 00:29:11,260
so that my algorithm doesn't know its

00:29:09,370 --> 00:29:12,970
location has changed but maybe the cars

00:29:11,260 --> 00:29:16,270
swung and rotated either more or less

00:29:12,970 --> 00:29:18,370
than is being calculated and as a result

00:29:16,270 --> 00:29:22,260
you know there's some errors in it but

00:29:18,370 --> 00:29:25,800
this is essentially mapping that works

00:29:22,260 --> 00:29:28,210
so where do we go from there so

00:29:25,800 --> 00:29:30,730
localization that's the opposite of

00:29:28,210 --> 00:29:32,350
mapping so what happened there was I

00:29:30,730 --> 00:29:36,070
just assumed that every single point in

00:29:32,350 --> 00:29:37,570
my trajectory was perfect and that my my

00:29:36,070 --> 00:29:39,190
estimation of my forecasts of my

00:29:37,570 --> 00:29:41,200
location was correct enough I could just

00:29:39,190 --> 00:29:42,850
take the center information instead of

00:29:41,200 --> 00:29:44,830
using it to plot the location of my car

00:29:42,850 --> 00:29:48,820
I'd use it to plot the world around me

00:29:44,830 --> 00:29:50,950
the localization is the application in

00:29:48,820 --> 00:29:53,260
reverse of that same principle where you

00:29:50,950 --> 00:29:55,450
assume that you have that map that we

00:29:53,260 --> 00:29:58,090
had before and you move around and you

00:29:55,450 --> 00:30:01,780
go while every sensor information is

00:29:58,090 --> 00:30:03,460
still perfect but now it gives me

00:30:01,780 --> 00:30:05,650
reference points that I can trust or

00:30:03,460 --> 00:30:07,630
believe or rely upon in order to place

00:30:05,650 --> 00:30:10,420
myself within that within that

00:30:07,630 --> 00:30:12,670
environment so you know estimate it

00:30:10,420 --> 00:30:15,040
challenge your assumptions and then

00:30:12,670 --> 00:30:18,100
simultaneous localization and mapping is

00:30:15,040 --> 00:30:20,200
where you essentially do a more

00:30:18,100 --> 00:30:22,660
probabilistic correlation of the one to

00:30:20,200 --> 00:30:25,720
one to another and that is where you can

00:30:22,660 --> 00:30:28,120
get into relating the two and getting

00:30:25,720 --> 00:30:32,650
into some more serious stuff in terms of

00:30:28,120 --> 00:30:33,880
in terms of planning that's an example

00:30:32,650 --> 00:30:36,580
of what I've been talking about there is

00:30:33,880 --> 00:30:38,740
what I would call global planning it's

00:30:36,580 --> 00:30:39,680
not truly global but the idea is that

00:30:38,740 --> 00:30:41,600
you have a map of

00:30:39,680 --> 00:30:43,040
there's a whole environment and you're

00:30:41,600 --> 00:30:46,010
trying to locate yourself at a specific

00:30:43,040 --> 00:30:48,380
point local planning is like oh my god

00:30:46,010 --> 00:30:50,540
oh my god there's a wall for example so

00:30:48,380 --> 00:30:51,620
that that's what I do when I slam on the

00:30:50,540 --> 00:30:53,150
brakes when I haven't been paying enough

00:30:51,620 --> 00:30:55,310
attention to the red light in front of

00:30:53,150 --> 00:30:56,780
me or the accelerator when I have been

00:30:55,310 --> 00:30:58,130
paying just enough attention to the red

00:30:56,780 --> 00:31:00,230
light in front of me and oaken's going

00:30:58,130 --> 00:31:02,510
to zip through so local planning is like

00:31:00,230 --> 00:31:06,830
an instinct layer global planning is

00:31:02,510 --> 00:31:09,290
like strategy so an example of local

00:31:06,830 --> 00:31:11,270
planning is implementing automatic

00:31:09,290 --> 00:31:13,280
braking so this is a simple one with

00:31:11,270 --> 00:31:14,900
some magic numbers in it but essentially

00:31:13,280 --> 00:31:17,630
this is doing well what's the diameter

00:31:14,900 --> 00:31:19,100
of my wheel what's my rpms what's some

00:31:17,630 --> 00:31:21,530
number representing the point at which

00:31:19,100 --> 00:31:23,660
my wheels skid okay I'm the refused to

00:31:21,530 --> 00:31:25,550
allow the car to apply any more braking

00:31:23,660 --> 00:31:27,470
than would exceed my skid stress

00:31:25,550 --> 00:31:29,780
threshold so you always know that you

00:31:27,470 --> 00:31:32,090
can just slam the virtual brakes on as

00:31:29,780 --> 00:31:34,190
hard as you want push it through abs and

00:31:32,090 --> 00:31:38,750
the car will perform the maximum

00:31:34,190 --> 00:31:40,940
efficiency braking now I realize I'm

00:31:38,750 --> 00:31:42,350
heading towards the end of my time I do

00:31:40,940 --> 00:31:44,990
just want to talk about this concept of

00:31:42,350 --> 00:31:46,940
filtering because that's as key a key

00:31:44,990 --> 00:31:48,800
concept and that's where you push

00:31:46,940 --> 00:31:51,080
through more than one virtual car at a

00:31:48,800 --> 00:31:53,150
time and so you might be you might take

00:31:51,080 --> 00:31:54,890
that map that we had before and you

00:31:53,150 --> 00:31:56,870
might say well there's some probability

00:31:54,890 --> 00:31:58,160
I'm here but I know my sensors are wrong

00:31:56,870 --> 00:31:59,960
so I might be here on this other

00:31:58,160 --> 00:32:01,940
location and you track multiple of them

00:31:59,960 --> 00:32:03,680
and then every now and then you'll pass

00:32:01,940 --> 00:32:06,170
through the start line where you begin

00:32:03,680 --> 00:32:10,550
at zero zero so all of a sudden even

00:32:06,170 --> 00:32:11,900
though you only have a non absolute

00:32:10,550 --> 00:32:13,640
reference point you just have your

00:32:11,900 --> 00:32:15,590
relative reference point which is where

00:32:13,640 --> 00:32:17,390
you started every now and then you know

00:32:15,590 --> 00:32:19,280
where you start you are at where you

00:32:17,390 --> 00:32:21,800
started and you know which of your

00:32:19,280 --> 00:32:24,260
projections about your map correspond to

00:32:21,800 --> 00:32:26,210
ending up where you started and you can

00:32:24,260 --> 00:32:29,270
start to him do these mapping runs and

00:32:26,210 --> 00:32:31,280
do multiple runs and take multiple

00:32:29,270 --> 00:32:32,870
spreads of information and probabilities

00:32:31,280 --> 00:32:35,420
and relate them to how you move through

00:32:32,870 --> 00:32:37,490
the space and those kinds of algorithms

00:32:35,420 --> 00:32:39,770
I've covered in these courses they're

00:32:37,490 --> 00:32:41,300
extremely exciting and you'll find you

00:32:39,770 --> 00:32:43,460
can apply them to other areas as well

00:32:41,300 --> 00:32:48,470
but nothing's really quite as cool as as

00:32:43,460 --> 00:32:51,070
cars so you know why would you so I hope

00:32:48,470 --> 00:32:52,999
I've given you some kind of presentation

00:32:51,070 --> 00:32:55,039
45 minutes is just

00:32:52,999 --> 00:32:57,139
not enough to explain all this stuff

00:32:55,039 --> 00:32:59,509
it's just not enough to complete convey

00:32:57,139 --> 00:33:01,129
just how awesome and cool it is to

00:32:59,509 --> 00:33:02,629
actually sit down and work on this stuff

00:33:01,129 --> 00:33:04,849
and you'll just have to take my word for

00:33:02,629 --> 00:33:06,169
it one of the things that I'd love to do

00:33:04,849 --> 00:33:07,939
at some point is take this and bring

00:33:06,169 --> 00:33:09,229
this back into an embodied environment

00:33:07,939 --> 00:33:10,969
that's what it means when you take the

00:33:09,229 --> 00:33:13,219
the code and place it in something that

00:33:10,969 --> 00:33:15,289
has a physical abstraction like a small

00:33:13,219 --> 00:33:17,779
you know small Arduino bottle cell bot

00:33:15,289 --> 00:33:20,059
so that would be cool so what's next

00:33:17,779 --> 00:33:21,919
hey anyone want to enter the competition

00:33:20,059 --> 00:33:23,509
with me there's a robot I'm sure there'd

00:33:21,919 --> 00:33:25,159
be space for a Python entry or at the

00:33:23,509 --> 00:33:27,259
very least because this can be played

00:33:25,159 --> 00:33:28,909
multiplayer you could probably enter

00:33:27,259 --> 00:33:30,799
your own BOTS against your own friends

00:33:28,909 --> 00:33:34,579
that were racing as people as well and

00:33:30,799 --> 00:33:37,279
like hey that'd be quite a kick so I'm

00:33:34,579 --> 00:33:39,289
going to wind myself up with just this

00:33:37,279 --> 00:33:41,359
list of further resources that anyone

00:33:39,289 --> 00:33:44,119
can get into if they want to go take a

00:33:41,359 --> 00:33:51,339
look take it further does anyone have

00:33:44,119 --> 00:33:51,339
any feedback or questions I guess sure

00:33:53,020 --> 00:33:56,679
I never know how to end presentation so

00:33:55,179 --> 00:33:57,929
I just like whip right through into the

00:33:56,679 --> 00:34:01,090
discussion and hope no one notices

00:33:57,929 --> 00:34:04,570
didn't notice so is there anything

00:34:01,090 --> 00:34:06,340
that's similar to talks but for urban

00:34:04,570 --> 00:34:09,280
environment so you can try writing a

00:34:06,340 --> 00:34:11,649
self-driving car AI not that I know of

00:34:09,280 --> 00:34:14,369
no unfortunately that would be cool but

00:34:11,649 --> 00:34:14,369
not that I'm aware of

00:34:14,580 --> 00:34:22,960
yes anyone know yes - all of a sudden

00:34:20,860 --> 00:34:24,850
it's like a bidding movie have you have

00:34:22,960 --> 00:34:27,639
you looked at it and the drone stuff

00:34:24,850 --> 00:34:30,100
like the parrot AR for flying equivalent

00:34:27,639 --> 00:34:32,230
so you and do you know I really just

00:34:30,100 --> 00:34:34,179
extended it into the car space because

00:34:32,230 --> 00:34:36,429
it's it's cheaper and more manageable to

00:34:34,179 --> 00:34:38,080
build an actual one if you want it I

00:34:36,429 --> 00:34:39,550
mean some of the drone stuff now you can

00:34:38,080 --> 00:34:41,710
actually just buy a commercial off the

00:34:39,550 --> 00:34:44,200
sell off-the-shelf radio-controlled quad

00:34:41,710 --> 00:34:45,820
copters that will have you can fly them

00:34:44,200 --> 00:34:48,700
certainly by I phone and we'll have a

00:34:45,820 --> 00:34:51,100
like an open-source API but you can

00:34:48,700 --> 00:34:59,170
construct your own cars probably more

00:34:51,100 --> 00:35:02,650
cheaply as well no all right I remember

00:34:59,170 --> 00:35:04,180
so how expensive or is it to put a

00:35:02,650 --> 00:35:06,700
rangefinder in one of those remote

00:35:04,180 --> 00:35:09,160
control cars well one of those remote

00:35:06,700 --> 00:35:11,010
control cars I don't know but a generic

00:35:09,160 --> 00:35:13,390
less expensive remote control

00:35:11,010 --> 00:35:16,630
rangefinder will set you back about 20

00:35:13,390 --> 00:35:20,080
bucks for a sound based an ultrasound

00:35:16,630 --> 00:35:21,670
based one and know about that big and if

00:35:20,080 --> 00:35:24,040
you have the appropriate framework so

00:35:21,670 --> 00:35:26,410
there's I've got one at home that I

00:35:24,040 --> 00:35:27,820
never finished building because I didn't

00:35:26,410 --> 00:35:29,530
realize something really important about

00:35:27,820 --> 00:35:31,420
how robots work and didn't buy all the

00:35:29,530 --> 00:35:34,090
parts so if you're going to get into

00:35:31,420 --> 00:35:35,830
this don't buy what I bought which is

00:35:34,090 --> 00:35:37,210
like an independent chassis that doesn't

00:35:35,830 --> 00:35:40,990
do everything get yourself something

00:35:37,210 --> 00:35:43,660
probably called the Pololu the pol you

00:35:40,990 --> 00:35:45,250
Lu and that is a great base for

00:35:43,660 --> 00:35:47,190
constructing these things and you can

00:35:45,250 --> 00:35:49,390
just mash more parts on it including

00:35:47,190 --> 00:35:50,830
rangefinder so it comes blind so it

00:35:49,390 --> 00:35:53,859
doesn't come with a rangefinder but it

00:35:50,830 --> 00:35:55,840
comes with two wheels reverse on the

00:35:53,859 --> 00:35:58,660
issue I ran into is I couldn't ever

00:35:55,840 --> 00:36:00,670
reverse my wheels so much turning circle

00:35:58,660 --> 00:36:02,170
was about a hundred feet so if you get

00:36:00,670 --> 00:36:03,910
one of these little ones they can you

00:36:02,170 --> 00:36:05,770
know spin on the spot and all that stuff

00:36:03,910 --> 00:36:07,540
and then that will come with an Arduino

00:36:05,770 --> 00:36:09,580
on top of it so you can give it some

00:36:07,540 --> 00:36:11,230
onboard intelligence and wire it up to a

00:36:09,580 --> 00:36:13,000
Bluetooth controller to something with a

00:36:11,230 --> 00:36:15,340
bit more grunt and then you can stick on

00:36:13,000 --> 00:36:16,540
about a twenty dollar rangefinder that's

00:36:15,340 --> 00:36:18,250
probably not going to be enough just

00:36:16,540 --> 00:36:20,050
having one rangefinder you might want a

00:36:18,250 --> 00:36:23,290
couple of different inputs to correlate

00:36:20,050 --> 00:36:25,870
as well and then if you are like

00:36:23,290 --> 00:36:28,750
Ludacris lean on dexterous like me you

00:36:25,870 --> 00:36:32,170
also might want conductive glue instead

00:36:28,750 --> 00:36:34,390
of soldering which you can which you can

00:36:32,170 --> 00:36:36,280
purchase from ThinkGeek but I haven't

00:36:34,390 --> 00:36:38,020
quite got that far but certainly my

00:36:36,280 --> 00:36:43,540
efforts at soul during were not to be

00:36:38,020 --> 00:36:45,160
repeated thanks over there sorry I

00:36:43,540 --> 00:36:47,410
wasn't sure if I might have missed this

00:36:45,160 --> 00:36:49,960
but did you actually get to the stage

00:36:47,410 --> 00:36:52,380
where you could test your driving bot

00:36:49,960 --> 00:36:56,350
against the other I think C++ or Java

00:36:52,380 --> 00:36:58,330
implementations yes well yes and no I

00:36:56,350 --> 00:37:00,430
didn't I never in no stage that I choose

00:36:58,330 --> 00:37:02,020
to do so and I have not done it but to

00:37:00,430 --> 00:37:03,550
do it is is extremely straightforward

00:37:02,020 --> 00:37:05,260
you just add the elements to the

00:37:03,550 --> 00:37:07,660
configuration and it will happily erase

00:37:05,260 --> 00:37:10,210
the other BOTS against it but because I

00:37:07,660 --> 00:37:11,710
never built a competitive entry I really

00:37:10,210 --> 00:37:12,940
just took the baseline there wasn't

00:37:11,710 --> 00:37:15,160
really a lot of point I just would have

00:37:12,940 --> 00:37:18,250
got totally owned but yeah absolutely

00:37:15,160 --> 00:37:20,110
that's the next step okay so say you can

00:37:18,250 --> 00:37:21,520
just straightforwardly just grab a bunch

00:37:20,110 --> 00:37:23,080
of other BOTS and just like race them on

00:37:21,520 --> 00:37:25,690
your machine yeah absolutely so I

00:37:23,080 --> 00:37:28,420
downloaded all of the entries for 2010

00:37:25,690 --> 00:37:32,440
and 2011 which are all C++ and Java

00:37:28,420 --> 00:37:35,500
based and because I'm running it in a VM

00:37:32,440 --> 00:37:38,670
on a notebook is probably not the right

00:37:35,500 --> 00:37:40,690
environment but yeah absolutely you can

00:37:38,670 --> 00:37:42,520
execute each one of them in their own

00:37:40,690 --> 00:37:44,590
process space the central server will

00:37:42,520 --> 00:37:47,020
take care of all of the the messaging

00:37:44,590 --> 00:37:48,820
over the network and will simply simply

00:37:47,020 --> 00:37:51,100
run it and so what the the actual

00:37:48,820 --> 00:37:54,310
competition you submit your BOTS I'm

00:37:51,100 --> 00:37:55,960
sure if we submitted like a Python based

00:37:54,310 --> 00:37:59,260
thing that they would go yeah sure I can

00:37:55,960 --> 00:38:01,870
run that put it in and they have four

00:37:59,260 --> 00:38:03,220
parts to their racing year and they

00:38:01,870 --> 00:38:05,380
associate them with

00:38:03,220 --> 00:38:07,120
I Triple E conferences there's a

00:38:05,380 --> 00:38:09,310
computational intelligence and games

00:38:07,120 --> 00:38:13,870
special interest group and so it's quite

00:38:09,310 --> 00:38:16,260
well organized Thanks cool any other

00:38:13,870 --> 00:38:16,260
questions

00:38:18,839 --> 00:38:23,710
did anyone wanted to see that that that

00:38:21,460 --> 00:38:25,779
100 mile an hour car while I while I

00:38:23,710 --> 00:38:27,309
talk still kind of want to look at it

00:38:25,779 --> 00:38:30,309
again I'll turn my sound off and we can

00:38:27,309 --> 00:38:34,019
just like I'm just going to find it and

00:38:30,309 --> 00:38:34,019
push play before I answer this question

00:38:40,880 --> 00:38:44,390
okay I'm just gonna leave this in the

00:38:42,499 --> 00:38:46,819
background it's just right sorry your

00:38:44,390 --> 00:38:49,509
question so I was just wondering does

00:38:46,819 --> 00:38:51,349
stalks have like an input for GPS

00:38:49,509 --> 00:38:53,269
coordinates or something because surely

00:38:51,349 --> 00:38:56,359
you could base some of your mapping off

00:38:53,269 --> 00:38:58,249
yes absolutely no the lack of a GPS is

00:38:56,359 --> 00:39:00,019
one of the most baffling non inclusions

00:38:58,249 --> 00:39:03,170
of the competition there is no GPS

00:39:00,019 --> 00:39:05,359
available to the car so that's why you

00:39:03,170 --> 00:39:06,859
go to the effort of mapping so in such

00:39:05,359 --> 00:39:08,869
detail because the actual tracks are in

00:39:06,859 --> 00:39:11,059
a standard XML format you could actually

00:39:08,869 --> 00:39:13,759
extract the map from from that but the

00:39:11,059 --> 00:39:15,499
competition has novel maps that you

00:39:13,759 --> 00:39:17,299
haven't necessarily seen before so you

00:39:15,499 --> 00:39:19,160
can't rely on the pre-existence of maps

00:39:17,299 --> 00:39:20,420
plus it's way cooler to explore the

00:39:19,160 --> 00:39:21,650
mapping algorithm because that's what

00:39:20,420 --> 00:39:24,229
you could use to drive something around

00:39:21,650 --> 00:39:25,309
a random room for example so it depends

00:39:24,229 --> 00:39:27,920
to what extent you just want to like

00:39:25,309 --> 00:39:29,359
game the competition versus like build

00:39:27,920 --> 00:39:30,739
something of your own that's competent

00:39:29,359 --> 00:39:33,710
in the field so it depends what you want

00:39:30,739 --> 00:39:36,259
to use it for so is the is the mapping

00:39:33,710 --> 00:39:37,900
to like you do one lap of the track and

00:39:36,259 --> 00:39:40,009
then you can figure out kind of a

00:39:37,900 --> 00:39:41,299
determination of how you're going to

00:39:40,009 --> 00:39:43,579
turn the corners better the next time

00:39:41,299 --> 00:39:45,019
around yeah exactly so not all of them

00:39:43,579 --> 00:39:46,759
do that some of them would do for

00:39:45,019 --> 00:39:48,410
example just look ahead to the distance

00:39:46,759 --> 00:39:50,239
of their maximum sensor and go well I

00:39:48,410 --> 00:39:52,219
just assume that that's the best path at

00:39:50,239 --> 00:39:54,049
the end of that sensor and then plot the

00:39:52,219 --> 00:39:55,579
closest curve so that would be like an

00:39:54,049 --> 00:39:57,920
example of local planning because you

00:39:55,579 --> 00:40:00,049
can see 200 feet or something because

00:39:57,920 --> 00:40:02,299
it's a u.s. thing so you can because you

00:40:00,049 --> 00:40:04,729
can see 200 feet you can plan 200 feet

00:40:02,299 --> 00:40:06,739
but if you want to do like a more global

00:40:04,729 --> 00:40:10,849
state analysis then you know you need

00:40:06,739 --> 00:40:11,989
the mapping yeah I don't know how we're

00:40:10,849 --> 00:40:14,630
going for time I've stopped paying

00:40:11,989 --> 00:40:16,729
attention we've got time for a couple

00:40:14,630 --> 00:40:20,779
five more minutes awesome Chuck about

00:40:16,729 --> 00:40:22,460
anything hi there um I'm just going to

00:40:20,779 --> 00:40:24,589
expand on what the other question about

00:40:22,460 --> 00:40:25,849
the ardupilot and so on and it's a

00:40:24,589 --> 00:40:28,279
little bit related to this do you have

00:40:25,849 --> 00:40:30,170
sensors like accelerometer z' in the

00:40:28,279 --> 00:40:31,849
simulation because the first thing you

00:40:30,170 --> 00:40:33,499
would do if you were when anyone's

00:40:31,849 --> 00:40:35,180
making sort of a quadcopter or anything

00:40:33,499 --> 00:40:37,489
is you get an IMU so you can actually

00:40:35,180 --> 00:40:40,549
roughly guess where you are based on

00:40:37,489 --> 00:40:41,630
accelerometer and compass data and it

00:40:40,549 --> 00:40:43,460
just seems a little bit weird if the

00:40:41,630 --> 00:40:44,960
virtual version wouldn't have the very

00:40:43,460 --> 00:40:47,900
first sensor that you would buy and

00:40:44,960 --> 00:40:49,219
stick on your autonomous device and GPS

00:40:47,900 --> 00:40:50,539
is not particularly reliable but you

00:40:49,219 --> 00:40:51,829
definitely have an IMU so you could

00:40:50,539 --> 00:40:53,790
guess where you were relative to the

00:40:51,829 --> 00:40:55,740
start position yeah

00:40:53,790 --> 00:40:58,050
you have you have if you do have a few

00:40:55,740 --> 00:41:00,480
sensors one is that you have this non

00:40:58,050 --> 00:41:03,000
physical sense sensor which is distance

00:41:00,480 --> 00:41:05,040
from the start the start point so not

00:41:03,000 --> 00:41:06,840
not that as the crow flies distance but

00:41:05,040 --> 00:41:08,580
the proportion of the course that you

00:41:06,840 --> 00:41:11,100
have completed so you get that kind of

00:41:08,580 --> 00:41:13,230
you get a number of some locating

00:41:11,100 --> 00:41:14,700
information but not quite nothing that

00:41:13,230 --> 00:41:16,230
will give you an absolute coordinate

00:41:14,700 --> 00:41:18,870
system is in the system whatsoever

00:41:16,230 --> 00:41:20,370
whereas a GPS might and so that so the

00:41:18,870 --> 00:41:22,110
answer to your question is yes if you

00:41:20,370 --> 00:41:23,880
happy with a relative coordinate system

00:41:22,110 --> 00:41:26,040
and some noise but but I mean do you

00:41:23,880 --> 00:41:27,300
actually get accelerometer values like

00:41:26,040 --> 00:41:29,520
forces that are acting on the car

00:41:27,300 --> 00:41:31,380
because for not like an IMU takes that

00:41:29,520 --> 00:41:33,600
yeah not positional information and

00:41:31,380 --> 00:41:35,790
extrapolates a position from it no no

00:41:33,600 --> 00:41:37,110
you don't know not as not as far as I

00:41:35,790 --> 00:41:39,510
think you just simply don't you get

00:41:37,110 --> 00:41:42,150
speed you get you get your current

00:41:39,510 --> 00:41:44,370
velocity but no acceleration so you

00:41:42,150 --> 00:41:46,530
can't quite get it all Oh from velocity

00:41:44,370 --> 00:41:49,410
you can work out your acceleration yeah

00:41:46,530 --> 00:41:50,970
tuning yes yeah you can sort of Padre

00:41:49,410 --> 00:41:52,290
it's just funny that I when I'm first

00:41:50,970 --> 00:41:53,910
thinking about I'm going oh well it

00:41:52,290 --> 00:41:55,290
might actually be easy to make the real

00:41:53,910 --> 00:41:56,940
thing because yeah it actually get

00:41:55,290 --> 00:41:58,710
enough information out of the virtual

00:41:56,940 --> 00:42:00,480
system yes that's that's very true

00:41:58,710 --> 00:42:03,000
because you even for an Arduino but you

00:42:00,480 --> 00:42:04,980
can just buy a GPS a little bit for it

00:42:03,000 --> 00:42:06,930
that's not terribly expensive I mean

00:42:04,980 --> 00:42:08,490
it's not accurate on the scale that

00:42:06,930 --> 00:42:10,050
you're driving your Arduino bots around

00:42:08,490 --> 00:42:11,220
generally unless you you wouldn't want I

00:42:10,050 --> 00:42:13,440
mean none of these things like quad

00:42:11,220 --> 00:42:15,630
copters rely on GPS like for the only

00:42:13,440 --> 00:42:17,040
it's only for doing waypoints and so on

00:42:15,630 --> 00:42:18,960
I was just thinking when you're talking

00:42:17,040 --> 00:42:21,240
about a rangefinder of course a single

00:42:18,960 --> 00:42:22,470
like a single point rangefinder isn't

00:42:21,240 --> 00:42:23,670
going to get you very far the first

00:42:22,470 --> 00:42:24,900
thing I thought I was will strap a

00:42:23,670 --> 00:42:26,520
Kinect on it if you're making something

00:42:24,900 --> 00:42:28,470
large enough and actually there's been

00:42:26,520 --> 00:42:30,090
some chats on the Olson HS mailing list

00:42:28,470 --> 00:42:32,040
in the US they do this power racing

00:42:30,090 --> 00:42:34,740
series where they basically overclocked

00:42:32,040 --> 00:42:35,790
kids right on toys and you I think it's

00:42:34,740 --> 00:42:37,740
something like you start with the right

00:42:35,790 --> 00:42:39,420
on till you've got $500 to make it go as

00:42:37,740 --> 00:42:41,070
fast as you can in that case is actually

00:42:39,420 --> 00:42:43,080
supposed to be written by human would be

00:42:41,070 --> 00:42:44,340
very easy to have because because

00:42:43,080 --> 00:42:45,720
they're not particularly dangerous like

00:42:44,340 --> 00:42:47,250
you know you know you want to be at a

00:42:45,720 --> 00:42:48,990
NASCAR race where the cars are being

00:42:47,250 --> 00:42:50,640
driven by robots unless you're right at

00:42:48,990 --> 00:42:51,780
the back of the grandstand but I

00:42:50,640 --> 00:42:53,070
mentioned if it was only a little thing

00:42:51,780 --> 00:42:54,360
that went about 20 kilometers an hour

00:42:53,070 --> 00:42:55,890
and there are plenty of tires between

00:42:54,360 --> 00:42:57,600
you and the car it would actually be

00:42:55,890 --> 00:42:59,160
quite fun and you could easily stick a

00:42:57,600 --> 00:43:01,050
Kinect on something that size and it

00:42:59,160 --> 00:43:02,760
wouldn't wear down so much absolutely

00:43:01,050 --> 00:43:05,490
yeah and you can't you can buy like

00:43:02,760 --> 00:43:07,579
these various semi homebrew systems

00:43:05,490 --> 00:43:10,579
especially from the US where there

00:43:07,579 --> 00:43:12,859
like you know like a connect on some

00:43:10,579 --> 00:43:14,420
tank wheels with you know you know you

00:43:12,859 --> 00:43:15,799
can get into it if you're willing to if

00:43:14,420 --> 00:43:17,779
you've got the bucks and the interest

00:43:15,799 --> 00:43:20,479
there's you can go quite far with it and

00:43:17,779 --> 00:43:21,589
then the GPS sensor just constitutes

00:43:20,479 --> 00:43:23,259
another piece of probabilistic

00:43:21,589 --> 00:43:25,519
information about your current location

00:43:23,259 --> 00:43:27,049
so you integrate all of these sensors

00:43:25,519 --> 00:43:28,849
into a probabilistic model well you

00:43:27,049 --> 00:43:31,489
don't have to but it's a good way to go

00:43:28,849 --> 00:43:33,109
and then so so there's the difference

00:43:31,489 --> 00:43:35,900
between deterministic and probabilistic

00:43:33,109 --> 00:43:37,489
like this thing's deterministic it just

00:43:35,900 --> 00:43:39,529
drives off whatever it's being told at

00:43:37,489 --> 00:43:41,209
this minute and time it has no real

00:43:39,529 --> 00:43:43,249
history other than the map I built up

00:43:41,209 --> 00:43:44,539
whereas probabilistic models go well

00:43:43,249 --> 00:43:46,130
this thing's putting me here with this

00:43:44,539 --> 00:43:48,109
probability I've got this conflicting

00:43:46,130 --> 00:43:49,940
information I'm going to assume that I'm

00:43:48,109 --> 00:43:52,700
in this spread of potential locations

00:43:49,940 --> 00:43:55,489
and you know the math gets you know big

00:43:52,700 --> 00:43:57,349
but actually the a lot of it comes down

00:43:55,489 --> 00:44:00,589
to some pretty nice pretty implementable

00:43:57,349 --> 00:44:04,579
algorithms so yes sky's the limit I

00:44:00,589 --> 00:44:08,509
think we've got time for one more okay

00:44:04,579 --> 00:44:09,799
so you mentioned somewhere here that you

00:44:08,509 --> 00:44:12,289
were going through various steps and the

00:44:09,799 --> 00:44:14,269
last step was to develop a strategy for

00:44:12,289 --> 00:44:18,410
approaching the race which is kind of

00:44:14,269 --> 00:44:20,359
you know in yeah in the future so what

00:44:18,410 --> 00:44:22,160
are the I mean one of the elements that

00:44:20,359 --> 00:44:24,859
people have been how are people

00:44:22,160 --> 00:44:26,959
approaching that part of it okay so I'm

00:44:24,859 --> 00:44:29,449
a relative newcomer to like this

00:44:26,959 --> 00:44:31,369
specific competition so I have no idea

00:44:29,449 --> 00:44:33,319
what people are actually doing but the

00:44:31,369 --> 00:44:35,539
kinds of things that are covered in my

00:44:33,319 --> 00:44:37,119
course and that I'm aware of is one of

00:44:35,539 --> 00:44:39,829
the most obvious things to do is just

00:44:37,119 --> 00:44:42,019
calculate the shortest distance or the

00:44:39,829 --> 00:44:43,430
fastest possible course so they're not

00:44:42,019 --> 00:44:46,009
the same thing because you can only

00:44:43,430 --> 00:44:47,930
corner so fast so but you could pre

00:44:46,009 --> 00:44:50,390
calculate through a number of mechanisms

00:44:47,930 --> 00:44:52,130
what that course might be so you could

00:44:50,390 --> 00:44:54,049
do something like dynamic programming

00:44:52,130 --> 00:44:55,459
which is that you drive round and round

00:44:54,049 --> 00:44:57,109
and round and round the course and

00:44:55,459 --> 00:44:59,529
provide reinforcement learning about

00:44:57,109 --> 00:45:02,059
what is a quick a fast or slow path

00:44:59,529 --> 00:45:05,479
alternatively you could provide some

00:45:02,059 --> 00:45:08,150
kind of search so if you had a model of

00:45:05,479 --> 00:45:11,539
your motion and of your speed around

00:45:08,150 --> 00:45:13,699
turns you could implement a cost model

00:45:11,539 --> 00:45:16,699
based on the angle of turn and try to

00:45:13,699 --> 00:45:18,680
calculate using that method like what

00:45:16,699 --> 00:45:20,480
the shortest possible course is it's

00:45:18,680 --> 00:45:23,180
really the integration of that

00:45:20,480 --> 00:45:25,369
with the likelihood of hitting an actual

00:45:23,180 --> 00:45:26,390
physical opponent car which i think is

00:45:25,369 --> 00:45:28,369
challenging for this particular

00:45:26,390 --> 00:45:30,470
competition especially given the time

00:45:28,369 --> 00:45:32,240
constraints involved so one thing you

00:45:30,470 --> 00:45:35,060
could do is if you took the map that I

00:45:32,240 --> 00:45:36,680
just produced you initiate every space

00:45:35,060 --> 00:45:38,420
and the track to a cost of zero and the

00:45:36,680 --> 00:45:40,940
edge to a cost of oh my god I've died

00:45:38,420 --> 00:45:42,920
you could do something like and then you

00:45:40,940 --> 00:45:44,810
could do something like well I'm going

00:45:42,920 --> 00:45:47,330
to the probability of me being wrong in

00:45:44,810 --> 00:45:49,400
space is a 20% so I'm gonna have a 20%

00:45:47,330 --> 00:45:51,530
buffer from every physical thing and

00:45:49,400 --> 00:45:54,820
then you could layer on other things

00:45:51,530 --> 00:45:57,680
into there so you could layer on

00:45:54,820 --> 00:45:59,810
proximity of opponents and if you've got

00:45:57,680 --> 00:46:02,060
like really ludicrously good at it you

00:45:59,810 --> 00:46:03,950
could start to then try and literally

00:46:02,060 --> 00:46:05,570
place yourself in in places that were

00:46:03,950 --> 00:46:07,910
difficult for your opponents to deal

00:46:05,570 --> 00:46:09,740
with so a human a human driver will do

00:46:07,910 --> 00:46:11,690
that they will you know prevent cars

00:46:09,740 --> 00:46:13,970
from taking a final line than they will

00:46:11,690 --> 00:46:15,980
that will drive more slowly than they

00:46:13,970 --> 00:46:17,660
need to drive just to kind of you know

00:46:15,980 --> 00:46:19,670
annoy the guy behind them or to make it

00:46:17,660 --> 00:46:21,380
challenging for that and that kind that

00:46:19,670 --> 00:46:23,600
kind of thing like is way too expensive

00:46:21,380 --> 00:46:26,480
to calculate in point you know in two

00:46:23,600 --> 00:46:28,280
hundredths of a second obviously so the

00:46:26,480 --> 00:46:30,440
architecture for these things you know

00:46:28,280 --> 00:46:32,060
explodes and again it depends what

00:46:30,440 --> 00:46:34,490
you're using it for you gaming the race

00:46:32,060 --> 00:46:35,720
do you want to build your own robot it's

00:46:34,490 --> 00:46:40,400
going to come right back to what you're

00:46:35,720 --> 00:46:42,980
trying to build it for okay I think

00:46:40,400 --> 00:46:45,980
that's all we have time for in questions

00:46:42,980 --> 00:46:47,720
for their session I like to thank

00:46:45,980 --> 00:46:49,220
Tennessee for his time obviously from

00:46:47,720 --> 00:46:52,510
the questions it seems that it was a

00:46:49,220 --> 00:46:52,510

YouTube URL: https://www.youtube.com/watch?v=BGOtqXA_y1E


