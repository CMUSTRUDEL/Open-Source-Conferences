Title: Build your own data warehouse for personal analytics with SQLite and Datasette
Publication date: 2020-09-08
Playlist: PyConline AU 2020
Description: 
	Simon Willison

https://2020.pycon.org.au/program/73UK8X

Many data enthusiasts dream of analyzing their own personal data, but few find time to build their own pipeline for it. This talk will show you how to get started with personal analytics with the highest possible return on your invested effort.

SQLite is the ideal tool for building a personal data analysis pipeline: it's free, fast and widely supported. Each database is a single file on disk, so you don't need to set up a database server to start using it. Tools that import data into SQLite can be written in any programming language, and its JSON support means it can even ingest data that may not fit neatly in a standard relational database table.

Datasette is a Python application that provides an interface over SQLite. It lets you bookmark and queries in your browser and export the results as JSON and CSV. The Datasette plugin ecosystem has over 30 plugins that extend Datasette in different ways, adding visualization tools, alternative export formats and more.

I'll show how to combine SQLite, Datasette and some simple Python scripts to ingest personal data from multiple different sources and build a personal data warehouse for your digital life. Data sources will include:

- Twitter
- Facebook
- Apple Photos
- LinkedIn
- Google (via Google Takeout)
- Foursquare / Swarm
- GitHub
- Apple Health
- 23AndMe

Techniques that work for an individual can work for organizations too. I'll finish by showing how this approach to working with data can scale up to solving professional problems in addition to personal analytics.

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Fri Sep  4 16:00:00 2020 at Curlyboi
Captions: 
	00:00:00,000 --> 00:00:05,280
everyone welcome back to the data

00:00:01,760 --> 00:00:05,280
science and analytics track

00:00:05,759 --> 00:00:09,840
i'm maya soren it's really good to not

00:00:07,919 --> 00:00:11,679
see you at all and feel like i'm talking

00:00:09,840 --> 00:00:12,880
into the void i hope you're all having a

00:00:11,679 --> 00:00:15,280
great time

00:00:12,880 --> 00:00:17,600
uh let's just jump straight into it

00:00:15,280 --> 00:00:18,320
we've got simon willison coming up next

00:00:17,600 --> 00:00:20,720
as the first

00:00:18,320 --> 00:00:22,320
in our very last block of the day

00:00:20,720 --> 00:00:24,080
talking about building your own data

00:00:22,320 --> 00:00:25,680
warehouse for personal analytics with sq

00:00:24,080 --> 00:00:29,359
lighting data set

00:00:25,680 --> 00:00:33,200
pronounces data set now simon created

00:00:29,359 --> 00:00:35,600
dataset uh which is an open source tool

00:00:33,200 --> 00:00:36,399
for exploring publishing data while he

00:00:35,600 --> 00:00:39,840
was working

00:00:36,399 --> 00:00:41,600
at the guardian uk you might have also

00:00:39,840 --> 00:00:44,800
heard his name associated with having

00:00:41,600 --> 00:00:46,800
created django at some stage

00:00:44,800 --> 00:00:49,120
i don't know i'm not really sure that

00:00:46,800 --> 00:00:52,559
that's anything interesting

00:00:49,120 --> 00:00:55,680
anyway signing over to you good

00:00:52,559 --> 00:00:57,280
afternoon uh pycon so yeah i'm going to

00:00:55,680 --> 00:00:58,960
spend the next 20 minutes talking about

00:00:57,280 --> 00:01:01,039
how you can build your own data

00:00:58,960 --> 00:01:03,520
warehouse for personal analytics

00:01:01,039 --> 00:01:04,960
um just a quick note uh i'm going to be

00:01:03,520 --> 00:01:07,360
taking q a by

00:01:04,960 --> 00:01:09,200
uh saving time cue at the q a at the end

00:01:07,360 --> 00:01:11,200
and please post your questions in this

00:01:09,200 --> 00:01:12,880
shared google doc you've got the link

00:01:11,200 --> 00:01:14,560
links up on my screen as well

00:01:12,880 --> 00:01:16,159
and fill this in with questions as we go

00:01:14,560 --> 00:01:18,799
along and i'll expand this out with

00:01:16,159 --> 00:01:21,119
notes and things after the session too

00:01:18,799 --> 00:01:22,479
so this talk is mainly an excuse for me

00:01:21,119 --> 00:01:24,240
to talk about my

00:01:22,479 --> 00:01:25,680
latest open source project this is a

00:01:24,240 --> 00:01:26,000
project called dataset that i've been

00:01:25,680 --> 00:01:28,560
working

00:01:26,000 --> 00:01:29,280
on for just under three years now and

00:01:28,560 --> 00:01:31,520
it's a

00:01:29,280 --> 00:01:33,439
tool that aims to take that idea of a

00:01:31,520 --> 00:01:36,640
big expensive data warehouse

00:01:33,439 --> 00:01:37,600
and make it small and cheap data there

00:01:36,640 --> 00:01:39,520
is so much data

00:01:37,600 --> 00:01:41,360
out there about us and our companies and

00:01:39,520 --> 00:01:43,840
our lives and i feel like

00:01:41,360 --> 00:01:45,439
really um there aren't enough tools for

00:01:43,840 --> 00:01:47,840
digging into that and

00:01:45,439 --> 00:01:49,119
and and using that and and and and

00:01:47,840 --> 00:01:51,600
analyzing and sharing

00:01:49,119 --> 00:01:53,200
and sharing that data with people so

00:01:51,600 --> 00:01:54,000
best way to explain dataset is with a

00:01:53,200 --> 00:01:55,920
demo this is

00:01:54,000 --> 00:01:57,439
a this is data set it's a web

00:01:55,920 --> 00:01:59,600
application up and running

00:01:57,439 --> 00:02:00,719
um i set this up a little while ago this

00:01:59,600 --> 00:02:04,159
is a data set

00:02:00,719 --> 00:02:05,439
of the register of members interests for

00:02:04,159 --> 00:02:08,160
the uk government

00:02:05,439 --> 00:02:08,479
so in the uk our members of parliament

00:02:08,160 --> 00:02:10,080
um

00:02:08,479 --> 00:02:12,400
anytime they receive a gift from

00:02:10,080 --> 00:02:14,480
somebody they have to report that

00:02:12,400 --> 00:02:15,920
and this is all of the latest reports

00:02:14,480 --> 00:02:17,200
that those mps have put in

00:02:15,920 --> 00:02:18,959
and you can see there's one and a half

00:02:17,200 --> 00:02:20,560
million uh reports and

00:02:18,959 --> 00:02:22,000
rose in here these mps get a lot of

00:02:20,560 --> 00:02:23,120
gifts my favorite thing to do is to

00:02:22,000 --> 00:02:24,879
search for hamper

00:02:23,120 --> 00:02:27,360
because it turns out that christmas

00:02:24,879 --> 00:02:29,599
hampers very generously handed out

00:02:27,360 --> 00:02:32,319
boris johnson got a 350 pound hamper

00:02:29,599 --> 00:02:35,200
this year a 750 pound hamper

00:02:32,319 --> 00:02:35,519
um earlier on and um you often find that

00:02:35,200 --> 00:02:37,920
the

00:02:35,519 --> 00:02:39,519
the the saudi arabian embassy likes

00:02:37,920 --> 00:02:40,319
dishing out christmas hampers which i

00:02:39,519 --> 00:02:43,360
always think

00:02:40,319 --> 00:02:44,640
is kind of interesting um but i have a

00:02:43,360 --> 00:02:47,160
more relevant demo

00:02:44,640 --> 00:02:50,080
for an australian audience um the

00:02:47,160 --> 00:02:53,280
data.gov.iu published this wonderful csv

00:02:50,080 --> 00:02:55,200
file that's a file of every public

00:02:53,280 --> 00:02:57,280
toilet in australia all 19

00:02:55,200 --> 00:02:58,800
000 of them and so i've loaded those

00:02:57,280 --> 00:03:01,120
into datasets um

00:02:58,800 --> 00:03:02,560
dataset has a plug-in mechanism where

00:03:01,120 --> 00:03:03,440
you can write plug-ins for it and so i

00:03:02,560 --> 00:03:05,360
have a plug-in

00:03:03,440 --> 00:03:07,040
which looks for latitude and longitude

00:03:05,360 --> 00:03:09,760
columns and if it finds them

00:03:07,040 --> 00:03:11,840
it puts the data on a map so for free i

00:03:09,760 --> 00:03:13,680
get this map of all of these toilets in

00:03:11,840 --> 00:03:16,159
australia and i can actually load all

00:03:13,680 --> 00:03:18,000
like 19 000 points onto the map and

00:03:16,159 --> 00:03:19,920
browsers are fast these days that just

00:03:18,000 --> 00:03:22,319
works so i can zoom in and explore them

00:03:19,920 --> 00:03:24,000
or i can take advantage of facets um

00:03:22,319 --> 00:03:25,840
dataset facets work a little bit like

00:03:24,000 --> 00:03:26,640
pivot tables in excel so i can say

00:03:25,840 --> 00:03:30,159
things like

00:03:26,640 --> 00:03:33,840
facet by toilet type and instantly see

00:03:30,159 --> 00:03:36,720
oh look there's um

00:03:33,840 --> 00:03:37,840
511 hit toilets in australia so i'm

00:03:36,720 --> 00:03:40,400
going to clicking on those

00:03:37,840 --> 00:03:41,360
i can say let's face it by facility type

00:03:40,400 --> 00:03:43,280
now i'm saying there are

00:03:41,360 --> 00:03:45,200
there are of those there are 101 at

00:03:43,280 --> 00:03:48,239
camping grounds if i click on that

00:03:45,200 --> 00:03:49,760
i get a map of the 101 pit toilets on

00:03:48,239 --> 00:03:51,519
camping grounds in australia

00:03:49,760 --> 00:03:53,360
and anything a dataset can be exported

00:03:51,519 --> 00:03:54,799
out as json if you want to

00:03:53,360 --> 00:03:56,319
do things programmatically with it or

00:03:54,799 --> 00:03:56,640
you can pull it out as csv if you want

00:03:56,319 --> 00:03:58,560
to

00:03:56,640 --> 00:04:00,000
load it back into excel or anything like

00:03:58,560 --> 00:04:02,000
that but you can also

00:04:00,000 --> 00:04:04,319
and everything here is built on top of

00:04:02,000 --> 00:04:06,799
sql so you can click view and edit sql

00:04:04,319 --> 00:04:09,200
to see the sql query that was run

00:04:06,799 --> 00:04:11,200
to pull back this list of toilets and i

00:04:09,200 --> 00:04:13,120
can actually edit the sql query and

00:04:11,200 --> 00:04:15,200
re-execute it because

00:04:13,120 --> 00:04:16,720
every database and data set is read-only

00:04:15,200 --> 00:04:18,639
you can't cause any damage

00:04:16,720 --> 00:04:20,239
so sql injection which is normally a

00:04:18,639 --> 00:04:22,320
really severe security hole

00:04:20,239 --> 00:04:24,320
becomes a documented feature of the

00:04:22,320 --> 00:04:25,600
package lets you compose all kinds of

00:04:24,320 --> 00:04:28,800
sql queries for your own

00:04:25,600 --> 00:04:31,440
analysis um

00:04:28,800 --> 00:04:32,720
so that's um data set sort of as a way

00:04:31,440 --> 00:04:35,360
of publishing

00:04:32,720 --> 00:04:36,639
data like um i i as mentioned the idea

00:04:35,360 --> 00:04:38,400
for this comes from work i did at the

00:04:36,639 --> 00:04:39,919
guardian many years ago and i've been

00:04:38,400 --> 00:04:41,520
working with journalists and trying to

00:04:39,919 --> 00:04:44,000
figure out okay can we use this to

00:04:41,520 --> 00:04:45,280
to publish data about the world but

00:04:44,000 --> 00:04:47,040
there's something really interesting

00:04:45,280 --> 00:04:48,000
about this just from a personal point of

00:04:47,040 --> 00:04:49,759
view as well

00:04:48,000 --> 00:04:51,440
i should mention that the secret source

00:04:49,759 --> 00:04:54,720
behind dataset is this

00:04:51,440 --> 00:04:57,759
open source database called sqlite it's

00:04:54,720 --> 00:05:00,880
tiny it's crazy fast it's really robust

00:04:57,759 --> 00:05:03,840
and more and it's absolutely everywhere

00:05:00,880 --> 00:05:06,080
um sqlite runs on my iphone it runs on

00:05:03,840 --> 00:05:06,800
my laptop it runs on my watch as far as

00:05:06,080 --> 00:05:08,960
i can tell

00:05:06,800 --> 00:05:10,000
and it's used by huge huge rays of

00:05:08,960 --> 00:05:12,240
different software

00:05:10,000 --> 00:05:13,759
so a fun trick i can do is i can run

00:05:12,240 --> 00:05:17,440
this command right here

00:05:13,759 --> 00:05:18,080
to search my mac for the largest sqlite

00:05:17,440 --> 00:05:19,840
files

00:05:18,080 --> 00:05:21,199
so i can run this it uses spotlight so

00:05:19,840 --> 00:05:22,120
it's instant i can straightaway see i've

00:05:21,199 --> 00:05:25,199
got like a

00:05:22,120 --> 00:05:27,360
856 megabyte photos.sqlite

00:05:25,199 --> 00:05:29,440
um database here which is part of the

00:05:27,360 --> 00:05:31,280
the apple photos library

00:05:29,440 --> 00:05:33,120
um which is kind of interesting so i'm

00:05:31,280 --> 00:05:34,080
going to run dataset by typing dataset

00:05:33,120 --> 00:05:36,960
and giving it the

00:05:34,080 --> 00:05:38,160
link to that that um file i have to put

00:05:36,960 --> 00:05:39,840
that in quotes

00:05:38,160 --> 00:05:41,919
and this spins up a little local web

00:05:39,840 --> 00:05:44,400
server and so now i'm looking at

00:05:41,919 --> 00:05:46,240
my apple photos and when you look

00:05:44,400 --> 00:05:47,520
through this there are some suspiciously

00:05:46,240 --> 00:05:50,240
interesting tables

00:05:47,520 --> 00:05:51,280
zed cloud master media metadata has 44

00:05:50,240 --> 00:05:54,240
000 rows in it

00:05:51,280 --> 00:05:55,919
i can click through to that and um the

00:05:54,240 --> 00:05:58,080
data's kind of gobbled but there's a

00:05:55,919 --> 00:06:01,600
little clue here it says bp list 0

00:05:58,080 --> 00:06:05,039
0 in that column so i've

00:06:01,600 --> 00:06:07,440
i've written a dataset plugin called

00:06:05,039 --> 00:06:08,880
dataset hyphen bp list which knows what

00:06:07,440 --> 00:06:10,560
to do with those columns i can install

00:06:08,880 --> 00:06:13,600
it by typing dataset install

00:06:10,560 --> 00:06:14,800
dataset plist run dataset again and now

00:06:13,600 --> 00:06:16,479
when i refresh this page

00:06:14,800 --> 00:06:17,840
that data is decoded and you can see

00:06:16,479 --> 00:06:19,919
that this is the

00:06:17,840 --> 00:06:21,039
full detailed metadata about every one

00:06:19,919 --> 00:06:23,199
of my photographs

00:06:21,039 --> 00:06:24,639
including what lens i used and all of

00:06:23,199 --> 00:06:27,039
this stuff and it's also got

00:06:24,639 --> 00:06:28,639
um gps information like the the last

00:06:27,039 --> 00:06:29,840
during longitude i was at when i took

00:06:28,639 --> 00:06:31,360
that picture

00:06:29,840 --> 00:06:32,960
that's super interesting we will

00:06:31,360 --> 00:06:36,080
absolutely coming back to that

00:06:32,960 --> 00:06:38,800
later on um

00:06:36,080 --> 00:06:40,319
so really though the inspiration for

00:06:38,800 --> 00:06:42,080
what i want to show you to talk about

00:06:40,319 --> 00:06:44,800
today was this essay

00:06:42,080 --> 00:06:46,560
written by posted by stephen wolfram um

00:06:44,800 --> 00:06:48,400
a year and a half ago

00:06:46,560 --> 00:06:50,319
stephen wolfram is a fascinating

00:06:48,400 --> 00:06:53,280
individual he makes

00:06:50,319 --> 00:06:55,120
elon musk look like he he doesn't really

00:06:53,280 --> 00:06:57,199
have much of an ego like

00:06:55,120 --> 00:06:59,280
wolfram it i cannot recommend reading

00:06:57,199 --> 00:07:00,319
this essay enough if only for the scroll

00:06:59,280 --> 00:07:02,319
bars you scroll

00:07:00,319 --> 00:07:04,479
through this essay about his approach to

00:07:02,319 --> 00:07:06,800
productivity and realize that

00:07:04,479 --> 00:07:07,680
this thing is is practically a book and

00:07:06,800 --> 00:07:10,800
he talks about

00:07:07,680 --> 00:07:11,840
how he's the ceo of a of a thousand

00:07:10,800 --> 00:07:14,000
person company

00:07:11,840 --> 00:07:16,240
but he's a remote ceo he's been running

00:07:14,000 --> 00:07:18,720
this company from home for 28 years

00:07:16,240 --> 00:07:20,560
and every every moment of that time he

00:07:18,720 --> 00:07:21,039
spent optimizing his working environment

00:07:20,560 --> 00:07:24,000
with

00:07:21,039 --> 00:07:25,919
standing desks and um figuring out how

00:07:24,000 --> 00:07:27,440
to take his laptop for walks because his

00:07:25,919 --> 00:07:28,080
heart rate monitor said that was better

00:07:27,440 --> 00:07:29,759
for him

00:07:28,080 --> 00:07:31,520
and he's like scanned all of his

00:07:29,759 --> 00:07:34,800
documents and he built

00:07:31,520 --> 00:07:35,680
a um he built a green screen set up

00:07:34,800 --> 00:07:37,599
studio

00:07:35,680 --> 00:07:39,120
in his basement so he could give talks

00:07:37,599 --> 00:07:41,520
from home there is

00:07:39,120 --> 00:07:42,160
so much in here it is so completely over

00:07:41,520 --> 00:07:43,599
the top

00:07:42,160 --> 00:07:45,840
but there was one little bit of this

00:07:43,599 --> 00:07:46,319
that really caught my fancy he talks

00:07:45,840 --> 00:07:48,960
about

00:07:46,319 --> 00:07:50,000
how he has this thing that he calls a

00:07:48,960 --> 00:07:52,319
meta searcher

00:07:50,000 --> 00:07:54,479
it's a search engine that he's that's

00:07:52,319 --> 00:07:56,080
just that that he built just for himself

00:07:54,479 --> 00:07:57,840
and it searches every email he's ever

00:07:56,080 --> 00:07:59,759
sent every book he's written

00:07:57,840 --> 00:08:01,280
every paper every person he's met every

00:07:59,759 --> 00:08:04,080
ev everywhere he's ever been

00:08:01,280 --> 00:08:04,639
all in one place and i thought you know

00:08:04,080 --> 00:08:07,039
what

00:08:04,639 --> 00:08:08,560
i might not need a basement studio but

00:08:07,039 --> 00:08:10,319
having a search engine for all of my

00:08:08,560 --> 00:08:12,160
stuff sounds kind of great

00:08:10,319 --> 00:08:13,520
so i decided i was going to build it and

00:08:12,160 --> 00:08:15,039
then of course the thing that i needed

00:08:13,520 --> 00:08:16,560
was a name and i figured well

00:08:15,039 --> 00:08:18,720
if i'm building something which is

00:08:16,560 --> 00:08:21,120
inspired by steven wolf ram

00:08:18,720 --> 00:08:21,840
but it's not as good maybe i should call

00:08:21,120 --> 00:08:25,039
it dog

00:08:21,840 --> 00:08:25,440
sheep and i'll be honest i liked that

00:08:25,039 --> 00:08:27,280
pun

00:08:25,440 --> 00:08:28,479
so much that i've spent the last year

00:08:27,280 --> 00:08:32,240
building software

00:08:28,479 --> 00:08:33,680
just to just to to justify the pun name

00:08:32,240 --> 00:08:35,680
so i'm going to dive straight in and

00:08:33,680 --> 00:08:37,839
show you my dog sheet this is a

00:08:35,680 --> 00:08:39,519
personal data set instance only

00:08:37,839 --> 00:08:41,120
available to me it's authenticated and

00:08:39,519 --> 00:08:42,080
locked up behind client certificates and

00:08:41,120 --> 00:08:44,480
such like

00:08:42,080 --> 00:08:46,240
and in this i've been loading as much

00:08:44,480 --> 00:08:48,880
data as i can get access to

00:08:46,240 --> 00:08:49,519
about my life and work so i've got data

00:08:48,880 --> 00:08:53,040
from

00:08:49,519 --> 00:08:54,800
twitter and github and swarm

00:08:53,040 --> 00:08:57,360
search history and i've got goodreads

00:08:54,800 --> 00:08:59,120
data all of this different stuff

00:08:57,360 --> 00:09:01,200
and partly this is useful as a way for

00:08:59,120 --> 00:09:03,040
me to exercise my data set software

00:09:01,200 --> 00:09:04,720
so many features and data set have come

00:09:03,040 --> 00:09:06,720
out of me using this but also you know

00:09:04,720 --> 00:09:08,959
as a sort of pack rat nerd

00:09:06,720 --> 00:09:10,640
this is so much fun there is so much

00:09:08,959 --> 00:09:12,320
interesting data

00:09:10,640 --> 00:09:14,160
out there that i can i can gain access

00:09:12,320 --> 00:09:14,880
to so i'll show you a few examples i've

00:09:14,160 --> 00:09:16,880
loaded in

00:09:14,880 --> 00:09:18,000
every commit to every one of my projects

00:09:16,880 --> 00:09:20,000
on github

00:09:18,000 --> 00:09:21,360
and that means that you know i can see

00:09:20,000 --> 00:09:23,120
all of these commits and

00:09:21,360 --> 00:09:24,959
search them and look at who's made the

00:09:23,120 --> 00:09:26,320
most contributions and all of those

00:09:24,959 --> 00:09:28,000
kinds of things

00:09:26,320 --> 00:09:30,080
but more importantly i can construct

00:09:28,000 --> 00:09:32,480
custom sql queries so this is a query

00:09:30,080 --> 00:09:33,680
which groups my which which truncates

00:09:32,480 --> 00:09:35,600
down to the day

00:09:33,680 --> 00:09:37,600
and groups by and then uses another

00:09:35,600 --> 00:09:39,600
plug-in i wrote called dataset vega that

00:09:37,600 --> 00:09:41,519
does charting so this is a graph of my

00:09:39,600 --> 00:09:45,040
commit history over time

00:09:41,519 --> 00:09:48,560
um this is so github have this

00:09:45,040 --> 00:09:50,000
fabulous feature where they can show you

00:09:48,560 --> 00:09:51,920
which repositories depend

00:09:50,000 --> 00:09:53,519
on your repositories and so i've been

00:09:51,920 --> 00:09:55,360
scraping that into a database as well

00:09:53,519 --> 00:09:58,640
and i have this view that shows me that

00:09:55,360 --> 00:10:00,399
a couple of days ago um a new a new repo

00:09:58,640 --> 00:10:02,160
popped up on github called microcosm

00:10:00,399 --> 00:10:03,360
which is using dataset which i haven't

00:10:02,160 --> 00:10:04,880
actually looked at but i should look at

00:10:03,360 --> 00:10:06,720
that later

00:10:04,880 --> 00:10:08,640
i've got all of my twitter activity and

00:10:06,720 --> 00:10:10,880
that's not just my tweets but it's

00:10:08,640 --> 00:10:12,720
every tweet that i've favorited everyone

00:10:10,880 --> 00:10:14,240
who follows me everyone that i follow

00:10:12,720 --> 00:10:17,040
so i can do things like search my

00:10:14,240 --> 00:10:19,120
favorites and see here are the 283

00:10:17,040 --> 00:10:21,040
tweets that i've favorited that mention

00:10:19,120 --> 00:10:22,480
dataset and anyone who's used twitter

00:10:21,040 --> 00:10:23,920
favorites will want this feature

00:10:22,480 --> 00:10:26,640
if you suck all of that data down

00:10:23,920 --> 00:10:29,279
yourself you can you can do exactly that

00:10:26,640 --> 00:10:29,839
a much more useful example though my dog

00:10:29,279 --> 00:10:32,160
cleo

00:10:29,839 --> 00:10:33,120
has a twitter account and every time she

00:10:32,160 --> 00:10:35,279
goes to the vet

00:10:33,120 --> 00:10:37,600
she tweets a selfie and she tweets how

00:10:35,279 --> 00:10:39,360
much she weighs she says i weigh 42.3

00:10:37,600 --> 00:10:41,120
pounds i grew more dog

00:10:39,360 --> 00:10:43,839
and so because i've now got that in a

00:10:41,120 --> 00:10:44,240
sql database i can construct a sql query

00:10:43,839 --> 00:10:46,480
that

00:10:44,240 --> 00:10:48,480
uses a regular expression to extract her

00:10:46,480 --> 00:10:50,160
weight the thing ending in pounds

00:10:48,480 --> 00:10:52,160
and puts that in the table and then i

00:10:50,160 --> 00:10:53,279
can use my charting thing to plot cleo's

00:10:52,160 --> 00:10:55,360
weight over time

00:10:53,279 --> 00:10:57,519
so this is her self-reported weight from

00:10:55,360 --> 00:10:59,040
going to the vet and you can see that

00:10:57,519 --> 00:11:00,720
like most of the rest of us she started

00:10:59,040 --> 00:11:02,079
to pack on pounds at the beginning of

00:11:00,720 --> 00:11:05,200
the pandemic and is

00:11:02,079 --> 00:11:07,040
still going up at the moment um another

00:11:05,200 --> 00:11:08,880
super useful example i use

00:11:07,040 --> 00:11:10,079
foursquare swarm and i check in to

00:11:08,880 --> 00:11:11,680
places that i go

00:11:10,079 --> 00:11:13,279
i've got that data back out again so i

00:11:11,680 --> 00:11:15,040
can see all of my check-ins and every

00:11:13,279 --> 00:11:17,200
time i check in somewhere with clio

00:11:15,040 --> 00:11:18,399
i use the wolf emoji in the check-in

00:11:17,200 --> 00:11:20,320
message

00:11:18,399 --> 00:11:21,440
which means i can run another sql query

00:11:20,320 --> 00:11:24,000
which uses a

00:11:21,440 --> 00:11:25,680
where shout-like wolf emoji because it

00:11:24,000 --> 00:11:26,640
turns out you can use emojis in sql

00:11:25,680 --> 00:11:28,800
these days

00:11:26,640 --> 00:11:30,640
and it gives me back a table of her

00:11:28,800 --> 00:11:32,160
check-ins with a latitude and longitude

00:11:30,640 --> 00:11:34,000
which means that i can plot a map of

00:11:32,160 --> 00:11:36,240
everywhere that my dog likes to go

00:11:34,000 --> 00:11:37,680
so this is cleo's own personal map of

00:11:36,240 --> 00:11:39,760
places that she likes to visit in the

00:11:37,680 --> 00:11:42,959
bay area which i'm sure you can agree is

00:11:39,760 --> 00:11:43,279
is a crazy useful thing to have um let's

00:11:42,959 --> 00:11:47,360
be

00:11:43,279 --> 00:11:49,120
even more useful um i did 23andme

00:11:47,360 --> 00:11:52,079
the thing where you send off a swab and

00:11:49,120 --> 00:11:52,480
they they decode your dna and then send

00:11:52,079 --> 00:11:54,560
you

00:11:52,480 --> 00:11:56,000
increasingly terrifying emails about

00:11:54,560 --> 00:11:58,480
missing relatives and genetic

00:11:56,000 --> 00:12:00,079
diseases you might have and then i

00:11:58,480 --> 00:12:01,200
realized that they have an export button

00:12:00,079 --> 00:12:03,440
you can export your

00:12:01,200 --> 00:12:05,519
genome back out of them and when you do

00:12:03,440 --> 00:12:06,639
that they give you a csv file with 600

00:12:05,519 --> 00:12:08,240
000 rows in it

00:12:06,639 --> 00:12:10,079
so i've loaded that into my personal

00:12:08,240 --> 00:12:12,959
data set and i've got

00:12:10,079 --> 00:12:15,279
a query that a sql query i can run that

00:12:12,959 --> 00:12:18,240
tells me what color my eyes are

00:12:15,279 --> 00:12:19,839
based on my own genome so apparently my

00:12:18,240 --> 00:12:22,000
eyes are blue 99

00:12:19,839 --> 00:12:24,959
of the time this took an entire weekend

00:12:22,000 --> 00:12:25,680
and i i had to to borrow a geneticist to

00:12:24,959 --> 00:12:27,839
figure this out

00:12:25,680 --> 00:12:29,839
but it's obviously a crazy useful thing

00:12:27,839 --> 00:12:33,200
for my software to be able to do

00:12:29,839 --> 00:12:34,639
um another useful example um this one is

00:12:33,200 --> 00:12:38,160
a little bit more useful uh

00:12:34,639 --> 00:12:39,920
so i use an apple watch and it tracks my

00:12:38,160 --> 00:12:41,839
location and the energy i've burned and

00:12:39,920 --> 00:12:43,920
my sleep cycles and all of this stuff

00:12:41,839 --> 00:12:45,279
and to apple's credit it doesn't upload

00:12:43,920 --> 00:12:46,639
that to the cloud it keeps it on the

00:12:45,279 --> 00:12:48,320
watch and on my phone

00:12:46,639 --> 00:12:50,720
and they give me an export button you

00:12:48,320 --> 00:12:52,079
can click export and get out a zip file

00:12:50,720 --> 00:12:54,480
full of xml

00:12:52,079 --> 00:12:55,519
um with all of this stuff in so i've

00:12:54,480 --> 00:12:57,440
loaded this in

00:12:55,519 --> 00:12:59,120
and it is terrifying how much stuff i

00:12:57,440 --> 00:13:00,880
have in here they know my

00:12:59,120 --> 00:13:03,120
stair flights that i crimed a headphone

00:13:00,880 --> 00:13:05,760
audio exposure showed up recently

00:13:03,120 --> 00:13:07,600
sleep analysis um there's one in here

00:13:05,760 --> 00:13:09,680
mindful sessions it turns out i've only

00:13:07,600 --> 00:13:11,200
done one mindful session i am not a very

00:13:09,680 --> 00:13:13,440
mindful person

00:13:11,200 --> 00:13:14,880
um but the really fun stuff in here is

00:13:13,440 --> 00:13:17,120
workouts so

00:13:14,880 --> 00:13:18,560
every time you do a workout on the apple

00:13:17,120 --> 00:13:21,279
watch apple

00:13:18,560 --> 00:13:22,320
record it records your gps location

00:13:21,279 --> 00:13:24,639
every few seconds

00:13:22,320 --> 00:13:26,160
and that data was available to you um i

00:13:24,639 --> 00:13:26,880
ran beta breakers a race in san

00:13:26,160 --> 00:13:29,519
francisco

00:13:26,880 --> 00:13:31,839
like three years ago and i can click

00:13:29,519 --> 00:13:32,720
load all and load my exact progression

00:13:31,839 --> 00:13:36,000
through that race

00:13:32,720 --> 00:13:38,160
onto a map and um see like my core

00:13:36,000 --> 00:13:39,440
speed and all of these kinds of things i

00:13:38,160 --> 00:13:42,639
love that this is something that we can

00:13:39,440 --> 00:13:45,199
do now i think this is really exciting

00:13:42,639 --> 00:13:46,480
so that's genomes i've got one last demo

00:13:45,199 --> 00:13:48,639
in here which is pretty fun

00:13:46,480 --> 00:13:50,240
um i showed you that apple photos

00:13:48,639 --> 00:13:52,560
database earlier

00:13:50,240 --> 00:13:54,399
and i figured out i finally figured out

00:13:52,560 --> 00:13:55,600
how to get the data out in a format that

00:13:54,399 --> 00:13:57,519
was useful to me

00:13:55,600 --> 00:13:58,639
and i realized that um apple do this

00:13:57,519 --> 00:13:59,360
really interesting thing with your

00:13:58,639 --> 00:14:02,959
photos

00:13:59,360 --> 00:14:04,000
where they run a um they run a machine

00:14:02,959 --> 00:14:06,720
learning model

00:14:04,000 --> 00:14:08,000
on your phone to figure out what's in

00:14:06,720 --> 00:14:09,839
the pictures that you've taken

00:14:08,000 --> 00:14:11,279
so this is literally running on your

00:14:09,839 --> 00:14:12,639
phone overnight and saying oh that's a

00:14:11,279 --> 00:14:13,519
dog and that's a cat and that's a

00:14:12,639 --> 00:14:14,959
pelican

00:14:13,519 --> 00:14:16,480
and i managed to get that data back out

00:14:14,959 --> 00:14:17,199
again which means i now have my own

00:14:16,480 --> 00:14:19,440
search engine

00:14:17,199 --> 00:14:21,600
where i can search for pelican and see

00:14:19,440 --> 00:14:22,320
all of the photos that i have taken of

00:14:21,600 --> 00:14:25,760
pelicans

00:14:22,320 --> 00:14:27,600
according to apple's machine learning

00:14:25,760 --> 00:14:28,800
machine learning stuff that's cool but

00:14:27,600 --> 00:14:31,680
what's even cooler

00:14:28,800 --> 00:14:32,480
is it turns out they have a they

00:14:31,680 --> 00:14:34,480
calculate

00:14:32,480 --> 00:14:36,480
scores for your photographs on your

00:14:34,480 --> 00:14:37,600
device for how good they are

00:14:36,480 --> 00:14:38,959
and they don't tell you that they're

00:14:37,600 --> 00:14:39,519
doing this but there are columns in that

00:14:38,959 --> 00:14:42,079
database

00:14:39,519 --> 00:14:42,639
things like z overall aesthetic score

00:14:42,079 --> 00:14:45,120
and

00:14:42,639 --> 00:14:46,959
z harmonious colour score and zed

00:14:45,120 --> 00:14:48,720
pleasant camera tilt score

00:14:46,959 --> 00:14:49,680
and so this right here isn't just photos

00:14:48,720 --> 00:14:51,519
of pelicans these are photos of the

00:14:49,680 --> 00:14:52,240
pelicans that are most aesthetically

00:14:51,519 --> 00:14:53,920
pleasing

00:14:52,240 --> 00:14:55,279
according to apple's machine learning

00:14:53,920 --> 00:14:57,279
model and that's

00:14:55,279 --> 00:14:58,639
super super fun i love that i can do

00:14:57,279 --> 00:15:00,079
that

00:14:58,639 --> 00:15:02,399
so all of the stuff that i've shown you

00:15:00,079 --> 00:15:04,560
is aggressively open source

00:15:02,399 --> 00:15:05,519
datasets open source all of these dog

00:15:04,560 --> 00:15:07,519
sheep tools

00:15:05,519 --> 00:15:08,880
um which are things for taking data from

00:15:07,519 --> 00:15:09,360
these different sources and then putting

00:15:08,880 --> 00:15:11,279
them in

00:15:09,360 --> 00:15:13,440
sqlite so you can run them with data

00:15:11,279 --> 00:15:15,760
these are all open source as well

00:15:13,440 --> 00:15:17,600
um there is some assembly required you

00:15:15,760 --> 00:15:18,399
need to get api keys for different

00:15:17,600 --> 00:15:20,560
services

00:15:18,399 --> 00:15:22,079
i'm running a server with a cron on it

00:15:20,560 --> 00:15:23,440
that's constantly running these things

00:15:22,079 --> 00:15:25,920
to fetch new data

00:15:23,440 --> 00:15:26,959
um but it's all available for you to

00:15:25,920 --> 00:15:28,560
start using

00:15:26,959 --> 00:15:30,959
and then the last thing i wanted to show

00:15:28,560 --> 00:15:32,720
you this is brand new i finally got this

00:15:30,959 --> 00:15:35,120
working five hours ago

00:15:32,720 --> 00:15:36,880
and it's really the sort of end goal of

00:15:35,120 --> 00:15:38,480
all of this is i wanted this search

00:15:36,880 --> 00:15:40,000
engine i wanted that search engine

00:15:38,480 --> 00:15:42,480
across all of my stuff

00:15:40,000 --> 00:15:43,519
and so i've built it and i called it dog

00:15:42,480 --> 00:15:45,120
sheep beta

00:15:43,519 --> 00:15:47,120
because stephen wolfram has a search

00:15:45,120 --> 00:15:48,880
engine called wolf from alpha

00:15:47,120 --> 00:15:50,880
so i figured dog sheep beta was

00:15:48,880 --> 00:15:53,199
absolutely the appropriate name for this

00:15:50,880 --> 00:15:54,959
and so this thing has i got just set

00:15:53,199 --> 00:15:57,920
this up it's got 193

00:15:54,959 --> 00:15:59,120
000 things in it it's got tweets and

00:15:57,920 --> 00:16:01,279
blog entries and

00:15:59,120 --> 00:16:02,800
issue comments and commits and photos

00:16:01,279 --> 00:16:04,880
i've taken and all of this stuff

00:16:02,800 --> 00:16:07,279
and i can now run searches so if i

00:16:04,880 --> 00:16:10,320
search for example for dog costumes

00:16:07,279 --> 00:16:12,240
actually no cleopa's costume is better i

00:16:10,320 --> 00:16:13,360
can see every time my dog whose twitter

00:16:12,240 --> 00:16:15,199
name is cleopas

00:16:13,360 --> 00:16:17,120
has tweeted about one of her costumes

00:16:15,199 --> 00:16:17,519
and here we are there's this is a she

00:16:17,120 --> 00:16:19,519
won

00:16:17,519 --> 00:16:21,279
best costume at dog fest a few years ago

00:16:19,519 --> 00:16:23,040
for dressing up as golden gate bridge

00:16:21,279 --> 00:16:25,120
which is pretty fabulous that's her

00:16:23,040 --> 00:16:27,759
dressed as a pirate um

00:16:25,120 --> 00:16:28,720
and i can search for pycon oh i can

00:16:27,759 --> 00:16:31,120
search for coal

00:16:28,720 --> 00:16:32,560
i love australian wildlife is the best

00:16:31,120 --> 00:16:33,360
i've got a whole bunch of tweets that i

00:16:32,560 --> 00:16:36,240
favorited

00:16:33,360 --> 00:16:37,199
um with pictures of qualls in there's

00:16:36,240 --> 00:16:40,320
this is a

00:16:37,199 --> 00:16:42,240
i i am so so excited about this thing

00:16:40,320 --> 00:16:43,680
because it it finally gives me that

00:16:42,240 --> 00:16:45,360
ability that i've wanted to

00:16:43,680 --> 00:16:46,720
tie all of this data together and and

00:16:45,360 --> 00:16:48,160
see it all in one place

00:16:46,720 --> 00:16:50,240
um i'll be writing more about dog sheep

00:16:48,160 --> 00:16:52,399
beta literally in the next couple of

00:16:50,240 --> 00:16:54,079
days because i just just finished it

00:16:52,399 --> 00:16:55,759
but again it's open source it's ready

00:16:54,079 --> 00:16:58,160
for you to try it out if you want to

00:16:55,759 --> 00:17:00,160
and i think i should move to q a because

00:16:58,160 --> 00:17:02,720
we we started a little bit late

00:17:00,160 --> 00:17:03,440
so yeah i'm going to move to questions

00:17:02,720 --> 00:17:05,120
first question

00:17:03,440 --> 00:17:07,039
is what's the cutest costume your dog

00:17:05,120 --> 00:17:08,240
has worn um i've already shown you that

00:17:07,039 --> 00:17:09,280
i think it's the golden gate bridge

00:17:08,240 --> 00:17:10,480
although she was kind of cute as a

00:17:09,280 --> 00:17:13,760
pirate as well

00:17:10,480 --> 00:17:16,480
um next question um

00:17:13,760 --> 00:17:18,240
yes so is your data from a json source

00:17:16,480 --> 00:17:21,039
that you need to convert to sqlite

00:17:18,240 --> 00:17:23,039
so the way i've been doing this is i

00:17:21,039 --> 00:17:23,760
wrote a python library called sqlite

00:17:23,039 --> 00:17:25,679
utils

00:17:23,760 --> 00:17:27,919
which is a couple of things it's a

00:17:25,679 --> 00:17:30,640
command line tool that you can pipe

00:17:27,919 --> 00:17:32,480
csv or json directly into and it'll turn

00:17:30,640 --> 00:17:34,000
that into a sqlite database

00:17:32,480 --> 00:17:36,320
but more importantly it's a python

00:17:34,000 --> 00:17:38,240
library with functions in that will

00:17:36,320 --> 00:17:39,440
create the database table for you based

00:17:38,240 --> 00:17:41,760
on the data you feed it

00:17:39,440 --> 00:17:43,919
so i did not come up with a schema for

00:17:41,760 --> 00:17:45,200
github and swarm and twitter and photos

00:17:43,919 --> 00:17:46,080
and all of that junk because that would

00:17:45,200 --> 00:17:48,240
have taken me ages

00:17:46,080 --> 00:17:49,760
i literally write code that turns into a

00:17:48,240 --> 00:17:51,760
list of of json objects

00:17:49,760 --> 00:17:53,600
and i splat that to sqlite and my and

00:17:51,760 --> 00:17:54,720
this this library creates the table

00:17:53,600 --> 00:17:56,400
schema for me

00:17:54,720 --> 00:17:57,840
and that i found is a really productive

00:17:56,400 --> 00:18:00,160
way of working so pretty much

00:17:57,840 --> 00:18:01,039
all of the dog sheep tools if you look

00:18:00,160 --> 00:18:02,320
at them

00:18:01,039 --> 00:18:04,880
if you look at their source code they're

00:18:02,320 --> 00:18:06,960
actually getting data from json apis

00:18:04,880 --> 00:18:08,960
sometimes from xml and splatting into

00:18:06,960 --> 00:18:11,840
sqlite using this library

00:18:08,960 --> 00:18:12,480
um is their support for styling the data

00:18:11,840 --> 00:18:15,760
interface

00:18:12,480 --> 00:18:17,280
there absolutely is data set has um cust

00:18:15,760 --> 00:18:19,679
you can use custom templates you can

00:18:17,280 --> 00:18:21,440
use custom css i don't have many

00:18:19,679 --> 00:18:23,120
examples of that running but um the

00:18:21,440 --> 00:18:25,919
baltimore sun newspaper

00:18:23,120 --> 00:18:28,000
used it to publish public salary records

00:18:25,919 --> 00:18:29,600
of everyone in the state of maryland and

00:18:28,000 --> 00:18:30,480
this is actually data set but they

00:18:29,600 --> 00:18:32,240
styled it to

00:18:30,480 --> 00:18:34,160
to use their color scheme and so on so

00:18:32,240 --> 00:18:38,000
yeah you can absolutely style it

00:18:34,160 --> 00:18:39,440
um uh are there any other alternatives

00:18:38,000 --> 00:18:42,240
considered to cron

00:18:39,440 --> 00:18:44,480
um kron is great cron just works i am

00:18:42,240 --> 00:18:46,880
however thinking about doing a

00:18:44,480 --> 00:18:48,799
sort of database backed alternative to

00:18:46,880 --> 00:18:50,640
cron just so i can do things like look

00:18:48,799 --> 00:18:52,240
at page that shows me here are the tasks

00:18:50,640 --> 00:18:54,320
that are scheduled to run in the future

00:18:52,240 --> 00:18:56,000
here are tasks that are overdue i think

00:18:54,320 --> 00:18:57,840
for doing this on a much larger

00:18:56,000 --> 00:18:59,840
scale that might make sense but at the

00:18:57,840 --> 00:19:01,760
moment kron's been working great

00:18:59,840 --> 00:19:04,080
can you extract google photos data in a

00:19:01,760 --> 00:19:06,240
similar way to apple photos

00:19:04,080 --> 00:19:07,600
oh good lord this is so frustrating

00:19:06,240 --> 00:19:09,200
google photos

00:19:07,600 --> 00:19:11,360
they have an api and you can get stuff

00:19:09,200 --> 00:19:12,960
out in json but they deliberately don't

00:19:11,360 --> 00:19:14,400
give you the latitude and longitude of

00:19:12,960 --> 00:19:16,320
your photos i think because it's a

00:19:14,400 --> 00:19:17,600
privacy violation but that's the thing i

00:19:16,320 --> 00:19:19,360
care about the most

00:19:17,600 --> 00:19:20,880
so i spent months trying to build this

00:19:19,360 --> 00:19:22,320
stuff on top of google photos

00:19:20,880 --> 00:19:23,919
and eventually realized that the best

00:19:22,320 --> 00:19:25,440
way to do this was the apple photos

00:19:23,919 --> 00:19:26,640
thing and i have a script that runs on

00:19:25,440 --> 00:19:28,160
my laptop

00:19:26,640 --> 00:19:29,520
pulls out all of the data and then

00:19:28,160 --> 00:19:31,039
publishes it that way because it's the

00:19:29,520 --> 00:19:33,039
only way i could get it to do it

00:19:31,039 --> 00:19:35,679
um do i plan to steal palantirs market

00:19:33,039 --> 00:19:38,000
share absolutely not

00:19:35,679 --> 00:19:39,039
but i don't think they're going after

00:19:38,000 --> 00:19:41,360
data journalists

00:19:39,039 --> 00:19:42,720
and homebrew nerds who want to do a map

00:19:41,360 --> 00:19:44,720
of all of their workouts so

00:19:42,720 --> 00:19:46,320
i think that they can keep the they can

00:19:44,720 --> 00:19:48,320
keep the big data creepy end of the

00:19:46,320 --> 00:19:49,039
market i'm concentrating on the smaller

00:19:48,320 --> 00:19:50,640
stuff

00:19:49,039 --> 00:19:52,640
um other plans to make the source

00:19:50,640 --> 00:19:54,480
database interchangeable

00:19:52,640 --> 00:19:55,760
i've gone back and forth on this i wrote

00:19:54,480 --> 00:19:58,880
a script called

00:19:55,760 --> 00:20:02,240
um db to sql lite um

00:19:58,880 --> 00:20:04,640
and what that one does is it

00:20:02,240 --> 00:20:06,880
um you can give it any a connection

00:20:04,640 --> 00:20:08,880
string to like mysql or postgres

00:20:06,880 --> 00:20:10,000
and it will suck down all the data turn

00:20:08,880 --> 00:20:12,400
it into sqlite

00:20:10,000 --> 00:20:14,240
um and let you run data set that way and

00:20:12,400 --> 00:20:17,280
i actually run that on micron

00:20:14,240 --> 00:20:17,919
my blog is postgres on heroku i suck

00:20:17,280 --> 00:20:20,480
that down

00:20:17,919 --> 00:20:21,120
into a sqlite database i think once an

00:20:20,480 --> 00:20:23,679
hour

00:20:21,120 --> 00:20:25,679
and it's fast and it works but i did do

00:20:23,679 --> 00:20:27,120
a little spike a while ago to see if i

00:20:25,679 --> 00:20:28,159
could get it working with postgres

00:20:27,120 --> 00:20:30,000
because

00:20:28,159 --> 00:20:31,120
that would solve the big data problem

00:20:30,000 --> 00:20:31,679
you know there are things there are

00:20:31,120 --> 00:20:33,440
there are

00:20:31,679 --> 00:20:35,280
big data warehouse things that are post

00:20:33,440 --> 00:20:36,320
squares compatible it's definitely

00:20:35,280 --> 00:20:37,919
possible

00:20:36,320 --> 00:20:38,960
i'm really nervous about committing to

00:20:37,919 --> 00:20:40,880
it because then i'm committing to

00:20:38,960 --> 00:20:42,400
maintaining a database abstraction layer

00:20:40,880 --> 00:20:44,159
and that's a lot of work

00:20:42,400 --> 00:20:46,159
so i wouldn't rule it out but it's not

00:20:44,159 --> 00:20:48,080
on the roadmap at the moment

00:20:46,159 --> 00:20:49,679
um has having control about your data

00:20:48,080 --> 00:20:50,400
like that change your perspective on

00:20:49,679 --> 00:20:53,679
privacy

00:20:50,400 --> 00:20:56,240
or the way that others aggregate data

00:20:53,679 --> 00:20:58,400
it hasn't but only because i already

00:20:56,240 --> 00:21:01,280
sort of knew what was going on

00:20:58,400 --> 00:21:02,080
um i think one of the things that i find

00:21:01,280 --> 00:21:04,720
really interesting

00:21:02,080 --> 00:21:06,320
is that the the european gdpr law that

00:21:04,720 --> 00:21:07,679
came into effect a couple of years ago

00:21:06,320 --> 00:21:09,840
means that all of these companies have

00:21:07,679 --> 00:21:11,679
to have an export button i think this is

00:21:09,840 --> 00:21:13,360
and so if you dig around in like the

00:21:11,679 --> 00:21:15,120
linkedin or facebook preferences deep

00:21:13,360 --> 00:21:16,720
enough you'll find a button which if you

00:21:15,120 --> 00:21:19,520
click it they will email you a

00:21:16,720 --> 00:21:21,120
two gigabyte zip file full of json um

00:21:19,520 --> 00:21:21,679
which for most people isn't useful but

00:21:21,120 --> 00:21:23,520
if we can

00:21:21,679 --> 00:21:25,200
work together to build these tools to

00:21:23,520 --> 00:21:26,640
convert that into sqlite that suddenly

00:21:25,200 --> 00:21:28,720
becomes accessible to people

00:21:26,640 --> 00:21:30,240
the linkedin one and the the most fun

00:21:28,720 --> 00:21:31,840
data you get out of them is your ad

00:21:30,240 --> 00:21:34,159
targeting you find out that

00:21:31,840 --> 00:21:35,760
linkedin have categorized you as this

00:21:34,159 --> 00:21:37,600
particular type of um

00:21:35,760 --> 00:21:39,039
of engineer or executive or whatever so

00:21:37,600 --> 00:21:39,840
that they can sell ads against your

00:21:39,039 --> 00:21:43,120
profile

00:21:39,840 --> 00:21:44,159
um so but i i generally i i love that

00:21:43,120 --> 00:21:46,159
this stuff is available

00:21:44,159 --> 00:21:47,919
i think it's really exciting to be able

00:21:46,159 --> 00:21:48,480
to pull it out dig around and see what

00:21:47,919 --> 00:21:50,080
you can

00:21:48,480 --> 00:21:52,400
figure out figure it and figure out from

00:21:50,080 --> 00:21:53,440
it can you do queries with joins between

00:21:52,400 --> 00:21:55,360
data sets

00:21:53,440 --> 00:21:56,640
yes you absolutely can at the moment

00:21:55,360 --> 00:21:59,919
they have to be tables

00:21:56,640 --> 00:22:02,000
in the same sqlite database

00:21:59,919 --> 00:22:03,120
and actually i've got i can show one

00:22:02,000 --> 00:22:05,919
quick example of this

00:22:03,120 --> 00:22:07,280
um so i've been publishing covert 19

00:22:05,919 --> 00:22:09,360
data from the

00:22:07,280 --> 00:22:10,559
new york times and john hopkins and the

00:22:09,360 --> 00:22:13,120
la times

00:22:10,559 --> 00:22:14,640
and they publish data by the us county

00:22:13,120 --> 00:22:16,559
at the u.s county level

00:22:14,640 --> 00:22:18,159
and then i realized that the u.s census

00:22:16,559 --> 00:22:21,520
publish a

00:22:18,159 --> 00:22:23,280
um county populations um numbers so

00:22:21,520 --> 00:22:25,840
for the county with this fips code how

00:22:23,280 --> 00:22:26,720
many people live there so i've got a

00:22:25,840 --> 00:22:28,720
view here

00:22:26,720 --> 00:22:29,840
which is a sql query that joins u.s

00:22:28,720 --> 00:22:32,240
census data

00:22:29,840 --> 00:22:33,120
against new york times data and can show

00:22:32,240 --> 00:22:35,200
me which

00:22:33,120 --> 00:22:36,960
county in the u.s has is the worst in

00:22:35,200 --> 00:22:38,880
case of cases per million

00:22:36,960 --> 00:22:40,720
it's trousdale county in tennessee which

00:22:38,880 --> 00:22:42,640
it turns out it's home to a really big i

00:22:40,720 --> 00:22:45,600
think it's a big federal prison there

00:22:42,640 --> 00:22:46,159
um but yes so this is a great example of

00:22:45,600 --> 00:22:48,720
how

00:22:46,159 --> 00:22:50,400
once you've got this stuff um in into

00:22:48,720 --> 00:22:51,919
these databases being able to join stuff

00:22:50,400 --> 00:22:54,640
together lets you come up with all sorts

00:22:51,919 --> 00:22:58,080
of really interesting um extra

00:22:54,640 --> 00:23:01,600
uh extra extra bits and pieces so i

00:22:58,080 --> 00:23:05,280
think i think we are out of time

00:23:01,600 --> 00:23:06,320
um i'm gonna keep on taking questions

00:23:05,280 --> 00:23:08,640
until somebody

00:23:06,320 --> 00:23:11,520
until until i get cut off or am i being

00:23:08,640 --> 00:23:11,520
cut off here we go

00:23:11,679 --> 00:23:15,200
oh hang on i think you're muted

00:23:21,039 --> 00:23:24,400
thank you so much simon that was great

00:23:23,919 --> 00:23:26,080
uh

00:23:24,400 --> 00:23:27,520
normally i'd be asking you some of the q

00:23:26,080 --> 00:23:28,320
a but you've already saved me that

00:23:27,520 --> 00:23:31,200
trouble

00:23:28,320 --> 00:23:31,520
so thank you for your extra generosity

00:23:31,200 --> 00:23:34,000
uh

00:23:31,520 --> 00:23:35,919
and i think what we're going to do now

00:23:34,000 --> 00:23:37,679
is have a little bit of a moment before

00:23:35,919 --> 00:23:38,880
we have our next speaker come on tanya

00:23:37,679 --> 00:23:50,720
allard

00:23:38,880 --> 00:23:50,720

YouTube URL: https://www.youtube.com/watch?v=CPQCD3Qxxik


