Title: DevOps for Data Science? - automate the boring stuff and leverage the OSS ecosystem
Publication date: 2020-09-06
Playlist: PyConline AU 2020
Description: 
	Dr. Tania Allard

https://2020.pycon.org.au/program/WMMVSQ

Does your work (either research, non-profit or industry-based) depend on Machine learning, Data Science or data-intensive analyses? Have you ever wished you could automate some of the boring stuff while adding extra robustness to your workflows so that you and your team can have greater confidence and work more efficiently?

In this talk, I will present the concept of MLOps (kind of DevOps for ML scenarios, also referred to as DataOps or AIOps) and how adopting these practices can improve your team's workflows. You will learn how to automate some tasks within the ML lifecycle: from data transformation to model training, testing and validation, and deployment â€” making your workflows not only more seamless but your entire work more reproducible, reliable, and robust.
You do not need to be a DevOps engineer to benefit from these practices, but you can indeed leverage existing open-source tools and platforms to improve your Data Science workflows.
For completeness, I'll show a live end to end example, integrating MLOps practices for Machine Learning - from data processing to model training, validation and deployment. I will highlight the essential tips and tricks for each of the involved stages. You will leave the talk with practical recommendations and examples to get you started on adopting MLOps practices.

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Fri Sep  4 16:35:00 2020 at Curlyboi
Captions: 
	00:00:00,000 --> 00:00:05,040
hello everyone thank you welcome back to

00:00:02,720 --> 00:00:06,879
science data analytics track

00:00:05,040 --> 00:00:08,720
and the next person we've got speaking

00:00:06,879 --> 00:00:10,480
is dr tanya lard

00:00:08,720 --> 00:00:11,840
uh he's going to be talking about devops

00:00:10,480 --> 00:00:13,280
for data science definitely not the

00:00:11,840 --> 00:00:14,320
devops that's that's happening in a

00:00:13,280 --> 00:00:17,119
totally different

00:00:14,320 --> 00:00:18,080
room uh now tanya is a senior developer

00:00:17,119 --> 00:00:20,400
advocate at

00:00:18,080 --> 00:00:22,080
microsoft focusing on machine learning

00:00:20,400 --> 00:00:24,320
and scientific computing

00:00:22,080 --> 00:00:25,519
and she's passionate about mentoring and

00:00:24,320 --> 00:00:27,920
community building

00:00:25,519 --> 00:00:28,800
and i'm just gonna let her talk for

00:00:27,920 --> 00:00:31,920
herself now

00:00:28,800 --> 00:00:32,399
go ahead tanya thank you very much for

00:00:31,920 --> 00:00:35,200
the kind

00:00:32,399 --> 00:00:36,160
introduction and i am very very happy to

00:00:35,200 --> 00:00:39,440
be joining

00:00:36,160 --> 00:00:39,840
pike online australia this time um i've

00:00:39,440 --> 00:00:42,079
been

00:00:39,840 --> 00:00:43,760
wanting to attend pike in australia

00:00:42,079 --> 00:00:46,800
forever

00:00:43,760 --> 00:00:48,320
well maybe someday and my name is daniel

00:00:46,800 --> 00:00:50,399
nard as i've been introduced i'm going

00:00:48,320 --> 00:00:50,960
to be talking about devops for data

00:00:50,399 --> 00:00:53,360
science

00:00:50,960 --> 00:00:54,640
or how you can automate boring and

00:00:53,360 --> 00:00:57,840
integrated stuff

00:00:54,640 --> 00:01:01,120
and leverage the open source ecosystem

00:00:57,840 --> 00:01:04,479
i'm going to be at the conference today

00:01:01,120 --> 00:01:06,640
and tomorrow i'm uk based so

00:01:04,479 --> 00:01:08,080
my times are not exactly the same but if

00:01:06,640 --> 00:01:11,200
you want to reach out

00:01:08,080 --> 00:01:13,439
after the after my talk or after

00:01:11,200 --> 00:01:14,799
the hallway track you can find me on

00:01:13,439 --> 00:01:18,080
twitter github

00:01:14,799 --> 00:01:20,320
or there is my website at the bottom and

00:01:18,080 --> 00:01:22,479
there you can find all of my contact

00:01:20,320 --> 00:01:24,640
details and stuff

00:01:22,479 --> 00:01:26,479
um just a tiny bit about myself to give

00:01:24,640 --> 00:01:29,040
it about a few introduction i

00:01:26,479 --> 00:01:29,920
absolutely love python i use python

00:01:29,040 --> 00:01:32,320
every day

00:01:29,920 --> 00:01:33,520
day in day out i imagine like many of

00:01:32,320 --> 00:01:36,240
you folks

00:01:33,520 --> 00:01:38,000
i'm also a google developer expert for

00:01:36,240 --> 00:01:39,920
tensorflow and machine learning

00:01:38,000 --> 00:01:41,759
i love mechanical keywords so if there

00:01:39,920 --> 00:01:43,840
are any other mechanical keywords

00:01:41,759 --> 00:01:46,720
enthusiasts in the conference

00:01:43,840 --> 00:01:48,079
i would love to talk about that and just

00:01:46,720 --> 00:01:51,759
as a disclaimer

00:01:48,079 --> 00:01:52,720
my dog seems to have like the perfect

00:01:51,759 --> 00:01:55,040
timing

00:01:52,720 --> 00:01:56,399
and she sometimes barks when i'm giving

00:01:55,040 --> 00:01:59,680
online talks

00:01:56,399 --> 00:02:01,920
i've tried to distract her today

00:01:59,680 --> 00:02:04,320
with a new different kind of toy let's

00:02:01,920 --> 00:02:07,439
see if that works

00:02:04,320 --> 00:02:09,920
and as usual my

00:02:07,439 --> 00:02:10,640
slides are going to be available after

00:02:09,920 --> 00:02:13,040
the talk

00:02:10,640 --> 00:02:14,239
at this link i'm going to put it back

00:02:13,040 --> 00:02:17,360
again at the end of the

00:02:14,239 --> 00:02:18,879
um of my slides it's not ready yet but i

00:02:17,360 --> 00:02:20,400
just need to click publish

00:02:18,879 --> 00:02:22,400
and you'll be able to access them

00:02:20,400 --> 00:02:25,360
everything is cc value so you should be

00:02:22,400 --> 00:02:26,959
able to use reuse and remix

00:02:25,360 --> 00:02:28,879
and just to give a bit of context about

00:02:26,959 --> 00:02:31,840
what i'm going to try and cover

00:02:28,879 --> 00:02:33,040
in this 25 minutes well more like 23

00:02:31,840 --> 00:02:34,800
minutes now

00:02:33,040 --> 00:02:36,879
and first i want to give a background

00:02:34,800 --> 00:02:39,519
while about the status of machine

00:02:36,879 --> 00:02:42,480
learning and data science in 2020

00:02:39,519 --> 00:02:43,519
um what is and then move on to what is

00:02:42,480 --> 00:02:46,000
emelops or

00:02:43,519 --> 00:02:47,280
devops for data science and why you

00:02:46,000 --> 00:02:50,720
might need it

00:02:47,280 --> 00:02:53,040
and finally i'm gonna close with some

00:02:50,720 --> 00:02:55,760
getting started tips with mlab so that

00:02:53,040 --> 00:02:59,200
you can start automating stuff

00:02:55,760 --> 00:03:02,319
in your workflows so let's get started

00:02:59,200 --> 00:03:02,319
with a bit of background

00:03:02,879 --> 00:03:07,599
um i don't know if any of you are

00:03:04,879 --> 00:03:10,400
familiar with the garner hype cycle

00:03:07,599 --> 00:03:11,120
and this is normally a cycle that new

00:03:10,400 --> 00:03:14,319
tech or

00:03:11,120 --> 00:03:15,120
new uh tools or approaches normally

00:03:14,319 --> 00:03:18,000
follow

00:03:15,120 --> 00:03:19,120
as folks as it goes out into the wild

00:03:18,000 --> 00:03:21,760
and it seems that

00:03:19,120 --> 00:03:22,800
now machine learning and well i'm gonna

00:03:21,760 --> 00:03:26,319
say machine learning

00:03:22,800 --> 00:03:29,200
artificial intelligence all of that um

00:03:26,319 --> 00:03:31,360
has gone through a lot of these stages

00:03:29,200 --> 00:03:33,200
we've been through the early adoption

00:03:31,360 --> 00:03:34,959
phase we've been through the negative

00:03:33,200 --> 00:03:38,799
press around ai

00:03:34,959 --> 00:03:42,480
bias and all of those

00:03:38,799 --> 00:03:45,360
very um contentious

00:03:42,480 --> 00:03:45,680
articles saying that ai is going to seal

00:03:45,360 --> 00:03:47,680
your

00:03:45,680 --> 00:03:49,360
jobs and pretty much take control of the

00:03:47,680 --> 00:03:52,400
world um

00:03:49,360 --> 00:03:53,680
there are first second third rounds of

00:03:52,400 --> 00:03:57,439
venture capital

00:03:53,680 --> 00:03:59,760
and i think we are now actually um

00:03:57,439 --> 00:04:02,319
entering the point of high growth

00:03:59,760 --> 00:04:02,319
adoption

00:04:02,959 --> 00:04:07,280
so we're gonna assure you probably in a

00:04:06,159 --> 00:04:09,280
couple of years

00:04:07,280 --> 00:04:11,680
uh hopefully entering the the

00:04:09,280 --> 00:04:14,080
productivity plateau

00:04:11,680 --> 00:04:16,480
in machine well in all ai and machine

00:04:14,080 --> 00:04:16,480
learning

00:04:18,239 --> 00:04:24,720
um so it is not it's not uncommon to

00:04:21,759 --> 00:04:26,639
go and see different teams now or

00:04:24,720 --> 00:04:27,680
whether it's a small company or a big

00:04:26,639 --> 00:04:30,000
corporation

00:04:27,680 --> 00:04:32,160
or a research institute where you have

00:04:30,000 --> 00:04:32,639
the data scientists very very excited

00:04:32,160 --> 00:04:35,199
because

00:04:32,639 --> 00:04:36,479
it's now super easy to run machine

00:04:35,199 --> 00:04:38,320
learning experiments

00:04:36,479 --> 00:04:41,120
the development and the open source

00:04:38,320 --> 00:04:43,680
ecosystem we have amazing things like

00:04:41,120 --> 00:04:44,800
scikit-learn tensorflow pytorch and

00:04:43,680 --> 00:04:46,720
everything is just

00:04:44,800 --> 00:04:48,720
jupiter notebooks everything makes it so

00:04:46,720 --> 00:04:50,720
much easier to get started

00:04:48,720 --> 00:04:51,919
and start it reading and doing research

00:04:50,720 --> 00:04:53,840
and development

00:04:51,919 --> 00:04:57,040
um but then on the other side we have

00:04:53,840 --> 00:05:00,080
the machine learning engineers or sre

00:04:57,040 --> 00:05:02,400
engineers or software engineers

00:05:00,080 --> 00:05:03,840
that are trying to actually take those

00:05:02,400 --> 00:05:06,479
machine learning products

00:05:03,840 --> 00:05:07,680
put them into production or get them out

00:05:06,479 --> 00:05:10,479
to the customers

00:05:07,680 --> 00:05:11,840
or to the business and we still find

00:05:10,479 --> 00:05:15,360
that it's hard it's

00:05:11,840 --> 00:05:18,560
it's very very um it's not

00:05:15,360 --> 00:05:19,440
straightforward to do this in fact there

00:05:18,560 --> 00:05:21,680
are

00:05:19,440 --> 00:05:23,199
a lot of papers a lot of studies uh

00:05:21,680 --> 00:05:26,240
states of the art in

00:05:23,199 --> 00:05:26,720
machine learning um it says that a very

00:05:26,240 --> 00:05:28,880
very

00:05:26,720 --> 00:05:30,960
small portion of the business that are

00:05:28,880 --> 00:05:32,880
experimenting with machine learning are

00:05:30,960 --> 00:05:36,160
actually seeing the benefits

00:05:32,880 --> 00:05:39,919
because of this big wall from taking

00:05:36,160 --> 00:05:44,479
something that is into r d to something

00:05:39,919 --> 00:05:44,479
like fully usable or productionizable

00:05:45,520 --> 00:05:49,360
so let's go again and look at our data

00:05:48,400 --> 00:05:51,039
science

00:05:49,360 --> 00:05:52,639
uh i mentioned it before that we have

00:05:51,039 --> 00:05:54,880
amazing things like circuit learning

00:05:52,639 --> 00:05:57,039
carers it is so easy now with

00:05:54,880 --> 00:05:58,080
using things like errors great models in

00:05:57,039 --> 00:06:00,000
a few lines

00:05:58,080 --> 00:06:02,639
i didn't have to spend a lot of time

00:06:00,000 --> 00:06:06,080
building all of your

00:06:02,639 --> 00:06:09,280
models from scratch or specifying

00:06:06,080 --> 00:06:10,960
each layer into your neural network and

00:06:09,280 --> 00:06:12,960
we also have amazing techniques like

00:06:10,960 --> 00:06:13,680
transfer learning which makes our lives

00:06:12,960 --> 00:06:17,039
easier

00:06:13,680 --> 00:06:19,440
and it allows us to build on pre-trained

00:06:17,039 --> 00:06:21,120
stuff that other folks have spent a lot

00:06:19,440 --> 00:06:23,520
of time and compute on

00:06:21,120 --> 00:06:24,240
and talking about compute we have a lot

00:06:23,520 --> 00:06:26,960
of compute

00:06:24,240 --> 00:06:28,720
to at the finger of our tips and if

00:06:26,960 --> 00:06:32,160
you're using the cloud you can access

00:06:28,720 --> 00:06:35,039
you can easily have access to gpu

00:06:32,160 --> 00:06:36,160
compute or gpu gpu-enabled vms and that

00:06:35,039 --> 00:06:38,960
definitely

00:06:36,160 --> 00:06:40,240
helps you to streamline and optimize

00:06:38,960 --> 00:06:43,919
your workflows

00:06:40,240 --> 00:06:48,000
from the computational side of thing

00:06:43,919 --> 00:06:50,000
um but again over of this type of

00:06:48,000 --> 00:06:51,680
machine learning ai deep learning

00:06:50,000 --> 00:06:54,400
everything um

00:06:51,680 --> 00:06:57,360
we've always seen that a data scientist

00:06:54,400 --> 00:06:59,919
or a machine learning folk has to be

00:06:57,360 --> 00:07:01,520
a unicorn with data visualization skills

00:06:59,919 --> 00:07:02,720
software engineering analytical

00:07:01,520 --> 00:07:06,639
programming

00:07:02,720 --> 00:07:09,759
and data engineering skills

00:07:06,639 --> 00:07:11,840
but now deals for them to be able to

00:07:09,759 --> 00:07:14,960
take things to the next level

00:07:11,840 --> 00:07:17,280
and you also have to know things about

00:07:14,960 --> 00:07:19,120
ci cincy deep learning prevalence

00:07:17,280 --> 00:07:22,639
security containerization

00:07:19,120 --> 00:07:24,479
so actually there are a lot of um

00:07:22,639 --> 00:07:25,759
of articles as well that i've seen

00:07:24,479 --> 00:07:27,759
coming out into

00:07:25,759 --> 00:07:29,280
well in the last few months or even

00:07:27,759 --> 00:07:31,759
years uh

00:07:29,280 --> 00:07:32,560
saying that folks or data scientists

00:07:31,759 --> 00:07:35,520
should become a

00:07:32,560 --> 00:07:38,080
more of a generalist or like um

00:07:35,520 --> 00:07:40,639
front-end back-end data science

00:07:38,080 --> 00:07:41,840
um vicky bucky's that is one of the

00:07:40,639 --> 00:07:44,479
people i

00:07:41,840 --> 00:07:45,039
admire the most and is i really really

00:07:44,479 --> 00:07:48,160
love

00:07:45,039 --> 00:07:50,400
um her insights in this area um

00:07:48,160 --> 00:07:52,560
she actually recommends folks that that

00:07:50,400 --> 00:07:54,319
are interested in entering into the

00:07:52,560 --> 00:07:57,039
machine learning world to go

00:07:54,319 --> 00:07:58,000
through well down the road of machine

00:07:57,039 --> 00:07:59,599
learning engineering

00:07:58,000 --> 00:08:01,280
because we need a lot of machine

00:07:59,599 --> 00:08:04,720
learning engineers

00:08:01,280 --> 00:08:08,560
um and here is where uh the whole

00:08:04,720 --> 00:08:13,759
emelops processes and approaches

00:08:08,560 --> 00:08:16,800
actually enter into play

00:08:13,759 --> 00:08:17,599
if we go back back and try to think

00:08:16,800 --> 00:08:20,879
about

00:08:17,599 --> 00:08:23,280
how this whole devops practices started

00:08:20,879 --> 00:08:25,680
in software engineering it was because

00:08:23,280 --> 00:08:28,639
we had this apparent

00:08:25,680 --> 00:08:29,440
opposing interest or needs from software

00:08:28,639 --> 00:08:31,440
developers

00:08:29,440 --> 00:08:33,279
and operation teams where software

00:08:31,440 --> 00:08:34,320
developers needed to move and either

00:08:33,279 --> 00:08:37,919
iterate fast

00:08:34,320 --> 00:08:40,320
had to test recode really really fast

00:08:37,919 --> 00:08:41,760
be able to put things out there in

00:08:40,320 --> 00:08:45,040
production

00:08:41,760 --> 00:08:46,959
easily um but operation teams are always

00:08:45,040 --> 00:08:48,880
a bit more concerned with about

00:08:46,959 --> 00:08:50,959
stability availability

00:08:48,880 --> 00:08:52,000
of the services and the whole

00:08:50,959 --> 00:08:54,720
infrastructure

00:08:52,000 --> 00:08:56,080
so it might seem at a first glance that

00:08:54,720 --> 00:08:59,200
these are

00:08:56,080 --> 00:09:02,480
opposing interests um but actually

00:08:59,200 --> 00:09:05,600
the the surgeons of devops um

00:09:02,480 --> 00:09:08,160
put it put puts it into a place where

00:09:05,600 --> 00:09:08,880
it brings together people processes

00:09:08,160 --> 00:09:11,519
products

00:09:08,880 --> 00:09:12,480
tools to enable the continuous delivery

00:09:11,519 --> 00:09:14,800
of value

00:09:12,480 --> 00:09:16,320
of whatever you're producing and putting

00:09:14,800 --> 00:09:17,040
them into production and this is

00:09:16,320 --> 00:09:20,000
probably

00:09:17,040 --> 00:09:22,720
one of the best um this is always the

00:09:20,000 --> 00:09:24,880
definition of devops that i go back to

00:09:22,720 --> 00:09:26,320
because it highlights the importance of

00:09:24,880 --> 00:09:28,240
all of the players

00:09:26,320 --> 00:09:30,399
uh and all of the things that have to

00:09:28,240 --> 00:09:31,600
come together to bring these practices

00:09:30,399 --> 00:09:34,839
to fruition

00:09:31,600 --> 00:09:36,480
in your company or your research

00:09:34,839 --> 00:09:39,360
institution

00:09:36,480 --> 00:09:40,160
and devops revolves around three main

00:09:39,360 --> 00:09:42,399
principles

00:09:40,160 --> 00:09:44,800
uh the first being automation try to

00:09:42,399 --> 00:09:48,240
automate as much as possible

00:09:44,800 --> 00:09:51,760
and as you're automating you can get

00:09:48,240 --> 00:09:54,320
feedback in a much faster fashion so

00:09:51,760 --> 00:09:56,160
if you're testing your code on push when

00:09:54,320 --> 00:09:56,640
you're pushing to your version control

00:09:56,160 --> 00:10:00,800
or

00:09:56,640 --> 00:10:03,360
um injury servers like github or gitlab

00:10:00,800 --> 00:10:04,880
or bitbucket as soon as you push your

00:10:03,360 --> 00:10:08,240
code you can

00:10:04,880 --> 00:10:11,360
run your automated tests do all of your

00:10:08,240 --> 00:10:12,959
set of testings and gain feedback um

00:10:11,360 --> 00:10:15,279
so you can actually say if the test

00:10:12,959 --> 00:10:18,160
passed or not and then

00:10:15,279 --> 00:10:19,760
um you also get rid of the manual

00:10:18,160 --> 00:10:21,920
handoff

00:10:19,760 --> 00:10:23,839
not waiting for a jury software engineer

00:10:21,920 --> 00:10:26,160
to pass over it to other folk that will

00:10:23,839 --> 00:10:28,320
do the testing and then we'll try

00:10:26,160 --> 00:10:30,880
and put that into staging or production

00:10:28,320 --> 00:10:30,880
environment

00:10:31,360 --> 00:10:34,800
so in the traditional software

00:10:33,680 --> 00:10:38,000
engineering

00:10:34,800 --> 00:10:39,839
um we'll look normally at code changes

00:10:38,000 --> 00:10:40,800
that then will trigger the automated

00:10:39,839 --> 00:10:43,040
build

00:10:40,800 --> 00:10:44,000
we'll have a quick testing as i

00:10:43,040 --> 00:10:47,279
mentioned before

00:10:44,000 --> 00:10:49,519
you can see very easily if your tests

00:10:47,279 --> 00:10:51,279
passed or not and then based on the

00:10:49,519 --> 00:10:52,320
feedback from those tests you can

00:10:51,279 --> 00:10:55,120
iterate

00:10:52,320 --> 00:10:57,040
uh with minimal or no waiting time in

00:10:55,120 --> 00:11:00,240
some occasions

00:10:57,040 --> 00:11:02,720
um but this is not

00:11:00,240 --> 00:11:03,519
exactly the same way that it would occur

00:11:02,720 --> 00:11:05,360
or happen

00:11:03,519 --> 00:11:06,800
in machine learning because in machine

00:11:05,360 --> 00:11:09,200
learning we have

00:11:06,800 --> 00:11:09,920
first of all a heavy reliance on metrics

00:11:09,200 --> 00:11:12,160
depending on

00:11:09,920 --> 00:11:13,040
on what metrics you're using it can be

00:11:12,160 --> 00:11:16,000
accuracy

00:11:13,040 --> 00:11:17,040
specifically um depending on what your

00:11:16,000 --> 00:11:19,440
baseline

00:11:17,040 --> 00:11:21,040
metric is for your model you might want

00:11:19,440 --> 00:11:23,440
to optimize in that

00:11:21,040 --> 00:11:24,640
we also heavily rely on data

00:11:23,440 --> 00:11:26,560
visualization

00:11:24,640 --> 00:11:28,640
because it's so much easier to convey

00:11:26,560 --> 00:11:31,040
results or

00:11:28,640 --> 00:11:32,320
highlights or insights from our data

00:11:31,040 --> 00:11:36,560
through a visual

00:11:32,320 --> 00:11:37,519
manner and also it requires domain

00:11:36,560 --> 00:11:40,720
knowledge

00:11:37,519 --> 00:11:44,640
um whether you're using machine learning

00:11:40,720 --> 00:11:46,880
for free health or for finance or

00:11:44,640 --> 00:11:49,279
um for example there are a lot of folks

00:11:46,880 --> 00:11:52,480
doing a lot of amazing work at work

00:11:49,279 --> 00:11:52,959
using machine learning um for recovery

00:11:52,480 --> 00:11:57,440
now

00:11:52,959 --> 00:11:59,440
and for non-profit organizations but you

00:11:57,440 --> 00:12:00,240
do need to have some certain domain

00:11:59,440 --> 00:12:02,800
knowledge

00:12:00,240 --> 00:12:04,959
to actually extract uh all of that

00:12:02,800 --> 00:12:07,920
information make decisions based on

00:12:04,959 --> 00:12:08,959
on what you're getting out of that and

00:12:07,920 --> 00:12:11,680
it also

00:12:08,959 --> 00:12:13,440
um sometimes when taught when people

00:12:11,680 --> 00:12:17,519
talk about machine learning

00:12:13,440 --> 00:12:21,200
a lot of them reduce it to the model

00:12:17,519 --> 00:12:21,839
and the model seems to be the ultimate

00:12:21,200 --> 00:12:24,480
goal

00:12:21,839 --> 00:12:25,360
but that's actually just a tiny tiny bit

00:12:24,480 --> 00:12:28,399
of

00:12:25,360 --> 00:12:31,360
uh what is actually involved we have

00:12:28,399 --> 00:12:33,440
a lot a lot of stuff happening around uh

00:12:31,360 --> 00:12:34,800
development of machine learning and we

00:12:33,440 --> 00:12:38,000
also have

00:12:34,800 --> 00:12:41,040
um three um

00:12:38,000 --> 00:12:42,399
we have three pillars being code data

00:12:41,040 --> 00:12:44,480
and environment

00:12:42,399 --> 00:12:46,639
and for in in machine learning what

00:12:44,480 --> 00:12:48,880
happens is that we not only have

00:12:46,639 --> 00:12:51,040
the code change but if the data changes

00:12:48,880 --> 00:12:55,279
it pretty much changes all of your

00:12:51,040 --> 00:12:58,320
pipeline dependencies also downstream

00:12:55,279 --> 00:13:00,800
and again bringing together

00:12:58,320 --> 00:13:02,320
to the context of the origin of devops

00:13:00,800 --> 00:13:04,800
we can bring this to the origin

00:13:02,320 --> 00:13:06,639
of envelopes when again the data

00:13:04,800 --> 00:13:09,839
scientists need to move very fast

00:13:06,639 --> 00:13:12,720
sometimes uh we are trying

00:13:09,839 --> 00:13:14,480
i don't know five different algorithms

00:13:12,720 --> 00:13:17,519
uh we need to do hyper parameter

00:13:14,480 --> 00:13:19,519
tuning um but we want to use

00:13:17,519 --> 00:13:20,800
our the frameworks that we're using if

00:13:19,519 --> 00:13:24,560
we're using

00:13:20,800 --> 00:13:27,600
python or we're using r and we're using

00:13:24,560 --> 00:13:29,600
keras pytorch tensorflow

00:13:27,600 --> 00:13:31,760
or carrot whatever is that you're using

00:13:29,600 --> 00:13:33,760
you want to carry on using that instead

00:13:31,760 --> 00:13:37,519
of having to use

00:13:33,760 --> 00:13:41,360
a corporation specific machine learning

00:13:37,519 --> 00:13:44,560
library we also need it to be scalable

00:13:41,360 --> 00:13:48,399
and ideally we want minimal weight

00:13:44,560 --> 00:13:50,800
between us being able to do our

00:13:48,399 --> 00:13:52,399
research and development iteration and

00:13:50,800 --> 00:13:55,920
being able to taste it

00:13:52,399 --> 00:13:58,639
in a production-like environment again

00:13:55,920 --> 00:13:59,360
um because there there has been so much

00:13:58,639 --> 00:14:02,880
boom

00:13:59,360 --> 00:14:04,959
in the whole machine learning ecosystem

00:14:02,880 --> 00:14:07,199
and the machine learning engineers as

00:14:04,959 --> 00:14:08,560
well ideally want to reuse the tooling

00:14:07,199 --> 00:14:11,199
and platforms that they are

00:14:08,560 --> 00:14:12,639
already using for other software without

00:14:11,199 --> 00:14:14,839
having to re-learn

00:14:12,639 --> 00:14:16,800
or streamline a whole different

00:14:14,839 --> 00:14:18,639
infrastructure

00:14:16,800 --> 00:14:20,880
we're also they're also concerned about

00:14:18,639 --> 00:14:23,519
uptime monitoring monitoring

00:14:20,880 --> 00:14:24,639
is critical for machine learning systems

00:14:23,519 --> 00:14:30,240
and as well

00:14:24,639 --> 00:14:32,240
as reliability and stability

00:14:30,240 --> 00:14:34,000
oh uh this should be machine learning

00:14:32,240 --> 00:14:37,360
engineering so if if we

00:14:34,000 --> 00:14:40,800
um reframe this continuous integration

00:14:37,360 --> 00:14:43,040
loop or process

00:14:40,800 --> 00:14:45,360
we have now to keep track again as i

00:14:43,040 --> 00:14:49,440
mentioned before the coding data

00:14:45,360 --> 00:14:52,720
and date ration is actually done

00:14:49,440 --> 00:14:53,839
not only based on whether a test passed

00:14:52,720 --> 00:14:55,600
or not

00:14:53,839 --> 00:14:57,440
but we actually have to go back and look

00:14:55,600 --> 00:15:01,519
at the metrics that we are using

00:14:57,440 --> 00:15:04,240
as baselines to have literary models um

00:15:01,519 --> 00:15:06,000
and improved our models based on those

00:15:04,240 --> 00:15:08,720
as well as other

00:15:06,000 --> 00:15:11,519
outcomes that we have said within our

00:15:08,720 --> 00:15:14,560
specifications

00:15:11,519 --> 00:15:16,079
so how do you get started and the first

00:15:14,560 --> 00:15:19,440
thing that people tell me

00:15:16,079 --> 00:15:20,160
is i want to start using envelopes but i

00:15:19,440 --> 00:15:23,680
don't work

00:15:20,160 --> 00:15:26,800
in a company with thousands of engineers

00:15:23,680 --> 00:15:29,519
or i don't want to move everything

00:15:26,800 --> 00:15:32,560
entirely to a proprietary system

00:15:29,519 --> 00:15:34,399
and you don't have to

00:15:32,560 --> 00:15:35,839
like that's the nice thing that you

00:15:34,399 --> 00:15:38,720
don't have to

00:15:35,839 --> 00:15:40,720
um you can entirely recycle and

00:15:38,720 --> 00:15:42,079
repurpose the ecosystem that you're

00:15:40,720 --> 00:15:44,560
already using

00:15:42,079 --> 00:15:45,600
um if you're already fostering

00:15:44,560 --> 00:15:48,240
collaboration

00:15:45,600 --> 00:15:49,519
through version control systems like git

00:15:48,240 --> 00:15:52,399
mercurial

00:15:49,519 --> 00:15:53,040
if you're using open source development

00:15:52,399 --> 00:15:56,000
um

00:15:53,040 --> 00:15:57,839
platforms and ci cd platforms like

00:15:56,000 --> 00:16:01,360
github gitlab travis

00:15:57,839 --> 00:16:01,839
you can still use those um you'll just

00:16:01,360 --> 00:16:04,959
have

00:16:01,839 --> 00:16:07,199
to shift the approach a tiny bit um

00:16:04,959 --> 00:16:08,399
so that it fits the goals of machine

00:16:07,199 --> 00:16:11,040
learning

00:16:08,399 --> 00:16:12,399
when it comes to automation if you're

00:16:11,040 --> 00:16:15,680
working in a company that

00:16:12,399 --> 00:16:19,440
is already using again gitlab

00:16:15,680 --> 00:16:22,000
a cinc github travis you can leverage

00:16:19,440 --> 00:16:24,959
that deployment infrastructure

00:16:22,000 --> 00:16:25,680
to do all of the tasks that we need to

00:16:24,959 --> 00:16:28,800
do

00:16:25,680 --> 00:16:29,440
in machine learning and the nice nice

00:16:28,800 --> 00:16:32,240
thing again

00:16:29,440 --> 00:16:33,600
is you can use the open source libraries

00:16:32,240 --> 00:16:36,079
that you love

00:16:33,600 --> 00:16:36,959
if you have access to cloud computing

00:16:36,079 --> 00:16:40,399
let's say that some

00:16:36,959 --> 00:16:41,279
edge or companies using azure or gcp or

00:16:40,399 --> 00:16:44,480
something else

00:16:41,279 --> 00:16:46,880
you can leverage that cloud computing

00:16:44,480 --> 00:16:48,839
as you've been doing for example to do

00:16:46,880 --> 00:16:51,839
your gpu enable

00:16:48,839 --> 00:16:51,839
workloads

00:16:52,880 --> 00:16:58,560
so how would you go about it um

00:16:56,240 --> 00:17:00,639
in this context we have the data

00:16:58,560 --> 00:17:02,079
scientists and the sres or machine

00:17:00,639 --> 00:17:04,720
learning engineers

00:17:02,079 --> 00:17:06,319
we have a common environment that is lit

00:17:04,720 --> 00:17:07,919
in this case github but it can be

00:17:06,319 --> 00:17:11,360
anything else again

00:17:07,919 --> 00:17:14,000
um worry jury data scientists take care

00:17:11,360 --> 00:17:14,880
of all of the data processing and the

00:17:14,000 --> 00:17:18,720
ultimate goal

00:17:14,880 --> 00:17:21,360
is um to put to serve

00:17:18,720 --> 00:17:23,520
your machine learning applications or

00:17:21,360 --> 00:17:24,959
models into distributed cloud let's say

00:17:23,520 --> 00:17:26,400
that that's the infrastructure that your

00:17:24,959 --> 00:17:30,799
company has

00:17:26,400 --> 00:17:32,240
um so again the distributed cloud let's

00:17:30,799 --> 00:17:34,240
say it's the realm

00:17:32,240 --> 00:17:35,360
of the sre and machine learning

00:17:34,240 --> 00:17:40,480
engineers and

00:17:35,360 --> 00:17:40,480
data is the realm of my data scientists

00:17:42,000 --> 00:17:45,679
so as user data centers are working on

00:17:44,640 --> 00:17:48,559
your code

00:17:45,679 --> 00:17:48,880
do check it in as you normally do onto

00:17:48,559 --> 00:17:51,919
your

00:17:48,880 --> 00:17:55,120
favorite version control system

00:17:51,919 --> 00:17:59,200
and there are libraries out there like

00:17:55,120 --> 00:18:00,799
dvc i absolutely love dvc because it not

00:17:59,200 --> 00:18:02,799
only allows me

00:18:00,799 --> 00:18:03,840
so you can integrate that on top of your

00:18:02,799 --> 00:18:06,720
already existing

00:18:03,840 --> 00:18:08,960
github workflows if you're already using

00:18:06,720 --> 00:18:11,679
git flow for your development

00:18:08,960 --> 00:18:12,480
you can totally integrate that and the

00:18:11,679 --> 00:18:15,440
nice thing

00:18:12,480 --> 00:18:16,240
is that you can also have versions of

00:18:15,440 --> 00:18:19,600
your models

00:18:16,240 --> 00:18:22,640
of your data if you're using

00:18:19,600 --> 00:18:25,679
something like azure blog storage or s3

00:18:22,640 --> 00:18:27,760
or a local database uh you can keep

00:18:25,679 --> 00:18:28,640
track of those versions and of your

00:18:27,760 --> 00:18:31,120
parameters

00:18:28,640 --> 00:18:33,440
and that is crucial especially if you're

00:18:31,120 --> 00:18:35,840
doing very very fast iteration

00:18:33,440 --> 00:18:37,200
so you can keep track of your model the

00:18:35,840 --> 00:18:38,880
parameters that you're using

00:18:37,200 --> 00:18:40,960
and the performance across those

00:18:38,880 --> 00:18:44,559
situations

00:18:40,960 --> 00:18:45,440
so you can set that on top of your use

00:18:44,559 --> 00:18:48,160
yeah

00:18:45,440 --> 00:18:49,919
your version control so once you push

00:18:48,160 --> 00:18:51,280
your code that has been modified or if

00:18:49,919 --> 00:18:54,240
you modified a

00:18:51,280 --> 00:18:56,080
a single parameter that should kick off

00:18:54,240 --> 00:18:58,640
the continuous integration

00:18:56,080 --> 00:18:58,640
pipeline

00:19:01,840 --> 00:19:06,240
and if you're using for example a github

00:19:05,520 --> 00:19:09,520
you can use

00:19:06,240 --> 00:19:13,120
github actions that's going to kick your

00:19:09,520 --> 00:19:16,000
jury pipeline and it can be

00:19:13,120 --> 00:19:17,360
doing anything like do a training run

00:19:16,000 --> 00:19:19,520
let's say that we

00:19:17,360 --> 00:19:21,520
actually want to to retrain the model

00:19:19,520 --> 00:19:22,640
but we don't have to kick that manually

00:19:21,520 --> 00:19:25,600
so the

00:19:22,640 --> 00:19:26,320
ci pipeline has done it for me using

00:19:25,600 --> 00:19:30,160
process

00:19:26,320 --> 00:19:33,679
data that i have um so

00:19:30,160 --> 00:19:35,200
here we're shifting the context of uh

00:19:33,679 --> 00:19:37,120
continuous integration and continuous

00:19:35,200 --> 00:19:39,919
delivery platforms so

00:19:37,120 --> 00:19:42,240
we're not only running tests like unit

00:19:39,919 --> 00:19:42,480
tests smoke test regression tests but we

00:19:42,240 --> 00:19:45,679
are

00:19:42,480 --> 00:19:48,799
actually leveraging it to do to do some

00:19:45,679 --> 00:19:51,840
of the training data processing

00:19:48,799 --> 00:19:54,400
um and again it's all using

00:19:51,840 --> 00:19:55,760
uh what would you already like using

00:19:54,400 --> 00:19:58,240
like tensorflow

00:19:55,760 --> 00:19:58,240
python

00:19:58,960 --> 00:20:04,960
and you again can set uh

00:20:02,240 --> 00:20:06,559
what kind of actions are triggering this

00:20:04,960 --> 00:20:07,679
it can be a push it can be a merge

00:20:06,559 --> 00:20:11,120
request

00:20:07,679 --> 00:20:13,200
and again you have a due time

00:20:11,120 --> 00:20:14,400
version of all of that you're doing to

00:20:13,200 --> 00:20:17,760
the actual

00:20:14,400 --> 00:20:19,440
machine learning metrics and results

00:20:17,760 --> 00:20:21,200
so again if you have to update the

00:20:19,440 --> 00:20:23,760
parameters again

00:20:21,200 --> 00:20:25,600
um you can do that again if you're using

00:20:23,760 --> 00:20:28,080
tools like dvc this is

00:20:25,600 --> 00:20:29,520
uh readily available and you can have a

00:20:28,080 --> 00:20:32,320
separate file

00:20:29,520 --> 00:20:35,600
let's say a jaml file and where it just

00:20:32,320 --> 00:20:40,080
specifies your parameters

00:20:35,600 --> 00:20:41,760
your ci pipeline kicks in and then

00:20:40,080 --> 00:20:44,400
in github actions because everything is

00:20:41,760 --> 00:20:46,799
integrated but you can do this with any

00:20:44,400 --> 00:20:48,880
other platform

00:20:46,799 --> 00:20:51,280
you can imagine that you can get

00:20:48,880 --> 00:20:52,960
automated edited reports and metrics to

00:20:51,280 --> 00:20:54,640
your pull request so if someone is

00:20:52,960 --> 00:20:57,440
changing that parameter

00:20:54,640 --> 00:20:58,720
um you will actually see the performance

00:20:57,440 --> 00:21:00,640
of your models

00:20:58,720 --> 00:21:02,640
and you can even depending on what

00:21:00,640 --> 00:21:04,559
platforms you're using extract some

00:21:02,640 --> 00:21:06,400
information of the compute environment

00:21:04,559 --> 00:21:09,440
that you were running this in

00:21:06,400 --> 00:21:12,080
especially for reproducibility and

00:21:09,440 --> 00:21:12,080
purposes

00:21:13,039 --> 00:21:19,039
and again if you have uh

00:21:16,720 --> 00:21:22,720
this makes it um if you have

00:21:19,039 --> 00:21:25,679
visualizations you can also display

00:21:22,720 --> 00:21:26,400
those and that makes it so much easier

00:21:25,679 --> 00:21:28,000
for your

00:21:26,400 --> 00:21:30,640
fellow data scientists and schindler and

00:21:28,000 --> 00:21:33,120
aries um to reveal pull requests and

00:21:30,640 --> 00:21:34,559
and do a quick evaluation of what is

00:21:33,120 --> 00:21:37,840
actually happening

00:21:34,559 --> 00:21:37,840
uh under the hood

00:21:39,520 --> 00:21:42,720
so once let's say that you've worked in

00:21:41,360 --> 00:21:45,120
your code you've optimized your

00:21:42,720 --> 00:21:47,280
parameters you are finally happy

00:21:45,120 --> 00:21:48,480
with your model or your product or

00:21:47,280 --> 00:21:50,159
whatever it is

00:21:48,480 --> 00:21:51,840
that is optimized it hits the metrics

00:21:50,159 --> 00:21:54,320
and it hits the requirements

00:21:51,840 --> 00:21:55,440
so now the next thing will be rolling

00:21:54,320 --> 00:21:57,679
out to production

00:21:55,440 --> 00:21:59,200
and that's basically the handover from

00:21:57,679 --> 00:21:59,840
the data scientist to the machine

00:21:59,200 --> 00:22:02,080
learnings

00:21:59,840 --> 00:22:03,360
and instead of having to send things

00:22:02,080 --> 00:22:06,480
over a wall

00:22:03,360 --> 00:22:07,520
it is all done again through your

00:22:06,480 --> 00:22:12,799
version control

00:22:07,520 --> 00:22:15,120
and your ci and cd in platforms

00:22:12,799 --> 00:22:16,720
so then again let's say that it has been

00:22:15,120 --> 00:22:18,640
signed up for production

00:22:16,720 --> 00:22:21,360
that will that can be done through

00:22:18,640 --> 00:22:24,640
assign a proper sign-off or a label

00:22:21,360 --> 00:22:26,960
um or merging the branch let's say into

00:22:24,640 --> 00:22:30,080
mastery so that will trigger again

00:22:26,960 --> 00:22:32,480
the cinci pipeline to make sure

00:22:30,080 --> 00:22:34,480
that everything is ready that everything

00:22:32,480 --> 00:22:36,880
is deployable that

00:22:34,480 --> 00:22:39,039
it works as expected into your staging

00:22:36,880 --> 00:22:42,640
environment and if it does

00:22:39,039 --> 00:22:46,159
you can roll out to the world and

00:22:42,640 --> 00:22:50,080
this path is much

00:22:46,159 --> 00:22:51,840
much easier and smoother than a lot of

00:22:50,080 --> 00:22:54,000
the processes that i've seen in

00:22:51,840 --> 00:22:57,200
companies i worked for

00:22:54,000 --> 00:23:00,080
where basically you had to jump

00:22:57,200 --> 00:23:00,559
50 hoops before even trying to put your

00:23:00,080 --> 00:23:02,640
model

00:23:00,559 --> 00:23:04,320
into staging environment and then it

00:23:02,640 --> 00:23:05,679
turned out that your that the staging

00:23:04,320 --> 00:23:07,840
environment was

00:23:05,679 --> 00:23:09,600
so different to the actual production

00:23:07,840 --> 00:23:11,280
world that you could

00:23:09,600 --> 00:23:13,200
then you had to restart pretty much the

00:23:11,280 --> 00:23:16,320
process before putting

00:23:13,200 --> 00:23:19,679
things into production

00:23:16,320 --> 00:23:22,880
and this is just one

00:23:19,679 --> 00:23:25,360
workflow that i take as an example

00:23:22,880 --> 00:23:26,880
but there is way more there is so many

00:23:25,360 --> 00:23:30,000
things that you can do

00:23:26,880 --> 00:23:31,120
um yo well the ones that the people that

00:23:30,000 --> 00:23:33,360
know me know that i

00:23:31,120 --> 00:23:36,000
love jupiter i absolutely love the

00:23:33,360 --> 00:23:38,480
jupiter ecosystem and everything they do

00:23:36,000 --> 00:23:40,320
and everything the team the teams do and

00:23:38,480 --> 00:23:40,880
now there are github actions or you can

00:23:40,320 --> 00:23:42,799
start

00:23:40,880 --> 00:23:44,080
people are experimenting a lot with

00:23:42,799 --> 00:23:45,520
things that they can do within the

00:23:44,080 --> 00:23:49,039
jupyter ecosystem

00:23:45,520 --> 00:23:51,520
um there is this action that if you are

00:23:49,039 --> 00:23:54,559
familiar with binder

00:23:51,520 --> 00:23:55,520
as you are pushing your injury code it

00:23:54,559 --> 00:23:57,760
will create

00:23:55,520 --> 00:23:59,279
a docker container with all of your

00:23:57,760 --> 00:24:00,240
development environment all of your

00:23:59,279 --> 00:24:02,240
requirements

00:24:00,240 --> 00:24:04,240
and it's binder ready so if you want to

00:24:02,240 --> 00:24:06,799
share it with folks at your company or

00:24:04,240 --> 00:24:09,760
outside your company it's much faster

00:24:06,799 --> 00:24:11,520
or just to keep track of your containers

00:24:09,760 --> 00:24:14,640
it makes it so much easier

00:24:11,520 --> 00:24:18,799
and then having to deal with

00:24:14,640 --> 00:24:22,159
docker files and docker builds yourself

00:24:18,799 --> 00:24:25,200
you can also um this is a

00:24:22,159 --> 00:24:28,480
sure specific example uh just because i

00:24:25,200 --> 00:24:30,799
i work with a shirt quite a lot um

00:24:28,480 --> 00:24:31,600
and you can set up complex workflows

00:24:30,799 --> 00:24:33,600
where you

00:24:31,600 --> 00:24:36,159
set up a goal from things from building

00:24:33,600 --> 00:24:39,360
your workspace training your model

00:24:36,159 --> 00:24:41,440
and submit the runs

00:24:39,360 --> 00:24:44,640
the training run sorry and deploy the

00:24:41,440 --> 00:24:44,640
model out in the world

00:24:44,799 --> 00:24:51,600
um hamel hamel design from github has

00:24:48,400 --> 00:24:54,640
been experimenting a lot with envelopes

00:24:51,600 --> 00:24:57,919
um and i absolutely love this i've been

00:24:54,640 --> 00:24:59,520
implementing similar workflows for some

00:24:57,919 --> 00:25:01,600
products that i'm working on

00:24:59,520 --> 00:25:03,039
and you you get you can get like really

00:25:01,600 --> 00:25:05,679
really nice

00:25:03,039 --> 00:25:08,480
results and optimize your workflows in a

00:25:05,679 --> 00:25:11,600
very nice manner

00:25:08,480 --> 00:25:14,559
um so in brief envelopes takes

00:25:11,600 --> 00:25:16,080
a a very very nice approach where it

00:25:14,559 --> 00:25:18,559
brings again together

00:25:16,080 --> 00:25:20,000
the people to processes the tools but

00:25:18,559 --> 00:25:23,200
that doesn't mean that you

00:25:20,000 --> 00:25:24,559
have to switch over or drastically

00:25:23,200 --> 00:25:26,559
change your workflows

00:25:24,559 --> 00:25:28,880
it allows you to be much more efficient

00:25:26,559 --> 00:25:32,320
with the tools and platforms that

00:25:28,880 --> 00:25:34,799
you already use and love

00:25:32,320 --> 00:25:36,400
and basically gives you the opportunity

00:25:34,799 --> 00:25:38,320
to recycle

00:25:36,400 --> 00:25:39,919
mix and match and pick and choose from

00:25:38,320 --> 00:25:43,360
your ecosystem

00:25:39,919 --> 00:25:46,720
and if any of you would like to

00:25:43,360 --> 00:25:48,720
access um this slides

00:25:46,720 --> 00:25:50,640
as i said they're gonna be available

00:25:48,720 --> 00:25:54,480
after i just need to click

00:25:50,640 --> 00:25:56,960
uh publish onto the link

00:25:54,480 --> 00:25:58,960
and i'm going to be your hanking around

00:25:56,960 --> 00:26:00,640
if you have any questions if again if

00:25:58,960 --> 00:26:01,679
you want to reach out if you want to

00:26:00,640 --> 00:26:04,159
discuss hey

00:26:01,679 --> 00:26:05,760
how do can i migrate to an envelopes

00:26:04,159 --> 00:26:08,240
approach for yourself

00:26:05,760 --> 00:26:10,320
or for my company or for my workplace

00:26:08,240 --> 00:26:14,320
feel free to reach out i'll be more than

00:26:10,320 --> 00:26:14,320
happy to talk to you about it

00:26:23,600 --> 00:26:27,520
just a sec there uh maya you're muted on

00:26:26,159 --> 00:26:28,720
your mic there

00:26:27,520 --> 00:26:31,039
just gotta click that little bit there

00:26:28,720 --> 00:26:32,960
you go hello

00:26:31,039 --> 00:26:34,080
thank you that was excellent thank you

00:26:32,960 --> 00:26:35,679
tanya i

00:26:34,080 --> 00:26:37,520
i love your slides i really love how

00:26:35,679 --> 00:26:38,640
very diverse the representations are of

00:26:37,520 --> 00:26:41,360
people they actually look

00:26:38,640 --> 00:26:43,440
like the archetypes that i live with as

00:26:41,360 --> 00:26:45,600
opposed to ones that show up and

00:26:43,440 --> 00:26:46,640
you know in a lot of other slides that

00:26:45,600 --> 00:26:50,799
was really great

00:26:46,640 --> 00:26:52,240
thank you oh thank you yeah

00:26:50,799 --> 00:26:54,159
excellent look i've got a couple of

00:26:52,240 --> 00:26:54,880
questions well i have a couple of

00:26:54,159 --> 00:26:58,640
questions

00:26:54,880 --> 00:27:03,039
so if you were say

00:26:58,640 --> 00:27:05,679
uh starting ml ops engineer or

00:27:03,039 --> 00:27:07,039
starting in the field at all what would

00:27:05,679 --> 00:27:09,039
be

00:27:07,039 --> 00:27:10,400
like your top tips for just starting out

00:27:09,039 --> 00:27:12,240
what would be the best skills what would

00:27:10,400 --> 00:27:15,360
be the best practices any specific

00:27:12,240 --> 00:27:15,360
tools you're thinking of

00:27:15,440 --> 00:27:23,039
right um so the envelopes

00:27:19,039 --> 00:27:23,440
uh i think his area is still very very

00:27:23,039 --> 00:27:25,679
new

00:27:23,440 --> 00:27:28,159
and we're still trying to come up with

00:27:25,679 --> 00:27:31,279
standards and those best practices

00:27:28,159 --> 00:27:35,279
um but if you've

00:27:31,279 --> 00:27:37,919
dived into traditional devops i think

00:27:35,279 --> 00:27:39,279
um one of the most important things is

00:27:37,919 --> 00:27:43,200
doing that mindset

00:27:39,279 --> 00:27:46,880
mind shift or from traditional devops to

00:27:43,200 --> 00:27:50,000
machine learning and actually

00:27:46,880 --> 00:27:52,559
always keeping in mind that data and

00:27:50,000 --> 00:27:53,679
code are like both our first class

00:27:52,559 --> 00:27:56,880
citizens

00:27:53,679 --> 00:27:58,159
um if also i worry to recommend

00:27:56,880 --> 00:28:01,520
something

00:27:58,159 --> 00:28:04,960
um think about privacy

00:28:01,520 --> 00:28:07,440
i think we don't privacy and security

00:28:04,960 --> 00:28:09,440
we tend to put a lot of attention in

00:28:07,440 --> 00:28:11,200
privacy and security

00:28:09,440 --> 00:28:13,279
when it comes to our raw data for

00:28:11,200 --> 00:28:14,880
example and then

00:28:13,279 --> 00:28:16,799
a lot of folks forget about privacy and

00:28:14,880 --> 00:28:19,600
security throughout the pipeline

00:28:16,799 --> 00:28:20,880
and so top tip is not only think about

00:28:19,600 --> 00:28:25,039
automation but

00:28:20,880 --> 00:28:28,159
privacy and security across um

00:28:25,039 --> 00:28:30,480
accuracy during trial workflow i have a

00:28:28,159 --> 00:28:33,440
few resources that i can then

00:28:30,480 --> 00:28:35,520
share i can add an extra slide to my uh

00:28:33,440 --> 00:28:37,919
to my presentation with links

00:28:35,520 --> 00:28:38,720
on like different resources for folks

00:28:37,919 --> 00:28:41,520
that want to

00:28:38,720 --> 00:28:43,279
learn more about the mlaps or there are

00:28:41,520 --> 00:28:46,080
a couple of books

00:28:43,279 --> 00:28:46,480
a couple of blog posts that are amazing

00:28:46,080 --> 00:28:48,799
um

00:28:46,480 --> 00:28:51,120
so i can add always that slide for folks

00:28:48,799 --> 00:28:54,159
that might be interested in those links

00:28:51,120 --> 00:28:55,360
great thank you i think we don't have

00:28:54,159 --> 00:28:56,960
time for any more questions at the

00:28:55,360 --> 00:28:58,399
moment but tanya you're going to be

00:28:56,960 --> 00:29:01,760
hanging around

00:28:58,399 --> 00:29:02,000
in venulis and uh letting everybody ask

00:29:01,760 --> 00:29:03,679
you

00:29:02,000 --> 00:29:05,279
all kinds of other questions thank you

00:29:03,679 --> 00:29:06,880
so much

00:29:05,279 --> 00:29:08,159
we're gonna have a very little break

00:29:06,880 --> 00:29:09,520
before we'll bring on the next speaker

00:29:08,159 --> 00:29:13,840
thanks everyone

00:29:09,520 --> 00:29:13,840

YouTube URL: https://www.youtube.com/watch?v=remaDHgimSE


