Title: "Stop Writing Tests!" - Zac Hatfield-Dodds (PyConline AU 2020)
Publication date: 2020-09-08
Playlist: PyConline AU 2020
Description: 
	Zac Hatfield-Dodds

https://2020.pycon.org.au/program/TCT3GH

We often think of manual testing as slower and less effective than automated testing,
but most test suites haven't automated that much!  Computers can execute all our 
pre-defined tests very quickly - and this is definitely a good thing, especially for 
regression tests - but the tricky parts are still done by humans.

We select test cases (inputs) and check that the corresponding outputs make sense;
we write functions that "arrange, act, and assert" for our tests; and we decide -
or script via CI systems - which tests to execute and when.

So lets explore some next-generation tools that we could use to automate these 
remaining parts of a testing workflow!

PROPERTY-BASED TESTING helps you to write more powerful tests by automating selection 
of test cases: instead of listing input-output pairs, you describe the kind of data 
you want and write a test that passes *for all X...*.  We'll see a live demo, and 
learn something about the Python builtins in the process!

CODE INTROSPECTION, and a handy templating tool, can help write tests for you.
Do you need to know any more than which code to test, and what properties should hold?

ADAPTIVE FUZZING tools take CI to its logical conclusion: instead of running a fixed
set of tests on each push, they sit on a server and run tests full-time... fine-tuning
themselves to find bugs in *your* project and pulling each new commit as it lands!

By the end of this talk, you'll know what these three kinds of tools can do - 
and how to get started with automating the *rest* of your testing tomorrow.

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Sat Sep  5 11:35:00 2020 at Curlyboi
YouTube URL: https://www.youtube.com/watch?v=tiy031EoDXo


