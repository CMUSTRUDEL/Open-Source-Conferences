Title: "Tweaking the rise and fall of empires and economies" - Bosco Ho (PyConline AU 2020)
Publication date: 2020-09-07
Playlist: PyConline AU 2020
Description: 
	Bosco Ho

https://2020.pycon.org.au/program/SEZQAL

## Outline

1. Show examples of beautiful numerical models that use differential equations
2. Show how painful it is to build the models yourself
3. Describe a python framework that simplifies this
5. Demonstrate how the built-in interactive UI opens up exploration

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Fri Sep  4 17:45:00 2020 at Curlyboi
Captions: 
	00:00:00,960 --> 00:00:06,240
hello everyone final talk

00:00:03,760 --> 00:00:07,680
for the data science analytics track

00:00:06,240 --> 00:00:08,320
thank you so much for staying with all

00:00:07,680 --> 00:00:09,920
of us

00:00:08,320 --> 00:00:11,679
through all of this and or streaming

00:00:09,920 --> 00:00:12,880
this later whichever one it is that

00:00:11,679 --> 00:00:15,040
you're doing

00:00:12,880 --> 00:00:16,720
uh we've got bosco ho talking about

00:00:15,040 --> 00:00:18,560
tweaking the rise and fall of empires

00:00:16,720 --> 00:00:21,119
and economies now uh

00:00:18,560 --> 00:00:23,119
bosco's bio is just full of all the

00:00:21,119 --> 00:00:23,920
words tata engineering computational

00:00:23,119 --> 00:00:27,599
biologists

00:00:23,920 --> 00:00:30,000
specialization data vis visual impact

00:00:27,599 --> 00:00:31,279
models of the world python javascript

00:00:30,000 --> 00:00:33,840
graphics

00:00:31,279 --> 00:00:35,520
um so i'll let him tell you how all of

00:00:33,840 --> 00:00:39,040
that makes any sense

00:00:35,520 --> 00:00:40,559
please hey everybody it's uh it's been a

00:00:39,040 --> 00:00:42,320
long day and i'm glad you are

00:00:40,559 --> 00:00:44,000
sticking with us and uh i think the guys

00:00:42,320 --> 00:00:46,640
are doing a fantastic job keeping all

00:00:44,000 --> 00:00:47,440
the technical pieces up and running so

00:00:46,640 --> 00:00:49,520
before we begin

00:00:47,440 --> 00:00:51,840
uh i'll go straight into it so the talk

00:00:49,520 --> 00:00:53,440
is called tweaking the rise and fall of

00:00:51,840 --> 00:00:56,960
empires and economies

00:00:53,440 --> 00:00:58,320
so who am i uh i just like to say that i

00:00:56,960 --> 00:00:58,879
spent probably the first part of my

00:00:58,320 --> 00:01:01,280
career

00:00:58,879 --> 00:01:03,359
as a computational biologist making

00:01:01,280 --> 00:01:04,960
computer simulations like the one on the

00:01:03,359 --> 00:01:07,680
screen

00:01:04,960 --> 00:01:08,240
i used to build them run them study the

00:01:07,680 --> 00:01:10,080
data

00:01:08,240 --> 00:01:12,400
and make little cool little movies like

00:01:10,080 --> 00:01:13,840
that i switched to scientific

00:01:12,400 --> 00:01:15,759
programming and full stack development

00:01:13,840 --> 00:01:16,400
at some point so at one point i was

00:01:15,759 --> 00:01:19,600
working

00:01:16,400 --> 00:01:22,720
at an epidemiology lab uh in melbourne

00:01:19,600 --> 00:01:24,560
melbourne uni and even worked with james

00:01:22,720 --> 00:01:27,439
cook university for a while

00:01:24,560 --> 00:01:28,720
and there i was actually tasked with

00:01:27,439 --> 00:01:32,560
amongst other tasks

00:01:28,720 --> 00:01:34,560
translating a matlab code base to python

00:01:32,560 --> 00:01:36,560
now i'm working for a bay area company

00:01:34,560 --> 00:01:37,200
it's an internet of things company and

00:01:36,560 --> 00:01:40,640
they're doing

00:01:37,200 --> 00:01:43,680
distributed control trying to manage um

00:01:40,640 --> 00:01:45,520
sort of industrial controllers

00:01:43,680 --> 00:01:47,119
and i'm on the data science team there

00:01:45,520 --> 00:01:49,360
and i'm making sort of data munching

00:01:47,119 --> 00:01:52,799
apps visualizations

00:01:49,360 --> 00:01:56,880
so that's my experience and amongst

00:01:52,799 --> 00:02:00,240
all this i just really love models um

00:01:56,880 --> 00:02:02,799
and i kept a big interest in uh

00:02:00,240 --> 00:02:04,240
you know reading about models in in in a

00:02:02,799 --> 00:02:06,000
big wide world

00:02:04,240 --> 00:02:07,520
and i'm particularly interested in you

00:02:06,000 --> 00:02:09,280
know simple models you know

00:02:07,520 --> 00:02:11,039
models just use differential equations i

00:02:09,280 --> 00:02:11,840
know we're in the world of big data

00:02:11,039 --> 00:02:14,080
science but

00:02:11,840 --> 00:02:15,360
i think there's a lot of a lot of

00:02:14,080 --> 00:02:18,879
insight to be mined in

00:02:15,360 --> 00:02:20,959
small tractable models so in this talk

00:02:18,879 --> 00:02:22,400
i'm going to be hopefully covering some

00:02:20,959 --> 00:02:23,760
of the most interesting models i've

00:02:22,400 --> 00:02:25,920
found that

00:02:23,760 --> 00:02:27,840
that are quantitative and i think reveal

00:02:25,920 --> 00:02:30,879
some real insight into our world so

00:02:27,840 --> 00:02:33,280
i'll be covering um um so

00:02:30,879 --> 00:02:34,720
just let's say the kind of models i want

00:02:33,280 --> 00:02:37,120
to look at are

00:02:34,720 --> 00:02:39,040
based on differential equations and what

00:02:37,120 --> 00:02:40,879
it means it's based on calculus and just

00:02:39,040 --> 00:02:41,440
as a side note i was reading recently

00:02:40,879 --> 00:02:44,640
that

00:02:41,440 --> 00:02:48,319
isaac newton invented calculus

00:02:44,640 --> 00:02:51,120
in 1665 when he was

00:02:48,319 --> 00:02:53,120
trying to stay away from cambridge

00:02:51,120 --> 00:02:55,360
during the great plague

00:02:53,120 --> 00:02:56,480
so in that time he invented calculus and

00:02:55,360 --> 00:02:58,239
calculus

00:02:56,480 --> 00:02:59,840
is nothing to be afraid of um i won't be

00:02:58,239 --> 00:03:02,000
going too much into calculus all i want

00:02:59,840 --> 00:03:05,680
to say here is calculus

00:03:02,000 --> 00:03:07,519
is the application oh it's it's used to

00:03:05,680 --> 00:03:11,360
study the geometry of curved

00:03:07,519 --> 00:03:14,480
lines and um differential equations

00:03:11,360 --> 00:03:16,640
are just algebraic expressions of curved

00:03:14,480 --> 00:03:18,959
lines or changes of quantities

00:03:16,640 --> 00:03:21,440
so the models we're looking at is a the

00:03:18,959 --> 00:03:24,640
very famous predator prey

00:03:21,440 --> 00:03:26,080
uh uh model uh it's uh called the

00:03:24,640 --> 00:03:28,480
loctera

00:03:26,080 --> 00:03:29,760
lochterra volta log terra a locta

00:03:28,480 --> 00:03:31,840
voltaire equation

00:03:29,760 --> 00:03:34,239
i'm gonna be looking at one

00:03:31,840 --> 00:03:36,480
epidemiological model the most basic one

00:03:34,239 --> 00:03:38,640
it's called the sir model

00:03:36,480 --> 00:03:40,000
i'm going to be looking at steve keane's

00:03:38,640 --> 00:03:41,920
model of economic

00:03:40,000 --> 00:03:44,239
collapse and finally i'm going to look

00:03:41,920 --> 00:03:47,760
at peter turgeon's model

00:03:44,239 --> 00:03:51,599
of imperial collapse so this looks

00:03:47,760 --> 00:03:52,239
uh so what i found looking at these

00:03:51,599 --> 00:03:54,000
models

00:03:52,239 --> 00:03:55,519
is that the one thing that binds all

00:03:54,000 --> 00:03:57,840
these models together

00:03:55,519 --> 00:04:00,480
is there's this one element in every of

00:03:57,840 --> 00:04:02,080
these models it tracks a population

00:04:00,480 --> 00:04:04,080
and so what great is great about

00:04:02,080 --> 00:04:06,000
calculus is you can write down an

00:04:04,080 --> 00:04:07,360
algebraic equation for the changes in

00:04:06,000 --> 00:04:09,840
population

00:04:07,360 --> 00:04:12,640
and this is called the fundamental

00:04:09,840 --> 00:04:14,319
people called this the fundamental uh

00:04:12,640 --> 00:04:16,239
differential equation model for say

00:04:14,319 --> 00:04:18,000
populations it's simply

00:04:16,239 --> 00:04:19,440
the change of in a population on the

00:04:18,000 --> 00:04:20,959
left is

00:04:19,440 --> 00:04:22,960
directly proportional to the size of the

00:04:20,959 --> 00:04:24,240
population like our birth rate so you

00:04:22,960 --> 00:04:25,120
know our birth rate's only between one

00:04:24,240 --> 00:04:26,960
and two percent

00:04:25,120 --> 00:04:28,320
of the population and that's how many

00:04:26,960 --> 00:04:30,960
kids are born

00:04:28,320 --> 00:04:31,600
every year and this leads to this very

00:04:30,960 --> 00:04:34,800
famous

00:04:31,600 --> 00:04:36,320
uh you know exponential growth

00:04:34,800 --> 00:04:38,479
curve so in all the models i'm going to

00:04:36,320 --> 00:04:40,000
talk about this equation we buried in

00:04:38,479 --> 00:04:40,800
there somewhere and all the other

00:04:40,000 --> 00:04:43,919
equations

00:04:40,800 --> 00:04:46,960
are just constraints on

00:04:43,919 --> 00:04:48,800
this exponential growth okay

00:04:46,960 --> 00:04:50,160
so the rest of the talk uh we'll be

00:04:48,800 --> 00:04:52,800
dividing two halves

00:04:50,160 --> 00:04:54,240
the first half will be looking at how

00:04:52,800 --> 00:04:55,360
one would go about

00:04:54,240 --> 00:04:57,120
creating a model and it's going to be a

00:04:55,360 --> 00:04:57,919
little bit code heavy i'm going to talk

00:04:57,120 --> 00:05:00,400
a bit about some

00:04:57,919 --> 00:05:02,080
of my personal insights on python and

00:05:00,400 --> 00:05:03,120
the second part i will actually look at

00:05:02,080 --> 00:05:06,320
these models and

00:05:03,120 --> 00:05:08,080
use uh this package that i've created

00:05:06,320 --> 00:05:09,520
which i've called modeldrop.io and

00:05:08,080 --> 00:05:12,479
you're happy to have a look at it

00:05:09,520 --> 00:05:15,919
while i'm talking to actually uh bring

00:05:12,479 --> 00:05:15,919
these models to life

00:05:16,560 --> 00:05:22,960
okay so uh before we look uh

00:05:19,840 --> 00:05:26,320
well to look at a particular model

00:05:22,960 --> 00:05:28,639
uh in detail and see the code um

00:05:26,320 --> 00:05:30,080
i'm gonna pick one and uh this is

00:05:28,639 --> 00:05:32,960
arguably

00:05:30,080 --> 00:05:34,720
the most celebrated population dynamics

00:05:32,960 --> 00:05:36,880
model

00:05:34,720 --> 00:05:38,639
and it's based on this fantastic study

00:05:36,880 --> 00:05:40,720
in 1921

00:05:38,639 --> 00:05:42,800
made by the hudson bay company which is

00:05:40,720 --> 00:05:43,919
a trading company of several hundred

00:05:42,800 --> 00:05:46,320
years old

00:05:43,919 --> 00:05:48,320
based in canada northern america and one

00:05:46,320 --> 00:05:51,360
of the things they traded was

00:05:48,320 --> 00:05:53,680
furs of animals like lynxes

00:05:51,360 --> 00:05:55,600
and they published his paper that looked

00:05:53,680 --> 00:05:57,360
at a hundred years

00:05:55,600 --> 00:05:59,600
of data and they found that the

00:05:57,360 --> 00:06:03,039
population of

00:05:59,600 --> 00:06:06,479
rabbits which is in the white dots right

00:06:03,039 --> 00:06:08,639
oscillated over this you know like five

00:06:06,479 --> 00:06:10,720
ten years and it was followed very

00:06:08,639 --> 00:06:12,960
closely by the population of like um

00:06:10,720 --> 00:06:16,080
canadian links you know the cat

00:06:12,960 --> 00:06:18,850
that hunts the rabbits this

00:06:16,080 --> 00:06:20,400
data is basically the first observation

00:06:18,850 --> 00:06:23,600
[Music]

00:06:20,400 --> 00:06:27,280
that's that underlies all of um

00:06:23,600 --> 00:06:28,479
ecology studies and so not long after

00:06:27,280 --> 00:06:31,600
that

00:06:28,479 --> 00:06:33,440
locta was a mathematician

00:06:31,600 --> 00:06:34,639
figured out that you could model that

00:06:33,440 --> 00:06:37,520
series with this

00:06:34,639 --> 00:06:38,000
two set of um instead of two equations

00:06:37,520 --> 00:06:40,560
um

00:06:38,000 --> 00:06:41,440
so these are two differential equations

00:06:40,560 --> 00:06:43,680
where

00:06:41,440 --> 00:06:45,280
the left-hand side talks about the time

00:06:43,680 --> 00:06:47,280
change of x which is

00:06:45,280 --> 00:06:50,160
rabbits and the other equation talks

00:06:47,280 --> 00:06:53,840
about the time changes in y which is

00:06:50,160 --> 00:06:55,280
uh the links and the changes in the

00:06:53,840 --> 00:06:56,319
population are related to the

00:06:55,280 --> 00:06:58,880
populations

00:06:56,319 --> 00:07:00,240
uh so i won't go into this too much

00:06:58,880 --> 00:07:02,240
detail just presented

00:07:00,240 --> 00:07:03,919
if you've had a calculus background i

00:07:02,240 --> 00:07:05,759
think you'll be pretty obvious but

00:07:03,919 --> 00:07:09,039
if you don't bear with me it's it's not

00:07:05,759 --> 00:07:13,520
uh it's not gonna be such a big problem

00:07:09,039 --> 00:07:17,599
okay so uh what i want to show you here

00:07:13,520 --> 00:07:19,280
is um how i would have programmed uh

00:07:17,599 --> 00:07:21,360
or implemented this differential

00:07:19,280 --> 00:07:22,000
equation solved it as it changes over

00:07:21,360 --> 00:07:24,080
time

00:07:22,000 --> 00:07:25,759
using a fortran style program what i did

00:07:24,080 --> 00:07:27,759
i just went to the internet and

00:07:25,759 --> 00:07:29,599
went through a bunch of really great

00:07:27,759 --> 00:07:31,360
works where people have implemented a

00:07:29,599 --> 00:07:34,479
lot of volterra equations and

00:07:31,360 --> 00:07:35,840
showing how to do it now this is

00:07:34,479 --> 00:07:37,120
perfectly fine it's the kind of code i

00:07:35,840 --> 00:07:40,639
would have written 20 years ago when i

00:07:37,120 --> 00:07:40,639
started scientific programming

00:07:40,880 --> 00:07:45,120
but in some ways you know it's not going

00:07:42,880 --> 00:07:46,800
to help me go into the next step

00:07:45,120 --> 00:07:49,039
i'll show you what the problems are now

00:07:46,800 --> 00:07:51,440
i'm looking back at this you know after

00:07:49,039 --> 00:07:53,440
10 15 years of python programming and i

00:07:51,440 --> 00:07:55,199
see how i could have improved it

00:07:53,440 --> 00:07:56,639
so one of the issues obviously with this

00:07:55,199 --> 00:07:58,800
kind of code is

00:07:56,639 --> 00:07:59,919
that all these variables are declared on

00:07:58,800 --> 00:08:02,400
the global scope

00:07:59,919 --> 00:08:04,639
right that makes it really hard to do

00:08:02,400 --> 00:08:07,440
any consistent checking

00:08:04,639 --> 00:08:11,039
and also the variables you can't really

00:08:07,440 --> 00:08:13,120
reuse them in any meaningful way

00:08:11,039 --> 00:08:14,720
um another issue i have with this uh

00:08:13,120 --> 00:08:17,120
kind of code is that

00:08:14,720 --> 00:08:18,479
um you know you're trying to calculate

00:08:17,120 --> 00:08:19,840
these differential equations and

00:08:18,479 --> 00:08:20,960
calculate them over time and you're

00:08:19,840 --> 00:08:23,919
going to do a lot of

00:08:20,960 --> 00:08:25,599
looping there it is there's a main loop

00:08:23,919 --> 00:08:26,240
and and you actually have to write these

00:08:25,599 --> 00:08:28,160
equations

00:08:26,240 --> 00:08:30,160
now the way they've done it here is

00:08:28,160 --> 00:08:31,680
they've actually embedded the looping

00:08:30,160 --> 00:08:32,240
the calculations of the times and the

00:08:31,680 --> 00:08:34,959
differential

00:08:32,240 --> 00:08:36,719
equations all into one block what that

00:08:34,959 --> 00:08:39,760
means is you make one mistake

00:08:36,719 --> 00:08:41,200
that in this one place and it could and

00:08:39,760 --> 00:08:42,800
it's going to cause problems all these

00:08:41,200 --> 00:08:45,839
other steps there's really no

00:08:42,800 --> 00:08:48,240
isolation of concerns

00:08:45,839 --> 00:08:49,600
right another issue i had with this kind

00:08:48,240 --> 00:08:50,480
of code which is the kind of mistakes i

00:08:49,600 --> 00:08:53,200
used to make is

00:08:50,480 --> 00:08:54,399
uh i would plot the things directly

00:08:53,200 --> 00:08:56,080
using code

00:08:54,399 --> 00:08:57,839
and you can see from this here that's

00:08:56,080 --> 00:09:01,279
using uh the matplotlib

00:08:57,839 --> 00:09:03,680
library um i have a certain

00:09:01,279 --> 00:09:04,640
i've used my potlib a lot and have a

00:09:03,680 --> 00:09:06,240
certain

00:09:04,640 --> 00:09:08,640
love-hate relationship with it because i

00:09:06,240 --> 00:09:10,000
believe it's technically a fantastic

00:09:08,640 --> 00:09:13,440
package of what it can do

00:09:10,000 --> 00:09:14,720
but the apri is really terrible um

00:09:13,440 --> 00:09:16,480
when you have when you're forced to

00:09:14,720 --> 00:09:20,080
write code like this it makes it

00:09:16,480 --> 00:09:23,200
really really hard to make changes

00:09:20,080 --> 00:09:25,040
okay so uh so these are

00:09:23,200 --> 00:09:26,480
just some of the issues i've had with um

00:09:25,040 --> 00:09:27,920
this kind of code i've written them in

00:09:26,480 --> 00:09:30,800
the past

00:09:27,920 --> 00:09:31,440
and one of my side projects was can i

00:09:30,800 --> 00:09:32,640
take

00:09:31,440 --> 00:09:35,040
some of the things i've learned in

00:09:32,640 --> 00:09:37,040
python create a package

00:09:35,040 --> 00:09:38,320
that would allow me to rewrite these

00:09:37,040 --> 00:09:40,560
kind of models in a much

00:09:38,320 --> 00:09:42,640
easier way and so i've created this

00:09:40,560 --> 00:09:45,920
package for model drop

00:09:42,640 --> 00:09:47,600
it's actually it's actually evolved

00:09:45,920 --> 00:09:49,120
several times and i've tried different

00:09:47,600 --> 00:09:50,640
pieces of technology and hopefully i'll

00:09:49,120 --> 00:09:53,760
talk about

00:09:50,640 --> 00:09:55,040
the kind of technologies that um i'm

00:09:53,760 --> 00:09:58,399
going to use

00:09:55,040 --> 00:10:01,519
so i know this is a blast of code but

00:09:58,399 --> 00:10:01,839
hopefully you'll see that this code is

00:10:01,519 --> 00:10:05,040
all

00:10:01,839 --> 00:10:08,880
that i need to do to recreate

00:10:05,040 --> 00:10:08,880
the locta volterra equations

00:10:08,959 --> 00:10:12,640
so what i've done is i've created a base

00:10:11,200 --> 00:10:14,560
model

00:10:12,640 --> 00:10:17,279
which does all the heavy lifting and

00:10:14,560 --> 00:10:19,279
then the rest of it you can just declare

00:10:17,279 --> 00:10:20,880
all the things you need for the solving

00:10:19,279 --> 00:10:22,880
of equations

00:10:20,880 --> 00:10:24,640
and then you can just let the model and

00:10:22,880 --> 00:10:26,640
do all the hard work

00:10:24,640 --> 00:10:28,959
so it's actually you know very uh what i

00:10:26,640 --> 00:10:31,440
call a declarative style of programming

00:10:28,959 --> 00:10:32,880
that means that when you come up and set

00:10:31,440 --> 00:10:34,640
up model you just have to think about

00:10:32,880 --> 00:10:37,200
the constants and you just shove it into

00:10:34,640 --> 00:10:38,640
this dictionary call it a parameter

00:10:37,200 --> 00:10:40,720
that way you can collect all the things

00:10:38,640 --> 00:10:41,680
you need in one place and you can reuse

00:10:40,720 --> 00:10:45,360
this and i'll show you how

00:10:41,680 --> 00:10:48,640
you reuse it later um another thing too

00:10:45,360 --> 00:10:50,320
is um as you set up the equations you go

00:10:48,640 --> 00:10:52,160
okay so these are the parameters i might

00:10:50,320 --> 00:10:52,800
want to use in my equation these are the

00:10:52,160 --> 00:10:55,360
actual

00:10:52,800 --> 00:10:56,240
populations of the i'm on i want to set

00:10:55,360 --> 00:10:58,000
a track

00:10:56,240 --> 00:10:59,680
and i put it into a dictionary called

00:10:58,000 --> 00:11:01,680
variables um

00:10:59,680 --> 00:11:03,440
and then the differentials is the

00:11:01,680 --> 00:11:04,399
changes i call it divine i put it in

00:11:03,440 --> 00:11:05,920
predator

00:11:04,399 --> 00:11:07,600
now in this particular case i can

00:11:05,920 --> 00:11:10,079
actually look up the strings

00:11:07,600 --> 00:11:13,360
and check if they match or if they exist

00:11:10,079 --> 00:11:16,560
i can do consistency checks

00:11:13,360 --> 00:11:19,040
um okay so uh

00:11:16,560 --> 00:11:20,399
i believe um one thing i want to do is

00:11:19,040 --> 00:11:22,720
like

00:11:20,399 --> 00:11:24,240
allow myself to write the code in a way

00:11:22,720 --> 00:11:26,560
that's readable and

00:11:24,240 --> 00:11:27,839
this is a bit of a subjective thing uh

00:11:26,560 --> 00:11:28,880
so in the old days when i was a

00:11:27,839 --> 00:11:31,920
scientific programmer

00:11:28,880 --> 00:11:33,600
my main aim is to reproduce

00:11:31,920 --> 00:11:35,839
what i might see in a printed equation

00:11:33,600 --> 00:11:37,120
so this is the log to voltaire equation

00:11:35,839 --> 00:11:39,040
and this is

00:11:37,120 --> 00:11:40,399
the form that was used in the fortran

00:11:39,040 --> 00:11:42,959
style code and you can see

00:11:40,399 --> 00:11:44,399
that there's the minus c y minus c y e x

00:11:42,959 --> 00:11:46,560
y now the problem is

00:11:44,399 --> 00:11:47,839
if uh if you read clean code and good

00:11:46,560 --> 00:11:49,600
programming practices

00:11:47,839 --> 00:11:51,519
this kind of programming for someone

00:11:49,600 --> 00:11:53,760
who's not absolutely familiar with the

00:11:51,519 --> 00:11:56,320
math is actually really confusing

00:11:53,760 --> 00:11:57,920
so the way i've written that using model

00:11:56,320 --> 00:12:00,000
drop i would expanded that into this

00:11:57,920 --> 00:12:01,920
much larger term

00:12:00,000 --> 00:12:03,519
at first blush it looks like it's a lot

00:12:01,920 --> 00:12:06,160
more work

00:12:03,519 --> 00:12:07,279
but you can actually see that collecting

00:12:06,160 --> 00:12:09,200
it in dictionaries

00:12:07,279 --> 00:12:11,040
it's kind of like a type it's actually

00:12:09,200 --> 00:12:11,680
collecting as type information i can

00:12:11,040 --> 00:12:14,399
actually

00:12:11,680 --> 00:12:16,399
track my own mistakes as i make it and i

00:12:14,399 --> 00:12:18,560
believe that you can actually see by

00:12:16,399 --> 00:12:20,399
meaningful variable names that they're

00:12:18,560 --> 00:12:24,399
related

00:12:20,399 --> 00:12:26,800
okay so another thing i wanted to do

00:12:24,399 --> 00:12:28,880
was um separate all the different steps

00:12:26,800 --> 00:12:29,839
of the calculation initializing the

00:12:28,880 --> 00:12:31,920
variables

00:12:29,839 --> 00:12:33,440
calculating the changes put them in

00:12:31,920 --> 00:12:35,600
different methods

00:12:33,440 --> 00:12:36,560
this is this actually helps me manage

00:12:35,600 --> 00:12:40,079
the complexity

00:12:36,560 --> 00:12:42,079
but more importantly once i was able to

00:12:40,079 --> 00:12:43,360
package the differential calculation

00:12:42,079 --> 00:12:46,720
into a method i can actually

00:12:43,360 --> 00:12:49,920
repackage that into a function

00:12:46,720 --> 00:12:52,639
and then pass it to psi pi

00:12:49,920 --> 00:12:54,079
why that is important was that in an

00:12:52,639 --> 00:12:55,760
early incarnation of this package i

00:12:54,079 --> 00:12:56,800
tried to do the integration myself and

00:12:55,760 --> 00:12:59,440
it wasn't good enough

00:12:56,800 --> 00:13:01,040
my math is just not good enough but by

00:12:59,440 --> 00:13:03,200
being able to repackage it and put it

00:13:01,040 --> 00:13:06,720
into a function and send it to pi psi pi

00:13:03,200 --> 00:13:08,480
i can use psi pi put it through numpy

00:13:06,720 --> 00:13:10,320
and then send it to a third-party

00:13:08,480 --> 00:13:11,839
library which is packaged with scipy

00:13:10,320 --> 00:13:15,760
it's called odent

00:13:11,839 --> 00:13:17,680
it's actually a fortran library that's

00:13:15,760 --> 00:13:20,399
that's actually built oh that's actually

00:13:17,680 --> 00:13:22,399
incorporated in scipy one thing i've

00:13:20,399 --> 00:13:24,000
learned is if odent can't integrate it

00:13:22,399 --> 00:13:25,200
you probably can't integrate you

00:13:24,000 --> 00:13:28,320
probably can't integrate it

00:13:25,200 --> 00:13:30,079
because it's actually cap ode is a 40

00:13:28,320 --> 00:13:33,440
year old fortran library that's been

00:13:30,079 --> 00:13:37,440
tested to the nth degree

00:13:33,440 --> 00:13:39,519
right so at this point

00:13:37,440 --> 00:13:41,120
i've implemented my octave altera

00:13:39,519 --> 00:13:43,120
equation i produce a

00:13:41,120 --> 00:13:44,399
bunch of numbers what i do with it i

00:13:43,120 --> 00:13:47,279
actually want to see it

00:13:44,399 --> 00:13:48,320
and i want to play with equations so

00:13:47,279 --> 00:13:50,399
what i found

00:13:48,320 --> 00:13:51,440
uh recently i was uh i was actually

00:13:50,399 --> 00:13:53,760
tasked at work to

00:13:51,440 --> 00:13:55,760
learn how to use dash and i love it what

00:13:53,760 --> 00:13:58,320
dash does it actually wraps

00:13:55,760 --> 00:14:00,000
javascript you know a whole whole subset

00:13:58,320 --> 00:14:01,760
of react into python

00:14:00,000 --> 00:14:03,040
and i can write python code and create a

00:14:01,760 --> 00:14:04,560
ui

00:14:03,040 --> 00:14:06,160
and at the same time i can use plotly

00:14:04,560 --> 00:14:07,839
and generate graphs

00:14:06,160 --> 00:14:09,279
um i won't go into that very much i

00:14:07,839 --> 00:14:11,279
think a lot of you guys have looked at

00:14:09,279 --> 00:14:13,839
it and there's been other great talks

00:14:11,279 --> 00:14:16,079
what i want to show you is uh i've

00:14:13,839 --> 00:14:18,880
actually created a scaffolding so

00:14:16,079 --> 00:14:19,440
in my model to actually set up a plotly

00:14:18,880 --> 00:14:21,839
plot

00:14:19,440 --> 00:14:22,959
all you have to do is oops all you have

00:14:21,839 --> 00:14:25,199
to do is

00:14:22,959 --> 00:14:26,079
add this little dictionary here add some

00:14:25,199 --> 00:14:28,000
markdown

00:14:26,079 --> 00:14:29,360
give it a title and this is where

00:14:28,000 --> 00:14:30,560
collecting variables

00:14:29,360 --> 00:14:32,639
all the variables together is really

00:14:30,560 --> 00:14:34,320
useful i can just use a string and

00:14:32,639 --> 00:14:34,959
indicate what variables i want to show

00:14:34,320 --> 00:14:36,800
my plot

00:14:34,959 --> 00:14:38,160
i don't have to think anymore i've

00:14:36,800 --> 00:14:41,519
delegated that to the

00:14:38,160 --> 00:14:42,240
to the model and then to know what kind

00:14:41,519 --> 00:14:43,760
of

00:14:42,240 --> 00:14:45,279
things i want to tweak in the model i

00:14:43,760 --> 00:14:48,720
just have to literally list all the

00:14:45,279 --> 00:14:51,920
parameters i would like to change

00:14:48,720 --> 00:14:53,519
right so i've set it all up i pass it

00:14:51,920 --> 00:14:55,519
through an adapter

00:14:53,519 --> 00:14:58,320
this adapter is running dash it's

00:14:55,519 --> 00:15:01,120
actually a flask web server

00:14:58,320 --> 00:15:02,959
and and then uh well i'm going to live

00:15:01,120 --> 00:15:04,959
demo the software just before i do that

00:15:02,959 --> 00:15:07,680
i'll show you why i all did all this

00:15:04,959 --> 00:15:07,680
here's some data

00:15:08,160 --> 00:15:11,279
and then here's the um here's the dash

00:15:10,720 --> 00:15:13,839
rendered

00:15:11,279 --> 00:15:14,959
model so there's there's a markdown with

00:15:13,839 --> 00:15:19,199
equations

00:15:14,959 --> 00:15:21,519
and here is the results of the model so

00:15:19,199 --> 00:15:23,680
in the blue we see the populations of

00:15:21,519 --> 00:15:25,120
the predator rise in the orange we see

00:15:23,680 --> 00:15:28,240
the populations of the prey

00:15:25,120 --> 00:15:30,560
drop and the prey all die

00:15:28,240 --> 00:15:31,600
and the predator all dies and there

00:15:30,560 --> 00:15:33,360
we've replicated

00:15:31,600 --> 00:15:35,120
in this equation the data from the

00:15:33,360 --> 00:15:38,000
hudson bay company's uh

00:15:35,120 --> 00:15:40,480
biological study um now what's really

00:15:38,000 --> 00:15:41,759
great is i can now tweak things what if

00:15:40,480 --> 00:15:44,399
the prey grew

00:15:41,759 --> 00:15:45,920
a little bit faster oh okay so you can

00:15:44,399 --> 00:15:49,680
actually support

00:15:45,920 --> 00:15:51,360
a larger predator population what if

00:15:49,680 --> 00:15:52,720
the predator was a little bit more

00:15:51,360 --> 00:15:55,279
efficient

00:15:52,720 --> 00:15:56,959
oh it actually means if the predator's

00:15:55,279 --> 00:15:58,720
uh predation rate if they

00:15:56,959 --> 00:16:01,120
if they hunt them a little bit faster

00:15:58,720 --> 00:16:03,600
the actual um predator population drops

00:16:01,120 --> 00:16:05,360
anyway so what that means is i can now

00:16:03,600 --> 00:16:06,000
tweak the parameters here and see the

00:16:05,360 --> 00:16:09,839
results

00:16:06,000 --> 00:16:12,959
on the side

00:16:09,839 --> 00:16:15,440
okay so that was the first model

00:16:12,959 --> 00:16:16,079
i've described model drop a way for me

00:16:15,440 --> 00:16:17,519
to sort of

00:16:16,079 --> 00:16:20,079
look at models and now i'm going to go

00:16:17,519 --> 00:16:22,720
through some of my favorite models and

00:16:20,079 --> 00:16:24,720
show how using model drop and the dash

00:16:22,720 --> 00:16:27,040
ui i can actually start

00:16:24,720 --> 00:16:28,959
demonstrating very clearly some of these

00:16:27,040 --> 00:16:30,320
models that exist in the world

00:16:28,959 --> 00:16:32,959
so i'm going to look at the what's

00:16:30,320 --> 00:16:35,440
called sir epidemiology model and

00:16:32,959 --> 00:16:38,160
underlies the mathematics of how the

00:16:35,440 --> 00:16:40,959
common cold spreads for instance

00:16:38,160 --> 00:16:42,320
and i'm going to go to this page and

00:16:40,959 --> 00:16:45,279
i've got it set up

00:16:42,320 --> 00:16:46,959
here so the sir model is you have three

00:16:45,279 --> 00:16:48,959
populations of people you have the

00:16:46,959 --> 00:16:49,600
susceptible which is in blue you start

00:16:48,959 --> 00:16:51,199
off

00:16:49,600 --> 00:16:53,839
and then there's a small population

00:16:51,199 --> 00:16:55,759
orange which is infected with the cold

00:16:53,839 --> 00:16:57,199
and green is people who've got the cold

00:16:55,759 --> 00:16:59,199
and they're recovered and then they

00:16:57,199 --> 00:17:02,079
won't get sick anymore

00:16:59,199 --> 00:17:04,079
and so this very simple model is a sort

00:17:02,079 --> 00:17:07,120
of a basic model in all epidemiology

00:17:04,079 --> 00:17:09,919
textbooks it underlines covert uh

00:17:07,120 --> 00:17:11,199
it underlies um yeah i was working in

00:17:09,919 --> 00:17:14,000
tuberculosis lab

00:17:11,199 --> 00:17:16,079
and hiv so it's the same math that

00:17:14,000 --> 00:17:16,480
epidemiology and most epidemiologists

00:17:16,079 --> 00:17:19,520
use

00:17:16,480 --> 00:17:21,280
to model how a disease progresses now in

00:17:19,520 --> 00:17:22,720
this model you have to add in what's

00:17:21,280 --> 00:17:24,160
called the reproduction number and

00:17:22,720 --> 00:17:25,520
you've got to set it in by hand so i've

00:17:24,160 --> 00:17:29,200
got a set of three it means

00:17:25,520 --> 00:17:31,360
everyone who gets sick will eventually

00:17:29,200 --> 00:17:32,240
infect three people and as you can see

00:17:31,360 --> 00:17:35,440
if you

00:17:32,240 --> 00:17:37,840
bump up the reproduction number the

00:17:35,440 --> 00:17:38,799
dynamics of the population who gets sick

00:17:37,840 --> 00:17:42,000
and when they

00:17:38,799 --> 00:17:42,640
completely change and uh when we talk

00:17:42,000 --> 00:17:44,320
about

00:17:42,640 --> 00:17:46,640
in uh you know in the code of literature

00:17:44,320 --> 00:17:48,400
trying to get r to one

00:17:46,640 --> 00:17:50,160
less than one so when happens when you

00:17:48,400 --> 00:17:52,000
drop it less than one you can see

00:17:50,160 --> 00:17:53,600
the infections literally drop and the

00:17:52,000 --> 00:17:55,840
disease disperses and that

00:17:53,600 --> 00:17:58,320
that's what they mean when r is less

00:17:55,840 --> 00:17:58,320
than one

00:17:59,039 --> 00:18:02,799
okay so uh i'm just going to run through

00:18:01,840 --> 00:18:04,960
that very quickly

00:18:02,799 --> 00:18:06,080
so uh the next model i want to look at

00:18:04,960 --> 00:18:09,280
is uh

00:18:06,080 --> 00:18:13,679
economic modeling so in 2008 now we have

00:18:09,280 --> 00:18:15,679
the gsc the global financial crisis

00:18:13,679 --> 00:18:17,360
apparently a mainstream economist said

00:18:15,679 --> 00:18:20,000
no one could see this coming

00:18:17,360 --> 00:18:21,280
quoted by robert rubin former u.s uh

00:18:20,000 --> 00:18:24,320
treasury secretary

00:18:21,280 --> 00:18:25,760
but in fact you know uh late in 2009 the

00:18:24,320 --> 00:18:27,039
dutch academic actually went through

00:18:25,760 --> 00:18:30,240
literature and said there were actually

00:18:27,039 --> 00:18:32,880
11 academics who did predict

00:18:30,240 --> 00:18:34,559
the global financial crisis and they

00:18:32,880 --> 00:18:36,799
actually published and had reasoning

00:18:34,559 --> 00:18:38,240
and out of them one of them even had a

00:18:36,799 --> 00:18:39,600
dynamic population model

00:18:38,240 --> 00:18:41,520
just the kind of models that i like to

00:18:39,600 --> 00:18:43,280
look at this guy's name is steve keane i

00:18:41,520 --> 00:18:44,000
follow his let me find his work the

00:18:43,280 --> 00:18:46,480
years

00:18:44,000 --> 00:18:47,440
he's got a patreon account he's actually

00:18:46,480 --> 00:18:49,520
retired from

00:18:47,440 --> 00:18:51,840
academia and survives on patreon he's

00:18:49,520 --> 00:18:55,200
building beautiful models of the economy

00:18:51,840 --> 00:18:57,360
including using energy so it was a real

00:18:55,200 --> 00:18:58,960
dream of mine to be able to

00:18:57,360 --> 00:19:00,880
build and play around with this model

00:18:58,960 --> 00:19:05,520
and i finally did it after making

00:19:00,880 --> 00:19:08,000
model drop so in his model

00:19:05,520 --> 00:19:08,720
let me see so in his model you have

00:19:08,000 --> 00:19:11,919
basically

00:19:08,720 --> 00:19:14,559
three bunches of people you have workers

00:19:11,919 --> 00:19:15,440
in blue you have uh capitalists in

00:19:14,559 --> 00:19:18,559
orange

00:19:15,440 --> 00:19:20,799
and yeah bankers in green and he's got a

00:19:18,559 --> 00:19:24,080
very simple model using uh

00:19:20,799 --> 00:19:26,400
elegant dynamical restatements of

00:19:24,080 --> 00:19:27,679
macroeconomic identities and some

00:19:26,400 --> 00:19:29,520
psychological insights and

00:19:27,679 --> 00:19:31,280
in this graph what we have here is the

00:19:29,520 --> 00:19:33,440
share of the gdp

00:19:31,280 --> 00:19:35,280
over time and in this model he can

00:19:33,440 --> 00:19:37,039
reproduce what's the classic business

00:19:35,280 --> 00:19:40,960
cycle you know

00:19:37,039 --> 00:19:42,320
profits drop um so

00:19:40,960 --> 00:19:44,960
let me see if i can expand this out a

00:19:42,320 --> 00:19:48,720
little bit so the idea is over time

00:19:44,960 --> 00:19:50,799
uh wages get uh more workers get

00:19:48,720 --> 00:19:52,720
employed they get more money

00:19:50,799 --> 00:19:53,919
but then the capitalists lose money and

00:19:52,720 --> 00:19:55,360
then they invest less

00:19:53,919 --> 00:19:58,400
and then they employ less people and you

00:19:55,360 --> 00:19:59,200
get a business um sort of oscillation

00:19:58,400 --> 00:20:02,799
classic

00:19:59,200 --> 00:20:06,559
business cycle and at the same time uh

00:20:02,799 --> 00:20:08,000
as uh the bankers as uh things improve

00:20:06,559 --> 00:20:09,919
bank uh the capitalists who like to

00:20:08,000 --> 00:20:12,480
borrow money from bankers

00:20:09,919 --> 00:20:13,600
so the banking debt actually goes up and

00:20:12,480 --> 00:20:15,840
uh bankers

00:20:13,600 --> 00:20:16,880
the bankers uh income comes from

00:20:15,840 --> 00:20:20,480
interest payments from

00:20:16,880 --> 00:20:21,039
a massive debt so that's all nothing uh

00:20:20,480 --> 00:20:24,000
particularly

00:20:21,039 --> 00:20:24,000
special so um

00:20:24,159 --> 00:20:27,440
uh so i'm just gonna set the

00:20:25,280 --> 00:20:28,240
depreciation rate so if i was to do it

00:20:27,440 --> 00:20:29,760
like this and i

00:20:28,240 --> 00:20:32,000
expanded over time it always always

00:20:29,760 --> 00:20:32,880
stabilizes but what steve keane found

00:20:32,000 --> 00:20:34,480
was um

00:20:32,880 --> 00:20:37,039
if you adjust the depreciation rate

00:20:34,480 --> 00:20:38,960
which is capital is the amount of

00:20:37,039 --> 00:20:41,120
machinery and the capitalists have if

00:20:38,960 --> 00:20:42,880
you can actually expand its depreciation

00:20:41,120 --> 00:20:45,679
rate

00:20:42,880 --> 00:20:48,640
then you get this incredible oscillation

00:20:45,679 --> 00:20:51,679
where the system breaks down

00:20:48,640 --> 00:20:53,520
so what depreciation is basically your

00:20:51,679 --> 00:20:55,520
machinery actually gets old and has to

00:20:53,520 --> 00:20:56,080
be replaced so capitalists always have

00:20:55,520 --> 00:20:57,840
to be

00:20:56,080 --> 00:20:59,840
borrowing more money to replace the

00:20:57,840 --> 00:21:01,919
machines and so

00:20:59,840 --> 00:21:03,440
in 1995 steve keane actually observed

00:21:01,919 --> 00:21:04,960
something which uh it which is i think

00:21:03,440 --> 00:21:08,240
he's the only person who sort of

00:21:04,960 --> 00:21:08,960
um stated that in a in a dynamic mode of

00:21:08,240 --> 00:21:10,640
economy

00:21:08,960 --> 00:21:13,360
you get this effect where you have

00:21:10,640 --> 00:21:15,679
business cycles and it actually

00:21:13,360 --> 00:21:16,720
moderates and you have a quiet period

00:21:15,679 --> 00:21:19,120
and at some point the whole thing

00:21:16,720 --> 00:21:20,880
oscillates and then it causes a crash

00:21:19,120 --> 00:21:22,880
and the whole reason is i'm just going

00:21:20,880 --> 00:21:26,720
to skip down i don't have a lot of time

00:21:22,880 --> 00:21:30,880
left is that depth balloons

00:21:26,720 --> 00:21:35,039
out and it causes the oscillation

00:21:30,880 --> 00:21:35,440
okay so i'm going to skip to my very

00:21:35,039 --> 00:21:39,039
last

00:21:35,440 --> 00:21:42,240
model and this is uh the model by a

00:21:39,039 --> 00:21:43,600
a polymath by peter turchin 20 years ago

00:21:42,240 --> 00:21:45,600
he was probably the world's foremost

00:21:43,600 --> 00:21:48,320
population ecologist

00:21:45,600 --> 00:21:50,240
theoretical population ecologist wrote

00:21:48,320 --> 00:21:52,720
really fantastic textbooks on it

00:21:50,240 --> 00:21:54,400
and then he got bored he goes board of

00:21:52,720 --> 00:21:55,360
population ecology so what he decided to

00:21:54,400 --> 00:21:58,159
do was switch

00:21:55,360 --> 00:21:58,720
and apply these same methods to the

00:21:58,159 --> 00:22:02,480
study

00:21:58,720 --> 00:22:04,080
of the end of empires or imperial

00:22:02,480 --> 00:22:08,559
collapse and he started studying

00:22:04,080 --> 00:22:10,240
the roman empire chinese dynasties

00:22:08,559 --> 00:22:12,000
and he found there were certain models

00:22:10,240 --> 00:22:13,840
that he could use to

00:22:12,000 --> 00:22:16,320
understand its behavior and based on

00:22:13,840 --> 00:22:18,159
that he decided to apply it to

00:22:16,320 --> 00:22:21,200
the united states and he came up with a

00:22:18,159 --> 00:22:23,520
great paper in 2012

00:22:21,200 --> 00:22:25,360
where he integrated a whole bunch of

00:22:23,520 --> 00:22:27,200
sociological studies and historical

00:22:25,360 --> 00:22:29,200
studies to study the

00:22:27,200 --> 00:22:30,480
patterns of domestic violence in the

00:22:29,200 --> 00:22:32,799
united states and this is

00:22:30,480 --> 00:22:35,679
the graph i took from his paper i

00:22:32,799 --> 00:22:38,799
believe it's one of the most interesting

00:22:35,679 --> 00:22:41,520
data science graphs i've ever seen and

00:22:38,799 --> 00:22:42,960
and here it is and he you know he did a

00:22:41,520 --> 00:22:45,360
basic this you know all these

00:22:42,960 --> 00:22:46,960
regressions through transforms but i can

00:22:45,360 --> 00:22:48,320
just summarize what he found and i hope

00:22:46,960 --> 00:22:48,880
you can see this i think it's pretty

00:22:48,320 --> 00:22:51,919
clear

00:22:48,880 --> 00:22:55,120
there were two cycles of

00:22:51,919 --> 00:22:56,240
violence one is a 50-year cycle between

00:22:55,120 --> 00:23:01,440
00:22:56,240 --> 00:23:02,960
1920 1970 and the other 120 years cycle

00:23:01,440 --> 00:23:05,200
and in that paper he actually made a

00:23:02,960 --> 00:23:06,559
bold prediction in 2012 that 2020 will

00:23:05,200 --> 00:23:10,080
be the next

00:23:06,559 --> 00:23:13,280
peak of violence what i wanted to do was

00:23:10,080 --> 00:23:15,600
study the model that peter turchen made

00:23:13,280 --> 00:23:18,799
to understand this particular red curve

00:23:15,600 --> 00:23:20,960
which is 120 year cycle

00:23:18,799 --> 00:23:23,280
and i finally did it with model drop i

00:23:20,960 --> 00:23:25,280
actually had you know robust and python

00:23:23,280 --> 00:23:27,280
package and i implemented it

00:23:25,280 --> 00:23:29,120
and here it is the terchan elite

00:23:27,280 --> 00:23:30,080
demographic model it's a very simple

00:23:29,120 --> 00:23:32,559
model it's got

00:23:30,080 --> 00:23:34,240
three elements in the blue you have a

00:23:32,559 --> 00:23:37,360
bunch of producers that

00:23:34,240 --> 00:23:39,919
make all the food

00:23:37,360 --> 00:23:40,799
and orange you have a bunch of elites

00:23:39,919 --> 00:23:44,240
who take

00:23:40,799 --> 00:23:46,320
a big chunk of the food and uh

00:23:44,240 --> 00:23:47,840
and then what happens is with the elite

00:23:46,320 --> 00:23:49,520
if they don't have enough food they'll

00:23:47,840 --> 00:23:50,000
start fighting amongst themselves and in

00:23:49,520 --> 00:23:52,480
the green

00:23:50,000 --> 00:23:54,559
you have a state which improves the

00:23:52,480 --> 00:23:58,960
productivity capacity

00:23:54,559 --> 00:24:00,960
of um of the whole system or the state

00:23:58,960 --> 00:24:02,159
and it will also keep the elites from

00:24:00,960 --> 00:24:03,840
infighting

00:24:02,159 --> 00:24:05,279
and so he made this modern show it is

00:24:03,840 --> 00:24:06,400
natural you know in a lot of these

00:24:05,279 --> 00:24:09,600
parameters you have this

00:24:06,400 --> 00:24:10,320
rise and fall of the state and you have

00:24:09,600 --> 00:24:12,159
uh

00:24:10,320 --> 00:24:13,840
and you have elites growing and then

00:24:12,159 --> 00:24:14,799
they all fight and then all die off

00:24:13,840 --> 00:24:16,640
again

00:24:14,799 --> 00:24:20,000
and and then it starts off a quiet

00:24:16,640 --> 00:24:22,559
period so this model was the basis

00:24:20,000 --> 00:24:24,320
of the elite model and he had two really

00:24:22,559 --> 00:24:26,159
interesting observations

00:24:24,320 --> 00:24:28,080
one is i'm going to come to this graph

00:24:26,159 --> 00:24:29,120
which is green is the total production

00:24:28,080 --> 00:24:31,279
of this state

00:24:29,120 --> 00:24:33,360
it actually rises up here and then it

00:24:31,279 --> 00:24:36,880
all crashes

00:24:33,360 --> 00:24:39,279
um down but what happens is the producer

00:24:36,880 --> 00:24:39,919
you know they actually get less share of

00:24:39,279 --> 00:24:42,080
the food

00:24:39,919 --> 00:24:43,679
because elites take it and there's a

00:24:42,080 --> 00:24:46,720
crossing point where they at least take

00:24:43,679 --> 00:24:49,760
more than half the food this is actually

00:24:46,720 --> 00:24:52,480
implementing of our society as well

00:24:49,760 --> 00:24:53,679
but but what it means is even though the

00:24:52,480 --> 00:24:56,400
total production

00:24:53,679 --> 00:24:57,840
improves the share of it is unevenly

00:24:56,400 --> 00:25:00,080
distributed

00:24:57,840 --> 00:25:01,840
and the most surprising thing is if you

00:25:00,080 --> 00:25:03,760
actually divide by population the

00:25:01,840 --> 00:25:04,480
earnings amount of food that an elites

00:25:03,760 --> 00:25:07,600
get

00:25:04,480 --> 00:25:09,520
per person there's actually there's only

00:25:07,600 --> 00:25:12,080
a glory period a very short time and

00:25:09,520 --> 00:25:14,320
throughout the most of the period

00:25:12,080 --> 00:25:15,919
um the elite in general actually getting

00:25:14,320 --> 00:25:18,640
worse they're actually getting poorer

00:25:15,919 --> 00:25:21,679
until the actual bottom of the cycle

00:25:18,640 --> 00:25:23,200
so even though here you think the leaks

00:25:21,679 --> 00:25:24,400
are getting richer here actually in this

00:25:23,200 --> 00:25:24,960
part the elites are actually getting

00:25:24,400 --> 00:25:25,919
poorer

00:25:24,960 --> 00:25:27,919
and the whole idea is when they're

00:25:25,919 --> 00:25:30,400
getting poorer they get upset there's a

00:25:27,919 --> 00:25:31,919
whole population of upset or

00:25:30,400 --> 00:25:33,679
overproduction elites and they always

00:25:31,919 --> 00:25:36,559
destabilize the political

00:25:33,679 --> 00:25:38,880
system okay i'm coming towards the end

00:25:36,559 --> 00:25:40,720
i'm going to be cut off soon

00:25:38,880 --> 00:25:42,640
so i'm just going to wrap up here some

00:25:40,720 --> 00:25:44,240
of the final words um

00:25:42,640 --> 00:25:46,080
just want to say sometimes we look at

00:25:44,240 --> 00:25:47,760
our own particular models and we get a

00:25:46,080 --> 00:25:48,960
bit of a tunnel vision and we just look

00:25:47,760 --> 00:25:50,480
around what we're doing

00:25:48,960 --> 00:25:52,159
i think there's a lot of value in trying

00:25:50,480 --> 00:25:53,520
to sort of jump out

00:25:52,159 --> 00:25:56,640
and look at a couple other different

00:25:53,520 --> 00:26:00,000
models other systems

00:25:56,640 --> 00:26:02,000
and and tie it all together so with me

00:26:00,000 --> 00:26:03,520
i've looked at dynamic population models

00:26:02,000 --> 00:26:04,960
i think they're fantastic i think

00:26:03,520 --> 00:26:06,480
there's a lot more of them

00:26:04,960 --> 00:26:08,799
and i think there's a lot of value to be

00:26:06,480 --> 00:26:10,880
studied in in them

00:26:08,799 --> 00:26:12,480
and it's gonna say i built this uh

00:26:10,880 --> 00:26:13,120
package which i really i'm really proud

00:26:12,480 --> 00:26:14,640
of and

00:26:13,120 --> 00:26:16,400
it's really helped me look at these

00:26:14,640 --> 00:26:18,080
models and hopefully it helps you

00:26:16,400 --> 00:26:20,159
the final point i want to make is

00:26:18,080 --> 00:26:21,120
hopefully you'll realize that tweaking

00:26:20,159 --> 00:26:24,400
or being able to

00:26:21,120 --> 00:26:26,559
make these models and make changes uh

00:26:24,400 --> 00:26:28,400
really instantaneously will help bring

00:26:26,559 --> 00:26:32,159
insight into what is actually going

00:26:28,400 --> 00:26:32,159
on so with that thank you

00:26:34,559 --> 00:26:42,000
whoops thank you roscoe

00:26:39,200 --> 00:26:43,440
that was really excellent and i'm look

00:26:42,000 --> 00:26:45,600
i'm gonna just gonna have to watch this

00:26:43,440 --> 00:26:47,600
a couple more times this the stock kinda

00:26:45,600 --> 00:26:48,080
did exactly what i expected it to do and

00:26:47,600 --> 00:26:51,279
that was

00:26:48,080 --> 00:26:52,799
very interesting um

00:26:51,279 --> 00:26:54,640
i don't know that we've quite got time

00:26:52,799 --> 00:26:56,559
for questions so

00:26:54,640 --> 00:26:58,400
uh i'll let everybody ask them in

00:26:56,559 --> 00:27:01,840
venulis for you later

00:26:58,400 --> 00:27:01,840
okay and thank you

00:27:02,159 --> 00:27:05,360
thank you so much boss codes uh yeah

00:27:04,880 --> 00:27:07,200
that's a

00:27:05,360 --> 00:27:14,720
fascinating little romp through a whole

00:27:07,200 --> 00:27:14,720

YouTube URL: https://www.youtube.com/watch?v=2-it3crJYu0


