Title: "Cracking open the COVIDSafe" - Yaakov Smith (PyConline AU 2020)
Publication date: 2020-09-07
Playlist: PyConline AU 2020
Description: 
	Yaakov Smith

https://2020.pycon.org.au/program/URD9ER

As health authorities raced against the clock to restrict the spread of the Novel Coronavirus, bringing cities to a standstill, software developers too were racing to build a technological innovation. Their solution was ⁎✧˚₊ an app ༚⁎✧⁺  that would mystically allow you once again to go to the footy, hang out in pubs, return to work, and re-open the economy.

With the Australian Government running an unprecedented campaign to get as many people as possible to download their particular app, what this app actually does is still widely misunderstood. Furthermore, the app is somehow supposed to be safe and protect your privacy, whilst still being useful enough to track you and provide that information to medical contact tracers. How can that even work?

In this talk we will:
‹ul›
‹li›discover what contact-tracing is and why it is vital to curb the spread of the coronavirus‹/li›
‹li›explore how technology can be used to assist in the contact-tracing process‹/li›
‹li›analyze the COVIDSafe mobile apps for iOS and Android,‹/li›
‹li›discuss why you should, or shouldn’t, install COVIDSafe, and how contact-tracing apps try to balance personal security and privacy with the health needs of the greater community‹/li›
‹/ul›

Those who attend this talk will learn about bluetooth-assisted contact tracing, exposure notification, and the shiny new new COVID-19 settings on their mobile phone

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Fri Sep  4 09:50:00 2020 at Python 2
Captions: 
	00:00:05,120 --> 00:00:07,839
hi

00:00:05,600 --> 00:00:09,519
i'm yarkov in my day job i'm a senior

00:00:07,839 --> 00:00:10,960
software developer at wisetech global

00:00:09,519 --> 00:00:12,160
where we build the software that acts as

00:00:10,960 --> 00:00:13,200
the operating system for global

00:00:12,160 --> 00:00:14,639
logistics

00:00:13,200 --> 00:00:16,640
at other times i'm also a systems

00:00:14,639 --> 00:00:18,400
administrator for smash where we host an

00:00:16,640 --> 00:00:19,119
annual convention for all things anime

00:00:18,400 --> 00:00:20,480
and manga

00:00:19,119 --> 00:00:22,320
in years where there isn't a horrible

00:00:20,480 --> 00:00:24,480
dangerous pandemic

00:00:22,320 --> 00:00:26,080
but when back in april the australian

00:00:24,480 --> 00:00:27,439
government announced a new app

00:00:26,080 --> 00:00:28,880
one that they would position as a key

00:00:27,439 --> 00:00:30,000
requirement to lifting the lockdown

00:00:28,880 --> 00:00:31,679
restrictions and returning

00:00:30,000 --> 00:00:33,760
life to something vaguely representing

00:00:31,679 --> 00:00:35,440
normal it got my attention

00:00:33,760 --> 00:00:37,040
i have a bit of a history with with

00:00:35,440 --> 00:00:37,680
reverse engineering things that get my

00:00:37,040 --> 00:00:39,040
attention

00:00:37,680 --> 00:00:40,480
and last year i spent quite a bit of

00:00:39,040 --> 00:00:40,960
time breaking apart the new south wales

00:00:40,480 --> 00:00:43,040
government

00:00:40,960 --> 00:00:46,719
digital driver's license app so when

00:00:43,040 --> 00:00:46,719
coveted safe was released i thought

00:00:50,719 --> 00:00:54,320
well i guess that's worth a look and so

00:00:53,680 --> 00:00:55,680
it seems

00:00:54,320 --> 00:00:57,760
so did a large portion of the tech

00:00:55,680 --> 00:00:59,359
community just a few days later a bunch

00:00:57,760 --> 00:01:00,640
of high-profile techies held a panel

00:00:59,359 --> 00:01:02,480
discussion about the app

00:01:00,640 --> 00:01:03,840
after decompiling the android version

00:01:02,480 --> 00:01:05,760
and pretty much went yep

00:01:03,840 --> 00:01:07,840
it's all good and then immediately moved

00:01:05,760 --> 00:01:08,960
on those who stayed behind for a bit of

00:01:07,840 --> 00:01:10,560
a deeper examination

00:01:08,960 --> 00:01:12,240
started picking up on other significant

00:01:10,560 --> 00:01:13,920
security and privacy issues

00:01:12,240 --> 00:01:15,520
ranging all the way from a simple denial

00:01:13,920 --> 00:01:16,240
of service through to permanent tracking

00:01:15,520 --> 00:01:18,080
of users

00:01:16,240 --> 00:01:19,439
with an exploit that got a cve score of

00:01:18,080 --> 00:01:22,320
9.8 out of 10

00:01:19,439 --> 00:01:23,280
for just how critical it was so in the

00:01:22,320 --> 00:01:24,799
next 20 minutes

00:01:23,280 --> 00:01:26,799
let's have a look at contact tracing and

00:01:24,799 --> 00:01:27,840
bluetooth how it works and what it can

00:01:26,799 --> 00:01:29,680
and can't do

00:01:27,840 --> 00:01:31,280
we'll dig into the covert safe app a bit

00:01:29,680 --> 00:01:32,640
of its history and how it works

00:01:31,280 --> 00:01:35,119
and then look at some of the security

00:01:32,640 --> 00:01:36,960
and privacy issues past and present

00:01:35,119 --> 00:01:38,720
lastly we'll have a look at the exposure

00:01:36,960 --> 00:01:39,439
notification framework built by apple

00:01:38,720 --> 00:01:40,880
and google

00:01:39,439 --> 00:01:43,840
and how that's different from the system

00:01:40,880 --> 00:01:46,159
that the australian government has built

00:01:43,840 --> 00:01:47,439
but first a quick disclaimer despite

00:01:46,159 --> 00:01:49,040
having obtained my certificate of

00:01:47,439 --> 00:01:50,000
epidemiology from the twitter school of

00:01:49,040 --> 00:01:51,840
current affairs

00:01:50,000 --> 00:01:53,119
i'm absolutely not a medical expert in

00:01:51,840 --> 00:01:54,640
any way shape or form

00:01:53,119 --> 00:01:56,880
so take anything i see on the medical

00:01:54,640 --> 00:01:59,280
side with a grain of salt

00:01:56,880 --> 00:02:00,719
so let's start with contact tracing

00:01:59,280 --> 00:02:02,399
contact tracing is the practice of

00:02:00,719 --> 00:02:03,439
figuring out who has contracted an

00:02:02,399 --> 00:02:05,439
infectious disease

00:02:03,439 --> 00:02:07,040
and who they may have spread it to this

00:02:05,439 --> 00:02:08,560
is extremely critical when it comes to

00:02:07,040 --> 00:02:09,920
breaking the chain of transmission from

00:02:08,560 --> 00:02:12,400
person to person

00:02:09,920 --> 00:02:13,920
contact tracers or disease detectives as

00:02:12,400 --> 00:02:14,480
the australian officials like to call

00:02:13,920 --> 00:02:16,000
them

00:02:14,480 --> 00:02:17,840
do this by talking to people who've

00:02:16,000 --> 00:02:19,360
tested positive for coronavirus

00:02:17,840 --> 00:02:21,200
and then figuring out who they may have

00:02:19,360 --> 00:02:22,000
passed on to based on when they were

00:02:21,200 --> 00:02:23,760
contagious

00:02:22,000 --> 00:02:25,680
where they've been how and how close

00:02:23,760 --> 00:02:27,360
they were to other people and how likely

00:02:25,680 --> 00:02:29,040
they were to spread it

00:02:27,360 --> 00:02:31,120
essentially it's about getting ahead of

00:02:29,040 --> 00:02:32,160
the virus if we can find people who may

00:02:31,120 --> 00:02:34,480
have contracted it

00:02:32,160 --> 00:02:35,760
get them tested and isolate them to stop

00:02:34,480 --> 00:02:37,200
them spreading it further

00:02:35,760 --> 00:02:39,920
until we know that they either don't

00:02:37,200 --> 00:02:42,080
have the virus or don't have it anymore

00:02:39,920 --> 00:02:44,560
then we can severely limit how far the

00:02:42,080 --> 00:02:46,319
virus can reach across our communities

00:02:44,560 --> 00:02:48,800
this is why when you go to a restaurant

00:02:46,319 --> 00:02:51,440
synagogue hairdresser barbershop wedding

00:02:48,800 --> 00:02:52,720
wedding funeral house auction and more

00:02:51,440 --> 00:02:54,400
they need to take down the names and

00:02:52,720 --> 00:02:55,200
contact details of everybody who has

00:02:54,400 --> 00:02:56,800
attended

00:02:55,200 --> 00:02:58,560
if somebody who attends any of these

00:02:56,800 --> 00:02:59,680
high risk places tests positive in the

00:02:58,560 --> 00:03:01,599
days that follow

00:02:59,680 --> 00:03:03,599
contact tracers need to be able to pull

00:03:01,599 --> 00:03:05,840
up those lists and get anybody tested

00:03:03,599 --> 00:03:07,840
who they think is a close contact

00:03:05,840 --> 00:03:09,599
therefore contact tracing is extremely

00:03:07,840 --> 00:03:11,040
important though it's not entirely a

00:03:09,599 --> 00:03:12,959
preventative measure

00:03:11,040 --> 00:03:15,280
in a similar way that uptime monitoring

00:03:12,959 --> 00:03:17,040
might go hey one of your servers is down

00:03:15,280 --> 00:03:18,879
contact tracing also kicks in when it's

00:03:17,040 --> 00:03:20,879
too late when somebody already has

00:03:18,879 --> 00:03:22,560
coronavirus

00:03:20,879 --> 00:03:24,560
but if you distill contact tracing down

00:03:22,560 --> 00:03:25,360
to its core and then try to turn it into

00:03:24,560 --> 00:03:26,799
software

00:03:25,360 --> 00:03:28,480
it doesn't need to be a potentially

00:03:26,799 --> 00:03:29,840
privacy invasive process involving

00:03:28,480 --> 00:03:31,120
personal details

00:03:29,840 --> 00:03:33,040
it doesn't need to know exactly where

00:03:31,120 --> 00:03:34,319
you've been or how long you were there

00:03:33,040 --> 00:03:36,159
which can be a critical element of

00:03:34,319 --> 00:03:38,000
privacy for many people and their own

00:03:36,159 --> 00:03:39,760
personal threat models

00:03:38,000 --> 00:03:41,280
rather they only need to know who you

00:03:39,760 --> 00:03:43,599
are with at certain times

00:03:41,280 --> 00:03:45,360
and ideally in an anonymized manner so

00:03:43,599 --> 00:03:47,280
that they can be informed hey

00:03:45,360 --> 00:03:48,879
you might have contracted coronavirus

00:03:47,280 --> 00:03:50,080
but without knowing who they may have

00:03:48,879 --> 00:03:51,760
contracted it from

00:03:50,080 --> 00:03:55,200
and without you knowing directly who you

00:03:51,760 --> 00:03:57,040
may have given it to or vice versa

00:03:55,200 --> 00:03:58,879
so really what we need is just a way for

00:03:57,040 --> 00:04:01,280
people who you may have been in close

00:03:58,879 --> 00:04:02,560
contact with to be notified if you test

00:04:01,280 --> 00:04:04,159
positive

00:04:02,560 --> 00:04:06,080
while we could exchange personal

00:04:04,159 --> 00:04:06,720
personal details over a local secure

00:04:06,080 --> 00:04:09,200
channel

00:04:06,720 --> 00:04:10,239
that would require active participation

00:04:09,200 --> 00:04:12,400
and unfortunately

00:04:10,239 --> 00:04:13,599
people are lazy and as we've seen many

00:04:12,400 --> 00:04:14,640
aren't even taking the pandemic

00:04:13,599 --> 00:04:16,479
seriously

00:04:14,640 --> 00:04:18,000
asking everybody to actively keep a

00:04:16,479 --> 00:04:20,639
contact tracing diary

00:04:18,000 --> 00:04:22,160
is a big ask so we need a passive system

00:04:20,639 --> 00:04:23,919
which means we need some very strict

00:04:22,160 --> 00:04:25,520
privacy controls

00:04:23,919 --> 00:04:27,440
therefore if we're going to automate

00:04:25,520 --> 00:04:28,720
this consideration number one for

00:04:27,440 --> 00:04:31,040
privacy and security

00:04:28,720 --> 00:04:32,400
should be confidentiality none of us

00:04:31,040 --> 00:04:33,120
should be broadcasting our personal

00:04:32,400 --> 00:04:34,720
details

00:04:33,120 --> 00:04:36,080
and ideally we shouldn't even be

00:04:34,720 --> 00:04:37,360
carrying around on our phones an

00:04:36,080 --> 00:04:39,520
identifiable list

00:04:37,360 --> 00:04:41,759
of people we've been around recently

00:04:39,520 --> 00:04:43,919
that information should be confidential

00:04:41,759 --> 00:04:44,800
instead we need some kind of anonymized

00:04:43,919 --> 00:04:46,320
identifier

00:04:44,800 --> 00:04:49,120
that gets exchanged between people's

00:04:46,320 --> 00:04:50,000
devices our other major concern is

00:04:49,120 --> 00:04:51,840
tracking

00:04:50,000 --> 00:04:53,840
if somebody is broadcasting anonymized

00:04:51,840 --> 00:04:54,880
identifiers i shouldn't be able to use

00:04:53,840 --> 00:04:56,720
these to stalk them

00:04:54,880 --> 00:04:58,880
to figure out if they're home or not or

00:04:56,720 --> 00:05:00,080
to track their movements over time

00:04:58,880 --> 00:05:02,400
we've had enough problems with the

00:05:00,080 --> 00:05:03,919
advertising industry abusing static wifi

00:05:02,400 --> 00:05:04,960
and bluetooth mac addresses to follow

00:05:03,919 --> 00:05:06,320
people around

00:05:04,960 --> 00:05:08,479
and we shouldn't be able to breathe new

00:05:06,320 --> 00:05:10,639
life into this

00:05:08,479 --> 00:05:12,080
these are also both critical so that the

00:05:10,639 --> 00:05:13,520
public can have some confidence in the

00:05:12,080 --> 00:05:15,280
technology being used

00:05:13,520 --> 00:05:17,120
if they're afraid of it or is trusting

00:05:15,280 --> 00:05:19,440
of it then they won't use it and we may

00:05:17,120 --> 00:05:21,680
as well not have it at all

00:05:19,440 --> 00:05:23,280
so if we want to have a bunch of data

00:05:21,680 --> 00:05:25,360
exchanges between people

00:05:23,280 --> 00:05:27,199
we need a technology that can do this

00:05:25,360 --> 00:05:28,639
ideally one that is already present on a

00:05:27,199 --> 00:05:30,000
device that they carry around with them

00:05:28,639 --> 00:05:31,759
at all times

00:05:30,000 --> 00:05:33,440
and for this there's really no better

00:05:31,759 --> 00:05:34,960
choice than bluetooth

00:05:33,440 --> 00:05:36,720
there are two kinds of bluetooth

00:05:34,960 --> 00:05:37,759
bluetooth classic and bluetooth low

00:05:36,720 --> 00:05:39,440
energy

00:05:37,759 --> 00:05:41,280
bluetooth classic is the kind used to

00:05:39,440 --> 00:05:42,960
connect to your car's entertainment unit

00:05:41,280 --> 00:05:44,479
or your headphones or to share your

00:05:42,960 --> 00:05:46,800
internet connection with tethering

00:05:44,479 --> 00:05:48,560
and so on it uses a relatively large

00:05:46,800 --> 00:05:50,320
amount of power and is a general pain

00:05:48,560 --> 00:05:52,880
when it comes to pairing devices

00:05:50,320 --> 00:05:54,400
so that's not really our focus here the

00:05:52,880 --> 00:05:56,080
much more interesting one for this use

00:05:54,400 --> 00:05:57,759
case is bluetooth low energy

00:05:56,080 --> 00:05:59,120
which is designed for short occasional

00:05:57,759 --> 00:06:01,199
bursts of data

00:05:59,120 --> 00:06:02,800
there are four modes called roles that

00:06:01,199 --> 00:06:04,639
can operate it

00:06:02,800 --> 00:06:07,039
broadcast mode will simply broadcast

00:06:04,639 --> 00:06:08,800
some data to anybody that is listening

00:06:07,039 --> 00:06:11,199
observer mode is the opposite it

00:06:08,800 --> 00:06:13,280
passively listens for those broadcasts

00:06:11,199 --> 00:06:14,960
both of these modes are connectionless

00:06:13,280 --> 00:06:16,240
there is no active connection between

00:06:14,960 --> 00:06:18,479
the two phones

00:06:16,240 --> 00:06:20,080
think of it like bluetooth udp if you

00:06:18,479 --> 00:06:22,479
haven't heard of this before

00:06:20,080 --> 00:06:24,240
you might be an iphone developer as ios

00:06:22,479 --> 00:06:26,080
limits this for system use

00:06:24,240 --> 00:06:27,440
if you remember the ibeacons craze from

00:06:26,080 --> 00:06:29,120
about seven years ago

00:06:27,440 --> 00:06:30,800
those use these roles of bluetooth to

00:06:29,120 --> 00:06:32,639
operate

00:06:30,800 --> 00:06:34,000
the other two modes are central mode and

00:06:32,639 --> 00:06:35,759
peripheral mode

00:06:34,000 --> 00:06:37,840
a peripheral is a device that waits for

00:06:35,759 --> 00:06:39,919
incoming connections and a central is a

00:06:37,840 --> 00:06:41,840
device which connects to peripherals

00:06:39,919 --> 00:06:43,039
once two devices are connected they can

00:06:41,840 --> 00:06:45,759
exchange data using

00:06:43,039 --> 00:06:46,960
ga t or gatt the generic attribute

00:06:45,759 --> 00:06:49,199
profile

00:06:46,960 --> 00:06:50,639
if generic attribute profile sounds like

00:06:49,199 --> 00:06:52,960
an overly broad term

00:06:50,639 --> 00:06:54,800
that's because it is it's just a way to

00:06:52,960 --> 00:06:56,639
define how the devices can read and

00:06:54,800 --> 00:06:57,599
write arbitrarily addressable pieces of

00:06:56,639 --> 00:06:59,599
data

00:06:57,599 --> 00:07:00,880
in this structure a device can expose

00:06:59,599 --> 00:07:02,400
one or more services

00:07:00,880 --> 00:07:04,560
which in turn can contain one or more

00:07:02,400 --> 00:07:05,840
characteristics which contain the actual

00:07:04,560 --> 00:07:07,759
data

00:07:05,840 --> 00:07:09,599
for a concrete example of this you might

00:07:07,759 --> 00:07:10,560
have a raspberry pi that monitors the

00:07:09,599 --> 00:07:12,479
environment

00:07:10,560 --> 00:07:14,160
it might have an environmental sensing

00:07:12,479 --> 00:07:15,759
service or weather service

00:07:14,160 --> 00:07:18,639
which then exposes the temperature and

00:07:15,759 --> 00:07:20,240
humidity as two separate characteristics

00:07:18,639 --> 00:07:21,680
these particular characteristics would

00:07:20,240 --> 00:07:22,880
likely be read only

00:07:21,680 --> 00:07:24,800
unless you're the most sudden you can

00:07:22,880 --> 00:07:27,199
control the weather in which case they

00:07:24,800 --> 00:07:28,479
might be read bright

00:07:27,199 --> 00:07:30,000
the last thing we need to know about

00:07:28,479 --> 00:07:31,840
bluetooth before we move on is how

00:07:30,000 --> 00:07:33,199
bluetooth addresses work

00:07:31,840 --> 00:07:35,280
there are four types of bluetooth

00:07:33,199 --> 00:07:36,639
addresses but as far as we're concerned

00:07:35,280 --> 00:07:38,560
for consumer mobile phones

00:07:36,639 --> 00:07:40,080
there are only two the other two don't

00:07:38,560 --> 00:07:41,759
get used here

00:07:40,080 --> 00:07:43,840
the first one we need to know about is

00:07:41,759 --> 00:07:44,720
the public address also called a static

00:07:43,840 --> 00:07:46,560
address

00:07:44,720 --> 00:07:47,919
this is the hardware mac address that is

00:07:46,560 --> 00:07:49,280
baked into your device when it is

00:07:47,919 --> 00:07:51,199
manufactured

00:07:49,280 --> 00:07:52,879
the other is called a resolvable private

00:07:51,199 --> 00:07:54,479
address or rpa

00:07:52,879 --> 00:07:56,240
this is a second address that your phone

00:07:54,479 --> 00:07:57,759
uses to communicate and the only one

00:07:56,240 --> 00:07:59,440
that it advertises

00:07:57,759 --> 00:08:01,520
it changes periodically so that you

00:07:59,440 --> 00:08:02,800
become harder to track or stalk

00:08:01,520 --> 00:08:04,720
this is the kind of thing that helps

00:08:02,800 --> 00:08:06,000
prevent the advertising industry from

00:08:04,720 --> 00:08:07,520
tracking your movements all around

00:08:06,000 --> 00:08:09,599
shopping centers

00:08:07,520 --> 00:08:11,360
the resolvable private address is a

00:08:09,599 --> 00:08:14,000
function of the public address and an

00:08:11,360 --> 00:08:15,520
identity resolving key or irk

00:08:14,000 --> 00:08:17,280
your phones use both of these to

00:08:15,520 --> 00:08:19,199
generate a new private address

00:08:17,280 --> 00:08:20,400
this can also work in reverse if you

00:08:19,199 --> 00:08:22,879
know the public address

00:08:20,400 --> 00:08:24,240
and the irk you can tell if any private

00:08:22,879 --> 00:08:25,360
address belongs to that particular

00:08:24,240 --> 00:08:27,199
device or not

00:08:25,360 --> 00:08:28,639
this is why it's called resolvable it

00:08:27,199 --> 00:08:29,280
can be resolved back to the original

00:08:28,639 --> 00:08:32,560
address

00:08:29,280 --> 00:08:33,200
but only by paired devices during

00:08:32,560 --> 00:08:34,800
pairing

00:08:33,200 --> 00:08:36,719
or more technically a process called

00:08:34,800 --> 00:08:39,279
bonding two bluetooth devices will

00:08:36,719 --> 00:08:40,800
exchange their public addresses and irks

00:08:39,279 --> 00:08:43,360
that way they can always find each other

00:08:40,800 --> 00:08:45,360
in future this is how for example

00:08:43,360 --> 00:08:46,720
your car can connect your phone even

00:08:45,360 --> 00:08:48,959
though your phone keeps changing its

00:08:46,720 --> 00:08:50,640
bluetooth address

00:08:48,959 --> 00:08:52,800
so we have a public address that makes

00:08:50,640 --> 00:08:53,600
your identity public and a resolvable

00:08:52,800 --> 00:08:57,440
private address

00:08:53,600 --> 00:08:58,640
that helps to keep your identity private

00:08:57,440 --> 00:09:00,640
now that we know the basics of how

00:08:58,640 --> 00:09:01,839
bluetooth works let's have a look at how

00:09:00,640 --> 00:09:03,519
it was used

00:09:01,839 --> 00:09:05,279
we start back in march with trace

00:09:03,519 --> 00:09:06,560
together an app from the singapore

00:09:05,279 --> 00:09:08,399
government that is designed to do

00:09:06,560 --> 00:09:10,000
exposure notification

00:09:08,399 --> 00:09:11,440
i first heard about it from asher wolfe

00:09:10,000 --> 00:09:12,000
on twitter in the earlier days of the

00:09:11,440 --> 00:09:14,000
virus

00:09:12,000 --> 00:09:15,360
at least here in australia when there

00:09:14,000 --> 00:09:17,600
were two two apps

00:09:15,360 --> 00:09:19,200
starting to gain popularity private kit

00:09:17,600 --> 00:09:20,959
which i haven't heard of since

00:09:19,200 --> 00:09:22,320
and traced together which was later

00:09:20,959 --> 00:09:23,839
published as open trace

00:09:22,320 --> 00:09:25,839
and a copy of the code was given to the

00:09:23,839 --> 00:09:27,200
australian government

00:09:25,839 --> 00:09:29,519
the australian government seemed to

00:09:27,200 --> 00:09:31,360
absolutely fall in love with this app

00:09:29,519 --> 00:09:33,440
and quickly rebranded it for australian

00:09:31,360 --> 00:09:35,839
use scott morrison said

00:09:33,440 --> 00:09:37,279
that the app now called curved safe was

00:09:35,839 --> 00:09:39,200
like sunscreen

00:09:37,279 --> 00:09:40,560
you know downloading the app is like

00:09:39,200 --> 00:09:42,959
putting on sunscreen

00:09:40,560 --> 00:09:43,680
to go out into the sun it gives us

00:09:42,959 --> 00:09:45,760
protection

00:09:43,680 --> 00:09:46,720
as a nation it protects you it protects

00:09:45,760 --> 00:09:48,399
your family

00:09:46,720 --> 00:09:50,160
it protects your loved ones it protects

00:09:48,399 --> 00:09:53,120
our health workers

00:09:50,160 --> 00:09:54,080
and it protects your job sure scott but

00:09:53,120 --> 00:09:56,399
only

00:09:54,080 --> 00:09:57,120
maybe if it works and initially it

00:09:56,399 --> 00:09:58,959
didn't

00:09:57,120 --> 00:10:00,720
although the department department

00:09:58,959 --> 00:10:02,160
responsible for the app the digital

00:10:00,720 --> 00:10:05,680
transformation agency

00:10:02,160 --> 00:10:07,839
made this claim to the senate this is

00:10:05,680 --> 00:10:11,279
uh implemented in a way that reaches the

00:10:07,839 --> 00:10:14,320
broadest range of the community

00:10:11,279 --> 00:10:15,040
in the in the shortest time possible

00:10:14,320 --> 00:10:17,440
with the

00:10:15,040 --> 00:10:18,160
best protections for privacy security

00:10:17,440 --> 00:10:19,519
and

00:10:18,160 --> 00:10:21,200
delivering the best functionality

00:10:19,519 --> 00:10:23,360
possible yet there were still

00:10:21,200 --> 00:10:24,800
numerous issues with it so let's start

00:10:23,360 --> 00:10:27,360
by having a look at how this app

00:10:24,800 --> 00:10:29,040
actually works

00:10:27,360 --> 00:10:30,560
we explained before how gatt allows

00:10:29,040 --> 00:10:32,800
bluetooth devices to connect to each

00:10:30,560 --> 00:10:34,959
other and share data and covertsafe uses

00:10:32,800 --> 00:10:36,640
this to exchange information

00:10:34,959 --> 00:10:38,320
essentially covert safe's first

00:10:36,640 --> 00:10:40,079
bluetooth protocol was simply minor

00:10:38,320 --> 00:10:42,000
changes on top of opentrace

00:10:40,079 --> 00:10:43,120
it ran the phone in both central and

00:10:42,000 --> 00:10:44,720
peripheral roles

00:10:43,120 --> 00:10:46,880
but it used a different gatt

00:10:44,720 --> 00:10:48,720
characteristic id to open trace

00:10:46,880 --> 00:10:50,640
so that open trace and covert safe would

00:10:48,720 --> 00:10:52,480
never see each other

00:10:50,640 --> 00:10:54,399
then when a covert safer central

00:10:52,480 --> 00:10:55,839
discovers a covert safe peripheral

00:10:54,399 --> 00:10:58,160
they exchange data by reading and

00:10:55,839 --> 00:11:00,160
writing adjacent value to each other

00:10:58,160 --> 00:11:02,079
your phone stores this value and if you

00:11:00,160 --> 00:11:04,160
test positive you can choose to upload

00:11:02,079 --> 00:11:07,120
your list of stored values to the server

00:11:04,160 --> 00:11:08,880
for contact traces to use the main thing

00:11:07,120 --> 00:11:11,360
contained in this json is a temporary

00:11:08,880 --> 00:11:12,640
anonymous identifier known as a temp id

00:11:11,360 --> 00:11:14,959
that has been assigned to you by the

00:11:12,640 --> 00:11:16,720
backend service this is supposed to

00:11:14,959 --> 00:11:17,680
change every two hours to make it harder

00:11:16,720 --> 00:11:19,839
to track you

00:11:17,680 --> 00:11:21,360
and only the backend servers that is the

00:11:19,839 --> 00:11:21,920
contact traces at the department of

00:11:21,360 --> 00:11:24,640
health

00:11:21,920 --> 00:11:26,399
can match this back to an actual person

00:11:24,640 --> 00:11:28,480
it also contained your phone's model and

00:11:26,399 --> 00:11:30,000
your signal strength the idea behind

00:11:28,480 --> 00:11:31,279
this is that since every phone has a

00:11:30,000 --> 00:11:32,959
different bluetooth chip

00:11:31,279 --> 00:11:34,320
if you can combine the phone model with

00:11:32,959 --> 00:11:35,839
the bluetooth signal strength

00:11:34,320 --> 00:11:37,360
then you can try and derive a distance

00:11:35,839 --> 00:11:38,959
reading from that signal strength

00:11:37,360 --> 00:11:40,560
and figure out how far apart the phones

00:11:38,959 --> 00:11:41,920
were

00:11:40,560 --> 00:11:43,680
aside from the fact that bluetooth

00:11:41,920 --> 00:11:45,839
signal strength readings are unreliable

00:11:43,680 --> 00:11:46,560
as a proxy for distance even at the best

00:11:45,839 --> 00:11:48,079
of times

00:11:46,560 --> 00:11:50,880
there were two big problems with this

00:11:48,079 --> 00:11:52,560
the the dta later addressed

00:11:50,880 --> 00:11:54,800
the first is that exposing your phone

00:11:52,560 --> 00:11:56,720
model can make you a lot easier to track

00:11:54,800 --> 00:11:58,639
if you have the only iphone 7 plus in

00:11:56,720 --> 00:12:00,079
the room then it makes no difference how

00:11:58,639 --> 00:12:02,320
frequently your bluetooth address

00:12:00,079 --> 00:12:03,120
or your temp id changes you still stand

00:12:02,320 --> 00:12:06,000
out like a sore

00:12:03,120 --> 00:12:08,000
thumb the other one is that the dta seem

00:12:06,000 --> 00:12:08,639
to be completely unable to actually make

00:12:08,000 --> 00:12:10,880
the template

00:12:08,639 --> 00:12:13,360
rotate on a two-hourly basis or near

00:12:10,880 --> 00:12:15,440
enough the code was

00:12:13,360 --> 00:12:16,480
inadequate at best and would probably be

00:12:15,440 --> 00:12:19,120
better described as

00:12:16,480 --> 00:12:20,000
shocking the ios version and the android

00:12:19,120 --> 00:12:22,240
version of the app

00:12:20,000 --> 00:12:23,440
were wildly inconsistent with each other

00:12:22,240 --> 00:12:25,760
and the dta

00:12:23,440 --> 00:12:26,959
well they basically gave up on fixing

00:12:25,760 --> 00:12:28,560
that

00:12:26,959 --> 00:12:30,240
so they introduced version two of the

00:12:28,560 --> 00:12:31,200
protocol which adds encryption to the

00:12:30,240 --> 00:12:33,120
messages

00:12:31,200 --> 00:12:35,040
this time around the app generates a new

00:12:33,120 --> 00:12:36,160
symmetric encryption key every seven and

00:12:35,040 --> 00:12:37,760
a half minutes

00:12:36,160 --> 00:12:39,839
it encrypts the version one payload with

00:12:37,760 --> 00:12:41,279
this key and then encrypts this key with

00:12:39,839 --> 00:12:42,720
the dta's public key

00:12:41,279 --> 00:12:44,639
so that only the back end can ever

00:12:42,720 --> 00:12:46,480
decrypt it

00:12:44,639 --> 00:12:48,560
so on the surface this doesn't sound too

00:12:46,480 --> 00:12:49,680
bad and it sort of sounds like it does

00:12:48,560 --> 00:12:51,600
its job

00:12:49,680 --> 00:12:53,360
so now let's have a look at what went

00:12:51,600 --> 00:12:54,800
wrong

00:12:53,360 --> 00:12:56,720
when covert safe launched on the app

00:12:54,800 --> 00:12:58,560
store in google play it received an

00:12:56,720 --> 00:13:00,160
absolutely huge amount of marketing to

00:12:58,560 --> 00:13:01,920
encourage people to download it

00:13:00,160 --> 00:13:03,600
both from the government as well as from

00:13:01,920 --> 00:13:05,360
private corporations

00:13:03,600 --> 00:13:07,519
probably the one that has aged the worst

00:13:05,360 --> 00:13:08,000
is a radio interview on 2gb with rachel

00:13:07,519 --> 00:13:10,079
faulk

00:13:08,000 --> 00:13:11,120
the ceo of the cybersecurity cooperative

00:13:10,079 --> 00:13:13,760
research center

00:13:11,120 --> 00:13:15,120
who said this well without going to

00:13:13,760 --> 00:13:16,720
detail we're certainly with

00:13:15,120 --> 00:13:18,959
the australian signals directorate and

00:13:16,720 --> 00:13:21,920
the australian cyber security centre

00:13:18,959 --> 00:13:23,120
and dta we worked over three to four

00:13:21,920 --> 00:13:25,120
days day and night in

00:13:23,120 --> 00:13:27,040
shifts but like all um apps and

00:13:25,120 --> 00:13:27,680
development you find glitches you find

00:13:27,040 --> 00:13:29,360
things

00:13:27,680 --> 00:13:31,680
that don't work as well as they should

00:13:29,360 --> 00:13:33,440
you find terms and conditions that when

00:13:31,680 --> 00:13:35,360
the app is operational don't

00:13:33,440 --> 00:13:37,600
actually always match what we say or it

00:13:35,360 --> 00:13:38,880
will do i'd love to know what they found

00:13:37,600 --> 00:13:41,040
because when the community got to

00:13:38,880 --> 00:13:42,399
analyzing the app both the compilation

00:13:41,040 --> 00:13:44,079
and source code analysis

00:13:42,399 --> 00:13:46,959
showed that it was almost identical to

00:13:44,079 --> 00:13:48,720
opentrace just rebranded and renamed

00:13:46,959 --> 00:13:51,120
there was absolutely no evidence of

00:13:48,720 --> 00:13:52,800
these three to four days of bug hunting

00:13:51,120 --> 00:13:54,160
and everything that she has listed there

00:13:52,800 --> 00:13:55,680
every type of defect

00:13:54,160 --> 00:13:57,440
the community found multiple of these

00:13:55,680 --> 00:13:59,920
and more in the days weeks

00:13:57,440 --> 00:14:01,440
and months after the app was launched

00:13:59,920 --> 00:14:02,399
there are a huge amount of general bugs

00:14:01,440 --> 00:14:04,639
for example

00:14:02,399 --> 00:14:05,839
background tracking on ios did not work

00:14:04,639 --> 00:14:07,120
because neither the singapore nor

00:14:05,839 --> 00:14:08,959
australian developers

00:14:07,120 --> 00:14:11,519
actually followed apple's documentation

00:14:08,959 --> 00:14:13,440
on how to do background work correctly

00:14:11,519 --> 00:14:14,560
then the android version couldn't detect

00:14:13,440 --> 00:14:15,600
ios when it was running in the

00:14:14,560 --> 00:14:16,880
background

00:14:15,600 --> 00:14:19,120
after two hours running at the

00:14:16,880 --> 00:14:20,720
background the ios app stopped running

00:14:19,120 --> 00:14:22,560
because of bad error handling combined

00:14:20,720 --> 00:14:24,639
with incorrect security settings

00:14:22,560 --> 00:14:26,480
the list just goes on and on and on and

00:14:24,639 --> 00:14:27,680
on and if you want the full details

00:14:26,480 --> 00:14:29,760
there's an impressive combination

00:14:27,680 --> 00:14:31,040
compilation on vanessa tigg's blog on

00:14:29,760 --> 00:14:32,320
github

00:14:31,040 --> 00:14:33,920
but if you check out the government's

00:14:32,320 --> 00:14:34,560
own testing documents released to the

00:14:33,920 --> 00:14:36,160
senate

00:14:34,560 --> 00:14:38,000
they definitely didn't find any problems

00:14:36,160 --> 00:14:39,120
relating to security because they didn't

00:14:38,000 --> 00:14:40,880
even look

00:14:39,120 --> 00:14:42,240
aside from some other questionable items

00:14:40,880 --> 00:14:43,839
in their test plan like

00:14:42,240 --> 00:14:45,920
items that recorded a pass but didn't

00:14:43,839 --> 00:14:47,120
record a result if you scroll to the

00:14:45,920 --> 00:14:48,880
very bottom of it all

00:14:47,120 --> 00:14:51,279
security testing is completely out of

00:14:48,880 --> 00:14:51,279
scope

00:14:52,240 --> 00:14:55,360
so let's have a look at a couple of the

00:14:53,920 --> 00:14:59,279
problems that the community found

00:14:55,360 --> 00:15:00,800
but the dta did not the first issue is

00:14:59,279 --> 00:15:03,040
that various factors in the protocol

00:15:00,800 --> 00:15:04,560
enable users of the app to be tracked

00:15:03,040 --> 00:15:06,480
if you broadcast multiple unique

00:15:04,560 --> 00:15:08,079
identifiers changing just one of them

00:15:06,480 --> 00:15:10,000
does not throw off trackers

00:15:08,079 --> 00:15:11,519
if i broadcast my bluetooth address temp

00:15:10,000 --> 00:15:13,760
id and phone model

00:15:11,519 --> 00:15:15,680
and just the bluetooth address changes

00:15:13,760 --> 00:15:17,519
the other two factors remain the same

00:15:15,680 --> 00:15:20,399
and you can easily reassociate the new

00:15:17,519 --> 00:15:22,959
bluetooth address back to my device

00:15:20,399 --> 00:15:24,800
similarly if just the temp id changes

00:15:22,959 --> 00:15:26,639
then you can reassociate the new temp id

00:15:24,800 --> 00:15:29,519
to my device since the model and

00:15:26,639 --> 00:15:31,600
bluetooth address remained constant

00:15:29,519 --> 00:15:32,720
and on android we throw the phone's name

00:15:31,600 --> 00:15:34,720
into the mix too

00:15:32,720 --> 00:15:36,800
because android publishes a gap service

00:15:34,720 --> 00:15:39,440
that exposes your device name such as

00:15:36,800 --> 00:15:41,040
phil coulson's top secret phone if

00:15:39,440 --> 00:15:42,320
that's personally identifiable

00:15:41,040 --> 00:15:44,160
then it doesn't matter how much your

00:15:42,320 --> 00:15:45,040
temp your bluetooth address or your temp

00:15:44,160 --> 00:15:46,720
id change

00:15:45,040 --> 00:15:48,160
you can still uniquely identify your

00:15:46,720 --> 00:15:49,600
device

00:15:48,160 --> 00:15:51,360
even on the version two encrypted

00:15:49,600 --> 00:15:52,959
protocol although you'll get a new

00:15:51,360 --> 00:15:54,160
cipher text every time

00:15:52,959 --> 00:15:56,560
the portion of it that is the

00:15:54,160 --> 00:15:58,240
asymmetrically encrypted symmetric key

00:15:56,560 --> 00:15:59,680
remains constant for its lifetime of

00:15:58,240 --> 00:16:01,279
seven and a half minutes

00:15:59,680 --> 00:16:03,680
so you can still track people straight

00:16:01,279 --> 00:16:05,360
through the encryption

00:16:03,680 --> 00:16:06,959
and since there's no api on either

00:16:05,360 --> 00:16:08,399
platform to be notified when the

00:16:06,959 --> 00:16:09,440
operating system generates a new

00:16:08,399 --> 00:16:12,160
bluetooth address

00:16:09,440 --> 00:16:13,759
this is almost unfixable the only way to

00:16:12,160 --> 00:16:14,240
solve this is to generate a full new

00:16:13,759 --> 00:16:15,759
value

00:16:14,240 --> 00:16:17,360
every single time which would

00:16:15,759 --> 00:16:20,000
significantly decrease your phone's

00:16:17,360 --> 00:16:20,000
battery life

00:16:20,320 --> 00:16:23,839
but the big dangerous issue is

00:16:24,040 --> 00:16:26,880
cve-2020-12856

00:16:25,600 --> 00:16:28,639
and this takes us back into how

00:16:26,880 --> 00:16:31,120
bluetooth works

00:16:28,639 --> 00:16:33,519
essentially gap characteristics can also

00:16:31,120 --> 00:16:35,040
require authentication or encryption

00:16:33,519 --> 00:16:36,959
that means that you can only read or

00:16:35,040 --> 00:16:38,720
write this characteristic if you are a

00:16:36,959 --> 00:16:40,880
paired device

00:16:38,720 --> 00:16:42,720
and gat based exposure notification apps

00:16:40,880 --> 00:16:45,199
like open trace or covertsafe

00:16:42,720 --> 00:16:46,720
will by design try and connect to every

00:16:45,199 --> 00:16:47,920
other compatible device that they can

00:16:46,720 --> 00:16:49,759
find

00:16:47,920 --> 00:16:51,920
so an attacker could set up a fake gap

00:16:49,759 --> 00:16:53,440
server on a raspberry pi or something

00:16:51,920 --> 00:16:55,680
and when an app tries to exchange the

00:16:53,440 --> 00:16:56,880
contact tracing data the attacker can

00:16:55,680 --> 00:16:59,040
return an error code for

00:16:56,880 --> 00:17:00,320
hey you need to be paired first and

00:16:59,040 --> 00:17:03,279
surprise surprise

00:17:00,320 --> 00:17:04,799
your phone will start trying to pair on

00:17:03,279 --> 00:17:06,240
ios it will prompt you

00:17:04,799 --> 00:17:08,240
the same is for any other pairing

00:17:06,240 --> 00:17:10,160
attempt but as the name shown in the

00:17:08,240 --> 00:17:12,000
prompt can be controlled by the attacker

00:17:10,160 --> 00:17:13,760
you can make it say covert safe is

00:17:12,000 --> 00:17:15,760
trying to pair which will increase the

00:17:13,760 --> 00:17:17,919
chance of a user allowing it

00:17:15,760 --> 00:17:19,439
an attacker can also disable the numeric

00:17:17,919 --> 00:17:21,360
comparison pairing method

00:17:19,439 --> 00:17:22,640
and by using the just works pairing

00:17:21,360 --> 00:17:25,439
method instead

00:17:22,640 --> 00:17:27,760
it now looks pretty convincing but on

00:17:25,439 --> 00:17:29,440
android this is completely silent

00:17:27,760 --> 00:17:32,000
it won't even prompt you it will just

00:17:29,440 --> 00:17:33,919
silently pair with the attacker's device

00:17:32,000 --> 00:17:35,280
and as we mentioned earlier the bonding

00:17:33,919 --> 00:17:37,280
process will give the attacker your

00:17:35,280 --> 00:17:39,600
public address which never changes

00:17:37,280 --> 00:17:40,720
and your irk so now they can track you

00:17:39,600 --> 00:17:42,880
wherever you go

00:17:40,720 --> 00:17:44,640
even after you uninstall the covert safe

00:17:42,880 --> 00:17:46,400
app

00:17:44,640 --> 00:17:47,919
what makes it even worse on android is

00:17:46,400 --> 00:17:48,480
that you can escalate this with blue

00:17:47,919 --> 00:17:52,000
frag

00:17:48,480 --> 00:17:53,600
or cve-2020-0022

00:17:52,000 --> 00:17:55,120
and an attacker can get remote code

00:17:53,600 --> 00:17:57,120
execution on most

00:17:55,120 --> 00:17:58,400
android phones out there in the wild

00:17:57,120 --> 00:18:00,559
about 84

00:17:58,400 --> 00:18:02,480
of them the attacker can also change

00:18:00,559 --> 00:18:04,240
their bluetooth profile once paired

00:18:02,480 --> 00:18:05,679
to silently become a remote keyboard for

00:18:04,240 --> 00:18:08,480
your phone or a speaker

00:18:05,679 --> 00:18:09,919
or an and audio remote or just about

00:18:08,480 --> 00:18:11,600
anything else that bluetooth can usually

00:18:09,919 --> 00:18:13,760
do

00:18:11,600 --> 00:18:15,760
the dta tried to patch this on android

00:18:13,760 --> 00:18:17,360
by using reflection to trick android

00:18:15,760 --> 00:18:17,919
into thinking that's already failed to

00:18:17,360 --> 00:18:19,200
bond

00:18:17,919 --> 00:18:20,960
so that it doesn't even attempt the

00:18:19,200 --> 00:18:22,880
pairing process

00:18:20,960 --> 00:18:24,880
unfortunately this doesn't fix the

00:18:22,880 --> 00:18:26,400
social engineering aspect of it

00:18:24,880 --> 00:18:28,640
and doesn't necessarily work in all

00:18:26,400 --> 00:18:30,400
scenarios additionally

00:18:28,640 --> 00:18:32,799
this reflection hackery only works on

00:18:30,400 --> 00:18:34,640
android api level 28 or below

00:18:32,799 --> 00:18:36,640
but starting in november all apps on

00:18:34,640 --> 00:18:39,840
google play will be required to target

00:18:36,640 --> 00:18:43,280
api level 29 or higher so

00:18:39,840 --> 00:18:45,440
that's a problem with no good solution

00:18:43,280 --> 00:18:47,440
lastly although the dta has provided

00:18:45,440 --> 00:18:48,080
patches to try fix these issues and many

00:18:47,440 --> 00:18:49,919
others

00:18:48,080 --> 00:18:51,600
google play is not reliably delivering

00:18:49,919 --> 00:18:52,400
automatic updates to people's android

00:18:51,600 --> 00:18:54,400
phones

00:18:52,400 --> 00:18:56,880
both the community and the dta are aware

00:18:54,400 --> 00:18:58,640
of this though we don't know exactly why

00:18:56,880 --> 00:19:00,240
but there's a strong chance that antago

00:18:58,640 --> 00:19:00,960
could still pull off many of these kinds

00:19:00,240 --> 00:19:02,480
of attacks

00:19:00,960 --> 00:19:04,080
since there is no reliable guarantee

00:19:02,480 --> 00:19:05,600
that people are actually using the fixed

00:19:04,080 --> 00:19:08,559
builds of covert safe

00:19:05,600 --> 00:19:10,240
then the last couple weeks we have seen

00:19:08,559 --> 00:19:10,720
google play pushing updates to people's

00:19:10,240 --> 00:19:12,240
phones

00:19:10,720 --> 00:19:14,559
so they may have done something funny to

00:19:12,240 --> 00:19:16,559
fix this

00:19:14,559 --> 00:19:17,840
now around the same time that covert

00:19:16,559 --> 00:19:19,280
safe was being built

00:19:17,840 --> 00:19:21,440
apple and google were working on their

00:19:19,280 --> 00:19:22,480
own cross-platform exposure notification

00:19:21,440 --> 00:19:23,919
framework

00:19:22,480 --> 00:19:25,919
you may have even already noticed this

00:19:23,919 --> 00:19:27,280
in the settings on your phone

00:19:25,919 --> 00:19:28,880
so let's now have a look at how that

00:19:27,280 --> 00:19:31,280
works and how it's different to what

00:19:28,880 --> 00:19:33,440
we've discussed so far

00:19:31,280 --> 00:19:35,280
unlike covert safe and open trace which

00:19:33,440 --> 00:19:38,000
are centralized solutions

00:19:35,280 --> 00:19:39,600
exposure notification is decentralized

00:19:38,000 --> 00:19:40,880
instead of registering with a server to

00:19:39,600 --> 00:19:43,440
get your temp ids

00:19:40,880 --> 00:19:45,919
each phone generates its own temp id

00:19:43,440 --> 00:19:47,440
every day it generates a new daily key

00:19:45,919 --> 00:19:49,679
and whenever the bluetooth address will

00:19:47,440 --> 00:19:52,320
change it derives a new identifier that

00:19:49,679 --> 00:19:54,160
it exchanges with other devices

00:19:52,320 --> 00:19:56,080
to perform the exchange it uses

00:19:54,160 --> 00:19:57,280
bluetooth broadcasts to advertise its

00:19:56,080 --> 00:19:58,960
own identifier

00:19:57,280 --> 00:20:00,400
and by observing for other devices

00:19:58,960 --> 00:20:02,559
identifiers

00:20:00,400 --> 00:20:04,720
this does not use gat and no connection

00:20:02,559 --> 00:20:06,640
is made between devices

00:20:04,720 --> 00:20:08,720
if you test positive instead of

00:20:06,640 --> 00:20:10,480
uploading everyone else's identifiers

00:20:08,720 --> 00:20:12,799
your device just uploads your own daily

00:20:10,480 --> 00:20:14,799
keys for the last couple weeks

00:20:12,799 --> 00:20:16,480
all the devices periodically poll one or

00:20:14,799 --> 00:20:18,320
more servers for these keys

00:20:16,480 --> 00:20:19,919
and will then check to see to check its

00:20:18,320 --> 00:20:21,440
own logs to see if any of the

00:20:19,919 --> 00:20:24,480
identifiers it has stored

00:20:21,440 --> 00:20:26,480
can be derived from one of those keys

00:20:24,480 --> 00:20:27,679
if a match is found the other devices

00:20:26,480 --> 00:20:29,280
will alert their users

00:20:27,679 --> 00:20:30,799
and the health authority app can also

00:20:29,280 --> 00:20:32,640
notify the health authority

00:20:30,799 --> 00:20:34,320
about this potential exposure or spread

00:20:32,640 --> 00:20:35,919
of coronavirus

00:20:34,320 --> 00:20:37,600
this framework has been widely adopted

00:20:35,919 --> 00:20:39,440
by many countries around the world

00:20:37,600 --> 00:20:41,520
because it's the only solution that can

00:20:39,440 --> 00:20:43,039
actually work on mobile phones

00:20:41,520 --> 00:20:45,039
it's also the only one that can use

00:20:43,039 --> 00:20:46,640
broadcast and observer mode on ios

00:20:45,039 --> 00:20:48,080
which in australia is roughly half of

00:20:46,640 --> 00:20:49,840
mobile phone usage

00:20:48,080 --> 00:20:51,520
and it's also the only solution that can

00:20:49,840 --> 00:20:53,440
synchronize temp id changes

00:20:51,520 --> 00:20:56,240
with bluetooth address changes so that

00:20:53,440 --> 00:20:58,240
uses as difficult to stalk

00:20:56,240 --> 00:20:59,919
exposure notification also handles all

00:20:58,240 --> 00:21:00,640
of the low-level bluetooth interactions

00:20:59,919 --> 00:21:02,000
for you

00:21:00,640 --> 00:21:03,760
so it's difficult for a sovereign app

00:21:02,000 --> 00:21:05,520
developer to stuff it up to the same

00:21:03,760 --> 00:21:07,200
level that the dta already has with

00:21:05,520 --> 00:21:09,200
covert safe

00:21:07,200 --> 00:21:11,039
now australia hasn't adopted this

00:21:09,200 --> 00:21:12,240
seemingly for two reasons

00:21:11,039 --> 00:21:13,679
one is that there are additional

00:21:12,240 --> 00:21:14,480
restrictions on apps that use this

00:21:13,679 --> 00:21:15,760
framework

00:21:14,480 --> 00:21:17,679
such as not being allowed to use

00:21:15,760 --> 00:21:19,200
additional bluetooth which means that we

00:21:17,679 --> 00:21:21,520
can't have a covert safe app

00:21:19,200 --> 00:21:23,360
that uses both the custom protocol and

00:21:21,520 --> 00:21:25,280
the apple and google one

00:21:23,360 --> 00:21:26,880
therefore there is no migration path

00:21:25,280 --> 00:21:28,960
other than building an entirely new

00:21:26,880 --> 00:21:30,720
side-by-side app

00:21:28,960 --> 00:21:32,559
the other reason is that the top medical

00:21:30,720 --> 00:21:34,320
officials seem to be getting bad

00:21:32,559 --> 00:21:36,000
information about how it works

00:21:34,320 --> 00:21:38,400
and where contact traces are involved in

00:21:36,000 --> 00:21:40,080
the process they seem to think that they

00:21:38,400 --> 00:21:40,880
can't get alerted when exposure is

00:21:40,080 --> 00:21:43,280
detected

00:21:40,880 --> 00:21:44,080
which is blatantly false the irish app

00:21:43,280 --> 00:21:47,360
for example

00:21:44,080 --> 00:21:48,720
already does this so for now

00:21:47,360 --> 00:21:50,400
although there's a nice and readily

00:21:48,720 --> 00:21:51,360
available solution to take away all of

00:21:50,400 --> 00:21:53,440
our problems

00:21:51,360 --> 00:21:56,159
the government refuses to use it and was

00:21:53,440 --> 00:21:59,440
stuck with covert safe

00:21:56,159 --> 00:22:00,960
so in conclusion number one do not build

00:21:59,440 --> 00:22:01,760
apps that connect to untrusted gap

00:22:00,960 --> 00:22:03,360
peripherals

00:22:01,760 --> 00:22:05,840
as the operating system can do things

00:22:03,360 --> 00:22:07,919
that compromise users privacy

00:22:05,840 --> 00:22:09,200
two if the government makes technical

00:22:07,919 --> 00:22:11,520
claims about something

00:22:09,200 --> 00:22:12,799
verify them they probably don't know

00:22:11,520 --> 00:22:14,720
what they're on about

00:22:12,799 --> 00:22:17,120
or they've implemented them badly and

00:22:14,720 --> 00:22:19,919
can't be blindly trusted

00:22:17,120 --> 00:22:20,799
three covert safe at best has delivered

00:22:19,919 --> 00:22:23,039
little value

00:22:20,799 --> 00:22:24,799
and at worst can be extremely harmful

00:22:23,039 --> 00:22:27,120
and all third-party solutions

00:22:24,799 --> 00:22:28,480
suffer from the same fundamental flaws

00:22:27,120 --> 00:22:29,760
the apple and google exposure

00:22:28,480 --> 00:22:32,480
notification framework

00:22:29,760 --> 00:22:34,240
is far superior if you're working on an

00:22:32,480 --> 00:22:35,440
exposure notification app that doesn't

00:22:34,240 --> 00:22:38,880
use this framework

00:22:35,440 --> 00:22:40,640
switch and lastly involve experts in

00:22:38,880 --> 00:22:42,559
complex areas where you have unknown

00:22:40,640 --> 00:22:44,480
unknowns such as bluetooth

00:22:42,559 --> 00:22:47,360
if you don't even know what you don't

00:22:44,480 --> 00:22:48,880
know you will probably break things

00:22:47,360 --> 00:22:50,240
and on that note i want to give credit

00:22:48,880 --> 00:22:52,000
to the following people who have been

00:22:50,240 --> 00:22:53,600
studying the app for the past few months

00:22:52,000 --> 00:22:56,080
and putting forward recommendations to

00:22:53,600 --> 00:22:58,880
the dta to make the app more secure

00:22:56,080 --> 00:23:00,320
more private and actually work holding

00:22:58,880 --> 00:23:02,559
them to account

00:23:00,320 --> 00:23:03,679
my thanks go out to dr chris cullnain

00:23:02,559 --> 00:23:06,159
john evershed

00:23:03,679 --> 00:23:07,440
ben frankly jeffrey huntley eleanor

00:23:06,159 --> 00:23:10,240
mcmurtry

00:23:07,440 --> 00:23:11,120
dr robert merkel jimasared manabu

00:23:10,240 --> 00:23:14,320
nakazawa

00:23:11,120 --> 00:23:17,280
richard nelson hubert stewart associate

00:23:14,320 --> 00:23:19,520
professor vanessa teague and dr alan tu

00:23:17,280 --> 00:23:22,880
for much of the material in this talk

00:23:19,520 --> 00:23:24,480
thank you all lastly if you want to find

00:23:22,880 --> 00:23:26,320
more information on all of this

00:23:24,480 --> 00:23:27,520
check out vanessa teague's blog on

00:23:26,320 --> 00:23:37,840
github

00:23:27,520 --> 00:23:37,840
thank you

00:23:38,720 --> 00:23:40,799

YouTube URL: https://www.youtube.com/watch?v=Dsvi44CnpPw


