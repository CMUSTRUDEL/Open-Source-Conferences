Title: "Under and Dunder - Python secret functions" - Cheuk Ting Ho (PyConline AU 2020)
Publication date: 2020-09-08
Playlist: PyConline AU 2020
Description: 
	Cheuk Ting Ho

https://2020.pycon.org.au/program/VLPJZL

At the start, we will be using `dir` to look into the secret functions Python objects have. Eg:
`__getitem__`, `__iter__` and `__next__` Then, we will investigate where is the dunder function goes? Why is it not accessible. And at the end, we will see how dunder functions can change the identity of the Python objects.

This talk is for attendees who have just begin their Python journey. By explaining the dunder functions and the nature of Python objects, attendees will have a better understanding of why Python is fundamentally different from other programming languages. Hopefully, this knowledge will help them out when they continue their Python journeys.

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

Python, PyCon, PyConAU, PyConline

Sat Sep  5 13:35:00 2020 at Obvious
Captions: 
	00:00:00,719 --> 00:00:07,839
and we are back next up we have joke

00:00:04,480 --> 00:00:09,120
with under and dunder python secret

00:00:07,839 --> 00:00:11,599
functions

00:00:09,120 --> 00:00:12,160
take it away yeah thank you so much

00:00:11,599 --> 00:00:14,799
hello

00:00:12,160 --> 00:00:17,760
so um yeah thank you for having me at uh

00:00:14,799 --> 00:00:20,080
pike online au so this is special

00:00:17,760 --> 00:00:20,960
um because i always want to attend uh

00:00:20,080 --> 00:00:23,039
you know and

00:00:20,960 --> 00:00:25,119
you know pycon a you but this year i

00:00:23,039 --> 00:00:27,119
have the conference of being at home and

00:00:25,119 --> 00:00:28,640
actually the funny thing is that i am

00:00:27,119 --> 00:00:30,640
actually in london right now

00:00:28,640 --> 00:00:32,800
so it's 5 a.m for me so if i look a

00:00:30,640 --> 00:00:34,320
little bit strange that's because i'm in

00:00:32,800 --> 00:00:36,640
the middle of the night

00:00:34,320 --> 00:00:38,079
um but anyway so uh yeah i'm jerk and

00:00:36,640 --> 00:00:40,480
these are my um

00:00:38,079 --> 00:00:42,399
contact details there on the slides here

00:00:40,480 --> 00:00:43,200
you can find me there you can contact me

00:00:42,399 --> 00:00:45,680
afterwards

00:00:43,200 --> 00:00:46,800
because you know um well i may not be

00:00:45,680 --> 00:00:48,559
able to you know

00:00:46,800 --> 00:00:49,920
be in the chat right after the talk

00:00:48,559 --> 00:00:50,559
because it's in the middle of the night

00:00:49,920 --> 00:00:52,399
for me but

00:00:50,559 --> 00:00:54,879
if you leave that leave me a message you

00:00:52,399 --> 00:00:57,920
know in the in the chat or like kind of

00:00:54,879 --> 00:00:58,559
dm me on twitter i can uh get back to

00:00:57,920 --> 00:01:02,079
you

00:00:58,559 --> 00:01:04,400
um so also i you know i stream on twitch

00:01:02,079 --> 00:01:07,520
i'll go to that a little bit later

00:01:04,400 --> 00:01:09,360
so um yeah so yeah again like i

00:01:07,520 --> 00:01:11,520
introduce myself and then i

00:01:09,360 --> 00:01:13,040
work on a lot of open source projects i

00:01:11,520 --> 00:01:15,360
love open source projects so

00:01:13,040 --> 00:01:17,520
this is the project i'm working on and

00:01:15,360 --> 00:01:19,360
uh i'm so lucky that i work

00:01:17,520 --> 00:01:21,840
for an open source project full time

00:01:19,360 --> 00:01:23,920
it's a graph database that can do git

00:01:21,840 --> 00:01:26,080
things so uh it's terminusdb if you're

00:01:23,920 --> 00:01:27,680
interested talk to me afterwards

00:01:26,080 --> 00:01:29,920
um i know so i organized a lot of

00:01:27,680 --> 00:01:31,680
conference uh so paddy the global is

00:01:29,920 --> 00:01:34,159
happening in november

00:01:31,680 --> 00:01:35,600
and also there will be pyjamas that cfp

00:01:34,159 --> 00:01:37,920
is open if you're interested again

00:01:35,600 --> 00:01:38,960
check pyjamas.live and i stream on

00:01:37,920 --> 00:01:40,960
twitch this is

00:01:38,960 --> 00:01:42,479
where you can find me i stream three or

00:01:40,960 --> 00:01:45,119
four times a week

00:01:42,479 --> 00:01:46,720
and uh well the time zone may be a

00:01:45,119 --> 00:01:49,040
little bit difficult for you but

00:01:46,720 --> 00:01:50,000
um you can watch other videos that i've

00:01:49,040 --> 00:01:53,040
created

00:01:50,000 --> 00:01:54,320
you know on my website as well so uh

00:01:53,040 --> 00:01:56,479
yeah so today i'm going to talk about

00:01:54,320 --> 00:01:58,399
the python internal functions

00:01:56,479 --> 00:01:59,520
there are lots of fun are looking at it

00:01:58,399 --> 00:02:01,360
so um

00:01:59,520 --> 00:02:02,719
what i'm going to do now is that i'll go

00:02:01,360 --> 00:02:04,799
to the gypsy notebook

00:02:02,719 --> 00:02:06,640
um that's like where we go this this is

00:02:04,799 --> 00:02:09,280
our playground so we gotta

00:02:06,640 --> 00:02:10,239
you know have a look at what's inside

00:02:09,280 --> 00:02:13,360
python function

00:02:10,239 --> 00:02:16,480
and um what's the secret that is hiding

00:02:13,360 --> 00:02:17,040
so um yeah so this is you know uh well

00:02:16,480 --> 00:02:18,800
this is

00:02:17,040 --> 00:02:20,480
a jupiter notebook it looks a little bit

00:02:18,800 --> 00:02:23,040
different because i like that theme

00:02:20,480 --> 00:02:23,840
and this is called jupiter themes if

00:02:23,040 --> 00:02:26,800
you're interested

00:02:23,840 --> 00:02:27,760
have a look there um so first of all i

00:02:26,800 --> 00:02:30,000
will have this

00:02:27,760 --> 00:02:31,200
here that i gonna define a class i

00:02:30,000 --> 00:02:35,040
assume that you have

00:02:31,200 --> 00:02:38,080
you know you know how to define a class

00:02:35,040 --> 00:02:39,400
with some methods in python so this is a

00:02:38,080 --> 00:02:40,800
very simple one it's just a

00:02:39,400 --> 00:02:43,599
demonstration and

00:02:40,800 --> 00:02:45,440
inside of the python class that you have

00:02:43,599 --> 00:02:47,840
the thunder in it so this is

00:02:45,440 --> 00:02:50,000
uh secret functions that what i call the

00:02:47,840 --> 00:02:52,879
standard function secret functions

00:02:50,000 --> 00:02:55,040
that um you all know right so if you

00:02:52,879 --> 00:02:57,360
have written a class that of course like

00:02:55,040 --> 00:02:58,640
you if i think most of most of the time

00:02:57,360 --> 00:02:59,120
the first thing you do is like write

00:02:58,640 --> 00:03:01,680
down

00:02:59,120 --> 00:03:03,280
then that you need and then you know

00:03:01,680 --> 00:03:05,920
solve and then you do something

00:03:03,280 --> 00:03:07,599
uh here i just print out i have created

00:03:05,920 --> 00:03:10,080
an instance so i'll see afterwards

00:03:07,599 --> 00:03:12,159
and then i have a internal function so

00:03:10,080 --> 00:03:14,080
this start with an underscore this is

00:03:12,159 --> 00:03:15,440
understood to be an internal function in

00:03:14,080 --> 00:03:18,560
python

00:03:15,440 --> 00:03:20,480
usually the case is that you know when i

00:03:18,560 --> 00:03:22,080
generate documentation with spain's and

00:03:20,480 --> 00:03:24,080
all these things that like

00:03:22,080 --> 00:03:25,599
i could actually tell things that oh

00:03:24,080 --> 00:03:27,440
this is an internal function

00:03:25,599 --> 00:03:28,959
don't worry about the doc strings uh you

00:03:27,440 --> 00:03:31,920
know just give it

00:03:28,959 --> 00:03:33,120
so because this is the user should not

00:03:31,920 --> 00:03:36,640
be calling it right

00:03:33,120 --> 00:03:38,879
because this is only for internal use um

00:03:36,640 --> 00:03:40,319
so it's not designed for a user to call

00:03:38,879 --> 00:03:44,000
this method to do something

00:03:40,319 --> 00:03:44,560
so it's not a public api um so the other

00:03:44,000 --> 00:03:46,319
thing

00:03:44,560 --> 00:03:47,680
you could do is to put a double

00:03:46,319 --> 00:03:51,760
underscore

00:03:47,680 --> 00:03:54,080
thunder um in front of the function name

00:03:51,760 --> 00:03:55,599
so uh this is i call it a secret

00:03:54,080 --> 00:03:57,599
function so again like

00:03:55,599 --> 00:03:58,959
you should not be using it right because

00:03:57,599 --> 00:04:01,760
well um

00:03:58,959 --> 00:04:03,680
it's a secret function for reason um so

00:04:01,760 --> 00:04:05,200
you should really not be calling it

00:04:03,680 --> 00:04:06,959
but we'll see what's the difference

00:04:05,200 --> 00:04:09,519
between underscore and thunder

00:04:06,959 --> 00:04:10,000
in a um also you could have your

00:04:09,519 --> 00:04:12,480
normal

00:04:10,000 --> 00:04:14,000
function normal method method there here

00:04:12,480 --> 00:04:15,920
just like i would get a string

00:04:14,000 --> 00:04:18,000
as a message i'll just print it out so

00:04:15,920 --> 00:04:21,040
usually these ones are the ones that

00:04:18,000 --> 00:04:23,280
is the public uh could use it so if you

00:04:21,040 --> 00:04:26,960
for example you package your library

00:04:23,280 --> 00:04:29,840
package this is my class for people to

00:04:26,960 --> 00:04:32,080
if they use downl uh and you know uh you

00:04:29,840 --> 00:04:35,040
usually you need to provide a dog string

00:04:32,080 --> 00:04:35,520
that is explaining what this method do

00:04:35,040 --> 00:04:37,199
what

00:04:35,520 --> 00:04:39,360
parameters takes and this stuff so this

00:04:37,199 --> 00:04:41,360
is just an example you know a very

00:04:39,360 --> 00:04:44,320
simple one i tried to use this uh

00:04:41,360 --> 00:04:45,680
numpy style dot string here uh so for

00:04:44,320 --> 00:04:47,280
all this detail i don't have time to

00:04:45,680 --> 00:04:48,080
explain but if you're interested you

00:04:47,280 --> 00:04:50,160
could ask me

00:04:48,080 --> 00:04:51,919
uh so what is the numpy style dog string

00:04:50,160 --> 00:04:53,440
was what's the difference how to write

00:04:51,919 --> 00:04:56,720
drug string all this stuff i can

00:04:53,440 --> 00:05:00,400
also tell you but not today um

00:04:56,720 --> 00:05:03,840
so uh how private is my funk

00:05:00,400 --> 00:05:04,160
and um yeah so well let's let's have a

00:05:03,840 --> 00:05:05,919
look

00:05:04,160 --> 00:05:07,600
at what we have created so first of all

00:05:05,919 --> 00:05:08,960
i have to run this cell

00:05:07,600 --> 00:05:10,720
like all that you read a notebook i have

00:05:08,960 --> 00:05:12,960
to run this up one by one so now

00:05:10,720 --> 00:05:14,479
if i just create an instance i can just

00:05:12,960 --> 00:05:16,960
like call my class this is i

00:05:14,479 --> 00:05:17,759
assume that you're familiar with this um

00:05:16,960 --> 00:05:20,160
and then

00:05:17,759 --> 00:05:21,680
of course i can call it method you know

00:05:20,160 --> 00:05:23,120
it works fine this is my message it's

00:05:21,680 --> 00:05:25,039
just printed out

00:05:23,120 --> 00:05:26,560
the thing that you may or may not know

00:05:25,039 --> 00:05:27,199
if you have used jupyter notebook before

00:05:26,560 --> 00:05:29,280
or not

00:05:27,199 --> 00:05:30,800
that you could use the question mark to

00:05:29,280 --> 00:05:33,360
call a docstring

00:05:30,800 --> 00:05:34,800
so this is very nice because usually

00:05:33,360 --> 00:05:36,479
what happened is that when you

00:05:34,800 --> 00:05:38,560
using some like libraries that you

00:05:36,479 --> 00:05:39,680
forgot how to use it for example pandas

00:05:38,560 --> 00:05:41,840
even though i use it

00:05:39,680 --> 00:05:43,759
a lot and i still forgot like some

00:05:41,840 --> 00:05:45,280
methods like how to use it and all this

00:05:43,759 --> 00:05:47,600
stuff then you could

00:05:45,280 --> 00:05:49,440
do this question mark thing even without

00:05:47,600 --> 00:05:51,280
any internet you don't have to google it

00:05:49,440 --> 00:05:52,639
to to find out what it is so this is

00:05:51,280 --> 00:05:53,360
quite nice so you can see the dot string

00:05:52,639 --> 00:05:57,360
there

00:05:53,360 --> 00:05:58,960
and um yeah so another thing for this

00:05:57,360 --> 00:06:01,360
internal function what i should not be

00:05:58,960 --> 00:06:03,199
calling it but i can still call it

00:06:01,360 --> 00:06:04,880
uh well python is not stopping me from

00:06:03,199 --> 00:06:07,039
doing it it's just that i

00:06:04,880 --> 00:06:08,240
have stepped into a zone that basically

00:06:07,039 --> 00:06:09,120
you have been warned that you shouldn't

00:06:08,240 --> 00:06:12,319
go in

00:06:09,120 --> 00:06:13,360
um but for the secret function oops what

00:06:12,319 --> 00:06:15,600
happened

00:06:13,360 --> 00:06:16,400
why why there's no secret function there

00:06:15,600 --> 00:06:18,319
what

00:06:16,400 --> 00:06:19,840
so the secret function is really hidden

00:06:18,319 --> 00:06:22,160
from me i can't really quit

00:06:19,840 --> 00:06:23,440
from outside of the object so where does

00:06:22,160 --> 00:06:24,720
it go so

00:06:23,440 --> 00:06:26,960
today i'm going to show you a trick

00:06:24,720 --> 00:06:28,319
that's called dir so in the eye

00:06:26,960 --> 00:06:30,639
it's very handy because you can

00:06:28,319 --> 00:06:33,680
basically look what is inside

00:06:30,639 --> 00:06:34,639
a class a class object an instance and

00:06:33,680 --> 00:06:36,639
python object

00:06:34,639 --> 00:06:39,199
so you can see that i have this my print

00:06:36,639 --> 00:06:40,880
and my front found there is just there

00:06:39,199 --> 00:06:42,240
and there's a bunch of like done the

00:06:40,880 --> 00:06:43,520
thing that really looks like they've

00:06:42,240 --> 00:06:44,960
done that you need but with different

00:06:43,520 --> 00:06:47,759
names so these are default

00:06:44,960 --> 00:06:49,120
methods or different functions here oh

00:06:47,759 --> 00:06:51,039
but what is this thing

00:06:49,120 --> 00:06:52,400
this looks familiar but a little bit

00:06:51,039 --> 00:06:55,759
different so

00:06:52,400 --> 00:06:58,319
let's call it and see so hey this is my

00:06:55,759 --> 00:06:59,840
secret function so it goes here it

00:06:58,319 --> 00:07:02,080
basically what python did is that it

00:06:59,840 --> 00:07:05,039
would change the name of it so you see

00:07:02,080 --> 00:07:06,880
that um so you can't just call it like

00:07:05,039 --> 00:07:08,880
you normally do just like thunder

00:07:06,880 --> 00:07:10,479
secret function you can't do it that way

00:07:08,880 --> 00:07:13,280
because python just

00:07:10,479 --> 00:07:15,120
make it a little bit difficult to to you

00:07:13,280 --> 00:07:16,960
know use this method because it's a

00:07:15,120 --> 00:07:17,199
secret and they just change the name of

00:07:16,960 --> 00:07:18,800
it

00:07:17,199 --> 00:07:20,720
it's very straightforward but if you are

00:07:18,800 --> 00:07:21,520
not aware then you will won't be able to

00:07:20,720 --> 00:07:23,840
find it

00:07:21,520 --> 00:07:25,199
so there are other like things that

00:07:23,840 --> 00:07:28,000
heaven is doing

00:07:25,199 --> 00:07:29,680
you know um hidden like behind the scene

00:07:28,000 --> 00:07:31,520
that you may not be noticing

00:07:29,680 --> 00:07:33,280
uh one thing is that for example you

00:07:31,520 --> 00:07:35,120
have a sequential object like my list

00:07:33,280 --> 00:07:36,479
i've just created it it's just one two

00:07:35,120 --> 00:07:39,440
three it's just a demo

00:07:36,479 --> 00:07:41,039
so you can look inside and so this is a

00:07:39,440 --> 00:07:41,759
list object so you can see that it got

00:07:41,039 --> 00:07:43,919
lots of like

00:07:41,759 --> 00:07:45,919
list method that this are all familiar

00:07:43,919 --> 00:07:47,280
to us because this is supposed to be

00:07:45,919 --> 00:07:48,960
like we could use them right this is

00:07:47,280 --> 00:07:51,199
supposed to be for the users

00:07:48,960 --> 00:07:53,919
so we i can call like append of course

00:07:51,199 --> 00:07:57,199
like and copy and all this stuff right

00:07:53,919 --> 00:07:58,879
uh pop but i'm here we got

00:07:57,199 --> 00:08:00,479
lots of default as well so it's like

00:07:58,879 --> 00:08:01,360
much more than just a normal python

00:08:00,479 --> 00:08:04,160
class

00:08:01,360 --> 00:08:05,840
and one thing to i want to you know go

00:08:04,160 --> 00:08:06,720
through a little bit more today is get

00:08:05,840 --> 00:08:09,440
item here

00:08:06,720 --> 00:08:10,319
so this actually makes this um list

00:08:09,440 --> 00:08:13,759
quite special

00:08:10,319 --> 00:08:15,520
it makes it a sequential object because

00:08:13,759 --> 00:08:16,879
uh let's let's try to call it right so

00:08:15,520 --> 00:08:18,800
get items so this is

00:08:16,879 --> 00:08:20,720
actually well this is an attribute but

00:08:18,800 --> 00:08:22,879
actually this is a function call so like

00:08:20,720 --> 00:08:24,240
for example if i want to really show you

00:08:22,879 --> 00:08:26,240
what it is then

00:08:24,240 --> 00:08:27,919
you know you see that is is a function

00:08:26,240 --> 00:08:30,000
actually so you can call it

00:08:27,919 --> 00:08:31,919
and oh what it does is that it will give

00:08:30,000 --> 00:08:34,080
me the first element of the list

00:08:31,919 --> 00:08:35,599
so basically it's equivalent to this so

00:08:34,080 --> 00:08:37,760
what happened is that when you

00:08:35,599 --> 00:08:39,440
you know get an element from a list the

00:08:37,760 --> 00:08:42,560
get item

00:08:39,440 --> 00:08:44,720
functional method will be called so

00:08:42,560 --> 00:08:46,640
you're doing this normally but in fact

00:08:44,720 --> 00:08:50,080
python is doing this okay

00:08:46,640 --> 00:08:51,839
so um so now let's let's

00:08:50,080 --> 00:08:53,440
mess things up a bit so i create a

00:08:51,839 --> 00:08:55,440
sequence class

00:08:53,440 --> 00:08:56,560
and then i could create a sequence so i

00:08:55,440 --> 00:08:59,519
have done it so

00:08:56,560 --> 00:09:00,080
uh so it got the get item method to this

00:08:59,519 --> 00:09:03,440
mix

00:09:00,080 --> 00:09:05,200
a class sequence okay and this one is

00:09:03,440 --> 00:09:06,800
doing something funny so oh this two

00:09:05,200 --> 00:09:07,680
should not be here at this moment i

00:09:06,800 --> 00:09:09,279
think i run

00:09:07,680 --> 00:09:10,720
i don't i demonstrate it last time i

00:09:09,279 --> 00:09:11,920
forgot to delete it but that's fine

00:09:10,720 --> 00:09:15,040
let's uh

00:09:11,920 --> 00:09:16,720
yeah let's just delete it so um

00:09:15,040 --> 00:09:18,240
so what happened is that uh when i

00:09:16,720 --> 00:09:20,080
create an

00:09:18,240 --> 00:09:22,160
you know a sequence object so it would

00:09:20,080 --> 00:09:24,240
just create it so just like what we did

00:09:22,160 --> 00:09:26,480
last time you know but this time you

00:09:24,240 --> 00:09:29,519
know i you know i have an n here

00:09:26,480 --> 00:09:31,360
that's why i put down three and a bus

00:09:29,519 --> 00:09:33,040
to get item because to get items doing

00:09:31,360 --> 00:09:34,160
funny things that is just like take a

00:09:33,040 --> 00:09:38,000
number and they just

00:09:34,160 --> 00:09:38,640
you know do a um do a square of it so if

00:09:38,000 --> 00:09:40,399
i

00:09:38,640 --> 00:09:42,080
get you know even though i have nothing

00:09:40,399 --> 00:09:44,240
in there i can just like okay

00:09:42,080 --> 00:09:46,080
give me the element which basically just

00:09:44,240 --> 00:09:48,080
calling this get items so basically

00:09:46,080 --> 00:09:49,279
just taking a square of that number i

00:09:48,080 --> 00:09:52,080
can even do things

00:09:49,279 --> 00:09:53,200
like you know um my sequence i could put

00:09:52,080 --> 00:09:55,920
in any number here

00:09:53,200 --> 00:09:57,279
that you know um i can still get

00:09:55,920 --> 00:09:58,880
something squared back

00:09:57,279 --> 00:10:00,959
because it's just calling this function

00:09:58,880 --> 00:10:02,880
there's no no more difference from that

00:10:00,959 --> 00:10:04,880
even though i haven't like

00:10:02,880 --> 00:10:06,240
say that this sequence class contain any

00:10:04,880 --> 00:10:09,360
element so that's

00:10:06,240 --> 00:10:11,839
that's special uh how about link uh

00:10:09,360 --> 00:10:13,279
you know like because in in in a list

00:10:11,839 --> 00:10:15,519
you can call length and then you can

00:10:13,279 --> 00:10:18,320
like just see how many elements you have

00:10:15,519 --> 00:10:19,040
and and now it's set three because i

00:10:18,320 --> 00:10:21,600
think

00:10:19,040 --> 00:10:23,760
uh yeah i think because i have declared

00:10:21,600 --> 00:10:25,120
it somewhere it should not have the

00:10:23,760 --> 00:10:27,600
length there i don't know

00:10:25,120 --> 00:10:29,200
why oh yeah i'm sorry this is my list

00:10:27,600 --> 00:10:30,880
sorry i'm not that awake

00:10:29,200 --> 00:10:32,480
so this is my list so this is the list i

00:10:30,880 --> 00:10:33,120
created earlier so of course the length

00:10:32,480 --> 00:10:36,480
is three

00:10:33,120 --> 00:10:38,800
but for my sequence there is no link

00:10:36,480 --> 00:10:40,240
there right because i haven't i haven't

00:10:38,800 --> 00:10:41,760
created anything here it's just like

00:10:40,240 --> 00:10:43,200
it's just have to get items so

00:10:41,760 --> 00:10:44,720
that's why i can do this square bracket

00:10:43,200 --> 00:10:45,440
thing but otherwise i can't do anything

00:10:44,720 --> 00:10:48,320
else

00:10:45,440 --> 00:10:49,920
um so let's have a look yeah we don't

00:10:48,320 --> 00:10:53,519
have it here just to confirm

00:10:49,920 --> 00:10:55,680
so l yeah so it's not there um

00:10:53,519 --> 00:10:58,000
so what can we do well what can we do is

00:10:55,680 --> 00:10:58,720
like we can just create a link method

00:10:58,000 --> 00:11:02,000
right so

00:10:58,720 --> 00:11:05,519
okay so let's try to do something crazy

00:11:02,000 --> 00:11:07,680
and so this is length and then

00:11:05,519 --> 00:11:09,200
i don't have to take in a parameter but

00:11:07,680 --> 00:11:12,480
i'll just return 19

00:11:09,200 --> 00:11:13,200
you know 99 so yeah just just just be

00:11:12,480 --> 00:11:16,160
crazy so

00:11:13,200 --> 00:11:17,920
i would initialize it the same way i did

00:11:16,160 --> 00:11:20,959
before but this time i have

00:11:17,920 --> 00:11:22,320
length so when i chord and it will give

00:11:20,959 --> 00:11:24,880
me 999

00:11:22,320 --> 00:11:26,720
because this is uh how i did you know

00:11:24,880 --> 00:11:27,040
how i defined it it doesn't make sense

00:11:26,720 --> 00:11:29,120
but

00:11:27,040 --> 00:11:30,399
it is what it is so now if you look at

00:11:29,120 --> 00:11:34,000
dir my

00:11:30,399 --> 00:11:35,680
sequence then you will see that we have

00:11:34,000 --> 00:11:37,600
length this time because i've just

00:11:35,680 --> 00:11:40,839
declared it and it works funny

00:11:37,600 --> 00:11:42,720
um so we can also make our object

00:11:40,839 --> 00:11:44,800
iterable but

00:11:42,720 --> 00:11:46,399
actually i you know what i gotta do a

00:11:44,800 --> 00:11:47,120
little bit of cheating i gotta copy this

00:11:46,399 --> 00:11:49,600
because

00:11:47,120 --> 00:11:51,040
i am afraid that if i do a live cooling

00:11:49,600 --> 00:11:54,240
right now at five a.m

00:11:51,040 --> 00:11:56,240
i would make mistake and uh you know

00:11:54,240 --> 00:11:58,240
the talk will be 20 minutes or 30

00:11:56,240 --> 00:12:01,040
minutes because i'm just fixing myself

00:11:58,240 --> 00:12:01,360
my mistakes so what is the difference

00:12:01,040 --> 00:12:03,839
here

00:12:01,360 --> 00:12:04,800
is that this time we were half the you

00:12:03,839 --> 00:12:07,519
know self.

00:12:04,800 --> 00:12:08,079
n equals to n so like we really actually

00:12:07,519 --> 00:12:10,720
store

00:12:08,079 --> 00:12:11,920
storing our initialized number there and

00:12:10,720 --> 00:12:14,720
we have a count

00:12:11,920 --> 00:12:16,880
it's useful afterwards and we're still

00:12:14,720 --> 00:12:20,959
doing this crazy thing this one we did

00:12:16,880 --> 00:12:23,200
999 we can just stay the same and then

00:12:20,959 --> 00:12:24,639
for the next so this is the next method

00:12:23,200 --> 00:12:28,399
so this actually

00:12:24,639 --> 00:12:31,839
what makes a um an instance iterable

00:12:28,399 --> 00:12:32,160
so uh so basically what is the iterable

00:12:31,839 --> 00:12:33,600
is

00:12:32,160 --> 00:12:35,920
basically something like you know it

00:12:33,600 --> 00:12:36,720
will create an iterator when it's put in

00:12:35,920 --> 00:12:38,480
a for loop

00:12:36,720 --> 00:12:40,399
so what it does for example if you put

00:12:38,480 --> 00:12:43,120
it in a for loop like

00:12:40,399 --> 00:12:43,920
like this so if you put that in a for

00:12:43,120 --> 00:12:45,839
loop

00:12:43,920 --> 00:12:48,079
that uh the follow what it does is

00:12:45,839 --> 00:12:50,160
record it then the eater

00:12:48,079 --> 00:12:51,279
that in this case i'll just give back

00:12:50,160 --> 00:12:53,920
myself so

00:12:51,279 --> 00:12:55,440
itself is also an iterator because it

00:12:53,920 --> 00:12:58,399
got this next method

00:12:55,440 --> 00:12:59,200
so this next method basically marks that

00:12:58,399 --> 00:13:01,440
this

00:12:59,200 --> 00:13:02,800
you know this class will you know the

00:13:01,440 --> 00:13:04,800
instance of this class

00:13:02,800 --> 00:13:08,639
is an iterator because it goes the next

00:13:04,800 --> 00:13:10,160
method so by having eater returning self

00:13:08,639 --> 00:13:12,560
that means that when i put it in a for

00:13:10,160 --> 00:13:14,000
loop that i would give you an iterator

00:13:12,560 --> 00:13:16,000
which is myself which

00:13:14,000 --> 00:13:17,279
yeah of course i am a iterator because i

00:13:16,000 --> 00:13:19,760
i have next right

00:13:17,279 --> 00:13:21,040
so this is what happened basically i

00:13:19,760 --> 00:13:24,639
just checked that okay

00:13:21,040 --> 00:13:26,800
so if my count is less than um you know

00:13:24,639 --> 00:13:28,160
myself then i'll just increase it and

00:13:26,800 --> 00:13:29,360
then i would just print it out and

00:13:28,160 --> 00:13:30,959
return

00:13:29,360 --> 00:13:32,880
the square of it so it's just doing

00:13:30,959 --> 00:13:35,040
something crazy again so let's

00:13:32,880 --> 00:13:36,079
create this instance so now this time my

00:13:35,040 --> 00:13:39,760
sequence is

00:13:36,079 --> 00:13:41,440
any you know iterable class so uh

00:13:39,760 --> 00:13:43,360
so you can see that i have next i can

00:13:41,440 --> 00:13:44,880
call it first time is one the second

00:13:43,360 --> 00:13:47,440
time is two but it prints out

00:13:44,880 --> 00:13:48,320
four because i just you know make it do

00:13:47,440 --> 00:13:50,160
it like so

00:13:48,320 --> 00:13:52,320
so uh if more than that it'll just stop

00:13:50,160 --> 00:13:53,600
the iteration because we need that to

00:13:52,320 --> 00:13:55,760
stop the follow-up

00:13:53,600 --> 00:13:57,440
um so yeah about how each you know

00:13:55,760 --> 00:13:59,920
iterable and iterator work

00:13:57,440 --> 00:14:01,600
i've also like explained that in my

00:13:59,920 --> 00:14:03,199
stream before but if you have questions

00:14:01,600 --> 00:14:05,360
you can ask me i can tell you

00:14:03,199 --> 00:14:07,040
not today but in another time so i have

00:14:05,360 --> 00:14:10,320
one minutes left what i've got to do

00:14:07,040 --> 00:14:13,199
is that i gotta refresh what i did here

00:14:10,320 --> 00:14:14,639
uh like my class thing i gotta you know

00:14:13,199 --> 00:14:16,320
refresh this

00:14:14,639 --> 00:14:18,079
and then i gotta put it in a for loop

00:14:16,320 --> 00:14:18,800
just to prove my point that it works in

00:14:18,079 --> 00:14:21,440
a for loop

00:14:18,800 --> 00:14:21,839
okay so um i think that's the end of my

00:14:21,440 --> 00:14:25,680
talk

00:14:21,839 --> 00:14:27,519
and um i think i can take one quick

00:14:25,680 --> 00:14:30,720
questions otherwise you can

00:14:27,519 --> 00:14:34,160
dm me and um

00:14:30,720 --> 00:14:37,360
yeah that was so

00:14:34,160 --> 00:14:40,240
wonderful i i don't have a question

00:14:37,360 --> 00:14:40,639
i just have praise for you waking up at

00:14:40,240 --> 00:14:42,880
this

00:14:40,639 --> 00:14:44,639
weird hour to join us from halfway

00:14:42,880 --> 00:14:47,519
across the planet to teach us some

00:14:44,639 --> 00:14:50,480
fundamentals of python internals

00:14:47,519 --> 00:14:52,480
that was so great and i will let you get

00:14:50,480 --> 00:14:55,440
back to sleep now

00:14:52,480 --> 00:14:56,959
yeah but feel free to message me i would

00:14:55,440 --> 00:14:58,000
reply to you maybe there's a time

00:14:56,959 --> 00:14:59,600
difference i can't reply

00:14:58,000 --> 00:15:01,120
to you immediately but i would get back

00:14:59,600 --> 00:15:02,880
to you yeah

00:15:01,120 --> 00:15:06,160
and people can contact you on social

00:15:02,880 --> 00:15:06,480
media yeah you can find me on my twitter

00:15:06,160 --> 00:15:08,240
i

00:15:06,480 --> 00:15:11,040
i just got to go back to my first slide

00:15:08,240 --> 00:15:12,639
so you can have a second look

00:15:11,040 --> 00:15:14,160
of my you can find me on my twitter and

00:15:12,639 --> 00:15:16,160
also like my you know

00:15:14,160 --> 00:15:18,000
website has all the you know tutorial

00:15:16,160 --> 00:15:21,120
that i did before that is recorded

00:15:18,000 --> 00:15:22,160
and um including uh you know the stuff

00:15:21,120 --> 00:15:24,000
that i've talked about

00:15:22,160 --> 00:15:25,600
that i say that i would explain it

00:15:24,000 --> 00:15:29,199
another day you can find

00:15:25,600 --> 00:15:32,000
explanation there wonderful

00:15:29,199 --> 00:15:34,639
i'll let you get to sleep right thank

00:15:32,000 --> 00:15:34,639
you so much

00:15:37,720 --> 00:15:40,720

YouTube URL: https://www.youtube.com/watch?v=YqoBvEaAU5w


