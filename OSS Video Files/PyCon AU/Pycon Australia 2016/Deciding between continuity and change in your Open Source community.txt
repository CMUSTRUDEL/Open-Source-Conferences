Title: Deciding between continuity and change in your Open Source community
Publication date: 2016-08-16
Playlist: Pycon Australia 2016
Description: 
	Christopher Neugebauer
https://2016.pycon-au.org/schedule/153/view_talk
When you’re a big, for-profit project, it can be easy to justify a change from outdated software to the new hotness: figure out why the old software isn’t working for you, do a cost-benefit analysis, and – if it still seems like a good idea – make the change.
When you’re a community of volunteers, that justification can be less clear: cost-benefit analyses will rarely be about money. Worse still, the human costs can be difficult to justify: It’s difficult to get volunteers to do more unpaid work than they’re already doing. If your community depends on Open Source software, you get the added political difficulty of needing to navigate the divide between large-scale change and making small improvements to systems your community actively contributes to.
Whilst the motivation might be different, the process isn’t: leading a community towards change means understanding why existing systems aren’t suitable, making your community enthusiastic about the need for change, and then actually making that change.
To help make this point more concretely, we’ll look at how and why linux.conf.au – a long-running Open Source conference in Australia – effected a move away away from a bespoke legacy conference management software to one based on Symposion, the popular Django-based software created for the Python Software Foundation. We’ll also look at how that’s led to the PSF funding Registrasion, a Django-based conference sales platform.
With this case study as a guide, we’ll talk about how to make a decision to replace the software that your community runs on. In particular, we’ll cover how to identify and engage with stakeholders within a community; the value of prototypes in maintaining interest; and what a cost-benefit analysis might look like when your currencies are human joy, and burnout prevention.
Captions: 
	00:00:00,000 --> 00:00:08,040
welcome back everybody I'd like to enter

00:00:03,570 --> 00:00:11,280
skirts nagoba he's a psf fellow director

00:00:08,040 --> 00:00:14,639
of Linux convey you 2017 and the

00:00:11,280 --> 00:00:17,100
convener for a bunch of pike on a use

00:00:14,639 --> 00:00:19,350
over the last year's here does

00:00:17,100 --> 00:00:21,810
presenting opens at mobile conferences

00:00:19,350 --> 00:00:24,689
and mobile at open-source conferences

00:00:21,810 --> 00:00:28,289
and today he's going to talk about how

00:00:24,689 --> 00:00:32,790
to decide between continuity and change

00:00:28,289 --> 00:00:38,040
in open source communities think about

00:00:32,790 --> 00:00:40,320
this I really should put it on my writer

00:00:38,040 --> 00:00:42,510
for future talks I get somebody German

00:00:40,320 --> 00:00:43,770
to to introduce me it it really does

00:00:42,510 --> 00:00:47,550
improve getting my name pronounced

00:00:43,770 --> 00:00:49,530
correctly which is great yeah I am Chris

00:00:47,550 --> 00:00:51,719
you can find my contact details

00:00:49,530 --> 00:00:54,210
including my twitter handle if you wish

00:00:51,719 --> 00:00:57,079
to heck with me somewhere on that slide

00:00:54,210 --> 00:01:01,320
you can look at it and try and spot it

00:00:57,079 --> 00:01:04,019
it's there somewhere so I'm I'm a guy

00:01:01,320 --> 00:01:06,659
from that city in that picture though

00:01:04,019 --> 00:01:12,150
that was like four years ago now so yeah

00:01:06,659 --> 00:01:14,040
I miss I'm this guy I have become known

00:01:12,150 --> 00:01:16,320
in the community here is somewhat of a

00:01:14,040 --> 00:01:18,920
serial conference organizer I was

00:01:16,320 --> 00:01:22,530
responsible for the 2012 and 2013

00:01:18,920 --> 00:01:24,270
editions of pike on Australia and have

00:01:22,530 --> 00:01:27,740
been sort of the bane of organizers

00:01:24,270 --> 00:01:30,270
existences at PyCon a you ever since I

00:01:27,740 --> 00:01:33,390
was elected as they fell over the Python

00:01:30,270 --> 00:01:35,509
software foundation in 2013 and i'm

00:01:33,390 --> 00:01:38,430
currently director of linux coffe au

00:01:35,509 --> 00:01:41,040
2017 which is running in january and

00:01:38,430 --> 00:01:42,630
hobart and you should totally well i

00:01:41,040 --> 00:01:44,520
can't tell you just submit a paper right

00:01:42,630 --> 00:01:48,570
now but there will be ticket sales in a

00:01:44,520 --> 00:01:49,680
month or so so running conferences has

00:01:48,570 --> 00:01:52,140
meant that i haven't really had a whole

00:01:49,680 --> 00:01:54,390
lot of time to to write code or

00:01:52,140 --> 00:01:57,180
contribute to open source code projects

00:01:54,390 --> 00:01:59,250
over the last few years so this year I

00:01:57,180 --> 00:02:01,759
took the clever step of basically

00:01:59,250 --> 00:02:05,250
merging the two activities together and

00:02:01,759 --> 00:02:07,409
starting on an open source project for

00:02:05,250 --> 00:02:09,810
for maintaining the conference's that I

00:02:07,409 --> 00:02:11,960
run this is the first time I've sort of

00:02:09,810 --> 00:02:13,790
been the primary prime

00:02:11,960 --> 00:02:15,380
public developer or primary core

00:02:13,790 --> 00:02:18,620
developer on an open source code project

00:02:15,380 --> 00:02:20,870
the conference's I've run as are similar

00:02:18,620 --> 00:02:23,420
our volunteer activities of similar

00:02:20,870 --> 00:02:25,940
scales this project i'm working on

00:02:23,420 --> 00:02:27,500
registration has mostly been enabled by

00:02:25,940 --> 00:02:30,080
grants from the python software

00:02:27,500 --> 00:02:32,480
foundation who I would like likly

00:02:30,080 --> 00:02:36,440
thanked 44 actually keeping me afloat

00:02:32,480 --> 00:02:40,430
for the last year or so so community-run

00:02:36,440 --> 00:02:42,410
conferences how tend to exhibit most of

00:02:40,430 --> 00:02:44,360
the difficulties that happen around open

00:02:42,410 --> 00:02:45,800
source code projects but many of the

00:02:44,360 --> 00:02:48,470
difficulties that you see in them are

00:02:45,800 --> 00:02:49,790
amplified in the extreme there are

00:02:48,470 --> 00:02:52,040
deadlines that you have and the

00:02:49,790 --> 00:02:53,960
deadlines rather than just upsetting

00:02:52,040 --> 00:02:57,980
people have actual financial penalties

00:02:53,960 --> 00:02:59,900
attached them but rather than business

00:02:57,980 --> 00:03:02,450
or activities where there are financial

00:02:59,900 --> 00:03:04,550
penalties most of staff are volunteers

00:03:02,450 --> 00:03:07,580
and most of the people who come to

00:03:04,550 --> 00:03:09,200
participate in conferences are people

00:03:07,580 --> 00:03:12,440
who want to scratch their own itches in

00:03:09,200 --> 00:03:13,790
some in some way shape or form so over

00:03:12,440 --> 00:03:16,490
the last 10 years have been enough

00:03:13,790 --> 00:03:17,990
people within linux convey you who have

00:03:16,490 --> 00:03:20,810
decided that writing conference

00:03:17,990 --> 00:03:23,960
management software was an itch worth

00:03:20,810 --> 00:03:26,000
scratching in in terms of running events

00:03:23,960 --> 00:03:28,490
this resulted in a project called

00:03:26,000 --> 00:03:30,800
zookeeper which is on the surface not

00:03:28,490 --> 00:03:33,530
too bad though you may take what I say

00:03:30,800 --> 00:03:37,820
in some of the coming slides as a bit of

00:03:33,530 --> 00:03:39,200
a coded critique if you like there are

00:03:37,820 --> 00:03:40,790
people in this room who are giggling

00:03:39,200 --> 00:03:46,370
when I said that just to give you an

00:03:40,790 --> 00:03:48,020
idea yeah coded coded so I mentioned

00:03:46,370 --> 00:03:49,250
that volunteer conferences capture a lot

00:03:48,020 --> 00:03:52,580
of the difficulties of open source

00:03:49,250 --> 00:03:54,230
projects generally are but amplified so

00:03:52,580 --> 00:03:55,760
open source projects experience a

00:03:54,230 --> 00:03:58,190
phenomenon called the drive thru

00:03:55,760 --> 00:04:00,770
contributor you may see this in the

00:03:58,190 --> 00:04:03,860
literature as drive by I do not use that

00:04:00,770 --> 00:04:05,810
term basically drive through

00:04:03,860 --> 00:04:07,520
contributors are contributors who show

00:04:05,810 --> 00:04:10,100
up have a short interaction with the

00:04:07,520 --> 00:04:11,690
project and then leave conference

00:04:10,100 --> 00:04:14,060
organizers who use conference management

00:04:11,690 --> 00:04:15,980
software like Drive thrus in the extreme

00:04:14,060 --> 00:04:17,450
they use the project they have an

00:04:15,980 --> 00:04:20,239
engagement that fulfills their own

00:04:17,450 --> 00:04:21,919
events needs and then they disappear if

00:04:20,239 --> 00:04:23,780
you want to see more stuff about drive

00:04:21,919 --> 00:04:27,250
through contributors you should see the

00:04:23,780 --> 00:04:27,250
keys talk from 40 minutes ago

00:04:27,380 --> 00:04:34,620
mmm scheduling so likewise the

00:04:32,610 --> 00:04:36,690
maintainability of software becomes less

00:04:34,620 --> 00:04:39,150
of a relevant issue for people running

00:04:36,690 --> 00:04:41,460
events as deadlines approached that is

00:04:39,150 --> 00:04:43,380
because as you get closer to actually

00:04:41,460 --> 00:04:45,240
needing to put a thing on there is less

00:04:43,380 --> 00:04:47,010
time available to spend on code review

00:04:45,240 --> 00:04:53,310
as deadlines are approaching in eyeballs

00:04:47,010 --> 00:04:55,050
start hitting the site and most people

00:04:53,310 --> 00:04:57,600
who are doing these things can justify

00:04:55,050 --> 00:04:59,669
not actually applying genuine software

00:04:57,600 --> 00:05:01,590
engineering rigorous practices to

00:04:59,669 --> 00:05:04,200
maintain their site because there is a

00:05:01,590 --> 00:05:07,260
fixed deadline and at the end of that

00:05:04,200 --> 00:05:09,180
fixed deadline there is no future need

00:05:07,260 --> 00:05:12,360
for maintenance one shake once a

00:05:09,180 --> 00:05:13,890
conference has been doing maintenance on

00:05:12,360 --> 00:05:17,910
that year's conference website stops

00:05:13,890 --> 00:05:19,800
being a thing you really need to do this

00:05:17,910 --> 00:05:21,870
is manifested itself in zookeeper by

00:05:19,800 --> 00:05:25,470
there being a fork for every year of

00:05:21,870 --> 00:05:27,810
Link's convey you since 2010 and these

00:05:25,470 --> 00:05:30,810
various Forks have varying levels of

00:05:27,810 --> 00:05:33,479
merging nests into main line which is

00:05:30,810 --> 00:05:36,150
which is a problem in a sock in and of

00:05:33,479 --> 00:05:38,820
itself so if you imagine sort of running

00:05:36,150 --> 00:05:41,070
an event like like an agile sprint the

00:05:38,820 --> 00:05:43,710
the earlier time frame in organization

00:05:41,070 --> 00:05:45,150
has available to you the whole pile of

00:05:43,710 --> 00:05:48,660
features that you might want to have

00:05:45,150 --> 00:05:50,210
added to something and equal amounts of

00:05:48,660 --> 00:05:52,380
being able to achieve something and

00:05:50,210 --> 00:05:54,120
people will go and pick up the things

00:05:52,380 --> 00:05:55,890
that they want to pick up the most and

00:05:54,120 --> 00:05:57,180
the later you get into that process

00:05:55,890 --> 00:05:59,729
there's still a bunch of stuff that

00:05:57,180 --> 00:06:02,729
needs doing that stuff tends to be less

00:05:59,729 --> 00:06:04,830
eat it tends to be less desirable to

00:06:02,729 --> 00:06:06,090
write and there's also a lot less time

00:06:04,830 --> 00:06:09,090
to actually go and get that stuff done

00:06:06,090 --> 00:06:11,100
and what this means is that the problems

00:06:09,090 --> 00:06:13,830
that emerge very very late in planning

00:06:11,100 --> 00:06:16,440
tend not to get fixed even if these

00:06:13,830 --> 00:06:19,169
exact same problems manifest themselves

00:06:16,440 --> 00:06:27,479
in the exact same way with the exact

00:06:19,169 --> 00:06:30,000
same fixes every single year and so this

00:06:27,479 --> 00:06:32,700
year I've been adopting a different

00:06:30,000 --> 00:06:34,890
approach with the 2017 team we're using

00:06:32,700 --> 00:06:37,979
a different existing management package

00:06:34,890 --> 00:06:39,080
and writing the code that we need to

00:06:37,979 --> 00:06:41,539
bring that

00:06:39,080 --> 00:06:44,060
up our who have expected from zookeeper

00:06:41,539 --> 00:06:46,099
and this essentially has found me

00:06:44,060 --> 00:06:48,199
writing the ticket sales aspect of this

00:06:46,099 --> 00:06:49,789
package and trying to solve some of the

00:06:48,199 --> 00:06:53,870
mistakes that zookeeper made over these

00:06:49,789 --> 00:07:01,120
years but I've been involved in Pike on

00:06:53,870 --> 00:07:04,189
a you now for this is my fifth year and

00:07:01,120 --> 00:07:09,050
I've failed to make the case for this

00:07:04,189 --> 00:07:10,909
change since about 2014 I failed to make

00:07:09,050 --> 00:07:14,000
that case for change this year we use

00:07:10,909 --> 00:07:16,099
zookeeper to run the 2016 side even

00:07:14,000 --> 00:07:19,099
though I promised functional working

00:07:16,099 --> 00:07:21,560
code in time for the conference to run I

00:07:19,099 --> 00:07:23,840
wasn't able to bring the community over

00:07:21,560 --> 00:07:26,150
and so a lot rest of this talk is what

00:07:23,840 --> 00:07:31,819
I've learned in five years of failing to

00:07:26,150 --> 00:07:33,710
get people to act in a different way so

00:07:31,819 --> 00:07:35,779
I'd like to talk about how we

00:07:33,710 --> 00:07:37,729
successfully affected this project but

00:07:35,779 --> 00:07:39,050
right now it's not complete I can't

00:07:37,729 --> 00:07:43,129
really talk about how it went it seems

00:07:39,050 --> 00:07:44,930
to be going ok for now I guess but I can

00:07:43,129 --> 00:07:47,120
talk about is the thoughts that I went

00:07:44,930 --> 00:07:48,889
through in terms of making the project

00:07:47,120 --> 00:07:50,509
happen and actually getting it off the

00:07:48,889 --> 00:07:52,460
ground so going to take a bit of a

00:07:50,509 --> 00:07:53,990
philosophical book into how we bring

00:07:52,460 --> 00:07:57,250
community projects to change the

00:07:53,990 --> 00:07:59,919
software that underpins it so

00:07:57,250 --> 00:08:02,319
justification of change or continuity

00:07:59,919 --> 00:08:04,310
generally comes down to the idea of

00:08:02,319 --> 00:08:06,110
cost-benefit analysis you know it's

00:08:04,310 --> 00:08:08,810
where you weigh up what it will take to

00:08:06,110 --> 00:08:12,229
make a change and one of what benefits

00:08:08,810 --> 00:08:14,199
that change will bring about when you

00:08:12,229 --> 00:08:16,669
are a for-profit operation a

00:08:14,199 --> 00:08:19,430
cost-benefit analysis is one question

00:08:16,669 --> 00:08:22,039
will the time and money that is saved in

00:08:19,430 --> 00:08:24,469
the future exceeds the amount of time

00:08:22,039 --> 00:08:27,310
and money it takes that you need to

00:08:24,469 --> 00:08:30,830
spend in order to effect that change a

00:08:27,310 --> 00:08:33,620
secondary question here might be when

00:08:30,830 --> 00:08:36,050
this change will happen costs that are

00:08:33,620 --> 00:08:38,329
saved ten years into the future might

00:08:36,050 --> 00:08:42,560
not be worth an extended amount of pain

00:08:38,329 --> 00:08:44,930
right now the point that I'm trying to

00:08:42,560 --> 00:08:47,060
make though here is that when you have

00:08:44,930 --> 00:08:49,940
money and are trying to employ people

00:08:47,060 --> 00:08:51,740
you have tangible metrics you can

00:08:49,940 --> 00:08:53,040
measure something you can say whether or

00:08:51,740 --> 00:08:56,130
not what you are doing is

00:08:53,040 --> 00:09:00,300
working volunteer projects though our

00:08:56,130 --> 00:09:02,310
general not driven by money indeed where

00:09:00,300 --> 00:09:04,410
possible spending more time to reduce

00:09:02,310 --> 00:09:06,660
burnout make people more familiar with

00:09:04,410 --> 00:09:10,709
stuff make people happier when they are

00:09:06,660 --> 00:09:12,899
doing things with no monetary award

00:09:10,709 --> 00:09:15,810
attached to that can be a good thing

00:09:12,899 --> 00:09:17,759
that is worth doing people are on

00:09:15,810 --> 00:09:20,279
open-source projects because they won't

00:09:17,759 --> 00:09:22,380
feel belonging they want to feel

00:09:20,279 --> 00:09:23,850
ownership of what they achieve they

00:09:22,380 --> 00:09:27,240
generally want to feel like they're

00:09:23,850 --> 00:09:29,730
doing work burning out volunteers is a

00:09:27,240 --> 00:09:32,040
thing that happens but it's hard to

00:09:29,730 --> 00:09:33,870
measure this and indeed the actual act

00:09:32,040 --> 00:09:35,490
of measuring whether or not you are

00:09:33,870 --> 00:09:36,569
burning out volunteers might be

00:09:35,490 --> 00:09:39,329
something that your project does not

00:09:36,569 --> 00:09:43,259
have capacity to do and will hence cause

00:09:39,329 --> 00:09:48,420
burnout itself volunteers time is a

00:09:43,259 --> 00:09:50,339
limited thing so your projects don't say

00:09:48,420 --> 00:09:51,959
don't tend to sail smoothly from start

00:09:50,339 --> 00:09:53,819
to finish their living breathing things

00:09:51,959 --> 00:09:55,440
they last through multiple years

00:09:53,819 --> 00:09:57,870
volunteers can come and go people's

00:09:55,440 --> 00:09:59,730
directions can change you know people

00:09:57,870 --> 00:10:02,100
projects make mistakes they develop

00:09:59,730 --> 00:10:06,930
technical debt projects can become

00:10:02,100 --> 00:10:08,910
obsolete so continuity is what happens

00:10:06,930 --> 00:10:11,399
when the benefits of changes are

00:10:08,910 --> 00:10:13,380
severely outweighed by the cost to your

00:10:11,399 --> 00:10:16,350
community I don't have a whole lot to

00:10:13,380 --> 00:10:18,630
say about about continuity other than

00:10:16,350 --> 00:10:21,120
sometimes it is a thing that happens and

00:10:18,630 --> 00:10:25,800
for the most part if you can justify it

00:10:21,120 --> 00:10:28,079
that is completely fine well considered

00:10:25,800 --> 00:10:30,899
change can actually look like continuity

00:10:28,079 --> 00:10:33,449
to the casual observer if so it's really

00:10:30,899 --> 00:10:35,490
quite easy to justify because even if

00:10:33,449 --> 00:10:37,829
you change things substantially you do

00:10:35,490 --> 00:10:41,130
if you don't impact the remainder of

00:10:37,829 --> 00:10:43,709
what the community sees a couple of

00:10:41,130 --> 00:10:47,220
Python examples for example Django

00:10:43,709 --> 00:10:50,430
channels in this Android godwin went and

00:10:47,220 --> 00:10:52,709
entirely wrote rewrote Django's event

00:10:50,430 --> 00:10:55,250
handling infrastructure but kept the

00:10:52,709 --> 00:10:58,470
response of the request response API

00:10:55,250 --> 00:11:00,630
exactly the same most of the community

00:10:58,470 --> 00:11:02,310
would not be affected if channels

00:11:00,630 --> 00:11:07,020
suddenly became a compulsory part of

00:11:02,310 --> 00:11:09,810
django python 3 is also an example of

00:11:07,020 --> 00:11:12,090
this though it took us until version 3.3

00:11:09,810 --> 00:11:15,180
of Python to come out before we realize

00:11:12,090 --> 00:11:17,430
this was the case we thought it was a

00:11:15,180 --> 00:11:21,270
wholesale change until we realized that

00:11:17,430 --> 00:11:24,660
it wasn't so the harder type of change

00:11:21,270 --> 00:11:25,710
to justify is the wholesale replacement

00:11:24,660 --> 00:11:27,900
of something that was previously

00:11:25,710 --> 00:11:30,270
important with something else they say

00:11:27,900 --> 00:11:32,220
this is harder to justify because it

00:11:30,270 --> 00:11:34,770
immediately involves people who aren't

00:11:32,220 --> 00:11:37,250
because it intimately sorry involves

00:11:34,770 --> 00:11:40,140
people who aren't you with the unknown

00:11:37,250 --> 00:11:42,660
it means that if you go and develop on

00:11:40,140 --> 00:11:45,030
the old thing that is pending end of

00:11:42,660 --> 00:11:46,740
life you might be wasting efforts and

00:11:45,030 --> 00:11:49,920
that might not be all that encouraging

00:11:46,740 --> 00:11:52,620
to you dying on developing on the new

00:11:49,920 --> 00:11:54,210
speculative thing might not pay off in

00:11:52,620 --> 00:11:56,100
the future and that might be a waste of

00:11:54,210 --> 00:11:57,930
your time I'm going to spend the

00:11:56,100 --> 00:12:01,200
remainder of this talk and considering

00:11:57,930 --> 00:12:03,120
how to handle wholesale change a few

00:12:01,200 --> 00:12:05,880
examples of wholesale change in open

00:12:03,120 --> 00:12:09,680
source who here remembers turbo gears as

00:12:05,880 --> 00:12:13,020
a thing and who he actually uses it

00:12:09,680 --> 00:12:15,180
basically a few years ago the the

00:12:13,020 --> 00:12:17,280
project leads of both turbo gears and

00:12:15,180 --> 00:12:19,080
pyramid realized that they were trying

00:12:17,280 --> 00:12:22,020
to do the same thing with basically the

00:12:19,080 --> 00:12:24,240
same suite of Python product of Python

00:12:22,020 --> 00:12:26,730
projects they were web frameworks that

00:12:24,240 --> 00:12:28,800
sort of select a best-of-breed of

00:12:26,730 --> 00:12:30,720
smaller libraries and they realize they

00:12:28,800 --> 00:12:33,030
were doing basically the same thing they

00:12:30,720 --> 00:12:34,740
merge the projects and that resulted in

00:12:33,030 --> 00:12:37,440
most the turbo gears developers

00:12:34,740 --> 00:12:41,940
disappearing and disappearing very very

00:12:37,440 --> 00:12:46,110
quickly so that led to a community

00:12:41,940 --> 00:12:49,170
disappearing in the world of C in the

00:12:46,110 --> 00:12:51,450
late 1990s GCC completely forked and

00:12:49,170 --> 00:12:55,440
that fork eventually became the official

00:12:51,450 --> 00:12:58,050
version of GCC and of course our Python

00:12:55,440 --> 00:13:00,330
3 before we realize there was a common

00:12:58,050 --> 00:13:02,370
subset we spent a lot of effort as a

00:13:00,330 --> 00:13:04,440
community trying to convince people to

00:13:02,370 --> 00:13:07,200
move over to what was an entirely

00:13:04,440 --> 00:13:09,090
different programming language and this

00:13:07,200 --> 00:13:11,310
was seen as a wholesale change for the

00:13:09,090 --> 00:13:15,510
vast majority of Python developers even

00:13:11,310 --> 00:13:18,300
if it is not these days so with change

00:13:15,510 --> 00:13:20,340
comes risk open source projects they run

00:13:18,300 --> 00:13:21,300
mostly by volunteers have a few that you

00:13:20,340 --> 00:13:24,510
need to consider

00:13:21,300 --> 00:13:26,430
specifically bike shedding is when you

00:13:24,510 --> 00:13:29,339
have endless arguments over relatively

00:13:26,430 --> 00:13:32,070
minor details of a large proposal rather

00:13:29,339 --> 00:13:35,490
than substantive engagement in big

00:13:32,070 --> 00:13:38,160
issues bike shedding is really really

00:13:35,490 --> 00:13:40,980
common in volunteer projects because

00:13:38,160 --> 00:13:44,100
commenting on small things takes a very

00:13:40,980 --> 00:13:46,740
small time commitment but if you want to

00:13:44,100 --> 00:13:49,050
make comments on large-scale things you

00:13:46,740 --> 00:13:50,940
need to make an equivalent time

00:13:49,050 --> 00:13:53,070
commitment in order to understand the

00:13:50,940 --> 00:13:56,910
rationale and the effects of a larger

00:13:53,070 --> 00:13:58,740
scale change bike shedding is a waste of

00:13:56,910 --> 00:14:00,930
time and it generally leads to key

00:13:58,740 --> 00:14:02,910
architectural decisions not getting the

00:14:00,930 --> 00:14:05,130
scrutiny they deserve and this is often

00:14:02,910 --> 00:14:09,450
because volume of comment is mistaken

00:14:05,130 --> 00:14:12,690
for rigor bike shedding should be

00:14:09,450 --> 00:14:15,209
considered inevitable but reduction of

00:14:12,690 --> 00:14:18,510
it at opportunity moments at inopportune

00:14:15,209 --> 00:14:20,370
moments is key I focusing on code over

00:14:18,510 --> 00:14:22,709
planning meetings is a really good way

00:14:20,370 --> 00:14:24,060
to do this have working code that people

00:14:22,709 --> 00:14:29,160
can comment on rather than giant

00:14:24,060 --> 00:14:31,860
proposals open source projects uniquely

00:14:29,160 --> 00:14:33,209
are susceptible to forking and forking

00:14:31,860 --> 00:14:35,640
is not just going and clicking a button

00:14:33,209 --> 00:14:38,220
on github it's when an entire community

00:14:35,640 --> 00:14:40,470
breaks apart because some members want

00:14:38,220 --> 00:14:42,149
to focus on one priority where other

00:14:40,470 --> 00:14:43,470
members want to focus on something

00:14:42,149 --> 00:14:47,000
different and these things are

00:14:43,470 --> 00:14:49,380
diametrically opposed and whilst it's

00:14:47,000 --> 00:14:52,500
something that you don't need to avoid

00:14:49,380 --> 00:14:55,380
at all costs losing volunteers on your

00:14:52,500 --> 00:14:56,940
efforts can hurt so consider why you

00:14:55,380 --> 00:14:58,800
want to maintain all of your volunteers

00:14:56,940 --> 00:15:00,720
and what you can do to keep them on

00:14:58,800 --> 00:15:03,540
board and what needs of theirs you can

00:15:00,720 --> 00:15:06,329
meet that said you know don't try and

00:15:03,540 --> 00:15:08,910
force people to keep working on old code

00:15:06,329 --> 00:15:10,800
that they don't want to work on and if

00:15:08,910 --> 00:15:12,149
they want to do that you know and not

00:15:10,800 --> 00:15:13,920
work on your things and it's probably

00:15:12,149 --> 00:15:16,260
not you're not worth your while to force

00:15:13,920 --> 00:15:18,420
them because they'll probably disappear

00:15:16,260 --> 00:15:20,490
anyway and in the process it can also

00:15:18,420 --> 00:15:24,750
reduce morale across entirety of your

00:15:20,490 --> 00:15:26,940
team so after you've decided that change

00:15:24,750 --> 00:15:28,980
is necessary you need to consider how to

00:15:26,940 --> 00:15:32,339
make people in your community want to

00:15:28,980 --> 00:15:33,779
make the same changes as you do so the

00:15:32,339 --> 00:15:35,070
more central the thing that you're

00:15:33,779 --> 00:15:37,110
trying to change in

00:15:35,070 --> 00:15:39,270
your project the greater the amount of

00:15:37,110 --> 00:15:41,340
the project and the peak people involved

00:15:39,270 --> 00:15:42,990
that you're going to affect generally if

00:15:41,340 --> 00:15:46,590
something exists in your project

00:15:42,990 --> 00:15:49,230
somebody owns it there might be a user

00:15:46,590 --> 00:15:52,710
whose ability to work is affected if it

00:15:49,230 --> 00:15:54,540
stops being there give fair

00:15:52,710 --> 00:15:56,820
consideration so whose needs are more

00:15:54,540 --> 00:15:59,340
important focusing on the needs of

00:15:56,820 --> 00:16:00,870
current developers will often help you

00:15:59,340 --> 00:16:03,930
maintain momentum with your current

00:16:00,870 --> 00:16:06,240
contributor base but focusing on the

00:16:03,930 --> 00:16:08,520
needs of end users can lead to growing

00:16:06,240 --> 00:16:11,340
your user and your contributor base if

00:16:08,520 --> 00:16:14,280
you're having difficulty attracting new

00:16:11,340 --> 00:16:16,230
developer new contributors focusing on

00:16:14,280 --> 00:16:21,000
the needs of your existing developer

00:16:16,230 --> 00:16:23,460
team might not be the right idea an inn

00:16:21,000 --> 00:16:26,010
lca's case even though our change is

00:16:23,460 --> 00:16:29,040
motivated by fixing issues with end user

00:16:26,010 --> 00:16:31,980
usability we made the decision to adopt

00:16:29,040 --> 00:16:34,830
a base platform with an existing with a

00:16:31,980 --> 00:16:37,140
significant existing developer community

00:16:34,830 --> 00:16:40,710
and this increased the support base for

00:16:37,140 --> 00:16:42,060
our developers because we can go and ask

00:16:40,710 --> 00:16:43,590
people who aren't involved with the

00:16:42,060 --> 00:16:48,450
conference for help rather than

00:16:43,590 --> 00:16:50,190
overburdening our own people start by

00:16:48,450 --> 00:16:54,000
speaking to the people who you know will

00:16:50,190 --> 00:16:55,770
most benefit getting support is a really

00:16:54,000 --> 00:16:57,900
good idea before going and taking

00:16:55,770 --> 00:17:02,670
changes to people who might offer

00:16:57,900 --> 00:17:04,070
resistance offer a clear pathway to

00:17:02,670 --> 00:17:06,510
achieving the changes that you want

00:17:04,070 --> 00:17:08,610
figure out what your end goal is are

00:17:06,510 --> 00:17:11,310
there intermediate steps that you can

00:17:08,610 --> 00:17:12,900
take where you'll need help can you

00:17:11,310 --> 00:17:15,540
evaluate whether what you're doing is

00:17:12,900 --> 00:17:17,040
worthwhile and likely to succeed before

00:17:15,540 --> 00:17:20,699
you go and make the effort to convert

00:17:17,040 --> 00:17:22,770
the entire community in our case we've

00:17:20,699 --> 00:17:25,110
set deadlines and agreed on deadlines

00:17:22,770 --> 00:17:27,630
for evaluating the functionality of new

00:17:25,110 --> 00:17:29,850
software before we undertook any

00:17:27,630 --> 00:17:31,320
development work so we knew when we

00:17:29,850 --> 00:17:34,260
could have bought the project of

00:17:31,320 --> 00:17:36,120
changing over our software we knew when

00:17:34,260 --> 00:17:40,830
things would need to appear viable

00:17:36,120 --> 00:17:42,660
before we could commit to it so once

00:17:40,830 --> 00:17:44,940
you've advocated for the need for chain

00:17:42,660 --> 00:17:47,590
you need to figure out how to which how

00:17:44,940 --> 00:17:50,559
to affect it

00:17:47,590 --> 00:17:53,650
in general a community will not accept

00:17:50,559 --> 00:17:57,700
complete immediate change by dictum with

00:17:53,650 --> 00:17:59,710
very very very few exceptions because

00:17:57,700 --> 00:18:02,980
people in an open source project are

00:17:59,710 --> 00:18:04,299
volunteers and you know they won't

00:18:02,980 --> 00:18:07,230
decide to do something just because

00:18:04,299 --> 00:18:09,669
their project lead tells them to do it

00:18:07,230 --> 00:18:11,080
stuff in open-source tends to happen

00:18:09,669 --> 00:18:14,919
because people are there because they

00:18:11,080 --> 00:18:16,539
have itches to scratch deciding that you

00:18:14,919 --> 00:18:18,159
as a project leader going through a

00:18:16,539 --> 00:18:20,020
whole pile of work does not mean that

00:18:18,159 --> 00:18:22,240
everybody else in your project is going

00:18:20,020 --> 00:18:24,460
to have the same vision especially if

00:18:22,240 --> 00:18:26,760
there is no clear immediate benefit to

00:18:24,460 --> 00:18:29,110
their contributors to those contributors

00:18:26,760 --> 00:18:32,470
so if you're in a community that centers

00:18:29,110 --> 00:18:34,240
around code being able to say this is

00:18:32,470 --> 00:18:36,460
what we can do is generally a better

00:18:34,240 --> 00:18:39,880
thing to say then wouldn't it be good if

00:18:36,460 --> 00:18:41,890
we could do this thing and this comes

00:18:39,880 --> 00:18:43,960
down to giving your volunteers a really

00:18:41,890 --> 00:18:46,419
clear pathway towards the end goal at

00:18:43,960 --> 00:18:48,010
all times making it obvious the prozac

00:18:46,419 --> 00:18:49,630
progress is being made towards solving

00:18:48,010 --> 00:18:51,340
the problems that they may have had and

00:18:49,630 --> 00:18:55,690
making it clear that their problems

00:18:51,340 --> 00:18:59,039
might be being solved in general working

00:18:55,690 --> 00:19:04,179
code will always prevent bike shedding

00:18:59,039 --> 00:19:06,130
very very reliably so it doesn't always

00:19:04,179 --> 00:19:10,450
make sense to involve every single

00:19:06,130 --> 00:19:12,220
stakeholder in a project there'll be

00:19:10,450 --> 00:19:14,440
people in a project who believe that

00:19:12,220 --> 00:19:16,929
what they're doing is fine and the

00:19:14,440 --> 00:19:18,580
status quo is fine for them these are

00:19:16,929 --> 00:19:20,110
the sorts of people who do not have much

00:19:18,580 --> 00:19:22,559
incentive to change and will always

00:19:20,110 --> 00:19:24,730
offer it will often offer resistance

00:19:22,559 --> 00:19:27,429
instead find the people who have

00:19:24,730 --> 00:19:28,570
difficulty with the status quo or are

00:19:27,429 --> 00:19:30,640
being let down with the current

00:19:28,570 --> 00:19:33,340
direction of your project because these

00:19:30,640 --> 00:19:36,700
are the sorts of people who can who you

00:19:33,340 --> 00:19:38,169
can most obviously help volunteers tend

00:19:36,700 --> 00:19:40,720
to be in your community because they

00:19:38,169 --> 00:19:45,130
want to work with you so try and enable

00:19:40,720 --> 00:19:46,809
them to do things and getting engagement

00:19:45,130 --> 00:19:48,610
out of a community tends to work best

00:19:46,809 --> 00:19:51,039
when you have a proposal for people to

00:19:48,610 --> 00:19:52,809
hack on and improve so go and involve

00:19:51,039 --> 00:19:55,750
people once you have something that they

00:19:52,809 --> 00:19:58,960
can work on but never exclude people

00:19:55,750 --> 00:20:00,820
permanently involving the right people

00:19:58,960 --> 00:20:01,330
at the right time means that you can

00:20:00,820 --> 00:20:03,160
have

00:20:01,330 --> 00:20:04,950
to control over the sorts of resistance

00:20:03,160 --> 00:20:07,810
that you have to a projects change

00:20:04,950 --> 00:20:09,790
having a working prototype or mostly

00:20:07,810 --> 00:20:11,950
finished product means you can change

00:20:09,790 --> 00:20:14,380
the decision from should we start this

00:20:11,950 --> 00:20:17,020
work too should we adopt this change and

00:20:14,380 --> 00:20:21,910
the second question is a much easier one

00:20:17,020 --> 00:20:23,710
for a community to assess sometimes the

00:20:21,910 --> 00:20:26,170
energy required to get a project up and

00:20:23,710 --> 00:20:28,090
running can exceed what you as a

00:20:26,170 --> 00:20:30,430
volunteer have to do in a weekend or a

00:20:28,090 --> 00:20:32,290
couple of weekends there are a couple of

00:20:30,430 --> 00:20:35,140
organizations out there who can offer

00:20:32,290 --> 00:20:37,870
grants for doing significant open-source

00:20:35,140 --> 00:20:39,550
work or can help you raise the funds in

00:20:37,870 --> 00:20:42,610
order to achieve an initial working

00:20:39,550 --> 00:20:44,920
project my conference management work

00:20:42,610 --> 00:20:47,020
has been funded in by the Python

00:20:44,920 --> 00:20:49,150
Software Foundation they offer grants

00:20:47,020 --> 00:20:51,880
for people doing open source software

00:20:49,150 --> 00:20:53,950
development I've seen programs from

00:20:51,880 --> 00:20:55,870
other various foundations also used a

00:20:53,950 --> 00:20:58,600
similar effect I've also seen

00:20:55,870 --> 00:21:00,640
kickstarter and patreon use to to

00:20:58,600 --> 00:21:05,410
reasonable effects to kick off or

00:21:00,640 --> 00:21:07,050
maintain project's success once you go

00:21:05,410 --> 00:21:09,250
off and do the things you expect to do

00:21:07,050 --> 00:21:10,870
involve people throughout the progress

00:21:09,250 --> 00:21:12,700
make sure you're doing the right thing

00:21:10,870 --> 00:21:15,520
and that you bring the community with

00:21:12,700 --> 00:21:18,580
you keep people's expectations managed

00:21:15,520 --> 00:21:20,620
my grant work with the psf has has meant

00:21:18,580 --> 00:21:23,140
that I needed to give regular status

00:21:20,620 --> 00:21:25,510
updates but I've also involved other

00:21:23,140 --> 00:21:27,190
potential contributors and LCA team

00:21:25,510 --> 00:21:28,780
members throughout this process they

00:21:27,190 --> 00:21:33,340
know where things are at as I develop

00:21:28,780 --> 00:21:36,190
things and sometimes your attempts will

00:21:33,340 --> 00:21:37,990
not work and that's okay just make sure

00:21:36,190 --> 00:21:39,700
that if you are going to fail you're

00:21:37,990 --> 00:21:41,860
failing for the right reasons you know

00:21:39,700 --> 00:21:43,000
that your ideas were flawed or that

00:21:41,860 --> 00:21:45,250
there are better solutions to the

00:21:43,000 --> 00:21:46,480
problems that your trial and not because

00:21:45,250 --> 00:21:49,780
you've gone and dealt with your

00:21:46,480 --> 00:21:52,240
community in the wrong way and that is

00:21:49,780 --> 00:21:55,270
the end of my slides I have time for

00:21:52,240 --> 00:21:59,700
questions comments bike shedding things

00:21:55,270 --> 00:21:59,700
like that thanks

00:22:03,840 --> 00:22:17,790
we got a couple of minutes are about 10

00:22:08,740 --> 00:22:20,980
minutes for questions what's by cheating

00:22:17,790 --> 00:22:25,059
I invite you to go and watch the video

00:22:20,980 --> 00:22:29,110
at some point it is when people waste

00:22:25,059 --> 00:22:31,179
time discussing discussing pointless

00:22:29,110 --> 00:22:32,860
things but I did have a whole slide on

00:22:31,179 --> 00:22:37,030
it you can review the slides in my notes

00:22:32,860 --> 00:22:39,130
later on you're doing some work on an

00:22:37,030 --> 00:22:41,290
open source project for an open source

00:22:39,130 --> 00:22:43,299
community I've have a similar problem

00:22:41,290 --> 00:22:45,549
where I've have some code that I've

00:22:43,299 --> 00:22:47,230
written for a sporting community and I

00:22:45,549 --> 00:22:49,030
think it would be great to have people

00:22:47,230 --> 00:22:50,950
helping me out in doing that because

00:22:49,030 --> 00:22:54,580
I've obviously got a an opinion on it

00:22:50,950 --> 00:22:56,110
how do you think it can be how can you

00:22:54,580 --> 00:22:57,940
attract people to your problem when

00:22:56,110 --> 00:22:59,500
they're not necessarily all developers

00:22:57,940 --> 00:23:00,790
so most of the people who will benefit

00:22:59,500 --> 00:23:02,500
from my software aren't actually

00:23:00,790 --> 00:23:07,660
developers how do I go about building a

00:23:02,500 --> 00:23:09,250
community around that so I'm assuming

00:23:07,660 --> 00:23:11,830
that the sorts of people you're dealing

00:23:09,250 --> 00:23:14,860
with our users of the software that you

00:23:11,830 --> 00:23:16,360
have developed ask them what they what

00:23:14,860 --> 00:23:18,970
they think of it where they are having

00:23:16,360 --> 00:23:22,960
difficulties with it have links for

00:23:18,970 --> 00:23:24,370
feedback and ask questions sit down with

00:23:22,960 --> 00:23:25,960
people and see if they are having

00:23:24,370 --> 00:23:28,090
difficulty with things or if there are

00:23:25,960 --> 00:23:29,830
things that they want you have a whole

00:23:28,090 --> 00:23:31,210
series of stakeholders in your community

00:23:29,830 --> 00:23:33,280
regardless of whether or not they're

00:23:31,210 --> 00:23:35,340
developers in the case of open source

00:23:33,280 --> 00:23:37,540
communities we have a significant number

00:23:35,340 --> 00:23:42,580
of members of our communities who are

00:23:37,540 --> 00:23:44,470
developers but generally the people who

00:23:42,580 --> 00:23:46,480
are not developers will exist in every

00:23:44,470 --> 00:23:49,110
sort of community rather they whether

00:23:46,480 --> 00:23:52,090
they had developer focused or not so

00:23:49,110 --> 00:23:53,860
treat them as valuable stakeholders talk

00:23:52,090 --> 00:23:57,600
to them see what their difficulties are

00:23:53,860 --> 00:24:01,900
and see if you can help meet their needs

00:23:57,600 --> 00:24:03,630
Chris thanks the talk what what

00:24:01,900 --> 00:24:07,030
parallels and differences do you see

00:24:03,630 --> 00:24:09,309
with this kind of skill set for working

00:24:07,030 --> 00:24:11,620
within an organization and compared to

00:24:09,309 --> 00:24:13,390
working in an open source community it

00:24:11,620 --> 00:24:16,650
seems like there is a lot of overlap but

00:24:13,390 --> 00:24:16,650
there are differences as well

00:24:19,290 --> 00:24:24,310
so I'm not a tech manager and I haven't

00:24:22,390 --> 00:24:26,760
been paid to manage before so I do not

00:24:24,310 --> 00:24:30,370
have any real expertise in the sorts of

00:24:26,760 --> 00:24:33,220
in the sorts of decisions that you might

00:24:30,370 --> 00:24:34,930
need to make in that case and there are

00:24:33,220 --> 00:24:36,610
people who are better at managing than I

00:24:34,930 --> 00:24:38,770
am and I don't really want to preempt

00:24:36,610 --> 00:24:44,890
their opinions but thank you for the

00:24:38,770 --> 00:24:48,090
question hi so what can you advise to a

00:24:44,890 --> 00:24:51,100
project which has some contributors

00:24:48,090 --> 00:24:54,100
occasional but the users are mostly

00:24:51,100 --> 00:24:56,680
silent and you don't really know what

00:24:54,100 --> 00:24:58,300
the main what exactly what the

00:24:56,680 --> 00:24:59,920
environment is a problem they're trying

00:24:58,300 --> 00:25:02,230
to solve so perhaps some kind of

00:24:59,920 --> 00:25:03,520
telemetry to get some hard data of how

00:25:02,230 --> 00:25:10,170
your libraries used or something like

00:25:03,520 --> 00:25:13,120
that um find a way to ask people I

00:25:10,170 --> 00:25:15,040
people walk people are generally well

00:25:13,120 --> 00:25:16,690
intended and if you are if you can track

00:25:15,040 --> 00:25:18,220
people down and ask them how they are

00:25:16,690 --> 00:25:21,970
going about things they will probably

00:25:18,220 --> 00:25:23,260
offer you answers but assuming that

00:25:21,970 --> 00:25:24,520
people are going to come out of the

00:25:23,260 --> 00:25:26,830
woodwork without giving them an

00:25:24,520 --> 00:25:29,620
opportunity to or inviting them to is

00:25:26,830 --> 00:25:32,200
not a great idea people stay silent if

00:25:29,620 --> 00:25:36,310
you don't actually go out and seek them

00:25:32,200 --> 00:25:38,170
out I've got one here yeah it sort of

00:25:36,310 --> 00:25:41,230
following on from what people have asked

00:25:38,170 --> 00:25:42,970
about these are issues that are pretty

00:25:41,230 --> 00:25:45,070
common around managing humans in general

00:25:42,970 --> 00:25:47,170
and organizational change have there

00:25:45,070 --> 00:25:49,510
been specific resources that you've

00:25:47,170 --> 00:25:51,490
found useful in learning about how to do

00:25:49,510 --> 00:25:55,750
this that you would encourage people to

00:25:51,490 --> 00:25:57,640
go and look at I'll need to get back to

00:25:55,750 --> 00:25:58,690
you I I do but they're sitting in the

00:25:57,640 --> 00:26:03,070
back of my head and I haven't been

00:25:58,690 --> 00:26:05,680
thinking about them that much great talk

00:26:03,070 --> 00:26:10,540
thank you thank you what was the most

00:26:05,680 --> 00:26:14,080
surprising thing in this journey like

00:26:10,540 --> 00:26:18,730
where did you go wait what just happened

00:26:14,080 --> 00:26:21,940
I was expecting to have a much more

00:26:18,730 --> 00:26:23,320
difficult path to convincing the LC 18

00:26:21,940 --> 00:26:28,960
that we should try something completely

00:26:23,320 --> 00:26:30,610
new that's because with pike on

00:26:28,960 --> 00:26:32,620
there had been a great deal of

00:26:30,610 --> 00:26:34,360
resistance into moving off of what we

00:26:32,620 --> 00:26:35,950
were what we're familiar with there is a

00:26:34,360 --> 00:26:40,020
bit more organizational constant

00:26:35,950 --> 00:26:44,200
continuity in pycon than there is in LCA

00:26:40,020 --> 00:26:48,730
but it was easy to make the initial

00:26:44,200 --> 00:26:50,350
decisions which surprised me but some so

00:26:48,730 --> 00:26:52,480
given that you had failed so many times

00:26:50,350 --> 00:26:56,020
before and then sort of suddenly

00:26:52,480 --> 00:26:59,169
magically succeeded did your failure

00:26:56,020 --> 00:27:02,320
actually mm greatly inform your process

00:26:59,169 --> 00:27:04,480
to win documenting the reasons for

00:27:02,320 --> 00:27:08,919
wanting to make a change was very very

00:27:04,480 --> 00:27:10,510
useful having detailed reasons for where

00:27:08,919 --> 00:27:13,029
things were problematic and what

00:27:10,510 --> 00:27:16,299
problems we were going to face into the

00:27:13,029 --> 00:27:18,580
future I think convinced convince some

00:27:16,299 --> 00:27:20,950
of the people i can see craig nodding so

00:27:18,580 --> 00:27:24,039
that's a good sign craig is my second in

00:27:20,950 --> 00:27:36,250
command on the LCA team so he certainly

00:27:24,039 --> 00:27:38,169
he certainly thinks so so so knowing

00:27:36,250 --> 00:27:39,309
that knowing the reasons why you want to

00:27:38,169 --> 00:27:41,230
make the change and being able to

00:27:39,309 --> 00:27:44,140
justify it with some degree of

00:27:41,230 --> 00:27:46,539
experience was very very useful and I

00:27:44,140 --> 00:27:50,260
think that was not really in place for a

00:27:46,539 --> 00:27:51,880
couple of years of Pike on so Chris I do

00:27:50,260 --> 00:27:53,649
actually have a question yes great may

00:27:51,880 --> 00:27:55,240
have preempted it do you think your

00:27:53,649 --> 00:27:57,159
success is because you've got an

00:27:55,240 --> 00:28:03,039
absolutely amazing team for LCA next

00:27:57,159 --> 00:28:11,159
year my second in charge is a terrible

00:28:03,039 --> 00:28:11,159
human being but otherwise anyone else oh

00:28:12,029 --> 00:28:18,640
there is one more question great um in a

00:28:17,440 --> 00:28:21,789
lot of these sort of volunteer

00:28:18,640 --> 00:28:24,490
situations you find that you get people

00:28:21,789 --> 00:28:27,039
are really enthusiastic and you know

00:28:24,490 --> 00:28:29,409
both feed in and ready to contribute and

00:28:27,039 --> 00:28:31,270
then they drop off really quickly is

00:28:29,409 --> 00:28:32,380
that sort of a common problem you have

00:28:31,270 --> 00:28:33,429
to deal with where it's like look I've

00:28:32,380 --> 00:28:35,440
got all these people and they're really

00:28:33,429 --> 00:28:38,020
keen and then suddenly after saying

00:28:35,440 --> 00:28:40,990
they'll do a lot yeah they drop off and

00:28:38,020 --> 00:28:42,130
you have to sort of manage yeah you know

00:28:40,990 --> 00:28:42,550
how many people were actually going to

00:28:42,130 --> 00:28:43,690
have work

00:28:42,550 --> 00:28:47,560
something as opposed to hand in

00:28:43,690 --> 00:28:50,650
promising to do yes that isn't that is

00:28:47,560 --> 00:28:52,600
indeed a problem I invite you to go back

00:28:50,650 --> 00:28:54,850
and look at Vicky's talk from the

00:28:52,600 --> 00:28:56,890
previous session you can find it on the

00:28:54,850 --> 00:28:58,050
note no there will be a video that's the

00:28:56,890 --> 00:28:59,950
word I need to tell you there will be

00:28:58,050 --> 00:29:03,340
exceeded there will be a video of

00:28:59,950 --> 00:29:07,930
Vicky's talk on drive-thru contributions

00:29:03,340 --> 00:29:11,220
which discusses a lot of the the ways

00:29:07,930 --> 00:29:14,080
you as a project can improve

00:29:11,220 --> 00:29:15,730
sustainability even when you have very

00:29:14,080 --> 00:29:18,580
short-term engagements from your

00:29:15,730 --> 00:29:19,990
contributors but that talk covers that

00:29:18,580 --> 00:29:24,990
much better than I could it and in much

00:29:19,990 --> 00:29:33,070
better detail thank you Chris for this

00:29:24,990 --> 00:29:35,260
pretty great are all returning your

00:29:33,070 --> 00:29:37,620
paper yesterday and thank you thank you

00:29:35,260 --> 00:29:37,620

YouTube URL: https://www.youtube.com/watch?v=E_MISqK6pI4


