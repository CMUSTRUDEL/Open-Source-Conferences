Title: Python for science, side projects and stuff!
Publication date: 2016-08-16
Playlist: Pycon Australia 2016
Description: 
	Andrew Lonsdale
https://2016.pycon-au.org/schedule/85/view_talk
There are many serious reasons why Python is a great language for scientific research but in this talk I will propose an alternative reason; Python is great for scientific research because of all the other non-scientific things you can do with it!

Research data can take a long time to generate, and researchers may never know when certain programming skills will be needed. Since you’re going to procrastinate on side projects anyway, using Python in those side projects is a great way to improve your skills until they are needed. Using my own experiences in computational biology research,  I’ll go through how the use of Python for web scraping and data visualisation in several diversions, distractions and other side projects ultimately helped my research. 

I’ll also outline how the general-purpose nature of Python can come in handy for teaching and outreach, and how packages like Django can allow for efficiently creating infrastructure around research data and analysis.  There is more to research than doing research, and more to scientific programming in Python than the usual suspects in SciPy. In this talk I’ll argue that using Python for side projects and harebrained schemes is essential preparation for all of the other legitimate reasons to use Python to solve scientific problems.
Captions: 
	00:00:00,000 --> 00:00:05,250
next up we have Andrew lonsdale andrew

00:00:02,879 --> 00:00:07,859
is a PhD candidate using bioinformatics

00:00:05,250 --> 00:00:10,290
approaches to study plant cell walls in

00:00:07,859 --> 00:00:12,719
the aarc center of excellence in plant

00:00:10,290 --> 00:00:14,580
cell walls he is a software and data

00:00:12,719 --> 00:00:16,859
carpentry and structure and is also

00:00:14,580 --> 00:00:18,840
involved in community groups such as the

00:00:16,859 --> 00:00:21,689
Australian bioinformatics and

00:00:18,840 --> 00:00:24,390
computational biology society please

00:00:21,689 --> 00:00:28,460
welcome Andrew and his talk pet Python

00:00:24,390 --> 00:00:28,460
for science side projects and stuff

00:00:31,250 --> 00:00:34,559
thank you very much the introduction and

00:00:33,180 --> 00:00:38,010
thank you to the organizers for this

00:00:34,559 --> 00:00:39,960
chance to talk at PyCon so I'm going to

00:00:38,010 --> 00:00:42,450
do Python for science side projects and

00:00:39,960 --> 00:00:44,239
stuff and from the title you might be

00:00:42,450 --> 00:00:47,610
expecting a bit of a mixed bag of a talk

00:00:44,239 --> 00:00:50,250
you could be right but I want to do is

00:00:47,610 --> 00:00:52,620
in the frame is a story and the story of

00:00:50,250 --> 00:00:55,230
a side project how I got distracted from

00:00:52,620 --> 00:00:57,239
that side project eventually return to

00:00:55,230 --> 00:00:59,550
it and in the middle little whole lot of

00:00:57,239 --> 00:01:02,730
Python but first let's start with some

00:00:59,550 --> 00:01:05,970
definitions so I'm saying it's Python

00:01:02,730 --> 00:01:08,460
for science now I think science is more

00:01:05,970 --> 00:01:11,970
than just doing the science and there's

00:01:08,460 --> 00:01:13,950
being a scientist and also just doing

00:01:11,970 --> 00:01:16,500
science and I think we heard the mini

00:01:13,950 --> 00:01:18,780
comp yesterday the Python is really good

00:01:16,500 --> 00:01:20,909
for science but I'm going to try and get

00:01:18,780 --> 00:01:25,200
across in this talk is I think python is

00:01:20,909 --> 00:01:26,250
also good for being a scientist I say

00:01:25,200 --> 00:01:27,950
being a scientist I'm talking about

00:01:26,250 --> 00:01:32,060
things like sharing your data and

00:01:27,950 --> 00:01:34,610
teaching networking in a social sense

00:01:32,060 --> 00:01:40,770
communication publications and

00:01:34,610 --> 00:01:43,670
visualizing your results so the science

00:01:40,770 --> 00:01:45,810
being a scientist side projects

00:01:43,670 --> 00:01:47,790
collaborations or projects outside the

00:01:45,810 --> 00:01:49,950
scope of your research sometimes very

00:01:47,790 --> 00:01:52,530
very far out the scope of your research

00:01:49,950 --> 00:01:54,060
and also stuff from other python

00:01:52,530 --> 00:01:59,729
packages I've used along the way in

00:01:54,060 --> 00:02:02,340
passing or at least I plan to and side

00:01:59,729 --> 00:02:03,570
projects are a tricky thing sometimes

00:02:02,340 --> 00:02:04,920
you have to concentrate in your research

00:02:03,570 --> 00:02:06,540
and some time there's a little voice

00:02:04,920 --> 00:02:09,660
that says maybe you should just explore

00:02:06,540 --> 00:02:11,520
this idea and see where it goes I'd like

00:02:09,660 --> 00:02:14,450
to think that that voice comes from the

00:02:11,520 --> 00:02:14,450
side project devil

00:02:14,930 --> 00:02:19,350
so when you listen to sai project w Goff

00:02:17,430 --> 00:02:20,910
and you try other things and so there's

00:02:19,350 --> 00:02:23,430
other things I tried have led to be

00:02:20,910 --> 00:02:24,390
learning a bit of Python so I said we're

00:02:23,430 --> 00:02:25,890
looking at all these things the first

00:02:24,390 --> 00:02:28,490
thing I'll talk about is teaching so I

00:02:25,890 --> 00:02:30,810
think python is great for teaching i

00:02:28,490 --> 00:02:32,730
said i'm at a software carpentry and

00:02:30,810 --> 00:02:35,220
data carpet or instructor and i also

00:02:32,730 --> 00:02:37,170
teach with combine which is the student

00:02:35,220 --> 00:02:40,440
in korea allegory career researchers

00:02:37,170 --> 00:02:42,060
group for computational biology and he's

00:02:40,440 --> 00:02:44,160
maybe see associate with pike on there

00:02:42,060 --> 00:02:46,590
was the pre pike on data carpentry we

00:02:44,160 --> 00:02:47,700
had a couple of days ago and there's a

00:02:46,590 --> 00:02:49,380
really good experience and a lot of

00:02:47,700 --> 00:02:51,209
people from pike on and also others

00:02:49,380 --> 00:02:53,580
interested in python as a two-day course

00:02:51,209 --> 00:02:55,860
looking at data carpentry and using

00:02:53,580 --> 00:03:00,240
python primarily to teach the skills of

00:02:55,860 --> 00:03:02,490
data cleaning and data analysis give a

00:03:00,240 --> 00:03:04,470
shout out to Alistair and Daria and Sam

00:03:02,490 --> 00:03:07,530
who are the main drivers of that and a

00:03:04,470 --> 00:03:10,110
few of others who helped teach but it's

00:03:07,530 --> 00:03:12,840
a really really good opportunity and

00:03:10,110 --> 00:03:14,940
with teaching and Python I think the

00:03:12,840 --> 00:03:17,340
trick is that TZ python is a great

00:03:14,940 --> 00:03:18,420
language for learning which means

00:03:17,340 --> 00:03:19,709
there's lots of people to want to learn

00:03:18,420 --> 00:03:21,540
it and so if you know it you get an

00:03:19,709 --> 00:03:23,430
opportunity to teach and if you're an

00:03:21,540 --> 00:03:25,260
academic field where there's not many

00:03:23,430 --> 00:03:27,390
teaching opportunities it could be a

00:03:25,260 --> 00:03:29,040
small field or it could begin emerging

00:03:27,390 --> 00:03:30,540
field then it gives you a chance to

00:03:29,040 --> 00:03:33,120
teach that you might not otherwise get

00:03:30,540 --> 00:03:36,840
and it always constant demands with

00:03:33,120 --> 00:03:38,280
these kinds of workshops the other great

00:03:36,840 --> 00:03:41,390
thing about being a scientist that

00:03:38,280 --> 00:03:43,890
Python can help with this communication

00:03:41,390 --> 00:03:45,269
proceed presentations like this one are

00:03:43,890 --> 00:03:47,310
a key part of academia you have to

00:03:45,269 --> 00:03:48,510
present your research to get feedback

00:03:47,310 --> 00:03:52,290
and also promote the work that you're

00:03:48,510 --> 00:03:55,080
doing always tempted to use fancy things

00:03:52,290 --> 00:03:56,660
like reveal and rise live rivers of dupa

00:03:55,080 --> 00:04:00,080
notebooks and things like that to have a

00:03:56,660 --> 00:04:02,700
reproducible presentation but in the end

00:04:00,080 --> 00:04:04,019
it's hard to use these in an existing

00:04:02,700 --> 00:04:05,430
environment where people expect

00:04:04,019 --> 00:04:07,920
PowerPoint files they want to make

00:04:05,430 --> 00:04:10,170
comments on them send them back and I've

00:04:07,920 --> 00:04:14,250
had at least one live demo go wrong with

00:04:10,170 --> 00:04:16,680
trying to use a live notebook everyone

00:04:14,250 --> 00:04:18,600
expects PowerPoint PowerPoint files and

00:04:16,680 --> 00:04:22,080
so you might say look just go manually

00:04:18,600 --> 00:04:24,210
and use PowerPoint as on a solution the

00:04:22,080 --> 00:04:26,730
other one is python is to use python and

00:04:24,210 --> 00:04:29,370
go install python pptx

00:04:26,730 --> 00:04:31,860
and you can do that like I did for the

00:04:29,370 --> 00:04:33,480
first five slides of this talk you can

00:04:31,860 --> 00:04:35,820
see that i actually made them all just

00:04:33,480 --> 00:04:38,400
using pure python so you can set your

00:04:35,820 --> 00:04:42,090
title and your subtitles and add some

00:04:38,400 --> 00:04:43,560
images there and when you're sharing

00:04:42,090 --> 00:04:45,660
your results I think that's a great way

00:04:43,560 --> 00:04:47,280
of if you're doing all your analysis

00:04:45,660 --> 00:04:49,200
remotely you can collect them all

00:04:47,280 --> 00:04:53,580
package it into a presentation that

00:04:49,200 --> 00:04:55,320
might be in a nice form of supervisors

00:04:53,580 --> 00:04:58,380
or all collaborators and sends it off

00:04:55,320 --> 00:05:00,270
without sending in a PDF or saying it's

00:04:58,380 --> 00:05:01,830
on the web you can download and then you

00:05:00,270 --> 00:05:03,720
supervise this how can i comment on that

00:05:01,830 --> 00:05:08,670
and then you have a long conversation so

00:05:03,720 --> 00:05:09,930
I think that's that's really useful but

00:05:08,670 --> 00:05:11,880
I swear I'll degress now and say well

00:05:09,930 --> 00:05:13,350
how did I actually get here what am I

00:05:11,880 --> 00:05:17,730
talking about being a scientist and

00:05:13,350 --> 00:05:19,920
science and I actually came to

00:05:17,730 --> 00:05:21,650
bioinformatics a roundabout way so I

00:05:19,920 --> 00:05:24,240
originally studies software engineering

00:05:21,650 --> 00:05:28,140
I was working in web hosting and domain

00:05:24,240 --> 00:05:29,790
names and decided I wanted to change in

00:05:28,140 --> 00:05:31,590
my life so I had a big career change a

00:05:29,790 --> 00:05:33,630
few years ago and I went back to study

00:05:31,590 --> 00:05:35,910
bioinformatics and then I continued to

00:05:33,630 --> 00:05:39,210
work and study in bioinformatics looking

00:05:35,910 --> 00:05:41,190
at plants now a few of you might have

00:05:39,210 --> 00:05:42,630
seen a talk yesterday by daria on

00:05:41,190 --> 00:05:44,970
bioinformatics and i think is another

00:05:42,630 --> 00:05:46,680
one going on now and there been a lot of

00:05:44,970 --> 00:05:49,320
good official official definitions about

00:05:46,680 --> 00:05:50,550
what bio makes is in this conference but

00:05:49,320 --> 00:05:53,400
i thought i'd try and get it across

00:05:50,550 --> 00:05:58,560
succinctly so for me biomedicine working

00:05:53,400 --> 00:05:59,940
in plants is essentially this what

00:05:58,560 --> 00:06:02,520
you're doing is you're getting

00:05:59,940 --> 00:06:04,260
information about organisms in this case

00:06:02,520 --> 00:06:07,320
i'm getting information a terrible opsys

00:06:04,260 --> 00:06:10,250
which is a well-studied organism in the

00:06:07,320 --> 00:06:12,810
plant world and we use pokéballs or

00:06:10,250 --> 00:06:14,850
sequencing machines and mass

00:06:12,810 --> 00:06:19,220
spectrometry to get information about

00:06:14,850 --> 00:06:21,780
these organisms and then study them and

00:06:19,220 --> 00:06:23,280
my research in the center of water

00:06:21,780 --> 00:06:24,930
center of excellence in plant cells all

00:06:23,280 --> 00:06:29,160
that using computational approaches to

00:06:24,930 --> 00:06:30,990
look at plant proteins and computations

00:06:29,160 --> 00:06:34,410
for me really didn't always include

00:06:30,990 --> 00:06:36,840
Python so in my old life I did mostly

00:06:34,410 --> 00:06:39,450
pearl a bit of PhD and I did a little

00:06:36,840 --> 00:06:40,500
bit of C and Java in my studies now I

00:06:39,450 --> 00:06:42,840
use Python

00:06:40,500 --> 00:06:45,240
pretty much for everything I'd never

00:06:42,840 --> 00:06:48,990
really used it much before so the

00:06:45,240 --> 00:06:50,460
question is what happened to me and I'll

00:06:48,990 --> 00:06:53,340
try and frame the rest of this talk is a

00:06:50,460 --> 00:06:55,920
bit of a tale of two papers so as a

00:06:53,340 --> 00:06:57,930
paper published in 2014 and earlier this

00:06:55,920 --> 00:06:59,940
year and I talked about how there's a

00:06:57,930 --> 00:07:02,310
whole lot of Python all in the middle

00:06:59,940 --> 00:07:04,140
and how this sort of open the floodgates

00:07:02,310 --> 00:07:07,470
for me using Python in my research and

00:07:04,140 --> 00:07:11,460
around my research and some of the

00:07:07,470 --> 00:07:13,980
things I've learnt along the way so it

00:07:11,460 --> 00:07:18,210
snowed really with a journal club so we

00:07:13,980 --> 00:07:20,580
meet at the unsuitable Tom 8am every

00:07:18,210 --> 00:07:22,680
week but for some of us that's the only

00:07:20,580 --> 00:07:28,620
time in a week we're on campus at a at

00:07:22,680 --> 00:07:30,210
8am so it helps and one week in this

00:07:28,620 --> 00:07:32,040
journal club a few years ago we were

00:07:30,210 --> 00:07:34,590
looking at a collection of papers called

00:07:32,040 --> 00:07:36,930
the ten simple rules collection this is

00:07:34,590 --> 00:07:39,150
published y plus computational biology

00:07:36,930 --> 00:07:40,020
as says there it's a quick concentrated

00:07:39,150 --> 00:07:41,250
guide for mastering some the

00:07:40,020 --> 00:07:44,550
professional challenges research

00:07:41,250 --> 00:07:45,810
scientist face read a few of the

00:07:44,550 --> 00:07:47,070
articles i thought that will quite good

00:07:45,810 --> 00:07:49,169
and we were pretty pleased with our

00:07:47,070 --> 00:07:52,020
journal club howard been going so far so

00:07:49,169 --> 00:07:54,060
it's all maybe we can contribute we

00:07:52,020 --> 00:07:56,340
started a pretty rough draft of how

00:07:54,060 --> 00:07:59,520
agile clothing going with it collected

00:07:56,340 --> 00:08:00,870
some data and then herod said this

00:07:59,520 --> 00:08:02,280
actually be a lot easier if there was

00:08:00,870 --> 00:08:05,640
tense of rules for riding one of these

00:08:02,280 --> 00:08:09,630
ten simple rules that comment quickly

00:08:05,640 --> 00:08:14,000
escalated so later that year this came

00:08:09,630 --> 00:08:16,470
out and it was a lot of fun to write ah

00:08:14,000 --> 00:08:18,210
it was my first publication it's not

00:08:16,470 --> 00:08:20,669
what i expected my first publication to

00:08:18,210 --> 00:08:23,370
me not all my supervisors expected my

00:08:20,669 --> 00:08:26,580
first publication to be but it was it

00:08:23,370 --> 00:08:28,950
was a lot of fun and apart from the

00:08:26,580 --> 00:08:30,660
writing is philly casual tone had a lot

00:08:28,950 --> 00:08:32,940
of lump of fun with the plots in it and

00:08:30,660 --> 00:08:35,310
like we're good researchers we tested

00:08:32,940 --> 00:08:41,060
our assumptions we said how many rules

00:08:35,310 --> 00:08:41,060
are in a ten simple rules 10

00:08:43,070 --> 00:08:48,840
now if you might recognize that plot

00:08:46,340 --> 00:08:51,630
it's pretty much adapted straight from

00:08:48,840 --> 00:08:53,310
the matplotlib examples gallery and that

00:08:51,630 --> 00:08:58,020
end of course is based off like a

00:08:53,310 --> 00:09:00,480
classic XKCD what in there but along the

00:08:58,020 --> 00:09:02,400
way when I was testing this silly

00:09:00,480 --> 00:09:05,070
question of how many rules in a ten

00:09:02,400 --> 00:09:06,930
simple rules I learned some things so I

00:09:05,070 --> 00:09:08,040
used requests and beautiful soup in

00:09:06,930 --> 00:09:09,480
Python that I was pulling down the

00:09:08,040 --> 00:09:11,820
author information on each of these

00:09:09,480 --> 00:09:15,710
articles counting how many rules are in

00:09:11,820 --> 00:09:17,670
them taking out the authors manually and

00:09:15,710 --> 00:09:19,650
creating a few more plots for the

00:09:17,670 --> 00:09:22,260
publication so we looked at the authors

00:09:19,650 --> 00:09:24,090
and we looked at the founding editor of

00:09:22,260 --> 00:09:26,130
the series and we found that it

00:09:24,090 --> 00:09:31,170
definitely helped to be him to get an

00:09:26,130 --> 00:09:32,580
article in that series when he decided

00:09:31,170 --> 00:09:34,850
to collaborate with us that was really

00:09:32,580 --> 00:09:39,000
good because it put us in this section

00:09:34,850 --> 00:09:40,260
rather than the also around another

00:09:39,000 --> 00:09:42,030
thing we do is we look at the impact of

00:09:40,260 --> 00:09:45,720
these articles and you can see that

00:09:42,030 --> 00:09:47,340
nobody sites them at all but everybody

00:09:45,720 --> 00:09:49,110
reads them and I think that's the point

00:09:47,340 --> 00:09:50,310
that it's a very casual and gentle

00:09:49,110 --> 00:09:52,050
introduction to science and doing

00:09:50,310 --> 00:09:56,640
science I think that's why it's really a

00:09:52,050 --> 00:09:58,230
really popular series so I learn a few

00:09:56,640 --> 00:10:00,120
things from that that experience that

00:09:58,230 --> 00:10:03,540
side project and as it one was the power

00:10:00,120 --> 00:10:06,060
of Python I delved into the API back for

00:10:03,540 --> 00:10:07,680
this plot to actually pull in the amount

00:10:06,060 --> 00:10:10,590
of information citations and how many

00:10:07,680 --> 00:10:13,050
views by the article level metrics that

00:10:10,590 --> 00:10:14,520
plus at the time had by their API it's

00:10:13,050 --> 00:10:16,770
slightly changed now but is still out

00:10:14,520 --> 00:10:19,920
there and of course I wanted to use plot

00:10:16,770 --> 00:10:21,930
XKCD and really that this was the start

00:10:19,920 --> 00:10:24,480
and that pot lid was my gateway package

00:10:21,930 --> 00:10:28,070
once I started using that I was hooked

00:10:24,480 --> 00:10:30,930
on Python as just going on from there

00:10:28,070 --> 00:10:32,880
after that we did some Venn diagrams for

00:10:30,930 --> 00:10:34,050
some of my research i thought i'll try

00:10:32,880 --> 00:10:35,580
piling because i've just used it

00:10:34,050 --> 00:10:38,940
recently and it worked pretty well

00:10:35,580 --> 00:10:41,820
import matplotlib then and i thought

00:10:38,940 --> 00:10:44,550
well if it's matplotlib in and it's

00:10:41,820 --> 00:10:47,610
using matplotlib i wonder if you could

00:10:44,550 --> 00:10:51,660
take another XKCD comic and if you could

00:10:47,610 --> 00:10:54,450
make that as well and as you can

00:10:51,660 --> 00:10:56,610
so just by importing that pot lib and

00:10:54,450 --> 00:10:58,740
with a little bit of hacking to work out

00:10:56,610 --> 00:11:01,530
exactly where you want the bits of text

00:10:58,740 --> 00:11:07,260
to appear you can relatively easily

00:11:01,530 --> 00:11:09,750
recreate that comic in Python it's a

00:11:07,260 --> 00:11:11,460
trick I still used today and so on those

00:11:09,750 --> 00:11:14,820
first five slides they were images they

00:11:11,460 --> 00:11:16,320
will plots as well and again it's not

00:11:14,820 --> 00:11:19,140
very hard the hardest bit is getting the

00:11:16,320 --> 00:11:21,720
font download and these little little

00:11:19,140 --> 00:11:24,210
hack there to use it locally but

00:11:21,720 --> 00:11:26,640
otherwise you can create any Venn

00:11:24,210 --> 00:11:28,650
diagram you want use plot to annotate to

00:11:26,640 --> 00:11:31,440
put little bits of information on there

00:11:28,650 --> 00:11:33,060
and as it's quite easy and Venn diagrams

00:11:31,440 --> 00:11:35,550
are pretty common in science and so it

00:11:33,060 --> 00:11:39,690
is a trick that I think I'll use more

00:11:35,550 --> 00:11:40,950
and more as said in the tents of rules

00:11:39,690 --> 00:11:44,730
we looked at the metrics of some of

00:11:40,950 --> 00:11:47,610
those articles and there's a few other

00:11:44,730 --> 00:11:49,050
api's around there one day I thought

00:11:47,610 --> 00:11:50,310
instead of going to google scholar all

00:11:49,050 --> 00:11:52,590
the time I wonder if it'd be easier to

00:11:50,310 --> 00:11:53,910
pull information down but one of the

00:11:52,590 --> 00:11:56,160
lessons I've learnt is in Python

00:11:53,910 --> 00:11:58,500
someone's almost already done it and so

00:11:56,160 --> 00:12:00,660
if you look scholar dot pie is out there

00:11:58,500 --> 00:12:02,760
it's a gentle web scraping because

00:12:00,660 --> 00:12:04,710
Google obviously don't like or want or

00:12:02,760 --> 00:12:07,200
allow by the terms of service people to

00:12:04,710 --> 00:12:09,930
download all of google scholar but you

00:12:07,200 --> 00:12:13,170
can do fairly casually if you're just

00:12:09,930 --> 00:12:14,850
putting questions about an article or

00:12:13,170 --> 00:12:16,460
who cited it you can pull the

00:12:14,850 --> 00:12:20,160
information out of google scholar

00:12:16,460 --> 00:12:22,500
automatically with that another thing

00:12:20,160 --> 00:12:25,470
about being a scientist and that I think

00:12:22,500 --> 00:12:27,120
is really interesting is communicating

00:12:25,470 --> 00:12:29,250
not only with your own group with other

00:12:27,120 --> 00:12:31,020
so but within your own group and so

00:12:29,250 --> 00:12:32,700
we've come across slack and many

00:12:31,020 --> 00:12:34,530
research groups are starting using slack

00:12:32,700 --> 00:12:36,900
and of course they're Python libraries

00:12:34,530 --> 00:12:38,550
from interacting with slack and so I've

00:12:36,900 --> 00:12:41,700
started a few little slack BOTS and

00:12:38,550 --> 00:12:43,380
their online there so one interacts with

00:12:41,700 --> 00:12:45,270
the scholar script from before so you

00:12:43,380 --> 00:12:47,190
can build a slack bot that says who

00:12:45,270 --> 00:12:49,650
cited our great paper ten simple rules

00:12:47,190 --> 00:12:50,760
for applause simple rules and a scholar

00:12:49,650 --> 00:12:54,060
what will give you back the links

00:12:50,760 --> 00:12:55,830
straightaway of all they want so that's

00:12:54,060 --> 00:12:59,390
online if it wants to think and think of

00:12:55,830 --> 00:13:02,790
any more please feel free to add to them

00:12:59,390 --> 00:13:04,650
one more thing about being a part of a

00:13:02,790 --> 00:13:05,550
science is networking social in things

00:13:04,650 --> 00:13:06,810
like conferences

00:13:05,550 --> 00:13:09,600
and the conference is you can have a

00:13:06,810 --> 00:13:11,730
great talk like this one or you have a

00:13:09,600 --> 00:13:13,170
bad talk possibly like this one and you

00:13:11,730 --> 00:13:15,240
might be on Twitter and you're going

00:13:13,170 --> 00:13:18,390
away but even if you're on Twitter right

00:13:15,240 --> 00:13:19,980
now or on pike on channel on on slack

00:13:18,390 --> 00:13:21,330
you could be interacting with each other

00:13:19,980 --> 00:13:23,670
you could be collecting data about

00:13:21,330 --> 00:13:25,709
what's going on on Twitter or slack and

00:13:23,670 --> 00:13:27,480
you could interact with people so I've

00:13:25,709 --> 00:13:29,279
done that at conferences and you can see

00:13:27,480 --> 00:13:30,660
who's tweeting the most and then of

00:13:29,279 --> 00:13:32,459
course you fall back on your crunch of

00:13:30,660 --> 00:13:33,990
Matt plot of the event plot who had the

00:13:32,459 --> 00:13:35,850
most tweets and that was through a

00:13:33,990 --> 00:13:41,730
genomic technology conference a couple

00:13:35,850 --> 00:13:44,940
of years ago after learning all of these

00:13:41,730 --> 00:13:45,899
things finally it was trying to get back

00:13:44,940 --> 00:13:47,579
to the thing that we were rigidly we're

00:13:45,899 --> 00:13:49,410
going to do which was write the article

00:13:47,579 --> 00:13:52,079
about tensive rules for a journal club

00:13:49,410 --> 00:13:54,750
and took two years later but in the

00:13:52,079 --> 00:13:56,850
meantime I learnt a lot of Python and I

00:13:54,750 --> 00:13:59,610
said we kept the data and so into my old

00:13:56,850 --> 00:14:01,500
trick of course of plotting how how many

00:13:59,610 --> 00:14:04,410
people had turned up making sure they're

00:14:01,500 --> 00:14:10,560
running you that reading alone was not

00:14:04,410 --> 00:14:12,810
really a journal club question of course

00:14:10,560 --> 00:14:15,060
that you and supervisors my task is has

00:14:12,810 --> 00:14:17,640
it actually helped and I firmly believe

00:14:15,060 --> 00:14:21,060
it has so playing around with matplotlib

00:14:17,640 --> 00:14:23,579
I think a lot of research visualization

00:14:21,060 --> 00:14:25,110
I do now I've got such fine control if

00:14:23,579 --> 00:14:27,420
I'm doing custom plots I know exactly

00:14:25,110 --> 00:14:29,040
that I can change the color or the

00:14:27,420 --> 00:14:30,180
shading of any point on the plot and

00:14:29,040 --> 00:14:33,120
I've got a lot of confidence in how to

00:14:30,180 --> 00:14:34,760
do it the web scraping informed

00:14:33,120 --> 00:14:36,690
submission skills that I urge

00:14:34,760 --> 00:14:39,120
interacting with the ten simple rules

00:14:36,690 --> 00:14:41,550
list of articles have come in really

00:14:39,120 --> 00:14:43,200
handy looking at existing tools that are

00:14:41,550 --> 00:14:45,149
out there so many science tools are

00:14:43,200 --> 00:14:47,310
still in the web it's a single server it

00:14:45,149 --> 00:14:49,290
was written in PHP or pearl ten years

00:14:47,310 --> 00:14:50,910
ago no one's got going to get any credit

00:14:49,290 --> 00:14:53,250
to update it and it's going to stay

00:14:50,910 --> 00:14:54,390
online as long as the servers online so

00:14:53,250 --> 00:14:57,180
if you want to get results from that

00:14:54,390 --> 00:14:59,370
server you have to either manually post

00:14:57,180 --> 00:15:01,170
in single single sequence after single

00:14:59,370 --> 00:15:02,820
sequence all you need to write a script

00:15:01,170 --> 00:15:05,310
and so using things like rubber browser

00:15:02,820 --> 00:15:07,260
and requests you can take a whole lot of

00:15:05,310 --> 00:15:08,850
information that you need to get results

00:15:07,260 --> 00:15:11,310
on and send them one boy off overnight

00:15:08,850 --> 00:15:13,350
and not have to worry about it I said

00:15:11,310 --> 00:15:14,760
API calls was a great destruction

00:15:13,350 --> 00:15:16,649
because there's lots of public data out

00:15:14,760 --> 00:15:19,470
there and so although there are examples

00:15:16,649 --> 00:15:20,970
of these older API less

00:15:19,470 --> 00:15:23,040
services there's a lot of data out there

00:15:20,970 --> 00:15:25,140
that's got really modern API so you want

00:15:23,040 --> 00:15:27,210
to language that people have built tools

00:15:25,140 --> 00:15:29,670
and libraries for to use those kinds of

00:15:27,210 --> 00:15:32,010
things like breast fillet p is and of

00:15:29,670 --> 00:15:34,860
course I think just my general program

00:15:32,010 --> 00:15:36,270
Python in general has improved so things

00:15:34,860 --> 00:15:38,690
like decorators I hadn't really come

00:15:36,270 --> 00:15:41,160
across them before but the slack bot

00:15:38,690 --> 00:15:43,590
library uses it extensively to work out

00:15:41,160 --> 00:15:46,740
how to apply to individual individual

00:15:43,590 --> 00:15:48,090
threads and things like that so I

00:15:46,740 --> 00:15:50,640
thought of 10 simple rules for side

00:15:48,090 --> 00:15:53,100
projects as I was writing this talk and

00:15:50,640 --> 00:15:54,900
the fifth rule is you can start anywhere

00:15:53,100 --> 00:15:57,720
it doesn't have to be at the start it's

00:15:54,900 --> 00:15:59,580
just a side project rule two is you

00:15:57,720 --> 00:16:01,710
collaborate because if you do it on your

00:15:59,580 --> 00:16:03,870
own sometimes you forget and I found a

00:16:01,710 --> 00:16:06,030
lot of half-finished things preparing

00:16:03,870 --> 00:16:08,430
for this talk which I've finished for

00:16:06,030 --> 00:16:12,020
this talk and will not even have to

00:16:08,430 --> 00:16:17,040
finish and you can come back later on

00:16:12,020 --> 00:16:19,260
any order that you want so in summary I

00:16:17,040 --> 00:16:20,520
think python is really good for

00:16:19,260 --> 00:16:22,050
scientific research because it's the

00:16:20,520 --> 00:16:26,040
other things that you can do a round

00:16:22,050 --> 00:16:29,280
research that really help you do what

00:16:26,040 --> 00:16:30,510
comes easy so if you practice more with

00:16:29,280 --> 00:16:32,010
parts the next time you come from an

00:16:30,510 --> 00:16:33,510
obstacle you're not going to go to excel

00:16:32,010 --> 00:16:35,760
you could say I'm only going to do this

00:16:33,510 --> 00:16:37,230
once if you're really comfortable with

00:16:35,760 --> 00:16:39,030
Python you'll say I'll do it in Python

00:16:37,230 --> 00:16:41,040
because it's easiest to do in Python and

00:16:39,030 --> 00:16:43,830
then you'll always use a mortal months

00:16:41,040 --> 00:16:45,300
because that it always happens and I

00:16:43,830 --> 00:16:46,590
said you never actually know what skills

00:16:45,300 --> 00:16:48,600
you're going to need seem may as well

00:16:46,590 --> 00:16:51,630
get all the skills and hope that you'll

00:16:48,600 --> 00:16:54,240
use them later on so a little bit of

00:16:51,630 --> 00:16:56,280
logic at the end slide projector group

00:16:54,240 --> 00:16:57,990
of python python is good for science

00:16:56,280 --> 00:17:00,210
python is good for being a scientist

00:16:57,990 --> 00:17:04,350
therefore side projects are good for

00:17:00,210 --> 00:17:07,050
science and being a scientist it's

00:17:04,350 --> 00:17:09,210
infallible I like to really thank one

00:17:07,050 --> 00:17:11,040
person who took the Harriet dash now so

00:17:09,210 --> 00:17:13,380
she was co-author on both papers and

00:17:11,040 --> 00:17:15,770
helped a little side projects and a plug

00:17:13,380 --> 00:17:18,360
for her book elegant sci-fi is there

00:17:15,770 --> 00:17:19,980
just right there obviously didn't invite

00:17:18,360 --> 00:17:23,400
me to be an author because you know in

00:17:19,980 --> 00:17:24,900
elegant sci-fi is not a great title like

00:17:23,400 --> 00:17:27,860
to thank everyone in the journal club to

00:17:24,900 --> 00:17:31,230
help me out and combine the group there

00:17:27,860 --> 00:17:37,020
I have one more thing but it's a zero

00:17:31,230 --> 00:17:38,490
thing because indexing and base 0 there

00:17:37,020 --> 00:17:41,250
are a lot of really good talks on a pike

00:17:38,490 --> 00:17:43,230
on right now including up right now so I

00:17:41,250 --> 00:17:45,060
think to the left we've got Python from

00:17:43,230 --> 00:17:48,120
vine informatics which it I would have

00:17:45,060 --> 00:17:49,830
liked to have seen and the power and

00:17:48,120 --> 00:17:53,220
responsibility of Unicode adoption which

00:17:49,830 --> 00:17:57,450
looks really interesting and it runs

00:17:53,220 --> 00:17:59,400
here so some of you I wish I do both

00:17:57,450 --> 00:18:02,400
some of you may be regretting not going

00:17:59,400 --> 00:18:04,020
to one of those talks right now so I was

00:18:02,400 --> 00:18:06,300
thinking how can I help everybody up

00:18:04,020 --> 00:18:11,150
that didn't get to go to those talks and

00:18:06,300 --> 00:18:14,720
solution of course is a side project so

00:18:11,150 --> 00:18:18,900
fast Q is a format in bioinformatics and

00:18:14,720 --> 00:18:21,390
emojis are emojis so we represent

00:18:18,900 --> 00:18:23,730
biological sequences as letters in

00:18:21,390 --> 00:18:24,960
bioinformatics and it's the foot is

00:18:23,730 --> 00:18:27,690
basically the first letter of the

00:18:24,960 --> 00:18:30,300
chemical name actg typically for DNA

00:18:27,690 --> 00:18:32,430
that makes sense but it's pretty

00:18:30,300 --> 00:18:37,530
abstract so why couldn't you use emoji

00:18:32,430 --> 00:18:40,050
and the answers you can so in Python you

00:18:37,530 --> 00:18:42,870
can use PI emerged afire and employed

00:18:40,050 --> 00:18:46,380
and OG and so a is will call them apples

00:18:42,870 --> 00:18:47,550
see corn T tomato g4 grapes and if we

00:18:46,380 --> 00:18:50,970
don't know we'll put a question mark

00:18:47,550 --> 00:18:54,120
we've got two typical sequences here we

00:18:50,970 --> 00:18:56,280
write a little function that we just map

00:18:54,120 --> 00:18:58,800
everyone back to its emoji join it and

00:18:56,280 --> 00:19:04,290
print it and so these two sequences here

00:18:58,800 --> 00:19:06,800
we can represent them as emojis I should

00:19:04,290 --> 00:19:06,800
have stopped there

00:19:07,520 --> 00:19:15,110
but then I thought if I'm making

00:19:09,650 --> 00:19:18,170
something actually should be useful so

00:19:15,110 --> 00:19:20,830
fast Q is a file format that has faster

00:19:18,170 --> 00:19:23,450
so faster just has the letters a CT geez

00:19:20,830 --> 00:19:26,090
but the fast cute format also has

00:19:23,450 --> 00:19:29,030
quality information embedded inside it

00:19:26,090 --> 00:19:31,430
and you can think of that as the

00:19:29,030 --> 00:19:33,710
sequencing machine or the pokeball from

00:19:31,430 --> 00:19:36,740
the slide earlier how confident is that

00:19:33,710 --> 00:19:39,020
each base is is the correct call and so

00:19:36,740 --> 00:19:41,570
you generally have these I think about

00:19:39,020 --> 00:19:44,150
ninety three scores increasing from low

00:19:41,570 --> 00:19:46,480
quality to high quality and that lets

00:19:44,150 --> 00:19:48,370
you know how likely it is that the the

00:19:46,480 --> 00:19:50,860
sequence you've got there you should

00:19:48,370 --> 00:19:53,030
trust and when you're taking these

00:19:50,860 --> 00:19:56,030
individual reads and aligning them back

00:19:53,030 --> 00:19:58,310
to the genome of a an organism you can

00:19:56,030 --> 00:19:59,930
use the quality the number of high

00:19:58,310 --> 00:20:01,550
quality reads to make good calls and you

00:19:59,930 --> 00:20:04,640
can discard bad calls based on the

00:20:01,550 --> 00:20:06,230
individual qualities and I think you'll

00:20:04,640 --> 00:20:07,970
take these files and you'll use a

00:20:06,230 --> 00:20:09,620
program that will give you lots of plots

00:20:07,970 --> 00:20:11,180
and tell you the average quality of all

00:20:09,620 --> 00:20:13,490
the sequences you've got and that's a

00:20:11,180 --> 00:20:15,560
good way of doing I doing Quality

00:20:13,490 --> 00:20:17,570
Assurance but so it'd be good if you get

00:20:15,560 --> 00:20:19,670
to do that on the command line and if

00:20:17,570 --> 00:20:23,210
you could do that with emojis and so

00:20:19,670 --> 00:20:26,150
what you do is you take every single bit

00:20:23,210 --> 00:20:28,600
of quality and so use skull and poop and

00:20:26,150 --> 00:20:31,370
no entry sign for the bad ones and

00:20:28,600 --> 00:20:33,770
smiley faces on sunglasses and grinning

00:20:31,370 --> 00:20:37,370
for the good ones and then you do the

00:20:33,770 --> 00:20:39,440
same thing so take these two pairs of

00:20:37,370 --> 00:20:41,570
sequence reads and we're taking the mean

00:20:39,440 --> 00:20:43,520
of every single position we can see that

00:20:41,570 --> 00:20:44,540
overall we've got some quality issues at

00:20:43,520 --> 00:20:47,840
the start which is actually actually

00:20:44,540 --> 00:20:49,490
typical of the machines and also got the

00:20:47,840 --> 00:20:51,770
quality drops off towards the end of the

00:20:49,490 --> 00:20:54,320
reads as we as we sequence them and

00:20:51,770 --> 00:20:55,640
again that's that's typical so in one

00:20:54,320 --> 00:20:58,520
line you can quickly look at the quality

00:20:55,640 --> 00:21:01,070
of all your data and then run some some

00:20:58,520 --> 00:21:03,770
trimming to to cut off these things so

00:21:01,070 --> 00:21:08,390
that use some sample data from the VLSC

00:21:03,770 --> 00:21:10,220
is online tutorial and that's online if

00:21:08,390 --> 00:21:14,780
anyone wants to make it even better I've

00:21:10,220 --> 00:21:16,940
seen you could do all summary statistics

00:21:14,780 --> 00:21:18,860
and do the mean median and it would be

00:21:16,940 --> 00:21:20,540
great so everyone was the help they'd be

00:21:18,860 --> 00:21:23,170
great and I think that's the last slide

00:21:20,540 --> 00:21:23,170
so thank you

00:21:28,330 --> 00:21:40,880
we've got some time for questions if

00:21:30,950 --> 00:21:52,300
anyone has on but that's the

00:21:40,880 --> 00:21:55,940
interpretation I'll take yes my PhD

00:21:52,300 --> 00:22:05,830
that's my supervisors who hope hopefully

00:21:55,940 --> 00:22:07,910
not watching this online after as well

00:22:05,830 --> 00:22:10,270
we please give them another round of

00:22:07,910 --> 00:22:10,270

YouTube URL: https://www.youtube.com/watch?v=PCZS9wqBUuE


