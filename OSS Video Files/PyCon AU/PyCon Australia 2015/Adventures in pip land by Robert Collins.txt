Title: Adventures in pip land by Robert Collins
Publication date: 2015-08-04
Playlist: PyCon Australia 2015
Description: 
	pip has become an immensely popular tool for installing packages in Python, so much so that a bootstrap mechanism for it is now included in the standard library. But it has a dark side. Come and learn about some of the horrors that lurk within pip. Examples will include the distribute -] setuptools fork and convergence, dealing packages which attempt to use not-yet-installed dependencies, and the oh-man issue of resolving dependencies which pip still entirely punts on.

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:09,550 --> 00:00:15,160
good morning guys are up first today at

00:00:12,880 --> 00:00:18,100
we have robert collins who is a

00:00:15,160 --> 00:00:21,130
distinguished technologist working at HP

00:00:18,100 --> 00:00:23,470
cloud services you lived in ro rang gora

00:00:21,130 --> 00:00:25,300
New Zealand with the family and easier

00:00:23,470 --> 00:00:33,090
today to talk about adventures in fib

00:00:25,300 --> 00:00:36,220
lands robert collins good morning so

00:00:33,090 --> 00:00:37,840
we've got a fair amount to cover and we

00:00:36,220 --> 00:00:39,760
may not have time for questions at the

00:00:37,840 --> 00:00:41,440
end if there's something that really

00:00:39,760 --> 00:00:43,510
really really is concerning you please

00:00:41,440 --> 00:00:44,920
don't just throw hand up ask and i'll

00:00:43,510 --> 00:00:46,359
repeat the questions we don't have to

00:00:44,920 --> 00:00:49,179
wait for microphones to move around or

00:00:46,359 --> 00:00:51,280
any event but more importantly i have

00:00:49,179 --> 00:00:52,809
chocolates here for folk who can guess

00:00:51,280 --> 00:00:55,960
some of the terrace terrible things i'm

00:00:52,809 --> 00:00:57,699
going to tell you about and excellent

00:00:55,960 --> 00:01:03,609
room help will be raining those out to

00:00:57,699 --> 00:01:05,890
whoever can come up the answer so pep is

00:01:03,609 --> 00:01:08,830
a wonderful wonderful tool it's taken

00:01:05,890 --> 00:01:09,970
quite a few years to get where it is but

00:01:08,830 --> 00:01:12,610
i'm going to be talking about some stuff

00:01:09,970 --> 00:01:14,470
that's kind of bad so remember i respect

00:01:12,610 --> 00:01:15,850
the people who have built this and i'm

00:01:14,470 --> 00:01:17,140
one of those people so if there's

00:01:15,850 --> 00:01:20,230
anything negative it reflects on me as

00:01:17,140 --> 00:01:24,780
well and you know let's go and see where

00:01:20,230 --> 00:01:27,580
we go so pips at she called pie install

00:01:24,780 --> 00:01:29,470
from PI install org which is the thing

00:01:27,580 --> 00:01:31,030
that run that's like a bit like freeze

00:01:29,470 --> 00:01:36,270
it bundles everything up into a single

00:01:31,030 --> 00:01:36,270
binary and then it got split out

00:01:37,920 --> 00:01:44,009
in seven years ago so for seven years

00:01:41,580 --> 00:01:45,090
we've had this tool that was built to be

00:01:44,009 --> 00:01:46,649
something rather different that's

00:01:45,090 --> 00:01:49,799
actually doing this thing we really

00:01:46,649 --> 00:01:51,149
depend upon all the time and even though

00:01:49,799 --> 00:01:54,659
some of the history was lost there's

00:01:51,149 --> 00:02:00,170
over 4000 connects in the tree so it's a

00:01:54,659 --> 00:02:02,220
feeling mature at all you'd think but

00:02:00,170 --> 00:02:06,330
seventy percent of the downloads from

00:02:02,220 --> 00:02:07,470
pie pie are done through pit you can't

00:02:06,330 --> 00:02:12,050
read the little things down the side

00:02:07,470 --> 00:02:15,630
here but this big bit here that's pep

00:02:12,050 --> 00:02:17,340
this is from the logs that Donald stuff

00:02:15,630 --> 00:02:20,069
pulled up he did a blog post which is

00:02:17,340 --> 00:02:23,190
the the link beer this is set up tools

00:02:20,069 --> 00:02:27,180
this is perp and this is papa mirror and

00:02:23,190 --> 00:02:32,090
then the rest is noise and I said showed

00:02:27,180 --> 00:02:34,860
us to really make you very very afraid

00:02:32,090 --> 00:02:36,600
not a lot of it's my code but enough of

00:02:34,860 --> 00:02:39,090
it that you really you should be afraid

00:02:36,600 --> 00:02:41,580
you should be worried because it's a

00:02:39,090 --> 00:02:43,650
moving target the packaging inconsistent

00:02:41,580 --> 00:02:46,470
doesn't stand still it's hard to move

00:02:43,650 --> 00:02:48,600
within the packaging ecosystem but in

00:02:46,470 --> 00:02:50,700
the last two years we've gone up three

00:02:48,600 --> 00:02:52,140
major versions and there's been a whole

00:02:50,700 --> 00:02:54,530
bunch of point releases in there I've

00:02:52,140 --> 00:02:58,940
skipped all the intervening ones like

00:02:54,530 --> 00:02:58,940
154 and 153 and things like that

00:02:59,400 --> 00:03:02,879
the problem with moving targets is that

00:03:01,439 --> 00:03:07,519
people have to upgrade to get the

00:03:02,879 --> 00:03:12,989
benefit from them so here this is purp

00:03:07,519 --> 00:03:14,879
1.4 fortunately it looks like purp 1.0

00:03:12,989 --> 00:03:16,379
is completely disappeared off the map

00:03:14,879 --> 00:03:18,510
which means people aren't using a bunch

00:03:16,379 --> 00:03:23,879
of precise anymore I'll come back to

00:03:18,510 --> 00:03:25,920
that later 1.5 6.0 unknown so anything

00:03:23,879 --> 00:03:27,810
using URL live and not putting a version

00:03:25,920 --> 00:03:29,819
identifier into it so when I said it's

00:03:27,810 --> 00:03:33,870
very good that no one is using put 1.0

00:03:29,819 --> 00:03:35,970
this might be put 1.0 and this orange

00:03:33,870 --> 00:03:37,889
bar here this was like two or three

00:03:35,970 --> 00:03:39,629
weeks after 6.1 was released and you can

00:03:37,889 --> 00:03:42,750
see there's some adoption there but the

00:03:39,629 --> 00:03:44,760
adoption is only changing in that 6.0

00:03:42,750 --> 00:03:45,989
6.1 region all the people who are

00:03:44,760 --> 00:03:47,790
running their binary is on the allylic

00:03:45,989 --> 00:03:53,220
system that got installed by the distro

00:03:47,790 --> 00:03:55,079
vendor they are not changing and I want

00:03:53,220 --> 00:03:57,030
to give some context on all the sorts of

00:03:55,079 --> 00:04:00,900
challenges / pairs it installs from

00:03:57,030 --> 00:04:04,470
pretty much everything except be dusty

00:04:00,900 --> 00:04:06,690
eggs and their binary distribution that

00:04:04,470 --> 00:04:08,069
existed before wheels so it can stall

00:04:06,690 --> 00:04:10,739
from a local directory on your desk or

00:04:08,069 --> 00:04:13,620
from a VCS from a regular wheel from a

00:04:10,739 --> 00:04:15,690
nice test so if you can think of some

00:04:13,620 --> 00:04:18,150
way of describing your code that's

00:04:15,690 --> 00:04:22,490
different to that you're probably more

00:04:18,150 --> 00:04:24,690
imaginative than me and it installs

00:04:22,490 --> 00:04:26,729
everywhere installs into your system arc

00:04:24,690 --> 00:04:28,590
install into user directory zorkon stall

00:04:26,729 --> 00:04:30,599
of an isolated directory can stall into

00:04:28,590 --> 00:04:34,590
a virtual environment and it can install

00:04:30,599 --> 00:04:36,849
as eggs which is so so deprecated but it

00:04:34,590 --> 00:04:40,069
can still do it

00:04:36,849 --> 00:04:43,399
all of this to say that it can also

00:04:40,069 --> 00:04:46,819
install itself by your own bootstraps

00:04:43,399 --> 00:04:49,550
and that's some of the more scary code

00:04:46,819 --> 00:04:52,519
around and because it's a coach thing

00:04:49,550 --> 00:04:54,409
right download get poop pie from the

00:04:52,519 --> 00:04:56,080
internet and run that and you end up

00:04:54,409 --> 00:04:58,249
with purple installed in your system and

00:04:56,080 --> 00:04:59,959
the reason you need to do that is if you

00:04:58,249 --> 00:05:01,789
use pup that's installed in your system

00:04:59,959 --> 00:05:07,309
by a distro vendor to install pep it

00:05:01,789 --> 00:05:08,779
doesn't always go well and you know it

00:05:07,309 --> 00:05:10,129
also has to support all of the pythons

00:05:08,779 --> 00:05:13,579
including the ones that aren't supported

00:05:10,129 --> 00:05:14,959
by anyone like python 2.6 because when

00:05:13,579 --> 00:05:16,249
we say hey let's stop supporting that

00:05:14,959 --> 00:05:18,619
you can keep using the last stable

00:05:16,249 --> 00:05:21,499
release of pit people go hey hang on I'm

00:05:18,619 --> 00:05:24,439
still running my cluster on red rail 2.6

00:05:21,499 --> 00:05:28,519
or scientific linux 2.6 and sorry you

00:05:24,439 --> 00:05:29,899
need to care about me now this isn't

00:05:28,519 --> 00:05:31,789
really terrifying this is just the

00:05:29,899 --> 00:05:34,099
context for where it gets terrifying

00:05:31,789 --> 00:05:36,529
they start by talking about uninstall

00:05:34,099 --> 00:05:38,119
uninstall is easier than install right

00:05:36,529 --> 00:05:40,360
you just have to delete some files from

00:05:38,119 --> 00:05:40,360
desk

00:05:40,590 --> 00:05:44,700
so you look up the name and the

00:05:42,780 --> 00:05:46,230
packaging database on your local machine

00:05:44,700 --> 00:05:49,050
but where things have been installed

00:05:46,230 --> 00:05:52,770
what's been installed and then you

00:05:49,050 --> 00:05:56,280
delete them so here we get to audience

00:05:52,770 --> 00:05:59,550
participation step number one I have a

00:05:56,280 --> 00:06:04,500
chocolate here if someone can guess what

00:05:59,550 --> 00:06:11,730
is horrifying about this simple list of

00:06:04,500 --> 00:06:18,810
things that's a thing that might turn up

00:06:11,730 --> 00:06:20,310
but it's not this one no multiple

00:06:18,810 --> 00:06:23,940
package managers know this is just pep

00:06:20,310 --> 00:06:29,670
so it's it's all right this will sit on

00:06:23,940 --> 00:06:31,470
the side no it's not going to jackpot

00:06:29,670 --> 00:06:33,990
because I have less chocolates than I

00:06:31,470 --> 00:06:36,690
have horrors and I gambled that people

00:06:33,990 --> 00:06:38,010
would have to work up to them so when

00:06:36,690 --> 00:06:39,600
you have something in your system

00:06:38,010 --> 00:06:41,670
packages and you make a virtually

00:06:39,600 --> 00:06:44,190
infusing desh desh system still site

00:06:41,670 --> 00:06:48,540
sorry there is a typo already system

00:06:44,190 --> 00:06:50,250
site packages then pep can't could

00:06:48,540 --> 00:06:51,540
technically delete from your system

00:06:50,250 --> 00:06:53,730
environment but it has to decide

00:06:51,540 --> 00:06:55,140
actually no this is a virtually if I'm

00:06:53,730 --> 00:06:56,700
not allowed to delete this thing that is

00:06:55,140 --> 00:06:58,710
installed but not installed in virtually

00:06:56,700 --> 00:07:00,090
if even though everything in Python uses

00:06:58,710 --> 00:07:01,560
it so you get this thing where you say

00:07:00,090 --> 00:07:04,350
please understand this thing since H you

00:07:01,560 --> 00:07:05,970
know I can't and install that and and

00:07:04,350 --> 00:07:07,620
dash dash user has a kind of similar

00:07:05,970 --> 00:07:10,610
effect but it's all right there's

00:07:07,620 --> 00:07:13,370
another chance for chocolates

00:07:10,610 --> 00:07:18,110
another thing that makes uninstalling

00:07:13,370 --> 00:07:19,370
stuff using pep kind of complex none of

00:07:18,110 --> 00:07:24,050
the things that were spoken before this

00:07:19,370 --> 00:07:25,610
is another thing altogether no I mean

00:07:24,050 --> 00:07:27,110
that that years that's a genuine

00:07:25,610 --> 00:07:28,370
bug can turn up but it's not something

00:07:27,110 --> 00:07:31,699
that makes me want to crawl into a hole

00:07:28,370 --> 00:07:38,030
somewhere and comfort food for days of

00:07:31,699 --> 00:07:40,039
the time no well that's actually a very

00:07:38,030 --> 00:07:49,580
very close one you might get a chocolate

00:07:40,039 --> 00:07:52,460
for this develop mode Python setup I

00:07:49,580 --> 00:07:55,039
develop which is close enough to got

00:07:52,460 --> 00:07:59,000
grams head or pip install dash e a thing

00:07:55,039 --> 00:08:00,469
installs it in develop mode so if you

00:07:59,000 --> 00:08:02,979
want to have some fun on your laptop's

00:08:00,469 --> 00:08:05,870
make a virtual in in that do pip install

00:08:02,979 --> 00:08:08,090
something slightly check out mark or

00:08:05,870 --> 00:08:10,400
your favorite personal project and do

00:08:08,090 --> 00:08:12,979
pip install dot to install that thing

00:08:10,400 --> 00:08:14,479
then do pip install dash e dot to

00:08:12,979 --> 00:08:15,770
install it in the editable mode even

00:08:14,479 --> 00:08:18,469
though it's already installed it will

00:08:15,770 --> 00:08:21,319
install quite happily then do pip

00:08:18,469 --> 00:08:22,849
uninstall the name of the thing and it

00:08:21,319 --> 00:08:25,099
will ask you to delete a single file and

00:08:22,849 --> 00:08:26,810
if you say yes you can still use the

00:08:25,099 --> 00:08:30,949
thing that's still installed it didn't

00:08:26,810 --> 00:08:33,349
actually uninstall it it and where you

00:08:30,949 --> 00:08:35,599
can install it again you're getting you

00:08:33,349 --> 00:08:36,860
can uninstall it a second time which

00:08:35,599 --> 00:08:38,599
will actually under store the thing that

00:08:36,860 --> 00:08:39,500
you actually installed because you've

00:08:38,599 --> 00:08:42,140
been getting rid of a symlink

00:08:39,500 --> 00:08:44,240
essentially but the really fun thing

00:08:42,140 --> 00:08:49,100
about this is that there's no locking

00:08:44,240 --> 00:08:50,660
around the easy install pth files so

00:08:49,100 --> 00:08:52,820
there has a list of all the things that

00:08:50,660 --> 00:08:54,589
are in developed mode and if you run pip

00:08:52,820 --> 00:08:56,510
uninstall and two separate terminals at

00:08:54,589 --> 00:08:58,490
the same time to uninstall different

00:08:56,510 --> 00:09:01,720
things you are not going to like what

00:08:58,490 --> 00:09:01,720
you get back afterwards

00:09:01,940 --> 00:09:11,820
something you don't like so this one

00:09:08,970 --> 00:09:15,660
actually has come up before um who said

00:09:11,820 --> 00:09:19,380
multiple databases right who sit at

00:09:15,660 --> 00:09:22,220
first one of you to gets the chop at the

00:09:19,380 --> 00:09:25,529
my lovely assistant can get Katie and

00:09:22,220 --> 00:09:27,389
all right so there are six different

00:09:25,529 --> 00:09:28,980
installation databases purpose to

00:09:27,389 --> 00:09:32,100
consult when it tries to uninstall

00:09:28,980 --> 00:09:34,769
something from your local system there's

00:09:32,100 --> 00:09:36,720
the flag info a lot of a bunch of this

00:09:34,769 --> 00:09:39,000
is abstracted out by package resources

00:09:36,720 --> 00:09:42,300
you'd say but actually there is a six

00:09:39,000 --> 00:09:48,180
way if else if else if else if else if

00:09:42,300 --> 00:09:51,990
else if else else inside the pip

00:09:48,180 --> 00:09:54,300
uninstall code so basic eggs namespace

00:09:51,990 --> 00:09:57,000
Teggs dis new tools eggs aren't really

00:09:54,300 --> 00:09:59,579
eggs eggs eggs develop eggs and then the

00:09:57,000 --> 00:10:06,240
distant fo stuff which is maybe going to

00:09:59,579 --> 00:10:07,920
be a for do not suggest new formats the

00:10:06,240 --> 00:10:09,720
packaging ecosystem people will be

00:10:07,920 --> 00:10:11,160
saying this even they they are very

00:10:09,720 --> 00:10:13,970
polite and say that's a wonderful idea

00:10:11,160 --> 00:10:16,890
and let's look through the implications

00:10:13,970 --> 00:10:19,050
alright so I want to talk about pip

00:10:16,890 --> 00:10:22,140
install now pip install is a really easy

00:10:19,050 --> 00:10:25,150
process right you find the package to

00:10:22,140 --> 00:10:28,270
install or packages

00:10:25,150 --> 00:10:29,890
you find its dependencies and you repeat

00:10:28,270 --> 00:10:32,590
this recursively until everything is

00:10:29,890 --> 00:10:33,730
installed well so there's a couple of

00:10:32,590 --> 00:10:37,090
things that made this a little bit

00:10:33,730 --> 00:10:38,830
complex one is that as a design

00:10:37,090 --> 00:10:40,030
principle pip doesn't want the half do

00:10:38,830 --> 00:10:41,290
something so wants to know that the

00:10:40,030 --> 00:10:43,660
whole thing is going to work or fail

00:10:41,290 --> 00:10:45,160
even though the system on disk isn't

00:10:43,660 --> 00:10:46,330
atomic and there are no filesystem

00:10:45,160 --> 00:10:50,290
transactions that are accessible from

00:10:46,330 --> 00:10:51,670
user space and ok so the yaks that goes

00:10:50,290 --> 00:10:53,740
all the way down if you want to fix that

00:10:51,670 --> 00:10:55,840
but what it does do is does everything

00:10:53,740 --> 00:10:57,430
it can to be confident the process is

00:10:55,840 --> 00:11:01,810
going to succeed before it starts during

00:10:57,430 --> 00:11:03,850
the first installation so if you look at

00:11:01,810 --> 00:11:05,440
easy install but you will talk about

00:11:03,850 --> 00:11:09,010
more later it does a rather different

00:11:05,440 --> 00:11:10,720
approach and obviously you need to

00:11:09,010 --> 00:11:12,850
install everything any and that's what I

00:11:10,720 --> 00:11:14,410
was was talking about there is that you

00:11:12,850 --> 00:11:17,670
put together what you're going to

00:11:14,410 --> 00:11:20,230
install and then you install it so

00:11:17,670 --> 00:11:22,480
finding packages straightforward problem

00:11:20,230 --> 00:11:25,590
right you've got a package name you go

00:11:22,480 --> 00:11:28,690
and find it from PI pi everyone's happy

00:11:25,590 --> 00:11:32,290
except for find links who here is

00:11:28,690 --> 00:11:34,860
familiar with find links right so two

00:11:32,290 --> 00:11:38,730
people three well we've met with nearly

00:11:34,860 --> 00:11:41,560
50 K her hands come up with everything

00:11:38,730 --> 00:11:43,840
find links is a deprecated feature that

00:11:41,560 --> 00:11:46,150
can't be removed from purple deprecated

00:11:43,840 --> 00:11:48,030
but can't be removed let that sink in

00:11:46,150 --> 00:11:52,270
for a

00:11:48,030 --> 00:11:54,190
in it you tell perp hey here is a URL

00:11:52,270 --> 00:11:55,780
and in that URL they were going to be

00:11:54,190 --> 00:12:00,160
some links and those links are going to

00:11:55,780 --> 00:12:02,500
have the form and then the expression of

00:12:00,160 --> 00:12:05,140
them that looks like a tarball or a

00:12:02,500 --> 00:12:10,660
wheel or an egg or something like that

00:12:05,140 --> 00:12:12,790
and we're going to scan that URL for

00:12:10,660 --> 00:12:14,830
these links and then we're going to pass

00:12:12,790 --> 00:12:17,320
them through our thing that recognizes

00:12:14,830 --> 00:12:19,030
versions and try and split out the name

00:12:17,320 --> 00:12:20,680
from the beginning of it and then we're

00:12:19,030 --> 00:12:23,740
going to use that to decide exactly what

00:12:20,680 --> 00:12:25,360
to install now this is kind of safe if

00:12:23,740 --> 00:12:26,860
it's your local directory on disk and

00:12:25,360 --> 00:12:28,270
you've got wheels and Estes that you

00:12:26,860 --> 00:12:30,430
downloaded using perp in there and

00:12:28,270 --> 00:12:32,560
that's for example what a wheel house

00:12:30,430 --> 00:12:34,150
looks like but it's much less safe if

00:12:32,560 --> 00:12:35,380
you're looking at some random web server

00:12:34,150 --> 00:12:37,540
that might have been taken over by a

00:12:35,380 --> 00:12:38,710
hacker and now HD points are completely

00:12:37,540 --> 00:12:41,290
different things that you didn't think

00:12:38,710 --> 00:12:43,540
you're going to be giving so it's

00:12:41,290 --> 00:12:45,250
deprecated because it's terrible but we

00:12:43,540 --> 00:12:47,410
can't remove it because enough people

00:12:45,250 --> 00:12:49,840
depend on this for stuff within their

00:12:47,410 --> 00:12:51,370
organization that apparently it's

00:12:49,840 --> 00:12:54,400
critical functionality and we have to

00:12:51,370 --> 00:12:57,580
keep this kind of note you can have it

00:12:54,400 --> 00:13:00,340
but we can't get rid of pep 426

00:12:57,580 --> 00:13:04,600
describes a replacement that gives the

00:13:00,340 --> 00:13:08,250
same functionality it's no better

00:13:04,600 --> 00:13:08,250
and so

00:13:09,490 --> 00:13:13,060
I have just completely destroyed the

00:13:11,649 --> 00:13:15,130
ability to offer you another piece of

00:13:13,060 --> 00:13:17,080
chocolate so I'm sorry about that I got

00:13:15,130 --> 00:13:19,779
too excited direct references and pep

00:13:17,080 --> 00:13:21,459
440 describe the replacement evolution

00:13:19,779 --> 00:13:22,870
of this feature and it's going to have

00:13:21,459 --> 00:13:27,160
exactly the same characteristics that

00:13:22,870 --> 00:13:28,450
you can point oh wow okay so no this is

00:13:27,160 --> 00:13:29,800
the other thing there is a chocolate for

00:13:28,450 --> 00:13:35,709
me here because I've just told you about

00:13:29,800 --> 00:13:37,660
this horror the thing that's worse than

00:13:35,709 --> 00:13:40,270
find links is the ability to just point

00:13:37,660 --> 00:13:42,220
directly to VCS not from the command

00:13:40,270 --> 00:13:44,709
line Pippin stall get this thing I know

00:13:42,220 --> 00:13:48,670
what I want but to have a dependency

00:13:44,709 --> 00:13:51,730
that points at a get URL or the file on

00:13:48,670 --> 00:13:54,160
disk in some arbitrary place so you can

00:13:51,730 --> 00:13:55,480
put you can upload something to pi PI

00:13:54,160 --> 00:13:57,820
and you can put install that thing and

00:13:55,480 --> 00:13:59,230
then if peppers being used it will look

00:13:57,820 --> 00:14:01,600
at the dependencies and it will go off

00:13:59,230 --> 00:14:03,339
to get and pull that down that is the

00:14:01,600 --> 00:14:06,760
intent of this feature specified than

00:14:03,339 --> 00:14:08,200
pep 4 to 6 and 4 40 except they say you

00:14:06,760 --> 00:14:10,060
will not be able to load these up to the

00:14:08,200 --> 00:14:11,380
indices because the indices will look at

00:14:10,060 --> 00:14:13,870
your dependencies and say that that's

00:14:11,380 --> 00:14:16,779
not allowed we're going to get back to

00:14:13,870 --> 00:14:18,399
why that's a problem an implementation

00:14:16,779 --> 00:14:19,810
problem in a little bit but this is a

00:14:18,399 --> 00:14:21,160
game that cat use case we people say we

00:14:19,810 --> 00:14:23,440
really really have to have this to do

00:14:21,160 --> 00:14:24,970
our in organization thing where we can't

00:14:23,440 --> 00:14:27,700
do proper versioning and publish things

00:14:24,970 --> 00:14:31,440
by names and and so on because it's very

00:14:27,700 --> 00:14:31,440
hard to do that for some reason

00:14:32,579 --> 00:14:37,629
but we're still talking about finding

00:14:35,529 --> 00:14:40,959
the packages that you're going to use

00:14:37,629 --> 00:14:45,000
and here is where horror number five

00:14:40,959 --> 00:14:50,519
turns up can anyone guess what are those

00:14:45,000 --> 00:14:50,519
you've it's related to version numbers

00:14:51,510 --> 00:14:56,100
when the dependency depends on something

00:14:53,430 --> 00:15:00,180
at the different version yes yes that is

00:14:56,100 --> 00:15:04,050
exactly the horror the horror is that

00:15:00,180 --> 00:15:07,200
pip does not resolve versions at all if

00:15:04,050 --> 00:15:10,730
you tell it it finds versions it doesn't

00:15:07,200 --> 00:15:12,810
resolve them and the distinction is this

00:15:10,730 --> 00:15:15,060
resolving a version if you've got two

00:15:12,810 --> 00:15:17,880
things a and B that both depend on sea

00:15:15,060 --> 00:15:20,190
and one says I need see greater than 1.0

00:15:17,880 --> 00:15:24,030
and the other one says I need see less

00:15:20,190 --> 00:15:28,100
than 2.0 and the index has one two and

00:15:24,030 --> 00:15:30,300
three versions of see in the index then

00:15:28,100 --> 00:15:33,000
something that resolves it would start

00:15:30,300 --> 00:15:35,190
with a say oh yeah I'll grab three

00:15:33,000 --> 00:15:36,660
that's okay we'd run into be somewhere

00:15:35,190 --> 00:15:39,120
else new dependency tree and set all I

00:15:36,660 --> 00:15:41,670
can use three anymore i'll use two and

00:15:39,120 --> 00:15:44,220
you'd end up installing see version two

00:15:41,670 --> 00:15:45,540
what pip does is it says oh yeah I found

00:15:44,220 --> 00:15:47,610
the version you want from your first

00:15:45,540 --> 00:15:49,800
description you wanted greater than one

00:15:47,610 --> 00:15:51,420
I got you three and that will install

00:15:49,800 --> 00:15:53,280
three no matter what else has been

00:15:51,420 --> 00:15:56,070
turning up during the dependency graph

00:15:53,280 --> 00:15:59,550
that's been spidering across and this as

00:15:56,070 --> 00:16:01,410
you might imagine breaks things so the

00:15:59,550 --> 00:16:04,050
actual processes you start with some

00:16:01,410 --> 00:16:05,400
URLs you're going to run this find links

00:16:04,050 --> 00:16:07,380
thing and you'll talk to the indices

00:16:05,400 --> 00:16:09,660
you'll look at what's locally installed

00:16:07,380 --> 00:16:11,070
and then you choose between them on the

00:16:09,660 --> 00:16:13,250
basis of the first thing that sounds the

00:16:11,070 --> 00:16:13,250
same

00:16:13,649 --> 00:16:18,240
small sidebar here I've actually got to

00:16:15,959 --> 00:16:20,610
work in resolver and although it is non

00:16:18,240 --> 00:16:22,920
polynomial complete and might burn up

00:16:20,610 --> 00:16:25,649
the entire heat of the earth before it

00:16:22,920 --> 00:16:27,329
solves some of the problems there's

00:16:25,649 --> 00:16:30,480
enough heuristics there and the data set

00:16:27,329 --> 00:16:34,019
is sufficiently compact that it usually

00:16:30,480 --> 00:16:36,439
manages that you are an answer in sort

00:16:34,019 --> 00:16:39,959
of reasonable time like a few seconds

00:16:36,439 --> 00:16:41,369
but we need some answer to be able to

00:16:39,959 --> 00:16:42,869
take that forward to look for the case

00:16:41,369 --> 00:16:43,949
where it is going to go off to the heat

00:16:42,869 --> 00:16:46,050
death of the universe some way of

00:16:43,949 --> 00:16:47,429
overriding the resolver and we need a UI

00:16:46,050 --> 00:16:49,559
for that when the kind of need to do a

00:16:47,429 --> 00:16:54,360
bit of design work but that's coming

00:16:49,559 --> 00:16:56,220
soon so we found the package version

00:16:54,360 --> 00:16:58,999
you're going to use how do we get its

00:16:56,220 --> 00:16:58,999
dependencies hours

00:16:59,779 --> 00:17:03,560
some systems like this have an index

00:17:01,850 --> 00:17:05,270
that knows the dependencies like debian

00:17:03,560 --> 00:17:07,339
has an index you can download locally

00:17:05,270 --> 00:17:09,049
and query that says this package depends

00:17:07,339 --> 00:17:11,390
on these versions that can be really

00:17:09,049 --> 00:17:13,100
nice and cloaking quite efficient some

00:17:11,390 --> 00:17:16,839
things have a web app Web API you can

00:17:13,100 --> 00:17:22,010
talk to to find out the dependencies ah

00:17:16,839 --> 00:17:24,860
well no we don't have that there is one

00:17:22,010 --> 00:17:26,449
sort of current standard format where

00:17:24,860 --> 00:17:28,120
you can get the metadata out without

00:17:26,449 --> 00:17:31,159
running arbitrary code and that's wheels

00:17:28,120 --> 00:17:33,679
wheels are a zip file you are open the

00:17:31,159 --> 00:17:36,470
zip you examine the metadata file you

00:17:33,679 --> 00:17:38,299
can put that metadata behind an API and

00:17:36,470 --> 00:17:40,429
you could build an index file or you

00:17:38,299 --> 00:17:42,470
could have an index that you can API you

00:17:40,429 --> 00:17:44,419
can talk to on the pi PI servers to give

00:17:42,470 --> 00:17:46,940
you the metadata but for everything else

00:17:44,419 --> 00:17:49,640
you have to download it unpack it and

00:17:46,940 --> 00:17:52,450
then run set up the pie egg info which

00:17:49,640 --> 00:17:55,070
might try and take over your machine I

00:17:52,450 --> 00:17:55,970
mean it might not but they might try and

00:17:55,070 --> 00:17:57,710
do that and when you're installing

00:17:55,970 --> 00:17:59,059
something from piper you are trusting

00:17:57,710 --> 00:18:02,390
that the thing you choosing to install

00:17:59,059 --> 00:18:03,620
from PI pie isn't going to do that and I

00:18:02,390 --> 00:18:05,000
mean that's kind of reasonable if you

00:18:03,620 --> 00:18:06,409
want to use software from someone you're

00:18:05,000 --> 00:18:08,450
going to assume that this software is

00:18:06,409 --> 00:18:10,399
actually fit for you to consume but

00:18:08,450 --> 00:18:11,929
someone who's su running the index

00:18:10,399 --> 00:18:15,169
server itself they can't assume that

00:18:11,929 --> 00:18:18,649
because there's like 78,000 separate

00:18:15,169 --> 00:18:20,299
packages and pipeline and anyone can go

00:18:18,649 --> 00:18:22,280
online create new package upload it and

00:18:20,299 --> 00:18:24,919
so anyone could come along and try and

00:18:22,280 --> 00:18:27,049
attack pi PI if they allowed pi PI 2 to

00:18:24,919 --> 00:18:28,909
try and figure this out so we resolve

00:18:27,049 --> 00:18:31,170
this locally put downloads the thing

00:18:28,909 --> 00:18:33,510
that's going to install

00:18:31,170 --> 00:18:36,480
unpack stood on desk and run set of the

00:18:33,510 --> 00:18:38,280
pie Egan phone but there's a trick Leah

00:18:36,480 --> 00:18:40,760
can anyone guess what horror number

00:18:38,280 --> 00:18:40,760
sixes

00:18:41,340 --> 00:18:44,670
this is one of the things that made me

00:18:43,020 --> 00:18:47,630
sort of blink three or four times the

00:18:44,670 --> 00:18:47,630
first time I ran across it

00:18:47,830 --> 00:18:56,440
sorry malicious doc Palos in silver pie

00:18:51,610 --> 00:18:58,690
good guess but no no cookie nonce

00:18:56,440 --> 00:19:03,940
amended version great gifts completely

00:18:58,690 --> 00:19:06,850
off base the inputs are sealed up by

00:19:03,940 --> 00:19:09,340
itself does note i'm gonna i'm going to

00:19:06,850 --> 00:19:14,950
call time on this one this code is

00:19:09,340 --> 00:19:16,840
inside pip this is the actual set up top

00:19:14,950 --> 00:19:20,320
pipe it runs when it tries to run egg

00:19:16,840 --> 00:19:22,269
info it's a template under setup i under

00:19:20,320 --> 00:19:24,880
under ends up being the path to the set

00:19:22,269 --> 00:19:26,350
up top i file there's a bunch of stuff

00:19:24,880 --> 00:19:29,950
in here i've ripped out for brevity on

00:19:26,350 --> 00:19:32,500
the slide but we open up the silt tools

00:19:29,950 --> 00:19:34,809
egg info module and we monkey patch its

00:19:32,500 --> 00:19:37,120
run function to be this replacement run

00:19:34,809 --> 00:19:39,190
function i trimmed out and that that

00:19:37,120 --> 00:19:42,490
takes care of things that can't be

00:19:39,190 --> 00:19:44,679
imported winners running this and the

00:19:42,490 --> 00:19:48,820
reason that does this is because paste

00:19:44,679 --> 00:19:51,820
script has an egg info writer entry

00:19:48,820 --> 00:19:56,019
point itself and you can't get at paste

00:19:51,820 --> 00:19:57,700
script yet desk until you have

00:19:56,019 --> 00:19:59,380
successfully imported paste script and

00:19:57,700 --> 00:20:00,580
you can't successfully import pay script

00:19:59,380 --> 00:20:03,610
until you have installed its

00:20:00,580 --> 00:20:05,470
dependencies and you can find out its

00:20:03,610 --> 00:20:07,690
dependencies until you have run airgun

00:20:05,470 --> 00:20:12,490
foe and interrogated the output to see

00:20:07,690 --> 00:20:16,289
what this dependencies are so this here

00:20:12,490 --> 00:20:16,289
is to deal with that

00:20:19,910 --> 00:20:26,070
but wait there's more what's another

00:20:24,270 --> 00:20:33,960
horror that turns up around about the

00:20:26,070 --> 00:20:35,520
same time namespaces namespaces all I

00:20:33,960 --> 00:20:36,930
could rant about namespaces but this is

00:20:35,520 --> 00:20:40,350
not a ranting talk this is a tour

00:20:36,930 --> 00:20:45,060
through horrors no I'll give you guys a

00:20:40,350 --> 00:20:59,730
clue two words to name of a thing two

00:20:45,060 --> 00:21:01,320
words yes well yeah for the recording

00:20:59,730 --> 00:21:03,360
Kate you just said I already have one

00:21:01,320 --> 00:21:06,570
it's fine oh sorry i'll have another one

00:21:03,360 --> 00:21:09,810
that she's now giving to craig so easy

00:21:06,570 --> 00:21:12,870
install who here knows about easy

00:21:09,810 --> 00:21:15,120
install okay so most of that about half

00:21:12,870 --> 00:21:17,070
the remote so easy install is this thing

00:21:15,120 --> 00:21:19,140
that will as a precursor to put becoming

00:21:17,070 --> 00:21:20,940
popular and it goes off to the internet

00:21:19,140 --> 00:21:23,130
and run some arbitrary code that

00:21:20,940 --> 00:21:24,540
literally they tell you to download easy

00:21:23,130 --> 00:21:26,520
under set up the play and just run it

00:21:24,540 --> 00:21:29,700
which at the time has been served from

00:21:26,520 --> 00:21:32,150
an HTTP server no risk there and you

00:21:29,700 --> 00:21:36,270
download it and it would install

00:21:32,150 --> 00:21:37,350
setuptools and install recursively the

00:21:36,270 --> 00:21:39,660
thing you want to install so it's kind

00:21:37,350 --> 00:21:42,810
of like a pseudo pip except it was all

00:21:39,660 --> 00:21:46,740
bundled into the set up top i build

00:21:42,810 --> 00:21:48,570
system for your package and it has this

00:21:46,740 --> 00:21:50,130
feature called setup requires so

00:21:48,570 --> 00:21:54,060
setuptools has this feature called setup

00:21:50,130 --> 00:21:55,620
requires so if you had a setup I that

00:21:54,060 --> 00:21:58,800
looks something like that then when you

00:21:55,620 --> 00:22:01,140
run setup I anything doesn't matter with

00:21:58,800 --> 00:22:05,520
your unsettled up I Egan for civil play

00:22:01,140 --> 00:22:07,770
install or build it will say hey Syd

00:22:05,520 --> 00:22:11,010
halls will say hey is PI 2 f'n stalled

00:22:07,770 --> 00:22:12,720
no it's not I'm going to go off to the

00:22:11,010 --> 00:22:15,300
internet and download pi/2 app and

00:22:12,720 --> 00:22:17,490
install it sort of i'm going to put the

00:22:15,300 --> 00:22:19,830
egg on your path so that you can use it

00:22:17,490 --> 00:22:24,600
but i'm not actually going to install it

00:22:19,830 --> 00:22:26,279
and this has a whole raft of issues you

00:22:24,600 --> 00:22:28,320
don't get to use the pip cash so if piff

00:22:26,279 --> 00:22:30,179
has already downloaded the thing that if

00:22:28,320 --> 00:22:32,429
you'll see that requires is also a

00:22:30,179 --> 00:22:35,220
runtime dependency you'll now download

00:22:32,429 --> 00:22:38,279
it twice and you won't use the perp HTTP

00:22:35,220 --> 00:22:39,960
configuration for proxies and you won't

00:22:38,279 --> 00:22:42,269
look in a wheelhouse that you've got

00:22:39,960 --> 00:22:44,429
locally because easy install is not pip

00:22:42,269 --> 00:22:46,200
it doesn't know about your having a

00:22:44,429 --> 00:22:48,630
local cache of stuff that's really fast

00:22:46,200 --> 00:22:50,399
and good for doing offline and stalls so

00:22:48,630 --> 00:22:52,200
the configuration a lot of people want

00:22:50,399 --> 00:22:53,429
to do with other pip download this thing

00:22:52,200 --> 00:22:55,139
into a directory then go to another

00:22:53,429 --> 00:22:58,169
machine with no internet access and run

00:22:55,139 --> 00:22:59,700
pip install no index and find links from

00:22:58,169 --> 00:23:01,620
that directory and the thing they really

00:22:59,700 --> 00:23:02,940
wanted which people used to do on

00:23:01,620 --> 00:23:05,039
production servers are the behind

00:23:02,940 --> 00:23:07,380
firewalls that sort of you know scenario

00:23:05,039 --> 00:23:10,409
that won't work at all with anything

00:23:07,380 --> 00:23:11,940
that has setup requires but unless you

00:23:10,409 --> 00:23:14,070
manually install all those things first

00:23:11,940 --> 00:23:17,730
because easy install is just going to go

00:23:14,070 --> 00:23:18,960
high and start doing stuff and you also

00:23:17,730 --> 00:23:21,690
end up building things that may be

00:23:18,960 --> 00:23:23,429
expensive like numpy multiple times so

00:23:21,690 --> 00:23:25,230
even if you've got a caged we love numpy

00:23:23,429 --> 00:23:27,799
that can be installed in half a second

00:23:25,230 --> 00:23:30,510
easy install is going to go oh hi yeah I

00:23:27,799 --> 00:23:32,220
need an umpire to run the setup the pie

00:23:30,510 --> 00:23:33,539
so I'm going to download it in compiler

00:23:32,220 --> 00:23:36,899
because I don't know about your wheel

00:23:33,539 --> 00:23:39,179
case because I'm not pip this is

00:23:36,899 --> 00:23:40,679
actually kind of a fundamental root

00:23:39,179 --> 00:23:42,090
cause of a whole bunch of problems that

00:23:40,679 --> 00:23:45,029
people run into when they try and do

00:23:42,090 --> 00:23:49,039
sophisticated set up very fast builds

00:23:45,029 --> 00:23:49,039
offline environments speak up loudly

00:23:49,470 --> 00:23:59,440
no Pippin soaks since okay so pip runs

00:23:55,200 --> 00:24:01,390
this okay and it's running this with the

00:23:59,440 --> 00:24:04,300
egg info command to build an egg and

00:24:01,390 --> 00:24:06,370
voting on disk and the result of that is

00:24:04,300 --> 00:24:09,760
that when you have a set of requires in

00:24:06,370 --> 00:24:11,080
the setup I setuptools so the setup

00:24:09,760 --> 00:24:13,390
function one of the first things that

00:24:11,080 --> 00:24:15,190
does is says hey are my requirements

00:24:13,390 --> 00:24:17,200
satisfied so it asks package resources

00:24:15,190 --> 00:24:20,200
packages also says that's not there then

00:24:17,200 --> 00:24:21,940
set up tools the component of set of

00:24:20,200 --> 00:24:24,580
tools called easy install goes off and

00:24:21,940 --> 00:24:26,500
does this thing and everyone who is

00:24:24,580 --> 00:24:27,790
trying to run these secure isolated or

00:24:26,500 --> 00:24:32,110
highly performing environments that's

00:24:27,790 --> 00:24:36,940
crying into their cups so coming soon

00:24:32,110 --> 00:24:39,400
Tim we've got kind of social buying but

00:24:36,940 --> 00:24:41,230
no fully functional set of patches so

00:24:39,400 --> 00:24:43,540
it's not even really out of prototype

00:24:41,230 --> 00:24:45,130
stage is declarative dependencies where

00:24:43,540 --> 00:24:46,990
we can write these dependencies down in

00:24:45,130 --> 00:24:50,530
a metadata file at the well known

00:24:46,990 --> 00:24:52,210
location I may be setup config and we'll

00:24:50,530 --> 00:24:54,160
look for that first and if there are

00:24:52,210 --> 00:24:56,260
dependencies there in that place will

00:24:54,160 --> 00:24:58,270
use those rather than running egg info

00:24:56,260 --> 00:25:00,730
so this will do two things I mean we're

00:24:58,270 --> 00:25:02,320
not running arbitrary code so an index

00:25:00,730 --> 00:25:04,590
server could potentially start consuming

00:25:02,320 --> 00:25:04,590
these

00:25:05,280 --> 00:25:08,710
well no because set up tool if we

00:25:07,390 --> 00:25:10,600
patched it up to us to understand this

00:25:08,710 --> 00:25:14,260
I'm gonna have to stop very soon we're

00:25:10,600 --> 00:25:16,180
getting close to time and if setuptools

00:25:14,260 --> 00:25:17,920
reads those so part of doing this and

00:25:16,180 --> 00:25:19,630
the ecosystem is to make sure that

00:25:17,920 --> 00:25:22,270
setuptools can read these dependencies

00:25:19,630 --> 00:25:23,500
and pip can read them user setup tools

00:25:22,270 --> 00:25:25,090
as a library though so that's actually

00:25:23,500 --> 00:25:26,800
really teach sit up tools to do it

00:25:25,090 --> 00:25:28,810
expose it as a public API and then

00:25:26,800 --> 00:25:33,670
consume that from pep win and you enough

00:25:28,810 --> 00:25:36,130
version of setuptools US prison silver

00:25:33,670 --> 00:25:37,870
tools can't I don't ideas this is really

00:25:36,130 --> 00:25:39,100
about pup and there's some more carry

00:25:37,870 --> 00:25:40,570
stuff in there and where the point is

00:25:39,100 --> 00:25:43,720
that this is going to get a lot better a

00:25:40,570 --> 00:25:46,990
lot better once we can manage to get

00:25:43,720 --> 00:25:48,790
this in place so let's talk about

00:25:46,990 --> 00:25:50,500
recursion because I mean that was the

00:25:48,790 --> 00:25:58,150
that's the horrible but about getting

00:25:50,500 --> 00:25:59,590
your dependencies so okay so I've got a

00:25:58,150 --> 00:26:01,900
whole bunch of packages and I need to

00:25:59,590 --> 00:26:04,510
install them obvious thing right you

00:26:01,900 --> 00:26:06,220
order by your dependencies didn't always

00:26:04,510 --> 00:26:07,870
do this but it's kind of obvious in

00:26:06,220 --> 00:26:11,050
hindsight you order by your dependencies

00:26:07,870 --> 00:26:13,000
you build some wheels because if you're

00:26:11,050 --> 00:26:14,890
going to compile numpy you only want to

00:26:13,000 --> 00:26:16,690
do it once so you build a wheel specific

00:26:14,890 --> 00:26:18,880
to this machine and then you can install

00:26:16,690 --> 00:26:20,650
from the wheel next time right and then

00:26:18,880 --> 00:26:23,550
you install in the order that you were

00:26:20,650 --> 00:26:23,550
given by the user

00:26:23,570 --> 00:26:32,550
hmm there's a horror in here anyone want

00:26:28,170 --> 00:26:34,260
to guess what it is hmm no but I mean

00:26:32,550 --> 00:26:36,660
that's a great way we're pitfalls down

00:26:34,260 --> 00:26:38,520
it's just the setup tools like the whole

00:26:36,660 --> 00:26:39,750
ecosystem has got a big gap there at the

00:26:38,520 --> 00:26:42,290
moment it's a bunch of interesting

00:26:39,750 --> 00:26:48,120
discussions trying to move that forward

00:26:42,290 --> 00:26:49,440
users yes hmm built so build

00:26:48,120 --> 00:26:51,840
requirements instead that requires at

00:26:49,440 --> 00:26:54,330
the same thing from the from this

00:26:51,840 --> 00:26:56,460
perspective and here the files kind of

00:26:54,330 --> 00:27:01,050
going to fall in that same category so

00:26:56,460 --> 00:27:02,640
in the interest of giving this talk so

00:27:01,050 --> 00:27:04,860
actually everyone's heard of Scylla

00:27:02,640 --> 00:27:08,720
tools right who hasn't heard of

00:27:04,860 --> 00:27:11,450
distributor who has heard of distribute

00:27:08,720 --> 00:27:17,310
just checking right ok everyone is awake

00:27:11,450 --> 00:27:18,720
so yeah so in 0.6 see the tools got fork

00:27:17,310 --> 00:27:22,350
to distribute and then distribute merge

00:27:18,720 --> 00:27:24,210
back to 0.7 and when you install

00:27:22,350 --> 00:27:25,800
distribute you get set up tools and when

00:27:24,210 --> 00:27:27,180
you upgrade set up towards having had

00:27:25,800 --> 00:27:30,810
distribute you have to get rid of

00:27:27,180 --> 00:27:33,090
distribute so when you do from set of

00:27:30,810 --> 00:27:34,200
tools install set up you import set up

00:27:33,090 --> 00:27:35,550
you may get it from distribute all you

00:27:34,200 --> 00:27:37,410
may get from set of tools and the world

00:27:35,550 --> 00:27:39,840
is going to end very badly for you if

00:27:37,410 --> 00:27:41,220
you get the wrong one because the stuff

00:27:39,840 --> 00:27:42,690
the writing on dust the package database

00:27:41,220 --> 00:27:44,640
and so on that's all coupled together

00:27:42,690 --> 00:27:47,220
the defaults for how it installs are

00:27:44,640 --> 00:27:49,200
coupled together so yeah inside the

00:27:47,220 --> 00:27:51,600
street 06 tar balls there is a setup

00:27:49,200 --> 00:27:53,370
tools directory this is completely

00:27:51,600 --> 00:27:57,750
obvious and intuitive to everyone

00:27:53,370 --> 00:28:01,320
involved in the process and input 70 we

00:27:57,750 --> 00:28:04,200
removed a whole bunch of crafts we had

00:28:01,320 --> 00:28:06,480
three separate places in the code they

00:28:04,200 --> 00:28:08,640
were all involved with going oh yeah so

00:28:06,480 --> 00:28:11,280
that's to do with distribute right we

00:28:08,640 --> 00:28:14,940
don't want that anymore so here's the

00:28:11,280 --> 00:28:17,400
fun thing now with pip 70 and above if

00:28:14,940 --> 00:28:18,870
you do this on a precise host which i

00:28:17,400 --> 00:28:21,180
think is really about fifteen percent of

00:28:18,870 --> 00:28:22,980
their pep using population still if you

00:28:21,180 --> 00:28:24,690
make a virtual environment you upgrade

00:28:22,980 --> 00:28:26,160
purview upgrades it up tools and then

00:28:24,690 --> 00:28:28,350
you do a list you still have distribute

00:28:26,160 --> 00:28:29,610
left behind and this is going to do bad

00:28:28,350 --> 00:28:32,320
things

00:28:29,610 --> 00:28:33,850
so don't do that if you make a virtual

00:28:32,320 --> 00:28:36,190
inform precise the first thing to do is

00:28:33,850 --> 00:28:37,810
upgrade set up tools which will use the

00:28:36,190 --> 00:28:39,640
pip that you had at the time that knows

00:28:37,810 --> 00:28:44,020
about how the special case distribute

00:28:39,640 --> 00:28:47,020
and do things like this so this is the

00:28:44,020 --> 00:28:48,870
PR that remove the support and one of

00:28:47,020 --> 00:28:51,040
the things that's kind of the most

00:28:48,870 --> 00:28:53,710
really we have to do that thing's is

00:28:51,040 --> 00:28:55,390
that if you did a perp upgrade that

00:28:53,710 --> 00:28:58,150
upgraded either distributable setuptools

00:28:55,390 --> 00:28:59,650
we had to move those packages to the

00:28:58,150 --> 00:29:01,270
very front of the list and both of them

00:28:59,650 --> 00:29:02,890
together because otherwise we'd remove

00:29:01,270 --> 00:29:04,810
distribute because distribute conflicts

00:29:02,890 --> 00:29:06,820
with setup tools and we know that that

00:29:04,810 --> 00:29:10,750
the package me today this is that would

00:29:06,820 --> 00:29:12,100
remove it but weird introns still

00:29:10,750 --> 00:29:14,050
something else that depends on set up

00:29:12,100 --> 00:29:15,880
tools being present no setup tools boom

00:29:14,050 --> 00:29:17,410
the whole thing just stops so you have

00:29:15,880 --> 00:29:20,410
to understand just read and then install

00:29:17,410 --> 00:29:21,940
settles the workarounds gone and there's

00:29:20,410 --> 00:29:23,260
a continual stream of bugs on the pit

00:29:21,940 --> 00:29:25,750
bug tracker at the moment people going

00:29:23,260 --> 00:29:27,730
hey this this is broken for me in subtle

00:29:25,750 --> 00:29:33,160
ways please delete your distributor jury

00:29:27,730 --> 00:29:35,290
all now it works second thing is cycles

00:29:33,160 --> 00:29:37,180
I don't know if anyone mentioned this

00:29:35,290 --> 00:29:38,560
before but one of the lovely things is

00:29:37,180 --> 00:29:40,690
you can have a depends on be depends on

00:29:38,560 --> 00:29:42,130
a we break that a fairly arbitrary point

00:29:40,690 --> 00:29:43,750
that's kind of easy code it's not a

00:29:42,130 --> 00:29:46,510
horror but the thing that's a bit

00:29:43,750 --> 00:29:48,520
horrific we install packages and the

00:29:46,510 --> 00:29:49,990
order the user gave them to us this is a

00:29:48,520 --> 00:29:56,350
deliberate thing if you were safe

00:29:49,990 --> 00:29:58,780
install a B and C if a depends on be we

00:29:56,350 --> 00:30:00,370
will reorder there and do be first but

00:29:58,780 --> 00:30:03,900
wherever we have a choice we do it in

00:30:00,370 --> 00:30:03,900
the exact order the user gave it to us

00:30:04,080 --> 00:30:09,790
we'll building is easy straightforward

00:30:07,510 --> 00:30:12,030
I'm going to have to rush now we've got

00:30:09,790 --> 00:30:14,530
like 30 seconds and installation

00:30:12,030 --> 00:30:16,179
unpacking wheels is fine here's the last

00:30:14,530 --> 00:30:18,340
big hoorah

00:30:16,179 --> 00:30:21,759
this here is what we run when we run

00:30:18,340 --> 00:30:23,169
setup I install now the thing that's

00:30:21,759 --> 00:30:24,429
horrific about it is not the fact that

00:30:23,169 --> 00:30:27,549
we're running stuff through tokenized

00:30:24,429 --> 00:30:29,169
and doing in lining the mangling the

00:30:27,549 --> 00:30:31,210
thing that's horrific is this one

00:30:29,169 --> 00:30:33,299
statement here which is the reason for

00:30:31,210 --> 00:30:36,039
this entire chunk of coding pep

00:30:33,299 --> 00:30:37,960
importing setuptools into a set up top

00:30:36,039 --> 00:30:40,450
pie that uses distutils and not

00:30:37,960 --> 00:30:43,330
setuptools causes setuptools to monkey

00:30:40,450 --> 00:30:45,360
patch distutils core so that the set up

00:30:43,330 --> 00:30:48,429
there does all of the stuff that

00:30:45,360 --> 00:30:52,029
setuptools fixed such as recording what

00:30:48,429 --> 00:30:53,950
files are installed on disk and giving

00:30:52,029 --> 00:31:10,720
you the ability to do eggs and all of

00:30:53,950 --> 00:31:13,889
them so yeah we can do one or two

00:31:10,720 --> 00:31:13,889
questions if they're in

00:31:14,410 --> 00:31:21,100
the man in the bed thanks Robert so yes

00:31:19,360 --> 00:31:22,780
it is a horror story and you know

00:31:21,100 --> 00:31:26,290
software is horrible we're all going to

00:31:22,780 --> 00:31:30,490
die let's let's go shopping how much of

00:31:26,290 --> 00:31:33,010
this is resolving the the hacks exist

00:31:30,490 --> 00:31:35,860
for a reason yes the problems exists for

00:31:33,010 --> 00:31:37,510
reasons yes how much of it is well if we

00:31:35,860 --> 00:31:39,010
just wait long enough we'll be able to

00:31:37,510 --> 00:31:40,330
deprecate enough stuff and get rid of

00:31:39,010 --> 00:31:41,740
these we're like versions of operating

00:31:40,330 --> 00:31:44,830
systems we no longer have to worry about

00:31:41,740 --> 00:31:46,510
it given disappear hmm and it's just a

00:31:44,830 --> 00:31:48,790
matter of waiting time how much of it is

00:31:46,510 --> 00:31:51,340
we need to put decent resources into

00:31:48,790 --> 00:31:53,770
getting pip actually you know maintained

00:31:51,340 --> 00:31:55,090
and developed and getting better testing

00:31:53,770 --> 00:31:56,740
of what we're doing when we do when

00:31:55,090 --> 00:31:57,850
we're putting out releases and how much

00:31:56,740 --> 00:32:01,180
of it is we're just going to have to

00:31:57,850 --> 00:32:03,760
live with this all right so where the

00:32:01,180 --> 00:32:06,310
thing is something was released once and

00:32:03,760 --> 00:32:08,770
it's bad we have to live with that until

00:32:06,310 --> 00:32:10,750
the last user of that thing that was

00:32:08,770 --> 00:32:12,820
released wants to be able to install it

00:32:10,750 --> 00:32:17,350
because we can't go back to a thing that

00:32:12,820 --> 00:32:18,690
was put up in on pi PI in 2004 and so by

00:32:17,350 --> 00:32:21,250
the way we're going to fix that package

00:32:18,690 --> 00:32:23,460
that like ethically we've decided that

00:32:21,250 --> 00:32:26,380
editing other people's code is not okay

00:32:23,460 --> 00:32:29,740
so the only route we've got to fix that

00:32:26,380 --> 00:32:31,060
thing is to figure out workarounds and

00:32:29,740 --> 00:32:33,940
encode them and our thing and then wait

00:32:31,060 --> 00:32:35,500
for the users of that to die off and by

00:32:33,940 --> 00:32:37,180
die off I mean stop using the newer

00:32:35,500 --> 00:32:38,650
versions of purp like we can always say

00:32:37,180 --> 00:32:40,030
if you want to install that broken thing

00:32:38,650 --> 00:32:44,320
over there use put less than eight

00:32:40,030 --> 00:32:45,790
that's a valid strategy moving it

00:32:44,320 --> 00:32:47,170
forward to actually get really clean

00:32:45,790 --> 00:32:50,260
stuff and get rid of the run arbitrary

00:32:47,170 --> 00:32:51,730
code and you have to run egan photo to

00:32:50,260 --> 00:32:53,320
be able to get the egg info to be able

00:32:51,730 --> 00:32:54,940
to determine what you need to run to run

00:32:53,320 --> 00:32:57,130
the Ergo info and to get rid of those

00:32:54,940 --> 00:32:58,840
things that's a resource problem that's

00:32:57,130 --> 00:33:01,270
getting people to put patches up to perp

00:32:58,840 --> 00:33:03,850
and set up tools and warehouse that will

00:33:01,270 --> 00:33:05,470
tie the things together and to drive the

00:33:03,850 --> 00:33:07,600
discussion to reach consensus about

00:33:05,470 --> 00:33:10,390
questions like what should be called and

00:33:07,600 --> 00:33:13,320
you know the trivia that's a resourcing

00:33:10,390 --> 00:33:16,559
problem so more resources will help

00:33:13,320 --> 00:33:18,299
um but maybe i don't know maybe half the

00:33:16,559 --> 00:33:19,980
problem is the fact that once something

00:33:18,299 --> 00:33:22,950
bad is out there in on pi PI it's out

00:33:19,980 --> 00:33:24,240
there on pi PI for a long time but kind

00:33:22,950 --> 00:33:26,130
of the dominating thing today is we

00:33:24,240 --> 00:33:27,299
don't have better answers we I can't

00:33:26,130 --> 00:33:29,370
step up and say hey this is what you

00:33:27,299 --> 00:33:31,049
should do this will work better once we

00:33:29,370 --> 00:33:33,690
get to that point then we can say okay

00:33:31,049 --> 00:33:35,639
now the old thing is deprecated you guys

00:33:33,690 --> 00:33:36,899
have got five years and then at the end

00:33:35,639 --> 00:33:38,279
of that we're going to a release to put

00:33:36,899 --> 00:33:40,110
that doesn't support the old thing and

00:33:38,279 --> 00:33:43,049
it will break and you'll need to choose

00:33:40,110 --> 00:33:44,610
between newark perp and and that old

00:33:43,049 --> 00:33:46,649
thing or given those people that did the

00:33:44,610 --> 00:33:51,360
old thing to do in your release but yeah

00:33:46,649 --> 00:33:53,029
resources needed there's one more

00:33:51,360 --> 00:33:56,399
question behind you if you've got time

00:33:53,029 --> 00:33:57,929
no no three it's our own brain thank you

00:33:56,399 --> 00:34:05,070
guys for coming along and hearing me

00:33:57,929 --> 00:34:07,879
rant ish obviously I'm happy fake I'm

00:34:05,070 --> 00:34:11,940
happy to take questions in the hallway

00:34:07,879 --> 00:34:13,770
as a thank you to Robert from the rest

00:34:11,940 --> 00:34:18,530
of us at PyCon we have a very aptly

00:34:13,770 --> 00:34:18,530
named thank you mug Robert

00:34:23,929 --> 00:34:25,990

YouTube URL: https://www.youtube.com/watch?v=tqVWzndh374


