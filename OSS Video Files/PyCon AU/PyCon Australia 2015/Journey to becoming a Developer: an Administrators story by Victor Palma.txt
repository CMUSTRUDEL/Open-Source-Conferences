Title: Journey to becoming a Developer: an Administrators story by Victor Palma
Publication date: 2015-08-04
Playlist: PyCon Australia 2015
Description: 
	As a system operator we sometimes have to create scripts to maintain our infrastructure.  However because of DevOps some of us have taken a path to move more towards a developer role.  That journey can be a bit tough specially if you don’t have the proper support in place.  Fortunately for me I had some help along the way and they gave me some direction that has improved my development.  Here is a list of small things to help you on that journey:
• Changing the way we think (mindset of a developer)
• Idiomatic python
• Zen of Python by example
• Testing


PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:09,550 --> 00:00:19,810
thank you for your patience I give you

00:00:11,800 --> 00:00:21,100
department all right thank you so thanks

00:00:19,810 --> 00:00:23,290
for coming sorry for the technical

00:00:21,100 --> 00:00:26,919
difficulties that we had today it's a

00:00:23,290 --> 00:00:28,980
mac what do you expect so my talk is not

00:00:26,919 --> 00:00:31,450
really too technical it's more about

00:00:28,980 --> 00:00:33,070
some of the journey that I've gone

00:00:31,450 --> 00:00:35,200
through in the past couple years from

00:00:33,070 --> 00:00:38,739
becoming more of sis administrator to

00:00:35,200 --> 00:00:41,079
more of a developer role my name is

00:00:38,739 --> 00:00:42,969
Victor Palma I've been I currently work

00:00:41,079 --> 00:00:44,949
for rackspace sort of fought last five

00:00:42,969 --> 00:00:46,890
and a half years I loved scuba-diving

00:00:44,949 --> 00:00:49,660
something I picked up recently and

00:00:46,890 --> 00:00:52,329
something I am very fortunate to be here

00:00:49,660 --> 00:00:56,519
in Australia to go scuba diving after

00:00:52,329 --> 00:00:59,710
this so I pretty looking forward to that

00:00:56,519 --> 00:01:02,170
so I don't know if you guys know but

00:00:59,710 --> 00:01:04,870
yesterday or today when I woke up this

00:01:02,170 --> 00:01:08,260
morning it's actually sysadmin day so

00:01:04,870 --> 00:01:10,690
you should thank yourself you know if

00:01:08,260 --> 00:01:16,120
your system inis traitor congratulations

00:01:10,690 --> 00:01:19,330
happy sysadmin day so really when the

00:01:16,120 --> 00:01:21,460
way when I started putting this talk

00:01:19,330 --> 00:01:23,020
together it really came about you know

00:01:21,460 --> 00:01:25,660
some of the experiences that I started

00:01:23,020 --> 00:01:27,820
with and initially it was more of like

00:01:25,660 --> 00:01:30,310
it felt like you know computer saying

00:01:27,820 --> 00:01:33,040
now they always had their own mind and

00:01:30,310 --> 00:01:36,760
that really was more due to either bad

00:01:33,040 --> 00:01:38,590
code bad hardware or something just not

00:01:36,760 --> 00:01:41,470
working correctly connectivity or what

00:01:38,590 --> 00:01:43,810
have you not hardware has gotten better

00:01:41,470 --> 00:01:46,300
so that has gone away by the same time

00:01:43,810 --> 00:01:48,790
it also increases but you know you do

00:01:46,300 --> 00:01:52,360
what you can with what you have but more

00:01:48,790 --> 00:01:54,340
importantly as it relates to python not

00:01:52,360 --> 00:01:58,200
Python fortunately but just in general

00:01:54,340 --> 00:02:00,670
like it was more about the code that

00:01:58,200 --> 00:02:02,880
developers were heading to me as an

00:02:00,670 --> 00:02:05,680
operator in I was actually running

00:02:02,880 --> 00:02:10,060
executing for them and unfortunately

00:02:05,680 --> 00:02:13,030
most of my experiences early on was more

00:02:10,060 --> 00:02:14,920
around the developer throwing you know

00:02:13,030 --> 00:02:16,629
saying they're done is five o'clock in

00:02:14,920 --> 00:02:17,740
the afternoon they leave and then all

00:02:16,629 --> 00:02:19,900
the sudden

00:02:17,740 --> 00:02:21,580
I have to work the weekend because the

00:02:19,900 --> 00:02:24,010
code is bad and this stuff keeps

00:02:21,580 --> 00:02:26,530
rebooting so that fell a lot more like

00:02:24,010 --> 00:02:28,600
you know developers done you know during

00:02:26,530 --> 00:02:30,730
waste over the wall and just saying like

00:02:28,600 --> 00:02:34,060
up it's not a problem you know the

00:02:30,730 --> 00:02:36,250
eternal it working in my machine I don't

00:02:34,060 --> 00:02:40,300
know why you did wrong or you know what

00:02:36,250 --> 00:02:42,070
would happen so inevitably what that

00:02:40,300 --> 00:02:45,880
ended up being is more of repetitive

00:02:42,070 --> 00:02:48,610
task so it felt more like this where I

00:02:45,880 --> 00:02:51,010
actually had to reboot the machine or

00:02:48,610 --> 00:02:53,320
write scripts to say if the memory

00:02:51,010 --> 00:02:55,660
reaches this level then go ahead and

00:02:53,320 --> 00:02:58,930
reboot the machine because that was the

00:02:55,660 --> 00:03:01,240
only fix for it fortunately for us you

00:02:58,930 --> 00:03:04,060
know here you know we're safe now

00:03:01,240 --> 00:03:05,680
because now we have DevOps you know

00:03:04,060 --> 00:03:08,620
that's going to solve all the things and

00:03:05,680 --> 00:03:11,950
it's going to fix everything that's kind

00:03:08,620 --> 00:03:15,490
of like a lie but it's really more or

00:03:11,950 --> 00:03:17,320
less how the evolution esta sister

00:03:15,490 --> 00:03:19,870
administrator has gone out to become

00:03:17,320 --> 00:03:22,020
more of a developer role especially

00:03:19,870 --> 00:03:25,810
today when we deal with tools like

00:03:22,020 --> 00:03:28,050
ansible salt there are python-based we

00:03:25,810 --> 00:03:30,850
end up getting more into the realm of

00:03:28,050 --> 00:03:34,380
programming what does that look like you

00:03:30,850 --> 00:03:38,800
know insult is you know the salt states

00:03:34,380 --> 00:03:41,590
the formulas etc which inevitably goes

00:03:38,800 --> 00:03:45,030
into us becoming more about programmers

00:03:41,590 --> 00:03:47,370
and thinking about how we we do things

00:03:45,030 --> 00:03:49,990
what it really means is that as

00:03:47,370 --> 00:03:52,090
programmers or developers and system

00:03:49,990 --> 00:03:54,570
operators at the end of day it's just

00:03:52,090 --> 00:03:58,960
you know same coin two different faces

00:03:54,570 --> 00:04:01,150
as developers we focus more on features

00:03:58,960 --> 00:04:04,390
which features equals change which

00:04:01,150 --> 00:04:08,260
equals instability as systems operators

00:04:04,390 --> 00:04:09,670
we are we care about the opposite we

00:04:08,260 --> 00:04:13,480
really don't want to change things if

00:04:09,670 --> 00:04:17,560
they're working mainly because changes

00:04:13,480 --> 00:04:19,299
equals a risk for failure and because we

00:04:17,560 --> 00:04:22,030
want to make sure those systems stay up

00:04:19,299 --> 00:04:24,220
because that's our responsibility it's

00:04:22,030 --> 00:04:28,060
really you know it's really challenging

00:04:24,220 --> 00:04:30,740
as I mentioned before the

00:04:28,060 --> 00:04:32,840
becoming a developer has been more of an

00:04:30,740 --> 00:04:34,819
evolution you know you could think of I

00:04:32,840 --> 00:04:37,009
start acetate ertad when I first started

00:04:34,819 --> 00:04:39,940
working with you know sis administrator

00:04:37,009 --> 00:04:43,130
I did that for a very long time and

00:04:39,940 --> 00:04:45,319
eventually you know I grew into doing

00:04:43,130 --> 00:04:48,229
more operations so you said I became mr.

00:04:45,319 --> 00:04:51,020
Potato Head just like any system

00:04:48,229 --> 00:04:52,550
administrator it takes time to become a

00:04:51,020 --> 00:04:55,880
programmer a good programmer for that

00:04:52,550 --> 00:04:59,780
matter any you know unfortunately in our

00:04:55,880 --> 00:05:01,789
industry today when someone has worked

00:04:59,780 --> 00:05:04,310
on a project for you know one year three

00:05:01,789 --> 00:05:07,550
years and they've managed you know 1

00:05:04,310 --> 00:05:09,919
1020 servers they think that they know

00:05:07,550 --> 00:05:12,020
everything right so just like a

00:05:09,919 --> 00:05:14,120
programmer after a couple years you know

00:05:12,020 --> 00:05:16,340
one to one in two years everyone thinks

00:05:14,120 --> 00:05:18,590
that their senior developer right or

00:05:16,340 --> 00:05:21,259
senior developers more of a running joke

00:05:18,590 --> 00:05:22,789
because it takes a lot of time it takes

00:05:21,259 --> 00:05:24,169
a lot of time experience to work on

00:05:22,789 --> 00:05:27,080
different projects different things to

00:05:24,169 --> 00:05:29,750
actually become a really good developer

00:05:27,080 --> 00:05:31,449
which means that you know become a

00:05:29,750 --> 00:05:35,210
developer it's really not that easy

00:05:31,449 --> 00:05:37,250
there's a lot of things that take to

00:05:35,210 --> 00:05:39,380
become a good developer which you know

00:05:37,250 --> 00:05:41,389
many one of these things ranges from

00:05:39,380 --> 00:05:43,849
programming whether you need to know

00:05:41,389 --> 00:05:46,130
algorithms you know what our programming

00:05:43,849 --> 00:05:48,889
language you're working on libraries

00:05:46,130 --> 00:05:50,389
frameworks you're even even your own

00:05:48,889 --> 00:05:52,099
editor right i mean there's different

00:05:50,389 --> 00:05:54,349
people that focus on different things

00:05:52,099 --> 00:05:57,560
you know personally i like them as my

00:05:54,349 --> 00:06:00,380
editor even as a system inis trader vam

00:05:57,560 --> 00:06:03,500
has always been my my editor but i think

00:06:00,380 --> 00:06:05,449
lots of times as developers or system

00:06:03,500 --> 00:06:07,190
inis traitors we forget about couple

00:06:05,449 --> 00:06:10,180
miscellaneous skills that are very

00:06:07,190 --> 00:06:12,889
important one of them which is

00:06:10,180 --> 00:06:14,840
communications an attitude I think

00:06:12,889 --> 00:06:16,669
that's been something that I kind of

00:06:14,840 --> 00:06:19,639
heard throughout people stocks today and

00:06:16,669 --> 00:06:21,319
you know especially working on open

00:06:19,639 --> 00:06:24,710
source projects communication is very

00:06:21,319 --> 00:06:27,199
important as we start to get interested

00:06:24,710 --> 00:06:28,940
in different projects we start to

00:06:27,199 --> 00:06:30,740
contribute and when we ask for help or

00:06:28,940 --> 00:06:33,530
we say hey I want to do things this way

00:06:30,740 --> 00:06:36,190
we end up saying you know sometimes

00:06:33,530 --> 00:06:38,830
we'll get replies of saying no you

00:06:36,190 --> 00:06:42,430
you know that's not that's not it indru

00:06:38,830 --> 00:06:44,290
in instead us you know we should be

00:06:42,430 --> 00:06:47,020
giving guidance to do things a little

00:06:44,290 --> 00:06:48,550
differently so if someone you know it's

00:06:47,020 --> 00:06:51,010
contribute to a project and they tell

00:06:48,550 --> 00:06:53,470
you hey you should do it this way even

00:06:51,010 --> 00:06:55,960
though you know the same now what they

00:06:53,470 --> 00:06:57,580
really should be saying is no that

00:06:55,960 --> 00:07:00,580
doesn't work for this project because of

00:06:57,580 --> 00:07:02,230
XYZ reasons but you should do it this

00:07:00,580 --> 00:07:04,120
way or you might want to look at this

00:07:02,230 --> 00:07:07,000
other alternative that might suit your

00:07:04,120 --> 00:07:09,550
needs better just like any good coder

00:07:07,000 --> 00:07:12,520
the only reason I have their that is

00:07:09,550 --> 00:07:14,790
beer I personally love beer craftbeer I

00:07:12,520 --> 00:07:18,310
come from Texas we have a very big

00:07:14,790 --> 00:07:21,820
microbrewery so there's a lot of you

00:07:18,310 --> 00:07:24,700
know beers and I think that kind of goes

00:07:21,820 --> 00:07:31,060
in hand in hand so that's what beers are

00:07:24,700 --> 00:07:32,850
there now this is from kc d XKCD which

00:07:31,060 --> 00:07:35,590
you know this is how to write good code

00:07:32,850 --> 00:07:37,420
it really is just a pun because there's

00:07:35,590 --> 00:07:40,240
really nothing out there that tells you

00:07:37,420 --> 00:07:42,190
you know what good code looks like what

00:07:40,240 --> 00:07:45,910
bad code looks like however they are a

00:07:42,190 --> 00:07:48,250
lot of good standards so we'll watch it

00:07:45,910 --> 00:07:49,690
and one should follow and we should not

00:07:48,250 --> 00:07:52,180
always be trying to reinvent the wheel

00:07:49,690 --> 00:07:55,780
right we're coming in there's a lot of

00:07:52,180 --> 00:07:57,630
things I've been proving that have been

00:07:55,780 --> 00:08:00,640
done and they proved that works and

00:07:57,630 --> 00:08:03,760
really just like anything like from a

00:08:00,640 --> 00:08:06,460
system restore point of view in taking

00:08:03,760 --> 00:08:09,070
more of a programming or developer role

00:08:06,460 --> 00:08:13,090
it's more of kingston way we think about

00:08:09,070 --> 00:08:16,150
things right lots of times as

00:08:13,090 --> 00:08:17,500
administrators when a system is down the

00:08:16,150 --> 00:08:19,600
first thing that you do is you want to

00:08:17,500 --> 00:08:22,720
jump in and fix it get it up and running

00:08:19,600 --> 00:08:25,150
because usually you have angry customers

00:08:22,720 --> 00:08:26,890
or your boss behind you telling you get

00:08:25,150 --> 00:08:28,860
it up or set up every you know five

00:08:26,890 --> 00:08:31,330
minutes and something like that so

00:08:28,860 --> 00:08:32,409
instinctively as administrators that's

00:08:31,330 --> 00:08:34,419
the first thing one that we want to do

00:08:32,409 --> 00:08:37,690
we want to just jump in there fix it and

00:08:34,419 --> 00:08:41,280
whatever it takes get it done um as a

00:08:37,690 --> 00:08:44,050
developer that doesn't really work right

00:08:41,280 --> 00:08:46,720
it's been my experience recently that

00:08:44,050 --> 00:08:48,220
when I started programming that's what I

00:08:46,720 --> 00:08:50,360
would tend to do I would just want to

00:08:48,220 --> 00:08:53,180
jump in there and change things

00:08:50,360 --> 00:08:56,060
and just not really worry too much about

00:08:53,180 --> 00:08:58,399
what was the ramifications of the things

00:08:56,060 --> 00:09:03,110
I did which could end up looking like

00:08:58,399 --> 00:09:04,940
this this is just really a call diagram

00:09:03,110 --> 00:09:06,440
it shows you the dependencies and stuff

00:09:04,940 --> 00:09:10,839
like that which there's better ways to

00:09:06,440 --> 00:09:14,510
doing it and it really just means that

00:09:10,839 --> 00:09:18,560
once you take a step back right as you

00:09:14,510 --> 00:09:19,640
know the previous talk to hear you

00:09:18,560 --> 00:09:21,440
mentioned that there should be a

00:09:19,640 --> 00:09:23,000
contract with API is for interfaces

00:09:21,440 --> 00:09:24,950
that's really what this means is that

00:09:23,000 --> 00:09:26,750
you should really take a look at what

00:09:24,950 --> 00:09:29,660
you're doing make sure you're following

00:09:26,750 --> 00:09:33,800
things semantically but you know

00:09:29,660 --> 00:09:35,779
fortunately for us in Python daresay you

00:09:33,800 --> 00:09:38,300
say the stand of pines on which if you

00:09:35,779 --> 00:09:41,899
do import this you get something like

00:09:38,300 --> 00:09:44,180
this which is really just telling you a

00:09:41,899 --> 00:09:46,399
couple different things as you know that

00:09:44,180 --> 00:09:49,399
will guide you in you know should you

00:09:46,399 --> 00:09:51,350
lose your way figure out how or what you

00:09:49,399 --> 00:09:53,060
should be doing to develop and some of

00:09:51,350 --> 00:09:55,339
the things that that work I'm not going

00:09:53,060 --> 00:09:59,709
to be a due to time constraint I'm not

00:09:55,339 --> 00:10:02,510
going to go through all of these 19

00:09:59,709 --> 00:10:06,260
things but I will go and highlight some

00:10:02,510 --> 00:10:09,140
of them just to kind of show how they've

00:10:06,260 --> 00:10:10,519
influenced me and in the way I've you

00:10:09,140 --> 00:10:14,420
know my journey to being more of a

00:10:10,519 --> 00:10:17,540
developer the first one it's really more

00:10:14,420 --> 00:10:20,029
about beautiful is better or simplicity

00:10:17,540 --> 00:10:24,370
it really is just about taking things

00:10:20,029 --> 00:10:26,660
simple and not making complicated and

00:10:24,370 --> 00:10:29,600
that is very important because lots of

00:10:26,660 --> 00:10:32,360
times we tend to overcomplicate things

00:10:29,600 --> 00:10:34,190
or want to do things in a fancy way just

00:10:32,360 --> 00:10:36,199
because we want to show that you know we

00:10:34,190 --> 00:10:38,600
learned this new thing or you know maybe

00:10:36,199 --> 00:10:40,490
we find out about list comprehension and

00:10:38,600 --> 00:10:42,470
now we want to go back and refactor ola

00:10:40,490 --> 00:10:46,610
code because it's cool they're cool to

00:10:42,470 --> 00:10:48,230
make things things simple or you know in

00:10:46,610 --> 00:10:51,680
some cases we want to make sure that

00:10:48,230 --> 00:10:53,329
we're explicit right let and which is

00:10:51,680 --> 00:10:55,760
one of those things from the scent of

00:10:53,329 --> 00:10:58,399
Python which is being explicit is better

00:10:55,760 --> 00:11:02,390
than implicit compound statements for

00:10:58,399 --> 00:11:03,279
example they're actually pretty simple

00:11:02,390 --> 00:11:06,999
right

00:11:03,279 --> 00:11:09,999
the example here oh sorry example there

00:11:06,999 --> 00:11:13,180
if eggs for example print egg that's

00:11:09,999 --> 00:11:14,680
okay Python will interpret it and it

00:11:13,180 --> 00:11:17,249
will output your data the way you want

00:11:14,680 --> 00:11:20,350
it however the nicer cleaner way of

00:11:17,249 --> 00:11:23,680
being explicit would be the second way

00:11:20,350 --> 00:11:26,920
right use do if if X colon de and print

00:11:23,680 --> 00:11:30,129
egg and spam it reads a lot better if

00:11:26,920 --> 00:11:31,930
someone really you know comes and tries

00:11:30,129 --> 00:11:33,850
to take over your code because you did

00:11:31,930 --> 00:11:35,439
something it will be a lot easier for

00:11:33,850 --> 00:11:38,110
them to read the second statement then

00:11:35,439 --> 00:11:40,749
try to read one statement which they

00:11:38,110 --> 00:11:43,240
might just glanced at it and for not

00:11:40,749 --> 00:11:45,040
really think about it and go on and that

00:11:43,240 --> 00:11:47,680
will trip them for you know next 15-20

00:11:45,040 --> 00:11:51,699
minutes because one was not very

00:11:47,680 --> 00:11:54,999
explicit that being said you know

00:11:51,699 --> 00:11:57,990
another example of that would be taking

00:11:54,999 --> 00:12:00,999
advantage of some of the Python built in

00:11:57,990 --> 00:12:03,490
libraries right so for example using the

00:12:00,999 --> 00:12:05,800
wif statement I know personally dead

00:12:03,490 --> 00:12:10,000
when I started doing some of the system

00:12:05,800 --> 00:12:14,170
administration I did a lot of pearl bad

00:12:10,000 --> 00:12:15,430
me but then I learned Python and I

00:12:14,170 --> 00:12:16,899
started doing things like you know

00:12:15,430 --> 00:12:20,199
opening files because I needed to do

00:12:16,899 --> 00:12:21,550
things so I needed to you know I don't

00:12:20,199 --> 00:12:23,350
know for whatever reason I need to open

00:12:21,550 --> 00:12:26,050
file you know using simple statements

00:12:23,350 --> 00:12:29,889
like the whiff open statement right

00:12:26,050 --> 00:12:31,509
makes it a lot easier to in to open

00:12:29,889 --> 00:12:34,059
files and it will handle things a little

00:12:31,509 --> 00:12:36,550
bit nicer than that you did right that's

00:12:34,059 --> 00:12:39,610
pretty much another example of how you

00:12:36,550 --> 00:12:41,559
know being simple or you know using some

00:12:39,610 --> 00:12:44,649
of the Zen of pinus on to make things a

00:12:41,559 --> 00:12:48,339
little better you know fortunately for

00:12:44,649 --> 00:12:51,220
me I had actually I've have had access

00:12:48,339 --> 00:12:52,990
to great mentors which they've taught me

00:12:51,220 --> 00:12:56,620
different things and pushed me to become

00:12:52,990 --> 00:12:58,750
a better better developer and one of the

00:12:56,620 --> 00:13:00,459
things that they taught me was you know

00:12:58,750 --> 00:13:03,129
choose list comprehension or

00:13:00,459 --> 00:13:05,679
comprehension they're actually pretty

00:13:03,129 --> 00:13:07,959
nifty I did not know about him so when I

00:13:05,679 --> 00:13:09,639
started writing Python my code was

00:13:07,959 --> 00:13:11,709
pretty much like the top the top line

00:13:09,639 --> 00:13:13,720
which was just you know for I in range

00:13:11,709 --> 00:13:15,620
you know done do these things which

00:13:13,720 --> 00:13:18,040
there's nothing wrong with it it's

00:13:15,620 --> 00:13:21,620
you know it's very valid but I think I

00:13:18,040 --> 00:13:23,870
side mature you know using Python and

00:13:21,620 --> 00:13:26,690
become more proficient in it I started

00:13:23,870 --> 00:13:27,980
doing more things kind of like the

00:13:26,690 --> 00:13:31,970
second statement which is list

00:13:27,980 --> 00:13:34,060
comprehensions and you know there's you

00:13:31,970 --> 00:13:36,529
could do it not only can you do it for

00:13:34,060 --> 00:13:39,800
list we could do it for stats you could

00:13:36,529 --> 00:13:40,760
do it for dictionaries so there's a lot

00:13:39,800 --> 00:13:42,830
of things that you could do with them

00:13:40,760 --> 00:13:46,430
for does built-ins and will make your

00:13:42,830 --> 00:13:47,900
code lot more readable as I mentioned

00:13:46,430 --> 00:13:51,230
before it took me a while for them to

00:13:47,900 --> 00:13:53,450
stumble onto them because i think as

00:13:51,230 --> 00:13:56,240
anyone that starting to program is

00:13:53,450 --> 00:13:58,220
starting to you know devil in

00:13:56,240 --> 00:14:00,560
programming we just want to go and start

00:13:58,220 --> 00:14:02,839
writing things creating things and not

00:14:00,560 --> 00:14:04,460
really care too much about you know some

00:14:02,839 --> 00:14:06,620
of the building stuff and it's just

00:14:04,460 --> 00:14:09,350
really as i mentioned before or a matter

00:14:06,620 --> 00:14:12,080
of time you know figure out and learning

00:14:09,350 --> 00:14:18,140
what's available to us and how do we

00:14:12,080 --> 00:14:21,980
take advantage of those things so as one

00:14:18,140 --> 00:14:25,339
of the persons that mentored me he

00:14:21,980 --> 00:14:28,880
pretty much said to me that programming

00:14:25,339 --> 00:14:31,370
is unless you're you know unless you're

00:14:28,880 --> 00:14:34,220
documenting your code or writing tests

00:14:31,370 --> 00:14:38,630
you're really not doing anything more

00:14:34,220 --> 00:14:40,760
than just hacking your hacking you're

00:14:38,630 --> 00:14:42,709
not really programming you're not you're

00:14:40,760 --> 00:14:44,390
not really being efficient at coding

00:14:42,709 --> 00:14:46,760
because all you're doing is just hacking

00:14:44,390 --> 00:14:49,970
things right so one of the things that

00:14:46,760 --> 00:14:53,600
he taught me was to actually get into

00:14:49,970 --> 00:14:56,029
habit of documenting things right so

00:14:53,600 --> 00:14:59,300
which brings me into documents drinks

00:14:56,029 --> 00:15:03,110
documents drinks in functions in Python

00:14:59,300 --> 00:15:05,600
makes things a lot readable right they

00:15:03,110 --> 00:15:07,459
should be used mainly because they

00:15:05,600 --> 00:15:09,800
describe what your function does how do

00:15:07,459 --> 00:15:13,070
you do it without having to read the

00:15:09,800 --> 00:15:14,450
exact thing of you know if you have a

00:15:13,070 --> 00:15:16,430
function you don't really don't need to

00:15:14,450 --> 00:15:18,350
know exactly or read how it's doing

00:15:16,430 --> 00:15:20,180
things you just need to know what inputs

00:15:18,350 --> 00:15:22,190
it takes and what is the output that you

00:15:20,180 --> 00:15:24,200
take and that is the contract right that

00:15:22,190 --> 00:15:26,209
is a contract that you know the speaker

00:15:24,200 --> 00:15:27,950
reform you mentioned that you should be

00:15:26,209 --> 00:15:30,560
making contracts to where

00:15:27,950 --> 00:15:33,560
your end users so they know exactly how

00:15:30,560 --> 00:15:35,420
you know how it is that your function is

00:15:33,560 --> 00:15:37,250
going to work then you know that's how

00:15:35,420 --> 00:15:40,820
they know it's it will work and you know

00:15:37,250 --> 00:15:43,550
it will just move forward personally and

00:15:40,820 --> 00:15:46,460
with my mentor that I've been working

00:15:43,550 --> 00:15:49,760
very closely with he produces he prefers

00:15:46,460 --> 00:15:53,030
restructures text which for me I like it

00:15:49,760 --> 00:15:55,240
it works for me is the same thing as the

00:15:53,030 --> 00:15:59,990
one before just using you know the three

00:15:55,240 --> 00:16:01,880
three commas 44 comments but for me

00:15:59,990 --> 00:16:04,160
personally I kind of like that so when

00:16:01,880 --> 00:16:05,870
you do doc utils something like that it

00:16:04,160 --> 00:16:09,290
renders the code just a little bit nicer

00:16:05,870 --> 00:16:12,490
and again it's more about writing your

00:16:09,290 --> 00:16:16,640
documentation and then being able to do

00:16:12,490 --> 00:16:20,780
things that you you want to do now one

00:16:16,640 --> 00:16:23,330
weird thing here is the string up top

00:16:20,780 --> 00:16:26,630
when in the definition function that's a

00:16:23,330 --> 00:16:29,090
Python 3 4 if I my name is taking dang

00:16:26,630 --> 00:16:34,220
where 53.5 where you could actually

00:16:29,090 --> 00:16:35,480
start annotating the type of they just

00:16:34,220 --> 00:16:37,640
going to return so in this case is going

00:16:35,480 --> 00:16:40,280
to return a string and it actually makes

00:16:37,640 --> 00:16:43,780
it a little more declarative so it's

00:16:40,280 --> 00:16:46,970
personally I kind of like it coming from

00:16:43,780 --> 00:16:49,310
other languages might feel more natural

00:16:46,970 --> 00:16:52,090
from python that looks a little bit

00:16:49,310 --> 00:16:56,710
weird if you haven't seen it before

00:16:52,090 --> 00:16:59,510
really a DN a day as you mentioned or

00:16:56,710 --> 00:17:01,670
it's been ingrained in me is that unless

00:16:59,510 --> 00:17:03,530
you doing testing you really are not

00:17:01,670 --> 00:17:05,300
programming you're not really coding

00:17:03,530 --> 00:17:07,190
because you there's no way for you to

00:17:05,300 --> 00:17:09,790
make quick changes and then figure out

00:17:07,190 --> 00:17:11,959
if things things are working right so

00:17:09,790 --> 00:17:13,190
with that being said one of the best

00:17:11,959 --> 00:17:15,560
things that you could do is getting the

00:17:13,190 --> 00:17:17,120
habit of testing you know writing tests

00:17:15,560 --> 00:17:21,980
for your code and some of those tools

00:17:17,120 --> 00:17:26,000
are coverage talks knows and for us we

00:17:21,980 --> 00:17:27,500
use pretty much knows with what you know

00:17:26,000 --> 00:17:29,240
some of the stuff that we do and this is

00:17:27,500 --> 00:17:31,130
just an example of nose running with

00:17:29,240 --> 00:17:33,890
coverage in it and it kind of tells you

00:17:31,130 --> 00:17:35,510
where you know where you have coverage

00:17:33,890 --> 00:17:37,400
where you're missing you know some of

00:17:35,510 --> 00:17:40,890
the things that you should be doing or

00:17:37,400 --> 00:17:44,250
you should be working to right now

00:17:40,890 --> 00:17:47,310
utility has about 90% test coverage

00:17:44,250 --> 00:17:48,720
which pretty good it's not bad but you

00:17:47,310 --> 00:17:51,450
know we definitely could do a little bit

00:17:48,720 --> 00:17:53,190
better better than that with that being

00:17:51,450 --> 00:17:57,180
said I really don't have that much to

00:17:53,190 --> 00:17:59,460
say except that part of you know

00:17:57,180 --> 00:18:01,890
learning to program just experiment try

00:17:59,460 --> 00:18:03,960
different things find something that is

00:18:01,890 --> 00:18:05,580
you know that you feel passionate about

00:18:03,960 --> 00:18:10,020
so for me for example one of the things

00:18:05,580 --> 00:18:12,630
that I do is with I like scuba diving so

00:18:10,020 --> 00:18:14,250
in my computer it actually has a lot of

00:18:12,630 --> 00:18:15,900
information so I've actually started

00:18:14,250 --> 00:18:18,510
taking a look at what information that

00:18:15,900 --> 00:18:20,490
provides and figure out what I could do

00:18:18,510 --> 00:18:23,400
with that data so for me that is

00:18:20,490 --> 00:18:25,590
something that works for me and it's a

00:18:23,400 --> 00:18:27,270
way for me to experiment with the

00:18:25,590 --> 00:18:29,970
language figure out different things and

00:18:27,270 --> 00:18:31,830
become a little more proficient and

00:18:29,970 --> 00:18:34,950
usually that's usually the best way that

00:18:31,830 --> 00:18:37,320
I've seen people there's you know that

00:18:34,950 --> 00:18:39,030
are becoming more programmers or want to

00:18:37,320 --> 00:18:41,250
you know go down the program in route

00:18:39,030 --> 00:18:43,260
it's fine something that they are

00:18:41,250 --> 00:18:45,630
passionate about and then start doing

00:18:43,260 --> 00:18:48,350
something with that data there's some

00:18:45,630 --> 00:18:50,940
talks today talked about using

00:18:48,350 --> 00:18:53,520
government data to do different things

00:18:50,940 --> 00:18:55,230
right so you know that's something that

00:18:53,520 --> 00:18:56,940
if you're interesting that type of stuff

00:18:55,230 --> 00:18:58,860
there's a lot of different things you

00:18:56,940 --> 00:19:01,020
could do with that so with that being

00:18:58,860 --> 00:19:04,560
said I really don't have anything much

00:19:01,020 --> 00:19:07,550
much else to share with you except you

00:19:04,560 --> 00:19:11,330
know thank you and if anyone has any

00:19:07,550 --> 00:19:11,330
additional questions please

00:19:11,350 --> 00:19:17,220
have any questions for Victor I've got a

00:19:13,809 --> 00:19:17,220
microphone i can run around in

00:19:27,130 --> 00:19:32,320
um

00:19:28,809 --> 00:19:33,970
so did you find that that being citing

00:19:32,320 --> 00:19:35,649
life as a systems administrator and

00:19:33,970 --> 00:19:37,029
within the networking space and moving

00:19:35,649 --> 00:19:39,879
into development that helps you

00:19:37,029 --> 00:19:42,850
understand more of the full stack and do

00:19:39,879 --> 00:19:44,110
you find that that is an advantage kind

00:19:42,850 --> 00:19:46,720
of when you're looking at architecture

00:19:44,110 --> 00:19:49,169
design / say somebody that's just come

00:19:46,720 --> 00:19:52,090
from a pure computer science background

00:19:49,169 --> 00:19:54,549
so that's kind of tricky right because

00:19:52,090 --> 00:19:59,169
it depends on what I'm working on if I'm

00:19:54,549 --> 00:20:00,700
working on you know a system or an

00:19:59,169 --> 00:20:02,830
application that is a client-server

00:20:00,700 --> 00:20:06,369
application yes it definitely helps me

00:20:02,830 --> 00:20:08,559
especially if if I need to figure out

00:20:06,369 --> 00:20:10,419
how to scale the application fortunately

00:20:08,559 --> 00:20:12,789
or unfortunately depending on the

00:20:10,419 --> 00:20:14,350
architecture choices that one makes that

00:20:12,789 --> 00:20:16,240
might not be something that we care for

00:20:14,350 --> 00:20:19,899
right so if you use something like

00:20:16,240 --> 00:20:21,159
docker or something like that you really

00:20:19,899 --> 00:20:23,169
don't care because it's you know

00:20:21,159 --> 00:20:25,179
stateless application and you know

00:20:23,169 --> 00:20:27,100
someone else will go ahead and make that

00:20:25,179 --> 00:20:30,369
scaling for you you don't have to worry

00:20:27,100 --> 00:20:31,899
about that but as far as most of my

00:20:30,369 --> 00:20:35,499
experience has been around systems

00:20:31,899 --> 00:20:38,440
integration and scaling systems and

00:20:35,499 --> 00:20:42,879
making them just work it definitely has

00:20:38,440 --> 00:20:46,240
helped me especially dealing with at the

00:20:42,879 --> 00:20:48,070
lower levels like TCP ports it's at

00:20:46,240 --> 00:20:49,600
least it makes my job a little more

00:20:48,070 --> 00:20:52,029
easier because I know how things work

00:20:49,600 --> 00:20:53,619
and where they break so at least

00:20:52,029 --> 00:20:59,490
troubleshooting becomes a lot a lot

00:20:53,619 --> 00:20:59,490
easier for me anyone else

00:21:01,850 --> 00:21:09,370
alright well let's give Victor a huge

00:21:04,820 --> 00:21:09,370
hand thank you

00:21:16,909 --> 00:21:18,970

YouTube URL: https://www.youtube.com/watch?v=3pphvUMy4Fs


