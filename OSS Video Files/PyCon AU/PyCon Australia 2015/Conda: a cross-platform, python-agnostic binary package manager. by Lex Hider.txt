Title: Conda: a cross-platform, python-agnostic binary package manager. by Lex Hider
Publication date: 2015-08-04
Playlist: PyCon Australia 2015
Description: 
	You may be aware of pip & virtualenv for installing and maintaining your software libraries.

You may not be aware of the fantastic conda project.

It is not limited only to installing python software, also handles installing python itself, and has environments that isolate your code similar to virtualenv.

Come find out this project which has been gaining enthusiastic support in the Scientific Python community. 

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:16,930 --> 00:00:26,660
right ladies and gentlemen we have Lex

00:00:21,430 --> 00:00:28,970
hider here to talk about Condor

00:00:26,660 --> 00:00:31,580
cross-platform language agnostic package

00:00:28,970 --> 00:00:35,989
manager Lex knows a lot about computers

00:00:31,580 --> 00:00:38,320
as he has a beard he hacked data for a

00:00:35,989 --> 00:00:43,059
living in Melbourne and Melbourne and

00:00:38,320 --> 00:00:43,059
I'll just hand this off to Lex

00:00:47,199 --> 00:00:56,330
hi yes so I'm here to talk about Conda

00:00:51,199 --> 00:00:58,190
can you all hear me okay yes sir what n

00:00:56,330 --> 00:01:02,690
selects harder that's where you can find

00:00:58,190 --> 00:01:04,610
me on github and Twitter and okay

00:01:02,690 --> 00:01:07,010
technology and things I'm not great on

00:01:04,610 --> 00:01:09,200
PowerPoint so so if my slides aren't the

00:01:07,010 --> 00:01:11,120
easiest to read there online though if

00:01:09,200 --> 00:01:13,060
you want to follow one of those links

00:01:11,120 --> 00:01:15,500
have also put that on Twitter if you

00:01:13,060 --> 00:01:21,549
check out hashtag Park on oh you you'll

00:01:15,500 --> 00:01:21,549
find it I think let's get started

00:01:22,970 --> 00:01:34,070
so a quick quiz who here uses pip almost

00:01:30,260 --> 00:01:37,700
everyone just in case you don't know

00:01:34,070 --> 00:01:42,470
what PPS pippers how Python programmers

00:01:37,700 --> 00:01:47,240
install packages essentially who here

00:01:42,470 --> 00:01:48,740
uses virtual ends almost everyone so

00:01:47,240 --> 00:01:52,520
again if it's not something you're

00:01:48,740 --> 00:01:54,530
familiar with virtual emphasis away of

00:01:52,520 --> 00:01:56,840
not having a shared place where you

00:01:54,530 --> 00:02:01,340
install your packages it's a way of

00:01:56,840 --> 00:02:03,140
having those isolated so you could if

00:02:01,340 --> 00:02:06,890
you're a Django developer you could have

00:02:03,140 --> 00:02:09,590
the Django 1.4 virtual where you do

00:02:06,890 --> 00:02:11,239
development for one customer and you

00:02:09,590 --> 00:02:13,700
know Django 1.8 you know another for

00:02:11,239 --> 00:02:15,560
example so if it's not something you've

00:02:13,700 --> 00:02:17,540
heard of it's a really good thing to be

00:02:15,560 --> 00:02:21,640
using although hopefully after this talk

00:02:17,540 --> 00:02:21,640
you might consider using Condor instead

00:02:22,520 --> 00:02:29,690
so the TLDR version of my talk is Conda

00:02:28,040 --> 00:02:32,650
if pip and virtual have got married and

00:02:29,690 --> 00:02:39,650
had a baby and you've had it steroids

00:02:32,650 --> 00:02:41,830
that would be Conda and you must work

00:02:39,650 --> 00:02:41,830
out

00:02:43,980 --> 00:02:51,360
second version of the TLDR one is that

00:02:48,620 --> 00:02:56,190
it's like a cross-platform homebrew

00:02:51,360 --> 00:02:57,930
written in Python but it's not just

00:02:56,190 --> 00:03:00,680
limited to Python packages that it can

00:02:57,930 --> 00:03:00,680
install anything

00:03:05,430 --> 00:03:10,080
so just to clear up some things about

00:03:07,890 --> 00:03:12,870
condor so you you may or may not have

00:03:10,080 --> 00:03:16,290
heard of condor or a Nakano who here has

00:03:12,870 --> 00:03:20,069
used condom before today okay probably

00:03:16,290 --> 00:03:22,530
half the people so there's three things

00:03:20,069 --> 00:03:24,510
that sort of people talk about and it

00:03:22,530 --> 00:03:28,200
can be a little bit confusing which one

00:03:24,510 --> 00:03:30,390
switch so condor is a tool like peepers

00:03:28,200 --> 00:03:33,900
is a tool or homebrew as a - laughs

00:03:30,390 --> 00:03:35,849
Gators are tool that you use to install

00:03:33,900 --> 00:03:37,790
packages also does that thing that

00:03:35,849 --> 00:03:41,540
virtual am does where it isolates

00:03:37,790 --> 00:03:49,799
different installations of things

00:03:41,540 --> 00:03:51,870
anaconda is a installer for the Conda

00:03:49,799 --> 00:03:55,049
tool that also comes bundled with sort

00:03:51,870 --> 00:03:58,470
of the two hundred most popular type

00:03:55,049 --> 00:04:02,370
ipython data packages sort of already on

00:03:58,470 --> 00:04:04,440
there for you and then mini Condor is

00:04:02,370 --> 00:04:07,379
like a mini install so all you want is

00:04:04,440 --> 00:04:09,540
conde it's only a thirty make download

00:04:07,379 --> 00:04:13,069
and you can just install and download

00:04:09,540 --> 00:04:13,069
what you need as you need it

00:04:16,389 --> 00:04:20,750
so is this just another not invented

00:04:18,829 --> 00:04:24,070
here you know they just reinventing your

00:04:20,750 --> 00:04:26,840
wheel and just doing this for no reason

00:04:24,070 --> 00:04:28,850
Travis Ola phone he runs the company

00:04:26,840 --> 00:04:31,880
called continuum IO they're doing lots

00:04:28,850 --> 00:04:33,940
of interesting things the cutting edge

00:04:31,880 --> 00:04:36,290
with Python and data and things and and

00:04:33,940 --> 00:04:40,190
specifically sort of scientific type

00:04:36,290 --> 00:04:44,000
stuff he's essentially the the original

00:04:40,190 --> 00:04:47,330
author of numpy and from a blog that he

00:04:44,000 --> 00:04:49,700
read he wrote several of us asked Guido

00:04:47,330 --> 00:04:52,639
what we can do to fix Python packaging

00:04:49,700 --> 00:04:55,160
for the numpy stack Guido's answer was

00:04:52,639 --> 00:04:58,010
to solve the problem ourselves week

00:04:55,160 --> 00:05:00,710
continuum talking about his word we

00:04:58,010 --> 00:05:04,100
looked at D package rpm pip virtual web

00:05:00,710 --> 00:05:07,040
brew mixes and zero installer and used

00:05:04,100 --> 00:05:08,960
our past experience with APD we thought

00:05:07,040 --> 00:05:11,030
hard about the fundamental issues and

00:05:08,960 --> 00:05:14,410
created the Condor package manager and

00:05:11,030 --> 00:05:14,410
Condor environments

00:05:17,430 --> 00:05:24,830
so condor is the answer it's my third

00:05:20,490 --> 00:05:24,830
version of the one-liner talk

00:05:25,470 --> 00:05:29,000
what is the question I am

00:05:29,240 --> 00:05:33,860
so before afternoon tea and here there

00:05:32,030 --> 00:05:36,590
was a data science a tutorial did anyone

00:05:33,860 --> 00:05:42,710
here attend the tutorial handful of

00:05:36,590 --> 00:05:44,180
people I didn't attend other but

00:05:42,710 --> 00:05:46,010
apparently was a hundred minutes of

00:05:44,180 --> 00:05:48,110
taking people through sort of your first

00:05:46,010 --> 00:05:51,350
steps with things like machine learning

00:05:48,110 --> 00:05:53,600
and data analysis and sort of data

00:05:51,350 --> 00:05:56,139
sciences you know the cool new bar

00:05:53,600 --> 00:05:56,139
squared thing

00:06:05,509 --> 00:06:10,930
so anyways we had a partake in that

00:06:07,789 --> 00:06:10,930
tutorial indeed

00:06:14,330 --> 00:06:18,259
these are the package that you need

00:06:16,250 --> 00:06:21,169
installed to be able to follow along so

00:06:18,259 --> 00:06:23,389
there's 13 of them some of the sort of

00:06:21,169 --> 00:06:26,449
big headers in in the scientific Python

00:06:23,389 --> 00:06:29,360
world numpy pandas so I kept learn and

00:06:26,449 --> 00:06:31,189
there's a few more niche ones so as an

00:06:29,360 --> 00:06:33,199
exercise I went through and you know

00:06:31,189 --> 00:06:34,219
people's how you install packages let's

00:06:33,199 --> 00:06:37,580
see how we go

00:06:34,219 --> 00:06:41,060
using pip to get our 13 packages install

00:06:37,580 --> 00:06:44,590
so we can follow along with something

00:06:41,060 --> 00:06:44,590
like the tutorial that was here before

00:06:44,949 --> 00:06:53,360
so I wrote a script this one is just

00:06:49,280 --> 00:06:55,639
people installing those requirements now

00:06:53,360 --> 00:07:00,080
this is running on my macbook pro here

00:06:55,639 --> 00:07:02,389
it's an i7 on OS 10 took about half an

00:07:00,080 --> 00:07:04,750
hour part of that was probably crappy

00:07:02,389 --> 00:07:04,750
Internet

00:07:05,510 --> 00:07:09,430
and it's say it seated

00:07:11,490 --> 00:07:17,600
I just wanted to get a cricket reference

00:07:13,050 --> 00:07:20,759
in there alright so that worked on OS 10

00:07:17,600 --> 00:07:24,139
but not everyone has OS 10

00:07:20,759 --> 00:07:26,910
some people might be running Linux or

00:07:24,139 --> 00:07:28,800
it's almost certainly be running League

00:07:26,910 --> 00:07:33,870
servers and not OS 10 service so let's

00:07:28,800 --> 00:07:37,860
try that same code I span up a Linux

00:07:33,870 --> 00:07:43,229
virtual machine eight-and-a-half minutes

00:07:37,860 --> 00:07:45,120
later I got this cryptic error message

00:07:43,229 --> 00:07:46,410
so don't worry if you can't see these

00:07:45,120 --> 00:07:49,430
stack dumps it's just sort of

00:07:46,410 --> 00:07:49,430
illustrative purposes

00:07:50,940 --> 00:07:53,810
and that made me sad

00:07:54,890 --> 00:08:01,550
so did some googling it turns out that I

00:07:58,070 --> 00:08:05,990
needed package config sorry version 2

00:08:01,550 --> 00:08:09,280
does that six minutes later and now they

00:08:05,990 --> 00:08:09,280
cryptic error message

00:08:11,330 --> 00:08:18,229
version 3 some more giggling oh we need

00:08:15,680 --> 00:08:19,060
freetype okay let's install that see

00:08:18,229 --> 00:08:25,419
what happens

00:08:19,060 --> 00:08:25,419
talk minutes later fail

00:08:29,060 --> 00:08:34,310
I was doing this yesterday while I was

00:08:31,000 --> 00:08:38,810
watching some of the talks I was getting

00:08:34,310 --> 00:08:40,969
more and more frustrated version 4

00:08:38,810 --> 00:08:42,560
I particularly liked that I ended up on

00:08:40,969 --> 00:08:46,010
the Linux for noobs ready to find my

00:08:42,560 --> 00:08:50,000
answer for that last failure how do we

00:08:46,010 --> 00:08:52,750
go this one took 90 seconds and it

00:08:50,000 --> 00:08:52,750
failed

00:08:54,830 --> 00:09:00,250
I think people can read that but could

00:08:56,810 --> 00:09:00,250
anyone see why that has failed

00:09:00,470 --> 00:09:03,940
a Fortran compiler

00:09:12,339 --> 00:09:18,329
so I think that's the SyFy I think you

00:09:14,920 --> 00:09:24,429
need Fortran to get cyclo installed

00:09:18,329 --> 00:09:29,339
because it's still 1969 so let's install

00:09:24,429 --> 00:09:32,410
Fortran three and a half minutes later

00:09:29,339 --> 00:09:35,160
fails this time we was quite easy we

00:09:32,410 --> 00:09:40,509
didn't have GPS plus installed so let's

00:09:35,160 --> 00:09:42,989
try that let's install J plus plus six

00:09:40,509 --> 00:09:42,989
minutes later

00:09:46,960 --> 00:09:53,760
can anyone tell me why this one is filed

00:09:54,420 --> 00:09:59,610
so I had a this is on a Linux virtual

00:09:57,570 --> 00:10:01,680
machine I'm a my laptop and I had one

00:09:59,610 --> 00:10:07,500
gig of ram and apparently that's not

00:10:01,680 --> 00:10:11,540
enough so change it to two gigs of ram

00:10:07,500 --> 00:10:14,490
let's try again took twelve minutes and

00:10:11,540 --> 00:10:21,800
it failed maybe that was the last

00:10:14,490 --> 00:10:21,800
one anyway getting more angry

00:10:22,269 --> 00:10:25,839
some googling said idea to install

00:10:24,100 --> 00:10:30,970
something else details really are

00:10:25,839 --> 00:10:34,559
important four minutes later hey all my

00:10:30,970 --> 00:10:34,559
stuff is installed

00:10:34,980 --> 00:10:39,800
so it took me around about an hour

00:10:37,320 --> 00:10:43,220
excluding the time I spent googling it

00:10:39,800 --> 00:10:43,220
the problems

00:10:43,720 --> 00:10:46,870
I tried it again a fresh install which

00:10:45,280 --> 00:10:49,420
to see how long that script takes coming

00:10:46,870 --> 00:10:51,040
Indian this kind of use the cached

00:10:49,420 --> 00:10:53,380
download stuff so this excludes the

00:10:51,040 --> 00:10:56,400
download tax about half an hour because

00:10:53,380 --> 00:10:56,400
it's running all these scripts

00:10:57,430 --> 00:11:05,010
latest or very very if not the very

00:11:01,600 --> 00:11:05,010
latest questions to

00:11:05,600 --> 00:11:15,560
so is the problem solved so I went back

00:11:10,100 --> 00:11:17,890
to OS 10 and ah we'll be using Python 3

00:11:15,560 --> 00:11:22,900
not Python 2

00:11:17,890 --> 00:11:22,900
all right let's try that

00:11:23,269 --> 00:11:27,249
let's try people install Python 3

00:11:27,950 --> 00:11:31,330
you can read that one

00:11:34,620 --> 00:11:39,920
can anyone tell me why people install

00:11:36,900 --> 00:11:39,920
Python 3 didn't work

00:11:42,550 --> 00:11:48,030
sorry

00:11:44,620 --> 00:11:51,020
okay say

00:11:48,030 --> 00:11:51,020
what do we do

00:11:55,920 --> 00:11:58,550
I just

00:12:00,000 --> 00:12:07,500
we turn to Conda so just to reiterate

00:12:03,870 --> 00:12:10,079
Condor is the tool anacondrai is a

00:12:07,500 --> 00:12:14,670
collection of common packages that they

00:12:10,079 --> 00:12:16,439
provide mini Condor is a minimum full

00:12:14,670 --> 00:12:18,899
way of installing it so think of if you

00:12:16,439 --> 00:12:22,860
know about Linux distros mini condors

00:12:18,899 --> 00:12:27,449
like a little tiny server by SATA to

00:12:22,860 --> 00:12:31,069
install and anacondas like a big install

00:12:27,449 --> 00:12:31,069
I say with all the things that you need

00:12:31,900 --> 00:12:40,180
so let's try the same exercise but with

00:12:35,710 --> 00:12:43,000
condor so how do you install condor you

00:12:40,180 --> 00:12:47,410
download a bash script this is on Linux

00:12:43,000 --> 00:12:50,920
and OS 10 and you run that you know how

00:12:47,410 --> 00:12:54,300
have Condor installed and then you run

00:12:50,920 --> 00:12:56,770
these commands this is kind of create

00:12:54,300 --> 00:12:59,080
give it a name and what packages that

00:12:56,770 --> 00:13:01,600
you would like installed this is going

00:12:59,080 --> 00:13:04,240
to install Python 3 into an environment

00:13:01,600 --> 00:13:06,070
called data science shoot and so a

00:13:04,240 --> 00:13:07,480
condor environment think of it like a

00:13:06,070 --> 00:13:09,750
virtual work if that's where you can do

00:13:07,480 --> 00:13:09,750
it with

00:13:10,690 --> 00:13:15,790
this is how we get inside the

00:13:12,580 --> 00:13:17,290
environment that we've just created so

00:13:15,790 --> 00:13:21,180
now we're in the environment and we're

00:13:17,290 --> 00:13:21,180
using Python 3 that we installed

00:13:23,920 --> 00:13:29,430
Condor install all these things now of

00:13:26,500 --> 00:13:32,560
the 13 packages that we're dealing with

00:13:29,430 --> 00:13:34,870
someone can count them up but most of

00:13:32,560 --> 00:13:37,750
them are available on Kandra they have

00:13:34,870 --> 00:13:42,850
kind of packages but not all so we did

00:13:37,750 --> 00:13:45,870
that if a Condor package does exist so

00:13:42,850 --> 00:13:50,200
you can still use pip so we install pip

00:13:45,870 --> 00:13:54,839
and we install the other things that

00:13:50,200 --> 00:13:54,839
kind of packages don't yet exist for

00:13:55,740 --> 00:14:00,680
so that took this is excluding download

00:13:58,440 --> 00:14:00,680
times

00:14:01,670 --> 00:14:07,600
about 90 seconds and most of that was

00:14:03,740 --> 00:14:07,600
actually in a pube install part of it

00:14:09,670 --> 00:14:13,810
pretty much everything you need to know

00:14:11,320 --> 00:14:17,320
about condor is there any user he's on

00:14:13,810 --> 00:14:22,450
this slide install condor created them

00:14:17,320 --> 00:14:24,280
get inside it install some stuff but

00:14:22,450 --> 00:14:28,660
we'll go over in detail all these steps

00:14:24,280 --> 00:14:33,280
as well so there's a nicer way of doing

00:14:28,660 --> 00:14:35,020
what we just did you can these

00:14:33,280 --> 00:14:37,720
environment yeah more files you can

00:14:35,020 --> 00:14:39,280
write one of those so we give a name to

00:14:37,720 --> 00:14:41,860
our environment which is data science

00:14:39,280 --> 00:14:43,030
toot we list out of fantasies and we can

00:14:41,860 --> 00:14:45,520
say which versions so we're going to

00:14:43,030 --> 00:14:48,060
install Python 3 for I apply some

00:14:45,520 --> 00:14:53,310
notebook maps like Lib and then from pip

00:14:48,060 --> 00:14:57,640
we're going to install the remainder I

00:14:53,310 --> 00:15:03,460
run one command Condor and create this

00:14:57,640 --> 00:15:05,820
file and one one one line it's done what

00:15:03,460 --> 00:15:05,820
we did before

00:15:06,120 --> 00:15:08,720
Happy Days

00:15:09,970 --> 00:15:16,730
okay

00:15:12,320 --> 00:15:20,350
live demo time fingers crossed that I

00:15:16,730 --> 00:15:20,350
have a working internet connection

00:15:20,660 --> 00:15:24,519
is that readable work not too bad

00:15:25,780 --> 00:15:33,100
okay so I've already got Condor

00:15:27,550 --> 00:15:34,810
installed so Connor crate will create

00:15:33,100 --> 00:15:36,460
one of these environments for you so an

00:15:34,810 --> 00:15:39,340
environment is that isolated place for

00:15:36,460 --> 00:15:43,000
you to install packages I give it a name

00:15:39,340 --> 00:15:44,470
and I say what packages should be there

00:15:43,000 --> 00:15:45,970
to start off with so we'll just start

00:15:44,470 --> 00:15:48,040
with a minimum one we just want Python

00:15:45,970 --> 00:15:50,560
and want Python three we could say

00:15:48,040 --> 00:15:52,870
different versions of Python this will

00:15:50,560 --> 00:15:56,160
just get the latest Python that a tree

00:15:52,870 --> 00:15:56,160
that it knows about so let's do that

00:16:04,450 --> 00:16:07,050
damn

00:16:07,070 --> 00:16:11,690
okay and you can see that it's told me

00:16:09,800 --> 00:16:13,790
how I get inside my environment so

00:16:11,690 --> 00:16:16,280
that's not something you even sort of

00:16:13,790 --> 00:16:19,000
need to learn at the start and you'll

00:16:16,280 --> 00:16:23,500
see that it's changed my prompt so now I

00:16:19,000 --> 00:16:23,500
know that I'm within my demo environment

00:16:24,509 --> 00:16:30,720
and now I can just install things so

00:16:26,879 --> 00:16:33,119
let's install people don't know pan is

00:16:30,720 --> 00:16:38,029
is a analysis data analysis library I

00:16:33,119 --> 00:16:41,720
apply phones like a better repple for

00:16:38,029 --> 00:16:41,720
Python let's install those

00:16:48,780 --> 00:16:52,910
I think the Slough thing here is gonna

00:16:50,190 --> 00:16:52,910
read the Wi-Fi

00:16:57,870 --> 00:17:00,440
done

00:17:04,980 --> 00:17:07,970
that's all it takes

00:17:08,150 --> 00:17:12,560
now this is Python things we've we have

00:17:11,180 --> 00:17:14,930
installed they're a different version of

00:17:12,560 --> 00:17:20,230
python with condor it doesn't have to be

00:17:14,930 --> 00:17:20,230
python things at all there is a

00:17:21,390 --> 00:17:25,959
statistical language called our which is

00:17:23,829 --> 00:17:30,360
quite popular for data and statistician

00:17:25,959 --> 00:17:30,360
people so let's install that with our

00:17:31,400 --> 00:17:38,080
again I think the slightest Wi-Fi yep

00:17:41,390 --> 00:17:43,990
done

00:17:44,860 --> 00:17:50,309
and I've got my

00:17:50,740 --> 00:17:57,150
it's kind of the environment I mean to

00:17:54,790 --> 00:17:57,150
do that

00:18:01,310 --> 00:18:03,970
so

00:18:04,790 --> 00:18:08,630
this is how we got inside the

00:18:06,200 --> 00:18:11,400
environment

00:18:08,630 --> 00:18:14,660
this is how we get out

00:18:11,400 --> 00:18:14,660
or we close the show

00:18:17,450 --> 00:18:20,950
alright so back to my slides

00:18:25,380 --> 00:18:31,050
I think I've covered this enough Condors

00:18:28,080 --> 00:18:34,860
the tool anaconda is common packages

00:18:31,050 --> 00:18:37,050
bundled up mini Condor is a minimal way

00:18:34,860 --> 00:18:40,590
of installing it my recommendation

00:18:37,050 --> 00:18:42,780
go for mini Condor and the interesting

00:18:40,590 --> 00:18:48,140
still what you need it's a 30 make

00:18:42,780 --> 00:18:48,140
download to get started that's what I do

00:18:51,110 --> 00:18:55,140
all right so the some of the details so

00:18:53,250 --> 00:19:00,179
you download a bash script and you run

00:18:55,140 --> 00:19:01,590
it it will install it by default to in

00:19:00,179 --> 00:19:03,530
your home directory you know folder

00:19:01,590 --> 00:19:06,840
called mini Condor

00:19:03,530 --> 00:19:08,669
you do not need root privileges to do

00:19:06,840 --> 00:19:11,940
this it's just going to install it in

00:19:08,669 --> 00:19:13,650
your users home directory so that's one

00:19:11,940 --> 00:19:15,929
of the deep wins with condor is you

00:19:13,650 --> 00:19:18,090
don't need root privileges so i was

00:19:15,929 --> 00:19:19,950
talking to someone yesterday and they

00:19:18,090 --> 00:19:22,020
had a Windows laptop and they use Condor

00:19:19,950 --> 00:19:24,500
and they didn't have administrator

00:19:22,020 --> 00:19:28,020
access it wasn't a problem

00:19:24,500 --> 00:19:31,020
so that installs it into the mini Condor

00:19:28,020 --> 00:19:32,970
directory in your home and then and

00:19:31,020 --> 00:19:38,130
it'll prompt to do this for you you just

00:19:32,970 --> 00:19:39,539
add mini Condor /b into your path now

00:19:38,130 --> 00:19:41,370
because everything happens inside this

00:19:39,539 --> 00:19:43,740
mini Condor if you want to you try out

00:19:41,370 --> 00:19:46,049
Condor for the day or a week or a month

00:19:43,740 --> 00:19:51,409
you don't like it you want to uninstall

00:19:46,049 --> 00:19:51,409
it well away that directory it's gone

00:19:54,810 --> 00:19:59,250
so yeah kind of create it's like a

00:19:56,550 --> 00:20:01,680
virtual imp so there's these isolated

00:19:59,250 --> 00:20:05,550
places for you to download install

00:20:01,680 --> 00:20:08,280
things and you can have Python 3 over

00:20:05,550 --> 00:20:10,590
here and Python 2 over here and

00:20:08,280 --> 00:20:15,350
different versions of things and you

00:20:10,590 --> 00:20:15,350
know one doesn't know about the other so

00:20:15,950 --> 00:20:19,880
kind of create tell it what you want to

00:20:18,110 --> 00:20:22,370
call your environment and what packages

00:20:19,880 --> 00:20:27,380
to install would me show you and this is

00:20:22,370 --> 00:20:29,120
going to create a directory in mini

00:20:27,380 --> 00:20:33,470
Condor slash F and then the name of your

00:20:29,120 --> 00:20:36,140
that you give it to remove environments

00:20:33,470 --> 00:20:37,520
there's three equivalent ways of doing

00:20:36,140 --> 00:20:40,940
the same thing up here

00:20:37,520 --> 00:20:42,620
I actually just do an RM that directory

00:20:40,940 --> 00:20:44,660
I haven't actually memorized the other

00:20:42,620 --> 00:20:45,860
ones but they're the same way of doing

00:20:44,660 --> 00:20:50,030
the same thing get rid of the

00:20:45,860 --> 00:20:51,500
environment to get inside your

00:20:50,030 --> 00:20:54,290
environment we cover this before

00:20:51,500 --> 00:20:55,610
source activate my environment it'll

00:20:54,290 --> 00:20:58,610
actually prompt you about that once you

00:20:55,610 --> 00:21:00,140
create a environment and it'll put a

00:20:58,610 --> 00:21:01,880
little thing in your prompt telling you

00:21:00,140 --> 00:21:05,929
that you're inside it and as I said

00:21:01,880 --> 00:21:07,190
before you can get out of it as well now

00:21:05,929 --> 00:21:09,010
if you're running a script or something

00:21:07,190 --> 00:21:13,120
you don't have to do that you can just

00:21:09,010 --> 00:21:16,520
give it the path to your environments

00:21:13,120 --> 00:21:20,120
bin directory to run your script and it

00:21:16,520 --> 00:21:22,330
will use that environment to do what it

00:21:20,120 --> 00:21:22,330
needs

00:21:23,800 --> 00:21:30,850
so to install some stuff condor install

00:21:27,040 --> 00:21:34,390
package name what this does is downloads

00:21:30,850 --> 00:21:36,430
a tarball - mini condor packages it ant

00:21:34,390 --> 00:21:38,530
Arzo and one of the reasons that it was

00:21:36,430 --> 00:21:43,900
so fast before with installing things is

00:21:38,530 --> 00:21:44,860
because it hard links from there into

00:21:43,900 --> 00:21:50,140
your environment

00:21:44,860 --> 00:21:51,910
that's how so if you have five

00:21:50,140 --> 00:21:53,680
environments with pandas installed with

00:21:51,910 --> 00:21:55,870
the same version it's just a hard link

00:21:53,680 --> 00:21:57,280
to all five of them so it's really fast

00:21:55,870 --> 00:22:00,930
and it doesn't add up your hard drive

00:21:57,280 --> 00:22:00,930
space experimenting with

00:22:02,620 --> 00:22:05,789
different environments

00:22:07,149 --> 00:22:12,909
so Conrad Pip and virtual and paddle a

00:22:09,419 --> 00:22:14,890
working dear there so since switching

00:22:12,909 --> 00:22:15,519
equip to Conda I don't use virtual in

00:22:14,890 --> 00:22:17,529
for anymore

00:22:15,519 --> 00:22:23,140
Condor kind of does what I need as far

00:22:17,529 --> 00:22:24,159
as isolated environments kind of

00:22:23,140 --> 00:22:26,769
packages stonings is for all the

00:22:24,159 --> 00:22:30,399
packages yet but for a lot of the ones

00:22:26,769 --> 00:22:35,080
that I do use this now Jango packages is

00:22:30,399 --> 00:22:37,659
now what's it soft whether I use that do

00:22:35,080 --> 00:22:39,580
have them for everything else you can do

00:22:37,659 --> 00:22:42,850
Condor install PIP and then people

00:22:39,580 --> 00:22:45,389
install those and it's worked fine for

00:22:42,850 --> 00:22:45,389
me so far

00:22:47,080 --> 00:22:53,169
Condor can update itself to the latest

00:22:49,570 --> 00:22:54,970
version it can update specific packages

00:22:53,169 --> 00:22:57,360
and it can update everything you have

00:22:54,970 --> 00:22:57,360
installed

00:22:59,670 --> 00:23:02,910
if you're familiar with pip you can do a

00:23:01,590 --> 00:23:04,559
pip freeze and they'll tell you

00:23:02,910 --> 00:23:07,530
everything that you've installed so that

00:23:04,559 --> 00:23:10,170
you can have a reproducible build this

00:23:07,530 --> 00:23:12,120
is the condor equivalent kind of list

00:23:10,170 --> 00:23:14,460
export and you can pipe that to a file

00:23:12,120 --> 00:23:18,980
and then Condor install and you give it

00:23:14,460 --> 00:23:18,980
the file that you want to install from

00:23:20,360 --> 00:23:23,610
now there's a similar thing here which

00:23:22,350 --> 00:23:25,800
will create that yeah more father we

00:23:23,610 --> 00:23:28,290
spoke about before so Condor F export

00:23:25,800 --> 00:23:30,360
and that will spit out a thing with the

00:23:28,290 --> 00:23:32,809
name and the dependencies as a list and

00:23:30,360 --> 00:23:35,700
then also which ones came from pip and

00:23:32,809 --> 00:23:39,929
then it's a one-liner to install from

00:23:35,700 --> 00:23:42,980
there we cover this in the demo you can

00:23:39,929 --> 00:23:45,360
store things that aren't from pipe from

00:23:42,980 --> 00:23:46,590
Python and you can use different

00:23:45,360 --> 00:23:49,670
channels and you can create your own

00:23:46,590 --> 00:23:52,620
channel so that's really easy to do too

00:23:49,670 --> 00:23:53,880
so if I wrap up I've covered here OS 10

00:23:52,620 --> 00:23:56,040
and Linux I spoke to someone though

00:23:53,880 --> 00:23:58,500
yesterday who's has really positive

00:23:56,040 --> 00:24:00,650
experiences with Windows so it's

00:23:58,500 --> 00:24:03,860
completely cross-platform in that way

00:24:00,650 --> 00:24:07,380
you don't need root or admin privileges

00:24:03,860 --> 00:24:09,390
it doesn't have to be Python code give

00:24:07,380 --> 00:24:11,640
me anything we installed our before

00:24:09,390 --> 00:24:14,790
there's MongoDB there's you know there's

00:24:11,640 --> 00:24:16,080
no no limits there so some of the

00:24:14,790 --> 00:24:19,660
advantages that I found is faster

00:24:16,080 --> 00:24:23,860
deploys you know

00:24:19,660 --> 00:24:27,340
peep install and then wait 10 minutes or

00:24:23,860 --> 00:24:29,470
20 minutes is not great when I can spin

00:24:27,340 --> 00:24:31,740
up an AWS machine in two or three

00:24:29,470 --> 00:24:31,740
minutes

00:24:33,100 --> 00:24:37,030
and faster they're bugging between

00:24:34,750 --> 00:24:39,270
versions of so I'll quickly show you as

00:24:37,030 --> 00:24:39,270
an example

00:24:41,340 --> 00:24:47,580
so we installed pens before and the

00:24:44,789 --> 00:24:49,850
latest version of pandas is 0:16 - I

00:24:47,580 --> 00:24:49,850
think

00:24:53,820 --> 00:24:58,610
let's say I found a bug and I want to

00:24:55,470 --> 00:24:58,610
see if it was in the last version

00:24:58,950 --> 00:25:05,179
I've just switched back I can run my

00:25:01,919 --> 00:25:05,179
test case see if it works

00:25:05,269 --> 00:25:10,700
and switch back and see ah is there a

00:25:08,340 --> 00:25:10,700
difference

00:25:11,430 --> 00:25:15,360
so I found it really great for debugging

00:25:13,620 --> 00:25:17,010
and fast switching between them it's not

00:25:15,360 --> 00:25:17,390
going to run the people script all over

00:25:17,010 --> 00:25:20,730
again

00:25:17,390 --> 00:25:23,100
but using it in production for any

00:25:20,730 --> 00:25:25,890
months without any hassles and I've had

00:25:23,100 --> 00:25:27,390
some big wins for me building is easy to

00:25:25,890 --> 00:25:28,860
that's I haven't got time to cover that

00:25:27,390 --> 00:25:31,200
today but if you read the docs the docs

00:25:28,860 --> 00:25:33,990
are quite good and they also have

00:25:31,200 --> 00:25:39,240
anaconda org as a place to upload and

00:25:33,990 --> 00:25:40,680
share packages I think I'm out of time

00:25:39,240 --> 00:25:44,090
to touch on building but if anyone has

00:25:40,680 --> 00:25:44,090
any questions go ahead

00:25:44,870 --> 00:25:47,770
yeah oh one thing

00:25:51,690 --> 00:25:56,610
thank you there was a very practical

00:25:53,910 --> 00:25:58,860
talk so from what I understand data

00:25:56,610 --> 00:26:00,990
analysis is mostly performed on desktops

00:25:58,860 --> 00:26:06,120
like exploratory wise do you also use

00:26:00,990 --> 00:26:09,570
Condor on service you said yep and it

00:26:06,120 --> 00:26:11,220
works fine yes so but there's something

00:26:09,570 --> 00:26:13,200
that it seems to me that if it works via

00:26:11,220 --> 00:26:15,120
hard links then he has to have

00:26:13,200 --> 00:26:17,130
downloaded all the packages in advance

00:26:15,120 --> 00:26:19,790
so all the time you save is because you

00:26:17,130 --> 00:26:23,940
did the download once and there was a

00:26:19,790 --> 00:26:25,740
longer download supposedly

00:26:23,940 --> 00:26:27,330
yes so there's something it's the same

00:26:25,740 --> 00:26:30,330
with people as well like you need to go

00:26:27,330 --> 00:26:34,860
fetch the packages first and so I didn't

00:26:30,330 --> 00:26:36,930
include that in my benchmark before but

00:26:34,860 --> 00:26:43,340
yes you do need to win to download those

00:26:36,930 --> 00:26:43,340
those first they just stored in

00:26:47,410 --> 00:26:51,520
so you can see in there that's where the

00:26:49,870 --> 00:26:53,650
duct our balls get downloaded and then

00:26:51,520 --> 00:26:56,020
they get I'm tired so you could tar ball

00:26:53,650 --> 00:26:57,220
that up if you wanted to and make that

00:26:56,020 --> 00:26:59,289
part of your deploy if you wanted to

00:26:57,220 --> 00:27:01,289
speed up that step of downloading stuff

00:26:59,289 --> 00:27:04,390
but that tends not to be the slow part

00:27:01,289 --> 00:27:05,620
in that half an hour script before the

00:27:04,390 --> 00:27:06,970
people in store everything that was

00:27:05,620 --> 00:27:10,510
because it's running scripts every time

00:27:06,970 --> 00:27:12,220
this is this is binary distribution and

00:27:10,510 --> 00:27:13,690
one more question I do teaching and

00:27:12,220 --> 00:27:15,820
nowadays students bring their own

00:27:13,690 --> 00:27:18,910
laptops and so my Windows summer Mac yep

00:27:15,820 --> 00:27:20,169
and even some Linux could you expand

00:27:18,910 --> 00:27:22,440
apart from the problems they had

00:27:20,169 --> 00:27:25,450
installing because of the different

00:27:22,440 --> 00:27:27,820
prerequisites on Linux whether Windows

00:27:25,450 --> 00:27:29,530
users this real parity once everything

00:27:27,820 --> 00:27:32,260
is installed between every wall of them

00:27:29,530 --> 00:27:34,030
or whether you see differences during

00:27:32,260 --> 00:27:38,530
usage and I'll give up the microphone

00:27:34,030 --> 00:27:40,870
yeah sure so I think Andrew here was

00:27:38,530 --> 00:27:42,490
actually a Windows user I'm not so I

00:27:40,870 --> 00:27:44,860
haven't done testing firsthand but he

00:27:42,490 --> 00:27:47,230
might have a first having experience to

00:27:44,860 --> 00:27:50,140
be able to share it's definitely a first

00:27:47,230 --> 00:27:52,179
class experience on Windows where it's

00:27:50,140 --> 00:27:54,549
traditionally been exceptionally hard to

00:27:52,179 --> 00:27:56,440
actually get numb he built the only way

00:27:54,549 --> 00:27:59,289
that I knew to do it was to actually

00:27:56,440 --> 00:28:01,510
download either the individual packages

00:27:59,289 --> 00:28:04,270
and then install them using their

00:28:01,510 --> 00:28:07,380
executables or using the super PAC this

00:28:04,270 --> 00:28:09,660
just makes it so much easier

00:28:07,380 --> 00:28:11,850
in fact it's it's really the only

00:28:09,660 --> 00:28:13,660
practical way to do this on Windows

00:28:11,850 --> 00:28:15,580
these days

00:28:13,660 --> 00:28:17,890
and yeah so I haven't got first-hand

00:28:15,580 --> 00:28:19,450
experience of running it myself but we

00:28:17,890 --> 00:28:21,880
had a case at work recently where we'd

00:28:19,450 --> 00:28:22,930
to analysis and then the client wanted

00:28:21,880 --> 00:28:24,100
to have a look at that and there are

00:28:22,930 --> 00:28:26,110
running Windows and they'll be able to

00:28:24,100 --> 00:28:29,010
they were able to reproduce our analysis

00:28:26,110 --> 00:28:32,220
that was done on Linux and OS 10 on a

00:28:29,010 --> 00:28:35,820
Windows machine

00:28:32,220 --> 00:28:40,909
did you say the Condor packages winery

00:28:35,820 --> 00:28:40,909
packages it's basically just a table so

00:28:41,720 --> 00:28:47,039
well what I didn't get to cover is a

00:28:44,279 --> 00:28:48,659
package is basically a tarball with an

00:28:47,039 --> 00:28:51,629
info directory of some metadata about

00:28:48,659 --> 00:28:53,039
the package and then just what's what's

00:28:51,629 --> 00:28:55,559
going to essentially get copied into

00:28:53,039 --> 00:28:58,919
that environment so just been slash

00:28:55,559 --> 00:29:01,379
sweeps corollary of that other Condor

00:28:58,919 --> 00:29:02,820
packages specific to the environment

00:29:01,379 --> 00:29:05,429
that you install so do you need a

00:29:02,820 --> 00:29:06,840
windows Condor package and an OSX kind

00:29:05,429 --> 00:29:10,190
of package yes I think there's

00:29:06,840 --> 00:29:14,580
essentially five you've got Windows

00:29:10,190 --> 00:29:15,960
there might be us 10 for the 64 on 32 or

00:29:14,580 --> 00:29:19,649
maybe they just 64 and then there's

00:29:15,960 --> 00:29:22,230
Linux 3264 they get built but the build

00:29:19,649 --> 00:29:26,549
tools allow you actually to generate all

00:29:22,230 --> 00:29:28,649
of those specifically if it's not sort

00:29:26,549 --> 00:29:31,860
of binary files that it's real quiet so

00:29:28,649 --> 00:29:34,440
for a Python package on my Linux or I

00:29:31,860 --> 00:29:37,220
was 10 I can create a package and

00:29:34,440 --> 00:29:37,220
convert it to

00:29:37,820 --> 00:29:42,500
all all platforms and distribute that

00:29:40,790 --> 00:29:46,960
but yes each one will download one

00:29:42,500 --> 00:29:46,960
specific for that architecture

00:29:47,380 --> 00:29:51,310
we've actually got a few more people who

00:29:49,360 --> 00:29:53,710
want to ask questions but we're running

00:29:51,310 --> 00:29:57,310
out of time so are you okay to take

00:29:53,710 --> 00:30:00,460
questions later or yeah yeah okay guys

00:29:57,310 --> 00:30:02,940
okay guys we just meet up with Lex Lex

00:30:00,460 --> 00:30:02,940
Heidegger

00:30:09,549 --> 00:30:11,610

YouTube URL: https://www.youtube.com/watch?v=Fqknoni5aX0


