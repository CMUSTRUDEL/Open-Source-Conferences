Title: Breaking backwards compatibility: The easy way! by Flavio Percoco
Publication date: 2015-08-04
Playlist: PyCon Australia 2015
Description: 
	Say you have this piece of software that many people use. One day, you wake up and you have the urge to make them suffer. Well, there’s no better way to do so than breaking the software they’re using.

In this talk, I’ll walk you through very good ways to do so by showing examples taken from experience - because experience is the only thing that matters (TM) - so that you’ll be able, by the time this talk ends, to do the same to your users.

(P.S: If you’ve a kinder hearth, you can also do the exact opposite of what I’ll say and keep your users happy.)

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:09,670 --> 00:00:15,490
ladies and gentlemen I'd like to

00:00:11,290 --> 00:00:17,170
introduce Flavio caracal and I won't

00:00:15,490 --> 00:00:19,450
stay around here talking too much about

00:00:17,170 --> 00:00:28,750
him because he's got lots more to say

00:00:19,450 --> 00:00:35,190
then I do thank you um your period wake

00:00:28,750 --> 00:00:35,190
much very sleepy right now um sorry

00:00:42,720 --> 00:00:46,100
they just this up

00:01:39,780 --> 00:01:44,500
see

00:01:42,130 --> 00:01:47,750
oh there you

00:01:44,500 --> 00:01:50,660
they're nice

00:01:47,750 --> 00:01:52,010
so breaking backwards compatibility

00:01:50,660 --> 00:01:55,880
that's why we're going to talk about

00:01:52,010 --> 00:01:57,410
today are but instead of telling you how

00:01:55,880 --> 00:01:59,270
not to do that I'm going to tell you how

00:01:57,410 --> 00:02:00,890
to do that how you can break backwards

00:01:59,270 --> 00:02:02,479
compatibility how you can inflict pain

00:02:00,890 --> 00:02:04,970
in your users and make sure that it will

00:02:02,479 --> 00:02:06,320
suffer for the rest of their lives or as

00:02:04,970 --> 00:02:08,929
soon as as long as you're going to

00:02:06,320 --> 00:02:12,620
maintain the software using but before

00:02:08,929 --> 00:02:15,050
we get there some disclaimers I I

00:02:12,620 --> 00:02:16,520
normally talk very fast it has nothing

00:02:15,050 --> 00:02:18,650
to do with being nervous or anything

00:02:16,520 --> 00:02:20,780
it's some originally from South America

00:02:18,650 --> 00:02:22,760
and we are very used to speak faster

00:02:20,780 --> 00:02:26,720
unless you want to get killed or robbed

00:02:22,760 --> 00:02:28,040
or whatever yeah Mike say bad words I'm

00:02:26,720 --> 00:02:30,830
not trying to go against the code of

00:02:28,040 --> 00:02:32,120
conduct i just get very frustrated about

00:02:30,830 --> 00:02:34,430
many things and it's been especially

00:02:32,120 --> 00:02:36,590
when i'm ranting about self i might just

00:02:34,430 --> 00:02:38,930
go and say but what's done taking on me

00:02:36,590 --> 00:02:41,480
I'm not trying to be a bad person here

00:02:38,930 --> 00:02:43,760
there is me feel free to interrupt me at

00:02:41,480 --> 00:02:45,380
any time if you have questions happy to

00:02:43,760 --> 00:02:47,930
take them and to be interrupted during

00:02:45,380 --> 00:02:50,510
my talk thank you all for being here I

00:02:47,930 --> 00:02:53,660
realize this is the it's not right after

00:02:50,510 --> 00:02:55,880
lunch but is the one after the one after

00:02:53,660 --> 00:02:59,090
lunch which is probably worse because

00:02:55,880 --> 00:03:01,820
we're all even mostly pure and ready to

00:02:59,090 --> 00:03:03,470
take a nap work at Red Hat I still work

00:03:01,820 --> 00:03:06,890
there being there for at least almost

00:03:03,470 --> 00:03:09,290
three years already and I probably not

00:03:06,890 --> 00:03:10,880
going anywhere so in the near time and

00:03:09,290 --> 00:03:12,440
that's my Twitter hundred if you want to

00:03:10,880 --> 00:03:14,959
tweet about this talk if you think it

00:03:12,440 --> 00:03:16,760
it's really bad and you want just to

00:03:14,959 --> 00:03:18,769
make it public just feel free to tweet

00:03:16,760 --> 00:03:21,140
me and if you actually liked it and you

00:03:18,769 --> 00:03:24,260
want to follow me please do it someone

00:03:21,140 --> 00:03:26,840
has to feed my ego somehow so go there

00:03:24,260 --> 00:03:28,610
follow me and make me happy and that's

00:03:26,840 --> 00:03:30,980
my email address in case you don't want

00:03:28,610 --> 00:03:34,280
to go public and you want to share some

00:03:30,980 --> 00:03:36,290
feedback either is good or bad so

00:03:34,280 --> 00:03:37,760
breaking backwards compatibility what's

00:03:36,290 --> 00:03:39,079
backwards compatibility how many of you

00:03:37,760 --> 00:03:42,680
know what backwards compatibility

00:03:39,079 --> 00:03:45,950
actually is show hands okay cool enough

00:03:42,680 --> 00:03:49,100
people how many of you know that there's

00:03:45,950 --> 00:03:52,580
also forwards compatibility

00:03:49,100 --> 00:03:56,510
okay so for those of you that didn't

00:03:52,580 --> 00:03:57,980
raise your hand so this is what

00:03:56,510 --> 00:04:01,640
backwards compatibility is I'm not going

00:03:57,980 --> 00:04:04,580
to repeat it it looks like very decent

00:04:01,640 --> 00:04:07,640
definition of what it is and but the

00:04:04,580 --> 00:04:10,220
TLDR of it is do not break the software

00:04:07,640 --> 00:04:12,050
generated released don't break whatever

00:04:10,220 --> 00:04:13,520
you have done in the past make sure that

00:04:12,050 --> 00:04:15,980
your new versions are compatible with

00:04:13,520 --> 00:04:18,140
whatever you three list already forwards

00:04:15,980 --> 00:04:21,830
compatibility instead is making your

00:04:18,140 --> 00:04:23,420
software ready for things are coming in

00:04:21,830 --> 00:04:25,730
the future but you don't want to have

00:04:23,420 --> 00:04:27,230
right now the basically means if you

00:04:25,730 --> 00:04:29,030
want to make your software forward

00:04:27,230 --> 00:04:31,130
compatible you are violating Johnny

00:04:29,030 --> 00:04:33,380
basically which is you're not gonna need

00:04:31,130 --> 00:04:34,610
it so you're not supposed to add stuff

00:04:33,380 --> 00:04:35,990
to your software that you're not gonna

00:04:34,610 --> 00:04:37,310
need in the future or that you don't

00:04:35,990 --> 00:04:39,800
have right now sorry that you don't have

00:04:37,310 --> 00:04:41,900
right now but in real life is actually

00:04:39,800 --> 00:04:43,640
very good your sched so for instance if

00:04:41,900 --> 00:04:45,500
you have your house and you're building

00:04:43,640 --> 00:04:46,760
your house and you don't have enough

00:04:45,500 --> 00:04:50,270
money you don't want to put your AC

00:04:46,760 --> 00:04:52,190
system on your house but you want it to

00:04:50,270 --> 00:04:53,810
be ready to have your AC system on at

00:04:52,190 --> 00:04:55,970
some point in the future you might want

00:04:53,810 --> 00:04:58,100
to build it in some way that you put in

00:04:55,970 --> 00:04:59,780
your AC system it's going to be easy

00:04:58,100 --> 00:05:01,910
enough and cheap enough that you will

00:04:59,780 --> 00:05:03,800
your house is going to be rated for it

00:05:01,910 --> 00:05:06,530
or maybe you don't want to have it at

00:05:03,800 --> 00:05:08,960
all but you want to sell your house with

00:05:06,530 --> 00:05:10,910
the null space everything ready to have

00:05:08,960 --> 00:05:12,770
an HTML so that you can charge more for

00:05:10,910 --> 00:05:14,510
it so that's having a house that is

00:05:12,770 --> 00:05:15,950
actually forward compatible you don't

00:05:14,510 --> 00:05:17,930
have an AC system now but you might have

00:05:15,950 --> 00:05:19,490
it in the future so forward

00:05:17,930 --> 00:05:23,210
compatibility is actually a thing that

00:05:19,490 --> 00:05:24,770
many people don't know so because it

00:05:23,210 --> 00:05:26,840
basically violates one of the rules that

00:05:24,770 --> 00:05:31,510
we try to respect our all as much as

00:05:26,840 --> 00:05:31,510
possible so now to talk

00:05:33,710 --> 00:05:37,860
whatever you do with your software I'll

00:05:35,790 --> 00:05:39,900
make sure you don't use virtually at all

00:05:37,860 --> 00:05:41,400
right you see if you want to inflict

00:05:39,900 --> 00:05:43,500
pain to your users and you want to make

00:05:41,400 --> 00:05:46,140
sure they suffer you don't have to

00:05:43,500 --> 00:05:48,090
provide any way to differentiate between

00:05:46,140 --> 00:05:49,500
your new software year old software you

00:05:48,090 --> 00:05:52,680
might want to just call this software

00:05:49,500 --> 00:05:54,330
and just release it that way so whenever

00:05:52,680 --> 00:05:56,070
you have a new version of your software

00:05:54,330 --> 00:05:58,410
you you don't have to worry about what

00:05:56,070 --> 00:06:00,750
next version number is and what you want

00:05:58,410 --> 00:06:02,250
to use is you just call it software your

00:06:00,750 --> 00:06:03,900
release is whenever you want you don't

00:06:02,250 --> 00:06:06,000
have to worry about timelines you don't

00:06:03,900 --> 00:06:08,520
have to worry about our release

00:06:06,000 --> 00:06:11,640
schedules or anything just add stuff to

00:06:08,520 --> 00:06:15,120
it and release it and and make sure that

00:06:11,640 --> 00:06:17,190
your users will just consume the latest

00:06:15,120 --> 00:06:20,010
version which they won't even know what

00:06:17,190 --> 00:06:21,960
the latest version is and the good thing

00:06:20,010 --> 00:06:23,400
about not having version it at all is

00:06:21,960 --> 00:06:27,120
that you don't even have to duplicate

00:06:23,400 --> 00:06:29,940
things so anytime you as much as you had

00:06:27,120 --> 00:06:31,200
soft your software as soon as you get

00:06:29,940 --> 00:06:34,770
tired of the things that you have any

00:06:31,200 --> 00:06:36,840
chef so just remove them turn this like

00:06:34,770 --> 00:06:38,940
assume that no one else is using it

00:06:36,840 --> 00:06:41,160
because if you don't care about your

00:06:38,940 --> 00:06:42,810
users and you don't care about ah what

00:06:41,160 --> 00:06:44,190
they're using and what your software is

00:06:42,810 --> 00:06:45,480
doing or your software is actually

00:06:44,190 --> 00:06:48,600
providing you don't actually care if

00:06:45,480 --> 00:06:50,480
there's people using it just add stuff

00:06:48,600 --> 00:06:53,400
to it you release it as a software

00:06:50,480 --> 00:06:55,560
companies at all version in at all and

00:06:53,400 --> 00:06:57,840
don't deprecated things just remove

00:06:55,560 --> 00:07:00,600
functions as you wish add functions as

00:06:57,840 --> 00:07:03,600
you wish and and don't worry about it

00:07:00,600 --> 00:07:06,180
like if someone comes to you crying and

00:07:03,600 --> 00:07:08,490
they email you and they send you hail

00:07:06,180 --> 00:07:10,140
hate emails that's fine that's life I

00:07:08,490 --> 00:07:12,180
mean they'll deal with it at some point

00:07:10,140 --> 00:07:13,470
and they'll probably get over it or not

00:07:12,180 --> 00:07:14,970
but that's not your problem right you

00:07:13,470 --> 00:07:16,920
just want to inflict pain to your users

00:07:14,970 --> 00:07:18,390
so you don't want to duplicate things at

00:07:16,920 --> 00:07:20,280
all you just want to really stuff and

00:07:18,390 --> 00:07:21,480
and do whatever you want with your

00:07:20,280 --> 00:07:25,980
supper this is your software out there

00:07:21,480 --> 00:07:28,710
all right and the best way to do that

00:07:25,980 --> 00:07:31,440
probably is just assume you're the only

00:07:28,710 --> 00:07:33,870
user of your software so whenever you're

00:07:31,440 --> 00:07:35,310
at a function or or the functionality

00:07:33,870 --> 00:07:36,930
let's just talk about functionalities

00:07:35,310 --> 00:07:39,210
whenever you're at a functionality to

00:07:36,930 --> 00:07:41,070
your software assume you're the only one

00:07:39,210 --> 00:07:43,430
who's actually going to use it use your

00:07:41,070 --> 00:07:45,860
ad in it because somehow it clicked it

00:07:43,430 --> 00:07:47,150
in your head and you just said like okay

00:07:45,860 --> 00:07:49,070
this is something I want to have in my

00:07:47,150 --> 00:07:51,350
software because i think it is useful

00:07:49,070 --> 00:07:52,760
and since you assume you're assuming

00:07:51,350 --> 00:07:54,500
that you're the only user of your

00:07:52,760 --> 00:07:57,680
software you're free to add it and

00:07:54,500 --> 00:07:59,300
remove it whenever you want and i'm

00:07:57,680 --> 00:08:00,920
gonna like if you assume they're the

00:07:59,300 --> 00:08:03,380
only user of your software it's gonna

00:08:00,920 --> 00:08:05,510
make your life way simpler you don't

00:08:03,380 --> 00:08:07,340
have to worry about signature 012 you

00:08:05,510 --> 00:08:08,990
don't have to worry whether it is public

00:08:07,340 --> 00:08:11,900
or private you have to worry about

00:08:08,990 --> 00:08:13,640
whether it is consistent or now with the

00:08:11,900 --> 00:08:15,980
rest of your software you don't want you

00:08:13,640 --> 00:08:18,530
just have to worry about it being useful

00:08:15,980 --> 00:08:20,840
for you and making sure that it just

00:08:18,530 --> 00:08:24,650
satisfies your needs and whatever you

00:08:20,840 --> 00:08:26,450
have to do with your software and to

00:08:24,650 --> 00:08:28,400
make it even more simpler keep

00:08:26,450 --> 00:08:30,500
everything public I really don't

00:08:28,400 --> 00:08:32,510
understand who invented private stuff

00:08:30,500 --> 00:08:34,430
like it's way easier if you just add

00:08:32,510 --> 00:08:38,360
stuff to your software and you can pick

00:08:34,430 --> 00:08:40,190
public and so that you can just use it

00:08:38,360 --> 00:08:41,930
without like violating and your rules of

00:08:40,190 --> 00:08:43,820
being protected about anything and and

00:08:41,930 --> 00:08:46,160
not having the programming language of

00:08:43,820 --> 00:08:48,650
your choice preventing you for use for

00:08:46,160 --> 00:08:50,240
using from using whatever you added to

00:08:48,650 --> 00:08:52,190
your software so keep everything public

00:08:50,240 --> 00:08:54,530
don't worry about adding underscores

00:08:52,190 --> 00:08:57,080
don't worry about adding duck streams or

00:08:54,530 --> 00:09:00,380
or change Lot's or whatever to your

00:08:57,080 --> 00:09:02,420
software just make sure that everything

00:09:00,380 --> 00:09:05,630
is public so that it is accessible for

00:09:02,420 --> 00:09:11,270
you to to use it at any time and at any

00:09:05,630 --> 00:09:13,130
point and always keep users in the dark

00:09:11,270 --> 00:09:14,600
like users don't they don't care about

00:09:13,130 --> 00:09:16,490
what you're doing in your software right

00:09:14,600 --> 00:09:17,840
they don't care about change logs they

00:09:16,490 --> 00:09:19,340
don't care about your blogging but your

00:09:17,840 --> 00:09:21,950
software they don't care about you going

00:09:19,340 --> 00:09:23,600
to conferences and talking about it they

00:09:21,950 --> 00:09:25,520
don't care about it right users just

00:09:23,600 --> 00:09:27,110
they just want to use your soft or so

00:09:25,520 --> 00:09:29,300
just keep them in the dark to whatever

00:09:27,110 --> 00:09:31,400
you want with your software remove saw

00:09:29,300 --> 00:09:33,380
from it add stuff to it don't use

00:09:31,400 --> 00:09:34,640
version is don't ever get stuff don't

00:09:33,380 --> 00:09:36,890
let them know when you're doing that

00:09:34,640 --> 00:09:38,420
don't don't let it especially don't let

00:09:36,890 --> 00:09:40,190
them know in advance that you're

00:09:38,420 --> 00:09:42,560
planning to remove something because

00:09:40,190 --> 00:09:45,410
that will ruin the fun right if you if

00:09:42,560 --> 00:09:47,330
you really want to have fun just don't

00:09:45,410 --> 00:09:50,600
say anything just remove functions and

00:09:47,330 --> 00:09:54,040
what your users suffer because they were

00:09:50,600 --> 00:09:54,040
actually using that function

00:09:54,439 --> 00:09:59,159
okay I'm gonna stop right here I

00:09:56,999 --> 00:10:01,499
probably just ran through it because I

00:09:59,159 --> 00:10:05,609
wasted some time at the beginning of my

00:10:01,499 --> 00:10:07,679
talk um I'm gonna start talking

00:10:05,609 --> 00:10:08,879
seriously now when when I started

00:10:07,679 --> 00:10:12,769
working on these lights when I start

00:10:08,879 --> 00:10:15,809
working this presentation um like I

00:10:12,769 --> 00:10:18,299
could probably make jokes like that for

00:10:15,809 --> 00:10:19,619
hours and hours and keep lying about how

00:10:18,299 --> 00:10:21,709
it is easy to break backwards

00:10:19,619 --> 00:10:23,999
compatibility and makers user software

00:10:21,709 --> 00:10:26,999
however when I was working on this

00:10:23,999 --> 00:10:29,789
lights um a friend of my mine told me

00:10:26,999 --> 00:10:32,069
you might want to have some serious

00:10:29,789 --> 00:10:35,219
notes in there you might want to stop

00:10:32,069 --> 00:10:37,259
doing fun stuff you might want to stop

00:10:35,219 --> 00:10:38,819
doing jokes and actually add some

00:10:37,259 --> 00:10:42,359
serious notes and change in your tongue

00:10:38,819 --> 00:10:44,279
because not everyone has the same sense

00:10:42,359 --> 00:10:47,039
of humor and some people might actually

00:10:44,279 --> 00:10:49,469
take you seriously and at the point I

00:10:47,039 --> 00:10:50,669
said all that actual that's actually a

00:10:49,469 --> 00:10:52,829
good point and the first time I gave

00:10:50,669 --> 00:10:55,289
this talk I was with an audience and

00:10:52,829 --> 00:10:57,359
they were all taking me seriously I was

00:10:55,289 --> 00:11:02,749
like things caught someone told me I

00:10:57,359 --> 00:11:04,769
should stop doing that and and again to

00:11:02,749 --> 00:11:07,499
this is point where i'm going to start

00:11:04,769 --> 00:11:09,449
talking seriously and I want to like try

00:11:07,499 --> 00:11:10,769
to for each one of the points that i

00:11:09,449 --> 00:11:12,899
already mentioned something I already

00:11:10,769 --> 00:11:14,069
tried to make a joke about it I'm going

00:11:12,899 --> 00:11:16,019
to try to keep I'm going to try and

00:11:14,069 --> 00:11:18,539
giving you I'm gonna start giving you

00:11:16,019 --> 00:11:21,029
some some highlight some points that you

00:11:18,539 --> 00:11:23,399
should probably try to follow to avoid

00:11:21,029 --> 00:11:25,229
making your user suffer unless you

00:11:23,399 --> 00:11:29,279
really want to which I already told you

00:11:25,229 --> 00:11:34,470
how to do that and before we get there

00:11:29,279 --> 00:11:36,689
and one of the reasons why um so I work

00:11:34,470 --> 00:11:40,079
on OpenStack most of the time like my my

00:11:36,689 --> 00:11:43,379
full time job is actually to contribute

00:11:40,079 --> 00:11:44,999
to other side I'm pretty sure many of

00:11:43,379 --> 00:11:47,879
you know what opens aggies already a

00:11:44,999 --> 00:11:49,529
club writer and I'm not going to explain

00:11:47,879 --> 00:11:52,109
exactly what it is I'm just going to say

00:11:49,529 --> 00:11:53,759
this hitch it has a lot of Python code

00:11:52,109 --> 00:11:57,179
there and I said Python code which is

00:11:53,759 --> 00:12:01,309
very easy to break and and it provides

00:11:57,179 --> 00:12:01,309
close to non guarantees to their users

00:12:01,529 --> 00:12:07,589
and we've broken many deployments so

00:12:04,800 --> 00:12:10,949
many times and we've been broken by so

00:12:07,589 --> 00:12:15,269
many third-party libraries and at so

00:12:10,949 --> 00:12:17,310
many times again that it just just was

00:12:15,269 --> 00:12:18,660
so obvious that we need to we need to

00:12:17,310 --> 00:12:20,970
provide some more information about this

00:12:18,660 --> 00:12:23,610
about this and the problems it causes to

00:12:20,970 --> 00:12:25,559
everyone and so one of the reason I'm

00:12:23,610 --> 00:12:27,689
doing this is because i'm pretty sure

00:12:25,559 --> 00:12:29,910
each one of you have been that hacker at

00:12:27,689 --> 00:12:32,430
least once in their lives you at least

00:12:29,910 --> 00:12:33,720
once broken someone as a software or at

00:12:32,430 --> 00:12:37,379
least you've been broken by someone

00:12:33,720 --> 00:12:39,480
else's and so on as a software so if

00:12:37,379 --> 00:12:41,249
you're maintaining either is a private

00:12:39,480 --> 00:12:43,139
library have a software or a public soft

00:12:41,249 --> 00:12:44,759
are you should be aware of all these

00:12:43,139 --> 00:12:47,189
things and you should make sure that you

00:12:44,759 --> 00:12:50,850
don't break it either internally or or

00:12:47,189 --> 00:12:53,670
as an open source project so what does

00:12:50,850 --> 00:12:55,709
it matter because it saves time because

00:12:53,670 --> 00:12:57,540
breaking someone as a software or bit

00:12:55,709 --> 00:13:00,600
being broken by someone else's software

00:12:57,540 --> 00:13:03,660
it wastes your time it weighs energies

00:13:00,600 --> 00:13:05,910
it weighs CI system science it wastes

00:13:03,660 --> 00:13:07,410
resources it wastes a lot of things you

00:13:05,910 --> 00:13:10,079
have to dedicate time understanding what

00:13:07,410 --> 00:13:12,420
the heck happened and you have to waste

00:13:10,079 --> 00:13:15,509
time going to whomever broke your

00:13:12,420 --> 00:13:17,790
software or listening to the people that

00:13:15,509 --> 00:13:21,990
you broke the software for and trying to

00:13:17,790 --> 00:13:23,490
fix whatever you did right so as soon as

00:13:21,990 --> 00:13:25,050
you start saving time you will also

00:13:23,490 --> 00:13:27,269
start saving money as well because time

00:13:25,050 --> 00:13:29,040
is not free time is not for free and

00:13:27,269 --> 00:13:31,319
every time you waste some time some of

00:13:29,040 --> 00:13:33,059
your time your action we are not doing

00:13:31,319 --> 00:13:35,279
actual work that you should be probably

00:13:33,059 --> 00:13:36,689
doing and you might argue saying well my

00:13:35,279 --> 00:13:38,370
work is actually maintaining things

00:13:36,689 --> 00:13:40,740
stable and making sure they are running

00:13:38,370 --> 00:13:43,019
and which is perfectly fine but that's

00:13:40,740 --> 00:13:45,540
not everyone is this job right so some

00:13:43,019 --> 00:13:47,490
people want things to work many of us

00:13:45,540 --> 00:13:49,620
choose their operating system based on

00:13:47,490 --> 00:13:51,990
whether they work out of the box or not

00:13:49,620 --> 00:13:54,360
because some of us just need to focus on

00:13:51,990 --> 00:13:56,129
some different things and as soon as you

00:13:54,360 --> 00:13:57,839
start to be money you also saving

00:13:56,129 --> 00:13:59,550
killings because everything you're doing

00:13:57,839 --> 00:14:01,589
this war tapes kittens for some reason

00:13:59,550 --> 00:14:05,939
and everyone wants to save kittens

00:14:01,589 --> 00:14:08,910
although I hate kittens but anyway I

00:14:05,939 --> 00:14:11,820
keep saving then somehow

00:14:08,910 --> 00:14:16,760
despite my good intentions and not doing

00:14:11,820 --> 00:14:19,710
that so first thing use versions

00:14:16,760 --> 00:14:22,860
versions are important don't reinvent

00:14:19,710 --> 00:14:26,370
versioning there are many different

00:14:22,860 --> 00:14:28,740
forms of versioning out there there's no

00:14:26,370 --> 00:14:30,690
like everything has been reinvented in

00:14:28,740 --> 00:14:32,460
our industry every time you saw her

00:14:30,690 --> 00:14:34,800
loaded everything has been reinvented

00:14:32,460 --> 00:14:37,170
and virtually is not an exception of

00:14:34,800 --> 00:14:40,320
that there are so many different ways to

00:14:37,170 --> 00:14:42,180
version your software and the versioning

00:14:40,320 --> 00:14:45,180
system that we use in OpenStack bonsly's

00:14:42,180 --> 00:14:47,910
is simple it stands for semantic

00:14:45,180 --> 00:14:52,160
versioning and the TLDR of somewhere is

00:14:47,910 --> 00:14:54,840
that you have three numbers the left

00:14:52,160 --> 00:14:57,330
depending on how you're reading it the

00:14:54,840 --> 00:14:59,700
leftmost one is the major version the

00:14:57,330 --> 00:15:01,440
middle one is the minor version and the

00:14:59,700 --> 00:15:04,710
third one is the patch version so

00:15:01,440 --> 00:15:07,350
whenever you are release a patch of a

00:15:04,710 --> 00:15:09,540
ready released software you would just

00:15:07,350 --> 00:15:10,950
increase the patch number whenever you

00:15:09,540 --> 00:15:13,170
release a minor version which is

00:15:10,950 --> 00:15:15,930
backwards compatible and that means you

00:15:13,170 --> 00:15:17,490
are not breaking anyone's software you

00:15:15,930 --> 00:15:20,760
would just increase the minor version

00:15:17,490 --> 00:15:22,350
and if you are if you're releasing

00:15:20,760 --> 00:15:24,690
something we are really the new version

00:15:22,350 --> 00:15:27,140
that breaks the software you've already

00:15:24,690 --> 00:15:30,660
released you would just increase the

00:15:27,140 --> 00:15:33,720
major number and the fact that you have

00:15:30,660 --> 00:15:37,050
a major number there it does not give

00:15:33,720 --> 00:15:38,880
you any good excuse to just break

00:15:37,050 --> 00:15:40,290
someone as a software it's not like okay

00:15:38,880 --> 00:15:41,670
I have a major number so I have an

00:15:40,290 --> 00:15:43,680
excuse to just really software that

00:15:41,670 --> 00:15:45,810
breaks everyone else's deployment and

00:15:43,680 --> 00:15:47,220
since I'm increasing the major version i

00:15:45,810 --> 00:15:49,500
can just do it as much as I when no

00:15:47,220 --> 00:15:52,470
don't do that if you're doing that

00:15:49,500 --> 00:15:54,300
frequently you're not maintaining your

00:15:52,470 --> 00:15:55,740
code in the protein a proper way you're

00:15:54,300 --> 00:16:00,000
not developing your software in a proper

00:15:55,740 --> 00:16:02,220
way cup versions make sure that all your

00:16:00,000 --> 00:16:03,630
software whenever are all your

00:16:02,220 --> 00:16:04,950
dependencies whenever you have

00:16:03,630 --> 00:16:08,640
dependencies on third-party software

00:16:04,950 --> 00:16:11,940
they're cut under major versions so if

00:16:08,640 --> 00:16:14,280
you depend on a library that's in

00:16:11,940 --> 00:16:16,590
version the version one point something

00:16:14,280 --> 00:16:18,780
of a library make sure you put a cap on

00:16:16,590 --> 00:16:21,660
that so that the version to point out is

00:16:18,780 --> 00:16:22,499
not going to be pulled into your CI

00:16:21,660 --> 00:16:24,689
system or

00:16:22,499 --> 00:16:26,369
into your deployment or your production

00:16:24,689 --> 00:16:27,809
environment because that to point

00:16:26,369 --> 00:16:29,549
something version might break your

00:16:27,809 --> 00:16:33,599
software because it's increased the

00:16:29,549 --> 00:16:35,609
major the major number which is a mean

00:16:33,599 --> 00:16:37,439
that I manual release may not break your

00:16:35,609 --> 00:16:39,719
software because we're humans and where

00:16:37,439 --> 00:16:44,309
we've been created to make mistakes and

00:16:39,719 --> 00:16:47,429
make someone as a software communicate

00:16:44,309 --> 00:16:49,949
things talk to your users make things

00:16:47,429 --> 00:16:52,109
probably be public about it and by

00:16:49,949 --> 00:16:55,499
public i mean if here if you work in a

00:16:52,109 --> 00:16:57,599
closed source company will be public

00:16:55,499 --> 00:16:59,969
within your company make sure that

00:16:57,599 --> 00:17:04,409
whatever you're doing is well known to

00:16:59,969 --> 00:17:06,179
others so that things that the things

00:17:04,409 --> 00:17:09,750
don't come as a surprise to other users

00:17:06,179 --> 00:17:11,129
so if you're planning to remove to

00:17:09,750 --> 00:17:12,509
remove functions if you're planning to

00:17:11,129 --> 00:17:14,279
add new functions if you're planning to

00:17:12,509 --> 00:17:16,199
change the way your software works make

00:17:14,279 --> 00:17:18,539
sure you communicate that properly

00:17:16,199 --> 00:17:21,659
either by having good release notes

00:17:18,539 --> 00:17:24,209
having good change locks writing blog

00:17:21,659 --> 00:17:26,399
posts about it going to talk to

00:17:24,209 --> 00:17:31,470
conferences and talk about it is really

00:17:26,399 --> 00:17:32,909
important to to be open about the things

00:17:31,470 --> 00:17:34,679
you are thinking and you're working on

00:17:32,909 --> 00:17:38,639
on your software because it makes it

00:17:34,679 --> 00:17:40,950
easier for others to follow follow up on

00:17:38,639 --> 00:17:44,940
whatever you're doing but our industry

00:17:40,950 --> 00:17:47,190
is big enough for us to feel special

00:17:44,940 --> 00:17:48,600
about it and for us to pretend that

00:17:47,190 --> 00:17:52,110
people are actually paying attention

00:17:48,600 --> 00:17:53,730
things you are doing and the most of the

00:17:52,110 --> 00:17:55,830
time when we have a software we depend

00:17:53,730 --> 00:17:57,659
on on someone else's software we

00:17:55,830 --> 00:17:59,070
normally have several dependencies and

00:17:57,659 --> 00:18:02,039
pretending that we're going to follow

00:17:59,070 --> 00:18:04,049
closely every single one of them and and

00:18:02,039 --> 00:18:07,440
so that we're not going to be broken by

00:18:04,049 --> 00:18:12,269
them or by other realities is it's a

00:18:07,440 --> 00:18:14,639
wrong assumption and so be public about

00:18:12,269 --> 00:18:16,379
a big mixture that and I'm not saying

00:18:14,639 --> 00:18:18,539
that if you have a library you should

00:18:16,379 --> 00:18:20,850
just like go and peeing every one of

00:18:18,539 --> 00:18:23,220
your users I'm just saying be public and

00:18:20,850 --> 00:18:25,799
expect your users to at least keep an

00:18:23,220 --> 00:18:28,580
eye on whatever you're doing with some

00:18:25,799 --> 00:18:31,889
sort of frequency that they won't be

00:18:28,580 --> 00:18:33,840
there won't be pretty much broken or

00:18:31,889 --> 00:18:34,580
whatever based on what you're doing so

00:18:33,840 --> 00:18:35,750
they would

00:18:34,580 --> 00:18:40,519
we'll be able to follow up on where

00:18:35,750 --> 00:18:43,519
you're doing and whatever you do make

00:18:40,519 --> 00:18:46,370
sure you give your users enough time to

00:18:43,519 --> 00:18:49,130
know about it if you want to deprecate

00:18:46,370 --> 00:18:50,600
things and we'll get to that anyway you

00:18:49,130 --> 00:18:53,059
want to deprecate things make sure you

00:18:50,600 --> 00:18:54,470
give your users enough time to to move

00:18:53,059 --> 00:18:56,539
away from whatever they use and right

00:18:54,470 --> 00:19:00,250
now and move to the new function and the

00:18:56,539 --> 00:19:06,919
new things you you are going to provide

00:19:00,250 --> 00:19:08,750
have a consistent API one of the things

00:19:06,919 --> 00:19:11,389
that makes it really difficult to use a

00:19:08,750 --> 00:19:15,529
library and we saw a little bit of that

00:19:11,389 --> 00:19:18,620
in today's keynote and it is having a

00:19:15,529 --> 00:19:20,750
p.i that is not consistent at all so if

00:19:18,620 --> 00:19:25,639
you buy consistency i mean i've not just

00:19:20,750 --> 00:19:28,279
mean name conventions for functions and

00:19:25,639 --> 00:19:30,350
classes I also mean signatures so you

00:19:28,279 --> 00:19:32,299
have if i have two functions and they

00:19:30,350 --> 00:19:34,130
both need to take a username and a

00:19:32,299 --> 00:19:35,779
password n turns out that the first

00:19:34,130 --> 00:19:37,460
function takes username and then

00:19:35,779 --> 00:19:40,220
password and the second function takes

00:19:37,460 --> 00:19:42,289
password first and named the username as

00:19:40,220 --> 00:19:44,960
the second argument that's inconsistent

00:19:42,289 --> 00:19:46,639
and there's no reason why I should do

00:19:44,960 --> 00:19:48,769
that instead if I keep them both

00:19:46,639 --> 00:19:50,899
consistent and in the signature will

00:19:48,769 --> 00:19:54,260
make my users life way simpler it will

00:19:50,899 --> 00:19:58,340
make it make my library more consumable

00:19:54,260 --> 00:20:00,830
by other users and a lot of these can be

00:19:58,340 --> 00:20:02,029
done if you follow the design by

00:20:00,830 --> 00:20:06,019
contract how many of you know what

00:20:02,029 --> 00:20:08,059
design by country is ok ok I'll lean or

00:20:06,019 --> 00:20:10,940
yeah I'm gonna explain anyway because I

00:20:08,059 --> 00:20:15,950
have enough time for you yeah actually I

00:20:10,940 --> 00:20:17,690
don't so design by content was a it came

00:20:15,950 --> 00:20:19,610
out of a premier language called a full

00:20:17,690 --> 00:20:21,080
and it basically means that you have to

00:20:19,610 --> 00:20:22,730
have a contract in your software right

00:20:21,080 --> 00:20:25,970
just like whatever contract you have

00:20:22,730 --> 00:20:28,279
with other companies or your internet

00:20:25,970 --> 00:20:30,110
provider your interval right is going to

00:20:28,279 --> 00:20:31,909
provide something for you and you are

00:20:30,110 --> 00:20:33,740
just going to pay for that right and the

00:20:31,909 --> 00:20:35,840
same it works kind of the same way in it

00:20:33,740 --> 00:20:38,740
software where you say so this is my

00:20:35,840 --> 00:20:42,019
function as long as you provide me with

00:20:38,740 --> 00:20:43,399
these arguments and you always you

00:20:42,019 --> 00:20:44,470
respect that contract and you always

00:20:43,399 --> 00:20:46,450
give me the

00:20:44,470 --> 00:20:48,309
arguments I'm expecting I'll I'll

00:20:46,450 --> 00:20:50,169
provide you with this replies based on

00:20:48,309 --> 00:20:51,370
on whatever input you gave me if you

00:20:50,169 --> 00:20:53,140
don't provide all the arguments I'm

00:20:51,370 --> 00:20:55,870
expecting you to provide I'll probably

00:20:53,140 --> 00:20:58,960
fail I'll probably cry i'll probably

00:20:55,870 --> 00:21:03,580
just raise exceptions and crash and take

00:20:58,960 --> 00:21:06,130
down your whole environment and that's

00:21:03,580 --> 00:21:08,080
basically and that's probably one of the

00:21:06,130 --> 00:21:09,610
reasons why we call all the the

00:21:08,080 --> 00:21:11,890
arguments elements and everything we

00:21:09,610 --> 00:21:14,409
call them signature of the function is

00:21:11,890 --> 00:21:15,940
because we have a contract with memories

00:21:14,409 --> 00:21:17,320
calling that function right so that's

00:21:15,940 --> 00:21:19,840
the signature of a contract as soon as

00:21:17,320 --> 00:21:21,840
you respect that we're going to keep

00:21:19,840 --> 00:21:25,030
behaving in a same way in the same way

00:21:21,840 --> 00:21:27,970
so designing by contract his action

00:21:25,030 --> 00:21:30,190
makes actually very simple to keep

00:21:27,970 --> 00:21:31,780
consistency and make sure that your your

00:21:30,190 --> 00:21:33,490
library your software is consumable and

00:21:31,780 --> 00:21:37,240
I keep saying a library but this can be

00:21:33,490 --> 00:21:40,870
applied also to restful api is HTTP HP

00:21:37,240 --> 00:21:43,419
is raw TCP api is whatever api you have

00:21:40,870 --> 00:21:46,299
that has to interact with external users

00:21:43,419 --> 00:21:49,240
of with other users might follow all

00:21:46,299 --> 00:21:54,240
these patterns and and all these

00:21:49,240 --> 00:21:54,240
guidelines have some privacy rules a

00:21:54,630 --> 00:21:59,530
good rule of thumb is make everything

00:21:57,130 --> 00:22:01,000
private by default if you don't know

00:21:59,530 --> 00:22:02,320
what your funk how your function is

00:22:01,000 --> 00:22:04,990
going to be used if you know if you're

00:22:02,320 --> 00:22:07,570
not sure excuse me if you're not sure

00:22:04,990 --> 00:22:11,289
whether your function should be public

00:22:07,570 --> 00:22:13,059
whether your users are going to use it

00:22:11,289 --> 00:22:14,940
or in this in a way you expect them to

00:22:13,059 --> 00:22:18,909
use it just keep everything public

00:22:14,940 --> 00:22:22,090
honestly like users don't normally care

00:22:18,909 --> 00:22:24,640
whether you have a string to unicode

00:22:22,090 --> 00:22:26,260
utility in your library just make that

00:22:24,640 --> 00:22:28,299
private if you really have to have that

00:22:26,260 --> 00:22:29,710
utility have that function make it

00:22:28,299 --> 00:22:31,330
private and don't make it available for

00:22:29,710 --> 00:22:34,150
use it because as soon as you make it

00:22:31,330 --> 00:22:36,640
public you can't assume that no one is

00:22:34,150 --> 00:22:40,030
using it because that sumption is the

00:22:36,640 --> 00:22:44,650
mother of all you know what I don't want

00:22:40,030 --> 00:22:46,570
to break the card planted and so don't

00:22:44,650 --> 00:22:48,580
assume that there's no one using your

00:22:46,570 --> 00:22:49,780
functions in your libraries always

00:22:48,580 --> 00:22:51,850
assume that there are many people

00:22:49,780 --> 00:22:54,580
thousands of people's using it so that

00:22:51,850 --> 00:22:56,740
you will be as cautious as possible to

00:22:54,580 --> 00:22:58,900
not break anyone's software or

00:22:56,740 --> 00:23:00,610
appointments don't expose obviously

00:22:58,900 --> 00:23:02,770
internals and Commons utilities like I

00:23:00,610 --> 00:23:04,720
said no one cares if you have an SDR to

00:23:02,770 --> 00:23:07,090
unicode function in your library because

00:23:04,720 --> 00:23:11,200
you need it or because the Python to the

00:23:07,090 --> 00:23:12,730
Python 3 is completely broken but but

00:23:11,200 --> 00:23:17,650
really like if you have to have it just

00:23:12,730 --> 00:23:20,950
keep it private and have some stability

00:23:17,650 --> 00:23:23,500
attributes on disability attributes for

00:23:20,950 --> 00:23:26,710
all you know I don't know it's not a

00:23:23,500 --> 00:23:29,950
very pythonic term I actually took that

00:23:26,710 --> 00:23:34,770
the term from from from rosslyn as you

00:23:29,950 --> 00:23:37,059
can see on my shirt and what it means is

00:23:34,770 --> 00:23:38,860
communicate to users whether you

00:23:37,059 --> 00:23:41,500
consider your function in your till it

00:23:38,860 --> 00:23:44,110
is in your library as a stable API is a

00:23:41,500 --> 00:23:46,630
stable in point or not if you think a

00:23:44,110 --> 00:23:49,000
specific function is experimental or an

00:23:46,630 --> 00:23:51,940
endpoint or an API let your users know

00:23:49,000 --> 00:23:53,860
have those sibility attributes so that

00:23:51,940 --> 00:23:56,140
whenever they're using it if it is

00:23:53,860 --> 00:23:58,059
experimental they might expect this

00:23:56,140 --> 00:24:01,809
library or decent point to change in the

00:23:58,059 --> 00:24:03,490
future and if we're stable they might be

00:24:01,809 --> 00:24:05,350
provided with all the guarantees of a

00:24:03,490 --> 00:24:06,990
stable API which means we're not going

00:24:05,350 --> 00:24:09,520
to break you you're free to use it and

00:24:06,990 --> 00:24:12,220
stable doesn't mean there are no bugs in

00:24:09,520 --> 00:24:14,110
it stable means we're happy with

00:24:12,220 --> 00:24:15,580
whatever signature we have here we are

00:24:14,110 --> 00:24:17,410
happy with whatever this function is

00:24:15,580 --> 00:24:19,240
doing and we're not planning to change

00:24:17,410 --> 00:24:21,910
them in the next from in the next

00:24:19,240 --> 00:24:24,130
release so you're free to use it don't

00:24:21,910 --> 00:24:25,809
worry we're not going to break you so

00:24:24,130 --> 00:24:30,160
make sure you communicate those things

00:24:25,809 --> 00:24:31,900
to your users in this case so the

00:24:30,160 --> 00:24:34,630
commutation is always a good answer to

00:24:31,900 --> 00:24:36,370
these things but sometimes I believe

00:24:34,630 --> 00:24:39,160
that we should push ourselves a little

00:24:36,370 --> 00:24:41,530
bit for and just like when you're

00:24:39,160 --> 00:24:43,450
deprecating stuff when you deprecates of

00:24:41,530 --> 00:24:45,160
you just start like printing warnings

00:24:43,450 --> 00:24:46,450
everywhere and say like hey this is

00:24:45,160 --> 00:24:48,010
going to change this is going to break

00:24:46,450 --> 00:24:50,140
in the future and we're going to remove

00:24:48,010 --> 00:24:51,670
all these functions and the same way the

00:24:50,140 --> 00:24:53,170
same thing you should probably do with

00:24:51,670 --> 00:24:56,230
stability attributes and let your user

00:24:53,170 --> 00:24:58,000
know at least once or there are good

00:24:56,230 --> 00:25:00,010
ways to just print one message when

00:24:58,000 --> 00:25:02,530
people even if they're calling the same

00:25:00,010 --> 00:25:04,150
function in several times to say you

00:25:02,530 --> 00:25:06,070
know what this function is experimental

00:25:04,150 --> 00:25:08,550
be careful it might change in the future

00:25:06,070 --> 00:25:10,020
so that whenever you change it is not

00:25:08,550 --> 00:25:12,600
to surprise your users and it's not

00:25:10,020 --> 00:25:14,610
going to break them and again this all

00:25:12,600 --> 00:25:16,320
goes back to being explicit than being

00:25:14,610 --> 00:25:17,970
public on whatever you're doing there's

00:25:16,320 --> 00:25:19,470
nothing wrong with that there's nothing

00:25:17,970 --> 00:25:20,820
wrong with saying we're experimenting

00:25:19,470 --> 00:25:23,150
with this and point we're experimenting

00:25:20,820 --> 00:25:27,060
with this function with this function

00:25:23,150 --> 00:25:28,620
actually it makes you a better a library

00:25:27,060 --> 00:25:30,270
maintainer it makes you better software

00:25:28,620 --> 00:25:32,550
developer the fact that you're being

00:25:30,270 --> 00:25:34,440
open of what your IDs are and being open

00:25:32,550 --> 00:25:36,630
of what you're working on so that your

00:25:34,440 --> 00:25:41,280
users you provide the best experience to

00:25:36,630 --> 00:25:45,750
your users and one last point I think is

00:25:41,280 --> 00:25:47,430
the last point is texting and and i'm

00:25:45,750 --> 00:25:49,260
not talking about unit tests or even

00:25:47,430 --> 00:25:51,510
functional tests I way we know that like

00:25:49,260 --> 00:25:54,180
I really hope I don't have to tell you

00:25:51,510 --> 00:25:56,370
that you should test your software but

00:25:54,180 --> 00:25:58,710
I'm talking about integration tests if

00:25:56,370 --> 00:26:00,450
you know there are some soft words

00:25:58,710 --> 00:26:03,600
specific software that are using your

00:26:00,450 --> 00:26:06,030
libraries make sure you test your

00:26:03,600 --> 00:26:08,730
library against those software or days

00:26:06,030 --> 00:26:11,580
those use cases to make sure you're not

00:26:08,730 --> 00:26:14,970
breaking them we do that a lot in open

00:26:11,580 --> 00:26:16,560
side we have um some services depending

00:26:14,970 --> 00:26:18,120
on other services and we have this

00:26:16,560 --> 00:26:20,220
pipeline with this gate it's called the

00:26:18,120 --> 00:26:22,800
integration gay where we test everything

00:26:20,220 --> 00:26:24,780
together and we make sure that if for

00:26:22,800 --> 00:26:26,490
every patch we do that and we make sure

00:26:24,780 --> 00:26:28,830
that that patch is not breaking other

00:26:26,490 --> 00:26:30,300
saw other services it's not just about

00:26:28,830 --> 00:26:31,650
making sure it doesn't break your

00:26:30,300 --> 00:26:33,090
service it's making sure it doesn't

00:26:31,650 --> 00:26:34,500
break others people serve it and I'm

00:26:33,090 --> 00:26:36,210
telling I'm not telling you you should

00:26:34,500 --> 00:26:39,390
do that with every single single user

00:26:36,210 --> 00:26:42,030
but if you have a very good consumer of

00:26:39,390 --> 00:26:44,100
your library that has contributed a lot

00:26:42,030 --> 00:26:46,590
back to you it would be a good thing for

00:26:44,100 --> 00:26:48,600
you to say hey you know what from now on

00:26:46,590 --> 00:26:50,400
I'm going to try to test every single

00:26:48,600 --> 00:26:51,660
release or every single patch will

00:26:50,400 --> 00:26:53,340
probably really see if you don't want to

00:26:51,660 --> 00:26:55,260
do it for a single patch every single

00:26:53,340 --> 00:26:56,820
release of my library against your

00:26:55,260 --> 00:26:58,440
software to make sure I'm not breaking

00:26:56,820 --> 00:26:59,970
you because you're a good example of a

00:26:58,440 --> 00:27:02,070
consumer of my library are good to use

00:26:59,970 --> 00:27:05,490
case for me and I don't want to make

00:27:02,070 --> 00:27:07,770
suffer and if possible make sure you run

00:27:05,490 --> 00:27:09,750
across version it's not just releasing

00:27:07,770 --> 00:27:11,550
my library now and testing it against

00:27:09,750 --> 00:27:14,280
master of the software but also testing

00:27:11,550 --> 00:27:16,680
it with previously released versions to

00:27:14,280 --> 00:27:17,870
make sure you don't break other existing

00:27:16,680 --> 00:27:20,490
deployments

00:27:17,870 --> 00:27:23,370
and without I think I actually ran out

00:27:20,490 --> 00:27:24,810
of time and also run out of topics so I

00:27:23,370 --> 00:27:26,100
hope you enjoyed the talk and if you

00:27:24,810 --> 00:27:40,290
have any questions feel free to ask

00:27:26,100 --> 00:27:47,640
thank you I can offer beer water there

00:27:40,290 --> 00:27:49,740
you go I knew you would ask thanks for

00:27:47,640 --> 00:27:51,450
the talk I have a question how do you

00:27:49,740 --> 00:27:53,400
deal with the one when you're first

00:27:51,450 --> 00:27:56,040
starting to develop a library when

00:27:53,400 --> 00:27:57,960
things move all over the place would you

00:27:56,040 --> 00:28:00,360
recommend like waiting to release it

00:27:57,960 --> 00:28:02,160
until it's done because at that point

00:28:00,360 --> 00:28:05,100
you might lose a lot of feedback so how

00:28:02,160 --> 00:28:08,790
do you decide probably doing alpha

00:28:05,100 --> 00:28:10,680
releases um when you when when you start

00:28:08,790 --> 00:28:15,300
working on a library and there's a lot

00:28:10,680 --> 00:28:17,490
of there's a there's a time where you

00:28:15,300 --> 00:28:19,770
like you say you don't know whether what

00:28:17,490 --> 00:28:22,560
your breathing is actually useful or it

00:28:19,770 --> 00:28:24,390
makes sense at all or not so to me

00:28:22,560 --> 00:28:26,250
what's all four releases are for you

00:28:24,390 --> 00:28:27,720
just release enough when you have

00:28:26,250 --> 00:28:30,540
something that is good enough to be

00:28:27,720 --> 00:28:33,210
tested or do you know to be a try

00:28:30,540 --> 00:28:34,650
somehow in some software and you need to

00:28:33,210 --> 00:28:36,390
find the things that when you release an

00:28:34,650 --> 00:28:38,400
alpha version if it's a complete new

00:28:36,390 --> 00:28:40,830
library you need to find that set of

00:28:38,400 --> 00:28:44,190
people that would be happy to use it and

00:28:40,830 --> 00:28:45,960
provide feedback to you you can say the

00:28:44,190 --> 00:28:48,960
same thing for new releases of the

00:28:45,960 --> 00:28:50,280
existing library as well but i would say

00:28:48,960 --> 00:28:52,410
alpha releases that's what they're for

00:28:50,280 --> 00:28:54,540
and then you from alpha you can move to

00:28:52,410 --> 00:28:57,540
beta and and when you feel that you are

00:28:54,540 --> 00:28:59,040
in a common ground in good shape or good

00:28:57,540 --> 00:29:01,800
enough shape you would just release that

00:28:59,040 --> 00:29:04,880
the version the first stable version

00:29:01,800 --> 00:29:04,880
first thing thanks

00:29:06,369 --> 00:29:10,730
anybody yes and if someone is going to

00:29:09,169 --> 00:29:12,320
ask what happens once you put

00:29:10,730 --> 00:29:14,840
underscores in front of your function

00:29:12,320 --> 00:29:17,389
and someone uses it anyway we'll hug

00:29:14,840 --> 00:29:18,499
their users that's there's a good python

00:29:17,389 --> 00:29:21,049
standard that says if you have

00:29:18,499 --> 00:29:23,419
underscores on top before / fixing your

00:29:21,049 --> 00:29:25,279
function names and it is supposed to be

00:29:23,419 --> 00:29:29,289
private and if someone else is actually

00:29:25,279 --> 00:29:32,509
using it that is their problem not yours

00:29:29,289 --> 00:29:34,220
no more questions I guess I guess I

00:29:32,509 --> 00:29:36,309
answered thank you for that too thank

00:29:34,220 --> 00:29:36,309
you

00:29:50,809 --> 00:29:52,870

YouTube URL: https://www.youtube.com/watch?v=VZp7iWOKJ_A


