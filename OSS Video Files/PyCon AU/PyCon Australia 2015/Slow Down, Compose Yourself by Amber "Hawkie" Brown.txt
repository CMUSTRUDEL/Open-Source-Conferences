Title: Slow Down, Compose Yourself by Amber "Hawkie" Brown
Publication date: 2015-08-04
Playlist: PyCon Australia 2015
Description: 
	As your codebase grows, you will have instances where you have code that needs to be reused. Then you think, I can do this with subclassing! Now you have a diamond-tree of problems.

Here, we’ll talk about a better way of code reuse and introducing alternate behaviour into existing classes — composition. It’ll improve how you test your code — making your test runs faster, making it easier to test exceptional cases, and making everything easier to understand.

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:10,860 --> 00:00:15,940
well good morning every way up at one of

00:00:13,390 --> 00:00:18,250
the Stargate snorting talk on Raspberry

00:00:15,940 --> 00:00:20,050
Pi learning all about coffee and

00:00:18,250 --> 00:00:23,110
everything else those of you who've been

00:00:20,050 --> 00:00:26,890
here yesterday the Django talk know

00:00:23,110 --> 00:00:31,720
exactly who we've got here amber brown

00:00:26,890 --> 00:00:33,880
is going to talk on twisted no I do all

00:00:31,720 --> 00:00:36,250
my research and I've forgotten okay well

00:00:33,880 --> 00:00:39,160
I'm talking about composition which is

00:00:36,250 --> 00:00:51,550
something twisting users right okay so

00:00:39,160 --> 00:01:00,269
you put your hands together family

00:00:51,550 --> 00:01:03,160
younger cousin saw me yesterday again a

00:01:00,269 --> 00:01:05,680
member Brown I'm gonna walk out or

00:01:03,160 --> 00:01:08,640
walking out on Twitter you want to

00:01:05,680 --> 00:01:13,230
listen to stuff that don't care bout I

00:01:08,640 --> 00:01:16,750
am the list manager Paul developer I can

00:01:13,230 --> 00:01:21,810
three-person Christmas project it should

00:01:16,750 --> 00:01:24,970
say open source it wasn't prep work I

00:01:21,810 --> 00:01:27,730
also spend a lot of time working for two

00:01:24,970 --> 00:01:31,030
beds on the crossbar I our website about

00:01:27,730 --> 00:01:32,740
which uses Twitter tablet so I've been

00:01:31,030 --> 00:01:34,930
working on falling that platinum free

00:01:32,740 --> 00:01:38,250
and improving the user experience and

00:01:34,930 --> 00:01:41,500
it's really great condition check out

00:01:38,250 --> 00:01:44,800
now it's pretty much a given that no

00:01:41,500 --> 00:01:48,420
software will stay the same in his are

00:01:44,800 --> 00:01:51,010
changing of the software is are checking

00:01:48,420 --> 00:01:52,690
you will need to extend it you will need

00:01:51,010 --> 00:01:55,660
to be proven and you will need to

00:01:52,690 --> 00:01:59,890
replace that is the life cycle of any

00:01:55,660 --> 00:02:02,680
given subject those software is just a

00:01:59,890 --> 00:02:04,330
library sometimes those of our

00:02:02,680 --> 00:02:06,880
application sometimes they're wide range

00:02:04,330 --> 00:02:09,580
things and I'm use directly they are

00:02:06,880 --> 00:02:12,700
rarely do anything on the phone on their

00:02:09,580 --> 00:02:13,989
own but everyone uses though you can't

00:02:12,700 --> 00:02:15,970
really get much done these days

00:02:13,989 --> 00:02:18,100
enlightened without using library

00:02:15,970 --> 00:02:24,690
whether it's can go on twisted or for

00:02:18,100 --> 00:02:24,690
NATO or my TV because time's up

00:02:24,930 --> 00:02:30,540
and a lot of these frameworks recommends

00:02:28,620 --> 00:02:34,650
that how you extend it gives you

00:02:30,540 --> 00:02:37,349
supplies now for example gender does

00:02:34,650 --> 00:02:40,799
this it provides on this view you

00:02:37,349 --> 00:02:43,430
subclass that you've override whatever

00:02:40,799 --> 00:02:46,290
functions to do whatever you want to do

00:02:43,430 --> 00:02:49,829
you can I make sense that also behavior

00:02:46,290 --> 00:02:51,450
and useful occupation for example we

00:02:49,829 --> 00:02:54,750
have uninterested that we're trained

00:02:51,450 --> 00:02:57,090
pays out which adds some nice colorful

00:02:54,750 --> 00:02:59,790
things when you hopeful street fights or

00:02:57,090 --> 00:03:02,010
when you call better so that is

00:02:59,790 --> 00:03:04,650
duplicated in a lot of different clocks

00:03:02,010 --> 00:03:06,389
so at a time we may have been simply

00:03:04,650 --> 00:03:10,200
reduce that you're protecting the main

00:03:06,389 --> 00:03:12,230
of only happened one plus this complete

00:03:10,200 --> 00:03:14,940
problems

00:03:12,230 --> 00:03:16,970
multiple inheritance especially complete

00:03:14,940 --> 00:03:20,130
some very confusing situations and

00:03:16,970 --> 00:03:21,660
there's an instance where the order that

00:03:20,130 --> 00:03:23,820
you define a big season center

00:03:21,660 --> 00:03:27,540
subclasses actually change the behavior

00:03:23,820 --> 00:03:29,880
of the object quite drastic there's some

00:03:27,540 --> 00:03:32,100
instances when you interview can go

00:03:29,880 --> 00:03:34,380
based on where you actually have to be

00:03:32,100 --> 00:03:36,090
careful about me honor because otherwise

00:03:34,380 --> 00:03:38,100
you will have something that I were to

00:03:36,090 --> 00:03:41,090
write something else and it is just like

00:03:38,100 --> 00:03:43,650
working with your Prowler cryptic errors

00:03:41,090 --> 00:03:46,170
large inheritance trees like each

00:03:43,650 --> 00:03:48,600
occurrence where are not thinking on

00:03:46,170 --> 00:03:51,510
Deko it's just the biggest one of use of

00:03:48,600 --> 00:03:53,490
something every of those it can be very

00:03:51,510 --> 00:03:55,440
confusing snapback I mean there's things

00:03:53,490 --> 00:03:58,290
like class and class-based views which

00:03:55,440 --> 00:04:01,050
helps you navigate what everything else

00:03:58,290 --> 00:04:06,840
I guess it's like a tree with white nine

00:04:01,050 --> 00:04:10,560
members so it's really confusing so I

00:04:06,840 --> 00:04:16,709
think I think you should say slow down

00:04:10,560 --> 00:04:21,380
and poster now why should you slow down

00:04:16,709 --> 00:04:24,540
start or software bellini design bonds

00:04:21,380 --> 00:04:28,560
and desirable traits can only rarely be

00:04:24,540 --> 00:04:30,630
designed in you can't old home security

00:04:28,560 --> 00:04:33,390
you can't bolt on performance come

00:04:30,630 --> 00:04:35,130
bolt-on modularity if you try and do

00:04:33,390 --> 00:04:37,140
these things out of the fact when you

00:04:35,130 --> 00:04:40,080
have a significant amount of software it

00:04:37,140 --> 00:04:42,180
will either fail result or or providing

00:04:40,080 --> 00:04:44,700
lots and lots of headaches it is

00:04:42,180 --> 00:04:48,240
possible but at that point is easier to

00:04:44,700 --> 00:04:49,680
just rewrite them now modularity

00:04:48,240 --> 00:04:51,780
especially if you're right on the

00:04:49,680 --> 00:04:54,240
library and testability

00:04:51,780 --> 00:04:57,620
run application are two very desirable

00:04:54,240 --> 00:05:00,360
traits of everyone can try again

00:04:57,620 --> 00:05:02,460
popularity is pretty much the same as

00:05:00,360 --> 00:05:05,060
insensibility because he wants you have

00:05:02,460 --> 00:05:08,550
modules that we have extended behavior

00:05:05,060 --> 00:05:11,280
and this modularity actually quite helps

00:05:08,550 --> 00:05:13,290
testability because these modules can

00:05:11,280 --> 00:05:17,669
then be broken up and tested in smaller

00:05:13,290 --> 00:05:21,180
pieces now one of the things that

00:05:17,669 --> 00:05:24,480
twisted has in a sort of manifesto of

00:05:21,180 --> 00:05:26,160
sorts we go from official is that tests

00:05:24,480 --> 00:05:27,840
are the only way to verify that

00:05:26,160 --> 00:05:30,450
something works and it's something you

00:05:27,840 --> 00:05:32,790
keep working with a live test suite with

00:05:30,450 --> 00:05:35,960
thousands of tests running on a platform

00:05:32,790 --> 00:05:40,560
since two versus three es de of the tree

00:05:35,960 --> 00:05:42,330
windows somehow and we needed to keep

00:05:40,560 --> 00:05:44,340
working so we have these tests to make

00:05:42,330 --> 00:05:47,220
sure that even small things that might

00:05:44,340 --> 00:05:52,110
not think actually affect anything don't

00:05:47,220 --> 00:05:54,389
trigger a kernel bug in fedora 19 now in

00:05:52,110 --> 00:05:56,400
designing a system you want to aim these

00:05:54,389 --> 00:05:59,070
trends when you're signing into a pile

00:05:56,400 --> 00:06:01,290
of this system to be extensive I wanted

00:05:59,070 --> 00:06:04,200
to be performed you don't have to go for

00:06:01,290 --> 00:06:06,030
all these traitors sometimes it's better

00:06:04,200 --> 00:06:11,490
to be understandable rather than

00:06:06,030 --> 00:06:13,430
performance now why should you compose

00:06:11,490 --> 00:06:16,020
just us

00:06:13,430 --> 00:06:19,470
conversation is when you project is made

00:06:16,020 --> 00:06:23,010
a small box body and then you put it all

00:06:19,470 --> 00:06:25,470
together this is in contrast to

00:06:23,010 --> 00:06:27,540
inheritance and when you have logic and

00:06:25,470 --> 00:06:29,940
then you sub parts and an animal what

00:06:27,540 --> 00:06:33,510
week on top you sort of jose nobile but

00:06:29,940 --> 00:06:35,790
there's sort of a pyramid now in

00:06:33,510 --> 00:06:38,370
composition these walks down some

00:06:35,790 --> 00:06:42,090
component lines so they have their own

00:06:38,370 --> 00:06:46,680
themes that they care about one object

00:06:42,090 --> 00:06:53,730
does wanting nothing more as an example

00:06:46,680 --> 00:06:56,940
look it has a blog post so you have post

00:06:53,730 --> 00:06:58,560
and you have thing that gets posts you

00:06:56,940 --> 00:07:00,360
have user accounts because you might

00:06:58,560 --> 00:07:02,280
more pluggable education station

00:07:00,360 --> 00:07:04,920
connects from github or WordPress

00:07:02,280 --> 00:07:08,330
whatever and run comments so that angry

00:07:04,920 --> 00:07:12,870
people comments tell me why you're wrong

00:07:08,330 --> 00:07:17,640
and runtime these will be taken care of

00:07:12,870 --> 00:07:19,110
by implementation all that important now

00:07:17,640 --> 00:07:21,570
you don't always have to have the real

00:07:19,110 --> 00:07:23,360
things you're in testing you can open or

00:07:21,570 --> 00:07:25,590
scallop affect others

00:07:23,360 --> 00:07:27,660
difference-in-differences in these and i

00:07:25,590 --> 00:07:30,150
recommend when you're doing your testing

00:07:27,660 --> 00:07:34,350
that you would have 40 to 1 files

00:07:30,150 --> 00:07:36,660
because they need to slightly room but

00:07:34,350 --> 00:07:39,630
replacing the real components with fake

00:07:36,660 --> 00:07:43,889
ones reduces the area that each test

00:07:39,630 --> 00:07:46,289
tests now that might sound was bad

00:07:43,889 --> 00:07:48,539
a lot of things but if you have finer

00:07:46,289 --> 00:07:52,650
grain tests you know exactly what right

00:07:48,539 --> 00:07:54,960
now when you have one test failure then

00:07:52,650 --> 00:07:56,870
it's a very specific it's not in a bunch

00:07:54,960 --> 00:08:01,050
of other stuff that might be unrelated

00:07:56,870 --> 00:08:03,539
one family of my cause in a system when

00:08:01,050 --> 00:08:05,849
you do a lot of big tests on Little

00:08:03,539 --> 00:08:08,729
Tokyo like a syntax error in some pile

00:08:05,849 --> 00:08:12,029
might cause a whole bunch of tests to

00:08:08,729 --> 00:08:14,099
fail well if you if you make them more

00:08:12,029 --> 00:08:16,050
small tests broken up then it's more

00:08:14,099 --> 00:08:18,900
likely that'll only make a couple tests

00:08:16,050 --> 00:08:22,409
fail it's more localized no more noise

00:08:18,900 --> 00:08:24,150
that have to sort through now if a

00:08:22,409 --> 00:08:27,419
components regular thing is that you can

00:08:24,150 --> 00:08:31,080
conquer them to give hard to reproduce

00:08:27,419 --> 00:08:33,000
results now if using something like

00:08:31,080 --> 00:08:35,930
posters if you're rising with our bass

00:08:33,000 --> 00:08:38,909
player progresses you might want to

00:08:35,930 --> 00:08:43,800
appear on an altar again you might want

00:08:38,909 --> 00:08:46,260
to simulate something like a integra now

00:08:43,800 --> 00:08:49,890
doing that on a real database requires

00:08:46,260 --> 00:08:53,040
you to make diabase make something make

00:08:49,890 --> 00:08:54,420
a schema and environment at speed how

00:08:53,040 --> 00:08:56,519
can give a thank-you point of you can

00:08:54,420 --> 00:08:59,579
just make it return you temporary

00:08:56,519 --> 00:09:01,199
directory because no matter that of

00:08:59,579 --> 00:09:04,980
where it came from it's just that it

00:09:01,199 --> 00:09:06,930
raises this error in your body so no

00:09:04,980 --> 00:09:09,779
more space integrity error things like

00:09:06,930 --> 00:09:12,449
that that are really hard or maybe you

00:09:09,779 --> 00:09:14,880
have to do a lot of expensive work like

00:09:12,449 --> 00:09:17,160
setting up a whole database can only

00:09:14,880 --> 00:09:19,829
make or behave way so you can actually

00:09:17,160 --> 00:09:23,160
test that your code candles better

00:09:19,829 --> 00:09:24,180
without having to do a lot of tests the

00:09:23,160 --> 00:09:27,450
model worked

00:09:24,180 --> 00:09:29,610
the tests now this means that you can go

00:09:27,450 --> 00:09:32,160
from having things that your real

00:09:29,610 --> 00:09:34,529
databases to ones that use faked our

00:09:32,160 --> 00:09:36,390
bases and you can make the test running

00:09:34,529 --> 00:09:38,130
subset and leather things because you

00:09:36,390 --> 00:09:42,390
don't actually need to do all the work

00:09:38,130 --> 00:09:44,040
work of course the integration tests you

00:09:42,390 --> 00:09:46,649
will want to do all that work so it's

00:09:44,040 --> 00:09:48,120
about testing of petawatt obliges you

00:09:46,649 --> 00:09:50,670
want to take components but you also

00:09:48,120 --> 00:09:55,709
want tests and make sure that everything

00:09:50,670 --> 00:10:00,180
fits together now why should you post on

00:09:55,709 --> 00:10:03,570
feathers design now inheritance multiple

00:10:00,180 --> 00:10:07,529
characters music and the emergence

00:10:03,570 --> 00:10:10,770
streams become very long comment is a

00:10:07,529 --> 00:10:12,330
major favor of it now when you're

00:10:10,770 --> 00:10:15,540
testing one thing you might be able to

00:10:12,330 --> 00:10:17,399
do is modify the mro all the women and

00:10:15,540 --> 00:10:21,450
the present resolution or something like

00:10:17,399 --> 00:10:23,250
that I don't do a lot of inheritance but

00:10:21,450 --> 00:10:26,130
you can modify it there's some secret

00:10:23,250 --> 00:10:28,410
things to vent you can make angels cry

00:10:26,130 --> 00:10:33,270
when you do it but you can't do it for

00:10:28,410 --> 00:10:35,730
this very fragile is very much it now we

00:10:33,270 --> 00:10:38,550
need a composition you have very big

00:10:35,730 --> 00:10:41,430
tree still you still have things that do

00:10:38,550 --> 00:10:44,040
you want a lot of small things so you

00:10:41,430 --> 00:10:49,380
can put it up with more but it's simpler

00:10:44,040 --> 00:10:51,660
to understand wait on pc if you can

00:10:49,380 --> 00:10:54,000
switch out the credits you might have to

00:10:51,660 --> 00:10:56,670
monkey patch things might have to monkey

00:10:54,000 --> 00:10:58,980
patch away the Donbass Exodus you want a

00:10:56,670 --> 00:11:00,430
monkey patch away something that you

00:10:58,980 --> 00:11:02,649
can't

00:11:00,430 --> 00:11:04,180
department if you're testing in

00:11:02,649 --> 00:11:07,029
gentlemen's or something and you can't

00:11:04,180 --> 00:11:10,779
set up a MongoDB instance you would have

00:11:07,029 --> 00:11:13,270
to muddle patch in effect it's also very

00:11:10,779 --> 00:11:15,610
fragile because they're providing

00:11:13,270 --> 00:11:19,089
implementation details if something

00:11:15,610 --> 00:11:21,399
underneath changes then the assumptions

00:11:19,089 --> 00:11:23,529
that your faith and your above the

00:11:21,399 --> 00:11:28,089
assumptions that your monkey pack next I

00:11:23,529 --> 00:11:30,550
be wrong it's also quite messy and a

00:11:28,089 --> 00:11:33,100
complete confusion when you're changing

00:11:30,550 --> 00:11:35,529
things everywhere and what's the real

00:11:33,100 --> 00:11:39,149
component what's the point of view put

00:11:35,529 --> 00:11:42,250
in and what if your component is buggy

00:11:39,149 --> 00:11:44,740
so yeah cos theta plus class-based views

00:11:42,250 --> 00:11:47,670
can be about finding exactly what we

00:11:44,740 --> 00:11:50,200
need to monkey actually watch me over i

00:11:47,670 --> 00:11:51,880
but you still need to worry about the

00:11:50,200 --> 00:11:53,950
internals and you still have to read

00:11:51,880 --> 00:11:56,589
that coded figure out what it changes

00:11:53,950 --> 00:12:02,649
whether it changes some internal flag to

00:11:56,589 --> 00:12:05,320
say that a request attack and you end up

00:12:02,649 --> 00:12:07,330
with just these massive massive objects

00:12:05,320 --> 00:12:12,490
when you use counters things that you're

00:12:07,330 --> 00:12:14,589
a lot of stuff and of course union of

00:12:12,490 --> 00:12:18,560
the big things that often promises

00:12:14,589 --> 00:12:23,339
because that's just great it's it's fun

00:12:18,560 --> 00:12:25,740
so how do you do this well you want a

00:12:23,339 --> 00:12:28,829
rice example of your phone be used if

00:12:25,740 --> 00:12:31,310
you're agreeable so here's the example

00:12:28,829 --> 00:12:34,440
of something called brittle um it's

00:12:31,310 --> 00:12:36,269
don't friends worth too closely instead

00:12:34,440 --> 00:12:40,320
of web frameworks are working on in my

00:12:36,269 --> 00:12:42,570
spare time so for example are all here

00:12:40,320 --> 00:12:47,399
in this is how I will be any eyes alone

00:12:42,570 --> 00:12:51,390
I really mustn't finished it that sketch

00:12:47,399 --> 00:12:53,490
wrong now you can find defects with this

00:12:51,390 --> 00:12:55,410
you can find out ok when I wish I

00:12:53,490 --> 00:12:57,720
actually need to give it this other

00:12:55,410 --> 00:13:00,899
bucket boy has some dependency on this

00:12:57,720 --> 00:13:02,850
guy didn't see before and you can design

00:13:00,899 --> 00:13:07,079
the API experience which is really

00:13:02,850 --> 00:13:10,290
really important you worked out from

00:13:07,079 --> 00:13:14,760
there you go here's what I mean how do I

00:13:10,290 --> 00:13:17,790
get it we'll go back to the body that's

00:13:14,760 --> 00:13:22,339
very hot other components of all posts

00:13:17,790 --> 00:13:22,339
be caps the office and comments or soon

00:13:22,649 --> 00:13:28,000
now you want to write it faces all these

00:13:25,990 --> 00:13:30,520
things the objects that take care of

00:13:28,000 --> 00:13:33,040
these roles if it doesn't cover anything

00:13:30,520 --> 00:13:36,279
just expanded Lee I you're still in

00:13:33,040 --> 00:13:40,180
development everything is changing they

00:13:36,279 --> 00:13:42,130
all share a common component story each

00:13:40,180 --> 00:13:43,630
object doesn't need to do it so historic

00:13:42,130 --> 00:13:47,589
you can have one storage update that

00:13:43,630 --> 00:13:51,430
serves all three so cause begin in any

00:13:47,589 --> 00:13:55,330
effects of that so here's the example of

00:13:51,430 --> 00:14:00,250
the interface / blog post so as you see

00:13:55,330 --> 00:14:03,490
here we have it centrally ten times yes

00:14:00,250 --> 00:14:06,910
I think that is I've got it today it's

00:14:03,490 --> 00:14:09,310
one of those things any easier after you

00:14:06,910 --> 00:14:11,170
define a trapeze you say that these will

00:14:09,310 --> 00:14:14,320
assess all the objects and these are

00:14:11,170 --> 00:14:17,260
what each beans and then you have the

00:14:14,320 --> 00:14:20,020
actual object that creates the interface

00:14:17,260 --> 00:14:24,040
so you have a get post it get posts and

00:14:20,020 --> 00:14:26,050
animals and it defines what you call and

00:14:24,040 --> 00:14:28,000
then if you money if you want them to

00:14:26,050 --> 00:14:33,040
find an even stronger in case there are

00:14:28,000 --> 00:14:36,400
dog strings that say what it returns and

00:14:33,040 --> 00:14:42,400
as an example four counts and comments

00:14:36,400 --> 00:14:45,100
and story so ideally so we have these

00:14:42,400 --> 00:14:46,050
infections so with all these now so I

00:14:45,100 --> 00:14:50,250
just

00:14:46,050 --> 00:14:51,510
invitation so we have now when we were

00:14:50,250 --> 00:14:53,820
writing that we don't have to rise

00:14:51,510 --> 00:14:56,700
against production think immediately in

00:14:53,820 --> 00:14:59,760
development especially in Janko a lot of

00:14:56,700 --> 00:15:02,370
people use C wipes as their local

00:14:59,760 --> 00:15:04,490
database because you don't need a full

00:15:02,370 --> 00:15:06,630
post for a server when you're developing

00:15:04,490 --> 00:15:08,760
now when you will know basis is

00:15:06,630 --> 00:15:12,750
something like RTS that might have some

00:15:08,760 --> 00:15:15,149
special extensions just frustrated you

00:15:12,750 --> 00:15:16,950
were utilizing against to right away

00:15:15,149 --> 00:15:18,959
unless you want to put it in the title

00:15:16,950 --> 00:15:20,430
you know pass over to Amazon every

00:15:18,959 --> 00:15:23,310
single time you want to change which

00:15:20,430 --> 00:15:26,279
isn't very fast let's make it in memory

00:15:23,310 --> 00:15:30,149
month here's the code don't read it is

00:15:26,279 --> 00:15:33,990
horrible but essentially this is a very

00:15:30,149 --> 00:15:36,089
very opportune mania 20 minutes in

00:15:33,990 --> 00:15:38,820
memory faith with what this means is

00:15:36,089 --> 00:15:40,950
that now that I have a gardeners it is a

00:15:38,820 --> 00:15:42,959
close enough approximate meets a little

00:15:40,950 --> 00:15:45,209
face I can work on everything else I

00:15:42,959 --> 00:15:49,560
don't need to worry about service

00:15:45,209 --> 00:15:51,360
schemas or or migrations or anything

00:15:49,560 --> 00:15:53,970
like that because I have an interface

00:15:51,360 --> 00:15:56,790
that works exactly the same mostly

00:15:53,970 --> 00:16:01,140
excited except it just works in memory

00:15:56,790 --> 00:16:04,350
so no setup required just water there we

00:16:01,140 --> 00:16:06,839
want to make natural log of it so this

00:16:04,350 --> 00:16:09,660
is a concrete in face of that we pull

00:16:06,839 --> 00:16:12,270
the storage we get we get the rows of

00:16:09,660 --> 00:16:16,440
the blog post can get all the blog posts

00:16:12,270 --> 00:16:18,660
and then we return of course everyone

00:16:16,440 --> 00:16:22,260
needs a better face cause it's a web

00:16:18,660 --> 00:16:24,529
form and because registries near memory

00:16:22,260 --> 00:16:28,129
erase we'll just add some account

00:16:24,529 --> 00:16:31,040
mcallen absolute most right there we

00:16:28,129 --> 00:16:34,579
don't need to actually write it out of

00:16:31,040 --> 00:16:39,970
eagle-eyed our base well then at the web

00:16:34,579 --> 00:16:45,199
UI ok so just simple bearing XSS from

00:16:39,970 --> 00:16:48,889
web code so production is and then we

00:16:45,199 --> 00:16:51,470
run it and what we get look at this now

00:16:48,889 --> 00:16:53,629
it doesn't matter whether whether we're

00:16:51,470 --> 00:16:55,370
actually talking to a memory or talking

00:16:53,629 --> 00:16:57,980
to single like talking to close group

00:16:55,370 --> 00:17:00,439
because I when you finish all those

00:16:57,980 --> 00:17:02,720
objects will have the same interface so

00:17:00,439 --> 00:17:05,150
you need to swap them out you can you

00:17:02,720 --> 00:17:08,140
can get close enough for now and then

00:17:05,150 --> 00:17:12,409
put it on your fantasies out base later

00:17:08,140 --> 00:17:14,299
or you can have a specialized for that

00:17:12,409 --> 00:17:16,789
does something different it's still we

00:17:14,299 --> 00:17:18,740
see in space so if you have a system

00:17:16,789 --> 00:17:20,750
that takes a wall and put some web

00:17:18,740 --> 00:17:25,280
interface / you can just pass it to it

00:17:20,750 --> 00:17:28,250
in it won't care but it's a bit overkill

00:17:25,280 --> 00:17:30,110
to have installations that work

00:17:28,250 --> 00:17:33,440
commentator what's the point of million

00:17:30,110 --> 00:17:35,930
space doesn't seem like you could have

00:17:33,440 --> 00:17:39,050
these specialized or other things

00:17:35,930 --> 00:17:42,560
available I mean you know how many times

00:17:39,050 --> 00:17:45,380
can you important well if you had huge

00:17:42,560 --> 00:17:48,380
teaching spaces it brings a bit of a new

00:17:45,380 --> 00:17:51,710
way of thinking you could have many

00:17:48,380 --> 00:17:54,800
implementations of idle for example a

00:17:51,710 --> 00:17:57,080
special world that I love that only

00:17:54,800 --> 00:17:59,990
looks of the year losing tension and

00:17:57,080 --> 00:18:02,780
only returns things within that year so

00:17:59,990 --> 00:18:05,300
that's your year so that can just use

00:18:02,780 --> 00:18:07,220
that in space so instead of filtering or

00:18:05,300 --> 00:18:09,230
doing that you just have funny a one

00:18:07,220 --> 00:18:14,180
object that does just that anything past

00:18:09,230 --> 00:18:16,100
didn't wind up having all these simple

00:18:14,180 --> 00:18:17,780
objects of you just one thing and you

00:18:16,100 --> 00:18:19,550
sort of get them together whether it's

00:18:17,780 --> 00:18:24,920
you know your little house you yo-yo a

00:18:19,550 --> 00:18:27,140
plane and failure now testing now one of

00:18:24,920 --> 00:18:31,070
the main reasons why it's great is that

00:18:27,140 --> 00:18:35,150
makes things a lot more testing in

00:18:31,070 --> 00:18:37,790
cradle it make simple tapes in the

00:18:35,150 --> 00:18:40,760
testing that gives you the resulting or

00:18:37,790 --> 00:18:42,350
so for one for you make exceptions or

00:18:40,760 --> 00:18:45,680
you make things that are impossible to

00:18:42,350 --> 00:18:47,600
happen because you know you can't test

00:18:45,680 --> 00:18:49,910
those things that don't come up a lot

00:18:47,600 --> 00:18:53,270
because they do have two regular systems

00:18:49,910 --> 00:18:55,190
into reproducing it but don't need to

00:18:53,270 --> 00:19:00,530
actually make them appear on a member

00:18:55,190 --> 00:19:03,830
to trigger our memories I want to test

00:19:00,530 --> 00:19:05,960
for components in isolation for example

00:19:03,830 --> 00:19:08,300
here this is just as it doesn't tests

00:19:05,960 --> 00:19:10,040
you have your in memory storage and you

00:19:08,300 --> 00:19:12,860
test that it actually works the way you

00:19:10,040 --> 00:19:14,300
think it does so if you were to use this

00:19:12,860 --> 00:19:19,750
again you can know that he actually

00:19:14,300 --> 00:19:22,220
works then you start testing with the

00:19:19,750 --> 00:19:25,100
components built up so you have a blog

00:19:22,220 --> 00:19:27,380
test which we have a storage or any

00:19:25,100 --> 00:19:28,880
memory storage in your integration tests

00:19:27,380 --> 00:19:31,010
you have one to actually speak to a

00:19:28,880 --> 00:19:32,660
database and then make sure maybe you

00:19:31,010 --> 00:19:36,080
have correctives at every single level

00:19:32,660 --> 00:19:38,600
that each part is tested each part works

00:19:36,080 --> 00:19:42,770
on its own and then when they get

00:19:38,600 --> 00:19:44,480
together they all work in positive now

00:19:42,770 --> 00:19:49,100
I've mainly been talking about object

00:19:44,480 --> 00:19:51,800
columns that's what I'm doing with the

00:19:49,100 --> 00:19:53,600
interfaces here but you can just ask

00:19:51,800 --> 00:19:57,170
function because foundations are just as

00:19:53,600 --> 00:20:00,460
good it's called function composition ii

00:19:57,170 --> 00:20:04,970
in contrast your object competition and

00:20:00,460 --> 00:20:07,030
it's essentially wish that's what this

00:20:04,970 --> 00:20:10,550
bill just passed functions because

00:20:07,030 --> 00:20:14,690
there's no real objects

00:20:10,550 --> 00:20:17,880
one example is sorted if you pass a

00:20:14,690 --> 00:20:19,830
function to king and you have a little

00:20:17,880 --> 00:20:22,760
function there that only does one thing

00:20:19,830 --> 00:20:26,220
it only comes out a key that you want

00:20:22,760 --> 00:20:31,500
and that's really great example filter

00:20:26,220 --> 00:20:34,890
also does a sympathy now the examples

00:20:31,500 --> 00:20:37,800
forward now I am pretty much code today

00:20:34,890 --> 00:20:40,170
because there's a lot of when you get

00:20:37,800 --> 00:20:42,420
into the proper composition you do

00:20:40,170 --> 00:20:45,650
really need a bit of complex software to

00:20:42,420 --> 00:20:48,540
really show its benefits for an example

00:20:45,650 --> 00:20:51,270
crypto cryptography it's the new

00:20:48,540 --> 00:20:53,100
cryptography they has talked on torrent

00:20:51,270 --> 00:20:55,530
I think afternoon so I'm just kidding

00:20:53,100 --> 00:20:57,390
about cooking with cryptography i highly

00:20:55,530 --> 00:21:00,540
recommend you go see that it replaces

00:20:57,390 --> 00:21:03,590
pie crypto I am to crypto all those

00:21:00,540 --> 00:21:07,080
works on my mind is implemented using

00:21:03,590 --> 00:21:09,390
CNN I'm which is sort of like the fancy

00:21:07,080 --> 00:21:11,700
extensions but we worked at apartheid

00:21:09,390 --> 00:21:13,470
and it's rarely read great because the

00:21:11,700 --> 00:21:16,320
initial composition to make fun of

00:21:13,470 --> 00:21:19,650
backhands because not everyone wants to

00:21:16,320 --> 00:21:21,840
use openssl because of rally insecure so

00:21:19,650 --> 00:21:24,660
instead they have backends and now these

00:21:21,840 --> 00:21:27,030
backends satisfy an interface so you

00:21:24,660 --> 00:21:28,220
have a passionate place you give it a

00:21:27,030 --> 00:21:30,919
string and

00:21:28,220 --> 00:21:32,720
you have doesn't matter what actually

00:21:30,919 --> 00:21:38,270
does that as long as impressions that

00:21:32,720 --> 00:21:39,890
result so on OS 10 for example it binds

00:21:38,270 --> 00:21:43,070
to Colin printer which is Apple's

00:21:39,890 --> 00:21:47,360
cryptography very normal platforms if I

00:21:43,070 --> 00:21:50,780
binds to openssl and future in future it

00:21:47,360 --> 00:21:54,830
will bind to a Liebherr ssl on openness

00:21:50,780 --> 00:21:57,919
t plus all the other frameworks like the

00:21:54,830 --> 00:22:00,890
way that my club ships in windows

00:21:57,919 --> 00:22:03,169
because you know then it doesn't matter

00:22:00,890 --> 00:22:06,020
what you're using you can avoid openssl

00:22:03,169 --> 00:22:09,740
few walls and this and Composition gives

00:22:06,020 --> 00:22:11,539
you the power I'm so spit it out the

00:22:09,740 --> 00:22:14,330
Python standard library has a lot of

00:22:11,539 --> 00:22:16,070
instances of this for example salts and

00:22:14,330 --> 00:22:18,200
fill the little things like that things

00:22:16,070 --> 00:22:22,780
where you don't need to have that much

00:22:18,200 --> 00:22:25,490
complexity to figure out the benefits so

00:22:22,780 --> 00:22:27,500
there's hope you should definitely look

00:22:25,490 --> 00:22:29,330
at all this function than seeing their

00:22:27,500 --> 00:22:32,870
sort of corrupting their a stencil it's

00:22:29,330 --> 00:22:35,510
a good idea and it's just there and one

00:22:32,870 --> 00:22:40,039
really notices and what it how powerful

00:22:35,510 --> 00:22:42,770
it is that you just passed the new parts

00:22:40,039 --> 00:22:45,380
of twisted use composition great because

00:22:42,770 --> 00:22:48,770
we have a lot of networking things we

00:22:45,380 --> 00:22:50,960
have things like ggp test student

00:22:48,770 --> 00:22:53,630
interests things that think that they're

00:22:50,960 --> 00:22:55,309
going over a real network now you can't

00:22:53,630 --> 00:22:57,530
always get a ring them come on our

00:22:55,309 --> 00:22:58,150
robots are in places where they might

00:22:57,530 --> 00:23:00,610
not

00:22:58,150 --> 00:23:03,220
and then worked out our IP before so how

00:23:00,610 --> 00:23:05,080
can we run the RTV more tests well we

00:23:03,220 --> 00:23:07,300
use composition so that you things is

00:23:05,080 --> 00:23:10,000
talking to a reactor that will actually

00:23:07,300 --> 00:23:12,670
connected I'm keeping pork neck but we

00:23:10,000 --> 00:23:14,830
just make that way it returns a reactor

00:23:12,670 --> 00:23:17,170
which just runs in memory that isn't

00:23:14,830 --> 00:23:19,480
actually about to anything there is just

00:23:17,170 --> 00:23:22,090
a good enough approximation for what the

00:23:19,480 --> 00:23:24,550
tests need to run and that means that

00:23:22,090 --> 00:23:27,370
those think those little sections run

00:23:24,550 --> 00:23:30,220
incredibly fast the whole twisted test

00:23:27,370 --> 00:23:33,040
screen which is over 3,000 tests can run

00:23:30,220 --> 00:23:35,440
in a minute and if you turn on parallel

00:23:33,040 --> 00:23:37,450
drums that's even faster now that sort

00:23:35,440 --> 00:23:39,580
of thing is amazing for a software

00:23:37,450 --> 00:23:41,710
project there's ten years old and has

00:23:39,580 --> 00:23:45,840
such a large scope there are so many

00:23:41,710 --> 00:23:49,230
protocols so many tools we've got a

00:23:45,840 --> 00:23:52,300
templating framework put tcp UDP

00:23:49,230 --> 00:23:54,850
everything and yet we can test the whole

00:23:52,300 --> 00:23:56,980
thing in 60 seconds I've worked on the

00:23:54,850 --> 00:23:58,930
project where it was six months old and

00:23:56,980 --> 00:24:00,940
took nine minutes to run the tests

00:23:58,930 --> 00:24:03,880
because of the external by our

00:24:00,940 --> 00:24:05,770
dependency as soon as I replace this

00:24:03,880 --> 00:24:08,800
women in memory going your way down to

00:24:05,770 --> 00:24:10,690
20 seconds so that sort of thing is the

00:24:08,800 --> 00:24:12,850
benefit you can see if you just do

00:24:10,690 --> 00:24:15,580
things like that now it doesn't have to

00:24:12,850 --> 00:24:18,070
go everywhere now things that go

00:24:15,580 --> 00:24:20,800
everywhere is like this that's the only

00:24:18,070 --> 00:24:24,130
young thinking that's one of the things

00:24:20,800 --> 00:24:26,440
that you know the Haskell at least one

00:24:24,130 --> 00:24:30,190
of your people go on about is this sort

00:24:26,440 --> 00:24:32,380
of style of writing software now they

00:24:30,190 --> 00:24:35,860
may not be correct on a lot of things

00:24:32,380 --> 00:24:36,230
pain for instance you know python is

00:24:35,860 --> 00:24:39,770
just

00:24:36,230 --> 00:24:42,740
I mean I don't care about you know how

00:24:39,770 --> 00:24:44,630
good the JDM is because ladies want to

00:24:42,740 --> 00:24:46,580
do in five years even like it is good

00:24:44,630 --> 00:24:48,950
but we can take things from these

00:24:46,580 --> 00:24:51,320
languages that makes them better and put

00:24:48,950 --> 00:24:53,690
them in Python now it works better if

00:24:51,320 --> 00:24:55,970
you have first-class functions which in

00:24:53,690 --> 00:24:59,630
Python we don't really have but it's

00:24:55,970 --> 00:25:03,410
good enough now I recommend you try it

00:24:59,630 --> 00:25:06,740
out I will be there's there's a great

00:25:03,410 --> 00:25:10,280
talk called the end of inheritance new

00:25:06,740 --> 00:25:12,710
modularity something like that that's a

00:25:10,280 --> 00:25:14,600
pike on us in 2013 they do a more

00:25:12,710 --> 00:25:17,210
in-depth more computer science you look

00:25:14,600 --> 00:25:21,049
at it and it's one of the offers of

00:25:17,210 --> 00:25:22,820
pilant and number offer of mercurial so

00:25:21,049 --> 00:25:25,580
they've been talking about their real

00:25:22,820 --> 00:25:28,100
Maddox real-world experience and a more

00:25:25,580 --> 00:25:29,600
lower level thing but I only do

00:25:28,100 --> 00:25:32,510
recommend us that you look into this

00:25:29,600 --> 00:25:34,970
simply because tests are good and having

00:25:32,510 --> 00:25:36,590
fast test is better fast test means that

00:25:34,970 --> 00:25:38,330
people will run them more often it

00:25:36,590 --> 00:25:40,429
becomes less of a chore you don't run

00:25:38,330 --> 00:25:42,799
you don't run on your bill BOTS as much

00:25:40,429 --> 00:25:46,630
and you don't and you do less I oh so

00:25:42,799 --> 00:25:50,390
it's less fragile so give it a shot and

00:25:46,630 --> 00:25:51,860
questions right those have you've got

00:25:50,390 --> 00:25:53,480
any questions if you'd like to come up

00:25:51,860 --> 00:25:55,730
to microphone here and just deliver it

00:25:53,480 --> 00:25:57,919
remember it is a question and not an

00:25:55,730 --> 00:26:02,660
opinion at this stage I think they can

00:25:57,919 --> 00:26:05,919
probably give some opinions it's no

00:26:02,660 --> 00:26:05,919
Russell to give the first question

00:26:08,100 --> 00:26:13,930
yeah your question and you've given some

00:26:11,890 --> 00:26:16,390
examples where we can see composed code

00:26:13,930 --> 00:26:18,160
and twisted is there somewhere we can

00:26:16,390 --> 00:26:19,720
search for to get started on this are

00:26:18,160 --> 00:26:21,970
there kind of google words that we

00:26:19,720 --> 00:26:23,920
should look for for composition to help

00:26:21,970 --> 00:26:25,720
us get a really introductory start

00:26:23,920 --> 00:26:30,190
looking at code so we can adapt to Denny

00:26:25,720 --> 00:26:34,480
our code um as far as a guide to it it's

00:26:30,190 --> 00:26:37,150
all sort of how to do it there's no real

00:26:34,480 --> 00:26:38,920
hyphen thing it's relatively new I mean

00:26:37,150 --> 00:26:40,990
one of the things Russell's going on the

00:26:38,920 --> 00:26:43,750
sole it's you know it had a bit of a bit

00:26:40,990 --> 00:26:45,429
of a it's been coming up more in the

00:26:43,750 --> 00:26:47,590
past year and a half so there isn't a

00:26:45,429 --> 00:26:49,420
lot of the history behind it there is a

00:26:47,590 --> 00:26:52,270
lot of history in other languages

00:26:49,420 --> 00:26:53,950
especially which would map pretty well

00:26:52,270 --> 00:26:56,470
things like functional languages

00:26:53,950 --> 00:26:58,179
basically have this so if you look at

00:26:56,470 --> 00:27:00,280
basically how many functional language

00:26:58,179 --> 00:27:02,370
works and try doing then in Python

00:27:00,280 --> 00:27:06,550
you'll have a pretty good approximation

00:27:02,370 --> 00:27:09,760
um i would recommend just the easiest

00:27:06,550 --> 00:27:12,190
way is just get a thing that you

00:27:09,760 --> 00:27:15,010
subclass and try and break that into two

00:27:12,190 --> 00:27:16,720
objects one that wraps it and implements

00:27:15,010 --> 00:27:18,670
your special functionality and the

00:27:16,720 --> 00:27:25,300
original class and then see how you go

00:27:18,670 --> 00:27:27,220
with that okay thanks hi so thanks for

00:27:25,300 --> 00:27:28,990
your talk and thanks in particular for

00:27:27,220 --> 00:27:30,550
the concrete example of the blog it's

00:27:28,990 --> 00:27:33,610
sort of a classic one and I think it

00:27:30,550 --> 00:27:36,070
really added a lot i was wondering for a

00:27:33,610 --> 00:27:37,630
point of comparison if you had much of a

00:27:36,070 --> 00:27:39,720
sense of what what would that example

00:27:37,630 --> 00:27:42,880
look like if it were done really badly

00:27:39,720 --> 00:27:45,520
like in a inheritance based view or

00:27:42,880 --> 00:27:51,270
something like that just to it depends

00:27:45,520 --> 00:27:53,559
on it depends a lot on what um what

00:27:51,270 --> 00:27:56,380
framework you're using for example a

00:27:53,559 --> 00:28:00,809
really bad let's let's okay let's pull

00:27:56,380 --> 00:28:09,090
up emacs everyone loves Emacs yeah

00:28:00,809 --> 00:28:12,480
max oh it's tiny okay let's fill up text

00:28:09,090 --> 00:28:14,879
at it because that's where real men do

00:28:12,480 --> 00:28:22,490
their programming unfortunately I'm not

00:28:14,879 --> 00:28:27,389
a real man sir okay so well oh great

00:28:22,490 --> 00:28:32,940
okay so i won't be writing like this

00:28:27,389 --> 00:28:34,950
okay so with with a thing like that so

00:28:32,940 --> 00:28:42,629
if we're using Django so we've got a

00:28:34,950 --> 00:28:44,580
view so you go class my blog view so

00:28:42,629 --> 00:28:47,360
you've got that so that would be the

00:28:44,580 --> 00:28:52,619
instance where we had the flask like

00:28:47,360 --> 00:28:55,080
make that down a bit more it's really

00:28:52,619 --> 00:28:57,840
hard sir I didn't mean to put you on the

00:28:55,080 --> 00:28:59,850
spot for a buddy I I actually wanted to

00:28:57,840 --> 00:29:04,759
show this I actually have a railing

00:28:59,850 --> 00:29:07,440
actually I know I hope come on Mouse I

00:29:04,759 --> 00:29:12,769
actually have an example that I was

00:29:07,440 --> 00:29:12,769
using that was a twitter account Twitter

00:29:15,289 --> 00:29:21,240
which I think demonstrates rival well

00:29:18,720 --> 00:29:25,700
however I didn't get to put that in the

00:29:21,240 --> 00:29:25,700
talk come on

00:29:27,020 --> 00:29:35,370
yeah there we go okay so if i zoom in so

00:29:32,580 --> 00:29:42,170
you can definitely real so down here we

00:29:35,370 --> 00:29:48,420
have this is the worker implementation

00:29:42,170 --> 00:29:50,490
okay so here you have a twitter twitter

00:29:48,420 --> 00:29:53,940
worker interface so both have this

00:29:50,490 --> 00:29:58,170
interface so the composition one works

00:29:53,940 --> 00:30:02,310
like this yeah requests you do you get

00:29:58,170 --> 00:30:05,460
your tweets now the composition based

00:30:02,310 --> 00:30:11,220
Twitter application takes that object

00:30:05,460 --> 00:30:14,640
and incalls functions on it the that's

00:30:11,220 --> 00:30:18,060
the tests I didn't actually write their

00:30:14,640 --> 00:30:19,770
one okay so the the inheritance one

00:30:18,060 --> 00:30:22,250
would actually descend from that and

00:30:19,770 --> 00:30:25,050
then would call the objects on itself

00:30:22,250 --> 00:30:28,970
rather than taking the Twitter client as

00:30:25,050 --> 00:30:31,920
a thing as a thing that's passed in so

00:30:28,970 --> 00:30:34,260
that is generally the worst bit I would

00:30:31,920 --> 00:30:36,360
say like that's right then it starts

00:30:34,260 --> 00:30:37,830
getting really bad because then you have

00:30:36,360 --> 00:30:40,230
to monkey patch out the bits that

00:30:37,830 --> 00:30:43,320
actually talk to Twitter you can't just

00:30:40,230 --> 00:30:45,780
take away all sorts of connections you

00:30:43,320 --> 00:30:47,730
have to actually connect Twitter which

00:30:45,780 --> 00:30:51,720
gets really bad when you have api's and

00:30:47,730 --> 00:30:54,470
stuff like that so this so already you

00:30:51,720 --> 00:30:56,490
can't really test the logic of your

00:30:54,470 --> 00:30:58,740
application you can't test the bits that

00:30:56,490 --> 00:31:00,840
you've written because it relies on

00:30:58,740 --> 00:31:03,150
stuff that other people is written that

00:31:00,840 --> 00:31:04,530
depends on external services so I think

00:31:03,150 --> 00:31:06,330
right then whenever you're talking to

00:31:04,530 --> 00:31:08,880
the outside world and you need to do

00:31:06,330 --> 00:31:10,800
that it's already a disaster because it

00:31:08,880 --> 00:31:12,600
takes so much work to actually get it so

00:31:10,800 --> 00:31:16,230
that you can run it without that service

00:31:12,600 --> 00:31:18,060
so that's what I'd give it just gets bad

00:31:16,230 --> 00:31:20,280
straight away just from the testability

00:31:18,060 --> 00:31:25,850
of course if you don't care about tests

00:31:20,280 --> 00:31:29,790
then sure it works whatever um Yolo so

00:31:25,850 --> 00:31:32,660
this thanks face thank you very much

00:31:29,790 --> 00:31:32,660
indeed amber

00:31:35,960 --> 00:31:40,550
each each year the committee goes to

00:31:38,720 --> 00:31:43,310
great lengths to award two speakers at

00:31:40,550 --> 00:31:45,680
the pike on this year a few of them went

00:31:43,310 --> 00:31:50,980
out into China and Beijing they found a

00:31:45,680 --> 00:31:54,110
little marketplace selling Ming Dynasty

00:31:50,980 --> 00:31:58,250
ceramics and we all know that Amber

00:31:54,110 --> 00:32:00,320
drinks Earl Grey tea only and this

00:31:58,250 --> 00:32:05,020
priceless artifact there thank you very

00:32:00,320 --> 00:32:05,020
much and oh that looks waffles

00:32:05,170 --> 00:32:14,300
thank you thank you everyone if you have

00:32:12,800 --> 00:32:16,220
comments you want to say at me or

00:32:14,300 --> 00:32:18,290
questions I will be around all the

00:32:16,220 --> 00:32:19,910
conference plus Monday Tuesday so happy

00:32:18,290 --> 00:32:21,680
to talk about it happy to meet you

00:32:19,910 --> 00:32:23,060
you're a wonderful thank you for not

00:32:21,680 --> 00:32:24,620
going to Russell's talk because I

00:32:23,060 --> 00:32:28,130
thought that I would have like three

00:32:24,620 --> 00:32:30,490
people here because it's Russell so yes

00:32:28,130 --> 00:32:30,490
thank you

00:32:36,050 --> 00:32:38,110

YouTube URL: https://www.youtube.com/watch?v=kUIjaHPvaTo


