Title: Transitioning from PHP to Django on the sly
Publication date: 2013-07-11
Playlist: Pycon Australia 2013
Description: 
	Ben Sturmfels
http://2013.pycon-au.org/schedule/30070/view_talk
You know that Python and Django is the way forward for your client, but with a mountain of legacy PHP code, where do you start?

Ben spent the last 3 years working with a thriving charity organisation to migrate their large PHP system to Django. He'd like to share some survival strategies.

This talk covers:

 - explaining the transition to your client
 - first steps and initial experiments
 - running PHP and Django in paral
Captions: 
	00:00:05,180 --> 00:00:09,929
hello and welcome our next presenter

00:00:08,370 --> 00:00:12,509
been stem cells as a software developer

00:00:09,929 --> 00:00:14,820
and activist from Ballarat in Victoria

00:00:12,509 --> 00:00:16,379
he organizes free software Melbourne and

00:00:14,820 --> 00:00:18,720
leaves the end software patents

00:00:16,379 --> 00:00:20,210
Australia campaign today he's going to

00:00:18,720 --> 00:00:22,859
teach us about his experiences

00:00:20,210 --> 00:00:31,199
transitioning from PHP to django on the

00:00:22,859 --> 00:00:34,079
sly please make him feel welcome hello

00:00:31,199 --> 00:00:35,520
everyone it's a privilege to be here I'm

00:00:34,079 --> 00:00:37,440
really grateful for the conference

00:00:35,520 --> 00:00:39,690
organizers for running such an awesome

00:00:37,440 --> 00:00:41,160
conference and it's it's a lovely

00:00:39,690 --> 00:00:44,670
community to everyone's very easy going

00:00:41,160 --> 00:00:46,620
in the Python world which is nice on

00:00:44,670 --> 00:00:50,100
that note how do you how do you know if

00:00:46,620 --> 00:00:54,360
someone's a ruby developer or not they

00:00:50,100 --> 00:01:00,510
tell you in a few minutes second time we

00:00:54,360 --> 00:01:03,930
can so this talk is um I'd like to

00:01:00,510 --> 00:01:05,700
encourage you to move you know you have

00:01:03,930 --> 00:01:06,890
the ability to move from PHP to python

00:01:05,700 --> 00:01:10,140
I'd like to tell you a little bit about

00:01:06,890 --> 00:01:12,570
how that how you can do that like that's

00:01:10,140 --> 00:01:13,860
it's not a big deal it just takes a

00:01:12,570 --> 00:01:19,619
while and there are some steps you can

00:01:13,860 --> 00:01:21,900
do to progressively do it so a lot of

00:01:19,619 --> 00:01:24,720
our time is spent dealing with existing

00:01:21,900 --> 00:01:27,390
software it's it's a fact of working in

00:01:24,720 --> 00:01:28,829
software is that not everything is you

00:01:27,390 --> 00:01:30,479
know this greenfield development you get

00:01:28,829 --> 00:01:32,579
to you know you do you do your django

00:01:30,479 --> 00:01:35,970
tutorial and you're like right I've

00:01:32,579 --> 00:01:37,729
written a blog now we use that for you

00:01:35,970 --> 00:01:41,310
know now make my next big application

00:01:37,729 --> 00:01:42,990
the the fact of the matter is that often

00:01:41,310 --> 00:01:45,590
you're working with something that's

00:01:42,990 --> 00:01:50,689
existed or existed for a long time even

00:01:45,590 --> 00:01:52,950
so really if you want to work in Django

00:01:50,689 --> 00:01:54,899
often you just you're going to have to

00:01:52,950 --> 00:01:57,119
deal with some existing software in

00:01:54,899 --> 00:01:59,280
another language could be PHP or could

00:01:57,119 --> 00:02:00,750
be something else and there's a few ways

00:01:59,280 --> 00:02:07,530
you can go about it

00:02:00,750 --> 00:02:09,390
so starting from scratch is the most

00:02:07,530 --> 00:02:11,790
attractive way you know we'd like to be

00:02:09,390 --> 00:02:16,230
we love having a clean slate to work on

00:02:11,790 --> 00:02:19,740
and it's it's just a really appealing

00:02:16,230 --> 00:02:21,980
thing oh there's something about it but

00:02:19,740 --> 00:02:24,090
the problem with this approach is that

00:02:21,980 --> 00:02:26,250
it's a good way to put yourself out of

00:02:24,090 --> 00:02:29,370
business and lose your client in the

00:02:26,250 --> 00:02:32,730
process even if you do manage to provide

00:02:29,370 --> 00:02:35,520
the software in the end you know it may

00:02:32,730 --> 00:02:36,959
not be what what was actually wanted or

00:02:35,520 --> 00:02:38,370
may be completely irrelevant in the

00:02:36,959 --> 00:02:40,760
market by the time it's you've got it up

00:02:38,370 --> 00:02:43,800
and working there's been lots of people

00:02:40,760 --> 00:02:46,310
writing and talking about this approach

00:02:43,800 --> 00:02:48,930
over you so this isn't a new thing

00:02:46,310 --> 00:02:54,150
starting software from scratch is a bad

00:02:48,930 --> 00:02:56,010
idea the big problem here is that it's

00:02:54,150 --> 00:02:58,410
great we can start it and you start

00:02:56,010 --> 00:03:00,150
writing and you get to the point where

00:02:58,410 --> 00:03:03,260
now you need to hook it into the

00:03:00,150 --> 00:03:05,610
existing client systems you know yeah

00:03:03,260 --> 00:03:07,580
you've got a registration system and you

00:03:05,610 --> 00:03:09,570
need to replace it with your new one and

00:03:07,580 --> 00:03:12,299
the best analogy I could come up with

00:03:09,570 --> 00:03:14,280
was the bridge where you've done all

00:03:12,299 --> 00:03:16,860
this work but you don't actually know

00:03:14,280 --> 00:03:19,830
how to put that piece in the middle you

00:03:16,860 --> 00:03:22,650
end up kind of stuck so the approach I'm

00:03:19,830 --> 00:03:26,750
encouraging you to use is an incremental

00:03:22,650 --> 00:03:31,440
approach the analogy I wanted to use was

00:03:26,750 --> 00:03:32,880
that you can it's kind of like replacing

00:03:31,440 --> 00:03:35,700
the train tracks while the trains are

00:03:32,880 --> 00:03:38,220
still running which probably doesn't you

00:03:35,700 --> 00:03:40,049
know lend well to the way train tracks

00:03:38,220 --> 00:03:42,720
are replaced in say Melbourne for exist

00:03:40,049 --> 00:03:44,720
for example they do tend to cause

00:03:42,720 --> 00:03:47,489
interruption but this approach is like

00:03:44,720 --> 00:03:53,250
replacing the rails without stopping the

00:03:47,489 --> 00:03:55,260
trains so the idea is that it's

00:03:53,250 --> 00:03:58,110
progressive rather than a big bang

00:03:55,260 --> 00:04:00,209
approach and the idea is that you

00:03:58,110 --> 00:04:02,280
maintain compatibility at all the time

00:04:00,209 --> 00:04:04,769
and you spread the changes in little

00:04:02,280 --> 00:04:06,989
pieces out over over time and what this

00:04:04,769 --> 00:04:10,020
does is it dramatically reduces your

00:04:06,989 --> 00:04:12,080
risk the system's always running it's

00:04:10,020 --> 00:04:14,300
always you know you're always

00:04:12,080 --> 00:04:18,080
taking payments or registrations or what

00:04:14,300 --> 00:04:19,850
have you do in your business and at any

00:04:18,080 --> 00:04:22,400
point you don't have this big amount of

00:04:19,850 --> 00:04:24,080
risk sitting there you know you haven't

00:04:22,400 --> 00:04:25,610
run away and started building something

00:04:24,080 --> 00:04:27,260
and then you don't know whether it's

00:04:25,610 --> 00:04:33,890
going to work or not your systems always

00:04:27,260 --> 00:04:37,120
working so this this isn't the most easy

00:04:33,890 --> 00:04:42,560
approach so to have to say like it's it

00:04:37,120 --> 00:04:46,640
it works well but it's it's a long

00:04:42,560 --> 00:04:47,900
journey and a bit about what I want to

00:04:46,640 --> 00:04:50,590
tell you about in this talk was a bit

00:04:47,900 --> 00:04:55,820
about how you can how to navigate it

00:04:50,590 --> 00:04:58,390
that's my train again so I am this talk

00:04:55,820 --> 00:05:00,710
at me three years ago because i was

00:04:58,390 --> 00:05:03,320
starting on this path of wanting to move

00:05:00,710 --> 00:05:07,460
an existing client to django so we had

00:05:03,320 --> 00:05:11,020
an existing client with an established

00:05:07,460 --> 00:05:13,790
so it was a Victorian charity they have

00:05:11,020 --> 00:05:16,580
well-established and rapidly growing and

00:05:13,790 --> 00:05:18,110
we we had a long and healthy

00:05:16,580 --> 00:05:21,470
relationship with them which was great

00:05:18,110 --> 00:05:24,860
they trusted us as a as a technology

00:05:21,470 --> 00:05:27,350
provider and they also understood the

00:05:24,860 --> 00:05:30,190
benefit of investing in good technology

00:05:27,350 --> 00:05:33,230
to save themselves time in the long run

00:05:30,190 --> 00:05:35,270
that's not always common but it was

00:05:33,230 --> 00:05:38,000
really good in this case so what they

00:05:35,270 --> 00:05:41,960
had was a moderately common moderately

00:05:38,000 --> 00:05:44,930
large PHP application that did things on

00:05:41,960 --> 00:05:47,840
the public side and also stuff for their

00:05:44,930 --> 00:05:51,860
internal stuff so systems that and I owe

00:05:47,840 --> 00:05:53,390
take incoming messages from the public

00:05:51,860 --> 00:05:56,180
and they can filter them and send with

00:05:53,390 --> 00:05:58,220
different people registrations mapping

00:05:56,180 --> 00:06:02,419
things all of the stuff that just saved

00:05:58,220 --> 00:06:05,450
them time in their organization the

00:06:02,419 --> 00:06:09,500
reason I'm using I'm contrasting PHP and

00:06:05,450 --> 00:06:11,240
Django which you know it's I'm comparing

00:06:09,500 --> 00:06:12,740
apples and oranges in a way because pH

00:06:11,240 --> 00:06:15,560
is a language and Django is a framework

00:06:12,740 --> 00:06:18,590
that's built on top of Python but the

00:06:15,560 --> 00:06:22,250
reason I'm doing that is because we this

00:06:18,590 --> 00:06:23,849
this code base was started before you

00:06:22,250 --> 00:06:26,069
know systems like

00:06:23,849 --> 00:06:27,869
frameworks of PHP like codeigniter and

00:06:26,069 --> 00:06:31,020
cake and all this stuff that I don't

00:06:27,869 --> 00:06:36,240
really know that much about so it was

00:06:31,020 --> 00:06:38,789
just PHP and I was going to django so we

00:06:36,240 --> 00:06:40,199
built some in-house you know as everyone

00:06:38,789 --> 00:06:42,389
does when they start to build a

00:06:40,199 --> 00:06:43,740
moderately large PHP application is you

00:06:42,389 --> 00:06:47,099
start building your own tools in your

00:06:43,740 --> 00:06:54,629
own you know ORM you type things and all

00:06:47,099 --> 00:06:57,990
sorts of stuff so the the other thing

00:06:54,629 --> 00:07:00,360
about that was that these these tools

00:06:57,990 --> 00:07:01,769
were things that were actually useful to

00:07:00,360 --> 00:07:04,379
the organization we wanted to keep them

00:07:01,769 --> 00:07:06,229
so it wasn't like we could just throw

00:07:04,379 --> 00:07:09,209
them away and start from scratch because

00:07:06,229 --> 00:07:10,319
they had everyday business value we

00:07:09,209 --> 00:07:12,389
couldn't we couldn't take them offline

00:07:10,319 --> 00:07:18,479
because that was a core part of the

00:07:12,389 --> 00:07:21,619
organization's business um so let me

00:07:18,479 --> 00:07:21,619
just scroll down you know

00:07:25,439 --> 00:07:31,960
the problem with PHP which many of you

00:07:29,080 --> 00:07:34,599
probably already know about is that you

00:07:31,960 --> 00:07:35,979
get to a point sort of about eighty

00:07:34,599 --> 00:07:40,479
percent of the way through the problem

00:07:35,979 --> 00:07:43,539
and thanks get hard because you just you

00:07:40,479 --> 00:07:45,580
don't have this some this lovely

00:07:43,539 --> 00:07:48,009
structure around things that say for

00:07:45,580 --> 00:07:52,210
example Django brings the things things

00:07:48,009 --> 00:07:54,520
just tend to evolve so it kind of gets

00:07:52,210 --> 00:07:58,120
to an unsatisfactory kind of point we're

00:07:54,520 --> 00:08:01,960
adding new features isn't something you

00:07:58,120 --> 00:08:03,699
enjoy doing which is a real shame so we

00:08:01,960 --> 00:08:08,409
had this we had this existing project

00:08:03,699 --> 00:08:13,389
and we had some Python experience and we

00:08:08,409 --> 00:08:15,879
I I want to move to django basically we

00:08:13,389 --> 00:08:22,960
we talked about a lot in the team and I

00:08:15,879 --> 00:08:25,569
wanted a pony so what I was really

00:08:22,960 --> 00:08:27,129
looking for in this was our main goal

00:08:25,569 --> 00:08:28,900
was long term success for this client we

00:08:27,129 --> 00:08:31,569
wanted their systems to be maintainable

00:08:28,900 --> 00:08:34,419
well into the future we we didn't want

00:08:31,569 --> 00:08:37,390
to we want to avoid painting ourselves

00:08:34,419 --> 00:08:39,099
into a maintenance corner where we wear

00:08:37,390 --> 00:08:41,890
every day got harder and harder and we

00:08:39,099 --> 00:08:43,360
could build less and less things and to

00:08:41,890 --> 00:08:45,370
that end we want to go to add new things

00:08:43,360 --> 00:08:48,190
faster because new things are really

00:08:45,370 --> 00:08:50,440
useful and that helps organizations

00:08:48,190 --> 00:08:53,170
especially organizations where money is

00:08:50,440 --> 00:08:56,110
very tight like not for profit it really

00:08:53,170 --> 00:08:57,070
helps them stay ahead and the other

00:08:56,110 --> 00:09:01,600
thing I wanted was job satisfaction

00:08:57,070 --> 00:09:02,649
because as I mentioned the more PHP

00:09:01,600 --> 00:09:05,019
you're right the more you have to

00:09:02,649 --> 00:09:06,730
maintain and you just start to not enjoy

00:09:05,019 --> 00:09:08,740
it very much after a while so I was

00:09:06,730 --> 00:09:11,920
feeling a little bit concerned about

00:09:08,740 --> 00:09:13,570
whether I wanted to be you know a web

00:09:11,920 --> 00:09:16,839
developer you know I'd done for a lot of

00:09:13,570 --> 00:09:19,300
years and I've starting to wonder so the

00:09:16,839 --> 00:09:22,649
first thing you need to do is win over

00:09:19,300 --> 00:09:25,779
your team your boss in your client I've

00:09:22,649 --> 00:09:27,250
I've got the notes that I've written

00:09:25,779 --> 00:09:29,769
down I've got a whole lot of dot points

00:09:27,250 --> 00:09:31,630
that that make up this talk and there

00:09:29,769 --> 00:09:33,430
there's a URL to it on that the last

00:09:31,630 --> 00:09:35,699
slide so if you want to copy down my

00:09:33,430 --> 00:09:38,220
reasons for convincing your boss

00:09:35,699 --> 00:09:41,069
to move to django don't write them down

00:09:38,220 --> 00:09:44,759
now because just pull them off the page

00:09:41,069 --> 00:09:48,389
at the end it's on the last slide so why

00:09:44,759 --> 00:09:51,449
python python is i don't have to say

00:09:48,389 --> 00:09:53,939
this but plaything is a maturer popular

00:09:51,449 --> 00:09:55,829
and reliable language it's these are

00:09:53,939 --> 00:09:58,230
these this is what you tell your boss in

00:09:55,829 --> 00:10:01,199
your colleagues license holding steady

00:09:58,230 --> 00:10:03,299
at number eight in the tob popularity

00:10:01,199 --> 00:10:05,369
index of programming languages it's got

00:10:03,299 --> 00:10:09,179
a significant lead over pearl and Ruby

00:10:05,369 --> 00:10:11,069
at number eight number hang on so pearl

00:10:09,179 --> 00:10:13,230
was after try and remember I think pearl

00:10:11,069 --> 00:10:14,939
was number nine just behind python and

00:10:13,230 --> 00:10:17,100
ruby was number eleven or something like

00:10:14,939 --> 00:10:20,129
that it's got a got about a 2 2

00:10:17,100 --> 00:10:24,389
percentage point lead over pearl and a

00:10:20,129 --> 00:10:26,759
bit more over Ruby so it's substantially

00:10:24,389 --> 00:10:31,019
more popular it's easy to learn it's

00:10:26,759 --> 00:10:32,639
widely taught universities teach python

00:10:31,019 --> 00:10:35,939
regularly in their curriculum so there's

00:10:32,639 --> 00:10:38,369
more people coming into Python its core

00:10:35,939 --> 00:10:39,949
it's as a core language it's it's nicer

00:10:38,369 --> 00:10:44,209
and more user friendly than pearl and

00:10:39,949 --> 00:10:44,209
it's got more mature libraries and Ruby

00:10:44,449 --> 00:10:49,049
the one major thing was that had better

00:10:46,949 --> 00:10:50,970
development tools than PHP I just I

00:10:49,049 --> 00:10:53,160
can't tell you how much I love the the

00:10:50,970 --> 00:10:55,589
Python debugger when I get really stuck

00:10:53,160 --> 00:10:56,910
I just drop into the debugger and I can

00:10:55,589 --> 00:10:58,470
see what's going on and not having those

00:10:56,910 --> 00:11:01,129
kind of tools in PHP just leaves you

00:10:58,470 --> 00:11:02,999
feeling helpless and feeling helpless

00:11:01,129 --> 00:11:07,519
leads you to not enjoying your job very

00:11:02,999 --> 00:11:10,470
much pythons also got this culture of

00:11:07,519 --> 00:11:13,499
engineering and quality and modularity

00:11:10,470 --> 00:11:15,809
built into it so these are all great

00:11:13,499 --> 00:11:17,549
reasons to to go with Python it's a

00:11:15,809 --> 00:11:20,989
solid choice there's no one's going to

00:11:17,549 --> 00:11:25,350
criticize you for going with Python and

00:11:20,989 --> 00:11:26,939
why Django well Django is also like but

00:11:25,350 --> 00:11:31,619
it's like Python it's one of the de

00:11:26,939 --> 00:11:33,239
facto standards in terms of tools Django

00:11:31,619 --> 00:11:37,199
is already running sites bigger than

00:11:33,239 --> 00:11:39,419
yours and mine things like Mozilla for

00:11:37,199 --> 00:11:44,009
example which ryan spoke about just a

00:11:39,419 --> 00:11:45,080
moment ago it can do things Django is

00:11:44,009 --> 00:11:47,030
ahead of the

00:11:45,080 --> 00:11:49,910
in terms of what you'll need I we found

00:11:47,030 --> 00:11:53,000
this in our our move to django the

00:11:49,910 --> 00:11:54,980
things we needed as we stepped along the

00:11:53,000 --> 00:11:57,230
process and the site grew and used more

00:11:54,980 --> 00:11:59,000
of Jango's features django was ahead of

00:11:57,230 --> 00:12:00,320
us by about a year in terms of building

00:11:59,000 --> 00:12:03,200
these features interval into the

00:12:00,320 --> 00:12:05,030
framework so it's already well ahead of

00:12:03,200 --> 00:12:07,610
what what you probably need for a

00:12:05,030 --> 00:12:09,650
conversion at the moment it's built by

00:12:07,610 --> 00:12:11,170
extremely smart people working around

00:12:09,650 --> 00:12:14,330
security issues and things like that

00:12:11,170 --> 00:12:17,480
because to be honest who has time to get

00:12:14,330 --> 00:12:19,190
across all the types of what type of

00:12:17,480 --> 00:12:21,470
cryptographic hashing you should use for

00:12:19,190 --> 00:12:22,730
your passwords like that's that's never

00:12:21,470 --> 00:12:27,280
going to be a priority when you're

00:12:22,730 --> 00:12:27,280
building things for a running business

00:12:28,090 --> 00:12:34,750
it has Django is extremely mature and

00:12:33,050 --> 00:12:38,480
it's and responsible in its approach to

00:12:34,750 --> 00:12:40,490
backwards compatibility so there's no

00:12:38,480 --> 00:12:41,510
this is one of the fears when when

00:12:40,490 --> 00:12:45,230
you're taking a technology to an

00:12:41,510 --> 00:12:47,180
organization is someone going to be able

00:12:45,230 --> 00:12:48,950
to support this in the future and Django

00:12:47,180 --> 00:12:51,200
yes someone's going to be able to

00:12:48,950 --> 00:12:54,430
support it because it's got such a clear

00:12:51,200 --> 00:12:59,330
pathway to backwards compelled a bit

00:12:54,430 --> 00:13:01,580
compatibility and deprecation more so

00:12:59,330 --> 00:13:04,790
for example than PHP and the PHP

00:13:01,580 --> 00:13:06,800
frameworks and ruby on rails for example

00:13:04,790 --> 00:13:12,050
which has on occasions is completely

00:13:06,800 --> 00:13:14,210
broken the framework it also is as you

00:13:12,050 --> 00:13:15,680
can see from the Django con that we had

00:13:14,210 --> 00:13:17,810
it's experiencing a lot of growth at the

00:13:15,680 --> 00:13:20,150
moment too so it's really it's an

00:13:17,810 --> 00:13:23,630
excellent choice so really python django

00:13:20,150 --> 00:13:25,940
everyone wins your team gets proven

00:13:23,630 --> 00:13:27,830
tools less boring bits you know you'd

00:13:25,940 --> 00:13:29,260
have to do the form validation their

00:13:27,830 --> 00:13:31,820
runs happier you get a more cohesive

00:13:29,260 --> 00:13:33,830
programming team which which is really

00:13:31,820 --> 00:13:37,640
what i wanted and the client gets more

00:13:33,830 --> 00:13:38,960
features less bugs for security you use

00:13:37,640 --> 00:13:40,220
the word security when you when you're

00:13:38,960 --> 00:13:42,590
trying to convince your client it's a I

00:13:40,220 --> 00:13:44,660
know it's cheating a little bit but it's

00:13:42,590 --> 00:13:46,040
a it's a loaded word that that helps a

00:13:44,660 --> 00:13:47,390
lot with this sort of stuff and it's

00:13:46,040 --> 00:13:51,290
true in this case so I don't think it's

00:13:47,390 --> 00:13:52,820
a some unreasonable thing to do they get

00:13:51,290 --> 00:13:54,290
you can tell them they get a faster

00:13:52,820 --> 00:13:56,120
development cycle because they do you've

00:13:54,290 --> 00:13:57,209
got better tools you can you can punch

00:13:56,120 --> 00:14:03,449
things out faster

00:13:57,209 --> 00:14:06,449
and they get long-term support but there

00:14:03,449 --> 00:14:09,300
is a fair bit of path between your PHP

00:14:06,449 --> 00:14:10,559
code base and getting units Django so be

00:14:09,300 --> 00:14:12,480
aware that it's a long-term investment

00:14:10,559 --> 00:14:14,040
but don't try and hide the fact that

00:14:12,480 --> 00:14:15,089
they're going to have to spend quite a

00:14:14,040 --> 00:14:17,220
lot of money on this and you're gonna

00:14:15,089 --> 00:14:21,569
have to spend a lot of time on it to get

00:14:17,220 --> 00:14:26,040
there so the kind of the motivation

00:14:21,569 --> 00:14:31,410
behind this on this live strategy is

00:14:26,040 --> 00:14:34,709
that sudden change is really harmful to

00:14:31,410 --> 00:14:37,920
businesses and organizations we like

00:14:34,709 --> 00:14:39,779
lots of new cool things but n everyone

00:14:37,920 --> 00:14:43,259
does but when it comes down to actually

00:14:39,779 --> 00:14:44,579
getting stuff done people get really

00:14:43,259 --> 00:14:47,579
really frustrated if they can't do the

00:14:44,579 --> 00:14:49,589
things they could do yesterday so any

00:14:47,579 --> 00:14:52,499
sudden change that you can you make to a

00:14:49,589 --> 00:14:54,179
system if you unplug one system and plug

00:14:52,499 --> 00:14:55,879
another system in and you don't have the

00:14:54,179 --> 00:14:58,679
same features they had for three months

00:14:55,879 --> 00:15:03,240
that's a you know that's a deal breaker

00:14:58,679 --> 00:15:05,429
you know even if even if your client

00:15:03,240 --> 00:15:08,689
liaison person supports you the rest of

00:15:05,429 --> 00:15:11,639
the organization will probably you know

00:15:08,689 --> 00:15:15,389
you know form an angry mob and come and

00:15:11,639 --> 00:15:17,399
hunt you down so we can't afford to do

00:15:15,389 --> 00:15:19,350
that downtime is lost opportunities for

00:15:17,399 --> 00:15:22,470
them for the public to so we can't do

00:15:19,350 --> 00:15:24,839
that and mature customers will see this

00:15:22,470 --> 00:15:26,220
and be happy to talk about why you want

00:15:24,839 --> 00:15:28,079
to take a transitional approach to this

00:15:26,220 --> 00:15:30,720
keeping step by step and keeping

00:15:28,079 --> 00:15:34,439
everything running so what I'm what I'm

00:15:30,720 --> 00:15:37,110
encouraging you do with this this on the

00:15:34,439 --> 00:15:39,899
slide approach is used behind-the-scenes

00:15:37,110 --> 00:15:42,209
magic to make it all happen it's not

00:15:39,899 --> 00:15:45,860
going to be easy for you but it's it's

00:15:42,209 --> 00:15:48,660
the right way to do it the idea is that

00:15:45,860 --> 00:15:52,170
the staff working at the organization

00:15:48,660 --> 00:15:54,540
and the public shouldn't be aware that

00:15:52,170 --> 00:15:57,179
you're actually doing anything you can

00:15:54,540 --> 00:15:59,850
you can switch from PHP to python and

00:15:57,179 --> 00:16:02,869
django without anyone really knowing

00:15:59,850 --> 00:16:04,959
that it's going on that's the whole idea

00:16:02,869 --> 00:16:08,480
sorry

00:16:04,959 --> 00:16:13,940
how do we do this secret ponies in your

00:16:08,480 --> 00:16:15,680
web server the idea is that is using a

00:16:13,940 --> 00:16:16,880
couple of abstractions that are already

00:16:15,680 --> 00:16:19,220
built into the systems that you're using

00:16:16,880 --> 00:16:21,380
so you've got these really i mean this

00:16:19,220 --> 00:16:24,529
is this is stating the obvious of course

00:16:21,380 --> 00:16:26,180
but i want you to understand this is a

00:16:24,529 --> 00:16:29,990
useful alternative to some of the other

00:16:26,180 --> 00:16:30,980
ways to switch from one piece of

00:16:29,990 --> 00:16:33,200
software to another piece of software

00:16:30,980 --> 00:16:34,490
you can do it step by step so you have

00:16:33,200 --> 00:16:37,010
these really useful abstractions you've

00:16:34,490 --> 00:16:42,230
got your front end web server which

00:16:37,010 --> 00:16:44,390
takes requests HTTP requests it doesn't

00:16:42,230 --> 00:16:46,970
matter what those are and what happens

00:16:44,390 --> 00:16:49,519
behind the scenes the public don't don't

00:16:46,970 --> 00:16:51,769
get to see that bit so you can take two

00:16:49,519 --> 00:16:54,709
different URLs contact and about us and

00:16:51,769 --> 00:16:58,640
you can pass them either to the PHP

00:16:54,709 --> 00:17:01,190
elephant or the Django pony and one of

00:16:58,640 --> 00:17:03,019
those will handle them no one knows if

00:17:01,190 --> 00:17:05,630
it's that one today or this other one

00:17:03,019 --> 00:17:06,799
tomorrow it'll it'll all just work as

00:17:05,630 --> 00:17:09,439
long as the software works on the hood

00:17:06,799 --> 00:17:12,559
the other useful abstraction is the

00:17:09,439 --> 00:17:14,990
database because databases have this

00:17:12,559 --> 00:17:17,030
property that they can have multiple

00:17:14,990 --> 00:17:20,209
processes accessing at the same time

00:17:17,030 --> 00:17:22,010
safely you can have your django pony

00:17:20,209 --> 00:17:23,839
accessing the same database is your PHP

00:17:22,010 --> 00:17:25,939
elephant and all just work you've got

00:17:23,839 --> 00:17:27,380
transactions and locking and all this

00:17:25,939 --> 00:17:32,270
sort of stuff to prevent any problems

00:17:27,380 --> 00:17:37,370
happening there this does kind of assume

00:17:32,270 --> 00:17:39,470
that these your PHP and your django are

00:17:37,370 --> 00:17:41,799
in kind of close proximity I mean we've

00:17:39,470 --> 00:17:43,760
done it with them on the same servers

00:17:41,799 --> 00:17:45,980
but you could also I guess you could do

00:17:43,760 --> 00:17:47,120
it you know different servers as long as

00:17:45,980 --> 00:17:51,830
they're on a local network or something

00:17:47,120 --> 00:17:55,940
like that yeah so the basic idea is that

00:17:51,830 --> 00:17:57,890
you start with all these PHP's these

00:17:55,940 --> 00:18:00,080
your views you know your when you make a

00:17:57,890 --> 00:18:01,660
request you get something back and these

00:18:00,080 --> 00:18:04,820
are the pieces of code that do that and

00:18:01,660 --> 00:18:07,370
all you do is you switch out one at a

00:18:04,820 --> 00:18:10,340
time you rewrite them with identical

00:18:07,370 --> 00:18:13,250
features and for compatibility with the

00:18:10,340 --> 00:18:17,130
existing code and PHP is completely

00:18:13,250 --> 00:18:20,520
unaware that you've switched fun

00:18:17,130 --> 00:18:28,780
the public is completely unaware so

00:18:20,520 --> 00:18:30,460
that's what you do I want to make a

00:18:28,780 --> 00:18:33,640
couple of key points about this too

00:18:30,460 --> 00:18:35,559
because it's really important when I say

00:18:33,640 --> 00:18:39,220
you don't change the functionality when

00:18:35,559 --> 00:18:40,450
you convert it it's it's a really it's

00:18:39,220 --> 00:18:45,640
easy to get sucked down the wrong path

00:18:40,450 --> 00:18:49,059
here so no new features no new features

00:18:45,640 --> 00:18:51,040
when you convert the the PHP view to a

00:18:49,059 --> 00:18:57,270
django view you know PHP doesn't call

00:18:51,040 --> 00:18:59,080
them views but no change to the URLs and

00:18:57,270 --> 00:19:01,480
there's a joke in the Django

00:18:59,080 --> 00:19:02,679
documentation about putting that PHP on

00:19:01,480 --> 00:19:05,050
the end would be a silly thing to do

00:19:02,679 --> 00:19:06,520
because what why would you do that but

00:19:05,050 --> 00:19:08,170
this is actually a valid use case for

00:19:06,520 --> 00:19:11,080
doing that you can you can do this in

00:19:08,170 --> 00:19:13,300
Django URLs you can put dot PHP and then

00:19:11,080 --> 00:19:16,929
all the other PHP systems can still keep

00:19:13,300 --> 00:19:18,550
referencing that URL and meanwhile you

00:19:16,929 --> 00:19:24,940
can use some of your URL reversing tools

00:19:18,550 --> 00:19:26,410
in there it's actually like it seems it

00:19:24,940 --> 00:19:27,700
seems obvious but it's also kind of

00:19:26,410 --> 00:19:30,250
counterintuitive doing like this it's

00:19:27,700 --> 00:19:33,760
very tempting to jump into this let's

00:19:30,250 --> 00:19:36,910
just replace it all thing so the idea is

00:19:33,760 --> 00:19:38,980
you need to minimize the time that you

00:19:36,910 --> 00:19:43,420
have between a piece of working PHP code

00:19:38,980 --> 00:19:46,420
and a piece of working Django code going

00:19:43,420 --> 00:19:49,510
off and spending a month writing a

00:19:46,420 --> 00:19:50,770
django piece is likely to to mean you're

00:19:49,510 --> 00:19:52,030
doing something wrong and that when you

00:19:50,770 --> 00:19:54,790
bring it back it won't plug into the

00:19:52,030 --> 00:19:56,679
system properly what I mean advocating

00:19:54,790 --> 00:19:59,100
here is a very mechanical task what you

00:19:56,679 --> 00:20:02,170
actually doing is converting PHP

00:19:59,100 --> 00:20:04,420
basically in some cases line by line to

00:20:02,170 --> 00:20:09,820
python and publishing it as soon as

00:20:04,420 --> 00:20:11,800
possible for view type code which is I

00:20:09,820 --> 00:20:14,740
don't know depends how much younger you

00:20:11,800 --> 00:20:18,130
know but stuff that takes a request does

00:20:14,740 --> 00:20:22,000
something and spits out a response what

00:20:18,130 --> 00:20:24,040
advocate is doing it based on looking at

00:20:22,000 --> 00:20:25,240
what the what your existing site does

00:20:24,040 --> 00:20:27,100
and just mirroring at basing on

00:20:25,240 --> 00:20:28,210
functionality not not trying to copy

00:20:27,100 --> 00:20:31,900
line by line because jang

00:20:28,210 --> 00:20:34,600
does has too many differences so just if

00:20:31,900 --> 00:20:37,000
if it validates a form then you validate

00:20:34,600 --> 00:20:38,590
a form or maybe because PHP doesn't

00:20:37,000 --> 00:20:39,580
usually validate forms you could

00:20:38,590 --> 00:20:42,220
validate and you've got a new feature

00:20:39,580 --> 00:20:46,740
but i'm not encouraging you to put new

00:20:42,220 --> 00:20:50,020
features in that's I shouldn't for

00:20:46,740 --> 00:20:53,590
things like things that aren't sort of

00:20:50,020 --> 00:20:56,680
view code like a report that spits out a

00:20:53,590 --> 00:20:59,110
CSV far the fastest way to do that is to

00:20:56,680 --> 00:21:00,790
put the code up the PHP code in your

00:20:59,110 --> 00:21:02,560
editor and the Python code in Europe and

00:21:00,790 --> 00:21:04,810
just convert them line by line that

00:21:02,560 --> 00:21:06,790
sounds kind of silly but it's actually a

00:21:04,810 --> 00:21:09,730
very efficient way to write write the

00:21:06,790 --> 00:21:12,100
Python code and you you know a few hours

00:21:09,730 --> 00:21:15,220
you have a piece of working placing code

00:21:12,100 --> 00:21:16,420
and it might not be perfect but it it

00:21:15,220 --> 00:21:19,480
works and that's that's what I'm

00:21:16,420 --> 00:21:22,360
encouraging you to do I of course use

00:21:19,480 --> 00:21:25,410
Python idioms in the code but don't

00:21:22,360 --> 00:21:29,290
rewrite it and don't add new features

00:21:25,410 --> 00:21:31,780
this it's not i'm i'm a bit reluctant to

00:21:29,290 --> 00:21:33,880
get on the agile kind of path for this

00:21:31,780 --> 00:21:37,230
but i guess if you want to label it that

00:21:33,880 --> 00:21:40,450
it's possibly a little bit like that so

00:21:37,230 --> 00:21:44,020
step by step how do we how we roll this

00:21:40,450 --> 00:21:47,740
out firstly you need to get your team

00:21:44,020 --> 00:21:50,050
consensus on django and pythons so take

00:21:47,740 --> 00:21:54,310
out any rails people that are you know

00:21:50,050 --> 00:21:57,100
trying to push that Barrow next you need

00:21:54,310 --> 00:21:59,950
to get approval from your client to do

00:21:57,100 --> 00:22:02,290
this it's that's a subtle point too but

00:21:59,950 --> 00:22:03,940
it's it's really important it helps if

00:22:02,290 --> 00:22:06,280
you've got an a pre-negotiated

00:22:03,940 --> 00:22:09,400
maintenance budget because you can just

00:22:06,280 --> 00:22:11,140
use that progressively and they've got

00:22:09,400 --> 00:22:14,550
money allocated for that already so

00:22:11,140 --> 00:22:14,550
that's great if you can do that

00:22:18,520 --> 00:22:26,450
so you take a PHP script and your

00:22:22,670 --> 00:22:29,210
rewrite it either exactly the same you

00:22:26,450 --> 00:22:30,650
know line by line or for the view you

00:22:29,210 --> 00:22:32,000
convert it so does exactly the same the

00:22:30,650 --> 00:22:35,290
same thing essentially and Prince

00:22:32,000 --> 00:22:37,760
exactly the same thing on the screen and

00:22:35,290 --> 00:22:39,530
then you duplicate well first we're

00:22:37,760 --> 00:22:41,720
doing it where we're Japan getting the

00:22:39,530 --> 00:22:43,760
exact functionality in Django at this

00:22:41,720 --> 00:22:45,350
point you know it might be your first

00:22:43,760 --> 00:22:46,490
time you've you've really done Django in

00:22:45,350 --> 00:22:48,470
a production system so you have to learn

00:22:46,490 --> 00:22:49,970
Django you might even have to start

00:22:48,470 --> 00:22:51,890
fiddling around with how you deploy it

00:22:49,970 --> 00:22:56,330
and stuff like that so how do you put

00:22:51,890 --> 00:22:58,280
this into production you deploy it with

00:22:56,330 --> 00:22:59,600
this exception in your web server now or

00:22:58,280 --> 00:23:00,890
web server configurations are a little

00:22:59,600 --> 00:23:04,880
bit different so I've just put in a bit

00:23:00,890 --> 00:23:06,620
of pseudocode here everything like this

00:23:04,880 --> 00:23:08,630
is your web server config so everything

00:23:06,620 --> 00:23:10,309
by default goes to PHP when someone asks

00:23:08,630 --> 00:23:12,530
your web server for something it goes to

00:23:10,309 --> 00:23:14,000
PHP but you've now added an exception

00:23:12,530 --> 00:23:16,100
for the you've converted which is

00:23:14,000 --> 00:23:18,679
the contact page if it's a contact page

00:23:16,100 --> 00:23:20,710
send it to django this this is pretty

00:23:18,679 --> 00:23:24,650
basic but that's that's what you do and

00:23:20,710 --> 00:23:28,700
then you get to delete some PHP which is

00:23:24,650 --> 00:23:30,200
my favorite part of it so this cycle

00:23:28,700 --> 00:23:33,080
doesn't actually take very long you know

00:23:30,200 --> 00:23:39,200
a few hours and you can actually punch

00:23:33,080 --> 00:23:40,640
out a new piece of Django code it is

00:23:39,200 --> 00:23:42,169
kind of tiring though you sort of you

00:23:40,640 --> 00:23:45,350
get a bit sick of it so you do need to

00:23:42,169 --> 00:23:47,330
have a bit of rest in between and maybe

00:23:45,350 --> 00:23:48,350
you can come back to it in a week or a

00:23:47,330 --> 00:23:51,860
month for something I got into another

00:23:48,350 --> 00:23:58,280
piece so you keep doing this repeatedly

00:23:51,860 --> 00:24:01,580
and eventually PHP becomes the exception

00:23:58,280 --> 00:24:03,950
to the rule so you can then do this nice

00:24:01,580 --> 00:24:06,049
little switch where you can put in where

00:24:03,950 --> 00:24:09,020
Django becomes a default and PHP then

00:24:06,049 --> 00:24:10,730
becomes the exception and you have your

00:24:09,020 --> 00:24:12,650
remaining PHP things hopefully there's

00:24:10,730 --> 00:24:15,559
not very many you can you can list them

00:24:12,650 --> 00:24:19,450
in your config there starts to look a

00:24:15,559 --> 00:24:22,700
bit like this yeah surround the elephant

00:24:19,450 --> 00:24:24,320
the other thing i like doing even more

00:24:22,700 --> 00:24:27,890
than deleting PHP is drawing graphs

00:24:24,320 --> 00:24:30,350
about deleting PHP so this one this blue

00:24:27,890 --> 00:24:31,370
line is our PHP code declining over

00:24:30,350 --> 00:24:34,190
three years

00:24:31,370 --> 00:24:35,330
which is very exciting and the really

00:24:34,190 --> 00:24:38,510
nice thing is we've built lots of new

00:24:35,330 --> 00:24:39,890
things here but it's still less than the

00:24:38,510 --> 00:24:43,730
amount of PHP code we had which is

00:24:39,890 --> 00:24:44,870
really cool and then you win you just

00:24:43,730 --> 00:24:49,750
keep doing this progressively and then

00:24:44,870 --> 00:24:51,980
you win so a few tips start small and

00:24:49,750 --> 00:24:53,660
ideally pick a project that is low

00:24:51,980 --> 00:24:55,130
priority so you can learn about all this

00:24:53,660 --> 00:24:56,120
sort of stuff like deployment and

00:24:55,130 --> 00:25:00,890
getting your development environment

00:24:56,120 --> 00:25:02,360
setup even better if it's something low

00:25:00,890 --> 00:25:03,920
priority that the client wants there's

00:25:02,360 --> 00:25:05,150
usually things like that you know things

00:25:03,920 --> 00:25:08,210
you couldn't possibly have time to build

00:25:05,150 --> 00:25:11,450
but they'd really love ideally don't use

00:25:08,210 --> 00:25:13,250
any Jengo don't keep away from the

00:25:11,450 --> 00:25:15,410
existing authentication so if it's

00:25:13,250 --> 00:25:16,700
ideally pick a public thing that doesn't

00:25:15,410 --> 00:25:21,559
need any authentication around because

00:25:16,700 --> 00:25:23,660
that's a bit of a sore point tip to take

00:25:21,559 --> 00:25:27,320
the authentication away from PHP as soon

00:25:23,660 --> 00:25:29,600
as possible we there has to be a

00:25:27,320 --> 00:25:34,490
transitional time when you work with

00:25:29,600 --> 00:25:36,290
PHP's authentication but soon you can

00:25:34,490 --> 00:25:38,390
get that into Django and get Django

00:25:36,290 --> 00:25:43,700
controlling who's logged in or who's not

00:25:38,390 --> 00:25:45,590
logged in the better this is a small

00:25:43,700 --> 00:25:48,710
point too but I've found this really

00:25:45,590 --> 00:25:52,429
important when you when you convert a

00:25:48,710 --> 00:25:54,410
piece of PHP to django and you release

00:25:52,429 --> 00:25:56,330
it you inevitably break break things

00:25:54,410 --> 00:25:57,770
because you forget all these extra

00:25:56,330 --> 00:26:00,679
features that it has that are kind of

00:25:57,770 --> 00:26:03,309
hidden or you you know you made a

00:26:00,679 --> 00:26:05,720
mistake because people make mistakes

00:26:03,309 --> 00:26:07,100
calling your head and actually speaking

00:26:05,720 --> 00:26:09,440
to the person who this component or

00:26:07,100 --> 00:26:12,380
directly affect I found has had a huge

00:26:09,440 --> 00:26:14,000
benefit to me because instead of people

00:26:12,380 --> 00:26:17,270
feeling frustrated and angry when I

00:26:14,000 --> 00:26:18,830
break something they they know who to

00:26:17,270 --> 00:26:20,750
call and they're quite happy to

00:26:18,830 --> 00:26:22,730
cheerfully call me up and tell me when

00:26:20,750 --> 00:26:24,140
I've broken something you know they own

00:26:22,730 --> 00:26:27,679
this problem now they can they can

00:26:24,140 --> 00:26:28,580
control how it plays out you also get to

00:26:27,679 --> 00:26:30,740
find out about all these other things

00:26:28,580 --> 00:26:31,790
which they've never told you cuz you

00:26:30,740 --> 00:26:35,179
know they could never be bothered

00:26:31,790 --> 00:26:36,800
they're like oh well you know did this

00:26:35,179 --> 00:26:38,420
was this was broken as well i think you

00:26:36,800 --> 00:26:41,500
know and you're like no that's been

00:26:38,420 --> 00:26:41,500
there for like four years

00:26:41,940 --> 00:26:48,910
I'd encourage you to build in some nice

00:26:46,600 --> 00:26:52,450
shiny things as well so convert convert

00:26:48,910 --> 00:26:53,710
the PHP line by line but also building

00:26:52,450 --> 00:26:56,470
some new once you've once you've done

00:26:53,710 --> 00:27:02,620
that building a few shiny projects to do

00:26:56,470 --> 00:27:05,400
as well so Lillian small small Sprint's

00:27:02,620 --> 00:27:08,530
like this converting code chunk by chunk

00:27:05,400 --> 00:27:10,270
feels good it's a it's it's kind of

00:27:08,530 --> 00:27:12,549
sustainable you get these little little

00:27:10,270 --> 00:27:14,470
humps of work and then go off and do the

00:27:12,549 --> 00:27:18,580
the normal the normal stuff for that

00:27:14,470 --> 00:27:19,690
client as soon as you start to get a few

00:27:18,580 --> 00:27:21,820
under your belt you start to feel this

00:27:19,690 --> 00:27:25,830
kind of sense of calm because you don't

00:27:21,820 --> 00:27:28,809
this PHP kind of breeds this mistrust of

00:27:25,830 --> 00:27:30,520
of what's already in the system so as

00:27:28,809 --> 00:27:33,000
soon as I found that as soon as I had it

00:27:30,520 --> 00:27:36,460
in Django I just felt a whole lot Karma

00:27:33,000 --> 00:27:37,480
life goes on as usual for the client you

00:27:36,460 --> 00:27:39,700
know ideally you haven't interrupted

00:27:37,480 --> 00:27:41,460
their business very much the new

00:27:39,700 --> 00:27:45,130
features are easy now you don't have to

00:27:41,460 --> 00:27:46,900
deal with all the existing PHP

00:27:45,130 --> 00:27:48,460
infrastructure you can add new things

00:27:46,900 --> 00:27:52,030
quite quickly it's quite satisfying when

00:27:48,460 --> 00:27:53,470
you enjoy adding new features again and

00:27:52,030 --> 00:27:55,480
you also get a steady cash flow this too

00:27:53,470 --> 00:27:57,160
because instead of taking the system off

00:27:55,480 --> 00:28:00,700
to the back shed and retooling it for

00:27:57,160 --> 00:28:02,500
three years and bring it back you're

00:28:00,700 --> 00:28:05,980
doing it piece by piece so you can build

00:28:02,500 --> 00:28:10,630
piece by piece as well off-peak

00:28:05,980 --> 00:28:11,980
scheduling by this I mean that you don't

00:28:10,630 --> 00:28:13,600
have to do it on demand because this

00:28:11,980 --> 00:28:16,059
isn't high priority work the client

00:28:13,600 --> 00:28:17,440
doesn't go you this work at all you know

00:28:16,059 --> 00:28:20,080
late they're not going to demand that

00:28:17,440 --> 00:28:22,299
you do this conversion so you can you

00:28:20,080 --> 00:28:23,980
can put in in your downtime when there's

00:28:22,299 --> 00:28:27,850
not much other work so it's great for

00:28:23,980 --> 00:28:29,260
your business to pain points it's it

00:28:27,850 --> 00:28:34,240
takes a long time it's a bit of a

00:28:29,260 --> 00:28:36,880
marathon it you need to be confident

00:28:34,240 --> 00:28:38,559
that you can hang on for a while and you

00:28:36,880 --> 00:28:41,320
know just keep doing it because

00:28:38,559 --> 00:28:42,760
eventually you'll get there but it does

00:28:41,320 --> 00:28:44,410
make some things more complicated I mean

00:28:42,760 --> 00:28:47,290
I've glossed over a few little things

00:28:44,410 --> 00:28:49,660
like authentication but there are some

00:28:47,290 --> 00:28:51,370
headaches along the way am I going to be

00:28:49,660 --> 00:28:54,720
deeply in trouble if i go over time a

00:28:51,370 --> 00:28:54,720
little cool

00:28:54,780 --> 00:28:58,840
another pain point is that this

00:28:56,740 --> 00:29:01,990
conversion process has a subtle

00:28:58,840 --> 00:29:03,580
political problem in that you're

00:29:01,990 --> 00:29:06,160
charging for work that doesn't actually

00:29:03,580 --> 00:29:11,410
have any visible change on the surface

00:29:06,160 --> 00:29:13,150
so at some point you have to you have to

00:29:11,410 --> 00:29:13,930
manage this and keep talking to people

00:29:13,150 --> 00:29:18,040
and all that sort of stuff there's no

00:29:13,930 --> 00:29:19,390
real way around this I found going on

00:29:18,040 --> 00:29:22,390
and then building the new features on

00:29:19,390 --> 00:29:24,940
top of the Django base under the name

00:29:22,390 --> 00:29:26,290
mark two for the feature for the for the

00:29:24,940 --> 00:29:28,060
component is actually a good way to do

00:29:26,290 --> 00:29:29,290
that because people understand when

00:29:28,060 --> 00:29:33,270
you're adding new features and they're

00:29:29,290 --> 00:29:33,270
much more comfortable paying for that

00:29:34,200 --> 00:29:38,980
what I might do is I'll skip a couple of

00:29:36,820 --> 00:29:42,190
these what I really want you to avoid is

00:29:38,980 --> 00:29:44,290
this second system syndrome which you

00:29:42,190 --> 00:29:46,180
might have heard written about it's the

00:29:44,290 --> 00:29:48,430
kind of or alternatively build one to

00:29:46,180 --> 00:29:49,750
throw away it's the kind of thing that

00:29:48,430 --> 00:29:52,120
took down netskope when they tried to

00:29:49,750 --> 00:29:54,820
rewrite netscape navigator it takes

00:29:52,120 --> 00:29:57,130
years to do it's you end up with this

00:29:54,820 --> 00:29:58,780
thing that you really struggle to plug

00:29:57,130 --> 00:29:59,770
back into your existing system you know

00:29:58,780 --> 00:30:02,320
you've got all this data you have to

00:29:59,770 --> 00:30:03,340
convert downtime it's probably obsolete

00:30:02,320 --> 00:30:05,590
by the time you've even got to plugged

00:30:03,340 --> 00:30:06,910
in so don't do that this is a good way

00:30:05,590 --> 00:30:09,550
to destroy your business lose your

00:30:06,910 --> 00:30:12,550
client the other alternative which I'd

00:30:09,550 --> 00:30:14,200
encourage you not to do is listen to

00:30:12,550 --> 00:30:15,100
people when they say oh why are you

00:30:14,200 --> 00:30:17,080
converting that would you just mind

00:30:15,100 --> 00:30:19,270
adding this extra feature because

00:30:17,080 --> 00:30:21,340
suddenly you get pulled out for another

00:30:19,270 --> 00:30:24,190
week or another month into the project

00:30:21,340 --> 00:30:28,540
and you can't you lose this rapid

00:30:24,190 --> 00:30:30,640
turnaround time you know you get lots of

00:30:28,540 --> 00:30:32,680
feature creep and you get really tired

00:30:30,640 --> 00:30:34,630
because you know you wish you wish it

00:30:32,680 --> 00:30:37,150
had been what start is something easy

00:30:34,630 --> 00:30:38,710
just a quick conversion turns into this

00:30:37,150 --> 00:30:40,690
this horrible thing and it breeds lots

00:30:38,710 --> 00:30:42,040
of dissatisfaction so just convert it

00:30:40,690 --> 00:30:45,880
straightaway no changes to the no

00:30:42,040 --> 00:30:49,900
features at all and how is it working

00:30:45,880 --> 00:30:51,790
out for me I guess we're still in

00:30:49,900 --> 00:30:53,290
business which is great we've done don't

00:30:51,790 --> 00:30:55,210
our three years on this project and it's

00:30:53,290 --> 00:30:56,830
now it's just for from the graph just

00:30:55,210 --> 00:30:58,390
about all in Python which is awesome so

00:30:56,830 --> 00:31:01,390
I'd really like to thank my colleagues

00:30:58,390 --> 00:31:04,300
at Boojum for following me along on this

00:31:01,390 --> 00:31:05,830
journey it's been very satisfying to see

00:31:04,300 --> 00:31:07,360
it work out really well

00:31:05,830 --> 00:31:10,990
we still have a good relationship with

00:31:07,360 --> 00:31:12,700
the client and I mean to that end we

00:31:10,990 --> 00:31:14,440
we've actually been working with this

00:31:12,700 --> 00:31:16,570
client for longer than most of the staff

00:31:14,440 --> 00:31:20,140
we've actually outlived most of the six

00:31:16,570 --> 00:31:20,919
dish staff in the organization so it's

00:31:20,140 --> 00:31:23,950
great that we still have this

00:31:20,919 --> 00:31:26,710
relationship they have a reliable code

00:31:23,950 --> 00:31:28,899
base now it's all in Django and just

00:31:26,710 --> 00:31:31,120
having it in Python even just making the

00:31:28,899 --> 00:31:33,460
conversion step from PHP to python no

00:31:31,120 --> 00:31:34,750
features no new features has been a huge

00:31:33,460 --> 00:31:37,929
win because we can track down the

00:31:34,750 --> 00:31:39,850
problems a lot easier as you saw there

00:31:37,929 --> 00:31:42,279
substantially less code which is awesome

00:31:39,850 --> 00:31:45,610
too I tracking down problems is much

00:31:42,279 --> 00:31:49,529
easier and to be honest I'm enjoying my

00:31:45,610 --> 00:31:53,559
job more than ever which is great so

00:31:49,529 --> 00:31:56,019
really what I can say is that you can

00:31:53,559 --> 00:31:57,490
replace the train tracks while the Train

00:31:56,019 --> 00:31:59,769
is still running and you'll end up with

00:31:57,490 --> 00:32:02,320
happier clients happier clients clients

00:31:59,769 --> 00:32:08,980
the public happier developers on your

00:32:02,320 --> 00:32:12,159
team and a healthy business model so you

00:32:08,980 --> 00:32:14,980
can take a PHP project and convert to

00:32:12,159 --> 00:32:21,210
django and then you'll have your own

00:32:14,980 --> 00:32:21,210
pony to thank

00:32:27,270 --> 00:32:32,080
thank you very much I'm afraid I think

00:32:30,310 --> 00:32:35,470
we're running a little too much out of

00:32:32,080 --> 00:32:37,650
time for questions but sure you'll be

00:32:35,470 --> 00:32:41,170
around during the rest of the conference

00:32:37,650 --> 00:32:43,960
so you just have to ask him yourself in

00:32:41,170 --> 00:32:45,700
the meantime hi Connor you would love to

00:32:43,960 --> 00:32:47,050
thank you for doing this talk and I'm

00:32:45,700 --> 00:32:49,780
sure you'd all love to join me and thank

00:32:47,050 --> 00:32:51,970
you we have a lovely coffee cup and some

00:32:49,780 --> 00:32:54,040
coffee beans from ritual in launceston

00:32:51,970 --> 00:32:56,370
and I think they're Norwegian blue thank

00:32:54,040 --> 00:32:56,370

YouTube URL: https://www.youtube.com/watch?v=wWlmpoSN34I


