Title: The Framework Framework
Publication date: 2013-07-11
Playlist: Pycon Australia 2013
Description: 
	Adam Terrey
http://2013.pycon-au.org/schedule/30073/view_talk
For when things should be pluggable... for when you want users to be able to extend your app... what should you do? "I will write a framework!", I hear you say. No need to invent your own pluggable system - use Component Architecture! The framework for frameworks (tested on animals).
PyCon Australia is the national conference for users of the Python Programming Language. In July 2013, we're returning to Hobart, bringing together stude
Captions: 
	00:00:00,000 --> 00:00:02,879
thank you i think i've met a few of you

00:00:01,560 --> 00:00:05,310
throughout the conference and it's been

00:00:02,879 --> 00:00:07,350
an awesome conference so far and i'm

00:00:05,310 --> 00:00:11,480
really glad to talking on this subject

00:00:07,350 --> 00:00:13,799
because i think when i first came across

00:00:11,480 --> 00:00:15,960
the technology that I'm about to

00:00:13,799 --> 00:00:19,800
describe to you I was quite amazed that

00:00:15,960 --> 00:00:21,300
it didn't exist in every part of

00:00:19,800 --> 00:00:24,710
programming I wish it did because it's

00:00:21,300 --> 00:00:28,019
so easy to build large complex

00:00:24,710 --> 00:00:33,690
applications in such well componentized

00:00:28,019 --> 00:00:35,550
and well mapped out components for your

00:00:33,690 --> 00:00:38,820
application so we're going to look into

00:00:35,550 --> 00:00:41,850
a bit of our what's called component

00:00:38,820 --> 00:00:45,180
architecture component architecture is a

00:00:41,850 --> 00:00:49,559
go to the next slide component

00:00:45,180 --> 00:00:51,390
architecture is a way of abstracting

00:00:49,559 --> 00:00:54,239
your code you might be familiar with

00:00:51,390 --> 00:00:58,320
things like object orientation where you

00:00:54,239 --> 00:00:59,879
take one class and then you do a you

00:00:58,320 --> 00:01:03,390
inherit from that class and you gain all

00:00:59,879 --> 00:01:05,369
of the benefits of that class and then

00:01:03,390 --> 00:01:07,680
you can add an extra functionality and

00:01:05,369 --> 00:01:10,260
that's that's a way of abstracting code

00:01:07,680 --> 00:01:12,720
and a way of you know you can call a

00:01:10,260 --> 00:01:14,880
method but if you've inherited it and

00:01:12,720 --> 00:01:17,159
you got a new object you can you can

00:01:14,880 --> 00:01:25,170
change around and customize the thing

00:01:17,159 --> 00:01:27,420
kinds of things so this is a truck with

00:01:25,170 --> 00:01:28,439
Lego bits and it's kind of what I think

00:01:27,420 --> 00:01:30,259
of when I think of component

00:01:28,439 --> 00:01:34,079
architecture you've ever looked at

00:01:30,259 --> 00:01:36,659
source code for projects like clone you

00:01:34,079 --> 00:01:39,570
realize wow there are so so many

00:01:36,659 --> 00:01:41,009
components to this thing literally in

00:01:39,570 --> 00:01:43,770
the hundreds and hundreds of packages

00:01:41,009 --> 00:01:45,960
that can fit together to form these

00:01:43,770 --> 00:01:49,530
things so in direction we love in

00:01:45,960 --> 00:01:52,140
direction and simplicity as programs if

00:01:49,530 --> 00:01:54,390
we're just high level say do something

00:01:52,140 --> 00:01:56,070
and then gets done somehow we don't even

00:01:54,390 --> 00:01:58,500
want to know how it gets done sometimes

00:01:56,070 --> 00:01:59,939
we say do something and then we just

00:01:58,500 --> 00:02:02,759
hope that the machinery underneath it

00:01:59,939 --> 00:02:04,840
does something or that if it doesn't do

00:02:02,759 --> 00:02:06,399
the thing that we can we want we

00:02:04,840 --> 00:02:09,149
investigate it we find the component

00:02:06,399 --> 00:02:13,030
that we want and then we can override it

00:02:09,149 --> 00:02:16,480
okay so we're talking about component

00:02:13,030 --> 00:02:20,910
architecture you can think of it as a

00:02:16,480 --> 00:02:24,099
way of indexing code that you've written

00:02:20,910 --> 00:02:27,610
across all your components into a

00:02:24,099 --> 00:02:30,519
central centralized registry and then

00:02:27,610 --> 00:02:33,730
when you need to access some component

00:02:30,519 --> 00:02:37,090
you query the registry based on what

00:02:33,730 --> 00:02:41,380
objects you have and what kind of thing

00:02:37,090 --> 00:02:43,690
you want so it's a way of searching for

00:02:41,380 --> 00:02:45,760
the code that you want and in that way

00:02:43,690 --> 00:02:47,950
you can configure the registry in such a

00:02:45,760 --> 00:02:50,739
way that for a different set of objects

00:02:47,950 --> 00:02:54,420
you get a different outcome for what you

00:02:50,739 --> 00:02:57,579
want this is based on the idea of

00:02:54,420 --> 00:03:00,310
interfaces you don't usually get

00:02:57,579 --> 00:03:04,629
interfaces in person but in this case

00:03:00,310 --> 00:03:07,390
you do so an interface is some-something

00:03:04,629 --> 00:03:11,109
an object declares about itself so I can

00:03:07,390 --> 00:03:13,780
do this or I can do that it's a contract

00:03:11,109 --> 00:03:15,459
with your with your program that

00:03:13,780 --> 00:03:19,510
guarantees of that thing will do what

00:03:15,459 --> 00:03:21,970
you wanted to do innocence so here this

00:03:19,510 --> 00:03:23,530
is the basic adaption pattern or the

00:03:21,970 --> 00:03:27,790
basic pattern of component architecture

00:03:23,530 --> 00:03:30,099
you have an object and then on the other

00:03:27,790 --> 00:03:33,280
side you want an interface that does

00:03:30,099 --> 00:03:36,040
something and then in between you get an

00:03:33,280 --> 00:03:38,650
adapter that changes that object into

00:03:36,040 --> 00:03:41,230
that thing that you want to do so that's

00:03:38,650 --> 00:03:43,690
the diagram down the bottom there and

00:03:41,230 --> 00:03:45,669
that's essential that adapter there is

00:03:43,690 --> 00:03:51,160
essentially what you want to be querying

00:03:45,669 --> 00:03:52,810
your component architecture for so on

00:03:51,160 --> 00:03:56,139
the left-hand side you've got the object

00:03:52,810 --> 00:03:57,130
it might have a number of interfaces on

00:03:56,139 --> 00:03:59,620
the right-hand side you've got the

00:03:57,130 --> 00:04:02,150
interface that you actually want you

00:03:59,620 --> 00:04:03,530
make give those two things to the

00:04:02,150 --> 00:04:05,409
the component architecture and it will

00:04:03,530 --> 00:04:07,790
return you the thing in the middle

00:04:05,409 --> 00:04:12,140
sounds kind of complicated but we're

00:04:07,790 --> 00:04:15,110
going to do an example and it's live so

00:04:12,140 --> 00:04:19,190
I hope it's going to work oh no there's

00:04:15,110 --> 00:04:20,690
another slide it has a really neat way

00:04:19,190 --> 00:04:25,190
of configuring itself which I'll show

00:04:20,690 --> 00:04:28,699
you in a way in a second zedd CML is an

00:04:25,190 --> 00:04:31,520
XML way of describing how things relate

00:04:28,699 --> 00:04:34,430
together and so component architecture

00:04:31,520 --> 00:04:36,470
will take that zml and put all your

00:04:34,430 --> 00:04:38,750
classes and all your interfaces into

00:04:36,470 --> 00:04:40,520
that component registry so you can get

00:04:38,750 --> 00:04:42,229
the adapter that you want you can find

00:04:40,520 --> 00:04:45,410
the code that you want to do the things

00:04:42,229 --> 00:04:48,590
that you want ok that's some do an

00:04:45,410 --> 00:04:50,300
example so there's three things we need

00:04:48,590 --> 00:04:53,870
to be remembering there's interfaces

00:04:50,300 --> 00:04:57,020
which say something about our object or

00:04:53,870 --> 00:05:00,020
our code there is the adoption process

00:04:57,020 --> 00:05:01,430
which is this registries that sits in

00:05:00,020 --> 00:05:04,699
the component architecture that you

00:05:01,430 --> 00:05:07,389
query and it gives you the code and then

00:05:04,699 --> 00:05:10,940
you've got this idea of configuration in

00:05:07,389 --> 00:05:12,650
this XML format it describes your

00:05:10,940 --> 00:05:14,900
application at a fairly high level view

00:05:12,650 --> 00:05:18,080
so component architecture is zoomed out

00:05:14,900 --> 00:05:21,680
quite a bit and it's kind of explaining

00:05:18,080 --> 00:05:23,510
the big chunks of your code not so so

00:05:21,680 --> 00:05:25,820
little as a method as in object

00:05:23,510 --> 00:05:31,750
orientation but on the object level ok

00:05:25,820 --> 00:05:36,289
let's go from a demo so I have a very

00:05:31,750 --> 00:05:41,210
such fit on the screen I hope so a very

00:05:36,289 --> 00:05:45,100
rudimentary application 8 case

00:05:41,210 --> 00:05:48,139
a total of four bookmarks in this class

00:05:45,100 --> 00:05:50,150
bookmarks which inherits from list so we

00:05:48,139 --> 00:05:53,750
are using a sense of object orientation

00:05:50,150 --> 00:05:56,180
and there we are it just adds for

00:05:53,750 --> 00:05:57,860
bookmarks there there are two kinds of

00:05:56,180 --> 00:06:02,900
bookmarks there's just an ordinary one

00:05:57,860 --> 00:06:05,599
up here and all it can do is store or

00:06:02,900 --> 00:06:07,580
retrieve the URL it can open it in a

00:06:05,599 --> 00:06:10,190
browser and I've got a little thing here

00:06:07,580 --> 00:06:12,199
to make it pretty when we print it on

00:06:10,190 --> 00:06:14,330
the screen and then there's also a

00:06:12,199 --> 00:06:16,669
secure a secure bookmark which all it

00:06:14,330 --> 00:06:19,370
does is a serta stat the start of the

00:06:16,669 --> 00:06:22,009
bookmark begins with HTTPS before it

00:06:19,370 --> 00:06:27,490
stores it sets that simple application

00:06:22,009 --> 00:06:31,039
and if we run that we can go into my

00:06:27,490 --> 00:06:33,550
orientation thing I'm going to restart

00:06:31,039 --> 00:06:33,550
this kernel

00:06:39,190 --> 00:06:43,470
no let's not put gave it some of their

00:06:43,889 --> 00:06:48,960
so I've created the box and there we

00:06:47,460 --> 00:06:52,169
have the first one and the second one

00:06:48,960 --> 00:06:53,879
and then it has a method in on the

00:06:52,169 --> 00:06:58,020
bookmark so if I grab the first one I

00:06:53,879 --> 00:07:00,029
can do open in browser we should open up

00:06:58,020 --> 00:07:02,099
in a new browser and hopefully we've got

00:07:00,029 --> 00:07:10,499
enough internet to get this any morning

00:07:02,099 --> 00:07:13,979
herald on the browser okay so this

00:07:10,499 --> 00:07:16,319
method here open in browser which is the

00:07:13,979 --> 00:07:18,529
kind of the central activity of this

00:07:16,319 --> 00:07:21,810
application if you would like to

00:07:18,529 --> 00:07:26,250
override that method what how would you

00:07:21,810 --> 00:07:28,349
go about doing it you might think oh it

00:07:26,250 --> 00:07:33,139
would be a good idea maybe you could sub

00:07:28,349 --> 00:07:36,389
class bookmark and then change that that

00:07:33,139 --> 00:07:38,430
message and but you'd have to recreate

00:07:36,389 --> 00:07:39,930
secure bookmarks and you'd end up pretty

00:07:38,430 --> 00:07:42,180
much rewriting the whole application in

00:07:39,930 --> 00:07:44,400
any case you could for kit you can fork

00:07:42,180 --> 00:07:46,589
the application and rewrite it but then

00:07:44,400 --> 00:07:49,469
you increase your maintenance costs you

00:07:46,589 --> 00:07:52,439
could monkey patch that particular

00:07:49,469 --> 00:07:55,740
method so you could run some kind of way

00:07:52,439 --> 00:07:57,719
to override a method and then that'll

00:07:55,740 --> 00:08:00,000
work for secure bookmarks swap monkey

00:07:57,719 --> 00:08:02,310
patching is a bit ugly so we have this

00:08:00,000 --> 00:08:05,460
other concept of component architecture

00:08:02,310 --> 00:08:07,169
which I'll show you and what we're going

00:08:05,460 --> 00:08:10,080
to do is we're going to define an

00:08:07,169 --> 00:08:13,110
interface that kind of encapsulate that

00:08:10,080 --> 00:08:15,360
activity open in browser as an interface

00:08:13,110 --> 00:08:19,129
or kind of a general concept that we

00:08:15,360 --> 00:08:22,620
want to use so i have an interfaces file

00:08:19,129 --> 00:08:24,569
and you import from zone interfaces

00:08:22,620 --> 00:08:29,300
which is the implementation of

00:08:24,569 --> 00:08:33,750
interfaces we can use and the general

00:08:29,300 --> 00:08:36,000
activity honor the describing is I open

00:08:33,750 --> 00:08:39,479
bookmark so we want to be able to get a

00:08:36,000 --> 00:08:45,840
bookmark find this interface I open

00:08:39,479 --> 00:08:51,120
bookmark and browse to that bookmark so

00:08:45,840 --> 00:08:53,270
let's try that out this is way what's

00:08:51,120 --> 00:08:53,270
that

00:08:54,920 --> 00:08:57,920
ok

00:09:00,900 --> 00:09:05,920
now to go ahead and do that we've got

00:09:03,460 --> 00:09:08,920
the interface which I described to you

00:09:05,920 --> 00:09:11,710
already and then you need to connect it

00:09:08,920 --> 00:09:15,070
up with the Z's email so this is where

00:09:11,710 --> 00:09:17,290
you describe that interface and how it

00:09:15,070 --> 00:09:19,960
connects to other things so this is the

00:09:17,290 --> 00:09:23,140
Z's tml the adapter and then you define

00:09:19,960 --> 00:09:25,150
where you can find an instance of that

00:09:23,140 --> 00:09:29,890
adapter which is in this particular

00:09:25,150 --> 00:09:33,040
class here it provides that interface

00:09:29,890 --> 00:09:34,570
there and it is for that object you can

00:09:33,040 --> 00:09:37,540
see this is kind of like the registry

00:09:34,570 --> 00:09:40,420
setting that will be searched for when

00:09:37,540 --> 00:09:43,810
we call for this adapter if we look at

00:09:40,420 --> 00:09:47,170
this particular adapter I have it in

00:09:43,810 --> 00:09:53,770
another file which is here all it does

00:09:47,170 --> 00:09:55,740
is takes the original object as a just a

00:09:53,770 --> 00:09:58,690
context variable and then we call the

00:09:55,740 --> 00:10:03,930
Chrome application to open up the oil so

00:09:58,690 --> 00:10:03,930
we can try that let's go

00:10:06,060 --> 00:10:10,840
so we run the Jets email configuration

00:10:08,580 --> 00:10:14,950
and that should load all the code that

00:10:10,840 --> 00:10:18,100
we've we've put in there and then we

00:10:14,950 --> 00:10:21,160
will find that interface marca the eye

00:10:18,100 --> 00:10:24,130
open bookmark and with the first book

00:10:21,160 --> 00:10:26,290
market in that list we're going to query

00:10:24,130 --> 00:10:28,420
and get the adapter and then just browse

00:10:26,290 --> 00:10:31,180
to it so that should actually find the

00:10:28,420 --> 00:10:35,110
code and then execute brass so if I

00:10:31,180 --> 00:10:41,680
click play there you are you did that

00:10:35,110 --> 00:10:44,110
and then the other way of doing it which

00:10:41,680 --> 00:10:46,420
is a bit more verbose is to use this

00:10:44,110 --> 00:10:49,840
method get adapter which is in the zone

00:10:46,420 --> 00:10:53,920
component library and that is the same

00:10:49,840 --> 00:10:55,930
as this except it should return it there

00:10:53,920 --> 00:10:59,440
and then we can browse it so we'll try

00:10:55,930 --> 00:11:01,870
that and it did the same thing so it

00:10:59,440 --> 00:11:04,110
goes to our favorite banking page ING

00:11:01,870 --> 00:11:04,110
Direct

00:11:05,570 --> 00:11:11,820
okay so now we have our simple

00:11:09,090 --> 00:11:14,040
application with componentized a little

00:11:11,820 --> 00:11:16,080
bit we've used soap component object to

00:11:14,040 --> 00:11:18,030
define an interface and now we actually

00:11:16,080 --> 00:11:21,390
want to extend it so we want to build a

00:11:18,030 --> 00:11:23,520
plug-in that in this case we're going to

00:11:21,390 --> 00:11:26,700
build a plug-in that deals with the

00:11:23,520 --> 00:11:30,600
secure bookmarks in a different way to

00:11:26,700 --> 00:11:32,340
the non-secure bookmarks so the first

00:11:30,600 --> 00:11:34,290
thing I need to do is I'll write an

00:11:32,340 --> 00:11:39,330
adapter that does a different thing so

00:11:34,290 --> 00:11:44,340
this adapter opens a bookmark in Firefox

00:11:39,330 --> 00:11:46,680
instead of instead of chrome and so I

00:11:44,340 --> 00:11:50,850
want to use this adapter for different

00:11:46,680 --> 00:11:53,400
situation and so that would require a

00:11:50,850 --> 00:11:58,760
different entry in a Zen CML which is

00:11:53,400 --> 00:12:00,900
the first one on the top so instead of

00:11:58,760 --> 00:12:03,480
the object that it's going to provide

00:12:00,900 --> 00:12:05,490
the adaption for being bookmark stop

00:12:03,480 --> 00:12:08,310
bookmark I'm actually going to provide

00:12:05,490 --> 00:12:11,040
it for bookmark secure bookmark now the

00:12:08,310 --> 00:12:12,720
way the adaption process will work is it

00:12:11,040 --> 00:12:17,610
look at the adapters that are available

00:12:12,720 --> 00:12:19,770
and pick the most specific one now if if

00:12:17,610 --> 00:12:22,200
it picks the other one that is not as

00:12:19,770 --> 00:12:25,370
specific if you look at it bookmark

00:12:22,200 --> 00:12:28,920
stock bookmark is the parent class of

00:12:25,370 --> 00:12:31,890
bookmark book marked book-marked secure

00:12:28,920 --> 00:12:37,470
and because i'm specifying it into a

00:12:31,890 --> 00:12:41,430
narrower range of classes this this

00:12:37,470 --> 00:12:46,560
adapter entry will actually win for the

00:12:41,430 --> 00:12:49,470
case of secure bookmarks so if I if I go

00:12:46,560 --> 00:12:52,140
back to my base configure since you know

00:12:49,470 --> 00:12:55,160
I can remove this includes to this

00:12:52,140 --> 00:12:55,160
comment here

00:12:55,329 --> 00:13:00,759
which will include this package that

00:12:57,879 --> 00:13:04,239
I've created that has this news as CML

00:13:00,759 --> 00:13:08,709
in it so I'm going to save that go back

00:13:04,239 --> 00:13:10,799
to this reset my kernel so I can start

00:13:08,709 --> 00:13:10,799
again

00:13:15,670 --> 00:13:21,700
and unload my own sets email

00:13:18,100 --> 00:13:25,030
configuration again and this time this

00:13:21,700 --> 00:13:26,500
one is the first bookmark which is an

00:13:25,030 --> 00:13:29,620
ordinary one so that should I open in

00:13:26,500 --> 00:13:32,200
Chrome as we would like to see and then

00:13:29,620 --> 00:13:34,360
the second one is the secure line so

00:13:32,200 --> 00:13:36,820
that should actually open in firefox

00:13:34,360 --> 00:13:38,710
which it's done which is excellent so

00:13:36,820 --> 00:13:40,720
we've extended our application by

00:13:38,710 --> 00:13:44,400
providing another package it's got its

00:13:40,720 --> 00:13:46,900
own HTML it overrides a little part of

00:13:44,400 --> 00:13:49,150
the configuration by saying I'm more

00:13:46,900 --> 00:13:54,700
specific for the secure bookmark so use

00:13:49,150 --> 00:14:00,460
me instead oh quit that now say for

00:13:54,700 --> 00:14:03,330
instance you are aware of the fact that

00:14:00,460 --> 00:14:06,400
that there's this chrome or firefox

00:14:03,330 --> 00:14:08,710
decision that will be made and you

00:14:06,400 --> 00:14:11,760
actually even even though the

00:14:08,710 --> 00:14:15,250
configuration says use firefox i

00:14:11,760 --> 00:14:16,690
actually want to specify using chrome so

00:14:15,250 --> 00:14:19,630
what we can do there is we can add a

00:14:16,690 --> 00:14:23,020
second entry into adaption registry

00:14:19,630 --> 00:14:25,450
which is actually almost it's identical

00:14:23,020 --> 00:14:27,460
with one exception to the one in the

00:14:25,450 --> 00:14:32,110
base for bookmarks except we've added a

00:14:27,460 --> 00:14:34,950
name a name for it chrome so that if we

00:14:32,110 --> 00:14:39,210
actually add a name into our get adapter

00:14:34,950 --> 00:14:39,210
we should theoretically

00:14:41,340 --> 00:14:44,180
we stop

00:14:57,850 --> 00:15:04,199
we can add names into our things that's

00:15:00,759 --> 00:15:04,199
kind of like an extra parameter to that

00:15:07,709 --> 00:15:15,690
so it's taken the other entry there so

00:15:12,220 --> 00:15:19,329
that's that's the component architecture

00:15:15,690 --> 00:15:23,440
demonstrated using the adapters and the

00:15:19,329 --> 00:15:26,860
the plugin I just briefly describe that

00:15:23,440 --> 00:15:31,269
there's this is used in a number of

00:15:26,860 --> 00:15:33,550
applications like pyramid also if you've

00:15:31,269 --> 00:15:37,209
ever had anything to do with croc it's

00:15:33,550 --> 00:15:40,959
used in that and most notably it's used

00:15:37,209 --> 00:15:45,699
in plone plan has a very interesting use

00:15:40,959 --> 00:15:47,680
of it it has the objects are content and

00:15:45,699 --> 00:15:50,350
themselves you have a range of content

00:15:47,680 --> 00:15:54,519
you have files and images and you have

00:15:50,350 --> 00:15:57,069
pages and all kinds of custom content

00:15:54,519 --> 00:15:59,440
that you might have in the base and you

00:15:57,069 --> 00:16:01,569
also have a request so our requests will

00:15:59,440 --> 00:16:04,360
come in they'll be piece of content and

00:16:01,569 --> 00:16:06,339
then you've got those two objects but

00:16:04,360 --> 00:16:09,370
what you actually want is an object to

00:16:06,339 --> 00:16:13,689
render a page so there is an eye browser

00:16:09,370 --> 00:16:16,509
view interface that you query for into

00:16:13,689 --> 00:16:19,029
the component architecture and say I

00:16:16,509 --> 00:16:20,800
have these two objects app its content

00:16:19,029 --> 00:16:23,170
in a request and I want something that's

00:16:20,800 --> 00:16:26,560
going to render a page and so based on

00:16:23,170 --> 00:16:28,480
the aspects of those two objects you can

00:16:26,560 --> 00:16:32,290
get something that'll render the page in

00:16:28,480 --> 00:16:35,110
your various a particular context which

00:16:32,290 --> 00:16:36,790
is very useful so you can produce many

00:16:35,110 --> 00:16:39,550
kinds of different views for different

00:16:36,790 --> 00:16:41,800
kinds of content and if those don't

00:16:39,550 --> 00:16:44,410
exist then you can always back down to

00:16:41,800 --> 00:16:47,889
the default views that are provided by

00:16:44,410 --> 00:16:50,560
other components I think that's all I

00:16:47,889 --> 00:16:52,990
have for at the moment we can jump into

00:16:50,560 --> 00:16:56,620
some time for questions if anybody's got

00:16:52,990 --> 00:16:58,360
some questions so we have several

00:16:56,620 --> 00:17:01,079
minutes for questions so it has a

00:16:58,360 --> 00:17:01,079
question I'll bring the mic

00:17:02,380 --> 00:17:06,070
yeah what if

00:17:09,709 --> 00:17:16,740
so this is a design pan bit easy clatter

00:17:13,589 --> 00:17:19,319
sorry I'm so this is it a design pan

00:17:16,740 --> 00:17:21,319
that sees in other programming languages

00:17:19,319 --> 00:17:27,299
that it's borrowed from or is it

00:17:21,319 --> 00:17:29,039
something as unique as over I haven't

00:17:27,299 --> 00:17:33,240
seen it okay it's the first time I've

00:17:29,039 --> 00:17:35,279
really seen it it's yeah I wish it was

00:17:33,240 --> 00:17:37,380
in other languages it's interesting

00:17:35,279 --> 00:17:40,620
because you can implement it in in code

00:17:37,380 --> 00:17:41,880
space it doesn't necessarily need am you

00:17:40,620 --> 00:17:44,460
don't need to language they have a

00:17:41,880 --> 00:17:47,429
library so you can make your own yeah

00:17:44,460 --> 00:17:50,429
yeah so fairly easily it's not too hard

00:17:47,429 --> 00:17:54,179
to make here okay i have used it in coca

00:17:50,429 --> 00:17:55,649
or in the objective-c i wrote a quick a

00:17:54,179 --> 00:17:57,360
quick one because i was like i really

00:17:55,649 --> 00:18:03,090
need this is if you're awesome views in

00:17:57,360 --> 00:18:05,669
this context as well but I'm unless

00:18:03,090 --> 00:18:08,100
anybody else is aware of of component

00:18:05,669 --> 00:18:11,700
architecture in another context I I

00:18:08,100 --> 00:18:13,080
think he soap has got lots of brilliant

00:18:11,700 --> 00:18:17,220
things that they haven't documented very

00:18:13,080 --> 00:18:20,399
well so it sits there just waiting for

00:18:17,220 --> 00:18:23,549
people to unpackage and so t spize open

00:18:20,399 --> 00:18:26,159
pyramid the main ones I the underlying

00:18:23,549 --> 00:18:29,370
level and begin period no but you can

00:18:26,159 --> 00:18:33,049
use it in pyramid for ya I'm not

00:18:29,370 --> 00:18:33,049
security expert though so yeah

00:18:35,370 --> 00:18:39,390
any more questions for the audience

00:18:41,020 --> 00:18:47,130
alright in that case thank you very much

00:18:48,870 --> 00:18:54,850
the top I'll give you a special blend of

00:18:52,150 --> 00:18:57,420
Norwegian blue coffee beans if and a

00:18:54,850 --> 00:19:01,440
hike on our you mug to drink them from

00:18:57,420 --> 00:19:01,440

YouTube URL: https://www.youtube.com/watch?v=EFGsglSytAI


