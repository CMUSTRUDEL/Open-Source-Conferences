Title: Demystifying LoRaWAN with PyCom
Publication date: 2018-08-24
Playlist: PyCon Australia 2018
Description: 
	Brian Danilko

https://2018.pycon-au.org/talks/44704-demystifying-lorawan-with-pycom/

Connecting IoT devices using low power over wide area wireless (LoRaWAN) makes sense. But how LoRaWAN works, duty cycles, frequency plans, receive windows, etc. doesn't.

This talk will demystify how LoRaWAN works using PyCom devices.

Python, PyCon, PyConAU, australia, programming, sydney

This video is licensed under CC BY 3.0 AU ‹https://creativecommons.org/licenses/by/3.0/au/›.

PyCon Australia (“PyCon AU”) is the national conference for the Python Programming Community, bringing together professional, student and enthusiast developers with a love for developing with Python.

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 24 - 28 2018.

Python, PyCon, PyConAU
Captions: 
	00:00:00,000 --> 00:00:06,000
and welcome to Pike on 2018 and brand

00:00:02,909 --> 00:00:12,570
welcome as well without much I do I

00:00:06,000 --> 00:00:20,460
would like to you know just thank you

00:00:12,570 --> 00:00:23,180
thank you very much hello everyone

00:00:20,460 --> 00:00:26,789
thanks for coming

00:00:23,180 --> 00:00:28,890
this talk is demystifying Laura when

00:00:26,789 --> 00:00:30,390
with PI comm so hopefully you're in the

00:00:28,890 --> 00:00:34,320
right place

00:00:30,390 --> 00:00:36,899
I'm Bryan Bryan Tinoco I have a business

00:00:34,320 --> 00:00:40,230
contracting and have for the last 25

00:00:36,899 --> 00:00:41,489
years or so called likeable software but

00:00:40,230 --> 00:00:44,489
the nice thing about this particular

00:00:41,489 --> 00:00:46,920
work is that I actually had a client and

00:00:44,489 --> 00:00:49,379
that meant I could actually work on this

00:00:46,920 --> 00:00:51,600
and charge somebody so so that's

00:00:49,379 --> 00:00:53,969
entelechy so that's why I put them on

00:00:51,600 --> 00:00:56,280
the slide as well I'm really glad they

00:00:53,969 --> 00:00:59,460
did because even though I'd been using

00:00:56,280 --> 00:01:02,489
Python for years I hadn't discovered

00:00:59,460 --> 00:01:06,150
micro Python and PI comms until this

00:01:02,489 --> 00:01:10,320
project came up so so that was something

00:01:06,150 --> 00:01:13,770
I'm very glad that's happened about

00:01:10,320 --> 00:01:15,180
myself I said kind of everything just by

00:01:13,770 --> 00:01:17,850
saying I've been programming for about

00:01:15,180 --> 00:01:21,360
25 years 25 or 30 years now

00:01:17,850 --> 00:01:24,420
professionally so I'm one of the old

00:01:21,360 --> 00:01:30,150
hands at it but what I like is learning

00:01:24,420 --> 00:01:33,210
new things and with Python about 10-15

00:01:30,150 --> 00:01:36,780
years ago with PI comm micro Python in

00:01:33,210 --> 00:01:39,650
the last six months with Laura and Laura

00:01:36,780 --> 00:01:43,530
when there's always new things coming up

00:01:39,650 --> 00:01:47,100
that's good but you also continually

00:01:43,530 --> 00:01:51,030
find out how little you know and that's

00:01:47,100 --> 00:01:53,270
really the motivation for this talk is

00:01:51,030 --> 00:01:56,280
that when I started on this project

00:01:53,270 --> 00:01:58,049
first I started with Laura and will

00:01:56,280 --> 00:02:02,009
explain the differences between Laura

00:01:58,049 --> 00:02:04,920
and Laura when I learned heaps I read

00:02:02,009 --> 00:02:07,290
the specs I read the data sheets but I

00:02:04,920 --> 00:02:10,560
was still quite confused and there

00:02:07,290 --> 00:02:12,959
wasn't anyone that I could ask really so

00:02:10,560 --> 00:02:13,800
I did as much research as I could but it

00:02:12,959 --> 00:02:17,850
came down

00:02:13,800 --> 00:02:21,810
to trial and error and and looking in

00:02:17,850 --> 00:02:24,990
the code looking the source so so the

00:02:21,810 --> 00:02:29,490
motivation of this talk is that I'd like

00:02:24,990 --> 00:02:32,820
to pass on some of these some of what

00:02:29,490 --> 00:02:37,440
I've learned and also I'm going to have

00:02:32,820 --> 00:02:39,510
a bit of a plea for in the Internet of

00:02:37,440 --> 00:02:43,830
Things as we scale up we're gonna get

00:02:39,510 --> 00:02:48,240
new problems so if we start using some

00:02:43,830 --> 00:02:51,960
of these resources like Laura when well

00:02:48,240 --> 00:02:55,530
we'll scale up a lot easier so that's

00:02:51,960 --> 00:02:59,130
the and in fact there is a bit of a

00:02:55,530 --> 00:03:00,390
problem with high comm is that it makes

00:02:59,130 --> 00:03:04,830
things so easy

00:03:00,390 --> 00:03:08,210
so micro Python numpy comm you start in

00:03:04,830 --> 00:03:11,910
20 lines of code you're communicating

00:03:08,210 --> 00:03:14,670
over this wireless network so it's

00:03:11,910 --> 00:03:19,350
pretty easy just to say I'm done I've

00:03:14,670 --> 00:03:20,670
done it but doing that means that you

00:03:19,350 --> 00:03:22,380
won't be doing it very well then you

00:03:20,670 --> 00:03:25,230
could be affecting others because it's a

00:03:22,380 --> 00:03:28,260
shared resource anyway so let's get to

00:03:25,230 --> 00:03:32,130
the interesting bits so so the goals for

00:03:28,260 --> 00:03:35,520
this talk are I'm gonna go through a

00:03:32,130 --> 00:03:37,500
little bit about what Laura is and what

00:03:35,520 --> 00:03:41,640
Laura when is because a lot of people

00:03:37,500 --> 00:03:46,470
get confused how many people are using

00:03:41,640 --> 00:03:47,250
or know of Laura Oh quite a few that's

00:03:46,470 --> 00:03:51,660
great

00:03:47,250 --> 00:03:54,630
Laura when are you using that or that's

00:03:51,660 --> 00:03:57,060
what I find normally that there's a lot

00:03:54,630 --> 00:03:59,310
more people using Laura because that's

00:03:57,060 --> 00:04:01,980
kind of the base and then going on top

00:03:59,310 --> 00:04:05,700
of that as Laura went and starting with

00:04:01,980 --> 00:04:07,410
Laura's very simple and that's great so

00:04:05,700 --> 00:04:10,260
yeah so I'm going to look at the

00:04:07,410 --> 00:04:12,870
differences between the two and then I'm

00:04:10,260 --> 00:04:14,610
going to go to those misunderstood areas

00:04:12,870 --> 00:04:17,790
those things that I found difficult

00:04:14,610 --> 00:04:23,789
myself and tried to give you a bit of a

00:04:17,790 --> 00:04:27,300
jump start but Laura and Laura when are

00:04:23,789 --> 00:04:28,139
is a big subject so it's just going to

00:04:27,300 --> 00:04:30,210
be this whirlwind

00:04:28,139 --> 00:04:32,370
to her but I'm definitely happy to take

00:04:30,210 --> 00:04:34,979
questions at the end of this and any

00:04:32,370 --> 00:04:37,110
time during the conference and the last

00:04:34,979 --> 00:04:39,300
one is that plea to use Laura when

00:04:37,110 --> 00:04:42,810
responsibly because it is a shared

00:04:39,300 --> 00:04:45,300
resource and if we start clobbering

00:04:42,810 --> 00:04:49,020
everyone else we won't be able to scale

00:04:45,300 --> 00:04:54,150
up for IOT I'm only looking at the at

00:04:49,020 --> 00:04:58,979
the the end nodes so so the little guys

00:04:54,150 --> 00:05:02,699
doing the communications the motes or

00:04:58,979 --> 00:05:05,069
the end nodes to a gateway and we'll

00:05:02,699 --> 00:05:07,889
look at that but there's a whole nother

00:05:05,069 --> 00:05:10,669
layer on top of that that I'm which is

00:05:07,889 --> 00:05:13,409
the data storage and the the joining

00:05:10,669 --> 00:05:15,479
deciding who gets to join I'm not going

00:05:13,409 --> 00:05:18,150
to look at that basically because I

00:05:15,479 --> 00:05:23,819
don't know exactly how it works so so

00:05:18,150 --> 00:05:28,830
we'll leave that okay so what did I do

00:05:23,819 --> 00:05:31,020
I got to low PI modules and as soon as

00:05:28,830 --> 00:05:33,180
they arrived late of course but they did

00:05:31,020 --> 00:05:35,759
arrive when they arrived the first thing

00:05:33,180 --> 00:05:40,500
you want to do is make a LED blink and

00:05:35,759 --> 00:05:41,129
have them talk to each other so that's

00:05:40,500 --> 00:05:46,439
what I did

00:05:41,129 --> 00:05:51,889
and here's 25 lines of code that that

00:05:46,439 --> 00:05:51,889
creates a ping-pong sort of

00:05:54,469 --> 00:06:01,800
communications transfer so you can see

00:05:58,139 --> 00:06:05,610
how easy it is with PI comm which is

00:06:01,800 --> 00:06:07,620
using micro Python we just import the

00:06:05,610 --> 00:06:11,099
module called Laura so that's something

00:06:07,620 --> 00:06:16,110
that PI coms added import socket time

00:06:11,099 --> 00:06:18,719
and then just open up Laura with this

00:06:16,110 --> 00:06:22,439
mode Laura dot Laura which is saying

00:06:18,719 --> 00:06:28,169
that this is Laura not Laura when set up

00:06:22,439 --> 00:06:31,080
a socket and then we send or receive to

00:06:28,169 --> 00:06:33,389
that socket so one one of the end nodes

00:06:31,080 --> 00:06:35,639
will actually when they start it with

00:06:33,389 --> 00:06:38,009
the name equal main at the bottom we'll

00:06:35,639 --> 00:06:40,620
call ping and the other one will call

00:06:38,009 --> 00:06:41,540
pong and they will be transmitting back

00:06:40,620 --> 00:06:44,520
and forth

00:06:41,540 --> 00:06:45,300
so so that's what I was saying it's

00:06:44,520 --> 00:06:48,180
almost too easy

00:06:45,300 --> 00:06:53,400
because you know and and this this

00:06:48,180 --> 00:06:57,480
actual this example I didn't make it up

00:06:53,400 --> 00:07:01,440
this is this is directly from the PI

00:06:57,480 --> 00:07:08,070
comm documentation and there's where it

00:07:01,440 --> 00:07:11,130
is but the the tutorials don't go much

00:07:08,070 --> 00:07:13,140
beyond this and that's the problem a

00:07:11,130 --> 00:07:16,040
couple little important points that I'll

00:07:13,140 --> 00:07:19,170
be bringing them up during the talk is

00:07:16,040 --> 00:07:20,850
make sure you connect your antenna

00:07:19,170 --> 00:07:23,130
because they they keep having these

00:07:20,850 --> 00:07:25,350
warnings all through it if you if you're

00:07:23,130 --> 00:07:27,150
using the Laura transceivers without the

00:07:25,350 --> 00:07:31,950
antenna hooked up you could break your

00:07:27,150 --> 00:07:35,310
hardware that we want to avoid lots of

00:07:31,950 --> 00:07:37,919
examples 25 lines of code we've already

00:07:35,310 --> 00:07:41,130
got it working and you can even and I've

00:07:37,919 --> 00:07:42,390
done this you can move your your units

00:07:41,130 --> 00:07:44,130
kilometers apart

00:07:42,390 --> 00:07:46,590
line of sights kind of nice but

00:07:44,130 --> 00:07:48,810
kilometers apart and have a an antenna

00:07:46,590 --> 00:07:50,370
on them and they will still work so

00:07:48,810 --> 00:07:54,600
that's that's one of the benefits of

00:07:50,370 --> 00:07:57,870
Laura okay so that's the important point

00:07:54,600 --> 00:08:01,560
don't break your hardware okay just some

00:07:57,870 --> 00:08:04,229
quick background Laura itself so Laura

00:08:01,560 --> 00:08:08,220
is that transport layer and it was it's

00:08:04,229 --> 00:08:10,740
actually patented and it was developed

00:08:08,220 --> 00:08:13,440
by this cyclo I didn't even know that

00:08:10,740 --> 00:08:15,330
but when I was doing some research I saw

00:08:13,440 --> 00:08:17,490
that it was developed by cyclo because

00:08:15,330 --> 00:08:19,830
now everybody thinks it of it as a Sam

00:08:17,490 --> 00:08:22,500
tech technology because they bought the

00:08:19,830 --> 00:08:26,430
patents in 2012 and they produce quite a

00:08:22,500 --> 00:08:29,160
few chips to afford the Laura

00:08:26,430 --> 00:08:32,430
transmission so the transmission and

00:08:29,160 --> 00:08:37,469
decoding it uses something called a

00:08:32,430 --> 00:08:40,169
chirp spread spectrum to transmit

00:08:37,469 --> 00:08:41,880
information reliably but using low-power

00:08:40,169 --> 00:08:45,920
it's another technology I don't

00:08:41,880 --> 00:08:48,630
understand totally because I'm more a

00:08:45,920 --> 00:08:52,410
software person but it sounds like these

00:08:48,630 --> 00:08:55,450
are chirps that are just increasing in

00:08:52,410 --> 00:08:58,300
frequency over a particular

00:08:55,450 --> 00:09:02,080
time and where they start the chirp is

00:08:58,300 --> 00:09:05,920
the different value there's a couple

00:09:02,080 --> 00:09:07,660
really good websites on it showing some

00:09:05,920 --> 00:09:08,130
MATLAB simulations of it that are quite

00:09:07,660 --> 00:09:11,770
neat

00:09:08,130 --> 00:09:14,860
okay so Laura it allows you to use

00:09:11,770 --> 00:09:19,330
different power levels frequencies band

00:09:14,860 --> 00:09:21,340
widths 125 500 and spreading factors and

00:09:19,330 --> 00:09:25,150
spreading factors are part of that the

00:09:21,340 --> 00:09:29,800
chirp where it just doesn't decode two

00:09:25,150 --> 00:09:33,190
more values or less values but with all

00:09:29,800 --> 00:09:35,410
of these you have trade-offs if you

00:09:33,190 --> 00:09:39,340
you'll do use lower power you don't get

00:09:35,410 --> 00:09:41,830
the distance time on air that's it

00:09:39,340 --> 00:09:42,880
that's an important one for fair use so

00:09:41,830 --> 00:09:46,030
that's something we'll be looking at

00:09:42,880 --> 00:09:48,040
later so right now really the big things

00:09:46,030 --> 00:09:49,810
is power we're always trying to minimize

00:09:48,040 --> 00:09:54,190
our power and we're trying to maximize

00:09:49,810 --> 00:09:58,150
our distance so Laura allows you to to

00:09:54,190 --> 00:10:00,880
change all of those values just a

00:09:58,150 --> 00:10:04,920
interesting little factoid hedy lamarr

00:10:00,880 --> 00:10:07,810
whose movie star in the 40s 30s 40s 50s

00:10:04,920 --> 00:10:12,190
she actually did some work on spread

00:10:07,810 --> 00:10:16,570
spectrum communications it seems that

00:10:12,190 --> 00:10:18,520
she wasn't given very difficult roles so

00:10:16,570 --> 00:10:21,490
she was bored and she had a very

00:10:18,520 --> 00:10:26,290
scientific mind so she did some of the

00:10:21,490 --> 00:10:27,640
early work that was just an aside by the

00:10:26,290 --> 00:10:30,160
way okay

00:10:27,640 --> 00:10:32,800
so Laura we've been talking about Laura

00:10:30,160 --> 00:10:36,070
Laura when that's we want to get to so

00:10:32,800 --> 00:10:39,910
they're both long range that's the Laura

00:10:36,070 --> 00:10:41,650
part both low power and both use low

00:10:39,910 --> 00:10:45,520
cost hardware and that makes sense

00:10:41,650 --> 00:10:48,340
because Laura when is on top of Laura so

00:10:45,520 --> 00:10:53,500
what it adds is this wide area network

00:10:48,340 --> 00:10:55,740
on top of Laura and one problem is is

00:10:53,500 --> 00:11:00,880
that that introduces a lot of complexity

00:10:55,740 --> 00:11:05,800
so so it's a lot more complex but on the

00:11:00,880 --> 00:11:08,050
positive side that complexity is 90%

00:11:05,800 --> 00:11:10,179
handled in this thing called the stack

00:11:08,050 --> 00:11:12,220
so the and the stack is just the

00:11:10,179 --> 00:11:18,730
software that actually handles the

00:11:12,220 --> 00:11:22,800
protocol needed to be Laura when needed

00:11:18,730 --> 00:11:22,800
to be compliant most of it

00:11:24,189 --> 00:11:28,899
okay so Laura when so what are the

00:11:27,459 --> 00:11:31,720
features why do we want to use it

00:11:28,899 --> 00:11:35,290
instead of the simpler case well it

00:11:31,720 --> 00:11:37,389
connects us to the Internet so already

00:11:35,290 --> 00:11:39,999
we've got a compelling reason to use it

00:11:37,389 --> 00:11:41,730
so if in Internet of Things you want to

00:11:39,999 --> 00:11:44,079
dump information on the Internet

00:11:41,730 --> 00:11:47,679
you're gonna get there with Laura web

00:11:44,079 --> 00:11:49,839
and it does it by using gateways so it

00:11:47,679 --> 00:11:51,999
actually transmits to a gateway that is

00:11:49,839 --> 00:11:55,660
connected to the Internet which then

00:11:51,999 --> 00:11:57,899
passes it onto network servers it also

00:11:55,660 --> 00:12:00,369
has a lot of other nice functionality

00:11:57,899 --> 00:12:04,989
encryption so we have secure

00:12:00,369 --> 00:12:06,910
transmissions over-the-air it can

00:12:04,989 --> 00:12:12,549
control which devices can join the

00:12:06,910 --> 00:12:15,939
network it also has this Mac layer which

00:12:12,549 --> 00:12:17,619
is used to set channels power levels

00:12:15,939 --> 00:12:18,939
frame counts so a whole bunch of things

00:12:17,619 --> 00:12:21,879
I'll look at that in a minute

00:12:18,939 --> 00:12:27,879
and it also has something that's a bit

00:12:21,879 --> 00:12:29,110
scary confirmation and retry and when we

00:12:27,879 --> 00:12:31,240
look at the fair use I'm going to be

00:12:29,110 --> 00:12:33,610
suggesting that if you don't have to use

00:12:31,240 --> 00:12:36,220
this don't because all of a sudden you

00:12:33,610 --> 00:12:39,160
double or more all of the transmissions

00:12:36,220 --> 00:12:40,569
and that's bad from power and that's bad

00:12:39,160 --> 00:12:41,889
because you're clobbering the Airways

00:12:40,569 --> 00:12:49,600
that other people might want to be

00:12:41,889 --> 00:12:51,790
sending real data for so okay so the you

00:12:49,600 --> 00:12:52,990
can tell I'm more of a code sort of

00:12:51,790 --> 00:13:01,059
person and not an artist

00:12:52,990 --> 00:13:04,779
but this shows a - for example low PI

00:13:01,059 --> 00:13:07,809
boards and so this is that original

00:13:04,779 --> 00:13:11,049
program the ping-pong and it's just the

00:13:07,809 --> 00:13:14,589
two two applications doing one calling

00:13:11,049 --> 00:13:16,990
ping one calling pong and then through

00:13:14,589 --> 00:13:21,809
the Laura device which is managed by pi

00:13:16,990 --> 00:13:21,809
comm we get the transmissions

00:13:21,930 --> 00:13:29,620
now when we do Laura when what we have

00:13:26,920 --> 00:13:34,360
is we have a user application on top of

00:13:29,620 --> 00:13:36,340
the lorwyn stack and and then it's using

00:13:34,360 --> 00:13:38,680
the same Laura beneath it to actually

00:13:36,340 --> 00:13:41,770
send the data so it's still still Laura

00:13:38,680 --> 00:13:44,020
going over the airwaves and then the

00:13:41,770 --> 00:13:46,420
gateway so an application we don't have

00:13:44,020 --> 00:13:50,620
to write there's there's lots of

00:13:46,420 --> 00:13:54,070
gateways out there it's actually taking

00:13:50,620 --> 00:13:56,380
the data from the stack and sending it

00:13:54,070 --> 00:13:58,660
up to the Internet and communicating to

00:13:56,380 --> 00:14:02,710
these things called network servers or

00:13:58,660 --> 00:14:05,890
services sorry which is they do things

00:14:02,710 --> 00:14:09,340
like store the data but they also do

00:14:05,890 --> 00:14:11,470
what's called joining a joining server

00:14:09,340 --> 00:14:13,690
where they check to see if the device

00:14:11,470 --> 00:14:16,840
that's trying to send the data can they

00:14:13,690 --> 00:14:20,440
send that should do we allow them so all

00:14:16,840 --> 00:14:25,780
of those things are just normal programs

00:14:20,440 --> 00:14:27,730
in the web and of course our life is a

00:14:25,780 --> 00:14:32,170
lot easier because of that red layer

00:14:27,730 --> 00:14:34,240
which is a PI command micro Python make

00:14:32,170 --> 00:14:42,160
it much easier to communicate to that

00:14:34,240 --> 00:14:46,270
stack okay something else about Laura

00:14:42,160 --> 00:14:48,700
when is the topology of Laura when is

00:14:46,270 --> 00:14:51,190
that you've got a star network and the

00:14:48,700 --> 00:14:56,550
idea there is is that you have a central

00:14:51,190 --> 00:15:00,520
server in this case it's our gateway and

00:14:56,550 --> 00:15:05,590
we all connect with a single hop to the

00:15:00,520 --> 00:15:08,740
to the gateway so and then the gateways

00:15:05,590 --> 00:15:11,590
are connected to the Internet so that's

00:15:08,740 --> 00:15:17,140
called a star network and so here's

00:15:11,590 --> 00:15:19,120
here's an example of three different

00:15:17,140 --> 00:15:21,390
modules communicating to a single

00:15:19,120 --> 00:15:23,560
gateway and then that gateways

00:15:21,390 --> 00:15:25,240
communicating to the Internet and the

00:15:23,560 --> 00:15:28,840
network servers and now I've actually

00:15:25,240 --> 00:15:30,730
got a picture so it's a little nicer how

00:15:28,840 --> 00:15:33,520
the gateway connects to the Internet by

00:15:30,730 --> 00:15:36,640
the way it

00:15:33,520 --> 00:15:37,480
it can use a wireless method itself if

00:15:36,640 --> 00:15:39,490
it needs to

00:15:37,480 --> 00:15:40,960
depending on how remote it is but

00:15:39,490 --> 00:15:43,390
typically what you'll have is you will

00:15:40,960 --> 00:15:45,460
have a gateway that's actually in the

00:15:43,390 --> 00:15:47,200
location where it's got power and it has

00:15:45,460 --> 00:15:49,450
connection to the internet a wired

00:15:47,200 --> 00:15:51,070
connection so that's that's quite

00:15:49,450 --> 00:15:54,190
typical but it doesn't have to be it

00:15:51,070 --> 00:15:58,810
could actually be using a mobile link it

00:15:54,190 --> 00:16:01,090
could be using anything something that's

00:15:58,810 --> 00:16:04,360
quite neat though is we were talking

00:16:01,090 --> 00:16:07,240
about a star network what happens if you

00:16:04,360 --> 00:16:10,780
have two gateways well you actually want

00:16:07,240 --> 00:16:14,020
more gateways for reliability so you

00:16:10,780 --> 00:16:17,040
would actually like your modules to to

00:16:14,020 --> 00:16:19,960
be received by multiple gateways so if

00:16:17,040 --> 00:16:24,940
one of them you don't quite reach you'll

00:16:19,960 --> 00:16:27,310
get the other and so in this case number

00:16:24,940 --> 00:16:28,330
three is only going to Gateway one

00:16:27,310 --> 00:16:31,510
because that's the only one that's

00:16:28,330 --> 00:16:34,630
reaching but one and two they don't

00:16:31,510 --> 00:16:40,110
decide they just transmit and both

00:16:34,630 --> 00:16:44,920
Gateway one and Gateway to receive and

00:16:40,110 --> 00:16:47,230
that's that's fine and the only thing

00:16:44,920 --> 00:16:49,780
that has to make a decision is if the

00:16:47,230 --> 00:16:52,150
Gateway wants to communicate back to one

00:16:49,780 --> 00:16:53,200
of the units it then has to decide like

00:16:52,150 --> 00:16:58,030
in this case here

00:16:53,200 --> 00:17:01,210
Pikul module two the Gateway and the

00:16:58,030 --> 00:17:03,340
network servers they decide which

00:17:01,210 --> 00:17:05,620
gateway to send the response through and

00:17:03,340 --> 00:17:08,410
they do that just by looking at the link

00:17:05,620 --> 00:17:11,860
quality so basically which one's closest

00:17:08,410 --> 00:17:13,900
they send back through it so they don't

00:17:11,860 --> 00:17:15,550
send through all the gateways and that's

00:17:13,900 --> 00:17:16,839
an optimization strategy because

00:17:15,550 --> 00:17:19,060
whenever anybody's sending their

00:17:16,839 --> 00:17:24,940
clobbering everyone else so we want to

00:17:19,060 --> 00:17:26,620
minimize that okay I'm going quite

00:17:24,940 --> 00:17:29,040
quickly but I've got a lot of slides

00:17:26,620 --> 00:17:33,040
just because I wasn't sure of the the

00:17:29,040 --> 00:17:35,530
knowledge levels but again ask me any

00:17:33,040 --> 00:17:38,140
sort of questions so I've mentioned the

00:17:35,530 --> 00:17:40,000
stack and we're probably used to stacks

00:17:38,140 --> 00:17:42,700
from all like other communications

00:17:40,000 --> 00:17:45,100
protocols and and such the same idea

00:17:42,700 --> 00:17:46,960
it's actually the part of the code that

00:17:45,100 --> 00:17:54,009
handles the protocol

00:17:46,960 --> 00:17:56,769
and just some background we have a a BSD

00:17:54,009 --> 00:17:58,809
licensed reference implementation that

00:17:56,769 --> 00:18:01,539
was originally done by sin Tech and now

00:17:58,809 --> 00:18:04,149
it's done by SEM Tech and stack force

00:18:01,539 --> 00:18:06,129
and it's currently at a version 4.4.2

00:18:04,149 --> 00:18:08,679
and the only reason why I mention that

00:18:06,129 --> 00:18:10,749
is if you start to talk to network

00:18:08,679 --> 00:18:11,080
providers think I'm saying oh what you

00:18:10,749 --> 00:18:15,159
know

00:18:11,080 --> 00:18:17,200
are you using 4.4 or up and that's and

00:18:15,159 --> 00:18:20,379
it's just because the the actual

00:18:17,200 --> 00:18:23,169
protocol has expanded over time so you

00:18:20,379 --> 00:18:26,759
have to make sure that you're using a

00:18:23,169 --> 00:18:26,759
high enough protocol that the network

00:18:27,119 --> 00:18:31,450
supports or expects that's a better way

00:18:29,919 --> 00:18:34,720
of saying it

00:18:31,450 --> 00:18:37,570
and PI comm itself periodically syncs

00:18:34,720 --> 00:18:42,389
with this with the development that's

00:18:37,570 --> 00:18:45,190
being done on this this reference stack

00:18:42,389 --> 00:18:49,090
now we also have heaps of how am i doing

00:18:45,190 --> 00:18:50,470
we have heaps of standards that's the

00:18:49,090 --> 00:18:53,619
thing about standards you've got so many

00:18:50,470 --> 00:18:56,499
to choose from and in this case there's

00:18:53,619 --> 00:18:58,869
a one point zero one Laura when that I

00:18:56,499 --> 00:19:01,419
thinks about three years old now there's

00:18:58,869 --> 00:19:05,230
a zero to zero three and a one point one

00:19:01,419 --> 00:19:07,960
the problem is is that most gateways are

00:19:05,230 --> 00:19:11,200
only supporting the one point zero one

00:19:07,960 --> 00:19:15,220
or one point zero two so it's a

00:19:11,200 --> 00:19:19,210
something you could get caught with okay

00:19:15,220 --> 00:19:21,249
on this whirlwind tour another thing

00:19:19,210 --> 00:19:24,309
that you will hear about is joining a

00:19:21,249 --> 00:19:29,799
network and the idea of joining a

00:19:24,309 --> 00:19:33,999
network is authenticated yourself to the

00:19:29,799 --> 00:19:37,360
to the Gateway and the network services

00:19:33,999 --> 00:19:39,909
and exchanging keys it's a key exchange

00:19:37,360 --> 00:19:43,210
so they can say no we don't want you or

00:19:39,909 --> 00:19:46,090
we do and and exchange keys so that

00:19:43,210 --> 00:19:48,220
everything's encrypted so there's two

00:19:46,090 --> 00:19:52,179
different ways of doing that one's

00:19:48,220 --> 00:19:55,269
called over-the-air activation OTA a and

00:19:52,179 --> 00:19:58,600
the others called authentication by

00:19:55,269 --> 00:20:00,730
personalization and the difference is is

00:19:58,600 --> 00:20:03,929
that the OTA a

00:20:00,730 --> 00:20:09,520
you're able to manufacture your devices

00:20:03,929 --> 00:20:11,770
with the same keys in it so it's the you

00:20:09,520 --> 00:20:15,429
have these application keys that you put

00:20:11,770 --> 00:20:19,140
in it and but the very first time when

00:20:15,429 --> 00:20:22,059
you join the network services have to

00:20:19,140 --> 00:20:25,450
check that so there's some queries back

00:20:22,059 --> 00:20:28,330
to some computer somewhere so it takes a

00:20:25,450 --> 00:20:33,669
bit of time it takes typically it takes

00:20:28,330 --> 00:20:36,700
five six seconds so some people don't

00:20:33,669 --> 00:20:41,429
like OTA a because of that because there

00:20:36,700 --> 00:20:47,770
is a faster way which is the a B a B P

00:20:41,429 --> 00:20:50,169
but to use that you have to pre pre

00:20:47,770 --> 00:20:52,120
generate the keys and put a different

00:20:50,169 --> 00:20:54,970
set of keys and that were concession key

00:20:52,120 --> 00:20:57,640
in every device you put out there so

00:20:54,970 --> 00:20:59,380
it's it's quite fragile doing it that

00:20:57,640 --> 00:21:01,510
way and the other thing and this is

00:20:59,380 --> 00:21:04,480
something when I was originally doing my

00:21:01,510 --> 00:21:05,770
my project I was thinking well six

00:21:04,480 --> 00:21:07,960
seconds that's too much because every

00:21:05,770 --> 00:21:11,980
time you start up there's an extra six

00:21:07,960 --> 00:21:14,409
seconds but the reality is is that it's

00:21:11,980 --> 00:21:16,840
only the first time because you cash the

00:21:14,409 --> 00:21:19,679
keys that you're given so the next time

00:21:16,840 --> 00:21:24,149
it's exactly the same as the

00:21:19,679 --> 00:21:28,179
authentication by personalization and

00:21:24,149 --> 00:21:32,789
here's the code to actually join with

00:21:28,179 --> 00:21:38,940
OTA a Wow that's not centered is it and

00:21:32,789 --> 00:21:43,840
you can see where we've got to app keys

00:21:38,940 --> 00:21:46,120
and notice on that Laura line that we're

00:21:43,840 --> 00:21:49,210
using mode Laura Laura went so this is

00:21:46,120 --> 00:21:50,799
saying use the whole stack and then the

00:21:49,210 --> 00:21:54,309
other interesting thing there is the

00:21:50,799 --> 00:21:57,940
caching so so the Laura module on PyCon

00:21:54,309 --> 00:22:02,140
has an NVRAM save and restore function

00:21:57,940 --> 00:22:04,809
and so this this code just this amount

00:22:02,140 --> 00:22:05,890
of code will actually say if I've

00:22:04,809 --> 00:22:09,250
already cached it

00:22:05,890 --> 00:22:11,980
I don't need to actually do the join if

00:22:09,250 --> 00:22:14,000
I haven't cashed it do the join and then

00:22:11,980 --> 00:22:15,170
that takes a bit of time and

00:22:14,000 --> 00:22:17,030
but the thing that you have to remember

00:22:15,170 --> 00:22:20,660
to do is before you go to sleep

00:22:17,030 --> 00:22:22,490
save the Laura and vram or else it won't

00:22:20,660 --> 00:22:26,360
work so that's that's another gotcha

00:22:22,490 --> 00:22:28,280
that that's quite easy to to overlook

00:22:26,360 --> 00:22:30,800
and the other question is where do you

00:22:28,280 --> 00:22:33,740
actually get these these keys like those

00:22:30,800 --> 00:22:38,150
app keys well this is specific to

00:22:33,740 --> 00:22:39,740
whichever network you're using so an

00:22:38,150 --> 00:22:43,910
example of a network is the things

00:22:39,740 --> 00:22:48,250
network so and it's great I really like

00:22:43,910 --> 00:22:48,250
the things network one it's free and

00:22:50,770 --> 00:22:58,280
easy to use so so yeah so it's just

00:22:56,120 --> 00:23:03,140
through the web I'm running a bit low on

00:22:58,280 --> 00:23:05,330
time so I'm just gonna okay something

00:23:03,140 --> 00:23:11,630
else that you might hear about is these

00:23:05,330 --> 00:23:14,420
Laura Wang classes so the basically I

00:23:11,630 --> 00:23:20,030
only worry about Class A because Class A

00:23:14,420 --> 00:23:22,190
is the lowest power class and just to

00:23:20,030 --> 00:23:24,350
show you what that looks like the idea

00:23:22,190 --> 00:23:26,780
of Class A is that when you do a

00:23:24,350 --> 00:23:30,100
transmission you can only receive a

00:23:26,780 --> 00:23:34,130
transmission down downlink transmission

00:23:30,100 --> 00:23:36,320
at a time like this receives slot one

00:23:34,130 --> 00:23:39,590
and receives slot two those are windows

00:23:36,320 --> 00:23:43,250
for when the Gateway can communicate

00:23:39,590 --> 00:23:46,190
back to you so and that's the only time

00:23:43,250 --> 00:23:49,190
so you can sleep every time except for

00:23:46,190 --> 00:23:51,410
that and reduce your power you reduce

00:23:49,190 --> 00:23:54,140
your power usage save your battery so

00:23:51,410 --> 00:23:57,440
that's Class A Class B and Class C they

00:23:54,140 --> 00:23:59,300
just provide for more opportunity for

00:23:57,440 --> 00:24:04,070
the the network services and the Gateway

00:23:59,300 --> 00:24:08,510
to communicate to you so but from a IOT

00:24:04,070 --> 00:24:11,240
or Internet of Things thing I really

00:24:08,510 --> 00:24:14,720
want it to be as fast and as low power

00:24:11,240 --> 00:24:18,050
as possible messages I'm going to skip

00:24:14,720 --> 00:24:20,810
that it's just basically uplink is what

00:24:18,050 --> 00:24:23,060
you send to the gateway downlink is what

00:24:20,810 --> 00:24:26,820
comes back to you one interesting thing

00:24:23,060 --> 00:24:29,130
though is that there's counters there's

00:24:26,820 --> 00:24:32,370
counters which have to always increase

00:24:29,130 --> 00:24:34,259
if not the message is thrown out and

00:24:32,370 --> 00:24:39,720
this is a way to stop from replay

00:24:34,259 --> 00:24:41,669
attacks which means that Laura nvram

00:24:39,720 --> 00:24:43,649
save is really useful because it stores

00:24:41,669 --> 00:24:45,509
your counters and when you restore it

00:24:43,649 --> 00:24:49,159
you get the counters the way they were

00:24:45,509 --> 00:24:49,159
so you can just keep incrementing them

00:24:49,250 --> 00:24:56,429
okay that's an important point okay

00:24:53,250 --> 00:24:59,610
here's the I'm going to go over a bit

00:24:56,429 --> 00:25:02,490
and and answer questions later one of

00:24:59,610 --> 00:25:06,779
the big problems I found was that what

00:25:02,490 --> 00:25:08,460
people didn't realize is that you have

00:25:06,779 --> 00:25:10,379
to make sure that what the Gateway is

00:25:08,460 --> 00:25:13,860
listening on is what you transmit on

00:25:10,379 --> 00:25:16,710
that's that's you know a no-brainer

00:25:13,860 --> 00:25:18,019
but we have these regions where

00:25:16,710 --> 00:25:20,789
different regions have different

00:25:18,019 --> 00:25:22,980
frequencies that they'll be listening to

00:25:20,789 --> 00:25:27,409
so you have to be aware of that when you

00:25:22,980 --> 00:25:29,850
set up your device so that it's actually

00:25:27,409 --> 00:25:33,360
transmitting on the same frequencies

00:25:29,850 --> 00:25:36,870
that the gateways are listening to now

00:25:33,360 --> 00:25:41,279
in Australia we use the au nine one five

00:25:36,870 --> 00:25:42,720
and the a s nine two three two different

00:25:41,279 --> 00:25:45,029
ones and again you need to know what

00:25:42,720 --> 00:25:48,269
your your network provider like who's

00:25:45,029 --> 00:25:50,850
providing the gateways to you uses but

00:25:48,269 --> 00:25:55,879
we have another problem with the au nine

00:25:50,850 --> 00:25:55,879
one five it actually defines 72 channels

00:25:56,210 --> 00:26:06,840
so with the 72 channels you yes so but

00:26:05,309 --> 00:26:08,490
the problem is is that the hardware in

00:26:06,840 --> 00:26:12,870
the gateways typically only listen to

00:26:08,490 --> 00:26:15,750
nine so you could be transmitting on all

00:26:12,870 --> 00:26:19,379
of these channels and you just keep

00:26:15,750 --> 00:26:21,360
getting dropped packets and so here's a

00:26:19,379 --> 00:26:25,139
bit of Laura code that actually says

00:26:21,360 --> 00:26:30,750
okay we only use channels 8 to 15 and

00:26:25,139 --> 00:26:37,139
channel 65 so anyways I've I've run out

00:26:30,750 --> 00:26:40,620
of time a bit but my plea is fair use

00:26:37,139 --> 00:26:42,600
and the idea of that is is that I

00:26:40,620 --> 00:26:44,040
we want to scale up we want to have you

00:26:42,600 --> 00:26:46,650
know tens of thousands of these devices

00:26:44,040 --> 00:26:49,680
and the only way we can do it is by

00:26:46,650 --> 00:26:52,770
making sure that we are transmitting as

00:26:49,680 --> 00:26:56,610
little as possible and so here's some

00:26:52,770 --> 00:26:58,320
some things that you can do you can you

00:26:56,610 --> 00:26:59,790
want your data rate to be as fast as

00:26:58,320 --> 00:27:03,840
possible which is something you can tune

00:26:59,790 --> 00:27:07,170
in Laura so it reduces the time that

00:27:03,840 --> 00:27:09,150
you're on air you want to leave as much

00:27:07,170 --> 00:27:12,150
time between transmitting as is

00:27:09,150 --> 00:27:15,420
practical and do you really need confirm

00:27:12,150 --> 00:27:17,910
transmit try not to need that one way is

00:27:15,420 --> 00:27:20,610
to have your application be able to take

00:27:17,910 --> 00:27:22,050
downlink messages just to say to resend

00:27:20,610 --> 00:27:27,960
a frame then you don't have to have the

00:27:22,050 --> 00:27:31,500
confirmation so ah I said it was gonna

00:27:27,960 --> 00:27:33,750
be a bit of a whirlwind and yeah all

00:27:31,500 --> 00:27:37,110
I've got some references these this will

00:27:33,750 --> 00:27:41,010
obviously be up on the web so you can

00:27:37,110 --> 00:27:46,230
have a look at that but some references

00:27:41,010 --> 00:27:50,630
and some thanks hi comm micro Python the

00:27:46,230 --> 00:27:52,710
Sun tech stack maintainer z-- PyCon au

00:27:50,630 --> 00:27:56,390
2018 and the people that actually paid

00:27:52,710 --> 00:27:56,390
for my work thank you

00:28:01,700 --> 00:28:19,830
sorry would you like to take sure oh

00:28:09,840 --> 00:28:21,659
please this is mainly on the hardware do

00:28:19,830 --> 00:28:24,090
you know if it those modules actually

00:28:21,659 --> 00:28:26,570
support mesh networks or is it just

00:28:24,090 --> 00:28:30,960
start apology

00:28:26,570 --> 00:28:33,899
Laura can use us a mesh network and in

00:28:30,960 --> 00:28:36,179
fact Paco ms has brought in a mesh

00:28:33,899 --> 00:28:39,059
network but it is not strictly Laurel

00:28:36,179 --> 00:28:42,240
and like so Laura when is Israeli the

00:28:39,059 --> 00:28:44,130
protocols and the the point of Laura

00:28:42,240 --> 00:28:46,409
when was that you actually had a single

00:28:44,130 --> 00:28:48,360
hop because as soon as you'd do multiple

00:28:46,409 --> 00:28:51,600
hops it means more transmission so

00:28:48,360 --> 00:28:52,919
what's better is to get more gateways so

00:28:51,600 --> 00:28:54,630
that you actually connect to at least

00:28:52,919 --> 00:28:58,260
one gateway with a single hop that's

00:28:54,630 --> 00:29:00,210
that's actually a better investment so

00:28:58,260 --> 00:29:02,039
so yeah mesh exists but it's only

00:29:00,210 --> 00:29:19,279
currently used at lower level it that's

00:29:02,039 --> 00:29:22,370
not in the Laura wham spec definitely oh

00:29:19,279 --> 00:29:22,370
thank you

00:29:24,080 --> 00:29:28,720

YouTube URL: https://www.youtube.com/watch?v=L-fh7PSpPMc


