Title: Automating Your Home with Python, Raspberry Pi and Homekit
Publication date: 2018-08-26
Playlist: PyCon Australia 2018
Description: 
	Sean Johnson

https://2018.pycon-au.org/talks/45170-automating-your-home-with-python-raspberry-pi-and-homekit/

It's forty degrees and you're on your way home in the sweltering Australian heat. Home awaits but it too has been baking in the sun all day. That's okay, though! You open your iPhone, tap a button and your air conditioner whirs into action, powered by your Python code and your trusty Raspberry Pi.

Python, PyCon, PyConAU, australia, programming, sydney

This video is licensed under CC BY 3.0 AU - https://creativecommons.org/licenses/by/3.0/au/

PyCon Australia (“PyCon AU”) is the national conference for the Python Programming Community, bringing together professional, student and enthusiast developers with a love for developing with Python.

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 24 - 28 2018.

Python, PyCon, PyConAU
Captions: 
	00:00:00,709 --> 00:00:04,710
thank her for everyone come to this next

00:00:02,939 --> 00:00:06,210
session we just learned about automating

00:00:04,710 --> 00:00:07,350
the workplace with Python now we're

00:00:06,210 --> 00:00:16,970
gonna learn about automating your home

00:00:07,350 --> 00:00:20,220
with Sean thank you very much thank you

00:00:16,970 --> 00:00:23,640
hi I'm Sean goodness there's a lot of

00:00:20,220 --> 00:00:25,800
you so today I'm going to talk about

00:00:23,640 --> 00:00:30,119
automating your home with Python

00:00:25,800 --> 00:00:31,949
raspberry pi and home kits for those of

00:00:30,119 --> 00:00:34,260
you don't know me my name is Sean I'm a

00:00:31,949 --> 00:00:36,059
DevOps engineer for a fin tech company

00:00:34,260 --> 00:00:37,290
I've been doing automation engineering

00:00:36,059 --> 00:00:42,149
for the last little while at a couple

00:00:37,290 --> 00:00:47,190
different places gum tree I AG the NBN

00:00:42,149 --> 00:00:49,379
I'm sorry about that automation has

00:00:47,190 --> 00:00:55,500
really been like a thing in my life I

00:00:49,379 --> 00:00:57,510
don't like to do a lot of work so the

00:00:55,500 --> 00:00:58,680
main question is why on earth would

00:00:57,510 --> 00:01:01,949
anyone want to trust their house to the

00:00:58,680 --> 00:01:02,489
cloud for me my big thing when I came to

00:01:01,949 --> 00:01:04,409
Australia

00:01:02,489 --> 00:01:06,840
I'm originally from Canada when I left

00:01:04,409 --> 00:01:08,280
Vancouver it was - - I got here in

00:01:06,840 --> 00:01:11,729
December I didn't think it would be that

00:01:08,280 --> 00:01:13,470
bad it was 44 I spent the first couple

00:01:11,729 --> 00:01:15,360
of days you know just singing and

00:01:13,470 --> 00:01:17,220
sitting in the corner sweating and dying

00:01:15,360 --> 00:01:19,110
that kind of thing I thought alright you

00:01:17,220 --> 00:01:20,520
know we'll get some automation on top of

00:01:19,110 --> 00:01:24,780
this well we'll figure out like a nice

00:01:20,520 --> 00:01:27,259
way to do it that being said I don't

00:01:24,780 --> 00:01:30,150
really have that much IOT in my house

00:01:27,259 --> 00:01:32,549
our house is you know about 30 years old

00:01:30,150 --> 00:01:34,979
or so we have an aircon it works through

00:01:32,549 --> 00:01:37,079
infrared not really the sort of like

00:01:34,979 --> 00:01:38,630
automatable thing so I started taking a

00:01:37,079 --> 00:01:42,180
look around to see what the options were

00:01:38,630 --> 00:01:43,920
I had an iPhone they had announced hunk

00:01:42,180 --> 00:01:46,850
it recently seemed like a pretty good

00:01:43,920 --> 00:01:50,939
pic so the question is what is home kit

00:01:46,850 --> 00:01:53,250
home kit is basically a open ish

00:01:50,939 --> 00:01:55,159
standard from Apple they publish the

00:01:53,250 --> 00:01:57,390
specification for home kit accessories

00:01:55,159 --> 00:01:59,310
home kit accessories themselves are

00:01:57,390 --> 00:02:01,770
typically licensed things but there is

00:01:59,310 --> 00:02:04,469
the potential for people like you and me

00:02:01,770 --> 00:02:08,750
to do our own sort of unauthorized home

00:02:04,469 --> 00:02:11,099
kit accessories it's really a very

00:02:08,750 --> 00:02:12,560
apple-like service in that it is limited

00:02:11,099 --> 00:02:14,720
to say

00:02:12,560 --> 00:02:17,090
predefined set of accessories and

00:02:14,720 --> 00:02:18,349
services you're not given this kind of

00:02:17,090 --> 00:02:20,630
like full control that you are with

00:02:18,349 --> 00:02:22,910
other IOT systems it's not necessarily

00:02:20,630 --> 00:02:25,459
as flexible as something like Alexa but

00:02:22,910 --> 00:02:27,440
what it does do it does really well sort

00:02:25,459 --> 00:02:29,510
of really saw implementation it's got a

00:02:27,440 --> 00:02:31,190
bit of security built in and it's got

00:02:29,510 --> 00:02:34,280
the kind of stuff that you expect it's

00:02:31,190 --> 00:02:35,750
part of like a home automation system as

00:02:34,280 --> 00:02:38,060
part of that open spec there's quite a

00:02:35,750 --> 00:02:40,310
few open implementations the biggest one

00:02:38,060 --> 00:02:42,560
is a like I know JavaScript

00:02:40,310 --> 00:02:44,750
implementation on the Python side

00:02:42,560 --> 00:02:46,670
there's there's been a few efforts the

00:02:44,750 --> 00:02:50,540
one that I originally touched was called

00:02:46,670 --> 00:02:53,000
HAP Python home kits automation protocol

00:02:50,540 --> 00:02:56,299
Python when I first started this project

00:02:53,000 --> 00:02:57,860
a little while ago that library was

00:02:56,299 --> 00:03:00,040
super basic the code required to get

00:02:57,860 --> 00:03:02,720
everything working was pretty clunky

00:03:00,040 --> 00:03:05,000
after the last couple months or so

00:03:02,720 --> 00:03:06,650
especially since sort of getting this

00:03:05,000 --> 00:03:08,480
project up and running and ready for for

00:03:06,650 --> 00:03:09,980
delivery things have gotten really

00:03:08,480 --> 00:03:11,330
smooth to the point where I've got a

00:03:09,980 --> 00:03:13,040
little bit of code to demonstrate at the

00:03:11,330 --> 00:03:14,480
end the amount of code you need to write

00:03:13,040 --> 00:03:19,130
to get a home kit service up and running

00:03:14,480 --> 00:03:22,400
is almost nothing so in the home kit

00:03:19,130 --> 00:03:23,870
lens we've got accessories accessories

00:03:22,400 --> 00:03:26,660
are these kind of like common things

00:03:23,870 --> 00:03:28,730
you'd have in a house you're sort of

00:03:26,660 --> 00:03:30,260
standard things like lights switches it

00:03:28,730 --> 00:03:33,709
even does some fancy things like garage

00:03:30,260 --> 00:03:36,230
door openers it's got you know support

00:03:33,709 --> 00:03:39,310
for camera sensors these are all exposed

00:03:36,230 --> 00:03:41,810
as common services inside the home kit

00:03:39,310 --> 00:03:44,389
automation protocol and that's what

00:03:41,810 --> 00:03:50,109
we're gonna implement in in Python with

00:03:44,389 --> 00:03:52,870
the Python app I'm sorry - services are

00:03:50,109 --> 00:03:55,579
defined by things called characteristics

00:03:52,870 --> 00:03:58,190
characteristics are the sort of

00:03:55,579 --> 00:03:59,510
attributes of what a service means for

00:03:58,190 --> 00:04:02,000
something like a switch that's basically

00:03:59,510 --> 00:04:03,139
is it on is it off for something like a

00:04:02,000 --> 00:04:05,120
thermostat what's the current

00:04:03,139 --> 00:04:08,900
temperature what's the target

00:04:05,120 --> 00:04:11,420
temperature there's sort of a split

00:04:08,900 --> 00:04:14,299
between what characteristics themselves

00:04:11,420 --> 00:04:16,120
can mean with the concept very similar

00:04:14,299 --> 00:04:18,950
to synchronous and asynchronous

00:04:16,120 --> 00:04:20,299
attributes a synchronous attribute is

00:04:18,950 --> 00:04:21,890
something where you set it and that it

00:04:20,299 --> 00:04:24,320
immediately the case something like you

00:04:21,890 --> 00:04:25,510
know I turn my fan on to 100% boom

00:04:24,320 --> 00:04:28,750
that's done there's no sort of

00:04:25,510 --> 00:04:29,950
in between with our thermostats there's

00:04:28,750 --> 00:04:31,510
something the the current temperature

00:04:29,950 --> 00:04:33,670
and the target temperature just because

00:04:31,510 --> 00:04:35,350
I've set my AC to like 24 degrees it

00:04:33,670 --> 00:04:38,350
doesn't mean it's gonna be 24 degrees

00:04:35,350 --> 00:04:41,890
away or right away there's a sort of

00:04:38,350 --> 00:04:44,320
build up period in between that on the

00:04:41,890 --> 00:04:47,290
automation side there's something called

00:04:44,320 --> 00:04:48,670
the home app there support natively

00:04:47,290 --> 00:04:51,130
coming to the OS I think in the next

00:04:48,670 --> 00:04:52,510
sort of release of OS X but for the most

00:04:51,130 --> 00:04:55,200
part most of this stuff is done through

00:04:52,510 --> 00:04:57,880
your iOS device or your Apple TV device

00:04:55,200 --> 00:05:01,210
these allow sort of like manual and

00:04:57,880 --> 00:05:02,560
automatic control of your devices one of

00:05:01,210 --> 00:05:05,190
the really nice things that they offer

00:05:02,560 --> 00:05:07,570
is sort of a automation based on events

00:05:05,190 --> 00:05:10,300
if you really want to get specific with

00:05:07,570 --> 00:05:12,100
how your automation is set up you can do

00:05:10,300 --> 00:05:15,010
things like hey when I get home turn my

00:05:12,100 --> 00:05:17,380
air con on with there's no one left in

00:05:15,010 --> 00:05:20,220
the house for motion sensors you know

00:05:17,380 --> 00:05:22,540
kill the AC all that kind of fun stuff

00:05:20,220 --> 00:05:24,550
by default if you're just connecting

00:05:22,540 --> 00:05:26,860
from a device like your your local

00:05:24,550 --> 00:05:28,750
iPhone or your local iPad that's only

00:05:26,860 --> 00:05:31,030
available when you're physically in the

00:05:28,750 --> 00:05:32,680
house they do offer a sort of a remote

00:05:31,030 --> 00:05:34,810
bridge functionality but it does require

00:05:32,680 --> 00:05:37,330
some sort of dedicated hardware they

00:05:34,810 --> 00:05:38,710
given you a couple options for that the

00:05:37,330 --> 00:05:40,600
most common one that people have is

00:05:38,710 --> 00:05:42,340
typically like the Apple TV see if

00:05:40,600 --> 00:05:43,930
you've got an Apple TV at home when you

00:05:42,340 --> 00:05:47,440
ping a home automation that's able to

00:05:43,930 --> 00:05:49,900
handle it for you the few of you who may

00:05:47,440 --> 00:05:52,570
have bought that like $600 giant tube

00:05:49,900 --> 00:05:55,120
speaker the home pod that's also an

00:05:52,570 --> 00:05:56,590
option and there's also kind of a neat

00:05:55,120 --> 00:05:59,050
option where if you've just got an iPad

00:05:56,590 --> 00:06:01,420
running a relatively recent version of

00:05:59,050 --> 00:06:02,920
iOS if that's at home and plugged in it

00:06:01,420 --> 00:06:08,170
will gladly operate as a home care

00:06:02,920 --> 00:06:10,470
bridge so we've got the mechanisms to

00:06:08,170 --> 00:06:12,720
kind of invoke these homekit protocols

00:06:10,470 --> 00:06:15,100
what we need on the other side is

00:06:12,720 --> 00:06:17,830
something to to physically make those

00:06:15,100 --> 00:06:19,240
things happen now the program from Apple

00:06:17,830 --> 00:06:21,700
has been around for a long time there's

00:06:19,240 --> 00:06:25,570
all sorts of pre-existing products for

00:06:21,700 --> 00:06:26,890
that you can even go to Ikea now to

00:06:25,570 --> 00:06:30,100
spend thirty bucks you get yourself a

00:06:26,890 --> 00:06:31,900
nice IOT lightbulb me I like things sort

00:06:30,100 --> 00:06:33,910
of like manually controlled like I said

00:06:31,900 --> 00:06:34,960
I've got a air conditioner already I

00:06:33,910 --> 00:06:37,180
don't want to drop another five grand

00:06:34,960 --> 00:06:39,040
whatever to get like a Wi-Fi enabled one

00:06:37,180 --> 00:06:42,700
that allows someone from the internet

00:06:39,040 --> 00:06:43,900
you know flick it on and off so we're

00:06:42,700 --> 00:06:46,750
really looking for something that we can

00:06:43,900 --> 00:06:48,940
own and enable as part of that the

00:06:46,750 --> 00:06:50,950
Raspberry Pi I know there's been a lot

00:06:48,940 --> 00:06:52,810
of talks today about the micro micro

00:06:50,950 --> 00:06:55,660
Python thing those implementations are

00:06:52,810 --> 00:06:57,550
awesome for me I'm terrible that kind of

00:06:55,660 --> 00:06:59,590
thing I really want something that kind

00:06:57,550 --> 00:07:00,730
of works out of the box something that

00:06:59,590 --> 00:07:03,700
works for me and something I can write

00:07:00,730 --> 00:07:06,070
native Python on the Raspberry Pi fits a

00:07:03,700 --> 00:07:07,660
lot of those kind of needs especially

00:07:06,070 --> 00:07:10,990
when it comes to the sort of basic

00:07:07,660 --> 00:07:12,400
electrical automation one of the nice

00:07:10,990 --> 00:07:14,500
things you get as part of that Linux

00:07:12,400 --> 00:07:16,480
ecosystem is a system called LIRR see

00:07:14,500 --> 00:07:21,370
that's the Linux infrared something

00:07:16,480 --> 00:07:22,960
something that basically is like a super

00:07:21,370 --> 00:07:25,720
standard set of operating remote

00:07:22,960 --> 00:07:28,780
controls it can do I are receiving it

00:07:25,720 --> 00:07:31,660
can do IR transmitting one of the fun

00:07:28,780 --> 00:07:33,700
things about infrared is that the

00:07:31,660 --> 00:07:36,220
protocol for turning your TV on and off

00:07:33,700 --> 00:07:37,930
that's pretty standard the protocol for

00:07:36,220 --> 00:07:40,030
turning your air conditioner on/off or

00:07:37,930 --> 00:07:41,650
any other kind of appliance that's up to

00:07:40,030 --> 00:07:43,480
the manufacturer there are some

00:07:41,650 --> 00:07:45,880
commonalities between all the remotes

00:07:43,480 --> 00:07:48,310
but there's a huge range of stuff that

00:07:45,880 --> 00:07:49,600
can be fired out some remotes every time

00:07:48,310 --> 00:07:51,850
you push a button or sending a full

00:07:49,600 --> 00:07:55,330
stack of state some of them are only

00:07:51,850 --> 00:07:56,590
sending intermittent states debugging

00:07:55,330 --> 00:07:58,300
that sort of thing on lower level

00:07:56,590 --> 00:08:01,570
hardware is really painful that's why I

00:07:58,300 --> 00:08:03,850
really like El IRC you can kind of troll

00:08:01,570 --> 00:08:05,320
through github to find other people who

00:08:03,850 --> 00:08:07,360
have configurations for your remote

00:08:05,320 --> 00:08:09,760
that's the one thing that really clicked

00:08:07,360 --> 00:08:13,750
for me I spent ages trying to do the

00:08:09,760 --> 00:08:15,130
manual debugging and reversing of my air

00:08:13,750 --> 00:08:17,500
conditioner remote control with an

00:08:15,130 --> 00:08:19,000
Arduino I had a little higher sensor

00:08:17,500 --> 00:08:22,360
hooked up to it trying to capture data

00:08:19,000 --> 00:08:24,610
pick it apart that eventually I look on

00:08:22,360 --> 00:08:26,170
on github someone with the same AC

00:08:24,610 --> 00:08:27,940
remote has already dropped in a config

00:08:26,170 --> 00:08:30,250
so they've already gone and done the

00:08:27,940 --> 00:08:32,560
like you know proper debugging of it I

00:08:30,250 --> 00:08:35,669
can drop that into my little raspberry

00:08:32,560 --> 00:08:41,020
pi and then I've got a series of outputs

00:08:35,669 --> 00:08:42,669
for that so on that infrared LRC stuff

00:08:41,020 --> 00:08:44,110
out of the box there's a huge amount of

00:08:42,669 --> 00:08:45,550
support for infrared transmitters and

00:08:44,110 --> 00:08:48,100
receivers if you want to automate

00:08:45,550 --> 00:08:49,900
something that isn't your air

00:08:48,100 --> 00:08:51,520
conditioner or is like a TV all that

00:08:49,900 --> 00:08:53,430
kind of stuff that's easily to drop easy

00:08:51,520 --> 00:08:55,930
to drop out of the box

00:08:53,430 --> 00:08:57,070
and like I said there's a sort of huge

00:08:55,930 --> 00:09:00,580
wealth for existing automation

00:08:57,070 --> 00:09:02,410
configurations so with what the means to

00:09:00,580 --> 00:09:05,050
fire off infrared signals we've got a

00:09:02,410 --> 00:09:06,790
protocol for connecting to that and

00:09:05,050 --> 00:09:09,180
we've got a home automation control

00:09:06,790 --> 00:09:12,430
system as part of the little home app

00:09:09,180 --> 00:09:13,029
let's build an accessory what does that

00:09:12,430 --> 00:09:16,120
involve

00:09:13,029 --> 00:09:17,350
well for HAP Python we have to do a

00:09:16,120 --> 00:09:19,720
couple things we have to build something

00:09:17,350 --> 00:09:21,610
called an accessory driver an accessory

00:09:19,720 --> 00:09:23,860
driver is some logic that sits on the

00:09:21,610 --> 00:09:27,910
little box that says hey this is how I

00:09:23,860 --> 00:09:30,130
connect to the network the home kit

00:09:27,910 --> 00:09:32,290
automation protocol has a bunch of stuff

00:09:30,130 --> 00:09:34,420
built into it that is sort of a you know

00:09:32,290 --> 00:09:35,649
must be this tall to control devices it

00:09:34,420 --> 00:09:38,620
handles things for you like you know

00:09:35,649 --> 00:09:40,209
security pins making sure that only

00:09:38,620 --> 00:09:42,310
authorized people can can talk to that

00:09:40,209 --> 00:09:44,589
service and handles all the kind of

00:09:42,310 --> 00:09:47,040
incoming requests from say iCloud if

00:09:44,589 --> 00:09:49,600
it's coming from a third third party

00:09:47,040 --> 00:09:50,920
after we do that we create our accessory

00:09:49,600 --> 00:09:55,180
that's basically just defining the

00:09:50,920 --> 00:09:56,290
accessory itself that's pretty much

00:09:55,180 --> 00:09:57,850
taking one of those pre-existing

00:09:56,290 --> 00:09:59,470
services that we saw before and

00:09:57,850 --> 00:10:02,529
configuring the configure the

00:09:59,470 --> 00:10:04,029
characteristics of it when we set up our

00:10:02,529 --> 00:10:06,550
characteristics there's a bunch of work

00:10:04,029 --> 00:10:08,980
we need to do in inside that Python

00:10:06,550 --> 00:10:10,480
class sort of normal setup that you've

00:10:08,980 --> 00:10:14,620
got for an IOT where you're setting

00:10:10,480 --> 00:10:17,770
setters getters because you're not using

00:10:14,620 --> 00:10:20,020
a system that's externally pickable you

00:10:17,770 --> 00:10:21,370
have to manage your own state there's

00:10:20,020 --> 00:10:23,410
some stuff where we have to consider you

00:10:21,370 --> 00:10:25,779
know what state do we have last so we're

00:10:23,410 --> 00:10:27,910
sending the right IR command making sure

00:10:25,779 --> 00:10:30,130
that we're always sending the right full

00:10:27,910 --> 00:10:31,900
set of states like I said before that

00:10:30,130 --> 00:10:34,230
air conditioner control is sending a

00:10:31,900 --> 00:10:36,610
full amount of state every time if I'm

00:10:34,230 --> 00:10:37,990
trying to update the temperature and I'm

00:10:36,610 --> 00:10:40,930
firing off a command that switches it to

00:10:37,990 --> 00:10:42,310
heat I'm gonna have a bad time and then

00:10:40,930 --> 00:10:44,290
we need to fire off the driver this is

00:10:42,310 --> 00:10:47,200
basically a daemon that lives on the

00:10:44,290 --> 00:10:49,720
device itself this will handle the

00:10:47,200 --> 00:10:53,860
incoming requests from your home kits

00:10:49,720 --> 00:10:55,839
applications so I mean that sounds easy

00:10:53,860 --> 00:10:57,250
enough right air conditioner it was in

00:10:55,839 --> 00:11:01,660
the list of services I can just start

00:10:57,250 --> 00:11:03,550
start going from the get-go so we take a

00:11:01,660 --> 00:11:06,100
look here this is basically a big list

00:11:03,550 --> 00:11:06,870
of all the services available there's no

00:11:06,100 --> 00:11:09,700
air conditioner

00:11:06,870 --> 00:11:11,140
what am I supposed to do Steve Jobs

00:11:09,700 --> 00:11:17,470
Johnny I've they said it would work

00:11:11,140 --> 00:11:19,600
right I saw it it's in the list now it's

00:11:17,470 --> 00:11:21,280
not in the list of actual services one

00:11:19,600 --> 00:11:23,530
of the things about homekit is because

00:11:21,280 --> 00:11:26,020
it's the set of robust well-defined

00:11:23,530 --> 00:11:27,280
services when you're creating custom

00:11:26,020 --> 00:11:29,560
things sometimes you have to kind of

00:11:27,280 --> 00:11:32,320
piece these together now because

00:11:29,560 --> 00:11:38,170
Microsoft is not a sponsor today we can

00:11:32,320 --> 00:11:40,240
cut out Windows so an air conditioner is

00:11:38,170 --> 00:11:45,970
basically a thermostat control plus a

00:11:40,240 --> 00:11:47,770
fan makes an aircon what we basically

00:11:45,970 --> 00:11:50,410
need to do is create an accessory that

00:11:47,770 --> 00:11:51,940
has these two characteristics for each

00:11:50,410 --> 00:11:52,930
of these characteristics we need to make

00:11:51,940 --> 00:11:54,700
sure that we're setting getters and

00:11:52,930 --> 00:11:56,470
setters we need to make sure that we're

00:11:54,700 --> 00:11:58,300
maintaining the state and we need to

00:11:56,470 --> 00:12:00,070
make sure that when our home accessory

00:11:58,300 --> 00:12:02,470
protocol queries our state that we're

00:12:00,070 --> 00:12:03,790
giving back the right state this gets a

00:12:02,470 --> 00:12:06,460
little bit tricky so you need to make

00:12:03,790 --> 00:12:08,200
sure that whatever is coming in from the

00:12:06,460 --> 00:12:10,060
home accessory protocol you are clamping

00:12:08,200 --> 00:12:14,590
down to whatever makes sense for an air

00:12:10,060 --> 00:12:16,420
conditioner stuff like variable speed

00:12:14,590 --> 00:12:18,450
controls but to cover it in the sort of

00:12:16,420 --> 00:12:20,680
lessons learned

00:12:18,450 --> 00:12:22,420
variable speed controls don't map to

00:12:20,680 --> 00:12:24,700
what an air conditioner actually has air

00:12:22,420 --> 00:12:26,650
conditioner you know quiet low medium

00:12:24,700 --> 00:12:29,740
high everything that you're getting from

00:12:26,650 --> 00:12:31,870
the home accessory kit the protocol is

00:12:29,740 --> 00:12:35,350
basically a numeric value you need to

00:12:31,870 --> 00:12:37,000
clamp down those these kind of things

00:12:35,350 --> 00:12:40,060
are only as secure as your icloud

00:12:37,000 --> 00:12:43,450
control if you have home sharing with

00:12:40,060 --> 00:12:47,410
someone in your family or spouse at your

00:12:43,450 --> 00:12:48,820
house if you give them control to your

00:12:47,410 --> 00:12:51,190
home automation they can control it

00:12:48,820 --> 00:12:54,430
whatever they want I found that this out

00:12:51,190 --> 00:12:56,440
the hard way when my son decided he

00:12:54,430 --> 00:12:58,570
wanted to have a nice try of the new

00:12:56,440 --> 00:12:59,770
shiny button on the iPad and just spend

00:12:58,570 --> 00:13:01,840
about half an hour turning the air con

00:12:59,770 --> 00:13:04,390
off and on off and on well I'm sitting

00:13:01,840 --> 00:13:07,810
in the living room going like did I even

00:13:04,390 --> 00:13:09,160
mess something up in this system

00:13:07,810 --> 00:13:10,780
typically no one's gonna steal your data

00:13:09,160 --> 00:13:13,690
family might flick your lights on and

00:13:10,780 --> 00:13:17,770
off there's also some considerations

00:13:13,690 --> 00:13:19,810
around the system itself Siri has some

00:13:17,770 --> 00:13:20,350
interesting interpretations of what you

00:13:19,810 --> 00:13:22,240
want

00:13:20,350 --> 00:13:25,690
that voice control works with homekit

00:13:22,240 --> 00:13:28,740
but doesn't always have the exact

00:13:25,690 --> 00:13:31,420
ability to really guess what you need

00:13:28,740 --> 00:13:32,950
there's some options I'm sorry some

00:13:31,420 --> 00:13:35,620
interesting results that I've gotten out

00:13:32,950 --> 00:13:37,180
of this setting the Phantom acts there's

00:13:35,620 --> 00:13:41,080
no one named Santa max in your contact

00:13:37,180 --> 00:13:42,010
list set the fan to 25% I can't do that

00:13:41,080 --> 00:13:45,550
because I don't know what you mean by

00:13:42,010 --> 00:13:47,140
Fanta some of this stuff is because it

00:13:45,550 --> 00:13:49,090
doesn't if you don't maintain the state

00:13:47,140 --> 00:13:51,340
properly it doesn't really know what to

00:13:49,090 --> 00:13:53,500
do sometimes it doesn't have the proper

00:13:51,340 --> 00:13:55,750
consideration for what numbers mean like

00:13:53,500 --> 00:13:58,240
you know hey set the air conditioner too

00:13:55,750 --> 00:14:04,330
hot cool one degree Celsius I mean I'm

00:13:58,240 --> 00:14:06,940
from Canada but that's still cold other

00:14:04,330 --> 00:14:08,110
times there's issues where serum would

00:14:06,940 --> 00:14:09,970
just give you kind of like a random

00:14:08,110 --> 00:14:11,380
results I mean it's the result that you

00:14:09,970 --> 00:14:13,270
asked for but I may not necessarily be

00:14:11,380 --> 00:14:14,980
what you want Siri turn the air

00:14:13,270 --> 00:14:20,200
conditioner on high okay a hundred

00:14:14,980 --> 00:14:21,670
degrees Fahrenheit so with this kind of

00:14:20,200 --> 00:14:23,410
stuff if you temper sort of like what

00:14:21,670 --> 00:14:26,590
you expect out of a Siri everything else

00:14:23,410 --> 00:14:36,310
works works pretty well cool so let's

00:14:26,590 --> 00:14:39,100
dig into some some code here the HAP

00:14:36,310 --> 00:14:43,990
library itself is a pretty much like a

00:14:39,100 --> 00:14:45,190
one-man work of love it's been getting

00:14:43,990 --> 00:14:47,200
really good over the last little while

00:14:45,190 --> 00:14:49,090
when I cleaned up all this code I always

00:14:47,200 --> 00:14:51,010
came from an earlier version this stuff

00:14:49,090 --> 00:14:53,740
before it was lines and lines and lines

00:14:51,010 --> 00:14:56,020
of massive getters and setters now it's

00:14:53,740 --> 00:14:58,330
super clean so we basically do some

00:14:56,020 --> 00:15:01,060
basic stuff we import the high hat

00:14:58,330 --> 00:15:03,970
accessories we grab the category

00:15:01,060 --> 00:15:06,610
thermostat we set some basic logging

00:15:03,970 --> 00:15:08,620
because it's super handy to have that

00:15:06,610 --> 00:15:10,300
output from hap while you're kind of

00:15:08,620 --> 00:15:12,520
debugging I leave it on as normal

00:15:10,300 --> 00:15:15,370
because I find just having that log of

00:15:12,520 --> 00:15:16,720
stuff is really handy so we do some some

00:15:15,370 --> 00:15:19,720
basic stuff in Python we declare the

00:15:16,720 --> 00:15:21,940
class we're subclassing accessory so we

00:15:19,720 --> 00:15:24,010
need to set up a fan service so adding

00:15:21,940 --> 00:15:27,610
those pre-loaded services that we saw

00:15:24,010 --> 00:15:29,680
from that service list before as part of

00:15:27,610 --> 00:15:31,360
that we need to set some characteristics

00:15:29,680 --> 00:15:32,980
you don't have to use every single

00:15:31,360 --> 00:15:33,820
characteristic if you don't define a

00:15:32,980 --> 00:15:35,260
characteristic

00:15:33,820 --> 00:15:39,220
won't show up in the UI which is pretty

00:15:35,260 --> 00:15:41,470
handy fans themselves can have a couple

00:15:39,220 --> 00:15:42,700
optional characteristics one of which is

00:15:41,470 --> 00:15:44,590
rotation speed the other one has

00:15:42,700 --> 00:15:45,790
rotation angle if you're controlling

00:15:44,590 --> 00:15:46,750
something fancier and you want to give

00:15:45,790 --> 00:15:48,790
the conex wheel the left and right you

00:15:46,750 --> 00:15:50,170
got that option if you don't find the

00:15:48,790 --> 00:15:54,400
characteristic doesn't show up the UI

00:15:50,170 --> 00:16:00,820
pretty handy so we set our rotation

00:15:54,400 --> 00:16:03,430
speed configure the characteristic we do

00:16:00,820 --> 00:16:05,320
some setter and getter callbacks and

00:16:03,430 --> 00:16:07,270
then because we also want to draw the

00:16:05,320 --> 00:16:10,480
temperature in this service we add a

00:16:07,270 --> 00:16:11,470
pre-loaded service of thermostat now for

00:16:10,480 --> 00:16:13,090
the temperature you're always

00:16:11,470 --> 00:16:15,970
configuring and setting the target

00:16:13,090 --> 00:16:19,000
temperature generally because the

00:16:15,970 --> 00:16:20,710
invocation from these is expecting like

00:16:19,000 --> 00:16:23,440
a proper air conditioner with a proper

00:16:20,710 --> 00:16:24,850
queryable rest api those generally have

00:16:23,440 --> 00:16:26,950
life thermostats built in they can give

00:16:24,850 --> 00:16:28,840
feedback to it because we are just

00:16:26,950 --> 00:16:31,150
firing off IRS signals we don't have

00:16:28,840 --> 00:16:34,180
that ability if we wanted you know you

00:16:31,150 --> 00:16:37,110
pop on to any little part ordering site

00:16:34,180 --> 00:16:40,720
you can get a little thermostat reader

00:16:37,110 --> 00:16:44,230
for the Raspberry Pi it's about 5 bucks

00:16:40,720 --> 00:16:46,660
works pretty well yeah so we basically

00:16:44,230 --> 00:16:48,100
we're gonna always set that current

00:16:46,660 --> 00:16:51,400
temperature to whatever that target

00:16:48,100 --> 00:16:53,470
temperature was we bought some actions

00:16:51,400 --> 00:16:55,240
here where we're toggling the power I've

00:16:53,470 --> 00:16:56,680
got a little sort of wrapper library

00:16:55,240 --> 00:16:59,500
that I did for the aircon just to

00:16:56,680 --> 00:17:02,620
abstract out the the aircon stuff if you

00:16:59,500 --> 00:17:03,820
ever do Li RC before LRC has some

00:17:02,620 --> 00:17:06,490
command line options where you basically

00:17:03,820 --> 00:17:09,160
just fire off a command the people who

00:17:06,490 --> 00:17:11,500
generate your configs because you're not

00:17:09,160 --> 00:17:13,390
generating your IR codes on-the-fly they

00:17:11,500 --> 00:17:16,839
basically just give you a giant mapping

00:17:13,390 --> 00:17:19,449
of like you know hot on 20 degrees cool

00:17:16,839 --> 00:17:21,449
low 10 degrees all that kind of fun

00:17:19,449 --> 00:17:23,920
stuff so we basically just wrap around

00:17:21,449 --> 00:17:25,800
the the command line invocation of ir

00:17:23,920 --> 00:17:28,089
send and off we go

00:17:25,800 --> 00:17:31,500
you can see here to get power we need to

00:17:28,089 --> 00:17:34,630
return that state temperature

00:17:31,500 --> 00:17:37,720
characteristics have the option to

00:17:34,630 --> 00:17:40,570
notify notification means it'll fire the

00:17:37,720 --> 00:17:43,410
notification that that characteristic

00:17:40,570 --> 00:17:45,760
has updated back into the the protocol

00:17:43,410 --> 00:17:47,300
so for fan speed this is what I was

00:17:45,760 --> 00:17:49,590
talking about with with clamping

00:17:47,300 --> 00:17:50,760
because you're receiving raw values

00:17:49,590 --> 00:17:53,190
you're always going to have to clamp

00:17:50,760 --> 00:17:55,220
these down to something acceptable here

00:17:53,190 --> 00:17:57,360
we have a simple if statements which

00:17:55,220 --> 00:18:01,290
clamp it down to to whatever you want

00:17:57,360 --> 00:18:03,990
and then return the speed here's the the

00:18:01,290 --> 00:18:06,870
driver in it like I said this stuff is

00:18:03,990 --> 00:18:09,870
is super basic this is a functioning

00:18:06,870 --> 00:18:11,540
service almost out of the gate we attach

00:18:09,870 --> 00:18:14,220
the accessory driver to the driver

00:18:11,540 --> 00:18:19,500
driver add the accessory we also give it

00:18:14,220 --> 00:18:22,110
a couple signals the H ap the protocol

00:18:19,500 --> 00:18:24,060
has some niceties around it where it

00:18:22,110 --> 00:18:25,860
will monitor the status of your services

00:18:24,060 --> 00:18:27,540
so they're always being pinged when your

00:18:25,860 --> 00:18:29,340
services disconnect it wants to know

00:18:27,540 --> 00:18:31,050
about it adding these little handlers

00:18:29,340 --> 00:18:32,100
when you sig kill it just means it'll

00:18:31,050 --> 00:18:34,280
fire off a little message to say like

00:18:32,100 --> 00:18:40,020
hey you know aircon is not there anymore

00:18:34,280 --> 00:18:42,600
then we start the driver touch the

00:18:40,020 --> 00:18:44,040
aircon stuff so the aircon is just super

00:18:42,600 --> 00:18:46,110
basic you know we're doing a subprocess

00:18:44,040 --> 00:18:49,380
check output if you want to get fancier

00:18:46,110 --> 00:18:51,330
there are Li RC libraries for Python I

00:18:49,380 --> 00:18:52,380
wanted something that would just fire

00:18:51,330 --> 00:18:55,280
off commands because I wasn't doing

00:18:52,380 --> 00:18:57,450
anything special so there you go

00:18:55,280 --> 00:19:00,690
cool so that's kind of like a little

00:18:57,450 --> 00:19:07,860
walkthrough of the the code itself let's

00:19:00,690 --> 00:19:11,010
see if we can do a demo now the way this

00:19:07,860 --> 00:19:13,560
is working it's not great the the

00:19:11,010 --> 00:19:15,120
mirroring for the iOS is over a network

00:19:13,560 --> 00:19:16,260
cable which disables tethering which

00:19:15,120 --> 00:19:17,700
means you have to tether also with

00:19:16,260 --> 00:19:21,000
bluetooth because this requires network

00:19:17,700 --> 00:19:23,220
connectivity to work this should work if

00:19:21,000 --> 00:19:29,510
not no one else's demo is failed today

00:19:23,220 --> 00:19:31,770
maybe I'm the first we bought a little

00:19:29,510 --> 00:19:37,470
environment variable just to mark IRS

00:19:31,770 --> 00:19:39,270
end just this is for our testing so it

00:19:37,470 --> 00:19:42,240
goes and fires up the system gives you a

00:19:39,270 --> 00:19:47,240
super nice QR codes oh it's a little bit

00:19:42,240 --> 00:19:47,240
too big

00:19:50,030 --> 00:19:58,620
cool so we pick up our home connected

00:19:53,760 --> 00:20:06,030
device add an accessory pointed at this

00:19:58,620 --> 00:20:08,310
one uncertified accessory real home kit

00:20:06,030 --> 00:20:09,420
products have a license from Apple pay

00:20:08,310 --> 00:20:11,310
them a billion dollars we don't need to

00:20:09,420 --> 00:20:13,500
do that we just add a uncertified

00:20:11,310 --> 00:20:15,030
accessory there's no real security

00:20:13,500 --> 00:20:16,590
problem with this as long as you have

00:20:15,030 --> 00:20:18,710
the the pin covered up when you're doing

00:20:16,590 --> 00:20:21,930
it that pin is your security

00:20:18,710 --> 00:20:23,910
initialization between the two the Hat

00:20:21,930 --> 00:20:25,740
Python will save a state of that pairing

00:20:23,910 --> 00:20:27,870
into a little file called accessory dot

00:20:25,740 --> 00:20:28,920
state so every time you boot up it will

00:20:27,870 --> 00:20:32,490
remember that state and you'll have to

00:20:28,920 --> 00:20:40,050
do this pairing just once boom so we add

00:20:32,490 --> 00:20:41,760
it so we should start to see the pair

00:20:40,050 --> 00:20:43,890
verification here you get a little

00:20:41,760 --> 00:20:46,820
verification on the iOS service that

00:20:43,890 --> 00:20:49,530
says I hae identify these accessories

00:20:46,820 --> 00:20:51,210
this is part of the system with hap

00:20:49,530 --> 00:20:53,790
where you can kind of fire off commands

00:20:51,210 --> 00:20:55,670
your IOT stuff to identify them it's

00:20:53,790 --> 00:20:57,420
super handy if you've got multiple items

00:20:55,670 --> 00:20:58,860
when I was taking a look at the

00:20:57,420 --> 00:21:00,690
automated light bulb I just made it

00:20:58,860 --> 00:21:05,270
flicker whenever I hit identify identify

00:21:00,690 --> 00:21:09,540
you'll see little requests come up for

00:21:05,270 --> 00:21:12,750
those identification requests because we

00:21:09,540 --> 00:21:14,010
created two services the both those

00:21:12,750 --> 00:21:15,600
services will come up you'll see here

00:21:14,010 --> 00:21:20,160
we've got the default room air

00:21:15,600 --> 00:21:22,590
conditioner cool so now we've got two

00:21:20,160 --> 00:21:25,170
services available to us in in the home

00:21:22,590 --> 00:21:27,510
app there's some options we can do for

00:21:25,170 --> 00:21:33,810
that here all sorts of things that we

00:21:27,510 --> 00:21:36,210
can kind of set up so as you can see we

00:21:33,810 --> 00:21:39,540
get a rotation speed gradient from 24 up

00:21:36,210 --> 00:21:41,370
to 63 you need to clamp down on those I

00:21:39,540 --> 00:21:43,880
just kind of let it slide and my air

00:21:41,370 --> 00:21:46,590
conditioner beeps like five or six times

00:21:43,880 --> 00:21:48,050
if I had you know some more time I

00:21:46,590 --> 00:21:52,580
probably just make it wait a little bit

00:21:48,050 --> 00:21:52,580
all the details are available for here

00:21:54,140 --> 00:21:57,000
we have additionally got the temperature

00:21:55,980 --> 00:21:59,190
settings here

00:21:57,000 --> 00:22:01,460
fire up the temperature control all our

00:21:59,190 --> 00:22:01,460
modes

00:22:01,650 --> 00:22:07,380
we've will also go

00:22:03,060 --> 00:22:09,660
optional Siri integration like I said

00:22:07,380 --> 00:22:11,900
before the Siri integration sometimes

00:22:09,660 --> 00:22:20,520
it's great sometimes it's not so great

00:22:11,900 --> 00:22:24,210
let's give it a shot hey Siri oh sorry

00:22:20,520 --> 00:22:25,020
my son just named teddy and he's changed

00:22:24,210 --> 00:22:30,390
my name

00:22:25,020 --> 00:22:36,360
alright Siri can you turn the air

00:22:30,390 --> 00:22:38,880
conditioner off cool so we've received

00:22:36,360 --> 00:22:41,880
the notification here in our app

00:22:38,880 --> 00:22:44,660
protocol the air conditioner has has

00:22:41,880 --> 00:22:47,250
turned off we get a bunch of kind of

00:22:44,660 --> 00:22:49,140
pre-loaded actions with these so as long

00:22:47,250 --> 00:22:49,680
as Siri can kind of guesstimate what

00:22:49,140 --> 00:22:51,740
you're after

00:22:49,680 --> 00:22:54,150
you get pretty decent control with these

00:22:51,740 --> 00:22:56,610
you've also got control through the home

00:22:54,150 --> 00:22:59,280
app on the Apple TV if you're going

00:22:56,610 --> 00:23:01,950
other than that it's a pretty standard

00:22:59,280 --> 00:23:03,960
and easy way to get your your devices up

00:23:01,950 --> 00:23:07,460
and running and automated all you need

00:23:03,960 --> 00:23:07,460
to start is just an iOS device

00:23:15,580 --> 00:23:19,010
[Music]

00:23:19,660 --> 00:23:28,370
demo I think I've run a little bit quick

00:23:24,560 --> 00:23:30,680
today cool if you're interested in

00:23:28,370 --> 00:23:34,340
getting involved with this it's an open

00:23:30,680 --> 00:23:37,720
source project Python and made pretty

00:23:34,340 --> 00:23:40,160
much by a single gentleman named Ivan

00:23:37,720 --> 00:23:41,840
this library has come a long way in the

00:23:40,160 --> 00:23:43,250
last little bit if you want to do any

00:23:41,840 --> 00:23:45,850
kind of open source contribution for it

00:23:43,250 --> 00:23:48,590
now is the perfect time to get involved

00:23:45,850 --> 00:23:49,760
there's some definitions of the home kit

00:23:48,590 --> 00:23:51,260
accessory protocol that can help

00:23:49,760 --> 00:23:54,700
sometimes when you're doing debugging

00:23:51,260 --> 00:23:57,380
that's more on the network wire level

00:23:54,700 --> 00:24:00,680
LARC is a bit of a pain to get set up on

00:23:57,380 --> 00:24:02,120
the default raspbian distributions so

00:24:00,680 --> 00:24:05,090
i've got in the slides which i'll upload

00:24:02,120 --> 00:24:06,770
later there's a little link to the sort

00:24:05,090 --> 00:24:10,610
of gist that'll help you get everything

00:24:06,770 --> 00:24:20,660
up and running i think that's everything

00:24:10,610 --> 00:24:22,670
for me thank you very much thank you

00:24:20,660 --> 00:24:24,110
very much Sean we still got about five

00:24:22,670 --> 00:24:28,360
minutes of times or any questions we can

00:24:24,110 --> 00:24:28,360
fit them in any questions one you want

00:24:31,450 --> 00:24:37,760
the traditional problem with IR

00:24:34,880 --> 00:24:42,920
protocols it's unidirectional so if you

00:24:37,760 --> 00:24:47,750
send sort of one incorrect bit and get

00:24:42,920 --> 00:24:52,760
out of sync with your ISO unit you just

00:24:47,750 --> 00:24:54,410
did do you do you make that problem do

00:24:52,760 --> 00:24:55,970
you ever encounter that or do you say is

00:24:54,410 --> 00:24:59,540
that solved because every packet is

00:24:55,970 --> 00:25:00,920
complete state every packet is complete

00:24:59,540 --> 00:25:02,990
state and there's a little bit of stuff

00:25:00,920 --> 00:25:04,700
on the end that does the sort of like

00:25:02,990 --> 00:25:08,990
internal validation similar to like a

00:25:04,700 --> 00:25:13,370
kind of CRC check that will depend based

00:25:08,990 --> 00:25:15,470
on your model of AC like I said before

00:25:13,370 --> 00:25:16,760
there's no real standard for air

00:25:15,470 --> 00:25:18,620
conditioner units so that really does

00:25:16,760 --> 00:25:21,860
vary but we do generally get full

00:25:18,620 --> 00:25:24,050
packets out as long as it's being driven

00:25:21,860 --> 00:25:25,850
through the LRC I found that everything

00:25:24,050 --> 00:25:27,440
that's pretty solid I did have a lot of

00:25:25,850 --> 00:25:27,960
issues when I was doing the kind of like

00:25:27,440 --> 00:25:30,600
love

00:25:27,960 --> 00:25:31,649
bit banging with Arduino stuff and that

00:25:30,600 --> 00:25:36,029
was one of the big drivers for me

00:25:31,649 --> 00:25:37,950
getting over that I found was a lot more

00:25:36,029 --> 00:25:40,759
difficult in the the receiving part

00:25:37,950 --> 00:25:44,700
sending tends to be pretty pretty simple

00:25:40,759 --> 00:25:47,909
an ir LED with a normal resistor has a

00:25:44,700 --> 00:25:49,499
pretty decent range in a house I keep

00:25:47,909 --> 00:25:51,059
mine up on a shelf about a foot away

00:25:49,499 --> 00:25:52,080
from the air conditioner so it doesn't

00:25:51,059 --> 00:25:53,909
really need to go too far

00:25:52,080 --> 00:25:56,369
that being said that had it work from

00:25:53,909 --> 00:25:58,529
about five meters away before that

00:25:56,369 --> 00:26:00,119
stuff's pretty so normal IR stuff

00:25:58,529 --> 00:26:03,480
applies so like direct sunlight will

00:26:00,119 --> 00:26:11,820
mess it up kids pulling it apart will

00:26:03,480 --> 00:26:15,200
mess it up do any more questions thank

00:26:11,820 --> 00:26:15,200

YouTube URL: https://www.youtube.com/watch?v=SiLtPgeTZLA


