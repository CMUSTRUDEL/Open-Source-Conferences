Title: Multi-Factor Authentication: How it works and why you need to be using it yesterday
Publication date: 2018-08-24
Playlist: PyCon Australia 2018
Description: 
	Christopher Swenson

https://2018.pycon-au.org/talks/45227-multifactor-authentication-how-it-works-and-why-you-need-to-be-using-it-yesterday/

Multi-factor authentication (MFA) and two-factor auth (2FA) are becoming popular, but how do they work? What are the options, how secure are they, and how do you use them in your own applications?

We'll answer all these and more, covering everything from Django integration to cryptography.

Python, PyCon, PyConAU, australia, programming, sydney

This video is licensed under CC BY 3.0 AU ‹https://creativecommons.org/licenses/by/3.0/au/›.

PyCon Australia (“PyCon AU”) is the national conference for the Python Programming Community, bringing together professional, student and enthusiast developers with a love for developing with Python.

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 24 - 28 2018.

Python, PyCon, PyConAU
Captions: 
	00:00:00,439 --> 00:00:07,109
all right my defector authentication and

00:00:04,950 --> 00:00:09,420
two-factor ELLs are becoming quite

00:00:07,109 --> 00:00:11,670
popular and a lot of companies do that

00:00:09,420 --> 00:00:14,969
these days and use that to secure their

00:00:11,670 --> 00:00:16,770
environments and applications but how do

00:00:14,969 --> 00:00:18,869
we actually how does it actually work

00:00:16,770 --> 00:00:20,580
and how do we use them and that's what

00:00:18,869 --> 00:00:22,859
Christopher Swenson who's a principal

00:00:20,580 --> 00:00:26,119
engineer Twilio is going to talk to us

00:00:22,859 --> 00:00:26,119
about thank you

00:00:29,609 --> 00:00:33,930
thanks again the talk is multi-factor

00:00:31,859 --> 00:00:36,090
authentication how it works and why you

00:00:33,930 --> 00:00:37,530
need to be using it yesterday especially

00:00:36,090 --> 00:00:39,149
with all the security breaches in the

00:00:37,530 --> 00:00:40,649
news I think this is particularly timely

00:00:39,149 --> 00:00:42,559
talk and I think there's even one or two

00:00:40,649 --> 00:00:45,059
other talks at this conference about it

00:00:42,559 --> 00:00:47,340
so what exactly am I gonna be talking

00:00:45,059 --> 00:00:49,230
about multi-factor authentication and

00:00:47,340 --> 00:00:51,510
applications to Jango because this is

00:00:49,230 --> 00:00:52,890
Jango Khan who's the top who's the talk

00:00:51,510 --> 00:00:54,570
for I think there's something in it for

00:00:52,890 --> 00:00:56,280
just about everybody I do go into some

00:00:54,570 --> 00:00:57,690
of the little math ear details and some

00:00:56,280 --> 00:00:59,489
of the Jango details and there's a

00:00:57,690 --> 00:01:01,170
little bit of code but there's also a

00:00:59,489 --> 00:01:02,489
lot of high-level stuff so I think

00:01:01,170 --> 00:01:05,040
pretty much anyone who wants to know

00:01:02,489 --> 00:01:07,080
more about NFA can get something the

00:01:05,040 --> 00:01:09,060
talk is available on github

00:01:07,080 --> 00:01:10,860
it's just Swenson as my last name and

00:01:09,060 --> 00:01:13,229
you can just find it in my recent repos

00:01:10,860 --> 00:01:15,240
and I have my Twitter handle there at

00:01:13,229 --> 00:01:19,350
the bottom of every slide if you can

00:01:15,240 --> 00:01:21,840
sort of see that on one of them okay so

00:01:19,350 --> 00:01:24,210
Who am I I'm Christopher Swenson again I

00:01:21,840 --> 00:01:25,409
work at Twilio as a software engineer I

00:01:24,210 --> 00:01:27,930
previously worked at companies like

00:01:25,409 --> 00:01:30,570
Google and simple and also the US

00:01:27,930 --> 00:01:31,700
government I'm from Portland Oregon in

00:01:30,570 --> 00:01:34,220
the States

00:01:31,700 --> 00:01:38,159
occasionally I work on Beware which is a

00:01:34,220 --> 00:01:39,960
Python project and I have organized PI T

00:01:38,159 --> 00:01:43,320
X in the past which is a Python

00:01:39,960 --> 00:01:45,360
conference in Portland Oregon I'm just a

00:01:43,320 --> 00:01:47,670
curious person in general about all this

00:01:45,360 --> 00:01:49,350
stuff so that's why I give talks like

00:01:47,670 --> 00:01:52,140
these and I wrote a book on cryptography

00:01:49,350 --> 00:01:54,990
once so I can speak with a little bit of

00:01:52,140 --> 00:01:56,460
authority on cryptography things and I'm

00:01:54,990 --> 00:02:00,450
always curious about cryptography which

00:01:56,460 --> 00:02:03,210
is why I I talk about that here yeah so

00:02:00,450 --> 00:02:04,200
the motivation really was that I saw you

00:02:03,210 --> 00:02:06,930
know these multi multi factor

00:02:04,200 --> 00:02:09,379
authentication and I wanted to know I

00:02:06,930 --> 00:02:13,050
already said all this basically out loud

00:02:09,379 --> 00:02:13,710
how it all works and so I'm gonna go

00:02:13,050 --> 00:02:16,070
through briefly

00:02:13,710 --> 00:02:18,030
some history this I guess is more for

00:02:16,070 --> 00:02:20,550
just reference than anything like that

00:02:18,030 --> 00:02:23,460
authentication how they messed up works

00:02:20,550 --> 00:02:25,340
by us a little bit about biometrics some

00:02:23,460 --> 00:02:27,540
of the problems some of the cryptography

00:02:25,340 --> 00:02:28,770
and then some of the newer stuff coming

00:02:27,540 --> 00:02:32,820
out and as well as I'll do a little

00:02:28,770 --> 00:02:35,010
django demo yeah so if you've ever used

00:02:32,820 --> 00:02:37,380
like Google Authenticator on your phone

00:02:35,010 --> 00:02:38,640
or you've had like a little like token

00:02:37,380 --> 00:02:40,740
or whatnot often you'll see these little

00:02:38,640 --> 00:02:42,150
six digit numbers typically and I always

00:02:40,740 --> 00:02:43,830
thought to myself when I first got one

00:02:42,150 --> 00:02:45,060
of these a few years ago like where's

00:02:43,830 --> 00:02:47,460
this number coming from like what's

00:02:45,060 --> 00:02:49,440
what's happening is that number secure

00:02:47,460 --> 00:02:51,120
is like is it is like somebody else seen

00:02:49,440 --> 00:02:53,250
that number a security problem like it

00:02:51,120 --> 00:02:55,680
is with a password and how bad of a

00:02:53,250 --> 00:02:57,180
security problem is it and how how do

00:02:55,680 --> 00:03:00,320
they other kinds of factors that you see

00:02:57,180 --> 00:03:02,760
work what are the other factors okay so

00:03:00,320 --> 00:03:04,410
I'll take you back all the way to the

00:03:02,760 --> 00:03:07,050
beginning is as far as I know is the

00:03:04,410 --> 00:03:10,230
first recorded use of a password like

00:03:07,050 --> 00:03:12,540
thing or a factor of authentication was

00:03:10,230 --> 00:03:14,520
pronounciation so there's a story and I

00:03:12,540 --> 00:03:16,770
won't do it justice so I won't tell the

00:03:14,520 --> 00:03:18,750
whole thing but in the Bible I believe

00:03:16,770 --> 00:03:21,930
in the book of Judges there was a story

00:03:18,750 --> 00:03:23,730
about two two cultures who were clashing

00:03:21,930 --> 00:03:26,040
I think they had like a battle one of

00:03:23,730 --> 00:03:28,380
them won one of them lost the losers

00:03:26,040 --> 00:03:31,050
were attempting to escape and then the

00:03:28,380 --> 00:03:32,730
the winners of the battle were not

00:03:31,050 --> 00:03:35,040
liking that and they wanted to kill them

00:03:32,730 --> 00:03:37,080
all so whenever the losers would come up

00:03:35,040 --> 00:03:38,340
and like try to escape you know the the

00:03:37,080 --> 00:03:39,600
winners would say like okay who are you

00:03:38,340 --> 00:03:41,490
and they'd be like well you know we're

00:03:39,600 --> 00:03:43,380
not who you think we are and they would

00:03:41,490 --> 00:03:45,600
go okay so I want you to pronounce the

00:03:43,380 --> 00:03:48,330
word Shibboleth and apparently that

00:03:45,600 --> 00:03:50,790
particular culture had a very distinct

00:03:48,330 --> 00:03:52,620
accent and so they could not pronounce

00:03:50,790 --> 00:03:53,940
it in the same way as the winners did

00:03:52,620 --> 00:03:56,550
and so if you pronounce the name wrong

00:03:53,940 --> 00:03:59,220
they would kill you or the word wrong

00:03:56,550 --> 00:04:01,860
so as far as I know this is the first

00:03:59,220 --> 00:04:03,630
recorded usage of a kind of factor of

00:04:01,860 --> 00:04:06,900
authentication and literally there were

00:04:03,630 --> 00:04:08,750
lives at stake and I think maybe a more

00:04:06,900 --> 00:04:11,250
modern and less serious example is

00:04:08,750 --> 00:04:13,320
Benedict Cumberbatch the actor is

00:04:11,250 --> 00:04:15,630
apparently incapable of saying the word

00:04:13,320 --> 00:04:16,980
penguins so if you ever need to figure

00:04:15,630 --> 00:04:18,480
out if you're talking to Benedict

00:04:16,980 --> 00:04:19,970
Cumberbatch just have him pronounce the

00:04:18,480 --> 00:04:22,650
word penguins

00:04:19,970 --> 00:04:24,090
he says there's like there's some great

00:04:22,650 --> 00:04:25,440
YouTube clips of him trying to pronounce

00:04:24,090 --> 00:04:27,600
the word over and over again and

00:04:25,440 --> 00:04:28,860
apparently he was making a documentary

00:04:27,600 --> 00:04:31,110
kept trying to pronounce it and just

00:04:28,860 --> 00:04:32,220
just couldn't and he and his staff just

00:04:31,110 --> 00:04:36,360
didn't have the heart to tell him how

00:04:32,220 --> 00:04:38,490
badly he was doing okay so back to

00:04:36,360 --> 00:04:41,220
factors and security serious security

00:04:38,490 --> 00:04:44,010
stuff so typically there are three

00:04:41,220 --> 00:04:46,200
factors which are something you know

00:04:44,010 --> 00:04:48,690
something you have and something you are

00:04:46,200 --> 00:04:50,580
and really what all these factors are

00:04:48,690 --> 00:04:52,800
trying to authenticate you that you are

00:04:50,580 --> 00:04:54,390
who you say you are you are a user of

00:04:52,800 --> 00:04:56,790
the system or something like that so it

00:04:54,390 --> 00:04:58,920
is trying to get at who you are and we

00:04:56,790 --> 00:05:00,840
try to do that by things you know a

00:04:58,920 --> 00:05:03,540
thing you have with you or a thing that

00:05:00,840 --> 00:05:06,510
you are that we can measure so things

00:05:03,540 --> 00:05:08,400
that you know are passwords a famous

00:05:06,510 --> 00:05:10,740
example is the swordfish password which

00:05:08,400 --> 00:05:12,630
is actually from a 1932 Marx Brothers

00:05:10,740 --> 00:05:14,550
movie is where that started so that's

00:05:12,630 --> 00:05:16,590
why we say swordfish all the time or you

00:05:14,550 --> 00:05:18,570
see that as sort of like a meme over and

00:05:16,590 --> 00:05:20,190
over again about what's the password as

00:05:18,570 --> 00:05:23,100
far as I know this is the first usage of

00:05:20,190 --> 00:05:25,140
that you can also see sometimes in like

00:05:23,100 --> 00:05:27,120
credit checks they might ask you a

00:05:25,140 --> 00:05:29,040
credit bureau might ask you questions

00:05:27,120 --> 00:05:31,140
about like addresses you've lived at

00:05:29,040 --> 00:05:32,310
vehicles you've owned things like that

00:05:31,140 --> 00:05:34,680
so they're trying to ascertain the you

00:05:32,310 --> 00:05:36,330
are who you are I've seen in some

00:05:34,680 --> 00:05:38,040
interesting examples like where they try

00:05:36,330 --> 00:05:39,480
to do age verification and try to see if

00:05:38,040 --> 00:05:42,120
you're an adult and they might ask you

00:05:39,480 --> 00:05:44,040
like random trivia questions like that

00:05:42,120 --> 00:05:45,870
only adults could answer like who is the

00:05:44,040 --> 00:05:46,980
vice-president of the US or things like

00:05:45,870 --> 00:05:49,770
that

00:05:46,980 --> 00:05:52,950
I think that's kind of fallen out of fad

00:05:49,770 --> 00:05:54,030
now that we have Google and like

00:05:52,950 --> 00:05:55,230
somebody there's like a million other

00:05:54,030 --> 00:05:57,230
examples of things like secret

00:05:55,230 --> 00:05:59,430
handshakes to see if you're in a club or

00:05:57,230 --> 00:06:00,450
things like any other kind of knowledge

00:05:59,430 --> 00:06:02,490
that you can use to sort of

00:06:00,450 --> 00:06:04,890
differentiate between us and them or

00:06:02,490 --> 00:06:07,950
between or just to identify a single

00:06:04,890 --> 00:06:10,020
person things that you have there's a

00:06:07,950 --> 00:06:12,150
lot of examples of these the most common

00:06:10,020 --> 00:06:13,980
example that we you probably see a lot

00:06:12,150 --> 00:06:18,540
of now are USB tokens like these you

00:06:13,980 --> 00:06:20,010
bikies yubico as a sponsor and the the

00:06:18,540 --> 00:06:22,200
sort of tokens you can carry on with you

00:06:20,010 --> 00:06:24,000
are some sort of proof the you are who

00:06:22,200 --> 00:06:26,340
you are like something you have with you

00:06:24,000 --> 00:06:28,460
a key or some other thing that they can

00:06:26,340 --> 00:06:30,990
validate other examples are like

00:06:28,460 --> 00:06:32,760
passports driver's license there used to

00:06:30,990 --> 00:06:34,830
be a lot of copy protection schemes so

00:06:32,760 --> 00:06:36,900
that you needed an actual copy of the

00:06:34,830 --> 00:06:38,790
floppy disk or the CD in order to you

00:06:36,900 --> 00:06:40,140
know play a game or something like that

00:06:38,790 --> 00:06:42,430
because they had some physical property

00:06:40,140 --> 00:06:45,520
that you couldn't replicate

00:06:42,430 --> 00:06:47,140
I think about like ps2 or whatever games

00:06:45,520 --> 00:06:48,340
like you know a lot of videogames still

00:06:47,140 --> 00:06:49,510
do have this sort of thing where they

00:06:48,340 --> 00:06:52,750
try very hard to prevent you from

00:06:49,510 --> 00:06:54,160
copying them you know and also in an

00:06:52,750 --> 00:06:55,660
authentication example cell phones with

00:06:54,160 --> 00:06:57,610
a certain number that can be used to

00:06:55,660 --> 00:06:59,020
sort of identify who you are that if you

00:06:57,610 --> 00:07:00,850
enter this phone number in that I will

00:06:59,020 --> 00:07:02,980
be able to respond or tell you what the

00:07:00,850 --> 00:07:04,810
text message was that is something you

00:07:02,980 --> 00:07:07,810
have you have a cell phone that is

00:07:04,810 --> 00:07:10,300
connected to a particular number other

00:07:07,810 --> 00:07:12,070
things are like predetermined shared

00:07:10,300 --> 00:07:14,020
secrets so this is like a Wi-Fi password

00:07:12,070 --> 00:07:15,760
right is it's not really like a password

00:07:14,020 --> 00:07:17,680
of it so much as a shared password so

00:07:15,760 --> 00:07:19,690
it's trying to again like exclude a

00:07:17,680 --> 00:07:22,870
group of users or find one particular

00:07:19,690 --> 00:07:24,160
one challenge coins credit cards there's

00:07:22,870 --> 00:07:26,380
all sorts of fun examples that we could

00:07:24,160 --> 00:07:28,420
go into in fact I just spent a long time

00:07:26,380 --> 00:07:30,010
coming with this giant list and then

00:07:28,420 --> 00:07:33,310
paired it down because there's having

00:07:30,010 --> 00:07:36,070
too much fun and things the you are is a

00:07:33,310 --> 00:07:38,080
little trickier so typically most Lee's

00:07:36,070 --> 00:07:39,490
fall under biometrics like what can you

00:07:38,080 --> 00:07:41,470
measure about a person like literally

00:07:39,490 --> 00:07:43,630
biometrics means measure you know

00:07:41,470 --> 00:07:45,430
something biological about you what can

00:07:43,630 --> 00:07:46,930
you measure on a human that is unique

00:07:45,430 --> 00:07:49,030
enough to where you could identify them

00:07:46,930 --> 00:07:52,030
things like a fingerprint are probably

00:07:49,030 --> 00:07:54,010
pretty unique you know face so a lot of

00:07:52,030 --> 00:07:55,540
us have phones now for the past couple

00:07:54,010 --> 00:07:56,979
of years that have had face ID of

00:07:55,540 --> 00:08:00,100
various kinds I think Apple has it

00:07:56,979 --> 00:08:01,600
Android had it a little while ago retina

00:08:00,100 --> 00:08:03,729
retina prints have been famous for the

00:08:01,600 --> 00:08:05,710
sort of thing your signature even has

00:08:03,729 --> 00:08:09,130
been one probably it goes back you know

00:08:05,710 --> 00:08:11,020
even further I've also seen some systems

00:08:09,130 --> 00:08:12,669
that try to determine if you are a

00:08:11,020 --> 00:08:16,210
living person like you are physically

00:08:12,669 --> 00:08:17,919
present this is used in I recall the

00:08:16,210 --> 00:08:19,600
story correctly it's it was used in

00:08:17,919 --> 00:08:22,419
certain ATMs in certain countries

00:08:19,600 --> 00:08:25,479
because they had implemented hand scans

00:08:22,419 --> 00:08:27,070
and apparently local criminals had taken

00:08:25,479 --> 00:08:28,330
to chopping off the hands of people they

00:08:27,070 --> 00:08:29,380
wanted to steal their accounts from and

00:08:28,330 --> 00:08:30,910
just taking the hand and putting it

00:08:29,380 --> 00:08:33,370
there and it worked so they had to add a

00:08:30,910 --> 00:08:34,839
live Ennis detector to make sure that

00:08:33,370 --> 00:08:38,440
the person was actually attached to the

00:08:34,839 --> 00:08:41,110
hand so that's that's a real thing that

00:08:38,440 --> 00:08:43,000
happens and maybe a more common unless

00:08:41,110 --> 00:08:44,560
less brutal example is like CAPTCHAs

00:08:43,000 --> 00:08:46,330
like CAPTCHAs are trying to determine if

00:08:44,560 --> 00:08:49,300
you're a human or not and not you know

00:08:46,330 --> 00:08:50,680
just a bot or something like that so the

00:08:49,300 --> 00:08:51,820
you're capable of human reasoning I

00:08:50,680 --> 00:08:54,640
think I also have contact in there

00:08:51,820 --> 00:08:56,650
because it was used in the movie contact

00:08:54,640 --> 00:08:58,480
the they were using prime numbers or

00:08:56,650 --> 00:09:00,580
something as an example of this is an

00:08:58,480 --> 00:09:02,320
intelligent being making this this

00:09:00,580 --> 00:09:03,930
transmission because it's using prime

00:09:02,320 --> 00:09:08,440
numbers which wouldn't occur naturally

00:09:03,930 --> 00:09:11,020
in a certain way okay so you see the

00:09:08,440 --> 00:09:13,060
terms like MFA and 2fa used a lot in the

00:09:11,020 --> 00:09:14,620
phase of the general term for any kind

00:09:13,060 --> 00:09:16,330
of authentication that uses more than

00:09:14,620 --> 00:09:17,950
one of those factors like something you

00:09:16,330 --> 00:09:19,840
typically something you know in

00:09:17,950 --> 00:09:22,510
something that you have with you and -

00:09:19,840 --> 00:09:23,620
if a just means generally you know

00:09:22,510 --> 00:09:26,320
there's two of them and they almost

00:09:23,620 --> 00:09:28,480
almost always mean you have a password

00:09:26,320 --> 00:09:29,830
and that you're trying to add something

00:09:28,480 --> 00:09:32,530
else in addition to the password

00:09:29,830 --> 00:09:34,630
typically a phone number or a hardware

00:09:32,530 --> 00:09:37,180
token or your Google Authenticator or

00:09:34,630 --> 00:09:38,830
you know authy or duo app or something

00:09:37,180 --> 00:09:41,890
like that which is an algorithm called

00:09:38,830 --> 00:09:43,390
totp which we'll get into generally

00:09:41,890 --> 00:09:44,770
there there's some exceptions to this

00:09:43,390 --> 00:09:46,960
but that's generally when people say

00:09:44,770 --> 00:09:50,040
two-factor off that's what they mean

00:09:46,960 --> 00:09:52,480
even though it is a more broad term

00:09:50,040 --> 00:09:54,850
so let's first get this out of the way

00:09:52,480 --> 00:09:56,380
SMS and email are both very common

00:09:54,850 --> 00:09:57,280
two-factor authentication mechanisms and

00:09:56,380 --> 00:09:59,200
there's been a lot of stuff in the news

00:09:57,280 --> 00:10:01,270
about how terrible they are and they are

00:09:59,200 --> 00:10:03,640
terrible in general you shouldn't use

00:10:01,270 --> 00:10:05,380
them and if you have a better option but

00:10:03,640 --> 00:10:07,150
they are better than nothing for those

00:10:05,380 --> 00:10:08,920
of you may not know if you you can add

00:10:07,150 --> 00:10:11,710
like SMS or you know something like that

00:10:08,920 --> 00:10:13,120
to your bank account or any other like

00:10:11,710 --> 00:10:15,310
site you log into and it will generally

00:10:13,120 --> 00:10:17,170
text you and then you know say enter a

00:10:15,310 --> 00:10:19,000
code that we texted you to prove that

00:10:17,170 --> 00:10:22,930
you have access to that email address or

00:10:19,000 --> 00:10:24,520
that or that SMS number these the

00:10:22,930 --> 00:10:26,680
problem is is that SMS and email are

00:10:24,520 --> 00:10:28,540
both very easily compromised and they're

00:10:26,680 --> 00:10:31,300
not transmitted securely at all they're

00:10:28,540 --> 00:10:32,680
based on very legacy protocols so it's

00:10:31,300 --> 00:10:35,590
possible to intercept them and they're

00:10:32,680 --> 00:10:37,300
also a lot easier to hijack and whatnot

00:10:35,590 --> 00:10:39,970
there have definitely been cases of

00:10:37,300 --> 00:10:41,530
people having their accounts stolen or

00:10:39,970 --> 00:10:44,380
their email stolen or their SMS number

00:10:41,530 --> 00:10:45,820
redirected and things like that but

00:10:44,380 --> 00:10:49,200
certainly if you don't have any other

00:10:45,820 --> 00:10:53,440
options they're better than nothing but

00:10:49,200 --> 00:10:55,120
really we can do better so the the

00:10:53,440 --> 00:10:56,770
better the better thing the easy thing

00:10:55,120 --> 00:10:58,330
that almost anyone can do because almost

00:10:56,770 --> 00:11:00,700
all of us have smartphones at this point

00:10:58,330 --> 00:11:02,590
is use an app a Google Authenticator is

00:11:00,700 --> 00:11:04,390
sort of the classic example of an app

00:11:02,590 --> 00:11:05,710
there's a lot of other ones that use

00:11:04,390 --> 00:11:08,019
this since it's an open protocol that

00:11:05,710 --> 00:11:09,759
generally our open protocols are

00:11:08,019 --> 00:11:12,040
he is one made by Twilio even the

00:11:09,759 --> 00:11:14,079
company I work for although I won't talk

00:11:12,040 --> 00:11:16,149
about authy in detail really duo is

00:11:14,079 --> 00:11:17,769
another one there's a whole bunch of

00:11:16,149 --> 00:11:20,499
apps out there that implement these

00:11:17,769 --> 00:11:24,249
protocols and you know for all major

00:11:20,499 --> 00:11:24,999
platforms and the open protocols are

00:11:24,249 --> 00:11:28,089
generally called

00:11:24,999 --> 00:11:31,329
h.o.t P&T OTP that they implement and so

00:11:28,089 --> 00:11:33,040
let's talk about that so HTTP is sort of

00:11:31,329 --> 00:11:35,139
the core algorithm that all these are

00:11:33,040 --> 00:11:38,319
using to generate these six digit codes

00:11:35,139 --> 00:11:40,239
that you see it stands for H Mac based

00:11:38,319 --> 00:11:41,799
one-time password so it's a one-time

00:11:40,239 --> 00:11:44,009
password meaning you're going to get to

00:11:41,799 --> 00:11:47,110
use it exactly once and it's H Mac

00:11:44,009 --> 00:11:49,720
meaning hm X stands for hash-based

00:11:47,110 --> 00:11:51,819
message authentication code so it's a

00:11:49,720 --> 00:11:55,989
way to authenticate you using hashing

00:11:51,819 --> 00:12:01,209
algorithms like sha-1 shot to md5 I

00:11:55,989 --> 00:12:02,889
guess please don't use md5 and in

00:12:01,209 --> 00:12:04,929
general actually sha-1 I can talk a

00:12:02,889 --> 00:12:06,189
little bit about to is generally

00:12:04,929 --> 00:12:10,540
something you should avoid but in this

00:12:06,189 --> 00:12:13,720
case it's fine as far as I know sha-1 in

00:12:10,540 --> 00:12:16,629
this use case is not been compromised in

00:12:13,720 --> 00:12:19,749
any way so it's it's generally fine the

00:12:16,629 --> 00:12:22,929
algorithm is really simple that computes

00:12:19,749 --> 00:12:26,079
a sorry for the math notation but the

00:12:22,929 --> 00:12:28,509
computes essentially the digits that you

00:12:26,079 --> 00:12:31,990
see from from your sort of shared secret

00:12:28,509 --> 00:12:33,490
so the core to any TOTP or H OTP is that

00:12:31,990 --> 00:12:35,069
you have some sort of shared secret like

00:12:33,490 --> 00:12:37,629
they transmitted to you at some point

00:12:35,069 --> 00:12:39,809
usually you'd be a QR code which I can

00:12:37,629 --> 00:12:42,699
show an example of like a little like

00:12:39,809 --> 00:12:44,769
basically hex string or base 32 string

00:12:42,699 --> 00:12:46,420
that is just a random numbers and you

00:12:44,769 --> 00:12:49,299
are trying to prove that you are in

00:12:46,420 --> 00:12:51,009
possession of that secret to them and

00:12:49,299 --> 00:12:53,889
the way you do that is by hashing it in

00:12:51,009 --> 00:12:54,790
a clever way so in this algorithm here I

00:12:53,889 --> 00:12:56,769
don't really need to go into details

00:12:54,790 --> 00:12:59,079
essentially you hash it along with

00:12:56,769 --> 00:13:00,759
whatever message and I'll get into

00:12:59,079 --> 00:13:02,679
exactly what that looks like and then

00:13:00,759 --> 00:13:04,540
you take that any sort of hash it again

00:13:02,679 --> 00:13:07,449
so it's it's the sort of double hashing

00:13:04,540 --> 00:13:09,579
that in different ways that's relatively

00:13:07,449 --> 00:13:11,199
secure and then you compute and you take

00:13:09,579 --> 00:13:14,949
that hash value and you convert it into

00:13:11,199 --> 00:13:16,360
numbers yeah so this is a Python

00:13:14,949 --> 00:13:17,799
conference so I'll show you in Python

00:13:16,360 --> 00:13:20,529
how it works maybe this will make a

00:13:17,799 --> 00:13:21,850
little bit more sense so the first the

00:13:20,529 --> 00:13:24,639
first lines there are just

00:13:21,850 --> 00:13:26,410
a cute way to do X or in Python if you

00:13:24,639 --> 00:13:28,060
actually just pre compute all the values

00:13:26,410 --> 00:13:29,980
you can then I don't have my laser

00:13:28,060 --> 00:13:32,259
pointer on me sadly but you can then

00:13:29,980 --> 00:13:34,480
just do translate to sort of translate

00:13:32,259 --> 00:13:38,290
between bytes I guess this is probably

00:13:34,480 --> 00:13:39,389
Python - sorry and yeah so it's just

00:13:38,290 --> 00:13:42,610
essentially just doing that just hash

00:13:39,389 --> 00:13:46,060
xor and then do another concatenate and

00:13:42,610 --> 00:13:48,100
hash like pretty straightforward nothing

00:13:46,060 --> 00:13:50,680
really complicated or to mathy going on

00:13:48,100 --> 00:13:52,060
here the way to convert that to a six

00:13:50,680 --> 00:13:55,060
digit number is maybe slightly more

00:13:52,060 --> 00:13:57,759
complicated in that you just basically

00:13:55,060 --> 00:14:00,519
take the last hex digit as an offset

00:13:57,759 --> 00:14:03,009
into the rest of the hex digits and then

00:14:00,519 --> 00:14:05,230
you sort of take 31 bits of that and

00:14:03,009 --> 00:14:06,880
then take that modulo the number of

00:14:05,230 --> 00:14:09,089
digits that you want so if you want you

00:14:06,880 --> 00:14:11,860
just take the bottom six digits of that

00:14:09,089 --> 00:14:13,930
so nothing nothing really complicated

00:14:11,860 --> 00:14:15,579
like nothing nothing hit nothing magical

00:14:13,930 --> 00:14:18,639
about what's going on and you know very

00:14:15,579 --> 00:14:21,699
straightforward so talked about heo T P

00:14:18,639 --> 00:14:23,980
so H OTP is where you just do this with

00:14:21,699 --> 00:14:26,079
some shared secret and a counter sorry I

00:14:23,980 --> 00:14:27,610
didn't specify that counter that starts

00:14:26,079 --> 00:14:29,350
at zero that's eight bytes and so every

00:14:27,610 --> 00:14:30,939
time you would use it it increments the

00:14:29,350 --> 00:14:32,860
counter by one so every time you pull a

00:14:30,939 --> 00:14:34,420
code from your phone it would increment

00:14:32,860 --> 00:14:36,279
that by one and the server would have to

00:14:34,420 --> 00:14:37,540
know that there's obviously some

00:14:36,279 --> 00:14:39,279
problems because you can get out of sync

00:14:37,540 --> 00:14:41,589
if you like accidentally hit the button

00:14:39,279 --> 00:14:42,880
a couple times or if the server you know

00:14:41,589 --> 00:14:44,230
thinks if someone else tried to

00:14:42,880 --> 00:14:46,029
authenticate as you it can like

00:14:44,230 --> 00:14:48,370
increment the counter and so you get

00:14:46,029 --> 00:14:49,779
these counter drifting things and plus

00:14:48,370 --> 00:14:52,209
it's just kind of annoying to keep track

00:14:49,779 --> 00:14:53,680
of this extra bit of state and so TOTP

00:14:52,209 --> 00:14:55,420
is the same thing except for you don't

00:14:53,680 --> 00:14:57,459
have a counter instead you just take the

00:14:55,420 --> 00:15:00,459
current time rounded to the nearest 30

00:14:57,459 --> 00:15:01,990
seconds so this is just unix time you

00:15:00,459 --> 00:15:04,300
can theoretically shift it around if you

00:15:01,990 --> 00:15:07,060
need to but almost everyone universally

00:15:04,300 --> 00:15:09,009
just does unix time divided by 30 and to

00:15:07,060 --> 00:15:11,680
in just throws away the remainder and

00:15:09,009 --> 00:15:13,209
that's the current counter so this is

00:15:11,680 --> 00:15:14,920
why in your Google Authenticator app if

00:15:13,209 --> 00:15:17,319
you ever see it it rolls over every 30

00:15:14,920 --> 00:15:19,300
seconds is it's doing exactly this

00:15:17,319 --> 00:15:21,880
algorithm so it's doing the HDP

00:15:19,300 --> 00:15:24,160
algorithm that we just saw where the the

00:15:21,880 --> 00:15:26,920
message is just this counter that is

00:15:24,160 --> 00:15:29,410
based on time technically all of these

00:15:26,920 --> 00:15:31,769
are customizable so and generally you

00:15:29,410 --> 00:15:35,120
see 30 and generally you see six digits

00:15:31,769 --> 00:15:36,950
but you can theoretically

00:15:35,120 --> 00:15:40,400
you know an arbitrary hashing algorithm

00:15:36,950 --> 00:15:42,440
an arbitrary amount of time you know and

00:15:40,400 --> 00:15:44,180
pretty much anything you want to

00:15:42,440 --> 00:15:48,160
redefine you can but everybody uses the

00:15:44,180 --> 00:15:50,779
defaults of six digits thirty seconds so

00:15:48,160 --> 00:15:51,980
so how secure these so I went through

00:15:50,779 --> 00:15:53,870
this and that was one of the questions I

00:15:51,980 --> 00:15:56,360
had to myself you know and initially was

00:15:53,870 --> 00:15:57,890
how secure these six digit numbers like

00:15:56,360 --> 00:15:58,880
I mean really is a 6-digit number gonna

00:15:57,890 --> 00:16:02,089
be that much better than just my

00:15:58,880 --> 00:16:05,150
password and it turns out yes so these

00:16:02,089 --> 00:16:07,010
are reasonably secure so it's a thirty

00:16:05,150 --> 00:16:08,570
it's it's not just the fact that it's a

00:16:07,010 --> 00:16:10,490
six-digit pass where it's a six digit

00:16:08,570 --> 00:16:11,990
password that changes every 30 seconds

00:16:10,490 --> 00:16:14,060
so it's not like something that someone

00:16:11,990 --> 00:16:15,440
can just try to guess like they only

00:16:14,060 --> 00:16:17,810
have 30 seconds they can usually only

00:16:15,440 --> 00:16:19,100
try once and then they just have to wait

00:16:17,810 --> 00:16:22,670
another 30 seconds and they get a new

00:16:19,100 --> 00:16:25,400
one also in general six digits is

00:16:22,670 --> 00:16:28,160
roughly two to the 20 to the 20th power

00:16:25,400 --> 00:16:30,650
and that's roughly amount the same

00:16:28,160 --> 00:16:32,600
number of choices or the same amount of

00:16:30,650 --> 00:16:34,730
entropy in a typical password that's

00:16:32,600 --> 00:16:37,670
chosen it's like the equivalent of a

00:16:34,730 --> 00:16:39,500
pretty standard average users password

00:16:37,670 --> 00:16:41,060
so you know it's not actually

00:16:39,500 --> 00:16:42,110
significantly worse than that like

00:16:41,060 --> 00:16:44,540
they'd they have about the same chance

00:16:42,110 --> 00:16:45,920
of guessing your password randomly if

00:16:44,540 --> 00:16:47,980
they get one choice as they do have

00:16:45,920 --> 00:16:51,410
guessing at random six digit number so

00:16:47,980 --> 00:16:53,150
that's not so bad but the most important

00:16:51,410 --> 00:16:54,410
part is those six digits don't actually

00:16:53,150 --> 00:16:56,630
reveal anything like I could sit here

00:16:54,410 --> 00:16:58,490
with my phone and show you all say you

00:16:56,630 --> 00:17:00,350
know all of my all of my code six digit

00:16:58,490 --> 00:17:02,089
codes for the next hour and that gives

00:17:00,350 --> 00:17:03,560
you really zero information about the

00:17:02,089 --> 00:17:05,600
underlying thing the way that it does

00:17:03,560 --> 00:17:08,270
the sort of double hashing algorithm

00:17:05,600 --> 00:17:10,610
with the X or x' is just clever enough

00:17:08,270 --> 00:17:12,920
to where it makes anything but a

00:17:10,610 --> 00:17:14,360
brute-force attack impossible there's

00:17:12,920 --> 00:17:16,490
not there's not any clever shortcuts

00:17:14,360 --> 00:17:19,819
compromise that compromises that we've

00:17:16,490 --> 00:17:21,410
seen in things like sha-1 don't really

00:17:19,819 --> 00:17:23,990
lend themselves well to an attack so you

00:17:21,410 --> 00:17:27,890
would have to still break all of sha-1

00:17:23,990 --> 00:17:29,660
like the full 160 bit hash in order to

00:17:27,890 --> 00:17:31,070
get anything and the six did just don't

00:17:29,660 --> 00:17:32,660
help you in that at all like they just

00:17:31,070 --> 00:17:34,070
they give you a way to check but they

00:17:32,660 --> 00:17:36,020
don't they don't give you a way to roll

00:17:34,070 --> 00:17:39,350
that back and get the key from it or get

00:17:36,020 --> 00:17:42,800
the shared secret this however is not

00:17:39,350 --> 00:17:45,650
true of md5 I think md5 is sufficiently

00:17:42,800 --> 00:17:48,430
broken that there is a compromise in

00:17:45,650 --> 00:17:51,220
security with H Mac with md5

00:17:48,430 --> 00:17:54,760
but I think luckily universally people

00:17:51,220 --> 00:17:56,920
use sha-1 shot to 256 is also used but I

00:17:54,760 --> 00:17:59,950
think sha-1 is what everyone uses in

00:17:56,920 --> 00:18:01,120
general and again so how do you transmit

00:17:59,950 --> 00:18:03,700
these you've probably seen these if

00:18:01,120 --> 00:18:05,410
you've ever had a two-factor off session

00:18:03,700 --> 00:18:07,300
you get a little QR code you scan it

00:18:05,410 --> 00:18:09,160
with your app and then that transmits it

00:18:07,300 --> 00:18:12,730
well what's what's in the QR code it's

00:18:09,160 --> 00:18:16,090
just this URL here that OTP off the URL

00:18:12,730 --> 00:18:17,590
which contains a base 32 secret the

00:18:16,090 --> 00:18:19,990
algorithm the number of digits in the

00:18:17,590 --> 00:18:21,580
period I think those are the defaults

00:18:19,990 --> 00:18:22,600
you don't technically need those and

00:18:21,580 --> 00:18:25,000
most of it you really just need the

00:18:22,600 --> 00:18:27,130
secret and like a username so that it

00:18:25,000 --> 00:18:29,470
can identify it on your phone and that's

00:18:27,130 --> 00:18:32,410
an actual one generated by my app that

00:18:29,470 --> 00:18:33,700
uh that I'd demo here and how does a QR

00:18:32,410 --> 00:18:35,080
code work cuz I'm always curious like

00:18:33,700 --> 00:18:36,700
okay well what's the next level how does

00:18:35,080 --> 00:18:38,380
how does a QR code transmit that

00:18:36,700 --> 00:18:40,570
information and that's a whole nother

00:18:38,380 --> 00:18:42,820
talk like I I thought I thought I could

00:18:40,570 --> 00:18:44,410
come up with a nice succinct description

00:18:42,820 --> 00:18:45,850
of how a QR codes work but they're

00:18:44,410 --> 00:18:47,230
actually incredibly complicated and

00:18:45,850 --> 00:18:50,680
interesting and I would love to talk to

00:18:47,230 --> 00:18:52,240
you about those at another talk and in

00:18:50,680 --> 00:18:54,670
general if you want to see the the URI

00:18:52,240 --> 00:18:56,350
format it's it's not a standard like the

00:18:54,670 --> 00:18:57,940
other ones where RFC's these this is

00:18:56,350 --> 00:18:59,680
sort of just a de-facto standard because

00:18:57,940 --> 00:19:01,420
it's what Google does and everybody just

00:18:59,680 --> 00:19:05,440
copied it so you could see that on

00:19:01,420 --> 00:19:09,040
Google's github okay so that's sort of

00:19:05,440 --> 00:19:11,200
like the summary of h.o.t P&T OTP the

00:19:09,040 --> 00:19:14,890
sort of mathy the mathias pieces of this

00:19:11,200 --> 00:19:16,900
and that's sort of the most common thing

00:19:14,890 --> 00:19:19,570
i think most people do now the next step

00:19:16,900 --> 00:19:22,720
would be to get a hardware token so like

00:19:19,570 --> 00:19:25,380
a Yubikey or there's things like ut f0

00:19:22,720 --> 00:19:27,610
and I'll talk about what u TF is u 2f

00:19:25,380 --> 00:19:30,430
zeros and other sorts of little hardware

00:19:27,610 --> 00:19:32,560
tokens you can get and also you might

00:19:30,430 --> 00:19:34,720
have heard words like trusted platform

00:19:32,560 --> 00:19:37,270
module or secure element if you've

00:19:34,720 --> 00:19:39,550
gotten into hardware much TPM is

00:19:37,270 --> 00:19:41,680
essentially to a first approximation

00:19:39,550 --> 00:19:43,240
it's like having a Yubikey or a hardware

00:19:41,680 --> 00:19:45,070
token embedded inside your computer

00:19:43,240 --> 00:19:47,140
they've been present in almost every

00:19:45,070 --> 00:19:49,600
laptop for and every desktop for the

00:19:47,140 --> 00:19:52,630
past decade or so but they're not used

00:19:49,600 --> 00:19:54,520
super much but all it is all these

00:19:52,630 --> 00:19:57,040
things are are generally a secure

00:19:54,520 --> 00:19:58,600
element which means a chip that has very

00:19:57,040 --> 00:20:00,100
limited functionality like it can

00:19:58,600 --> 00:20:01,490
generate keys it can generate random

00:20:00,100 --> 00:20:04,429
numbers and

00:20:01,490 --> 00:20:05,540
sign things but it can't really compute

00:20:04,429 --> 00:20:06,950
things and there's no way to get the

00:20:05,540 --> 00:20:09,500
information back out of it you can only

00:20:06,950 --> 00:20:11,870
use the information not actually get at

00:20:09,500 --> 00:20:13,640
it and then it's a standard set of

00:20:11,870 --> 00:20:15,559
protocols for getting at it only one any

00:20:13,640 --> 00:20:17,360
more detail on that TPM is a set of

00:20:15,559 --> 00:20:19,010
standards for how to do all this stuff

00:20:17,360 --> 00:20:21,530
and it's very interesting but again it's

00:20:19,010 --> 00:20:23,210
not super useful for us in our everyday

00:20:21,530 --> 00:20:26,870
lives I think whereas Google

00:20:23,210 --> 00:20:28,760
Authenticator and stuff are okay so

00:20:26,870 --> 00:20:33,020
let's talk about Django piece of this

00:20:28,760 --> 00:20:34,429
now so I talked you know about this like

00:20:33,020 --> 00:20:36,050
how do i how do we go ahead and add this

00:20:34,429 --> 00:20:38,179
into our authentication you know like

00:20:36,050 --> 00:20:40,429
Django has all these built-in admin

00:20:38,179 --> 00:20:41,690
tools and username a password

00:20:40,429 --> 00:20:43,490
verification and stuff like that like

00:20:41,690 --> 00:20:46,460
how can we do that

00:20:43,490 --> 00:20:49,130
so in general you can just do this you

00:20:46,460 --> 00:20:51,350
can install Django OTP you can install

00:20:49,130 --> 00:20:54,500
QR code and that will give you kind of a

00:20:51,350 --> 00:20:56,330
rough first approximation of what you

00:20:54,500 --> 00:20:58,460
can do and I'll go into how you hook it

00:20:56,330 --> 00:20:59,780
in you can you can basically add in this

00:20:58,460 --> 00:21:02,120
into your login flow into your existing

00:20:59,780 --> 00:21:03,830
system it's a bit rough around the edges

00:21:02,120 --> 00:21:06,050
the flow can be very awkward you're

00:21:03,830 --> 00:21:08,179
gonna have to engineer a lot of your own

00:21:06,050 --> 00:21:10,580
login flow to really work well with it

00:21:08,179 --> 00:21:12,770
it doesn't really do resets very well

00:21:10,580 --> 00:21:14,630
it it's not super secure and its

00:21:12,770 --> 00:21:17,330
implementation but it's certainly it's a

00:21:14,630 --> 00:21:18,770
good first start like and you know maybe

00:21:17,330 --> 00:21:19,940
we can sprint on it or something to

00:21:18,770 --> 00:21:21,500
improve it but there definitely a lot of

00:21:19,940 --> 00:21:22,880
room for improvement but I think it

00:21:21,500 --> 00:21:26,150
assumes that you've probably customized

00:21:22,880 --> 00:21:27,110
your login flow so much that you you

00:21:26,150 --> 00:21:29,840
know are probably gonna have to

00:21:27,110 --> 00:21:31,160
customize it with this anyway I think I

00:21:29,840 --> 00:21:33,200
have a like just like a little brief

00:21:31,160 --> 00:21:34,730
tutorial on how to integrate it here it

00:21:33,200 --> 00:21:36,950
really is a matter of if you're familiar

00:21:34,730 --> 00:21:39,429
with Django you have to just add it into

00:21:36,950 --> 00:21:42,070
your installed apps you have to create

00:21:39,429 --> 00:21:44,450
your own admin view essentially

00:21:42,070 --> 00:21:48,830
slap that into your installed apps add

00:21:44,450 --> 00:21:51,200
in the OTP middleware this is what the

00:21:48,830 --> 00:21:52,610
the little like it's very the

00:21:51,200 --> 00:21:53,720
site you need to add into there is very

00:21:52,610 --> 00:21:57,200
simple it basically just needs to

00:21:53,720 --> 00:21:59,270
inherit from the normal admin site you

00:21:57,200 --> 00:22:03,620
need to create like a simple like sample

00:21:59,270 --> 00:22:06,620
app config in your app spy and then you

00:22:03,620 --> 00:22:08,300
can in your views use you know there's

00:22:06,620 --> 00:22:09,710
the normally that is authenticated which

00:22:08,300 --> 00:22:11,470
tells you that the user is logged in but

00:22:09,710 --> 00:22:13,370
it adds a new one which is verified

00:22:11,470 --> 00:22:15,350
which is a function that you have to

00:22:13,370 --> 00:22:18,260
call but that will tell you if they've

00:22:15,350 --> 00:22:21,860
been two-factor often as opposed to just

00:22:18,260 --> 00:22:25,370
use their password so I can demo that

00:22:21,860 --> 00:22:26,570
really briefly I know it's let's let's

00:22:25,370 --> 00:22:29,480
live live dangerously and delete my

00:22:26,570 --> 00:22:33,530
database before I do this so this would

00:22:29,480 --> 00:22:34,940
be like a real demo so Python managed so

00:22:33,530 --> 00:22:36,590
the first thing I said we have to do you

00:22:34,940 --> 00:22:39,830
have to migrate to get all the junk in

00:22:36,590 --> 00:22:41,299
your database you have to then you know

00:22:39,830 --> 00:22:45,830
do the Django things where you create a

00:22:41,299 --> 00:22:49,940
super user create super user Swensen is

00:22:45,830 --> 00:22:52,039
good whatever there's my email address

00:22:49,940 --> 00:22:54,230
one sentence one cent I owe password as

00:22:52,039 --> 00:22:56,559
Swensen it's gonna yell at me and I

00:22:54,230 --> 00:22:56,559
don't care

00:22:56,830 --> 00:23:03,110
okay so demo settings well so if we just

00:23:00,679 --> 00:23:07,789
try to start it up now I think I have it

00:23:03,110 --> 00:23:09,620
already set up here setting stop hi see

00:23:07,789 --> 00:23:13,130
ya you can see that I've got my OTP

00:23:09,620 --> 00:23:15,140
admin in there if I try to python manage

00:23:13,130 --> 00:23:17,630
run server I'm running long time such as

00:23:15,140 --> 00:23:22,760
I'm trying to run through this run

00:23:17,630 --> 00:23:24,500
server localhost so it's gonna direct me

00:23:22,760 --> 00:23:25,580
here but I haven't set up an OTP yet and

00:23:24,500 --> 00:23:27,980
so this is why this is where one of the

00:23:25,580 --> 00:23:29,659
awkward things is by default it assumes

00:23:27,980 --> 00:23:31,460
that you have an OTP and it requires you

00:23:29,659 --> 00:23:34,010
have it but I haven't added that to my

00:23:31,460 --> 00:23:35,450
account yet and so it's a little awkward

00:23:34,010 --> 00:23:37,570
be you have to kind of go in and disable

00:23:35,450 --> 00:23:37,570
it

00:23:37,659 --> 00:23:43,730
so disable it and then add your OTP off

00:23:41,210 --> 00:23:45,610
and then re-enable it and it's sort of

00:23:43,730 --> 00:23:48,320
like that's only the bootstrap process

00:23:45,610 --> 00:23:51,380
it's a little yeah so then you could go

00:23:48,320 --> 00:23:53,929
in Swensons once and it gets you like

00:23:51,380 --> 00:23:56,539
this little T OTP thing you can sort of

00:23:53,929 --> 00:24:00,830
add a totp device you know Swinson

00:23:56,539 --> 00:24:01,970
search i think user 1 and you know it's

00:24:00,830 --> 00:24:03,230
like oh yeah it's like oh here's the

00:24:01,970 --> 00:24:06,080
secret you know like all these things

00:24:03,230 --> 00:24:09,890
you shouldn't really have access to this

00:24:06,080 --> 00:24:11,090
field is required whatever yeah yeah

00:24:09,890 --> 00:24:13,250
again sort of all these things you

00:24:11,090 --> 00:24:15,200
shouldn't shouldn't really have access

00:24:13,250 --> 00:24:17,000
to and you can view a QR code for it as

00:24:15,200 --> 00:24:18,890
well if you have the QR code modules and

00:24:17,000 --> 00:24:20,090
again like the admin really like these

00:24:18,890 --> 00:24:21,380
should be generated once and you should

00:24:20,090 --> 00:24:23,630
never see them again so this is just

00:24:21,380 --> 00:24:26,480
like a little awkward the danger there

00:24:23,630 --> 00:24:30,099
is that they can they can impersonate

00:24:26,480 --> 00:24:32,210
you theoretically

00:24:30,099 --> 00:24:34,369
all right so that I'll quickly go over

00:24:32,210 --> 00:24:36,169
the problems and talk about you to F

00:24:34,369 --> 00:24:37,789
relief asked so what are the problems

00:24:36,169 --> 00:24:39,019
with MF a yeah you can lose your device

00:24:37,789 --> 00:24:40,609
and you're just out of luck like

00:24:39,019 --> 00:24:41,929
sometimes there's no recourse for losing

00:24:40,609 --> 00:24:43,729
your device or losing your hardware

00:24:41,929 --> 00:24:45,830
token you may not be able to reset your

00:24:43,729 --> 00:24:47,809
password you may be able to you may have

00:24:45,830 --> 00:24:49,729
like had like a recovery code printed up

00:24:47,809 --> 00:24:52,809
and maybe you lost that like there's a

00:24:49,729 --> 00:24:52,809
lot of problems the two-factor

00:24:52,899 --> 00:25:04,669
authentication support that you can

00:25:02,929 --> 00:25:06,529
reset your account but that an attacker

00:25:04,669 --> 00:25:10,669
couldn't and hope is not a great

00:25:06,529 --> 00:25:12,529
security tool it's also kind of annoying

00:25:10,669 --> 00:25:15,109
to type in things for the device into

00:25:12,529 --> 00:25:16,909
the devices Bluetooth support on these

00:25:15,109 --> 00:25:19,339
is kind of iffy and it only tends to

00:25:16,909 --> 00:25:21,289
work with like one accounts the hardware

00:25:19,339 --> 00:25:22,519
is a little tricky like sometimes like

00:25:21,289 --> 00:25:24,379
the UB keys and things of that have a

00:25:22,519 --> 00:25:26,809
very limited set of keys that they can

00:25:24,379 --> 00:25:28,129
handle they can't have like necessarily

00:25:26,809 --> 00:25:30,259
a lot of keys some of them are

00:25:28,129 --> 00:25:32,599
addressing this but that can kind of

00:25:30,259 --> 00:25:35,839
limit their utility and also like I said

00:25:32,599 --> 00:25:37,609
the totp and H ODB ones are symmetric so

00:25:35,839 --> 00:25:39,889
the admin any admin who has access to

00:25:37,609 --> 00:25:41,539
the secret can then create a copy of it

00:25:39,889 --> 00:25:45,019
and can impersonate you which is never

00:25:41,539 --> 00:25:47,109
great in a security system so there's

00:25:45,019 --> 00:25:49,489
sort of a new standard called u2f

00:25:47,109 --> 00:25:51,799
universal second factor it was made by

00:25:49,489 --> 00:25:53,119
UB CO and Google I think some other ones

00:25:51,799 --> 00:25:54,830
have joined the consortium now which is

00:25:53,119 --> 00:25:57,559
basically a standard for hardware

00:25:54,830 --> 00:25:59,450
devices that's trying to address this

00:25:57,559 --> 00:26:01,519
that tries to address these problems it

00:25:59,450 --> 00:26:03,320
uses asymmetric cryptography so that you

00:26:01,519 --> 00:26:05,330
can create the key once and then the

00:26:03,320 --> 00:26:08,719
admin never sees it and can never

00:26:05,330 --> 00:26:10,219
impersonate you it's not it's not super

00:26:08,719 --> 00:26:13,580
well supported outside of the largest

00:26:10,219 --> 00:26:15,259
websites so it's limited its limited

00:26:13,580 --> 00:26:17,570
utility and django support is almost

00:26:15,259 --> 00:26:19,129
non-existent so far I think there's

00:26:17,570 --> 00:26:21,139
another talk later this afternoon that

00:26:19,129 --> 00:26:22,519
will prove me wrong on that I hope on

00:26:21,139 --> 00:26:24,379
some sort of newer way to do

00:26:22,519 --> 00:26:26,409
authentication that does work well with

00:26:24,379 --> 00:26:28,609
Django so I look forward to being wrong

00:26:26,409 --> 00:26:30,789
but as far as I could tell when I did my

00:26:28,609 --> 00:26:33,710
research for this there wasn't a lot

00:26:30,789 --> 00:26:35,210
yeah so I think that's about it I think

00:26:33,710 --> 00:26:36,769
I have a few minutes for questions I

00:26:35,210 --> 00:26:37,999
kind of hurry through the end there and

00:26:36,769 --> 00:26:40,299
I'm happy to go through them I'm not

00:26:37,999 --> 00:26:42,409
sure how we're doing questions exactly

00:26:40,299 --> 00:26:42,620
we have four minutes for questions so

00:26:42,409 --> 00:26:45,020
you

00:26:42,620 --> 00:26:47,000
like find are there microphones or they

00:26:45,020 --> 00:26:48,470
come to the there's a microphone so she

00:26:47,000 --> 00:26:50,270
reminded the question time it's for

00:26:48,470 --> 00:26:51,710
questions not sharing information and

00:26:50,270 --> 00:26:53,809
Rachel yeah you can share information

00:26:51,710 --> 00:26:55,190
with me afterwards but yeah questions or

00:26:53,809 --> 00:26:57,980
questions should be questions goodnight

00:26:55,190 --> 00:26:59,450
why is the Hobbit Tolkien better umm

00:26:57,980 --> 00:27:03,440
what why is what I'm sorry what was the

00:26:59,450 --> 00:27:04,940
question I'm sorry a hardware token Oh

00:27:03,440 --> 00:27:07,220
hardware token what about them

00:27:04,940 --> 00:27:09,830
oh why is it better it's just because

00:27:07,220 --> 00:27:12,169
they're typically so they use secure

00:27:09,830 --> 00:27:14,960
elements which are typically chips that

00:27:12,169 --> 00:27:16,940
are you can't get information out of so

00:27:14,960 --> 00:27:18,320
meaning even if you stole the token like

00:27:16,940 --> 00:27:19,970
if you had a minute at the airport and

00:27:18,320 --> 00:27:21,919
you stole it and you know you tried to

00:27:19,970 --> 00:27:23,029
James Bond the token that like the

00:27:21,919 --> 00:27:24,440
information out of it you just can't

00:27:23,029 --> 00:27:26,029
there's no way to get that information

00:27:24,440 --> 00:27:27,710
out so it's sort of like this

00:27:26,029 --> 00:27:30,409
impenetrable fortress you're carrying

00:27:27,710 --> 00:27:32,690
around with you so like an uncountable

00:27:30,409 --> 00:27:33,980
device is other words I've seen for that

00:27:32,690 --> 00:27:36,500
so basically it's something you can

00:27:33,980 --> 00:27:38,090
carry with you that can't be cloned that

00:27:36,500 --> 00:27:40,100
only you have and there can't be any

00:27:38,090 --> 00:27:42,679
copies of it so it's just something that

00:27:40,100 --> 00:27:44,809
only you should have someone could of

00:27:42,679 --> 00:27:46,909
course physically steal it from you but

00:27:44,809 --> 00:27:50,240
hopefully you have recovery codes or

00:27:46,909 --> 00:27:53,770
something another question that's you a

00:27:50,240 --> 00:27:55,789
couple I've seen a recent trend recently

00:27:53,770 --> 00:27:57,049
instead of typing in your six digit

00:27:55,789 --> 00:27:58,429
number quite often you'll just get like

00:27:57,049 --> 00:28:00,289
a notification your phone and easy to

00:27:58,429 --> 00:28:01,700
prove does that use the same protocols

00:28:00,289 --> 00:28:03,830
at all or is that something totally

00:28:01,700 --> 00:28:06,289
different so some of them use very

00:28:03,830 --> 00:28:07,610
similar protocols if there's no reason

00:28:06,289 --> 00:28:08,870
to truncate it to six digits if you're

00:28:07,610 --> 00:28:10,220
gonna have a computer do it they will

00:28:08,870 --> 00:28:12,440
just typically give you like the full

00:28:10,220 --> 00:28:13,669
hash value because they can transmit the

00:28:12,440 --> 00:28:15,559
whole thing and that's gonna be a little

00:28:13,669 --> 00:28:17,840
bit more secure so but they're based on

00:28:15,559 --> 00:28:20,840
generally very similar algorithms like

00:28:17,840 --> 00:28:22,549
using H max to sort of validate that you

00:28:20,840 --> 00:28:24,919
have access to that key or whatnot

00:28:22,549 --> 00:28:27,020
there's also like how AWS validates

00:28:24,919 --> 00:28:28,850
requests from your account you actually

00:28:27,020 --> 00:28:32,419
use your access code in your secret code

00:28:28,850 --> 00:28:33,890
as an H Mak key right and you see that

00:28:32,419 --> 00:28:35,899
if you ever see like the AWS signing

00:28:33,890 --> 00:28:36,919
algorithm but they you they use h max

00:28:35,899 --> 00:28:39,350
for that as well it's a great way to

00:28:36,919 --> 00:28:40,580
take like a secret key and prove that

00:28:39,350 --> 00:28:42,649
you have that secret key without

00:28:40,580 --> 00:28:45,350
revealing what it is and I think a lot

00:28:42,649 --> 00:28:48,500
of the push notification services use

00:28:45,350 --> 00:28:49,909
similar technology to that it would some

00:28:48,500 --> 00:28:52,970
of those details are proprietary so I'm

00:28:49,909 --> 00:28:54,980
not sure I think

00:28:52,970 --> 00:28:56,750
and then you hi there my name is hope I

00:28:54,980 --> 00:28:59,409
thought this was a really great talk you

00:28:56,750 --> 00:29:01,340
mentioned that there is a problem with

00:28:59,409 --> 00:29:03,080
bootstrapping where you were able to

00:29:01,340 --> 00:29:05,390
kind of make a quick change to disable

00:29:03,080 --> 00:29:08,750
it and then re-enable it oh yeah that

00:29:05,390 --> 00:29:10,520
works well for localhost that's probably

00:29:08,750 --> 00:29:14,809
not what you want to be doing on prod

00:29:10,520 --> 00:29:16,370
yes so what what what does a reasonable

00:29:14,809 --> 00:29:17,720
bootstrapping process look like for that

00:29:16,370 --> 00:29:19,460
yes so if you're doing this in

00:29:17,720 --> 00:29:20,870
production presumably you probably have

00:29:19,460 --> 00:29:23,390
a custom login form that you've

00:29:20,870 --> 00:29:25,100
developed already and that you would

00:29:23,390 --> 00:29:26,750
probably know how to hook in to this and

00:29:25,100 --> 00:29:28,909
you just wouldn't so I think I showed

00:29:26,750 --> 00:29:30,590
this little bit here like you wouldn't

00:29:28,909 --> 00:29:32,690
start adding in the user is verified

00:29:30,590 --> 00:29:34,640
into it until you had a flow to add

00:29:32,690 --> 00:29:36,289
two-factor off to people's accounts and

00:29:34,640 --> 00:29:37,549
to have them do resets and things like

00:29:36,289 --> 00:29:39,140
that so you'd want to develop all of

00:29:37,549 --> 00:29:40,580
that and your normal flow and like that

00:29:39,140 --> 00:29:43,700
would be a little too complicated for a

00:29:40,580 --> 00:29:45,710
small demo but presumably you know or

00:29:43,700 --> 00:29:49,850
someone knows how your authentication

00:29:45,710 --> 00:29:53,480
works hopefully and they maybe not and

00:29:49,850 --> 00:29:54,620
if not good luck but generally something

00:29:53,480 --> 00:29:58,400
along this line where you're basically

00:29:54,620 --> 00:29:59,780
adding the is verified and yeah you sort

00:29:58,400 --> 00:30:02,390
of work it into your flow a little bit

00:29:59,780 --> 00:30:07,039
better but the the plugin by default

00:30:02,390 --> 00:30:09,770
doesn't have a great story there all

00:30:07,039 --> 00:30:11,919
right thank you yeah unfortunately out

00:30:09,770 --> 00:30:11,919

YouTube URL: https://www.youtube.com/watch?v=zIhB8LuBA6g


