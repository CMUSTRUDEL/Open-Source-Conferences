Title: Education Seminar Student Showcase
Publication date: 2018-08-25
Playlist: PyCon Australia 2018
Description: 
	Isabella Hogan, Aden Pulford, William Meibusch, Victor Horvat, Sophie May Press, Jasper Chandler, Declan Zammit, Sam Hogan, Anh Pham, Joseph Tey

https://2018.pycon-au.org/education-showcase

Eight short talks from high school students across Australia. They'll be talking about projects they've built with Python using machine learning, robotics, natural language processing, and more

Python, PyCon, PyConAU, australia, programming, sydney

This video is licensed under CC BY 3.0 AU - https://creativecommons.org/licenses/by/3.0/au/

PyCon Australia (“PyCon AU”) is the national conference for the Python Programming Community, bringing together professional, student and enthusiast developers with a love for developing with Python.

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 24 - 28 2018.

Python, PyCon, PyConAU
Captions: 
	00:00:00,050 --> 00:00:05,460
all right this is so exciting

00:00:03,810 --> 00:00:09,540
I'm so excited you've got the microphone

00:00:05,460 --> 00:00:13,710
I welcome everyone to the very first

00:00:09,540 --> 00:00:17,279
inaugural student showcase so what we've

00:00:13,710 --> 00:00:21,000
got is a whole bunch of school students

00:00:17,279 --> 00:00:23,100
from year 7 to year 12 who want to come

00:00:21,000 --> 00:00:24,840
and talk about an awesome project that

00:00:23,100 --> 00:00:26,609
they've all independently been working

00:00:24,840 --> 00:00:27,869
on some of these students have been

00:00:26,609 --> 00:00:30,090
working on this as part of a school

00:00:27,869 --> 00:00:34,110
project some of them have been doing it

00:00:30,090 --> 00:00:36,960
in their own time we put the call out a

00:00:34,110 --> 00:00:39,180
few months ago to say hey what awesome

00:00:36,960 --> 00:00:42,170
things have you been doing and we got in

00:00:39,180 --> 00:00:46,350
some fantastically amazing awesome

00:00:42,170 --> 00:00:47,760
responses we have selected a handful of

00:00:46,350 --> 00:00:51,629
bows to share their stories with you

00:00:47,760 --> 00:00:55,590
they're going to be rapid-fire so 10

00:00:51,629 --> 00:00:59,280
minutes to talk we will be accepting one

00:00:55,590 --> 00:01:02,820
question if you have questions that you

00:00:59,280 --> 00:01:06,890
want to ask you can tweet them at me or

00:01:02,820 --> 00:01:08,820
send them to the the DA on the slack

00:01:06,890 --> 00:01:10,740
thing I think that's probably the best

00:01:08,820 --> 00:01:12,000
way to curate them otherwise if you've

00:01:10,740 --> 00:01:14,280
got a burning question you desperately

00:01:12,000 --> 00:01:16,700
need to ask put your hand up and if

00:01:14,280 --> 00:01:17,850
you're lucky I will call upon you

00:01:16,700 --> 00:01:20,159
otherwise

00:01:17,850 --> 00:01:21,689
all of the students will be around after

00:01:20,159 --> 00:01:25,549
except for one there needs to run away

00:01:21,689 --> 00:01:30,229
for a plane so you can ask them there

00:01:25,549 --> 00:01:33,960
all right we are going to start off with

00:01:30,229 --> 00:01:36,540
Isabella Hogan Israel is in is from

00:01:33,960 --> 00:01:38,369
Sydney and is in year 7 and it's going

00:01:36,540 --> 00:01:41,000
to talk about machine learning with

00:01:38,369 --> 00:01:41,000
noughts and crosses

00:01:45,940 --> 00:01:52,070
hi as Nikki just said I'm Isabella or I

00:01:49,190 --> 00:01:54,020
prefer easy before I start if you have a

00:01:52,070 --> 00:01:55,960
pen and paper draw up a knots and casas

00:01:54,020 --> 00:01:58,340
board and play with the person next year

00:01:55,960 --> 00:02:01,400
while you do that think you've helped

00:01:58,340 --> 00:02:05,090
this how do you choose one move to do

00:02:01,400 --> 00:02:07,730
next do you use a random choice do

00:02:05,090 --> 00:02:12,380
strategy well this is something I had to

00:02:07,730 --> 00:02:13,790
think about for my project my project is

00:02:12,380 --> 00:02:17,870
a machine learning knots and crosses

00:02:13,790 --> 00:02:20,690
game that works using a reward system

00:02:17,870 --> 00:02:23,000
the way it chooses where to move is a

00:02:20,690 --> 00:02:28,850
random choice from a list of all the

00:02:23,000 --> 00:02:31,700
possible moves but that's where the

00:02:28,850 --> 00:02:33,290
reward system kicks in by adding or

00:02:31,700 --> 00:02:36,500
subtracting moves I can force the

00:02:33,290 --> 00:02:39,110
computer to learn strategy by waiting

00:02:36,500 --> 00:02:41,120
the randomness based on whether the

00:02:39,110 --> 00:02:45,230
computer one lost order in previous

00:02:41,120 --> 00:02:47,180
games I just said that my project is a

00:02:45,230 --> 00:02:49,160
machine learning knots and crosses game

00:02:47,180 --> 00:02:53,690
but what is machine learning

00:02:49,160 --> 00:02:57,080
well machine learning is as wikipedia

00:02:53,690 --> 00:03:00,110
says the subset of artificial

00:02:57,080 --> 00:03:02,180
intelligence that in the field of

00:03:00,110 --> 00:03:04,130
computer science that uses statistical

00:03:02,180 --> 00:03:07,550
techniques bla bla bla

00:03:04,130 --> 00:03:10,610
that's a very long definition here's my

00:03:07,550 --> 00:03:12,050
simplified version machine learning is

00:03:10,610 --> 00:03:22,280
the use of programming to make a

00:03:12,050 --> 00:03:24,380
computer be able to learn using data the

00:03:22,280 --> 00:03:26,930
way I learnt about machine learning was

00:03:24,380 --> 00:03:29,000
my inspiration for this project it was a

00:03:26,930 --> 00:03:31,250
youtube video produced by Matt Parker of

00:03:29,000 --> 00:03:32,650
the San McMath channel about how some

00:03:31,250 --> 00:03:35,720
people at Manchester University

00:03:32,650 --> 00:03:36,290
demonstrated what machining is and how

00:03:35,720 --> 00:03:39,590
it works

00:03:36,290 --> 00:03:42,050
using some matchboxes they called their

00:03:39,590 --> 00:03:44,959
version menace machine edge Accor

00:03:42,050 --> 00:03:48,290
yes that's really a word Norton crosses

00:03:44,959 --> 00:03:50,660
engine after the 1960 program by

00:03:48,290 --> 00:03:54,980
artificial intelligence pioneer Donald

00:03:50,660 --> 00:03:57,860
Michie the Manchester uni matchbook

00:03:54,980 --> 00:03:58,430
machine uses colored beats one color for

00:03:57,860 --> 00:04:00,590
each square

00:03:58,430 --> 00:04:02,629
in the knots and crosses board to

00:04:00,590 --> 00:04:05,120
represent the moves when the game

00:04:02,629 --> 00:04:07,340
resulted in a loss all the beads are

00:04:05,120 --> 00:04:10,069
removed from the system when the game

00:04:07,340 --> 00:04:12,620
all the beads used or removed from the

00:04:10,069 --> 00:04:14,510
system when the game resulted in a draw

00:04:12,620 --> 00:04:20,600
the beads our place were the exact same

00:04:14,510 --> 00:04:22,789
bead as well when the Machine won they

00:04:20,600 --> 00:04:31,850
replaced it with three of the exact same

00:04:22,789 --> 00:04:35,510
type to reward the system the name of

00:04:31,850 --> 00:04:37,789
this video shows the name of this video

00:04:35,510 --> 00:04:40,130
is called menace pile of match boxes

00:04:37,789 --> 00:04:42,320
that can learn after watching this video

00:04:40,130 --> 00:04:44,330
I asked myself could I do the same thing

00:04:42,320 --> 00:04:46,690
but with Python programming and well

00:04:44,330 --> 00:04:49,520
here I am

00:04:46,690 --> 00:04:51,590
okay so I know I'm not the first person

00:04:49,520 --> 00:04:53,720
to try to make this project as evidenced

00:04:51,590 --> 00:04:56,240
by the movie wargames which use a

00:04:53,720 --> 00:04:58,430
similar machine learning by the way that

00:04:56,240 --> 00:05:02,120
movie has the wackiest way to connect to

00:04:58,430 --> 00:05:08,300
the internet I've ever seen but I still

00:05:02,120 --> 00:05:10,220
had all my own problems to solve the

00:05:08,300 --> 00:05:12,530
hardest one I had to solve was an

00:05:10,220 --> 00:05:15,050
endless loop that I couldn't find I had

00:05:12,530 --> 00:05:17,930
to talk to my mom and that a Hogan about

00:05:15,050 --> 00:05:20,630
it at first and we thought it was a

00:05:17,930 --> 00:05:22,909
problem with the random choice it I

00:05:20,630 --> 00:05:25,310
worked around random with a random seed

00:05:22,909 --> 00:05:26,979
to help me work out the problem but that

00:05:25,310 --> 00:05:29,990
really didn't help

00:05:26,979 --> 00:05:31,900
after about 500 print statements and

00:05:29,990 --> 00:05:33,800
looking at the output line by line I

00:05:31,900 --> 00:05:35,900
figured out that it wasn't a problem

00:05:33,800 --> 00:05:41,360
with the random choice after all instead

00:05:35,900 --> 00:05:43,159
it was an indexing error because the

00:05:41,360 --> 00:05:44,870
computer was looking to put its move in

00:05:43,159 --> 00:05:46,669
the wrong spot there was a chance that

00:05:44,870 --> 00:05:48,380
that move was taken already then it

00:05:46,669 --> 00:05:50,930
would loop forever looking for somewhere

00:05:48,380 --> 00:05:53,240
to play because I didn't it didn't

00:05:50,930 --> 00:05:57,460
happen all the time it was really hard

00:05:53,240 --> 00:05:57,460
to find off-by-one errors are the worst

00:05:58,840 --> 00:06:05,210
as you can see on this slide board one

00:06:02,090 --> 00:06:07,760
in onboard one the computer tries to

00:06:05,210 --> 00:06:09,919
move into spot two and it can't because

00:06:07,760 --> 00:06:12,189
there is a nought there already well

00:06:09,919 --> 00:06:15,050
because it tries the one next to it

00:06:12,189 --> 00:06:17,749
but then it tries another one a random

00:06:15,050 --> 00:06:20,689
one say eight but it looks at the one

00:06:17,749 --> 00:06:22,729
before it again and there's a naught

00:06:20,689 --> 00:06:24,889
there as well so it keeps looping

00:06:22,729 --> 00:06:27,289
through trying to do that over and over

00:06:24,889 --> 00:06:30,439
but it can't find anything this is the

00:06:27,289 --> 00:06:32,960
same as board - but I said that there

00:06:30,439 --> 00:06:36,080
was a reward system so on board three

00:06:32,960 --> 00:06:38,870
let's just say that one and two were

00:06:36,080 --> 00:06:44,090
ruled out because they weren't winning

00:06:38,870 --> 00:06:48,789
sir it tries to move into 3 & 5 & 9

00:06:44,090 --> 00:06:48,789
same as board two still doesn't work I

00:06:51,129 --> 00:06:55,939
obviously had some other problems but

00:06:53,569 --> 00:06:57,409
this these were the most this was the

00:06:55,939 --> 00:06:59,300
most frustrating and most memorable

00:06:57,409 --> 00:07:01,310
because it was the most difficult to

00:06:59,300 --> 00:07:02,569
find okay

00:07:01,310 --> 00:07:03,800
so at this point I'm just gonna check

00:07:02,569 --> 00:07:05,659
that you've all finished your knots and

00:07:03,800 --> 00:07:08,360
crosses game and possibly met the person

00:07:05,659 --> 00:07:16,879
next to you if you have give me a thumbs

00:07:08,360 --> 00:07:18,560
up great on with the talk before I show

00:07:16,879 --> 00:07:20,449
my live demo I'm just gonna warn you

00:07:18,560 --> 00:07:22,550
that I will be asking for audience input

00:07:20,449 --> 00:07:23,479
so please please please so I don't look

00:07:22,550 --> 00:07:26,560
like a crazy person

00:07:23,479 --> 00:07:26,560
please answer

00:07:34,290 --> 00:07:59,610
can I have a name anybody okay why would

00:07:45,450 --> 00:08:07,950
you like to go another one oh sorry I

00:07:59,610 --> 00:08:35,760
took out all the print statements dager

00:08:07,950 --> 00:08:38,600
sir still going you want yes I'm just

00:08:35,760 --> 00:08:38,600
gonna go back

00:08:46,360 --> 00:08:51,530
my most proud moment in this project was

00:08:49,880 --> 00:08:53,420
making the flipping function that found

00:08:51,530 --> 00:08:55,610
all the possible transformation of the

00:08:53,420 --> 00:08:57,800
board to look for them in the dictionary

00:08:55,610 --> 00:08:59,330
indeed I was so proud that I went to

00:08:57,800 --> 00:09:02,150
school the next day and him I

00:08:59,330 --> 00:09:04,700
immediately showed it to my friends this

00:09:02,150 --> 00:09:06,290
was basically the review I got it's so

00:09:04,700 --> 00:09:08,240
weird it keeps flipping every time I

00:09:06,290 --> 00:09:09,740
want to move that was because to make

00:09:08,240 --> 00:09:11,600
the machine learning more efficient I

00:09:09,740 --> 00:09:16,070
got rid of any duplicates that were

00:09:11,600 --> 00:09:18,200
flipped a reverse to find to find the

00:09:16,070 --> 00:09:21,440
board in the dictionary of all the

00:09:18,200 --> 00:09:23,360
possible moves ever after having my

00:09:21,440 --> 00:09:23,930
eagerness to fail deflate a little a

00:09:23,360 --> 00:09:26,690
little

00:09:23,930 --> 00:09:28,790
I had a make of new function to flip it

00:09:26,690 --> 00:09:32,870
back and here's how the flipping

00:09:28,790 --> 00:09:36,740
function basically works to reverse it

00:09:32,870 --> 00:09:41,870
you would just flip position 0 and 2 or

00:09:36,740 --> 00:09:46,970
1 & 3 4 & 6 & 7 & 9 and to turn it

00:09:41,870 --> 00:09:47,630
clockwise you would flip 2 & 4 7 & 3 & 8

00:09:46,970 --> 00:09:52,390
& 9

00:09:47,630 --> 00:09:52,390
essentially flipping this one yeah

00:09:53,680 --> 00:10:00,230
that's the different possibilities of 1

00:09:56,300 --> 00:10:01,910
board okay so I know that nothing is

00:10:00,230 --> 00:10:04,100
perfect so here are a few things I want

00:10:01,910 --> 00:10:06,920
to change or add to my project number

00:10:04,100 --> 00:10:08,150
one my user interface right now my user

00:10:06,920 --> 00:10:10,430
interface is just some print statements

00:10:08,150 --> 00:10:13,850
so I'd love to make this better by using

00:10:10,430 --> 00:10:16,430
PI game or Kibby so it really is an

00:10:13,850 --> 00:10:20,090
actual game and number two my spaghetti

00:10:16,430 --> 00:10:21,770
code my code is quite messy and I would

00:10:20,090 --> 00:10:23,720
really like to sit down when I have some

00:10:21,770 --> 00:10:26,470
time and just make it cleaner and put in

00:10:23,720 --> 00:10:26,470
some comments maybe

00:10:27,990 --> 00:10:33,220
what is the best way to track learning

00:10:30,660 --> 00:10:35,590
well for our students is assessment

00:10:33,220 --> 00:10:37,300
after assessment after assessment I

00:10:35,590 --> 00:10:39,280
don't really know how to make an

00:10:37,300 --> 00:10:41,500
assessment for a computer so I went to

00:10:39,280 --> 00:10:43,960
researching after a bit of searching I

00:10:41,500 --> 00:10:45,960
found this thing called CSV writer the

00:10:43,960 --> 00:10:47,980
first instance of this was something

00:10:45,960 --> 00:10:50,350
somebody who wanted to reference the

00:10:47,980 --> 00:10:52,270
Monty Python video spam and sir there

00:10:50,350 --> 00:10:55,300
was a lot of printing of the word spam

00:10:52,270 --> 00:10:58,240
into an excel sheet I just replaced the

00:10:55,300 --> 00:11:00,310
word spam and everything else with my

00:10:58,240 --> 00:11:02,760
daughter stuff like where it moved to

00:11:00,310 --> 00:11:07,510
and stuff like that

00:11:02,760 --> 00:11:08,860
my daughter so after 400 games yes it

00:11:07,510 --> 00:11:10,510
was against the random BOTS but who's

00:11:08,860 --> 00:11:14,890
really gonna play that many games in a

00:11:10,510 --> 00:11:16,690
row I found that my my program was

00:11:14,890 --> 00:11:20,110
actually winning more than during all

00:11:16,690 --> 00:11:23,110
losing as you can see this one is my

00:11:20,110 --> 00:11:26,800
daughter and it goes in a pretty steady

00:11:23,110 --> 00:11:31,150
upwards motion as the as it goes in the

00:11:26,800 --> 00:11:33,790
center place but in Menace's data as you

00:11:31,150 --> 00:11:36,670
can see it has the different colors over

00:11:33,790 --> 00:11:40,050
here it goes down a lot before it has to

00:11:36,670 --> 00:11:45,510
go up again I was quite happy with mine

00:11:40,050 --> 00:11:45,510
so as the learning to say that's over

00:11:53,100 --> 00:12:02,019
that was fantastic thank you very much

00:11:57,550 --> 00:12:02,500
Izzy Sophie can we get you on deck stay

00:12:02,019 --> 00:12:05,649
there

00:12:02,500 --> 00:12:10,209
Izzy sorry

00:12:05,649 --> 00:12:12,699
yes that Joseph yes reading I'm I'm

00:12:10,209 --> 00:12:15,129
still - I can't believe I won that knots

00:12:12,699 --> 00:12:18,910
and crosses game oh it's really hot

00:12:15,129 --> 00:12:21,759
still racing questions do we have a

00:12:18,910 --> 00:12:23,050
question oh ok we have a question Tony

00:12:21,759 --> 00:12:27,120
asked you a question and then I will

00:12:23,050 --> 00:12:27,120
repeat it so that it's recorded as well

00:12:29,550 --> 00:12:34,240
[Music]

00:12:31,230 --> 00:12:38,649
because I actually do some school things

00:12:34,240 --> 00:12:41,680
Oh some nice sass coming back there from

00:12:38,649 --> 00:12:51,160
Izzy thank you very much

00:12:41,680 --> 00:12:53,740
all right excellent uh Joseph you're all

00:12:51,160 --> 00:12:56,819
good hang up so Joseph Tay is from

00:12:53,740 --> 00:13:01,960
Melbourne and Joseph is in year 11

00:12:56,819 --> 00:13:07,920
thanks all right hi everyone I'm

00:13:01,960 --> 00:13:10,509
[Applause]

00:13:07,920 --> 00:13:12,699
currently a year 11 students in Hillary

00:13:10,509 --> 00:13:14,860
College today I'll be discussing my

00:13:12,699 --> 00:13:17,139
research on optimizing memory retention

00:13:14,860 --> 00:13:19,360
using a machine learning based flashcard

00:13:17,139 --> 00:13:20,800
system built in Pilon obviously that

00:13:19,360 --> 00:13:23,079
sounds a little bit convoluted so I'll

00:13:20,800 --> 00:13:24,309
try and simplify things so imagine you

00:13:23,079 --> 00:13:27,009
have a test tomorrow

00:13:24,309 --> 00:13:29,680
and right now you only have 15 minutes

00:13:27,009 --> 00:13:31,779
to memorize 30 foreign words what do you

00:13:29,680 --> 00:13:35,110
do a common approach is to use

00:13:31,779 --> 00:13:37,240
flashcards computer-based applications

00:13:35,110 --> 00:13:39,579
that help you to memorize information by

00:13:37,240 --> 00:13:41,889
using algorithms selectively choose and

00:13:39,579 --> 00:13:44,439
present information at the optimal time

00:13:41,889 --> 00:13:46,120
for you to practice however most of

00:13:44,439 --> 00:13:49,269
these applications that exists are based

00:13:46,120 --> 00:13:51,009
on very simple rules and equations over

00:13:49,269 --> 00:13:53,139
the course of last year I've researched

00:13:51,009 --> 00:13:54,790
various data-driven techniques to try

00:13:53,139 --> 00:13:57,279
and improve upon such traditional

00:13:54,790 --> 00:14:00,610
systems and more accurately predict when

00:13:57,279 --> 00:14:02,470
you are at the optimal time to study but

00:14:00,610 --> 00:14:02,870
I guess you may be wondering when is the

00:14:02,470 --> 00:14:05,450
opt

00:14:02,870 --> 00:14:08,210
time to study so answer this here's a

00:14:05,450 --> 00:14:10,160
quick intro to how memory works if you

00:14:08,210 --> 00:14:10,970
learn something new you will slowly

00:14:10,160 --> 00:14:12,740
forget it

00:14:10,970 --> 00:14:14,839
note that chance of recall is

00:14:12,740 --> 00:14:16,400
essentially the probability of you being

00:14:14,839 --> 00:14:16,850
able to remember something at any given

00:14:16,400 --> 00:14:19,580
time

00:14:16,850 --> 00:14:21,380
you must repeatedly revisit or review

00:14:19,580 --> 00:14:22,040
information to prevent it from being

00:14:21,380 --> 00:14:25,339
forgotten

00:14:22,040 --> 00:14:27,200
in 1913 Epping House discovered that you

00:14:25,339 --> 00:14:29,120
learn better if there is a spacing

00:14:27,200 --> 00:14:31,610
between each time you review information

00:14:29,120 --> 00:14:33,320
now this spacing can't be true long

00:14:31,610 --> 00:14:35,690
otherwise you'll forget the information

00:14:33,320 --> 00:14:38,029
nor can it be too short otherwise the

00:14:35,690 --> 00:14:40,190
benefits are reduced and thus the best

00:14:38,029 --> 00:14:42,800
time for you to review information is on

00:14:40,190 --> 00:14:44,600
the verge of forgetting this is the

00:14:42,800 --> 00:14:46,070
ultimate goal of the flashcard

00:14:44,600 --> 00:14:50,080
application to predict when you are at

00:14:46,070 --> 00:14:52,279
this point in time but how do we do this

00:14:50,080 --> 00:14:54,529
to do so we have to actually be able to

00:14:52,279 --> 00:14:57,260
predict a student's chance of recall at

00:14:54,529 --> 00:14:58,910
any given time so according to the

00:14:57,260 --> 00:15:00,860
research of Epping house we can

00:14:58,910 --> 00:15:03,410
calculate the percent chance of recall

00:15:00,860 --> 00:15:05,060
with this specific equation an equation

00:15:03,410 --> 00:15:07,459
that mathematically describes how

00:15:05,060 --> 00:15:09,800
forgetting occurs in an exponential

00:15:07,459 --> 00:15:11,180
fashion to calculate the chance of

00:15:09,800 --> 00:15:14,240
remembering something you need two

00:15:11,180 --> 00:15:16,730
components one is the time passed since

00:15:14,240 --> 00:15:19,130
last review and two is a measure of

00:15:16,730 --> 00:15:21,560
memory strength which is essentially how

00:15:19,130 --> 00:15:23,000
strongly an item is embedded in one's

00:15:21,560 --> 00:15:25,459
memory at any given time

00:15:23,000 --> 00:15:27,410
so changing the memory strength value

00:15:25,459 --> 00:15:30,110
affects the rate at which forgetting

00:15:27,410 --> 00:15:32,390
occurs and thus my goal was to try and

00:15:30,110 --> 00:15:34,850
use machine learning to try and predict

00:15:32,390 --> 00:15:37,610
the memory strength value and in turn

00:15:34,850 --> 00:15:39,410
predict the chance of recall we

00:15:37,610 --> 00:15:41,000
calculated this value using a heuristic

00:15:39,410 --> 00:15:43,270
approximation similar to what

00:15:41,000 --> 00:15:45,800
researchers settles and meter also used

00:15:43,270 --> 00:15:48,260
now memory strength is essentially a

00:15:45,800 --> 00:15:50,300
combination of your past study history

00:15:48,260 --> 00:15:52,070
for example the more times you have

00:15:50,300 --> 00:15:53,990
reviewed and studied the word the more

00:15:52,070 --> 00:15:56,089
optimal the spacing between each review

00:15:53,990 --> 00:15:58,400
has been or the more correct answers in

00:15:56,089 --> 00:16:01,520
total the higher your memory strength

00:15:58,400 --> 00:16:04,040
value will likely be but how do we use

00:16:01,520 --> 00:16:06,560
these features to try and determine a

00:16:04,040 --> 00:16:08,690
quantitative memory strength value and

00:16:06,560 --> 00:16:11,510
so this can be posed as a classic

00:16:08,690 --> 00:16:13,430
machine learning problem we take large

00:16:11,510 --> 00:16:15,410
data sets with over a hundred thousand

00:16:13,430 --> 00:16:16,400
student interruptions from the PSL see

00:16:15,410 --> 00:16:18,080
data shop

00:16:16,400 --> 00:16:20,750
is a popular data repository for

00:16:18,080 --> 00:16:22,580
educational data and use a machine

00:16:20,750 --> 00:16:24,650
learning algorithm to learn the patterns

00:16:22,580 --> 00:16:26,780
and relationships between features of a

00:16:24,650 --> 00:16:29,240
student past performance and the

00:16:26,780 --> 00:16:31,250
students current memory strengths the

00:16:29,240 --> 00:16:33,020
algorithm then produces a model that can

00:16:31,250 --> 00:16:36,290
predict a student's memory strength

00:16:33,020 --> 00:16:38,270
given such features so what features

00:16:36,290 --> 00:16:41,000
specifically did we use to predict the

00:16:38,270 --> 00:16:43,700
students memory strengths satchels and

00:16:41,000 --> 00:16:45,770
meters 2016 study used a number of

00:16:43,700 --> 00:16:48,680
correct and incorrect answers and the

00:16:45,770 --> 00:16:51,260
total number of reviews as features to

00:16:48,680 --> 00:16:53,900
predict the memory strength value ready

00:16:51,260 --> 00:16:55,730
study of 2016 also used a value that

00:16:53,900 --> 00:16:57,860
increased and decreased depending on

00:16:55,730 --> 00:16:59,450
whether that user answered correctly or

00:16:57,860 --> 00:17:02,060
incorrectly it was derived from the

00:16:59,450 --> 00:17:04,160
popular lightness system and these

00:17:02,060 --> 00:17:05,780
models performed pretty well but I tried

00:17:04,160 --> 00:17:08,480
to find new features that would raise

00:17:05,780 --> 00:17:10,370
predictive accuracy even further and so

00:17:08,480 --> 00:17:13,610
I trained a simple regression model that

00:17:10,370 --> 00:17:15,620
with a range of different features to

00:17:13,610 --> 00:17:18,260
predict memory strength and after much

00:17:15,620 --> 00:17:21,070
experimentation I found that these three

00:17:18,260 --> 00:17:23,630
features performed most effectively and

00:17:21,070 --> 00:17:26,209
a very interesting thing that I found

00:17:23,630 --> 00:17:28,240
was that capturing and prioritizing

00:17:26,209 --> 00:17:30,410
correct answers that were more recent

00:17:28,240 --> 00:17:33,590
significantly improved predictive

00:17:30,410 --> 00:17:35,480
accuracy in fact using only features 1 &

00:17:33,590 --> 00:17:38,650
2 which were also used by settles and

00:17:35,480 --> 00:17:41,330
meter your an inaccuracy of around 70%

00:17:38,650 --> 00:17:43,640
however using all three features led to

00:17:41,330 --> 00:17:45,710
a significant 8 to 9 percent accuracy

00:17:43,640 --> 00:17:47,600
burst indicating that capturing how

00:17:45,710 --> 00:17:49,730
recently a student has answered

00:17:47,600 --> 00:17:51,170
correctly is a clear contribution and

00:17:49,730 --> 00:17:53,270
improvement to the models of past

00:17:51,170 --> 00:17:55,010
studies this could be because more

00:17:53,270 --> 00:17:57,560
recent success may indicate that

00:17:55,010 --> 00:18:00,680
learning has taken place and thus leads

00:17:57,560 --> 00:18:02,810
to more accurate predictions the model

00:18:00,680 --> 00:18:04,730
also performs compare ibly and better

00:18:02,810 --> 00:18:06,230
than a simple logistic regression model

00:18:04,730 --> 00:18:08,450
and a neural network that tried to

00:18:06,230 --> 00:18:10,880
directly predict the percent chance of

00:18:08,450 --> 00:18:12,710
recall it also performs compare ibly

00:18:10,880 --> 00:18:15,410
with an item response theory model which

00:18:12,710 --> 00:18:17,090
is a commonly used standard baseline in

00:18:15,410 --> 00:18:19,400
the student modeling community and thus

00:18:17,090 --> 00:18:21,670
this rare for reaffirms the theoretical

00:18:19,400 --> 00:18:24,440
assumptions that the model is based on

00:18:21,670 --> 00:18:27,110
so after the model was developed I guess

00:18:24,440 --> 00:18:29,810
I implemented it as an online web-based

00:18:27,110 --> 00:18:32,810
flash card application built in flask

00:18:29,810 --> 00:18:35,480
this is its appearance after logging in

00:18:32,810 --> 00:18:37,430
students see this foreign word type the

00:18:35,480 --> 00:18:39,830
English translation below and click

00:18:37,430 --> 00:18:42,110
Submit while this looks very simple

00:18:39,830 --> 00:18:43,970
every time the user clicks submits the

00:18:42,110 --> 00:18:45,950
application runs the machine learning

00:18:43,970 --> 00:18:48,260
model in the backend to calculate the

00:18:45,950 --> 00:18:50,510
chance of recall for every single word

00:18:48,260 --> 00:18:51,980
the application then selects and

00:18:50,510 --> 00:18:54,050
presented the word that is closest to

00:18:51,980 --> 00:18:56,510
being forgotten which is the optimal

00:18:54,050 --> 00:18:58,250
time for the student to study I'm I

00:18:56,510 --> 00:19:00,170
going to the technical details of the

00:18:58,250 --> 00:19:01,700
application for the sake of time but it

00:19:00,170 --> 00:19:03,080
was essentially a basic flask

00:19:01,700 --> 00:19:06,260
implementation with simple

00:19:03,080 --> 00:19:08,120
authentication now as you saw previously

00:19:06,260 --> 00:19:10,280
the model achieved a pretty high

00:19:08,120 --> 00:19:12,410
accuracy on existing data sets but does

00:19:10,280 --> 00:19:14,630
this translate to an improvement in

00:19:12,410 --> 00:19:17,210
human learning and more importantly how

00:19:14,630 --> 00:19:18,890
does it compare with an existing simple

00:19:17,210 --> 00:19:21,200
application that doesn't use machine

00:19:18,890 --> 00:19:23,390
learning this is what we tried to test

00:19:21,200 --> 00:19:25,640
by conducting a classroom experiment on

00:19:23,390 --> 00:19:27,950
around 40 Japanese language students I

00:19:25,640 --> 00:19:29,900
tested my machine learning model against

00:19:27,950 --> 00:19:32,120
two other models the lightener model

00:19:29,900 --> 00:19:34,190
which is a very popular and commonly

00:19:32,120 --> 00:19:36,590
used heuristic model used by many

00:19:34,190 --> 00:19:38,210
existing flashcard applications as well

00:19:36,590 --> 00:19:41,360
as a simple controller that presented

00:19:38,210 --> 00:19:43,850
words in a sequential order the

00:19:41,360 --> 00:19:46,760
experiment lasted for targeted a very

00:19:43,850 --> 00:19:50,000
realistic and short-term scenario and it

00:19:46,760 --> 00:19:52,550
lasted for two days on day one students

00:19:50,000 --> 00:19:55,430
spent 15 minutes memorizing 30 English

00:19:52,550 --> 00:20:02,030
Japanese word pairs and on day 2 there

00:19:55,430 --> 00:20:04,430
was a test on all 30 words so here are

00:20:02,030 --> 00:20:06,200
my results on day 2 which is the test

00:20:04,430 --> 00:20:07,940
today students who used the machine

00:20:06,200 --> 00:20:09,800
learning model scored around 40 percent

00:20:07,940 --> 00:20:11,690
on average followed by the lightener

00:20:09,800 --> 00:20:14,390
algorithm with 34 percent and the

00:20:11,690 --> 00:20:15,980
control 28 percent in fact students were

00:20:14,390 --> 00:20:18,320
assigned to the machine learning model

00:20:15,980 --> 00:20:21,140
forgot less words on average between day

00:20:18,320 --> 00:20:22,970
1 and day 2 and had a higher overall

00:20:21,140 --> 00:20:25,640
accuracy during the learning phase on

00:20:22,970 --> 00:20:28,100
day 1 and so I compared to a commonly

00:20:25,640 --> 00:20:29,210
used rule-based Lightner model these

00:20:28,100 --> 00:20:31,250
findings show that a flashcard

00:20:29,210 --> 00:20:33,140
application based on machine learning is

00:20:31,250 --> 00:20:35,180
able to more consistently present

00:20:33,140 --> 00:20:37,940
informations at the optimal time and

00:20:35,180 --> 00:20:40,570
consequently leading to increased memory

00:20:37,940 --> 00:20:42,730
retention so

00:20:40,570 --> 00:20:44,980
at Python impacts this project now

00:20:42,730 --> 00:20:46,960
initially I used our language developed

00:20:44,980 --> 00:20:49,179
the model with our studio but over time

00:20:46,960 --> 00:20:53,110
I began to realize its shortcomings and

00:20:49,179 --> 00:20:55,059
moved over to Python so why firstly let

00:20:53,110 --> 00:20:56,380
me pose the situation after training a

00:20:55,059 --> 00:20:58,330
model in our language

00:20:56,380 --> 00:21:00,789
how would you deploy the model and use

00:20:58,330 --> 00:21:03,159
it to make a real-time predictions in an

00:21:00,789 --> 00:21:04,480
actual flashcard application the issue

00:21:03,159 --> 00:21:06,460
is that you can't write a flashcard

00:21:04,480 --> 00:21:08,049
application in our language is let the

00:21:06,460 --> 00:21:09,880
language isn't designed to perform such

00:21:08,049 --> 00:21:13,210
tasks you have to write the application

00:21:09,880 --> 00:21:14,950
in another language and hence the only

00:21:13,210 --> 00:21:16,870
option is to deploy the model on to a

00:21:14,950 --> 00:21:18,669
web server to make predictions from

00:21:16,870 --> 00:21:21,129
there which was too tight tedious and

00:21:18,669 --> 00:21:23,169
time-consuming for this project on the

00:21:21,129 --> 00:21:25,179
other hand Python makes it much easier

00:21:23,169 --> 00:21:26,769
to deploy a trained machine learning

00:21:25,179 --> 00:21:28,929
model because Python can be used to both

00:21:26,769 --> 00:21:31,330
train the model and develop the

00:21:28,929 --> 00:21:32,919
flashcard application and so after

00:21:31,330 --> 00:21:34,779
training the model I can use pythons

00:21:32,919 --> 00:21:37,659
pickle function to serialize the model

00:21:34,779 --> 00:21:40,629
and store it as a dot PL file it can

00:21:37,659 --> 00:21:42,009
then be on pickled and immediately used

00:21:40,629 --> 00:21:45,700
in the flashcard application to make

00:21:42,009 --> 00:21:47,110
real time predictions secondly using

00:21:45,700 --> 00:21:49,120
Python has also allowed me to use a

00:21:47,110 --> 00:21:51,610
package known as lentil which is a

00:21:49,120 --> 00:21:53,559
package for training evaluating and

00:21:51,610 --> 00:21:55,990
visualizing models that specifically

00:21:53,559 --> 00:21:58,509
predict student knowledge the library

00:21:55,990 --> 00:22:00,759
contains a base class or a parent class

00:21:58,509 --> 00:22:03,190
called skill model that you can inherit

00:22:00,759 --> 00:22:05,230
from and use to develop your own models

00:22:03,190 --> 00:22:06,789
to predict student knowledge and by

00:22:05,230 --> 00:22:08,710
using this base class you're given

00:22:06,789 --> 00:22:11,409
access to a whole set of other features

00:22:08,710 --> 00:22:13,330
including a range of functions for model

00:22:11,409 --> 00:22:15,820
evaluation including a range of relevant

00:22:13,330 --> 00:22:18,190
metrics you can visualize data sets in

00:22:15,820 --> 00:22:20,049
student interactions you can compare

00:22:18,190 --> 00:22:21,639
your model with other models in the

00:22:20,049 --> 00:22:24,700
literature that have been pre coded in

00:22:21,639 --> 00:22:26,769
the library and many other specific

00:22:24,700 --> 00:22:28,049
features in developing predictive models

00:22:26,769 --> 00:22:30,549
of memory

00:22:28,049 --> 00:22:32,860
now while lentil provides the framework

00:22:30,549 --> 00:22:34,960
for developing and evaluating student

00:22:32,860 --> 00:22:36,820
models the actual machine learning

00:22:34,960 --> 00:22:39,129
algorithms and optimization processes

00:22:36,820 --> 00:22:40,750
are included in the scikit-learn library

00:22:39,129 --> 00:22:42,759
I'm sure most of you have heard of this

00:22:40,750 --> 00:22:44,799
library but it makes training regression

00:22:42,759 --> 00:22:46,240
models neural networks and other models

00:22:44,799 --> 00:22:49,360
are much more straightforward and

00:22:46,240 --> 00:22:51,309
simpler process I also used numpy and

00:22:49,360 --> 00:22:53,230
pandas for data manipulation and

00:22:51,309 --> 00:22:53,929
processing it's just unique utilizing

00:22:53,230 --> 00:22:57,080
data frame

00:22:53,929 --> 00:22:59,659
etc and so yeah it's essentially a very

00:22:57,080 --> 00:23:01,129
brief overview of my research the

00:22:59,659 --> 00:23:02,899
results of my investigation prompts

00:23:01,129 --> 00:23:05,149
commercial flash card applications based

00:23:02,899 --> 00:23:07,190
on very simple rules and heuristics to

00:23:05,149 --> 00:23:09,529
take steps in adopting more advanced

00:23:07,190 --> 00:23:11,119
techniques and an interesting thing was

00:23:09,529 --> 00:23:12,559
that during the course of my research I

00:23:11,119 --> 00:23:14,360
noticed that a few apps including

00:23:12,559 --> 00:23:16,879
Quizlet are beginning to explore

00:23:14,360 --> 00:23:18,100
data-driven techniques and approaches in

00:23:16,879 --> 00:23:20,570
enhancing student learning

00:23:18,100 --> 00:23:22,580
clearly machine learning is beginning to

00:23:20,570 --> 00:23:25,249
drive our technological improvements in

00:23:22,580 --> 00:23:26,960
education and while my research focuses

00:23:25,249 --> 00:23:28,999
specifically in optimizing a flash

00:23:26,960 --> 00:23:30,980
application such techniques can

00:23:28,999 --> 00:23:33,110
undoubtedly be but be applied beyond

00:23:30,980 --> 00:23:34,340
vocabulary learning and work towards a

00:23:33,110 --> 00:23:36,710
more personalized a classroom

00:23:34,340 --> 00:23:38,480
environment in the future so obviously I

00:23:36,710 --> 00:23:39,919
was unable to fully describe the extent

00:23:38,480 --> 00:23:41,720
of my research given the strict time

00:23:39,919 --> 00:23:43,639
constraints but if you're interested in

00:23:41,720 --> 00:23:45,619
the simulator read more about it you can

00:23:43,639 --> 00:23:48,139
download the report and a link above or

00:23:45,619 --> 00:23:50,179
ask me any questions by email or often

00:23:48,139 --> 00:23:51,379
today and yeah that's it thanks so much

00:23:50,179 --> 00:23:54,580
for this for your time and this

00:23:51,379 --> 00:23:54,580
opportunity I hope you learned something

00:23:58,149 --> 00:24:03,019
thank you so much Joseph I language

00:24:01,519 --> 00:24:04,460
learning is gonna be so much easier for

00:24:03,019 --> 00:24:05,539
me in the future hang on you you hold

00:24:04,460 --> 00:24:11,720
that because I'm gonna find you a

00:24:05,539 --> 00:24:20,509
question while Sophie comes up do we

00:24:11,720 --> 00:24:22,759
have a question for Jerry no no yes yes

00:24:20,509 --> 00:24:24,799
okay Katrina you're going to ask a

00:24:22,759 --> 00:24:26,889
question I'm gonna repeat it for the

00:24:24,799 --> 00:24:26,889
video

00:24:40,960 --> 00:24:45,890
so so Katrina is asking given the amount

00:24:44,480 --> 00:24:50,110
of fantastic amount of effort put into

00:24:45,890 --> 00:24:53,500
this are you going to take this further

00:24:50,110 --> 00:24:56,140
it definitely makes more sense this way

00:24:53,500 --> 00:24:59,510
to be something that educators can use

00:24:56,140 --> 00:25:00,530
yeah yeah definitely as an obviously

00:24:59,510 --> 00:25:02,810
there's a lot of room for improvement

00:25:00,530 --> 00:25:06,230
with the application itself I think one

00:25:02,810 --> 00:25:07,340
of the main drawbacks is actually and

00:25:06,230 --> 00:25:10,370
one of the main areas that I can improve

00:25:07,340 --> 00:25:12,680
upon is collecting more data and trying

00:25:10,370 --> 00:25:14,480
to individually adapt to individual

00:25:12,680 --> 00:25:16,130
students because obviously the the thing

00:25:14,480 --> 00:25:18,320
with this model was that it trained on a

00:25:16,130 --> 00:25:19,780
population of data and one thing that I

00:25:18,320 --> 00:25:22,310
could do to improve it is to try and

00:25:19,780 --> 00:25:24,770
consistently retrain the model for each

00:25:22,310 --> 00:25:27,200
specific learner and that way we could

00:25:24,770 --> 00:25:29,690
adapt to different learning abilities so

00:25:27,200 --> 00:25:31,220
obviously I'm gonna try and extend the

00:25:29,690 --> 00:25:33,830
application as much as possible in and

00:25:31,220 --> 00:25:36,320
before I actually release it all right

00:25:33,830 --> 00:25:39,290
now it is online it's it's under a

00:25:36,320 --> 00:25:40,730
domain name but I have no plans I've

00:25:39,290 --> 00:25:42,050
actually really seen your educators

00:25:40,730 --> 00:25:44,120
because there's a bunch of other

00:25:42,050 --> 00:25:46,820
applications out there right now but

00:25:44,120 --> 00:25:49,400
yeah I'll try and improve it place more

00:25:46,820 --> 00:25:50,960
data yeah hopefully one day one more

00:25:49,400 --> 00:25:53,750
super quick question from the from the

00:25:50,960 --> 00:25:54,710
peanut gallery online because you're the

00:25:53,750 --> 00:25:58,550
only one who's not gonna be here

00:25:54,710 --> 00:26:02,060
afterwards does does your model continue

00:25:58,550 --> 00:26:04,790
to retrain as people use it yeah so

00:26:02,060 --> 00:26:07,370
currently no so right now the

00:26:04,790 --> 00:26:10,700
predictions are generalized and it's

00:26:07,370 --> 00:26:13,070
trained from an initial set of data but

00:26:10,700 --> 00:26:15,770
again that's definitely an area that I

00:26:13,070 --> 00:26:17,210
could look at and as new data is

00:26:15,770 --> 00:26:19,190
collected from each individual student

00:26:17,210 --> 00:26:20,990
the model would adapt to his specific

00:26:19,190 --> 00:26:22,820
learning ability in that's yeah

00:26:20,990 --> 00:26:24,740
definitely one thing I look at fantastic

00:26:22,820 --> 00:26:31,830
thank you very very much

00:26:24,740 --> 00:26:36,639
[Applause]

00:26:31,830 --> 00:26:39,460
all right I will hand over to Sophie may

00:26:36,639 --> 00:26:42,129
press so if he is from Canberra and is

00:26:39,460 --> 00:26:44,860
in year 12 and is going to talk to us

00:26:42,129 --> 00:26:47,220
about text Samuraizer which is very

00:26:44,860 --> 00:26:47,220
exciting

00:26:51,299 --> 00:26:55,990
thank you thank you hello my name is

00:26:54,279 --> 00:26:57,759
Sophie and I'm a year 12 student from

00:26:55,990 --> 00:26:59,470
Canberra I'm here to talk about the tech

00:26:57,759 --> 00:27:02,080
summer as I built as part of my

00:26:59,470 --> 00:27:04,210
assessment for your 12 a tech summer as

00:27:02,080 --> 00:27:07,000
up as the name would suggest is a

00:27:04,210 --> 00:27:08,710
program that is provided with an

00:27:07,000 --> 00:27:12,940
inputted text and produces a summary of

00:27:08,710 --> 00:27:17,620
the main point of that text they exist

00:27:12,940 --> 00:27:19,360
mostly because people are lazy but but

00:27:17,620 --> 00:27:21,519
they're also an application of the field

00:27:19,360 --> 00:27:23,379
of computational linguistics and a way

00:27:21,519 --> 00:27:29,559
for them computers to interpret language

00:27:23,379 --> 00:27:31,629
in a meaningful way I chose to do this

00:27:29,559 --> 00:27:32,740
project because of my love of birth

00:27:31,629 --> 00:27:37,779
programming and languages

00:27:32,740 --> 00:27:39,190
I love languages because there's

00:27:37,779 --> 00:27:42,129
something I find inherently interesting

00:27:39,190 --> 00:27:43,480
about how humans communicate and how we

00:27:42,129 --> 00:27:45,129
interpret information with each other

00:27:43,480 --> 00:27:46,799
it's also similar to the reason that I

00:27:45,129 --> 00:27:48,580
like programming because it's about

00:27:46,799 --> 00:27:51,820
interpreting information and

00:27:48,580 --> 00:27:55,149
communicating ideas so when I was

00:27:51,820 --> 00:27:58,990
choosing a topic to do for with NIT this

00:27:55,149 --> 00:28:00,759
seemed like the natural conclusion the

00:27:58,990 --> 00:28:03,159
development process lasted for the last

00:28:00,759 --> 00:28:07,840
12 weeks I spent about eight hours a day

00:28:03,159 --> 00:28:09,429
no sorry it I was a week sorry maybe an

00:28:07,840 --> 00:28:14,379
hour or two each day or just one hour a

00:28:09,429 --> 00:28:15,669
day depending on working this project so

00:28:14,379 --> 00:28:17,649
the texts summarize I create an

00:28:15,669 --> 00:28:19,269
obstructive summary of its input which

00:28:17,649 --> 00:28:21,070
means it's different from just like

00:28:19,269 --> 00:28:22,990
picking out the key sentence because it

00:28:21,070 --> 00:28:24,789
uses all the daughter the algorithm

00:28:22,990 --> 00:28:29,379
derives from the paragraph to create a

00:28:24,789 --> 00:28:33,090
new sentence that is of the meaning like

00:28:29,379 --> 00:28:33,090
it carries the same sentiment

00:28:34,650 --> 00:28:40,660
yeah my basic process is in sort of

00:28:38,320 --> 00:28:41,950
three broad steps the first step is to

00:28:40,660 --> 00:28:46,690
sort words by their type for example

00:28:41,950 --> 00:28:48,310
nouns verbs adjectives adverbs etc and

00:28:46,690 --> 00:28:50,170
the second step is to identify the most

00:28:48,310 --> 00:28:53,200
important words of each and any key

00:28:50,170 --> 00:28:55,480
phrases that are important or any I

00:28:53,200 --> 00:28:56,920
guess groups of words that have to

00:28:55,480 --> 00:28:59,170
belong together and then the third

00:28:56,920 --> 00:29:01,960
sentence is to reconstruct sentences and

00:28:59,170 --> 00:29:11,110
also ensure that they follow the English

00:29:01,960 --> 00:29:13,000
language's complex grammar rules so the

00:29:11,110 --> 00:29:14,200
program starts by just going through all

00:29:13,000 --> 00:29:17,200
the words in the paragraph and sorting

00:29:14,200 --> 00:29:24,430
them by that type it does this with a

00:29:17,200 --> 00:29:29,500
lot of files I created or stole I guess

00:29:24,430 --> 00:29:33,340
technically from the Oxford English

00:29:29,500 --> 00:29:35,470
Dictionary and less reputable but still

00:29:33,340 --> 00:29:39,130
culturally valid sources like I'm a

00:29:35,470 --> 00:29:40,810
dictionary it's not just through each of

00:29:39,130 --> 00:29:44,080
the files for a match and pairs them

00:29:40,810 --> 00:29:47,500
together for proper nouns which there

00:29:44,080 --> 00:29:52,840
wasn't really a list of because that

00:29:47,500 --> 00:29:55,060
would be long I add to the file each

00:29:52,840 --> 00:29:57,370
time the program is run so it looks for

00:29:55,060 --> 00:29:58,720
words that are capitalized but aren't

00:29:57,370 --> 00:30:00,910
the first word of the sentence like

00:29:58,720 --> 00:30:04,090
proper nouns are supposed to be and adds

00:30:00,910 --> 00:30:05,620
it to a file of proper nouns so while

00:30:04,090 --> 00:30:08,620
all the other types of files verbs and

00:30:05,620 --> 00:30:10,390
other stuff are pre done before I run

00:30:08,620 --> 00:30:12,100
the program the proper nouns are like

00:30:10,390 --> 00:30:16,450
built on every time you summarize

00:30:12,100 --> 00:30:18,040
something the verb file also has all the

00:30:16,450 --> 00:30:20,860
conjugation so I don't have to worry too

00:30:18,040 --> 00:30:22,780
much about infinitive forms and all the

00:30:20,860 --> 00:30:26,650
other weird stuff that goes on with

00:30:22,780 --> 00:30:28,150
verbs yeah the second step is to

00:30:26,650 --> 00:30:30,190
identify the most important words of

00:30:28,150 --> 00:30:32,380
each type it starts by searching for the

00:30:30,190 --> 00:30:35,530
most frequently occurring words and it

00:30:32,380 --> 00:30:37,420
also incorporates synonyms as the sort

00:30:35,530 --> 00:30:41,230
of same score because if it didn't it'd

00:30:37,420 --> 00:30:44,650
be kind of hard to find something that's

00:30:41,230 --> 00:30:47,290
the most important thing

00:30:44,650 --> 00:30:48,730
with the verbs it takes not only into

00:30:47,290 --> 00:30:52,780
account the verb itself its various

00:30:48,730 --> 00:30:54,160
conjugations and also its general

00:30:52,780 --> 00:30:57,280
importance in e my language so for

00:30:54,160 --> 00:30:59,080
example the auxiliary verbs to have and

00:30:57,280 --> 00:31:00,970
to be treated as more important than

00:30:59,080 --> 00:31:10,570
let's say a less common and used verb

00:31:00,970 --> 00:31:12,760
like to summarize the third step is the

00:31:10,570 --> 00:31:16,030
most complex and kind of difficult to

00:31:12,760 --> 00:31:19,140
explain step but it involves it starts

00:31:16,030 --> 00:31:22,030
with the most major proper noun from the

00:31:19,140 --> 00:31:24,640
previous step and then uses the Markov

00:31:22,030 --> 00:31:26,290
chain model along with the waiting from

00:31:24,640 --> 00:31:28,179
the previous step to produce the final

00:31:26,290 --> 00:31:30,100
output sentence it also runs through a

00:31:28,179 --> 00:31:31,360
very large and complicated file of

00:31:30,100 --> 00:31:32,920
possible English sentence structures

00:31:31,360 --> 00:31:36,910
which I had to write by hand which was

00:31:32,920 --> 00:31:39,400
not fun language is terrible another

00:31:36,910 --> 00:31:41,110
part of reconstructing the sentences

00:31:39,400 --> 00:31:42,880
which was also a massive headache was

00:31:41,110 --> 00:31:44,230
putting all the clauses and articles in

00:31:42,880 --> 00:31:50,130
the right place and making sure

00:31:44,230 --> 00:31:52,300
everything just fits properly yeah so a

00:31:50,130 --> 00:31:55,240
Markov chain model is a probability

00:31:52,300 --> 00:31:56,890
model that depends on transitions

00:31:55,240 --> 00:31:58,420
between states it's the system that

00:31:56,890 --> 00:32:00,400
allows the predictive text feature on

00:31:58,420 --> 00:32:01,450
your phone to work and it's also those

00:32:00,400 --> 00:32:04,300
things you see on the internet sometimes

00:32:01,450 --> 00:32:08,230
that like mash up Britney Spears in the

00:32:04,300 --> 00:32:09,610
Bible for hilarious results without

00:32:08,230 --> 00:32:12,100
going into too much of the specific

00:32:09,610 --> 00:32:13,300
mathematical details it's the general

00:32:12,100 --> 00:32:14,650
idea is something like finding the

00:32:13,300 --> 00:32:18,250
probability that it will rain tomorrow

00:32:14,650 --> 00:32:19,990
given it rain today or in my case there

00:32:18,250 --> 00:32:22,960
probably that the word Apple follows the

00:32:19,990 --> 00:32:25,480
weather so as you can see there that's

00:32:22,960 --> 00:32:27,790
some example code that just creates a

00:32:25,480 --> 00:32:30,130
dictionary of all pairs of words so if

00:32:27,790 --> 00:32:32,110
in a paragraph you have the phrase there

00:32:30,130 --> 00:32:34,000
Apple and then later you have the bird

00:32:32,110 --> 00:32:38,230
it'll under the entry of the word Lee

00:32:34,000 --> 00:32:39,910
it'll have Apple and bird no I also

00:32:38,230 --> 00:32:42,130
developed a really quick and kind of

00:32:39,910 --> 00:32:45,760
simple and not particularly eye catching

00:32:42,130 --> 00:32:47,410
interface - for ease of use so you just

00:32:45,760 --> 00:32:48,790
type in or paste in a paragraph hit the

00:32:47,410 --> 00:32:53,530
submit button and it generates the

00:32:48,790 --> 00:32:54,870
summary for you instead of doing a live

00:32:53,530 --> 00:32:58,500
demonstration

00:32:54,870 --> 00:33:00,180
it'll take a bit of time and I'm also

00:32:58,500 --> 00:33:03,510
aware of the risks of doing a live

00:33:00,180 --> 00:33:05,309
demonstration I'll just be showing a

00:33:03,510 --> 00:33:06,710
pretty one example this paragraph is

00:33:05,309 --> 00:33:09,990
from the Wikipedia article on

00:33:06,710 --> 00:33:13,020
computational linguistics as you can see

00:33:09,990 --> 00:33:15,350
it's long and very detailed but kind of

00:33:13,020 --> 00:33:23,280
a hospital read birth if you're lazy and

00:33:15,350 --> 00:33:24,360
don't wonder so when my program runs it

00:33:23,280 --> 00:33:26,460
takes a lot of load because there's a

00:33:24,360 --> 00:33:30,720
lot of mathy things going on and then

00:33:26,460 --> 00:33:33,059
this is the result that came out okay as

00:33:30,720 --> 00:33:35,580
you can see it's to the point it's a lot

00:33:33,059 --> 00:33:38,070
shorter and it's not a sentence that

00:33:35,580 --> 00:33:40,170
it's just lifted straight from the text

00:33:38,070 --> 00:33:45,440
it's just something it's taking all the

00:33:40,170 --> 00:33:45,440
data from and destructed itself

00:33:47,130 --> 00:33:55,260
[Applause]

00:33:53,030 --> 00:33:57,480
my intention is to continue and improve

00:33:55,260 --> 00:33:58,950
on this project and especially to reduce

00:33:57,480 --> 00:34:00,660
to the run time because the point of a

00:33:58,950 --> 00:34:02,520
tech summer is it's a save time you're

00:34:00,660 --> 00:34:05,820
not really saving time if it takes five

00:34:02,520 --> 00:34:07,559
minutes to run I also want to extend it

00:34:05,820 --> 00:34:09,690
to a more useful interface and be able

00:34:07,559 --> 00:34:12,119
to have multiple meanings from multiple

00:34:09,690 --> 00:34:13,290
paragraphs and just generally you can

00:34:12,119 --> 00:34:16,379
use it on a full document instead of

00:34:13,290 --> 00:34:20,600
doing a paragraph at a time um I also

00:34:16,379 --> 00:34:22,889
want it to be a bit more pretty as well

00:34:20,600 --> 00:34:31,980
thank you all for listening

00:34:22,889 --> 00:34:33,840
is there any questions Thank You Sophie

00:34:31,980 --> 00:34:36,149
that was fantastic as a computational

00:34:33,840 --> 00:34:38,010
linguist or a recovering computational

00:34:36,149 --> 00:34:40,649
linguist that is exactly what I do with

00:34:38,010 --> 00:34:45,169
the straight comas and everything that's

00:34:40,649 --> 00:34:45,169
alright Amanda can help sort that out

00:34:46,159 --> 00:34:53,609
Palmer after someone else Sophie oh oh

00:34:50,909 --> 00:35:02,250
there's a burning question Moline has a

00:34:53,609 --> 00:35:04,070
burning question so one of the

00:35:02,250 --> 00:35:07,410
possibilities of using this

00:35:04,070 --> 00:35:11,880
summarization work for assistive

00:35:07,410 --> 00:35:14,910
technologies in the mic still the mic

00:35:11,880 --> 00:35:16,560
back well I think it's like um I have

00:35:14,910 --> 00:35:17,910
some friends with dyslexia who find that

00:35:16,560 --> 00:35:18,750
sometimes reading stuff that teachers

00:35:17,910 --> 00:35:21,060
make them read in class can be

00:35:18,750 --> 00:35:23,580
complicated so I could definitely look

00:35:21,060 --> 00:35:25,170
at maybe applying that to making things

00:35:23,580 --> 00:35:28,109
of that nature being easy

00:35:25,170 --> 00:35:30,619
not just for lazy people but yeah I

00:35:28,109 --> 00:35:34,190
would like to look at accessibility and

00:35:30,619 --> 00:35:37,650
assisting people who need it

00:35:34,190 --> 00:35:39,540
fantastic excellent thank you very much

00:35:37,650 --> 00:35:45,930
Sophie big round of applause

00:35:39,540 --> 00:35:50,680
[Applause]

00:35:45,930 --> 00:35:52,930
all right next up uh we have Jasper

00:35:50,680 --> 00:35:53,859
Chandler take the microphone Jasper all

00:35:52,930 --> 00:35:57,099
right

00:35:53,859 --> 00:36:04,569
Jasper is from Canberra he is in year

00:35:57,099 --> 00:36:06,549
Adelaide this is what I thought yeah it

00:36:04,569 --> 00:36:07,589
was our link what I know but - MS from

00:36:06,549 --> 00:36:11,589
Adelaide

00:36:07,589 --> 00:36:12,339
note to self added in year 11 good okay

00:36:11,589 --> 00:36:21,519
we were half right

00:36:12,339 --> 00:36:24,730
that's a past Thank You Jasper hello

00:36:21,519 --> 00:36:27,069
I come from a before high school and

00:36:24,730 --> 00:36:29,200
I've been learning Python for about four

00:36:27,069 --> 00:36:34,930
years I've been working on my game nore

00:36:29,200 --> 00:36:40,180
for one year I begun in year eight but

00:36:34,930 --> 00:36:42,990
started by combining math by combining

00:36:40,180 --> 00:36:49,029
logic with mathematical functions and

00:36:42,990 --> 00:36:51,819
frame by frame seen drawing is created

00:36:49,029 --> 00:36:53,910
moving images and it led to me producing

00:36:51,819 --> 00:36:59,160
things like my first game box scape and

00:36:53,910 --> 00:36:59,160
many other trials and tests outs

00:37:07,120 --> 00:37:12,940
I then tried to make my own system for

00:37:10,690 --> 00:37:15,700
having points collided with a lion at

00:37:12,940 --> 00:37:18,730
any angle what I ended up with was a

00:37:15,700 --> 00:37:23,830
basic way to do calculus before I knew

00:37:18,730 --> 00:37:29,950
what calculus was this gave me the idea

00:37:23,830 --> 00:37:31,930
for my current game nore then I learn

00:37:29,950 --> 00:37:34,420
about sprite nerds from apples sprite

00:37:31,930 --> 00:37:37,990
kit this led to me making hybrids of

00:37:34,420 --> 00:37:41,050
frame-by-frame and object-oriented

00:37:37,990 --> 00:37:43,270
graphics this is how I do things

00:37:41,050 --> 00:37:51,100
currently as well as using shaders on

00:37:43,270 --> 00:37:53,860
the graphics I quite often test our

00:37:51,100 --> 00:37:56,980
ideas in isolation using separate Python

00:37:53,860 --> 00:37:57,820
scripts I play with the concepts that I

00:37:56,980 --> 00:37:59,680
find interesting

00:37:57,820 --> 00:38:03,880
before potentially combining them into

00:37:59,680 --> 00:38:07,420
larger projects later in the top you can

00:38:03,880 --> 00:38:11,100
see the Fox that I made the base of the

00:38:07,420 --> 00:38:16,000
code for the Fox came from fox tail code

00:38:11,100 --> 00:38:20,320
the code for that came from rip physics

00:38:16,000 --> 00:38:23,890
code that I wrote and that's kind of the

00:38:20,320 --> 00:38:28,870
base of the code it's based on just

00:38:23,890 --> 00:38:30,640
mathematics trigonometry this pattern

00:38:28,870 --> 00:38:34,140
continues throughout most of my projects

00:38:30,640 --> 00:38:36,430
where big projects are based on smaller

00:38:34,140 --> 00:38:38,770
projects and the small projects are

00:38:36,430 --> 00:38:46,690
based on mathematics or some idea I had

00:38:38,770 --> 00:38:49,080
this is a game that I made my family for

00:38:46,690 --> 00:38:49,080
Christmas

00:38:49,220 --> 00:39:00,140
and it includes this character which I

00:38:52,310 --> 00:39:04,819
reused in my current game nore the

00:39:00,140 --> 00:39:12,800
slopes collision code in here gave me

00:39:04,819 --> 00:39:15,380
the idea to the first version of nor is

00:39:12,800 --> 00:39:17,900
the generated array of points for the

00:39:15,380 --> 00:39:21,500
ground it generated them from left to

00:39:17,900 --> 00:39:24,890
right and my original plan was to use

00:39:21,500 --> 00:39:28,280
the slope collision code to detect the

00:39:24,890 --> 00:39:30,290
players collisions with the ground the

00:39:28,280 --> 00:39:35,030
problem with this is that my code was

00:39:30,290 --> 00:39:38,210
very buggy and terrain editing would be

00:39:35,030 --> 00:39:40,280
very difficult to accomplish so then I

00:39:38,210 --> 00:39:44,900
completely redesigned how my code works

00:39:40,280 --> 00:39:49,400
I use the previous system to generate a

00:39:44,900 --> 00:39:50,750
bitmap image and then tested points on

00:39:49,400 --> 00:39:52,849
that image that are around the player

00:39:50,750 --> 00:39:54,859
and if they're the color of the ground

00:39:52,849 --> 00:40:00,530
then they're colliding if they're the

00:39:54,859 --> 00:40:03,560
color of the sky then not this led to me

00:40:00,530 --> 00:40:14,380
dropping the slope intersection code

00:40:03,560 --> 00:40:18,230
altogether and the grass started as

00:40:14,380 --> 00:40:21,349
special points on the ground but once I

00:40:18,230 --> 00:40:21,920
moved to the bitmap image style of

00:40:21,349 --> 00:40:29,180
collisions

00:40:21,920 --> 00:40:34,849
I made a custom array of points combined

00:40:29,180 --> 00:40:39,290
with seed integers to make the grass

00:40:34,849 --> 00:40:43,339
bushes and the trees each bush or tree

00:40:39,290 --> 00:40:47,900
has the seed which then gets fed into a

00:40:43,339 --> 00:40:51,560
Monte Carlo random number system to

00:40:47,900 --> 00:40:54,230
generate the graphics this gives the

00:40:51,560 --> 00:40:56,869
good effect that each branch on a tree

00:40:54,230 --> 00:41:00,170
is based on the previous branches all

00:40:56,869 --> 00:41:01,080
the way down to the base which is

00:41:00,170 --> 00:41:04,890
dependent

00:41:01,080 --> 00:41:07,620
the point the seed and the seed is

00:41:04,890 --> 00:41:11,370
dependent on the ground and the ground

00:41:07,620 --> 00:41:14,070
is dependent on the level number so each

00:41:11,370 --> 00:41:16,080
tree is guaranteed to be unique and each

00:41:14,070 --> 00:41:26,990
level is guaranteed to give unique trees

00:41:16,080 --> 00:41:30,600
I then started on shaders I took myself

00:41:26,990 --> 00:41:36,150
GLSL using demos from within the app I

00:41:30,600 --> 00:41:44,720
use pythonista and on internet forums my

00:41:36,150 --> 00:41:51,170
first attempt at shaders was the

00:41:44,720 --> 00:41:54,690
lighting in this echo dally test the

00:41:51,170 --> 00:41:57,120
brightness of the pixels in the texture

00:41:54,690 --> 00:41:58,890
is proportional or inversely

00:41:57,120 --> 00:42:02,460
proportional to the distance from the

00:41:58,890 --> 00:42:11,550
player I use this system in my current

00:42:02,460 --> 00:42:13,590
game nore to do the lighting the demo on

00:42:11,550 --> 00:42:16,170
the left looks very simple but it's

00:42:13,590 --> 00:42:19,260
actually very sophisticated the white

00:42:16,170 --> 00:42:22,050
tiles not sprite nerds or even seen

00:42:19,260 --> 00:42:24,810
drawing they are being drawn solely by

00:42:22,050 --> 00:42:27,540
the shader the shader uses the players

00:42:24,810 --> 00:42:30,690
position and pixel position to calculate

00:42:27,540 --> 00:42:34,320
whether any given pixel pixel should be

00:42:30,690 --> 00:42:37,440
black or white the demo is a sation

00:42:34,320 --> 00:42:39,900
stationary squid on a stationary white

00:42:37,440 --> 00:42:43,350
rectangle the world is just shaded on

00:42:39,900 --> 00:42:45,000
top I use the more complicated version

00:42:43,350 --> 00:42:49,160
of the same technique to do the mist

00:42:45,000 --> 00:42:49,160
rain and grass in north

00:42:55,160 --> 00:43:00,990
at this point I had a procedural error

00:42:58,130 --> 00:43:04,380
editable world but it wasn't engaging

00:43:00,990 --> 00:43:06,450
beyond a passing interest I observed

00:43:04,380 --> 00:43:09,290
from other games the engagement always

00:43:06,450 --> 00:43:12,090
comes from some challenge of skill I

00:43:09,290 --> 00:43:15,630
then used the system I had come up with

00:43:12,090 --> 00:43:18,480
months earlier to create puzzles the

00:43:15,630 --> 00:43:20,790
system was a way of G of notating logic

00:43:18,480 --> 00:43:23,880
gates using connected squares on a grid

00:43:20,790 --> 00:43:27,000
I use the fact that nor gates are

00:43:23,880 --> 00:43:30,330
Universal gates and made every square an

00:43:27,000 --> 00:43:33,470
or gate I then made top left sides

00:43:30,330 --> 00:43:37,020
inputs and bottom right sides outputs

00:43:33,470 --> 00:43:40,230
this allowed me to construct logic from

00:43:37,020 --> 00:43:42,360
different formations of squares this is

00:43:40,230 --> 00:43:46,170
what I made into a digital system and

00:43:42,360 --> 00:43:48,660
then into a game each puzzle has a

00:43:46,170 --> 00:43:53,610
specific goal but the player can connect

00:43:48,660 --> 00:43:57,390
no gates in however they want to achieve

00:43:53,610 --> 00:43:58,800
the goal for the right kind of person

00:43:57,390 --> 00:44:09,660
these puzzles have proven to be

00:43:58,800 --> 00:44:11,670
challenging and highly rewarding the

00:44:09,660 --> 00:44:14,610
movement of the player is done with a

00:44:11,670 --> 00:44:17,970
momentum attribute every frame the

00:44:14,610 --> 00:44:20,270
players momentum is added to their

00:44:17,970 --> 00:44:22,740
position and then divided by a constant

00:44:20,270 --> 00:44:24,450
this gives the effect of inertia in the

00:44:22,740 --> 00:44:26,910
game and makes it easy to implement

00:44:24,450 --> 00:44:30,240
gravity as a constant negative addition

00:44:26,910 --> 00:44:32,250
to the vertical momentum the arms and

00:44:30,240 --> 00:44:35,100
legs are animated using trigonometry and

00:44:32,250 --> 00:44:41,880
sine waves the frequency of the sine

00:44:35,100 --> 00:44:47,690
wave of the arms MIM amendment movement

00:44:41,880 --> 00:44:50,610
is proportional to a constant frequency

00:44:47,690 --> 00:44:54,150
however the legs are much more

00:44:50,610 --> 00:44:56,070
complicated because the frequency of the

00:44:54,150 --> 00:45:00,570
legs animation is proportional to how

00:44:56,070 --> 00:45:07,410
fast the player is moving this is why I

00:45:00,570 --> 00:45:11,610
made the sine wave demo on the right it

00:45:07,410 --> 00:45:14,190
translates an X on one sine wave to a

00:45:11,610 --> 00:45:18,540
different X on the another sine wave

00:45:14,190 --> 00:45:22,620
that has the same Y location this is

00:45:18,540 --> 00:45:30,480
using tangents and triggered calculus

00:45:22,620 --> 00:45:32,760
that I won't get into please email me if

00:45:30,480 --> 00:45:37,790
you would like and be sure to come talk

00:45:32,760 --> 00:45:37,790
to me with any questions thanks

00:45:42,089 --> 00:45:47,980
Thank You Jasper I I think I may be just

00:45:46,210 --> 00:45:50,020
the kind of person that finds those

00:45:47,980 --> 00:45:55,440
sorts of challenges incredibly rewarding

00:45:50,020 --> 00:45:59,650
and addictive questions are while we do

00:45:55,440 --> 00:46:05,910
questions can Declan come up and get

00:45:59,650 --> 00:46:10,690
ready questions yes

00:46:05,910 --> 00:46:13,599
Kristy my question is you mentioned that

00:46:10,690 --> 00:46:15,430
you've learnt a lot of the maths things

00:46:13,599 --> 00:46:18,099
around it but before you actually learn

00:46:15,430 --> 00:46:20,589
that in school is that how you learned

00:46:18,099 --> 00:46:22,150
most of the mathematics around it or did

00:46:20,589 --> 00:46:23,950
you find that there was some things

00:46:22,150 --> 00:46:25,060
where you learned it in school first and

00:46:23,950 --> 00:46:27,280
you're able to actually use that

00:46:25,060 --> 00:46:28,839
learning to apply it to the game just

00:46:27,280 --> 00:46:31,170
like from an education standpoint like

00:46:28,839 --> 00:46:34,210
is it a useful learning tool for maths

00:46:31,170 --> 00:46:37,829
I'd say definitely a lot of my knowledge

00:46:34,210 --> 00:46:41,109
from maths comes from my coding and

00:46:37,829 --> 00:46:42,849
random videos on YouTube but definitely

00:46:41,109 --> 00:46:44,560
it's also the other way around where

00:46:42,849 --> 00:46:47,170
what I'm learning in maths definitely

00:46:44,560 --> 00:46:48,760
helps me with the code so it's kind of a

00:46:47,170 --> 00:46:52,770
two-way stream but I'd say it's weighted

00:46:48,760 --> 00:46:52,770
towards me learning things with my code

00:46:55,619 --> 00:47:00,069
okay good thank you

00:46:57,670 --> 00:47:02,369
sorry I'm just having a a slight heart

00:47:00,069 --> 00:47:02,369
attack

00:47:03,340 --> 00:47:11,180
Thank You Jesper um Declan I think also

00:47:08,540 --> 00:47:13,940
it just wants to keep my heart just

00:47:11,180 --> 00:47:19,640
going as I look up and say the cables

00:47:13,940 --> 00:47:22,070
gone bad but it's alright because Declan

00:47:19,640 --> 00:47:24,110
declan's Hammond is from Sydney Declan

00:47:22,070 --> 00:47:25,880
is in u10 and he's here to talk about

00:47:24,110 --> 00:47:28,340
machine translation

00:47:25,880 --> 00:47:37,430
hence the yes excellent

00:47:28,340 --> 00:47:39,440
Thank You Declan hi everyone so over the

00:47:37,430 --> 00:47:40,730
past three years of high school if I've

00:47:39,440 --> 00:47:43,550
learned one thing it's that I have a

00:47:40,730 --> 00:47:45,620
very polarized set of interests on one

00:47:43,550 --> 00:47:47,600
hand my one of my interests Latin and

00:47:45,620 --> 00:47:49,580
classical linguistics lies locked up in

00:47:47,600 --> 00:47:51,590
the distant past and the other one of my

00:47:49,580 --> 00:47:54,980
interests programming holds the key to

00:47:51,590 --> 00:47:57,830
the very near future it's hard to

00:47:54,980 --> 00:48:00,320
imagine any two subject areas with less

00:47:57,830 --> 00:48:02,030
overlap or at least that's what I

00:48:00,320 --> 00:48:04,160
thought until this year when I was

00:48:02,030 --> 00:48:05,930
introduced to machine translation and

00:48:04,160 --> 00:48:08,660
the possibility of actually programming

00:48:05,930 --> 00:48:10,640
such a thing so for those who aren't

00:48:08,660 --> 00:48:13,640
familiar with it machine translation is

00:48:10,640 --> 00:48:17,990
very simply a program that can switch

00:48:13,640 --> 00:48:20,690
between two different languages and my

00:48:17,990 --> 00:48:22,880
program for example switches between Oh

00:48:20,690 --> 00:48:25,940
actually that's misleading it switches

00:48:22,880 --> 00:48:27,770
from English into Latin now you might be

00:48:25,940 --> 00:48:30,650
asking why would you ever want to switch

00:48:27,770 --> 00:48:32,750
from English into Latin surely you would

00:48:30,650 --> 00:48:37,100
want to do the reverse my answer is

00:48:32,750 --> 00:48:39,560
firstly because English has an a

00:48:37,100 --> 00:48:43,130
definite and indefinite article which

00:48:39,560 --> 00:48:45,500
sounds sort of well it's got the word

00:48:43,130 --> 00:48:48,500
for the and which Latin doesn't have

00:48:45,500 --> 00:48:50,600
which sounds very trivial but I really

00:48:48,500 --> 00:48:52,340
didn't want to be randomly supplying

00:48:50,600 --> 00:48:54,770
definite or indefinite articles

00:48:52,340 --> 00:48:57,770
depending on the program's whim at the

00:48:54,770 --> 00:48:59,630
time so I decided to go the other way

00:48:57,770 --> 00:49:02,360
round the other reason for this is

00:48:59,630 --> 00:49:04,580
because any glaring problems with the

00:49:02,360 --> 00:49:06,470
with the program would be far easier to

00:49:04,580 --> 00:49:08,750
pick up for you as native English

00:49:06,470 --> 00:49:12,350
speakers so I'll just leave it in lesson

00:49:08,750 --> 00:49:14,030
thank you very much actually just as a

00:49:12,350 --> 00:49:15,140
show of hands how many people are

00:49:14,030 --> 00:49:18,290
familiar with any vague

00:49:15,140 --> 00:49:19,670
great lesson here awesome that means

00:49:18,290 --> 00:49:21,820
none of you will pick up the errors in

00:49:19,670 --> 00:49:24,710
my program

00:49:21,820 --> 00:49:26,210
okay so I've just got a quick diagram

00:49:24,710 --> 00:49:28,460
here there are four overarching

00:49:26,210 --> 00:49:29,330
overarching points of machine

00:49:28,460 --> 00:49:30,950
translation

00:49:29,330 --> 00:49:33,580
the first one is rule-based that's what

00:49:30,950 --> 00:49:36,080
I did because it's the easiest it's

00:49:33,580 --> 00:49:37,460
based on a set of rules it

00:49:36,080 --> 00:49:40,550
grammatically interprets the language

00:49:37,460 --> 00:49:42,440
and switches it between switches it

00:49:40,550 --> 00:49:44,300
between the languages the second is

00:49:42,440 --> 00:49:48,260
example based based on a corpora of

00:49:44,300 --> 00:49:50,240
bilingual texts it takes it looks at the

00:49:48,260 --> 00:49:52,820
text it sees an example of where it sees

00:49:50,240 --> 00:49:55,550
something similar and it switches to the

00:49:52,820 --> 00:49:59,330
other one the third one's statistical it

00:49:55,550 --> 00:50:01,640
takes a large large amount of

00:49:59,330 --> 00:50:03,620
information from by linkable corpora of

00:50:01,640 --> 00:50:05,960
texts and it looks at the most common

00:50:03,620 --> 00:50:08,420
ones to see which translation it should

00:50:05,960 --> 00:50:11,510
opt with and the fourth ones just neural

00:50:08,420 --> 00:50:13,760
networks which it uses to create an

00:50:11,510 --> 00:50:16,010
idiomatic translation now neural

00:50:13,760 --> 00:50:18,410
networks are you'll translates most

00:50:16,010 --> 00:50:22,970
recent attempt at Google at machine

00:50:18,410 --> 00:50:24,860
translation it also uses as far as I'm

00:50:22,970 --> 00:50:26,420
aware example based machine translation

00:50:24,860 --> 00:50:28,700
behind that because not all of its

00:50:26,420 --> 00:50:30,770
languages are supported by a neural

00:50:28,700 --> 00:50:33,830
machine translation one of which is

00:50:30,770 --> 00:50:37,670
Latin so the reason I was inspired to do

00:50:33,830 --> 00:50:39,320
this program was overall because Google

00:50:37,670 --> 00:50:42,470
Translate exists in the first place you

00:50:39,320 --> 00:50:44,630
see because or at least this is my

00:50:42,470 --> 00:50:47,150
thought process because there aren't

00:50:44,630 --> 00:50:50,090
that many Watson texts which Google can

00:50:47,150 --> 00:50:51,950
use as examples for translation its

00:50:50,090 --> 00:50:53,450
translations into and out of Latin

00:50:51,950 --> 00:50:56,150
aren't very good at all

00:50:53,450 --> 00:50:58,070
so for example I know most of you won't

00:50:56,150 --> 00:51:01,790
understand this but the phrase ancilla

00:50:58,070 --> 00:51:04,100
we do it that's Google translates

00:51:01,790 --> 00:51:06,230
version of I see the maid or I see the

00:51:04,100 --> 00:51:07,850
slave girl but it's just very

00:51:06,230 --> 00:51:10,010
fundamentally incorrect

00:51:07,850 --> 00:51:11,810
the slave girl is the object of the

00:51:10,010 --> 00:51:15,350
sentence here so it should be on column

00:51:11,810 --> 00:51:17,270
with air now any year 7 lessons students

00:51:15,350 --> 00:51:19,340
should be able to tell you that so the

00:51:17,270 --> 00:51:22,870
fact that Google Translate card is

00:51:19,340 --> 00:51:22,870
slightly disturbing so

00:51:23,170 --> 00:51:28,190
the goal of my program was simply to see

00:51:26,359 --> 00:51:31,130
them to slave-girl which was to do

00:51:28,190 --> 00:51:34,430
better than Google Translate now I don't

00:51:31,130 --> 00:51:36,079
want to put myself on a pedestal here

00:51:34,430 --> 00:51:39,170
Google Translate is much better than my

00:51:36,079 --> 00:51:41,450
program that's because it provides a far

00:51:39,170 --> 00:51:44,359
more general translation it can cope for

00:51:41,450 --> 00:51:47,270
a wider variety of translations and all

00:51:44,359 --> 00:51:50,960
give you an approximate result however

00:51:47,270 --> 00:51:53,210
mine is more specific and given a set of

00:51:50,960 --> 00:51:55,609
words which it understands it can do a

00:51:53,210 --> 00:51:56,960
much more accurate translation now right

00:51:55,609 --> 00:51:58,849
here I've shown the process of my

00:51:56,960 --> 00:52:02,270
program it looks at the words it

00:51:58,849 --> 00:52:04,099
interprets them contextually it it finds

00:52:02,270 --> 00:52:06,260
out that it's a it's indicative its

00:52:04,099 --> 00:52:11,690
present its active and then finds the

00:52:06,260 --> 00:52:13,520
corresponding Latin verb okay so why we

00:52:11,690 --> 00:52:15,500
might think now okay that's simple

00:52:13,520 --> 00:52:17,660
enough we'll just create a dictionary

00:52:15,500 --> 00:52:19,579
there's literally a dictionary in Python

00:52:17,660 --> 00:52:20,780
we've got a dog in one side and Connie's

00:52:19,579 --> 00:52:23,119
on the other which is the Latin

00:52:20,780 --> 00:52:27,319
equivalent that seems simple enough but

00:52:23,119 --> 00:52:29,119
it's not because of course the program

00:52:27,319 --> 00:52:31,430
doesn't know how you're meant to decline

00:52:29,119 --> 00:52:34,130
the word for dog or that the plural is

00:52:31,430 --> 00:52:35,869
dogs now you could opt with a rule-based

00:52:34,130 --> 00:52:38,029
approach well of course the plural of

00:52:35,869 --> 00:52:39,740
any now and will end in s but that's not

00:52:38,029 --> 00:52:42,319
the case either because we've got cases

00:52:39,740 --> 00:52:44,240
like man Adam n so my program needs to

00:52:42,319 --> 00:52:46,460
know the singular English and the plural

00:52:44,240 --> 00:52:50,000
English the Latin it's slightly more

00:52:46,460 --> 00:52:52,279
complicated in and for a general noun

00:52:50,000 --> 00:52:54,109
you have the nominative case and the

00:52:52,279 --> 00:52:56,180
genitive case which is just like

00:52:54,109 --> 00:52:57,619
possession now that basically gives you

00:52:56,180 --> 00:53:00,140
the stem of the word and it tells you

00:52:57,619 --> 00:53:02,630
what the clenching it has which allows

00:53:00,140 --> 00:53:04,700
you to find all this different forms to

00:53:02,630 --> 00:53:06,920
give you a general idea most nouns in

00:53:04,700 --> 00:53:09,950
English will have two forms in different

00:53:06,920 --> 00:53:12,920
in different contexts and a Latin noun

00:53:09,950 --> 00:53:15,890
would have ten so it has to do slightly

00:53:12,920 --> 00:53:20,559
more complicated things now I talked

00:53:15,890 --> 00:53:23,990
about nouns but verbs are far far worse

00:53:20,559 --> 00:53:25,789
right here at the top line oh yes I

00:53:23,990 --> 00:53:28,549
should say this is effectively my

00:53:25,789 --> 00:53:33,829
dictionary it's a text file with a bunch

00:53:28,549 --> 00:53:35,869
of words and the first value separated

00:53:33,829 --> 00:53:36,859
by the comma will show you the type of

00:53:35,869 --> 00:53:39,140
word that it is

00:53:36,859 --> 00:53:41,299
then depending on the rest let's just

00:53:39,140 --> 00:53:43,220
look at the verbs for now it gives you

00:53:41,299 --> 00:53:46,489
the Latin word Spectre aspect I respect

00:53:43,220 --> 00:53:49,460
I respect item separated by full stops

00:53:46,489 --> 00:53:51,230
here that's those are the four principal

00:53:49,460 --> 00:53:52,489
parts of the verb that's basically what

00:53:51,230 --> 00:53:55,819
you use to decline it

00:53:52,489 --> 00:53:57,799
what conjugate it sorry then on the

00:53:55,819 --> 00:54:00,259
other side of the commas we've got the

00:53:57,799 --> 00:54:03,890
English translations no there are five

00:54:00,259 --> 00:54:07,579
English forms there so why would we need

00:54:03,890 --> 00:54:10,069
five English forms because same as

00:54:07,579 --> 00:54:11,690
before we've got different different

00:54:10,069 --> 00:54:14,059
ways that English verbs conjugate

00:54:11,690 --> 00:54:16,309
depending on how exactly they work the

00:54:14,059 --> 00:54:18,499
first form is the infinitive the second

00:54:16,309 --> 00:54:20,569
form is the preterite past the third

00:54:18,499 --> 00:54:23,420
form is the past participle the fourth

00:54:20,569 --> 00:54:27,380
is the third-person singular and the

00:54:23,420 --> 00:54:28,579
fifth is the present participle now the

00:54:27,380 --> 00:54:29,799
fourth and fifth aren't strictly

00:54:28,579 --> 00:54:31,910
necessary but due to a few

00:54:29,799 --> 00:54:34,400
irregularities I found it was easier to

00:54:31,910 --> 00:54:35,720
include them in there and I've done the

00:54:34,400 --> 00:54:37,730
same thing for other ones I don't think

00:54:35,720 --> 00:54:40,789
they really need mentioning so I created

00:54:37,730 --> 00:54:43,190
a Latin word class which which reads in

00:54:40,789 --> 00:54:47,210
this line of text and finds out as to

00:54:43,190 --> 00:54:49,549
clinching conjugation etc some verbs in

00:54:47,210 --> 00:54:52,519
Latin to conjugate differently so that

00:54:49,549 --> 00:54:54,380
opponents basically based on the line of

00:54:52,519 --> 00:54:58,099
code and a set of very complicated rules

00:54:54,380 --> 00:55:02,059
it finds out how the how the how it will

00:54:58,099 --> 00:55:04,670
decline or conjugate overall so how do

00:55:02,059 --> 00:55:07,099
you know then get that into English into

00:55:04,670 --> 00:55:10,309
Latin so I created a function within the

00:55:07,099 --> 00:55:13,789
class that form very simply it just has

00:55:10,309 --> 00:55:15,980
a bunch of space separated words which

00:55:13,789 --> 00:55:17,960
will tell you how to client how it's

00:55:15,980 --> 00:55:20,809
going to form so genitive plural here

00:55:17,960 --> 00:55:24,890
would make kinesin to con um if it was

00:55:20,809 --> 00:55:26,809
ablative clear would be cannabis etc now

00:55:24,890 --> 00:55:28,609
how did I get those endings right there

00:55:26,809 --> 00:55:30,799
I didn't explain that so that's in

00:55:28,609 --> 00:55:33,319
another text file which is Latin

00:55:30,799 --> 00:55:35,119
paradigms text it's got a whole bunch of

00:55:33,319 --> 00:55:37,549
endings as shown below and the line

00:55:35,119 --> 00:55:40,249
which it just reads off and essentially

00:55:37,549 --> 00:55:45,019
suffixes to what it finds to be the noun

00:55:40,249 --> 00:55:46,789
or verb stem okay so that's all easy but

00:55:45,019 --> 00:55:48,200
now we're getting to the natural

00:55:46,789 --> 00:55:50,270
language processing stuff and that's

00:55:48,200 --> 00:55:52,670
where it gets all weird

00:55:50,270 --> 00:55:55,250
so if we look at the first example which

00:55:52,670 --> 00:55:56,660
I've got below go I could say go to the

00:55:55,250 --> 00:55:59,089
park that would be what we call an

00:55:56,660 --> 00:56:00,650
imperative verb I could also say I want

00:55:59,089 --> 00:56:03,500
to go to the park that would be an

00:56:00,650 --> 00:56:06,440
infinitive and a finite verb they go to

00:56:03,500 --> 00:56:08,089
the park so obviously based on context

00:56:06,440 --> 00:56:10,070
my Lang my program will have to

00:56:08,089 --> 00:56:13,130
differentiate between each of those

00:56:10,070 --> 00:56:16,460
forms similarly acts the acts of

00:56:13,130 --> 00:56:19,040
kindness we could say that that's a noun

00:56:16,460 --> 00:56:22,190
or we could say he acts out of kindness

00:56:19,040 --> 00:56:25,849
that's a verb so my program will have to

00:56:22,190 --> 00:56:27,320
distinguish between those so then it

00:56:25,849 --> 00:56:29,359
first things first

00:56:27,320 --> 00:56:30,950
it looks at all the possibilities is

00:56:29,359 --> 00:56:32,930
that it pens them all in two different

00:56:30,950 --> 00:56:35,230
sentences which might be about 20 lines

00:56:32,930 --> 00:56:37,460
long then after that it eliminates

00:56:35,230 --> 00:56:39,980
sentences which it deems through natural

00:56:37,460 --> 00:56:41,599
language processing not to make sense so

00:56:39,980 --> 00:56:43,310
for example it can't just have an

00:56:41,599 --> 00:56:45,980
infinitive lying there and they go to

00:56:43,310 --> 00:56:47,810
the park it has to be well it has to be

00:56:45,980 --> 00:56:50,119
part of a probative infinitive which is

00:56:47,810 --> 00:56:52,070
where you have a verb like want that's a

00:56:50,119 --> 00:56:54,619
modal verb I want to go to the park

00:56:52,070 --> 00:56:57,830
the want governs the infinitive and

00:56:54,619 --> 00:56:59,300
similarly with those rules like they're

00:56:57,830 --> 00:57:02,420
a bunch of them and that's what my

00:56:59,300 --> 00:57:05,180
language did now there are also a few

00:57:02,420 --> 00:57:06,950
words which are just they're not as

00:57:05,180 --> 00:57:09,020
simple as different forms of the same

00:57:06,950 --> 00:57:11,180
verb they're entirely different words

00:57:09,020 --> 00:57:14,300
expressed with different ideas in Latin

00:57:11,180 --> 00:57:15,770
so for example the the the word to

00:57:14,300 --> 00:57:19,520
because it can be a whole bunch of

00:57:15,770 --> 00:57:22,040
different things we can say to go I go

00:57:19,520 --> 00:57:25,730
to the temple I gave flowers to the girl

00:57:22,040 --> 00:57:27,230
or I went to see now all of those are

00:57:25,730 --> 00:57:28,940
expressed with the same word in English

00:57:27,230 --> 00:57:33,500
but they're all different words in Latin

00:57:28,940 --> 00:57:35,900
which isn't quite as easy also words

00:57:33,500 --> 00:57:39,410
like where and here they are different

00:57:35,900 --> 00:57:41,780
when there's a directional so I'm

00:57:39,410 --> 00:57:44,359
standing here we can say that I'm just

00:57:41,780 --> 00:57:47,359
simply here and I'm not moving or we

00:57:44,359 --> 00:57:50,480
could say I'm going I'm going here or

00:57:47,359 --> 00:57:52,160
I'm going there which basically it has a

00:57:50,480 --> 00:57:55,730
directional emphasis on it which means

00:57:52,160 --> 00:57:57,890
instead of he kits hook or instead of EB

00:57:55,730 --> 00:58:01,520
it's a lock or something

00:57:57,890 --> 00:58:03,380
then we've got words like who and which

00:58:01,520 --> 00:58:04,010
can be both the subject and the object

00:58:03,380 --> 00:58:06,560
of

00:58:04,010 --> 00:58:08,330
sentences based on word order which I

00:58:06,560 --> 00:58:10,100
really don't want to go into here but

00:58:08,330 --> 00:58:13,550
just know that there's a very annoying

00:58:10,100 --> 00:58:15,290
set of rules now there are a few things

00:58:13,550 --> 00:58:17,300
which my program just simply can't do

00:58:15,290 --> 00:58:21,140
that's because I figured it would be too

00:58:17,300 --> 00:58:24,380
annoying participial clauses basically

00:58:21,140 --> 00:58:25,520
some clauses aren't governed by any well

00:58:24,380 --> 00:58:27,320
they're not clauses although they're

00:58:25,520 --> 00:58:29,240
phrases but they're not they don't have

00:58:27,320 --> 00:58:31,970
any verb in them they're just a comma so

00:58:29,240 --> 00:58:33,830
going to the park I decided to do

00:58:31,970 --> 00:58:36,740
something that's a really bad sentence

00:58:33,830 --> 00:58:40,040
but let's just cook with it the verb the

00:58:36,740 --> 00:58:43,040
participle going will change depending

00:58:40,040 --> 00:58:46,370
on the now that is describing we have to

00:58:43,040 --> 00:58:48,620
know that going describes I so the

00:58:46,370 --> 00:58:50,180
sentence has to iterate the program has

00:58:48,620 --> 00:58:52,190
to iterate through the sentence and find

00:58:50,180 --> 00:58:53,510
find what that's describing which is

00:58:52,190 --> 00:58:55,130
basically really complicated depending

00:58:53,510 --> 00:58:57,500
on a whole bunch of different things and

00:58:55,130 --> 00:58:59,780
I won't go into that either the second

00:58:57,500 --> 00:59:02,180
thing is coordinate of conjunctions it

00:58:59,780 --> 00:59:05,030
sounds really simple but the conjunction

00:59:02,180 --> 00:59:10,580
end was such a pain that I just decided

00:59:05,030 --> 00:59:12,470
not to do it at all because it can link

00:59:10,580 --> 00:59:15,080
it can link to verbs to nouns two

00:59:12,470 --> 00:59:18,080
phrases and I I didn't want it I want to

00:59:15,080 --> 00:59:19,820
do that so yeah that's it I will go into

00:59:18,080 --> 00:59:25,490
a presentation very shortly because I

00:59:19,820 --> 00:59:29,300
know I don't have much time at all okay

00:59:25,490 --> 00:59:31,730
I think the best thing to chest right

00:59:29,300 --> 00:59:35,810
now would be just a very simple use of

00:59:31,730 --> 00:59:39,110
the different forms of two so I pardon

00:59:35,810 --> 00:59:49,960
me typing with one hand I wanted to go

00:59:39,110 --> 00:59:57,690
to the thank you the temple to see the

00:59:49,960 --> 01:00:12,020
slave yeah hopefully please is that

00:59:57,690 --> 01:00:16,770
okay I'm sorry I wanted to go I wanted

01:00:12,020 --> 01:00:19,500
to go here a wallowy in this case it

01:00:16,770 --> 01:00:22,319
decides that the verb that the now that

01:00:19,500 --> 01:00:25,559
the word 2 is governing an infinitive so

01:00:22,319 --> 01:00:40,319
it makes the the word to go array into

01:00:25,559 --> 01:00:46,890
the infinitive ok yes sorry or I wanted

01:00:40,319 --> 01:00:50,099
to go to to the temple here it realizes

01:00:46,890 --> 01:00:52,380
that the 2 is also a preposition so it

01:00:50,099 --> 01:00:58,470
makes it odd odd templum here add

01:00:52,380 --> 01:01:02,789
templum wala we know hopefully we can

01:00:58,470 --> 01:01:09,960
get I swear this was working last time

01:01:02,789 --> 01:01:13,279
but apparently not temple ok yes I've

01:01:09,960 --> 01:01:16,049
been working on it sort of last minute I

01:01:13,279 --> 01:01:18,119
wanted to go ok there we go so now it

01:01:16,049 --> 01:01:20,549
sees that 2 is governing a purpose

01:01:18,119 --> 01:01:22,619
clause so it it looks with verb to see

01:01:20,549 --> 01:01:24,809
it makes the subjunctive again yada yada

01:01:22,619 --> 01:01:28,200
yada that's Latin rubbish which I don't

01:01:24,809 --> 01:01:29,579
want to bore you with but anyway I think

01:01:28,200 --> 01:01:31,910
that's all I have time for thank you

01:01:29,579 --> 01:01:31,910
very much

01:01:36,980 --> 01:01:42,690
Thank You Jacqueline that was fantastic

01:01:39,720 --> 01:01:46,820
we will be taking question question in

01:01:42,690 --> 01:01:48,720
English rather than Latin though for now

01:01:46,820 --> 01:01:49,890
Wow

01:01:48,720 --> 01:01:52,910
you're all thinking up a fantastic

01:01:49,890 --> 01:01:55,770
question for Declan can we have Sam

01:01:52,910 --> 01:01:59,630
jumping up and getting your slides up on

01:01:55,770 --> 01:02:02,910
deck question for Declan

01:01:59,630 --> 01:02:11,010
yes up the back you want to yell it out

01:02:02,910 --> 01:02:13,710
then I'll repeat it the question was

01:02:11,010 --> 01:02:16,470
since this is a Python conference how

01:02:13,710 --> 01:02:19,350
would your program go with translating

01:02:16,470 --> 01:02:21,600
the sentence Romans go home I'm not sure

01:02:19,350 --> 01:02:24,270
if these students are old enough to be

01:02:21,600 --> 01:02:27,200
able to have watched that particular

01:02:24,270 --> 01:02:30,990
skit but I'll allow it

01:02:27,200 --> 01:02:31,730
well literally I'm not sure Howard fair

01:02:30,990 --> 01:02:35,690
with evocative

01:02:31,730 --> 01:02:40,200
[Laughter]

01:02:35,690 --> 01:02:43,140
yes Monty Python I think this is where

01:02:40,200 --> 01:02:45,720
you offer to do a demo afterwards in the

01:02:43,140 --> 01:02:47,760
in the hallway and we'll test it out

01:02:45,720 --> 01:02:49,380
yeah yeah if anyone wants to see how the

01:02:47,760 --> 01:02:52,910
program works I'd be happy to do it then

01:02:49,380 --> 01:02:52,910
fantastic Thank You Declan

01:02:54,420 --> 01:03:15,529
ah yes while they're conferring do we

01:03:08,430 --> 01:03:18,029
have a Casey Cheung in the room Casey a

01:03:15,529 --> 01:03:20,160
phone was found and we believe it

01:03:18,029 --> 01:03:22,500
belongs to a Casey so we're trying to

01:03:20,160 --> 01:03:28,710
figure out what they're here looks like

01:03:22,500 --> 01:03:33,119
a no all right Sam uh Sam Hogan is from

01:03:28,710 --> 01:03:36,200
Sydney you go that's yours and Sam is in

01:03:33,119 --> 01:03:39,569
year nine and is going to talk about a

01:03:36,200 --> 01:03:41,360
graphing calculator of sorts yeah thank

01:03:39,569 --> 01:03:47,059
you Sam

01:03:41,360 --> 01:03:48,720
[Applause]

01:03:47,059 --> 01:03:50,490
good afternoon everyone

01:03:48,720 --> 01:03:52,529
I'm Sam and I'm here to entertain you

01:03:50,490 --> 01:03:53,789
with a short ten-minute speech about a

01:03:52,529 --> 01:03:56,970
project I've been working on this year

01:03:53,789 --> 01:03:59,730
I'm not really sure how I got selected

01:03:56,970 --> 01:04:01,289
and I'm not even sure why I applied but

01:03:59,730 --> 01:04:02,490
I have may have something to do with the

01:04:01,289 --> 01:04:06,690
fact that I have double English from

01:04:02,490 --> 01:04:08,220
Friday afternoons I come from Homebush a

01:04:06,690 --> 01:04:09,690
short 30 minutes from here by public

01:04:08,220 --> 01:04:11,309
transport where I've been working on my

01:04:09,690 --> 01:04:15,420
project with a small amount of help from

01:04:11,309 --> 01:04:17,549
my amazing mother Amanda Hogan who spoke

01:04:15,420 --> 01:04:19,200
at PyCon last year what I've made is a

01:04:17,549 --> 01:04:21,569
program that can turn almost any

01:04:19,200 --> 01:04:23,700
equation into a scalable vector graphic

01:04:21,569 --> 01:04:29,970
graph which from here on I'm going to

01:04:23,700 --> 01:04:32,130
abbreviate to SVG now an SVG graphing

01:04:29,970 --> 01:04:34,589
tool is all well and good but why would

01:04:32,130 --> 01:04:35,509
you want one or more importantly why

01:04:34,589 --> 01:04:38,190
would I

01:04:35,509 --> 01:04:40,230
well at the time I had my idea I was

01:04:38,190 --> 01:04:42,180
sitting in my year 9 maths class staring

01:04:40,230 --> 01:04:44,160
in a bunch of questions with equations

01:04:42,180 --> 01:04:47,490
that I need to draw graphs for and I

01:04:44,160 --> 01:04:49,319
hate drawing graphs art is not really my

01:04:47,490 --> 01:04:53,940
strong suit and Arthur has to be

01:04:49,319 --> 01:04:55,819
accurate no thanks so this is pretty

01:04:53,940 --> 01:04:58,680
much the problem that my soul was Souls

01:04:55,819 --> 01:05:00,750
creating the graphs for me there is an

01:04:58,680 --> 01:05:02,970
online software tool I had used before

01:05:00,750 --> 01:05:05,519
called des most common which is where I

01:05:02,970 --> 01:05:07,500
got my inspiration desmos is a oneness

01:05:05,519 --> 01:05:08,160
Lea made JavaScript calculator made by a

01:05:07,500 --> 01:05:11,100
team

01:05:08,160 --> 01:05:12,690
led by Eli goober off who was a math and

01:05:11,100 --> 01:05:16,020
physics double major from Yale

01:05:12,690 --> 01:05:20,310
University in the u.s. I decided it

01:05:16,020 --> 01:05:27,120
would be fun and I decided it'll be fun

01:05:20,310 --> 01:05:28,530
and I decided be fun and maybe a little

01:05:27,120 --> 01:05:33,450
difficult to make a simple copy in

01:05:28,530 --> 01:05:35,580
Python like any project they were

01:05:33,450 --> 01:05:37,380
clearly going to be some setbacks before

01:05:35,580 --> 01:05:39,000
I started working on the code I had the

01:05:37,380 --> 01:05:40,590
idea to write this in Python turtle

01:05:39,000 --> 01:05:43,050
because there was something I knew and

01:05:40,590 --> 01:05:45,630
was pretty easy for me to use but after

01:05:43,050 --> 01:05:47,640
some careful consideration I figured it

01:05:45,630 --> 01:05:49,230
wasn't the best idea because it would be

01:05:47,640 --> 01:05:50,670
slow to render the graphs and it would

01:05:49,230 --> 01:05:53,580
take too much processing power for

01:05:50,670 --> 01:05:55,710
complex lines and so it was back to the

01:05:53,580 --> 01:05:58,530
drawing board but this time I had no

01:05:55,710 --> 01:06:00,360
graphing medium this was pretty easily

01:05:58,530 --> 01:06:01,980
fixed with some simple browsing and

01:06:00,360 --> 01:06:06,150
searching which is how I found out about

01:06:01,980 --> 01:06:08,310
SVG's I started coding in sublime text

01:06:06,150 --> 01:06:10,350
and running an idle however this is not

01:06:08,310 --> 01:06:13,620
optimized for the web and I knew that

01:06:10,350 --> 01:06:16,650
I'd want to be able to to show it off to

01:06:13,620 --> 01:06:19,860
lovely people like you with live demos

01:06:16,650 --> 01:06:21,270
so that really wasn't going to work it

01:06:19,860 --> 01:06:23,220
was then that trinket attire was

01:06:21,270 --> 01:06:27,150
mentioned to me by my code guru mother

01:06:23,220 --> 01:06:29,520
and I quickly decided to use that as I

01:06:27,150 --> 01:06:31,710
continued working though it became

01:06:29,520 --> 01:06:34,350
apparent the library I was using SVG

01:06:31,710 --> 01:06:36,780
right was not supported and shrink added

01:06:34,350 --> 01:06:39,390
iron this meant that I had to look into

01:06:36,780 --> 01:06:42,450
the SVG file in sublime text and figure

01:06:39,390 --> 01:06:44,970
out what I could reverse-engineer most

01:06:42,450 --> 01:06:47,520
basically what's inside an SVG file is

01:06:44,970 --> 01:06:49,440
text and I had experience manipulating

01:06:47,520 --> 01:06:51,810
text files from the N CSS challenge that

01:06:49,440 --> 01:06:53,940
I do every year so to get this to work

01:06:51,810 --> 01:06:56,850
I made a graph with my original code and

01:06:53,940 --> 01:06:59,550
analyzed how the lines were drawn by

01:06:56,850 --> 01:07:01,860
rendering but by reading the SVG in a

01:06:59,550 --> 01:07:03,690
text editor I then had to make my

01:07:01,860 --> 01:07:06,030
program loop through the equation and

01:07:03,690 --> 01:07:09,240
input the x and y values of the points

01:07:06,030 --> 01:07:12,900
into it into a really long string and

01:07:09,240 --> 01:07:14,760
then put that back into the file ok now

01:07:12,900 --> 01:07:17,100
I've done some explaining let's take it

01:07:14,760 --> 01:07:18,930
for a spin I will do some basic showing

01:07:17,100 --> 01:07:20,940
off on my program and then take some

01:07:18,930 --> 01:07:23,810
requests but please nothing that could

01:07:20,940 --> 01:07:23,810
cause Python to crash

01:07:31,880 --> 01:07:49,349
okay I'm done okay sir yeah okay um so I

01:07:44,760 --> 01:07:52,050
have inflated two different ways to to

01:07:49,349 --> 01:07:56,819
input the equation and reverse polish

01:07:52,050 --> 01:08:04,800
notation and usual so I'm gonna start

01:07:56,819 --> 01:08:08,730
with no problem I had when trying to

01:08:04,800 --> 01:08:11,010
input my um input my graphs was I I was

01:08:08,730 --> 01:08:13,470
tied at the time and forgot that you had

01:08:11,010 --> 01:08:16,520
to do double asterisk for powers and so

01:08:13,470 --> 01:08:19,949
I'd done something like this and it does

01:08:16,520 --> 01:08:27,540
does give a result however it's really

01:08:19,949 --> 01:08:29,310
not the result you'd expect and so after

01:08:27,540 --> 01:08:38,429
looking at that a bit and possibly

01:08:29,310 --> 01:08:39,569
sleeping I quickly I quickly figured out

01:08:38,429 --> 01:08:43,679
that had to do this

01:08:39,569 --> 01:08:48,239
I have implemented a scale into my arm

01:08:43,679 --> 01:08:50,910
in my code so that some codes will some

01:08:48,239 --> 01:08:54,569
equations will look small and not be

01:08:50,910 --> 01:09:00,589
very um not be easily not be easier to

01:08:54,569 --> 01:09:03,330
see and the scale can fix that

01:09:00,589 --> 01:09:06,299
just some to simply show off the scale

01:09:03,330 --> 01:09:14,660
I'll do exactly that one again but with

01:09:06,299 --> 01:09:21,449
a different scale if I double the scale

01:09:14,660 --> 01:09:26,299
the the line will look more jerky but it

01:09:21,449 --> 01:09:26,299
will be more pronounced okay

01:09:28,930 --> 01:09:35,060
now to do some simple ones in reverse

01:09:32,420 --> 01:09:42,410
polish notation which I have a slight

01:09:35,060 --> 01:09:43,910
grasp on the good thing about reverse

01:09:42,410 --> 01:09:45,830
polish notation is that I've implemented

01:09:43,910 --> 01:09:48,859
it in a way that I don't have to write

01:09:45,830 --> 01:09:56,660
double asterisk and so it even works

01:09:48,859 --> 01:10:07,880
when I'm tired and we get the same graph

01:09:56,660 --> 01:10:13,120
because I'm I just nicked need to

01:10:07,880 --> 01:10:13,120
quickly copy something from my notes

01:10:15,640 --> 01:10:27,370
yeah okay

01:10:28,900 --> 01:10:38,030
the scale is too big on this one so you

01:10:31,520 --> 01:10:41,150
can actually notice the difference this

01:10:38,030 --> 01:10:44,630
is taken from a this is taken from

01:10:41,150 --> 01:10:45,920
actually actual testing for the reverse

01:10:44,630 --> 01:10:47,630
polish notation module that have

01:10:45,920 --> 01:10:49,900
implemented from different code that

01:10:47,630 --> 01:10:49,900
I've done

01:10:51,920 --> 01:11:08,480
and now for the final one bleep up

01:10:55,370 --> 01:11:10,610
please do not break it does work but

01:11:08,480 --> 01:11:15,760
I've had to make it what oh I need a

01:11:10,610 --> 01:11:15,760
change scale sorry I forgot I'm smart so

01:11:20,620 --> 01:11:27,110
it does work but you'll see a strange

01:11:23,870 --> 01:11:29,150
dip in the middle because what I've done

01:11:27,110 --> 01:11:33,230
to make to avoid the division by zero

01:11:29,150 --> 01:11:35,900
error is it mentioned that if it's ever

01:11:33,230 --> 01:11:38,690
dividing by X and X is zero make the

01:11:35,900 --> 01:11:44,260
value 0 it means I don't have quite a

01:11:38,690 --> 01:11:48,260
very smooth curve as you'd expect and

01:11:44,260 --> 01:11:51,590
sir I'm gonna take one request from the

01:11:48,260 --> 01:12:01,180
audience for a um for an equation if

01:11:51,590 --> 01:12:01,180
that's okay X cubed okay

01:12:08,869 --> 01:12:14,300
oops cubes sorry smart

01:12:26,610 --> 01:12:32,560
I'm gonna go with this hopefully this

01:12:28,990 --> 01:12:42,130
the scales big enough it is it doesn't

01:12:32,560 --> 01:13:03,370
go too badly okay now back to my slides

01:12:42,130 --> 01:13:05,520
give me a second one second I can do

01:13:03,370 --> 01:13:05,520
this

01:13:16,100 --> 01:13:18,880
oh I see

01:13:22,800 --> 01:13:28,400
okay Oh nope I'm smart

01:13:36,650 --> 01:13:58,670
it's working amazing okay okay okay so

01:13:57,470 --> 01:14:00,410
now I know this isn't the perfect

01:13:58,670 --> 01:14:02,690
project there's still couple of things

01:14:00,410 --> 01:14:04,430
that I'd like to do so now I'm gonna

01:14:02,690 --> 01:14:07,040
tell you where I'm going with this and

01:14:04,430 --> 01:14:09,440
how I'd like to improve this project in

01:14:07,040 --> 01:14:10,670
concept graphs shouldn't just be done

01:14:09,440 --> 01:14:13,520
with equations you should be able to

01:14:10,670 --> 01:14:15,250
plot points on the graph and use those

01:14:13,520 --> 01:14:18,440
to make a line to show daughter with

01:14:15,250 --> 01:14:20,210
another addition I could make could add

01:14:18,440 --> 01:14:26,270
to make a more fun would be to be able

01:14:20,210 --> 01:14:30,770
to change the color of the line change

01:14:26,270 --> 01:14:32,180
the color of the line a suggestion I've

01:14:30,770 --> 01:14:36,290
had it would be to try and recreate

01:14:32,180 --> 01:14:38,450
Python total module badly of course this

01:14:36,290 --> 01:14:46,940
sounds really fun and difficult and we

01:14:38,450 --> 01:14:48,920
make use of my newfound skills okay so

01:14:46,940 --> 01:14:51,050
there is what if there's one lesson to

01:14:48,920 --> 01:14:52,820
take from this it's that I just found

01:14:51,050 --> 01:14:55,070
something and copied it and I think

01:14:52,820 --> 01:14:57,290
that's a great lesson for life so anyone

01:14:55,070 --> 01:14:58,430
looking for inspiration copy something

01:14:57,290 --> 01:15:01,160
useful or even something completely

01:14:58,430 --> 01:15:02,390
unuseful just copy it and have a haven't

01:15:01,160 --> 01:15:06,980
play around and you'll learn some useful

01:15:02,390 --> 01:15:09,110
skills along the way okay the speech is

01:15:06,980 --> 01:15:17,360
actually finished now but I have time

01:15:09,110 --> 01:15:19,520
for a question or two excellent

01:15:17,360 --> 01:15:24,410
excellent work Sam all right so we need

01:15:19,520 --> 01:15:26,390
a question for Sam and Ain come and get

01:15:24,410 --> 01:15:36,920
your slides up a question for Sam

01:15:26,390 --> 01:15:40,120
excellent is there a limit on the number

01:15:36,920 --> 01:15:43,460
of terms you can have in the equation

01:15:40,120 --> 01:15:45,950
yes I believe you can only I've only

01:15:43,460 --> 01:15:47,390
tested with X I believe you can actually

01:15:45,950 --> 01:15:49,130
know yet my code makes it so that you

01:15:47,390 --> 01:15:56,240
can only run it with X

01:15:49,130 --> 01:15:58,550
as a pronoun more for them yeah you

01:15:56,240 --> 01:15:59,870
could show that so good sorry for the

01:15:58,550 --> 01:16:06,410
recording so couldn't have x squared

01:15:59,870 --> 01:16:08,540
plus 2x plus 7 plus X cubed plus there

01:16:06,410 --> 01:16:09,920
is not you could do that as many times

01:16:08,540 --> 01:16:11,780
as you want as long as you don't exceed

01:16:09,920 --> 01:16:15,590
the number limit for Python which is

01:16:11,780 --> 01:16:22,810
possibility safe though

01:16:15,590 --> 01:16:24,980
thank you very much Sam all right

01:16:22,810 --> 01:16:28,850
excellent

01:16:24,980 --> 01:16:34,460
next up second blast

01:16:28,850 --> 01:16:38,110
we have enfant from Canberra n is in

01:16:34,460 --> 01:16:42,800
year 12 and he's going to talk about

01:16:38,110 --> 01:16:46,670
fire so excited all right Thank You Ann

01:16:42,800 --> 01:16:49,190
hello everyone today I'm going to

01:16:46,670 --> 01:16:51,530
present about emoji fire and it is a

01:16:49,190 --> 01:16:55,700
machine learning implementation which

01:16:51,530 --> 01:16:58,730
will give sentence and emoji you guys

01:16:55,700 --> 01:17:04,310
could share of the project on github and

01:16:58,730 --> 01:17:06,380
then yes my github and if you want to

01:17:04,310 --> 01:17:09,260
contribute to the project just do a pull

01:17:06,380 --> 01:17:17,410
request and I'll reveal it all right so

01:17:09,260 --> 01:17:20,030
let's get started I say destroy my

01:17:17,410 --> 01:17:22,370
algorithm could give a sentence and

01:17:20,030 --> 01:17:25,310
image based on the sentiment or the

01:17:22,370 --> 01:17:27,020
context of a sentence so for those of

01:17:25,310 --> 01:17:29,240
you who are worried about the tone if I

01:17:27,020 --> 01:17:32,990
I would take up the world like Elon Musk

01:17:29,240 --> 01:17:35,060
of Mexico but don't worry about like it

01:17:32,990 --> 01:17:38,360
just took an IQ test yesterday and then

01:17:35,060 --> 01:17:38,750
statistically it has an IQ of lesson

01:17:38,360 --> 01:17:42,050
three

01:17:38,750 --> 01:17:46,010
so it's 11 s Mary Scott anniversary and

01:17:42,050 --> 01:17:50,870
your coloring is done so oh my name is

01:17:46,010 --> 01:17:58,150
my Twitter and my github handler in case

01:17:50,870 --> 01:18:01,240
if anyone wants to follow me and I'm in

01:17:58,150 --> 01:18:02,780
senior arkin collin college and a my

01:18:01,240 --> 01:18:05,330
reactor for

01:18:02,780 --> 01:18:08,180
about yeah now but just for freelancing

01:18:05,330 --> 01:18:12,610
and I'm really into web development in

01:18:08,180 --> 01:18:15,590
which a learning in design stuff so

01:18:12,610 --> 01:18:17,330
image files available under two networks

01:18:15,590 --> 01:18:20,510
the first one is recurrent neural

01:18:17,330 --> 01:18:23,210
networks and long short-term memory

01:18:20,510 --> 01:18:28,130
works which is another advanced model of

01:18:23,210 --> 01:18:31,760
recurrence intervals but I will not go

01:18:28,130 --> 01:18:34,160
into details of how it works and yeah

01:18:31,760 --> 01:18:36,200
because it took me two years learning it

01:18:34,160 --> 01:18:42,650
I can't just explain what stuff in ten

01:18:36,200 --> 01:18:44,840
minutes talk okay so I've used obvious

01:18:42,650 --> 01:18:47,750
all right so I've used Cara's and flask

01:18:44,840 --> 01:18:51,340
forbidding image file so just a bit of

01:18:47,750 --> 01:18:57,440
survey who here use care us before

01:18:51,340 --> 01:19:05,720
probably our patent ok I'm in the right

01:18:57,440 --> 01:19:07,760
audience yeah cross is simple easy to

01:19:05,720 --> 01:19:11,990
use you learn once you write it

01:19:07,760 --> 01:19:15,640
especially like you learn in Python and

01:19:11,990 --> 01:19:21,910
you can write in JavaScript or C C++

01:19:15,640 --> 01:19:29,330
Nazis which of si+ well and with flask

01:19:21,910 --> 01:19:32,870
it is I I can live breathe but it's a

01:19:29,330 --> 01:19:36,950
library for developing packin in Python

01:19:32,870 --> 01:19:41,320
and yeah it is simple to use a squirrel

01:19:36,950 --> 01:19:45,200
like I'm Mike on the server for user to

01:19:41,320 --> 01:19:47,240
fetching I'm fetching data from for

01:19:45,200 --> 01:19:50,030
emoji file in less than ten lines of

01:19:47,240 --> 01:19:51,800
code so here's a coat of emoji file

01:19:50,030 --> 01:19:53,870
I'm sort of quickly go through the

01:19:51,800 --> 01:19:58,900
courts you prove you guys how simple it

01:19:53,870 --> 01:20:01,040
is to use kiosk with machining stuff so

01:19:58,900 --> 01:20:03,710
first of all why do you find the model

01:20:01,040 --> 01:20:06,760
and just a bunch of young arguments you

01:20:03,710 --> 01:20:09,620
don't need to care about and then you

01:20:06,760 --> 01:20:12,860
get a sentence and then you input a

01:20:09,620 --> 01:20:15,110
sentence in the model and then you just

01:20:12,860 --> 01:20:16,320
love the embedding layer so what every

01:20:15,110 --> 01:20:20,579
layer is

01:20:16,320 --> 01:20:23,150
convert Horace I am covets what's in two

01:20:20,579 --> 01:20:26,340
vectors of numbers per se

01:20:23,150 --> 01:20:28,290
mainly because commuters can read it was

01:20:26,340 --> 01:20:31,469
so we have to convert them into binaries

01:20:28,290 --> 01:20:33,540
which is numbers and then you define the

01:20:31,469 --> 01:20:38,389
first layer of the motor with drop of

01:20:33,540 --> 01:20:41,250
0-5 so you would have different types of

01:20:38,389 --> 01:20:43,590
layer depending on what types of a

01:20:41,250 --> 01:20:47,520
course you're using and drop we make the

01:20:43,590 --> 01:20:49,560
model to have real life experience or

01:20:47,520 --> 01:20:55,349
like make the motor be to be practical

01:20:49,560 --> 01:20:57,420
and in second layer over five and dense

01:20:55,349 --> 01:21:00,780
layer and just get upward through a

01:20:57,420 --> 01:21:04,199
sophomore function which we be learning

01:21:00,780 --> 01:21:07,739
through car in jamaat's class or just

01:21:04,199 --> 01:21:10,849
yeah and Ukrainian border instance and

01:21:07,739 --> 01:21:14,310
return it and then our width flask I

01:21:10,849 --> 01:21:16,860
learned flask through this I learned

01:21:14,310 --> 01:21:21,329
flask from this book of flask web dev

01:21:16,860 --> 01:21:23,880
web development and our class spent

01:21:21,329 --> 01:21:29,849
three months reading his book then we

01:21:23,880 --> 01:21:32,690
had to build a complete up and then we

01:21:29,849 --> 01:21:36,869
had to build a block of it and yeah and

01:21:32,690 --> 01:21:40,530
he's the author of this book is me major

01:21:36,869 --> 01:21:44,849
Greenberg and yeah he's a lovely

01:21:40,530 --> 01:21:48,540
American guy here even though I haven't

01:21:44,849 --> 01:21:51,599
met him before in real life but you know

01:21:48,540 --> 01:21:55,590
since he's American so we all assume

01:21:51,599 --> 01:22:02,010
he's so nice and friendly isn't just the

01:21:55,590 --> 01:22:06,179
stuff okay so let's go to the demo could

01:22:02,010 --> 01:22:10,790
anyone quiz it could anyone give me a

01:22:06,179 --> 01:22:14,760
sentence give me something I can is a

01:22:10,790 --> 01:22:16,469
pack on rocks alright if it knows the

01:22:14,760 --> 01:22:18,710
word pecans are not because it's not in

01:22:16,469 --> 01:22:18,710
the dictionary

01:22:19,139 --> 01:22:25,260
okay Oh patterned rocks all right yeah

01:22:25,530 --> 01:22:34,030
missing that oh yeah and then you just

01:22:30,219 --> 01:22:35,739
need the number of emoji seek one at the

01:22:34,030 --> 01:22:38,710
end of the sentence and then just click

01:22:35,739 --> 01:22:41,650
on get emojis it would take quite a

01:22:38,710 --> 01:22:44,260
while because myself is cephalus so when

01:22:41,650 --> 01:22:46,560
you're making the request of several we

01:22:44,260 --> 01:23:00,239
work the server up and then we

01:22:46,560 --> 01:23:00,239
initialize oh okay all right okay

01:23:01,619 --> 01:23:07,030
choo choo all right so listen I'll make

01:23:04,449 --> 01:23:09,550
you a fire so best way to learn is to

01:23:07,030 --> 01:23:11,230
teach so when you teach someone on the

01:23:09,550 --> 01:23:14,860
actual and twice because you got a like

01:23:11,230 --> 01:23:17,260
Rita make sure you want to teacher like

01:23:14,860 --> 01:23:19,989
it's a record where they first learn

01:23:17,260 --> 01:23:22,179
machine learning I heard she liked as

01:23:19,989 --> 01:23:23,889
many friends as possible till my

01:23:22,179 --> 01:23:25,360
chilling with me because I could teach

01:23:23,889 --> 01:23:29,320
you something alright

01:23:25,360 --> 01:23:33,670
and jump in headfirst what a miniature

01:23:29,320 --> 01:23:35,949
he was also pick a project you want to

01:23:33,670 --> 01:23:40,840
do and then just stick with it for the

01:23:35,949 --> 01:23:43,719
rest of approving career is exaggerating

01:23:40,840 --> 01:23:45,869
and when you whenever you learn new

01:23:43,719 --> 01:23:49,659
things this joy applies those new things

01:23:45,869 --> 01:23:51,369
into that project as in emoji fire this

01:23:49,659 --> 01:23:53,920
project I did two years ago

01:23:51,369 --> 01:23:56,889
um maybe one year and a half when I was

01:23:53,920 --> 01:24:00,760
learning pattern in crock learning um so

01:23:56,889 --> 01:24:05,469
essentially you input in a world in any

01:24:00,760 --> 01:24:08,710
way give that word either sad facts or

01:24:05,469 --> 01:24:11,320
smile if I so I just mostly knows your

01:24:08,710 --> 01:24:14,290
effects depending on the sentiment score

01:24:11,320 --> 01:24:16,630
the world if the gourd has positive

01:24:14,290 --> 01:24:23,590
seven positive sentiment score then it

01:24:16,630 --> 01:24:27,909
will output smile effects if it has a

01:24:23,590 --> 01:24:30,670
zero score would be energy of ice and in

01:24:27,909 --> 01:24:31,980
the end the rest is the surface all

01:24:30,670 --> 01:24:38,080
right so

01:24:31,980 --> 01:24:40,420
pairing I'm a huge huge okay I'm a huge

01:24:38,080 --> 01:24:43,260
huge you find a pair for me like it's

01:24:40,420 --> 01:24:45,520
just so great to everybody

01:24:43,260 --> 01:24:47,740
it's just so great to everybody's

01:24:45,520 --> 01:24:50,470
sitting next to you to be able to ask

01:24:47,740 --> 01:24:51,400
questions and they learn how like right

01:24:50,470 --> 01:24:53,890
the syntax

01:24:51,400 --> 01:24:56,490
learn how they write their code and copy

01:24:53,890 --> 01:24:56,490
code from them

01:24:56,640 --> 01:25:05,620
yeah and second flow is the best

01:25:01,390 --> 01:25:08,710
programming community just yes sure and

01:25:05,620 --> 01:25:11,260
oh yeah just child answering questions

01:25:08,710 --> 01:25:13,360
reading questions every day you can and

01:25:11,260 --> 01:25:16,110
yeah to be honest if it were not for

01:25:13,360 --> 01:25:20,080
stuck below I couldn't even passing my

01:25:16,110 --> 01:25:28,300
IT classes alright thank you

01:25:20,080 --> 01:25:30,700
sorry you have any pet Thank You that's

01:25:28,300 --> 01:25:33,220
that's a risky thing to say that you

01:25:30,700 --> 01:25:39,220
wouldn't be passing your class knowing

01:25:33,220 --> 01:25:42,610
your teachers in the room living living

01:25:39,220 --> 01:25:47,200
dangerously all right could we get the

01:25:42,610 --> 01:25:49,420
last group up on deck as we have a

01:25:47,200 --> 01:25:49,960
question do we have an emerging emerging

01:25:49,420 --> 01:25:52,510
fire

01:25:49,960 --> 01:25:56,230
everyone loves in what you do yes up the

01:25:52,510 --> 01:26:04,630
back shout it out yep yep I'll repeat it

01:25:56,230 --> 01:26:07,720
Oh obviously for the recording where did

01:26:04,630 --> 01:26:09,130
you get the data to train the program to

01:26:07,720 --> 01:26:12,480
train the neuron that way so here's some

01:26:09,130 --> 01:26:18,610
statistic about my voice so currently

01:26:12,480 --> 01:26:24,520
the accuracy for the training it is 90

01:26:18,610 --> 01:26:25,210
percent and for real-life data is 80

01:26:24,520 --> 01:26:28,240
percent

01:26:25,210 --> 01:26:31,210
um 70 to 80 percent so it is under

01:26:28,240 --> 01:26:36,240
feeling now but with that sharing data

01:26:31,210 --> 01:26:42,100
I'm it has two thousand sentences and I

01:26:36,240 --> 01:26:45,370
made up all of them so that your emoji

01:26:42,100 --> 01:26:49,270
responses to the two wheel manually

01:26:45,370 --> 01:26:53,250
yeah it's really so sighs you're an

01:26:49,270 --> 01:26:56,170
emoji expert that's fantastic

01:26:53,250 --> 01:27:10,960
excellent dedicated dedicated student

01:26:56,170 --> 01:27:16,660
thank you very much aim all right our

01:27:10,960 --> 01:27:19,690
last presentation is three students

01:27:16,660 --> 01:27:22,920
presenting one thing so there's going to

01:27:19,690 --> 01:27:30,150
be a bit of Mike passing back and forth

01:27:22,920 --> 01:27:35,290
we have okay sure Hayden Pulford yes

01:27:30,150 --> 01:27:36,550
William may brush my gosh sorry we

01:27:35,290 --> 01:27:38,080
should have done this earlier but I was

01:27:36,550 --> 01:27:40,420
too distracted by the things you're

01:27:38,080 --> 01:27:42,850
going to show you later and Victor

01:27:40,420 --> 01:27:46,090
Hobart and they are in there from

01:27:42,850 --> 01:27:57,100
Canberra and they are in year 12 thank

01:27:46,090 --> 01:28:00,310
you very much good evening everyone my

01:27:57,100 --> 01:28:03,550
name is Zane bolted William Abel sure

01:28:00,310 --> 01:28:05,590
and Big Daddy just heard and so for the

01:28:03,550 --> 01:28:08,770
last term or so we've been working on a

01:28:05,590 --> 01:28:17,140
project called Paiva loves dog named

01:28:08,770 --> 01:28:19,720
after Pavlov's dog and so the whole

01:28:17,140 --> 01:28:21,610
purpose of this project was to help

01:28:19,720 --> 01:28:24,160
ourselves understand the concept of

01:28:21,610 --> 01:28:26,770
neural networks now neural networks are

01:28:24,160 --> 01:28:29,950
not necessarily the most intuitive idea

01:28:26,770 --> 01:28:33,190
and so we learned this through the

01:28:29,950 --> 01:28:35,950
metaphor of training a dog a dog if you

01:28:33,190 --> 01:28:37,270
want it to not be on the rug you take it

01:28:35,950 --> 01:28:38,740
outside if when it goes on the rug and

01:28:37,270 --> 01:28:40,240
eventually it learns that for wants to

01:28:38,740 --> 01:28:42,970
stay inside and it doesn't go on the

01:28:40,240 --> 01:28:45,100
rock and so we took a similar similar

01:28:42,970 --> 01:28:48,580
philosophy in regards to training our

01:28:45,100 --> 01:28:49,630
neural network and so the other purpose

01:28:48,580 --> 01:28:52,540
of this project is to demonstrate

01:28:49,630 --> 01:28:56,490
classical conditioning in reference to

01:28:52,540 --> 01:28:56,490
Paiva love that guy up there

01:28:57,330 --> 01:29:04,200
so for our project we used a lot of

01:29:00,900 --> 01:29:07,530
libraries for the simulation and the GUI

01:29:04,200 --> 01:29:09,540
we use taken two pi monk Copiah game the

01:29:07,530 --> 01:29:13,230
ast library which I'll never remember

01:29:09,540 --> 01:29:15,660
that stands for and math and for the dog

01:29:13,230 --> 01:29:18,210
creation kit which is another part of

01:29:15,660 --> 01:29:20,850
our software group we've got we used

01:29:18,210 --> 01:29:28,680
pill and OS and for the neural network

01:29:20,850 --> 01:29:31,920
we were using random and numpy um neural

01:29:28,680 --> 01:29:33,810
networks wouldn't your network simulate

01:29:31,920 --> 01:29:37,080
the inputs and outputs that are modeled

01:29:33,810 --> 01:29:38,820
from human learning processes the input

01:29:37,080 --> 01:29:40,740
from the human brain

01:29:38,820 --> 01:29:43,530
they range anything from the extensive

01:29:40,740 --> 01:29:47,310
amount of nerves to the visual and the

01:29:43,530 --> 01:29:49,530
audio sensory and they express their

01:29:47,310 --> 01:29:53,040
outputs through actions thoughts and

01:29:49,530 --> 01:30:00,810
emotions pi valves dog has a left and

01:29:53,040 --> 01:30:02,610
right motor as our outputs these outputs

01:30:00,810 --> 01:30:04,500
that are determined by the readings from

01:30:02,610 --> 01:30:06,480
the three ultrasonic sensors the two

01:30:04,500 --> 01:30:09,840
light dependent resistors and a bias

01:30:06,480 --> 01:30:12,300
unit the inputs are multiplied through a

01:30:09,840 --> 01:30:14,100
matrix to produce the output and which

01:30:12,300 --> 01:30:16,980
is ultimately sent to the motor as a

01:30:14,100 --> 01:30:19,650
data in between each of the nodes the

01:30:16,980 --> 01:30:22,050
neural networks has weights to determine

01:30:19,650 --> 01:30:24,420
the thinking process when the way to

01:30:22,050 --> 01:30:26,580
when the output is reached it is

01:30:24,420 --> 01:30:28,650
compared to the data array of the out of

01:30:26,580 --> 01:30:30,450
the inputs and the outputs and the

01:30:28,650 --> 01:30:34,830
network initiates the back propagation

01:30:30,450 --> 01:30:37,170
algorithm to basically train and learn

01:30:34,830 --> 01:30:40,140
from its previous mistakes the back

01:30:37,170 --> 01:30:42,980
propagation works backwards through the

01:30:40,140 --> 01:30:45,060
weights corrugating them to align the

01:30:42,980 --> 01:30:51,600
actual output with the desired output

01:30:45,060 --> 01:30:54,090
from our training data so there are

01:30:51,600 --> 01:30:56,100
several components of our project and

01:30:54,090 --> 01:30:59,310
the best way to outline this is to go

01:30:56,100 --> 01:31:01,650
through a use case so the whole purpose

01:30:59,310 --> 01:31:04,260
of the simulation component of the

01:31:01,650 --> 01:31:07,410
project is to train the network for the

01:31:04,260 --> 01:31:10,230
physical robot so the average user will

01:31:07,410 --> 01:31:11,159
start off in the dog creation kit where

01:31:10,230 --> 01:31:12,689
you put the components

01:31:11,159 --> 01:31:15,090
of the dog together now this could be

01:31:12,689 --> 01:31:18,539
chassis the wheels on the left and right

01:31:15,090 --> 01:31:21,869
side bump sensors LD ours that sort of

01:31:18,539 --> 01:31:23,340
thing and so after you've done that you

01:31:21,869 --> 01:31:24,539
flagged them for the certain types of

01:31:23,340 --> 01:31:26,429
collision they are so for instance an

01:31:24,539 --> 01:31:29,550
LDR will collide with them with a light

01:31:26,429 --> 01:31:32,400
object and then this dog that has been

01:31:29,550 --> 01:31:34,050
created is dropped into the simulation

01:31:32,400 --> 01:31:37,229
environment where you can see a

01:31:34,050 --> 01:31:39,599
screenshot of it up there the simulation

01:31:37,229 --> 01:31:40,530
environment is constructed but is by the

01:31:39,599 --> 01:31:42,559
user

01:31:40,530 --> 01:31:45,209
with objects that they create themselves

01:31:42,559 --> 01:31:50,550
and these objects are able to interact

01:31:45,209 --> 01:31:52,469
with the parts of the dock and be up

01:31:50,550 --> 01:31:56,010
before the simulation is started the

01:31:52,469 --> 01:31:57,239
user also creates a rule set so hands up

01:31:56,010 --> 01:32:01,860
who here has played the original Dragon

01:31:57,239 --> 01:32:04,079
Age explained one person is an excellent

01:32:01,860 --> 01:32:06,809
success rate all right so for ever for

01:32:04,079 --> 01:32:08,969
everyone else in the room you can create

01:32:06,809 --> 01:32:10,650
a rule set for what happens under

01:32:08,969 --> 01:32:13,079
certain circumstances for your party

01:32:10,650 --> 01:32:14,789
members so for instance when you enter

01:32:13,079 --> 01:32:16,409
into a battle you can have a party

01:32:14,789 --> 01:32:18,719
member drink a certain potion for that

01:32:16,409 --> 01:32:22,499
sort of thing and so these are formatted

01:32:18,719 --> 01:32:24,840
in this cases since a is a certain value

01:32:22,499 --> 01:32:26,309
so for instance an LDR is activated then

01:32:24,840 --> 01:32:27,929
you either punish or reward the dog and

01:32:26,309 --> 01:32:29,820
so that is fed back into the network

01:32:27,929 --> 01:32:31,409
when it's actually running it so you run

01:32:29,820 --> 01:32:33,449
the environment and you let the network

01:32:31,409 --> 01:32:35,400
go and train and when you're satisfied

01:32:33,449 --> 01:32:43,650
with the Saylor Network you throw it

01:32:35,400 --> 01:32:46,229
into the robot this is basically just

01:32:43,650 --> 01:32:48,239
some of the circuitry that the motors

01:32:46,229 --> 01:32:51,300
relied on in order to work well when

01:32:48,239 --> 01:32:52,769
they did work so we've got the Arduino

01:32:51,300 --> 01:32:54,869
and that's giving the signals to the

01:32:52,769 --> 01:32:56,789
head bridges and those are the huge

01:32:54,869 --> 01:32:59,820
components to the left and second from

01:32:56,789 --> 01:33:01,110
the right yeah and so the motors are

01:32:59,820 --> 01:33:03,539
running through that and that's because

01:33:01,110 --> 01:33:06,030
the Arduino can't output enough power

01:33:03,539 --> 01:33:10,800
for a regular motor to run so we use the

01:33:06,030 --> 01:33:14,039
hedge bridges to subsidise for that so

01:33:10,800 --> 01:33:16,459
this was our robot about 72 ish hours

01:33:14,039 --> 01:33:16,459
ago so

01:33:18,979 --> 01:33:24,030
so we've got the Raspberry Pi which is

01:33:22,050 --> 01:33:25,860
running the neural network at the very

01:33:24,030 --> 01:33:27,649
back it might be a bit hard to see at

01:33:25,860 --> 01:33:30,389
this angle now that I actually see it

01:33:27,649 --> 01:33:31,889
we've got the Arduino you know which is

01:33:30,389 --> 01:33:34,019
in the middle and that's taking in the

01:33:31,889 --> 01:33:37,409
sensor inputs and it's also giving out

01:33:34,019 --> 01:33:41,280
the component outputs so that'll be our

01:33:37,409 --> 01:33:45,269
motors and then we've got the IC which

01:33:41,280 --> 01:33:54,749
is taking the Arduino outputs and then

01:33:45,269 --> 01:33:58,019
running it to the motors so um as is

01:33:54,749 --> 01:34:03,300
customary when making anything things go

01:33:58,019 --> 01:34:09,539
wrong and there's not really a limit to

01:34:03,300 --> 01:34:11,280
what went wrong here so now we'll start

01:34:09,539 --> 01:34:13,889
the list so as far as hardware problems

01:34:11,280 --> 01:34:15,689
go as it turns out laser cutters are

01:34:13,889 --> 01:34:17,820
really hard to use if you accidentally

01:34:15,689 --> 01:34:22,530
use inches instead of millimeters as

01:34:17,820 --> 01:34:24,649
your unit of measurement as someone

01:34:22,530 --> 01:34:27,959
that's grown up using the metric system

01:34:24,649 --> 01:34:31,829
it was a little bit of a setback um also

01:34:27,959 --> 01:34:36,889
if you spill water all over your

01:34:31,829 --> 01:34:36,889
teammates laptop about three hours ago

01:34:37,399 --> 01:34:44,280
that also doesn't tend to do a lot of

01:34:39,510 --> 01:34:47,070
good another thing is the batteries die

01:34:44,280 --> 01:34:50,099
we were using 9-volt batteries for power

01:34:47,070 --> 01:34:53,209
and then what and so we measured them at

01:34:50,099 --> 01:34:55,979
about eight point six one volts ish and

01:34:53,209 --> 01:34:59,280
then about 40 minutes later they were

01:34:55,979 --> 01:35:00,840
down about a volt this was done though

01:34:59,280 --> 01:35:03,090
while they weren't actually in a circuit

01:35:00,840 --> 01:35:05,729
so they just drained all that power out

01:35:03,090 --> 01:35:06,749
of nowhere it might be because the

01:35:05,729 --> 01:35:08,129
batteries are three years old and

01:35:06,749 --> 01:35:14,070
because we're too cheap to buy new ones

01:35:08,129 --> 01:35:16,829
but yeah so that happened and the other

01:35:14,070 --> 01:35:19,349
things would be that 3d printing takes

01:35:16,829 --> 01:35:21,599
forever printing about half of it took

01:35:19,349 --> 01:35:24,329
around five weeks of the school 3d

01:35:21,599 --> 01:35:27,689
printers running 24/7 and then we also

01:35:24,329 --> 01:35:30,810
used mechatronics teachers 3d printer at

01:35:27,689 --> 01:35:32,790
home to print the rest of the tracks

01:35:30,810 --> 01:35:36,120
it printed a lot of linguini which

01:35:32,790 --> 01:35:38,340
although is not great for treads it

01:35:36,120 --> 01:35:43,050
tastes amazing and as far as where the

01:35:38,340 --> 01:35:45,180
treads are they demanded a ridiculous

01:35:43,050 --> 01:35:47,010
power draw from the motors so if we put

01:35:45,180 --> 01:35:53,910
the treads on then we can't actually run

01:35:47,010 --> 01:35:55,410
the motors so we took them off so we

01:35:53,910 --> 01:35:56,850
took them off but as it turns out the

01:35:55,410 --> 01:35:58,980
treads are a really important support

01:35:56,850 --> 01:36:00,930
feature of the wheels so if we then put

01:35:58,980 --> 01:36:07,080
the dog as it is on the ground the

01:36:00,930 --> 01:36:09,180
wheels will just snap off so if anyone's

01:36:07,080 --> 01:36:10,860
hesitating about wondering whether or

01:36:09,180 --> 01:36:13,200
not they should make whatever they've

01:36:10,860 --> 01:36:15,450
made from software into a hardware

01:36:13,200 --> 01:36:29,220
version I urge that you continue to

01:36:15,450 --> 01:36:32,040
hesitate and hardware issues weren't the

01:36:29,220 --> 01:36:33,840
end of our struggles so this entire

01:36:32,040 --> 01:36:35,910
thing was a learning process for us and

01:36:33,840 --> 01:36:38,370
there are a number of lessons to take

01:36:35,910 --> 01:36:41,480
away the first thing is don't have a

01:36:38,370 --> 01:36:45,510
plan as you go approach to creating your

01:36:41,480 --> 01:36:47,340
back-end because at first it may be able

01:36:45,510 --> 01:36:48,840
to go ahead quite smoothly but if you

01:36:47,340 --> 01:36:51,770
don't have a complete concrete

01:36:48,840 --> 01:36:54,420
understanding of the api's you're using

01:36:51,770 --> 01:36:58,670
it can become a mess very quickly and

01:36:54,420 --> 01:36:58,670
you can end up having to redo it twice

01:36:59,840 --> 01:37:05,850
and as well as this even though we have

01:37:03,030 --> 01:37:08,760
had roughly a term of continuous work on

01:37:05,850 --> 01:37:10,110
this project we've had to learn a lot of

01:37:08,760 --> 01:37:12,480
the api's that we're using from scratch

01:37:10,110 --> 01:37:15,690
and so in an example of this was PI monk

01:37:12,480 --> 01:37:19,050
which we use to handle the physics of

01:37:15,690 --> 01:37:20,580
the simulation software now the

01:37:19,050 --> 01:37:23,100
interesting thing about this is PI monk

01:37:20,580 --> 01:37:24,870
is designed for a 2d vertical physics

01:37:23,100 --> 01:37:26,520
simulation rather than a horizontal one

01:37:24,870 --> 01:37:28,590
and so we had to account for that

01:37:26,520 --> 01:37:30,780
because it does not have native support

01:37:28,590 --> 01:37:33,080
for wheels or similar things we had to

01:37:30,780 --> 01:37:35,790
come up with our own solutions for this

01:37:33,080 --> 01:37:37,770
and they aren't a hundred percent

01:37:35,790 --> 01:37:39,870
accurate but they are far better than

01:37:37,770 --> 01:37:42,690
anything we could have created without

01:37:39,870 --> 01:37:44,280
using a physics engine as well as this

01:37:42,690 --> 01:37:47,430
we at one point

01:37:44,280 --> 01:37:49,920
had our entire project in pygame in

01:37:47,430 --> 01:37:51,510
terms of the GUI and we had to move from

01:37:49,920 --> 01:37:54,420
that into a combination of my game and

01:37:51,510 --> 01:37:58,140
tkinter which also took time as we had

01:37:54,420 --> 01:38:00,420
to learn take into for that and so I

01:37:58,140 --> 01:38:02,160
think it's quite clear that there are a

01:38:00,420 --> 01:38:05,310
lot of areas for us to push further

01:38:02,160 --> 01:38:07,770
forward with this project it's not not

01:38:05,310 --> 01:38:09,420
so much of a question of what are you

01:38:07,770 --> 01:38:14,730
going to do is what aren't you going to

01:38:09,420 --> 01:38:16,050
do exactly and so we are going to we

01:38:14,730 --> 01:38:17,130
basically we're gonna push it to

01:38:16,050 --> 01:38:20,160
completion we're not going to give up on

01:38:17,130 --> 01:38:22,320
this project and we're going to polish

01:38:20,160 --> 01:38:24,690
it until we believe it's at a final

01:38:22,320 --> 01:38:26,370
product state and we're going to

01:38:24,690 --> 01:38:32,450
continue to extend its use cases into

01:38:26,370 --> 01:38:32,450
more and more dynamic States thank you

01:38:38,060 --> 01:38:45,210
thank you very much

01:38:41,040 --> 01:38:50,930
I I don't want to get too close to the

01:38:45,210 --> 01:38:50,930
robot just in case it falls over more

01:38:51,800 --> 01:39:03,060
questions do we have questions questions

01:38:56,250 --> 01:39:04,830
for Aiden William and Victor I know our

01:39:03,060 --> 01:39:07,190
colleagues from school were told not to

01:39:04,830 --> 01:39:09,960
ask questions but they're allowed to

01:39:07,190 --> 01:39:11,730
we've got a question from a colleague

01:39:09,960 --> 01:39:12,540
from a different school so that that's

01:39:11,730 --> 01:39:19,680
all right Jasper

01:39:12,540 --> 01:39:21,540
Oscar Oscar a and I were repeated what

01:39:19,680 --> 01:39:22,650
why is everyone so interested in neural

01:39:21,540 --> 01:39:24,630
networks and natural language processing

01:39:22,650 --> 01:39:29,160
I'm actually gonna take that question

01:39:24,630 --> 01:39:31,440
afterwards and and answer it but is

01:39:29,160 --> 01:39:34,250
there a question about the the pub yes

01:39:31,440 --> 01:39:34,250
all right at the back

01:39:37,180 --> 01:39:43,820
so it was what will be what you will be

01:39:40,100 --> 01:39:46,090
training the robot to do basically what

01:39:43,820 --> 01:39:48,860
it's told to do if you have a look

01:39:46,090 --> 01:39:50,690
that's it's the general case if you have

01:39:48,860 --> 01:39:53,270
a look at the screenshot of the GUI up

01:39:50,690 --> 01:39:55,910
there it's very hard to see at that

01:39:53,270 --> 01:39:56,900
resolution but there in the window

01:39:55,910 --> 01:39:59,030
that's floating in the middle of the

01:39:56,900 --> 01:40:00,530
green there's three tabs at the top of

01:39:59,030 --> 01:40:02,690
rules objects and simulator settings

01:40:00,530 --> 01:40:05,150
under the rules section the user creates

01:40:02,690 --> 01:40:07,880
their own rules and so that could be

01:40:05,150 --> 01:40:11,719
anything from if you're in light so if

01:40:07,880 --> 01:40:13,969
the LDR input is active then punish the

01:40:11,719 --> 01:40:24,620
doc so that it learns to not be in the

01:40:13,969 --> 01:40:25,700
light which lets out loud so thank you

01:40:24,620 --> 01:40:32,810
so much

01:40:25,700 --> 01:40:34,340
round of applause gentle random applause

01:40:32,810 --> 01:40:37,989
so that the reverberations don't cause

01:40:34,340 --> 01:40:40,280
the batteries to explode or something so

01:40:37,989 --> 01:40:44,960
we are going a matter and I'm going to

01:40:40,280 --> 01:40:47,719
do a quick roundup just to talk about

01:40:44,960 --> 01:40:51,320
this and their showcase a little bit

01:40:47,719 --> 01:40:54,040
more but if we could have all of the

01:40:51,320 --> 01:40:59,450
student presenters first to come on up

01:40:54,040 --> 01:41:02,600
I'm not gonna mug you instead instead we

01:40:59,450 --> 01:41:06,070
have some fantastic stickers for you all

01:41:02,600 --> 01:41:10,070
to take home and adorn your laptops or

01:41:06,070 --> 01:41:13,610
whichever rooms schooling's

01:41:10,070 --> 01:41:15,230
yeah if that's if that's what you want

01:41:13,610 --> 01:41:18,860
to do with your valuable stickers then

01:41:15,230 --> 01:41:22,910
absolutely we've actually because these

01:41:18,860 --> 01:41:26,270
students were so fantastic and stayed to

01:41:22,910 --> 01:41:29,060
time we've actually got time for another

01:41:26,270 --> 01:41:34,719
quick couple of questions as well if you

01:41:29,060 --> 01:41:38,180
wanted to throw back to any of the talks

01:41:34,719 --> 01:41:42,369
I was particularly harsh at proving only

01:41:38,180 --> 01:41:45,879
only one question before

01:41:42,369 --> 01:41:49,199
first cut talked Katrina can we have can

01:41:45,879 --> 01:41:51,820
we have another demo of the emoji fire I

01:41:49,199 --> 01:41:54,309
think we can have another demo of the

01:41:51,820 --> 01:42:02,530
emerg apply a yes but first let me up

01:41:54,309 --> 01:42:03,969
yep all right let's get a demo of the

01:42:02,530 --> 01:42:06,099
emerging I hang on there we go

01:42:03,969 --> 01:42:08,199
I think outing it's not working I like I

01:42:06,099 --> 01:42:10,269
just have a bunch of statements oh you

01:42:08,199 --> 01:42:19,989
were too fast so I couldn't get a photo

01:42:10,269 --> 01:42:32,800
of it before it's an important question

01:42:19,989 --> 01:42:38,530
how do i windows what one do you want to

01:42:32,800 --> 01:42:42,369
China what about something about the

01:42:38,530 --> 01:42:44,829
horrible weather right now Beast raining

01:42:42,369 --> 01:42:47,849
cats and dogs yes that sounds like a

01:42:44,829 --> 01:42:47,849
good a good one

01:42:53,879 --> 01:42:58,619
don't came up junk above

01:43:00,360 --> 01:43:06,130
[Applause]

01:43:03,630 --> 01:43:09,880
that is fantastic

01:43:06,130 --> 01:43:15,180
any other questions

01:43:09,880 --> 01:43:21,550
- Kiki first yeah hang on we'll run the

01:43:15,180 --> 01:43:25,510
mic to you thank you all so much

01:43:21,550 --> 01:43:27,190
firstly that was fantastic and I think

01:43:25,510 --> 01:43:29,590
for me that's gonna be a highlight of

01:43:27,190 --> 01:43:31,870
the conference this is a general

01:43:29,590 --> 01:43:33,970
question to all of you and some of you

01:43:31,870 --> 01:43:37,120
may not know the answer to this yet but

01:43:33,970 --> 01:43:40,060
I'm wondering how has the experience

01:43:37,120 --> 01:43:43,270
that you have had in creating these

01:43:40,060 --> 01:43:46,300
projects influenced what you are

01:43:43,270 --> 01:43:51,130
thinking about doing in future perhaps

01:43:46,300 --> 01:43:54,220
for a career no pressure or anything

01:43:51,130 --> 01:43:56,530
just just think about the hopes and

01:43:54,220 --> 01:43:59,140
dreams of all of your teachers as you

01:43:56,530 --> 01:44:03,940
answer this you know that it may be in

01:43:59,140 --> 01:44:05,560
the room so in my case I had already

01:44:03,940 --> 01:44:06,790
made up my mind where I wanted to go for

01:44:05,560 --> 01:44:07,900
university and where I wanted to go

01:44:06,790 --> 01:44:09,400
career-wise

01:44:07,900 --> 01:44:11,650
however I think the number one lesson

01:44:09,400 --> 01:44:13,480
I've learned from this is that when you

01:44:11,650 --> 01:44:15,070
throw yourself in the deep end you learn

01:44:13,480 --> 01:44:17,380
to swim a lot quicker so with

01:44:15,070 --> 01:44:20,380
programming if you paddle around with

01:44:17,380 --> 01:44:22,000
the easier questions for ages you don't

01:44:20,380 --> 01:44:24,490
develop the understanding you would if

01:44:22,000 --> 01:44:26,290
you were to take a long term project and

01:44:24,490 --> 01:44:29,380
that is something you can apply in

01:44:26,290 --> 01:44:31,150
almost any situation to basically

01:44:29,380 --> 01:44:34,030
stretch yourself as far as you can

01:44:31,150 --> 01:44:37,690
because it makes the smaller things a

01:44:34,030 --> 01:44:44,230
lot quicker to pick up does anyone else

01:44:37,690 --> 01:44:52,000
have something did you all learn

01:44:44,230 --> 01:44:56,290
anything else by the microphone there

01:44:52,000 --> 01:44:58,510
was one more question sorry I didn't

01:44:56,290 --> 01:45:02,080
have a good general question it was the

01:44:58,510 --> 01:45:04,030
young lady who did summarizing I was

01:45:02,080 --> 01:45:08,470
just blown away with that and I can

01:45:04,030 --> 01:45:10,720
imagine students in senior years wanting

01:45:08,470 --> 01:45:14,930
to drop their notes in from the class

01:45:10,720 --> 01:45:17,630
and have this program spit out a short

01:45:14,930 --> 01:45:26,560
summary and did you think about that

01:45:17,630 --> 01:45:26,560
when you were creating it yes

01:45:29,500 --> 01:45:34,170
[Laughter]

01:45:37,000 --> 01:45:49,280
great thank you all so much so it you

01:45:45,470 --> 01:45:50,780
may sit down collect collect your

01:45:49,280 --> 01:45:53,930
appropriate stickers you can take if

01:45:50,780 --> 01:45:57,710
you'd like to walk your robot around or

01:45:53,930 --> 01:46:07,010
the remains of your robot around but

01:45:57,710 --> 01:46:10,310
don't don't run away just yet for for

01:46:07,010 --> 01:46:14,240
the rest of you for the rest of you

01:46:10,310 --> 01:46:15,590
teachers and educators in the room what

01:46:14,240 --> 01:46:19,900
a matter and I just wanted to really

01:46:15,590 --> 01:46:23,780
quickly run through was why we decided

01:46:19,900 --> 01:46:26,720
to run this student showcase to last

01:46:23,780 --> 01:46:28,730
year we had a we were in the audience

01:46:26,720 --> 01:46:31,490
watching some of these fantastic talks

01:46:28,730 --> 01:46:34,130
including at PyCon including some talks

01:46:31,490 --> 01:46:37,580
from students and we really wanted to

01:46:34,130 --> 01:46:41,000
have a showcase to demonstrate the the

01:46:37,580 --> 01:46:44,330
range of projects and the range of

01:46:41,000 --> 01:46:48,830
things that the students are working on

01:46:44,330 --> 01:46:51,590
across Australia and we think that yep

01:46:48,830 --> 01:46:54,410
we think that Python is a fantastic

01:46:51,590 --> 01:46:58,250
learning language it's the language are

01:46:54,410 --> 01:47:01,460
I relearned after a long time away from

01:46:58,250 --> 01:47:03,830
programming so it's really accessible

01:47:01,460 --> 01:47:06,890
for the for the shallow end but then

01:47:03,830 --> 01:47:10,040
it's so extensible for these amazing

01:47:06,890 --> 01:47:12,080
projects it was really heartening to

01:47:10,040 --> 01:47:13,850
hear a lot of students talking about

01:47:12,080 --> 01:47:18,170
challenge taking so taking on some

01:47:13,850 --> 01:47:20,420
really challenging hard problems some of

01:47:18,170 --> 01:47:23,950
which were problematic and and exploded

01:47:20,420 --> 01:47:26,630
in miraculous fun ways but but that they

01:47:23,950 --> 01:47:28,699
had the confidence to do this

01:47:26,630 --> 01:47:31,070
having built on

01:47:28,699 --> 01:47:36,170
starting to learn to program in earlier

01:47:31,070 --> 01:47:37,429
years building on small resources that

01:47:36,170 --> 01:47:41,119
have been mentioned a million times

01:47:37,429 --> 01:47:44,630
today but starting small but but aiming

01:47:41,119 --> 01:47:47,690
at this I mean that the projects were

01:47:44,630 --> 01:47:50,179
from year 70 so I can't really say

01:47:47,690 --> 01:47:51,080
waiting until the the senior year to do

01:47:50,179 --> 01:47:54,800
amazing things

01:47:51,080 --> 01:47:56,900
ya know um we're really blown away we

01:47:54,800 --> 01:47:59,780
hope that all of you are and and all of

01:47:56,900 --> 01:48:03,260
the viewing audience are and if you you

01:47:59,780 --> 01:48:07,010
as a teacher as an educator want to find

01:48:03,260 --> 01:48:08,389
out about how you can start to develop

01:48:07,010 --> 01:48:10,909
these sorts of projects in your

01:48:08,389 --> 01:48:14,030
classroom yeah get in contact with us

01:48:10,909 --> 01:48:17,929
and we can SEO will help you do that and

01:48:14,030 --> 01:48:19,730
we can leverage the fantastic talent in

01:48:17,929 --> 01:48:21,440
the room of the teachers that that

01:48:19,730 --> 01:48:23,750
mentored these students but we can also

01:48:21,440 --> 01:48:26,600
we have resources that can help with

01:48:23,750 --> 01:48:28,250
that as well so a you can get in contact

01:48:26,600 --> 01:48:33,830
with us at the Australian computing

01:48:28,250 --> 01:48:35,380
Academy yep look us up the other

01:48:33,830 --> 01:48:38,659
question

01:48:35,380 --> 01:48:42,139
go Windows that was well time I was

01:48:38,659 --> 01:48:51,560
really well turned do we need to go back

01:48:42,139 --> 01:48:53,239
to the poop emoji sorry we we weren't

01:48:51,560 --> 01:48:56,300
specific despite the fact that I am

01:48:53,239 --> 01:49:00,320
actually a computational linguist I did

01:48:56,300 --> 01:49:03,500
not select for computation no it was

01:49:00,320 --> 01:49:08,090
Luke nor did I select not ad we select

01:49:03,500 --> 01:49:12,040
for neural networks but we were just

01:49:08,090 --> 01:49:15,230
blown away by the superbly amazing

01:49:12,040 --> 01:49:18,250
projects that are cutting edge things

01:49:15,230 --> 01:49:20,750
that have been developed by by students

01:49:18,250 --> 01:49:23,630
much like all the pike on this review

01:49:20,750 --> 01:49:26,239
process was anonymous so congratulations

01:49:23,630 --> 01:49:28,219
to all of you you are all fantastic and

01:49:26,239 --> 01:49:30,889
we're really looking forward to next

01:49:28,219 --> 01:49:33,730
year yeah making some really really

01:49:30,889 --> 01:49:37,280
highly decisions when we get a flood of

01:49:33,730 --> 01:49:39,920
student applications and I want I want

01:49:37,280 --> 01:49:41,249
the teachers to take away that you don't

01:49:39,920 --> 01:49:45,179
have to

01:49:41,249 --> 01:49:47,879
baby feed students you can drop support

01:49:45,179 --> 01:49:49,800
them in the deep end that they come up

01:49:47,879 --> 01:49:51,239
with some amazing things and learn a lot

01:49:49,800 --> 01:49:53,070
of things whether the project works or

01:49:51,239 --> 01:49:54,959
doesn't and yes you have to design your

01:49:53,070 --> 01:50:03,059
assessment guide so that if utter

01:49:54,959 --> 01:50:06,929
failure is other project failure then

01:50:03,059 --> 01:50:08,159
then you can reward the effort and the

01:50:06,929 --> 01:50:10,199
learning because that's the thing that's

01:50:08,159 --> 01:50:11,879
important yes so can we get one final

01:50:10,199 --> 01:50:17,189
massive round of applause for the effort

01:50:11,879 --> 01:50:27,119
and the warning super super dedicated

01:50:17,189 --> 01:50:29,219
teachers um that's it that's it so we

01:50:27,119 --> 01:50:32,340
had a closing slide the closing slide

01:50:29,219 --> 01:50:37,679
said thank you instead I will say thank

01:50:32,340 --> 01:50:40,559
you rather than risk more updates thank

01:50:37,679 --> 01:50:45,539
you all so much for joining us here in

01:50:40,559 --> 01:50:48,269
the Python education mini track at PyCon

01:50:45,539 --> 01:50:52,399
au 2018 whether you're here for one talk

01:50:48,269 --> 01:50:55,590
or the whole day stuck in a room with us

01:50:52,399 --> 01:50:56,579
Thank You Nick you're hiding up the back

01:50:55,590 --> 01:50:58,199
but thank you for the amazing work

01:50:56,579 --> 01:51:02,909
you've done thank you for the amazing

01:50:58,199 --> 01:51:08,219
support from PyCon yeah we are looking

01:51:02,909 --> 01:51:09,869
forward to yes sitting alongside you

01:51:08,219 --> 01:51:11,969
over the next two days listening to some

01:51:09,869 --> 01:51:13,860
more amazing talks and all of the

01:51:11,969 --> 01:51:17,309
speakers will most the speakers will be

01:51:13,860 --> 01:51:19,199
here on the weekend as well the other

01:51:17,309 --> 01:51:23,399
microphone has disappeared it's on the

01:51:19,199 --> 01:51:25,800
stage there so tap us on the shoulder

01:51:23,399 --> 01:51:27,179
tap the speakers on the shoulder if you

01:51:25,800 --> 01:51:30,599
have more questions that you didn't get

01:51:27,179 --> 01:51:33,030
to ask go up and ask them and remember

01:51:30,599 --> 01:51:36,030
the pac-man rule remember the pac-man

01:51:33,030 --> 01:51:37,860
rule that is still in place tomorrow and

01:51:36,030 --> 01:51:41,550
the next day and possibly even for the

01:51:37,860 --> 01:51:43,860
rest of your lives and I'm just gonna

01:51:41,550 --> 01:51:46,050
sneak in and say one Musti thank you to

01:51:43,860 --> 01:51:49,699
Nicky and Amanda

01:51:46,050 --> 01:51:49,699
[Applause]

01:51:50,309 --> 01:51:59,429
our absolute pleasure ah thank you I

01:51:55,530 --> 01:52:04,000
believe there will be loitering outside

01:51:59,429 --> 01:52:07,599
and the slack Channel has a place where

01:52:04,000 --> 01:52:12,239
you can go for dinners and stuff with

01:52:07,599 --> 01:52:12,239
people to talk about awesome things

01:52:13,640 --> 01:52:16,969

YouTube URL: https://www.youtube.com/watch?v=QNAgPjbn0Ws


